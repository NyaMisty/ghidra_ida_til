struct $096A9CEC9D0640E3594D0A52C8C05E40 {UINT versionNumber;UINT offset;};
enum $320585250961ABE9F4D068EEEC4E2CC6 {BIND_MAYBOTHERUSER = 0x1,BIND_JUSTTESTEXISTENCE = 0x2,};
struct $42792D5BBA08C54B20EEEC50F78E7D08 {ULONG ulReserved;LPSTR lpszSubject;LPSTR lpszNoteText;LPSTR lpszMessageType;LPSTR lpszDateReceived;LPSTR lpszConversationID;FLAGS flFlags;lpMapiRecipDesc lpOriginator;ULONG nRecipCount;lpMapiRecipDesc lpRecips;ULONG nFileCount;lpMapiFileDesc lpFiles;};
struct $549C1D5CD1C453772D3DFDF07CAC3EA1 {UINT mtOption;UINT mtID;char mtString[1];};
struct $925387C1A9AA03DD03B17550DEA320D0 {int wStructSize;int x;int y;int dx;int dy;int wMax;char rgchMember[2];};
struct $9811B5662EE51361168BFF08BB491D75 {int cbSize;LPCSTR lpszDocName;LPCSTR lpszOutput;};
struct $C7C46F6CCBD2CAD1FCFEC4764C87E3D1 {ULONG ulReserved;ULONG flFlags;ULONG nPosition;LPSTR lpszPathName;LPSTR lpszFileName;LPVOID lpFileType;};
struct $CB9F4276D477D4EDC30066925B58EE0F {ULONG ulReserved;ULONG ulRecipClass;LPSTR lpszName;LPSTR lpszAddress;ULONG ulEIDSize;LPVOID lpEntryID;};
typedef struct tagABC ABC;
typedef FARPROC ABORTPROC;
typedef enum tagADVF ADVF;
typedef __int32 ALC;
typedef LRESULT (__pascal __far far *APPLET_PROC)(HWND hwndCpl, UINT msg, LPARAM lParam1, LPARAM lParam2);
typedef struct tagARRAYDESC ARRAYDESC;
typedef UINT ATOM;
typedef struct auxcaps_tag AUXCAPS;
typedef struct tagBANDINFOSTRUCT BANDINFOSTRUCT;
typedef union tagBINDPTR BINDPTR;
typedef enum tagBINDSPEED BINDSPEED;
typedef enum $320585250961ABE9F4D068EEEC4E2CC6 BIND_FLAGS;
typedef struct tagBIND_OPTS BIND_OPTS;
typedef struct tagBITMAP BITMAP;
typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;
typedef struct tagBITMAPCOREINFO BITMAPCOREINFO;
typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;
typedef struct tagBITMAPINFO BITMAPINFO;
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;
typedef unsigned __int32 BOOKMARK;
typedef int BOOL;
typedef RECT BORDERWIDTHS;
typedef struct tagBOXLAYOUT BOXLAYOUT;
typedef char far *BSTR;
typedef unsigned __int8 BYTE;
typedef struct tagCALBSTRUCT CALBSTRUCT;
typedef enum tagCALLCONV CALLCONV;
typedef enum tagCALLTYPE CALLTYPE;
typedef int CATCHBUF[9];
typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;
typedef struct tagCBT_CREATEWND CBT_CREATEWND;
typedef struct tagCHOOSECOLOR CHOOSECOLOR;
typedef struct tagCHOOSEFONT CHOOSEFONT;
typedef int CL;
typedef struct tagCLASSENTRY CLASSENTRY;
typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;
typedef WORD CLIPFORMAT;
typedef enum tagCLSCTX CLSCTX;
typedef GUID CLSID;
typedef DWORD COLORREF;
typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;
typedef struct tagCOMSTAT COMSTAT;
typedef struct tagCONVCONTEXT CONVCONTEXT;
typedef struct tagCONVINFO CONVINFO;
typedef struct tagCPLINFO CPLINFO;
typedef struct tagCREATESTRUCT CREATESTRUCT;
typedef struct tagCTLINFO CTLINFO;
typedef struct tagCTLSTYLE CTLSTYLE;
typedef struct tagCTLTYPE CTLTYPE;
typedef struct tagCY CY;
typedef enum tagDATADIR DATADIR;
typedef double DATE;
typedef struct tagDATE_STRUCT DATE_STRUCT;
typedef struct tagDCB DCB;
typedef struct tagDDEACK DDEACK;
typedef struct tagDDEADVISE DDEADVISE;
typedef struct tagDDEDATA DDEDATA;
typedef struct tagDDELN DDELN;
typedef struct tagDDEPOKE DDEPOKE;
typedef struct tagDDEUP DDEUP;
typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;
typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;
typedef enum tagDESCKIND DESCKIND;
typedef struct tagDEVMODE DEVMODE;
typedef struct tagDEVNAMES DEVNAMES;
typedef enum tagDISCARDCACHE DISCARDCACHE;
typedef __int32 DISPID;
typedef struct tagDISPPARAMS DISPPARAMS;
typedef FARPROC DLGPROC;
typedef struct $9811B5662EE51361168BFF08BB491D75 DOCINFO;
typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;
typedef struct tagDRIVERINFOSTRUCT DRIVERINFOSTRUCT;
typedef LRESULT (__pascal __far far *DRIVERPROC)(DWORD, HDRVR, UINT, LPARAM, LPARAM);
typedef void __pascal __far DRVCALLBACK(HDRVR h, UINT uMessage, DWORD dwUser, DWORD dw1, DWORD dw2);
typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;
typedef enum tagDVASPECT DVASPECT;
typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;
typedef unsigned __int32 DWORD;
typedef int (__pascal __far far *EDITWORDBREAKPROC)(LPSTR lpch, int ichCurrent, int cch, int code);
typedef struct tagELEMDESC ELEMDESC;
typedef struct tagENUMLOGFONT ENUMLOGFONT;
typedef int (__pascal __far far *ENUMPROC)(LPSYV, int, void far *);
typedef struct tagEVENTMSG EVENTMSG;
typedef struct tagEXCEPINFO EXCEPINFO;
typedef enum tagEXTCONN EXTCONN;
typedef int (__pascal __far far *FARPROC)();
typedef struct fd_set FD_SET;
typedef struct tagFILETIME FILETIME;
typedef struct tagFINDREPLACE FINDREPLACE;
typedef struct tagFIXED FIXED;
typedef unsigned __int32 FLAGS;
typedef struct tagFMS_GETDRIVEINFO FMS_GETDRIVEINFO;
typedef struct tagFMS_GETFILESEL FMS_GETFILESEL;
typedef struct tagFMS_LOAD FMS_LOAD;
typedef DWORD (__pascal __far far *FM_EXT_PROC)(HWND, UINT, __int32);
typedef DWORD (__pascal __far far *FM_UNDELETE_PROC)(HWND, LPSTR);
typedef HDDEDATA __pascal __far FNCALLBACK(UINT wType, UINT wFmt, HCONV hConv, HSZ hsz1, HSZ hsz2, HDDEDATA hData, DWORD dwData1, DWORD dwData2);
typedef FARPROC FONTENUMPROC;
typedef struct tagFORMATETC FORMATETC;
typedef DWORD FOURCC;
typedef struct tagFUNCDESC FUNCDESC;
typedef enum tagFUNCFLAGS FUNCFLAGS;
typedef enum tagFUNCKIND FUNCKIND;
typedef struct tagGLOBALENTRY GLOBALENTRY;
typedef HANDLE GLOBALHANDLE;
typedef struct tagGLOBALINFO GLOBALINFO;
typedef struct tagGLYPHMETRICS GLYPHMETRICS;
typedef FARPROC GNOTIFYPROC;
typedef FARPROC GOBJENUMPROC;
typedef FARPROC GRAYSTRINGPROC;
struct GUID {DWORD Data1;WORD Data2;WORD Data3;BYTE Data4[8];};
typedef struct tagGUIDE GUIDE;
typedef UINT HACCEL;
typedef UINT HANDLE;
typedef struct tagHANDLETABLE HANDLETABLE;
typedef struct tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;
typedef UINT HBITMAP;
typedef UINT HBRUSH;
typedef DWORD HCONV;
typedef DWORD HCONVLIST;
typedef HICON HCURSOR;
typedef void far *HDBC;
typedef UINT HDC;
typedef DWORD HDDEDATA;
typedef UINT HDROP;
typedef UINT HDRVR;
typedef UINT HDWP;
typedef struct $925387C1A9AA03DD03B17550DEA320D0 HELPWININFO;
typedef void far *HENV;
typedef int HFILE;
typedef UINT HFONT;
typedef UINT HGDIOBJ;
typedef HANDLE HGLOBAL;
typedef DWORD HHOOK;
typedef UINT HICON;
typedef UINT HINSTANCE;
typedef DWORD HKEY;
typedef UINT HKP;
typedef HANDLE HLOCAL;
typedef UINT HMENU;
typedef UINT HMETAFILE;
typedef UINT HMIDI;
typedef UINT HMIDIIN;
typedef UINT HMIDIOUT;
typedef UINT HMMIO;
typedef HINSTANCE HMODULE;
typedef UINT HOLEMENU;
typedef FARPROC HOOKPROC;
typedef struct hostent HOSTENT;
typedef UINT HPALETTE;
typedef UINT HPEN;
typedef HANDLE HPENDATA;
typedef char far *HPSTR;
typedef HANDLE HREC;
typedef unsigned __int32 HREFTYPE;
typedef void far *HRESULT;
typedef UINT HRGN;
typedef UINT HRSRC;
typedef void far *HSTMT;
typedef UINT HSTR;
typedef DWORD HSZ;
typedef struct tagHSZPAIR HSZPAIR;
typedef UINT HTASK;
typedef UINT HWAVE;
typedef UINT HWAVEIN;
typedef UINT HWAVEOUT;
typedef UINT HWND;
struct IAdviseSink {struct IAdviseSinkVtbl far *lpVtbl;};
struct IAdviseSink2 {struct IAdviseSink2Vtbl far *lpVtbl;};
struct IAdviseSink2Vtbl {HRESULT (__cdecl __far far *QueryInterface)(IAdviseSink2 far *This, const IID far *const riid, LPVOID far *ppv);ULONG (__cdecl __far far *AddRef)(IAdviseSink2 far *This);ULONG (__cdecl __far far *Release)(IAdviseSink2 far *This);void (__cdecl __far far *OnDataChange)(IAdviseSink2 far *This, FORMATETC far *pFormatetc, STGMEDIUM far *pStgmed);void (__cdecl __far far *OnViewChange)(IAdviseSink2 far *This, DWORD dwAspect, __int32 lindex);void (__cdecl __far far *OnRename)(IAdviseSink2 far *This, LPMONIKER pmk);void (__cdecl __far far *OnSave)(IAdviseSink2 far *This);void (__cdecl __far far *OnClose)(IAdviseSink2 far *This);void (__cdecl __far far *OnLinkSrcChange)(IAdviseSink2 far *This, LPMONIKER pmk);};
struct IAdviseSinkVtbl {HRESULT (__cdecl __far far *QueryInterface)(IAdviseSink far *This, const IID far *const riid, LPVOID far *ppv);ULONG (__cdecl __far far *AddRef)(IAdviseSink far *This);ULONG (__cdecl __far far *Release)(IAdviseSink far *This);void (__cdecl __far far *OnDataChange)(IAdviseSink far *This, FORMATETC far *pFormatetc, STGMEDIUM far *pStgmed);void (__cdecl __far far *OnViewChange)(IAdviseSink far *This, DWORD dwAspect, __int32 lindex);void (__cdecl __far far *OnRename)(IAdviseSink far *This, LPMONIKER pmk);void (__cdecl __far far *OnSave)(IAdviseSink far *This);void (__cdecl __far far *OnClose)(IAdviseSink far *This);};
struct IBindCtx {struct IBindCtxVtbl far *lpVtbl;};
struct IBindCtxVtbl {HRESULT (__cdecl __far far *QueryInterface)(IBindCtx far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IBindCtx far *This);ULONG (__cdecl __far far *Release)(IBindCtx far *This);HRESULT (__cdecl __far far *RegisterObjectBound)(IBindCtx far *This, LPUNKNOWN punk);HRESULT (__cdecl __far far *RevokeObjectBound)(IBindCtx far *This, LPUNKNOWN punk);HRESULT (__cdecl __far far *ReleaseBoundObjects)(IBindCtx far *This);HRESULT (__cdecl __far far *SetBindOptions)(IBindCtx far *This, LPBIND_OPTS pbindopts);HRESULT (__cdecl __far far *GetBindOptions)(IBindCtx far *This, LPBIND_OPTS pbindopts);HRESULT (__cdecl __far far *GetRunningObjectTable)(IBindCtx far *This, LPRUNNINGOBJECTTABLE far *pprot);HRESULT (__cdecl __far far *RegisterObjectParam)(IBindCtx far *This, LPSTR lpszKey, LPUNKNOWN punk);HRESULT (__cdecl __far far *GetObjectParam)(IBindCtx far *This, LPSTR lpszKey, LPUNKNOWN far *ppunk);HRESULT (__cdecl __far far *EnumObjectParam)(IBindCtx far *This, LPENUMSTRING far *ppenum);HRESULT (__cdecl __far far *RevokeObjectParam)(IBindCtx far *This, LPSTR lpszKey);};
struct IClassFactory {struct IClassFactoryVtbl far *lpVtbl;};
struct IClassFactoryVtbl {HRESULT (__cdecl __far far *QueryInterface)(IClassFactory far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IClassFactory far *This);ULONG (__cdecl __far far *Release)(IClassFactory far *This);HRESULT (__cdecl __far far *CreateInstance)(IClassFactory far *This, LPUNKNOWN pUnkOuter, const IID far *const riid, LPVOID far *ppvObject);HRESULT (__cdecl __far far *LockServer)(IClassFactory far *This, BOOL fLock);};
struct ICreateTypeInfo {struct ICreateTypeInfoVtbl far *lpVtbl;};
struct ICreateTypeInfoVtbl {HRESULT (__cdecl __far far *QueryInterface)(ICreateTypeInfo far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(ICreateTypeInfo far *This);unsigned __int32 (__cdecl __far far *Release)(ICreateTypeInfo far *This);HRESULT (__cdecl __far far *SetGuid)(ICreateTypeInfo far *This, const GUID far *const guid);HRESULT (__cdecl __far far *SetTypeFlags)(ICreateTypeInfo far *This, unsigned int uTypeFlags);HRESULT (__cdecl __far far *SetDocString)(ICreateTypeInfo far *This, TCHAR far *pstrDoc);HRESULT (__cdecl __far far *SetHelpContext)(ICreateTypeInfo far *This, unsigned __int32 dwHelpContext);HRESULT (__cdecl __far far *SetVersion)(ICreateTypeInfo far *This, unsigned int wMajorVerNum, unsigned int wMinorVerNum);HRESULT (__cdecl __far far *AddRefTypeInfo)(ICreateTypeInfo far *This, ITypeInfo far *ptinfo, HREFTYPE far *phreftype);HRESULT (__cdecl __far far *AddFuncDesc)(ICreateTypeInfo far *This, unsigned int index, FUNCDESC far *pfuncdesc);HRESULT (__cdecl __far far *AddImplType)(ICreateTypeInfo far *This, unsigned int index, HREFTYPE hreftype);HRESULT (__cdecl __far far *SetImplTypeFlags)(ICreateTypeInfo far *This, unsigned int index, int impltypeflags);HRESULT (__cdecl __far far *SetAlignment)(ICreateTypeInfo far *This, unsigned int cbAlignment);HRESULT (__cdecl __far far *SetSchema)(ICreateTypeInfo far *This, TCHAR far *lpstrSchema);HRESULT (__cdecl __far far *AddVarDesc)(ICreateTypeInfo far *This, unsigned int index, VARDESC far *pvardesc);HRESULT (__cdecl __far far *SetFuncAndParamNames)(ICreateTypeInfo far *This, unsigned int index, TCHAR far * far *rgszNames, unsigned int cNames);HRESULT (__cdecl __far far *SetVarName)(ICreateTypeInfo far *This, unsigned int index, TCHAR far *szName);HRESULT (__cdecl __far far *SetTypeDescAlias)(ICreateTypeInfo far *This, TYPEDESC far *ptdescAlias);HRESULT (__cdecl __far far *DefineFuncAsDllEntry)(ICreateTypeInfo far *This, unsigned int index, TCHAR far *szDllName, TCHAR far *szProcName);HRESULT (__cdecl __far far *SetFuncDocString)(ICreateTypeInfo far *This, unsigned int index, TCHAR far *szDocString);HRESULT (__cdecl __far far *SetVarDocString)(ICreateTypeInfo far *This, unsigned int index, TCHAR far *szDocString);HRESULT (__cdecl __far far *SetFuncHelpContext)(ICreateTypeInfo far *This, unsigned int index, unsigned __int32 dwHelpContext);HRESULT (__cdecl __far far *SetVarHelpContext)(ICreateTypeInfo far *This, unsigned int index, unsigned __int32 dwHelpContext);HRESULT (__cdecl __far far *SetMops)(ICreateTypeInfo far *This, unsigned int index, BSTR bstrMops);HRESULT (__cdecl __far far *SetTypeIdldesc)(ICreateTypeInfo far *This, IDLDESC far *pidldesc);HRESULT (__cdecl __far far *LayOut)(ICreateTypeInfo far *This);};
struct ICreateTypeLib {struct ICreateTypeLibVtbl far *lpVtbl;};
struct ICreateTypeLibVtbl {HRESULT (__cdecl __far far *QueryInterface)(ICreateTypeLib far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(ICreateTypeLib far *This);unsigned __int32 (__cdecl __far far *Release)(ICreateTypeLib far *This);HRESULT (__cdecl __far far *CreateTypeInfo)(ICreateTypeLib far *This, TCHAR far *szName, TYPEKIND tkind, ICreateTypeInfo far * far *lplpictinfo);HRESULT (__cdecl __far far *SetName)(ICreateTypeLib far *This, TCHAR far *szName);HRESULT (__cdecl __far far *SetVersion)(ICreateTypeLib far *This, unsigned int wMajorVerNum, unsigned int wMinorVerNum);HRESULT (__cdecl __far far *SetGuid)(ICreateTypeLib far *This, const GUID far *const guid);HRESULT (__cdecl __far far *SetDocString)(ICreateTypeLib far *This, TCHAR far *szDoc);HRESULT (__cdecl __far far *SetHelpFileName)(ICreateTypeLib far *This, TCHAR far *szHelpFileName);HRESULT (__cdecl __far far *SetHelpContext)(ICreateTypeLib far *This, unsigned __int32 dwHelpContext);HRESULT (__cdecl __far far *SetLcid)(ICreateTypeLib far *This, LCID lcid);HRESULT (__cdecl __far far *SetLibFlags)(ICreateTypeLib far *This, unsigned int uLibFlags);HRESULT (__cdecl __far far *SaveAllChanges)(ICreateTypeLib far *This);};
typedef struct tagIDLDESC IDLDESC;
struct IDataAdviseHolder {struct IDataAdviseHolderVtbl far *lpVtbl;};
struct IDataAdviseHolderVtbl {HRESULT (__cdecl __far far *QueryInterface)(IDataAdviseHolder far *This, const IID far *const riid, LPVOID far *ppv);ULONG (__cdecl __far far *AddRef)(IDataAdviseHolder far *This);ULONG (__cdecl __far far *Release)(IDataAdviseHolder far *This);HRESULT (__cdecl __far far *Advise)(IDataAdviseHolder far *This, LPDATAOBJECT pDataObject, FORMATETC far *pFetc, DWORD advf, LPADVISESINK pAdvise, DWORD far *pdwConnection);HRESULT (__cdecl __far far *Unadvise)(IDataAdviseHolder far *This, DWORD dwConnection);HRESULT (__cdecl __far far *EnumAdvise)(IDataAdviseHolder far *This, LPENUMSTATDATA far *ppenumAdvise);HRESULT (__cdecl __far far *SendOnDataChange)(IDataAdviseHolder far *This, LPDATAOBJECT pDataObject, DWORD dwReserved, DWORD advf);};
struct IDataObject {struct IDataObjectVtbl far *lpVtbl;};
struct IDataObjectVtbl {HRESULT (__cdecl __far far *QueryInterface)(IDataObject far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IDataObject far *This);ULONG (__cdecl __far far *Release)(IDataObject far *This);HRESULT (__cdecl __far far *GetData)(IDataObject far *This, LPFORMATETC pformatetcIn, LPSTGMEDIUM pmedium);HRESULT (__cdecl __far far *GetDataHere)(IDataObject far *This, LPFORMATETC pformatetc, LPSTGMEDIUM pmedium);HRESULT (__cdecl __far far *QueryGetData)(IDataObject far *This, LPFORMATETC pformatetc);HRESULT (__cdecl __far far *GetCanonicalFormatEtc)(IDataObject far *This, LPFORMATETC pformatetc, LPFORMATETC pformatetcOut);HRESULT (__cdecl __far far *SetData)(IDataObject far *This, LPFORMATETC pformatetc, STGMEDIUM far *pmedium, BOOL fRelease);HRESULT (__cdecl __far far *EnumFormatEtc)(IDataObject far *This, DWORD dwDirection, LPENUMFORMATETC far *ppenumFormatEtc);HRESULT (__cdecl __far far *DAdvise)(IDataObject far *This, FORMATETC far *pFormatetc, DWORD advf, LPADVISESINK pAdvSink, DWORD far *pdwConnection);HRESULT (__cdecl __far far *DUnadvise)(IDataObject far *This, DWORD dwConnection);HRESULT (__cdecl __far far *EnumDAdvise)(IDataObject far *This, LPENUMSTATDATA far *ppenumAdvise);};
struct IDispatch {struct IDispatchVtbl far *lpVtbl;};
struct IDispatchVtbl {HRESULT (__cdecl __far far *QueryInterface)(IDispatch far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(IDispatch far *This);unsigned __int32 (__cdecl __far far *Release)(IDispatch far *This);HRESULT (__cdecl __far far *GetTypeInfoCount)(IDispatch far *This, unsigned int far *pctinfo);HRESULT (__cdecl __far far *GetTypeInfo)(IDispatch far *This, unsigned int itinfo, LCID lcid, ITypeInfo far * far *pptinfo);HRESULT (__cdecl __far far *GetIDsOfNames)(IDispatch far *This, const IID far *const riid, TCHAR far * far *rgszNames, unsigned int cNames, LCID lcid, DISPID far *rgdispid);HRESULT (__cdecl __far far *Invoke)(IDispatch far *This, DISPID dispidMember, const IID far *const riid, LCID lcid, unsigned int wFlags, DISPPARAMS far *pdispparams, VARIANT far *pvarResult, EXCEPINFO far *pexcepinfo, unsigned int far *puArgErr);};
struct IDropSource {struct IDropSourceVtbl far *lpVtbl;};
struct IDropSourceVtbl {HRESULT (__cdecl __far far *QueryInterface)(IDropSource far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IDropSource far *This);ULONG (__cdecl __far far *Release)(IDropSource far *This);HRESULT (__cdecl __far far *QueryContinueDrag)(IDropSource far *This, BOOL fEscapePressed, DWORD grfKeyState);HRESULT (__cdecl __far far *GiveFeedback)(IDropSource far *This, DWORD dwEffect);};
struct IDropTarget {struct IDropTargetVtbl far *lpVtbl;};
struct IDropTargetVtbl {HRESULT (__cdecl __far far *QueryInterface)(IDropTarget far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IDropTarget far *This);ULONG (__cdecl __far far *Release)(IDropTarget far *This);HRESULT (__cdecl __far far *DragEnter)(IDropTarget far *This, LPDATAOBJECT pDataObj, DWORD grfKeyState, POINTL pt, LPDWORD pdwEffect);HRESULT (__cdecl __far far *DragOver)(IDropTarget far *This, DWORD grfKeyState, POINTL pt, LPDWORD pdwEffect);HRESULT (__cdecl __far far *DragLeave)(IDropTarget far *This);HRESULT (__cdecl __far far *Drop)(IDropTarget far *This, LPDATAOBJECT pDataObj, DWORD grfKeyState, POINTL pt, LPDWORD pdwEffect);};
struct IEnumFORMATETC {struct IEnumFORMATETCVtbl far *lpVtbl;};
struct IEnumFORMATETCVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumFORMATETC far *This, const IID far *const riid, LPVOID far *ppv);ULONG (__cdecl __far far *AddRef)(IEnumFORMATETC far *This);ULONG (__cdecl __far far *Release)(IEnumFORMATETC far *This);HRESULT (__cdecl __far far *Next)(IEnumFORMATETC far *This, ULONG celt, FORMATETC far *rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumFORMATETC far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumFORMATETC far *This);HRESULT (__cdecl __far far *Clone)(IEnumFORMATETC far *This, IEnumFORMATETC far * far *ppenum);};
struct IEnumMoniker {struct IEnumMonikerVtbl far *lpVtbl;};
struct IEnumMonikerVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumMoniker far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IEnumMoniker far *This);ULONG (__cdecl __far far *Release)(IEnumMoniker far *This);HRESULT (__cdecl __far far *Next)(IEnumMoniker far *This, ULONG celt, LPMONIKER far *rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumMoniker far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumMoniker far *This);HRESULT (__cdecl __far far *Clone)(IEnumMoniker far *This, IEnumMoniker far * far *ppenm);};
struct IEnumOLEVERB {struct IEnumOLEVERBVtbl far *lpVtbl;};
struct IEnumOLEVERBVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumOLEVERB far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IEnumOLEVERB far *This);ULONG (__cdecl __far far *Release)(IEnumOLEVERB far *This);HRESULT (__cdecl __far far *Next)(IEnumOLEVERB far *This, ULONG celt, LPOLEVERB rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumOLEVERB far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumOLEVERB far *This);HRESULT (__cdecl __far far *Clone)(IEnumOLEVERB far *This, IEnumOLEVERB far * far *ppenm);};
struct IEnumSTATDATA {struct IEnumSTATDATAVtbl far *lpVtbl;};
struct IEnumSTATDATAVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumSTATDATA far *This, const IID far *const riid, LPVOID far *ppv);ULONG (__cdecl __far far *AddRef)(IEnumSTATDATA far *This);ULONG (__cdecl __far far *Release)(IEnumSTATDATA far *This);HRESULT (__cdecl __far far *Next)(IEnumSTATDATA far *This, ULONG celt, STATDATA far *rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumSTATDATA far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumSTATDATA far *This);HRESULT (__cdecl __far far *Clone)(IEnumSTATDATA far *This, IEnumSTATDATA far * far *ppenum);};
struct IEnumSTATSTG {struct IEnumSTATSTGVtbl far *lpVtbl;};
struct IEnumSTATSTGVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumSTATSTG far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IEnumSTATSTG far *This);ULONG (__cdecl __far far *Release)(IEnumSTATSTG far *This);HRESULT (__cdecl __far far *Next)(IEnumSTATSTG far *This, ULONG celt, STATSTG far *rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumSTATSTG far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumSTATSTG far *This);HRESULT (__cdecl __far far *Clone)(IEnumSTATSTG far *This, IEnumSTATSTG far * far *ppenm);};
struct IEnumString {struct IEnumStringVtbl far *lpVtbl;};
struct IEnumStringVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumString far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IEnumString far *This);ULONG (__cdecl __far far *Release)(IEnumString far *This);HRESULT (__cdecl __far far *Next)(IEnumString far *This, ULONG celt, LPSTR far *rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumString far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumString far *This);HRESULT (__cdecl __far far *Clone)(IEnumString far *This, IEnumString far * far *ppenm);};
struct IEnumUnknown {struct IEnumUnknownVtbl far *lpVtbl;};
struct IEnumUnknownVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumUnknown far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IEnumUnknown far *This);ULONG (__cdecl __far far *Release)(IEnumUnknown far *This);HRESULT (__cdecl __far far *Next)(IEnumUnknown far *This, ULONG celt, LPUNKNOWN far *rgelt, ULONG far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumUnknown far *This, ULONG celt);HRESULT (__cdecl __far far *Reset)(IEnumUnknown far *This);HRESULT (__cdecl __far far *Clone)(IEnumUnknown far *This, IEnumUnknown far * far *ppenm);};
struct IEnumVARIANT {struct IEnumVARIANTVtbl far *lpVtbl;};
struct IEnumVARIANTVtbl {HRESULT (__cdecl __far far *QueryInterface)(IEnumVARIANT far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(IEnumVARIANT far *This);unsigned __int32 (__cdecl __far far *Release)(IEnumVARIANT far *This);HRESULT (__cdecl __far far *Next)(IEnumVARIANT far *This, unsigned __int32 celt, VARIANT far *rgvar, unsigned __int32 far *pceltFetched);HRESULT (__cdecl __far far *Skip)(IEnumVARIANT far *This, unsigned __int32 celt);HRESULT (__cdecl __far far *Reset)(IEnumVARIANT far *This);HRESULT (__cdecl __far far *Clone)(IEnumVARIANT far *This, IEnumVARIANT far * far *ppenum);};
struct IExternalConnection {struct IExternalConnectionVtbl far *lpVtbl;};
struct IExternalConnectionVtbl {HRESULT (__cdecl __far far *QueryInterface)(IExternalConnection far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IExternalConnection far *This);ULONG (__cdecl __far far *Release)(IExternalConnection far *This);DWORD (__cdecl __far far *AddConnection)(IExternalConnection far *This, DWORD extconn, DWORD reserved);DWORD (__cdecl __far far *ReleaseConnection)(IExternalConnection far *This, DWORD extconn, DWORD reserved, BOOL fLastReleaseCloses);};
typedef GUID IID;
struct ILockBytes {struct ILockBytesVtbl far *lpVtbl;};
struct ILockBytesVtbl {HRESULT (__cdecl __far far *QueryInterface)(ILockBytes far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(ILockBytes far *This);ULONG (__cdecl __far far *Release)(ILockBytes far *This);HRESULT (__cdecl __far far *ReadAt)(ILockBytes far *This, ULARGE_INTEGER ulOffset, void far *pv, ULONG cb, ULONG far *pcbRead);HRESULT (__cdecl __far far *WriteAt)(ILockBytes far *This, ULARGE_INTEGER ulOffset, const void far *pv, ULONG cb, ULONG far *pcbWritten);HRESULT (__cdecl __far far *Flush)(ILockBytes far *This);HRESULT (__cdecl __far far *SetSize)(ILockBytes far *This, ULARGE_INTEGER cb);HRESULT (__cdecl __far far *LockRegion)(ILockBytes far *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (__cdecl __far far *UnlockRegion)(ILockBytes far *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (__cdecl __far far *Stat)(ILockBytes far *This, STATSTG far *pstatstg, DWORD grfStatFlag);};
struct IMalloc {struct IMallocVtbl far *lpVtbl;};
struct IMallocVtbl {HRESULT (__cdecl __far far *QueryInterface)(IMalloc far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IMalloc far *This);ULONG (__cdecl __far far *Release)(IMalloc far *This);void far *(__cdecl __far far *Alloc)(IMalloc far *This, ULONG cb);void far *(__cdecl __far far *Realloc)(IMalloc far *This, void far *pv, ULONG cb);void (__cdecl __far far *Free)(IMalloc far *This, void far *pv);ULONG (__cdecl __far far *GetSize)(IMalloc far *This, void far *pv);int (__cdecl __far far *DidAlloc)(IMalloc far *This, void far *pv);void (__cdecl __far far *HeapMinimize)(IMalloc far *This);};
struct IMarshal {struct IMarshalVtbl far *lpVtbl;};
struct IMarshalVtbl {HRESULT (__cdecl __far far *QueryInterface)(IMarshal far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IMarshal far *This);ULONG (__cdecl __far far *Release)(IMarshal far *This);HRESULT (__cdecl __far far *GetUnmarshalClass)(IMarshal far *This, const IID far *const riid, LPVOID pv, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags, LPCLSID pCid);HRESULT (__cdecl __far far *GetMarshalSizeMax)(IMarshal far *This, const IID far *const riid, LPVOID pv, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags, LPDWORD pSize);HRESULT (__cdecl __far far *MarshalInterface)(IMarshal far *This, LPSTREAM pStm, const IID far *const riid, LPVOID pv, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags);HRESULT (__cdecl __far far *UnmarshalInterface)(IMarshal far *This, LPSTREAM pStm, const IID far *const riid, LPVOID far *ppv);HRESULT (__cdecl __far far *ReleaseMarshalData)(IMarshal far *This, LPSTREAM pStm);HRESULT (__cdecl __far far *DisconnectObject)(IMarshal far *This, DWORD dwReserved);};
struct IMessageFilter {struct IMessageFilterVtbl far *lpVtbl;};
struct IMessageFilterVtbl {HRESULT (__cdecl __far far *QueryInterface)(IMessageFilter far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IMessageFilter far *This);ULONG (__cdecl __far far *Release)(IMessageFilter far *This);DWORD (__cdecl __far far *HandleInComingCall)(IMessageFilter far *This, DWORD dwCallType, HTASK htaskCaller, DWORD dwTickCount, DWORD dwReserved);DWORD (__cdecl __far far *RetryRejectedCall)(IMessageFilter far *This, HTASK htaskCallee, DWORD dwTickCount, DWORD dwRejectType);DWORD (__cdecl __far far *MessagePending)(IMessageFilter far *This, HTASK htaskCallee, DWORD dwTickCount, DWORD dwPendingType);};
struct IMoniker {struct IMonikerVtbl far *lpVtbl;};
struct IMonikerVtbl {HRESULT (__cdecl __far far *QueryInterface)(IMoniker far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IMoniker far *This);ULONG (__cdecl __far far *Release)(IMoniker far *This);HRESULT (__cdecl __far far *GetClassID)(IMoniker far *This, LPCLSID lpClassID);HRESULT (__cdecl __far far *IsDirty)(IMoniker far *This);HRESULT (__cdecl __far far *Load)(IMoniker far *This, LPSTREAM pStm);HRESULT (__cdecl __far far *Save)(IMoniker far *This, LPSTREAM pStm, BOOL fClearDirty);HRESULT (__cdecl __far far *GetSizeMax)(IMoniker far *This, ULARGE_INTEGER far *pcbSize);HRESULT (__cdecl __far far *BindToObject)(IMoniker far *This, LPBC pbc, LPMONIKER pmkToLeft, const IID far *const riidResult, LPVOID far *ppvResult);HRESULT (__cdecl __far far *BindToStorage)(IMoniker far *This, LPBC pbc, LPMONIKER pmkToLeft, const IID far *const riid, LPVOID far *ppvObj);HRESULT (__cdecl __far far *Reduce)(IMoniker far *This, LPBC pbc, DWORD dwReduceHowFar, LPMONIKER far *ppmkToLeft, LPMONIKER far *ppmkReduced);HRESULT (__cdecl __far far *ComposeWith)(IMoniker far *This, LPMONIKER pmkRight, BOOL fOnlyIfNotGeneric, LPMONIKER far *ppmkComposite);HRESULT (__cdecl __far far *Enum)(IMoniker far *This, BOOL fForward, LPENUMMONIKER far *ppenumMoniker);HRESULT (__cdecl __far far *IsEqual)(IMoniker far *This, LPMONIKER pmkOtherMoniker);HRESULT (__cdecl __far far *Hash)(IMoniker far *This, LPDWORD pdwHash);HRESULT (__cdecl __far far *IsRunning)(IMoniker far *This, LPBC pbc, LPMONIKER pmkToLeft, LPMONIKER pmkNewlyRunning);HRESULT (__cdecl __far far *GetTimeOfLastChange)(IMoniker far *This, LPBC pbc, LPMONIKER pmkToLeft, FILETIME far *pfiletime);HRESULT (__cdecl __far far *Inverse)(IMoniker far *This, LPMONIKER far *ppmk);HRESULT (__cdecl __far far *CommonPrefixWith)(IMoniker far *This, LPMONIKER pmkOther, LPMONIKER far *ppmkPrefix);HRESULT (__cdecl __far far *RelativePathTo)(IMoniker far *This, LPMONIKER pmkOther, LPMONIKER far *ppmkRelPath);HRESULT (__cdecl __far far *GetDisplayName)(IMoniker far *This, LPBC pbc, LPMONIKER pmkToLeft, LPSTR far *lplpszDisplayName);HRESULT (__cdecl __far far *ParseDisplayName)(IMoniker far *This, LPBC pbc, LPMONIKER pmkToLeft, LPSTR lpszDisplayName, ULONG far *pchEaten, LPMONIKER far *ppmkOut);HRESULT (__cdecl __far far *IsSystemMoniker)(IMoniker far *This, LPDWORD pdwMksys);};
typedef struct tagINTERFACEDATA INTERFACEDATA;
typedef struct tagINTERFACEIMPL INTERFACEIMPL;
typedef struct tagINTERFACEINFO INTERFACEINFO;
typedef enum tagINVOKEKIND INVOKEKIND;
typedef struct in_addr IN_ADDR;
struct IOleAdviseHolder {struct IOleAdviseHolderVtbl far *lpVtbl;};
struct IOleAdviseHolderVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleAdviseHolder far *This, const IID far *const riid, LPVOID far *ppv);ULONG (__cdecl __far far *AddRef)(IOleAdviseHolder far *This);ULONG (__cdecl __far far *Release)(IOleAdviseHolder far *This);HRESULT (__cdecl __far far *Advise)(IOleAdviseHolder far *This, LPADVISESINK pAdvise, DWORD far *pdwConnection);HRESULT (__cdecl __far far *Unadvise)(IOleAdviseHolder far *This, DWORD dwConnection);HRESULT (__cdecl __far far *EnumAdvise)(IOleAdviseHolder far *This, LPENUMSTATDATA far *ppenumAdvise);HRESULT (__cdecl __far far *SendOnRename)(IOleAdviseHolder far *This, LPMONIKER pmk);HRESULT (__cdecl __far far *SendOnSave)(IOleAdviseHolder far *This);HRESULT (__cdecl __far far *SendOnClose)(IOleAdviseHolder far *This);};
struct IOleCache {struct IOleCacheVtbl far *lpVtbl;};
struct IOleCache2 {struct IOleCache2Vtbl far *lpVtbl;};
struct IOleCache2Vtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleCache2 far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleCache2 far *This);ULONG (__cdecl __far far *Release)(IOleCache2 far *This);HRESULT (__cdecl __far far *Cache)(IOleCache2 far *This, LPFORMATETC lpFormatetc, DWORD advf, LPDWORD lpdwConnection);HRESULT (__cdecl __far far *Uncache)(IOleCache2 far *This, DWORD dwConnection);HRESULT (__cdecl __far far *EnumCache)(IOleCache2 far *This, LPENUMSTATDATA far *ppenumStatData);HRESULT (__cdecl __far far *InitCache)(IOleCache2 far *This, LPDATAOBJECT pDataObject);HRESULT (__cdecl __far far *SetData)(IOleCache2 far *This, LPFORMATETC pformatetc, STGMEDIUM far *pmedium, BOOL fRelease);HRESULT (__cdecl __far far *UpdateCache)(IOleCache2 far *This, LPDATAOBJECT pDataObject, DWORD grfUpdf, LPVOID pReserved);HRESULT (__cdecl __far far *DiscardCache)(IOleCache2 far *This, DWORD dwDiscardOptions);};
struct IOleCacheControl {struct IOleCacheControlVtbl far *lpVtbl;};
struct IOleCacheControlVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleCacheControl far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleCacheControl far *This);ULONG (__cdecl __far far *Release)(IOleCacheControl far *This);HRESULT (__cdecl __far far *OnRun)(IOleCacheControl far *This, LPDATAOBJECT pDataObject);HRESULT (__cdecl __far far *OnStop)(IOleCacheControl far *This);};
struct IOleCacheVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleCache far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleCache far *This);ULONG (__cdecl __far far *Release)(IOleCache far *This);HRESULT (__cdecl __far far *Cache)(IOleCache far *This, LPFORMATETC lpFormatetc, DWORD advf, LPDWORD lpdwConnection);HRESULT (__cdecl __far far *Uncache)(IOleCache far *This, DWORD dwConnection);HRESULT (__cdecl __far far *EnumCache)(IOleCache far *This, LPENUMSTATDATA far *ppenumStatData);HRESULT (__cdecl __far far *InitCache)(IOleCache far *This, LPDATAOBJECT pDataObject);HRESULT (__cdecl __far far *SetData)(IOleCache far *This, LPFORMATETC pformatetc, STGMEDIUM far *pmedium, BOOL fRelease);};
struct IOleClientSite {struct IOleClientSiteVtbl far *lpVtbl;};
struct IOleClientSiteVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleClientSite far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleClientSite far *This);ULONG (__cdecl __far far *Release)(IOleClientSite far *This);HRESULT (__cdecl __far far *SaveObject)(IOleClientSite far *This);HRESULT (__cdecl __far far *GetMoniker)(IOleClientSite far *This, DWORD dwAssign, DWORD dwWhichMoniker, LPMONIKER far *ppmk);HRESULT (__cdecl __far far *GetContainer)(IOleClientSite far *This, LPOLECONTAINER far *ppContainer);HRESULT (__cdecl __far far *ShowObject)(IOleClientSite far *This);HRESULT (__cdecl __far far *OnShowWindow)(IOleClientSite far *This, BOOL fShow);HRESULT (__cdecl __far far *RequestNewObjectLayout)(IOleClientSite far *This);};
struct IOleContainer {struct IOleContainerVtbl far *lpVtbl;};
struct IOleContainerVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleContainer far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleContainer far *This);ULONG (__cdecl __far far *Release)(IOleContainer far *This);HRESULT (__cdecl __far far *ParseDisplayName)(IOleContainer far *This, LPBC pbc, LPSTR lpszDisplayName, ULONG far *pchEaten, LPMONIKER far *ppmkOut);HRESULT (__cdecl __far far *EnumObjects)(DWORD grfFlags, LPENUMUNKNOWN far *ppenumUnknown);HRESULT (__cdecl __far far *LockContainer)(IOleContainer far *This, BOOL fLock);};
struct IOleInPlaceActiveObject {struct IOleInPlaceActiveObjectVtbl far *lpVtbl;};
struct IOleInPlaceActiveObjectVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleInPlaceActiveObject far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleInPlaceActiveObject far *This);ULONG (__cdecl __far far *Release)(IOleInPlaceActiveObject far *This);HRESULT (__cdecl __far far *GetWindow)(IOleInPlaceActiveObject far *This, HWND far *lphwnd);HRESULT (__cdecl __far far *ContextSensitiveHelp)(IOleInPlaceActiveObject far *This, BOOL fEnterMode);HRESULT (__cdecl __far far *TranslateAccelerator)(IOleInPlaceActiveObject far *This, LPMSG lpmsg);HRESULT (__cdecl __far far *OnFrameWindowActivate)(IOleInPlaceActiveObject far *This, BOOL fActivate);HRESULT (__cdecl __far far *OnDocWindowActivate)(IOleInPlaceActiveObject far *This, BOOL fActivate);HRESULT (__cdecl __far far *ResizeBorder)(IOleInPlaceActiveObject far *This, LPCRECT lprectBorder, LPOLEINPLACEUIWINDOW lpUIWindow, BOOL fFrameWindow);HRESULT (__cdecl __far far *EnableModeless)(IOleInPlaceActiveObject far *This, BOOL fEnable);};
struct IOleInPlaceFrame {struct IOleInPlaceFrameVtbl far *lpVtbl;};
struct IOleInPlaceFrameVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleInPlaceFrame far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleInPlaceFrame far *This);ULONG (__cdecl __far far *Release)(IOleInPlaceFrame far *This);HRESULT (__cdecl __far far *GetWindow)(IOleInPlaceFrame far *This, HWND far *lphwnd);HRESULT (__cdecl __far far *ContextSensitiveHelp)(IOleInPlaceFrame far *This, BOOL fEnterMode);HRESULT (__cdecl __far far *GetBorder)(IOleInPlaceFrame far *This, LPRECT lprectBorder);HRESULT (__cdecl __far far *RequestBorderSpace)(IOleInPlaceFrame far *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (__cdecl __far far *SetBorderSpace)(IOleInPlaceFrame far *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (__cdecl __far far *SetActiveObject)(IOleInPlaceFrame far *This, LPOLEINPLACEACTIVEOBJECT lpActiveObject, LPCSTR lpszObjName);HRESULT (__cdecl __far far *InsertMenus)(IOleInPlaceFrame far *This, HMENU hmenuShared, LPOLEMENUGROUPWIDTHS lpMenuWidths);HRESULT (__cdecl __far far *SetMenu)(IOleInPlaceFrame far *This, HMENU hmenuShared, HOLEMENU holemenu, HWND hwndActiveObject);HRESULT (__cdecl __far far *RemoveMenus)(IOleInPlaceFrame far *This, HMENU hmenuShared);HRESULT (__cdecl __far far *SetStatusText)(IOleInPlaceFrame far *This, LPCSTR lpszStatusText);HRESULT (__cdecl __far far *EnableModeless)(IOleInPlaceFrame far *This, BOOL fEnable);HRESULT (__cdecl __far far *TranslateAccelerator)(IOleInPlaceFrame far *This, LPMSG lpmsg, WORD wID);};
struct IOleInPlaceObject {struct IOleInPlaceObjectVtbl far *lpVtbl;};
struct IOleInPlaceObjectVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleInPlaceObject far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleInPlaceObject far *This);ULONG (__cdecl __far far *Release)(IOleInPlaceObject far *This);HRESULT (__cdecl __far far *GetWindow)(IOleInPlaceObject far *This, HWND far *lphwnd);HRESULT (__cdecl __far far *ContextSensitiveHelp)(IOleInPlaceObject far *This, BOOL fEnterMode);HRESULT (__cdecl __far far *InPlaceDeactivate)(IOleInPlaceObject far *This);HRESULT (__cdecl __far far *UIDeactivate)(IOleInPlaceObject far *This);HRESULT (__cdecl __far far *SetObjectRects)(IOleInPlaceObject far *This, LPCRECT lprcPosRect, LPCRECT lprcClipRect);HRESULT (__cdecl __far far *ReactivateAndUndo)(IOleInPlaceObject far *This);};
struct IOleInPlaceSite {struct IOleInPlaceSiteVtbl far *lpVtbl;};
struct IOleInPlaceSiteVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleInPlaceSite far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleInPlaceSite far *This);ULONG (__cdecl __far far *Release)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *GetWindow)(IOleInPlaceSite far *This, HWND far *lphwnd);HRESULT (__cdecl __far far *ContextSensitiveHelp)(IOleInPlaceSite far *This, BOOL fEnterMode);HRESULT (__cdecl __far far *CanInPlaceActivate)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *OnInPlaceActivate)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *OnUIActivate)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *GetWindowContext)(IOleInPlaceSite far *This, LPOLEINPLACEFRAME far *lplpFrame, LPOLEINPLACEUIWINDOW far *lplpDoc, LPRECT lprcPosRect, LPRECT lprcClipRect, LPOLEINPLACEFRAMEINFO lpFrameInfo);HRESULT (__cdecl __far far *Scroll)(IOleInPlaceSite far *This, SIZE scrollExtent);HRESULT (__cdecl __far far *OnUIDeactivate)(IOleInPlaceSite far *This, BOOL fUndoable);HRESULT (__cdecl __far far *OnInPlaceDeactivate)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *DiscardUndoState)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *DeactivateAndUndo)(IOleInPlaceSite far *This);HRESULT (__cdecl __far far *OnPosRectChange)(IOleInPlaceSite far *This, LPCRECT lprcPosRect);};
struct IOleInPlaceUIWindow {struct IOleInPlaceUIWindowVtbl far *lpVtbl;};
struct IOleInPlaceUIWindowVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleInPlaceUIWindow far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleInPlaceUIWindow far *This);ULONG (__cdecl __far far *Release)(IOleInPlaceUIWindow far *This);HRESULT (__cdecl __far far *GetWindow)(IOleInPlaceUIWindow far *This, HWND far *lphwnd);HRESULT (__cdecl __far far *ContextSensitiveHelp)(IOleInPlaceUIWindow far *This, BOOL fEnterMode);HRESULT (__cdecl __far far *GetBorder)(IOleInPlaceUIWindow far *This, LPRECT lprectBorder);HRESULT (__cdecl __far far *RequestBorderSpace)(IOleInPlaceUIWindow far *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (__cdecl __far far *SetBorderSpace)(IOleInPlaceUIWindow far *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (__cdecl __far far *SetActiveObject)(IOleInPlaceUIWindow far *This, LPOLEINPLACEACTIVEOBJECT lpActiveObject, LPCSTR lpszObjName);};
struct IOleItemContainer {struct IOleItemContainerVtbl far *lpVtbl;};
struct IOleItemContainerVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleItemContainer far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleItemContainer far *This);ULONG (__cdecl __far far *Release)(IOleItemContainer far *This);HRESULT (__cdecl __far far *ParseDisplayName)(IOleItemContainer far *This, LPBC pbc, LPSTR lpszDisplayName, ULONG far *pchEaten, LPMONIKER far *ppmkOut);HRESULT (__cdecl __far far *EnumObjects)(IOleItemContainer far *This, DWORD grfFlags, LPENUMUNKNOWN far *ppenumUnknown);HRESULT (__cdecl __far far *LockContainer)(IOleItemContainer far *This, BOOL fLock);HRESULT (__cdecl __far far *GetObject)(IOleItemContainer far *This, LPSTR lpszItem, DWORD dwSpeedNeeded, LPBINDCTX pbc, const IID far *const riid, LPVOID far *ppvObject);HRESULT (__cdecl __far far *GetObjectStorage)(IOleItemContainer far *This, LPSTR lpszItem, LPBINDCTX pbc, const IID far *const riid, LPVOID far *ppvStorage);HRESULT (__cdecl __far far *IsRunning)(IOleItemContainer far *This, LPSTR lpszItem);};
struct IOleLink {struct IOleLinkVtbl far *lpVtbl;};
struct IOleLinkVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleLink far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleLink far *This);ULONG (__cdecl __far far *Release)(IOleLink far *This);HRESULT (__cdecl __far far *SetUpdateOptions)(IOleLink far *This, DWORD dwUpdateOpt);HRESULT (__cdecl __far far *GetUpdateOptions)(IOleLink far *This, LPDWORD pdwUpdateOpt);HRESULT (__cdecl __far far *SetSourceMoniker)(IOleLink far *This, LPMONIKER pmk, const CLSID far *const rclsid);HRESULT (__cdecl __far far *GetSourceMoniker)(IOleLink far *This, LPMONIKER far *ppmk);HRESULT (__cdecl __far far *SetSourceDisplayName)(IOleLink far *This, LPCSTR lpszDisplayName);HRESULT (__cdecl __far far *GetSourceDisplayName)(IOleLink far *This, LPSTR far *lplpszDisplayName);HRESULT (__cdecl __far far *BindToSource)(IOleLink far *This, DWORD bindflags, LPBINDCTX pbc);HRESULT (__cdecl __far far *BindIfRunning)(IOleLink far *This);HRESULT (__cdecl __far far *GetBoundSource)(IOleLink far *This, LPUNKNOWN far *ppUnk);HRESULT (__cdecl __far far *UnbindSource)(IOleLink far *This);HRESULT (__cdecl __far far *Update)(IOleLink far *This, LPBINDCTX pbc);};
struct IOleObject {struct IOleObjectVtbl far *lpVtbl;};
struct IOleObjectVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleObject far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleObject far *This);ULONG (__cdecl __far far *Release)(IOleObject far *This);HRESULT (__cdecl __far far *SetClientSite)(IOleObject far *This, LPOLECLIENTSITE pClientSite);HRESULT (__cdecl __far far *GetClientSite)(IOleObject far *This, LPOLECLIENTSITE far *ppClientSite);HRESULT (__cdecl __far far *SetHostNames)(IOleObject far *This, LPCSTR szContainerApp, LPCSTR szContainerObj);HRESULT (__cdecl __far far *Close)(IOleObject far *This, DWORD dwSaveOption);HRESULT (__cdecl __far far *SetMoniker)(IOleObject far *This, DWORD dwWhichMoniker, LPMONIKER pmk);HRESULT (__cdecl __far far *GetMoniker)(IOleObject far *This, DWORD dwAssign, DWORD dwWhichMoniker, LPMONIKER far *ppmk);HRESULT (__cdecl __far far *InitFromData)(IOleObject far *This, LPDATAOBJECT pDataObject, BOOL fCreation, DWORD dwReserved);HRESULT (__cdecl __far far *GetClipboardData)(IOleObject far *This, DWORD dwReserved, LPDATAOBJECT far *ppDataObject);HRESULT (__cdecl __far far *DoVerb)(IOleObject far *This, __int32 iVerb, LPMSG lpmsg, LPOLECLIENTSITE pActiveSite, __int32 lindex, HWND hwndParent, LPCRECT lprcPosRect);HRESULT (__cdecl __far far *EnumVerbs)(IOleObject far *This, LPENUMOLEVERB far *ppenumOleVerb);HRESULT (__cdecl __far far *Update)(IOleObject far *This);HRESULT (__cdecl __far far *IsUpToDate)(IOleObject far *This);HRESULT (__cdecl __far far *GetUserClassID)(IOleObject far *This, CLSID far *pClsid);HRESULT (__cdecl __far far *GetUserType)(IOleObject far *This, DWORD dwFormOfType, LPSTR far *pszUserType);HRESULT (__cdecl __far far *SetExtent)(IOleObject far *This, DWORD dwDrawAspect, LPSIZEL lpsizel);HRESULT (__cdecl __far far *GetExtent)(IOleObject far *This, DWORD dwDrawAspect, LPSIZEL lpsizel);HRESULT (__cdecl __far far *Advise)(IOleObject far *This, LPADVISESINK pAdvSink, DWORD far *pdwConnection);HRESULT (__cdecl __far far *Unadvise)(IOleObject far *This, DWORD dwConnection);HRESULT (__cdecl __far far *EnumAdvise)(IOleObject far *This, LPENUMSTATDATA far *ppenumAdvise);HRESULT (__cdecl __far far *GetMiscStatus)(IOleObject far *This, DWORD dwAspect, DWORD far *pdwStatus);HRESULT (__cdecl __far far *SetColorScheme)(IOleObject far *This, LPLOGPALETTE lpLogpal);};
struct IOleUILinkContainer {struct IOleUILinkContainerVtbl far *lpVtbl;};
struct IOleUILinkContainerVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleUILinkContainer far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleUILinkContainer far *This);ULONG (__cdecl __far far *Release)(IOleUILinkContainer far *This);DWORD (__cdecl __far far *GetNextLink)(IOleUILinkContainer far *This, DWORD dwLink);HRESULT (__cdecl __far far *SetLinkUpdateOptions)(IOleUILinkContainer far *This, DWORD dwLink, DWORD dwUpdateOpt);HRESULT (__cdecl __far far *GetLinkUpdateOptions)(IOleUILinkContainer far *This, DWORD dwLink, DWORD far *lpdwUpdateOpt);HRESULT (__cdecl __far far *SetLinkSource)(IOleUILinkContainer far *This, DWORD dwLink, LPSTR lpszDisplayName, ULONG lenFileName, ULONG far *pchEaten, BOOL fValidateSource);HRESULT (__cdecl __far far *GetLinkSource)(IOleUILinkContainer far *This, DWORD dwLink, LPSTR far *lplpszDisplayName, ULONG far *lplenFileName, LPSTR far *lplpszFullLinkType, LPSTR far *lplpszShortLinkType, BOOL far *lpfSourceAvailable, BOOL far *lpfIsSelected);HRESULT (__cdecl __far far *OpenLinkSource)(IOleUILinkContainer far *This, DWORD dwLink);HRESULT (__cdecl __far far *UpdateLink)(IOleUILinkContainer far *This, DWORD dwLink, BOOL fErrorMessage, BOOL fErrorAction);HRESULT (__cdecl __far far *CancelLink)(IOleUILinkContainer far *This, DWORD dwLink);};
struct IOleWindow {struct IOleWindowVtbl far *lpVtbl;};
struct IOleWindowVtbl {HRESULT (__cdecl __far far *QueryInterface)(IOleWindow far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IOleWindow far *This);ULONG (__cdecl __far far *Release)(IOleWindow far *This);HRESULT (__cdecl __far far *GetWindow)(IOleWindow far *This, HWND far *lphwnd);HRESULT (__cdecl __far far *ContextSensitiveHelp)(IOleWindow far *This, BOOL fEnterMode);};
struct IParseDisplayName {struct IParseDisplayNameVtbl far *lpVtbl;};
struct IParseDisplayNameVtbl {HRESULT (__cdecl __far far *QueryInterface)(IParseDisplayName far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IParseDisplayName far *This);ULONG (__cdecl __far far *Release)(IParseDisplayName far *This);HRESULT (__cdecl __far far *ParseDisplayName)(IParseDisplayName far *This, LPBC pbc, LPSTR lpszDisplayName, ULONG far *pchEaten, LPMONIKER far *ppmkOut);};
struct IPersist {struct IPersistVtbl far *lpVtbl;};
struct IPersistFile {struct IPersistFileVtbl far *lpVtbl;};
struct IPersistFileVtbl {HRESULT (__cdecl __far far *QueryInterface)(IPersistFile far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IPersistFile far *This);ULONG (__cdecl __far far *Release)(IPersistFile far *This);HRESULT (__cdecl __far far *GetClassID)(IPersistFile far *This, LPCLSID lpClassID);HRESULT (__cdecl __far far *IsDirty)(IPersistFile far *This);HRESULT (__cdecl __far far *Load)(IPersistFile far *This, LPCSTR lpszFileName, DWORD grfMode);HRESULT (__cdecl __far far *Save)(IPersistFile far *This, LPCSTR lpszFileName, BOOL fRemember);HRESULT (__cdecl __far far *SaveCompleted)(IPersistFile far *This, LPCSTR lpszFileName);HRESULT (__cdecl __far far *GetCurFile)(IPersistFile far *This, LPSTR far *lplpszFileName);};
struct IPersistStorage {struct IPersistStorageVtbl far *lpVtbl;};
struct IPersistStorageVtbl {HRESULT (__cdecl __far far *QueryInterface)(IPersistStorage far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IPersistStorage far *This);ULONG (__cdecl __far far *Release)(IPersistStorage far *This);HRESULT (__cdecl __far far *GetClassID)(IPersistStorage far *This, LPCLSID lpClassID);HRESULT (__cdecl __far far *IsDirty)(IPersistStorage far *This);HRESULT (__cdecl __far far *InitNew)(IPersistStorage far *This, LPSTORAGE pStg);HRESULT (__cdecl __far far *Load)(IPersistStorage far *This, LPSTORAGE pStg);HRESULT (__cdecl __far far *Save)(IPersistStorage far *This, LPSTORAGE pStgSave, BOOL fSameAsLoad);HRESULT (__cdecl __far far *SaveCompleted)(IPersistStorage far *This, LPSTORAGE pStgNew);HRESULT (__cdecl __far far *HandsOffStorage)(IPersistStorage far *This);};
struct IPersistStream {struct IPersistStreamVtbl far *lpVtbl;};
struct IPersistStreamVtbl {HRESULT (__cdecl __far far *QueryInterface)(IPersistStream far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IPersistStream far *This);ULONG (__cdecl __far far *Release)(IPersistStream far *This);HRESULT (__cdecl __far far *GetClassID)(IPersistStream far *This, LPCLSID lpClassID);HRESULT (__cdecl __far far *IsDirty)(IPersistStream far *This);HRESULT (__cdecl __far far *Load)(IPersistStream far *This, LPSTREAM pStm);HRESULT (__cdecl __far far *Save)(IPersistStream far *This, LPSTREAM pStm, BOOL fClearDirty);HRESULT (__cdecl __far far *GetSizeMax)(IPersistStream far *This, ULARGE_INTEGER far *pcbSize);};
struct IPersistVtbl {HRESULT (__cdecl __far far *QueryInterface)(IPersist far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IPersist far *This);ULONG (__cdecl __far far *Release)(IPersist far *This);HRESULT (__cdecl __far far *GetClassID)(IPersist far *This, LPCLSID lpClassID);};
struct IRootStorage {struct IRootStorageVtbl far *lpVtbl;};
struct IRootStorageVtbl {HRESULT (__cdecl __far far *QueryInterface)(IRootStorage far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IRootStorage far *This);ULONG (__cdecl __far far *Release)(IRootStorage far *This);HRESULT (__cdecl __far far *SwitchToFile)(IRootStorage far *This, LPSTR lpstrFile);};
struct IRunnableObject {struct IRunnableObjectVtbl far *lpVtbl;};
struct IRunnableObjectVtbl {HRESULT (__cdecl __far far *QueryInterface)(IRunnableObject far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IRunnableObject far *This);ULONG (__cdecl __far far *Release)(IRunnableObject far *This);HRESULT (__cdecl __far far *GetRunningClass)(IRunnableObject far *This, LPCLSID lpClsid);HRESULT (__cdecl __far far *Run)(IRunnableObject far *This, LPBINDCTX pbc);BOOL (__cdecl __far far *IsRunning)(IRunnableObject far *This);HRESULT (__cdecl __far far *LockRunning)(IRunnableObject far *This, BOOL fLock, BOOL fLastUnlockCloses);HRESULT (__cdecl __far far *SetContainedObject)(IRunnableObject far *This, BOOL fContained);};
struct IRunningObjectTable {struct IRunningObjectTableVtbl far *lpVtbl;};
struct IRunningObjectTableVtbl {HRESULT (__cdecl __far far *QueryInterface)(IRunningObjectTable far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IRunningObjectTable far *This);ULONG (__cdecl __far far *Release)(IRunningObjectTable far *This);HRESULT (__cdecl __far far *Register)(IRunningObjectTable far *This, DWORD grfFlags, LPUNKNOWN punkObject, LPMONIKER pmkObjectName, DWORD far *pdwRegister);HRESULT (__cdecl __far far *Revoke)(IRunningObjectTable far *This, DWORD dwRegister);HRESULT (__cdecl __far far *IsRunning)(IRunningObjectTable far *This, LPMONIKER pmkObjectName);HRESULT (__cdecl __far far *GetObject)(IRunningObjectTable far *This, LPMONIKER pmkObjectName, LPUNKNOWN far *ppunkObject);HRESULT (__cdecl __far far *NoteChangeTime)(IRunningObjectTable far *This, DWORD dwRegister, FILETIME far *pfiletime);HRESULT (__cdecl __far far *GetTimeOfLastChange)(IRunningObjectTable far *This, LPMONIKER pmkObjectName, FILETIME far *pfiletime);HRESULT (__cdecl __far far *EnumRunning)(IRunningObjectTable far *This, LPENUMMONIKER far *ppenumMoniker);};
struct IStdMarshalInfo {struct IStdMarshalInfoVtbl far *lpVtbl;};
struct IStdMarshalInfoVtbl {HRESULT (__cdecl __far far *QueryInterface)(IStdMarshalInfo far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IStdMarshalInfo far *This);ULONG (__cdecl __far far *Release)(IStdMarshalInfo far *This);HRESULT (__cdecl __far far *GetClassForHandler)(IStdMarshalInfo far *This, DWORD dwDestContext, LPVOID pvDestContext, LPCLSID pClsid);};
struct IStorage {struct IStorageVtbl far *lpVtbl;};
struct IStorageVtbl {HRESULT (__cdecl __far far *QueryInterface)(IStorage far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IStorage far *This);ULONG (__cdecl __far far *Release)(IStorage far *This);HRESULT (__cdecl __far far *CreateStream)(IStorage far *This, const char far *pwcsName, DWORD grfMode, DWORD reserved1, DWORD reserved2, IStream far * far *ppstm);HRESULT (__cdecl __far far *OpenStream)(IStorage far *This, const char far *pwcsName, void far *reserved1, DWORD grfMode, DWORD reserved2, IStream far * far *ppstm);HRESULT (__cdecl __far far *CreateStorage)(IStorage far *This, const char far *pwcsName, DWORD grfMode, DWORD reserved1, DWORD reserved2, IStorage far * far *ppstg);HRESULT (__cdecl __far far *OpenStorage)(IStorage far *This, const char far *pwcsName, IStorage far *pstgPriority, DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage far * far *ppstg);HRESULT (__cdecl __far far *CopyTo)(IStorage far *This, DWORD ciidExclude, const IID far *rgiidExclude, SNB snbExclude, IStorage far *pstgDest);HRESULT (__cdecl __far far *MoveElementTo)(IStorage far *This, const char far *lpszName, IStorage far *pstgDest, const char far *lpszNewName, DWORD grfFlags);HRESULT (__cdecl __far far *Commit)(IStorage far *This, DWORD grfCommitFlags);HRESULT (__cdecl __far far *Revert)(IStorage far *This);HRESULT (__cdecl __far far *EnumElements)(IStorage far *This, DWORD reserved1, void far *reserved2, DWORD reserved3, IEnumSTATSTG far * far *ppenm);HRESULT (__cdecl __far far *DestroyElement)(IStorage far *This, const char far *pwcsName);HRESULT (__cdecl __far far *RenameElement)(IStorage far *This, const char far *pwcsOldName, const char far *pwcsNewName);HRESULT (__cdecl __far far *SetElementTimes)(IStorage far *This, const char far *lpszName, const FILETIME far *pctime, const FILETIME far *patime, const FILETIME far *pmtime);HRESULT (__cdecl __far far *SetClass)(IStorage far *This, const CLSID far *const clsid);HRESULT (__cdecl __far far *SetStateBits)(IStorage far *This, DWORD grfStateBits, DWORD grfMask);HRESULT (__cdecl __far far *Stat)(IStorage far *This, STATSTG far *pstatstg, DWORD grfStatFlag);};
struct IStream {struct IStreamVtbl far *lpVtbl;};
struct IStreamVtbl {HRESULT (__cdecl __far far *QueryInterface)(IStream far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IStream far *This);ULONG (__cdecl __far far *Release)(IStream far *This);HRESULT (__cdecl __far far *Read)(IStream far *This, void far *pv, ULONG cb, ULONG far *pcbRead);HRESULT (__cdecl __far far *Write)(IStream far *This, const void far *pv, ULONG cb, ULONG far *pcbWritten);HRESULT (__cdecl __far far *Seek)(IStream far *This, LARGE_INTEGER dlibMove, DWORD dwOrigin, ULARGE_INTEGER far *plibNewPosition);HRESULT (__cdecl __far far *SetSize)(IStream far *This, ULARGE_INTEGER libNewSize);HRESULT (__cdecl __far far *CopyTo)(IStream far *This, IStream far *pstm, ULARGE_INTEGER cb, ULARGE_INTEGER far *pcbRead, ULARGE_INTEGER far *pcbWritten);HRESULT (__cdecl __far far *Commit)(IStream far *This, DWORD grfCommitFlags);HRESULT (__cdecl __far far *Revert)(IStream far *This);HRESULT (__cdecl __far far *LockRegion)(IStream far *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (__cdecl __far far *UnlockRegion)(IStream far *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (__cdecl __far far *Stat)(IStream far *This, STATSTG far *pstatstg, DWORD grfStatFlag);HRESULT (__cdecl __far far *Clone)(IStream far *This, IStream far * far *ppstm);};
struct ITypeComp {struct ITypeCompVtbl far *lpVtbl;};
struct ITypeCompVtbl {HRESULT (__cdecl __far far *QueryInterface)(ITypeComp far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(ITypeComp far *This);unsigned __int32 (__cdecl __far far *Release)(ITypeComp far *This);HRESULT (__cdecl __far far *Bind)(ITypeComp far *This, TCHAR far *szName, unsigned __int32 lHashVal, unsigned int wflags, ITypeInfo far * far *pptinfo, DESCKIND far *pdesckind, BINDPTR far *pbindptr);HRESULT (__cdecl __far far *BindType)(ITypeComp far *This, TCHAR far *szName, unsigned __int32 lHashVal, ITypeInfo far * far *pptinfo, ITypeComp far * far *pptcomp);};
struct ITypeInfo {struct ITypeInfoVtbl far *lpVtbl;};
struct ITypeInfoVtbl {HRESULT (__cdecl __far far *QueryInterface)(ITypeInfo far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(ITypeInfo far *This);unsigned __int32 (__cdecl __far far *Release)(ITypeInfo far *This);HRESULT (__cdecl __far far *GetTypeAttr)(ITypeInfo far *This, TYPEATTR far * far *pptypeattr);HRESULT (__cdecl __far far *GetTypeComp)(ITypeInfo far *This, ITypeComp far * far *pptcomp);HRESULT (__cdecl __far far *GetFuncDesc)(ITypeInfo far *This, unsigned int index, FUNCDESC far * far *ppfuncdesc);HRESULT (__cdecl __far far *GetVarDesc)(ITypeInfo far *This, unsigned int index, VARDESC far * far *ppvardesc);HRESULT (__cdecl __far far *GetNames)(ITypeInfo far *This, MEMBERID memid, BSTR far *rgbstrNames, unsigned int cMaxNames, unsigned int far *pcNames);HRESULT (__cdecl __far far *GetRefTypeOfImplType)(ITypeInfo far *This, unsigned int index, HREFTYPE far *phreftype);HRESULT (__cdecl __far far *GetImplTypeFlags)(ITypeInfo far *This, unsigned int index, int far *pimpltypeflags);HRESULT (__cdecl __far far *GetIDsOfNames)(ITypeInfo far *This, TCHAR far * far *rgszNames, unsigned int cNames, MEMBERID far *rgmemid);HRESULT (__cdecl __far far *Invoke)(ITypeInfo far *This, void far *pvInstance, MEMBERID memid, unsigned int wFlags, DISPPARAMS far *pdispparams, VARIANT far *pvarResult, EXCEPINFO far *pexcepinfo, unsigned int far *puArgErr);HRESULT (__cdecl __far far *GetDocumentation)(ITypeInfo far *This, MEMBERID memid, BSTR far *pbstrName, BSTR far *pbstrDocString, unsigned __int32 far *pdwHelpContext, BSTR far *pbstrHelpFile);HRESULT (__cdecl __far far *GetDllEntry)(ITypeInfo far *This, MEMBERID memid, INVOKEKIND invkind, BSTR far *pbstrDllName, BSTR far *pbstrName, unsigned int far *pwOrdinal);HRESULT (__cdecl __far far *GetRefTypeInfo)(ITypeInfo far *This, HREFTYPE hreftype, ITypeInfo far * far *pptinfo);HRESULT (__cdecl __far far *AddressOfMember)(ITypeInfo far *This, MEMBERID memid, INVOKEKIND invkind, void far * far *ppv);HRESULT (__cdecl __far far *CreateInstance)(ITypeInfo far *This, IUnknown far *punkOuter, const IID far *const riid, void far * far *ppvObj);HRESULT (__cdecl __far far *GetMops)(ITypeInfo far *This, MEMBERID memid, BSTR far *pbstrMops);HRESULT (__cdecl __far far *GetContainingTypeLib)(ITypeInfo far *This, ITypeLib far * far *pptlib, unsigned int far *pindex);void (__cdecl __far far *ReleaseTypeAttr)(ITypeInfo far *This, TYPEATTR far *ptypeattr);void (__cdecl __far far *ReleaseFuncDesc)(ITypeInfo far *This, FUNCDESC far *pfuncdesc);void (__cdecl __far far *ReleaseVarDesc)(ITypeInfo far *This, VARDESC far *pvardesc);};
struct ITypeLib {struct ITypeLibVtbl far *lpVtbl;};
struct ITypeLibVtbl {HRESULT (__cdecl __far far *QueryInterface)(ITypeLib far *This, const IID far *const riid, void far * far *ppvObj);unsigned __int32 (__cdecl __far far *AddRef)(ITypeLib far *This);unsigned __int32 (__cdecl __far far *Release)(ITypeLib far *This);unsigned int (__cdecl __far far *GetTypeInfoCount)(ITypeLib far *This);HRESULT (__cdecl __far far *GetTypeInfo)(ITypeLib far *This, unsigned int index, ITypeInfo far * far *pptinfo);HRESULT (__cdecl __far far *GetTypeInfoType)(ITypeLib far *This, unsigned int index, TYPEKIND far *ptypekind);HRESULT (__cdecl __far far *GetTypeInfoOfGuid)(ITypeLib far *This, const GUID far *const guid, ITypeInfo far * far *pptinfo);HRESULT (__cdecl __far far *GetLibAttr)(ITypeLib far *This, TLIBATTR far * far *pptlibattr);HRESULT (__cdecl __far far *GetTypeComp)(ITypeLib far *This, ITypeComp far * far *pptcomp);HRESULT (__cdecl __far far *GetDocumentation)(ITypeLib far *This, int index, BSTR far *pbstrName, BSTR far *pbstrDocString, unsigned __int32 far *pdwHelpContext, BSTR far *pbstrHelpFile);HRESULT (__cdecl __far far *IsName)(ITypeLib far *This, TCHAR far *szNameBuf, unsigned __int32 lHashVal, int far *lpfName);HRESULT (__cdecl __far far *FindName)(ITypeLib far *This, TCHAR far *szNameBuf, unsigned __int32 lHashVal, ITypeInfo far * far *rgptinfo, MEMBERID far *rgmemid, unsigned int far *pcFound);void (__cdecl __far far *ReleaseTLibAttr)(ITypeLib far *This, TLIBATTR far *ptlibattr);};
struct IUnknown {struct IUnknownVtbl far *lpVtbl;};
struct IUnknownVtbl {HRESULT (__cdecl __far far *QueryInterface)(IUnknown far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IUnknown far *This);ULONG (__cdecl __far far *Release)(IUnknown far *This);};
struct IViewObject {struct IViewObjectVtbl far *lpVtbl;};
struct IViewObject2 {struct IViewObject2Vtbl far *lpVtbl;};
struct IViewObject2Vtbl {HRESULT (__cdecl __far far *QueryInterface)(IViewObject2 far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IViewObject2 far *This);ULONG (__cdecl __far far *Release)(IViewObject2 far *This);HRESULT (__cdecl __far far *Draw)(IViewObject2 far *This, DWORD dwDrawAspect, __int32 lindex, void far *pvAspect, DVTARGETDEVICE far *ptd, HDC hicTargetDev, HDC hdcDraw, LPCRECTL lprcBounds, LPCRECTL lprcWBounds, BOOL (__pascal __far far *pfnContinue)(DWORD), DWORD dwContinue);HRESULT (__cdecl __far far *GetColorSet)(IViewObject2 far *This, DWORD dwDrawAspect, __int32 lindex, void far *pvAspect, DVTARGETDEVICE far *ptd, HDC hicTargetDev, LPLOGPALETTE far *ppColorSet);HRESULT (__cdecl __far far *Freeze)(IViewObject2 far *This, DWORD dwDrawAspect, __int32 lindex, void far *pvAspect, DWORD far *pdwFreeze);HRESULT (__cdecl __far far *Unfreeze)(IViewObject2 far *This, DWORD dwFreeze);HRESULT (__cdecl __far far *SetAdvise)(IViewObject2 far *This, DWORD aspects, DWORD advf, LPADVISESINK pAdvSink);HRESULT (__cdecl __far far *GetAdvise)(IViewObject2 far *This, DWORD far *pAspects, DWORD far *pAdvf, LPADVISESINK far *ppAdvSink);HRESULT (__cdecl __far far *GetExtent)(IViewObject2 far *This, DWORD dwDrawAspect, __int32 lindex, DVTARGETDEVICE far *ptd, LPSIZEL lpsizel);};
struct IViewObjectVtbl {HRESULT (__cdecl __far far *QueryInterface)(IViewObject far *This, const IID far *const riid, LPVOID far *ppvObj);ULONG (__cdecl __far far *AddRef)(IViewObject far *This);ULONG (__cdecl __far far *Release)(IViewObject far *This);HRESULT (__cdecl __far far *Draw)(IViewObject far *This, DWORD dwDrawAspect, __int32 lindex, void far *pvAspect, DVTARGETDEVICE far *ptd, HDC hicTargetDev, HDC hdcDraw, LPCRECTL lprcBounds, LPCRECTL lprcWBounds, BOOL (__pascal __far far *pfnContinue)(DWORD), DWORD dwContinue);HRESULT (__cdecl __far far *GetColorSet)(IViewObject far *This, DWORD dwDrawAspect, __int32 lindex, void far *pvAspect, DVTARGETDEVICE far *ptd, HDC hicTargetDev, LPLOGPALETTE far *ppColorSet);HRESULT (__cdecl __far far *Freeze)(IViewObject far *This, DWORD dwDrawAspect, __int32 lindex, void far *pvAspect, DWORD far *pdwFreeze);HRESULT (__cdecl __far far *Unfreeze)(IViewObject far *This, DWORD dwFreeze);HRESULT (__cdecl __far far *SetAdvise)(IViewObject far *This, DWORD aspects, DWORD advf, LPADVISESINK pAdvSink);HRESULT (__cdecl __far far *GetAdvise)(IViewObject far *This, DWORD far *pAspects, DWORD far *pAdvf, LPADVISESINK far *ppAdvSink);};
typedef struct joycaps_tag JOYCAPS;
typedef struct joyinfo_tag JOYINFO;
typedef struct tagKERNINGPAIR KERNINGPAIR;
typedef WORD KEYARRAY[128];
typedef unsigned int LANGID;
typedef struct _LARGE_INTEGER LARGE_INTEGER;
typedef unsigned __int32 LCID;
typedef unsigned __int32 LCTYPE;
typedef long double LDOUBLE;
typedef unsigned __int32 LHANDLE;
typedef enum tagLIBFLAGS LIBFLAGS;
typedef FARPROC LINEDDAPROC;
typedef struct linger LINGER;
typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;
typedef struct tagLOCALENTRY LOCALENTRY;
typedef HANDLE LOCALHANDLE;
typedef struct tagLOCALINFO LOCALINFO;
typedef enum tagLOCKTYPE LOCKTYPE;
typedef struct tagLOGBRUSH LOGBRUSH;
typedef struct tagLOGFONT LOGFONT;
typedef struct tagLOGPALETTE LOGPALETTE;
typedef struct tagLOGPEN LOGPEN;
typedef ABC far *LPABC;
typedef IAdviseSink far *LPADVISESINK;
typedef IAdviseSink2 far *LPADVISESINK2;
typedef __int32 LPARAM;
typedef AUXCAPS far *LPAUXCAPS;
typedef IBindCtx far *LPBC;
typedef struct tagBANDINFOSTRUCT far *LPBI;
typedef IBindCtx far *LPBINDCTX;
typedef union tagBINDPTR far *LPBINDPTR;
typedef struct tagBIND_OPTS far *LPBIND_OPTS;
typedef BITMAP far *LPBITMAP;
typedef BITMAPCOREHEADER far *LPBITMAPCOREHEADER;
typedef BITMAPCOREINFO far *LPBITMAPCOREINFO;
typedef BITMAPFILEHEADER far *LPBITMAPFILEHEADER;
typedef BITMAPINFO far *LPBITMAPINFO;
typedef BITMAPINFOHEADER far *LPBITMAPINFOHEADER;
typedef LPRECT LPBORDERWIDTHS;
typedef struct tagBOXLAYOUT far *LPBOXLAYOUT;
typedef BSTR far *LPBSTR;
typedef BYTE far *LPBYTE;
typedef struct tagCALBSTRUCT far *LPCALBSTRUCT;
typedef int far *LPCATCHBUF;
typedef LPCRECT LPCBORDERWIDTHS;
typedef CBT_CREATEWND far *LPCBT_CREATEWND;
typedef CHOOSECOLOR far *LPCHOOSECOLOR;
typedef CHOOSEFONT far *LPCHOOSEFONT;
typedef IClassFactory far *LPCLASSFACTORY;
typedef CLIENTCREATESTRUCT far *LPCLIENTCREATESTRUCT;
typedef CLIPFORMAT far *LPCLIPFORMAT;
typedef CLSID far *LPCLSID;
typedef COMPAREITEMSTRUCT far *LPCOMPAREITEMSTRUCT;
typedef struct tagCPLINFO far *LPCPLINFO;
typedef CREATESTRUCT far *LPCREATESTRUCT;
typedef ICreateTypeInfo far *LPCREATETYPEINFO;
typedef ICreateTypeLib far *LPCREATETYPELIB;
typedef const RECT far *LPCRECT;
typedef const RECTL far *LPCRECTL;
typedef const char far *LPCSTR;
typedef CTLINFO far *LPCTLINFO;
typedef CTLSTYLE far *LPCTLSTYLE;
typedef IDataAdviseHolder far *LPDATAADVISEHOLDER;
typedef IDataObject far *LPDATAOBJECT;
typedef DCB far *LPDCB;
typedef DEBUGHOOKINFO far *LPDEBUGHOOKINFO;
typedef DELETEITEMSTRUCT far *LPDELETEITEMSTRUCT;
typedef DEVMODE far *LPDEVMODE;
typedef DEVNAMES far *LPDEVNAMES;
typedef int (__pascal __far far *LPDF)(int, LPVOID, LPVOID, int, DWORD, DWORD);
typedef IDispatch far *LPDISPATCH;
typedef DOCINFO far *LPDOCINFO;
typedef DRAWITEMSTRUCT far *LPDRAWITEMSTRUCT;
typedef DRIVERINFOSTRUCT far *LPDRIVERINFOSTRUCT;
typedef IDropSource far *LPDROPSOURCE;
typedef IDropTarget far *LPDROPTARGET;
typedef DRVCALLBACK far *LPDRVCALLBACK;
typedef DRVCONFIGINFO far *LPDRVCONFIGINFO;
typedef DWORD far *LPDWORD;
typedef struct tagELEMDESC far *LPELEMDESC;
typedef IEnumFORMATETC far *LPENUMFORMATETC;
typedef struct tagENUMLOGFONT far *LPENUMLOGFONT;
typedef IEnumMoniker far *LPENUMMONIKER;
typedef IEnumOLEVERB far *LPENUMOLEVERB;
typedef IEnumSTATDATA far *LPENUMSTATDATA;
typedef IEnumSTATSTG far *LPENUMSTATSTG;
typedef IEnumString far *LPENUMSTRING;
typedef IEnumUnknown far *LPENUMUNKNOWN;
typedef IEnumVARIANT far *LPENUMVARIANT;
typedef EVENTMSG far *LPEVENTMSG;
typedef struct tagEXCEPINFO far *LPEXCEPINFO;
typedef IExternalConnection far *LPEXTERNALCONNECTION;
typedef struct fd_set far *LPFD_SET;
typedef FINDREPLACE far *LPFINDREPLACE;
typedef struct tagFIXED far *LPFIXED;
typedef struct tagFMS_GETDRIVEINFO far *LPFMS_GETDRIVEINFO;
typedef struct tagFMS_GETFILESEL far *LPFMS_GETFILESEL;
typedef struct tagFMS_LOAD far *LPFMS_LOAD;
typedef HRESULT (__pascal __far far *LPFNCANUNLOADNOW)();
typedef DWORD (__pascal __far far *LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, DEVMODE far *);
typedef UINT (__pascal __far far *LPFNDEVMODE)(HWND, HMODULE, DEVMODE far *, LPSTR, LPSTR, DEVMODE far *, LPSTR, UINT);
typedef HRESULT (__pascal __far far *LPFNGETCLASSOBJECT)(const CLSID far *const, const IID far *const, LPVOID far *);
typedef UINT (__pascal __far far *LPFNIDTOSTR)(UINT, LPSTR, UINT);
typedef BOOL (__pascal __far far *LPFNNOTIFYCALLBACK)(WORD wID, DWORD dwData);
typedef UINT (__pascal __far far *LPFNOLEUIHOOK)(HWND, UINT, WPARAM, LPARAM);
typedef BOOL (__pascal __far far *LPFNRAWHOOK)(LPPENPACKET);
typedef DWORD (__pascal __far far *LPFNSTRTOID)(LPSTR);
typedef struct tagFORMATETC far *LPFORMATETC;
typedef struct tagFUNCDESC far *LPFUNCDESC;
typedef int (__pascal __far far *LPFUNCRESULTS)(LPRCRESULT, REC);
typedef struct tagGLYPHMETRICS far *LPGLYPHMETRICS;
typedef GUID far *LPGUID;
typedef struct tagGUIDE far *LPGUIDE;
typedef HANDLE far *LPHANDLE;
typedef HANDLETABLE far *LPHANDLETABLE;
typedef HELPWININFO far *LPHELPWININFO;
typedef HMIDIIN far *LPHMIDIIN;
typedef HMIDIOUT far *LPHMIDIOUT;
typedef struct hostent far *LPHOSTENT;
typedef HWAVEIN far *LPHWAVEIN;
typedef HWAVEOUT far *LPHWAVEOUT;
typedef struct tagIDLDESC far *LPIDLDESC;
typedef IID far *LPIID;
typedef int far *LPINT;
typedef struct tagINTERFACEDATA far *LPINTERFACEDATA;
typedef struct tagINTERFACEIMPL far *LPINTERFACEIMPL;
typedef struct tagINTERFACEINFO far *LPINTERFACEINFO;
typedef struct in_addr far *LPIN_ADDR;
typedef JOYCAPS far *LPJOYCAPS;
typedef JOYINFO far *LPJOYINFO;
typedef struct tagKERNINGPAIR far *LPKERNINGPAIR;
typedef WORD far *LPKEYARRAY;
typedef unsigned __int32 far *LPLHANDLE;
typedef struct linger far *LPLINGER;
typedef struct tagOBJECTDESCRIPTOR far *LPLINKSRCDESCRIPTOR;
typedef ILockBytes far *LPLOCKBYTES;
typedef LOGBRUSH far *LPLOGBRUSH;
typedef LOGFONT far *LPLOGFONT;
typedef LOGPALETTE far *LPLOGPALETTE;
typedef LOGPEN far *LPLOGPEN;
typedef __int32 far *LPLONG;
typedef IMalloc far *LPMALLOC;
typedef IMarshal far *LPMARSHAL;
typedef struct tagMAT2 far *LPMAT2;
typedef MCI_ANIM_OPEN_PARMS far *LPMCI_ANIM_OPEN_PARMS;
typedef MCI_ANIM_PLAY_PARMS far *LPMCI_ANIM_PLAY_PARMS;
typedef MCI_ANIM_RECT_PARMS far *LPMCI_ANIM_RECT_PARMS;
typedef MCI_ANIM_STEP_PARMS far *LPMCI_ANIM_STEP_PARMS;
typedef MCI_ANIM_UPDATE_PARMS far *LPMCI_ANIM_UPDATE_PARMS;
typedef MCI_ANIM_WINDOW_PARMS far *LPMCI_ANIM_WINDOW_PARMS;
typedef MCI_BREAK_PARMS far *LPMCI_BREAK_PARMS;
typedef MCI_GENERIC_PARMS far *LPMCI_GENERIC_PARMS;
typedef MCI_GETDEVCAPS_PARMS far *LPMCI_GETDEVCAPS_PARMS;
typedef MCI_INFO_PARMS far *LPMCI_INFO_PARMS;
typedef MCI_LOAD_PARMS far *LPMCI_LOAD_PARMS;
typedef MCI_OPEN_PARMS far *LPMCI_OPEN_PARMS;
typedef MCI_OVLY_LOAD_PARMS far *LPMCI_OVLY_LOAD_PARMS;
typedef MCI_OVLY_OPEN_PARMS far *LPMCI_OVLY_OPEN_PARMS;
typedef MCI_OVLY_RECT_PARMS far *LPMCI_OVLY_RECT_PARMS;
typedef MCI_OVLY_SAVE_PARMS far *LPMCI_OVLY_SAVE_PARMS;
typedef MCI_OVLY_WINDOW_PARMS far *LPMCI_OVLY_WINDOW_PARMS;
typedef MCI_PLAY_PARMS far *LPMCI_PLAY_PARMS;
typedef MCI_RECORD_PARMS far *LPMCI_RECORD_PARMS;
typedef MCI_SAVE_PARMS far *LPMCI_SAVE_PARMS;
typedef MCI_SEEK_PARMS far *LPMCI_SEEK_PARMS;
typedef MCI_SEQ_SET_PARMS far *LPMCI_SEQ_SET_PARMS;
typedef MCI_SET_PARMS far *LPMCI_SET_PARMS;
typedef MCI_SOUND_PARMS far *LPMCI_SOUND_PARMS;
typedef MCI_STATUS_PARMS far *LPMCI_STATUS_PARMS;
typedef MCI_SYSINFO_PARMS far *LPMCI_SYSINFO_PARMS;
typedef MCI_VD_ESCAPE_PARMS far *LPMCI_VD_ESCAPE_PARMS;
typedef MCI_VD_PLAY_PARMS far *LPMCI_VD_PLAY_PARMS;
typedef MCI_VD_STEP_PARMS far *LPMCI_VD_STEP_PARMS;
typedef MCI_WAVE_DELETE_PARMS far *LPMCI_WAVE_DELETE_PARMS;
typedef MCI_WAVE_OPEN_PARMS far *LPMCI_WAVE_OPEN_PARMS;
typedef MCI_WAVE_SET_PARMS far *LPMCI_WAVE_SET_PARMS;
typedef MDICREATESTRUCT far *LPMDICREATESTRUCT;
typedef MEASUREITEMSTRUCT far *LPMEASUREITEMSTRUCT;
typedef IMessageFilter far *LPMESSAGEFILTER;
typedef METAFILEPICT far *LPMETAFILEPICT;
typedef METARECORD far *LPMETARECORD;
typedef struct tagMETHODDATA far *LPMETHODDATA;
typedef MIDICALLBACK far *LPMIDICALLBACK;
typedef MIDIHDR far *LPMIDIHDR;
typedef MIDIINCAPS far *LPMIDIINCAPS;
typedef MIDIOUTCAPS far *LPMIDIOUTCAPS;
typedef MMCKINFO far *LPMMCKINFO;
typedef MMIOINFO far *LPMMIOINFO;
typedef MMIOPROC far *LPMMIOPROC;
typedef MMTIME far *LPMMTIME;
typedef IMoniker far *LPMONIKER;
typedef MOUSEHOOKSTRUCT far *LPMOUSEHOOKSTRUCT;
typedef MSG far *LPMSG;
typedef NCCALCSIZE_PARAMS far *LPNCCALCSIZE_PARAMS;
typedef struct tagNEWCPLINFO far *LPNEWCPLINFO;
typedef NEWTEXTMETRIC far *LPNEWTEXTMETRIC;
typedef struct tagOBJECTDESCRIPTOR far *LPOBJECTDESCRIPTOR;
typedef struct tagOEMPENINFO far *LPOEMPENINFO;
typedef OFSTRUCT far *LPOFSTRUCT;
typedef IOleAdviseHolder far *LPOLEADVISEHOLDER;
typedef IOleCache far *LPOLECACHE;
typedef IOleCache2 far *LPOLECACHE2;
typedef IOleCacheControl far *LPOLECACHECONTROL;
typedef IOleClientSite far *LPOLECLIENTSITE;
typedef IOleContainer far *LPOLECONTAINER;
typedef IOleInPlaceActiveObject far *LPOLEINPLACEACTIVEOBJECT;
typedef IOleInPlaceFrame far *LPOLEINPLACEFRAME;
typedef struct tagOIFI far *LPOLEINPLACEFRAMEINFO;
typedef IOleInPlaceObject far *LPOLEINPLACEOBJECT;
typedef IOleInPlaceSite far *LPOLEINPLACESITE;
typedef IOleInPlaceUIWindow far *LPOLEINPLACEUIWINDOW;
typedef IOleItemContainer far *LPOLEITEMCONTAINER;
typedef IOleLink far *LPOLELINK;
typedef struct tagOleMenuGroupWidths far *LPOLEMENUGROUPWIDTHS;
typedef IOleObject far *LPOLEOBJECT;
typedef OLERENDER far *LPOLERENDER;
typedef struct _OLESTREAM far *LPOLESTREAM;
typedef OLESTREAMVTBL far *LPOLESTREAMVTBL;
typedef struct tagOLEUIBUSY far *LPOLEUIBUSY;
typedef struct tagOLEUICHANGEICON far *LPOLEUICHANGEICON;
typedef struct tagOLEUICONVERT far *LPOLEUICONVERT;
typedef struct tagOLEUIEDITLINKS far *LPOLEUIEDITLINKS;
typedef struct tagOLEUIINSERTOBJECT far *LPOLEUIINSERTOBJECT;
typedef struct tagOLEUIPASTEENTRY far *LPOLEUIPASTEENTRY;
typedef struct tagOLEUIPASTESPECIAL far *LPOLEUIPASTESPECIAL;
typedef OLEUPDATE far *LPOLEUPDATE;
typedef struct tagOLEVERB far *LPOLEVERB;
typedef IOleWindow far *LPOLEWINDOW;
typedef OPENFILENAME far *LPOPENFILENAME;
typedef struct tagOUTLINETEXTMETRIC far *LPOUTLINETEXTMETRIC;
typedef PAINTSTRUCT far *LPPAINTSTRUCT;
typedef PALETTEENTRY far *LPPALETTEENTRY;
typedef struct tagPANOSE far *LPPANOSE;
typedef struct tagPARAMDATA far *LPPARAMDATA;
typedef IParseDisplayName far *LPPARSEDISPLAYNAME;
typedef WORD far *LPPATCHARRAY;
typedef PATTERN far *LPPATTERN;
typedef PCMWAVEFORMAT far *LPPCMWAVEFORMAT;
typedef struct tagPENDATAHEADER far *LPPENDATA;
typedef struct tagPENDATAHEADER far *LPPENDATAHEADER;
typedef struct tagPENINFO far *LPPENINFO;
typedef struct tagPENPACKET far *LPPENPACKET;
typedef IPersist far *LPPERSIST;
typedef IPersistFile far *LPPERSISTFILE;
typedef IPersistStorage far *LPPERSISTSTORAGE;
typedef IPersistStream far *LPPERSISTSTREAM;
typedef POINT far *LPPOINT;
typedef struct tagPOINTFX far *LPPOINTFX;
typedef PRINTDLG far *LPPRINTDLG;
typedef struct protoent far *LPPROTOENT;
typedef RASTERIZER_STATUS far *LPRASTERIZER_STATUS;
typedef struct tagRC far *LPRC;
typedef struct tagRCRESULT far *LPRCRESULT;
typedef RECT far *LPRECT;
typedef struct tagRECTL far *LPRECTL;
typedef struct tagRECTOFS far *LPRECTOFS;
typedef RGBQUAD far *LPRGBQUAD;
typedef RGBTRIPLE far *LPRGBTRIPLE;
typedef IRootStorage far *LPROOTSTORAGE;
typedef IRunnableObject far *LPRUNNABLEOBJECT;
typedef IRunningObjectTable far *LPRUNNINGOBJECTTABLE;
typedef struct tagSAFEARRAY far *LPSAFEARRAY;
typedef struct tagSAFEARRAYBOUND far *LPSAFEARRAYBOUND;
typedef SEGINFO far *LPSEGINFO;
typedef struct servent far *LPSERVENT;
typedef SIZE far *LPSIZE;
typedef struct tagSIZEL far *LPSIZEL;
typedef struct tagSKBINFO far *LPSKBINFO;
typedef struct sockaddr far *LPSOCKADDR;
typedef struct sockaddr_in far *LPSOCKADDR_IN;
typedef STATDATA far *LPSTATDATA;
typedef IStdMarshalInfo far *LPSTDMARSHALINFO;
typedef struct tagSTGMEDIUM far *LPSTGMEDIUM;
typedef IStorage far *LPSTORAGE;
typedef char far *LPSTR;
typedef IStream far *LPSTREAM;
typedef struct tagSTROKEINFO far *LPSTROKEINFO;
typedef struct tagSYC far *LPSYC;
typedef struct tagSYE far *LPSYE;
typedef struct tagSYG far *LPSYG;
typedef SYV far *LPSYV;
typedef TEXTMETRIC far *LPTEXTMETRIC;
typedef TIMECALLBACK far *LPTIMECALLBACK;
typedef TIMECAPS far *LPTIMECAPS;
typedef struct timeval far *LPTIMEVAL;
typedef struct tagTLIBATTR far *LPTLIBATTR;
typedef struct tagTTPOLYCURVE far *LPTTPOLYCURVE;
typedef struct tagTTPOLYGONHEADER far *LPTTPOLYGONHEADER;
typedef struct tagTYPEATTR far *LPTYPEATTR;
typedef ITypeComp far *LPTYPECOMP;
typedef ITypeInfo far *LPTYPEINFO;
typedef ITypeLib far *LPTYPELIB;
typedef unsigned __int32 far *LPULONG;
typedef IUnknown far *LPUNKNOWN;
typedef struct tagVARDESC far *LPVARDESC;
typedef struct tagVARIANT far *LPVARIANT;
typedef struct tagVARIANT far *LPVARIANTARG;
typedef IViewObject far *LPVIEWOBJECT;
typedef IViewObject2 far *LPVIEWOBJECT2;
typedef void far *LPVOID;
typedef WAVECALLBACK far *LPWAVECALLBACK;
typedef WAVEFORMAT far *LPWAVEFORMAT;
typedef WAVEHDR far *LPWAVEHDR;
typedef WAVEINCAPS far *LPWAVEINCAPS;
typedef WAVEOUTCAPS far *LPWAVEOUTCAPS;
typedef WINDOWPLACEMENT far *LPWINDOWPLACEMENT;
typedef WINDOWPOS far *LPWINDOWPOS;
typedef WNDCLASS far *LPWNDCLASS;
typedef WORD far *LPWORD;
typedef WSADATA far *LPWSADATA;
typedef __int32 LRESULT;
enum MACRO_ABSOLUTE {ABSOLUTE = 1,RELATIVE = 2,};
enum MACRO_ADDRESS {WSANO_ADDRESS = 11004,NO_ADDRESS = 11004,};
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_IPX = 6,AF_NS = 6,AF_ISO = 7,AF_OSI = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_NETBIOS = 17,AF_MAX = 18,};
enum MACRO_AGAIN {WSATRY_AGAIN = 11002,TRY_AGAIN = 11002,};
enum MACRO_ALC {ALC_ALL = 0x43FF,ALC_DEFAULT = 0x0,ALC_LCALPHA = 0x1,ALC_UCALPHA = 0x2,ALC_ALPHA = 0x3,ALC_NUMERIC = 0x4,ALC_ALPHANUMERIC = 0x7,ALC_PUNC = 0x8,ALC_MATH = 0x10,ALC_MONETARY = 0x20,ALC_OTHER = 0x40,ALC_WHITE = 0x100,ALC_NONPRINT = 0x200,ALC_GESTURE = 0x4000,ALC_USEBITMAP = 0x8000,ALC_DBCS = 0x400,ALC_HIRAGANA = 0x0,ALC_KATAKANA = 0x0,ALC_KANJI = 0x0,ALC_OEM = 0x0,ALC_RESERVED = 0x3800,ALC_NOPRIORITY = 0x0,ALC_SYSMINIMUM = 0x410F,};
enum MACRO_ALTERNATE {ALTERNATE = 1,WINDING = 2,};
enum MACRO_APPCLASS {APPCLASS_STANDARD = 0x0,APPCLASS_MASK = 0xF,};
enum MACRO_APPCMD {APPCMD_CLIENTONLY = 0x10,APPCMD_FILTERINITS = 0x20,APPCMD_MASK = 0xFF0,};
enum MACRO_ASPECT {ASPECT_FILTERING = 0x1,};
enum MACRO_ASPECTX {ASPECTX = 40,};
enum MACRO_ASPECTXY {ASPECTXY = 44,};
enum MACRO_ASPECTY {ASPECTY = 42,};
enum MACRO_AUX {AUX_MAPPER = -1,};
enum MACRO_AUXCAPS {AUXCAPS_CDAUDIO = 1,AUXCAPS_AUXIN = 2,AUXCAPS_VOLUME = 1,AUXCAPS_LRVOLUME = 2,};
enum MACRO_BANDINFO {BANDINFO = 24,};
enum MACRO_BASE {MMSYSERR_BASE = 0,WAVERR_BASE = 32,MIDIERR_BASE = 64,TIMERR_BASE = 96,JOYERR_BASE = 160,MCIERR_BASE = 256,};
enum MACRO_BI {BI_RGB = 0,BI_RLE8 = 1,BI_RLE4 = 2,};
enum MACRO_BITPENUP {BITPENUP = 0x8000,};
enum MACRO_BITSPIXEL {BITSPIXEL = 12,};
enum MACRO_BLACKNESS {BLACKNESS = 0x42,};
enum MACRO_BLACKONWHITE {BLACKONWHITE = 1,WHITEONBLACK = 2,};
enum MACRO_BM {BM_GETCHECK = 1024,BM_SETCHECK = 1025,BM_GETSTATE = 1026,BM_SETSTATE = 1027,BM_SETSTYLE = 1028,};
enum MACRO_BN {BN_CLICKED = 0,BN_PAINT = 1,BN_HILITE = 2,BN_UNHILITE = 3,BN_DISABLE = 4,BN_DOUBLECLICKED = 5,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_BRUSH {WHITE_BRUSH = 0,LTGRAY_BRUSH = 1,GRAY_BRUSH = 2,DKGRAY_BRUSH = 3,BLACK_BRUSH = 4,NULL_BRUSH = 5,HOLLOW_BRUSH = 5,};
enum MACRO_BS {BS_SOLID = 0,BS_NULL = 1,BS_HOLLOW = 1,BS_HATCHED = 2,BS_PATTERN = 3,BS_INDEXED = 4,BS_DIBPATTERN = 5,};
enum MACRO_BS_PUSHBUTTON {BS_PUSHBUTTON = 0x0,BS_DEFPUSHBUTTON = 0x1,BS_CHECKBOX = 0x2,BS_AUTOCHECKBOX = 0x3,BS_RADIOBUTTON = 0x4,BS_3STATE = 0x5,BS_AUTO3STATE = 0x6,BS_GROUPBOX = 0x7,BS_USERBUTTON = 0x8,BS_AUTORADIOBUTTON = 0x9,BS_OWNERDRAW = 0xB,BS_LEFTTEXT = 0x20,};
enum MACRO_BUFFLEN {BUFFLEN = 255,};
enum MACRO_BXD {BXD_CELLWIDTH = 12,BXD_CELLHEIGHT = 16,BXD_BASEHEIGHT = 13,BXD_BASEHORZ = 0,BXD_CUSPHEIGHT = 2,BXD_ENDCUSPHEIGHT = 4,};
enum MACRO_BXS {BXS_NONE = 0,BXS_RECT = 1,BXS_ENDTEXTMARK = 2,BXS_MASK = 3,};
enum MACRO_BZ {BZ_DISABLECANCELBUTTON = 0x1,BZ_DISABLESWITCHTOBUTTON = 0x2,BZ_DISABLERETRYBUTTON = 0x4,BZ_NOTRESPONDINGDIALOG = 0x8,};
enum MACRO_C1 {C1_TRANSPARENT = 0x1,};
enum MACRO_C1_UPPER {C1_UPPER = 0x1,C1_LOWER = 0x2,C1_DIGIT = 0x4,C1_SPACE = 0x8,C1_PUNCT = 0x10,C1_CNTRL = 0x20,C1_BLANK = 0x40,C1_XDIGIT = 0x80,C1_ALPHA = 0x100,};
enum MACRO_C2 {C2_LEFTTORIGHT = 0x1,C2_RIGHTTOLEFT = 0x2,C2_EUROPENUMBER = 0x3,C2_EUROPESEPARATOR = 0x4,C2_EUROPETERMINATOR = 0x5,C2_ARABICNUMBER = 0x6,C2_COMMONSEPARATOR = 0x7,C2_BLOCKSEPARATOR = 0x8,C2_SEGMENTSEPARATOR = 0x9,C2_WHITESPACE = 0xA,C2_OTHERNEUTRAL = 0xB,C2_NOTAPPLICABLE = 0x0,};
enum MACRO_C3 {C3_NONSPACING = 0x1,C3_DIACRITIC = 0x2,C3_VOWELMARK = 0x4,C3_SYMBOL = 0x8,C3_KATAKANA = 0x10,C3_HIRAGANA = 0x20,C3_HALFWIDTH = 0x40,C3_FULLWIDTH = 0x80,C3_IDEOGRAPH = 0x100,C3_JAPANACCENT = 0x200,C3_NOTAPPLICABLE = 0x0,};
enum MACRO_CACHE {CACHE_E_FIRST = 0x170,CACHE_E_LAST = 0x17F,CACHE_S_FIRST = 0x170,CACHE_S_LAST = 0x17F,};
enum MACRO_CACHE_E {CACHE_E_NOCACHE_UPDATED = 368,CACHE_S_FORMATETC_NOTSUPPORTED = 368,CACHE_S_SAMECACHE = 369,CACHE_S_SOMECACHES_NOTUPDATED = 370,};
enum MACRO_CADV {CADV_LATEACK = 0xFFFF,};
enum MACRO_CALLBACK {CALLBACK_TYPEMASK = 0x0,CALLBACK_NULL = 0x0,CALLBACK_WINDOW = 0x0,CALLBACK_TASK = 0x0,CALLBACK_FUNCTION = 0x0,};
enum MACRO_CAPS1 {CAPS1 = 94,};
enum MACRO_CB {CB_GETEDITSEL = 1024,CB_LIMITTEXT = 1025,CB_SETEDITSEL = 1026,CB_ADDSTRING = 1027,CB_DELETESTRING = 1028,CB_DIR = 1029,CB_GETCOUNT = 1030,CB_GETCURSEL = 1031,CB_GETLBTEXT = 1032,CB_GETLBTEXTLEN = 1033,CB_INSERTSTRING = 1034,CB_RESETCONTENT = 1035,CB_FINDSTRING = 1036,CB_SELECTSTRING = 1037,CB_SETCURSEL = 1038,CB_SHOWDROPDOWN = 1039,CB_GETITEMDATA = 1040,CB_SETITEMDATA = 1041,CB_GETDROPPEDCONTROLRECT = 1042,CB_SETITEMHEIGHT = 1043,CB_GETITEMHEIGHT = 1044,CB_SETEXTENDEDUI = 1045,CB_GETEXTENDEDUI = 1046,CB_GETDROPPEDSTATE = 1047,CB_FINDSTRINGEXACT = 1048,};
enum MACRO_CBF {CBF_FAIL_SELFCONNECTIONS = 0x1000,CBF_FAIL_CONNECTIONS = 0x2000,CBF_FAIL_ADVISES = 0x4000,CBF_FAIL_EXECUTES = 0x8000,CBF_FAIL_POKES = 0x0,CBF_FAIL_REQUESTS = 0x0,CBF_FAIL_ALLSVRXACTIONS = 0xF000,CBF_SKIP_CONNECT_CONFIRMS = 0x0,CBF_SKIP_REGISTRATIONS = 0x0,CBF_SKIP_UNREGISTRATIONS = 0x0,CBF_SKIP_DISCONNECTS = 0x0,CBF_SKIP_ALLNOTIFICATIONS = 0x0,};
enum MACRO_CBM {CBM_INIT = 0x4,};
enum MACRO_CBN {CBN_ERRSPACE = -1,CBN_SELCHANGE = 1,CBN_DBLCLK = 2,CBN_SETFOCUS = 3,CBN_KILLFOCUS = 4,CBN_EDITCHANGE = 5,CBN_EDITUPDATE = 6,CBN_DROPDOWN = 7,CBN_CLOSEUP = 8,CBN_SELENDOK = 9,CBN_SELENDCANCEL = 10,};
enum MACRO_CBN_ENDREC {CBN_ENDREC = 16,CBN_DELAYEDRECOGFAIL = 17,CBN_RCRESULT = 18,};
enum MACRO_CBR {CBR_110 = 0xFF10,CBR_300 = 0xFF11,CBR_600 = 0xFF12,CBR_1200 = 0xFF13,CBR_2400 = 0xFF14,CBR_4800 = 0xFF15,CBR_9600 = 0xFF16,CBR_14400 = 0xFF17,CBR_19200 = 0xFF18,CBR_38400 = 0xFF1B,CBR_56000 = 0xFF1F,CBR_128000 = 0xFF23,CBR_256000 = 0xFF27,};
enum MACRO_CBR_BLOCK {CBR_BLOCK = 0xFFFF,};
enum MACRO_CBS {CBS_SIMPLE = 0x1,CBS_DROPDOWN = 0x2,CBS_DROPDOWNLIST = 0x3,CBS_OWNERDRAWFIXED = 0x10,CBS_OWNERDRAWVARIABLE = 0x20,CBS_AUTOHSCROLL = 0x40,CBS_OEMCONVERT = 0x80,CBS_SORT = 0x100,CBS_HASSTRINGS = 0x200,CBS_NOINTEGRALHEIGHT = 0x400,CBS_DISABLENOSCROLL = 0x800,};
enum MACRO_CB_OKAY {CB_OKAY = 0,CB_ERR = -1,CB_ERRSPACE = -2,};
enum MACRO_CC {CC_NONE = 0x0,CC_CIRCLES = 0x1,CC_PIE = 0x2,CC_CHORD = 0x4,CC_ELLIPSES = 0x8,CC_WIDE = 0x10,CC_STYLED = 0x20,CC_WIDESTYLED = 0x40,CC_INTERIORS = 0x80,CC_ROUNDRECT = 0x100,};
enum MACRO_CCERR {CCERR_CHOOSECOLORCODES = 0x5000,};
enum MACRO_CCHDEVICENAME {CCHDEVICENAME = 32,CCHPAPERNAME = 64,};
enum MACRO_CCINFOORD {CCINFOORD = 2,};
enum MACRO_CCSTYLEORD {CCSTYLEORD = 3,CCFLAGSORD = 4,};
enum MACRO_CC_RGBINIT {CC_RGBINIT = 0x1,CC_FULLOPEN = 0x2,CC_PREVENTFULLOPEN = 0x4,CC_SHOWHELP = 0x8,CC_ENABLEHOOK = 0x10,CC_ENABLETEMPLATE = 0x20,CC_ENABLETEMPLATEHANDLE = 0x40,};
enum MACRO_CD {CD_LBSELNOITEMS = -1,CD_LBSELCHANGE = 0,CD_LBSELSUB = 1,CD_LBSELADD = 2,};
enum MACRO_CDERR {CDERR_DIALOGFAILURE = 0xFFFF,CDERR_GENERALCODES = 0x0,CDERR_STRUCTSIZE = 0x1,CDERR_INITIALIZATION = 0x2,CDERR_NOTEMPLATE = 0x3,CDERR_NOHINSTANCE = 0x4,CDERR_LOADSTRFAILURE = 0x5,CDERR_FINDRESFAILURE = 0x6,CDERR_LOADRESFAILURE = 0x7,CDERR_LOCKRESFAILURE = 0x8,CDERR_MEMALLOCFAILURE = 0x9,CDERR_MEMLOCKFAILURE = 0xA,CDERR_NOHOOK = 0xB,CDERR_REGISTERMSGFAIL = 0xC,};
enum MACRO_CE {CE_RXOVER = 0x1,CE_OVERRUN = 0x2,CE_RXPARITY = 0x4,CE_FRAME = 0x8,CE_BREAK = 0x10,CE_CTSTO = 0x20,CE_DSRTO = 0x40,CE_RLSDTO = 0x80,CE_TXFULL = 0x100,CE_PTO = 0x200,CE_IOE = 0x400,CE_DNS = 0x800,CE_OOP = 0x1000,CE_MODE = 0x8000,};
enum MACRO_CF {CF_TEXT = 1,CF_BITMAP = 2,CF_METAFILEPICT = 3,CF_SYLK = 4,CF_DIF = 5,CF_TIFF = 6,CF_OEMTEXT = 7,CF_DIB = 8,CF_PALETTE = 9,CF_PENDATA = 10,CF_RIFF = 11,CF_WAVE = 12,CF_OWNERDISPLAY = 128,CF_DSPTEXT = 129,CF_DSPBITMAP = 130,CF_DSPMETAFILEPICT = 131,CF_PRIVATEFIRST = 512,CF_PRIVATELAST = 767,CF_GDIOBJFIRST = 768,CF_GDIOBJLAST = 1023,};
enum MACRO_CFERR {CFERR_CHOOSEFONTCODES = 0x2000,CFERR_NOFONTS = 0x2001,CFERR_MAXLESSTHANMIN = 0x2002,};
enum MACRO_CFSEPCHAR {CFSEPCHAR = 43,};
enum MACRO_CF_SCREENFONTS {CF_SCREENFONTS = 0x1,CF_PRINTERFONTS = 0x2,CF_BOTH = 0x3,CF_SHOWHELP = 0x4,CF_ENABLEHOOK = 0x8,CF_ENABLETEMPLATE = 0x10,CF_ENABLETEMPLATEHANDLE = 0x20,CF_INITTOLOGFONTSTRUCT = 0x40,CF_USESTYLE = 0x80,CF_EFFECTS = 0x100,CF_APPLY = 0x200,CF_ANSIONLY = 0x400,CF_NOVECTORFONTS = 0x800,CF_NOOEMFONTS = 0x800,CF_NOSIMULATIONS = 0x1000,CF_LIMITSIZE = 0x2000,CF_FIXEDPITCHONLY = 0x4000,CF_WYSIWYG = 0x8000,CF_FORCEFONTEXIST = 0x0,CF_SCALABLEONLY = 0x0,CF_TTONLY = 0x0,CF_NOFACESEL = 0x0,CF_NOSTYLESEL = 0x0,CF_NOSIZESEL = 0x0,};
enum MACRO_CF_SHOWHELPBUTTON {CF_SHOWHELPBUTTON = 0x1,CF_SETCONVERTDEFAULT = 0x2,CF_SETACTIVATEDEFAULT = 0x4,CF_SELECTCONVERTTO = 0x8,CF_SELECTACTIVATEAS = 0x10,CF_DISABLEDISPLAYASICON = 0x20,CF_DISABLEACTIVATEAS = 0x40,};
enum MACRO_CHARSET {ANSI_CHARSET = 0,DEFAULT_CHARSET = 1,SYMBOL_CHARSET = 2,SHIFTJIS_CHARSET = 128,HANGEUL_CHARSET = 129,CHINESEBIG5_CHARSET = 136,OEM_CHARSET = 255,};
enum MACRO_CIF {CIF_SHOWHELP = 0x1,CIF_SELECTCURRENT = 0x2,CIF_SELECTDEFAULT = 0x4,CIF_SELECTFROMFILE = 0x8,CIF_USEICONEXE = 0xA,};
enum MACRO_CL {CL_NULL = 0,CL_MINIMUM = 1,CL_MAXIMUM = 100,};
enum MACRO_CLASS {CLASS_E_NOAGGREGATION = 0x110,CLASS_E_CLASSNOTAVAILABLE = 0x111,};
enum MACRO_CLASSFACTORY {CLASSFACTORY_E_FIRST = 0x110,CLASSFACTORY_E_LAST = 0x11F,CLASSFACTORY_S_FIRST = 0x110,CLASSFACTORY_S_LAST = 0x11F,};
enum MACRO_CLIENTSITE {CLIENTSITE_E_FIRST = 0x190,CLIENTSITE_E_LAST = 0x19F,CLIENTSITE_S_FIRST = 0x190,CLIENTSITE_S_LAST = 0x19F,};
enum MACRO_CLIP {CLIP_DEFAULT_PRECIS = 0x0,CLIP_CHARACTER_PRECIS = 0x1,CLIP_STROKE_PRECIS = 0x2,CLIP_MASK = 0xF,CLIP_LH_ANGLES = 0x10,CLIP_TT_ALWAYS = 0x20,CLIP_EMBEDDED = 0x80,};
enum MACRO_CLIPBRD {CLIPBRD_E_FIRST = 0x1D0,CLIPBRD_E_LAST = 0x1DF,CLIPBRD_S_FIRST = 0x1D0,CLIPBRD_S_LAST = 0x1DF,};
enum MACRO_CLIPBRD_E {CLIPBRD_E_CANT_OPEN = 464,CLIPBRD_E_CANT_EMPTY = 465,CLIPBRD_E_CANT_SET = 466,CLIPBRD_E_BAD_DATA = 467,CLIPBRD_E_CANT_CLOSE = 468,};
enum MACRO_CLIPCAPS {CLIPCAPS = 36,};
enum MACRO_CLRDTR {CLRDTR = 6,};
enum MACRO_CN {CN_RECEIVE = 0x1,CN_TRANSMIT = 0x2,CN_EVENT = 0x4,};
enum MACRO_CO {CO_E_FIRST = 0x1F0,CO_E_LAST = 0x1FF,CO_S_FIRST = 0x1F0,CO_S_LAST = 0x1FF,CO_E_NOTINITIALIZED = 0x1F0,CO_E_ALREADYINITIALIZED = 0x1F1,CO_E_CANTDETERMINECLASS = 0x1F2,CO_E_CLASSSTRING = 0x1F3,CO_E_IIDSTRING = 0x1F4,CO_E_APPNOTFOUND = 0x1F5,CO_E_APPSINGLEUSE = 0x1F6,CO_E_ERRORINAPP = 0x1F7,CO_E_DLLNOTFOUND = 0x1F8,CO_E_ERRORINDLL = 0x1F9,CO_E_WRONGOSFORAPP = 0x1FA,CO_E_OBJNOTREG = 0x1FB,CO_E_OBJISREG = 0x1FC,CO_E_OBJNOTCONNECTED = 0x1FD,CO_E_APPDIDNTREG = 0x1FE,};
enum MACRO_COLOR {COLOR_SCROLLBAR = 0,COLOR_BACKGROUND = 1,COLOR_ACTIVECAPTION = 2,COLOR_INACTIVECAPTION = 3,COLOR_MENU = 4,COLOR_WINDOW = 5,COLOR_WINDOWFRAME = 6,COLOR_MENUTEXT = 7,COLOR_WINDOWTEXT = 8,COLOR_CAPTIONTEXT = 9,COLOR_ACTIVEBORDER = 10,COLOR_INACTIVEBORDER = 11,COLOR_APPWORKSPACE = 12,COLOR_HIGHLIGHT = 13,COLOR_HIGHLIGHTTEXT = 14,COLOR_BTNFACE = 15,COLOR_BTNSHADOW = 16,COLOR_GRAYTEXT = 17,COLOR_BTNTEXT = 18,COLOR_INACTIVECAPTIONTEXT = 19,COLOR_BTNHIGHLIGHT = 20,};
enum MACRO_COLORONCOLOR {COLORONCOLOR = 3,};
enum MACRO_COLORRES {COLORRES = 108,};
enum MACRO_COLOR_HUESCROLL {COLOR_HUESCROLL = 700,COLOR_SATSCROLL = 701,COLOR_LUMSCROLL = 702,COLOR_HUE = 703,COLOR_SAT = 704,COLOR_LUM = 705,COLOR_RED = 706,COLOR_GREEN = 707,COLOR_BLUE = 708,COLOR_CURRENT = 709,COLOR_RAINBOW = 710,COLOR_SAVE = 711,COLOR_ADD = 712,COLOR_SOLID = 713,COLOR_TUNE = 714,COLOR_SCHEMES = 715,COLOR_ELEMENT = 716,COLOR_SAMPLES = 717,COLOR_PALETTE = 718,COLOR_MIX = 719,COLOR_BOX1 = 720,COLOR_CUSTOM1 = 721,COLOR_HUEACCEL = 723,COLOR_SATACCEL = 724,COLOR_LUMACCEL = 725,COLOR_REDACCEL = 726,COLOR_GREENACCEL = 727,COLOR_BLUEACCEL = 728,};
enum MACRO_COMPLEXREGION {COMPLEXREGION = 3,};
enum MACRO_CONVERT10 {CONVERT10_E_FIRST = 0x1C0,CONVERT10_E_LAST = 0x1CF,CONVERT10_S_FIRST = 0x1C0,CONVERT10_S_LAST = 0x1CF,};
enum MACRO_CONVERT10_E {CONVERT10_E_OLESTREAM_GET = 448,CONVERT10_E_OLESTREAM_PUT = 449,CONVERT10_E_OLESTREAM_FMT = 450,CONVERT10_E_OLESTREAM_BITMAP_TO_DIB = 451,CONVERT10_E_STG_FMT = 452,CONVERT10_E_STG_NO_STD_STREAM = 453,CONVERT10_E_STG_DIB_TO_BITMAP = 454,CONVERT10_S_NO_PRESENTATION = 448,};
enum MACRO_CP {CP_NONE = 0x0,CP_RECTANGLE = 0x1,CP_REGION = 0x2,};
enum MACRO_CPL {CPL_INIT = 1,CPL_GETCOUNT = 2,CPL_INQUIRE = 3,CPL_SELECT = 4,CPL_DBLCLK = 5,CPL_STOP = 6,CPL_EXIT = 7,CPL_NEWINQUIRE = 8,};
enum MACRO_CP_WINANSI {CP_WINANSI = 1004,};
enum MACRO_CRUC {CRUC_REMOVE = 1,};
enum MACRO_CS {CS_VREDRAW = 0x1,CS_HREDRAW = 0x2,CS_OWNDC = 0x20,CS_CLASSDC = 0x40,CS_PARENTDC = 0x80,CS_SAVEBITS = 0x800,CS_DBLCLKS = 0x8,CS_BYTEALIGNCLIENT = 0x1000,CS_BYTEALIGNWINDOW = 0x2000,CS_NOCLOSE = 0x200,CS_KEYCVTWINDOW = 0x4,CS_NOKEYCVT = 0x100,CS_GLOBALCLASS = 0x4000,};
enum MACRO_CSTF {CSTF_CTSHOLD = 0x1,CSTF_DSRHOLD = 0x2,CSTF_RLSDHOLD = 0x4,CSTF_XOFFHOLD = 0x8,CSTF_XOFFSENT = 0x10,CSTF_EOF = 0x20,CSTF_TXIM = 0x40,};
enum MACRO_CT {CT_CTYPE1 = 0x1,CT_CTYPE2 = 0x2,CT_CTYPE3 = 0x4,};
enum MACRO_CTLCLASS {CTLCLASS = 20,};
enum MACRO_CTLCOLOR {CTLCOLOR_MSGBOX = 0,CTLCOLOR_EDIT = 1,CTLCOLOR_LISTBOX = 2,CTLCOLOR_BTN = 3,CTLCOLOR_DLG = 4,CTLCOLOR_SCROLLBAR = 5,CTLCOLOR_STATIC = 6,};
enum MACRO_CTLDESCR {CTLDESCR = 22,};
enum MACRO_CTLTITLE {CTLTITLE = 94,};
enum MACRO_CTLTYPES {CTLTYPES = 12,};
enum MACRO_CTM {RESTORE_CTM = 4100,SAVE_CTM = 4101,};
enum MACRO_CTRY {CTRY_DEFAULT = 0,CTRY_AUSTRALIA = 61,CTRY_AUSTRIA = 43,CTRY_BELGIUM = 32,CTRY_BRAZIL = 55,CTRY_CANADA = 2,CTRY_DENMARK = 45,CTRY_FINLAND = 358,CTRY_FRANCE = 33,CTRY_GERMANY = 49,CTRY_ICELAND = 354,CTRY_IRELAND = 353,CTRY_ITALY = 39,CTRY_JAPAN = 81,CTRY_MEXICO = 52,CTRY_NETHERLANDS = 31,CTRY_NEW_ZEALAND = 64,CTRY_NORWAY = 47,CTRY_PORTUGAL = 351,CTRY_PRCHINA = 86,CTRY_SOUTH_KOREA = 82,CTRY_SPAIN = 34,CTRY_SWEDEN = 46,CTRY_SWITZERLAND = 41,CTRY_TAIWAN = 886,CTRY_UNITED_KINGDOM = 44,CTRY_UNITED_STATES = 1,};
enum MACRO_CURVECAPS {CURVECAPS = 28,};
enum MACRO_CW {CW_USEDEFAULT = 0x8000,};
enum MACRO_CWCSTORAGENAME {CWCSTORAGENAME = 32,};
enum MACRO_CWR {CWR_STRIPCR = 0x1,CWR_STRIPLF = 0x2,CWR_STRIPTAB = 0x4,CWR_SINGLELINEEDIT = 0x7,CWR_TITLE = 0x10,CWR_KKCONVERT = 0x20,};
enum MACRO_DATA {DATA_E_FIRST = 0x130,DATA_E_LAST = 0x13F,DATA_S_FIRST = 0x130,DATA_S_LAST = 0x13F,};
enum MACRO_DATA_E {DATA_E_FORMATETC = 100,DATA_S_SAMEFORMATETC = 304,};
enum MACRO_DBF {DBF_TRACE = 0x0,DBF_WARNING = 0x4000,DBF_ERROR = 0x8000,DBF_FATAL = 0xC000,DBF_KERNEL = 0x1000,DBF_KRN_MEMMAN = 0x1,DBF_KRN_LOADMODULE = 0x2,DBF_KRN_SEGMENTLOAD = 0x4,DBF_USER = 0x800,DBF_GDI = 0x400,DBF_MMSYSTEM = 0x40,DBF_PENWIN = 0x20,DBF_APPLICATION = 0x8,DBF_DRIVER = 0x10,};
enum MACRO_DBO {DBO_CHECKHEAP = 0x1,DBO_BUFFERFILL = 0x4,DBO_DISABLEGPTRAPPING = 0x10,DBO_CHECKFREE = 0x20,DBO_SILENT = 0x8000,DBO_TRACEBREAK = 0x2000,DBO_WARNINGBREAK = 0x1000,DBO_NOERRORBREAK = 0x800,DBO_NOFATALBREAK = 0x400,DBO_INT3BREAK = 0x100,};
enum MACRO_DC {DC_HASDEFID = 0x534B,};
enum MACRO_DCB {DCB_RESET = 0x1,DCB_ACCUMULATE = 0x2,DCB_DIRTY = 0x2,DCB_SET = 0x3,DCB_ENABLE = 0x4,DCB_DISABLE = 0x8,};
enum MACRO_DCTT {DCTT_BITMAP = 0x1,DCTT_DOWNLOAD = 0x2,DCTT_SUBDEV = 0x4,};
enum MACRO_DCX {DCX_WINDOW = 0x1,DCX_CACHE = 0x2,DCX_CLIPCHILDREN = 0x8,DCX_CLIPSIBLINGS = 0x10,DCX_PARENTCLIP = 0x20,DCX_EXCLUDERGN = 0x40,DCX_INTERSECTRGN = 0x80,DCX_LOCKWINDOWUPDATE = 0x400,DCX_USESTYLE = 0x0,};
enum MACRO_DC_FIELDS {DC_FIELDS = 1,DC_PAPERS = 2,DC_PAPERSIZE = 3,DC_MINEXTENT = 4,DC_MAXEXTENT = 5,DC_BINS = 6,DC_DUPLEX = 7,DC_SIZE = 8,DC_EXTRA = 9,DC_VERSION = 10,DC_DRIVER = 11,DC_BINNAMES = 12,DC_ENUMRESOLUTIONS = 13,DC_FILEDEPENDENCIES = 14,DC_TRUETYPE = 15,DC_PAPERNAMES = 16,DC_ORIENTATION = 17,DC_COPIES = 18,};
enum MACRO_DD {DD_DEFSCROLLINSET = 11,DD_DEFSCROLLDELAY = 50,DD_DEFSCROLLINTERVAL = 50,DD_DEFDRAGDELAY = 200,DD_DEFDRAGMINDIST = 2,};
enum MACRO_DDE {DDE_FACK = 0x8000,DDE_FBUSY = 0x4000,DDE_FDEFERUPD = 0x4000,DDE_FACKREQ = 0x8000,DDE_FRELEASE = 0x2000,DDE_FREQUESTED = 0x1000,DDE_FACKRESERVED = 0x3FF0,DDE_FADVRESERVED = 0x3FFF,DDE_FDATRESERVED = 0x4FFF,DDE_FPOKRESERVED = 0xDFFF,DDE_FAPPSTATUS = 0xFF,DDE_FNOTPROCESSED = 0x0,};
enum MACRO_DDL {DDL_READWRITE = 0x0,DDL_READONLY = 0x1,DDL_HIDDEN = 0x2,DDL_SYSTEM = 0x4,DDL_DIRECTORY = 0x10,DDL_ARCHIVE = 0x20,DDL_POSTMSGS = 0x2000,DDL_DRIVES = 0x4000,DDL_EXCLUSIVE = 0x8000,};
enum MACRO_DEFAULT {DEFAULT_PALETTE = 15,};
enum MACRO_DEFAULT_HATCHBORDER {DEFAULT_HATCHBORDER_WIDTH = 4,};
enum MACRO_DEVICEDATA {DEVICEDATA = 19,};
enum MACRO_DIB {DIB_RGB_COLORS = 0,DIB_PAL_COLORS = 1,};
enum MACRO_DIRQ {DIRQ_QUERY = 1,DIRQ_DESCRIPTION = 2,DIRQ_CONFIGURE = 3,DIRQ_OPEN = 4,DIRQ_CLOSE = 5,DIRQ_SETWORDLISTS = 6,DIRQ_STRING = 7,DIRQ_SUGGEST = 8,DIRQ_ADD = 9,DIRQ_DELETE = 10,DIRQ_FLUSH = 11,DIRQ_RCCHANGE = 12,DIRQ_SYMBOLGRAPH = 13,DIRQ_INIT = 14,DIRQ_CLEANUP = 15,DIRQ_COPYRIGHT = 16,DIRQ_USER = 4096,};
enum MACRO_DISP {DISP_E_UNKNOWNINTERFACE = 1,DISP_E_MEMBERNOTFOUND = 3,DISP_E_PARAMNOTFOUND = 4,DISP_E_TYPEMISMATCH = 5,DISP_E_UNKNOWNNAME = 6,DISP_E_NONAMEDARGS = 7,DISP_E_BADVARTYPE = 8,DISP_E_EXCEPTION = 9,DISP_E_OVERFLOW = 10,DISP_E_BADINDEX = 11,DISP_E_UNKNOWNLCID = 12,DISP_E_ARRAYISLOCKED = 13,DISP_E_BADPARAMCOUNT = 14,DISP_E_PARAMNOTOPTIONAL = 15,DISP_E_BADCALLEE = 16,DISP_E_NOTACOLLECTION = 17,};
enum MACRO_DISPATCH {DISPATCH_METHOD = 0x1,DISPATCH_PROPERTYGET = 0x2,DISPATCH_PROPERTYPUT = 0x4,DISPATCH_PROPERTYPUTREF = 0x8,};
enum MACRO_DISPID {DISPID_VALUE = 0,DISPID_UNKNOWN = -1,DISPID_PROPERTYPUT = -3,DISPID_NEWENUM = -4,DISPID_EVALUATE = -5,};
enum MACRO_DLG {DLG_COLOR = 10,};
enum MACRO_DLGC {DLGC_WANTARROWS = 0x1,DLGC_WANTTAB = 0x2,DLGC_WANTALLKEYS = 0x4,DLGC_WANTMESSAGE = 0x4,DLGC_HASSETSEL = 0x8,DLGC_DEFPUSHBUTTON = 0x10,DLGC_UNDEFPUSHBUTTON = 0x20,DLGC_RADIOBUTTON = 0x40,DLGC_WANTCHARS = 0x80,DLGC_STATIC = 0x100,DLGC_BUTTON = 0x2000,};
enum MACRO_DLGWINDOWEXTRA {DLGWINDOWEXTRA = 30,};
enum MACRO_DLG_CHANGEPASSWORD {DLG_CHANGEPASSWORD = 2000,DLG_ENTERPASSWORD = 2001,DLG_INVALIDPASSWORD = 2002,DLG_SCRNSAVECONFIGURE = 2003,};
enum MACRO_DM {DM_GETDEFID = 1024,DM_SETDEFID = 1025,};
enum MACRO_DMBIN {DMBIN_UPPER = 1,DMBIN_ONLYONE = 1,DMBIN_LOWER = 2,DMBIN_MIDDLE = 3,DMBIN_MANUAL = 4,DMBIN_ENVELOPE = 5,DMBIN_ENVMANUAL = 6,DMBIN_AUTO = 7,DMBIN_TRACTOR = 8,DMBIN_SMALLFMT = 9,DMBIN_LARGEFMT = 10,DMBIN_LARGECAPACITY = 11,DMBIN_CASSETTE = 14,DMBIN_LAST = 14,DMBIN_USER = 256,};
enum MACRO_DMCOLOR {DMCOLOR_MONOCHROME = 1,DMCOLOR_COLOR = 2,};
enum MACRO_DMDUP {DMDUP_SIMPLEX = 1,DMDUP_VERTICAL = 2,DMDUP_HORIZONTAL = 3,};
enum MACRO_DMLERR {DMLERR_NO_ERROR = 0,DMLERR_FIRST = 16384,DMLERR_ADVACKTIMEOUT = 16384,DMLERR_BUSY = 16385,DMLERR_DATAACKTIMEOUT = 16386,DMLERR_DLL_NOT_INITIALIZED = 16387,DMLERR_DLL_USAGE = 16388,DMLERR_EXECACKTIMEOUT = 16389,DMLERR_INVALIDPARAMETER = 16390,DMLERR_LOW_MEMORY = 16391,DMLERR_MEMORY_ERROR = 16392,DMLERR_NOTPROCESSED = 16393,DMLERR_NO_CONV_ESTABLISHED = 16394,DMLERR_POKEACKTIMEOUT = 16395,DMLERR_POSTMSG_FAILED = 16396,DMLERR_REENTRANCY = 16397,DMLERR_SERVER_DIED = 16398,DMLERR_SYS_ERROR = 16399,DMLERR_UNADVACKTIMEOUT = 16400,DMLERR_UNFOUND_QUEUE_ID = 16401,DMLERR_LAST = 16401,};
enum MACRO_DMORIENT {DMORIENT_PORTRAIT = 1,DMORIENT_LANDSCAPE = 2,};
enum MACRO_DMPAPER {DMPAPER_LETTER = 1,DMPAPER_LETTERSMALL = 2,DMPAPER_TABLOID = 3,DMPAPER_LEDGER = 4,DMPAPER_LEGAL = 5,DMPAPER_STATEMENT = 6,DMPAPER_EXECUTIVE = 7,DMPAPER_A3 = 8,DMPAPER_A4 = 9,DMPAPER_A4SMALL = 10,DMPAPER_A5 = 11,DMPAPER_B4 = 12,DMPAPER_B5 = 13,DMPAPER_FOLIO = 14,DMPAPER_QUARTO = 15,DMPAPER_10X14 = 16,DMPAPER_11X17 = 17,DMPAPER_NOTE = 18,DMPAPER_ENV_9 = 19,DMPAPER_ENV_10 = 20,DMPAPER_ENV_11 = 21,DMPAPER_ENV_12 = 22,DMPAPER_ENV_14 = 23,DMPAPER_CSHEET = 24,DMPAPER_DSHEET = 25,DMPAPER_ESHEET = 26,DMPAPER_ENV_DL = 27,DMPAPER_ENV_C5 = 28,DMPAPER_ENV_C3 = 29,DMPAPER_ENV_C4 = 30,DMPAPER_ENV_C6 = 31,DMPAPER_ENV_C65 = 32,DMPAPER_ENV_B4 = 33,DMPAPER_ENV_B5 = 34,DMPAPER_ENV_B6 = 35,DMPAPER_ENV_ITALY = 36,DMPAPER_ENV_MONARCH = 37,DMPAPER_ENV_PERSONAL = 38,DMPAPER_FANFOLD_US = 39,DMPAPER_FANFOLD_STD_GERMAN = 40,DMPAPER_FANFOLD_LGL_GERMAN = 41,DMPAPER_LAST = 41,DMPAPER_USER = 256,};
enum MACRO_DMRES {DMRES_DRAFT = -1,DMRES_LOW = -2,DMRES_MEDIUM = -3,DMRES_HIGH = -4,};
enum MACRO_DMTT {DMTT_BITMAP = 1,DMTT_DOWNLOAD = 2,DMTT_SUBDEV = 3,};
enum MACRO_DM_SPECVERSION {DM_SPECVERSION = 0x30A,DM_ORIENTATION = 0x1,DM_PAPERSIZE = 0x2,DM_PAPERLENGTH = 0x4,DM_PAPERWIDTH = 0x8,DM_SCALE = 0x10,DM_COPIES = 0x100,DM_DEFAULTSOURCE = 0x200,DM_PRINTQUALITY = 0x400,DM_COLOR = 0x800,DM_DUPLEX = 0x1000,DM_YRESOLUTION = 0x2000,DM_TTOPTION = 0x4000,};
enum MACRO_DM_UPDATE {DM_UPDATE = 1,DM_COPY = 2,DM_PROMPT = 4,DM_MODIFY = 8,DM_IN_BUFFER = 8,DM_IN_PROMPT = 4,DM_OUT_BUFFER = 2,DM_OUT_DEFAULT = 1,};
enum MACRO_DN {DN_DEFAULTPRN = 0x1,};
enum MACRO_DNS {DNS_REGISTER = 0x1,DNS_UNREGISTER = 0x2,DNS_FILTERON = 0x4,DNS_FILTEROFF = 0x8,};
enum MACRO_DRAFTMODE {DRAFTMODE = 7,QUERYESCSUPPORT = 8,};
enum MACRO_DRAGDROP {DRAGDROP_E_FIRST = 0x100,DRAGDROP_E_LAST = 0x10F,DRAGDROP_S_FIRST = 0x100,DRAGDROP_S_LAST = 0x10F,};
enum MACRO_DRAGDROP_E {DRAGDROP_E_NOTREGISTERED = 256,DRAGDROP_E_ALREADYREGISTERED = 257,DRAGDROP_E_INVALIDHWND = 258,DRAGDROP_S_DROP = 256,DRAGDROP_S_CANCEL = 257,DRAGDROP_S_USEDEFAULTCURSORS = 258,};
enum MACRO_DRAW {VIEW_E_DRAW = 320,E_DRAW = 320,};
enum MACRO_DRAWPATTERNRECT {DRAWPATTERNRECT = 25,};
enum MACRO_DRIVE {DRIVE_REMOVABLE = 2,DRIVE_FIXED = 3,DRIVE_REMOTE = 4,};
enum MACRO_DRIVERVERSION {DRIVERVERSION = 0,TECHNOLOGY = 2,HORZSIZE = 4,};
enum MACRO_DROPEFFECT {DROPEFFECT_NONE = 0,DROPEFFECT_COPY = 1,DROPEFFECT_MOVE = 2,DROPEFFECT_LINK = 4,DROPEFFECT_SCROLL = 0,};
enum MACRO_DRV {DRV_LOAD = 0x1,DRV_ENABLE = 0x2,DRV_OPEN = 0x3,DRV_CLOSE = 0x4,DRV_DISABLE = 0x5,DRV_FREE = 0x6,DRV_CONFIGURE = 0x7,DRV_QUERYCONFIGURE = 0x8,DRV_INSTALL = 0x9,DRV_REMOVE = 0xA,DRV_EXITSESSION = 0xB,DRV_EXITAPPLICATION = 0xC,DRV_POWER = 0xF,DRV_RESERVED = 0x800,DRV_USER = 0x4000,};
enum MACRO_DRVCNF {DRVCNF_CANCEL = 0x0,DRVCNF_OK = 0x1,DRVCNF_RESTART = 0x2,};
enum MACRO_DRVEA {DRVEA_NORMALEXIT = 0x1,DRVEA_ABNORMALEXIT = 0x2,};
enum MACRO_DRV_CANCEL {DRV_CANCEL = 0,DRV_OK = 1,DRV_RESTART = 2,DRV_MCI_FIRST = 2048,DRV_MCI_LAST = 6143,};
enum MACRO_DRV_SetPenDriverEntryPoints {DRV_SetPenDriverEntryPoints = 2049,DRV_RemovePenDriverEntryPoints = 2050,DRV_SetPenSamplingRate = 2051,DRV_SetPenSamplingDist = 2052,DRV_GetName = 2053,DRV_GetVersion = 2054,DRV_GetPenInfo = 2055,DRV_GetCalibration = 2059,DRV_SetCalibration = 2060,};
enum MACRO_DS {DS_ABSALIGN = 0x1,DS_SYSMODAL = 0x2,DS_LOCALEDIT = 0x20,DS_SETFONT = 0x40,DS_MODALFRAME = 0x80,DS_NOIDLEMSG = 0x100,};
enum MACRO_DSTINVERT {DSTINVERT = 0x9,};
enum MACRO_DT {DT_PLOTTER = 0,DT_RASDISPLAY = 1,DT_RASPRINTER = 2,DT_RASCAMERA = 3,DT_CHARSTREAM = 4,DT_METAFILE = 5,DT_DISPFILE = 6,};
enum MACRO_DT_TOP {DT_TOP = 0x0,DT_LEFT = 0x0,DT_CENTER = 0x1,DT_RIGHT = 0x2,DT_VCENTER = 0x4,DT_BOTTOM = 0x8,DT_WORDBREAK = 0x10,DT_SINGLELINE = 0x20,DT_EXPANDTABS = 0x40,DT_TABSTOP = 0x80,DT_NOCLIP = 0x100,DT_EXTERNALLEADING = 0x200,DT_CALCRECT = 0x400,DT_NOPREFIX = 0x800,DT_INTERNAL = 0x1000,};
enum MACRO_DV {DV_E_FORMATETC = 100,DV_E_DVTARGETDEVICE = 101,DV_E_STGMEDIUM = 102,DV_E_STATDATA = 103,DV_E_LINDEX = 104,DV_E_TYMED = 105,DV_E_CLIPFORMAT = 106,DV_E_DVASPECT = 107,DV_E_DVTARGETDEVICE_SIZE = 108,DV_E_NOIVIEWOBJECT = 109,};
enum MACRO_DVGEN {DVGEN_E_FIRST = 100,};
enum MACRO_DWL {DWL_MSGRESULT = 0,DWL_DLGPROC = 4,DWL_USER = 8,};
enum MACRO_E {E_UNEXPECTED = 0xFFFF,E_NOTIMPL = 0x1,E_OUTOFMEMORY = 0x2,E_INVALIDARG = 0x3,E_NOINTERFACE = 0x4,E_POINTER = 0x5,E_HANDLE = 0x6,E_ABORT = 0x7,E_FAIL = 0x8,E_ACCESSDENIED = 0x9,};
enum MACRO_EC {EC_ENABLEALL = 0,EC_ENABLEONE = 128,EC_DISABLE = 8,EC_QUERYWAITING = 2,};
enum MACRO_EDS {EDS_WIN = 1,EDS_CUR = 2,EDS_TEMP = 3,};
enum MACRO_ELF {ELF_SHOWHELP = 0x1,ELF_DISABLEUPDATENOW = 0x2,ELF_DISABLEOPENSOURCE = 0x4,ELF_DISABLECHANGESOURCE = 0x8,ELF_DISABLECANCELLINK = 0x10,};
enum MACRO_EM {EM_GETSEL = 1024,EM_SETSEL = 1025,EM_GETRECT = 1026,EM_SETRECT = 1027,EM_SETRECTNP = 1028,EM_LINESCROLL = 1030,EM_GETMODIFY = 1032,EM_SETMODIFY = 1033,EM_GETLINECOUNT = 1034,EM_LINEINDEX = 1035,EM_SETHANDLE = 1036,EM_GETHANDLE = 1037,EM_LINELENGTH = 1041,EM_REPLACESEL = 1042,EM_SETFONT = 1043,EM_GETLINE = 1044,EM_LIMITTEXT = 1045,EM_CANUNDO = 1046,EM_UNDO = 1047,EM_FMTLINES = 1048,EM_LINEFROMCHAR = 1049,EM_SETWORDBREAK = 1050,EM_SETTABSTOPS = 1051,EM_SETPASSWORDCHAR = 1052,EM_EMPTYUNDOBUFFER = 1053,EM_GETFIRSTVISIBLELINE = 1054,EM_SETREADONLY = 1055,EM_SETWORDBREAKPROC = 1056,EM_GETWORDBREAKPROC = 1057,EM_GETPASSWORDCHAR = 1058,};
enum MACRO_EMBDHLP {EMBDHLP_INPROC_HANDLER = 0x0,EMBDHLP_INPROC_SERVER = 0x1,EMBDHLP_CREATENOW = 0x0,EMBDHLP_DELAYCREATE = 0x0,};
enum MACRO_EN {EN_SETFOCUS = 0x100,EN_KILLFOCUS = 0x200,EN_CHANGE = 0x300,EN_UPDATE = 0x400,EN_ERRSPACE = 0x500,EN_MAXTEXT = 0x501,EN_HSCROLL = 0x601,EN_VSCROLL = 0x602,};
enum MACRO_ENABLEDUPLEX {ENABLEDUPLEX = 28,};
enum MACRO_ENABLEPAIRKERNING {ENABLEPAIRKERNING = 769,};
enum MACRO_ENABLERELATIVEWIDTHS {ENABLERELATIVEWIDTHS = 768,};
enum MACRO_ENUM {ENUM_E_FIRST = 0x1B0,ENUM_E_LAST = 0x1BF,ENUM_S_FIRST = 0x1B0,ENUM_S_LAST = 0x1BF,};
enum MACRO_ENUMPAPERBINS {ENUMPAPERBINS = 31,SETDIBSCALING = 32,};
enum MACRO_ENUMPAPERMETRICS {ENUMPAPERMETRICS = 34,};
enum MACRO_ENUM_MINIMUM {ENUM_MINIMUM = 1,ENUM_MAXIMUM = 4096,};
enum MACRO_EPSPRINTING {EPSPRINTING = 33,};
enum MACRO_ERR {ERR_WARNING = 0x8000,ERR_PARAM = 0x4000,ERR_SIZE_MASK = 0x3000,ERR_BYTE = 0x1000,ERR_WORD = 0x2000,ERR_DWORD = 0x3000,ERR_BAD_VALUE = 0x6001,ERR_BAD_FLAGS = 0x6002,ERR_BAD_INDEX = 0x6003,ERR_BAD_DVALUE = 0x7004,ERR_BAD_DFLAGS = 0x7005,ERR_BAD_DINDEX = 0x7006,ERR_BAD_PTR = 0x7007,ERR_BAD_FUNC_PTR = 0x7008,ERR_BAD_SELECTOR = 0x6009,ERR_BAD_STRING_PTR = 0x700A,ERR_BAD_HANDLE = 0x600B,ERR_BAD_HINSTANCE = 0x6020,ERR_BAD_HMODULE = 0x6021,ERR_BAD_GLOBAL_HANDLE = 0x6022,ERR_BAD_LOCAL_HANDLE = 0x6023,ERR_BAD_ATOM = 0x6024,ERR_BAD_HFILE = 0x6025,ERR_BAD_HWND = 0x6040,ERR_BAD_HMENU = 0x6041,ERR_BAD_HCURSOR = 0x6042,ERR_BAD_HICON = 0x6043,ERR_BAD_HDWP = 0x6044,ERR_BAD_CID = 0x6045,ERR_BAD_HDRVR = 0x6046,ERR_BAD_COORDS = 0x7060,ERR_BAD_GDI_OBJECT = 0x6061,ERR_BAD_HDC = 0x6062,ERR_BAD_HPEN = 0x6063,ERR_BAD_HFONT = 0x6064,ERR_BAD_HBRUSH = 0x6065,ERR_BAD_HBITMAP = 0x6066,ERR_BAD_HRGN = 0x6067,ERR_BAD_HPALETTE = 0x6068,ERR_BAD_HMETAFILE = 0x6069,ERR_GALLOC = 0x1,ERR_GREALLOC = 0x2,ERR_GLOCK = 0x3,ERR_LALLOC = 0x4,ERR_LREALLOC = 0x5,ERR_LLOCK = 0x6,ERR_ALLOCRES = 0x7,ERR_LOCKRES = 0x8,ERR_LOADMODULE = 0x9,ERR_CREATEDLG = 0x40,ERR_CREATEDLG2 = 0x41,ERR_REGISTERCLASS = 0x42,ERR_DCBUSY = 0x43,ERR_CREATEWND = 0x44,ERR_STRUCEXTRA = 0x45,ERR_LOADSTR = 0x46,ERR_LOADMENU = 0x47,ERR_NESTEDBEGINPAINT = 0x48,ERR_BADINDEX = 0x49,ERR_CREATEMENU = 0x4A,ERR_CREATEDC = 0x80,ERR_CREATEMETA = 0x81,ERR_DELOBJSELECTED = 0x82,ERR_SELBITMAP = 0x83,};
enum MACRO_ERROR {ERROR = 0,NULLREGION = 1,SIMPLEREGION = 2,};
enum MACRO_ERROR_SUCCESS {ERROR_SUCCESS = 0,ERROR_BADDB = 1,ERROR_BADKEY = 2,ERROR_CANTOPEN = 3,ERROR_CANTREAD = 4,ERROR_CANTWRITE = 5,ERROR_OUTOFMEMORY = 6,ERROR_INVALID_PARAMETER = 7,ERROR_ACCESS_DENIED = 8,};
enum MACRO_ES {ES_LEFT = 0x0,ES_CENTER = 0x1,ES_RIGHT = 0x2,ES_MULTILINE = 0x4,ES_UPPERCASE = 0x8,ES_LOWERCASE = 0x10,ES_PASSWORD = 0x20,ES_AUTOVSCROLL = 0x40,ES_AUTOHSCROLL = 0x80,ES_NOHIDESEL = 0x100,ES_OEMCONVERT = 0x400,ES_READONLY = 0x800,ES_WANTRETURN = 0x1000,};
enum MACRO_ESB {ESB_ENABLE_BOTH = 0x0,ESB_DISABLE_BOTH = 0x3,ESB_DISABLE_LEFT = 0x1,ESB_DISABLE_RIGHT = 0x2,ESB_DISABLE_UP = 0x1,ESB_DISABLE_DOWN = 0x2,ESB_DISABLE_LTUP = 0x1,ESB_DISABLE_RTDN = 0x2,};
enum MACRO_ETO {ETO_GRAYED = 0x1,ETO_OPAQUE = 0x2,ETO_CLIPPED = 0x4,};
enum MACRO_EV {EV_RXCHAR = 0x1,EV_RXFLAG = 0x2,EV_TXEMPTY = 0x4,EV_CTS = 0x8,EV_DSR = 0x10,EV_RLSD = 0x20,EV_BREAK = 0x40,EV_ERR = 0x80,EV_RING = 0x100,EV_PERR = 0x200,EV_CTSS = 0x400,EV_DSRS = 0x800,EV_RLSDS = 0x1000,EV_RingTe = 0x2000,EV_RINGTE = 0x2000,};
enum MACRO_EW {EW_RESTARTWINDOWS = 0x42,EW_REBOOTSYSTEM = 0x43,};
enum MACRO_EXT {EXT_DEVICE_CAPS = 4099,};
enum MACRO_FACILITY {FACILITY_NULL = 0x0,FACILITY_RPC = 0x1,FACILITY_DISPATCH = 0x2,FACILITY_STORAGE = 0x3,FACILITY_ITF = 0x4,};
enum MACRO_FADF {FADF_AUTO = 0x1,FADF_STATIC = 0x2,FADF_EMBEDDED = 0x4,FADF_FIXEDSIZE = 0x10,FADF_BSTR = 0x100,FADF_UNKNOWN = 0x200,FADF_DISPATCH = 0x400,FADF_VARIANT = 0x800,FADF_RESERVED = 0xF0E8,};
enum MACRO_FD {FD_SETSIZE = 64,};
enum MACRO_FD_READ {FD_READ = 0x1,FD_WRITE = 0x2,FD_OOB = 0x4,FD_ACCEPT = 0x8,FD_CONNECT = 0x10,FD_CLOSE = 0x20,};
enum MACRO_FF {FF_DONTCARE = 0x0,FF_ROMAN = 0x10,FF_SWISS = 0x20,FF_MODERN = 0x30,FF_SCRIPT = 0x40,FF_DECORATIVE = 0x50,};
enum MACRO_FILEOPENORD {FILEOPENORD = 1536,};
enum MACRO_FINDDLGORD {FINDDLGORD = 1540,};
enum MACRO_FLOODFILLBORDER {FLOODFILLBORDER = 0,FLOODFILLSURFACE = 1,};
enum MACRO_FLUSHOUTPUT {FLUSHOUTPUT = 6,};
enum MACRO_FM {FM_GETFOCUS = 0x600,FM_GETDRIVEINFO = 0x601,FM_GETSELCOUNT = 0x602,FM_GETSELCOUNTLFN = 0x603,FM_GETFILESEL = 0x604,FM_GETFILESELLFN = 0x605,FM_REFRESH_WINDOWS = 0x606,FM_RELOAD_EXTENSIONS = 0x607,};
enum MACRO_FMEVENT {FMEVENT_LOAD = 100,FMEVENT_UNLOAD = 101,FMEVENT_INITMENU = 102,FMEVENT_USER_REFRESH = 103,FMEVENT_SELCHANGE = 104,};
enum MACRO_FMFOCUS {FMFOCUS_DIR = 1,FMFOCUS_TREE = 2,FMFOCUS_DRIVES = 3,FMFOCUS_SEARCH = 4,};
enum MACRO_FMMENU {FMMENU_FIRST = 1,FMMENU_LAST = 99,};
enum MACRO_FNERR {FNERR_FILENAMECODES = 0x3000,FNERR_SUBCLASSFAILURE = 0x3001,FNERR_INVALIDFILENAME = 0x3002,FNERR_BUFFERTOOSMALL = 0x3003,};
enum MACRO_FONT {OEM_FIXED_FONT = 10,ANSI_FIXED_FONT = 11,ANSI_VAR_FONT = 12,SYSTEM_FONT = 13,DEVICE_DEFAULT_FONT = 14,};
enum MACRO_FONTDLGORD {FONTDLGORD = 1542,};
enum MACRO_FONTTYPE {RASTER_FONTTYPE = 0x1,DEVICE_FONTTYPE = 0x2,TRUETYPE_FONTTYPE = 0x4,};
enum MACRO_FORMATDLGORD30 {FORMATDLGORD30 = 1544,};
enum MACRO_FORMATDLGORD31 {FORMATDLGORD31 = 1543,};
enum MACRO_FR {FR_DOWN = 0x1,FR_WHOLEWORD = 0x2,FR_MATCHCASE = 0x4,FR_FINDNEXT = 0x8,FR_REPLACE = 0x10,FR_REPLACEALL = 0x20,FR_DIALOGTERM = 0x40,FR_SHOWHELP = 0x80,FR_ENABLEHOOK = 0x100,FR_ENABLETEMPLATE = 0x200,FR_NOUPDOWN = 0x400,FR_NOMATCHCASE = 0x800,FR_NOWHOLEWORD = 0x1000,FR_ENABLETEMPLATEHANDLE = 0x2000,FR_HIDEUPDOWN = 0x4000,FR_HIDEMATCHCASE = 0x8000,FR_HIDEWHOLEWORD = 0x0,};
enum MACRO_FRAME {FRAME_FAR = 0,FRAME_NEAR = 1,};
enum MACRO_FRERR {FRERR_FINDREPLACECODES = 0x4000,FRERR_BUFFERLENGTHZERO = 0x4001,};
enum MACRO_FW {FW_DONTCARE = 0,FW_THIN = 100,FW_EXTRALIGHT = 200,FW_LIGHT = 300,FW_NORMAL = 400,FW_MEDIUM = 500,FW_SEMIBOLD = 600,FW_BOLD = 700,FW_EXTRABOLD = 800,FW_HEAVY = 900,FW_ULTRALIGHT = 200,FW_REGULAR = 400,FW_DEMIBOLD = 600,FW_ULTRABOLD = 800,FW_BLACK = 900,};
enum MACRO_GCL {GCL_MENUNAME = -8,};
enum MACRO_GCL_WNDPROC {GCL_WNDPROC = -24,};
enum MACRO_GCW {GCW_HBRBACKGROUND = -10,GCW_HCURSOR = -12,GCW_HICON = -14,GCW_HMODULE = -16,GCW_CBWNDEXTRA = -18,GCW_CBCLSEXTRA = -20,};
enum MACRO_GCW_STYLE {GCW_STYLE = -26,GCW_ATOM = -32,};
enum MACRO_GD {GD_USERDEFINED = 0,GD_CURSORCOMPONENT = 1,GD_BITMAP = 2,GD_ICONCOMPONENT = 3,GD_MENU = 4,GD_DIALOG = 5,GD_STRING = 6,GD_FONTDIR = 7,GD_FONT = 8,GD_ACCELERATORS = 9,GD_RCDATA = 10,GD_ERRTABLE = 11,GD_CURSOR = 12,GD_ICON = 14,GD_NAMETABLE = 15,GD_MAX_RESOURCE = 15,};
enum MACRO_GETBASEIRQ {GETBASEIRQ = 10,};
enum MACRO_GETCOLORTABLE {GETCOLORTABLE = 5,};
enum MACRO_GETEXTENTTABLE {GETEXTENTTABLE = 257,};
enum MACRO_GETFACENAME {GETFACENAME = 513,};
enum MACRO_GETMAXCOM {GETMAXCOM = 9,};
enum MACRO_GETMAXLPT {GETMAXLPT = 8,};
enum MACRO_GETPAIRKERNTABLE {GETPAIRKERNTABLE = 258,};
enum MACRO_GETPHYSPAGESIZE {GETPHYSPAGESIZE = 12,};
enum MACRO_GETPRINTINGOFFSET {GETPRINTINGOFFSET = 13,};
enum MACRO_GETSCALINGFACTOR {GETSCALINGFACTOR = 14,};
enum MACRO_GETSETPAPERBINS {GETSETPAPERBINS = 29,};
enum MACRO_GETSETPAPERMETRICS {GETSETPAPERMETRICS = 35,};
enum MACRO_GETSETPRINTORIENT {GETSETPRINTORIENT = 30,};
enum MACRO_GETTECHNOLGY {GETTECHNOLGY = 20,};
enum MACRO_GETTECHNOLOGY {GETTECHNOLOGY = 20,};
enum MACRO_GETTRACKKERNTABLE {GETTRACKKERNTABLE = 259,};
enum MACRO_GETVECTORBRUSHSIZE {GETVECTORBRUSHSIZE = 27,};
enum MACRO_GETVECTORPENSIZE {GETVECTORPENSIZE = 26,};
enum MACRO_GF {GF_PDB_OWNER = 0x100,};
enum MACRO_GFSR {GFSR_SYSTEMRESOURCES = 0x0,GFSR_GDIRESOURCES = 0x1,GFSR_USERRESOURCES = 0x2,};
enum MACRO_GGO {GGO_METRICS = 0,GGO_BITMAP = 1,GGO_NATIVE = 2,};
enum MACRO_GGRC {GGRC_OK = 0,GGRC_DICTBUFTOOSMALL = 1,GGRC_PARAMERROR = 2,};
enum MACRO_GHND {GHND = 66,};
enum MACRO_GLOBAL {GLOBAL_ALL = 0,GLOBAL_LRU = 1,GLOBAL_FREE = 2,};
enum MACRO_GMEM {GMEM_FIXED = 0x0,GMEM_MOVEABLE = 0x2,GMEM_NOCOMPACT = 0x10,GMEM_NODISCARD = 0x20,GMEM_ZEROINIT = 0x40,GMEM_MODIFY = 0x80,GMEM_DISCARDABLE = 0x100,GMEM_NOT_BANKED = 0x1000,GMEM_SHARE = 0x2000,GMEM_DDESHARE = 0x2000,GMEM_NOTIFY = 0x4000,GMEM_LOWER = 0x1000,};
enum MACRO_GMEM_DISCARDED {GMEM_DISCARDED = 0x4000,GMEM_LOCKCOUNT = 0xFF,};
enum MACRO_GND {GND_FIRSTINSTANCEONLY = 0x1,GND_FORWARD = 0x0,GND_REVERSE = 0x2,};
enum MACRO_GPTR {GPTR = 64,};
enum MACRO_GT {GT_UNKNOWN = 0,GT_DGROUP = 1,GT_DATA = 2,GT_CODE = 3,GT_TASK = 4,GT_RESOURCE = 5,GT_MODULE = 6,GT_FREE = 7,GT_INTERNAL = 8,GT_SENTINEL = 9,GT_BURGERMASTER = 10,};
enum MACRO_GW {GW_HWNDFIRST = 0,GW_HWNDLAST = 1,GW_HWNDNEXT = 2,GW_HWNDPREV = 3,GW_OWNER = 4,GW_CHILD = 5,};
enum MACRO_GWL {GWL_WNDPROC = -4,};
enum MACRO_GWL_STYLE {GWL_STYLE = -16,GWL_EXSTYLE = -20,};
enum MACRO_GWW {GWW_HINSTANCE = -6,GWW_HWNDPARENT = -8,GWW_ID = -12,};
enum MACRO_HC {HC_ACTION = 0,HC_GETLPLPFN = -3,HC_LPLPFNNEXT = -2,HC_LPFNNEXT = -1,};
enum MACRO_HCBT {HCBT_MOVESIZE = 0,HCBT_MINMAX = 1,HCBT_QS = 2,HCBT_CREATEWND = 3,HCBT_DESTROYWND = 4,HCBT_ACTIVATE = 5,HCBT_CLICKSKIPPED = 6,HCBT_KEYSKIPPED = 7,HCBT_SYSCOMMAND = 8,HCBT_SETFOCUS = 9,};
enum MACRO_HC_GETNEXT {HC_GETNEXT = 1,HC_SKIP = 2,HC_NOREMOVE = 3,HC_NOREM = 3,HC_SYSMODALON = 4,HC_SYSMODALOFF = 5,};
enum MACRO_HDATA {HDATA_APPOWNED = 0x1,};
enum MACRO_HE {HE_GETRC = 3,HE_SETRC = 4,HE_GETINFLATE = 5,HE_SETINFLATE = 6,HE_GETUNDERLINE = 7,HE_SETUNDERLINE = 8,HE_GETINKHANDLE = 9,HE_SETINKMODE = 10,HE_STOPINKMODE = 11,HE_GETRCRESULTCODE = 12,HE_DEFAULTFONT = 13,HE_CHARPOSITION = 14,HE_CHAROFFSET = 15,HE_GETRCRESULT = 22,HE_KKCONVERT = 30,HE_GETKKCONVERT = 31,HE_CANCELKKCONVERT = 32,HE_FIXKKCONVERT = 33,};
enum MACRO_HEAP {NORMAL_HEAP = 0,USER_HEAP = 1,GDI_HEAP = 2,};
enum MACRO_HEKK {HEKK_DEFAULT = 0,HEKK_CONVERT = 1,HEKK_CANDIDATE = 2,};
enum MACRO_HELP {HELP_CONTEXT = 0x1,HELP_QUIT = 0x2,HELP_INDEX = 0x3,HELP_CONTENTS = 0x3,HELP_HELPONHELP = 0x4,HELP_SETINDEX = 0x5,HELP_SETCONTENTS = 0x5,HELP_CONTEXTPOPUP = 0x8,HELP_FORCEFILE = 0x9,HELP_KEY = 0x101,HELP_COMMAND = 0x102,HELP_PARTIALKEY = 0x105,HELP_MULTIKEY = 0x201,HELP_SETWINPOS = 0x203,};
enum MACRO_HEP {HEP_NORECOG = 0,HEP_RECOG = 1,HEP_WAITFORTAP = 2,};
enum MACRO_HE_GETBOXLAYOUT {HE_GETBOXLAYOUT = 20,HE_SETBOXLAYOUT = 21,};
enum MACRO_HFILE {HFILE_ERROR = -1,};
enum MACRO_HIDE {HIDE_WINDOW = 0,};
enum MACRO_HINSTANCE {HINSTANCE_ERROR = 32,};
enum MACRO_HKEY {HKEY_CLASSES_ROOT = 1,};
enum MACRO_HKP {HKP_SETHOOK = 0,HKP_UNHOOK = -1,};
enum MACRO_HN {HN_ENDREC = 4,HN_DELAYEDRECOGFAIL = 5,HN_RCRESULT = 20,HN_ENDKKCONVERT = 30,};
enum MACRO_HS {HS_HORIZONTAL = 0,HS_VERTICAL = 1,HS_FDIAGONAL = 2,HS_BDIAGONAL = 3,HS_CROSS = 4,HS_DIAGCROSS = 5,};
enum MACRO_HSHELL {HSHELL_WINDOWCREATED = 1,HSHELL_WINDOWDESTROYED = 2,HSHELL_ACTIVATESHELLWINDOW = 3,};
enum MACRO_HTBORDER {HTBORDER = 18,};
enum MACRO_HTBOTTOM {HTBOTTOM = 15,HTBOTTOMLEFT = 16,};
enum MACRO_HTBOTTOMRIGHT {HTBOTTOMRIGHT = 17,};
enum MACRO_HTERROR {HTERROR = -2,};
enum MACRO_HTGROWBOX {HTGROWBOX = 4,HTREDUCE = 8,};
enum MACRO_HTHSCROLL {HTHSCROLL = 6,};
enum MACRO_HTLEFT {HTLEFT = 10,};
enum MACRO_HTMAXBUTTON {HTMAXBUTTON = 9,};
enum MACRO_HTMENU {HTMENU = 5,};
enum MACRO_HTNOWHERE {HTNOWHERE = 0,HTCLIENT = 1,HTCAPTION = 2,};
enum MACRO_HTRIGHT {HTRIGHT = 11,};
enum MACRO_HTSYSMENU {HTSYSMENU = 3,HTSIZE = 4,};
enum MACRO_HTTOP {HTTOP = 12,};
enum MACRO_HTTOPLEFT {HTTOPLEFT = 13,};
enum MACRO_HTTOPRIGHT {HTTOPRIGHT = 14,};
enum MACRO_HTTRANSPARENT {HTTRANSPARENT = -1,};
enum MACRO_HTVSCROLL {HTVSCROLL = 7,HTMINBUTTON = 8,};
enum MACRO_HTZOOM {HTZOOM = 9,};
enum MACRO_HWND {HWND_BROADCAST = 0xFFFF,};
enum MACRO_HWND_DESKTOP {HWND_DESKTOP = 0,};
enum MACRO_HWND_TOP {HWND_TOP = 0,HWND_BOTTOM = 1,HWND_TOPMOST = -1,HWND_NOTOPMOST = -2,};
enum MACRO_HWR {HWR_RESULTS = 0,HWR_APPWIDE = 1,};
enum MACRO_ID {ID_DEFAULTINST = -2,};
enum MACRO_IDABORT {IDABORT = 3,IDRETRY = 4,};
enum MACRO_IDB {IDB_RESULTSEGA = 32325,IDB_RESULTSVGA = 32326,IDB_RESULTSHIRESVGA = 32327,};
enum MACRO_IDBZ {IDBZ_RETRY = 600,IDBZ_ICON = 601,IDBZ_MESSAGE1 = 602,IDBZ_SWITCHTO = 604,};
enum MACRO_IDCV {IDCV_OBJECTTYPE = 150,IDCV_DISPLAYASICON = 152,IDCV_CHANGEICON = 153,IDCV_ACTIVATELIST = 154,IDCV_CONVERTTO = 155,IDCV_ACTIVATEAS = 156,IDCV_RESULTTEXT = 157,IDCV_CONVERTLIST = 158,IDCV_ICON = 159,IDCV_ICONLABEL1 = 160,IDCV_ICONLABEL2 = 161,IDCV_STXCURTYPE = 162,IDCV_GRPRESULT = 163,IDCV_STXCONVERTTO = 164,};
enum MACRO_IDD {IDD_INSERTOBJECT = 32248,IDD_CHANGEICON = 32249,IDD_CONVERT = 32250,IDD_PASTESPECIAL = 32251,IDD_EDITLINKS = 32252,IDD_FILEOPEN = 32253,IDD_BUSY = 32254,IDD_UPDATELINKS = 32255,IDD_CANNOTUPDATELINK = 32256,IDD_CHANGESOURCE = 32257,IDD_INSERTFILEBROWSE = 32258,IDD_CHANGEICONBROWSE = 32259,IDD_LINKSOURCEUNAVAILABLE = 32260,IDD_SERVERNOTREG = 32261,IDD_LINKTYPECHANGED = 32262,IDD_SERVERNOTFOUND = 32263,IDD_OUTOFMEMORY = 32264,};
enum MACRO_IDHELP {IDHELP = 1038,};
enum MACRO_IDIGNORE {IDIGNORE = 5,};
enum MACRO_IDLFLAG {IDLFLAG_NONE = 0,IDLFLAG_FIN = 1,IDLFLAG_FOUT = 2,};
enum MACRO_IDNO {IDNO = 7,};
enum MACRO_IDOK {IDOK = 1,IDCANCEL = 2,};
enum MACRO_IDS {IDS_OLESTDNOCREATEFILE = 700,IDS_OLESTDNOOPENFILE = 701,IDS_OLESTDDISKFULL = 702,};
enum MACRO_IDS_BZRESULTTEXTBUSY {IDS_BZRESULTTEXTBUSY = 32447,IDS_BZRESULTTEXTNOTRESPONDING = 32448,IDS_LINK_AUTO = 32450,IDS_LINK_MANUAL = 32451,IDS_LINK_UNKNOWN = 32452,IDS_LINKS = 32453,IDS_FAILED = 32454,IDS_CHANGESOURCE = 32455,IDS_INVALIDSOURCE = 32456,IDS_ERR_GETLINKSOURCE = 32457,IDS_ERR_GETLINKUPDATEOPTIONS = 32458,IDS_ERR_ADDSTRING = 32459,IDS_CHANGEADDITIONALLINKS = 32460,IDS_CLOSE = 32461,};
enum MACRO_IDS_CINOICONSINFILE {IDS_CINOICONSINFILE = 32430,IDS_CIINVALIDFILE = 32431,IDS_CIFILEACCESS = 32432,IDS_CIFILESHARE = 32433,IDS_CIFILEOPENFAIL = 32434,};
enum MACRO_IDS_CVRESULTCONVERTLINK {IDS_CVRESULTCONVERTLINK = 32440,IDS_CVRESULTCONVERTTO = 32441,IDS_CVRESULTNOCHANGE = 32442,IDS_CVRESULTDISPLAYASICON = 32443,IDS_CVRESULTACTIVATEAS = 32444,IDS_CVRESULTACTIVATEDIFF = 32445,};
enum MACRO_IDS_IORESULTNEW {IDS_IORESULTNEW = 32400,IDS_IORESULTNEWICON = 32401,IDS_IORESULTFROMFILE1 = 32402,IDS_IORESULTFROMFILE2 = 32403,IDS_IORESULTFROMFILEICON2 = 32404,IDS_IORESULTLINKFILE1 = 32405,IDS_IORESULTLINKFILE2 = 32406,IDS_IORESULTLINKFILEICON1 = 32407,IDS_IORESULTLINKFILEICON2 = 32408,};
enum MACRO_IDS_OLE2UIUNKNOWN {IDS_OLE2UIUNKNOWN = 32300,IDS_OLE2UILINK = 32301,IDS_OLE2UIOBJECT = 32302,IDS_OLE2UIEDIT = 32303,IDS_OLE2UICONVERT = 32304,IDS_OLE2UIEDITLINKCMD_1VERB = 32305,IDS_OLE2UIEDITOBJECTCMD_1VERB = 32306,IDS_OLE2UIEDITLINKCMD_NVERB = 32307,IDS_OLE2UIEDITOBJECTCMD_NVERB = 32308,IDS_OLE2UIEDITNOOBJCMD = 32309,IDS_DEFICONLABEL = 32310,IDS_OLE2UIPASTELINKEDTYPE = 32311,IDS_FILTERS = 32320,IDS_ICONFILTERS = 32321,IDS_BROWSE = 32322,};
enum MACRO_IDS_PSPASTEDATA {IDS_PSPASTEDATA = 32410,IDS_PSPASTEOBJECT = 32411,IDS_PSPASTEOBJECTASICON = 32412,IDS_PSPASTELINKDATA = 32413,IDS_PSPASTELINKOBJECT = 32414,IDS_PSPASTELINKOBJECTASICON = 32415,IDS_PSNONOLE = 32416,IDS_PSUNKNOWNTYPE = 32417,IDS_PSUNKNOWNSRC = 32418,IDS_PSUNKNOWNAPP = 32419,};
enum MACRO_IDYES {IDYES = 6,};
enum MACRO_ID_APP {ID_APP = 100,};
enum MACRO_ID_EL {ID_EL_CHANGESOURCE = 201,ID_EL_AUTOMATIC = 202,ID_EL_CLOSE = 208,ID_EL_CANCELLINK = 209,ID_EL_UPDATENOW = 210,ID_EL_OPENSOURCE = 211,ID_EL_MANUAL = 212,ID_EL_LINKSOURCE = 216,ID_EL_LINKTYPE = 217,ID_EL_UPDATE = 218,ID_EL_NULL = -1,ID_EL_LINKSLISTBOX = 206,ID_EL_COL1 = 220,ID_EL_COL2 = 221,ID_EL_COL3 = 222,};
enum MACRO_ID_GROUP {ID_GROUP = 120,ID_CURRENT = 121,ID_CURRENTICON = 122,ID_DEFAULT = 123,ID_DEFAULTICON = 124,ID_FROMFILE = 125,ID_FROMFILEEDIT = 126,ID_ICONLIST = 127,ID_LABEL = 128,ID_LABELEDIT = 129,ID_BROWSE = 130,ID_RESULTICON = 132,ID_RESULTLABEL = 133,};
enum MACRO_ID_IO {ID_IO_CREATENEW = 2100,ID_IO_CREATEFROMFILE = 2101,ID_IO_LINKFILE = 2102,ID_IO_OBJECTTYPELIST = 2103,ID_IO_DISPLAYASICON = 2104,ID_IO_CHANGEICON = 2105,ID_IO_FILE = 2106,ID_IO_FILEDISPLAY = 2107,ID_IO_RESULTIMAGE = 2108,ID_IO_RESULTTEXT = 2109,ID_IO_ICONDISPLAY = 2110,ID_IO_OBJECTTYPETEXT = 2111,ID_IO_FILETEXT = 2112,ID_IO_FILETYPE = 2113,};
enum MACRO_ID_OLEUIHELP {ID_OLEUIHELP = 99,};
enum MACRO_ID_PS {ID_PS_PASTE = 500,ID_PS_PASTELINK = 501,ID_PS_SOURCETEXT = 502,ID_PS_PASTELIST = 503,ID_PS_PASTELINKLIST = 504,ID_PS_DISPLAYLIST = 505,ID_PS_DISPLAYASICON = 506,ID_PS_ICONDISPLAY = 507,ID_PS_CHANGEICON = 508,ID_PS_RESULTIMAGE = 509,ID_PS_RESULTTEXT = 510,ID_PS_RESULTGROUP = 511,ID_PS_STXSOURCE = 512,ID_PS_STXAS = 513,};
enum MACRO_ID_PU {ID_PU_LINKS = 900,ID_PU_TEXT = 901,ID_PU_CONVERT = 902,ID_PU_BROWSE = 904,ID_PU_METER = 905,ID_PU_PERCENT = 906,ID_PU_STOP = 907,ID_DUMMY = 999,};
enum MACRO_ID_STATIC {ID_STATIC = 98,};
enum MACRO_IE {IE_BADID = -1,IE_OPEN = -2,IE_NOPEN = -3,IE_MEMORY = -4,IE_DEFAULT = -5,IE_HARDWARE = -10,IE_BYTESIZE = -11,IE_BAUDRATE = -12,};
enum MACRO_IGNORE {IGNORE = 0,INFINITE = -1,};
enum MACRO_IMPLINK {IMPLINK_IP = 155,IMPLINK_LOWEXPER = 156,IMPLINK_HIGHEXPER = 158,};
enum MACRO_IMPLTYPEFLAG {IMPLTYPEFLAG_FDEFAULT = 0x1,IMPLTYPEFLAG_FSOURCE = 0x2,IMPLTYPEFLAG_FRESTRICTED = 0x4,};
enum MACRO_IN {IN_CLASSA_NET = 0x0,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0x0,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x0,IN_CLASSC_NET = 0xFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,};
enum MACRO_INADDR : __int64 {INADDR_ANY = 0x0,INADDR_LOOPBACK = 0x7F000001,INADDR_BROADCAST = 0xFFFFFFFF,INADDR_NONE = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_INKWIDTH {INKWIDTH_MINIMUM = 0,INKWIDTH_MAXIMUM = 15,};
enum MACRO_INPLACE {INPLACE_E_FIRST = 0x1A0,INPLACE_E_LAST = 0x1AF,INPLACE_S_FIRST = 0x1A0,INPLACE_S_LAST = 0x1AF,};
enum MACRO_INPLACE_E {INPLACE_E_NOTUNDOABLE = 416,INPLACE_E_NOTOOLSPACE = 417,INPLACE_S_TRUNCATED = 416,INPLACE_DEFBORDERWIDTH = 4,};
enum MACRO_INT {INT_DIV0 = 0,INT_1 = 1,INT_3 = 3,INT_UDINSTR = 6,INT_STKFAULT = 12,INT_GPFAULT = 13,INT_BADPAGEFAULT = 14,INT_CTLALTSYSRQ = 256,};
enum MACRO_INVALID {INVALID_SOCKET = -1,};
enum MACRO_IOC {IOC_VOID = 0x0,IOC_OUT = 0x0,IOC_IN = 0x0,IOC_INOUT = 0x0,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0x7F,};
enum MACRO_IOF {IOF_SHOWHELP = 0x1,IOF_SELECTCREATENEW = 0x2,IOF_SELECTCREATEFROMFILE = 0x4,IOF_CHECKLINK = 0x8,IOF_CHECKDISPLAYASICON = 0x10,IOF_CREATENEWOBJECT = 0x20,IOF_CREATEFILEOBJECT = 0x40,IOF_CREATELINKOBJECT = 0x80,IOF_DISABLELINK = 0x100,IOF_VERIFYSERVERSEXIST = 0x200,IOF_DISABLEDISPLAYASICON = 0x400,};
enum MACRO_IP {IP_OPTIONS = 1,IP_MULTICAST_IF = 2,IP_MULTICAST_TTL = 3,IP_MULTICAST_LOOP = 4,IP_ADD_MEMBERSHIP = 5,IP_DROP_MEMBERSHIP = 6,IP_DEFAULT_MULTICAST_TTL = 1,IP_DEFAULT_MULTICAST_LOOP = 1,IP_MAX_MEMBERSHIPS = 20,};
enum MACRO_IPPORT {IPPORT_ECHO = 7,IPPORT_DISCARD = 9,IPPORT_SYSTAT = 11,IPPORT_DAYTIME = 13,IPPORT_NETSTAT = 15,IPPORT_FTP = 21,IPPORT_TELNET = 23,IPPORT_SMTP = 25,IPPORT_TIMESERVER = 37,IPPORT_NAMESERVER = 42,IPPORT_WHOIS = 43,IPPORT_MTP = 57,IPPORT_TFTP = 69,IPPORT_RJE = 77,IPPORT_FINGER = 79,IPPORT_TTYLINK = 87,IPPORT_SUPDUP = 95,IPPORT_EXECSERVER = 512,IPPORT_LOGINSERVER = 513,IPPORT_CMDSERVER = 514,IPPORT_EFSSERVER = 520,IPPORT_BIFFUDP = 512,IPPORT_WHOSERVER = 513,IPPORT_ROUTESERVER = 520,IPPORT_RESERVED = 1024,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_ICMP = 1,IPPROTO_GGP = 2,IPPROTO_TCP = 6,IPPROTO_PUP = 12,IPPROTO_UDP = 17,IPPROTO_IDP = 22,IPPROTO_ND = 77,IPPROTO_RAW = 255,IPPROTO_MAX = 256,};
enum MACRO_JOY {JOY_BUTTON1 = 0x1,JOY_BUTTON2 = 0x2,JOY_BUTTON3 = 0x4,JOY_BUTTON4 = 0x8,JOY_BUTTON1CHG = 0x100,JOY_BUTTON2CHG = 0x200,JOY_BUTTON3CHG = 0x400,JOY_BUTTON4CHG = 0x800,};
enum MACRO_JOYERR {JOYERR_NOERROR = 0,JOYERR_PARMS = 165,JOYERR_NOCANDO = 166,JOYERR_UNPLUGGED = 167,};
enum MACRO_JOYSTICKID1 {JOYSTICKID1 = 0,JOYSTICKID2 = 1,};
enum MACRO_KF {KF_EXTENDED = 0x100,KF_DLGMODE = 0x800,KF_MENUMODE = 0x1000,KF_ALTDOWN = 0x2000,KF_REPEAT = 0x4000,KF_UP = 0x8000,};
enum MACRO_LANG {LANG_NEUTRAL = 0x0,LANG_ALBANIAN = 0x1C,LANG_ARABIC = 0x1,LANG_BAHASA = 0x21,LANG_BULGARIAN = 0x2,LANG_CATALAN = 0x3,LANG_CHINESE = 0x4,LANG_CZECH = 0x5,LANG_DANISH = 0x6,LANG_DUTCH = 0x13,LANG_ENGLISH = 0x9,LANG_FINNISH = 0xB,LANG_FRENCH = 0xC,LANG_GERMAN = 0x7,LANG_GREEK = 0x8,LANG_HEBREW = 0xD,LANG_HUNGARIAN = 0xE,LANG_ICELANDIC = 0xF,LANG_ITALIAN = 0x10,LANG_JAPANESE = 0x11,LANG_KOREAN = 0x12,LANG_NORWEGIAN = 0x14,LANG_POLISH = 0x15,LANG_PORTUGUESE = 0x16,LANG_RHAETO_ROMAN = 0x17,LANG_ROMANIAN = 0x18,LANG_RUSSIAN = 0x19,LANG_SERBO_CROATIAN = 0x1A,LANG_SLOVAK = 0x1B,LANG_SPANISH = 0xA,LANG_SWEDISH = 0x1D,LANG_THAI = 0x1E,LANG_TURKISH = 0x1F,LANG_URDU = 0x20,};
enum MACRO_LANG_SYSTEM {LANG_SYSTEM_DEFAULT = 2048,LANG_USER_DEFAULT = 1024,};
enum MACRO_LB {LB_ADDSTRING = 1025,LB_INSERTSTRING = 1026,LB_DELETESTRING = 1027,LB_RESETCONTENT = 1029,LB_SETSEL = 1030,LB_SETCURSEL = 1031,LB_GETSEL = 1032,LB_GETCURSEL = 1033,LB_GETTEXT = 1034,LB_GETTEXTLEN = 1035,LB_GETCOUNT = 1036,LB_SELECTSTRING = 1037,LB_DIR = 1038,LB_GETTOPINDEX = 1039,LB_FINDSTRING = 1040,LB_GETSELCOUNT = 1041,LB_GETSELITEMS = 1042,LB_SETTABSTOPS = 1043,LB_GETHORIZONTALEXTENT = 1044,LB_SETHORIZONTALEXTENT = 1045,LB_SETCOLUMNWIDTH = 1046,LB_SETTOPINDEX = 1048,LB_GETITEMRECT = 1049,LB_GETITEMDATA = 1050,LB_SETITEMDATA = 1051,LB_SELITEMRANGE = 1052,LB_SETCARETINDEX = 1055,LB_GETCARETINDEX = 1056,LB_SETITEMHEIGHT = 1057,LB_GETITEMHEIGHT = 1058,LB_FINDSTRINGEXACT = 1059,};
enum MACRO_LBN {LBN_ERRSPACE = -2,LBN_SELCHANGE = 1,LBN_DBLCLK = 2,LBN_SELCANCEL = 3,LBN_SETFOCUS = 4,LBN_KILLFOCUS = 5,};
enum MACRO_LBS {LBS_NOTIFY = 0x1,LBS_SORT = 0x2,LBS_NOREDRAW = 0x4,LBS_MULTIPLESEL = 0x8,LBS_OWNERDRAWFIXED = 0x10,LBS_OWNERDRAWVARIABLE = 0x20,LBS_HASSTRINGS = 0x40,LBS_USETABSTOPS = 0x80,LBS_NOINTEGRALHEIGHT = 0x100,LBS_MULTICOLUMN = 0x200,LBS_WANTKEYBOARDINPUT = 0x400,LBS_EXTENDEDSEL = 0x800,LBS_DISABLENOSCROLL = 0x1000,LBS_STANDARD = 0x3,};
enum MACRO_LB_OKAY {LB_OKAY = 0,LB_ERR = -1,LB_ERRSPACE = -2,LB_CTLCODE = 0,};
enum MACRO_LC {LC_NONE = 0x0,LC_POLYLINE = 0x2,LC_MARKER = 0x4,LC_POLYMARKER = 0x8,LC_WIDE = 0x10,LC_STYLED = 0x20,LC_WIDESTYLED = 0x40,LC_INTERIORS = 0x80,};
enum MACRO_LCMAP {LCMAP_LOWERCASE = 0x100,LCMAP_UPPERCASE = 0x200,LCMAP_SORTKEY = 0x400,LCMAP_HALFWIDTH = 0x800,LCMAP_FULLWIDTH = 0x1000,LCMAP_HIRAGANA = 0x2000,LCMAP_KATAKANA = 0x4000,};
enum MACRO_LEN {WSADESCRIPTION_LEN = 256,WSASYS_STATUS_LEN = 128,};
enum MACRO_LF {LF_FACESIZE = 32,};
enum MACRO_LF_FIXED {LF_FIXED = 1,LF_FREE = 2,LF_MOVEABLE = 4,};
enum MACRO_LF_FULLFACESIZE {LF_FULLFACESIZE = 64,};
enum MACRO_LHND {LHND = 66,};
enum MACRO_LINECAPS {LINECAPS = 30,POLYGONALCAPS = 32,};
enum MACRO_LMEM {LMEM_FIXED = 0x0,LMEM_MOVEABLE = 0x2,LMEM_NOCOMPACT = 0x10,LMEM_NODISCARD = 0x20,LMEM_ZEROINIT = 0x40,LMEM_MODIFY = 0x80,LMEM_DISCARDABLE = 0xF00,};
enum MACRO_LMEM_DISCARDED {LMEM_DISCARDED = 0x4000,LMEM_LOCKCOUNT = 0xFF,};
enum MACRO_LOCALE {LOCALE_NOUSEROVERRIDE = 0x0,LOCALE_ILANGUAGE = 0x1,LOCALE_SLANGUAGE = 0x2,LOCALE_SENGLANGUAGE = 0x1001,LOCALE_SABBREVLANGNAME = 0x3,LOCALE_SNATIVELANGNAME = 0x4,LOCALE_ICOUNTRY = 0x5,LOCALE_SCOUNTRY = 0x6,LOCALE_SENGCOUNTRY = 0x1002,LOCALE_SABBREVCTRYNAME = 0x7,LOCALE_SNATIVECTRYNAME = 0x8,LOCALE_IDEFAULTLANGUAGE = 0x9,LOCALE_IDEFAULTCOUNTRY = 0xA,LOCALE_IDEFAULTCODEPAGE = 0xB,LOCALE_SLIST = 0xC,LOCALE_IMEASURE = 0xD,LOCALE_SDECIMAL = 0xE,LOCALE_STHOUSAND = 0xF,LOCALE_SGROUPING = 0x10,LOCALE_IDIGITS = 0x11,LOCALE_ILZERO = 0x12,LOCALE_SNATIVEDIGITS = 0x13,LOCALE_SCURRENCY = 0x14,LOCALE_SINTLSYMBOL = 0x15,LOCALE_SMONDECIMALSEP = 0x16,LOCALE_SMONTHOUSANDSEP = 0x17,LOCALE_SMONGROUPING = 0x18,LOCALE_ICURRDIGITS = 0x19,LOCALE_IINTLCURRDIGITS = 0x1A,LOCALE_ICURRENCY = 0x1B,LOCALE_INEGCURR = 0x1C,LOCALE_SDATE = 0x1D,LOCALE_STIME = 0x1E,LOCALE_SSHORTDATE = 0x1F,LOCALE_SLONGDATE = 0x20,LOCALE_IDATE = 0x21,LOCALE_ILDATE = 0x22,LOCALE_ITIME = 0x23,LOCALE_ICENTURY = 0x24,LOCALE_ITLZERO = 0x25,LOCALE_IDAYLZERO = 0x26,LOCALE_IMONLZERO = 0x27,LOCALE_S1159 = 0x28,LOCALE_S2359 = 0x29,LOCALE_SDAYNAME1 = 0x2A,LOCALE_SDAYNAME2 = 0x2B,LOCALE_SDAYNAME3 = 0x2C,LOCALE_SDAYNAME4 = 0x2D,LOCALE_SDAYNAME5 = 0x2E,LOCALE_SDAYNAME6 = 0x2F,LOCALE_SDAYNAME7 = 0x30,LOCALE_SABBREVDAYNAME1 = 0x31,LOCALE_SABBREVDAYNAME2 = 0x32,LOCALE_SABBREVDAYNAME3 = 0x33,LOCALE_SABBREVDAYNAME4 = 0x34,LOCALE_SABBREVDAYNAME5 = 0x35,LOCALE_SABBREVDAYNAME6 = 0x36,LOCALE_SABBREVDAYNAME7 = 0x37,LOCALE_SMONTHNAME1 = 0x38,LOCALE_SMONTHNAME2 = 0x39,LOCALE_SMONTHNAME3 = 0x3A,LOCALE_SMONTHNAME4 = 0x3B,LOCALE_SMONTHNAME5 = 0x3C,LOCALE_SMONTHNAME6 = 0x3D,LOCALE_SMONTHNAME7 = 0x3E,LOCALE_SMONTHNAME8 = 0x3F,LOCALE_SMONTHNAME9 = 0x40,LOCALE_SMONTHNAME10 = 0x41,LOCALE_SMONTHNAME11 = 0x42,LOCALE_SMONTHNAME12 = 0x43,LOCALE_SABBREVMONTHNAME1 = 0x44,LOCALE_SABBREVMONTHNAME2 = 0x45,LOCALE_SABBREVMONTHNAME3 = 0x46,LOCALE_SABBREVMONTHNAME4 = 0x47,LOCALE_SABBREVMONTHNAME5 = 0x48,LOCALE_SABBREVMONTHNAME6 = 0x49,LOCALE_SABBREVMONTHNAME7 = 0x4A,LOCALE_SABBREVMONTHNAME8 = 0x4B,LOCALE_SABBREVMONTHNAME9 = 0x4C,LOCALE_SABBREVMONTHNAME10 = 0x4D,LOCALE_SABBREVMONTHNAME11 = 0x4E,LOCALE_SABBREVMONTHNAME12 = 0x4F,LOCALE_SPOSITIVESIGN = 0x50,LOCALE_SNEGATIVESIGN = 0x51,LOCALE_IPOSSIGNPOSN = 0x52,LOCALE_INEGSIGNPOSN = 0x53,LOCALE_IPOSSYMPRECEDES = 0x54,LOCALE_IPOSSEPBYSPACE = 0x55,LOCALE_INEGSYMPRECEDES = 0x56,LOCALE_INEGSEPBYSPACE = 0x57,};
enum MACRO_LOCALE_SYSTEM {LOCALE_SYSTEM_DEFAULT = 2048,LOCALE_USER_DEFAULT = 1024,};
enum MACRO_LOGPIXELSX {LOGPIXELSX = 88,};
enum MACRO_LOGPIXELSY {LOGPIXELSY = 90,};
enum MACRO_LPDFNULL {LPDFNULL = 0,};
enum MACRO_LPTR {LPTR = 64,};
enum MACRO_LT {LT_NORMAL = 0,LT_FREE = 255,LT_GDI_PEN = 1,LT_GDI_BRUSH = 2,LT_GDI_FONT = 3,LT_GDI_PALETTE = 4,LT_GDI_BITMAP = 5,LT_GDI_RGN = 6,LT_GDI_DC = 7,LT_GDI_DISABLED_DC = 8,LT_GDI_METADC = 9,LT_GDI_METAFILE = 10,LT_GDI_MAX = 10,LT_USER_CLASS = 1,LT_USER_WND = 2,LT_USER_STRING = 3,LT_USER_MENU = 4,LT_USER_CLIP = 5,LT_USER_CBOX = 6,LT_USER_PALETTE = 7,LT_USER_ED = 8,LT_USER_BWL = 9,LT_USER_OWNERDRAW = 10,LT_USER_SPB = 11,LT_USER_CHECKPOINT = 12,LT_USER_DCE = 13,LT_USER_MWP = 14,LT_USER_PROP = 15,LT_USER_LBIV = 16,LT_USER_MISC = 17,LT_USER_ATOMS = 18,LT_USER_LOCKINPUTSTATE = 19,LT_USER_HOOKLIST = 20,LT_USER_USERSEEUSERDOALLOC = 21,LT_USER_HOTKEYLIST = 22,LT_USER_POPUPMENU = 23,LT_USER_HANDLETABLE = 32,LT_USER_MAX = 32,};
enum MACRO_LZERROR {LZERROR_BADINHANDLE = -1,LZERROR_BADOUTHANDLE = -2,LZERROR_READ = -3,LZERROR_WRITE = -4,LZERROR_GLOBALLOC = -5,LZERROR_GLOBLOCK = -6,LZERROR_BADVALUE = -7,LZERROR_UNKNOWNALG = -8,};
enum MACRO_MA {MA_ACTIVATE = 1,MA_ACTIVATEANDEAT = 2,MA_NOACTIVATE = 3,MA_NOACTIVATEANDEAT = 4,};
enum MACRO_MAP {MAP_GESTOGES = 18,MAP_GESTOVKEYS = 40,};
enum MACRO_MAPI {MAPI_OLE = 0x1,MAPI_OLE_STATIC = 0x2,MAPI_ORIG = 0x0,MAPI_TO = 0x1,MAPI_CC = 0x2,MAPI_BCC = 0x3,MAPI_UNREAD = 0x1,MAPI_RECEIPT_REQUESTED = 0x2,MAPI_SENT = 0x4,MAPI_LOGON_UI = 0x1,MAPI_NEW_SESSION = 0x2,MAPI_DIALOG = 0x8,MAPI_UNREAD_ONLY = 0x20,MAPI_ENVELOPE_ONLY = 0x40,MAPI_PEEK = 0x80,MAPI_GUARANTEE_FIFO = 0x100,MAPI_BODY_AS_FILE = 0x200,MAPI_AB_NOMODIFY = 0x400,MAPI_SUPPRESS_ATTACH = 0x800,MAPI_FORCE_DOWNLOAD = 0x1000,};
enum MACRO_MAPI_USER {MAPI_USER_ABORT = 1,MAPI_E_FAILURE = 2,MAPI_E_LOGIN_FAILURE = 3,MAPI_E_DISK_FULL = 4,MAPI_E_INSUFFICIENT_MEMORY = 5,MAPI_E_ACCESS_DENIED = 6,MAPI_E_TOO_MANY_SESSIONS = 8,MAPI_E_TOO_MANY_FILES = 9,MAPI_E_TOO_MANY_RECIPIENTS = 10,MAPI_E_ATTACHMENT_NOT_FOUND = 11,MAPI_E_ATTACHMENT_OPEN_FAILURE = 12,MAPI_E_ATTACHMENT_WRITE_FAILURE = 13,MAPI_E_UNKNOWN_RECIPIENT = 14,MAPI_E_BAD_RECIPTYPE = 15,MAPI_E_NO_MESSAGES = 16,MAPI_E_INVALID_MESSAGE = 17,MAPI_E_TEXT_TOO_LARGE = 18,MAPI_E_INVALID_SESSION = 19,MAPI_E_TYPE_NOT_SUPPORTED = 20,MAPI_E_AMBIGUOUS_RECIPIENT = 21,MAPI_E_MESSAGE_IN_USE = 22,MAPI_E_NETWORK_FAILURE = 23,MAPI_E_INVALID_EDITFIELDS = 24,MAPI_E_INVALID_RECIPS = 25,MAPI_E_NOT_SUPPORTED = 26,};
enum MACRO_MARKPARITY {MARKPARITY = 3,SPACEPARITY = 4,};
enum MACRO_MARSHAL {MARSHAL_E_FIRST = 0x120,MARSHAL_E_LAST = 0x12F,MARSHAL_S_FIRST = 0x120,MARSHAL_S_LAST = 0x12F,};
enum MACRO_MARSHALINTERFACE {MARSHALINTERFACE_MIN = 40,};
enum MACRO_MAX {MAX_MONITORS = 4,};
enum MACRO_MAXDICTIONARIES {MAXDICTIONARIES = 16,cbRcLanguageMax = 44,};
enum MACRO_MAXFILELEN {MAXFILELEN = 13,};
enum MACRO_MAXGETHOSTSTRUCT {MAXGETHOSTSTRUCT = 1024,};
enum MACRO_MAXHOTSPOT {MAXHOTSPOT = 8,};
enum MACRO_MAXOEMDATAWORDS {MAXOEMDATAWORDS = 6,};
enum MACRO_MAXPNAMELEN {MAXPNAMELEN = 32,MAXERRORLENGTH = 128,};
enum MACRO_MAX_DATA {MAX_DATA = 11,MAX_PATH = 255,MAX_MODULE_NAME = 9,MAX_CLASSNAME = 255,};
enum MACRO_MB {MB_OK = 0x0,MB_OKCANCEL = 0x1,MB_ABORTRETRYIGNORE = 0x2,MB_YESNOCANCEL = 0x3,MB_YESNO = 0x4,MB_RETRYCANCEL = 0x5,MB_TYPEMASK = 0xF,MB_ICONHAND = 0x10,MB_ICONQUESTION = 0x20,MB_ICONEXCLAMATION = 0x30,MB_ICONASTERISK = 0x40,MB_ICONMASK = 0xF0,MB_ICONINFORMATION = 0x40,MB_ICONSTOP = 0x10,MB_DEFBUTTON1 = 0x0,MB_DEFBUTTON2 = 0x100,MB_DEFBUTTON3 = 0x200,MB_DEFMASK = 0xF00,MB_APPLMODAL = 0x0,MB_SYSTEMMODAL = 0x1000,MB_TASKMODAL = 0x2000,MB_NOFOCUS = 0x8000,};
enum MACRO_MCI {MCI_STRING_OFFSET = 512,MCI_VD_OFFSET = 1024,MCI_CD_OFFSET = 1088,MCI_WAVE_OFFSET = 1152,MCI_SEQ_OFFSET = 1216,};
enum MACRO_MCIERR {MCIERR_INVALID_DEVICE_ID = 257,MCIERR_UNRECOGNIZED_KEYWORD = 259,MCIERR_UNRECOGNIZED_COMMAND = 261,MCIERR_HARDWARE = 262,MCIERR_INVALID_DEVICE_NAME = 263,MCIERR_OUT_OF_MEMORY = 264,MCIERR_DEVICE_OPEN = 265,MCIERR_CANNOT_LOAD_DRIVER = 266,MCIERR_MISSING_COMMAND_STRING = 267,MCIERR_PARAM_OVERFLOW = 268,MCIERR_MISSING_STRING_ARGUMENT = 269,MCIERR_BAD_INTEGER = 270,MCIERR_PARSER_INTERNAL = 271,MCIERR_DRIVER_INTERNAL = 272,MCIERR_MISSING_PARAMETER = 273,MCIERR_UNSUPPORTED_FUNCTION = 274,MCIERR_FILE_NOT_FOUND = 275,MCIERR_DEVICE_NOT_READY = 276,MCIERR_INTERNAL = 277,MCIERR_DRIVER = 278,MCIERR_CANNOT_USE_ALL = 279,MCIERR_MULTIPLE = 280,MCIERR_EXTENSION_NOT_FOUND = 281,MCIERR_OUTOFRANGE = 282,MCIERR_FLAGS_NOT_COMPATIBLE = 284,MCIERR_FILE_NOT_SAVED = 286,MCIERR_DEVICE_TYPE_REQUIRED = 287,MCIERR_DEVICE_LOCKED = 288,MCIERR_DUPLICATE_ALIAS = 289,MCIERR_BAD_CONSTANT = 290,MCIERR_MUST_USE_SHAREABLE = 291,MCIERR_MISSING_DEVICE_NAME = 292,MCIERR_BAD_TIME_FORMAT = 293,MCIERR_NO_CLOSING_QUOTE = 294,MCIERR_DUPLICATE_FLAGS = 295,MCIERR_INVALID_FILE = 296,MCIERR_NULL_PARAMETER_BLOCK = 297,MCIERR_UNNAMED_RESOURCE = 298,MCIERR_NEW_REQUIRES_ALIAS = 299,MCIERR_NOTIFY_ON_AUTO_OPEN = 300,MCIERR_NO_ELEMENT_ALLOWED = 301,MCIERR_NONAPPLICABLE_FUNCTION = 302,MCIERR_ILLEGAL_FOR_AUTO_OPEN = 303,MCIERR_FILENAME_REQUIRED = 304,MCIERR_EXTRA_CHARACTERS = 305,MCIERR_DEVICE_NOT_INSTALLED = 306,MCIERR_GET_CD = 307,MCIERR_SET_CD = 308,MCIERR_SET_DRIVE = 309,MCIERR_DEVICE_LENGTH = 310,MCIERR_DEVICE_ORD_LENGTH = 311,MCIERR_NO_INTEGER = 312,MCIERR_WAVE_OUTPUTSINUSE = 320,MCIERR_WAVE_SETOUTPUTINUSE = 321,MCIERR_WAVE_INPUTSINUSE = 322,MCIERR_WAVE_SETINPUTINUSE = 323,MCIERR_WAVE_OUTPUTUNSPECIFIED = 324,MCIERR_WAVE_INPUTUNSPECIFIED = 325,MCIERR_WAVE_OUTPUTSUNSUITABLE = 326,MCIERR_WAVE_SETOUTPUTUNSUITABLE = 327,MCIERR_WAVE_INPUTSUNSUITABLE = 328,MCIERR_WAVE_SETINPUTUNSUITABLE = 329,MCIERR_SEQ_DIV_INCOMPATIBLE = 336,MCIERR_SEQ_PORT_INUSE = 337,MCIERR_SEQ_PORT_NONEXISTENT = 338,MCIERR_SEQ_PORT_MAPNODEVICE = 339,MCIERR_SEQ_PORT_MISCERROR = 340,MCIERR_SEQ_TIMER = 341,MCIERR_SEQ_PORTUNSPECIFIED = 342,MCIERR_SEQ_NOMIDIPRESENT = 343,MCIERR_NO_WINDOW = 346,MCIERR_CREATEWINDOW = 347,MCIERR_FILE_READ = 348,MCIERR_FILE_WRITE = 349,MCIERR_CUSTOM_DRIVER_BASE = 512,};
enum MACRO_MCI_OPEN {MCI_OPEN = 0x803,MCI_CLOSE = 0x804,MCI_ESCAPE = 0x805,MCI_PLAY = 0x806,MCI_SEEK = 0x807,MCI_STOP = 0x808,MCI_PAUSE = 0x809,MCI_INFO = 0x80A,MCI_GETDEVCAPS = 0x80B,MCI_SPIN = 0x80C,MCI_SET = 0x80D,MCI_STEP = 0x80E,MCI_RECORD = 0x80F,MCI_SYSINFO = 0x810,MCI_BREAK = 0x811,MCI_SOUND = 0x812,MCI_SAVE = 0x813,MCI_STATUS = 0x814,MCI_CUE = 0x830,MCI_REALIZE = 0x840,MCI_WINDOW = 0x841,MCI_PUT = 0x842,MCI_WHERE = 0x843,MCI_FREEZE = 0x844,MCI_UNFREEZE = 0x845,MCI_LOAD = 0x850,MCI_CUT = 0x851,MCI_COPY = 0x852,MCI_PASTE = 0x853,MCI_UPDATE = 0x854,MCI_RESUME = 0x855,MCI_DELETE = 0x856,MCI_USER_MESSAGES = 0xC00,MCI_ALL_DEVICE_ID = 0xFFFF,MCI_DEVTYPE_VCR = 0x201,MCI_DEVTYPE_VIDEODISC = 0x202,MCI_DEVTYPE_OVERLAY = 0x203,MCI_DEVTYPE_CD_AUDIO = 0x204,MCI_DEVTYPE_DAT = 0x205,MCI_DEVTYPE_SCANNER = 0x206,MCI_DEVTYPE_ANIMATION = 0x207,MCI_DEVTYPE_DIGITAL_VIDEO = 0x208,MCI_DEVTYPE_OTHER = 0x209,MCI_DEVTYPE_WAVEFORM_AUDIO = 0x20A,MCI_DEVTYPE_SEQUENCER = 0x20B,MCI_DEVTYPE_FIRST = 0x201,MCI_DEVTYPE_LAST = 0x20B,MCI_MODE_NOT_READY = 0x20C,MCI_MODE_STOP = 0x20D,MCI_MODE_PLAY = 0x20E,MCI_MODE_RECORD = 0x20F,MCI_MODE_SEEK = 0x210,MCI_MODE_PAUSE = 0x211,MCI_MODE_OPEN = 0x212,MCI_FORMAT_MILLISECONDS = 0x0,MCI_FORMAT_HMS = 0x1,MCI_FORMAT_MSF = 0x2,MCI_FORMAT_FRAMES = 0x3,MCI_FORMAT_SMPTE_24 = 0x4,MCI_FORMAT_SMPTE_25 = 0x5,MCI_FORMAT_SMPTE_30 = 0x6,MCI_FORMAT_SMPTE_30DROP = 0x7,MCI_FORMAT_BYTES = 0x8,MCI_FORMAT_SAMPLES = 0x9,MCI_FORMAT_TMSF = 0xA,MCI_NOTIFY_SUCCESSFUL = 0x1,MCI_NOTIFY_SUPERSEDED = 0x2,MCI_NOTIFY_ABORTED = 0x4,MCI_NOTIFY_FAILURE = 0x8,MCI_NOTIFY = 0x1,MCI_WAIT = 0x2,MCI_FROM = 0x4,MCI_TO = 0x8,MCI_TRACK = 0x10,MCI_OPEN_SHAREABLE = 0x100,MCI_OPEN_ELEMENT = 0x200,MCI_OPEN_ALIAS = 0x400,MCI_OPEN_ELEMENT_ID = 0x800,MCI_OPEN_TYPE_ID = 0x1000,MCI_OPEN_TYPE = 0x2000,MCI_SEEK_TO_START = 0x100,MCI_SEEK_TO_END = 0x200,MCI_STATUS_ITEM = 0x100,MCI_STATUS_START = 0x200,MCI_STATUS_LENGTH = 0x1,MCI_STATUS_POSITION = 0x2,MCI_STATUS_NUMBER_OF_TRACKS = 0x3,MCI_STATUS_MODE = 0x4,MCI_STATUS_MEDIA_PRESENT = 0x5,MCI_STATUS_TIME_FORMAT = 0x6,MCI_STATUS_READY = 0x7,MCI_STATUS_CURRENT_TRACK = 0x8,MCI_INFO_PRODUCT = 0x100,MCI_INFO_FILE = 0x200,MCI_GETDEVCAPS_ITEM = 0x100,MCI_GETDEVCAPS_CAN_RECORD = 0x1,MCI_GETDEVCAPS_HAS_AUDIO = 0x2,MCI_GETDEVCAPS_HAS_VIDEO = 0x3,MCI_GETDEVCAPS_DEVICE_TYPE = 0x4,MCI_GETDEVCAPS_USES_FILES = 0x5,MCI_GETDEVCAPS_COMPOUND_DEVICE = 0x6,MCI_GETDEVCAPS_CAN_EJECT = 0x7,MCI_GETDEVCAPS_CAN_PLAY = 0x8,MCI_GETDEVCAPS_CAN_SAVE = 0x9,MCI_SYSINFO_QUANTITY = 0x100,MCI_SYSINFO_OPEN = 0x200,MCI_SYSINFO_NAME = 0x400,MCI_SYSINFO_INSTALLNAME = 0x800,MCI_SET_DOOR_OPEN = 0x100,MCI_SET_DOOR_CLOSED = 0x200,MCI_SET_TIME_FORMAT = 0x400,MCI_SET_AUDIO = 0x800,MCI_SET_VIDEO = 0x1000,MCI_SET_ON = 0x2000,MCI_SET_OFF = 0x4000,MCI_SET_AUDIO_ALL = 0x0,MCI_SET_AUDIO_LEFT = 0x1,MCI_SET_AUDIO_RIGHT = 0x2,MCI_BREAK_KEY = 0x100,MCI_BREAK_HWND = 0x200,MCI_BREAK_OFF = 0x400,MCI_RECORD_INSERT = 0x100,MCI_RECORD_OVERWRITE = 0x200,MCI_SOUND_NAME = 0x100,MCI_SAVE_FILE = 0x100,MCI_LOAD_FILE = 0x100,MCI_VD_MODE_PARK = 0x401,MCI_VD_MEDIA_CLV = 0x402,MCI_VD_MEDIA_CAV = 0x403,MCI_VD_MEDIA_OTHER = 0x404,MCI_VD_FORMAT_TRACK = 0x4001,MCI_VD_PLAY_REVERSE = 0x0,MCI_VD_PLAY_FAST = 0x0,MCI_VD_PLAY_SPEED = 0x0,MCI_VD_PLAY_SCAN = 0x0,MCI_VD_PLAY_SLOW = 0x0,MCI_VD_SEEK_REVERSE = 0x0,MCI_VD_STATUS_SPEED = 0x4002,MCI_VD_STATUS_FORWARD = 0x4003,MCI_VD_STATUS_MEDIA_TYPE = 0x4004,MCI_VD_STATUS_SIDE = 0x4005,MCI_VD_STATUS_DISC_SIZE = 0x4006,MCI_VD_GETDEVCAPS_CLV = 0x0,MCI_VD_GETDEVCAPS_CAV = 0x0,MCI_VD_SPIN_UP = 0x0,MCI_VD_SPIN_DOWN = 0x0,MCI_VD_GETDEVCAPS_CAN_REVERSE = 0x4002,MCI_VD_GETDEVCAPS_FAST_RATE = 0x4003,MCI_VD_GETDEVCAPS_SLOW_RATE = 0x4004,MCI_VD_GETDEVCAPS_NORMAL_RATE = 0x4005,MCI_VD_STEP_FRAMES = 0x0,MCI_VD_STEP_REVERSE = 0x0,MCI_VD_ESCAPE_STRING = 0x100,MCI_WAVE_OPEN_BUFFER = 0x0,MCI_WAVE_SET_FORMATTAG = 0x0,MCI_WAVE_SET_CHANNELS = 0x0,MCI_WAVE_SET_SAMPLESPERSEC = 0x0,MCI_WAVE_SET_AVGBYTESPERSEC = 0x0,MCI_WAVE_SET_BLOCKALIGN = 0x0,MCI_WAVE_SET_BITSPERSAMPLE = 0x0,MCI_WAVE_INPUT = 0x0,MCI_WAVE_OUTPUT = 0x0,MCI_WAVE_STATUS_FORMATTAG = 0x4001,MCI_WAVE_STATUS_CHANNELS = 0x4002,MCI_WAVE_STATUS_SAMPLESPERSEC = 0x4003,MCI_WAVE_STATUS_AVGBYTESPERSEC = 0x4004,MCI_WAVE_STATUS_BLOCKALIGN = 0x4005,MCI_WAVE_STATUS_BITSPERSAMPLE = 0x4006,MCI_WAVE_STATUS_LEVEL = 0x4007,MCI_WAVE_SET_ANYINPUT = 0x0,MCI_WAVE_SET_ANYOUTPUT = 0x0,MCI_WAVE_GETDEVCAPS_INPUTS = 0x4001,MCI_WAVE_GETDEVCAPS_OUTPUTS = 0x4002,MCI_SEQ_DIV_PPQN = 0x4C0,MCI_SEQ_DIV_SMPTE_24 = 0x4C1,MCI_SEQ_DIV_SMPTE_25 = 0x4C2,MCI_SEQ_DIV_SMPTE_30DROP = 0x4C3,MCI_SEQ_DIV_SMPTE_30 = 0x4C4,MCI_SEQ_FORMAT_SONGPTR = 0x4001,MCI_SEQ_FILE = 0x4002,MCI_SEQ_MIDI = 0x4003,MCI_SEQ_SMPTE = 0x4004,MCI_SEQ_NONE = 0xFFFD,MCI_SEQ_STATUS_TEMPO = 0x4002,MCI_SEQ_STATUS_PORT = 0x4003,MCI_SEQ_STATUS_SLAVE = 0x4007,MCI_SEQ_STATUS_MASTER = 0x4008,MCI_SEQ_STATUS_OFFSET = 0x4009,MCI_SEQ_STATUS_DIVTYPE = 0x400A,MCI_SEQ_SET_TEMPO = 0x0,MCI_SEQ_SET_PORT = 0x0,MCI_SEQ_SET_SLAVE = 0x0,MCI_SEQ_SET_MASTER = 0x0,MCI_SEQ_SET_OFFSET = 0x0,MCI_ANIM_OPEN_WS = 0x0,MCI_ANIM_OPEN_PARENT = 0x0,MCI_ANIM_OPEN_NOSTATIC = 0x0,MCI_ANIM_PLAY_SPEED = 0x0,MCI_ANIM_PLAY_REVERSE = 0x0,MCI_ANIM_PLAY_FAST = 0x0,MCI_ANIM_PLAY_SLOW = 0x0,MCI_ANIM_PLAY_SCAN = 0x0,MCI_ANIM_STEP_REVERSE = 0x0,MCI_ANIM_STEP_FRAMES = 0x0,MCI_ANIM_STATUS_SPEED = 0x4001,MCI_ANIM_STATUS_FORWARD = 0x4002,MCI_ANIM_STATUS_HWND = 0x4003,MCI_ANIM_STATUS_HPAL = 0x4004,MCI_ANIM_STATUS_STRETCH = 0x4005,MCI_ANIM_INFO_TEXT = 0x0,MCI_ANIM_GETDEVCAPS_CAN_REVERSE = 0x4001,MCI_ANIM_GETDEVCAPS_FAST_RATE = 0x4002,MCI_ANIM_GETDEVCAPS_SLOW_RATE = 0x4003,MCI_ANIM_GETDEVCAPS_NORMAL_RATE = 0x4004,MCI_ANIM_GETDEVCAPS_PALETTES = 0x4006,MCI_ANIM_GETDEVCAPS_CAN_STRETCH = 0x4007,MCI_ANIM_GETDEVCAPS_MAX_WINDOWS = 0x4008,MCI_ANIM_REALIZE_NORM = 0x0,MCI_ANIM_REALIZE_BKGD = 0x0,MCI_ANIM_WINDOW_HWND = 0x0,MCI_ANIM_WINDOW_STATE = 0x0,MCI_ANIM_WINDOW_TEXT = 0x0,MCI_ANIM_WINDOW_ENABLE_STRETCH = 0x0,MCI_ANIM_WINDOW_DISABLE_STRETCH = 0x0,MCI_ANIM_WINDOW_DEFAULT = 0x0,MCI_ANIM_RECT = 0x0,MCI_ANIM_PUT_SOURCE = 0x0,MCI_ANIM_PUT_DESTINATION = 0x0,MCI_ANIM_WHERE_SOURCE = 0x0,MCI_ANIM_WHERE_DESTINATION = 0x0,MCI_ANIM_UPDATE_HDC = 0x0,MCI_OVLY_OPEN_WS = 0x0,MCI_OVLY_OPEN_PARENT = 0x0,MCI_OVLY_STATUS_HWND = 0x4001,MCI_OVLY_STATUS_STRETCH = 0x4002,MCI_OVLY_INFO_TEXT = 0x0,MCI_OVLY_GETDEVCAPS_CAN_STRETCH = 0x4001,MCI_OVLY_GETDEVCAPS_CAN_FREEZE = 0x4002,MCI_OVLY_GETDEVCAPS_MAX_WINDOWS = 0x4003,MCI_OVLY_WINDOW_HWND = 0x0,MCI_OVLY_WINDOW_STATE = 0x0,MCI_OVLY_WINDOW_TEXT = 0x0,MCI_OVLY_WINDOW_ENABLE_STRETCH = 0x0,MCI_OVLY_WINDOW_DISABLE_STRETCH = 0x0,MCI_OVLY_WINDOW_DEFAULT = 0x0,MCI_OVLY_RECT = 0x0,MCI_OVLY_PUT_SOURCE = 0x0,MCI_OVLY_PUT_DESTINATION = 0x0,MCI_OVLY_PUT_FRAME = 0x0,MCI_OVLY_PUT_VIDEO = 0x0,MCI_OVLY_WHERE_SOURCE = 0x0,MCI_OVLY_WHERE_DESTINATION = 0x0,MCI_OVLY_WHERE_FRAME = 0x0,MCI_OVLY_WHERE_VIDEO = 0x0,};
enum MACRO_MDIS {MDIS_ALLCHILDSTYLES = 0x1,};
enum MACRO_MDITILE {MDITILE_VERTICAL = 0x0,MDITILE_HORIZONTAL = 0x1,MDITILE_SKIPDISABLED = 0x2,};
enum MACRO_MENU {MENU_TEXT_LEN = 40,};
enum MACRO_MERGECOPY {MERGECOPY = 0xCA,};
enum MACRO_MERGEPAINT {MERGEPAINT = 0x226,};
enum MACRO_META {META_SETBKCOLOR = 0x201,META_SETBKMODE = 0x102,META_SETMAPMODE = 0x103,META_SETROP2 = 0x104,META_SETRELABS = 0x105,META_SETPOLYFILLMODE = 0x106,META_SETSTRETCHBLTMODE = 0x107,META_SETTEXTCHAREXTRA = 0x108,META_SETTEXTCOLOR = 0x209,META_SETTEXTJUSTIFICATION = 0x20A,META_SETWINDOWORG = 0x20B,META_SETWINDOWEXT = 0x20C,META_SETVIEWPORTORG = 0x20D,META_SETVIEWPORTEXT = 0x20E,META_OFFSETWINDOWORG = 0x20F,META_SCALEWINDOWEXT = 0x410,META_OFFSETVIEWPORTORG = 0x211,META_SCALEVIEWPORTEXT = 0x412,META_LINETO = 0x213,META_MOVETO = 0x214,META_EXCLUDECLIPRECT = 0x415,META_INTERSECTCLIPRECT = 0x416,META_ARC = 0x817,META_ELLIPSE = 0x418,META_FLOODFILL = 0x419,META_PIE = 0x81A,META_RECTANGLE = 0x41B,META_ROUNDRECT = 0x61C,META_PATBLT = 0x61D,META_SAVEDC = 0x1E,META_SETPIXEL = 0x41F,META_OFFSETCLIPRGN = 0x220,META_TEXTOUT = 0x521,META_BITBLT = 0x922,META_STRETCHBLT = 0xB23,META_POLYGON = 0x324,META_POLYLINE = 0x325,META_ESCAPE = 0x626,META_RESTOREDC = 0x127,META_FILLREGION = 0x228,META_FRAMEREGION = 0x429,META_INVERTREGION = 0x12A,META_PAINTREGION = 0x12B,META_SELECTCLIPREGION = 0x12C,META_SELECTOBJECT = 0x12D,META_SETTEXTALIGN = 0x12E,META_DRAWTEXT = 0x62F,META_CHORD = 0x830,META_SETMAPPERFLAGS = 0x231,META_EXTTEXTOUT = 0xA32,META_SETDIBTODEV = 0xD33,META_SELECTPALETTE = 0x234,META_REALIZEPALETTE = 0x35,META_ANIMATEPALETTE = 0x436,META_SETPALENTRIES = 0x37,META_POLYPOLYGON = 0x538,META_RESIZEPALETTE = 0x139,META_DIBBITBLT = 0x940,META_DIBSTRETCHBLT = 0xB41,META_DIBCREATEPATTERNBRUSH = 0x142,META_STRETCHDIB = 0xF43,META_EXTFLOODFILL = 0x548,META_RESETDC = 0x14C,META_STARTDOC = 0x14D,META_STARTPAGE = 0x4F,META_ENDPAGE = 0x50,META_ABORTDOC = 0x52,META_ENDDOC = 0x5E,META_DELETEOBJECT = 0x1F0,META_CREATEPALETTE = 0xF7,META_CREATEBRUSH = 0xF8,META_CREATEPATTERNBRUSH = 0x1F9,META_CREATEPENINDIRECT = 0x2FA,META_CREATEFONTINDIRECT = 0x2FB,META_CREATEBRUSHINDIRECT = 0x2FC,META_CREATEBITMAPINDIRECT = 0x2FD,META_CREATEBITMAP = 0x6FE,META_CREATEREGION = 0x6FF,};
enum MACRO_MF {MF_INSERT = 0x0,MF_CHANGE = 0x80,MF_APPEND = 0x100,MF_DELETE = 0x200,MF_REMOVE = 0x1000,MF_BYCOMMAND = 0x0,MF_BYPOSITION = 0x400,MF_SEPARATOR = 0x800,MF_ENABLED = 0x0,MF_GRAYED = 0x1,MF_DISABLED = 0x2,MF_UNCHECKED = 0x0,MF_CHECKED = 0x8,MF_USECHECKBITMAPS = 0x200,MF_STRING = 0x0,MF_BITMAP = 0x4,MF_OWNERDRAW = 0x100,MF_POPUP = 0x10,MF_MENUBARBREAK = 0x20,MF_MENUBREAK = 0x40,MF_UNHILITE = 0x0,MF_HILITE = 0x80,MF_SYSMENU = 0x2000,MF_HELP = 0x4000,MF_MOUSESELECT = 0x8000,MF_END = 0x80,};
enum MACRO_MFCOMMENT {MFCOMMENT = 15,GETPENWIDTH = 16,};
enum MACRO_MF_HSZ {MF_HSZ_INFO = 0x0,MF_SENDMSGS = 0x0,MF_POSTMSGS = 0x0,MF_CALLBACKS = 0x0,MF_ERRORS = 0x0,MF_LINKS = 0x0,MF_CONV = 0x0,MF_MASK = 0x0,};
enum MACRO_MH {MH_CREATE = 1,MH_KEEP = 2,MH_DELETE = 3,MH_CLEANUP = 4,};
enum MACRO_MHDR {MHDR_DONE = 0x1,MHDR_PREPARED = 0x2,MHDR_INQUEUE = 0x4,};
enum MACRO_MIDI {MIDI_MAPPER = -1,MIDI_CACHE_ALL = 1,MIDI_CACHE_BESTFIT = 2,MIDI_CACHE_QUERY = 3,MIDI_UNCACHE = 4,};
enum MACRO_MIDICAPS {MIDICAPS_VOLUME = 0x1,MIDICAPS_LRVOLUME = 0x2,MIDICAPS_CACHE = 0x4,};
enum MACRO_MIDIERR {MIDIERR_UNPREPARED = 64,MIDIERR_STILLPLAYING = 65,MIDIERR_NOMAP = 66,MIDIERR_NOTREADY = 67,MIDIERR_NODEVICE = 68,MIDIERR_INVALIDSETUP = 69,MIDIERR_LASTERROR = 69,};
enum MACRO_MIDIMAPPER {MIDIMAPPER = -1,};
enum MACRO_MIDIPATCHSIZE {MIDIPATCHSIZE = 128,};
enum MACRO_MIM {MIM_OPEN = 961,MIM_CLOSE = 962,MIM_DATA = 963,MIM_LONGDATA = 964,MIM_ERROR = 965,MIM_LONGERROR = 966,};
enum MACRO_MK {MK_LBUTTON = 0x1,MK_RBUTTON = 0x2,MK_SHIFT = 0x4,MK_CONTROL = 0x8,MK_MBUTTON = 0x10,};
enum MACRO_MK_ALT {MK_ALT = 0x20,};
enum MACRO_MK_E {MK_E_FIRST = 0x1E0,MK_E_LAST = 0x1EF,MK_S_FIRST = 0x1E0,MK_S_LAST = 0x1EF,};
enum MACRO_MK_E_CONNECTMANUALLY {MK_E_CONNECTMANUALLY = 480,MK_E_EXCEEDEDDEADLINE = 481,MK_E_NEEDGENERIC = 482,MK_E_UNAVAILABLE = 483,MK_E_SYNTAX = 484,MK_E_NOOBJECT = 485,MK_E_INVALIDEXTENSION = 486,MK_E_INTERMEDIATEINTERFACENOTSUPPORTED = 487,MK_E_NOTBINDABLE = 488,MK_E_NOTBOUND = 489,MK_E_CANTOPENFILE = 490,MK_E_MUSTBOTHERUSER = 491,MK_E_NOINVERSE = 492,MK_E_NOSTORAGE = 493,MK_E_NOPREFIX = 494,MK_S_REDUCED_TO_SELF = 482,MK_S_ME = 484,MK_S_HIM = 485,MK_S_US = 486,MK_S_MONIKERALREADYREGISTERED = 487,};
enum MACRO_MM {MM_TEXT = 1,MM_LOMETRIC = 2,MM_HIMETRIC = 3,MM_LOENGLISH = 4,MM_HIENGLISH = 5,MM_TWIPS = 6,MM_ISOTROPIC = 7,MM_ANISOTROPIC = 8,};
enum MACRO_MMIO {MMIO_RWMODE = 0x3,MMIO_SHAREMODE = 0x70,MMIO_CREATE = 0x1000,MMIO_PARSE = 0x100,MMIO_DELETE = 0x200,MMIO_EXIST = 0x4000,MMIO_ALLOCBUF = 0x0,MMIO_GETTEMP = 0x0,MMIO_DIRTY = 0x0,MMIO_READ = 0x0,MMIO_WRITE = 0x1,MMIO_READWRITE = 0x2,MMIO_COMPAT = 0x0,MMIO_EXCLUSIVE = 0x10,MMIO_DENYWRITE = 0x20,MMIO_DENYREAD = 0x30,MMIO_DENYNONE = 0x40,MMIO_FHOPEN = 0x10,MMIO_EMPTYBUF = 0x10,MMIO_TOUPPER = 0x10,MMIO_INSTALLPROC = 0x0,MMIO_GLOBALPROC = 0x0,MMIO_REMOVEPROC = 0x0,MMIO_FINDPROC = 0x0,MMIO_FINDCHUNK = 0x10,MMIO_FINDRIFF = 0x20,MMIO_FINDLIST = 0x40,MMIO_CREATERIFF = 0x20,MMIO_CREATELIST = 0x40,};
enum MACRO_MMIOERR {MMIOERR_BASE = 256,MMIOERR_FILENOTFOUND = 257,MMIOERR_OUTOFMEMORY = 258,MMIOERR_CANNOTOPEN = 259,MMIOERR_CANNOTCLOSE = 260,MMIOERR_CANNOTREAD = 261,MMIOERR_CANNOTWRITE = 262,MMIOERR_CANNOTSEEK = 263,MMIOERR_CANNOTEXPAND = 264,MMIOERR_CHUNKNOTFOUND = 265,MMIOERR_UNBUFFERED = 266,};
enum MACRO_MMIOM {MMIOM_READ = 0,MMIOM_WRITE = 1,MMIOM_SEEK = 2,MMIOM_OPEN = 3,MMIOM_CLOSE = 4,MMIOM_WRITEFLUSH = 5,MMIOM_RENAME = 6,MMIOM_USER = -32768,};
enum MACRO_MMIO_DEFAULTBUFFER {MMIO_DEFAULTBUFFER = 8192,};
enum MACRO_MMSYSERR {MMSYSERR_NOERROR = 0,MMSYSERR_ERROR = 1,MMSYSERR_BADDEVICEID = 2,MMSYSERR_NOTENABLED = 3,MMSYSERR_ALLOCATED = 4,MMSYSERR_INVALHANDLE = 5,MMSYSERR_NODRIVER = 6,MMSYSERR_NOMEM = 7,MMSYSERR_NOTSUPPORTED = 8,MMSYSERR_BADERRNUM = 9,MMSYSERR_INVALFLAG = 10,MMSYSERR_INVALPARAM = 11,MMSYSERR_LASTERROR = 11,};
enum MACRO_MM_JOY1MOVE {MM_JOY1MOVE = 0x3A0,MM_JOY2MOVE = 0x3A1,MM_JOY1ZMOVE = 0x3A2,MM_JOY2ZMOVE = 0x3A3,MM_JOY1BUTTONDOWN = 0x3B5,MM_JOY2BUTTONDOWN = 0x3B6,MM_JOY1BUTTONUP = 0x3B7,MM_JOY2BUTTONUP = 0x3B8,MM_MCINOTIFY = 0x3B9,MM_WOM_OPEN = 0x3BB,MM_WOM_CLOSE = 0x3BC,MM_WOM_DONE = 0x3BD,MM_WIM_OPEN = 0x3BE,MM_WIM_CLOSE = 0x3BF,MM_WIM_DATA = 0x3C0,MM_MIM_OPEN = 0x3C1,MM_MIM_CLOSE = 0x3C2,MM_MIM_DATA = 0x3C3,MM_MIM_LONGDATA = 0x3C4,MM_MIM_ERROR = 0x3C5,MM_MIM_LONGERROR = 0x3C6,MM_MOM_OPEN = 0x3C7,MM_MOM_CLOSE = 0x3C8,MM_MOM_DONE = 0x3C9,};
enum MACRO_MM_MICROSOFT {MM_MICROSOFT = 1,MM_MIDI_MAPPER = 1,MM_WAVE_MAPPER = 2,MM_SNDBLST_MIDIOUT = 3,MM_SNDBLST_MIDIIN = 4,MM_SNDBLST_SYNTH = 5,MM_SNDBLST_WAVEOUT = 6,MM_SNDBLST_WAVEIN = 7,MM_ADLIB = 9,MM_MPU401_MIDIOUT = 10,MM_MPU401_MIDIIN = 11,MM_PC_JOYSTICK = 12,};
enum MACRO_MOD {MOD_MIDIPORT = 1,MOD_SYNTH = 2,MOD_SQSYNTH = 3,MOD_FMSYNTH = 4,MOD_MAPPER = 5,};
enum MACRO_MOM {MOM_OPEN = 967,MOM_CLOSE = 968,MOM_DONE = 969,};
enum MACRO_MONITOR {APPCLASS_MONITOR = 0x1,XTYP_MONITOR = 0x80F2,};
enum MACRO_MOUSETRAILS {MOUSETRAILS = 39,GETEXTENDEDTEXTMETRICS = 256,};
enum MACRO_MSG {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_MAXIOVLEN = 0x10,MSG_PARTIAL = 0x8000,};
enum MACRO_MSGF {MSGF_DIALOGBOX = 0,MSGF_MENU = 2,MSGF_MOVE = 3,MSGF_SIZE = 4,MSGF_SCROLLBAR = 5,MSGF_NEXTWINDOW = 6,MSGF_MAINLOOP = 8,MSGF_USER = 4096,};
enum MACRO_MSGF_DDEMGR {MSGF_DDEMGR = 0x8001,};
enum MACRO_MULTIFILEOPENORD {MULTIFILEOPENORD = 1537,};
enum MACRO_NEWFRAME {NEWFRAME = 1,};
enum MACRO_NEWTRANSPARENT {NEWTRANSPARENT = 3,QUERYROPSUPPORT = 40,};
enum MACRO_NEXTBAND {NEXTBAND = 3,SETCOLORTABLE = 4,};
enum MACRO_NF {NF_NORMAL = 0,NF_TASKSWITCH = 1,NF_RIP = 2,};
enum MACRO_NFY {NFY_UNKNOWN = 0,NFY_LOADSEG = 1,NFY_FREESEG = 2,NFY_STARTDLL = 3,NFY_STARTTASK = 4,NFY_EXITTASK = 5,NFY_DELMODULE = 6,NFY_RIP = 7,NFY_TASKIN = 8,NFY_TASKOUT = 9,NFY_INCHAR = 10,NFY_OUTSTR = 11,NFY_LOGERROR = 12,NFY_LOGPARAMERROR = 13,};
enum MACRO_NOERROR {NOERROR = 0,};
enum MACRO_NONZEROLHND {NONZEROLHND = 2,};
enum MACRO_NONZEROLPTR {NONZEROLPTR = 0,};
enum MACRO_NOPARITY {NOPARITY = 0,ODDPARITY = 1,EVENPARITY = 2,};
enum MACRO_NORM {NORM_IGNORECASE = 0x1,NORM_IGNORENONSPACE = 0x2,NORM_IGNORESYMBOLS = 0x4,NORM_IGNOREWIDTH = 0x8,NORM_IGNOREKANATYPE = 0x40,NORM_IGNOREJAPANACCENT = 0x80,NORM_IGNOREKASHIDA = 0x0,};
enum MACRO_NOTSRCCOPY {NOTSRCCOPY = 0x8,};
enum MACRO_NOTSRCERASE {NOTSRCERASE = 0xA6,};
enum MACRO_NOT_FOUND {WSAHOST_NOT_FOUND = 11001,HOST_NOT_FOUND = 11001,};
enum MACRO_NTM {NTM_REGULAR = 0x40,NTM_BOLD = 0x20,NTM_ITALIC = 0x1,};
enum MACRO_NUM {NUM_BASIC_COLORS = 48,NUM_CUSTOM_COLORS = 16,};
enum MACRO_NUMCOLORS {NUMCOLORS = 24,};
enum MACRO_NUMFONTS {NUMFONTS = 22,};
enum MACRO_NUMMARKERS {NUMMARKERS = 20,};
enum MACRO_NUMPENS {NUMPENS = 18,};
enum MACRO_NUMRESERVED {NUMRESERVED = 106,};
enum MACRO_OBJ {OBJ_PEN = 1,OBJ_BRUSH = 2,};
enum MACRO_OBM {OBM_SKBBTNUP = 32767,OBM_SKBBTNDOWN = 32766,OBM_SKBBTNDISABLED = 32765,};
enum MACRO_ODA {ODA_DRAWENTIRE = 0x1,ODA_SELECT = 0x2,ODA_FOCUS = 0x4,};
enum MACRO_ODBC {ODBC_ADD_DSN = 1,ODBC_CONFIG_DSN = 2,ODBC_REMOVE_DSN = 3,};
enum MACRO_ODBCVER {ODBCVER = 0x201,};
enum MACRO_ODS {ODS_SELECTED = 0x1,ODS_GRAYED = 0x2,ODS_DISABLED = 0x4,ODS_CHECKED = 0x8,ODS_FOCUS = 0x10,};
enum MACRO_ODT {ODT_MENU = 1,ODT_LISTBOX = 2,ODT_COMBOBOX = 3,ODT_BUTTON = 4,};
enum MACRO_OF {OF_READ = 0x0,OF_WRITE = 0x1,OF_READWRITE = 0x2,OF_SHARE_COMPAT = 0x0,OF_SHARE_EXCLUSIVE = 0x10,OF_SHARE_DENY_WRITE = 0x20,OF_SHARE_DENY_READ = 0x30,OF_SHARE_DENY_NONE = 0x40,OF_PARSE = 0x100,OF_DELETE = 0x200,OF_VERIFY = 0x400,OF_SEARCH = 0x400,OF_CANCEL = 0x800,OF_CREATE = 0x1000,OF_PROMPT = 0x2000,OF_EXIST = 0x4000,OF_REOPEN = 0x8000,};
enum MACRO_OFN {OFN_READONLY = 0x1,OFN_OVERWRITEPROMPT = 0x2,OFN_HIDEREADONLY = 0x4,OFN_NOCHANGEDIR = 0x8,OFN_SHOWHELP = 0x10,OFN_ENABLEHOOK = 0x20,OFN_ENABLETEMPLATE = 0x40,OFN_ENABLETEMPLATEHANDLE = 0x80,OFN_NOVALIDATE = 0x100,OFN_ALLOWMULTISELECT = 0x200,OFN_EXTENSIONDIFFERENT = 0x400,OFN_PATHMUSTEXIST = 0x800,OFN_FILEMUSTEXIST = 0x1000,OFN_CREATEPROMPT = 0x2000,OFN_SHAREAWARE = 0x4000,OFN_NOREADONLYRETURN = 0x8000,OFN_NOTESTFILECREATE = 0x0,OFN_SHAREFALLTHROUGH = 0x2,OFN_SHARENOWARN = 0x1,OFN_SHAREWARN = 0x0,};
enum MACRO_OLE {OLE_E_FIRST = 0x0,OLE_E_LAST = 0xFF,OLE_S_FIRST = 0x0,OLE_S_LAST = 0xFF,};
enum MACRO_OLEIVERB {OLEIVERB_PRIMARY = 0,OLEIVERB_SHOW = -1,OLEIVERB_OPEN = -2,OLEIVERB_HIDE = -3,OLEIVERB_UIACTIVATE = -4,OLEIVERB_INPLACEACTIVATE = -5,OLEIVERB_DISCARDUNDOSTATE = -6,};
enum MACRO_OLEOBJ {OLEOBJ_E_FIRST = 0x180,OLEOBJ_E_LAST = 0x18F,OLEOBJ_S_FIRST = 0x180,OLEOBJ_S_LAST = 0x18F,};
enum MACRO_OLEOBJ_E {OLEOBJ_E_NOVERBS = 384,OLEOBJ_E_INVALIDVERB = 385,OLEOBJ_S_INVALIDVERB = 384,OLEOBJ_S_CANNOT_DOVERB_NOW = 385,OLEOBJ_S_INVALIDHWND = 386,};
enum MACRO_OLESTDCANCELRETRY : __int64 {OLESTDCANCELRETRY = 4294967295,};
enum MACRO_OLESTDDROP {OLESTDDROP_NONE = 0,OLESTDDROP_DEFAULT = 1,OLESTDDROP_NONDEFAULT = 2,};
enum MACRO_OLESTDRETRYDELAY {OLESTDRETRYDELAY = 5000,};
enum MACRO_OLEUI {OLEUI_FALSE = 0,OLEUI_SUCCESS = 1,OLEUI_OK = 1,OLEUI_CANCEL = 2,OLEUI_ERR_STANDARDMIN = 100,OLEUI_ERR_STRUCTURENULL = 101,OLEUI_ERR_STRUCTUREINVALID = 102,OLEUI_ERR_CBSTRUCTINCORRECT = 103,OLEUI_ERR_HWNDOWNERINVALID = 104,OLEUI_ERR_LPSZCAPTIONINVALID = 105,OLEUI_ERR_LPFNHOOKINVALID = 106,OLEUI_ERR_HINSTANCEINVALID = 107,OLEUI_ERR_LPSZTEMPLATEINVALID = 108,OLEUI_ERR_HRESOURCEINVALID = 109,OLEUI_ERR_FINDTEMPLATEFAILURE = 110,OLEUI_ERR_LOADTEMPLATEFAILURE = 111,OLEUI_ERR_DIALOGFAILURE = 112,OLEUI_ERR_LOCALMEMALLOC = 113,OLEUI_ERR_GLOBALMEMALLOC = 114,OLEUI_ERR_LOADSTRING = 115,OLEUI_ERR_STANDARDMAX = 116,};
enum MACRO_OLEUI_BZERR {OLEUI_BZERR_HTASKINVALID = 116,OLEUI_BZ_SWITCHTOSELECTED = 117,OLEUI_BZ_RETRYSELECTED = 118,OLEUI_BZ_CALLUNBLOCKED = 119,};
enum MACRO_OLEUI_CCHKEYMAX {OLEUI_CCHKEYMAX = 256,OLEUI_CCHVERBMAX = 32,OLEUI_OBJECTMENUMAX = 256,OLEUI_CCHPATHMAX = 256,OLEUI_CCHFILEMAX = 13,OLEUI_CCHLABELMAX = 40,OLEUI_CCHCLSIDSTRING = 39,};
enum MACRO_OLEUI_CIERR {OLEUI_CIERR_MUSTHAVECLSID = 116,OLEUI_CIERR_MUSTHAVECURRENTMETAFILE = 117,OLEUI_CIERR_SZICONEXEINVALID = 118,};
enum MACRO_OLEUI_CTERR {OLEUI_CTERR_CLASSIDINVALID = 117,OLEUI_CTERR_DVASPECTINVALID = 118,OLEUI_CTERR_CBFORMATINVALID = 119,OLEUI_CTERR_HMETAPICTINVALID = 120,OLEUI_CTERR_STRINGINVALID = 121,};
enum MACRO_OLEUI_HANDLES {OLEUI_HANDLES_USEINVERSE = 0x1,OLEUI_HANDLES_NOBORDER = 0x2,OLEUI_HANDLES_INSIDE = 0x4,OLEUI_HANDLES_OUTSIDE = 0x8,OLEUI_SHADE_FULLRECT = 0x1,OLEUI_SHADE_BORDERIN = 0x2,OLEUI_SHADE_BORDEROUT = 0x3,};
enum MACRO_OLEUI_IOERR {OLEUI_IOERR_LPSZFILEINVALID = 116,OLEUI_IOERR_LPSZLABELINVALID = 117,OLEUI_IOERR_HICONINVALID = 118,OLEUI_IOERR_LPFORMATETCINVALID = 119,OLEUI_IOERR_PPVOBJINVALID = 120,OLEUI_IOERR_LPIOLECLIENTSITEINVALID = 121,OLEUI_IOERR_LPISTORAGEINVALID = 122,OLEUI_IOERR_SCODEHASERROR = 123,OLEUI_IOERR_LPCLSIDEXCLUDEINVALID = 124,OLEUI_IOERR_CCHFILEINVALID = 125,};
enum MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID {OLEUI_IOERR_SRCDATAOBJECTINVALID = 116,OLEUI_IOERR_ARRPASTEENTRIESINVALID = 117,OLEUI_IOERR_ARRLINKTYPESINVALID = 118,OLEUI_PSERR_CLIPBOARDCHANGED = 119,};
enum MACRO_OLEUI_VERSION {OLEUI_VERSION_MAGIC = 0x4D42,};
enum MACRO_OLE_E {OLE_E_OLEVERB = 0,OLE_E_ADVF = 1,OLE_E_ENUM_NOMORE = 2,OLE_E_ADVISENOTSUPPORTED = 3,OLE_E_NOCONNECTION = 4,OLE_E_NOTRUNNING = 5,OLE_E_NOCACHE = 6,OLE_E_BLANK = 7,OLE_E_CLASSDIFF = 8,OLE_E_CANT_GETMONIKER = 9,OLE_E_CANT_BINDTOSOURCE = 10,OLE_E_STATIC = 11,OLE_E_PROMPTSAVECANCELLED = 12,OLE_E_INVALIDRECT = 13,OLE_E_WRONGCOMPOBJ = 14,OLE_E_INVALIDHWND = 15,OLE_E_NOT_INPLACEACTIVE = 16,OLE_E_CANTCONVERT = 17,OLE_E_NOSTORAGE = 18,};
enum MACRO_OLE_S {OLE_S_USEREG = 0,OLE_S_STATIC = 1,OLE_S_MAC_CLIPFORMAT = 2,};
enum MACRO_ONESTOPBIT {ONESTOPBIT = 0,ONE5STOPBITS = 1,TWOSTOPBITS = 2,};
enum MACRO_OUT {OUT_DEFAULT_PRECIS = 0,OUT_STRING_PRECIS = 1,OUT_CHARACTER_PRECIS = 2,OUT_STROKE_PRECIS = 3,OUT_TT_PRECIS = 4,OUT_DEVICE_PRECIS = 5,OUT_RASTER_PRECIS = 6,OUT_TT_ONLY_PRECIS = 7,};
enum MACRO_PASSTHROUGH {PASSTHROUGH = 19,};
enum MACRO_PATCOPY {PATCOPY = 0x21,};
enum MACRO_PATH {BEGIN_PATH = 4096,CLIP_TO_PATH = 4097,END_PATH = 4098,};
enum MACRO_PATINVERT {PATINVERT = 0x49,};
enum MACRO_PATPAINT {PATPAINT = 0xA09,};
enum MACRO_PC {PC_NONE = 0x0,PC_POLYGON = 0x1,PC_RECTANGLE = 0x2,PC_WINDPOLYGON = 0x4,PC_SCANLINE = 0x8,PC_WIDE = 0x10,PC_STYLED = 0x20,PC_WIDESTYLED = 0x40,PC_INTERIORS = 0x80,};
enum MACRO_PCM {PCM_PENUP = 0x1,PCM_RANGE = 0x2,PCM_INVERT = 0x20,PCM_RECTEXCLUDE = 0x2000,PCM_RECTBOUND = 0x4000,PCM_TIMEOUT = 0x8000,PCM_ADDDEFAULTS = 0x0,};
enum MACRO_PC_RESERVED {PC_RESERVED = 0x1,PC_EXPLICIT = 0x2,PC_NOCOLLAPSE = 0x4,};
enum MACRO_PD {PD_ALLPAGES = 0x0,PD_SELECTION = 0x1,PD_PAGENUMS = 0x2,PD_NOSELECTION = 0x4,PD_NOPAGENUMS = 0x8,PD_COLLATE = 0x10,PD_PRINTTOFILE = 0x20,PD_PRINTSETUP = 0x40,PD_NOWARNING = 0x80,PD_RETURNDC = 0x100,PD_RETURNIC = 0x200,PD_RETURNDEFAULT = 0x400,PD_SHOWHELP = 0x800,PD_ENABLEPRINTHOOK = 0x1000,PD_ENABLESETUPHOOK = 0x2000,PD_ENABLEPRINTTEMPLATE = 0x4000,PD_ENABLESETUPTEMPLATE = 0x8000,PD_ENABLEPRINTTEMPLATEHANDLE = 0x0,PD_ENABLESETUPTEMPLATEHANDLE = 0x0,PD_USEDEVMODECOPIES = 0x0,PD_DISABLEPRINTTOFILE = 0x0,PD_HIDEPRINTTOFILE = 0x0,};
enum MACRO_PDC {PDC_INTEGRATED = 0x1,PDC_PROXIMITY = 0x2,PDC_RANGE = 0x4,PDC_INVERT = 0x8,PDC_RELATIVE = 0x10,PDC_BARREL1 = 0x20,PDC_BARREL2 = 0x40,PDC_BARREL3 = 0x80,};
enum MACRO_PDERR {PDERR_PRINTERCODES = 0x1000,PDERR_SETUPFAILURE = 0x1001,PDERR_PARSEFAILURE = 0x1002,PDERR_RETDEFFAILURE = 0x1003,PDERR_LOADDRVFAILURE = 0x1004,PDERR_GETDEVMODEFAIL = 0x1005,PDERR_INITFAILURE = 0x1006,PDERR_NODEVICES = 0x1007,PDERR_NODEFAULTPRN = 0x1008,PDERR_DNDMMISMATCH = 0x1009,PDERR_CREATEICFAILURE = 0x100A,PDERR_PRINTERNOTFOUND = 0x100B,PDERR_DEFAULTDIFFERENT = 0x100C,};
enum MACRO_PDEVICESIZE {PDEVICESIZE = 26,};
enum MACRO_PDK {PDK_UP = 0x0,PDK_DOWN = 0x1,PDK_BARREL1 = 0x2,PDK_BARREL2 = 0x4,PDK_BARREL3 = 0x8,PDK_TRANSITION = 0x10,PDK_INVERTED = 0x80,PDK_OUTOFRANGE = 0x4000,PDK_DRIVER = 0x8000,PDK_TIPMASK = 0x1,PDK_SWITCHES = 0xF,};
enum MACRO_PDT {PDT_NULL = 0,PDT_PRESSURE = 1,PDT_HEIGHT = 2,PDT_ANGLEXY = 3,PDT_ANGLEZ = 4,PDT_BARRELROTATION = 5,PDT_OEMSPECIFIC = 16,};
enum MACRO_PDTS {PDTS_LOMETRIC = 0x0,PDTS_HIMETRIC = 0x1,PDTS_HIENGLISH = 0x2,PDTS_SCALEMAX = 0x3,PDTS_DISPLAY = 0x3,PDTS_ARBITRARY = 0x4,PDTS_SCALEMASK = 0xF,PDTS_STANDARDSCALE = 0x2,PDTS_NOPENINFO = 0x100,PDTS_NOUPPOINTS = 0x200,PDTS_NOOEMDATA = 0x400,PDTS_NOCOLINEAR = 0x800,PDTS_COMPRESSED = 0x8000,PDTS_COMPRESSMETHOD = 0xF0,PDTS_COMPRESS2NDDERIV = 0x10,};
enum MACRO_PDTT {PDTT_DEFAULT = 0x0,PDTT_PENINFO = 0x100,PDTT_UPPOINTS = 0x200,PDTT_OEMDATA = 0x400,PDTT_COLINEAR = 0x800,PDTT_COMPRESS = 0x8000,PDTT_DECOMPRESS = 0x4000,PDTT_ALL = 0xF00,};
enum MACRO_PEN {WHITE_PEN = 6,BLACK_PEN = 7,NULL_PEN = 8,};
enum MACRO_PEN_NOINKWIDTH {PEN_NOINKWIDTH = 0,};
enum MACRO_PER_INCH {HIMETRIC_PER_INCH = 2540,PTS_PER_INCH = 72,};
enum MACRO_PF {PF_UNSPEC = 0,PF_UNIX = 1,PF_INET = 2,PF_IMPLINK = 3,PF_PUP = 4,PF_CHAOS = 5,PF_NS = 6,PF_IPX = 6,PF_ISO = 7,PF_OSI = 7,PF_ECMA = 8,PF_DATAKIT = 9,PF_CCITT = 10,PF_SNA = 11,PF_DECnet = 12,PF_DLI = 13,PF_LAT = 14,PF_HYLINK = 15,PF_APPLETALK = 16,PF_MAX = 18,};
enum MACRO_PITCH {DEFAULT_PITCH = 0x0,FIXED_PITCH = 0x1,VARIABLE_PITCH = 0x2,};
enum MACRO_PLANES {PLANES = 14,NUMBRUSHES = 16,};
enum MACRO_PM {PM_NOREMOVE = 0x0,PM_REMOVE = 0x1,PM_NOYIELD = 0x2,};
enum MACRO_POSTSCRIPT {POSTSCRIPT_DATA = 37,POSTSCRIPT_IGNORE = 38,};
enum MACRO_PR {PR_JOBSTATUS = 0x0,};
enum MACRO_PRINTDLGORD {PRINTDLGORD = 1538,};
enum MACRO_PRNSETUPDLGORD {PRNSETUPDLGORD = 1539,};
enum MACRO_PS {PS_SOLID = 0,PS_DASH = 1,PS_DOT = 2,PS_DASHDOT = 3,PS_DASHDOTDOT = 4,PS_NULL = 5,PS_INSIDEFRAME = 6,};
enum MACRO_PSF {PSF_SHOWHELP = 0x1,PSF_SELECTPASTE = 0x2,PSF_SELECTPASTELINK = 0x4,PSF_CHECKDISPLAYASICON = 0x8,PSF_DISABLEDISPLAYASICON = 0x10,};
enum MACRO_PS_MAXLINKTYPES {PS_MAXLINKTYPES = 8,};
enum MACRO_PWR {PWR_OK = 1,PWR_FAIL = -1,PWR_SUSPENDREQUEST = 1,PWR_SUSPENDRESUME = 2,PWR_CRITICALRESUME = 3,};
enum MACRO_QID {QID_SYNC = -1,};
enum MACRO_QS {QS_KEY = 0x1,QS_MOUSEMOVE = 0x2,QS_MOUSEBUTTON = 0x4,QS_MOUSE = 0x6,QS_POSTMESSAGE = 0x8,QS_TIMER = 0x10,QS_PAINT = 0x20,QS_SENDMESSAGE = 0x40,QS_ALLINPUT = 0x7F,};
enum MACRO_QUALITY {DEFAULT_QUALITY = 0,DRAFT_QUALITY = 1,PROOF_QUALITY = 2,};
enum MACRO_R2 {R2_BLACK = 1,R2_NOTMERGEPEN = 2,R2_MASKNOTPEN = 3,R2_NOTCOPYPEN = 4,R2_MASKPENNOT = 5,R2_NOT = 6,R2_XORPEN = 7,R2_NOTMASKPEN = 8,R2_MASKPEN = 9,R2_NOTXORPEN = 10,R2_NOP = 11,R2_MERGENOTPEN = 12,R2_COPYPEN = 13,R2_MERGEPENNOT = 14,R2_MERGEPEN = 15,R2_WHITE = 16,};
enum MACRO_RASTERCAPS {RASTERCAPS = 38,};
enum MACRO_RC {RC_BITBLT = 0x1,RC_BANDING = 0x2,RC_SCALING = 0x4,RC_BITMAP64 = 0x8,RC_GDI20_OUTPUT = 0x10,RC_GDI20_STATE = 0x20,RC_SAVEBITMAP = 0x40,RC_DI_BITMAP = 0x80,RC_PALETTE = 0x100,RC_DIBTODEV = 0x200,RC_BIGFONT = 0x400,RC_STRETCHBLT = 0x800,RC_FLOODFILL = 0x1000,RC_STRETCHDIB = 0x2000,RC_OP_DX_OUTPUT = 0x4000,RC_DEVBITS = 0x8000,};
enum MACRO_RCD {RCD_DEFAULT = 0,RCD_LR = 1,RCD_RL = 2,RCD_TB = 3,RCD_BT = 4,};
enum MACRO_RCIP {RCIP_ALLANSICHAR = 0x1,RCIP_MASK = 0x1,};
enum MACRO_RCO {RCO_NOPOINTEREVENT = 0x1,RCO_SAVEALLDATA = 0x2,RCO_SAVEHPENDATA = 0x4,RCO_NOFLASHUNKNOWN = 0x8,RCO_TABLETCOORD = 0x10,RCO_NOSPACEBREAK = 0x20,RCO_NOHIDECURSOR = 0x40,RCO_NOHOOK = 0x80,RCO_BOXED = 0x100,RCO_SUGGEST = 0x200,RCO_DISABLEGESMAP = 0x400,RCO_NOFLASHCURSOR = 0x800,RCO_COLDRECOG = 0x8000,};
enum MACRO_RCOR {RCOR_NORMAL = 1,RCOR_RIGHT = 2,RCOR_UPSIDEDOWN = 3,RCOR_LEFT = 4,};
enum MACRO_RCP {RCP_LEFTHAND = 0x1,RCP_MAPCHAR = 0x4,};
enum MACRO_RCRT {RCRT_DEFAULT = 0x0,RCRT_UNIDENTIFIED = 0x1,RCRT_GESTURE = 0x2,RCRT_NOSYMBOLMATCH = 0x4,RCRT_PRIVATE = 0x4000,RCRT_NORECOG = 0x8000,RCRT_ALREADYPROCESSED = 0x8,RCRT_GESTURETRANSLATED = 0x10,RCRT_GESTURETOKEYS = 0x20,};
enum MACRO_RC_WDEFAULT {RC_WDEFAULT = 0xFFFF,RC_LDEFAULT = 0xFFFF,RC_WDEFAULTFLAGS = 0x8000,RC_LDEFAULTFLAGS = 0x0,};
enum MACRO_RDW {RDW_INVALIDATE = 0x1,RDW_INTERNALPAINT = 0x2,RDW_ERASE = 0x4,RDW_VALIDATE = 0x8,RDW_NOINTERNALPAINT = 0x10,RDW_NOERASE = 0x20,RDW_NOCHILDREN = 0x40,RDW_ALLCHILDREN = 0x80,RDW_UPDATENOW = 0x100,RDW_ERASENOW = 0x200,RDW_FRAME = 0x400,RDW_NOFRAME = 0x800,};
enum MACRO_READ {READ = 0,WRITE = 1,};
enum MACRO_READ_WRITE {READ_WRITE = 2,};
enum MACRO_REC {REC_OEM = -1024,REC_LANGUAGE = -48,REC_GUIDE = -47,REC_PARAMERROR = -46,REC_INVALIDREF = -45,REC_RECTEXCLUDE = -44,REC_RECTBOUND = -43,REC_PCM = -42,REC_RESULTMODE = -41,REC_HWND = -40,REC_ALC = -39,REC_ERRORLEVEL = -38,REC_CLVERIFY = -37,REC_DICT = -36,REC_HREC = -35,REC_BADEVENTREF = -33,REC_NOCOLLECTION = -32,REC_DEBUG = -32,REC_POINTEREVENT = -31,REC_BADHPENDATA = -9,REC_OOM = -8,REC_NOINPUT = -7,REC_NOTABLET = -6,REC_BUSY = -5,REC_BUFFERTOOSMALL = -4,REC_ABORT = -3,REC_OVERFLOW = -1,REC_OK = 0,REC_TERMBOUND = 1,REC_TERMEX = 2,REC_TERMPENUP = 3,REC_TERMRANGE = 4,REC_TERMTIMEOUT = 5,REC_DONE = 6,REC_TERMOEM = 512,};
enum MACRO_RECOVERY {WSANO_RECOVERY = 11003,NO_RECOVERY = 11003,};
enum MACRO_REG {REG_SZ = 1,};
enum MACRO_REGDB {REGDB_E_FIRST = 0x150,REGDB_E_LAST = 0x15F,REGDB_S_FIRST = 0x150,REGDB_S_LAST = 0x15F,};
enum MACRO_REGDB_E {REGDB_E_READREGDB = 0x150,REGDB_E_WRITEREGDB = 0x151,REGDB_E_KEYMISSING = 0x152,REGDB_E_INVALIDVALUE = 0x153,REGDB_E_CLASSNOTREG = 0x154,REGDB_E_IIDNOTREG = 0x155,};
enum MACRO_REPLACEDLGORD {REPLACEDLGORD = 1541,};
enum MACRO_RESETDEV {RESETDEV = 7,LPTx = 128,};
enum MACRO_RGN {RGN_AND = 1,RGN_OR = 2,RGN_XOR = 3,RGN_DIFF = 4,RGN_COPY = 5,};
enum MACRO_ROTFLAGS {ROTFLAGS_REGISTRATIONKEEPSALIVE = 1,};
enum MACRO_RPA {RPA_DEFAULT = 1,};
enum MACRO_RPC {RPC_E_FIRST = 0x0,RPC_E_CALL_REJECTED = 0x1,RPC_E_CALL_CANCELED = 0x2,RPC_E_CANTPOST_INSENDCALL = 0x3,RPC_E_CANTCALLOUT_INASYNCCALL = 0x4,RPC_E_CANTCALLOUT_INEXTERNALCALL = 0x5,RPC_E_CONNECTION_TERMINATED = 0x6,RPC_E_SERVER_DIED = 0x7,RPC_E_CLIENT_DIED = 0x8,RPC_E_INVALID_DATAPACKET = 0x9,RPC_E_CANTTRANSMIT_CALL = 0xA,RPC_E_CLIENT_CANTMARSHAL_DATA = 0xB,RPC_E_CLIENT_CANTUNMARSHAL_DATA = 0xC,RPC_E_SERVER_CANTMARSHAL_DATA = 0xD,RPC_E_SERVER_CANTUNMARSHAL_DATA = 0xE,RPC_E_INVALID_DATA = 0xF,RPC_E_INVALID_PARAMETER = 0x10,RPC_E_CANTCALLOUT_AGAIN = 0x11,RPC_E_UNEXPECTED = 0xFFFF,};
enum MACRO_RRM {RRM_STROKE = 0,RRM_SYMBOL = 1,RRM_WORD = 2,RRM_NEWLINE = 3,RRM_COMPLETE = 16,};
enum MACRO_S {S_PERIOD512 = 0,S_PERIOD1024 = 1,S_PERIOD2048 = 2,S_PERIODVOICE = 3,S_WHITE512 = 4,S_WHITE1024 = 5,S_WHITE2048 = 6,S_WHITEVOICE = 7,S_QUEUEEMPTY = 0,S_THRESHOLD = 1,S_ALLTHRESHOLD = 2,S_NORMAL = 0,S_LEGATO = 1,S_STACCATO = 2,S_SERDVNA = -1,S_SEROFM = -2,S_SERMACT = -3,S_SERQFUL = -4,S_SERBDNT = -5,S_SERDLN = -6,S_SERDCC = -7,S_SERDTP = -8,S_SERDVL = -9,S_SERDMD = -10,S_SERDSH = -11,S_SERDPT = -12,S_SERDFQ = -13,S_SERDDR = -14,S_SERDSR = -15,S_SERDST = -16,};
enum MACRO_SB {SB_LINEUP = 0,SB_LINELEFT = 0,SB_LINEDOWN = 1,SB_LINERIGHT = 1,SB_PAGEUP = 2,SB_PAGELEFT = 2,SB_PAGEDOWN = 3,SB_PAGERIGHT = 3,SB_THUMBPOSITION = 4,SB_THUMBTRACK = 5,SB_TOP = 6,SB_LEFT = 6,SB_BOTTOM = 7,SB_RIGHT = 7,SB_ENDSCROLL = 8,SB_HORZ = 0,SB_VERT = 1,SB_CTL = 2,SB_BOTH = 3,};
enum MACRO_SBS {SBS_HORZ = 0x0,SBS_VERT = 0x1,SBS_TOPALIGN = 0x2,SBS_LEFTALIGN = 0x2,SBS_BOTTOMALIGN = 0x4,SBS_RIGHTALIGN = 0x4,SBS_SIZEBOXTOPLEFTALIGN = 0x2,SBS_SIZEBOXBOTTOMRIGHTALIGN = 0x4,SBS_SIZEBOX = 0x8,};
enum MACRO_SC {SC_SIZE = 0xF000,SC_MOVE = 0xF010,SC_MINIMIZE = 0xF020,SC_MAXIMIZE = 0xF030,SC_NEXTWINDOW = 0xF040,SC_PREVWINDOW = 0xF050,SC_CLOSE = 0xF060,SC_VSCROLL = 0xF070,SC_HSCROLL = 0xF080,SC_MOUSEMENU = 0xF090,SC_KEYMENU = 0xF100,SC_ARRANGE = 0xF110,SC_RESTORE = 0xF120,SC_TASKLIST = 0xF130,SC_SCREENSAVE = 0xF140,SC_HOTKEY = 0xF150,SC_ICON = 0xF020,SC_ZOOM = 0xF030,};
enum MACRO_SDS {SDS_MENU = 0x1,SDS_SYSMODAL = 0x2,SDS_NOTASKQUEUE = 0x4,SDS_DIALOG = 0x8,SDS_TASKLOCKED = 0x10,};
enum MACRO_SE {SE_ERR_SHARE = 26,SE_ERR_ASSOCINCOMPLETE = 27,SE_ERR_DDETIMEOUT = 28,SE_ERR_DDEFAIL = 29,SE_ERR_DDEBUSY = 30,SE_ERR_NOASSOC = 31,};
enum MACRO_SELECTDIB {SELECTDIB = 41,};
enum MACRO_SELECTPAPERSOURCE {SELECTPAPERSOURCE = 18,};
enum MACRO_SEM {SEM_FAILCRITICALERRORS = 0x1,SEM_NOGPFAULTERRORBOX = 0x2,SEM_NOOPENFILEERRORBOX = 0x8000,};
enum MACRO_SET {SET_ARC_DIRECTION = 4102,SET_BACKGROUND_COLOR = 4103,SET_POLY_MODE = 4104,SET_SCREEN_ANGLE = 4105,SET_SPREAD = 4106,};
enum MACRO_SETALLJUSTVALUES {SETALLJUSTVALUES = 771,};
enum MACRO_SETCHARSET {SETCHARSET = 772,GETSETSCREENPARAMS = 3072,};
enum MACRO_SETCOPYCOUNT {SETCOPYCOUNT = 17,};
enum MACRO_SETDTR {SETDTR = 5,};
enum MACRO_SETKERNTRACK {SETKERNTRACK = 770,};
enum MACRO_SETLINECAP {SETLINECAP = 21,};
enum MACRO_SETLINEJOIN {SETLINEJOIN = 22,};
enum MACRO_SETMITERLIMIT {SETMITERLIMIT = 23,};
enum MACRO_SETRTS {SETRTS = 3,CLRRTS = 4,};
enum MACRO_SETXOFF {SETXOFF = 1,SETXON = 2,};
enum MACRO_SET_CLIP {SET_CLIP_BOX = 4108,SET_BOUNDS = 4109,};
enum MACRO_SEVERITY {SEVERITY_SUCCESS = 0,SEVERITY_ERROR = 1,};
enum MACRO_SGRC {SGRC_OK = 0x0,SGRC_USER = 0x1,SGRC_PARAMERROR = 0x2,SGRC_RC = 0x4,SGRC_RECOGNIZER = 0x8,SGRC_DICTIONARY = 0x10,SGRC_INIFILE = 0x20,};
enum MACRO_SHOW {SHOW_OPENWINDOW = 1,SHOW_ICONWINDOW = 2,SHOW_FULLSCREEN = 3,SHOW_OPENNOACTIVATE = 4,};
enum MACRO_SIMULATED {SIMULATED_FONTTYPE = 0x8000,PRINTER_FONTTYPE = 0x4000,SCREEN_FONTTYPE = 0x2000,BOLD_FONTTYPE = 0x100,ITALIC_FONTTYPE = 0x200,REGULAR_FONTTYPE = 0x400,};
enum MACRO_SIZE {SIZE_RESTORED = 0,SIZE_MINIMIZED = 1,SIZE_MAXIMIZED = 2,SIZE_MAXSHOW = 3,SIZE_MAXHIDE = 4,};
enum MACRO_SIZENORMAL {SIZENORMAL = 0,SIZEICONIC = 1,SIZEFULLSCREEN = 2,};
enum MACRO_SIZEPALETTE {SIZEPALETTE = 104,};
enum MACRO_SIZEZOOMSHOW {SIZEZOOMSHOW = 3,SIZEZOOMHIDE = 4,};
enum MACRO_SKB {SKB_QUERY = 0x0,SKB_SHOW = 0x1,SKB_HIDE = 0x2,SKB_CENTER = 0x10,SKB_MOVE = 0x20,SKB_MINIMIZE = 0x40,SKB_FULL = 0x100,SKB_BASIC = 0x200,SKB_NUMPAD = 0x400,};
enum MACRO_SKN {SKN_CHANGED = 1,SKN_POSCHANGED = 1,SKN_PADCHANGED = 2,SKN_MINCHANGED = 4,SKN_VISCHANGED = 8,SKN_TERMINATED = -1,};
enum MACRO_SM {SM_CXSCREEN = 0,SM_CYSCREEN = 1,SM_CXVSCROLL = 2,SM_CYHSCROLL = 3,SM_CYCAPTION = 4,SM_CXBORDER = 5,SM_CYBORDER = 6,SM_CXDLGFRAME = 7,SM_CYDLGFRAME = 8,SM_CYVTHUMB = 9,SM_CXHTHUMB = 10,SM_CXICON = 11,SM_CYICON = 12,SM_CXCURSOR = 13,SM_CYCURSOR = 14,SM_CYMENU = 15,SM_CXFULLSCREEN = 16,SM_CYFULLSCREEN = 17,SM_CYKANJIWINDOW = 18,SM_MOUSEPRESENT = 19,SM_CYVSCROLL = 20,SM_CXHSCROLL = 21,SM_DEBUG = 22,SM_SWAPBUTTON = 23,SM_RESERVED1 = 24,SM_RESERVED2 = 25,SM_RESERVED3 = 26,SM_RESERVED4 = 27,SM_CXMIN = 28,SM_CYMIN = 29,SM_CXSIZE = 30,SM_CYSIZE = 31,SM_CXFRAME = 32,SM_CYFRAME = 33,SM_CXMINTRACK = 34,SM_CYMINTRACK = 35,SM_CXDOUBLECLK = 36,SM_CYDOUBLECLK = 37,SM_CXICONSPACING = 38,SM_CYICONSPACING = 39,SM_MENUDROPALIGNMENT = 40,SM_PENWINDOWS = 41,SM_DBCSENABLED = 42,SM_CMETRICS = 43,};
enum MACRO_SND {SND_SYNC = 0x0,SND_ASYNC = 0x1,SND_NODEFAULT = 0x2,SND_MEMORY = 0x4,SND_LOOP = 0x8,SND_NOSTOP = 0x10,};
enum MACRO_SO {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_DONTLINGER = 0xFF7F,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_CONNDATA = 0x7000,SO_CONNOPT = 0x7001,SO_DISCDATA = 0x7002,SO_DISCOPT = 0x7003,SO_CONNDATALEN = 0x7004,SO_CONNOPTLEN = 0x7005,SO_DISCDATALEN = 0x7006,SO_DISCOPTLEN = 0x7007,SO_OPENTYPE = 0x7008,SO_SYNCHRONOUS_ALERT = 0x10,SO_SYNCHRONOUS_NONALERT = 0x20,SO_MAXDG = 0x7009,SO_MAXPATHDG = 0x700A,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SOCKET {SOCKET_ERROR = -1,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_SOMAXCONN {SOMAXCONN = 5,};
enum MACRO_SP {SP_NOTREPORTED = 0x4000,SP_ERROR = 0xFFFF,SP_APPABORT = 0xFFFE,SP_USERABORT = 0xFFFD,SP_OUTOFDISK = 0xFFFC,SP_OUTOFMEMORY = 0xFFFB,};
enum MACRO_SPI {SPI_GETBEEP = 1,SPI_SETBEEP = 2,SPI_GETMOUSE = 3,SPI_SETMOUSE = 4,SPI_GETBORDER = 5,SPI_SETBORDER = 6,SPI_GETKEYBOARDSPEED = 10,SPI_SETKEYBOARDSPEED = 11,SPI_LANGDRIVER = 12,SPI_ICONHORIZONTALSPACING = 13,SPI_GETSCREENSAVETIMEOUT = 14,SPI_SETSCREENSAVETIMEOUT = 15,SPI_GETSCREENSAVEACTIVE = 16,SPI_SETSCREENSAVEACTIVE = 17,SPI_GETGRIDGRANULARITY = 18,SPI_SETGRIDGRANULARITY = 19,SPI_SETDESKWALLPAPER = 20,SPI_SETDESKPATTERN = 21,SPI_GETKEYBOARDDELAY = 22,SPI_SETKEYBOARDDELAY = 23,SPI_ICONVERTICALSPACING = 24,SPI_GETICONTITLEWRAP = 25,SPI_SETICONTITLEWRAP = 26,SPI_GETMENUDROPALIGNMENT = 27,SPI_SETMENUDROPALIGNMENT = 28,SPI_SETDOUBLECLKWIDTH = 29,SPI_SETDOUBLECLKHEIGHT = 30,SPI_GETICONTITLELOGFONT = 31,SPI_SETDOUBLECLICKTIME = 32,SPI_SETMOUSEBUTTONSWAP = 33,SPI_SETICONTITLELOGFONT = 34,SPI_GETFASTTASKSWITCH = 35,SPI_SETFASTTASKSWITCH = 36,};
enum MACRO_SPIF {SPIF_UPDATEINIFILE = 0x1,SPIF_SENDWININICHANGE = 0x2,};
enum MACRO_SQL {SQL_SPEC_MAJOR = 2,SQL_SPEC_MINOR = 1,SQL_SQLSTATE_SIZE = 5,SQL_MAX_MESSAGE_LENGTH = 512,SQL_MAX_DSN_LENGTH = 32,SQL_INVALID_HANDLE = -2,SQL_ERROR = -1,SQL_SUCCESS = 0,SQL_SUCCESS_WITH_INFO = 1,SQL_NO_DATA_FOUND = 100,SQL_CHAR = 1,SQL_NUMERIC = 2,SQL_DECIMAL = 3,SQL_INTEGER = 4,SQL_SMALLINT = 5,SQL_FLOAT = 6,SQL_REAL = 7,SQL_DOUBLE = 8,SQL_VARCHAR = 12,SQL_TYPE_NULL = 0,SQL_TYPE_MAX = 12,SQL_C_CHAR = 1,SQL_C_LONG = 4,SQL_C_SHORT = 5,SQL_C_FLOAT = 7,SQL_C_DOUBLE = 8,SQL_C_DEFAULT = 99,SQL_NO_NULLS = 0,SQL_NULLABLE = 1,SQL_NULLABLE_UNKNOWN = 2,SQL_NULL_DATA = -1,SQL_DATA_AT_EXEC = -2,SQL_NTS = -3,SQL_CLOSE = 0,SQL_DROP = 1,SQL_UNBIND = 2,SQL_RESET_PARAMS = 3,SQL_COMMIT = 0,SQL_ROLLBACK = 1,SQL_COLUMN_COUNT = 0,SQL_COLUMN_NAME = 1,SQL_COLUMN_TYPE = 2,SQL_COLUMN_LENGTH = 3,SQL_COLUMN_PRECISION = 4,SQL_COLUMN_SCALE = 5,SQL_COLUMN_DISPLAY_SIZE = 6,SQL_COLUMN_NULLABLE = 7,SQL_COLUMN_UNSIGNED = 8,SQL_COLUMN_MONEY = 9,SQL_COLUMN_UPDATABLE = 10,SQL_COLUMN_AUTO_INCREMENT = 11,SQL_COLUMN_CASE_SENSITIVE = 12,SQL_COLUMN_SEARCHABLE = 13,SQL_COLUMN_TYPE_NAME = 14,SQL_COLUMN_TABLE_NAME = 15,SQL_COLUMN_OWNER_NAME = 16,SQL_COLUMN_QUALIFIER_NAME = 17,SQL_COLUMN_LABEL = 18,SQL_COLATT_OPT_MAX = 18,SQL_COLUMN_DRIVER_START = 1000,SQL_COLATT_OPT_MIN = 0,SQL_ATTR_READONLY = 0,SQL_ATTR_WRITE = 1,SQL_ATTR_READWRITE_UNKNOWN = 2,SQL_UNSEARCHABLE = 0,SQL_LIKE_ONLY = 1,SQL_ALL_EXCEPT_LIKE = 2,SQL_SEARCHABLE = 3,SQL_NULL_HENV = 0,SQL_NULL_HDBC = 0,SQL_NULL_HSTMT = 0,SQL_MAX_OPTION_STRING_LENGTH = 256,SQL_STILL_EXECUTING = 2,SQL_NEED_DATA = 99,SQL_DATE = 9,SQL_TIME = 10,SQL_TIMESTAMP = 11,SQL_LONGVARCHAR = -1,SQL_BINARY = -2,SQL_VARBINARY = -3,SQL_LONGVARBINARY = -4,SQL_BIGINT = -5,SQL_TINYINT = -6,SQL_BIT = -7,SQL_TYPE_DRIVER_START = -80,SQL_SIGNED_OFFSET = -20,SQL_UNSIGNED_OFFSET = -22,SQL_C_DATE = 9,SQL_C_TIME = 10,SQL_C_TIMESTAMP = 11,SQL_C_BINARY = -2,SQL_C_BIT = -7,SQL_C_TINYINT = -6,SQL_C_SLONG = -16,SQL_C_SSHORT = -15,SQL_C_STINYINT = -26,SQL_C_ULONG = -18,SQL_C_USHORT = -17,SQL_C_UTINYINT = -28,SQL_C_BOOKMARK = -18,SQL_TYPE_MIN = -7,SQL_ALL_TYPES = 0,SQL_DRIVER_NOPROMPT = 0,SQL_DRIVER_COMPLETE = 1,SQL_DRIVER_PROMPT = 2,SQL_DRIVER_COMPLETE_REQUIRED = 3,SQL_NO_TOTAL = -4,SQL_DEFAULT_PARAM = -5,SQL_IGNORE = -6,SQL_LEN_DATA_AT_EXEC_OFFSET = -100,SQL_API_SQLALLOCCONNECT = 1,SQL_API_SQLALLOCENV = 2,SQL_API_SQLALLOCSTMT = 3,SQL_API_SQLBINDCOL = 4,SQL_API_SQLCANCEL = 5,SQL_API_SQLCOLATTRIBUTES = 6,SQL_API_SQLCONNECT = 7,SQL_API_SQLDESCRIBECOL = 8,SQL_API_SQLDISCONNECT = 9,SQL_API_SQLERROR = 10,SQL_API_SQLEXECDIRECT = 11,SQL_API_SQLEXECUTE = 12,SQL_API_SQLFETCH = 13,SQL_API_SQLFREECONNECT = 14,SQL_API_SQLFREEENV = 15,SQL_API_SQLFREESTMT = 16,SQL_API_SQLGETCURSORNAME = 17,SQL_API_SQLNUMRESULTCOLS = 18,SQL_API_SQLPREPARE = 19,SQL_API_SQLROWCOUNT = 20,SQL_API_SQLSETCURSORNAME = 21,SQL_API_SQLSETPARAM = 22,SQL_API_SQLTRANSACT = 23,SQL_NUM_FUNCTIONS = 23,SQL_EXT_API_START = 40,SQL_API_SQLCOLUMNS = 40,SQL_API_SQLDRIVERCONNECT = 41,SQL_API_SQLGETCONNECTOPTION = 42,SQL_API_SQLGETDATA = 43,SQL_API_SQLGETFUNCTIONS = 44,SQL_API_SQLGETINFO = 45,SQL_API_SQLGETSTMTOPTION = 46,SQL_API_SQLGETTYPEINFO = 47,SQL_API_SQLPARAMDATA = 48,SQL_API_SQLPUTDATA = 49,SQL_API_SQLSETCONNECTOPTION = 50,SQL_API_SQLSETSTMTOPTION = 51,SQL_API_SQLSPECIALCOLUMNS = 52,SQL_API_SQLSTATISTICS = 53,SQL_API_SQLTABLES = 54,SQL_API_SQLBROWSECONNECT = 55,SQL_API_SQLCOLUMNPRIVILEGES = 56,SQL_API_SQLDATASOURCES = 57,SQL_API_SQLDESCRIBEPARAM = 58,SQL_API_SQLEXTENDEDFETCH = 59,SQL_API_SQLFOREIGNKEYS = 60,SQL_API_SQLMORERESULTS = 61,SQL_API_SQLNATIVESQL = 62,SQL_API_SQLNUMPARAMS = 63,SQL_API_SQLPARAMOPTIONS = 64,SQL_API_SQLPRIMARYKEYS = 65,SQL_API_SQLPROCEDURECOLUMNS = 66,SQL_API_SQLPROCEDURES = 67,SQL_API_SQLSETPOS = 68,SQL_API_SQLSETSCROLLOPTIONS = 69,SQL_API_SQLTABLEPRIVILEGES = 70,SQL_API_SQLDRIVERS = 71,SQL_API_SQLBINDPARAMETER = 72,SQL_EXT_API_LAST = 72,SQL_API_ALL_FUNCTIONS = 0,SQL_NUM_EXTENSIONS = 33,SQL_API_LOADBYORDINAL = 199,SQL_INFO_FIRST = 0,SQL_ACTIVE_CONNECTIONS = 0,SQL_ACTIVE_STATEMENTS = 1,SQL_DATA_SOURCE_NAME = 2,SQL_DRIVER_HDBC = 3,SQL_DRIVER_HENV = 4,SQL_DRIVER_HSTMT = 5,SQL_DRIVER_NAME = 6,SQL_DRIVER_VER = 7,SQL_FETCH_DIRECTION = 8,SQL_ODBC_API_CONFORMANCE = 9,SQL_ODBC_VER = 10,SQL_ROW_UPDATES = 11,SQL_ODBC_SAG_CLI_CONFORMANCE = 12,SQL_SERVER_NAME = 13,SQL_SEARCH_PATTERN_ESCAPE = 14,SQL_ODBC_SQL_CONFORMANCE = 15,SQL_DBMS_NAME = 17,SQL_DBMS_VER = 18,SQL_ACCESSIBLE_TABLES = 19,SQL_ACCESSIBLE_PROCEDURES = 20,SQL_PROCEDURES = 21,SQL_CONCAT_NULL_BEHAVIOR = 22,SQL_CURSOR_COMMIT_BEHAVIOR = 23,SQL_CURSOR_ROLLBACK_BEHAVIOR = 24,SQL_DATA_SOURCE_READ_ONLY = 25,SQL_DEFAULT_TXN_ISOLATION = 26,SQL_EXPRESSIONS_IN_ORDERBY = 27,SQL_IDENTIFIER_CASE = 28,SQL_IDENTIFIER_QUOTE_CHAR = 29,SQL_MAX_COLUMN_NAME_LEN = 30,SQL_MAX_CURSOR_NAME_LEN = 31,SQL_MAX_OWNER_NAME_LEN = 32,SQL_MAX_PROCEDURE_NAME_LEN = 33,SQL_MAX_QUALIFIER_NAME_LEN = 34,SQL_MAX_TABLE_NAME_LEN = 35,SQL_MULT_RESULT_SETS = 36,SQL_MULTIPLE_ACTIVE_TXN = 37,SQL_OUTER_JOINS = 38,SQL_OWNER_TERM = 39,SQL_PROCEDURE_TERM = 40,SQL_QUALIFIER_NAME_SEPARATOR = 41,SQL_QUALIFIER_TERM = 42,SQL_SCROLL_CONCURRENCY = 43,SQL_SCROLL_OPTIONS = 44,SQL_TABLE_TERM = 45,SQL_TXN_CAPABLE = 46,SQL_USER_NAME = 47,SQL_CONVERT_FUNCTIONS = 48,SQL_NUMERIC_FUNCTIONS = 49,SQL_STRING_FUNCTIONS = 50,SQL_SYSTEM_FUNCTIONS = 51,SQL_TIMEDATE_FUNCTIONS = 52,SQL_CONVERT_BIGINT = 53,SQL_CONVERT_BINARY = 54,SQL_CONVERT_BIT = 55,SQL_CONVERT_CHAR = 56,SQL_CONVERT_DATE = 57,SQL_CONVERT_DECIMAL = 58,SQL_CONVERT_DOUBLE = 59,SQL_CONVERT_FLOAT = 60,SQL_CONVERT_INTEGER = 61,SQL_CONVERT_LONGVARCHAR = 62,SQL_CONVERT_NUMERIC = 63,SQL_CONVERT_REAL = 64,SQL_CONVERT_SMALLINT = 65,SQL_CONVERT_TIME = 66,SQL_CONVERT_TIMESTAMP = 67,SQL_CONVERT_TINYINT = 68,SQL_CONVERT_VARBINARY = 69,SQL_CONVERT_VARCHAR = 70,SQL_CONVERT_LONGVARBINARY = 71,SQL_TXN_ISOLATION_OPTION = 72,SQL_ODBC_SQL_OPT_IEF = 73,SQL_CORRELATION_NAME = 74,SQL_NON_NULLABLE_COLUMNS = 75,SQL_DRIVER_HLIB = 76,SQL_DRIVER_ODBC_VER = 77,SQL_LOCK_TYPES = 78,SQL_POS_OPERATIONS = 79,SQL_POSITIONED_STATEMENTS = 80,SQL_GETDATA_EXTENSIONS = 81,SQL_BOOKMARK_PERSISTENCE = 82,SQL_STATIC_SENSITIVITY = 83,SQL_FILE_USAGE = 84,SQL_NULL_COLLATION = 85,SQL_ALTER_TABLE = 86,SQL_COLUMN_ALIAS = 87,SQL_GROUP_BY = 88,SQL_KEYWORDS = 89,SQL_ORDER_BY_COLUMNS_IN_SELECT = 90,SQL_OWNER_USAGE = 91,SQL_QUALIFIER_USAGE = 92,SQL_QUOTED_IDENTIFIER_CASE = 93,SQL_SPECIAL_CHARACTERS = 94,SQL_SUBQUERIES = 95,SQL_UNION = 96,SQL_MAX_COLUMNS_IN_GROUP_BY = 97,SQL_MAX_COLUMNS_IN_INDEX = 98,SQL_MAX_COLUMNS_IN_ORDER_BY = 99,SQL_MAX_COLUMNS_IN_SELECT = 100,SQL_MAX_COLUMNS_IN_TABLE = 101,SQL_MAX_INDEX_SIZE = 102,SQL_MAX_ROW_SIZE_INCLUDES_LONG = 103,SQL_MAX_ROW_SIZE = 104,SQL_MAX_STATEMENT_LEN = 105,SQL_MAX_TABLES_IN_SELECT = 106,SQL_MAX_USER_NAME_LEN = 107,SQL_MAX_CHAR_LITERAL_LEN = 108,SQL_TIMEDATE_ADD_INTERVALS = 109,SQL_TIMEDATE_DIFF_INTERVALS = 110,SQL_NEED_LONG_DATA_LEN = 111,SQL_MAX_BINARY_LITERAL_LEN = 112,SQL_LIKE_ESCAPE_CLAUSE = 113,SQL_QUALIFIER_LOCATION = 114,SQL_OJ_CAPABILITIES = -534,SQL_INFO_LAST = 114,SQL_INFO_DRIVER_START = 1000,SQL_CVT_CHAR = 1,SQL_CVT_NUMERIC = 2,SQL_CVT_DECIMAL = 4,SQL_CVT_INTEGER = 8,SQL_CVT_SMALLINT = 16,SQL_CVT_FLOAT = 32,SQL_CVT_REAL = 64,SQL_CVT_DOUBLE = 128,SQL_CVT_VARCHAR = 256,SQL_CVT_LONGVARCHAR = 512,SQL_CVT_BINARY = 1024,SQL_CVT_VARBINARY = 2048,SQL_CVT_BIT = 4096,SQL_CVT_TINYINT = 8192,SQL_CVT_BIGINT = 16384,SQL_CVT_DATE = -32768,SQL_CVT_TIME = 0,SQL_CVT_TIMESTAMP = 0,SQL_CVT_LONGVARBINARY = 0,SQL_FN_CVT_CONVERT = 1,SQL_FN_STR_CONCAT = 1,SQL_FN_STR_INSERT = 2,SQL_FN_STR_LEFT = 4,SQL_FN_STR_LTRIM = 8,SQL_FN_STR_LENGTH = 16,SQL_FN_STR_LOCATE = 32,SQL_FN_STR_LCASE = 64,SQL_FN_STR_REPEAT = 128,SQL_FN_STR_REPLACE = 256,SQL_FN_STR_RIGHT = 512,SQL_FN_STR_RTRIM = 1024,SQL_FN_STR_SUBSTRING = 2048,SQL_FN_STR_UCASE = 4096,SQL_FN_STR_ASCII = 8192,SQL_FN_STR_CHAR = 16384,SQL_FN_STR_DIFFERENCE = -32768,SQL_FN_STR_LOCATE_2 = 0,SQL_FN_STR_SOUNDEX = 0,SQL_FN_STR_SPACE = 0,SQL_FN_NUM_ABS = 1,SQL_FN_NUM_ACOS = 2,SQL_FN_NUM_ASIN = 4,SQL_FN_NUM_ATAN = 8,SQL_FN_NUM_ATAN2 = 16,SQL_FN_NUM_CEILING = 32,SQL_FN_NUM_COS = 64,SQL_FN_NUM_COT = 128,SQL_FN_NUM_EXP = 256,SQL_FN_NUM_FLOOR = 512,SQL_FN_NUM_LOG = 1024,SQL_FN_NUM_MOD = 2048,SQL_FN_NUM_SIGN = 4096,SQL_FN_NUM_SIN = 8192,SQL_FN_NUM_SQRT = 16384,SQL_FN_NUM_TAN = -32768,SQL_FN_NUM_PI = 0,SQL_FN_NUM_RAND = 0,SQL_FN_NUM_DEGREES = 0,SQL_FN_NUM_LOG10 = 0,SQL_FN_NUM_POWER = 0,SQL_FN_NUM_RADIANS = 0,SQL_FN_NUM_ROUND = 0,SQL_FN_NUM_TRUNCATE = 0,SQL_FN_TD_NOW = 1,SQL_FN_TD_CURDATE = 2,SQL_FN_TD_DAYOFMONTH = 4,SQL_FN_TD_DAYOFWEEK = 8,SQL_FN_TD_DAYOFYEAR = 16,SQL_FN_TD_MONTH = 32,SQL_FN_TD_QUARTER = 64,SQL_FN_TD_WEEK = 128,SQL_FN_TD_YEAR = 256,SQL_FN_TD_CURTIME = 512,SQL_FN_TD_HOUR = 1024,SQL_FN_TD_MINUTE = 2048,SQL_FN_TD_SECOND = 4096,SQL_FN_TD_TIMESTAMPADD = 8192,SQL_FN_TD_TIMESTAMPDIFF = 16384,SQL_FN_TD_DAYNAME = -32768,SQL_FN_TD_MONTHNAME = 0,SQL_FN_SYS_USERNAME = 1,SQL_FN_SYS_DBNAME = 2,SQL_FN_SYS_IFNULL = 4,SQL_FN_TSI_FRAC_SECOND = 1,SQL_FN_TSI_SECOND = 2,SQL_FN_TSI_MINUTE = 4,SQL_FN_TSI_HOUR = 8,SQL_FN_TSI_DAY = 16,SQL_FN_TSI_WEEK = 32,SQL_FN_TSI_MONTH = 64,SQL_FN_TSI_QUARTER = 128,SQL_FN_TSI_YEAR = 256,SQL_OAC_NONE = 0,SQL_OAC_LEVEL1 = 1,SQL_OAC_LEVEL2 = 2,SQL_OSCC_NOT_COMPLIANT = 0,SQL_OSCC_COMPLIANT = 1,SQL_OSC_MINIMUM = 0,SQL_OSC_CORE = 1,SQL_OSC_EXTENDED = 2,SQL_CB_NULL = 0,SQL_CB_NON_NULL = 1,SQL_CB_DELETE = 0,SQL_CB_CLOSE = 1,SQL_CB_PRESERVE = 2,SQL_IC_UPPER = 1,SQL_IC_LOWER = 2,SQL_IC_SENSITIVE = 3,SQL_IC_MIXED = 4,SQL_TC_NONE = 0,SQL_TC_DML = 1,SQL_TC_ALL = 2,SQL_TC_DDL_COMMIT = 3,SQL_TC_DDL_IGNORE = 4,SQL_SO_FORWARD_ONLY = 1,SQL_SO_KEYSET_DRIVEN = 2,SQL_SO_DYNAMIC = 4,SQL_SO_MIXED = 8,SQL_SO_STATIC = 16,SQL_SCCO_READ_ONLY = 1,SQL_SCCO_LOCK = 2,SQL_SCCO_OPT_ROWVER = 4,SQL_SCCO_OPT_VALUES = 8,SQL_FD_FETCH_NEXT = 1,SQL_FD_FETCH_FIRST = 2,SQL_FD_FETCH_LAST = 4,SQL_FD_FETCH_PRIOR = 8,SQL_FD_FETCH_ABSOLUTE = 16,SQL_FD_FETCH_RELATIVE = 32,SQL_FD_FETCH_RESUME = 64,SQL_FD_FETCH_BOOKMARK = 128,SQL_TXN_READ_UNCOMMITTED = 1,SQL_TXN_READ_COMMITTED = 2,SQL_TXN_REPEATABLE_READ = 4,SQL_TXN_SERIALIZABLE = 8,SQL_TXN_VERSIONING = 16,SQL_CN_NONE = 0,SQL_CN_DIFFERENT = 1,SQL_CN_ANY = 2,SQL_NNC_NULL = 0,SQL_NNC_NON_NULL = 1,SQL_NC_HIGH = 0,SQL_NC_LOW = 1,SQL_NC_START = 2,SQL_NC_END = 4,SQL_FILE_NOT_SUPPORTED = 0,SQL_FILE_TABLE = 1,SQL_FILE_QUALIFIER = 2,SQL_GD_ANY_COLUMN = 1,SQL_GD_ANY_ORDER = 2,SQL_GD_BLOCK = 4,SQL_GD_BOUND = 8,SQL_AT_ADD_COLUMN = 1,SQL_AT_DROP_COLUMN = 2,SQL_PS_POSITIONED_DELETE = 1,SQL_PS_POSITIONED_UPDATE = 2,SQL_PS_SELECT_FOR_UPDATE = 4,SQL_GB_NOT_SUPPORTED = 0,SQL_GB_GROUP_BY_EQUALS_SELECT = 1,SQL_GB_GROUP_BY_CONTAINS_SELECT = 2,SQL_GB_NO_RELATION = 3,SQL_OU_DML_STATEMENTS = 1,SQL_OU_PROCEDURE_INVOCATION = 2,SQL_OU_TABLE_DEFINITION = 4,SQL_OU_INDEX_DEFINITION = 8,SQL_OU_PRIVILEGE_DEFINITION = 16,SQL_QU_DML_STATEMENTS = 1,SQL_QU_PROCEDURE_INVOCATION = 2,SQL_QU_TABLE_DEFINITION = 4,SQL_QU_INDEX_DEFINITION = 8,SQL_QU_PRIVILEGE_DEFINITION = 16,SQL_SQ_COMPARISON = 1,SQL_SQ_EXISTS = 2,SQL_SQ_IN = 4,SQL_SQ_QUANTIFIED = 8,SQL_SQ_CORRELATED_SUBQUERIES = 16,SQL_U_UNION = 1,SQL_U_UNION_ALL = 2,SQL_BP_CLOSE = 1,SQL_BP_DELETE = 2,SQL_BP_DROP = 4,SQL_BP_TRANSACTION = 8,SQL_BP_UPDATE = 16,SQL_BP_OTHER_HSTMT = 32,SQL_BP_SCROLL = 64,SQL_SS_ADDITIONS = 1,SQL_SS_DELETIONS = 2,SQL_SS_UPDATES = 4,SQL_LCK_NO_CHANGE = 1,SQL_LCK_EXCLUSIVE = 2,SQL_LCK_UNLOCK = 4,SQL_POS_POSITION = 1,SQL_POS_REFRESH = 2,SQL_POS_UPDATE = 4,SQL_POS_DELETE = 8,SQL_POS_ADD = 16,SQL_QL_START = 1,SQL_QL_END = 2,SQL_OJ_LEFT = 1,SQL_OJ_RIGHT = 2,SQL_OJ_FULL = 4,SQL_OJ_NESTED = 8,SQL_OJ_NOT_ORDERED = 16,SQL_OJ_INNER = 32,SQL_OJ_ALL_COMPARISON_OPS = 64,SQL_QUERY_TIMEOUT = 0,SQL_MAX_ROWS = 1,SQL_NOSCAN = 2,SQL_MAX_LENGTH = 3,SQL_ASYNC_ENABLE = 4,SQL_BIND_TYPE = 5,SQL_CURSOR_TYPE = 6,SQL_CONCURRENCY = 7,SQL_KEYSET_SIZE = 8,SQL_ROWSET_SIZE = 9,SQL_SIMULATE_CURSOR = 10,SQL_RETRIEVE_DATA = 11,SQL_USE_BOOKMARKS = 12,SQL_GET_BOOKMARK = 13,SQL_ROW_NUMBER = 14,SQL_STMT_OPT_MAX = 14,SQL_STMT_OPT_MIN = 0,SQL_QUERY_TIMEOUT_DEFAULT = 0,SQL_MAX_ROWS_DEFAULT = 0,SQL_NOSCAN_OFF = 0,SQL_NOSCAN_ON = 1,SQL_NOSCAN_DEFAULT = 0,SQL_MAX_LENGTH_DEFAULT = 0,SQL_ASYNC_ENABLE_OFF = 0,SQL_ASYNC_ENABLE_ON = 1,SQL_ASYNC_ENABLE_DEFAULT = 0,SQL_BIND_BY_COLUMN = 0,SQL_CONCUR_READ_ONLY = 1,SQL_CONCUR_LOCK = 2,SQL_CONCUR_ROWVER = 3,SQL_CONCUR_VALUES = 4,SQL_CURSOR_FORWARD_ONLY = 0,SQL_CURSOR_KEYSET_DRIVEN = 1,SQL_CURSOR_DYNAMIC = 2,SQL_CURSOR_STATIC = 3,SQL_ROWSET_SIZE_DEFAULT = 1,SQL_KEYSET_SIZE_DEFAULT = 0,SQL_SC_NON_UNIQUE = 0,SQL_SC_TRY_UNIQUE = 1,SQL_SC_UNIQUE = 2,SQL_RD_OFF = 0,SQL_RD_ON = 1,SQL_RD_DEFAULT = 1,SQL_UB_OFF = 0,SQL_UB_ON = 1,SQL_UB_DEFAULT = 0,SQL_ACCESS_MODE = 101,SQL_AUTOCOMMIT = 102,SQL_LOGIN_TIMEOUT = 103,SQL_OPT_TRACE = 104,SQL_OPT_TRACEFILE = 105,SQL_TRANSLATE_DLL = 106,SQL_TRANSLATE_OPTION = 107,SQL_TXN_ISOLATION = 108,SQL_CURRENT_QUALIFIER = 109,SQL_ODBC_CURSORS = 110,SQL_QUIET_MODE = 111,SQL_PACKET_SIZE = 112,SQL_CONN_OPT_MAX = 112,SQL_CONNECT_OPT_DRVR_START = 1000,SQL_CONN_OPT_MIN = 101,SQL_MODE_READ_WRITE = 0,SQL_MODE_READ_ONLY = 1,SQL_MODE_DEFAULT = 0,SQL_AUTOCOMMIT_OFF = 0,SQL_AUTOCOMMIT_ON = 1,SQL_AUTOCOMMIT_DEFAULT = 1,SQL_LOGIN_TIMEOUT_DEFAULT = 15,SQL_OPT_TRACE_OFF = 0,SQL_OPT_TRACE_ON = 1,SQL_OPT_TRACE_DEFAULT = 0,SQL_CUR_USE_IF_NEEDED = 0,SQL_CUR_USE_ODBC = 1,SQL_CUR_USE_DRIVER = 2,SQL_CUR_DEFAULT = 2,SQL_BEST_ROWID = 1,SQL_ROWVER = 2,SQL_SCOPE_CURROW = 0,SQL_SCOPE_TRANSACTION = 1,SQL_SCOPE_SESSION = 2,SQL_ENTIRE_ROWSET = 0,SQL_POSITION = 0,SQL_REFRESH = 1,SQL_UPDATE = 2,SQL_DELETE = 3,SQL_ADD = 4,SQL_LOCK_NO_CHANGE = 0,SQL_LOCK_EXCLUSIVE = 1,SQL_LOCK_UNLOCK = 2,SQL_FETCH_NEXT = 1,SQL_FETCH_FIRST = 2,SQL_FETCH_LAST = 3,SQL_FETCH_PRIOR = 4,SQL_FETCH_ABSOLUTE = 5,SQL_FETCH_RELATIVE = 6,SQL_FETCH_BOOKMARK = 8,SQL_ROW_SUCCESS = 0,SQL_ROW_DELETED = 1,SQL_ROW_UPDATED = 2,SQL_ROW_NOROW = 3,SQL_ROW_ADDED = 4,SQL_ROW_ERROR = 5,SQL_CASCADE = 0,SQL_RESTRICT = 1,SQL_SET_NULL = 2,SQL_PARAM_TYPE_UNKNOWN = 0,SQL_PARAM_INPUT = 1,SQL_PARAM_INPUT_OUTPUT = 2,SQL_RESULT_COL = 3,SQL_PARAM_OUTPUT = 4,SQL_RETURN_VALUE = 5,SQL_PARAM_TYPE_DEFAULT = 2,SQL_SETPARAM_VALUE_MAX = -1,SQL_INDEX_UNIQUE = 0,SQL_INDEX_ALL = 1,SQL_QUICK = 0,SQL_ENSURE = 1,SQL_TABLE_STAT = 0,SQL_INDEX_CLUSTERED = 1,SQL_INDEX_HASHED = 2,SQL_INDEX_OTHER = 3,SQL_PT_UNKNOWN = 0,SQL_PT_PROCEDURE = 1,SQL_PT_FUNCTION = 2,SQL_PC_UNKNOWN = 0,SQL_PC_NOT_PSEUDO = 1,SQL_PC_PSEUDO = 2,SQL_DATABASE_NAME = 16,SQL_FD_FETCH_PREV = 8,SQL_FETCH_PREV = 4,SQL_CONCUR_TIMESTAMP = 3,SQL_SCCO_OPT_TIMESTAMP = 4,SQL_CC_DELETE = 0,SQL_CR_DELETE = 0,SQL_CC_CLOSE = 1,SQL_CR_CLOSE = 1,SQL_CC_PRESERVE = 2,SQL_CR_PRESERVE = 2,SQL_FETCH_RESUME = 7,SQL_SCROLL_FORWARD_ONLY = 0,SQL_SCROLL_KEYSET_DRIVEN = -1,SQL_SCROLL_DYNAMIC = -2,SQL_SCROLL_STATIC = -3,SQL_PC_NON_PSEUDO = 1,};
enum MACRO_SRCAND {SRCAND = 0xC6,};
enum MACRO_SRCCOPY {SRCCOPY = 0x20,};
enum MACRO_SRCERASE {SRCERASE = 0x328,};
enum MACRO_SRCINVERT {SRCINVERT = 0x46,};
enum MACRO_SRCPAINT {SRCPAINT = 0x86,};
enum MACRO_SS {SS_LEFT = 0x0,SS_CENTER = 0x1,SS_RIGHT = 0x2,SS_ICON = 0x3,SS_BLACKRECT = 0x4,SS_GRAYRECT = 0x5,SS_WHITERECT = 0x6,SS_BLACKFRAME = 0x7,SS_GRAYFRAME = 0x8,SS_WHITEFRAME = 0x9,SS_SIMPLE = 0xB,SS_LEFTNOWORDWRAP = 0xC,SS_NOPREFIX = 0x80,};
enum MACRO_ST {ST_CONNECTED = 0x1,ST_ADVISE = 0x2,ST_ISLOCAL = 0x4,ST_BLOCKED = 0x8,ST_CLIENT = 0x10,ST_TERMINATED = 0x20,ST_INLIST = 0x40,ST_BLOCKNEXT = 0x80,ST_ISSELF = 0x100,};
enum MACRO_STG {STG_E_INVALIDFUNCTION = 0x1,STG_E_FILENOTFOUND = 0x2,STG_E_PATHNOTFOUND = 0x3,STG_E_TOOMANYOPENFILES = 0x4,STG_E_ACCESSDENIED = 0x5,STG_E_INVALIDHANDLE = 0x6,STG_E_INSUFFICIENTMEMORY = 0x8,STG_E_INVALIDPOINTER = 0x9,STG_E_NOMOREFILES = 0x12,STG_E_DISKISWRITEPROTECTED = 0x13,STG_E_SEEKERROR = 0x19,STG_E_WRITEFAULT = 0x1D,STG_E_READFAULT = 0x1E,STG_E_SHAREVIOLATION = 0x20,STG_E_LOCKVIOLATION = 0x21,STG_E_FILEALREADYEXISTS = 0x50,STG_E_INVALIDPARAMETER = 0x57,STG_E_MEDIUMFULL = 0x70,STG_E_ABNORMALAPIEXIT = 0xFA,STG_E_INVALIDHEADER = 0xFB,STG_E_INVALIDNAME = 0xFC,STG_E_UNKNOWN = 0xFD,STG_E_UNIMPLEMENTEDFUNCTION = 0xFE,STG_E_INVALIDFLAG = 0xFF,STG_E_INUSE = 0x100,STG_E_NOTCURRENT = 0x101,STG_E_REVERTED = 0x102,STG_E_CANTSAVE = 0x103,STG_E_OLDFORMAT = 0x104,STG_E_OLDDLL = 0x105,STG_E_SHAREREQUIRED = 0x106,STG_E_NOTFILEBASEDSTORAGE = 0x107,STG_E_EXTANTMARSHALLINGS = 0x108,STG_S_CONVERTED = 0x200,};
enum MACRO_STGM {STGM_DIRECT = 0x0,STGM_TRANSACTED = 0x0,STGM_READ = 0x0,STGM_WRITE = 0x1,STGM_READWRITE = 0x2,STGM_SHARE_DENY_NONE = 0x40,STGM_SHARE_DENY_READ = 0x30,STGM_SHARE_DENY_WRITE = 0x20,STGM_SHARE_EXCLUSIVE = 0x10,STGM_PRIORITY = 0x0,STGM_DELETEONRELEASE = 0x0,STGM_CREATE = 0x1000,STGM_CONVERT = 0x0,STGM_FAILIFTHERE = 0x0,};
enum MACRO_STGM_DFRALL {STGM_DFRALL = 34,STGM_DFALL = 18,STGM_SALL = 18,};
enum MACRO_STM {STM_SETICON = 1024,STM_GETICON = 1025,};
enum MACRO_STRETCH {STRETCH_ANDSCANS = 1,STRETCH_ORSCANS = 2,STRETCH_DELETESCANS = 3,};
enum MACRO_SUBLANG {SUBLANG_NEUTRAL = 0x0,SUBLANG_DEFAULT = 0x1,SUBLANG_SYS_DEFAULT = 0x2,SUBLANG_CHINESE_SIMPLIFIED = 0x2,SUBLANG_CHINESE_TRADITIONAL = 0x1,SUBLANG_DUTCH = 0x1,SUBLANG_DUTCH_BELGIAN = 0x2,SUBLANG_ENGLISH_US = 0x1,SUBLANG_ENGLISH_UK = 0x2,SUBLANG_ENGLISH_AUS = 0x3,SUBLANG_ENGLISH_CAN = 0x4,SUBLANG_ENGLISH_NZ = 0x5,SUBLANG_ENGLISH_EIRE = 0x6,SUBLANG_FRENCH = 0x1,SUBLANG_FRENCH_BELGIAN = 0x2,SUBLANG_FRENCH_CANADIAN = 0x3,SUBLANG_FRENCH_SWISS = 0x4,SUBLANG_GERMAN = 0x1,SUBLANG_GERMAN_SWISS = 0x2,SUBLANG_GERMAN_AUSTRIAN = 0x3,SUBLANG_ITALIAN = 0x1,SUBLANG_ITALIAN_SWISS = 0x2,SUBLANG_NORWEGIAN_BOKMAL = 0x1,SUBLANG_NORWEGIAN_NYNORSK = 0x2,SUBLANG_PORTUGUESE = 0x2,SUBLANG_PORTUGUESE_BRAZILIAN = 0x1,SUBLANG_SERBO_CROATIAN_CYRILLIC = 0x2,SUBLANG_SERBO_CROATIAN_LATIN = 0x1,SUBLANG_SPANISH = 0x1,SUBLANG_SPANISH_MEXICAN = 0x2,SUBLANG_SPANISH_MODERN = 0x3,};
enum MACRO_SUCCESS {SUCCESS_SUCCESS = 0,};
enum MACRO_SW {SW_HIDE = 0,SW_SHOWNORMAL = 1,SW_NORMAL = 1,SW_SHOWMINIMIZED = 2,SW_SHOWMAXIMIZED = 3,SW_MAXIMIZE = 3,SW_SHOWNOACTIVATE = 4,SW_SHOW = 5,SW_MINIMIZE = 6,SW_SHOWMINNOACTIVE = 7,SW_SHOWNA = 8,SW_RESTORE = 9,};
enum MACRO_SWP {SWP_NOSIZE = 0x1,SWP_NOMOVE = 0x2,SWP_NOZORDER = 0x4,SWP_NOREDRAW = 0x8,SWP_NOACTIVATE = 0x10,SWP_FRAMECHANGED = 0x20,SWP_SHOWWINDOW = 0x40,SWP_HIDEWINDOW = 0x80,SWP_NOCOPYBITS = 0x100,SWP_NOOWNERZORDER = 0x200,SWP_DRAWFRAME = 0x20,SWP_NOREPOSITION = 0x200,SWP_NOSENDCHANGING = 0x400,SWP_DEFERERASE = 0x2000,};
enum MACRO_SW_PARENTCLOSING {SW_PARENTCLOSING = 1,SW_OTHERMAXIMIZED = 2,SW_PARENTOPENING = 3,SW_OTHERRESTORED = 4,SW_OTHERZOOM = 2,SW_OTHERUNZOOM = 4,};
enum MACRO_SW_SCROLLCHILDREN {SW_SCROLLCHILDREN = 0x1,SW_INVALIDATE = 0x2,SW_ERASE = 0x4,};
enum MACRO_SYSPAL {SYSPAL_STATIC = 1,SYSPAL_NOSTATIC = 2,};
enum MACRO_SYSTEM {SYSTEM_FIXED_FONT = 16,};
enum MACRO_SYV {SYV_NULL = 0x0,SYV_UNKNOWN = 0x1,SYV_EMPTY = 0x3,SYV_BEGINOR = 0x10,SYV_ENDOR = 0x11,SYV_OR = 0x12,SYV_SOFTNEWLINE = 0x20,SYV_SPACENULL = 0x0,SYV_KKCONVERT = 0xFFD4,SYV_CLEAR = 0xFFD5,SYV_EXTENDSELECT = 0xFFD8,SYV_UNDO = 0xFFD9,SYV_COPY = 0xFFDA,SYV_CUT = 0xFFDB,SYV_PASTE = 0xFFDC,SYV_CLEARWORD = 0xFFDD,SYV_USER = 0xFFDE,SYV_CORRECT = 0xFFDF,SYV_BACKSPACE = 0x8,SYV_TAB = 0x9,SYV_RETURN = 0xD,SYV_SPACE = 0x20,SYV_APPGESTUREMASK = 0x0,SYV_CIRCLEUPA = 0x24B6,SYV_CIRCLEUPZ = 0x24CF,SYV_CIRCLELOA = 0x24D0,SYV_CIRCLELOZ = 0x24E9,SYV_SHAPELINE = 0x1,SYV_SHAPEELLIPSE = 0x2,SYV_SHAPERECT = 0x3,SYV_SHAPEMIN = 0x1,SYV_SHAPEMAX = 0x3,};
enum MACRO_SYVHI {SYVHI_SPECIAL = 0,SYVHI_ANSI = 1,SYVHI_GESTURE = 2,SYVHI_KANJI = 3,SYVHI_SHAPE = 4,SYVHI_UNICODE = 5,SYVHI_VKEY = 6,};
enum MACRO_S_OK {S_OK = 0,S_FALSE = 1,};
enum MACRO_TA {TA_NOUPDATECP = 0x0,TA_UPDATECP = 0x1,TA_LEFT = 0x0,TA_RIGHT = 0x2,TA_CENTER = 0x6,TA_TOP = 0x0,TA_BOTTOM = 0x8,TA_BASELINE = 0x18,};
enum MACRO_TC {TC_OP_CHARACTER = 0x1,TC_OP_STROKE = 0x2,TC_CP_STROKE = 0x4,TC_CR_90 = 0x8,TC_CR_ANY = 0x10,TC_SF_X_YINDEP = 0x20,TC_SA_DOUBLE = 0x40,TC_SA_INTEGER = 0x80,TC_SA_CONTIN = 0x100,TC_EA_DOUBLE = 0x200,TC_IA_ABLE = 0x400,TC_UA_ABLE = 0x800,TC_SO_ABLE = 0x1000,TC_RA_ABLE = 0x2000,TC_VA_ABLE = 0x4000,TC_RESERVED = 0x8000,};
enum MACRO_TCP {TCP_NODELAY = 0x1,TCP_BSDURGENT = 0x7000,};
enum MACRO_TEXTCAPS {TEXTCAPS = 34,};
enum MACRO_TF {TF_FORCEDRIVE = 0x80,};
enum MACRO_TIME {TIME_MS = 0x1,TIME_SAMPLES = 0x2,TIME_BYTES = 0x4,TIME_SMPTE = 0x8,TIME_MIDI = 0x10,};
enum MACRO_TIMEOUT {TIMEOUT_ASYNC = -1,};
enum MACRO_TIMERR {TIMERR_NOERROR = 0,TIMERR_NOCANDO = 97,TIMERR_STRUCT = 129,};
enum MACRO_TIME_ONESHOT {TIME_ONESHOT = 0,TIME_PERIODIC = 1,};
enum MACRO_TITLEBARNAMELEN {TITLEBARNAMELEN = 40,};
enum MACRO_TMPF {TMPF_FIXED_PITCH = 0x1,TMPF_VECTOR = 0x2,TMPF_DEVICE = 0x8,TMPF_TRUETYPE = 0x4,};
enum MACRO_TPM {TPM_LEFTBUTTON = 0x0,TPM_RIGHTBUTTON = 0x2,TPM_LEFTALIGN = 0x0,TPM_CENTERALIGN = 0x4,TPM_RIGHTALIGN = 0x8,};
enum MACRO_TRAIN {TRAIN_NONE = 0x0,TRAIN_DEFAULT = 0x1,TRAIN_CUSTOM = 0x2,TRAIN_BOTH = 0x3,TRAIN_SAVE = 0x0,TRAIN_REVERT = 0x1,};
enum MACRO_TRANSFORM {TRANSFORM_CTM = 4107,};
enum MACRO_TRANSPARENT {TRANSPARENT = 1,OPAQUE = 2,};
enum MACRO_TT {TT_POLYGON_TYPE = 24,TT_PRIM_LINE = 1,TT_PRIM_QSPLINE = 2,TT_AVAILABLE = 1,TT_ENABLED = 2,};
enum MACRO_TYPE {TYPE_E_BUFFERTOOSMALL = -32746,TYPE_E_INVDATAREAD = -32744,TYPE_E_UNSUPFORMAT = -32743,TYPE_E_REGISTRYACCESS = -32740,TYPE_E_LIBNOTREGISTERED = -32739,TYPE_E_UNDEFINEDTYPE = -32729,TYPE_E_QUALIFIEDNAMEDISALLOWED = -32728,TYPE_E_INVALIDSTATE = -32727,TYPE_E_WRONGTYPEKIND = -32726,TYPE_E_ELEMENTNOTFOUND = -32725,TYPE_E_AMBIGUOUSNAME = -32724,TYPE_E_NAMECONFLICT = -32723,TYPE_E_UNKNOWNLCID = -32722,TYPE_E_DLLFUNCTIONNOTFOUND = -32721,TYPE_E_BADMODULEKIND = -30531,TYPE_E_SIZETOOBIG = -30523,TYPE_E_DUPLICATEID = -30522,TYPE_E_TYPEMISMATCH = -29536,TYPE_E_OUTOFBOUNDS = -29535,TYPE_E_IOERROR = -29534,TYPE_E_CANTCREATETMPFILE = -29533,TYPE_E_CANTLOADLIBRARY = -25526,TYPE_E_INCONSISTENTPROPFUNCS = -25469,TYPE_E_CIRCULARTYPE = -25468,};
enum MACRO_UAE_BOX {UAE_BOX = 0,NO_UAE_BOX = 1,};
enum MACRO_UPDATELINKS {UPDATELINKS_STARTDELAY = 2000,};
enum MACRO_UPDFCACHE {UPDFCACHE_NODATACACHE = 0x1,UPDFCACHE_ONSAVECACHE = 0x2,UPDFCACHE_ONSTOPCACHE = 0x4,UPDFCACHE_NORMALCACHE = 0x8,UPDFCACHE_IFBLANK = 0x10,UPDFCACHE_ONLYIFBLANK = 0x0,UPDFCACHE_IFBLANKORONSAVECACHE = 0x12,UPDFCACHE_ALL = 0xFFFF,UPDFCACHE_ALLBUTNODATACACHE = 0xFFFE,};
enum MACRO_USA {USA_COUNTRYCODE = 1,};
enum MACRO_VAR {VAR_TIMEVALUEONLY = 0x1,VAR_DATEVALUEONLY = 0x2,};
enum MACRO_VARIANT {VARIANT_NOVALUEPROP = 1,};
enum MACRO_VER {VER_FILEFLAGSMASK = 3,VER_FILEFLAGS = 0,VER_FILEOS = 1,};
enum MACRO_VERTRES {VERTRES = 10,};
enum MACRO_VERTSIZE {VERTSIZE = 6,HORZRES = 8,};
enum MACRO_VFF {VFF_CURNEDEST = 0x1,VFF_FILEINUSE = 0x2,VFF_BUFFTOOSMALL = 0x4,};
enum MACRO_VFFF {VFFF_ISSHAREDFILE = 0x1,};
enum MACRO_VFT {VFT_UNKNOWN = 0x0,VFT_APP = 0x1,VFT_DLL = 0x2,VFT_DRV = 0x3,VFT_FONT = 0x4,VFT_VXD = 0x5,VFT_STATIC_LIB = 0x7,};
enum MACRO_VFT2 {VFT2_UNKNOWN = 0x0,VFT2_DRV_PRINTER = 0x1,VFT2_DRV_KEYBOARD = 0x2,VFT2_DRV_LANGUAGE = 0x3,VFT2_DRV_DISPLAY = 0x4,VFT2_DRV_MOUSE = 0x5,VFT2_DRV_NETWORK = 0x6,VFT2_DRV_SYSTEM = 0x7,VFT2_DRV_INSTALLABLE = 0x8,VFT2_DRV_SOUND = 0x9,VFT2_DRV_COMM = 0xA,VFT2_FONT_RASTER = 0x1,VFT2_FONT_VECTOR = 0x2,VFT2_FONT_TRUETYPE = 0x3,};
enum MACRO_VIEW {VIEW_E_FIRST = 0x140,VIEW_E_LAST = 0x14F,VIEW_S_FIRST = 0x140,VIEW_S_LAST = 0x14F,};
enum MACRO_VIEW_S {VIEW_S_ALREADY_FROZEN = 320,};
enum MACRO_VIF {VIF_TEMPFILE = 0x1,VIF_MISMATCH = 0x2,VIF_SRCOLD = 0x4,VIF_DIFFLANG = 0x8,VIF_DIFFCODEPG = 0x10,VIF_DIFFTYPE = 0x20,VIF_WRITEPROT = 0x40,VIF_FILEINUSE = 0x80,VIF_OUTOFSPACE = 0x100,VIF_ACCESSVIOLATION = 0x200,VIF_SHARINGVIOLATION = 0x400,VIF_CANNOTCREATE = 0x800,VIF_CANNOTDELETE = 0x1000,VIF_CANNOTRENAME = 0x2000,VIF_CANNOTDELETECUR = 0x4000,VIF_OUTOFMEMORY = 0x8000,VIF_CANNOTREADSRC = 0x0,VIF_CANNOTREADDST = 0x0,VIF_BUFFTOOSMALL = 0x0,};
enum MACRO_VIFF {VIFF_FORCEINSTALL = 0x1,VIFF_DONTDELETEOLD = 0x2,};
enum MACRO_VK {VK_LBUTTON = 0x1,VK_RBUTTON = 0x2,VK_CANCEL = 0x3,VK_MBUTTON = 0x4,VK_BACK = 0x8,VK_TAB = 0x9,VK_CLEAR = 0xC,VK_RETURN = 0xD,VK_SHIFT = 0x10,VK_CONTROL = 0x11,VK_MENU = 0x12,VK_PAUSE = 0x13,VK_CAPITAL = 0x14,VK_ESCAPE = 0x1B,VK_SPACE = 0x20,VK_PRIOR = 0x21,VK_NEXT = 0x22,VK_END = 0x23,VK_HOME = 0x24,VK_LEFT = 0x25,VK_UP = 0x26,VK_RIGHT = 0x27,VK_DOWN = 0x28,VK_SELECT = 0x29,VK_PRINT = 0x2A,VK_EXECUTE = 0x2B,VK_SNAPSHOT = 0x2C,VK_INSERT = 0x2D,VK_DELETE = 0x2E,VK_HELP = 0x2F,VK_NUMPAD0 = 0x60,VK_NUMPAD1 = 0x61,VK_NUMPAD2 = 0x62,VK_NUMPAD3 = 0x63,VK_NUMPAD4 = 0x64,VK_NUMPAD5 = 0x65,VK_NUMPAD6 = 0x66,VK_NUMPAD7 = 0x67,VK_NUMPAD8 = 0x68,VK_NUMPAD9 = 0x69,VK_MULTIPLY = 0x6A,VK_ADD = 0x6B,VK_SEPARATOR = 0x6C,VK_SUBTRACT = 0x6D,VK_DECIMAL = 0x6E,VK_DIVIDE = 0x6F,VK_F1 = 0x70,VK_F2 = 0x71,VK_F3 = 0x72,VK_F4 = 0x73,VK_F5 = 0x74,VK_F6 = 0x75,VK_F7 = 0x76,VK_F8 = 0x77,VK_F9 = 0x78,VK_F10 = 0x79,VK_F11 = 0x7A,VK_F12 = 0x7B,VK_F13 = 0x7C,VK_F14 = 0x7D,VK_F15 = 0x7E,VK_F16 = 0x7F,VK_F17 = 0x80,VK_F18 = 0x81,VK_F19 = 0x82,VK_F20 = 0x83,VK_F21 = 0x84,VK_F22 = 0x85,VK_F23 = 0x86,VK_F24 = 0x87,VK_NUMLOCK = 0x90,VK_SCROLL = 0x91,};
enum MACRO_VOS {VOS_UNKNOWN = 0x0,VOS_DOS = 0x0,VOS_OS216 = 0x0,VOS_OS232 = 0x0,VOS_NT = 0x0,VOS__BASE = 0x0,VOS__WINDOWS16 = 0x1,VOS__PM16 = 0x2,VOS__PM32 = 0x3,VOS__WINDOWS32 = 0x4,VOS_DOS_WINDOWS16 = 0x1,VOS_DOS_WINDOWS32 = 0x4,VOS_OS216_PM16 = 0x2,VOS_OS232_PM32 = 0x3,VOS_NT_WINDOWS32 = 0x4,};
enum MACRO_VS {VS_FFI_SIGNATURE = 0x4BD,VS_FFI_STRUCVERSION = 0x0,VS_FFI_FILEFLAGSMASK = 0x3F,VS_FF_DEBUG = 0x1,VS_FF_PRERELEASE = 0x2,VS_FF_PATCHED = 0x4,VS_FF_PRIVATEBUILD = 0x8,VS_FF_INFOINFERRED = 0x10,VS_FF_SPECIALBUILD = 0x20,};
enum MACRO_VT {VT_VECTOR = 0x1000,VT_ARRAY = 0x2000,VT_BYREF = 0x4000,VT_RESERVED = 0x8000,};
enum MACRO_VWM {VWM_MOUSEMOVE = 0x1,VWM_MOUSELEFTDOWN = 0x2,VWM_MOUSELEFTUP = 0x4,VWM_MOUSERIGHTDOWN = 0x8,VWM_MOUSERIGHTUP = 0x10,};
enum MACRO_WA {WA_INACTIVE = 0,WA_ACTIVE = 1,WA_CLICKACTIVE = 2,};
enum MACRO_WAVE {WAVE_MAPPER = -1,WAVE_FORMAT_QUERY = 1,WAVE_ALLOWSYNC = 2,};
enum MACRO_WAVECAPS {WAVECAPS_PITCH = 0x1,WAVECAPS_PLAYBACKRATE = 0x2,WAVECAPS_VOLUME = 0x4,WAVECAPS_LRVOLUME = 0x8,WAVECAPS_SYNC = 0x10,};
enum MACRO_WAVERR {WAVERR_BADFORMAT = 32,WAVERR_STILLPLAYING = 33,WAVERR_UNPREPARED = 34,WAVERR_SYNC = 35,WAVERR_LASTERROR = 35,};
enum MACRO_WAVE_INVALIDFORMAT {WAVE_INVALIDFORMAT = 0x0,WAVE_FORMAT_1M08 = 0x1,WAVE_FORMAT_1S08 = 0x2,WAVE_FORMAT_1M16 = 0x4,WAVE_FORMAT_1S16 = 0x8,WAVE_FORMAT_2M08 = 0x10,WAVE_FORMAT_2S08 = 0x20,WAVE_FORMAT_2M16 = 0x40,WAVE_FORMAT_2S16 = 0x80,WAVE_FORMAT_4M08 = 0x100,WAVE_FORMAT_4S08 = 0x200,WAVE_FORMAT_4M16 = 0x400,WAVE_FORMAT_4S16 = 0x800,WAVE_FORMAT_PCM = 0x1,};
enum MACRO_WB {WB_LEFT = 0,WB_RIGHT = 1,WB_ISDELIMITER = 2,};
enum MACRO_WCR {WCR_RECOGNAME = 0,WCR_QUERY = 1,WCR_CONFIGDIALOG = 2,WCR_DEFAULT = 3,WCR_RCCHANGE = 4,WCR_VERSION = 5,WCR_TRAIN = 6,WCR_TRAINSAVE = 7,WCR_TRAINMAX = 8,WCR_TRAINDIRTY = 9,WCR_TRAINCUSTOM = 10,WCR_QUERYLANGUAGE = 11,WCR_USERCHANGE = 12,WCR_PRIVATE = 1024,};
enum MACRO_WDI {WDI_OPTIONS = 0x1,WDI_FILTER = 0x2,WDI_ALLOCBREAK = 0x4,};
enum MACRO_WEP {WEP_SYSTEM_EXIT = 1,WEP_FREE_DLL = 0,};
enum MACRO_WF {WF_PMODE = 0x1,WF_CPU286 = 0x2,WF_CPU386 = 0x4,WF_CPU486 = 0x8,WF_STANDARD = 0x10,WF_WIN286 = 0x10,WF_ENHANCED = 0x20,WF_WIN386 = 0x20,WF_CPU086 = 0x40,WF_CPU186 = 0x80,WF_LARGEFRAME = 0x100,WF_SMALLFRAME = 0x200,WF_80x87 = 0x400,WF_PAGING = 0x800,WF_WLO = 0x8000,};
enum MACRO_WH {WH_GETMESSAGE = 3,WH_CALLWNDPROC = 4,WH_MSGFILTER = -1,WH_SYSMSGFILTER = 6,};
enum MACRO_WHDR {WHDR_DONE = 0x1,WHDR_PREPARED = 0x2,WHDR_BEGINLOOP = 0x4,WHDR_ENDLOOP = 0x8,WHDR_INQUEUE = 0x10,};
enum MACRO_WHITENESS {WHITENESS = 0x62,};
enum MACRO_WH_CBT {WH_CBT = 5,};
enum MACRO_WH_DEBUG {WH_DEBUG = 9,};
enum MACRO_WH_HARDWARE {WH_HARDWARE = 8,WH_SHELL = 10,};
enum MACRO_WH_JOURNALRECORD {WH_JOURNALRECORD = 0,WH_JOURNALPLAYBACK = 1,};
enum MACRO_WH_KEYBOARD {WH_KEYBOARD = 2,};
enum MACRO_WH_MOUSE {WH_MOUSE = 7,};
enum MACRO_WIM {WIM_OPEN = 958,WIM_CLOSE = 959,WIM_DATA = 960,};
enum MACRO_WINVER {WINVER = 0x30A,};
enum MACRO_WM {WM_COMPACTING = 0x41,};
enum MACRO_WM32 {WM32_Invalid_Func = 0x1,WM32_Invalid_Flags = 0x2,WM32_Invalid_Arg = 0x3,WM32_Insufficient_Sels = 0x4,WM32_Insufficient_Mem = 0x5,};
enum MACRO_WM_ACTIVATE {WM_ACTIVATE = 0x6,WM_ACTIVATEAPP = 0x1C,WM_NCACTIVATE = 0x86,WM_SETFOCUS = 0x7,WM_KILLFOCUS = 0x8,WM_KEYDOWN = 0x100,WM_KEYUP = 0x101,WM_CHAR = 0x102,WM_DEADCHAR = 0x103,WM_SYSKEYDOWN = 0x104,WM_SYSKEYUP = 0x105,WM_SYSCHAR = 0x106,WM_SYSDEADCHAR = 0x107,WM_KEYFIRST = 0x100,WM_KEYLAST = 0x108,};
enum MACRO_WM_CANCELMODE {WM_CANCELMODE = 0x1F,WM_TIMER = 0x113,};
enum MACRO_WM_CHILDACTIVATE {WM_CHILDACTIVATE = 0x22,};
enum MACRO_WM_CHOOSEFONT {WM_CHOOSEFONT_GETLOGFONT = 1025,};
enum MACRO_WM_COMMNOTIFY {WM_COMMNOTIFY = 0x44,};
enum MACRO_WM_CPL {WM_CPL_LAUNCH = 2024,WM_CPL_LAUNCHED = 2025,};
enum MACRO_WM_CREATE {WM_CREATE = 0x1,WM_NCCREATE = 0x81,WM_DESTROY = 0x2,WM_NCDESTROY = 0x82,};
enum MACRO_WM_CTLCOLOR {WM_CTLCOLOR = 0x19,};
enum MACRO_WM_CUT {WM_CUT = 0x300,WM_COPY = 0x301,WM_PASTE = 0x302,WM_CLEAR = 0x303,WM_UNDO = 0x304,WM_RENDERFORMAT = 0x305,WM_RENDERALLFORMATS = 0x306,WM_DESTROYCLIPBOARD = 0x307,WM_DRAWCLIPBOARD = 0x308,WM_PAINTCLIPBOARD = 0x309,WM_SIZECLIPBOARD = 0x30B,WM_VSCROLLCLIPBOARD = 0x30A,WM_HSCROLLCLIPBOARD = 0x30E,WM_ASKCBFORMATNAME = 0x30C,WM_CHANGECBCHAIN = 0x30D,WM_SETCURSOR = 0x20,};
enum MACRO_WM_DDE {WM_DDE_FIRST = 0x3E0,WM_DDE_INITIATE = 0x3E0,WM_DDE_TERMINATE = 0x3E1,WM_DDE_ADVISE = 0x3E2,WM_DDE_UNADVISE = 0x3E3,WM_DDE_ACK = 0x3E4,WM_DDE_DATA = 0x3E5,WM_DDE_REQUEST = 0x3E6,WM_DDE_POKE = 0x3E7,WM_DDE_EXECUTE = 0x3E8,WM_DDE_LAST = 0x3E8,};
enum MACRO_WM_DEVMODECHANGE {WM_DEVMODECHANGE = 0x1B,WM_TIMECHANGE = 0x1E,};
enum MACRO_WM_DRAWITEM {WM_DRAWITEM = 0x2B,WM_MEASUREITEM = 0x2C,WM_DELETEITEM = 0x2D,WM_COMPAREITEM = 0x39,};
enum MACRO_WM_FONTCHANGE {WM_FONTCHANGE = 0x1D,};
enum MACRO_WM_GETDLGCODE {WM_GETDLGCODE = 0x87,};
enum MACRO_WM_INITDIALOG {WM_INITDIALOG = 0x110,WM_NEXTDLGCTL = 0x28,WM_PARENTNOTIFY = 0x210,WM_ENTERIDLE = 0x121,};
enum MACRO_WM_INITMENU {WM_INITMENU = 0x116,WM_INITMENUPOPUP = 0x117,WM_MENUSELECT = 0x11F,WM_MENUCHAR = 0x120,WM_COMMAND = 0x111,WM_HSCROLL = 0x114,WM_VSCROLL = 0x115,};
enum MACRO_WM_MDICREATE {WM_MDICREATE = 0x220,WM_MDIDESTROY = 0x221,WM_MDIACTIVATE = 0x222,WM_MDIRESTORE = 0x223,WM_MDINEXT = 0x224,WM_MDIMAXIMIZE = 0x225,WM_MDITILE = 0x226,WM_MDICASCADE = 0x227,WM_MDIICONARRANGE = 0x228,WM_MDIGETACTIVE = 0x229,WM_MDISETMENU = 0x230,};
enum MACRO_WM_MOUSEMOVE {WM_MOUSEMOVE = 0x200,WM_LBUTTONDOWN = 0x201,WM_LBUTTONUP = 0x202,WM_LBUTTONDBLCLK = 0x203,WM_RBUTTONDOWN = 0x204,WM_RBUTTONUP = 0x205,WM_RBUTTONDBLCLK = 0x206,WM_MBUTTONDOWN = 0x207,WM_MBUTTONUP = 0x208,WM_MBUTTONDBLCLK = 0x209,WM_MOUSEFIRST = 0x200,WM_MOUSELAST = 0x209,};
enum MACRO_WM_NCHITTEST {WM_NCHITTEST = 0x84,};
enum MACRO_WM_NCMOUSEMOVE {WM_NCMOUSEMOVE = 0xA0,WM_NCLBUTTONDOWN = 0xA1,WM_NCLBUTTONUP = 0xA2,WM_NCLBUTTONDBLCLK = 0xA3,WM_NCRBUTTONDOWN = 0xA4,WM_NCRBUTTONUP = 0xA5,WM_NCRBUTTONDBLCLK = 0xA6,WM_NCMBUTTONDOWN = 0xA7,WM_NCMBUTTONUP = 0xA8,WM_NCMBUTTONDBLCLK = 0xA9,WM_MOUSEACTIVATE = 0x21,};
enum MACRO_WM_NCPAINT {WM_NCPAINT = 0x85,WM_NCCALCSIZE = 0x83,};
enum MACRO_WM_NULL {WM_NULL = 0x0,WM_USER = 0x400,};
enum MACRO_WM_PAINT {WM_PAINT = 0xF,WM_ERASEBKGND = 0x14,WM_ICONERASEBKGND = 0x27,};
enum MACRO_WM_PENWINFIRST {WM_PENWINFIRST = 0x380,WM_PENWINLAST = 0x38F,WM_COALESCE_FIRST = 0x390,WM_COALESCE_LAST = 0x39F,WM_POWER = 0x48,};
enum MACRO_WM_QUERYDRAGICON {WM_QUERYDRAGICON = 0x37,WM_DROPFILES = 0x233,};
enum MACRO_WM_QUERYENDSESSION {WM_QUERYENDSESSION = 0x11,WM_ENDSESSION = 0x16,WM_QUIT = 0x12,WM_SYSTEMERROR = 0x17,};
enum MACRO_WM_QUERYNEWPALETTE {WM_QUERYNEWPALETTE = 0x30F,WM_PALETTEISCHANGING = 0x310,WM_PALETTECHANGED = 0x311,};
enum MACRO_WM_QUERYOPEN {WM_QUERYOPEN = 0x13,WM_CLOSE = 0x10,WM_GETMINMAXINFO = 0x24,};
enum MACRO_WM_QUEUESYNC {WM_QUEUESYNC = 0x23,};
enum MACRO_WM_RCRESULT {WM_RCRESULT = 897,WM_HOOKRCRESULT = 898,WM_GLOBALRCCHANGE = 899,WM_SKB = 900,WM_HEDITCTL = 901,};
enum MACRO_WM_SETFONT {WM_SETFONT = 0x30,WM_GETFONT = 0x31,};
enum MACRO_WM_SETREDRAW {WM_SETREDRAW = 0xB,WM_ENABLE = 0xA,WM_SETTEXT = 0xC,WM_GETTEXT = 0xD,WM_GETTEXTLENGTH = 0xE,};
enum MACRO_WM_SHOWWINDOW {WM_SHOWWINDOW = 0x18,};
enum MACRO_WM_SPOOLERSTATUS {WM_SPOOLERSTATUS = 0x2A,};
enum MACRO_WM_SYSCOLORCHANGE {WM_SYSCOLORCHANGE = 0x15,};
enum MACRO_WM_SYSCOMMAND {WM_SYSCOMMAND = 0x112,};
enum MACRO_WM_VKEYTOITEM {WM_VKEYTOITEM = 0x2E,WM_CHARTOITEM = 0x2F,};
enum MACRO_WM_WINDOWPOSCHANGING {WM_WINDOWPOSCHANGING = 0x46,WM_WINDOWPOSCHANGED = 0x47,WM_MOVE = 0x3,WM_SIZE = 0x5,};
enum MACRO_WM_WININICHANGE {WM_WININICHANGE = 0x1A,};
enum MACRO_WN {WN_SUCCESS = 0x0,WN_NOT_SUPPORTED = 0x1,WN_NET_ERROR = 0x2,WN_MORE_DATA = 0x3,WN_BAD_POINTER = 0x4,WN_BAD_VALUE = 0x5,WN_BAD_PASSWORD = 0x6,WN_ACCESS_DENIED = 0x7,WN_FUNCTION_BUSY = 0x8,WN_WINDOWS_ERROR = 0x9,WN_BAD_USER = 0xA,WN_OUT_OF_MEMORY = 0xB,WN_CANCEL = 0xC,WN_CONTINUE = 0xD,WN_NOT_CONNECTED = 0x30,WN_OPEN_FILES = 0x31,WN_BAD_NETNAME = 0x32,WN_BAD_LOCALNAME = 0x33,WN_ALREADY_CONNECTED = 0x34,WN_DEVICE_ERROR = 0x35,WN_CONNECTION_CLOSED = 0x36,};
enum MACRO_WOM {WOM_OPEN = 955,WOM_CLOSE = 956,WOM_DONE = 957,};
enum MACRO_WPF {WPF_SETMINPOSITION = 0x1,WPF_RESTORETOMAXIMIZED = 0x2,};
enum MACRO_WS {WS_OVERLAPPED = 0x0,WS_POPUP = 0x0,WS_CHILD = 0x0,WS_CLIPSIBLINGS = 0x0,WS_CLIPCHILDREN = 0x0,WS_VISIBLE = 0x0,WS_DISABLED = 0x0,WS_MINIMIZE = 0x0,WS_MAXIMIZE = 0x0,WS_CAPTION = 0x0,WS_BORDER = 0x0,WS_DLGFRAME = 0x0,WS_VSCROLL = 0x0,WS_HSCROLL = 0x0,WS_SYSMENU = 0x0,WS_THICKFRAME = 0x0,WS_MINIMIZEBOX = 0x0,WS_MAXIMIZEBOX = 0x0,WS_GROUP = 0x0,WS_TABSTOP = 0x0,WS_OVERLAPPEDWINDOW = 0x0,WS_POPUPWINDOW = 0x0,WS_CHILDWINDOW = 0x0,WS_EX_DLGMODALFRAME = 0x1,WS_EX_NOPARENTNOTIFY = 0x4,WS_EX_TOPMOST = 0x8,WS_EX_ACCEPTFILES = 0x10,WS_EX_TRANSPARENT = 0x20,WS_TILED = 0x0,WS_ICONIC = 0x0,WS_SIZEBOX = 0x0,WS_TILEDWINDOW = 0x0,};
enum MACRO_WSABASEERR {WSABASEERR = 10000,};
enum MACRO_WSAEACCES {WSAEACCES = 10013,};
enum MACRO_WSAEADDRINUSE {WSAEADDRINUSE = 10048,};
enum MACRO_WSAEADDRNOTAVAIL {WSAEADDRNOTAVAIL = 10049,};
enum MACRO_WSAEAFNOSUPPORT {WSAEAFNOSUPPORT = 10047,};
enum MACRO_WSAEALREADY {WSAEALREADY = 10037,};
enum MACRO_WSAEBADF {WSAEBADF = 10009,};
enum MACRO_WSAECONNABORTED {WSAECONNABORTED = 10053,};
enum MACRO_WSAECONNREFUSED {WSAECONNREFUSED = 10061,};
enum MACRO_WSAECONNRESET {WSAECONNRESET = 10054,};
enum MACRO_WSAEDESTADDRREQ {WSAEDESTADDRREQ = 10039,};
enum MACRO_WSAEDISCON {WSAEDISCON = 10101,};
enum MACRO_WSAEDQUOT {WSAEDQUOT = 10069,};
enum MACRO_WSAEFAULT {WSAEFAULT = 10014,};
enum MACRO_WSAEHOSTDOWN {WSAEHOSTDOWN = 10064,};
enum MACRO_WSAEHOSTUNREACH {WSAEHOSTUNREACH = 10065,};
enum MACRO_WSAEINPROGRESS {WSAEINPROGRESS = 10036,};
enum MACRO_WSAEINTR {WSAEINTR = 10004,};
enum MACRO_WSAEINVAL {WSAEINVAL = 10022,};
enum MACRO_WSAEISCONN {WSAEISCONN = 10056,};
enum MACRO_WSAELOOP {WSAELOOP = 10062,};
enum MACRO_WSAEMFILE {WSAEMFILE = 10024,};
enum MACRO_WSAEMSGSIZE {WSAEMSGSIZE = 10040,};
enum MACRO_WSAENAMETOOLONG {WSAENAMETOOLONG = 10063,};
enum MACRO_WSAENETDOWN {WSAENETDOWN = 10050,};
enum MACRO_WSAENETRESET {WSAENETRESET = 10052,};
enum MACRO_WSAENETUNREACH {WSAENETUNREACH = 10051,};
enum MACRO_WSAENOBUFS {WSAENOBUFS = 10055,};
enum MACRO_WSAENOPROTOOPT {WSAENOPROTOOPT = 10042,};
enum MACRO_WSAENOTCONN {WSAENOTCONN = 10057,};
enum MACRO_WSAENOTEMPTY {WSAENOTEMPTY = 10066,};
enum MACRO_WSAENOTSOCK {WSAENOTSOCK = 10038,};
enum MACRO_WSAEOPNOTSUPP {WSAEOPNOTSUPP = 10045,};
enum MACRO_WSAEPFNOSUPPORT {WSAEPFNOSUPPORT = 10046,};
enum MACRO_WSAEPROCLIM {WSAEPROCLIM = 10067,};
enum MACRO_WSAEPROTONOSUPPORT {WSAEPROTONOSUPPORT = 10043,};
enum MACRO_WSAEPROTOTYPE {WSAEPROTOTYPE = 10041,};
enum MACRO_WSAEREMOTE {WSAEREMOTE = 10071,};
enum MACRO_WSAESHUTDOWN {WSAESHUTDOWN = 10058,};
enum MACRO_WSAESOCKTNOSUPPORT {WSAESOCKTNOSUPPORT = 10044,};
enum MACRO_WSAESTALE {WSAESTALE = 10070,};
enum MACRO_WSAETIMEDOUT {WSAETIMEDOUT = 10060,};
enum MACRO_WSAETOOMANYREFS {WSAETOOMANYREFS = 10059,};
enum MACRO_WSAEUSERS {WSAEUSERS = 10068,};
enum MACRO_WSAEWOULDBLOCK {WSAEWOULDBLOCK = 10035,};
enum MACRO_WSANO {WSANO_DATA = 11004,NO_DATA = 11004,};
enum MACRO_WSANOTINITIALISED {WSANOTINITIALISED = 10093,};
enum MACRO_WSASYSNOTREADY {WSASYSNOTREADY = 10091,};
enum MACRO_WSAVERNOTSUPPORTED {WSAVERNOTSUPPORTED = 10092,};
enum MACRO_WS_GT {WS_GT = 0,};
enum MACRO_WVR {WVR_ALIGNTOP = 0x10,WVR_ALIGNLEFT = 0x20,WVR_ALIGNBOTTOM = 0x40,WVR_ALIGNRIGHT = 0x80,WVR_HREDRAW = 0x100,WVR_VREDRAW = 0x200,WVR_REDRAW = 0x300,WVR_VALIDRECTS = 0x400,};
enum MACRO_XCLASS {XCLASS_MASK = 0xFC00,XCLASS_BOOL = 0x1000,XCLASS_DATA = 0x2000,XCLASS_FLAGS = 0x4000,XCLASS_NOTIFICATION = 0x8000,};
enum MACRO_XST {XST_NULL = 0,XST_INCOMPLETE = 1,XST_CONNECTED = 2,XST_INIT1 = 3,XST_INIT2 = 4,XST_REQSENT = 5,XST_DATARCVD = 6,XST_POKESENT = 7,XST_POKEACKRCVD = 8,XST_EXECSENT = 9,XST_EXECACKRCVD = 10,XST_ADVSENT = 11,XST_UNADVSENT = 12,XST_ADVACKRCVD = 13,XST_UNADVACKRCVD = 14,XST_ADVDATASENT = 15,XST_ADVDATAACKRCVD = 16,};
enum MACRO_XTYP {XTYP_ERROR = 0x8002,XTYP_ADVDATA = 0x4010,XTYP_ADVREQ = 0x2022,XTYP_ADVSTART = 0x1030,XTYP_ADVSTOP = 0x8040,XTYP_EXECUTE = 0x4050,XTYP_CONNECT = 0x1062,XTYP_CONNECT_CONFIRM = 0x8072,XTYP_XACT_COMPLETE = 0x8080,XTYP_POKE = 0x4090,XTYP_REGISTER = 0x80A2,XTYP_REQUEST = 0x20B0,XTYP_DISCONNECT = 0x80C2,XTYP_UNREGISTER = 0x80D2,XTYP_WILDCONNECT = 0x20E2,XTYP_MASK = 0xF0,XTYP_SHIFT = 0x4,};
enum MACRO_XTYPF {XTYPF_NOBLOCK = 0x2,XTYPF_NODATA = 0x4,XTYPF_ACKREQ = 0x8,};
enum MACRO__TEOF {_TEOF = -1,};
enum MACRO_cbDictPathMax {cbDictPathMax = 255,};
enum MACRO_cbRcUserMax {cbRcUserMax = 32,};
enum MACRO_cbRcrgbfAlcMax {cbRcrgbfAlcMax = 32,};
enum MACRO_chx1 {chx1 = 0x410,};
enum MACRO_chx10 {chx10 = 0x419,};
enum MACRO_chx11 {chx11 = 0x41A,};
enum MACRO_chx12 {chx12 = 0x41B,};
enum MACRO_chx13 {chx13 = 0x41C,};
enum MACRO_chx14 {chx14 = 0x41D,};
enum MACRO_chx15 {chx15 = 0x41E,};
enum MACRO_chx16 {chx16 = 0x41F,};
enum MACRO_chx2 {chx2 = 0x411,};
enum MACRO_chx3 {chx3 = 0x412,};
enum MACRO_chx4 {chx4 = 0x413,};
enum MACRO_chx5 {chx5 = 0x414,};
enum MACRO_chx6 {chx6 = 0x415,};
enum MACRO_chx7 {chx7 = 0x416,};
enum MACRO_chx8 {chx8 = 0x417,};
enum MACRO_chx9 {chx9 = 0x418,};
enum MACRO_cmb1 {cmb1 = 0x470,};
enum MACRO_cmb10 {cmb10 = 0x479,};
enum MACRO_cmb11 {cmb11 = 0x47A,};
enum MACRO_cmb12 {cmb12 = 0x47B,};
enum MACRO_cmb13 {cmb13 = 0x47C,};
enum MACRO_cmb14 {cmb14 = 0x47D,};
enum MACRO_cmb15 {cmb15 = 0x47E,};
enum MACRO_cmb16 {cmb16 = 0x47F,};
enum MACRO_cmb2 {cmb2 = 0x471,};
enum MACRO_cmb3 {cmb3 = 0x472,};
enum MACRO_cmb4 {cmb4 = 0x473,};
enum MACRO_cmb5 {cmb5 = 0x474,};
enum MACRO_cmb6 {cmb6 = 0x475,};
enum MACRO_cmb7 {cmb7 = 0x476,};
enum MACRO_cmb8 {cmb8 = 0x477,};
enum MACRO_cmb9 {cmb9 = 0x478,};
enum MACRO_ctlFirst {ctlFirst = 0x400,};
enum MACRO_ctlLast {ctlLast = 0x4FF,};
enum MACRO_cwRcReservedMax {cwRcReservedMax = 8,};
enum MACRO_edt1 {edt1 = 0x480,};
enum MACRO_edt10 {edt10 = 0x489,};
enum MACRO_edt11 {edt11 = 0x48A,};
enum MACRO_edt12 {edt12 = 0x48B,};
enum MACRO_edt13 {edt13 = 0x48C,};
enum MACRO_edt14 {edt14 = 0x48D,};
enum MACRO_edt15 {edt15 = 0x48E,};
enum MACRO_edt16 {edt16 = 0x48F,};
enum MACRO_edt2 {edt2 = 0x481,};
enum MACRO_edt3 {edt3 = 0x482,};
enum MACRO_edt4 {edt4 = 0x483,};
enum MACRO_edt5 {edt5 = 0x484,};
enum MACRO_edt6 {edt6 = 0x485,};
enum MACRO_edt7 {edt7 = 0x486,};
enum MACRO_edt8 {edt8 = 0x487,};
enum MACRO_edt9 {edt9 = 0x488,};
enum MACRO_frm1 {frm1 = 0x434,};
enum MACRO_frm2 {frm2 = 0x435,};
enum MACRO_frm3 {frm3 = 0x436,};
enum MACRO_frm4 {frm4 = 0x437,};
enum MACRO_grp1 {grp1 = 0x430,};
enum MACRO_grp2 {grp2 = 0x431,};
enum MACRO_grp3 {grp3 = 0x432,};
enum MACRO_grp4 {grp4 = 0x433,};
enum MACRO_iSycNull {iSycNull = -1,};
enum MACRO_ico1 {ico1 = 0x43C,};
enum MACRO_ico2 {ico2 = 0x43D,};
enum MACRO_ico3 {ico3 = 0x43E,};
enum MACRO_ico4 {ico4 = 0x43F,};
enum MACRO_idsAppName {idsAppName = 1007,};
enum MACRO_idsBadOldPW {idsBadOldPW = 1006,};
enum MACRO_idsChangePW {idsChangePW = 1005,};
enum MACRO_idsDifferentPW {idsDifferentPW = 1004,};
enum MACRO_idsHelpFile {idsHelpFile = 1009,};
enum MACRO_idsIniFile {idsIniFile = 1001,};
enum MACRO_idsIsPassword {idsIsPassword = 1000,};
enum MACRO_idsNoHelpMemory {idsNoHelpMemory = 1008,};
enum MACRO_idsPassword {idsPassword = 1003,};
enum MACRO_idsScreenSaver {idsScreenSaver = 1002,};
enum MACRO_lhSessionNull {lhSessionNull = 0,};
enum MACRO_lst1 {lst1 = 0x460,};
enum MACRO_lst10 {lst10 = 0x469,};
enum MACRO_lst11 {lst11 = 0x46A,};
enum MACRO_lst12 {lst12 = 0x46B,};
enum MACRO_lst13 {lst13 = 0x46C,};
enum MACRO_lst14 {lst14 = 0x46D,};
enum MACRO_lst15 {lst15 = 0x46E,};
enum MACRO_lst16 {lst16 = 0x46F,};
enum MACRO_lst2 {lst2 = 0x461,};
enum MACRO_lst3 {lst3 = 0x462,};
enum MACRO_lst4 {lst4 = 0x463,};
enum MACRO_lst5 {lst5 = 0x464,};
enum MACRO_lst6 {lst6 = 0x465,};
enum MACRO_lst7 {lst7 = 0x466,};
enum MACRO_lst8 {lst8 = 0x467,};
enum MACRO_lst9 {lst9 = 0x468,};
enum MACRO_psh1 {psh1 = 0x400,};
enum MACRO_psh10 {psh10 = 0x409,};
enum MACRO_psh11 {psh11 = 0x40A,};
enum MACRO_psh12 {psh12 = 0x40B,};
enum MACRO_psh13 {psh13 = 0x40C,};
enum MACRO_psh14 {psh14 = 0x40D,};
enum MACRO_psh15 {psh15 = 0x40E,};
enum MACRO_psh16 {psh16 = 0x40F,};
enum MACRO_psh2 {psh2 = 0x401,};
enum MACRO_psh3 {psh3 = 0x402,};
enum MACRO_psh4 {psh4 = 0x403,};
enum MACRO_psh5 {psh5 = 0x404,};
enum MACRO_psh6 {psh6 = 0x405,};
enum MACRO_psh7 {psh7 = 0x406,};
enum MACRO_psh8 {psh8 = 0x407,};
enum MACRO_psh9 {psh9 = 0x408,};
enum MACRO_pshHelp {pshHelp = 1038,};
enum MACRO_rad1 {rad1 = 0x420,};
enum MACRO_rad10 {rad10 = 0x429,};
enum MACRO_rad11 {rad11 = 0x42A,};
enum MACRO_rad12 {rad12 = 0x42B,};
enum MACRO_rad13 {rad13 = 0x42C,};
enum MACRO_rad14 {rad14 = 0x42D,};
enum MACRO_rad15 {rad15 = 0x42E,};
enum MACRO_rad16 {rad16 = 0x42F,};
enum MACRO_rad2 {rad2 = 0x421,};
enum MACRO_rad3 {rad3 = 0x422,};
enum MACRO_rad4 {rad4 = 0x423,};
enum MACRO_rad5 {rad5 = 0x424,};
enum MACRO_rad6 {rad6 = 0x425,};
enum MACRO_rad7 {rad7 = 0x426,};
enum MACRO_rad8 {rad8 = 0x427,};
enum MACRO_rad9 {rad9 = 0x428,};
enum MACRO_rct1 {rct1 = 0x438,};
enum MACRO_rct2 {rct2 = 0x439,};
enum MACRO_rct3 {rct3 = 0x43A,};
enum MACRO_rct4 {rct4 = 0x43B,};
enum MACRO_rmj {rmj = 0,rmm = 23,};
enum MACRO_rup {rup = 639,};
enum MACRO_scr1 {scr1 = 0x490,};
enum MACRO_scr2 {scr2 = 0x491,};
enum MACRO_scr3 {scr3 = 0x492,};
enum MACRO_scr4 {scr4 = 0x493,};
enum MACRO_scr5 {scr5 = 0x494,};
enum MACRO_scr6 {scr6 = 0x495,};
enum MACRO_scr7 {scr7 = 0x496,};
enum MACRO_scr8 {scr8 = 0x497,};
enum MACRO_stc1 {stc1 = 0x440,};
enum MACRO_stc10 {stc10 = 0x449,};
enum MACRO_stc11 {stc11 = 0x44A,};
enum MACRO_stc12 {stc12 = 0x44B,};
enum MACRO_stc13 {stc13 = 0x44C,};
enum MACRO_stc14 {stc14 = 0x44D,};
enum MACRO_stc15 {stc15 = 0x44E,};
enum MACRO_stc16 {stc16 = 0x44F,};
enum MACRO_stc17 {stc17 = 0x450,};
enum MACRO_stc18 {stc18 = 0x451,};
enum MACRO_stc19 {stc19 = 0x452,};
enum MACRO_stc2 {stc2 = 0x441,};
enum MACRO_stc20 {stc20 = 0x453,};
enum MACRO_stc21 {stc21 = 0x454,};
enum MACRO_stc22 {stc22 = 0x455,};
enum MACRO_stc23 {stc23 = 0x456,};
enum MACRO_stc24 {stc24 = 0x457,};
enum MACRO_stc25 {stc25 = 0x458,};
enum MACRO_stc26 {stc26 = 0x459,};
enum MACRO_stc27 {stc27 = 0x45A,};
enum MACRO_stc28 {stc28 = 0x45B,};
enum MACRO_stc29 {stc29 = 0x45C,};
enum MACRO_stc3 {stc3 = 0x442,};
enum MACRO_stc30 {stc30 = 0x45D,};
enum MACRO_stc31 {stc31 = 0x45E,};
enum MACRO_stc32 {stc32 = 0x45F,};
enum MACRO_stc4 {stc4 = 0x443,};
enum MACRO_stc5 {stc5 = 0x444,};
enum MACRO_stc6 {stc6 = 0x445,};
enum MACRO_stc7 {stc7 = 0x446,};
enum MACRO_stc8 {stc8 = 0x447,};
enum MACRO_stc9 {stc9 = 0x448,};
enum MACRO_wPntAll {wPntAll = 0xFFFF,};
typedef struct tagMAT2 MAT2;
typedef struct tagMCI_ANIM_OPEN_PARMS MCI_ANIM_OPEN_PARMS;
typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;
typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;
typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;
typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;
typedef struct tagMCI_ANIM_WINDOW_PARMS MCI_ANIM_WINDOW_PARMS;
typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;
typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;
typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;
typedef struct tagMCI_INFO_PARMS MCI_INFO_PARMS;
typedef struct tagMCI_LOAD_PARMS MCI_LOAD_PARMS;
typedef struct tagMCI_OPEN_PARMS MCI_OPEN_PARMS;
typedef struct tagMCI_OVLY_LOAD_PARMS MCI_OVLY_LOAD_PARMS;
typedef struct tagMCI_OVLY_OPEN_PARMS MCI_OVLY_OPEN_PARMS;
typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;
typedef struct tagMCI_OVLY_SAVE_PARMS MCI_OVLY_SAVE_PARMS;
typedef struct tagMCI_OVLY_WINDOW_PARMS MCI_OVLY_WINDOW_PARMS;
typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;
typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;
typedef struct tagMCI_SAVE_PARMS MCI_SAVE_PARMS;
typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;
typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;
typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;
typedef struct tagMCI_SOUND_PARMS MCI_SOUND_PARMS;
typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;
typedef struct tagMCI_SYSINFO_PARMS MCI_SYSINFO_PARMS;
typedef struct tagMCI_VD_ESCAPE_PARMS MCI_VD_ESCAPE_PARMS;
typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;
typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;
typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;
typedef struct tagMCI_WAVE_OPEN_PARMS MCI_WAVE_OPEN_PARMS;
typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;
typedef struct tagMDICREATESTRUCT MDICREATESTRUCT;
typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;
typedef DISPID MEMBERID;
typedef enum tagMEMCTX MEMCTX;
typedef struct tagMEMMANINFO MEMMANINFO;
typedef struct $549C1D5CD1C453772D3DFDF07CAC3EA1 MENUITEMTEMPLATE;
typedef struct $096A9CEC9D0640E3594D0A52C8C05E40 MENUITEMTEMPLATEHEADER;
typedef struct tagMETAFILEPICT METAFILEPICT;
typedef struct tagMETAHEADER METAHEADER;
typedef struct tagMETARECORD METARECORD;
typedef struct tagMETHODDATA METHODDATA;
typedef FARPROC MFENUMPROC;
typedef DRVCALLBACK MIDICALLBACK;
typedef struct midihdr_tag MIDIHDR;
typedef struct midiincaps_tag MIDIINCAPS;
typedef struct midioutcaps_tag MIDIOUTCAPS;
typedef struct tagMINMAXINFO MINMAXINFO;
typedef enum tagMKREDUCE MKRREDUCE;
typedef enum tagMKSYS MKSYS;
typedef struct _MMCKINFO MMCKINFO;
typedef struct _MMIOINFO MMIOINFO;
typedef LRESULT __pascal __far MMIOPROC(LPSTR lpmmioinfo, UINT uMessage, LPARAM lParam1, LPARAM lParam2);
typedef struct mmtime_tag MMTIME;
typedef struct tagMODULEENTRY MODULEENTRY;
typedef struct tagMONCBSTRUCT MONCBSTRUCT;
typedef struct tagMONCONVSTRUCT MONCONVSTRUCT;
typedef struct tagMONERRSTRUCT MONERRSTRUCT;
typedef struct tagMONHSZSTRUCT MONHSZSTRUCT;
typedef struct tagMONLINKSTRUCT MONLINKSTRUCT;
typedef struct tagMONMSGSTRUCT MONMSGSTRUCT;
typedef struct tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;
typedef struct tagMSG MSG;
typedef enum tagMSHCTX MSHCTX;
typedef enum tagMSHLFLAGS MSHLFLAGS;
typedef struct tagMULTIKEYHELP MULTIKEYHELP;
typedef struct $C7C46F6CCBD2CAD1FCFEC4764C87E3D1 MapiFileDesc;
typedef struct $42792D5BBA08C54B20EEEC50F78E7D08 MapiMessage;
typedef struct $CB9F4276D477D4EDC30066925B58EE0F MapiRecipDesc;
typedef struct tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;
typedef int (__pascal __near near *NEARPROC)();
typedef struct tagNEWCPLINFO NEWCPLINFO;
typedef struct tagNEWTEXTMETRIC NEWTEXTMETRIC;
typedef struct tagNFYLOADSEG NFYLOADSEG;
typedef struct tagNFYLOGERROR NFYLOGERROR;
typedef struct tagNFYLOGPARAMERROR NFYLOGPARAMERROR;
typedef struct tagNFYRIP NFYRIP;
typedef struct tagNFYSTARTDLL NFYSTARTDLL;
typedef AUXCAPS near *NPAUXCAPS;
typedef BITMAP near *NPBITMAP;
typedef DEVMODE near *NPDEVMODE;
typedef EVENTMSG near *NPEVENTMSG;
typedef JOYCAPS near *NPJOYCAPS;
typedef JOYINFO near *NPJOYINFO;
typedef LOGBRUSH near *NPLOGBRUSH;
typedef LOGFONT near *NPLOGFONT;
typedef LOGPALETTE near *NPLOGPALETTE;
typedef LOGPEN near *NPLOGPEN;
typedef MIDIHDR near *NPMIDIHDR;
typedef MIDIINCAPS near *NPMIDIINCAPS;
typedef MIDIOUTCAPS near *NPMIDIOUTCAPS;
typedef MMCKINFO near *NPMMCKINFO;
typedef MMIOINFO near *NPMMIOINFO;
typedef MMTIME near *NPMMTIME;
typedef MSG near *NPMSG;
typedef NEWTEXTMETRIC near *NPNEWTEXTMETRIC;
typedef OFSTRUCT near *NPOFSTRUCT;
typedef PAINTSTRUCT near *NPPAINTSTRUCT;
typedef PATTERN near *NPPATTERN;
typedef PCMWAVEFORMAT near *NPPCMWAVEFORMAT;
typedef POINT near *NPPOINT;
typedef RECT near *NPRECT;
typedef SIZE near *NPSIZE;
typedef char near *NPSTR;
typedef TEXTMETRIC near *NPTEXTMETRIC;
typedef TIMECAPS near *NPTIMECAPS;
typedef WAVEFORMAT near *NPWAVEFORMAT;
typedef WAVEHDR near *NPWAVEHDR;
typedef WAVEINCAPS near *NPWAVEINCAPS;
typedef WAVEOUTCAPS near *NPWAVEOUTCAPS;
typedef WNDCLASS near *NPWNDCLASS;
typedef struct tagOBJECTDESCRIPTOR OBJECTDESCRIPTOR;
typedef struct tagOEMPENINFO OEMPENINFO;
typedef struct tagOFSTRUCT OFSTRUCT;
typedef FARPROC OLDFONTENUMPROC;
typedef enum tagOLECLOSE OLECLOSE;
typedef enum tagOLECONTF OLECONTF;
typedef enum tagOLEGETMONIKER OLEGETMONIKER;
typedef struct tagOIFI OLEINPLACEFRAMEINFO;
typedef enum tagOLELINKBIND OLELINKBIND;
typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;
typedef enum tagOLEMISC OLEMISC;
typedef enum tagOLERENDER OLERENDER;
typedef struct _OLESTREAM OLESTREAM;
typedef struct _OLESTREAMVTBL OLESTREAMVTBL;
typedef struct tagOLEUIBUSY OLEUIBUSY;
typedef struct tagOLEUICHANGEICON OLEUICHANGEICON;
typedef struct tagOLEUICONVERT OLEUICONVERT;
typedef struct tagOLEUIEDITLINKS OLEUIEDITLINKS;
typedef struct tagOLEUIINSERTOBJECT OLEUIINSERTOBJECT;
typedef struct tagOLEUIPASTEENTRY OLEUIPASTEENTRY;
typedef enum tagOLEUIPASTEFLAG OLEUIPASTEFLAG;
typedef struct tagOLEUIPASTESPECIAL OLEUIPASTESPECIAL;
typedef enum tagOLEUPDATE OLEUPDATE;
typedef struct tagOLEVERB OLEVERB;
typedef enum tagOLEVERBATTRIB OLEVERBATTRIB;
typedef enum tagOLEWHICHMK OLEWHICHMK;
typedef struct tagOFN OPENFILENAME;
typedef struct tagOUTLINETEXTMETRIC OUTLINETEXTMETRIC;
typedef struct tagPAINTSTRUCT PAINTSTRUCT;
typedef struct tagPALETTEENTRY PALETTEENTRY;
typedef struct tagPANOSE PANOSE;
typedef struct tagPARAMDATA PARAMDATA;
typedef WORD PATCHARRAY[128];
typedef LOGBRUSH PATTERN;
typedef AUXCAPS *PAUXCAPS;
typedef BITMAP *PBITMAP;
typedef BITMAPCOREHEADER *PBITMAPCOREHEADER;
typedef BITMAPCOREINFO *PBITMAPCOREINFO;
typedef BITMAPFILEHEADER *PBITMAPFILEHEADER;
typedef BITMAPINFO *PBITMAPINFO;
typedef BITMAPINFOHEADER *PBITMAPINFOHEADER;
typedef BYTE near *PBYTE;
typedef struct pcmwaveformat_tag PCMWAVEFORMAT;
typedef COMPAREITEMSTRUCT near *PCOMPAREITEMSTRUCT;
typedef CONVCONTEXT far *PCONVCONTEXT;
typedef CONVINFO far *PCONVINFO;
typedef struct tagCPLINFO *PCPLINFO;
typedef CTLINFO *PCTLINFO;
typedef CTLSTYLE *PCTLSTYLE;
typedef DELETEITEMSTRUCT near *PDELETEITEMSTRUCT;
typedef DEVMODE *PDEVMODE;
typedef DRAWITEMSTRUCT near *PDRAWITEMSTRUCT;
typedef DRVCONFIGINFO near *PDRVCONFIGINFO;
typedef DWORD near *PDWORD;
typedef struct tagPENDATAHEADER PENDATAHEADER;
typedef enum tagPENDINGMSG PENDINGMSG;
typedef enum tagPENDINGTYPE PENDINGTYPE;
typedef struct tagPENINFO PENINFO;
typedef struct tagPENPACKET PENPACKET;
typedef EVENTMSG *PEVENTMSG;
typedef struct fd_set *PFD_SET;
typedef FNCALLBACK *PFNCALLBACK;
typedef HANDLE *PHANDLE;
typedef HANDLETABLE *PHANDLETABLE;
typedef HELPWININFO near *PHELPWININFO;
typedef HKEY far *PHKEY;
typedef struct hostent *PHOSTENT;
typedef HSZPAIR far *PHSZPAIR;
typedef int near *PINT;
typedef struct in_addr *PIN_ADDR;
typedef JOYCAPS *PJOYCAPS;
typedef JOYINFO *PJOYINFO;
typedef struct _LARGE_INTEGER *PLARGE_INTEGER;
typedef struct linger *PLINGER;
typedef struct tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;
typedef LOGBRUSH *PLOGBRUSH;
typedef LOGFONT *PLOGFONT;
typedef LOGPALETTE *PLOGPALETTE;
typedef LOGPEN *PLOGPEN;
typedef __int32 near *PLONG;
typedef MEASUREITEMSTRUCT near *PMEASUREITEMSTRUCT;
typedef METARECORD *PMETARECORD;
typedef MIDIHDR *PMIDIHDR;
typedef MIDIINCAPS *PMIDIINCAPS;
typedef MIDIOUTCAPS *PMIDIOUTCAPS;
typedef MMCKINFO *PMMCKINFO;
typedef MMIOINFO *PMMIOINFO;
typedef MMTIME *PMMTIME;
typedef MSG *PMSG;
typedef struct tagNEWCPLINFO *PNEWCPLINFO;
typedef NEWTEXTMETRIC *PNEWTEXTMETRIC;
typedef struct tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;
typedef OFSTRUCT *POFSTRUCT;
typedef struct tagPOINT POINT;
typedef struct tagPOINTFX POINTFX;
typedef struct tagPOINTL POINTL;
typedef struct tagOLEUIBUSY *POLEUIBUSY;
typedef struct tagOLEUICHANGEICON *POLEUICHANGEICON;
typedef struct tagOLEUICONVERT *POLEUICONVERT;
typedef struct tagOLEUIEDITLINKS *POLEUIEDITLINKS;
typedef struct tagOLEUIINSERTOBJECT *POLEUIINSERTOBJECT;
typedef struct tagOLEUIPASTEENTRY *POLEUIPASTEENTRY;
typedef struct tagOLEUIPASTESPECIAL *POLEUIPASTESPECIAL;
typedef PAINTSTRUCT *PPAINTSTRUCT;
typedef PATTERN *PPATTERN;
typedef PCMWAVEFORMAT *PPCMWAVEFORMAT;
typedef POINT *PPOINT;
typedef struct protoent *PPROTOENT;
typedef RECT *PRECT;
typedef struct tagPD PRINTDLG;
typedef FARPROC PROPENUMPROC;
typedef struct protoent PROTOENT;
typedef SCODE *PSCODE;
typedef struct servent *PSERVENT;
typedef SIZE *PSIZE;
typedef struct sockaddr *PSOCKADDR;
typedef struct sockaddr_in *PSOCKADDR_IN;
typedef char near *PSTR;
typedef TEXTMETRIC *PTEXTMETRIC;
typedef TIMECAPS *PTIMECAPS;
typedef struct timeval *PTIMEVAL;
typedef void far *PTR;
typedef struct _ULARGE_INTEGER *PULARGE_INTEGER;
typedef void *PVOID;
typedef WAVEFORMAT *PWAVEFORMAT;
typedef WAVEHDR *PWAVEHDR;
typedef WAVEINCAPS *PWAVEINCAPS;
typedef WAVEOUTCAPS *PWAVEOUTCAPS;
typedef WINDOWPLACEMENT *PWINDOWPLACEMENT;
typedef WNDCLASS *PWNDCLASS;
typedef WORD near *PWORD;
typedef struct tagRASTERIZER_STATUS RASTERIZER_STATUS;
typedef struct tagRC RC;
typedef struct tagRCRESULT RCRESULT;
typedef BOOL (__pascal __far far *RCYIELDPROC)();
typedef int REC;
typedef struct tagRECT RECT;
typedef struct tagRECTL RECTL;
typedef struct tagRECTOFS RECTOFS;
typedef enum tagREGCLS REGCLS;
typedef signed int RETCODE;
typedef struct tagRGBQUAD RGBQUAD;
typedef struct tagRGBTRIPLE RGBTRIPLE;
typedef FARPROC RSRCHDLRPROC;
typedef struct tagSAFEARRAY SAFEARRAY;
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;
typedef signed __int8 SCHAR;
typedef __int32 SCODE;
typedef struct tagSCREENPARAMS SCREENPARAMS;
typedef double SDOUBLE;
typedef __int32 SDWORD;
typedef struct tagSEGINFO SEGINFO;
typedef struct servent SERVENT;
typedef enum tagSERVERCALL SERVERCALL;
typedef float SFLOAT;
typedef int SHORT;
typedef struct tagSIZE SIZE;
typedef struct tagSIZEL SIZEL;
typedef struct tagSKBINFO SKBINFO;
typedef signed __int32 SLONG;
typedef char far * far *SNB;
typedef struct sockaddr SOCKADDR;
typedef struct sockaddr_in SOCKADDR_IN;
typedef u_int SOCKET;
typedef HANDLE near *SPHANDLE;
typedef signed int SSHORT;
typedef struct tagSTACKTRACEENTRY STACKTRACEENTRY;
typedef struct tagSTATDATA STATDATA;
typedef enum tagSTATFLAG STATFLAG;
typedef struct tagSTATSTG STATSTG;
typedef enum tagSTGC STGC;
typedef struct tagSTGMEDIUM STGMEDIUM;
typedef enum tagSTGMOVE STGMOVE;
typedef enum tagSTGTY STGTY;
typedef enum tagSTREAM_SEEK STREAM_SEEK;
typedef struct tagSTROKEINFO STROKEINFO;
typedef int SWORD;
typedef struct tagSYC SYC;
typedef struct tagSYE SYE;
typedef struct tagSYG SYG;
typedef struct tagSYSHEAPINFO SYSHEAPINFO;
typedef enum tagSYSKIND SYSKIND;
typedef __int32 SYV;
typedef struct tagTASKENTRY TASKENTRY;
typedef char TCHAR;
typedef struct tagTEXTMETRIC TEXTMETRIC;
typedef void __pascal __far TIMECALLBACK(UINT uTimerID, UINT uMessage, DWORD dwUser, DWORD dw1, DWORD dw2);
typedef struct timecaps_tag TIMECAPS;
typedef struct tagTIMERINFO TIMERINFO;
typedef FARPROC TIMERPROC;
typedef struct tagTIMESTAMP_STRUCT TIMESTAMP_STRUCT;
typedef struct timeval TIMEVAL;
typedef struct tagTIME_STRUCT TIME_STRUCT;
typedef struct tagTLIBATTR TLIBATTR;
typedef struct tagTTPOLYCURVE TTPOLYCURVE;
typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;
typedef enum tagTYMED TYMED;
typedef struct tagTYPEATTR TYPEATTR;
typedef struct tagTYPEDESC TYPEDESC;
typedef enum tagTYPEFLAGS TYPEFLAGS;
typedef enum tagTYPEKIND TYPEKIND;
typedef unsigned __int8 UCHAR;
typedef unsigned __int32 UDWORD;
typedef unsigned int UINT;
typedef struct _ULARGE_INTEGER ULARGE_INTEGER;
typedef DWORD ULONG;
typedef enum tagUSERCLASSTYPE USERCLASSTYPE;
typedef unsigned int USHORT;
typedef unsigned int UWORD;
typedef struct tagVARDESC VARDESC;
enum VARENUM {VT_EMPTY = 0x0,VT_NULL = 0x1,VT_I2 = 0x2,VT_I4 = 0x3,VT_R4 = 0x4,VT_R8 = 0x5,VT_CY = 0x6,VT_DATE = 0x7,VT_BSTR = 0x8,VT_DISPATCH = 0x9,VT_ERROR = 0xA,VT_BOOL = 0xB,VT_VARIANT = 0xC,VT_UNKNOWN = 0xD,VT_I1 = 0x10,VT_UI1 = 0x11,VT_UI2 = 0x12,VT_UI4 = 0x13,VT_I8 = 0x14,VT_UI8 = 0x15,VT_INT = 0x16,VT_UINT = 0x17,VT_VOID = 0x18,VT_HRESULT = 0x19,VT_PTR = 0x1A,VT_SAFEARRAY = 0x1B,VT_CARRAY = 0x1C,VT_USERDEFINED = 0x1D,VT_LPSTR = 0x1E,VT_LPWSTR = 0x1F,VT_FILETIME = 0x40,VT_BLOB = 0x41,VT_STREAM = 0x42,VT_STORAGE = 0x43,VT_STREAMED_OBJECT = 0x44,VT_STORED_OBJECT = 0x45,VT_BLOB_OBJECT = 0x46,VT_CF = 0x47,VT_CLSID = 0x48,};
typedef enum tagVARFLAGS VARFLAGS;
typedef struct tagVARIANT VARIANT;
typedef struct tagVARIANT VARIANTARG;
typedef int VARIANT_BOOL;
typedef enum tagVARKIND VARKIND;
typedef unsigned int VARTYPE;
typedef WORD VERSION;
typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;
typedef DRVCALLBACK WAVECALLBACK;
typedef struct waveformat_tag WAVEFORMAT;
typedef struct wavehdr_tag WAVEHDR;
typedef struct waveincaps_tag WAVEINCAPS;
typedef struct waveoutcaps_tag WAVEOUTCAPS;
typedef WORD WCHAR;
typedef struct tagWINDEBUGINFO WINDEBUGINFO;
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;
typedef struct tagWINDOWPOS WINDOWPOS;
typedef struct tagWNDCLASS WNDCLASS;
typedef FARPROC WNDENUMPROC;
typedef LRESULT (__pascal __far far *WNDPROC)(HWND, UINT, WPARAM, LPARAM);
typedef unsigned int WORD;
typedef UINT WPARAM;
typedef struct WSAData WSADATA;
struct WSAData {WORD wVersion;WORD wHighVersion;char szDescription[257];char szSystemStatus[129];unsigned int iMaxSockets;unsigned int iMaxUdpDg;char far *lpVendorInfo;};
typedef UINT (__pascal __far far *YIELDPROC)(UINT uDeviceID, DWORD dwYieldData);
struct _LARGE_INTEGER {DWORD LowPart;__int32 HighPart;};
struct _MMCKINFO {FOURCC ckid;DWORD cksize;FOURCC fccType;DWORD dwDataOffset;DWORD dwFlags;};
struct _MMIOINFO {DWORD dwFlags;FOURCC fccIOProc;LPMMIOPROC pIOProc;UINT wErrorRet;HTASK htask;__int32 cchBuffer;HPSTR pchBuffer;HPSTR pchNext;HPSTR pchEndRead;HPSTR pchEndWrite;__int32 lBufOffset;__int32 lDiskOffset;DWORD adwInfo[3];DWORD dwReserved1;DWORD dwReserved2;HMMIO hmmio;};
struct _OLESTREAM {LPOLESTREAMVTBL lpstbl;};
struct _OLESTREAMVTBL {DWORD (__pascal __far far *Get)(LPOLESTREAM, void far *, DWORD);DWORD (__pascal __far far *Put)(LPOLESTREAM, const void far *, DWORD);};
typedef char _TCHAR;
typedef int _TINT;
typedef signed __int8 _TSCHAR;
typedef unsigned __int8 _TUCHAR;
typedef char _TXCHAR;
struct _ULARGE_INTEGER {DWORD LowPart;DWORD HighPart;};
struct auxcaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];UINT wTechnology;DWORD dwSupport;};
struct fd_set {u_int fd_count;SOCKET fd_array[64];};
struct hostent {char far *h_name;char far * far *h_aliases;int h_addrtype;int h_length;char far * far *h_addr_list;};
struct in_addr {union in_addr::$C13EC994467D6E67044F092615EC7EA9 S_un;};
union in_addr::$C13EC994467D6E67044F092615EC7EA9 {struct in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0 S_un_b;struct in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5 S_un_w;u_long S_addr;};
struct in_addr::$C13EC994467D6E67044F092615EC7EA9::$01C175C1F0716DCA00314EDD79DBC0A0 {u_char s_b1;u_char s_b2;u_char s_b3;u_char s_b4;};
struct in_addr::$C13EC994467D6E67044F092615EC7EA9::$4DE764E669F663DACA3CBFDE73714CB5 {u_short s_w1;u_short s_w2;};
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
struct joycaps_tag {UINT wMid;UINT wPid;char szPname[32];UINT wXmin;UINT wXmax;UINT wYmin;UINT wYmax;UINT wZmin;UINT wZmax;UINT wNumButtons;UINT wPeriodMin;UINT wPeriodMax;};
struct joyinfo_tag {UINT wXpos;UINT wYpos;UINT wZpos;UINT wButtons;};
struct linger {u_short l_onoff;u_short l_linger;};
typedef struct $C7C46F6CCBD2CAD1FCFEC4764C87E3D1 far *lpMapiFileDesc;
typedef struct $42792D5BBA08C54B20EEEC50F78E7D08 far *lpMapiMessage;
typedef struct $CB9F4276D477D4EDC30066925B58EE0F far *lpMapiRecipDesc;
struct midihdr_tag {LPSTR lpData;DWORD dwBufferLength;DWORD dwBytesRecorded;DWORD dwUser;DWORD dwFlags;struct midihdr_tag far *lpNext;DWORD reserved;};
struct midiincaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];};
struct midioutcaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];UINT wTechnology;UINT wVoices;UINT wNotes;UINT wChannelMask;DWORD dwSupport;};
struct mmtime_tag {UINT wType;union mmtime_tag::$A8B4E596CBBC1C776453B8AC11D09F49 u;};
union mmtime_tag::$A8B4E596CBBC1C776453B8AC11D09F49 {DWORD ms;DWORD sample;DWORD cb;struct mmtime_tag::$A8B4E596CBBC1C776453B8AC11D09F49::$77546E6DA24DBEE74453C7AE7BAE240D smpte;struct mmtime_tag::$A8B4E596CBBC1C776453B8AC11D09F49::$B7A2B1CE967584EBB3840978181CF21D midi;};
struct mmtime_tag::$A8B4E596CBBC1C776453B8AC11D09F49::$77546E6DA24DBEE74453C7AE7BAE240D {BYTE hour;BYTE min;BYTE sec;BYTE frame;BYTE fps;BYTE dummy;};
struct mmtime_tag::$A8B4E596CBBC1C776453B8AC11D09F49::$B7A2B1CE967584EBB3840978181CF21D {DWORD songptrpos;};
struct netent {char far *n_name;char far * far *n_aliases;int n_addrtype;u_long n_net;};
struct pcmwaveformat_tag {WAVEFORMAT wf;WORD wBitsPerSample;};
struct protoent {char far *p_name;char far * far *p_aliases;int p_proto;};
struct servent {char far *s_name;char far * far *s_aliases;int s_port;char far *s_proto;};
struct sockaddr {u_short sa_family;char sa_data[14];};
struct sockaddr_in {int sin_family;u_short sin_port;struct in_addr sin_addr;char sin_zero[8];};
struct sockproto {u_short sp_family;u_short sp_protocol;};
struct tagABC {int abcA;UINT abcB;int abcC;};
enum tagADVF {ADVF_NODATA = 0x1,ADVF_PRIMEFIRST = 0x2,ADVF_ONLYONCE = 0x4,ADVF_DATAONSTOP = 0x40,ADVFCACHE_NOHANDLER = 0x8,ADVFCACHE_FORCEBUILTIN = 0x10,ADVFCACHE_ONSAVE = 0x20,};
struct tagARRAYDESC {TYPEDESC tdescElem;unsigned int cDims;SAFEARRAYBOUND rgbounds[1];};
struct tagBANDINFOSTRUCT {BOOL fGraphics;BOOL fText;RECT rcGraphics;};
union tagBINDPTR {FUNCDESC far *lpfuncdesc;VARDESC far *lpvardesc;ITypeComp far *lptcomp;};
enum tagBINDSPEED {BINDSPEED_INDEFINITE = 0x1,BINDSPEED_MODERATE = 0x2,BINDSPEED_IMMEDIATE = 0x3,};
struct tagBIND_OPTS {DWORD cbStruct;DWORD grfFlags;DWORD grfMode;DWORD dwTickCountDeadline;};
struct tagBITMAP {int bmType;int bmWidth;int bmHeight;int bmWidthBytes;BYTE bmPlanes;BYTE bmBitsPixel;void far *bmBits;};
struct tagBITMAPCOREHEADER {DWORD bcSize;int bcWidth;int bcHeight;WORD bcPlanes;WORD bcBitCount;};
struct tagBITMAPCOREINFO {BITMAPCOREHEADER bmciHeader;RGBTRIPLE bmciColors[1];};
struct tagBITMAPFILEHEADER {UINT bfType;DWORD bfSize;UINT bfReserved1;UINT bfReserved2;DWORD bfOffBits;};
struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader;RGBQUAD bmiColors[1];};
struct tagBITMAPINFOHEADER {DWORD biSize;__int32 biWidth;__int32 biHeight;WORD biPlanes;WORD biBitCount;DWORD biCompression;DWORD biSizeImage;__int32 biXPelsPerMeter;__int32 biYPelsPerMeter;DWORD biClrUsed;DWORD biClrImportant;};
struct tagBOXLAYOUT {int cyCusp;int cyEndCusp;UINT style;DWORD rgbText;DWORD rgbBox;DWORD rgbSelect;};
struct tagCALBSTRUCT {int wOffsetX;int wOffsetY;int wDistinctWidth;int wDistinctHeight;};
enum tagCALLCONV {CC_CDECL = 0x1,CC_MSCPASCAL = 0x2,CC_PASCAL = 0x2,CC_MACPASCAL = 0x3,CC_STDCALL = 0x4,CC_RESERVED = 0x5,CC_SYSCALL = 0x6,CC_MAX = 0x7,};
enum tagCALLTYPE {CALLTYPE_TOPLEVEL = 0x1,CALLTYPE_NESTED = 0x2,CALLTYPE_ASYNC = 0x3,CALLTYPE_TOPLEVEL_CALLPENDING = 0x4,CALLTYPE_ASYNC_CALLPENDING = 0x5,};
struct tagCBTACTIVATESTRUCT {BOOL fMouse;HWND hWndActive;};
struct tagCBT_CREATEWND {CREATESTRUCT far *lpcs;HWND hwndInsertAfter;};
struct tagCHOOSECOLOR {DWORD lStructSize;HWND hwndOwner;HWND hInstance;COLORREF rgbResult;COLORREF far *lpCustColors;DWORD Flags;LPARAM lCustData;UINT (__pascal __far far *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;};
struct tagCHOOSEFONT {DWORD lStructSize;HWND hwndOwner;HDC hDC;LOGFONT far *lpLogFont;int iPointSize;DWORD Flags;COLORREF rgbColors;LPARAM lCustData;UINT (__pascal __far far *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;HINSTANCE hInstance;LPSTR lpszStyle;UINT nFontType;int nSizeMin;int nSizeMax;};
struct tagCLASSENTRY {DWORD dwSize;HMODULE hInst;char szClassName[256];WORD wNext;};
struct tagCLIENTCREATESTRUCT {HMENU hWindowMenu;UINT idFirstChild;};
enum tagCLSCTX {CLSCTX_INPROC_SERVER = 0x1,CLSCTX_INPROC_HANDLER = 0x2,CLSCTX_LOCAL_SERVER = 0x4,};
struct tagCOMPAREITEMSTRUCT {UINT CtlType;UINT CtlID;HWND hwndItem;UINT itemID1;DWORD itemData1;UINT itemID2;DWORD itemData2;};
struct tagCOMSTAT {BYTE status;UINT cbInQue;UINT cbOutQue;};
struct tagCONVCONTEXT {UINT cb;UINT wFlags;UINT wCountryID;int iCodePage;DWORD dwLangID;DWORD dwSecurity;};
struct tagCONVINFO {DWORD cb;DWORD hUser;HCONV hConvPartner;HSZ hszSvcPartner;HSZ hszServiceReq;HSZ hszTopic;HSZ hszItem;UINT wFmt;UINT wType;UINT wStatus;UINT wConvst;UINT wLastError;HCONVLIST hConvList;CONVCONTEXT ConvCtxt;};
struct tagCPLINFO {int idIcon;int idName;int idInfo;__int32 lData;};
struct tagCREATESTRUCT {void far *lpCreateParams;HINSTANCE hInstance;HMENU hMenu;HWND hwndParent;int cy;int cx;int y;int x;__int32 style;LPCSTR lpszName;LPCSTR lpszClass;DWORD dwExStyle;};
struct tagCTLINFO {UINT wVersion;UINT wCtlTypes;char szClass[20];char szTitle[94];char szReserved[10];CTLTYPE Type[12];};
struct tagCTLSTYLE {UINT wX;UINT wY;UINT wCx;UINT wCy;UINT wId;DWORD dwStyle;char szClass[20];char szTitle[94];};
struct tagCTLTYPE {UINT wType;UINT wWidth;UINT wHeight;DWORD dwStyle;char szDescr[22];};
struct tagCY {unsigned __int32 Lo;__int32 Hi;};
enum tagDATADIR {DATADIR_GET = 0x1,DATADIR_SET = 0x2,};
struct tagDATE_STRUCT {SWORD year;UWORD month;UWORD day;};
struct tagDCB {BYTE Id;UINT BaudRate;BYTE ByteSize;BYTE Parity;BYTE StopBits;UINT RlsTimeout;UINT CtsTimeout;UINT DsrTimeout;unsigned __int16 fBinary : 1;unsigned __int16 fRtsDisable : 1;unsigned __int16 fParity : 1;unsigned __int16 fOutxCtsFlow : 1;unsigned __int16 fOutxDsrFlow : 1;unsigned __int16 fDummy : 2;unsigned __int16 fDtrDisable : 1;unsigned __int16 fOutX : 1;unsigned __int16 fInX : 1;unsigned __int16 fPeChar : 1;unsigned __int16 fNull : 1;unsigned __int16 fChEvt : 1;unsigned __int16 fDtrflow : 1;unsigned __int16 fRtsflow : 1;unsigned __int16 fDummy2 : 1;char XonChar;char XoffChar;UINT XonLim;UINT XoffLim;char PeChar;char EofChar;char EvtChar;UINT TxDelay;};
struct tagDDEACK {unsigned __int16 bAppReturnCode : 8;unsigned __int16 reserved : 6;unsigned __int16 fBusy : 1;unsigned __int16 fAck : 1;};
struct tagDDEADVISE {unsigned __int16 reserved : 14;unsigned __int16 fDeferUpd : 1;unsigned __int16 fAckReq : 1;int cfFormat;};
struct tagDDEDATA {unsigned __int16 unused : 12;unsigned __int16 fResponse : 1;unsigned __int16 fRelease : 1;unsigned __int16 reserved : 1;unsigned __int16 fAckReq : 1;int cfFormat;BYTE Value[1];};
struct tagDDELN {unsigned __int16 unused : 13;unsigned __int16 fRelease : 1;unsigned __int16 fDeferUpd : 1;unsigned __int16 fAckReq : 1;int cfFormat;};
struct tagDDEPOKE {unsigned __int16 unused : 13;unsigned __int16 fRelease : 1;unsigned __int16 fReserved : 2;int cfFormat;BYTE Value[1];};
struct tagDDEUP {unsigned __int16 unused : 12;unsigned __int16 fAck : 1;unsigned __int16 fRelease : 1;unsigned __int16 fReserved : 1;unsigned __int16 fAckReq : 1;int cfFormat;BYTE rgb[1];};
struct tagDEBUGHOOKINFO {HMODULE hModuleHook;LPARAM reserved;LPARAM lParam;WPARAM wParam;int code;};
struct tagDELETEITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;HWND hwndItem;DWORD itemData;};
enum tagDESCKIND {DESCKIND_NONE = 0x0,DESCKIND_FUNCDESC = 0x1,DESCKIND_VARDESC = 0x2,DESCKIND_TYPECOMP = 0x3,DESCKIND_IMPLICITAPPOBJ = 0x4,DESCKIND_MAX = 0x5,};
struct tagDEVMODE {char dmDeviceName[32];UINT dmSpecVersion;UINT dmDriverVersion;UINT dmSize;UINT dmDriverExtra;DWORD dmFields;int dmOrientation;int dmPaperSize;int dmPaperLength;int dmPaperWidth;int dmScale;int dmCopies;int dmDefaultSource;int dmPrintQuality;int dmColor;int dmDuplex;int dmYResolution;int dmTTOption;};
struct tagDEVNAMES {UINT wDriverOffset;UINT wDeviceOffset;UINT wOutputOffset;UINT wDefault;};
enum tagDISCARDCACHE {DISCARDCACHE_SAVEIFDIRTY = 0x0,DISCARDCACHE_NOSAVE = 0x1,};
struct tagDISPPARAMS {VARIANTARG far *rgvarg;DISPID far *rgdispidNamedArgs;unsigned int cArgs;unsigned int cNamedArgs;};
struct tagDRAWITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;UINT itemAction;UINT itemState;HWND hwndItem;HDC hDC;RECT rcItem;DWORD itemData;};
struct tagDRIVERINFOSTRUCT {UINT length;HDRVR hDriver;HINSTANCE hModule;char szAliasName[128];};
struct tagDRVCONFIGINFO {DWORD dwDCISize;LPCSTR lpszDCISectionName;LPCSTR lpszDCIAliasName;};
enum tagDVASPECT {DVASPECT_CONTENT = 0x1,DVASPECT_THUMBNAIL = 0x2,DVASPECT_ICON = 0x4,DVASPECT_DOCPRINT = 0x8,};
struct tagDVTARGETDEVICE {DWORD tdSize;WORD tdDriverNameOffset;WORD tdDeviceNameOffset;WORD tdPortNameOffset;WORD tdExtDevmodeOffset;BYTE tdData[1];};
struct tagELEMDESC {TYPEDESC tdesc;IDLDESC idldesc;};
struct tagENUMLOGFONT {LOGFONT elfLogFont;char elfFullName[64];char elfStyle[32];};
struct tagEVENTMSG {UINT message;UINT paramL;UINT paramH;DWORD time;};
struct tagEXCEPINFO {unsigned int wCode;unsigned int wReserved;BSTR bstrSource;BSTR bstrDescription;BSTR bstrHelpFile;unsigned __int32 dwHelpContext;void far *pvReserved;HRESULT (__pascal __far far *pfnDeferredFillIn)(struct tagEXCEPINFO far *);SCODE scode;};
enum tagEXTCONN {EXTCONN_STRONG = 0x1,};
struct tagFILETIME {DWORD dwLowDateTime;DWORD dwHighDateTime;};
struct tagFINDREPLACE {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;DWORD Flags;LPSTR lpstrFindWhat;LPSTR lpstrReplaceWith;UINT wFindWhatLen;UINT wReplaceWithLen;LPARAM lCustData;UINT (__pascal __far far *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;};
struct tagFIXED {UINT fract;int value;};
struct tagFMS_GETDRIVEINFO {DWORD dwTotalSpace;DWORD dwFreeSpace;char szPath[260];char szVolume[14];char szShare[128];};
struct tagFMS_GETFILESEL {UINT wTime;UINT wDate;DWORD dwSize;BYTE bAttr;char szName[260];};
struct tagFMS_LOAD {DWORD dwSize;char szMenuName[40];HMENU hMenu;UINT wMenuDelta;};
struct tagFORMATETC {CLIPFORMAT cfFormat;DVTARGETDEVICE far *ptd;DWORD dwAspect;__int32 lindex;DWORD tymed;};
struct tagFUNCDESC {MEMBERID memid;SCODE far *lprgscode;ELEMDESC far *lprgelemdescParam;FUNCKIND funckind;INVOKEKIND invkind;CALLCONV callconv;int cParams;int cParamsOpt;int oVft;int cScodes;ELEMDESC elemdescFunc;unsigned int wFuncFlags;};
enum tagFUNCFLAGS {FUNCFLAG_FRESTRICTED = 0x1,};
enum tagFUNCKIND {FUNC_VIRTUAL = 0x0,FUNC_PUREVIRTUAL = 0x1,FUNC_NONVIRTUAL = 0x2,FUNC_STATIC = 0x3,FUNC_DISPATCH = 0x4,};
struct tagGLOBALENTRY {DWORD dwSize;DWORD dwAddress;DWORD dwBlockSize;HGLOBAL hBlock;WORD wcLock;WORD wcPageLock;WORD wFlags;BOOL wHeapPresent;HGLOBAL hOwner;WORD wType;WORD wData;DWORD dwNext;DWORD dwNextAlt;};
struct tagGLOBALINFO {DWORD dwSize;WORD wcItems;WORD wcItemsFree;WORD wcItemsLRU;};
struct tagGLYPHMETRICS {UINT gmBlackBoxX;UINT gmBlackBoxY;POINT gmptGlyphOrigin;int gmCellIncX;int gmCellIncY;};
struct tagGUIDE {int xOrigin;int yOrigin;int cxBox;int cyBox;int cxBase;int cyBase;int cHorzBox;int cVertBox;int cyMid;};
struct tagHANDLETABLE {HGDIOBJ objectHandle[1];};
struct tagHARDWAREHOOKSTRUCT {HWND hWnd;UINT wMessage;WPARAM wParam;LPARAM lParam;};
struct tagHSZPAIR {HSZ hszSvc;HSZ hszTopic;};
struct tagIDLDESC {BSTR bstrIDLInfo;unsigned int wIDLFlags;};
struct tagINTERFACEDATA {METHODDATA far *pmethdata;unsigned int cMembers;};
struct tagINTERFACEIMPL {IUnknownVtbl far *lpVtbl;LPVOID lpBack;int cRef;};
struct tagINTERFACEINFO {struct IUnknown far *pUnk;IID iid;WORD wMethod;};
enum tagINVOKEKIND {INVOKE_FUNC = 0x1,INVOKE_PROPERTYGET = 0x2,INVOKE_PROPERTYPUT = 0x4,INVOKE_PROPERTYPUTREF = 0x8,};
struct tagKERNINGPAIR {WORD wFirst;WORD wSecond;int iKernAmount;};
enum tagLIBFLAGS {LIBFLAG_FRESTRICTED = 0x1,};
struct tagLOCALENTRY {DWORD dwSize;HLOCAL hHandle;WORD wAddress;WORD wSize;WORD wFlags;WORD wcLock;WORD wType;WORD hHeap;WORD wHeapType;WORD wNext;};
struct tagLOCALINFO {DWORD dwSize;WORD wcItems;};
enum tagLOCKTYPE {LOCK_WRITE = 0x1,LOCK_EXCLUSIVE = 0x2,LOCK_ONLYONCE = 0x4,};
struct tagLOGBRUSH {UINT lbStyle;COLORREF lbColor;int lbHatch;};
struct tagLOGFONT {int lfHeight;int lfWidth;int lfEscapement;int lfOrientation;int lfWeight;BYTE lfItalic;BYTE lfUnderline;BYTE lfStrikeOut;BYTE lfCharSet;BYTE lfOutPrecision;BYTE lfClipPrecision;BYTE lfQuality;BYTE lfPitchAndFamily;char lfFaceName[32];};
struct tagLOGPALETTE {WORD palVersion;WORD palNumEntries;PALETTEENTRY palPalEntry[1];};
struct tagLOGPEN {UINT lopnStyle;POINT lopnWidth;COLORREF lopnColor;};
struct tagMAT2 {FIXED eM11;FIXED eM12;FIXED eM21;FIXED eM22;};
struct tagMCI_ANIM_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;UINT wReserved1;};
struct tagMCI_ANIM_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;DWORD dwSpeed;};
struct tagMCI_ANIM_RECT_PARMS {DWORD dwCallback;RECT rc;};
struct tagMCI_ANIM_STEP_PARMS {DWORD dwCallback;DWORD dwFrames;};
struct tagMCI_ANIM_UPDATE_PARMS {DWORD dwCallback;RECT rc;HDC hDC;};
struct tagMCI_ANIM_WINDOW_PARMS {DWORD dwCallback;HWND hWnd;UINT wReserved1;UINT nCmdShow;UINT wReserved2;LPCSTR lpstrText;};
struct tagMCI_BREAK_PARMS {DWORD dwCallback;int nVirtKey;UINT wReserved0;HWND hwndBreak;UINT wReserved1;};
struct tagMCI_GENERIC_PARMS {DWORD dwCallback;};
struct tagMCI_GETDEVCAPS_PARMS {DWORD dwCallback;DWORD dwReturn;DWORD dwItem;};
struct tagMCI_INFO_PARMS {DWORD dwCallback;LPSTR lpstrReturn;DWORD dwRetSize;};
struct tagMCI_LOAD_PARMS {DWORD dwCallback;LPCSTR lpfilename;};
struct tagMCI_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;};
struct tagMCI_OVLY_LOAD_PARMS {DWORD dwCallback;LPCSTR lpfilename;RECT rc;};
struct tagMCI_OVLY_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;UINT wReserved1;};
struct tagMCI_OVLY_RECT_PARMS {DWORD dwCallback;RECT rc;};
struct tagMCI_OVLY_SAVE_PARMS {DWORD dwCallback;LPCSTR lpfilename;RECT rc;};
struct tagMCI_OVLY_WINDOW_PARMS {DWORD dwCallback;HWND hWnd;UINT wReserved1;UINT nCmdShow;UINT wReserved2;LPCSTR lpstrText;};
struct tagMCI_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_RECORD_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_SAVE_PARMS {DWORD dwCallback;LPCSTR lpfilename;};
struct tagMCI_SEEK_PARMS {DWORD dwCallback;DWORD dwTo;};
struct tagMCI_SEQ_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;DWORD dwTempo;DWORD dwPort;DWORD dwSlave;DWORD dwMaster;DWORD dwOffset;};
struct tagMCI_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;};
struct tagMCI_SOUND_PARMS {DWORD dwCallback;LPCSTR lpstrSoundName;};
struct tagMCI_STATUS_PARMS {DWORD dwCallback;DWORD dwReturn;DWORD dwItem;DWORD dwTrack;};
struct tagMCI_SYSINFO_PARMS {DWORD dwCallback;LPSTR lpstrReturn;DWORD dwRetSize;DWORD dwNumber;UINT wDeviceType;UINT wReserved0;};
struct tagMCI_VD_ESCAPE_PARMS {DWORD dwCallback;LPCSTR lpstrCommand;};
struct tagMCI_VD_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;DWORD dwSpeed;};
struct tagMCI_VD_STEP_PARMS {DWORD dwCallback;DWORD dwFrames;};
struct tagMCI_WAVE_DELETE_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_WAVE_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwBufferSeconds;};
struct tagMCI_WAVE_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;UINT wInput;UINT wReserved0;UINT wOutput;UINT wReserved1;UINT wFormatTag;UINT wReserved2;UINT nChannels;UINT wReserved3;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;UINT nBlockAlign;UINT wReserved4;UINT wBitsPerSample;UINT wReserved5;};
struct tagMDICREATESTRUCT {LPCSTR szClass;LPCSTR szTitle;HINSTANCE hOwner;int x;int y;int cx;int cy;DWORD style;LPARAM lParam;};
struct tagMEASUREITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;UINT itemWidth;UINT itemHeight;DWORD itemData;};
enum tagMEMCTX {MEMCTX_TASK = 0x1,MEMCTX_SHARED = 0x2,MEMCTX_UNKNOWN = 0xFFFF,MEMCTX_SAME = 0xFFFE,};
struct tagMEMMANINFO {DWORD dwSize;DWORD dwLargestFreeBlock;DWORD dwMaxPagesAvailable;DWORD dwMaxPagesLockable;DWORD dwTotalLinearSpace;DWORD dwTotalUnlockedPages;DWORD dwFreePages;DWORD dwTotalPages;DWORD dwFreeLinearSpace;DWORD dwSwapFilePages;WORD wPageSize;};
struct tagMETAFILEPICT {int mm;int xExt;int yExt;HMETAFILE hMF;};
struct tagMETAHEADER {UINT mtType;UINT mtHeaderSize;UINT mtVersion;DWORD mtSize;UINT mtNoObjects;DWORD mtMaxRecord;UINT mtNoParameters;};
struct tagMETARECORD {DWORD rdSize;UINT rdFunction;UINT rdParm[1];};
struct tagMETHODDATA {TCHAR far *szName;PARAMDATA far *ppdata;DISPID dispid;unsigned int iMeth;CALLCONV cc;unsigned int cArgs;unsigned int wFlags;VARTYPE vtReturn;};
struct tagMINMAXINFO {POINT ptReserved;POINT ptMaxSize;POINT ptMaxPosition;POINT ptMinTrackSize;POINT ptMaxTrackSize;};
enum tagMKREDUCE {MKRREDUCE_ONE = 0x0,MKRREDUCE_TOUSER = 0x0,MKRREDUCE_THROUGHUSER = 0x0,MKRREDUCE_ALL = 0x0,};
enum tagMKSYS {MKSYS_NONE = 0x0,MKSYS_GENERICCOMPOSITE = 0x1,MKSYS_FILEMONIKER = 0x2,MKSYS_ANTIMONIKER = 0x3,MKSYS_ITEMMONIKER = 0x4,MKSYS_POINTERMONIKER = 0x5,};
struct tagMODULEENTRY {DWORD dwSize;char szModule[10];HMODULE hModule;WORD wcUsage;char szExePath[256];WORD wNext;};
struct tagMONCBSTRUCT {UINT cb;WORD wReserved;DWORD dwTime;HANDLE hTask;DWORD dwRet;UINT wType;UINT wFmt;HCONV hConv;HSZ hsz1;HSZ hsz2;HDDEDATA hData;DWORD dwData1;DWORD dwData2;};
struct tagMONCONVSTRUCT {UINT cb;BOOL fConnect;DWORD dwTime;HANDLE hTask;HSZ hszSvc;HSZ hszTopic;HCONV hConvClient;HCONV hConvServer;};
struct tagMONERRSTRUCT {UINT cb;UINT wLastError;DWORD dwTime;HANDLE hTask;};
struct tagMONHSZSTRUCT {UINT cb;BOOL fsAction;DWORD dwTime;HSZ hsz;HANDLE hTask;WORD wReserved;char str[1];};
struct tagMONLINKSTRUCT {UINT cb;DWORD dwTime;HANDLE hTask;BOOL fEstablished;BOOL fNoData;HSZ hszSvc;HSZ hszTopic;HSZ hszItem;UINT wFmt;BOOL fServer;HCONV hConvServer;HCONV hConvClient;};
struct tagMONMSGSTRUCT {UINT cb;HWND hwndTo;DWORD dwTime;HANDLE hTask;UINT wMsg;WPARAM wParam;LPARAM lParam;};
struct tagMOUSEHOOKSTRUCT {POINT pt;HWND hwnd;UINT wHitTestCode;DWORD dwExtraInfo;};
struct tagMSG {HWND hwnd;UINT message;WPARAM wParam;LPARAM lParam;DWORD time;POINT pt;};
enum tagMSHCTX {MSHCTX_LOCAL = 0x0,MSHCTX_NOSHAREDMEM = 0x1,};
enum tagMSHLFLAGS {MSHLFLAGS_NORMAL = 0x0,MSHLFLAGS_TABLESTRONG = 0x1,MSHLFLAGS_TABLEWEAK = 0x2,};
struct tagMULTIKEYHELP {UINT mkSize;BYTE mkKeylist;BYTE szKeyphrase[1];};
struct tagNCCALCSIZE_PARAMS {RECT rgrc[3];WINDOWPOS far *lppos;};
struct tagNEWCPLINFO {DWORD dwSize;DWORD dwFlags;DWORD dwHelpContext;__int32 lData;HICON hIcon;char szName[32];char szInfo[64];char szHelpFile[128];};
struct tagNEWTEXTMETRIC {int tmHeight;int tmAscent;int tmDescent;int tmInternalLeading;int tmExternalLeading;int tmAveCharWidth;int tmMaxCharWidth;int tmWeight;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmPitchAndFamily;BYTE tmCharSet;int tmOverhang;int tmDigitizedAspectX;int tmDigitizedAspectY;DWORD ntmFlags;UINT ntmSizeEM;UINT ntmCellHeight;UINT ntmAvgWidth;};
struct tagNFYLOADSEG {DWORD dwSize;WORD wSelector;WORD wSegNum;WORD wType;WORD wcInstance;LPCSTR lpstrModuleName;};
struct tagNFYLOGERROR {DWORD dwSize;UINT wErrCode;void far *lpInfo;};
struct tagNFYLOGPARAMERROR {DWORD dwSize;UINT wErrCode;FARPROC lpfnErrorAddr;void far * far *lpBadParam;};
struct tagNFYRIP {DWORD dwSize;WORD wIP;WORD wCS;WORD wSS;WORD wBP;WORD wExitCode;};
struct tagNFYSTARTDLL {DWORD dwSize;HMODULE hModule;WORD wCS;WORD wIP;};
struct tagOBJECTDESCRIPTOR {ULONG cbSize;CLSID clsid;DWORD dwDrawAspect;SIZEL sizel;POINTL pointl;DWORD dwStatus;DWORD dwFullUserTypeName;DWORD dwSrcOfCopy;};
struct tagOEMPENINFO {UINT wPdt;UINT wValueMax;UINT wDistinct;};
struct tagOFN {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;LPCSTR lpstrFilter;LPSTR lpstrCustomFilter;DWORD nMaxCustFilter;DWORD nFilterIndex;LPSTR lpstrFile;DWORD nMaxFile;LPSTR lpstrFileTitle;DWORD nMaxFileTitle;LPCSTR lpstrInitialDir;LPCSTR lpstrTitle;DWORD Flags;UINT nFileOffset;UINT nFileExtension;LPCSTR lpstrDefExt;LPARAM lCustData;UINT (__pascal __far far *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;};
struct tagOFSTRUCT {BYTE cBytes;BYTE fFixedDisk;UINT nErrCode;BYTE reserved[4];char szPathName[128];};
struct tagOIFI {UINT cb;BOOL fMDIApp;HWND hwndFrame;HACCEL haccel;int cAccelEntries;};
enum tagOLECLOSE {OLECLOSE_SAVEIFDIRTY = 0x0,OLECLOSE_NOSAVE = 0x1,OLECLOSE_PROMPTSAVE = 0x2,};
enum tagOLECONTF {OLECONTF_EMBEDDINGS = 0x1,OLECONTF_LINKS = 0x2,OLECONTF_OTHERS = 0x4,OLECONTF_ONLYUSER = 0x8,OLECONTF_ONLYIFRUNNING = 0x10,};
enum tagOLEGETMONIKER {OLEGETMONIKER_ONLYIFTHERE = 0x1,OLEGETMONIKER_FORCEASSIGN = 0x2,OLEGETMONIKER_UNASSIGN = 0x3,OLEGETMONIKER_TEMPFORUSER = 0x4,};
enum tagOLELINKBIND {OLELINKBIND_EVENIFCLASSDIFF = 0x1,};
enum tagOLEMISC {OLEMISC_RECOMPOSEONRESIZE = 0x1,OLEMISC_ONLYICONIC = 0x2,OLEMISC_INSERTNOTREPLACE = 0x4,OLEMISC_STATIC = 0x8,OLEMISC_CANTLINKINSIDE = 0x10,OLEMISC_CANLINKBYOLE1 = 0x20,OLEMISC_ISLINKOBJECT = 0x40,OLEMISC_INSIDEOUT = 0x80,OLEMISC_ACTIVATEWHENVISIBLE = 0x100,OLEMISC_RENDERINGISDEVICEINDEPENDENT = 0x200,};
enum tagOLERENDER {OLERENDER_NONE = 0x0,OLERENDER_DRAW = 0x1,OLERENDER_FORMAT = 0x2,OLERENDER_ASIS = 0x3,};
struct tagOLEUIBUSY {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;HTASK hTask;HWND far *lphWndDialog;};
struct tagOLEUICHANGEICON {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;HGLOBAL hMetaPict;CLSID clsid;char szIconExe[256];int cchIconExe;};
struct tagOLEUICONVERT {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;CLSID clsid;CLSID clsidConvertDefault;CLSID clsidActivateDefault;CLSID clsidNew;DWORD dvAspect;WORD wFormat;BOOL fIsLinkedObject;HGLOBAL hMetaPict;LPSTR lpszUserType;BOOL fObjectsIconChanged;LPSTR lpszDefLabel;UINT cClsidExclude;LPCLSID lpClsidExclude;};
struct tagOLEUIEDITLINKS {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;IOleUILinkContainer far *lpOleUILinkContainer;};
struct tagOLEUIINSERTOBJECT {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;CLSID clsid;LPSTR lpszFile;UINT cchFile;UINT cClsidExclude;LPCLSID lpClsidExclude;IID iid;DWORD oleRender;LPFORMATETC lpFormatEtc;LPOLECLIENTSITE lpIOleClientSite;LPSTORAGE lpIStorage;LPVOID far *ppvObj;SCODE sc;HGLOBAL hMetaPict;};
struct tagOLEUIPASTEENTRY {FORMATETC fmtetc;LPCSTR lpstrFormatName;LPCSTR lpstrResultText;DWORD dwFlags;DWORD dwScratchSpace;};
enum tagOLEUIPASTEFLAG {OLEUIPASTE_ENABLEICON = 0x800,OLEUIPASTE_PASTEONLY = 0x0,OLEUIPASTE_PASTE = 0x200,OLEUIPASTE_LINKANYTYPE = 0x400,OLEUIPASTE_LINKTYPE1 = 0x1,OLEUIPASTE_LINKTYPE2 = 0x2,OLEUIPASTE_LINKTYPE3 = 0x4,OLEUIPASTE_LINKTYPE4 = 0x8,OLEUIPASTE_LINKTYPE5 = 0x10,OLEUIPASTE_LINKTYPE6 = 0x20,OLEUIPASTE_LINKTYPE7 = 0x40,OLEUIPASTE_LINKTYPE8 = 0x80,};
struct tagOLEUIPASTESPECIAL {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;LPDATAOBJECT lpSrcDataObj;LPOLEUIPASTEENTRY arrPasteEntries;int cPasteEntries;UINT far *arrLinkTypes;int cLinkTypes;UINT cClsidExclude;LPCLSID lpClsidExclude;int nSelectedIndex;BOOL fLink;HGLOBAL hMetaPict;SIZEL sizel;};
enum tagOLEUPDATE {OLEUPDATE_ALWAYS = 0x1,OLEUPDATE_ONCALL = 0x3,};
struct tagOLEVERB {__int32 lVerb;LPSTR lpszVerbName;DWORD fuFlags;DWORD grfAttribs;};
enum tagOLEVERBATTRIB {OLEVERBATTRIB_NEVERDIRTIES = 0x1,OLEVERBATTRIB_ONCONTAINERMENU = 0x2,};
enum tagOLEWHICHMK {OLEWHICHMK_CONTAINER = 0x1,OLEWHICHMK_OBJREL = 0x2,OLEWHICHMK_OBJFULL = 0x3,};
struct tagOUTLINETEXTMETRIC {UINT otmSize;TEXTMETRIC otmTextMetrics;BYTE otmFiller;PANOSE otmPanoseNumber;UINT otmfsSelection;UINT otmfsType;int otmsCharSlopeRise;int otmsCharSlopeRun;int otmItalicAngle;UINT otmEMSquare;int otmAscent;int otmDescent;UINT otmLineGap;UINT otmsCapEmHeight;UINT otmsXHeight;RECT otmrcFontBox;int otmMacAscent;int otmMacDescent;UINT otmMacLineGap;UINT otmusMinimumPPEM;POINT otmptSubscriptSize;POINT otmptSubscriptOffset;POINT otmptSuperscriptSize;POINT otmptSuperscriptOffset;UINT otmsStrikeoutSize;int otmsStrikeoutPosition;int otmsUnderscorePosition;int otmsUnderscoreSize;PSTR otmpFamilyName;PSTR otmpFaceName;PSTR otmpStyleName;PSTR otmpFullName;};
struct tagOleMenuGroupWidths {__int32 width[6];};
struct tagPAINTSTRUCT {HDC hdc;BOOL fErase;RECT rcPaint;BOOL fRestore;BOOL fIncUpdate;BYTE rgbReserved[16];};
struct tagPALETTEENTRY {BYTE peRed;BYTE peGreen;BYTE peBlue;BYTE peFlags;};
struct tagPANOSE {BYTE bFamilyType;BYTE bSerifStyle;BYTE bWeight;BYTE bProportion;BYTE bContrast;BYTE bStrokeVariation;BYTE bArmStyle;BYTE bLetterform;BYTE bMidline;BYTE bXHeight;};
struct tagPARAMDATA {TCHAR far *szName;VARTYPE vt;};
struct tagPD {DWORD lStructSize;HWND hwndOwner;HGLOBAL hDevMode;HGLOBAL hDevNames;HDC hDC;DWORD Flags;UINT nFromPage;UINT nToPage;UINT nMinPage;UINT nMaxPage;UINT nCopies;HINSTANCE hInstance;LPARAM lCustData;UINT (__pascal __far far *lpfnPrintHook)(HWND, UINT, WPARAM, LPARAM);UINT (__pascal __far far *lpfnSetupHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpPrintTemplateName;LPCSTR lpSetupTemplateName;HGLOBAL hPrintTemplate;HGLOBAL hSetupTemplate;};
struct tagPENDATAHEADER {UINT wVersion;UINT cbSizeUsed;UINT cStrokes;UINT cPnt;UINT cPntStrokeMax;RECT rectBound;UINT wPndts;int nInkWidth;DWORD rgbInk;};
enum tagPENDINGMSG {PENDINGMSG_CANCELCALL = 0x0,PENDINGMSG_WAITNOPROCESS = 0x1,PENDINGMSG_WAITDEFPROCESS = 0x2,};
enum tagPENDINGTYPE {PENDINGTYPE_TOPLEVEL = 0x1,PENDINGTYPE_NESTED = 0x2,};
struct tagPENINFO {UINT cxRawWidth;UINT cyRawHeight;UINT wDistinctWidth;UINT wDistinctHeight;int nSamplingRate;int nSamplingDist;__int32 lPdc;int cPens;int cbOemData;OEMPENINFO rgoempeninfo[6];UINT rgwReserved[8];};
struct tagPENPACKET {UINT wTabletX;UINT wTabletY;UINT wPDK;UINT rgwOemData[6];};
struct tagPOINT {int x;int y;};
struct tagPOINTFX {FIXED x;FIXED y;};
struct tagPOINTL {__int32 x;__int32 y;};
struct tagRASTERIZER_STATUS {int nSize;int wFlags;int nLanguageID;};
struct tagRC {HREC hrec;HWND hwnd;UINT wEventRef;UINT wRcPreferences;__int32 lRcOptions;RCYIELDPROC lpfnYield;BYTE lpUser[32];UINT wCountry;UINT wIntlPreferences;char lpLanguage[44];LPDF rglpdf[16];UINT wTryDictionary;CL clErrorLevel;ALC alc;ALC alcPriority;BYTE rgbfAlc[32];UINT wResultMode;UINT wTimeOut;__int32 lPcm;RECT rectBound;RECT rectExclude;GUIDE guide;UINT wRcOrient;UINT wRcDirect;int nInkWidth;COLORREF rgbInk;DWORD dwAppParam;DWORD dwDictParam;DWORD dwRecognizer;UINT rgwReserved[8];};
struct tagRCRESULT {SYG syg;UINT wResultsType;int cSyv;LPSYV lpsyv;HANDLE hSyv;int nBaseLine;int nMidLine;HPENDATA hpendata;RECT rectBoundInk;POINT pntEnd;LPRC lprc;};
struct tagRECT {int left;int top;int right;int bottom;};
struct tagRECTL {__int32 left;__int32 top;__int32 right;__int32 bottom;};
struct tagRECTOFS {int dLeft;int dTop;int dRight;int dBottom;};
enum tagREGCLS {REGCLS_SINGLEUSE = 0x0,REGCLS_MULTIPLEUSE = 0x1,REGCLS_MULTI_SEPARATE = 0x2,};
struct tagRGBQUAD {BYTE rgbBlue;BYTE rgbGreen;BYTE rgbRed;BYTE rgbReserved;};
struct tagRGBTRIPLE {BYTE rgbtBlue;BYTE rgbtGreen;BYTE rgbtRed;};
struct tagSAFEARRAY {unsigned int cDims;unsigned int fFeatures;unsigned int cbElements;unsigned int cLocks;unsigned __int32 handle;void far *pvData;SAFEARRAYBOUND rgsabound[1];};
struct tagSAFEARRAYBOUND {unsigned __int32 cElements;__int32 lLbound;};
struct tagSCREENPARAMS {int angle;int frequency;};
struct tagSEGINFO {UINT offSegment;UINT cbSegment;UINT flags;UINT cbAlloc;HGLOBAL h;UINT alignShift;UINT reserved[2];};
enum tagSERVERCALL {SERVERCALL_ISHANDLED = 0x0,SERVERCALL_REJECTED = 0x1,SERVERCALL_RETRYLATER = 0x2,};
struct tagSIZE {int cx;int cy;};
struct tagSIZEL {__int32 cx;__int32 cy;};
struct tagSKBINFO {HWND hwnd;UINT nPad;BOOL fVisible;BOOL fMinimized;RECT rect;DWORD dwReserved;};
struct tagSTACKTRACEENTRY {DWORD dwSize;HTASK hTask;WORD wSS;WORD wBP;WORD wCS;WORD wIP;HMODULE hModule;WORD wSegment;WORD wFlags;};
struct tagSTATDATA {FORMATETC formatetc;DWORD advf;IAdviseSink far *pAdvSink;DWORD dwConnection;};
enum tagSTATFLAG {STATFLAG_DEFAULT = 0x0,STATFLAG_NONAME = 0x1,};
struct tagSTATSTG {char far *pwcsName;DWORD type;ULARGE_INTEGER cbSize;FILETIME mtime;FILETIME ctime;FILETIME atime;DWORD grfMode;DWORD grfLocksSupported;CLSID clsid;DWORD grfStateBits;DWORD reserved;};
enum tagSTGC {STGC_DEFAULT = 0x0,STGC_OVERWRITE = 0x1,STGC_ONLYIFCURRENT = 0x2,STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 0x4,};
struct tagSTGMEDIUM {DWORD tymed;union {HANDLE hGlobal;LPSTR lpszFileName;IStream far *pstm;IStorage far *pstg;};IUnknown far *pUnkForRelease;};
union tagSTGMEDIUM::$62EF16ADBE1A605A5A555D41C9B0FE35 {HANDLE hGlobal;LPSTR lpszFileName;IStream far *pstm;IStorage far *pstg;};
enum tagSTGMOVE {STGMOVE_MOVE = 0x0,STGMOVE_COPY = 0x1,};
enum tagSTGTY {STGTY_STORAGE = 0x1,STGTY_STREAM = 0x2,STGTY_LOCKBYTES = 0x3,STGTY_PROPERTY = 0x4,};
enum tagSTREAM_SEEK {STREAM_SEEK_SET = 0x0,STREAM_SEEK_CUR = 0x1,STREAM_SEEK_END = 0x2,};
struct tagSTROKEINFO {UINT cPnt;UINT cbPnts;UINT wPdk;DWORD dwTick;};
struct tagSYC {UINT wStrokeFirst;UINT wPntFirst;UINT wStrokeLast;UINT wPntLast;BOOL fLastSyc;};
struct tagSYE {SYV syv;__int32 lRecogVal;CL cl;int iSyc;};
struct tagSYG {POINT rgpntHotSpots[8];int cHotSpot;int nFirstBox;__int32 lRecogVal;LPSYE lpsye;int cSye;LPSYC lpsyc;int cSyc;};
struct tagSYSHEAPINFO {DWORD dwSize;WORD wUserFreePercent;WORD wGDIFreePercent;HGLOBAL hUserSegment;HGLOBAL hGDISegment;};
enum tagSYSKIND {SYS_WIN16 = 0x0,SYS_WIN32 = 0x1,SYS_MAC = 0x2,};
struct tagTASKENTRY {DWORD dwSize;HTASK hTask;HTASK hTaskParent;HINSTANCE hInst;HMODULE hModule;WORD wSS;WORD wSP;WORD wStackTop;WORD wStackMinimum;WORD wStackBottom;WORD wcEvents;HGLOBAL hQueue;char szModule[10];WORD wPSPOffset;HANDLE hNext;};
struct tagTEXTMETRIC {int tmHeight;int tmAscent;int tmDescent;int tmInternalLeading;int tmExternalLeading;int tmAveCharWidth;int tmMaxCharWidth;int tmWeight;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmPitchAndFamily;BYTE tmCharSet;int tmOverhang;int tmDigitizedAspectX;int tmDigitizedAspectY;};
struct tagTIMERINFO {DWORD dwSize;DWORD dwmsSinceStart;DWORD dwmsThisVM;};
struct tagTIMESTAMP_STRUCT {SWORD year;UWORD month;UWORD day;UWORD hour;UWORD minute;UWORD second;UDWORD fraction;};
struct tagTIME_STRUCT {UWORD hour;UWORD minute;UWORD second;};
struct tagTLIBATTR {GUID guid;LCID lcid;SYSKIND syskind;unsigned int wMajorVerNum;unsigned int wMinorVerNum;unsigned int wLibFlags;};
struct tagTTPOLYCURVE {UINT wType;UINT cpfx;POINTFX apfx[1];};
struct tagTTPOLYGONHEADER {DWORD cb;DWORD dwType;POINTFX pfxStart;};
enum tagTYMED {TYMED_HGLOBAL = 0x1,TYMED_FILE = 0x2,TYMED_ISTREAM = 0x4,TYMED_ISTORAGE = 0x8,TYMED_GDI = 0x10,TYMED_MFPICT = 0x20,TYMED_NULL = 0x0,};
struct tagTYPEATTR {GUID guid;LCID lcid;unsigned __int32 dwReserved;MEMBERID memidConstructor;MEMBERID memidDestructor;TCHAR far *lpstrSchema;unsigned __int32 cbSizeInstance;TYPEKIND typekind;unsigned int cFuncs;unsigned int cVars;unsigned int cImplTypes;unsigned int cbSizeVft;unsigned int cbAlignment;unsigned int wTypeFlags;unsigned int wMajorVerNum;unsigned int wMinorVerNum;TYPEDESC tdescAlias;IDLDESC idldescType;};
struct tagTYPEDESC {union {struct tagTYPEDESC far *lptdesc;struct tagARRAYDESC far *lpadesc;HREFTYPE hreftype;};VARTYPE vt;};
union tagTYPEDESC::$B4FA4469D1F86C0E7D898206ED7D9FDD {struct tagTYPEDESC far *lptdesc;struct tagARRAYDESC far *lpadesc;HREFTYPE hreftype;};
enum tagTYPEFLAGS {TYPEFLAG_FAPPOBJECT = 0x1,TYPEFLAG_FCANCREATE = 0x2,};
enum tagTYPEKIND {TKIND_ENUM = 0x0,TKIND_RECORD = 0x1,TKIND_MODULE = 0x2,TKIND_INTERFACE = 0x3,TKIND_DISPATCH = 0x4,TKIND_COCLASS = 0x5,TKIND_ALIAS = 0x6,TKIND_UNION = 0x7,TKIND_MAX = 0x8,};
enum tagUSERCLASSTYPE {USERCLASSTYPE_FULL = 0x1,USERCLASSTYPE_SHORT = 0x2,USERCLASSTYPE_APPNAME = 0x3,};
struct tagVARDESC {MEMBERID memid;TCHAR far *lpstrSchema;union {unsigned __int32 oInst;VARIANT far *lpvarValue;};ELEMDESC elemdescVar;unsigned int wVarFlags;VARKIND varkind;};
union tagVARDESC::$F04833D7152C1F618CB19FA4ACB5074C {unsigned __int32 oInst;VARIANT far *lpvarValue;};
enum tagVARFLAGS {VARFLAG_FREADONLY = 0x1,};
struct tagVARIANT {VARTYPE vt;unsigned int wReserved1;unsigned int wReserved2;unsigned int wReserved3;union {int iVal;__int32 lVal;float fltVal;double dblVal;VARIANT_BOOL _bool;SCODE scode;CY cyVal;DATE date;BSTR bstrVal;IUnknown far *punkVal;IDispatch far *pdispVal;SAFEARRAY far *parray;int far *piVal;__int32 far *plVal;float far *pfltVal;double far *pdblVal;VARIANT_BOOL far *pbool;SCODE far *pscode;CY far *pcyVal;DATE far *pdate;BSTR far *pbstrVal;IUnknown far * far *ppunkVal;IDispatch far * far *ppdispVal;SAFEARRAY far * far *pparray;VARIANT far *pvarVal;void far *byref;};};
union tagVARIANT::$83860D232BE831FC4DB97AAFCFF274E0 {int iVal;__int32 lVal;float fltVal;double dblVal;VARIANT_BOOL _bool;SCODE scode;CY cyVal;DATE date;BSTR bstrVal;IUnknown far *punkVal;IDispatch far *pdispVal;SAFEARRAY far *parray;int far *piVal;__int32 far *plVal;float far *pfltVal;double far *pdblVal;VARIANT_BOOL far *pbool;SCODE far *pscode;CY far *pcyVal;DATE far *pdate;BSTR far *pbstrVal;IUnknown far * far *ppunkVal;IDispatch far * far *ppdispVal;SAFEARRAY far * far *pparray;VARIANT far *pvarVal;void far *byref;};
enum tagVARKIND {VAR_PERINSTANCE = 0x0,VAR_STATIC = 0x1,VAR_CONST = 0x2,VAR_DISPATCH = 0x3,};
struct tagVS_FIXEDFILEINFO {DWORD dwSignature;DWORD dwStrucVersion;DWORD dwFileVersionMS;DWORD dwFileVersionLS;DWORD dwProductVersionMS;DWORD dwProductVersionLS;DWORD dwFileFlagsMask;DWORD dwFileFlags;DWORD dwFileOS;DWORD dwFileType;DWORD dwFileSubtype;DWORD dwFileDateMS;DWORD dwFileDateLS;};
struct tagWINDEBUGINFO {UINT flags;DWORD dwOptions;DWORD dwFilter;char achAllocModule[8];DWORD dwAllocBreak;DWORD dwAllocCount;};
struct tagWINDOWPLACEMENT {UINT length;UINT flags;UINT showCmd;POINT ptMinPosition;POINT ptMaxPosition;RECT rcNormalPosition;};
struct tagWINDOWPOS {HWND hwnd;HWND hwndInsertAfter;int x;int y;int cx;int cy;UINT flags;};
struct tagWNDCLASS {UINT style;WNDPROC lpfnWndProc;int cbClsExtra;int cbWndExtra;HINSTANCE hInstance;HICON hIcon;HCURSOR hCursor;HBRUSH hbrBackground;LPCSTR lpszMenuName;LPCSTR lpszClassName;};
struct timecaps_tag {UINT wPeriodMin;UINT wPeriodMax;};
struct timeval {__int32 tv_sec;__int32 tv_usec;};
typedef unsigned __int8 u_char;
typedef unsigned int u_int;
typedef unsigned __int32 u_long;
typedef unsigned int u_short;
struct waveformat_tag {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;};
struct wavehdr_tag {LPSTR lpData;DWORD dwBufferLength;DWORD dwBytesRecorded;DWORD dwUser;DWORD dwFlags;DWORD dwLoops;struct wavehdr_tag far *lpNext;DWORD reserved;};
struct waveincaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];DWORD dwFormats;UINT wChannels;};
struct waveoutcaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];DWORD dwFormats;UINT wChannels;DWORD dwSupport;};

int __pascal __far ABORTDOC(HDC);
MACRO_ABSOLUTE ABSOLUTE;
SOCKET __pascal __far ACCEPT(SOCKET s, struct sockaddr far *addr, int far *addrlen);
int __pascal __far ACCESSRESOURCE(HINSTANCE, HRSRC);
ATOM __pascal __far ADDATOM(LPCSTR);
int __pascal __far ADDFONTRESOURCE(LPCSTR);
HPENDATA __pascal __far ADDPOINTSPENDATA(HPENDATA, LPPOINT, LPVOID, LPSTROKEINFO);
void __pascal __far ADJUSTWINDOWRECT(RECT far *, DWORD, BOOL);
void __pascal __far ADJUSTWINDOWRECTEX(RECT far *, DWORD, BOOL, DWORD);
tagADVF ADVFCACHE_FORCEBUILTIN;
tagADVF ADVFCACHE_NOHANDLER;
tagADVF ADVFCACHE_ONSAVE;
tagADVF ADVF_DATAONSTOP;
tagADVF ADVF_NODATA;
tagADVF ADVF_ONLYONCE;
tagADVF ADVF_PRIMEFIRST;
MACRO_AF AF_APPLETALK;
MACRO_AF AF_CCITT;
MACRO_AF AF_CHAOS;
MACRO_AF AF_DATAKIT;
MACRO_AF AF_DECnet;
MACRO_AF AF_DLI;
MACRO_AF AF_ECMA;
MACRO_AF AF_HYLINK;
MACRO_AF AF_IMPLINK;
MACRO_AF AF_INET;
MACRO_AF AF_IPX;
MACRO_AF AF_ISO;
MACRO_AF AF_LAT;
MACRO_AF AF_MAX;
MACRO_AF AF_NETBIOS;
MACRO_AF AF_NS;
MACRO_AF AF_OSI;
MACRO_AF AF_PUP;
MACRO_AF AF_SNA;
MACRO_AF AF_UNIX;
MACRO_AF AF_UNSPEC;
MACRO_ALC ALC_ALL;
MACRO_ALC ALC_ALPHA;
MACRO_ALC ALC_ALPHANUMERIC;
MACRO_ALC ALC_DBCS;
MACRO_ALC ALC_DEFAULT;
MACRO_ALC ALC_GESTURE;
MACRO_ALC ALC_HIRAGANA;
MACRO_ALC ALC_KANJI;
MACRO_ALC ALC_KATAKANA;
MACRO_ALC ALC_LCALPHA;
MACRO_ALC ALC_MATH;
MACRO_ALC ALC_MONETARY;
MACRO_ALC ALC_NONPRINT;
MACRO_ALC ALC_NOPRIORITY;
MACRO_ALC ALC_NUMERIC;
MACRO_ALC ALC_OEM;
MACRO_ALC ALC_OTHER;
MACRO_ALC ALC_PUNC;
MACRO_ALC ALC_RESERVED;
MACRO_ALC ALC_SYSMINIMUM;
MACRO_ALC ALC_UCALPHA;
MACRO_ALC ALC_USEBITMAP;
MACRO_ALC ALC_WHITE;
int __pascal __far ALLOCDISKSPACE(__int32, UINT);
UINT __pascal __far ALLOCDSTOCSALIAS(UINT);
int __pascal __far ALLOCFILEHANDLES(int);
BOOL __pascal __far ALLOCGDIMEM(UINT);
BOOL __pascal __far ALLOCMEM(DWORD);
HGLOBAL __pascal __far ALLOCRESOURCE(HINSTANCE, HRSRC, DWORD);
UINT __pascal __far ALLOCSELECTOR(UINT);
BOOL __pascal __far ALLOCUSERMEM(UINT);
MACRO_ALTERNATE ALTERNATE;
void __pascal __far ANIMATEPALETTE(HPALETTE, UINT, UINT, const PALETTEENTRY far *);
LPSTR __pascal __far ANSILOWER(LPSTR);
UINT __pascal __far ANSILOWERBUFF(LPSTR, UINT);
LPSTR __pascal __far ANSINEXT(LPCSTR);
LPSTR __pascal __far ANSIPREV(LPCSTR, LPCSTR);
void __pascal __far ANSITOOEM(const char far *, char far *);
void __pascal __far ANSITOOEMBUFF(LPCSTR, LPSTR, UINT);
LPSTR __pascal __far ANSIUPPER(LPSTR);
UINT __pascal __far ANSIUPPERBUFF(LPSTR, UINT);
MACRO_CHARSET ANSI_CHARSET;
MACRO_FONT ANSI_FIXED_FONT;
MACRO_FONT ANSI_VAR_FONT;
BOOL __pascal __far ANYPOPUP();
MACRO_APPCLASS APPCLASS_MASK;
MACRO_MONITOR APPCLASS_MONITOR;
MACRO_APPCLASS APPCLASS_STANDARD;
MACRO_APPCMD APPCMD_CLIENTONLY;
MACRO_APPCMD APPCMD_FILTERINITS;
MACRO_APPCMD APPCMD_MASK;
BOOL __pascal __far APPENDMENU(HMENU, UINT, UINT, LPCSTR);
BOOL __pascal __far ARC(HDC, int, int, int, int, int, int, int, int);
UINT __pascal __far ARRANGEICONICWINDOWS(HWND);
MACRO_ASPECTX ASPECTX;
MACRO_ASPECTXY ASPECTXY;
MACRO_ASPECTY ASPECTY;
MACRO_ASPECT ASPECT_FILTERING;
void __pascal __far ATOMICVIRTUALEVENT(BOOL);
MACRO_AUXCAPS AUXCAPS_AUXIN;
MACRO_AUXCAPS AUXCAPS_CDAUDIO;
MACRO_AUXCAPS AUXCAPS_LRVOLUME;
MACRO_AUXCAPS AUXCAPS_VOLUME;
UINT __pascal __far AUXGETDEVCAPS(UINT uDeviceID, AUXCAPS far *lpCaps, UINT uSize);
UINT __pascal __far AUXGETNUMDEVS();
UINT __pascal __far AUXGETVOLUME(UINT uDeviceID, DWORD far *lpdwVolume);
DWORD __pascal __far AUXOUTMESSAGE(UINT uDeviceID, UINT uMessage, DWORD dw1, DWORD dw2);
UINT __pascal __far AUXSETVOLUME(UINT uDeviceID, DWORD dwVolume);
MACRO_AUX AUX_MAPPER;
MACRO_BANDINFO BANDINFO;
HDWP __pascal __far BEGINDEFERWINDOWPOS(int);
LPPENDATA __pascal __far BEGINENUMSTROKES(HPENDATA);
HDC __pascal __far BEGINPAINT(HWND, PAINTSTRUCT far *);
MACRO_PATH BEGIN_PATH;
int __pascal __far BIND(SOCKET s, const struct sockaddr far *addr, int namelen);
HRESULT __pascal __far BINDMONIKER(LPMONIKER pmk, DWORD grfOpt, const IID far *const iidResult, LPVOID far *ppvResult);
tagBINDSPEED BINDSPEED_IMMEDIATE;
tagBINDSPEED BINDSPEED_INDEFINITE;
tagBINDSPEED BINDSPEED_MODERATE;
$320585250961ABE9F4D068EEEC4E2CC6 BIND_JUSTTESTEXISTENCE;
$320585250961ABE9F4D068EEEC4E2CC6 BIND_MAYBOTHERUSER;
BOOL __pascal __far BITBLT(HDC, int, int, int, int, HDC, int, int, DWORD);
MACRO_BITPENUP BITPENUP;
MACRO_BITSPIXEL BITSPIXEL;
MACRO_BI BI_RGB;
MACRO_BI BI_RLE4;
MACRO_BI BI_RLE8;
MACRO_BLACKNESS BLACKNESS;
MACRO_BLACKONWHITE BLACKONWHITE;
MACRO_BRUSH BLACK_BRUSH;
MACRO_PEN BLACK_PEN;
MACRO_BM BM_GETCHECK;
MACRO_BM BM_GETSTATE;
MACRO_BM BM_SETCHECK;
MACRO_BM BM_SETSTATE;
MACRO_BM BM_SETSTYLE;
MACRO_BN BN_CLICKED;
MACRO_BN BN_DISABLE;
MACRO_BN BN_DOUBLECLICKED;
MACRO_BN BN_HILITE;
MACRO_BN BN_PAINT;
MACRO_BN BN_UNHILITE;
MACRO_SIMULATED BOLD_FONTTYPE;
void __pascal __far BOUNDINGRECTFROMPOINTS(LPPOINT, int, LPRECT);
BOOL __pascal __far BRINGWINDOWTOTOP(HWND);
MACRO_BS_PUSHBUTTON BS_3STATE;
MACRO_BS_PUSHBUTTON BS_AUTO3STATE;
MACRO_BS_PUSHBUTTON BS_AUTOCHECKBOX;
MACRO_BS_PUSHBUTTON BS_AUTORADIOBUTTON;
MACRO_BS_PUSHBUTTON BS_CHECKBOX;
MACRO_BS_PUSHBUTTON BS_DEFPUSHBUTTON;
MACRO_BS BS_DIBPATTERN;
MACRO_BS_PUSHBUTTON BS_GROUPBOX;
MACRO_BS BS_HATCHED;
MACRO_BS BS_HOLLOW;
MACRO_BS BS_INDEXED;
MACRO_BS_PUSHBUTTON BS_LEFTTEXT;
MACRO_BS BS_NULL;
MACRO_BS_PUSHBUTTON BS_OWNERDRAW;
MACRO_BS BS_PATTERN;
MACRO_BS_PUSHBUTTON BS_PUSHBUTTON;
MACRO_BS_PUSHBUTTON BS_RADIOBUTTON;
MACRO_BS BS_SOLID;
MACRO_BS_PUSHBUTTON BS_USERBUTTON;
MACRO_BUFFLEN BUFFLEN;
int __pascal __far BUILDCOMMDCB(LPCSTR, DCB far *);
MACRO_BXD BXD_BASEHEIGHT;
MACRO_BXD BXD_BASEHORZ;
MACRO_BXD BXD_CELLHEIGHT;
MACRO_BXD BXD_CELLWIDTH;
MACRO_BXD BXD_CUSPHEIGHT;
MACRO_BXD BXD_ENDCUSPHEIGHT;
MACRO_BXS BXS_ENDTEXTMARK;
MACRO_BXS BXS_MASK;
MACRO_BXS BXS_NONE;
MACRO_BXS BXS_RECT;
MACRO_BZ BZ_DISABLECANCELBUTTON;
MACRO_BZ BZ_DISABLERETRYBUTTON;
MACRO_BZ BZ_DISABLESWITCHTOBUTTON;
MACRO_BZ BZ_NOTRESPONDINGDIALOG;
MACRO_C1_UPPER C1_ALPHA;
MACRO_C1_UPPER C1_BLANK;
MACRO_C1_UPPER C1_CNTRL;
MACRO_C1_UPPER C1_DIGIT;
MACRO_C1_UPPER C1_LOWER;
MACRO_C1_UPPER C1_PUNCT;
MACRO_C1_UPPER C1_SPACE;
MACRO_C1 C1_TRANSPARENT;
MACRO_C1_UPPER C1_UPPER;
MACRO_C1_UPPER C1_XDIGIT;
MACRO_C2 C2_ARABICNUMBER;
MACRO_C2 C2_BLOCKSEPARATOR;
MACRO_C2 C2_COMMONSEPARATOR;
MACRO_C2 C2_EUROPENUMBER;
MACRO_C2 C2_EUROPESEPARATOR;
MACRO_C2 C2_EUROPETERMINATOR;
MACRO_C2 C2_LEFTTORIGHT;
MACRO_C2 C2_NOTAPPLICABLE;
MACRO_C2 C2_OTHERNEUTRAL;
MACRO_C2 C2_RIGHTTOLEFT;
MACRO_C2 C2_SEGMENTSEPARATOR;
MACRO_C2 C2_WHITESPACE;
MACRO_C3 C3_DIACRITIC;
MACRO_C3 C3_FULLWIDTH;
MACRO_C3 C3_HALFWIDTH;
MACRO_C3 C3_HIRAGANA;
MACRO_C3 C3_IDEOGRAPH;
MACRO_C3 C3_JAPANACCENT;
MACRO_C3 C3_KATAKANA;
MACRO_C3 C3_NONSPACING;
MACRO_C3 C3_NOTAPPLICABLE;
MACRO_C3 C3_SYMBOL;
MACRO_C3 C3_VOWELMARK;
MACRO_CACHE CACHE_E_FIRST;
MACRO_CACHE CACHE_E_LAST;
MACRO_CACHE_E CACHE_E_NOCACHE_UPDATED;
MACRO_CACHE CACHE_S_FIRST;
MACRO_CACHE_E CACHE_S_FORMATETC_NOTSUPPORTED;
MACRO_CACHE CACHE_S_LAST;
MACRO_CACHE_E CACHE_S_SAMECACHE;
MACRO_CACHE_E CACHE_S_SOMECACHES_NOTUPDATED;
MACRO_CADV CADV_LATEACK;
MACRO_CALLBACK CALLBACK_FUNCTION;
MACRO_CALLBACK CALLBACK_NULL;
MACRO_CALLBACK CALLBACK_TASK;
MACRO_CALLBACK CALLBACK_TYPEMASK;
MACRO_CALLBACK CALLBACK_WINDOW;
BOOL __pascal __far CALLMSGFILTER(MSG far *, int);
LRESULT __pascal __far CALLNEXTHOOKEX(HHOOK hHook, int code, WPARAM wParam, LPARAM lParam);
tagCALLTYPE CALLTYPE_ASYNC;
tagCALLTYPE CALLTYPE_ASYNC_CALLPENDING;
tagCALLTYPE CALLTYPE_NESTED;
tagCALLTYPE CALLTYPE_TOPLEVEL;
tagCALLTYPE CALLTYPE_TOPLEVEL_CALLPENDING;
LRESULT __pascal __far CALLWINDOWPROC(FARPROC, HWND, UINT, WPARAM, LPARAM);
MACRO_CAPS1 CAPS1;
int __pascal __far CATCH(int far *);
MACRO_CBF CBF_FAIL_ADVISES;
MACRO_CBF CBF_FAIL_ALLSVRXACTIONS;
MACRO_CBF CBF_FAIL_CONNECTIONS;
MACRO_CBF CBF_FAIL_EXECUTES;
MACRO_CBF CBF_FAIL_POKES;
MACRO_CBF CBF_FAIL_REQUESTS;
MACRO_CBF CBF_FAIL_SELFCONNECTIONS;
MACRO_CBF CBF_SKIP_ALLNOTIFICATIONS;
MACRO_CBF CBF_SKIP_CONNECT_CONFIRMS;
MACRO_CBF CBF_SKIP_DISCONNECTS;
MACRO_CBF CBF_SKIP_REGISTRATIONS;
MACRO_CBF CBF_SKIP_UNREGISTRATIONS;
MACRO_CBM CBM_INIT;
MACRO_CBN CBN_CLOSEUP;
MACRO_CBN CBN_DBLCLK;
MACRO_CBN_ENDREC CBN_DELAYEDRECOGFAIL;
MACRO_CBN CBN_DROPDOWN;
MACRO_CBN CBN_EDITCHANGE;
MACRO_CBN CBN_EDITUPDATE;
MACRO_CBN_ENDREC CBN_ENDREC;
MACRO_CBN CBN_ERRSPACE;
MACRO_CBN CBN_KILLFOCUS;
MACRO_CBN_ENDREC CBN_RCRESULT;
MACRO_CBN CBN_SELCHANGE;
MACRO_CBN CBN_SELENDCANCEL;
MACRO_CBN CBN_SELENDOK;
MACRO_CBN CBN_SETFOCUS;
MACRO_CBR CBR_110;
MACRO_CBR CBR_1200;
MACRO_CBR CBR_128000;
MACRO_CBR CBR_14400;
MACRO_CBR CBR_19200;
MACRO_CBR CBR_2400;
MACRO_CBR CBR_256000;
MACRO_CBR CBR_300;
MACRO_CBR CBR_38400;
MACRO_CBR CBR_4800;
MACRO_CBR CBR_56000;
MACRO_CBR CBR_600;
MACRO_CBR CBR_9600;
MACRO_CBR_BLOCK CBR_BLOCK;
MACRO_CBS CBS_AUTOHSCROLL;
MACRO_CBS CBS_DISABLENOSCROLL;
MACRO_CBS CBS_DROPDOWN;
MACRO_CBS CBS_DROPDOWNLIST;
MACRO_CBS CBS_HASSTRINGS;
MACRO_CBS CBS_NOINTEGRALHEIGHT;
MACRO_CBS CBS_OEMCONVERT;
MACRO_CBS CBS_OWNERDRAWFIXED;
MACRO_CBS CBS_OWNERDRAWVARIABLE;
MACRO_CBS CBS_SIMPLE;
MACRO_CBS CBS_SORT;
MACRO_CB CB_ADDSTRING;
MACRO_CB CB_DELETESTRING;
MACRO_CB CB_DIR;
MACRO_CB_OKAY CB_ERR;
MACRO_CB_OKAY CB_ERRSPACE;
MACRO_CB CB_FINDSTRING;
MACRO_CB CB_FINDSTRINGEXACT;
MACRO_CB CB_GETCOUNT;
MACRO_CB CB_GETCURSEL;
MACRO_CB CB_GETDROPPEDCONTROLRECT;
MACRO_CB CB_GETDROPPEDSTATE;
MACRO_CB CB_GETEDITSEL;
MACRO_CB CB_GETEXTENDEDUI;
MACRO_CB CB_GETITEMDATA;
MACRO_CB CB_GETITEMHEIGHT;
MACRO_CB CB_GETLBTEXT;
MACRO_CB CB_GETLBTEXTLEN;
MACRO_CB CB_INSERTSTRING;
MACRO_CB CB_LIMITTEXT;
MACRO_CB_OKAY CB_OKAY;
MACRO_CB CB_RESETCONTENT;
MACRO_CB CB_SELECTSTRING;
MACRO_CB CB_SETCURSEL;
MACRO_CB CB_SETEDITSEL;
MACRO_CB CB_SETEXTENDEDUI;
MACRO_CB CB_SETITEMDATA;
MACRO_CB CB_SETITEMHEIGHT;
MACRO_CB CB_SHOWDROPDOWN;
MACRO_CCERR CCERR_CHOOSECOLORCODES;
MACRO_CCSTYLEORD CCFLAGSORD;
MACRO_CCHDEVICENAME CCHDEVICENAME;
MACRO_CCHDEVICENAME CCHPAPERNAME;
MACRO_CCINFOORD CCINFOORD;
MACRO_CCSTYLEORD CCSTYLEORD;
tagCALLCONV CC_CDECL;
MACRO_CC CC_CHORD;
MACRO_CC CC_CIRCLES;
MACRO_CC CC_ELLIPSES;
MACRO_CC_RGBINIT CC_ENABLEHOOK;
MACRO_CC_RGBINIT CC_ENABLETEMPLATE;
MACRO_CC_RGBINIT CC_ENABLETEMPLATEHANDLE;
MACRO_CC_RGBINIT CC_FULLOPEN;
MACRO_CC CC_INTERIORS;
tagCALLCONV CC_MACPASCAL;
tagCALLCONV CC_MAX;
tagCALLCONV CC_MSCPASCAL;
MACRO_CC CC_NONE;
tagCALLCONV CC_PASCAL;
MACRO_CC CC_PIE;
MACRO_CC_RGBINIT CC_PREVENTFULLOPEN;
tagCALLCONV CC_RESERVED;
MACRO_CC_RGBINIT CC_RGBINIT;
MACRO_CC CC_ROUNDRECT;
MACRO_CC_RGBINIT CC_SHOWHELP;
tagCALLCONV CC_STDCALL;
MACRO_CC CC_STYLED;
tagCALLCONV CC_SYSCALL;
MACRO_CC CC_WIDE;
MACRO_CC CC_WIDESTYLED;
MACRO_CDERR CDERR_DIALOGFAILURE;
MACRO_CDERR CDERR_FINDRESFAILURE;
MACRO_CDERR CDERR_GENERALCODES;
MACRO_CDERR CDERR_INITIALIZATION;
MACRO_CDERR CDERR_LOADRESFAILURE;
MACRO_CDERR CDERR_LOADSTRFAILURE;
MACRO_CDERR CDERR_LOCKRESFAILURE;
MACRO_CDERR CDERR_MEMALLOCFAILURE;
MACRO_CDERR CDERR_MEMLOCKFAILURE;
MACRO_CDERR CDERR_NOHINSTANCE;
MACRO_CDERR CDERR_NOHOOK;
MACRO_CDERR CDERR_NOTEMPLATE;
MACRO_CDERR CDERR_REGISTERMSGFAIL;
MACRO_CDERR CDERR_STRUCTSIZE;
MACRO_CD CD_LBSELADD;
MACRO_CD CD_LBSELCHANGE;
MACRO_CD CD_LBSELNOITEMS;
MACRO_CD CD_LBSELSUB;
MACRO_CE CE_BREAK;
MACRO_CE CE_CTSTO;
MACRO_CE CE_DNS;
MACRO_CE CE_DSRTO;
MACRO_CE CE_FRAME;
MACRO_CE CE_IOE;
MACRO_CE CE_MODE;
MACRO_CE CE_OOP;
MACRO_CE CE_OVERRUN;
MACRO_CE CE_PTO;
MACRO_CE CE_RLSDTO;
MACRO_CE CE_RXOVER;
MACRO_CE CE_RXPARITY;
MACRO_CE CE_TXFULL;
MACRO_CFERR CFERR_CHOOSEFONTCODES;
MACRO_CFERR CFERR_MAXLESSTHANMIN;
MACRO_CFERR CFERR_NOFONTS;
MACRO_CFSEPCHAR CFSEPCHAR;
MACRO_CF_SCREENFONTS CF_ANSIONLY;
MACRO_CF_SCREENFONTS CF_APPLY;
MACRO_CF CF_BITMAP;
MACRO_CF_SCREENFONTS CF_BOTH;
MACRO_CF CF_DIB;
MACRO_CF CF_DIF;
MACRO_CF_SHOWHELPBUTTON CF_DISABLEACTIVATEAS;
MACRO_CF_SHOWHELPBUTTON CF_DISABLEDISPLAYASICON;
MACRO_CF CF_DSPBITMAP;
MACRO_CF CF_DSPMETAFILEPICT;
MACRO_CF CF_DSPTEXT;
MACRO_CF_SCREENFONTS CF_EFFECTS;
MACRO_CF_SCREENFONTS CF_ENABLEHOOK;
MACRO_CF_SCREENFONTS CF_ENABLETEMPLATE;
MACRO_CF_SCREENFONTS CF_ENABLETEMPLATEHANDLE;
MACRO_CF_SCREENFONTS CF_FIXEDPITCHONLY;
MACRO_CF_SCREENFONTS CF_FORCEFONTEXIST;
MACRO_CF CF_GDIOBJFIRST;
MACRO_CF CF_GDIOBJLAST;
MACRO_CF_SCREENFONTS CF_INITTOLOGFONTSTRUCT;
MACRO_CF_SCREENFONTS CF_LIMITSIZE;
MACRO_CF CF_METAFILEPICT;
MACRO_CF_SCREENFONTS CF_NOFACESEL;
MACRO_CF_SCREENFONTS CF_NOOEMFONTS;
MACRO_CF_SCREENFONTS CF_NOSIMULATIONS;
MACRO_CF_SCREENFONTS CF_NOSIZESEL;
MACRO_CF_SCREENFONTS CF_NOSTYLESEL;
MACRO_CF_SCREENFONTS CF_NOVECTORFONTS;
MACRO_CF CF_OEMTEXT;
MACRO_CF CF_OWNERDISPLAY;
MACRO_CF CF_PALETTE;
MACRO_CF CF_PENDATA;
MACRO_CF_SCREENFONTS CF_PRINTERFONTS;
MACRO_CF CF_PRIVATEFIRST;
MACRO_CF CF_PRIVATELAST;
MACRO_CF CF_RIFF;
MACRO_CF_SCREENFONTS CF_SCALABLEONLY;
MACRO_CF_SCREENFONTS CF_SCREENFONTS;
MACRO_CF_SHOWHELPBUTTON CF_SELECTACTIVATEAS;
MACRO_CF_SHOWHELPBUTTON CF_SELECTCONVERTTO;
MACRO_CF_SHOWHELPBUTTON CF_SETACTIVATEDEFAULT;
MACRO_CF_SHOWHELPBUTTON CF_SETCONVERTDEFAULT;
MACRO_CF_SCREENFONTS CF_SHOWHELP;
MACRO_CF_SHOWHELPBUTTON CF_SHOWHELPBUTTON;
MACRO_CF CF_SYLK;
MACRO_CF CF_TEXT;
MACRO_CF CF_TIFF;
MACRO_CF_SCREENFONTS CF_TTONLY;
MACRO_CF_SCREENFONTS CF_USESTYLE;
MACRO_CF CF_WAVE;
MACRO_CF_SCREENFONTS CF_WYSIWYG;
BOOL __pascal __far CHANGECLIPBOARDCHAIN(HWND, HWND);
BOOL __pascal __far CHANGEMENU(HMENU, UINT, LPCSTR, UINT, UINT);
int __pascal __far CHARACTERTOSYMBOL(LPSTR, int, LPSYV);
void __pascal __far CHECKDLGBUTTON(HWND, int, UINT);
BOOL __pascal __far CHECKMENUITEM(HMENU, UINT, UINT);
void __pascal __far CHECKRADIOBUTTON(HWND, int, int, int);
HWND __pascal __far CHILDWINDOWFROMPOINT(HWND, POINT);
MACRO_CHARSET CHINESEBIG5_CHARSET;
BOOL __pascal __far CHOOSECOLOR(CHOOSECOLOR far *);
BOOL __pascal __far CHOOSEFONT(CHOOSEFONT far *);
BOOL __pascal __far CHORD(HDC, int, int, int, int, int, int, int, int);
MACRO_CIF CIF_SELECTCURRENT;
MACRO_CIF CIF_SELECTDEFAULT;
MACRO_CIF CIF_SELECTFROMFILE;
MACRO_CIF CIF_SHOWHELP;
MACRO_CIF CIF_USEICONEXE;
MACRO_CLASSFACTORY CLASSFACTORY_E_FIRST;
MACRO_CLASSFACTORY CLASSFACTORY_E_LAST;
MACRO_CLASSFACTORY CLASSFACTORY_S_FIRST;
MACRO_CLASSFACTORY CLASSFACTORY_S_LAST;
BOOL __pascal __far CLASSFIRST(CLASSENTRY far *lpClass);
BOOL __pascal __far CLASSNEXT(CLASSENTRY far *lpClass);
MACRO_CLASS CLASS_E_CLASSNOTAVAILABLE;
MACRO_CLASS CLASS_E_NOAGGREGATION;
int __pascal __far CLEARCOMMBREAK(int);
MACRO_CLIENTSITE CLIENTSITE_E_FIRST;
MACRO_CLIENTSITE CLIENTSITE_E_LAST;
MACRO_CLIENTSITE CLIENTSITE_S_FIRST;
MACRO_CLIENTSITE CLIENTSITE_S_LAST;
void __pascal __far CLIENTTOSCREEN(HWND, POINT far *);
MACRO_CLIPBRD_E CLIPBRD_E_BAD_DATA;
MACRO_CLIPBRD_E CLIPBRD_E_CANT_CLOSE;
MACRO_CLIPBRD_E CLIPBRD_E_CANT_EMPTY;
MACRO_CLIPBRD_E CLIPBRD_E_CANT_OPEN;
MACRO_CLIPBRD_E CLIPBRD_E_CANT_SET;
MACRO_CLIPBRD CLIPBRD_E_FIRST;
MACRO_CLIPBRD CLIPBRD_E_LAST;
MACRO_CLIPBRD CLIPBRD_S_FIRST;
MACRO_CLIPBRD CLIPBRD_S_LAST;
MACRO_CLIPCAPS CLIPCAPS;
void __pascal __far CLIPCURSOR(const RECT far *);
MACRO_CLIP CLIP_CHARACTER_PRECIS;
MACRO_CLIP CLIP_DEFAULT_PRECIS;
MACRO_CLIP CLIP_EMBEDDED;
MACRO_CLIP CLIP_LH_ANGLES;
MACRO_CLIP CLIP_MASK;
MACRO_CLIP CLIP_STROKE_PRECIS;
MACRO_PATH CLIP_TO_PATH;
MACRO_CLIP CLIP_TT_ALWAYS;
BOOL __pascal __far CLOSECLIPBOARD();
int __pascal __far CLOSECOMM(int);
LRESULT __pascal __far CLOSEDRIVER(HDRVR hDriver, LPARAM lParam1, LPARAM lParam2);
HMETAFILE __pascal __far CLOSEMETAFILE(HDC);
void __pascal __far CLOSERECOGNIZER();
int __pascal __far CLOSESOCKET(SOCKET s);
void __pascal __far CLOSESOUND();
void __pascal __far CLOSEWINDOW(HWND);
MACRO_CLRDTR CLRDTR;
MACRO_SETRTS CLRRTS;
tagCLSCTX CLSCTX_INPROC_HANDLER;
tagCLSCTX CLSCTX_INPROC_SERVER;
tagCLSCTX CLSCTX_LOCAL_SERVER;
HRESULT __pascal __far CLSIDFROMPROGID(LPCSTR lpszProgID, LPCLSID lpclsid);
HRESULT __pascal __far CLSIDFROMSTRING(LPSTR lpsz, LPCLSID pclsid);
MACRO_CL CL_MAXIMUM;
MACRO_CL CL_MINIMUM;
MACRO_CL CL_NULL;
MACRO_CN CN_EVENT;
MACRO_CN CN_RECEIVE;
MACRO_CN CN_TRANSMIT;
DWORD __pascal __far COBUILDVERSION();
HRESULT __pascal __far COCREATEGUID(GUID far *pguid);
HRESULT __pascal __far COCREATEINSTANCE(const CLSID far *const rclsid, LPUNKNOWN pUnkOuter, DWORD dwClsContext, const IID far *const riid, LPVOID far *ppv);
HRESULT __pascal __far COCREATESTANDARDMALLOC(DWORD memctx, IMalloc far * far *ppMalloc);
HRESULT __pascal __far CODISCONNECTOBJECT(LPUNKNOWN pUnk, DWORD dwReserved);
BOOL __pascal __far CODOSDATETIMETOFILETIME(WORD nDosDate, WORD nDosTime, FILETIME far *lpFileTime);
HRESULT __pascal __far COFILETIMENOW(FILETIME far *lpFileTime);
BOOL __pascal __far COFILETIMETODOSDATETIME(FILETIME far *lpFileTime, LPWORD lpDosDate, LPWORD lpDosTime);
void __pascal __far COFREEALLLIBRARIES();
void __pascal __far COFREELIBRARY(HINSTANCE hInst);
void __pascal __far COFREEUNUSEDLIBRARIES();
HRESULT __pascal __far COGETCLASSOBJECT(const CLSID far *const rclsid, DWORD dwClsContext, LPVOID pvReserved, const IID far *const riid, LPVOID far *ppv);
DWORD __pascal __far COGETCURRENTPROCESS();
HRESULT __pascal __far COGETMALLOC(DWORD dwMemContext, LPMALLOC far *ppMalloc);
HRESULT __pascal __far COGETSTANDARDMARSHAL(const IID far *const riid, LPUNKNOWN pUnk, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags, LPMARSHAL far *ppMarshal);
HRESULT __pascal __far COGETTREATASCLASS(const CLSID far *const clsidOld, LPCLSID pClsidNew);
HRESULT __pascal __far COINITIALIZE(LPMALLOC pMalloc);
BOOL __pascal __far COISHANDLERCONNECTED(LPUNKNOWN pUnk);
BOOL __pascal __far COISOLE1CLASS(const CLSID far *const rclsid);
HINSTANCE __pascal __far COLOADLIBRARY(LPSTR lpszLibName, BOOL bAutoFree);
HRESULT __pascal __far COLOCKOBJECTEXTERNAL(LPUNKNOWN pUnk, BOOL fLock, BOOL fLastUnlockReleases);
MACRO_COLORONCOLOR COLORONCOLOR;
MACRO_COLORRES COLORRES;
MACRO_COLOR COLOR_ACTIVEBORDER;
MACRO_COLOR COLOR_ACTIVECAPTION;
MACRO_COLOR_HUESCROLL COLOR_ADD;
MACRO_COLOR COLOR_APPWORKSPACE;
MACRO_COLOR COLOR_BACKGROUND;
MACRO_COLOR_HUESCROLL COLOR_BLUE;
MACRO_COLOR_HUESCROLL COLOR_BLUEACCEL;
MACRO_COLOR_HUESCROLL COLOR_BOX1;
MACRO_COLOR COLOR_BTNFACE;
MACRO_COLOR COLOR_BTNHIGHLIGHT;
MACRO_COLOR COLOR_BTNSHADOW;
MACRO_COLOR COLOR_BTNTEXT;
MACRO_COLOR COLOR_CAPTIONTEXT;
MACRO_COLOR_HUESCROLL COLOR_CURRENT;
MACRO_COLOR_HUESCROLL COLOR_CUSTOM1;
MACRO_COLOR_HUESCROLL COLOR_ELEMENT;
MACRO_COLOR COLOR_GRAYTEXT;
MACRO_COLOR_HUESCROLL COLOR_GREEN;
MACRO_COLOR_HUESCROLL COLOR_GREENACCEL;
MACRO_COLOR COLOR_HIGHLIGHT;
MACRO_COLOR COLOR_HIGHLIGHTTEXT;
MACRO_COLOR_HUESCROLL COLOR_HUE;
MACRO_COLOR_HUESCROLL COLOR_HUEACCEL;
MACRO_COLOR_HUESCROLL COLOR_HUESCROLL;
MACRO_COLOR COLOR_INACTIVEBORDER;
MACRO_COLOR COLOR_INACTIVECAPTION;
MACRO_COLOR COLOR_INACTIVECAPTIONTEXT;
MACRO_COLOR_HUESCROLL COLOR_LUM;
MACRO_COLOR_HUESCROLL COLOR_LUMACCEL;
MACRO_COLOR_HUESCROLL COLOR_LUMSCROLL;
MACRO_COLOR COLOR_MENU;
MACRO_COLOR COLOR_MENUTEXT;
MACRO_COLOR_HUESCROLL COLOR_MIX;
MACRO_COLOR_HUESCROLL COLOR_PALETTE;
MACRO_COLOR_HUESCROLL COLOR_RAINBOW;
MACRO_COLOR_HUESCROLL COLOR_RED;
MACRO_COLOR_HUESCROLL COLOR_REDACCEL;
MACRO_COLOR_HUESCROLL COLOR_SAMPLES;
MACRO_COLOR_HUESCROLL COLOR_SAT;
MACRO_COLOR_HUESCROLL COLOR_SATACCEL;
MACRO_COLOR_HUESCROLL COLOR_SATSCROLL;
MACRO_COLOR_HUESCROLL COLOR_SAVE;
MACRO_COLOR_HUESCROLL COLOR_SCHEMES;
MACRO_COLOR COLOR_SCROLLBAR;
MACRO_COLOR_HUESCROLL COLOR_SOLID;
MACRO_COLOR_HUESCROLL COLOR_TUNE;
MACRO_COLOR COLOR_WINDOW;
MACRO_COLOR COLOR_WINDOWFRAME;
MACRO_COLOR COLOR_WINDOWTEXT;
HRESULT __pascal __far COMARSHALHRESULT(LPSTREAM pstm, HRESULT hresult);
HRESULT __pascal __far COMARSHALINTERFACE(LPSTREAM pStm, const IID far *const riid, LPUNKNOWN pUnk, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags);
int __pascal __far COMBINERGN(HRGN, HRGN, HRGN, int);
DWORD __pascal __far COMMDLGEXTENDEDERROR();
HPENDATA __pascal __far COMPACTPENDATA(HPENDATA, UINT);
int __pascal __far COMPARESTRINGA(LCID, unsigned __int32, const char far *, int, const char far *, int);
MACRO_COMPLEXREGION COMPLEXREGION;
BOOL __pascal __far CONFIGDSN(HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszAttributes);
UINT __pascal __far CONFIGRECOGNIZER(UINT, WPARAM, LPARAM);
BOOL __pascal __far CONFIGTRANSLATOR(HWND hwndParent, DWORD far *pvOption);
int __pascal __far CONNECT(SOCKET s, const struct sockaddr far *name, int namelen);
MACRO_CONVERT10 CONVERT10_E_FIRST;
MACRO_CONVERT10 CONVERT10_E_LAST;
MACRO_CONVERT10_E CONVERT10_E_OLESTREAM_BITMAP_TO_DIB;
MACRO_CONVERT10_E CONVERT10_E_OLESTREAM_FMT;
MACRO_CONVERT10_E CONVERT10_E_OLESTREAM_GET;
MACRO_CONVERT10_E CONVERT10_E_OLESTREAM_PUT;
MACRO_CONVERT10_E CONVERT10_E_STG_DIB_TO_BITMAP;
MACRO_CONVERT10_E CONVERT10_E_STG_FMT;
MACRO_CONVERT10_E CONVERT10_E_STG_NO_STD_STREAM;
MACRO_CONVERT10 CONVERT10_S_FIRST;
MACRO_CONVERT10 CONVERT10_S_LAST;
MACRO_CONVERT10_E CONVERT10_S_NO_PRESENTATION;
HCURSOR __pascal __far COPYCURSOR(HINSTANCE, HCURSOR);
HICON __pascal __far COPYICON(HINSTANCE, HICON);
__int32 __pascal __far COPYLZFILE(HFILE, HFILE);
HMETAFILE __pascal __far COPYMETAFILE(HMETAFILE, LPCSTR);
void __pascal __far COPYRECT(RECT far *, const RECT far *);
HRESULT __pascal __far COREGISTERCLASSOBJECT(const CLSID far *const rclsid, LPUNKNOWN pUnk, DWORD dwClsContext, DWORD flags, LPDWORD lpdwRegister);
HRESULT __pascal __far COREGISTERMESSAGEFILTER(LPMESSAGEFILTER lpMessageFilter, LPMESSAGEFILTER far *lplpMessageFilter);
HRESULT __pascal __far CORELEASEMARSHALDATA(LPSTREAM pStm);
HRESULT __pascal __far COREVOKECLASSOBJECT(DWORD dwRegister);
BOOL __pascal __far CORRECTWRITING(HWND, LPSTR, UINT, LPRC, DWORD, DWORD);
HRESULT __pascal __far COTREATASCLASS(const CLSID far *const clsidOld, const CLSID far *const clsidNew);
void __pascal __far COUNINITIALIZE();
HRESULT __pascal __far COUNMARSHALHRESULT(LPSTREAM pstm, HRESULT far *phresult);
HRESULT __pascal __far COUNMARSHALINTERFACE(LPSTREAM pStm, const IID far *const riid, LPVOID far *ppv);
int __pascal __far COUNTCLIPBOARDFORMATS();
int __pascal __far COUNTVOICENOTES(int);
MACRO_CO CO_E_ALREADYINITIALIZED;
MACRO_CO CO_E_APPDIDNTREG;
MACRO_CO CO_E_APPNOTFOUND;
MACRO_CO CO_E_APPSINGLEUSE;
MACRO_CO CO_E_CANTDETERMINECLASS;
MACRO_CO CO_E_CLASSSTRING;
MACRO_CO CO_E_DLLNOTFOUND;
MACRO_CO CO_E_ERRORINAPP;
MACRO_CO CO_E_ERRORINDLL;
MACRO_CO CO_E_FIRST;
MACRO_CO CO_E_IIDSTRING;
MACRO_CO CO_E_LAST;
MACRO_CO CO_E_NOTINITIALIZED;
MACRO_CO CO_E_OBJISREG;
MACRO_CO CO_E_OBJNOTCONNECTED;
MACRO_CO CO_E_OBJNOTREG;
MACRO_CO CO_E_WRONGOSFORAPP;
MACRO_CO CO_S_FIRST;
MACRO_CO CO_S_LAST;
MACRO_CPL CPL_DBLCLK;
MACRO_CPL CPL_EXIT;
MACRO_CPL CPL_GETCOUNT;
MACRO_CPL CPL_INIT;
MACRO_CPL CPL_INQUIRE;
MACRO_CPL CPL_NEWINQUIRE;
MACRO_CPL CPL_SELECT;
MACRO_CPL CPL_STOP;
MACRO_CP CP_NONE;
MACRO_CP CP_RECTANGLE;
MACRO_CP CP_REGION;
MACRO_CP_WINANSI CP_WINANSI;
HRESULT __pascal __far CREATEANTIMONIKER(LPMONIKER far *ppmk);
HRESULT __pascal __far CREATEBINDCTX(DWORD reserved, LPBC far *ppbc);
HBITMAP __pascal __far CREATEBITMAP(int, int, UINT, UINT, const void far *);
HBITMAP __pascal __far CREATEBITMAPINDIRECT(BITMAP far *);
HBRUSH __pascal __far CREATEBRUSHINDIRECT(LOGBRUSH far *);
void __pascal __far CREATECARET(HWND, HBITMAP, int, int);
HBITMAP __pascal __far CREATECOMPATIBLEBITMAP(HDC, int, int);
HDC __pascal __far CREATECOMPATIBLEDC(HDC);
HCURSOR __pascal __far CREATECURSOR(HINSTANCE, int, int, int, int, const void far *, const void far *);
HRESULT __pascal __far CREATEDATAADVISEHOLDER(LPDATAADVISEHOLDER far *ppDAHolder);
HRESULT __pascal __far CREATEDATACACHE(LPUNKNOWN pUnkOuter, const CLSID far *const rclsid, const IID far *const iid, LPVOID far *ppv);
HDC __pascal __far CREATEDC(LPCSTR, LPCSTR, LPCSTR, const void far *);
HWND __pascal __far CREATEDIALOG(HINSTANCE, LPCSTR, HWND, DLGPROC);
HWND __pascal __far CREATEDIALOGINDIRECT(HINSTANCE, const void far *, HWND, DLGPROC);
HWND __pascal __far CREATEDIALOGINDIRECTPARAM(HINSTANCE, const void far *, HWND, DLGPROC, LPARAM);
HWND __pascal __far CREATEDIALOGPARAM(HINSTANCE, LPCSTR, HWND, DLGPROC, LPARAM);
HBITMAP __pascal __far CREATEDIBITMAP(HDC, BITMAPINFOHEADER far *, DWORD, const void far *, BITMAPINFO far *, UINT);
HBRUSH __pascal __far CREATEDIBPATTERNBRUSH(HGLOBAL, UINT);
HBITMAP __pascal __far CREATEDISCARDABLEBITMAP(HDC, int, int);
HRESULT __pascal __far CREATEDISPTYPEINFO(INTERFACEDATA far *pidata, LCID lcid, ITypeInfo far * far *pptinfo);
HRGN __pascal __far CREATEELLIPTICRGN(int, int, int, int);
HRGN __pascal __far CREATEELLIPTICRGNINDIRECT(const RECT far *);
HRESULT __pascal __far CREATEFILEMONIKER(LPSTR lpszPathName, LPMONIKER far *ppmk);
HFONT __pascal __far CREATEFONT(int, int, int, int, int, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, LPCSTR);
HFONT __pascal __far CREATEFONTINDIRECT(const LOGFONT far *);
HRESULT __pascal __far CREATEGENERICCOMPOSITE(LPMONIKER pmkFirst, LPMONIKER pmkRest, LPMONIKER far *ppmkComposite);
HBRUSH __pascal __far CREATEHATCHBRUSH(int, COLORREF);
HWND __pascal __far CREATEHATCHWINDOW(HWND hWndParent, HINSTANCE hInst);
HDC __pascal __far CREATEIC(LPCSTR, LPCSTR, LPCSTR, const void far *);
HICON __pascal __far CREATEICON(HINSTANCE, int, int, BYTE, BYTE, const void far *, const void far *);
HRESULT __pascal __far CREATEILOCKBYTESONHGLOBAL(HGLOBAL hGlobal, BOOL fDeleteOnRelease, LPLOCKBYTES far *pplkbyt);
HRESULT __pascal __far CREATEITEMMONIKER(LPSTR lpszDelim, LPSTR lpszItem, LPMONIKER far *ppmk);
HMENU __pascal __far CREATEMENU();
HDC __pascal __far CREATEMETAFILE(LPCSTR);
HRESULT __pascal __far CREATEOLEADVISEHOLDER(LPOLEADVISEHOLDER far *ppOAHolder);
HPALETTE __pascal __far CREATEPALETTE(const LOGPALETTE far *);
HBRUSH __pascal __far CREATEPATTERNBRUSH(HBITMAP);
HPEN __pascal __far CREATEPEN(int, int, COLORREF);
HPENDATA __pascal __far CREATEPENDATA(LPPENINFO, int, UINT, UINT);
HPEN __pascal __far CREATEPENINDIRECT(LOGPEN far *);
HRESULT __pascal __far CREATEPOINTERMONIKER(LPUNKNOWN punk, LPMONIKER far *ppmk);
HRGN __pascal __far CREATEPOLYGONRGN(const POINT far *, int, int);
HRGN __pascal __far CREATEPOLYPOLYGONRGN(const POINT far *, const int far *, int, int);
HMENU __pascal __far CREATEPOPUPMENU();
HRGN __pascal __far CREATERECTRGN(int, int, int, int);
HRGN __pascal __far CREATERECTRGNINDIRECT(const RECT far *);
HRGN __pascal __far CREATEROUNDRECTRGN(int, int, int, int, int, int);
BOOL __pascal __far CREATESCALABLEFONTRESOURCE(UINT, LPCSTR, LPCSTR, LPCSTR);
HBRUSH __pascal __far CREATESOLIDBRUSH(COLORREF);
HRESULT __pascal __far CREATESTDDISPATCH(IUnknown far *punkOuter, void far *pvThis, ITypeInfo far *ptinfo, IUnknown far * far *ppunkStdDisp);
HRESULT __pascal __far CREATESTREAMONHGLOBAL(HGLOBAL hGlobal, BOOL fDeleteOnRelease, LPSTREAM far *ppstm);
HRESULT __pascal __far CREATETYPELIB(SYSKIND syskind, LPSTR szFile, ICreateTypeLib far * far *ppctlib);
HWND __pascal __far CREATEWINDOW(LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, void far *);
HWND __pascal __far CREATEWINDOWEX(DWORD, LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, void far *);
MACRO_CRUC CRUC_REMOVE;
MACRO_CSTF CSTF_CTSHOLD;
MACRO_CSTF CSTF_DSRHOLD;
MACRO_CSTF CSTF_EOF;
MACRO_CSTF CSTF_RLSDHOLD;
MACRO_CSTF CSTF_TXIM;
MACRO_CSTF CSTF_XOFFHOLD;
MACRO_CSTF CSTF_XOFFSENT;
MACRO_CS CS_BYTEALIGNCLIENT;
MACRO_CS CS_BYTEALIGNWINDOW;
MACRO_CS CS_CLASSDC;
MACRO_CS CS_DBLCLKS;
MACRO_CS CS_GLOBALCLASS;
MACRO_CS CS_HREDRAW;
MACRO_CS CS_KEYCVTWINDOW;
MACRO_CS CS_NOCLOSE;
MACRO_CS CS_NOKEYCVT;
MACRO_CS CS_OWNDC;
MACRO_CS CS_PARENTDC;
MACRO_CS CS_SAVEBITS;
MACRO_CS CS_VREDRAW;
MACRO_CTLCLASS CTLCLASS;
MACRO_CTLCOLOR CTLCOLOR_BTN;
MACRO_CTLCOLOR CTLCOLOR_DLG;
MACRO_CTLCOLOR CTLCOLOR_EDIT;
MACRO_CTLCOLOR CTLCOLOR_LISTBOX;
MACRO_CTLCOLOR CTLCOLOR_MSGBOX;
MACRO_CTLCOLOR CTLCOLOR_SCROLLBAR;
MACRO_CTLCOLOR CTLCOLOR_STATIC;
MACRO_CTLDESCR CTLDESCR;
MACRO_CTLTITLE CTLTITLE;
MACRO_CTLTYPES CTLTYPES;
MACRO_CTRY CTRY_AUSTRALIA;
MACRO_CTRY CTRY_AUSTRIA;
MACRO_CTRY CTRY_BELGIUM;
MACRO_CTRY CTRY_BRAZIL;
MACRO_CTRY CTRY_CANADA;
MACRO_CTRY CTRY_DEFAULT;
MACRO_CTRY CTRY_DENMARK;
MACRO_CTRY CTRY_FINLAND;
MACRO_CTRY CTRY_FRANCE;
MACRO_CTRY CTRY_GERMANY;
MACRO_CTRY CTRY_ICELAND;
MACRO_CTRY CTRY_IRELAND;
MACRO_CTRY CTRY_ITALY;
MACRO_CTRY CTRY_JAPAN;
MACRO_CTRY CTRY_MEXICO;
MACRO_CTRY CTRY_NETHERLANDS;
MACRO_CTRY CTRY_NEW_ZEALAND;
MACRO_CTRY CTRY_NORWAY;
MACRO_CTRY CTRY_PORTUGAL;
MACRO_CTRY CTRY_PRCHINA;
MACRO_CTRY CTRY_SOUTH_KOREA;
MACRO_CTRY CTRY_SPAIN;
MACRO_CTRY CTRY_SWEDEN;
MACRO_CTRY CTRY_SWITZERLAND;
MACRO_CTRY CTRY_TAIWAN;
MACRO_CTRY CTRY_UNITED_KINGDOM;
MACRO_CTRY CTRY_UNITED_STATES;
MACRO_CT CT_CTYPE1;
MACRO_CT CT_CTYPE2;
MACRO_CT CT_CTYPE3;
MACRO_CURVECAPS CURVECAPS;
MACRO_CWCSTORAGENAME CWCSTORAGENAME;
MACRO_CWR CWR_KKCONVERT;
MACRO_CWR CWR_SINGLELINEEDIT;
MACRO_CWR CWR_STRIPCR;
MACRO_CWR CWR_STRIPLF;
MACRO_CWR CWR_STRIPTAB;
MACRO_CWR CWR_TITLE;
MACRO_CW CW_USEDEFAULT;
tagDATADIR DATADIR_GET;
tagDATADIR DATADIR_SET;
MACRO_DATA DATA_E_FIRST;
MACRO_DATA_E DATA_E_FORMATETC;
MACRO_DATA DATA_E_LAST;
MACRO_DATA DATA_S_FIRST;
MACRO_DATA DATA_S_LAST;
MACRO_DATA_E DATA_S_SAMEFORMATETC;
MACRO_DBF DBF_APPLICATION;
MACRO_DBF DBF_DRIVER;
MACRO_DBF DBF_ERROR;
MACRO_DBF DBF_FATAL;
MACRO_DBF DBF_GDI;
MACRO_DBF DBF_KERNEL;
MACRO_DBF DBF_KRN_LOADMODULE;
MACRO_DBF DBF_KRN_MEMMAN;
MACRO_DBF DBF_KRN_SEGMENTLOAD;
MACRO_DBF DBF_MMSYSTEM;
MACRO_DBF DBF_PENWIN;
MACRO_DBF DBF_TRACE;
MACRO_DBF DBF_USER;
MACRO_DBF DBF_WARNING;
void __pascal __far DBGDUMPCLASSNAME(IUnknown far *pUnk);
void __pascal __far DBGDUMPEXTERNALOBJECT(IUnknown far *pUnk, DWORD dwReserved);
void __pascal __far DBGDUMPOBJECT(IUnknown far *pUnk, DWORD dwReserved);
BOOL __pascal __far DBGISOBJECTVALID(IUnknown far *pUnk);
MACRO_DBO DBO_BUFFERFILL;
MACRO_DBO DBO_CHECKFREE;
MACRO_DBO DBO_CHECKHEAP;
MACRO_DBO DBO_DISABLEGPTRAPPING;
MACRO_DBO DBO_INT3BREAK;
MACRO_DBO DBO_NOERRORBREAK;
MACRO_DBO DBO_NOFATALBREAK;
MACRO_DBO DBO_SILENT;
MACRO_DBO DBO_TRACEBREAK;
MACRO_DBO DBO_WARNINGBREAK;
MACRO_DCB DCB_ACCUMULATE;
MACRO_DCB DCB_DIRTY;
MACRO_DCB DCB_DISABLE;
MACRO_DCB DCB_ENABLE;
MACRO_DCB DCB_RESET;
MACRO_DCB DCB_SET;
MACRO_DCTT DCTT_BITMAP;
MACRO_DCTT DCTT_DOWNLOAD;
MACRO_DCTT DCTT_SUBDEV;
MACRO_DCX DCX_CACHE;
MACRO_DCX DCX_CLIPCHILDREN;
MACRO_DCX DCX_CLIPSIBLINGS;
MACRO_DCX DCX_EXCLUDERGN;
MACRO_DCX DCX_INTERSECTRGN;
MACRO_DCX DCX_LOCKWINDOWUPDATE;
MACRO_DCX DCX_PARENTCLIP;
MACRO_DCX DCX_USESTYLE;
MACRO_DCX DCX_WINDOW;
MACRO_DC_FIELDS DC_BINNAMES;
MACRO_DC_FIELDS DC_BINS;
MACRO_DC_FIELDS DC_COPIES;
MACRO_DC_FIELDS DC_DRIVER;
MACRO_DC_FIELDS DC_DUPLEX;
MACRO_DC_FIELDS DC_ENUMRESOLUTIONS;
MACRO_DC_FIELDS DC_EXTRA;
MACRO_DC_FIELDS DC_FIELDS;
MACRO_DC_FIELDS DC_FILEDEPENDENCIES;
MACRO_DC DC_HASDEFID;
MACRO_DC_FIELDS DC_MAXEXTENT;
MACRO_DC_FIELDS DC_MINEXTENT;
MACRO_DC_FIELDS DC_ORIENTATION;
MACRO_DC_FIELDS DC_PAPERNAMES;
MACRO_DC_FIELDS DC_PAPERS;
MACRO_DC_FIELDS DC_PAPERSIZE;
MACRO_DC_FIELDS DC_SIZE;
MACRO_DC_FIELDS DC_TRUETYPE;
MACRO_DC_FIELDS DC_VERSION;
BOOL __pascal __far DDEABANDONTRANSACTION(DWORD idInst, HCONV hConv, DWORD idTransaction);
BYTE far *__pascal __far DDEACCESSDATA(HDDEDATA hData, DWORD far *pcbDataSize);
HDDEDATA __pascal __far DDEADDDATA(HDDEDATA hData, void far *pSrc, DWORD cb, DWORD cbOff);
HDDEDATA __pascal __far DDECLIENTTRANSACTION(void far *pData, DWORD cbData, HCONV hConv, HSZ hszItem, UINT wFmt, UINT wType, DWORD dwTimeout, DWORD far *pdwResult);
int __pascal __far DDECMPSTRINGHANDLES(HSZ hsz1, HSZ hsz2);
HCONV __pascal __far DDECONNECT(DWORD idInst, HSZ hszService, HSZ hszTopic, CONVCONTEXT far *pCC);
HCONVLIST __pascal __far DDECONNECTLIST(DWORD idInst, HSZ hszService, HSZ hszTopic, HCONVLIST hConvList, CONVCONTEXT far *pCC);
HDDEDATA __pascal __far DDECREATEDATAHANDLE(DWORD idInst, void far *pSrc, DWORD cb, DWORD cbOff, HSZ hszItem, UINT wFmt, UINT afCmd);
HSZ __pascal __far DDECREATESTRINGHANDLE(DWORD idInst, LPCSTR psz, int iCodePage);
BOOL __pascal __far DDEDISCONNECT(HCONV hConv);
BOOL __pascal __far DDEDISCONNECTLIST(HCONVLIST hConvList);
BOOL __pascal __far DDEENABLECALLBACK(DWORD idInst, HCONV hConv, UINT wCmd);
BOOL __pascal __far DDEFREEDATAHANDLE(HDDEDATA hData);
BOOL __pascal __far DDEFREESTRINGHANDLE(DWORD idInst, HSZ hsz);
DWORD __pascal __far DDEGETDATA(HDDEDATA hData, void far *pDst, DWORD cbMax, DWORD cbOff);
UINT __pascal __far DDEGETLASTERROR(DWORD idInst);
UINT __pascal __far DDEINITIALIZE(DWORD far *pidInst, PFNCALLBACK pfnCallback, DWORD afCmd, DWORD ulRes);
BOOL __pascal __far DDEKEEPSTRINGHANDLE(DWORD idInst, HSZ hsz);
HDDEDATA __pascal __far DDENAMESERVICE(DWORD idInst, HSZ hsz1, HSZ hsz2, UINT afCmd);
BOOL __pascal __far DDEPOSTADVISE(DWORD idInst, HSZ hszTopic, HSZ hszItem);
UINT __pascal __far DDEQUERYCONVINFO(HCONV hConv, DWORD idTransaction, CONVINFO far *pConvInfo);
HCONV __pascal __far DDEQUERYNEXTSERVER(HCONVLIST hConvList, HCONV hConvPrev);
DWORD __pascal __far DDEQUERYSTRING(DWORD idInst, HSZ hsz, LPSTR psz, DWORD cchMax, int iCodePage);
HCONV __pascal __far DDERECONNECT(HCONV hConv);
BOOL __pascal __far DDESETUSERHANDLE(HCONV hConv, DWORD id, DWORD hUser);
BOOL __pascal __far DDEUNACCESSDATA(HDDEDATA hData);
BOOL __pascal __far DDEUNINITIALIZE(DWORD idInst);
MACRO_DDE DDE_FACK;
MACRO_DDE DDE_FACKREQ;
MACRO_DDE DDE_FACKRESERVED;
MACRO_DDE DDE_FADVRESERVED;
MACRO_DDE DDE_FAPPSTATUS;
MACRO_DDE DDE_FBUSY;
MACRO_DDE DDE_FDATRESERVED;
MACRO_DDE DDE_FDEFERUPD;
MACRO_DDE DDE_FNOTPROCESSED;
MACRO_DDE DDE_FPOKRESERVED;
MACRO_DDE DDE_FRELEASE;
MACRO_DDE DDE_FREQUESTED;
MACRO_DDL DDL_ARCHIVE;
MACRO_DDL DDL_DIRECTORY;
MACRO_DDL DDL_DRIVES;
MACRO_DDL DDL_EXCLUSIVE;
MACRO_DDL DDL_HIDDEN;
MACRO_DDL DDL_POSTMSGS;
MACRO_DDL DDL_READONLY;
MACRO_DDL DDL_READWRITE;
MACRO_DDL DDL_SYSTEM;
MACRO_DD DD_DEFDRAGDELAY;
MACRO_DD DD_DEFDRAGMINDIST;
MACRO_DD DD_DEFSCROLLDELAY;
MACRO_DD DD_DEFSCROLLINSET;
MACRO_DD DD_DEFSCROLLINTERVAL;
void __pascal __far DEBUGBREAK();
MACRO_CHARSET DEFAULT_CHARSET;
MACRO_DEFAULT_HATCHBORDER DEFAULT_HATCHBORDER_WIDTH;
MACRO_DEFAULT DEFAULT_PALETTE;
MACRO_PITCH DEFAULT_PITCH;
MACRO_QUALITY DEFAULT_QUALITY;
LRESULT __pascal __far DEFDLGPROC(HWND, UINT, WPARAM, LPARAM);
LRESULT __pascal __far DEFDRIVERPROC(DWORD dwDriverIdentifier, HDRVR driverID, UINT message, LPARAM lParam1, LPARAM lParam2);
HDWP __pascal __far DEFERWINDOWPOS(HDWP, HWND, HWND, int, int, int, int, UINT);
LRESULT __pascal __far DEFFRAMEPROC(HWND, HWND, UINT, WPARAM, LPARAM);
LRESULT __pascal __far DEFHOOKPROC(int, WPARAM, LPARAM, HOOKPROC far *);
LRESULT __pascal __far DEFMDICHILDPROC(HWND, UINT, WPARAM, LPARAM);
LRESULT __pascal __far DEFSCREENSAVERPROC(HWND, UINT, WPARAM, LPARAM);
LRESULT __pascal __far DEFWINDOWPROC(HWND, UINT, WPARAM, LPARAM);
ATOM __pascal __far DELETEATOM(ATOM);
BOOL __pascal __far DELETEDC(HDC);
BOOL __pascal __far DELETEMENU(HMENU, UINT, UINT);
BOOL __pascal __far DELETEMETAFILE(HMETAFILE);
BOOL __pascal __far DELETEOBJECT(HGDIOBJ);
tagDESCKIND DESCKIND_FUNCDESC;
tagDESCKIND DESCKIND_IMPLICITAPPOBJ;
tagDESCKIND DESCKIND_MAX;
tagDESCKIND DESCKIND_NONE;
tagDESCKIND DESCKIND_TYPECOMP;
tagDESCKIND DESCKIND_VARDESC;
void __pascal __far DESTROYCARET();
BOOL __pascal __far DESTROYCURSOR(HCURSOR);
BOOL __pascal __far DESTROYICON(HICON);
BOOL __pascal __far DESTROYMENU(HMENU);
BOOL __pascal __far DESTROYWINDOW(HWND);
MACRO_DEVICEDATA DEVICEDATA;
MACRO_FONT DEVICE_DEFAULT_FONT;
MACRO_FONTTYPE DEVICE_FONTTYPE;
int __pascal __far DIALOGBOX(HINSTANCE, LPCSTR, HWND, DLGPROC);
int __pascal __far DIALOGBOXINDIRECT(HINSTANCE, HGLOBAL, HWND, DLGPROC);
int __pascal __far DIALOGBOXINDIRECTPARAM(HINSTANCE, HGLOBAL, HWND, DLGPROC, LPARAM);
int __pascal __far DIALOGBOXPARAM(HINSTANCE, LPCSTR, HWND, DLGPROC, LPARAM);
MACRO_DIB DIB_PAL_COLORS;
MACRO_DIB DIB_RGB_COLORS;
BOOL __pascal __far DICTIONARYSEARCH(LPRC, LPSYE, int, LPSYV, int);
void __pascal __far DIRECTEDYIELD(HTASK);
MACRO_DIRQ DIRQ_ADD;
MACRO_DIRQ DIRQ_CLEANUP;
MACRO_DIRQ DIRQ_CLOSE;
MACRO_DIRQ DIRQ_CONFIGURE;
MACRO_DIRQ DIRQ_COPYRIGHT;
MACRO_DIRQ DIRQ_DELETE;
MACRO_DIRQ DIRQ_DESCRIPTION;
MACRO_DIRQ DIRQ_FLUSH;
MACRO_DIRQ DIRQ_INIT;
MACRO_DIRQ DIRQ_OPEN;
MACRO_DIRQ DIRQ_QUERY;
MACRO_DIRQ DIRQ_RCCHANGE;
MACRO_DIRQ DIRQ_SETWORDLISTS;
MACRO_DIRQ DIRQ_STRING;
MACRO_DIRQ DIRQ_SUGGEST;
MACRO_DIRQ DIRQ_SYMBOLGRAPH;
MACRO_DIRQ DIRQ_USER;
tagDISCARDCACHE DISCARDCACHE_NOSAVE;
tagDISCARDCACHE DISCARDCACHE_SAVEIFDIRTY;
__int32 __pascal __far DISPATCHMESSAGE(const MSG far *);
MACRO_DISPATCH DISPATCH_METHOD;
MACRO_DISPATCH DISPATCH_PROPERTYGET;
MACRO_DISPATCH DISPATCH_PROPERTYPUT;
MACRO_DISPATCH DISPATCH_PROPERTYPUTREF;
HRESULT __pascal __far DISPGETIDSOFNAMES(ITypeInfo far *ptinfo, TCHAR far * far *rgszNames, unsigned int cNames, DISPID far *rgdispid);
HRESULT __pascal __far DISPGETPARAM(DISPPARAMS far *pdispparams, unsigned int position, VARTYPE vtTarg, VARIANT far *pvarResult, unsigned int far *puArgErr);
MACRO_DISPID DISPID_EVALUATE;
MACRO_DISPID DISPID_NEWENUM;
MACRO_DISPID DISPID_PROPERTYPUT;
MACRO_DISPID DISPID_UNKNOWN;
MACRO_DISPID DISPID_VALUE;
HRESULT __pascal __far DISPINVOKE(void far *this, ITypeInfo far *ptinfo, DISPID dispidMember, unsigned int wFlags, DISPPARAMS far *pparams, VARIANT far *pvarResult, EXCEPINFO far *pexcepinfo, unsigned int far *puArgErr);
MACRO_DISP DISP_E_ARRAYISLOCKED;
MACRO_DISP DISP_E_BADCALLEE;
MACRO_DISP DISP_E_BADINDEX;
MACRO_DISP DISP_E_BADPARAMCOUNT;
MACRO_DISP DISP_E_BADVARTYPE;
MACRO_DISP DISP_E_EXCEPTION;
MACRO_DISP DISP_E_MEMBERNOTFOUND;
MACRO_DISP DISP_E_NONAMEDARGS;
MACRO_DISP DISP_E_NOTACOLLECTION;
MACRO_DISP DISP_E_OVERFLOW;
MACRO_DISP DISP_E_PARAMNOTFOUND;
MACRO_DISP DISP_E_PARAMNOTOPTIONAL;
MACRO_DISP DISP_E_TYPEMISMATCH;
MACRO_DISP DISP_E_UNKNOWNINTERFACE;
MACRO_DISP DISP_E_UNKNOWNLCID;
MACRO_DISP DISP_E_UNKNOWNNAME;
MACRO_BRUSH DKGRAY_BRUSH;
BOOL __pascal __far DLGCHANGEPASSWORD(HWND, UINT, WPARAM, LPARAM);
MACRO_DLGC DLGC_BUTTON;
MACRO_DLGC DLGC_DEFPUSHBUTTON;
MACRO_DLGC DLGC_HASSETSEL;
MACRO_DLGC DLGC_RADIOBUTTON;
MACRO_DLGC DLGC_STATIC;
MACRO_DLGC DLGC_UNDEFPUSHBUTTON;
MACRO_DLGC DLGC_WANTALLKEYS;
MACRO_DLGC DLGC_WANTARROWS;
MACRO_DLGC DLGC_WANTCHARS;
MACRO_DLGC DLGC_WANTMESSAGE;
MACRO_DLGC DLGC_WANTTAB;
int __pascal __far DLGDIRLIST(HWND, LPSTR, int, int, UINT);
int __pascal __far DLGDIRLISTCOMBOBOX(HWND, LPSTR, int, int, UINT);
BOOL __pascal __far DLGDIRSELECT(HWND, LPSTR, int);
BOOL __pascal __far DLGDIRSELECTCOMBOBOX(HWND, LPSTR, int);
BOOL __pascal __far DLGDIRSELECTCOMBOBOXEX(HWND, LPSTR, int, int);
BOOL __pascal __far DLGDIRSELECTEX(HWND, LPSTR, int, int);
BOOL __pascal __far DLGGETPASSWORD(HWND, UINT, WPARAM, LPARAM);
BOOL __pascal __far DLGINVALIDPASSWORD(HWND, UINT, WPARAM, LPARAM);
MACRO_DLGWINDOWEXTRA DLGWINDOWEXTRA;
MACRO_DLG_CHANGEPASSWORD DLG_CHANGEPASSWORD;
MACRO_DLG DLG_COLOR;
MACRO_DLG_CHANGEPASSWORD DLG_ENTERPASSWORD;
MACRO_DLG_CHANGEPASSWORD DLG_INVALIDPASSWORD;
MACRO_DLG_CHANGEPASSWORD DLG_SCRNSAVECONFIGURE;
HRESULT __pascal __far DLLCANUNLOADNOW();
HRESULT __pascal __far DLLGETCLASSOBJECT(const CLSID far *const rclsid, const IID far *const riid, LPVOID far *ppv);
MACRO_DMBIN DMBIN_AUTO;
MACRO_DMBIN DMBIN_CASSETTE;
MACRO_DMBIN DMBIN_ENVELOPE;
MACRO_DMBIN DMBIN_ENVMANUAL;
MACRO_DMBIN DMBIN_LARGECAPACITY;
MACRO_DMBIN DMBIN_LARGEFMT;
MACRO_DMBIN DMBIN_LAST;
MACRO_DMBIN DMBIN_LOWER;
MACRO_DMBIN DMBIN_MANUAL;
MACRO_DMBIN DMBIN_MIDDLE;
MACRO_DMBIN DMBIN_ONLYONE;
MACRO_DMBIN DMBIN_SMALLFMT;
MACRO_DMBIN DMBIN_TRACTOR;
MACRO_DMBIN DMBIN_UPPER;
MACRO_DMBIN DMBIN_USER;
MACRO_DMCOLOR DMCOLOR_COLOR;
MACRO_DMCOLOR DMCOLOR_MONOCHROME;
MACRO_DMDUP DMDUP_HORIZONTAL;
MACRO_DMDUP DMDUP_SIMPLEX;
MACRO_DMDUP DMDUP_VERTICAL;
MACRO_DMLERR DMLERR_ADVACKTIMEOUT;
MACRO_DMLERR DMLERR_BUSY;
MACRO_DMLERR DMLERR_DATAACKTIMEOUT;
MACRO_DMLERR DMLERR_DLL_NOT_INITIALIZED;
MACRO_DMLERR DMLERR_DLL_USAGE;
MACRO_DMLERR DMLERR_EXECACKTIMEOUT;
MACRO_DMLERR DMLERR_FIRST;
MACRO_DMLERR DMLERR_INVALIDPARAMETER;
MACRO_DMLERR DMLERR_LAST;
MACRO_DMLERR DMLERR_LOW_MEMORY;
MACRO_DMLERR DMLERR_MEMORY_ERROR;
MACRO_DMLERR DMLERR_NOTPROCESSED;
MACRO_DMLERR DMLERR_NO_CONV_ESTABLISHED;
MACRO_DMLERR DMLERR_NO_ERROR;
MACRO_DMLERR DMLERR_POKEACKTIMEOUT;
MACRO_DMLERR DMLERR_POSTMSG_FAILED;
MACRO_DMLERR DMLERR_REENTRANCY;
MACRO_DMLERR DMLERR_SERVER_DIED;
MACRO_DMLERR DMLERR_SYS_ERROR;
MACRO_DMLERR DMLERR_UNADVACKTIMEOUT;
MACRO_DMLERR DMLERR_UNFOUND_QUEUE_ID;
MACRO_DMORIENT DMORIENT_LANDSCAPE;
MACRO_DMORIENT DMORIENT_PORTRAIT;
MACRO_DMPAPER DMPAPER_10X14;
MACRO_DMPAPER DMPAPER_11X17;
MACRO_DMPAPER DMPAPER_A3;
MACRO_DMPAPER DMPAPER_A4;
MACRO_DMPAPER DMPAPER_A4SMALL;
MACRO_DMPAPER DMPAPER_A5;
MACRO_DMPAPER DMPAPER_B4;
MACRO_DMPAPER DMPAPER_B5;
MACRO_DMPAPER DMPAPER_CSHEET;
MACRO_DMPAPER DMPAPER_DSHEET;
MACRO_DMPAPER DMPAPER_ENV_10;
MACRO_DMPAPER DMPAPER_ENV_11;
MACRO_DMPAPER DMPAPER_ENV_12;
MACRO_DMPAPER DMPAPER_ENV_14;
MACRO_DMPAPER DMPAPER_ENV_9;
MACRO_DMPAPER DMPAPER_ENV_B4;
MACRO_DMPAPER DMPAPER_ENV_B5;
MACRO_DMPAPER DMPAPER_ENV_B6;
MACRO_DMPAPER DMPAPER_ENV_C3;
MACRO_DMPAPER DMPAPER_ENV_C4;
MACRO_DMPAPER DMPAPER_ENV_C5;
MACRO_DMPAPER DMPAPER_ENV_C6;
MACRO_DMPAPER DMPAPER_ENV_C65;
MACRO_DMPAPER DMPAPER_ENV_DL;
MACRO_DMPAPER DMPAPER_ENV_ITALY;
MACRO_DMPAPER DMPAPER_ENV_MONARCH;
MACRO_DMPAPER DMPAPER_ENV_PERSONAL;
MACRO_DMPAPER DMPAPER_ESHEET;
MACRO_DMPAPER DMPAPER_EXECUTIVE;
MACRO_DMPAPER DMPAPER_FANFOLD_LGL_GERMAN;
MACRO_DMPAPER DMPAPER_FANFOLD_STD_GERMAN;
MACRO_DMPAPER DMPAPER_FANFOLD_US;
MACRO_DMPAPER DMPAPER_FOLIO;
MACRO_DMPAPER DMPAPER_LAST;
MACRO_DMPAPER DMPAPER_LEDGER;
MACRO_DMPAPER DMPAPER_LEGAL;
MACRO_DMPAPER DMPAPER_LETTER;
MACRO_DMPAPER DMPAPER_LETTERSMALL;
MACRO_DMPAPER DMPAPER_NOTE;
MACRO_DMPAPER DMPAPER_QUARTO;
MACRO_DMPAPER DMPAPER_STATEMENT;
MACRO_DMPAPER DMPAPER_TABLOID;
MACRO_DMPAPER DMPAPER_USER;
MACRO_DMRES DMRES_DRAFT;
MACRO_DMRES DMRES_HIGH;
MACRO_DMRES DMRES_LOW;
MACRO_DMRES DMRES_MEDIUM;
MACRO_DMTT DMTT_BITMAP;
MACRO_DMTT DMTT_DOWNLOAD;
MACRO_DMTT DMTT_SUBDEV;
MACRO_DM_SPECVERSION DM_COLOR;
MACRO_DM_SPECVERSION DM_COPIES;
MACRO_DM_UPDATE DM_COPY;
MACRO_DM_SPECVERSION DM_DEFAULTSOURCE;
MACRO_DM_SPECVERSION DM_DUPLEX;
MACRO_DM DM_GETDEFID;
MACRO_DM_UPDATE DM_IN_BUFFER;
MACRO_DM_UPDATE DM_IN_PROMPT;
MACRO_DM_UPDATE DM_MODIFY;
MACRO_DM_SPECVERSION DM_ORIENTATION;
MACRO_DM_UPDATE DM_OUT_BUFFER;
MACRO_DM_UPDATE DM_OUT_DEFAULT;
MACRO_DM_SPECVERSION DM_PAPERLENGTH;
MACRO_DM_SPECVERSION DM_PAPERSIZE;
MACRO_DM_SPECVERSION DM_PAPERWIDTH;
MACRO_DM_SPECVERSION DM_PRINTQUALITY;
MACRO_DM_UPDATE DM_PROMPT;
MACRO_DM_SPECVERSION DM_SCALE;
MACRO_DM DM_SETDEFID;
MACRO_DM_SPECVERSION DM_SPECVERSION;
MACRO_DM_SPECVERSION DM_TTOPTION;
MACRO_DM_UPDATE DM_UPDATE;
MACRO_DM_SPECVERSION DM_YRESOLUTION;
MACRO_DNS DNS_FILTEROFF;
MACRO_DNS DNS_FILTERON;
MACRO_DNS DNS_REGISTER;
MACRO_DNS DNS_UNREGISTER;
MACRO_DN DN_DEFAULTPRN;
HRESULT __pascal __far DODRAGDROP(LPDATAOBJECT pDataObj, LPDROPSOURCE pDropSource, DWORD dwOKEffects, LPDWORD pdwEffect);
int __pascal __far DOSDATETIMETOVARIANTTIME(unsigned int wDosDate, unsigned int wDosTime, double far *pvtime);
BOOL __pascal __far DPTOLP(HDC, POINT far *, int);
BOOL __pascal __far DPTOTP(LPPOINT, int);
MACRO_DRAFTMODE DRAFTMODE;
MACRO_QUALITY DRAFT_QUALITY;
void __pascal __far DRAGACCEPTFILES(HWND, BOOL);
MACRO_DRAGDROP_E DRAGDROP_E_ALREADYREGISTERED;
MACRO_DRAGDROP DRAGDROP_E_FIRST;
MACRO_DRAGDROP_E DRAGDROP_E_INVALIDHWND;
MACRO_DRAGDROP DRAGDROP_E_LAST;
MACRO_DRAGDROP_E DRAGDROP_E_NOTREGISTERED;
MACRO_DRAGDROP_E DRAGDROP_S_CANCEL;
MACRO_DRAGDROP_E DRAGDROP_S_DROP;
MACRO_DRAGDROP DRAGDROP_S_FIRST;
MACRO_DRAGDROP DRAGDROP_S_LAST;
MACRO_DRAGDROP_E DRAGDROP_S_USEDEFAULTCURSORS;
void __pascal __far DRAGFINISH(HDROP);
UINT __pascal __far DRAGQUERYFILE(HDROP, UINT, LPSTR, UINT);
BOOL __pascal __far DRAGQUERYPOINT(HDROP, POINT far *);
void __pascal __far DRAWFOCUSRECT(HDC, const RECT far *);
BOOL __pascal __far DRAWICON(HDC, int, int, HICON);
void __pascal __far DRAWMENUBAR(HWND);
MACRO_DRAWPATTERNRECT DRAWPATTERNRECT;
void __pascal __far DRAWPENDATA(HDC, LPRECT, HPENDATA);
int __pascal __far DRAWTEXT(HDC, LPCSTR, int, RECT far *, UINT);
MACRO_DRIVERVERSION DRIVERVERSION;
MACRO_DRIVE DRIVE_FIXED;
MACRO_DRIVE DRIVE_REMOTE;
MACRO_DRIVE DRIVE_REMOVABLE;
MACRO_DROPEFFECT DROPEFFECT_COPY;
MACRO_DROPEFFECT DROPEFFECT_LINK;
MACRO_DROPEFFECT DROPEFFECT_MOVE;
MACRO_DROPEFFECT DROPEFFECT_NONE;
MACRO_DROPEFFECT DROPEFFECT_SCROLL;
MACRO_DRVCNF DRVCNF_CANCEL;
MACRO_DRVCNF DRVCNF_OK;
MACRO_DRVCNF DRVCNF_RESTART;
MACRO_DRVEA DRVEA_ABNORMALEXIT;
MACRO_DRVEA DRVEA_NORMALEXIT;
MACRO_DRV_CANCEL DRV_CANCEL;
MACRO_DRV DRV_CLOSE;
MACRO_DRV DRV_CONFIGURE;
MACRO_DRV DRV_DISABLE;
MACRO_DRV DRV_ENABLE;
MACRO_DRV DRV_EXITAPPLICATION;
MACRO_DRV DRV_EXITSESSION;
MACRO_DRV DRV_FREE;
MACRO_DRV_SetPenDriverEntryPoints DRV_GetCalibration;
MACRO_DRV_SetPenDriverEntryPoints DRV_GetName;
MACRO_DRV_SetPenDriverEntryPoints DRV_GetPenInfo;
MACRO_DRV_SetPenDriverEntryPoints DRV_GetVersion;
MACRO_DRV DRV_INSTALL;
MACRO_DRV DRV_LOAD;
MACRO_DRV_CANCEL DRV_MCI_FIRST;
MACRO_DRV_CANCEL DRV_MCI_LAST;
MACRO_DRV_CANCEL DRV_OK;
MACRO_DRV DRV_OPEN;
MACRO_DRV DRV_POWER;
MACRO_DRV DRV_QUERYCONFIGURE;
MACRO_DRV DRV_REMOVE;
MACRO_DRV DRV_RESERVED;
MACRO_DRV_CANCEL DRV_RESTART;
MACRO_DRV_SetPenDriverEntryPoints DRV_RemovePenDriverEntryPoints;
MACRO_DRV_SetPenDriverEntryPoints DRV_SetCalibration;
MACRO_DRV_SetPenDriverEntryPoints DRV_SetPenDriverEntryPoints;
MACRO_DRV_SetPenDriverEntryPoints DRV_SetPenSamplingDist;
MACRO_DRV_SetPenDriverEntryPoints DRV_SetPenSamplingRate;
MACRO_DRV DRV_USER;
MACRO_DSTINVERT DSTINVERT;
MACRO_DS DS_ABSALIGN;
MACRO_DS DS_LOCALEDIT;
MACRO_DS DS_MODALFRAME;
MACRO_DS DS_NOIDLEMSG;
MACRO_DS DS_SETFONT;
MACRO_DS DS_SYSMODAL;
MACRO_DT_TOP DT_BOTTOM;
MACRO_DT_TOP DT_CALCRECT;
MACRO_DT_TOP DT_CENTER;
MACRO_DT DT_CHARSTREAM;
MACRO_DT DT_DISPFILE;
MACRO_DT_TOP DT_EXPANDTABS;
MACRO_DT_TOP DT_EXTERNALLEADING;
MACRO_DT_TOP DT_INTERNAL;
MACRO_DT_TOP DT_LEFT;
MACRO_DT DT_METAFILE;
MACRO_DT_TOP DT_NOCLIP;
MACRO_DT_TOP DT_NOPREFIX;
MACRO_DT DT_PLOTTER;
MACRO_DT DT_RASCAMERA;
MACRO_DT DT_RASDISPLAY;
MACRO_DT DT_RASPRINTER;
MACRO_DT_TOP DT_RIGHT;
MACRO_DT_TOP DT_SINGLELINE;
MACRO_DT_TOP DT_TABSTOP;
MACRO_DT_TOP DT_TOP;
MACRO_DT_TOP DT_VCENTER;
MACRO_DT_TOP DT_WORDBREAK;
HPENDATA __pascal __far DUPLICATEPENDATA(HPENDATA, UINT);
tagDVASPECT DVASPECT_CONTENT;
tagDVASPECT DVASPECT_DOCPRINT;
tagDVASPECT DVASPECT_ICON;
tagDVASPECT DVASPECT_THUMBNAIL;
MACRO_DVGEN DVGEN_E_FIRST;
MACRO_DV DV_E_CLIPFORMAT;
MACRO_DV DV_E_DVASPECT;
MACRO_DV DV_E_DVTARGETDEVICE;
MACRO_DV DV_E_DVTARGETDEVICE_SIZE;
MACRO_DV DV_E_FORMATETC;
MACRO_DV DV_E_LINDEX;
MACRO_DV DV_E_NOIVIEWOBJECT;
MACRO_DV DV_E_STATDATA;
MACRO_DV DV_E_STGMEDIUM;
MACRO_DV DV_E_TYMED;
MACRO_DWL DWL_DLGPROC;
MACRO_DWL DWL_MSGRESULT;
MACRO_DWL DWL_USER;
MACRO_EC EC_DISABLE;
MACRO_EC EC_ENABLEALL;
MACRO_EC EC_ENABLEONE;
MACRO_EC EC_QUERYWAITING;
MACRO_EDS EDS_CUR;
MACRO_EDS EDS_TEMP;
MACRO_EDS EDS_WIN;
MACRO_ELF ELF_DISABLECANCELLINK;
MACRO_ELF ELF_DISABLECHANGESOURCE;
MACRO_ELF ELF_DISABLEOPENSOURCE;
MACRO_ELF ELF_DISABLEUPDATENOW;
MACRO_ELF ELF_SHOWHELP;
BOOL __pascal __far ELLIPSE(HDC, int, int, int, int);
MACRO_EMBDHLP EMBDHLP_CREATENOW;
MACRO_EMBDHLP EMBDHLP_DELAYCREATE;
MACRO_EMBDHLP EMBDHLP_INPROC_HANDLER;
MACRO_EMBDHLP EMBDHLP_INPROC_SERVER;
BOOL __pascal __far EMPTYCLIPBOARD();
void __pascal __far EMULATEPEN(BOOL);
MACRO_EM EM_CANUNDO;
MACRO_EM EM_EMPTYUNDOBUFFER;
MACRO_EM EM_FMTLINES;
MACRO_EM EM_GETFIRSTVISIBLELINE;
MACRO_EM EM_GETHANDLE;
MACRO_EM EM_GETLINE;
MACRO_EM EM_GETLINECOUNT;
MACRO_EM EM_GETMODIFY;
MACRO_EM EM_GETPASSWORDCHAR;
MACRO_EM EM_GETRECT;
MACRO_EM EM_GETSEL;
MACRO_EM EM_GETWORDBREAKPROC;
MACRO_EM EM_LIMITTEXT;
MACRO_EM EM_LINEFROMCHAR;
MACRO_EM EM_LINEINDEX;
MACRO_EM EM_LINELENGTH;
MACRO_EM EM_LINESCROLL;
MACRO_EM EM_REPLACESEL;
MACRO_EM EM_SETFONT;
MACRO_EM EM_SETHANDLE;
MACRO_EM EM_SETMODIFY;
MACRO_EM EM_SETPASSWORDCHAR;
MACRO_EM EM_SETREADONLY;
MACRO_EM EM_SETRECT;
MACRO_EM EM_SETRECTNP;
MACRO_EM EM_SETSEL;
MACRO_EM EM_SETTABSTOPS;
MACRO_EM EM_SETWORDBREAK;
MACRO_EM EM_SETWORDBREAKPROC;
MACRO_EM EM_UNDO;
BOOL __pascal __far ENABLECOMMNOTIFICATION(int, HWND, int, int);
MACRO_ENABLEDUPLEX ENABLEDUPLEX;
BOOL __pascal __far ENABLEHARDWAREINPUT(BOOL);
BOOL __pascal __far ENABLEMENUITEM(HMENU, UINT, UINT);
MACRO_ENABLEPAIRKERNING ENABLEPAIRKERNING;
MACRO_ENABLERELATIVEWIDTHS ENABLERELATIVEWIDTHS;
BOOL __pascal __far ENABLESCROLLBAR(HWND, int, UINT);
BOOL __pascal __far ENABLEWINDOW(HWND, BOOL);
BOOL __pascal __far ENDDEFERWINDOWPOS(HDWP);
void __pascal __far ENDDIALOG(HWND, int);
int __pascal __far ENDDOC(HDC);
int __pascal __far ENDPAGE(HDC);
void __pascal __far ENDPAINT(HWND, const PAINTSTRUCT far *);
BOOL __pascal __far ENDPENCOLLECTION(REC);
MACRO_PATH END_PATH;
BOOL __pascal __far ENUMCHILDWINDOWS(HWND, WNDENUMPROC, LPARAM);
UINT __pascal __far ENUMCLIPBOARDFORMATS(UINT);
int __pascal __far ENUMFONTFAMILIES(HDC, LPCSTR, FONTENUMPROC, LPSTR);
int __pascal __far ENUMFONTS(HDC, LPCSTR, OLDFONTENUMPROC, LPSTR);
BOOL __pascal __far ENUMMETAFILE(HDC, HMETAFILE, MFENUMPROC, LPARAM);
int __pascal __far ENUMOBJECTS(HDC, int, GOBJENUMPROC, LPSTR);
MACRO_ENUMPAPERBINS ENUMPAPERBINS;
MACRO_ENUMPAPERMETRICS ENUMPAPERMETRICS;
int __pascal __far ENUMPROPS(HWND, PROPENUMPROC);
UINT __pascal __far ENUMSYMBOLS(LPSYG, WORD, ENUMPROC, LPVOID);
BOOL __pascal __far ENUMTASKWINDOWS(HTASK, WNDENUMPROC, LPARAM);
BOOL __pascal __far ENUMWINDOWS(WNDENUMPROC, LPARAM);
MACRO_ENUM ENUM_E_FIRST;
MACRO_ENUM ENUM_E_LAST;
MACRO_ENUM_MINIMUM ENUM_MAXIMUM;
MACRO_ENUM_MINIMUM ENUM_MINIMUM;
MACRO_ENUM ENUM_S_FIRST;
MACRO_ENUM ENUM_S_LAST;
MACRO_EN EN_CHANGE;
MACRO_EN EN_ERRSPACE;
MACRO_EN EN_HSCROLL;
MACRO_EN EN_KILLFOCUS;
MACRO_EN EN_MAXTEXT;
MACRO_EN EN_SETFOCUS;
MACRO_EN EN_UPDATE;
MACRO_EN EN_VSCROLL;
MACRO_EPSPRINTING EPSPRINTING;
BOOL __pascal __far EQUALRECT(const RECT far *, const RECT far *);
BOOL __pascal __far EQUALRGN(HRGN, HRGN);
MACRO_ERROR ERROR;
MACRO_ERROR_SUCCESS ERROR_ACCESS_DENIED;
MACRO_ERROR_SUCCESS ERROR_BADDB;
MACRO_ERROR_SUCCESS ERROR_BADKEY;
MACRO_ERROR_SUCCESS ERROR_CANTOPEN;
MACRO_ERROR_SUCCESS ERROR_CANTREAD;
MACRO_ERROR_SUCCESS ERROR_CANTWRITE;
MACRO_ERROR_SUCCESS ERROR_INVALID_PARAMETER;
MACRO_ERROR_SUCCESS ERROR_OUTOFMEMORY;
MACRO_ERROR_SUCCESS ERROR_SUCCESS;
MACRO_ERR ERR_ALLOCRES;
MACRO_ERR ERR_BADINDEX;
MACRO_ERR ERR_BAD_ATOM;
MACRO_ERR ERR_BAD_CID;
MACRO_ERR ERR_BAD_COORDS;
MACRO_ERR ERR_BAD_DFLAGS;
MACRO_ERR ERR_BAD_DINDEX;
MACRO_ERR ERR_BAD_DVALUE;
MACRO_ERR ERR_BAD_FLAGS;
MACRO_ERR ERR_BAD_FUNC_PTR;
MACRO_ERR ERR_BAD_GDI_OBJECT;
MACRO_ERR ERR_BAD_GLOBAL_HANDLE;
MACRO_ERR ERR_BAD_HANDLE;
MACRO_ERR ERR_BAD_HBITMAP;
MACRO_ERR ERR_BAD_HBRUSH;
MACRO_ERR ERR_BAD_HCURSOR;
MACRO_ERR ERR_BAD_HDC;
MACRO_ERR ERR_BAD_HDRVR;
MACRO_ERR ERR_BAD_HDWP;
MACRO_ERR ERR_BAD_HFILE;
MACRO_ERR ERR_BAD_HFONT;
MACRO_ERR ERR_BAD_HICON;
MACRO_ERR ERR_BAD_HINSTANCE;
MACRO_ERR ERR_BAD_HMENU;
MACRO_ERR ERR_BAD_HMETAFILE;
MACRO_ERR ERR_BAD_HMODULE;
MACRO_ERR ERR_BAD_HPALETTE;
MACRO_ERR ERR_BAD_HPEN;
MACRO_ERR ERR_BAD_HRGN;
MACRO_ERR ERR_BAD_HWND;
MACRO_ERR ERR_BAD_INDEX;
MACRO_ERR ERR_BAD_LOCAL_HANDLE;
MACRO_ERR ERR_BAD_PTR;
MACRO_ERR ERR_BAD_SELECTOR;
MACRO_ERR ERR_BAD_STRING_PTR;
MACRO_ERR ERR_BAD_VALUE;
MACRO_ERR ERR_BYTE;
MACRO_ERR ERR_CREATEDC;
MACRO_ERR ERR_CREATEDLG;
MACRO_ERR ERR_CREATEDLG2;
MACRO_ERR ERR_CREATEMENU;
MACRO_ERR ERR_CREATEMETA;
MACRO_ERR ERR_CREATEWND;
MACRO_ERR ERR_DCBUSY;
MACRO_ERR ERR_DELOBJSELECTED;
MACRO_ERR ERR_DWORD;
MACRO_ERR ERR_GALLOC;
MACRO_ERR ERR_GLOCK;
MACRO_ERR ERR_GREALLOC;
MACRO_ERR ERR_LALLOC;
MACRO_ERR ERR_LLOCK;
MACRO_ERR ERR_LOADMENU;
MACRO_ERR ERR_LOADMODULE;
MACRO_ERR ERR_LOADSTR;
MACRO_ERR ERR_LOCKRES;
MACRO_ERR ERR_LREALLOC;
MACRO_ERR ERR_NESTEDBEGINPAINT;
MACRO_ERR ERR_PARAM;
MACRO_ERR ERR_REGISTERCLASS;
MACRO_ERR ERR_SELBITMAP;
MACRO_ERR ERR_SIZE_MASK;
MACRO_ERR ERR_STRUCEXTRA;
MACRO_ERR ERR_WARNING;
MACRO_ERR ERR_WORD;
MACRO_ESB ESB_DISABLE_BOTH;
MACRO_ESB ESB_DISABLE_DOWN;
MACRO_ESB ESB_DISABLE_LEFT;
MACRO_ESB ESB_DISABLE_LTUP;
MACRO_ESB ESB_DISABLE_RIGHT;
MACRO_ESB ESB_DISABLE_RTDN;
MACRO_ESB ESB_DISABLE_UP;
MACRO_ESB ESB_ENABLE_BOTH;
int __pascal __far ESCAPE(HDC, int, int, LPCSTR, void far *);
__int32 __pascal __far ESCAPECOMMFUNCTION(int, int);
MACRO_ES ES_AUTOHSCROLL;
MACRO_ES ES_AUTOVSCROLL;
MACRO_ES ES_CENTER;
MACRO_ES ES_LEFT;
MACRO_ES ES_LOWERCASE;
MACRO_ES ES_MULTILINE;
MACRO_ES ES_NOHIDESEL;
MACRO_ES ES_OEMCONVERT;
MACRO_ES ES_PASSWORD;
MACRO_ES ES_READONLY;
MACRO_ES ES_RIGHT;
MACRO_ES ES_UPPERCASE;
MACRO_ES ES_WANTRETURN;
MACRO_ETO ETO_CLIPPED;
MACRO_ETO ETO_GRAYED;
MACRO_ETO ETO_OPAQUE;
MACRO_NOPARITY EVENPARITY;
MACRO_EV EV_BREAK;
MACRO_EV EV_CTS;
MACRO_EV EV_CTSS;
MACRO_EV EV_DSR;
MACRO_EV EV_DSRS;
MACRO_EV EV_ERR;
MACRO_EV EV_PERR;
MACRO_EV EV_RING;
MACRO_EV EV_RINGTE;
MACRO_EV EV_RLSD;
MACRO_EV EV_RLSDS;
MACRO_EV EV_RXCHAR;
MACRO_EV EV_RXFLAG;
MACRO_EV EV_RingTe;
MACRO_EV EV_TXEMPTY;
MACRO_EW EW_REBOOTSYSTEM;
MACRO_EW EW_RESTARTWINDOWS;
int __pascal __far EXCLUDECLIPRECT(HDC, int, int, int, int);
int __pascal __far EXCLUDEUPDATERGN(HDC, HWND);
BOOL __pascal __far EXECUTEGESTURE(HWND, SYV, LPRCRESULT);
BOOL __pascal __far EXITWINDOWS(DWORD dwReturnCode, UINT wReserved);
BOOL __pascal __far EXITWINDOWSEXEC(LPCSTR, LPCSTR);
tagEXTCONN EXTCONN_STRONG;
BOOL __pascal __far EXTFLOODFILL(HDC, int, int, COLORREF, UINT);
HICON __pascal __far EXTRACTICON(HINSTANCE hInst, LPCSTR lpszExeFileName, UINT nIconIndex);
BOOL __pascal __far EXTTEXTOUT(HDC, int, int, UINT, const RECT far *, LPCSTR, UINT, int far *);
MACRO_EXT EXT_DEVICE_CAPS;
MACRO_E E_ABORT;
MACRO_E E_ACCESSDENIED;
MACRO_DRAW E_DRAW;
MACRO_E E_FAIL;
MACRO_E E_HANDLE;
MACRO_E E_INVALIDARG;
MACRO_E E_NOINTERFACE;
MACRO_E E_NOTIMPL;
MACRO_E E_OUTOFMEMORY;
MACRO_E E_POINTER;
MACRO_E E_UNEXPECTED;
MACRO_FACILITY FACILITY_DISPATCH;
MACRO_FACILITY FACILITY_ITF;
MACRO_FACILITY FACILITY_NULL;
MACRO_FACILITY FACILITY_RPC;
MACRO_FACILITY FACILITY_STORAGE;
MACRO_FADF FADF_AUTO;
MACRO_FADF FADF_BSTR;
MACRO_FADF FADF_DISPATCH;
MACRO_FADF FADF_EMBEDDED;
MACRO_FADF FADF_FIXEDSIZE;
MACRO_FADF FADF_RESERVED;
MACRO_FADF FADF_STATIC;
MACRO_FADF FADF_UNKNOWN;
MACRO_FADF FADF_VARIANT;
MACRO_BOOL FALSE;
void __pascal __far FATALAPPEXIT(UINT, LPCSTR);
void __pascal __far FATALEXIT(int);
MACRO_FD_READ FD_ACCEPT;
MACRO_FD_READ FD_CLOSE;
MACRO_FD_READ FD_CONNECT;
MACRO_FD_READ FD_OOB;
MACRO_FD_READ FD_READ;
MACRO_FD FD_SETSIZE;
MACRO_FD_READ FD_WRITE;
MACRO_FF FF_DECORATIVE;
MACRO_FF FF_DONTCARE;
MACRO_FF FF_MODERN;
MACRO_FF FF_ROMAN;
MACRO_FF FF_SCRIPT;
MACRO_FF FF_SWISS;
MACRO_FILEOPENORD FILEOPENORD;
int __pascal __far FILLRECT(HDC, const RECT far *, HBRUSH);
BOOL __pascal __far FILLRGN(HDC, HRGN, HBRUSH);
ATOM __pascal __far FINDATOM(LPCSTR);
MACRO_FINDDLGORD FINDDLGORD;
HINSTANCE __pascal __far FINDEXECUTABLE(LPCSTR lpFile, LPCSTR lpDirectory, LPSTR lpResult);
HRSRC __pascal __far FINDRESOURCE(HINSTANCE, LPCSTR, LPCSTR);
HWND __pascal __far FINDTEXT(FINDREPLACE far *);
HWND __pascal __far FINDWINDOW(LPCSTR, LPCSTR);
void __pascal __far FIRSTSYMBOLFROMGRAPH(LPSYG, LPSYV, int, int far *);
MACRO_PITCH FIXED_PITCH;
BOOL __pascal __far FLASHWINDOW(HWND, BOOL);
BOOL __pascal __far FLOODFILL(HDC, int, int, COLORREF);
MACRO_FLOODFILLBORDER FLOODFILLBORDER;
MACRO_FLOODFILLBORDER FLOODFILLSURFACE;
int __pascal __far FLUSHCOMM(int, int);
MACRO_FLUSHOUTPUT FLUSHOUTPUT;
MACRO_FMEVENT FMEVENT_INITMENU;
MACRO_FMEVENT FMEVENT_LOAD;
MACRO_FMEVENT FMEVENT_SELCHANGE;
MACRO_FMEVENT FMEVENT_UNLOAD;
MACRO_FMEVENT FMEVENT_USER_REFRESH;
MACRO_FMFOCUS FMFOCUS_DIR;
MACRO_FMFOCUS FMFOCUS_DRIVES;
MACRO_FMFOCUS FMFOCUS_SEARCH;
MACRO_FMFOCUS FMFOCUS_TREE;
MACRO_FMMENU FMMENU_FIRST;
MACRO_FMMENU FMMENU_LAST;
MACRO_FM FM_GETDRIVEINFO;
MACRO_FM FM_GETFILESEL;
MACRO_FM FM_GETFILESELLFN;
MACRO_FM FM_GETFOCUS;
MACRO_FM FM_GETSELCOUNT;
MACRO_FM FM_GETSELCOUNTLFN;
MACRO_FM FM_REFRESH_WINDOWS;
MACRO_FM FM_RELOAD_EXTENSIONS;
MACRO_FNERR FNERR_BUFFERTOOSMALL;
MACRO_FNERR FNERR_FILENAMECODES;
MACRO_FNERR FNERR_INVALIDFILENAME;
MACRO_FNERR FNERR_SUBCLASSFAILURE;
MACRO_FONTDLGORD FONTDLGORD;
MACRO_FORMATDLGORD30 FORMATDLGORD30;
MACRO_FORMATDLGORD31 FORMATDLGORD31;
int __pascal __far FRAMERECT(HDC, const RECT far *, HBRUSH);
BOOL __pascal __far FRAMERGN(HDC, HRGN, HBRUSH, int, int);
MACRO_FRAME FRAME_FAR;
MACRO_FRAME FRAME_NEAR;
void __pascal __far FREEALLGDIMEM();
void __pascal __far FREEALLMEM();
void __pascal __far FREEALLUSERMEM();
void __pascal __far FREELIBRARY(HINSTANCE);
BOOL __pascal __far FREEMODULE(HINSTANCE);
void __pascal __far FREEPROCINSTANCE(FARPROC);
BOOL __pascal __far FREERESOURCE(HGLOBAL);
UINT __pascal __far FREESELECTOR(UINT);
MACRO_FRERR FRERR_BUFFERLENGTHZERO;
MACRO_FRERR FRERR_FINDREPLACECODES;
MACRO_FR FR_DIALOGTERM;
MACRO_FR FR_DOWN;
MACRO_FR FR_ENABLEHOOK;
MACRO_FR FR_ENABLETEMPLATE;
MACRO_FR FR_ENABLETEMPLATEHANDLE;
MACRO_FR FR_FINDNEXT;
MACRO_FR FR_HIDEMATCHCASE;
MACRO_FR FR_HIDEUPDOWN;
MACRO_FR FR_HIDEWHOLEWORD;
MACRO_FR FR_MATCHCASE;
MACRO_FR FR_NOMATCHCASE;
MACRO_FR FR_NOUPDOWN;
MACRO_FR FR_NOWHOLEWORD;
MACRO_FR FR_REPLACE;
MACRO_FR FR_REPLACEALL;
MACRO_FR FR_SHOWHELP;
MACRO_FR FR_WHOLEWORD;
tagFUNCFLAGS FUNCFLAG_FRESTRICTED;
tagFUNCKIND FUNC_DISPATCH;
tagFUNCKIND FUNC_NONVIRTUAL;
tagFUNCKIND FUNC_PUREVIRTUAL;
tagFUNCKIND FUNC_STATIC;
tagFUNCKIND FUNC_VIRTUAL;
MACRO_FW FW_BLACK;
MACRO_FW FW_BOLD;
MACRO_FW FW_DEMIBOLD;
MACRO_FW FW_DONTCARE;
MACRO_FW FW_EXTRABOLD;
MACRO_FW FW_EXTRALIGHT;
MACRO_FW FW_HEAVY;
MACRO_FW FW_LIGHT;
MACRO_FW FW_MEDIUM;
MACRO_FW FW_NORMAL;
MACRO_FW FW_REGULAR;
MACRO_FW FW_SEMIBOLD;
MACRO_FW FW_THIN;
MACRO_FW FW_ULTRABOLD;
MACRO_FW FW_ULTRALIGHT;
MACRO_GCL GCL_MENUNAME;
MACRO_GCL_WNDPROC GCL_WNDPROC;
MACRO_GCW_STYLE GCW_ATOM;
MACRO_GCW GCW_CBCLSEXTRA;
MACRO_GCW GCW_CBWNDEXTRA;
MACRO_GCW GCW_HBRBACKGROUND;
MACRO_GCW GCW_HCURSOR;
MACRO_GCW GCW_HICON;
MACRO_GCW GCW_HMODULE;
MACRO_GCW_STYLE GCW_STYLE;
MACRO_HEAP GDI_HEAP;
MACRO_GD GD_ACCELERATORS;
MACRO_GD GD_BITMAP;
MACRO_GD GD_CURSOR;
MACRO_GD GD_CURSORCOMPONENT;
MACRO_GD GD_DIALOG;
MACRO_GD GD_ERRTABLE;
MACRO_GD GD_FONT;
MACRO_GD GD_FONTDIR;
MACRO_GD GD_ICON;
MACRO_GD GD_ICONCOMPONENT;
MACRO_GD GD_MAX_RESOURCE;
MACRO_GD GD_MENU;
MACRO_GD GD_NAMETABLE;
MACRO_GD GD_RCDATA;
MACRO_GD GD_STRING;
MACRO_GD GD_USERDEFINED;
HRESULT __pascal __far GETACTIVEOBJECT(const CLSID far *const rclsid, void far *pvReserved, IUnknown far * far *ppunk);
HWND __pascal __far GETACTIVEWINDOW();
DWORD __pascal __far GETASPECTRATIOFILTER(HDC);
BOOL __pascal __far GETASPECTRATIOFILTEREX(HDC, SIZE far *);
int __pascal __far GETASYNCKEYSTATE(int);
HLOCAL __pascal __far GETATOMHANDLE(ATOM);
UINT __pascal __far GETATOMNAME(ATOM, LPSTR, int);
MACRO_GETBASEIRQ GETBASEIRQ;
__int32 __pascal __far GETBITMAPBITS(HBITMAP, __int32, void far *);
DWORD __pascal __far GETBITMAPDIMENSION(HBITMAP);
BOOL __pascal __far GETBITMAPDIMENSIONEX(HBITMAP, SIZE far *);
COLORREF __pascal __far GETBKCOLOR(HDC);
int __pascal __far GETBKMODE(HDC);
UINT __pascal __far GETBOUNDSRECT(HDC hDC, RECT far *lprcBounds, UINT flags);
DWORD __pascal __far GETBRUSHORG(HDC);
BOOL __pascal __far GETBRUSHORGEX(HDC, POINT far *);
HWND __pascal __far GETCAPTURE();
UINT __pascal __far GETCARETBLINKTIME();
void __pascal __far GETCARETPOS(POINT far *);
BOOL __pascal __far GETCHARABCWIDTHS(HDC, UINT, UINT, ABC far *);
BOOL __pascal __far GETCHARWIDTH(HDC, UINT, UINT, int far *);
HRESULT __pascal __far GETCLASSFILE(LPCSTR szFilename, CLSID far *pclsid);
BOOL __pascal __far GETCLASSINFO(HINSTANCE, LPCSTR, WNDCLASS far *);
__int32 __pascal __far GETCLASSLONG(HWND, int);
int __pascal __far GETCLASSNAME(HWND, LPSTR, int);
WORD __pascal __far GETCLASSWORD(HWND, int);
void __pascal __far GETCLIENTRECT(HWND, RECT far *);
HANDLE __pascal __far GETCLIPBOARDDATA(UINT);
int __pascal __far GETCLIPBOARDFORMATNAME(UINT, LPSTR, int);
HWND __pascal __far GETCLIPBOARDOWNER();
HWND __pascal __far GETCLIPBOARDVIEWER();
int __pascal __far GETCLIPBOX(HDC, RECT far *);
void __pascal __far GETCLIPCURSOR(RECT far *);
HGLOBAL __pascal __far GETCODEHANDLE(FARPROC);
void __pascal __far GETCODEINFO(FARPROC lpProc, SEGINFO far *lpSegInfo);
MACRO_GETCOLORTABLE GETCOLORTABLE;
int __pascal __far GETCOMMERROR(int, COMSTAT far *);
UINT __pascal __far GETCOMMEVENTMASK(int, int);
int __pascal __far GETCOMMSTATE(int, DCB far *);
HRESULT __pascal __far GETCONVERTSTG(LPSTORAGE pStg);
UINT __pascal __far GETCURRENTPDB();
DWORD __pascal __far GETCURRENTPOSITION(HDC);
BOOL __pascal __far GETCURRENTPOSITIONEX(HDC, POINT far *);
HTASK __pascal __far GETCURRENTTASK();
DWORD __pascal __far GETCURRENTTIME();
HCURSOR __pascal __far GETCURSOR();
void __pascal __far GETCURSORPOS(POINT far *);
HDC __pascal __far GETDC(HWND);
HDC __pascal __far GETDCEX(HWND hwnd, HRGN hrgnClip, DWORD flags);
DWORD __pascal __far GETDCORG(HDC);
HWND __pascal __far GETDESKTOPWINDOW();
int __pascal __far GETDEVICECAPS(HDC, int);
DWORD __pascal __far GETDIALOGBASEUNITS();
int __pascal __far GETDIBITS(HDC, HBITMAP, UINT, UINT, void far *, BITMAPINFO far *, UINT);
int __pascal __far GETDLGCTRLID(HWND);
HWND __pascal __far GETDLGITEM(HWND, int);
UINT __pascal __far GETDLGITEMINT(HWND, int, BOOL far *, BOOL);
int __pascal __far GETDLGITEMTEXT(HWND, int, LPSTR, int);
LPSTR __pascal __far GETDOSENVIRONMENT();
UINT __pascal __far GETDOUBLECLICKTIME();
BOOL __pascal __far GETDRIVERINFO(HDRVR, DRIVERINFOSTRUCT far *);
HINSTANCE __pascal __far GETDRIVERMODULEHANDLE(HDRVR hDriver);
UINT __pascal __far GETDRIVETYPE(int);
int __pascal __far GETENVIRONMENT(LPCSTR, void far *, UINT);
int __pascal __far GETEXPANDEDNAME(LPCSTR, LPSTR);
MACRO_MOUSETRAILS GETEXTENDEDTEXTMETRICS;
MACRO_GETEXTENTTABLE GETEXTENTTABLE;
MACRO_GETFACENAME GETFACENAME;
BOOL __pascal __far GETFILERESOURCE(LPCSTR lpstrFilename, LPCSTR lpstrResType, LPCSTR lpstrResID, DWORD dwFileOffset, DWORD dwResLen, void far *lpData);
DWORD __pascal __far GETFILERESOURCESIZE(LPCSTR lpstrFilename, LPCSTR lpstrResType, LPCSTR lpstrResID, DWORD far *lpdwFileOffset);
int __pascal __far GETFILETITLE(LPCSTR, LPSTR, UINT);
BOOL __pascal __far GETFILEVERSIONINFO(LPCSTR lpstrFilename, DWORD dwHandle, DWORD dwLen, void far *lpData);
DWORD __pascal __far GETFILEVERSIONINFOSIZE(LPCSTR lpstrFilename, DWORD far *lpdwHandle);
HWND __pascal __far GETFOCUS();
DWORD __pascal __far GETFONTDATA(HDC, DWORD, DWORD, void far *, DWORD);
int __pascal __far GETFREEFILEHANDLES();
DWORD __pascal __far GETFREESPACE(UINT);
UINT __pascal __far GETFREESYSTEMRESOURCES(UINT);
UINT __pascal __far GETGLOBALRC(LPRC, LPSTR, LPSTR, int);
DWORD __pascal __far GETGLYPHOUTLINE(HDC, UINT, UINT, GLYPHMETRICS far *, DWORD, void far *, const MAT2 far *);
void __pascal __far GETHATCHRECT(HWND hWndHatch, LPRECT lpHatchRect);
UINT __pascal __far GETHATCHWIDTH(HWND hWndHatch);
HRESULT __pascal __far GETHGLOBALFROMILOCKBYTES(LPLOCKBYTES plkbyt, HGLOBAL far *phglobal);
HRESULT __pascal __far GETHGLOBALFROMSTREAM(LPSTREAM pstm, HGLOBAL far *phglobal);
struct hostent far *__pascal __far GETHOSTBYADDR(const char far *addr, int len, int type);
struct hostent far *__pascal __far GETHOSTBYNAME(const char far *name);
int __pascal __far GETHOSTNAME(char far *name, int namelen);
BOOL __pascal __far GETINPUTSTATE();
int __pascal __far GETINSTANCEDATA(HINSTANCE, BYTE *, int);
int __pascal __far GETKBCODEPAGE();
int __pascal __far GETKERNINGPAIRS(HDC, int, KERNINGPAIR far *);
void __pascal __far GETKEYBOARDSTATE(BYTE far *);
int __pascal __far GETKEYBOARDTYPE(int);
int __pascal __far GETKEYNAMETEXT(__int32, LPSTR, int);
int __pascal __far GETKEYSTATE(int);
HWND __pascal __far GETLASTACTIVEPOPUP(HWND);
int __pascal __far GETLOCALEINFOA(LCID, LCTYPE, char far *, int);
int __pascal __far GETMAPMODE(HDC);
MACRO_GETMAXCOM GETMAXCOM;
MACRO_GETMAXLPT GETMAXLPT;
HMENU __pascal __far GETMENU(HWND);
DWORD __pascal __far GETMENUCHECKMARKDIMENSIONS();
int __pascal __far GETMENUITEMCOUNT(HMENU);
UINT __pascal __far GETMENUITEMID(HMENU, int);
UINT __pascal __far GETMENUSTATE(HMENU, UINT, UINT);
int __pascal __far GETMENUSTRING(HMENU, UINT, LPSTR, int, UINT);
BOOL __pascal __far GETMESSAGE(MSG far *, HWND, UINT, UINT);
LPARAM __pascal __far GETMESSAGEEXTRAINFO();
DWORD __pascal __far GETMESSAGEPOS();
__int32 __pascal __far GETMESSAGETIME();
HMETAFILE __pascal __far GETMETAFILE(LPCSTR);
HGLOBAL __pascal __far GETMETAFILEBITS(HMETAFILE);
int __pascal __far GETMODULEFILENAME(HINSTANCE, LPSTR, int);
HMODULE __pascal __far GETMODULEHANDLE(LPCSTR);
int __pascal __far GETMODULEUSAGE(HINSTANCE);
COLORREF __pascal __far GETNEARESTCOLOR(HDC, COLORREF);
UINT __pascal __far GETNEARESTPALETTEINDEX(HPALETTE, COLORREF);
HWND __pascal __far GETNEXTDLGGROUPITEM(HWND, HWND, BOOL);
HWND __pascal __far GETNEXTDLGTABITEM(HWND, HWND, BOOL);
HDRVR __pascal __far GETNEXTDRIVER(HDRVR, DWORD);
HWND __pascal __far GETNEXTWINDOW(HWND, UINT);
UINT __pascal __far GETNUMTASKS();
int __pascal __far GETOBJECT(HGDIOBJ, int, void far *);
HWND __pascal __far GETOPENCLIPBOARDWINDOW();
BOOL __pascal __far GETOPENFILENAME(OPENFILENAME far *);
WORD __pascal __far GETOUTLINETEXTMETRICS(HDC, UINT, OUTLINETEXTMETRIC far *);
MACRO_GETPAIRKERNTABLE GETPAIRKERNTABLE;
UINT __pascal __far GETPALETTEENTRIES(HPALETTE, UINT, UINT, PALETTEENTRY far *);
HWND __pascal __far GETPARENT(HWND);
int __pascal __far GETPEERNAME(SOCKET s, struct sockaddr far *name, int far *namelen);
BOOL __pascal __far GETPENASYNCSTATE(UINT);
BOOL __pascal __far GETPENDATAINFO(HPENDATA, LPPENDATAHEADER, LPPENINFO, DWORD);
BOOL __pascal __far GETPENDATASTROKE(LPPENDATA, UINT, LPPOINT far *, LPVOID far *, LPSTROKEINFO);
REC __pascal __far GETPENHWDATA(LPPOINT, LPVOID, int, UINT, LPSTROKEINFO);
REC __pascal __far GETPENHWEVENTDATA(UINT, UINT, LPPOINT, LPVOID, int, LPSTROKEINFO);
MACRO_MFCOMMENT GETPENWIDTH;
MACRO_GETPHYSPAGESIZE GETPHYSPAGESIZE;
COLORREF __pascal __far GETPIXEL(HDC, int, int);
BOOL __pascal __far GETPOINTSFROMPENDATA(HPENDATA, UINT, UINT, UINT, LPPOINT);
int __pascal __far GETPOLYFILLMODE(HDC);
MACRO_GETPRINTINGOFFSET GETPRINTINGOFFSET;
int __pascal __far GETPRIORITYCLIPBOARDFORMAT(UINT far *, int);
UINT __pascal __far GETPRIVATEPROFILEINT(LPCSTR, LPCSTR, int, LPCSTR);
int __pascal __far GETPRIVATEPROFILESTRING(LPCSTR, LPCSTR, LPCSTR, LPSTR, int, LPCSTR);
FARPROC __pascal __far GETPROCADDRESS(HINSTANCE, LPCSTR);
UINT __pascal __far GETPROFILEINT(LPCSTR, LPCSTR, int);
int __pascal __far GETPROFILESTRING(LPCSTR, LPCSTR, LPCSTR, LPSTR, int);
HANDLE __pascal __far GETPROP(HWND, LPCSTR);
struct protoent far *__pascal __far GETPROTOBYNAME(const char far *name);
struct protoent far *__pascal __far GETPROTOBYNUMBER(int proto);
DWORD __pascal __far GETQUEUESTATUS(UINT flags);
BOOL __pascal __far GETRASTERIZERCAPS(RASTERIZER_STATUS far *, int);
int __pascal __far GETRGNBOX(HRGN, RECT far *);
int __pascal __far GETROP2(HDC);
HRESULT __pascal __far GETRUNNINGOBJECTTABLE(DWORD reserved, LPRUNNINGOBJECTTABLE far *pprot);
BOOL __pascal __far GETSAVEFILENAME(OPENFILENAME far *);
MACRO_GETSCALINGFACTOR GETSCALINGFACTOR;
int __pascal __far GETSCROLLPOS(HWND, int);
void __pascal __far GETSCROLLRANGE(HWND, int, int far *, int far *);
DWORD __pascal __far GETSELECTORBASE(UINT);
DWORD __pascal __far GETSELECTORLIMIT(UINT);
struct servent far *__pascal __far GETSERVBYNAME(const char far *name, const char far *proto);
struct servent far *__pascal __far GETSERVBYPORT(int port, const char far *proto);
MACRO_GETSETPAPERBINS GETSETPAPERBINS;
MACRO_GETSETPAPERMETRICS GETSETPAPERMETRICS;
MACRO_GETSETPRINTORIENT GETSETPRINTORIENT;
MACRO_SETCHARSET GETSETSCREENPARAMS;
int __pascal __far GETSOCKNAME(SOCKET s, struct sockaddr far *name, int far *namelen);
int __pascal __far GETSOCKOPT(SOCKET s, int level, int optname, char far *optval, int far *optlen);
HGDIOBJ __pascal __far GETSTOCKOBJECT(int);
int __pascal __far GETSTRETCHBLTMODE(HDC);
int __pascal __far GETSTRINGTYPEA(LCID, unsigned __int32, const char far *, int, unsigned int far *);
HMENU __pascal __far GETSUBMENU(HMENU, int);
int __pascal __far GETSYMBOLCOUNT(LPSYG);
int __pascal __far GETSYMBOLMAXLENGTH(LPSYG);
COLORREF __pascal __far GETSYSCOLOR(int);
HWND __pascal __far GETSYSMODALWINDOW();
__int32 __pascal __far GETSYSTEMDEBUGSTATE();
LANGID __pascal __far GETSYSTEMDEFAULTLANGID();
LCID __pascal __far GETSYSTEMDEFAULTLCID();
UINT __pascal __far GETSYSTEMDIR(LPCSTR szAppDir, LPSTR lpBuffer, int nSize);
UINT __pascal __far GETSYSTEMDIRECTORY(LPSTR, UINT);
HMENU __pascal __far GETSYSTEMMENU(HWND, BOOL);
int __pascal __far GETSYSTEMMETRICS(int);
UINT __pascal __far GETSYSTEMPALETTEENTRIES(HDC, UINT, UINT, PALETTEENTRY far *);
UINT __pascal __far GETSYSTEMPALETTEUSE(HDC);
DWORD __pascal __far GETTABBEDTEXTEXTENT(HDC, LPCSTR, int, int, int far *);
MACRO_GETTECHNOLGY GETTECHNOLGY;
MACRO_GETTECHNOLOGY GETTECHNOLOGY;
BYTE __pascal __far GETTEMPDRIVE(char);
int __pascal __far GETTEMPFILENAME(BYTE, LPCSTR, UINT, LPSTR);
UINT __pascal __far GETTEXTALIGN(HDC);
int __pascal __far GETTEXTCHARACTEREXTRA(HDC);
COLORREF __pascal __far GETTEXTCOLOR(HDC);
DWORD __pascal __far GETTEXTEXTENT(HDC, LPCSTR, int);
BOOL __pascal __far GETTEXTEXTENTPOINT(HDC, LPCSTR, int, SIZE far *);
int __pascal __far GETTEXTFACE(HDC, int, LPSTR);
BOOL __pascal __far GETTEXTMETRICS(HDC, TEXTMETRIC far *);
int far *__pascal __far GETTHRESHOLDEVENT();
int __pascal __far GETTHRESHOLDSTATUS();
DWORD __pascal __far GETTICKCOUNT();
DWORD __pascal __far GETTIMERRESOLUTION();
HWND __pascal __far GETTOPWINDOW(HWND);
MACRO_GETTRACKKERNTABLE GETTRACKKERNTABLE;
BOOL __pascal __far GETUPDATERECT(HWND, RECT far *, BOOL);
int __pascal __far GETUPDATERGN(HWND, HRGN, BOOL);
LANGID __pascal __far GETUSERDEFAULTLANGID();
LCID __pascal __far GETUSERDEFAULTLCID();
MACRO_GETVECTORBRUSHSIZE GETVECTORBRUSHSIZE;
MACRO_GETVECTORPENSIZE GETVECTORPENSIZE;
DWORD __pascal __far GETVERSION();
UINT __pascal __far GETVERSIONPENWIN();
DWORD __pascal __far GETVIEWPORTEXT(HDC);
BOOL __pascal __far GETVIEWPORTEXTEX(HDC, SIZE far *);
DWORD __pascal __far GETVIEWPORTORG(HDC);
BOOL __pascal __far GETVIEWPORTORGEX(HDC, POINT far *);
BOOL __pascal __far GETWINDEBUGINFO(WINDEBUGINFO far *lpwdi, UINT flags);
HWND __pascal __far GETWINDOW(HWND, UINT);
HDC __pascal __far GETWINDOWDC(HWND);
DWORD __pascal __far GETWINDOWEXT(HDC);
BOOL __pascal __far GETWINDOWEXTEX(HDC, SIZE far *);
__int32 __pascal __far GETWINDOWLONG(HWND, int);
DWORD __pascal __far GETWINDOWORG(HDC);
BOOL __pascal __far GETWINDOWORGEX(HDC, POINT far *);
BOOL __pascal __far GETWINDOWPLACEMENT(HWND, WINDOWPLACEMENT far *);
void __pascal __far GETWINDOWRECT(HWND, RECT far *);
UINT __pascal __far GETWINDOWSDIR(LPCSTR szAppDir, LPSTR lpBuffer, int nSize);
UINT __pascal __far GETWINDOWSDIRECTORY(LPSTR, UINT);
HTASK __pascal __far GETWINDOWTASK(HWND);
int __pascal __far GETWINDOWTEXT(HWND, LPSTR, int);
int __pascal __far GETWINDOWTEXTLENGTH(HWND);
WORD __pascal __far GETWINDOWWORD(HWND, int);
DWORD __pascal __far GETWINFLAGS();
WORD __pascal __far GETWINMEM32VERSION();
MACRO_GFSR GFSR_GDIRESOURCES;
MACRO_GFSR GFSR_SYSTEMRESOURCES;
MACRO_GFSR GFSR_USERRESOURCES;
MACRO_GF GF_PDB_OWNER;
MACRO_GGO GGO_BITMAP;
MACRO_GGO GGO_METRICS;
MACRO_GGO GGO_NATIVE;
MACRO_GGRC GGRC_DICTBUFTOOSMALL;
MACRO_GGRC GGRC_OK;
MACRO_GGRC GGRC_PARAMERROR;
MACRO_GHND GHND;
WORD __pascal __far GLOBAL16POINTERALLOC(WORD, DWORD, LPDWORD, DWORD, WORD);
WORD __pascal __far GLOBAL16POINTERFREE(WORD, DWORD, WORD);
WORD __pascal __far GLOBAL32ALLOC(DWORD, LPWORD, DWORD, WORD);
WORD __pascal __far GLOBAL32CODEALIAS(WORD, LPWORD, WORD);
WORD __pascal __far GLOBAL32CODEALIASFREE(WORD, WORD, WORD);
WORD __pascal __far GLOBAL32FREE(WORD, WORD);
WORD __pascal __far GLOBAL32REALLOC(WORD, DWORD, WORD);
ATOM __pascal __far GLOBALADDATOM(LPCSTR);
HGLOBAL __pascal __far GLOBALALLOC(UINT, DWORD);
DWORD __pascal __far GLOBALCOMPACT(DWORD);
ATOM __pascal __far GLOBALDELETEATOM(ATOM);
DWORD __pascal __far GLOBALDOSALLOC(DWORD);
UINT __pascal __far GLOBALDOSFREE(UINT);
BOOL __pascal __far GLOBALENTRYHANDLE(GLOBALENTRY far *lpGlobal, HGLOBAL hItem);
BOOL __pascal __far GLOBALENTRYMODULE(GLOBALENTRY far *lpGlobal, HMODULE hModule, WORD wSeg);
ATOM __pascal __far GLOBALFINDATOM(LPCSTR);
BOOL __pascal __far GLOBALFIRST(GLOBALENTRY far *lpGlobal, WORD wFlags);
void __pascal __far GLOBALFIX(HGLOBAL);
UINT __pascal __far GLOBALFLAGS(HGLOBAL);
HGLOBAL __pascal __far GLOBALFREE(HGLOBAL);
UINT __pascal __far GLOBALGETATOMNAME(ATOM, LPSTR, int);
DWORD __pascal __far GLOBALHANDLE(UINT);
WORD __pascal __far GLOBALHANDLETOSEL(HGLOBAL hMem);
BOOL __pascal __far GLOBALINFO(GLOBALINFO far *lpGlobalInfo);
char far *__pascal __far GLOBALLOCK(HGLOBAL);
HGLOBAL __pascal __far GLOBALLRUNEWEST(HGLOBAL);
HGLOBAL __pascal __far GLOBALLRUOLDEST(HGLOBAL);
BOOL __pascal __far GLOBALNEXT(GLOBALENTRY far *lpGlobal, WORD wFlags);
void __pascal __far GLOBALNOTIFY(GNOTIFYPROC);
UINT __pascal __far GLOBALPAGELOCK(HGLOBAL);
UINT __pascal __far GLOBALPAGEUNLOCK(HGLOBAL);
HGLOBAL __pascal __far GLOBALREALLOC(HGLOBAL, DWORD, UINT);
DWORD __pascal __far GLOBALSIZE(HGLOBAL);
void __pascal __far GLOBALUNFIX(HGLOBAL);
BOOL __pascal __far GLOBALUNLOCK(HGLOBAL);
BOOL __pascal __far GLOBALUNWIRE(HGLOBAL);
char far *__pascal __far GLOBALWIRE(HGLOBAL);
MACRO_GLOBAL GLOBAL_ALL;
MACRO_GLOBAL GLOBAL_FREE;
MACRO_GLOBAL GLOBAL_LRU;
MACRO_GMEM GMEM_DDESHARE;
MACRO_GMEM GMEM_DISCARDABLE;
MACRO_GMEM_DISCARDED GMEM_DISCARDED;
MACRO_GMEM GMEM_FIXED;
MACRO_GMEM_DISCARDED GMEM_LOCKCOUNT;
MACRO_GMEM GMEM_LOWER;
MACRO_GMEM GMEM_MODIFY;
MACRO_GMEM GMEM_MOVEABLE;
MACRO_GMEM GMEM_NOCOMPACT;
MACRO_GMEM GMEM_NODISCARD;
MACRO_GMEM GMEM_NOTIFY;
MACRO_GMEM GMEM_NOT_BANKED;
MACRO_GMEM GMEM_SHARE;
MACRO_GMEM GMEM_ZEROINIT;
MACRO_GND GND_FIRSTINSTANCEONLY;
MACRO_GND GND_FORWARD;
MACRO_GND GND_REVERSE;
MACRO_GPTR GPTR;
BOOL __pascal __far GRAYSTRING(HDC, HBRUSH, GRAYSTRINGPROC, LPARAM, int, int, int, int, int);
MACRO_BRUSH GRAY_BRUSH;
MACRO_GT GT_BURGERMASTER;
MACRO_GT GT_CODE;
MACRO_GT GT_DATA;
MACRO_GT GT_DGROUP;
MACRO_GT GT_FREE;
MACRO_GT GT_INTERNAL;
MACRO_GT GT_MODULE;
MACRO_GT GT_RESOURCE;
MACRO_GT GT_SENTINEL;
MACRO_GT GT_TASK;
MACRO_GT GT_UNKNOWN;
MACRO_GWL_STYLE GWL_EXSTYLE;
MACRO_GWL_STYLE GWL_STYLE;
MACRO_GWL GWL_WNDPROC;
MACRO_GWW GWW_HINSTANCE;
MACRO_GWW GWW_HWNDPARENT;
MACRO_GWW GWW_ID;
MACRO_GW GW_CHILD;
MACRO_GW GW_HWNDFIRST;
MACRO_GW GW_HWNDLAST;
MACRO_GW GW_HWNDNEXT;
MACRO_GW GW_HWNDPREV;
MACRO_GW GW_OWNER;
MACRO_CHARSET HANGEUL_CHARSET;
MACRO_HCBT HCBT_ACTIVATE;
MACRO_HCBT HCBT_CLICKSKIPPED;
MACRO_HCBT HCBT_CREATEWND;
MACRO_HCBT HCBT_DESTROYWND;
MACRO_HCBT HCBT_KEYSKIPPED;
MACRO_HCBT HCBT_MINMAX;
MACRO_HCBT HCBT_MOVESIZE;
MACRO_HCBT HCBT_QS;
MACRO_HCBT HCBT_SETFOCUS;
MACRO_HCBT HCBT_SYSCOMMAND;
MACRO_HC HC_ACTION;
MACRO_HC HC_GETLPLPFN;
MACRO_HC_GETNEXT HC_GETNEXT;
MACRO_HC HC_LPFNNEXT;
MACRO_HC HC_LPLPFNNEXT;
MACRO_HC_GETNEXT HC_NOREM;
MACRO_HC_GETNEXT HC_NOREMOVE;
MACRO_HC_GETNEXT HC_SKIP;
MACRO_HC_GETNEXT HC_SYSMODALOFF;
MACRO_HC_GETNEXT HC_SYSMODALON;
MACRO_HDATA HDATA_APPOWNED;
MACRO_HEKK HEKK_CANDIDATE;
MACRO_HEKK HEKK_CONVERT;
MACRO_HEKK HEKK_DEFAULT;
DWORD __pascal __far HELPMESSAGEFILTERHOOKFUNCTION(int, WORD, LPMSG);
MACRO_HELP HELP_COMMAND;
MACRO_HELP HELP_CONTENTS;
MACRO_HELP HELP_CONTEXT;
MACRO_HELP HELP_CONTEXTPOPUP;
MACRO_HELP HELP_FORCEFILE;
MACRO_HELP HELP_HELPONHELP;
MACRO_HELP HELP_INDEX;
MACRO_HELP HELP_KEY;
MACRO_HELP HELP_MULTIKEY;
MACRO_HELP HELP_PARTIALKEY;
MACRO_HELP HELP_QUIT;
MACRO_HELP HELP_SETCONTENTS;
MACRO_HELP HELP_SETINDEX;
MACRO_HELP HELP_SETWINPOS;
MACRO_HEP HEP_NORECOG;
MACRO_HEP HEP_RECOG;
MACRO_HEP HEP_WAITFORTAP;
MACRO_HE HE_CANCELKKCONVERT;
MACRO_HE HE_CHAROFFSET;
MACRO_HE HE_CHARPOSITION;
MACRO_HE HE_DEFAULTFONT;
MACRO_HE HE_FIXKKCONVERT;
MACRO_HE_GETBOXLAYOUT HE_GETBOXLAYOUT;
MACRO_HE HE_GETINFLATE;
MACRO_HE HE_GETINKHANDLE;
MACRO_HE HE_GETKKCONVERT;
MACRO_HE HE_GETRC;
MACRO_HE HE_GETRCRESULT;
MACRO_HE HE_GETRCRESULTCODE;
MACRO_HE HE_GETUNDERLINE;
MACRO_HE HE_KKCONVERT;
MACRO_HE_GETBOXLAYOUT HE_SETBOXLAYOUT;
MACRO_HE HE_SETINFLATE;
MACRO_HE HE_SETINKMODE;
MACRO_HE HE_SETRC;
MACRO_HE HE_SETUNDERLINE;
MACRO_HE HE_STOPINKMODE;
MACRO_HFILE HFILE_ERROR;
void __pascal __far HIDECARET(HWND);
MACRO_HIDE HIDE_WINDOW;
BOOL __pascal __far HILITEMENUITEM(HWND, HMENU, UINT, UINT);
MACRO_PER_INCH HIMETRIC_PER_INCH;
MACRO_HINSTANCE HINSTANCE_ERROR;
MACRO_HKEY HKEY_CLASSES_ROOT;
MACRO_HKP HKP_SETHOOK;
MACRO_HKP HKP_UNHOOK;
void __pascal __far HMEMCPY(void far *, const void far *, __int32);
MACRO_HN HN_DELAYEDRECOGFAIL;
MACRO_HN HN_ENDKKCONVERT;
MACRO_HN HN_ENDREC;
MACRO_HN HN_RCRESULT;
MACRO_BRUSH HOLLOW_BRUSH;
MACRO_VERTSIZE HORZRES;
MACRO_DRIVERVERSION HORZSIZE;
MACRO_NOT_FOUND HOST_NOT_FOUND;
MACRO_HSHELL HSHELL_ACTIVATESHELLWINDOW;
MACRO_HSHELL HSHELL_WINDOWCREATED;
MACRO_HSHELL HSHELL_WINDOWDESTROYED;
MACRO_HS HS_BDIAGONAL;
MACRO_HS HS_CROSS;
MACRO_HS HS_DIAGCROSS;
MACRO_HS HS_FDIAGONAL;
MACRO_HS HS_HORIZONTAL;
MACRO_HS HS_VERTICAL;
MACRO_HTBORDER HTBORDER;
MACRO_HTBOTTOM HTBOTTOM;
MACRO_HTBOTTOM HTBOTTOMLEFT;
MACRO_HTBOTTOMRIGHT HTBOTTOMRIGHT;
MACRO_HTNOWHERE HTCAPTION;
MACRO_HTNOWHERE HTCLIENT;
MACRO_HTERROR HTERROR;
MACRO_HTGROWBOX HTGROWBOX;
MACRO_HTHSCROLL HTHSCROLL;
MACRO_HTLEFT HTLEFT;
MACRO_HTMAXBUTTON HTMAXBUTTON;
MACRO_HTMENU HTMENU;
MACRO_HTVSCROLL HTMINBUTTON;
MACRO_HTNOWHERE HTNOWHERE;
u_long __pascal __far HTONL(u_long hostlong);
u_short __pascal __far HTONS(u_short hostshort);
MACRO_HTGROWBOX HTREDUCE;
MACRO_HTRIGHT HTRIGHT;
MACRO_HTSYSMENU HTSIZE;
MACRO_HTSYSMENU HTSYSMENU;
MACRO_HTTOP HTTOP;
MACRO_HTTOPLEFT HTTOPLEFT;
MACRO_HTTOPRIGHT HTTOPRIGHT;
MACRO_HTTRANSPARENT HTTRANSPARENT;
MACRO_HTVSCROLL HTVSCROLL;
MACRO_HTZOOM HTZOOM;
MACRO_HWND_TOP HWND_BOTTOM;
MACRO_HWND HWND_BROADCAST;
MACRO_HWND_DESKTOP HWND_DESKTOP;
MACRO_HWND_TOP HWND_NOTOPMOST;
MACRO_HWND_TOP HWND_TOP;
MACRO_HWND_TOP HWND_TOPMOST;
MACRO_HWR HWR_APPWIDE;
MACRO_HWR HWR_RESULTS;
MACRO_IDABORT IDABORT;
MACRO_IDBZ IDBZ_ICON;
MACRO_IDBZ IDBZ_MESSAGE1;
MACRO_IDBZ IDBZ_RETRY;
MACRO_IDBZ IDBZ_SWITCHTO;
MACRO_IDB IDB_RESULTSEGA;
MACRO_IDB IDB_RESULTSHIRESVGA;
MACRO_IDB IDB_RESULTSVGA;
MACRO_IDOK IDCANCEL;
MACRO_IDCV IDCV_ACTIVATEAS;
MACRO_IDCV IDCV_ACTIVATELIST;
MACRO_IDCV IDCV_CHANGEICON;
MACRO_IDCV IDCV_CONVERTLIST;
MACRO_IDCV IDCV_CONVERTTO;
MACRO_IDCV IDCV_DISPLAYASICON;
MACRO_IDCV IDCV_GRPRESULT;
MACRO_IDCV IDCV_ICON;
MACRO_IDCV IDCV_ICONLABEL1;
MACRO_IDCV IDCV_ICONLABEL2;
MACRO_IDCV IDCV_OBJECTTYPE;
MACRO_IDCV IDCV_RESULTTEXT;
MACRO_IDCV IDCV_STXCONVERTTO;
MACRO_IDCV IDCV_STXCURTYPE;
MACRO_IDD IDD_BUSY;
MACRO_IDD IDD_CANNOTUPDATELINK;
MACRO_IDD IDD_CHANGEICON;
MACRO_IDD IDD_CHANGEICONBROWSE;
MACRO_IDD IDD_CHANGESOURCE;
MACRO_IDD IDD_CONVERT;
MACRO_IDD IDD_EDITLINKS;
MACRO_IDD IDD_FILEOPEN;
MACRO_IDD IDD_INSERTFILEBROWSE;
MACRO_IDD IDD_INSERTOBJECT;
MACRO_IDD IDD_LINKSOURCEUNAVAILABLE;
MACRO_IDD IDD_LINKTYPECHANGED;
MACRO_IDD IDD_OUTOFMEMORY;
MACRO_IDD IDD_PASTESPECIAL;
MACRO_IDD IDD_SERVERNOTFOUND;
MACRO_IDD IDD_SERVERNOTREG;
MACRO_IDD IDD_UPDATELINKS;
MACRO_IDHELP IDHELP;
MACRO_IDIGNORE IDIGNORE;
MACRO_IDLFLAG IDLFLAG_FIN;
MACRO_IDLFLAG IDLFLAG_FOUT;
MACRO_IDLFLAG IDLFLAG_NONE;
MACRO_IDNO IDNO;
MACRO_IDOK IDOK;
MACRO_IDABORT IDRETRY;
MACRO_IDS_OLE2UIUNKNOWN IDS_BROWSE;
MACRO_IDS_BZRESULTTEXTBUSY IDS_BZRESULTTEXTBUSY;
MACRO_IDS_BZRESULTTEXTBUSY IDS_BZRESULTTEXTNOTRESPONDING;
MACRO_IDS_BZRESULTTEXTBUSY IDS_CHANGEADDITIONALLINKS;
MACRO_IDS_BZRESULTTEXTBUSY IDS_CHANGESOURCE;
MACRO_IDS_CINOICONSINFILE IDS_CIFILEACCESS;
MACRO_IDS_CINOICONSINFILE IDS_CIFILEOPENFAIL;
MACRO_IDS_CINOICONSINFILE IDS_CIFILESHARE;
MACRO_IDS_CINOICONSINFILE IDS_CIINVALIDFILE;
MACRO_IDS_CINOICONSINFILE IDS_CINOICONSINFILE;
MACRO_IDS_BZRESULTTEXTBUSY IDS_CLOSE;
MACRO_IDS_CVRESULTCONVERTLINK IDS_CVRESULTACTIVATEAS;
MACRO_IDS_CVRESULTCONVERTLINK IDS_CVRESULTACTIVATEDIFF;
MACRO_IDS_CVRESULTCONVERTLINK IDS_CVRESULTCONVERTLINK;
MACRO_IDS_CVRESULTCONVERTLINK IDS_CVRESULTCONVERTTO;
MACRO_IDS_CVRESULTCONVERTLINK IDS_CVRESULTDISPLAYASICON;
MACRO_IDS_CVRESULTCONVERTLINK IDS_CVRESULTNOCHANGE;
MACRO_IDS_OLE2UIUNKNOWN IDS_DEFICONLABEL;
MACRO_IDS_BZRESULTTEXTBUSY IDS_ERR_ADDSTRING;
MACRO_IDS_BZRESULTTEXTBUSY IDS_ERR_GETLINKSOURCE;
MACRO_IDS_BZRESULTTEXTBUSY IDS_ERR_GETLINKUPDATEOPTIONS;
MACRO_IDS_BZRESULTTEXTBUSY IDS_FAILED;
MACRO_IDS_OLE2UIUNKNOWN IDS_FILTERS;
MACRO_IDS_OLE2UIUNKNOWN IDS_ICONFILTERS;
MACRO_IDS_BZRESULTTEXTBUSY IDS_INVALIDSOURCE;
MACRO_IDS_IORESULTNEW IDS_IORESULTFROMFILE1;
MACRO_IDS_IORESULTNEW IDS_IORESULTFROMFILE2;
MACRO_IDS_IORESULTNEW IDS_IORESULTFROMFILEICON2;
MACRO_IDS_IORESULTNEW IDS_IORESULTLINKFILE1;
MACRO_IDS_IORESULTNEW IDS_IORESULTLINKFILE2;
MACRO_IDS_IORESULTNEW IDS_IORESULTLINKFILEICON1;
MACRO_IDS_IORESULTNEW IDS_IORESULTLINKFILEICON2;
MACRO_IDS_IORESULTNEW IDS_IORESULTNEW;
MACRO_IDS_IORESULTNEW IDS_IORESULTNEWICON;
MACRO_IDS_BZRESULTTEXTBUSY IDS_LINKS;
MACRO_IDS_BZRESULTTEXTBUSY IDS_LINK_AUTO;
MACRO_IDS_BZRESULTTEXTBUSY IDS_LINK_MANUAL;
MACRO_IDS_BZRESULTTEXTBUSY IDS_LINK_UNKNOWN;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UICONVERT;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIEDIT;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIEDITLINKCMD_1VERB;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIEDITLINKCMD_NVERB;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIEDITNOOBJCMD;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIEDITOBJECTCMD_1VERB;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIEDITOBJECTCMD_NVERB;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UILINK;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIOBJECT;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIPASTELINKEDTYPE;
MACRO_IDS_OLE2UIUNKNOWN IDS_OLE2UIUNKNOWN;
MACRO_IDS IDS_OLESTDDISKFULL;
MACRO_IDS IDS_OLESTDNOCREATEFILE;
MACRO_IDS IDS_OLESTDNOOPENFILE;
MACRO_IDS_PSPASTEDATA IDS_PSNONOLE;
MACRO_IDS_PSPASTEDATA IDS_PSPASTEDATA;
MACRO_IDS_PSPASTEDATA IDS_PSPASTELINKDATA;
MACRO_IDS_PSPASTEDATA IDS_PSPASTELINKOBJECT;
MACRO_IDS_PSPASTEDATA IDS_PSPASTELINKOBJECTASICON;
MACRO_IDS_PSPASTEDATA IDS_PSPASTEOBJECT;
MACRO_IDS_PSPASTEDATA IDS_PSPASTEOBJECTASICON;
MACRO_IDS_PSPASTEDATA IDS_PSUNKNOWNAPP;
MACRO_IDS_PSPASTEDATA IDS_PSUNKNOWNSRC;
MACRO_IDS_PSPASTEDATA IDS_PSUNKNOWNTYPE;
MACRO_IDYES IDYES;
MACRO_ID_APP ID_APP;
MACRO_ID_GROUP ID_BROWSE;
MACRO_ID_GROUP ID_CURRENT;
MACRO_ID_GROUP ID_CURRENTICON;
MACRO_ID_GROUP ID_DEFAULT;
MACRO_ID_GROUP ID_DEFAULTICON;
MACRO_ID ID_DEFAULTINST;
MACRO_ID_PU ID_DUMMY;
MACRO_ID_EL ID_EL_AUTOMATIC;
MACRO_ID_EL ID_EL_CANCELLINK;
MACRO_ID_EL ID_EL_CHANGESOURCE;
MACRO_ID_EL ID_EL_CLOSE;
MACRO_ID_EL ID_EL_COL1;
MACRO_ID_EL ID_EL_COL2;
MACRO_ID_EL ID_EL_COL3;
MACRO_ID_EL ID_EL_LINKSLISTBOX;
MACRO_ID_EL ID_EL_LINKSOURCE;
MACRO_ID_EL ID_EL_LINKTYPE;
MACRO_ID_EL ID_EL_MANUAL;
MACRO_ID_EL ID_EL_NULL;
MACRO_ID_EL ID_EL_OPENSOURCE;
MACRO_ID_EL ID_EL_UPDATE;
MACRO_ID_EL ID_EL_UPDATENOW;
MACRO_ID_GROUP ID_FROMFILE;
MACRO_ID_GROUP ID_FROMFILEEDIT;
MACRO_ID_GROUP ID_GROUP;
MACRO_ID_GROUP ID_ICONLIST;
MACRO_ID_IO ID_IO_CHANGEICON;
MACRO_ID_IO ID_IO_CREATEFROMFILE;
MACRO_ID_IO ID_IO_CREATENEW;
MACRO_ID_IO ID_IO_DISPLAYASICON;
MACRO_ID_IO ID_IO_FILE;
MACRO_ID_IO ID_IO_FILEDISPLAY;
MACRO_ID_IO ID_IO_FILETEXT;
MACRO_ID_IO ID_IO_FILETYPE;
MACRO_ID_IO ID_IO_ICONDISPLAY;
MACRO_ID_IO ID_IO_LINKFILE;
MACRO_ID_IO ID_IO_OBJECTTYPELIST;
MACRO_ID_IO ID_IO_OBJECTTYPETEXT;
MACRO_ID_IO ID_IO_RESULTIMAGE;
MACRO_ID_IO ID_IO_RESULTTEXT;
MACRO_ID_GROUP ID_LABEL;
MACRO_ID_GROUP ID_LABELEDIT;
MACRO_ID_OLEUIHELP ID_OLEUIHELP;
MACRO_ID_PS ID_PS_CHANGEICON;
MACRO_ID_PS ID_PS_DISPLAYASICON;
MACRO_ID_PS ID_PS_DISPLAYLIST;
MACRO_ID_PS ID_PS_ICONDISPLAY;
MACRO_ID_PS ID_PS_PASTE;
MACRO_ID_PS ID_PS_PASTELINK;
MACRO_ID_PS ID_PS_PASTELINKLIST;
MACRO_ID_PS ID_PS_PASTELIST;
MACRO_ID_PS ID_PS_RESULTGROUP;
MACRO_ID_PS ID_PS_RESULTIMAGE;
MACRO_ID_PS ID_PS_RESULTTEXT;
MACRO_ID_PS ID_PS_SOURCETEXT;
MACRO_ID_PS ID_PS_STXAS;
MACRO_ID_PS ID_PS_STXSOURCE;
MACRO_ID_PU ID_PU_BROWSE;
MACRO_ID_PU ID_PU_CONVERT;
MACRO_ID_PU ID_PU_LINKS;
MACRO_ID_PU ID_PU_METER;
MACRO_ID_PU ID_PU_PERCENT;
MACRO_ID_PU ID_PU_STOP;
MACRO_ID_PU ID_PU_TEXT;
MACRO_ID_GROUP ID_RESULTICON;
MACRO_ID_GROUP ID_RESULTLABEL;
MACRO_ID_STATIC ID_STATIC;
MACRO_IE IE_BADID;
MACRO_IE IE_BAUDRATE;
MACRO_IE IE_BYTESIZE;
MACRO_IE IE_DEFAULT;
MACRO_IE IE_HARDWARE;
MACRO_IE IE_MEMORY;
MACRO_IE IE_NOPEN;
MACRO_IE IE_OPEN;
MACRO_IGNORE IGNORE;
HRESULT __pascal __far IIDFROMSTRING(LPSTR lpsz, LPIID lpiid);
MACRO_IMPLINK IMPLINK_HIGHEXPER;
MACRO_IMPLINK IMPLINK_IP;
MACRO_IMPLINK IMPLINK_LOWEXPER;
MACRO_IMPLTYPEFLAG IMPLTYPEFLAG_FDEFAULT;
MACRO_IMPLTYPEFLAG IMPLTYPEFLAG_FRESTRICTED;
MACRO_IMPLTYPEFLAG IMPLTYPEFLAG_FSOURCE;
MACRO_INADDR INADDR_ANY;
MACRO_INADDR INADDR_BROADCAST;
MACRO_INADDR INADDR_LOOPBACK;
MACRO_INADDR INADDR_NONE;
unsigned __int32 __pascal __far INET_ADDR(const char far *cp);
char far *__pascal __far INET_NTOA(struct in_addr in);
MACRO_IGNORE INFINITE;
void __pascal __far INFLATERECT(RECT far *, int, int);
BOOL __pascal __far INITATOMTABLE(int);
void __pascal __far INITRC(HWND, LPRC);
BOOL __pascal __far INITRECOGNIZER(LPRC);
MACRO_INKWIDTH INKWIDTH_MAXIMUM;
MACRO_INKWIDTH INKWIDTH_MINIMUM;
MACRO_INPLACE_E INPLACE_DEFBORDERWIDTH;
MACRO_INPLACE INPLACE_E_FIRST;
MACRO_INPLACE INPLACE_E_LAST;
MACRO_INPLACE_E INPLACE_E_NOTOOLSPACE;
MACRO_INPLACE_E INPLACE_E_NOTUNDOABLE;
MACRO_INPLACE INPLACE_S_FIRST;
MACRO_INPLACE INPLACE_S_LAST;
MACRO_INPLACE_E INPLACE_S_TRUNCATED;
BOOL __pascal __far INSENDMESSAGE();
BOOL __pascal __far INSERTMENU(HMENU, UINT, UINT, UINT, LPCSTR);
HREC __pascal __far INSTALLRECOGNIZER(LPSTR);
BOOL __pascal __far INTERRUPTREGISTER(HTASK hTask, FARPROC lpfnIntCallback);
BOOL __pascal __far INTERRUPTUNREGISTER(HTASK hTask);
int __pascal __far INTERSECTCLIPRECT(HDC, int, int, int, int);
BOOL __pascal __far INTERSECTRECT(RECT far *, const RECT far *, const RECT far *);
MACRO_INT INT_1;
MACRO_INT INT_3;
MACRO_INT INT_BADPAGEFAULT;
MACRO_INT INT_CTLALTSYSRQ;
MACRO_INT INT_DIV0;
MACRO_INT INT_GPFAULT;
MACRO_INT INT_STKFAULT;
MACRO_INT INT_UDINSTR;
void __pascal __far INVALIDATERECT(HWND, const RECT far *, BOOL);
void __pascal __far INVALIDATERGN(HWND, HRGN, BOOL);
MACRO_INVALID INVALID_SOCKET;
void __pascal __far INVERTRECT(HDC, const RECT far *);
BOOL __pascal __far INVERTRGN(HDC, HRGN);
tagINVOKEKIND INVOKE_FUNC;
tagINVOKEKIND INVOKE_PROPERTYGET;
tagINVOKEKIND INVOKE_PROPERTYPUT;
tagINVOKEKIND INVOKE_PROPERTYPUTREF;
MACRO_IN IN_CLASSA_HOST;
MACRO_IN IN_CLASSA_MAX;
MACRO_IN IN_CLASSA_NET;
MACRO_IN IN_CLASSA_NSHIFT;
MACRO_IN IN_CLASSB_HOST;
MACRO_IN IN_CLASSB_MAX;
MACRO_IN IN_CLASSB_NET;
MACRO_IN IN_CLASSB_NSHIFT;
MACRO_IN IN_CLASSC_HOST;
MACRO_IN IN_CLASSC_NET;
MACRO_IN IN_CLASSC_NSHIFT;
MACRO_IOCPARM IOCPARM_MASK;
int __pascal __far IOCTLSOCKET(SOCKET s, __int32 cmd, u_long far *argp);
MACRO_IOC IOC_IN;
MACRO_IOC IOC_INOUT;
MACRO_IOC IOC_OUT;
MACRO_IOC IOC_VOID;
MACRO_IOF IOF_CHECKDISPLAYASICON;
MACRO_IOF IOF_CHECKLINK;
MACRO_IOF IOF_CREATEFILEOBJECT;
MACRO_IOF IOF_CREATELINKOBJECT;
MACRO_IOF IOF_CREATENEWOBJECT;
MACRO_IOF IOF_DISABLEDISPLAYASICON;
MACRO_IOF IOF_DISABLELINK;
MACRO_IOF IOF_SELECTCREATEFROMFILE;
MACRO_IOF IOF_SELECTCREATENEW;
MACRO_IOF IOF_SHOWHELP;
MACRO_IOF IOF_VERIFYSERVERSEXIST;
MACRO_IPPORT IPPORT_BIFFUDP;
MACRO_IPPORT IPPORT_CMDSERVER;
MACRO_IPPORT IPPORT_DAYTIME;
MACRO_IPPORT IPPORT_DISCARD;
MACRO_IPPORT IPPORT_ECHO;
MACRO_IPPORT IPPORT_EFSSERVER;
MACRO_IPPORT IPPORT_EXECSERVER;
MACRO_IPPORT IPPORT_FINGER;
MACRO_IPPORT IPPORT_FTP;
MACRO_IPPORT IPPORT_LOGINSERVER;
MACRO_IPPORT IPPORT_MTP;
MACRO_IPPORT IPPORT_NAMESERVER;
MACRO_IPPORT IPPORT_NETSTAT;
MACRO_IPPORT IPPORT_RESERVED;
MACRO_IPPORT IPPORT_RJE;
MACRO_IPPORT IPPORT_ROUTESERVER;
MACRO_IPPORT IPPORT_SMTP;
MACRO_IPPORT IPPORT_SUPDUP;
MACRO_IPPORT IPPORT_SYSTAT;
MACRO_IPPORT IPPORT_TELNET;
MACRO_IPPORT IPPORT_TFTP;
MACRO_IPPORT IPPORT_TIMESERVER;
MACRO_IPPORT IPPORT_TTYLINK;
MACRO_IPPORT IPPORT_WHOIS;
MACRO_IPPORT IPPORT_WHOSERVER;
MACRO_IPPROTO IPPROTO_GGP;
MACRO_IPPROTO IPPROTO_ICMP;
MACRO_IPPROTO IPPROTO_IDP;
MACRO_IPPROTO IPPROTO_IP;
MACRO_IPPROTO IPPROTO_MAX;
MACRO_IPPROTO IPPROTO_ND;
MACRO_IPPROTO IPPROTO_PUP;
MACRO_IPPROTO IPPROTO_RAW;
MACRO_IPPROTO IPPROTO_TCP;
MACRO_IPPROTO IPPROTO_UDP;
MACRO_IP IP_ADD_MEMBERSHIP;
MACRO_IP IP_DEFAULT_MULTICAST_LOOP;
MACRO_IP IP_DEFAULT_MULTICAST_TTL;
MACRO_IP IP_DROP_MEMBERSHIP;
MACRO_IP IP_MAX_MEMBERSHIPS;
MACRO_IP IP_MULTICAST_IF;
MACRO_IP IP_MULTICAST_LOOP;
MACRO_IP IP_MULTICAST_TTL;
MACRO_IP IP_OPTIONS;
BOOL __pascal __far ISACCELERATOR(HACCEL hAccel, int cAccelEntries, LPMSG lpMsg, WORD far *lpwCmd);
BOOL __pascal __far ISBADCODEPTR(FARPROC lpfn);
BOOL __pascal __far ISBADHUGEREADPTR(const void far *lp, DWORD cb);
BOOL __pascal __far ISBADHUGEWRITEPTR(void far *lp, DWORD cb);
BOOL __pascal __far ISBADREADPTR(const void far *lp, UINT cb);
BOOL __pascal __far ISBADSTRINGPTR(const void far *lpsz, UINT cchMax);
BOOL __pascal __far ISBADWRITEPTR(void far *lp, UINT cb);
BOOL __pascal __far ISCHARALPHA(char);
BOOL __pascal __far ISCHARALPHANUMERIC(char);
BOOL __pascal __far ISCHARLOWER(char);
BOOL __pascal __far ISCHARUPPER(char);
BOOL __pascal __far ISCHILD(HWND, HWND);
BOOL __pascal __far ISCLIPBOARDFORMATAVAILABLE(UINT);
BOOL __pascal __far ISDBCSLEADBYTE(BYTE);
BOOL __pascal __far ISDIALOGMESSAGE(HWND, MSG far *);
UINT __pascal __far ISDLGBUTTONCHECKED(HWND, int);
BOOL __pascal __far ISEQUALGUID(const GUID far *const rguid1, const GUID far *const rguid2);
BOOL __pascal __far ISGDIOBJECT(HGDIOBJ);
BOOL __pascal __far ISICONIC(HWND);
BOOL __pascal __far ISMENU(HMENU);
UINT __pascal __far ISPENAWARE();
BOOL __pascal __far ISPENEVENT(UINT, __int32);
BOOL __pascal __far ISRECTEMPTY(const RECT far *);
BOOL __pascal __far ISTASK(HTASK);
BOOL __pascal __far ISWINDOW(HWND);
BOOL __pascal __far ISWINDOWENABLED(HWND);
BOOL __pascal __far ISWINDOWVISIBLE(HWND);
BOOL __pascal __far ISZOOMED(HWND);
MACRO_SIMULATED ITALIC_FONTTYPE;
MACRO_BASE JOYERR_BASE;
MACRO_JOYERR JOYERR_NOCANDO;
MACRO_JOYERR JOYERR_NOERROR;
MACRO_JOYERR JOYERR_PARMS;
MACRO_JOYERR JOYERR_UNPLUGGED;
UINT __pascal __far JOYGETDEVCAPS(UINT uJoyID, JOYCAPS far *lpCaps, UINT uSize);
UINT __pascal __far JOYGETNUMDEVS();
UINT __pascal __far JOYGETPOS(UINT uJoyID, JOYINFO far *lpInfo);
UINT __pascal __far JOYGETTHRESHOLD(UINT uJoyID, UINT far *lpuThreshold);
UINT __pascal __far JOYRELEASECAPTURE(UINT uJoyID);
UINT __pascal __far JOYSETCAPTURE(HWND hwnd, UINT uJoyID, UINT uPeriod, BOOL bChanged);
UINT __pascal __far JOYSETTHRESHOLD(UINT uJoyID, UINT uThreshold);
MACRO_JOYSTICKID1 JOYSTICKID1;
MACRO_JOYSTICKID1 JOYSTICKID2;
MACRO_JOY JOY_BUTTON1;
MACRO_JOY JOY_BUTTON1CHG;
MACRO_JOY JOY_BUTTON2;
MACRO_JOY JOY_BUTTON2CHG;
MACRO_JOY JOY_BUTTON3;
MACRO_JOY JOY_BUTTON3CHG;
MACRO_JOY JOY_BUTTON4;
MACRO_JOY JOY_BUTTON4CHG;
MACRO_KF KF_ALTDOWN;
MACRO_KF KF_DLGMODE;
MACRO_KF KF_EXTENDED;
MACRO_KF KF_MENUMODE;
MACRO_KF KF_REPEAT;
MACRO_KF KF_UP;
BOOL __pascal __far KILLTIMER(HWND, UINT);
MACRO_LANG LANG_ALBANIAN;
MACRO_LANG LANG_ARABIC;
MACRO_LANG LANG_BAHASA;
MACRO_LANG LANG_BULGARIAN;
MACRO_LANG LANG_CATALAN;
MACRO_LANG LANG_CHINESE;
MACRO_LANG LANG_CZECH;
MACRO_LANG LANG_DANISH;
MACRO_LANG LANG_DUTCH;
MACRO_LANG LANG_ENGLISH;
MACRO_LANG LANG_FINNISH;
MACRO_LANG LANG_FRENCH;
MACRO_LANG LANG_GERMAN;
MACRO_LANG LANG_GREEK;
MACRO_LANG LANG_HEBREW;
MACRO_LANG LANG_HUNGARIAN;
MACRO_LANG LANG_ICELANDIC;
MACRO_LANG LANG_ITALIAN;
MACRO_LANG LANG_JAPANESE;
MACRO_LANG LANG_KOREAN;
MACRO_LANG LANG_NEUTRAL;
MACRO_LANG LANG_NORWEGIAN;
MACRO_LANG LANG_POLISH;
MACRO_LANG LANG_PORTUGUESE;
MACRO_LANG LANG_RHAETO_ROMAN;
MACRO_LANG LANG_ROMANIAN;
MACRO_LANG LANG_RUSSIAN;
MACRO_LANG LANG_SERBO_CROATIAN;
MACRO_LANG LANG_SLOVAK;
MACRO_LANG LANG_SPANISH;
MACRO_LANG LANG_SWEDISH;
MACRO_LANG_SYSTEM LANG_SYSTEM_DEFAULT;
MACRO_LANG LANG_THAI;
MACRO_LANG LANG_TURKISH;
MACRO_LANG LANG_URDU;
MACRO_LANG_SYSTEM LANG_USER_DEFAULT;
MACRO_LBN LBN_DBLCLK;
MACRO_LBN LBN_ERRSPACE;
MACRO_LBN LBN_KILLFOCUS;
MACRO_LBN LBN_SELCANCEL;
MACRO_LBN LBN_SELCHANGE;
MACRO_LBN LBN_SETFOCUS;
MACRO_LBS LBS_DISABLENOSCROLL;
MACRO_LBS LBS_EXTENDEDSEL;
MACRO_LBS LBS_HASSTRINGS;
MACRO_LBS LBS_MULTICOLUMN;
MACRO_LBS LBS_MULTIPLESEL;
MACRO_LBS LBS_NOINTEGRALHEIGHT;
MACRO_LBS LBS_NOREDRAW;
MACRO_LBS LBS_NOTIFY;
MACRO_LBS LBS_OWNERDRAWFIXED;
MACRO_LBS LBS_OWNERDRAWVARIABLE;
MACRO_LBS LBS_SORT;
MACRO_LBS LBS_STANDARD;
MACRO_LBS LBS_USETABSTOPS;
MACRO_LBS LBS_WANTKEYBOARDINPUT;
MACRO_LB LB_ADDSTRING;
MACRO_LB_OKAY LB_CTLCODE;
MACRO_LB LB_DELETESTRING;
MACRO_LB LB_DIR;
MACRO_LB_OKAY LB_ERR;
MACRO_LB_OKAY LB_ERRSPACE;
MACRO_LB LB_FINDSTRING;
MACRO_LB LB_FINDSTRINGEXACT;
MACRO_LB LB_GETCARETINDEX;
MACRO_LB LB_GETCOUNT;
MACRO_LB LB_GETCURSEL;
MACRO_LB LB_GETHORIZONTALEXTENT;
MACRO_LB LB_GETITEMDATA;
MACRO_LB LB_GETITEMHEIGHT;
MACRO_LB LB_GETITEMRECT;
MACRO_LB LB_GETSEL;
MACRO_LB LB_GETSELCOUNT;
MACRO_LB LB_GETSELITEMS;
MACRO_LB LB_GETTEXT;
MACRO_LB LB_GETTEXTLEN;
MACRO_LB LB_GETTOPINDEX;
MACRO_LB LB_INSERTSTRING;
MACRO_LB_OKAY LB_OKAY;
MACRO_LB LB_RESETCONTENT;
MACRO_LB LB_SELECTSTRING;
MACRO_LB LB_SELITEMRANGE;
MACRO_LB LB_SETCARETINDEX;
MACRO_LB LB_SETCOLUMNWIDTH;
MACRO_LB LB_SETCURSEL;
MACRO_LB LB_SETHORIZONTALEXTENT;
MACRO_LB LB_SETITEMDATA;
MACRO_LB LB_SETITEMHEIGHT;
MACRO_LB LB_SETSEL;
MACRO_LB LB_SETTABSTOPS;
MACRO_LB LB_SETTOPINDEX;
int __pascal __far LCMAPSTRINGA(LCID, unsigned __int32, const char far *, int, char far *, int);
MACRO_LCMAP LCMAP_FULLWIDTH;
MACRO_LCMAP LCMAP_HALFWIDTH;
MACRO_LCMAP LCMAP_HIRAGANA;
MACRO_LCMAP LCMAP_KATAKANA;
MACRO_LCMAP LCMAP_LOWERCASE;
MACRO_LCMAP LCMAP_SORTKEY;
MACRO_LCMAP LCMAP_UPPERCASE;
MACRO_LC LC_INTERIORS;
MACRO_LC LC_MARKER;
MACRO_LC LC_NONE;
MACRO_LC LC_POLYLINE;
MACRO_LC LC_POLYMARKER;
MACRO_LC LC_STYLED;
MACRO_LC LC_WIDE;
MACRO_LC LC_WIDESTYLED;
MACRO_LF LF_FACESIZE;
MACRO_LF_FIXED LF_FIXED;
MACRO_LF_FIXED LF_FREE;
MACRO_LF_FULLFACESIZE LF_FULLFACESIZE;
MACRO_LF_FIXED LF_MOVEABLE;
unsigned __int32 __pascal __far LHASHVALOFNAMESYS(SYSKIND syskind, LCID lcid, TCHAR far *szName);
MACRO_LHND LHND;
tagLIBFLAGS LIBFLAG_FRESTRICTED;
void __pascal __far LIMITEMSPAGES(DWORD);
MACRO_LINECAPS LINECAPS;
void __pascal __far LINEDDA(int, int, int, int, LINEDDAPROC, LPARAM);
BOOL __pascal __far LINETO(HDC, int, int);
int __pascal __far LISTEN(SOCKET s, int backlog);
MACRO_LMEM LMEM_DISCARDABLE;
MACRO_LMEM_DISCARDED LMEM_DISCARDED;
MACRO_LMEM LMEM_FIXED;
MACRO_LMEM_DISCARDED LMEM_LOCKCOUNT;
MACRO_LMEM LMEM_MODIFY;
MACRO_LMEM LMEM_MOVEABLE;
MACRO_LMEM LMEM_NOCOMPACT;
MACRO_LMEM LMEM_NODISCARD;
MACRO_LMEM LMEM_ZEROINIT;
HACCEL __pascal __far LOADACCELERATORS(HINSTANCE, LPCSTR);
HBITMAP __pascal __far LOADBITMAP(HINSTANCE, LPCSTR);
HCURSOR __pascal __far LOADCURSOR(HINSTANCE, LPCSTR);
HICON __pascal __far LOADICON(HINSTANCE, LPCSTR);
HINSTANCE __pascal __far LOADLIBRARY(LPCSTR);
HMENU __pascal __far LOADMENU(HINSTANCE, LPCSTR);
HMENU __pascal __far LOADMENUINDIRECT(const void far *);
HINSTANCE __pascal __far LOADMODULE(LPCSTR, LPVOID);
HRESULT __pascal __far LOADREGTYPELIB(const GUID far *const rguid, unsigned int wVerMajor, unsigned int wVerMinor, LCID lcid, ITypeLib far * far *pptlib);
HGLOBAL __pascal __far LOADRESOURCE(HINSTANCE, HRSRC);
int __pascal __far LOADSTRING(HINSTANCE, UINT, LPSTR, int);
HRESULT __pascal __far LOADTYPELIB(TCHAR far *szFile, ITypeLib far * far *pptlib);
HLOCAL __pascal __far LOCALALLOC(UINT, UINT);
UINT __pascal __far LOCALCOMPACT(UINT);
MACRO_LOCALE LOCALE_ICENTURY;
MACRO_LOCALE LOCALE_ICOUNTRY;
MACRO_LOCALE LOCALE_ICURRDIGITS;
MACRO_LOCALE LOCALE_ICURRENCY;
MACRO_LOCALE LOCALE_IDATE;
MACRO_LOCALE LOCALE_IDAYLZERO;
MACRO_LOCALE LOCALE_IDEFAULTCODEPAGE;
MACRO_LOCALE LOCALE_IDEFAULTCOUNTRY;
MACRO_LOCALE LOCALE_IDEFAULTLANGUAGE;
MACRO_LOCALE LOCALE_IDIGITS;
MACRO_LOCALE LOCALE_IINTLCURRDIGITS;
MACRO_LOCALE LOCALE_ILANGUAGE;
MACRO_LOCALE LOCALE_ILDATE;
MACRO_LOCALE LOCALE_ILZERO;
MACRO_LOCALE LOCALE_IMEASURE;
MACRO_LOCALE LOCALE_IMONLZERO;
MACRO_LOCALE LOCALE_INEGCURR;
MACRO_LOCALE LOCALE_INEGSEPBYSPACE;
MACRO_LOCALE LOCALE_INEGSIGNPOSN;
MACRO_LOCALE LOCALE_INEGSYMPRECEDES;
MACRO_LOCALE LOCALE_IPOSSEPBYSPACE;
MACRO_LOCALE LOCALE_IPOSSIGNPOSN;
MACRO_LOCALE LOCALE_IPOSSYMPRECEDES;
MACRO_LOCALE LOCALE_ITIME;
MACRO_LOCALE LOCALE_ITLZERO;
MACRO_LOCALE LOCALE_NOUSEROVERRIDE;
MACRO_LOCALE LOCALE_S1159;
MACRO_LOCALE LOCALE_S2359;
MACRO_LOCALE LOCALE_SABBREVCTRYNAME;
MACRO_LOCALE LOCALE_SABBREVDAYNAME1;
MACRO_LOCALE LOCALE_SABBREVDAYNAME2;
MACRO_LOCALE LOCALE_SABBREVDAYNAME3;
MACRO_LOCALE LOCALE_SABBREVDAYNAME4;
MACRO_LOCALE LOCALE_SABBREVDAYNAME5;
MACRO_LOCALE LOCALE_SABBREVDAYNAME6;
MACRO_LOCALE LOCALE_SABBREVDAYNAME7;
MACRO_LOCALE LOCALE_SABBREVLANGNAME;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME1;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME10;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME11;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME12;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME2;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME3;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME4;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME5;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME6;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME7;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME8;
MACRO_LOCALE LOCALE_SABBREVMONTHNAME9;
MACRO_LOCALE LOCALE_SCOUNTRY;
MACRO_LOCALE LOCALE_SCURRENCY;
MACRO_LOCALE LOCALE_SDATE;
MACRO_LOCALE LOCALE_SDAYNAME1;
MACRO_LOCALE LOCALE_SDAYNAME2;
MACRO_LOCALE LOCALE_SDAYNAME3;
MACRO_LOCALE LOCALE_SDAYNAME4;
MACRO_LOCALE LOCALE_SDAYNAME5;
MACRO_LOCALE LOCALE_SDAYNAME6;
MACRO_LOCALE LOCALE_SDAYNAME7;
MACRO_LOCALE LOCALE_SDECIMAL;
MACRO_LOCALE LOCALE_SENGCOUNTRY;
MACRO_LOCALE LOCALE_SENGLANGUAGE;
MACRO_LOCALE LOCALE_SGROUPING;
MACRO_LOCALE LOCALE_SINTLSYMBOL;
MACRO_LOCALE LOCALE_SLANGUAGE;
MACRO_LOCALE LOCALE_SLIST;
MACRO_LOCALE LOCALE_SLONGDATE;
MACRO_LOCALE LOCALE_SMONDECIMALSEP;
MACRO_LOCALE LOCALE_SMONGROUPING;
MACRO_LOCALE LOCALE_SMONTHNAME1;
MACRO_LOCALE LOCALE_SMONTHNAME10;
MACRO_LOCALE LOCALE_SMONTHNAME11;
MACRO_LOCALE LOCALE_SMONTHNAME12;
MACRO_LOCALE LOCALE_SMONTHNAME2;
MACRO_LOCALE LOCALE_SMONTHNAME3;
MACRO_LOCALE LOCALE_SMONTHNAME4;
MACRO_LOCALE LOCALE_SMONTHNAME5;
MACRO_LOCALE LOCALE_SMONTHNAME6;
MACRO_LOCALE LOCALE_SMONTHNAME7;
MACRO_LOCALE LOCALE_SMONTHNAME8;
MACRO_LOCALE LOCALE_SMONTHNAME9;
MACRO_LOCALE LOCALE_SMONTHOUSANDSEP;
MACRO_LOCALE LOCALE_SNATIVECTRYNAME;
MACRO_LOCALE LOCALE_SNATIVEDIGITS;
MACRO_LOCALE LOCALE_SNATIVELANGNAME;
MACRO_LOCALE LOCALE_SNEGATIVESIGN;
MACRO_LOCALE LOCALE_SPOSITIVESIGN;
MACRO_LOCALE LOCALE_SSHORTDATE;
MACRO_LOCALE LOCALE_STHOUSAND;
MACRO_LOCALE LOCALE_STIME;
MACRO_LOCALE_SYSTEM LOCALE_SYSTEM_DEFAULT;
MACRO_LOCALE_SYSTEM LOCALE_USER_DEFAULT;
BOOL __pascal __far LOCALFIRST(LOCALENTRY far *lpLocal, HGLOBAL hHeap);
UINT __pascal __far LOCALFLAGS(HLOCAL);
HLOCAL __pascal __far LOCALFREE(HLOCAL);
HLOCAL __pascal __far LOCALHANDLE(UINT);
BOOL __pascal __far LOCALINFO(LOCALINFO far *lpLocal, HGLOBAL hHeap);
BOOL __pascal __far LOCALINIT(UINT, UINT, UINT);
char near *__pascal __far LOCALLOCK(HLOCAL);
BOOL __pascal __far LOCALNEXT(LOCALENTRY far *lpLocal);
HLOCAL __pascal __far LOCALREALLOC(HLOCAL, UINT, UINT);
UINT __pascal __far LOCALSHRINK(HLOCAL, UINT);
UINT __pascal __far LOCALSIZE(HLOCAL);
BOOL __pascal __far LOCALUNLOCK(HLOCAL);
BOOL __pascal __far LOCKINPUT(HANDLE h1, HWND hwndInput, BOOL fLock);
char far *__pascal __far LOCKRESOURCE(HGLOBAL);
HGLOBAL __pascal __far LOCKSEGMENT(UINT);
BOOL __pascal __far LOCKWINDOWUPDATE(HWND hwndLock);
tagLOCKTYPE LOCK_EXCLUSIVE;
tagLOCKTYPE LOCK_ONLYONCE;
tagLOCKTYPE LOCK_WRITE;
void __pascal __far LOGERROR(UINT err, void far *lpInfo);
void __pascal __far LOGPARAMERROR(UINT err, FARPROC lpfn, void far *param);
MACRO_LOGPIXELSX LOGPIXELSX;
MACRO_LOGPIXELSY LOGPIXELSY;
MACRO_LPDFNULL LPDFNULL;
BOOL __pascal __far LPTODP(HDC, POINT far *, int);
MACRO_LPTR LPTR;
MACRO_RESETDEV LPTx;
LPSTR __pascal __far LSTRCAT(LPSTR, LPCSTR);
int __pascal __far LSTRCMP(LPCSTR, LPCSTR);
int __pascal __far LSTRCMPI(LPCSTR, LPCSTR);
LPSTR __pascal __far LSTRCPY(LPSTR, LPCSTR);
LPSTR __pascal __far LSTRCPYN(LPSTR, LPCSTR, int);
int __pascal __far LSTRLEN(LPCSTR);
MACRO_BRUSH LTGRAY_BRUSH;
MACRO_LT LT_FREE;
MACRO_LT LT_GDI_BITMAP;
MACRO_LT LT_GDI_BRUSH;
MACRO_LT LT_GDI_DC;
MACRO_LT LT_GDI_DISABLED_DC;
MACRO_LT LT_GDI_FONT;
MACRO_LT LT_GDI_MAX;
MACRO_LT LT_GDI_METADC;
MACRO_LT LT_GDI_METAFILE;
MACRO_LT LT_GDI_PALETTE;
MACRO_LT LT_GDI_PEN;
MACRO_LT LT_GDI_RGN;
MACRO_LT LT_NORMAL;
MACRO_LT LT_USER_ATOMS;
MACRO_LT LT_USER_BWL;
MACRO_LT LT_USER_CBOX;
MACRO_LT LT_USER_CHECKPOINT;
MACRO_LT LT_USER_CLASS;
MACRO_LT LT_USER_CLIP;
MACRO_LT LT_USER_DCE;
MACRO_LT LT_USER_ED;
MACRO_LT LT_USER_HANDLETABLE;
MACRO_LT LT_USER_HOOKLIST;
MACRO_LT LT_USER_HOTKEYLIST;
MACRO_LT LT_USER_LBIV;
MACRO_LT LT_USER_LOCKINPUTSTATE;
MACRO_LT LT_USER_MAX;
MACRO_LT LT_USER_MENU;
MACRO_LT LT_USER_MISC;
MACRO_LT LT_USER_MWP;
MACRO_LT LT_USER_OWNERDRAW;
MACRO_LT LT_USER_PALETTE;
MACRO_LT LT_USER_POPUPMENU;
MACRO_LT LT_USER_PROP;
MACRO_LT LT_USER_SPB;
MACRO_LT LT_USER_STRING;
MACRO_LT LT_USER_USERSEEUSERDOALLOC;
MACRO_LT LT_USER_WND;
void __pascal __far LZCLOSE(HFILE);
__int32 __pascal __far LZCOPY(HFILE, HFILE);
void __pascal __far LZDONE();
MACRO_LZERROR LZERROR_BADINHANDLE;
MACRO_LZERROR LZERROR_BADOUTHANDLE;
MACRO_LZERROR LZERROR_BADVALUE;
MACRO_LZERROR LZERROR_GLOBALLOC;
MACRO_LZERROR LZERROR_GLOBLOCK;
MACRO_LZERROR LZERROR_READ;
MACRO_LZERROR LZERROR_UNKNOWNALG;
MACRO_LZERROR LZERROR_WRITE;
HFILE __pascal __far LZINIT(HFILE);
HFILE __pascal __far LZOPENFILE(LPCSTR, OFSTRUCT far *, UINT);
int __pascal __far LZREAD(HFILE, void far *, int);
__int32 __pascal __far LZSEEK(HFILE, __int32, int);
int __pascal __far LZSTART();
FARPROC __pascal __far MAKEPROCINSTANCE(FARPROC, HINSTANCE);
void __pascal __far MAPDIALOGRECT(HWND, RECT far *);
ULONG __pascal __far MAPIADDRESS(LHANDLE lhSession, ULONG ulUIParam, LPSTR plszCaption, ULONG nEditFields, LPSTR lpszLabels, ULONG nRecips, lpMapiRecipDesc lpRecips, FLAGS flFlags, ULONG ulReserved, LPULONG lpnNewRecips, lpMapiRecipDesc far *lppNewRecips);
ULONG __pascal __far MAPIDELETEMAIL(LHANDLE lhSession, ULONG ulUIParam, LPSTR lpszMessageID, FLAGS flFlags, ULONG ulReserved);
ULONG __pascal __far MAPIDETAILS(LHANDLE lhSession, ULONG ulUIParam, lpMapiRecipDesc lpRecip, FLAGS flFlags, ULONG ulReserved);
ULONG __pascal __far MAPIFINDNEXT(LHANDLE lhSession, ULONG ulUIParam, LPSTR lpszMessageType, LPSTR lpszSeedMessageID, FLAGS flFlags, ULONG ulReserved, LPSTR lpszMessageID);
ULONG __pascal __far MAPIFREEBUFFER(LPVOID pv);
ULONG __pascal __far MAPILOGOFF(LHANDLE lhSession, ULONG ulUIParam, FLAGS flFlags, ULONG ulReserved);
ULONG __pascal __far MAPILOGON(ULONG ulUIParam, LPSTR lpszName, LPSTR lpszPassword, FLAGS flFlags, ULONG ulReserved, LPLHANDLE lplhSession);
ULONG __pascal __far MAPIREADMAIL(LHANDLE lhSession, ULONG ulUIParam, LPSTR lpszMessageID, FLAGS flFlags, ULONG ulReserved, lpMapiMessage far *lppMessageOut);
ULONG __pascal __far MAPIRESOLVENAME(LHANDLE lhSession, ULONG ulUIParam, LPSTR lpszName, FLAGS flFlags, ULONG ulReserved, lpMapiRecipDesc far *lppRecip);
ULONG __pascal __far MAPISAVEMAIL(LHANDLE lhSession, ULONG ulUIParam, lpMapiMessage pMessage, FLAGS flFlags, ULONG ulReserved, LPSTR lpszMessageID);
ULONG __pascal __far MAPISENDDOCUMENTS(ULONG ulUIParam, LPSTR lpszDelimChar, LPSTR lpszFilePaths, LPSTR lpszFileNames, ULONG ulReserved);
ULONG __pascal __far MAPISENDMAIL(LHANDLE lhSession, ULONG ulUIParam, lpMapiMessage lpMessage, FLAGS flFlags, ULONG ulReserved);
MACRO_MAPI MAPI_AB_NOMODIFY;
MACRO_MAPI MAPI_BCC;
MACRO_MAPI MAPI_BODY_AS_FILE;
MACRO_MAPI MAPI_CC;
MACRO_MAPI MAPI_DIALOG;
MACRO_MAPI MAPI_ENVELOPE_ONLY;
MACRO_MAPI_USER MAPI_E_ACCESS_DENIED;
MACRO_MAPI_USER MAPI_E_AMBIGUOUS_RECIPIENT;
MACRO_MAPI_USER MAPI_E_ATTACHMENT_NOT_FOUND;
MACRO_MAPI_USER MAPI_E_ATTACHMENT_OPEN_FAILURE;
MACRO_MAPI_USER MAPI_E_ATTACHMENT_WRITE_FAILURE;
MACRO_MAPI_USER MAPI_E_BAD_RECIPTYPE;
MACRO_MAPI_USER MAPI_E_DISK_FULL;
MACRO_MAPI_USER MAPI_E_FAILURE;
MACRO_MAPI_USER MAPI_E_INSUFFICIENT_MEMORY;
MACRO_MAPI_USER MAPI_E_INVALID_EDITFIELDS;
MACRO_MAPI_USER MAPI_E_INVALID_MESSAGE;
MACRO_MAPI_USER MAPI_E_INVALID_RECIPS;
MACRO_MAPI_USER MAPI_E_INVALID_SESSION;
MACRO_MAPI_USER MAPI_E_LOGIN_FAILURE;
MACRO_MAPI_USER MAPI_E_MESSAGE_IN_USE;
MACRO_MAPI_USER MAPI_E_NETWORK_FAILURE;
MACRO_MAPI_USER MAPI_E_NOT_SUPPORTED;
MACRO_MAPI_USER MAPI_E_NO_MESSAGES;
MACRO_MAPI_USER MAPI_E_TEXT_TOO_LARGE;
MACRO_MAPI_USER MAPI_E_TOO_MANY_FILES;
MACRO_MAPI_USER MAPI_E_TOO_MANY_RECIPIENTS;
MACRO_MAPI_USER MAPI_E_TOO_MANY_SESSIONS;
MACRO_MAPI_USER MAPI_E_TYPE_NOT_SUPPORTED;
MACRO_MAPI_USER MAPI_E_UNKNOWN_RECIPIENT;
MACRO_MAPI MAPI_FORCE_DOWNLOAD;
MACRO_MAPI MAPI_GUARANTEE_FIFO;
MACRO_MAPI MAPI_LOGON_UI;
MACRO_MAPI MAPI_NEW_SESSION;
MACRO_MAPI MAPI_OLE;
MACRO_MAPI MAPI_OLE_STATIC;
MACRO_MAPI MAPI_ORIG;
MACRO_MAPI MAPI_PEEK;
MACRO_MAPI MAPI_RECEIPT_REQUESTED;
MACRO_MAPI MAPI_SENT;
MACRO_MAPI MAPI_SUPPRESS_ATTACH;
MACRO_MAPI MAPI_TO;
MACRO_MAPI MAPI_UNREAD;
MACRO_MAPI MAPI_UNREAD_ONLY;
MACRO_MAPI_USER MAPI_USER_ABORT;
UINT __pascal __far MAPVIRTUALKEY(UINT, UINT);
void __pascal __far MAPWINDOWPOINTS(HWND hwndFrom, HWND hwndTo, POINT far *lppt, UINT cpt);
MACRO_MAP MAP_GESTOGES;
MACRO_MAP MAP_GESTOVKEYS;
MACRO_MARKPARITY MARKPARITY;
MACRO_MARSHALINTERFACE MARSHALINTERFACE_MIN;
MACRO_MARSHAL MARSHAL_E_FIRST;
MACRO_MARSHAL MARSHAL_E_LAST;
MACRO_MARSHAL MARSHAL_S_FIRST;
MACRO_MARSHAL MARSHAL_S_LAST;
MACRO_MAXDICTIONARIES MAXDICTIONARIES;
MACRO_MAXPNAMELEN MAXERRORLENGTH;
MACRO_MAXFILELEN MAXFILELEN;
MACRO_MAXGETHOSTSTRUCT MAXGETHOSTSTRUCT;
MACRO_MAXHOTSPOT MAXHOTSPOT;
MACRO_MAXOEMDATAWORDS MAXOEMDATAWORDS;
MACRO_MAXPNAMELEN MAXPNAMELEN;
MACRO_MAX_DATA MAX_CLASSNAME;
MACRO_MAX_DATA MAX_DATA;
MACRO_MAX_DATA MAX_MODULE_NAME;
MACRO_MAX MAX_MONITORS;
MACRO_MAX_DATA MAX_PATH;
MACRO_MA MA_ACTIVATE;
MACRO_MA MA_ACTIVATEANDEAT;
MACRO_MA MA_NOACTIVATE;
MACRO_MA MA_NOACTIVATEANDEAT;
MACRO_MB MB_ABORTRETRYIGNORE;
MACRO_MB MB_APPLMODAL;
MACRO_MB MB_DEFBUTTON1;
MACRO_MB MB_DEFBUTTON2;
MACRO_MB MB_DEFBUTTON3;
MACRO_MB MB_DEFMASK;
MACRO_MB MB_ICONASTERISK;
MACRO_MB MB_ICONEXCLAMATION;
MACRO_MB MB_ICONHAND;
MACRO_MB MB_ICONINFORMATION;
MACRO_MB MB_ICONMASK;
MACRO_MB MB_ICONQUESTION;
MACRO_MB MB_ICONSTOP;
MACRO_MB MB_NOFOCUS;
MACRO_MB MB_OK;
MACRO_MB MB_OKCANCEL;
MACRO_MB MB_RETRYCANCEL;
MACRO_MB MB_SYSTEMMODAL;
MACRO_MB MB_TASKMODAL;
MACRO_MB MB_TYPEMASK;
MACRO_MB MB_YESNO;
MACRO_MB MB_YESNOCANCEL;
MACRO_MCIERR MCIERR_BAD_CONSTANT;
MACRO_MCIERR MCIERR_BAD_INTEGER;
MACRO_MCIERR MCIERR_BAD_TIME_FORMAT;
MACRO_BASE MCIERR_BASE;
MACRO_MCIERR MCIERR_CANNOT_LOAD_DRIVER;
MACRO_MCIERR MCIERR_CANNOT_USE_ALL;
MACRO_MCIERR MCIERR_CREATEWINDOW;
MACRO_MCIERR MCIERR_CUSTOM_DRIVER_BASE;
MACRO_MCIERR MCIERR_DEVICE_LENGTH;
MACRO_MCIERR MCIERR_DEVICE_LOCKED;
MACRO_MCIERR MCIERR_DEVICE_NOT_INSTALLED;
MACRO_MCIERR MCIERR_DEVICE_NOT_READY;
MACRO_MCIERR MCIERR_DEVICE_OPEN;
MACRO_MCIERR MCIERR_DEVICE_ORD_LENGTH;
MACRO_MCIERR MCIERR_DEVICE_TYPE_REQUIRED;
MACRO_MCIERR MCIERR_DRIVER;
MACRO_MCIERR MCIERR_DRIVER_INTERNAL;
MACRO_MCIERR MCIERR_DUPLICATE_ALIAS;
MACRO_MCIERR MCIERR_DUPLICATE_FLAGS;
MACRO_MCIERR MCIERR_EXTENSION_NOT_FOUND;
MACRO_MCIERR MCIERR_EXTRA_CHARACTERS;
MACRO_MCIERR MCIERR_FILENAME_REQUIRED;
MACRO_MCIERR MCIERR_FILE_NOT_FOUND;
MACRO_MCIERR MCIERR_FILE_NOT_SAVED;
MACRO_MCIERR MCIERR_FILE_READ;
MACRO_MCIERR MCIERR_FILE_WRITE;
MACRO_MCIERR MCIERR_FLAGS_NOT_COMPATIBLE;
MACRO_MCIERR MCIERR_GET_CD;
MACRO_MCIERR MCIERR_HARDWARE;
MACRO_MCIERR MCIERR_ILLEGAL_FOR_AUTO_OPEN;
MACRO_MCIERR MCIERR_INTERNAL;
MACRO_MCIERR MCIERR_INVALID_DEVICE_ID;
MACRO_MCIERR MCIERR_INVALID_DEVICE_NAME;
MACRO_MCIERR MCIERR_INVALID_FILE;
MACRO_MCIERR MCIERR_MISSING_COMMAND_STRING;
MACRO_MCIERR MCIERR_MISSING_DEVICE_NAME;
MACRO_MCIERR MCIERR_MISSING_PARAMETER;
MACRO_MCIERR MCIERR_MISSING_STRING_ARGUMENT;
MACRO_MCIERR MCIERR_MULTIPLE;
MACRO_MCIERR MCIERR_MUST_USE_SHAREABLE;
MACRO_MCIERR MCIERR_NEW_REQUIRES_ALIAS;
MACRO_MCIERR MCIERR_NONAPPLICABLE_FUNCTION;
MACRO_MCIERR MCIERR_NOTIFY_ON_AUTO_OPEN;
MACRO_MCIERR MCIERR_NO_CLOSING_QUOTE;
MACRO_MCIERR MCIERR_NO_ELEMENT_ALLOWED;
MACRO_MCIERR MCIERR_NO_INTEGER;
MACRO_MCIERR MCIERR_NO_WINDOW;
MACRO_MCIERR MCIERR_NULL_PARAMETER_BLOCK;
MACRO_MCIERR MCIERR_OUTOFRANGE;
MACRO_MCIERR MCIERR_OUT_OF_MEMORY;
MACRO_MCIERR MCIERR_PARAM_OVERFLOW;
MACRO_MCIERR MCIERR_PARSER_INTERNAL;
MACRO_MCIERR MCIERR_SEQ_DIV_INCOMPATIBLE;
MACRO_MCIERR MCIERR_SEQ_NOMIDIPRESENT;
MACRO_MCIERR MCIERR_SEQ_PORTUNSPECIFIED;
MACRO_MCIERR MCIERR_SEQ_PORT_INUSE;
MACRO_MCIERR MCIERR_SEQ_PORT_MAPNODEVICE;
MACRO_MCIERR MCIERR_SEQ_PORT_MISCERROR;
MACRO_MCIERR MCIERR_SEQ_PORT_NONEXISTENT;
MACRO_MCIERR MCIERR_SEQ_TIMER;
MACRO_MCIERR MCIERR_SET_CD;
MACRO_MCIERR MCIERR_SET_DRIVE;
MACRO_MCIERR MCIERR_UNNAMED_RESOURCE;
MACRO_MCIERR MCIERR_UNRECOGNIZED_COMMAND;
MACRO_MCIERR MCIERR_UNRECOGNIZED_KEYWORD;
MACRO_MCIERR MCIERR_UNSUPPORTED_FUNCTION;
MACRO_MCIERR MCIERR_WAVE_INPUTSINUSE;
MACRO_MCIERR MCIERR_WAVE_INPUTSUNSUITABLE;
MACRO_MCIERR MCIERR_WAVE_INPUTUNSPECIFIED;
MACRO_MCIERR MCIERR_WAVE_OUTPUTSINUSE;
MACRO_MCIERR MCIERR_WAVE_OUTPUTSUNSUITABLE;
MACRO_MCIERR MCIERR_WAVE_OUTPUTUNSPECIFIED;
MACRO_MCIERR MCIERR_WAVE_SETINPUTINUSE;
MACRO_MCIERR MCIERR_WAVE_SETINPUTUNSUITABLE;
MACRO_MCIERR MCIERR_WAVE_SETOUTPUTINUSE;
MACRO_MCIERR MCIERR_WAVE_SETOUTPUTUNSUITABLE;
HTASK __pascal __far MCIGETCREATORTASK(UINT uDeviceID);
UINT __pascal __far MCIGETDEVICEID(LPCSTR lpstrName);
UINT __pascal __far MCIGETDEVICEIDFROMELEMENTID(DWORD dwElementID, LPCSTR lpstrType);
BOOL __pascal __far MCIGETERRORSTRING(DWORD wError, LPSTR lpstrBuffer, UINT uLength);
YIELDPROC __pascal __far MCIGETYIELDPROC(UINT uDeviceID, DWORD far *lpdwYieldData);
DWORD __pascal __far MCISENDCOMMAND(UINT uDeviceID, UINT uMessage, DWORD dwParam1, DWORD dwParam2);
DWORD __pascal __far MCISENDSTRING(LPCSTR lpstrCommand, LPSTR lpstrReturnString, UINT uReturnLength, HWND hwndCallback);
BOOL __pascal __far MCISETYIELDPROC(UINT uDeviceID, YIELDPROC fpYieldProc, DWORD dwYieldData);
MACRO_MCI_OPEN MCI_ALL_DEVICE_ID;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_CAN_REVERSE;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_CAN_STRETCH;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_FAST_RATE;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_MAX_WINDOWS;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_NORMAL_RATE;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_PALETTES;
MACRO_MCI_OPEN MCI_ANIM_GETDEVCAPS_SLOW_RATE;
MACRO_MCI_OPEN MCI_ANIM_INFO_TEXT;
MACRO_MCI_OPEN MCI_ANIM_OPEN_NOSTATIC;
MACRO_MCI_OPEN MCI_ANIM_OPEN_PARENT;
MACRO_MCI_OPEN MCI_ANIM_OPEN_WS;
MACRO_MCI_OPEN MCI_ANIM_PLAY_FAST;
MACRO_MCI_OPEN MCI_ANIM_PLAY_REVERSE;
MACRO_MCI_OPEN MCI_ANIM_PLAY_SCAN;
MACRO_MCI_OPEN MCI_ANIM_PLAY_SLOW;
MACRO_MCI_OPEN MCI_ANIM_PLAY_SPEED;
MACRO_MCI_OPEN MCI_ANIM_PUT_DESTINATION;
MACRO_MCI_OPEN MCI_ANIM_PUT_SOURCE;
MACRO_MCI_OPEN MCI_ANIM_REALIZE_BKGD;
MACRO_MCI_OPEN MCI_ANIM_REALIZE_NORM;
MACRO_MCI_OPEN MCI_ANIM_RECT;
MACRO_MCI_OPEN MCI_ANIM_STATUS_FORWARD;
MACRO_MCI_OPEN MCI_ANIM_STATUS_HPAL;
MACRO_MCI_OPEN MCI_ANIM_STATUS_HWND;
MACRO_MCI_OPEN MCI_ANIM_STATUS_SPEED;
MACRO_MCI_OPEN MCI_ANIM_STATUS_STRETCH;
MACRO_MCI_OPEN MCI_ANIM_STEP_FRAMES;
MACRO_MCI_OPEN MCI_ANIM_STEP_REVERSE;
MACRO_MCI_OPEN MCI_ANIM_UPDATE_HDC;
MACRO_MCI_OPEN MCI_ANIM_WHERE_DESTINATION;
MACRO_MCI_OPEN MCI_ANIM_WHERE_SOURCE;
MACRO_MCI_OPEN MCI_ANIM_WINDOW_DEFAULT;
MACRO_MCI_OPEN MCI_ANIM_WINDOW_DISABLE_STRETCH;
MACRO_MCI_OPEN MCI_ANIM_WINDOW_ENABLE_STRETCH;
MACRO_MCI_OPEN MCI_ANIM_WINDOW_HWND;
MACRO_MCI_OPEN MCI_ANIM_WINDOW_STATE;
MACRO_MCI_OPEN MCI_ANIM_WINDOW_TEXT;
MACRO_MCI_OPEN MCI_BREAK;
MACRO_MCI_OPEN MCI_BREAK_HWND;
MACRO_MCI_OPEN MCI_BREAK_KEY;
MACRO_MCI_OPEN MCI_BREAK_OFF;
MACRO_MCI MCI_CD_OFFSET;
MACRO_MCI_OPEN MCI_CLOSE;
MACRO_MCI_OPEN MCI_COPY;
MACRO_MCI_OPEN MCI_CUE;
MACRO_MCI_OPEN MCI_CUT;
MACRO_MCI_OPEN MCI_DELETE;
MACRO_MCI_OPEN MCI_DEVTYPE_ANIMATION;
MACRO_MCI_OPEN MCI_DEVTYPE_CD_AUDIO;
MACRO_MCI_OPEN MCI_DEVTYPE_DAT;
MACRO_MCI_OPEN MCI_DEVTYPE_DIGITAL_VIDEO;
MACRO_MCI_OPEN MCI_DEVTYPE_FIRST;
MACRO_MCI_OPEN MCI_DEVTYPE_LAST;
MACRO_MCI_OPEN MCI_DEVTYPE_OTHER;
MACRO_MCI_OPEN MCI_DEVTYPE_OVERLAY;
MACRO_MCI_OPEN MCI_DEVTYPE_SCANNER;
MACRO_MCI_OPEN MCI_DEVTYPE_SEQUENCER;
MACRO_MCI_OPEN MCI_DEVTYPE_VCR;
MACRO_MCI_OPEN MCI_DEVTYPE_VIDEODISC;
MACRO_MCI_OPEN MCI_DEVTYPE_WAVEFORM_AUDIO;
MACRO_MCI_OPEN MCI_ESCAPE;
MACRO_MCI_OPEN MCI_FORMAT_BYTES;
MACRO_MCI_OPEN MCI_FORMAT_FRAMES;
MACRO_MCI_OPEN MCI_FORMAT_HMS;
MACRO_MCI_OPEN MCI_FORMAT_MILLISECONDS;
MACRO_MCI_OPEN MCI_FORMAT_MSF;
MACRO_MCI_OPEN MCI_FORMAT_SAMPLES;
MACRO_MCI_OPEN MCI_FORMAT_SMPTE_24;
MACRO_MCI_OPEN MCI_FORMAT_SMPTE_25;
MACRO_MCI_OPEN MCI_FORMAT_SMPTE_30;
MACRO_MCI_OPEN MCI_FORMAT_SMPTE_30DROP;
MACRO_MCI_OPEN MCI_FORMAT_TMSF;
MACRO_MCI_OPEN MCI_FREEZE;
MACRO_MCI_OPEN MCI_FROM;
MACRO_MCI_OPEN MCI_GETDEVCAPS;
MACRO_MCI_OPEN MCI_GETDEVCAPS_CAN_EJECT;
MACRO_MCI_OPEN MCI_GETDEVCAPS_CAN_PLAY;
MACRO_MCI_OPEN MCI_GETDEVCAPS_CAN_RECORD;
MACRO_MCI_OPEN MCI_GETDEVCAPS_CAN_SAVE;
MACRO_MCI_OPEN MCI_GETDEVCAPS_COMPOUND_DEVICE;
MACRO_MCI_OPEN MCI_GETDEVCAPS_DEVICE_TYPE;
MACRO_MCI_OPEN MCI_GETDEVCAPS_HAS_AUDIO;
MACRO_MCI_OPEN MCI_GETDEVCAPS_HAS_VIDEO;
MACRO_MCI_OPEN MCI_GETDEVCAPS_ITEM;
MACRO_MCI_OPEN MCI_GETDEVCAPS_USES_FILES;
MACRO_MCI_OPEN MCI_INFO;
MACRO_MCI_OPEN MCI_INFO_FILE;
MACRO_MCI_OPEN MCI_INFO_PRODUCT;
MACRO_MCI_OPEN MCI_LOAD;
MACRO_MCI_OPEN MCI_LOAD_FILE;
MACRO_MCI_OPEN MCI_MODE_NOT_READY;
MACRO_MCI_OPEN MCI_MODE_OPEN;
MACRO_MCI_OPEN MCI_MODE_PAUSE;
MACRO_MCI_OPEN MCI_MODE_PLAY;
MACRO_MCI_OPEN MCI_MODE_RECORD;
MACRO_MCI_OPEN MCI_MODE_SEEK;
MACRO_MCI_OPEN MCI_MODE_STOP;
MACRO_MCI_OPEN MCI_NOTIFY;
MACRO_MCI_OPEN MCI_NOTIFY_ABORTED;
MACRO_MCI_OPEN MCI_NOTIFY_FAILURE;
MACRO_MCI_OPEN MCI_NOTIFY_SUCCESSFUL;
MACRO_MCI_OPEN MCI_NOTIFY_SUPERSEDED;
MACRO_MCI_OPEN MCI_OPEN;
MACRO_MCI_OPEN MCI_OPEN_ALIAS;
MACRO_MCI_OPEN MCI_OPEN_ELEMENT;
MACRO_MCI_OPEN MCI_OPEN_ELEMENT_ID;
MACRO_MCI_OPEN MCI_OPEN_SHAREABLE;
MACRO_MCI_OPEN MCI_OPEN_TYPE;
MACRO_MCI_OPEN MCI_OPEN_TYPE_ID;
MACRO_MCI_OPEN MCI_OVLY_GETDEVCAPS_CAN_FREEZE;
MACRO_MCI_OPEN MCI_OVLY_GETDEVCAPS_CAN_STRETCH;
MACRO_MCI_OPEN MCI_OVLY_GETDEVCAPS_MAX_WINDOWS;
MACRO_MCI_OPEN MCI_OVLY_INFO_TEXT;
MACRO_MCI_OPEN MCI_OVLY_OPEN_PARENT;
MACRO_MCI_OPEN MCI_OVLY_OPEN_WS;
MACRO_MCI_OPEN MCI_OVLY_PUT_DESTINATION;
MACRO_MCI_OPEN MCI_OVLY_PUT_FRAME;
MACRO_MCI_OPEN MCI_OVLY_PUT_SOURCE;
MACRO_MCI_OPEN MCI_OVLY_PUT_VIDEO;
MACRO_MCI_OPEN MCI_OVLY_RECT;
MACRO_MCI_OPEN MCI_OVLY_STATUS_HWND;
MACRO_MCI_OPEN MCI_OVLY_STATUS_STRETCH;
MACRO_MCI_OPEN MCI_OVLY_WHERE_DESTINATION;
MACRO_MCI_OPEN MCI_OVLY_WHERE_FRAME;
MACRO_MCI_OPEN MCI_OVLY_WHERE_SOURCE;
MACRO_MCI_OPEN MCI_OVLY_WHERE_VIDEO;
MACRO_MCI_OPEN MCI_OVLY_WINDOW_DEFAULT;
MACRO_MCI_OPEN MCI_OVLY_WINDOW_DISABLE_STRETCH;
MACRO_MCI_OPEN MCI_OVLY_WINDOW_ENABLE_STRETCH;
MACRO_MCI_OPEN MCI_OVLY_WINDOW_HWND;
MACRO_MCI_OPEN MCI_OVLY_WINDOW_STATE;
MACRO_MCI_OPEN MCI_OVLY_WINDOW_TEXT;
MACRO_MCI_OPEN MCI_PASTE;
MACRO_MCI_OPEN MCI_PAUSE;
MACRO_MCI_OPEN MCI_PLAY;
MACRO_MCI_OPEN MCI_PUT;
MACRO_MCI_OPEN MCI_REALIZE;
MACRO_MCI_OPEN MCI_RECORD;
MACRO_MCI_OPEN MCI_RECORD_INSERT;
MACRO_MCI_OPEN MCI_RECORD_OVERWRITE;
MACRO_MCI_OPEN MCI_RESUME;
MACRO_MCI_OPEN MCI_SAVE;
MACRO_MCI_OPEN MCI_SAVE_FILE;
MACRO_MCI_OPEN MCI_SEEK;
MACRO_MCI_OPEN MCI_SEEK_TO_END;
MACRO_MCI_OPEN MCI_SEEK_TO_START;
MACRO_MCI_OPEN MCI_SEQ_DIV_PPQN;
MACRO_MCI_OPEN MCI_SEQ_DIV_SMPTE_24;
MACRO_MCI_OPEN MCI_SEQ_DIV_SMPTE_25;
MACRO_MCI_OPEN MCI_SEQ_DIV_SMPTE_30;
MACRO_MCI_OPEN MCI_SEQ_DIV_SMPTE_30DROP;
MACRO_MCI_OPEN MCI_SEQ_FILE;
MACRO_MCI_OPEN MCI_SEQ_FORMAT_SONGPTR;
MACRO_MCI_OPEN MCI_SEQ_MIDI;
MACRO_MCI_OPEN MCI_SEQ_NONE;
MACRO_MCI MCI_SEQ_OFFSET;
MACRO_MCI_OPEN MCI_SEQ_SET_MASTER;
MACRO_MCI_OPEN MCI_SEQ_SET_OFFSET;
MACRO_MCI_OPEN MCI_SEQ_SET_PORT;
MACRO_MCI_OPEN MCI_SEQ_SET_SLAVE;
MACRO_MCI_OPEN MCI_SEQ_SET_TEMPO;
MACRO_MCI_OPEN MCI_SEQ_SMPTE;
MACRO_MCI_OPEN MCI_SEQ_STATUS_DIVTYPE;
MACRO_MCI_OPEN MCI_SEQ_STATUS_MASTER;
MACRO_MCI_OPEN MCI_SEQ_STATUS_OFFSET;
MACRO_MCI_OPEN MCI_SEQ_STATUS_PORT;
MACRO_MCI_OPEN MCI_SEQ_STATUS_SLAVE;
MACRO_MCI_OPEN MCI_SEQ_STATUS_TEMPO;
MACRO_MCI_OPEN MCI_SET;
MACRO_MCI_OPEN MCI_SET_AUDIO;
MACRO_MCI_OPEN MCI_SET_AUDIO_ALL;
MACRO_MCI_OPEN MCI_SET_AUDIO_LEFT;
MACRO_MCI_OPEN MCI_SET_AUDIO_RIGHT;
MACRO_MCI_OPEN MCI_SET_DOOR_CLOSED;
MACRO_MCI_OPEN MCI_SET_DOOR_OPEN;
MACRO_MCI_OPEN MCI_SET_OFF;
MACRO_MCI_OPEN MCI_SET_ON;
MACRO_MCI_OPEN MCI_SET_TIME_FORMAT;
MACRO_MCI_OPEN MCI_SET_VIDEO;
MACRO_MCI_OPEN MCI_SOUND;
MACRO_MCI_OPEN MCI_SOUND_NAME;
MACRO_MCI_OPEN MCI_SPIN;
MACRO_MCI_OPEN MCI_STATUS;
MACRO_MCI_OPEN MCI_STATUS_CURRENT_TRACK;
MACRO_MCI_OPEN MCI_STATUS_ITEM;
MACRO_MCI_OPEN MCI_STATUS_LENGTH;
MACRO_MCI_OPEN MCI_STATUS_MEDIA_PRESENT;
MACRO_MCI_OPEN MCI_STATUS_MODE;
MACRO_MCI_OPEN MCI_STATUS_NUMBER_OF_TRACKS;
MACRO_MCI_OPEN MCI_STATUS_POSITION;
MACRO_MCI_OPEN MCI_STATUS_READY;
MACRO_MCI_OPEN MCI_STATUS_START;
MACRO_MCI_OPEN MCI_STATUS_TIME_FORMAT;
MACRO_MCI_OPEN MCI_STEP;
MACRO_MCI_OPEN MCI_STOP;
MACRO_MCI MCI_STRING_OFFSET;
MACRO_MCI_OPEN MCI_SYSINFO;
MACRO_MCI_OPEN MCI_SYSINFO_INSTALLNAME;
MACRO_MCI_OPEN MCI_SYSINFO_NAME;
MACRO_MCI_OPEN MCI_SYSINFO_OPEN;
MACRO_MCI_OPEN MCI_SYSINFO_QUANTITY;
MACRO_MCI_OPEN MCI_TO;
MACRO_MCI_OPEN MCI_TRACK;
MACRO_MCI_OPEN MCI_UNFREEZE;
MACRO_MCI_OPEN MCI_UPDATE;
MACRO_MCI_OPEN MCI_USER_MESSAGES;
MACRO_MCI_OPEN MCI_VD_ESCAPE_STRING;
MACRO_MCI_OPEN MCI_VD_FORMAT_TRACK;
MACRO_MCI_OPEN MCI_VD_GETDEVCAPS_CAN_REVERSE;
MACRO_MCI_OPEN MCI_VD_GETDEVCAPS_CAV;
MACRO_MCI_OPEN MCI_VD_GETDEVCAPS_CLV;
MACRO_MCI_OPEN MCI_VD_GETDEVCAPS_FAST_RATE;
MACRO_MCI_OPEN MCI_VD_GETDEVCAPS_NORMAL_RATE;
MACRO_MCI_OPEN MCI_VD_GETDEVCAPS_SLOW_RATE;
MACRO_MCI_OPEN MCI_VD_MEDIA_CAV;
MACRO_MCI_OPEN MCI_VD_MEDIA_CLV;
MACRO_MCI_OPEN MCI_VD_MEDIA_OTHER;
MACRO_MCI_OPEN MCI_VD_MODE_PARK;
MACRO_MCI MCI_VD_OFFSET;
MACRO_MCI_OPEN MCI_VD_PLAY_FAST;
MACRO_MCI_OPEN MCI_VD_PLAY_REVERSE;
MACRO_MCI_OPEN MCI_VD_PLAY_SCAN;
MACRO_MCI_OPEN MCI_VD_PLAY_SLOW;
MACRO_MCI_OPEN MCI_VD_PLAY_SPEED;
MACRO_MCI_OPEN MCI_VD_SEEK_REVERSE;
MACRO_MCI_OPEN MCI_VD_SPIN_DOWN;
MACRO_MCI_OPEN MCI_VD_SPIN_UP;
MACRO_MCI_OPEN MCI_VD_STATUS_DISC_SIZE;
MACRO_MCI_OPEN MCI_VD_STATUS_FORWARD;
MACRO_MCI_OPEN MCI_VD_STATUS_MEDIA_TYPE;
MACRO_MCI_OPEN MCI_VD_STATUS_SIDE;
MACRO_MCI_OPEN MCI_VD_STATUS_SPEED;
MACRO_MCI_OPEN MCI_VD_STEP_FRAMES;
MACRO_MCI_OPEN MCI_VD_STEP_REVERSE;
MACRO_MCI_OPEN MCI_WAIT;
MACRO_MCI_OPEN MCI_WAVE_GETDEVCAPS_INPUTS;
MACRO_MCI_OPEN MCI_WAVE_GETDEVCAPS_OUTPUTS;
MACRO_MCI_OPEN MCI_WAVE_INPUT;
MACRO_MCI MCI_WAVE_OFFSET;
MACRO_MCI_OPEN MCI_WAVE_OPEN_BUFFER;
MACRO_MCI_OPEN MCI_WAVE_OUTPUT;
MACRO_MCI_OPEN MCI_WAVE_SET_ANYINPUT;
MACRO_MCI_OPEN MCI_WAVE_SET_ANYOUTPUT;
MACRO_MCI_OPEN MCI_WAVE_SET_AVGBYTESPERSEC;
MACRO_MCI_OPEN MCI_WAVE_SET_BITSPERSAMPLE;
MACRO_MCI_OPEN MCI_WAVE_SET_BLOCKALIGN;
MACRO_MCI_OPEN MCI_WAVE_SET_CHANNELS;
MACRO_MCI_OPEN MCI_WAVE_SET_FORMATTAG;
MACRO_MCI_OPEN MCI_WAVE_SET_SAMPLESPERSEC;
MACRO_MCI_OPEN MCI_WAVE_STATUS_AVGBYTESPERSEC;
MACRO_MCI_OPEN MCI_WAVE_STATUS_BITSPERSAMPLE;
MACRO_MCI_OPEN MCI_WAVE_STATUS_BLOCKALIGN;
MACRO_MCI_OPEN MCI_WAVE_STATUS_CHANNELS;
MACRO_MCI_OPEN MCI_WAVE_STATUS_FORMATTAG;
MACRO_MCI_OPEN MCI_WAVE_STATUS_LEVEL;
MACRO_MCI_OPEN MCI_WAVE_STATUS_SAMPLESPERSEC;
MACRO_MCI_OPEN MCI_WHERE;
MACRO_MCI_OPEN MCI_WINDOW;
MACRO_MDIS MDIS_ALLCHILDSTYLES;
MACRO_MDITILE MDITILE_HORIZONTAL;
MACRO_MDITILE MDITILE_SKIPDISABLED;
MACRO_MDITILE MDITILE_VERTICAL;
tagMEMCTX MEMCTX_SAME;
tagMEMCTX MEMCTX_SHARED;
tagMEMCTX MEMCTX_TASK;
tagMEMCTX MEMCTX_UNKNOWN;
BOOL __pascal __far MEMMANINFO(MEMMANINFO far *lpEnhMode);
DWORD __pascal __far MEMORYREAD(WORD wSel, DWORD dwOffset, void far *lpBuffer, DWORD dwcb);
DWORD __pascal __far MEMORYWRITE(WORD wSel, DWORD dwOffset, void far *lpBuffer, DWORD dwcb);
MACRO_MENU MENU_TEXT_LEN;
MACRO_MERGECOPY MERGECOPY;
MACRO_MERGEPAINT MERGEPAINT;
void __pascal __far MESSAGEBEEP(UINT);
int __pascal __far MESSAGEBOX(HWND, LPCSTR, LPCSTR, UINT);
MACRO_META META_ABORTDOC;
MACRO_META META_ANIMATEPALETTE;
MACRO_META META_ARC;
MACRO_META META_BITBLT;
MACRO_META META_CHORD;
MACRO_META META_CREATEBITMAP;
MACRO_META META_CREATEBITMAPINDIRECT;
MACRO_META META_CREATEBRUSH;
MACRO_META META_CREATEBRUSHINDIRECT;
MACRO_META META_CREATEFONTINDIRECT;
MACRO_META META_CREATEPALETTE;
MACRO_META META_CREATEPATTERNBRUSH;
MACRO_META META_CREATEPENINDIRECT;
MACRO_META META_CREATEREGION;
MACRO_META META_DELETEOBJECT;
MACRO_META META_DIBBITBLT;
MACRO_META META_DIBCREATEPATTERNBRUSH;
MACRO_META META_DIBSTRETCHBLT;
MACRO_META META_DRAWTEXT;
MACRO_META META_ELLIPSE;
MACRO_META META_ENDDOC;
MACRO_META META_ENDPAGE;
MACRO_META META_ESCAPE;
MACRO_META META_EXCLUDECLIPRECT;
MACRO_META META_EXTFLOODFILL;
MACRO_META META_EXTTEXTOUT;
MACRO_META META_FILLREGION;
MACRO_META META_FLOODFILL;
MACRO_META META_FRAMEREGION;
MACRO_META META_INTERSECTCLIPRECT;
MACRO_META META_INVERTREGION;
MACRO_META META_LINETO;
MACRO_META META_MOVETO;
MACRO_META META_OFFSETCLIPRGN;
MACRO_META META_OFFSETVIEWPORTORG;
MACRO_META META_OFFSETWINDOWORG;
MACRO_META META_PAINTREGION;
MACRO_META META_PATBLT;
MACRO_META META_PIE;
MACRO_META META_POLYGON;
MACRO_META META_POLYLINE;
MACRO_META META_POLYPOLYGON;
MACRO_META META_REALIZEPALETTE;
MACRO_META META_RECTANGLE;
MACRO_META META_RESETDC;
MACRO_META META_RESIZEPALETTE;
MACRO_META META_RESTOREDC;
MACRO_META META_ROUNDRECT;
MACRO_META META_SAVEDC;
MACRO_META META_SCALEVIEWPORTEXT;
MACRO_META META_SCALEWINDOWEXT;
MACRO_META META_SELECTCLIPREGION;
MACRO_META META_SELECTOBJECT;
MACRO_META META_SELECTPALETTE;
MACRO_META META_SETBKCOLOR;
MACRO_META META_SETBKMODE;
MACRO_META META_SETDIBTODEV;
MACRO_META META_SETMAPMODE;
MACRO_META META_SETMAPPERFLAGS;
MACRO_META META_SETPALENTRIES;
MACRO_META META_SETPIXEL;
MACRO_META META_SETPOLYFILLMODE;
MACRO_META META_SETRELABS;
MACRO_META META_SETROP2;
MACRO_META META_SETSTRETCHBLTMODE;
MACRO_META META_SETTEXTALIGN;
MACRO_META META_SETTEXTCHAREXTRA;
MACRO_META META_SETTEXTCOLOR;
MACRO_META META_SETTEXTJUSTIFICATION;
MACRO_META META_SETVIEWPORTEXT;
MACRO_META META_SETVIEWPORTORG;
MACRO_META META_SETWINDOWEXT;
MACRO_META META_SETWINDOWORG;
MACRO_META META_STARTDOC;
MACRO_META META_STARTPAGE;
MACRO_META META_STRETCHBLT;
MACRO_META META_STRETCHDIB;
MACRO_META META_TEXTOUT;
BOOL __pascal __far METRICSCALEPENDATA(HPENDATA, UINT);
MACRO_MFCOMMENT MFCOMMENT;
MACRO_MF MF_APPEND;
MACRO_MF MF_BITMAP;
MACRO_MF MF_BYCOMMAND;
MACRO_MF MF_BYPOSITION;
MACRO_MF_HSZ MF_CALLBACKS;
MACRO_MF MF_CHANGE;
MACRO_MF MF_CHECKED;
MACRO_MF_HSZ MF_CONV;
MACRO_MF MF_DELETE;
MACRO_MF MF_DISABLED;
MACRO_MF MF_ENABLED;
MACRO_MF MF_END;
MACRO_MF_HSZ MF_ERRORS;
MACRO_MF MF_GRAYED;
MACRO_MF MF_HELP;
MACRO_MF MF_HILITE;
MACRO_MF_HSZ MF_HSZ_INFO;
MACRO_MF MF_INSERT;
MACRO_MF_HSZ MF_LINKS;
MACRO_MF_HSZ MF_MASK;
MACRO_MF MF_MENUBARBREAK;
MACRO_MF MF_MENUBREAK;
MACRO_MF MF_MOUSESELECT;
MACRO_MF MF_OWNERDRAW;
MACRO_MF MF_POPUP;
MACRO_MF_HSZ MF_POSTMSGS;
MACRO_MF MF_REMOVE;
MACRO_MF_HSZ MF_SENDMSGS;
MACRO_MF MF_SEPARATOR;
MACRO_MF MF_STRING;
MACRO_MF MF_SYSMENU;
MACRO_MF MF_UNCHECKED;
MACRO_MF MF_UNHILITE;
MACRO_MF MF_USECHECKBITMAPS;
MACRO_MHDR MHDR_DONE;
MACRO_MHDR MHDR_INQUEUE;
MACRO_MHDR MHDR_PREPARED;
MACRO_MH MH_CLEANUP;
MACRO_MH MH_CREATE;
MACRO_MH MH_DELETE;
MACRO_MH MH_KEEP;
MACRO_MIDICAPS MIDICAPS_CACHE;
MACRO_MIDICAPS MIDICAPS_LRVOLUME;
MACRO_MIDICAPS MIDICAPS_VOLUME;
MACRO_BASE MIDIERR_BASE;
MACRO_MIDIERR MIDIERR_INVALIDSETUP;
MACRO_MIDIERR MIDIERR_LASTERROR;
MACRO_MIDIERR MIDIERR_NODEVICE;
MACRO_MIDIERR MIDIERR_NOMAP;
MACRO_MIDIERR MIDIERR_NOTREADY;
MACRO_MIDIERR MIDIERR_STILLPLAYING;
MACRO_MIDIERR MIDIERR_UNPREPARED;
UINT __pascal __far MIDIINADDBUFFER(HMIDIIN hMidiIn, MIDIHDR far *lpMidiInHdr, UINT uSize);
UINT __pascal __far MIDIINCLOSE(HMIDIIN hMidiIn);
UINT __pascal __far MIDIINGETDEVCAPS(UINT uDeviceID, LPMIDIINCAPS lpCaps, UINT uSize);
UINT __pascal __far MIDIINGETERRORTEXT(UINT uError, LPSTR lpText, UINT uSize);
UINT __pascal __far MIDIINGETID(HMIDIIN hMidiIn, UINT far *lpuDeviceID);
UINT __pascal __far MIDIINGETNUMDEVS();
DWORD __pascal __far MIDIINMESSAGE(HMIDIIN hMidiIn, UINT uMessage, DWORD dw1, DWORD dw2);
UINT __pascal __far MIDIINOPEN(HMIDIIN far *lphMidiIn, UINT uDeviceID, DWORD dwCallback, DWORD dwInstance, DWORD dwFlags);
UINT __pascal __far MIDIINPREPAREHEADER(HMIDIIN hMidiIn, MIDIHDR far *lpMidiInHdr, UINT uSize);
UINT __pascal __far MIDIINRESET(HMIDIIN hMidiIn);
UINT __pascal __far MIDIINSTART(HMIDIIN hMidiIn);
UINT __pascal __far MIDIINSTOP(HMIDIIN hMidiIn);
UINT __pascal __far MIDIINUNPREPAREHEADER(HMIDIIN hMidiIn, MIDIHDR far *lpMidiInHdr, UINT uSize);
MACRO_MIDIMAPPER MIDIMAPPER;
UINT __pascal __far MIDIOUTCACHEDRUMPATCHES(HMIDIOUT hMidiOut, UINT uPatch, WORD far *lpwKeyArray, UINT uFlags);
UINT __pascal __far MIDIOUTCACHEPATCHES(HMIDIOUT hMidiOut, UINT uBank, WORD far *lpwPatchArray, UINT uFlags);
UINT __pascal __far MIDIOUTCLOSE(HMIDIOUT hMidiOut);
UINT __pascal __far MIDIOUTGETDEVCAPS(UINT uDeviceID, MIDIOUTCAPS far *lpCaps, UINT uSize);
UINT __pascal __far MIDIOUTGETERRORTEXT(UINT uError, LPSTR lpText, UINT uSize);
UINT __pascal __far MIDIOUTGETID(HMIDIOUT hMidiOut, UINT far *lpuDeviceID);
UINT __pascal __far MIDIOUTGETNUMDEVS();
UINT __pascal __far MIDIOUTGETVOLUME(UINT uDeviceID, DWORD far *lpdwVolume);
UINT __pascal __far MIDIOUTLONGMSG(HMIDIOUT hMidiOut, MIDIHDR far *lpMidiOutHdr, UINT uSize);
DWORD __pascal __far MIDIOUTMESSAGE(HMIDIOUT hMidiOut, UINT uMessage, DWORD dw1, DWORD dw2);
UINT __pascal __far MIDIOUTOPEN(HMIDIOUT far *lphMidiOut, UINT uDeviceID, DWORD dwCallback, DWORD dwInstance, DWORD dwFlags);
UINT __pascal __far MIDIOUTPREPAREHEADER(HMIDIOUT hMidiOut, MIDIHDR far *lpMidiOutHdr, UINT uSize);
UINT __pascal __far MIDIOUTRESET(HMIDIOUT hMidiOut);
UINT __pascal __far MIDIOUTSETVOLUME(UINT uDeviceID, DWORD dwVolume);
UINT __pascal __far MIDIOUTSHORTMSG(HMIDIOUT hMidiOut, DWORD dwMsg);
UINT __pascal __far MIDIOUTUNPREPAREHEADER(HMIDIOUT hMidiOut, MIDIHDR far *lpMidiOutHdr, UINT uSize);
MACRO_MIDIPATCHSIZE MIDIPATCHSIZE;
MACRO_MIDI MIDI_CACHE_ALL;
MACRO_MIDI MIDI_CACHE_BESTFIT;
MACRO_MIDI MIDI_CACHE_QUERY;
MACRO_MIDI MIDI_MAPPER;
MACRO_MIDI MIDI_UNCACHE;
MACRO_MIM MIM_CLOSE;
MACRO_MIM MIM_DATA;
MACRO_MIM MIM_ERROR;
MACRO_MIM MIM_LONGDATA;
MACRO_MIM MIM_LONGERROR;
MACRO_MIM MIM_OPEN;
HRESULT __pascal __far MKPARSEDISPLAYNAME(LPBC pbc, LPSTR szUserName, ULONG far *pchEaten, LPMONIKER far *ppmk);
tagMKREDUCE MKRREDUCE_ALL;
tagMKREDUCE MKRREDUCE_ONE;
tagMKREDUCE MKRREDUCE_THROUGHUSER;
tagMKREDUCE MKRREDUCE_TOUSER;
tagMKSYS MKSYS_ANTIMONIKER;
tagMKSYS MKSYS_FILEMONIKER;
tagMKSYS MKSYS_GENERICCOMPOSITE;
tagMKSYS MKSYS_ITEMMONIKER;
tagMKSYS MKSYS_NONE;
tagMKSYS MKSYS_POINTERMONIKER;
MACRO_MK_ALT MK_ALT;
MACRO_MK MK_CONTROL;
MACRO_MK_E_CONNECTMANUALLY MK_E_CANTOPENFILE;
MACRO_MK_E_CONNECTMANUALLY MK_E_CONNECTMANUALLY;
MACRO_MK_E_CONNECTMANUALLY MK_E_EXCEEDEDDEADLINE;
MACRO_MK_E MK_E_FIRST;
MACRO_MK_E_CONNECTMANUALLY MK_E_INTERMEDIATEINTERFACENOTSUPPORTED;
MACRO_MK_E_CONNECTMANUALLY MK_E_INVALIDEXTENSION;
MACRO_MK_E MK_E_LAST;
MACRO_MK_E_CONNECTMANUALLY MK_E_MUSTBOTHERUSER;
MACRO_MK_E_CONNECTMANUALLY MK_E_NEEDGENERIC;
MACRO_MK_E_CONNECTMANUALLY MK_E_NOINVERSE;
MACRO_MK_E_CONNECTMANUALLY MK_E_NOOBJECT;
MACRO_MK_E_CONNECTMANUALLY MK_E_NOPREFIX;
MACRO_MK_E_CONNECTMANUALLY MK_E_NOSTORAGE;
MACRO_MK_E_CONNECTMANUALLY MK_E_NOTBINDABLE;
MACRO_MK_E_CONNECTMANUALLY MK_E_NOTBOUND;
MACRO_MK_E_CONNECTMANUALLY MK_E_SYNTAX;
MACRO_MK_E_CONNECTMANUALLY MK_E_UNAVAILABLE;
MACRO_MK MK_LBUTTON;
MACRO_MK MK_MBUTTON;
MACRO_MK MK_RBUTTON;
MACRO_MK MK_SHIFT;
MACRO_MK_E MK_S_FIRST;
MACRO_MK_E_CONNECTMANUALLY MK_S_HIM;
MACRO_MK_E MK_S_LAST;
MACRO_MK_E_CONNECTMANUALLY MK_S_ME;
MACRO_MK_E_CONNECTMANUALLY MK_S_MONIKERALREADYREGISTERED;
MACRO_MK_E_CONNECTMANUALLY MK_S_REDUCED_TO_SELF;
MACRO_MK_E_CONNECTMANUALLY MK_S_US;
UINT __pascal __far MMIOADVANCE(HMMIO hmmio, MMIOINFO far *lpmmioinfo, UINT uFlags);
UINT __pascal __far MMIOASCEND(HMMIO hmmio, MMCKINFO far *lpck, UINT uFlags);
UINT __pascal __far MMIOCLOSE(HMMIO hmmio, UINT uFlags);
UINT __pascal __far MMIOCREATECHUNK(HMMIO hmmio, MMCKINFO far *lpck, UINT uFlags);
UINT __pascal __far MMIODESCEND(HMMIO hmmio, MMCKINFO far *lpck, const MMCKINFO far *lpckParent, UINT uFlags);
MACRO_MMIOERR MMIOERR_BASE;
MACRO_MMIOERR MMIOERR_CANNOTCLOSE;
MACRO_MMIOERR MMIOERR_CANNOTEXPAND;
MACRO_MMIOERR MMIOERR_CANNOTOPEN;
MACRO_MMIOERR MMIOERR_CANNOTREAD;
MACRO_MMIOERR MMIOERR_CANNOTSEEK;
MACRO_MMIOERR MMIOERR_CANNOTWRITE;
MACRO_MMIOERR MMIOERR_CHUNKNOTFOUND;
MACRO_MMIOERR MMIOERR_FILENOTFOUND;
MACRO_MMIOERR MMIOERR_OUTOFMEMORY;
MACRO_MMIOERR MMIOERR_UNBUFFERED;
UINT __pascal __far MMIOFLUSH(HMMIO hmmio, UINT uFlags);
UINT __pascal __far MMIOGETINFO(HMMIO hmmio, MMIOINFO far *lpmmioinfo, UINT uFlags);
LPMMIOPROC __pascal __far MMIOINSTALLIOPROC(FOURCC fccIOProc, LPMMIOPROC pIOProc, DWORD dwFlags);
MACRO_MMIOM MMIOM_CLOSE;
MACRO_MMIOM MMIOM_OPEN;
MACRO_MMIOM MMIOM_READ;
MACRO_MMIOM MMIOM_RENAME;
MACRO_MMIOM MMIOM_SEEK;
MACRO_MMIOM MMIOM_USER;
MACRO_MMIOM MMIOM_WRITE;
MACRO_MMIOM MMIOM_WRITEFLUSH;
HMMIO __pascal __far MMIOOPEN(LPSTR szFileName, MMIOINFO far *lpmmioinfo, DWORD dwOpenFlags);
__int32 __pascal __far MMIOREAD(HMMIO hmmio, HPSTR pch, __int32 cch);
UINT __pascal __far MMIORENAME(LPCSTR szFileName, LPCSTR szNewFileName, MMIOINFO far *lpmmioinfo, DWORD dwRenameFlags);
__int32 __pascal __far MMIOSEEK(HMMIO hmmio, __int32 lOffset, int iOrigin);
LRESULT __pascal __far MMIOSENDMESSAGE(HMMIO hmmio, UINT uMessage, LPARAM lParam1, LPARAM lParam2);
UINT __pascal __far MMIOSETBUFFER(HMMIO hmmio, LPSTR pchBuffer, __int32 cchBuffer, UINT uFlags);
UINT __pascal __far MMIOSETINFO(HMMIO hmmio, const MMIOINFO far *lpmmioinfo, UINT uFlags);
FOURCC __pascal __far MMIOSTRINGTOFOURCC(LPCSTR sz, UINT uFlags);
__int32 __pascal __far MMIOWRITE(HMMIO hmmio, const char far *pch, __int32 cch);
MACRO_MMIO MMIO_ALLOCBUF;
MACRO_MMIO MMIO_COMPAT;
MACRO_MMIO MMIO_CREATE;
MACRO_MMIO MMIO_CREATELIST;
MACRO_MMIO MMIO_CREATERIFF;
MACRO_MMIO_DEFAULTBUFFER MMIO_DEFAULTBUFFER;
MACRO_MMIO MMIO_DELETE;
MACRO_MMIO MMIO_DENYNONE;
MACRO_MMIO MMIO_DENYREAD;
MACRO_MMIO MMIO_DENYWRITE;
MACRO_MMIO MMIO_DIRTY;
MACRO_MMIO MMIO_EMPTYBUF;
MACRO_MMIO MMIO_EXCLUSIVE;
MACRO_MMIO MMIO_EXIST;
MACRO_MMIO MMIO_FHOPEN;
MACRO_MMIO MMIO_FINDCHUNK;
MACRO_MMIO MMIO_FINDLIST;
MACRO_MMIO MMIO_FINDPROC;
MACRO_MMIO MMIO_FINDRIFF;
MACRO_MMIO MMIO_GETTEMP;
MACRO_MMIO MMIO_GLOBALPROC;
MACRO_MMIO MMIO_INSTALLPROC;
MACRO_MMIO MMIO_PARSE;
MACRO_MMIO MMIO_READ;
MACRO_MMIO MMIO_READWRITE;
MACRO_MMIO MMIO_REMOVEPROC;
MACRO_MMIO MMIO_RWMODE;
MACRO_MMIO MMIO_SHAREMODE;
MACRO_MMIO MMIO_TOUPPER;
MACRO_MMIO MMIO_WRITE;
MACRO_MMSYSERR MMSYSERR_ALLOCATED;
MACRO_MMSYSERR MMSYSERR_BADDEVICEID;
MACRO_MMSYSERR MMSYSERR_BADERRNUM;
MACRO_BASE MMSYSERR_BASE;
MACRO_MMSYSERR MMSYSERR_ERROR;
MACRO_MMSYSERR MMSYSERR_INVALFLAG;
MACRO_MMSYSERR MMSYSERR_INVALHANDLE;
MACRO_MMSYSERR MMSYSERR_INVALPARAM;
MACRO_MMSYSERR MMSYSERR_LASTERROR;
MACRO_MMSYSERR MMSYSERR_NODRIVER;
MACRO_MMSYSERR MMSYSERR_NOERROR;
MACRO_MMSYSERR MMSYSERR_NOMEM;
MACRO_MMSYSERR MMSYSERR_NOTENABLED;
MACRO_MMSYSERR MMSYSERR_NOTSUPPORTED;
WORD __pascal __far MMSYSTEMGETVERSION();
MACRO_MM_MICROSOFT MM_ADLIB;
MACRO_MM MM_ANISOTROPIC;
MACRO_MM MM_HIENGLISH;
MACRO_MM MM_HIMETRIC;
MACRO_MM MM_ISOTROPIC;
MACRO_MM_JOY1MOVE MM_JOY1BUTTONDOWN;
MACRO_MM_JOY1MOVE MM_JOY1BUTTONUP;
MACRO_MM_JOY1MOVE MM_JOY1MOVE;
MACRO_MM_JOY1MOVE MM_JOY1ZMOVE;
MACRO_MM_JOY1MOVE MM_JOY2BUTTONDOWN;
MACRO_MM_JOY1MOVE MM_JOY2BUTTONUP;
MACRO_MM_JOY1MOVE MM_JOY2MOVE;
MACRO_MM_JOY1MOVE MM_JOY2ZMOVE;
MACRO_MM MM_LOENGLISH;
MACRO_MM MM_LOMETRIC;
MACRO_MM_JOY1MOVE MM_MCINOTIFY;
MACRO_MM_MICROSOFT MM_MICROSOFT;
MACRO_MM_MICROSOFT MM_MIDI_MAPPER;
MACRO_MM_JOY1MOVE MM_MIM_CLOSE;
MACRO_MM_JOY1MOVE MM_MIM_DATA;
MACRO_MM_JOY1MOVE MM_MIM_ERROR;
MACRO_MM_JOY1MOVE MM_MIM_LONGDATA;
MACRO_MM_JOY1MOVE MM_MIM_LONGERROR;
MACRO_MM_JOY1MOVE MM_MIM_OPEN;
MACRO_MM_JOY1MOVE MM_MOM_CLOSE;
MACRO_MM_JOY1MOVE MM_MOM_DONE;
MACRO_MM_JOY1MOVE MM_MOM_OPEN;
MACRO_MM_MICROSOFT MM_MPU401_MIDIIN;
MACRO_MM_MICROSOFT MM_MPU401_MIDIOUT;
MACRO_MM_MICROSOFT MM_PC_JOYSTICK;
MACRO_MM_MICROSOFT MM_SNDBLST_MIDIIN;
MACRO_MM_MICROSOFT MM_SNDBLST_MIDIOUT;
MACRO_MM_MICROSOFT MM_SNDBLST_SYNTH;
MACRO_MM_MICROSOFT MM_SNDBLST_WAVEIN;
MACRO_MM_MICROSOFT MM_SNDBLST_WAVEOUT;
MACRO_MM MM_TEXT;
MACRO_MM MM_TWIPS;
MACRO_MM_MICROSOFT MM_WAVE_MAPPER;
MACRO_MM_JOY1MOVE MM_WIM_CLOSE;
MACRO_MM_JOY1MOVE MM_WIM_DATA;
MACRO_MM_JOY1MOVE MM_WIM_OPEN;
MACRO_MM_JOY1MOVE MM_WOM_CLOSE;
MACRO_MM_JOY1MOVE MM_WOM_DONE;
MACRO_MM_JOY1MOVE MM_WOM_OPEN;
BOOL __pascal __far MODIFYMENU(HMENU, UINT, UINT, UINT, LPCSTR);
HMODULE __pascal __far MODULEFINDHANDLE(MODULEENTRY far *lpModule, HMODULE hModule);
HMODULE __pascal __far MODULEFINDNAME(MODULEENTRY far *lpModule, LPCSTR lpstrName);
BOOL __pascal __far MODULEFIRST(MODULEENTRY far *lpModule);
BOOL __pascal __far MODULENEXT(MODULEENTRY far *lpModule);
MACRO_MOD MOD_FMSYNTH;
MACRO_MOD MOD_MAPPER;
MACRO_MOD MOD_MIDIPORT;
MACRO_MOD MOD_SQSYNTH;
MACRO_MOD MOD_SYNTH;
MACRO_MOM MOM_CLOSE;
MACRO_MOM MOM_DONE;
MACRO_MOM MOM_OPEN;
HRESULT __pascal __far MONIKERCOMMONPREFIXWITH(LPMONIKER pmkThis, LPMONIKER pmkOther, LPMONIKER far *ppmkCommon);
HRESULT __pascal __far MONIKERRELATIVEPATHTO(LPMONIKER pmkSrc, LPMONIKER pmkDest, LPMONIKER far *ppmkRelPath, BOOL fCalledFromMethod);
MACRO_MOUSETRAILS MOUSETRAILS;
DWORD __pascal __far MOVETO(HDC, int, int);
BOOL __pascal __far MOVETOEX(HDC, int, int, POINT far *);
BOOL __pascal __far MOVEWINDOW(HWND, int, int, int, int, BOOL);
MACRO_MSGF_DDEMGR MSGF_DDEMGR;
MACRO_MSGF MSGF_DIALOGBOX;
MACRO_MSGF MSGF_MAINLOOP;
MACRO_MSGF MSGF_MENU;
MACRO_MSGF MSGF_MOVE;
MACRO_MSGF MSGF_NEXTWINDOW;
MACRO_MSGF MSGF_SCROLLBAR;
MACRO_MSGF MSGF_SIZE;
MACRO_MSGF MSGF_USER;
MACRO_MSG MSG_DONTROUTE;
MACRO_MSG MSG_MAXIOVLEN;
MACRO_MSG MSG_OOB;
MACRO_MSG MSG_PARTIAL;
MACRO_MSG MSG_PEEK;
tagMSHCTX MSHCTX_LOCAL;
tagMSHCTX MSHCTX_NOSHAREDMEM;
tagMSHLFLAGS MSHLFLAGS_NORMAL;
tagMSHLFLAGS MSHLFLAGS_TABLESTRONG;
tagMSHLFLAGS MSHLFLAGS_TABLEWEAK;
int __pascal __far MULDIV(int, int, int);
MACRO_MULTIFILEOPENORD MULTIFILEOPENORD;
MACRO_NEWFRAME NEWFRAME;
MACRO_NEWTRANSPARENT NEWTRANSPARENT;
MACRO_NEXTBAND NEXTBAND;
MACRO_NFY NFY_DELMODULE;
MACRO_NFY NFY_EXITTASK;
MACRO_NFY NFY_FREESEG;
MACRO_NFY NFY_INCHAR;
MACRO_NFY NFY_LOADSEG;
MACRO_NFY NFY_LOGERROR;
MACRO_NFY NFY_LOGPARAMERROR;
MACRO_NFY NFY_OUTSTR;
MACRO_NFY NFY_RIP;
MACRO_NFY NFY_STARTDLL;
MACRO_NFY NFY_STARTTASK;
MACRO_NFY NFY_TASKIN;
MACRO_NFY NFY_TASKOUT;
MACRO_NFY NFY_UNKNOWN;
MACRO_NF NF_NORMAL;
MACRO_NF NF_RIP;
MACRO_NF NF_TASKSWITCH;
MACRO_NOERROR NOERROR;
MACRO_NONZEROLHND NONZEROLHND;
MACRO_NONZEROLPTR NONZEROLPTR;
MACRO_NOPARITY NOPARITY;
MACRO_HEAP NORMAL_HEAP;
MACRO_NORM NORM_IGNORECASE;
MACRO_NORM NORM_IGNOREJAPANACCENT;
MACRO_NORM NORM_IGNOREKANATYPE;
MACRO_NORM NORM_IGNOREKASHIDA;
MACRO_NORM NORM_IGNORENONSPACE;
MACRO_NORM NORM_IGNORESYMBOLS;
MACRO_NORM NORM_IGNOREWIDTH;
BOOL __pascal __far NOTIFYREGISTER(HTASK hTask, LPFNNOTIFYCALLBACK lpfn, WORD wFlags);
BOOL __pascal __far NOTIFYUNREGISTER(HTASK hTask);
MACRO_NOTSRCCOPY NOTSRCCOPY;
MACRO_NOTSRCERASE NOTSRCERASE;
MACRO_ADDRESS NO_ADDRESS;
MACRO_WSANO NO_DATA;
MACRO_RECOVERY NO_RECOVERY;
MACRO_UAE_BOX NO_UAE_BOX;
MACRO_NTM NTM_BOLD;
MACRO_NTM NTM_ITALIC;
MACRO_NTM NTM_REGULAR;
u_long __pascal __far NTOHL(u_long netlong);
u_short __pascal __far NTOHS(u_short netshort);
MACRO_ERROR NULLREGION;
MACRO_BRUSH NULL_BRUSH;
MACRO_PEN NULL_PEN;
MACRO_PLANES NUMBRUSHES;
MACRO_NUMCOLORS NUMCOLORS;
MACRO_NUMFONTS NUMFONTS;
MACRO_NUMMARKERS NUMMARKERS;
MACRO_NUMPENS NUMPENS;
MACRO_NUMRESERVED NUMRESERVED;
MACRO_NUM NUM_BASIC_COLORS;
MACRO_NUM NUM_CUSTOM_COLORS;
MACRO_OBJ OBJ_BRUSH;
MACRO_OBJ OBJ_PEN;
MACRO_OBM OBM_SKBBTNDISABLED;
MACRO_OBM OBM_SKBBTNDOWN;
MACRO_OBM OBM_SKBBTNUP;
MACRO_ODA ODA_DRAWENTIRE;
MACRO_ODA ODA_FOCUS;
MACRO_ODA ODA_SELECT;
MACRO_ODBCVER ODBCVER;
MACRO_ODBC ODBC_ADD_DSN;
MACRO_ODBC ODBC_CONFIG_DSN;
MACRO_ODBC ODBC_REMOVE_DSN;
MACRO_NOPARITY ODDPARITY;
MACRO_ODS ODS_CHECKED;
MACRO_ODS ODS_DISABLED;
MACRO_ODS ODS_FOCUS;
MACRO_ODS ODS_GRAYED;
MACRO_ODS ODS_SELECTED;
MACRO_ODT ODT_BUTTON;
MACRO_ODT ODT_COMBOBOX;
MACRO_ODT ODT_LISTBOX;
MACRO_ODT ODT_MENU;
DWORD __pascal __far OEMKEYSCAN(UINT);
void __pascal __far OEMTOANSI(const char far *, char far *);
void __pascal __far OEMTOANSIBUFF(LPCSTR, LPSTR, UINT);
MACRO_CHARSET OEM_CHARSET;
MACRO_FONT OEM_FIXED_FONT;
int __pascal __far OFFSETCLIPRGN(HDC, int, int);
BOOL __pascal __far OFFSETPENDATA(HPENDATA, int, int);
void __pascal __far OFFSETRECT(RECT far *, int, int);
int __pascal __far OFFSETRGN(HRGN, int, int);
DWORD __pascal __far OFFSETVIEWPORTORG(HDC, int, int);
BOOL __pascal __far OFFSETVIEWPORTORGEX(HDC, int, int, POINT far *);
DWORD __pascal __far OFFSETWINDOWORG(HDC, int, int);
BOOL __pascal __far OFFSETWINDOWORGEX(HDC, int, int, POINT far *);
MACRO_OFN OFN_ALLOWMULTISELECT;
MACRO_OFN OFN_CREATEPROMPT;
MACRO_OFN OFN_ENABLEHOOK;
MACRO_OFN OFN_ENABLETEMPLATE;
MACRO_OFN OFN_ENABLETEMPLATEHANDLE;
MACRO_OFN OFN_EXTENSIONDIFFERENT;
MACRO_OFN OFN_FILEMUSTEXIST;
MACRO_OFN OFN_HIDEREADONLY;
MACRO_OFN OFN_NOCHANGEDIR;
MACRO_OFN OFN_NOREADONLYRETURN;
MACRO_OFN OFN_NOTESTFILECREATE;
MACRO_OFN OFN_NOVALIDATE;
MACRO_OFN OFN_OVERWRITEPROMPT;
MACRO_OFN OFN_PATHMUSTEXIST;
MACRO_OFN OFN_READONLY;
MACRO_OFN OFN_SHAREAWARE;
MACRO_OFN OFN_SHAREFALLTHROUGH;
MACRO_OFN OFN_SHARENOWARN;
MACRO_OFN OFN_SHAREWARN;
MACRO_OFN OFN_SHOWHELP;
MACRO_OF OF_CANCEL;
MACRO_OF OF_CREATE;
MACRO_OF OF_DELETE;
MACRO_OF OF_EXIST;
MACRO_OF OF_PARSE;
MACRO_OF OF_PROMPT;
MACRO_OF OF_READ;
MACRO_OF OF_READWRITE;
MACRO_OF OF_REOPEN;
MACRO_OF OF_SEARCH;
MACRO_OF OF_SHARE_COMPAT;
MACRO_OF OF_SHARE_DENY_NONE;
MACRO_OF OF_SHARE_DENY_READ;
MACRO_OF OF_SHARE_DENY_WRITE;
MACRO_OF OF_SHARE_EXCLUSIVE;
MACRO_OF OF_VERIFY;
MACRO_OF OF_WRITE;
DWORD __pascal __far OLEBUILDVERSION();
tagOLECLOSE OLECLOSE_NOSAVE;
tagOLECLOSE OLECLOSE_PROMPTSAVE;
tagOLECLOSE OLECLOSE_SAVEIFDIRTY;
tagOLECONTF OLECONTF_EMBEDDINGS;
tagOLECONTF OLECONTF_LINKS;
tagOLECONTF OLECONTF_ONLYIFRUNNING;
tagOLECONTF OLECONTF_ONLYUSER;
tagOLECONTF OLECONTF_OTHERS;
HRESULT __pascal __far OLECONVERTISTORAGETOOLESTREAM(LPSTORAGE pstg, LPOLESTREAM polestm);
HRESULT __pascal __far OLECONVERTISTORAGETOOLESTREAMEX(LPSTORAGE pstg, CLIPFORMAT cfFormat, __int32 lWidth, __int32 lHeight, DWORD dwSize, LPSTGMEDIUM pmedium, LPOLESTREAM polestm);
HRESULT __pascal __far OLECONVERTOLESTREAMTOISTORAGE(LPOLESTREAM polestm, LPSTORAGE pstg, const DVTARGETDEVICE far *ptd);
HRESULT __pascal __far OLECONVERTOLESTREAMTOISTORAGEEX(LPOLESTREAM polestm, LPSTORAGE pstg, CLIPFORMAT far *pcfFormat, __int32 far *plwWidth, __int32 far *plHeight, DWORD far *pdwSize, LPSTGMEDIUM pmedium);
HRESULT __pascal __far OLECREATE(const CLSID far *const rclsid, const IID far *const riid, DWORD renderopt, LPFORMATETC pFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
HRESULT __pascal __far OLECREATEDEFAULTHANDLER(const CLSID far *const clsid, LPUNKNOWN pUnkOuter, const IID far *const riid, LPVOID far *lplpObj);
HRESULT __pascal __far OLECREATEEMBEDDINGHELPER(const CLSID far *const clsid, LPUNKNOWN pUnkOuter, DWORD flags, LPCLASSFACTORY pCF, const IID far *const riid, LPVOID far *lplpObj);
HRESULT __pascal __far OLECREATEFROMDATA(LPDATAOBJECT pSrcDataObj, const IID far *const riid, DWORD renderopt, LPFORMATETC pFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
HRESULT __pascal __far OLECREATEFROMFILE(const CLSID far *const rclsid, LPCSTR lpszFileName, const IID far *const riid, DWORD renderopt, LPFORMATETC lpFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
HRESULT __pascal __far OLECREATELINK(LPMONIKER pmkLinkSrc, const IID far *const riid, DWORD renderopt, LPFORMATETC lpFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
HRESULT __pascal __far OLECREATELINKFROMDATA(LPDATAOBJECT pSrcDataObj, const IID far *const riid, DWORD renderopt, LPFORMATETC pFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
HRESULT __pascal __far OLECREATELINKTOFILE(LPCSTR lpszFileName, const IID far *const riid, DWORD renderopt, LPFORMATETC lpFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
HOLEMENU __pascal __far OLECREATEMENUDESCRIPTOR(HMENU hmenuCombined, LPOLEMENUGROUPWIDTHS lpMenuWidths);
HRESULT __pascal __far OLECREATESTATICFROMDATA(LPDATAOBJECT pSrcDataObj, const IID far *const iid, DWORD renderopt, LPFORMATETC pFormatEtc, LPOLECLIENTSITE pClientSite, LPSTORAGE pStg, LPVOID far *ppvObj);
int __pascal __far OLEDBGGETDBGLEVEL();
void __pascal __far OLEDBGINDENT(int n);
void __pascal __far OLEDBGPRINT(int nDbgLvl, LPSTR lpszPrefix, LPSTR lpszMsg, int nIndent);
void __pascal __far OLEDBGPRINTALWAYS(LPSTR lpszPrefix, LPSTR lpszMsg, int nIndent);
void __pascal __far OLEDBGPRINTRECT(int nDbgLvl, LPSTR lpszPrefix, LPSTR lpszMsg, LPRECT lpRect);
void __pascal __far OLEDBGPRINTRECTALWAYS(LPSTR lpszPrefix, LPSTR lpszMsg, LPRECT lpRect);
void __pascal __far OLEDBGPRINTREFCNT(int nDbgLvl, LPSTR lpszPrefix, LPSTR lpszMsg, LPVOID lpObj, ULONG refcnt);
void __pascal __far OLEDBGPRINTREFCNTALWAYS(LPSTR lpszPrefix, LPSTR lpszMsg, LPVOID lpObj, ULONG refcnt);
void __pascal __far OLEDBGPRINTSCODEALWAYS(LPSTR lpszPrefix, LPSTR lpszMsg, SCODE sc);
void __pascal __far OLEDBGSETDBGLEVEL(int nDbgLvl);
HRESULT __pascal __far OLEDESTROYMENUDESCRIPTOR(HOLEMENU holemenu);
HRESULT __pascal __far OLEDOAUTOCONVERT(LPSTORAGE pStg, LPCLSID pClsidNew);
HRESULT __pascal __far OLEDRAW(LPUNKNOWN pUnknown, DWORD dwAspect, HDC hdcDraw, LPCRECT lprcBounds);
HANDLE __pascal __far OLEDUPLICATEDATA(HANDLE hSrc, CLIPFORMAT cfFormat, UINT uiFlags);
HRESULT __pascal __far OLEFLUSHCLIPBOARD();
HRESULT __pascal __far OLEGETAUTOCONVERT(const CLSID far *const clsidOld, LPCLSID pClsidNew);
HRESULT __pascal __far OLEGETCLIPBOARD(LPDATAOBJECT far *ppDataObj);
HGLOBAL __pascal __far OLEGETICONOFCLASS(const CLSID far *const rclsid, LPSTR lpszLabel, BOOL fUseTypeAsLabel);
HGLOBAL __pascal __far OLEGETICONOFFILE(LPSTR lpszPath, BOOL fUseFileAsLabel);
tagOLEGETMONIKER OLEGETMONIKER_FORCEASSIGN;
tagOLEGETMONIKER OLEGETMONIKER_ONLYIFTHERE;
tagOLEGETMONIKER OLEGETMONIKER_TEMPFORUSER;
tagOLEGETMONIKER OLEGETMONIKER_UNASSIGN;
HRESULT __pascal __far OLEINITIALIZE(LPMALLOC pMalloc);
HRESULT __pascal __far OLEISCURRENTCLIPBOARD(LPDATAOBJECT pDataObj);
BOOL __pascal __far OLEISRUNNING(LPOLEOBJECT pObject);
MACRO_OLEIVERB OLEIVERB_DISCARDUNDOSTATE;
MACRO_OLEIVERB OLEIVERB_HIDE;
MACRO_OLEIVERB OLEIVERB_INPLACEACTIVATE;
MACRO_OLEIVERB OLEIVERB_OPEN;
MACRO_OLEIVERB OLEIVERB_PRIMARY;
MACRO_OLEIVERB OLEIVERB_SHOW;
MACRO_OLEIVERB OLEIVERB_UIACTIVATE;
tagOLELINKBIND OLELINKBIND_EVENIFCLASSDIFF;
HRESULT __pascal __far OLELOAD(LPSTORAGE pStg, const IID far *const riid, LPOLECLIENTSITE pClientSite, LPVOID far *ppvObj);
HRESULT __pascal __far OLELOADFROMSTREAM(LPSTREAM pStm, const IID far *const iidInterface, LPVOID far *ppvObj);
HRESULT __pascal __far OLELOCKRUNNING(LPUNKNOWN pUnknown, BOOL fLock, BOOL fLastUnlockCloses);
HGLOBAL __pascal __far OLEMETAFILEPICTFROMICONANDLABEL(HICON hIcon, LPSTR lpszLabel, LPSTR lpszSourceFile, UINT iIconIndex);
tagOLEMISC OLEMISC_ACTIVATEWHENVISIBLE;
tagOLEMISC OLEMISC_CANLINKBYOLE1;
tagOLEMISC OLEMISC_CANTLINKINSIDE;
tagOLEMISC OLEMISC_INSERTNOTREPLACE;
tagOLEMISC OLEMISC_INSIDEOUT;
tagOLEMISC OLEMISC_ISLINKOBJECT;
tagOLEMISC OLEMISC_ONLYICONIC;
tagOLEMISC OLEMISC_RECOMPOSEONRESIZE;
tagOLEMISC OLEMISC_RENDERINGISDEVICEINDEPENDENT;
tagOLEMISC OLEMISC_STATIC;
HRESULT __pascal __far OLENOTEOBJECTVISIBLE(LPUNKNOWN pUnknown, BOOL fVisible);
MACRO_OLEOBJ OLEOBJ_E_FIRST;
MACRO_OLEOBJ_E OLEOBJ_E_INVALIDVERB;
MACRO_OLEOBJ OLEOBJ_E_LAST;
MACRO_OLEOBJ_E OLEOBJ_E_NOVERBS;
MACRO_OLEOBJ_E OLEOBJ_S_CANNOT_DOVERB_NOW;
MACRO_OLEOBJ OLEOBJ_S_FIRST;
MACRO_OLEOBJ_E OLEOBJ_S_INVALIDHWND;
MACRO_OLEOBJ_E OLEOBJ_S_INVALIDVERB;
MACRO_OLEOBJ OLEOBJ_S_LAST;
HRESULT __pascal __far OLEQUERYCREATEFROMDATA(LPDATAOBJECT pSrcDataObject);
HRESULT __pascal __far OLEQUERYLINKFROMDATA(LPDATAOBJECT pSrcDataObject);
HRESULT __pascal __far OLEREGENUMFORMATETC(const CLSID far *const clsid, DWORD dwDirection, LPENUMFORMATETC far *ppenum);
HRESULT __pascal __far OLEREGENUMVERBS(const CLSID far *const clsid, LPENUMOLEVERB far *ppenum);
HRESULT __pascal __far OLEREGGETMISCSTATUS(const CLSID far *const clsid, DWORD dwAspect, DWORD far *pdwStatus);
HRESULT __pascal __far OLEREGGETUSERTYPE(const CLSID far *const clsid, DWORD dwFormOfType, LPSTR far *pszUserType);
tagOLERENDER OLERENDER_ASIS;
tagOLERENDER OLERENDER_DRAW;
tagOLERENDER OLERENDER_FORMAT;
tagOLERENDER OLERENDER_NONE;
HRESULT __pascal __far OLERUN(LPUNKNOWN pUnknown);
HRESULT __pascal __far OLESAVE(LPPERSISTSTORAGE pPS, LPSTORAGE pStg, BOOL fSameAsLoad);
HRESULT __pascal __far OLESAVETOSTREAM(LPPERSISTSTREAM pPStm, LPSTREAM pStm);
HRESULT __pascal __far OLESETAUTOCONVERT(const CLSID far *const clsidOld, const CLSID far *const clsidNew);
HRESULT __pascal __far OLESETCLIPBOARD(LPDATAOBJECT pDataObj);
HRESULT __pascal __far OLESETCONTAINEDOBJECT(LPUNKNOWN pUnknown, BOOL fContained);
HRESULT __pascal __far OLESETMENUDESCRIPTOR(HOLEMENU holemenu, HWND hwndFrame, HWND hwndActiveObject, LPOLEINPLACEFRAME lpFrame, LPOLEINPLACEACTIVEOBJECT lpActiveObj);
MACRO_OLESTDCANCELRETRY OLESTDCANCELRETRY;
BOOL __pascal __far OLESTDCHECKVTBL(LPVOID lpVtbl, UINT nSizeOfVtbl, LPSTR lpszIface);
BOOL __pascal __far OLESTDCOMMITSTORAGE(LPSTORAGE lpStg);
int __pascal __far OLESTDCOMPAREFORMATETC(FORMATETC far *pFetcLeft, FORMATETC far *pFetcRight);
BOOL __pascal __far OLESTDCOMPARETARGETDEVICE(DVTARGETDEVICE far *ptdLeft, DVTARGETDEVICE far *ptdRight);
BOOL __pascal __far OLESTDCOPYFORMATETC(LPFORMATETC petcDest, LPFORMATETC petcSrc);
BOOL __pascal __far OLESTDCOPYSTATDATA(LPSTATDATA pDest, LPSTATDATA pSrc);
LPSTR __pascal __far OLESTDCOPYSTRING(LPSTR lpszSrc, LPMALLOC lpMalloc);
DVTARGETDEVICE far *__pascal __far OLESTDCOPYTARGETDEVICE(DVTARGETDEVICE far *ptdSrc);
LPSTORAGE __pascal __far OLESTDCREATECHILDSTORAGE(LPSTORAGE lpStg, LPSTR lpszStgName);
HRESULT __pascal __far OLESTDCREATEDBALLOC(ULONG reserved, IMalloc far * far *ppmalloc);
HDC __pascal __far OLESTDCREATEDC(DVTARGETDEVICE far *ptd);
HDC __pascal __far OLESTDCREATEIC(DVTARGETDEVICE far *ptd);
LPSTORAGE __pascal __far OLESTDCREATEROOTSTORAGE(LPSTR lpszStgName, DWORD grfMode);
HPALETTE __pascal __far OLESTDCREATESTANDARDPALETTE();
LPSTORAGE __pascal __far OLESTDCREATESTORAGEONHGLOBAL(HANDLE hGlobal, BOOL fDeleteOnRelease, DWORD dwgrfMode);
DVTARGETDEVICE far *__pascal __far OLESTDCREATETARGETDEVICE(LPPRINTDLG lpPrintDlg);
void __pascal __far OLESTDCREATETEMPFILEMONIKER(LPSTR lpszPrefixString, UINT far *lpuUnique, LPSTR lpszName, LPMONIKER far *lplpmk);
LPSTORAGE __pascal __far OLESTDCREATETEMPSTORAGE(BOOL fUseMemory, DWORD grfMode);
BOOL __pascal __far OLESTDDELETETARGETDEVICE(DVTARGETDEVICE far *ptd);
HRESULT __pascal __far OLESTDDESTROYALLELEMENTS(LPSTORAGE lpStg);
HRESULT __pascal __far OLESTDDOCONVERT(LPSTORAGE lpStg, const CLSID far *const rClsidNew);
HRESULT __pascal __far OLESTDDOTREATASCLASS(LPSTR lpszUserType, const CLSID far *const rclsid, const CLSID far *const rclsidNew);
MACRO_OLESTDDROP OLESTDDROP_DEFAULT;
MACRO_OLESTDDROP OLESTDDROP_NONDEFAULT;
MACRO_OLESTDDROP OLESTDDROP_NONE;
LPENUMFORMATETC __pascal __far OLESTDENUMFMTETC_CREATE(ULONG nCount, LPFORMATETC lpEtc);
LPENUMSTATDATA __pascal __far OLESTDENUMSTATDATA_CREATE(ULONG nCount, LPSTATDATA lpStat);
HGLOBAL __pascal __far OLESTDFILLOBJECTDESCRIPTORFROMDATA(LPDATAOBJECT lpDataObject, LPSTGMEDIUM lpmedium, CLIPFORMAT far *lpcfFmt);
void __pascal __far OLESTDFREE(LPVOID pmem);
void __pascal __far OLESTDFREESTRING(LPSTR lpsz, LPMALLOC lpMalloc);
UINT __pascal __far OLESTDGETAUXUSERTYPE(const CLSID far *const rclsid, WORD wAuxUserType, LPSTR lpszAuxUserType, int cch, HKEY hKey);
HGLOBAL __pascal __far OLESTDGETDATA(LPDATAOBJECT lpDataObj, CLIPFORMAT cfFormat, DVTARGETDEVICE far *lpTargetDevice, DWORD dwAspect, LPSTGMEDIUM lpMedium);
CLIPFORMAT __pascal __far OLESTDGETDEFAULTFILEFORMATOFCLASS(const CLSID far *const rclsid, HKEY hKey);
LPMONIKER __pascal __far OLESTDGETFIRSTMONIKER(LPMONIKER lpmk);
ULONG __pascal __far OLESTDGETITEMTOKEN(LPSTR lpszSrc, LPSTR lpszDst, int nMaxChars);
ULONG __pascal __far OLESTDGETLENFILEPREFIXOFMONIKER(LPMONIKER lpmk);
HRESULT __pascal __far OLESTDGETLINKSOURCEDATA(LPMONIKER lpmk, LPCLSID lpClsID, LPFORMATETC lpformatetc, LPSTGMEDIUM lpMedium);
HANDLE __pascal __far OLESTDGETMETAFILEPICTFROMOLEOBJECT(LPOLEOBJECT lpOleObj, DWORD dwDrawAspect, LPSIZEL lpSizelHim, DVTARGETDEVICE far *ptd);
BOOL __pascal __far OLESTDGETMISCSTATUSOFCLASS(const CLSID far *const, HKEY, DWORD far *);
HGLOBAL __pascal __far OLESTDGETOBJECTDESCRIPTORDATA(CLSID clsid, DWORD dwAspect, SIZEL sizel, POINTL pointl, DWORD dwStatus, LPSTR lpszFullUserTypeName, LPSTR lpszSrcOfCopy);
HGLOBAL __pascal __far OLESTDGETOBJECTDESCRIPTORDATAFROMOLEOBJECT(LPOLEOBJECT lpOleObj, LPSTR lpszSrcOfCopy, DWORD dwAspect, POINTL pointl, LPSIZEL lpSizelHim);
HRESULT __pascal __far OLESTDGETOLEOBJECTDATA(LPPERSISTSTORAGE lpPStg, LPFORMATETC lpformatetc, LPSTGMEDIUM lpMedium, BOOL fUseMemory);
int __pascal __far OLESTDGETPRIORITYCLIPBOARDFORMAT(LPDATAOBJECT lpSrcDataObj, LPOLEUIPASTEENTRY lpPriorityList, int cEntries);
ULONG __pascal __far OLESTDGETSIZE(LPVOID pmem);
BOOL __pascal __far OLESTDGETTREATASFMTUSERTYPE(const CLSID far *const rClsidApp, LPSTORAGE lpStg, CLSID far *lpclsid, CLIPFORMAT far *lpcfFmt, LPSTR far *lplpszType);
UINT __pascal __far OLESTDGETUSERTYPEOFCLASS(const CLSID far *const rclsid, LPSTR lpszUserType, UINT cch, HKEY hKey);
UINT __pascal __far OLESTDICONLABELTEXTOUT(HDC hDC, HFONT hFont, int nXStart, int nYStart, UINT fuOptions, RECT far *lpRect, LPSTR lpszString, UINT cchString, int far *lpDX);
void __pascal __far OLESTDINITVTBL(LPVOID lpVtbl, UINT nSizeOfVtbl);
BOOL __pascal __far OLESTDISDUPLICATEFORMAT(LPFORMATETC lpFmtEtc, LPFORMATETC arrFmtEtc, int nFmtEtc);
BOOL __pascal __far OLESTDISOLELINK(LPUNKNOWN lpUnk);
LPVOID __pascal __far OLESTDMALLOC(ULONG ulSize);
void __pascal __far OLESTDMARKPASTEENTRYLIST(LPDATAOBJECT lpSrcDataObj, LPOLEUIPASTEENTRY lpPriorityList, int cEntries);
HRESULT __pascal __far OLESTDMKPARSEDISPLAYNAME(const CLSID far *const rClsid, LPBC lpbc, LPSTR lpszUserName, ULONG far *lpchEaten, LPMONIKER far *lplpmk);
void __pascal __far OLESTDNOTEFILECHANGETIME(LPSTR lpszFileName, DWORD dwRegister);
void __pascal __far OLESTDNOTEOBJECTCHANGETIME(DWORD dwRegister);
LPSTORAGE __pascal __far OLESTDOPENCHILDSTORAGE(LPSTORAGE lpStg, LPSTR lpszStgName, DWORD grfMode);
LPSTORAGE __pascal __far OLESTDOPENORCREATEROOTSTORAGE(LPSTR lpszStgName, DWORD grfMode);
LPSTORAGE __pascal __far OLESTDOPENROOTSTORAGE(LPSTR lpszStgName, DWORD grfMode);
LPUNKNOWN __pascal __far OLESTDQUERYINTERFACE(LPUNKNOWN lpUnk, const IID far *const riid);
LPVOID __pascal __far OLESTDREALLOC(LPVOID pmem, ULONG ulSize);
void __pascal __far OLESTDREGISTERASRUNNING(LPUNKNOWN lpUnk, LPMONIKER lpmkFull, DWORD far *lpdwRegister);
ULONG __pascal __far OLESTDRELEASE(LPUNKNOWN lpUnk);
MACRO_OLESTDRETRYDELAY OLESTDRETRYDELAY;
void __pascal __far OLESTDREVOKEASRUNNING(DWORD far *lpdwRegister);
HRESULT __pascal __far OLESTDSETICONINCACHE(LPOLEOBJECT lpOleObj, HGLOBAL hMetaPict);
BOOL __pascal __far OLESTDSETUPADVISES(LPOLEOBJECT lpOleObject, DWORD dwDrawAspect, LPSTR lpszContainerApp, LPSTR lpszContainerObj, LPADVISESINK lpAdviseSink, BOOL fCreate);
HRESULT __pascal __far OLESTDSWITCHDISPLAYASPECT(LPOLEOBJECT lpOleObj, LPDWORD lpdwCurAspect, DWORD dwNewAspect, HGLOBAL hMetaPict, BOOL fDeleteOldAspect, BOOL fSetupViewAdvise, LPADVISESINK lpAdviseSink, BOOL far *lpfMustUpdate);
ULONG __pascal __far OLESTDVERIFYRELEASE(LPUNKNOWN lpUnk, LPSTR lpszMsg);
HRESULT __pascal __far OLETRANSLATEACCELERATOR(LPOLEINPLACEFRAME lpFrame, LPOLEINPLACEFRAMEINFO lpFrameInfo, LPMSG lpmsg);
BOOL __pascal __far OLEUIADDVERBMENU(LPOLEOBJECT lpOleObj, LPSTR lpszShortType, HMENU hMenu, UINT uPos, UINT uIDVerbMin, UINT uIDVerbMax, BOOL bAddConvert, UINT idConvert, HMENU far *lphMenu);
UINT __pascal __far OLEUIBUSY(LPOLEUIBUSY);
BOOL __pascal __far OLEUICANCONVERTORACTIVATEAS(const CLSID far *const rClsid, BOOL fIsLinkedObject, WORD wFormat);
HRESULT __pascal __far OLEUICANUNLOADNOW();
UINT __pascal __far OLEUICHANGEICON(LPOLEUICHANGEICON);
UINT __pascal __far OLEUICONVERT(LPOLEUICONVERT);
void __pascal __far OLEUIDRAWHANDLES(LPRECT lpRect, HDC hdc, DWORD dwFlags, UINT cSize, BOOL fDraw);
void __pascal __far OLEUIDRAWSHADING(LPRECT lpRect, HDC hdc, DWORD dwFlags, UINT cWidth);
UINT __pascal __far OLEUIEDITLINKS(LPOLEUIEDITLINKS);
BOOL __pascal __far OLEUIINITIALIZE(HINSTANCE hInstance, HINSTANCE hPrevInst);
UINT __pascal __far OLEUIINSERTOBJECT(LPOLEUIINSERTOBJECT);
HRESULT __pascal __far OLEUILOCKLIBRARY(BOOL fLock);
HICON __pascal __far OLEUIMETAFILEPICTEXTRACTICON(HGLOBAL);
BOOL __pascal __far OLEUIMETAFILEPICTEXTRACTICONSOURCE(HGLOBAL, LPSTR, UINT far *);
UINT __pascal __far OLEUIMETAFILEPICTEXTRACTLABEL(HGLOBAL, LPSTR, UINT, LPDWORD);
BOOL __pascal __far OLEUIMETAFILEPICTICONDRAW(HDC, LPRECT, HGLOBAL, BOOL);
void __pascal __far OLEUIMETAFILEPICTICONFREE(HGLOBAL);
UINT __pascal __far OLEUIPASTESPECIAL(LPOLEUIPASTESPECIAL);
tagOLEUIPASTEFLAG OLEUIPASTE_ENABLEICON;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKANYTYPE;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE1;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE2;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE3;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE4;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE5;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE6;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE7;
tagOLEUIPASTEFLAG OLEUIPASTE_LINKTYPE8;
tagOLEUIPASTEFLAG OLEUIPASTE_PASTE;
tagOLEUIPASTEFLAG OLEUIPASTE_PASTEONLY;
void __pascal __far OLEUISHOWOBJECT(LPCRECT lprc, HDC hdc, BOOL fIsLink);
BOOL __pascal __far OLEUIUNINITIALIZE();
BOOL __pascal __far OLEUIUPDATELINKS(IOleUILinkContainer far *lpOleUILinkCntr, HWND hwndParent, LPSTR lpszTitle, int cLinks);
MACRO_OLEUI_BZERR OLEUI_BZERR_HTASKINVALID;
MACRO_OLEUI_BZERR OLEUI_BZ_CALLUNBLOCKED;
MACRO_OLEUI_BZERR OLEUI_BZ_RETRYSELECTED;
MACRO_OLEUI_BZERR OLEUI_BZ_SWITCHTOSELECTED;
MACRO_OLEUI OLEUI_CANCEL;
MACRO_OLEUI_CCHKEYMAX OLEUI_CCHCLSIDSTRING;
MACRO_OLEUI_CCHKEYMAX OLEUI_CCHFILEMAX;
MACRO_OLEUI_CCHKEYMAX OLEUI_CCHKEYMAX;
MACRO_OLEUI_CCHKEYMAX OLEUI_CCHLABELMAX;
MACRO_OLEUI_CCHKEYMAX OLEUI_CCHPATHMAX;
MACRO_OLEUI_CCHKEYMAX OLEUI_CCHVERBMAX;
MACRO_OLEUI_CIERR OLEUI_CIERR_MUSTHAVECLSID;
MACRO_OLEUI_CIERR OLEUI_CIERR_MUSTHAVECURRENTMETAFILE;
MACRO_OLEUI_CIERR OLEUI_CIERR_SZICONEXEINVALID;
MACRO_OLEUI_CTERR OLEUI_CTERR_CBFORMATINVALID;
MACRO_OLEUI_CTERR OLEUI_CTERR_CLASSIDINVALID;
MACRO_OLEUI_CTERR OLEUI_CTERR_DVASPECTINVALID;
MACRO_OLEUI_CTERR OLEUI_CTERR_HMETAPICTINVALID;
MACRO_OLEUI_CTERR OLEUI_CTERR_STRINGINVALID;
MACRO_OLEUI OLEUI_ERR_CBSTRUCTINCORRECT;
MACRO_OLEUI OLEUI_ERR_DIALOGFAILURE;
MACRO_OLEUI OLEUI_ERR_FINDTEMPLATEFAILURE;
MACRO_OLEUI OLEUI_ERR_GLOBALMEMALLOC;
MACRO_OLEUI OLEUI_ERR_HINSTANCEINVALID;
MACRO_OLEUI OLEUI_ERR_HRESOURCEINVALID;
MACRO_OLEUI OLEUI_ERR_HWNDOWNERINVALID;
MACRO_OLEUI OLEUI_ERR_LOADSTRING;
MACRO_OLEUI OLEUI_ERR_LOADTEMPLATEFAILURE;
MACRO_OLEUI OLEUI_ERR_LOCALMEMALLOC;
MACRO_OLEUI OLEUI_ERR_LPFNHOOKINVALID;
MACRO_OLEUI OLEUI_ERR_LPSZCAPTIONINVALID;
MACRO_OLEUI OLEUI_ERR_LPSZTEMPLATEINVALID;
MACRO_OLEUI OLEUI_ERR_STANDARDMAX;
MACRO_OLEUI OLEUI_ERR_STANDARDMIN;
MACRO_OLEUI OLEUI_ERR_STRUCTUREINVALID;
MACRO_OLEUI OLEUI_ERR_STRUCTURENULL;
MACRO_OLEUI OLEUI_FALSE;
MACRO_OLEUI_HANDLES OLEUI_HANDLES_INSIDE;
MACRO_OLEUI_HANDLES OLEUI_HANDLES_NOBORDER;
MACRO_OLEUI_HANDLES OLEUI_HANDLES_OUTSIDE;
MACRO_OLEUI_HANDLES OLEUI_HANDLES_USEINVERSE;
MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID OLEUI_IOERR_ARRLINKTYPESINVALID;
MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID OLEUI_IOERR_ARRPASTEENTRIESINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_CCHFILEINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_HICONINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_LPCLSIDEXCLUDEINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_LPFORMATETCINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_LPIOLECLIENTSITEINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_LPISTORAGEINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_LPSZFILEINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_LPSZLABELINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_PPVOBJINVALID;
MACRO_OLEUI_IOERR OLEUI_IOERR_SCODEHASERROR;
MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID OLEUI_IOERR_SRCDATAOBJECTINVALID;
MACRO_OLEUI_CCHKEYMAX OLEUI_OBJECTMENUMAX;
MACRO_OLEUI OLEUI_OK;
MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID OLEUI_PSERR_CLIPBOARDCHANGED;
MACRO_OLEUI_HANDLES OLEUI_SHADE_BORDERIN;
MACRO_OLEUI_HANDLES OLEUI_SHADE_BORDEROUT;
MACRO_OLEUI_HANDLES OLEUI_SHADE_FULLRECT;
MACRO_OLEUI OLEUI_SUCCESS;
MACRO_OLEUI_VERSION OLEUI_VERSION_MAGIC;
void __pascal __far OLEUNINITIALIZE();
tagOLEUPDATE OLEUPDATE_ALWAYS;
tagOLEUPDATE OLEUPDATE_ONCALL;
tagOLEVERBATTRIB OLEVERBATTRIB_NEVERDIRTIES;
tagOLEVERBATTRIB OLEVERBATTRIB_ONCONTAINERMENU;
tagOLEWHICHMK OLEWHICHMK_CONTAINER;
tagOLEWHICHMK OLEWHICHMK_OBJFULL;
tagOLEWHICHMK OLEWHICHMK_OBJREL;
MACRO_OLE_E OLE_E_ADVF;
MACRO_OLE_E OLE_E_ADVISENOTSUPPORTED;
MACRO_OLE_E OLE_E_BLANK;
MACRO_OLE_E OLE_E_CANTCONVERT;
MACRO_OLE_E OLE_E_CANT_BINDTOSOURCE;
MACRO_OLE_E OLE_E_CANT_GETMONIKER;
MACRO_OLE_E OLE_E_CLASSDIFF;
MACRO_OLE_E OLE_E_ENUM_NOMORE;
MACRO_OLE OLE_E_FIRST;
MACRO_OLE_E OLE_E_INVALIDHWND;
MACRO_OLE_E OLE_E_INVALIDRECT;
MACRO_OLE OLE_E_LAST;
MACRO_OLE_E OLE_E_NOCACHE;
MACRO_OLE_E OLE_E_NOCONNECTION;
MACRO_OLE_E OLE_E_NOSTORAGE;
MACRO_OLE_E OLE_E_NOTRUNNING;
MACRO_OLE_E OLE_E_NOT_INPLACEACTIVE;
MACRO_OLE_E OLE_E_OLEVERB;
MACRO_OLE_E OLE_E_PROMPTSAVECANCELLED;
MACRO_OLE_E OLE_E_STATIC;
MACRO_OLE_E OLE_E_WRONGCOMPOBJ;
MACRO_OLE OLE_S_FIRST;
MACRO_OLE OLE_S_LAST;
MACRO_OLE_S OLE_S_MAC_CLIPFORMAT;
MACRO_OLE_S OLE_S_STATIC;
MACRO_OLE_S OLE_S_USEREG;
MACRO_ONESTOPBIT ONE5STOPBITS;
MACRO_ONESTOPBIT ONESTOPBIT;
MACRO_TRANSPARENT OPAQUE;
BOOL __pascal __far OPENCLIPBOARD(HWND);
int __pascal __far OPENCOMM(LPCSTR, UINT, UINT);
HDRVR __pascal __far OPENDRIVER(LPCSTR szDriverName, LPCSTR szSectionName, LPARAM lParam2);
HFILE __pascal __far OPENFILE(LPCSTR, OFSTRUCT far *, UINT);
BOOL __pascal __far OPENICON(HWND);
int __pascal __far OPENSOUND();
void __pascal __far OUTPUTDEBUGSTR(LPCSTR);
void __pascal __far OUTPUTDEBUGSTRING(LPCSTR);
MACRO_OUT OUT_CHARACTER_PRECIS;
MACRO_OUT OUT_DEFAULT_PRECIS;
MACRO_OUT OUT_DEVICE_PRECIS;
MACRO_OUT OUT_RASTER_PRECIS;
MACRO_OUT OUT_STRING_PRECIS;
MACRO_OUT OUT_STROKE_PRECIS;
MACRO_OUT OUT_TT_ONLY_PRECIS;
MACRO_OUT OUT_TT_PRECIS;
BOOL __pascal __far PAINTRGN(HDC, HRGN);
void __pascal __far PARSECMDLINE(LPSTR, BOOL far *, LPSTR);
MACRO_PASSTHROUGH PASSTHROUGH;
BOOL __pascal __far PATBLT(HDC, int, int, int, int, DWORD);
MACRO_PATCOPY PATCOPY;
MACRO_PATINVERT PATINVERT;
MACRO_PATPAINT PATPAINT;
MACRO_PCM PCM_ADDDEFAULTS;
MACRO_PCM PCM_INVERT;
MACRO_PCM PCM_PENUP;
MACRO_PCM PCM_RANGE;
MACRO_PCM PCM_RECTBOUND;
MACRO_PCM PCM_RECTEXCLUDE;
MACRO_PCM PCM_TIMEOUT;
MACRO_PC_RESERVED PC_EXPLICIT;
MACRO_PC PC_INTERIORS;
MACRO_PC_RESERVED PC_NOCOLLAPSE;
MACRO_PC PC_NONE;
MACRO_PC PC_POLYGON;
MACRO_PC PC_RECTANGLE;
MACRO_PC_RESERVED PC_RESERVED;
MACRO_PC PC_SCANLINE;
MACRO_PC PC_STYLED;
MACRO_PC PC_WIDE;
MACRO_PC PC_WIDESTYLED;
MACRO_PC PC_WINDPOLYGON;
MACRO_PDC PDC_BARREL1;
MACRO_PDC PDC_BARREL2;
MACRO_PDC PDC_BARREL3;
MACRO_PDC PDC_INTEGRATED;
MACRO_PDC PDC_INVERT;
MACRO_PDC PDC_PROXIMITY;
MACRO_PDC PDC_RANGE;
MACRO_PDC PDC_RELATIVE;
MACRO_PDERR PDERR_CREATEICFAILURE;
MACRO_PDERR PDERR_DEFAULTDIFFERENT;
MACRO_PDERR PDERR_DNDMMISMATCH;
MACRO_PDERR PDERR_GETDEVMODEFAIL;
MACRO_PDERR PDERR_INITFAILURE;
MACRO_PDERR PDERR_LOADDRVFAILURE;
MACRO_PDERR PDERR_NODEFAULTPRN;
MACRO_PDERR PDERR_NODEVICES;
MACRO_PDERR PDERR_PARSEFAILURE;
MACRO_PDERR PDERR_PRINTERCODES;
MACRO_PDERR PDERR_PRINTERNOTFOUND;
MACRO_PDERR PDERR_RETDEFFAILURE;
MACRO_PDERR PDERR_SETUPFAILURE;
MACRO_PDEVICESIZE PDEVICESIZE;
MACRO_PDK PDK_BARREL1;
MACRO_PDK PDK_BARREL2;
MACRO_PDK PDK_BARREL3;
MACRO_PDK PDK_DOWN;
MACRO_PDK PDK_DRIVER;
MACRO_PDK PDK_INVERTED;
MACRO_PDK PDK_OUTOFRANGE;
MACRO_PDK PDK_SWITCHES;
MACRO_PDK PDK_TIPMASK;
MACRO_PDK PDK_TRANSITION;
MACRO_PDK PDK_UP;
MACRO_PDTS PDTS_ARBITRARY;
MACRO_PDTS PDTS_COMPRESS2NDDERIV;
MACRO_PDTS PDTS_COMPRESSED;
MACRO_PDTS PDTS_COMPRESSMETHOD;
MACRO_PDTS PDTS_DISPLAY;
MACRO_PDTS PDTS_HIENGLISH;
MACRO_PDTS PDTS_HIMETRIC;
MACRO_PDTS PDTS_LOMETRIC;
MACRO_PDTS PDTS_NOCOLINEAR;
MACRO_PDTS PDTS_NOOEMDATA;
MACRO_PDTS PDTS_NOPENINFO;
MACRO_PDTS PDTS_NOUPPOINTS;
MACRO_PDTS PDTS_SCALEMASK;
MACRO_PDTS PDTS_SCALEMAX;
MACRO_PDTS PDTS_STANDARDSCALE;
MACRO_PDTT PDTT_ALL;
MACRO_PDTT PDTT_COLINEAR;
MACRO_PDTT PDTT_COMPRESS;
MACRO_PDTT PDTT_DECOMPRESS;
MACRO_PDTT PDTT_DEFAULT;
MACRO_PDTT PDTT_OEMDATA;
MACRO_PDTT PDTT_PENINFO;
MACRO_PDTT PDTT_UPPOINTS;
MACRO_PDT PDT_ANGLEXY;
MACRO_PDT PDT_ANGLEZ;
MACRO_PDT PDT_BARRELROTATION;
MACRO_PDT PDT_HEIGHT;
MACRO_PDT PDT_NULL;
MACRO_PDT PDT_OEMSPECIFIC;
MACRO_PDT PDT_PRESSURE;
MACRO_PD PD_ALLPAGES;
MACRO_PD PD_COLLATE;
MACRO_PD PD_DISABLEPRINTTOFILE;
MACRO_PD PD_ENABLEPRINTHOOK;
MACRO_PD PD_ENABLEPRINTTEMPLATE;
MACRO_PD PD_ENABLEPRINTTEMPLATEHANDLE;
MACRO_PD PD_ENABLESETUPHOOK;
MACRO_PD PD_ENABLESETUPTEMPLATE;
MACRO_PD PD_ENABLESETUPTEMPLATEHANDLE;
MACRO_PD PD_HIDEPRINTTOFILE;
MACRO_PD PD_NOPAGENUMS;
MACRO_PD PD_NOSELECTION;
MACRO_PD PD_NOWARNING;
MACRO_PD PD_PAGENUMS;
MACRO_PD PD_PRINTSETUP;
MACRO_PD PD_PRINTTOFILE;
MACRO_PD PD_RETURNDC;
MACRO_PD PD_RETURNDEFAULT;
MACRO_PD PD_RETURNIC;
MACRO_PD PD_SELECTION;
MACRO_PD PD_SHOWHELP;
MACRO_PD PD_USEDEVMODECOPIES;
BOOL __pascal __far PEEKMESSAGE(MSG far *, HWND, UINT, UINT, UINT);
tagPENDINGMSG PENDINGMSG_CANCELCALL;
tagPENDINGMSG PENDINGMSG_WAITDEFPROCESS;
tagPENDINGMSG PENDINGMSG_WAITNOPROCESS;
tagPENDINGTYPE PENDINGTYPE_NESTED;
tagPENDINGTYPE PENDINGTYPE_TOPLEVEL;
void __pascal __far PENPACKET();
MACRO_PEN_NOINKWIDTH PEN_NOINKWIDTH;
MACRO_PF PF_APPLETALK;
MACRO_PF PF_CCITT;
MACRO_PF PF_CHAOS;
MACRO_PF PF_DATAKIT;
MACRO_PF PF_DECnet;
MACRO_PF PF_DLI;
MACRO_PF PF_ECMA;
MACRO_PF PF_HYLINK;
MACRO_PF PF_IMPLINK;
MACRO_PF PF_INET;
MACRO_PF PF_IPX;
MACRO_PF PF_ISO;
MACRO_PF PF_LAT;
MACRO_PF PF_MAX;
MACRO_PF PF_NS;
MACRO_PF PF_OSI;
MACRO_PF PF_PUP;
MACRO_PF PF_SNA;
MACRO_PF PF_UNIX;
MACRO_PF PF_UNSPEC;
BOOL __pascal __far PIE(HDC, int, int, int, int, int, int, int, int);
MACRO_PLANES PLANES;
BOOL __pascal __far PLAYMETAFILE(HDC, HMETAFILE);
void __pascal __far PLAYMETAFILERECORD(HDC, HANDLETABLE far *, METARECORD far *, UINT);
MACRO_PM PM_NOREMOVE;
MACRO_PM PM_NOYIELD;
MACRO_PM PM_REMOVE;
BOOL __pascal __far POLYGON(HDC, const POINT far *, int);
MACRO_LINECAPS POLYGONALCAPS;
BOOL __pascal __far POLYLINE(HDC, const POINT far *, int);
BOOL __pascal __far POLYPOLYGON(HDC, const POINT far *, int far *, int);
BOOL __pascal __far POSTAPPMESSAGE(HTASK, UINT, WPARAM, LPARAM);
BOOL __pascal __far POSTMESSAGE(HWND, UINT, WPARAM, LPARAM);
void __pascal __far POSTQUITMESSAGE(int);
MACRO_POSTSCRIPT POSTSCRIPT_DATA;
MACRO_POSTSCRIPT POSTSCRIPT_IGNORE;
void __pascal __far POSTVIRTUALKEYEVENT(UINT, BOOL);
void __pascal __far POSTVIRTUALMOUSEEVENT(UINT, int, int);
UINT __pascal __far PRESTOCHANGOSELECTOR(UINT sourceSel, UINT destSel);
BOOL __pascal __far PRINTDLG(PRINTDLG far *);
MACRO_PRINTDLGORD PRINTDLGORD;
MACRO_SIMULATED PRINTER_FONTTYPE;
MACRO_PRNSETUPDLGORD PRNSETUPDLGORD;
REC __pascal __far PROCESSWRITING(HWND, LPRC);
void __pascal __far PROFCLEAR();
void __pascal __far PROFFINISH();
void __pascal __far PROFFLUSH();
int __pascal __far PROFINSCHK();
void __pascal __far PROFSAMPRATE(int, int);
void __pascal __far PROFSETUP(int, int);
void __pascal __far PROFSTART();
void __pascal __far PROFSTOP();
HRESULT __pascal __far PROGIDFROMCLSID(const CLSID far *const clsid, LPSTR far *lplpszProgID);
MACRO_QUALITY PROOF_QUALITY;
HRESULT __pascal __far PROPAGATERESULT(HRESULT hrPrev, SCODE scNew);
MACRO_PR PR_JOBSTATUS;
MACRO_PSF PSF_CHECKDISPLAYASICON;
MACRO_PSF PSF_DISABLEDISPLAYASICON;
MACRO_PSF PSF_SELECTPASTE;
MACRO_PSF PSF_SELECTPASTELINK;
MACRO_PSF PSF_SHOWHELP;
MACRO_PS PS_DASH;
MACRO_PS PS_DASHDOT;
MACRO_PS PS_DASHDOTDOT;
MACRO_PS PS_DOT;
MACRO_PS PS_INSIDEFRAME;
MACRO_PS_MAXLINKTYPES PS_MAXLINKTYPES;
MACRO_PS PS_NULL;
MACRO_PS PS_SOLID;
BOOL __pascal __far PTINRECT(const RECT far *, POINT);
BOOL __pascal __far PTINREGION(HRGN, int, int);
MACRO_PER_INCH PTS_PER_INCH;
BOOL __pascal __far PTVISIBLE(HDC, int, int);
MACRO_PWR PWR_CRITICALRESUME;
MACRO_PWR PWR_FAIL;
MACRO_PWR PWR_OK;
MACRO_PWR PWR_SUSPENDREQUEST;
MACRO_PWR PWR_SUSPENDRESUME;
MACRO_QID QID_SYNC;
MACRO_QS QS_ALLINPUT;
MACRO_QS QS_KEY;
MACRO_QS QS_MOUSE;
MACRO_QS QS_MOUSEBUTTON;
MACRO_QS QS_MOUSEMOVE;
MACRO_QS QS_PAINT;
MACRO_QS QS_POSTMESSAGE;
MACRO_QS QS_SENDMESSAGE;
MACRO_QS QS_TIMER;
BOOL __pascal __far QUERYABORT(HDC, int);
MACRO_DRAFTMODE QUERYESCSUPPORT;
HRESULT __pascal __far QUERYPATHOFREGTYPELIB(const GUID far *const guid, unsigned int wMaj, unsigned int wMin, LCID lcid, LPBSTR lpbstrPathName);
MACRO_NEWTRANSPARENT QUERYROPSUPPORT;
BOOL __pascal __far QUERYSENDMESSAGE(HANDLE h1, HANDLE h2, HANDLE h3, LPMSG lpmsg);
MACRO_R2 R2_BLACK;
MACRO_R2 R2_COPYPEN;
MACRO_R2 R2_MASKNOTPEN;
MACRO_R2 R2_MASKPEN;
MACRO_R2 R2_MASKPENNOT;
MACRO_R2 R2_MERGENOTPEN;
MACRO_R2 R2_MERGEPEN;
MACRO_R2 R2_MERGEPENNOT;
MACRO_R2 R2_NOP;
MACRO_R2 R2_NOT;
MACRO_R2 R2_NOTCOPYPEN;
MACRO_R2 R2_NOTMASKPEN;
MACRO_R2 R2_NOTMERGEPEN;
MACRO_R2 R2_NOTXORPEN;
MACRO_R2 R2_WHITE;
MACRO_R2 R2_XORPEN;
MACRO_RASTERCAPS RASTERCAPS;
MACRO_FONTTYPE RASTER_FONTTYPE;
MACRO_RCD RCD_BT;
MACRO_RCD RCD_DEFAULT;
MACRO_RCD RCD_LR;
MACRO_RCD RCD_RL;
MACRO_RCD RCD_TB;
MACRO_RCIP RCIP_ALLANSICHAR;
MACRO_RCIP RCIP_MASK;
MACRO_RCOR RCOR_LEFT;
MACRO_RCOR RCOR_NORMAL;
MACRO_RCOR RCOR_RIGHT;
MACRO_RCOR RCOR_UPSIDEDOWN;
MACRO_RCO RCO_BOXED;
MACRO_RCO RCO_COLDRECOG;
MACRO_RCO RCO_DISABLEGESMAP;
MACRO_RCO RCO_NOFLASHCURSOR;
MACRO_RCO RCO_NOFLASHUNKNOWN;
MACRO_RCO RCO_NOHIDECURSOR;
MACRO_RCO RCO_NOHOOK;
MACRO_RCO RCO_NOPOINTEREVENT;
MACRO_RCO RCO_NOSPACEBREAK;
MACRO_RCO RCO_SAVEALLDATA;
MACRO_RCO RCO_SAVEHPENDATA;
MACRO_RCO RCO_SUGGEST;
MACRO_RCO RCO_TABLETCOORD;
MACRO_RCP RCP_LEFTHAND;
MACRO_RCP RCP_MAPCHAR;
MACRO_RCRT RCRT_ALREADYPROCESSED;
MACRO_RCRT RCRT_DEFAULT;
MACRO_RCRT RCRT_GESTURE;
MACRO_RCRT RCRT_GESTURETOKEYS;
MACRO_RCRT RCRT_GESTURETRANSLATED;
MACRO_RCRT RCRT_NORECOG;
MACRO_RCRT RCRT_NOSYMBOLMATCH;
MACRO_RCRT RCRT_PRIVATE;
MACRO_RCRT RCRT_UNIDENTIFIED;
MACRO_RC RC_BANDING;
MACRO_RC RC_BIGFONT;
MACRO_RC RC_BITBLT;
MACRO_RC RC_BITMAP64;
MACRO_RC RC_DEVBITS;
MACRO_RC RC_DIBTODEV;
MACRO_RC RC_DI_BITMAP;
MACRO_RC RC_FLOODFILL;
MACRO_RC RC_GDI20_OUTPUT;
MACRO_RC RC_GDI20_STATE;
MACRO_RC_WDEFAULT RC_LDEFAULT;
MACRO_RC_WDEFAULT RC_LDEFAULTFLAGS;
MACRO_RC RC_OP_DX_OUTPUT;
MACRO_RC RC_PALETTE;
MACRO_RC RC_SAVEBITMAP;
MACRO_RC RC_SCALING;
MACRO_RC RC_STRETCHBLT;
MACRO_RC RC_STRETCHDIB;
MACRO_RC_WDEFAULT RC_WDEFAULT;
MACRO_RC_WDEFAULT RC_WDEFAULTFLAGS;
MACRO_RDW RDW_ALLCHILDREN;
MACRO_RDW RDW_ERASE;
MACRO_RDW RDW_ERASENOW;
MACRO_RDW RDW_FRAME;
MACRO_RDW RDW_INTERNALPAINT;
MACRO_RDW RDW_INVALIDATE;
MACRO_RDW RDW_NOCHILDREN;
MACRO_RDW RDW_NOERASE;
MACRO_RDW RDW_NOFRAME;
MACRO_RDW RDW_NOINTERNALPAINT;
MACRO_RDW RDW_UPDATENOW;
MACRO_RDW RDW_VALIDATE;
MACRO_READ READ;
HRESULT __pascal __far READCLASSSTG(LPSTORAGE pStg, CLSID far *pclsid);
HRESULT __pascal __far READCLASSSTM(LPSTREAM pStm, CLSID far *pclsid);
int __pascal __far READCOMM(int, void far *, int);
HRESULT __pascal __far READFMTUSERTYPESTG(LPSTORAGE pstg, CLIPFORMAT far *pcf, LPSTR far *lplpszUserType);
MACRO_READ_WRITE READ_WRITE;
UINT __pascal __far REALIZEPALETTE(HDC);
REC __pascal __far RECOGNIZE(LPRC);
REC __pascal __far RECOGNIZEDATA(LPRC, HPENDATA);
REC __pascal __far RECOGNIZEDATAINTERNAL(LPRC, HPENDATA, LPFUNCRESULTS);
REC __pascal __far RECOGNIZEINTERNAL(LPRC, LPFUNCRESULTS);
BOOL __pascal __far RECTANGLE(HDC, int, int, int, int);
BOOL __pascal __far RECTINREGION(HRGN, const RECT far *);
BOOL __pascal __far RECTVISIBLE(HDC, const RECT far *);
int __pascal __far RECV(SOCKET s, char far *buf, int len, int flags);
int __pascal __far RECVFROM(SOCKET s, char far *buf, int len, int flags, struct sockaddr far *from, int far *fromlen);
MACRO_REC REC_ABORT;
MACRO_REC REC_ALC;
MACRO_REC REC_BADEVENTREF;
MACRO_REC REC_BADHPENDATA;
MACRO_REC REC_BUFFERTOOSMALL;
MACRO_REC REC_BUSY;
MACRO_REC REC_CLVERIFY;
MACRO_REC REC_DEBUG;
MACRO_REC REC_DICT;
MACRO_REC REC_DONE;
MACRO_REC REC_ERRORLEVEL;
MACRO_REC REC_GUIDE;
MACRO_REC REC_HREC;
MACRO_REC REC_HWND;
MACRO_REC REC_INVALIDREF;
MACRO_REC REC_LANGUAGE;
MACRO_REC REC_NOCOLLECTION;
MACRO_REC REC_NOINPUT;
MACRO_REC REC_NOTABLET;
MACRO_REC REC_OEM;
MACRO_REC REC_OK;
MACRO_REC REC_OOM;
MACRO_REC REC_OVERFLOW;
MACRO_REC REC_PARAMERROR;
MACRO_REC REC_PCM;
MACRO_REC REC_POINTEREVENT;
MACRO_REC REC_RECTBOUND;
MACRO_REC REC_RECTEXCLUDE;
MACRO_REC REC_RESULTMODE;
MACRO_REC REC_TERMBOUND;
MACRO_REC REC_TERMEX;
MACRO_REC REC_TERMOEM;
MACRO_REC REC_TERMPENUP;
MACRO_REC REC_TERMRANGE;
MACRO_REC REC_TERMTIMEOUT;
BOOL __pascal __far REDISPLAYPENDATA(HDC, HPENDATA, LPPOINT, LPPOINT, int, DWORD);
BOOL __pascal __far REDRAWWINDOW(HWND hwnd, const RECT far *lprcUpdate, HRGN hrgnUpdate, UINT flags);
__int32 __pascal __far REGCLOSEKEY(HKEY);
tagREGCLS REGCLS_MULTIPLEUSE;
tagREGCLS REGCLS_MULTI_SEPARATE;
tagREGCLS REGCLS_SINGLEUSE;
__int32 __pascal __far REGCREATEKEY(HKEY, LPCSTR, HKEY far *);
MACRO_REGDB_E REGDB_E_CLASSNOTREG;
MACRO_REGDB REGDB_E_FIRST;
MACRO_REGDB_E REGDB_E_IIDNOTREG;
MACRO_REGDB_E REGDB_E_INVALIDVALUE;
MACRO_REGDB_E REGDB_E_KEYMISSING;
MACRO_REGDB REGDB_E_LAST;
MACRO_REGDB_E REGDB_E_READREGDB;
MACRO_REGDB_E REGDB_E_WRITEREGDB;
MACRO_REGDB REGDB_S_FIRST;
MACRO_REGDB REGDB_S_LAST;
__int32 __pascal __far REGDELETEKEY(HKEY, LPCSTR);
__int32 __pascal __far REGENUMKEY(HKEY, DWORD, LPSTR, DWORD);
HRESULT __pascal __far REGISTERACTIVEOBJECT(IUnknown far *punk, const CLSID far *const rclsid, void far *pvReserved, unsigned __int32 far *pdwRegister);
ATOM __pascal __far REGISTERCLASS(const WNDCLASS far *);
UINT __pascal __far REGISTERCLIPBOARDFORMAT(LPCSTR);
HRESULT __pascal __far REGISTERDRAGDROP(HWND hwnd, LPDROPTARGET pDropTarget);
BOOL __pascal __far REGISTERHATCHWINDOWCLASS(HINSTANCE hInst);
void __pascal __far REGISTERPENAPP(UINT, BOOL);
HRESULT __pascal __far REGISTERTYPELIB(ITypeLib far *ptlib, TCHAR far *szFullPath, TCHAR far *szHelpDir);
UINT __pascal __far REGISTERWINDOWMESSAGE(LPCSTR);
__int32 __pascal __far REGOPENKEY(HKEY, LPCSTR, HKEY far *);
__int32 __pascal __far REGQUERYVALUE(HKEY, LPCSTR, LPSTR, __int32 far *);
__int32 __pascal __far REGSETVALUE(HKEY, LPCSTR, DWORD, LPCSTR, DWORD);
MACRO_SIMULATED REGULAR_FONTTYPE;
MACRO_REG REG_SZ;
MACRO_ABSOLUTE RELATIVE;
void __pascal __far RELEASECAPTURE();
int __pascal __far RELEASEDC(HWND, HDC);
void __pascal __far RELEASESTGMEDIUM(LPSTGMEDIUM);
BOOL __pascal __far REMOVEFONTRESOURCE(LPCSTR);
BOOL __pascal __far REMOVEMENU(HMENU, UINT, UINT);
HANDLE __pascal __far REMOVEPROP(HWND, LPCSTR);
MACRO_REPLACEDLGORD REPLACEDLGORD;
HWND __pascal __far REPLACETEXT(FINDREPLACE far *);
void __pascal __far REPLYMESSAGE(LRESULT);
HDC __pascal __far RESETDC(HDC, const DEVMODE far *);
MACRO_RESETDEV RESETDEV;
int __pascal __far RESETORIGDC(HDC, int, LPRECT, LPRECT);
BOOL __pascal __far RESIZEPALETTE(HPALETTE, UINT);
BOOL __pascal __far RESIZEPENDATA(HPENDATA, LPRECT);
BOOL __pascal __far RESTOREDC(HDC, int);
MACRO_CTM RESTORE_CTM;
HRESULT __pascal __far REVOKEACTIVEOBJECT(unsigned __int32 dwRegister, void far *pvReserved);
HRESULT __pascal __far REVOKEDRAGDROP(HWND hwnd);
MACRO_RGN RGN_AND;
MACRO_RGN RGN_COPY;
MACRO_RGN RGN_DIFF;
MACRO_RGN RGN_OR;
MACRO_RGN RGN_XOR;
MACRO_ROTFLAGS ROTFLAGS_REGISTRATIONKEEPSALIVE;
BOOL __pascal __far ROUNDRECT(HDC, int, int, int, int, int, int);
MACRO_RPA RPA_DEFAULT;
MACRO_RPC RPC_E_CALL_CANCELED;
MACRO_RPC RPC_E_CALL_REJECTED;
MACRO_RPC RPC_E_CANTCALLOUT_AGAIN;
MACRO_RPC RPC_E_CANTCALLOUT_INASYNCCALL;
MACRO_RPC RPC_E_CANTCALLOUT_INEXTERNALCALL;
MACRO_RPC RPC_E_CANTPOST_INSENDCALL;
MACRO_RPC RPC_E_CANTTRANSMIT_CALL;
MACRO_RPC RPC_E_CLIENT_CANTMARSHAL_DATA;
MACRO_RPC RPC_E_CLIENT_CANTUNMARSHAL_DATA;
MACRO_RPC RPC_E_CLIENT_DIED;
MACRO_RPC RPC_E_CONNECTION_TERMINATED;
MACRO_RPC RPC_E_FIRST;
MACRO_RPC RPC_E_INVALID_DATA;
MACRO_RPC RPC_E_INVALID_DATAPACKET;
MACRO_RPC RPC_E_INVALID_PARAMETER;
MACRO_RPC RPC_E_SERVER_CANTMARSHAL_DATA;
MACRO_RPC RPC_E_SERVER_CANTUNMARSHAL_DATA;
MACRO_RPC RPC_E_SERVER_DIED;
MACRO_RPC RPC_E_UNEXPECTED;
MACRO_RRM RRM_COMPLETE;
MACRO_RRM RRM_NEWLINE;
MACRO_RRM RRM_STROKE;
MACRO_RRM RRM_SYMBOL;
MACRO_RRM RRM_WORD;
HRESULT __pascal __far SAFEARRAYACCESSDATA(SAFEARRAY far *psa, void far * far *ppvData);
HRESULT __pascal __far SAFEARRAYALLOCDATA(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYALLOCDESCRIPTOR(unsigned int cDims, SAFEARRAY far * far *ppsaOut);
HRESULT __pascal __far SAFEARRAYCOPY(SAFEARRAY far *psa, SAFEARRAY far * far *ppsaOut);
SAFEARRAY far *__pascal __far SAFEARRAYCREATE(VARTYPE vt, unsigned int cDims, SAFEARRAYBOUND far *rgsabound);
HRESULT __pascal __far SAFEARRAYDESTROY(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYDESTROYDATA(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYDESTROYDESCRIPTOR(SAFEARRAY far *psa);
unsigned int __pascal __far SAFEARRAYGETDIM(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYGETELEMENT(SAFEARRAY far *psa, __int32 far *rgIndices, void far *pv);
unsigned int __pascal __far SAFEARRAYGETELEMSIZE(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYGETLBOUND(SAFEARRAY far *psa, unsigned int nDim, __int32 far *plLbound);
HRESULT __pascal __far SAFEARRAYGETUBOUND(SAFEARRAY far *psa, unsigned int nDim, __int32 far *plUbound);
HRESULT __pascal __far SAFEARRAYLOCK(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYPUTELEMENT(SAFEARRAY far *psa, __int32 far *rgIndices, void far *pv);
HRESULT __pascal __far SAFEARRAYREDIM(SAFEARRAY far *psa, SAFEARRAYBOUND far *psaboundNew);
HRESULT __pascal __far SAFEARRAYUNACCESSDATA(SAFEARRAY far *psa);
HRESULT __pascal __far SAFEARRAYUNLOCK(SAFEARRAY far *psa);
int __pascal __far SAVEDC(HDC);
MACRO_CTM SAVE_CTM;
MACRO_SBS SBS_BOTTOMALIGN;
MACRO_SBS SBS_HORZ;
MACRO_SBS SBS_LEFTALIGN;
MACRO_SBS SBS_RIGHTALIGN;
MACRO_SBS SBS_SIZEBOX;
MACRO_SBS SBS_SIZEBOXBOTTOMRIGHTALIGN;
MACRO_SBS SBS_SIZEBOXTOPLEFTALIGN;
MACRO_SBS SBS_TOPALIGN;
MACRO_SBS SBS_VERT;
MACRO_SB SB_BOTH;
MACRO_SB SB_BOTTOM;
MACRO_SB SB_CTL;
MACRO_SB SB_ENDSCROLL;
MACRO_SB SB_HORZ;
MACRO_SB SB_LEFT;
MACRO_SB SB_LINEDOWN;
MACRO_SB SB_LINELEFT;
MACRO_SB SB_LINERIGHT;
MACRO_SB SB_LINEUP;
MACRO_SB SB_PAGEDOWN;
MACRO_SB SB_PAGELEFT;
MACRO_SB SB_PAGERIGHT;
MACRO_SB SB_PAGEUP;
MACRO_SB SB_RIGHT;
MACRO_SB SB_THUMBPOSITION;
MACRO_SB SB_THUMBTRACK;
MACRO_SB SB_TOP;
MACRO_SB SB_VERT;
DWORD __pascal __far SCALEVIEWPORTEXT(HDC, int, int, int, int);
BOOL __pascal __far SCALEVIEWPORTEXTEX(HDC, int, int, int, int, SIZE far *);
DWORD __pascal __far SCALEWINDOWEXT(HDC, int, int, int, int);
BOOL __pascal __far SCALEWINDOWEXTEX(HDC, int, int, int, int, SIZE far *);
BOOL __pascal __far SCREENSAVERCONFIGUREDIALOG(HWND, UINT, WPARAM, LPARAM);
LRESULT __pascal __far SCREENSAVERPROC(HWND, unsigned int, UINT, LPARAM);
void __pascal __far SCREENTOCLIENT(HWND, POINT far *);
MACRO_SIMULATED SCREEN_FONTTYPE;
BOOL __pascal __far SCROLLDC(HDC, int, int, const RECT far *, const RECT far *, HRGN, RECT far *);
void __pascal __far SCROLLWINDOW(HWND, int, int, const RECT far *, const RECT far *);
int __pascal __far SCROLLWINDOWEX(HWND hwnd, int dx, int dy, const RECT far *prcScroll, const RECT far *prcClip, HRGN hrgnUpdate, RECT far *prcUpdate, UINT flags);
MACRO_SC SC_ARRANGE;
MACRO_SC SC_CLOSE;
MACRO_SC SC_HOTKEY;
MACRO_SC SC_HSCROLL;
MACRO_SC SC_ICON;
MACRO_SC SC_KEYMENU;
MACRO_SC SC_MAXIMIZE;
MACRO_SC SC_MINIMIZE;
MACRO_SC SC_MOUSEMENU;
MACRO_SC SC_MOVE;
MACRO_SC SC_NEXTWINDOW;
MACRO_SC SC_PREVWINDOW;
MACRO_SC SC_RESTORE;
MACRO_SC SC_SCREENSAVE;
MACRO_SC SC_SIZE;
MACRO_SC SC_TASKLIST;
MACRO_SC SC_VSCROLL;
MACRO_SC SC_ZOOM;
MACRO_SDS SDS_DIALOG;
MACRO_SDS SDS_MENU;
MACRO_SDS SDS_NOTASKQUEUE;
MACRO_SDS SDS_SYSMODAL;
MACRO_SDS SDS_TASKLOCKED;
int __pascal __far SELECT(int nfds, fd_set far *readfds, fd_set far *writefds, fd_set far *exceptfds, const struct timeval far *timeout);
int __pascal __far SELECTCLIPRGN(HDC, HRGN);
MACRO_SELECTDIB SELECTDIB;
HGDIOBJ __pascal __far SELECTOBJECT(HDC, HGDIOBJ);
HPALETTE __pascal __far SELECTPALETTE(HDC, HPALETTE, BOOL);
MACRO_SELECTPAPERSOURCE SELECTPAPERSOURCE;
MACRO_SEM SEM_FAILCRITICALERRORS;
MACRO_SEM SEM_NOGPFAULTERRORBOX;
MACRO_SEM SEM_NOOPENFILEERRORBOX;
int __pascal __far SEND(SOCKET s, const char far *buf, int len, int flags);
LRESULT __pascal __far SENDDLGITEMMESSAGE(HWND, int, UINT, WPARAM, LPARAM);
LRESULT __pascal __far SENDDRIVERMESSAGE(HDRVR hDriver, UINT message, LPARAM lParam1, LPARAM lParam2);
LRESULT __pascal __far SENDMESSAGE(HWND, UINT, WPARAM, LPARAM);
int __pascal __far SENDTO(SOCKET s, const char far *buf, int len, int flags, const struct sockaddr far *to, int tolen);
tagSERVERCALL SERVERCALL_ISHANDLED;
tagSERVERCALL SERVERCALL_REJECTED;
tagSERVERCALL SERVERCALL_RETRYLATER;
int __pascal __far SETABORTPROC(HDC, ABORTPROC);
HWND __pascal __far SETACTIVEWINDOW(HWND);
MACRO_SETALLJUSTVALUES SETALLJUSTVALUES;
__int32 __pascal __far SETBITMAPBITS(HBITMAP, DWORD, const void far *);
DWORD __pascal __far SETBITMAPDIMENSION(HBITMAP, int, int);
BOOL __pascal __far SETBITMAPDIMENSIONEX(HBITMAP, int, int, SIZE far *);
COLORREF __pascal __far SETBKCOLOR(HDC, COLORREF);
int __pascal __far SETBKMODE(HDC, int);
UINT __pascal __far SETBOUNDSRECT(HDC hDC, const RECT far *lprcBounds, UINT flags);
DWORD __pascal __far SETBRUSHORG(HDC, int, int);
HWND __pascal __far SETCAPTURE(HWND);
void __pascal __far SETCARETBLINKTIME(UINT);
void __pascal __far SETCARETPOS(int, int);
MACRO_SETCHARSET SETCHARSET;
__int32 __pascal __far SETCLASSLONG(HWND, int, __int32);
WORD __pascal __far SETCLASSWORD(HWND, int, WORD);
HANDLE __pascal __far SETCLIPBOARDDATA(UINT, HANDLE);
HWND __pascal __far SETCLIPBOARDVIEWER(HWND);
MACRO_NEXTBAND SETCOLORTABLE;
int __pascal __far SETCOMMBREAK(int);
UINT far *__pascal __far SETCOMMEVENTMASK(int, UINT);
int __pascal __far SETCOMMSTATE(const DCB far *);
HRESULT __pascal __far SETCONVERTSTG(LPSTORAGE pStg, BOOL fConvert);
MACRO_SETCOPYCOUNT SETCOPYCOUNT;
HCURSOR __pascal __far SETCURSOR(HCURSOR);
void __pascal __far SETCURSORPOS(int, int);
int __pascal __far SETDCTOANISOTROPIC(HDC hDC, LPRECT lprcPhysical, LPRECT lprcLogical, LPRECT lprcWindowOld, LPRECT lprcViewportOld);
int __pascal __far SETDCTODRAWINHIMETRICRECT(HDC, LPRECT, LPRECT, LPRECT, LPRECT);
int __pascal __far SETDIBITS(HDC, HBITMAP, UINT, UINT, const void far *, BITMAPINFO far *, UINT);
int __pascal __far SETDIBITSTODEVICE(HDC, int, int, int, int, int, int, UINT, UINT, void far *, BITMAPINFO far *, UINT);
MACRO_ENUMPAPERBINS SETDIBSCALING;
void __pascal __far SETDLGITEMINT(HWND, int, UINT, BOOL);
void __pascal __far SETDLGITEMTEXT(HWND, int, LPCSTR);
void __pascal __far SETDOUBLECLICKTIME(UINT);
MACRO_SETDTR SETDTR;
int __pascal __far SETENVIRONMENT(LPCSTR, const void far *, UINT);
UINT __pascal __far SETERRORMODE(UINT);
HWND __pascal __far SETFOCUS(HWND);
UINT __pascal __far SETGLOBALRC(LPRC, LPSTR, LPSTR);
UINT __pascal __far SETHANDLECOUNT(UINT);
void __pascal __far SETHATCHRECT(HWND hWndHatch, LPRECT lprcHatchRect);
void __pascal __far SETHATCHWINDOWSIZE(HWND hWndHatch, LPRECT lprcIPObjRect, LPRECT lprcClipRect, LPPOINT lpptOffset);
MACRO_SETKERNTRACK SETKERNTRACK;
void __pascal __far SETKEYBOARDSTATE(BYTE far *);
MACRO_SETLINECAP SETLINECAP;
MACRO_SETLINEJOIN SETLINEJOIN;
int __pascal __far SETMAPMODE(HDC, int);
DWORD __pascal __far SETMAPPERFLAGS(HDC, DWORD);
BOOL __pascal __far SETMENU(HWND, HMENU);
BOOL __pascal __far SETMENUITEMBITMAPS(HMENU, UINT, UINT, HBITMAP, HBITMAP);
BOOL __pascal __far SETMESSAGEQUEUE(int);
HMETAFILE __pascal __far SETMETAFILEBITS(HGLOBAL);
HMETAFILE __pascal __far SETMETAFILEBITSBETTER(HGLOBAL);
MACRO_SETMITERLIMIT SETMITERLIMIT;
UINT __pascal __far SETPALETTEENTRIES(HPALETTE, UINT, UINT, const PALETTEENTRY far *);
HWND __pascal __far SETPARENT(HWND, HWND);
BOOL __pascal __far SETPENHOOK(HKP, LPFNRAWHOOK);
COLORREF __pascal __far SETPIXEL(HDC, int, int, COLORREF);
int __pascal __far SETPOLYFILLMODE(HDC, int);
BOOL __pascal __far SETPROP(HWND, LPCSTR, HANDLE);
BOOL __pascal __far SETRECOGHOOK(UINT, UINT, HWND);
void __pascal __far SETRECT(RECT far *, int, int, int, int);
void __pascal __far SETRECTEMPTY(RECT far *);
void __pascal __far SETRECTRGN(HRGN, int, int, int, int);
RSRCHDLRPROC __pascal __far SETRESOURCEHANDLER(HINSTANCE, LPCSTR, RSRCHDLRPROC);
int __pascal __far SETROP2(HDC, int);
MACRO_SETRTS SETRTS;
int __pascal __far SETSCROLLPOS(HWND, int, int, BOOL);
void __pascal __far SETSCROLLRANGE(HWND, int, int, int, BOOL);
UINT __pascal __far SETSELECTORBASE(UINT, DWORD);
UINT __pascal __far SETSELECTORLIMIT(UINT, DWORD);
int __pascal __far SETSOCKOPT(SOCKET s, int level, int optname, const char far *optval, int optlen);
int __pascal __far SETSOUNDNOISE(int, int);
int __pascal __far SETSTRETCHBLTMODE(HDC, int);
__int32 __pascal __far SETSWAPAREASIZE(UINT);
void __pascal __far SETSYSCOLORS(int, const int far *, const COLORREF far *);
HWND __pascal __far SETSYSMODALWINDOW(HWND);
UINT __pascal __far SETSYSTEMPALETTEUSE(HDC, UINT);
UINT __pascal __far SETTEXTALIGN(HDC, UINT);
int __pascal __far SETTEXTCHARACTEREXTRA(HDC, int);
COLORREF __pascal __far SETTEXTCOLOR(HDC, COLORREF);
int __pascal __far SETTEXTJUSTIFICATION(HDC, int, int);
UINT __pascal __far SETTIMER(HWND, UINT, UINT, TIMERPROC);
DWORD __pascal __far SETVIEWPORTEXT(HDC, int, int);
BOOL __pascal __far SETVIEWPORTEXTEX(HDC, int, int, SIZE far *);
DWORD __pascal __far SETVIEWPORTORG(HDC, int, int);
BOOL __pascal __far SETVIEWPORTORGEX(HDC, int, int, POINT far *);
int __pascal __far SETVOICEACCENT(int, int, int, int, int);
int __pascal __far SETVOICEENVELOPE(int, int, int);
int __pascal __far SETVOICENOTE(int, int, int, int);
int __pascal __far SETVOICEQUEUESIZE(int, int);
int __pascal __far SETVOICESOUND(int, DWORD, int);
int __pascal __far SETVOICETHRESHOLD(int, int);
BOOL __pascal __far SETWINDEBUGINFO(const WINDEBUGINFO far *lpwdi);
DWORD __pascal __far SETWINDOWEXT(HDC, int, int);
BOOL __pascal __far SETWINDOWEXTEX(HDC, int, int, SIZE far *);
__int32 __pascal __far SETWINDOWLONG(HWND, int, __int32);
DWORD __pascal __far SETWINDOWORG(HDC, int, int);
BOOL __pascal __far SETWINDOWORGEX(HDC, int, int, POINT far *);
BOOL __pascal __far SETWINDOWPLACEMENT(HWND, const WINDOWPLACEMENT far *);
BOOL __pascal __far SETWINDOWPOS(HWND, HWND, int, int, int, int, UINT);
HOOKPROC __pascal __far SETWINDOWSHOOK(int, HOOKPROC);
HHOOK __pascal __far SETWINDOWSHOOKEX(int idHook, HOOKPROC lpfn, HINSTANCE hInstance, HTASK hTask);
void __pascal __far SETWINDOWTEXT(HWND, LPCSTR);
WORD __pascal __far SETWINDOWWORD(HWND, int, WORD);
MACRO_SETXOFF SETXOFF;
MACRO_SETXOFF SETXON;
MACRO_SET SET_ARC_DIRECTION;
MACRO_SET SET_BACKGROUND_COLOR;
MACRO_SET_CLIP SET_BOUNDS;
MACRO_SET_CLIP SET_CLIP_BOX;
MACRO_SET SET_POLY_MODE;
MACRO_SET SET_SCREEN_ANGLE;
MACRO_SET SET_SPREAD;
MACRO_SEVERITY SEVERITY_ERROR;
MACRO_SEVERITY SEVERITY_SUCCESS;
MACRO_SE SE_ERR_ASSOCINCOMPLETE;
MACRO_SE SE_ERR_DDEBUSY;
MACRO_SE SE_ERR_DDEFAIL;
MACRO_SE SE_ERR_DDETIMEOUT;
MACRO_SE SE_ERR_NOASSOC;
MACRO_SE SE_ERR_SHARE;
MACRO_SGRC SGRC_DICTIONARY;
MACRO_SGRC SGRC_INIFILE;
MACRO_SGRC SGRC_OK;
MACRO_SGRC SGRC_PARAMERROR;
MACRO_SGRC SGRC_RC;
MACRO_SGRC SGRC_RECOGNIZER;
MACRO_SGRC SGRC_USER;
HINSTANCE __pascal __far SHELLEXECUTE(HWND hwnd, LPCSTR lpOperation, LPCSTR lpFile, LPCSTR lpParameters, LPCSTR lpDirectory, int iShowCmd);
MACRO_CHARSET SHIFTJIS_CHARSET;
void __pascal __far SHOWCARET(HWND);
int __pascal __far SHOWCURSOR(BOOL);
BOOL __pascal __far SHOWKEYBOARD(HWND, UINT, LPPOINT, LPSKBINFO);
void __pascal __far SHOWOWNEDPOPUPS(HWND, BOOL);
void __pascal __far SHOWSCROLLBAR(HWND, int, BOOL);
BOOL __pascal __far SHOWWINDOW(HWND, int);
MACRO_SHOW SHOW_FULLSCREEN;
MACRO_SHOW SHOW_ICONWINDOW;
MACRO_SHOW SHOW_OPENNOACTIVATE;
MACRO_SHOW SHOW_OPENWINDOW;
int __pascal __far SHUTDOWN(SOCKET s, int how);
MACRO_ERROR SIMPLEREGION;
MACRO_SIMULATED SIMULATED_FONTTYPE;
MACRO_SIZENORMAL SIZEFULLSCREEN;
MACRO_SIZENORMAL SIZEICONIC;
MACRO_SIZENORMAL SIZENORMAL;
DWORD __pascal __far SIZEOFRESOURCE(HINSTANCE, HRSRC);
MACRO_SIZEPALETTE SIZEPALETTE;
MACRO_SIZEZOOMSHOW SIZEZOOMHIDE;
MACRO_SIZEZOOMSHOW SIZEZOOMSHOW;
MACRO_SIZE SIZE_MAXHIDE;
MACRO_SIZE SIZE_MAXIMIZED;
MACRO_SIZE SIZE_MAXSHOW;
MACRO_SIZE SIZE_MINIMIZED;
MACRO_SIZE SIZE_RESTORED;
MACRO_SKB SKB_BASIC;
MACRO_SKB SKB_CENTER;
MACRO_SKB SKB_FULL;
MACRO_SKB SKB_HIDE;
MACRO_SKB SKB_MINIMIZE;
MACRO_SKB SKB_MOVE;
MACRO_SKB SKB_NUMPAD;
MACRO_SKB SKB_QUERY;
MACRO_SKB SKB_SHOW;
MACRO_SKN SKN_CHANGED;
MACRO_SKN SKN_MINCHANGED;
MACRO_SKN SKN_PADCHANGED;
MACRO_SKN SKN_POSCHANGED;
MACRO_SKN SKN_TERMINATED;
MACRO_SKN SKN_VISCHANGED;
MACRO_SM SM_CMETRICS;
MACRO_SM SM_CXBORDER;
MACRO_SM SM_CXCURSOR;
MACRO_SM SM_CXDLGFRAME;
MACRO_SM SM_CXDOUBLECLK;
MACRO_SM SM_CXFRAME;
MACRO_SM SM_CXFULLSCREEN;
MACRO_SM SM_CXHSCROLL;
MACRO_SM SM_CXHTHUMB;
MACRO_SM SM_CXICON;
MACRO_SM SM_CXICONSPACING;
MACRO_SM SM_CXMIN;
MACRO_SM SM_CXMINTRACK;
MACRO_SM SM_CXSCREEN;
MACRO_SM SM_CXSIZE;
MACRO_SM SM_CXVSCROLL;
MACRO_SM SM_CYBORDER;
MACRO_SM SM_CYCAPTION;
MACRO_SM SM_CYCURSOR;
MACRO_SM SM_CYDLGFRAME;
MACRO_SM SM_CYDOUBLECLK;
MACRO_SM SM_CYFRAME;
MACRO_SM SM_CYFULLSCREEN;
MACRO_SM SM_CYHSCROLL;
MACRO_SM SM_CYICON;
MACRO_SM SM_CYICONSPACING;
MACRO_SM SM_CYKANJIWINDOW;
MACRO_SM SM_CYMENU;
MACRO_SM SM_CYMIN;
MACRO_SM SM_CYMINTRACK;
MACRO_SM SM_CYSCREEN;
MACRO_SM SM_CYSIZE;
MACRO_SM SM_CYVSCROLL;
MACRO_SM SM_CYVTHUMB;
MACRO_SM SM_DBCSENABLED;
MACRO_SM SM_DEBUG;
MACRO_SM SM_MENUDROPALIGNMENT;
MACRO_SM SM_MOUSEPRESENT;
MACRO_SM SM_PENWINDOWS;
MACRO_SM SM_RESERVED1;
MACRO_SM SM_RESERVED2;
MACRO_SM SM_RESERVED3;
MACRO_SM SM_RESERVED4;
MACRO_SM SM_SWAPBUTTON;
BOOL __pascal __far SNDPLAYSOUND(LPCSTR lpszSoundName, UINT uFlags);
MACRO_SND SND_ASYNC;
MACRO_SND SND_LOOP;
MACRO_SND SND_MEMORY;
MACRO_SND SND_NODEFAULT;
MACRO_SND SND_NOSTOP;
MACRO_SND SND_SYNC;
SOCKET __pascal __far SOCKET(int af, int type, int protocol);
MACRO_SOCKET SOCKET_ERROR;
MACRO_SOCK SOCK_DGRAM;
MACRO_SOCK SOCK_RAW;
MACRO_SOCK SOCK_RDM;
MACRO_SOCK SOCK_SEQPACKET;
MACRO_SOCK SOCK_STREAM;
MACRO_SOL SOL_SOCKET;
MACRO_SOMAXCONN SOMAXCONN;
MACRO_SO SO_ACCEPTCONN;
MACRO_SO SO_BROADCAST;
MACRO_SO SO_CONNDATA;
MACRO_SO SO_CONNDATALEN;
MACRO_SO SO_CONNOPT;
MACRO_SO SO_CONNOPTLEN;
MACRO_SO SO_DEBUG;
MACRO_SO SO_DISCDATA;
MACRO_SO SO_DISCDATALEN;
MACRO_SO SO_DISCOPT;
MACRO_SO SO_DISCOPTLEN;
MACRO_SO SO_DONTLINGER;
MACRO_SO SO_DONTROUTE;
MACRO_SO SO_ERROR;
MACRO_SO SO_KEEPALIVE;
MACRO_SO SO_LINGER;
MACRO_SO SO_MAXDG;
MACRO_SO SO_MAXPATHDG;
MACRO_SO SO_OOBINLINE;
MACRO_SO SO_OPENTYPE;
MACRO_SO SO_RCVBUF;
MACRO_SO SO_RCVLOWAT;
MACRO_SO SO_RCVTIMEO;
MACRO_SO SO_REUSEADDR;
MACRO_SO SO_SNDBUF;
MACRO_SO SO_SNDLOWAT;
MACRO_SO SO_SNDTIMEO;
MACRO_SO SO_SYNCHRONOUS_ALERT;
MACRO_SO SO_SYNCHRONOUS_NONALERT;
MACRO_SO SO_TYPE;
MACRO_SO SO_USELOOPBACK;
MACRO_MARKPARITY SPACEPARITY;
MACRO_SPIF SPIF_SENDWININICHANGE;
MACRO_SPIF SPIF_UPDATEINIFILE;
MACRO_SPI SPI_GETBEEP;
MACRO_SPI SPI_GETBORDER;
MACRO_SPI SPI_GETFASTTASKSWITCH;
MACRO_SPI SPI_GETGRIDGRANULARITY;
MACRO_SPI SPI_GETICONTITLELOGFONT;
MACRO_SPI SPI_GETICONTITLEWRAP;
MACRO_SPI SPI_GETKEYBOARDDELAY;
MACRO_SPI SPI_GETKEYBOARDSPEED;
MACRO_SPI SPI_GETMENUDROPALIGNMENT;
MACRO_SPI SPI_GETMOUSE;
MACRO_SPI SPI_GETSCREENSAVEACTIVE;
MACRO_SPI SPI_GETSCREENSAVETIMEOUT;
MACRO_SPI SPI_ICONHORIZONTALSPACING;
MACRO_SPI SPI_ICONVERTICALSPACING;
MACRO_SPI SPI_LANGDRIVER;
MACRO_SPI SPI_SETBEEP;
MACRO_SPI SPI_SETBORDER;
MACRO_SPI SPI_SETDESKPATTERN;
MACRO_SPI SPI_SETDESKWALLPAPER;
MACRO_SPI SPI_SETDOUBLECLICKTIME;
MACRO_SPI SPI_SETDOUBLECLKHEIGHT;
MACRO_SPI SPI_SETDOUBLECLKWIDTH;
MACRO_SPI SPI_SETFASTTASKSWITCH;
MACRO_SPI SPI_SETGRIDGRANULARITY;
MACRO_SPI SPI_SETICONTITLELOGFONT;
MACRO_SPI SPI_SETICONTITLEWRAP;
MACRO_SPI SPI_SETKEYBOARDDELAY;
MACRO_SPI SPI_SETKEYBOARDSPEED;
MACRO_SPI SPI_SETMENUDROPALIGNMENT;
MACRO_SPI SPI_SETMOUSE;
MACRO_SPI SPI_SETMOUSEBUTTONSWAP;
MACRO_SPI SPI_SETSCREENSAVEACTIVE;
MACRO_SPI SPI_SETSCREENSAVETIMEOUT;
HANDLE __pascal __far SPOOLFILE(LPSTR, LPSTR, LPSTR, LPSTR);
MACRO_SP SP_APPABORT;
MACRO_SP SP_ERROR;
MACRO_SP SP_NOTREPORTED;
MACRO_SP SP_OUTOFDISK;
MACRO_SP SP_OUTOFMEMORY;
MACRO_SP SP_USERABORT;
RETCODE __pascal __far SQLALLOCCONNECT(HENV henv, HDBC far *phdbc);
RETCODE __pascal __far SQLALLOCENV(HENV far *phenv);
RETCODE __pascal __far SQLALLOCSTMT(HDBC hdbc, HSTMT far *phstmt);
RETCODE __pascal __far SQLBINDCOL(HSTMT hstmt, UWORD icol, SWORD fCType, PTR rgbValue, SDWORD cbValueMax, SDWORD far *pcbValue);
RETCODE __pascal __far SQLBINDPARAMETER(HSTMT hstmt, UWORD ipar, SWORD fParamType, SWORD fCType, SWORD fSqlType, UDWORD cbColDef, SWORD ibScale, PTR rgbValue, SDWORD cbValueMax, SDWORD far *pcbValue);
RETCODE __pascal __far SQLBROWSECONNECT(HDBC hdbc, UCHAR far *szConnStrIn, SWORD cbConnStrIn, UCHAR far *szConnStrOut, SWORD cbConnStrOutMax, SWORD far *pcbConnStrOut);
RETCODE __pascal __far SQLCANCEL(HSTMT hstmt);
RETCODE __pascal __far SQLCOLATTRIBUTES(HSTMT hstmt, UWORD icol, UWORD fDescType, PTR rgbDesc, SWORD cbDescMax, SWORD far *pcbDesc, SDWORD far *pfDesc);
RETCODE __pascal __far SQLCOLUMNPRIVILEGES(HSTMT hstmt, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName, UCHAR far *szColumnName, SWORD cbColumnName);
RETCODE __pascal __far SQLCOLUMNS(HSTMT hstmt, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName, UCHAR far *szColumnName, SWORD cbColumnName);
BOOL __pascal __far SQLCONFIGDATASOURCE(HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszAttributes);
RETCODE __pascal __far SQLCONNECT(HDBC hdbc, UCHAR far *szDSN, SWORD cbDSN, UCHAR far *szUID, SWORD cbUID, UCHAR far *szAuthStr, SWORD cbAuthStr);
BOOL __pascal __far SQLCREATEDATASOURCE(HWND hwndParent, LPCSTR lpszDSN);
RETCODE __pascal __far SQLDATASOURCES(HENV henv, UWORD fDirection, UCHAR far *szDSN, SWORD cbDSNMax, SWORD far *pcbDSN, UCHAR far *szDescription, SWORD cbDescriptionMax, SWORD far *pcbDescription);
RETCODE __pascal __far SQLDESCRIBECOL(HSTMT hstmt, UWORD icol, UCHAR far *szColName, SWORD cbColNameMax, SWORD far *pcbColName, SWORD far *pfSqlType, UDWORD far *pcbColDef, SWORD far *pibScale, SWORD far *pfNullable);
RETCODE __pascal __far SQLDESCRIBEPARAM(HSTMT hstmt, UWORD ipar, SWORD far *pfSqlType, UDWORD far *pcbColDef, SWORD far *pibScale, SWORD far *pfNullable);
RETCODE __pascal __far SQLDISCONNECT(HDBC hdbc);
RETCODE __pascal __far SQLDRIVERCONNECT(HDBC hdbc, HWND hwnd, UCHAR far *szConnStrIn, SWORD cbConnStrIn, UCHAR far *szConnStrOut, SWORD cbConnStrOutMax, SWORD far *pcbConnStrOut, UWORD fDriverCompletion);
RETCODE __pascal __far SQLDRIVERS(HENV henv, UWORD fDirection, UCHAR far *szDriverDesc, SWORD cbDriverDescMax, SWORD far *pcbDriverDesc, UCHAR far *szDriverAttributes, SWORD cbDrvrAttrMax, SWORD far *pcbDrvrAttr);
RETCODE __pascal __far SQLERROR(HENV henv, HDBC hdbc, HSTMT hstmt, UCHAR far *szSqlState, SDWORD far *pfNativeError, UCHAR far *szErrorMsg, SWORD cbErrorMsgMax, SWORD far *pcbErrorMsg);
RETCODE __pascal __far SQLEXECDIRECT(HSTMT hstmt, UCHAR far *szSqlStr, SDWORD cbSqlStr);
RETCODE __pascal __far SQLEXECUTE(HSTMT hstmt);
RETCODE __pascal __far SQLEXTENDEDFETCH(HSTMT hstmt, UWORD fFetchType, SDWORD irow, UDWORD far *pcrow, UWORD far *rgfRowStatus);
RETCODE __pascal __far SQLFETCH(HSTMT hstmt);
RETCODE __pascal __far SQLFOREIGNKEYS(HSTMT hstmt, UCHAR far *szPkTableQualifier, SWORD cbPkTableQualifier, UCHAR far *szPkTableOwner, SWORD cbPkTableOwner, UCHAR far *szPkTableName, SWORD cbPkTableName, UCHAR far *szFkTableQualifier, SWORD cbFkTableQualifier, UCHAR far *szFkTableOwner, SWORD cbFkTableOwner, UCHAR far *szFkTableName, SWORD cbFkTableName);
RETCODE __pascal __far SQLFREECONNECT(HDBC hdbc);
RETCODE __pascal __far SQLFREEENV(HENV henv);
RETCODE __pascal __far SQLFREESTMT(HSTMT hstmt, UWORD fOption);
BOOL __pascal __far SQLGETAVAILABLEDRIVERS(LPCSTR lpszInfFile, LPSTR lpszBuf, WORD cbBufMax, WORD far *pcbBufOut);
RETCODE __pascal __far SQLGETCONNECTOPTION(HDBC hdbc, UWORD fOption, PTR pvParam);
RETCODE __pascal __far SQLGETCURSORNAME(HSTMT hstmt, UCHAR far *szCursor, SWORD cbCursorMax, SWORD far *pcbCursor);
RETCODE __pascal __far SQLGETDATA(HSTMT hstmt, UWORD icol, SWORD fCType, PTR rgbValue, SDWORD cbValueMax, SDWORD far *pcbValue);
RETCODE __pascal __far SQLGETFUNCTIONS(HDBC hdbc, UWORD fFunction, UWORD far *pfExists);
RETCODE __pascal __far SQLGETINFO(HDBC hdbc, UWORD fInfoType, PTR rgbInfoValue, SWORD cbInfoValueMax, SWORD far *pcbInfoValue);
BOOL __pascal __far SQLGETINSTALLEDDRIVERS(LPSTR lpszBuf, WORD cbBufMax, WORD far *pcbBufOut);
RETCODE __pascal __far SQLGETSTMTOPTION(HSTMT hstmt, UWORD fOption, PTR pvParam);
BOOL __pascal __far SQLGETTRANSLATOR(HWND hwnd, LPSTR lpszName, WORD cbNameMax, WORD far *pcbNameOut, LPSTR lpszPath, WORD cbPathMax, WORD far *pcbPathOut, DWORD far *pvOption);
RETCODE __pascal __far SQLGETTYPEINFO(HSTMT hstmt, SWORD fSqlType);
BOOL __pascal __far SQLINSTALLDRIVER(LPCSTR lpszInfFile, LPCSTR lpszDriver, LPSTR lpszPath, WORD cbPathMax, WORD far *pcbPathOut);
BOOL __pascal __far SQLINSTALLDRIVERMANAGER(LPSTR lpszPath, WORD cbPathMax, WORD far *pcbPathOut);
BOOL __pascal __far SQLINSTALLODBC(HWND hwndParent, LPCSTR lpszInfFile, LPCSTR lpszSrcPath, LPCSTR lpszDrivers);
BOOL __pascal __far SQLMANAGEDATASOURCES(HWND hwndParent);
RETCODE __pascal __far SQLMORERESULTS(HSTMT hstmt);
RETCODE __pascal __far SQLNATIVESQL(HDBC hdbc, UCHAR far *szSqlStrIn, SDWORD cbSqlStrIn, UCHAR far *szSqlStr, SDWORD cbSqlStrMax, SDWORD far *pcbSqlStr);
RETCODE __pascal __far SQLNUMPARAMS(HSTMT hstmt, SWORD far *pcpar);
RETCODE __pascal __far SQLNUMRESULTCOLS(HSTMT hstmt, SWORD far *pccol);
RETCODE __pascal __far SQLPARAMDATA(HSTMT hstmt, PTR far *prgbValue);
RETCODE __pascal __far SQLPARAMOPTIONS(HSTMT hstmt, UDWORD crow, UDWORD far *pirow);
RETCODE __pascal __far SQLPREPARE(HSTMT hstmt, UCHAR far *szSqlStr, SDWORD cbSqlStr);
RETCODE __pascal __far SQLPRIMARYKEYS(HSTMT hstmt, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName);
RETCODE __pascal __far SQLPROCEDURECOLUMNS(HSTMT hstmt, UCHAR far *szProcQualifier, SWORD cbProcQualifier, UCHAR far *szProcOwner, SWORD cbProcOwner, UCHAR far *szProcName, SWORD cbProcName, UCHAR far *szColumnName, SWORD cbColumnName);
RETCODE __pascal __far SQLPROCEDURES(HSTMT hstmt, UCHAR far *szProcQualifier, SWORD cbProcQualifier, UCHAR far *szProcOwner, SWORD cbProcOwner, UCHAR far *szProcName, SWORD cbProcName);
RETCODE __pascal __far SQLPUTDATA(HSTMT hstmt, PTR rgbValue, SDWORD cbValue);
BOOL __pascal __far SQLREMOVEDEFAULTDATASOURCE();
BOOL __pascal __far SQLREMOVEDSNFROMINI(LPCSTR lpszDSN);
RETCODE __pascal __far SQLROWCOUNT(HSTMT hstmt, SDWORD far *pcrow);
RETCODE __pascal __far SQLSETCONNECTOPTION(HDBC hdbc, UWORD fOption, UDWORD vParam);
RETCODE __pascal __far SQLSETCURSORNAME(HSTMT hstmt, UCHAR far *szCursor, SWORD cbCursor);
RETCODE __pascal __far SQLSETPARAM(HSTMT hstmt, UWORD ipar, SWORD fCType, SWORD fSqlType, UDWORD cbColDef, SWORD ibScale, PTR rgbValue, SDWORD far *pcbValue);
RETCODE __pascal __far SQLSETPOS(HSTMT hstmt, UWORD irow, UWORD fOption, UWORD fLock);
RETCODE __pascal __far SQLSETSCROLLOPTIONS(HSTMT hstmt, UWORD fConcurrency, SDWORD crowKeyset, UWORD crowRowset);
RETCODE __pascal __far SQLSETSTMTOPTION(HSTMT hstmt, UWORD fOption, UDWORD vParam);
RETCODE __pascal __far SQLSPECIALCOLUMNS(HSTMT hstmt, UWORD fColType, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName, UWORD fScope, UWORD fNullable);
RETCODE __pascal __far SQLSTATISTICS(HSTMT hstmt, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName, UWORD fUnique, UWORD fAccuracy);
RETCODE __pascal __far SQLTABLEPRIVILEGES(HSTMT hstmt, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName);
RETCODE __pascal __far SQLTABLES(HSTMT hstmt, UCHAR far *szTableQualifier, SWORD cbTableQualifier, UCHAR far *szTableOwner, SWORD cbTableOwner, UCHAR far *szTableName, SWORD cbTableName, UCHAR far *szTableType, SWORD cbTableType);
RETCODE __pascal __far SQLTRANSACT(HENV henv, HDBC hdbc, UWORD fType);
BOOL __pascal __far SQLVALIDDSN(LPCSTR lpszDSN);
BOOL __pascal __far SQLWRITEDSNTOINI(LPCSTR lpszDSN, LPCSTR lpszDriver);
MACRO_SQL SQL_ACCESSIBLE_PROCEDURES;
MACRO_SQL SQL_ACCESSIBLE_TABLES;
MACRO_SQL SQL_ACCESS_MODE;
MACRO_SQL SQL_ACTIVE_CONNECTIONS;
MACRO_SQL SQL_ACTIVE_STATEMENTS;
MACRO_SQL SQL_ADD;
MACRO_SQL SQL_ALL_EXCEPT_LIKE;
MACRO_SQL SQL_ALL_TYPES;
MACRO_SQL SQL_ALTER_TABLE;
MACRO_SQL SQL_API_ALL_FUNCTIONS;
MACRO_SQL SQL_API_LOADBYORDINAL;
MACRO_SQL SQL_API_SQLALLOCCONNECT;
MACRO_SQL SQL_API_SQLALLOCENV;
MACRO_SQL SQL_API_SQLALLOCSTMT;
MACRO_SQL SQL_API_SQLBINDCOL;
MACRO_SQL SQL_API_SQLBINDPARAMETER;
MACRO_SQL SQL_API_SQLBROWSECONNECT;
MACRO_SQL SQL_API_SQLCANCEL;
MACRO_SQL SQL_API_SQLCOLATTRIBUTES;
MACRO_SQL SQL_API_SQLCOLUMNPRIVILEGES;
MACRO_SQL SQL_API_SQLCOLUMNS;
MACRO_SQL SQL_API_SQLCONNECT;
MACRO_SQL SQL_API_SQLDATASOURCES;
MACRO_SQL SQL_API_SQLDESCRIBECOL;
MACRO_SQL SQL_API_SQLDESCRIBEPARAM;
MACRO_SQL SQL_API_SQLDISCONNECT;
MACRO_SQL SQL_API_SQLDRIVERCONNECT;
MACRO_SQL SQL_API_SQLDRIVERS;
MACRO_SQL SQL_API_SQLERROR;
MACRO_SQL SQL_API_SQLEXECDIRECT;
MACRO_SQL SQL_API_SQLEXECUTE;
MACRO_SQL SQL_API_SQLEXTENDEDFETCH;
MACRO_SQL SQL_API_SQLFETCH;
MACRO_SQL SQL_API_SQLFOREIGNKEYS;
MACRO_SQL SQL_API_SQLFREECONNECT;
MACRO_SQL SQL_API_SQLFREEENV;
MACRO_SQL SQL_API_SQLFREESTMT;
MACRO_SQL SQL_API_SQLGETCONNECTOPTION;
MACRO_SQL SQL_API_SQLGETCURSORNAME;
MACRO_SQL SQL_API_SQLGETDATA;
MACRO_SQL SQL_API_SQLGETFUNCTIONS;
MACRO_SQL SQL_API_SQLGETINFO;
MACRO_SQL SQL_API_SQLGETSTMTOPTION;
MACRO_SQL SQL_API_SQLGETTYPEINFO;
MACRO_SQL SQL_API_SQLMORERESULTS;
MACRO_SQL SQL_API_SQLNATIVESQL;
MACRO_SQL SQL_API_SQLNUMPARAMS;
MACRO_SQL SQL_API_SQLNUMRESULTCOLS;
MACRO_SQL SQL_API_SQLPARAMDATA;
MACRO_SQL SQL_API_SQLPARAMOPTIONS;
MACRO_SQL SQL_API_SQLPREPARE;
MACRO_SQL SQL_API_SQLPRIMARYKEYS;
MACRO_SQL SQL_API_SQLPROCEDURECOLUMNS;
MACRO_SQL SQL_API_SQLPROCEDURES;
MACRO_SQL SQL_API_SQLPUTDATA;
MACRO_SQL SQL_API_SQLROWCOUNT;
MACRO_SQL SQL_API_SQLSETCONNECTOPTION;
MACRO_SQL SQL_API_SQLSETCURSORNAME;
MACRO_SQL SQL_API_SQLSETPARAM;
MACRO_SQL SQL_API_SQLSETPOS;
MACRO_SQL SQL_API_SQLSETSCROLLOPTIONS;
MACRO_SQL SQL_API_SQLSETSTMTOPTION;
MACRO_SQL SQL_API_SQLSPECIALCOLUMNS;
MACRO_SQL SQL_API_SQLSTATISTICS;
MACRO_SQL SQL_API_SQLTABLEPRIVILEGES;
MACRO_SQL SQL_API_SQLTABLES;
MACRO_SQL SQL_API_SQLTRANSACT;
MACRO_SQL SQL_ASYNC_ENABLE;
MACRO_SQL SQL_ASYNC_ENABLE_DEFAULT;
MACRO_SQL SQL_ASYNC_ENABLE_OFF;
MACRO_SQL SQL_ASYNC_ENABLE_ON;
MACRO_SQL SQL_ATTR_READONLY;
MACRO_SQL SQL_ATTR_READWRITE_UNKNOWN;
MACRO_SQL SQL_ATTR_WRITE;
MACRO_SQL SQL_AT_ADD_COLUMN;
MACRO_SQL SQL_AT_DROP_COLUMN;
MACRO_SQL SQL_AUTOCOMMIT;
MACRO_SQL SQL_AUTOCOMMIT_DEFAULT;
MACRO_SQL SQL_AUTOCOMMIT_OFF;
MACRO_SQL SQL_AUTOCOMMIT_ON;
MACRO_SQL SQL_BEST_ROWID;
MACRO_SQL SQL_BIGINT;
MACRO_SQL SQL_BINARY;
MACRO_SQL SQL_BIND_BY_COLUMN;
MACRO_SQL SQL_BIND_TYPE;
MACRO_SQL SQL_BIT;
MACRO_SQL SQL_BOOKMARK_PERSISTENCE;
MACRO_SQL SQL_BP_CLOSE;
MACRO_SQL SQL_BP_DELETE;
MACRO_SQL SQL_BP_DROP;
MACRO_SQL SQL_BP_OTHER_HSTMT;
MACRO_SQL SQL_BP_SCROLL;
MACRO_SQL SQL_BP_TRANSACTION;
MACRO_SQL SQL_BP_UPDATE;
MACRO_SQL SQL_CASCADE;
MACRO_SQL SQL_CB_CLOSE;
MACRO_SQL SQL_CB_DELETE;
MACRO_SQL SQL_CB_NON_NULL;
MACRO_SQL SQL_CB_NULL;
MACRO_SQL SQL_CB_PRESERVE;
MACRO_SQL SQL_CC_CLOSE;
MACRO_SQL SQL_CC_DELETE;
MACRO_SQL SQL_CC_PRESERVE;
MACRO_SQL SQL_CHAR;
MACRO_SQL SQL_CLOSE;
MACRO_SQL SQL_CN_ANY;
MACRO_SQL SQL_CN_DIFFERENT;
MACRO_SQL SQL_CN_NONE;
MACRO_SQL SQL_COLATT_OPT_MAX;
MACRO_SQL SQL_COLATT_OPT_MIN;
MACRO_SQL SQL_COLUMN_ALIAS;
MACRO_SQL SQL_COLUMN_AUTO_INCREMENT;
MACRO_SQL SQL_COLUMN_CASE_SENSITIVE;
MACRO_SQL SQL_COLUMN_COUNT;
MACRO_SQL SQL_COLUMN_DISPLAY_SIZE;
MACRO_SQL SQL_COLUMN_DRIVER_START;
MACRO_SQL SQL_COLUMN_LABEL;
MACRO_SQL SQL_COLUMN_LENGTH;
MACRO_SQL SQL_COLUMN_MONEY;
MACRO_SQL SQL_COLUMN_NAME;
MACRO_SQL SQL_COLUMN_NULLABLE;
MACRO_SQL SQL_COLUMN_OWNER_NAME;
MACRO_SQL SQL_COLUMN_PRECISION;
MACRO_SQL SQL_COLUMN_QUALIFIER_NAME;
MACRO_SQL SQL_COLUMN_SCALE;
MACRO_SQL SQL_COLUMN_SEARCHABLE;
MACRO_SQL SQL_COLUMN_TABLE_NAME;
MACRO_SQL SQL_COLUMN_TYPE;
MACRO_SQL SQL_COLUMN_TYPE_NAME;
MACRO_SQL SQL_COLUMN_UNSIGNED;
MACRO_SQL SQL_COLUMN_UPDATABLE;
MACRO_SQL SQL_COMMIT;
MACRO_SQL SQL_CONCAT_NULL_BEHAVIOR;
MACRO_SQL SQL_CONCURRENCY;
MACRO_SQL SQL_CONCUR_LOCK;
MACRO_SQL SQL_CONCUR_READ_ONLY;
MACRO_SQL SQL_CONCUR_ROWVER;
MACRO_SQL SQL_CONCUR_TIMESTAMP;
MACRO_SQL SQL_CONCUR_VALUES;
MACRO_SQL SQL_CONNECT_OPT_DRVR_START;
MACRO_SQL SQL_CONN_OPT_MAX;
MACRO_SQL SQL_CONN_OPT_MIN;
MACRO_SQL SQL_CONVERT_BIGINT;
MACRO_SQL SQL_CONVERT_BINARY;
MACRO_SQL SQL_CONVERT_BIT;
MACRO_SQL SQL_CONVERT_CHAR;
MACRO_SQL SQL_CONVERT_DATE;
MACRO_SQL SQL_CONVERT_DECIMAL;
MACRO_SQL SQL_CONVERT_DOUBLE;
MACRO_SQL SQL_CONVERT_FLOAT;
MACRO_SQL SQL_CONVERT_FUNCTIONS;
MACRO_SQL SQL_CONVERT_INTEGER;
MACRO_SQL SQL_CONVERT_LONGVARBINARY;
MACRO_SQL SQL_CONVERT_LONGVARCHAR;
MACRO_SQL SQL_CONVERT_NUMERIC;
MACRO_SQL SQL_CONVERT_REAL;
MACRO_SQL SQL_CONVERT_SMALLINT;
MACRO_SQL SQL_CONVERT_TIME;
MACRO_SQL SQL_CONVERT_TIMESTAMP;
MACRO_SQL SQL_CONVERT_TINYINT;
MACRO_SQL SQL_CONVERT_VARBINARY;
MACRO_SQL SQL_CONVERT_VARCHAR;
MACRO_SQL SQL_CORRELATION_NAME;
MACRO_SQL SQL_CR_CLOSE;
MACRO_SQL SQL_CR_DELETE;
MACRO_SQL SQL_CR_PRESERVE;
MACRO_SQL SQL_CURRENT_QUALIFIER;
MACRO_SQL SQL_CURSOR_COMMIT_BEHAVIOR;
MACRO_SQL SQL_CURSOR_DYNAMIC;
MACRO_SQL SQL_CURSOR_FORWARD_ONLY;
MACRO_SQL SQL_CURSOR_KEYSET_DRIVEN;
MACRO_SQL SQL_CURSOR_ROLLBACK_BEHAVIOR;
MACRO_SQL SQL_CURSOR_STATIC;
MACRO_SQL SQL_CURSOR_TYPE;
MACRO_SQL SQL_CUR_DEFAULT;
MACRO_SQL SQL_CUR_USE_DRIVER;
MACRO_SQL SQL_CUR_USE_IF_NEEDED;
MACRO_SQL SQL_CUR_USE_ODBC;
MACRO_SQL SQL_CVT_BIGINT;
MACRO_SQL SQL_CVT_BINARY;
MACRO_SQL SQL_CVT_BIT;
MACRO_SQL SQL_CVT_CHAR;
MACRO_SQL SQL_CVT_DATE;
MACRO_SQL SQL_CVT_DECIMAL;
MACRO_SQL SQL_CVT_DOUBLE;
MACRO_SQL SQL_CVT_FLOAT;
MACRO_SQL SQL_CVT_INTEGER;
MACRO_SQL SQL_CVT_LONGVARBINARY;
MACRO_SQL SQL_CVT_LONGVARCHAR;
MACRO_SQL SQL_CVT_NUMERIC;
MACRO_SQL SQL_CVT_REAL;
MACRO_SQL SQL_CVT_SMALLINT;
MACRO_SQL SQL_CVT_TIME;
MACRO_SQL SQL_CVT_TIMESTAMP;
MACRO_SQL SQL_CVT_TINYINT;
MACRO_SQL SQL_CVT_VARBINARY;
MACRO_SQL SQL_CVT_VARCHAR;
MACRO_SQL SQL_C_BINARY;
MACRO_SQL SQL_C_BIT;
MACRO_SQL SQL_C_BOOKMARK;
MACRO_SQL SQL_C_CHAR;
MACRO_SQL SQL_C_DATE;
MACRO_SQL SQL_C_DEFAULT;
MACRO_SQL SQL_C_DOUBLE;
MACRO_SQL SQL_C_FLOAT;
MACRO_SQL SQL_C_LONG;
MACRO_SQL SQL_C_SHORT;
MACRO_SQL SQL_C_SLONG;
MACRO_SQL SQL_C_SSHORT;
MACRO_SQL SQL_C_STINYINT;
MACRO_SQL SQL_C_TIME;
MACRO_SQL SQL_C_TIMESTAMP;
MACRO_SQL SQL_C_TINYINT;
MACRO_SQL SQL_C_ULONG;
MACRO_SQL SQL_C_USHORT;
MACRO_SQL SQL_C_UTINYINT;
MACRO_SQL SQL_DATABASE_NAME;
MACRO_SQL SQL_DATA_AT_EXEC;
MACRO_SQL SQL_DATA_SOURCE_NAME;
MACRO_SQL SQL_DATA_SOURCE_READ_ONLY;
MACRO_SQL SQL_DATE;
MACRO_SQL SQL_DBMS_NAME;
MACRO_SQL SQL_DBMS_VER;
MACRO_SQL SQL_DECIMAL;
MACRO_SQL SQL_DEFAULT_PARAM;
MACRO_SQL SQL_DEFAULT_TXN_ISOLATION;
MACRO_SQL SQL_DELETE;
MACRO_SQL SQL_DOUBLE;
MACRO_SQL SQL_DRIVER_COMPLETE;
MACRO_SQL SQL_DRIVER_COMPLETE_REQUIRED;
MACRO_SQL SQL_DRIVER_HDBC;
MACRO_SQL SQL_DRIVER_HENV;
MACRO_SQL SQL_DRIVER_HLIB;
MACRO_SQL SQL_DRIVER_HSTMT;
MACRO_SQL SQL_DRIVER_NAME;
MACRO_SQL SQL_DRIVER_NOPROMPT;
MACRO_SQL SQL_DRIVER_ODBC_VER;
MACRO_SQL SQL_DRIVER_PROMPT;
MACRO_SQL SQL_DRIVER_VER;
MACRO_SQL SQL_DROP;
MACRO_SQL SQL_ENSURE;
MACRO_SQL SQL_ENTIRE_ROWSET;
MACRO_SQL SQL_ERROR;
MACRO_SQL SQL_EXPRESSIONS_IN_ORDERBY;
MACRO_SQL SQL_EXT_API_LAST;
MACRO_SQL SQL_EXT_API_START;
MACRO_SQL SQL_FD_FETCH_ABSOLUTE;
MACRO_SQL SQL_FD_FETCH_BOOKMARK;
MACRO_SQL SQL_FD_FETCH_FIRST;
MACRO_SQL SQL_FD_FETCH_LAST;
MACRO_SQL SQL_FD_FETCH_NEXT;
MACRO_SQL SQL_FD_FETCH_PREV;
MACRO_SQL SQL_FD_FETCH_PRIOR;
MACRO_SQL SQL_FD_FETCH_RELATIVE;
MACRO_SQL SQL_FD_FETCH_RESUME;
MACRO_SQL SQL_FETCH_ABSOLUTE;
MACRO_SQL SQL_FETCH_BOOKMARK;
MACRO_SQL SQL_FETCH_DIRECTION;
MACRO_SQL SQL_FETCH_FIRST;
MACRO_SQL SQL_FETCH_LAST;
MACRO_SQL SQL_FETCH_NEXT;
MACRO_SQL SQL_FETCH_PREV;
MACRO_SQL SQL_FETCH_PRIOR;
MACRO_SQL SQL_FETCH_RELATIVE;
MACRO_SQL SQL_FETCH_RESUME;
MACRO_SQL SQL_FILE_NOT_SUPPORTED;
MACRO_SQL SQL_FILE_QUALIFIER;
MACRO_SQL SQL_FILE_TABLE;
MACRO_SQL SQL_FILE_USAGE;
MACRO_SQL SQL_FLOAT;
MACRO_SQL SQL_FN_CVT_CONVERT;
MACRO_SQL SQL_FN_NUM_ABS;
MACRO_SQL SQL_FN_NUM_ACOS;
MACRO_SQL SQL_FN_NUM_ASIN;
MACRO_SQL SQL_FN_NUM_ATAN;
MACRO_SQL SQL_FN_NUM_ATAN2;
MACRO_SQL SQL_FN_NUM_CEILING;
MACRO_SQL SQL_FN_NUM_COS;
MACRO_SQL SQL_FN_NUM_COT;
MACRO_SQL SQL_FN_NUM_DEGREES;
MACRO_SQL SQL_FN_NUM_EXP;
MACRO_SQL SQL_FN_NUM_FLOOR;
MACRO_SQL SQL_FN_NUM_LOG;
MACRO_SQL SQL_FN_NUM_LOG10;
MACRO_SQL SQL_FN_NUM_MOD;
MACRO_SQL SQL_FN_NUM_PI;
MACRO_SQL SQL_FN_NUM_POWER;
MACRO_SQL SQL_FN_NUM_RADIANS;
MACRO_SQL SQL_FN_NUM_RAND;
MACRO_SQL SQL_FN_NUM_ROUND;
MACRO_SQL SQL_FN_NUM_SIGN;
MACRO_SQL SQL_FN_NUM_SIN;
MACRO_SQL SQL_FN_NUM_SQRT;
MACRO_SQL SQL_FN_NUM_TAN;
MACRO_SQL SQL_FN_NUM_TRUNCATE;
MACRO_SQL SQL_FN_STR_ASCII;
MACRO_SQL SQL_FN_STR_CHAR;
MACRO_SQL SQL_FN_STR_CONCAT;
MACRO_SQL SQL_FN_STR_DIFFERENCE;
MACRO_SQL SQL_FN_STR_INSERT;
MACRO_SQL SQL_FN_STR_LCASE;
MACRO_SQL SQL_FN_STR_LEFT;
MACRO_SQL SQL_FN_STR_LENGTH;
MACRO_SQL SQL_FN_STR_LOCATE;
MACRO_SQL SQL_FN_STR_LOCATE_2;
MACRO_SQL SQL_FN_STR_LTRIM;
MACRO_SQL SQL_FN_STR_REPEAT;
MACRO_SQL SQL_FN_STR_REPLACE;
MACRO_SQL SQL_FN_STR_RIGHT;
MACRO_SQL SQL_FN_STR_RTRIM;
MACRO_SQL SQL_FN_STR_SOUNDEX;
MACRO_SQL SQL_FN_STR_SPACE;
MACRO_SQL SQL_FN_STR_SUBSTRING;
MACRO_SQL SQL_FN_STR_UCASE;
MACRO_SQL SQL_FN_SYS_DBNAME;
MACRO_SQL SQL_FN_SYS_IFNULL;
MACRO_SQL SQL_FN_SYS_USERNAME;
MACRO_SQL SQL_FN_TD_CURDATE;
MACRO_SQL SQL_FN_TD_CURTIME;
MACRO_SQL SQL_FN_TD_DAYNAME;
MACRO_SQL SQL_FN_TD_DAYOFMONTH;
MACRO_SQL SQL_FN_TD_DAYOFWEEK;
MACRO_SQL SQL_FN_TD_DAYOFYEAR;
MACRO_SQL SQL_FN_TD_HOUR;
MACRO_SQL SQL_FN_TD_MINUTE;
MACRO_SQL SQL_FN_TD_MONTH;
MACRO_SQL SQL_FN_TD_MONTHNAME;
MACRO_SQL SQL_FN_TD_NOW;
MACRO_SQL SQL_FN_TD_QUARTER;
MACRO_SQL SQL_FN_TD_SECOND;
MACRO_SQL SQL_FN_TD_TIMESTAMPADD;
MACRO_SQL SQL_FN_TD_TIMESTAMPDIFF;
MACRO_SQL SQL_FN_TD_WEEK;
MACRO_SQL SQL_FN_TD_YEAR;
MACRO_SQL SQL_FN_TSI_DAY;
MACRO_SQL SQL_FN_TSI_FRAC_SECOND;
MACRO_SQL SQL_FN_TSI_HOUR;
MACRO_SQL SQL_FN_TSI_MINUTE;
MACRO_SQL SQL_FN_TSI_MONTH;
MACRO_SQL SQL_FN_TSI_QUARTER;
MACRO_SQL SQL_FN_TSI_SECOND;
MACRO_SQL SQL_FN_TSI_WEEK;
MACRO_SQL SQL_FN_TSI_YEAR;
MACRO_SQL SQL_GB_GROUP_BY_CONTAINS_SELECT;
MACRO_SQL SQL_GB_GROUP_BY_EQUALS_SELECT;
MACRO_SQL SQL_GB_NOT_SUPPORTED;
MACRO_SQL SQL_GB_NO_RELATION;
MACRO_SQL SQL_GD_ANY_COLUMN;
MACRO_SQL SQL_GD_ANY_ORDER;
MACRO_SQL SQL_GD_BLOCK;
MACRO_SQL SQL_GD_BOUND;
MACRO_SQL SQL_GETDATA_EXTENSIONS;
MACRO_SQL SQL_GET_BOOKMARK;
MACRO_SQL SQL_GROUP_BY;
MACRO_SQL SQL_IC_LOWER;
MACRO_SQL SQL_IC_MIXED;
MACRO_SQL SQL_IC_SENSITIVE;
MACRO_SQL SQL_IC_UPPER;
MACRO_SQL SQL_IDENTIFIER_CASE;
MACRO_SQL SQL_IDENTIFIER_QUOTE_CHAR;
MACRO_SQL SQL_IGNORE;
MACRO_SQL SQL_INDEX_ALL;
MACRO_SQL SQL_INDEX_CLUSTERED;
MACRO_SQL SQL_INDEX_HASHED;
MACRO_SQL SQL_INDEX_OTHER;
MACRO_SQL SQL_INDEX_UNIQUE;
MACRO_SQL SQL_INFO_DRIVER_START;
MACRO_SQL SQL_INFO_FIRST;
MACRO_SQL SQL_INFO_LAST;
MACRO_SQL SQL_INTEGER;
MACRO_SQL SQL_INVALID_HANDLE;
MACRO_SQL SQL_KEYSET_SIZE;
MACRO_SQL SQL_KEYSET_SIZE_DEFAULT;
MACRO_SQL SQL_KEYWORDS;
MACRO_SQL SQL_LCK_EXCLUSIVE;
MACRO_SQL SQL_LCK_NO_CHANGE;
MACRO_SQL SQL_LCK_UNLOCK;
MACRO_SQL SQL_LEN_DATA_AT_EXEC_OFFSET;
MACRO_SQL SQL_LIKE_ESCAPE_CLAUSE;
MACRO_SQL SQL_LIKE_ONLY;
MACRO_SQL SQL_LOCK_EXCLUSIVE;
MACRO_SQL SQL_LOCK_NO_CHANGE;
MACRO_SQL SQL_LOCK_TYPES;
MACRO_SQL SQL_LOCK_UNLOCK;
MACRO_SQL SQL_LOGIN_TIMEOUT;
MACRO_SQL SQL_LOGIN_TIMEOUT_DEFAULT;
MACRO_SQL SQL_LONGVARBINARY;
MACRO_SQL SQL_LONGVARCHAR;
MACRO_SQL SQL_MAX_BINARY_LITERAL_LEN;
MACRO_SQL SQL_MAX_CHAR_LITERAL_LEN;
MACRO_SQL SQL_MAX_COLUMNS_IN_GROUP_BY;
MACRO_SQL SQL_MAX_COLUMNS_IN_INDEX;
MACRO_SQL SQL_MAX_COLUMNS_IN_ORDER_BY;
MACRO_SQL SQL_MAX_COLUMNS_IN_SELECT;
MACRO_SQL SQL_MAX_COLUMNS_IN_TABLE;
MACRO_SQL SQL_MAX_COLUMN_NAME_LEN;
MACRO_SQL SQL_MAX_CURSOR_NAME_LEN;
MACRO_SQL SQL_MAX_DSN_LENGTH;
MACRO_SQL SQL_MAX_INDEX_SIZE;
MACRO_SQL SQL_MAX_LENGTH;
MACRO_SQL SQL_MAX_LENGTH_DEFAULT;
MACRO_SQL SQL_MAX_MESSAGE_LENGTH;
MACRO_SQL SQL_MAX_OPTION_STRING_LENGTH;
MACRO_SQL SQL_MAX_OWNER_NAME_LEN;
MACRO_SQL SQL_MAX_PROCEDURE_NAME_LEN;
MACRO_SQL SQL_MAX_QUALIFIER_NAME_LEN;
MACRO_SQL SQL_MAX_ROWS;
MACRO_SQL SQL_MAX_ROWS_DEFAULT;
MACRO_SQL SQL_MAX_ROW_SIZE;
MACRO_SQL SQL_MAX_ROW_SIZE_INCLUDES_LONG;
MACRO_SQL SQL_MAX_STATEMENT_LEN;
MACRO_SQL SQL_MAX_TABLES_IN_SELECT;
MACRO_SQL SQL_MAX_TABLE_NAME_LEN;
MACRO_SQL SQL_MAX_USER_NAME_LEN;
MACRO_SQL SQL_MODE_DEFAULT;
MACRO_SQL SQL_MODE_READ_ONLY;
MACRO_SQL SQL_MODE_READ_WRITE;
MACRO_SQL SQL_MULTIPLE_ACTIVE_TXN;
MACRO_SQL SQL_MULT_RESULT_SETS;
MACRO_SQL SQL_NC_END;
MACRO_SQL SQL_NC_HIGH;
MACRO_SQL SQL_NC_LOW;
MACRO_SQL SQL_NC_START;
MACRO_SQL SQL_NEED_DATA;
MACRO_SQL SQL_NEED_LONG_DATA_LEN;
MACRO_SQL SQL_NNC_NON_NULL;
MACRO_SQL SQL_NNC_NULL;
MACRO_SQL SQL_NON_NULLABLE_COLUMNS;
MACRO_SQL SQL_NOSCAN;
MACRO_SQL SQL_NOSCAN_DEFAULT;
MACRO_SQL SQL_NOSCAN_OFF;
MACRO_SQL SQL_NOSCAN_ON;
MACRO_SQL SQL_NO_DATA_FOUND;
MACRO_SQL SQL_NO_NULLS;
MACRO_SQL SQL_NO_TOTAL;
MACRO_SQL SQL_NTS;
MACRO_SQL SQL_NULLABLE;
MACRO_SQL SQL_NULLABLE_UNKNOWN;
MACRO_SQL SQL_NULL_COLLATION;
MACRO_SQL SQL_NULL_DATA;
MACRO_SQL SQL_NULL_HDBC;
MACRO_SQL SQL_NULL_HENV;
MACRO_SQL SQL_NULL_HSTMT;
MACRO_SQL SQL_NUMERIC;
MACRO_SQL SQL_NUMERIC_FUNCTIONS;
MACRO_SQL SQL_NUM_EXTENSIONS;
MACRO_SQL SQL_NUM_FUNCTIONS;
MACRO_SQL SQL_OAC_LEVEL1;
MACRO_SQL SQL_OAC_LEVEL2;
MACRO_SQL SQL_OAC_NONE;
MACRO_SQL SQL_ODBC_API_CONFORMANCE;
MACRO_SQL SQL_ODBC_CURSORS;
MACRO_SQL SQL_ODBC_SAG_CLI_CONFORMANCE;
MACRO_SQL SQL_ODBC_SQL_CONFORMANCE;
MACRO_SQL SQL_ODBC_SQL_OPT_IEF;
MACRO_SQL SQL_ODBC_VER;
MACRO_SQL SQL_OJ_ALL_COMPARISON_OPS;
MACRO_SQL SQL_OJ_CAPABILITIES;
MACRO_SQL SQL_OJ_FULL;
MACRO_SQL SQL_OJ_INNER;
MACRO_SQL SQL_OJ_LEFT;
MACRO_SQL SQL_OJ_NESTED;
MACRO_SQL SQL_OJ_NOT_ORDERED;
MACRO_SQL SQL_OJ_RIGHT;
MACRO_SQL SQL_OPT_TRACE;
MACRO_SQL SQL_OPT_TRACEFILE;
MACRO_SQL SQL_OPT_TRACE_DEFAULT;
MACRO_SQL SQL_OPT_TRACE_OFF;
MACRO_SQL SQL_OPT_TRACE_ON;
MACRO_SQL SQL_ORDER_BY_COLUMNS_IN_SELECT;
MACRO_SQL SQL_OSCC_COMPLIANT;
MACRO_SQL SQL_OSCC_NOT_COMPLIANT;
MACRO_SQL SQL_OSC_CORE;
MACRO_SQL SQL_OSC_EXTENDED;
MACRO_SQL SQL_OSC_MINIMUM;
MACRO_SQL SQL_OUTER_JOINS;
MACRO_SQL SQL_OU_DML_STATEMENTS;
MACRO_SQL SQL_OU_INDEX_DEFINITION;
MACRO_SQL SQL_OU_PRIVILEGE_DEFINITION;
MACRO_SQL SQL_OU_PROCEDURE_INVOCATION;
MACRO_SQL SQL_OU_TABLE_DEFINITION;
MACRO_SQL SQL_OWNER_TERM;
MACRO_SQL SQL_OWNER_USAGE;
MACRO_SQL SQL_PACKET_SIZE;
MACRO_SQL SQL_PARAM_INPUT;
MACRO_SQL SQL_PARAM_INPUT_OUTPUT;
MACRO_SQL SQL_PARAM_OUTPUT;
MACRO_SQL SQL_PARAM_TYPE_DEFAULT;
MACRO_SQL SQL_PARAM_TYPE_UNKNOWN;
MACRO_SQL SQL_PC_NON_PSEUDO;
MACRO_SQL SQL_PC_NOT_PSEUDO;
MACRO_SQL SQL_PC_PSEUDO;
MACRO_SQL SQL_PC_UNKNOWN;
MACRO_SQL SQL_POSITION;
MACRO_SQL SQL_POSITIONED_STATEMENTS;
MACRO_SQL SQL_POS_ADD;
MACRO_SQL SQL_POS_DELETE;
MACRO_SQL SQL_POS_OPERATIONS;
MACRO_SQL SQL_POS_POSITION;
MACRO_SQL SQL_POS_REFRESH;
MACRO_SQL SQL_POS_UPDATE;
MACRO_SQL SQL_PROCEDURES;
MACRO_SQL SQL_PROCEDURE_TERM;
MACRO_SQL SQL_PS_POSITIONED_DELETE;
MACRO_SQL SQL_PS_POSITIONED_UPDATE;
MACRO_SQL SQL_PS_SELECT_FOR_UPDATE;
MACRO_SQL SQL_PT_FUNCTION;
MACRO_SQL SQL_PT_PROCEDURE;
MACRO_SQL SQL_PT_UNKNOWN;
MACRO_SQL SQL_QL_END;
MACRO_SQL SQL_QL_START;
MACRO_SQL SQL_QUALIFIER_LOCATION;
MACRO_SQL SQL_QUALIFIER_NAME_SEPARATOR;
MACRO_SQL SQL_QUALIFIER_TERM;
MACRO_SQL SQL_QUALIFIER_USAGE;
MACRO_SQL SQL_QUERY_TIMEOUT;
MACRO_SQL SQL_QUERY_TIMEOUT_DEFAULT;
MACRO_SQL SQL_QUICK;
MACRO_SQL SQL_QUIET_MODE;
MACRO_SQL SQL_QUOTED_IDENTIFIER_CASE;
MACRO_SQL SQL_QU_DML_STATEMENTS;
MACRO_SQL SQL_QU_INDEX_DEFINITION;
MACRO_SQL SQL_QU_PRIVILEGE_DEFINITION;
MACRO_SQL SQL_QU_PROCEDURE_INVOCATION;
MACRO_SQL SQL_QU_TABLE_DEFINITION;
MACRO_SQL SQL_RD_DEFAULT;
MACRO_SQL SQL_RD_OFF;
MACRO_SQL SQL_RD_ON;
MACRO_SQL SQL_REAL;
MACRO_SQL SQL_REFRESH;
MACRO_SQL SQL_RESET_PARAMS;
MACRO_SQL SQL_RESTRICT;
MACRO_SQL SQL_RESULT_COL;
MACRO_SQL SQL_RETRIEVE_DATA;
MACRO_SQL SQL_RETURN_VALUE;
MACRO_SQL SQL_ROLLBACK;
MACRO_SQL SQL_ROWSET_SIZE;
MACRO_SQL SQL_ROWSET_SIZE_DEFAULT;
MACRO_SQL SQL_ROWVER;
MACRO_SQL SQL_ROW_ADDED;
MACRO_SQL SQL_ROW_DELETED;
MACRO_SQL SQL_ROW_ERROR;
MACRO_SQL SQL_ROW_NOROW;
MACRO_SQL SQL_ROW_NUMBER;
MACRO_SQL SQL_ROW_SUCCESS;
MACRO_SQL SQL_ROW_UPDATED;
MACRO_SQL SQL_ROW_UPDATES;
MACRO_SQL SQL_SCCO_LOCK;
MACRO_SQL SQL_SCCO_OPT_ROWVER;
MACRO_SQL SQL_SCCO_OPT_TIMESTAMP;
MACRO_SQL SQL_SCCO_OPT_VALUES;
MACRO_SQL SQL_SCCO_READ_ONLY;
MACRO_SQL SQL_SCOPE_CURROW;
MACRO_SQL SQL_SCOPE_SESSION;
MACRO_SQL SQL_SCOPE_TRANSACTION;
MACRO_SQL SQL_SCROLL_CONCURRENCY;
MACRO_SQL SQL_SCROLL_DYNAMIC;
MACRO_SQL SQL_SCROLL_FORWARD_ONLY;
MACRO_SQL SQL_SCROLL_KEYSET_DRIVEN;
MACRO_SQL SQL_SCROLL_OPTIONS;
MACRO_SQL SQL_SCROLL_STATIC;
MACRO_SQL SQL_SC_NON_UNIQUE;
MACRO_SQL SQL_SC_TRY_UNIQUE;
MACRO_SQL SQL_SC_UNIQUE;
MACRO_SQL SQL_SEARCHABLE;
MACRO_SQL SQL_SEARCH_PATTERN_ESCAPE;
MACRO_SQL SQL_SERVER_NAME;
MACRO_SQL SQL_SETPARAM_VALUE_MAX;
MACRO_SQL SQL_SET_NULL;
MACRO_SQL SQL_SIGNED_OFFSET;
MACRO_SQL SQL_SIMULATE_CURSOR;
MACRO_SQL SQL_SMALLINT;
MACRO_SQL SQL_SO_DYNAMIC;
MACRO_SQL SQL_SO_FORWARD_ONLY;
MACRO_SQL SQL_SO_KEYSET_DRIVEN;
MACRO_SQL SQL_SO_MIXED;
MACRO_SQL SQL_SO_STATIC;
MACRO_SQL SQL_SPECIAL_CHARACTERS;
MACRO_SQL SQL_SPEC_MAJOR;
MACRO_SQL SQL_SPEC_MINOR;
MACRO_SQL SQL_SQLSTATE_SIZE;
MACRO_SQL SQL_SQ_COMPARISON;
MACRO_SQL SQL_SQ_CORRELATED_SUBQUERIES;
MACRO_SQL SQL_SQ_EXISTS;
MACRO_SQL SQL_SQ_IN;
MACRO_SQL SQL_SQ_QUANTIFIED;
MACRO_SQL SQL_SS_ADDITIONS;
MACRO_SQL SQL_SS_DELETIONS;
MACRO_SQL SQL_SS_UPDATES;
MACRO_SQL SQL_STATIC_SENSITIVITY;
MACRO_SQL SQL_STILL_EXECUTING;
MACRO_SQL SQL_STMT_OPT_MAX;
MACRO_SQL SQL_STMT_OPT_MIN;
MACRO_SQL SQL_STRING_FUNCTIONS;
MACRO_SQL SQL_SUBQUERIES;
MACRO_SQL SQL_SUCCESS;
MACRO_SQL SQL_SUCCESS_WITH_INFO;
MACRO_SQL SQL_SYSTEM_FUNCTIONS;
MACRO_SQL SQL_TABLE_STAT;
MACRO_SQL SQL_TABLE_TERM;
MACRO_SQL SQL_TC_ALL;
MACRO_SQL SQL_TC_DDL_COMMIT;
MACRO_SQL SQL_TC_DDL_IGNORE;
MACRO_SQL SQL_TC_DML;
MACRO_SQL SQL_TC_NONE;
MACRO_SQL SQL_TIME;
MACRO_SQL SQL_TIMEDATE_ADD_INTERVALS;
MACRO_SQL SQL_TIMEDATE_DIFF_INTERVALS;
MACRO_SQL SQL_TIMEDATE_FUNCTIONS;
MACRO_SQL SQL_TIMESTAMP;
MACRO_SQL SQL_TINYINT;
MACRO_SQL SQL_TRANSLATE_DLL;
MACRO_SQL SQL_TRANSLATE_OPTION;
MACRO_SQL SQL_TXN_CAPABLE;
MACRO_SQL SQL_TXN_ISOLATION;
MACRO_SQL SQL_TXN_ISOLATION_OPTION;
MACRO_SQL SQL_TXN_READ_COMMITTED;
MACRO_SQL SQL_TXN_READ_UNCOMMITTED;
MACRO_SQL SQL_TXN_REPEATABLE_READ;
MACRO_SQL SQL_TXN_SERIALIZABLE;
MACRO_SQL SQL_TXN_VERSIONING;
MACRO_SQL SQL_TYPE_DRIVER_START;
MACRO_SQL SQL_TYPE_MAX;
MACRO_SQL SQL_TYPE_MIN;
MACRO_SQL SQL_TYPE_NULL;
MACRO_SQL SQL_UB_DEFAULT;
MACRO_SQL SQL_UB_OFF;
MACRO_SQL SQL_UB_ON;
MACRO_SQL SQL_UNBIND;
MACRO_SQL SQL_UNION;
MACRO_SQL SQL_UNSEARCHABLE;
MACRO_SQL SQL_UNSIGNED_OFFSET;
MACRO_SQL SQL_UPDATE;
MACRO_SQL SQL_USER_NAME;
MACRO_SQL SQL_USE_BOOKMARKS;
MACRO_SQL SQL_U_UNION;
MACRO_SQL SQL_U_UNION_ALL;
MACRO_SQL SQL_VARBINARY;
MACRO_SQL SQL_VARCHAR;
MACRO_SRCAND SRCAND;
MACRO_SRCCOPY SRCCOPY;
MACRO_SRCERASE SRCERASE;
MACRO_SRCINVERT SRCINVERT;
MACRO_SRCPAINT SRCPAINT;
MACRO_SS SS_BLACKFRAME;
MACRO_SS SS_BLACKRECT;
MACRO_SS SS_CENTER;
MACRO_SS SS_GRAYFRAME;
MACRO_SS SS_GRAYRECT;
MACRO_SS SS_ICON;
MACRO_SS SS_LEFT;
MACRO_SS SS_LEFTNOWORDWRAP;
MACRO_SS SS_NOPREFIX;
MACRO_SS SS_RIGHT;
MACRO_SS SS_SIMPLE;
MACRO_SS SS_WHITEFRAME;
MACRO_SS SS_WHITERECT;
BOOL __pascal __far STACKTRACECSIPFIRST(STACKTRACEENTRY far *lpStackTrace, WORD wSS, WORD wCS, WORD wIP, WORD wBP);
BOOL __pascal __far STACKTRACEFIRST(STACKTRACEENTRY far *lpStackTrace, HTASK hTask);
BOOL __pascal __far STACKTRACENEXT(STACKTRACEENTRY far *lpStackTrace);
int __pascal __far STARTDOC(HDC, DOCINFO far *);
int __pascal __far STARTPAGE(HDC);
int __pascal __far STARTSOUND();
tagSTATFLAG STATFLAG_DEFAULT;
tagSTATFLAG STATFLAG_NONAME;
HRESULT __pascal __far STGCREATEDOCFILE(const char far *pwcsName, DWORD grfMode, DWORD reserved, IStorage far * far *ppstgOpen);
HRESULT __pascal __far STGCREATEDOCFILEONILOCKBYTES(ILockBytes far *plkbyt, DWORD grfMode, DWORD reserved, IStorage far * far *ppstgOpen);
tagSTGC STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE;
tagSTGC STGC_DEFAULT;
tagSTGC STGC_ONLYIFCURRENT;
tagSTGC STGC_OVERWRITE;
HRESULT __pascal __far STGISSTORAGEFILE(const char far *pwcsName);
HRESULT __pascal __far STGISSTORAGEILOCKBYTES(ILockBytes far *plkbyt);
tagSTGMOVE STGMOVE_COPY;
tagSTGMOVE STGMOVE_MOVE;
MACRO_STGM STGM_CONVERT;
MACRO_STGM STGM_CREATE;
MACRO_STGM STGM_DELETEONRELEASE;
MACRO_STGM_DFRALL STGM_DFALL;
MACRO_STGM_DFRALL STGM_DFRALL;
MACRO_STGM STGM_DIRECT;
MACRO_STGM STGM_FAILIFTHERE;
MACRO_STGM STGM_PRIORITY;
MACRO_STGM STGM_READ;
MACRO_STGM STGM_READWRITE;
MACRO_STGM_DFRALL STGM_SALL;
MACRO_STGM STGM_SHARE_DENY_NONE;
MACRO_STGM STGM_SHARE_DENY_READ;
MACRO_STGM STGM_SHARE_DENY_WRITE;
MACRO_STGM STGM_SHARE_EXCLUSIVE;
MACRO_STGM STGM_TRANSACTED;
MACRO_STGM STGM_WRITE;
HRESULT __pascal __far STGOPENSTORAGE(const char far *pwcsName, IStorage far *pstgPriority, DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage far * far *ppstgOpen);
HRESULT __pascal __far STGOPENSTORAGEONILOCKBYTES(ILockBytes far *plkbyt, IStorage far *pstgPriority, DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage far * far *ppstgOpen);
HRESULT __pascal __far STGSETTIMES(const char far *lpszName, const FILETIME far *pctime, const FILETIME far *patime, const FILETIME far *pmtime);
tagSTGTY STGTY_LOCKBYTES;
tagSTGTY STGTY_PROPERTY;
tagSTGTY STGTY_STORAGE;
tagSTGTY STGTY_STREAM;
MACRO_STG STG_E_ABNORMALAPIEXIT;
MACRO_STG STG_E_ACCESSDENIED;
MACRO_STG STG_E_CANTSAVE;
MACRO_STG STG_E_DISKISWRITEPROTECTED;
MACRO_STG STG_E_EXTANTMARSHALLINGS;
MACRO_STG STG_E_FILEALREADYEXISTS;
MACRO_STG STG_E_FILENOTFOUND;
MACRO_STG STG_E_INSUFFICIENTMEMORY;
MACRO_STG STG_E_INUSE;
MACRO_STG STG_E_INVALIDFLAG;
MACRO_STG STG_E_INVALIDFUNCTION;
MACRO_STG STG_E_INVALIDHANDLE;
MACRO_STG STG_E_INVALIDHEADER;
MACRO_STG STG_E_INVALIDNAME;
MACRO_STG STG_E_INVALIDPARAMETER;
MACRO_STG STG_E_INVALIDPOINTER;
MACRO_STG STG_E_LOCKVIOLATION;
MACRO_STG STG_E_MEDIUMFULL;
MACRO_STG STG_E_NOMOREFILES;
MACRO_STG STG_E_NOTCURRENT;
MACRO_STG STG_E_NOTFILEBASEDSTORAGE;
MACRO_STG STG_E_OLDDLL;
MACRO_STG STG_E_OLDFORMAT;
MACRO_STG STG_E_PATHNOTFOUND;
MACRO_STG STG_E_READFAULT;
MACRO_STG STG_E_REVERTED;
MACRO_STG STG_E_SEEKERROR;
MACRO_STG STG_E_SHAREREQUIRED;
MACRO_STG STG_E_SHAREVIOLATION;
MACRO_STG STG_E_TOOMANYOPENFILES;
MACRO_STG STG_E_UNIMPLEMENTEDFUNCTION;
MACRO_STG STG_E_UNKNOWN;
MACRO_STG STG_E_WRITEFAULT;
MACRO_STG STG_S_CONVERTED;
MACRO_STM STM_GETICON;
MACRO_STM STM_SETICON;
int __pascal __far STOPSOUND();
tagSTREAM_SEEK STREAM_SEEK_CUR;
tagSTREAM_SEEK STREAM_SEEK_END;
tagSTREAM_SEEK STREAM_SEEK_SET;
BOOL __pascal __far STRETCHBLT(HDC, int, int, int, int, HDC, int, int, int, int, DWORD);
int __pascal __far STRETCHDIBITS(HDC, int, int, int, int, int, int, int, int, const void far *, LPBITMAPINFO, UINT, DWORD);
MACRO_STRETCH STRETCH_ANDSCANS;
MACRO_STRETCH STRETCH_DELETESCANS;
MACRO_STRETCH STRETCH_ORSCANS;
HRESULT __pascal __far STRINGFROMCLSID(const CLSID far *const rclsid, LPSTR far *lplpsz);
int __pascal __far STRINGFROMGUID2(const GUID far *const rguid, LPSTR lpsz, int cbMax);
HRESULT __pascal __far STRINGFROMIID(const IID far *const rclsid, LPSTR far *lplpsz);
MACRO_ST ST_ADVISE;
MACRO_ST ST_BLOCKED;
MACRO_ST ST_BLOCKNEXT;
MACRO_ST ST_CLIENT;
MACRO_ST ST_CONNECTED;
MACRO_ST ST_INLIST;
MACRO_ST ST_ISLOCAL;
MACRO_ST ST_ISSELF;
MACRO_ST ST_TERMINATED;
MACRO_SUBLANG SUBLANG_CHINESE_SIMPLIFIED;
MACRO_SUBLANG SUBLANG_CHINESE_TRADITIONAL;
MACRO_SUBLANG SUBLANG_DEFAULT;
MACRO_SUBLANG SUBLANG_DUTCH;
MACRO_SUBLANG SUBLANG_DUTCH_BELGIAN;
MACRO_SUBLANG SUBLANG_ENGLISH_AUS;
MACRO_SUBLANG SUBLANG_ENGLISH_CAN;
MACRO_SUBLANG SUBLANG_ENGLISH_EIRE;
MACRO_SUBLANG SUBLANG_ENGLISH_NZ;
MACRO_SUBLANG SUBLANG_ENGLISH_UK;
MACRO_SUBLANG SUBLANG_ENGLISH_US;
MACRO_SUBLANG SUBLANG_FRENCH;
MACRO_SUBLANG SUBLANG_FRENCH_BELGIAN;
MACRO_SUBLANG SUBLANG_FRENCH_CANADIAN;
MACRO_SUBLANG SUBLANG_FRENCH_SWISS;
MACRO_SUBLANG SUBLANG_GERMAN;
MACRO_SUBLANG SUBLANG_GERMAN_AUSTRIAN;
MACRO_SUBLANG SUBLANG_GERMAN_SWISS;
MACRO_SUBLANG SUBLANG_ITALIAN;
MACRO_SUBLANG SUBLANG_ITALIAN_SWISS;
MACRO_SUBLANG SUBLANG_NEUTRAL;
MACRO_SUBLANG SUBLANG_NORWEGIAN_BOKMAL;
MACRO_SUBLANG SUBLANG_NORWEGIAN_NYNORSK;
MACRO_SUBLANG SUBLANG_PORTUGUESE;
MACRO_SUBLANG SUBLANG_PORTUGUESE_BRAZILIAN;
MACRO_SUBLANG SUBLANG_SERBO_CROATIAN_CYRILLIC;
MACRO_SUBLANG SUBLANG_SERBO_CROATIAN_LATIN;
MACRO_SUBLANG SUBLANG_SPANISH;
MACRO_SUBLANG SUBLANG_SPANISH_MEXICAN;
MACRO_SUBLANG SUBLANG_SPANISH_MODERN;
MACRO_SUBLANG SUBLANG_SYS_DEFAULT;
BOOL __pascal __far SUBTRACTRECT(RECT far *, const RECT far *, const RECT far *);
MACRO_SUCCESS SUCCESS_SUCCESS;
BOOL __pascal __far SWAPMOUSEBUTTON(BOOL);
void __pascal __far SWAPRECORDING(UINT);
void __pascal __far SWITCHSTACKBACK();
void __pascal __far SWITCHSTACKTO(UINT, UINT, UINT);
MACRO_SWP SWP_DEFERERASE;
MACRO_SWP SWP_DRAWFRAME;
MACRO_SWP SWP_FRAMECHANGED;
MACRO_SWP SWP_HIDEWINDOW;
MACRO_SWP SWP_NOACTIVATE;
MACRO_SWP SWP_NOCOPYBITS;
MACRO_SWP SWP_NOMOVE;
MACRO_SWP SWP_NOOWNERZORDER;
MACRO_SWP SWP_NOREDRAW;
MACRO_SWP SWP_NOREPOSITION;
MACRO_SWP SWP_NOSENDCHANGING;
MACRO_SWP SWP_NOSIZE;
MACRO_SWP SWP_NOZORDER;
MACRO_SWP SWP_SHOWWINDOW;
MACRO_SW_SCROLLCHILDREN SW_ERASE;
MACRO_SW SW_HIDE;
MACRO_SW_SCROLLCHILDREN SW_INVALIDATE;
MACRO_SW SW_MAXIMIZE;
MACRO_SW SW_MINIMIZE;
MACRO_SW SW_NORMAL;
MACRO_SW_PARENTCLOSING SW_OTHERMAXIMIZED;
MACRO_SW_PARENTCLOSING SW_OTHERRESTORED;
MACRO_SW_PARENTCLOSING SW_OTHERUNZOOM;
MACRO_SW_PARENTCLOSING SW_OTHERZOOM;
MACRO_SW_PARENTCLOSING SW_PARENTCLOSING;
MACRO_SW_PARENTCLOSING SW_PARENTOPENING;
MACRO_SW SW_RESTORE;
MACRO_SW_SCROLLCHILDREN SW_SCROLLCHILDREN;
MACRO_SW SW_SHOW;
MACRO_SW SW_SHOWMAXIMIZED;
MACRO_SW SW_SHOWMINIMIZED;
MACRO_SW SW_SHOWMINNOACTIVE;
MACRO_SW SW_SHOWNA;
MACRO_SW SW_SHOWNOACTIVATE;
MACRO_SW SW_SHOWNORMAL;
BOOL __pascal __far SYMBOLTOCHARACTER(LPSYV, int, LPSTR, LPINT);
MACRO_CHARSET SYMBOL_CHARSET;
int __pascal __far SYNCALLVOICES();
BSTR __pascal __far SYSALLOCSTRING(const TCHAR far *);
BSTR __pascal __far SYSALLOCSTRINGLEN(const TCHAR far *, unsigned int);
void __pascal __far SYSFREESTRING(BSTR);
MACRO_SYSPAL SYSPAL_NOSTATIC;
MACRO_SYSPAL SYSPAL_STATIC;
int __pascal __far SYSREALLOCSTRING(BSTR far *, const TCHAR far *);
int __pascal __far SYSREALLOCSTRINGLEN(BSTR far *, const TCHAR far *, unsigned int);
unsigned int __pascal __far SYSSTRINGLEN(BSTR);
BOOL __pascal __far SYSTEMHEAPINFO(SYSHEAPINFO far *lpSysHeap);
BOOL __pascal __far SYSTEMPARAMETERSINFO(UINT, UINT, void far *, UINT);
MACRO_SYSTEM SYSTEM_FIXED_FONT;
MACRO_FONT SYSTEM_FONT;
tagSYSKIND SYS_MAC;
tagSYSKIND SYS_WIN16;
tagSYSKIND SYS_WIN32;
MACRO_SYVHI SYVHI_ANSI;
MACRO_SYVHI SYVHI_GESTURE;
MACRO_SYVHI SYVHI_KANJI;
MACRO_SYVHI SYVHI_SHAPE;
MACRO_SYVHI SYVHI_SPECIAL;
MACRO_SYVHI SYVHI_UNICODE;
MACRO_SYVHI SYVHI_VKEY;
MACRO_SYV SYV_APPGESTUREMASK;
MACRO_SYV SYV_BACKSPACE;
MACRO_SYV SYV_BEGINOR;
MACRO_SYV SYV_CIRCLELOA;
MACRO_SYV SYV_CIRCLELOZ;
MACRO_SYV SYV_CIRCLEUPA;
MACRO_SYV SYV_CIRCLEUPZ;
MACRO_SYV SYV_CLEAR;
MACRO_SYV SYV_CLEARWORD;
MACRO_SYV SYV_COPY;
MACRO_SYV SYV_CORRECT;
MACRO_SYV SYV_CUT;
MACRO_SYV SYV_EMPTY;
MACRO_SYV SYV_ENDOR;
MACRO_SYV SYV_EXTENDSELECT;
MACRO_SYV SYV_KKCONVERT;
MACRO_SYV SYV_NULL;
MACRO_SYV SYV_OR;
MACRO_SYV SYV_PASTE;
MACRO_SYV SYV_RETURN;
MACRO_SYV SYV_SHAPEELLIPSE;
MACRO_SYV SYV_SHAPELINE;
MACRO_SYV SYV_SHAPEMAX;
MACRO_SYV SYV_SHAPEMIN;
MACRO_SYV SYV_SHAPERECT;
MACRO_SYV SYV_SOFTNEWLINE;
MACRO_SYV SYV_SPACE;
MACRO_SYV SYV_SPACENULL;
MACRO_SYV SYV_TAB;
MACRO_SYV SYV_UNDO;
MACRO_SYV SYV_UNKNOWN;
MACRO_SYV SYV_USER;
MACRO_S S_ALLTHRESHOLD;
MACRO_S_OK S_FALSE;
MACRO_S S_LEGATO;
MACRO_S S_NORMAL;
MACRO_S_OK S_OK;
MACRO_S S_PERIOD1024;
MACRO_S S_PERIOD2048;
MACRO_S S_PERIOD512;
MACRO_S S_PERIODVOICE;
MACRO_S S_QUEUEEMPTY;
MACRO_S S_SERBDNT;
MACRO_S S_SERDCC;
MACRO_S S_SERDDR;
MACRO_S S_SERDFQ;
MACRO_S S_SERDLN;
MACRO_S S_SERDMD;
MACRO_S S_SERDPT;
MACRO_S S_SERDSH;
MACRO_S S_SERDSR;
MACRO_S S_SERDST;
MACRO_S S_SERDTP;
MACRO_S S_SERDVL;
MACRO_S S_SERDVNA;
MACRO_S S_SERMACT;
MACRO_S S_SEROFM;
MACRO_S S_SERQFUL;
MACRO_S S_STACCATO;
MACRO_S S_THRESHOLD;
MACRO_S S_WHITE1024;
MACRO_S S_WHITE2048;
MACRO_S S_WHITE512;
MACRO_S S_WHITEVOICE;
__int32 __pascal __far TABBEDTEXTOUT(HDC, int, int, LPCSTR, int, int, int far *, int);
BOOL __pascal __far TASKFINDHANDLE(TASKENTRY far *lpTask, HTASK hTask);
BOOL __pascal __far TASKFIRST(TASKENTRY far *lpTask);
DWORD __pascal __far TASKGETCSIP(HTASK hTask);
BOOL __pascal __far TASKNEXT(TASKENTRY far *lpTask);
DWORD __pascal __far TASKSETCSIP(HTASK hTask, WORD wCS, WORD wIP);
BOOL __pascal __far TASKSWITCH(HTASK hTask, DWORD dwNewCSIP);
MACRO_TA TA_BASELINE;
MACRO_TA TA_BOTTOM;
MACRO_TA TA_CENTER;
MACRO_TA TA_LEFT;
MACRO_TA TA_NOUPDATECP;
MACRO_TA TA_RIGHT;
MACRO_TA TA_TOP;
MACRO_TA TA_UPDATECP;
MACRO_TCP TCP_BSDURGENT;
MACRO_TCP TCP_NODELAY;
MACRO_TC TC_CP_STROKE;
MACRO_TC TC_CR_90;
MACRO_TC TC_CR_ANY;
MACRO_TC TC_EA_DOUBLE;
MACRO_TC TC_IA_ABLE;
MACRO_TC TC_OP_CHARACTER;
MACRO_TC TC_OP_STROKE;
MACRO_TC TC_RA_ABLE;
MACRO_TC TC_RESERVED;
MACRO_TC TC_SA_CONTIN;
MACRO_TC TC_SA_DOUBLE;
MACRO_TC TC_SA_INTEGER;
MACRO_TC TC_SF_X_YINDEP;
MACRO_TC TC_SO_ABLE;
MACRO_TC TC_UA_ABLE;
MACRO_TC TC_VA_ABLE;
MACRO_DRIVERVERSION TECHNOLOGY;
void __pascal __far TERMINATEAPP(HTASK hTask, WORD wFlags);
MACRO_TEXTCAPS TEXTCAPS;
BOOL __pascal __far TEXTOUT(HDC, int, int, LPCSTR, int);
MACRO_TF TF_FORCEDRIVE;
void __pascal __far THROW(const int far *, int);
UINT __pascal __far TIMEBEGINPERIOD(UINT uPeriod);
UINT __pascal __far TIMEENDPERIOD(UINT uPeriod);
UINT __pascal __far TIMEGETDEVCAPS(TIMECAPS far *lpTimeCaps, UINT uSize);
UINT __pascal __far TIMEGETSYSTEMTIME(MMTIME far *lpTime, UINT uSize);
DWORD __pascal __far TIMEGETTIME();
UINT __pascal __far TIMEKILLEVENT(UINT uTimerID);
MACRO_TIMEOUT TIMEOUT_ASYNC;
BOOL __pascal __far TIMERCOUNT(TIMERINFO far *lpTimer);
MACRO_BASE TIMERR_BASE;
MACRO_TIMERR TIMERR_NOCANDO;
MACRO_TIMERR TIMERR_NOERROR;
MACRO_TIMERR TIMERR_STRUCT;
UINT __pascal __far TIMESETEVENT(UINT uDelay, UINT uResolution, LPTIMECALLBACK lpFunction, DWORD dwUser, UINT uFlags);
MACRO_TIME TIME_BYTES;
MACRO_TIME TIME_MIDI;
MACRO_TIME TIME_MS;
MACRO_TIME_ONESHOT TIME_ONESHOT;
MACRO_TIME_ONESHOT TIME_PERIODIC;
MACRO_TIME TIME_SAMPLES;
MACRO_TIME TIME_SMPTE;
MACRO_TITLEBARNAMELEN TITLEBARNAMELEN;
tagTYPEKIND TKIND_ALIAS;
tagTYPEKIND TKIND_COCLASS;
tagTYPEKIND TKIND_DISPATCH;
tagTYPEKIND TKIND_ENUM;
tagTYPEKIND TKIND_INTERFACE;
tagTYPEKIND TKIND_MAX;
tagTYPEKIND TKIND_MODULE;
tagTYPEKIND TKIND_RECORD;
tagTYPEKIND TKIND_UNION;
MACRO_TMPF TMPF_DEVICE;
MACRO_TMPF TMPF_FIXED_PITCH;
MACRO_TMPF TMPF_TRUETYPE;
MACRO_TMPF TMPF_VECTOR;
int __pascal __far TOASCII(UINT wVirtKey, UINT wScanCode, BYTE far *lpKeyState, DWORD far *lpChar, UINT wFlags);
MACRO_TPM TPM_CENTERALIGN;
MACRO_TPM TPM_LEFTALIGN;
MACRO_TPM TPM_LEFTBUTTON;
MACRO_TPM TPM_RIGHTALIGN;
MACRO_TPM TPM_RIGHTBUTTON;
BOOL __pascal __far TPTODP(LPPOINT, int);
BOOL __pascal __far TRACKPOPUPMENU(HMENU, UINT, int, int, int, HWND, const RECT far *);
BOOL __pascal __far TRAINCONTEXT(LPRCRESULT, LPSYE, int, LPSYC, int);
BOOL __pascal __far TRAINCONTEXTINTERNAL(LPRCRESULT, LPSYE, int, LPSYC, int);
BOOL __pascal __far TRAININK(LPRC, HPENDATA, LPSYV);
BOOL __pascal __far TRAININKINTERNAL(LPRC, HPENDATA, LPSYV);
MACRO_TRAIN TRAIN_BOTH;
MACRO_TRAIN TRAIN_CUSTOM;
MACRO_TRAIN TRAIN_DEFAULT;
MACRO_TRAIN TRAIN_NONE;
MACRO_TRAIN TRAIN_REVERT;
MACRO_TRAIN TRAIN_SAVE;
MACRO_TRANSFORM TRANSFORM_CTM;
int __pascal __far TRANSLATEACCELERATOR(HWND, HACCEL, MSG far *);
BOOL __pascal __far TRANSLATEMDISYSACCEL(HWND, MSG far *);
BOOL __pascal __far TRANSLATEMESSAGE(const MSG far *);
int __pascal __far TRANSMITCOMMCHAR(int, char);
MACRO_TRANSPARENT TRANSPARENT;
MACRO_BOOL TRUE;
MACRO_FONTTYPE TRUETYPE_FONTTYPE;
MACRO_AGAIN TRY_AGAIN;
MACRO_TT TT_AVAILABLE;
MACRO_TT TT_ENABLED;
MACRO_TT TT_POLYGON_TYPE;
MACRO_TT TT_PRIM_LINE;
MACRO_TT TT_PRIM_QSPLINE;
MACRO_ONESTOPBIT TWOSTOPBITS;
tagTYMED TYMED_FILE;
tagTYMED TYMED_GDI;
tagTYMED TYMED_HGLOBAL;
tagTYMED TYMED_ISTORAGE;
tagTYMED TYMED_ISTREAM;
tagTYMED TYMED_MFPICT;
tagTYMED TYMED_NULL;
tagTYPEFLAGS TYPEFLAG_FAPPOBJECT;
tagTYPEFLAGS TYPEFLAG_FCANCREATE;
MACRO_TYPE TYPE_E_AMBIGUOUSNAME;
MACRO_TYPE TYPE_E_BADMODULEKIND;
MACRO_TYPE TYPE_E_BUFFERTOOSMALL;
MACRO_TYPE TYPE_E_CANTCREATETMPFILE;
MACRO_TYPE TYPE_E_CANTLOADLIBRARY;
MACRO_TYPE TYPE_E_CIRCULARTYPE;
MACRO_TYPE TYPE_E_DLLFUNCTIONNOTFOUND;
MACRO_TYPE TYPE_E_DUPLICATEID;
MACRO_TYPE TYPE_E_ELEMENTNOTFOUND;
MACRO_TYPE TYPE_E_INCONSISTENTPROPFUNCS;
MACRO_TYPE TYPE_E_INVALIDSTATE;
MACRO_TYPE TYPE_E_INVDATAREAD;
MACRO_TYPE TYPE_E_IOERROR;
MACRO_TYPE TYPE_E_LIBNOTREGISTERED;
MACRO_TYPE TYPE_E_NAMECONFLICT;
MACRO_TYPE TYPE_E_OUTOFBOUNDS;
MACRO_TYPE TYPE_E_QUALIFIEDNAMEDISALLOWED;
MACRO_TYPE TYPE_E_REGISTRYACCESS;
MACRO_TYPE TYPE_E_SIZETOOBIG;
MACRO_TYPE TYPE_E_TYPEMISMATCH;
MACRO_TYPE TYPE_E_UNDEFINEDTYPE;
MACRO_TYPE TYPE_E_UNKNOWNLCID;
MACRO_TYPE TYPE_E_UNSUPFORMAT;
MACRO_TYPE TYPE_E_WRONGTYPEKIND;
MACRO_UAE_BOX UAE_BOX;
void __pascal __far UNALLOCDISKSPACE(UINT);
void __pascal __far UNALLOCFILEHANDLES();
int __pascal __far UNGETCOMMCHAR(int, char);
BOOL __pascal __far UNHOOKWINDOWSHOOK(int, HOOKPROC);
BOOL __pascal __far UNHOOKWINDOWSHOOKEX(HHOOK hHook);
void __pascal __far UNINSTALLRECOGNIZER(HREC);
BOOL __pascal __far UNIONRECT(RECT far *, const RECT far *, const RECT far *);
void __pascal __far UNLOCKSEGMENT(UINT);
BOOL __pascal __far UNREALIZEOBJECT(HGDIOBJ);
BOOL __pascal __far UNREGISTERCLASS(LPCSTR, HINSTANCE);
int __pascal __far UPDATECOLORS(HDC);
MACRO_UPDATELINKS UPDATELINKS_STARTDELAY;
void __pascal __far UPDATEPENINFO(LPPENINFO);
void __pascal __far UPDATEWINDOW(HWND);
MACRO_UPDFCACHE UPDFCACHE_ALL;
MACRO_UPDFCACHE UPDFCACHE_ALLBUTNODATACACHE;
MACRO_UPDFCACHE UPDFCACHE_IFBLANK;
MACRO_UPDFCACHE UPDFCACHE_IFBLANKORONSAVECACHE;
MACRO_UPDFCACHE UPDFCACHE_NODATACACHE;
MACRO_UPDFCACHE UPDFCACHE_NORMALCACHE;
MACRO_UPDFCACHE UPDFCACHE_ONLYIFBLANK;
MACRO_UPDFCACHE UPDFCACHE_ONSAVECACHE;
MACRO_UPDFCACHE UPDFCACHE_ONSTOPCACHE;
MACRO_USA USA_COUNTRYCODE;
tagUSERCLASSTYPE USERCLASSTYPE_APPNAME;
tagUSERCLASSTYPE USERCLASSTYPE_FULL;
tagUSERCLASSTYPE USERCLASSTYPE_SHORT;
MACRO_HEAP USER_HEAP;
void __pascal __far VALIDATECODESEGMENTS();
void __pascal __far VALIDATEFREESPACES();
void __pascal __far VALIDATERECT(HWND, const RECT far *);
void __pascal __far VALIDATERGN(HWND, HRGN);
HRESULT __pascal __far VARBOOLFROMCY(CY cyIn, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMDATE(DATE dateIn, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMDISP(IDispatch far *pdispIn, LCID lcid, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMI2(int sIn, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMI4(__int32 lIn, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMR4(float fltIn, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMR8(double dblIn, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBOOLFROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, VARIANT_BOOL far *pboolOut);
HRESULT __pascal __far VARBSTRFROMBOOL(VARIANT_BOOL boolIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMCY(CY cyIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMDATE(DATE dateIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMDISP(IDispatch far *pdispIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMI2(int iVal, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMI4(__int32 lIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMR4(float fltIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARBSTRFROMR8(double dblIn, LCID lcid, unsigned __int32 dwFlags, BSTR far *pbstrOut);
HRESULT __pascal __far VARCYFROMBOOL(VARIANT_BOOL boolIn, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMDATE(DATE dateIn, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMDISP(IDispatch far *pdispIn, LCID lcid, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMI2(int sIn, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMI4(__int32 lIn, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMR4(float fltIn, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMR8(double dblIn, CY far *pcyOut);
HRESULT __pascal __far VARCYFROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, CY far *pcyOut);
HRESULT __pascal __far VARDATEFROMBOOL(VARIANT_BOOL boolIn, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMCY(CY cyIn, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMDISP(IDispatch far *pdispIn, LCID lcid, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMI2(int sIn, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMI4(__int32 lIn, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMR4(float fltIn, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMR8(double dblIn, DATE far *pdateOut);
HRESULT __pascal __far VARDATEFROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, DATE far *pdateOut);
tagVARFLAGS VARFLAG_FREADONLY;
HRESULT __pascal __far VARI2FROMBOOL(VARIANT_BOOL boolIn, int far *psOut);
HRESULT __pascal __far VARI2FROMCY(CY cyIn, int far *psOut);
HRESULT __pascal __far VARI2FROMDATE(DATE dateIn, int far *psOut);
HRESULT __pascal __far VARI2FROMDISP(IDispatch far *pdispIn, LCID lcid, int far *psOut);
HRESULT __pascal __far VARI2FROMI4(__int32 lIn, int far *psOut);
HRESULT __pascal __far VARI2FROMR4(float fltIn, int far *psOut);
HRESULT __pascal __far VARI2FROMR8(double dblIn, int far *psOut);
HRESULT __pascal __far VARI2FROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, int far *psOut);
HRESULT __pascal __far VARI4FROMBOOL(VARIANT_BOOL boolIn, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMCY(CY cyIn, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMDATE(DATE dateIn, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMDISP(IDispatch far *pdispIn, LCID lcid, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMI2(int sIn, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMR4(float fltIn, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMR8(double dblIn, __int32 far *plOut);
HRESULT __pascal __far VARI4FROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, __int32 far *plOut);
MACRO_PITCH VARIABLE_PITCH;
HRESULT __pascal __far VARIANTCHANGETYPE(VARIANTARG far *pvargDest, VARIANTARG far *pvarSrc, unsigned int wFlags, VARTYPE vt);
HRESULT __pascal __far VARIANTCHANGETYPEEX(VARIANTARG far *pvargDest, VARIANTARG far *pvarSrc, LCID lcid, unsigned int wFlags, VARTYPE vt);
HRESULT __pascal __far VARIANTCLEAR(VARIANTARG far *pvarg);
HRESULT __pascal __far VARIANTCOPY(VARIANTARG far *pvargDest, VARIANTARG far *pvargSrc);
HRESULT __pascal __far VARIANTCOPYIND(VARIANT far *pvarDest, VARIANTARG far *pvargSrc);
void __pascal __far VARIANTINIT(VARIANTARG far *pvarg);
int __pascal __far VARIANTTIMETODOSDATETIME(double vtime, unsigned int far *pwDosDate, unsigned int far *pwDosTime);
MACRO_VARIANT VARIANT_NOVALUEPROP;
HRESULT __pascal __far VARR4FROMBOOL(VARIANT_BOOL boolIn, float far *pfltOut);
HRESULT __pascal __far VARR4FROMCY(CY cyIn, float far *pfltOut);
HRESULT __pascal __far VARR4FROMDATE(DATE dateIn, float far *pfltOut);
HRESULT __pascal __far VARR4FROMDISP(IDispatch far *pdispIn, LCID lcid, float far *pfltOut);
HRESULT __pascal __far VARR4FROMI2(int sIn, float far *pfltOut);
HRESULT __pascal __far VARR4FROMI4(__int32 lIn, float far *pfltOut);
HRESULT __pascal __far VARR4FROMR8(double dblIn, float far *pfltOut);
HRESULT __pascal __far VARR4FROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, float far *pfltOut);
HRESULT __pascal __far VARR8FROMBOOL(VARIANT_BOOL boolIn, double far *pdblOut);
HRESULT __pascal __far VARR8FROMCY(CY cyIn, double far *pdblOut);
HRESULT __pascal __far VARR8FROMDATE(DATE dateIn, double far *pdblOut);
HRESULT __pascal __far VARR8FROMDISP(IDispatch far *pdispIn, LCID lcid, double far *pdblOut);
HRESULT __pascal __far VARR8FROMI2(int sIn, double far *pdblOut);
HRESULT __pascal __far VARR8FROMI4(__int32 lIn, double far *pdblOut);
HRESULT __pascal __far VARR8FROMR4(float fltIn, double far *pdblOut);
HRESULT __pascal __far VARR8FROMSTR(TCHAR far *strIn, LCID lcid, unsigned __int32 dwFlags, double far *pdblOut);
tagVARKIND VAR_CONST;
MACRO_VAR VAR_DATEVALUEONLY;
tagVARKIND VAR_DISPATCH;
tagVARKIND VAR_PERINSTANCE;
tagVARKIND VAR_STATIC;
MACRO_VAR VAR_TIMEVALUEONLY;
UINT __pascal __far VERFINDFILE(UINT uFlags, LPCSTR szFileName, LPCSTR szWinDir, LPCSTR szAppDir, LPSTR szCurDir, UINT far *lpuCurDirLen, LPSTR szDestDir, UINT far *lpuDestDirLen);
DWORD __pascal __far VERINSTALLFILE(UINT uFlags, LPCSTR szSrcFileName, LPCSTR szDestFileName, LPCSTR szSrcDir, LPCSTR szDestDir, LPCSTR szCurDir, LPSTR szTmpFile, UINT far *lpuTmpFileLen);
UINT __pascal __far VERLANGUAGENAME(UINT wLang, LPSTR szLang, UINT nSize);
BOOL __pascal __far VERQUERYVALUE(const void far *pBlock, LPCSTR lpSubBlock, void far * far *lplpBuffer, UINT far *lpuLen);
MACRO_VERTRES VERTRES;
MACRO_VERTSIZE VERTSIZE;
MACRO_VER VER_FILEFLAGS;
MACRO_VER VER_FILEFLAGSMASK;
MACRO_VER VER_FILEOS;
MACRO_VFFF VFFF_ISSHAREDFILE;
MACRO_VFF VFF_BUFFTOOSMALL;
MACRO_VFF VFF_CURNEDEST;
MACRO_VFF VFF_FILEINUSE;
MACRO_VFT2 VFT2_DRV_COMM;
MACRO_VFT2 VFT2_DRV_DISPLAY;
MACRO_VFT2 VFT2_DRV_INSTALLABLE;
MACRO_VFT2 VFT2_DRV_KEYBOARD;
MACRO_VFT2 VFT2_DRV_LANGUAGE;
MACRO_VFT2 VFT2_DRV_MOUSE;
MACRO_VFT2 VFT2_DRV_NETWORK;
MACRO_VFT2 VFT2_DRV_PRINTER;
MACRO_VFT2 VFT2_DRV_SOUND;
MACRO_VFT2 VFT2_DRV_SYSTEM;
MACRO_VFT2 VFT2_FONT_RASTER;
MACRO_VFT2 VFT2_FONT_TRUETYPE;
MACRO_VFT2 VFT2_FONT_VECTOR;
MACRO_VFT2 VFT2_UNKNOWN;
MACRO_VFT VFT_APP;
MACRO_VFT VFT_DLL;
MACRO_VFT VFT_DRV;
MACRO_VFT VFT_FONT;
MACRO_VFT VFT_STATIC_LIB;
MACRO_VFT VFT_UNKNOWN;
MACRO_VFT VFT_VXD;
MACRO_DRAW VIEW_E_DRAW;
MACRO_VIEW VIEW_E_FIRST;
MACRO_VIEW VIEW_E_LAST;
MACRO_VIEW_S VIEW_S_ALREADY_FROZEN;
MACRO_VIEW VIEW_S_FIRST;
MACRO_VIEW VIEW_S_LAST;
MACRO_VIFF VIFF_DONTDELETEOLD;
MACRO_VIFF VIFF_FORCEINSTALL;
MACRO_VIF VIF_ACCESSVIOLATION;
MACRO_VIF VIF_BUFFTOOSMALL;
MACRO_VIF VIF_CANNOTCREATE;
MACRO_VIF VIF_CANNOTDELETE;
MACRO_VIF VIF_CANNOTDELETECUR;
MACRO_VIF VIF_CANNOTREADDST;
MACRO_VIF VIF_CANNOTREADSRC;
MACRO_VIF VIF_CANNOTRENAME;
MACRO_VIF VIF_DIFFCODEPG;
MACRO_VIF VIF_DIFFLANG;
MACRO_VIF VIF_DIFFTYPE;
MACRO_VIF VIF_FILEINUSE;
MACRO_VIF VIF_MISMATCH;
MACRO_VIF VIF_OUTOFMEMORY;
MACRO_VIF VIF_OUTOFSPACE;
MACRO_VIF VIF_SHARINGVIOLATION;
MACRO_VIF VIF_SRCOLD;
MACRO_VIF VIF_TEMPFILE;
MACRO_VIF VIF_WRITEPROT;
UINT __pascal __far VKKEYSCAN(UINT);
MACRO_VK VK_ADD;
MACRO_VK VK_BACK;
MACRO_VK VK_CANCEL;
MACRO_VK VK_CAPITAL;
MACRO_VK VK_CLEAR;
MACRO_VK VK_CONTROL;
MACRO_VK VK_DECIMAL;
MACRO_VK VK_DELETE;
MACRO_VK VK_DIVIDE;
MACRO_VK VK_DOWN;
MACRO_VK VK_END;
MACRO_VK VK_ESCAPE;
MACRO_VK VK_EXECUTE;
MACRO_VK VK_F1;
MACRO_VK VK_F10;
MACRO_VK VK_F11;
MACRO_VK VK_F12;
MACRO_VK VK_F13;
MACRO_VK VK_F14;
MACRO_VK VK_F15;
MACRO_VK VK_F16;
MACRO_VK VK_F17;
MACRO_VK VK_F18;
MACRO_VK VK_F19;
MACRO_VK VK_F2;
MACRO_VK VK_F20;
MACRO_VK VK_F21;
MACRO_VK VK_F22;
MACRO_VK VK_F23;
MACRO_VK VK_F24;
MACRO_VK VK_F3;
MACRO_VK VK_F4;
MACRO_VK VK_F5;
MACRO_VK VK_F6;
MACRO_VK VK_F7;
MACRO_VK VK_F8;
MACRO_VK VK_F9;
MACRO_VK VK_HELP;
MACRO_VK VK_HOME;
MACRO_VK VK_INSERT;
MACRO_VK VK_LBUTTON;
MACRO_VK VK_LEFT;
MACRO_VK VK_MBUTTON;
MACRO_VK VK_MENU;
MACRO_VK VK_MULTIPLY;
MACRO_VK VK_NEXT;
MACRO_VK VK_NUMLOCK;
MACRO_VK VK_NUMPAD0;
MACRO_VK VK_NUMPAD1;
MACRO_VK VK_NUMPAD2;
MACRO_VK VK_NUMPAD3;
MACRO_VK VK_NUMPAD4;
MACRO_VK VK_NUMPAD5;
MACRO_VK VK_NUMPAD6;
MACRO_VK VK_NUMPAD7;
MACRO_VK VK_NUMPAD8;
MACRO_VK VK_NUMPAD9;
MACRO_VK VK_PAUSE;
MACRO_VK VK_PRINT;
MACRO_VK VK_PRIOR;
MACRO_VK VK_RBUTTON;
MACRO_VK VK_RETURN;
MACRO_VK VK_RIGHT;
MACRO_VK VK_SCROLL;
MACRO_VK VK_SELECT;
MACRO_VK VK_SEPARATOR;
MACRO_VK VK_SHIFT;
MACRO_VK VK_SNAPSHOT;
MACRO_VK VK_SPACE;
MACRO_VK VK_SUBTRACT;
MACRO_VK VK_TAB;
MACRO_VK VK_UP;
MACRO_VOS VOS_DOS;
MACRO_VOS VOS_DOS_WINDOWS16;
MACRO_VOS VOS_DOS_WINDOWS32;
MACRO_VOS VOS_NT;
MACRO_VOS VOS_NT_WINDOWS32;
MACRO_VOS VOS_OS216;
MACRO_VOS VOS_OS216_PM16;
MACRO_VOS VOS_OS232;
MACRO_VOS VOS_OS232_PM32;
MACRO_VOS VOS_UNKNOWN;
MACRO_VOS VOS__BASE;
MACRO_VOS VOS__PM16;
MACRO_VOS VOS__PM32;
MACRO_VOS VOS__WINDOWS16;
MACRO_VOS VOS__WINDOWS32;
MACRO_VS VS_FFI_FILEFLAGSMASK;
MACRO_VS VS_FFI_SIGNATURE;
MACRO_VS VS_FFI_STRUCVERSION;
MACRO_VS VS_FF_DEBUG;
MACRO_VS VS_FF_INFOINFERRED;
MACRO_VS VS_FF_PATCHED;
MACRO_VS VS_FF_PRERELEASE;
MACRO_VS VS_FF_PRIVATEBUILD;
MACRO_VS VS_FF_SPECIALBUILD;
MACRO_VT VT_ARRAY;
VARENUM VT_BLOB;
VARENUM VT_BLOB_OBJECT;
VARENUM VT_BOOL;
VARENUM VT_BSTR;
MACRO_VT VT_BYREF;
VARENUM VT_CARRAY;
VARENUM VT_CF;
VARENUM VT_CLSID;
VARENUM VT_CY;
VARENUM VT_DATE;
VARENUM VT_DISPATCH;
VARENUM VT_EMPTY;
VARENUM VT_ERROR;
VARENUM VT_FILETIME;
VARENUM VT_HRESULT;
VARENUM VT_I1;
VARENUM VT_I2;
VARENUM VT_I4;
VARENUM VT_I8;
VARENUM VT_INT;
VARENUM VT_LPSTR;
VARENUM VT_LPWSTR;
VARENUM VT_NULL;
VARENUM VT_PTR;
VARENUM VT_R4;
VARENUM VT_R8;
MACRO_VT VT_RESERVED;
VARENUM VT_SAFEARRAY;
VARENUM VT_STORAGE;
VARENUM VT_STORED_OBJECT;
VARENUM VT_STREAM;
VARENUM VT_STREAMED_OBJECT;
VARENUM VT_UI1;
VARENUM VT_UI2;
VARENUM VT_UI4;
VARENUM VT_UI8;
VARENUM VT_UINT;
VARENUM VT_UNKNOWN;
VARENUM VT_USERDEFINED;
VARENUM VT_VARIANT;
MACRO_VT VT_VECTOR;
VARENUM VT_VOID;
MACRO_VWM VWM_MOUSELEFTDOWN;
MACRO_VWM VWM_MOUSELEFTUP;
MACRO_VWM VWM_MOUSEMOVE;
MACRO_VWM VWM_MOUSERIGHTDOWN;
MACRO_VWM VWM_MOUSERIGHTUP;
void __pascal __far WAITMESSAGE();
int __pascal __far WAITSOUNDSTATE(int);
MACRO_WAVECAPS WAVECAPS_LRVOLUME;
MACRO_WAVECAPS WAVECAPS_PITCH;
MACRO_WAVECAPS WAVECAPS_PLAYBACKRATE;
MACRO_WAVECAPS WAVECAPS_SYNC;
MACRO_WAVECAPS WAVECAPS_VOLUME;
UINT __pascal __far WAVEINADDBUFFER(HWAVEIN hWaveIn, WAVEHDR far *lpWaveInHdr, UINT uSize);
UINT __pascal __far WAVEINCLOSE(HWAVEIN hWaveIn);
UINT __pascal __far WAVEINGETDEVCAPS(UINT uDeviceID, WAVEINCAPS far *lpCaps, UINT uSize);
UINT __pascal __far WAVEINGETERRORTEXT(UINT uError, LPSTR lpText, UINT uSize);
UINT __pascal __far WAVEINGETID(HWAVEIN hWaveIn, UINT far *lpuDeviceID);
UINT __pascal __far WAVEINGETNUMDEVS();
UINT __pascal __far WAVEINGETPOSITION(HWAVEIN hWaveIn, MMTIME far *lpInfo, UINT uSize);
DWORD __pascal __far WAVEINMESSAGE(HWAVEIN hWaveIn, UINT uMessage, DWORD dw1, DWORD dw2);
UINT __pascal __far WAVEINOPEN(HWAVEIN far *lphWaveIn, UINT uDeviceID, const WAVEFORMAT far *lpFormat, DWORD dwCallback, DWORD dwInstance, DWORD dwFlags);
UINT __pascal __far WAVEINPREPAREHEADER(HWAVEIN hWaveIn, WAVEHDR far *lpWaveInHdr, UINT uSize);
UINT __pascal __far WAVEINRESET(HWAVEIN hWaveIn);
UINT __pascal __far WAVEINSTART(HWAVEIN hWaveIn);
UINT __pascal __far WAVEINSTOP(HWAVEIN hWaveIn);
UINT __pascal __far WAVEINUNPREPAREHEADER(HWAVEIN hWaveIn, WAVEHDR far *lpWaveInHdr, UINT uSize);
UINT __pascal __far WAVEOUTBREAKLOOP(HWAVEOUT hWaveOut);
UINT __pascal __far WAVEOUTCLOSE(HWAVEOUT hWaveOut);
UINT __pascal __far WAVEOUTGETDEVCAPS(UINT uDeviceID, WAVEOUTCAPS far *lpCaps, UINT uSize);
UINT __pascal __far WAVEOUTGETERRORTEXT(UINT uError, LPSTR lpText, UINT uSize);
UINT __pascal __far WAVEOUTGETID(HWAVEOUT hWaveOut, UINT far *lpuDeviceID);
UINT __pascal __far WAVEOUTGETNUMDEVS();
UINT __pascal __far WAVEOUTGETPITCH(HWAVEOUT hWaveOut, DWORD far *lpdwPitch);
UINT __pascal __far WAVEOUTGETPLAYBACKRATE(HWAVEOUT hWaveOut, DWORD far *lpdwRate);
UINT __pascal __far WAVEOUTGETPOSITION(HWAVEOUT hWaveOut, MMTIME far *lpInfo, UINT uSize);
UINT __pascal __far WAVEOUTGETVOLUME(UINT uDeviceID, DWORD far *lpdwVolume);
DWORD __pascal __far WAVEOUTMESSAGE(HWAVEOUT hWaveOut, UINT uMessage, DWORD dw1, DWORD dw2);
UINT __pascal __far WAVEOUTOPEN(HWAVEOUT far *lphWaveOut, UINT uDeviceID, const WAVEFORMAT far *lpFormat, DWORD dwCallback, DWORD dwInstance, DWORD dwFlags);
UINT __pascal __far WAVEOUTPAUSE(HWAVEOUT hWaveOut);
UINT __pascal __far WAVEOUTPREPAREHEADER(HWAVEOUT hWaveOut, WAVEHDR far *lpWaveOutHdr, UINT uSize);
UINT __pascal __far WAVEOUTRESET(HWAVEOUT hWaveOut);
UINT __pascal __far WAVEOUTRESTART(HWAVEOUT hWaveOut);
UINT __pascal __far WAVEOUTSETPITCH(HWAVEOUT hWaveOut, DWORD dwPitch);
UINT __pascal __far WAVEOUTSETPLAYBACKRATE(HWAVEOUT hWaveOut, DWORD dwRate);
UINT __pascal __far WAVEOUTSETVOLUME(UINT uDeviceID, DWORD dwVolume);
UINT __pascal __far WAVEOUTUNPREPAREHEADER(HWAVEOUT hWaveOut, WAVEHDR far *lpWaveOutHdr, UINT uSize);
UINT __pascal __far WAVEOUTWRITE(HWAVEOUT hWaveOut, WAVEHDR far *lpWaveOutHdr, UINT uSize);
MACRO_WAVERR WAVERR_BADFORMAT;
MACRO_BASE WAVERR_BASE;
MACRO_WAVERR WAVERR_LASTERROR;
MACRO_WAVERR WAVERR_STILLPLAYING;
MACRO_WAVERR WAVERR_SYNC;
MACRO_WAVERR WAVERR_UNPREPARED;
MACRO_WAVE WAVE_ALLOWSYNC;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_1M08;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_1M16;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_1S08;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_1S16;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_2M08;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_2M16;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_2S08;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_2S16;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_4M08;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_4M16;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_4S08;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_4S16;
MACRO_WAVE_INVALIDFORMAT WAVE_FORMAT_PCM;
MACRO_WAVE WAVE_FORMAT_QUERY;
MACRO_WAVE_INVALIDFORMAT WAVE_INVALIDFORMAT;
MACRO_WAVE WAVE_MAPPER;
MACRO_WA WA_ACTIVE;
MACRO_WA WA_CLICKACTIVE;
MACRO_WA WA_INACTIVE;
MACRO_WB WB_ISDELIMITER;
MACRO_WB WB_LEFT;
MACRO_WB WB_RIGHT;
MACRO_WCR WCR_CONFIGDIALOG;
MACRO_WCR WCR_DEFAULT;
MACRO_WCR WCR_PRIVATE;
MACRO_WCR WCR_QUERY;
MACRO_WCR WCR_QUERYLANGUAGE;
MACRO_WCR WCR_RCCHANGE;
MACRO_WCR WCR_RECOGNAME;
MACRO_WCR WCR_TRAIN;
MACRO_WCR WCR_TRAINCUSTOM;
MACRO_WCR WCR_TRAINDIRTY;
MACRO_WCR WCR_TRAINMAX;
MACRO_WCR WCR_TRAINSAVE;
MACRO_WCR WCR_USERCHANGE;
MACRO_WCR WCR_VERSION;
MACRO_WDI WDI_ALLOCBREAK;
MACRO_WDI WDI_FILTER;
MACRO_WDI WDI_OPTIONS;
MACRO_WEP WEP_FREE_DLL;
MACRO_WEP WEP_SYSTEM_EXIT;
MACRO_WF WF_80x87;
MACRO_WF WF_CPU086;
MACRO_WF WF_CPU186;
MACRO_WF WF_CPU286;
MACRO_WF WF_CPU386;
MACRO_WF WF_CPU486;
MACRO_WF WF_ENHANCED;
MACRO_WF WF_LARGEFRAME;
MACRO_WF WF_PAGING;
MACRO_WF WF_PMODE;
MACRO_WF WF_SMALLFRAME;
MACRO_WF WF_STANDARD;
MACRO_WF WF_WIN286;
MACRO_WF WF_WIN386;
MACRO_WF WF_WLO;
MACRO_WHDR WHDR_BEGINLOOP;
MACRO_WHDR WHDR_DONE;
MACRO_WHDR WHDR_ENDLOOP;
MACRO_WHDR WHDR_INQUEUE;
MACRO_WHDR WHDR_PREPARED;
MACRO_WHITENESS WHITENESS;
MACRO_BLACKONWHITE WHITEONBLACK;
MACRO_BRUSH WHITE_BRUSH;
MACRO_PEN WHITE_PEN;
MACRO_WH WH_CALLWNDPROC;
MACRO_WH_CBT WH_CBT;
MACRO_WH_DEBUG WH_DEBUG;
MACRO_WH WH_GETMESSAGE;
MACRO_WH_HARDWARE WH_HARDWARE;
MACRO_WH_JOURNALRECORD WH_JOURNALPLAYBACK;
MACRO_WH_JOURNALRECORD WH_JOURNALRECORD;
MACRO_WH_KEYBOARD WH_KEYBOARD;
MACRO_WH_MOUSE WH_MOUSE;
MACRO_WH WH_MSGFILTER;
MACRO_WH_HARDWARE WH_SHELL;
MACRO_WH WH_SYSMSGFILTER;
MACRO_WIM WIM_CLOSE;
MACRO_WIM WIM_DATA;
MACRO_WIM WIM_OPEN;
MACRO_ALTERNATE WINDING;
HWND __pascal __far WINDOWFROMPOINT(POINT);
UINT __pascal __far WINEXEC(LPCSTR, UINT);
BOOL __pascal __far WINHELP(HWND hwndMain, LPCSTR lpszHelp, UINT usCommand, DWORD ulData);
MACRO_WINVER WINVER;
MACRO_WM32 WM32_Insufficient_Mem;
MACRO_WM32 WM32_Insufficient_Sels;
MACRO_WM32 WM32_Invalid_Arg;
MACRO_WM32 WM32_Invalid_Flags;
MACRO_WM32 WM32_Invalid_Func;
MACRO_WM_ACTIVATE WM_ACTIVATE;
MACRO_WM_ACTIVATE WM_ACTIVATEAPP;
MACRO_WM_CUT WM_ASKCBFORMATNAME;
MACRO_WM_CANCELMODE WM_CANCELMODE;
MACRO_WM_CUT WM_CHANGECBCHAIN;
MACRO_WM_ACTIVATE WM_CHAR;
MACRO_WM_VKEYTOITEM WM_CHARTOITEM;
MACRO_WM_CHILDACTIVATE WM_CHILDACTIVATE;
MACRO_WM_CHOOSEFONT WM_CHOOSEFONT_GETLOGFONT;
MACRO_WM_CUT WM_CLEAR;
MACRO_WM_QUERYOPEN WM_CLOSE;
MACRO_WM_PENWINFIRST WM_COALESCE_FIRST;
MACRO_WM_PENWINFIRST WM_COALESCE_LAST;
MACRO_WM_INITMENU WM_COMMAND;
MACRO_WM_COMMNOTIFY WM_COMMNOTIFY;
MACRO_WM WM_COMPACTING;
MACRO_WM_DRAWITEM WM_COMPAREITEM;
MACRO_WM_CUT WM_COPY;
MACRO_WM_CPL WM_CPL_LAUNCH;
MACRO_WM_CPL WM_CPL_LAUNCHED;
MACRO_WM_CREATE WM_CREATE;
MACRO_WM_CTLCOLOR WM_CTLCOLOR;
MACRO_WM_CUT WM_CUT;
MACRO_WM_DDE WM_DDE_ACK;
MACRO_WM_DDE WM_DDE_ADVISE;
MACRO_WM_DDE WM_DDE_DATA;
MACRO_WM_DDE WM_DDE_EXECUTE;
MACRO_WM_DDE WM_DDE_FIRST;
MACRO_WM_DDE WM_DDE_INITIATE;
MACRO_WM_DDE WM_DDE_LAST;
MACRO_WM_DDE WM_DDE_POKE;
MACRO_WM_DDE WM_DDE_REQUEST;
MACRO_WM_DDE WM_DDE_TERMINATE;
MACRO_WM_DDE WM_DDE_UNADVISE;
MACRO_WM_ACTIVATE WM_DEADCHAR;
MACRO_WM_DRAWITEM WM_DELETEITEM;
MACRO_WM_CREATE WM_DESTROY;
MACRO_WM_CUT WM_DESTROYCLIPBOARD;
MACRO_WM_DEVMODECHANGE WM_DEVMODECHANGE;
MACRO_WM_CUT WM_DRAWCLIPBOARD;
MACRO_WM_DRAWITEM WM_DRAWITEM;
MACRO_WM_QUERYDRAGICON WM_DROPFILES;
MACRO_WM_SETREDRAW WM_ENABLE;
MACRO_WM_QUERYENDSESSION WM_ENDSESSION;
MACRO_WM_INITDIALOG WM_ENTERIDLE;
MACRO_WM_PAINT WM_ERASEBKGND;
MACRO_WM_FONTCHANGE WM_FONTCHANGE;
MACRO_WM_GETDLGCODE WM_GETDLGCODE;
MACRO_WM_SETFONT WM_GETFONT;
MACRO_WM_QUERYOPEN WM_GETMINMAXINFO;
MACRO_WM_SETREDRAW WM_GETTEXT;
MACRO_WM_SETREDRAW WM_GETTEXTLENGTH;
MACRO_WM_RCRESULT WM_GLOBALRCCHANGE;
MACRO_WM_RCRESULT WM_HEDITCTL;
MACRO_WM_RCRESULT WM_HOOKRCRESULT;
MACRO_WM_INITMENU WM_HSCROLL;
MACRO_WM_CUT WM_HSCROLLCLIPBOARD;
MACRO_WM_PAINT WM_ICONERASEBKGND;
MACRO_WM_INITDIALOG WM_INITDIALOG;
MACRO_WM_INITMENU WM_INITMENU;
MACRO_WM_INITMENU WM_INITMENUPOPUP;
MACRO_WM_ACTIVATE WM_KEYDOWN;
MACRO_WM_ACTIVATE WM_KEYFIRST;
MACRO_WM_ACTIVATE WM_KEYLAST;
MACRO_WM_ACTIVATE WM_KEYUP;
MACRO_WM_ACTIVATE WM_KILLFOCUS;
MACRO_WM_MOUSEMOVE WM_LBUTTONDBLCLK;
MACRO_WM_MOUSEMOVE WM_LBUTTONDOWN;
MACRO_WM_MOUSEMOVE WM_LBUTTONUP;
MACRO_WM_MOUSEMOVE WM_MBUTTONDBLCLK;
MACRO_WM_MOUSEMOVE WM_MBUTTONDOWN;
MACRO_WM_MOUSEMOVE WM_MBUTTONUP;
MACRO_WM_MDICREATE WM_MDIACTIVATE;
MACRO_WM_MDICREATE WM_MDICASCADE;
MACRO_WM_MDICREATE WM_MDICREATE;
MACRO_WM_MDICREATE WM_MDIDESTROY;
MACRO_WM_MDICREATE WM_MDIGETACTIVE;
MACRO_WM_MDICREATE WM_MDIICONARRANGE;
MACRO_WM_MDICREATE WM_MDIMAXIMIZE;
MACRO_WM_MDICREATE WM_MDINEXT;
MACRO_WM_MDICREATE WM_MDIRESTORE;
MACRO_WM_MDICREATE WM_MDISETMENU;
MACRO_WM_MDICREATE WM_MDITILE;
MACRO_WM_DRAWITEM WM_MEASUREITEM;
MACRO_WM_INITMENU WM_MENUCHAR;
MACRO_WM_INITMENU WM_MENUSELECT;
MACRO_WM_NCMOUSEMOVE WM_MOUSEACTIVATE;
MACRO_WM_MOUSEMOVE WM_MOUSEFIRST;
MACRO_WM_MOUSEMOVE WM_MOUSELAST;
MACRO_WM_MOUSEMOVE WM_MOUSEMOVE;
MACRO_WM_WINDOWPOSCHANGING WM_MOVE;
MACRO_WM_ACTIVATE WM_NCACTIVATE;
MACRO_WM_NCPAINT WM_NCCALCSIZE;
MACRO_WM_CREATE WM_NCCREATE;
MACRO_WM_CREATE WM_NCDESTROY;
MACRO_WM_NCHITTEST WM_NCHITTEST;
MACRO_WM_NCMOUSEMOVE WM_NCLBUTTONDBLCLK;
MACRO_WM_NCMOUSEMOVE WM_NCLBUTTONDOWN;
MACRO_WM_NCMOUSEMOVE WM_NCLBUTTONUP;
MACRO_WM_NCMOUSEMOVE WM_NCMBUTTONDBLCLK;
MACRO_WM_NCMOUSEMOVE WM_NCMBUTTONDOWN;
MACRO_WM_NCMOUSEMOVE WM_NCMBUTTONUP;
MACRO_WM_NCMOUSEMOVE WM_NCMOUSEMOVE;
MACRO_WM_NCPAINT WM_NCPAINT;
MACRO_WM_NCMOUSEMOVE WM_NCRBUTTONDBLCLK;
MACRO_WM_NCMOUSEMOVE WM_NCRBUTTONDOWN;
MACRO_WM_NCMOUSEMOVE WM_NCRBUTTONUP;
MACRO_WM_INITDIALOG WM_NEXTDLGCTL;
MACRO_WM_NULL WM_NULL;
MACRO_WM_PAINT WM_PAINT;
MACRO_WM_CUT WM_PAINTCLIPBOARD;
MACRO_WM_QUERYNEWPALETTE WM_PALETTECHANGED;
MACRO_WM_QUERYNEWPALETTE WM_PALETTEISCHANGING;
MACRO_WM_INITDIALOG WM_PARENTNOTIFY;
MACRO_WM_CUT WM_PASTE;
MACRO_WM_PENWINFIRST WM_PENWINFIRST;
MACRO_WM_PENWINFIRST WM_PENWINLAST;
MACRO_WM_PENWINFIRST WM_POWER;
MACRO_WM_QUERYDRAGICON WM_QUERYDRAGICON;
MACRO_WM_QUERYENDSESSION WM_QUERYENDSESSION;
MACRO_WM_QUERYNEWPALETTE WM_QUERYNEWPALETTE;
MACRO_WM_QUERYOPEN WM_QUERYOPEN;
MACRO_WM_QUEUESYNC WM_QUEUESYNC;
MACRO_WM_QUERYENDSESSION WM_QUIT;
MACRO_WM_MOUSEMOVE WM_RBUTTONDBLCLK;
MACRO_WM_MOUSEMOVE WM_RBUTTONDOWN;
MACRO_WM_MOUSEMOVE WM_RBUTTONUP;
MACRO_WM_RCRESULT WM_RCRESULT;
MACRO_WM_CUT WM_RENDERALLFORMATS;
MACRO_WM_CUT WM_RENDERFORMAT;
MACRO_WM_CUT WM_SETCURSOR;
MACRO_WM_ACTIVATE WM_SETFOCUS;
MACRO_WM_SETFONT WM_SETFONT;
MACRO_WM_SETREDRAW WM_SETREDRAW;
MACRO_WM_SETREDRAW WM_SETTEXT;
MACRO_WM_SHOWWINDOW WM_SHOWWINDOW;
MACRO_WM_WINDOWPOSCHANGING WM_SIZE;
MACRO_WM_CUT WM_SIZECLIPBOARD;
MACRO_WM_RCRESULT WM_SKB;
MACRO_WM_SPOOLERSTATUS WM_SPOOLERSTATUS;
MACRO_WM_ACTIVATE WM_SYSCHAR;
MACRO_WM_SYSCOLORCHANGE WM_SYSCOLORCHANGE;
MACRO_WM_SYSCOMMAND WM_SYSCOMMAND;
MACRO_WM_ACTIVATE WM_SYSDEADCHAR;
MACRO_WM_ACTIVATE WM_SYSKEYDOWN;
MACRO_WM_ACTIVATE WM_SYSKEYUP;
MACRO_WM_QUERYENDSESSION WM_SYSTEMERROR;
MACRO_WM_DEVMODECHANGE WM_TIMECHANGE;
MACRO_WM_CANCELMODE WM_TIMER;
MACRO_WM_CUT WM_UNDO;
MACRO_WM_NULL WM_USER;
MACRO_WM_VKEYTOITEM WM_VKEYTOITEM;
MACRO_WM_INITMENU WM_VSCROLL;
MACRO_WM_CUT WM_VSCROLLCLIPBOARD;
MACRO_WM_WINDOWPOSCHANGING WM_WINDOWPOSCHANGED;
MACRO_WM_WINDOWPOSCHANGING WM_WINDOWPOSCHANGING;
MACRO_WM_WININICHANGE WM_WININICHANGE;
UINT __pascal __far WNETADDCONNECTION(LPSTR, LPSTR, LPSTR);
UINT __pascal __far WNETCANCELCONNECTION(LPSTR, BOOL);
UINT __pascal __far WNETGETCONNECTION(LPSTR, LPSTR, UINT far *);
MACRO_WN WN_ACCESS_DENIED;
MACRO_WN WN_ALREADY_CONNECTED;
MACRO_WN WN_BAD_LOCALNAME;
MACRO_WN WN_BAD_NETNAME;
MACRO_WN WN_BAD_PASSWORD;
MACRO_WN WN_BAD_POINTER;
MACRO_WN WN_BAD_USER;
MACRO_WN WN_BAD_VALUE;
MACRO_WN WN_CANCEL;
MACRO_WN WN_CONNECTION_CLOSED;
MACRO_WN WN_CONTINUE;
MACRO_WN WN_DEVICE_ERROR;
MACRO_WN WN_FUNCTION_BUSY;
MACRO_WN WN_MORE_DATA;
MACRO_WN WN_NET_ERROR;
MACRO_WN WN_NOT_CONNECTED;
MACRO_WN WN_NOT_SUPPORTED;
MACRO_WN WN_OPEN_FILES;
MACRO_WN WN_OUT_OF_MEMORY;
MACRO_WN WN_SUCCESS;
MACRO_WN WN_WINDOWS_ERROR;
MACRO_WOM WOM_CLOSE;
MACRO_WOM WOM_DONE;
MACRO_WOM WOM_OPEN;
MACRO_WPF WPF_RESTORETOMAXIMIZED;
MACRO_WPF WPF_SETMINPOSITION;
MACRO_READ WRITE;
HRESULT __pascal __far WRITECLASSSTG(LPSTORAGE pStg, const CLSID far *const rclsid);
HRESULT __pascal __far WRITECLASSSTM(LPSTREAM pStm, const CLSID far *const rclsid);
int __pascal __far WRITECOMM(int, const void far *, int);
HRESULT __pascal __far WRITEFMTUSERTYPESTG(LPSTORAGE pstg, CLIPFORMAT cf, LPSTR lpszUserType);
BOOL __pascal __far WRITEPRIVATEPROFILESTRING(LPCSTR, LPCSTR, LPCSTR, LPCSTR);
BOOL __pascal __far WRITEPROFILESTRING(LPCSTR, LPCSTR, LPCSTR);
HANDLE __pascal __far WSAASYNCGETHOSTBYADDR(HWND hWnd, u_int wMsg, const char far *addr, int len, int type, char far *buf, int buflen);
HANDLE __pascal __far WSAASYNCGETHOSTBYNAME(HWND hWnd, u_int wMsg, const char far *name, char far *buf, int buflen);
HANDLE __pascal __far WSAASYNCGETPROTOBYNAME(HWND hWnd, u_int wMsg, const char far *name, char far *buf, int buflen);
HANDLE __pascal __far WSAASYNCGETPROTOBYNUMBER(HWND hWnd, u_int wMsg, int number, char far *buf, int buflen);
HANDLE __pascal __far WSAASYNCGETSERVBYNAME(HWND hWnd, u_int wMsg, const char far *name, const char far *proto, char far *buf, int buflen);
HANDLE __pascal __far WSAASYNCGETSERVBYPORT(HWND hWnd, u_int wMsg, int port, const char far *proto, char far *buf, int buflen);
int __pascal __far WSAASYNCSELECT(SOCKET s, HWND hWnd, u_int wMsg, __int32 lEvent);
MACRO_WSABASEERR WSABASEERR;
int __pascal __far WSACANCELASYNCREQUEST(HANDLE hAsyncTaskHandle);
int __pascal __far WSACANCELBLOCKINGCALL();
int __pascal __far WSACLEANUP();
MACRO_LEN WSADESCRIPTION_LEN;
MACRO_WSAEACCES WSAEACCES;
MACRO_WSAEADDRINUSE WSAEADDRINUSE;
MACRO_WSAEADDRNOTAVAIL WSAEADDRNOTAVAIL;
MACRO_WSAEAFNOSUPPORT WSAEAFNOSUPPORT;
MACRO_WSAEALREADY WSAEALREADY;
MACRO_WSAEBADF WSAEBADF;
MACRO_WSAECONNABORTED WSAECONNABORTED;
MACRO_WSAECONNREFUSED WSAECONNREFUSED;
MACRO_WSAECONNRESET WSAECONNRESET;
MACRO_WSAEDESTADDRREQ WSAEDESTADDRREQ;
MACRO_WSAEDISCON WSAEDISCON;
MACRO_WSAEDQUOT WSAEDQUOT;
MACRO_WSAEFAULT WSAEFAULT;
MACRO_WSAEHOSTDOWN WSAEHOSTDOWN;
MACRO_WSAEHOSTUNREACH WSAEHOSTUNREACH;
MACRO_WSAEINPROGRESS WSAEINPROGRESS;
MACRO_WSAEINTR WSAEINTR;
MACRO_WSAEINVAL WSAEINVAL;
MACRO_WSAEISCONN WSAEISCONN;
MACRO_WSAELOOP WSAELOOP;
MACRO_WSAEMFILE WSAEMFILE;
MACRO_WSAEMSGSIZE WSAEMSGSIZE;
MACRO_WSAENAMETOOLONG WSAENAMETOOLONG;
MACRO_WSAENETDOWN WSAENETDOWN;
MACRO_WSAENETRESET WSAENETRESET;
MACRO_WSAENETUNREACH WSAENETUNREACH;
MACRO_WSAENOBUFS WSAENOBUFS;
MACRO_WSAENOPROTOOPT WSAENOPROTOOPT;
MACRO_WSAENOTCONN WSAENOTCONN;
MACRO_WSAENOTEMPTY WSAENOTEMPTY;
MACRO_WSAENOTSOCK WSAENOTSOCK;
MACRO_WSAEOPNOTSUPP WSAEOPNOTSUPP;
MACRO_WSAEPFNOSUPPORT WSAEPFNOSUPPORT;
MACRO_WSAEPROCLIM WSAEPROCLIM;
MACRO_WSAEPROTONOSUPPORT WSAEPROTONOSUPPORT;
MACRO_WSAEPROTOTYPE WSAEPROTOTYPE;
MACRO_WSAEREMOTE WSAEREMOTE;
MACRO_WSAESHUTDOWN WSAESHUTDOWN;
MACRO_WSAESOCKTNOSUPPORT WSAESOCKTNOSUPPORT;
MACRO_WSAESTALE WSAESTALE;
MACRO_WSAETIMEDOUT WSAETIMEDOUT;
MACRO_WSAETOOMANYREFS WSAETOOMANYREFS;
MACRO_WSAEUSERS WSAEUSERS;
MACRO_WSAEWOULDBLOCK WSAEWOULDBLOCK;
int __pascal __far WSAGETLASTERROR();
MACRO_NOT_FOUND WSAHOST_NOT_FOUND;
BOOL __pascal __far WSAISBLOCKING();
MACRO_WSANOTINITIALISED WSANOTINITIALISED;
MACRO_ADDRESS WSANO_ADDRESS;
MACRO_WSANO WSANO_DATA;
MACRO_RECOVERY WSANO_RECOVERY;
int __pascal __far WSARECVEX(SOCKET s, char far *buf, int len, int far *flags);
FARPROC __pascal __far WSASETBLOCKINGHOOK(FARPROC lpBlockFunc);
void __pascal __far WSASETLASTERROR(int iError);
int __pascal __far WSASTARTUP(WORD wVersionRequired, LPWSADATA lpWSAData);
MACRO_WSASYSNOTREADY WSASYSNOTREADY;
MACRO_LEN WSASYS_STATUS_LEN;
MACRO_AGAIN WSATRY_AGAIN;
int __pascal __far WSAUNHOOKBLOCKINGHOOK();
MACRO_WSAVERNOTSUPPORTED WSAVERNOTSUPPORTED;
MACRO_WS WS_BORDER;
MACRO_WS WS_CAPTION;
MACRO_WS WS_CHILD;
MACRO_WS WS_CHILDWINDOW;
MACRO_WS WS_CLIPCHILDREN;
MACRO_WS WS_CLIPSIBLINGS;
MACRO_WS WS_DISABLED;
MACRO_WS WS_DLGFRAME;
MACRO_WS WS_EX_ACCEPTFILES;
MACRO_WS WS_EX_DLGMODALFRAME;
MACRO_WS WS_EX_NOPARENTNOTIFY;
MACRO_WS WS_EX_TOPMOST;
MACRO_WS WS_EX_TRANSPARENT;
MACRO_WS WS_GROUP;
MACRO_WS_GT WS_GT;
MACRO_WS WS_HSCROLL;
MACRO_WS WS_ICONIC;
MACRO_WS WS_MAXIMIZE;
MACRO_WS WS_MAXIMIZEBOX;
MACRO_WS WS_MINIMIZE;
MACRO_WS WS_MINIMIZEBOX;
MACRO_WS WS_OVERLAPPED;
MACRO_WS WS_OVERLAPPEDWINDOW;
MACRO_WS WS_POPUP;
MACRO_WS WS_POPUPWINDOW;
MACRO_WS WS_SIZEBOX;
MACRO_WS WS_SYSMENU;
MACRO_WS WS_TABSTOP;
MACRO_WS WS_THICKFRAME;
MACRO_WS WS_TILED;
MACRO_WS WS_TILEDWINDOW;
MACRO_WS WS_VISIBLE;
MACRO_WS WS_VSCROLL;
MACRO_WVR WVR_ALIGNBOTTOM;
MACRO_WVR WVR_ALIGNLEFT;
MACRO_WVR WVR_ALIGNRIGHT;
MACRO_WVR WVR_ALIGNTOP;
MACRO_WVR WVR_HREDRAW;
MACRO_WVR WVR_REDRAW;
MACRO_WVR WVR_VALIDRECTS;
MACRO_WVR WVR_VREDRAW;
int __pascal __far WVSPRINTF(LPSTR lpszOut, LPCSTR lpszFmt, const void far *lpParams);
MACRO_XCLASS XCLASS_BOOL;
MACRO_XCLASS XCLASS_DATA;
MACRO_XCLASS XCLASS_FLAGS;
MACRO_XCLASS XCLASS_MASK;
MACRO_XCLASS XCLASS_NOTIFICATION;
int __pascal __far XFORMHEIGHTINHIMETRICTOPIXELS(HDC, int);
int __pascal __far XFORMHEIGHTINPIXELSTOHIMETRIC(HDC, int);
void __pascal __far XFORMRECTINHIMETRICTOPIXELS(HDC, LPRECT, LPRECT);
void __pascal __far XFORMRECTINPIXELSTOHIMETRIC(HDC, LPRECT, LPRECT);
void __pascal __far XFORMSIZEINHIMETRICTOPIXELS(HDC, LPSIZEL, LPSIZEL);
void __pascal __far XFORMSIZEINPIXELSTOHIMETRIC(HDC, LPSIZEL, LPSIZEL);
int __pascal __far XFORMWIDTHINHIMETRICTOPIXELS(HDC, int);
int __pascal __far XFORMWIDTHINPIXELSTOHIMETRIC(HDC, int);
MACRO_XST XST_ADVACKRCVD;
MACRO_XST XST_ADVDATAACKRCVD;
MACRO_XST XST_ADVDATASENT;
MACRO_XST XST_ADVSENT;
MACRO_XST XST_CONNECTED;
MACRO_XST XST_DATARCVD;
MACRO_XST XST_EXECACKRCVD;
MACRO_XST XST_EXECSENT;
MACRO_XST XST_INCOMPLETE;
MACRO_XST XST_INIT1;
MACRO_XST XST_INIT2;
MACRO_XST XST_NULL;
MACRO_XST XST_POKEACKRCVD;
MACRO_XST XST_POKESENT;
MACRO_XST XST_REQSENT;
MACRO_XST XST_UNADVACKRCVD;
MACRO_XST XST_UNADVSENT;
MACRO_XTYPF XTYPF_ACKREQ;
MACRO_XTYPF XTYPF_NOBLOCK;
MACRO_XTYPF XTYPF_NODATA;
MACRO_XTYP XTYP_ADVDATA;
MACRO_XTYP XTYP_ADVREQ;
MACRO_XTYP XTYP_ADVSTART;
MACRO_XTYP XTYP_ADVSTOP;
MACRO_XTYP XTYP_CONNECT;
MACRO_XTYP XTYP_CONNECT_CONFIRM;
MACRO_XTYP XTYP_DISCONNECT;
MACRO_XTYP XTYP_ERROR;
MACRO_XTYP XTYP_EXECUTE;
MACRO_XTYP XTYP_MASK;
MACRO_MONITOR XTYP_MONITOR;
MACRO_XTYP XTYP_POKE;
MACRO_XTYP XTYP_REGISTER;
MACRO_XTYP XTYP_REQUEST;
MACRO_XTYP XTYP_SHIFT;
MACRO_XTYP XTYP_UNREGISTER;
MACRO_XTYP XTYP_WILDCONNECT;
MACRO_XTYP XTYP_XACT_COMPLETE;
void __pascal __far YIELD();
const GUID CLSID_Picture_Dib;
const GUID CLSID_Picture_Metafile;
const GUID CLSID_StdMarshal;
void __far DebugOutput(UINT flags, LPCSTR lpsz, ...);
const GUID GUID_NULL;
__int32 __pascal __far HREAD(HFILE, void far *, __int32);
__int32 __pascal __far HWRITE(HFILE, const void far *, __int32);
const GUID IID_IAdviseSink;
const GUID IID_IAdviseSink2;
const GUID IID_IBindCtx;
const GUID IID_IClassFactory;
const GUID IID_ICreateTypeInfo;
const GUID IID_ICreateTypeLib;
const GUID IID_IDataAdviseHolder;
const GUID IID_IDataObject;
const GUID IID_IDebug;
const GUID IID_IDebugStream;
const GUID IID_IDfReserved1;
const GUID IID_IDfReserved2;
const GUID IID_IDfReserved3;
const GUID IID_IDispatch;
const GUID IID_IDropSource;
const GUID IID_IDropTarget;
const GUID IID_IEnumCallback;
const GUID IID_IEnumFORMATETC;
const GUID IID_IEnumGeneric;
const GUID IID_IEnumHolder;
const GUID IID_IEnumMoniker;
const GUID IID_IEnumOLEVERB;
const GUID IID_IEnumSTATDATA;
const GUID IID_IEnumSTATSTG;
const GUID IID_IEnumString;
const GUID IID_IEnumUnknown;
const GUID IID_IEnumVARIANT;
const GUID IID_IExternalConnection;
const GUID IID_IInternalMoniker;
const GUID IID_ILockBytes;
const GUID IID_IMalloc;
const GUID IID_IMarshal;
const GUID IID_IMessageFilter;
const GUID IID_IMoniker;
const GUID IID_IOleAdviseHolder;
const GUID IID_IOleCache;
const GUID IID_IOleCache2;
const GUID IID_IOleCacheControl;
const GUID IID_IOleClientSite;
const GUID IID_IOleContainer;
const GUID IID_IOleInPlaceActiveObject;
const GUID IID_IOleInPlaceFrame;
const GUID IID_IOleInPlaceObject;
const GUID IID_IOleInPlaceSite;
const GUID IID_IOleInPlaceUIWindow;
const GUID IID_IOleItemContainer;
const GUID IID_IOleLink;
const GUID IID_IOleManager;
const GUID IID_IOleObject;
const GUID IID_IOlePresObj;
const GUID IID_IOleWindow;
const GUID IID_IPSFactory;
const GUID IID_IParseDisplayName;
const GUID IID_IPersist;
const GUID IID_IPersistFile;
const GUID IID_IPersistStorage;
const GUID IID_IPersistStream;
const GUID IID_IProxyManager;
const GUID IID_IRootStorage;
const GUID IID_IRpcChannel;
const GUID IID_IRpcProxy;
const GUID IID_IRpcStub;
const GUID IID_IRunnableObject;
const GUID IID_IRunningObjectTable;
const GUID IID_IStdMarshalInfo;
const GUID IID_IStorage;
const GUID IID_IStream;
const GUID IID_IStubManager;
const GUID IID_ITypeComp;
const GUID IID_ITypeInfo;
const GUID IID_ITypeLib;
const GUID IID_IUnknown;
const GUID IID_IViewObject;
const GUID IID_IViewObject2;
const GUID IID_StdOle;
HFILE __pascal __far LCLOSE(HFILE);
HFILE __pascal __far LCREAT(LPCSTR, int);
__int32 __pascal __far LLSEEK(HFILE, __int32, int);
HFILE __pascal __far LOPEN(LPCSTR, int);
UINT __pascal __far LREAD(HFILE, void far *, UINT);
UINT __pascal __far LWRITE(HFILE, const void far *, UINT);
UINT MyHelpMessage;
HRESULT __cdecl __far OleStdNullMethod(LPUNKNOWN lpThis);
int __far OleUIPromptUser(WORD nTemplate, HWND hwndParent, ...);
BOOL __cdecl RegisterDialogClasses(HINSTANCE);
MACRO__TEOF _TEOF;
int __pascal __far _WSAFDISSET(SOCKET, fd_set far *);
HOOKPROC fpMessageFilter;
DWORD g_dwObjectCount;
HINSTANCE hMainInstance;
HWND hMainWindow;
char szBadOldPW[255];
char szChangePW[30];
char szDifferentPW[255];
char szHelpFile[13];
char szIniFile[13];
char szIsPassword[22];
char szName[40];
char szNoHelpMemory[255];
char szPassword[16];
char szScreenSaver[22];
int __far wsprintf(LPSTR lpszOut, LPCSTR lpszFmt, ...);
MACRO_cbDictPathMax cbDictPathMax;
MACRO_MAXDICTIONARIES cbRcLanguageMax;
MACRO_cbRcUserMax cbRcUserMax;
MACRO_cbRcrgbfAlcMax cbRcrgbfAlcMax;
MACRO_chx1 chx1;
MACRO_chx10 chx10;
MACRO_chx11 chx11;
MACRO_chx12 chx12;
MACRO_chx13 chx13;
MACRO_chx14 chx14;
MACRO_chx15 chx15;
MACRO_chx16 chx16;
MACRO_chx2 chx2;
MACRO_chx3 chx3;
MACRO_chx4 chx4;
MACRO_chx5 chx5;
MACRO_chx6 chx6;
MACRO_chx7 chx7;
MACRO_chx8 chx8;
MACRO_chx9 chx9;
MACRO_cmb1 cmb1;
MACRO_cmb10 cmb10;
MACRO_cmb11 cmb11;
MACRO_cmb12 cmb12;
MACRO_cmb13 cmb13;
MACRO_cmb14 cmb14;
MACRO_cmb15 cmb15;
MACRO_cmb16 cmb16;
MACRO_cmb2 cmb2;
MACRO_cmb3 cmb3;
MACRO_cmb4 cmb4;
MACRO_cmb5 cmb5;
MACRO_cmb6 cmb6;
MACRO_cmb7 cmb7;
MACRO_cmb8 cmb8;
MACRO_cmb9 cmb9;
MACRO_ctlFirst ctlFirst;
MACRO_ctlLast ctlLast;
MACRO_cwRcReservedMax cwRcReservedMax;
MACRO_edt1 edt1;
MACRO_edt10 edt10;
MACRO_edt11 edt11;
MACRO_edt12 edt12;
MACRO_edt13 edt13;
MACRO_edt14 edt14;
MACRO_edt15 edt15;
MACRO_edt16 edt16;
MACRO_edt2 edt2;
MACRO_edt3 edt3;
MACRO_edt4 edt4;
MACRO_edt5 edt5;
MACRO_edt6 edt6;
MACRO_edt7 edt7;
MACRO_edt8 edt8;
MACRO_edt9 edt9;
MACRO_frm1 frm1;
MACRO_frm2 frm2;
MACRO_frm3 frm3;
MACRO_frm4 frm4;
MACRO_grp1 grp1;
MACRO_grp2 grp2;
MACRO_grp3 grp3;
MACRO_grp4 grp4;
MACRO_iSycNull iSycNull;
MACRO_ico1 ico1;
MACRO_ico2 ico2;
MACRO_ico3 ico3;
MACRO_ico4 ico4;
MACRO_idsAppName idsAppName;
MACRO_idsBadOldPW idsBadOldPW;
MACRO_idsChangePW idsChangePW;
MACRO_idsDifferentPW idsDifferentPW;
MACRO_idsHelpFile idsHelpFile;
MACRO_idsIniFile idsIniFile;
MACRO_idsIsPassword idsIsPassword;
MACRO_idsNoHelpMemory idsNoHelpMemory;
MACRO_idsPassword idsPassword;
MACRO_idsScreenSaver idsScreenSaver;
MACRO_lhSessionNull lhSessionNull;
MACRO_lst1 lst1;
MACRO_lst10 lst10;
MACRO_lst11 lst11;
MACRO_lst12 lst12;
MACRO_lst13 lst13;
MACRO_lst14 lst14;
MACRO_lst15 lst15;
MACRO_lst16 lst16;
MACRO_lst2 lst2;
MACRO_lst3 lst3;
MACRO_lst4 lst4;
MACRO_lst5 lst5;
MACRO_lst6 lst6;
MACRO_lst7 lst7;
MACRO_lst8 lst8;
MACRO_lst9 lst9;
MACRO_psh1 psh1;
MACRO_psh10 psh10;
MACRO_psh11 psh11;
MACRO_psh12 psh12;
MACRO_psh13 psh13;
MACRO_psh14 psh14;
MACRO_psh15 psh15;
MACRO_psh16 psh16;
MACRO_psh2 psh2;
MACRO_psh3 psh3;
MACRO_psh4 psh4;
MACRO_psh5 psh5;
MACRO_psh6 psh6;
MACRO_psh7 psh7;
MACRO_psh8 psh8;
MACRO_psh9 psh9;
MACRO_pshHelp pshHelp;
MACRO_rad1 rad1;
MACRO_rad10 rad10;
MACRO_rad11 rad11;
MACRO_rad12 rad12;
MACRO_rad13 rad13;
MACRO_rad14 rad14;
MACRO_rad15 rad15;
MACRO_rad16 rad16;
MACRO_rad2 rad2;
MACRO_rad3 rad3;
MACRO_rad4 rad4;
MACRO_rad5 rad5;
MACRO_rad6 rad6;
MACRO_rad7 rad7;
MACRO_rad8 rad8;
MACRO_rad9 rad9;
MACRO_rct1 rct1;
MACRO_rct2 rct2;
MACRO_rct3 rct3;
MACRO_rct4 rct4;
MACRO_rmj rmj;
MACRO_rmj rmm;
MACRO_rup rup;
MACRO_scr1 scr1;
MACRO_scr2 scr2;
MACRO_scr3 scr3;
MACRO_scr4 scr4;
MACRO_scr5 scr5;
MACRO_scr6 scr6;
MACRO_scr7 scr7;
MACRO_scr8 scr8;
MACRO_stc1 stc1;
MACRO_stc10 stc10;
MACRO_stc11 stc11;
MACRO_stc12 stc12;
MACRO_stc13 stc13;
MACRO_stc14 stc14;
MACRO_stc15 stc15;
MACRO_stc16 stc16;
MACRO_stc17 stc17;
MACRO_stc18 stc18;
MACRO_stc19 stc19;
MACRO_stc2 stc2;
MACRO_stc20 stc20;
MACRO_stc21 stc21;
MACRO_stc22 stc22;
MACRO_stc23 stc23;
MACRO_stc24 stc24;
MACRO_stc25 stc25;
MACRO_stc26 stc26;
MACRO_stc27 stc27;
MACRO_stc28 stc28;
MACRO_stc29 stc29;
MACRO_stc3 stc3;
MACRO_stc30 stc30;
MACRO_stc31 stc31;
MACRO_stc32 stc32;
MACRO_stc4 stc4;
MACRO_stc5 stc5;
MACRO_stc6 stc6;
MACRO_stc7 stc7;
MACRO_stc8 stc8;
MACRO_stc9 stc9;
MACRO_wPntAll wPntAll;
