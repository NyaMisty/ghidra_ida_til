struct $009E5FF01C1D2499399ED77F1604312D {word NQP_navFlags;byte NQP_backtrackFlag;byte NQP_unused;optr NQP_nextObject;};
struct $00E9484DE63F0E7C68B094BF8AA66C9C {TransError transError;word customMsgHandle;};
struct $01CDD5AC4B545C5C8FD0AE589433F89F {VMFileHandle FDBCN_fileHan;FoamDBActionType FDBCN_action;dword FDBCN_entry;RecordID FDBCN_id;};
enum $01F44BEA79F082D37C99694DFC72E671 {ANT_minutes = 0x0,ANT_hours = 0x1,ANT_days = 0x2,};
struct $021F3F293F8CCBCA42568EEDF1833F03 {word GCP_aboveCenter;word GCP_belowCenter;word GCP_leftOfCenter;word GCP_rightOfCenter;};
struct $021F9070DCA4559C36666A440D1C7248 {MailboxError MSCMRA_error;MailboxMessage MSCMRA_message;MailboxStorage MSCMRA_bodyStorage;MailboxDataFormat MSCMRA_bodyFormat;word MSCMRA_bodyRefLen;};
struct $023A8188AA3A319B4ABCD2B483DDCB16 {ChunkArrayHeader SAH_CAH;optr SAH_originalArray;};
struct $02481AE58F90F62F6DCDE1645B2E399A {dword VTNSC_selectStart;dword VTNSC_selectEnd;dword VTNSC_lineNumber;dword VTNSC_lineStart;word VTNSC_region;dword VTNSC_regionStartLine;dword VTNSC_regionStartOffset;};
enum $024F63C271895CCC9BDF51CB64E24882 {APSP_NAME = 0x0,APSP_PHONE = 0x2,APSP_USER = 0x4,APSP_SECRET = 0x6,APSP_ADDRESS = 0x8,APSP_MASK = 0xA,APSP_GATEWAY = 0xC,APSP_DNS1 = 0xE,APSP_DNS2 = 0x10,APSP_DATA_BITS = 0x12,APSP_STOP_BITS = 0x14,APSP_PARITY = 0x16,APSP_DUPLEX = 0x18,APSP_MODEM_INIT = 0x1A,APSP_BS = 0x1C,APSP_HOSTNAME = 0x1E,APSP_INTERNET_ACCPNT = 0x20,APSP_PROMPT_SECRET = 0x22,APSP_AUTOMATIC = 0x4000,APSP_UNDEFINED = 0xFFFF,APSP_USE_LOGIN_APP = 0x24,APSP_LOGIN_APP_NAME = 0x26,APSP_SCRIPT_NAME = 0x28,APSP_CCARD_NAME = 0x2A,APSP_CCARD_ACCESS = 0x2C,APSP_CCARD_ID = 0x2E,APSP_CCARD_PREFIX = 0x30,APSP_CCARD_SEQUENCE = 0x32,APSP_COMPRESSION = 0x34,APSP_LINE_END = 0x36,};
struct $025778B990E136969457737EBD367AB7 {MemHandle LMBH_handle;word LMBH_offset;LocalMemoryFlags LMBH_flags;LMemType LMBH_lmemType;word LMBH_blockSize;word LMBH_nHandles;word LMBH_freeList;word LMBH_totalFree;};
struct $02632549EFBE132FCC149744EC44CD6B {DriverExtendedInfoStruct MDIS_common;word MDIS_numButtons;word MDIS_xRes;word MDIS_yRes;};
enum $026EEFCE7DA9673F8CD98A8C1074C125 {IBT_NO_BACKGROUND = 0x0,IBT_NARROW_LINED_PAPER = 0x2,IBT_MEDIUM_LINED_PAPER = 0x4,IBT_WIDE_LINED_PAPER = 0x6,IBT_NARROW_STENO_PAPER = 0x8,IBT_MEDIUM_STENO_PAPER = 0xA,IBT_WIDE_STENO_PAPER = 0xC,IBT_SMALL_GRID = 0xE,IBT_MEDIUM_GRID = 0x10,IBT_LARGE_GRID = 0x12,IBT_SMALL_CROSS_SECTION = 0x14,IBT_MEDIUM_CROSS_SECTION = 0x16,IBT_LARGE_CROSS_SECTION = 0x18,IBT_TO_DO_LIST = 0x1A,IBT_PHONE_MESSAGE = 0x1C,IBT_CUSTOM_BACKGROUND = 0x1E,};
struct $028E1376C97BF2D2A5C94D00B65BA3DA {word PD_widthHigh;word PD_widthLow;dword PD_height;};
struct $02A6DB27AF9040252CDC30283BB3B888 {byte RGBD_red;byte RGBD_green;byte RGBD_blue;};
struct $02BF73FB6B56D5194A8C58DF96D1B47E {GStringElement ODL_opcode;word ODL_x1;word ODL_x2;word ODL_y1;word ODL_y2;};
struct $02C83F8C23455EF296230E586B96777F {TokenChars GT_chars;ManufacturerID GT_manufID;};
enum $02D1D190F894C3D3A6B5EAC52D3A690B {GDT_NORMAL = 0x0,GDT_READ_ONLY = 0x1,GDT_TEMPLATE = 0x2,GDT_READ_ONLY_TEMPLATE = 0x3,GDT_PUBLIC = 0x4,GDT_MULTI_USER = 0x5,};
enum $02F8496BFBD9CFB6571A3F77ED82FB9D {MMCRT_FILE_STARTING = 0x0,MMCRT_TRANSFER_CONTINUES = 0x1,MMCRT_TRANSFER_COMPLETE = 0x2,MMCRT_TRANSFER_ABORTED = 0x3,};
struct $03130360FB13A743E22557A596D0F42A {GeodeToken IDI_geodeToken;TCHAR IDI_singularText[41];TCHAR IDI_pluralText[41];sdword IDI_docCount;};
struct $03FF2859833E3CCD3D5A75AF2DB30012 {ManufacturerID NT_manuf;word NT_type;};
struct $04392AFCC770A0C2B760AE03AC94FA23 {word P_entries;};
enum $0451F92F349E32BE151B21642DC2B465 {SMRR_FAIL = 0x0,SMRR_OK = 0x1,SMRR_APPLICATION_NOT_REGISTERED = 0x2,};
struct $045391F70B9A1FF27B6DC0FC2919C694 {GStringElement OSF_opcode;WBFixed OSF_size;FontID OSF_id;};
struct $049A3BB86B023295D9C78D74728930D7 {ThreadHandle UDDS_callingThread;SemaphoreHandle UDDS_semaphore;word UDDS_response;Boolean UDDS_complete;Boolean UDDS_boxRunByCurrentThread;optr UDDS_dialog;QueueHandle UDDS_queue;};
struct $04BF5AC07B60C0ABF1CD13DC725BEB2E {MemHandle SIP_lmemBlock;SplineInitFlags SIP_flags;};
union $04CA013B1BD18FA29F69DBAC223766A9 {FloatFloatToAsciiParams FFAP_FLOAT;FloatFloatToDateTimeParams FFAP_DATE_TIME;};
struct $04D8E74BF8BA4E8A1522F6C26ACA38AE {ToggleState TSASC_toggleState;byte TSASC_scanCode;};
enum $04FBDCF4757721D0F3DFE13CF714075F {PATT_RINGING_TONE = 0x0,PATT_CLOCK_ALARM = 0x1,PATT_CALENDAR_ALARM = 0x2,PATT_RECEIVED_SMS = 0x3,PATT_RECEIVED_FAX = 0x4,PATT_RECEIVED_MAIL = 0x5,PATT_ALT_RINGING_TONE = 0x6,PATT_RECALL_ALERT = 0x7,PATT_CELL_BROADCAST = 0x8,PATT_PERSONAL_TONE = 0x9,};
struct $04FD6ED9537E226C4BCB90DE0D647408 {FFFieldPropertiesMessageBlock FFFPIS_messageBlock;byte FFFPIS_notesButton;TCHAR FFFPIS_minString[25];TCHAR FFFPIS_maxString[25];};
enum $0545C44ECFB282FAD99EC53958DDB200 {GTOCS_NORMAL = 0x0,GTOCS_CONNECTION_IN_USE = 0x1,GTOCS_OUT_OF_MEMORY = 0x2,GTOCS_OUT_OF_DISKSPACE = 0x3,GTOCS_INTERNAL_ERROR = 0x4,};
enum $054D39CB2D30E5301EC532F068C38240 {CT_UNITED_STATES = 0x1,CT_CANADA = 0x2,CT_UNITED_KINGDOM = 0x3,CT_GERMANY = 0x4,CT_FRANCE = 0x5,CT_SPAIN = 0x6,CT_ITALY = 0x7,CT_DENMARK = 0x8,CT_NETHERLANDS = 0x9,};
struct $054FFEE974129BCF16C43CA77D51E360 {GStringElement OSFW_opcode;FontWeight OSFW_weight;};
struct $05CD8912E26E5884082A50797E45BB76 {GrObjBaseAreaAttrElement GOFAAE_base;byte GOFAAE_future[50];};
struct $0614CD6A12314C6BF3210BB2BC38315B {dword PVMMB_root;};
enum $0633B8B1410C624C9CFD803678556C83 {CESS_NOT_SECRET = 0x0,CESS_SECRET = 0x1,};
union $0665B76D49EB61222D894D9D86318507 {word MSN_16bit;FixNum MSN_48bit;};
struct $070AF63B906B87BEE544DED7FFBE19BB {EntryPointRelocation GOEPR_fullRelocation;word GOEPR_grObjEntryPoint;};
struct $075996EB638D2331EE99C8ABAF19AAA5 {SplineGenerateNotifyFlags SGNP_notificationFlags;SplineNotifySendFlags SGNP_sendFlags;MemHandle SGNP_notificationBlocks[16];};
enum $08B2A41D5FDB0C7688E8EC48ABE114F2 {FTCE_NO_ERROR = 0x0,FTCE_ERROR = 0x1,FTCE_TRANSLATION_NOT_SUPPORTED = 0x2,FTCE_INVALID_FORMAT = 0x3,FTCE_SOURCE_FILE_EMPTY = 0x4,FTCE_FILE_OPEN = 0x5,FTCE_FILE_READ = 0x6,FTCE_FILE_WRITE = 0x7,FTCE_FILE_CREATE = 0x8,FTCE_FILE_TOO_LARGE = 0x9,FTCE_DISK_FULL = 0xA,FTCE_OUT_OF_MEMORY = 0xB,FTCE_CANCELED = 0xC,};
enum $08C4EC10B63CE80B4F3DDF9E5EE9BD4C {MESN_MEDIUM_AVAILABLE = 0x0,MESN_MEDIUM_NOT_AVAILABLE = 0x1,MESN_MEDIUM_CONNECTED = 0x2,MESN_MEDIUM_NOT_CONNECTED = 0x3,};
enum $08DFC7454898025134E339F743EB252C {SERIAL_COM1 = 0x0,SERIAL_COM2 = 0x2,SERIAL_COM3 = 0x4,SERIAL_COM4 = 0x6,SERIAL_COM5 = 0x8,SERIAL_COM6 = 0xA,SERIAL_COM7 = 0xC,SERIAL_COM8 = 0xE,};
struct $08F221A27CFA53B54C3E60853A9DA430 {GStringElement ODCVT_opcode;sword ODCVT_x2;sword ODCVT_y2;sword ODCVT_x3;sword ODCVT_y3;sword ODCVT_x4;sword ODCVT_y4;};
enum $08FA84B0CCC446B442C6A6A80D5B4D16 {UATH_NON_NUMERIC_DIGIT_IN_STRING = 0x0,UATH_CONVERT_OVERFLOW = 0x1,};
struct $08FEE5EF0616D49A32C6FD971819EFD0 {dword VTCOP_offset;sdword VTCOP_xPos;sdword VTCOP_yPos;};
struct $091916DE94EF084142B03E2B096200AA {GStringElement OSTMo_opcode;TextMode OSTMo_set;TextMode OSTMo_reset;};
struct $09195A88C3496E001EAB39FA4D3CD7D0 {word END_name;};
struct $093F55B5EF8CA59C41D4043BE9BFEF04 {char EPR_geodeName[8];word EPR_entryNumber;};
struct $096D1327285D332970676C9D2EE54721 {TCHAR TASA_name[60];TCHAR *TASA_formula;};
struct $0989AA966D81FD93F5D3B876C626FA00 {GStringElement OFFRT_opcode;word OFFRT_x2;word OFFRT_y2;};
struct $09FB5F68A1CE46974DB2094CABC27622 {dword VLTRAE_charCount;dword VLTRAE_lineCount;word VLTRAE_section;PointDWord VLTRAE_spatialPosition;XYSize VLTRAE_size;WBFixed VLTRAE_calcHeight;dword VLTRAE_region;VisLargeTextRegionFlags VLTRAE_flags;byte VLTRAE_reserved[3];};
struct $0A06D01C6923EE95D81236D4BC64BD29 {ChunkArrayHeader TRAH_meta;VMBlockHandle TRAH_elementVMBlock;ChunkHandle TRAH_elementArray;};
struct $0A51A593A5D009153CD504E2F16C9B81 {byte SSME_offset;word SSME_mask;word SSME_routine;word SSME_data;};
struct $0A79AC3CB947553167E3E553DAA7E51C {word FNTD_timerID;word FNTD_timerHandle;};
struct $0AA0FA2F72202908C4390F4D9447108B {FieldDataAttrs DFDA_common;FloatNum DFDA_min;FloatNum DFDA_max;};
enum $0AA497ECA26CDC4E1AE3983F9CC61CA9 {MGIT_SIZE = 0x0,MGIT_FLAGS_AND_LOCK_COUNT = 0x2,MGIT_OWNER_OR_VM_FILE_HANDLE = 0x4,MGIT_ADDRESS = 0x6,MGIT_OTHER_INFO = 0x8,MGIT_EXEC_THREAD = 0xA,};
struct $0C43D05706A91DD42FAC7F1438EF4146 {GStringElement OSLS_opcode;LineStyle OSLS_style;byte OSLS_index;};
struct $0CF625F3EBA130FEC5919360B0137CEA {word SD1RTT_numTriggers;StandardDialogResponseTriggerEntry SD1RTT_trigger1;};
struct $0D2CA1F3AF1F5CE7C6A524AE8534DECD {word PTA_message;optr PTA_dest;};
union $0D77E0621F4DEEA15F5E803B47675B17 {ParserTokenNumberData PTD_number;ParserTokenStringData PTD_string;ParserTokenNameData PTD_name;ParserTokenCellData PTD_cell;ParserTokenFunctionData PTD_function;ParserTokenOperatorData PTD_operator;};
enum $0DA4114957093A0370C4C628ED81B61F {SISE_NO_ERROR = 0x0,SISE_TOO_MANY_ROWS = 0x1,SISE_TOO_MANY_COLUMNS = 0x2,SISE_DELETE_ROW_DATA = 0x3,SISE_DELETE_COLUMN_DATA = 0x4,};
struct $0DFE1579BE92D7216A53B57B6E3C2DA7 {word VCCIBF_data1;word VCCIBF_data2;word VCCIBF_data3;word VCCIBF_data4;word VCCIBF_data5;Rectangle VCCIBF_bounds;};
enum $0E1CB1FBBEAC4526B96E773A9DAFEFB3 {FTCT_PROGRESS = 0x0,FTCT_NEW_PAGE = 0x1,};
struct $0E34619FB4753858301426F501FD35FF {void (*DIS_strategy)();DriverAttrs DIS_driverAttributes;DriverType DIS_driverType;};
struct $0E3D72F3A98BE6C3405D6813D83FE4B7 {MediumUnitType MUAR_type;word MUAR_size;};
struct $0E42D6EDCD2A78343412FD4EDC151E3A {HWRMode HWRGD_mode;Rectangle HWRGD_bounds;sword HWRGD_xOffset;sword HWRGD_yOffset;};
struct $0E51AB09D459E69B31D3E58CF4DB342C {Message GOUAT_freeMessage;Message GOUAT_undoMessage;};
enum $0E8F9602ACE59B4E632B46626F798AEB {GCNSCT_SUSPEND = 0x0,GCNSCT_SHUTDOWN = 0x1,GCNSCT_UNSUSPEND = 0x2,};
struct $0EA0CE9658B137E8AB227DEE137A03FF {DiskHandle FMAR_diskHandle;PathName FMAR_filename;};
enum $0EB038596E727EDC9B4CC1FCB327D8F9 {CEE_NORMAL = 0x0,CEE_GENERAL_ERROR = 0x1,CEE_INTERNAL_ERROR = 0x2,CEE_NOT_ENOUGH_MEMORY = 0x3,CEE_NOT_ENOUGH_DISKSPACE = 0x4,CEE_EVENT_NOT_FOUND = 0x5,CEE_EVENT_TEXT_TOO_LONG = 0x6,CEE_INVALID_DATE = 0x7,CEE_INVALID_TIME = 0x8,CEE_INVALID_TODO_ITEM_STATUS = 0x9,CEE_INVALID_RESERVE_WHOLE_DAY = 0xA,CEE_INVALID_ALARM = 0xB,CEE_INVALID_EVENT_TYPE = 0xC,CEE_START_DATE_LATER_THAN_END_DATE = 0xD,CEE_START_TIME_LATER_THAN_END_TIME = 0xE,CEE_MISSING_END_TIME_WHEN_START_TIME_AND_END_DATE_ARE_SET = 0xF,CEE_EVENT_NOT_SUPPORTED = 0x10,CEE_INVALID_TIME_RANGE = 0x11,CEE_ACCESS_DENIED = 0x12,};
struct $0EE627052F274FEB11F214574EF7C018 {CharFlags MTFP_charFlags;ShiftState MTFP_shiftState;ToggleState MTFP_toggleState;byte MTFP_scanCode;};
struct $1019DD60C6340A2D0CED339E93C6BCA7 {word PM_left;word PM_top;word PM_right;word PM_bottom;};
enum $10D7E492D0FBE89D90074FE4DC571B45 {VTKF_FORWARD_LINE = 0x0,VTKF_BACKWARD_LINE = 0x6,VTKF_SELECT_ADJUST_FORWARD_LINE = 0xC,VTKF_SELECT_ADJUST_BACKWARD_LINE = 0x12,VTKF_FORWARD_CHAR = 0x18,VTKF_BACKWARD_CHAR = 0x1E,VTKF_FORWARD_WORD = 0x24,VTKF_BACKWARD_WORD = 0x2A,VTKF_FORWARD_PARAGRAPH = 0x30,VTKF_BACKWARD_PARAGRAPH = 0x36,VTKF_START_OF_LINE = 0x3C,VTKF_END_OF_LINE = 0x42,VTKF_START_OF_TEXT = 0x48,VTKF_END_OF_TEXT = 0x4E,VTKF_SELECT_WORD = 0x54,VTKF_SELECT_LINE = 0x5A,VTKF_SELECT_PARAGRAPH = 0x60,VTKF_SELECT_OBJECT = 0x66,VTKF_SELECT_ADJUST_FORWARD_CHAR = 0x6C,VTKF_SELECT_ADJUST_BACKWARD_CHAR = 0x72,VTKF_SELECT_ADJUST_FORWARD_WORD = 0x78,VTKF_SELECT_ADJUST_BACKWARD_WORD = 0x7E,VTKF_SELECT_ADJUST_FORWARD_PARAGRAPH = 0x84,VTKF_SELECT_ADJUST_BACKWARD_PARAGRAPH = 0x8A,VTKF_SELECT_ADJUST_TO_START = 0x90,VTKF_SELECT_ADJUST_TO_END = 0x96,VTKF_SELECT_ADJUST_START_OF_LINE = 0x9C,VTKF_SELECT_ADJUST_END_OF_LINE = 0xA2,VTKF_DELETE_BACKWARD_CHAR = 0xA8,VTKF_DELETE_BACKWARD_WORD = 0xAE,VTKF_DELETE_BACKWARD_LINE = 0xB4,VTKF_DELETE_BACKWARD_PARAGRAPH = 0xBA,VTKF_DELETE_TO_START = 0xC0,VTKF_DELETE_CHAR = 0xC6,VTKF_DELETE_WORD = 0xCC,VTKF_DELETE_LINE = 0xD2,VTKF_DELETE_PARAGRAPH = 0xD8,VTKF_DELETE_TO_END = 0xDE,VTKF_DELETE_EVERYTHING = 0xE4,VTKF_DESELECT = 0xEA,VTKF_TOGGLE_OVERSTRIKE_MODE = 0xF0,VTKF_TOGGLE_SMART_QUOTES = 0xF6,VTKF_PAGE_UP = 0xFC,VTKF_PAGE_DOWN = 0x102,VTKF_INSERT_TIME = 0x108,VTKF_INSERT_DATE = 0x10E,VTKF_INSERT_NAME = 0x114,VTKF_SELECT_ADJUST_BACKWARD_PAGE = 0x11A,VTKF_SELECT_ADJUST_FORWARD_PAGE = 0x120,};
struct $10EBD921A383D016896B2D40C9A11431 {VisMoniker VMWT_common;char VMWT_mnemonicOffset;};
struct $10FBEFE212F5BCFF74ABA5B048DE204F {GeodeToken token;word junk;};
struct $111453C667C275CD5BCE0B4E50D997A4 {optr IDIP_dest;word IDIP_brushSize;Color IDIP_color;byte IDIP_reserved1;Boolean IDIP_createGState;};
struct $111F8AB9DD01BF7D4DE4350396130BE8 {word EAFTPPD_priority;optr EAFTPPD_avoidOptr;};
struct $11204F56D9E299D12FEC13DFBEB46869 {sword XYO_x;sword XYO_y;};
enum $11BE9D4940848FB94A5DB8ED83C1A452 {DQS_OK = 0x0,DQS_CANCEL = 0x1,DQS_DELAYED = 0x2,DQS_SAVE_ERROR = 0x3,};
struct $11D1051ABD3C5946867229BE16EE9DAB {GStringElement OCP_opcode;};
struct $11D573B92F9D44C819FDB41459DA946F {GeodeToken IDCI_geodeToken;sdword IDCI_docCount;};
struct $11DA5C3B6CA57935B685652401DF3BB1 {word PDI_timeoutValue;PrinterResend PDI_resendOrNot;word PDI_subISOTable;word PDI_asciiTransChars;PrinterDriverType PDI_driverType;word PDI_uiFeatures;};
enum $11E19FAFE5FE52C9F8E49313102752D2 {VMSERV_NO_CHANGES = 0x0,VMSERV_CHANGES = 0x1,VMSERV_TIMEOUT = 0x2,};
struct $121616E256656C749B99423BA5BD40AC {ChunkArrayHeader RLCAH_standardChunkArrayHeader;LayoutCommon RLCAH_layoutCommon;TCHAR RLCAH_layoutName[40];dword RLCAH_lastFieldYPosition;byte RLCAH_layoutSortedFieldList[255];byte RLCAH_numFieldsInLayout;TCHAR RLCAH_layoutNotes[255];ModeType RLCAH_layoutMode;LayoutType RLCAH_layoutType;LayoutSize RLCAH_singleRecordSize;FFDBFieldNavigationOrderInfo RLCAH_fieldOrderInfo;};
enum $124B52ACC1801077A94DD9F8FF7C6719 {MBRD_FOREVER = 0x0,MBRD_UNTIL = 0x1,MBRD_LENGTH = 0x2,};
struct $12881DDFA4F213C4FC77D308BE111013 {optr databaseOptr;byte numLabels;LabelIDSet labelSet[256];};
enum $12D4049AB8CC802BC34A3C59C1E21CE9 {APCT_CREATE = 0x0,APCT_DESTROY = 0x2,APCT_PROPERTY = 0x4,APCT_MULTI_DESTROY = 0x6,APCT_LOCK = 0x8,};
struct $12F8A294DDEE7132DF4193EC2107656B {word SACA_opaqueSize;};
enum $13BEEE46ACD3B01C5148791CEAF659A5 {GLE_PROTOCOL_IMPORTER_TOO_RECENT = 0x0,GLE_PROTOCOL_IMPORTER_TOO_OLD = 0x1,GLE_FILE_NOT_FOUND = 0x2,GLE_LIBRARY_NOT_FOUND = 0x3,GLE_FILE_READ_ERROR = 0x4,GLE_NOT_GEOS_FILE = 0x5,GLE_NOT_GEOS_EXECUTABLE_FILE = 0x6,GLE_ATTRIBUTE_MISMATCH = 0x7,GLE_MEMORY_ALLOCATION_ERROR = 0x8,GLE_NOT_MULTI_LAUNCHABLE = 0x9,GLE_LIBRARY_PROTOCOL_ERROR = 0xA,GLE_LIBRARY_LOAD_ERROR = 0xB,GLE_DRIVER_INIT_ERROR = 0xC,GLE_LIBRARY_INIT_ERROR = 0xD,GLE_DISK_TOO_FULL = 0xE,GLE_FIELD_DETACHING = 0xF,GLE_INSUFFICIENT_HEAP_SPACE = 0x10,GLE_LAST_GEODE_LOAD_ERROR = 0x11,};
struct $140F2DD4875735D739B6AD1CEFD4A6A9 {PathName AIR_fileName;FileLongName AIR_stateFile;DiskHandle AIR_diskHandle;byte AIR_savedDiskData[1];};
struct $1445BF4370353119532E1933DC34F1BA {GeodeToken FAI_token;ProtocolNumber FAI_protocol;};
struct $1457708FC57CE2E5C7C2E27C17B44512 {word GNI_token;word GNI_entryNum;word GNI_numDefinedNames;word GNI_numUndefinedNames;};
enum $1469305C9A4BEB75679A38DFE15FF374 {TKMT_ENGLISH = 0x0,TKMT_THAI = 0x2,};
struct $149FFFD6B9EAFC7574796F96BCBBD267 {RecordID RH_id;FieldID RH_fieldID;word RH_fieldCount;FoamDBRecordFlags RH_flags;};
enum $14D34EC051630892B30EBAADF9B59B1D {GDDT_FILE_SYSTEM = 0x0,GDDT_KEYBOARD = 0x2,GDDT_MOUSE = 0x4,GDDT_VIDEO = 0x6,GDDT_MEMORY_VIDEO = 0x8,GDDT_POWER_MANAGEMENT = 0xA,GDDT_TASK = 0xC,};
union $1527BB8A43E7F1BB9DF13C4A8AC58AA3 {ScannerTokenNumberData STD_number;ScannerTokenStringData STD_string;ScannerTokenCellData STD_cell;ScannerTokenIdentifierData STD_identifier;ScannerTokenOperatorData STD_operator;};
struct $154AC7664F8D3D9F08C179331F2DF235 {Justification FNJC_justification;byte FNJC_diffs;byte FNJC_useGeneral;};
struct $15C442BD6F19E34AF0B5C8602CE3C92C {RefElementHeader VTG_meta;dword VTG_vmChain;XYSize VTG_size;VisTextGraphicType VTG_type;VisTextGraphicFlags VTG_flags;byte VTG_reserved[4];VisTextGraphicData VTG_data;};
struct $15FAA4093E94D1AE7C0347BFFC371C62 {word MH_dataSize;word MH_dataOffset;byte MH_flags;word MH_domain;byte MH_reserved;};
struct $164B911748EA204F4EBC6692BB4BCB9C {DBGroupAndItem TM_disks;DBGroupAndItem TM_categories;};
enum $1651765A2570BC8317D3D64C515A5ADF {BRPT_OUTPUT_OPTR = 0x0,};
struct $1653B4A25C277C5A50A9D4602DE24762 {GStringElement OLSM_opcode;SysDrawMask OLSM_mask;};
struct $1665B609294F9BA301134A8647E0A7CF {WWFixedAsDWord RWWF_left;WWFixedAsDWord RWWF_top;WWFixedAsDWord RWWF_right;WWFixedAsDWord RWWF_bottom;};
struct $16C4A7925D9017782E21675F30E5BD8A {GStringElement OSCLM_opcode;DrawMask OSCLM_mask;};
struct $16F818B1CA9D328212EE7884CBA9AF0A {SubscriptPosition position;SubscriptSize size;};
struct $17143B5122A3991E817F58AF379DAA36 {GStringElement OCSP_opcode;};
enum $17D54CF75024FE92F8D927AB5C4FDA24 {CMB_LEFT_FINGER = 0x1,CMB_RIGHT_FINGER = 0x3,CMB_CONTACT_CARD = 0x5,CMB_CONTACT_LIST = 0x7,CMB_SPEED_DIAL = 0x9,CMB_SETTINGS_TITLE_ICON = 0xB,CMB_SERVICES_VIEW = 0xD,CMB_SERVICES_DEFINE = 0xF,CMB_QUESTION_ICON = 0x11,CMB_OPEN_FOLDER = 0x13,CMB_DRAWER = 0x15,CMB_RENAME_COPY = 0x17,CMB_FOLDER = 0x19,CMB_SECURITY_SUCCESS = 0x1B,CMB_SECURITY_ERROR = 0x1D,CMB_PC_ICON = 0x1F,CMB_INPUT_TITLE_ICON = 0x21,CMB_WARNING_TITLE_ICON = 0x23,CMB_SMS_CARD_ICON = 0x25,CMB_SEARCH = 0x27,};
enum $18087310102FF466B85E7D6CF648FB54 {LCT_ATTACH = 0x0,LCT_DETACH = 0x1,LCT_NEW_CLIENT = 0x2,LCT_NEW_CLIENT_THREAD = 0x3,LCT_CLIENT_THREAD_EXIT = 0x4,LCT_CLIENT_EXIT = 0x5,};
struct $181CB1A5EA6844420306210A16A1E8EB {byte AA_colorFlag;RGBValue AA_color;SystemDrawMask AA_mask;ColorMapMode AA_mapMode;};
enum $183A3DF51ED1F57844B9AE079B36B115 {SPOOL_OPERATION_SUCCESSFUL = 0x0,SPOOL_JOB_NOT_FOUND = 0x1,SPOOL_QUEUE_EMPTY = 0x2,SPOOL_QUEUE_NOT_EMPTY = 0x3,SPOOL_QUEUE_NOT_FOUND = 0x4,SPOOL_CANT_VERIFY_PORT = 0x5,SPOOL_OPERATION_FAILED = 0x6,};
struct $183D6AEFEF28E80E703C537588CA9EC8 {VMBlockHandle LC_grObjBodyVMBlock;ChunkHandle LC_grObjBodyChunk;};
struct $1841D478AFA79BB6F8A96237ED87308C {UndoActionDataType UAS_dataType;UndoActionDataUnion UAS_data;dword UAS_appType;};
enum $18D836BE8BF676513CD5426CA848A2CC {SEF_NO_FORMAT = 0x0,SEF_SBI_FORMAT = 0x1,SEF_CTI_FORMAT = 0x2,};
struct $1908D47F53C08BCC48EF08128F57CA45 {GStringElement OSACM_opcode;ColorMapMode OSACM_mode;};
struct $192044D532F99EC7585D58F5C2B69F39 {word NDLC_counter;optr NDLC_group;};
struct $1936F737944308236BC51400734619FE {WWFixed RWWF_left;WWFixed RWWF_top;WWFixed RWWF_right;WWFixed RWWF_bottom;};
struct $193E97D4B97F0BE4BF28D653218BFE02 {word NLH_endOfData;word NLH_blockSize;};
struct $1953021FC0879F253326FEEE1ECBC401 {WWFixedAsDWord NPSC_pointSize;byte NPSC_diffs;};
struct $198FEB85B1711614CCD12D554F19B170 {word usedBlocks;word headerSize;word freeBlocks;};
struct $19A112BEAA66D2D5823F4F71FF657488 {byte PDAE_synopsisOffset;byte PDAE_sizeOffset;byte PDAE_packageFilePathOffset;char PDAE_data[1];};
enum $19B9D80A0D679364B81427CE8B49472D {DRE_DISK_IN_DRIVE = 0x0,DRE_DRIVE_NO_LONGER_EXISTS = 0x1,DRE_REMOVABLE_DRIVE_DOESNT_HOLD_DISK = 0x2,DRE_USER_CANCELED_RESTORE = 0x3,DRE_COULDNT_CREATE_NEW_DISK_HANDLE = 0x4,DRE_REMOVABLE_DRIVE_IS_BUSY = 0x5,DRE_NOT_ATTACHED_TO_SERVER = 0x6,DRE_PERMISSION_DENIED = 0x7,DRE_ALL_DRIVES_USED = 0x8,};
struct $1A04853DEE44C6F87D0F256CCA5B3FE7 {byte *argStack;byte *opFnStack;word row;byte column;byte derefFlags;byte *newArgStack;byte errorOccurred;byte error;};
struct $1A18DCCAB9742C9422CAB4F063E80A51 {optr AATGD_group;PointDWFixed AATGD_centerAdjust;};
struct $1A1FA1BC28E8F6032BBB48F78FC4A343 {word DB_size;};
struct $1A69BA52770DE7BB25FD05E01FC162A1 {word VTGFEPB_layerID;word VTGFEPB_baselineOffset;};
struct $1A6D88FF44AD6663571D3C3A1B08B6ED {DWFixed PDF_x;DWFixed PDF_y;};
enum $1B194811FF696653DDFF3BBB92DF0D98 {VCGCNLT_TARGET_NOTIFY_TEXT_PARA_ATTR_CHANGE = 0x4A00,PADDING_VCGCNLT_INVALID_ITEM_000 = 0x4A01,};
struct $1B24A4AFEB954E87B12A9FE2873BF14C {ColorQuad AI_color;SystemDrawMask AI_grayScreen;};
struct $1B3DEEE20E6B829E0F7833D2686D82FC {SelectionDataType NSSC_selectionType;byte NSSC_clipboardableSelection;byte NSSC_selectAllAvailable;byte NSSC_deleteableSelection;byte NSSC_pasteable;};
enum $1B6356266B9EF8F332236A62DAC95ED0 {MBAIT_MINUTES = 0x0,MBAIT_HOURS = 0x1,MBAIT_DAYS = 0x2,};
struct $1B872AF3899C65B1A4A028A594891232 {AccessPointChangeType APCD_changeType;word APCD_id;AccessPointType APCD_accessType;AccessPointStandardProperty APCD_stdProperty;};
struct $1BC134F168E975072C97C6B411B53653 {SearchReplaceEnableFlags flags;};
union $1BC2D40B6238BD73097994BDCE1B99EA {EvalOperatorData ESOD_operator;EvalFunctionData ESOD_function;};
enum $1C1996B8B1840EF248925820121303E4 {FDTF_NOT_FORMATTED = 0x0,FDTF_FORMATTED = 0x1,};
struct $1C688C28D75541A5D178169195091408 {FieldID BCF_fieldID;Boolean BCF_selection;};
struct $1C8F01E424138141016B454C181D946A {VMBlockHandle GOEOP_grObjectVMBlock;ChunkHandle GOEOP_grObjectChunk;};
struct $1CE416A7B60E17AF8F6001B45CA58C1B {ChunkHandle TMGCND_listOfLists;TempMetaGCNFlags TMGCND_flags;};
struct $1CFF16A479EE73F8BEF3F7CC190C10B7 {FloatNum PTND_value;};
struct $1D34E85B7AE16F0226B0387F0E0CFADF {word DBR_group;word DBR_item;word unused1;word unused2;};
struct $1D3B59FA806D2DA4D2109525DB6505D9 {word SSDWE_value;ChunkHandle SSDWE_name;};
enum $1DB987EF7E556B3247120F8D9D694ECD {PERROR_TIMEOUT = 0x0,PERROR_WARMUP = 0x2,PERROR_SERVICE = 0x4,PERROR_PAPER_MISFEED = 0x6,PERROR_NO_PRINTER = 0x8,PERROR_NO_TONER = 0xA,PERROR_NO_PAPER = 0xC,PERROR_OFF_LINE = 0xE,PERROR_SERIAL_ERR = 0x10,PERROR_PARALLEL_ERR = 0x12,PERROR_NETWORK_ERR = 0x14,PERROR_SOME_PROBLEM = 0x16,PERROR_FATAL = 0x18,PERROR_FILE_SYSTEM_FULL = 0x1A,PERROR_FILE_SYSTEM_ERROR = 0x1C,};
struct $1DE0B6712293945C9FD4ECD74856A1F6 {GStringElement OSCP_opcode;RegionFillRule OSCP_rule;PathCombineType OSCP_flags;};
enum $1E2C1667D0E65F4DBAC4B37F866C6A90 {DB_MAP_ID = 0xFF00,DB_GROUP_ID = 0xFF01,DB_ITEM_BLOCK_ID = 0xFF02,SVMID_HA_DIR_ID = 0xFF03,SVMID_HA_BLOCK_ID = 0xFF04,SVMID_DOCUMENT_NOTES = 0xFF05,};
enum $1E3516506F921EE5127C2D56BAD6FF6D {PIL_SYSTEM = 0x0,PIL_1 = 0x1,PIL_FLOW = 0x2,PIL_3 = 0x3,PIL_GEODE = 0x4,PIL_5 = 0x5,PIL_GADGET = 0x6,PIL_7 = 0x7,PIL_WINDOW = 0x8,PIL_DEFAULT = 0x9,};
struct $1E4CA10A1844E02B3C816D3CF5435BDF {word SD4RTT_numTriggers;StandardDialogResponseTriggerEntry SD4RTT_trigger1;StandardDialogResponseTriggerEntry SD4RTT_trigger2;StandardDialogResponseTriggerEntry SD4RTT_trigger3;StandardDialogResponseTriggerEntry SD4RTT_trigger4;};
enum $1E7095AF937764D809F4989B6F83F6F8 {GVT_VALUE = 0x0,GVT_MINIMUM = 0x1,GVT_MAXIMUM = 0x2,GVT_INCREMENT = 0x3,GVT_LONG = 0x4,GVT_RANGE_LENGTH = 0x5,GVT_RANGE_END = 0x6,GVI_VALUE_AS_RATIO_OF_AVAILABLE_RANGE = 0x7,};
enum $1E8870198DDE23EBA103909082FA56A6 {TGIT_PRIORITY_AND_USAGE = 0x0,TGIT_THREAD_HANDLE = 0x2,TGIT_QUEUE_HANDLE = 0x4,};
enum $1E975EE268A6A7F02CB8EEFBAAB959A3 {UILM_TRANSPARENT = 0x0,UILM_SINGLE_INSTANCE = 0x1,UILM_MULTIPLE_INSTANCES = 0x2,UILM_GURU = 0x3,};
struct $1EA4AB37EF86044C4FB6734218C6E6BE {DiskHandle PR_drive;TCHAR PR_path[];};
struct $1EC8647EC32ABC032C4781209EBF1952 {word IDA_dataSize;word IDA_dataOffset;optr IDA_data;};
struct $1EE673055E0F9BA062C8F2459D3C19F4 {optr IDCAP_docObj;IACPConnection IDCAP_connection;word IDCAP_serverNum;word IDCAP_status;};
enum $1EF2FB4AFF462BF0AD6A594C61E45E4F {PPT_SERIAL = 0x0,PPT_PARALLEL = 0x2,PPT_FILE = 0x4,PPT_NOTHING = 0x6,PPT_CUSTOM = 0x8,};
struct $1EF790D287C532DB1C384A624125C142 {word TIP_disk;MemHandle TIP_pathBlock;char *TIP_path;};
struct $1F034B2BD8EF6F42AC18099D5F73FA49 {optr CIH_owner;ClipboardItemFlags CIH_flags;ClipboardItemNameBuffer CIH_name;word CIH_formatCount;optr CIH_sourceID;FormatArray CIH_formats;dword CIH_reserved;};
struct $1F30E232E8E39AD1FE68DB8F95F02D11 {GStringElement ORT_opcode;};
struct $1F4634CCF615AE227DA1B2E01FC00845 {word VTSD_count;VisTextRange VTSD_recalcRange;VisTextRange VTSD_selectRange;dword VTSD_showSelectionPos;WordFlags VTSD_notifications;byte VTSD_needsRecalc;};
struct $1F6C4A26E36096CABFDD357582620F95 {GrObjAttrFlags GODD_attrFlags;GrObjLocks GODD_locks;word GODD_areaToken;word GODD_lineToken;ObjectTransform GODD_normalTransform;};
struct $1FCB533531D423085CA2549CEC9C144D {word GBCDP_repetitions;PointDWFixed GBCDP_move;WWFixed GBCDP_rotation;GrObjHandleSpecification GBCDP_rotateAnchor;GrObjAnchoredSkewData GBCDP_skew;GrObjAnchoredScaleData GBCDP_scale;};
struct $1FD7B2C8CF05369F7A647FF498D04690 {WWFixed GORMD_degrees;GrObjHandleSpecification GORMD_anchor;GrObjFunctionsActive GORMD_goFA;GStateHandle GORMD_gstate;};
struct $1FEB66003BE8AE92A6DE53ED102F87D4 {word ESD_length;};
struct $1FF24FBB43323421496B9B8A67F27BA5 {word RI_docDisk;dword RI_docID;};
enum $2032E0F0CFA3E21E1117726C9940E06D {GET_METHOD = 0x0,POST_METHOD = 0x1,};
enum $204BB3BC898B888C3845A70CF0927A84 {PMET_FETCH_UI = 0x0,PMET_GET_MODULE_INFO = 0x1,};
struct $204CAA8B2322F8E815F97C23DB7FB898 {FileAttrs DFIS_attributes;FileDateAndTime DFIS_modTimeDate;dword DFIS_fileSize;FileLongName DFIS_name;DirPathInfo DFIS_pathInfo;};
struct $2052A567210DA8DF401DDFB54355CA8A {dword VTCPC_lineNumber;dword VTCPC_rowNumber;};
struct $205650CEF9E45C2DAC7BE433879296D2 {word PSOI_numOrdered;word PSOI_numUnused;};
struct $20806F866C65D1FAEA5A2D0399EFCCE7 {VMChain VMTAR_vmChain;VMFileHandle VMTAR_vmFile;};
union $20C73100D7C7536A130288327CCA7BFD {VisTextCharAttrFlags NCCFU_char;VisTextParaAttrFlags NCCFU_paragraph;VisTextParaAttrBorderFlags NCCFU_border;};
struct $21495183D47290F5A8E3C5F22F4A38B0 {GStringElement OSLA_opcode;LineAttr OSLA_attr;};
struct $215A3681C450AD1508E3DE64A0CA18F2 {GStringElement OFB_opcode;word OFB_x;word OFB_y;word OFB_size;};
struct $2160BF807CFD166A93614E17264FE094 {word IH_count;Rectangle IH_bounds;optr IH_destination;dword IH_reserved;InkPoint IH_data;};
struct $218902BAC54B5712308DB964CF813296 {MemHandle CLSRD_dataBlock;word CLSRD_numSelections;};
struct $21CED7614576311B33E920BAE5D44FB0 {GStringElement OSTSP_opcode;WBFixed OSTSP_pad;};
enum $21D8C3293FB626E927BED6C8754C4455 {MBRLUT_DAY = 0x0,MBRLUT_WEEK = 0x1,MBRLUT_MONTH = 0x2,MBRLUT_YEAR = 0x3,};
struct $220DDBC0283CC49614B719DFAD2A776F {GStringElement OFE_opcode;word OFE_x1;word OFE_y1;word OFE_x2;word OFE_y2;};
enum $22150128E3663DED7B125D4703D8ACF2 {GOGT_NONE = 0x0,GOGT_LEFT_TO_RIGHT = 0x1,GOGT_TOP_TO_BOTTOM = 0x2,GOGT_RADIAL_RECT = 0x3,GOGT_RADIAL_ELLIPSE = 0x4,};
enum $2215ADAE06A0AE5285309900AF409715 {SSFT_NUMBER = 0x0,SSFT_DAY = 0x1,SSFT_WEEKDAY = 0x2,SSFT_MONTH = 0x3,SSFT_YEAR = 0x4,};
struct $221C70183E9E9D83930F24E25E146568 {GStringElement OSNP_opcode;};
struct $22409EA0C4A2D211819E1E9A3D799FC6 {IrlmpIasValueType IIAV_type;IrlmpIasValueUnion IIAV_value;};
enum $226D6F596696CAA25C1621FAEFEF8A42 {MBADT_GEOS_TEXT = 0x0,MBADT_UNICODE = 0x1,MBADT_INK = 0x2,};
enum $229E643E5E7DA98B885366267C47B572 {VTVT_PAGE_NUMBER = 0x0,VTVT_PAGE_NUMBER_IN_SECTION = 0x1,VTVT_NUMBER_OF_PAGES = 0x2,VTVT_NUMBER_OF_PAGES_IN_SECTION = 0x3,VTVT_SECTION_NUMBER = 0x4,VTVT_NUMBER_OF_SECTIONS = 0x5,VTVT_CREATION_DATE_TIME = 0x6,VTVT_MODIFICATION_DATE_TIME = 0x7,VTVT_CURRENT_DATE_TIME = 0x8,VTVT_STORED_DATE_TIME = 0x9,VTVT_CONTEXT_PAGE = 0xA,VTVT_CONTEXT_PAGE_IN_SECTION = 0xB,VTVT_CONTEXT_SECTION = 0xC,VTVT_CONTEXT_NAME = 0xD,VTVT_HOTSPOT = 0xE,};
struct $22C4FFCC3D1E2551AEAD156957CFB469 {GrObjGradientType GONGAC_type;byte GONGAC_endR;byte GONGAC_endG;byte GONGAC_endB;word GONGAC_numIntervals;GrObjGradientAttrDiffs GONGAC_diffs;};
struct $22C7D06F1B1AAB5539ADBE4667791DA1 {word HP_numLines;};
enum $235521FC40E014AF22FE323CEE1019FC {APVT_INTEGER = 0x0,APVT_STRING = 0x1,APVT_UNDEFINED = 0xFFFF,};
struct $2358A2BBFA3E93108FF10D27BF7658E0 {GStringElement OSTCI_opcode;Color OSTCI_color;};
enum $23AB1D777A17D61FCB408E9E96142E17 {GCUIT_NORMAL = 0x0,GCUIT_TOOLBOX = 0x1,};
struct $23AE0F5C7F70A74F90940436AB635CAE {optr NGCS_controller;GenControlStatusChange NGCS_statusChange;};
struct $23D47B9782537D904B15A5635700A965 {optr TPCI_currentSummons;optr TPCI_progressBox;ChunkHandle TPCI_jobParHandle;word TPCI_fileHandle;word TPCI_gstringHandle;word TPCI_printBlockHan;PrintControlAttrs TPCI_attrs;PrintStatusFlags TPCI_status;byte TPCI_holdUpCompletionCount;};
struct $246296ADE98E4C088346AFB0AD558A07 {word curRecord;word numRecords;FFRecordControlStatusFlags statusFlags;};
struct $24A87222BDC6138DA7B56EE7233D1D77 {word CAH_numEntries;word CAH_rowFlags;};
enum $24B080F506CD1092DEE44DBE66CFFB7E {GDO_NORMAL = 0x0,GDO_SAVE_AS = 0x1,GDO_REVERT = 0x2,GDO_REVERT_QUICK = 0x3,GDO_ATTACH = 0x4,GDO_DETACH = 0x5,GDO_NEW = 0x6,GDO_OPEN = 0x7,GDO_SAVE = 0x8,GDO_CLOSE = 0x9,GDO_AUTO_SAVE = 0xA,GDO_REVERT_TO_AUTO_SAVE = 0xB,};
enum $24EBCDDAD62EE668732C34758CA22F5B {ERR_UNDEFINED = 0x0,ERR_ILLEGAL_DATA = 0x1,ERR_UNSUPPORTED_PID = 0x2,ERR_ILLEGAL_ATTR = 0x10,ERR_UNSUPPORTED_CMD = 0x11,ERR_FILE_SYSTEM_FULL = 0x20,ERR_NO_FILE_OR_DIR = 0x21,ERR_LOW_BATTERY = 0x30,ERR_ABORT_CMD_EXEC = 0x31,};
struct $25A456F983EB4463160D5301428AE419 {VisTextStorageFlags VTCEAP_storageFlags;byte VTCEAP_blockOrChunk;};
struct $25F72A3701E07A9425C0B7402E193402 {word CSEFLD_nameLength;word CSEFLD_numberLength;};
struct $276A943FED61B9B950711A67F4C8CF81 {NameOrNumber LE_number;dword LE_contactID;LogEntryType LE_type;LogEntryDirection LE_direction;dword LE_duration;DateAndTime LE_datetime;LogEntryFlags LE_flags;};
struct $27811E714B904709525E4DEB725A1F35 {Boolean CQGS_isApp;optr CQGS_geodesArray;word CQGS_arrayIndex;word CQGS_numApps;TCHAR CQGS_geodeName[13];GeodeHandle CQGS_geode;word CQGS_appCompletionMsg;optr CQGS_appCompletionOptr;word CQGS_libCompletionMsg;optr CQGS_libCompletionOptr;GeodeHandle CQGS_excluded;};
struct $27D8E2FF90411EEAE562761715D6A5F8 {optr PLE_od;byte PLE_priority;byte PLE_other;};
enum $27E8C610FAD22D8691545344EDA4017F {GMDFID_INVALID = 0x0,GMDFID_STREAM_GSTRING = 0x1,GMDFID_VM_GSTRING = 0x2,GMDFID_TRANSFER_ITEM = 0x3,GMDFID_TEXT_CHAIN = 0x4,GMDFID_TEXT_FILE = 0x5,GMDFID_DOCUMENT = 0x6,GMDFID_ADDRESS_CARD = 0x7,GMDFID_APPOINTMENT = 0x8,GMDFID_INK = 0x9,GMDFID_VM_COMPOSITE = 0xA,GMDFID_FAX_FILE = 0xB,GMDFID_SHORT_MESSAGE = 0xC,GMDFID_FOAM_FILE = 0xD,GMDFID_TEXT_ARRAY = 0xE,GMDFID_OBEX = 0xF,};
enum $2815D5579D9A29F3AA32413A54D711DC {MSC_COUNT = 0x10,MSC_BRIGHT = 0x8,MSC_GREY = 0x4,MSC_CONTRAST = 0x2,MSC_DOUG = 0x1,};
struct $28A53D3434EB077B59FC725589178CC1 {LMemBlockHeader MLBH_base;word MLBH_numDestFields;word MLBH_chunk1;};
struct $28B6104B7B19E489C6753D4FEF7A4463 {PaperInputOptions PUID_paperInput;PaperOutputOptions PUID_paperOutput;word PUID_amountMemory;byte PUID_initMemory;byte PUID_compressionMode;PrinterSymbolSet PUID_symbolSet;PrinterCountryCode PUID_countryCode;};
struct $28D57EF42EBE266D5E045F97E0CE996D {PointDWFixed NVSC_origin;RectDWord NVSC_docBounds;PointDWord NVSC_increment;PointWWFixed NVSC_scaleFactor;ColorQuad NVSC_color;GenViewAttrs NVSC_attrs;GenViewDimensionAttrs NVSC_horizAttrs;GenViewDimensionAttrs NVSC_vertAttrs;GenViewInkType NVSC_inkType;XYSize NVSC_contentSize;XYSize NVSC_contentScreenSize;PointDWord NVSC_originRelative;PointDWord NVSC_documentSize;};
struct $28E91C02142EEF2B3CE0A860D17812F5 {byte msg_ref;byte msg_status;byte typeOfAddress;char address[23];byte time_stamp[7];char msg_data[11];char name[31];Boolean msg_showimmediately;};
enum $28EF303444BB2C403B5E355CB9E57DE5 {SLT_USER_LOAD_APPLICATION = 0x0,SLT_GEODE_LOAD = 0x1,};
struct $2916A2950B6270043C97F90F55814E43 {char DODRI_tempOwner[8];word DODRI_tempResource;};
struct $29DAF32B7F977AACEE9F639FFABC3529 {word FDMB_textTrItem;word FDMB_addressInfo;word FDMB_handle1;word FDMB_handle2;word FDMB_handle3;word FDMB_handle4;word FDMB_handle5;FoamDocSettings FDMB_docSettings;};
struct $29F408C646C18446C3C5E2323BE7D159 {word TSA_size;};
union $2A447E9DA5AA3F7C07765E9D5F491112 {EvalStringData ESAD_string;EvalRangeData ESAD_range;EvalErrorData ESAD_error;};
enum $2ACED5B9D796D93757AEB7868B198887 {IP_ACOUSTIC_GRAND_PIANO = 0x0,IP_BRIGHT_ACOUSTIC_PIANO = 0x1,IP_ELECTRIC_GRAND_PIANO = 0x2,IP_HONKY_TONK_PIANO = 0x3,IP_ELECTRIC_PIANO_1 = 0x4,IP_ELECTRIC_PIANO_2 = 0x5,IP_HARPSICORD = 0x6,IP_CLAVICORD = 0x7,IP_CELESTA = 0x8,IP_GLOCKENSPIEL = 0x9,IP_MUSIC_BOX = 0xA,IP_VIBRAPHONE = 0xB,IP_MARIMBA = 0xC,IP_XYLOPHONE = 0xD,IP_TUBULAR_BELLS = 0xE,IP_DULCIMER = 0xF,IP_DRAWBAR_ORGAN = 0x10,IP_PERCUSSIVE_ORGAN = 0x11,IP_ROCK_ORGAN = 0x12,IP_CHURCH_ORGAN = 0x13,IP_REED_ORGAN = 0x14,IP_ACCORDION = 0x15,IP_HARMONICA = 0x16,IP_TANGO_ACCORDION = 0x17,IP_ACOUSTIC_NYLON_GUITAR = 0x18,IP_ACOUSTIC_STEEL_GUITAR = 0x19,IP_ELECTRIC_JAZZ_GUITAR = 0x1A,IP_ELECTRIC_CLEAN_GUITAR = 0x1B,IP_ELECTRIC_MUTED_GUITAR = 0x1C,IP_OVERDRIVEN_GUITAR = 0x1D,IP_DISTORTION_GUITAR = 0x1E,IP_GUITAR = 0x1F,_HARMONICS = 0x20,IP_ACOUSTIC_BASS = 0x21,IP_ELECTRIC_FINGERED_BASS = 0x22,IP_ELECTRIC_PICKED_BASS = 0x23,IP_FRETLESS_BASS = 0x24,IP_SLAP_BASS_1 = 0x25,IP_SLAP_BASS_2 = 0x26,IP_SYNTH_BASS_1 = 0x27,IP_SYNTH_BASS_2 = 0x28,IP_VIOLIN = 0x29,IP_VIOLA = 0x2A,IP_CELLO = 0x2B,IP_CONTRABASS = 0x2C,IP_TREMOLO_STRINGS = 0x2D,IP_PIZZICATO_STRINGS = 0x2E,IP_ORCHESTRAL_HARP = 0x2F,IP_TIMPANI = 0x30,IP_STRING_ENSAMBLE_1 = 0x31,IP_STRING_ENSAMBLE_2 = 0x32,IP_SYNTH_STRINGS_1 = 0x33,IP_SYNTH_STRINGS_2 = 0x34,IP_CHOIR_AAHS = 0x35,IP_VOICE_OOHS = 0x36,IP_SYNTH_VOICE = 0x37,IP_ORCHESTRA_HIT = 0x38,IP_TRUMPET = 0x39,IP_TROMBONE = 0x3A,IP_TUBA = 0x3B,IP_MUTED_TRUMPET = 0x3C,IP_FRENCH_HORN = 0x3D,IP_BRASS_SECTION = 0x3E,IP_SYNTH_BRASS_1 = 0x3F,IP_SYNTH_BRASS_2 = 0x40,IP_SOPRANO_SAX = 0x41,IP_ALTO_SAX = 0x42,IP_TENOR_SAX = 0x43,IP_BARITONE_SAX = 0x44,IP_OBOE = 0x45,IP_ENGLISH_HORN = 0x46,IP_BASSOON = 0x47,IP_CLARINET = 0x48,IP_PICCOLO = 0x49,IP_FLUTE = 0x4A,IP_RECORDER = 0x4B,IP_PAN_FLUTE = 0x4C,IP_BLOWN_BOTTLE = 0x4D,IP_SHAKUHACHI = 0x4E,IP_WHISTLE = 0x4F,IP_OCARINA = 0x50,IP_LEAD_SQUARE = 0x51,IP_LEAD_SAWTOOTH = 0x52,IP_LEAD_CALLIOPE = 0x53,IP_LEAD_CHIFF = 0x54,IP_LEAD_CHARANG = 0x55,IP_LEAD_VOICE = 0x56,IP_LEAD_FIFTHS = 0x57,IP_LEAD_BASS_LEAD = 0x58,IP_PAD_NEW_AGE = 0x59,IP_PAD_WARM = 0x5A,IP_PAD_POLYSYNTH = 0x5B,IP_PAD_CHOIR = 0x5C,IP_PAD_BOWED = 0x5D,IP_PAD_METALLIC = 0x5E,IP_PAD_HALO = 0x5F,IP_PAD_SWEEP = 0x60,IP_FX_RAIN = 0x61,IP_FX_SOUNDTRACK = 0x62,IP_FX_CRYSTAL = 0x63,IP_FX_ATMOSPHERE = 0x64,IP_FX_BRIGHTNESS = 0x65,IP_FX_GOBLINS = 0x66,IP_FX_ECHOES = 0x67,IP_FX_SCI_FI = 0x68,IP_SITAR = 0x69,IP_BANJO = 0x6A,IP_SHAMISEN = 0x6B,IP_KOTO = 0x6C,IP_KALIMBA = 0x6D,IP_BAG_PIPE = 0x6E,IP_FIDDLE = 0x6F,IP_SHANAI = 0x70,IP_TINKLE_BELL = 0x71,IP_AGOGO = 0x72,IP_STEEL_DRUMS = 0x73,IP_WOODBLOCK = 0x74,IP_TAIKO_DRUM = 0x75,IP_MELODIC_TOM = 0x76,IP_SYNTH_DRUM = 0x77,IP_REVERSE_CYMBAL = 0x78,IP_GUITAR_FRET_NOISE = 0x79,IP_BREATH_NOISE = 0x7A,IP_SEASHORE = 0x7B,IP_BIRD_TWEET = 0x7C,IP_TELEPHONE_RING = 0x7D,IP_HELICOPTER = 0x7E,IP_APPLAUSE = 0x7F,IP_GUNSHOT = 0x80,IP_ACOUSTIC_BASS_DRUM = 0x81,IP_BASS_DRUM_1 = 0x82,IP_SIDE_STICK = 0x83,IP_ACOUSTIC_SNARE = 0x84,IP_HAND_CLAP = 0x85,IP_ELECTRIC_SNARE = 0x86,IP_LOW_FLOOR_TOM = 0x87,IP_CLOSED_HI_HAT = 0x88,IP_HIGH_FLOOR_TOM = 0x89,IP_PEDAL_HI_HAT = 0x8A,IP_LOW_TOM = 0x8B,IP_OPEN_HI_HAT = 0x8C,IP_LOW_MID_TOM = 0x8D,IP_HI_MID_TOM = 0x8E,IP_CRASH_CYMBAL_1 = 0x8F,IP_HIGH_TOM = 0x90,IP_RIDE_CYMBAL_1 = 0x91,IP_CHINESE_CYMBAL = 0x92,IP_RIDE_BELL = 0x93,IP_TAMBOURINE = 0x94,IP_SPLASH_CYMBAL = 0x95,IP_COWBELL = 0x96,IP_CRASH_CYMBAL_2 = 0x97,IP_VIBRASLAP = 0x98,IP_RIDE_CYMBAL_2 = 0x99,IP_HI_BONGO = 0x9A,IP_LOW_BONGO = 0x9B,IP_MUTE_HI_CONGA = 0x9C,IP_OPEN_HI_CONGA = 0x9D,IP_LOW_CONGA = 0x9E,IP_HI_TIMBALE = 0x9F,IP_LOW_TIMBALE = 0xA0,IP_HIGH_AGOGO = 0xA1,IP_LOW_AGOGO = 0xA2,IP_CABASA = 0xA3,IP_MARACAS = 0xA4,IP_SHORT_WHISTLE = 0xA5,IP_LONG_WHISTLE = 0xA6,IP_SHORT_GUIRO = 0xA7,IP_LONG_GUIRO = 0xA8,IP_CLAVES = 0xA9,IP_HI_WOOD_BLOCK = 0xAA,IP_LOW_WOOD_BLOCK = 0xAB,IP_MUTE_CUICA = 0xAC,IP_OPEN_CUICA = 0xAD,IP_MUTE_TRIANGLE = 0xAE,IP_OPEN_TRIANGLE = 0xAF,};
struct $2B4CD526B6586F73E09DA36CECD6A8FA {EvalStackArgumentType ASE_type;EvalStackArgumentData ASE_data;};
struct $2B6353BB02656F13DB5543B939E61FDD {dword UWI_numChars;word UWI_charOffset;char UWI_unknownWord[65];};
struct $2B6F68F967F158500DD5C03598DAFD4E {word TVTNCPID_handle;word TVTNCPID_id;};
enum $2B879885335CF578DE9C061EC9AFC8E4 {SE_NO_ERROR = 0x0,SE_TIMEOUT = 0x1,SE_PREVIOUS_OWNER_DIED = 0x2,};
struct $2BE13A44652D9D11BDAB6703483836FC {MemHandle CLSD_contactsBlock;word CLSD_contactsTotal;word CLSD_contactsIndex;MemHandle CLSD_selectedBlock;word CLSD_selectedTotal;};
struct $2C04135B07BACC84AF9A90452F3EA3AD {StyleSheetElementHeader GOBAAE_styleElement;byte GOBAAE_r;byte GOBAAE_g;byte GOBAAE_b;SysDrawMask GOBAAE_mask;MixMode GOBAAE_drawMode;GraphicPattern GOBAEE_pattern;byte GOBAEE_backR;byte GOBAEE_backG;byte GOBAEE_backB;GrObjAreaAttrElementType GOBAEE_aaeType;GrObjAreaAttrInfoRecord GOBAAE_areaInfo;byte GOBAAE_reservedByte;word GOBAAE_reserved;};
enum $2C172900036D0F598CF971AC939F175C {GOAAET_BASE = 0x0,GOAAET_GRADIENT = 0x1,};
struct $2CED64BB66D73172BFD158F5A21F6B5F {char *textPtr;word nameToken;word maxChars;char *resultPtr;word numWritten;};
struct $2D0888CD89A96F7B59DFCAA1DA2CC5F1 {word MBACA_opaqueSize;};
enum $2D34B58C94EDB5E35C856580B17916B1 {SSDE_DEVICE_BUSY = 0x100,SSDE_DIAL_ERROR = 0x200,SSDE_LINE_BUSY = 0x300,SSDE_NO_DIALTONE = 0x400,SSDE_NO_ANSWER = 0x500,SSDE_NO_CARRIER = 0x600,SSDE_BLACKLISTED = 0x700,SSDE_DELAYED = 0x800,SSDE_CALL_FAILED = 0x900,SSDE_NEG_FAILED = 0xA00,SSDE_AUTH_REFUSED = 0xB00,SSDE_AUTH_FAILED = 0xC00,SSDE_LQM_FAILURE = 0xD00,SSDE_LOOPED_BACK = 0xE00,SSDE_IDLE_TIMEOUT = 0xF00,SSDE_DEVICE_NOT_FOUND = 0x1000,SSDE_DEVICE_TIMEOUT = 0x1100,SSDE_DEVICE_ERROR = 0x1200,SSDE_NO_USERNAME = 0x1300,SSDE_CANCEL = 0x1400,SSDE_INVALID_ACCPNT = 0x1500,SSDE_LOGIN_FAILED = 0x1600,SSDE_LOGIN_FAILED_NO_NOTIFY = 0x1700,};
enum $2D5D17C9E708B66D5927A805E70A264A {VACC_BACKGROUND = 0x0,VACC_HOUR_HAND = 0x1,VACC_MINUTE_HAND = 0x2,VACC_SECOND_HAND = 0x3,};
struct $2D6E80DE77778EE89EAC7F30114EBD22 {GenAppUsabilityTupleFlags GAUT_flags;optr GAUT_object;};
enum $2D8A2014CBC3ADB6C407119D364CD229 {STREAM_DISCARD = 0x0,STREAM_LINGER = 0xFFFF,};
struct $2D8D45B1C6697B7FCC08E83650BFFCC6 {word FFESCM_setEdges;word FFESCM_indeterminateEdges;FormatIdType FFESCM_formatIdType;};
struct $2DBE6969D0A77F2C2C97A683816AE478 {VMBlockHandle GOAMAD_areaAttrArrayHandle;word GOAMAD_areaDefaultElement;VMBlockHandle GOAMAD_lineAttrArrayHandle;word GOAMAD_lineDefaultElement;VMBlockHandle GOAMAD_grObjStyleArrayHandle;VMBlockHandle GOAMAD_charAttrArrayHandle;word GOAMAD_charDefaultElement;VMBlockHandle GOAMAD_paraAttrArrayHandle;word GOAMAD_paraDefaultElement;VMBlockHandle GOAMAD_typeArrayHandle;word GOAMAD_typeDefaultElement;VMBlockHandle GOAMAD_graphicArrayHandle;VMBlockHandle GOAMAD_nameArrayHandle;VMBlockHandle GOAMAD_textStyleArrayHandle;};
struct $2DC881E1EB2CB117FC05D54D090AA435 {GStringElement OSWCR_opcode;PathCombineType OSWCR_flags;Rectangle OSWCR_rect;};
struct $2DD8EB525FBAA11535166EE905E46092 {word ax;word bx;word cx;word dx;word si;word di;word bp;word ds;word es;CPUFlags flags;};
struct $2E616F4580742465F752731E27311683 {WWFixed RGNB_gridSpacing;GridOptions RGNB_gridOptions;};
struct $2EEAED752AD3A4C0A1658EE42CB6E9CF {GrObjHandleSpecification hitHandle;EvaluatePositionRating evaluation;};
struct $2EF2B3F2007249AEACC4DD9C7F2E4659 {byte IIMN_size;char IIMN_name[60];};
struct $2F0DDD4A587267F5108EBCF9FBD912B8 {MemHandle TMDD_block;MailboxDialogType TMDD_type;};
struct $2F7F3F2D058449C7E9DC1267634C1528 {CommonParameters FP_common;word FP_nChars;};
struct $2F91828AC560D4DD29748F3C264E3A1D {TransMatrix VTGG_tmatrix;XYOffset VTGG_drawOffset;};
struct $2FC5AE35CBCC1E8ECEEE9506753B8161 {CommonParameters PP_common;word PP_parserBufferSize;ParserFlags PP_flags;dword PP_textPtr;ScannerToken PP_currentToken;ScannerToken PP_lookAheadToken;byte PP_error;word PP_tokenStart;word PP_tokenEnd;};
struct $2FEF7C30D3F90F3E3392BEC5F1AFFDD7 {GStringElement ORS_opcode;};
enum $30479F21CC38D10C8B51278DACAC42EB {STREAM_NOT_IMPLEMENTED = 0xFFFF,STREAM_NO_ERROR = 0x0,STREAM_WOULD_BLOCK = 0x1,STREAM_CLOSING = 0x2,STREAM_CANNOT_ALLOC = 0x3,STREAM_BUFFER_TOO_LARGE = 0x4,STREAM_CLOSED = 0x5,STREAM_SHORT_READ_WRITE = 0x6,STREAM_NO_DEVICE = 0x7,STREAM_DEVICE_IN_USE = 0x8,STREAM_POWER_ERROR = 0x9,};
struct $306AA581D16B12CD82CA1AB3D84E2E32 {word CAH_count;word CAH_elementSize;word CAH_curOffset;word CAH_offset;};
struct $306DD057AF40A6E0DE6EF0BF5E3E28B2 {byte LA_colorFlag;RGBValue LA_color;SystemDrawMask LA_mask;ColorMapMode LA_mapMode;LineEnd LA_end;LineJoin LA_join;LineStyle LA_style;WWFixed LA_width;};
struct $308754BF0F51713D02C2BFE6D6A66C0B {GStringElement OSACI_opcode;Color OSACI_color;};
struct $30C522515A69826B614AC7ADFAD8A9E7 {GStringElement OSTK_opcode;sword OSTK_degree;};
enum $30C6FA5BB078C7ECCC3421A6C3F89219 {SSE_VOICE_ON = 0x0,SSE_VOICE_OFF = 0x2,SSE_CHANGE = 0x4,SSE_GENERAL = 0x6,};
struct $30E359F8B6EA07669ED79D0464951AE1 {TargetReference VTI_target;TargetReference VTI_content;};
struct $3100716E7FA844E92CDC6079CE0F9A1C {MediumType MMT_medium;MailboxTransport MMT_transport;MailboxTransportOption MMT_transOption;};
struct $317CE55B428D1F30AA31E1B253B0FDDF {GStringElement OSAM_opcode;SysDrawMask OSAM_mask;};
struct $31EC85363C1D3E72A4D8DE9DE16297C7 {EvalParameters SEP_evalParams;dword SEP_expression;dword ArgumentStackElement;};
enum $31F4A8F425A43C1740760E7FEB04741B {DONT_SELECT_AFTER_EDIT = 0x0,SELECT_AFTER_EDIT = 0x1,};
struct $322A41D840D1655B5C884A805D48CFEC {word MSCPRD_start;word MSCPRD_end;};
enum $328EBE8192CE36A2CC4629D9F54C7487 {IIC_DISCOVER_DEVICES_INDICATION = 0x0,IIC_DISCOVER_DEVICES_CONFIRMATION = 0x2,IIC_CONNECT_INDICATION = 0x4,IIC_CONNECT_CONFIRMATION = 0x6,IIC_DISCONNECT_INDICATION = 0x8,IIC_STATUS_INDICATION = 0xA,IIC_STATUS_CONFIRMATION = 0xC,IIC_DATA_INDICATION = 0xE,IIC_UDATA_INDICATION = 0x10,IIC_GET_VALUE_BY_CLASS_CONFIRMATION = 0x12,IIC_LAST_VALUE = 0x12,};
struct $32BB5B4B793E5E797F713A7B6FCBDB6B {optr LP_next;};
struct $32BC277BC1E8BFB9FCDF81A8B1059207 {RectDWFixed BRD_rect;GStateHandle BRD_destGState;GStateHandle BRD_parentGState;word BRD_initialized;};
struct $332BFC7F5C3C8C1D0AC7381B866AF2D2 {VisTextRange VTFHLP_range;};
struct $3338E384206CFCB41D6B504A851DF27D {word IMEO_status;word IMEO_usedQValue;dword IMEO_resultedSize;word IMEO_colorInformation;word IMEO_resultDimX;word IMEO_resultDimY;word IMEO_nComp;word IMEO_samplingFactors[3][2];};
struct $338E3D958C0E3C2173B5F1EA3B4B4A23 {HWRMode HWRBD_mode;sword HWRBD_top;sword HWRBD_bottom;};
union $33F2511C2E5AD0B4EBCEC681B0F9238D {IrlmpIasIntegerValue IIVU_integer;IrlmpIasOctetSequenceHeader IIVU_octetSequence;IrlmpIasUserStringHeader IIVU_userString;};
enum $343F1017F7A21EB67653CBDBF253318A {VLR_OPEN = 0x0,VLR_DETACH = 0x1,VLR_CHANGE_DOCUMENT = 0x2,VLR_CLOSE = 0x3,};
struct $3447888ECC99EEDFD96D09038161D89B {void *SSP_descriptionCallbacks[4];void *SSP_specialDescriptionCallback;void *SSP_mergeCallbacks[4];void *SSP_substitutionCallbacks[4];StyleChunkDesc SSP_styleArray;StyleChunkDesc SSP_attrArrays[4];word SSP_attrTokens[4];StyleChunkDesc SSP_xferStyleArray;StyleChunkDesc SSP_xferAttrArrays[4];};
struct $3475141482D6D9965C0E629401A058D5 {optr CTD_line1;optr CTD_line2;optr CTD_line3;optr CTD_line4;optr CTD_line5;};
struct $3475486A34F06529C91EBF4AD96B818A {VMChainLink SMSTH_meta;TCHAR SMSTH_text;};
struct $34A041DF33F02DBE364AB45852801DFF {word VGD_lineWidth;word VGD_centerOffset;word VGD_secondWidth;};
struct $34B169BE125EFB2F153C6CB5E28D1548 {word D_row;byte D_column;};
struct $34E273231D0AE3834826A47C1F9E8C6D {word GRP_ax;word GRP_bp;word GRP_cx;word GRP_dx;};
enum $34F5F478C745BEC6E655863B01D07F07 {IT_PENCIL = 0x0,IT_ERASER = 0x2,IT_SELECTOR = 0x4,};
struct $350762858AE8AC5042EF2A9833AACD63 {MemHandle TPCED_event;MessageFlags TPCED_messageFlags;};
enum $351DC98CA581490C51E4294D2E3595A6 {SDX_NO_ERROR = 0x0,SDX_SOURCE_QUENCH = 0x1,SDX_PARAM_PROBLEM = 0x2,SDX_TIME_EXCEEDED = 0x3,SDX_UNREACHABLE = 0x4,};
struct $359B80BA3CD31CC5681EF0B8DEF87B8E {GStringElement OSCR_opcode;PathCombineType OSCR_flags;Rectangle OSCR_rect;};
enum $35C83F51E81BBF19225AED727E5F2E01 {SF_FILENAME = 0x0,SF_PAGE = 0x1,SF_PAGES = 0x2,};
struct $3618710C382EC9BD1A544816407872AB {ChunkHandle RCMCH_topText;word RCMCH_unusedCX;ChunkHandle RCMCH_iconBitmap;word RCMCH_unusedBP;};
struct $3653B3E57FBFE68B9DA282DC6B448ED2 {byte numberFormatFlags;byte decimalDigits;wchar thousandsSeparator;wchar decimalSeparator;wchar listSeparator;};
struct $3655A8AF28BBB19220D2971FFA5C447A {DependencyParameters DP_parameters;void (__pascal *DP_callbackPtr)(C_CallbackStruct *);C_CallbackStruct DP_callbackStruct;};
struct $36926D06F36342DF90BC6383510B3E9D {word WSIP_windowWidth;word WSIP_windowHeight;byte WSIP_bottomArea;byte WSIP_rightArea;word WSIP_unused;};
struct $36949B2C32C6EE748A39910F5F5D666F {word RR_y1M1;word RR_eo1;word RR_y2;word RR_x1;word RR_x2;word RR_eo2;word RR_eo3;};
struct $369DEDDD0C9857DBA7ED6CCD746D8769 {HelpType NHCC_type;ContextName NHCC_context;FileLongName NHCC_filename;FileLongName NHCC_filenameTOC;};
struct $37079F85E4BE599304DE5B0404E65880 {VisTextMaxParaAttr VTNPAC_paraAttr;word VTNPAC_paraAttrToken;VisTextParaAttrDiffs VTNPAC_paraAttrDiffs;sdword VTNPAC_regionOffset;sword VTNPAC_regionWidth;word VTNPAC_selectedTab;};
struct $37C252EDA9ECB0D21DBA7E35CD48A214 {IrlapConnectionParams1 QOS_param;dword QOS_devAddr;QualityOfServiceFlags QOS_flags;};
struct $37D128BB129A5AC5403E03EEB3449DB1 {Justification NJC_justification;byte NJC_diffs;byte NJC_useGeneral;};
enum $38043EA795AB2B56EF44A5A5D36268F3 {VMO_READ = 0x0,VMO_INTERNAL = 0x1,VMO_SAVE = 0x2,VMO_SAVE_AS = 0x3,VMO_REVERT = 0x4,VMO_UPDATE = 0x5,VMO_WRITE = 0x6,};
struct $3816CBA8F6AD65C3A37922185B920CF8 {GenControlUserFlags GCUD_flags;word GCUD_userAddedUI;word GCUD_userRemovedUI;word GCUD_userAddedToolboxUI;word GCUD_userRemovedToolboxUI;};
struct $3929BB43B157FA7F7FB7214B843F29EA {MediumType MU_medium;MediumUnitType MU_unitType;word MU_unit;};
struct $39709C0E8A3FC41E3B3C6409FE9984C6 {HierarchicalGrabFlags OAGP_grabFlags;word OAGP_unused;optr OAGP_object;};
struct $39B23653FC0B8BE683123DE084D5F105 {GStringElement OBPL_opcode;word OBPL_count;byte OBPL_width;byte OBPL_height;};
struct $39B2F06E450556906F12841A28FECA17 {GrObjBaseAreaAttrElement GNAAC_areaAttr;GrObjBaseAreaAttrDiffs GNAAC_areaAttrDiffs;};
struct $3A190449B497CF387B04C64549CB25F3 {ClassStruct *GBCGP_class;word padding[4];WWFixed GBCGP_width;WWFixed GBCGP_height;};
struct $3B3A8122E4B08C701D1946363FBAF559 {GCNListType GCNLP_ID;optr GCNLP_optr;};
struct $3B572B65182E8F0CB76D53241459D8AE {GStringElement ODHLT_opcode;word ODHLT_x2;};
struct $3B603BFF766EE16F63B021016DC5F71C {byte *argStack;byte *opFnStack;SpecialFunctions specialFunction;byte *newArgStack;byte errorOccurred;byte error;};
struct $3B76AD9B7800909652CA37819EEB4CBA {word CLS_pad1;word CLS_locksSetSoFar;word CLS_locksClearSoFar;word CLS_pad2;};
enum $3B7EBAD49AD5A311A61ED5C3DEC7EC6C {TO_NULL = 0x0,TO_SELF = 0x1,TO_OBJ_BLOCK_OUTPUT = 0x2,TO_PROCESS = 0x3,};
struct $3C1C93FAC16A93B268171CE798F6C1F8 {word T_position;TabAttributes T_attr;SysDrawMask T_grayScreen;byte T_lineWidth;byte T_lineSpacing;word T_anchor;};
struct $3C2571D48349595DC45C5B1147DC4A7C {GStringElement OAT_opcode;WWFixed OAT_x;WWFixed OAT_y;};
struct $3CC29C66FB16AA4175A3737809FFBB57 {GStringElement OST_opcode;};
enum $3CD932289B448C86446CC5FB60CDE42A {FSRC_STANDARD = 0x0,FSRC_FINE = 0x1,};
enum $3CDB7B10D95D89346CF13679E3142EAE {FOMC_FIRST_FIELD = 0x0,FOMC_PREVIOUS_FIELD = 0x1,FOMC_NEXT_FIELD = 0x2,FOMC_LAST_FIELD = 0x3,};
struct $3D389F1104C796171207DCEB21FFD879 {GStringElement OSSP_opcode;};
struct $3D68796E67AF62536A827260514D6241 {word LS_pointNum;word LS_length;word LS_percent;};
enum $3D96E4EAD4E6E93A63D2510DDAC8EC93 {FPP_NONE = 0x0,FPP_ODD = 0x1,FPP_EVEN = 0x2,};
struct $3DB621FAD832A95964BE53340F49B94C {WWFixedAsDWord GSP_yScaleFactor;WWFixedAsDWord GSP_xScaleFactor;};
struct $3E1ECE4F54EAB5D07E352D7DD945BADF {sword R_left;sword R_top;sword R_right;sword R_bottom;};
struct $3E34046E5BB208A4E627A202491A333D {FileHandle TRDBI_file;DBItem TRDBI_item;DBGroup TRDBI_group;};
struct $3E75B4E0D13360DDB4E0407282102EEF {CellReference ERD_firstCell;CellReference ERD_lastCell;};
enum $3E7E18BB14457278993EAF15234DBA2E {SST_ERROR = 0x0,SST_WARNING = 0x1,SST_NOTIFY = 0x2,SST_NO_INPUT = 0x3,SST_KEY_CLICK = 0x4,SST_ALARM = 0x5,SST_CUSTOM_SOUND = 0xFFFD,SST_CUSTOM_BUFFER = 0xFFFE,SST_CUSTOM_NOTE = 0xFFFF,};
struct $3F8E984C3C43DA7983E6BB30EE23B236 {char PDLKD_buffer[32];word PDLKD_count;word PDLKD_timerHandle;word PDLKD_timerID;};
struct $3FA3C241DF38982CD341F6193609534B {SpreadsheetFlags SRP_flags;word SRP_circCount;FloatNum SRP_converge;};
struct $3FC874382814EAB9AC61F1290A3C47E2 {VMBlockHandle GOTA_charAttrArray;VMBlockHandle GOTA_paraAttrArray;VMBlockHandle GOTA_typeArray;VMBlockHandle GOTA_graphicArray;VMBlockHandle GOTA_nameArray;VMBlockHandle GOTA_textStyleArray;};
struct $40226B9F48FF3F510D75388C67667F11 {word FCND_disk;FileID FCND_id;FileLongName FCND_name;};
struct $403458B4ADE217788815A8D0F430759C {GStringElement ODBCP_opcode;word ODBCP_size;};
struct $4076D762D1C81A028595D1F46C0792CE {PointDWFixed BI_center;WWFixed BI_width;WWFixed BI_height;GrObjTransMatrix BI_transform;};
struct $414504422718D17FEC3750E6EDBEF93D {FontID FES_ID;TCHAR FES_name[20];};
enum $42A58214516CA2F6AA9A9EC891076ABB {SMVP_ONE_HOUR = 0xB,SMVP_SIX_HOURS = 0x47,SMVP_ONE_DAY = 0xA7,SMVP_ONE_WEEK = 0xAD,SMVP_MAX = 0xFF,};
struct $433B18DE0A9A92926B8B9DEC028A5567 {DWFixed Guide_location;};
struct $4357C61DE9421643746722C01E20355F {word CQTRI_paramAX;word CQTRI_paramBX;word CQTRI_paramCX;word CQTRI_paramDX;Point CQTRI_regionPos;dword CQTRI_strategy;dword CQTRI_region;};
struct $435BAEC098D13D219B46B86A422BBF75 {word unused;MouseReturnFlags flags;optr ptrImage;};
struct $4366F146A2CB7AE3795F23111C732742 {VMBlockHandle VTS_contents;VisTextRange VTS_selection;};
enum $43E9C101736C5A6689916A08C170A599 {SDE_NO_ERROR = 0x0,SDE_CONNECTION_REFUSED = 0x1,SDE_CONNECTION_TIMEOUT = 0x2,SDE_MEDIUM_BUSY = 0x3,SDE_INSUFFICIENT_MEMORY = 0x4,SDE_NOT_REGISTERED = 0x5,SDE_ALREADY_REGISTERED = 0x6,SDE_CONNECTION_EXISTS = 0x7,SDE_LINK_OPEN_FAILED = 0x8,SDE_DRIVER_NOT_FOUND = 0x9,SDE_DESTINATION_UNREACHABLE = 0xA,SDE_CONNECTION_RESET_BY_PEER = 0xB,SDE_CONNECTION_RESET = 0xC,SDE_UNSUPPORTED_FUNCTION = 0xD,SDE_INVALID_CONNECTION_HANDLE = 0xE,SDE_INVALID_ADDR_FOR_LINK = 0xF,SDE_INVALID_ADDR = 0x10,SDE_TEMPORARY_ERROR = 0x11,SDE_INTERRUPTED = 0x12,};
struct $445D6B4A5BD6D0DE4971A6F36E6FD784 {FieldDataAttrs CFDA_common;};
struct $44D89348646A771F77E85BB523659234 {UIInterfaceLevel AFI_uiInterfaceLevel;word AFI_appFeatures;};
struct $454D79A8FC4C6E6DCA77343D355ED71E {word FCBND_end;FileChangeBatchNotificationItem FCBND_notifications[1];};
enum $459A6F027A73088B8B01208F560CFCD3 {CL_STARTING_AT_POSITION = 0x0,CL_ENDING_AT_POSITION = 0x1,CL_CENTERED_AROUND_POSITION = 0x2,CL_CENTERED_AROUND_SELECTION = 0x3,CL_CENTERED_AROUND_SELECTION_START = 0x4,CL_GET_SELECTED_WORD = 0x5,};
enum $45B57FF165175B8B486C50007D24CC8B {CTFT_OK = 0x0,CTFT_INVALID_ID = 0x1,CTFT_NO_TONE = 0x2,};
enum $46ECFF6947D6D2B43D020C7192BBA68C {IACPS_CLIENT = 0x0,IACPS_SERVER = 0x1,};
struct $46F0E57D73053E6D8FC714DF2937D1EF {GStringElement ORMT_opcode;word ORMT_x1;word ORMT_y1;};
struct $470515845E180A088BB5B8544C34D524 {DocumentInfo VDS_docInfo;ViewerFileType VDS_type;FaxSendResolutionChoice VDS_resolution;};
struct $47218A9219DB3D2F3B718DC7D276AA4D {TextReferenceType TR_type;TextReferenceUnion TR_ref;};
struct $472B8665B5C195E8690529D6D51C6E3A {LMemBlockHeader HAD_header;VMBlockHandle HAD_data;ChunkHandle HAD_dir;VMBlockHandle HAD_xdir;VMBlockHandle HAD_self;word HAD_size;};
struct $4777E2385A2174758B5F95C4B797DA4D {byte VTWCBG_green;byte VTWCBG_blue;};
struct $47B77B9A42B18CF4C39BCF177DBED363 {word DDE_ackCount;word DDE_callerID;optr DDE_ackOD;word DDE_completeMsg;};
struct $483986D64845143DB593BC3B70DEAAD0 {word B_width;word B_height;byte B_compact;byte B_type;};
struct $484BE7560261EDEE86735C7A619D1C06 {FileChangeNotificationType FCBNI_type;word FCBNI_disk;FileID FCBNI_id;FileLongName FCBNI_name;};
struct $487DE96EDEAF5FD327DE9FAC00DDA3E7 {RGBValue OFE_color;word OFE_spacePad;sword OFE_trackKern;byte OFE_fontWeight;byte OFE_fontWidth;};
union $4887AAE388C8F0CECB4D9FE840E9471B {UndoActionDataFlags UADU_flags;UndoActionDataPtr UADU_ptr;UndoActionDataVMChain UADU_vmChain;};
struct $48E73CE3B8892A2B61ECD0D8B7897146 {byte SNP_flags;word SNP_listEntry;word SNP_textLength;TCHAR SNP_text[128];word SNP_defLength;char SNP_definition[1024];word SNP_token;byte SNP_unused;};
struct $48F1F242E438769EAFBC3761A8B35B94 {optr NCP_object;NavigationFlags NCP_navFlags;NavigateCommonFlags NCP_navCommonFlags;ChunkHandle NCP_genPart;byte NCP_backtrackFlag;};
struct $48FC1B61E15D8C523209BA5197A16555 {word SSCTAI_attrTokens[4];word SSCTAI_baseStyle;byte SSCTAI_differsFromBase;byte SSCTAI_indeterminate;};
struct $498EA31B4739EFA91F44C49DFBF8EA6C {EvalParameters CE_parameters;void (__pascal *CE_callbackPtr)(C_CallbackStruct *);C_CallbackStruct CE_callbackStruct;};
enum $49A544EF34D2802EAC69A6AC23FC1A6B {DP_NOT_PRESENT = 0xFFFF,DP_CANT_TELL = 0x0,DP_PRESENT = 0x1,DP_INVALID_DEVICE = 0xFFFE,};
union $4A4A09A86469E20D493B4658E216C0AA {SpoolInfoQueueParams SIP_queueParams;SpoolInfoJobParams SIP_jobParams;};
struct $4A5A4624D2B7AE88B8FF8034C814C8DB {WWFixed GS_y;WWFixed GS_x;};
struct $4A6B5ED559A8F454688E7147A989F37E {optr IDOAP_docObj;IACPConnection IDOAP_connection;word IDOAP_serverNum;};
enum $4A93BDE36C1AD5918EC282C61FB32CDD {GSET_NO_ERROR = 0x0,GSET_DISK_FULL = 0x1,};
enum $4AB2905DC487E8532D4D6660E86D487C {FSA_SAVE_DATA = 0x0,FSA_THROW_AWAY_CHANGES = 0x2,FSA_DO_NOTHING = 0x4,};
enum $4ACB06FB599B794B795470E84B15C244 {STREAM_BLOCK = 0x2,STREAM_NO_BLOCK = 0x0,};
struct $4B345571DD9C15D480B1E35A754B2F82 {optr TRBC_ref;};
struct $4BC11170B18132095E88F08C2EB601F2 {FontID DFI_font;word DFI_pointSize;};
struct $4BF98A0513324256922EE06408ED82DF {optr MG_OD;WindowHandle MG_gWin;};
struct $4C1F4D69B795DD18835B5ADCAF9B8C70 {word NU_x;word NU_y;};
struct $4C62D666539542B45A9D5EC00B7AA9CA {byte NFAC_fontWeight;byte NFAC_fontWeightDiffs;byte NFAC_fontWidth;byte NFAC_fontWidthDiffs;word NFAC_trackKerning;byte NFAC_trackKerningDiffs;};
struct $4C64474EF6BA0BDB4806B40116E6CBA7 {word TAPEA_linkSize;byte TAPEA_linkType;word TAPEA_accPntID;};
struct $4C65181F112787038EC7401131A5731D {word GP_xres;word GP_yres;byte GP_bandHeight;byte GP_buffHeight;byte GP_interleaveFactor;byte GP_colorFormat;word GP_colorCorrection;};
struct $4C96CF7105216D3EB6044DA68B55A32A {byte PRS_errorCode;word PRS_textOffsetStart;word PRS_textOffsetEnd;byte *PRS_lastTokenPtr;};
enum $4CB75D72147BD9F41A145206BB75A21D {FPDB_SEVEN = 0x7,FPDB_EIGHT = 0x8,};
union $4CC6B565E93519DCD463F97EC06097C8 {HWRNoneData HWRC_none;HWRLineData HWRC_lined;HWRBoxData HWRC_boxed;HWRGridData HWRC_grid;};
struct $4CDB00143B33FFEA5D8EF8ADDB5BF5CA {word MBEI_size;ManufacturerID MBEI_manufacturer;word MBEI_escapeType;byte MBEI_data[];};
struct $4CF1D41990088B1D9D8F486F6FD0DE0E {word GOBPCBS_message;optr GOBPCBS_optr;};
enum $4D2BD16233F00CF56279D709F5812D5E {CIF_TEXT = 0x0,CIF_GRAPHICS_STRING = 0x1,CIF_FILES = 0x2,CIF_SPREADSHEET = 0x3,CIF_INK = 0x4,CIF_GROBJ = 0x5,CIF_GEODEX = 0x6,CIF_BITMAP = 0x7,CIF_SOUND_SYNTH = 0x8,CIF_SOUND_SAMPLE = 0x9,};
struct $4D421DC202AF077A0AF06EB53A320FBA {word SCR_socket;SocketCondition SCR_condition;byte SCR_reserved;};
struct $4D5D4C27875D3485266BDFE93CE60CAF {byte NS_flags;word NS_token;word NS_length;};
struct $4D857804ADE8280CB3450CBEABD33FAC {word GOIRD_tempMessage;word GOIRD_tempMessageDX;word GOIRD_inRectMessage;word GOIRD_inRectMessageDX;RectDWord GOIRD_rect;GrObjsInRectSpecial GOIRD_special;};
struct $4DE60F6BEDA66DE267E5E47B99BBDD40 {word ICA_dataSize;word ICA_dataOffset;optr ICA_data;IrlmpLsapID ICA_lsapID;QualityOfService ICA_QoS;};
struct $4E04F3491D6170F01FFA59C42837288E {ChunkHandle GCCI_object;WordFlags GCCI_featureMask;GenControlChildFlags GCCI_flags;};
struct $4E5E6935D01693ECFAF9ECAB065BBF18 {GrObjBaseLineAttrElement GOFLAE_base;byte GOFLAE_future[50];};
struct $4E90F90D7F1829822701CDC69E5508A0 {TextStyle FNTSC_styles;TextStyle FNTSC_indeterminates;};
enum $4F0E3F2AB14EC8561083F792AB823DAA {MGCNLT_ACTIVE_LIST = 0x0,MGCNLT_APP_STARTUP = 0x2,};
enum $4F3E01DEFE5EC36DC92AA43627E3DD00 {SCEP_IF_OK = 0x0,SCEP_IF_DRIVER_ERROR = 0x1,SCEP_IF_OPEN_ERROR = 0x2,SCEP_IF_DEVICE_NOT_FOUND = 0x3,SCEP_IF_INTERNAL_ERROR = 0x4,SCEP_IF_FILESYSTEM_FULL = 0x5,SCEP_IF_STREAM_ERROR = 0x6,SCEP_IF_CORRUPTED_DATA = 0x7,};
struct $4F961EC2BC30C6ED9920C13E6DA3D238 {FieldDataAttrs VFDA_common;FloatNum VFDA_min;FloatNum VFDA_max;};
struct $4FC2F813AD5DD2E8CBF91560C65810E5 {word SIFD_file;word SIFD_numRows;word SIFD_numCols;SpreadsheetDrawFlags SIFD_drawFlags;};
enum $50617334C99A802EF5B4D6785D74C2B2 {GT_NO_GESTURE = 0x0,GT_DELETE_SELECTION = 0x1,GT_SELECT_CHARS = 0x2,GT_V_CROSSOUT = 0x3,GT_H_CROSSOUT = 0x4,GT_BACKSPACE = 0x5,GT_CHAR = 0x6,GT_STRING_MACRO = 0x7,GT_IGNORE_GESTURE = 0x8,GT_COPY = 0x9,GT_PASTE = 0xA,GT_CUT = 0xB,GT_MODE_CHAR = 0xC,GT_REPLACE_LAST_CHAR = 0xD,};
struct $509EF7E485DA73FB4F0A3743A7847D2B {word IEEE64F_word1;word IEEE64F_word2;word IEEE64F_word3;word IEEE64F_word4;};
struct $50B0CD4088664D163EA2A7165BBA14B8 {word CSESD_location;word CSESD_status;};
enum $50B771B6C300768B58A02FD5AF92119A {BLTM_COPY = 0x0,BLTM_MOVE = 0x1,BLTM_CLEAR = 0x2,};
struct $50F93BE84B6B31D21D26730DACEA5B82 {FieldListQuery whichList;FFFieldListChangeStatus changeType;FieldListID fieldIndex;word numFields;optr databaseOptr;word nonce;Boolean disableImmediately;};
struct $525A87BBA9B61C572AAE90217E0FB1DD {char *IMEI_inputFileName;char *IMEI_outputFileName;word IMEI_inputFiletype;volatile word *IMEI_cancelOperation;word IMEI_operationMode;word IMEI_scalingMode;word IMEI_rotationAngle;word IMEI_targetSizeControl;word IMEI_Q_Value;dword IMEI_targetSizeInBytes;word IMEI_colorInformation;word IMEI_outputDimX;word IMEI_outputDimY;word IMEI_grabTopLeftX;word IMEI_grabTopLeftY;word IMEI_grabWidth;word IMEI_grabHeight;word IMEI_inputDimX;word IMEI_inputDimY;word IMEI_nComp;word IMEI_samplingFactors[3][2];};
struct $52D346F47390F49A76A9593484FED2AE {TocUpdateCategoryFlags TUCP_flags;TokenChars TUCP_tokenChars;byte TUCP_fileArrayElementSize;TocUpdateAddCallback *TUCP_addCallback;byte TUCP_pad;};
struct $52EBF8DC1D96B4CF11CC2BE030CA987F {Boolean SIQP_activityQuery;struct _PrintPortInfo *SIQP_portInfo;MemHandle SIQP_retBlock;word SIQP_retNumJobs;};
struct $531154B38AF6E41213888E867A486FC0 {VMFileHandle CRA_file;VMChain CRA_data;word CRA_extra1;word CRA_extra2;};
enum $53132F90EB77F20CC3117450DCB54102 {CTFDE_NO_ERROR = 0x0,CTFDE_ERROR = 0x1,CTFDE_FILE_OPEN = 0x2,CTFDE_FILE_READ = 0x3,CTFDE_FILE_WRITE = 0x4,CTFDE_FILE_CREATE = 0x5,CTFDE_DISK_FULL = 0x6,CTFDE_OUT_OF_MEMORY = 0x7,CTFDE_CANCELED = 0x8,CTFDE_TRANSFER_STARTING = 0x9,CTFDE_TRANSFER_CONTINUES = 0xA,CTFDE_TRANSFER_COMPLETE = 0xB,};
struct $5330A984EB190A73C8BBB2BBBD08D7F3 {word NDC_attrs;word NDC_type;FileHandle NDC_fileHandle;byte NDC_emptyExists;byte NDC_defaultExists;};
struct $5359995B306C48B6BF0841A1DA48639E {SerialPortNum SPP_portNum;SerialFormat SPP_format;SerialMode SPP_mode;SerialBaud SPP_baud;SerialFlowControl SPP_flow;SerialModem SPP_stopRem;SerialModemStatus SPP_stopLoc;};
enum $536230E93DF9B0220E2A8D90C00430A1 {STREAM_ROLES_WRITER = 0x0,STREAM_ROLES_READER = 0xFFFF,STREAM_ROLES_BOTH = 0xFFFE,};
enum $537933D0DB3C015B354BCE628C9392E0 {FDD_PRIVATE = 0xFFFE,FDD_DOCUMENT = 0xFFFF,FDD_NONE = 0x0,FDD_CREATED_TEXTS = 0x1,FDD_RECEIVED_FAXES = 0x2,FDD_RECEIVED_SM = 0x3,FDD_RECEIVED_MAIL = 0x4,FDD_MESSAGE_TEMPLATES = 0x5,FDD_BUSINESS_CARDS = 0x6,FDD_DOWNLOADED_FILES = 0x7,FDD_WWW_HOTLIST = 0x8,FDD_BROADCAST_MESSAGES = 0x9,FDD_INTERNET = 0xA,FDD_TONES = 0xB,FDD_CALENDAR_MEMOS = 0xC,FDD_CONTACT_IMAGES = 0xD,FDD_MMC = 0xE,FDD_MMC_CONTACT_IMAGES = 0xF,FDD_APP_DATA = 0x10,};
struct $539CED4101416EE9A66DA4A9F9294380 {WordAndAHalf REH_refCount;};
struct $53C250645D072197A3EE008855D51E78 {ChunkArrayHeader MFAH_CAH;char MFAH_synopsis[81];dword MFAH_size;};
enum $53C61B125AE057EE6C71A3948F168A4F {ISIT_CONNECTED = 0x1,ISIT_BLOCKED = 0x2,ISIT_OK = 0x3,ISIT_DISCONNECTED = 0x4,};
struct $53C88A31E2D065CFF794B87F253F8795 {word unused;word DWFR_frac;sdword DWFR_int;};
struct $541A4681B56D48E17105C31FFCBAD980 {GStringElement ODVLT_opcode;word ODVLT_y2;};
struct $5431D8686D934178CA1B0C85EA6135E7 {MBRepeatInterval MBRI_interval;MBRepeatDuration MBRI_duration;MBRepeatDurationData MBRI_durationData;word MBRI_numExceptions;FileDate MBRI_exceptions[];};
struct $545A6A4030C7E3037682797F0A24A811 {ScannerTokenType ST_type;ScannerTokenData ST_data;};
struct $54B0A64462BD631137BD288703C47A43 {word SIJP_jobID;MemHandle SIJP_retBlock;};
struct $54BB23DDA85F0CB688EA9380AAC80F0F {Color BC_unselectedColor1;Color BC_unselectedColor2;Color BC_selectedColor1;Color BC_selectedColor2;};
struct $54F26989A3289E02D53F519E73EBD769 {GStringElement ODBOP_opcode;word ODBOP_x;word ODBOP_y;optr ODBOP_bitmap;};
struct $55106A25D1B8485E8E16981A2EEAF26E {word SSCUMP_usedIndex;optr SSCUMP_textObject;optr SSCUMP_attrList;optr SSCUMP_baseList;optr SSCUMP_extraUI;};
struct $5537C6E6378A9BD527443DC5E22745AB {GStringElement OE_opcode;word OE_escCode;word OE_escSize;};
struct $5548A1D1FEFAA4809FADB7F6B1D5A575 {word foo;word foo2;};
struct $556B54E3E258A6155AC30FD146720C64 {FontID FE_fontID;word FE_size;TextPitch FE_pitch;PrinterSymbolSet FE_symbolSet;word FE_command;PrintTextStyle FE_styles;PrintTextStyle FE_stylesSet;};
enum $55AA0FAFD6895AE253F1B116796995E4 {OFIQNS_SYSTEM_INPUT_OBJ = 0x0,OFIQNS_INPUT_OBJ_OF_OWNING_GEODE = 0x2,OFIQNS_PROCESS_OF_OWNING_GEODE = 0x4,OFIQNS_DISPATCH = 0x6,};
struct $55F0CDFFBE14A961CF44A6C1642EF01C {MachineID RequestorMID;MachineID ResponderMID;word RequestorPID;word ResponderPID;TCHAR UserDataFile[32];word wHeaderDataLength;};
enum $563FFC33E79BD20782967DF25DDFA75D {CIFT_OK = 0x0,CIFT_INVALID_ID = 0x1,CIFT_NO_IMAGE = 0x2,};
enum $564C78589B2B06EDC17A0AADD470D4ED {PDCT_OPEN = 0x0,PDCT_CLOSE = 0x1,PDCT_DESTROY = 0x2,PDCT_RESTART = 0x3,PDCT_SHUTDOWN = 0x4,};
struct $56937A69BEC9EF05E41EE828021D980D {FloatFloatToAsciiParams FFA_params;word FFA_startNumber;word FFA_decimalPoint;word FFA_endNumber;word FFA_numChars;word FFA_startExponent;word FFA_bufSize;word FFA_saveDI;word FFA_numSign;byte FFA_startSigCount;byte FFA_sigCount;byte FFA_noMoreSigInfo;byte FFA_startDecCount;byte FFA_decCount;word FFA_decExponent;word FFA_curExponent;byte FFA_useCommas;byte FFA_charsToComma;char FFA_commaChar;char FFA_decimalChar;};
enum $569F95C749261F23B943FB98A4C269DE {DR_CTFD_GET_FILE = 0x8,DR_CTFD_SEND_FILE = 0xA,DR_CTFD_CANCEL = 0xC,};
struct $56DFDB9144291FBA2306E71D829106D6 {optr TIED_formatUI;Handle TIED_formatLibrary;};
enum $56E1EFDEEEDE42C14FC7F4BC14600B31 {HWRR_BEGIN_INTERACTION = 0x0,HWRR_END_INTERACTION = 0x1,HWRR_RESET = 0x2,HWRR_DISABLE_CHAR_RANGE = 0x3,HWRR_ENABLE_CHAR_RANGE = 0x4,HWRR_SET_CHAR_FILTER_CALLBACK = 0x5,HWRR_SET_STRING_FILTER_CALLBACK = 0x6,HWRR_ADD_POINT = 0x7,HWRR_ADD_POINTS = 0x8,HWRR_DO_GESTURE_RECOGNITION = 0x9,HWRR_DO_SINGLE_CHAR_RECOGNITION = 0xA,HWRR_DO_MULTIPLE_CHAR_RECOGNITION = 0xB,HWRR_GET_HWR_MANUF_ID = 0xC,HWRR_SET_CONTEXT = 0xD,HWRR_SET_LANGUAGE = 0xE,HWRR_GET_GESTURE_BOUNDS = 0xF,HWRR_RESET_MACRO = 0x10,HWRR_GET_CHAR_BOUNDS = 0x11,};
struct $5734C063B04D787F635C7966C2CD9C32 {word DAT_year;byte DAT_month;byte DAT_day;byte DAT_hour;byte DAT_minute;};
struct $577B1E55F56C62738A2DBDD5801EE0EC {Boolean NFWKS_needsFloatingKbd;Point NFWKS_kbdPosition;optr NFWKS_focusWindow;Boolean NFWKS_sysModal;};
struct $578AA86A164FD736A463B40188909EB0 {GeodeToken GTP_token;word GTP_unused;};
struct $57B00DD35B4FB4C3673153B359733EBD {GStringElement ONO_opcode;};
enum $58017EFC15E097F8A2A4AAE107A67AB2 {UIIL_INTRODUCTORY = 0x0,UIIL_BEGINNING = 0x1,UIIL_INTERMEDIATE = 0x2,UIIL_ADVANCED = 0x3,UIIL_GURU = 0x4,};
struct $58B9716CC5E745B38DA584E0030AF332 {VMFileHandle SCD_vmFile;word SCD_vmBlockOrMemHandle;ChunkHandle SCD_chunk;};
enum $58EF8F61FE8CAC6382F4FA2C4FF68448 {SMDRR_NO = 0x0,SMDRR_YES = 0x20,SMDRR_SHOWIMMEDIATELY = 0x40,};
struct $598C73D03A73D62C1EFE5C0BA210F3EB {CustomDialogBoxFlags SDOP_customFlags;optr SDOP_customString;optr SDOP_stringArg1;optr SDOP_stringArg2;optr SDOP_customTriggers;optr SDOP_helpContext;};
enum $59BEEE5019F35980E4F5FB617FCAD371 {CODE_PAGE_US = 0x1B5,CODE_PAGE_LATIN_1 = 0x333,CODE_PAGE_MULTILINGUAL = 0x352,CODE_PAGE_PORTUGUESE = 0x35C,CODE_PAGE_CANADIAN_FRENCH = 0x35F,CODE_PAGE_NORDIC = 0x361,CODE_PAGE_SJIS = 0x3A4,CODE_PAGE_THAI_IN_THAI_GEOS = 0x333,CODE_PAGE_REAL_LATIN_1_IN_THAI_GEOS = 0x2A7A,CODE_PAGE_NON_THAI_GEOS = 0xFFF9,};
enum $59C14898AE7A5B587F14A1C1BA665695 {FA_PHONE_APP = 0x0,FA_FAX_APP = 0x1,FA_SMS_APP = 0x2,FA_SERVICES_APP = 0x3,FA_CONTACT_APP = 0x4,FA_NOTEBOOK_APP = 0x5,FA_CALENDAR_APP = 0x6,FA_SYSTEM_APP = 0x7,FA_EXTRAS_APP = 0x8,FA_CALCULATOR_APP = 0x9,FA_CLOCK_APP = 0xA,FA_USER_DATA_APP = 0xB,FA_WWW_INSTALL_APP = 0xC,};
struct $5A055027163571AFB04DFC2D997E6E4F {WWFixed TM_e11;WWFixed TM_e12;WWFixed TM_e21;WWFixed TM_e22;DWFixed TM_e31;DWFixed TM_e32;};
struct $5A0CA7C4676CD36F97848307F1AD4FAD {LMemBlockHeader OLMBH_header;word OLMBH_inUseCount;word OLMBH_interactibleCount;optr OLMBH_output;word OLMBH_resourceSize;};
enum $5AD4E179393241D800F378B6AB37A656 {GGIT_ATTRIBUTES = 0x0,GGIT_TYPE = 0x2,GGIT_GEODE_RELEASE = 0x4,GGIT_GEODE_PROTOCOL = 0x6,GGIT_TOKEN_ID = 0x8,GGIT_PERM_NAME_AND_EXT = 0xA,GGIT_PERM_NAME_ONLY = 0xC,GGIT_GEODE_REF_COUNT = 0xE,};
enum $5B6005029F45BDECB0AA0FEDC6377FB5 {DT_COMMUNICATOR = 0x0,DT_MEMORYCARD = 0x1,};
struct $5B75F7E8CAA683E0DE8DD84B5F0A6322 {word PTND_name;};
struct $5BC2B4BCCF9F9548C25305A7CF6A9D50 {FileLongName DI_docName;FDocumentDir DI_docDir;};
struct $5BF3D744A23D4AAC4374DCA20B4626F4 {GStringElement OFBCP_opcode;word OFBCP_size;};
enum $5C1295860C50D0FFD797EFFF61F5331D {MSN_APP_LOADED = 0x0,MSN_NEW_FOCUS_APP = 0x1,MSN_NEW_IACP_BINDING = 0x2,MSN_REMOVE_IACP_BINDING = 0x3,};
struct $5C42C64AB448A297FA8E0C5162CF47A8 {GStringElement OSCLS_opcode;word OSCLS_index;word OSCLS_count;};
struct $5C67490EC1A462D86813EA769412D58E {RefElementHeader CA_refCount;AreaInfo CA_textAttrs;AreaInfo CA_bkgrndAttrs;FontID CA_font;word CA_pointsize;byte CA_style;CellBorderInfo CA_border;AreaInfo CA_borderAttrs;CellInfo CA_info;word CA_format;BBFixed CA_trackKern;byte CA_fontWeight;byte CA_fontWidth;byte CA_reserved[9];};
struct $5CC96E1EEC8AB240FE7D3AE8F36C06F7 {MailboxMessage MRTMA_message;MailboxStorage MRTMA_bodyStorage;MailboxDataFormat MRTMA_bodyFormat;const void *MRTMA_bodyRef;word MRTMA_bodyRefLen;dword MRTMA_transData;MailboxMessageFlags MRTMA_flags;const char *MRTMA_summary;GeodeToken MRTMA_destApp;FileDateAndTime MRTMA_startBound;FileDateAndTime MRTMA_endBound;};
struct $5CF84CD3EB548B00D711A5F7EFF318EF {SuperscriptPosition position;SuperscriptSize size;};
struct $5D1923BB0C3B212A581FA14CAFF8D653 {wchar frontSingle;wchar endSingle;wchar frontDouble;wchar endDouble;};
enum $5D3FB63EE043026E94D58F33A227FC46 {MSCR_nominal = 0x0,MSCR_messageWaiting = 0x1,};
enum $5D8844FD0E3D1F87D7A2926C70C58B55 {ERROR_SMSLIB_SSI_MESSAGE_TEXT_IS_NULLCHUNK = 0x0,ERROR_SMSLIB_SSI_MESSAGE_TEXT_PLUS_GEODETOKEN_TOO_LONG = 0x1,ERROR_SMSLIB_SSI_SUMMARY_TEXT_IS_NULLCHUNK = 0x2,ERROR_SMSLIB_SSI_SUMMARY_TEXT_TOO_LONG = 0x3,ERROR_SMSLIB_SSI_RECIPIENT_LIST_IS_NULLOPTR = 0x4,ERROR_SMSLIB_END_SEND_DATE_BEFORE_START_SEND_DATE = 0x5,ERROR_SMSLIB_DESTINATION_GEODE_SPECIFIED_BUT_CONVERSION_ISNT_SMMC_NORMAL = 0x6,ERROR_SMSLIB_SMS_SCNUMBER_NOT_FOUND_IN_INI_FILE = 0x7,};
struct $5DD3EDB207D9B1B93D0AD839AE7033BF {dword RCD_contactID;NameOrNumber RCD_number;};
enum $5DD5D18F25690EF7D18E10924A9E5B71 {CMST_FPTR = 0x1,CMST_OPTR = 0x2,CMST_HPTR = 0x3,CMST_LPTR = 0x4,CMST_CMT = 0x5,CMST_CMB = 0x6,CMST_KEEP = 0x7,};
struct $5DE8741EC4EEFB406C028646E83F931D {optr SDRTE_moniker;InteractionCommand SDRTE_responseValue;};
struct $5E4412151B7825395A9F2C175D37ABF1 {optr FTVMC_OD;MetaAlterFTVMCExclFlags FTVMC_flags;};
struct $5EDC5E64740AD6D2FDF47D977D0ACF69 {GStringElement ODRP_opcode;};
struct $5F23BCE27B660F3F79234039E18D044A {WWFixed WWFC_y;WWFixed WWFC_x;};
enum $5F243C82FE45840C606DF869E3A8D891 {PCPT_PAGE = 0x0,PCPT_PERCENT = 0x2,PCPT_TEXT = 0x4,};
struct $5F469E407E903D0B036CECC5551C42E9 {word foo;word foo2;word foo3;};
struct $5F6890D8BAF8BDD4C9589A67392156B9 {Point SEIP_endPoint;Point SEIP_adjacentPoint;};
struct $5FCA40BD09AED4281191CED106431ECD {word TAPRA_linkSize;byte TAPRA_linkType;word TAPRA_accPntID;byte TAPRA_ipAddr[4];};
struct $5FEA09CFD35C8960D2C4A6FEC46015E2 {GStringElement ODE_opcode;word ODE_x1;word ODE_y1;word ODE_x2;word ODE_y2;};
enum $60108CF06843D5A22A8502A28473CEFC {IE_SUCCESS = 0x0,IE_LSAP_SEL_IN_USE = 0x2,IE_NO_FREE_LSAP_SEL = 0x4,IE_LSAP_DISCONNECTED = 0x6,IE_UNABLE_TO_LOAD_IRLAP_DRIVER = 0x8,IE_ALREADY_CONNECTED = 0xA,IE_INCOMING_CONNECTION = 0xC,IE_RESPONSE_WITHOUT_INDICATION = 0xE,IE_LSAP_NOT_DISCONNECTED = 0x10,IE_IAS_CONNECTED_TO_ANOTHER_ADDRESS = 0x12,IE_LSAP_NOT_CONNECTED_TO_IAS = 0x14,IE_DISCONNECT_INDICATION = 0x16,IE_TTP_TX_QUEUE_FULL = 0x18,};
struct $60F53518EEB71FC9970F1B815F2833F4 {ClassStruct *GTP_class;optr GTP_target;};
struct $613BF5625BB2FC2DCB692B17168ED46B {VisTextParaAttr VTMPA_paraAttr;Tab VTMPA_tabs[25];};
struct $613FBF1FBC447929B2B5171840A71F00 {ObjRelocationType OR_type;word OR_offset;};
struct $615A033884F22D457EA8447BD310C0CD {GStringElement OSCTP_opcode;GraphicPattern OSCTP_pattern;word OSCTP_size;};
struct $618C2C8F3AADE31875E6C3FE5B7D661B {word TICASID_pad;ClassStruct *TICASID_class;word TICASID_specInitData;};
struct $619D84A0371CF215C8E7FD5384262353 {void *SSPP_points;word SSPP_numPoints;SplineSetPointFlags SSPP_flags;};
union $61C7A26DEDBBB5A4B354A44DCB5B6089 {MSCPageRangeData MSCOD_pageRange;};
enum $621BFAEEC8642981E46383FA80AD7C6D {GAGCNLT_SELF_LOAD_OPTIONS = 0x6800,GAGCNLT_GEN_CONTROL_NOTIFY_STATUS_CHANGE = 0x6802,GAGCNLT_APP_TARGET_NOTIFY_SELECT_STATE_CHANGE = 0x6804,GAGCNLT_EDIT_CONTROL_NOTIFY_UNDO_STATE_CHANGE = 0x6806,GAGCNLT_APP_TARGET_NOTIFY_TEXT_CHAR_ATTR_CHANGE = 0x6808,GAGCNLT_APP_TARGET_NOTIFY_TEXT_PARA_ATTR_CHANGE = 0x680A,GAGCNLT_APP_TARGET_NOTIFY_TEXT_TYPE_CHANGE = 0x680C,GAGCNLT_APP_TARGET_NOTIFY_TEXT_SELECTION_CHANGE = 0x680E,GAGCNLT_APP_TARGET_NOTIFY_TEXT_COUNT_CHANGE = 0x6810,GAGCNLT_APP_TARGET_NOTIFY_STYLE_TEXT_CHANGE = 0x6812,GAGCNLT_APP_TARGET_NOTIFY_STYLE_SHEET_TEXT_CHANGE = 0x6814,GAGCNLT_APP_TARGET_NOTIFY_TEXT_STYLE_CHANGE = 0x6816,GAGCNLT_APP_TARGET_NOTIFY_FONT_CHANGE = 0x6818,GAGCNLT_APP_TARGET_NOTIFY_POINT_SIZE_CHANGE = 0x681A,GAGCNLT_APP_TARGET_NOTIFY_FONT_ATTR_CHANGE = 0x681C,GAGCNLT_APP_TARGET_NOTIFY_JUSTIFICATION_CHANGE = 0x681E,GAGCNLT_APP_TARGET_NOTIFY_TEXT_FG_COLOR_CHANGE = 0x6820,GAGCNLT_APP_TARGET_NOTIFY_TEXT_BG_COLOR_CHANGE = 0x6822,GAGCNLT_APP_TARGET_NOTIFY_PARA_COLOR_CHANGE = 0x6824,GAGCNLT_APP_TARGET_NOTIFY_BORDER_COLOR_CHANGE = 0x6826,GAGCNLT_APP_TARGET_NOTIFY_SEARCH_SPELL_CHANGE = 0x6828,GAGCNLT_APP_TARGET_NOTIFY_SEARCH_REPLACE_CHANGE = 0x682A,GAGCNLT_APP_TARGET_NOTIFY_CHART_TYPE_CHANGE = 0x682C,GAGCNLT_APP_TARGET_NOTIFY_CHART_GROUP_FLAGS = 0x682E,GAGCNLT_APP_TARGET_NOTIFY_CHART_AXIS_ATTRIBUTES = 0x6830,GAGCNLT_APP_TARGET_NOTIFY_CHART_MARKER_SHAPE = 0x6832,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_CURRENT_TOOL_CHANGE = 0x6834,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_BODY_SELECTION_STATE_CHANGE = 0x6836,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_AREA_ATTR_CHANGE = 0x6838,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_LINE_ATTR_CHANGE = 0x683A,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_TEXT_ATTR_CHANGE = 0x683C,GAGCNLT_APP_TARGET_NOTIFY_STYLE_GROBJ_CHANGE = 0x683E,GAGCNLT_APP_TARGET_NOTIFY_STYLE_SHEET_GROBJ_CHANGE = 0x6840,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_BODY_INSTRUCTION_FLAGS_CHANGE = 0x6842,GAGCNLT_APP_TARGET_NOTIFY_GROBJ_GRADIENT_ATTR_CHANGE = 0x6844,GAGCNLT_APP_TARGET_NOTIFY_RULER_TYPE_CHANGE = 0x6846,GAGCNLT_APP_TARGET_NOTIFY_RULER_GRID_CHANGE = 0x6848,GAGCNLT_TEXT_RULER_OBJECTS = 0x684A,GAGCNLT_APP_TARGET_NOTIFY_RULER_GUIDE_CHANGE = 0x684C,GAGCNLT_APP_TARGET_NOTIFY_BITMAP_CURRENT_TOOL_CHANGE = 0x684E,GAGCNLT_APP_TARGET_NOTIFY_BITMAP_CURRENT_FORMAT_CHANGE = 0x6850,GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_FIELD_PROPERTIES_STATUS_CHANGE = 0x6852,GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_FIELD_LIST_CHANGE = 0x6854,GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_RCP_STATUS_CHANGE = 0x6856,GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_FIELD_APPEARANCE_CHANGE = 0x6858,GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_DUMMY_CHANGE_2 = 0x685A,GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_DUMMY_CHANGE_3 = 0x685C,GAGCNLT_APP_NOTIFY_DOC_SIZE_CHANGE = 0x685E,GAGCNLT_APP_NOTIFY_PAPER_SIZE_CHANGE = 0x6860,GAGCNLT_APP_TARGET_NOTIFY_VIEW_STATE_CHANGE = 0x6862,GAGCNLT_CONTROLLED_GEN_VIEW_OBJECTS = 0x6864,GAGCNLT_APP_TARGET_NOTIFY_INK_STATE_CHANGE = 0x6866,GAGCNLT_CONTROLLED_INK_OBJECTS = 0x6868,GAGCNLT_APP_TARGET_NOTIFY_PAGE_STATE_CHANGE = 0x686A,GAGCNLT_APP_TARGET_NOTIFY_DOCUMENT_CHANGE = 0x686C,GAGCNLT_APP_TARGET_NOTIFY_DISPLAY_CHANGE = 0x686E,GAGCNLT_APP_TARGET_NOTIFY_DISPLAY_LIST_CHANGE = 0x6870,GAGCNLT_APP_TARGET_NOTIFY_SPLINE_MARKER_SHAPE = 0x6872,GAGCNLT_APP_TARGET_NOTIFY_SPLINE_POINT = 0x6874,GAGCNLT_APP_TARGET_NOTIFY_SPLINE_POLYLINE = 0x6876,GAGCNLT_APP_TARGET_NOTIFY_SPLINE_SMOOTHNESS = 0x6878,GAGCNLT_APP_TARGET_NOTIFY_SPLINE_OPEN_CLOSE_CHANGE = 0x687A,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_ACTIVE_CELL_CHANGE = 0x687C,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_EDIT_BAR_CHANGE = 0x687E,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_SELECTION_CHANGE = 0x6880,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_CELL_WIDTH_HEIGHT_CHANGE = 0x6882,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_DOC_ATTR_CHANGE = 0x6884,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_CELL_ATTR_CHANGE = 0x6886,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_CELL_NOTES_CHANGE = 0x6888,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_DATA_RANGE_CHANGE = 0x688A,GAGCNLT_APP_TARGET_NOTIFY_TEXT_NAME_CHANGE = 0x688C,GAGCNLT_FLOAT_FORMAT_CHANGE = 0x688E,GAGCNLT_DISPLAY_OBJECTS_WITH_RULERS = 0x6890,GAGCNLT_APP_TARGET_NOTIFY_APP_CHANGE = 0x6892,GAGCNLT_APP_TARGET_NOTIFY_LIBRARY_CHANGE = 0x6894,GAGCNLT_WINDOWS = 0x6896,GAGCNLT_STARTUP_LOAD_OPTIONS = 0x6898,GAGCNLT_APP_TARGET_NOTIFY_CARD_BACK_CHANGE = 0x689A,GAGCNLT_NOTIFY_FOCUS_TEXT_OBJECT = 0x689C,GAGCNLT_NOTIFY_TEXT_CONTEXT = 0x689E,GAGCNLT_NOTIFY_HELP_CONTEXT_CHANGE = 0x68A0,GAGCNLT_FLOAT_FORMAT_INIT = 0x68A2,GAGCNLT_ALWAYS_INTERACTABLE_WINDOWS = 0x68A4,GAGCNLT_USER_DO_DIALOGS = 0x68A6,GAGCNLT_MODAL_WIN_CHANGE = 0x68A8,GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_NAME_CHANGE = 0x68AA,GAGCNLT_CONTROLLERS_WITHIN_USER_DO_DIALOGS = 0x68AC,GAGCNLT_FOCUS_WINDOW_KBD_STATUS = 0x68AE,GAGCNLT_APP_TARGET_NOTIFY_PAGE_INFO_STATE_CHANGE = 0x68B0,GAGCNLT_APP_TARGET_NOTIFY_CURSOR_POSITION_CHANGE = 0x68B2,GAGCNLT_MAILBOX_SEND_CONTROL = 0x68B4,GAGCNLT_APP_TARGET_NOTIFY_PAGE_NAME_CHANGE = 0x68B6,GAGCNLT_GAME_STATUS_CHANGE = 0x68B8,GAGCNLT_APP_TARGET_NOTIFY_TEXT_HYPERLINKABILITY_CHANGE = 0x68BA,GAGCNLT_NOTIFY_CONTENT_CONTEXT_CHANGE = 0x68BC,GAGCNLT_NOTIFY_CONTENT_BOOK_CHANGE = 0x68BE,GAGCNLT_APP_TARGET_NOTIFY_HYPERLINK_STATUS_CHANGE = 0x68C0,GAGCNLT_NOTIFY_NAVIGATE_ENTRY_CHANGE = 0x68C2,GAGCNLT_FOAM_NOTIFICATIONS = 0x68C4,GAGCNLT_FULL_SCREEN_EXCL_CHANGE = 0x68C6,GAGCNLT_VIEWER_NOTIFICATIONS = 0x68C8,GAGCNLT_DATASTORE_CHANGE = 0x68CA,};
struct $623F674037DD2BFF825E596B82E5279A {GStringElement OSPE_opcode;word OSPE_entry;RGBValue OSPE_color;};
struct $6252A474C2B1D6A6E3EF23734609E957 {PointDWFixed GORSMD_point;GrObjHandleSpecification GORSMD_anchor;GrObjHandleSpecification GORSMD_grabbed;GrObjFunctionsActive GORSMD_goFA;GStateHandle GORSMD_gstate;};
struct $6275D3E5FD1A38F422612CE3BD6EE4C8 {word FDS_leftMargin;word FDS_topMargin;word FDS_rightMargin;word FDS_bottomMargin;};
enum $627908333F158D43589E55DF16392725 {SC_WILDCARD = 0x0,SC_WILDCHAR = 0x2,SC_GRAPHIC = 0x4,SC_CR = 0x6,SC_PAGE_BREAK = 0x8,SC_TAB = 0xA,};
enum $62BEE5CAD5A9E5876ED46BA0CE1CE619 {IFE_DATE_TIME_FORMAT = 0x0,IFE_NUMBER_FORMAT = 0x1,IFE_SYSTEM_SOUND = 0x2,IFE_INK_THICKNESS = 0x3,IFE_CURRENCY_FORMAT = 0x4,IFE_PUNCTUATION = 0x5,IFE_OWNER_INFO = 0x6,};
enum $6307CB310C754CD55CF54B6940ED749C {NOKIA_GCNSLT_WWW_NOTIFICATIONS = 0x0,NOKIA_GCNSLT_OBEX_RECEIVE_STATUS = 0x2,};
struct $639A8B5CFB03827A5DCDAAE3A239D66D {CellRange SRP_selection;CellReference SRP_active;};
struct $63A683F5F047A64F3E4BD949E3E99A6A {optr TI_object;optr TI_name;};
struct $63AFC2AAB138900738257A0C503BB70B {word UDLI_numEntries;word UDLI_totalSize;word UDLI_lastFoundIndex;word UDLI_lastFoundPtr;};
enum $63B0D685B3B20F1E187B8A98187C666A {SMCM_OFF = 0x0,SMCM_ON = 0x1,};
struct $63CE67E2A835CC87BD3FB46803153A53 {OperatorType PTOD_operatorID;};
enum $641AB21D504E8A8B7B3E15089835983E {PT_PAPER = 0x0,PT_ENVELOPE = 0x2,PT_LABEL = 0x4,PT_POSTCARD = 0x6,};
struct $641E32A1C34BC919510B83D31928D586 {TCHAR SSFPRP_text[16];CellRange SSFPRP_range;};
struct $648DAA364A048D376F56F68DAED3F216 {MachineID RequestorMID;MachineID ResponderMID;word RequestorPID;word ResponderPID;word CmdID;TCHAR UserDataFile[32];};
struct $6499C97167BD5D7255AE9FC962E42982 {unsigned int MT_id;ManufacturerID MT_manuf;};
struct $64C3F97555F8571ECA843F0E481B23C6 {ChunkHandle PTEE_item;ChunkHandle PTEE_driver;word PTEE_info;};
struct $64D7FE31C69512F443405804EF01389C {word VTGRS_length;word VTGRS_handle;word VTGRS_dx;DBGroup VTGRS_group;};
enum $650A659A1C931CAD8E1FEB17E9C8DD01 {FMT_DONE = 0x0,FMT_READY = 0x1,FMT_RUNNING = 0x2,FMT_DRIVE_NOT_READY = 0x3,FMT_ERR_WRITING_BOOT = 0x4,FMT_ERR_WRITING_ROOT_DIR = 0x5,FMT_ERR_WRITING_FAT = 0x6,FMT_ABORTED = 0x7,FMT_SET_VOLUME_NAME_ERR = 0x8,FMT_CANNOT_FORMAT_FIXED_DISKS_IN_CUR_RELEASE = 0x9,FMT_BAD_PARTITION_TABLE = 0xA,FMT_ERR_READING_PARTITION_TABLE = 0xB,FMT_ERR_NO_PARTITION_FOUND = 0xC,FMT_ERR_MULTIPLE_PRIMARY_PARTITIONS = 0xD,FMT_ERR_NO_EXTENDED_PARTITION_FOUND = 0xE,FMT_ERR_CANNOT_ALLOC_SECTOR_BUFFER = 0xF,FMT_ERR_DISK_IS_IN_USE = 0x10,FMT_ERR_WRITE_PROTECTED = 0x11,FMT_ERR_DRIVE_CANNOT_SUPPORT_GIVEN_FORMAT = 0x12,FMT_ERR_INVALID_DRIVE_SPECIFIED = 0x13,FMT_ERR_DRIVE_CANNOT_BE_FORMATTED = 0x14,FMT_ERR_DISK_UNAVAILABLE = 0x15,};
enum $652408E18CC072C5C9713F4E372F8F5A {KEYMAP_US_EXTD = 0x1,KEYMAP_US = 0x2,KEYMAP_UK_EXTD = 0x3,KEYMAP_UK = 0x4,KEYMAP_GERMANY_EXTD = 0x5,KEYMAP_GERMANY = 0x6,KEYMAP_SPAIN_EXTD = 0x7,KEYMAP_SPAIN = 0x8,KEYMAP_DENMARK_EXTD = 0x9,KEYMAP_DENMARK = 0xA,KEYMAP_BELGIUM_EXTD = 0xB,KEYMAP_BELGIUM = 0xC,KEYMAP_CANADA_EXTD = 0xD,KEYMAP_CANADA = 0xE,KEYMAP_ITALY_EXTD = 0xF,KEYMAP_ITALY = 0x10,KEYMAP_LATIN_AMERICA_EXTD = 0x11,KEYMAP_LATIN_AMERICA = 0x12,KEYMAP_NETHERLANDS = 0x13,KEYMAP_NETHERLANDS_EXTD = 0x14,KEYMAP_NORWAY_EXTD = 0x15,KEYMAP_NORWAY = 0x16,KEYMAP_PORTUGAL_EXTD = 0x17,KEYMAP_PORTUGAL = 0x18,KEYMAP_SWEDEN_EXTD = 0x19,KEYMAP_SWEDEN = 0x1A,KEYMAP_SWISS_FRENCH_EXTD = 0x1B,KEYMAP_SWISS_FRENCH = 0x1C,KEYMAP_SWISS_GERMAN_EXTD = 0x1D,KEYMAP_SWISS_GERMAN = 0x1E,KEYMAP_FRANCE_EXTD = 0x1F,KEYMAP_FRANCE = 0x20,};
struct $659E761574B82358398ABC3D276C07AD {Rectangle BGS_bounds;byte BGS_gstring;};
struct $65B4FB9FB5EA3C4757FB77D7DB52040B {GrObjSelectionState GONSSC_selectionState;GrObjSelectionStateDiffs GONSSC_selectionStateDiffs;GrObjAttrFlags GONSSC_grObjFlagsDiffs;GrObjLocks GONSSC_locksDiffs;ArcCloseType GONSSC_arcCloseType;WWFixed GONSSC_arcStartAngle;WWFixed GONSSC_arcEndAngle;};
struct $65CDF292DBE7C033FC03FA365CEC2FDD {word ax_value;word bp_value;word cx_value;word dx_value;};
struct $6646804B5C724D490882CC0E8853668B {ChunkHandle MSCAAT_addresses;MailboxTransportAndOption MSCAAT_transport;};
enum $665976B34275D482C2DA2F35CBE71BA3 {DR_PRINT_DRIVER_INFO = 0xC,DR_PRINT_DEVICE_INFO = 0xE,DR_PRINT_SET_MODE = 0x10,DR_PRINT_SET_STREAM = 0x12,DR_PRINT_HOME_CURSOR = 0x14,DR_PRINT_GET_CURSOR = 0x16,DR_PRINT_SET_CURSOR = 0x18,DR_PRINT_GET_LINE_SPACING = 0x1A,DR_PRINT_SET_LINE_SPACING = 0x1C,DR_PRINT_SET_FONT = 0x1E,DR_PRINT_GET_COLOR_FORMAT = 0x20,DR_PRINT_SET_COLOR = 0x22,DR_PRINT_GET_STYLES = 0x24,DR_PRINT_SET_STYLES = 0x26,DR_PRINT_TEST_STYLES = 0x28,DR_PRINT_TEXT = 0x2A,DR_PRINT_RAW = 0x2C,DR_PRINT_STYLE_RUN = 0x2E,DR_PRINT_SWATH = 0x30,DR_PRINT_START_PAGE = 0x32,DR_PRINT_END_PAGE = 0x34,DR_PRINT_GET_PRINT_AREA = 0x36,DR_PRINT_GET_MARGINS = 0x38,DR_PRINT_GET_PAPER_PATH = 0x3A,DR_PRINT_SET_PAPER_PATH = 0x3C,DR_PRINT_START_JOB = 0x3E,DR_PRINT_END_JOB = 0x40,DR_PRINT_GET_MAIN_UI = 0x42,DR_PRINT_GET_OPTIONS_UI = 0x44,DR_PRINT_EVAL_UI = 0x46,DR_PRINT_STUFF_UI = 0x48,};
struct $667D623AD008361A8A85E78ED40AC6F3 {GrObjBaseAreaAttrElement GOGAAE_base;GrObjGradientType GOGAAE_type;byte GOGAAE_endR;byte GOGAAE_endG;byte GOGAAE_endB;word GOGAAE_numIntervals;word GOGAAE_reserved;};
struct $6684F1DB7FF9EABAE4D90D54147E985F {HWRMode HWRND_mode;};
struct $668A5D83D189E9B87FE4CA9BD0335BB3 {GenFileSelectorFilterRoutine *filterRoutine;const FileExtAttrDesc *filterAttrs;};
struct $668F509AE14F9AAF7B232DA0FF76627C {word PCPR_lastPage;word PCPR_firstPage;};
enum $66B2988911F7460091C46A06CF8D5416 {GDMT_LEVEL_0 = 0x0,GDMT_LEVEL_1 = 0x1,GDMT_LEVEL_2 = 0x2,GDMT_LEVEL_3 = 0x3,GDMT_HELP = 0x4,GDMT_HELP_PRIMARY = 0x5,};
struct $672836A1FB7D55867CA2EE5B62749BC8 {RefElementHeader SSEH_meta;word SSEH_style;};
struct $673E32E02F42BFC8E60160C033E7A5FF {wchar VTCFD_startOfRange;wchar VTCFD_endOfRange;};
enum $679AF5CC6149ACE7C4F062204D178770 {CST_SUCCESS = 0x0,};
struct $6820E0CC465A85B55D3C06FC3353EDFE {GStringElement ODTCP_opcode;word ODTCP_len;};
enum $68221AC6186A965E2AF123AEDDB9FBE4 {STREAM_EVENT_ERROR = 0x0,STREAM_EVENT_DATA = 0x1,SERIAL_EVENT_MODEM = 0x2,};
struct $682B632B710E08FB43A0B63C751A88F6 {word MBII_count;};
struct $68349E9C1D76F95407AB0400B1CD6F5D {word PSI_width;word PSI_height;PageLayout PSI_defaultLayout;};
struct $68C14E07C3311B5D46BFB92D0E8042E0 {byte VMC_width;const void *VMC_ptr;Justification VMC_just;TextStyle VMC_style;ColumnBorder VMC_border;};
struct $68EA25A7B2FA5AA037F002741DD37A3A {dword PZCMD_width;dword PZCMD_height;};
struct $692F8AD653ECEB8B16FDAF9022DC2B8B {ConnectTransferDriverError CTFSP_error;ConnectTransferDriverStatusType CTFSP_type;dword CTFSP_data;};
enum $696725A5B536AC719681B4D1B7E39792 {NMDFID_INVALID = 0x0,NMDFID_WYSWYG_FOAM_FILE = 0x1,};
struct $69B62588CC25CB7767350DB9F5F34ADF {double x;double y;};
struct $69F09F31B2CD0EFE47D0EB96C0853C80 {MemHandle mh;word size;word userId;};
struct $6A3AAC356466983CD0CCDDB0BC6EE98F {LMemBlockHeader TS_header;TextAttrInfo TS_testAttribute;word TS_textOffset;word TS_gsBuffer;word TS_styleRunInfo;word TS_textAttributeInfo;};
enum $6A9A78C9A840AF3CA4C5D951A2D6BBEC {PIDT_KEYBOARD = 0x0,PIDT_CHAR_TABLE = 0x1,PIDT_CHAR_TABLE_SYMBOLS = 0x2,PIDT_CHAR_TABLE_INTERNATIONAL = 0x3,PIDT_CHAR_TABLE_MATH = 0x4,PIDT_CHAR_TABLE_CUSTOM = 0x5,PIDT_HWR_ENTRY_AREA = 0x6,PIDT_BIG_KEYS = 0x7,PIDT_NUMBERS = 0x8,PIDT_PUNCTUATION = 0x9,};
enum $6AB7212DDAB6BEAA997F6210640B6D76 {VTCT_NORMAL_CURSOR = 0x0,VTCT_CAPLOCK_CURSOR = 0x2,VTCT_NUMLOCK_CURSOR = 0x4,VTCT_EQNLOCK_CURSOR = 0x6,};
struct $6AB9F634AF07840707DE942A9611E477 {word DIS_blockSize;sdword DIS_freeSpace;sdword DIS_totalSpace;VolumeName DIS_name;};
enum $6AE0A459E61341E98CA11D4260B51E44 {VCC_CONTINUE = 0x0,VCC_DONT_CONTINUE = 0x1,};
struct $6B11C0F92D2B2831BA102282120B4F8C {FileLongName FOCRCS_documentName;FileLongName FOCRCS_newName;FDocumentDir FOCRCS_documentDir;};
enum $6B175670219C3A85EF367898BCFB0158 {PSS_ASCII7 = 0x0,PSS_IBM437 = 0x2,PSS_IBM850 = 0x4,PSS_IBM860 = 0x6,PSS_IBM863 = 0x8,PSS_IBM865 = 0xA,PSS_ROMAN8 = 0xC,PSS_WINDOWS = 0xE,PSS_VENTURA = 0x10,PSS_LATIN1 = 0x12,PSS_PCGEOS = 0x14,};
struct $6B52212B7261CD816C4805B144D2D749 {byte originalSize;byte acceptedSizes;dword acceptedFileSize;};
struct $6B9A07D9AA95F18175F55AF77F419E9C {VarDataFlags VOR_type;word VOR_offset;};
struct $6BC380759A9ADA7AF6ECEBCFD068E8F0 {word MS_id;ManufacturerID MS_manuf;};
union $6BFC489AE2554C079A9DB778F0EFB97E {MinUSMeasure MIT_US;MinMetricMeasure MIT_METRIC;MinPointMeasure MIT_POINT;MinPicaMeasure MIT_PICA;};
struct $6C21579C3B7FAD896D887F6360469E37 {ThreadHandle MPBSA_thread;word MPBSA_gen;byte MPBSA_showProgress;};
enum $6D58E2A7C9FFD0ABCA06A35E2AA39D25 {MRC_NOT_SUPPORTED = 0x1,MRC_DRIVER_IN_USE = 0x2,MRC_TIMEOUT = 0x3,MRC_UNKNOWN_RESPONSE = 0x4,MRC_OK = 0x5,MRC_ERROR = 0x6,MRC_BUSY = 0x7,MRC_NO_DIALTONE = 0x8,MRC_NO_ANSWER = 0x9,MRC_NO_CARRIER = 0xA,MRC_CONNECT = 0xB,MRC_CONNECT_1200 = 0xC,MRC_CONNECT_2400 = 0xD,MRC_CONNECT_4800 = 0xE,MRC_CONNECT_9600 = 0xF,MRC_BLACKLISTED = 0x10,MRC_DELAYED = 0x11,};
struct $6D5DA78DB33BA6EBB61C5632875F44CC {Message GAP_message;word GAP_unused;optr GAP_output;};
struct $6D826F798463B7CC1503F6E92342E25C {GStringElement OSTS_opcode;TextStyle OSTS_set;TextStyle OSTS_reset;};
struct $6E09700C3718F41EFE2C5E3FD8879E09 {char SFN_base[5];char SFN_num[3];char SFN_ext[5];};
struct $6E2AD000FFD349326982377C745E0A4F {VMBlockHandle VMBlock;ChunkHandle chunk;optr labelOptr;};
enum $6E3AB186370C296995C16D3858DB93EC {SEFC_COPY = 0x0,SEFC_EDIT = 0x1,SEFC_CREATE_NEW = 0x2,SEFC_CLOSE_VIEWER = 0x3,SEFC_CANCEL = 0x4,};
struct $6E6C7024A1199D0A803A3ED0855F83EA {optr GTOCP_callbackObject;Message GTOCP_callbackMessage;word GTOCP_accpnt;word GTOCP_portNum;TCHAR *GTOCP_ipAddr;TCHAR *GTOCP_connectionName;};
struct $6E83E2D4B9C343E84B01CEA202A58722 {byte WBF_frac;sword WBF_int;};
enum $6E8BC7FDB541C5AB02DA93DFCDA51EF6 {GE_NO_EVENT = 0x0,GE_END_OF_SONG = 0x2,GE_SET_PRIORITY = 0x4,GE_SET_TEMPO = 0x6,GE_SEND_NOTIFICATION = 0x8,GE_V_SEMAPHORE = 0xA,};
struct $6EA03405F852A2326C5485403323AAA3 {word IIOSH_size;};
struct $6EFEC483D53FAAB0C41A01936A425E41 {word SD3RTT_numTriggers;StandardDialogResponseTriggerEntry SD3RTT_trigger1;StandardDialogResponseTriggerEntry SD3RTT_trigger2;StandardDialogResponseTriggerEntry SD3RTT_trigger3;};
enum $6F17267BF24DB2925B9802482B1CA86C {SMMC_NORMAL = 0x0,SMMC_FAX_GROUP_3 = 0x22,SMMC_FAX_GROUP_4 = 0x23,SMMC_VOICE = 0x24,SMMC_ERMES = 0x25,SMMC_PAGING = 0x26,SMMC_EMAIL = 0x2D,SMMC_X400 = 0x31,};
struct $6F2FD831DB37488B939B117E97176DF7 {GStringElement OSCTM_opcode;DrawMask OSCTM_mask;};
struct $6F5AFB05A87D990FF2C6AB01E96FFB25 {FileAttrs GFSFA_match;FileAttrs GFSFA_mismatch;};
struct $6F7C35CDEC0D1E39F91A06BAE862F162 {GenFileSelectorScalableUICommand GFSSUIE_command;WordFlags GFSSUIE_appFeature;FileSelectorAttrs GFSSUIE_fsFeatures;};
struct $6FF5F8D6FD7186E8270439CC293C91D6 {LMemBlockHeader GCNLBH_lmemHeader;ChunkHandle GCNLBH_listOfLists;};
enum $70DA3748760AEBB3D3CF6C39FC632258 {GOANT_NULL = 0x0,GOANT_SELECTED = 0x1,GOANT_UNSELECTED = 0x2,GOANT_CREATED = 0x3,GOANT_MOVED = 0x4,GOANT_RESIZED = 0x5,GOANT_ROTATED = 0x6,GOANT_SKEWED = 0x7,GOANT_TRANSFORMED = 0x8,GOANT_ATTRED = 0x9,GOANT_SPEC_MODIFIED = 0xA,GOANT_DELETED = 0xB,GOANT_PASTED = 0xC,GOANT_WRAP_CHANGED = 0xD,};
struct $70DC1733467818210C7AFD76D55EC234 {word LWAHD_maxLineWidth;byte LWAHD_handleWidth;byte LWAHD_handleHeight;};
struct $7120AB05025101D512ECD9F7028B0824 {byte colNum;TCHAR fieldName[41];FieldDataType dataType;byte computedDefaultTokenStream[511];word numTokensInTokenStream;word maxNumCharsAllowedInThisTextField;FloatNum minValue;FloatNum maxValue;TCHAR notes[255];};
struct $7159B313E5B7F685E4B00230AB0D3D74 {optr TPACD_addrControl;PrinterDriverType TPACD_driverType;};
enum $718BBCEF78DB13D2175E4FFD00EF4DEC {DRIVER_TYPE_VIDEO = 0x1,DRIVER_TYPE_INPUT = 0x2,DRIVER_TYPE_MASS_STORAGE = 0x3,DRIVER_TYPE_STREAM = 0x4,DRIVER_TYPE_FONT = 0x5,DRIVER_TYPE_OUTPUT = 0x6,DRIVER_TYPE_LOCALIZATION = 0x7,DRIVER_TYPE_FILE_SYSTEM = 0x8,DRIVER_TYPE_PRINTER = 0x9,DRIVER_TYPE_SWAP = 0xA,DRIVER_TYPE_POWER_MANAGEMENT = 0xB,DRIVER_TYPE_TASK_SWITCH = 0xC,DRIVER_TYPE_NETWORK = 0xD,DRIVER_TYPE_SOUND = 0xE,DRIVER_TYPE_PAGER = 0xF,DRIVER_TYPE_PCMCIA = 0x10,DRIVER_TYPE_FEP = 0x11,DRIVER_TYPE_MAILBOX_DATA = 0x12,DRIVER_TYPE_MAILBOX_TRANSPORT = 0x13,DRIVER_TYPE_SOCKET = 0x14,DRIVER_TYPE_SCAN = 0x15,DRIVER_TYPE_OTHER_PROCESSOR = 0x16,DRIVER_TYPE_MAILBOX_RECEIVE = 0x17,DRIVER_TYPE_MODEM = 0x18,DRIVER_TYPE_CONNECT_TRANSLATE = 0x19,DRIVER_TYPE_CONNECT_TRANSFER = 0x1A,};
struct $71EE482EBAB891DAD7DE9B449B584093 {word HE_type;word HE_size;};
struct $726FBB406BB240C092E300951627E9BB {LinkType LP_type;};
enum $7278AABDD0E168673A3FECEE013DB48D {VMRT_UNRELOCATE_BEFORE_WRITE = 0x0,VMRT_RELOCATE_AFTER_READ = 0x1,VMRT_RELOCATE_AFTER_WRITE = 0x2,VMRT_RELOCATE_FROM_RESOURCE = 0x3,VMRT_UNRELOCATE_FROM_RESOURCE = 0x4,};
struct $73765D72A9FBB58EF4499A18B129DC00 {GStringElement OSCAM_opcode;DrawMask OSCAM_mask;};
struct $737CBA5D0C01F1844EC44E200A3ED522 {ManufacturerID VTGV_manufacturerID;VisTextVariableType VTGV_type;byte VTGV_privateData[28];};
enum $739A06AD2E1482C811284A3E483CBBD9 {IT_STANDARD_TABLE = 0x0,};
enum $73FB1A80F841CFA6585F3BAEA22225DE {RTCME_OK = 0x0,RTCME_EVENT_NOT_FOUND = 0x2,RTCME_REGISTER_FAILED = 0x4,RTCME_INVALID_EVENT = 0x6,};
struct $74223C5618075FA6C3F8207E35E6094D {AppInstanceReference ALB_appRef;word ALB_appMode;AppLaunchFlags ALB_launchFlags;MemHandle ALB_diskHandle;TCHAR ALB_path[198];FileLongName ALB_dataFile;optr ALB_genParent;optr ALB_userLoadAckOutput;Message ALB_userLoadAckMessage;word ALB_userLoadAckID;word ALB_extraData;};
struct $748FF5FA1B92B0CFC5F3863463907808 {optr SFORS_object;dword SFORS_offset;dword SFORS_len;};
struct $749C8BB21B589771188ED9E7F0491A9C {DWFixed RDWF_left;DWFixed RDWF_top;DWFixed RDWF_right;DWFixed RDWF_bottom;};
struct $74A0AEAF3BFEFBE19C33D7B5BFEC63E1 {GStringElement OSP_opcode;byte OSP_start;word OSP_num;};
struct $7500F8044112F68616EDD75DF8304EC0 {optr BG_OD;word BG_data;};
struct $7509A7E0A9603467D4788F0B8EF95C41 {GStringElement OFFR_opcode;word OFFR_x1;word OFFR_y1;word OFFR_x2;word OFFR_y2;};
struct $753CFBD78F179A3A987CEE4B354AC5B5 {ColorQuad NCC_color;SystemDrawMask NCC_grayScreen;GraphicPattern NCC_pattern;word NCC_flags;};
enum $753EECC1378132035188572323486D44 {GFT_NOT_GEOS_FILE = 0x0,GFT_EXECUTABLE = 0x1,GFT_VM = 0x2,GFT_DATA = 0x3,GFT_DIRECTORY = 0x4,GFT_LINK = 0x5,};
enum $757622241BD6F526DC0072E1E3E807C5 {FDSS_NOT_FULL = 0x0,FDSS_NEARLY_FULL = 0x2,FDSS_FULL = 0x4,};
struct $75B99C5435C207410259AF54BA0228C5 {optr TGTCI_curController;word TGTCI_features;word TGTCI_required;word TGTCI_allowed;};
union $75D50B3DB10F94476C666A3B66F92AA7 {MethodPassRegisters MPI_REGISTERS;MethodPassMemory MPI_MEMORY;};
enum $75F2AECC72E67C28AA85492AC6D71469 {CMT_NULL = 0x0,CMT_OK = 0x1,CMT_CLOSE = 0x3,CMT_CHANGE = 0x5,CMT_CANCEL = 0x7,CMT_CLEAR = 0x9,CMT_CALL = 0xB,CMT_CLEAR_ALL = 0xD,CMT_YES = 0xF,CMT_NO = 0x11,CMT_RENAME = 0x13,CMT_COPY = 0x15,CMT_SETTINGS = 0x17,CMT_OPEN = 0x19,CMT_CREATE_NEW = 0x1B,CMT_SEND = 0x1D,CMT_DELETE = 0x1F,CMT_ROTATE = 0x21,CMT_ZOOM = 0x23,CMT_ZOOM_IN = 0x25,CMT_ZOOM_OUT = 0x27,CMT_VIEWING_TOOLS = 0x29,CMT_SEND_OPTIONS = 0x2B,CMT_OPTIONS = 0x2D,CMT_FORWARD = 0x2F,CMT_REPLY = 0x31,CMT_SELECT = 0x33,CMT_START = 0x35,CMT_CONNECT = 0x37,CMT_GO = 0x39,CMT_INSTALL = 0x3B,CMT_DEINSTALL = 0x3D,CMT_NEXT = 0x3F,CMT_PREVIOUS = 0x41,CMT_RECENT_CALLS = 0x43,CMT_RECENT_FAXES = 0x45,CMT_RECENT_MESSAGES = 0x47,CMT_USER_DEFINED = 0x49,CMT_CLEAR_LIST = 0x4B,CMT_CALLS = 0x4D,CMT_FAXES = 0x4F,CMT_DATA_CALLS = 0x51,CMT_MESSAGES = 0x53,CMT_NO_CONTACT_INFORMATION = 0x55,CMT_CONTACT_CARD = 0x57,CMT_NONE = 0x59,CMT_CALL_LOWERCASE = 0x5B,CMT_CLEAR_ALL_COMMAND = 0x5D,CMT_TO_COLON = 0x5F,CMT_FROM_COLON = 0x61,CMT_ACCEPT = 0x63,CMT_RESET = 0x65,CMT_STOP = 0x67,CMT_RECEIVED_CALLS = 0x69,CMT_RECEIVED_FAXES = 0x6B,CMT_RECEIVED_MESSAGES = 0x6D,CMT_MISSED_CALLS = 0x6F,CMT_LAST_DIALED_CALLS = 0x71,CMT_ACTIVATE = 0x73,CMT_DISABLE = 0x75,CMT_HELP = 0x77,CMT_BACK = 0x79,CMT_SELECT_RECEIVER = 0x7B,CMT_SPECIAL_KEYS_COMMAND = 0x7D,CMT_SPECIAL_KEYS = 0x7F,CMT_TEXT = 0x81,CMT_TEXTS = 0x83,CMT_ZOOM_PLUS = 0x85,CMT_ZOOM_MINUS = 0x87,CMT_HANGUP = 0x89,CMT_CAPTURE = 0x8B,CMT_INSERT = 0x8D,CMT_PHONE = 0x8F,CMT_OFF = 0x91,CMT_ON = 0x93,CMT_TEXT_SEND = 0x95,CMT_TEXT_CAPTURE = 0x97,CMT_STOP_CAPTURE = 0x99,CMT_FORWARD_FAX = 0x9B,CMT_MENU = 0x9D,CMT_SEARCH = 0x9F,};
struct $75F73A87B7B5D9636A8A895CBEC1F40A {VisTextParaAttrFlags VTPAD_diffs;VisTextParaAttrFlags2 VTPAD_diffs2;VisTextParaAttrBorderFlags VTPAD_borderDiffs;VisTextParaAttrAttributes VTPAD_attributes;VisTextHyphenationInfo VTPAD_hyphenationInfo;VisTextKeepInfo VTPAD_keepInfo;VisTextDropCapInfo VTPAD_dropCapInfo;};
enum $75FCCB57A2565DE34BE8C20CA7D4E9CF {IMAGE_MENU_ADD_BOOKMARK = 0x0,IMAGE_MENU_MAX = 0x1,};
struct $7678109C56BBF022A6B1C8FD94116C30 {MemHandle TRB_handle;};
struct $767C379C7F5EE419B8DA06157B52D5EB {IrlmpIasCharSetCode IIUSH_charSet;byte IIUSH_size;};
struct $7689BE0FB8DA9EE73E274001339DBDB5 {VisTextNotificationFlags VTGNP_notificationTypes;VisTextNotifySendFlags VTGNP_sendFlags;MemHandle VTGNP_notificationBlocks[16];};
struct $76B7974850EE9C4621C3DB9DA41F5B11 {byte CQ_redOrIndex;ColorFlag CQ_info;byte CQ_green;byte CQ_blue;};
struct $773A1B5F6476DA2E185EEC6F8A1C21F2 {GStringElement OAS_opcode;WWFixed OAS_xScale;WWFixed OAS_yScale;};
struct $77B08A04199F70231D0B61C6241A0B06 {ElementArrayHeader NAH_meta;word NAH_dataSize;};
union $77D1C98245AA2463A9CA43330B58B83B {FileDate CERDD_until;CalendarEventRepeatLength CERDD_length;};
enum $781EE3B25E51C102156CFE966979AA40 {SM_TYPE_0 = 0x40,SM_REPLACE_TYPE_1 = 0x41,SM_REPLACE_TYPE_2 = 0x42,SM_REPLACE_TYPE_3 = 0x43,SM_REPLACE_TYPE_4 = 0x44,SM_REPLACE_TYPE_5 = 0x45,SM_REPLACE_TYPE_6 = 0x46,SM_REPLACE_TYPE_7 = 0x47,SM_RETURN_CALL_MESSAGE = 0x5F,};
struct $784F936D140AA54D49C58372F8242201 {optr PSCC_destination;Message PSCC_message;};
struct $785079C60EC0BECDFDE9BD52E74023BD {FormatParams FE_params;word FE_listEntryNumber;byte FE_used;word FE_sig;};
struct $78534863191C50C01C8D3E775BB1BAC0 {CellReference CR_start;CellReference CR_end;};
struct $786826E0CE3AABC7E03CA881C08485CD {word SSI_paragraphs;word SSI_blocks;};
enum $78F6A49E423E9A58155E6F23DC12C169 {SO_RECV_BUF = 0x0,SO_SEND_BUF = 0x2,SO_INLINE = 0x4,SO_NODELAY = 0x6,SO_OWNER = 0x8,};
struct $79D6AE89777A9C7412785E76DA25FD49 {optr AD_dialog;Handle AD_appLaunchBlock;Handle AD_geode;ChunkHandle AD_savedBlankMoniker;};
enum $79E09E430BB425288CA2C3150167489A {SCST_OK = 0x0,SCST_PIN_REQUIRED = 0x2,SCST_BLOCKED = 0x4,SCST_REJECTED = 0x6,SCST_MISSING_CARD = 0x8,SCST_LOCKED = 0xA,};
struct $79E3BB3B2F7B150F5A8E4C474F2448C4 {ArcCloseType ABI_arcCloseType;WWFixed ABI_startAngle;WWFixed ABI_endAngle;PointWWFixed ABI_startPoint;PointWWFixed ABI_endPoint;PointWWFixed ABI_midPoint;WWFixed ABI_radius;};
struct $79FE942ED486C3258E8D50F8EF5BBF78 {GStringElement ODTP_opcode;word ODTP_x1;word ODTP_y1;word ODBOP_ptr;};
enum $7A3E27181726140AF3D6524B218613FC {FORMAT_ID_GENERAL = 0x8000,FORMAT_ID_FIXED = 0x8061,FORMAT_ID_FIXED_WITH_COMMAS = 0x80C2,FORMAT_ID_FIXED_INTEGER = 0x8123,FORMAT_ID_CURRENCY = 0x8184,FORMAT_ID_CURRENCY_WITH_COMMAS = 0x81E5,FORMAT_ID_CURRENCY_INTEGER = 0x8246,FORMAT_ID_PERCENTAGE = 0x82A7,FORMAT_ID_PERCENTAGE_INTEGER = 0x8308,FORMAT_ID_THOUSANDS = 0x8369,FORMAT_ID_MILLIONS = 0x83CA,FORMAT_ID_SCIENTIFIC = 0x842B,FORMAT_ID_DATE_LONG = 0x848C,FORMAT_ID_DATE_LONG_CONDENSED = 0x84ED,FORMAT_ID_DATE_LONG_NO_WKDAY = 0x854E,FORMAT_ID_DATE_LONG_NO_WKDAY_CONDENSED = 0x85AF,FORMAT_ID_DATE_SHORT = 0x8610,FORMAT_ID_DATE_SHORT_ZERO_PADDED = 0x8671,FORMAT_ID_DATE_LONG_MD = 0x86D2,FORMAT_ID_DATE_LONG_MD_NO_WKDAY = 0x8733,FORMAT_ID_DATE_SHORT_MD = 0x8794,FORMAT_ID_DATE_LONG_MY = 0x87F5,FORMAT_ID_DATE_SHORT_MY = 0x8856,FORMAT_ID_DATE_YEAR = 0x88B7,FORMAT_ID_DATE_MONTH = 0x8918,FORMAT_ID_DATE_DAY = 0x8979,FORMAT_ID_DATE_WEEKDAY = 0x89DA,FORMAT_ID_TIME_HMS = 0x8A3B,FORMAT_ID_TIME_HM = 0x8A9C,FORMAT_ID_TIME_H = 0x8AFD,FORMAT_ID_TIME_MS = 0x8B5E,FORMAT_ID_TIME_HMS_24HR = 0x8BBF,FORMAT_ID_TIME_HM_24HR = 0x8C20,FORMAT_ID_INDETERMINATE = 0xFFFF,};
union $7A49652B556782299F34899717FD0CAA {VisTextGraphicGString VTGD_gstring;VisTextGraphicVariable VTGD_variable;byte VTGD_opaque[32];};
struct $7AB9201E83F27474CAB1849430398806 {word CPP_null;};
struct $7AE0F1388266DC444C9578DD1E52AF9B {optr GCNLE_item;};
enum $7B5E1B6BB836FBFD056989984B712786 {STREAM_MODE_NONE = 0x0,STREAM_MODE_ROUTINE = 0x1,STREAM_MODE_MESSAGE = 0x2,};
struct $7B9EFA27100EC2B39C6927240A0ABF1B {GStringElement OSLC_opcode;RGBValue OSLC_color;};
struct $7BF5986973715DCD9514D75823A81B8B {byte PD_width;byte PD_height;sbyte PD_hotX;sbyte PD_hotY;byte PD_mask[512];byte PD_image[512];};
struct $7CE250C99BC4F1D94216EBA55022C65F {word CCI_numChoices;word CCI_firstPoint;word CCI_lastPoint;wchar *CCI_data;};
enum $7CE27BC75A49256278CCD2BF5B9418EB {FCTT_STOP = 0x0,FCTT_ALARM_CLOCK = 0x5,FCTT_CALENDAR_ALARM = 0x6,FCTT_SMS_RECEIVED = 0x7,};
struct $7D080AE40D489A0C11ADB04EE956D46A {TokenChars TCS_tokenChars;DBGroupAndItem TCS_files;DBGroupAndItem TCS_devices;};
struct $7D3B39403EFE541BE368D966A1B3F610 {dword VTNCC_charCount;dword VTNCC_wordCount;dword VTNCC_lineCount;dword VTNCC_paraCount;};
struct $7D3DF06FCA98BB576899248302CA6BBB {dword PPAE_unused;StandardPath PPAE_standardPath;char PPAE_filePath[1];};
struct $7D8390A781560370EB9C3C0177830A75 {GrObjBaseLineAttrElement GNLAC_lineAttr;GrObjBaseLineAttrDiffs GNLAC_lineAttrDiffs;};
struct $7D9AB491A42A2D8D20E9A825612A2D16 {word NPSI_numSizes;word NPSI_defaultSize;};
struct $7DDB94455F0576B25846BB8186845626 {word XYS_width;word XYS_height;};
struct $7E281E907F6FC24AE13735E089E3073A {PatternType HP_type;byte HP_data;};
struct $7E455C8CAF29C7CBB2F787A298451808 {byte CDALKM_monitor[18];optr CDALKM_notifyOptr;Message CDALKM_notifyMsg;};
struct $7E61E54AE290203B8099EEC50250FC0D {word nameToken;byte *defPtr;byte errorOccurred;byte error;};
struct $7ECEFCEE88BBA087F8E222270399F713 {FileExtendedAttribute FEAD_attr;dword *FEAD_value;word FEAD_size;char *FEAD_name;};
struct $7F5ECA9A8F93CBA177FB175555B5043D {FieldID FH_id;word FH_nameToken;word FH_size;byte FH_type;};
enum $7FD6A432FEFA5E7E876647ACC96DEA5D {MDT_APPLICATION = 0x0,MDT_FILE = 0x1,MDT_CLIPBOARD = 0x2,MDT_QUICK_MESSAGE = 0x3,};
struct $805E1BDB86029450638BEA6CF5014E33 {SpecWinSizeSpec SWSP_x;SpecWinSizeSpec SWSP_y;};
struct $80A615B637ED7166D917C146DAE86B1D {MemHandle destInfo;InkReturnValue inkType;word unused1;word unused2;};
struct $80B3CE46B6E412671E9D464518D7C0B3 {word methodParameterDef;byte handlerTypeDef;};
struct $80CC4C5FD88ED052572879322825446E {word AALT_areaToken;word AALT_pad1;word AALT_message;word AALT_pad2;};
struct $80D089CCC4F7710B93461BFECF2343CB {VisTextWashColorBlueGreen VTGWC_blueGreen;VisTextWashColorModeRed VTGWC_modeRed;};
enum $80D96DAFE1DB6F5E9255DC93C944D179 {FPPS_A4 = 0x0,FPPS_LETTER = 0x1,};
struct $80FC77BB9807EC363EC488B2F7932295 {word MDS_cx;word MDS_dx;word MDS_bp;};
struct $81352BF78AB9E91B568137A2A02459F3 {word SRI_yPosition;word SRI_xPosition;word SRI_numChars;WBFixed SRI_stringWidth;word SRI_attributes;byte SRI_text;};
enum $8190556512B3D3A3DDF7FBD94D738FA5 {FPSB_ONE = 0x1,FPSB_TWO = 0x2,};
struct $819748FEF669829A861BBCF8D9F83A08 {byte FFMB_columnsTaken[32];byte FFMB_currentMode;byte FFMB_currentLayout;byte FFMB_numLayouts;byte FFMB_numRecords;byte FFMB_numFields;FieldID FFMB_databaseNameList[255];byte FFMB_numInNotInLayoutNameList;FieldID FFMB_notInLayoutNameList[255];byte FFMB_numInLayoutNameList;FieldID FFMB_layoutNameList[255];byte FFMB_highestLayoutNumber;byte FFMB_currentLayoutType;};
struct $81AFDD6F4AB64A1B66616FEC6377A6C1 {word ax;word cx;word dx;word bp;};
struct $82369A7A0E9DCEBF166A5881866CE09E {WBFixed VTMDP_height;WBFixed VTMDP_width;};
struct $8280190BA0D6110F4F03F3568C623E58 {optr CBMD_callBackOD;word CBMD_callBackMessage;optr CBMD_groupOD;optr CBMD_childOD;word CBMD_extraData1;word CBMD_extraData2;};
struct $82F551891BCA580FE9AAABF04F7FB6A9 {word PL_message;PointDWFixed PL_point;PriorityListInstructions PL_instructions;ClassStruct *PL_class;word PL_numElements;word PL_maxElements;ChunkHandle PL_list;};
enum $830110510549E82FC9B47DFDA16B702E {HM_NONE = 0x0,HM_LINE = 0x1,HM_BOX = 0x2,HM_GRID = 0x3,};
struct $83218C8C3FEA8D46A92DA238210E29E8 {TextStyle NTSC_styles;TextStyle NTSC_indeterminates;};
enum $832DA866C4E6BD40C97AF9A03AC2F2BF {SDT_TEXT = 0x0,SDT_GRAPHICS = 0x1,SDT_SPREADHSEET = 0x2,SDT_INK = 0x3,SDT_OTHER = 0x4,};
struct $840C4AE6DA675E191336E570CC906146 {SMReplyPath SMSO_replyPath;SMValidityPeriod SMSO_validityPeriod;SMMessageConversion SMSO_messageConversion;TCHAR SMSO_scAddress[22];byte SMSO_dataCodingScheme;word SMSO_userDataLength;Boolean SMSO_userDataHeader;};
struct $845A26C3CBACBC1F1DD6F1363C148969 {GStringElement ODPL_opcode;word ODPL_count;};
struct $84AC25CC0C540B0B68AA96E80DDAA1A4 {GStringElement OSDT_opcode;};
struct $84C30232336453913E223FE164FD10DD {TextStyleFlags TSPD_flags;byte TSPD_unused[2];};
struct $84F222A61312224562852E7C8AADEAFF {word TFDT_fileDate;word TFDT_fileTime;};
struct $851F4DC98C4C8FC1533037FB4ADC67A4 {ClassStruct *MB_class;};
struct $8556DCFD83F83399DBD905E8657F8BD9 {FormatParameters CF_parameters;void (__pascal *CF_callbackPtr)(C_CallbackStruct *);C_CallbackStruct CF_callbackStruct;};
struct $858B9A8623AAC9B714978EA4ABE79D7E {WWFixed GOGSP_height;WWFixed GOGSP_width;};
struct $85CBAC501BABFDECD6577D39EB23880C {word FAH_signature;word FAH_numFormatEntries;word FAH_numUserDefEntries;word FAH_formatArrayEnd;};
struct $85D54BAADFD5DA82BF0406050EFEBA3B {word TFS_sourceDisk;ReleaseNumber TFS_release;TCHAR TFS_name[1];};
struct $85DC90713BAC87D6BEDA872AD5F87D80 {word TDAT_year;word TDAT_month;word TDAT_day;DayOfTheWeek TDAT_dayOfWeek;word TDAT_hours;word TDAT_minutes;word TDAT_seconds;};
struct $85EC4E73E755D930F16BCE1788DEE2E1 {FormatIdType *GDAI_displayArray;FieldID *GDAI_layoutNameList;byte GDAI_numInLayoutNameList;};
struct $86567B2224693720953BBD1B7D6BF107 {GStringElement OFA_opcode;word OFA_close;word OFA_x1;word OFA_y1;word OFA_x2;word OFA_y2;word OFA_ang1;word OFA_ang2;};
struct $869CEE4C4A56CEEBA4C71AD18E048CF9 {optr NUSC_undoTitle;UndoDescription NUSC_undoType;};
struct $871001D0B5C712357723D9CD7C2DBBBB {GStringElement OSTC_opcode;RGBValue OSTC_color;};
struct $87347AEDC994051E9EB1360C1A45C35F {PrinterType PI_type;PrinterConnections PI_connect;PrinterSmart PI_smarts;word PI_customEntry;word PI_customExit;word PI_lowRes;word PI_medRes;word PI_hiRes;word PI_draft;word PI_nlq;word PI_fontGeometries;word PI_fontSymbolSets;PrinterMargins PI_marginTractor;PrinterMargins PI_marginASF;PaperInputOptions PI_paperInput;PaperOutputOptions PI_paperOutput;word PI_paperWidth;optr PI_mainUI;optr PI_optionsUI;word PI_evalRoutine;};
enum $873EC953EBCAA549C13959FDFD48AF45 {GCNEMNT_CREATED = 0x0,GCNEMNT_DESTROYED = 0x1,};
struct $87491AB6006475F348EB03478E4D5790 {LMemBlockHeader DEIT_common;word DEIT_numDevices;ChunkHandle DEIT_ChunkHandle;word DEIT_infoTable;};
struct $877AB99DAC8538DBAF5E8373CCBF1040 {GStringElement ODC_opcode;char ODC_char;word ODC_x1;word ODC_y1;};
enum $87D4EC0DCB98396977B2BC5B3B8102D8 {GOMRF_HANDLE = 0x0,GOMRF_BOUNDS = 0x1,GOMRF_NOTHING = 0x2,};
struct $8813947B67E0CD009FE04DA1FCDEAB24 {GStringElement OFBOP_opcode;word OFBOP_x;word OFBOP_y;optr OFBOP_bitmap;};
struct $884196AD1276F330BA70B1273B1FE632 {word GFC_unused;word GFC_unused2;word GFC_numPreDefined;word GFC_numUserDefined;};
struct $889A989E3360067B804F9D6F3C292B0D {word SD2RTT_numTriggers;StandardDialogResponseTriggerEntry SD2RTT_trigger1;StandardDialogResponseTriggerEntry SD2RTT_trigger2;};
enum $88B5D0B5A2060167D6627592E3BB6725 {TL_TARGET = 0x0,TL_CONTENT = 0x1,TL_GENERIC_OBJECTS = 0x3E8,TL_GEN_SYSTEM = 0x3E9,TL_GEN_FIELD = 0x3EA,TL_GEN_APPLICATION = 0x3EB,TL_GEN_PRIMARY = 0x3EC,TL_GEN_DISPLAY_CTRL = 0x3ED,TL_GEN_DISPLAY = 0x3EE,TL_GEN_VIEW = 0x3EF,TL_LIBRARY_LEVELS = 0x7D0,TL_APPLICATION_OBJECTS = 0xBB8,};
struct $88C48B873FC941D4B633FE85B9DEF799 {word CSLSLLD_numSelected;MemHandle CSLSLLD_dataBlock;};
struct $88ED5A4D9ADB3911707D5AA699EF6BD3 {SpreadsheetSearchFlags SSP_flags;char SSP_string[128];SpreadsheetSearchFlags SSP_found;Point SSP_cell;word SSP_startPos;word SSP_endPos;};
enum $890BC88F75D92222BBDFEE843EA4450E {DFR_UNIQUE = 0x0,DFR_NOT_UNIQUE = 0x1,DFR_NOT_FOUND = 0x2,};
struct $8915D81C5E846110F561F055C579F599 {GStringElement OP_opcode;};
enum $893FC781B957FE149F14732CEA08381B {GCNSLT_FILE_SYSTEM = 0x0,GCNSLT_APPLICATION = 0x2,GCNSLT_DATE_TIME = 0x4,GCNSLT_DICTIONARY = 0x6,GCNSLT_KEYBOARD_OBJECTS = 0x8,GCNSLT_EXPRESS_MENU_CHANGE = 0xA,GCNSLT_INSTALLED_PRINTERS = 0xC,GCNSLT_SHUTDOWN_CONTROL = 0xE,GCNSLT_TRANSFER_NOTIFICATION = 0x10,GCNSLT_EXPRESS_MENU_OBJECTS = 0x12,GCNSLT_TRANSPARENT_DETACH = 0x14,GCNSLT_TRANSPARENT_DETACH_DA = 0x16,GCNSLT_REMOVABLE_DISK = 0x18,GCNSLT_TRANSPARENT_DETACH_IN_PROGRESS = 0x1A,GCNSLT_TRANSPARENT_DETACH_FULL_SCREEN_EXCL = 0x1C,GCNSLT_EMAIL_DATABASE_CHANGE = 0x1E,GCNSLT_FONT_CHANGES = 0x20,GCNSLT_INK = 0x22,GCNSLT_PRINT_JOB_STATUS = 0x24,GCNSLT_FOAM_DB_CHANGES = 0x26,GCNSLT_NOTIFY_SERIAL_LURKER = 0x28,GCNSLT_FAX_INFO_FILE_CHANGE = 0x2A,GCNSLT_NOTIFY_INIT_FILE_CHANGE = 0x2C,GCNSLT_NOTIFY_KEYBOARD_EVENT = 0x2E,GCNSLT_NOTIFY_INDICATOR_EVENT = 0x30,GCNSLT_CONTACT_LIST_SELECTION = 0x32,GCNSLT_CONTACT_LOG_CHANGES = 0x34,GCNSLT_RESPONDER_NOTIFICATIONS = 0x36,GCNSLT_ACCESS_POINT_CHANGE = 0x38,GCNSLT_PCMCIA_NOTIFY_CARD_CHANGE = 0x3A,GCNSLT_SECURITY_SETTINGS_NOTIFICATIONS = 0x3C,GCNSLT_PENELOPE_HARDWARE_NOTIFICATIONS = 0x3E,GCNSLT_PENELOPE_RADIO_STATUS_NOTIFICATIONS = 0x40,GCNSLT_UI_CHANGE = 0x42,GCNSLT_KEYBOARD_MAP_CHANGE = 0x44,GCNSLT_CONTACT_SIM_LIST_SELECTION = 0x46,GCNSLT_CONTACT_SIM_LIST_CONTACT_CHANGE = 0x48,GCNSLT_CONTACT_SIM_LIST_CHANGES = 0x4A,GCNSLT_CONTACT_SIM_LIST_FDN_STATUS = 0x4C,};
enum $894F390A6474159F1CD83F51CE405E14 {PS_IDLE = 0x0,PS_BUSY = 0x2,PS_WAITING = 0x4,PS_PRINTING = 0x6,PS_WARMING_UP = 0x8,};
enum $89FAB5A60CC68CC7F7EAD1181396A440 {ERR_DISKCOPY_INSUFFICIENT_MEM = 0xD0,ERR_CANT_COPY_FIXED_DISKS = 0xD1,ERR_CANT_READ_FROM_SOURCE = 0xD2,ERR_CANT_WRITE_TO_DEST = 0xD3,ERR_INCOMPATIBLE_FORMATS = 0xD4,ERR_OPERATION_CANCELLED = 0xD5,ERR_CANT_FORMAT_DEST = 0xD6,};
enum $8A0FAB3510E333DDB8EAC3049ED5AAA5 {TSN_TERM_CONNECTED = 0x0,TSN_TERM_NOT_CONNECTED = 0x1,};
enum $8A444A306AD0D6C1DB52AD7E00837D4D {GUQT_UI_FOR_APPLICATION = 0x0,GUQT_UI_FOR_SCREEN = 0x1,GUQT_UI_FOR_FIELD = 0x2,GUQT_UI_FOR_MISC = 0x3,GUQT_FIELD = 0x4,GUQT_SCREEN = 0x5,GUQT_DELAYED_OPERATION = 0x6,};
struct $8A4957CB4E1041F30DD04B576B93E7A0 {SocketPort SA_port;word SA_domainSize;TCHAR *SA_domain;word SA_addressSize;};
enum $8A6E954DDB0D916EB9EEB3AB15E1646F {UGRV_MODIFIED_ELEMENT = 0x0,UGRV_CREATED_NEW_ELEMENT = 0x1,UGRV_INVALID_GRAPHIC_TYPE = 0x2,UGRV_INVALID_GRAPHIC_FLAGS = 0x3,UGRV_INVALID_GSTRING_SIZE = 0x4,UGRV_INVALID_GSTRING_VMCHAIN_HANDLE = 0x5,UGRV_INVALID_GSTRING_VMCHAIN = 0x6,UGRV_INVALID_VARIABLE_TYPE = 0x7,UGRV_INVALID_VARIABLE_VMCHAIN_HANDLE = 0x8,UGRV_INVALID_VARIABLE_MANUFACTURER_ID = 0x9,UGRV_INVALID_VARIABLE_PRIVATE_DATA = 0xA,};
struct $8A6FC1AF7FF05695A769948764B90444 {GrObjStyleFlags GSPD_flags;word GSPD_unused;};
struct $8AC348B8256A5735AD3547D1CD6CD57D {CellRowColumn CR_row;CellRowColumn CR_column;};
enum $8AE5CADB88CA2B17E08A8546F870C5B9 {SERIAL_LENGTH_5 = 0x0,SERIAL_LENGTH_6 = 0x1,SERIAL_LENGTH_7 = 0x2,SERIAL_LENGTH_8 = 0x3,};
struct $8AFD5DFA96B122F44947FC2ACB3288C5 {VisCompGeoAttrs GADA_geoAttrs;VisCompGeoDimensionAttrs GADA_geoDimensionAttrs;};
struct $8B0556D3519393DE2DB51F753344053C {LineFlags LI_flags;WBFixed LI_hgt;WBFixed LI_blo;word LI_adjustment;WordAndAHalf LI_count;WBFixed LI_spacePad;word LI_lineEnd;FieldInfo LI_firstField;};
struct $8B6E6E5BE7804C7A52A41EFB56FC12BC {UndoActionStruct AUAS_data;optr AUAS_output;AddUndoActionFlags AUAS_flags;};
enum $8BA0B8CCCA5679A3EBC348C6E602E361 {FPCT_IR = 0x0,FPCT_SERIAL = 0x1,FPCT_PARALLEL = 0x2,};
enum $8BAF60176DB03E0094621C2295F90B6F {MESSAGE_NO_ERROR = 0x0,MESSAGE_NO_HANDLES = 0x1,};
enum $8BC72EBC84419DF45BC0DA27720BD137 {SCR_ONE_WORD_CHECKED = 0x0,SCR_SELECTION_CHECKED = 0x1,SCR_DOCUMENT_CHECKED = 0x2,};
enum $8C4B1481B9D54BF504E4E2C3D296F9F4 {OBEXT_TINYTP = 0x0,};
enum $8C80A15AD88F08AA5761920E6F61B861 {MSP_16BIT = 0x4,MSP_48BIT = 0x2,MSP_FLOATING = 0x1,};
enum $8C8514500129344CF3AE0280D50BB8A9 {OCCT_SAVE_PARAMS_TEST_ABORT = 0x0,OCCT_SAVE_PARAMS_DONT_TEST_ABORT = 0x2,OCCT_DONT_SAVE_PARAMS_TEST_ABORT = 0x4,OCCT_DONT_SAVE_PARAMS_DONT_TEST_ABORT = 0x6,OCCT_ABORT_AFTER_FIRST = 0x8,OCCT_COUNT_CHILDREN = 0xA,};
struct $8DA594945E0463D20A8F7D04511942AF {optr TIR_travelingObject;ChunkHandle TIR_parent;word TIR_compChildFlags;};
struct $8DE6D42E14E1D8AF49353FCBF61ECFAD {optr SSD_output;Message SSD_message;optr SSD_chartBody;};
struct $8E06E9D1C6BD5E3998AF35AF843B419F {CellReference SDO_rowCol;};
struct $8E0FE6A356E10D125C87C02C374149FF {optr GGSI_optr;MemHandle GGSI_window;word GGSI_unused;};
struct $8E36A07A538C25AE578EDB7149292954 {char JP_fname[13];char JP_parent[33];char JP_documentName[33];word JP_numPages;char JP_printerName[81];char JP_deviceName[40];PrintPortInfo JP_portInfo;PrinterMode JP_printMode;PageSizeReport JP_paperSizeInfo;PageSizeReport JP_docSizeInfo;SpoolOptions JP_spoolOpts;byte JP_numCopies;word JP_timeout;byte JP_retries;word JP_size;word JP_printerData[10];};
enum $8E400B91C438F0E8C81E47287BFF07B6 {PSCT_NEW_PAGE = 0x0,PSCT_COMPLETE = 0x1,PSCT_CANCELED = 0x2,PSCT_ERROR = 0x3,};
enum $8E4F37CBFF6035A202A1AD1B1C2FD4E9 {SERIAL_XSTOP_NONE = 0x0,SERIAL_XSTOP_HALF = 0x1,SERIAL_XSTOP_ONE = 0x1,};
struct $8E5E1C48F2500787167AE339DCA17AB9 {GenValueStateFlags GVSFAW_flags;byte GVSFAW_unused;};
struct $8E641EB0AB58D56782E2BFF5F7203979 {byte *dataPtr;};
struct $8E7F4CD51107C8A8AA15E7E7B226E9D4 {ParserParameters SPP_parserParams;dword SPP_text;dword SPP_expression;word SPP_exprLength;};
struct $8E9F1B91AF07BF61A9A05440363B6DE9 {byte STS_second;byte STS_minute;byte STS_hour;};
struct $8ECDEA8D7F7F0D0EA6A364762FE46796 {sword P_x;sword P_y;};
enum $8EED5B23BB25CC4C68758CEFE7548B42 {TE_DIVIDE_BY_ZERO = 0x0,TE_OVERFLOW = 0x4,TE_BOUND = 0x8,TE_FPU_EXCEPTION = 0xC,TE_SINGLE_STEP = 0x10,TE_BREAKPOINT = 0x14,};
struct $8F209853ACC9D2D2A3FDDF12C8B5E727 {dword DLH_next;};
enum $8F20B6CA164593CDB33CDFB420FC5CE4 {DOTW_SUNDAY = 0x0,DOTW_MONDAY = 0x1,DOTW_TUESAY = 0x2,DOTW_WEDNESDAY = 0x3,DOTW_THURSDAY = 0x4,DOTW_FRIDAY = 0x5,DOTW_SATURDAY = 0x6,};
enum $8F54777DAD6E32D16DCFEAC57A832A2E {IACPCE_CANNOT_FIND_SERVER = 0x11,IACPCE_NO_SERVER = 0x12,};
struct $8F740B87736BC3A8DB533C6FF3921CC6 {GStringElement OST_opcode;WWFixed OST_elem11;WWFixed OST_elem12;WWFixed OST_elem21;WWFixed OST_elem22;WWFixed OST_elem31;WWFixed OST_elem32;};
struct $8F7DD3229DAC2E151FE42A47810F1058 {word EFSED_numSelections;MemHandle EFSED_block;};
struct $8FB3A01D33C72705C7B9BA1A02BA4DE6 {GStringElement OSSA_opcode;byte OSSA_pos;byte OSSA_size;};
struct $8FDF5620761B6BC5E2B3B56446BAB5B2 {word FN_high;word FN_middle;word FN_low;};
enum $90205E8727C8D8A4A85D58457ACCF4E4 {SSDTT_MSEC = 0x8,SSDTT_TICKS = 0xA,SSDTT_TEMPO = 0xC,};
union $906092021A7B30EDDBF769BB3A27FA79 {PageLayoutPaper PL_paper;PageLayoutEnvelope PL_envelope;PageLayoutLabel PL_label;PageLayoutPostcard PL_postcard;};
struct $9082C83F61041EFC1D18E010E43796F0 {ArcCloseType TPATP_close;PointWWFixed TPATP_point2;PointWWFixed TPATP_point3;};
struct $90CE28F6FE04DDED2A1FAA7BB57BE3B9 {FieldDataType FDA_type;FieldDataTypesFlags FDA_flags;word FDA_nameToken;};
enum $90D2F27AE01C482293D6170BBF623F68 {MBRIT_DAILY = 0x0,MBRIT_WEEKLY = 0x1,MBRIT_MONTHLY_WEEKDAY = 0x2,MBRIT_MONTHLY_DATE = 0x3,MBRIT_YEARLY_WEEKDAY = 0x4,MBRIT_YEARLY_DATE = 0x5,MBRIT_MON_TO_FRI = 0x6,MBRIT_MON_TO_SAT = 0x7,};
struct $90DB055B0FB2240F835759DEB030468D {VMBlockHandle MSDH_blockHandle;};
enum $90E002FB11625EF7CF0797170E6D5996 {GPT_CURRENT = 0x0,GPT_CLIP = 0x1,GPT_WIN_CLIP = 0x2,};
struct $90E22C87990FB7EF9BC22AC31F34B1A2 {HugeArrayDirectory TLRAH_meta;VMBlockHandle TLRAH_elementVMBlock;};
struct $9109C017CA0BC85567CE15810BF607DD {VMChainTree TTBH_meta;word TTBH_reservedOther[20];VMChain TTBH_text;VMChain TTBH_charAttrRuns;VMChain TTBH_paraAttrRuns;VMChain TTBH_typeRuns;VMChain TTBH_graphicRuns;VMChain TTBH_charAttrElements;VMChain TTBH_paraAttrElements;VMChain TTBH_typeElements;VMChain TTBH_graphicElements;VMChain TTBH_styles;VMChain TTBH_names;VMChain TTBH_pageSetup;VMChain TTBH_reservedVM[10];};
struct $9153135A2201585E04B3431FD25185A9 {optr CD_object;dword CD_numChars;VisTextRange CD_range;VisTextRange CD_selection;};
struct $91D35A5CA07D717F8DBF75869519BABA {PointDWFixed GOID_position;WWFixed GOID_width;WWFixed GOID_height;};
enum $91F6B745FFED4EC40A544E2CF466C4F0 {SMBC_DISPLAY_AND_STORE = 0x33,SMBC_STORE_ONLY = 0x34,SMBC_DISPLAY_ONLY = 0x35,};
struct $921DED71CCD34D759469B5F7E368E8FB {MailboxTransport FTHD_transport;MailboxTransportOption FTHD_transOption;optr FTHD_pc;};
enum $922E1BC3CA4971FC5EE74AD2D300FD57 {PDDT_NAME = 0x0,PDDT_SYNOPSIS = 0x1,PDDT_SIZE = 0x2,PDDT_PATH = 0x3,};
struct $92BFB7A7287159668B7865434FBEA5F4 {TCHAR ILEP_singularText[40];TCHAR ILEP_pluralText[40];};
struct $92DE16E88526285D61F711FB91BBF801 {optr VSCOA_destination;};
enum $9314BCEB47C6754959841B3FE5544301 {SGIT_TOTAL_HANDLES = 0x0,SGIT_HEAP_SIZE = 0x2,SGIT_LARGEST_FREE_BLOCK = 0x4,SGIT_TOTAL_COUNT = 0x6,SGIT_NUMBER_OF_VOLUMES = 0x8,SGIT_TOTAL_GEODES = 0xA,SGIT_NUMBER_OF_PROCESSES = 0xC,SGIT_NUMBER_OF_LIBRARIES = 0xE,SGIT_NUMBER_OF_DRIVERS = 0x10,SGIT_CPU_SPEED = 0x12,SGIT_SYSTEM_DISK = 0x14,SGIT_UI_PROCESS = 0x16,};
struct $9388F29C425345DBBFE85AFA753DC532 {word funcID;word row;word column;};
union $938E3B645CE001A1E397A04D14D290C3 {CT_FTT_CallbackStruct CT_ftt;CT_NTT_CallbackStruct CT_ntt;CT_CNE_CallbackStruct CT_cne;CT_CNS_CallbackStruct CT_cns;CT_EF_CallbackStruct CT_ef;CT_LN_CallbackStruct CT_ln;CT_UL_CallbackStruct CT_ul;CT_FF_CallbackStruct CT_ff;CT_FN_CallbackStruct CT_fn;CT_CC_CallbackStruct CT_cc;CT_EC_CallbackStruct CT_ec;CT_NTC_CallbackStruct CT_ntc;CT_FTC_CallbackStruct CT_ftc;CT_DC_CallbackStruct CT_dc;CT_SF_CallbackStruct CT_sf;};
enum $9394009D0E7A2BE4F34E24144A17591B {HLME_BLOCK_NOT_FOUND = 0x0,HLME_BLOCK_BECAME_TOO_BIG = 0x2,};
struct $93B9B63DDECFCFEC1F13D557A417BF3D {FontID FNFC_fontID;byte FNFC_diffs;};
struct $93BAEE1909FAD3E822217542F132843A {word VDE_dataType;word VDE_entrySize;};
struct $93E99E7D8BC4091E2D9FA84A78421836 {GStringElement OC_opcode;word OC_size;};
struct $940501859A33BC4A099022D8F2641058 {VMChainLink VMCT_meta;word VMCT_offset;word VMCT_count;};
struct $94D36BA977D3E1822AB1D2DB4F4A898F {GStringElement OSNT_opcode;};
struct $94E8D4DDD4B59861F567E7348CFAA5AF {char *text;word length;byte nameExists;};
struct $94F8EEFAF5F511FE6E4E9359E6E38432 {VMChain VTCUI_vmChain;VMFileHandle VTCUI_file;};
struct $94FFC3B488C4ED11960F3F3C9AE35B5D {word memAvailable;word batteryLeft;};
enum $955FC0FDE82C2E6F54BC7A6A8D5E6A27 {SSN_LINK_CONNECTED = 0x0,SSN_LINK_NOT_CONNECTED = 0x1,};
struct $95618DDE8F85F1BD8F8776664A129F58 {ClassStruct *GONCT_toolClass;word GONCT_specInitData;};
struct $957E40A1EC55619C886CE7C511787CD3 {word FNH_count;};
struct $95899E3543EE96D5C4516AAEA8C3344C {GStringElement OBP_opcode;PathCombineType OBP_combine;byte OBP_flags;byte OBP_unused;};
enum $95AA10DAFD72970BE72C956ECFEF3F9C {SKCAT_CLICK_OFF = 0x0,SKCAT_CLICK_QUIET = 0x2,SKCAT_CLICK_LOUD = 0x4,SKCAT_ALARM_SOUND_1 = 0x6,SKCAT_ALARM_SOUND_2 = 0x8,SKCAT_ALARM_SOUND_3 = 0xA,};
struct $95F61BF6B9F8DAB5F95917959F54227E {LMemBlockHeader VRNGCBH_header;word VRNGCBH_vertGuideArray;word VRNGCBH_horizGuideArray;};
struct $9606A4620223E2C7E2E56D4700E70183 {word GNI_blockHandle;word GNI_textSize;};
enum $965BF2DE53BBEF0CD7A62F657AAEDAC0 {STREAM_OPEN_NO_BLOCK = 0x1,STREAM_OPEN_TIMEOUT = 0x2,};
struct $9685F3F916C43891E0A45B01352508C4 {OperatorType STOD_operatorID;};
enum $9690D7F9A3B2DBA2A698E7A1CD989105 {ACT_OPEN = 0x0,ACT_CHORD = 0x1,ACT_PIE = 0x2,};
struct $96955320D8281A8016A7238F663FB7DF {ChunkHandle TRSC_chunk;Segment TRSC_segment;};
struct $978AE2F050D8D0E7D3389DA501143EB8 {byte ISS_width;byte ISS_height;};
struct $979596CD580D4CAD51A157F157E5B397 {word GHV_heapSpace;};
struct $9799451EC9E93ABF775CB4E98A564828 {IrlapParamBaudRate ICP_baudRate;IrlapParamMaxTurnAround ICP_maxTurnAround;IrlapParamDataSize ICP_dataSize;IrlapParamWindowSize ICP_windowSize;IrlapParamNumBof ICP_numBof;IrlapParamMinTurnaround ICP_minTurnAround;IrlapParamLinkDisconnect ICP_linkDisconnect;IrlapParamDataSize ICP_dataSizeIn;IrlapParamWindowSize ICP_windowSizeIn;byte ICP_unused;};
struct $97BD3ADAD70F696A07F5F443F1DAC867 {EvaluatePositionRating EPRAN_rating;byte EPRAN_pad1;word EPRAN_pad2;EvaluatePositionNotes EPRAN_notes;word EPRAN_pad3;};
enum $9860A502E3BC1D63C7E55B9E2D8B2C6A {MCA_CANCEL_NONE = 0x0,MCA_CANCEL_MESSAGE = 0x1,MCA_CANCEL_CONNECT = 0x2,MCA_CANCEL_ALL = 0x3,};
struct $98638DFDB3E859876C1C282AAF605F02 {CellReference PTCD_cellRef;};
enum $9890F1E5FA2454931F6E390FA6C697C8 {PARALLEL_INT_THREAD = 0x0,PARALLEL_INT_NORMAL = 0x7,PARALLEL_INT_ALTERNATE = 0x5,};
struct $98D2F76F00FB18AE97C8B0B8C0CF0263 {optr FOCNM_topText;optr FOCNM_iconBitmap;};
struct $98E487DFBEDF269E864B4776F76FF67E {Boolean VTNHC_hyperlinkable;};
struct $993D747E86BD123772A377CF4791C4FC {VMBlockHandle VMC_next;};
enum $9A4063B5AAC2F8A7CC91E0E1CB1C26A2 {CALLBACK_GET_SOURCE_DISK = 0x0,CALLBACK_REPORT_NUM_SWAPS = 0x1,CALLBACK_GET_DEST_DISK = 0x2,CALLBACK_VERIFY_DEST_DESTRUCTION = 0x3,CALLBACK_REPORT_FORMAT_PCT = 0x4,CALLBACK_REPORT_COPY_PCT = 0x5,};
struct $9A4DEA20FC32256AB58CD874C74CA8A8 {DiskHandle CTFDTA_localDiskHandle;char far *CTFDTA_localFilePath;char far *CTFDTA_remoteFilePath;word CTFDTA_bytesPerStatusReport;optr CTFDTA_statusOptr;Message CTFDTA_statusMsg;};
struct $9A5F1C5137EF5408E3A729695901A5EE {MailboxTransAddr *MSCSAA_transAddrs;word MSCSAA_numTransAddrs;MailboxTransportAndOption MSCSAA_transportAndOption;};
enum $9BCBD61203C90FDAD9FF615FC58BC77E {SROUT_CHECK_WORD = 0x0,SROUT_GET_TEXT_OFFSETS = 0x1,SROUT_GET_ERROR_FLAGS = 0x2,SROUT_RESET_SPELL_CHECK = 0x3,};
struct $9BF084E5F45B776657EC303FEBDCC77E {MailboxTransport MTAO_transport;MailboxTransportOption MTAO_transOption;};
struct $9C193B18922D78DC5F2F6D72CE9E19F9 {WWFixed GOSD_xScale;WWFixed GOSD_yScale;};
struct $9C6AD976D84CF4A1A5CC7A4CCC197AB1 {CommonParameters EP_common;EvalFlags EP_flags;word EP_fpStack;word EP_depHandle;word EP_nestedLevel;dword EP_nestedAddresses[32];byte EP_align;};
struct $9C6F04CA0F3086940A68FB13E12FBEED {word ESP_extraWidth;word ESP_extraHeight;word ESP_leftoverChildren;word ESP_unused;};
struct $9C8C62671F946AECF97A419A902B7BD9 {optr ITP_impexOD;Message ITP_returnMsg;word ITP_dataClass;FileHandle ITP_transferVMFile;VMChain ITP_transferVMChain;dword ITP_internal;ManufacturerID ITP_manufacturerID;ClipboardItemFormat ITP_clipboardFormat;};
enum $9D017184267BADE5A4328A83A19B1EE4 {CSE_OK = 0x0,CSE_DATA_FETCHABLE = 0x1,CSE_DATA_UNAVAILABLE = 0x2,CSE_SAVE_NOT_EDITING = 0x3,CSE_SAVE_NAME_TRUNCATED = 0x4,CSE_SAVE_FAILED = 0x5,CSE_SAVE_FAILED_SIM_BUSY = 0x6,CSE_SAVE_FAILED_NUMBER_TOO_LONG = 0x7,CSE_SAVE_FAILED_MISSING_RESOURCE = 0x8,CSE_SAVE_FAILED_OTHER_ERROR = 0x9,};
struct $9D2647AE062C95BC0D77ABE625963F26 {Boolean NSEC_spellEnabled;};
enum $9D46B312836DB1586438ED3C80FB7BC9 {LMEM_TYPE_GENERAL = 0x0,LMEM_TYPE_WINDOW = 0x1,LMEM_TYPE_OBJ_BLOCK = 0x2,LMEM_TYPE_GSTATE = 0x3,LMEM_TYPE_FONT_BLK = 0x4,LMEM_TYPE_GSTRING = 0x5,LMEM_TYPE_DB_ITEMS = 0x6,};
enum $9D491DC32B45CDA360448FBF0D531364 {CQTF_SET_DEFAULT = 0x0,CQTF_CLEAR_DEFAULT = 0x1,CQTF_MOVE = 0x2,CQTF_COPY = 0x3,CQTF_CLEAR = 0x4,};
struct $9D5185681DC4B8FEE74C6C05E52BA97A {RangeEnumParams CREP_params;void *CREP_locals;dword (__pascal *CREP_callback)(RangeEnumCallbackParams);};
enum $9D86436D6F2F67FCE06FCB0B56F70165 {SST_MAILBOX = 0x0,SST_MEDIUM = 0x9,SST_DEVICE_POWER = 0x12,SST_INDICATOR = 0x1B,SST_IRDA = 0x24,SST_SOCKET = 0x2D,SST_TERMINAL = 0x36,};
struct $9DCC85BB9E8F3D12F21DDA942F29C259 {FileAttrs FENAA_attr;FileLongName FENAA_name;};
struct $9E09D76462B156B50A618F2646762B0E {MailboxStorage MCBFA_bodyStorage;MailboxDataFormat MCBFA_bodyFormat;const void *MCBFA_bodyRef;unsigned int MCBFA_bodyRefLen;MailboxMessageFlags MCBFA_newBodyFlags;};
struct $9E22BFFE0CCBD83E70F71E954B52DB3B {ChunkArrayHeader GCNLOL_meta;};
struct $9E2A857B5DDC60454A39A4087CC39EDC {GStringElement ODRATPT_opcode;ArcCloseType ODRATPT_close;WWFixed ODRATPT_x2;WWFixed ODRATPT_y2;WWFixed ODRATPT_x3;WWFixed ODRATPT_y3;};
struct $9E43FFAA4433D1375C6A87A69F17B9CA {word FPID_disk;FileID FPID_id;};
struct $9E7A65D168CD19D7D946AF21A9BA7F5A {GStringElement OFATPT_opcode;ArcCloseType OFATPT_close;WWFixed OFATPT_x2;WWFixed OFATPT_y2;WWFixed OFATPT_x3;WWFixed OFATPT_y3;};
struct $9EC1E981A8092A7559C704B327BE0470 {optr SAE_OD;DWFixed SAE_key;};
struct $9EF6EABEF73D64FE33D6B8317FD86AA4 {unsigned int autoMarking;};
enum $9F04C1CBC8BC8F6622899A31234C2F39 {IFN_SMS_RECEIVED = 0x0,IFN_FAX_RECEIVED = 0x1,IFN_EMAIL_RECEIVED = 0x2,};
struct $9F17843521BD990F32B3AF5A4E650719 {byte VM_type;word VM_width;};
enum $9F458BEFCC98CF6FE2D1882D3CF34F8F {CTDIS_HIGH_PRIORITY = 0x101,CTDIS_NORMAL_PRIORITY = 0x102,CTDIS_COMPLETED = 0x103,};
struct $9F46C0150579BF2BC8C2E2FC736A1C4D {GStringElement ODA_opcode;ArcCloseType ODA_close;word ODA_x1;word ODA_y1;word ODA_x2;word ODA_y2;word ODA_ang1;word ODA_ang2;};
struct $9F47C829AA7BEDE6FCA8C79A83B8D57C {GrObjScaleData GOASD_scale;GrObjHandleSpecification GOASD_scaleAnchor;};
enum $9F84FB585A811D87BB98331234F1E256 {RTCMGLM_APPLICATION = 0x0,RTCMGLM_ENGINE = 0x2,RTCMGLM_DRIVER = 0x4,RTCMGLM_LIBRARY = 0x6,RTCMGLM_APPLICATION_IN_BACK = 0x8,};
struct $9F93EED4EDCBF2AEF546996B4022FEEE {GStringElement ODRR_opcode;word ODRR_radius;word ODRR_x1;word ODRR_y1;word ODRR_x2;word ODRR_y2;};
struct $9F94D0D13ECDBCDC737C58687021BE04 {HttpMethod method;word wIAP;LaunchType Launcher;TCHAR tcApplicationName[32];TCHAR tcURL[250];TCHAR tcHotListTitle[32];MemHandle mhEntityBody;MemHandle mhExtraHeaders;};
enum $A026D910F7EFA3A968A94B2CD1CE537A {SE_NORMAL = 0x0,SE_OUT_OF_MEMORY = 0x1,SE_PORT_IN_USE = 0x2,SE_PORT_ALREADY_LISTENING = 0x3,SE_SOCKET_IN_USE = 0x4,SE_SOCKET_ALREADY_BOUND = 0x5,SE_SOCKET_NOT_BOUND = 0x6,SE_SOCKET_NOT_LISTENING = 0x7,SE_SOCKET_LISTENING = 0x8,SE_CONNECTION_REFUSED = 0x9,SE_CONNECTION_FAILED = 0xA,SE_CONNECTION_CLOSED = 0xB,SE_NON_UNIQUE_CONNECTION = 0xC,SE_TIMED_OUT = 0xD,SE_CANT_LOAD_DRIVER = 0xE,SE_UNKNOWN_DOMAIN = 0xF,SE_SYSTEM_SHUTDOWN = 0x10,SE_SOCKET_NOT_CONNECTED = 0x11,SE_SOCKET_ALREADY_CLOSED = 0x12,SE_SOCKET_BUSY = 0x13,SE_IMPROPER_CONDITION = 0x14,SE_INFO_NOT_AVAILABLE = 0x15,SE_DOMAIN_REQUIRES_16BIT_PORTS = 0x16,SE_CONNECTION_ERROR = 0x17,SE_MEDIUM_BUSY = 0x18,SE_DESTINATION_UNREACHABLE = 0x19,SE_LINK_FAILED = 0x1A,SE_INTERNAL_ERROR = 0x1B,SE_CLOSE_SEND_NOT_SUPPORTED = 0x1C,SE_BIND_CONFLICT = 0x1D,SE_ALL_PORTS_BUSY = 0x1E,SE_SOCKET_NOT_INTERRUPTIBLE = 0x1F,SE_INTERRUPT = 0x20,SE_PORT_NOT_LISTENING = 0x21,SE_LISTEN_QUEUE_EMPTY = 0x22,SE_SOCKET_CLOSED = 0x23,SE_BUFFER_TOO_SMALL = 0x24,SE_TEMPORARY_ERROR = 0x25,SE_EXCEPTION = 0x26,SE_URGENT = 0x26,SE_NOT_IMPLEMENTED = 0x27,SE_CONNECTION_RESET = 0x28,};
struct $A0A5CED3170D457EB224B2692E8730BA {word ESACA_linkSize;};
struct $A0AD14B7EF6451479CBD2E72E98A8BE6 {dword VTR_start;dword VTR_end;};
struct $A0BE0ADE8A82D1A2A579176C103BECFE {GStringElement ODPCP_opcode;};
enum $A0C62A4D7C575C50F511A7DA59F1E48C {FPHS_OFF = 0x0,FPHS_ON = 0x1,};
struct $A0E9E81AF572760746026ACB902A22F1 {ChunkHandle GCFI_object;optr GCFI_name;GenControlFeatureFlags GCFI_flags;};
struct $A12DC9184D9B6C2153F436F8EAAEDE47 {GrObjElementObjPtr FFLG_field;GrObjElementObjPtr FFLG_self;};
struct $A173515FA11CC65DFBBBBD0797C8C482 {byte msg_status;byte msg_ref;byte msg_params;byte address_format;TCHAR address[22];TCHAR sc_address[22];byte protocol_id;byte dcs;byte time_stamp[7];};
struct $A18DA259CA1F102F6BCB0152FDA8FD6A {word ICA_dataSize;word ICA_dataOffset;optr ICA_data;IrlmpLsapID ICA_lsapID;QualityOfService1 ICA_QoS;};
struct $A18F1653D621FE0A2CA3A029FBAA6994 {MailboxProgressType MPBSPA_type;word MPBSA_cx;word MPBSA_dx;MailboxProgressAction MPBSA_action;};
struct $A1EFF461E5522BBF4027955CC6920D32 {HelpType HTR_helpType;byte HTR_unused1;word HTR_unused2;};
struct $A2747294BEC530F1970AC07CA592BD42 {FileDateAndTime CEPS_startDateTime;FileDateAndTime CEPS_endDateTime;word CEPS_reserveWholeDay;CalendarAlarmStruct CEPS_alarm;CalendarEventDescType CEPS_eventType;CalendarEventRepeatInfo *CEPS_repeatInfo;word CEPS_dataLength;void *CEPS_data;};
struct $A287F9A4DE9B82EFDF4D96BFAF250B92 {CellFunctionParameterFlags CFP_flags;VMFileHandle CFP_file;VMBlockHandle CFP_rowBlocks[517];};
struct $A386899E807CC7CCCE6DDDFD9B6DE130 {byte PD_width;byte PD_height;sbyte PD_hotX;sbyte PD_hotY;byte PD_mask[128];byte PD_image[128];};
struct $A38DAF9AC86988EBFD7623546187F3E8 {WWFixedAsDWord FNPSC_FontSize;byte FNPSC_diffs;};
struct $A39B934952F7CADDFF5A88FEA9BC280D {word VLTGRPRS_unused;sdword VLTGRPRS_yPosition;word VLTGRPRS_height;};
enum $A3A78A9B23B572A589ADDD9A5B47ED7A {UIEP_NONE = 0x0,UIEP_TOP_PRIMARY = 0x1,UIEP_LOWER_LEFT = 0x2,};
enum $A42602A6880D3C60080093A44C74C3CA {GGSEC_HOTSPOT = 0x4200,};
struct $A463903C7A3D1C06B56EA3ECFFD4185D {NameArrayElement GSE_meta;word GSE_baseStyle;StyleElementFlags GSE_flags;byte GSE_reserved[6];GrObjStylePrivateData GSE_privateData;word GSE_areaAttrToken;word GSE_lineAttrToken;};
struct $A53635A00269170FAED14DD92C376AAD {Handle DLB_blockHandle;DiscoveryBlockFlags DLB_flags;byte DLB_lastIndex;};
struct $A54A1F749D3BEB8CCA06817818E762F8 {dword PSR_width;dword PSR_height;PageLayout PSR_layout;PCMarginParams PSR_margins;};
enum $A566544E3B975189101F97C7D8B73C09 {APT_INTERNET = 0x1,APT_TERMINAL = 0x2,APT_TELNET = 0x3,APT_APP_LOCAL = 0x4,APT_CALLING_CARD = 0x5,APT_REMOTE_MAILBOX = 0x6,};
struct $A59367B5C0C700B9530A1AC4F222CF95 {ElementArrayHeader TEAH_meta;TextArrayType TEAH_arrayType;byte TEAH_unused;};
struct $A5AAC7F6984AD5D1417A55A4CA10995B {VMChainLink VMLAGOR_link;GrObjEntryPointRelocation VMLAGOR_relocation;};
struct $A5B759A9965475D27EEB61E3203E0D35 {CallbackType C_callbackType;union $A5B759A9965475D27EEB61E3203E0D35::$94A9261C007FBE6F919F1CDAE8D8CE24 C_params;word C_returnDS;C_CallbackUnion C_u;byte C_align;};
union $A5B759A9965475D27EEB61E3203E0D35::$94A9261C007FBE6F919F1CDAE8D8CE24 {ParserParameters *CP_params;FormatParameters *CF_params;EvalParameters *CE_params;DependencyParameters *DP_params;};
struct $A5D1A54A8D32737C2E30FE84F1A4805B {char FPP_fileName[36];char FPP_path[198];word FPP_diskHandle;word FPP_file;word FPP_unit;};
struct $A5DBF761831A36C8D79644BF6072E89D {word CQA_numFormats;optr CQA_owner;TransferBlockID CQA_header;};
enum $A6102D84F94E2BE359C99F817E40139E {SIT_JOB_INFO = 0x0,SIT_QUEUE_INFO = 0x2,SIT_JOB_PARAMETERS = 0x4,};
struct $A61D4D4A0CB225AB78F1FCE7A7122639 {CustomDialogType ND_dialogType;byte ND_unused1;word ND_unused2;optr ND_dialog;};
struct $A61F5DA3742C10D8A03966B4F1367566 {DocumentInfo VCD_documentInfo;optr VCD_viewerOD;};
struct $A62E1B47EFFEE540783C35223A69A53F {word message;word unused;optr destOD;};
struct $A64236AF2067F22AAD9C817BE85884A5 {GStringElement OSLCM_opcode;ColorMapMode OSLCM_mode;};
struct $A660E0D49FDFF12AFEBF18CD143E0BFF {dword VTGLOAFP_line;dword VTGLOAFP_offset;LineFlags VTGLOAFP_flags;};
enum $A6853A487064880F72C2535E53D874C9 {TTPIC_CONNECT_INDICATION = 0x14,TTPIC_CONNECT_CONFIRMATION = 0x16,TTPIC_DISCONNECT_INDICATION = 0x18,TTPIC_DATA_INDICATION = 0x1A,TTPIC_STATUS_CONFIRMATION = 0x1C,};
enum $A77A1A600597C7BC9573EDC19D68BC05 {DTF_LONG = 0x0,DTF_LONG_CONDENSED = 0x1,DTF_LONG_NO_WEEKDAY = 0x2,DTF_LONG_NO_WEEKDAY_CONDENSED = 0x3,DTF_SHORT = 0x4,DTF_ZERO_PADDED_SHORT = 0x5,DTF_MD_LONG = 0x6,DTF_MD_LONG_NO_WEEKDAY = 0x7,DTF_MD_SHORT = 0x8,DTF_MY_LONG = 0x9,DTF_MY_SHORT = 0xA,DTF_YEAR = 0xB,DTF_MONTH = 0xC,DTF_DAY = 0xD,DTF_WEEKDAY = 0xE,DTF_HMS = 0xF,DTF_HM = 0x10,DTF_H = 0x11,DTF_MS = 0x12,DTF_HMS_24HOUR = 0x13,DTF_HM_24HOUR = 0x14,};
struct $A77C363068AD8254F0ED1A730274404E {TextStyle RCM_textStyleSet;TextStyle RCM_textStyleClear;word RCM_fontSize;dword RCM_topTextSource;dword RCM_iconBitmapSource;ComplexMonikerSourceType RCM_topTextSourceType;ComplexMonikerSourceType RCM_iconBitmapSourceType;word RCM_iconBitmapSize;RCMOverwrite RCM_overwrite;};
struct $A783B51E3CF7457E26B1D9B09E06CE46 {word VDCH_dataType;void (__pascal *VDCH_handler)(MemHandle mh, ChunkHandle chnk, VarDataEntry *extraData, word dataType, void *handlerData);};
struct $A7AAC87AA0948ED224269784BFF17566 {GStringElement OSAP_opcode;GraphicPattern OSAP_pattern;};
struct $A7E27671D1B31B35CC8E8784EF24B630 {DiscoveryLogFlags DL_flags;dword DL_devAddr;DiscoveryInfo DL_info;};
struct $A8144B371B38CDC1895DF843579E78AA {GStringElement OSTP_opcode;GraphicPattern OSTP_pattern;};
struct $A8320C7C7191E496A620724A4324753C {VMBlockHandle msgcentrelistArray;word numOfIt;};
struct $A87388350C1FEA77FBE5C4E4FAF49351 {dword UADF_flags;word UADF_extraflags;};
struct $A880F442CEF644CECBB1BBDE87678B74 {byte EED_errorCode;};
enum $A8904477F74D910E307441D7A5DD1647 {FRAT_SMS = 0x0,FRAT_FAX = 0x1,FRAT_MAIL = 0x2,FRAT_OUTBOX = 0x3,FRAT_MISSED_CALLS = 0x4,};
struct $A8B7DB216E4C8DD375A9EB3796062379 {FontID NFC_fontID;byte NFC_diffs;};
struct $A8F5F5581CB79FD0103E4324FAFEFA42 {word PN_major;word PN_minor;};
enum $A92B158753A91318E938831BF2ACA23A {SCEP_CLOSED = 0x0,SCEP_WFCC = 0x1,SCEP_WFCR = 0x2,SCEP_OPEN = 0x3,SCEP_SREQ = 0x4,SCEP_WRSP = 0x5,SCEP_RRSP = 0x6,SCEP_IRSP = 0x7,SCEP_RREQ = 0x8,SCEP_EXEC = 0x9,SCEP_SRSP = 0xA,SCEP_IREQ = 0xB,};
struct $A94FD9C701DAFCC68946591D2A7381E5 {word SEFP_stacksSeg;word SEFP_opStackPtr;word SEFP_argStackPtr;word SEFP_funcID;word SEFP_nArgs;};
struct $A9539705177B28D5AB39DFBD4FFC1531 {sdword PD_x;sdword PD_y;};
enum $A972662BCE1EC8B4640067EF15BC010B {GSRT_COMPLETE = 0x0,GSRT_ONE = 0x1,GSRT_MISC = 0x2,GSRT_LABEL = 0x3,GSRT_ESCAPE = 0x4,GSRT_NEW_PAGE = 0x5,GSRT_XFORM = 0x6,GSRT_OUTPUT = 0x7,GSRT_ATTR = 0x8,GSRT_PATH = 0x9,GSRT_FAULT = 0xFFFF,};
enum $A9DA9023B6FBA41BA3230240B6602CF9 {GCMI_MIN_X = 0x0,GCMI_MIN_X_ROUNDED = 0x1,GCMI_MIN_Y = 0x2,GCMI_MIN_Y_ROUNDED = 0x3,GCMI_MAX_X = 0x4,GCMI_MAX_X_ROUNDED = 0x5,GCMI_MAX_Y = 0x6,GCMI_MAX_Y_ROUNDED = 0x7,};
enum $AA08ACBA0B0A168C6C117BF4AAF6B961 {CSDBT_FILE_OVERWRITE_WARNING = 0x0,CSDBT_CANNOT_COPY_TO_FILE = 0x1,CSDBT_CANNOT_COPY_FROM_FILE = 0x2,CSDBT_DEST_FILE_OPEN_BY_ANOTHER_APP = 0x3,CSDBT_CANNOT_FIND_DRIVE = 0x4,CSDBT_CANNOT_FIND_DIRECTORY = 0x5,CSDBT_CANNOT_FIND_DISK_IN_REMOTE_DRIVE = 0x6,CSDBT_DIRECTORY_DOES_NOT_EXIST_CREATE_IT = 0x7,CSDBT_DIRECTORY_CREATE_ERROR = 0x8,CSDBT_CANNOT_ESTABLISH_CONNECTION = 0x9,CSDBT_CANNOT_ESTABLISH_MMC_CONNECTION = 0xA,CSDBT_CONNECTION_MEDIUM_ALREADY_IN_USE = 0xB,CSDBT_OPERATION_ABORTED = 0xC,CSDBT_TRANSLATION_ERROR = 0xD,CSDBT_ILLEGAL_SETTING = 0xE,CSDBT_CONNECTION_LOST = 0xF,CSDBT_REPLACE_EXISTING_SOFTWARE = 0x10,CSDBT_REPLACE_UNRELATED_SOFTWARE = 0x11,CSDBT_REPLACE_EXISTING_DOCUMENT = 0x12,CSDBT_WILL_NEED_TO_REBOOT = 0x13,CSDBT_PACKAGE_OLD_SO_NOT_INSTALLED = 0x14,CSDBT_PACKAGE_NOT_COMPATIBLE = 0x15,CSDBT_CANNOT_USE_INSTALL_BATCH_FILE_FOR_MORE_THAN_ONE_INSTALL = 0x16,CSDBT_SOURCE_FILE_OPEN_BY_ANOTHER_APP = 0x17,CSDBT_NULL_SETTING = 0x18,CSDBT_REMOTE_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE = 0x19,CSDBT_OUT_OF_MEMORY = 0x1A,CSDBT_DATA_CALL_IN_PROGRESS = 0x1B,CSDBT_MMC_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE = 0x1C,CSDBT_THIS_IS_THE_LAST_ONE = 0x1D,};
enum $AA2971232B1DB23A811646E0AB6A9E6A {CQGS_BUSY = 0x0,CQGS_FAILED_IACP_CONNECTION = 0x1,CQGS_FAILED = 0x2,CQGS_SUCCESS = 0x3,};
struct $AA4467946324040D0298D65EEADC92F9 {GStringElement ODRRT_opcode;word ODRRT_radius;word ODRRT_x2;word ODRRT_y2;};
struct $AA4E0452FE67E7CE5A765C2583A2474D {word GSA_width;word GSA_height;word GSA_unused;word GSA_count;};
struct $AABBEB2C9D9C7470EE073C5E6DAE101C {PointDWFixed OT_center;WWFixed OT_width;WWFixed OT_height;WWFixed OT_parentWidth;WWFixed OT_parentHeight;GrObjTransMatrix OT_transform;};
struct $AAE58E71F978A2F2D2A848C0DC47CB45 {PointDWFixed LMD_location;byte LMD_buttonInfo;UIFunctionsActive LMD_uiFunctionsActive;};
enum $AAE9C0E016A413A2263063F4FA1EF93F {CPT_BYTE_COUNT = 0x0,};
enum $AB170257BA29E640C758ED9DC28A3816 {RC_SENT_CALLS = 0x0,RC_RECEIVED_CALLS = 0x2,RC_MISSED_CALLS = 0x4,RC_SENT_FAXES = 0x6,RC_RECEIVED_FAXES = 0x8,RC_SENT_SMS = 0xA,RC_RECEIVED_SMS = 0xC,};
struct $AB2F8C720A56E8ECF4BAEE937A6C0099 {GStringElement OSWCP_opcode;RegionFillRule OSWCP_rule;PathCombineType OSWCP_flags;};
struct $AB76DA3AEE4EA08820449620296D0C9A {word year;byte month;byte date;wchar longName[9];wchar shortName[5];};
struct $ABAEBE426A65CEE0E41F991D336AF157 {word FIS_signature;FileHandle FIS_userDefFmtArrayFileHan;VMBlockHandle FIS_userDefFmtArrayBlkHan;word FIS_childBlk;word FIS_chooseFmtListChunk;word FIS_features;byte FIS_editFlag;word FIS_curSelection;word FIS_curToken;FormatParams FIS_curParams;};
struct $ABD8EBAA064A505E51C1A4ADDD592780 {word NPSC_firstPage;word NPSC_lastPage;word NPSC_currentPage;};
enum $ACD65A8E70DEE0751A1FB96F5A959E73 {TCO_COPY = 0x0,TCO_RETURN_TRANSFER_FORMAT = 0x1,TCO_RETURN_TRANSFER_ITEM = 0x2,TCO_RETURN_NOTHING = 0x3,};
enum $ACFD472A21D2348D12A5675FC335F578 {CTLDE_NO_ERROR = 0x0,CTLDE_ERROR = 0x1,CTLDE_TRANSLATION_NOT_SUPPORTED = 0x2,CTLDE_INVALID_FORMAT = 0x3,CTLDE_SOURCE_FILE_EMPTY = 0x4,CTLDE_FILE_OPEN = 0x5,CTLDE_FILE_READ = 0x6,CTLDE_FILE_WRITE = 0x7,CTLDE_FILE_CREATE = 0x8,CTLDE_FILE_TOO_LARGE = 0x9,CTLDE_DISK_FULL = 0xA,CTLDE_OUT_OF_MEMORY = 0xB,CTLDE_CANCELED = 0xC,};
struct $AD28821EA4EB2D2D15CD4F60E6094D5E {VisTextRange RWHWRD_range;HWRContext RWHWRD_context;};
struct $ADB209ACCB3C519D42CDEDC0D836E785 {word DOARDO_reverseDrawOrder;word DOARDO_drawOrder;};
enum $ADC9A944F1FE6DE7FE5938C088503ABD {TT_NO_TONE = 0x0,TT_FIXED_TONE = 0x1,TT_SHORT_TONE = 0x2,TT_LONG_TONE = 0x3,TT_UNCHECKED = 0xFA,};
enum $ADCFDE7ABA2A00DE3730A3013FECF134 {FUNCTION_ID_ABS = 0x0,FUNCTION_ID_ACOS = 0x1,FUNCTION_ID_ACOSH = 0x2,FUNCTION_ID_AND = 0x3,FUNCTION_ID_ASIN = 0x4,FUNCTION_ID_ASINH = 0x5,FUNCTION_ID_ATAN = 0x6,FUNCTION_ID_ATAN2 = 0x7,FUNCTION_ID_ATANH = 0x8,FUNCTION_ID_AVG = 0x9,FUNCTION_ID_CHAR = 0xA,FUNCTION_ID_CHOOSE = 0xB,FUNCTION_ID_CLEAN = 0xC,FUNCTION_ID_CODE = 0xD,FUNCTION_ID_COLS = 0xE,FUNCTION_ID_COS = 0xF,FUNCTION_ID_COSH = 0x10,FUNCTION_ID_COUNT = 0x11,FUNCTION_ID_CTERM = 0x12,FUNCTION_ID_DATE = 0x13,FUNCTION_ID_DATEVALUE = 0x14,FUNCTION_ID_DAY = 0x15,FUNCTION_ID_DDB = 0x16,FUNCTION_ID_ERR = 0x17,FUNCTION_ID_EXACT = 0x18,FUNCTION_ID_EXP = 0x19,FUNCTION_ID_FACT = 0x1A,FUNCTION_ID_FALSE = 0x1B,FUNCTION_ID_FIND = 0x1C,FUNCTION_ID_FV = 0x1D,FUNCTION_ID_HLOOKUP = 0x1E,FUNCTION_ID_HOUR = 0x1F,FUNCTION_ID_IF = 0x20,FUNCTION_ID_INDEX = 0x21,FUNCTION_ID_INT = 0x22,FUNCTION_ID_IRR = 0x23,FUNCTION_ID_ISERR = 0x24,FUNCTION_ID_ISNUMBER = 0x25,FUNCTION_ID_ISSTRING = 0x26,FUNCTION_ID_LEFT = 0x27,FUNCTION_ID_LENGTH = 0x28,FUNCTION_ID_LN = 0x29,FUNCTION_ID_LOG = 0x2A,FUNCTION_ID_LOWER = 0x2B,FUNCTION_ID_MAX = 0x2C,FUNCTION_ID_MID = 0x2D,FUNCTION_ID_MIN = 0x2E,FUNCTION_ID_MINUTE = 0x2F,FUNCTION_ID_MOD = 0x30,FUNCTION_ID_MONTH = 0x31,FUNCTION_ID_N = 0x32,FUNCTION_ID_NA = 0x33,FUNCTION_ID_NOW = 0x34,FUNCTION_ID_NPV = 0x35,FUNCTION_ID_OR = 0x36,FUNCTION_ID_PI = 0x37,FUNCTION_ID_PMT = 0x38,FUNCTION_ID_PRODUCT = 0x39,FUNCTION_ID_PROPER = 0x3A,FUNCTION_ID_PV = 0x3B,FUNCTION_ID_RANDOM_N = 0x3C,FUNCTION_ID_RANDOM = 0x3D,FUNCTION_ID_RATE = 0x3E,FUNCTION_ID_REPEAT = 0x3F,FUNCTION_ID_REPLACE = 0x40,FUNCTION_ID_RIGHT = 0x41,FUNCTION_ID_ROUND = 0x42,FUNCTION_ID_ROWS = 0x43,FUNCTION_ID_SECOND = 0x44,FUNCTION_ID_SIN = 0x45,FUNCTION_ID_SINH = 0x46,FUNCTION_ID_SLN = 0x47,FUNCTION_ID_SQRT = 0x48,FUNCTION_ID_STD = 0x49,FUNCTION_ID_STDP = 0x4A,FUNCTION_ID_STRING = 0x4B,FUNCTION_ID_SUM = 0x4C,FUNCTION_ID_SYD = 0x4D,FUNCTION_ID_TAN = 0x4E,FUNCTION_ID_TANH = 0x4F,FUNCTION_ID_TERM = 0x50,FUNCTION_ID_TIME = 0x51,FUNCTION_ID_TIMEVALUE = 0x52,FUNCTION_ID_TODAY = 0x53,FUNCTION_ID_TRIM = 0x54,FUNCTION_ID_TRUE = 0x55,FUNCTION_ID_TRUNC = 0x56,FUNCTION_ID_UPPER = 0x57,FUNCTION_ID_VALUE = 0x58,FUNCTION_ID_VAR = 0x59,FUNCTION_ID_VARP = 0x5A,FUNCTION_ID_VLOOKUP = 0x5B,FUNCTION_ID_WEEKDAY = 0x5C,FUNCTION_ID_YEAR = 0x5D,FUNCTION_ID_FILENAME = 0x5E,FUNCTION_ID_PAGE = 0x5F,FUNCTION_ID_PAGES = 0x60,FUNCTION_ID_DEGREES = 0x61,FUNCTION_ID_RADIANS = 0x62,FUNCTION_ID_FIRST_EXTERNAL_FUNCTION = 0x8000,};
struct $AE1AF3290E4BA2E174378E47B17F48DD {FileLongName DFCP_name;DiskHandle DFCP_diskHandle;PathName DFCP_path;optr DFCP_display;optr DFCP_document;};
enum $AE1CA976E960DCD751C4960CE71413AA {CMD_NO_COMMAND = 0x0,CMD_Q_RIMG = 0x1,CMD_Q_RINF = 0x2,CMD_Q_RCMD = 0x3,CMD_Q_UNDEFINED = 0x4,CMD_P_RPL = 0x5,CMD_ERR = 0x6,};
struct $AE7568716124EDFDE6255A098EC4429C {GStringElement OSTA_opcode;TextAttr OSTA_attr;};
enum $AE833769627E9B9B64683B5A8527770E {QE_TIMEOUT = 0x0,QE_DEAD = 0x2,QE_TOO_BIG = 0x4,};
struct $AEA14A8B1C8F4173CDF01FD092092B45 {VisTextCharAttrFlags VTCAD_diffs;VisTextExtendedStyles VTCAD_extendedStyles;TextStyle VTCAD_textStyles;byte VTCAD_unused;};
struct $AF03D409A3420F40A78DDCB016A34F67 {ArcCloseType TPRATP_close;PointWWFixed TPRATP_delta2;PointWWFixed TPRATP_delta3;};
enum $AF1C3ED82EC9AF2D9DAD3F527610BFCA {CES_NO_ERROR = 0x0,CES_FILE_ERROR = 0x1,CES_MMC_REMOVED_ERROR = 0x2,};
struct $AF4BD1587849EFB0B00E8132047A4D64 {word ENMISUMP_menuCount;};
struct $AF9BB2DF8ACB21B0A4E6EB42E2907C14 {GStringElement OSTM_opcode;SysDrawMask OSTM_mask;};
struct $AFAC1D9E66E4996B4643E526AD5EC3C3 {StyleSheetElementHeader GOBGOBLAE_styleElement;byte GOBLAE_r;byte GOBLAE_g;byte GOBLAE_b;LineEnd GOBLAE_end;LineJoin GOBLAE_join;WWFixed GOBLAE_width;SystemDrawMask GOBLAE_mask;LineStyle GOBLAE_style;MixMode GOBLAE_drawMode;WWFixed GOBLAE_miterLimit;GrObjLineAttrElementType GOBLAE_laeType;GrObjLineAttrInfoRecord GOBLAE_lineInfo;byte GOBLAE_arrowheadAngle;byte GOBLAE_arrowheadLength;word GOBLAE_reserved;};
struct $AFCE29F681AE4D716A48AC5A66F295D8 {PointWWFixed HL_origin;WWFixed HL_deltaX;WWFixed HL_deltaY;WWFixed HL_angle;ColorQuad HL_color;word HL_numDashes;};
struct $AFEE77A2642C4F5E537C2318E6AA3411 {sword WAAH_low;sbyte WAAH_high;};
enum $B005D40A4D99760044A8955F64F45611 {UR_OK = 0x0,UR_ADD = 0x1,UR_NFD = 0x2,UR_FND = 0x3,UR_CER = 0x4,UR_WORD_ALREADY_ADDED = 0x5,UR_IER = 0x6,UR_DER = 0x7,UR_LER = 0x8,UR_PER = 0x9,UR_SER = 0xA,UR_UER = 0xB,UR_USER_DICT_FULL = 0xC,UR_GER = 0xD,UR_DNE = 0xE,UR_INV = 0xF,UR_FER = 0x10,UR_HER = 0x11,};
struct $B07AD17A470708DA266F4A460421101D {MemHandle CMSWDBN_contactsBlock;word CMSWBDN_numContacts;MemHandle CMSWBDN_dbNamesBlock;word CMSWBDN_numDBs;};
struct $B0A91D2606B675EEB02554EE3E2F82A6 {word WWF_frac;sword WWF_int;};
struct $B0B392FA1AD346CB7A31E49DCFB66F1D {WWFixed G_x;WWFixed G_y;};
struct $B0D3C9703FC6FE41386DAFE24FFA6FF3 {NameArrayElement SEH_meta;word SEH_baseStyle;StyleElementFlags SEH_flags;byte SEH_reserved[6];dword SEH_privateData;};
enum $B19A794A42962187F2659A8495EF1E92 {FPBR_9600 = 0x0,FPBR_19200 = 0x1,FPBR_57600 = 0x2,FPBR_115200 = 0x3,};
struct $B221F41118F629C3B3E591BBC9B9FBBA {FloatFloatToAsciiParams_Union FP_params;char FP_formatName[41];word FP_nameHan;word FP_nameOff;word FP_listEntryNum;word FP_signature;};
struct $B2A59BFF5A61CC14EAA1A6C638E884F6 {GStringElement ODHL_opcode;word ODHL_x1;word ODHL_y1;word ODHL_x2;};
struct $B2B1DF48CBF906F858C9E4B377B00785 {word FLCI_noItems;word FLCI_noMatch;};
struct $B2E4EC84B0B861062964EA9494353CAD {word NLE_token;byte NLE_flags;byte NLE_unused;word NLE_textLength;word NLE_defLength;};
enum $B3091C5DAF7254A51DC990DAE453836F {FVL_1 = 0x1,FVL_2 = 0x2,FVL_3 = 0x3,FVL_4 = 0x4,FVL_5 = 0x5,};
enum $B358D6C4BE2811C5B9829738348A0FD5 {CCLE_LEGAL = 0x0,CCLE_STRING_NULL = 0x1,CCLE_STRING_TOO_LONG = 0x2,CCLE_DOS_DEVICE_NAME_CONFLICT = 0x3,CCLE_ONE_LETTER_DRIVE_NAME = 0x4,CCLE_ILLEGAL_DOS_DRIVE_NAME = 0x5,CCLE_ILLEGAL_DOS_DIR_PATH = 0x6,CCLE_ILLEGAL_DOS_FILE_PATH = 0x7,CCLE_ILLEGAL_DOS_FILE_NAME = 0x8,};
struct $B3C85D0371368E9A951B0BBC30E5715B {optr NVO_view;};
struct $B435ABB4A199F223F9C9C11715854B63 {GStringElement OSCAP_opcode;GraphicPattern OSCAP_pattern;word OSCAP_size;};
struct $B43E20E8877E2E1725929493BD4637F0 {RecordID FDBM_recordID;VMBlockHandle FDBM_fieldNameElementArray;VMBlockHandle FDBM_mainArray;VMBlockHandle FDBM_secretArray;FoamDBFlags FDBM_flags;word FDBM_reserved;};
struct $B581074FA507C26FA8AC074C918811EB {GenViewDimensionAttrs DA_horizAttrs;GenViewDimensionAttrs DA_verAttrs;};
struct $B5F213066AFE1A76AB6E13EE63FBA48B {char *textPtr;word funcToken;word maxChars;char *resultPtr;word numWritten;};
struct $B5F6D2FE3E92EF4E70784243F8DABE0F {OperatorType EOD_opType;};
struct $B631CCB4BAD9B8AC2A5BEB40F7F3F82A {dword ILI_irlapAddr;IrlmpLsapSel ILI_lsapSel;byte ILI_unused;};
struct $B64AF5E7AAF8AF2810980820095129E1 {MachineID RequestorMID;MachineID ResponderMID;word RequestorPID;word ResponderPID;word CmdID;word wUserDataLength;};
struct $B6635FD49EC55FAECA4767B81E912DC7 {byte PD_width;byte PD_height;sbyte PD_hotX;sbyte PD_hotY;byte PD_mask[32];byte PD_image[32];};
enum $B673D35522669009ED40C2BBAA348CE6 {TIMER_ROUTINE_ONE_SHOT = 0x0,TIMER_ROUTINE_CONTINUAL = 0x2,TIMER_EVENT_ONE_SHOT = 0x4,TIMER_EVENT_CONTINUAL = 0x6,TIMER_MS_ROUTINE_ONE_SHOT = 0x8,TIMER_EVENT_REAL_TIME = 0xA,TIMER_ROUTINE_REAL_TIME = 0xC,};
struct $B6881A1E52EC267CC7997F7E2B13C129 {GStringElement OFBP_opcode;word OFBP_x;word OFBP_y;word OFBP_ptr;};
struct $B6BC7092A32A07BD39CF22F88C42BD81 {MeasurementType WMT_measurementType;AppMeasurementType WMT_appMeasurementType;};
struct $B6E25340281BE6F677280929F21592AD {optr GOOMD_actionGrObj;PointDWFixed GOOMD_origMousePt;GrObjHandleSpecification GOOMD_oppositeHandle;GrObjHandleSpecification GOOMD_grabbedHandle;WWFixed GOOMD_initialAngle;PointDWFixed GOOMD_oppositeAnchor;WWFixed GOOMD_oppositeInitialAngle;};
struct $B6FA7730A497E8C9626B02F109AEE89D {char PSI_stringBuf[64];word PSI_stringLength;PrinterDriverType PSI_driverType;};
struct $B737B3C29A9DA263FEC17CFA3016AB61 {Rectangle IDBF_bounds;VMFileHandle IDBF_VMFile;DBGroupAndItem IDBF_DBGroupAndItem;word IDBF_DBExtra;};
enum $B7721C107B1CE5AB932BB7835712916B {SB_115200 = 0x1,SB_57600 = 0x2,SB_38400 = 0x3,SB_19200 = 0x6,SB_14400 = 0x8,SB_9600 = 0xC,SB_7200 = 0x10,SB_4800 = 0x18,SB_3600 = 0x20,SB_2400 = 0x30,SB_2000 = 0x3A,SB_1800 = 0x40,SB_1200 = 0x60,SB_600 = 0xC0,SB_300 = 0x180,};
struct $B7BE53A12C4DBB45D702722F73B384A1 {MachineID RequestorMID;MachineID ResponderMID;word RequestorPID;word ResponderPID;word CmdID;};
enum $B8313B70574F61A2CF1308AE53933D46 {ME_SUCCESS = 0x0,ME_NOT_ENOUGH_MEMORY = 0x1,ME_CANNOT_LOAD_DATA_DRIVER = 0x2,ME_CANNOT_LOAD_TRANSPORT_DRIVER = 0x3,ME_UNABLE_TO_CREATE_TRANSMIT_THREAD = 0x4,ME_CANNOT_ENQUEUE_MESSAGE = 0x5,ME_USER_CANCELED = 0x6,ME_LOST_CONNECTION = 0x7,ME_CANNOT_CREATE_MESSAGE_FILE = 0x8,ME_CANNOT_RESIZE_MBOX_REF = 0x9,ME_CANNOT_SAVE_MESSAGE_FILE = 0xA,ME_CANCELLED_BY_RECEIVER = 0xB,ME_MESSAGE_BLOCKS_ARE_MISMATCHED = 0xC,ME_DATA_DRIVER_CANNOT_STORE_MESSAGE_BODY = 0xD,ME_INSUFFICIENT_DISK_SPACE = 0xE,ME_CANNOT_CONNECT = 0xF,ME_ADDRESS_INVALID = 0x8000,ME_DATA_DRIVER_CANNOT_ACCESS_MESSAGE_BODY = 0x8001,ME_UNSUPPORTED_BODY_FORMAT = 0x8002,ME_MESSAGE_BODY_INVALID = 0x8003,ME_INVALID_MESSAGE = 0x8004,ME_REPLY_ADDRESS_NOT_AVAILABLE = 0x8005,ME_DESTINATION_APPLICATION_UNKNOWN = 0x8006,ME_UNKNOWN_DISK_ERROR = 0x8007,ME_APP_REF_BUF_TOO_SMALL = 0x8008,ME_CANNOT_OPEN_MESSAGE_FILE = 0x8009,ME_CANNOT_READ_MESSAGE_FILE = 0x800A,ME_CAN_NEVER_CONNECT = 0x800B,};
struct $B8316F977F9964BFB125831461963212 {byte RGBQ_blue;byte RGBQ_blank;byte RGBQ_red;byte RGBQ_green;};
struct $B837F628F667B32FA39EA0D1E0064B94 {word DOR_status;DocumentHandle DOR_docHandle;word unused1;word unused2;};
struct $B900BDE842A7D36F1E13BAD9F29B93E8 {dword PCDSP_width;dword PCDSP_height;};
struct $B93DB10FF8B498FA92BC382ABDBD9FFA {GStringElement OADT_opcode;sdword OADT_x;sdword OADT_y;};
struct $B94B5DB0C03899103184BBE28A395165 {dword IDBDI_dword1;dword IDBDI_dword2;word IDBDI_word1;};
struct $B9CA92C46C4C79E5BC1C07B139A82AA1 {GeodeAttrs GFSGA_match;GeodeAttrs GFSGA_mismatch;};
struct $BA80539C52758F402D353C8FCDCC7E1C {VolumeName TDSS_volumeName;MediaType TDSS_mediaType;TCHAR TDSS_name[1];};
enum $BA8846BAD6ACFF8D252C4AB2697E5C35 {GEODE_TYPE_APPLICATION = 0x1,GEODE_TYPE_LIBRARY = 0x2,GEODE_TYPE_DRIVER = 0x3,};
enum $BA9BEDDE95EF8B884DD35A79F3AFC73C {MPBT_INBOX = 0x0,MPBT_OUTBOX = 0x1,};
struct $BA9E1B6EEE3C4DFDF6DFBD8966DCC7D2 {GStringElement ODCV_opcode;sword ODCV_x1;sword ODCV_y1;sword ODCV_x2;sword ODCV_y2;sword ODCV_x3;sword ODCV_y3;sword ODCV_x4;sword ODCV_y4;};
enum $BAA0B5F1DB1BCC07071E1163FBE13929 {IC_RET_OK = 0x0,IC_RET_ALTERNATE = 0x2,IC_RET_INVALID = 0x3,IC_RET_PRE_PROC = 0x4,IC_RET_ERR = 0x8,IC_RET_FOUND = 0xA,IC_RET_NOT_FOUND = 0xB,IC_RET_USR_BRK = 0xE,IC_RET_NOMEM = 0xF,IC_RET_NO_OPEN = 0x10,IC_RET_WILD = 0x11,IC_RET_HYP_ALT = 0x13,IC_RET_IGNORED = 0x14,IC_RET_NO_USER_DICT = 0x15,IC_RET_BAD_LANG = 0x16,};
enum $BAA57D29C5CB51255352E7B021838F86 {FDBAT_ENTRY_ADDED = 0x0,FDBAT_ENTRY_CHANGED = 0x1,FDBAT_ENTRY_DELETED = 0x2,FDBAT_DB_CHANGED = 0x3,FDBAT_DB_CLOSED = 0x4,FDBAT_DB_ADDED = 0x5,FDBAT_DB_REMOVED = 0x6,FDBAT_DB_SWITCHED_DBS = 0x7,};
struct $BAA8E5DC9E21B9ACFCA5B1D69220F9DF {ToneTitle TN_title;ToneType TN_type;ToneInfo TN_info;};
struct $BB31F59B9755F4A27178037F31031AE1 {SpreadsheetSeriesFillType SRP_type;SpreadsheetSeriesFillFlags SRP_flags;FloatNum SRP_stepValue;};
struct $BB54E0DE9390DCB7162F987AC609444B {word numArgs;word funcID;byte errorOccurred;byte error;};
struct $BBD33EB3D25AB0CC98977F98B91EA473 {word OB_width;word OB_heigth;BMCompact OB_compact;BMType OB_type;};
struct $BBE63DCE1E6A1D5C713C8BC8D93F29E9 {optr TGI_object;};
struct $BC30A9EDF39495CE3EB028A547280621 {word SFD_manufact;SampleFormat SFD_format;word SFD_rate;DACPlayFlags SFD_playFlags;};
enum $BC6932EC74D721FFF786605AD233AF6E {PARALLEL_LPT1 = 0x0,PARALLEL_LPT2 = 0x2,PARALLEL_LPT3 = 0x4,PARALLEL_LPT4 = 0x6,};
struct $BC7047E309FA1E5DAB26A04584525EDA {GStringElement ODTO_opcode;word ODTO_x1;word ODTO_y1;optr ODTO_optr;};
struct $BC90046652976EA6A321DF658EE500A5 {byte VTWCMR_redOrIndex;byte VTWCMR_mapMode;};
enum $BC9211666FA404E1B11DD473B05D5C23 {SMBC_ON = 0x1,SMBC_OFF = 0x31,SMBC_INDEX = 0x32,};
struct $BC98AB8D7067BB04DA74E492F0AC1495 {GeosFileHeaderFlags GFSFHF_match;GeosFileHeaderFlags GFSFHF_mismatch;};
struct $BC9A41D5D025928CB442176B80B280C0 {word MBET_numEscapes;MBEscapeInfo MBET_escapes[];};
struct $BCA952BE72D47A9F24494B0C6D387785 {GStringElement OATr_opcode;WWFixed OATr_elem11;WWFixed OATr_elem12;WWFixed OATr_elem21;WWFixed OATr_elem22;WWFixed OATr_elem31;WWFixed OATr_elem32;};
enum $BCAE249C3B13548462F7FA00AA7C4C0E {CERT_NONE = 0x0,CERT_SPECIAL_TONE = 0x1,};
struct $BCEC6C2735959816C4DA1205097FAC86 {GenViewDimensionAttrs DATSC_attrsToSet;GenViewDimensionAttrs DATSC_attrsToClear;};
struct $BD0038A59F4DE2995F9BE87649D3EBBD {WWFixed GOSD_xDegrees;WWFixed GOSD_yDegrees;};
enum $BD26BA738CB61C7296CC4271CFBCE7B4 {IRV_NO_REPLY = 0x0,IRV_NO_INK = 0x1,IRV_INK_WITH_STANDARD_OVERRIDE = 0x2,IRV_DESIRES_INK = 0x3,IRV_WAIT = 0x4,};
struct $BD819FB74B418D0315DD30110552C02E {RGBDelta CT_data[125];};
struct $BDB6389EDDAC486634F95C3B3803658D {word BP_vmFileHandle;optr BP_firstOD;optr BP_secondOD;optr BP_outputOD;word BP_outputMessage;word BP_firstPct;word BP_lastPct;word BP_numSteps;};
struct $BDEFA36AFB38E6D8592BEF7A4798F546 {GenControlScalableUICommand GCSUIE_command;WordFlags GCSUIE_appFeature;WordFlags GCSUIE_newFeatures;};
struct $BE09A590551AAFC71EB9AD887BFB9B94 {FloatFloatToDateTimeFlags FFA_dateTimeFlags;word FFA_year;byte FFA_month;byte FFA_day;byte FFA_weekday;byte FFA_hours;byte FFA_minutes;byte FFA_seconds;};
struct $BE39F94D367E3E42DF2D27C6A310FA55 {VisMoniker VMWGS_common;word VMWGS_height;};
enum $BE5313DA5CDC4E8087A9EB88C9DFCAE4 {FWTS_OFF = 0x0,FWTS_ON = 0x1,};
struct $BE54E98F5B86A956B49E80FB9525591A {GStringElement ODATPT_opcode;ArcCloseType ODATPT_close;WWFixed ODATPT_x2;WWFixed ODATPT_y2;WWFixed ODATPT_x3;WWFixed ODATPT_y3;};
struct $BE5CEE27A8A07B81AA9A8F4D0D64BD69 {GStringElement OSTCM_opcode;ColorMapMode OSTCM_mode;};
enum $BE811DE6E44980473EC4740E24C9BC7F {GOLAET_BASE = 0x0,};
struct $BE9470539DFAEC4FD70247B2EE5CA4D8 {GStringElement ODSP_opcode;};
struct $BEA8F227C132E2AACD52F7EE748A1EF9 {WWFixed PF_x;WWFixed PF_y;};
enum $BED77A7283D637306628B55E8E8E9B31 {CT_SERIAL = 0x0,CT_INFRARED = 0x1,CT_MEMORYCARD = 0x2,CT_SOCKET = 0x3,};
struct $BF17E24EFBE7A9FB5CAB82C551C3DBEE {RefElementHeader TAI_meta;RGBValue TAI_color;SystemDrawMask TAI_mask;word TAI_style;TextMode TAI_mode;WBFixed TAI_spacePad;FontID TAI_font;WBFixed TAI_size;sword TAI_trackKern;FontWeight TAI_fontWeight;FontWidth TAI_fontWidth;};
struct $BF4690A0DED5363F75761AB82BB69297 {GStringElement OBS_opcode;word OBS_size;};
enum $BF6AF5408CB37ADF79639422A7DC4F9C {FFDSOI_SHOW_ONLY_MARKED = 0x1,FFDSOI_AUTO_APPLY_MARK = 0x2,FFDSOI_CLEAR_MARKS_FIRST = 0x4,};
struct $BF85CC11881F992A16D1AB93376FE3AB {GStringElement ONP_opcode;PageEndCommand ONP_pageEnd;};
struct $BF9437BF576E358621011583AC7FC290 {CellReference STCD_cellRef;};
struct $BF98338CC3DF84317EE86BE6938A3D1C {word FI_nChars;word FI_position;word FI_width;TabReference FI_tab;};
struct $C036CDD426276BA718C07E08EC0C925B {GStringElement ODP_opcode;word ODP_x1;word ODP_y1;};
struct $C07F7C60B18A006FEF386934224F4929 {optr SSCLIP_list;word SSCLIP_defaultEntries;word SSCLIP_toolboxFlag;word SSCLIP_entryNumber;};
struct $C080AE56DBC7D55597E12957E2861EF3 {MachineID primary;MachineID secondary;byte CFLG;word wOffset_PDU_Size;word wOffset_ProdID;word wOffsetUserName;word wOffsetPassword;};
enum $C12DC13DAF679FFA4985FEA10C8AEC6D {SMREG_ERROR_INVALID_MESSAGE_PROTOCOL = 0x0,SMREG_ERROR_INVALID_NUMBER_OF_MESSAGES = 0x1,};
enum $C1A703C5E43FF6ACC37796EA2F35EF3E {FDA_READ_WRITE = 0x0,FDA_READ_ONLY = 0x2,FDA_READ_ONLY_DENY_NONE = 0x4,};
enum $C1B24CAA6544326D69CB1DDF29A53078 {UADT_FLAGS = 0x0,UADT_PTR = 0x2,UADT_VM_CHAIN = 0x4,};
struct $C1C9F29BD1C153189A3914A37049B0F7 {word GC_unused;word GC_unused2;word GC_cellRow;word GC_cellColumn;};
struct $C2322F8411021A2D25E7C16C98385A9C {FunctionID EFD_functionID;word EFD_nArgs;};
struct $C254BE2E2CAE40527518A4AED480F6BB {word PTSD_length;};
struct $C269FD996A462822D8A7F54940029C29 {FormatParameters SFP_formatParams;dword SFP_expression;dword SFP_text;word SFP_length;};
struct $C26D66C7CC80404DBF3CBFC441C95717 {GCNListType GCNLOLE_ID;ChunkHandle GCNLOLE_list;};
struct $C2E36341B3240ADBBFF5C1AB3A6632AE {TCHAR FMEA_number[31];TCHAR FMEA_name[101];TCHAR FMEA_company[51];};
struct $C2F0BE22B65188D2ED0E95F060C87981 {word nameToken;word row;word column;};
struct $C3007D15F15A57A7ACF17EF403C7B4A9 {word SP_port;ManufacturerID SP_manuf;};
struct $C39FA4AB8E10FC793DD1F752F290B840 {FloatNum STND_value;};
struct $C3BF8A304700C0EAC1C00B178E48E8A0 {GStringElement OSLE_opcode;LineEnd OSLE_mode;};
struct $C441E497A04D61F2E072EDE0A8C2BAEB {StyleSheetElementHeader VTCA_meta;FontID VTCA_fontID;WBFixed VTCA_pointSize;TextStyle VTCA_textStyles;ColorQuad VTCA_color;sword VTCA_trackKerning;byte VTCA_fontWeight;byte VTCA_fontWidth;VisTextExtendedStyles VTCA_extendedStyles;SystemDrawMask VTCA_grayScreen;GraphicPattern VTCA_pattern;ColorQuad VTCA_bgColor;SystemDrawMask VTCA_bgGrayScreen;GraphicPattern VTCA_bgPattern;byte VTCA_reserved[7];};
enum $C4AF06427251E370F13D6268B18F1803 {FPFC_NONE = 0x0,FPFC_SOFTWARE = 0x1,};
struct $C4F3AEE9D555F4CDDC13437772376431 {CalendarEventID CRES_eventID;FileDateAndTime CRES_startDateTime;FileDateAndTime CRES_endDateTime;word CRES_reserveWholeDay;CalendarAlarmStruct CRES_alarm;CalendarEventDescType CRES_eventType;word CRES_repeatInfo;word CRES_dataLength;};
union $C4FBBFCDDD21E11B4F3DDE951B49D617 {FloatNum RV_VALUE;word RV_TEXT;CellError RV_ERROR;};
struct $C533D951160BC48E30C3BAD4D7E218C8 {const void *MTA_transAddr;unsigned int MTA_transAddrLen;const char *MTA_userTransAddr;};
struct $C56AC786F963F2215C7C45AFB65FFEB7 {sdword RD_left;sdword RD_top;sdword RD_right;sdword RD_bottom;};
struct $C56DA9433EE093CCBBA1C0F025E8649C {byte GFVRP_hViewArea;byte GFVRP_vViewArea;ChunkHandle GFVRP_hRange;ChunkHandle GFVRP_vRange;word GFVRP_unused;};
enum $C58401E689F132956D1A0BBFFD9FEFDA {IC_NULL = 0x0,IC_DISMISS = 0x1,IC_INTERACTION_COMPLETE = 0x2,IC_APPLY = 0x3,IC_RESET = 0x4,IC_OK = 0x5,IC_YES = 0x6,IC_NO = 0x7,IC_STOP = 0x8,IC_EXIT = 0x9,IC_HELP = 0xA,};
struct $C59D8CB2A618A0FFC1D7A9ABB0D567CF {FileHandle TRVMB_file;VMBlockHandle TRVMB_block;};
struct $C5CDF500750E77F22B3F2061281A7F5C {LineInfo *VTGLIP_buffer;word VTGLIP_bsize;dword VTGLIP_line;};
struct $C5E97C042E34F394760DD1501DBE6D9B {word VMLE_type;optr VMLE_moniker;};
struct $C5FD8D5C276914A96D53C3917C81848B {ParserParameters C_parameters;void (__pascal *C_callbackPtr)(C_CallbackStruct *);C_CallbackStruct C_callbackStruct;};
enum $C61FD7A9CBADF65BDC6AF41A7BB250B6 {QL_BEFORE_UI = 0x0,QL_UI = 0x1,QL_AFTER_UI = 0x2,QL_DETACH = 0x3,QL_AFTER_DETACH = 0x4,};
struct $C6B3FBFBD5441540AC0B1447DC77609D {MSetNum MN_A;MSetNum MN_B;MSetNum MN_X;MSetNum MN_Y;MSetNum MN_x2;MSetNum MN_y2;MSetNum MN_prod;};
enum $C70ADC1A666FCDFCA0FF17A6CF58244F {SCEP_ROLE_RECEIVER = 0x0,SCEP_ROLE_SENDER = 0x1,};
enum $C70E81C799DF407D19651D9A26314ABD {DR_CTLD_TRANSLATE = 0x8,DR_CTLD_CANCEL = 0xA,};
struct $C7C6D8F7F77286D7AA42177F2262F2C1 {GStringElement OSSBA_opcode;byte OSSBA_pos;byte OSSBA_size;};
struct $C835B8DDD622FAAB64146B8AB4EF6ED7 {char *text;word length;word nameID;byte errorOccurred;byte error;};
struct $C84AB4777E68C6C5CADEE505827167D8 {CharFlags CFASS_charFlags;ShiftState CFASS_shiftState;};
struct $C8A5A9183532B5D1506E115182FCBF84 {word GNI_unused;word GNI_unused2;word GNI_numDefinedNames;word GNI_numUndefinedNames;};
enum $C8CB681D50B69D5DA558C28572974D07 {CE_SUCCESS = 0x0,CE_NOT_ENOUGH_MEMORY = 0x1,CE_MISC_FILE_ERROR = 0x2,CE_NOT_ENOUGH_DISK_SPACE_TO_START = 0x3,CE_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE = 0x4,CE_OPERATION_FAILED = 0x5,CE_USER_CANCELED = 0x6,CE_FILE_TRANSFER_OPERATION_ALREADY_IN_PROGRESS = 0x7,CE_DEST_DIRECTORY_DOES_NOT_EXIST = 0x8,CE_CANNOT_SET_SERVER_PATH = 0x9,CE_CANNOT_GET_SERVER_PATH = 0xA,CE_CONNECTION_MEDIUM_IN_USE = 0xB,CE_CANNOT_START_CLIENT_SIDE_CONNECTION = 0xC,CE_CANNOT_CONTACT_SERVER = 0xD,CE_CANNOT_CLOSE_CONNECTION = 0xE,CE_NO_PACKAGES_FOUND = 0xF,CE_PACKAGE_FILE_INVALID = 0x10,CE_PACKAGE_INSTALLED_BUT_MUST_REBOOT_TO_USE = 0x11,CE_FILE_PROTOCOL_TOO_LOW = 0x12,CE_UNABLE_TO_LOAD_TRANSFER_DRIVER = 0x13,CE_FILE_OPEN_BY_ANOTHER_APP = 0x14,CE_FILE_NOT_FOUND = 0x15,CE_PATH_NAME_INVALID = 0x16,CE_ACCESS_DENIED = 0x17,CE_FILE_NAME_INVALID = 0x18,CE_VOLUME_UNAVAILABLE = 0x19,CE_FILE_READ_ONLY = 0x1A,CE_SHORT_READ_WRITE = 0x1B,CE_VOLUME_WRITE_PROTECTED = 0x1C,CE_REMOTE_FILE_NOT_FOUND = 0x1D,CE_REMOTE_PATH_NAME_INVALID = 0x1E,CE_REMOTE_ACCESS_DENIED = 0x1F,CE_REMOTE_FILE_NAME_INVALID = 0x20,CE_REMOTE_FILE_OPEN_BY_ANOTHER_APP = 0x21,CE_REMOTE_FILE_READ_ONLY = 0x22,CE_REMOTE_SHORT_READ_WRITE = 0x23,CE_REMOTE_VOLUME_WRITE_PROTECTED = 0x24,CE_REMOTE_USER_CANCELED = 0x25,CE_OVERWRITE_CANCELLED = 0x26,CE_OPERATION_ABORTED = 0x8000,CE_CANNOT_TRANSLATE_FILE = 0x8001,CE_CANNOT_CREATE_DIRECTORY = 0x8002,CE_CONNECTION_LOST = 0x8003,CE_PATH_NOT_FOUND = 0x8004,CE_DRIVE_INVALID = 0x8005,CE_SOURCE_FILE_OPEN_BY_ANOTHER_APP = 0x8006,CE_DEST_FILE_OPEN_BY_ANOTHER_APP = 0x8007,CE_REMOTE_OPERATION_ABORTED = 0x8008,CE_REMOTE_PATH_NOT_FOUND = 0x8009,CE_REMOTE_DRIVE_INVALID = 0x800A,CE_REMOTE_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE = 0x800B,CE_REMOTE_VOLUME_UNAVAILABLE = 0x800C,CE_PACKAGE_OLD_SO_NOT_INSTALLED = 0x800D,CE_PACKAGE_NOT_COMPATIBLE = 0x800E,CE_CANNOT_USE_INSTALL_BATCH_FILE_FOR_MORE_THAN_ONE_INSTALL = 0x800F,CE_COULD_NOT_PREPARE_FOR_TRANSFER = 0x8010,CE_MMC_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE = 0x8011,};
struct $C901947E7FF97DC986FEAC41DE32F23F {MSCSetAddressesArgs VSCRI_mscSetAddressesArgs;MediumType VSCRI_mediumType;};
struct $C922A68BF4DD4219AF77A0876A08DB2E {VisTextCharAttr VTNCAC_charAttr;word VTNCAC_charAttrToken;VisTextCharAttrDiffs VTNCAC_charAttrDiffs;};
struct $C92E4933677024695F35669FB681D813 {GStringElement OFP_opcode;word OFP_count;RegionFillRule OFP_rule;};
struct $C944C7C70B9B16A6F9A6F5E0E007E52A {byte IINH_size;};
struct $C94BE4F3CF007F8625179D3D9BF19FDD {word HWRSM_deleteCount;};
struct $C987A8CA671AEC17E567431B02B0F1E6 {TextStyle GCM_textStyle;byte GCM_fontSize;ComplexMonikerText GCM_topText;ComplexMonikerBitmap GCM_iconBitmap;};
struct $C9CC327664E4480F0B910836C766F9B6 {byte SNP_flags;word SNP_listEntry;word SNP_textLength;TCHAR SNP_text[128];word SNP_defLength;byte SNP_definition[516];word SNP_token;byte SNP_nameFlags;byte SNP_unused;};
struct $C9D6D3436E69FE291D54815AA0DD811E {VMFileHandle NFFC_vmFileHan;VMBlockHandle NFFC_vmBlkHan;FormatIdType NFFC_format;word NFFC_count;};
struct $CA00114A1D000FD15BB4AC06ED754532 {GStringElement ODB_opcode;word ODB_x;word ODB_y;word ODB_size;};
struct $CA95423F5D3A3B88DFCECBBE4A219731 {word CTV_grObjSpecificData;word CTV_unused;ClassStruct *CTV_toolClass;};
enum $CAACF5457222C6E57B1C9D5BC45EFBA2 {GMID_INVALID = 0x0,GMID_SERIAL_CABLE = 0x1,GMID_INFRARED = 0x2,GMID_DATA_MODEM = 0x3,GMID_FAX_MODEM = 0x4,GMID_PRINTER = 0x5,GMID_PARALLEL_PORT = 0x6,GMID_NETWORK = 0x7,GMID_LOOPBACK = 0x8,GMID_SM = 0x9,GMID_CELL_MODEM = 0xA,};
enum $CAC17B8F1D131D022D498B43B69E80A4 {DG_CONTACTS = 0x0,DG_DOCUMENTS = 0x1,DG_ALL_DATA = 0x2,DG_CALENDAR = 0x3,};
struct $CAE8D45E5E8FFB0DA306839D4396EA97 {ParserTokenType PT_type;ParserTokenData PT_data;};
struct $CAECB507705488EA7911F65268CA64E6 {VMBlockHandle VMBHAD_vmBlockHandle;word VMBHAD_width;word VMBHAD_height;};
struct $CB3E4F2EF1D3126858F884988F30CE24 {void *UADP_ptr;word UADP_size;};
struct $CB88FA05048883AD7270AACBD1CE5495 {word searchSize;word replaceSize;byte params;optr replyObject;Message replyMsg;};
struct $CBB016BF8F52DD450159EB3412908253 {word row;word column;byte errorOccurred;byte error;};
struct $CBB28D53D72CFE1DB763280DC023E022 {word error;optr errorChunk;};
struct $CC27FB51B27683E7F0E126CD3E17352A {PrefMgrFeatures PMI_requiredFeatures;PrefMgrFeatures PMI_prohibitedFeatures;UIInterfaceLevel PMI_minLevel;UIInterfaceLevel PMI_maxLevel;optr PMI_monikerList;GeodeToken PMI_monikerToken;};
enum $CC352368ACDC62280C5B2878C58E88B5 {SET_ENTIRE_SHEET = 0x0,SET_NO_EMPTY_CELLS = 0x2,SET_NO_EMPTY_CELLS_NO_HDR_FTR = 0x4,SET_NEXT_DATA_CELL = 0x6,SET_LAST_DATA_CELL = 0x8,SET_PREV_DATA_CELL = 0xA,SET_FIRST_DATA_CELL = 0xC,};
struct $CC6C3E2117561F03ADC8935DF9EC4665 {GStringElement ODBP_opcode;word ODBP_x;word ODBP_y;word ODBP_ptr;};
struct $CC7DD387F44755ED07F080D94D2F5B71 {byte fieldNum;TCHAR fieldName[41];FieldDataType fieldType;word fieldSize;FloatNum minValue;FloatNum maxValue;};
struct $CCA2477F0DD8CE267A5ACADB5A5A171E {GStringElement OAR_opcode;WWFixed OAR_angle;};
enum $CCA50C26D593A2CB138ADA813273F847 {IRTRE_TRANSMIT_INIT = 0x0,IRTRE_TRANSMIT_SEND = 0x1,IRTRE_TRANSMIT_CANCEL = 0x2,IRTRE_TRANSMIT_EXIT = 0x3,IRTRE_RECEIVE_INIT = 0x4,IRTRE_RECEIVE_CANCEL = 0x5,IRTRE_RECEIVE_EXIT = 0x6,};
struct $CCB10F3B4977516D47E9DA4652D5D0C6 {word VTGLIRV_unused;word VTGLIRV_byteCount;};
struct $CCB2BB852CF353F5C00A21EFD16B3F97 {dword VTCRI_lastCharAttrRun;dword VTCRI_lastParaAttrRun;dword VTCRI_lastTypeRun;dword VTCRI_lastGraphicRun;};
enum $CD43E1C34EA79D68A22A14D48BA75902 {FFRCPV_FIRST_RECORD = 0x0,FFRCPV_LAST_RECORD = 0x1,};
struct $CD84A6E7A7277CB02A5887D6A55FD503 {DWFixed AP_x;DWFixed AP_y;DWFixed AP_spacingX;DWFixed AP_spacingY;AlignType AP_type;};
struct $CDD955DAA7DEE97E50A75FDD51452663 {GStringElement ODCCP_opcode;char ODCCP_char;};
struct $CDEBBD8A5BAF9940C9ABA077D41030A7 {word SWP_type;word SWP_numChars;word SWP_message;optr SWP_output;};
struct $CE050CEE2330F5C1598771915B8D0F34 {MediumType MACSMA_medium;MailboxTransportOption MACSMA_transOption;Boolean MACSMA_changed;};
struct $CE5E5413186079DD8BCA7D0EFA9B461C {word STSD_start;word STSD_length;};
struct $CE61C35841FCDFD5464093C6EDAD7E8B {FloatFloatToAsciiFormatFlags formatFlags;byte decimalOffset;byte totalDigits;byte decimalLimit;char preNegative[6];char postNegative[6];char prePositive[6];char postPositive[6];char header[9];char trailer[9];byte FFTAP_unused;};
struct $CE64D550B9E235061D558812939321FA {GStringElement OFRR_opcode;word OFRR_x1;word OFRR_y1;word OFRR_x2;word OFRR_y2;};
struct $CE64E041D645A29A32EAEE90F8F6F90F {GStringElement ODPG_opcode;word ODPG_count;};
struct $CE7606335C4B9C502AAC5377BE0088CF {MemHandle MRP_meaningsBlock;ChunkHandle MRP_meaningsChunk;ChunkHandle MRP_grammarsChunk;};
struct $CEA89EF74ACFBA38AC8D06D6413CF869 {word CML_source;word CML_dest;};
struct $CEE1D7B23F3F27BF73ED861B318F616F {FFLabelGuardianInstanceBlock g_indata;FFTInstanceData t_indata;};
enum $CF8096EA47B4BE25A0FC4946D90AEA54 {HC_SCRUBBING = 0x0,HC_CONGESTED = 0x1,HC_DESPERATE = 0x2,};
struct $CFA8B671AAF1F0F83BA11AAB87CA6E92 {GStringElement OMT_opcode;word OMT_x1;word OMT_y1;};
struct $CFF6BCD15D587418B39AAEEA6DD09BCA {StyleSheetParams VTSSSP_common;word VTSSSP_graphicsElements;word VTSSSP_treeBlock;word VTSSSP_graphicTreeOffset;};
enum $D00CC554A099D4E54C40A499600BD316 {GFMI_HEIGHT = 0x0,GFMI_HEIGHT_ROUNDED = 0x1,GFMI_MEAN = 0x2,GFMI_MEAN_ROUNDED = 0x3,GFMI_DESCENT = 0x4,GFMI_DESCENT_ROUNDED = 0x5,GFMI_BASELINE = 0x6,GFMI_BASELINE_ROUNDED = 0x7,GFMI_LEADING = 0x8,GFMI_LEADING_ROUNDED = 0x9,GFMI_AVERAGE_WIDTH = 0xA,GFMI_AVERAGE_WIDTH_ROUNDED = 0xB,GFMI_ASCENT = 0xC,GFMI_ASCENT_ROUNDED = 0xD,GFMI_MAX_WIDTH = 0xE,GFMI_MAX_WIDTH_ROUNDED = 0xF,GFMI_MAX_ADJUSTED_HEIGHT = 0x10,GFMI_MAX_ADJUSTED_HEIGHT_ROUNDED = 0x11,GFMI_UNDER_POS = 0x12,GFMI_UNDER_POS_ROUNDED = 0x13,GFMI_UNDER_THICKNESS = 0x14,GFMI_UNDER_THICKNESS_ROUNDED = 0x15,GFMI_ABOVE_BOX = 0x16,GFMI_ABOVE_BOX_ROUNDED = 0x17,GFMI_ACCENT = 0x18,GFMI_ACCENT_ROUNDED = 0x19,GFMI_DRIVER = 0x1A,GFMI_KERN_COUNT = 0x1C,GFMI_FIRST_CHAR = 0x1E,GFMI_LAST_CHAR = 0x20,GFMI_DEFAULT_CHAR = 0x22,GFMI_STRIKE_POS = 0x24,GFMI_STRIKE_POS_ROUNDED = 0x25,GFMI_BELOW_BOX = 0x26,GFMI_BELOW_BOX_ROUNDED = 0x27,};
struct $D021DB76E61B1B87251EA6D26EA1199E {FieldID FFT_fieldColumn;Boolean FFT_inDesignMode;FieldDataType FFT_fieldType;FormatIdType FFT_displayFormat;Boolean FFT_navigating;VisTextCharAttr FFT_charAttrs;VisTextParaAttr FFT_paraAttrs;};
struct $D0517CE9A571DAC3E4DBD97C88B3AB68 {GStringElement OSS_opcode;};
enum $D058C97724CBABC7C49D422F15E51ED3 {VIE_FILE_NOT_RECOGNIZED = 0x1,VIE_NO_VIEWER_LIBRARY = 0x2,VIE_SHARING_VIOLATION = 0x3,};
struct $D067B19D6AC2B15A27EF899F43508908 {VMBlockHandle MRLS_mrBoundaryVMBlock;ChunkHandle MRLS_mrBoundaryChunk;LayoutCommon MRLS_layoutCommon;ModeType MRLS_layoutMode;PageSizeReport MRLS_pageReport;RecordOrderOption MRLS_recordOrder;};
struct $D0B709983B89A09695168EF18CB2AE16 {StyleChunkDesc NSSHC_styleArray;word NSSHC_counter;word NSSHC_styleCount;word NSSHC_toolStyleCount;};
struct $D0F422469C70CF73BAC808B4D6CB13DE {optr GGFI_optr;MemHandle GGFI_window;word GGFI_unused;};
struct $D0F70E0D640C2CDB50515BBF66E24A47 {GStringElement OSAA_opcode;AreaAttr OSAA_attr;};
struct $D0F714CDC9285194D240494DA90A5637 {word IVII_width;word IVII_heigth;};
struct $D19DD6AFBA13CCAEF2AFF1B46F5B3F8C {IrlapConnectionParams QOS_param;dword QOS_devAddr;QualityOfServiceFlags QOS_flags;};
struct $D1AF11DD7D52FCFB370674470A3F3F2C {Rectangle RIP_bounds;Point RIP_delta;dword RIP_cfp;};
enum $D1DA0296571289DF868C89A8669F2FDC {CPMS_OK = 0x0,CPMS_CODE_REQUIRED = 0x2,CPMS_RADIO_UNIT_OFF = 0x4,CPMS_SIM_ERROR = 0x6,CPMS_NO_SERVICE = 0x8,};
struct $D23A5CEBBC79B89108382E7EFDCB2411 {IrlmpIasObjectIdentifier IIIAV_id;IrlmpIasAttributeValue IIIAV_value;};
enum $D259DC1B1D231EC7AC9527C0B9641DDD {FUAT_YES = 0x0,FUAT_NO = 0x1,};
enum $D2F139DC058277D374F33882489AB670 {TE_NO_ERROR = 0x0,TE_ERROR = 0x1,TE_INVALID_FORMAT = 0x2,TE_IMPORT_NOT_SUPPORTED = 0x3,TE_EXPORT_NOT_SUPPORTED = 0x4,TE_IMPORT_ERROR = 0x5,TE_EXPORT_ERROR = 0x6,TE_FILE_ERROR = 0x7,TE_DISK_FULL = 0x8,TE_FILE_OPEN = 0x9,TE_FILE_READ = 0xA,TE_FILE_WRITE = 0xB,TE_FILE_TOO_LARGE = 0xC,TE_OUT_OF_MEMORY = 0xD,TE_METAFILE_CREATION_ERROR = 0xE,TE_EXPORT_FILE_EMPTY = 0xF,TE_EXPORT_INVALID_CLIPBOARD_FORMAT = 0x10,TE_CUSTOM = 0x11,};
struct $D334A65F5924F6629E93126EF9C1B9BA {GStringElement OEP_opcode;};
struct $D349BED624B8B426B84B191AC423E4AD {word PTFD_functionID;};
struct $D373DDE97AFBDC83AC30D0E25C034460 {word GC_unused;word GC_errorCode;word GC_row;word GC_column;};
struct $D3C90F0C35A5BB2B18EAF34F3C5103AA {FileLongName DCP_name;DiskHandle DCP_diskHandle;PathName DCP_path;GenDocumentAttrs DCP_docAttrs;DocumentOpenFlags DCP_flags;IACPConnection DCP_connection;};
struct $D4025AD877DE65DA66C05E31C3727164 {DocumentInfo VCS_documentInfo;VisTextRange VCS_textRange;};
struct $D4130A9850737DC93B17FE378907D5C4 {word TORA_linkSize;byte TORA_ipAddr[4];};
struct $D433C3587180907A749CA3E4D2E49A9F {word DWF_frac;sdword DWF_int;};
enum $D45B97C661E170765A7C05DAD2AAA682 {FZCT_INVALID = 0x0,FZCT_FONT = 0x1,FZCT_MOVE_TO = 0x2,FZCT_CLIP_X = 0x3,};
struct $D45E66271273EF2F27C335FC487A6510 {Boolean FKI_defaultPosition;Boolean FKI_sysModal;};
struct $D475DA5AF10BA49D039C90527F41BF7E {WBFixed PWBF_x;WBFixed PWBF_y;};
struct $D4A6CBC980677CF2776690FE90B0D380 {word numToAllocate;byte enoughSpace;byte errorOccurred;byte error;};
struct $D4D3F2B9786BEF357859B27D143DA036 {ScrollAction TSP_action;ScrollFlags TSP_flags;optr TSP_caller;PointDWord TSP_change;PointDWord TSP_newOrigin;PointDWord TSP_oldOrigin;sword TSP_viewWidth;sword TSP_viewHeight;};
struct $D4DDE4122A33DD8A79F0C5C495ACE058 {word GSS_numSelected;ClassStruct far *GSS_classSelected;GrObjSelectionStateFlags GSS_flags;GrObjAttrFlags GSS_grObjFlags;GrObjLocks GSS_locks;};
struct $D52ED8926ECD8E2DACA2DA693C138111 {byte PLI_align;word PLI_message;PointDWFixed PLI_point;PriorityListInstructions PLI_instructions;word PLI_maxElements;ClassStruct *PLI_class;};
struct $D52F2BA78846F103EB1FD39B6433495A {dword CLSE_recordID;word CLSE_fieldID;};
enum $D5559E4F88516008E59686C89B6F373F {DR_PRINT_ESC_PRINT_BITMAP = 0x8100,DR_PRINT_ESC_SET_PAGE_TRANSFORM = 0x8101,DR_PRINT_ESC_PRINT_GSTRING = 0x8102,DR_PRINT_ESC_GET_COLOR_TRANSFER = 0x8103,DR_PRINT_ESC_SET_COPIES = 0x8104,DR_PRINT_ESC_PREPEND_PAGE = 0x8105,DR_PRINT_ESC_APPEND_PAGE = 0x8106,DR_PRINT_ESC_INIT_PRINT_ENGINE = 0x8107,DR_PRINT_ESC_SET_TOD = 0x8108,DR_PRINT_ESC_CAP_HEAD = 0x8109,DR_PRINT_ESC_CLEAN_HEAD = 0x810A,DR_PRINT_ESC_GET_ERRORS = 0x810B,DR_PRINT_ESC_WAIT_FOR_MECH = 0x810C,DR_PRINT_ESC_PARK_HEAD = 0x810D,DR_PRINT_ESC_MOVE_IN_X_ONLY = 0x810E,DR_PRINT_ESC_MOVE_IN_Y_ONLY = 0x810F,DR_PRINT_ESC_INSERT_PAPER = 0x8110,DR_PRINT_ESC_EJECT_PAPER = 0x8111,DR_PRINT_ESC_GET_JOB_STATUS = 0x8112,DR_PRINT_ESC_SET_JOB_STATUS = 0x8113,};
struct $D59130EA5420C26030C9AA23DC97D154 {NameArrayElement TSEH_meta;word TSEH_baseStyle;StyleElementFlags TSEH_flags;byte TSEH_reserved[6];TextStylePrivateData TSEH_privateData;word TSEH_charAttrToken;word TSEH_paraAttrToken;};
struct $D605913DA26B7F65FE83E88D7DF0F760 {WordFlags GCSR_features;WordFlags GCSR_required;WordFlags GCSR_prohibited;WordFlags GCSR_supported;};
struct $D653AB731626A074471E30C552094E47 {word VTNNC_count;VisTextNameType VTNNC_type;VisTextNameChangeType VTNNC_changeType;word VTNNC_index;word VTNNC_fileIndex;};
struct $D69AE86FD7BE7F2F28951CD0FE225D02 {sword FNOI_lastItemIndex;FieldID FNOI_fieldOrderList[255];};
struct $D6D9748F5FB3816752DD77A499C25E15 {byte PE_priority;byte PE_otherData;optr PE_optr;};
struct $D7B1ED8BC9A54A1956DBEF5D6982E9AC {ChunkArrayHeader GCNLH_meta;word GCNLH_statusEvent;MemHandle GCNLH_statusData;word GCNLH_statusCount;};
struct $D7DF1BCBAF08069733BD7B26DC5F871C {ParallelPortNum PPP_portNum;};
struct $D7E232A21F5F1F855DBB0385381E0C08 {optr IDI_destObj;GStateHandle IDI_gstate;word IDI_brushSize;dword IDI_gestureCallback;};
struct $D8108AF3842E27F91F6D3D5EBFECF5C6 {VisTextType VTNTC_type;word VTNTC_typeToken;VisTextTypeDiffs VTNTC_typeDiffs;VisTextType VTNTC_index;};
enum $D82DACCF3DF168100F177C5B5BE78C23 {SST_CLEAN = 0x0,SST_CLEAN_FORCED = 0x1,SST_DIRTY = 0x2,SST_PANIC = 0x3,SST_REBOOT = 0x4,SST_RESTART = 0x5,SST_FINAL = 0x6,SST_SUSPEND = 0x7,SST_CONFIRM_START = 0x8,SST_CONFIRM_END = 0x9,SST_CLEAN_REBOOT = 0xA,};
struct $D833680BA9F9813B8B36A3F0A5C295BC {FloatFloatToDateTimeParams FFA_dateTimeParams;};
struct $D86BB5B784AEF4FBB7BAEDB7F3A4F20C {word MET_id;ManufacturerID MET_manuf;};
struct $D8774C0CC7056C729618483C93714D4A {VisTextNameType VTND_type;VisTextContextType VTND_contextType;word VTND_file;DBGroupAndItem VTND_helpText;};
struct $D8A3F3AB9D43EE3EE64BCABBF32D2632 {word NH_blockSize;word NH_definedCount;word NH_undefinedCount;word NH_nextToken;};
enum $D8FB211F926F532627781AA9E6FDF29C {PCS_PRINT_BOX_VISIBLE = 0x0,PCS_PRINT_BOX_NOT_VISIBLE = 0x1,};
struct $D9875CEE13F663E879F029A9D5CD9DB0 {MbufHeader DH_common;byte DH_addrSize;byte DH_addrOffset;word DH_lport;word DH_rport;};
enum $D99889442930925BF7084DFE03FB6ADE {PPIT_SERIAL_MOUSE = 0x0,PPIT_SERIAL = 0x1,PPIT_PARALLEL = 0x2,};
struct $DA146F7EEE3C18741A750D446731CF86 {optr CP_firstChild;};
struct $DAA9D1318B13437C08E2EA43A443F0AF {ClassStruct *BGSID_toolClass;VisWardToolActiveStatus BGSID_activeStatus;};
struct $DAD37AE97401F70A2F5C4B7E541C525F {GStringElement OFLP_opcode;RegionFillRule OFLP_rule;};
enum $DAD790FDB2B58BEEDE292F7C1062D012 {GIT_PRIVATE_DATA = 0x0,GIT_WINDOW = 0x2,GIT_PEN_POS = 0x4,};
enum $DADDD837A6ADB2AB77B436B6324E6B5A {PIV_NONE = 0x0,PIV_VIDEO_DRIVER_DEFAULT = 0x1,PIV_UPDATE = 0x2,};
struct $DAE8EED465A304B1F3D0404D76BA2BEA {dword SS_idleCount;SysSwapInfo SS_swapOuts;SysSwapInfo SS_swapIns;word SS_contextSwitches;word SS_interrupts;word SS_runQueue;};
enum $DBA17BBACE22ACBA27E0957E5119F0FA {NNT_WWW_HOTLIST_CHANGE = 0x0,NNT_RESTORE_BEGINNING = 0x1,NNT_RESTORE_ENDING = 0x2,NNT_WWW_WAKE_UP = 0x3,NNT_WWW_FETCH = 0x4,NNT_OBEX_RECEIVE_STATUS = 0x5,};
struct $DBC49AA6E59ABDD34C74641FDBCB64B8 {byte BBF_frac;sbyte BBF_int;};
struct $DBD2EBA1F2F9EDCB1655AAE57AC1AC09 {byte currencyFormatFlags;byte currencyDigits;wchar thousandsSeparator;wchar decimalSeparator;wchar listSeparator;};
struct $DBD375C41A4555C918F311701A31D818 {FieldDataType FFTFG_fieldType;GrObjElementObjPtr FFTFG_label;FieldEdgeFlags FFTFG_edgeFlags;};
struct $DC0333D401C9AB3C5EB2C0BB8F4EF301 {dword VSCRSM_text;dword VSCRSM_iconBitmap;};
struct $DC9CD6A411F36FC1EC83EC093F4030E9 {word SMSP_starPoints;Point SMSP_innerRadius;Point SMSP_outerRadius;};
struct $DCA51A874690258A7E69B1AD0E48B16C {ClipboardItemFormatID CIFI_format;word CIFI_extra1;word CIFI_extra2;VMChain CIFI_vmChain;GeodeToken CIFI_renderer;};
struct $DD66E82342D8B8C2006807A9382D9025 {word PCD_item;PrefCategoryFlags PCD_flags;};
struct $DDA436774A560C5B3EE183879C859F04 {GStringElement ODS_opcode;word ODS_count;};
struct $DDCBD090609AE2B808813BAB8B4F31EC {GStringElement ODVL_opcode;word ODVL_x1;word ODVL_y1;word ODVL_y2;};
struct $DE1BB7DBE37A0D4B2AF035F8086B1071 {word TDS_driver;word TDS_info;TCHAR TDS_name[1];};
enum $DE2ACE1D27092D4A105467982A297D73 {FPE_NO_ERROR = 0x0,FPE_MEMORY_SHORTAGE = 0x1,FPE_PATH_NOT_FOUND = 0x2,FPE_PATH_TABLE_FULL = 0x3,FPE_HAS_NO_PARENT = 0x4,FPE_BUFFER_TOO_SMALL = 0x5,};
struct $DE30D94303F8DF36B96A054BB1419FED {word TNAPEA_linkSize;byte TNAPEA_linkType;};
struct $DE54080E9054D96C37BE69C0526D0EFD {optr SJP_otherSpline;word SJP_deltaX;word SJP_deltaY;};
struct $DE5AF004528198CC5CF1E16818FE6D18 {optr SSCDAP_textObject;optr SSCDAP_attrList;word SSCDAP_attrTokens[4];optr SSCDAP_extraUI;};
enum $DEC3C9B9A2EC727EC553EB05369EA972 {FFRCR_NULL_REQUEST = 0x0,FFRCR_REFRESH = 0x1,FFRCR_CREATE_NEW_RECORD = 0x2,FFRCR_COMMIT_CURRENT_RECORD = 0x3,FFRCR_REVERT_CURRENT_RECORD = 0x4,FFRCR_DELETE_CURRENT_RECORD = 0x5,FFRCR_GOTO_FIRST_RECORD = 0x6,FFRCR_GOTO_PREVIOUS_RECORD = 0x7,FFRCR_GOTO_NEXT_RECORD = 0x8,FFRCR_GOTO_LAST_RECORD = 0x9,FFRCR_GOTO_RECORD = 0xA,FFRCR_DIRTY_CURRENT_RECORD = 0xB,FFRCR_CLEAN_CURRENT_RECORD = 0xC,FFRCR_MARK_CURRENT_RECORD = 0xD,FFRCR_UNMARK_CURRENT_RECORD = 0xE,FFRCR_INVALID_REQUEST = 0xF,};
struct $DEEE7CBB3095A875FDB7D6861BEF342B {GStringElement ODRCVT_opcode;sword ODRCVT_x2;sword ODRCVT_y2;sword ODRCVT_x3;sword ODRCVT_y3;sword ODRCVT_x4;sword ODRCVT_y4;};
struct $DF079724794AD4F82A57B3AE9AA229D5 {DiskHandle FAR_diskHandle;};
struct $DF99A09AAECAEC476C1A34CDA1CEB557 {word CERD_fieldId;VisTextRange CERD_selection;};
struct $DF9B922C01AC16C4E3A8562217EB80E7 {MailboxStorage MSCRMA_bodyStorage;MailboxDataFormat MSCRMA_bodyFormat;const void *MSCRMA_bodyRef;word MSCRMA_bodyRefLen;MailboxMessageFlags MSCRMA_flags;const char *MSCRMA_summary;GeodeToken MSCRMA_destApp;FileDateAndTime MSCRMA_startBound;FileDateAndTime MSCRMA_endBound;};
struct $DFB15FFD177424C7B028D071C2A7707E {GrObjTiledDataFlags GOTDD_tiledDataFlags;byte GOTDD_protocol;};
struct $E065F3D46FC99659E425AF62379D1F53 {ColorQuad TA_color;SystemDrawMask TA_mask;GraphicPattern TA_pattern;TextStyle TA_styleSet;TextStyle TA_styleClear;TextMode TA_modeSet;TextMode TA_modeClear;WBFixed TA_spacePad;FontID TA_font;WBFixed TA_size;sword TA_trackKern;FontWeight TA_fontWeight;FontWidth TA_fontWidth;};
struct $E07ED87A4A0971349024EED8184540D8 {VMChainLink PSI_meta;XYSize PSI_page;PageLayout PSI_layout;word PSI_numColumns;word PSI_columnSpacing;word PSI_ruleWidth;word PSI_leftMargin;word PSI_rightMargin;word PSI_topMargin;word PSI_bottomMargin;};
struct $E08FD2FB451179DF5A10A64C48527658 {GStringElement OSFWI_opcode;FontWidth OSFWI_width;};
struct $E0CF53C08A4FC1525EC89E5F9766F0DF {optr NDC_display;TCHAR NDC_name[64];byte NDC_overlapping;};
enum $E0D5EF4CA08979F8B7EC539D9D778F3C {PD_INVALID_DEVICE = 0xFFFE,};
union $E1019BFE6D4CFBF827CF1BBB47257704 {FloatFloatToAsciiData FFA_float;FloatFloatToDateTimeData FFA_dateTime;};
struct $E14840F90563D0214E75C4DC15796341 {DiskHandle CTLDA_sourceDiskHandle;char CTLDA_sourceFilePath[234];DiskHandle CTLDA_destDiskHandle;char CTLDA_destFilePath[234];char CTLDA_sourceFormat[16];char CTLDA_destFormat[16];};
struct $E1B0168AFD989710765BDB2C26F07807 {GStringElement OSAC_opcode;RGBValue OSAC_color;};
enum $E1B77CF01F306C77AFC25B51211ECA55 {SDK_NT_MSET_ATTR_CHANGE = 0x0,};
union $E1E678ADAFDD64DDD98F4AAD90484264 {SerialPortParams PP_serial;ParallelPortParams PP_parallel;FilePortParams PP_file;CustomPortParams PP_custom;};
struct $E2069C3EB486A3E66BAA8CC7F8D74480 {DriverInfoStruct DEIS_common;MemHandle DEIS_resource;};
enum $E255D112540C26465EA789ECF4CA5493 {SDK_GAGCNLT_APP_TARGET_NOTIFY_MSET_ATTR_CHANGE = 0x6800,SDK_GAGCNLT_DUMMY_LIST_TYPE = 0x6802,};
enum $E26DFDD3B595AD2345D19D74002512EA {SP_NOT_STANDARD_PATH = 0x0,SP_TOP = 0x1,SP_APPLICATION = 0x3,SP_DOCUMENT = 0x5,SP_SYSTEM = 0x7,SP_PRIVATE_DATA = 0x9,SP_STATE = 0xB,SP_FONT = 0xD,SP_SPOOL = 0xF,SP_SYS_APPLICATION = 0x11,SP_USER_DATA = 0x13,SP_MOUSE_DRIVERS = 0x15,SP_PRINTER_DRIVERS = 0x17,SP_FILE_SYSTEM_DRIVERS = 0x19,SP_VIDEO_DRIVERS = 0x1B,SP_SWAP_DRIVERS = 0x1D,SP_KEYBOARD_DRIVERS = 0x1F,SP_FONT_DRIVERS = 0x21,SP_IMPORT_EXPORT_DRIVERS = 0x23,SP_TASK_SWITCH_DRIVERS = 0x25,SP_HELP_FILES = 0x27,SP_TEMPLATE = 0x29,SP_POWER_DRIVERS = 0x2B,SP_DOS_ROOM = 0x2D,SP_HWR = 0x2F,SP_WASTE_BASKET = 0x31,SP_BACKUP = 0x33,SP_PAGER_DRIVERS = 0x35,SP_DUMMY = 0x100,};
struct $E2A941051B3734D68D7277C6A2270F00 {WordAndAHalf TRAE_position;word TRAE_token;};
struct $E2C1C34DB80E50FAE9ECC45B6F071EF0 {SplineSelectType SHDP_selectType;byte SHDP_nothing;word SHDP_pointNumber;};
enum $E2F0EA4473FF1DFCBDC7AB64FF338297 {IVDS_OK = 0x0,IVDS_SOURCE_FILE_ERROR = 0x1,IVDS_CREATE_TEMP_FILE_ERROR = 0x2,IVDS_TEMP_FILE_ERROR = 0x3,IVDS_OUT_OF_MEMORY = 0x4,IVDS_UNSUPPORTED_FORMAT = 0x5,IVDS_CORRUPTED_SOURCE_FILE = 0x6,};
struct $E2F65724A23A920273AA1B44B0CD0A31 {WWFixed GTM_e11;WWFixed GTM_e12;WWFixed GTM_e21;WWFixed GTM_e22;};
struct $E31EC7BD851997880C57C40687E56EF9 {GStringElement ODLT_opcode;word ODLT_x2;word ODLT_y2;};
struct $E353D8F8444173C832A4F653D9F88A07 {char JS_fname[13];char JS_parent[33];char JS_documentName[33];word JS_numPages;SpoolTimeStruct JS_time;byte JS_printing;};
struct $E37D9E11539D0479A9137C0A5CEA545E {word RSWP_numChars;MemHandle RSWP_string;};
struct $E38FCAA15F9048B0A65A2722A6AF89F7 {word VTGHARS_bp;dword VTGHARS_length;word VTGHARS_handle;};
enum $E40E6B41FCC2DCB1AA75F896BDA28190 {ST_INIT = 0x1,ST_TERMINATE = 0x2,ST_VERIFY = 0x3,ST_WILDCARD = 0x5,ST_ANAGRAM = 0x6,ST_HYPHENATE = 0x7,ST_DEFINITION = 0x8,ST_CORRECT = 0x64,};
struct $E442FAB295C1F6B01E4A67BC4ACE4927 {PathName FFP_path;FileLongName FFP_fileName;word FFP_disk;};
struct $E4642C11A0A297007EE3AFF3C4F8039F {byte SSDE_offset;word SSDE_mask;word SSDE_routine;SSDiffFlags SSDE_flags;};
struct $E504FD8B8BD7393DC31412706D00CAA6 {SpreadsheetPrintFlags SDP_flags;word SDP_gstate;CellReference SDP_topLeft;RectDWord SDP_drawArea;CellRange SDP_limit;Point SDP_margins;PointDWord SDP_translation;PointDWord SDP_titleTrans;WWFixed SDP_scale;CellRange SDP_range;RectDWord SDP_rangeArea;};
struct $E51A464CC3C567C33CF7FC43C3B3A0E0 {VMBlockHandle MSP_calcBlock;VMBlockHandle MSP_dataMapBlock;MSetColor MSP_colorScheme;MSetPrecision MSP_precision;word MSP_maxDwell;word MSP_pixelWidth;word MSP_pixelHeight;word MSP_threadPriority;sword MSP_selectedX;sword MSP_selectedY;BBFixedAsWord MSP_lastZoom;sword MSP_lastLine;};
enum $E5A504D2B7F6602B2A85B27A8AF5115B {RSE_NO_ERROR = 0x0,RSE_UNABLE_TO_ALLOC = 0x1,};
struct $E5A96E641CEFC9B8282BB388DF854AF1 {CalendarEventRepeatInterval CERI_interval;CalendarEventRepeatDuration CERI_duration;CalendarEventRepeatDurationData CERI_durationData;word CERI_numExceptions;};
struct $E5C5FB0541E4719D33D10A3BED685F2B {word CSLSLD_numSelected;word CSLSLD_location;};
enum $E5CD5D7E1CC68E639C3C7C8A6671A35E {FESRT_COUNT_ONLY = 0x0,FESRT_DOS_INFO = 0x1,FESRT_NAME = 0x2,FESRT_NAME_AND_ATTR = 0x3,};
struct $E5CEE382E743E7724ADA81055FF59EEF {Rectangle RSP_range;Point RSP_active;dword RSP_callback;byte RSP_flags;dword RSP_cfp;word RSP_sourceChunk;word RSP_destChunk;word RSP_base;dword RSP_lockedEntry;byte RSP_cachedFlags;};
struct $E6918A590419E64E5E55E25A1240906D {GStringElement OFRRT_opcode;word OFRRT_radius;word OFRRT_x2;word OFRRT_y2;};
enum $E6967276F138CC0C62E8FBC35A6A38DA {WIT_PRIVATE_DATA = 0x0,WIT_COLOR = 0x2,WIT_INPUT_OBJ = 0x4,WIT_EXPOSURE_OBJ = 0x6,WIT_STRATEGY = 0x8,WIT_FLAGS = 0xA,WIT_LAYER_ID = 0xC,WIT_PARENT_WIN = 0xE,WIT_FIRST_CHILD_WIN = 0x10,WIT_LAST_CHILD_WIN = 0x12,WIT_PREV_SIBLING_WIN = 0x14,WIT_NEXT_SIBLING_WIN = 0x16,WIT_PRIORITY = 0x18,};
enum $E6B61DEEE226FE36C6ECD5FE04B8FF87 {VFT_NOTE = 0x0,VFT_FAXFILE = 0x2,VFT_GRAPHICS = 0x4,VFT_RESET_STATUS = 0x6,};
struct $E6CA1D840B3EA7A52EE837361804A849 {byte RGB_red;byte RGB_green;byte RGB_blue;};
struct $E768CADC2A639EF6D20039754751B9D9 {GStringElement ODRT_opcode;word ODRT_x2;word ODRT_y2;};
enum $E7839518F5D0FA2910B889FACCFA262A {PCT_NULL = 0x0,PCT_REPLACE = 0x1,PCT_UNION = 0x2,PCT_INTERSECTION = 0x3,};
enum $E7D266D7D37886471FC81C865D983433 {PR_DONT_RESEND = 0x0,PR_RESEND = 0x1,};
enum $E7E3640A076A6B6E83046A83445D1A75 {IIN_INVALID_PHONE_NUMBER = 0x0,IIN_NUMBER_BUSY = 0x1,IIN_NO_ANSWER = 0x2,IIN_NUMBER_CHANGED = 0x3,IIN_SERVICE_NOT_PROVIDED_BY_NETWORK = 0x4,IIN_NETWORK_BUSY = 0x5,IIN_NETWORK_FAILURE = 0x6,IIN_OPERATION_NOT_ALLOWED_BY_NETWORK = 0x7,IIN_TEMPORARY_NETWORK_FAILURE = 0x8,IIN_INCOMING_CALLS_NOT_ALLOWED_BY_CUG = 0x9,IIN_ONLY_CALLS_WITHIN_CUG_ALLOWED = 0xA,IIN_CALL_CHARGE_LIMIT_REACHED = 0xB,IIN_DATA_CALL_CREATION_ERROR_BY_OTHER_CALL = 0xC,IIN_NUMBER_NOT_IN_FIXED_DIALLING_LIST = 0xD,IIN_SIM_CALL_COST_LIMIT_EXCEEDED = 0xE,IIN_PHONE_OFF = 0xF,IIN_NO_SERVICE = 0x10,IIN_CALL_BARRING_ACTIVE = 0x11,IIN_NO_SIM = 0x12,IIN_SIM_REJECTED = 0x13,IIN_CHECK_OPERATOR_SERVICES = 0x14,};
struct $E854700DEDFB490F9B1E7B638C682545 {RefElementHeader VTT_meta;word VTT_hyperlinkName;word VTT_hyperlinkFile;word VTT_context;byte VTT_unused[1];};
enum $E887EFB2B4A55B422593C8F7077A575A {SIM_LIST_SELECTED = 0x0,SIM_LIST_DESELECTED = 0x1,};
struct $E8CAE10A3AB3017981A9F0FDAAA4E68D {word GPDRA_pathType;word GPDRA_savedDiskType;char *GPDRA_driveName;char *GPDRA_diskName;DiskRestoreError GPDRA_errorCode;};
struct $E8D2C52B78D26A49D7EF3330FC893C76 {VisTextNameData VTNCP_data;word VTNCP_index;optr VTNCP_object;word VTNCP_message;VisTextNameCommonFlags VTNCP_flags;byte VTNCP_unused;};
struct $E91782667EB42120AB1A774286F136AB {GStringElement OSGSB_opcode;word OSGSB_x1;word OSGSB_y1;word OSGSB_x2;word OSGSB_y2;};
struct $E977B42B841A5B6C8F0C0D75347233A3 {CommonParameters DP_common;dword DP_dep;dword DP_prev;byte DP_prevIsCell;word DP_chunk;byte DP_align;};
struct $E98CBD8C4573CD9E9FE0FF32B91561C2 {optr GTO_textObject;};
struct $E9946471985084F09CA20E2FD228F537 {GStringElement OSLCI_opcode;Color OSLCI_color;};
struct $E998FFCFDE72921760916BB7B59E4D6A {optr KG_OD;word KG_unused;};
struct $E9B55B7FD9B3BE6F385E4C1731C983B6 {GStringElement ODT_opcode;word ODT_x1;word ODT_y1;word ODT_len;};
struct $EAB3DABC1D44741D961AF432D5EBC4E0 {GStringElement ODATP_opcode;ArcCloseType ODATP_close;WWFixed ODATP_x1;WWFixed ODATP_y1;WWFixed ODATP_x2;WWFixed ODATP_y2;WWFixed ODATP_x3;WWFixed ODATP_y3;};
enum $EACFA24C9136175F70D3AFF09A4916AA {USER = 0x1,APPLICATION = 0x2,SILENT = 0x3,MAX_LAUNCH_MODE = 0x4,};
enum $EB0FB178842C717DA8A7CB0217558F40 {SMRP_NO = 0x0,SMRP_YES = 0x80,SMRP_USED = 0xFF,};
struct $EB3262F2DF1F20F774835D144C86DDFA {VMChain UADVMC_vmChain;VMFileHandle UADVMC_file;};
enum $EC28A20ABB843B6D885125121C0AA5B9 {GSSOT_FIRST_OBJECT = 0x0,GSSOT_LAST_OBJECT = 0x1,GSSOT_NEXT_OBJECT = 0x2,GSSOT_PREV_OBJECT = 0x3,};
enum $EC59398CF76823A6A4728F4774D46DC2 {SPREADSHEET_ADDRESS_ON_SCREEN = 0xF000,SPREADSHEET_ADDRESS_IN_SELECTION = 0xF001,SPREADSHEET_ADDRESS_DATA_AREA = 0xF100,SPREADSHEET_ADDRESS_PAST_END = 0xF101,SPREADSHEET_ADDRESS_USE_SELECTION = 0xF200,SPREADSHEET_ADDRESS_NIL = 0xFFFF,};
struct $EC73D0E6F4D3B6074BE294EE84C91E94 {RefElementHeader NAE_meta;};
struct $EC7CBDBFC0EC53CC9CA2D79B2C059B7E {InkXCoord IP_x;word IP_y;};
enum $ECEB8CFA620456586655C6769908C3FF {SERIAL_PARITY_NONE = 0x0,SERIAL_PARITY_ODD = 0x1,SERIAL_PARITY_EVEN = 0x3,SERIAL_PARITY_ONE = 0x5,SERIAL_PARITY_MARK = 0x5,SERIAL_PARITY_ZERO = 0x7,SERIAL_PARITY_SPACE = 0x7,};
struct $ED11D71EB02C1C84837B054295EC488B {FontID FG_fontID;word FG_pointSize;word FG_pitchTab;};
struct $ED4B5B929280C627B01EC46C30B25B9F {ClassStruct *DCA_class;};
struct $ED825FDFB813B111FCB175ABDEE4B806 {GStringElement OEGS_opcode;};
struct $EDD597C601F8A15C832C89955853101A {FileLongName VP_libraryName;DocumentInfo VP_documentInfo;GeodeToken VP_app;optr VP_destination;word VP_closeMsg;word VP_nextPrevMsg;ViewerAttributes VP_attr;hptr VP_state;};
enum $EDE771BB5E2C603B563C5F6AD912397F {MSGCENTRE_ITEM = 0x0,EMPTY_MSGCENTRE_ITEM = 0x1,};
struct $EDF8B5EB9D76A702715F7356F2B6D65A {Bitmap CB_simple;word CB_startScan;word CB_numScans;word CB_devInfo;word CB_data;word CB_palette;word CB_xres;word CB_yres;};
struct $EE58FD35550BEC93F5601DD6FF9A1CAE {word VLTRFPP_region;sword VLTRFPP_xPosition;sword VLTRFPP_yPosition;};
struct $EE7730B94C2D51AB5CDEDF4F75C92BB9 {StyleSheetElementHeader VTPA_meta;VisTextParaBorderFlags VTPA_borderFlags;ColorQuad VTPA_borderColor;VisTextParaAttrAttributes VTPA_attributes;word VTPA_leftMargin;word VTPA_rightMargin;word VTPA_paraMargin;BBFixedAsWord VTPA_lineSpacing;word VTPA_leading;BBFixedAsWord VTPA_spaceOnTop;BBFixedAsWord VTPA_spaceOnBottom;ColorQuad VTPA_bgColor;byte VTPA_numberOfTabs;byte VTPA_borderWidth;byte VTPA_borderSpacing;byte VTPA_borderShadow;SystemDrawMask VTPA_borderGrayScreen;SystemDrawMask VTPA_bgGrayScreen;GraphicPattern VTPA_borderPattern;GraphicPattern VTPA_bgPattern;word VTPA_defaultTabs;word VTPA_startingParaNumber;char VTPA_prependChars[4];VisTextHyphenationInfo VTPA_hyphenationInfo;VisTextKeepInfo VTPA_keepInfo;VisTextDropCapInfo VTPA_dropCapInfo;word VTPA_nextStyle;StandardLanguage VTPA_language;byte VTPA_reserved[15];};
struct $EE9E7E763C7B1C82A4723EC85C6E1271 {GStringElement OSLJ_opcode;LineJoin OSLJ_mode;};
struct $EEB1E9AEC7200E74338040787782A5F1 {TCHAR OMTA_fileName[33];char OMTA_dataType[65];word OMTA_userHeadersLength;byte OMTA_userHeaders[];};
struct $EF0E0C79F04A736A7DA95582AF64CD57 {word CSADD_callerID;optr CSADD_ackOD;};
struct $EF6B4C0D0E40CA63C63B5E0172974E56 {PointDWFixed GOHAD_anchor;GrObjHandleSpecification GOHAD_handle;};
struct $EF7BAD2ED54F83342FA831A6225A4D3D {FileExtendedAttribute FEAD_attr;void *FEAD_value;word FEAD_size;char *FEAD_name;};
struct $EFB423DC18E290B50ECCFD32D26337BB {FileHandle TRHA_file;word TRHA_array;};
struct $F04104E0C94CB87FAE2114C6A15A02FD {sdword LS_height;sdword LS_width;};
struct $F062CD1ABA18414C9CDB24683A59E419 {VMChainTree GOTBH_meta;PointDWord GOTBH_size;dword GOTBH_areaAttrArray;dword GOTBH_lineAttrArray;dword GOTBH_styleArray;dword GOTBH_charAttrRuns;dword GOTBH_paraAttrRuns;dword GOTBH_textStyleArray;dword GOTBH_textGraphicElements;dword GOTBH_textGraphicsTree;};
struct $F0699A5AF3C5CC4A8833772B3C525266 {byte DS_colorScheme;byte DS_displayType;word DS_unused;FontID DS_fontID;sword DS_pointSize;};
struct $F06E5020F1E533AA2006CAFA8F7AB7F4 {word SSCDSP_attrTokens[4];word SSCDSP_baseStyle;optr SSCDSP_attrList;optr SSCDSP_textObject;optr SSCDSP_extraUI;byte SSCDSP_reserved[6];};
struct $F078896A114F41D46BD93D09E95D3180 {FieldDataAttrs TFDA_common;word TFDA_maxLength;};
struct $F087533DF9A550F364FA916BD5AF149C {word ax;word bx;word cx;word dx;word si;word bp;word ds;word es;};
struct $F11FBB428BBBD79B5414A5B3115C5995 {sbyte SIS_lastItemIndex;SortInfoAscentFlags SIS_ascentFlags;FFDSortOptions SIS_sortOptions;FieldID SIS_sortKeyList[6];};
struct $F128A755BC6B0E5F86C86601A572BA4A {word FVVCGSRP_ax;word FVVCGSRP_bp;word FVVCGSRP_cx;word FVVCGSRP_dx;};
struct $F1999D222D532D618B99C5A6CA95D81B {word RN_major;word RN_minor;word RN_change;word RN_engineering;};
struct $F1A997520A431ABA2CFD52AC07619FF6 {optr output;word foo;};
enum $F1B2C574B764F95C24FA9ED4F85B0B55 {MBRW_SUNDAY = 0x0,MBRW_MONDAY = 0x1,MBRW_TUESDAY = 0x2,MBRW_WEDNESDAY = 0x3,MBRW_THURSDAY = 0x4,MBRW_FRIDAY = 0x5,MBRW_SATURDAY = 0x6,};
struct $F1CBDF090813530D146759A6CEE303B1 {RecordID CGLS_id;word CGLS_numMembers;ContactGroupName CGLS_name;};
struct $F1ECB05A97C283751074E6E0E92770D5 {ArcCloseType TPAP_close;PointWWFixed TPAP_point1;PointWWFixed TPAP_point2;PointWWFixed TPAP_point3;};
struct $F1FF7A97FB07D1C54BCE9061868014A7 {Boolean AckOrNackFlag;MachineID ResponderMID;MachineID RequestorMID;PID RequestorPID;byte *Result;};
struct $F21F83A75FD5128D5FD7DD470D949EF1 {EvalStackOperatorType OSE_type;EvalStackOperatorType OSE_data;};
struct $F2710129AE04E121A0A43A9A4D4BC085 {GStringElement ODR_opcode;word ODR_x1;word ODR_y1;word ODR_x2;word ODR_y2;};
struct $F2B1984A0DCC8CE19D3CCF191208A19F {GStringElement OSLW_opcode;WWFixed OSLW_width;};
struct $F3380FD7AB18F9E60E9A97DC79F9F102 {GStringElement OIDT_opcode;};
struct $F3568FFD21F3549D46C8AFEF4E4668F8 {word F_mantissa_wd0;word F_mantissa_wd1;word F_mantissa_wd2;word F_mantissa_wd3;FloatExponent F_exponent;};
struct $F362D1AA212739173E5896FA8D70F99A {HWRMode HWRLD_mode;sword HWRLD_line;};
struct $F38FE6B9118257A18B8A8D4CB5824520 {word PCMP_left;word PCMP_top;word PCMP_right;word PCMP_bottom;};
struct $F396FB668F427F159C8B73297260AAFC {word MDF_id;ManufacturerID MDF_manuf;};
enum $F3A72C3DC360E2DC4AE8FA2ED0194DAD {MRVM_0_PERCENT = 0x0,MRVM_25_PERCENT = 0x3FFF,MRVM_50_PERCENT = 0x7FFF,MRVM_75_PERCENT = 0xBFFF,MRVM_100_PERCENT = 0xFFFF,};
struct $F3F0945A4E904A4EA85DA14E73A17D9D {WWFixed HD_on;WWFixed HD_off;};
enum $F40F922336D241E4BA6A145EE24387F9 {MPT_STRING = 0x0,MPT_PERCENTAGE = 0x2,MPT_PAGES = 0x4,MPT_GRAPHIC = 0x6,MPT_BYTES = 0x8,};
enum $F4268A596477C9C1C12FBAF0AD126796 {CTDST_BYTE_COUNT = 0x0,};
struct $F448364D6190926D6DF4937DC85FD4EE {GStringElement OSML_opcode;WWFixed OSML_mode;};
struct $F4BC1267496F1DC92C4D9B24FD5B7C53 {word TOEA_linkSize;};
struct $F4EFC6D9C5192BDEC7755C86A97E8F0C {PrinterMode PS_mode;PrintDevice PS_device;PrinterType PS_printerType;PrinterSmart PS_printerSmart;word PS_deviceInfo;word PS_expansionInfo;word PS_fontInfo;PaperInputOptions PS_paperInput;PaperOutputOptions PS_paperOutput;word PS_customWidth;word PS_customHeight;PrinterMargins PS_currentMargins;Point PS_cursorPos;word PS_bufHan;word PS_bufSeg;word PS_bufSize;word PS_streamToken;word PS_streamType;dword PS_streamStrategy;byte PS_error;word PS_bandHeight;word PS_buffHeight;word PS_bandWidth;word PS_bandBWidth;word PS_intWidth;Bitmap PS_swath;dword PS_bitmap;word PS_interleaveFactor;word PS_curScanOffset;word PS_curColorNumber;word PS_newScanNumber;word PS_curScanNumber;word PS_firstBlockScanNumber;word PS_lastBlockScanNumber;PrintTextStyle PS_asciiStyle;word PS_asciiSpacing;FontEntry PS_curFont;OptFontEntry PS_curOptFont;word PS_previousAttribute;byte PS_asciiTrans[256];};
enum $F5133D8A3D740B95AD56751B25FB56C0 {SP_SYSTEM_LEVEL = 0xA,SP_ALARM = 0x14,SP_STANDARD = 0x1E,SP_GAME = 0x28,SP_BACKGROUND = 0x32,};
enum $F5B8E4070C0415943F92C37F5DCB1F53 {IET_OK = 0x0,IET_OPEN_ERROR = 0x2,IET_SHARE = 0x4,IET_DISK_FULL = 0x6,IET_MEM_ERROR = 0x8,IET_NOT_FOUND = 0xA,};
struct $F5D24E155ABD445F86B3223D9187C1F7 {GStringElement OFATP_opcode;ArcCloseType OFATP_CLOSE;WWFixed OFATP_x1;WWFixed OFATP_y1;WWFixed OFATP_x2;WWFixed OFATP_y2;WWFixed OFATP_x3;WWFixed OFATP_y3;};
struct $F61CB26F53F72DBA1A0D895F98B80C89 {MailboxStorage MRA_bodyStorage;MailboxDataFormat MRA_bodyFormat;const void *MRA_bodyRef;word MRA_bodyRefLen;MailboxTransport MRA_transport;MailboxTransportOption MRA_transOption;MailboxTransAddr *MRA_transAddrs;word MRA_numTransAddrs;dword MRA_transData;MailboxMessageFlags MRA_flags;const char *MRA_summary;GeodeToken MRA_destApp;FileDateAndTime MRA_startBound;FileDateAndTime MRA_endBound;};
struct $F640B93506135C37FA513EA2222E5827 {char *text;word length;byte isFunctionName;word funcID;};
enum $F68AD6F442694C0F19CBFD28DFF60AAF {VCS_CLOSED = 0x0,VCS_DOCUMENT_DELETED = 0x1,VCS_NOT_CLOSED = 0x2,VCS_ERROR = 0x3,};
union $F77654AC37220E3D2C435327D4D50BBD {FileDate MBRDD_until;MBRepeatLength MBRDD_length;};
struct $F77F31B1369FFACC4965455909028848 {word STID_start;};
union $F7B68CE3220083B12E9F6DAD0E3A106C {byte MMI_C_PARAM_SIZE;MethodStackInfo MMI_STACK_INFO;};
struct $F80F0DEFE08F400E1AACFA1F75074CE9 {FFTFGInstanceData g_indata;FFTInstanceData t_indata;};
struct $F8107325F390FD0A11D266A407B09498 {GrObjOptimizationFlags TSAOF_optFlags;GrObjTempModes TSAOF_tempModes;};
struct $F82D511C9AB4B0D651C07A6D906B78C5 {DBGroupAndItem HSAE_name;DBGroupAndItem HSAE_score;DBGroupAndItem HSAE_extra;word HSAE_year;byte HSAE_month;byte HSAE_day;};
struct $F8BB624A9453D086E5F2CDF5E535AD2D {optr TR_object;ClassStruct *TR_class;};
struct $F9138B960B89AB8D823A9F9648333832 {dword IGVBCRA_irlapAddr;char *IGVBCRA_className;char *IGVBCRA_attributeName;};
union $F915D5E9B901BC9C8C115A7495AE22B9 {TextReferencePointer TRU_pointer;TextReferenceSegmentChunk TRU_segChunk;TextReferenceBlockChunk TRU_blockChunk;TextReferenceBlock TRU_block;TextReferenceVMBlock TRU_vmBlock;TextReferenceDBItem TRU_dbItem;TextReferenceHugeArray TRU_hugeArray;};
enum $F960CD7F69E887083606AAB5153FD70E {VLTDM_PAGE = 0x0,VLTDM_CONDENSED = 0x1,VLTDM_GALLEY = 0x2,VLTDM_DRAFT_WITH_STYLES = 0x3,VLTDM_DRAFT_WITHOUT_STYLES = 0x4,};
struct $FA0E3F810FD32DA9028302E5BE56C56C {GStringElement ODST_opcode;word ODST_count;};
enum $FA2A7A0A10B13D6063E39A75637109A5 {FESC_WILDCARD = 0x0,};
struct $FA767109BD46822EEB35CE50B9F428BD {word NLTS_signature;MemHandle NLTS_handle;};
enum $FAB72CC09C191B75F969B04AB301B253 {GVCSSF_TO_FIT = 0x0,};
struct $FAEC41B77FCB6FDD5E00ACE456F043D6 {optr NIHT_optr;};
struct $FAF0ABB5DC1614268926501A08257EC2 {VisTextRange VTRP_range;dword VTRP_insCount;TextReference VTRP_textReference;VisTextReplaceFlags VTRP_flags;};
union $FBE9FEBB6DE2D981702F32B78EB81D9B {MethodReturnByteWordType MRI_byteWord;MethodReturnDWordInfo MRI_dword;MethodReturnMultipleType MRI_multiple;};
struct $FBF8401657994D0236D0B4C2FFE9F866 {struct $FBF8401657994D0236D0B4C2FFE9F866::_RangeEnumParams *RECP_params;word RECP_row;word RECP_column;void *RECP_cellData;RangeEnumFlags RECP_rangeFlags;};
struct $FC62D783C3D4317127EF5D10C54F1D4B {WordFlags GCSI_userAdded;WordFlags GCSI_userRemoved;WordFlags GCSI_appRequired;WordFlags GCSI_appProhibited;};
enum $FC794F59B9E0B467AEAB163D8BF022D0 {FEA_MODIFICATION = 0x0,FEA_FILE_ATTR = 0x1,FEA_SIZE = 0x2,FEA_FILE_TYPE = 0x3,FEA_FLAGS = 0x4,FEA_RELEASE = 0x5,FEA_PROTOCOL = 0x6,FEA_TOKEN = 0x7,FEA_CREATOR = 0x8,FEA_USER_NOTES = 0x9,FEA_NOTICE = 0xA,FEA_CREATION = 0xB,FEA_PASSWORD = 0xC,FEA_CUSTOM = 0xD,FEA_NAME = 0xE,FEA_GEODE_ATTR = 0xF,FEA_PATH_INFO = 0x10,FEA_FILE_ID = 0x11,FEA_DESKTOP_INFO = 0x12,FEA_DRIVE_STATUS = 0x13,FEA_DISK = 0x14,FEA_DOS_NAME = 0x15,FEA_OWNER = 0x16,FEA_RIGHTS = 0x17,FEA_MULTIPLE = 0xFFFE,FEA_END_OF_LIST = 0xFFFF,};
struct $FC8B87B80A229AA7CB0D4AAFC1383D2E {RefElementHeader NAME_meta;byte NAME_data[64];TCHAR NAME_name[255];};
enum $FC9B086B3907F97114104B7DEF00EAF5 {GMTID_LOCAL = 0x0,GMTID_NET_LIBRARY = 0x1,GMTID_PRINT_SPOOLER = 0x2,GMTID_FAX_SEND = 0x3,GMTID_ZOOMER = 0x4,GMTID_SM = 0x5,GMTID_SKELETON = 0x6,GMTID_SMTP = 0x7,GMTID_OBEX = 0x8,};
struct $FCAABF203035303C2C7EFB7EE8CB7706 {ChunkArrayHeader EAH_meta;word EAH_freePtr;};
enum $FCC37038358985FBDB2D5C9E69464523 {SC_INSERT_ENTER_CHAR = 0x0,SC_INSERT_TAB_CHAR = 0x2,SC_NEXT_FIELD = 0x4,SC_NEXT_FIELD_2 = 0x6,SC_PREVIOUS_FIELD = 0x8,SC_PREVIOUS_FIELD_2 = 0xA,SC_PREVIOUS_FIELD_3 = 0xC,SC_NEW_RECORD = 0xE,SC_NEW_RECORD_2 = 0x10,SC_PREVIOUS_RECORD = 0x12,SC_NEXT_RECORD = 0x14,SC_FIRST_RECORD = 0x16,SC_LAST_RECORD = 0x18,SC_MARK_RECORD = 0x1A,SC_COMMIT_RECORD = 0x1C,};
enum $FCD3403156F5376418CB16E7D7CFE9A6 {KO_NO_KEYBOARD = 0x0,KO_KEYBOARD_REQUIRED = 0x1,KO_KEYBOARD_EMBEDDED = 0x2,};
enum $FD0DDF1BA677F9C28B24DB878E28101E {FCNT_CREATE = 0x0,FCNT_RENAME = 0x1,FCNT_OPEN = 0x2,FCNT_DELETE = 0x3,FCNT_CONTENTS = 0x4,FCNT_ATTRIBUTES = 0x5,FCNT_DISK_FORMAT = 0x6,FCNT_CLOSE = 0x7,FCNT_BATCH = 0x8,FCNT_ADD_SP_DIRECTORY = 0x9,FCNT_DELETE_SP_DIRECTORY = 0xA,FCNT_FILE_UNREAD = 0xB,FCNT_FILE_READ = 0xC,};
struct $FD1B2E7A901F24ECA9BFA2CAB3BB4640 {char far *TRP_pointer;};
struct $FD1E0ECFC04335470EAD809F685E9E7F {GrObjSkewData GOASD_degrees;GrObjHandleSpecification GOASD_skewAnchor;};
struct $FD456967AFB0D1D8C079C2C8A7CDB91F {word PED_item;ChunkHandle PED_lptr;PrefEnableFlags PED_flags;};
struct $FD8309E4A3AD3BFC256190C8E77DBA5E {optr HG_OD;HierarchicalGrabFlags HG_flags;};
enum $FD9CF0A438A888F33B48E36318B4C8B6 {TRT_POINTER = 0x0,TRT_SEGMENT_CHUNK = 0x2,TRT_OPTR = 0x4,TRT_BLOCK = 0x6,TRT_VM_BLOCK = 0x8,TRT_DB_ITEM = 0xA,TRT_HUGE_ARRAY = 0xC,};
struct $FDD3C1C73145D1DC71260CC1F0925D78 {word GCNLT_manuf;word GCNLT_type;};
enum $FE050C21ACCAA744772A2162503E3E08 {GWNT_INK = 0x0,GWNT_GEN_CONTROL_NOTIFY_STATUS_CHANGE = 0x1,GWNT_SELECT_STATE_CHANGE = 0x2,GWNT_UNDO_STATE_CHANGE = 0x3,GWNT_STYLE_CHANGE = 0x4,GWNT_STYLE_SHEET_CHANGE = 0x5,GWNT_TEXT_CHAR_ATTR_CHANGE = 0x6,GWNT_TEXT_PARA_ATTR_CHANGE = 0x7,GWNT_TEXT_TYPE_CHANGE = 0x8,GWNT_TEXT_SELECTION_CHANGE = 0x9,GWNT_TEXT_COUNT_CHANGE = 0xA,GWNT_TEXT_STYLE_CHANGE = 0xB,GWNT_FONT_CHANGE = 0xC,GWNT_POINT_SIZE_CHANGE = 0xD,GWNT_FONT_ATTR_CHANGE = 0xE,GWNT_JUSTIFICATION_CHANGE = 0xF,GWNT_TEXT_FG_COLOR_CHANGE = 0x10,GWNT_TEXT_BG_COLOR_CHANGE = 0x11,GWNT_TEXT_PARA_COLOR_CHANGE = 0x12,GWNT_TEXT_BORDER_COLOR_CHANGE = 0x13,GWNT_SEARCH_REPLACE_ENABLE_CHANGE = 0x14,GWNT_SPELL_ENABLE_CHANGE = 0x15,GWNT_CHART_TYPE_CHANGE = 0x16,GWNT_CHART_GROUP_FLAGS = 0x17,GWNT_CHART_AXIS_ATTRIBUTES = 0x18,GWNT_GROBJ_CURRENT_TOOL_CHANGE = 0x19,GWNT_GROBJ_BODY_SELECTION_STATE_CHANGE = 0x1A,GWNT_GROBJ_AREA_ATTR_CHANGE = 0x1B,GWNT_GROBJ_LINE_ATTR_CHANGE = 0x1C,GWNT_GROBJ_TEXT_ATTR_CHANGE = 0x1D,GWNT_GROBJ_BODY_INSTRUCTION_FLAGS_CHANGE = 0x1E,GWNT_GROBJ_GRADIENT_ATTR_CHANGE = 0x1F,GWNT_RULER_TYPE_CHANGE = 0x20,GWNT_RULER_GRID_CHANGE = 0x21,GWNT_RULER_GUIDE_CHANGE = 0x22,GWNT_BITMAP_CURRENT_TOOL_CHANGE = 0x23,GWNT_BITMAP_CURRNET_FORMAT_CHANGE = 0x24,GWNT_FLAT_FILE_FIELD_PROPERTIES_STATUS_CHANGE = 0x25,GWNT_FLAT_FILE_FIELD_LIST_CHANGE = 0x26,GWNT_FLAT_FILE_RCP_STATUS_CHANGE = 0x27,GWNT_FLAT_FILE_FIELD_APPEARANCE_CHANGE = 0x28,GWNT_FLAT_FILE_DUMMY_CHANGE_2 = 0x29,GWNT_FLAT_FILE_DUMMY_CHANGE_3 = 0x2A,GWNT_SPOOL_DOC_OR_PAPER_SIZE = 0x2B,GWNT_VIEW_STATE_CHANGE = 0x2C,GWNT_INK_HAS_TARGET = 0x2D,GWNT_PAGE_STATE_CHANGE = 0x2E,GWNT_DOCUMENT_CHANGE = 0x2F,GWNT_DISPLAY_CHANGE = 0x30,GWNT_DISPLAY_LIST_CHANGE = 0x31,GWNT_SPLINE_MARKER_SHAPE = 0x32,GWNT_SPLINE_POINT = 0x33,GWNT_SPLINE_POLYLINE = 0x34,GWNT_SPLINE_SMOOTHNESS = 0x35,GWNT_SPLINE_OPEN_CLOSE_CHANGE = 0x36,GWNT_UNUSED_1 = 0x37,GWNT_SPREADSHEET_ACTIVE_CELL_CHANGE = 0x38,GWNT_SPREADSHEET_EDIT_BAR_CHANGE = 0x39,GWNT_SPREADSHEET_SELECTION_CHANGE = 0x3A,GWNT_SPREADSHEET_CELL_WIDTH_HEIGHT_CHANGE = 0x3B,GWNT_SPREADSHEET_DOC_ATTR_CHANGE = 0x3C,GWNT_SPREADSHEET_CELL_ATTR_CHANGE = 0x3D,GWNT_SPREADSHEET_CELL_NOTES_CHANGE = 0x3E,GWNT_SPREADSHEET_DATA_RANGE_CHANGE = 0x3F,GWNT_FLOAT_FORMAT_CHANGE = 0x40,GWNT_MAP_APP_CHANGE = 0x41,GWNT_MAP_LIBRARY_CHANGE = 0x42,GWNT_TEXT_NAME_CHANGE = 0x43,GWNT_CARD_BACK_CHANGE = 0x44,GWNT_TEXT_OBJECT_HAS_FOCUS = 0x45,GWNT_TEXT_CONTEXT = 0x46,GWNT_TEXT_REPLACE_WITH_HWR = 0x47,GWNT_HELP_CONTEXT_CHANGE = 0x48,GWNT_FLOAT_FORMAT_INIT = 0x49,GWNT_HARD_ICON_BAR_FUNCTION = 0x4A,GWNT_STARTUP_INDEXED_APP = 0x4B,GWNT_SPOOL_PRINTING_COMPLETE = 0x4C,GWNT_MODAL_WIN_CHANGE = 0x4D,GWNT_SPREADSHEET_NAME_CHANGE = 0x4E,GWNT_DOCUMENT_OPEN_COMPLETE = 0x4F,GWNT_EMAIL_SCAN_INBOX = 0x50,GWNT_FOCUS_WINDOW_KBD_STATUS = 0x51,GWNT_TAB_DOUBLE_CLICK = 0x52,GWNT_PAGE_INFO_STATE_CHANGE = 0x53,GWNT_CURSOR_POSITION_CHANGE = 0x54,GWNT_FAX_NEW_JOB_CREATED = 0x55,GWNT_FAX_NEW_JOB_COMPLETED = 0x56,GWNT_EMAIL_DATABASE_CHANGE = 0x57,GWNT_EMAIL_STATUS_CHANGE = 0x58,GWNT_EMAIL_PAGE_PANEL_UPDATE = 0x59,GWNT_PCCOM_DISPLAY_CHAR = 0x5A,GWNT_PCCOM_DISPLAY_STRING = 0x5B,GWNT_PCCOM_EXIT = 0x5C,GWNT_FONTS_ADDED = 0x5D,GWNT_FONTS_DELETED = 0x5E,GWNT_INK_GESTURE = 0x5F,GWNT_TEXT_REPLACE_GESTURE = 0x60,GWNT_MAILBOX_SEND_CONTEXT = 0x61,GWNT_PAGE_NAME_CHANGE = 0x62,GWNT_GAME_STATUS_CHANGE = 0x63,GWNT_DELETE_VARIABLE_GRAPHIC = 0x64,GWNT_TEXT_HYPERLINKABILITY_CHANGE = 0x65,GWNT_CONTENT_CONTEXT_CHANGE = 0x66,GWNT_CONTENT_BOOK_CHANGE = 0x67,GWNT_HYPERLINK_STATUS_CHANGE = 0x68,GWNT_BEGIN_FAX_CONNECTION = 0x69,GWNT_BEGIN_DATA_CONNECTION = 0x6A,GWNT_END_SERIAL_CONNECTION = 0x6B,GWNT_LOST_SERIAL_CONNECTION = 0x6C,GWNT_FAX_DESTINATION_CHANGE = 0x6D,GWNT_FAX_DIAL_ASSIST_CHANGE = 0x6E,GWNT_FAX_LAST_DESTINATIONS_CHANGE = 0x6F,GWNT_COVER_PAGE_CHANGE = 0x70,GWNT_FOAM_DB_CHANGE = 0x71,GWNT_INIT_FILE_CHANGE = 0x72,GWNT_KEYBOARD_EVENT = 0x73,GWNT_NAVIGATE_ENTRY_CHANGE = 0x74,GWNT_NAVIGATE_DELETE_ENTRY = 0x75,GWNT_UNUSED_2 = 0x76,GWNT_UNUSED_3 = 0x77,GWNT_UNUSED_4 = 0x78,GWNT_UNUSED_5 = 0x79,GWNT_CURRENT_COMPONENT_CHANGE = 0x7A,GWNT_CONTACT_LIST_CUR_SELECTION = 0x7B,GWNT_CONTACT_LOG_CONTACT_LOG_CHANGE = 0x7C,GWNT_CONTACT_LOG_RECENT_CALLS_CHANGE = 0x7D,GWNT_CONTACT_LOG_RECENT_FAXES_CHANGE = 0x7E,GWNT_CONTACT_LOG_RECENT_MESSAGES_CHANGE = 0x7F,GWNT_INDICATOR_LOG_EVENT = 0x80,GWNT_RESPONDER_NOTIFICATION = 0x81,GWNT_FOAM_AUTO_SAVE = 0x82,GWNT_FOAM_GAINED_FULL_SCREEN_EXCL = 0x83,GWNT_FOAM_LOST_FULL_SCREEN_EXCL = 0x84,GWNT_ACCESS_POINT_CHANGE = 0x85,GWNT_INDICATOR_REPLACE_ICON_GLYPH = 0x86,GWNT_INDICATOR_REPLACE_TEXT_GLYPH = 0x87,GWNT_INDICATOR_SET_ACTIVE_CALL = 0x88,GWNT_INDICATOR_SET_NUM_UNREAD_DOCUMENTS = 0x89,GWNT_INDICATOR_CHANGE_NUM_UNREAD_DOCUMENTS = 0x8A,GWNT_INDICATOR_CLEAR_NUM_UNREAD_DOCUMENTS = 0x8B,GWNT_INDICATOR_SET_NUM_OUTGOING_DOCUMENTS = 0x8C,GWNT_INDICATOR_CHANGE_NUM_OUTGOING_DOCUMENTS = 0x8D,GWNT_INDICATOR_SET_CUSTOM_NOTE = 0x8E,GWNT_INDICATOR_SET_MAIN_WINDOW_VISIBILITY = 0x8F,GWNT_VIEWER_DOCUMENT_STATUS_CHANGE = 0x90,GWNT_PCMCIA_CARD_CHANGE = 0x91,GWNT_INDICATOR_REFRESH_NOTIFY = 0x92,GWNT_SECURITY_PIN_CODE_REQUEST = 0x93,GWNT_SECURITY_LOCK_TIME_OUT = 0x94,GWNT_SECURITY_LEVEL = 0x95,GWNT_DATASTORE_CHANGE = 0x96,GWNT_VIEWER_SHUTTING_DOWN = 0x97,GWNT_INDICATOR_SET_TERMINATE_HANDLING = 0x98,GWNT_INDICATOR_PUT_UP_FLASHING_NOTE = 0x99,GWNT_INDICATOR_PUT_UP_INFORMATION_NOTE = 0x9A,GWNT_INDICATOR_HANDLE_ECI_CMT_TERMINATE_STATUS = 0x9B,GWNT_INDICATOR_HANDLE_ECI_NETWORK_TERMINATE_STATUS = 0x9C,GWNT_SECURITY_SYSTEM_LOCKED = 0x9D,GWNT_FOAM_IGNORE_BRING_TO_TOP = 0x9E,GWNT_VIEWER_DOCUMENT_CHANGE = 0x9F,GWNT_INK_DIGITIZER_COORDS = 0xA0,GWNT_VIEWER_LOAD_UNREAD_DOCUMENT = 0xA1,GWNT_LOGIN_INITIALIZE = 0xA2,GWNT_LOGIN_ATTACH = 0xA3,GWNT_LOGIN_DETACH = 0xA4,GWNT_PENELOPE_HARDWARE_NOTIFICATION = 0xA5,GWNT_PENELOPE_RADIO_STATUS_NOTIFICATION = 0xA6,GWNT_UI_ZOOM_LEVEL = 0xA7,GWNT_KEYBOARD_MAP_CHANGE = 0xA8,GWNT_CONTACT_SIM_LIST_CUR_SELECTION = 0xA9,GWNT_CONTACT_SIM_LIST_CONTACT_CHANGE = 0xAA,GWNT_CONTACT_SIM_LIST_SELECTION_CHANGE = 0xAB,GWNT_CONTACT_SIM_LIST_FDN_STATUS = 0xAC,};
enum $FE7FE942B8120315422BF7C005D4DC25 {FDH_TEXT_TR_ITEM = 0x0,FDH_ADDRESS_INFO = 0x2,FDH_HANDLE1 = 0x4,FDH_HANDLE2 = 0x6,FDH_HANDLE3 = 0x8,FDH_HANDLE4 = 0xA,FDH_HANDLE5 = 0xC,};
struct $FE986B386BC637CB708C28639CCFEC7F {NameArrayElement VTNAE_meta;VisTextNameData VTNAE_data;};
struct $FEB5860C8A4E1D4F0C5CB599D61FFB21 {DiskHandle GFP_disk;PathName GFP_path;};
struct $FEEA6CC1B1CBD4821481F7C23CAA8352 {word CP_row;word CP_column;word CP_maxRow;word CP_maxColumn;void *CP_callback;void *CP_cellParams;};
struct $FEEB030CDB7FF48C904E7A8793759D00 {DiskHandle MFAE_localDisk;byte MFAE_remotePathOffset;char MFAE_localFormat[16];char MFAE_remoteFormat[16];char MFAE_paths[1];};
struct $FEF3E54FC46D53FB986A6E01DDDA4E87 {LMemBlockHeader IMFIH_base;word IMFIH_fieldChunk;word IMFIH_numFields;DefaultFieldNameUsage IMFIH_flag;};
struct $FEFE1B9EBB56156FCDD98B5712AF57DF {word GVI_numMajorIntervals;word GVI_numMinorIntervals;};
enum $FF296692CD885ED8365E6B263DAC431B {GCNDCNT_CREATED = 0x0,GCNDCNT_DESTROYED = 0x1,};
enum $FF2AB1DACD3E74CA8F2D6CE9C2BDB245 {GMSID_FILE = 0x0,GMSID_VM_TREE = 0x1,};
struct $FF2D5255CE619DBA428CE163825C5D44 {unsigned int SMID_reference;};
struct $FF3AED6CEAA544C737FC8A0FE3462592 {word GOANS_suspendCount;optr GOANS_optr;word GOANS_message;};
struct $FF5D1E3DD0638770171EDFCD07103261 {NameArrayMaxElement NSC_style;word NSC_styleToken;word NSC_usedIndex;word NSC_usedToolIndex;word NSC_styleSize;word NSC_attrTokens[4];dword NSC_attrChecksums[4];byte NSC_indeterminate;byte NSC_differsFromBase;byte NSC_canReturnToBase;word NSC_styleCounter;};
enum $FF5DF312F068DDB94B2021990FE7BABB {GOWTT_DONT_WRAP = 0x0,GOWTT_WRAP_AROUND_RECT = 0x1,GOWTT_WRAP_AROUND_TIGHTLY = 0x2,GOWTT_WRAP_INSIDE = 0x3,};
struct $FF9A0D164ED0D2C7A7C0079E01C8AFF6 {GStringElement OSMM_opcode;MixMode OSMM_mode;};
typedef struct $1B872AF3899C65B1A4A028A594891232 AccessPointChangeDescription;
typedef enum $12D4049AB8CC802BC34A3C59C1E21CE9 AccessPointChangeType;
typedef WordFlags AccessPointControlFeatures;
typedef enum $024F63C271895CCC9BDF51CB64E24882 AccessPointStandardProperty;
typedef enum $A566544E3B975189101F97C7D8B73C09 AccessPointType;
typedef enum $235521FC40E014AF22FE323CEE1019FC AccessPointValueType;
typedef ByteEnum ActionType;
typedef ByteFlags ActivateCreateFlags;
typedef struct $79D6AE89777A9C7412785E76DA25FD49 ActivationData;
typedef ByteEnum ActiveSearchSpellType;
typedef WordFlags AddUndoActionFlags;
typedef struct $8B6E6E5BE7804C7A52A41EFB56FC12BC AddUndoActionStruct;
typedef ByteEnum AdjustType;
typedef enum $01F44BEA79F082D37C99694DFC72E671 AdvanceNoticeType;
typedef struct $1A18DCCAB9742C9422CAB4F063E80A51 AfterAddedToGroupData;
typedef enum $31F4A8F425A43C1740760E7FEB04741B AfterEditAction;
typedef struct $CD84A6E7A7277CB02A5887D6A55FD503 AlignParams;
typedef ByteFlags AlignToGridType;
typedef ByteFlags AlignType;
typedef ByteFlags AnotherToolActivatedFlags;
typedef WordFlags AppAttachFlags;
typedef struct $44D89348646A771F77E85BB523659234 AppFeaturesInfo;
typedef struct $140F2DD4875735D739B6AD1CEFD4A6A9 AppInstanceReference;
typedef struct $74223C5618075FA6C3F8207E35E6094D AppLaunchBlock;
typedef ByteFlags AppLaunchFlags;
typedef ByteEnum AppMeasurementType;
typedef ByteFlags AppOptFlags;
typedef ByteEnum AppletalkConnection;
typedef AppOptFlags ApplicationOptFlags;
typedef WordFlags ApplicationStates;
typedef struct $79E3BB3B2F7B150F5A8E4C474F2448C4 ArcBasicInit;
typedef enum $9690D7F9A3B2DBA2A698E7A1CD989105 ArcCloseType;
typedef struct $80CC4C5FD88ED052572879322825446E AreaAndLineToken;
typedef struct $181CB1A5EA6844420306210A16A1E8EB AreaAttr;
typedef struct $1B24A4AFEB954E87B12A9FE2873BF14C AreaInfo;
typedef struct $2B4CD526B6586F73E09DA36CECD6A8FA ArgumentStackElement;
typedef struct $81AFDD6F4AB64A1B66616FEC6377A6C1 AsmPassReturn;
typedef ByteEnum AutoSheetFeed;
typedef struct $DBC49AA6E59ABDD34C74641FDBCB64B8 BBFixed;
typedef word BBFixedAsWord;
typedef WordFlags BCCToolboxFeatures;
typedef WordFlags BCFeatures;
typedef WordFlags BCToolboxFeatures;
typedef enum $24EBCDDAD62EE668732C34758CA22F5B BFTP_ERRORCODE;
typedef enum $50B771B6C300768B58A02FD5AF92119A BLTMode;
typedef ByteEnum BMCompact;
typedef ByteEnum BMDestroy;
typedef ByteEnum BMFormat;
typedef ByteFlags BMType;
typedef struct $54BB23DDA85F0CB688EA9380AAC80F0F BackgroundColors;
typedef struct $7500F8044112F68616EDD75DF8304EC0 BasicGrab;
typedef struct $4076D762D1C81A028595D1F46C0792CE BasicInit;
typedef struct $483986D64845143DB593BC3B70DEAAD0 Bitmap;
typedef ByteEnum BitmapGuardianBitmapPointerActiveStatus;
typedef ByteFlags BitmapGuardianFlags;
typedef struct $DAA9D1318B13437C08E2EA43A443F0AF BitmapGuardianSpecificInitializationData;
typedef WordFlags BitmapMode;
typedef struct $BDB6389EDDAC486634F95C3B3803658D BlendParams;
typedef sword Boolean;
typedef struct $659E761574B82358398ABC3D276C07AD BoundedGString;
typedef struct $32BC277BC1E8BFB9FCDF81A8B1059207 BoundingRectData;
typedef enum $1651765A2570BC8317D3D64C515A5ADF BranchReplaceParamType;
typedef struct $1C688C28D75541A5D178169195091408 BusinessCardFields;
typedef ByteEnum Button;
typedef ByteFlags ButtonInfo;
typedef byte ByteEnum;
typedef byte ByteFlags;
typedef WordFlags CBarringFeatures;
typedef struct $EDF8B5EB9D76A702715F7356F2B6D65A CBitmap;
typedef ByteEnum CChar;
typedef struct $3655A8AF28BBB19220D2971FFA5C447A CDependencyStruct;
typedef WordFlags CDivertingFeatures;
typedef struct $498EA31B4739EFA91F44C49DFBF8EA6C CEvalStruct;
typedef struct $8556DCFD83F83399DBD905E8657F8BD9 CFormatStruct;
typedef struct $80B3CE46B6E412671E9D464518D7C0B3 CMethodDef;
typedef WordFlags CPUFlags;
typedef struct $4C96CF7105216D3EB6044DA68B55A32A CParserReturnStruct;
typedef struct $C5FD8D5C276914A96D53C3917C81848B CParserStruct;
typedef struct $9D5185681DC4B8FEE74C6C05E52BA97A CRangeEnumParams;
typedef WordFlags CSFeatures;
typedef ByteFlags CSListFlags;
typedef WordFlags CSMSFeatures;
typedef WordFlags CSToolboxFeatures;
typedef struct $CBB016BF8F52DD450159EB3412908253 CT_CC_CallbackStruct;
typedef struct $94E8D4DDD4B59861F567E7348CFAA5AF CT_CNE_CallbackStruct;
typedef struct $D4A6CBC980677CF2776690FE90B0D380 CT_CNS_CallbackStruct;
typedef struct $1A04853DEE44C6F87D0F256CCA5B3FE7 CT_DC_CallbackStruct;
typedef struct $CBB016BF8F52DD450159EB3412908253 CT_EC_CallbackStruct;
typedef struct $BB54E0DE9390DCB7162F987AC609444B CT_EF_CallbackStruct;
typedef struct $B5F213066AFE1A76AB6E13EE63FBA48B CT_FF_CallbackStruct;
typedef struct $2CED64BB66D73172BFD158F5A21F6B5F CT_FN_CallbackStruct;
typedef struct $9388F29C425345DBBFE85AFA753DC532 CT_FTC_CallbackStruct;
typedef struct $F640B93506135C37FA513EA2222E5827 CT_FTT_CallbackStruct;
typedef struct $7E61E54AE290203B8099EEC50250FC0D CT_LN_CallbackStruct;
typedef struct $C2F0BE22B65188D2ED0E95F060C87981 CT_NTC_CallbackStruct;
typedef struct $C835B8DDD622FAAB64146B8AB4EF6ED7 CT_NTT_CallbackStruct;
typedef struct $3B603BFF766EE16F63B021016DC5F71C CT_SF_CallbackStruct;
typedef struct $8E641EB0AB58D56782E2BFF5F7203979 CT_UL_CallbackStruct;
typedef WordFlags CWaitingFeatures;
typedef struct $A5B759A9965475D27EEB61E3203E0D35 C_CallbackStruct;
typedef union $938E3B645CE001A1E397A04D14D290C3 C_CallbackUnion;
typedef ByteEnum CalendarAlarmIntervalType;
typedef WordFlags CalendarAlarmStruct;
typedef ByteEnum CalendarEventDescType;
typedef enum $0EB038596E727EDC9B4CC1FCB327D8F9 CalendarEventError;
typedef dword CalendarEventID;
typedef struct $A2747294BEC530F1970AC07CA592BD42 CalendarEventParamStruct;
typedef ByteEnum CalendarEventRepeatDuration;
typedef union $77D1C98245AA2463A9CA43330B58B83B CalendarEventRepeatDurationData;
typedef struct $E5A96E641CEFC9B8282BB388DF854AF1 CalendarEventRepeatInfo;
typedef WordFlags CalendarEventRepeatInterval;
typedef ByteEnum CalendarEventRepeatIntervalType;
typedef WordFlags CalendarEventRepeatLength;
typedef ByteEnum CalendarEventRepeatLengthUnitType;
typedef ByteEnum CalendarEventRepeatWeekday;
typedef struct $C4F3AEE9D555F4CDDC13437772376431 CalendarReturnedEventStruct;
typedef enum $9F458BEFCC98CF6FE2D1882D3CF34F8F CalendarToDoItemStatus;
typedef struct $8280190BA0D6110F4F03F3568C623E58 CallBackMessageData;
typedef ByteEnum CallbackType;
typedef byte CallerGroupData;
typedef struct $5C67490EC1A462D86813EA769412D58E CellAttrs;
typedef ByteFlags CellBorderInfo;
typedef ByteEnum CellError;
typedef ByteFlags CellFunctionParameterFlags;
typedef struct $A287F9A4DE9B82EFDF4D96BFAF250B92 CellFunctionParameters;
typedef ByteFlags CellInfo;
typedef enum $D1DA0296571289DF868C89A8669F2FDC CellPhoneMediaStatus;
typedef struct $78534863191C50C01C8D3E775BB1BAC0 CellRange;
typedef ByteFlags CellRecalcFlags;
typedef optr CellRef;
typedef struct $8AC348B8256A5735AD3547D1CD6CD57D CellReference;
typedef WordFlags CellRowColumn;
typedef ByteEnum CellType;
typedef ByteEnum CenterLeftRightWidth;
typedef ByteEnum CenterTopBottomHeight;
typedef ByteEnum CentronicsConnection;
typedef struct $7CE250C99BC4F1D94216EBA55022C65F CharChoiceInformation;
typedef ByteFlags CharFlags;
typedef struct $C84AB4777E68C6C5CADEE505827167D8 CharFlagsAndShiftState;
typedef ByteFlags CharInfo;
typedef struct $3475141482D6D9965C0E629401A058D5 CharTableData;
typedef ByteEnum CharacterSet;
typedef ByteEnum Chars;
typedef ByteFlags CheckLegalSettingsFlags;
typedef struct $306AA581D16B12CD82CA1AB3D84E2E32 ChunkArrayHeader;
typedef word ChunkHandle;
typedef struct $CEA89EF74ACFBA38AC8D06D6413CF869 ChunkMapList;
typedef ByteFlags ClassFlags;
typedef struct _ClassStruct ClassStruct;
typedef Handle ClientHandle;
typedef WordFlags ClipboardItemFlags;
typedef enum $4D2BD16233F00CF56279D709F5812D5E ClipboardItemFormat;
typedef dword ClipboardItemFormatID;
typedef struct $DCA51A874690258A7E69B1AD0E48B16C ClipboardItemFormatInfo;
typedef struct $1F034B2BD8EF6F42AC18099D5F73FA49 ClipboardItemHeader;
typedef TCHAR ClipboardItemNameBuffer[33];
typedef struct $A5DBF761831A36C8D79644BF6072E89D ClipboardQueryArgs;
typedef WordFlags ClipboardQuickNotifyFlags;
typedef enum $9D491DC32B45CDA360448FBF0D531364 ClipboardQuickTransferFeedback;
typedef WordFlags ClipboardQuickTransferFlags;
typedef struct $4357C61DE9421643746722C01E20355F ClipboardQuickTransferRegionInfo;
typedef struct $531154B38AF6E41213888E867A486FC0 ClipboardRequestArgs;
typedef ByteEnum Color;
typedef ByteEnum ColorFlag;
typedef ByteFlags ColorMapMode;
typedef ByteFlags ColorModifiedStates;
typedef struct $76B7974850EE9C4621C3DB9DA41F5B11 ColorQuad;
typedef dword ColorQuadAsDWord;
typedef ByteFlags ColorScheme;
typedef ByteFlags ColorToolboxPreferences;
typedef struct $BD819FB74B418D0315DD30110552C02E ColorTransfer;
typedef ByteEnum ColoredObjectOrientation;
typedef struct $24A87222BDC6138DA7B56EE7233D1D77 ColumnArrayHeader;
typedef ByteFlags ColumnBorder;
typedef struct $3B76AD9B7800909652CA37819EEB4CBA CombineLocksStruct;
typedef ByteEnum CommitRecordType;
typedef struct $FEEA6CC1B1CBD4821481F7C23CAA8352 CommonParameters;
typedef WordFlags CompChildFlags;
typedef WordFlags CompLibFlags;
typedef struct $DA146F7EEE3C18741A750D446731CF86 CompPart;
typedef enum $17D54CF75024FE92F8D927AB5C4FDA24 ComplexMonikerBitmap;
typedef enum $5DD5D18F25690EF7D18E10924A9E5B71 ComplexMonikerSourceType;
typedef enum $75F2AECC72E67C28AA85492AC6D71469 ComplexMonikerText;
typedef struct $445D6B4A5BD6D0DE4971A6F36E6FD784 ComputedFieldDataAttrs;
typedef enum $B358D6C4BE2811C5B9829738348A0FD5 ConnectCheckLegalError;
typedef ByteFlags ConnectConnectionStatus;
typedef struct $7E455C8CAF29C7CBB2F787A298451808 ConnectDisableAppLaunchKeysMonitor;
typedef enum $C8CB681D50B69D5DA558C28572974D07 ConnectError;
typedef WordFlags ConnectGetSendStatus;
typedef WordFlags ConnectMFAGetPackageStatus;
typedef WordFlags ConnectMFGetSendStatus;
typedef ByteFlags ConnectOpenConnectionTimeOutFlags;
typedef ByteFlags ConnectProgressDialogFlags;
typedef enum $AAE9C0E016A413A2263063F4FA1EF93F ConnectProgressType;
typedef struct $27811E714B904709525E4DEB725A1F35 ConnectQuitGeodeState;
typedef enum $AA2971232B1DB23A811646E0AB6A9E6A ConnectQuitGeodeStatus;
typedef WordFlags ConnectSettingsControlFeatures;
typedef ByteFlags ConnectSettingsControllerMiscFlags;
typedef WordFlags ConnectSettingsDisplayControlFeatures;
typedef enum $679AF5CC6149ACE7C4F062204D178770 ConnectSoundType;
typedef enum $AA08ACBA0B0A168C6C117BF4AAF6B961 ConnectStandardDialogBoxType;
typedef struct $EF0E0C79F04A736A7DA95582AF64CD57 ConnectSubAppDetachData;
typedef ByteFlags ConnectSubApplicationFlags;
typedef enum $53132F90EB77F20CC3117450DCB54102 ConnectTransferDriverError;
typedef enum $569F95C749261F23B943FB98A4C269DE ConnectTransferDriverFunction;
typedef enum $F4268A596477C9C1C12FBAF0AD126796 ConnectTransferDriverStatusType;
typedef struct $9A4DEA20FC32256AB58CD874C74CA8A8 ConnectTransferDriverTransferArgs;
typedef ByteFlags ConnectTransferFlags;
typedef struct $692F8AD653ECEB8B16FDAF9022DC2B8B ConnectTransferStatusParams;
typedef struct $E14840F90563D0214E75C4DC15796341 ConnectTranslateDriverArgs;
typedef enum $ACFD472A21D2348D12A5675FC335F578 ConnectTranslateDriverError;
typedef enum $C70E81C799DF407D19651D9A26314ABD ConnectTranslateDriverFunction;
typedef WordFlags ConnectionStatus;
typedef enum $BED77A7283D637306628B55E8E8E9B31 ConnectionType;
typedef WordFlags ContactEditFeatures;
typedef struct $DF99A09AAECAEC476C1A34CDA1CEB557 ContactEditRecoverData;
typedef enum $BCAE249C3B13548462F7FA00AA7C4C0E ContactEditRingingTone;
typedef enum $0633B8B1410C624C9CFD803678556C83 ContactEditSecretStatus;
typedef word ContactEnumReturnValue;
typedef enum $AF1C3ED82EC9AF2D9DAD3F527610BFCA ContactExportStatus;
typedef TCHAR ContactGroupName[34];
typedef enum $563FFC33E79BD20782967DF25DDFA75D ContactImageFileType;
typedef WordFlags ContactListFeatures;
typedef struct $F1CBDF090813530D146759A6CEE303B1 ContactListGroupStruct;
typedef struct $D52F2BA78846F103EB1FD39B6433495A ContactListSelectedEntry;
typedef struct $218902BAC54B5712308DB964CF813296 ContactListSelectedRecordsData;
typedef struct $2BE13A44652D9D11BDAB6703483836FC ContactListSelectionData;
typedef struct $B07AD17A470708DA266F4A460421101D ContactMultipleSelectionWithDBNames;
typedef ByteEnum ContactNetworkVersionType;
typedef struct $25F72A3701E07A9425C0B7402E193402 ContactSIMEditFieldLengthData;
typedef struct $50B0CD4088664D163EA2A7165BBA14B8 ContactSIMEditSaveData;
typedef enum $9D017184267BADE5A4328A83A19B1EE4 ContactSIMError;
typedef WordFlags ContactSIMListFeatures;
typedef struct $E5C5FB0541E4719D33D10A3BED685F2B ContactSIMListSelectedLocationData;
typedef struct $88C48B873FC941D4B633FE85B9DEF799 ContactSIMListSelectedLocationsListData;
typedef enum $E887EFB2B4A55B422593C8F7077A575A ContactSIMListSelectionStatusType;
typedef enum $45B57FF165175B8B486C50007D24CC8B ContactToneFileType;
typedef ByteEnum ContdbCallType;
typedef ByteEnum ContdbFieldType;
typedef ByteFlags ContdbRecordFlags;
typedef struct $9153135A2201585E04B3431FD25185A9 ContextData;
typedef enum $459A6F027A73088B8B01208F560CFCD3 ContextLocation;
typedef char ContextName[22];
typedef WordFlags CopyChunkFlags;
typedef ByteEnum CopyChunkMode;
typedef enum $054D39CB2D30E5301EC532F068C38240 CountryType;
typedef ByteFlags CreateVisMonikerFlags;
typedef ByteFlags CurrencyFormatFlags;
typedef struct $CA95423F5D3A3B88DFCECBBE4A219731 CurrentToolValues;
typedef ByteEnum CustomConnection;
typedef WordFlags CustomDialogBoxFlags;
typedef ByteEnum CustomDialogType;
typedef struct $7AB9201E83F27474CAB1849430398806 CustomPortParams;
typedef ByteFlags DACPlayFlags;
typedef unsigned int DACReferenceByte;
typedef unsigned int DACSampleFormat;
typedef word DBGroup;
typedef dword DBGroupAndItem;
typedef word DBItem;
typedef optr DBItemRef;
typedef struct $1D34E85B7AE16F0226B0387F0E0CFADF DBReturn;
typedef WordFlags DCCFeatures;
typedef WordFlags DCCToolboxFeatures;
typedef WordFlags DTCFeatures;
typedef WordFlags DTCToolboxFeatures;
typedef struct $D433C3587180907A749CA3E4D2E49A9F DWFixed;
typedef struct $53C88A31E2D065CFF794B87F253F8795 DWFixedReturn;
typedef dword DWordFlags;
typedef word DashPairArray[10];
typedef enum $CAC17B8F1D131D022D498B43B69E80A4 DataGroup;
typedef struct $D9875CEE13F663E879F029A9D5CD9DB0 DatagramHeader;
typedef struct $5734C063B04D787F635C7966C2CD9C32 DateAndTime;
typedef struct $0AA0FA2F72202908C4390F4D9447108B DateFieldDataAttrs;
typedef enum $A77A1A600597C7BC9573EDC19D68BC05 DateTimeFormat;
typedef enum $8F20B6CA164593CDB33CDFB420FC5CE4 DayOfTheWeek;
typedef struct $2916A2950B6270043C97F90F55814E43 DebugObjDuplicateResourceInfo;
typedef ByteEnum DefaultFieldNameUsage;
typedef struct $34B169BE125EFB2F153C6CB5E28D1548 Dependency;
typedef struct $1A1FA1BC28E8F6032BBB48F78FC4A343 DependencyBlock;
typedef struct $8F209853ACC9D2D2A3FDDF12C8B5E727 DependencyListHeader;
typedef struct $E977B42B841A5B6C8F0C0D75347233A3 DependencyParameters;
typedef ByteFlags DerefFlags;
typedef struct $ED4B5B929280C627B01EC46C30B25B9F DestinationClassArgs;
typedef enum $5B6005029F45BDECB0AA0FEDC6377FB5 DestinationType;
typedef struct $47B77B9A42B18CF4C39BCF177DBED363 DetachDataEntry;
typedef enum $49A544EF34D2802EAC69A6AC23FC1A6B DevicePresent;
typedef WordFlags DictToolboxFeatures;
typedef struct $B581074FA507C26FA8AC074C918811EB DimensionAttrs;
typedef struct $BCEC6C2735959816C4DA1205097FAC86 DimensionAttrsToSetClear;
typedef word DirPathInfo;
typedef ByteFlags DiscoveryBlockFlags;
typedef byte DiscoveryInfo[23];
typedef struct $A7E27671D1B31B35CC8E8784EF24B630 DiscoveryLog;
typedef struct $A53635A00269170FAED14DD92C376AAD DiscoveryLogBlock;
typedef WordFlags DiscoveryLogFlags;
typedef enum $9A4063B5AAC2F8A7CC91E0E1CB1C26A2 DiskCopyCallback;
typedef enum $89FAB5A60CC68CC7F7EAD1181396A440 DiskCopyError;
typedef enum $890BC88F75D92222BBDFEE843EA4450E DiskFindResult;
typedef WordFlags DiskFormatFlags;
typedef Handle DiskHandle;
typedef struct $6AB9F634AF07840707DE942A9611E477 DiskInfoStruct;
typedef enum $19B9D80A0D679364B81427CE8B49472D DiskRestoreError;
typedef ByteEnum DisplayAspectRatio;
typedef ByteEnum DisplayClass;
typedef WordFlags DisplayMode;
typedef ByteEnum DisplayModeColor;
typedef ByteEnum DisplayModeDefinition;
typedef ByteEnum DisplayModeOrientation;
typedef ByteEnum DisplayModeResolution;
typedef struct $F0699A5AF3C5CC4A8833772B3C525266 DisplayScheme;
typedef ByteEnum DisplaySize;
typedef ByteFlags DisplayType;
typedef ByteEnum DistanceUnit;
typedef enum $11BE9D4940848FB94A5DB8ED83C1A452 DocQuitStatus;
typedef struct $D3C90F0C35A5BB2B18EAF34F3C5103AA DocumentCommonParams;
typedef struct $AE1AF3290E4BA2E174378E47B17F48DD DocumentFileChangedParams;
typedef struct $4BC11170B18132095E88F08C2EB601F2 DocumentFontInfo;
typedef hptr DocumentHandle;
typedef struct $5BC2B4BCCF9F9548C25305A7CF6A9D50 DocumentInfo;
typedef WordFlags DocumentOpenFlags;
typedef struct $B837F628F667B32FA39EA0D1E0064B94 DocumentOpenResult;
typedef TCHAR DocumentPrefix[27];
typedef enum $59BEEE5019F35980E4F5FB617FCAD371 DosCodePage;
typedef char DosDotFileName[14];
typedef ByteFlags DosExecFlags;
typedef char DosNoDotFileName[12];
typedef ByteFlags DrawFlags;
typedef byte DrawMask[8];
typedef ByteFlags DrawMonikerFlags;
typedef struct $ADB209ACCB3C519D42CDEDC0D836E785 DrawOrderAndReverseDrawOrder;
typedef ByteEnum DriveType;
typedef WordFlags DriverAttrs;
typedef struct $E2069C3EB486A3E66BAA8CC7F8D74480 DriverExtendedInfoStruct;
typedef struct $87491AB6006475F348EB03478E4D5790 DriverExtendedInfoTable;
typedef struct $0E34619FB4753858301426F501FD35FF DriverInfoStruct;
typedef struct $F087533DF9A550F364FA916BD5AF149C DriverPassParams;
typedef struct $2DD8EB525FBAA11535166EE905E46092 DriverReturnParams;
typedef enum $718BBCEF78DB13D2175E4FFD00EF4DEC DriverType;
typedef byte ECICauseType;
typedef byte ECICommonCause;
typedef ByteEnum EditRecordType;
typedef WordFlags EditUserDictionaryFeatures;
typedef WordFlags EditUserDictionaryToolboxFeatures;
typedef struct $FCAABF203035303C2C7EFB7EE8CB7706 ElementArrayHeader;
typedef WordFlags EndCreatePassFlags;
typedef WordFlags EndCreateReturnFlags;
typedef ByteFlags EndOfSongFlags;
typedef struct $111F8AB9DD01BF7D4DE4350396130BE8 EnsureActiveFTPriorityPreferenceData;
typedef struct $AF4BD1587849EFB0B00E8132047A4D64 EnsureNoMenusInStayUpModeParams;
typedef struct $093F55B5EF8CA59C41D4043BE9BFEF04 EntryPointRelocation;
typedef ByteEnum EnvelopeOrientation;
typedef WordFlags ErrorCheckingFlags;
typedef struct $A880F442CEF644CECBB1BBDE87678B74 EvalErrorData;
typedef struct $CBB28D53D72CFE1DB763280DC023E022 EvalErrorItem;
typedef ByteFlags EvalFlags;
typedef struct $C2322F8411021A2D25E7C16C98385A9C EvalFunctionData;
typedef struct $09195A88C3496E001EAB39FA4D3CD7D0 EvalNameData;
typedef struct $B5F6D2FE3E92EF4E70784243F8DABE0F EvalOperatorData;
typedef struct $9C6AD976D84CF4A1A5CC7A4CCC197AB1 EvalParameters;
typedef struct $3E75B4E0D13360DDB4E0407282102EEF EvalRangeData;
typedef union $2A447E9DA5AA3F7C07765E9D5F491112 EvalStackArgumentData;
typedef ByteFlags EvalStackArgumentType;
typedef union $1BC2D40B6238BD73097994BDCE1B99EA EvalStackOperatorData;
typedef ByteEnum EvalStackOperatorType;
typedef struct $1FEB66003BE8AE92A6DE53ED102F87D4 EvalStringData;
typedef WordFlags EvaluatePositionNotes;
typedef ByteEnum EvaluatePositionRating;
typedef struct $97BD3ADAD70F696A07F5F443F1DAC867 EvaluatePositionRatingAndNotes;
typedef Handle EventHandle;
typedef TCHAR EventTextString[40];
typedef ByteFlags ExitFlags;
typedef WordFlags ExportControlAttrs;
typedef ByteFlags ExportControlFeatures;
typedef ByteFlags ExportControlToolboxFeatures;
typedef WordFlags ExtendedFileSelectorAttrs;
typedef struct $8F7DD3229DAC2E151FE42A47810F1058 ExtendedFileSelectorEntryData;
typedef struct $A0A5CED3170D457EB224B2692E8730BA ExtendedSACAddress;
typedef struct $9C6F04CA0F3086940A68FB13E12FBEED ExtraSizeParams;
typedef WordFlags FACFeatures;
typedef WordFlags FACToolboxFeatures;
typedef enum $59C14898AE7A5B587F14A1C1BA665695 FApplication;
typedef WordFlags FCFeatures;
typedef WordFlags FCToolboxFeatures;
typedef enum $C1A703C5E43FF6ACC37796EA2F35EF3E FDocAccess;
typedef enum $537933D0DB3C015B354BCE628C9392E0 FDocumentDir;
typedef struct $204CAA8B2322F8E815F97C23DB7FB898 FEDosInfo;
typedef struct $9DCC85BB9E8F3D12F21DDA942F29C259 FENameAndAttr;
typedef union $E1019BFE6D4CFBF827CF1BBB47257704 FFA_stackFrame;
typedef WordFlags FFCCFeatures;
typedef struct $D69AE86FD7BE7F2F28951CD0FE225D02 FFDBFieldNavigationOrderInfo;
typedef struct $F11FBB428BBBD79B5414A5B3115C5995 FFDBSortInfo;
typedef struct $50F93BE84B6B31D21D26730DACEA5B82 FFDListStatusChangeMessageBlock;
typedef WordFlags FFDSortOptions;
typedef enum $BF6AF5408CB37ADF79639422A7DC4F9C FFDSubsetOptionsInfo;
typedef ByteFlags FFD_attributes;
typedef ByteEnum FFDeleteLayoutResult;
typedef word FFEBFunctionContext;
typedef ByteEnum FFFPAdvancedButtons;
typedef ByteEnum FFFPContext;
typedef ByteEnum FFFPNotesButtons;
typedef ByteEnum FFFPUserLevel;
typedef struct $2D8D45B1C6697B7FCC08E83650BFFCC6 FFFieldAppearanceChangeMessageBlock;
typedef ByteEnum FFFieldCreationResult;
typedef ByteEnum FFFieldListChangeStatus;
typedef WordFlags FFFieldPropertiesFeatures;
typedef struct $04FD6ED9537E226C4BCB90DE0D647408 FFFieldPropertiesInputStruct;
typedef struct $7120AB05025101D512ECD9F7028B0824 FFFieldPropertiesMessageBlock;
typedef ByteEnum FFFieldValidationType;
typedef ByteFlags FFGBUpdateUIFlags;
typedef struct $CEE1D7B23F3F27BF73ED861B318F616F FFLabelGuardianAndWardInstanceDataStruct;
typedef struct $A12DC9184D9B6C2153F436F8EAAEDE47 FFLabelGuardianInstanceBlock;
typedef ByteEnum FFLayoutNameInsertionResult;
typedef enum $CD43E1C34EA79D68A22A14D48BA75902 FFRCPJumpType;
typedef enum $DEC3C9B9A2EC727EC553EB05369EA972 FFRecordControlRequest;
typedef struct $9EF6EABEF73D64FE33D6B8317FD86AA4 FFRecordControlStatusFlags;
typedef struct $246296ADE98E4C088346AFB0AD558A07 FFRecordControlStatusMessageBlock;
typedef struct $DBD375C41A4555C918F311701A31D818 FFTFGInstanceData;
typedef struct $D021DB76E61B1B87251EA6D26EA1199E FFTInstanceData;
typedef struct $F80F0DEFE08F400E1AACFA1F75074CE9 FFTextGuardianAndWardInstanceDataStruct;
typedef void FILE;
typedef WordFlags FJCFeatures;
typedef WordFlags FPSCFeatures;
typedef WordFlags FTSCFeatures;
typedef struct $5E4412151B7825395A9F2C175D37ABF1 FTVMCGrab;
typedef bFTP_rspStruct F_Put_cnfStruct;
typedef bFTP_rspStruct F_Put_rspStruct;
typedef bFTP_rspStruct F_Query_cnfStruct;
typedef bFTP_rspStruct F_Query_rspStruct;
typedef enum $5D8844FD0E3D1F87D7A2926C70C58B55 FatalErrors;
typedef struct $C2E36341B3240ADBBFF5C1AB3A6632AE FaxMailboxExternalAddr;
typedef enum $3CD932289B448C86446CC5FB60CDE42A FaxSendResolutionChoice;
typedef enum $0E1CB1FBBEAC4526B96E773A9DAFEFB3 FaxTiffCallbackType;
typedef enum $08B2A41D5FDB0C7688E8EC48ABE114F2 FaxTiffConvertError;
typedef ByteEnum FieldChangeType;
typedef ByteEnum FieldCreateRequest;
typedef struct $90CE28F6FE04DDED2A1FAA7BB57BE3B9 FieldDataAttrs;
typedef ByteEnum FieldDataType;
typedef ByteFlags FieldDataTypesFlags;
typedef ByteFlags FieldEdgeFlags;
typedef struct $7F5ECA9A8F93CBA177FB175555B5043D FieldHeader;
typedef word FieldID;
typedef struct $BF98338CC3DF84317EE86BE6938A3D1C FieldInfo;
typedef struct $CC7DD387F44755ED07F080D94D2F5B71 FieldInfoBlock;
typedef byte FieldListID;
typedef ByteEnum FieldListQuery;
typedef enum $3CDB7B10D95D89346CF13679E3142EAE FieldOrderMovementCommand;
typedef ByteEnum FieldRangeCheck;
typedef ByteEnum FileAccess;
typedef ByteFlags FileAccessFlags;
typedef char FileAccessRights[16];
typedef struct $1445BF4370353119532E1933DC34F1BA FileAttrInfo;
typedef ByteFlags FileAttrs;
typedef struct $454D79A8FC4C6E6DCA77343D355ED71E FileChangeBatchNotificationData;
typedef struct $484BE7560261EDEE86735C7A619D1C06 FileChangeBatchNotificationItem;
typedef struct $40226B9F48FF3F510D75388C67667F11 FileChangeNotificationData;
typedef enum $FD0DDF1BA677F9C28B24DB878E28101E FileChangeNotificationType;
typedef ByteEnum FileConnection;
typedef char FileCopyrightNotice[32];
typedef WordFlags FileCreateFlags;
typedef struct $DF079724794AD4F82A57B3AE9AA229D5 FileDDAppRef;
typedef struct $0EA0CE9658B137E8AB227DEE137A03FF FileDDMaxAppRef;
typedef WordFlags FileDate;
typedef DWordFlags FileDateAndTime;
typedef char FileDesktopInfo[16];
typedef struct _FileEnumCallbackData FileEnumCallbackData;
typedef struct _FileEnumParams FileEnumParams;
typedef ByteFlags FileEnumSearchFlags;
typedef enum $FA2A7A0A10B13D6063E39A75637109A5 FileEnumStandardCallback;
typedef enum $E5CD5D7E1CC68E639C3C7C8A6671A35E FileEnumStandardReturnType;
typedef ByteEnum FileExclude;
typedef struct $EF7BAD2ED54F83342FA831A6225A4D3D FileExtAttrDesc;
typedef struct $7ECEFCEE88BBA087F8E222270399F713 FileExtAttrDescLike;
typedef enum $FC794F59B9E0B467AEAB163D8BF022D0 FileExtendedAttribute;
typedef Handle FileHandle;
typedef dword FileID;
typedef char FileLongName[36];
typedef WordFlags FileOpenAndReadFlags;
typedef struct $6B11C0F92D2B2831BA102282120B4F8C FileOpenControlRenameCopyStruct;
typedef struct $98D2F76F00FB18AE97C8B0B8C0CF0263 FileOpenCreateNewMoniker;
typedef WordFlags FileOpenFeatures;
typedef char FileOwnerName[16];
typedef char FilePassword[8];
typedef struct $9E43FFAA4433D1375C6A87A69F17B9CA FilePathID;
typedef FilePathID FilePathIDArray[100];
typedef struct $A5D1A54A8D32737C2E30FE84F1A4805B FilePortParams;
typedef ByteEnum FilePosMode;
typedef WordFlags FileResolveStandardPathFlags;
typedef WordFlags FileSelectorAttrs;
typedef WordFlags FileSelectorFileCriteria;
typedef WordFlags FileTime;
typedef TCHAR FileUserNotes[100];
typedef struct $B2B1DF48CBF906F858C9E4B377B00785 FilterListCustomIdentifiers;
typedef struct $957E40A1EC55619C886CE7C511787CD3 FindNoteHeader;
typedef struct $8FDF5620761B6BC5E2B3B56446BAB5B2 FixNum;
typedef struct $F128A755BC6B0E5F86C86601A572BA4A FixedVisVupCreateGStateReturnParams;
typedef struct $0A79AC3CB947553167E3E553DAA7E51C FlashingNoteTimerData;
typedef struct $819748FEF669829A861BBCF8D9F83A08 FlatFileMapBlock;
typedef ByteFlags FloatAsciiToFloatFlags;
typedef ByteEnum FloatErrorType;
typedef WordFlags FloatExponent;
typedef struct $56937A69BEC9EF05E41EE828021D980D FloatFloatToAsciiData;
typedef WordFlags FloatFloatToAsciiFormatFlags;
typedef struct $CE61C35841FCDFD5464093C6EDAD7E8B FloatFloatToAsciiParams;
typedef union $04CA013B1BD18FA29F69DBAC223766A9 FloatFloatToAsciiParams_Union;
typedef struct $D833680BA9F9813B8B36A3F0A5C295BC FloatFloatToDateTimeData;
typedef WordFlags FloatFloatToDateTimeFlags;
typedef struct $BE09A590551AAFC71EB9AD887BFB9B94 FloatFloatToDateTimeParams;
typedef long double FloatNum;
typedef struct $F3568FFD21F3549D46C8AFEF4E4668F8 FloatNumStruct;
typedef long double FloatNumber;
typedef ByteEnum FloatStackType;
typedef struct $D45E66271273EF2F27C335FC487A6510 FloatingKeyboardInfo;
typedef enum $7CE27BC75A49256278CCD2BF5B9418EB FoamCMTToneType;
typedef WordFlags FoamCustomDialogBoxFlags;
typedef enum $BAA57D29C5CB51255352E7B021838F86 FoamDBActionType;
typedef struct $01CDD5AC4B545C5C8FD0AE589433F89F FoamDBChangeNotification;
typedef WordFlags FoamDBFlags;
typedef struct $B43E20E8877E2E1725929493BD4637F0 FoamDBMap;
typedef ByteFlags FoamDBRecordFlags;
typedef enum $757622241BD6F526DC0072E1E3E807C5 FoamDiskSpaceStatus;
typedef enum $FE7FE942B8120315422BF7C005D4DC25 FoamDocHeader;
typedef struct $29DAF32B7F977AACEE9F639FFABC3529 FoamDocMapBlock;
typedef struct $6275D3E5FD1A38F422612CE3BD6EE4C8 FoamDocSettings;
typedef enum $1C1996B8B1840EF248925820121303E4 FoamDocTextFormatted;
typedef struct $93B9B63DDECFCFEC1F13D557A417BF3D FoamNotifyFontChange;
typedef struct $154AC7664F8D3D9F08C179331F2DF235 FoamNotifyJustificationChange;
typedef struct $A38DAF9AC86988EBFD7623546187F3E8 FoamNotifyPointSizeChange;
typedef struct $4E90F90D7F1829822701CDC69E5508A0 FoamNotifyTextStyleChange;
typedef enum $DE2ACE1D27092D4A105467982A297D73 FoamPathError;
typedef word FoamPathHandle;
typedef enum $B19A794A42962187F2659A8495EF1E92 FoamPrintBaudRate;
typedef enum $8BA0B8CCCA5679A3EBC348C6E602E361 FoamPrintConnectType;
typedef enum $4CB75D72147BD9F41A145206BB75A21D FoamPrintDataBits;
typedef enum $C4AF06427251E370F13D6268B18F1803 FoamPrintFlowControl;
typedef enum $A0C62A4D7C575C50F511A7DA59F1E48C FoamPrintHeaderState;
typedef enum $80D96DAFE1DB6F5E9255DC93C944D179 FoamPrintPaperSize;
typedef enum $3D96E4EAD4E6E93A63D2510DDAC8EC93 FoamPrintParity;
typedef enum $8190556512B3D3A3DDF7FBD94D738FA5 FoamPrintStopBits;
typedef WordFlags FoamProgressDialogFeatures;
typedef enum $A8904477F74D910E307441D7A5DD1647 FoamReaderAppType;
typedef enum $4AB2905DC487E8532D4D6660E86D487C FoamSaveAction;
typedef enum $D259DC1B1D231EC7AC9527C0B9641DDD FoamUseApplicationTones;
typedef enum $B3091C5DAF7254A51DC990DAE453836F FoamVolumeLevel;
typedef enum $BE5313DA5CDC4E8087A9EB88C9DFCAE4 FoamWarningToneState;
typedef enum $D45B97C661E170765A7C05DAD2AAA682 FoamZoomCommentType;
typedef struct $E442FAB295C1F6B01E4A67BC4ACE4927 FocFilePath;
typedef ByteFlags FontAttrs;
typedef struct $556B54E3E258A6155AC30FD146720C64 FontEntry;
typedef ByteFlags FontEnumFlags;
typedef struct $414504422718D17FEC3750E6EDBEF93D FontEnumStruct;
typedef byte FontFamily;
typedef struct $ED11D71EB02C1C84837B054295EC488B FontGeometry;
typedef word FontGroup;
typedef word FontID;
typedef WordFlags FontIDRecord;
typedef word FontMaker;
typedef byte FontMap;
typedef ByteEnum FontWeight;
typedef ByteEnum FontWidth;
typedef ClipboardItemFormatInfo FormatArray[10];
typedef struct $85CBAC501BABFDECD6577D39EB23880C FormatArrayHeader;
typedef struct $785079C60EC0BECDFDE9BD52E74023BD FormatEntry;
typedef enum $650A659A1C931CAD8E1FEB17E9C8DD01 FormatError;
typedef enum $7A3E27181726140AF3D6524B218613FC FormatIdType;
typedef struct $ABAEBE426A65CEE0E41F991D336AF157 FormatInfoStruc;
typedef struct $2F7F3F2D058449C7E9DC1267634C1528 FormatParameters;
typedef struct $B221F41118F629C3B3E591BBC9B9FBBA FormatParams;
typedef enum $ADCFDE7ABA2A00DE3730A3013FECF134 FunctionID;
typedef WordFlags FunctionType;
typedef WordFlags GCCFeatures;
typedef ByteEnum GCMIcon;
typedef enum $A9DA9023B6FBA41BA3230240B6602CF9 GCM_info;
typedef enum $FF296692CD885ED8365E6B263DAC431B GCNDriveChangeNotificationType;
typedef enum $873EC953EBCAA549C13959FDFD48AF45 GCNExpressMenuNotificationTypes;
typedef struct $6FF5F8D6FD7186E8270439CC293C91D6 GCNListBlockHeader;
typedef struct $7AE0F1388266DC444C9578DD1E52AF9B GCNListElement;
typedef struct $D7B1ED8BC9A54A1956DBEF5D6982E9AC GCNListHeader;
typedef struct $C26D66C7CC80404DBF3CBFC441C95717 GCNListOfListsElement;
typedef struct $9E22BFFE0CCBD83E70F71E954B52DB3B GCNListOfListsHeader;
typedef struct $3B3A8122E4B08C701D1946363FBAF559 GCNListParams;
typedef WordFlags GCNListSendFlags;
typedef struct $FDD3C1C73145D1DC71260CC1F0925D78 GCNListType;
typedef WordFlags GCNListTypeFlags;
typedef enum $0E8F9602ACE59B4E632B46626F798AEB GCNShutdownControlType;
typedef enum $893FC781B957FE149F14732CEA08381B GCNStandardListType;
typedef WordFlags GDCFeatures;
typedef ByteEnum GDCTask;
typedef WordFlags GDCToolboxFeatures;
typedef WordFlags GECFeatures;
typedef WordFlags GECToolboxFeatures;
typedef enum $D00CC554A099D4E54C40A499600BD316 GFM_info;
typedef ByteFlags GOAACFeatures;
typedef ByteFlags GOATGCFeatures;
typedef ByteFlags GOArcCFeatures;
typedef ByteFlags GOCCFeatures;
typedef ByteFlags GOCDCFeatures;
typedef ByteFlags GOCSCFeatures;
typedef ByteFlags GODACFeatures;
typedef ByteFlags GODMCFeatures;
typedef ByteFlags GODepthCFeatures;
typedef ByteFlags GOFCFeatures;
typedef ByteFlags GOGCFeatures;
typedef struct $858B9A8623AAC9B714978EA4ABE79D7E GOGetSizeParams;
typedef ByteFlags GOHCFeatures;
typedef ByteFlags GOHSCFeatures;
typedef WordFlags GOLACFeatures;
typedef WordFlags GOLACToolboxFeatures;
typedef ByteFlags GOPICFeatures;
typedef ByteFlags GOPICToolboxFeatures;
typedef WordFlags GOTCFeatures;
typedef ByteFlags GOTransformCFeatures;
typedef WordFlags GPCFeatures;
typedef WordFlags GPCToolboxFeatures;
typedef WordFlags GPICFeatures;
typedef WordFlags GPICToolboxFeatures;
typedef WordFlags GSControl;
typedef ByteFlags GSRefCountAndFlags;
typedef enum $A972662BCE1EC8B4640067EF15BC010B GSRetType;
typedef Handle GStateHandle;
typedef void GString;
typedef ByteEnum GStringElement;
typedef enum $4A93BDE36C1AD5918EC282C61FB32CDD GStringErrorType;
typedef ByteEnum GStringKillType;
typedef ByteEnum GStringSetPosType;
typedef ByteEnum GStringType;
typedef WordFlags GTCFeatures;
typedef struct $6E6C7024A1199D0A803A3ED0855F83EA GTelnetOpenConnectionParams;
typedef enum $0545C44ECFB282FAD99EC53958DDB200 GTelnetOpenConnectionStatus;
typedef WordFlags GVCFeatures;
typedef WordFlags GVCToolboxFeatures;
typedef ByteEnum GameStatus;
typedef WordFlags GameStatusControlFeatures;
typedef ByteEnum GenAppUsabilityCommand;
typedef struct $2D6E80DE77778EE89EAC7F30114EBD22 GenAppUsabilityTuple;
typedef ByteFlags GenAppUsabilityTupleFlags;
typedef ByteFlags GenAttrs;
typedef WordFlags GenBranchInfo;
typedef WordFlags GenControlBuildFlags;
typedef ByteFlags GenControlChildFlags;
typedef struct $4E04F3491D6170F01FFA59C42837288E GenControlChildInfo;
typedef ByteFlags GenControlFeatureFlags;
typedef struct $A0E9E81AF572760746026ACB902A22F1 GenControlFeaturesInfo;
typedef struct $D605913DA26B7F65FE83E88D7DF0F760 GenControlGetFeaturesReturn;
typedef WordFlags GenControlInteractableFlags;
typedef ByteEnum GenControlScalableUICommand;
typedef struct $BDEFA36AFB38E6D8592BEF7A4798F546 GenControlScalableUIEntry;
typedef struct $FC62D783C3D4317127EF5D10C54F1D4B GenControlScanInfo;
typedef WordFlags GenControlStatusChange;
typedef enum $23AB1D777A17D61FCB408E9E96142E17 GenControlUIType;
typedef struct $3816CBA8F6AD65C3A37922185B920CF8 GenControlUserData;
typedef WordFlags GenControlUserFlags;
typedef enum $66B2988911F7460091C46A06CF8D5416 GenDefaultMonikerType;
typedef ByteFlags GenDisplayAttrs;
typedef ByteFlags GenDisplayControlAttributes;
typedef WordFlags GenDocumentAttrs;
typedef WordFlags GenDocumentControlAttrs;
typedef WordFlags GenDocumentControlFeatures;
typedef ByteEnum GenDocumentControlMode;
typedef WordFlags GenDocumentGroupAttrs;
typedef enum $24B080F506CD1092DEE44DBE66CFFB7E GenDocumentOperation;
typedef enum $02D1D190F894C3D3A6B5EAC52D3A690B GenDocumentType;
typedef ByteFlags GenFieldFlags;
typedef struct $FEB5860C8A4E1D4F0C5CB599D61FFB21 GenFilePath;
typedef WordFlags GenFileSelectorEntryFlags;
typedef ByteEnum GenFileSelectorEntryType;
typedef struct $6F5AFB05A87D990FF2C6AB01E96FFB25 GenFileSelectorFileAttrs;
typedef struct $BC98AB8D7067BB04DA74E492F0AC1495 GenFileSelectorFileHeaderFlags;
typedef Boolean GenFileSelectorFilterRoutine(optr oself, FileEnumCallbackData *fecd, word frame);
typedef struct $B9CA92C46C4C79E5BC1C07B139A82AA1 GenFileSelectorGeodeAttrs;
typedef struct $668A5D83D189E9B87FE4CA9BD0335BB3 GenFileSelectorGetFilterRoutineResults;
typedef FileLongName GenFileSelectorMask;
typedef ByteEnum GenFileSelectorScalableUICommand;
typedef struct $6F7C35CDEC0D1E39F91A06BAE862F162 GenFileSelectorScalableUIEntry;
typedef GenFileSelectorScalableUIEntry GenFileSelectorScalableUIEntryArray[100];
typedef FileLongName GenFileSelectorSelection;
typedef ByteEnum GenFileSelectorType;
typedef VolumeName GenFileSelectorVolume;
typedef WordFlags GenFindObjectWithMonikerFlags;
typedef struct $C56DA9433EE093CCBBA1C0F025E8649C GenFindViewRangesParams;
typedef ByteFlags GenGadgetAttributes;
typedef struct $D0F422469C70CF73BAC808B4D6CB13DE GenGupFieldInfo;
typedef struct $8E0FE6A356E10D125C87C02C374149FF GenGupScreenInfo;
typedef ByteFlags GenInteractionAttrs;
typedef ByteEnum GenInteractionGroupType;
typedef ByteEnum GenInteractionType;
typedef ByteEnum GenInteractionVisibility;
typedef ByteEnum GenItemGroupBehaviorType;
typedef ByteFlags GenItemGroupStateFlags;
typedef struct $E8CAE10A3AB3017981A9F0FDAAA4E68D GenPathDiskRestoreArgs;
typedef struct $34E273231D0AE3834826A47C1F9E8C6D GenReturnParams;
typedef ByteFlags GenScanItemsFlags;
typedef ByteFlags GenStates;
typedef ByteFlags GenTextAttrs;
typedef ByteFlags GenTextStateFlags;
typedef enum $8A444A306AD0D6C1DB52AD7E00837D4D GenUpwardQueryType;
typedef ByteEnum GenValueDisplayFormat;
typedef struct $FEFE1B9EBB56156FCDD98B5712AF57DF GenValueIntervals;
typedef ByteFlags GenValueStateFlags;
typedef struct $8E5E1C48F2500787167AE339DCA17AB9 GenValueStateFlagsAsWord;
typedef enum $1E7095AF937764D809F4989B6F83F6F8 GenValueType;
typedef WordFlags GenViewAttrs;
typedef WordFlags GenViewControlAttrs;
typedef enum $FAB72CC09C191B75F969B04AB301B253 GenViewControlSpecialScaleFactor;
typedef ByteFlags GenViewDimensionAttrs;
typedef ByteEnum GenViewInkType;
typedef ByteFlags GeneralConsumerModeFlags;
typedef enum $6E8BC7FDB541C5AB02DA93DFCDA51EF6 GeneralEvent;
typedef struct $AB76DA3AEE4EA08820449620296D0C9A GengoNameData;
typedef struct $8AFD5DFA96B122F44947FC2ACB3288C5 GeoAndDimensionAttrs;
typedef enum $621BFAEEC8642981E46383FA80AD7C6D GeoWorksGenAppGCNListType;
typedef enum $4F0E3F2AB14EC8561083F792AB823DAA GeoWorksMetaGCNListType;
typedef enum $FE050C21ACCAA744772A2162503E3E08 GeoWorksNotificationType;
typedef enum $1B194811FF696653DDFF3BBB92DF0D98 GeoWorksVisContentGCNListType;
typedef WordFlags GeodeAttrs;
typedef enum $14D34EC051630892B30EBAADF9B59B1D GeodeDefaultDriverType;
typedef enum $5AD4E179393241D800F378B6AB37A656 GeodeGetInfoType;
typedef Handle GeodeHandle;
typedef struct $979596CD580D4CAD51A157F157E5B397 GeodeHeapVars;
typedef enum $13BEEE46ACD3B01C5148791CEAF659A5 GeodeLoadError;
typedef struct $02C83F8C23455EF296230E586B96777F GeodeToken;
typedef enum $BA8846BAD6ACFF8D252C4AB2697E5C35 GeodeType;
typedef WordFlags GeosFileHeaderFlags;
typedef enum $753EECC1378132035188572323486D44 GeosFileType;
typedef enum $A42602A6880D3C60080093A44C74C3CA GeoworksGStringEscapeCode;
typedef enum $27E8C610FAD22D8691545344EDA4017F GeoworksMailboxDataFormatID;
typedef enum $FF2AB1DACD3E74CA8F2D6CE9C2BDB245 GeoworksMailboxStorageID;
typedef enum $FC9B086B3907F97114104B7DEF00EAF5 GeoworksMailboxTransportID;
typedef enum $CAACF5457222C6E57B1C9D5BC45EFBA2 GeoworksMediumID;
typedef Boolean __pascal GestureCallback(Point *arrayOfInkPoints, word numPoints, word numStrokes);
typedef enum $50617334C99A802EF5B4D6785D74C2B2 GestureType;
typedef struct $6D5DA78DB33BA6EBB61C5632875F44CC GetActionParams;
typedef struct $C1C9F29BD1C153189A3914A37049B0F7 GetActiveCell;
typedef struct $D373DDE97AFBDC83AC30D0E25C034460 GetCell;
typedef struct $021F3F293F8CCBCA42568EEDF1833F03 GetCenterParams;
typedef struct $C987A8CA671AEC17E567431B02B0F1E6 GetComplexMoniker;
typedef struct $85EC4E73E755D930F16BCE1788DEE2E1 GetDisplayArrayInfo;
typedef ByteEnum GetEndpointType;
typedef struct $884196AD1276F330BA70B1273B1FE632 GetFormatCount;
typedef ByteEnum GetMaskType;
typedef struct $1457708FC57CE2E5C7C2E27C17B44512 GetNameInfo;
typedef struct $9606A4620223E2C7E2E56D4700E70183 GetNoteInfo;
typedef struct $C8A5A9183532B5D1506E115182FCBF84 GetNumNamesInfo;
typedef ByteEnum GetPalType;
typedef enum $90E002FB11625EF7CF0797170E6D5996 GetPathType;
typedef struct $3DB621FAD832A95964BE53340F49B94C GetScaleParams;
typedef enum $EC28A20ABB843B6D885125121C0AA5B9 GetSearchSpellObjectOption;
typedef WordFlags GetSearchSpellObjectParam;
typedef struct $AA4E0452FE67E7CE5A765C2583A2474D GetSizeArgs;
typedef struct $60F53518EEB71FC9970F1B815F2833F4 GetTargetParams;
typedef struct $E98CBD8C4573CD9E9FE0FF32B91561C2 GetTextObject;
typedef struct $578AA86A164FD736A463B40188909EB0 GetTokenCreatorParams;
typedef enum $DAD790FDB2B58BEEDE292F7C1062D012 GrInfoType;
typedef ByteFlags GrObjActionEvent;
typedef ByteFlags GrObjActionModes;
typedef struct $FF3AED6CEAA544C737FC8A0FE3462592 GrObjActionNotificationStruct;
typedef enum $70DA3748760AEBB3D3CF6C39FC632258 GrObjActionNotificationType;
typedef WordFlags GrObjAlignDistributeControlFeatures;
typedef struct $9F47C829AA7BEDE6FCA8C79A83B8D57C GrObjAnchoredScaleData;
typedef struct $FD1E0ECFC04335470EAD809F685E9E7F GrObjAnchoredSkewData;
typedef enum $2C172900036D0F598CF971AC939F175C GrObjAreaAttrElementType;
typedef ByteFlags GrObjAreaAttrInfoRecord;
typedef WordFlags GrObjAttrFlags;
typedef struct $2DBE6969D0A77F2C2C97A683816AE478 GrObjAttributeManagerArrayDesc;
typedef WordFlags GrObjBaseAreaAttrDiffs;
typedef struct $2C04135B07BACC84AF9A90452F3EA3AD GrObjBaseAreaAttrElement;
typedef WordFlags GrObjBaseLineAttrDiffs;
typedef struct $AFAC1D9E66E4996B4643E526AD5EC3C3 GrObjBaseLineAttrElement;
typedef WordFlags GrObjBodyAddGrObjFlags;
typedef struct $3A190449B497CF387B04C64549CB25F3 GrObjBodyCreateGrObjParams;
typedef struct $1FCB533531D423085CA2549CEC9C144D GrObjBodyCustomDuplicateParams;
typedef ByteFlags GrObjBodyFlags;
typedef struct $4CF1D41990088B1D9D8F486F6FD0DE0E GrObjBodyPasteCallBackStruct;
typedef WordFlags GrObjBodyUnsuspendOps;
typedef ByteFlags GrObjCreateControlFeatures;
typedef struct $1F6C4A26E36096CABFDD357582620F95 GrObjDefiningData;
typedef WordFlags GrObjDrawFlags;
typedef ByteFlags GrObjDuplicateControlFeatures;
typedef ByteFlags GrObjDuplicateControlToolboxFeatures;
typedef struct $1C8F01E424138141016B454C181D946A GrObjElementObjPtr;
typedef struct $070AF63B906B87BEE544DED7FFBE19BB GrObjEntryPointRelocation;
typedef ByteFlags GrObjFileStatus;
typedef struct $05CD8912E26E5884082A50797E45BB76 GrObjFullAreaAttrElement;
typedef struct $4E5E6935D01693ECFAF9ECAB065BBF18 GrObjFullLineAttrElement;
typedef WordFlags GrObjFunctionsActive;
typedef struct $667D623AD008361A8A85E78ED40AC6F3 GrObjGradientAreaAttrElement;
typedef ByteFlags GrObjGradientAttrDiffs;
typedef ByteFlags GrObjGradientFillControlFeatures;
typedef enum $22150128E3663DED7B125D4703D8ACF2 GrObjGradientType;
typedef struct $EF6B4C0D0E40CA63C63B5E0172974E56 GrObjHandleAnchorData;
typedef ByteFlags GrObjHandleSpecification;
typedef struct $91D35A5CA07D717F8DBF75869519BABA GrObjInitializeData;
typedef ByteFlags GrObjInstructionControlFeatures;
typedef enum $BE811DE6E44980473EC4740E24C9BC7F GrObjLineAttrElementType;
typedef ByteFlags GrObjLineAttrInfoRecord;
typedef WordFlags GrObjLocks;
typedef WordFlags GrObjMessageOptimizationFlags;
typedef enum $87D4EC0DCB98396977B2BC5B3B8102D8 GrObjMouseReturnType;
typedef struct $39B2F06E450556906F12841A28FECA17 GrObjNotifyAreaAttrChange;
typedef struct $95618DDE8F85F1BD8F8776664A129F58 GrObjNotifyCurrentTool;
typedef struct $22C4FFCC3D1E2551AEAD156957CFB469 GrObjNotifyGradientAttrChange;
typedef struct $7D8390A781560370EB9C3C0177830A75 GrObjNotifyLineAttrChange;
typedef struct $65B4FB9FB5EA3C4757FB77D7DB52040B GrObjNotifySelectionStateChange;
typedef ByteFlags GrObjNudgeControlFeatures;
typedef struct $B6E25340281BE6F677280929F21592AD GrObjObjManipData;
typedef ByteFlags GrObjObscureAttrControlFeatures;
typedef ByteFlags GrObjOptimizationFlags;
typedef ByteEnum GrObjPointerImageSituation;
typedef struct $6252A474C2B1D6A6E3EF23734609E957 GrObjResizeMouseData;
typedef ByteFlags GrObjRotateControlFeatures;
typedef struct $1FD7B2C8CF05369F7A647FF498D04690 GrObjRotateMouseData;
typedef ByteFlags GrObjScaleControlFeatures;
typedef struct $9C193B18922D78DC5F2F6D72CE9E19F9 GrObjScaleData;
typedef struct $D4DDE4122A33DD8A79F0C5C495ACE058 GrObjSelectionState;
typedef ByteFlags GrObjSelectionStateDiffs;
typedef ByteFlags GrObjSelectionStateFlags;
typedef ByteFlags GrObjSkewControlFeatures;
typedef struct $BD0038A59F4DE2995F9BE87649D3EBBD GrObjSkewData;
typedef struct $A463903C7A3D1C06B56EA3ECFFD4185D GrObjStyleElement;
typedef WordFlags GrObjStyleFlags;
typedef struct $8A6FC1AF7FF05695A769948764B90444 GrObjStylePrivateData;
typedef ByteFlags GrObjTempModes;
typedef struct $F8107325F390FD0A11D266A407B09498 GrObjTempStateAndOptFlags;
typedef struct $3FC874382814EAB9AC61F1290A3C47E2 GrObjTextArrays;
typedef ByteFlags GrObjTiledDataFlags;
typedef struct $E2F65724A23A920273AA1B44B0CD0A31 GrObjTransMatrix;
typedef struct $F062CD1ABA18414C9CDB24683A59E419 GrObjTransferBlockHeader;
typedef struct $DFB15FFD177424C7B028D071C2A7707E GrObjTransferDataDirectory;
typedef WordFlags GrObjUINotificationTypes;
typedef struct $0E51AB09D459E69B31D3E58CF4DB342C GrObjUndoAppType;
typedef ByteEnum GrObjVisGuardianCreateMode;
typedef ByteFlags GrObjVisGuardianFlags;
typedef enum $FF5DF312F068DDB94B2021990FE7BABB GrObjWrapTextType;
typedef struct $4D857804ADE8280CB3450CBEABD33FAC GrObjsInRectData;
typedef ByteFlags GrObjsInRectSpecial;
typedef struct $7E281E907F6FC24AE13735E089E3073A GraphicPattern;
typedef struct $4C65181F112787038EC7401131A5731D GraphicsProperties;
typedef struct $B0B392FA1AD346CB7A31E49DCFB66F1D Grid;
typedef ByteFlags GridOptions;
typedef struct $4A5A4624D2B7AE88B8FF8034C814C8DB GridSpacing;
typedef WordFlags GroupAddGrObjFlags;
typedef ContactEnumReturnValue __pascal GroupCallbackFunc(RecordHeader *record, void *data1, void *data2);
typedef ContactEnumReturnValue __pascal GroupHandleCallbackFunc(MemHandle *record, void *data1, void *data2);
typedef ByteFlags GroupUnsuspendOps;
typedef struct $433B18DE0A9A92926B8B9DEC028A5567 Guide;
typedef WordFlags HCFeatures;
typedef WordFlags HCToolboxFeatures;
typedef WordFlags HPCFeatures;
typedef struct $338E3D958C0E3C2173B5F1EA3B4B4A23 HWRBoxData;
typedef wchar __pascal HWRCharFilter(word numChoices, word firstPoint, word lastPoint, wchar *charChoices, void *callbackData);
typedef union $4CC6B565E93519DCD463F97EC06097C8 HWRContext;
typedef struct $0E42D6EDCD2A78343412FD4EDC151E3A HWRGridData;
typedef struct $F362D1AA212739173E5896FA8D70F99A HWRLineData;
typedef ByteFlags HWRLockState;
typedef enum $830110510549E82FC9B47DFDA16B702E HWRMode;
typedef struct $6684F1DB7FF9EABAE4D90D54147E985F HWRNoneData;
typedef enum $56E1EFDEEEDE42C14FC7F4BC14600B31 HWRRoutine;
typedef MemHandle __pascal HWRStringFilter(word numChars, CharChoiceInformation *data, void *callbackData);
typedef struct $C94BE4F3CF007F8625179D3D9BF19FDD HWRStringMacro;
typedef ByteEnum HWRTemporaryShiftState;
typedef word Handle;
typedef ByteFlags HandleUpdateMode;
typedef struct $F3F0945A4E904A4EA85DA14E73A17D9D HatchDash;
typedef struct $AFCE29F681AE4D716A48AC5A66F295D8 HatchLine;
typedef struct $22C7D06F1B1AAB5539ADBE4667791DA1 HatchPattern;
typedef ByteFlags HeapAllocFlags;
typedef enum $CF8096EA47B4BE25A0FC4946D90AEA54 HeapCongestion;
typedef ByteFlags HeapFlags;
typedef ByteEnum HeightJustification;
typedef ByteEnum HelpType;
typedef struct $A1EFF461E5522BBF4027955CC6920D32 HelpTypeReturn;
typedef struct $FD8309E4A3AD3BFC256190C8E77DBA5E HierarchicalGrab;
typedef WordFlags HierarchicalGrabFlags;
typedef struct $F82D511C9AB4B0D651C07A6D906B78C5 HighScoreArrayElement;
typedef ByteFlags HighScoreAttributes;
typedef WordFlags HighScoreFeatures;
typedef struct $71EE482EBAB891DAD7DE9B449B584093 HintEntry;
typedef ByteFlags HoldUpInputFlags;
typedef enum $2032E0F0CFA3E21E1117726C9940E06D HttpMethod;
typedef struct $472B8665B5C195E8690529D6D51C6E3A HugeArrayDirectory;
typedef enum $9394009D0E7A2BE4F34E24144A17591B HugeLMemErrors;
typedef Handle HugeLMemHandle;
typedef enum $8F54777DAD6E32D16DCFEAC57A832A2E IACPConnectError;
typedef WordFlags IACPConnectFlags;
typedef word IACPConnection;
typedef struct $1EE673055E0F9BA062C8F2459D3C19F4 IACPDocCloseAckParams;
typedef struct $4A6B5ED559A8F454688E7147A989F37E IACPDocOpenAckParams;
typedef ByteFlags IACPServerFlags;
typedef ByteEnum IACPServerMode;
typedef enum $46ECFF6947D6D2B43D020C7192BBA68C IACPSide;
typedef struct $9F94D0D13ECDBCDC737C58687021BE04 IACPStruct;
typedef ByteEnum IEEE488Connection;
typedef struct $509EF7E485DA73FB4F0A3743A7847D2B IEEE64FloatNum;
typedef double IEEE64Number;
typedef ByteFlags IMCFeatures;
typedef ImageMainEngineInput *IMSG_INPUT_ptr;
typedef ImageMainEngineOutput *IMSG_OUTPUT_ptr;
typedef enum $CCA50C26D593A2CB138ADA813273F847 IRTREntry;
typedef ByteFlags IconsShown;
typedef ByteEnum ImageBitSize;
typedef ByteFlags ImageFlags;
typedef struct $525A87BBA9B61C572AAE90217E0FB1DD ImageMainEngineInput;
typedef struct $3338E384206CFCB41D6B504A851DF27D ImageMainEngineOutput;
typedef enum $75FCCB57A2565DE34BE8C20CA7D4E9CF ImageMenuType;
typedef ByteEnum ImageRes;
typedef enum $E2F0EA4473FF1DFCBDC7AB64FF338297 ImageViewerDrawStatus;
typedef struct $D0F714CDC9285194D240494DA90A5637 ImageViewerImageInfo;
typedef struct $A62E1B47EFFEE540783C35223A69A53F ImpexAction;
typedef WordFlags ImpexDataClasses;
typedef struct $FEF3E54FC46D53FB986A6E01DDDA4E87 ImpexMapFileInfoHeader;
typedef ByteFlags ImpexMapFlags;
typedef struct $9C8C62671F946AECF97A419A902B7BD9 ImpexTranslationParams;
typedef WordFlags ImportControlAttrs;
typedef ByteFlags ImportControlFeatures;
typedef ByteFlags ImportControlToolboxFeatures;
typedef word IndicatorCallType;
typedef struct $11D573B92F9D44C819FDB41459DA946F IndicatorDocCountInfo;
typedef struct $03130360FB13A743E22557A596D0F42A IndicatorDocInfo;
typedef enum $9F04C1CBC8BC8F6622899A31234C2F39 IndicatorFlashingNote;
typedef struct $92BFB7A7287159668B7865434FBEA5F4 IndicatorLogEventParams;
typedef word IndicatorRefreshType;
typedef enum $E7E3640A076A6B6E83046A83445D1A75 InicatorInformationNote;
typedef ByteEnum InitFileCharConvert;
typedef enum $62BEE5CAD5A9E5876ED46BA0CE1CE619 InitFileEntry;
typedef WordFlags InitFileReadFlags;
typedef enum $026EEFCE7DA9673F8CD98A8C1074C125 InkBackgroundType;
typedef WordFlags InkControlFeatures;
typedef WordFlags InkControlToolboxFeatures;
typedef struct $B94B5DB0C03899103184BBE28A395165 InkDBDisplayInfo;
typedef struct $B737B3C29A9DA263FEC17CFA3016AB61 InkDBFrame;
typedef struct $D7E232A21F5F1F855DBB0385381E0C08 InkDestinationInfo;
typedef struct $111453C667C275CD5BCE0B4E50D997A4 InkDestinationInfoParams;
typedef WordFlags InkFlags;
typedef struct $2160BF807CFD166A93614E17264FE094 InkHeader;
typedef struct $EC7CBDBFC0EC53CC9CA2D79B2C059B7E InkPoint;
typedef struct $80A615B637ED7166D917C146DAE86B1D InkReturnParams;
typedef enum $BD26BA738CB61C7296CC4271CFBCE7B4 InkReturnValue;
typedef struct $978AE2F050D8D0E7D3389DA501143EB8 InkStrokeSize;
typedef enum $34F5F478C745BEC6E655863B01D07F07 InkTool;
typedef WordFlags InkXCoord;
typedef WordFlags InsertChildFlags;
typedef ByteEnum InsertChildOption;
typedef word InsertDeleteSpaceTypes;
typedef ByteEnum InsertResult;
typedef enum $2ACED5B9D796D93757AEB7868B198887 InstrumentPatch;
typedef enum $739A06AD2E1482C811284A3E483CBBD9 InstrumentTable;
typedef enum $C58401E689F132956D1A0BBFFD9FEFDA InteractionCommand;
typedef ByteFlags IrdbCreateEntryFlags;
typedef enum $F5B8E4070C0415943F92C37F5DCB1F53 IrdbErrorType;
typedef struct $9799451EC9E93ABF775CB4E98A564828 IrlapConnectionParams;
typedef struct $9799451EC9E93ABF775CB4E98A564828 IrlapConnectionParams1;
typedef ByteEnum IrlapDiscoveryType;
typedef ByteFlags IrlapParamBaudRate;
typedef ByteFlags IrlapParamDataSize;
typedef ByteFlags IrlapParamLinkDisconnect;
typedef ByteFlags IrlapParamMaxTurnAround;
typedef ByteFlags IrlapParamMinTurnaround;
typedef ByteFlags IrlapParamNumBof;
typedef ByteFlags IrlapParamWindowSize;
typedef enum $53C61B125AE057EE6C71A3948F168A4F IrlapStatusIndicationType;
typedef ByteEnum IrlapUserTimeSlot;
typedef void __pascal IrlmpCallbackType(ClientHandle client, IrlmpIndicationOrConfirmation type, word extra, dword data, word status);
typedef struct $4DE60F6BEDA66DE267E5E47B99BBDD40 IrlmpConnectArgs;
typedef struct $A18DA259CA1F102F6BCB0152FDA8FD6A IrlmpConnectArgs1;
typedef struct $1EC8647EC32ABC032C4781209EBF1952 IrlmpDataArgs;
typedef ByteEnum IrlmpDisconnectReason;
typedef ByteFlags IrlmpDiscoveryServiceA;
typedef ByteFlags IrlmpDiscoveryServiceB;
typedef ByteEnum IrlmpDiscoveryStatus;
typedef enum $60108CF06843D5A22A8502A28473CEFC IrlmpError;
typedef struct $F9138B960B89AB8D823A9F9648333832 IrlmpGetValueByClassRequestArgs;
typedef ByteEnum IrlmpGetValueByClassReturnCode;
typedef struct $22409EA0C4A2D211819E1E9A3D799FC6 IrlmpIasAttributeValue;
typedef ByteEnum IrlmpIasCharSetCode;
typedef struct $D23A5CEBBC79B89108382E7EFDCB2411 IrlmpIasIdAndValue;
typedef dword IrlmpIasIntegerValue;
typedef struct $2EF2B3F2007249AEACC4DD9C7F2E4659 IrlmpIasMaxName;
typedef struct $C944C7C70B9B16A6F9A6F5E0E007E52A IrlmpIasNameHeader;
typedef word IrlmpIasObjectIdentifier;
typedef struct $6EA03405F852A2326C5485403323AAA3 IrlmpIasOctetSequenceHeader;
typedef struct $767C379C7F5EE419B8DA06157B52D5EB IrlmpIasUserStringHeader;
typedef ByteEnum IrlmpIasValueType;
typedef union $33F2511C2E5AD0B4EBCEC681B0F9238D IrlmpIasValueUnion;
typedef enum $328EBE8192CE36A2CC4629D9F54C7487 IrlmpIndicationOrConfirmation;
typedef struct $B631CCB4BAD9B8AC2A5BEB40F7F3F82A IrlmpLsapID;
typedef byte IrlmpLsapSel;
typedef WordFlags JCFeatures;
typedef WordFlags JCToolboxFeatures;
typedef struct $8E36A07A538C25AE578EDB7149292954 JobParameters;
typedef struct $E353D8F8444173C832A4F653D9F88A07 JobStatus;
typedef ByteEnum Justification;
typedef struct $E998FFCFDE72921760916BB7B59E4D6A KbdGrab;
typedef WordFlags KbdReturnFlags;
typedef enum $652408E18CC072C5C9713F4E372F8F5A KeyMapType;
typedef enum $FCD3403156F5376418CB16E7D7CFE9A6 KeyboardOverride;
typedef WordFlags KeyboardShortcut;
typedef ByteEnum KeyboardType;
typedef WordFlags LASCFeatures;
typedef WordFlags LASCToolboxFeatures;
typedef struct $025778B990E136969457737EBD367AB7 LMemBlockHeader;
typedef enum $9D46B312836DB1586438ED3C80FB7BC9 LMemType;
typedef struct $12881DDFA4F213C4FC77D308BE111013 LabelIDArray;
typedef struct $6E2AD000FFD349326982377C745E0A4F LabelIDSet;
typedef struct $AAE58E71F978A2F2D2A848C0DC47CB45 LargeMouseData;
typedef enum $EACFA24C9136175F70D3AFF09A4916AA LaunchType;
typedef ByteEnum LayerPriority;
typedef ByteEnum LayoutBoundaryDrawFlags;
typedef struct $183D6AEFEF28E80E703C537588CA9EC8 LayoutCommon;
typedef struct $F04104E0C94CB87FAE2114C6A15A02FD LayoutSize;
typedef ByteEnum LayoutType;
typedef struct $3D68796E67AF62536A827260514D6241 LengthStruct;
typedef enum $18087310102FF466B85E7D6CF648FB54 LibraryCallType;
typedef struct $306DD057AF40A6E0DE6EF0BF5E3E28B2 LineAttr;
typedef ByteEnum LineEnd;
typedef WordFlags LineFlags;
typedef struct $8B0556D3519393DE2DB51F753344053C LineInfo;
typedef ByteEnum LineJoin;
typedef ByteEnum LineStyle;
typedef struct $70DC1733467818210C7AFD76D55EC234 LineWidthAndHandleDims;
typedef word LinkID;
typedef struct $726FBB406BB240C092E300951627E9BB LinkParams;
typedef struct $32BB5B4B793E5E797F713A7B6FCBDB6B LinkPart;
typedef byte LinkType;
typedef ByteFlags LocalCmpStringsDosToGeosFlags;
typedef struct $DBD2EBA1F2F9EDCB1655AAE57AC1AC09 LocalCurrencyFormat;
typedef WordFlags LocalDistanceFlags;
typedef WordFlags LocalMemoryFlags;
typedef struct $3653B3E57FBFE68B9DA282DC6B448ED2 LocalNumericFormat;
typedef struct $5D1923BB0C3B212A581FA14CAFF8D653 LocalQuotes;
typedef WordFlags LogControlFeatures;
typedef struct $276A943FED61B9B950711A67F4C8CF81 LogEntry;
typedef ByteEnum LogEntryDirection;
typedef ByteFlags LogEntryFlags;
typedef ByteEnum LogEntryType;
typedef ByteEnum LogFieldType;
typedef WordFlags LogLengthControlFeatures;
enum MACRO_A {A_BIT_EXTRA_TO_LOOK_NICE = 5,MIN_FIELD_WIDTH = 36,DEFAULT_LABEL_WIDTH = 75,};
enum MACRO_AAF {AAF_RESTORING_FROM_STATE = -32768,AAF_STATE_FILE_PASSED = 16384,AAF_DATA_FILE_PASSED = 8192,AAF_RESTORING_FROM_QUIT = 4096,};
enum MACRO_AC {AC_NO_APPLETALK = 0x0,AC_APPLETALK = 0x1,};
enum MACRO_ACCESS {ACCESS_POINT_INVALID_ID = 0,};
enum MACRO_ACF {ACF_NOTIFY = 0x1,};
enum MACRO_ADDED {ADDED = 0,DELETED = 1,RESET = 2,CHANGED = 3,SHOW_NOTES = 4,};
enum MACRO_AIRDN {AIRDN_DRIVE = 0x80,};
enum MACRO_ALF {ALF_SEND_LAUNCH_REQUEST_TO_UI_TO_HANDLE = 0x80,ALF_OPEN_IN_BACK = 0x40,ALF_DESK_ACCESSORY = 0x20,ALF_DO_NOT_OPEN_ON_TOP = 0x10,ALF_OVERRIDE_MULTIPLE_INSTANCE = 0x8,ALF_LAUNCHED_FOR_PRINTING_ONLY = 0x4,};
enum MACRO_AMT {AMT_US = 0,AMT_METRIC = 1,AMT_DEFAULT = 255,};
enum MACRO_ANY {ANY_YEAR = 0,ANY_MONTH = 0,ANY_DAY = 0,ANY_DATE = 0,};
enum MACRO_ANY_HOUR {ANY_HOUR = 0xFFFF,};
enum MACRO_ANY_MINUTE {ANY_MINUTE = 0xFFFF,};
enum MACRO_AOF {AOF_MULTIPLE_INIT_FILE_CATEGORIES = 0x80,};
enum MACRO_APCF {APCF_EDIT = 0x2,APCF_LIST = 0x1,};
enum MACRO_APT {APT_ALL = 0,APCF_TWOLEVEL = 4,};
enum MACRO_AS {AS_TRANSPARENT = 0x4000,AS_HAS_FULL_SCREEN_EXCL = 0x2000,AS_SINGLE_INSTANCE = 0x1000,AS_QUIT_DETACHING = 0x800,AS_AVOID_TRANSPARENT_DETACH = 0x400,AS_TRANSPARENT_DETACHING = 0x200,AS_REAL_DETACHING = 0x100,AS_QUITTING = 0x80,AS_DETACHING = 0x40,AS_FOCUSABLE = 0x20,AS_MODELABLE = 0x10,AS_NOT_USER_INTERACTABLE = 0x8,AS_RECEIVED_APP_OBJECT_DETACH = 0x4,AS_ATTACHED_TO_STATE_FILE = 0x2,AS_ATTACHING = 0x1,};
enum MACRO_ASF {ASF_NO_TRAY = 0x0,ASF_TRAY1 = 0x1,ASF_TRAY2 = 0x2,ASF_TRAY3 = 0x3,ASF_TRAY4 = 0x4,ASF_TRAY5 = 0x5,ASF_TRAY6 = 0x6,ASF_TRAY7 = 0x7,ManualFeed = 0x60,};
enum MACRO_ASST {ASST_NOTHING_ACTIVE = 0,ASST_SPELL_ACTIVE = 1,ASST_SEARCH_ACTIVE = 2,ASST_OFFSET = 3,VTIF_HAS_LINES = 128,};
enum MACRO_AT {AT_DISTRIBUTE_X = 0x40,};
enum MACRO_ATAF {ATAF_STANDARD_POINTER = 0x4,ATAF_SHAPE = 0x2,ATAF_GUARDIAN = 0x1,};
enum MACRO_ATGT {ATGT_LEFT = 0x20,ATGT_H_CENTER = 0x10,ATGT_RIGHT = 0x8,ATGT_TOP = 0x4,ATGT_V_CENTER = 0x2,ATGT_BOTTOM = 0x1,};
enum MACRO_AT_ALIGN {AT_ALIGN_Y = 0x8,AT_DISTRIBUTE_Y = 0x4,};
enum MACRO_AT_NONE {AT_NONE = 0x0,AT_SELECT_ANCHOR = 0x1,AT_SELECT_SEGMENT = 0x2,AT_SELECT_CONTROL = 0x3,AT_SELECT_NOTHING = 0x4,AT_MOVE_ANCHOR = 0x5,AT_MOVE_SEGMENT = 0x6,AT_MOVE_CONTROL = 0x7,AT_MOVE_RECTANGLE = 0x8,AT_CREATE_MODE_MOUSE_UP = 0x9,};
enum MACRO_AT_NORMAL {AT_NORMAL = 0,AT_NO_ADJUST = 1,AT_PASTE = 2,AT_QUICK = 3,AT_ENTIRE_RANGE = 4,};
enum MACRO_AUAF {AUAF_NOTIFY_BEFORE_FREEING = -32768,AUAF_NOTIFY_IF_FREED_WITHOUT_BEING_PLAYED_BACK = 16384,};
enum MACRO_AutoSheetFeed {AutoSheetFeed_OFFSET = 2,TractorFeed = 3,};
enum MACRO_BC {BC_DEFAULT_FEATURES = 3,BC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_BCC {BCC_DEFAULT_TOOLBOX_FEATURES = 0,MCF_LEFT_MARGIN = 4,};
enum MACRO_BCF {BCF_LIST = 0x2,BCF_CUSTOM = 0x1,};
enum MACRO_BGBPAS {BGBPAS_ACTIVE = 0x0,BGBPAS_INACTIVE = 0x0,};
enum MACRO_BGF {BGF_POINTER_ACTIVE = 0x2,BGF_REAL_ESTATE_RESIZE = 0x1,};
enum MACRO_BI {BI_PRESS = 128,BI_DOUBLE_PRESS = 64,BI_B3_DOWN = 32,BI_B2_DOWN = 16,BI_B1_DOWN = 8,BI_B0_DOWN = 4,BI_BUTTON = 3,};
enum MACRO_BLACK {BLACK_WIDTH = 1,BLACK_WHITE_WIDTH = 5,LEFT_MARGIN = 72,};
enum MACRO_BLOCK {BLOCK_GRABBED = 1,};
enum MACRO_BM {BM_CLUSTERED_DITHER = 0x1,};
enum MACRO_BMC {BMC_UNCOMPACTED = 0,BMC_PACKBITS = 1,BMC_USER_DEFINED = 128,};
enum MACRO_BMD {BMD_KILL_DATA = 0,BMD_LEAVE_DATA = 1,BM_EDIT_MASK = 2,};
enum MACRO_BMF {BMF_MONO = 0,BMF_4BIT = 1,BMF_8BIT = 2,BMF_24BIT = 3,BMF_4CMYK = 4,BMF_3CMY = 5,BMT_PALETTE = 64,};
enum MACRO_BMFormat {BMFormat_OFFSET = -5,};
enum MACRO_BMT {BMT_HUGE = 0x20,BMT_MASK = 0x10,BMT_COMPLEX = 0x8,BMT_FORMAT = 0x7,};
enum MACRO_BOOKING {BOOKING_PWD_LENGTH = 8,MAX_DTMF_FIELD_DATA_LEN = 100,};
enum MACRO_BOTTOM {BOTTOM_MARGIN = 72,};
enum MACRO_BRP {BRP_DUMMY_OPTR_START = 1,};
enum MACRO_BUTTON {BUTTON_0 = 0,BUTTON_1 = 1,BUTTON_2 = 2,BUTTON_3 = 3,};
enum MACRO_C {C_BLACK = 0,C_BLUE = 1,C_GREEN = 2,C_CYAN = 3,C_RED = 4,C_VIOLET = 5,C_BROWN = 6,C_LIGHT_GRAY = 7,C_DARK_GRAY = 8,C_LIGHT_BLUE = 9,C_LIGHT_GREEN = 10,C_LIGHT_CYAN = 11,C_LIGHT_RED = 12,C_LIGHT_VIOLET = 13,C_YELLOW = 14,C_WHITE = 15,};
enum MACRO_CA {CA_NULL_ELEMENT = 0xFFFF,};
enum MACRO_CAIT {CAIT_MINUTES = 0x0,CAIT_HOURS = 0x1,CAIT_DAYS = 0x2,CAS_TYPE = 0xC000,};
enum MACRO_CAL {CAL_NO_TIME = 0xFFFF,};
enum MACRO_CAS {CAS_TYPE_OFFSET = 14,CAS_HAS_ALARM = 8192,};
enum MACRO_CAS_INTERVAL {CAS_INTERVAL = 0x1FFF,CAS_INTERVAL_OFFSET = 0x0,};
enum MACRO_CB {CB_RIGHT = 0x40,IS_ICON_LEFT = 0x80,};
enum MACRO_CBF {CBF_CLEAR_ALL_BUTTON = 0x4,CBF_STATUS_BUTTON = 0x2,CBF_OPTIONS_LIST = 0x1,};
enum MACRO_CBGCC {CBGCC_DEFAULT_TOOLBOX_FEATURES = 7,};
enum MACRO_CBI {CBI_LEFT = 0x8,CBI_TOP = 0x4,CBI_RIGHT = 0x2,CBI_BOTTOM = 0x1,};
enum MACRO_CB_DEFAULT {CB_DEFAULT_FEATURES = 7,};
enum MACRO_CC {CC_SQRT = 0x0,CC_INVERSE = 0x1,CC_DIFFER = 0x2,CC_STACK = 0x3,CC_LAST = 0x4,CC_STO = 0x5,CC_RCL = 0x6,CC_PLUS_MINUS = 0x7,};
enum MACRO_CCF {CCF_REFERENCE = 0x7FFF,};
enum MACRO_CCF_MODE {CCF_MODE = 0x6000,CCF_SIZE = 0x1FFF,};
enum MACRO_CCF_MODE_OFFSET {CCF_MODE_OFFSET = 13,};
enum MACRO_CCF_REFERENCE {CCF_REFERENCE_OFFSET = 0,};
enum MACRO_CCM {CCM_OPTR = 0,CCM_HPTR = 1,CCM_FPTR = 2,CCM_STRING = 3,CCF_DIRTY = -32768,};
enum MACRO_CCO {CCO_FIRST = 0x0,CCO_LAST = 0x7FFF,};
enum MACRO_CCS {CCS_VIRTUAL_SERIAL_PORT_RESERVED = 0x2,CCS_CONNECTION_OPEN = 0x1,};
enum MACRO_CCT {CCT_PHONE = 0,CCT_SMS = 1,CCT_FAX = 2,CCT_EMAIL = 3,CCT_GSM_FAX = 4,CCT_SMS_ONLY = 5,CCT_PCN_SMS_ONLY = 6,CCT_GSM_FAX_ONLY = 7,CCT_PCN_FAX_ONLY = 8,CCT_ANY = 255,};
enum MACRO_CC_NO {CC_NO_CUSTOM = 0x0,CC_CUSTOM = 0x1,};
enum MACRO_CC_NO_CENTRONICS {CC_NO_CENTRONICS = 0x0,CC_CENTRONICS = 0x1,};
enum MACRO_CD {CD_DEFAULT_FEATURES = 7,};
enum MACRO_CDBF {CDBF_DIALOG_TYPE = 0x6000,};
enum MACRO_CDBF_DESTRUCTIVE {CDBF_DESTRUCTIVE_ACTION = 0x100,};
enum MACRO_CDBF_DIALOG {CDBF_DIALOG_TYPE_OFFSET = 13,};
enum MACRO_CDBF_INTERACTION {CDBF_INTERACTION_TYPE = 0x1E00,};
enum MACRO_CDBF_INTERACTION_TYPE {CDBF_INTERACTION_TYPE_OFFSET = 9,};
enum MACRO_CDF {CDF_DIVERT_UNCOND_TO_VBM = 64,CDF_DIVERT_BUSY_TO_VBM = 32,CDF_DIVERT_NO_REPLY_TO_VBM = 16,CDF_DIVERT_NOT_REACHABLE_TO_VBM = 8,CDF_CLEAR_ALL_BUTTON = 4,CDF_STATUS_BUTTON = 2,CDF_OPTIONS_LIST = 1,};
enum MACRO_CDT {CDT_QUESTION = 0,CDT_WARNING = 1,CDT_NOTIFICATION = 2,CDT_ERROR = 3,CDBF_SYSTEM_MODAL = -32768,};
enum MACRO_CE {CE_DIALOG_DISPLAYED = 0x8000,};
enum MACRO_CEDT {CEDT_GEOS_TEXT = 0x0,CEDT_UNICODE = 0x1,CEDT_INK = 0x2,};
enum MACRO_CEF {CEF_MENU = 0x20,CEF_SAVE = 0x10,CEF_FIELDS = 0x8,CEF_MARK_SECRET = 0x4,CEF_SPECIAL_RINGING_TONE = 0x2,CEF_SPEED_DIAL = 0x1,};
enum MACRO_CELL {CELL_GOTO_MAX_TEXT = 15,CELL_MAX_TEXT = 511,};
enum MACRO_CELL_MAX {CELL_MAX_FORMULA = 512,};
enum MACRO_CERD {CERD_FOREVER = 0x0,CERD_UNTIL = 0x1,CERD_LENGTH = 0x2,};
enum MACRO_CERI {CERI_WEEK_OFFSET = 13,CERI_COUNT = 8128,};
enum MACRO_CERIT {CERIT_DAILY = 0x0,CERIT_WEEKLY = 0x1,CERIT_MONTHLY_WEEKDAY = 0x2,CERIT_MONTHLY_DATE = 0x3,CERIT_YEARLY_WEEKDAY = 0x4,CERIT_YEARLY_DATE = 0x5,CERI_WEEK = 0xE000,};
enum MACRO_CERI_COUNT {CERI_COUNT_OFFSET = 6,CERI_DAY = 56,};
enum MACRO_CERI_DAY {CERI_DAY_OFFSET = 3,CERI_TYPE = 7,};
enum MACRO_CERI_TYPE {CERI_TYPE_OFFSET = 0,CALENDAR_MAX_EVENT_TEXT_LENGTH = 255,CALENDAR_MAX_RESERVE_WHOLE_DAYS = 999,CAL_NO_DATE = -1,};
enum MACRO_CERL {CERL_COUNT_OFFSET = 2,CERL_UNIT = 3,};
enum MACRO_CERLUT {CERLUT_DAY = 0x0,CERLUT_WEEK = 0x1,CERLUT_MONTH = 0x2,CERLUT_YEAR = 0x3,CERL_COUNT = 0xFFFC,};
enum MACRO_CERL_UNIT {CERL_UNIT_OFFSET = 0,};
enum MACRO_CERV {CERV_CONTINUE_ENUM = 0,CERV_STOP_ENUM = 1,CERV_ERROR = 2,};
enum MACRO_CERW {CERW_SUNDAY = 0x0,CERW_MONDAY = 0x1,CERW_TUESDAY = 0x2,CERW_WEDNESDAY = 0x3,CERW_THURSDAY = 0x4,CERW_FRIDAY = 0x5,CERW_SATURDAY = 0x6,};
enum MACRO_CE_DEFAULT {CE_DEFAULT_FEATURES = 123,};
enum MACRO_CE_NO {CE_NO_ERROR = 0,CE_TOO_COMPLEX = 1,CE_REF_OUT_OF_RANGE = 2,CE_NAME = 3,CE_ARG_COUNT = 4,CE_TYPE = 5,CE_DIVIDE_BY_ZERO = 6,CE_CIRCULAR_REF = 7,CE_GEN_ERR = 8,CE_NA = 9,CE_FLOAT_POS_INF = 10,CE_FLOAT_NEG_INF = 11,CE_FLOAT_GEN_ERR = 12,CE_CIRC_NAME_REF = 13,CE_CIRC_DEPEND = 14,CE_NUM_OUT_OF_RANGE = 15,};
enum MACRO_CF {CF_INDEX = 0,CF_GRAY = 1,CF_SAME = 2,CF_CMY = 3,CF_RGB = 128,};
enum MACRO_CFF {CFF_LEADING_ZERO = 0x20,CFF_SPACE_AROUND_SYMBOL = 0x10,CFF_USE_NEGATIVE_SIGN = 0x8,CFF_SYMBOL_BEFORE_NUMBER = 0x4,CFF_NEGATIVE_SIGN_BEFORE_NUMBER = 0x2,CFF_NEGATIVE_SIGN_BEFORE_SYMBOL = 0x1,};
enum MACRO_CFGCC {CFGCC_DEFAULT_FEATURES = 15,};
enum MACRO_CFGCC_DEFAULT {CFGCC_DEFAULT_TOOLBOX_FEATURES = 7,CBGCC_DEFAULT_FEATURES = 15,};
enum MACRO_CFPF {CFPF_DIRTY = 0x80,CFPF_NO_FREE_COUNT = 0x7,};
enum MACRO_CFT {CFT_NAME = 0,CFT_COMPANY = 1,CFT_TITLE = 2,CFT_ADDRESS = 3,CFT_PHONE = 4,CFT_FAX = 5,CFT_EMAIL = 6,CFT_DTMF = 7,CFT_NOTES = 8,CFT_URL = 9,CFT_PASSWORD = 10,CFT_TEL_FAX = 11,CFT_TEL_DATA = 12,CFT_IMAGE = 13,CFT_TONE = 14,CFT_GROUP_LINK = 15,CFT_IS_GROUP = 16,CFT_CALLER_GROUP = 17,};
enum MACRO_CF_EXTENDED {CF_STATE_KEY = 0x80,CF_EXTENDED = 0x10,CF_TEMP_ACCENT = 0x8,CF_FIRST_PRESS = 0x4,CF_REPEAT_PRESS = 0x2,CF_RELEASE = 0x1,};
enum MACRO_CGSS {CGSS_USING_TRANSFER_DRIVER = 0x100,CGSS_USER_CANCELED = 0x80,CGSS_SEND_REMOVE_TEMP_FILE = 0x40,CGSS_SEND_IN_PROGRESS = 0x20,CGSS_GET_DEST_FILE_EXISTS = 0x10,CGSS_GET_MOVE_TEMP_TO_DEST = 0x8,CGSS_GET_TRANSFER_INTO_TEMP = 0x4,CGSS_GET_NEED_TRANSLATION = 0x2,CGSS_GET_IN_PROGRESS = 0x1,};
enum MACRO_CHAR {CHAR_ENTER = 13,};
enum MACRO_CHAR2 {CHAR_TABLE_SPACE_FILLER_CHAR = 1,};
enum MACRO_CHAR_TAB {CHAR_TAB = 9,};
enum MACRO_CI {CI_NEGATIVE_LSB = 0x40,CI_ABOVE_ASCENT = 0x20,CI_BELOW_DESCENT = 0x10,CI_NO_DATA = 0x8,CI_IS_FIRST_KERN = 0x4,CI_IS_SECOND_KERN = 0x2,};
enum MACRO_CI2 {CI_LOCKED = 0x4,CI_JUSTIFICATION = 0x3,};
enum MACRO_CIF {CIF_UNUSED1 = 0x8000,CIF_QUICK = 0x4000,};
enum MACRO_CL {CL_DEFAULT_FEATURES = 1,CEF_ATTACH_IMAGE = 64,};
enum MACRO_CLASSF {CLASSF_HAS_DEFAULT = 0x80,CLASSF_MASTER_CLASS = 0x40,CLASSF_VARIANT_CLASS = 0x20,CLASSF_DISCARD_ON_SAVE = 0x10,CLASSF_NEVER_SAVED = 0x8,CLASSF_HAS_RELOC = 0x4,CLASSF_C_HANDLERS = 0x2,};
enum MACRO_CLF {CLF_SOURCE_IS_BUFFER = -32768,CLF_DEST_IS_BUFFER = 16384,CLF_DECOMPRESS = 8192,CLF_MOSTLY_ASCII = 4096,};
enum MACRO_CLF_S {CLF_SELECT_CONTACT_NUMBER = 0x2,CLF_SEARCH = 0x1,};
enum MACRO_CLIPBOARD {CLIPBOARD_MAX_FORMATS = 10,};
enum MACRO_CLIPBOARD_ITEM {CLIPBOARD_ITEM_NAME_LENGTH = 32,CQTF_IN_PROGRESS = -32768,};
enum MACRO_CLRW {CLRW_CENTER = 0x0,CLRW_LEFT = 0x1,CLRW_RIGHT = 0x2,CLRW_WIDTH = 0x3,};
enum MACRO_CLSF {CLSF_WARN = 0x1,DESTINATION_TYPE_TEXT_BUFFER_LENGTH = 0x50,};
enum MACRO_CMFAGPS {CMFAGPS_REPLACE_DOCUMENT_DIALOG_DISPLAYED = 0x200,CMFAGPS_REBOOT_DIALOG_DISPLAYED = 0x100,CMFAGPS_EXISTING_DIALOG_DISPLAYED = 0x80,CMFAGPS_UNRELATED_DIALOG_DISPLAYED = 0x40,CMFAGPS_FILE_INSTALLED_FROM_PACKAGE = 0x10,CMFAGPS_NEED_TO_REBOOT = 0x8,CMFAGPS_NEW_FILE_IS_GEOS_FILE = 0x4,CMFAGPS_EXISTING_LOCAL_DEST_FILE = 0x2,CMFAGPS_DOWNLOADING_FILES_IN_PACKAGE = 0x1,};
enum MACRO_CMFGSS {CMFGSS_DO_NOT_ALLOCATE_OR_DELETE_PATH_BUFFERS = 0x2,CMFGSS_TRANSFER_CANCELED = 0x1,};
enum MACRO_CMM {CMM_MAP_TYPE = 0x1,};
enum MACRO_CMS {CMS_COLOR_CHANGED = 0x4,CMS_DRAW_MASK_CHANGED = 0x2,CMS_PATTERN_CHANGED = 0x1,};
enum MACRO_CMT {CMT_CLOSEST = 0,CMT_DITHER = 1,CMM_ON_BLACK = 4,};
enum MACRO_CNVT {CNVT_GSM = 0x0,CNVT_PCN = 0x1,CONTACT_GET_CURRENT_DB_NAME = 0xFFFE,};
enum MACRO_COCTOF {COCTOF_INFINITE = 0x2,COCTOF_OVERFLOW = 0x1,};
enum MACRO_COLUMN {COLUMN_WIDTH_MIN = 0,COLUMN_WIDTH_MAX = 512,};
enum MACRO_COMPLEX {COMPLEX_MONIKER_MAX_TOP_TEXT_LENGTH = 100,};
enum MACRO_COMPLEX_MONIKER {COMPLEX_MONIKER_MAX_BOTTOM_TEXT_LENGTH = 50,FLASHING_NOTE_DEFAULT_DURATION = 180,};
enum MACRO_COMPRESS {COMPRESS_PROTO_MAJOR = 1,COMPRESS_PROTO_MINOR = 0,};
enum MACRO_CONNECT {CONNECT_SETTINGS_DRIVE_LENGTH_ZT = 3,CONNECT_SETTINGS_PATH_LENGTH_ZT = 68,};
enum MACRO_CONNECTION {CONNECTION_TYPE_TEXT_BUFFER_LENGTH = 80,};
enum MACRO_CONSTANT {CONSTANT_MAX_FDD = 0x100,NULL_FOAM_PATH = 0xFFFD,};
enum MACRO_CONTACT {CONTACT_DB_SELECTION_IS_DB_NAME = -2,};
enum MACRO_CONTACT_ADD {CONTACT_ADD_RECORD_OKAY = 0,CONTACT_ADD_RECORD_ERROR = 1,};
enum MACRO_CONTACT_CREATE {CONTACT_CREATE_DB_OKAY = 0,CONTACT_CREATE_DB_ERROR = 1,CONTACT_CREATE_DB_ERROR_NAME_EXISTS = 2,};
enum MACRO_CONTACT_DEVICE {CONTACT_DEVICE_DB_NAME = 0,CONTACT_SET_OVERRIDE_ERROR = -2,CONTACT_RESTORE_STANDARD_DB = -1,};
enum MACRO_CONTACT_RENAME {CONTACT_RENAME_DB_OKAY = 0,CONTACT_RENAME_DB_ERROR = 1,CONTACT_RENAME_DB_ERROR_NAME_EXISTS = 2,};
enum MACRO_COO {COO_AREA_ORIENTED = 0,COO_TEXT_ORIENTED = 1,COO_LINE_ORIENTED = 2,CTP_INDEX_ORIENTATION = 48,};
enum MACRO_CPDF {CPDF_INHIBIT_CANCELLATION = 0x10,CPDF_IGNORE_STATUS_UPDATES = 0x8,CPDF_CANCELLING = 0x4,CPDF_DISPLAY_TOTAL_TRANSFER_SIZE = 0x2,CPDF_DISPLAY_CUMULATIVE_BYTE_TALLY = 0x1,};
enum MACRO_CPU {CPU_OVERFLOW_OFFSET = 11,CPU_OVERFLOW = 2048,};
enum MACRO_CPU_AUX {CPU_AUX_CARRY_OFFSET = 4,CPU_AUX_CARRY = 16,};
enum MACRO_CPU_CARRY {CPU_CARRY_OFFSET = 0,CPU_CARRY = 1,};
enum MACRO_CPU_DIRECTION {CPU_DIRECTION_OFFSET = 10,CPU_DIRECTION = 1024,};
enum MACRO_CPU_INTERRUPT {CPU_INTERRUPT_OFFSET = 9,CPU_INTERRUPT = 512,};
enum MACRO_CPU_PARITY {CPU_PARITY_OFFSET = 2,CPU_PARITY = 4,};
enum MACRO_CPU_SIGN {CPU_SIGN_OFFSET = 7,CPU_SIGN = 128,};
enum MACRO_CPU_TRAP {CPU_TRAP_OFFSET = 8,CPU_TRAP = 256,};
enum MACRO_CPU_ZERO {CPU_ZERO_OFFSET = 6,CPU_ZERO = 64,};
enum MACRO_CQNF {CQNF_ERROR = 0x8000,CQNF_SOURCE_EQUAL_DEST = 0x4000,CQNF_MOVE = 0x2000,CQNF_COPY = 0x1000,CQNF_NO_OPERATION = 0x800,CQNF_UNUSED = 0x4FF,};
enum MACRO_CQTF {CQTF_COPY_ONLY = 0x4000,CQTF_USE_REGION = 0x2000,CQTF_NOTIFICATION = 0x1000,};
enum MACRO_CRC {CRC_VALUE = 0x7FFF,};
enum MACRO_CRF {CRF_SPECIAL_RINGING_TONE = 0x1,MAX_NAME_DATA_LEN = 0x64,};
enum MACRO_CRF2 {CRF_IN_FINAL_LIST = 0x40,CRF_PROTECTION = 0x1,};
enum MACRO_CRF_RESERVED {CRF_RESERVED = 0x1,};
enum MACRO_CRT {CRT_REGULAR_COMMIT = 0x1,CRT_VISUAL_UPDATE_COMMIT = 0x2,CRT_SAVE_FILE_COMMIT = 0x3,};
enum MACRO_CS {CS_BSW = 0x0,CS_CONTROL = 0xFF,};
enum MACRO_CS2 {CS_DEFAULT_FEATURES = 31,};
enum MACRO_CSAF {CSAF_WAITING_TO_DETACH = 0x2,CSAF_WAITING_FOR_COMPLETION_MSG = 0x1,};
enum MACRO_CSC {CSC_DEFAULT_FEATURES = 31,CSDCF_DESTINATION = 32,};
enum MACRO_CSCF {CSCF_MEMORYCARD_PATH = 0x40,CSCF_MEMORY_CARD = 0x20,CSCF_CONNECTION_TYPE = 0x10,CSCF_DATA_GROUP = 0x8,CSCF_DRIVE = 0x4,CSCF_DIRECTORY_PATH = 0x2,CSCF_FILE_PATH = 0x1,};
enum MACRO_CSCMF {CSCMF_GENERATING_UI = 0x1,CSCF_DESTINATION = 0x80,};
enum MACRO_CSDC {CSDC_DEFAULT_FEATURES = 31,};
enum MACRO_CSDCF {CSDCF_CONNECTION_TYPE = 0x10,CSDCF_DATA_GROUP = 0x8,CSDCF_DRIVE = 0x4,CSDCF_DIRECTORY_PATH = 0x2,CSDCF_FILE_PATH = 0x1,};
enum MACRO_CSF {CSF_FILLED_LIST = 0x10,CSF_INDEX = 0x8,CSF_RGB = 0x4,CSF_DRAW_MASK = 0x2,CSF_PATTERN = 0x1,};
enum MACRO_CSLF {CSLF_CANCEL_COPY = 0x40,CSLF_SUSPEND_SELECT_NOTIFY = 0x20,CSLF_REFRESH_LIST = 0x10,CSLF_HAVE_FOCUS = 0x8,CSLF_SELECT_CONTACT_NUMBER = 0x1,CSL_DEFAULT_FEATURES = 0x0,};
enum MACRO_CSTF {CSTF_INDEX = 0x4,CSTF_DRAW_MASK = 0x2,CSTF_PATTERN = 0x1,};
enum MACRO_CS_CALCULATOR {CS_CALCULATOR = 0xFD,};
enum MACRO_CS_DEFAULT {CS_DEFAULT_TOOLBOX_FEATURES = 7,};
enum MACRO_CS_IMPENDING {CS_IMPENDING_DISCONNECTION = 0x8000,CS_UNACKED_DATA = 0x4000,};
enum MACRO_CS_UI {CS_UI_FUNCS = 0xFE,};
enum MACRO_CS_lightColor {CS_lightColor = 0xF0,CS_darkColor = 0xF,};
enum MACRO_CS_lightColor_OFFSET {CS_lightColor_OFFSET = 4,};
enum MACRO_CT {CT_FUNCTION_TO_TOKEN = 0,CT_NAME_TO_TOKEN = 1,CT_CHECK_NAME_EXISTS = 2,CT_CHECK_NAME_SPACE = 3,CT_EVAL_FUNCTION = 4,CT_LOCK_NAME = 5,CT_UNLOCK = 6,CT_FORMAT_FUNCTION = 7,CT_FORMAT_NAME = 8,CT_CREATE_CELL = 9,CT_EMPTY_CELL = 10,CT_NAME_TO_CELL = 11,CT_FUNCTION_TO_CELL = 12,CT_DEREF_CELL = 13,CT_SPECIAL_FUNCTION = 14,FUNCTION_ID_FIRST_EXTERNAL_FUNCTION_BASE = -32768,FT_ALL = -1,};
enum MACRO_CT2 {CT_TEXT = 0,CT_CONSTANT = 2,CT_FORMULA = 4,CT_NAME = 6,CT_CHART = 8,CT_EMPTY = 10,CT_DISPLAY_FORMULA = 12,CRF_IN_PARENT_LIST = 128,};
enum MACRO_CTBH {CTBH_CENTER = 0x0,CTBH_TOP = 0x1,CTBH_BOTTOM = 0x2,CTBH_HEIGHT = 0x3,AT_ALIGN_X = 0x80,};
enum MACRO_CTF {CTF_MULTIPLE_TRANSFER = 0x10,CTF_DONT_RESERVE_VIRTUAL_SERIAL_PORT = 0x8,CTF_NO_TRANSFER_IF_FILE_OPEN = 0x4,CTF_CREATE_DEST_PATH_DIRECTORY = 0x2,CTF_QUERY_ON_OVERWRITE = 0x1,};
enum MACRO_CTFER {CTFER_PROTO_MAJOR = 3,};
enum MACRO_CTFER_PROTO {CTFER_PROTO_MINOR = 2,};
enum MACRO_CTLATE {CTLATE_PROTO_MAJOR = 3,};
enum MACRO_CTLATE_PROTO {CTLATE_PROTO_MINOR = 2,CTLD_FORMAT_NAME_SIZE = 16,};
enum MACRO_CTP {CTP_DRAW_MASK_ORIENTATION = 0xC,CTP_PATTERN_ORIENTATION = 0x2,CTP_IS_POPUP = 0x1,};
enum MACRO_CTP_INDEX {CTP_INDEX_ORIENTATION_OFFSET = 4,CTP_DRAW_MASK_ORIENTATION_OFFSET = 2,CTP_PATTERN_ORIENTATION_OFFSET = 1,};
enum MACRO_CURRENCY {CURRENCY_SYMBOL_LENGTH = 9,};
enum MACRO_CUSTOM {CUSTOM_RULER_DEFINITION = 0xFD,NO_RULERS = 0xFE,SYSTEM_DEFAULT = 0xFF,};
enum MACRO_CVMF {CVMF_DIRTY = 0x80,};
enum MACRO_CW {CW_DEFAULT_FEATURES = 0,SMSC_SENT = 99,};
enum MACRO_CWF {CWF_STATUS_BUTTON = 0x2,CWF_OPTIONS_LIST = 0x1,};
enum MACRO_C_GRAY {C_GRAY_0 = 0x10,C_GRAY_7 = 0x11,C_GRAY_13 = 0x12,C_GRAY_20 = 0x13,C_GRAY_27 = 0x14,C_GRAY_33 = 0x15,C_GRAY_40 = 0x16,C_GRAY_47 = 0x17,C_GRAY_53 = 0x18,C_GRAY_60 = 0x19,C_GRAY_68 = 0x1A,C_GRAY_73 = 0x1B,C_GRAY_80 = 0x1C,C_GRAY_88 = 0x1D,C_GRAY_93 = 0x1E,C_GRAY_100 = 0x1F,C_UNUSED_0 = 0x20,C_UNUSED_1 = 0x21,C_UNUSED_2 = 0x22,C_UNUSED_3 = 0x23,C_UNUSED_4 = 0x24,C_UNUSED_5 = 0x25,C_UNUSED_6 = 0x26,C_UNUSED_7 = 0x27,C_R0_G0_B0 = 0x28,C_R0_G0_B1 = 0x29,C_R0_G0_B2 = 0x2A,C_R0_G0_B3 = 0x2B,C_R0_G0_B4 = 0x2C,C_R0_G0_B5 = 0x2D,C_R0_G1_B0 = 0x2E,C_R0_G1_B1 = 0x2F,C_R0_G1_B2 = 0x30,C_R0_G1_B3 = 0x31,C_R0_G1_B4 = 0x32,C_R0_G1_B5 = 0x33,C_R0_G2_B0 = 0x34,C_R0_G2_B1 = 0x35,C_R0_G2_B2 = 0x36,C_R0_G2_B3 = 0x37,C_R0_G2_B4 = 0x38,C_R0_G2_B5 = 0x39,C_R0_G3_B0 = 0x3A,C_R0_G3_B1 = 0x3B,C_R0_G3_B2 = 0x3C,C_R0_G3_B3 = 0x3D,C_R0_G3_B4 = 0x3E,C_R0_G3_B5 = 0x3F,C_R0_G4_B0 = 0x40,C_R0_G4_B1 = 0x41,C_R0_G4_B2 = 0x42,C_R0_G4_B3 = 0x43,C_R0_G4_B4 = 0x44,C_R0_G4_B5 = 0x45,C_R0_G5_B0 = 0x46,C_R0_G5_B1 = 0x47,C_R0_G5_B2 = 0x48,C_R0_G5_B3 = 0x49,C_R0_G5_B4 = 0x4A,C_R0_G5_B5 = 0x4B,C_R1_G0_B0 = 0x4C,C_R1_G0_B1 = 0x4D,C_R1_G0_B2 = 0x4E,C_R1_G0_B3 = 0x4F,C_R1_G0_B4 = 0x50,C_R1_G0_B5 = 0x51,C_R1_G1_B0 = 0x52,C_R1_G1_B1 = 0x53,C_R1_G1_B2 = 0x54,C_R1_G1_B3 = 0x55,C_R1_G1_B4 = 0x56,C_R1_G1_B5 = 0x57,C_R1_G2_B0 = 0x58,C_R1_G2_B1 = 0x59,C_R1_G2_B2 = 0x5A,C_R1_G2_B3 = 0x5B,C_R1_G2_B4 = 0x5C,C_R1_G2_B5 = 0x5D,C_R1_G3_B0 = 0x5E,C_R1_G3_B1 = 0x5F,C_R1_G3_B2 = 0x60,C_R1_G3_B3 = 0x61,C_R1_G3_B4 = 0x62,C_R1_G3_B5 = 0x63,C_R1_G4_B0 = 0x64,C_R1_G4_B1 = 0x65,C_R1_G4_B2 = 0x66,C_R1_G4_B3 = 0x67,C_R1_G4_B4 = 0x68,C_R1_G4_B5 = 0x69,C_R1_G5_B0 = 0x6A,C_R1_G5_B1 = 0x6B,C_R1_G5_B2 = 0x6C,C_R1_G5_B3 = 0x6D,C_R1_G5_B4 = 0x6E,C_R1_G5_B5 = 0x6F,C_R2_G0_B0 = 0x70,C_R2_G0_B1 = 0x71,C_R2_G0_B2 = 0x72,C_R2_G0_B3 = 0x73,C_R2_G0_B4 = 0x74,C_R2_G0_B5 = 0x75,C_R2_G1_B0 = 0x76,C_R2_G1_B1 = 0x77,C_R2_G1_B2 = 0x78,C_R2_G1_B3 = 0x79,C_R2_G1_B4 = 0x7A,C_R2_G1_B5 = 0x7B,C_R2_G2_B0 = 0x7C,C_R2_G2_B1 = 0x7D,C_R2_G2_B2 = 0x7E,C_R2_G2_B3 = 0x7F,C_R2_G2_B4 = 0x80,C_R2_G2_B5 = 0x81,C_R2_G3_B0 = 0x82,C_R2_G3_B1 = 0x83,C_R2_G3_B2 = 0x84,C_R2_G3_B3 = 0x85,C_R2_G3_B4 = 0x86,C_R2_G3_B5 = 0x87,C_R2_G4_B0 = 0x88,C_R2_G4_B1 = 0x89,C_R2_G4_B2 = 0x8A,C_R2_G4_B3 = 0x8B,C_R2_G4_B4 = 0x8C,C_R2_G4_B5 = 0x8D,C_R2_G5_B0 = 0x8E,C_R2_G5_B1 = 0x8F,C_R2_G5_B2 = 0x90,C_R2_G5_B3 = 0x91,C_R2_G5_B4 = 0x92,C_R2_G5_B5 = 0x93,C_R3_G0_B0 = 0x94,C_R3_G0_B1 = 0x95,C_R3_G0_B2 = 0x96,C_R3_G0_B3 = 0x97,C_R3_G0_B4 = 0x98,C_R3_G0_B5 = 0x99,C_R3_G1_B0 = 0x9A,C_R3_G1_B1 = 0x9B,C_R3_G1_B2 = 0x9C,C_R3_G1_B3 = 0x9D,C_R3_G1_B4 = 0x9E,C_R3_G1_B5 = 0x9F,C_R3_G2_B0 = 0xA0,C_R3_G2_B1 = 0xA1,C_R3_G2_B2 = 0xA2,C_R3_G2_B3 = 0xA3,C_R3_G2_B4 = 0xA4,C_R3_G2_B5 = 0xA5,C_R3_G3_B0 = 0xA6,C_R3_G3_B1 = 0xA7,C_R3_G3_B2 = 0xA8,C_R3_G3_B3 = 0xA9,C_R3_G3_B4 = 0xAA,C_R3_G3_B5 = 0xAB,C_R3_G4_B0 = 0xAC,C_R3_G4_B1 = 0xAD,C_R3_G4_B2 = 0xAE,C_R3_G4_B3 = 0xAF,C_R3_G4_B4 = 0xB0,C_R3_G4_B5 = 0xB1,C_R3_G5_B0 = 0xB2,C_R3_G5_B1 = 0xB3,C_R3_G5_B2 = 0xB4,C_R3_G5_B3 = 0xB5,C_R3_G5_B4 = 0xB6,C_R3_G5_B5 = 0xB7,C_R4_G0_B0 = 0xB8,C_R4_G0_B1 = 0xB9,C_R4_G0_B2 = 0xBA,C_R4_G0_B3 = 0xBB,C_R4_G0_B4 = 0xBC,C_R4_G0_B5 = 0xBD,C_R4_G1_B0 = 0xBE,C_R4_G1_B1 = 0xBF,C_R4_G1_B2 = 0xC0,C_R4_G1_B3 = 0xC1,C_R4_G1_B4 = 0xC2,C_R4_G1_B5 = 0xC3,C_R4_G2_B0 = 0xC4,C_R4_G2_B1 = 0xC5,C_R4_G2_B2 = 0xC6,C_R4_G2_B3 = 0xC7,C_R4_G2_B4 = 0xC8,C_R4_G2_B5 = 0xC9,C_R4_G3_B0 = 0xCA,C_R4_G3_B1 = 0xCB,C_R4_G3_B2 = 0xCC,C_R4_G3_B3 = 0xCD,C_R4_G3_B4 = 0xCE,C_R4_G3_B5 = 0xCF,C_R4_G4_B0 = 0xD0,C_R4_G4_B1 = 0xD1,C_R4_G4_B2 = 0xD2,C_R4_G4_B3 = 0xD3,C_R4_G4_B4 = 0xD4,C_R4_G4_B5 = 0xD5,C_R4_G5_B0 = 0xD6,C_R4_G5_B1 = 0xD7,C_R4_G5_B2 = 0xD8,C_R4_G5_B3 = 0xD9,C_R4_G5_B4 = 0xDA,C_R4_G5_B5 = 0xDB,C_R5_G0_B0 = 0xDC,C_R5_G0_B1 = 0xDD,C_R5_G0_B2 = 0xDE,C_R5_G0_B3 = 0xDF,C_R5_G0_B4 = 0xE0,C_R5_G0_B5 = 0xE1,C_R5_G1_B0 = 0xE2,C_R5_G1_B1 = 0xE3,C_R5_G1_B2 = 0xE4,C_R5_G1_B3 = 0xE5,C_R5_G1_B4 = 0xE6,C_R5_G1_B5 = 0xE7,C_R5_G2_B0 = 0xE8,C_R5_G2_B1 = 0xE9,C_R5_G2_B2 = 0xEA,C_R5_G2_B3 = 0xEB,C_R5_G2_B4 = 0xEC,C_R5_G2_B5 = 0xED,C_R5_G3_B0 = 0xEE,C_R5_G3_B1 = 0xEF,C_R5_G3_B2 = 0xF0,C_R5_G3_B3 = 0xF1,C_R5_G3_B4 = 0xF2,C_R5_G3_B5 = 0xF3,C_R5_G4_B0 = 0xF4,C_R5_G4_B1 = 0xF5,C_R5_G4_B2 = 0xF6,C_R5_G4_B3 = 0xF7,C_R5_G4_B4 = 0xF8,C_R5_G4_B5 = 0xF9,C_R5_G5_B0 = 0xFA,C_R5_G5_B1 = 0xFB,C_R5_G5_B2 = 0xFC,C_R5_G5_B3 = 0xFD,C_R5_G5_B4 = 0xFE,C_R5_G5_B5 = 0xFF,};
enum MACRO_C_LIGHT {C_LIGHT_GREY = 7,C_DARK_GREY = 8,C_BW_GREY = 132,};
enum MACRO_C_NUL {C_NUL = 0,C_STX = 2,C_ETX = 3,C_BEL = 7,C_BS = 8,C_VT = 11,C_FF = 12,C_DC1 = 17,C_DC2 = 18,C_DC3 = 19,C_DC4 = 20,C_CAN = 24,C_EM = 25,C_ESC = 27,C_CR = 13,C_CTRL_M = 13,C_CTRL_I = 9,C_CTRL_J = 10,C_LF = 10,C_CTRL_N = 14,C_CTRL_O = 15,C_FS = 28,C_FIELD_SEP = 28,C_HYPHEN = 45,C_GRAVE = 96,C_PARTIAL_DIFF = 182,C_SUM = 183,C_PRODUCT = 184,C_RADICAL = 195,C_LOZENGE = 215,};
enum MACRO_C_NULL {C_NULL = 0x0,C_CTRL_A = 0x1,C_CTRL_B = 0x2,C_CTRL_C = 0x3,C_CTRL_D = 0x4,C_CTRL_E = 0x5,C_CTRL_F = 0x6,C_CTRL_G = 0x7,C_CTRL_H = 0x8,C_TAB = 0x9,C_LINEFEED = 0xA,C_CTRL_K = 0xB,C_CTRL_L = 0xC,C_ENTER = 0xD,C_SHIFT_OUT = 0xE,C_SHIFT_IN = 0xF,C_CTRL_P = 0x10,C_CTRL_Q = 0x11,C_CTRL_R = 0x12,C_CTRL_S = 0x13,C_CTRL_T = 0x14,C_CTRL_U = 0x15,C_CTRL_V = 0x16,C_CTRL_W = 0x17,C_CTRL_X = 0x18,C_CTRL_Y = 0x19,C_CTRL_Z = 0x1A,C_ESCAPE = 0x1B,C_NULL_WIDTH = 0x19,C_GRAPHIC = 0x1A,C_THINSPACE = 0x1B,C_ENSPACE = 0x1C,C_EMSPACE = 0x1D,C_NONBRKHYPHEN = 0x1E,C_OPTHYPHEN = 0x1F,C_SPACE = 0x20,C_EXCLAMATION = 0x21,C_QUOTE = 0x22,C_NUMBER_SIGN = 0x23,C_DOLLAR_SIGN = 0x24,C_PERCENT = 0x25,C_AMPERSAND = 0x26,C_SNG_QUOTE = 0x27,C_LEFT_PAREN = 0x28,C_RIGHT_PAREN = 0x29,C_ASTERISK = 0x2A,C_PLUS = 0x2B,C_COMMA = 0x2C,C_MINUS = 0x2D,C_PERIOD = 0x2E,C_SLASH = 0x2F,C_ZERO = 0x30,C_ONE = 0x31,C_TWO = 0x32,C_THREE = 0x33,C_FOUR = 0x34,C_FIVE = 0x35,C_SIX = 0x36,C_SEVEN = 0x37,C_EIGHT = 0x38,C_NINE = 0x39,C_COLON = 0x3A,C_SEMICOLON = 0x3B,C_LESS_THAN = 0x3C,C_EQUAL = 0x3D,C_GREATER_THAN = 0x3E,C_QUESTION_MARK = 0x3F,C_AT_SIGN = 0x40,C_CAP_A = 0x41,C_CAP_B = 0x42,C_CAP_C = 0x43,C_CAP_D = 0x44,C_CAP_E = 0x45,C_CAP_F = 0x46,C_CAP_G = 0x47,C_CAP_H = 0x48,C_CAP_I = 0x49,C_CAP_J = 0x4A,C_CAP_K = 0x4B,C_CAP_L = 0x4C,C_CAP_M = 0x4D,C_CAP_N = 0x4E,C_CAP_O = 0x4F,C_CAP_P = 0x50,C_CAP_Q = 0x51,C_CAP_R = 0x52,C_CAP_S = 0x53,C_CAP_T = 0x54,C_CAP_U = 0x55,C_CAP_V = 0x56,C_CAP_W = 0x57,C_CAP_X = 0x58,C_CAP_Y = 0x59,C_CAP_Z = 0x5A,C_LEFT_BRACKET = 0x5B,C_BACKSLASH = 0x5C,C_RIGHT_BRACKET = 0x5D,C_ASCII_CIRCUMFLEX = 0x5E,C_UNDERSCORE = 0x5F,C_BACKQUOTE = 0x60,C_SMALL_A = 0x61,C_SMALL_B = 0x62,C_SMALL_C = 0x63,C_SMALL_D = 0x64,C_SMALL_E = 0x65,C_SMALL_F = 0x66,C_SMALL_G = 0x67,C_SMALL_H = 0x68,C_SMALL_I = 0x69,C_SMALL_J = 0x6A,C_SMALL_K = 0x6B,C_SMALL_L = 0x6C,C_SMALL_M = 0x6D,C_SMALL_N = 0x6E,C_SMALL_O = 0x6F,C_SMALL_P = 0x70,C_SMALL_Q = 0x71,C_SMALL_R = 0x72,C_SMALL_S = 0x73,C_SMALL_T = 0x74,C_SMALL_U = 0x75,C_SMALL_V = 0x76,C_SMALL_W = 0x77,C_SMALL_X = 0x78,C_SMALL_Y = 0x79,C_SMALL_Z = 0x7A,C_LEFT_BRACE = 0x7B,C_VERTICAL_BAR = 0x7C,C_RIGHT_BRACE = 0x7D,C_ASCII_TILDE = 0x7E,C_DELETE = 0x7F,C_UA_DIERESIS = 0x80,C_UA_RING = 0x81,C_UC_CEDILLA = 0x82,C_UE_ACUTE = 0x83,C_UN_TILDE = 0x84,C_UO_DIERESIS = 0x85,C_UU_DIERESIS = 0x86,C_LA_ACUTE = 0x87,C_LA_GRAVE = 0x88,C_LA_CIRCUMFLEX = 0x89,C_LA_DIERESIS = 0x8A,C_LA_TILDE = 0x8B,C_LA_RING = 0x8C,C_LC_CEDILLA = 0x8D,C_LE_ACUTE = 0x8E,C_LE_GRAVE = 0x8F,C_LE_CIRCUMFLEX = 0x90,C_LE_DIERESIS = 0x91,C_LI_ACUTE = 0x92,C_LI_GRAVE = 0x93,C_LI_CIRCUMFLEX = 0x94,C_LI_DIERESIS = 0x95,C_LN_TILDE = 0x96,C_LO_ACUTE = 0x97,C_LO_GRAVE = 0x98,C_LO_CIRCUMFLEX = 0x99,C_LO_DIERESIS = 0x9A,C_LO_TILDE = 0x9B,C_LU_ACUTE = 0x9C,C_LU_GRAVE = 0x9D,C_LU_CIRCUMFLEX = 0x9E,C_LU_DIERESIS = 0x9F,C_DAGGER = 0xA0,C_DEGREE = 0xA1,C_CENT = 0xA2,C_STERLING = 0xA3,C_SECTION = 0xA4,C_BULLET = 0xA5,C_PARAGRAPH = 0xA6,C_GERMANDBLS = 0xA7,C_REGISTERED = 0xA8,C_COPYRIGHT = 0xA9,C_TRADEMARK = 0xAA,C_ACUTE = 0xAB,C_DIERESIS = 0xAC,C_NOTEQUAL = 0xAD,C_U_AE = 0xAE,C_UO_SLASH = 0xAF,C_INFINITY = 0xB0,C_PLUSMINUS = 0xB1,C_LESSEQUAL = 0xB2,C_GREATEREQUAL = 0xB3,C_YEN = 0xB4,C_L_MU = 0xB5,C_L_DELTA = 0xB6,C_U_SIGMA = 0xB7,C_U_PI = 0xB8,C_L_PI = 0xB9,C_INTEGRAL = 0xBA,C_ORDFEMININE = 0xBB,C_ORDMASCULINE = 0xBC,C_U_OMEGA = 0xBD,C_L_AE = 0xBE,C_LO_SLASH = 0xBF,C_QUESTIONDOWN = 0xC0,C_EXCLAMDOWN = 0xC1,C_LOGICAL_NOT = 0xC2,C_ROOT = 0xC3,C_FLORIN = 0xC4,C_APPROX_EQUAL = 0xC5,C_U_DELTA = 0xC6,C_GUILLEDBLLEFT = 0xC7,C_GUILLEDBLRIGHT = 0xC8,C_ELLIPSIS = 0xC9,C_NONBRKSPACE = 0xCA,C_UA_GRAVE = 0xCB,C_UA_TILDE = 0xCC,C_UO_TILDE = 0xCD,C_U_OE = 0xCE,C_L_OE = 0xCF,C_ENDASH = 0xD0,C_EMDASH = 0xD1,C_QUOTEDBLLEFT = 0xD2,C_QUOTEDBLRIGHT = 0xD3,C_QUOTESNGLEFT = 0xD4,C_QUOTESNGRIGHT = 0xD5,C_DIVISION = 0xD6,C_DIAMONDBULLET = 0xD7,C_LY_DIERESIS = 0xD8,C_UY_DIERESIS = 0xD9,C_FRACTION = 0xDA,C_CURRENCY = 0xDB,C_GUILSNGLEFT = 0xDC,C_GUILSNGRIGHT = 0xDD,C_LY_ACUTE = 0xDE,C_UY_ACUTE = 0xDF,C_DBLDAGGER = 0xE0,C_CNTR_DOT = 0xE1,C_SNGQUOTELOW = 0xE2,C_DBLQUOTELOW = 0xE3,C_PERTHOUSAND = 0xE4,C_UA_CIRCUMFLEX = 0xE5,C_UE_CIRCUMFLEX = 0xE6,C_UA_ACUTE = 0xE7,C_UE_DIERESIS = 0xE8,C_UE_GRAVE = 0xE9,C_UI_ACUTE = 0xEA,C_UI_CIRCUMFLEX = 0xEB,C_UI_DIERESIS = 0xEC,C_UI_GRAVE = 0xED,C_UO_ACUTE = 0xEE,C_UO_CIRCUMFLEX = 0xEF,C_LOGO = 0xF0,C_UO_GRAVE = 0xF1,C_UU_ACUTE = 0xF2,C_UU_CIRCUMFLEX = 0xF3,C_UU_GRAVE = 0xF4,C_LI_DOTLESS = 0xF5,C_CIRCUMFLEX = 0xF6,C_TILDE = 0xF7,C_MACRON = 0xF8,C_BREVE = 0xF9,C_DOTACCENT = 0xFA,C_RING = 0xFB,C_CEDILLA = 0xFC,C_HUNGARUMLAT = 0xFD,C_OGONEK = 0xFE,C_CARON = 0xFF,};
enum MACRO_CenterLeftRightWidth {CenterLeftRightWidth = 0x30,CenterLeftRightWidth_OFFSET = 0x4,};
enum MACRO_CenterTopBottomHeight {CenterTopBottomHeight = 0x3,CenterTopBottomHeight_OFFSET = 0x0,};
enum MACRO_DA {DA_FILE_SYSTEM = 0x8000,DA_CHARACTER = 0x4000,DA_HAS_EXTENDED_INFO = 0x2000,};
enum MACRO_DACRB {DACRB_NO_REFERENCE_BYTE = 0x0,DACRB_WITH_REFERENCE_BYTE = 0x1,DACPF_CATENATE = 0x80,};
enum MACRO_DACSF {DACSF_8_BIT_PCM = 0x0,DACSF_2_TO_1_ADPCM = 0x1,DACSF_3_TO_1_ADPCM = 0x2,DACSF_4_TO_1_ADPCM = 0x3,};
enum MACRO_DAR {DAR_NORMAL = 0,DAR_SQUISHED = 1,DAR_VERY_SQUISHED = 2,};
enum MACRO_DATA {DATA_GROUP_TEXT_BUFFER_LENGTH = 80,};
enum MACRO_DATABASE {DATABASE_NAME_LIST = 0,LAYOUT_NAME_LIST = 1,NOT_IN_LAYOUT_NAME_LIST = 2,ABSOLUTE_COLUMN_NUMBER = 3,INVALID_FIELD_LIST_QUERY = 4,COLUMNS_TAKEN_ARRAY_SIZE = 32,FDTF_MANDATORY = 128,};
enum MACRO_DAY {DAY_MIN = 1,HOUR_MAX = 23,};
enum MACRO_DB {DB_UNGROUPED = 0xFFFF,};
enum MACRO_DBCS {DBCS_GEOS = 0,};
enum MACRO_DC {DC_TEXT = 0,DC_GRAY_1 = 1,DC_GRAY_2 = 2,DC_GRAY_4 = 3,DC_GRAY_8 = 4,DC_COLOR_2 = 5,DC_COLOR_4 = 6,DC_COLOR_8 = 7,DC_CF_RGB = 8,DT_DISP_SIZE = 192,};
enum MACRO_DCC {DCC_DEFAULT_FEATURES = 1,DCC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_DCCF {DCCF_DROP_CAP = 0x1,};
enum MACRO_DECIMAL {DECIMAL_PRECISION = 18,};
enum MACRO_DEF {DEF_PROMPT = 0x80,};
enum MACRO_DEFAULT {DEFAULT_FONT_ID = 514,};
enum MACRO_DEFAULT_BACKLIGHT {DEFAULT_BACKLIGHT_LEVEL = 2,};
enum MACRO_DEFAULT_CLASS {DEFAULT_CLASS_MESSAGES = 512,};
enum MACRO_DEFAULT_DESIRED {DEFAULT_DESIRED_HANDLE_SIZE = 8,};
enum MACRO_DEFAULT_EXPORTED {DEFAULT_EXPORTED_MESSAGES = 48,DEFAULT_EXPORTED_MESSAGES_2 = 96,DEFAULT_EXPORTED_MESSAGES_3 = 144,DEFAULT_EXPORTED_MESSAGES_4 = 192,DEFAULT_EXPORTED_MESSAGES_5 = 240,DEFAULT_EXPORTED_MESSAGES_6 = 288,};
enum MACRO_DEFAULT_FIELD {DEFAULT_FIELD_X_POSITION = 100,};
enum MACRO_DEFAULT_FIELD_HEIGHT {DEFAULT_FIELD_HEIGHT = 20,DEFAULT_Y_DISTANCE_BETWEEN_FIELDS = 10,};
enum MACRO_DEFAULT_FONT {DEFAULT_FONT_SIZE = 10,FID_NAME_LEN = 20,};
enum MACRO_DEFAULT_GUIDE {DEFAULT_GUIDE_INFLUENCE = 10,};
enum MACRO_DEFAULT_IMPORT {DEFAULT_IMPORT_FIELD_WIDTH = 432,};
enum MACRO_DEFAULT_LABEL {DEFAULT_LABEL_X_POSITION = 10,DEFAULT_PAGE_NUMBER_WIDTH = 60,};
enum MACRO_DEFAULT_LOCK {DEFAULT_LOCK_TIME_OUT = 15,};
enum MACRO_DEFAULT_MASTER {DEFAULT_MASTER_MESSAGES = 8192,FIRST_MASTER_MESSAGE = 16384,};
enum MACRO_DEFAULT_MAX {DEFAULT_MAX_LINE_WIDTH = 7,};
enum MACRO_DEFAULT_PAGE {DEFAULT_PAGE_MARGIN = 72,};
enum MACRO_DEFAULT_RECORD {DEFAULT_RECORD_BOUNDARY_X_POSITION = 0,DEFAULT_RECORD_BOUNDARY_Y_POSITION = 0,};
enum MACRO_DEFAULT_RECORD_BOUNDARY {DEFAULT_RECORD_BOUNDARY_WIDTH = 250,DEFAULT_RECORD_BOUNDARY_HEIGHT = 300,};
enum MACRO_DEFAULT_RECORD_BOUNDARY_LINE {DEFAULT_RECORD_BOUNDARY_LINE_WIDTH = 1,DEFAULT_MULTI_RECORD_BOUNDARY_LINE_WIDTH = 2,};
enum MACRO_DEFAULT_ZOOM {DEFAULT_ZOOM_MINIMUM = 25,DEFAULT_ZOOM_MAXIMUM = 200,GVCA_ADJUST_ASPECT_RATIO = -32768,};
enum MACRO_DEF_FORCED {DEF_FORCED_SHUTDOWN = 0x40,};
enum MACRO_DEF_INTERACTIVE {DEF_INTERACTIVE = 0x20,};
enum MACRO_DEF_PARA {DEF_PARA_ATTR_CENTER = -24576,};
enum MACRO_DEF_PARA_ATTR {DEF_PARA_ATTR_RIGHT = 24576,};
enum MACRO_DES {DES_LOCAL_ONLY = 0x1000,DES_READ_ONLY = 0x800,DES_FORMATTABLE = 0x400,DES_ALIAS = 0x200,DES_BUSY = 0x100,};
enum MACRO_DESTROY {DESTROY_ON_EOS = 64,SP_IMMEDIATE = -1,};
enum MACRO_DF {DF_DICT = 0x1,};
enum MACRO_DFF {DFF_CALLBACK_CYL_HEAD = 0x2,};
enum MACRO_DFF_FORCE {DFF_FORCE_ERASE = 0x1,};
enum MACRO_DFNU {DFNU_FIELD = 0,DFNU_COLUMN = 1,DFNU_FIXED = 2,IMPEX_TEMP_VM_FILE = -1,};
enum MACRO_DF_EXPOSED {DF_EXPOSED = 0x80,DF_OBJECT_SPECIFIC = 0x40,DF_PRINT = 0x20,DF_DONT_DRAW_CHILDREN = 0x10,DF_DISPLAY_TYPE = 0xF,};
enum MACRO_DICT {DICT_GCM_FEATURES = 1,};
enum MACRO_DICT_GCM {DICT_GCM_TOOLBOX_FEATURES = 1,};
enum MACRO_DIRECTION {DIRECTION_STRING_LENGTH = 16,DATETIME_STRING_LENGTH = 18,DURATION_BUFFER_SIZE = 30,};
enum MACRO_DISK {DISK_IS_STD_PATH_MASK = 1,DFF_CALLBACK_PCT_DONE = 4,};
enum MACRO_DISK2 {DISK_SPACE_LOW = 0x6800,};
enum MACRO_DISK_SPACE {DISK_SPACE_CRITICAL = 0x1800,};
enum MACRO_DLF {DLF_SOLICITED = 0x4000,DLF_SNIFF = 0x2000,DLF_MEDIA_BUSY = 0x1000,DLF_ABORTED = 0x800,DLF_REMOTE = 0x400,DLF_INFO_SIZE = 0x1F0,};
enum MACRO_DLF_INDEX {DLF_INDEX_OFFSET = 0,DBF_LOG_RCVD = 128,IPBR_RESERVED = 192,};
enum MACRO_DLF_INFO_SIZE {DLF_INFO_SIZE_OFFSET = 4,DLF_INDEX = 15,};
enum MACRO_DM {DM_color_OFFSET = 6,DM_orientation = 48,};
enum MACRO_DMC {DMC_NO_CHANGE = 0x0,DMC_DEFAULT = 0x1,DMC_INVERTED = 0x2,DMC_TOGGLE = 0x3,};
enum MACRO_DMD {DMD_NO_CHANGE = 0x0,DMD_DEFAULT = 0x1,DMD_HIGH = 0x2,DMD_TOGGLE = 0x3,};
enum MACRO_DMF {DMF_UNDERLINE_ACCELERATOR = 0x40,DMF_CLIP_TO_MAX_WIDTH = 0x20,DMF_NONE = 0x10,DMF_Y_JUST_MASK = 0xC,DMF_X_JUST_MASK = 0x3,};
enum MACRO_DMF_Y {DMF_Y_JUST_OFFSET = 2,DMF_X_JUST_OFFSET = 0,};
enum MACRO_DMO {DMO_NO_CHANGE = 0x0,DMO_DEFAULT = 0x1,DMO_PORTRAIT = 0x2,DMO_TOGGLE = 0x3,};
enum MACRO_DMR {DMR_NO_CHANGE = 0x0,DMR_DEFAULT = 0x1,DMR_HIGH = 0x2,DMR_TOGGLE = 0x3,DM_color = 0xC0,};
enum MACRO_DM_definition {DM_definition_OFFSET = 2,DM_resolution = 3,};
enum MACRO_DM_orientation {DM_orientation_OFFSET = 4,DM_definition = 12,};
enum MACRO_DM_resolution {DM_resolution_OFFSET = 0,};
enum MACRO_DOF {DOF_CREATE_FILE_IF_FILE_DOES_NOT_EXIST = 0x8000,DOF_FORCE_TEMPLATE_BEHAVIOR = 0x4000,DOF_SAVE_AS_OVERWRITE_EXISTING_FILE = 0x2000,DOF_REOPEN = 0x1000,DOF_RAISE_APP_AND_DOC = 0x800,DOF_NAME_HOLDS_FILE_ID = 0x400,DOF_FORCE_REAL_EMPTY_DOCUMENT = 0x200,DOF_OPEN_FOR_IACP_ONLY = 0x100,};
enum MACRO_DOS {DOS_DRIVE_REF_LENGTH = 3,DOS_STD_PATH_LENGTH = 64,};
enum MACRO_DOS_FILE {DOS_FILE_NAME_CORE_LENGTH = 8,};
enum MACRO_DOS_FILE_NAME {DOS_FILE_NAME_EXT_LENGTH = 3,DOS_NO_DOT_FILE_NAME_LENGTH = 11,DOS_DOT_FILE_NAME_LENGTH = 12,};
enum MACRO_DOS_NO {DOS_NO_DOT_FILE_NAME_LENGTH_ZT = 12,DOS_DOT_FILE_NAME_LENGTH_ZT = 13,};
enum MACRO_DOS_NO_DOT {DOS_NO_DOT_FILE_NAME_SIZE = 12,DOS_DOT_FILE_NAME_SIZE = 14,};
enum MACRO_DOS_NO_DOT_DOS {DOS_NO_DOT_DOS_FILE_NAME_LENGTH = 11,DOS_DOT_DOS_FILE_NAME_LENGTH = 12,};
enum MACRO_DOS_NO_DOT_DOS_FILE {DOS_NO_DOT_DOS_FILE_NAME_LENGTH_ZT = 12,DOS_DOT_DOS_FILE_NAME_LENGTH_ZT = 13,};
enum MACRO_DOS_NO_DOT_DOS_FILE_NAME {DOS_NO_DOT_DOS_FILE_NAME_SIZE = 12,DOS_DOT_DOS_FILE_NAME_SIZE = 14,};
enum MACRO_DOTTED {DOTTED_HALF = 96,};
enum MACRO_DOTTED_EIGHTH {DOTTED_EIGHTH = 24,};
enum MACRO_DOTTED_QUARTER {DOTTED_QUARTER = 48,};
enum MACRO_DOTTED_SIXTEENTH {DOTTED_SIXTEENTH = 12,};
enum MACRO_DOTTED_THIRTYSECOND {DOTTED_THIRTYSECOND = 6,};
enum MACRO_DOUBLE {DOUBLE_DOT_HALF = 112,};
enum MACRO_DOUBLE_DOT {DOUBLE_DOT_QUARTER = 56,};
enum MACRO_DOUBLE_DOT_EIGHTH {DOUBLE_DOT_EIGHTH = 28,};
enum MACRO_DOUBLE_DOT_SIXTEENTH {DOUBLE_DOT_SIXTEENTH = 14,DOTTED_WHOLE = 192,};
enum MACRO_DPI {DPI_ENTRY_NUMBER_IN_PATH = 0x7F00,};
enum MACRO_DPI_ENTRY {DPI_ENTRY_NUMBER_IN_PATH_OFFSET = 8,DPI_STD_PATH = 255,};
enum MACRO_DPI_STD {DPI_STD_PATH_OFFSET = 0,FOARF_ADD_CRLF = -32768,};
enum MACRO_DR {DR_INIT = 0,DR_EXIT = 2,DR_SUSPEND = 4,DR_UNSUSPEND = 6,DRIVER_SUSPEND_ERROR_BUFFER_SIZE = 128,};
enum MACRO_DRAW {DRAW_MMC_ICON = 0,DRAW_TONE_ICON = 1,};
enum MACRO_DRAW2 {DRAW = 0,DONT_DRAW = 1,};
enum MACRO_DRIVE {DRIVE_NAME_MAX_LENGTH = 32,};
enum MACRO_DRIVER {DRIVER_PROTO_MAJOR = 2,};
enum MACRO_DRIVER_EXT {DRIVER_EXT_PROTO_MINOR = 0,DRE_TEST_DEVICE = 8,DRE_SET_DEVICE = 10,GEODE_MAX_DEVICE_NAME_LENGTH = 64,};
enum MACRO_DRIVER_PROTO {DRIVER_PROTO_MINOR = 0,DRIVER_EXT_PROTO_MAJOR = 3,};
enum MACRO_DRIVE_5 {DRIVE_5_25 = 0,DRIVE_3_5 = 1,DRIVE_FIXED = 2,DRIVE_RAM = 3,DRIVE_CD_ROM = 4,DRIVE_8 = 5,DRIVE_PCMCIA = 6,DRIVE_UNKNOWN = 15,DS_PRESENT = 128,};
enum MACRO_DRIVE_MAX {DRIVE_MAX_DRIVES = 255,};
enum MACRO_DRV {DRV_ESC_QUERY_ESC = 0x8000,};
enum MACRO_DR_VIRTUAL {DR_VIRTUAL_SERIAL_OPEN = 0xA,DR_VIRTUAL_SERIAL_CLOSE = 0xC,DR_VIRTUAL_SERIAL_SET_NOTIFY = 0xE,DR_VIRTUAL_SERIAL_FLUSH = 0x14,DR_VIRTUAL_SERIAL_READ = 0x18,DR_VIRTUAL_SERIAL_READ_BYTE = 0x1A,DR_VIRTUAL_SERIAL_WRITE = 0x1C,DR_VIRTUAL_SERIAL_WRITE_BYTE = 0x1E,DR_VIRTUAL_SERIAL_OPEN_FOR_DRIVERS = 0x2A,DR_VIRTUAL_SERIAL_SET_FLOW_CONTROL = 0x2C,DR_VIRTUAL_SERIAL_GET_MEDIUM = 0x3A,};
enum MACRO_DR_VIRTUAL_SERIAL {DR_VIRTUAL_SERIAL_SET_FORMAT = 0x22,VS_INIT = 0xFFFE,VS_NOT_SUPPORTED = 0xFFFF,};
enum MACRO_DS {DS_MEDIA_REMOVABLE = 0x40,DS_NETWORK = 0x20,DS_TYPE = 0xF,};
enum MACRO_DS_TINY {DS_TINY = 0,DS_STANDARD = 1,DS_LARGE = 2,DS_HUGE = 3,};
enum MACRO_DT {DT_DISP_ASPECT_RATIO = 0x30,};
enum MACRO_DTC {DTC_DEFAULT_FEATURES = 3,DTC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_DTCF {DTCF_LIST = 0x2,DTCF_CUSTOM = 0x1,};
enum MACRO_DTF {DTF_DICT = 0x1,};
enum MACRO_DT_DISP {DT_DISP_CLASS = 0xF,};
enum MACRO_DT_DISP_ASPECT {DT_DISP_ASPECT_RATIO_OFFSET = 4,};
enum MACRO_DT_DISP_CLASS {DT_DISP_CLASS_OFFSET = 0,};
enum MACRO_DT_DISP_SIZE {DT_DISP_SIZE_OFFSET = 6,};
enum MACRO_DT_EXTRA {DT_EXTRA_ENTRY = -2,};
enum MACRO_DT_UNKNOWN {DT_UNKNOWN = -1,};
enum MACRO_DU {DU_POINTS = 0,DU_INCHES = 1,DU_CENTIMETERS = 2,DU_MILLIMETERS = 3,DU_PICAS = 4,DU_EUR_POINTS = 5,DU_CICEROS = 6,DU_POINTS_OR_MILLIMETERS = 7,DU_INCHES_OR_CENTIMETERS = 8,LOCAL_DISTANCE_BUFFER_SIZE = 32,LDF_FULL_NAMES = -32768,};
enum MACRO_DYNAMIC {DYNAMIC_FFFF = -1,DYNAMIC_FFF = -6144,DYNAMIC_FF = -12288,DYNAMIC_F = -18432,DYNAMIC_MF = -21248,DYNAMIC_MP = -26624,DYNAMIC_P = -32768,DYNAMIC_PP = 26624,DYNAMIC_PPP = 20480,DYNAMIC_PPPP = 14336,};
enum MACRO_EA {EA_FREE_LIST_TERMINATOR = -1,};
enum MACRO_ECF {ECF_ANAL_VMEM = 0x2000,ECF_FREE = 0x1000,ECF_HIGH = 0x800,ECF_LMEM = 0x400,ECF_BLOCK_CHECKSUM = 0x200,ECF_GRAPHICS = 0x100,ECF_SEGMENT = 0x80,ECF_NORMAL = 0x40,ECF_VMEM = 0x20,ECF_APP = 0x10,ECF_LMEM_MOVE = 0x8,ECF_UNLOCK_MOVE = 0x4,ECF_VMEM_DISCARD = 0x2,ECF_TEXT = 0x1,};
enum MACRO_ECHO {ECHO = 7,DISCARD = 9,FTP_DATA = 20,FTP = 21,TELNET_SERVER = 23,NAME_SERVER = 42,WHOIS = 43,DOMAIN_SERVER = 53,FINGER = 79,};
enum MACRO_ECPF {ECPF_ADJUSTED_CREATE = 0x1,ECRF_NOT_CREATING = 0x2,};
enum MACRO_ECRF {ECRF_DESTROYED = 0x1,};
enum MACRO_EF {EF_MAKE_DEPENDENCIES = 0x80,EF_ONLY_NAMES = 0x40,EF_KEEP_LAST_CELL = 0x20,EF_NO_NAMES = 0x10,EF_ERROR_PUSHED = 0x8,};
enum MACRO_EFSA {EFSA_SEARCHABLE = 0x4000,RCMO_TOP_TEXT = 0x8000,};
enum MACRO_EIGHTH {EIGHTH = 16,};
enum MACRO_ENG {ENG_CHAR_TO_GET_CHAR_RU = 65,ENG_CHAR_TO_GET_CHAR_PHINTHU = 66,ENG_CHAR_TO_GET_CHAR_CHO_CHING = 67,ENG_CHAR_TO_GET_CHAR_TO_PATAK = 68,ENG_CHAR_TO_GET_CHAR_DO_CHADA = 69,ENG_CHAR_TO_GET_CHAR_SARA_O = 70,ENG_CHAR_TO_GET_CHAR_CHO_CHOE = 71,ENG_CHAR_TO_GET_CHAR_MAITAIKHU = 72,ENG_CHAR_TO_GET_CHAR_NO_NEN = 73,ENG_CHAR_TO_GET_CHAR_MAI_CHATTAWA = 74,ENG_CHAR_TO_GET_CHAR_SO_RUSI = 75,ENG_CHAR_TO_GET_CHAR_SO_SALA = 76,ENG_CHAR_TO_GET_ASCII_CIRCUMFLEX = 77,ENG_CHAR_TO_GET_CHAR_THANTHAKHAT = 78,ENG_CHAR_TO_GET_CHAR_PAIYANNOI = 79,ENG_CHAR_TO_GET_CHAR_YO_YING = 80,ENG_CHAR_TO_GET_DIGIT_ZERO = 81,ENG_CHAR_TO_GET_CHAR_THO_NANGMONTHO = 82,ENG_CHAR_TO_GET_CHAR_KHO_RAKHANG = 83,ENG_CHAR_TO_GET_CHAR_THO_THONG = 84,ENG_CHAR_TO_GET_CHAR_MAI_TRI = 85,ENG_CHAR_TO_GET_CHAR_HO_NOKHUK = 86,ENG_CHAR_TO_GET_QUOTE = 87,ENG_CHAR_TO_GET_RIGHT_PAREN = 88,ENG_CHAR_TO_GET_CHAR_NIKHAHIT = 89,ENG_CHAR_TO_GET_LEFT_PAREN = 90,ENG_CHAR_TO_GET_CHAR_MO_MA = 44,ENG_CHAR_TO_GET_CHAR_KHO_KHWAI = 56,ENG_CHAR_TO_GET_CHAR_THO_THUNG = 53,ENG_CHAR_TO_GET_CHAR_PHO_SAMPHAO = 52,ENG_CHAR_TO_GET_CHAR_TO_TAO = 57,ENG_CHAR_TO_GET_PLUS = 49,ENG_CHAR_TO_GET_CHAR_SARA_AI_MAIMUAN = 46,ENG_CHAR_TO_GET_CHAR_WO_WAEN = 59,ENG_CHAR_TO_GET_CHAR_SARA_UE = 55,ENG_CHAR_TO_GET_CHAR_THO_PHUTHAO = 62,ENG_CHAR_TO_GET_DIGIT_EIGHT = 42,ENG_CHAR_TO_GET_DIGIT_FIVE = 37,ENG_CHAR_TO_GET_DIGIT_FOUR = 36,ENG_CHAR_TO_GET_DIGIT_NINE = 40,ENG_CHAR_TO_GET_DIGIT_ONE = 33,ENG_CHAR_TO_GET_CHAR_LO_CHULA = 60,NG_CHAR_TO_GET_CHAR_SO_SO = 58,ENG_CHAR_TO_GET_DIGIT_SEVEN = 38,ENG_CHAR_TO_GET_CHAR_SARA_UU = 94,ENG_CHAR_TO_GET_DIGIT_THREE = 35,ENG_CHAR_TO_GET_DIGIT_TWO = 64,ENG_CHAR_TO_GET_CHAR_SARA_U = 54,ENG_CHAR_TO_GET_CHAR_FO_FAN = 97,ENG_CHAR_TO_GET_CHAR_SARA_I = 98,ENG_CHAR_TO_GET_CHAR_SARA_AE = 99,ENG_CHAR_TO_GET_CHAR_KO_KAI = 100,ENG_CHAR_TO_GET_CHAR_SARA_AM = 101,ENG_CHAR_TO_GET_CHAR_DO_DEK = 102,ENG_CHAR_TO_GET_CHAR_SARA_E = 103,ENG_CHAR_TO_GET_CHAR_MAI_THO = 104,ENG_CHAR_TO_GET_CHAR_RO_RUA = 105,ENG_CHAR_TO_GET_CHAR_MAI_EK = 106,ENG_CHAR_TO_GET_CHAR_SARA_AA = 107,ENG_CHAR_TO_GET_CHAR_SO_SUA = 108,ENG_CHAR_TO_GET_CHAR_THO_THAHAN = 109,ENG_CHAR_TO_GET_CHAR_SARA_UEE = 110,ENG_CHAR_TO_GET_CHAR_NO_NU = 111,ENG_CHAR_TO_GET_CHAR_YO_YAK = 112,ENG_CHAR_TO_GET_CHAR_MAIYAMOK = 113,ENG_CHAR_TO_GET_CHAR_PHO_PHAN = 114,ENG_CHAR_TO_GET_CHAR_HO_HIP = 115,ENG_CHAR_TO_GET_CHAR_SARA_A = 116,ENG_CHAR_TO_GET_CHAR_SARA_II = 117,ENG_CHAR_TO_GET_CHAR_O_ANG = 118,ENG_CHAR_TO_GET_CHAR_SARA_AI_MAIMALAI = 119,ENG_CHAR_TO_GET_CHAR_PO_PLA = 120,ENG_CHAR_TO_GET_CHAR_MAI_HAN_AKAT = 121,ENG_CHAR_TO_GET_CHAR_PHO_PHUNG = 122,ENG_CHAR_TO_GET_SPACE = 32,ENG_CHAR_TO_GET_MINUS = 51,};
enum MACRO_ENG_CHAR_TO_GET_CHAR_CHO {ENG_CHAR_TO_GET_CHAR_CHO_CHAN = 48,SMALL_CHAR_TO_GET_CHAR_RU = 97,SMALL_CHAR_TO_GET_CHAR_PHINTHU = 98,SMALL_CHAR_TO_GET_CHAR_CHO_CHING = 99,SMALL_CHAR_TO_GET_CHAR_TO_PATAK = 100,SMALL_CHAR_TO_GET_CHAR_DO_CHADA = 101,SMALL_CHAR_TO_GET_CHAR_SARA_O = 102,SMALL_CHAR_TO_GET_CHAR_CHO_CHOE = 103,SMALL_CHAR_TO_GET_CHAR_MAITAIKHU = 104,SMALL_CHAR_TO_GET_CHAR_NO_NEN = 105,SMALL_CHAR_TO_GET_CHAR_MAI_CHATTAWA = 106,SMALL_CHAR_TO_GET_CHAR_SO_RUSI = 107,SMALL_CHAR_TO_GET_CHAR_SO_SALA = 108,SMALL_CHAR_TO_GET_ASCII_CIRCUMFLEX = 109,SMALL_CHAR_TO_GET_CHAR_THANTHAKHAT = 110,SMALL_CHAR_TO_GET_CHAR_PAIYANNOI = 111,SMALL_CHAR_TO_GET_CHAR_YO_YING = 112,SMALL_CHAR_TO_GET_DIGIT_ZERO = 113,SMALL_CHAR_TO_GET_CHAR_THO_NANGMONTHO = 114,SMALL_CHAR_TO_GET_CHAR_KHO_RAKHANG = 115,SMALL_CHAR_TO_GET_CHAR_THO_THONG = 116,SMALL_CHAR_TO_GET_CHAR_MAI_TRI = 117,SMALL_CHAR_TO_GET_CHAR_HO_NOKHUK = 118,SMALL_CHAR_TO_GET_QUOTE = 119,SMALL_CHAR_TO_GET_RIGHT_PAREN = 120,SMALL_CHAR_TO_GET_CHAR_NIKHAHIT = 121,SMALL_CHAR_TO_GET_LEFT_PAREN = 122,};
enum MACRO_ENG_CHAR_TO_GET_CURRENCY {ENG_CHAR_TO_GET_CURRENCY_SYMBOL_BAHT = 50,};
enum MACRO_EO {EO_PORTRAIT = 0,EO_LANDSCAPE = 1,};
enum MACRO_EOREG {EOREG_HIGH = 0x80,};
enum MACRO_EOSF {EOSF_UNLOCK = 0x80,};
enum MACRO_EOSF_DESTROY {EOSF_DESTROY = 0x40,UNLOCK_ON_EOS = 0x80,};
enum MACRO_EPN {EPN_PADDING_OFFSET = 2,};
enum MACRO_EPN_SELECTION {EPN_SELECTION_LOCK_SET = 0x2,EPN_BLOCKS_LOWER_OBJECTS = 0x1,};
enum MACRO_ERROR {ERROR_CHECK = 0,};
enum MACRO_ERROR_COORD {ERROR_COORD = 0x8000,};
enum MACRO_ERROR_UNSUPPORTED {ERROR_UNSUPPORTED_FUNCTION = 1,ERROR_FILE_NOT_FOUND = 2,ERROR_PATH_NOT_FOUND = 3,ERROR_TOO_MANY_OPEN_FILES = 4,ERROR_ACCESS_DENIED = 5,ERROR_INSUFFICIENT_MEMORY = 8,ERROR_INVALID_VOLUME = 15,ERROR_IS_CURRENT_DIRECTORY = 16,ERROR_DIFFERENT_DEVICE = 17,ERROR_NO_MORE_FILES = 18,ERROR_WRITE_PROTECTED = 19,ERROR_UNKNOWN_VOLUME = 20,ERROR_DRIVE_NOT_READY = 21,ERROR_CRC_ERROR = 23,ERROR_SEEK_ERROR = 25,ERROR_UNKNOWN_MEDIA = 26,ERROR_SECTOR_NOT_FOUND = 27,ERROR_WRITE_FAULT = 29,ERROR_READ_FAULT = 30,ERROR_GENERAL_FAILURE = 31,ERROR_SHARING_VIOLATION = 32,ERROR_ALREADY_LOCKED = 33,ERROR_SHARING_OVERFLOW = 36,ERROR_NETWORK_CONNECTION_BROKEN = 55,ERROR_NETWORK_ACCESS_DENIED = 65,ERROR_NETWORK_NOT_LOGGED_IN = 78,ERROR_SHORT_READ_WRITE = 128,ERROR_INVALID_LONGNAME = 129,ERROR_FILE_EXISTS = 130,ERROR_DOS_EXEC_IN_PROGRESS = 131,ERROR_FILE_IN_USE = 132,ERROR_ARGS_TOO_LONG = 133,ERROR_DISK_UNAVAILABLE = 134,ERROR_DISK_STALE = 135,ERROR_FILE_FORMAT_MISMATCH = 136,ERROR_CANNOT_MAP_NAME = 137,ERROR_DIRECTORY_NOT_EMPTY = 138,ERROR_ATTR_NOT_SUPPORTED = 139,ERROR_ATTR_NOT_FOUND = 140,ERROR_ATTR_SIZE_MISMATCH = 141,ERROR_ATTR_CANNOT_BE_SET = 142,ERROR_CANNOT_MOVE_DIRECTORY = 143,ERROR_PATH_TOO_LONG = 144,ERROR_ARGS_INVALID = 145,ERROR_CANNOT_FIND_COMMAND_INTERPRETER = 146,ERROR_NO_TASK_DRIVER_LOADED = 147,};
enum MACRO_ERT {ERT_REGULAR = 0x1,ERT_LOAD_FROM_TEMP_VISUAL_UPDATE_ROW = 0x2,};
enum MACRO_ESAT {ESAT_ERROR = 0x40,ESAT_RANGE = 0x20,ESAT_STRING = 0x10,ESAT_NUMBER = 0x8,ESAT_NUM_TYPE = 0x3,};
enum MACRO_ESAT_FUNCTION {ESAT_FUNCTION = 24,MAX_STRING_LENGTH = 511,};
enum MACRO_ESAT_TOP {ESAT_TOP_OF_STACK = 0,ESAT_NAME = 48,};
enum MACRO_ESOT {ESOT_OPERATOR = 0,ESOT_FUNCTION = 1,ESOT_OPEN_PAREN = 2,ESOT_TOP_OF_STACK = 3,};
enum MACRO_EUDC {EUDC_DEFAULT_FEATURES = 1,};
enum MACRO_EUDC_DEFAULT {EUDC_DEFAULT_TOOLBOX_FEATURES = 1,MAX_BACKUP_LIST_SIZE = 30,};
enum MACRO_EUDF {EUDF_EDIT_USER_DICTIONARY = 0x1,};
enum MACRO_EUDTF {EUDTF_EDIT_USER_DICTIONARY = 0x1,};
enum MACRO_EVALUATE {EVALUATE_NONE = 0x0,EVALUATE_SUB_LOW = 0x1,EVALUATE_LOW = 0x2,EVALUATE_SUB_MEDIUM = 0x3,EVALUATE_MEDIUM = 0x4,EVALUATE_SUB_HIGH = 0x5,EVALUATE_HIGH = 0x6,EPN_PADDING = 0xFFFC,};
enum MACRO_EVAL_MAX_NESTED_LEVELS {EVAL_MAX_NESTED_LEVELS = 0x20,DF_DONT_POP_ARGUMENT = 0x80,};
enum MACRO_EXPORTC {EXPORTC_DEFAULT_FEATURES = 15,};
enum MACRO_EXPORTCF {EXPORTCF_EXPORT_TRIGGER = 0x8,EXPORTCF_FORMAT_OPTIONS = 0x4,EXPORTCF_BASIC = 0x2,EXPORTCF_GLYPH = 0x1,};
enum MACRO_EXPORTCTF {EXPORTCTF_DIALOG_BOX = 0x1,};
enum MACRO_EXPORTC_DEFAULT {EXPORTC_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_EXTERNAL {EXTERNAL_VIEW_HEIGHT = 200,};
enum MACRO_FA {FA_FIXED_WIDTH = 0x40,FA_ORIENT = 0x20,FA_OUTLINE = 0x10,FA_FAMILY = 0xF,};
enum MACRO_FAC {FAC_DEFAULT_FEATURES = 7,FAC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_FACF {FACF_FONT_WEIGHT = 0x4,FACF_FONT_WIDTH = 0x2,FACF_TRACK_KERNING = 0x1,};
enum MACRO_FACTORIAL {FACTORIAL_LIMIT = 1754,};
enum MACRO_FAF {FAF_PUSH_RESULT = 0x2,};
enum MACRO_FAF_STORE {FAF_STORE_NUMBER = 0x1,};
enum MACRO_FALSE {FALSE = 0,TRUE = -1,};
enum MACRO_FAX {FAX_PHONE_NUMBER_SIZE = 31,FAX_NAME_SIZE = 101,};
enum MACRO_FAX_COMPANY {FAX_COMPANY_NAME_SIZE = 51,};
enum MACRO_FAX_NOTE {FAX_NOTE_FILE_MAJOR_PROTOCOL = 2,FAX_NOTE_FILE_MINOR_PROTOCOL = 0,};
enum MACRO_FA_FAMILY_OFFSET {FA_FAMILY_OFFSET = 0,FW_MINIMUM = 75,FW_NORMAL = 100,FW_MAXIMUM = 125,};
enum MACRO_FA_LINK {FA_LINK = 0x40,FA_ARCHIVE = 0x20,FA_SUBDIR = 0x10,FA_VOLUME = 0x8,FA_SYSTEM = 0x4,FA_HIDDEN = 0x2,FA_RDONLY = 0x1,};
enum MACRO_FA_READ {FA_READ_ONLY = 0,FA_WRITE_ONLY = 1,FA_READ_WRITE = 2,FILE_DENY_RW = 16,FILE_DENY_W = 32,FILE_DENY_R = 48,FILE_DENY_NONE = 64,};
enum MACRO_FC {FC_NO_FILE = 0x0,FC_FILE = 0x1,};
enum MACRO_FC2 {FC_DEFAULT_TOOLBOX_FEATURES = 1,PSCF_9 = 2048,};
enum MACRO_FCDBF {FCDBF_DIALOG_TYPE = 0x6000,FCDBF_INTERACTION_TYPE = 0x1E00,FCDBF_DESTRUCTIVE_ACTION = 0x100,FCDBF_NO_BEEP = 0x80,FCDBF_DIALOG_TYPE_OFFSET = 0xD,};
enum MACRO_FCDBF_INTERACTION {FCDBF_INTERACTION_TYPE_OFFSET = 9,};
enum MACRO_FCDBF_NO {FCDBF_NO_BEEP_OFFSET = 7,};
enum MACRO_FCF {FCF_NATIVE_WITH_EXT_ATTRS = 0x4000,};
enum MACRO_FCF2 {FCF_SHORT_LIST = 0x2,FCF_LONG_LIST = 0x1,};
enum MACRO_FCF_ACCESS {FCF_ACCESS = 0xFF,};
enum MACRO_FCF_MODE {FCF_MODE = 0x300,};
enum MACRO_FCR {FCR_ADD_TO_LAYOUT = 0,FCR_ADD_TO_DATABASE = 1,};
enum MACRO_FCT {FCT_CREATED = 1,FCT_CREATED_AND_ADDED_TO_LAYOUT = 2,FCT_ADDED_TO_LAYOUT = 3,FCT_DELETED_FROM_LAYOUT = 4,FCT_DELETED_FROM_DATABASE = 5,};
enum MACRO_FCTF {FCTF_TOOL_LIST = 0x1,FC_DEFAULT_FEATURES = 0x3,};
enum MACRO_FD {FD_YEAR = -512,FD_MONTH = 480,FD_DAY = 31,};
enum MACRO_FDA {FDA_TYPE_POSITION = 0,MAX_TOTAL_NAME_LENGTH = 60,};
enum MACRO_FDAT {FDAT_MINUTE = 0x0,};
enum MACRO_FDAT_2SECOND {FDAT_2SECOND = 0x0,};
enum MACRO_FDAT_2SECOND_OFFSET {FDAT_2SECOND_OFFSET = 16,};
enum MACRO_FDAT_DAY {FDAT_DAY = 0x1F,};
enum MACRO_FDAT_DAY_OFFSET {FDAT_DAY_OFFSET = 0,FDAT_BASE_YEAR = 1980,};
enum MACRO_FDAT_HOUR {FDAT_HOUR_OFFSET = 27,};
enum MACRO_FDAT_MINUTE {FDAT_MINUTE_OFFSET = 21,};
enum MACRO_FDAT_MONTH {FDAT_MONTH = 0x1E0,};
enum MACRO_FDAT_MONTH_OFFSET {FDAT_MONTH_OFFSET = 5,};
enum MACRO_FDAT_YEAR {FDAT_YEAR = 0xFE00,};
enum MACRO_FDAT_YEAR_OFFSET {FDAT_YEAR_OFFSET = 9,};
enum MACRO_FDBRF {FDBRF_INVISIBLE = 0x80,};
enum MACRO_FDBRF_NOT {FDBRF_NOT_YET_SAVED = 0x20,};
enum MACRO_FDBRF_TEMPORARILY {FDBRF_TEMPORARILY_VISIBLE = 0x40,};
enum MACRO_FDT {FDT_GENERAL_TEXT = 0,FDT_COMPUTED = 1,FDT_INTEGER = 2,FDT_REAL = 3,FDT_DATE = 4,FDT_TIME = 5,FDT_PAGE_NUMBER = 6,MAX_NUM_RECORDS = 16384,};
enum MACRO_FDTF {FDTF_HAS_MIN = 0x40,FDTF_HAS_MAX = 0x20,FDTF_HAS_DEFAULT = 0x10,FDTF_HAS_NOTES = 0x8,};
enum MACRO_FD_DAY_OFFSET {FD_DAY_OFFSET = 0,FDAT_HOUR = 0,};
enum MACRO_FD_MONTH {FD_MONTH_OFFSET = 5,};
enum MACRO_FD_YEAR {FD_YEAR_OFFSET = 9,};
enum MACRO_FE {FE_EXCLUSIVE = 1,FE_DENY_WRITE = 2,FE_DENY_READ = 3,FE_NONE = 4,};
enum MACRO_FEF {FEF_USEFUL = 0x40,FEF_FIXED_WIDTH = 0x20,FEF_FAMILY = 0x10,FEF_STRING = 0x8,FEF_DOWNCASE = 0x4,FEF_BITMAPS = 0x2,FEF_OUTLINES = 0x1,};
enum MACRO_FEF2 {FEF_TOP = 0x1,FEF_LEFT = 0x2,FEF_RIGHT = 0x4,FEF_BOTTOM = 0x8,FEF_FIRST_FIELD_FLAG = 0x80,};
enum MACRO_FEF_LEAVE {FEF_LEAVE_EDGES_ALONE = 0x80,FEF_ALL_EDGES = 0xF,};
enum MACRO_FESF {FESF_DIRS = 0x80,FESF_NON_GEOS = 0x40,FESF_GEOS_EXECS = 0x20,FESF_GEOS_NON_EXECS = 0x10,FESF_REAL_SKIP = 0x8,FESF_CALLBACK = 0x4,FESF_LOCK_CB_DATA = 0x2,FESF_LEAVE_HEADER = 0x1,};
enum MACRO_FE_EXPONENT {FE_EXPONENT = 0x7FFF,};
enum MACRO_FE_SIGN {FE_SIGN = 0x8000,};
enum MACRO_FF {FF_NON_PORTABLE = 0x7,FF_SPECIAL = 0x6,FF_MONO = 0x5,FF_SYMBOL = 0x4,FF_ORNAMENT = 0x3,FF_SCRIPT = 0x2,FF_SANS_SERIF = 0x1,FF_SERIF = 0x0,FM_DONT_USE = 0xFF,FM_EXACT = 0x0,};
enum MACRO_FFAF {FFAF_FLOAT_RESERVED = 0x8000,FFAF_FROM_ADDR = 0x4000,FFAF_DONT_USE_SCIENTIFIC = 0x200,FFAF_SCIENTIFIC = 0x100,FFAF_PERCENT = 0x80,FFAF_USE_COMMAS = 0x40,FFAF_NO_TRAIL_ZEROS = 0x20,FFAF_NO_LEAD_ZERO = 0x10,FFAF_HEADER_PRESENT = 0x8,FFAF_TRAILER_PRESENT = 0x4,FFAF_SIGN_CHAR_TO_FOLLOW_HEADER = 0x2,FFAF_SIGN_CHAR_TO_PRECEDE_TRAILER = 0x1,};
enum MACRO_FFCC {FFCC_DEFAULT_FEATURES = 1,FPSCF_10 = 128,};
enum MACRO_FFCCF {FFCCF_SHORT_LIST = 0x1,};
enum MACRO_FFD {FFD_NAME_OK = 0,FFD_DUPLICATE_FIELD_NAME = 1,FFD_TOO_MANY_FIELDS = 2,FFD_CIRCULAR_EXPRESSION = 3,FFD_ABORT_TYPE_CHANGE = 4,};
enum MACRO_FFDT {FFDT_DATE_TIME_OP = 0x8000,FFDT_FROM_ADDR = 0x4000,};
enum MACRO_FFDT_FORMAT {FFDT_FORMAT = 0x3FFF,};
enum MACRO_FFD_ATTEMPTED {FFD_ATTEMPTED_TO_DELETE_LAST_LAYOUT = 0,FFD_DELETE_LAYOUT_OK = 1,FFD_NO_DELETE_LAYOUT_DONE = 2,};
enum MACRO_FFD_NO {FFD_NO_ERROR = 0,FFD_DUPLICATE_LAYOUT_NAME = 1,MAX_LAYOUT_NAME_LENGTH = 40,MAX_LAYOUT_NOTES_LENGTH = 255,};
enum MACRO_FFE {FFE_EDGE_LIST = 0x1,};
enum MACRO_FFEB {FFEB_MODULO_ID = 0,FFEB_EXPONENT_ID = 1,FFEB_MULTIPLY_ID = 2,FFEB_DIVISION_ID = 3,FFEB_PLUS_ID = 4,FFEB_MINUS_ID = 5,FFEB_LEFT_PARENS_ID = 6,FFEB_RIGHT_PARENS_ID = 7,FFEB_AMPERSAND_ID = 8,FFEB_EQUALS_ID = 9,FFEB_NOTEQUAL_ID = 10,FFEB_LESSTHAN_ID = 11,FFEB_GREATERTHAN_ID = 12,FFEB_LESSEQUAL_ID = 13,FFEB_GREATEREQUAL_ID = 14,};
enum MACRO_FFEB2 {FFEB_TEXTEDIT_BOX = 0x1,};
enum MACRO_FFEBFC {FFEBFC_DEFAULTS = 0x20,FFEBFC_SUBSETS = 0x10,FFEBFC_TOTALS = 0x8,FFEBFC_SUBTOTALS = 0x4,FFEBFC_SEARCHES = 0x2,FFEBFC_COMPUTED_FIELDS = 0x1,};
enum MACRO_FFEBFC_NONE {FFEBFC_ALL = 0x3F,FFEBFC_NONE = 0x0,FFEBFC_TSD_AND_C = 0x31,};
enum MACRO_FFEB_DEFAULT {FFEB_DEFAULT_FEATURES = 1,FFEB_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_FFE_DEFAULT {FFE_DEFAULT_FEATURES = 1,FFE_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_FFFP {FFFP_DEFAULT_EXISTS = 0x1,FFFP_MIN_EXISTS = 0x2,FFFP_MAX_EXISTS = 0x4,CREATING_NEW_FIELD = 0xFFFF,};
enum MACRO_FFFPAB {FFFPAB_FIELD_NAME = 0,FFFPAB_DATA_TYPE = 1,FFFPAB_MAX_LENGTH = 2,FFFPAB_MIN = 3,FFFPAB_MAX = 4,FFFPAB_DEFAULT = 5,FFFPAB_NOTES = 6,FFFP_FIELD_NAME_FEATURE = 256,};
enum MACRO_FFFPC {FFFPC_FIELD_PROPERTIES = 0,FFFPC_CREATE_NEW_FIELD = 1,FFFPC_NONE = 2,};
enum MACRO_FFFPNB {FFFPNB_OK = 0,FFFPNB_OK_AND_CREATE_ANOTHER = 1,};
enum MACRO_FFFPUL {FFFPUL_ADVANCED = 0,FFFPUL_NOVICE = 1,FFFPUL_NONE = 2,MAX_TEXT_STRING_LENGTH = 255,};
enum MACRO_FFFP_ADVANCED {FFFP_ADVANCED_FEATURES = 382,};
enum MACRO_FFFP_DEFAULT {FFFP_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_FFFP_EDIT {FFFP_EDIT_FIELD_INTERMEDIATE_FEATURES = 257,FFFP_EDIT_FIELD_ADVANCED_FEATURES = 377,};
enum MACRO_FFFP_FIELD {FFFP_FIELD_NAME_DESCR_FEATURE = 0x80,FFFP_DATA_TYPE_FEATURE = 0x40,FFFP_COMPUTED_DATA_TYPE_FEATURE = 0x20,FFFP_FIELD_ATTRS_FEATURE = 0x10,FFFP_DATA_ATTRS_FEATURE = 0x8,FFFP_CREATE_TRIGGER_FEATURE = 0x4,FFFP_CANCEL_TRIGGER_FEATURE = 0x2,FFFP_APPLY_RESET_CLOSE_TRIGGER_FEATURE = 0x1,};
enum MACRO_FFFP_INTERMEDIATE {FFFP_INTERMEDIATE_FEATURES = 390,};
enum MACRO_FFFV {FFFV_FIELD_OK = 0,FFFV_FIELD_SMALLER_THAN_MIN = 1,FFFV_FIELD_LARGER_THAN_MAX = 2,FFFV_FIELD_NOT_LEGAL = 3,FFFV_NOT_IN_DESIGN_MODE = 4,FFFV_FIELD_NOT_DIRTY = 5,FFFV_SYSTEM_ERROR = 6,NO_ITEM_HIGHLIGHT = 255,};
enum MACRO_FFGBUF {FFGBUF_NOTHING = 0,FFGBUF_UPDATE_APPEARENCES = 1,FFRCP_MAX_RECORD_NUM_CHARS = 5,FFRCP_CURRENT_RECORD_DISPLAY_STRING_SIZE = 18,FFRCP_SELECT_RECORD_TIMER_TICKS = 40,FFRCPF_MARK_RECORDS = 64,};
enum MACRO_FFRCP {FFRCP_INVALID_RECORD = -1,};
enum MACRO_FFRCPF {FFRCPF_NAVIGATION = 0x20,FFRCPF_GOTO_RECORD = 0x10,FFRCPF_CREATE_NEW_RECORD = 0x8,FFRCPF_COMMIT_CURRENT_RECORD = 0x4,FFRCPF_REVERT_CURRENT_RECORD = 0x2,FFRCPF_DELETE_CURRENT_RECORD = 0x1,};
enum MACRO_FFRCPTF {FFRCPTF_MARK_RECORDS = 0x80,FFRCPTF_CURRENT_RECORD = 0x40,FFRCPTF_NAVIGATION = 0x20,FFRCPTF_GOTO_RECORD = 0x10,FFRCPTF_CREATE_NEW_RECORD = 0x8,FFRCPTF_COMMIT_CURRENT_RECORD = 0x4,FFRCPTF_REVERT_CURRENT_RECORD = 0x2,FFRCPTF_DELETE_CURRENT_RECORD = 0x1,};
enum MACRO_FFRCP_DEFAULT {FFRCP_DEFAULT_FEATURES = 63,FFRCP_DEFAULT_TOOLBOX_FEATURES = 255,};
enum MACRO_FFRCP_NEW {FFRCP_NEW_RECORD = -1,};
enum MACRO_FFTC {FFTC_FIELD_LISTS_FEATURE = 0x10,};
enum MACRO_FFTC_CREATE {FFTC_CREATE_NEW_FIELD_FEATURE = 0x4,};
enum MACRO_FFTC_DEFAULT {FFTC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_FFTC_DELETE {FFTC_DELETE_FIELD_FEATURE = 0x1,FFTC_DEFAULT_FEATURES = 0x1F,};
enum MACRO_FFTC_EDIT {FFTC_EDIT_FIELD_FEATURE = 0x2,};
enum MACRO_FFTC_FIELD {FFTC_FIELD_NOTES_FEATURE = 0x8,};
enum MACRO_FG {FG_NON_PORTABLE = 0xE00,FG_SPECIAL = 0xC00,FG_MONO = 0xA00,FG_SYMBOL = 0x800,FG_ORNAMENT = 0x600,FG_SCRIPT = 0x400,FG_SANS_SERIF = 0x200,FG_SERIF = 0x0,};
enum MACRO_FID {FID_BERKELEY = 0x202,FID_BISON = 0xA00,FID_CALENDAR = 0xA03,FID_CHICAGO = 0x200,FID_INVALID = 0x0,FID_JSYS = 0xA02,FID_LED = 0x600,FID_NOTEPAD = 0xA04,FID_PIZZA_KANJI = 0xC00,FID_PMSYSTEM = 0x203,FID_RESPONDER = 0xA05,FID_ROMA = 0x1,FID_TERMINAL = 0xA06,FID_TERMINAL_GRAPHIC = 0xA07,FID_UNIVERSITY = 0x201,FID_WINDOWS = 0xA01,};
enum MACRO_FIDR {FIDR_ID = 0xFFF,};
enum MACRO_FIDR_ID {FIDR_ID_OFFSET = 0,FA_USEFUL = 128,};
enum MACRO_FIDR_maker {FIDR_maker_OFFSET = 12,};
enum MACRO_FID_BITSTREAM {FID_BITSTREAM_AACHEN = 0x300F,FID_BITSTREAM_ACCOLADE = 0x300B,FID_BITSTREAM_ACE_I = 0x3806,FID_BITSTREAM_ADOBE_CASLON = 0x301B,FID_BITSTREAM_ADOBE_GARAMOND = 0x3077,FID_BITSTREAM_ADOBE_UTOPIA = 0x306C,FID_BITSTREAM_AKZIDENZ_GROTESK = 0x3207,FID_BITSTREAM_AKZIDENZ_GROTESK_BUCH = 0x3208,FID_BITSTREAM_AKZINDENZ_GROTESK = 0x3239,FID_BITSTREAM_ALBERTUS = 0x300C,FID_BITSTREAM_ALGERIAN = 0x360E,FID_BITSTREAM_ALTERNATE_GOTHIC = 0x3209,FID_BITSTREAM_AMERICANA = 0x3010,FID_BITSTREAM_AMERICAN_TYPEWRITER = 0x3A01,FID_BITSTREAM_AMERICAN_UNCIAL = 0x3611,FID_BITSTREAM_ANGLIA = 0x3408,FID_BITSTREAM_ANGRO = 0x3203,FID_BITSTREAM_ANGSANA_NEW = 0x307F,FID_BITSTREAM_ANTIQUE_OLIVE = 0x320A,FID_BITSTREAM_ANZEIGEN_GROTESK = 0x320B,FID_BITSTREAM_ARCADIA = 0x367C,FID_BITSTREAM_ARISTON = 0x3409,FID_BITSTREAM_ARNOLD_BOCKLIN = 0x360F,FID_BITSTREAM_ARSIS = 0x3007,FID_BITSTREAM_ASTER = 0x3011,FID_BITSTREAM_AUGUSTEA_OPEN = 0x3612,FID_BITSTREAM_AUREALIA = 0x3013,FID_BITSTREAM_AVANTE_GARDE = 0x320C,FID_BITSTREAM_AVANTE_GARDE_CONDENSED = 0x323D,FID_BITSTREAM_AVENIR = 0x3206,FID_BITSTREAM_BALLOON = 0x3606,FID_BITSTREAM_BALMORAL = 0x3406,FID_BITSTREAM_BANCO = 0x367D,FID_BITSTREAM_BARBEDOR = 0x3014,FID_BITSTREAM_BARCELONA = 0x3614,FID_BITSTREAM_BASILIA = 0x3015,FID_BITSTREAM_BASKERVILLE = 0x3016,FID_BITSTREAM_BASKERVILLE_HANDCUT = 0x3017,FID_BITSTREAM_BAUER_BODONI = 0x307B,FID_BITSTREAM_BAUHAUS = 0x3613,FID_BITSTREAM_BELSHAW = 0x3615,FID_BITSTREAM_BELWE = 0x307A,FID_BITSTREAM_BEMBO = 0x3005,FID_BITSTREAM_BENGUIAT_GOTHIC = 0x320D,FID_BITSTREAM_BERKELEY_OLD_STYLE = 0x3008,FID_BITSTREAM_BERLINER_GROTESK = 0x320E,FID_BITSTREAM_BERNHARD_ANTIQUE = 0x3616,FID_BITSTREAM_BIBLE_SCRIPT = 0x340A,FID_BITSTREAM_BINNER = 0x3617,FID_BITSTREAM_BLIPPO_C_BLACK = 0x3605,FID_BITSTREAM_BLOCK = 0x3618,FID_BITSTREAM_BODONI = 0x3002,FID_BITSTREAM_BOOKMAN = 0x3018,FID_BITSTREAM_BOTTLENECK = 0x3619,FID_BITSTREAM_BRITANNIC = 0x320F,FID_BITSTREAM_BROADWAY = 0x3600,FID_BITSTREAM_BRODY = 0x340B,FID_BITSTREAM_BRONX = 0x340C,FID_BITSTREAM_BRUSH_SCRIPT = 0x3402,FID_BITSTREAM_BUNDESBAHN_PI_1 = 0x3809,FID_BITSTREAM_BUNDESBAHN_PI_2 = 0x380A,FID_BITSTREAM_BUNDESBAHN_PI_3 = 0x380B,FID_BITSTREAM_BUSTER = 0x361A,FID_BITSTREAM_BUXOM = 0x361B,FID_BITSTREAM_CABARET = 0x361C,FID_BITSTREAM_CAMELLIA = 0x361D,FID_BITSTREAM_CANDICE = 0x340D,FID_BITSTREAM_CANDIDA = 0x3019,FID_BITSTREAM_CAROUSEL = 0x361E,FID_BITSTREAM_CARTA = 0x3804,FID_BITSTREAM_CASCADE_SCRIPT = 0x342D,FID_BITSTREAM_CASLON = 0x301A,FID_BITSTREAM_CASTLE = 0x3210,FID_BITSTREAM_CAXTON = 0x301C,FID_BITSTREAM_CENTENNIAL = 0x301D,FID_BITSTREAM_CENTURY = 0x301E,FID_BITSTREAM_CENTURY_OLD_STYLE = 0x301F,FID_BITSTREAM_CENTURY_SCHOOLBOOK = 0x3001,FID_BITSTREAM_CHARLEMAGNE = 0x3079,FID_BITSTREAM_CHARME = 0x342E,FID_BITSTREAM_CHELMSFORD = 0x3211,FID_BITSTREAM_CHELTENHAM = 0x3020,FID_BITSTREAM_CHEQ = 0x380C,FID_BITSTREAM_CHESTERFIELD = 0x361F,FID_BITSTREAM_CHISEL = 0x3620,FID_BITSTREAM_CHOC = 0x3621,FID_BITSTREAM_CHROMIUM_ONE = 0x3622,FID_BITSTREAM_CHURCHWARD_BRUSH = 0x3623,FID_BITSTREAM_CIRKULUS = 0x3624,FID_BITSTREAM_CITY = 0x3625,FID_BITSTREAM_CLARENDON = 0x3021,FID_BITSTREAM_CLEARFACE = 0x3022,FID_BITSTREAM_CLEARFACE_GOTHIC = 0x3213,FID_BITSTREAM_COCHIN = 0x300D,FID_BITSTREAM_COLUMNA_SOLID = 0x3626,FID_BITSTREAM_COMMERCIAL_SCRIPT = 0x3405,FID_BITSTREAM_COMPACTA = 0x3214,FID_BITSTREAM_COMPANY = 0x3627,FID_BITSTREAM_CONCORDE = 0x3023,FID_BITSTREAM_CONCORDE_NOVA = 0x3024,FID_BITSTREAM_CONFERENCE = 0x3628,FID_BITSTREAM_CONGRESS = 0x3025,FID_BITSTREAM_COOPER_C_BLACK = 0x3604,FID_BITSTREAM_COPPERPLATE = 0x3603,FID_BITSTREAM_CORINTHIAN = 0x3215,FID_BITSTREAM_CORONA = 0x3026,FID_BITSTREAM_CORTEZ = 0x3629,FID_BITSTREAM_COTTONWOOD = 0x367E,FID_BITSTREAM_COUNTDOWN = 0x362A,FID_BITSTREAM_CRILLEE = 0x362B,FID_BITSTREAM_CROISSANT = 0x362C,FID_BITSTREAM_CUSHING = 0x3027,FID_BITSTREAM_DATA_70 = 0x3608,FID_BITSTREAM_DAVIDA = 0x362D,FID_BITSTREAM_DEMIAN = 0x340E,FID_BITSTREAM_DEMOS = 0x3028,FID_BITSTREAM_DIGI_ANTIQUA = 0x3029,FID_BITSTREAM_DIGI_GROTESK = 0x3216,FID_BITSTREAM_DINGBATS = 0x3801,FID_BITSTREAM_DOM_CASUAL = 0x362E,FID_BITSTREAM_DORIC_BOLD = 0x323A,FID_BITSTREAM_DYNAMO = 0x362F,FID_BITSTREAM_ECKMANN = 0x3630,FID_BITSTREAM_EDISON = 0x302A,FID_BITSTREAM_EDWARDIAN = 0x302B,FID_BITSTREAM_EGIZIO = 0x302C,FID_BITSTREAM_EGYPTIENNE = 0x302D,FID_BITSTREAM_EINHORN = 0x3631,FID_BITSTREAM_ELAN = 0x302E,FID_BITSTREAM_ENGLISCHE_SCHREIBSCHRIFT = 0x340F,FID_BITSTREAM_ENVIRO = 0x3632,FID_BITSTREAM_ERAS = 0x3217,FID_BITSTREAM_ESPRIT = 0x302F,FID_BITSTREAM_EUROSTILE = 0x3202,FID_BITSTREAM_EXCELSIOR = 0x3030,FID_BITSTREAM_FENICE = 0x3031,FID_BITSTREAM_FETTE_ENGSCHRIFT = 0x3218,FID_BITSTREAM_FETTE_FRAKTUR = 0x3633,FID_BITSTREAM_FETTE_GOTILCH = 0x3634,FID_BITSTREAM_FETTE_MIDSCHRIFT = 0x3219,FID_BITSTREAM_FLAMENCO = 0x3635,FID_BITSTREAM_FLANGE = 0x3637,FID_BITSTREAM_FLASH = 0x3636,FID_BITSTREAM_FLORA = 0x3638,FID_BITSTREAM_FLYER = 0x321A,FID_BITSTREAM_FOLIO = 0x321B,FID_BITSTREAM_FRANKFURTER = 0x3639,FID_BITSTREAM_FRANKLIN_GOTHIC = 0x3204,FID_BITSTREAM_FREESTYLE_SCRIPT = 0x3410,FID_BITSTREAM_FRIZ_QUADRATA = 0x3032,FID_BITSTREAM_FRUTIGER = 0x3201,FID_BITSTREAM_FUN_DINGBATS = 0x380D,FID_BITSTREAM_FUTURA = 0x321C,FID_BITSTREAM_FUTURA_C_BLACK = 0x363A,FID_BITSTREAM_FUTURA_DISPLAY = 0x363B,FID_BITSTREAM_GALADRIEL = 0x363C,FID_BITSTREAM_GALLIARD = 0x3033,FID_BITSTREAM_GALLIARD_ROMAN_ITALIC = 0x307E,FID_BITSTREAM_GAMMA = 0x3034,FID_BITSTREAM_GARAMOND = 0x3004,FID_BITSTREAM_GARTH_GRAPHIC = 0x307C,FID_BITSTREAM_GILL = 0x321D,FID_BITSTREAM_GILLIES_GOTHIC = 0x3411,FID_BITSTREAM_GILL_KAYO = 0x363D,FID_BITSTREAM_GILL_SANS = 0x321E,FID_BITSTREAM_GLASER_STENCIL = 0x363E,FID_BITSTREAM_GLASTONBURY = 0x3412,FID_BITSTREAM_GLYPHA = 0x3003,FID_BITSTREAM_GOTHIC = 0x321F,FID_BITSTREAM_GOUDY = 0x3035,FID_BITSTREAM_GOUDY_HEAVYFACE = 0x3609,FID_BITSTREAM_GOUDY_OLD_STYLE = 0x3009,FID_BITSTREAM_GOUDY_SANS = 0x3220,FID_BITSTREAM_GRANJON = 0x307D,FID_BITSTREAM_GROTESK = 0x3238,FID_BITSTREAM_HAAS_UNICA = 0x3221,FID_BITSTREAM_HADFIELD = 0x363F,FID_BITSTREAM_HARLOW = 0x3413,FID_BITSTREAM_HAWTHORN = 0x3036,FID_BITSTREAM_HELVETICA = 0x3222,FID_BITSTREAM_HELVETICA_INSERAT = 0x3224,FID_BITSTREAM_HIGHLIGHT = 0x3640,FID_BITSTREAM_HILL = 0x341C,FID_BITSTREAM_HIROSHIGE = 0x3037,FID_BITSTREAM_HOBO = 0x360A,FID_BITSTREAM_HOGARTH_SCRIPT = 0x3414,FID_BITSTREAM_HOLLANDER = 0x3038,FID_BITSTREAM_HOLSATIA = 0x3225,FID_BITSTREAM_HORATIO = 0x3641,FID_BITSTREAM_HORNDON = 0x3642,FID_BITSTREAM_ICE_AGE = 0x3644,FID_BITSTREAM_ICONE = 0x3643,FID_BITSTREAM_IMPRESSUM = 0x3039,FID_BITSTREAM_INDUSTRIA = 0x323B,FID_BITSTREAM_INSIGNIA = 0x323C,FID_BITSTREAM_ISADORA = 0x3415,FID_BITSTREAM_ISBELL = 0x3416,FID_BITSTREAM_ITALIA = 0x303A,FID_BITSTREAM_JAMILLE = 0x303B,FID_BITSTREAM_JANSON = 0x303C,FID_BITSTREAM_JENSON_OLD_STYLE = 0x303D,FID_BITSTREAM_JULIA_SCRIPT = 0x3417,FID_BITSTREAM_JUNIPER = 0x367F,FID_BITSTREAM_KABEL = 0x3226,FID_BITSTREAM_KALLIGRAPHIA = 0x3645,FID_BITSTREAM_KANJI_HON_MINCHO = 0x3431,FID_BITSTREAM_KANJI_SQUARE_GOTHIC = 0x323E,FID_BITSTREAM_KAPITELLIA = 0x3646,FID_BITSTREAM_KAUFMANN = 0x3404,FID_BITSTREAM_KNIGHTSBRIDGE = 0x3647,FID_BITSTREAM_KORINNA = 0x303E,FID_BITSTREAM_KUNSTLERSCHREIBSCHRIFT = 0x3418,FID_BITSTREAM_LATIN_WIDE = 0x3648,FID_BITSTREAM_LAZYBONES = 0x3649,FID_BITSTREAM_LCD = 0x3607,FID_BITSTREAM_LEAWOOD = 0x303F,FID_BITSTREAM_LETTER_GOTHIC = 0x3A03,FID_BITSTREAM_LE_GRIFFE = 0x3419,FID_BITSTREAM_LIBERTY = 0x364A,FID_BITSTREAM_LIFE = 0x3040,FID_BITSTREAM_LINDSAY = 0x341A,FID_BITSTREAM_LINOSCRIPT = 0x341B,FID_BITSTREAM_LINOTEXT = 0x364B,FID_BITSTREAM_LITERA = 0x3227,FID_BITSTREAM_LITHOS = 0x342C,FID_BITSTREAM_LUBALIN_GRAPH = 0x3041,FID_BITSTREAM_LUCIDA = 0x3042,FID_BITSTREAM_LUCIDA_SANS = 0x3228,FID_BITSTREAM_MACHINE = 0x364C,FID_BITSTREAM_MADISON = 0x3043,FID_BITSTREAM_MAGNA = 0x3044,FID_BITSTREAM_MAGNUS = 0x3045,FID_BITSTREAM_MARCONI = 0x3046,FID_BITSTREAM_MARIAGE = 0x360C,FID_BITSTREAM_MAXIMA = 0x3229,FID_BITSTREAM_MEDICI_SCRIPT = 0x342F,FID_BITSTREAM_MELIOR = 0x3047,FID_BITSTREAM_MEMPHIS = 0x3048,FID_BITSTREAM_MERIDIEN = 0x3049,FID_BITSTREAM_MESSIDOR = 0x304A,FID_BITSTREAM_MICR = 0x3803,FID_BITSTREAM_MICROGRAMMA = 0x364D,FID_BITSTREAM_MINISTER = 0x304B,FID_BITSTREAM_MISTRAL = 0x3407,FID_BITSTREAM_MIXAGE = 0x322A,FID_BITSTREAM_MODERN = 0x304C,FID_BITSTREAM_MODERN_NO_216 = 0x304D,FID_BITSTREAM_MOTTER_FEMINA = 0x364E,FID_BITSTREAM_NAPOLEAN = 0x304E,FID_BITSTREAM_NEUE_HELVETICA = 0x3223,FID_BITSTREAM_NEUZEIT_GROTESK = 0x322B,FID_BITSTREAM_NEVISON_CASUAL = 0x341D,FID_BITSTREAM_NEWS_GOTHIC = 0x322C,FID_BITSTREAM_NEWTEXT = 0x322D,FID_BITSTREAM_NEW_ASTER = 0x3012,FID_BITSTREAM_NICOLAS_COCHIN = 0x300E,FID_BITSTREAM_NIKIS = 0x304F,FID_BITSTREAM_NIMROD = 0x3050,FID_BITSTREAM_NOVARESE = 0x3051,FID_BITSTREAM_NUPITAL_SCRIPT = 0x3430,FID_BITSTREAM_OCR_A = 0x322E,FID_BITSTREAM_OCR_B = 0x322F,FID_BITSTREAM_OCTOPUSS = 0x364F,FID_BITSTREAM_ODIN = 0x3650,FID_BITSTREAM_OKAY = 0x3651,FID_BITSTREAM_OLD_ENGLISH = 0x3601,FID_BITSTREAM_OLD_TOWN = 0x360B,FID_BITSTREAM_OPTIMA = 0x3212,FID_BITSTREAM_PACELLA = 0x3052,FID_BITSTREAM_PADDINGTION = 0x3652,FID_BITSTREAM_PALACE_SCRIPT = 0x341E,FID_BITSTREAM_PALATINO = 0x300A,FID_BITSTREAM_PALETTE = 0x341F,FID_BITSTREAM_PANACHE = 0x3230,FID_BITSTREAM_PAPYRUS = 0x3653,FID_BITSTREAM_PARK_AVENUE = 0x3403,FID_BITSTREAM_PEIGNOT = 0x3654,FID_BITSTREAM_PENDRY_SCRIPT = 0x3420,FID_BITSTREAM_PEPITA = 0x3421,FID_BITSTREAM_PERPETUA = 0x3053,FID_BITSTREAM_PHYLLIS = 0x3422,FID_BITSTREAM_PHYLLIS_INITIALS = 0x3423,FID_BITSTREAM_PICCADILLY = 0x3655,FID_BITSTREAM_PLANTIN = 0x3054,FID_BITSTREAM_PLAYBILL = 0x3656,FID_BITSTREAM_PLAZA = 0x3657,FID_BITSTREAM_POST_ANTIQUA = 0x3658,FID_BITSTREAM_PRAXIS = 0x3231,FID_BITSTREAM_PREMIER = 0x3659,FID_BITSTREAM_PRESENT_SCRIPT = 0x3424,FID_BITSTREAM_PRESIDENT = 0x365A,FID_BITSTREAM_PRESTIGE_ELITE = 0x3A02,FID_BITSTREAM_PRIMUS = 0x3232,FID_BITSTREAM_PRIMUS_ANTIQUA = 0x3233,FID_BITSTREAM_PRINCETOWN = 0x365B,FID_BITSTREAM_PROTEUS = 0x3055,FID_BITSTREAM_PRO_ARTE = 0x365C,FID_BITSTREAM_PUMP = 0x360D,FID_BITSTREAM_QUENTIN = 0x365D,FID_BITSTREAM_QUORUM = 0x3056,FID_BITSTREAM_RAGE = 0x3425,FID_BITSTREAM_RALEIGH = 0x3057,FID_BITSTREAM_RENAULT = 0x3058,FID_BITSTREAM_REVUE = 0x365E,FID_BITSTREAM_RIALTO = 0x365F,FID_BITSTREAM_ROCKWELL = 0x3059,FID_BITSTREAM_ROMANA = 0x305A,FID_BITSTREAM_ROMAN_SCRIPT = 0x3426,FID_BITSTREAM_ROMIC = 0x3660,FID_BITSTREAM_RUBBER_STAMP = 0x3661,FID_BITSTREAM_SABON = 0x305B,FID_BITSTREAM_SABON_ANTIQUA = 0x305C,FID_BITSTREAM_SERIFA = 0x305D,FID_BITSTREAM_SERIF_GOTHIC = 0x3234,FID_BITSTREAM_SERPENTINE = 0x3662,FID_BITSTREAM_SHAMROCK = 0x3427,FID_BITSTREAM_SHELLEY = 0x3663,FID_BITSTREAM_SINALOA = 0x3664,FID_BITSTREAM_SLIMBACH = 0x305E,FID_BITSTREAM_SLIPSTREAM = 0x3665,FID_BITSTREAM_SLOGAN = 0x3428,FID_BITSTREAM_SONATA = 0x3805,FID_BITSTREAM_SOUVENIR = 0x305F,FID_BITSTREAM_SPRINGFIELD = 0x3666,FID_BITSTREAM_SQUIRE = 0x3667,FID_BITSTREAM_STEMPEL_SCHNEIDLER = 0x3060,FID_BITSTREAM_STENCIL = 0x3602,FID_BITSTREAM_STENTOR = 0x3668,FID_BITSTREAM_STILLA = 0x3669,FID_BITSTREAM_STILLA_CAPS = 0x366A,FID_BITSTREAM_STONE_INFORMAL = 0x3061,FID_BITSTREAM_STONE_SANS = 0x3235,FID_BITSTREAM_STONE_SERIF = 0x3062,FID_BITSTREAM_STOP = 0x366B,FID_BITSTREAM_STRATFORD = 0x3063,FID_BITSTREAM_STYMIE = 0x3064,FID_BITSTREAM_SUPERSTAR = 0x366C,FID_BITSTREAM_SWIFT = 0x3065,FID_BITSTREAM_SYNCHRO = 0x366D,FID_BITSTREAM_SYNTAX = 0x3236,FID_BITSTREAM_TANGO = 0x366E,FID_BITSTREAM_TARRAGON = 0x366F,FID_BITSTREAM_TEKTON = 0x342B,FID_BITSTREAM_TEMPO = 0x3237,FID_BITSTREAM_THOROWGOOD = 0x3670,FID_BITSTREAM_THUNDERBIRD = 0x3671,FID_BITSTREAM_TIEPOLO = 0x3066,FID_BITSTREAM_TIFFANY = 0x3067,FID_BITSTREAM_TIMELESS = 0x3068,FID_BITSTREAM_TIMES_NEW_ROMAN = 0x3069,FID_BITSTREAM_TIME_SCRIPT = 0x3672,FID_BITSTREAM_TITUS = 0x3673,FID_BITSTREAM_TRAJAN = 0x3078,FID_BITSTREAM_TRAJANUS = 0x3674,FID_BITSTREAM_ULTE_SCHWABACHER = 0x3610,FID_BITSTREAM_UNIVERS = 0x3205,FID_BITSTREAM_UNIVERSITY_ROMAN = 0x3006,FID_BITSTREAM_URW_ANTIQUA = 0x306A,FID_BITSTREAM_URW_MONO = 0x3A00,FID_BITSTREAM_URW_ROMAN = 0x3000,FID_BITSTREAM_URW_SANS = 0x3200,FID_BITSTREAM_URW_SYMBOLPS = 0x3800,FID_BITSTREAM_USHERWOOD = 0x306B,FID_BITSTREAM_U_GREEK_MATH_PI = 0x3808,FID_BITSTREAM_U_NEWS_COMM_PI = 0x3807,FID_BITSTREAM_VAG_RUNDSCHRIFT = 0x3675,FID_BITSTREAM_VAN_DIJK = 0x3429,FID_BITSTREAM_VARIO = 0x3676,FID_BITSTREAM_VEGAS = 0x3677,FID_BITSTREAM_VELJOVIC = 0x306D,FID_BITSTREAM_VENDOME = 0x306E,FID_BITSTREAM_VICTORIAN = 0x3678,FID_BITSTREAM_VIVALDI = 0x3401,FID_BITSTREAM_VLADIMIR_SCRIPT = 0x342A,FID_BITSTREAM_VOLTA = 0x306F,FID_BITSTREAM_WALBAUM = 0x3070,FID_BITSTREAM_WASHINGTON = 0x3679,FID_BITSTREAM_WEIDEMANN = 0x3071,FID_BITSTREAM_WEIFZ_RUNDGOTIFCH = 0x367A,FID_BITSTREAM_WEISS = 0x3072,FID_BITSTREAM_WINDSOR = 0x3073,FID_BITSTREAM_WORCESTER_ROUND = 0x3074,FID_BITSTREAM_ZAPF_BOOK = 0x3075,FID_BITSTREAM_ZAPF_CHANCERY = 0x3400,FID_BITSTREAM_ZAPF_DINGBATS = 0x3802,FID_BITSTREAM_ZAPF_INTERNATIONAL = 0x3076,FID_BITSTREAM_ZIPPER = 0x367B,};
enum MACRO_FID_DTC {FID_DTC_AACHEN = 0x100F,FID_DTC_ACCOLADE = 0x100B,FID_DTC_ACE_I = 0x1806,FID_DTC_ADOBE_CASLON = 0x101B,FID_DTC_ADOBE_GARAMOND = 0x1077,FID_DTC_ADOBE_UTOPIA = 0x106C,FID_DTC_AKZIDENZ_GROTESK = 0x1207,FID_DTC_AKZIDENZ_GROTESK_BUCH = 0x1208,FID_DTC_AKZINDENZ_GROTESK = 0x1239,FID_DTC_ALBERTUS = 0x100C,FID_DTC_ALGERIAN = 0x160E,FID_DTC_ALTERNATE_GOTHIC = 0x1209,FID_DTC_AMERICANA = 0x1010,FID_DTC_AMERICAN_TYPEWRITER = 0x1A01,FID_DTC_AMERICAN_UNCIAL = 0x1611,FID_DTC_ANGLIA = 0x1408,FID_DTC_ANGRO = 0x1203,FID_DTC_ANGSANA_NEW = 0x107F,FID_DTC_ANTIQUE_OLIVE = 0x120A,FID_DTC_ANZEIGEN_GROTESK = 0x120B,FID_DTC_ARCADIA = 0x167C,FID_DTC_ARISTON = 0x1409,FID_DTC_ARNOLD_BOCKLIN = 0x160F,FID_DTC_ARSIS = 0x1007,FID_DTC_ASTER = 0x1011,FID_DTC_AUGUSTEA_OPEN = 0x1612,FID_DTC_AUREALIA = 0x1013,FID_DTC_AVANTE_GARDE = 0x120C,FID_DTC_AVANTE_GARDE_CONDENSED = 0x123D,FID_DTC_AVENIR = 0x1206,FID_DTC_BALLOON = 0x1606,FID_DTC_BALMORAL = 0x1406,FID_DTC_BANCO = 0x167D,FID_DTC_BARBEDOR = 0x1014,FID_DTC_BARCELONA = 0x1614,FID_DTC_BASILIA = 0x1015,FID_DTC_BASKERVILLE = 0x1016,FID_DTC_BASKERVILLE_HANDCUT = 0x1017,FID_DTC_BAUER_BODONI = 0x107B,FID_DTC_BAUHAUS = 0x1613,FID_DTC_BELSHAW = 0x1615,FID_DTC_BELWE = 0x107A,FID_DTC_BEMBO = 0x1005,FID_DTC_BENGUIAT_GOTHIC = 0x120D,FID_DTC_BERKELEY_OLD_STYLE = 0x1008,FID_DTC_BERLINER_GROTESK = 0x120E,FID_DTC_BERNHARD_ANTIQUE = 0x1616,FID_DTC_BIBLE_SCRIPT = 0x140A,FID_DTC_BINNER = 0x1617,FID_DTC_BLIPPO_C_BLACK = 0x1605,FID_DTC_BLOCK = 0x1618,FID_DTC_BODONI = 0x1002,FID_DTC_BOOKMAN = 0x1018,FID_DTC_BOTTLENECK = 0x1619,FID_DTC_BRITANNIC = 0x120F,FID_DTC_BROADWAY = 0x1600,FID_DTC_BRODY = 0x140B,FID_DTC_BRONX = 0x140C,FID_DTC_BRUSH_SCRIPT = 0x1402,FID_DTC_BUNDESBAHN_PI_1 = 0x1809,FID_DTC_BUNDESBAHN_PI_2 = 0x180A,FID_DTC_BUNDESBAHN_PI_3 = 0x180B,FID_DTC_BUSTER = 0x161A,FID_DTC_BUXOM = 0x161B,FID_DTC_CABARET = 0x161C,FID_DTC_CAMELLIA = 0x161D,FID_DTC_CANDICE = 0x140D,FID_DTC_CANDIDA = 0x1019,FID_DTC_CAROUSEL = 0x161E,FID_DTC_CARTA = 0x1804,FID_DTC_CASCADE_SCRIPT = 0x142D,FID_DTC_CASLON = 0x101A,FID_DTC_CASTLE = 0x1210,FID_DTC_CAXTON = 0x101C,FID_DTC_CENTENNIAL = 0x101D,FID_DTC_CENTURY = 0x101E,FID_DTC_CENTURY_OLD_STYLE = 0x101F,FID_DTC_CENTURY_SCHOOLBOOK = 0x1001,FID_DTC_CHARLEMAGNE = 0x1079,FID_DTC_CHARME = 0x142E,FID_DTC_CHELMSFORD = 0x1211,FID_DTC_CHELTENHAM = 0x1020,FID_DTC_CHEQ = 0x180C,FID_DTC_CHESTERFIELD = 0x161F,FID_DTC_CHISEL = 0x1620,FID_DTC_CHOC = 0x1621,FID_DTC_CHROMIUM_ONE = 0x1622,FID_DTC_CHURCHWARD_BRUSH = 0x1623,FID_DTC_CIRKULUS = 0x1624,FID_DTC_CITY = 0x1625,FID_DTC_CLARENDON = 0x1021,FID_DTC_CLEARFACE = 0x1022,FID_DTC_CLEARFACE_GOTHIC = 0x1213,FID_DTC_COCHIN = 0x100D,FID_DTC_COLUMNA_SOLID = 0x1626,FID_DTC_COMMERCIAL_SCRIPT = 0x1405,FID_DTC_COMPACTA = 0x1214,FID_DTC_COMPANY = 0x1627,FID_DTC_CONCORDE = 0x1023,FID_DTC_CONCORDE_NOVA = 0x1024,FID_DTC_CONFERENCE = 0x1628,FID_DTC_CONGRESS = 0x1025,FID_DTC_COOPER_C_BLACK = 0x1604,FID_DTC_COPPERPLATE = 0x1603,FID_DTC_CORINTHIAN = 0x1215,FID_DTC_CORONA = 0x1026,FID_DTC_CORTEZ = 0x1629,FID_DTC_COTTONWOOD = 0x167E,FID_DTC_COUNTDOWN = 0x162A,FID_DTC_CRILLEE = 0x162B,FID_DTC_CROISSANT = 0x162C,FID_DTC_CUSHING = 0x1027,FID_DTC_DATA_70 = 0x1608,FID_DTC_DAVIDA = 0x162D,FID_DTC_DEMIAN = 0x140E,FID_DTC_DEMOS = 0x1028,FID_DTC_DIGI_ANTIQUA = 0x1029,FID_DTC_DIGI_GROTESK = 0x1216,FID_DTC_DINGBATS = 0x1801,FID_DTC_DOM_CASUAL = 0x162E,FID_DTC_DORIC_BOLD = 0x123A,FID_DTC_DYNAMO = 0x162F,FID_DTC_ECKMANN = 0x1630,FID_DTC_EDISON = 0x102A,FID_DTC_EDWARDIAN = 0x102B,FID_DTC_EGIZIO = 0x102C,FID_DTC_EGYPTIENNE = 0x102D,FID_DTC_EINHORN = 0x1631,FID_DTC_ELAN = 0x102E,FID_DTC_ENGLISCHE_SCHREIBSCHRIFT = 0x140F,FID_DTC_ENVIRO = 0x1632,FID_DTC_ERAS = 0x1217,FID_DTC_ESPRIT = 0x102F,FID_DTC_EUROSTILE = 0x1202,FID_DTC_EXCELSIOR = 0x1030,FID_DTC_FENICE = 0x1031,FID_DTC_FETTE_ENGSCHRIFT = 0x1218,FID_DTC_FETTE_FRAKTUR = 0x1633,FID_DTC_FETTE_GOTILCH = 0x1634,FID_DTC_FETTE_MIDSCHRIFT = 0x1219,FID_DTC_FLAMENCO = 0x1635,FID_DTC_FLANGE = 0x1637,FID_DTC_FLASH = 0x1636,FID_DTC_FLORA = 0x1638,FID_DTC_FLYER = 0x121A,FID_DTC_FOLIO = 0x121B,FID_DTC_FRANKFURTER = 0x1639,FID_DTC_FRANKLIN_GOTHIC = 0x1204,FID_DTC_FREESTYLE_SCRIPT = 0x1410,FID_DTC_FRIZ_QUADRATA = 0x1032,FID_DTC_FRUTIGER = 0x1201,FID_DTC_FUN_DINGBATS = 0x180D,FID_DTC_FUTURA = 0x121C,FID_DTC_FUTURA_C_BLACK = 0x163A,FID_DTC_FUTURA_DISPLAY = 0x163B,FID_DTC_GALADRIEL = 0x163C,FID_DTC_GALLIARD = 0x1033,FID_DTC_GALLIARD_ROMAN_ITALIC = 0x107E,FID_DTC_GAMMA = 0x1034,FID_DTC_GARAMOND = 0x1004,FID_DTC_GARTH_GRAPHIC = 0x107C,FID_DTC_GILL = 0x121D,FID_DTC_GILLIES_GOTHIC = 0x1411,FID_DTC_GILL_KAYO = 0x163D,FID_DTC_GILL_SANS = 0x121E,FID_DTC_GLASER_STENCIL = 0x163E,FID_DTC_GLASTONBURY = 0x1412,FID_DTC_GLYPHA = 0x1003,FID_DTC_GOTHIC = 0x121F,FID_DTC_GOUDY = 0x1035,FID_DTC_GOUDY_HEAVYFACE = 0x1609,FID_DTC_GOUDY_OLD_STYLE = 0x1009,FID_DTC_GOUDY_SANS = 0x1220,FID_DTC_GRANJON = 0x107D,FID_DTC_GROTESK = 0x1238,FID_DTC_HAAS_UNICA = 0x1221,FID_DTC_HADFIELD = 0x163F,FID_DTC_HARLOW = 0x1413,FID_DTC_HAWTHORN = 0x1036,FID_DTC_HELVETICA = 0x1222,FID_DTC_HELVETICA_INSERAT = 0x1224,FID_DTC_HIGHLIGHT = 0x1640,FID_DTC_HILL = 0x141C,FID_DTC_HIROSHIGE = 0x1037,FID_DTC_HOBO = 0x160A,FID_DTC_HOGARTH_SCRIPT = 0x1414,FID_DTC_HOLLANDER = 0x1038,FID_DTC_HOLSATIA = 0x1225,FID_DTC_HORATIO = 0x1641,FID_DTC_HORNDON = 0x1642,FID_DTC_ICE_AGE = 0x1644,FID_DTC_ICONE = 0x1643,FID_DTC_IMPRESSUM = 0x1039,FID_DTC_INDUSTRIA = 0x123B,FID_DTC_INSIGNIA = 0x123C,FID_DTC_ISADORA = 0x1415,FID_DTC_ISBELL = 0x1416,FID_DTC_ITALIA = 0x103A,FID_DTC_JAMILLE = 0x103B,FID_DTC_JANSON = 0x103C,FID_DTC_JENSON_OLD_STYLE = 0x103D,FID_DTC_JULIA_SCRIPT = 0x1417,FID_DTC_JUNIPER = 0x167F,FID_DTC_KABEL = 0x1226,FID_DTC_KALLIGRAPHIA = 0x1645,FID_DTC_KANJI_HON_MINCHO = 0x1431,FID_DTC_KANJI_SQUARE_GOTHIC = 0x123E,FID_DTC_KAPITELLIA = 0x1646,FID_DTC_KAUFMANN = 0x1404,FID_DTC_KNIGHTSBRIDGE = 0x1647,FID_DTC_KORINNA = 0x103E,FID_DTC_KUNSTLERSCHREIBSCHRIFT = 0x1418,FID_DTC_LATIN_WIDE = 0x1648,FID_DTC_LAZYBONES = 0x1649,FID_DTC_LCD = 0x1607,FID_DTC_LEAWOOD = 0x103F,FID_DTC_LETTER_GOTHIC = 0x1A03,FID_DTC_LE_GRIFFE = 0x1419,FID_DTC_LIBERTY = 0x164A,FID_DTC_LIFE = 0x1040,FID_DTC_LINDSAY = 0x141A,FID_DTC_LINOSCRIPT = 0x141B,FID_DTC_LINOTEXT = 0x164B,FID_DTC_LITERA = 0x1227,FID_DTC_LITHOS = 0x142C,FID_DTC_LUBALIN_GRAPH = 0x1041,FID_DTC_LUCIDA = 0x1042,FID_DTC_LUCIDA_SANS = 0x1228,FID_DTC_MACHINE = 0x164C,FID_DTC_MADISON = 0x1043,FID_DTC_MAGNA = 0x1044,FID_DTC_MAGNUS = 0x1045,FID_DTC_MARCONI = 0x1046,FID_DTC_MARIAGE = 0x160C,FID_DTC_MAXIMA = 0x1229,FID_DTC_MEDICI_SCRIPT = 0x142F,FID_DTC_MELIOR = 0x1047,FID_DTC_MEMPHIS = 0x1048,FID_DTC_MERIDIEN = 0x1049,FID_DTC_MESSIDOR = 0x104A,FID_DTC_MICR = 0x1803,FID_DTC_MICROGRAMMA = 0x164D,FID_DTC_MINISTER = 0x104B,FID_DTC_MISTRAL = 0x1407,FID_DTC_MIXAGE = 0x122A,FID_DTC_MODERN = 0x104C,FID_DTC_MODERN_NO_216 = 0x104D,FID_DTC_MOTTER_FEMINA = 0x164E,FID_DTC_NAPOLEAN = 0x104E,FID_DTC_NEUE_HELVETICA = 0x1223,FID_DTC_NEUZEIT_GROTESK = 0x122B,FID_DTC_NEVISON_CASUAL = 0x141D,FID_DTC_NEWS_GOTHIC = 0x122C,FID_DTC_NEWTEXT = 0x122D,FID_DTC_NEW_ASTER = 0x1012,FID_DTC_NICOLAS_COCHIN = 0x100E,FID_DTC_NIKIS = 0x104F,FID_DTC_NIMROD = 0x1050,FID_DTC_NOVARESE = 0x1051,FID_DTC_NUPITAL_SCRIPT = 0x1430,FID_DTC_OCR_A = 0x122E,FID_DTC_OCR_B = 0x122F,FID_DTC_OCTOPUSS = 0x164F,FID_DTC_ODIN = 0x1650,FID_DTC_OKAY = 0x1651,FID_DTC_OLD_ENGLISH = 0x1601,FID_DTC_OLD_TOWN = 0x160B,FID_DTC_OPTIMA = 0x1212,FID_DTC_PACELLA = 0x1052,FID_DTC_PADDINGTION = 0x1652,FID_DTC_PALACE_SCRIPT = 0x141E,FID_DTC_PALATINO = 0x100A,FID_DTC_PALETTE = 0x141F,FID_DTC_PANACHE = 0x1230,FID_DTC_PAPYRUS = 0x1653,FID_DTC_PARK_AVENUE = 0x1403,FID_DTC_PEIGNOT = 0x1654,FID_DTC_PENDRY_SCRIPT = 0x1420,FID_DTC_PEPITA = 0x1421,FID_DTC_PERPETUA = 0x1053,FID_DTC_PHYLLIS = 0x1422,FID_DTC_PHYLLIS_INITIALS = 0x1423,FID_DTC_PICCADILLY = 0x1655,FID_DTC_PLANTIN = 0x1054,FID_DTC_PLAYBILL = 0x1656,FID_DTC_PLAZA = 0x1657,FID_DTC_POST_ANTIQUA = 0x1658,FID_DTC_PRAXIS = 0x1231,FID_DTC_PREMIER = 0x1659,FID_DTC_PRESENT_SCRIPT = 0x1424,FID_DTC_PRESIDENT = 0x165A,FID_DTC_PRESTIGE_ELITE = 0x1A02,FID_DTC_PRIMUS = 0x1232,FID_DTC_PRIMUS_ANTIQUA = 0x1233,FID_DTC_PRINCETOWN = 0x165B,FID_DTC_PROTEUS = 0x1055,FID_DTC_PRO_ARTE = 0x165C,FID_DTC_PUMP = 0x160D,FID_DTC_QUENTIN = 0x165D,FID_DTC_QUORUM = 0x1056,FID_DTC_RAGE = 0x1425,FID_DTC_RALEIGH = 0x1057,FID_DTC_RENAULT = 0x1058,FID_DTC_REVUE = 0x165E,FID_DTC_RIALTO = 0x165F,FID_DTC_ROCKWELL = 0x1059,FID_DTC_ROMANA = 0x105A,FID_DTC_ROMAN_SCRIPT = 0x1426,FID_DTC_ROMIC = 0x1660,FID_DTC_RUBBER_STAMP = 0x1661,FID_DTC_SABON = 0x105B,FID_DTC_SABON_ANTIQUA = 0x105C,FID_DTC_SERIFA = 0x105D,FID_DTC_SERIF_GOTHIC = 0x1234,FID_DTC_SERPENTINE = 0x1662,FID_DTC_SHAMROCK = 0x1427,FID_DTC_SHELLEY = 0x1663,FID_DTC_SINALOA = 0x1664,FID_DTC_SLIMBACH = 0x105E,FID_DTC_SLIPSTREAM = 0x1665,FID_DTC_SLOGAN = 0x1428,FID_DTC_SONATA = 0x1805,FID_DTC_SOUVENIR = 0x105F,FID_DTC_SPRINGFIELD = 0x1666,FID_DTC_SQUIRE = 0x1667,FID_DTC_STEMPEL_SCHNEIDLER = 0x1060,FID_DTC_STENCIL = 0x1602,FID_DTC_STENTOR = 0x1668,FID_DTC_STILLA = 0x1669,FID_DTC_STILLA_CAPS = 0x166A,FID_DTC_STONE_INFORMAL = 0x1061,FID_DTC_STONE_SANS = 0x1235,FID_DTC_STONE_SERIF = 0x1062,FID_DTC_STOP = 0x166B,FID_DTC_STRATFORD = 0x1063,FID_DTC_STYMIE = 0x1064,FID_DTC_SUPERSTAR = 0x166C,FID_DTC_SWIFT = 0x1065,FID_DTC_SYNCHRO = 0x166D,FID_DTC_SYNTAX = 0x1236,FID_DTC_TANGO = 0x166E,FID_DTC_TARRAGON = 0x166F,FID_DTC_TEKTON = 0x142B,FID_DTC_TEMPO = 0x1237,FID_DTC_THOROWGOOD = 0x1670,FID_DTC_THUNDERBIRD = 0x1671,FID_DTC_TIEPOLO = 0x1066,FID_DTC_TIFFANY = 0x1067,FID_DTC_TIMELESS = 0x1068,FID_DTC_TIMES_NEW_ROMAN = 0x1069,FID_DTC_TIME_SCRIPT = 0x1672,FID_DTC_TITUS = 0x1673,FID_DTC_TRAJAN = 0x1078,FID_DTC_TRAJANUS = 0x1674,FID_DTC_ULTE_SCHWABACHER = 0x1610,FID_DTC_UNIVERS = 0x1205,FID_DTC_UNIVERSITY_ROMAN = 0x1006,FID_DTC_URW_ANTIQUA = 0x106A,FID_DTC_URW_MONO = 0x1A00,FID_DTC_URW_ROMAN = 0x1000,FID_DTC_URW_SANS = 0x1200,FID_DTC_URW_SYMBOLPS = 0x1800,FID_DTC_USHERWOOD = 0x106B,FID_DTC_U_GREEK_MATH_PI = 0x1808,FID_DTC_U_NEWS_COMM_PI = 0x1807,FID_DTC_VAG_RUNDSCHRIFT = 0x1675,FID_DTC_VAN_DIJK = 0x1429,FID_DTC_VARIO = 0x1676,FID_DTC_VEGAS = 0x1677,FID_DTC_VELJOVIC = 0x106D,FID_DTC_VENDOME = 0x106E,FID_DTC_VICTORIAN = 0x1678,FID_DTC_VIVALDI = 0x1401,FID_DTC_VLADIMIR_SCRIPT = 0x142A,FID_DTC_VOLTA = 0x106F,FID_DTC_WALBAUM = 0x1070,FID_DTC_WASHINGTON = 0x1679,FID_DTC_WEIDEMANN = 0x1071,FID_DTC_WEIFZ_RUNDGOTIFCH = 0x167A,FID_DTC_WEISS = 0x1072,FID_DTC_WINDSOR = 0x1073,FID_DTC_WORCESTER_ROUND = 0x1074,FID_DTC_ZAPF_BOOK = 0x1075,FID_DTC_ZAPF_CHANCERY = 0x1400,FID_DTC_ZAPF_DINGBATS = 0x1802,FID_DTC_ZAPF_INTERNATIONAL = 0x1076,FID_DTC_ZIPPER = 0x167B,};
enum MACRO_FID_PRINTER {FID_PRINTER_24CPI = 0xFA06,FID_PRINTER_20CPI = 0xFA05,FID_PRINTER_17CPI = 0xFA04,FID_PRINTER_16CPI = 0xFA03,FID_PRINTER_15CPI = 0xFA02,FID_PRINTER_12CPI = 0xFA01,FID_PRINTER_10CPI = 0xFA00,FID_PRINTER_PROP_SANS = 0xF200,FID_PRINTER_PROP_SERIF = 0xF000,};
enum MACRO_FID_PS {FID_PS_AACHEN = 0x200F,FID_PS_ACCOLADE = 0x200B,FID_PS_ACE_I = 0x2806,FID_PS_ADOBE_CASLON = 0x201B,FID_PS_ADOBE_GARAMOND = 0x2077,FID_PS_ADOBE_UTOPIA = 0x206C,FID_PS_AKZIDENZ_GROTESK = 0x2207,FID_PS_AKZIDENZ_GROTESK_BUCH = 0x2208,FID_PS_AKZINDENZ_GROTESK = 0x2239,FID_PS_ALBERTUS = 0x200C,FID_PS_ALGERIAN = 0x260E,FID_PS_ALTERNATE_GOTHIC = 0x2209,FID_PS_AMERICANA = 0x2010,FID_PS_AMERICAN_TYPEWRITER = 0x2A01,FID_PS_AMERICAN_UNCIAL = 0x2611,FID_PS_ANGLIA = 0x2408,FID_PS_ANGRO = 0x2203,FID_PS_ANGSANA_NEW = 0x207F,FID_PS_ANTIQUE_OLIVE = 0x220A,FID_PS_ANZEIGEN_GROTESK = 0x220B,FID_PS_ARCADIA = 0x267C,FID_PS_ARISTON = 0x2409,FID_PS_ARNOLD_BOCKLIN = 0x260F,FID_PS_ARSIS = 0x2007,FID_PS_ASTER = 0x2011,FID_PS_AUGUSTEA_OPEN = 0x2612,FID_PS_AUREALIA = 0x2013,FID_PS_AVANTE_GARDE = 0x220C,FID_PS_AVANTE_GARDE_CONDENSED = 0x223D,FID_PS_AVENIR = 0x2206,FID_PS_BALLOON = 0x2606,FID_PS_BALMORAL = 0x2406,FID_PS_BANCO = 0x267D,FID_PS_BARBEDOR = 0x2014,FID_PS_BARCELONA = 0x2614,FID_PS_BASILIA = 0x2015,FID_PS_BASKERVILLE = 0x2016,FID_PS_BASKERVILLE_HANDCUT = 0x2017,FID_PS_BAUER_BODONI = 0x207B,FID_PS_BAUHAUS = 0x2613,FID_PS_BELSHAW = 0x2615,FID_PS_BELWE = 0x207A,FID_PS_BEMBO = 0x2005,FID_PS_BENGUIAT_GOTHIC = 0x220D,FID_PS_BERKELEY_OLD_STYLE = 0x2008,FID_PS_BERLINER_GROTESK = 0x220E,FID_PS_BERNHARD_ANTIQUE = 0x2616,FID_PS_BIBLE_SCRIPT = 0x240A,FID_PS_BINNER = 0x2617,FID_PS_BLIPPO_C_BLACK = 0x2605,FID_PS_BLOCK = 0x2618,FID_PS_BODONI = 0x2002,FID_PS_BOOKMAN = 0x2018,FID_PS_BOTTLENECK = 0x2619,FID_PS_BRITANNIC = 0x220F,FID_PS_BROADWAY = 0x2600,FID_PS_BRODY = 0x240B,FID_PS_BRONX = 0x240C,FID_PS_BRUSH_SCRIPT = 0x2402,FID_PS_BUNDESBAHN_PI_1 = 0x2809,FID_PS_BUNDESBAHN_PI_2 = 0x280A,FID_PS_BUNDESBAHN_PI_3 = 0x280B,FID_PS_BUSTER = 0x261A,FID_PS_BUXOM = 0x261B,FID_PS_CABARET = 0x261C,FID_PS_CAMELLIA = 0x261D,FID_PS_CANDICE = 0x240D,FID_PS_CANDIDA = 0x2019,FID_PS_CAROUSEL = 0x261E,FID_PS_CARTA = 0x2804,FID_PS_CASCADE_SCRIPT = 0x242D,FID_PS_CASLON = 0x201A,FID_PS_CASTLE = 0x2210,FID_PS_CAXTON = 0x201C,FID_PS_CENTENNIAL = 0x201D,FID_PS_CENTURY = 0x201E,FID_PS_CENTURY_OLD_STYLE = 0x201F,FID_PS_CENTURY_SCHOOLBOOK = 0x2001,FID_PS_CHARLEMAGNE = 0x2079,FID_PS_CHARME = 0x242E,FID_PS_CHELMSFORD = 0x2211,FID_PS_CHELTENHAM = 0x2020,FID_PS_CHEQ = 0x280C,FID_PS_CHESTERFIELD = 0x261F,FID_PS_CHISEL = 0x2620,FID_PS_CHOC = 0x2621,FID_PS_CHROMIUM_ONE = 0x2622,FID_PS_CHURCHWARD_BRUSH = 0x2623,FID_PS_CIRKULUS = 0x2624,FID_PS_CITY = 0x2625,FID_PS_CLARENDON = 0x2021,FID_PS_CLEARFACE = 0x2022,FID_PS_CLEARFACE_GOTHIC = 0x2213,FID_PS_COCHIN = 0x200D,FID_PS_COLUMNA_SOLID = 0x2626,FID_PS_COMMERCIAL_SCRIPT = 0x2405,FID_PS_COMPACTA = 0x2214,FID_PS_COMPANY = 0x2627,FID_PS_CONCORDE = 0x2023,FID_PS_CONCORDE_NOVA = 0x2024,FID_PS_CONFERENCE = 0x2628,FID_PS_CONGRESS = 0x2025,FID_PS_COOPER_C_BLACK = 0x2604,FID_PS_COPPERPLATE = 0x2603,FID_PS_CORINTHIAN = 0x2215,FID_PS_CORONA = 0x2026,FID_PS_CORTEZ = 0x2629,FID_PS_COTTONWOOD = 0x267E,FID_PS_COUNTDOWN = 0x262A,FID_PS_COURIER = 0x2A00,FID_PS_CRILLEE = 0x262B,FID_PS_CROISSANT = 0x262C,FID_PS_CUSHING = 0x2027,FID_PS_DATA_70 = 0x2608,FID_PS_DAVIDA = 0x262D,FID_PS_DEMIAN = 0x240E,FID_PS_DEMOS = 0x2028,FID_PS_DIGI_ANTIQUA = 0x2029,FID_PS_DIGI_GROTESK = 0x2216,FID_PS_DINGBATS = 0x2801,FID_PS_DOM_CASUAL = 0x262E,FID_PS_DORIC_BOLD = 0x223A,FID_PS_DYNAMO = 0x262F,FID_PS_ECKMANN = 0x2630,FID_PS_EDISON = 0x202A,FID_PS_EDWARDIAN = 0x202B,FID_PS_EGIZIO = 0x202C,FID_PS_EGYPTIENNE = 0x202D,FID_PS_EINHORN = 0x2631,FID_PS_ELAN = 0x202E,FID_PS_ENGLISCHE_SCHREIBSCHRIFT = 0x240F,FID_PS_ENVIRO = 0x2632,FID_PS_ERAS = 0x2217,FID_PS_ESPRIT = 0x202F,FID_PS_EUROSTILE = 0x2202,FID_PS_EXCELSIOR = 0x2030,FID_PS_FENICE = 0x2031,FID_PS_FETTE_ENGSCHRIFT = 0x2218,FID_PS_FETTE_FRAKTUR = 0x2633,FID_PS_FETTE_GOTILCH = 0x2634,FID_PS_FETTE_MIDSCHRIFT = 0x2219,FID_PS_FLAMENCO = 0x2635,FID_PS_FLANGE = 0x2637,FID_PS_FLASH = 0x2636,FID_PS_FLORA = 0x2638,FID_PS_FLYER = 0x221A,FID_PS_FOLIO = 0x221B,FID_PS_FRANKFURTER = 0x2639,FID_PS_FRANKLIN_GOTHIC = 0x2204,FID_PS_FREESTYLE_SCRIPT = 0x2410,FID_PS_FRIZ_QUADRATA = 0x2032,FID_PS_FRUTIGER = 0x2201,FID_PS_FUN_DINGBATS = 0x280D,FID_PS_FUTURA = 0x221C,FID_PS_FUTURA_C_BLACK = 0x263A,FID_PS_FUTURA_DISPLAY = 0x263B,FID_PS_GALADRIEL = 0x263C,FID_PS_GALLIARD = 0x2033,FID_PS_GALLIARD_ROMAN_ITALIC = 0x207E,FID_PS_GAMMA = 0x2034,FID_PS_GARAMOND = 0x2004,FID_PS_GARTH_GRAPHIC = 0x207C,FID_PS_GILL = 0x221D,FID_PS_GILLIES_GOTHIC = 0x2411,FID_PS_GILL_KAYO = 0x263D,FID_PS_GILL_SANS = 0x221E,FID_PS_GLASER_STENCIL = 0x263E,FID_PS_GLASTONBURY = 0x2412,FID_PS_GLYPHA = 0x2003,FID_PS_GOTHIC = 0x221F,FID_PS_GOUDY = 0x2035,FID_PS_GOUDY_HEAVYFACE = 0x2609,FID_PS_GOUDY_OLD_STYLE = 0x2009,FID_PS_GOUDY_SANS = 0x2220,FID_PS_GRANJON = 0x207D,FID_PS_GROTESK = 0x2238,FID_PS_HAAS_UNICA = 0x2221,FID_PS_HADFIELD = 0x263F,FID_PS_HARLOW = 0x2413,FID_PS_HAWTHORN = 0x2036,FID_PS_HELVETICA = 0x2222,FID_PS_HELVETICA_INSERAT = 0x2224,FID_PS_HIGHLIGHT = 0x2640,FID_PS_HILL = 0x241C,FID_PS_HIROSHIGE = 0x2037,FID_PS_HOBO = 0x260A,FID_PS_HOGARTH_SCRIPT = 0x2414,FID_PS_HOLLANDER = 0x2038,FID_PS_HOLSATIA = 0x2225,FID_PS_HORATIO = 0x2641,FID_PS_HORNDON = 0x2642,FID_PS_ICE_AGE = 0x2644,FID_PS_ICONE = 0x2643,FID_PS_IMPRESSUM = 0x2039,FID_PS_INDUSTRIA = 0x223B,FID_PS_INSIGNIA = 0x223C,FID_PS_ISADORA = 0x2415,FID_PS_ISBELL = 0x2416,FID_PS_ITALIA = 0x203A,FID_PS_JAMILLE = 0x203B,FID_PS_JANSON = 0x203C,FID_PS_JENSON_OLD_STYLE = 0x203D,FID_PS_JULIA_SCRIPT = 0x2417,FID_PS_JUNIPER = 0x267F,FID_PS_KABEL = 0x2226,FID_PS_KALLIGRAPHIA = 0x2645,FID_PS_KANJI_HON_MINCHO = 0x2431,FID_PS_KANJI_SQUARE_GOTHIC = 0x223E,FID_PS_KAPITELLIA = 0x2646,FID_PS_KAUFMANN = 0x2404,FID_PS_KNIGHTSBRIDGE = 0x2647,FID_PS_KORINNA = 0x203E,FID_PS_KUNSTLERSCHREIBSCHRIFT = 0x2418,FID_PS_LATIN_WIDE = 0x2648,FID_PS_LAZYBONES = 0x2649,FID_PS_LCD = 0x2607,FID_PS_LEAWOOD = 0x203F,FID_PS_LETTER_GOTHIC = 0x2A03,FID_PS_LE_GRIFFE = 0x2419,FID_PS_LIBERTY = 0x264A,FID_PS_LIFE = 0x2040,FID_PS_LINDSAY = 0x241A,FID_PS_LINOSCRIPT = 0x241B,FID_PS_LINOTEXT = 0x264B,FID_PS_LITERA = 0x2227,FID_PS_LITHOS = 0x242C,FID_PS_LUBALIN_GRAPH = 0x2041,FID_PS_LUCIDA = 0x2042,FID_PS_LUCIDA_SANS = 0x2228,FID_PS_MACHINE = 0x264C,FID_PS_MADISON = 0x2043,FID_PS_MAGNA = 0x2044,FID_PS_MAGNUS = 0x2045,FID_PS_MARCONI = 0x2046,FID_PS_MARIAGE = 0x260C,FID_PS_MAXIMA = 0x2229,FID_PS_MEDICI_SCRIPT = 0x242F,FID_PS_MELIOR = 0x2047,FID_PS_MEMPHIS = 0x2048,FID_PS_MERIDIEN = 0x2049,FID_PS_MESSIDOR = 0x204A,FID_PS_MICR = 0x2803,FID_PS_MICROGRAMMA = 0x264D,FID_PS_MINISTER = 0x204B,FID_PS_MISTRAL = 0x2407,FID_PS_MIXAGE = 0x222A,FID_PS_MODERN = 0x204C,FID_PS_MODERN_NO_216 = 0x204D,FID_PS_MOTTER_FEMINA = 0x264E,FID_PS_NAPOLEAN = 0x204E,FID_PS_NEUE_HELVETICA = 0x2223,FID_PS_NEUZEIT_GROTESK = 0x222B,FID_PS_NEVISON_CASUAL = 0x241D,FID_PS_NEWS_GOTHIC = 0x222C,FID_PS_NEWTEXT = 0x222D,FID_PS_NEW_ASTER = 0x2012,FID_PS_NICOLAS_COCHIN = 0x200E,FID_PS_NIKIS = 0x204F,FID_PS_NIMROD = 0x2050,FID_PS_NOVARESE = 0x2051,FID_PS_NUPITAL_SCRIPT = 0x2430,FID_PS_OCR_A = 0x222E,FID_PS_OCR_B = 0x222F,FID_PS_OCTOPUSS = 0x264F,FID_PS_ODIN = 0x2650,FID_PS_OKAY = 0x2651,FID_PS_OLD_ENGLISH = 0x2601,FID_PS_OLD_TOWN = 0x260B,FID_PS_OPTIMA = 0x2212,FID_PS_PACELLA = 0x2052,FID_PS_PADDINGTION = 0x2652,FID_PS_PALACE_SCRIPT = 0x241E,FID_PS_PALATINO = 0x200A,FID_PS_PALETTE = 0x241F,FID_PS_PANACHE = 0x2230,FID_PS_PAPYRUS = 0x2653,FID_PS_PARK_AVENUE = 0x2403,FID_PS_PEIGNOT = 0x2654,FID_PS_PENDRY_SCRIPT = 0x2420,FID_PS_PEPITA = 0x2421,FID_PS_PERPETUA = 0x2053,FID_PS_PHYLLIS = 0x2422,FID_PS_PHYLLIS_INITIALS = 0x2423,FID_PS_PICCADILLY = 0x2655,FID_PS_PLANTIN = 0x2054,FID_PS_PLAYBILL = 0x2656,FID_PS_PLAZA = 0x2657,FID_PS_POST_ANTIQUA = 0x2658,FID_PS_PRAXIS = 0x2231,FID_PS_PREMIER = 0x2659,FID_PS_PRESENT_SCRIPT = 0x2424,FID_PS_PRESIDENT = 0x265A,FID_PS_PRESTIGE_ELITE = 0x2A02,FID_PS_PRIMUS = 0x2232,FID_PS_PRIMUS_ANTIQUA = 0x2233,FID_PS_PRINCETOWN = 0x265B,FID_PS_PROTEUS = 0x2055,FID_PS_PRO_ARTE = 0x265C,FID_PS_PUMP = 0x260D,FID_PS_QUENTIN = 0x265D,FID_PS_QUORUM = 0x2056,FID_PS_RAGE = 0x2425,FID_PS_RALEIGH = 0x2057,FID_PS_RENAULT = 0x2058,FID_PS_REVUE = 0x265E,FID_PS_RIALTO = 0x265F,FID_PS_ROCKWELL = 0x2059,FID_PS_ROMANA = 0x205A,FID_PS_ROMAN_SCRIPT = 0x2426,FID_PS_ROMIC = 0x2660,FID_PS_RUBBER_STAMP = 0x2661,FID_PS_SABON = 0x205B,FID_PS_SABON_ANTIQUA = 0x205C,FID_PS_SERIFA = 0x205D,FID_PS_SERIF_GOTHIC = 0x2234,FID_PS_SERPENTINE = 0x2662,FID_PS_SHAMROCK = 0x2427,FID_PS_SHELLEY = 0x2663,FID_PS_SINALOA = 0x2664,FID_PS_SLIMBACH = 0x205E,FID_PS_SLIPSTREAM = 0x2665,FID_PS_SLOGAN = 0x2428,FID_PS_SONATA = 0x2805,FID_PS_SOUVENIR = 0x205F,FID_PS_SPRINGFIELD = 0x2666,FID_PS_SQUIRE = 0x2667,FID_PS_STEMPEL_SCHNEIDLER = 0x2060,FID_PS_STENCIL = 0x2602,FID_PS_STENTOR = 0x2668,FID_PS_STILLA = 0x2669,FID_PS_STILLA_CAPS = 0x266A,FID_PS_STONE_INFORMAL = 0x2061,FID_PS_STONE_SANS = 0x2235,FID_PS_STONE_SERIF = 0x2062,FID_PS_STOP = 0x266B,FID_PS_STRATFORD = 0x2063,FID_PS_STYMIE = 0x2064,FID_PS_SUPERSTAR = 0x266C,FID_PS_SWIFT = 0x2065,FID_PS_SYMBOL = 0x2800,FID_PS_SYNCHRO = 0x266D,FID_PS_SYNTAX = 0x2236,FID_PS_TANGO = 0x266E,FID_PS_TARRAGON = 0x266F,FID_PS_TEKTON = 0x242B,FID_PS_TEMPO = 0x2237,FID_PS_THOROWGOOD = 0x2670,FID_PS_THUNDERBIRD = 0x2671,FID_PS_TIEPOLO = 0x2066,FID_PS_TIFFANY = 0x2067,FID_PS_TIMELESS = 0x2068,FID_PS_TIMES_NEW_ROMAN = 0x2069,FID_PS_TIMES_ROMAN = 0x2000,FID_PS_TIME_SCRIPT = 0x2672,FID_PS_TITUS = 0x2673,FID_PS_TRAJAN = 0x2078,FID_PS_TRAJANUS = 0x2674,FID_PS_ULTE_SCHWABACHER = 0x2610,FID_PS_UNIVERS = 0x2205,FID_PS_UNIVERSITY_ROMAN = 0x2006,FID_PS_URW_ANTIQUA = 0x206A,FID_PS_URW_SANS = 0x2200,FID_PS_USHERWOOD = 0x206B,FID_PS_U_GREEK_MATH_PI = 0x2808,FID_PS_U_NEWS_COMM_PI = 0x2807,FID_PS_VAG_RUNDSCHRIFT = 0x2675,FID_PS_VAN_DIJK = 0x2429,FID_PS_VARIO = 0x2676,FID_PS_VEGAS = 0x2677,FID_PS_VELJOVIC = 0x206D,FID_PS_VENDOME = 0x206E,FID_PS_VICTORIAN = 0x2678,FID_PS_VIVALDI = 0x2401,FID_PS_VLADIMIR_SCRIPT = 0x242A,FID_PS_VOLTA = 0x206F,FID_PS_WALBAUM = 0x2070,FID_PS_WASHINGTON = 0x2679,FID_PS_WEIDEMANN = 0x2071,FID_PS_WEIFZ_RUNDGOTIFCH = 0x267A,FID_PS_WEISS = 0x2072,FID_PS_WINDSOR = 0x2073,FID_PS_WORCESTER_ROUND = 0x2074,FID_PS_ZAPF_BOOK = 0x2075,FID_PS_ZAPF_CHANCERY = 0x2400,FID_PS_ZAPF_DINGBATS = 0x2802,FID_PS_ZAPF_INTERNATIONAL = 0x2076,FID_PS_ZIPPER = 0x267B,};
enum MACRO_FIELD {FIELD_TYPE_ROW = 16384,FIELD_DEFAULT_VALUE_ROW = 16385,TEMP_DATA_ROW = 16386,RECORD_LAYOUT_ROW = 16387,MULTI_RECORD_LAYOUT_ROW = 16388,MISCELLANEOUS_INFO_ROW = 16389,TEMP_DATA_ROW_FOR_VISUAL_UPDATES = 16390,};
enum MACRO_FIELD_IN {FIELD_IN_RANGE = 0,FIELD_BELOW_MIN = 1,FIELD_ABOVE_MAX = 2,};
enum MACRO_FILE {FILE_ACCESS_R = 0x0,FILE_ACCESS_W = 0x1,FILE_ACCESS_RW = 0x2,FILE_NO_ERRORS = 0x80,};
enum MACRO_FILENAME {FILENAME_MAX = 32,};
enum MACRO_FILENAME2 {FILENAME_LENGTH = 31,};
enum MACRO_FILE_ATTR {FILE_ATTR_NORMAL = 0,FILE_ATTR_READ_ONLY = 1,FILE_ATTR_HIDDEN = 2,FILE_ATTR_SYSTEM = 4,FILE_ATTR_VOLUME_LABEL = 8,};
enum MACRO_FILE_CREATE {FILE_CREATE_TRUNCATE = 0,FILE_CREATE_NO_TRUNCATE = 256,FILE_CREATE_ONLY = 512,FCF_NATIVE = -32768,};
enum MACRO_FILE_DESKTOP {FILE_DESKTOP_INFO_SIZE = 16,};
enum MACRO_FILE_ENUM {FILE_ENUM_ALL_FILE_TYPES = 0x70,FE_BUFSIZE_UNLIMITED = 0xFFFF,};
enum MACRO_FILE_FORMAT {FILE_FORMAT_NAME_SIZE = 16,CONNECT_OPEN_CONNECTION_TIME_OUT = 600,};
enum MACRO_FILE_LONGNAME {FILE_LONGNAME_BUFFER_SIZE = 36,};
enum MACRO_FILE_NO {FILE_NO_ID = 0,GFHF_TEMPLATE = -32768,};
enum MACRO_FILE_PASSWORD {FILE_PASSWORD_SIZE = 8,FILE_OWNER_NAME_SIZE = 16,};
enum MACRO_FILE_POS {FILE_POS_START = 0,FILE_POS_RELATIVE = 1,FILE_POS_END = 2,FT_HOUR = -2048,};
enum MACRO_FILE_RIGHTS {FILE_RIGHTS_SIZE = 16,DPI_EXISTS_LOCALLY = -32768,};
enum MACRO_FIRST {FIRST_GEN_APP_GCN_LIST_TYPE = 0x6800,};
enum MACRO_FIRST_EVENT {FIRST_EVENT_ID = 0x1,};
enum MACRO_FIRST_FIELD {FIRST_FIELD_Y_POSITION = 20,DEFAULT_FIELD_WIDTH = 600,};
enum MACRO_FJC {FJC_DEFAULT_FEATURES = 15,};
enum MACRO_FJCF {FJCF_LEFT = 0x8,FJCF_RIGHT = 0x4,FJCF_CENTER = 0x2,FJCF_FULL = 0x1,};
enum MACRO_FLASHING {FLASHING_NOTE_DEFAULT_MINIMUM_DURATION = 60,FOAM_INDICATOR_WIDTH = 80,};
enum MACRO_FLOAT {FLOAT_TO_ASCII_NORMAL_BUF_LEN = 78,FLOAT_TO_ASCII_HUGE_BUF_LEN = 122,YEAR_LENGTH = 365,YEAR_MAX = 2099,};
enum MACRO_FLOAT_FORMAT {FLOAT_FORMAT_NO_ERROR = 0,FLOAT_FORMAT_TOO_MANY_FORMATS = 1,FLOAT_FORMAT_CANNOT_ALLOC = 2,FLOAT_FORMAT_FORMAT_NAME_NOT_FOUND = 32767,FLOAT_FORMAT_PARAMS_MATCH = -1,};
enum MACRO_FLOAT_FORMAT_PARAMS {FLOAT_FORMAT_PARAMS_DONT_MATCH = 0,};
enum MACRO_FLOAT_NEG {FLOAT_NEG_INFINITY = 1,FLOAT_GEN_ERR = 2,};
enum MACRO_FLOAT_POS {FLOAT_POS_INFINITY = 250,};
enum MACRO_FLOAT_STACK {FLOAT_STACK_GROW = 0,FLOAT_STACK_WRAP = 1,FLOAT_STACK_ERROR = 2,MAX_FORMATS = 10,NUM_NUMBER_FORMATS = 12,NUM_DATE_TIME_FORMATS = 19,NUM_PRE_DEF_FORMATS = 31,FORMAT_NAME_LENGTH = 40,FORMAT_ID_PREDEF = -32768,};
enum MACRO_FM {FM_PRINTER = 0xF000,FM_MICROLOGIC = 0xE000,FM_ATECH = 0xD000,FM_PUBLIC = 0xC000,FM_AGFA = 0x4000,FM_BITSTREAM = 0x3000,FM_ADOBE = 0x2000,FM_NIMBUSQ = 0x1000,FM_BITMAP = 0x0,};
enum MACRO_FOAM {FOAM_MAX_SMS_TEXT_SIZE = 160,};
enum MACRO_FOAM_DEFAULT {FOAM_DEFAULT_BUBBLE_WIDTH = 250,};
enum MACRO_FOAM_DISK {FOAM_DISK_SPACE_NEARLY_FULL_LEVEL = 0xC800,};
enum MACRO_FOAM_DISK_SPACE {FOAM_DISK_SPACE_FULL_LEVEL = 0x6400,};
enum MACRO_FOAM_DOCUMENT {FOAM_DOCUMENT_PREFIX_TEXT_SIZE = 26,FOAM_FILE_SELECTOR_WIDTH = 54,FOAM_DEFAULT_COMPONENT_WIDTH = 405,};
enum MACRO_FOAM_FCLOCK {FOAM_FCLOCK_ALARM_SOUND = -1,};
enum MACRO_FOAM_HEADER {FOAM_HEADER_ICON_WIDTH = 37,FOAM_ZOOM2_FONT_SIZE = 26,};
enum MACRO_FOAM_LARGE {FOAM_LARGE_FONT_SIZE = 20,};
enum MACRO_FOAM_LIGHT {FOAM_LIGHT_ZOOM2_FONT_SIZE = 25,};
enum MACRO_FOAM_LIGHT_FONT {FOAM_LIGHT_FONT_SIZE = 17,};
enum MACRO_FOAM_LIGHT_ZOOM1 {FOAM_LIGHT_ZOOM1_FONT_SIZE = 19,};
enum MACRO_FOAM_MAX {FOAM_MAX_SMS_TEXT_SIZE_WITHOUT_HEADERS = 152,};
enum MACRO_FOAM_MAX_CONCATENATED {FOAM_MAX_CONCATENATED_MESSAGES = 30,FOAM_MAX_CONCATENATED_SMS_TEXT_SIZE = 4560,};
enum MACRO_FOAM_NORMAL {FOAM_NORMAL_FONT_SIZE = 18,};
enum MACRO_FOAM_NUM {FOAM_NUM_SPECIAL_SOUNDS = 6,};
enum MACRO_FOAM_PRINT {FOAM_PRINT_A4_WIDTH = 595,FOAM_PRINT_A4_HEIGHT = 842,};
enum MACRO_FOAM_PRINT_BAUD {FOAM_PRINT_BAUD_RATE_DEFAULT_INTEGER = -7936,};
enum MACRO_FOAM_PRINT_LETTER {FOAM_PRINT_LETTER_WIDTH = 612,FOAM_PRINT_LETTER_HEIGHT = 792,};
enum MACRO_FOAM_SMALL {FOAM_SMALL_FONT_SIZE = 16,};
enum MACRO_FOAM_TITLE {FOAM_TITLE_FONT_SIZE = 20,};
enum MACRO_FOAM_ZOOM {FOAM_ZOOM_COMMENT_MAX_LENGTH = 20,};
enum MACRO_FOAM_ZOOM1 {FOAM_ZOOM1_FONT_SIZE = 21,};
enum MACRO_FOAM_ZOOM_COMMENT {FOAM_ZOOM_COMMENT_MNEMONIC_LENGTH = 5,FOAM_ZOOM_COMMENT_FONT_LENGTH = 10,};
enum MACRO_FOAM_ZOOM_COMMENT_CLIP {FOAM_ZOOM_COMMENT_CLIP_X_LENGTH = 18,};
enum MACRO_FOAM_ZOOM_COMMENT_MOVE {FOAM_ZOOM_COMMENT_MOVE_TO_LENGTH = 18,};
enum MACRO_FOARF {FOARF_ADD_EOF = 0x4000,};
enum MACRO_FOARF_NULL {FOARF_NULL_TERMINATE = 0x2000,};
enum MACRO_FOF {FOF_COPY_TO_SOUNDS = 0x200,FOF_MOVE = 0x100,FOF_CREATE_FOLDER = 0x80,FOF_COPY = 0x40,FOF_CLOSE = 0x20,FOF_OPEN = 0x10,FOF_CREATE_NEW = 0x8,FOF_DELETE = 0x4,FOF_RENAME_COPY = 0x2,FOF_RENAME = 0x1,};
enum MACRO_FOF_DEFAULT {FOF_DEFAULT_FEATURES = 56,FOF_FULL_MENU = 1995,};
enum MACRO_FOPEN {FOPEN_MAX = 8,};
enum MACRO_FORMAT {FORMAT_ARRAY_HDR_SIG = 31075,};
enum MACRO_FORMATTED {FORMATTED_RANGE_BUFFER_SIZE = 14,PSEE_RESULT_SHOULD_BE_CELL_OR_RANGE = 192,PSEE_NO_NAME_GIVEN = 193,PSEE_NO_DEFINITION_GIVEN = 194,PSEE_NAME_ALREADY_DEFINED = 195,PSEE_BAD_NAME_DEFINITION = 196,PSEE_REALLOC_FAILED = 197,PSEE_CELL_OR_RANGE_IS_LOCKED = 198,PSEE_LAST_SPREADSHEET_ERROR = 230,};
enum MACRO_FORMAT_ENTRY {FORMAT_ENTRY_SIG = 29795,};
enum MACRO_FORMAT_PARAMS {FORMAT_PARAMS_ID = 0x63,FORMAT_INFO_STRUC_ID = 0x7963,};
enum MACRO_FP {FP_MIN_STACK_ELEMENTS = 5,FP_MIN_STACK_SIZE = 50,FP_NAN = 32767,};
enum MACRO_FPDF {FPDF_CANCEL = 0x1,};
enum MACRO_FPSC {FPSC_DEFAULT_FEATURES = 255,};
enum MACRO_FPSCF {FPSCF_12 = 0x40,FPSCF_14 = 0x20,FPSCF_18 = 0x10,FPSCF_24 = 0x8,FPSCF_36 = 0x4,FPSCF_54 = 0x2,FPSCF_USER_DEFINED = 0x1,};
enum MACRO_FPSIZE {FPSIZE = 10,DECIMAL_EXPONENT_UPPER_LIMIT = 4932,DECIMAL_EXPONENT_LOWER_LIMIT = -4932,};
enum MACRO_FR {FR_ACOUSTIC_BASS_DRUM = 247,};
enum MACRO_FRSPF {FRSPF_ADD_DRIVE_NAME = 0x2,FRSPF_RETURN_FIRST_DIR = 0x1,};
enum MACRO_FR_ACOUSTIC {FR_ACOUSTIC_SNARE = 523,};
enum MACRO_FR_BASS {FR_BASS_DRUM_1 = 131,FR_SIDE_STICK = 831,};
enum MACRO_FR_CHINESE {FR_CHINESE_CYMBAL = 523,};
enum MACRO_FR_COWBELL {FR_COWBELL = 262,FR_CRASH_CYMBAL_2 = 523,};
enum MACRO_FR_CRASH {FR_CRASH_CYMBAL_1 = 523,FR_HIGH_TOM = 831,};
enum MACRO_FR_ELECTRIC {FR_ELECTRIC_SNARE = 523,};
enum MACRO_FR_HAND {FR_HAND_CLAP = 523,};
enum MACRO_FR_HI {FR_HI_TIMBALE = 523,};
enum MACRO_FR_HIGH {FR_HIGH_FLOOR_TOM = 349,FR_PEDAL_HI_HAT = 523,};
enum MACRO_FR_HIGH_AGOGO {FR_HIGH_AGOGO = 370,};
enum MACRO_FR_HI_WOOD {FR_HI_WOOD_BLOCK = 523,};
enum MACRO_FR_LONG {FR_LONG_WHISTLE = 1661,};
enum MACRO_FR_LONG_GUIRO {FR_LONG_GUIRO = 523,FR_CLAVES = 3322,};
enum MACRO_FR_LOW {FR_LOW_FLOOR_TOM = 262,FR_CLOSED_HI_HAT = 523,};
enum MACRO_FR_LOW_AGOGO {FR_LOW_AGOGO = 262,FR_CABASA = 523,};
enum MACRO_FR_LOW_BONGO {FR_LOW_BONGO = 659,FR_MUTE_HI_CONGA = 831,};
enum MACRO_FR_LOW_CONGA {FR_LOW_CONGA = 523,};
enum MACRO_FR_LOW_MID {FR_LOW_MID_TOM = 523,FR_HI_MID_TOM = 698,};
enum MACRO_FR_LOW_TIMBALE {FR_LOW_TIMBALE = 415,};
enum MACRO_FR_LOW_TOM {FR_LOW_TOM = 415,FR_OPEN_HI_HAT = 523,};
enum MACRO_FR_LOW_WOOD {FR_LOW_WOOD_BLOCK = 370,FR_MUTE_CUICA = 523,};
enum MACRO_FR_MARACAS {FR_MARACAS = 523,FR_SHORT_WHISTLE = 1661,};
enum MACRO_FR_OPEN {FR_OPEN_HI_CONGA = 831,};
enum MACRO_FR_OPEN_CUICA {FR_OPEN_CUICA = 523,FR_MUTE_TRIANGLE = 831,};
enum MACRO_FR_OPEN_TRIANGLE {FR_OPEN_TRIANGLE = 831,};
enum MACRO_FR_RIDE {FR_RIDE_CYMBAL_1 = 523,};
enum MACRO_FR_RIDE_BELL {FR_RIDE_BELL = 523,};
enum MACRO_FR_RIDE_CYMBAL {FR_RIDE_CYMBAL_2 = 523,FR_HI_BONGO = 831,};
enum MACRO_FR_SHORT {FR_SHORT_GUIRO = 523,};
enum MACRO_FR_SPLASH {FR_SPLASH_CYMBAL = 523,};
enum MACRO_FR_TAMBOURINE {FR_TAMBOURINE = 523,};
enum MACRO_FR_VIBRASLAP {FR_VIBRASLAP = 523,};
enum MACRO_FSA {FSA_ALLOW_CHANGE_DIRS = 0x8000,FSA_SHOW_FIXED_DISKS_ONLY = 0x2000,FSA_SHOW_FILES_DISABLED = 0x1000,FSA_HAS_CLOSE_DIR_BUTTON = 0x800,FSA_HAS_OPEN_DIR_BUTTON = 0x400,FSA_HAS_DOCUMENT_BUTTON = 0x200,FSA_HAS_CHANGE_DIRECTORY_LIST = 0x100,FSA_HAS_CHANGE_DRIVE_LIST = 0x80,FSA_HAS_FILE_LIST = 0x40,FSA_USE_VIRTUAL_ROOT = 0x20,FSA_SHOW_WRITABLE_DISKS_ONLY = 0x10,};
enum MACRO_FSFC {FSFC_DIRS = 0x8000,FSFC_NON_GEOS_FILES = 0x4000,FSFC_GEOS_EXECUTABLES = 0x2000,FSFC_GEOS_NON_EXECUTABLES = 0x1000,FSFC_MASK_CASE_INSENSITIVE = 0x800,FSFC_FILE_FILTER = 0x400,FSFC_FILTER_IS_C = 0x200,FSFC_TOKEN_NO_ID = 0x100,FSFC_USE_MASK_FOR_DIRS = 0x80,FSFC_USE_FAKE_FILE_SYSTEM = 0x40,};
enum MACRO_FT {FT_MINUTE = 0x7E0,};
enum MACRO_FTSC {FTSC_DEFAULT_FEATURES = 4095,};
enum MACRO_FTSCF {FTSCF_PLAIN = 0x800,FTSCF_BOLD = 0x400,FTSCF_ITALIC = 0x200,FTSCF_UNDERLINE = 0x100,FTSCF_STRIKE_THRU = 0x80,FTSCF_SUBSCRIPT = 0x40,FTSCF_SUPERSCRIPT = 0x20,FTSCF_BOXED = 0x10,FTSCF_BUTTON = 0x8,FTSCF_INDEX = 0x4,FTSCF_ALL_CAP = 0x2,FTSCF_SMALL_CAP = 0x1,};
enum MACRO_FT_2SECOND {FT_2SECOND = 0x1F,};
enum MACRO_FT_2SECOND_OFFSET {FT_2SECOND_OFFSET = 0,};
enum MACRO_FT_HOUR {FT_HOUR_OFFSET = 11,};
enum MACRO_FT_MINUTE {FT_MINUTE_OFFSET = 5,};
enum MACRO_FT_PRINT {FT_PRINT = 0x100,FT_TRIGONOMETRIC = 0x80,FT_LOGICAL = 0x40,FT_STATISTICAL = 0x20,FT_STRING = 0x10,FT_TIME_DATE = 0x8,FT_FINANCIAL = 0x4,FT_MATH = 0x2,FT_INFORMATION = 0x1,};
enum MACRO_FUTURE {FUTURE_LINE_ATTR_ELEMENT_DATA_SIZE = 50,};
enum MACRO_FUTURE_AREA {FUTURE_AREA_ATTR_ELEMENT_SIZE = 50,GGAD_MULTIPLE_END_COLORS = 128,};
enum MACRO_FWI {FWI_MINIMUM = 25,FWI_NARROW = 75,FWI_CONDENSED = 85,FWI_MEDIUM = 100,FWI_WIDE = 125,FWI_EXPANDED = 150,};
enum MACRO_FWI_MAXIMUM {FWI_MAXIMUM = 20,MAX_FONTS = 400,};
enum MACRO_GA {GA_PROCESS = 0x8000,GA_LIBRARY = 0x4000,GA_DRIVER = 0x2000,GA_KEEP_FILE_OPEN = 0x1000,GA_SYSTEM = 0x800,GA_MULTI_LAUNCHABLE = 0x400,GA_APPLICATION = 0x200,GA_DRIVER_INITIALIZED = 0x100,GA_LIBRARY_INITIALIZED = 0x80,GA_GEODE_INITIALIZED = 0x40,GA_USES_COPROC = 0x20,GA_REQUIRES_COPROC = 0x10,GA_HAS_GENERAL_CONSUMER_MODE = 0x8,GA_ENTRY_POINTS_IN_C = 0x4,};
enum MACRO_GA2 {GA_SIGNAL_INTERACTION_COMPLETE = 0x80,GA_INITIATES_BUSY_STATE = 0x40,GA_INITIATES_INPUT_HOLD_UP = 0x20,GA_INITIATES_INPUT_IGNORE = 0x10,GA_READ_ONLY = 0x8,GA_KBD_SEARCH_PATH = 0x4,GA_TARGETABLE = 0x2,GA_NOTIFY_VISIBILITY = 0x1,};
enum MACRO_GAGOF {GAGOF_RELATIVE = 0x8000,GAGOF_REFERENCE = 0x7FFF,GAGOF_REFERENCE_OFFSET = 0x0,};
enum MACRO_GAUC {GAUC_USABILITY = 0,GAUC_RECALC_CONTROLLER = 1,GAUC_REPARENT = 2,GAUC_POPUP = 3,GAUC_TOOLBAR = 4,GAUC_RESTART = 5,GAUTF_END_OF_LIST = 32,};
enum MACRO_GAUTF {GAUTF_OFF_IF_BIT_ON = 0x10,GAUTF_COMMAND = 0xF,};
enum MACRO_GBF {GBF_DEFAULT_TARGET = 0x2,GBF_DEFAULT_FOCUS = 0x1,};
enum MACRO_GBI {GBI_USABLE = 0x8000,GBI_BRANCH_MINIMIZED = 0x4000,};
enum MACRO_GCBF {GCBF_SUSPEND_ON_APPLY = 0x8000,GCBF_USE_GEN_DESTROY = 0x4000,GCBF_SPECIFIC_UI = 0x2000,GCBF_CUSTOM_ENABLE_DISABLE = 0x1000,GCBF_ALWAYS_UPDATE = 0x800,GCBF_EXPAND_TOOL_WIDTH_TO_FIT_PARENT = 0x400,GCBF_ALWAYS_INTERACTABLE = 0x200,GCBF_ALWAYS_ON_GCN_LIST = 0x100,GCBF_MANUALLY_REMOVE_FROM_ACTIVE_LIST = 0x80,GCBF_IS_ON_ACTIVE_LIST = 0x40,GCBF_IS_ON_START_LOAD_OPTIONS_LIST = 0x20,GCBF_NOT_REQUIRED_TO_BE_ON_SELF_LOAD_OPTIONS_LIST = 0x10,GCBF_DO_NOT_DESTROY_CHILDREN_WHEN_CLOSED = 0x8,};
enum MACRO_GCC {GCC_DEFAULT_FEATURES = 3,GCC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_GCCF {GCCF_HORIZONTAL_GUIDES = 0x2,GCCF_VERTICAL_GUIDES = 0x1,};
enum MACRO_GCCF_NOTIFY {GCCF_NOTIFY_WHEN_ADDING = 0x4,GCCF_ALWAYS_ADD = 0x2,GCCF_IS_DIRECTLY_A_FEATURE = 0x1,};
enum MACRO_GCF_FIRST_CALL {GCF_FIRST_CALL = 0x8000,};
enum MACRO_GCIF {GCIF_CONTROLLER = 0x8000,GCIF_TOOLBOX_UI = 0x2,GCIF_NORMAL_UI = 0x1,};
enum MACRO_GCMF {GCMF_RIGHT_ICON = 0x7,};
enum MACRO_GCMI {GCMI_NONE = 0,GCMI_EXIT = 1,GCMI_HELP = 2,GCMF_LEFT_ICON = 56,};
enum MACRO_GCNLSF {GCNLSF_IGNORE_IF_STATUS_TRANSITIONING = 0x4000,GCNLSF_FORCE_QUEUE = 0x2000,};
enum MACRO_GCNLTF {GCNLTF_SAVE_TO_STATE = 0x1,TMGCNF_RELOCATED = 0x80,GCNLSF_SET_STATUS = 0x8000,};
enum MACRO_GCSF {GCSF_HIGHLIGHTED_TOOLGROUP_SELECTED = 0x4,GCSF_TOOLBOX_FEATURES_CHANGED = 0x2,GCSF_NORMAL_FEATURES_CHANGED = 0x1,};
enum MACRO_GCSUIC {GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_ON = 0,GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_ON = 1,GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF = 2,GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF = 3,GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL = 4,GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL = 5,GCSUIC_ADD_NORMAL_FEATURES_IF_APP_FEATURE_ON = 6,GCSUIC_ADD_TOOLBOX_FEATURES_IF_APP_FEATURE_ON = 7,GDCA_MAXIMIZED_NAME_ON_PRIMARY = 128,};
enum MACRO_GCUF {GCUF_USER_TOOLBOX_UI = 0x2,GCUF_USER_UI = 0x1,};
enum MACRO_GDA {GDA_USER_DISMISSABLE = 0x80,RIMF_NOT_ENABLED = 0x8000,GDLI_NO_CHANGE = 0xFFFF,};
enum MACRO_GDA_READ {GDA_READ_ONLY = 0x8000,GDA_READ_WRITE = 0x4000,GDA_FORCE_DENY_WRITE = 0x2000,GDA_SHARED_MULTIPLE = 0x1000,GDA_SHARED_SINGLE = 0x800,GDA_UNTITLED = 0x400,GDA_DIRTY = 0x200,GDA_CLOSING = 0x100,GDA_ATTACH_TO_DIRTY_FILE = 0x80,GDA_SAVE_FAILED = 0x40,GDA_OPENING = 0x20,GDA_AUTO_SAVE_STOPPED = 0x10,GDA_MODEL = 0x8,GDA_ON_WRITABLE_MEDIA = 0x4,GDA_BACKUP_EXISTS = 0x2,GDA_PREVENT_AUTO_SAVE = 0x1,};
enum MACRO_GDC {GDC_DEFAULT_FEATURES = 7,};
enum MACRO_GDCA {GDCA_MODE = 0x6000,GDCA_DOS_FILE_DENY_WRITE = 0x1000,GDCA_VM_FILE = 0x800,GDCA_NATIVE = 0x400,GDCA_SUPPORTS_SAVE_AS_REVERT = 0x200,GDCA_DOCUMENT_EXISTS = 0x100,GDCA_CURRENT_TASK = 0xF0,GDCA_DO_NOT_SAVE_FILES = 0x8,};
enum MACRO_GDCA_CURRENT {GDCA_CURRENT_TASK_OFFSET = 4,GDCF_READ_ONLY_SUPPORTS_SAVE_AS_REVERT = -32768,};
enum MACRO_GDCA_MODE {GDCA_MODE_OFFSET = 13,};
enum MACRO_GDCF {GDCF_OVERLAPPING_MAXIMIZED = 0x4,GDCF_TILE = 0x2,GDCF_DISPLAY_LIST = 0x1,};
enum MACRO_GDCF_OPEN {GDCF_OPEN_CLOSE = 0x2000,GDCF_QUICK_BACKUP = 0x1000,GDCF_SAVE = 0x800,GDCF_SAVE_AS = 0x400,GDCF_COPY = 0x200,GDCF_EXPORT = 0x100,GDCF_REVERT = 0x80,GDCF_RENAME = 0x40,GDCF_EDIT_USER_NOTES = 0x20,GDCF_SET_TYPE = 0x10,GDCF_SET_PASSWORD = 0x8,GDCF_SAVE_AS_TEMPLATE = 0x4,GDCF_SET_EMPTY_DOCUMENT = 0x2,GDCF_SET_DEFAULT_DOCUMENT = 0x1,};
enum MACRO_GDCF_SINGLE {GDCF_SINGLE_FILE_CLEAN_CAN_NEW_OPEN = 0x4000,GDCF_SUPPORTS_TEMPLATES = 0x2000,GDCF_SUPPORTS_USER_SETTABLE_EMPTY_DOCUMENT = 0x1000,GDCF_SUPPORTS_USER_SETTABLE_DEFAULT_DOCUMENT = 0x800,GDCF_SUPPORTS_USER_MAKING_SHARED_DOCUMENTS = 0x400,GDCF_NAME_ON_PRIMARY = 0x200,};
enum MACRO_GDCM {GDCM_VIEWER = 0,GDCM_SHARED_SINGLE = 1,GDCM_SHARED_MULTIPLE = 2,GDCA_MULTIPLE_OPEN_FILES = -32768,};
enum MACRO_GDCT {GDCT_NONE = 0,GDCT_NEW = 1,GDCT_OPEN = 2,GDCT_USE_TEMPLATE = 3,GDCT_SAVE_AS = 4,GDCT_COPY_TO = 5,GDCT_DIALOG = 6,GDCT_TYPE = 7,GDCT_PASSWORD = 8,GDCT_MOVE_TO = 9,};
enum MACRO_GDCTF {GDCTF_OVERLAPPING_MAXIMIZED = 0x4,GDCTF_TILE = 0x2,GDCTF_DISPLAY_LIST = 0x1,};
enum MACRO_GDCTF_NEW {GDCTF_NEW_EMPTY = 0x20,GDCTF_USE_TEMPLATE = 0x10,GDCTF_OPEN = 0x8,GDCTF_CLOSE = 0x4,GDCTF_SAVE = 0x2,GDCTF_QUICK_BACKUP = 0x1,GDC_SUGGESTED_INTRODUCTORY_FEATURES = 0x0,};
enum MACRO_GDC_DEFAULT {GDC_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_GDC_SUGGESTED {GDC_SUGGESTED_BEGINNING_FEATURES = 4960,GDC_SUGGESTED_INTERMEDIATE_FEATURES = 6120,GDC_SUGGESTED_ADVANCED_FEATURES = 6143,};
enum MACRO_GDGA {GDGA_NATIVE = 0x4000,GDGA_SUPPORTS_AUTO_SAVE = 0x2000,GDGA_AUTOMATIC_CHANGE_NOTIFICATION = 0x1000,GDGA_AUTOMATIC_DIRTY_NOTIFICATION = 0x800,GDGA_APPLICATION_THREAD = 0x400,GDGA_VM_FILE_CONTAINS_OBJECTS = 0x200,GDGA_CONTENT_DOES_NOT_MANAGE_CHILDREN = 0x100,GDGA_LARGE_CONTENT = 0x80,GDGA_AUTOMATIC_UNDO_INTERACTION = 0x40,};
enum MACRO_GDLP {GDLP_FIRST = 0x0,GDLP_LAST = 0xFFFF,};
enum MACRO_GEC {GEC_DEFAULT_FEATURES = 63,};
enum MACRO_GECF {GECF_UNDO = 0x20,GECF_CUT = 0x10,GECF_COPY = 0x8,GECF_PASTE = 0x4,GECF_SELECT_ALL = 0x2,GECF_DELETE = 0x1,};
enum MACRO_GECTF {GECTF_UNDO = 0x20,GECTF_CUT = 0x10,GECTF_COPY = 0x8,GECTF_PASTE = 0x4,GECTF_SELECT_ALL = 0x2,GECTF_DELETE = 0x1,};
enum MACRO_GEC_DEFAULT {GEC_DEFAULT_TOOLBOX_FEATURES = 63,};
enum MACRO_GEN {GEN_DOCUMENT_GENERATE_NAME_ERROR = 0xFFFF,};
enum MACRO_GENGO {GENGO_SHORT_NAME_LENGTH = 4,};
enum MACRO_GENOA {GENOA_TEST = 0,};
enum MACRO_GEN_DOCUMENT {GEN_DOCUMENT_GENERATE_NAME_CANCEL = 0xFFFE,};
enum MACRO_GEN_DOCUMENT_GET {GEN_DOCUMENT_GET_VARIABLE_BUFFER_SIZE = 100,GDCF_NEW = 16384,};
enum MACRO_GEODE {GEODE_NAME_SIZE = 0x8,GEODE_NAME_EXT_SIZE = 0x4,};
enum MACRO_GET {GET_FIRST = 0x0,GET_LAST = 0x1,};
enum MACRO_GFF {GFF_DETACHING = 0x80,GFF_LOAD_BITMAP = 0x40,GFF_RESTORING_APPS = 0x20,GFF_NEEDS_WORKSPACE_MENU = 0x10,GFF_HAS_DEFAULT_LAUNCHER = 0x8,GFF_NEED_DEFAULT_LAUNCHER = 0x4,GFF_QUIT_ON_CLOSE = 0x2,GFF_LOAD_DEFAULT_LAUNCHER_WHEN_NEXT_PROCESS_EXITS = 0x1,};
enum MACRO_GFH {GFH_NOTICE_SIZE = 32,};
enum MACRO_GFHF {GFHF_SHARED_MULTIPLE = 0x4000,GFHF_SHARED_SINGLE = 0x2000,GFHF_HIDDEN = 0x800,GFHF_DBCS = 0x400,GFHF_UNREAD = 0x200,GFHF_NOTES = 0x100,};
enum MACRO_GFSEF {GFSEF_OPEN = 0x2000,GFSEF_NO_ENTRIES = 0x1000,GFSEF_ERROR = 0x800,GFSEF_TEMPLATE = 0x400,GFSEF_SHARED_MULTIPLE = 0x200,GFSEF_SHARED_SINGLE = 0x100,GFSEF_READ_ONLY = 0x80,GFSEF_PARENT_DIR = 0x40,GFSEF_DISABLED = 0x20,GFSEF_TYPE_OFFSET = 0xE,};
enum MACRO_GFSET {GFSET_FILE = 0,GFSET_SUBDIR = 1,GFSET_VOLUME = 2,GFSEF_TYPE = -16384,};
enum MACRO_GFSSUIC {GFSSUIC_SET_FEATURES_IF_APP_FEATURE_ON = 0,GFSSUIC_SET_FEATURES_IF_APP_FEATURE_OFF = 1,GFSSUIC_ADD_FEATURES_IF_APP_FEATURE_ON = 2,GFSSUIC_SET_FEATURES_IF_APP_LEVEL = 3,GFSSUIC_ADD_FEATURES_IF_APP_LEVEL = 4,FLEXIBLE_ARRAY_SIZE = 100,GGA_COMPOSITE = -32768,};
enum MACRO_GFST {GFST_DOCUMENTS = 0,GFST_EXECUTABLES = 1,GFST_NON_GEOS_FILES = 2,GFST_ALL_FILES = 3,GDGA_VM_FILE = -32768,};
enum MACRO_GFTMF {GFTMF_EXACT_MATCH = 0x8000,GFTMF_SKIP_THIS_NODE = 0x4000,};
enum MACRO_GGAD {GGAD_MULTIPLE_TYPES = 0x40,GGAD_MULTIPLE_INTERVALS = 0x20,GGAD_FIRST_RECIPIENT = 0x1,};
enum MACRO_GIA {GIA_INITIATED_VIA_USER_DO_DIALOG = 0x40,};
enum MACRO_GIA_MODAL {GIA_MODAL = 0x20,};
enum MACRO_GIA_SYS {GIA_SYS_MODAL = 0x10,};
enum MACRO_GIGBT {GIGBT_EXCLUSIVE = 0,GIGBT_EXCLUSIVE_NONE = 1,GIGBT_EXTENDED_SELECTION = 2,GIGBT_NON_EXCLUSIVE = 3,GIGS_NONE = -1,};
enum MACRO_GIGSF {GIGSF_INDETERMINATE = 0x80,GIGSF_MODIFIED = 0x40,};
enum MACRO_GIGT {GIGT_FILE_MENU = 0,GIGT_EDIT_MENU = 1,GIGT_VIEW_MENU = 2,GIGT_OPTIONS_MENU = 3,GIGT_WINDOW_MENU = 4,GIGT_HELP_MENU = 5,GIGT_PRINT_GROUP = 6,};
enum MACRO_GIT {GIT_ORGANIZATIONAL = 0,GIT_PROPERTIES = 1,GIT_PROGRESS = 2,GIT_COMMAND = 3,GIT_NOTIFICATION = 4,GIT_AFFIRMATION = 5,GIT_MULTIPLE_RESPONSE = 6,};
enum MACRO_GIT_FLASHING {GIT_FLASHING = 7,};
enum MACRO_GIV {GIV_NO_PREFERENCE = 0,GIV_POPUP = 1,GIV_SUB_GROUP = 2,GIV_CONTROL_GROUP = 3,GIV_DIALOG = 4,GIV_POPOUT = 5,GIA_NOT_USER_INITIATABLE = 128,};
enum MACRO_GMT {GMT_ENUM = 0,GMT_BUFFER = 1,};
enum MACRO_GO {GO_SHOW_GRID = 0x80,GO_SNAP_TO_GRID = 0x40,};
enum MACRO_GOAAC {GOAAC_DEFAULT_FEATURES = 187,GOAAC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_GOAACF {GOAACF_MM_COPY = 0x80,GOAACF_MM_NOP = 0x40,GOAACF_MM_AND = 0x20,GOAACF_MM_INVERT = 0x10,GOAACF_MM_XOR = 0x8,GOAACF_MM_SET = 0x4,GOAACF_MM_OR = 0x2,GOAACF_TRANSPARENCY = 0x1,};
enum MACRO_GOAAIR {GOAAIR_TRANSPARENT = 0x1,GSF_AREA_COLOR_RELATIVE = 0x8000,};
enum MACRO_GOACF {GOACF_START_ANGLE = 0x8,GOACF_END_ANGLE = 0x4,GOACF_PIE_TYPE = 0x2,GOACF_CHORD_TYPE = 0x1,};
enum MACRO_GOADCF {GOADCF_ALIGN_LEFT = 0x8000,GOADCF_ALIGN_CENTER_HORIZONTALLY = 0x4000,GOADCF_ALIGN_RIGHT = 0x2000,GOADCF_ALIGN_WIDTH = 0x1000,GOADCF_ALIGN_TOP = 0x800,GOADCF_ALIGN_CENTER_VERTICALLY = 0x400,GOADCF_ALIGN_BOTTOM = 0x200,GOADCF_ALIGN_HEIGHT = 0x100,GOADCF_DISTRIBUTE_LEFT = 0x80,GOADCF_DISTRIBUTE_CENTER_HORIZONTALLY = 0x40,GOADCF_DISTRIBUTE_RIGHT = 0x20,GOADCF_DISTRIBUTE_WIDTH = 0x10,GOADCF_DISTRIBUTE_TOP = 0x8,GOADCF_DISTRIBUTE_CENTER_VERTICALLY = 0x4,GOADCF_DISTRIBUTE_BOTTOM = 0x2,GOADCF_DISTRIBUTE_HEIGHT = 0x1,};
enum MACRO_GOAE {GOAE_RULER_CONSTRAIN = 0x40,GOAE_IGNORING_CONSTRAIN = 0x20,GOAE_GAE = 0x1,};
enum MACRO_GOAF {GOAF_DONT_COPY_LOCKS = 0x200,GOAF_HAS_PASTE_INSIDE_CHILDREN = 0x100,GOAF_PASTE_INSIDE = 0x80,GOAF_INSERT_DELETE_MOVE_ALLOWED = 0x40,GOAF_INSERT_DELETE_RESIZE_ALLOWED = 0x20,GOAF_INSERT_DELETE_DELETE_ALLOWED = 0x10,GOAF_INSTRUCTION = 0x8,GOAF_MULTIPLICATIVE_RESIZE = 0x4,};
enum MACRO_GOAM {GOAM_RESIZE = 0x80,GOAM_MOVE = 0x40,GOAM_ROTATE = 0x20,GOAM_CHOOSE = 0x10,GOAM_ACTION_ACTIVATED = 0x8,GOAM_ACTION_PENDING = 0x4,GOAM_ACTION_HAPPENING = 0x2,GOAM_CREATE = 0x1,};
enum MACRO_GOATGC {GOATGC_DEFAULT_FEATURES = 1,GOATGC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_GOATGCF {GOATGCF_ALIGN_TO_GRID = 0x1,};
enum MACRO_GOArcC {GOArcC_DEFAULT_FEATURES = 15,GOArcC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_GOBAAD {GOBAAD_MULTIPLE_ELEMENT_TYPES = 0x8000,GOBAAD_MULTIPLE_STYLE_ELEMENTS = 0x4000,GOBAAD_MULTIPLE_COLORS = 0x2000,GOBAAD_MULTIPLE_BACKGROUND_COLORS = 0x1000,GOBAAD_MULTIPLE_MASKS = 0x800,GOBAAD_MULTIPLE_PATTERNS = 0x400,GOBAAD_MULTIPLE_DRAW_MODES = 0x200,GOBAAD_MULTIPLE_INFOS = 0x100,GOBAAD_MULTIPLE_GRADIENT_END_COLORS = 0x80,GOBAAD_MULTIPLE_GRADIENT_TYPES = 0x40,GOBAAD_MULTIPLE_GRADIENT_INTERVALS = 0x20,GOBAAD_FIRST_RECIPIENT = 0x1,};
enum MACRO_GOBAGOF {GOBAGOF_DRAW_LIST_POSITION = 0x8000,GOBAGOF_REFERENCE = 0x7FFF,GOBAGOF_REFERENCE_OFFSET = 0x0,};
enum MACRO_GOBLAD {GOBLAD_MULTIPLE_STYLE_ELEMENTS = 0x8000,GOBLAD_MULTIPLE_ELEMENT_TYPES = 0x4000,GOBLAD_MULTIPLE_COLORS = 0x2000,GOBLAD_MULTIPLE_ENDS = 0x1000,GOBLAD_MULTIPLE_JOINS = 0x800,GOBLAD_MULTIPLE_WIDTHS = 0x400,GOBLAD_MULTIPLE_MASKS = 0x200,GOBLAD_MULTIPLE_STYLES = 0x100,GOBLAD_ARROWHEAD_ON_START = 0x80,GOBLAD_ARROWHEAD_ON_END = 0x40,GOBLAD_ARROWHEAD_FILLED = 0x20,GOBLAD_ARROWHEAD_FILL_WITH_AREA_ATTRIBUTES = 0x10,GOBLAD_MULTIPLE_MITER_LIMITS = 0x8,GOBLAD_MULTIPLE_ARROWHEAD_ANGLES = 0x4,GOBLAD_MULTIPLE_ARROWHEAD_LENGTHS = 0x2,GOBLAD_FIRST_RECIPIENT = 0x1,};
enum MACRO_GOCCF {GOCCF_CONVERT_TO_GRAPHIC = 0x2,GOCCF_CONVERT_FROM_GRAPHIC = 0x1,};
enum MACRO_GOCCF_ELLIPSE {GOCCF_ELLIPSE = 0x100,GOCCF_LINE = 0x80,GOCCF_ROUNDED_RECTANGLE = 0x40,GOCCF_ARC = 0x20,GOCCF_TRIANGLE = 0x10,GOCCF_HEXAGON = 0x8,GOCCF_OCTOGON = 0x4,GOCCF_FIVE_POINTED_STAR = 0x2,GOCCF_EIGHT_POINTED_STAR = 0x1,};
enum MACRO_GOCDC {GOCDC_DEFAULT_FEATURES = 31,};
enum MACRO_GOCDCF {GOCDCF_MOVE = 0x8,GOCDCF_SCALE = 0x4,GOCDCF_ROTATE = 0x2,GOCDCF_SKEW = 0x1,};
enum MACRO_GOCSC {GOCSC_DEFAULT_FEATURES = 0xF,GOCDCF_REPETITIONS = 0x10,};
enum MACRO_GOCSCF {GOCSCF_POLYGON_RADIUS = 0x4,GOCSCF_NUM_STAR_POINTS = 0x2,GOCSCF_STAR_RADII = 0x1,};
enum MACRO_GODAC {GODAC_DEFAULT_FEATURES = 1,};
enum MACRO_GODACF {GODACF_SET_DEFAULT_ATTRIBUTES = 0x1,};
enum MACRO_GODAC_DEFAULT {GODAC_DEFAULT_TOOLBOX_FEATURES = 1,GOPICF_PASTE_INSIDE = 2,};
enum MACRO_GODCF {GODCF_DUPLICATE = 0x2,GODCF_DUPLICATE_IN_PLACE = 0x1,};
enum MACRO_GODCTF {GODCTF_DUPLICATE = 0x2,GODCTF_DUPLICATE_IN_PLACE = 0x1,};
enum MACRO_GODF {GODF_DRAW_QUICK_VIEW = 0x100,GODF_DRAW_CLIP_ONLY = 0x80,GODF_DRAW_WRAP_TEXT_INSIDE_ONLY = 0x40,GODF_DRAW_WRAP_TEXT_AROUND_ONLY = 0x20,GODF_DRAW_WITH_INCREASED_RESOLUTION = 0x10,GODF_DRAW_INSTRUCTIONS = 0x8,GODF_DRAW_SELECTED_OBJECTS_ONLY = 0x4,GODF_DRAW_OBJECTS_ONLY = 0x2,GODF_PRINT_INSTRUCTIONS = 0x1,};
enum MACRO_GODMC {GODMC_DEFAULT_FEATURES = 1,GOCSCF_NUM_POLYGON_SIDES = 8,};
enum MACRO_GODMCF {GODMCF_DRAFT_MODE = 0x1,};
enum MACRO_GODepthC {GODepthC_DEFAULT_FEATURES = 15,};
enum MACRO_GODepthCF {GODepthCF_SEND_TO_BACK = 0x4,GODepthCF_SHUFFLE_UP = 0x2,GODepthCF_SHUFFLE_DOWN = 0x1,};
enum MACRO_GODepthC_DEFAULT {GODepthC_DEFAULT_TOOLBOX_FEATURES = 15,};
enum MACRO_GOFA {GOFA_RULER_HAS_SEEN_EVENT = 0x200,GOFA_VIEW_ZOOMED = 0x100,GOFA_SNAP_TO = 0x80,GOFA_FROM_CENTER = 0x40,GOFA_ABOUT_OPPOSITE = 0x20,GOFA_CONSTRAIN = 0x10,GOFA_ADJUST = 0x8,GOFA_EXTEND = 0x4,};
enum MACRO_GOFCF {GOFCF_FLIP_HORIZONTALLY = 0x2,GOFCF_FLIP_VERTICALLY = 0x1,};
enum MACRO_GOFS {GOFS_MOUSE_GRAB = 0x8,GOFS_SYS_TARGETED = 0x4,GOFS_TARGETED = 0x2,GOFS_OPEN = 0x1,};
enum MACRO_GOGC {GOGC_DEFAULT_FEATURES = 3,};
enum MACRO_GOGCF {GOGCF_GROUP = 0x2,GOGCF_UNGROUP = 0x1,};
enum MACRO_GOGC_DEFAULT {GOGC_DEFAULT_TOOLBOX_FEATURES = 3,};
enum MACRO_GOGFC {GOGFC_DEFAULT_FEATURES = 31,};
enum MACRO_GOGFCF {GOGFCF_HORIZONTAL_GRADIENT = 0x10,GOGFCF_VERTICAL_GRADIENT = 0x8,GOGFCF_RADIAL_RECT_GRADIENT = 0x4,GOGFCF_RADIAL_ELLIPSE_GRADIENT = 0x2,GOGFCF_NUM_INTERVALS = 0x1,};
enum MACRO_GOHC {GOHC_DEFAULT_FEATURES = 15,GOHC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_GOHCF {GOHCF_SMALL_HANDLES = 0x8,GOHCF_MEDIUM_HANDLES = 0x4,GOHCF_LARGE_HANDLES = 0x2,GOHCF_INVISIBLE_HANDLES = 0x1,};
enum MACRO_GOHS {GOHS_HANDLE_LEFT = 0x8,GOHS_HANDLE_TOP = 0x4,GOHS_HANDLE_RIGHT = 0x2,GOHS_HANDLE_BOTTOM = 0x1,};
enum MACRO_GOHSCF {GOHSCF_SHOW = 0x1,GOHSC_DEFAULT_FEATURES = 0x3,};
enum MACRO_GOICF {GOICF_DRAW = 0x10,GOICF_PRINT = 0x8,GOICF_MAKE_EDITABLE = 0x4,GOICF_MAKE_UNEDITABLE = 0x2,GOICF_DELETE = 0x1,};
enum MACRO_GOICF_DEFAULT {GOICF_DEFAULT_FEATURES = 31,GOAACF_MM_CLEAR = 256,};
enum MACRO_GOIRS {GOIRS_IGNORE_TEMP = 0x4,GOIRS_IGNORE_RECT = 0x2,GOIRS_XOR_CHECK = 0x1,};
enum MACRO_GOL {GOL_COPY = 0x8000,GOL_LOCK = 0x4000,GOL_SHOW = 0x2000,GOL_WRAP = 0x1000,GOL_MOVE = 0x800,GOL_RESIZE = 0x400,GOL_ROTATE = 0x200,GOL_SKEW = 0x100,GOL_EDIT = 0x80,GOL_DELETE = 0x40,GOL_SELECT = 0x20,GOL_ATTRIBUTE = 0x10,GOL_GROUP = 0x8,GOL_UNGROUP = 0x4,GOL_DRAW = 0x2,GOL_PRINT = 0x1,};
enum MACRO_GOLAC {GOLAC_DEFAULT_FEATURES = 31,};
enum MACRO_GOLACF {GOLACF_WIDTH_INDEX = 0x10,GOLACF_WIDTH_VALUE = 0x8,GOLACF_STYLE = 0x4,GOLACF_ARROWHEAD_TYPE = 0x2,GOLACF_ARROWHEAD_WHICH_END = 0x1,};
enum MACRO_GOLACTF {GOLACTF_WIDTH_INDEX = 0x2,GOLACTF_STYLE = 0x1,};
enum MACRO_GOLAC_DEFAULT {GOLAC_DEFAULT_TOOLBOX_FEATURES = 6,GONCF_NUDGE_LEFT = 16,};
enum MACRO_GOLAIR {GOLAIR_ARROWHEAD_ON_END = 0x40,GOLAIR_ARROWHEAD_FILLED = 0x20,GOLAIR_ARROWHEAD_FILL_WITH_AREA_ATTRIBUTES = 0x10,};
enum MACRO_GOLC {GOLC_DEFAULT_TOOLBOX_FEATURES = 0,GODepthCF_BRING_TO_FRONT = 8,};
enum MACRO_GOMOF {GOMOF_GET_DWF_SELECTION_HANDLE_BOUNDS = 0x200,GOMOF_SPECIAL_RESIZE_CONSTRAIN = 0x100,GOMOF_INVALIDATE_LINE = 0x80,GOMOF_INVALIDATE_AREA = 0x40,GOMOF_INVALIDATE = 0x20,GOMOF_NOTIFY_ACTION = 0x10,GOMOF_SEND_UI_NOTIFICATION = 0x8,GOMOF_DRAW_FG_AREA = 0x4,GOMOF_DRAW_FG_LINE = 0x2,GOMOF_DRAW_BG = 0x1,};
enum MACRO_GONCF {GONCF_NUDGE_RIGHT = 0x8,GONCF_NUDGE_UP = 0x4,GONCF_NUDGE_DOWN = 0x2,GONCF_CUSTOM_MOVE = 0x1,};
enum MACRO_GOOAC {GOOAC_INSERT_OR_DELETE_FEATURES = 112,GOOAC_WRAP_FEATURES = 15,};
enum MACRO_GOOACF {GOOACF_INSTRUCTIONS = 0x80,GOOACF_INSERT_OR_DELETE_MOVE = 0x40,GOOACF_INSERT_OR_DELETE_RESIZE = 0x20,GOOACF_INSERT_OR_DELETE_DELETE = 0x10,GOOACF_DONT_WRAP = 0x8,GOOACF_WRAP_INSIDE = 0x4,GOOACF_WRAP_AROUND_RECT = 0x2,GOOACF_WRAP_TIGHTLY = 0x1,};
enum MACRO_GOOAC_DEFAULT {GOOAC_DEFAULT_FEATURES = 255,};
enum MACRO_GOOF {GOOF_ADDED_TO_BODY = 0x80,GOOF_IN_GROUP = 0x40,GOOF_GROBJ_INVALID = 0x20,GOOF_ATTRIBUTE_MANAGER = 0x10,GOOF_FLOATER = 0x8,GOOF_HAS_ACTION_NOTIFICATION = 0x4,GOOF_HAS_UNBALANCED_PARENT_DIMENSIONS = 0x2,};
enum MACRO_GOPIC {GOPIC_DEFAULT_TOOLBOX_FEATURES = 3,};
enum MACRO_GOPICF {GOPICF_BREAKOUT_PASTE_INSIDE = 0x1,GOPICTF_PASTE_INSIDE = 0x2,};
enum MACRO_GOPICTF {GOPICTF_BREAKOUT_PASTE_INSIDE = 0x1,GOPIC_DEFAULT_FEATURES = 0x3,};
enum MACRO_GOPIS {GOPIS_NORMAL = 0x0,GOPIS_EDIT = 0x1,GOPIS_CREATE = 0x2,GOPIS_MOVE = 0x3,GOPIS_RESIZE_ROTATE = 0x4,};
enum MACRO_GORCF {GORCF_45_DEGREES_CW = 0x80,GORCF_90_DEGREES_CW = 0x40,GORCF_135_DEGREES_CW = 0x20,GORCF_180_DEGREES = 0x10,GORCF_135_DEGREES_CCW = 0x8,GORCF_90_DEGREES_CCW = 0x4,GORCF_45_DEGREES_CCW = 0x2,GORCF_CUSTOM_ROTATION = 0x1,};
enum MACRO_GOSCF {GOSCF_HALF_WIDTH = 0x10,GOSCF_HALF_HEIGHT = 0x8,GOSCF_DOUBLE_WIDTH = 0x4,GOSCF_DOUBLE_HEIGHT = 0x2,GOSCF_CUSTOM_SCALE = 0x1,};
enum MACRO_GOSCF_LEFT {GOSCF_LEFT = 0x10,GOSCF_RIGHT = 0x8,GOSCF_UP = 0x4,GOSCF_DOWN = 0x2,GOSCF_CUSTOM_SKEW = 0x1,};
enum MACRO_GOTC {GOTC_DEFAULT_FEATURES = 4095,};
enum MACRO_GOTCF {GOTCF_UNTRANSFORM = 0x1,};
enum MACRO_GOTCF_PTR {GOTCF_PTR = 0x800,GOTCF_ROTATE_PTR = 0x400,GOTCF_ZOOM = 0x200,GOTCF_TEXT = 0x100,GOTCF_LINE = 0x80,GOTCF_RECT = 0x40,GOTCF_ROUNDED_RECT = 0x20,GOTCF_ELLIPSE = 0x10,GOTCF_ARC = 0x8,GOTCF_POLYLINE = 0x4,GOTCF_POLYCURVE = 0x2,GOTCF_SPLINE = 0x1,};
enum MACRO_GOTC_DEFAULT {GOTC_DEFAULT_TOOLBOX_FEATURES = 4095,};
enum MACRO_GOTDF {GOTDF_VAR_DATA = 0x1,GBF_HAS_ACTION_NOTIFICATION = 0x4,};
enum MACRO_GOTM {GOTM_SELECTED = 0x80,GOTM_EDITED = 0x40,GOTM_EDIT_INDICATOR_DRAWN = 0x20,GOTM_HANDLES_DRAWN = 0x10,GOTM_TEMP_HANDLES = 0x8,GOTM_SPRITE_DRAWN = 0x4,GOTM_SPRITE_DRAWN_HI_RES = 0x2,GOTM_SYS_TARGET = 0x1,};
enum MACRO_GOTransformC {GOTransformC_DEFAULT_FEATURES = 1,GOHSCF_HIDE = 2,};
enum MACRO_GOUINT {GOUINT_STYLE = 0x8000,GOUINT_AREA = 0x4000,GOUINT_LINE = 0x2000,GOUINT_GROBJ_SELECT = 0x1000,GOUINT_STYLE_SHEET = 0x800,GOUINT_SELECT = 0x400,};
enum MACRO_GOVGCM {GOVGCM_NO_CREATE = 0x0,GOVGCM_GUARDIAN_CREATE = 0x0,GOVGCM_VIS_WARD_CREATE = 0x0,};
enum MACRO_GOVGF {GOVGF_LARGE = 0x40,GOVGF_UNUSED = 0x20,GOVGF_ALSO_UNUSED = 0x10,GOVGF_APPLY_OBJECT_TO_VIS_TRANSFORM = 0x8,GOVGF_CAN_EDIT_EXISTING_OBJECTS = 0x4,};
enum MACRO_GPC {GPC_DEFAULT_FEATURES = 7,};
enum MACRO_GPCF {GPCF_GOTO_PAGE = 0x4,GPCF_NEXT_PAGE = 0x2,GPCF_PREVIOUS_PAGE = 0x1,};
enum MACRO_GPCTF {GPCTF_PREVIOUS_PAGE = 0x4,GPCTF_GOTO_PAGE = 0x2,GPCTF_NEXT_PAGE = 0x1,};
enum MACRO_GPC_DEFAULT {GPC_DEFAULT_TOOLBOX_FEATURES = 7,GPICF_KEYBOARD = 64,};
enum MACRO_GPIC {GPIC_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_GPICF {GPICF_CHAR_TABLE = 0x20,GPICF_CHAR_TABLE_SYMBOLS = 0x10,GPICF_CHAR_TABLE_INTERNATIONAL = 0x8,GPICF_CHAR_TABLE_MATH = 0x4,GPICF_CHAR_TABLE_CUSTOM = 0x2,GPICF_HWR_ENTRY_AREA = 0x1,};
enum MACRO_GPICTF {GPICTF_INITIATE = 0x1,GPIC_DEFAULT_FEATURES = 0x7D,};
enum MACRO_GPT {GPT_ACTIVE = 0,GPT_DEFAULT = 1,};
enum MACRO_GR {GR_END_GSTRING = 0,GR_COMMENT = 1,GR_NULL_OP = 2,GR_SET_GSTRING_BOUNDS = 3,GR_MISC_4 = 4,GR_MISC_5 = 5,GR_MISC_6 = 6,GR_MISC_7 = 7,GR_MISC_8 = 8,GR_MISC_9 = 9,GR_MISC_A = 10,GR_MISC_B = 11,GR_MISC_C = 12,GR_LABEL = 13,GR_ESCAPE = 14,GR_NEW_PAGE = 15,GR_APPLY_ROTATION = 16,GR_APPLY_SCALE = 17,GR_APPLY_TRANSLATION = 18,GR_APPLY_TRANSFORM = 19,GR_APPLY_TRANSLATION_DWORD = 20,GR_SET_TRANSFORM = 21,GR_SET_NULL_TRANSFORM = 22,GR_SET_DEFAULT_TRANSFORM = 23,GR_INIT_DEFAULT_TRANSFORM = 24,GR_SAVE_TRANSFORM = 25,GR_RESTORE_TRANSFORM = 26,GR_XFORM_1B = 27,GR_XFORM_1C = 28,GR_XFORM_1D = 29,GR_XFORM_1E = 30,GR_XFORM_1F = 31,GR_DRAW_LINE = 32,GR_DRAW_LINE_TO = 33,GR_DRAW_REL_LINE_TO = 34,GR_DRAW_HLINE = 35,GR_DRAW_HLINE_TO = 36,GR_DRAW_VLINE = 37,GR_DRAW_VLINE_TO = 38,GR_DRAW_POLYLINE = 39,GR_DRAW_ARC = 40,GR_DRAW_ARC_3POINT = 41,GR_DRAW_ARC_3POINT_TO = 42,GR_DRAW_REL_ARC_3POINT_TO = 43,GR_DRAW_RECT = 44,GR_DRAW_RECT_TO = 45,GR_DRAW_ROUND_RECT = 46,GR_DRAW_ROUND_RECT_TO = 47,GR_DRAW_SPLINE = 48,GR_DRAW_SPLINE_TO = 49,GR_DRAW_CURVE = 50,GR_DRAW_CURVE_TO = 51,GR_DRAW_REL_CURVE_TO = 52,GR_DRAW_ELLIPSE = 53,GR_DRAW_POLYGON = 54,GR_DRAW_POINT = 55,GR_DRAW_POINT_CP = 56,GR_BRUSH_POLYLINE = 57,GR_DRAW_CHAR = 58,GR_DRAW_CHAR_CP = 59,GR_DRAW_TEXT = 60,GR_DRAW_TEXT_CP = 61,GR_DRAW_TEXT_FIELD = 62,GR_DRAW_TEXT_PTR = 63,GR_DRAW_TEXT_OPTR = 64,GR_DRAW_PATH = 65,GR_FILL_RECT = 66,GR_FILL_RECT_TO = 67,GR_FILL_ROUND_RECT = 68,GR_FILL_ROUND_RECT_TO = 69,GR_FILL_ARC = 70,GR_FILL_POLYGON = 71,GR_FILL_ELLIPSE = 72,GR_FILL_PATH = 73,GR_FILL_ARC_3POINT = 74,GR_FILL_ARC_3POINT_TO = 75,GR_FILL_BITMAP = 76,GR_FILL_BITMAP_CP = 77,GR_FILL_BITMAP_OPTR = 78,GR_FILL_BITMAP_PTR = 79,GR_DRAW_BITMAP = 80,GR_DRAW_BITMAP_CP = 81,GR_DRAW_BITMAP_OPTR = 82,GR_DRAW_BITMAP_PTR = 83,GSE_BITMAP_SLICE = 84,GR_OUTPUT_55 = 85,GR_OUTPUT_56 = 86,GR_OUTPUT_57 = 87,GR_OUTPUT_58 = 88,GR_OUTPUT_59 = 89,GR_OUTPUT_5A = 90,GR_OUTPUT_5B = 91,GR_OUTPUT_5C = 92,GR_OUTPUT_5D = 93,GR_OUTPUT_5E = 94,GR_OUTPUT_5F = 95,GR_SAVE_STATE = 96,GR_RESTORE_STATE = 97,GR_SET_MIX_MODE = 98,GR_MOVE_TO = 99,GR_REL_MOVE_TO = 100,GR_CREATE_PALETTE = 101,GR_DESTROY_PALETTE = 102,GR_SET_PALETTE_ENTRY = 103,GR_SET_PALETTE = 104,GR_SET_LINE_COLOR = 105,GR_SET_LINE_MASK = 106,GR_SET_LINE_COLOR_MAP = 107,GR_SET_LINE_WIDTH = 108,GR_SET_LINE_JOIN = 109,GR_SET_LINE_END = 110,GR_SET_LINE_ATTR = 111,GR_SET_MITER_LIMIT = 112,GR_SET_LINE_STYLE = 113,GR_SET_LINE_COLOR_INDEX = 114,GR_SET_CUSTOM_LINE_MASK = 115,GR_SET_CUSTOM_LINE_STYLE = 116,GR_SET_AREA_COLOR = 117,GR_SET_AREA_MASK = 118,GR_SET_AREA_COLOR_MAP = 119,GR_SET_AREA_ATTR = 120,GR_SET_AREA_COLOR_INDEX = 121,GR_SET_CUSTOM_AREA_MASK = 122,GR_SET_AREA_PATTERN = 123,GR_SET_CUSTOM_AREA_PATTERN = 124,GR_SET_TEXT_COLOR = 125,GR_SET_TEXT_MASK = 126,GR_SET_TEXT_COLOR_MAP = 127,GR_SET_TEXT_STYLE = 128,GR_SET_TEXT_MODE = 129,GR_SET_TEXT_SPACE_PAD = 130,GR_SET_TEXT_ATTR = 131,GR_SET_FONT = 132,GR_SET_TEXT_COLOR_INDEX = 133,GR_SET_CUSTOM_TEXT_MASK = 134,GR_SET_TRACK_KERN = 135,GR_SET_FONT_WEIGHT = 136,GR_SET_FONT_WIDTH = 137,GR_SET_SUPERSCRIPT_ATTR = 138,GR_SET_SUBSCRIPT_ATTR = 139,GR_SET_TEXT_PATTERN = 140,GR_SET_CUSTOM_TEXT_PATTERN = 141,GR_ATTR_8E = 142,GR_ATTR_8F = 143,GR_ATTR_90 = 144,GR_ATTR_91 = 145,GR_ATTR_92 = 146,GR_ATTR_93 = 147,GR_ATTR_94 = 148,GR_ATTR_95 = 149,GR_ATTR_96 = 150,GR_ATTR_97 = 151,GR_ATTR_98 = 152,GR_ATTR_99 = 153,GR_ATTR_9A = 154,GR_ATTR_9B = 155,GR_ATTR_9C = 156,GR_ATTR_9D = 157,GR_ATTR_9E = 158,GR_ATTR_9F = 159,GR_BEGIN_PATH = 160,GR_END_PATH = 161,GR_SET_CLIP_RECT = 162,GR_SET_WIN_CLIP_RECT = 163,GR_CLOSE_SUB_PATH = 164,GR_SET_CLIP_PATH = 165,GR_SET_WIN_CLIP_PATH = 166,GR_SET_STROKE_PATH = 167,GR_PATH_A8 = 168,GR_PATH_A9 = 169,GR_PATH_AA = 170,GR_PATH_AB = 171,GR_PATH_AC = 172,GR_PATH_AD = 173,GR_PATH_AE = 174,GR_PATH_AF = 175,NUM_GSTRING_CMDS = 176,};
enum MACRO_GROBJ {GROBJ_NUDGE_CONTROL_DEFAULT_FEATURES = 31,};
enum MACRO_GROBJ_CONVERT {GROBJ_CONVERT_CONTROL_DEFAULT_FEATURES = 7,};
enum MACRO_GROBJ_CONVERT_CONTROL {GROBJ_CONVERT_CONTROL_DEFAULT_TOOLBOX_FEATURES = 7,GOCCF_RECTANGLE = 512,};
enum MACRO_GROBJ_CREATE {GROBJ_CREATE_CONTROL_DEFAULT_FEATURES = 0x3FB,};
enum MACRO_GROBJ_CREATE_CONTROL {GROBJ_CREATE_CONTROL_DEFAULT_TOOLBOX_FEATURES = 0x3FB,GOLC_DEFAULT_FEATURES = 0xE00,};
enum MACRO_GROBJ_DUPLICATE {GROBJ_DUPLICATE_CONTROL_DEFAULT_FEATURES = 3,};
enum MACRO_GROBJ_DUPLICATE_CONTROL {GROBJ_DUPLICATE_CONTROL_DEFAULT_TOOLBOX_FEATURES = 3,GOCCF_CONVERT_TO_BITMAP = 4,};
enum MACRO_GROBJ_ROTATE {GROBJ_ROTATE_CONTROL_DEFAULT_FEATURES = 0xFF,};
enum MACRO_GROBJ_SCALE {GROBJ_SCALE_CONTROL_DEFAULT_FEATURES = 0x1F,};
enum MACRO_GROBJ_SKEW {GROBJ_SKEW_CONTROL_DEFAULT_FEATURES = 0x1F,};
enum MACRO_GR_CLOCK_COLOR_ESCAPE {GR_CLOCK_COLOR_ESCAPE = 0x4000,};
enum MACRO_GR_FIRST {GR_FIRST_SYSTEM_ESCAPE = 0x0,GR_LAST_SYSTEM_ESCAPE = 0x3FFF,GR_FIRST_GEOWORKS_ESCAPE = 0x4000,GR_LAST_GEOWORKS_ESCAPE = 0x7FFF,GR_FIRST_APPLICATION_ESCAPE = 0x8000,GR_LAST_APPLICATION_ESCAPE = 0xFFFF,};
enum MACRO_GS {GS_NULL = 0,GS_PAUSED = 1,GS_TEMP_PAUSED = 2,GS_MINIMIZED = 3,GS_RUNNING = 4,GS_RESTARTING = 5,GS_GAME_OVER = 6,GS_STOPPED = 7,GSCF_START = 8,};
enum MACRO_GSC {GSC_PARTIAL = 0x200,GSC_ONE = 0x100,GSC_MISC = 0x80,GSC_LABEL = 0x40,GSC_ESCAPE = 0x20,GSC_NEW_PAGE = 0x10,GSC_XFORM = 0x8,GSC_OUTPUT = 0x4,GSC_ATTR = 0x2,GSC_PATH = 0x1,};
enum MACRO_GSCF {GSCF_ABORT = 4,GSCF_PAUSE = 2,GSCF_CONTINUE = 1,};
enum MACRO_GSF {GSF_AREA_MASK_RELATIVE = 0x4000,GSF_LINE_COLOR_RELATIVE = 0x2000,GSF_LINE_MASK_RELATIVE = 0x1000,GSF_LINE_WIDTH_RELATIVE = 0x800,};
enum MACRO_GSIF {GSIF_FROM_START = 0x80,GSIF_FORWARD = 0x40,GSIF_WRAP_AROUND = 0x20,GSIF_INITIAL_ITEM_FOUND = 0x10,GSIF_USABLE_AND_ENABLED_ITEM_FOUND = 0x8,GSIF_EXISTING_ITEMS_ONLY = 0x4,GSIF_DYNAMIC_LIST = 0x2,};
enum MACRO_GSKT {GSKT_KILL_DATA = 0,GSKT_LEAVE_DATA = 1,};
enum MACRO_GSRCAF {GSRCAF_USE_DOC_CLIP_REGION = 0x80,GSRCAF_REF_COUNT = 0x7F,};
enum MACRO_GSSD {GSSD_MULTIPLE_CLASSES = 0x80,GSSD_MULTIPLE_ARC_CLOSE_TYPES = 0x40,GSSD_MULTIPLE_ARC_START_ANGLES = 0x20,GSSD_MULTIPLE_ARC_END_ANGLES = 0x10,};
enum MACRO_GSSF {GSSF_EDITING = 0x20,GSSF_UNGROUPABLE = 0x10,GSSF_TEXT_SELECTED = 0x8,GSSF_BITMAP_SELECTED = 0x4,GSSF_SPLINE_SELECTED = 0x2,GSSF_ARC_SELECTED = 0x1,};
enum MACRO_GSSOP {GSSOP_TYPE = 0xF,};
enum MACRO_GSSPT {GSSPT_SKIP_1 = 0,GSSPT_RELATIVE = 1,GSSPT_BEGINNING = 2,GSSPT_END = 3,};
enum MACRO_GST {GST_CHUNK = 0,GST_STREAM = 1,GST_VMEM = 2,GST_PTR = 3,GST_PATH = 4,};
enum MACRO_GS_USABLE {GS_USABLE = 0x80,GS_ENABLED = 0x40,};
enum MACRO_GTA {GTA_SINGLE_LINE_TEXT = 0x80,GTA_USE_TAB_FOR_NAVIGATION = 0x40,GTA_INIT_SCROLLING = 0x20,GTA_NO_WORD_WRAPPING = 0x10,GTA_ALLOW_TEXT_OFF_END = 0x8,GTA_TAIL_ORIENTED = 0x4,GTA_DONT_SCROLL_TO_CHANGES = 0x2,};
enum MACRO_GTCF {GTCF_TOOL_DIALOG = 0x1,MAX_NUM_TOOLBOXES = 0x19,};
enum MACRO_GTSF {GTSF_INDETERMINATE = 0x80,GTSF_MODIFIED = 0x40,};
enum MACRO_GUO {GUO_EXPAND = 0x1,MIN_MARQUEE_DIMENSION = 0x7,};
enum MACRO_GVA {GVA_CONTROLLED = 0x8000,GVA_GENERIC_CONTENTS = 0x4000,GVA_TRACK_SCROLLING = 0x2000,GVA_DRAG_SCROLLING = 0x1000,GVA_NO_WIN_FRAME = 0x800,GVA_SAME_COLOR_AS_PARENT_WIN = 0x400,GVA_VIEW_FOLLOWS_CONTENT_GEOMETRY = 0x200,GVA_WINDOW_COORDINATE_MOUSE_EVENTS = 0x100,GVA_DONT_SEND_PTR_EVENTS = 0x80,GVA_DONT_SEND_KBD_RELEASES = 0x40,GVA_SEND_ALL_KBD_CHARS = 0x20,GVA_FOCUSABLE = 0x10,GVA_SCALE_TO_FIT = 0x8,GVA_ADJUST_FOR_ASPECT_RATIO = 0x4,};
enum MACRO_GVC {GVC_DEFAULT_FEATURES = 32638,};
enum MACRO_GVCA {GVCA_APPLY_TO_ALL = 0x4000,GVCA_SHOW_HORIZONTAL = 0x2000,GVCA_SHOW_VERTICAL = 0x1000,};
enum MACRO_GVCF {GVCF_MAIN_100 = 0x4000,GVCF_MAIN_SCALE_TO_FIT = 0x2000,GVCF_ZOOM_IN = 0x1000,GVCF_ZOOM_OUT = 0x800,GVCF_REDUCE = 0x400,GVCF_100 = 0x200,GVCF_ENLARGE = 0x100,GVCF_BIG_ENLARGE = 0x80,GVCF_SCALE_TO_FIT = 0x40,GVCF_ADJUST_ASPECT_RATIO = 0x20,GVCF_APPLY_TO_ALL = 0x10,GVCF_SHOW_HORIZONTAL = 0x8,GVCF_SHOW_VERTICAL = 0x4,GVCF_CUSTOM_SCALE = 0x2,GVCF_REDRAW = 0x1,};
enum MACRO_GVCTF {GVCTF_100 = 0x1000,GVCTF_SCALE_TO_FIT = 0x800,GVCTF_ZOOM_IN = 0x400,GVCTF_ZOOM_OUT = 0x200,GVCTF_REDRAW = 0x100,GVCTF_PAGE_LEFT = 0x80,GVCTF_PAGE_RIGHT = 0x40,GVCTF_PAGE_UP = 0x20,GVCTF_PAGE_DOWN = 0x10,GVCTF_ADJUST_ASPECT_RATIO = 0x8,GVCTF_APPLY_TO_ALL = 0x4,GVCTF_SHOW_HORIZONTAL = 0x2,GVCTF_SHOW_VERTICAL = 0x1,};
enum MACRO_GVC_DEFAULT {GVC_DEFAULT_TOOLBOX_FEATURES = 5632,GVC_SUGGESTED_SIMPLE_FEATURES = 30720,};
enum MACRO_GVC_SUGGESTED {GVC_SUGGESTED_INTRODUCTORY_FEATURES = 22528,GVC_SUGGESTED_BEGINNING_FEATURES = 30720,};
enum MACRO_GVDA {GVDA_SCROLLABLE = 0x80,GVDA_SPLITTABLE = 0x40,GVDA_TAIL_ORIENTED = 0x20,GVDA_DONT_DISPLAY_SCROLLBAR = 0x10,GVDA_NO_LARGER_THAN_CONTENT = 0x8,GVDA_NO_SMALLER_THAN_CONTENT = 0x4,GVDA_SIZE_A_MULTIPLE_OF_INCREMENT = 0x2,GVDA_KEEP_ASPECT_RATIO = 0x1,};
enum MACRO_GVDF {GVDF_INTEGER = 0,GVDF_DECIMAL = 1,GVDF_POINTS = 2,GVDF_INCHES = 3,GVDF_CENTIMETERS = 4,GVDF_MILLIMETERS = 5,GVDF_PICAS = 6,GVDF_EUR_POINTS = 7,GVDF_CICEROS = 8,GVDF_POINTS_OR_MILLIMETERS = 9,GVDF_INCHES_OR_CENTIMETERS = 10,GVDF_PERCENTAGE = 11,};
enum MACRO_GVIT {GVIT_PRESSES_ARE_NOT_INK = 0,GVIT_INK_WITH_STANDARD_OVERRIDE = 1,GVIT_PRESSES_ARE_INK = 2,GVIT_QUERY_OUTPUT = 3,};
enum MACRO_GVSF {GVSF_MODIFIED = 0x40,GVSF_OUT_OF_DATE = 0x20,};
enum MACRO_GVSOL {GVSOL_NO_CHANGE = 0x0,};
enum MACRO_GrObjWrapTextType {GrObjWrapTextType = 0x3,GrObjWrapTextType_OFFSET = 0x0,};
enum MACRO_HAF {HAF_ZERO_INIT = 128,HAF_LOCK = 64,HAF_NO_ERR = 32,HAF_UI = 16,HAF_READ_ONLY = 8,HAF_OBJECT_RESOURCE = 4,HAF_CODE = 2,HAF_CONFORMING = 1,};
enum MACRO_HAF_STANDARD {HAF_STANDARD = 0,HAF_STANDARD_NO_ERR = 32,HAF_STANDARD_LOCK = 64,HAF_STANDARD_NO_ERR_LOCK = 96,};
enum MACRO_HALF {HALF = 64,};
enum MACRO_HANDLE {HANDLE_MOVE = 0,HANDLE_CENTER = 0,};
enum MACRO_HANDLE_LEFT {HANDLE_LEFT_TOP = 12,};
enum MACRO_HANDLE_MIDDLE {HANDLE_MIDDLE_TOP = 4,HANDLE_RIGHT_TOP = 6,HANDLE_LEFT_MIDDLE = 8,};
enum MACRO_HANDLE_MIDDLE_BOTTOM {HANDLE_MIDDLE_BOTTOM = 1,HANDLE_RIGHT_BOTTOM = 3,};
enum MACRO_HANDLE_RIGHT {HANDLE_RIGHT_MIDDLE = 2,HANDLE_LEFT_BOTTOM = 9,};
enum MACRO_HC {HC_DEFAULT_FEATURES = 1,};
enum MACRO_HCF {HCF_LIST = 0x1,};
enum MACRO_HCTF {HCTF_TOGGLE = 0x1,};
enum MACRO_HC_DEFAULT {HC_DEFAULT_TOOLBOX_FEATURES = 1,BCC_DEFAULT_FEATURES = 15,};
enum MACRO_HF {HF_FIXED = 0x80,HF_SHARABLE = 0x40,HF_DISCARDABLE = 0x20,HF_SWAPABLE = 0x10,HF_LMEM = 0x8,HF_DISCARDED = 0x2,HF_SWAPPED = 0x1,};
enum MACRO_HF_DYNAMIC {HF_STATIC = 0x30,HF_DYNAMIC = 0x10,};
enum MACRO_HGF {HGF_APP_EXCL = 0x2000,HGF_GRAB = 0x1000,HGF_OTHER_INFO = 0xFFF,};
enum MACRO_HJ {HJ_TOP_JUSTIFY_CHILDREN = 0x0,HJ_BOTTOM_JUSTIFY_CHILDREN = 0x4,HJ_CENTER_CHILDREN_VERTICALLY = 0x8,HJ_FULL_JUSTIFY_CHILDREN_VERTICALLY = 0xC,VCGDA_WIDTH_JUSTIFICATION = 0xC0,};
enum MACRO_HOUR {HOUR_MIN = 0,MINUTE_MAX = 59,};
enum MACRO_HPCF {HPCF_TEXT = 0x80,HPCF_CONTENTS = 0x40,HPCF_HISTORY = 0x20,HPCF_GO_BACK = 0x10,HPCF_CLOSE = 0x8,HPCF_INSTRUCTIONS = 0x4,HPCF_FIRST_AID_GO_BACK = 0x2,HPCF_FIRST_AID = 0x1,};
enum MACRO_HSA {HSA_ONE_SCORE_PER_NAME = 0x40,};
enum MACRO_HSF {HSF_SCORE = 0x8,HSF_DATE = 0x4,HSF_EXTRA_DATA = 0x2,HSF_SHOW_HIGH_SCORES_TRIGGER = 0x1,};
enum MACRO_HT {HT_NORMAL_HELP = 0,HT_FIRST_AID = 1,HT_STATUS_HELP = 2,HT_SIMPLE_HELP = 3,HT_SYSTEM_HELP = 4,HT_SYSTEM_MODAL_HELP = 5,HPCF_HELP = 256,};
enum MACRO_HUIF {HUIF_FLUSHING_QUEUE = 0x80,HUIF_HOLD_UP_MODE_DISABLED = 0x40,};
enum MACRO_HUM {HUM_NOW = 0,HUM_MANUAL = 1,};
enum MACRO_HWRLIB {HWRLIB_PROTO_MAJOR = 2,};
enum MACRO_HWRLIB_PROTO {HWRLIB_PROTO_MINOR = 0,HWRLIB_PROTO_MAJOR_FOR_2_1 = 2,HWR_NUMBER_RESERVED_ENTRIES = 16,HWR_STRING_ESCAPE_VALUE = -255,};
enum MACRO_HWRLS {HWRLS_EQN_LOCK = 0x4,};
enum MACRO_HWRLS_CAP {HWRLS_CAP_LOCK = 0x1,};
enum MACRO_HWRLS_NUM {HWRLS_NUM_LOCK = 0x2,};
enum MACRO_HWRTSS {HWRTSS_NONE = 0,HWRTSS_PUNCTUATION = 1,HWRTSS_EXTENDED = 2,HWRTSS_CASE = 3,HWRTSS_DOWNCASE = 4,};
enum MACRO_IACP {IACP_NO_CONNECTION = 0,};
enum MACRO_IACPCF {IACPCF_OBEY_LAUNCH_MODEL = 0x20,IACPCF_CLIENT_OD_SPECIFIED = 0x10,IACPCF_FIRST_ONLY = 0x8,IACPCF_SERVER_MODE = 0x7,IACPCF_SERVER_MODE_OFFSET = 0x0,};
enum MACRO_IACPSF {IACPSF_MAILBOX_DONT_NOTIFY_USER = 0x40,};
enum MACRO_IACPSM {IACPSM_NOT_USER_INTERACTIBLE = 0,IACPSM_IN_FLUX = 1,IACPSM_USER_INTERACTIBLE = 2,IACPSF_MULTIPLE_INSTANCES = 128,};
enum MACRO_IBS {IBS_1 = 0,IBS_2 = 1,IBS_4 = 2,IBS_8 = 3,IBS_16 = 4,};
enum MACRO_IC {IC_CUSTOM_START = 1000,};
enum MACRO_ICA {ICA_NON_DOCUMENT_IMPORT = 0x4000,};
enum MACRO_ICEF {ICEF_PERMANENT = 0x80,};
enum MACRO_ICF {ICF_PENCIL_TOOL = 0x4,ICF_ERASER_TOOL = 0x2,ICF_SELECTION_TOOL = 0x1,};
enum MACRO_ICF_OPTIONS {ICF_OPTIONS = 0x3,};
enum MACRO_ICO {ICO_FIRST = 0,ICO_LAST = 1,ICO_BEFORE_REFERENCE = 2,ICO_AFTER_REFERENCE = 3,ICF_MARK_DIRTY = -32768,};
enum MACRO_ICTF {ICTF_PENCIL_TOOL = 0x4,ICTF_ERASER_TOOL = 0x2,ICTF_SELECTION_TOOL = 0x1,};
enum MACRO_IC_CHANGE {IC_CHANGE = 11,IC_CANCEL_POPUP_LIST = 12,};
enum MACRO_IC_DEFAULT {IC_DEFAULT_FEATURES = 7,};
enum MACRO_IC_DEFAULT_TOOLBOX {IC_DEFAULT_TOOLBOX_FEATURES = 7,};
enum MACRO_IC_NO {IC_NO_IEEE488 = 0x0,IC_IEEE488 = 0x1,};
enum MACRO_IDBDI {IDBDI_folder = 0,};
enum MACRO_IDC {IDC_TEXT = 0x8000,IDC_GRAPHICS = 0x4000,IDC_SPREADSHEET = 0x2000,IDC_FONT = 0x1000,};
enum MACRO_IDR {IDR_USER_REQUEST = 0x1,IDR_UNEXPECTED_IRLAP_DISCONNECT = 0x2,IDR_FAILED_TO_ESTABLISH_IRLAP_CONNECTION = 0x3,IDR_IRLAP_RESET = 0x4,IDR_LINK_MANAGEMENT_DISCONNECT = 0x5,IDR_DATA_ON_DISCONNECTED_LSAP = 0x6,IDR_NON_RESPONSIVE_LM_MUX_CLIENT = 0x7,IDR_NO_AVAILABLE_LM_MUX_CLIENT = 0x8,IDR_UNSPECIFIED = 0xFF,};
enum MACRO_IDS {IDS_DISCOVERY = 0x0,IDS_CACHED = 0x1,IDS_PASSIVE = 0x2,IDSA_EXTENDED = 0x80,};
enum MACRO_IDSA {IDSA_LAN_ACCESS = 0x40,IDSA_FAX = 0x20,IDSA_MODEM = 0x10,IDSA_PRINTER = 0x8,IDSA_COMPUTER = 0x4,IDSA_PDA = 0x2,IDSA_PNP_COMPATIBLE = 0x1,};
enum MACRO_IDSB {IDSB_EXTENDED = 0x80,IDSB_IRCOMM = 0x4,IDSB_FILE_SERVER = 0x2,IDSB_TELEPHONY = 0x1,};
enum MACRO_IDST {IDST_MOVE_OBJECTS_INSIDE_DELETED_SPACE_BY_AMOUNT_DELETED = 0x10,IDST_MOVE_OBJECTS_INTERSECTING_DELETED_SPACE = 0x8,IDST_RESIZE_OBJECTS_INTERSECTING_SPACE = 0x4,IDST_DELETE_OBJECTS_SHRUNK_TO_ZERO_SIZE = 0x2,IDST_MOVE_OBJECTS_BELOW_AND_RIGHT_OF_INSERT_POINT_OR_DELETED_SPACE = 0x1,};
enum MACRO_IDT {IDT_DISCOVERY = 0x0,IDT_ADDRESS_RESOLUTION = 0x1,DLF_VALID = 0x8000,};
enum MACRO_IF {IF_BORDER = 0x8,IF_BITSIZE = 0x7,};
enum MACRO_IF2 {IF_SELECTING = 0x4000,IF_HAS_TARGET = 0x2000,IF_HAS_SYS_TARGET = 0x1000,IF_DIRTY = 0x800,IF_ONLY_CHILD_OF_CONTENT = 0x400,IF_CONTROLLED = 0x200,IF_INVALIDATE_ERASURES = 0x100,IF_HAS_UNDO = 0x80,};
enum MACRO_IFCC {IFCC_INTACT = 0,IFCC_UPCASE = 1,IFCC_DOWNCASE = 2,IFRF_CHAR_CONVERT = -16384,};
enum MACRO_IFRF {IFRF_READ_ALL = 0x2000,IFRF_FIRST_ONLY = 0x1000,};
enum MACRO_IFRF_CHAR {IFRF_CHAR_CONVERT_OFFSET = 14,};
enum MACRO_IFRF_SIZE {IFRF_SIZE = 0xFFF,};
enum MACRO_IF_BCAST {IF_BCAST = 0x1,IF_MCAST = 0x2,};
enum MACRO_IGVBCRC {IGVBCRC_SUCCESS = 0x0,IGVBCRC_NO_SUCH_CLASS = 0x1,IGVBCRC_NO_SUCH_ATTRIBUTE = 0x2,IGVBCRC_IRLMP_ERROR = 0xFF,};
enum MACRO_IICSC {IICSC_ASCII = 0x0,IICSC_ISO_8859_1 = 0x1,IICSC_ISO_8859_2 = 0x2,IICSC_ISO_8859_3 = 0x3,IICSC_ISO_8859_4 = 0x4,IICSC_ISO_8859_5 = 0x5,IICSC_ISO_8859_6 = 0x6,IICSC_ISO_8859_7 = 0x7,IICSC_ISO_8859_8 = 0x8,IICSC_ISO_8859_9 = 0x9,IICSC_UNICODE = 0xFF,};
enum MACRO_IIVT {IIVT_MISSING = 0x0,IIVT_INTEGER = 0x1,IIVT_OCTET_SEQUENCE = 0x2,IIVT_USER_STRING = 0x3,};
enum MACRO_IMC {IMC_DEFAULT_FEATURES = 1,IMC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_IMCF {IMCF_MAP = 0x1,};
enum MACRO_IMC_MAP {IMC_MAP_MONIKER_SIZE = 1024,};
enum MACRO_IMF {IMF_IMPORT = 0x80,IMF_EXPORT = 0x40,};
enum MACRO_IMPEX {IMPEX_TEMP_NATIVE_FILE = 0x0,};
enum MACRO_IMPORTC {IMPORTC_DEFAULT_FEATURES = 31,};
enum MACRO_IMPORTCF {IMPORTCF_PREVIEW_TRIGGER = 0x20,IMPORTCF_IMPORT_TRIGGER = 0x10,IMPORTCF_FORMAT_OPTIONS = 0x8,IMPORTCF_FILE_MASK = 0x4,IMPORTCF_BASIC = 0x2,IMPORTCF_GLYPH = 0x1,};
enum MACRO_IMPORTCTF {IMPORTCTF_DIALOG_BOX = 0x1,};
enum MACRO_IMPORTC_DEFAULT {IMPORTC_DEFAULT_TOOLBOX_FEATURES = 1,ECA_IGNORE_INPUT = -32768,};
enum MACRO_IMSG {IMSG_IMAGE_PROPERTIES = 1,IMSG_OUTPUT_JPG = 2,IMSG_OUTPUT_RGB = 3,IMSG_OUTPUT_YUV = 4,};
enum MACRO_IMSG_COLORS {IMSG_COLORS_PRESENT = 1,IMSG_COLORS_ABSENT = 2,IMSG_GRABBING_UNUSED = -1,};
enum MACRO_IMSG_ENABLE {IMSG_ENABLE_OPERATION = 0,IMSG_CANCEL_OPERATION = 1,};
enum MACRO_IMSG_JPG {IMSG_JPG = 1,IMSG_RGB_BITMAP = 2,IMSG_YUV_BITMAP = 3,};
enum MACRO_IMSG_OK {IMSG_OK = 1,IMSG_UNSUPPORTED = 2,IMSG_BIT_ERROR = 3,IMSG_OUT_OF_MEMORY = 4,IMSG_READ_ERROR = 5,IMSG_WRITE_ERROR = 6,IMSG_CANCEL_OK = 7,IMSG_INVALID_PARAMETER = 8,IMSG_INVALID_COMBINATION = 9,};
enum MACRO_IMSG_Q {IMSG_Q_CONTROL = 1,IMSG_SIZE_CONTROL = 2,IMSG_NO_SIZE_CONTROL = 3,};
enum MACRO_IMSG_REMOVE {IMSG_REMOVE_COLORS = 1,IMSG_PRESERVE_COLORS = 2,};
enum MACRO_IMSG_STEPLESS {IMSG_STEPLESS_SCALING = 1,IMSG_IDCT_SCALING_8 = 2,IMSG_IDCT_SCALING_4 = 3,IMSG_IDCT_SCALING_2 = 4,IMSG_NO_SCALING = 5,};
enum MACRO_INCT {INCT_INDICATOR_CALL_TYPE_NONE = 1,INCT_INDICATOR_CALL_TYPE_VOICE = 2,INCT_INDICATOR_CALL_TYPE_FAX = 3,INCT_INDICATOR_CALL_TYPE_DATA = 4,};
enum MACRO_INDICATOR {INDICATOR_FREE_SPACE = 7,};
enum MACRO_INDICATOR_MAX {INDICATOR_MAX_DOCUMENT_STRING_LENGTH = 41,};
enum MACRO_INI {INI_CATEGORY_BUFFER_SIZE = 64,};
enum MACRO_INK {INK_DB_PROTOCOL_MAJOR = 1,};
enum MACRO_INK_DB {INK_DB_PROTOCOL_MINOR = 1,};
enum MACRO_INK_DB_MAX {INK_DB_MAX_TITLE_SIZE = 128,};
enum MACRO_INK_DB_MAX_NOTE {INK_DB_MAX_NOTE_KEYWORDS_SIZE = 128,};
enum MACRO_INRT {INRT_INDICATOR_REFRESH_MISSED_CALLS = 1,};
enum MACRO_INSERT {INSERT_COMPUTE_TEXT_LENGTH = 0x1FF,GSSOP_RELAYED_FLAG = 0x8000,};
enum MACRO_INSERT_OK {INSERT_OK = 0,NO_INSERT_DONE = 1,INSERT_FAILED = 2,};
enum MACRO_INVALID {INVALID_EVENT_ID = 0,};
enum MACRO_INVISIBLE {INVISIBLE_RECORD = -1,};
enum MACRO_IP {IP_ADDR_SIZE = 4,MAX_IP_DECIMAL_ADDR_LENGTH = 15,MAX_IP_DECIMAL_ADDR_LENGTH_ZT = 16,MAX_IP_ADDR_STRING_LENGTH = 255,MAX_IP_ADDR_STRING_LENGTH_ZT = 256,};
enum MACRO_IPBR {IPBR_RESERVED_OFFSET = 6,};
enum MACRO_IPBR_57600BPS {IPBR_115200BPS = 32,IPBR_57600BPS = 16,IPBR_38400BPS = 8,IPBR_19200BPS = 4,IPBR_9600BPS = 2,IPBR_2400BPS = 1,};
enum MACRO_IPDS {IPDS_RESERVED = 0xC0,IPDS_RESERVED_OFFSET = 0x6,};
enum MACRO_IPDS_1024BYTES {IPDS_2048BYTES = 32,IPDS_1024BYTES = 16,IPDS_512BYTES = 8,IPDS_256BYTES = 4,IPDS_128BYTES = 2,IPDS_64BYTES = 1,};
enum MACRO_IPLTT {IPLTT_40SEC = 0x80,IPLTT_30SEC = 0x40,IPLTT_25SEC = 0x20,IPLTT_20SEC = 0x10,IPLTT_16SEC = 0x8,IPLTT_12SEC = 0x4,IPLTT_8SEC = 0x2,IPLTT_3SEC = 0x1,QOSF_DEFAULT_PARAMS = 0x8000,};
enum MACRO_IPMT {IPMT_0MS = 0x80,IPMT_001MS = 0x40,IPMT_005MS = 0x20,IPMT_01MS = 0x10,IPMT_05MS = 0x8,IPMT_1MS = 0x4,IPMT_5MS = 0x2,IPMT_10MS = 0x1,};
enum MACRO_IPMTA {IPMTA_RESERVED = 0x80,IPMTA_5MS = 0x40,IPMTA_10MS = 0x20,IPMTA_25MS = 0x10,IPMTA_50MS = 0x8,IPMTA_100MS = 0x4,IPMTA_250MS = 0x2,IPMTA_500MS = 0x1,};
enum MACRO_IPNB {IPNB_0BOF = 0x80,IPNB_1BOF = 0x40,IPNB_2BOF = 0x20,IPNB_3BOF = 0x10,IPNB_5BOF = 0x8,IPNB_12BOF = 0x4,IPNB_24BOF = 0x2,IPNB_48BOF = 0x1,};
enum MACRO_IPWS {IPWS_RESERVED = 0x80,IPWS_7FRAME = 0x40,IPWS_6FRAME = 0x20,IPWS_5FRAME = 0x10,IPWS_4FRAME = 0x8,IPWS_3FRAME = 0x4,IPWS_2FRAME = 0x2,IPWS_1FRAME = 0x1,};
enum MACRO_IRLMP {IRLMP_ANY_LSAP_SEL = 0xFF,};
enum MACRO_IRLMP_HEADER {IRLMP_HEADER_SIZE = 4,TTP_HEADER_SIZE = 5,IRLMP_IAS_MAX_NAME_SIZE = 60,};
enum MACRO_IRLMP_MONITOR {IRLMP_MONITOR_LSAP_SEL = 0x82,IRLMP_PENDING_CONNECT = 0x81,IRLMP_XID_DISCOVERY_SAP = 0x80,IRLMP_IAS_LSAP_SEL = 0x0,IRLMP_CONNECTIONLESS_LSAP_SEL = 0x70,IRLMP_BROADCAST_LSAP_SEL = 0x7F,IRLMP_MAX_LEGAL_LSAP_SEL = 0x80,};
enum MACRO_IS {IS_ICON_RIGHT = 0x40,EFSA_NON_EXCLUSIVE = 0x8000,};
enum MACRO_IUTS {IUTS_1_SLOT = 0x0,IUTS_6_SLOT = 0x1,IUTS_8_SLOT = 0x2,IUTS_16_SLOT = 0x3,};
enum MACRO_IXC {IXC_TERMINATE_STROKE = 0x8000,};
enum MACRO_J {J_LEFT = 0,J_RIGHT = 1,J_CENTER = 2,J_FULL = 3,};
enum MACRO_J2 {J_GENERAL = 3,ROW_HEIGHT_AUTOMATIC = -32768,};
enum MACRO_JC {JC_DEFAULT_FEATURES = 15,};
enum MACRO_JCF {JCF_FULL_CHAR = 0x10,JCF_LEFT = 0x8,JCF_RIGHT = 0x4,JCF_CENTER = 0x2,JCF_FULL = 0x1,};
enum MACRO_JCTF {JCTF_FULL_CHAR = 0x10,JCTF_LEFT = 0x8,JCTF_RIGHT = 0x4,JCTF_CENTER = 0x2,JCTF_FULL = 0x1,};
enum MACRO_JC_DEFAULT {JC_DEFAULT_TOOLBOX_FEATURES = 15,};
enum MACRO_KS {KS_PHYSICAL = 0x8000,KS_ALT = 0x4000,KS_CTRL = 0x2000,KS_SHIFT = 0x1000,KS_CHAR_MASK = 0xFFF,};
enum MACRO_KS_CHAR_SET {KS_CHAR_SET_PRINTABLE = 0x0,KS_CHAR_SET_CONTROL = 0xF,};
enum MACRO_KT {KT_NOT_EXTD = 1,KT_EXTD = 2,KT_BOTH = 3,TOKEN_DELIMITER = 124,};
enum MACRO_LARGEST {LARGEST_POSITIVE_COORDINATE = 0x4000,LARGEST_NEGATIVE_COORDINATE = 0xC000,};
enum MACRO_LARGEST_COLUMN {LARGEST_COLUMN = 255,};
enum MACRO_LARGEST_VISIBLE {LARGEST_VISIBLE_ROW = 16383,LARGEST_ROW = 16511,};
enum MACRO_LASC {LASC_DEFAULT_FEATURES = 31,};
enum MACRO_LASCF {LASCF_SINGLE = 0x10,LASCF_ONE_AND_A_HALF = 0x8,LASCF_DOUBLE = 0x4,LASCF_TRIPLE = 0x2,LASCF_CUSTOM = 0x1,};
enum MACRO_LASCTF {LASCTF_SINGLE = 0x8,LASCTF_ONE_AND_A_HALF = 0x4,LASCTF_DOUBLE = 0x2,LASCTF_TRIPLE = 0x1,};
enum MACRO_LASC_DEFAULT {LASC_DEFAULT_TOOLBOX_FEATURES = 15,};
enum MACRO_LAST {LAST_MIX_MODE = 7,};
enum MACRO_LAST_LINE {LAST_LINE_JOIN_TYPE = 2,};
enum MACRO_LAST_LINE_END {LAST_LINE_END_TYPE = 2,TS_OUTLINE = 64,};
enum MACRO_LAYOUT {LAYOUT_NAME_ARRAY_COLUMN = 0,FFD_ATTRIBUTES_DEFAULT = 1,FFD_ATTRIBUTES_MAX_TEXT_LENGTH = 2,FFD_ATTRIBUTES_MIN_VALUE = 4,FFD_ATTRIBUTES_MAX_VALUE = 8,FFD_ATTRIBUTES_MIN_MAX_VALUE = 12,};
enum MACRO_LBDF {LBDF_SPRITE = 0,LBDF_OBJECT = 1,SIAF_ALL_ASCENDING = 63,};
enum MACRO_LC {LC_DEFAULT_FEATURES = 1,};
enum MACRO_LCF {LCF_LOG_UI = 0x1,};
enum MACRO_LCSDTG {LCSDTG_NO_CONVERT_STRING_2 = 0x2,};
enum MACRO_LCSDTGF {LCSDTGF_NO_CONVERT_STRING_1 = 0x1,GENGO_LONG_NAME_LENGTH = 0x8,};
enum MACRO_LD {LD_ISE_BRITISH = 0x40,LD_IZE_BRITISH = 0x20,LD_AUSTRALIAN = 0x10,LD_FINANCIAL = 0x8,LD_LEGAL = 0x4,LD_MEDICAL = 0x2,LD_SCIENCE = 0x1,};
enum MACRO_LDF {LDF_PRINT_PLURAL_IF_NEEDED = 0x4000,};
enum MACRO_LE {LE_BUTTCAP = 0,LE_ROUNDCAP = 1,LE_SQUARECAP = 2,};
enum MACRO_LECI {LECI_INVALID_CONTACT_ID = 0xFFFF,};
enum MACRO_LED {LED_SENT = 0x0,LED_RECEIVED = 0x2,LED_MISSED = 0x4,LED_ANY = 0x6,};
enum MACRO_LEF {LEF_START_LOGGED = 0x40,LEF_WILDCARD_NUMBER = 0x20,LEF_DO_NOT_STORE_CONTACT_ID = 0x10,};
enum MACRO_LET {LET_CALL = 0x0,LET_FAX = 0x2,LET_SMS = 0x4,LET_DATA_MAILBOX = 0x6,LET_DATA_WWW = 0x8,LET_DATA_TELNET = 0xA,LET_DATA_ANY = 0xC,};
enum MACRO_LET_DATA {LET_DATA = 6,};
enum MACRO_LF {LF_STARTS_PARAGRAPH = 0x8000,LF_ENDS_PARAGRAPH = 0x4000,LF_ENDS_IN_CR = 0x2000,LF_ENDS_IN_COLUMN_BREAK = 0x1000,LF_ENDS_IN_SECTION_BREAK = 0x800,LF_ENDS_IN_NULL = 0x400,LF_NEEDS_DRAW = 0x200,LF_NEEDS_CALC = 0x100,LF_ENDS_IN_AUTO_HYPHEN = 0x80,LF_ENDS_IN_OPTIONAL_HYPHEN = 0x40,LF_INTERACTS_ABOVE = 0x20,LF_INTERACTS_BELOW = 0x10,LF_LAST_CHAR_EXTENDS_RIGHT = 0x8,LF_LAST_CHAR_KERNED = 0x4,LF_CONTAINS_EXTENDED_STYLE = 0x2,};
enum MACRO_LFT {LFT_ALL = 0x0,LFT_NUMBER = 0x2,LFT_TYPE = 0x4,LFT_DIRECTION = 0x6,LFT_DATETIME = 0x8,LFT_CONTACT_ID = 0xA,LFT_CONTACT_AND_DATETIME = 0xC,LFT_MANUALLY_ORIG_CALLS = 0xE,LEF_SHOW_COMPANY_NAME = 0x80,};
enum MACRO_LINE {LINE_ATTR_COLOR_SIZE = 3,};
enum MACRO_LINE_ATTR {LINE_ATTR_END_SIZE = 1,};
enum MACRO_LINE_ATTR_DRAW {LINE_ATTR_DRAW_MODE_SIZE = 1,LINE_ATTR_WIDTH_SIZE = 4,};
enum MACRO_LINE_ATTR_JOIN {LINE_ATTR_JOIN_SIZE = 1,};
enum MACRO_LINE_ATTR_MASK {LINE_ATTR_MASK_SIZE = 1,};
enum MACRO_LINE_ATTR_STYLE {LINE_ATTR_STYLE_SIZE = 1,LINE_ATTR_MITER_LIMIT_SIZE = 4,};
enum MACRO_LINE_ATTR_TYPE {LINE_ATTR_TYPE_SIZE = 1,GOLAIR_ARROWHEAD_ON_START = 128,};
enum MACRO_LITTLE {LITTLE_N = 110,};
enum MACRO_LITTLE_I {LITTLE_I = 105,};
enum MACRO_LJ {LJ_MITERED = 0,LJ_ROUND = 1,LJ_BEVELED = 2,};
enum MACRO_LLC {LLC_DEFAULT_FEATURES = 1,};
enum MACRO_LLCF {LLCF_LOG_UI = 0x1,};
enum MACRO_LMC {LMC_size = -2,};
enum MACRO_LMF {LMF_HAS_FLAGS = 0x8000,LMF_IN_RESOURCE = 0x4000,LMF_DETACHABLE = 0x2000,LMF_DUPLICATED = 0x1000,LMF_RELOCATED = 0x800,LMF_AUTO_FREE = 0x400,LMF_IN_LMEM_ALLOC = 0x200,LMF_IS_VM = 0x100,LMF_NO_HANDLES = 0x80,LMF_NO_ENLARGE = 0x40,LMF_RETURN_ERRORS = 0x20,LMF_DEATH_COUNT = 0x7,};
enum MACRO_LOOPBACK {LOOPBACK_NET = 127,};
enum MACRO_LOW {LOW_C = 262,MIDDLE_C = 523,HIGH_C = 1047,};
enum MACRO_LOW_A {LOW_A_b = 415,MIDDLE_A_b = 831,HIGH_A_b = 1661,};
enum MACRO_LOW_A_0 {LOW_A = 440,MIDDLE_A = 880,HIGH_A = 1760,};
enum MACRO_LOW_A_DSH {LOW_A_DSH = 494,MIDDLE_A_DSH = 988,HIGH_A_DSH = 1976,};
enum MACRO_LOW_A_SH {LOW_A_SH = 466,MIDDLE_A_SH = 932,HIGH_A_SH = 1865,};
enum MACRO_LOW_A_bb {LOW_A_bb = 392,MIDDLE_A_bb = 784,HIGH_A_bb = 1568,};
enum MACRO_LOW_B {LOW_B_b = 466,MIDDLE_B_b = 932,HIGH_B_b = 1865,};
enum MACRO_LOW_B_0 {LOW_B = 494,MIDDLE_B = 988,HIGH_B = 1976,};
enum MACRO_LOW_B_DSH {LOW_B_DSH = 554,MIDDLE_B_DSH = 1109,HIGH_B_DSH = 2218,};
enum MACRO_LOW_B_SH {LOW_B_SH = 523,MIDDLE_B_SH = 1047,HIGH_B_SH = 2094,};
enum MACRO_LOW_B_bb {LOW_B_bb = 440,MIDDLE_B_bb = 880,HIGH_B_bb = 1760,};
enum MACRO_LOW_C {LOW_C_SH = 277,MIDDLE_C_SH = 554,HIGH_C_SH = 1109,};
enum MACRO_LOW_C_DSH {LOW_C_DSH = 294,MIDDLE_C_DSH = 587,HIGH_C_DSH = 1175,};
enum MACRO_LOW_C_bb {LOW_C_bb = 233,MIDDLE_C_bb = 466,HIGH_C_bb = 932,};
enum MACRO_LOW_D {LOW_D_b = 277,MIDDLE_D_b = 554,HIGH_D_b = 1109,};
enum MACRO_LOW_D_0 {LOW_D = 294,MIDDLE_D = 587,HIGH_D = 1175,};
enum MACRO_LOW_D_DSH {LOW_D_DSH = 330,MIDDLE_D_DSH = 659,HIGH_D_DSH = 1319,};
enum MACRO_LOW_D_SH {LOW_D_SH = 311,MIDDLE_D_SH = 622,HIGH_D_SH = 1245,};
enum MACRO_LOW_D_bb {LOW_D_bb = 262,MIDDLE_D_bb = 523,HIGH_D_bb = 1047,};
enum MACRO_LOW_E {LOW_E_b = 311,MIDDLE_E_b = 622,HIGH_E_b = 1245,};
enum MACRO_LOW_E_0 {LOW_E = 330,MIDDLE_E = 659,HIGH_E = 1319,};
enum MACRO_LOW_E_DSH {LOW_E_DSH = 370,MIDDLE_E_DSH = 740,HIGH_E_DSH = 1480,};
enum MACRO_LOW_E_SH {LOW_E_SH = 349,MIDDLE_E_SH = 698,HIGH_E_SH = 1397,};
enum MACRO_LOW_E_bb {LOW_E_bb = 294,MIDDLE_E_bb = 587,HIGH_E_bb = 1175,};
enum MACRO_LOW_F {LOW_F_b = 330,MIDDLE_F_b = 659,HIGH_F_b = 1319,};
enum MACRO_LOW_F_0 {LOW_F = 349,MIDDLE_F = 698,HIGH_F = 1397,};
enum MACRO_LOW_F_DSH {LOW_F_DSH = 392,MIDDLE_F_DSH = 784,HIGH_F_DSH = 1568,};
enum MACRO_LOW_F_SH {LOW_F_SH = 370,MIDDLE_F_SH = 740,HIGH_F_SH = 1480,};
enum MACRO_LOW_F_bb {LOW_F_bb = 311,MIDDLE_F_bb = 622,HIGH_F_bb = 1245,};
enum MACRO_LOW_G {LOW_G_b = 370,MIDDLE_G_b = 740,HIGH_G_b = 1480,};
enum MACRO_LOW_G_0 {LOW_G = 392,MIDDLE_G = 784,HIGH_G = 1568,};
enum MACRO_LOW_G_DSH {LOW_G_DSH = 440,MIDDLE_G_DSH = 880,HIGH_G_DSH = 1760,};
enum MACRO_LOW_G_SH {LOW_G_SH = 415,MIDDLE_G_SH = 831,HIGH_G_SH = 1661,};
enum MACRO_LOW_G_bb {LOW_G_bb = 349,MIDDLE_G_bb = 698,HIGH_G_bb = 1397,};
enum MACRO_LP {LP_IS_PARENT = 1,CCF_MARK_DIRTY = -32768,};
enum MACRO_LS {LS_SOLID = 0,LS_DASHED = 1,LS_DOTTED = 2,LS_DASHDOT = 3,LS_DASHDDOT = 4,LS_CUSTOM = 5,};
enum MACRO_LT {LT_ADDR = 0x0,LT_ID = 0x1,CLIENT_IP_ADDR = 0x5057,SERVER_IP_ADDR = 0x5755,DEFAULT_SERVER_IP_ADDR = 0x4A0A,DEFAULT_CLIENT_IP_ADDR = 0x450A,};
enum MACRO_LT2 {LT_NO_LAYOUT_TYPE = 0x0,LT_SINGLE_RECORD = 0x1,LT_MULTI_RECORD = 0x2,LT_REPORT = 0x4,};
enum MACRO_MACHINEID {MACHINEID_LENGTH = 8,};
enum MACRO_MAEF {MAEF_SYS_EXCL = 0x4000,MAEF_APP_EXCL = 0x2000,MAEF_GRAB = 0x1000,MAEF_FOCUS = 0x800,MAEF_TARGET = 0x400,MAEF_MODEL = 0x200,MAEF_FULL_SCREEN = 0x100,MAEF_MODAL = 0x4,MAEF_OD_IS_WINDOW = 0x2,MAEF_OD_IS_MENU_RELATED = 0x1,};
enum MACRO_MAEF_MASK {MAEF_MASK_OF_ALL_HIERARCHIES = 0xF00,};
enum MACRO_MAILBOX {MAILBOX_ANY_TRANSPORT_OPTION = -1,};
enum MACRO_MAILBOX_MAX {MAILBOX_MAX_SUBJECT = 1024,MAILBOX_ETERNITY = -1,};
enum MACRO_MAILBOX_NOW {MAILBOX_NOW = 0,MSCF_POOF_LIST = 2,};
enum MACRO_MANUFACTURER {MANUFACTURER_ID_GEOWORKS = 0,MANUFACTURER_ID_APP_LOCAL = 1,MANUFACTURER_ID_PALM_COMPUTING = 2,MANUFACTURER_ID_WIZARD = 3,MANUFACTURER_ID_CREATIVE_LABS = 4,MANUFACTURER_ID_DOS_LAUNCHER = 5,MANUFACTURER_ID_AMERICA_ONLINE = 6,MANUFACTURER_ID_INTUIT = 7,MANUFACTURER_ID_SDK = 8,MANUFACTURER_ID_SHAREWARE = 9,MANUFACTURER_ID_GENERIC = 10,MANUFACTURER_ID_NOKIA = 11,MANUFACTURER_ID_SOCKET_16BIT_PORT = 12,MANUFACTURER_ID_DATABASE_FIRST = 16384,MANUFACTURER_ID_DATABASE_LAST = 32767,};
enum MACRO_MANUFACTURER_ID {MANUFACTURER_ID_TBD = 11,MF_CALL = -32768,};
enum MACRO_MARKED {MARKED_RECORD = 0x1,};
enum MACRO_MARKED_RECORD {MARKED_RECORD_COLUMN = 0,NOT_A_RECORD = -1,};
enum MACRO_MASK {MASK_MS_CARD = 4,MASK_MS_LID = 2,MASK_MS_COVER = 1,};
enum MACRO_MAX {MAX_MENU_FONTS = 10,FEF_ALPHABETIZE = 128,};
enum MACRO_MAXIMUM {MAXIMUM_PAGE_HEIGHT_VALUE = 3240,};
enum MACRO_MAXIMUM_LABELS {MAXIMUM_LABELS_ACROSS = 63,};
enum MACRO_MAXIMUM_LABELS_DOWN {MAXIMUM_LABELS_DOWN = 63,PZCA_ACT_LIKE_GADGET = -32768,};
enum MACRO_MAX_ADDRESS {MAX_ADDRESS_DATA_LEN = 150,};
enum MACRO_MAX_ADDRESS2 {MAX_ADDRESS_SIZE = 22,};
enum MACRO_MAX_AUTOMATIC {MAX_AUTOMATIC_FIELD_NAME_SIZE = 15,MAX_NOTES_TEXT_LENGTH = 255,EVAL_BUFFER_SIZE = 1024,};
enum MACRO_MAX_CHARS {MAX_CHARS_FOR_COMMAS_IN_NORMAL_NUMBERS = 7,MAX_DIGITS_FOR_HUGE_NUMBERS = 64,};
enum MACRO_MAX_CHARS_FOR {MAX_CHARS_FOR_COMMAS_IN_HUGE_NUMBERS = 22,};
enum MACRO_MAX_CHARS_FOR_DECIMAL {MAX_CHARS_FOR_DECIMAL_POINT = 1,MAX_CHARS_FOR_EXPONENT = 6,};
enum MACRO_MAX_CHARS_FOR_NULL {MAX_CHARS_FOR_NULL_TERM = 1,MAX_CHARS_FOR_FORMAT_STUFF_IN_NORMAL_NUMBERS = 41,MAX_CHARS_FOR_FORMAT_STUFF_IN_HUGE_NUMBERS = 56,MAX_CHARS_FOR_NORMAL_NUMBER = 78,MAX_CHARS_FOR_HUGE_NUMBER = 121,};
enum MACRO_MAX_CHARS_FOR_PERCENATGE {MAX_CHARS_FOR_PERCENATGE = 1,};
enum MACRO_MAX_COMPANY {MAX_COMPANY_DATA_LEN = 100,MAX_JOB_TITLE_DATA_LEN = 150,};
enum MACRO_MAX_COMPLEX {MAX_COMPLEX_MONIKER_WIDTH = 385,};
enum MACRO_MAX_COMPLEX_MONIKER {MAX_COMPLEX_MONIKER_HEIGHT = 200,};
enum MACRO_MAX_CONTACT {MAX_CONTACT_LOG_ENTRIES = 5000,MAX_RECENT_CONTACTS_ENTRIES = 20,};
enum MACRO_MAX_CONTEXT_NAME_SIZE {MAX_CONTEXT_NAME_SIZE = 0x14,CONTEXT_NAME_BUFFER_SIZE = 0x16,};
enum MACRO_MAX_COORD {MAX_COORD = 16384,MIN_COORD = -16384,};
enum MACRO_MAX_CREATE {MAX_CREATE_NEW_MONIKER_LENGTH = 20,};
enum MACRO_MAX_DASH {MAX_DASH_ARRAY_PAIRS = 5,};
enum MACRO_MAX_DAY {MAX_DAY_LENGTH = 12,};
enum MACRO_MAX_DEVICE {MAX_DEVICE_NAME_SIZE = 40,};
enum MACRO_MAX_DIGITS {MAX_DIGITS_FOR_NORMAL_NUMBERS = 18,};
enum MACRO_MAX_DISPLAY {MAX_DISPLAY_NAME_SIZE = 64,};
enum MACRO_MAX_ENTRY {MAX_ENTRY_LENGTH = 26,};
enum MACRO_MAX_EXPRESSION {MAX_EXPRESSION_STRING_LENGTH = 511,};
enum MACRO_MAX_FIELD {MAX_FIELD_LABEL_LEN_NO_NULL = 31,MAX_FIELD_LABEL_LEN = 32,};
enum MACRO_MAX_FUNCTION {MAX_FUNCTION_STRING_LENGTH = 25,MAX_NUMBER_OF_FUNCTIONS = 255,MAX_FIELD_NAME_LENGTH = 40,};
enum MACRO_MAX_GRAMMAR {MAX_GRAMMAR_STRING = 7,MAX_DEFINITIONS = 30,MAX_DEFINITION_SIZE = 200,MAX_MEANINGS_ARRAY_SIZE = 3000,};
enum MACRO_MAX_GROUP {MAX_GROUP_NAME_LEN = 32,MAX_GROUP_NAME_LEN_WITH_NULL = 34,};
enum MACRO_MAX_GSTATE {MAX_GSTATE_REF_COUNT = 127,CBI_OUTLINE = 128,};
enum MACRO_MAX_INITFILE {MAX_INITFILE_CATEGORY_LENGTH = 64,};
enum MACRO_MAX_LENGTH {MAX_LENGTH_TREASURE_CHEST_MONIKER = 60,};
enum MACRO_MAX_LENGTH_RECORD {MAX_LENGTH_RECORD_CONTROL_PANEL_MONIKER = 40,NLTS_SIGNATURE = -3910,};
enum MACRO_MAX_LOCK {MAX_LOCK_CODE_LENGTH = 10,MAX_LOCK_CODE_LENGTH_WITH_NULL = 11,};
enum MACRO_MAX_MONTH {MAX_MONTH_LENGTH = 32,};
enum MACRO_MAX_NAME {MAX_NAME_LENGTH = 128,MAX_NAME_DEF_LENGTH = 512,};
enum MACRO_MAX_NAMES {MAX_NAMES = 255,};
enum MACRO_MAX_NETWORK {MAX_NETWORK_CODE_LENGTH = 4,MAX_NETWORK_CODE_LENGTH_WITH_NULL = 5,};
enum MACRO_MAX_NEW {MAX_NEW_LOCK_CODE_LENGTH = 5,MAX_NEW_LOCK_CODE_LENGTH_WITH_NULL = 6,MAX_PIN_CODE_LENGTH = 8,MAX_PIN_CODE_LENGTH_WITH_NULL = 9,};
enum MACRO_MAX_NOTE {MAX_NOTE_DATA_LEN = 400,};
enum MACRO_MAX_NUM {MAX_NUM_FIELDS = 255,MAX_NUM_CHARS_IN_CELL = 511,};
enum MACRO_MAX_NUMBER {MAX_NUMBER_FIELD_DATA_LEN = 30,MAX_EMAIL_DATA_LEN = 1024,};
enum MACRO_MAX_NUMBER_OF {MAX_NUMBER_OF_PASTED_LABELS = 256,};
enum MACRO_MAX_NUM_LAYOUTS {MAX_NUM_LAYOUTS = 255,};
enum MACRO_MAX_NUM_OF {MAX_NUM_OF_FILES_COPIED_VIA_IR = 20,FOF_COPY_VIA_IR = 1024,};
enum MACRO_MAX_OPERATOR {MAX_OPERATOR_LENGTH = 4,};
enum MACRO_MAX_PACKAGE {MAX_PACKAGE_NAME_LENGTH = 80,MAX_PACKAGE_SYNOPSIS_LENGTH = 80,MAX_PACKAGE_SIZE_LENGTH = 14,};
enum MACRO_MAX_PACKAGE_NAME {MAX_PACKAGE_NAME_LENGTH_ZT = 81,};
enum MACRO_MAX_PACKAGE_SIZE {MAX_PACKAGE_SIZE_LENGTH_ZT = 15,MAX_PACKAGE_INFO_LENGTH = 177,};
enum MACRO_MAX_PACKAGE_SYNOPSIS {MAX_PACKAGE_SYNOPSIS_LENGTH_ZT = 81,};
enum MACRO_MAX_PAPER {MAX_PAPER_STRING_LENGTH = 48,MAX_PRE_DEFINED_PAPER_SIZES = 128,};
enum MACRO_MAX_PIN2 {MAX_PIN2_CODE_LENGTH = 8,MAX_PIN2_CODE_LENGTH_WITH_NULL = 9,};
enum MACRO_MAX_PIXELS {MAX_PIXELS_TO_MOVE = 5,PROGRESS_BLACK_WIDTH = 155,};
enum MACRO_MAX_PRIORITY {MAX_PRIORITY_LIST_ELEMENTS = 5,};
enum MACRO_MAX_SEPARATOR {MAX_SEPARATOR_LENGTH = 8,};
enum MACRO_MAX_SIM {MAX_SIM_NAME = 30,};
enum MACRO_MAX_SIM_NUMBER {MAX_SIM_NUMBER = 30,CSLF_NAME_SORTED = 128,};
enum MACRO_MAX_SORT {MAX_SORT_KEYS_AND_SUB_TOTAL_FIELDS = 6,NUM_ASCII_DIGITS = 10,};
enum MACRO_MAX_STYLE {MAX_STYLE_SHEET_ATTRS = 4,};
enum MACRO_MAX_SYNONYM {MAX_SYNONYM_SIZE = 26,MAX_SYNONYMS = 80,MAX_SYNONYMS_ARRAY_SIZE = 500,};
enum MACRO_MAX_TEXT {MAX_TEXT_FIELD_LENGTH = 511,};
enum MACRO_MAX_TICK {MAX_TICK_HEIGHT = 8,HALF_ROOT_2 = -19195,};
enum MACRO_MAX_TOKEN {MAX_TOKEN_STREAM_SIZE = 511,};
enum MACRO_MAX_TRACK {MIN_TRACK_KERNING = 0xFF6A,MAX_TRACK_KERNING = 0x1F4,MAX_KERN_VALUE = 0x7FF0,MIN_KERN_VALUE = 0x8001,};
enum MACRO_MAX_URL {MAX_URL_DATA_LEN = 400,};
enum MACRO_MAX_USER {MAX_USER_DEFINED_PAPER_SIZES = 128,MAX_PAPER_SIZES = 256,};
enum MACRO_MAX_YEAR {MAX_YEAR_LENGTH = 12,MAX_WEEKDAY_LENGTH = 32,};
enum MACRO_MB {MB_NO_TIME = -1,};
enum MACRO_MBAI {MBAI_TYPE = 0xC000,MBAI_HAS_ALARM = 0x2000,MBAI_INTERVAL = 0x1FFF,};
enum MACRO_MBAI_HAS {MBAI_HAS_ALARM_OFFSET = 13,MBAI_INTERVAL_OFFSET = 0,};
enum MACRO_MBAI_TYPE {MBAI_TYPE_OFFSET = 14,};
enum MACRO_MBRI {MBRI_WEEK = 0xE000,};
enum MACRO_MBRI_COUNT {MBRI_COUNT = 0x3F8,MBRI_TYPE = 0x7,};
enum MACRO_MBRI_COUNT_OFFSET {MBRI_COUNT_OFFSET = 3,MBRI_TYPE_OFFSET = 0,};
enum MACRO_MBRI_DAY {MBRI_DAY_OFFSET = 10,};
enum MACRO_MBRI_WEEK {MBRI_WEEK_OFFSET = 13,};
enum MACRO_MBRL {MBRL_UNIT = 0xC000,MBRL_COUNT = 0x3FFF,};
enum MACRO_MBRL_UNIT {MBRL_UNIT_OFFSET = 14,MBRL_COUNT_OFFSET = 0,};
enum MACRO_MB_TODO {MB_TODO_NORMAL_PRIORITY = -1,};
enum MACRO_MB_TODO_HIGH {MB_TODO_HIGH_PRIORITY = -1,};
enum MACRO_MC {MC_DEFAULT_FEATURES = 7,MC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_MCF {MCF_PARA_MARGIN = 0x2,MCF_RIGHT_MARGIN = 0x1,};
enum MACRO_MDV {MDV_DELIVER = 0x0,MDV_VIEW = 0x1,MDV_PLAY = 0x2,MDV_ACCEPT = 0x3,MDV_READ = 0x4,MDV_FILE = 0x5,MMF_BODY_DATA_VOLATILE = 0x80,};
enum MACRO_MEASURE {MEASURE_US = 0,MEASURE_METRIC = 1,};
enum MACRO_MEDIA {MEDIA_NONEXISTENT = 0,MEDIA_160K = 1,MEDIA_180K = 2,MEDIA_320K = 3,MEDIA_360K = 4,MEDIA_720K = 5,MEDIA_1M2 = 6,MEDIA_1M44 = 7,MEDIA_2M88 = 8,MEDIA_FIXED_DISK = 9,MEDIA_CUSTOM = 10,MEDIA_SRAM = 11,MEDIA_ATA = 12,MEDIA_FLASH = 13,};
enum MACRO_MEMO {MEMO_FILE_MAJOR_PROTOCOL = 2,MEMO_FILE_MINOR_PROTOCOL = 0,};
enum MACRO_MF {MF_FORCE_QUEUE = 0x4000,MF_STACK = 0x2000,MF_CHECK_DUPLICATE = 0x800,MF_CHECK_LAST_ONLY = 0x400,MF_REPLACE = 0x200,MF_CUSTOM = 0x100,MF_FIXUP_DS = 0x80,MF_FIXUP_ES = 0x40,MF_DISCARD_IF_NO_MATCH = 0x20,MF_MATCH_ALL = 0x10,MF_INSERT_AT_FRONT = 0x8,MF_CAN_DISCARD_IF_DESPERATE = 0x4,MF_RECORD = 0x2,MF_DISPATCH_DONT_FREE = 0x2,};
enum MACRO_MF_NO {MF_NO_MANUAL = 0x0,MF_MANUAL1 = 0x1,MF_MANUAL2 = 0x2,MF_MANUAL3 = 0x3,};
enum MACRO_MIN {MIN_POINT_SIZE = 4,MAX_POINT_SIZE = 792,FIDR_maker = -4096,};
enum MACRO_MINIMUM {MINIMUM_BACKLIGHT_LEVEL = 0,MAXIMUM_BACKLIGHT_LEVEL = 7,EVENT_TEXT_STRING_SIZE = 40,CB_LEFT = 128,};
enum MACRO_MINIMUM_PAGE {MINIMUM_PAGE_WIDTH_VALUE = 36,};
enum MACRO_MINIMUM_PAGE_HEIGHT {MINIMUM_PAGE_HEIGHT_VALUE = 36,MAXIMUM_PAGE_WIDTH_VALUE = 3240,};
enum MACRO_MINUTE {MINUTE_MIN = 0,SECOND_MAX = 59,};
enum MACRO_MIN_0 {MIN = 0,MAX = 1,};
enum MACRO_MIN_LOCK {MIN_LOCK_CODE_LENGTH = 5,};
enum MACRO_MIN_MAP_CHAR {MIN_MAP_CHAR = 0x80,};
enum MACRO_MIN_MAX {MIN_MAX_NUM_CHARS_DISPLAYED = 12,FIELDNAME_NUM_CHARS_DISPLAYED = 40,};
enum MACRO_MIN_MAX_NUM {MIN_MAX_NUM_CHARS_ALLOWED = 25,};
enum MACRO_MIN_NETWORK {MIN_NETWORK_CODE_LENGTH = 4,};
enum MACRO_MIN_PAGE {MIN_PAGE_MARGIN = 36,MAX_PAGE_MARGIN = 216,};
enum MACRO_MIN_PIN {MIN_PIN_CODE_LENGTH = 4,MAX_PUK_CODE_LENGTH = 8,MAX_PUK_CODE_LENGTH_WITH_NULL = 9,};
enum MACRO_MIN_PIN2 {MIN_PIN2_CODE_LENGTH = 4,MAX_PUK2_CODE_LENGTH = 8,MAX_PUK2_CODE_LENGTH_WITH_NULL = 9,};
enum MACRO_MIN_PUK {MIN_PUK_CODE_LENGTH = 8,};
enum MACRO_MIN_PUK2 {MIN_PUK2_CODE_LENGTH = 8,};
enum MACRO_MIN_ROW {MIN_ROW = 0,};
enum MACRO_MM {MM_CLEAR = 0,MM_COPY = 1,MM_NOP = 2,MM_AND = 3,MM_INVERT = 4,MM_XOR = 5,MM_SET = 6,MM_OR = 7,};
enum MACRO_MMC {MMC_NOT_PRESENT = 0x0,MMC_FORMATTED = 0x1,MMC_UNFORMATTED = 0x2,};
enum MACRO_MMF {MMF_SEND_WITHOUT_QUERY = 0x40,MMF_PRIORITY = 0x30,MMF_PRIORITY_OFFSET = 0x4,};
enum MACRO_MMF_DELETE {MMF_DELETE_BODY_AFTER_TRANSMISSION = 0x1,ME_UNRECOVERABLE = 0x8000,};
enum MACRO_MMF_VERB {MMF_VERB = 0xE,MMF_VERB_OFFSET = 0x1,};
enum MACRO_MMM {MMM_MILLIMETER = 0x0,MMM_HALF_CENTIMETER = 0x1,MMM_CENTIMETER = 0x2,};
enum MACRO_MMP {MMP_EMERGENCY = 0x0,MMP_URGENT = 0x1,MMP_FIRST_CLASS = 0x2,MMP_THIRD_CLASS = 0x3,};
enum MACRO_MOC {MOC_DEFAULT_FEATURES = 4,MOC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_MOCF {MOCF_DELETE_MESSAGE = 0x4,MOCF_STOP_SENDING = 0x2,MOCF_START_SENDING = 0x1,};
enum MACRO_MONTH {MONTH_MAX = 12,};
enum MACRO_MONTH_MIN {MONTH_MIN = 1,DAY_MAX = 31,};
enum MACRO_MOT {MOT_ALWAYS_BUSY = 0x0,};
enum MACRO_MOUSE {MOUSE_PROTO_MAJOR = 3,};
enum MACRO_MOUSE2 {MOUSE_CROSS_WIDTH = 5,};
enum MACRO_MOUSE_PROTO {MOUSE_PROTO_MINOR = 0,};
enum MACRO_MPA {MPA_REPLACE_SHIFT = 2,MPA_UPDATE_MODE_SHIFT = 0,};
enum MACRO_MPD {MPD_RETURN_INFO = 0x3C00,};
enum MACRO_MPD_PASS {MPD_PASS_INFO = 0x1FF,};
enum MACRO_MPD_PASS_INFO {MPD_PASS_INFO_OFFSET = 0,DEFAULT_MAX_BLOCK_NUMBER = 100,FOREVER_WAIT = -1,};
enum MACRO_MPD_REGISTER {MPD_REGISTER_PARAMS = 0x200,};
enum MACRO_MPD_RETURN {MPD_RETURN_TYPE_OFFSET = 14,};
enum MACRO_MPD_RETURN_INFO {MPD_RETURN_INFO_OFFSET = 10,};
enum MACRO_MPM {MPM_MEMORY_INFO = 0xFF,};
enum MACRO_MPM2 {MPM_25_POINT = 0x0,MPM_50_POINT = 0x1,MPM_100_POINT = 0x2,};
enum MACRO_MPM_MEMORY {MPM_MEMORY_INFO_OFFSET = 0,};
enum MACRO_MPM_PICA {MPM_PICA = 0x0,MPM_INCH = 0x1,RTCF_DEFAULT = 0x20,};
enum MACRO_MPR {MPR_NONE = 0x0,MPR_CL = 0x1,MPR_CH = 0x2,MPR_DL = 0x3,MPR_DH = 0x4,MPR_CX = 0x5,MPR_DX = 0x6,MPR_BP = 0x7,MPR_PARAM3 = 0x1C0,};
enum MACRO_MPR_PARAM1 {MPR_PARAM1 = 0x7,};
enum MACRO_MPR_PARAM1_OFFSET {MPR_PARAM1_OFFSET = 0,MPD_RETURN_TYPE = -16384,};
enum MACRO_MPR_PARAM2 {MPR_PARAM2 = 0x38,};
enum MACRO_MPR_PARAM2_OFFSET {MPR_PARAM2_OFFSET = 3,};
enum MACRO_MPR_PARAM3 {MPR_PARAM3_OFFSET = 6,};
enum MACRO_MRBWT {MRBWT_AL = 0x0,MRBWT_AH = 0x1,MRBWT_CL = 0x2,MRBWT_CH = 0x3,MRBWT_DL = 0x4,MRBWT_DH = 0x5,MRBWT_BPL = 0x6,MRBWT_BPH = 0x7,MRBWT_AX = 0x8,MRBWT_CX = 0x9,MRBWT_DX = 0xA,MRBWT_BP = 0xB,};
enum MACRO_MRDWR {MRDWR_AX = 0x0,MRDWR_CX = 0x1,MRDWR_DX = 0x2,MRDWR_BP = 0x3,};
enum MACRO_MRF {MRF_PROCESSED = 0x8000,MRF_REPLAY = 0x4000,MRF_PREVENT_PASS_THROUGH = 0x2000,MRF_SET_POINTER_IMAGE = 0x1000,MRF_CLEAR_POINTER_IMAGE = 0x800,};
enum MACRO_MRMT {MRMT_AXBPCXDX = 0x0,MRMT_AXCXDXBP = 0x1,MRMT_CXDXBPAX = 0x2,MRMT_DXCX = 0x3,MRMT_BPAXDXCX = 0x4,MRMT_MULTIPLEAX = 0x5,MTDI_HIGH_REG = 0xC,};
enum MACRO_MRT {MRT_VOID = 0x0,MRT_BYTE_OR_WORD = 0x1,MRT_DWORD = 0x2,MRT_MULTIPLE = 0x3,};
enum MACRO_MRVF {MRVF_ALWAYS_SCROLL = 0x80,MRVF_USE_MARGIN_FROM_TOP_LEFT = 0x40,};
enum MACRO_MS {MS_NONE = 0x0,MS_SQUARE = 0x2,MS_CROSS1 = 0x4,MS_DIAMOND = 0x6,MS_CROSS2 = 0x8,MS_TRIANGLE = 0xA,MS_BAR1 = 0xC,MS_BAR2 = 0xE,MS_CIRCLE = 0x10,};
enum MACRO_MSC {MSC_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_MSCC {MSCC_DEFAULT_FEATURES = 31,};
enum MACRO_MSCCF {MSCCF_COUNT = 0x10,MSCCF_BRIGHT = 0x8,MSCCF_GREY = 0x4,MSCCF_CONTRAST = 0x2,MSCCF_DOUG = 0x1,};
enum MACRO_MSCCTF {MSCCTF_COUNT = 0x10,MSCCTF_BRIGHT = 0x8,MSCCTF_GREY = 0x4,MSCCTF_CONTRAST = 0x2,MSCCTF_DOUG = 0x1,};
enum MACRO_MSCC_DEFAULT {MSCC_DEFAULT_TOOLBOX_FEATURES = 31,};
enum MACRO_MSCF {MSCF_TRANSPORT_LIST = 0x1,MSC_DEFAULT_FEATURES = 0x3,};
enum MACRO_MSCRF {MSCRF_MESSAGE_WAITING = 0x80,MSCRF_BLOCK_DIRTIED = 0x40,};
enum MACRO_MSCTF {MSCTF_SEND_DIALOG = 0x1,};
enum MACRO_MSCTF_DIALOG {MSCTF_DIALOG_COMPLETE = 0x8,MSCTF_CREATION_PENDING = 0x4,MSCTF_NOTIFY_AFTER_REGISTER = 0x2,MSCTF_NON_REENTRANT = 0x1,};
enum MACRO_MSF {MSF_SEP = 0x80,MSF_USABLE = 0x40,MSF_FROM_CHILD = 0x20,};
enum MACRO_MSI {MSI_PARAM_SIZE = 0x7F,};
enum MACRO_MSI_PARAM {MSI_PARAM_SIZE_OFFSET = 0,MPM_C_PARAMS = 256,};
enum MACRO_MSPC {MSPC_DEFAULT_FEATURES = 6,};
enum MACRO_MSPCF {MSPCF_16BIT = 0x4,MSPCF_48BIT = 0x2,MSPCF_FLOATING = 0x1,};
enum MACRO_MSPCTF {MSPCTF_16BIT = 0x4,MSPCTF_48BIT = 0x2,MSPCTF_FLOATING = 0x1,};
enum MACRO_MSPC_DEFAULT {MSPC_DEFAULT_TOOLBOX_FEATURES = 6,TSCF_PLAIN = 2048,};
enum MACRO_MT {MT_CURRENT = 0x0,MT_DESIGN = 0x1,MT_DATA_ENTRY = 0x2,};
enum MACRO_MTDI {MTDI_LOW_REG = 0x3,};
enum MACRO_MTDI_HIGH {MTDI_HIGH_REG_OFFSET = 2,};
enum MACRO_MTDI_LOW {MTDI_LOW_REG_OFFSET = 0,MSI_STRUCT_AT_SS_BP = 128,};
enum MACRO_MUSM {MUSM_EIGHTH_INCH = 0x0,MUSM_QUARTER_INCH = 0x1,MUSM_HALF_INCH = 0x2,MUSM_ONE_INCH = 0x3,};
enum MACRO_MUT {MUT_NONE = 0x0,MUT_INT = 0x1,MUT_MEM_BLOCK = 0x2,MUT_ANY = 0x3,MUT_REASON_ENCLOSED = 0x4,};
enum MACRO_ManualFeed {ManualFeed_OFFSET = 5,AutoSheetFeed = 28,};
enum MACRO_N {N_ROWS_PER_ROW_BLOCK = 32,N_ROW_BLOCKS = 517,};
enum MACRO_NAF {NAF_NAME = 0x80,NAF_DEFINITION = 0x40,NAF_BY_TOKEN = 0x20,NAF_TOKEN_DEFINITION = 0x10,};
enum MACRO_NAME {NAME_ARRAY_MAX_NAME_SIZE = 256,};
enum MACRO_NAME2 {NAME_ROW = 16507,CHART_ROW = 16508,};
enum MACRO_NAME_ARRAY {NAME_ARRAY_MAX_NAME_LENGTH = 255,};
enum MACRO_NAME_ARRAY_MAX {NAME_ARRAY_MAX_DATA_SIZE = 64,NAAF_SET_DATA_ON_REPLACE = -32768,};
enum MACRO_NAME_LIST {NAME_LIST_INCREMENT = 2048,};
enum MACRO_NCF {NCF_IS_COMPOSITE = 0x80,NCF_IS_FOCUSABLE = 0x40,NCF_IS_MENU_RELATED = 0x20,NCF_IS_INPUT_NODE = 0x10,};
enum MACRO_NEC {NEC_DEFAULT_FEATURES = 1,};
enum MACRO_NECF {NECF_STYLES = 0x1,};
enum MACRO_NEF {NEF_STATE_CHANGING = 0x80,};
enum MACRO_NF {NF_UNDEFINED = 0x80,};
enum MACRO_NFF {NFF_LEADING_ZERO = 0x1,};
enum MACRO_NF_COMPLETED {NF_COMPLETED_CIRCUIT = 0x8000,NF_REACHED_ROOT = 0x4000,NF_NAV_MENU_BAR = 0x20,NF_INITIATE_QUERY = 0x8,NF_SKIP_NODE = 0x4,NF_TRAVEL_CIRCUIT = 0x2,NF_BACKTRACK_AFTER_TRAVELING = 0x1,};
enum MACRO_NO {NO_ERROR_RETURNED = 0,};
enum MACRO_NOTES {NOTES_FILE_MAJOR_PROTOCOL = 2,NOTES_FILE_MINOR_PROTOCOL = 0,};
enum MACRO_NO_IDEA {NO_IDEA_FORMAT = -1,};
enum MACRO_NO_WAIT {NO_WAIT = 0x0,RESIZE_QUEUE = 0x1,};
enum MACRO_NRT {NRT_REGULAR = 0x1,NRT_LOAD_FROM_TEMP_VISUAL_UPDATE_ROW = 0x2,};
enum MACRO_NT {NT_VALUE = 0,NT_BOOLEAN = 1,NT_DATE_TIME = 2,ESAT_EMPTY = 128,};
enum MACRO_NT2 {NT_INK = 0,NT_TEXT = 1,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_NULL2 {NULL_UNDO_CONTEXT = 0,};
enum MACRO_NULL_GROUP {NULL_GROUP_ID = 0,CONTACT_MAX_NUMBER_DBS = 20,CONTACT_EXPORT_ALL_RECORDS = -1,};
enum MACRO_NUM {NUM_ASCII_FRACTIONAL_DIGITS = 5,};
enum MACRO_NUMBER {NUMBER_OF_STANDARD_FILES = 4,};
enum MACRO_NUMBER2 {NUMBER_IMPEX_DATA_CLASSES = 4,XLAT_TOKEN_TEXT_12 = 19540,XLAT_TOKEN_TEXT_34 = 22612,};
enum MACRO_NullChunk {NullChunk = 0,};
enum MACRO_NullClass {NullClass = 0,};
enum MACRO_NullDBGroupAndItem {NullDBGroupAndItem = 0,};
enum MACRO_NullHandle {NullHandle = 0,};
enum MACRO_NullOptr {NullOptr = 0,};
enum MACRO_OB {OB_NO_OUTPUTBIN = 0x0,OB_OUTPUTBIN1 = 0x1,OB_OUTPUTBIN2 = 0x2,OB_OUTPUTBIN3 = 0x3,OutputCopies = 0x80,};
enum MACRO_OBEX {OBEX_MAX_TYPE_HEADER_LENGTH = 64,};
enum MACRO_OBEXHI {OBEXHI_COUNT = 0x0,OBEXHI_NAME = 0x1,OBEXHI_TYPE = 0x2,OBEXHI_LENGTH = 0x3,OBEXHI_TIME = 0x4,OBEXHI_DESCRIPTION = 0x5,OBEXHI_TARGET = 0x6,OBEXHI_HTTP = 0x7,OBEXHI_BODY = 0x8,OBEXHI_END_OF_BODY = 0x9,OBEXHI_WHO = 0xA,OBEXHI_USER_DEFINED = 0x30,};
enum MACRO_OBEXHT {OBEXHT_UNICODEZ = 0x0,OBEXHT_BINARY = 0x40,OBEXHT_BYTE = 0x80,OBEXHT_DWORD = 0xC0,};
enum MACRO_OBEXLE {OBEXLE_OK = 0x0,OBEXLE_OPERATION_ABORTED = 0x1,OBEXLE_NO_CONNECTION = 0x2,OBEXLE_OPERATION_NOT_IN_PROGRESS = 0x3,OBEXLE_ALREADY_INITIALIZED = 0x4,OBEXLE_BAD_SERVER_STATE = 0x5,OBEXLE_CANT_INITIALIZE_SERVER = 0x6,OBEXLE_FILE_ERROR = 0x7,OBEXLE_NO_OBEX_SERVICE = 0x8,};
enum MACRO_OBEXR {OBEXR_CONNECT = 0x0,OBEXR_DISCONNECT = 0x1,OBEXR_PUT = 0x2,OBEXR_GET = 0x3,OBEXR_SETPATH = 0x5,OBEXR_ABORT = 0x7F,};
enum MACRO_OBEXRC {OBEXRC_CONTINUE = 0x10,OBEXRC_SWITCHING_PROTOCOLS = 0x11,OBEXRC_SUCCESS = 0x20,OBEXRC_CREATED = 0x21,OBEXRC_ACCEPTED = 0x22,OBEXRC_NON_AUTHORITATIVE_INFO = 0x23,OBEXRC_NO_CONTENT = 0x24,OBEXRC_RESET_CONTENT = 0x25,OBEXRC_PARTIAL_CONTENT = 0x26,OBEXRC_MULTIPLE_CHOICES = 0x30,OBEXRC_MOVED_PERMANENTLY = 0x31,OBEXRC_MOVED_TEMPORARILY = 0x32,OBEXRC_SEE_OTHER = 0x33,OBEXRC_NOT_MODIFIED = 0x34,OBEXRC_USE_PROXY = 0x35,OBEXRC_BAD_REQUEST = 0x40,OBEXRC_UNAUTHORIZED = 0x41,OBEXRC_PAYMENT_REQUIRED = 0x42,OBEXRC_FORBIDDEN = 0x43,OBEXRC_NOT_FOUND = 0x44,OBEXRC_METHOD_NOT_ALLOWED = 0x45,OBEXRC_NOT_ACCEPTABLE = 0x46,OBEXRC_PROXY_AUTH_REQUIRED = 0x47,OBEXRC_REQUEST_TIME_OUT = 0x48,OBEXRC_CONFLICT = 0x49,OBEXRC_GONE = 0x4A,OBEXRC_LENGTH_REQUIRED = 0x4B,OBEXRC_PRECONDITION_FAILED = 0x4C,OBEXRC_REQUESTED_ENTITY_TOO_LARGE = 0x4D,OBEXRC_REQUEST_URL_TOO_LARGE = 0x4E,OBEXRC_UNSUPPORTED_MEDIA_TYPE = 0x4F,OBEXRC_INTERNAL_SERVER_ERROR = 0x50,OBEXRC_NOT_IMPLEMENTED = 0x51,OBEXRC_BAD_GATEWAY = 0x52,OBEXRC_SERVICE_UNAVAILABLE = 0x53,OBEXRC_GATEWAY_TIMEOUT = 0x54,OBEXRC_HTTP_VERSION_NOT_SUPPORTED = 0x55,OBEXRC_FINAL = 0x80,};
enum MACRO_OBEXSPF {OBEXSPF_PARENT = 0x1,PCCIF_NOTIFY_OUTPUT = 0x8000,};
enum MACRO_OC {OC_NO_COPIES = 0x0,OC_COPIES = 0x1,};
enum MACRO_OCF {OCF_VARDATA_RELOC = 16,OCF_DIRTY = 8,OCF_IGNORE_DIRTY = 4,OCF_IN_RESOURCE = 2,OCF_IS_OBJECT = 1,};
enum MACRO_OD {OD_SIMPLEX = 0x0,OD_DUPLEXLO = 0x1,OD_DUPLEXSO = 0x2,};
enum MACRO_ODD {ODD_EVEN = 0,WINDING = 1,};
enum MACRO_OFFSET {OFFSET_FOR_TYPE_RUNS = 0,OFFSET_FOR_GRAPHIC_RUNS = 1,VTUGF_RECALC = -32768,};
enum MACRO_OICF {OICF_KEEP_IRDA_ALIVE = 0x8000,};
enum MACRO_ONE {ONE_HUNDRED_TWENTY_EIGHTH = 1,DOUBLE_DOT_WHOLE = 224,};
enum MACRO_OP {OP_RANGE_SEPARATOR = 0,OP_NEGATION = 1,OP_PERCENT = 2,OP_EXPONENTIATION = 3,OP_MULTIPLICATION = 4,OP_DIVISION = 5,OP_MODULO = 6,OP_ADDITION = 7,OP_SUBTRACTION = 8,OP_EQUAL = 9,OP_NOT_EQUAL = 10,OP_LESS_THAN = 11,OP_GREATER_THAN = 12,OP_LESS_THAN_OR_EQUAL = 13,OP_GREATER_THAN_OR_EQUAL = 14,OP_STRING_CONCAT = 15,OP_RANGE_INTERSECTION = 16,OP_NOT_EQUAL_GRAPHIC = 17,OP_DIVISION_GRAPHIC = 18,OP_LESS_THAN_OR_EQUAL_GRAPHIC = 19,OP_GREATER_THAN_OR_EQUAL_GRAPHIC = 20,OP_PERCENT_MODULO = 21,OP_SUBTRACTION_NEGATION = 22,};
enum MACRO_ORS {ORS_NULL = 0,ORS_OWNING_GEODE = 1,ORS_KERNEL = 2,ORS_LIBRARY = 3,ORS_CURRENT_BLOCK = 4,ORS_VM_HANDLE = 5,ORS_OWNING_GEODE_ENTRY_POINT = 6,ORS_NON_STATE_VM = 7,ORS_UNKNOWN_BLOCK = 8,ORS_EXTERNAL = 9,RID_SOURCE_OFFSET = 12,};
enum MACRO_OS {OS_NO_SORTER = 0x0,OS_SORTER = 0x1,};
enum MACRO_OTHER {OTHER_ZERO_WIDTH_TAB = 0x7E,};
enum MACRO_OutputBin {OutputBin = 0x3,};
enum MACRO_OutputBin_OFFSET {OutputBin_OFFSET = 0x0,};
enum MACRO_OutputDuplex {OutputDuplex = 0x30,};
enum MACRO_OutputDuplex_OFFSET {OutputDuplex_OFFSET = 0x4,StapledOutput = 0x8,};
enum MACRO_OutputSorter {OutputSorter = 0x4,};
enum MACRO_PA {PA_REBOOT_IF_CHANGED = 0x80,PA_LOAD_IF_USABLE = 0x40,PA_SAVE_IF_USABLE = 0x20,PA_SAVE_IF_ENABLED = 0x10,PA_SAVE_IF_CHANGED = 0x8,};
enum MACRO_PAC {PAC_DEFAULT_FEATURES = 31,PAC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_PACF {PACF_HIDDEN_TEXT = 0x8,PACF_KEEP_PARA_WITH_NEXT = 0x4,PACF_KEEP_PARA_TOGETHER = 0x2,PACF_KEEP_LINES = 0x1,};
enum MACRO_PAGE {PAGE_MARGIN_INCREMENT = 18,RUDY_HELP_CHAR = -248,};
enum MACRO_PARALLEL {PARALLEL_DEVICE_LPT4_OFFSET = 6,PARALLEL_DEVICE_LPT4 = 64,};
enum MACRO_PARALLEL_DEVICE {PARALLEL_DEVICE_LPT3_OFFSET = 4,PARALLEL_DEVICE_LPT3 = 16,};
enum MACRO_PARALLEL_DEVICE_LPT1 {PARALLEL_DEVICE_LPT1_OFFSET = 0,PARALLEL_DEVICE_LPT1 = 1,PARALLEL_ERROR_FATAL_OFFSET = 9,PARALLEL_ERROR_FATAL = 512,};
enum MACRO_PARALLEL_DEVICE_LPT2 {PARALLEL_DEVICE_LPT2_OFFSET = 2,PARALLEL_DEVICE_LPT2 = 4,};
enum MACRO_PARALLEL_ERROR {PARALLEL_ERROR_TIMEOUT_OFFSET = 8,PARALLEL_ERROR_TIMEOUT = 256,};
enum MACRO_PARALLEL_ERROR_ERROR {PARALLEL_ERROR_ERROR_OFFSET = 3,PARALLEL_ERROR_ERROR = 8,};
enum MACRO_PARALLEL_ERROR_NOPAPER {PARALLEL_ERROR_NOPAPER_OFFSET = 5,};
enum MACRO_PARALLEL_ERROR_OFFLINE {PARALLEL_ERROR_OFFLINE_OFFSET = 4,PARALLEL_ERROR_OFFLINE = 16,};
enum MACRO_PARSER {PARSER_TOKEN_NUMBER = 0,PARSER_TOKEN_STRING = 1,PARSER_TOKEN_CELL = 2,PARSER_TOKEN_END_OF_EXPRESSION = 3,PARSER_TOKEN_OPEN_PAREN = 4,PARSER_TOKEN_CLOSE_PAREN = 5,PARSER_TOKEN_NAME = 6,PARSER_TOKEN_FUNCTION = 7,PARSER_TOKEN_CLOSE_FUNCTION = 8,PARSER_TOKEN_ARG_END = 9,PARSER_TOKEN_OPERATOR = 10,};
enum MACRO_PASC {PASC_DEFAULT_FEATURES = 3,PASC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_PASCF {PASCF_SPACE_ON_TOP = 0x2,PASCF_SPACE_ON_BOTTOM = 0x1,};
enum MACRO_PASSWORD {PASSWORD_ENCRYPTED_SIZE = 8,MAX_PASSWORD_SOURCE_SIZE = 32,KRF_PREVENT_PASS_THROUGH = -32768,};
enum MACRO_PATTERN_SIZE {PATTERN_SIZE = 0x8,};
enum MACRO_PBGCC {PBGCC_DEFAULT_FEATURES = 15,};
enum MACRO_PBGCC_DEFAULT {PBGCC_DEFAULT_TOOLBOX_FEATURES = 7,PACF_WORD_WRAP = 16,};
enum MACRO_PCA {PCA_SEE_IF_DOC_WILL_FIT = 0x4000,PCA_MARK_APP_BUSY = 0x2000,PCA_VERIFY_PRINT = 0x1000,PCA_SHOW_PROGRESS = 0x800,PCA_PROGRESS_PERCENT = 0x400,PCA_PROGRESS_PAGE = 0x200,PCA_FORCE_ROTATION = 0x100,PCA_COPY_CONTROLS = 0x80,PCA_PAGE_CONTROLS = 0x40,PCA_QUALITY_CONTROLS = 0x20,PCA_USES_DIALOG_BOX = 0x10,PCA_GRAPHICS_MODE = 0x8,PCA_TEXT_MODE = 0x4,PCA_DEFAULT_QUALITY = 0x3,};
enum MACRO_PCC {PCC_FRANCE = 0x0,PCC_GERMANY = 0x1,PCC_UK = 0x2,PCC_DENMARK1 = 0x3,PCC_SWEDEN = 0x4,PCC_ITALY = 0x5,PCC_SPAIN1 = 0x6,PCC_JAPAN = 0x7,PCC_NORWAY = 0x8,PCC_DENMARK2 = 0x9,PCC_SPAIN2 = 0xA,PCC_LAT_AMERICA = 0xB,PCC_LEGAL = 0xC,PCC_USA = 0xFF,};
enum MACRO_PCCAT {PCCAT_DEFAULT_ABORT = 0,PCCAT_CONNECTION_LOST = 1,PCCAT_FILE_NOT_FOUND = 2,PCCAT_PATH_NOT_FOUND = 3,PCCAT_INVALID_PATH_NAME = 4,PCCAT_ACCESS_DENIED = 5,PCCAT_INVALID_FILE_NAME = 6,PCCAT_FILE_IN_USE = 7,PCCAT_VOLUME_OUT_OF_SPACE = 8,PCCAT_VOLUME_UNAVAILABLE = 9,PCCAT_FILE_READ_ONLY = 10,PCCAT_SHORT_READ_WRITE = 11,PCCAT_INVALID_DRIVE = 15,PCCAT_VOLUME_WRITE_PROTECTED = 19,PCCAT_EXTERNAL_ABORT = 20,PCCAT_INTERNAL_RESERVED_ABORT_TYPE = 21,PCCAT_FILE_IS_VOLUME = 22,PCCAT_FILE_IS_DIRECTORY = 23,PCCAT_DIRECTORY_NAME_EXISTS = 24,PCCAT_TOO_MANY_DIRECTORIES = 25,PCCAT_REMOTE_ABORT = 128,PCCAT_REMOTE_CONNECTION_LOST = 129,PCCAT_REMOTE_FILE_NOT_FOUND = 130,PCCAT_REMOTE_PATH_NOT_FOUND = 131,PCCAT_REMOTE_INVALID_PATH_NAME = 132,PCCAT_REMOTE_ACCESS_DENIED = 133,PCCAT_REMOTE_INVALID_FILE_NAME = 134,PCCAT_REMOTE_FILE_IN_USE = 135,PCCAT_REMOTE_VOLUME_OUT_OF_SPACE = 136,PCCAT_REMOTE_VOLUME_UNAVAILABLE = 137,PCCAT_REMOTE_FILE_READ_ONLY = 138,PCCAT_REMOTE_SHORT_READ_WRITE = 139,PCCAT_REMOTE_INVALID_DRIVE = 143,PCCAT_REMOTE_VOLUME_WRITE_PROTECTED = 147,PCCAT_REMOTE_EXTERNAL_ABORT = 148,PCCAT_REMOTE_RESERVED_ABORT_TYPE = 149,PCCAT_REMOTE_FILE_IS_VOLUME = 150,PCCAT_REMOTE_FILE_IS_DIRECTORY = 151,PCCAT_REMOTE_DIRECTORY_NAME_EXISTS = 152,PCCAT_REMOTE_TOO_MANY_DIRECTORIES = 153,};
enum MACRO_PCCDDL {PCCDDL_MID_DETAIL = 77,};
enum MACRO_PCCDDL_FULL {PCCDDL_FULL_DETAIL = 76,};
enum MACRO_PCCEP {PCCEP_INIT = 0,PCCEP_EXIT = 1,PCCEP_ABORT = 2,IF_MOUSE_FLAGS = -32768,};
enum MACRO_PCCF {PCCF_LOG_UI = 0x1,};
enum MACRO_PCCIF {PCCIF_NOTIFY_EXIT = 0x4000,PCCIF_IMMEDIATE_EXIT = 0x2000,};
enum MACRO_PCCIF_IR {PCCIF_IR_STREAM = 0x1,PCCIF_SERSOCK_STREAM = 0x2,PCCDDL_LOW_DETAIL = 0x53,};
enum MACRO_PCCRT {PCCRT_NO_ERROR = 0,PCCRT_CANNOT_LOAD_SERIAL_DRIVER = 1,PCCRT_CANNOT_CREATE_THREAD = 2,PCCRT_CANNOT_ALLOC_STREAM = 3,PCCRT_ALREADY_INITIALIZED = 4,PCCRT_IN_USE = 5,PCCRT_BUSY = 6,PCCRT_NOT_INITIALIZED = 7,PCCRT_MEMORY_ALLOC_ERROR = 8,PCCRT_BAD_DEST_PATH = 9,PCCRT_FILE_STARTING = 10,PCCRT_TRANSFER_CONTINUES = 11,PCCRT_FILE_COMPLETE = 12,PCCRT_TRANSFER_COMPLETE = 13,PCCRT_COMMAND_ABORTED = 14,PCCRT_TOO_MUCH_OUTPUT = 15,};
enum MACRO_PCC_DEFAULT {PCC_DEFAULT_FEATURES = 1,};
enum MACRO_PCF {PCF_DELETE_IF_SELECTED = 0x80,};
enum MACRO_PCO {PCO_PORTAIT = 0,PCO_LANDSCAPE = 1,};
enum MACRO_PCT {PCT_EQUAL = 0,PCT_SUBDIR = 1,PCT_UNRELATED = 2,PCT_ERROR = 3,};
enum MACRO_PCT2 {PCT_0 = 0x0,PCT_5 = 0x33,PCT_10 = 0x66,PCT_15 = 0x99,PCT_20 = 0xCC,PCT_25 = 0x100,PCT_30 = 0x133,PCT_35 = 0x166,PCT_40 = 0x199,PCT_45 = 0x1CC,PCT_50 = 0x200,PCT_55 = 0x233,PCT_60 = 0x266,PCT_65 = 0x299,PCT_70 = 0x2CC,PCT_75 = 0x300,PCT_80 = 0x333,PCT_85 = 0x366,PCT_90 = 0x399,PCT_95 = 0x3CC,PCT_100 = 0x3FF,};
enum MACRO_PDAT {PDAT_PC_EMULATOR = 0x0,PDAT_N9000 = 0x1,PDAT_N9000i = 0x2,PDAT_N9110 = 0x3,PDAHI_BACKLIGHT_AVAILABLE = 0x4,};
enum MACRO_PDL {PDL_CHAR_BUFFER_SIZE = 32,PDL_CHAR_MAX_COUNT = 31,};
enum MACRO_PDT {PDT_PRINTER = 0,PDT_PLOTTER = 1,PDT_FACSIMILE = 2,PDT_CAMERA = 3,PDT_OTHER = 4,PDT_ALL = -1,};
enum MACRO_PDT_ALL {PDT_ALL_LOCAL_AND_NETWORK = 0xFF,};
enum MACRO_PEC {PEC_FORM_FEED = 0,PEC_NO_FORM_FEED = 1,};
enum MACRO_PEF {PEF_DISABLE_IF_SELECTED = 0x80,PEF_DISABLE_IF_NONE = 0x40,};
enum MACRO_PF {PF_HAS_LOOKAHEAD = 128,PF_CONTAINS_DISPLAY_FUNC = 64,PF_OPERATORS = 32,PF_NUMBERS = 16,PF_CELLS = 8,PF_FUNCTIONS = 4,PF_NAMES = 2,PF_NEW_NAMES = 1,};
enum MACRO_PIA {PIA_LOAD_OPTIONS_ON_INITIATE = 0x80,PIA_SAVE_OPTIONS_ON_APPLY = 0x40,PIA_COMPLETE_INTERACTION_ON_APPLY = 0x20,};
enum MACRO_PID {PID_LENGTH = 2,BFTP_ERROR_PDU_LENGTH = 14,};
enum MACRO_PIFF {PIFF_USE_ITEM_STRINGS = 0x80,PIFF_USE_ITEM_MONIKERS = 0x40,PIFF_APPEND_TO_KEY = 0x20,PIFF_ABSENT_KEY_OVERRIDES_DEFAULTS = 0x10,PIFF_SUSPEND_ON_LOAD_OPTIONS = 0x8,};
enum MACRO_PIXELS {PIXELS_PER_INCH = 72,};
enum MACRO_PLE {PLE_ORIENTATION = 8,PLE_TYPE = 7,PLL_ROWS = 32256,};
enum MACRO_PLI {PLI_CHECK_SELECTION_HANDLE_BOUNDS = 0x80,PLI_ONLY_PROCESS_SELECTED = 0x40,PLI_ONLY_PROCESS_CLASS = 0x20,PLI_ONLY_INSERT_CLASS = 0x10,PLI_STOP_AT_FIRST_HIGH = 0x8,PLI_ONLY_INSERT_HIGH = 0x4,PLI_DONT_INSERT_OBJECTS_WITH_SELECTION_LOCK = 0x2,};
enum MACRO_PLL {PLL_COLUMNS = 0x1F8,PLL_TYPE = 0x7,};
enum MACRO_PLP {PLP_ORIENTATION = 8,PLP_TYPE = 7,};
enum MACRO_PLPC {PLPC_ORIENTATION = 8,PLPC_TYPE = 7,};
enum MACRO_PM {PM_GRAPHICS_LOW_RES = 0,PM_GRAPHICS_MED_RES = 2,PM_GRAPHICS_HI_RES = 4,PM_TEXT_DRAFT = 6,PM_TEXT_NLQ = 8,};
enum MACRO_PM2 {PM_HANDLES_RESIZE = 0x4,PM_HANDLES_ROTATE = 0x2,PM_POINTER_IS_ACTION_OBJECT = 0x1,};
enum MACRO_PMF {PMF_HARDWARE = 0x8000,PMF_SYSTEM = 0x4000,PMF_NETWORK = 0x2000,PMF_USER = 0x1000,};
enum MACRO_PM_FIRST {PM_FIRST_TEXT_MODE = 6,};
enum MACRO_PO {PO_PORTRAIT = 0,PO_LANDSCAPE = 1,};
enum MACRO_POM {POM_unused = 0xE0,POM_GRAPHICS_LOW = 0x10,POM_GRAPHICS_MEDIUM = 0x8,POM_GRAPHICS_HIGH = 0x4,POM_TEXT_DRAFT = 0x2,POM_TEXT_NLQ = 0x1,};
enum MACRO_PQE {PQE_HIGH = 0,PQE_MEDIUM = 1,PQE_LOW = 2,PCA_NO_PRINTER_CONTROLS = -32768,};
enum MACRO_PQT {PQT_HIGH = 0,PQT_MEDIUM = 1,PQT_LOW = 2,};
enum MACRO_PREF {PREF_MODULE_PROTO_MAJOR = 2,PREF_MODULE_PROTO_MINOR = 0,};
enum MACRO_PREFVM {PREFVM_DOC_PROTO_MAJOR = 2,PREFVM_DOC_PROTO_MINOR = 0,};
enum MACRO_PREF_ITEM {PREF_ITEM_GROUP_STRING_BUFFER_SIZE = 256,PREF_ITEM_GROUP_MAX_SELECTIONS = 16,};
enum MACRO_PRINT {PRINT_PROTO_MINOR = 0,DR_PRINT_FIRST_PSTATE_NEEDED = 10,};
enum MACRO_PRINT2 {PRINT_GRAPHICS = 28,PRINT_TEXT = 3,};
enum MACRO_PRINTC {PRINTC_DEFAULT_TOOLBOX_FEATURES = 3,MAXIMUM_NUMBER_OF_PRINTERS = 255,};
enum MACRO_PRINTCF {PRINTCF_FAX_TRIGGER = 0x1,PRINTCTF_PRINT_TRIGGER = 0x2,};
enum MACRO_PRINTCTF {PRINTCTF_FAX_TRIGGER = 0x1,PRINTC_DEFAULT_FEATURES = 0x3,};
enum MACRO_PRIORITY {PRIORITY_TIME_CRITICAL = 0,PRIORITY_HIGH = 64,PRIORITY_UI = 96,PRIORITY_FOCUS = 128,PRIORITY_STANDARD = 160,PRIORITY_LOW = 192,PRIORITY_LOWEST = 254,PRIORITY_IDLE = 255,};
enum MACRO_PRIORITY2 {PRIORITY_LIST_EVALUATE_PARENT_POINT_FOR_BOUNDS = 0,};
enum MACRO_PROC {PROC_SE_EXIT = 0x8000,PROC_SE_STORE_AT_BACK = 0x1,PROC_SE_CONTINUE = 0x0,};
enum MACRO_PROGRESS {PROGRESS_BLACK_HEIGHT = 25,PROGRESS_WHITE_WIDTH = 153,};
enum MACRO_PROGRESS_GRAY {PROGRESS_GRAY_HEIGHT = 15,};
enum MACRO_PROGRESS_WHITE {PROGRESS_WHITE_HEIGHT = 23,PROGRESS_GRAY_WIDTH = 145,};
enum MACRO_PS {PS_DUMB_RASTER = 0x0,PS_DOES_FONTS = 0x1,PS_PDL = 0x2,};
enum MACRO_PSC {PSC_DEFAULT_FEATURES = 4079,};
enum MACRO_PSCF {PSCF_10 = 0x400,PSCF_12 = 0x200,PSCF_14 = 0x100,PSCF_18 = 0x80,PSCF_24 = 0x40,PSCF_36 = 0x20,PSCF_54 = 0x10,PSCF_72 = 0x8,PSCF_SMALLER = 0x4,PSCF_LARGER = 0x2,PSCF_CUSTOM_SIZE = 0x1,};
enum MACRO_PSCTF {PSCTF_9 = 0x400,PSCTF_10 = 0x200,PSCTF_12 = 0x100,PSCTF_14 = 0x80,PSCTF_18 = 0x40,PSCTF_24 = 0x20,PSCTF_36 = 0x10,PSCTF_54 = 0x8,PSCTF_72 = 0x4,PSCTF_SMALLER = 0x2,PSCTF_LARGER = 0x1,};
enum MACRO_PSC_DEFAULT {PSC_DEFAULT_TOOLBOX_FEATURES = 2039,};
enum MACRO_PSEE {PSEE_BAD_NUMBER = 0,PSEE_BAD_CELL_REFERENCE = 1,PSEE_NO_CLOSE_QUOTE = 2,PSEE_COLUMN_TOO_LARGE = 3,PSEE_ROW_TOO_LARGE = 4,PSEE_ILLEGAL_TOKEN = 5,PSEE_GENERAL = 6,PSEE_TOO_MANY_TOKENS = 7,PSEE_EXPECTED_OPEN_PAREN = 8,PSEE_EXPECTED_CLOSE_PAREN = 9,PSEE_BAD_EXPRESSION = 10,PSEE_EXPECTED_END_OF_EXPRESSION = 11,PSEE_MISSING_CLOSE_PAREN = 12,PSEE_UNKNOWN_IDENTIFIER = 13,PSEE_NOT_ENOUGH_NAME_SPACE = 14,PSEE_OUT_OF_STACK_SPACE = 15,PSEE_NESTING_TOO_DEEP = 16,PSEE_ROW_OUT_OF_RANGE = 17,PSEE_COLUMN_OUT_OF_RANGE = 18,PSEE_FUNCTION_NO_LONGER_EXISTS = 19,PSEE_BAD_ARG_COUNT = 20,PSEE_WRONG_TYPE = 21,PSEE_DIVIDE_BY_ZERO = 22,PSEE_UNDEFINED_NAME = 23,PSEE_CIRCULAR_REF = 24,PSEE_CIRCULAR_DEP = 25,PSEE_CIRC_NAME_REF = 26,PSEE_NUMBER_OUT_OF_RANGE = 27,PSEE_GEN_ERR = 28,PSEE_NA = 29,PSEE_TOO_MANY_DEPENDENCIES = 30,PSEE_SSHEET_BASE = 192,PSEE_FLOAT_BASE = 250,};
enum MACRO_PSEE_APP {PSEE_APP_BASE = 230,PSEE_FLOAT_POS_INFINITY = 250,PSEE_FLOAT_NEG_INFINITY = 251,PSEE_FLOAT_GEN_ERR = 252,};
enum MACRO_PSF {PSF_FAX_AVAILABLE = 0x80,PSF_ABORT = 0x8,PSF_RECEIVED_COMPLETED = 0x4,PSF_RECEIVED_NAME = 0x2,PSF_VERIFIED = 0x1,};
enum MACRO_PSIZEC {PSIZEC_DEFAULT_FEATURES = 15,};
enum MACRO_PSIZECF {PSIZECF_MARGINS = 0x10,PSIZECF_CUSTOM_SIZE = 0x8,PSIZECF_LAYOUT = 0x4,PSIZECF_SIZE_LIST = 0x2,PSIZECF_PAGE_TYPE = 0x1,};
enum MACRO_PSIZECT {PSIZECT_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_PSIZECTF {PSIZECTF_DIALOG_BOX = 0x1,};
enum MACRO_PS_NORMAL {PS_NORMAL = 0x0,PS_REVERSE = 0x1,};
enum MACRO_PT {PT_SOLID = 0,PT_SYSTEM_HATCH = 1,PT_SYSTEM_BITMAP = 2,PT_USER_HATCH = 3,PT_USER_BITMAP = 4,PT_CUSTOM_HATCH = 5,PT_CUSTOM_BITMAP = 6,};
enum MACRO_PTR {PTR_LEAVE_LEFT = 0x1,PTR_LEAVE_TOP = 0x2,PTR_LEAVE_RIGHT = 0x4,PTR_LEAVE_BOTTOM = 0x8,};
enum MACRO_PTS {PTS_CONDENSED = 0x8000,PTS_SUBSCRIPT = 0x4000,PTS_SUPERSCRIPT = 0x2000,PTS_NLQ = 0x1000,PTS_BOLD = 0x800,PTS_ITALIC = 0x400,PTS_UNDERLINE = 0x200,PTS_STRIKETHRU = 0x100,PTS_SHADOW = 0x80,PTS_OUTLINE = 0x40,PTS_REVERSE = 0x20,PTS_DBLWIDTH = 0x10,PTS_DBLHEIGHT = 0x8,PTS_QUADHEIGHT = 0x4,PTS_OVERLINE = 0x2,PTS_FUTURE = 0x1,};
enum MACRO_PT_RASTER {PT_RASTER = 0x0,PT_VECTOR = 0x1,};
enum MACRO_PZCA {PZCA_PAPER_SIZE = 0x4000,PZCA_INITIALIZE = 0x2000,PZCA_LOAD_SAVE_OPTIONS = 0x1000,PZCA_NEW_PAGE_TYPE = 0x80,PZCA_SWAP_WIDTH_HEIGHT = 0x40,PZCA_INITIALIZED = 0x20,PZCA_IGNORE_UPDATE = 0x10,PZCA_PORTRAIT_VALID = 0x8,PZCA_LANDSCAPE_VALID = 0x4,};
enum MACRO_PaperSorted {PaperSorted = 0x40,};
enum MACRO_QUARTER {QUARTER = 32,};
enum MACRO_RAFOF {RAFOF_HAS_UNDO = 0x4000,};
enum MACRO_RBE {RBE_BATTERY_LOW = 0x0,RBE_BATTERY_OK = 0x2,RBE_RECHARGE_START = 0x4,RBE_RECHARGE_END = 0x6,};
enum MACRO_RC {RC_NO_RS232C = 0x0,RC_RS232C = 0x1,};
enum MACRO_RCFC {RCFC_DEFAULT_FEATURES = 1,};
enum MACRO_RCFCF {RCFCF_LOG_UI = 0x1,RCFCF_MULTIPLE_SELECTION = 0x2,};
enum MACRO_RCMC {RCMC_DEFAULT_FEATURES = 1,};
enum MACRO_RCMCF {RCMCF_LOG_UI = 0x1,RCMCF_MULTIPLE_SELECTION = 0x2,};
enum MACRO_RCMO {RCMO_ICON_BITMAP = 0x4000,};
enum MACRO_RCPC {RCPC_DEFAULT_FEATURES = 1,};
enum MACRO_RCPCF {RCPCF_LOG_UI = 0x1,};
enum MACRO_RC_BLACK {RC_BLACK = 0,RC_GRAY_7 = 1,RC_GRAY_13 = 2,RC_GRAY_20 = 3,RC_GRAY_27 = 4,RC_GRAY_33 = 5,RC_GRAY_40 = 6,RC_GRAY_47 = 7,RC_GRAY_53 = 8,RC_GRAY_60 = 9,RC_GRAY_68 = 10,RC_GRAY_73 = 11,RC_GRAY_80 = 12,RC_GRAY_88 = 13,RC_GRAY_93 = 14,RC_WHITE = 15,};
enum MACRO_RC_DARK {RC_DARK_GRAY = 9,RC_LIGHT_GREY = 11,};
enum MACRO_RC_DARK_GREY {RC_DARK_GREY = 9,};
enum MACRO_RC_GREY {RC_GREY_7 = 1,RC_GREY_13 = 2,RC_GREY_20 = 3,RC_GREY_27 = 4,RC_GREY_33 = 5,RC_GREY_40 = 6,RC_GREY_47 = 7,RC_GREY_53 = 8,RC_GREY_60 = 9,RC_GREY_68 = 10,RC_GREY_73 = 11,RC_GREY_80 = 12,RC_GREY_88 = 13,RC_GREY_93 = 14,};
enum MACRO_RC_LIGHT {RC_LIGHT_GRAY = 11,};
enum MACRO_REDRAW {NO_REDRAW = 0,REDRAW = 1,};
enum MACRO_REF {REF_ALL_CELLS = 0x80,REF_NO_LOCK = 0x40,REF_ROW_FLAGS = 0x20,REF_MATCH_ROW_FLAGS = 0x10,REF_CELL_ALLOCATED = 0x8,REF_CELL_FREED = 0x4,REF_OTHER_ALLOC_OR_FREE = 0x2,REF_ROW_FLAGS_MODIFIED = 0x1,};
enum MACRO_RELOC {RELOC_END_OF_LIST = 0,RELOC_RELOC_HANDLE = 1,RELOC_RELOC_SEGMENT = 2,RELOC_RELOC_ENTRY_POINT = 3,};
enum MACRO_RES {RES_QVGA = 0x1,RES_VGA = 0x2,RES_SVGA = 0x4,RES_XGA = 0x8,RES_SXGA = 0x10,RES_FREE = 0x20,};
enum MACRO_REST {REST = 0,LOW_C_b = 247,MIDDLE_C_b = 494,HIGH_C_b = 988,};
enum MACRO_RGC {RGC_DEFAULT_FEATURES = 7,RGC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_RGCF {RGCF_HV = 0x8,RGCF_LIST = 0x4,RGCF_POSITION = 0x2,RGCF_DELETE = 0x1,};
enum MACRO_RGCF_GRID {RGCF_GRID_SPACING = 0x4,RGCF_SNAP_TO_GRID = 0x2,RGCF_SHOW_GRID = 0x1,};
enum MACRO_RGIF {RGIF_USE_SEED = 0x80,};
enum MACRO_RGIF_GENERATE {RGIF_GENERATE_SEED = 0x40,FLOAT_ERROR_CODES_ENUM_START = 0xFA,};
enum MACRO_RIGHT {RIGHT_MARGIN = 72,};
enum MACRO_RNT {RNT_LID_OPEN = 0,RNT_LID_CLOSED = 1,RNT_PHONE_ON = 2,RNT_PHONE_OFF = 3,RNT_BATT_LO = 4,RNT_BATT_OK = 5,RNT_SAVE_DATA = 6,RNT_WAKEUP = 7,RNT_SUSP_DISABLED = 8,RNT_SUSP_ENABLED = 9,};
enum MACRO_ROO {ROO_LEFT_TO_RIGHT = 0,ROO_TOP_TO_BOTTOM = 1,};
enum MACRO_ROW {ROW_HEIGHT_MIN = 0,ROW_HEIGHT_MAX = 990,};
enum MACRO_RSA {RSA_CHOOSE_OWN_SIZE = 0x8000,RSA_SUGGESTED_SIZE = 0x7FFF,};
enum MACRO_RSCA {RSCA_SHOW_VERTICAL = 0x8000,RSCA_SHOW_HORIZONTAL = 0x4000,};
enum MACRO_RSCC {RSCC_DEFAULT_FEATURES = 6,RSCC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_RSCCF {RSCCF_SHOW_VERTICAL = 0x4,RSCCF_SHOW_HORIZONTAL = 0x2,RSCCF_SHOW_RULERS = 0x1,};
enum MACRO_RSCEF {RSCEF_SECOND_CELL_EXISTS = 0x2,RSCEF_FIRST_CELL_EXISTS = 0x1,};
enum MACRO_RSF {RSF_SORT_ROWS = 0x80,RSF_SORT_ASCENDING = 0x40,RSF_IGNORE_CASE = 0x20,RSF_IGNORE_SPACES = 0x1,};
enum MACRO_RT {RT_VALUE = 0,RT_TEXT = 1,RT_ERROR = 2,VA_NEW_DOCUMENT = -32768,};
enum MACRO_RTC {RTC_DEFAULT_FEATURES = 47,};
enum MACRO_RTCF {RTCF_SPREADSHEET = 0x10,RTCF_INCHES = 0x8,RTCF_CENTIMETERS = 0x4,RTCF_POINTS = 0x2,RTCF_PICAS = 0x1,};
enum MACRO_RTCTF {RTCTF_DEFAULT = 0x20,RTCTF_SPREADSHEET = 0x10,RTCTF_INCHES = 0x8,RTCTF_CENTIMETERS = 0x4,RTCTF_POINTS = 0x2,RTCTF_PICAS = 0x1,};
enum MACRO_RTC_DEFAULT {RTC_DEFAULT_TOOLBOX_FEATURES = 12,};
enum MACRO_RULER {RULER_TAB_TO_LEFT_MARGIN = 0x7E,};
enum MACRO_RULER2 {RULER_GUIDE_CONTROL_DEFAULT_FEATURES = 15,};
enum MACRO_RULER_TAB {RULER_TAB_TO_PARA_MARGIN = 0x7D,OTHER_INTRINSIC_TAB = 0x7F,};
enum MACRO_RVA {RVA_HORIZONTAL = 0x80,};
enum MACRO_RVA_NO {RVA_NO_AREA_CHOICE = 0,RVA_X_SCROLLER_AREA = 1,RVA_Y_SCROLLER_AREA = 2,RVA_LEFT_AREA = 3,RVA_TOP_AREA = 4,RVA_RIGHT_AREA = 5,RVA_BOTTOM_AREA = 6,};
enum MACRO_SA {SA_TOP_LEFT = 0,SA_TOP_RIGHT = 1,SA_BOTTOM_LEFT = 2,SA_BOTTOM_RIGHT = 3,VTPBF_LEFT = -32768,};
enum MACRO_SA2 {SA_ENGINE_MODE = 0x40,SA_SPREADSHEET_IS_LAYER = 0x20,};
enum MACRO_SAC {SAC_DEFAULT_FEATURES = 3,SMS_MAX_VOICE_NUMBER = 31,SMS_VCARD_DEFAULT_PORT_NUMBER = 226,};
enum MACRO_SACF {SACF_RECENT = 0x2,SACF_MANUAL = 0x1,};
enum MACRO_SAT {SAT_LENGTH = 0xFC00,SAT_LENGTH_OFFSET = 0xA,};
enum MACRO_SAT_FILLED {SAT_FILLED = 0x200,SAT_FILL_WITH_AREA_ATTRIBUTES = 0x100,SAT_ANGLE = 0xFF,SAT_ANGLE_OFFSET = 0x0,};
enum MACRO_SA_ATTACHED {SA_ATTACHED = 0x80,SA_REALIZABLE = 0x40,SA_BRANCH_MINIMIZED = 0x20,SA_USES_DUAL_BUILD = 0x10,SA_CUSTOM_VIS_PARENT = 0x8,SA_SIMPLE_GEN_OBJ = 0x4,SA_CUSTOM_VIS_PARENT_FOR_CHILD = 0x2,SA_TREE_BUILT_BUT_NOT_REALIZED = 0x1,};
enum MACRO_SA_NOT {SA_NOT = 0x8000,SA_TINY = 0x4000,SA_HORIZONTALLY_TINY = 0x2000,SA_VERTICALLY_TINY = 0x1000,SA_COLOR = 0x800,SA_PEN_BASED = 0x400,SA_KEYBOARD_ONLY = 0x200,SA_NO_KEYBOARD = 0x100,};
enum MACRO_SA_NOTHING {SA_NOTHING = 0,SA_TO_BEGINNING = 1,SA_PAGE_BACK = 2,SA_INC_BACK = 3,SA_INC_FWD = 4,SA_DRAGGING = 5,SA_PAGE_FWD = 6,SA_TO_END = 7,SA_SCROLL = 8,SA_SCROLL_INTO = 9,SA_INITIAL_POS = 10,SA_SCALE = 11,SA_PAN = 12,SA_DRAG_SCROLL = 13,SA_SCROLL_FOR_SIZE_CHANGE = 14,SF_VERTICAL = 128,};
enum MACRO_SBF {SBF_WIN_GROUP = 0x4000,SBF_TREE_BUILD = 0x2000,SBF_VIS_PARENT_WITHIN_SCOPE_OF_TREE_BUILD = 0x1000,SBF_SKIP_CHILD = 0x800,SBF_FIND_LAST = 0x400,SBF_VIS_PARENT_UNBUILDING = 0x200,SBF_VIS_PARENT_FULLY_ENABLED = 0x100,SBF_UPDATE_MODE = 0x3,};
enum MACRO_SBP {SBP_CHEMICAL = 30,};
enum MACRO_SBP_DENOMINATOR {SBP_DENOMINATOR = 0,SBP_DEFAULT = 50,SBS_CHEMICAL = 65,};
enum MACRO_SBS {SBS_DENOMINATOR = 60,};
enum MACRO_SBS2 {SBS_NO_SPELL_ACTIVE = 0,SBS_CHECKING_DOCUMENT = 1,SBS_CHECKING_SELECTION = 2,};
enum MACRO_SBS_DEFAULT {SBS_DEFAULT = 50,};
enum MACRO_SC {SC_DONT_COLLATE = 0x0,SC_COLLATE = 0x1,};
enum MACRO_SC2 {SC_READ = 0x0,SC_WRITE = 0x1,SC_ACCEPT = 0x2,SC_EXCEPTION = 0x3,SC_URGENT = 0x4,};
enum MACRO_SCANNER {SCANNER_TOKEN_NUMBER = 0,SCANNER_TOKEN_STRING = 1,SCANNER_TOKEN_CELL = 2,SCANNER_TOKEN_END_OF_EXPRESSION = 3,SCANNER_TOKEN_OPEN_PAREN = 4,SCANNER_TOKEN_CLOSE_PAREN = 5,SCANNER_TOKEN_IDENTIFIER = 6,SCANNER_TOKEN_OPERATOR = 7,SCANNER_TOKEN_LIST_SEPARATOR = 8,CRC_ABSOLUTE = -32768,};
enum MACRO_SCEP {SCEP_REASON_UNSPECIFIED = 0x0,SCEP_REASON_USER_DIS = 0x1,SCEP_REASON_PROVIDER_DIS = 0x2,};
enum MACRO_SCF {SCF_UNDER_SWAT = 0x80,SCF_2ND_IC = 0x40,SCF_RTC = 0x20,SCF_COPROC = 0x10,SCF_RESTARTED = 0x80,SCF_CRASHED = 0x4,SCF_MCA = 0x2,SCF_LOGGING = 0x1,};
enum MACRO_SCF2 {SCF_CLEAR_ATTRIBUTES = 0x80,SCF_CLEAR_DATA = 0x40,SCF_CLEAR_NOTES = 0x20,};
enum MACRO_SCFOF {SCFOF_CHECK_NUM_CHARS = 0x1,};
enum MACRO_SCO {SCO_CHECK_NUM_CHARS = 0x4,SF_CLOSE = 0x2000,};
enum MACRO_SCORE {SCORE_BUFFER_SIZE = 130,};
enum MACRO_SCRT {SCRT_TOO_MANY_CHARTS = 0,SCRT_INSUFFICIENT_MEMORY = 2,SCRT_NO_DATA = 4,};
enum MACRO_SCSO {SCSO_BEGINNING_OF_DOCUMENT = 0,SCSO_BEGINNING_OF_SELECTION = 1,SCSO_WORD_BOUNDARY_BEFORE_SELECTION = 2,SCSO_END_OF_SELECTION = 3,SCO_CHECK_SELECTION = 8,};
enum MACRO_SCT {SCT_FULL = 0x0,SCT_HALF = 0x1,};
enum MACRO_SCT2 {SCT_PHONE = 11,SCT_FAX = 13,SCT_DATA = 20,SCT_DATA_CIRCUIT_ASYNC = 25,};
enum MACRO_SC_DEFAULT {SC_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_SC_DONT {SC_DONT_ROTATE = 0x0,SC_ROTATE = 0x1,};
enum MACRO_SC_NO {SC_NO_SCSI = 0x0,SC_SCSI = 0x1,};
enum MACRO_SC_SUGGESTED {SC_SUGGESTED_INTRODUCTORY_FEATURES = 7249,};
enum MACRO_SD {SD_DEFAULT_FEATURES = 1,NAMENUMBER_LENGTH = 31,};
enum MACRO_SDC {SDC_WAVEFORM = 0x6000,};
enum MACRO_SDCF {SDCF_UI = 0x1,};
enum MACRO_SDCF_NOTE {SDCF_NOTE_EXISTS = 0x2,SDCF_CELL_EXISTS = 0x1,};
enum MACRO_SDC_ENVELOPE {SDC_ENVELOPE = 0x600,};
enum MACRO_SDC_TIMBRE {SDC_TIMBRE = 0x1800,};
enum MACRO_SDEC {SDEC_NONE = 0x0,SDEC_ADSR = 0x200,SDEC_DSP = 0x400,SDC_NOISE = 0x8000,};
enum MACRO_SDF {SDF_DRAW_NOTE_BUTTON = 0x4,SDF_DRAW_HEADER_FOOTER_BUTTON = 0x2,SDF_DRAW_GRID = 0x1,};
enum MACRO_SDM {SDM_TILE = 0,SDM_SHADED_BAR = 1,SDM_HORIZONTAL = 2,SDM_VERTICAL = 3,SDM_DIAG_NE = 4,SDM_DIAG_NW = 5,SDM_GRID = 6,SDM_BIG_GRID = 7,SDM_BRICK = 8,SDM_SLANT_BRICK = 9,SDM_0 = 89,SDM_12_5 = 81,SDM_25 = 73,SDM_37_5 = 65,SDM_50 = 57,SDM_62_5 = 49,SDM_75 = 41,SDM_87_5 = 33,SDM_100 = 25,SDM_CUSTOM = 127,};
enum MACRO_SDM_MASK {SDM_MASK = 0x7F,};
enum MACRO_SDNC {SDNC_NO_NOISE = 0x0,SDNC_WHITE_NOISE = 0x8000,};
enum MACRO_SDT {SDT_DATAGRAM = 0x0,SDT_SEQ_PACKET = 0x1,SDT_STREAM = 0x2,SBF_REUSE_PORT = 0x8000,};
enum MACRO_SDTC {SDTC_TONE_GENERATOR = 0x0,SDTC_ADDITIVE = 0x800,SDTC_MODULATOR = 0x1000,SDTC_SELECTIVE = 0x1800,};
enum MACRO_SDWFC {SDWFC_NONE = 0x0,SDWFC_SELECT = 0x2000,SDWFC_GENERATE = 0x4000,};
enum MACRO_SEARCH {SEARCH_REPLACE_TEXT_MAXIMUM = 65,};
enum MACRO_SEARCH_REPLACE {SEARCH_REPLACE_MAX_WORD_LENGTH = 65,};
enum MACRO_SECOND {SECOND_MIN = 0,DATE_NUMBER_MIN = 1,DATE_NUMBER_MAX = 7513,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEF {SEF_DISPLAY_IN_TOOLBOX = 0x8000,};
enum MACRO_SEF2 {SEF_DOUBLE_WORD_ERROR = 0x8000,SEF_ORDINAL_NUMBER_ERROR = 0x4000,SEF_APOSTROPHY_ALTERNATIVE = 0x2000,SEF_FINAL_CHAR = 0x1000,SEF_INIT_ERROR = 0x800,SEF_CAPITALIZATION_ERROR = 0x400,SEF_COMPOUNDING_ERROR = 0x200,SEF_INVALID_PRE_CHARS = 0x80,SEF_INVALID_TRAILING_CHARS = 0x40,SEF_NEGATIVE_WORD = 0x20,SEF_NOT_FREE_STANDING_WORD = 0x10,SEF_SOFT_HYPHEN_ERROR = 0x8,SEF_ACCENT_ERROR = 0x4,SEF_INVALID_POST_CLITIC = 0x2,SEF_INVALID_PRE_CLITIC = 0x1,};
enum MACRO_SEFH {SEFH_INVALID_PUNCTUATION = 0x4,SEFH_A_ERROR = 0x2,SEFH_AN_ERROR = 0x1,};
enum MACRO_SER {SER_FALSE = 0,SER_TRUE = 1,SER_BOGUS = 2,};
enum MACRO_SERIAL {SERIAL_ERROR_BREAK_OFFSET = 4,SERIAL_ERROR_BREAK = 16,};
enum MACRO_SERIAL_DEVICE {SERIAL_DEVICE_COM7_OFFSET = 12,SERIAL_DEVICE_COM7 = 4096,};
enum MACRO_SERIAL_DEVICE_COM1 {SERIAL_DEVICE_COM1_OFFSET = 0,SERIAL_DEVICE_COM1 = 1,STREAM_STATUS_UNKNOWN_OFFSET = 15,STREAM_STATUS_UNKNOWN = -32768,};
enum MACRO_SERIAL_DEVICE_COM2 {SERIAL_DEVICE_COM2_OFFSET = 2,SERIAL_DEVICE_COM2 = 4,};
enum MACRO_SERIAL_DEVICE_COM3 {SERIAL_DEVICE_COM3_OFFSET = 4,SERIAL_DEVICE_COM3 = 16,};
enum MACRO_SERIAL_DEVICE_COM4 {SERIAL_DEVICE_COM4_OFFSET = 6,SERIAL_DEVICE_COM4 = 64,};
enum MACRO_SERIAL_DEVICE_COM5 {SERIAL_DEVICE_COM5_OFFSET = 8,SERIAL_DEVICE_COM5 = 256,};
enum MACRO_SERIAL_DEVICE_COM6 {SERIAL_DEVICE_COM6_OFFSET = 10,SERIAL_DEVICE_COM6 = 1024,};
enum MACRO_SERIAL_ERROR {SERIAL_ERROR_FRAME_OFFSET = 3,SERIAL_ERROR_FRAME = 8,};
enum MACRO_SERIAL_ERROR_OVERRUN {SERIAL_ERROR_OVERRUN_OFFSET = 1,SERIAL_ERROR_OVERRUN = 2,SERIAL_PORT_DOES_NOT_EXIST = -1,};
enum MACRO_SERIAL_ERROR_PARITY {SERIAL_ERROR_PARITY_OFFSET = 2,SERIAL_ERROR_PARITY = 4,};
enum MACRO_SERIAL_FLOW {SERIAL_FLOW_SOFTWARE_OFFSET = 1,SERIAL_FLOW_SOFTWARE = 2,};
enum MACRO_SERIAL_FLOW_HARDWARE {SERIAL_FLOW_HARDWARE_OFFSET = 0,SERIAL_FLOW_HARDWARE = 1,SERIAL_DEVICE_COM8_OFFSET = 14,SERIAL_DEVICE_COM8 = 16384,};
enum MACRO_SERIAL_FORMAT {SERIAL_FORMAT_BREAK_OFFSET = 6,SERIAL_FORMAT_BREAK = 64,};
enum MACRO_SERIAL_FORMAT_EXTRA {SERIAL_FORMAT_EXTRA_STOP_OFFSET = 2,SERIAL_FORMAT_EXTRA_STOP = 4,};
enum MACRO_SERIAL_FORMAT_LENGTH {SERIAL_FORMAT_LENGTH_OFFSET = 0,SERIAL_FORMAT_LENGTH = 3,};
enum MACRO_SERIAL_FORMAT_PARITY {SERIAL_FORMAT_PARITY_OFFSET = 3,SERIAL_FORMAT_PARITY = 56,};
enum MACRO_SERIAL_MODE {SERIAL_MODE_RAW = 0,SERIAL_MODE_RARE = 1,SERIAL_MODE_COOKED = 2,SMC_OUT2 = 8,};
enum MACRO_SERIAL_MODEM {SERIAL_MODEM_OUT1_OFFSET = 2,SERIAL_MODEM_OUT1 = 4,};
enum MACRO_SERIAL_MODEM_CTS {SERIAL_MODEM_CTS_OFFSET = 1,SERIAL_MODEM_CTS = 2,};
enum MACRO_SERIAL_MODEM_DCD {SERIAL_MODEM_DCD_OFFSET = 2,SERIAL_MODEM_DCD = 4,};
enum MACRO_SERIAL_MODEM_DSR {SERIAL_MODEM_DSR_OFFSET = 0,SERIAL_MODEM_DSR = 1,SNE_MODEM = 2,SMS_DCD = 128,};
enum MACRO_SERIAL_MODEM_DTR {SERIAL_MODEM_DTR_OFFSET = 0,SERIAL_MODEM_DTR = 1,SERIAL_MODEM_RI_OFFSET = 3,SERIAL_MODEM_RI = 8,};
enum MACRO_SERIAL_MODEM_RTS {SERIAL_MODEM_RTS_OFFSET = 1,SERIAL_MODEM_RTS = 2,};
enum MACRO_SERIAL_STATUS {SERIAL_STATUS_DCD_OFFSET = 7,SERIAL_STATUS_DCD = 128,};
enum MACRO_SERIAL_STATUS_CTS {SERIAL_STATUS_CTS_OFFSET = 4,SERIAL_STATUS_CTS = 16,};
enum MACRO_SERIAL_STATUS_CTS_CHANGED {SERIAL_STATUS_CTS_CHANGED_OFFSET = 0,SERIAL_STATUS_CTS_CHANGED = 1,};
enum MACRO_SERIAL_STATUS_DCD {SERIAL_STATUS_DCD_CHANGED_OFFSET = 3,SERIAL_STATUS_DCD_CHANGED = 8,};
enum MACRO_SERIAL_STATUS_DSR {SERIAL_STATUS_DSR_OFFSET = 5,SERIAL_STATUS_DSR = 32,};
enum MACRO_SERIAL_STATUS_DSR_CHANGED {SERIAL_STATUS_DSR_CHANGED_OFFSET = 1,SERIAL_STATUS_DSR_CHANGED = 2,};
enum MACRO_SERIAL_STATUS_RING {SERIAL_STATUS_RING_OFFSET = 6,SERIAL_STATUS_RING = 64,};
enum MACRO_SERIAL_STATUS_RING_CHANGED {SERIAL_STATUS_RING_CHANGED_OFFSET = 2,SERIAL_STATUS_RING_CHANGED = 4,};
enum MACRO_SES {SES_SELECT_STATE_CHANGED = 0x80,SES_FOCUS = 0x40,SES_TARGET = 0x20,SES_SELECTED = 0x10,SES_ACTION = 0xF,SES_ACTION_OFFSET = 0x0,};
enum MACRO_SET {SET_CUSTOM_PATTERN = 127,SDM_INVERSE = 128,};
enum MACRO_SF {SF_SLAB = 0xC0,SF_MODERN = 0x80,SF_TRANS = 0x40,SF_OLD = 0x0,SF_A_CLOSED = 0x80,SF_A_OPEN = 0x0,SF_CURSIVE = 0x80,SF_CALLIGRAPHIC = 0x0,};
enum MACRO_SF2 {SF_CONTEXT = 0x1000,SF_SIMPLE_MODAL_BOX = 0x800,SF_SUGGESTIONS = 0x400,SF_CHECK_ALL = 0x200,SF_CHECK_TO_END = 0x100,SF_CHECK_SELECTION = 0x80,SF_SKIP = 0x40,SF_SKIP_ALL = 0x20,SF_REPLACE_CURRENT = 0x10,SF_REPLACE_ALL = 0x8,SF_ADD_TO_USER_DICTIONARY = 0x4,SF_EDIT_USER_DICTIONARY = 0x2,SF_STATUS = 0x1,};
enum MACRO_SFC {SFC_HARDWARE = 0x1,};
enum MACRO_SFE {SFE_NO_ERROR = 0,SFE_NOT_DATE_NUMER = 2,SFE_DATE_STEP_TOO_LARGE = 4,SPREADSHEET_MAX_DATE_FILL_STEP = 90,SPREADSHEET_MIN_DATE_FILL_STEP = -90,};
enum MACRO_SFOF {SFOF_STOP_AT_STARTING_POINT = 0x1,RAFOF_CONTINUING_REPLACE = 0x8000,};
enum MACRO_SFT {SFT_SAVE_FILE = 0x0,SFT_DELETE_FILE = 0x1,};
enum MACRO_SF_ABSOLUTE {SF_ABSOLUTE = 0x40,SF_DOC_SIZE_CHANGE = 0x20,SF_WINDOW_NOT_SUSPENDED = 0x10,SF_SCALE_TO_FIT = 0x8,SF_SETUP_HAPPENED = 0x4,SF_EC_SETUP_CALLED = 0x2,};
enum MACRO_SF_BREAK {SF_BREAK = 0x40,};
enum MACRO_SF_DLAB {SF_DLAB = 0x80,};
enum MACRO_SF_EXTRA {SF_EXTRA_STOP = 0x4,};
enum MACRO_SF_LENGTH {SF_LENGTH = 0x3,SERIAL_FORMAT_DLAB_OFFSET = 0x7,SERIAL_FORMAT_DLAB = 0x80,};
enum MACRO_SF_MANUAL {SF_MANUAL_RECALC = 0x8000,SF_ALLOW_ITERATION = 0x4000,SF_SUPPRESS_REDRAW = 0x2000,SF_APPLICATION_FUNCTIONS = 0x1000,SF_QUICK_TRANS_IN_PROGRESS = 0x800,SF_DOING_FEEDBACK = 0x400,SF_IN_VIEW = 0x200,SF_IS_SYS_TARGET = 0x8,SF_HAVE_GRAB = 0x4,SF_IS_APP_TARGET = 0x2,SF_IS_SYS_FOCUS = 0x1,};
enum MACRO_SF_PARITY {SF_PARITY = 0x38,};
enum MACRO_SGNF {SGNF_MARKER_SHAPE = 0x8000,SGNF_SPLINE_POINT = 0x4000,SGNF_POLYLINE = 0x2000,SGNF_SMOOTHNESS = 0x1000,SGNF_OPEN_CLOSE = 0x800,SGNF_EDIT = 0x400,};
enum MACRO_SH {SH_VERTICAL = 0,SH_HORIZONTAL = 1,SH_45_DEGREE = 2,SH_135_DEGREE = 3,SH_BRICK = 4,SH_SLANTED_BRICK = 5,MAX_CUSTOM_PATTERN_SIZE = 16384,PARAM_0 = 20480,PARAM_1 = 28672,PARAM_2 = -28672,PARAM_3 = -20480,};
enum MACRO_SH2 {SH_TYPE = 0x8C00,SH_DATA = 0x3FF,};
enum MACRO_SIAF {SIAF_ALL_DESCENDING = 0,};
enum MACRO_SIF {SIF_COLUMNS = 0x80,SIF_COMPLETE = 0x40,SIF_DELETE = 0x20,};
enum MACRO_SIF_MANAGE {SIF_MANAGE_ATTRIBUTES = 0x10,SIF_INTERNAL = 0x8,SIF_RESET_LINKAGES = 0x4,};
enum MACRO_SIGN {SIGN_STR_LEN = 5,PAD_STR_LEN = 8,FP_DEFAULT_STACK_ELEMENTS = 25,FP_DEFAULT_STACK_SIZE = 250,};
enum MACRO_SIXTEENTH {SIXTEENTH = 8,};
enum MACRO_SIXTYFOURTH {SIXTYFOURTH = 2,};
enum MACRO_SIZE {SIZE_USER_DEFINED = 0,FJCF_FULL_CHAR = 16,};
enum MACRO_SL {SL_UNIVERSAL = 0,SL_FRENCH = 5,SL_GERMAN = 6,SL_SWEDISH = 7,SL_SPANISH = 8,SL_ITALIAN = 9,SL_DANISH = 10,SL_DUTCH = 11,SL_PORTUGUESE = 12,SL_NORWEGIAN = 13,SL_FINNISH = 14,SL_SWISS = 15,SL_ENGLISH = 16,SL_ARABIC = 20,SL_AUSTRALIAN = 21,SL_CHINESE = 22,SL_GAELIC = 23,SL_GREEK = 24,SL_HEBREW = 25,SL_HUNGARIAN = 26,SL_JAPANESE = 27,SL_POLISH = 28,SL_SERBO_CROATN = 29,SL_SLOVAK = 30,SL_RUSSIAN = 31,SL_TURKISH = 32,SL_URDU = 33,SL_AFRIKAANS = 34,SL_BASQUE = 35,SL_CATALAN = 36,SL_CANADIAN = 37,SL_FLEMISH = 38,SL_HAWAIIAN = 39,SL_KOREAN = 40,SL_LATIN = 41,SL_MAORI = 42,SL_NZEALAND = 43,SL_BRITISH = 44,SL_US_ENGLISH = 45,SL_UK_SCANDINAVIAN = 46,SL_MALAY = 47,SL_INDONESIAN = 48,};
enum MACRO_SL_DEFAULT {SL_DEFAULT = 16,LD_DEFAULT = 128,};
enum MACRO_SM {SM_RAW = 0,SM_RARE = 1,SM_COOKED = 2,};
enum MACRO_SM2 {SM_BEGINNER_POLYLINE_CREATE = 0x0,SM_BEGINNER_SPLINE_CREATE = 0x1,SM_ADVANCED_CREATE = 0x2,SM_BEGINNER_EDIT = 0x3,SM_ADVANCED_EDIT = 0x4,SM_INACTIVE = 0x5,SS_VIS_BOUNDARY_DRAWN = 0x80,};
enum MACRO_SMALL {SMALL_CHAR_TO_GET_CHAR_MO_MA = 44,SMALL_CHAR_TO_GET_CHAR_KHO_KHWAI = 56,};
enum MACRO_SMALL2 {SMALL_DESIRED_HANDLE_SIZE = 5,MEDIUM_DESIRED_HANDLE_SIZE = 8,LARGE_DESIRED_HANDLE_SIZE = 12,};
enum MACRO_SMALL_CHAR {SMALL_CHAR_TO_GET_CHAR_THO_THUNG = 53,};
enum MACRO_SMALL_CHAR_TO {SMALL_CHAR_TO_GET_CHAR_PHO_SAMPHAO = 52,SMALL_CHAR_TO_GET_CHAR_TO_TAO = 57,};
enum MACRO_SMALL_CHAR_TO_GET {SMALL_CHAR_TO_GET_PLUS = 49,};
enum MACRO_SMALL_CHAR_TO_GET_CHAR {SMALL_CHAR_TO_GET_CHAR_SARA_AI_MAIMUAN = 46,SMALL_CHAR_TO_GET_CHAR_WO_WAEN = 59,};
enum MACRO_SMALL_CHAR_TO_GET_CHAR_CHO {SMALL_CHAR_TO_GET_CHAR_CHO_CHAN = 48,};
enum MACRO_SMALL_CHAR_TO_GET_CHAR_LO {SMALL_CHAR_TO_GET_CHAR_LO_CHULA = 46,SMALL_CHAR_TO_GET_CHAR_SO_SO = 59,};
enum MACRO_SMALL_CHAR_TO_GET_CHAR_SARA {SMALL_CHAR_TO_GET_CHAR_SARA_UE = 55,};
enum MACRO_SMALL_CHAR_TO_GET_CHAR_SARA_UU {SMALL_CHAR_TO_GET_CHAR_SARA_UU = 54,};
enum MACRO_SMALL_CHAR_TO_GET_CHAR_THO {SMALL_CHAR_TO_GET_CHAR_THO_PHUTHAO = 44,SMALL_CHAR_TO_GET_DIGIT_EIGHT = 56,};
enum MACRO_SMALL_CHAR_TO_GET_CURRENCY {SMALL_CHAR_TO_GET_CURRENCY_SYMBOL_BAHT = 50,};
enum MACRO_SMALL_CHAR_TO_GET_DIGIT {SMALL_CHAR_TO_GET_DIGIT_FIVE = 53,};
enum MACRO_SMALL_CHAR_TO_GET_DIGIT_FOUR {SMALL_CHAR_TO_GET_DIGIT_FOUR = 52,SMALL_CHAR_TO_GET_DIGIT_NINE = 57,};
enum MACRO_SMALL_CHAR_TO_GET_DIGIT_ONE {SMALL_CHAR_TO_GET_DIGIT_ONE = 49,};
enum MACRO_SMALL_CHAR_TO_GET_DIGIT_SEVEN {SMALL_CHAR_TO_GET_DIGIT_SEVEN = 55,};
enum MACRO_SMALL_CHAR_TO_GET_DIGIT_THREE {SMALL_CHAR_TO_GET_DIGIT_THREE = 51,};
enum MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO {SMALL_CHAR_TO_GET_DIGIT_TWO = 50,SMALL_CHAR_TO_GET_CHAR_SARA_U = 54,SMALL_CHAR_TO_GET_CHAR_FO_FAN = 97,SMALL_CHAR_TO_GET_CHAR_SARA_I = 98,SMALL_CHAR_TO_GET_CHAR_SARA_AE = 99,SMALL_CHAR_TO_GET_CHAR_KO_KAI = 100,SMALL_CHAR_TO_GET_CHAR_SARA_AM = 101,SMALL_CHAR_TO_GET_CHAR_DO_DEK = 102,SMALL_CHAR_TO_GET_CHAR_SARA_E = 103,SMALL_CHAR_TO_GET_CHAR_MAI_THO = 104,SMALL_CHAR_TO_GET_CHAR_RO_RUA = 105,SMALL_CHAR_TO_GET_CHAR_MAI_EK = 106,SMALL_CHAR_TO_GET_CHAR_SARA_AA = 107,SMALL_CHAR_TO_GET_CHAR_SO_SUA = 108,SMALL_CHAR_TO_GET_CHAR_THO_THAHAN = 109,SMALL_CHAR_TO_GET_CHAR_SARA_UEE = 110,SMALL_CHAR_TO_GET_CHAR_NO_NU = 111,SMALL_CHAR_TO_GET_CHAR_YO_YAK = 112,SMALL_CHAR_TO_GET_CHAR_MAIYAMOK = 113,SMALL_CHAR_TO_GET_CHAR_PHO_PHAN = 114,SMALL_CHAR_TO_GET_CHAR_HO_HIP = 115,SMALL_CHAR_TO_GET_CHAR_SARA_A = 116,SMALL_CHAR_TO_GET_CHAR_SARA_II = 117,SMALL_CHAR_TO_GET_CHAR_O_ANG = 118,SMALL_CHAR_TO_GET_CHAR_SARA_AI_MAIMALAI = 119,SMALL_CHAR_TO_GET_CHAR_PO_PLA = 120,SMALL_CHAR_TO_GET_CHAR_MAI_HAN_AKAT = 121,SMALL_CHAR_TO_GET_CHAR_PHO_PHUNG = 122,};
enum MACRO_SMALL_CHAR_TO_GET_SPACE {SMALL_CHAR_TO_GET_SPACE = 32,SMALL_CHAR_TO_GET_MINUS = 51,};
enum MACRO_SMC {SMC_OUT1 = 0x4,SMC_RTS = 0x2,SMC_DTR = 0x1,SMC_RI = 0x8,};
enum MACRO_SMCF {SMCF_MARKER_SHAPE = 0x1,SPCF_INSERT_ANCHORS = 0x8,};
enum MACRO_SMC_DCD {SMC_DCD = 0x4,SMC_CTS = 0x2,SMC_DSR = 0x1,SERIAL_MODEM_OUT2_OFFSET = 0x3,SERIAL_MODEM_OUT2 = 0x8,};
enum MACRO_SMDCS {SMDCS_EIGHT_BIT_MASK = 0x3D,SMDCS_EIGHT_BIT_OFFSET = 0x2,};
enum MACRO_SMKF {SMKF_DONT_DRAW_ENDPOINTS = 0x1,};
enum MACRO_SMM {SMM_SET_MARK_FLAG = 0,SMM_UNSET_MARK_FLAG = 1,SMM_INVERT_MARK_FLAG = 3,};
enum MACRO_SMREG {SMREG_PROTOCOL_LENGTH_WORD = 4,SMREG_PROTOCOL_LENGTH_BYTE = 2,};
enum MACRO_SMRITH {SMRITH_NULL_TERMINATE = 0x80,SMRITH_WORD_LENGTH = 0x40,SMRITH_BYTE_LENGTH = 0x20,};
enum MACRO_SMS {SMS_RING = 0x40,SMS_DSR = 0x20,SMS_CTS = 0x10,SMS_DCD_CHANGED = 0x8,SMS_RING_CHANGED = 0x4,SMS_DSR_CHANGED = 0x2,SMS_CTS_CHANGED = 0x1,};
enum MACRO_SMSC {SMSC_PENDING = 0x20,SMSC_FAILED = 0x40,};
enum MACRO_SMSC_ADDRESS {SMSC_ADDRESS_LEN = 23,};
enum MACRO_SMSC_DELIVERED {SMSC_DELIVERED = 0,};
enum MACRO_SMSC_DYN {SMSC_DYN_LIST = 0x1,SMSC_VIEW = 0x2,SMSC_CLOSE = 0x4,SMSC_DELETE = 0x8,SMSC_CLEAR_LIST = 0x10,CSMS_DEFAULT_FEATURES = 0x1F,};
enum MACRO_SMSC_GET {SMSC_GET_NEXT = 1,SMSC_GET_PREV = 2,};
enum MACRO_SMSC_NO {SMSC_NO_MORE_MSG = 2,SMSC_OK = 0,};
enum MACRO_SMSC_SET {SMSC_SET_INIT = 0,SMSC_NO_MSG = -1,};
enum MACRO_SMSC_TIME {SMSC_TIME_STAMP = 7,SMSC_MSG_LEN = 11,SMSC_NAME_LEN = 31,};
enum MACRO_SMSF {SMSF_STAMP_BOX = 0x100,SMSF_TEMPLATE = 0x80,SMSF_CHAR_COUNTER = 0x40,SMSF_REPLY_PATH = 0x20,SMSF_STAMP = 0x10,SMSF_POSTMARK = 0x8,SMSF_TO = 0x4,SMSF_FROM = 0x2,SMSF_DEST_NUMBER = 0x1,};
enum MACRO_SMS_ASCII {SMS_ASCII_ADDRESS_MAX_LENGTH = 22,};
enum MACRO_SMS_DEFAULT {SMS_DEFAULT_FEATURES = 320,};
enum MACRO_SMS_DO {SMS_DO_EIGHT_BIT_MASK = 0x8000,SMS_MTI_SMS_SUBMIT = 0x1,};
enum MACRO_SMS_DTR {SMS_DTR_CHANGED = 0x2,};
enum MACRO_SMS_FILE {SMS_FILE_MAJOR_PROTOCOL = 2,SMS_FILE_MINOR_PROTOCOL = 0,};
enum MACRO_SMS_GSM {SMS_GSM_0340_ADDRESS_MAX_LENGTH = 20,SMS_INTERNATIONAL_NUMBER = 145,};
enum MACRO_SMS_GSM_MAX {SMS_GSM_MAX_USER_DATA_LENGTH = 160,SMS_GSM_MAX_8BIT_USER_DATA = 140,SMS_MAX_MSGCENTRE_NAME_LEN = 30,SMS_MAX_MSGCENTRE_EMPTY_LIST_ITEM_LEN = 30,};
enum MACRO_SMS_ISL {SMS_ISL_FINNISH = 0x2,SMS_ISL_NORWEGIAN = 0x4,SMS_ISL_SWEDISH = 0x8,SMS_ISL_DANISH = 0x10,SMS_ISL_DUTCH = 0x20,SMS_ISL_GERMAN = 0x40,SMS_ISL_ENGLISH = 0x80,SMS_ISL_FRENCH = 0x100,SMS_ISL_ITALIAN = 0x200,SMS_ISL_SPANISH = 0x400,SMS_ISL_PORTUGUESE = 0x800,SMS_ISL_GREEK = 0x1000,SMS_ISL_TURKISH = 0x2000,};
enum MACRO_SMS_MESSAGE {SMS_MESSAGE_IS_IN_SIM = 0x8000,SMS_MESSAGE_REPLACETYPE_MASK = 0xFF,};
enum MACRO_SMS_MSGCENTREFILE {SMS_MSGCENTREFILE_NAME_SIZE = 8,SIM_MESSAGE = 73,SMS_CONTACT_DEVICE_DB = -1,};
enum MACRO_SMS_RTS {SMS_DTR = 0x20,SMS_RTS = 0x10,};
enum MACRO_SMS_RTS_CHANGED {SMS_RTS_CHANGED = 0x1,SFC_SOFTWARE = 0x2,};
enum MACRO_SMS_VCARD {SMS_VCARD_LONG_PORT_NUMBER_SIZE = 4,SPDATF_SECONDS = 128,};
enum MACRO_SMS_VPF {SMS_VPF_INTEGER = 0x10,SMS_ISL_ALL = 0x1,};
enum MACRO_SMT {SMT_UNKNOWN = 0,SMT_PC = 1,SMT_PC_CONV = 2,SMT_PC_JR = 3,SMT_PC_XT = 4,SMT_PC_XT_286 = 5,SMT_PC_AT = 6,SMT_PS2_30 = 7,SMT_PS2_50 = 8,SMT_PS2_60 = 9,SMT_PS2_80 = 10,SMT_PS1 = 11,SMT_PRODUCT_SPECIFIC_1 = 12,SMT_PRODUCT_SPECIFIC_2 = 13,SMT_PRODUCT_SPECIFIC_3 = 14,SMT_PRODUCT_SPECIFIC_4 = 15,};
enum MACRO_SNAFF {SNAFF_IGNORE_CASE = 0x80,};
enum MACRO_SNF {SNF_RETRY = 0x8000,SNF_EXIT = 0x4000,SNF_ABORT = 0x2000,SNF_CONTINUE = 0x1000,SNF_REBOOT = 0x800,SNF_BIZARRE = 0x400,EF_PANIC = 0x80,EF_RUN_DOS = 0x40,EF_OLD_EXIT = 0x20,EF_RESET = 0x10,EF_RESTART = 0x8,};
enum MACRO_SNF_NOTIFICATION {SNF_NOTIFICATION = 0xFFF,};
enum MACRO_SNF_WORD2 {SNF_WORD2_MEM = 0x4000,};
enum MACRO_SNF_WORD3 {SNF_WORD3_MEM = 0x2000,};
enum MACRO_SNF_WORD4 {SNF_WORD4_MEM = 0x1000,};
enum MACRO_SNOT {SNOT_INCLUDE_NOTE = 0x0,SNOT_EXCLUDE_NOTE = 0x1,SNOT_NOTE_ONLY = 0x2,WC_MATCH_SINGLE_CHAR = 0x10,WC_MATCH_MULTIPLE_CHARS = 0x11,WC_MATCH_WHITESPACE_CHAR = 0x12,VTRC_PARAGRAPH_CHANGE = 0x8000,};
enum MACRO_SNSF {SNSF_MANUAL = 0x80,SNSF_CONTACTS = 0x40,SNSF_RECENT = 0x20,SNSF_NO_ADDRESS = 0x10,};
enum MACRO_SNSF_UPDATE {SNSF_UPDATE_APP_TARGET_GCN_LISTS = 0x4000,SNSF_NULL_STATUS = 0x2000,SNSF_STRUCTURE_INITIALIZED = 0x1000,SNSF_SEND_AFTER_GENERATION = 0x800,SNSF_SEND_ONLY = 0x400,SNSF_RELAYED_TO_LIKE_OBJECTS = 0x200,};
enum MACRO_SO {SO_NORMAL_ORDER = 0x0,SO_CUSTOM_ORDER = 0x1,};
enum MACRO_SO2 {SO_START_FROM_TOP = 0x40,SO_NO_WILDCARDS = 0x20,SO_IGNORE_SOFT_HYPHENS = 0x10,SO_BACKWARD_SEARCH = 0x8,SO_IGNORE_CASE = 0x4,SO_PARTIAL_WORD = 0x2,SO_PRESERVE_CASE_OF_DOCUMENT_STRING = 0x1,};
enum MACRO_SOCF {SOCF_OPEN = 0x2,SOCF_CLOSE = 0x1,};
enum MACRO_SOCF_DEFAULT {SOCF_DEFAULT_FEATURES = 3,};
enum MACRO_SOCF_DEFAULT_TOOLBOX {SOCF_DEFAULT_TOOLBOX_FEATURES = 3,SSDF_NEW_CATEGORY = 128,SSDDF_RELATIVE = -32768,};
enum MACRO_SOCKET {SOCKET_NO_TIMEOUT = -1,};
enum MACRO_SOF {SOF_TIMEOUT = 0x1,SOF_NOBLOCK = 0x2,STREAM_READ = 0xFFFF,};
enum MACRO_SOT {SOT_RECV_BUF = 0x0,SOT_SEND_BUF = 0x1,SOT_INLINE = 0x2,SOT_NODELAY = 0x3,};
enum MACRO_SOUND {SOUND_ERROR_NO_ERRORS = 0,SOUND_ERROR_EXCLUSIVE_ACCESS_GRANTED = 2,SOUND_ERROR_OUT_OF_MEMORY = 4,SOUND_ERROR_UNABLE_TO_ALLOCATE_STREAM = 6,SOUND_ERROR_HARDWARE_NOT_AVAILABLE = 8,SOUND_ERROR_FAILED_ATTACH_TO_HARDWARE = 10,SOUND_ERROR_HARDWARE_DOESNT_SUPPORT_FORMAT = 12,SOUND_ERROR_DAC_UNATTACHED = 14,SOUND_ERROR_STREAM_DESTROYED = 16,SOUND_ERROR_STREAM_FULL = 18,};
enum MACRO_SOUND_MASK {SOUND_MASK_ALL = 0xFFFF,};
enum MACRO_SOURCE {SOURCE = 0,DESTINATION = 1,};
enum MACRO_SO_COLLATE {SO_COLLATE = 0x40,};
enum MACRO_SO_FORCE {SO_FORCE_ROT = 0x20,};
enum MACRO_SO_NO {SO_NO_STAPLER = 0x0,SO_STAPLER = 0x1,};
enum MACRO_SO_ODD {SO_ODD_EVEN = 0x8,};
enum MACRO_SO_REVERSE {SO_REVERSE_ORDER = 0x10,};
enum MACRO_SO_SCALE {SO_SCALE = 0x4,PRINT_PROTO_MAJOR = 0x5,};
enum MACRO_SP {SP_THEME = 1,SSS_ONE_SHOT = 128,SSS_SMALL = 256,SSS_MEDIUM = 512,SSS_LARGE = 1024,};
enum MACRO_SPC {SPC_DEFAULT_FEATURES = 15,};
enum MACRO_SPCF {SPCF_DELETE_ANCHORS = 0x4,SPCF_INSERT_CONTROLS = 0x2,SPCF_DELETE_CONTROLS = 0x1,};
enum MACRO_SPCTF {SPCTF_INSERT_ANCHORS = 0x8,SPCTF_DELETE_ANCHORS = 0x4,SPCTF_INSERT_CONTROLS = 0x2,SPCTF_DELETE_CONTROLS = 0x1,};
enum MACRO_SPC_DEFAULT {SPC_DEFAULT_TOOLBOX_FEATURES = 15,};
enum MACRO_SPDATF {SPDATF_TIME_BEFORE_DATE = 0x40,};
enum MACRO_SPELL {SPELL_MAX_WORD_LENGTH = 65,};
enum MACRO_SPF {SPF_PRINT_TO_SCREEN = 0x4000,};
enum MACRO_SPF_PRINT {SPF_PRINT_HEADER = 0x40,SPF_PRINT_FOOTER = 0x20,};
enum MACRO_SPF_PRINT_GRID {SPF_PRINT_GRID = 0x1,SSF_MATCH_CASE = 0x80,};
enum MACRO_SPF_SCALE {SPF_SCALE_TO_FIT = 0x1000,SPF_PRINT_ROW_COLUMN_TITLES = 0x800,SPF_SKIP_DRAW = 0x400,SPF_CENTER_VERTICALLY = 0x200,SPF_CENTER_HORIZONTALLY = 0x100,};
enum MACRO_SPLC {SPLC_DEFAULT_FEATURES = 7,};
enum MACRO_SPLCF {SPLCF_MAKE_CURVY = 0x4,SPLCF_MAKE_STRAIGHT = 0x2,SPLCF_DELETE = 0x1,};
enum MACRO_SPLCTF {SPLCTF_MAKE_CURVY = 0x4,SPLCTF_MAKE_STRAIGHT = 0x2,SPLCTF_DELETE = 0x1,};
enum MACRO_SPLC_DEFAULT {SPLC_DEFAULT_TOOLBOX_FEATURES = 7,SSCF_NONE = 8,};
enum MACRO_SPO {SPO_SELECTED_CELLS = 0,SPO_ALL_CELLS = 2,SA_TARGETABLE = 128,};
enum MACRO_SPP {SPP_DISPLAY = 0x32,SPP_FOOTNOTE = 0x28,SPP_ALPHA = 0x2D,SPP_NUMERATOR = 0x32,};
enum MACRO_SPP_DEFAULT {SPP_DEFAULT = 50,SPS_DISPLAY = 55,SPS_FOOTNOTE = 65,SPS_ALPHA = 75,};
enum MACRO_SPREADSHEET {SPREADSHEET_RULER_WIDTH = 40,};
enum MACRO_SPREADSHEET_RULER {SPREADSHEET_RULER_HEIGHT = 12,};
enum MACRO_SPRT {SPRT_OK = 0x0,SPRT_TOO_OLD = 0x1,SPRT_TOO_NEW = 0x2,};
enum MACRO_SPS {SPS_NUMERATOR = 60,};
enum MACRO_SPS_DEFAULT {SPS_DEFAULT = 50,};
enum MACRO_SPT {SPT_8088 = 0,};
enum MACRO_SPT_8086 {SPT_8086 = 0,SPT_80186 = 1,SPT_80286 = 2,SPT_80386 = 3,SPT_80486 = 4,};
enum MACRO_SR {SR_DTE = 0,SR_DCE = 1,};
enum MACRO_SRC {SRC_SUGGESTED_BEGINNING_FEATURES = 848,SRC_DEFAULT_TOOLBOX_FEATURES = 1,};
enum MACRO_SRCF {SRCF_FIND_FROM_TOP = 0x400,SRCF_CLOSE = 0x200,SRCF_FIND_NEXT = 0x100,SRCF_FIND_PREV = 0x80,SRCF_REPLACE_CURRENT = 0x40,SRCF_REPLACE_ALL_IN_SELECTION = 0x20,SRCF_REPLACE_ALL = 0x10,SRCF_PARTIAL_WORDS = 0x8,SRCF_IGNORE_CASE = 0x4,SRCF_WILDCARDS = 0x2,SRCF_SPECIAL_CHARS = 0x1,};
enum MACRO_SRCTF {SRCTF_SEARCH_REPLACE = 0x1,SRC_DEFAULT_FEATURES = 0x3FF,};
enum MACRO_SREF {SREF_SEARCH = 0x2,SREF_REPLACE = 0x1,};
enum MACRO_SRF {SRF_ADDRESS = 0x8000,SRF_URGENT = 0x4000,SRF_PEEK = 0x2000,};
enum MACRO_SRFI {SRFI_SEARCH_TEXT = 0,SRFI_REPLACE_TEXT = 1,SRCF_NOTES_OPTIONS = 2048,};
enum MACRO_SRF_SSHEET {SRF_SSHEET_IS_FOCUS = 0x8,SRF_NO_INTERACTIVE_RESIZE = 0x4,SRF_SSHEET_IS_TARGET = 0x2,SRF_HAVE_GRAB = 0x1,};
enum MACRO_SRP {SRP_FLAGS = -16384,};
enum MACRO_SRT {SRT_OK = 0x0,SRT_NULL_OPERATION = 0x2,SRT_TOO_MANY_POINTS = 0x4,};
enum MACRO_SS {SS_LALT = 0x80,SS_RALT = 0x40,SS_LCTRL = 0x20,SS_RCTRL = 0x10,SS_LSHIFT = 0x8,SS_RSHIFT = 0x4,SS_FIRE_BUTTON_1 = 0x2,SS_FIRE_BUTTON_2 = 0x1,};
enum MACRO_SS2 {SS_CLOSED = 0x40,SS_FILLED = 0x20,SS_HAS_ATTR_CHUNKS = 0x10,SS_CREATED_BLOCK = 0x8,SS_MODE = 0x7,SS_MODE_OFFSET = 0x0,};
enum MACRO_SSC {SSC_DEFAULT_FEATURES = 255,};
enum MACRO_SSCF {SSCF_UI = 0x1,};
enum MACRO_SSCF_DEFAULT {SSCF_DEFAULT_FEATURES = 1,};
enum MACRO_SSCF_DEFINE {SSCF_DEFINE = 0x80,SSCF_REDEFINE = 0x40,SSCF_RETURN_TO_BASE = 0x20,SSCF_APPLY = 0x10,SSCF_MANAGE = 0x8,SSCF_LOAD = 0x4,SSCF_SAVE_STYLE = 0x2,SSCF_RECALL_STYLE = 0x1,};
enum MACRO_SSCF_SEMI {SSCF_SEMI_SMOOTH = 0x4,SSCF_VERY_SMOOTH = 0x2,SSCF_AUTO_SMOOTH = 0x1,};
enum MACRO_SSCTF {SSCTF_NONE = 0x8,SSCTF_SEMI_SMOOTH = 0x4,SSCTF_VERY_SMOOTH = 0x2,SSCTF_AUTO_SMOOTH = 0x1,};
enum MACRO_SSCTF_REDEFINE {SSCTF_REDEFINE = 0x10,SSCTF_RETURN_TO_BASE = 0x8,SSCTF_STYLE_LIST = 0x4,SSCTF_SAVE_STYLE = 0x2,SSCTF_RECALL_STYLE = 0x1,};
enum MACRO_SSC_DEFAULT {SSC_DEFAULT_TOOLBOX_FEATURES = 7,MAEF_NOT_HERE = -32768,};
enum MACRO_SSDDF {SSDDF_PLURAL_FOR_NON_RELATIVE_IF_NEEDED = 0x4000,};
enum MACRO_SSF {SSF_ALARM = 0x20,SSF_KEY_CLICK = 0x10,SSF_NO_INPUT = 0x8,SSF_NOTIFY = 0x4,SSF_WARNING = 0x2,SSF_ERROR = 0x1,};
enum MACRO_SSFF {SSFF_ROWS = 0x2,SSFF_GEOMETRIC = 0x1,};
enum MACRO_SSF_ADDRESS {SSF_ADDRESS = 0x8000,SSF_URGENT = 0x4000,SSF_OPEN_LINK = 0x2000,};
enum MACRO_SSF_MATCH {SSF_MATCH_PARTIAL_WORDS = 0x40,SSF_SEARCH_FORMULAS = 0x20,SSF_SEARCH_VALUES = 0x10,SSF_SEARCH_NOTES = 0x8,SSF_SEARCH_TEXT_OBJECTS = 0x4,SSF_SEARCH_BY_ROWS = 0x2,};
enum MACRO_SSM {SSM_NORMAL = 0x0,SSM_URGENT = 0x1,};
enum MACRO_SSMC {SSMC_DEFAULT_FEATURES = 15,};
enum MACRO_SSMC_DEFAULT {SSMC_DEFAULT_TOOLBOX_FEATURES = 15,};
enum MACRO_SSPF {SSPF_HAS_CONTROLS = 0x20,SSPF_FIRST_POINT_IS_CONTROL = 0x10,SSPF_TYPE = 0xF,SSPF_TYPE_OFFSET = 0x0,};
enum MACRO_SSRCAF {SSRCAF_TRANSFORM_VALID = 0x80,SSRCAF_REF_COUNT = 0x7F,};
enum MACRO_SSS {SSS_TYPE = 0x8C00,SSS_DATA = 0x3FF,};
enum MACRO_SSS_TYPE {SSS_TYPE_OFFSET = 10,SSS_DATA_OFFSET = 0,};
enum MACRO_SST {SST_NONE = 0x0,SST_ANCHOR_POINT = 0x1,SST_SEGMENT = 0x2,SST_CONTROL_POINT = 0x3,SST_INSIDE_CLOSED_CURVE = 0x4,SST_INSIDE_VIS_BOUNDS = 0x5,};
enum MACRO_SST_PIXELS {SST_PIXELS = 0x0,SST_COUNT = 0x400,SST_PCT_OF_FIELD_WIDTH = 0x800,SST_PCT_OF_FIELD_HEIGHT = 0xC00,SST_AVG_CHAR_WIDTHS = 0x1000,SST_WIDE_CHAR_WIDTHS = 0x1400,SST_LINES_OF_TEXT = 0x1800,};
enum MACRO_SS_TILE {SS_TILE = 0x0,SS_SCALE_TO_FIT = 0x1,SO_DELETE = 0x80,};
enum MACRO_ST {ST_POINTS = 0,ST_ELAPSED_TIME = 1,ST_MONEY = 2,HSA_LOW_SCORE_IS_BETTER = 128,};
enum MACRO_STANDARD {STANDARD_CURSOR_IMAGE_SIZE = 32,CURSOR_IMAGE_SIZE_32 = 128,CURSOR_IMAGE_SIZE_64 = 512,};
enum MACRO_STD {STD_INIT_HEAP = 0x100,STD_INIT_HANDLES = 0x10,STD_LMEM_OBJECT_FLAGS = 0x8800,};
enum MACRO_STF {STF_SPELL = 0x1,SC_DEFAULT_FEATURES = 0x37FF,};
enum MACRO_STREAM {STREAM_FIRST_DEV_ERROR = 256,};
enum MACRO_STREAM_BOTH {STREAM_BOTH = 0xFFFE,};
enum MACRO_STREAM_TYPE {STREAM_TYPE_READER_OFFSET = 5,STREAM_TYPE_READER = 32,};
enum MACRO_STREAM_TYPE_EVENT {STREAM_TYPE_EVENT_OFFSET = 2,STREAM_TYPE_EVENT = 28,};
enum MACRO_STREAM_TYPE_HOW {STREAM_TYPE_HOW_OFFSET = 0,STREAM_TYPE_HOW = 1,};
enum MACRO_STREAM_WRITE {STREAM_WRITE = 0x0,SERIAL_READ = 0xFFFF,};
enum MACRO_ST_DOING {ST_DOING_CHAR_SELECTION = 0,ST_DOING_WORD_SELECTION = 1,ST_DOING_LINE_SELECTION = 2,ST_DOING_PARA_SELECTION = 3,VTISF_IS_TARGET = 128,};
enum MACRO_ST_MAX {ST_MAX_SMOOTHNESS = 3,};
enum MACRO_ST_NONE {ST_NONE = 0x0,ST_SEMI_SMOOTH = 0x1,ST_VERY_SMOOTH = 0x2,ST_AUTO_SMOOTH = 0x3,};
enum MACRO_SUSF {SUSF_GEOMETRY = 0x2,SUSF_UPDATE_UI = 0x1,};
enum MACRO_SVMID {SVMID_RANGE_DBASE = 0xFF00,};
enum MACRO_SVT {SVT_AROUND_UPPER_LEFT = 0,SVT_AROUND_CENTER = 1,SVT_AROUND_POINT = 2,};
enum MACRO_SW {SW_TYPE = 0x8C00,SW_DATA = 0x3FF,};
enum MACRO_SWSS {SWSS_RATIO = 0x8000,SWSS_SIGN = 0x4000,SWSS_MANTISSA = 0x3C00,SWSS_FRACTION = 0x3FF,};
enum MACRO_TAB {TAB_INTRINSIC_WIDTH = 18,};
enum MACRO_TAT {TAT_CHAR_ATTRS = 0,TAT_PARA_ATTRS = 1,TAT_GRAPHICS = 2,TAT_TYPES = 3,};
enum MACRO_TC {TC_NULL = 0x0,TC_CTRL_A = 0x1,TC_CTRL_B = 0x2,TC_CTRL_C = 0x3,TC_CTRL_D = 0x4,TC_CTRL_E = 0x5,TC_CTRL_F = 0x6,TC_CTRL_G = 0x7,TC_CTRL_H = 0x8,TC_TAB = 0x9,TC_LINEFEED = 0xA,TC_CTRL_K = 0xB,TC_CTRL_L = 0xC,TC_ENTER = 0xD,TC_SHIFT_OUT = 0xE,TC_SHIFT_IN = 0xF,TC_CTRL_P = 0x10,TC_CTRL_Q = 0x11,TC_CTRL_R = 0x12,TC_CTRL_S = 0x13,TC_CTRL_T = 0x14,TC_CTRL_U = 0x15,TC_CTRL_V = 0x16,TC_CTRL_W = 0x17,TC_CTRL_X = 0x18,TC_CTRL_Y = 0x19,TC_CTRL_Z = 0x1A,TC_ESCAPE = 0x1B,};
enum MACRO_TC2 {TC_GCM_FEATURES = 1,};
enum MACRO_TCC {TCC_DEFAULT_FEATURES = 31,TCC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_TCCF {TCCF_CHARACTER = 0x10,TCCF_WORD = 0x8,TCCF_LINE = 0x4,TCCF_PARAGRAPH = 0x2,TCCF_RECALC = 0x1,};
enum MACRO_TCD {TCD_YEAR = 0xFE00,};
enum MACRO_TCD_DAY {TCD_DAY = 0x1F,};
enum MACRO_TCD_DAY_OFFSET {TCD_DAY_OFFSET = 0,};
enum MACRO_TCD_MONTH {TCD_MONTH = 0x1E0,};
enum MACRO_TCD_MONTH_OFFSET {TCD_MONTH_OFFSET = 5,};
enum MACRO_TCD_YEAR {TCD_YEAR_OFFSET = 9,};
enum MACRO_TCF {TCF_LIST = 0x80,TCF_POSITION = 0x40,TCF_GRAY_SCREEN = 0x20,TCF_TYPE = 0x10,TCF_LEADER = 0x8,TCF_LINE = 0x4,TCF_CLEAR = 0x2,TCF_CLEAR_ALL = 0x1,};
enum MACRO_TC_ACUTE {TC_ACUTE = 0x80,TC_L_MU = 0x81,TC_PLUSMINUS = 0x82,TC_PARAGRAPH = 0x8D,TC_GERMANDBLS = 0x8E,TC_REGISTERED = 0x9D,TC_COPYRIGHT = 0x9E,TC_TRADEMARK = 0xA0,TC_L_PI = 0xA3,TC_CURRENCY = 0xDB,TC_STERLING = 0xDC,TC_YEN = 0xDD,TC_CENT = 0xDE,TC_SECTION = 0xE5,TC_LESSEQUAL = 0xEE,TC_GREATEREQUAL = 0xEF,TC_ORDFEMININE = 0xFA,TC_PERTHOUSAND = 0xFB,TC_GUILLEDBLLEFT = 0xFC,TC_GUILLEDBLRIGHT = 0xFD,TC_DIVISION = 0xFE,TC_DEGREE = 0xFF,};
enum MACRO_TC_CHARACTER {TC_CHARACTER_MAI_EK_LEFT_DOWN = 0x83,TC_CHARACTER_MAI_THO_LEFT_DOWN = 0x84,TC_CHARACTER_MAI_TRI_LEFT_DOWN = 0x85,TC_CHARACTER_MAI_CHATTAWA_LEFT_DOWN = 0x86,TC_CHARACTER_THANTHAKHAT_LEFT_DOWN = 0x87,TC_CHARACTER_MAI_EK_DOWN = 0x88,TC_CHARACTER_MAI_THO_DOWN = 0x89,TC_CHARACTER_MAI_TRI_DOWN = 0x8A,TC_CHARACTER_MAI_CHATTAWA_DOWN = 0x8B,TC_CHARACTER_THANTHAKHAT_DOWN = 0x8C,TC_CHARACTER_NIKHAHIT_LEFT = 0x8F,TC_CHARACTER_YO_YING_NO_DESCENT = 0x90,TC_CHARACTER_SARA_AM_SPLIT = 0x91,TC_CHARACTER_MAI_HAN_AKAT_LEFT = 0x92,TC_CHARACTER_MAITAIKHU_LEFT = 0x93,TC_CHARACTER_SARA_I_LEFT = 0x94,TC_CHARACTER_SARA_II_LEFT = 0x95,TC_CHARACTER_SARA_UE_LEFT = 0x96,TC_CHARACTER_SARA_UEE_LEFT = 0x97,TC_CHARACTER_MAI_EK_LEFT = 0x98,TC_CHARACTER_MAI_THO_LEFT = 0x99,TC_CHARACTER_MAI_TRI_LEFT = 0x9A,TC_CHARACTER_MAI_CHATTAWA_LEFT = 0x9B,TC_CHARACTER_THANTHAKHAT_LEFT = 0x9C,TC_CHARACTER_THO_THAN_NO_DESCENT = 0x9F,};
enum MACRO_TC_COLUMN {TC_COLUMN_BREAK = 12,TC_NONBRKHYPHEN = 30,TC_OPTHYPHEN = 31,};
enum MACRO_TC_CR {TC_CR = 13,};
enum MACRO_TC_CTRL {TC_CTRL_M = 13,};
enum MACRO_TC_CTRL_I {TC_CTRL_I = 9,TC_CTRL_J = 10,};
enum MACRO_TC_DC1 {TC_DC1 = 17,TC_DC2 = 18,TC_DC3 = 19,TC_DC4 = 20,TC_CAN = 24,TC_EM = 25,TC_ESC = 27,};
enum MACRO_TC_DEFAULT {TC_DEFAULT_FEATURES = 255,TC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_TC_FIELD {TC_FIELD_SEP = 28,TC_SPACE = 32,TC_EXCLAMATION = 33,TC_QUOTE = 34,TC_NUMBER_SIGN = 35,TC_DOLLAR_SIGN = 36,TC_PERCENT = 37,TC_AMPERSAND = 38,TC_SNG_QUOTE = 39,TC_LEFT_PAREN = 40,TC_RIGHT_PAREN = 41,TC_ASTERISK = 42,TC_PLUS = 43,TC_COMMA = 44,TC_MINUS = 45,TC_PERIOD = 46,TC_SLASH = 47,TC_ZERO = 48,TC_ONE = 49,TC_TWO = 50,TC_THREE = 51,TC_FOUR = 52,TC_FIVE = 53,TC_SIX = 54,TC_SEVEN = 55,TC_EIGHT = 56,TC_NINE = 57,TC_COLON = 58,TC_SEMICOLON = 59,TC_LESS_THAN = 60,TC_EQUAL = 61,TC_GREATER_THAN = 62,TC_QUESTION_MARK = 63,TC_AT_SIGN = 64,TC_CAP_A = 65,TC_CAP_B = 66,TC_CAP_C = 67,TC_CAP_D = 68,TC_CAP_E = 69,TC_CAP_F = 70,TC_CAP_G = 71,TC_CAP_H = 72,TC_CAP_I = 73,TC_CAP_J = 74,TC_CAP_K = 75,TC_CAP_L = 76,TC_CAP_M = 77,TC_CAP_N = 78,TC_CAP_O = 79,TC_CAP_P = 80,TC_CAP_Q = 81,TC_CAP_R = 82,TC_CAP_S = 83,TC_CAP_T = 84,TC_CAP_U = 85,TC_CAP_V = 86,TC_CAP_W = 87,TC_CAP_X = 88,TC_CAP_Y = 89,TC_CAP_Z = 90,TC_LEFT_BRACKET = 91,TC_BACKSLASH = 92,TC_RIGHT_BRACKET = 93,TC_ASCII_CIRCUMFLEX = 94,TC_UNDERSCORE = 95,TC_BACKQUOTE = 96,TC_SMALL_A = 97,TC_SMALL_B = 98,TC_SMALL_C = 99,TC_SMALL_D = 100,TC_SMALL_E = 101,TC_SMALL_F = 102,TC_SMALL_G = 103,TC_SMALL_H = 104,TC_SMALL_I = 105,TC_SMALL_J = 106,TC_SMALL_K = 107,TC_SMALL_L = 108,TC_SMALL_M = 109,TC_SMALL_N = 110,TC_SMALL_O = 111,TC_SMALL_P = 112,TC_SMALL_Q = 113,TC_SMALL_R = 114,TC_SMALL_S = 115,TC_SMALL_T = 116,TC_SMALL_U = 117,TC_SMALL_V = 118,TC_SMALL_W = 119,TC_SMALL_X = 120,TC_SMALL_Y = 121,TC_SMALL_Z = 122,TC_LEFT_BRACE = 123,TC_VERTICAL_BAR = 124,TC_RIGHT_BRACE = 125,TC_ASCII_TILDE = 126,TC_DELETE = 127,};
enum MACRO_TC_FS {TC_FS = 28,};
enum MACRO_TC_HYPHEN {TC_HYPHEN = 45,TC_GRAVE = 96,TC_CHARACTER_KO_KAI = 161,TC_CHARACTER_KHO_KHAI = 162,TC_CHARACTER_KHO_KHWAI = 164,TC_CHARACTER_KHO_KHON = 165,TC_CHARACTER_KHO_RAKHANG = 166,TC_CHARACTER_NGO_NGU = 167,TC_CHARACTER_CHO_CHAN = 168,TC_CHARACTER_CHO_CHING = 169,TC_CHARACTER_CHO_CHANG = 170,TC_CHARACTER_SO_SO = 171,TC_CHARACTER_CHO_CHOE = 172,TC_CHARACTER_YO_YING = 173,TC_CHARACTER_DO_CHADA = 174,TC_CHARACTER_TO_PATAK = 175,TC_CHARACTER_THO_THAN = 176,TC_CHARACTER_THO_NANGMONTHO = 177,TC_CHARACTER_THO_PHUTHAO = 178,TC_CHARACTER_NO_NEN = 179,TC_CHARACTER_DO_DEK = 180,TC_CHARACTER_TO_TAO = 181,TC_CHARACTER_THO_THUNG = 182,TC_CHARACTER_THO_THAHAN = 183,TC_CHARACTER_THO_THONG = 184,TC_CHARACTER_NO_NU = 185,TC_CHARACTER_BO_BAIMAI = 186,TC_CHARACTER_PO_PLA = 187,TC_CHARACTER_PHO_PHUNG = 188,TC_CHARACTER_FO_FA = 189,TC_CHARACTER_PHO_PHAN = 190,TC_CHARACTER_FO_FAN = 191,TC_CHARACTER_PHO_SAMPHAO = 192,TC_CHARACTER_MO_MA = 193,TC_CHARACTER_YO_YAK = 194,TC_CHARACTER_RO_RUA = 195,TC_CHARACTER_RU = 196,TC_CHARACTER_LO_LING = 197,TC_CHARACTER_LU = 198,TC_CHARACTER_WO_WAEN = 199,TC_CHARACTER_SO_SALA = 200,TC_CHARACTER_SO_RUSI = 201,TC_CHARACTER_SO_SUA = 202,TC_CHARACTER_HO_HIP = 203,TC_CHARACTER_LO_CHULA = 204,TC_CHARACTER_O_ANG = 205,TC_CHARACTER_HO_NOKHUK = 206,TC_CHARACTER_PAIYANNOI = 207,TC_CHARACTER_SARA_A = 208,TC_CHARACTER_MAI_HAN_AKAT = 209,TC_CHARACTER_SARA_AA = 210,TC_CHARACTER_SARA_AM = 211,TC_CHARACTER_SARA_I = 212,TC_CHARACTER_SARA_II = 213,TC_CHARACTER_SARA_UE = 214,TC_CHARACTER_SARA_UEE = 215,TC_CHARACTER_SARA_U = 216,TC_CHARACTER_SARA_UU = 217,TC_CHARACTER_PHINTHU = 218,TC_CURRENCY_SYMBOL_BAHT = 223,TC_CHARACTER_SARA_E = 224,TC_CHARACTER_SARA_AE = 225,TC_CHARACTER_SARA_O = 226,TC_CHARACTER_SARA_AI_MAIMUAN = 227,TC_CHARACTER_SARA_AI_MAIMALAI = 228,TC_CHARACTER_MAIYAMOK = 230,TC_CHARACTER_MAITAIKHU = 231,TC_CHARACTER_MAI_EK = 232,TC_CHARACTER_MAI_THO = 233,TC_CHARACTER_MAI_TRI = 234,TC_CHARACTER_MAI_CHATTAWA = 235,TC_CHARACTER_THANTHAKHAT = 236,TC_CHARACTER_NIKHAHIT = 237,TC_DIGIT_ZERO = 240,TC_DIGIT_ONE = 241,TC_DIGIT_TWO = 242,TC_DIGIT_THREE = 243,TC_DIGIT_FOUR = 244,TC_DIGIT_FIVE = 245,TC_DIGIT_SIX = 246,TC_DIGIT_SEVEN = 247,TC_DIGIT_EIGHT = 248,TC_DIGIT_NINE = 249,};
enum MACRO_TC_LF {TC_LF = 10,TC_CTRL_N = 14,TC_CTRL_O = 15,TC_NULL_WIDTH = 25,TC_GRAPHIC = 26,TC_THINSPACE = 27,TC_ENSPACE = 28,TC_EMSPACE = 29,};
enum MACRO_TC_NUL {TC_NUL = 0,TC_STX = 2,TC_ETX = 3,TC_BEL = 7,TC_BS = 8,};
enum MACRO_TC_SECTION {TC_SECTION_BREAK = 11,TC_PAGE_BREAK = 12,};
enum MACRO_TC_VT {TC_VT = 11,TC_FF = 12,};
enum MACRO_TD {TD_GCM_TOOLBOX_FEATURES = 1,PRINTCF_PRINT_TRIGGER = 2,};
enum MACRO_TDF {TDF_THESDICT = 0x1,};
enum MACRO_TDTF {TDTF_THESDICT = 0x1,};
enum MACRO_TELNET {TELNET_DEFAULT_PORT = 23,};
enum MACRO_TEXT {TEXT_ADDRESS_PAST_END = 0xFFFF,};
enum MACRO_TEXT2 {TEXT_RULER_HEIGHT = 22,TEXT_POS_INVALID = 0,};
enum MACRO_TEXT_ADDRESS {TEXT_ADDRESS_PAST_END_HIGH = 0xFF,TEXT_ADDRESS_PAST_END_LOW = 0xFFFF,};
enum MACRO_TF {TF_NO_TRACTOR = 0x0,TF_TRACTOR1 = 0x1,TF_TRACTOR2 = 0x2,TF_TRACTOR3 = 0x3,};
enum MACRO_TFF {TFF_EDITABLE_TEXT_OBJECT_HAS_FOCUS = 0x8000,TFF_OBJECT_RUN_BY_UI_THREAD = 0x4000,};
enum MACRO_TGF {TGF_ENFORCE_DESIRED_MIN_HEIGHT = 0x10,TGF_ENFORCE_DESIRED_MAX_HEIGHT = 0x8,TGF_DISABLE_ENFORCED_DESIRED_MAX_HEIGHT_WHILE_EDITING = 0x4,TGF_ENFORCE_MIN_DISPLAY_SIZE = 0x2,TGF_SHRINK_WIDTH_TO_MIN_AFTER_EDIT = 0x1,};
enum MACRO_TGHT {TGHT_INACTIVE_HIGHLIGHT = 0,TGHT_ACTIVE_HIGHLIGHT = 1,TGHT_NO_HIGHLIGHT = 2,GEN_VALUE_MAX_TEXT_LEN = 30,GVSF_INDETERMINATE = 128,};
enum MACRO_THAI {THAI_CHAR_FROM_KEY_CAP_A = 196,THAI_CHAR_FROM_KEY_CAP_B = 218,THAI_CHAR_FROM_KEY_CAP_C = 169,THAI_CHAR_FROM_KEY_CAP_D = 175,THAI_CHAR_FROM_KEY_CAP_E = 174,THAI_CHAR_FROM_KEY_CAP_F = 226,THAI_CHAR_FROM_KEY_CAP_G = 172,THAI_CHAR_FROM_KEY_CAP_H = 231,THAI_CHAR_FROM_KEY_CAP_I = 179,THAI_CHAR_FROM_KEY_CAP_J = 235,THAI_CHAR_FROM_KEY_CAP_K = 201,THAI_CHAR_FROM_KEY_CAP_L = 200,THAI_CHAR_FROM_KEY_CAP_M = 94,THAI_CHAR_FROM_KEY_CAP_N = 236,THAI_CHAR_FROM_KEY_CAP_O = 207,THAI_CHAR_FROM_KEY_CAP_P = 173,THAI_CHAR_FROM_KEY_CAP_Q = 240,THAI_CHAR_FROM_KEY_CAP_R = 177,THAI_CHAR_FROM_KEY_CAP_S = 166,THAI_CHAR_FROM_KEY_CAP_T = 184,THAI_CHAR_FROM_KEY_CAP_U = 234,THAI_CHAR_FROM_KEY_CAP_V = 206,THAI_CHAR_FROM_KEY_CAP_W = 34,THAI_CHAR_FROM_KEY_CAP_X = 41,THAI_CHAR_FROM_KEY_CAP_Y = 237,THAI_CHAR_FROM_KEY_CAP_Z = 40,THAI_CHAR_FROM_KEY_COMMA = 193,THAI_CHAR_FROM_KEY_EIGHT = 164,THAI_CHAR_FROM_KEY_FIVE = 182,THAI_CHAR_FROM_KEY_FOUR = 192,THAI_CHAR_FROM_KEY_NINE = 181,THAI_CHAR_FROM_KEY_ONE = 43,THAI_CHAR_FROM_KEY_PERIOD = 227,THAI_CHAR_FROM_KEY_SEMICOLON = 199,THAI_CHAR_FROM_KEY_SEVEN = 214,THAI_CHAR_FROM_KEY_SHIFT_COMMA = 178,THAI_CHAR_FROM_KEY_SHIFT_EIGHT = 248,THAI_CHAR_FROM_KEY_SHIFT_FIVE = 245,THAI_CHAR_FROM_KEY_SHIFT_FOUR = 244,THAI_CHAR_FROM_KEY_SHIFT_NINE = 249,THAI_CHAR_FROM_KEY_SHIFT_ONE = 241,THAI_CHAR_FROM_KEY_SHIFT_PERIOD = 204,THAI_CHAR_FROM_KEY_SHIFT_SEMICOLON = 171,THAI_CHAR_FROM_KEY_SHIFT_SEVEN = 247,THAI_CHAR_FROM_KEY_SHIFT_SIX = 217,THAI_CHAR_FROM_KEY_SHIFT_THREE = 243,THAI_CHAR_FROM_KEY_SHIFT_TWO = 242,THAI_CHAR_FROM_KEY_SHIFT_ZERO = 240,THAI_CHAR_FROM_KEY_SIX = 216,THAI_CHAR_FROM_KEY_SMALL_A = 191,THAI_CHAR_FROM_KEY_SMALL_B = 212,THAI_CHAR_FROM_KEY_SMALL_C = 225,THAI_CHAR_FROM_KEY_SMALL_D = 161,THAI_CHAR_FROM_KEY_SMALL_E = 211,THAI_CHAR_FROM_KEY_SMALL_F = 180,THAI_CHAR_FROM_KEY_SMALL_G = 224,THAI_CHAR_FROM_KEY_SMALL_H = 233,THAI_CHAR_FROM_KEY_SMALL_I = 195,THAI_CHAR_FROM_KEY_SMALL_J = 232,THAI_CHAR_FROM_KEY_SMALL_K = 210,THAI_CHAR_FROM_KEY_SMALL_L = 202,THAI_CHAR_FROM_KEY_SMALL_M = 183,THAI_CHAR_FROM_KEY_SMALL_N = 215,THAI_CHAR_FROM_KEY_SMALL_O = 185,THAI_CHAR_FROM_KEY_SMALL_P = 194,THAI_CHAR_FROM_KEY_SMALL_Q = 230,THAI_CHAR_FROM_KEY_SMALL_R = 190,THAI_CHAR_FROM_KEY_SMALL_S = 203,THAI_CHAR_FROM_KEY_SMALL_T = 208,THAI_CHAR_FROM_KEY_SMALL_U = 213,THAI_CHAR_FROM_KEY_SMALL_V = 205,THAI_CHAR_FROM_KEY_SMALL_W = 228,THAI_CHAR_FROM_KEY_SMALL_X = 187,THAI_CHAR_FROM_KEY_SMALL_Y = 209,THAI_CHAR_FROM_KEY_SMALL_Z = 188,THAI_CHAR_FROM_KEY_SPACE = 32,THAI_CHAR_FROM_KEY_THREE = 45,THAI_CHAR_FROM_KEY_TWO = 223,THAI_CHAR_FROM_KEY_ZERO = 168,};
enum MACRO_THCF {THCF_CLEAR_ALL_HYPERLINKS = 0x20,THCF_FOLLOW_HYPERLINK = 0x10,THCF_SET_HYPERLINK = 0x8,THCF_SET_CONTEXT = 0x4,THCF_DEFINE_FILE = 0x2,THCF_DEFINE_CONTEXT = 0x1,};
enum MACRO_THIRTYSECOND {THIRTYSECOND = 4,};
enum MACRO_TI {TI_ON_MMC = 0x1,FCDBF_SYSTEM_MODAL = 0x8000,};
enum MACRO_TIF {TIF_NORMAL = 0x0,CIF_UNUSED2 = 0x2FFF,};
enum MACRO_TIME {TIME_SET_DATE = 0x80,};
enum MACRO_TIME_SET {TIME_SET_TIME = 0x40,};
enum MACRO_TL {TL_NONE = 0x0,TL_DOT = 0x1,TL_LINE = 0x2,TL_BULLET = 0x3,};
enum MACRO_TM {TM_TRACK_KERN = 0x40,TM_PAIR_KERN = 0x20,TM_PAD_SPACES = 0x10,TM_DRAW_BASE = 0x8,TM_DRAW_BOTTOM = 0x4,TM_DRAW_ACCENT = 0x2,TM_DRAW_OPTIONAL_HYPHENS = 0x1,};
enum MACRO_TMF {TMF_BASE_PRIO = 0x80,};
enum MACRO_TMF_ZERO {TMF_ZERO_USAGE = 0x40,};
enum MACRO_TMMF_CHARACTER_JUSTIFICATION {TMMF_CHARACTER_JUSTIFICATION = 0x80,EOREGREC = 0x8000,};
enum MACRO_TOC {TOC_NAME_MAX_LENGTH = 64,};
enum MACRO_TOKEN {TOKEN_CHARS_LENGTH = 4,};
enum MACRO_TOKEN_LENGTH {TOKEN_LENGTH = 4,DATE_TIME_BUFFER_SIZE = 130,DATE_TIME_FORMAT_SIZE = 178,};
enum MACRO_TOP {TOP_MARGIN = 72,};
enum MACRO_TP {TP_PROPORTIONAL = 0x0,TP_5_PITCH = 0x1,TP_6_PITCH = 0x2,TP_10_PITCH = 0x3,TP_10_6_PITCH = 0x6A,TP_12_PITCH = 0x6B,TP_15_PITCH = 0x6C,TP_16_PITCH = 0x6D,TP_16_6_PITCH = 0xA6,TP_17_PITCH = 0xA7,TP_19_2_PITCH = 0xC0,TP_20_PITCH = 0xC1,TP_21_3_PITCH = 0xD5,TP_24_PITCH = 0xD6,};
enum MACRO_TR {TR_REF_NUMBER = 0x7F,};
enum MACRO_TRA {TRA_NULL = 0,TRA_MOVE_TAB = 1,TRA_COPY_TAB = 2,TRA_MOVE_MARGIN = 3,THCF_CLEAR_ALL_CONTEXTS = 64,};
enum MACRO_TRCA {TRCA_ROUND = 0x8000,TRCA_IGNORE_ORIGIN = 0x4000,};
enum MACRO_TRCC {TRCC_DEFAULT_FEATURES = -16384,TRCC_DEFAULT_TOOLBOX_FEATURES = 0,};
enum MACRO_TRCCF {TRCCF_ROUND = 0x8000,TRCCF_IGNORE_ORIGIN = 0x4000,};
enum MACRO_TRF {TRF_ALWAYS_MOVE_BOTH_MARGINS = 0x10,TRF_ROUND_COORDINATES = 0x8,TRF_OBJECT_SELECTED = 0x4,TRF_SELECTING = 0x2,TRF_DRAGGING = 0x1,};
enum MACRO_TRRT {TRRT_OUT = 0,TRRT_PARTIAL = 1,TRRT_IN = 2,WWFIXED_OVERFLOW = 0,};
enum MACRO_TRT {TRT_RULER = 0x0,TRT_OTHER = 0x1,TabReferenceType = 0x80,};
enum MACRO_TR_REF {TR_REF_NUMBER_OFFSET = 0,RULER_TAB_TO_LINE_LEFT = 127,};
enum MACRO_TS {TS_BOLD = 0x20,TS_ITALIC = 0x10,TS_SUPERSCRIPT = 0x8,TS_SUBSCRIPT = 0x4,TS_STRIKE_THRU = 0x2,TS_UNDERLINE = 0x1,};
enum MACRO_TSC {TSC_DEFAULT_FEATURES = 4095,};
enum MACRO_TSCF {TSCF_BOLD = 0x400,TSCF_ITALIC = 0x200,TSCF_UNDERLINE = 0x100,TSCF_STRIKE_THRU = 0x80,TSCF_SUBSCRIPT = 0x40,TSCF_SUPERSCRIPT = 0x20,TSCF_BOXED = 0x10,TSCF_BUTTON = 0x8,TSCF_INDEX = 0x4,TSCF_ALL_CAP = 0x2,TSCF_SMALL_CAP = 0x1,};
enum MACRO_TSCTF {TSCTF_PLAIN = 0x800,TSCTF_BOLD = 0x400,TSCTF_ITALIC = 0x200,TSCTF_UNDERLINE = 0x100,TSCTF_STRIKE_THRU = 0x80,TSCTF_SUBSCRIPT = 0x40,TSCTF_SUPERSCRIPT = 0x20,TSCTF_BOXED = 0x10,TSCTF_BUTTON = 0x8,TSCTF_INDEX = 0x4,TSCTF_ALL_CAP = 0x2,TSCTF_SMALL_CAP = 0x1,};
enum MACRO_TSC_DEFAULT {TSC_DEFAULT_TOOLBOX_FEATURES = 3840,};
enum MACRO_TSF {TSF_APPLY_TO_SELECTION_ONLY = 0x8000,TSF_POINT_SIZE_RELATIVE = 0x4000,TSF_MARGINS_RELATIVE = 0x2000,TSF_SPACING_RELATIVE = 0x1000,};
enum MACRO_TS_ALTSTICK {TS_SHIFTSTICK = 0x80,TS_ALTSTICK = 0x40,TS_CTRLSTICK = 0x20,TS_FNCTSTICK = 0x10,TS_CAPSLOCK = 0x4,TS_NUMLOCK = 0x2,TS_SCROLLLOCK = 0x1,};
enum MACRO_TT {TT_LEFT = 0x0,TT_CENTER = 0x1,TT_RIGHT = 0x2,TT_ANCHORED = 0x3,TabLeader = 0x1C,};
enum MACRO_TUCF {TUCF_EXTENDED_DEVICE_DRIVERS = 0x8000,TUCF_CUSTOM_FILES = 0x4000,TUCF_ADD_CALLBACK = 0x2000,TUCF_DIRECTORY_NOT_FOUND = 0x1000,};
enum MACRO_TUNE {TUNE_NAME_MAX_LENGTH = 32,MAX_WWW_IMAGE_WIDTH = 540,MAX_EXTERNAL_IMAGE_WIDTH = 570,};
enum MACRO_TYPE {TYPE_STRING_LENGTH = 16,};
enum MACRO_TabLeader {TabLeader_OFFSET = 2,TabType = 3,};
enum MACRO_TabType {TabType_OFFSET = 0,};
enum MACRO_TractorFeed {TractorFeed_OFFSET = 0,};
enum MACRO_UC {UC_NULL = 0x0,UC_QUICK_COPY = 0x1,UC_BUTTON_EVENT = 0x2,UC_CUT = 0x3,UC_COPY = 0x4,UC_PASTE = 0x5,UC_DATE = 0x6,UC_TIME = 0x7,UC_EXIT = 0x8,UC_ON = 0x9,UC_OFF = 0x10,UC_LOCK = 0x11,UC_JOTTER = 0x12,UC_MENU = 0x13,UC_DELETE = 0x14,UC_ROTATE = 0x15,UC_ZOOM = 0x16,UC_BACKLIGHT = 0x17,UC_SWITCH_KEYMAP = 0x18,UC_COVER_OPEN = 0x19,UC_COVER_CLOSE = 0x1A,UC_CARD_INSERT = 0x1B,UC_CARD_REMOVE = 0x1C,UC_IR = 0x1D,HGF_SYS_EXCL = 0x4000,};
enum MACRO_UD {UD_UNDO = 0,UD_REDO = 1,UD_NOT_UNDOABLE = 2,};
enum MACRO_UHTA {UHTA_NO_NULL_TERM_BUFFER_SIZE = 0xA,UHTA_NULL_TERM_BUFFER_SIZE = 0xC,UHTA_SPACE_FOR_SIGN = 0x2,UHTA_SPACE_FOR_SEPARATORS = 0x4,UHTA_ALL_BUFFER_SIZE = 0x10,SNF_WORD1_MEM = 0x8000,};
enum MACRO_UHTAF {UHTAF_SBCS_STRING = 0x10,UHTAF_THOUSANDS_SEPARATORS = 0x8,UHTAF_SIGNED_VALUE = 0x4,UHTAF_INCLUDE_LEADING_ZEROS = 0x2,UHTAF_NULL_TERMINATE = 0x1,};
enum MACRO_UI {UI_STACK_SPACE_REQUIREMENT_FOR_RECURSE_ITERATION = 600,UI_MAXIMUM_THREAD_BORROW_STACK_SPACE_AMOUNT = 1200,INTERFACE_THREAD_MINIMUM_STACK_SIZE = 1500,INTERFACE_THREAD_DEF_STACK_SIZE = 2000,};
enum MACRO_UIBF {UIBF_NO_KEYBOARD = 0x80,UIBF_CLICK_TO_TYPE = 0x40,UIBF_SELECT_ALWAYS_RAISES = 0x20,UIBF_SELECT_DISPLAYS_MENU = 0x10,UIBF_KEYBOARD_ONLY = 0x8,UIBF_CLICK_GOES_THRU = 0x4,UIBF_SPECIFIC_UI_COMPATIBLE = 0x2,UIBF_BLINKING_CURSOR = 0x1,};
enum MACRO_UIEO {UIEO_RETURN_TO_DEFAULT_LAUNCHER = 0x800,UIEO_GEOS_TASKS_LIST = 0x400,UIEO_DESK_ACCESSORY_LIST = 0x200,UIEO_MAIN_APPS_LIST = 0x100,UIEO_OTHER_APPS_LIST = 0x80,UIEO_CONTROL_PANEL = 0x40,UIEO_DOS_TASKS_LIST = 0x20,UIEO_UTILITIES_PANEL = 0x10,UIEO_EXIT_TO_DOS = 0x8,UIEO_POSITION = 0x7,};
enum MACRO_UIFA {UIFA_SELECT = 0x80,UIFA_MOVE_COPY = 0x40,UIFA_FEATURES = 0x20,UIFA_CONSTRAIN = 0x10,UIFA_PREF_A = 0x8,UIFA_PREF_B = 0x4,UIFA_PREF_C = 0x2,UIFA_IN = 0x1,};
enum MACRO_UIFA_ADJUST {UIFA_ADJUST = 0x8,UIFA_EXTEND = 0x4,};
enum MACRO_UIFA_MOVE {UIFA_MOVE = 0x8,UIFA_COPY = 0x4,};
enum MACRO_UIFA_POPUP {UIFA_POPUP = 0x8,UIFA_PAN = 0x4,};
enum MACRO_UIHO {UIHO_HIDE_HELP_BUTTONS = 0x1,SST_IGNORE_SOUND_OFF = 0x8000,};
enum MACRO_UIIO {UIIO_OPTIONS_MENU = 0x8000,UIIO_DISABLE_POPOUTS = 0x4000,UIIO_ALLOW_INITIALLY_HIDDEN_MENU_BARS = 0x2000,};
enum MACRO_UILO {UILO_DESK_ACCESSORIES = 0x8000,UILO_CLOSABLE_APPS = 0x4000,};
enum MACRO_UIWO {UIWO_MAXIMIZE_ON_STARTUP = 0x40,UIWO_COMBINE_HEADER_AND_MENU_IN_MAXIMIZED_WINDOWS = 0x20,UIWO_PRIMARY_MIN_MAX_RESTORE_CONTROLS = 0x10,UIWO_WINDOW_MENU = 0x8,UIWO_PINNABLE_MENUS = 0x4,UIWO_KBD_NAVIGATION = 0x2,UIWO_POPOUT_MENU_BAR = 0x1,};
enum MACRO_UIWOI {UIWOI_MASK = 0xFF00,UIWOI_OPTIONS = 0xFF,};
enum MACRO_UNMARKED {UNMARKED_RECORD = 0x0,};
enum MACRO_VA {VA_NO_UNDO = 0x4000,VA_NO_RENAME = 0x2000,};
enum MACRO_VARF {VARF_NOT_IF_ALREADY_INVALID = 0x80,VARF_ONLY_REDRAW_MARGINS = 0x40,};
enum MACRO_VA_FULLY {VA_FULLY_ENABLED = 0x40,VA_MANAGED = 0x20,VA_DRAWABLE = 0x10,VA_DETECTABLE = 0x8,VA_BRANCH_NOT_MINIMIZABLE = 0x4,VA_OLD_BOUNDS_SAVED = 0x2,VA_REALIZED = 0x1,};
enum MACRO_VC {VC_ISANSI = 0,VC_ISCTRL = 255,};
enum MACRO_VCA {VCA_AUTO_SAVE = 0x8000,VCA_AUTO_SAVE_STOPPED = 0x4000,VCA_DOCUMENT_READ_ONLY = 0x2000,VCA_DOCUMENT_IS_NATIVE = 0x1000,VCA_DOCUMENT_EMPTY_WHEN_OPENED = 0x800,VCA_NO_DOCUMENT = 0x400,VCA_DOCUMENT_NOT_FULLY_LOADED = 0x200,VCA_DOCUMENT_NAME_CHOSEN = 0x100,};
enum MACRO_VCF {VCF_MOVING = 64,VCF_RESTORED = 32,};
enum MACRO_VCGA {VCGA_ORIENT_CHILDREN_VERTICALLY = 0x80,VCGA_INCLUDE_ENDS_IN_CHILD_SPACING = 0x40,VCGA_ALLOW_CHILDREN_TO_WRAP = 0x20,VCGA_ONE_PASS_OPTIMIZATION = 0x10,VCGA_CUSTOM_MANAGE_CHILDREN = 0x8,VCGA_HAS_MINIMUM_SIZE = 0x4,VCGA_WRAP_AFTER_CHILD_COUNT = 0x2,VCGA_ONLY_DRAWS_IN_MARGINS = 0x1,};
enum MACRO_VCGDA {VCGDA_EXPAND_WIDTH_TO_FIT_PARENT = 0x20,VCGDA_DIVIDE_WIDTH_EQUALLY = 0x10,VCGDA_HEIGHT_JUSTIFICATION = 0xC,VCGDA_EXPAND_HEIGHT_TO_FIT_PARENT = 0x2,VCGDA_DIVIDE_HEIGHT_EQUALLY = 0x1,};
enum MACRO_VCNA {VCNA_SAME_WIDTH_AS_VIEW = 0x80,VCNA_SAME_HEIGHT_AS_VIEW = 0x40,VCNA_LARGE_DOCUMENT_MODEL = 0x20,VCNA_WINDOW_COORDINATE_MOUSE_EVENTS = 0x10,VCNA_ACTIVE_MOUSE_GRAB_REQUIRES_LARGE_EVENTS = 0x8,VCNA_VIEW_DOC_BOUNDS_SET_MANUALLY = 0x4,VCNA_VIEW_DOES_NOT_WIN_SCROLL = 0x2,};
enum MACRO_VC_BACKSPACE {VC_BACKSPACE = 8,VC_TAB = 9,VC_LF = 10,VC_ENTER = 13,};
enum MACRO_VC_CLOCK {VC_CLOCK = 1,};
enum MACRO_VC_ISCALC {VC_ISCALC = 253,};
enum MACRO_VC_ISUI {VC_ISUI = 254,};
enum MACRO_VC_NULL {VC_NULL = 0x0,VC_CTRL_A = 0x1,VC_CTRL_B = 0x2,VC_CTRL_C = 0x3,VC_CTRL_D = 0x4,VC_CTRL_E = 0x5,VC_CTRL_F = 0x6,VC_CTRL_G = 0x7,VC_CTRL_H = 0x8,VC_CTRL_I = 0x9,VC_CTRL_J = 0xA,VC_CTRL_K = 0xB,VC_CTRL_L = 0xC,VC_CTRL_M = 0xD,VC_CTRL_N = 0xE,VC_CTRL_O = 0xF,VC_CTRL_P = 0x10,VC_CTRL_Q = 0x11,VC_CTRL_R = 0x12,VC_CTRL_S = 0x13,VC_CTRL_T = 0x14,VC_CTRL_U = 0x15,VC_CTRL_V = 0x16,VC_CTRL_W = 0x17,VC_CTRL_X = 0x18,VC_CTRL_Y = 0x19,VC_CTRL_Z = 0x1A,VC_ESCAPE = 0x1B,VC_BLANK = 0x20,};
enum MACRO_VC_NUMPAD {VC_NUMPAD_ENTER = 0xD,VC_NUMPAD_DIV = 0x2F,};
enum MACRO_VC_NUMPAD_MULT {VC_NUMPAD_MULT = 42,VC_NUMPAD_PLUS = 43,VC_NUMPAD_MINUS = 45,VC_NUMPAD_PERIOD = 46,VC_NUMPAD_0 = 48,VC_NUMPAD_1 = 49,VC_NUMPAD_2 = 50,VC_NUMPAD_3 = 51,VC_NUMPAD_4 = 52,VC_NUMPAD_5 = 53,VC_NUMPAD_6 = 54,VC_NUMPAD_7 = 55,VC_NUMPAD_8 = 56,VC_NUMPAD_9 = 57,VC_F1 = 128,VC_F2 = 129,VC_F3 = 130,VC_F4 = 131,VC_F5 = 132,VC_F6 = 133,VC_F7 = 134,VC_F8 = 135,VC_F9 = 136,VC_F10 = 137,VC_F11 = 138,VC_F12 = 139,VC_F13 = 140,VC_F14 = 141,VC_F15 = 142,VC_F16 = 143,VC_UP = 144,VC_DOWN = 145,VC_RIGHT = 146,VC_LEFT = 147,VC_HOME = 148,VC_END = 149,VC_PREVIOUS = 150,VC_NEXT = 151,VC_INS = 152,VC_DEL = 154,VC_PRINTSCREEN = 155,VC_PAUSE = 156,VC_BREAK = 158,VC_SYSTEMRESET = 159,VC_JOYSTICK_0 = 160,VC_JOYSTICK_45 = 161,VC_JOYSTICK_90 = 162,VC_JOYSTICK_135 = 163,VC_JOYSTICK_180 = 164,VC_JOYSTICK_225 = 165,VC_JOYSTICK_270 = 166,VC_JOYSTICK_315 = 167,VC_FIRE_BUTTON_1 = 168,VC_FIRE_BUTTON_2 = 169,VC_PREV_BUTTON = 176,VC_NEXT_BUTTON = 177,VC_LALT = 224,VC_RALT = 225,VC_LCTRL = 226,VC_RCTRL = 227,VC_LSHIFT = 228,VC_RSHIFT = 229,VC_SYSREQ = 230,VC_ALT_GR = 231,VC_CAPSLOCK = 232,VC_NUMLOCK = 233,VC_SCROLLLOCK = 234,VC_INVALID_KEY = 255,};
enum MACRO_VDA {VDA_ALLOW_NEXT_PREV_SHORTCUTS = 0x8000,};
enum MACRO_VDF {VDF_TYPE = 0xFFFC,};
enum MACRO_VDF_EXTRA {VDF_EXTRA_DATA = 0x2,VDF_SAVE_TO_STATE = 0x1,};
enum MACRO_VEDP {VEDP_dataType = -4,VEDP_entrySize = -2,};
enum MACRO_VGA {VGA_GEOMETRY_CALCULATED = 0x80,VGA_NO_SIZE_HINTS = 0x40,VGA_NOTIFY_GEOMETRY_VALID = 0x20,VGA_DONT_CENTER = 0x10,VGA_USE_VIS_SET_POSITION = 0x8,VGA_USE_VIS_CENTER = 0x4,VGA_ONLY_RECALC_SIZE_WHEN_INVALID = 0x2,VGA_ALWAYS_RECALC_SIZE = 0x1,};
enum MACRO_VIFGF {VIFGF_NOT_HERE = 0x80,VIFGF_FORCE = 0x20,VIFGF_GRAB = 0x10,VIFGF_KBD = 0x8,VIFGF_MOUSE = 0x4,VIFGF_LARGE = 0x2,VIFGF_PTR = 0x1,};
enum MACRO_VIFGT {VIFGT_ACTIVE = 0,VIFGT_PRE_PASSIVE = 1,VIGFT_POST_PASSIVE = 2,DMF_TEXT_ONLY = 128,};
enum MACRO_VIS {VIS_TEXT_RANGE_SELECTION_HIGH = 0xFFFF,};
enum MACRO_VIS2 {VIS_RULER_HEIGHT = 10,};
enum MACRO_VIS_TEXT {VIS_TEXT_RANGE_SELECTION_LOW = 0x0,VIS_TEXT_RANGE_SELECTION = 0x0,};
enum MACRO_VIS_TEXT2 {VIS_TEXT_GRAPHIC_OPAQUE_SIZE = 32,};
enum MACRO_VIS_TEXT_DEFAULT {VIS_TEXT_DEFAULT_POINT_SIZE = 12,};
enum MACRO_VIS_TEXT_DEFAULT_GRAPHIC {VIS_TEXT_DEFAULT_GRAPHIC_WIDTH = 10,VIS_TEXT_DEFAULT_GRAPHIC_HEIGHT = 10,};
enum MACRO_VIS_TEXT_MAX {VIS_TEXT_MAX_PARA_WIDTH = 4000,};
enum MACRO_VIS_TEXT_MAX_LINE {VIS_TEXT_MAX_LINE_SPACING = 3072,};
enum MACRO_VIS_TEXT_MAX_LINE_SPACING {VIS_TEXT_MAX_LINE_SPACING_INT = 12,};
enum MACRO_VIS_TEXT_MAX_LINE_SPACING_FRAC {VIS_TEXT_MAX_LINE_SPACING_FRAC = 0,VIS_TEXT_MIN_TEXT_FIELD_WIDTH = 47,};
enum MACRO_VIS_TEXT_MAX_STARTING {VIS_TEXT_MAX_STARTING_NUMBER = -5536,VIS_TEXT_DEFAULT_STARTING_NUMBER = -3536,};
enum MACRO_VIS_TEXT_MAX_TABS {VIS_TEXT_MAX_TABS = 25,TEXT_ONE_LINE_RIGHT_MARGIN = 4000,};
enum MACRO_VIS_TEXT_MIN {VIS_TEXT_MIN_NON_ZERO_LINE_SPACING = 128,};
enum MACRO_VIS_TEXT_MIN_NON {VIS_TEXT_MIN_NON_ZERO_LINE_SPACING_INT = 0,VIS_TEXT_MIN_NON_ZERO_LINE_SPACING_FRAC = -32768,};
enum MACRO_VIS_TEXT_MIN_NON_ZERO {VIS_TEXT_MIN_NON_ZERO_LEADING = 1,VIS_TEXT_MAX_LEADING = 792,};
enum MACRO_VIS_TEXT_RANGE {VIS_TEXT_RANGE_PARAGRAPH_SELECTION = 0x0,};
enum MACRO_VIS_TEXT_RANGE_PARAGRAPH {VIS_TEXT_RANGE_PARAGRAPH_SELECTION_HIGH = 0xFFFE,};
enum MACRO_VIS_TEXT_RANGE_PARAGRAPH_SELECTION {VIS_TEXT_RANGE_PARAGRAPH_SELECTION_LOW = 0x0,};
enum MACRO_VIS_TEXT_STANDARD {VIS_TEXT_STANDARD_NOTIFICATION_FLAGS = -3304,VIS_TEXT_GAINED_TARGET_NOTIFICATION_FLAGS = -3080,};
enum MACRO_VLM {VLM_UI = 0x1,};
enum MACRO_VLM_DEFAULT {VLM_DEFAULT_FEATURES = 1,};
enum MACRO_VLTA {VLTA_EXACT_HEIGHT = 0x8000,};
enum MACRO_VLTF {VLTF_HEIGHT_NOTIFY_PENDING = 0x8000,};
enum MACRO_VLTRF {VLTRF_ENDED_BY_COLUMN_BREAK = 0x8000,VLTRF_EMPTY = 0x4000,};
enum MACRO_VM {VM_OPEN_OK_READ_ONLY = 256,VM_OPEN_OK_TEMPLATE = 257,VM_OPEN_OK_READ_WRITE_NOT_SHARED = 258,VM_OPEN_OK_READ_WRITE_SINGLE = 259,VM_OPEN_OK_READ_WRITE_MULTIPLE = 260,VM_OPEN_OK_BLOCK_LEVEL = 261,VM_CREATE_OK = 262,VMO_FIRST_APP_CODE = -32768,};
enum MACRO_VMA {VMA_SYNC_UPDATE = 0x80,VMA_BACKUP = 0x40,VMA_OBJECT_RELOC = 0x20,VMA_NOTIFY_DIRTY = 0x8,VMA_NO_DISCARD_IF_IN_USE = 0x4,VMA_COMPACT_OBJ_BLOCK = 0x2,VMA_SINGLE_THREAD_ACCESS = 0x1,};
enum MACRO_VMAF {VMAF_FORCE_READ_ONLY = 0x80,VMAF_FORCE_READ_WRITE = 0x40,VMAF_ALLOW_SHARED_MEMORY = 0x20,VMAF_FORCE_DENY_WRITE = 0x10,VMAF_DISALLOW_SHARED_MULTIPLE = 0x8,VMAF_USE_BLOCK_LEVEL_SYNCHRONIZATION = 0x4,VMAF_FORCE_SHARED_MULTIPLE = 0x2,};
enum MACRO_VMA_OBJECT_ATTRS {VMA_OBJECT_ATTRS = 0x25,};
enum MACRO_VMCW {VMCW_HINTED = 0x8000,VMCW_BERKELEY_9 = 0x7F00,VMCW_BERKELEY_10 = 0xFF,};
enum MACRO_VMCW_BERKELEY {VMCW_BERKELEY_9_OFFSET = 8,VMCW_BERKELEY_10_OFFSET = 0,};
enum MACRO_VMDT {VMDT_NULL = 0,VMDT_VIS_MONIKER = 1,VMDT_TEXT = 2,VMDT_GSTRING = 3,VMDT_TOKEN = 4,SBF_IN_UPDATE_WIN_GROUP = -32768,};
enum MACRO_VMLET {VMLET_STYLE = 0xF00,VMLET_MONIKER_LIST = 0x80,VMLET_GSTRING = 0x40,VMLET_GS_ASPECT_RATIO = 0x30,VMLET_GS_COLOR = 0xF,};
enum MACRO_VMLET_GS {VMLET_GS_SIZE_OFFSET = 12,};
enum MACRO_VMLET_STYLE {VMLET_STYLE_OFFSET = 8,VMLET_GS_ASPECT_RATIO_OFFSET = 4,VMLET_GS_COLOR_OFFSET = 0,};
enum MACRO_VMO {VMO_OPEN = 0,VMO_TEMP_FILE = 1,VMO_CREATE = 2,VMO_CREATE_ONLY = 3,VMO_CREATE_TRUNCATE = 4,VMO_NATIVE_WITH_EXT_ATTRS = 128,};
enum MACRO_VMS {VMS_TEXT = 0,VMS_ABBREV_TEXT = 1,VMS_GRAPHIC_TEXT = 2,VMS_ICON = 3,VMS_TOOL = 4,VMLET_GS_SIZE = 12288,};
enum MACRO_VMSF {VMSF_STYLE = 0xF000,VMSF_COPY_CHUNK = 0x400,VMSF_REPLACE_LIST = 0x200,VMSF_GSTRING = 0x100,VMSF_STYLE_OFFSET = 0xC,};
enum MACRO_VMST {VMST_FPTR = 0,VMST_OPTR = 1,VMST_HPTR = 2,};
enum MACRO_VMT {VMT_MONIKER_LIST = 0x80,VMT_GSTRING = 0x40,VMT_GS_ASPECT_RATIO = 0x30,VMT_GS_COLOR = 0xF,};
enum MACRO_VMT_GS {VMT_GS_ASPECT_RATIO_OFFSET = 4,VMT_GS_COLOR_OFFSET = 0,};
enum MACRO_VM_CHAIN_TREE {VM_CHAIN_TREE = 0xFFFF,};
enum MACRO_VM_FILE {VM_FILE_EXISTS = 263,VM_FILE_NOT_FOUND = 264,VM_SHARING_DENIED = 265,VM_OPEN_INVALID_VM_FILE = 266,VM_CANNOT_CREATE = 267,VM_TRUNCATE_FAILED = 268,VM_WRITE_PROTECTED = 269,VM_CANNOT_OPEN_SHARED_MULTIPLE = 270,VM_FILE_FORMAT_MISMATCH = 271,VM_UPDATE_NOTHING_DIRTY = 272,VM_UPDATE_INSUFFICIENT_DISK_SPACE = 273,VM_UPDATE_BLOCK_WAS_LOCKED = 274,VM_DISCARD_CANNOT_DISCARD_BLOCK = 275,};
enum MACRO_VOF {VOF_GEOMETRY_INVALID = 0x80,VOF_GEO_UPDATE_PATH = 0x40,VOF_IMAGE_INVALID = 0x20,VOF_IMAGE_UPDATE_PATH = 0x10,VOF_WINDOW_INVALID = 0x8,VOF_WINDOW_UPDATE_PATH = 0x4,VOF_UPDATE_PENDING = 0x2,VOF_EC_UPDATING = 0x1,};
enum MACRO_VOLUME {VOLUME_NAME_LENGTH = 11,};
enum MACRO_VOLUME_BUFFER {VOLUME_BUFFER_SIZE = 12,};
enum MACRO_VOLUME_NAME {VOLUME_NAME_LENGTH_ZT = 12,};
enum MACRO_VPCF {VPCF_ALWAYS_TILE = 0x1,VPCF_ALWAYS_SCALE = 0x2,};
enum MACRO_VRA {VRA_IGNORE_ORIGIN = 0x80,VRA_SHOW_GUIDES = 0x40,VRA_SHOW_GRID = 0x20,VRA_SHOW_MOUSE = 0x10,VRA_HORIZONTAL = 0x8,VRA_MASTER = 0x4,};
enum MACRO_VRCS {VRCS_OVERRIDE = 0x8000,VRCS_SET_REFERENCE = 0x2000,VRCS_SNAP_TO_GRID_X_ABSOLUTE = 0x1000,VRCS_SNAP_TO_GRID_Y_ABSOLUTE = 0x800,VRCS_SNAP_TO_GRID_X_RELATIVE = 0x400,VRCS_SNAP_TO_GRID_Y_RELATIVE = 0x200,VRCS_SNAP_TO_GUIDES_X = 0x100,VRCS_SNAP_TO_GUIDES_Y = 0x80,VRCS_CONSTRAIN_TO_HORIZONTAL_AXIS = 0x40,VRCS_CONSTRAIN_TO_VERTICAL_AXIS = 0x20,VRCS_CONSTRAIN_TO_UNITY_SLOPE_AXIS = 0x10,VRCS_CONSTRAIN_TO_NEGATIVE_UNITY_SLOPE_AXIS = 0x8,VRCS_CONSTRAIN_TO_VECTOR = 0x4,VRCS_CONSTRAIN_TO_VECTOR_REFLECTION = 0x2,VRCS_INTERNAL = 0x1,};
enum MACRO_VRCS_CONSTRAIN {VRCS_CONSTRAIN_FLAGS = 126,VRCS_MOUSE_TWEAKING_FLAGS = 8190,};
enum MACRO_VRCS_SNAP {VRCS_SNAP_TO_GRID_ABSOLUTE = 6144,VRCS_SNAP_TO_GRID_RELATIVE = 1536,VRCS_SNAP_TO_GUIDES = 384,};
enum MACRO_VRCS_SNAP_FLAGS {VRCS_SNAP_FLAGS = 8064,VRCS_CONSTRAIN_TO_HV_AXES = 96,VRCS_CONSTRAIN_TO_DIAGONALS = 24,VRCS_VECTOR_CONSTRAIN = 6,};
enum MACRO_VREC {VREC_NEW_FILE = 0,VREC_OLD_FILE = 1,VREC_NEW_RECORDED_FILE = 2,};
enum MACRO_VRECUI {VRECUI_MODE_IDLE = 0x0,VRECUI_MODE_PLAY = 0x1,VRECUI_MODE_RECORD = 0x2,VRECUI_MODE_PAUSE = 0x8,};
enum MACRO_VREC_FILE {VREC_FILE_MAJOR_PROTOCOL = 2,VREC_FILE_MINOR_PROTOCOL = 1,};
enum MACRO_VRT {VRT_INCHES = 0x0,VRT_CENTIMETERS = 0x1,VRT_POINTS = 0x2,VRT_PICAS = 0x3,VRT_CUSTOM = 0xFD,VRT_NONE = 0xFE,VRT_DEFAULT = 0xFF,};
enum MACRO_VS {VS_OK = 0x0,VS_CANNOT_ALLOC = 0x3,VS_BUFFER_TOO_BIG = 0x4,VS_CLOSED = 0x5,VS_SHORT_READ_WRITE = 0x6,VS_DATA_RESOURCE_RESERVED = 0x8,VS_ALREADY_OPEN = 0xA,};
enum MACRO_VS2 {VS_TYPICAL = 0x8000,VS_SMALL = 0x8001,VS_LARGE = 0x8002,};
enum MACRO_VSFC {VSFC_HARDWARE = 0x1,VSFC_SOFTWARE = 0x2,VSFC_BOTH = 0x3,};
enum MACRO_VSNE {VSNE_ERROR = 0x0,VSNE_DATA = 0x4,VSNE_MODEM = 0x8,VSNE_FCLASS = 0x59,};
enum MACRO_VSNM {VSNM_NONE = 0x0,VSNM_ROUTINE = 0x1,VSNM_MESSAGE = 0x2,};
enum MACRO_VSNT {VSNT_WRITER = 0x0,VSNT_READER = 0x20,};
enum MACRO_VTCAF {VTCAF_MULTIPLE_FONT_IDS = 0x8000,VTCAF_MULTIPLE_POINT_SIZES = 0x4000,VTCAF_MULTIPLE_COLORS = 0x2000,VTCAF_MULTIPLE_GRAY_SCREENS = 0x1000,VTCAF_MULTIPLE_PATTERNS = 0x800,VTCAF_MULTIPLE_TRACK_KERNINGS = 0x400,VTCAF_MULTIPLE_FONT_WEIGHTS = 0x200,VTCAF_MULTIPLE_FONT_WIDTHS = 0x100,VTCAF_MULTIPLE_BG_COLORS = 0x80,VTCAF_MULTIPLE_BG_GRAY_SCREENS = 0x40,VTCAF_MULTIPLE_BG_PATTERNS = 0x20,VTCAF_MULTIPLE_STYLES = 0x10,};
enum MACRO_VTCF {VTCF_TOKEN = 0x1,VTCF_SHOWING_HYPERLINKS = 0x2,VTCF_REDIRECT_HYPERLINKS = 0x4,VTCF_ENSURE_CONTEXT_NOT_ALREADY_SET = 0x8,VTTF_MULTIPLE_HYPERLINKS = 0x8000,};
enum MACRO_VTCT {VTCT_TEXT = 0,VTCT_CATEGORY = 1,VTCT_QUESTION = 2,VTCT_ANSWER = 3,VTCT_DEFINITION = 4,VTCT_FILE = 255,};
enum MACRO_VTDCA {VTDCA_BOLD = 0x4000,};
enum MACRO_VTDCA_COLOR {VTDCA_COLOR = 0xF00,};
enum MACRO_VTDCA_COLOR_OFFSET {VTDCA_COLOR_OFFSET = 8,};
enum MACRO_VTDCA_FONT {VTDCA_FONT = 0x1F,};
enum MACRO_VTDCA_FONT_OFFSET {VTDCA_FONT_OFFSET = 0,VIS_TEXT_INITIAL_CHAR_ATTR = 96,};
enum MACRO_VTDCA_ITALIC {VTDCA_ITALIC = 0x2000,};
enum MACRO_VTDCA_SIZE {VTDCA_SIZE = 0xE0,};
enum MACRO_VTDCA_SIZE_OFFSET {VTDCA_SIZE_OFFSET = 5,};
enum MACRO_VTDCI {VTDCI_LINE_COUNT = 0xF00,};
enum MACRO_VTDCI_CHAR {VTDCI_CHAR_COUNT_OFFSET = 12,};
enum MACRO_VTDCI_LINE {VTDCI_LINE_COUNT_OFFSET = 8,};
enum MACRO_VTDCI_POSITION {VTDCI_POSITION = 0xF0,};
enum MACRO_VTDCI_POSITION_OFFSET {VTDCI_POSITION_OFFSET = 4,VIS_TEXT_DEFAULT_DROP_CAP = 512,VIS_TEXT_MIN_STARTING_NUMBER = -1000,};
enum MACRO_VTDDT {VTDDT_NONE = 0,VTDDT_HALF_INCH = 1,VTDDT_INCH = 2,VTDDT_CENTIMETER = 3,VTDPA_JUSTIFICATION = -16384,};
enum MACRO_VTDF {VTDF_BERKELEY = 0,VTDF_CHICAGO = 1,VTDF_BISON = 2,VTDF_WINDOWS = 3,VTDF_LED = 4,VTDF_ROMA = 5,VTDF_UNIVERSITY = 6,VTDF_URW_ROMAN = 7,VTDF_URW_SANS = 8,VTDF_URW_MONO = 9,VTDF_URW_SYMBOLS = 10,VTDF_CENTURY_SCHOOLBOOK = 11,VTDF_JSYS = 12,VTDCA_UNDERLINE = -32768,};
enum MACRO_VTDPA {VTDPA_DEFAULT_TABS = 0x3000,};
enum MACRO_VTDPA_DEFAULT {VTDPA_DEFAULT_TABS_OFFSET = 12,};
enum MACRO_VTDPA_JUSTIFICATION {VTDPA_JUSTIFICATION_OFFSET = 14,};
enum MACRO_VTDPA_LEFT {VTDPA_LEFT_MARGIN = 0xF00,};
enum MACRO_VTDPA_LEFT_MARGIN {VTDPA_LEFT_MARGIN_OFFSET = 8,};
enum MACRO_VTDPA_PARA {VTDPA_PARA_MARGIN = 0xF0,};
enum MACRO_VTDPA_PARA_MARGIN {VTDPA_PARA_MARGIN_OFFSET = 4,};
enum MACRO_VTDPA_RIGHT {VTDPA_RIGHT_MARGIN = 0xF,};
enum MACRO_VTDPA_RIGHT_MARGIN {VTDPA_RIGHT_MARGIN_OFFSET = 0,VIS_TEXT_INITIAL_PARA_ATTR = 4096,};
enum MACRO_VTDS {VTDS_8 = 0,VTDS_9 = 1,VTDS_10 = 2,VTDS_12 = 3,VTDS_14 = 4,VTDS_18 = 5,VTDS_24 = 6,VTDS_36 = 7,};
enum MACRO_VTDS_FOAM {VTDS_FOAM_NORMAL = 5,VTDS_FOAM_SMALL = 3,VTDF_RESPONDER = 0,FOAM_BUBBLE_TITLE_FONT_SIZE = 20,};
enum MACRO_VTEFT {VTEFT_REPLACE_PARAMS = 0,VTEFT_CHARACTER_LEVELER_LEVEL = 1,VTEFT_BEFORE_AFTER = 2,VTRF_FILTER = -32768,};
enum MACRO_VTES {VTES_BOXED = 0x8000,};
enum MACRO_VTES_ALL {VTES_ALL_CAP = 0x1000,};
enum MACRO_VTES_BACKGROUND {VTES_BACKGROUND_COLOR = 0x100,};
enum MACRO_VTES_BUTTON {VTES_BUTTON = 0x4000,};
enum MACRO_VTES_CHANGE {VTES_CHANGE_BAR = 0x200,};
enum MACRO_VTES_HIDDEN {VTES_HIDDEN = 0x400,};
enum MACRO_VTES_INDEX {VTES_INDEX = 0x2000,};
enum MACRO_VTES_SMALL {VTES_SMALL_CAP = 0x800,};
enum MACRO_VTF {VTF_IS_COMPOSITE = 0x80,VTF_IS_WINDOW = 0x40,VTF_IS_PORTAL = 0x20,VTF_IS_WIN_GROUP = 0x10,VTF_IS_CONTENT = 0x8,VTF_IS_INPUT_NODE = 0x4,VTF_IS_GEN = 0x2,VTF_CHILDREN_OUTSIDE_PORTAL_WIN = 0x1,};
enum MACRO_VTFC {VTFC_NO_FILTER = 0,VTFC_ALPHA = 1,VTFC_NUMERIC = 2,VTFC_SIGNED_NUMERIC = 3,VTFC_SIGNED_DECIMAL = 4,VTFC_FLOAT_DECIMAL = 5,VTFC_ALPHA_NUMERIC = 6,VTFC_FILENAMES = 7,VTFC_DOS_FILENAMES = 8,VTFC_DOS_PATH = 9,VTFC_DATE = 10,VTFC_TIME = 11,VTFC_DASHED_ALPHA_NUMERIC = 12,VTFC_NORMAL_ASCII = 13,VTFC_DOS_VOLUME_NAMES = 14,VTFC_DOS_CHARACTER_SET = 15,VTFC_ALLOW_COLUMN_BREAKS = 16,VTF_NO_SPACES = 128,};
enum MACRO_VTF_AUTO {VTF_AUTO_HYPHENATE = 0x4000,VTF_ALLOW_SMART_QUOTES = 0x2000,VTF_ALLOW_UNDO = 0x1000,VTF_SHOW_HIDDEN_TEXT = 0x800,VTF_OUTLINE_MODE = 0x400,VTF_DONT_SHOW_SOFT_PAGE_BREAKS = 0x200,VTF_DONT_SHOW_GRAPHICS = 0x100,VTF_TRANSPARENT = 0x80,VTF_USE_50_PCT_TEXT_MASK = 0x40,};
enum MACRO_VTF_NO {VTF_NO_TABS = 0x40,VTF_UPCASE_CHARS = 0x20,VTF_FILTER_CLASS = 0x1F,};
enum MACRO_VTGAF {VTGAF_MERGE_WITH_PASSED = 0x8000,};
enum MACRO_VTGF {VTGF_HANDLES_POINTER = 0x4000,VTGF_HOT_SPOT = 0x2000,};
enum MACRO_VTGT {VTGT_GSTRING = 0,VTGT_VARIABLE = 1,VTGF_DRAW_FROM_BASELINE = -32768,};
enum MACRO_VTGTRF {VTGTRF_ALLOCATE = 0x80,VTGTRF_ALLOCATE_ALWAYS = 0x40,VTGTRF_RESIZE_DEST = 0x20,};
enum MACRO_VTHI {VTHI_HYPHEN_SHORTEST_WORD = 0xF00,};
enum MACRO_VTHI_HYPHEN {VTHI_HYPHEN_SHORTEST_PREFIX = 0xF0,};
enum MACRO_VTHI_HYPHEN_MAX {VTHI_HYPHEN_MAX_LINES_OFFSET = 12,};
enum MACRO_VTHI_HYPHEN_SHORTEST {VTHI_HYPHEN_SHORTEST_SUFFIX = 0xF,};
enum MACRO_VTHI_HYPHEN_SHORTEST_PREFIX {VTHI_HYPHEN_SHORTEST_PREFIX_OFFSET = 4,};
enum MACRO_VTHI_HYPHEN_SHORTEST_SUFFIX {VTHI_HYPHEN_SHORTEST_SUFFIX_OFFSET = 0,VIS_TEXT_DEFAULT_HYPHENATION = 9250,};
enum MACRO_VTHI_HYPHEN_SHORTEST_WORD {VTHI_HYPHEN_SHORTEST_WORD_OFFSET = 8,};
enum MACRO_VTHWRF {VTHWRF_NO_CONTEXT = 0x8000,VTHWRF_USE_PASSED_CONTEXT = 0x4000,};
enum MACRO_VTIF {VTIF_SUSPENDED = 0x40,VTIF_UPDATE_PENDING = 0x20,VTIF_ACTIVE_SEARCH_SPELL = 0x18,VTIF_HILITED = 0x4,VTIF_ADJUST_TYPE = 0x3,};
enum MACRO_VTISF {VTISF_IS_FOCUS = 0x40,VTISF_CURSOR_ON = 0x20,VTISF_CURSOR_ENABLED = 0x10,VTISF_DOING_SELECTION = 0x8,VTISF_DOING_DRAG_SELECTION = 0x4,VTISF_SELECTION_TYPE = 0x3,};
enum MACRO_VTKI {VTKI_TOP_LINES = 0xF0,};
enum MACRO_VTKI_BOTTOM {VTKI_BOTTOM_LINES = 0xF,};
enum MACRO_VTKI_BOTTOM_LINES {VTKI_BOTTOM_LINES_OFFSET = 0,VTDCI_CHAR_COUNT = -4096,};
enum MACRO_VTKI_TOP {VTKI_TOP_LINES_OFFSET = 4,};
enum MACRO_VTNCF {VTNCF_COLOR_MONIKERS_FOR_UNSET_CONTEXTS = 0x80,VTNCF_DISABLE_MONIKERS_FOR_SET_CONTEXTS = 0x40,};
enum MACRO_VTNCT {VTNCT_NULL = 0,VTNCT_ADD = 1,VTNCT_REMOVE = 2,VTNCT_RENAME = 3,VTNF_SELECT_STATE = -32768,};
enum MACRO_VTNF {VTNF_CHAR_ATTR = 0x4000,VTNF_PARA_ATTR = 0x2000,VTNF_TYPE = 0x1000,VTNF_SELECTION = 0x800,VTNF_COUNT = 0x400,VTNF_STYLE_SHEET = 0x200,VTNF_STYLE = 0x100,VTNF_SEARCH_ENABLE = 0x80,VTNF_SPELL_ENABLE = 0x40,VTNF_NAME = 0x20,VTNF_CURSOR_POSITION = 0x10,VTNF_HYPERLINKABILITY = 0x8,};
enum MACRO_VTNSF {VTNSF_UPDATE_APP_TARGET_GCN_LISTS = 0x8000,VTNSF_NULL_STATUS = 0x4000,VTNSF_STRUCTURE_INITIALIZED = 0x2000,VTNSF_SEND_AFTER_GENERATION = 0x1000,VTNSF_SEND_ONLY = 0x800,VTNSF_RELAYED_TO_LIKE_TEXT_OBJECTS = 0x400,};
enum MACRO_VTNT {VTNT_NUMBER = 0,VTNT_LETTER_UPPER_A = 1,VTNT_LETTER_LOWER_A = 2,VTNT_ROMAN_NUMERAL_UPPER = 3,VTNT_ROMAN_NUMERAL_LOWER = 4,VTPAA_JUSTIFICATION = -16384,};
enum MACRO_VTNT2 {VTNT_CONTEXT = 0,VTNT_FILE = 1,};
enum MACRO_VTPAA {VTPAA_KEEP_PARA_WITH_NEXT = 0x2000,};
enum MACRO_VTPAA_ALLOW {VTPAA_ALLOW_AUTO_HYPHENATION = 0x800,};
enum MACRO_VTPAA_COLUMN {VTPAA_COLUMN_BREAK_BEFORE = 0x200,};
enum MACRO_VTPAA_DISABLE {VTPAA_DISABLE_WORD_WRAP = 0x400,};
enum MACRO_VTPAA_DROP {VTPAA_DROP_CAP = 0x20,};
enum MACRO_VTPAA_JUSTIFICATION {VTPAA_JUSTIFICATION_OFFSET = 14,};
enum MACRO_VTPAA_KEEP {VTPAA_KEEP_PARA_TOGETHER = 0x1000,};
enum MACRO_VTPAA_KEEP_LINES {VTPAA_KEEP_LINES = 0x10,};
enum MACRO_VTPAA_PARA {VTPAA_PARA_NUMBER_TYPE = 0x1C0,};
enum MACRO_VTPAA_PARA_NUMBER {VTPAA_PARA_NUMBER_TYPE_OFFSET = 5,VTHI_HYPHEN_MAX_LINES = -4096,};
enum MACRO_VTPABF {VTPABF_MULTIPLE_BORDER_LEFT = 0x8000,VTPABF_MULTIPLE_BORDER_TOP = 0x4000,VTPABF_MULTIPLE_BORDER_RIGHT = 0x2000,VTPABF_MULTIPLE_BORDER_BOTTOM = 0x1000,VTPABF_MULTIPLE_BORDER_DOUBLES = 0x800,VTPABF_MULTIPLE_BORDER_DRAW_INNERS = 0x400,VTPABF_MULTIPLE_BORDER_ANCHORS = 0x200,VTPABF_MULTIPLE_BORDER_WIDTHS = 0x100,VTPABF_MULTIPLE_BORDER_SPACINGS = 0x80,VTPABF_MULTIPLE_BORDER_SHADOWS = 0x40,VTPABF_MULTIPLE_BORDER_COLORS = 0x20,VTPABF_MULTIPLE_BORDER_GRAY_SCREENS = 0x10,VTPABF_MULTIPLE_BORDER_PATTERNS = 0x8,};
enum MACRO_VTPAF {VTPAF_MULTIPLE_LEFT_MARGINS = 0x8000,VTPAF_MULTIPLE_RIGHT_MARGINS = 0x4000,VTPAF_MULTIPLE_PARA_MARGINS = 0x2000,VTPAF_MULTIPLE_LINE_SPACINGS = 0x1000,VTPAF_MULTIPLE_DEFAULT_TABS = 0x800,VTPAF_MULTIPLE_TOP_SPACING = 0x400,VTPAF_MULTIPLE_BOTTOM_SPACING = 0x200,VTPAF_MULTIPLE_LEADINGS = 0x100,VTPAF_MULTIPLE_BG_COLORS = 0x80,VTPAF_MULTIPLE_BG_GRAY_SCREENS = 0x40,VTPAF_MULTIPLE_BG_PATTERNS = 0x20,VTPAF_MULTIPLE_TAB_LISTS = 0x10,VTPAF_MULTIPLE_STYLES = 0x8,VTPAF_MULTIPLE_PREPEND_CHARS = 0x4,VTPAF_MULTIPLE_STARTING_PARA_NUMBERS = 0x2,VTPAF_MULTIPLE_NEXT_STYLES = 0x1,};
enum MACRO_VTPAF2 {VTPAF2_MULTIPLE_LANGUAGES = 0x8000,};
enum MACRO_VTPBF {VTPBF_TOP = 0x4000,};
enum MACRO_VTPBF_ANCHOR {VTPBF_ANCHOR = 0x3,};
enum MACRO_VTPBF_ANCHOR_OFFSET {VTPBF_ANCHOR_OFFSET = 0,};
enum MACRO_VTPBF_BOTTOM {VTPBF_BOTTOM = 0x1000,};
enum MACRO_VTPBF_DOUBLE {VTPBF_DOUBLE = 0x800,};
enum MACRO_VTPBF_DRAW {VTPBF_DRAW_INNER_LINES = 0x400,};
enum MACRO_VTPBF_RIGHT {VTPBF_RIGHT = 0x2000,};
enum MACRO_VTPBF_SHADOW {VTPBF_SHADOW = 0x200,};
enum MACRO_VTRC {VTRC_CHAR_ATTR_CHANGE = 0x4000,VTRC_PARA_ATTR_BORDER_CHANGE = 0x2000,};
enum MACRO_VTRF {VTRF_KEYBOARD_INPUT = 0x4000,VTRF_USER_MODIFICATION = 0x2000,VTRF_UNDO = 0x1000,VTRF_DO_NOT_SEND_CONTEXT_UPDATE = 0x800,VTRF_TRUNCATE = 0x400,};
enum MACRO_VTS {VTS_EDITABLE = 0x80,VTS_SELECTABLE = 0x40,VTS_TARGETABLE = 0x20,VTS_ONE_LINE = 0x10,VTS_SUBCLASS_VIRT_PHYS_TRANSLATION = 0x8,VTS_OVERSTRIKE_MODE = 0x4,VTS_USER_MODIFIED = 0x2,};
enum MACRO_VTSDBF {VTSDBF_CHAR_ATTR = 0x6000,VTSDBF_PARA_ATTR = 0x1800,VTSDBF_TYPE = 0x600,VTSDBF_GRAPHIC = 0x180,VTSDBF_STYLE = 0x40,VTSDBF_REGION = 0x20,VTSDBF_NAME = 0x10,VTSDBF_CHAR_ATTR_OFFSET = 0xD,};
enum MACRO_VTSDBF_GRAPHIC {VTSDBF_GRAPHIC_OFFSET = 7,};
enum MACRO_VTSDBF_PARA {VTSDBF_PARA_ATTR_OFFSET = 11,};
enum MACRO_VTSDBF_TYPE {VTSDBF_TYPE_OFFSET = 9,};
enum MACRO_VTSF {VTSF_LARGE = 0x80,};
enum MACRO_VTSF_MULTIPLE {VTSF_MULTIPLE_CHAR_ATTRS = 0x40,VTSF_MULTIPLE_PARA_ATTRS = 0x20,VTSF_TYPES = 0x10,VTSF_GRAPHICS = 0x8,VTSF_DEFAULT_CHAR_ATTR = 0x4,VTSF_DEFAULT_PARA_ATTR = 0x2,};
enum MACRO_VTSF_STYLES {VTSF_STYLES = 0x1,VTSF_NAMES = 0x4,};
enum MACRO_VTSSF {VTSSF_DRAGGING = 0x8000,};
enum MACRO_VTST {VTST_NONE = 0,VTST_SINGLE_CHUNK = 1,VTST_RUNS_ONLY = 2,VTST_RUNS_AND_ELEMENTS = 3,VTSDBF_TEXT = -32768,};
enum MACRO_VTTF {VTTF_MULTIPLE_CONTEXTS = 0x4000,VIS_TEXT_CURRENT_FILE_TOKEN = 0xFFFF,};
enum MACRO_VTUGF {VTUGF_NEW_ELEMENT = 0x4000,VTF_NO_WORD_WRAPPING = 0x8000,};
enum MACRO_VUIF {VUIF_ALREADY_INVALIDATED = 0x80,VUIF_SEND_TO_ALL_CHILDREN = 0x40,VUIF_JUST_OPENED = 0x20,};
enum MACRO_VUIF_ALREADY {VUIF_ALREADY_INVALID = 128,VUIF_ALWAYS_INVALIDATE = 64,};
enum MACRO_VUM {VUM_MANUAL = 0,VUM_NOW = 1,VUM_DELAYED_VIA_UI_QUEUE = 2,VUM_DELAYED_VIA_APP_QUEUE = 3,VA_VISIBLE = 128,};
enum MACRO_VWMET {VWMET_SMALL = 0x0,VWMET_LARGE = 0x1,GOVGF_VIS_BOUNDS_HAVE_CHANGED = 0x80,};
enum MACRO_VWTAS {VWTAS_ACTIVE = 0x0,VWTAS_INACTIVE = 0x0,};
enum MACRO_WAKE {WAKE_UP_WWW = 1,ADD_TO_HOTLIST = 2,AUTO_FETCHING = 3,};
enum MACRO_WCF {WCF_RGB = 0x80,};
enum MACRO_WCF_MAP {WCF_MAP_MODE = 0x7,};
enum MACRO_WCF_MAP_MODE {WCF_MAP_MODE_OFFSET = 0,LAYER_PRIO_MODAL = 6,LAYER_PRIO_ON_TOP = 8,LAYER_PRIO_STD = 12,LAYER_PRIO_ON_BOTTOM = 14,};
enum MACRO_WCF_PLAIN {WCF_PLAIN = 0x20,};
enum MACRO_WCF_TRANSPARENT {WCF_TRANSPARENT = 0x40,};
enum MACRO_WCT {WCT_NONE = 0,WCT_KEEP_PARTIALLY_VISIBLE = 1,WCT_KEEP_VISIBLE = 2,WCT_KEEP_VISIBLE_WITH_MARGIN = 3,WPSF_PERSIST = -32768,};
enum MACRO_WHEN {WHEN_DATE_TIME_CHANGE = 480,};
enum MACRO_WHOLE {WHOLE = 128,};
enum MACRO_WIF {WIF_INVALIDATE = 0,WIF_DONT_INVALIDATE = 1,};
enum MACRO_WIN {WIN_PRIO_POPUP = 4,WIN_PRIO_MODAL = 6,WIN_PRIO_ON_TOP = 8,WIN_PRIO_COMMAND = 10,WIN_PRIO_STD = 12,WIN_PRIO_ON_BOTTOM = 14,WPF_CREATE_GSTATE = -32768,};
enum MACRO_WJ {WJ_LEFT_JUSTIFY_CHILDREN = 0x0,WJ_RIGHT_JUSTIFY_CHILDREN = 0x40,WJ_CENTER_CHILDREN_HORIZONTALLY = 0x80,WJ_FULL_JUSTIFY_CHILDREN_HORIZONTALLY = 0xC0,};
enum MACRO_WPF {WPF_ROOT = 0x4000,WPF_SAVE_UNDER = 0x2000,WPF_INIT_EXCLUDED = 0x1000,WPF_PLACE_BEHIND = 0x800,WPF_PLACE_LAYER_BEHIND = 0x400,WPF_LAYER = 0x200,WPF_ABS = 0x100,};
enum MACRO_WPF_INIT_SUSPENDED {WPF_INIT_SUSPENDED = 256,};
enum MACRO_WPF_LAYER_PRIORITY {WPF_LAYER_PRIORITY = 0xF0,};
enum MACRO_WPF_LAYER_PRIORITY_OFFSET {WPF_LAYER_PRIORITY_OFFSET = 4,};
enum MACRO_WPF_PRIORITY {WPF_PRIORITY = 0xFF,};
enum MACRO_WPF_PTR {WPF_PTR_IN_VIS = 0x10,};
enum MACRO_WPF_WIN {WPF_WIN_PRIORITY = 0xF,};
enum MACRO_WPF_WIN_PRIORITY {WPF_WIN_PRIORITY_OFFSET = 0,};
enum MACRO_WPSF {WPSF_HINT_FOR_ICON = 0x4000,WPSF_NEVER_SAVE_STATE = 0x2000,WPSF_SHRINK_DESIRED_SIZE_TO_FIT_IN_PARENT = 0x1000,WPSF_CONSTRAIN_TYPE = 0xC0,WPSF_POSITION_TYPE = 0x38,WPSF_SIZE_TYPE = 0x7,};
enum MACRO_WPT {WPT_AT_RATIO = 0,WPT_STAGGER = 1,WPT_CENTER = 2,WPT_TILED = 3,WPT_AT_MOUSE_POSITION = 4,WPT_AS_REQUIRED = 5,WPT_AT_SPECIFIC_POSITION = 6,};
enum MACRO_WRF {WRF_DELAYED_WASH = 0x80,WRF_DELAYED_V = 0x40,WRF_SIBLING_VALID = 0x20,WRF_EXPOSE_PENDING = 0x10,WRF_CLOSED = 0x8,WPF_PTR_IN_UNIV = 0x20,};
enum MACRO_WST {WST_AS_RATIO_OF_PARENT = 0,WST_AS_RATIO_OF_FIELD = 1,WST_AS_DESIRED = 2,WST_EXTEND_TO_BOTTOM_RIGHT = 3,WST_EXTEND_NEAR_BOTTOM_RIGHT = 4,};
enum MACRO_XLAT {XLAT_TOKEN_GRAPHICS_12 = 19540,XLAT_TOKEN_GRAPHICS_34 = 21063,};
enum MACRO_XLAT_TOKEN {XLAT_TOKEN_SPREADSHEET_12 = 19540,XLAT_TOKEN_SPREADSHEET_34 = 21331,};
enum MACRO_XLAT_TOKEN_FONT {XLAT_TOKEN_FONT_12 = 19540,XLAT_TOKEN_FONT_34 = 20038,ICA_IGNORE_INPUT = -32768,};
enum MACRO_YEAR {YEAR_MIN = 1900,};
enum MACRO_ZL {ZL_ZOOM_1 = 0,ZL_ZOOM_2 = 1,ZL_ZOOM_3 = 2,};
enum MACRO__ {__ACCPNT_GOH_ = 1,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,EOF = -1,};
typedef struct $CE050CEE2330F5C1598771915B8D0F34 MACSetMediumArgs;
typedef struct $2D0888CD89A96F7B59DFCAA1DA2CC5F1 MBACAddress;
typedef WordFlags MBAlarmInfo;
typedef enum $1B6356266B9EF8F332236A62DAC95ED0 MBAlarmIntervalType;
typedef enum $226D6F596696CAA25C1621FAEFEF8A42 MBAppointmentDescType;
typedef struct $4CDB00143B33FFEA5D8EF8ADDB5BF5CA MBEscapeInfo;
typedef struct $BC9A41D5D025928CB442176B80B280C0 MBEscapeTable;
typedef struct $682B632B710E08FB43A0B63C751A88F6 MBInkInfo;
typedef enum $124B52ACC1801077A94DD9F8FF7C6719 MBRepeatDuration;
typedef union $F77654AC37220E3D2C435327D4D50BBD MBRepeatDurationData;
typedef struct $5431D8686D934178CA1B0C85EA6135E7 MBRepeatInfo;
typedef WordFlags MBRepeatInterval;
typedef enum $90D2F27AE01C482293D6170BBF623F68 MBRepeatIntervalType;
typedef WordFlags MBRepeatLength;
typedef enum $21D8C3293FB626E927BED6C8754C4455 MBRepeatLengthUnitType;
typedef enum $F1B2C574B764F95C24FA9ED4F85B0B55 MBRepeatWeekday;
typedef WordFlags MCFeatures;
typedef WordFlags MCToolboxFeatures;
typedef enum $02F8496BFBD9CFB6571A3F77ED82FB9D MMCReturnType;
typedef WordFlags MOCFeatures;
typedef WordFlags MOCToolboxFeatures;
typedef struct $A18F1653D621FE0A2CA3A029FBAA6994 MPBSetProgressArgs;
typedef struct $6C21579C3B7FAD896D887F6360469E37 MPBSetupArgs;
typedef enum $BA9BEDDE95EF8B884DD35A79F3AFC73C MPBType;
typedef struct $6646804B5C724D490882CC0E8853668B MSCAddressesAndTransport;
typedef WordFlags MSCCFeatures;
typedef WordFlags MSCCTFeatures;
typedef WordFlags MSCFeatures;
typedef struct $021F9070DCA4559C36666A440D1C7248 MSCMessageRegisteredArgs;
typedef union $61C7A26DEDBBB5A4B354A44DCB5B6089 MSCObjectData;
typedef struct $322A41D840D1655B5C884A805D48CFEC MSCPageRangeData;
typedef struct $DF9B922C01AC16C4E3A8562217EB80E7 MSCRegisterMessageArgs;
typedef struct $9A5F1C5137EF5408E3A729695901A5EE MSCSetAddressesArgs;
typedef WordFlags MSCTFlags;
typedef WordFlags MSCToolboxFeatures;
typedef WordFlags MSPCFeatures;
typedef WordFlags MSPCTFeatures;
typedef enum $5D3FB63EE043026E94D58F33A227FC46 MSetCalcReturn;
typedef ByteFlags MSetCalcReturnFlags;
typedef enum $2815D5579D9A29F3AA32413A54D711DC MSetColor;
typedef struct $90DB055B0FB2240F835759DEB030468D MSetDataHandle;
typedef union $0665B76D49EB61222D894D9D86318507 MSetNum;
typedef struct $C6B3FBFBD5441540AC0B1447DC77609D MSetNumState;
typedef struct $E51A464CC3C567C33CF7FC43C3B3A0E0 MSetParameters;
typedef enum $8C80A15AD88F08AA5761920E6F61B861 MSetPrecision;
typedef byte MachineID[8];
typedef enum $9860A502E3BC1D63C7E55B9E2D8B2C6A MailboxCancelAction;
typedef struct $9E09D76462B156B50A618F2646762B0E MailboxChangeBodyFormatArgs;
typedef struct $F396FB668F427F159C8B73297260AAFC MailboxDataFormat;
typedef ByteEnum MailboxDeliveryVerb;
typedef enum $7FD6A432FEFA5E7E876647ACC96DEA5D MailboxDialogType;
typedef enum $B8313B70574F61A2CF1308AE53933D46 MailboxError;
typedef struct $3100716E7FA844E92CDC6079CE0F9A1C MailboxMediaTransport;
typedef dword MailboxMessage;
typedef WordFlags MailboxMessageFlags;
typedef ByteEnum MailboxMessagePriority;
typedef WordFlags MailboxProgressAction;
typedef enum $F40F922336D241E4BA6A145EE24387F9 MailboxProgressType;
typedef struct $F61CB26F53F72DBA1A0D895F98B80C89 MailboxRegisterMessageArgs;
typedef struct $5CC96E1EEC8AB240FE7D3AE8F36C06F7 MailboxReplyToMessageArgs;
typedef struct $6BC380759A9ADA7AF6ECEBCFD068E8F0 MailboxStorage;
typedef enum $5C1295860C50D0FFD797EFFF61F5331D MailboxSubsystemNotification;
typedef struct $C533D951160BC48E30C3BAD4D7E218C8 MailboxTransAddr;
typedef struct $6499C97167BD5D7255AE9FC962E42982 MailboxTransport;
typedef struct $9BF084E5F45B776657EC303FEBDCC77E MailboxTransportAndOption;
typedef struct $921DED71CCD34D759469B5F7E368E8FB MailboxTransportHintOptr;
typedef unsigned int MailboxTransportOption;
typedef WordFlags MakeRectVisibleFlags;
typedef enum $F3A72C3DC360E2DC4AE8FA2ED0194DAD MakeRectVisibleMargin;
typedef ByteEnum ManualFeed;
typedef word ManufacturerID;
typedef ByteEnum MapColorToMono;
typedef struct $28A53D3434EB077B59FC725589178CC1 MapListBlockHeader;
typedef ByteEnum MarkerShape;
typedef struct $15FAA4093E94D1AE7C0347BFFC371C62 MbufHeader;
typedef struct $CE7606335C4B9C502AAC5377BE0088CF MeaningsRetParams;
typedef ByteEnum MeasurementType;
typedef ByteEnum MediaType;
typedef struct $3929BB43B157FA7F7FB7214B843F29EA MediumAndUnit;
typedef word MediumOptionType;
typedef enum $08C4EC10B63CE80B4F3DDF9E5EE9BD4C MediumSubsystemNotification;
typedef struct $D86BB5B784AEF4FBB7BAEDB7F3A4F20C MediumType;
typedef struct $0E3D72F3A98BE6C3405D6813D83FE4B7 MediumUnitAndReason;
typedef ByteEnum MediumUnitType;
typedef enum $0AA497ECA26CDC4E1AE3983F9CC61CA9 MemGetInfoType;
typedef Handle MemHandle;
typedef ByteFlags MenuSepFlags;
typedef word Message;
typedef struct $80FC77BB9807EC363EC488B2F7932295 MessageDataStruct;
typedef enum $8BAF60176DB03E0094621C2295F90B6F MessageError;
typedef WordFlags MessageFlags;
typedef void MessageMethod();
typedef ByteFlags MessageParameters;
typedef struct $65CDF292DBE7C033FC03FA365CEC2FDD MessageReturnValues;
typedef WordFlags MetaAlterFTVMCExclFlags;
typedef struct $851F4DC98C4C8FC1533037FB4ADC67A4 MetaBase;
typedef struct $0EE627052F274FEB11F214574EF7C018 MetaTextFilteredParameters;
typedef union $F7B68CE3220083B12E9F6DAD0E3A106C MethodMemoryInfo;
typedef WordFlags MethodParameterDef;
typedef union $75D50B3DB10F94476C666A3B66F92AA7 MethodPassInfo;
typedef WordFlags MethodPassMemory;
typedef ByteEnum MethodPassReg;
typedef WordFlags MethodPassRegisters;
typedef ByteEnum MethodReturnByteWordType;
typedef ByteFlags MethodReturnDWordInfo;
typedef ByteEnum MethodReturnDWordReg;
typedef union $FBE9FEBB6DE2D981702F32B78EB81D9B MethodReturnInfo;
typedef ByteEnum MethodReturnMultipleType;
typedef ByteEnum MethodReturnType;
typedef ByteFlags MethodStackInfo;
typedef union $6BFC489AE2554C079A9DB778F0EFB97E MinIncrementType;
typedef ByteEnum MinMetricMeasure;
typedef ByteEnum MinOrMaxValue;
typedef ByteEnum MinPicaMeasure;
typedef ByteEnum MinPointMeasure;
typedef ByteEnum MinUSMeasure;
typedef ByteEnum MixMode;
typedef ByteEnum ModeType;
typedef void (__pascal *ModemDataNotifyRoutinePtr)(word data);
typedef void (__pascal *ModemResponseNotifyRoutinePtr)(word data, word responseSize, char *response);
typedef enum $6D58E2A7C9FFD0ABCA06A35E2AA39D25 ModemResultCode;
typedef struct $02632549EFBE132FCC149744EC44CD6B MouseDriverInfoStruct;
typedef struct $4BF98A0513324256922EE06408ED82DF MouseGrab;
typedef WordFlags MouseReturnFlags;
typedef struct $435BAEC098D13D219B46B86A422BBF75 MouseReturnParams;
typedef enum $EDE771BB5E2C603B563C5F6AD912397F MsgCentreItemType;
typedef struct $A8320C7C7191E496A620724A4324753C MsgCentreListControlInformation;
typedef struct $FEEB030CDB7FF48C904E7A8793759D00 MultiFileArrayEntry;
typedef struct $53C250645D072197A3EE008855D51E78 MultiFileArrayHeader;
typedef struct $D067B19D6AC2B15A27EF899F43508908 MultiRecordLayoutStruct;
typedef union $20C73100D7C7536A130288327CCA7BFD NCCFlagsUnion;
typedef ByteFlags NameAccessFlags;
typedef WordFlags NameArrayAddFlags;
typedef struct $EC73D0E6F4D3B6074BE294EE84C91E94 NameArrayElement;
typedef struct $77B08A04199F70231D0B61C6241A0B06 NameArrayHeader;
typedef struct $FC8B87B80A229AA7CB0D4AAFC1383D2E NameArrayMaxElement;
typedef ByteFlags NameFlags;
typedef struct $D8A3F3AB9D43EE3EE64BCABBF32D2632 NameHeader;
typedef struct $B2E4EC84B0B861062964EA9494353CAD NameListEntry;
typedef struct $193E97D4B97F0BE4BF28D653218BFE02 NameListHeader;
typedef struct $FA767109BD46822EEB35CE50B9F428BD NameLockTokenStreamWithData;
typedef TCHAR NameOrNumber[31];
typedef struct $4D5D4C27875D3485266BDFE93CE60CAF NameStruct;
typedef ByteFlags NavigateCommonFlags;
typedef struct $48F1F242E438769EAFBC3761A8B35B94 NavigateCommonParams;
typedef NavigationFlags NavigateFlags;
typedef WordFlags NavigationFlags;
typedef struct $009E5FF01C1D2499399ED77F1604312D NavigationQueryParams;
typedef struct $A61D4D4A0CB225AB78F1FCE7A7122639 NewDialog;
typedef ByteEnum NewRecordType;
typedef enum $6307CB310C754CD55CF54B6940ED749C NokiaGCNStandardListType;
typedef enum $696725A5B536AC719681B4D1B7E39792 NokiaMailboxDataFormatID;
typedef enum $DBA17BBACE22ACBA27E0957E5119F0FA NokiaNotificationType;
typedef ByteEnum NoteType;
typedef WordFlags NotesEditControlFeatures;
typedef struct $03FF2859833E3CCD3D5A75AF2DB30012 NotificationType;
typedef struct $753CFBD78F179A3A987CEE4B354AC5B5 NotifyColorChange;
typedef struct $E0CF53C08A4FC1525EC89E5F9766F0DF NotifyDisplayChange;
typedef struct $192044D532F99EC7585D58F5C2B69F39 NotifyDisplayListChange;
typedef struct $5330A984EB190A73C8BBB2BBBD08D7F3 NotifyDocumentChange;
typedef ByteFlags NotifyEnabledFlags;
typedef struct $C9D6D3436E69FE291D54815AA0DD811E NotifyFloatFormatChange;
typedef struct $577B1E55F56C62738A2DBDD5801EE0EC NotifyFocusWindowKbdStatus;
typedef struct $4C62D666539542B45A9D5EC00B7AA9CA NotifyFontAttrChange;
typedef struct $A8B7DB216E4C8DD375A9EB3796062379 NotifyFontChange;
typedef struct $23AE0F5C7F70A74F90940436AB635CAE NotifyGenControlStatusChange;
typedef struct $369DEDDD0C9857DBA7ED6CCD746D8769 NotifyHelpContextChange;
typedef struct $FAEC41B77FCB6FDD5E00ACE456F043D6 NotifyInkHasTarget;
typedef struct $37D128BB129A5AC5403E03EEB3449DB1 NotifyJustificationChange;
typedef struct $ABD8EBAA064A505E51C1A4ADDD592780 NotifyPageStateChange;
typedef struct $1953021FC0879F253326FEEE1ECBC401 NotifyPointSizeChange;
typedef struct $1BC134F168E975072C97C6B411B53653 NotifySearchReplaceEnableChange;
typedef struct $1B3DEEE20E6B829E0F7833D2686D82FC NotifySelectStateChange;
typedef struct $9D2647AE062C95BC0D77ABE625963F26 NotifySpellEnableChange;
typedef struct $FF5D1E3DD0638770171EDFCD07103261 NotifyStyleChange;
typedef struct $D0B709983B89A09695168EF18CB2AE16 NotifyStyleSheetChange;
typedef struct $83218C8C3FEA8D46A92DA238210E29E8 NotifyTextStyleChange;
typedef struct $869CEE4C4A56CEEBA4C71AD18E048CF9 NotifyUndoStateChange;
typedef struct $B3C85D0371368E9A951B0BBC30E5715B NotifyViewOpening;
typedef struct $28D57EF42EBE266D5E045F97E0CE996D NotifyViewStateChange;
typedef struct $4C1F4D69B795DD18835B5ADCAF9B8C70 NudgeUnits;
typedef struct $7D9AB491A42A2D8D20E9A825612A2D16 NumPaperSizesInfo;
typedef ByteFlags NumberFormatFlags;
typedef ByteEnum NumberType;
typedef word OBEXError;
typedef byte OBEXHeaderID;
typedef byte OBEXHeaderType;
typedef WordFlags OBEXInitClientFlags;
typedef WordFlags OBEXInitServerFlags;
typedef byte OBEXLibraryError;
typedef byte OBEXRequest;
typedef struct tagOBEXRequestInfo OBEXRequestInfo;
typedef byte OBEXResponseCode;
typedef ByteFlags OBEXSetPathFlags;
typedef enum $8C4B1481B9D54BF504E4E2C3D296F9F4 OBEXTransport;
typedef struct $EEB1E9AEC7200E74338040787782A5F1 ObexTDMailboxTransAddr;
typedef ByteFlags ObjChunkFlags;
typedef enum $8C8514500129344CF3AE0280D50BB8A9 ObjCompCallType;
typedef enum $55AA0FAFD6895AE253F1B116796995E4 ObjFlushInputQueueNextStop;
typedef struct $5A0CA7C4676CD36F97848307F1AD4FAD ObjLMemBlockHeader;
typedef struct $613FBF1FBC447929B2B5171840A71F00 ObjRelocation;
typedef ByteEnum ObjRelocationSource;
typedef ByteEnum ObjRelocationType;
typedef struct $39709C0E8A3FC41E3B3C6409FE9984C6 ObjectAndGrabParams;
typedef struct $AABBEB2C9D9C7470EE073C5E6DAE101C ObjectTransform;
typedef struct $CCA2477F0DD8CE267A5ACADB5A5A171E OpApplyRotation;
typedef struct $773A1B5F6476DA2E185EEC6F8A1C21F2 OpApplyScale;
typedef struct $BCA952BE72D47A9F24494B0C6D387785 OpApplyTransform;
typedef struct $3C2571D48349595DC45C5B1147DC4A7C OpApplyTranslation;
typedef struct $B93DB10FF8B498FA92BC382ABDBD9FFA OpApplyTranslationDWord;
typedef struct $95899E3543EE96D5C4516AAEA8C3344C OpBeginPath;
typedef struct $BBD33EB3D25AB0CC98977F98B91EA473 OpBitmap;
typedef struct $BF4690A0DED5363F75761AB82BB69297 OpBitmapSlice;
typedef struct $39B23653FC0B8BE683123DE084D5F105 OpBrushPolyLine;
typedef struct $17143B5122A3991E817F58AF379DAA36 OpCloseSubPath;
typedef struct $93E99E7D8BC4091E2D9FA84A78421836 OpComment;
typedef struct $11D1051ABD3C5946867229BE16EE9DAB OpCreatePalette;
typedef struct $BE9470539DFAEC4FD70247B2EE5CA4D8 OpDestroyPalette;
typedef struct $9F46C0150579BF2BC8C2E2FC736A1C4D OpDrawArc;
typedef struct $EAB3DABC1D44741D961AF432D5EBC4E0 OpDrawArc3Point;
typedef struct $BE54E98F5B86A956B49E80FB9525591A OpDrawArc3PointTo;
typedef struct $CA00114A1D000FD15BB4AC06ED754532 OpDrawBitmap;
typedef struct $403458B4ADE217788815A8D0F430759C OpDrawBitmapAtCP;
typedef struct $54F26989A3289E02D53F519E73EBD769 OpDrawBitmapOptr;
typedef struct $CC6C3E2117561F03ADC8935DF9EC4665 OpDrawBitmapPtr;
typedef struct $877AB99DAC8538DBAF5E8373CCBF1040 OpDrawChar;
typedef struct $CDD955DAA7DEE97E50A75FDD51452663 OpDrawCharAtCP;
typedef struct $BA9E1B6EEE3C4DFDF6DFBD8966DCC7D2 OpDrawCurve;
typedef struct $08F221A27CFA53B54C3E60853A9DA430 OpDrawCurveTo;
typedef struct $5FEA09CFD35C8960D2C4A6FEC46015E2 OpDrawEllipse;
typedef struct $B2A59BFF5A61CC14EAA1A6C638E884F6 OpDrawHLine;
typedef struct $3B572B65182E8F0CB76D53241459D8AE OpDrawHLineTo;
typedef struct $02BF73FB6B56D5194A8C58DF96D1B47E OpDrawLine;
typedef struct $E31EC7BD851997880C57C40687E56EF9 OpDrawLineTo;
typedef struct $5EDC5E64740AD6D2FDF47D977D0ACF69 OpDrawPath;
typedef struct $C036CDD426276BA718C07E08EC0C925B OpDrawPoint;
typedef struct $A0BE0ADE8A82D1A2A579176C103BECFE OpDrawPointAtCP;
typedef struct $CE64E041D645A29A32EAEE90F8F6F90F OpDrawPolygon;
typedef struct $845A26C3CBACBC1F1DD6F1363C148969 OpDrawPolyline;
typedef struct $F2710129AE04E121A0A43A9A4D4BC085 OpDrawRect;
typedef struct $E768CADC2A639EF6D20039754751B9D9 OpDrawRectTo;
typedef struct $9E2A857B5DDC60454A39A4087CC39EDC OpDrawRelArc3PointTo;
typedef struct $DEEE7CBB3095A875FDB7D6861BEF342B OpDrawRelCurveTo;
typedef struct $9F93EED4EDCBF2AEF546996B4022FEEE OpDrawRoundRect;
typedef struct $AA4467946324040D0298D65EEADC92F9 OpDrawRoundRectTo;
typedef struct $DDA436774A560C5B3EE183879C859F04 OpDrawSpline;
typedef struct $FA0E3F810FD32DA9028302E5BE56C56C OpDrawSplineTo;
typedef struct $E9B55B7FD9B3BE6F385E4C1731C983B6 OpDrawText;
typedef struct $6820E0CC465A85B55D3C06FC3353EDFE OpDrawTextAtCP;
typedef struct $BC7047E309FA1E5DAB26A04584525EDA OpDrawTextOptr;
typedef struct $79FE942ED486C3258E8D50F8EF5BBF78 OpDrawTextPtr;
typedef struct $DDCBD090609AE2B808813BAB8B4F31EC OpDrawVLine;
typedef struct $541A4681B56D48E17105C31FFCBAD980 OpDrawVLineTo;
typedef struct $ED825FDFB813B111FCB175ABDEE4B806 OpEndGString;
typedef struct $D334A65F5924F6629E93126EF9C1B9BA OpEndPath;
typedef struct $5537C6E6378A9BD527443DC5E22745AB OpEscape;
typedef struct $86567B2224693720953BBD1B7D6BF107 OpFillArc;
typedef struct $F5D24E155ABD445F86B3223D9187C1F7 OpFillArc3Point;
typedef struct $9E7A65D168CD19D7D946AF21A9BA7F5A OpFillArc3PointTo;
typedef struct $215A3681C450AD1508E3DE64A0CA18F2 OpFillBitmap;
typedef struct $5BF3D744A23D4AAC4374DCA20B4626F4 OpFillBitmapAtCP;
typedef struct $8813947B67E0CD009FE04DA1FCDEAB24 OpFillBitmapOptr;
typedef struct $B6881A1E52EC267CC7997F7E2B13C129 OpFillBitmapPtr;
typedef struct $220DDBC0283CC49614B719DFAD2A776F OpFillEllipse;
typedef struct $DAD37AE97401F70A2F5C4B7E541C525F OpFillPath;
typedef struct $C92E4933677024695F35669FB681D813 OpFillPolygon;
typedef struct $7509A7E0A9603467D4788F0B8EF95C41 OpFillRect;
typedef struct $0989AA966D81FD93F5D3B876C626FA00 OpFillRectTo;
typedef struct $CE64D550B9E235061D558812939321FA OpFillRoundRect;
typedef struct $E6918A590419E64E5E55E25A1240906D OpFillRoundRectTo;
typedef struct $F3380FD7AB18F9E60E9A97DC79F9F102 OpInitDefaultTransform;
typedef struct $8915D81C5E846110F561F055C579F599 OpLabel;
typedef struct $CFA8B671AAF1F0F83BA11AAB87CA6E92 OpMoveTo;
typedef struct $BF85CC11881F992A16D1AB93376FE3AB OpNewPage;
typedef struct $57B00DD35B4FB4C3673153B359733EBD OpNullOp;
typedef struct $46F0E57D73053E6D8FC714DF2937D1EF OpRelMoveTo;
typedef struct $2FEF7C30D3F90F3E3392BEC5F1AFFDD7 OpRestoreState;
typedef struct $1F30E232E8E39AD1FE68DB8F95F02D11 OpRestoreTransform;
typedef struct $D0517CE9A571DAC3E4DBD97C88B3AB68 OpSaveState;
typedef struct $3CC29C66FB16AA4175A3737809FFBB57 OpSaveTransform;
typedef struct $D0F70E0D640C2CDB50515BBF66E24A47 OpSetAreaAttr;
typedef struct $E1B0168AFD989710765BDB2C26F07807 OpSetAreaColor;
typedef struct $308754BF0F51713D02C2BFE6D6A66C0B OpSetAreaColorIndex;
typedef struct $1908D47F53C08BCC48EF08128F57CA45 OpSetAreaColorMap;
typedef struct $317CE55B428D1F30AA31E1B253B0FDDF OpSetAreaMask;
typedef struct $A7AAC87AA0948ED224269784BFF17566 OpSetAreaPattern;
typedef struct $1DE0B6712293945C9FD4ECD74856A1F6 OpSetClipPath;
typedef struct $359B80BA3CD31CC5681EF0B8DEF87B8E OpSetClipRect;
typedef struct $73765D72A9FBB58EF4499A18B129DC00 OpSetCustomAreaMask;
typedef struct $B435ABB4A199F223F9C9C11715854B63 OpSetCustomAreaPattern;
typedef struct $16C4A7925D9017782E21675F30E5BD8A OpSetCustomLineMask;
typedef struct $5C42C64AB448A297FA8E0C5162CF47A8 OpSetCustomLineStyle;
typedef struct $6F2FD831DB37488B939B117E97176DF7 OpSetCustomTextMask;
typedef struct $615A033884F22D457EA8447BD310C0CD OpSetCustomTextPattern;
typedef struct $84AC25CC0C540B0B68AA96E80DDAA1A4 OpSetDefaultTransform;
typedef struct $045391F70B9A1FF27B6DC0FC2919C694 OpSetFont;
typedef struct $054FFEE974129BCF16C43CA77D51E360 OpSetFontWeight;
typedef struct $E08FD2FB451179DF5A10A64C48527658 OpSetFontWidth;
typedef struct $E91782667EB42120AB1A774286F136AB OpSetGStringBounds;
typedef struct $21495183D47290F5A8E3C5F22F4A38B0 OpSetLineAttr;
typedef struct $7B9EFA27100EC2B39C6927240A0ABF1B OpSetLineColor;
typedef struct $E9946471985084F09CA20E2FD228F537 OpSetLineColorIndex;
typedef struct $A64236AF2067F22AAD9C817BE85884A5 OpSetLineColorMap;
typedef struct $C3BF8A304700C0EAC1C00B178E48E8A0 OpSetLineEnd;
typedef struct $EE9E7E763C7B1C82A4723EC85C6E1271 OpSetLineJoin;
typedef struct $1653B4A25C277C5A50A9D4602DE24762 OpSetLineMask;
typedef struct $0C43D05706A91DD42FAC7F1438EF4146 OpSetLineStyle;
typedef struct $F2B1984A0DCC8CE19D3CCF191208A19F OpSetLineWidth;
typedef struct $F448364D6190926D6DF4937DC85FD4EE OpSetMiterLimit;
typedef struct $FF9A0D164ED0D2C7A7C0079E01C8AFF6 OpSetMixMode;
typedef struct $221C70183E9E9D83930F24E25E146568 OpSetNullPath;
typedef struct $94D36BA977D3E1822AB1D2DB4F4A898F OpSetNullTransform;
typedef struct $74A0AEAF3BFEFBE19C33D7B5BFEC63E1 OpSetPalette;
typedef struct $623F674037DD2BFF825E596B82E5279A OpSetPaletteEntry;
typedef struct $3D389F1104C796171207DCEB21FFD879 OpSetStrokePath;
typedef struct $C7C6D8F7F77286D7AA42177F2262F2C1 OpSetSubscriptAttr;
typedef struct $8FB3A01D33C72705C7B9BA1A02BA4DE6 OpSetSuperscriptAttr;
typedef struct $AE7568716124EDFDE6255A098EC4429C OpSetTextAttr;
typedef struct $871001D0B5C712357723D9CD7C2DBBBB OpSetTextColor;
typedef struct $2358A2BBFA3E93108FF10D27BF7658E0 OpSetTextColorIndex;
typedef struct $BE5CEE27A8A07B81AA9A8F4D0D64BD69 OpSetTextColorMap;
typedef struct $AF9BB2DF8ACB21B0A4E6EB42E2907C14 OpSetTextMask;
typedef struct $091916DE94EF084142B03E2B096200AA OpSetTextMode;
typedef struct $A8144B371B38CDC1895DF843579E78AA OpSetTextPattern;
typedef struct $21CED7614576311B33E920BAE5D44FB0 OpSetTextSpacePad;
typedef struct $6D826F798463B7CC1503F6E92342E25C OpSetTextStyle;
typedef struct $30C522515A69826B614AC7ADFAD8A9E7 OpSetTrackKern;
typedef struct $8F740B87736BC3A8DB533C6FF3921CC6 OpSetTransform;
typedef struct $AB2F8C720A56E8ECF4BAEE937A6C0099 OpSetWinClipPath;
typedef struct $2DC881E1EB2CB117FC05D54D090AA435 OpSetWinClipRect;
typedef ByteEnum OperatorIDs;
typedef struct $F21F83A75FD5128D5FD7DD470D949EF1 OperatorStackElement;
typedef ByteEnum OperatorType;
typedef struct $487DE96EDEAF5FD327DE9FAC00DDA3E7 OptFontEntry;
typedef struct $F1A997520A431ABA2CFD52AC07619FF6 OptrWordArgs;
typedef ByteEnum OutputBin;
typedef ByteEnum OutputCopies;
typedef ByteEnum OutputDuplex;
typedef ByteEnum OutputSorter;
typedef WordFlags PACFeatures;
typedef WordFlags PACToolboxFeatures;
typedef WordFlags PASCFeatures;
typedef WordFlags PASCToolboxFeatures;
typedef ByteEnum PCComAbortType;
typedef ByteEnum PCComDirDetailLevel;
typedef ByteEnum PCComEntryPoint;
typedef word PCComFullReturnType;
typedef WordFlags PCComInitFlags;
typedef ByteEnum PCComReturnType;
typedef struct $B900BDE842A7D36F1E13BAD9F29B93E8 PCDocSizeParams;
typedef struct $F38FE6B9118257A18B8A8D4CB5824520 PCMarginParams;
typedef struct $668F509AE14F9AAF7B232DA0FF76627C PCPageRange;
typedef enum $5F243C82FE45840C606DF869E3A8D891 PCProgressType;
typedef ByteFlags PDAHardwareInfo;
typedef ByteEnum PDAType;
typedef struct $3F8E984C3C43DA7983E6BB30EE23B236 PDLKbdData;
typedef byte PID[2];
typedef struct $D52ED8926ECD8E2DACA2DA693C138111 PLInit;
typedef WordFlags PSCFeatures;
typedef WordFlags PSCToolboxFeatures;
typedef struct $F4EFC6D9C5192BDEC7755C86A97E8F0C PState;
typedef struct $19A112BEAA66D2D5823F4F71FF657488 PackageDescriptorArrayEntry;
typedef enum $922E1BC3CA4971FC5EE74AD2D300FD57 PackageDescriptorDataType;
typedef struct $7D3DF06FCA98BB576899248302CA6BBB PackageProgressArrayEntry;
typedef struct $1EA4AB37EF86044C4FB6734218C6E6BE PackageRoot;
typedef ByteEnum PageEndCommand;
typedef union $906092021A7B30EDDBF769BB3A27FA79 PageLayout;
typedef WordFlags PageLayoutEnvelope;
typedef WordFlags PageLayoutLabel;
typedef WordFlags PageLayoutPaper;
typedef WordFlags PageLayoutPostcard;
typedef struct $E07ED87A4A0971349024EED8184540D8 PageSetupInfo;
typedef struct $784F936D140AA54D49C58372F8242201 PageSizeControlChanges;
typedef WordFlags PageSizeControlFeatures;
typedef struct $68EA25A7B2FA5AA037F002741DD37A3A PageSizeControlMaxDimensions;
typedef WordFlags PageSizeControlToolboxFeatures;
typedef WordFlags PageSizeCtrlAttrs;
typedef struct $A54A1F749D3BEB8CCA06817818E762F8 PageSizeReport;
typedef enum $641AB21D504E8A8B7B3E15089835983E PageType;
typedef struct $04392AFCC770A0C2B760AE03AC94FA23 Palette;
typedef struct $028E1376C97BF2D2A5C94D00B65BA3DA PaperDimensions;
typedef ByteFlags PaperInputOptions;
typedef ByteEnum PaperOrientation;
typedef ByteFlags PaperOutputOptions;
typedef struct $68349E9C1D76F95407AB0400B1CD6F5D PaperSizeInfo;
typedef struct $205650CEF9E45C2DAC7BE433879296D2 PaperSizeOrderInfo;
typedef ByteEnum PaperSorted;
typedef WordFlags ParallelDeviceMap;
typedef WordFlags ParallelError;
typedef enum $9890F1E5FA2454931F6E390FA6C697C8 ParallelInterrupt;
typedef enum $BC6932EC74D721FFF786605AD233AF6E ParallelPortNum;
typedef struct $D7DF1BCBAF08069733BD7B26DC5F871C ParallelPortParams;
typedef enum $BC6932EC74D721FFF786605AD233AF6E ParallelUnit;
typedef ByteFlags ParserFlags;
typedef struct $2FC5AE35CBCC1E8ECEEE9506753B8161 ParserParameters;
typedef ByteEnum ParserScannerEvaluatorError;
typedef struct $CAE8D45E5E8FFB0DA306839D4396EA97 ParserToken;
typedef struct $98638DFDB3E859876C1C282AAF605F02 ParserTokenCellData;
typedef union $0D77E0621F4DEEA15F5E803B47675B17 ParserTokenData;
typedef struct $D349BED624B8B426B84B191AC423E4AD ParserTokenFunctionData;
typedef struct $5B75F7E8CAA683E0DE8DD84B5F0A6322 ParserTokenNameData;
typedef struct $1CFF16A479EE73F8BEF3F7CC190C10B7 ParserTokenNumberData;
typedef struct $63CE67E2A835CC87BD3FB46803153A53 ParserTokenOperatorData;
typedef struct $C254BE2E2CAE40527518A4AED480F6BB ParserTokenStringData;
typedef ByteEnum ParserTokenType;
typedef char PathAndFileName[234];
typedef enum $E7839518F5D0FA2910B889FACCFA262A PathCombineType;
typedef ByteEnum PathCompareType;
typedef char PathName[198];
typedef ByteEnum PatternType;
typedef enum $6A9A78C9A840AF3CA4C5D951A2D6BBEC PenInputDisplayType;
typedef WordFlags PersonContactsControlFeatures;
typedef enum $04FBDCF4757721D0F3DFE13CF714075F PickAToneType;
typedef struct $8ECDEA8D7F7F0D0EA6A364762FE46796 Point;
typedef struct $1A6D88FF44AD6663571D3C3A1B08B6ED PointDWFixed;
typedef struct $A9539705177B28D5AB39DFBD4FFC1531 PointDWord;
typedef struct $D475DA5AF10BA49D039C90527F41BF7E PointWBFixed;
typedef struct $BEA8F227C132E2AACD52F7EE748A1EF9 PointWWFixed;
typedef struct $B6635FD49EC55FAECA4767B81E912DC7 PointerDef16;
typedef struct $A386899E807CC7CCCE6DDDFD9B6DE130 PointerDef32;
typedef struct $7BF5986973715DCD9514D75823A81B8B PointerDef64;
typedef ByteFlags PointerModes;
typedef union $E1E678ADAFDD64DDD98F4AAD90484264 PortParams;
typedef struct $2EEAED752AD3A4C0A1658EE42CB6E9CF PositEvalAndHitHandle;
typedef ByteEnum PostcardOrientation;
typedef ByteFlags PrefAttributes;
typedef struct $DD66E82342D8B8C2006807A9382D9025 PrefCategoryData;
typedef ByteFlags PrefCategoryFlags;
typedef enum $564C78589B2B06EDC17A0AADD470D4ED PrefDialogChangeType;
typedef struct $FD456967AFB0D1D8C079C2C8A7CDB91F PrefEnableData;
typedef ByteFlags PrefEnableFlags;
typedef ByteFlags PrefInitFileFlags;
typedef ByteFlags PrefInteractionAttrs;
typedef WordFlags PrefMgrFeatures;
typedef enum $204BB3BC898B888C3845A70CF0927A84 PrefModuleEntryType;
typedef struct $CC27FB51B27683E7F0E126CD3E17352A PrefModuleInfo;
typedef enum $D99889442930925BF7084DFE03FB6ADE PrefPortItemType;
typedef struct $64C3F97555F8571ECA843F0E481B23C6 PrefTocExtraEntry;
typedef struct $0D2CA1F3AF1F5CE7C6A524AE8534DECD PrefTriggerAction;
typedef struct $0614CD6A12314C6BF3210BB2BC38315B PrefVMMapBlock;
typedef WordFlags PrintControlAttrs;
typedef ByteFlags PrintControlFeatures;
typedef enum $D8FB211F926F532627781AA9E6FDF29C PrintControlStatus;
typedef ByteFlags PrintControlToolboxFeatures;
typedef enum $E0D5EF4CA08979F8B7EC539D9D778F3C PrintDevice;
typedef struct $11DA5C3B6CA57935B685652401DF3BB1 PrintDriverInfo;
typedef struct $28B6104B7B19E489C6753D4FEF7A4463 PrintDriverUIData;
typedef enum $D5559E4F88516008E59686C89B6F373F PrintEscCode;
typedef enum $665976B34275D482C2DA2F35CBE71BA3 PrintFunction;
typedef struct _PrintPortInfo PrintPortInfo;
typedef ByteEnum PrintQualityEnum;
typedef enum $8E400B91C438F0E8C81E47287BFF07B6 PrintStatusChangeType;
typedef ByteFlags PrintStatusFlags;
typedef WordFlags PrintTextStyle;
typedef ByteFlags PrinterConnections;
typedef ByteEnum PrinterCountryCode;
typedef ByteEnum PrinterDriverType;
typedef enum $1DB987EF7E556B3247120F8D9D694ECD PrinterError;
typedef struct $87347AEDC994051E9EB1360C1A45C35F PrinterInfo;
typedef struct $1019DD60C6340A2D0CED339E93C6BCA7 PrinterMargins;
typedef ByteEnum PrinterMode;
typedef ByteFlags PrinterOutputModes;
typedef enum $1EF2FB4AFF462BF0AD6A594C61E45E4F PrinterPortType;
typedef enum $E7D266D7D37886471FC81C865D983433 PrinterResend;
typedef ByteEnum PrinterSmart;
typedef enum $894F390A6474159F1CD83F51CE405E14 PrinterStatus;
typedef struct $B6FA7730A497E8C9626B02F109AEE89D PrinterStringInfo;
typedef enum $6B175670219C3A85EF367898BCFB0158 PrinterSymbolSet;
typedef ByteEnum PrinterTech;
typedef ByteFlags PrinterType;
typedef struct $D6D9748F5FB3816752DD77A499C25E15 PriorityElement;
typedef struct $82F551891BCA580FE9AAABF04F7FB6A9 PriorityList;
typedef struct $27D8E2FF90411EEAE562761715D6A5F8 PriorityListElement;
typedef ByteFlags PriorityListInstructions;
typedef struct $A8F5F5581CB79FD0103E4324FAFEFA42 ProtocolNumber;
typedef enum $1E3516506F921EE5127C2D56BAD6FF6D PtrImageLevel;
typedef enum $DADDD837A6ADB2AB77B436B6324E6B5A PtrImageValue;
typedef struct $D19DD6AFBA13CCAEF2AFF1B46F5B3F8C QualityOfService;
typedef struct $37C252EDA9ECB0D21DBA7E35CD48A214 QualityOfService1;
typedef WordFlags QualityOfServiceFlags;
typedef enum $AE833769627E9B9B64683B5A8527770E QueueErrors;
typedef Handle QueueHandle;
typedef struct _QuickSortParameters QuickSortParameters;
typedef enum $C61FD7A9CBADF65BDC6AF41A7BB250B6 QuitLevel;
typedef WordFlags RCMOverwrite;
typedef dword RGBColorAsDWord;
typedef struct $02A6DB27AF9040252CDC30283BB3B888 RGBDelta;
typedef struct $B8316F977F9964BFB125831461963212 RGBQuad;
typedef struct $E6CA1D840B3EA7A52EE837361804A849 RGBValue;
typedef WordFlags RGCFeatures;
typedef ByteEnum RS232CConnection;
typedef WordFlags RSCCFeatures;
typedef WordFlags RSCCToolboxFeatures;
typedef WordFlags RTCFeatures;
typedef enum $73FB1A80F841CFA6585F3BAEA22225DE RTCMError;
typedef enum $9F84FB585A811D87BB98331234F1E256 RTCMGeodeLaunchMode;
typedef WordFlags RTCToolboxFeatures;
typedef ByteFlags RandomGenInitFlags;
typedef struct $FBF8401657994D0236D0B4C2FFE9F866 RangeEnumCallbackParams;
typedef ByteFlags RangeEnumFlags;
typedef struct _RangeEnumParams RangeEnumParams;
typedef struct $D1AF11DD7D52FCFB370674470A3F3F2C RangeInsertParams;
typedef ByteFlags RangeSortCellExistsFlags;
typedef enum $E5A504D2B7F6602B2A85B27A8AF5115B RangeSortError;
typedef ByteFlags RangeSortFlags;
typedef struct $E5CEE382E743E7724ADA81055FF59EEF RangeSortParams;
typedef WordFlags RecalcSizeArgs;
typedef struct $5DD3EDB207D9B1B93D0AD839AE7033BF RecentContactsData;
typedef WordFlags RecentContactsFaxControlFeatures;
typedef WordFlags RecentContactsPhoneControlFeatures;
typedef WordFlags RecentContactsSMSControlFeatures;
typedef enum $AB170257BA29E640C758ED9DC28A3816 RecentContactsType;
typedef struct $149FFFD6B9EAFC7574796F96BCBBD267 RecordHeader;
typedef dword RecordID;
typedef GrObjElementObjPtr RecordLayoutChunkArrayElement;
typedef struct $121616E256656C749B99423BA5BD40AC RecordLayoutChunkArrayHeader;
typedef ByteEnum RecordOrderOption;
typedef struct $749C8BB21B589771188ED9E7F0491A9C RectDWFixed;
typedef struct $C56AC786F963F2215C7C45AFB65FFEB7 RectDWord;
typedef struct $36949B2C32C6EE748A39910F5F5D666F RectRegion;
typedef struct $1936F737944308236BC51400734619FE RectWWFixed;
typedef struct $1665B609294F9BA301134A8647E0A7CF RectWWFixedAsDWord;
typedef struct $3E1ECE4F54EAB5D07E352D7DD945BADF Rectangle;
typedef ByteEnum RedrawFlag;
typedef struct $539CED4101416EE9A66DA4A9F9294380 RefElementHeader;
typedef word Region;
typedef ByteEnum RegionFillRule;
typedef struct $1FF24FBB43323421496B9B8A67F27BA5 RegisterInfo;
typedef struct $F1999D222D532D618B99C5A6CA95D81B ReleaseNumber;
typedef WordFlags ReplaceAllFromOffsetFlags;
typedef struct $A77C363068AD8254F0ED1A730274404E ReplaceComplexMoniker;
typedef struct $3618710C382EC9BD1A544816407872AB ReplaceComplexMonikerChunkHandles;
typedef WordFlags ReplaceItemMonikerFlags;
typedef struct $E37D9E11539D0479A9137C0A5CEA545E ReplaceSelectedWordParameters;
typedef struct $AD28821EA4EB2D2D15CD4F60E6094D5E ReplaceWithHWRData;
typedef ByteEnum RequestedViewArea;
typedef Handle ReservationHandle;
typedef ByteEnum RespColor;
typedef void __pascal RespNmiNotifyRoutine(word notif);
typedef int RetVal;
typedef ByteEnum ReturnType;
typedef union $C4FBBFCDDD21E11B4F3DDE951B49D617 ReturnValue;
typedef struct $2E616F4580742465F752731E27311683 RulerGridNotificationBlock;
typedef WordFlags RulerGuideControlFeatures;
typedef WordFlags RulerShowControlAttributes;
struct RulerTypeNotificationBlock {VisRulerType RTNB_type;};
typedef ByteFlags RulerViewAttributes;
typedef struct $12F8A294DDEE7132DF4193EC2107656B SACAddress;
typedef enum $4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_Status;
typedef enum $C70ADC1A666FCDFCA0FF17A6CF58244F SCEP_ROLE;
typedef enum $A92B158753A91318E938831BF2ACA23A SCEP_STATE;
typedef ByteEnum SCSIConnection;
typedef enum $E255D112540C26465EA789ECF4CA5493 SDKGenAppGCNListType;
typedef enum $E1B77CF01F306C77AFC25B51211ECA55 SDKNotificationType;
typedef enum $79E09E430BB425288CA2C3150167489A SIMCardStatusType;
typedef WordFlags SMAddressFeatures;
typedef struct $A173515FA11CC65DFBBBBD0797C8C482 SMAddressInfo;
typedef enum $91F6B745FFED4EC40A544E2CF466C4F0 SMBroadcastMessagesMode;
typedef enum $63B0D685B3B20F1E187B8A98187C666A SMConcatenatedMessages;
typedef enum $58EF8F61FE8CAC6382F4FA2C4FF68448 SMDeliveryReportRequest;
typedef enum $6F17267BF24DB2925B9802482B1CA86C SMMessageConversion;
typedef ByteFlags SMNumberSelectedFrom;
typedef enum $781EE3B25E51C102156CFE966979AA40 SMProtocolId;
typedef enum $C12DC13DAF679FFA4985FEA10C8AEC6D SMRegErrors;
typedef ByteFlags SMRegIntegerToHexFlags;
typedef enum $0451F92F349E32BE151B21642DC2B465 SMRegResult;
typedef enum $EB0FB178842C717DA8A7CB0217558F40 SMReplyPath;
typedef struct $28E91C02142EEF2B3CE0A860D17812F5 SMSCData;
typedef WordFlags SMSEditFeatures;
typedef enum $6E3AB186370C296995C16D3858DB93EC SMSEditFormattingCommands;
typedef ByteFlags SMSInfoServiceLanguage;
typedef ByteFlags SMSPrintDateAndTimeFlags;
typedef struct $3475486A34F06529C91EBF4AD96B818A SMSTextHeader;
typedef struct $840C4AE6DA675E191336E570CC906146 SMSendingOptions;
typedef enum $BC9211666FA404E1B11DD473B05D5C23 SMShowBroadcastMessages;
typedef enum $42A58214516CA2F6AA9A9EC891076ABB SMValidityPeriod;
typedef WordFlags SRCFeatures;
typedef WordFlags SRCToolboxFeatures;
typedef struct $F06E5020F1E533AA2006CAFA8F7AB7F4 SSCDefineStyleParams;
typedef struct $DE5AF004528198CC5CF1E16818FE6D18 SSCDescribeAttrsParams;
typedef WordFlags SSCFeatures;
typedef struct $C07F7C60B18A006FEF386934224F4929 SSCListInteractionParams;
typedef struct $48FC1B61E15D8C523209BA5197A16555 SSCTempAttrInfo;
typedef WordFlags SSCToolboxFeatures;
typedef struct $55106A25D1B8485E8E16981A2EEAF26E SSCUpdateModifyParams;
typedef WordFlags SSDescribeDistanceFlags;
typedef struct $1D3B59FA806D2DA4D2109525DB6505D9 SSDescribeWordEntry;
typedef struct $E4642C11A0A297007EE3AFF3C4F8039F SSDiffEntry;
typedef ByteFlags SSDiffFlags;
typedef struct $0A51A593A5D009153CD504E2F16C9B81 SSMergeEntry;
typedef byte SSSetCallType;
typedef struct $B7BE53A12C4DBB45D702722F73B384A1 S_Abort_dataStruct;
typedef S_Abort_dataStruct S_Abort_indStruct;
typedef S_Abort_dataStruct S_Abort_reqStruct;
typedef S_Command_responseStruct S_Command_cnfStruct;
typedef struct $648DAA364A048D376F56F68DAED3F216 S_Command_indStruct;
typedef struct $55F0CDFFBE14A961CF44A6C1642EF01C S_Command_reqStruct;
typedef struct $B64AF5E7AAF8AF2810980820095129E1 S_Command_responseStruct;
typedef S_Command_responseStruct S_Command_rspStruct;
typedef S_Connect_dataStruct S_Connect_cnfStruct;
typedef struct $C080AE56DBC7D55597E12957E2861EF3 S_Connect_dataStruct;
typedef S_Connect_dataStruct S_Connect_indStruct;
typedef S_Connect_dataStruct S_Connect_reqStruct;
typedef S_Connect_dataStruct S_Connect_rspStruct;
typedef struct $FF2D5255CE619DBA428CE163825C5D44 SampleFormat;
typedef struct $BC30A9EDF39495CE3EB028A547280621 SampleFormatDescription;
typedef byte SansFace;
typedef ByteEnum ScaleViewType;
typedef struct $545A6A4030C7E3037682797F0A24A811 ScannerToken;
typedef struct $BF9437BF576E358621011583AC7FC290 ScannerTokenCellData;
typedef union $1527BB8A43E7F1BB9DF13C4A8AC58AA3 ScannerTokenData;
typedef struct $F77F31B1369FFACC4965455909028848 ScannerTokenIdentifierData;
typedef struct $C39FA4AB8E10FC793DD1F752F290B840 ScannerTokenNumberData;
typedef struct $9685F3F916C43891E0A45B01352508C4 ScannerTokenOperatorData;
typedef struct $CE5E5413186079DD8BCA7D0EFA9B461C ScannerTokenStringData;
typedef ByteEnum ScannerTokenType;
typedef ByteEnum ScoreType;
typedef byte ScriptFace;
typedef ByteEnum ScrollAction;
typedef ByteFlags ScrollFlags;
typedef ByteFlags SearchFromOffsetFlags;
typedef struct $748FF5FA1B92B0CFC5F3863463907808 SearchFromOffsetReturnStruct;
typedef ByteEnum SearchNoteOptionType;
typedef ByteFlags SearchOptions;
typedef ByteFlags SearchReplaceEnableFlags;
typedef ByteEnum SearchReplaceFocusInfo;
typedef struct $CB88FA05048883AD7270AACBD1CE5495 SearchReplaceStruct;
typedef WordFlags SecuritySettingsControlFeatures;
typedef word Segment;
typedef struct $CDEBBD8A5BAF9940C9ABA077D41030A7 SelectWordParameters;
typedef enum $832DA866C4E6BD40C97AF9A03AC2F2BF SelectionDataType;
typedef ByteEnum SelectionType;
typedef enum $2B879885335CF578DE9C061EC9AFC8E4 SemaphoreError;
typedef Handle SemaphoreHandle;
typedef enum $B7721C107B1CE5AB932BB7835712916B SerialBaud;
typedef WordFlags SerialDeviceMap;
typedef WordFlags SerialError;
typedef enum $8E4F37CBFF6035A202A1AD1B1C2FD4E9 SerialExtraStopBits;
typedef ByteFlags SerialFlowControl;
typedef ByteFlags SerialFormat;
typedef enum $8AE5CADB88CA2B17E08A8546F870C5B9 SerialLength;
typedef ByteEnum SerialMode;
typedef ByteFlags SerialModem;
typedef ByteFlags SerialModemStatus;
typedef enum $ECEB8CFA620456586655C6769908C3FF SerialParity;
typedef enum $08DFC7454898025134E339F743EB252C SerialPortNum;
typedef struct $5359995B306C48B6BF0841A1DA48639E SerialPortParams;
typedef ByteEnum SerialRole;
typedef SerialPortNum SerialUnit;
typedef byte SerifFace;
typedef ByteEnum ShadowAnchor;
typedef ByteFlags ShiftState;
typedef enum $FCC37038358985FBDB2D5C9E69464523 ShortcutCode;
typedef dword SizeAsDWord;
typedef ByteEnum SmoothType;
typedef word Socket;
typedef struct $8A4957CB4E1041F30DD04B576B93E7A0 SocketAddress;
typedef WordFlags SocketBindFlags;
typedef struct $4D421DC202AF077A0AF06EB53A320FBA SocketCheckRequest;
typedef word SocketCloseType;
typedef ByteEnum SocketCondition;
typedef ByteEnum SocketDeliveryType;
typedef enum $43E9C101736C5A6689916A08C170A599 SocketDrError;
typedef enum $351DC98CA581490C51E4294D2E3595A6 SocketDrException;
typedef enum $A026D910F7EFA3A968A94B2CD1CE537A SocketError;
typedef enum $28EF303444BB2C403B5E355CB9E57DE5 SocketLoadType;
typedef enum $78F6A49E423E9A58155E6F23DC12C169 SocketOption;
typedef word SocketOptionType;
typedef struct $C3007D15F15A57A7ACF17EF403C7B4A9 SocketPort;
typedef WordFlags SocketRecvFlags;
typedef WordFlags SocketSendFlags;
typedef word SocketSendMode;
typedef enum $955FC0FDE82C2E6F54BC7A6A8D5E6A27 SocketSubsystemNotification;
typedef ByteFlags SortInfoAscentFlags;
typedef struct $9EC1E981A8092A7559C704B327BE0470 SortableArrayElement;
typedef struct $023A8188AA3A319B4ABCD2B483DDCB16 SortableArrayHeader;
typedef WordFlags SortedNameArrayFindFlags;
typedef WordFlags SoundDriverCapability;
typedef WordFlags SoundDriverEnvelopeCapability;
typedef WordFlags SoundDriverNoiseCapability;
typedef WordFlags SoundDriverTimbreCapability;
typedef WordFlags SoundDriverWaveFormCapability;
typedef enum $95AA10DAFD72970BE72C956ECFEF3F9C SoundKeyClickAlarmType;
typedef enum $F5133D8A3D740B95AD56751B25FB56C0 SoundPriority;
typedef enum $90205E8727C8D8A4A85D58457ACCF4E4 SoundStreamDeltaTimeType;
typedef enum $30C6FA5BB078C7ECCC3421A6C3F89219 SoundStreamEvents;
typedef word SoundStreamSize;
typedef dword SpacingAsDWord;
typedef ByteFlags SpecAttrs;
typedef WordFlags SpecBuildFlags;
typedef WordFlags SpecHeight;
typedef WordFlags SpecSizeSpec;
typedef ByteEnum SpecSizeType;
typedef enum $2D34B58C94EDB5E35C856580B17916B1 SpecSocketDrError;
typedef WordFlags SpecWidth;
typedef struct $805E1BDB86029450638BEA6CF5014E33 SpecWinSizePair;
typedef WordFlags SpecWinSizeSpec;
typedef enum $627908333F158D43589E55DF16392725 SpecialChar;
typedef enum $35C83F51E81BBF19225AED727E5F2E01 SpecialFunctions;
typedef WordFlags SpeedDialControlFeatures;
typedef ByteEnum SpellBoxState;
typedef ByteFlags SpellCheckFromOffsetFlags;
typedef WordFlags SpellCheckOptions;
typedef enum $8BC72EBC84419DF45BC0DA27720BD137 SpellCheckResult;
typedef ByteEnum SpellCheckStartOption;
typedef WordFlags SpellErrorFlags;
typedef WordFlags SpellErrorFlagsHigh;
typedef WordFlags SpellFeatures;
typedef enum $BAA0B5F1DB1BCC07071E1163FBE13929 SpellResult;
typedef enum $9BCBD61203C90FDAD9FF615FC58BC77E SpellRoutine;
typedef enum $E40E6B41FCC2DCB1AA75F896BDA28190 SpellTask;
typedef WordFlags SpellToolboxFeatures;
typedef ByteFlags SplineEditState;
typedef struct $5F6890D8BAF8BDD4C9589A67392156B9 SplineEndPointInfoParams;
typedef WordFlags SplineGenerateNotifyFlags;
typedef struct $075996EB638D2331EE99C8ABAF19AAA5 SplineGenerateNotifyParams;
typedef struct $E2C1C34DB80E50FAE9ECC45B6F071EF0 SplineHitDetectParams;
typedef ByteFlags SplineInitFlags;
typedef struct $04BF5AC07B60C0ABF1CD13DC725BEB2E SplineInitParams;
typedef struct $DE54080E9054D96C37BE69C0526D0EFD SplineJoinParams;
typedef struct $DC9CD6A411F36FC1EC83EC093F4030E9 SplineMakeStarParams;
typedef ByteFlags SplineMarkerControlFeatures;
typedef ByteFlags SplineMarkerFlags;
typedef ByteEnum SplineMode;
typedef WordFlags SplineNotifySendFlags;
typedef ByteFlags SplineOpenCloseControlFeatures;
typedef ByteEnum SplinePasteReturnType;
typedef ByteFlags SplinePointControlFeatures;
typedef ByteFlags SplinePointControlToolFeatures;
typedef ByteFlags SplinePolylineControlFeatures;
typedef ByteFlags SplinePolylineControlToolFeatures;
typedef ByteEnum SplineReturnType;
typedef ByteEnum SplineSelectType;
typedef ByteFlags SplineSetPointFlags;
typedef struct $619D84A0371CF215C8E7FD5384262353 SplineSetPointParams;
typedef ByteEnum SplineSetPointType;
typedef ByteFlags SplineSmoothnessControlFeatures;
typedef ByteFlags SplineSmoothnessControlToolFeatures;
typedef ByteFlags SplineState;
typedef ByteFlags SplineUnSuspendFlags;
typedef ByteEnum SpoolCollate;
typedef struct $6E09700C3718F41EFE2C5E3FD8879E09 SpoolFileName;
typedef ByteEnum SpoolFileType;
typedef struct $54B0A64462BD631137BD288703C47A43 SpoolInfoJobParams;
typedef union $4A4A09A86469E20D493B4658E216C0AA SpoolInfoParams;
typedef struct $52EBF8DC1D96B4CF11CC2BE030CA987F SpoolInfoQueueParams;
typedef enum $A6102D84F94E2BE359C99F817E40139E SpoolInfoType;
typedef enum $183A3DF51ED1F57844B9AE079B36B115 SpoolOpStatus;
typedef ByteFlags SpoolOptions;
typedef ByteEnum SpoolOrder;
typedef ByteEnum SpoolRotate;
typedef ByteEnum SpoolScale;
typedef struct $8E9F1B91AF07BF61A9A05440363B6DE9 SpoolTimeStruct;
typedef enum $EC59398CF76823A6A4728F4774D46DC2 SpreadsheetAddress;
typedef ByteFlags SpreadsheetAttributes;
typedef ByteEnum SpreadsheetChartReturnType;
typedef ByteFlags SpreadsheetClearFlags;
typedef struct $8E06E9D1C6BD5E3998AF35AF843B419F SpreadsheetDocOrigin;
typedef ByteFlags SpreadsheetDoubleClickFlags;
typedef WordFlags SpreadsheetDrawFlags;
typedef struct $E504FD8B8BD7393DC31412706D00CAA6 SpreadsheetDrawParams;
typedef struct $A94FD9C701DAFCC68946591D2A7381E5 SpreadsheetEvalFuncParams;
typedef struct $31EC85363C1D3E72A4D8DE9DE16297C7 SpreadsheetEvalParams;
typedef enum $CC352368ACDC62280C5B2878C58E88B5 SpreadsheetExtentType;
typedef ByteEnum SpreadsheetFillError;
typedef WordFlags SpreadsheetFlags;
typedef ByteEnum SpreadsheetFormatError;
typedef struct $C269FD996A462822D8A7F54940029C29 SpreadsheetFormatParams;
typedef struct $641E32A1C34BC919510B83D31928D586 SpreadsheetFormatParseRangeParams;
typedef struct $4FC2F813AD5DD2E8CBF91560C65810E5 SpreadsheetInitFileData;
typedef ByteFlags SpreadsheetInsertFlags;
typedef enum $0DA4114957093A0370C4C628ED81B61F SpreadsheetInsertSpaceError;
typedef struct $C9CC327664E4480F0B910836C766F9B6 SpreadsheetNameParameters;
typedef struct $48E73CE3B8892A2B61ECD0D8B7897146 SpreadsheetNameParams;
typedef struct $8E7F4CD51107C8A8AA15E7E7B226E9D4 SpreadsheetParserParams;
typedef WordFlags SpreadsheetPrintFlags;
typedef struct $639A8B5CFB03827A5DCDAAE3A239D66D SpreadsheetRangeParams;
typedef struct $3FA3C241DF38982CD341F6193609534B SpreadsheetRecalcParams;
typedef ByteFlags SpreadsheetRulerFlags;
typedef ByteFlags SpreadsheetSearchFlags;
typedef struct $88ED5A4D9ADB3911707D5AA699EF6BD3 SpreadsheetSearchParams;
typedef ByteFlags SpreadsheetSeriesFillFlags;
typedef struct $BB31F59B9755F4A27178037F31031AE1 SpreadsheetSeriesFillParams;
typedef enum $2215ADAE06A0AE5285309900AF409715 SpreadsheetSeriesFillType;
typedef struct $8DE6D42E14E1D8AF49353FCBF61ECFAD SpreadsheetSetupData;
typedef WordFlags StandardArrowheadType;
typedef struct $0CF625F3EBA130FEC5919360B0137CEA StandardDialog1ResponseTriggerTable;
typedef struct $889A989E3360067B804F9D6F3C292B0D StandardDialog2ResponseTriggerTable;
typedef struct $6EFEC483D53FAAB0C41A01936A425E41 StandardDialog3ResponseTriggerTable;
typedef struct $1E4CA10A1844E02B3C816D3CF5435BDF StandardDialog4ResponseTriggerTable;
typedef struct $598C73D03A73D62C1EFE5C0BA210F3EB StandardDialogOptrParams;
typedef struct $5DE8741EC4EEFB406C028646E83F931D StandardDialogResponseTriggerEntry;
typedef ByteEnum StandardLanguage;
typedef enum $E26DFDD3B595AD2345D19D74002512EA StandardPath;
typedef WordFlags StandardSoundFlags;
typedef enum $3E7E18BB14457278993EAF15234DBA2E StandardSoundType;
typedef ByteEnum StapledOutput;
struct StatusReply {dword SR_fileSize;dword SR_bytesXfrd;};
typedef enum $4ACB06FB599B794B795470E84B15C244 StreamBlocker;
typedef enum $30479F21CC38D10C8B51278DACAC42EB StreamError;
typedef void __pascal StreamGeneralNotifyRoutine(word data, word cxValue, word bpValue);
typedef enum $2D8A2014CBC3ADB6C407119D364CD229 StreamLingerMode;
typedef enum $68221AC6186A965E2AF123AEDDB9FBE4 StreamNotifyEvent;
typedef enum $7B5E1B6BB836FBFD056989984B712786 StreamNotifyMode;
typedef ByteFlags StreamNotifyType;
typedef enum $965BF2DE53BBEF0CD7A62F657AAEDAC0 StreamOpenFlags;
typedef enum $536230E93DF9B0220E2A8D90C00430A1 StreamRoles;
typedef word __pascal StreamSpecialDataNotifyRoutine(word data, word cxValue, word bpValue);
typedef Handle StreamToken;
typedef struct $58B9716CC5E745B38DA584E0030AF332 StyleChunkDesc;
typedef WordFlags StyleElementFlags;
typedef struct $B0D3C9703FC6FE41386DAFE24FFA6FF3 StyleElementHeader;
typedef struct $81352BF78AB9E91B568137A2A02459F3 StyleRunInfo;
typedef struct $672836A1FB7D55867CA2EE5B62749BC8 StyleSheetElementHeader;
typedef struct $3447888ECC99EEDFD96D09038161D89B StyleSheetParams;
typedef struct $16F818B1CA9D328212EE7884CBA9AF0A SubscriptAttr;
typedef ByteEnum SubscriptPosition;
typedef ByteEnum SubscriptSize;
typedef struct $096D1327285D332970676C9D2EE54721 SubsetAttrs;
typedef ByteEnum SubsetEvalResult;
typedef ByteEnum SubsetMarkModification;
typedef struct $5CF84CD3EB548B00D711A5F7EFF318EF SuperscriptAttr;
typedef ByteEnum SuperscriptPosition;
typedef ByteEnum SuperscriptSize;
typedef enum $18D836BE8BF676513CD5426CA848A2CC SupportedEnvelopeFormat;
typedef ByteFlags SysConfigFlags;
typedef ByteFlags SysDrawMask;
typedef enum $9314BCEB47C6754959841B3FE5544301 SysGetInfoType;
typedef ByteEnum SysMachineType;
typedef WordFlags SysNotificationType;
typedef WordFlags SysNotifyFlags;
typedef ByteEnum SysProcessorType;
typedef enum $D82DACCF3DF168100F177C5B5BE78C23 SysShutdownType;
typedef struct $DAE8EED465A304B1F3D0404D76BA2BEA SysStats;
typedef enum $9D86436D6F2F67FCE06FCB0B56F70165 SysSubsystemType;
typedef struct $786826E0CE3AABC7E03CA881C08485CD SysSwapInfo;
typedef WordFlags SystemAttrs;
typedef ByteEnum SystemDrawMask;
typedef ByteEnum SystemHatch;
typedef enum $1E2C1667D0E65F4DBAC4B37F866C6A90 SystemVMID;
typedef WordFlags TCCFeatures;
typedef WordFlags TCCToolboxFeatures;
typedef WordFlags TCFeatures;
typedef char TCHAR;
typedef WordFlags TCToolboxFeatures;
typedef WordFlags THCFeatures;
typedef WordFlags TRCCFeatures;
typedef WordFlags TRCCToolboxFeatures;
typedef WordFlags TSCFeatures;
typedef WordFlags TSCToolboxFeatures;
typedef struct $2B6F68F967F158500DD5C03598DAFD4E TVTNCPIData;
typedef struct $3C1C93FAC16A93B268171CE798F6C1F8 Tab;
typedef ByteFlags TabAttributes;
typedef ByteEnum TabLeader;
typedef ByteFlags TabReference;
typedef ByteEnum TabReferenceType;
typedef ByteEnum TabType;
typedef enum $88B5D0B5A2060167D6627592E3BB6725 TargetLevel;
typedef struct $F8BB624A9453D086E5F2CDF5E535AD2D TargetReference;
typedef struct $4C64474EF6BA0BDB4806B40116E6CBA7 TcpAccPntExtendedAddress;
typedef struct $5FCA40BD09AED4281191CED106431ECD TcpAccPntResolvedAddress;
typedef struct $DE30D94303F8DF36B96A054BB1419FED TcpNonAccPntExtendedAddress;
typedef struct $F4BC1267496F1DC92C4D9B24FD5B7C53 TcpOnlyExtendedAddress;
typedef struct $D4130A9850737DC93B17FE378907D5C4 TcpOnlyResolvedAddress;
typedef struct $75B99C5435C207410259AF54BA0228C5 TempGenToolControlInstance;
typedef struct $56DFDB9144291FBA2306E71D829106D6 TempImportExportData;
typedef struct $2F0DDD4A587267F5108EBCF9FBD912B8 TempMailboxDialogData;
typedef struct $1CE416A7B60E17AF8F6001B45CA58C1B TempMetaGCNData;
typedef ByteFlags TempMetaGCNFlags;
typedef struct $7159B313E5B7F685E4B00230AB0D3D74 TempPrintAddressControlData;
typedef struct $350762858AE8AC5042EF2A9833AACD63 TempPrintCompletionEventData;
typedef struct $23D47B9782537D904B15A5635700A965 TempPrintCtrlInstance;
typedef enum $8A0FAB3510E333DDB8EAC3049ED5AAA5 TerminalSubsystemNotification;
typedef ByteEnum TestRectReturnType;
typedef ByteEnum TextArrayType;
typedef struct $E065F3D46FC99659E425AF62379D1F53 TextAttr;
typedef struct $BF17E24EFBE7A9FB5CAB82C551C3DBEE TextAttrInfo;
typedef enum $ACD65A8E70DEE0751A1FB96F5A959E73 TextClipboardOption;
typedef struct $A59367B5C0C700B9530A1AC4F222CF95 TextElementArrayHeader;
typedef struct $F078896A114F41D46BD93D09E95D3180 TextFieldDataAttrs;
typedef WordFlags TextFocusFlags;
typedef ByteFlags TextGuardianFlags;
typedef struct $90E22C87990FB7EF9BC22AC31F34B1A2 TextLargeRunArrayHeader;
typedef ByteFlags TextMiscMode;
typedef ByteFlags TextMode;
typedef ByteEnum TextPitch;
typedef struct $47218A9219DB3D2F3B718DC7D276AA4D TextReference;
typedef struct $7678109C56BBF022A6B1C8FD94116C30 TextReferenceBlock;
typedef struct $4B345571DD9C15D480B1E35A754B2F82 TextReferenceBlockChunk;
typedef struct $3E34046E5BB208A4E627A202491A333D TextReferenceDBItem;
typedef struct $EFB423DC18E290B50ECCFD32D26337BB TextReferenceHugeArray;
typedef struct $FD1B2E7A901F24ECA9BFA2CAB3BB4640 TextReferencePointer;
typedef struct $96955320D8281A8016A7238F663FB7DF TextReferenceSegmentChunk;
typedef enum $FD9CF0A438A888F33B48E36318B4C8B6 TextReferenceType;
typedef union $F915D5E9B901BC9C8C115A7495AE22B9 TextReferenceUnion;
typedef struct $C59D8CB2A618A0FFC1D7A9ABB0D567CF TextReferenceVMBlock;
typedef ByteEnum TextRulerAction;
typedef WordFlags TextRulerControlAttributes;
typedef ByteFlags TextRulerFlags;
typedef struct $E2A941051B3734D68D7277C6A2270F00 TextRunArrayElement;
typedef struct $0A06D01C6923EE95D81236D4BC64BD29 TextRunArrayHeader;
typedef struct $6A3AAC356466983CD0CCDDB0BC6EE98F TextStrings;
typedef ByteFlags TextStyle;
typedef struct $D59130EA5420C26030C9AA23DC97D154 TextStyleElementHeader;
typedef WordFlags TextStyleFlags;
typedef struct $84C30232336453913E223FE164FD10DD TextStylePrivateData;
typedef struct $9109C017CA0BC85567CE15810BF607DD TextTransferBlockHeader;
typedef ByteEnum ThaiChars;
typedef enum $1469305C9A4BEB75679A38DFE15FF374 ThaiKeyboardMapType;
typedef WordFlags ThesDictFeatures;
typedef WordFlags ThesDictToolboxFeatures;
typedef enum $8EED5B23BB25CC4C68758CEFE7548B42 ThreadException;
typedef enum $1E8870198DDE23EBA103909082FA56A6 ThreadGetInfoType;
typedef Handle ThreadHandle;
typedef Handle ThreadLockHandle;
typedef ByteFlags ThreadModifyFlags;
typedef ByteEnum ThreadPriority;
typedef struct $F1ECB05A97C283751074E6E0E92770D5 ThreePointArcParams;
typedef struct $9082C83F61041EFC1D18E010E43796F0 ThreePointArcToParams;
typedef struct $AF03D409A3420F40A78DDCB016A34F67 ThreePointRelArcToParams;
typedef struct $5F469E407E903D0B036CECC5551C42E9 ThreeWordArgs;
typedef WordFlags TimerCompressedDate;
typedef struct $85DC90713BAC87D6BEDA872AD5F87D80 TimerDateAndTime;
typedef struct $84F222A61312224562852E7C8AADEAFF TimerFileDateTime;
typedef Handle TimerHandle;
typedef enum $B673D35522669009ED40C2BBAA348CE6 TimerType;
typedef enum $A6853A487064880F72C2535E53D874C9 TinyTPIndicationOrConfirmation;
typedef struct $7D080AE40D489A0C11ADB04EE956D46A TocCategoryStruct;
typedef struct $DE1BB7DBE37A0D4B2AF035F8086B1071 TocDeviceStruct;
typedef struct $BA80539C52758F402D353C8FCDCC7E1C TocDiskStruct;
typedef struct $85D54BAADFD5DA82BF0406050EFEBA3B TocFileStruct;
typedef struct $1EF790D287C532DB1C384A624125C142 TocItemPath;
typedef struct $164B911748EA204F4EBC6692BB4BCB9C TocMap;
typedef word __pascal TocUpdateAddCallback(const char *filename, optr chunkArray);
typedef WordFlags TocUpdateCategoryFlags;
typedef struct $52D346F47390F49A76A9593484FED2AE TocUpdateCategoryParams;
typedef WordFlags ToggleState;
typedef struct $04D8E74BF8BA4E8A1522F6C26ACA38AE ToggleStateAndScanCode;
typedef dword TokenAsDWord;
typedef char TokenChars[4];
typedef struct $29F408C646C18446C3C5E2323BE7D159 TokenStreamAttrs;
typedef ByteFlags ToneInfo;
typedef struct $BAA8E5DC9E21B9ACFCA5B1D69220F9DF ToneName;
typedef TCHAR ToneTitle[34];
typedef enum $ADC9A944F1FE6DE7FE5938C088503ABD ToneType;
typedef ByteEnum ToolGroupHighlightType;
typedef struct $BBE63DCE1E6A1D5C713C8BC8D93F29E9 ToolGroupInfo;
typedef struct $618C2C8F3AADE31875E6C3FE5B7D661B ToolItemClassAndSpecInitData;
typedef struct $63A683F5F047A64F3E4BD949E3E99A6A ToolboxInfo;
typedef struct $D4D3F2B9786BEF357859B27D143DA036 TrackScrollingParams;
typedef ByteEnum TractorFeed;
typedef enum $D2F139DC058277D374F33882489AB670 TransError;
typedef struct $00E9484DE63F0E7C68B094BF8AA66C9C TransErrorInfo;
typedef struct $5A055027163571AFB04DFC2D997E6E4F TransMatrix;
typedef dword TransferBlockID;
typedef enum $3B7EBAD49AD5A311A61ED5C3DEC7EC6C TravelOption;
typedef struct $8DA594945E0463D20A8F7D04511942AF TravelingObjectReference;
typedef struct $5548A1D1FEFAA4809FADB7F6B1D5A575 TwoWordArgs;
typedef ByteEnum UChar;
typedef ByteFlags UIButtonFlags;
typedef WordFlags UIExpressOptions;
typedef enum $A3A78A9B23B572A589ADDD9A5B47ED7A UIExpressPositions;
typedef ByteFlags UIFunctionsActive;
typedef WordFlags UIHelpOptions;
typedef enum $58017EFC15E097F8A2A4AAE107A67AB2 UIInterfaceLevel;
typedef WordFlags UIInterfaceOptions;
typedef enum $1E975EE268A6A7F02CB8EEFBAAB959A3 UILaunchModel;
typedef WordFlags UILaunchOptions;
typedef ByteFlags UIWindowOptions;
typedef WordFlags UIWindowOptionsInteger;
typedef struct $A87388350C1FEA77FBE5C4E4FAF49351 UndoActionDataFlags;
typedef struct $CB3E4F2EF1D3126858F884988F30CE24 UndoActionDataPtr;
typedef enum $C1B24CAA6544326D69CB1DDF29A53078 UndoActionDataType;
typedef union $4887AAE388C8F0CECB4D9FE840E9471B UndoActionDataUnion;
typedef struct $EB3262F2DF1F20F774835D144C86DDFA UndoActionDataVMChain;
typedef struct $1841D478AFA79BB6F8A96237ED87308C UndoActionStruct;
typedef ByteEnum UndoDescription;
typedef struct $2B6353BB02656F13DB5543B939E61FDD UnknownWordInfo;
typedef enum $8A6E954DDB0D916EB9EEB3AB15E1646F UpdateGraphicReturnValue;
typedef WordFlags UpdateWindowFlags;
typedef struct $63AFC2AAB138900738257A0C503BB70B UserDictionaryListInfo;
typedef struct $049A3BB86B023295D9C78D74728930D7 UserDoDialogStruct;
typedef enum $B005D40A4D99760044A8955F64F45611 UserResult;
typedef enum $08FA84B0CCC446B442C6A6A80D5B4D16 UtilAsciiToHexError;
typedef WordFlags UtilHexToAsciiFlags;
typedef ByteEnum VChar;
typedef ByteFlags VMAccessFlags;
typedef ByteFlags VMAttributes;
typedef word VMBlockHandle;
typedef struct $CAECB507705488EA7911F65268CA64E6 VMBlockHandleAndDims;
typedef dword VMChain;
typedef struct $993D747E86BD123772A377CF4791C4FC VMChainLink;
typedef struct $940501859A33BC4A099022D8F2641058 VMChainTree;
typedef Handle VMFileHandle;
typedef struct $198FEB85B1711614CCD12D554F19B170 VMHeaderInfoStruct;
typedef struct $69F09F31B2CD0EFE47D0EB96C0853C80 VMInfoStruct;
typedef struct $A5AAC7F6984AD5D1417A55A4CA10995B VMLinkAndGrObjRelocation;
typedef ByteEnum VMOpenType;
typedef enum $38043EA795AB2B56EF44A5A5D36268F3 VMOperation;
typedef enum $7278AABDD0E168673A3FECEE013DB48D VMRelocType;
typedef enum $11E19FAFE5FE52C9F8E49313102752D2 VMStartExclusiveReturnValue;
typedef ByteEnum VMStyle;
typedef struct $20806F866C65D1FAEA5A2D0399EFCCE7 VMTreeAppRef;
typedef word VSBlockingMode;
typedef struct $92DE16E88526285D61F711FB91BBF801 VSCOptionsAction;
typedef struct $C901947E7FF97DC986FEAC41DE32F23F VSCReplyInfo;
typedef struct $DC0333D401C9AB3C5EB2C0BB8F4EF301 VSCReplySendMoniker;
typedef word VSFlowControl;
typedef word VSNotifytype;
typedef word VSOpenFlags;
typedef word VSSerialBaud;
typedef word VSSerialFormat;
typedef word VSSerialMode;
typedef struct $4F961EC2BC30C6ED9920C13E6DA3D238 ValueFieldDataAttrs;
typedef struct $A783B51E3CF7457E26B1D9B09E06CE46 VarDataCHandler;
typedef struct $93BAEE1909FAD3E822217542F132843A VarDataEntry;
typedef WordFlags VarDataFlags;
typedef struct $34A041DF33F02DBE364AB45852801DFF VarGeoData;
typedef struct $6B9A07D9AA95F18175F55AF77F419E9C VarObjRelocation;
typedef word VardataKey;
typedef struct $30E359F8B6EA07669ED79D0464951AE1 ViewTargetInfo;
typedef WordFlags ViewerAttributes;
typedef struct $A61F5DA3742C10D8A03966B4F1367566 ViewerChangeDocumentStruct;
typedef enum $F68AD6F442694C0F19CBFD28DFF60AAF ViewerCloseStatus;
typedef WordFlags ViewerControlAttributes;
typedef struct $D4025AD877DE65DA66C05E31C3727164 ViewerControlState;
typedef WordFlags ViewerDialogAttributes;
typedef struct $470515845E180A088BB5B8544C34D524 ViewerDocumentStatus;
typedef enum $E6B61DEEE226FE36C6ECD5FE04B8FF87 ViewerFileType;
typedef enum $D058C97724CBABC7C49D422F15E51ED3 ViewerInterfaceError;
typedef enum $343F1017F7A21EB67653CBDBF253318A ViewerLibraryRoutine;
typedef WordFlags ViewerLoadingMeterFeatures;
typedef struct $10FBEFE212F5BCFF74ABA5B048DE204F ViewerMessageToken;
typedef struct $EDD597C601F8A15C832C89955853101A ViewerParams;
typedef ByteFlags ViewerPrintControlFlags;
typedef struct $4366F146A2CB7AE3795F23111C732742 ViewerTextState;
typedef word VirtualSerialStatus;
typedef ByteFlags VisAddRectFlags;
typedef enum $2D5D17C9E708B66D5927A805E70A264A VisAnalogClockColor;
typedef ByteFlags VisAttrs;
typedef struct $0DFE1579BE92D7216A53B57B6E3C2DA7 VisCallChildrenInBoundsFrame;
typedef enum $6AE0A459E61341E98CA11D4260B51E44 VisClockContinue;
typedef ByteFlags VisClockFlags;
typedef ByteFlags VisCompGeoAttrs;
typedef ByteFlags VisCompGeoDimensionAttrs;
typedef ByteFlags VisContentAttrs;
typedef ByteFlags VisGeoAttrs;
typedef ByteFlags VisInputFlowGrabFlags;
typedef ByteEnum VisInputFlowGrabType;
typedef WordFlags VisLargeTextAttrs;
typedef enum $F960CD7F69E887083606AAB5153FD70E VisLargeTextDisplayModes;
typedef WordFlags VisLargeTextFlags;
typedef struct $A39B934952F7CADDFF5A88FEA9BC280D VisLargeTextGetRegionPosReturnStruct;
typedef struct $09FB5F68A1CE46974DB2094CABC27622 VisLargeTextRegionArrayElement;
typedef WordFlags VisLargeTextRegionFlags;
typedef struct $EE58FD35550BEC93F5601DD6FF9A1CAE VisLargeTextRegionFromPointParams;
typedef struct $9F17843521BD990F32B3AF5A4E650719 VisMoniker;
typedef WordFlags VisMonikerCachedWidth;
typedef struct $68C14E07C3311B5D46BFB92D0E8042E0 VisMonikerColumn;
typedef ByteEnum VisMonikerDataType;
typedef struct $C5E97C042E34F394760DD1501DBE6D9B VisMonikerListEntry;
typedef WordFlags VisMonikerListEntryType;
typedef WordFlags VisMonikerSearchFlags;
typedef ByteEnum VisMonikerSourceType;
typedef ByteFlags VisMonikerType;
typedef struct $BE39F94D367E3E42DF2D27C6A310FA55 VisMonikerWithGString;
typedef struct $10EBD921A383D016896B2D40C9A11431 VisMonikerWithText;
typedef ByteFlags VisOptFlags;
typedef ByteFlags VisRulerAttributes;
typedef WordFlags VisRulerConstrainStrategy;
typedef struct $95F61BF6B9F8DAB5F95917959F54227E VisRulerNotifyGuideChangeBlockHeader;
typedef ByteEnum VisRulerType;
typedef struct $CCB2BB852CF353F5C00A21EFD16B3F97 VisTextCachedRunInfo;
typedef struct $94F8EEFAF5F511FE6E4E9359E6E38432 VisTextCachedUndoInfo;
typedef struct $25A456F983EB4463160D5301428AE419 VisTextChangeElementArrayParams;
typedef struct $C441E497A04D61F2E072EDE0A8C2BAEB VisTextCharAttr;
typedef struct $AEA14A8B1C8F4173CDF01FD092092B45 VisTextCharAttrDiffs;
typedef WordFlags VisTextCharAttrFlags;
typedef ByteEnum VisTextContextType;
typedef struct $08FEE5EF0616D49A32C6FD971819EFD0 VisTextConvertOffsetParams;
typedef struct $2052A567210DA8DF401DDFB54355CA8A VisTextCursorPositionChange;
typedef enum $6AB7212DDAB6BEAA997F6210640B6D76 VisTextCursorType;
typedef struct $673E32E02F42BFC8E60160C033E7A5FF VisTextCustomFilterData;
typedef WordFlags VisTextDefaultCharAttr;
typedef ByteEnum VisTextDefaultDefaultTab;
typedef ByteEnum VisTextDefaultFont;
typedef WordFlags VisTextDefaultParaAttr;
typedef ByteEnum VisTextDefaultSize;
typedef WordFlags VisTextDropCapInfo;
typedef ByteEnum VisTextExtendedFilterType;
typedef WordFlags VisTextExtendedStyles;
typedef WordFlags VisTextFeatures;
typedef ByteEnum VisTextFilterClass;
typedef ByteFlags VisTextFilters;
typedef struct $332BFC7F5C3C8C1D0AC7381B866AF2D2 VisTextFollowHyperLinkParams;
typedef struct $7689BE0FB8DA9EE73E274001339DBDB5 VisTextGenerateNotifyParams;
typedef WordFlags VisTextGetAttrFlags;
typedef struct $1A69BA52770DE7BB25FD05E01FC162A1 VisTextGetFEPBounds;
typedef struct $E38FCAA15F9048B0A65A2722A6AF89F7 VisTextGetHugeArrayReturnStruct;
typedef struct $C5CDF500750E77F22B3F2061281A7F5C VisTextGetLineInfoParameters;
typedef struct $CCB10F3B4977516D47E9DA4652D5D0C6 VisTextGetLineInfoReturnValues;
typedef struct $A660E0D49FDFF12AFEBF18CD143E0BFF VisTextGetLineOffsetAndFlagsParameters;
typedef struct $64D7FE31C69512F443405804EF01389C VisTextGetReturnStruct;
typedef ByteFlags VisTextGetTextRangeFlags;
typedef struct $80D089CCC4F7710B93461BFECF2343CB VisTextGetWashColor;
typedef struct $15C442BD6F19E34AF0B5C8602CE3C92C VisTextGraphic;
typedef union $7A49652B556782299F34899717FD0CAA VisTextGraphicData;
typedef WordFlags VisTextGraphicFlags;
typedef struct $2F91828AC560D4DD29748F3C264E3A1D VisTextGraphicGString;
typedef ByteEnum VisTextGraphicType;
typedef struct $737CBA5D0C01F1844EC44E200A3ED522 VisTextGraphicVariable;
typedef WordFlags VisTextHWRFlags;
typedef WordFlags VisTextHyphenationInfo;
typedef ByteFlags VisTextIntFlags;
typedef ByteFlags VisTextIntSelFlags;
typedef ByteFlags VisTextKeepInfo;
typedef enum $10D7E492D0FBE89D90074FE4DC571B45 VisTextKeyFunction;
typedef struct $613BF5625BB2FC2DCB692B17168ED46B VisTextMaxParaAttr;
typedef struct $82369A7A0E9DCEBF166A5881866CE09E VisTextMinimumDimensionsParameters;
typedef struct $FE986B386BC637CB708C28639CCFEC7F VisTextNameArrayElement;
typedef ByteEnum VisTextNameChangeType;
typedef ByteFlags VisTextNameCommonFlags;
typedef struct $E8D2C52B78D26A49D7EF3330FC893C76 VisTextNameCommonParams;
typedef struct $D8774C0CC7056C729618483C93714D4A VisTextNameData;
typedef ByteEnum VisTextNameType;
typedef WordFlags VisTextNotificationFlags;
typedef struct $C922A68BF4DD4219AF77A0876A08DB2E VisTextNotifyCharAttrChange;
typedef struct $7D3B39403EFE541BE368D966A1B3F610 VisTextNotifyCountChange;
typedef struct $98E487DFBEDF269E864B4776F76FF67E VisTextNotifyHyperlinkabilityChange;
typedef struct $D653AB731626A074471E30C552094E47 VisTextNotifyNameChange;
typedef struct $37079F85E4BE599304DE5B0404E65880 VisTextNotifyParaAttrChange;
typedef struct $02481AE58F90F62F6DCDE1645B2E399A VisTextNotifySelectionChange;
typedef WordFlags VisTextNotifySendFlags;
typedef struct $D8108AF3842E27F91F6D3D5EBFECF5C6 VisTextNotifyTypeChange;
typedef ByteEnum VisTextNumberType;
typedef struct $EE7730B94C2D51AB5CDEDF4F75C92BB9 VisTextParaAttr;
typedef WordFlags VisTextParaAttrAttributes;
typedef WordFlags VisTextParaAttrBorderFlags;
typedef struct $75F73A87B7B5D9636A8A895CBEC1F40A VisTextParaAttrDiffs;
typedef WordFlags VisTextParaAttrFlags;
typedef WordFlags VisTextParaAttrFlags2;
typedef WordFlags VisTextParaBorderFlags;
typedef struct $A0AD14B7EF6451479CBD2E72E98A8BE6 VisTextRange;
typedef WordFlags VisTextRangeContext;
typedef WordFlags VisTextReplaceFlags;
typedef struct $FAF0ABB5DC1614268926501A08257EC2 VisTextReplaceParameters;
typedef WordFlags VisTextSaveDBFlags;
typedef struct $CFF6BCD15D587418B39AAEEA6DD09BCA VisTextSaveStyleSheetParams;
typedef ByteEnum VisTextSaveType;
typedef ByteFlags VisTextSetContextFlags;
typedef WordFlags VisTextShowSelectionFlags;
typedef ByteFlags VisTextStates;
typedef ByteFlags VisTextStorageFlags;
typedef struct $1F4634CCF615AE227DA1B2E01FC00845 VisTextSuspendData;
typedef struct $E854700DEDFB490F9B1E7B638C682545 VisTextType;
typedef WordFlags VisTextTypeDiffs;
typedef WordFlags VisTextUpdateGraphicFlags;
typedef enum $229E643E5E7DA98B885366267C47B572 VisTextVariableType;
typedef struct $4777E2385A2174758B5F95C4B797DA4D VisTextWashColorBlueGreen;
typedef struct $BC90046652976EA6A321DF658EE500A5 VisTextWashColorModeRed;
typedef ByteFlags VisTypeFlags;
typedef ByteFlags VisUpdateImageFlags;
typedef ByteEnum VisUpdateMode;
typedef ByteEnum VisWardMouseEventType;
typedef ByteEnum VisWardToolActiveStatus;
typedef char VolumeName[12];
typedef struct $6E83E2D4B9C343E84B01CEA202A58722 WBFixed;
typedef struct $B0A91D2606B675EEB02554EE3E2F82A6 WWFixed;
typedef dword WWFixedAsDWord;
typedef struct $5F23BCE27B660F3F79234039E18D044A WWFixedCenter;
typedef struct $B6BC7092A32A07BD39CF22F88C42BD81 WholeMeasurementType;
typedef ByteEnum WidthJustification;
typedef ByteEnum WildCard;
typedef ByteEnum WinConstrainType;
typedef enum $E6967276F138CC0C62E8FBC35A6A38DA WinInfoType;
typedef ByteEnum WinInvalFlag;
typedef WordFlags WinPassFlags;
typedef WordFlags WinPosSizeFlags;
typedef ByteEnum WinPositionType;
typedef ByteEnum WinPriority;
typedef struct $36926D06F36342DF90BC6383510B3E9D WinSizeInfoParams;
typedef ByteEnum WinSizeType;
typedef Handle WindowHandle;
typedef struct $AFEE77A2642C4F5E537C2318E6AA3411 WordAndAHalf;
typedef word WordFlags;
typedef struct $11204F56D9E299D12FEC13DFBEB46869 XYOffset;
typedef struct $7DDB94455F0576B25846BB8186845626 XYSize;
typedef dword XYValueAsDWord;
typedef ByteEnum ZoomLevel;
struct _ClassStruct {struct _ClassStruct *Class_superClass;word Class_masterOffset;word Class_methodCount;word Class_instanceSize;word Class_vdRelocTable;word Class_relocTable;ClassFlags Class_flags;byte Class_masterMessages;};
struct _FileEnumCallbackData {FileExtAttrDesc FECD_attrs[1];};
struct _FileEnumParams {FileEnumSearchFlags FEP_searchFlags;FileExtAttrDesc *FEP_returnAttrs;word FEP_returnSize;FileExtAttrDesc *FEP_matchAttrs;word FEP_bufSize;word FEP_skipCount;word (__pascal *FEP_callback)(struct _FileEnumParams *params, FileEnumCallbackData *fecd, word frame);FileExtAttrDesc *FEP_callbackAttrs;dword FEP_cbData1;dword FEP_cbData2;word FEP_headerSize;};
struct _PrintPortInfo {PrinterPortType PPI_type;PortParams PPI_params;};
struct _QuickSortParameters {word (__pascal *QSP_compareCallback)(void *el1, void *el2, word valueForCallback);void (__pascal *QSP_lockCallback)(void *el, word valueForCallback);void (__pascal *QSP_unlockCallback)(void *el, word valueForCallback);word QSP_insertLimit;word QSP_medianLimit;word QSP_nLesser;word QSP_nGreater;};
struct _RangeEnumParams {dword (__pascal *REP_callback)(RangeEnumCallbackParams);Rectangle REP_bounds;word REP_rowFlags;CellFunctionParameters *REP_cfp;word REP_matchFlags;word REP_flagRow;void *REP_locals;};
typedef struct $6B52212B7261CD816C4805B144D2D749 bFTP_RIMGqueryStruct;
typedef struct $94FFC3B488C4ED11960F3F3C9AE35B5D bFTP_RINFqueryStruct;
typedef enum $AE1CA976E960DCD751C4960CE71413AA bFTP_commandType;
typedef struct $F1FF7A97FB07D1C54BCE9061868014A7 bFTP_rspStruct;
typedef unsigned __int8 byte;
typedef struct $69B62588CC25CB7767350DB9F5F34ADF complex;
typedef unsigned __int32 dword;
typedef ByteEnum ffDrawFlags;
typedef Handle hptr;
struct image_info {word width;word height;};
typedef dword optr;
typedef int ptrdiff_t;
typedef signed __int8 sbyte;
typedef __int32 sdword;
typedef unsigned int size_t;
typedef signed __int16 sword;
typedef byte szTime[15];
typedef byte szWhat[4];
struct tagOBEXRequestInfo {OBEXRequest ORI_request;PathName ORI_currentPath;dword ORI_bodyLen;PathName ORI_bodyFile;word ORI_headerLen;byte ORI_headers[];};
typedef void *va_list;
typedef unsigned int wchar;
typedef unsigned __int16 wchar_t;
typedef wchar_t wint_t;
typedef unsigned __int16 word;

MACRO_AAF AAF_DATA_FILE_PASSED;
MACRO_AAF AAF_RESTORING_FROM_QUIT;
MACRO_AAF AAF_RESTORING_FROM_STATE;
MACRO_AAF AAF_STATE_FILE_PASSED;
MACRO_DATABASE ABSOLUTE_COLUMN_NUMBER;
void ACCESSPOINTCOMMIT(void);
Boolean __pascal ACCESSPOINTCOMPARESTANDARDPROPERTY(AccessPointStandardProperty prop, char *str);
word __pascal ACCESSPOINTCREATEENTRY(word loc, AccessPointType apt);
Boolean __pascal ACCESSPOINTDESTROYENTRY(word id);
Boolean __pascal ACCESSPOINTDESTROYPROPERTY(word id, char *prop);
ChunkHandle __pascal ACCESSPOINTGETENTRIES(MemHandle mh, ChunkHandle chunk, AccessPointType apt);
Boolean __pascal ACCESSPOINTGETINTEGERPROPERTY(word id, char *prop, int *val);
Boolean __pascal ACCESSPOINTGETSTRINGPROPERTYBLOCK(word id, char *prop, MemHandle *data, int *datalen);
Boolean __pascal ACCESSPOINTGETSTRINGPROPERTYBUFFER(word id, char *prop, char *buf, int *datalen);
AccessPointType __pascal ACCESSPOINTGETTYPE(word id);
Boolean __pascal ACCESSPOINTINUSE(word id);
Boolean __pascal ACCESSPOINTISENTRYVALID(word id);
void __pascal ACCESSPOINTLOCK(word id);
Boolean __pascal ACCESSPOINTSETINTEGERPROPERTY(word id, char *prop, int val);
Boolean __pascal ACCESSPOINTSETSTRINGPROPERTY(word id, char *prop, char *val);
void __pascal ACCESSPOINTUNLOCK(word id);
MACRO_ACCESS ACCESS_POINT_INVALID_ID;
MACRO_ACF ACF_NOTIFY;
double __pascal ACOS(double x);
double __pascal ACOSH(double x);
$9690D7F9A3B2DBA2A698E7A1CD989105 ACT_CHORD;
$9690D7F9A3B2DBA2A698E7A1CD989105 ACT_OPEN;
$9690D7F9A3B2DBA2A698E7A1CD989105 ACT_PIE;
MACRO_AC AC_APPLETALK;
MACRO_AC AC_NO_APPLETALK;
MACRO_ADDED ADDED;
MACRO_WAKE ADD_TO_HOTLIST;
MACRO_AIRDN AIRDN_DRIVE;
MACRO_ALF ALF_DESK_ACCESSORY;
MACRO_ALF ALF_DO_NOT_OPEN_ON_TOP;
MACRO_ALF ALF_LAUNCHED_FOR_PRINTING_ONLY;
MACRO_ALF ALF_OPEN_IN_BACK;
MACRO_ALF ALF_OVERRIDE_MULTIPLE_INSTANCE;
MACRO_ALF ALF_SEND_LAUNCH_REQUEST_TO_UI_TO_HANDLE;
MACRO_AMT AMT_DEFAULT;
MACRO_AMT AMT_METRIC;
MACRO_AMT AMT_US;
$01F44BEA79F082D37C99694DFC72E671 ANT_days;
$01F44BEA79F082D37C99694DFC72E671 ANT_hours;
$01F44BEA79F082D37C99694DFC72E671 ANT_minutes;
MACRO_ANY ANY_DATE;
MACRO_ANY ANY_DAY;
MACRO_ANY_HOUR ANY_HOUR;
MACRO_ANY_MINUTE ANY_MINUTE;
MACRO_ANY ANY_MONTH;
MACRO_ANY ANY_YEAR;
MACRO_AOF AOF_MULTIPLE_INIT_FILE_CATEGORIES;
MACRO_APCF APCF_EDIT;
MACRO_APCF APCF_LIST;
MACRO_APT APCF_TWOLEVEL;
$12D4049AB8CC802BC34A3C59C1E21CE9 APCT_CREATE;
$12D4049AB8CC802BC34A3C59C1E21CE9 APCT_DESTROY;
$12D4049AB8CC802BC34A3C59C1E21CE9 APCT_LOCK;
$12D4049AB8CC802BC34A3C59C1E21CE9 APCT_MULTI_DESTROY;
$12D4049AB8CC802BC34A3C59C1E21CE9 APCT_PROPERTY;
$EACFA24C9136175F70D3AFF09A4916AA APPLICATION;
$024F63C271895CCC9BDF51CB64E24882 APSP_ADDRESS;
$024F63C271895CCC9BDF51CB64E24882 APSP_AUTOMATIC;
$024F63C271895CCC9BDF51CB64E24882 APSP_BS;
$024F63C271895CCC9BDF51CB64E24882 APSP_CCARD_ACCESS;
$024F63C271895CCC9BDF51CB64E24882 APSP_CCARD_ID;
$024F63C271895CCC9BDF51CB64E24882 APSP_CCARD_NAME;
$024F63C271895CCC9BDF51CB64E24882 APSP_CCARD_PREFIX;
$024F63C271895CCC9BDF51CB64E24882 APSP_CCARD_SEQUENCE;
$024F63C271895CCC9BDF51CB64E24882 APSP_COMPRESSION;
$024F63C271895CCC9BDF51CB64E24882 APSP_DATA_BITS;
$024F63C271895CCC9BDF51CB64E24882 APSP_DNS1;
$024F63C271895CCC9BDF51CB64E24882 APSP_DNS2;
$024F63C271895CCC9BDF51CB64E24882 APSP_DUPLEX;
$024F63C271895CCC9BDF51CB64E24882 APSP_GATEWAY;
$024F63C271895CCC9BDF51CB64E24882 APSP_HOSTNAME;
$024F63C271895CCC9BDF51CB64E24882 APSP_INTERNET_ACCPNT;
$024F63C271895CCC9BDF51CB64E24882 APSP_LINE_END;
$024F63C271895CCC9BDF51CB64E24882 APSP_LOGIN_APP_NAME;
$024F63C271895CCC9BDF51CB64E24882 APSP_MASK;
$024F63C271895CCC9BDF51CB64E24882 APSP_MODEM_INIT;
$024F63C271895CCC9BDF51CB64E24882 APSP_NAME;
$024F63C271895CCC9BDF51CB64E24882 APSP_PARITY;
$024F63C271895CCC9BDF51CB64E24882 APSP_PHONE;
$024F63C271895CCC9BDF51CB64E24882 APSP_PROMPT_SECRET;
$024F63C271895CCC9BDF51CB64E24882 APSP_SCRIPT_NAME;
$024F63C271895CCC9BDF51CB64E24882 APSP_SECRET;
$024F63C271895CCC9BDF51CB64E24882 APSP_STOP_BITS;
$024F63C271895CCC9BDF51CB64E24882 APSP_UNDEFINED;
$024F63C271895CCC9BDF51CB64E24882 APSP_USER;
$024F63C271895CCC9BDF51CB64E24882 APSP_USE_LOGIN_APP;
MACRO_APT APT_ALL;
$A566544E3B975189101F97C7D8B73C09 APT_APP_LOCAL;
$A566544E3B975189101F97C7D8B73C09 APT_CALLING_CARD;
$A566544E3B975189101F97C7D8B73C09 APT_INTERNET;
$A566544E3B975189101F97C7D8B73C09 APT_REMOTE_MAILBOX;
$A566544E3B975189101F97C7D8B73C09 APT_TELNET;
$A566544E3B975189101F97C7D8B73C09 APT_TERMINAL;
$235521FC40E014AF22FE323CEE1019FC APVT_INTEGER;
$235521FC40E014AF22FE323CEE1019FC APVT_STRING;
$235521FC40E014AF22FE323CEE1019FC APVT_UNDEFINED;
void __pascal ARRAYQUICKSORT(void *array, word count, word elementSize, word valueForCallback, QuickSortParameters *parameters);
MACRO_ASF ASF_NO_TRAY;
MACRO_ASF ASF_TRAY1;
MACRO_ASF ASF_TRAY2;
MACRO_ASF ASF_TRAY3;
MACRO_ASF ASF_TRAY4;
MACRO_ASF ASF_TRAY5;
MACRO_ASF ASF_TRAY6;
MACRO_ASF ASF_TRAY7;
double __pascal ASIN(double x);
double __pascal ASINH(double x);
MACRO_ASST ASST_NOTHING_ACTIVE;
MACRO_ASST ASST_OFFSET;
MACRO_ASST ASST_SEARCH_ACTIVE;
MACRO_ASST ASST_SPELL_ACTIVE;
MACRO_AS AS_ATTACHED_TO_STATE_FILE;
MACRO_AS AS_ATTACHING;
MACRO_AS AS_AVOID_TRANSPARENT_DETACH;
MACRO_AS AS_DETACHING;
MACRO_AS AS_FOCUSABLE;
MACRO_AS AS_HAS_FULL_SCREEN_EXCL;
MACRO_AS AS_MODELABLE;
MACRO_AS AS_NOT_USER_INTERACTABLE;
MACRO_AS AS_QUITTING;
MACRO_AS AS_QUIT_DETACHING;
MACRO_AS AS_REAL_DETACHING;
MACRO_AS AS_RECEIVED_APP_OBJECT_DETACH;
MACRO_AS AS_SINGLE_INSTANCE;
MACRO_AS AS_TRANSPARENT;
MACRO_AS AS_TRANSPARENT_DETACHING;
MACRO_ATAF ATAF_GUARDIAN;
MACRO_ATAF ATAF_SHAPE;
MACRO_ATAF ATAF_STANDARD_POINTER;
double __pascal ATAN(double x);
double __pascal ATANH(double x);
MACRO_ATGT ATGT_BOTTOM;
MACRO_ATGT ATGT_H_CENTER;
MACRO_ATGT ATGT_LEFT;
MACRO_ATGT ATGT_RIGHT;
MACRO_ATGT ATGT_TOP;
MACRO_ATGT ATGT_V_CENTER;
double __pascal ATOF(const char *);
int __pascal ATOI(const TCHAR *s);
MACRO_CTBH AT_ALIGN_X;
MACRO_AT_ALIGN AT_ALIGN_Y;
MACRO_AT_NONE AT_CREATE_MODE_MOUSE_UP;
MACRO_AT AT_DISTRIBUTE_X;
MACRO_AT_ALIGN AT_DISTRIBUTE_Y;
MACRO_AT_NORMAL AT_ENTIRE_RANGE;
MACRO_AT_NONE AT_MOVE_ANCHOR;
MACRO_AT_NONE AT_MOVE_CONTROL;
MACRO_AT_NONE AT_MOVE_RECTANGLE;
MACRO_AT_NONE AT_MOVE_SEGMENT;
MACRO_AT_NONE AT_NONE;
MACRO_AT_NORMAL AT_NORMAL;
MACRO_AT_NORMAL AT_NO_ADJUST;
MACRO_AT_NORMAL AT_PASTE;
MACRO_AT_NORMAL AT_QUICK;
MACRO_AT_NONE AT_SELECT_ANCHOR;
MACRO_AT_NONE AT_SELECT_CONTROL;
MACRO_AT_NONE AT_SELECT_NOTHING;
MACRO_AT_NONE AT_SELECT_SEGMENT;
MACRO_AUAF AUAF_NOTIFY_BEFORE_FREEING;
MACRO_AUAF AUAF_NOTIFY_IF_FREED_WITHOUT_BEING_PLAYED_BACK;
MACRO_WAKE AUTO_FETCHING;
MACRO_A A_BIT_EXTRA_TO_LOOK_NICE;
MACRO_ManualFeed AutoSheetFeed;
MACRO_AutoSheetFeed AutoSheetFeed_OFFSET;
MACRO_HC_DEFAULT BCC_DEFAULT_FEATURES;
MACRO_BCC BCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_BCF BCF_CUSTOM;
MACRO_BCF BCF_LIST;
MACRO_BC BC_DEFAULT_FEATURES;
MACRO_BC BC_DEFAULT_TOOLBOX_FEATURES;
MACRO_PID BFTP_ERROR_PDU_LENGTH;
MACRO_BGBPAS BGBPAS_ACTIVE;
MACRO_BGBPAS BGBPAS_INACTIVE;
MACRO_BGF BGF_POINTER_ACTIVE;
MACRO_BGF BGF_REAL_ESTATE_RESIZE;
MACRO_BI BI_B0_DOWN;
MACRO_BI BI_B1_DOWN;
MACRO_BI BI_B2_DOWN;
MACRO_BI BI_B3_DOWN;
MACRO_BI BI_BUTTON;
MACRO_BI BI_DOUBLE_PRESS;
MACRO_BI BI_PRESS;
MACRO_BLACK BLACK_WHITE_WIDTH;
MACRO_BLACK BLACK_WIDTH;
void __pascal BLEND(BlendParams *params);
MACRO_BLOCK BLOCK_GRABBED;
$50B771B6C300768B58A02FD5AF92119A BLTM_CLEAR;
$50B771B6C300768B58A02FD5AF92119A BLTM_COPY;
$50B771B6C300768B58A02FD5AF92119A BLTM_MOVE;
MACRO_BMC BMC_PACKBITS;
MACRO_BMC BMC_UNCOMPACTED;
MACRO_BMC BMC_USER_DEFINED;
MACRO_BMD BMD_KILL_DATA;
MACRO_BMD BMD_LEAVE_DATA;
MACRO_BMF BMF_24BIT;
MACRO_BMF BMF_3CMY;
MACRO_BMF BMF_4BIT;
MACRO_BMF BMF_4CMYK;
MACRO_BMF BMF_8BIT;
MACRO_BMF BMF_MONO;
MACRO_BMFormat BMFormat_OFFSET;
MACRO_BMT BMT_COMPLEX;
MACRO_BMT BMT_FORMAT;
MACRO_BMT BMT_HUGE;
MACRO_BMT BMT_MASK;
MACRO_BMF BMT_PALETTE;
MACRO_BM BM_CLUSTERED_DITHER;
MACRO_BMD BM_EDIT_MASK;
MACRO_BOOKING BOOKING_PWD_LENGTH;
MACRO_BOTTOM BOTTOM_MARGIN;
$1651765A2570BC8317D3D64C515A5ADF BRPT_OUTPUT_OPTR;
MACRO_BRP BRP_DUMMY_OPTR_START;
void *__pascal BSEARCH(const void *key, const void *array, word count, word elementSize, int (__pascal *compare)(const void *, const void *));
MACRO_BUTTON BUTTON_0;
MACRO_BUTTON BUTTON_1;
MACRO_BUTTON BUTTON_2;
MACRO_BUTTON BUTTON_3;
double __pascal CABS(complex c);
MACRO_CAIT CAIT_DAYS;
MACRO_CAIT CAIT_HOURS;
MACRO_CAIT CAIT_MINUTES;
MACRO_CERI_TYPE CALENDAR_MAX_EVENT_TEXT_LENGTH;
MACRO_CERI_TYPE CALENDAR_MAX_RESERVE_WHOLE_DAYS;
$9A4063B5AAC2F8A7CC91E0E1CB1C26A2 CALLBACK_GET_DEST_DISK;
$9A4063B5AAC2F8A7CC91E0E1CB1C26A2 CALLBACK_GET_SOURCE_DISK;
$9A4063B5AAC2F8A7CC91E0E1CB1C26A2 CALLBACK_REPORT_COPY_PCT;
$9A4063B5AAC2F8A7CC91E0E1CB1C26A2 CALLBACK_REPORT_FORMAT_PCT;
$9A4063B5AAC2F8A7CC91E0E1CB1C26A2 CALLBACK_REPORT_NUM_SWAPS;
$9A4063B5AAC2F8A7CC91E0E1CB1C26A2 CALLBACK_VERIFY_DEST_DESTRUCTION;
MACRO_CERI_TYPE CAL_NO_DATE;
MACRO_CAL CAL_NO_TIME;
MACRO_CAS CAS_HAS_ALARM;
MACRO_CAS_INTERVAL CAS_INTERVAL;
MACRO_CAS_INTERVAL CAS_INTERVAL_OFFSET;
MACRO_CAIT CAS_TYPE;
MACRO_CAS CAS_TYPE_OFFSET;
MACRO_CA CA_NULL_ELEMENT;
MACRO_CBF CBF_CLEAR_ALL_BUTTON;
MACRO_CBF CBF_OPTIONS_LIST;
MACRO_CBF CBF_STATUS_BUTTON;
MACRO_CFGCC_DEFAULT CBGCC_DEFAULT_FEATURES;
MACRO_CBGCC CBGCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_CBI CBI_BOTTOM;
MACRO_CBI CBI_LEFT;
MACRO_MAX_GSTATE CBI_OUTLINE;
MACRO_CBI CBI_RIGHT;
MACRO_CBI CBI_TOP;
MACRO_CB_DEFAULT CB_DEFAULT_FEATURES;
MACRO_MINIMUM CB_LEFT;
MACRO_CB CB_RIGHT;
MACRO_CCM CCF_DIRTY;
MACRO_LP CCF_MARK_DIRTY;
MACRO_CCF_MODE CCF_MODE;
MACRO_CCF_MODE_OFFSET CCF_MODE_OFFSET;
MACRO_CCF CCF_REFERENCE;
MACRO_CCF_REFERENCE CCF_REFERENCE_OFFSET;
MACRO_CCF_MODE CCF_SIZE;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_DOS_DEVICE_NAME_CONFLICT;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_ILLEGAL_DOS_DIR_PATH;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_ILLEGAL_DOS_DRIVE_NAME;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_ILLEGAL_DOS_FILE_NAME;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_ILLEGAL_DOS_FILE_PATH;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_LEGAL;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_ONE_LETTER_DRIVE_NAME;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_STRING_NULL;
$B358D6C4BE2811C5B9829738348A0FD5 CCLE_STRING_TOO_LONG;
MACRO_CCM CCM_FPTR;
MACRO_CCM CCM_HPTR;
MACRO_CCM CCM_OPTR;
MACRO_CCM CCM_STRING;
MACRO_CCO CCO_FIRST;
MACRO_CCO CCO_LAST;
MACRO_CCS CCS_CONNECTION_OPEN;
MACRO_CCS CCS_VIRTUAL_SERIAL_PORT_RESERVED;
MACRO_CCT CCT_ANY;
MACRO_CCT CCT_EMAIL;
MACRO_CCT CCT_FAX;
MACRO_CCT CCT_GSM_FAX;
MACRO_CCT CCT_GSM_FAX_ONLY;
MACRO_CCT CCT_PCN_FAX_ONLY;
MACRO_CCT CCT_PCN_SMS_ONLY;
MACRO_CCT CCT_PHONE;
MACRO_CCT CCT_SMS;
MACRO_CCT CCT_SMS_ONLY;
MACRO_CC_NO_CENTRONICS CC_CENTRONICS;
MACRO_CC_NO CC_CUSTOM;
MACRO_CC CC_DIFFER;
MACRO_CC CC_INVERSE;
MACRO_CC CC_LAST;
MACRO_CC_NO_CENTRONICS CC_NO_CENTRONICS;
MACRO_CC_NO CC_NO_CUSTOM;
MACRO_CC CC_PLUS_MINUS;
MACRO_CC CC_RCL;
MACRO_CC CC_SQRT;
MACRO_CC CC_STACK;
MACRO_CC CC_STO;
MACRO_CDBF_DESTRUCTIVE CDBF_DESTRUCTIVE_ACTION;
MACRO_CDBF CDBF_DIALOG_TYPE;
MACRO_CDBF_DIALOG CDBF_DIALOG_TYPE_OFFSET;
MACRO_CDBF_INTERACTION CDBF_INTERACTION_TYPE;
MACRO_CDBF_INTERACTION_TYPE CDBF_INTERACTION_TYPE_OFFSET;
MACRO_CDT CDBF_SYSTEM_MODAL;
MACRO_CDF CDF_CLEAR_ALL_BUTTON;
MACRO_CDF CDF_DIVERT_BUSY_TO_VBM;
MACRO_CDF CDF_DIVERT_NOT_REACHABLE_TO_VBM;
MACRO_CDF CDF_DIVERT_NO_REPLY_TO_VBM;
MACRO_CDF CDF_DIVERT_UNCOND_TO_VBM;
MACRO_CDF CDF_OPTIONS_LIST;
MACRO_CDF CDF_STATUS_BUTTON;
MACRO_CDT CDT_ERROR;
MACRO_CDT CDT_NOTIFICATION;
MACRO_CDT CDT_QUESTION;
MACRO_CDT CDT_WARNING;
MACRO_CD CD_DEFAULT_FEATURES;
MACRO_CEDT CEDT_GEOS_TEXT;
MACRO_CEDT CEDT_INK;
MACRO_CEDT CEDT_UNICODE;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_ACCESS_DENIED;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_EVENT_NOT_FOUND;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_EVENT_NOT_SUPPORTED;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_EVENT_TEXT_TOO_LONG;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_GENERAL_ERROR;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INTERNAL_ERROR;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_ALARM;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_DATE;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_EVENT_TYPE;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_RESERVE_WHOLE_DAY;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_TIME;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_TIME_RANGE;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_INVALID_TODO_ITEM_STATUS;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_MISSING_END_TIME_WHEN_START_TIME_AND_END_DATE_ARE_SET;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_NORMAL;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_NOT_ENOUGH_DISKSPACE;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_NOT_ENOUGH_MEMORY;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_START_DATE_LATER_THAN_END_DATE;
$0EB038596E727EDC9B4CC1FCB327D8F9 CEE_START_TIME_LATER_THAN_END_TIME;
MACRO_CL CEF_ATTACH_IMAGE;
MACRO_CEF CEF_FIELDS;
MACRO_CEF CEF_MARK_SECRET;
MACRO_CEF CEF_MENU;
MACRO_CEF CEF_SAVE;
MACRO_CEF CEF_SPECIAL_RINGING_TONE;
MACRO_CEF CEF_SPEED_DIAL;
DBGroupAndItem __pascal CELLGETDBITEM(CellFunctionParameters *cfp, word row, byte column);
void __pascal CELLGETEXTENT(CellFunctionParameters *cfp, RangeEnumParams *rep);
void *__pascal CELLLOCK(CellFunctionParameters *cfp, word row, word column);
void *__pascal CELLLOCKGETREF(CellFunctionParameters *cfp, word row, word column, optr *ref);
void __pascal CELLREPLACE(CellFunctionParameters *cfp, word row, word column, const void *cellData, word size);
MACRO_CELL CELL_GOTO_MAX_TEXT;
MACRO_CELL_MAX CELL_MAX_FORMULA;
MACRO_CELL CELL_MAX_TEXT;
MACRO_CERD CERD_FOREVER;
MACRO_CERD CERD_LENGTH;
MACRO_CERD CERD_UNTIL;
MACRO_CERIT CERIT_DAILY;
MACRO_CERIT CERIT_MONTHLY_DATE;
MACRO_CERIT CERIT_MONTHLY_WEEKDAY;
MACRO_CERIT CERIT_WEEKLY;
MACRO_CERIT CERIT_YEARLY_DATE;
MACRO_CERIT CERIT_YEARLY_WEEKDAY;
MACRO_CERI CERI_COUNT;
MACRO_CERI_COUNT CERI_COUNT_OFFSET;
MACRO_CERI_COUNT CERI_DAY;
MACRO_CERI_DAY CERI_DAY_OFFSET;
MACRO_CERI_DAY CERI_TYPE;
MACRO_CERI_TYPE CERI_TYPE_OFFSET;
MACRO_CERIT CERI_WEEK;
MACRO_CERI CERI_WEEK_OFFSET;
MACRO_CERLUT CERLUT_DAY;
MACRO_CERLUT CERLUT_MONTH;
MACRO_CERLUT CERLUT_WEEK;
MACRO_CERLUT CERLUT_YEAR;
MACRO_CERLUT CERL_COUNT;
MACRO_CERL CERL_COUNT_OFFSET;
MACRO_CERL CERL_UNIT;
MACRO_CERL_UNIT CERL_UNIT_OFFSET;
$BCAE249C3B13548462F7FA00AA7C4C0E CERT_NONE;
$BCAE249C3B13548462F7FA00AA7C4C0E CERT_SPECIAL_TONE;
MACRO_CERV CERV_CONTINUE_ENUM;
MACRO_CERV CERV_ERROR;
MACRO_CERV CERV_STOP_ENUM;
MACRO_CERW CERW_FRIDAY;
MACRO_CERW CERW_MONDAY;
MACRO_CERW CERW_SATURDAY;
MACRO_CERW CERW_SUNDAY;
MACRO_CERW CERW_THURSDAY;
MACRO_CERW CERW_TUESDAY;
MACRO_CERW CERW_WEDNESDAY;
$0633B8B1410C624C9CFD803678556C83 CESS_NOT_SECRET;
$0633B8B1410C624C9CFD803678556C83 CESS_SECRET;
$AF1C3ED82EC9AF2D9DAD3F527610BFCA CES_FILE_ERROR;
$AF1C3ED82EC9AF2D9DAD3F527610BFCA CES_MMC_REMOVED_ERROR;
$AF1C3ED82EC9AF2D9DAD3F527610BFCA CES_NO_ERROR;
$C8CB681D50B69D5DA558C28572974D07 CE_ACCESS_DENIED;
MACRO_CE_NO CE_ARG_COUNT;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_CLOSE_CONNECTION;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_CONTACT_SERVER;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_CREATE_DIRECTORY;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_GET_SERVER_PATH;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_SET_SERVER_PATH;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_START_CLIENT_SIDE_CONNECTION;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_TRANSLATE_FILE;
$C8CB681D50B69D5DA558C28572974D07 CE_CANNOT_USE_INSTALL_BATCH_FILE_FOR_MORE_THAN_ONE_INSTALL;
MACRO_CE_NO CE_CIRCULAR_REF;
MACRO_CE_NO CE_CIRC_DEPEND;
MACRO_CE_NO CE_CIRC_NAME_REF;
$C8CB681D50B69D5DA558C28572974D07 CE_CONNECTION_LOST;
$C8CB681D50B69D5DA558C28572974D07 CE_CONNECTION_MEDIUM_IN_USE;
$C8CB681D50B69D5DA558C28572974D07 CE_COULD_NOT_PREPARE_FOR_TRANSFER;
MACRO_CE_DEFAULT CE_DEFAULT_FEATURES;
$C8CB681D50B69D5DA558C28572974D07 CE_DEST_DIRECTORY_DOES_NOT_EXIST;
$C8CB681D50B69D5DA558C28572974D07 CE_DEST_FILE_OPEN_BY_ANOTHER_APP;
MACRO_CE CE_DIALOG_DISPLAYED;
MACRO_CE_NO CE_DIVIDE_BY_ZERO;
$C8CB681D50B69D5DA558C28572974D07 CE_DRIVE_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_FILE_NAME_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_FILE_NOT_FOUND;
$C8CB681D50B69D5DA558C28572974D07 CE_FILE_OPEN_BY_ANOTHER_APP;
$C8CB681D50B69D5DA558C28572974D07 CE_FILE_PROTOCOL_TOO_LOW;
$C8CB681D50B69D5DA558C28572974D07 CE_FILE_READ_ONLY;
$C8CB681D50B69D5DA558C28572974D07 CE_FILE_TRANSFER_OPERATION_ALREADY_IN_PROGRESS;
MACRO_CE_NO CE_FLOAT_GEN_ERR;
MACRO_CE_NO CE_FLOAT_NEG_INF;
MACRO_CE_NO CE_FLOAT_POS_INF;
MACRO_CE_NO CE_GEN_ERR;
$C8CB681D50B69D5DA558C28572974D07 CE_MISC_FILE_ERROR;
$C8CB681D50B69D5DA558C28572974D07 CE_MMC_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE;
MACRO_CE_NO CE_NA;
MACRO_CE_NO CE_NAME;
$C8CB681D50B69D5DA558C28572974D07 CE_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE;
$C8CB681D50B69D5DA558C28572974D07 CE_NOT_ENOUGH_DISK_SPACE_TO_START;
$C8CB681D50B69D5DA558C28572974D07 CE_NOT_ENOUGH_MEMORY;
MACRO_CE_NO CE_NO_ERROR;
$C8CB681D50B69D5DA558C28572974D07 CE_NO_PACKAGES_FOUND;
MACRO_CE_NO CE_NUM_OUT_OF_RANGE;
$C8CB681D50B69D5DA558C28572974D07 CE_OPERATION_ABORTED;
$C8CB681D50B69D5DA558C28572974D07 CE_OPERATION_FAILED;
$C8CB681D50B69D5DA558C28572974D07 CE_OVERWRITE_CANCELLED;
$C8CB681D50B69D5DA558C28572974D07 CE_PACKAGE_FILE_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_PACKAGE_INSTALLED_BUT_MUST_REBOOT_TO_USE;
$C8CB681D50B69D5DA558C28572974D07 CE_PACKAGE_NOT_COMPATIBLE;
$C8CB681D50B69D5DA558C28572974D07 CE_PACKAGE_OLD_SO_NOT_INSTALLED;
$C8CB681D50B69D5DA558C28572974D07 CE_PATH_NAME_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_PATH_NOT_FOUND;
MACRO_CE_NO CE_REF_OUT_OF_RANGE;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_ACCESS_DENIED;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_DRIVE_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_FILE_NAME_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_FILE_NOT_FOUND;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_FILE_OPEN_BY_ANOTHER_APP;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_FILE_READ_ONLY;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_OPERATION_ABORTED;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_PATH_NAME_INVALID;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_PATH_NOT_FOUND;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_SHORT_READ_WRITE;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_USER_CANCELED;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_VOLUME_UNAVAILABLE;
$C8CB681D50B69D5DA558C28572974D07 CE_REMOTE_VOLUME_WRITE_PROTECTED;
$C8CB681D50B69D5DA558C28572974D07 CE_SHORT_READ_WRITE;
$C8CB681D50B69D5DA558C28572974D07 CE_SOURCE_FILE_OPEN_BY_ANOTHER_APP;
$C8CB681D50B69D5DA558C28572974D07 CE_SUCCESS;
MACRO_CE_NO CE_TOO_COMPLEX;
MACRO_CE_NO CE_TYPE;
$C8CB681D50B69D5DA558C28572974D07 CE_UNABLE_TO_LOAD_TRANSFER_DRIVER;
$C8CB681D50B69D5DA558C28572974D07 CE_USER_CANCELED;
$C8CB681D50B69D5DA558C28572974D07 CE_VOLUME_UNAVAILABLE;
$C8CB681D50B69D5DA558C28572974D07 CE_VOLUME_WRITE_PROTECTED;
void __pascal CFATALERROR(word code);
MACRO_CFF CFF_LEADING_ZERO;
MACRO_CFF CFF_NEGATIVE_SIGN_BEFORE_NUMBER;
MACRO_CFF CFF_NEGATIVE_SIGN_BEFORE_SYMBOL;
MACRO_CFF CFF_SPACE_AROUND_SYMBOL;
MACRO_CFF CFF_SYMBOL_BEFORE_NUMBER;
MACRO_CFF CFF_USE_NEGATIVE_SIGN;
MACRO_CFGCC CFGCC_DEFAULT_FEATURES;
MACRO_CFGCC_DEFAULT CFGCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_CFPF CFPF_DIRTY;
MACRO_CFPF CFPF_NO_FREE_COUNT;
MACRO_CFT CFT_ADDRESS;
MACRO_CFT CFT_CALLER_GROUP;
MACRO_CFT CFT_COMPANY;
MACRO_CFT CFT_DTMF;
MACRO_CFT CFT_EMAIL;
MACRO_CFT CFT_FAX;
MACRO_CFT CFT_GROUP_LINK;
MACRO_CFT CFT_IMAGE;
MACRO_CFT CFT_IS_GROUP;
MACRO_CFT CFT_NAME;
MACRO_CFT CFT_NOTES;
MACRO_CFT CFT_PASSWORD;
MACRO_CFT CFT_PHONE;
MACRO_CFT CFT_TEL_DATA;
MACRO_CFT CFT_TEL_FAX;
MACRO_CFT CFT_TITLE;
MACRO_CFT CFT_TONE;
MACRO_CFT CFT_URL;
MACRO_CF CF_CMY;
MACRO_CF_EXTENDED CF_EXTENDED;
MACRO_CF_EXTENDED CF_FIRST_PRESS;
MACRO_CF CF_GRAY;
MACRO_CF CF_INDEX;
MACRO_CF_EXTENDED CF_RELEASE;
MACRO_CF_EXTENDED CF_REPEAT_PRESS;
MACRO_CF CF_RGB;
MACRO_CF CF_SAME;
MACRO_CF_EXTENDED CF_STATE_KEY;
MACRO_CF_EXTENDED CF_TEMP_ACCENT;
MACRO_CGSS CGSS_GET_DEST_FILE_EXISTS;
MACRO_CGSS CGSS_GET_IN_PROGRESS;
MACRO_CGSS CGSS_GET_MOVE_TEMP_TO_DEST;
MACRO_CGSS CGSS_GET_NEED_TRANSLATION;
MACRO_CGSS CGSS_GET_TRANSFER_INTO_TEMP;
MACRO_CGSS CGSS_SEND_IN_PROGRESS;
MACRO_CGSS CGSS_SEND_REMOVE_TEMP_FILE;
MACRO_CGSS CGSS_USER_CANCELED;
MACRO_CGSS CGSS_USING_TRANSFER_DRIVER;
MACRO_ADDED CHANGED;
MACRO_NAME2 CHART_ROW;
MACRO_CHAR CHAR_ENTER;
MACRO_CHAR_TAB CHAR_TAB;
MACRO_CHAR2 CHAR_TABLE_SPACE_FILLER_CHAR;
void *__pascal CHUNKARRAYAPPEND(optr arr, word elementSize);
ChunkHandle __pascal CHUNKARRAYCREATEAT(optr arr, word elementSize, word headerSize, ObjChunkFlags ocf);
void __pascal CHUNKARRAYDELETE(optr arr, void *element);
void __pascal CHUNKARRAYDELETERANGE(optr arr, word firstElement, word count);
void __pascal CHUNKARRAYELEMENTRESIZE(optr arr, word element, word newSize);
void *__pascal CHUNKARRAYELEMENTTOPTR(optr arr, word elementNumber, word *elementSize);
Boolean __pascal CHUNKARRAYENUM(optr arr, void *enumData, Boolean (__pascal *callback)(void *element, void *enumData));
Boolean __pascal CHUNKARRAYENUMRANGE(optr array, word startElement, word count, void *enumData, Boolean (__pascal *callback)(void *element, void *enumData));
word __pascal CHUNKARRAYGETCOUNT(optr arr);
void __pascal CHUNKARRAYGETELEMENT(optr arr, word elementNumber, void *buffer);
void *__pascal CHUNKARRAYINSERTAT(optr arr, void *insertPointer, word elementSize);
word __pascal CHUNKARRAYPTRTOELEMENT(optr arr, void *element);
void __pascal CHUNKARRAYSORT(optr arr, word valueForCallback, sword (__pascal *callback)(void *el1, void *el2, word valueForCallback));
void __pascal CHUNKARRAYZERO(optr arr);
$563FFC33E79BD20782967DF25DDFA75D CIFT_INVALID_ID;
$563FFC33E79BD20782967DF25DDFA75D CIFT_NO_IMAGE;
$563FFC33E79BD20782967DF25DDFA75D CIFT_OK;
$4D2BD16233F00CF56279D709F5812D5E CIF_BITMAP;
$4D2BD16233F00CF56279D709F5812D5E CIF_FILES;
$4D2BD16233F00CF56279D709F5812D5E CIF_GEODEX;
$4D2BD16233F00CF56279D709F5812D5E CIF_GRAPHICS_STRING;
$4D2BD16233F00CF56279D709F5812D5E CIF_GROBJ;
$4D2BD16233F00CF56279D709F5812D5E CIF_INK;
MACRO_CIF CIF_QUICK;
$4D2BD16233F00CF56279D709F5812D5E CIF_SOUND_SAMPLE;
$4D2BD16233F00CF56279D709F5812D5E CIF_SOUND_SYNTH;
$4D2BD16233F00CF56279D709F5812D5E CIF_SPREADSHEET;
$4D2BD16233F00CF56279D709F5812D5E CIF_TEXT;
MACRO_CIF CIF_UNUSED1;
MACRO_TIF CIF_UNUSED2;
MACRO_CI CI_ABOVE_ASCENT;
MACRO_CI CI_BELOW_DESCENT;
MACRO_CI CI_IS_FIRST_KERN;
MACRO_CI CI_IS_SECOND_KERN;
MACRO_CI2 CI_JUSTIFICATION;
MACRO_CI2 CI_LOCKED;
MACRO_CI CI_NEGATIVE_LSB;
MACRO_CI CI_NO_DATA;
MACRO_CLASSF CLASSF_C_HANDLERS;
MACRO_CLASSF CLASSF_DISCARD_ON_SAVE;
MACRO_CLASSF CLASSF_HAS_DEFAULT;
MACRO_CLASSF CLASSF_HAS_RELOC;
MACRO_CLASSF CLASSF_MASTER_CLASS;
MACRO_CLASSF CLASSF_NEVER_SAVED;
MACRO_CLASSF CLASSF_VARIANT_CLASS;
MACRO_CLF CLF_DECOMPRESS;
MACRO_CLF CLF_DEST_IS_BUFFER;
MACRO_CLF CLF_MOSTLY_ASCII;
MACRO_CLF_S CLF_SEARCH;
MACRO_CLF_S CLF_SELECT_CONTACT_NUMBER;
MACRO_CLF CLF_SOURCE_IS_BUFFER;
MACRO_LT CLIENT_IP_ADDR;
void CLIPBOARDABORTQUICKTRANSFER(void);
void __pascal CLIPBOARDADDTONOTIFICATIONLIST(optr notificationOD);
void __pascal CLIPBOARDCLEARQUICKTRANSFERNOTIFICATION(optr notificationOD);
void CLIPBOARDCLOSECLIPBOARDFILE(void);
void __pascal CLIPBOARDDONEWITHITEM(TransferBlockID header);
void __pascal CLIPBOARDENDQUICKTRANSFER(ClipboardQuickNotifyFlags flags);
word __pascal CLIPBOARDENUMITEMFORMATS(TransferBlockID header, word maxNumFormats, ClipboardItemFormatID *buffer);
VMFileHandle CLIPBOARDGETCLIPBOARDFILE(void);
dword __pascal CLIPBOARDGETITEMINFO(TransferBlockID header);
TransferBlockID CLIPBOARDGETNORMALITEMINFO(void);
TransferBlockID CLIPBOARDGETQUICKITEMINFO(void);
Boolean CLIPBOARDGETQUICKTRANSFERSTATUS(void);
TransferBlockID CLIPBOARDGETUNDOITEMINFO(void);
dword __pascal CLIPBOARDHANDLEENDMOVECOPY(word activeGrab, word uifa, Boolean checkQTInProgress);
word CLIPBOARDOPENCLIPBOARDFILE(void);
void __pascal CLIPBOARDQUERYITEM(word ClipboardItemFlags, ClipboardQueryArgs *retValues);
Boolean __pascal CLIPBOARDREGISTERITEM(TransferBlockID header, ClipboardItemFlags flags);
Boolean CLIPBOARDREMOTERECEIVE(void);
Boolean CLIPBOARDREMOTESEND(void);
Boolean __pascal CLIPBOARDREMOVEFROMNOTIFICATIONLIST(optr notificationOD);
void __pascal CLIPBOARDREQUESTITEMFORMAT(ClipboardItemFormatID format, TransferBlockID header, ClipboardRequestArgs *retValue);
Boolean __pascal CLIPBOARDSTARTQUICKTRANSFER(ClipboardQuickTransferFlags flags, ClipboardQuickTransferFeedback initialCursor, word mouseXPos, word mouseYPos, ClipboardQuickTransferRegionInfo *regionParams, optr notificationOD);
Boolean __pascal CLIPBOARDTESTITEMFORMAT(TransferBlockID header, ClipboardItemFormatID format);
void __pascal CLIPBOARDUNREGISTERITEM(optr owner);
MACRO_CLIPBOARD_ITEM CLIPBOARD_ITEM_NAME_LENGTH;
MACRO_CLIPBOARD CLIPBOARD_MAX_FORMATS;
MACRO_CLRW CLRW_CENTER;
MACRO_CLRW CLRW_LEFT;
MACRO_CLRW CLRW_RIGHT;
MACRO_CLRW CLRW_WIDTH;
MACRO_CLSF CLSF_WARN;
$459A6F027A73088B8B01208F560CFCD3 CL_CENTERED_AROUND_POSITION;
$459A6F027A73088B8B01208F560CFCD3 CL_CENTERED_AROUND_SELECTION;
$459A6F027A73088B8B01208F560CFCD3 CL_CENTERED_AROUND_SELECTION_START;
MACRO_CL CL_DEFAULT_FEATURES;
$459A6F027A73088B8B01208F560CFCD3 CL_ENDING_AT_POSITION;
$459A6F027A73088B8B01208F560CFCD3 CL_GET_SELECTED_WORD;
$459A6F027A73088B8B01208F560CFCD3 CL_STARTING_AT_POSITION;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_CONTACT_CARD;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_CONTACT_LIST;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_DRAWER;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_FOLDER;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_INPUT_TITLE_ICON;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_LEFT_FINGER;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_OPEN_FOLDER;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_PC_ICON;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_QUESTION_ICON;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_RENAME_COPY;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_RIGHT_FINGER;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SEARCH;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SECURITY_ERROR;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SECURITY_SUCCESS;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SERVICES_DEFINE;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SERVICES_VIEW;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SETTINGS_TITLE_ICON;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SMS_CARD_ICON;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_SPEED_DIAL;
$17D54CF75024FE92F8D927AB5C4FDA24 CMB_WARNING_TITLE_ICON;
$AE1CA976E960DCD751C4960CE71413AA CMD_ERR;
$AE1CA976E960DCD751C4960CE71413AA CMD_NO_COMMAND;
$AE1CA976E960DCD751C4960CE71413AA CMD_P_RPL;
$AE1CA976E960DCD751C4960CE71413AA CMD_Q_RCMD;
$AE1CA976E960DCD751C4960CE71413AA CMD_Q_RIMG;
$AE1CA976E960DCD751C4960CE71413AA CMD_Q_RINF;
$AE1CA976E960DCD751C4960CE71413AA CMD_Q_UNDEFINED;
dword __pascal CMESSAGEDISPATCH(EventHandle, MessageFlags, word);
MACRO_CMFAGPS CMFAGPS_DOWNLOADING_FILES_IN_PACKAGE;
MACRO_CMFAGPS CMFAGPS_EXISTING_DIALOG_DISPLAYED;
MACRO_CMFAGPS CMFAGPS_EXISTING_LOCAL_DEST_FILE;
MACRO_CMFAGPS CMFAGPS_FILE_INSTALLED_FROM_PACKAGE;
MACRO_CMFAGPS CMFAGPS_NEED_TO_REBOOT;
MACRO_CMFAGPS CMFAGPS_NEW_FILE_IS_GEOS_FILE;
MACRO_CMFAGPS CMFAGPS_REBOOT_DIALOG_DISPLAYED;
MACRO_CMFAGPS CMFAGPS_REPLACE_DOCUMENT_DIALOG_DISPLAYED;
MACRO_CMFAGPS CMFAGPS_UNRELATED_DIALOG_DISPLAYED;
MACRO_CMFGSS CMFGSS_DO_NOT_ALLOCATE_OR_DELETE_PATH_BUFFERS;
MACRO_CMFGSS CMFGSS_TRANSFER_CANCELED;
MACRO_CMM CMM_MAP_TYPE;
MACRO_CMT CMM_ON_BLACK;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_CMB;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_CMT;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_FPTR;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_HPTR;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_KEEP;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_LPTR;
$5DD5D18F25690EF7D18E10924A9E5B71 CMST_OPTR;
MACRO_CMS CMS_COLOR_CHANGED;
MACRO_CMS CMS_DRAW_MASK_CHANGED;
MACRO_CMS CMS_PATTERN_CHANGED;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ACCEPT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ACTIVATE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_BACK;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CALL;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CALLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CALL_LOWERCASE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CANCEL;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CAPTURE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CHANGE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CLEAR;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CLEAR_ALL;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CLEAR_ALL_COMMAND;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CLEAR_LIST;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CLOSE;
MACRO_CMT CMT_CLOSEST;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CONNECT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CONTACT_CARD;
$75F2AECC72E67C28AA85492AC6D71469 CMT_COPY;
$75F2AECC72E67C28AA85492AC6D71469 CMT_CREATE_NEW;
$75F2AECC72E67C28AA85492AC6D71469 CMT_DATA_CALLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_DEINSTALL;
$75F2AECC72E67C28AA85492AC6D71469 CMT_DELETE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_DISABLE;
MACRO_CMT CMT_DITHER;
$75F2AECC72E67C28AA85492AC6D71469 CMT_FAXES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_FORWARD;
$75F2AECC72E67C28AA85492AC6D71469 CMT_FORWARD_FAX;
$75F2AECC72E67C28AA85492AC6D71469 CMT_FROM_COLON;
$75F2AECC72E67C28AA85492AC6D71469 CMT_GO;
$75F2AECC72E67C28AA85492AC6D71469 CMT_HANGUP;
$75F2AECC72E67C28AA85492AC6D71469 CMT_HELP;
$75F2AECC72E67C28AA85492AC6D71469 CMT_INSERT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_INSTALL;
$75F2AECC72E67C28AA85492AC6D71469 CMT_LAST_DIALED_CALLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_MENU;
$75F2AECC72E67C28AA85492AC6D71469 CMT_MESSAGES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_MISSED_CALLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_NEXT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_NO;
$75F2AECC72E67C28AA85492AC6D71469 CMT_NONE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_NO_CONTACT_INFORMATION;
$75F2AECC72E67C28AA85492AC6D71469 CMT_NULL;
$75F2AECC72E67C28AA85492AC6D71469 CMT_OFF;
$75F2AECC72E67C28AA85492AC6D71469 CMT_OK;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ON;
$75F2AECC72E67C28AA85492AC6D71469 CMT_OPEN;
$75F2AECC72E67C28AA85492AC6D71469 CMT_OPTIONS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_PHONE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_PREVIOUS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RECEIVED_CALLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RECEIVED_FAXES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RECEIVED_MESSAGES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RECENT_CALLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RECENT_FAXES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RECENT_MESSAGES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RENAME;
$75F2AECC72E67C28AA85492AC6D71469 CMT_REPLY;
$75F2AECC72E67C28AA85492AC6D71469 CMT_RESET;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ROTATE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SEARCH;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SELECT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SELECT_RECEIVER;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SEND;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SEND_OPTIONS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SETTINGS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SPECIAL_KEYS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_SPECIAL_KEYS_COMMAND;
$75F2AECC72E67C28AA85492AC6D71469 CMT_START;
$75F2AECC72E67C28AA85492AC6D71469 CMT_STOP;
$75F2AECC72E67C28AA85492AC6D71469 CMT_STOP_CAPTURE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_TEXT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_TEXTS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_TEXT_CAPTURE;
$75F2AECC72E67C28AA85492AC6D71469 CMT_TEXT_SEND;
$75F2AECC72E67C28AA85492AC6D71469 CMT_TO_COLON;
$75F2AECC72E67C28AA85492AC6D71469 CMT_USER_DEFINED;
$75F2AECC72E67C28AA85492AC6D71469 CMT_VIEWING_TOOLS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_YES;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ZOOM;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ZOOM_IN;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ZOOM_MINUS;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ZOOM_OUT;
$75F2AECC72E67C28AA85492AC6D71469 CMT_ZOOM_PLUS;
MACRO_CNVT CNVT_GSM;
MACRO_CNVT CNVT_PCN;
void __pascal COBJSENDTOCHILDREN(optr o, EventHandle message, word masterOffset, word compOffset, word linkOffset);
MACRO_COCTOF COCTOF_INFINITE;
MACRO_COCTOF COCTOF_OVERFLOW;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_CANADIAN_FRENCH;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_LATIN_1;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_MULTILINGUAL;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_NON_THAI_GEOS;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_NORDIC;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_PORTUGUESE;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_REAL_LATIN_1_IN_THAI_GEOS;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_SJIS;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_THAI_IN_THAI_GEOS;
$59BEEE5019F35980E4F5FB617FCAD371 CODE_PAGE_US;
MACRO_DATABASE COLUMNS_TAKEN_ARRAY_SIZE;
MACRO_COLUMN COLUMN_WIDTH_MAX;
MACRO_COLUMN COLUMN_WIDTH_MIN;
MACRO_COMPLEX_MONIKER COMPLEX_MONIKER_MAX_BOTTOM_TEXT_LENGTH;
MACRO_COMPLEX COMPLEX_MONIKER_MAX_TOP_TEXT_LENGTH;
word __pascal COMPRESSDECOMPRESS(CompLibFlags flags, FileHandle sourceFileHandle, void *sourceBuffer, word sourceBufferSize, FileHandle destFileHandle, void *destBuffer);
MACRO_COMPRESS COMPRESS_PROTO_MAJOR;
MACRO_COMPRESS COMPRESS_PROTO_MINOR;
void __pascal CONFIGBUILDTITLEDMONIKER(optr monikerList);
ChunkHandle __pascal CONFIGBUILDTITLEDMONIKERUSINGTOKEN(GeodeToken *token, MemHandle destBlock);
word __pascal __far CONNECTCOMPRESSFILE(FileHandle srcFileHan, FileHandle destFileHan);
word __pascal __far CONNECTDECOMPRESSFILE(FileHandle srcFileHan, FileHandle destFileHan);
void __pascal __far CONNECTDISABLEAPPLAUNCHKEYS(ConnectDisableAppLaunchKeysMonitor *monitor);
void __pascal __far CONNECTENABLEAPPLAUNCHKEYS(ConnectDisableAppLaunchKeysMonitor *monitor);
ConnectError __pascal __far CONNECTGEODEFINDFROMLONGNAME(const char far *name, GeodeAttrs attrMatch, GeodeAttrs attrNoMatch, GeodeHandle far *geodeHan);
MACRO_CONNECTION CONNECTION_TYPE_TEXT_BUFFER_LENGTH;
void __pascal __far CONNECTPLAYSOUND(ConnectSoundType soundToPlay);
MACRO_FILE_FORMAT CONNECT_OPEN_CONNECTION_TIME_OUT;
MACRO_CONNECT CONNECT_SETTINGS_DRIVE_LENGTH_ZT;
MACRO_CONNECT CONNECT_SETTINGS_PATH_LENGTH_ZT;
MACRO_CONSTANT CONSTANT_MAX_FDD;
word __pascal CONTACTADDRECORDTOGROUP(RecordID childRecord, RecordID group);
void __pascal CONTACTCHANGENETWORKVERSION(ContactNetworkVersionType cnvt);
int __pascal CONTACTCHANGESTANDARDDB(TCHAR *dbName);
word CONTACTCLOSEDBFILE(void);
void CONTACTCLOSEDBFILESONMMC(void);
Boolean __pascal CONTACTCOMPARENUMBERS(TCHAR *number1, TCHAR *number2);
RecordID __pascal CONTACTCOPYRECORDTODB(VMFileHandle destDBHandle, VMFileHandle srcDBHandle, MemHandle srcRecord);
RecordID __pascal CONTACTCREATEGROUP(TCHAR *groupName);
word __pascal CONTACTCREATENEWDB(TCHAR *dbName);
MemHandle CONTACTCREATERECORDFROMTEMPLATE(void);
int __pascal CONTACTDELETEDATABASE(TCHAR *dbName);
Boolean __pascal CONTACTDELETERECORD(MemHandle record);
void __pascal CONTACTDRAWBITMAP(GStateHandle gstate, word xPos, word yPos, word whichIcon);
void __pascal CONTACTDRAWMMCTITLE(GStateHandle gstate, word xPos, word yPos);
FieldID __pascal CONTACTENSUREEMPTYFIELD(MemHandle record, optr fieldName, ContdbFieldType fieldType);
FieldID __pascal CONTACTENSUREFIELD(MemHandle record, optr fieldName, ContdbFieldType fieldType);
ContactEnumReturnValue __pascal CONTACTENUMONALLGROUPMEMBERS(RecordID groupID, GroupCallbackFunc *callback, void *data1, void *data2);
ContactEnumReturnValue __pascal CONTACTENUMONALLGROUPSRECORDISIN(RecordID record, GroupHandleCallbackFunc *callback, void *data1, void *data2);
ContactEnumReturnValue __pascal CONTACTENUMONGROUPMEMBERS(RecordID groupID, GroupCallbackFunc *callback, void *data1, void *data2);
ContactEnumReturnValue __pascal CONTACTENUMONGROUPS(GroupCallbackFunc *callback, void *data1, void *data2);
ContactEnumReturnValue __pascal CONTACTENUMONGROUPSRECORDISIN(RecordID record, GroupHandleCallbackFunc *callback, void *data1, void *data2);
ContactExportStatus __pascal CONTACTEXPORTDBTOTEXTFILE(hptr fileExport, dword startElement, dword numOfRecords);
DiskHandle CONTACTGETDBDISKHANDLE(void);
VMFileHandle CONTACTGETDBHANDLE(void);
VMFileHandle CONTACTGETDBHANDLENOBLOCK(void);
int __pascal CONTACTGETDBNAME(int dbIndex, TCHAR *dbName);
word CONTACTGETGROUPCOUNT(void);
ContactImageFileType __pascal CONTACTGETIMAGEFILE(RecordID recordID, TCHAR *imageLocation);
int CONTACTGETMEMCARDSTATUS(void);
Boolean __pascal CONTACTGETNAME(MemHandle record, TCHAR *dest);
int CONTACTGETNUMDBSONMEMORYCARD(void);
ContactToneFileType __pascal CONTACTGETTONEFILE(RecordID recordID, TCHAR *toneLocation);
Boolean __pascal CONTACTGETTRUNCATEDNAME(MemHandle record, TCHAR *dest, word destSize);
dword CONTACTGETUSERDATAID(void);
word __pascal CONTACTGETUSERDATANAME(TCHAR *username, word bufSize);
void __pascal CONTACTIMPORTDBFROMTEXTFILE(hptr fileImport);
ContactExportStatus __pascal CONTACTIMPORTDBFROMTEXTFILESTATUS(hptr fileImport);
Boolean __pascal CONTACTISLOCKEDRECORDAGROUP(RecordHeader *record);
Boolean __pascal CONTACTISLOCKEDRECORDINGROUP(RecordID group, RecordHeader *record);
Boolean __pascal CONTACTISRECORDAGROUP(Handle record);
Boolean __pascal CONTACTISRECORDINCALLERGROUP(MemHandle record, CallerGroupData groupsToMatch);
Boolean __pascal CONTACTISRECORDINGROUP(RecordID rid, RecordID gid, word checkParentGroups);
optr __pascal CONTACTLISTGROUPS(Boolean getMemberCount);
RecordID __pascal CONTACTMATCHGROUPNAME(TCHAR *groupName);
RecordID __pascal CONTACTMATCHNAME(TCHAR *name, ContdbFieldType type, Boolean stopEarly, FieldID *field, word *numMatches);
RecordID __pascal CONTACTMATCHNUMBER(TCHAR *number, ContdbCallType type, FieldID *field, word *numMatches);
CallerGroupData __pascal CONTACTREADCALLERGROUPFIELD(TCHAR *dbName, RecordID groupID);
CallerGroupData __pascal CONTACTRECORDREADCALLERGROUPS(MemHandle record);
void CONTACTRELEASEDBHANDLE(void);
void CONTACTREMOVEOVERRIDEDB(void);
void __pascal CONTACTREMOVERECORDFROMGROUP(RecordID recordToRemove, RecordID group);
word __pascal CONTACTRENAMEDB(word dbIndex, TCHAR *newName);
void __pascal CONTACTRENAMEGROUP(RecordID group, TCHAR *newName);
VMFileHandle CONTACTREOPENDBFILE(void);
void CONTACTREOPENDBFILESONMMC(void);
void __pascal CONTACTRESTOREOVERRIDEDB(word dbToken);
dword __pascal CONTACTSAVERECORD(MemHandle record);
ContactImageFileType __pascal CONTACTSETIMAGEFILE(RecordID recordID, TCHAR *imageLocation);
word __pascal CONTACTSETOVERRIDEDB(TCHAR *dbName);
void __pascal CONTACTSETTEMPLATERECORD(MemHandle record);
ContactToneFileType __pascal CONTACTSETTONEFILE(RecordID recordID, TCHAR *toneLocation);
Boolean CONTACTSIMCHECKFDNSTATUS(void);
Boolean __pascal CONTACTSIMCHECKLOCATIONEMPTY(word location);
Boolean __pascal CONTACTSIMCHECKLOCATIONHASNUMBER(word location);
Boolean CONTACTSIMCHECKSIMSTATUS(void);
Boolean CONTACTSIMFETCHCONTACTS(void);
ContactSIMError CONTACTSIMGETCACHESTATUS(void);
word CONTACTSIMGETFIRSTEMPTYLOCATION(void);
ContactSIMError __pascal CONTACTSIMGETLOCATIONENTRY(word location, TCHAR *name, TCHAR *number);
ContactSIMError __pascal CONTACTSIMGETSORTEDENTRY(word sortOrder, TCHAR *name, TCHAR *number);
ContactSIMError __pascal CONTACTSIMNUMBER(word *totalSIMContacts, word *usedSIMContacts);
word __pascal CONTACTSIMXLATTOLOCATION(word sortOrder);
word __pascal CONTACTSIMXLATTOSORTORDER(word location);
void CONTACTVERIFYNETWORKVERSION(void);
void __pascal CONTACTWRITECALLERGROUPFIELD(TCHAR *dbName, RecordID groupID, CallerGroupData bitsToSet, CallerGroupData bitsToClear);
MACRO_CONTACT_ADD CONTACT_ADD_RECORD_ERROR;
MACRO_CONTACT_ADD CONTACT_ADD_RECORD_OKAY;
MACRO_CONTACT_CREATE CONTACT_CREATE_DB_ERROR;
MACRO_CONTACT_CREATE CONTACT_CREATE_DB_ERROR_NAME_EXISTS;
MACRO_CONTACT_CREATE CONTACT_CREATE_DB_OKAY;
MACRO_CONTACT CONTACT_DB_SELECTION_IS_DB_NAME;
MACRO_CONTACT_DEVICE CONTACT_DEVICE_DB_NAME;
MACRO_NULL_GROUP CONTACT_EXPORT_ALL_RECORDS;
MACRO_CNVT CONTACT_GET_CURRENT_DB_NAME;
MACRO_NULL_GROUP CONTACT_MAX_NUMBER_DBS;
MACRO_CONTACT_RENAME CONTACT_RENAME_DB_ERROR;
MACRO_CONTACT_RENAME CONTACT_RENAME_DB_ERROR_NAME_EXISTS;
MACRO_CONTACT_RENAME CONTACT_RENAME_DB_OKAY;
MACRO_CONTACT_DEVICE CONTACT_RESTORE_STANDARD_DB;
MACRO_CONTACT_DEVICE CONTACT_SET_OVERRIDE_ERROR;
void __pascal CONTDBRECREATEFIELDLABEL(TCHAR *subLabel, TCHAR *destination, int fieldType);
void __pascal CONTDBTRANSLATESUBFIELDLABELTOENGLISH(TCHAR *subLabel, TCHAR *destination);
MACRO_MAX_CONTEXT_NAME_SIZE CONTEXT_NAME_BUFFER_SIZE;
MACRO_COO COO_AREA_ORIENTED;
MACRO_COO COO_LINE_ORIENTED;
MACRO_COO COO_TEXT_ORIENTED;
double __pascal COS(double x);
double __pascal COSH(double x);
MACRO_CPDF CPDF_CANCELLING;
MACRO_CPDF CPDF_DISPLAY_CUMULATIVE_BYTE_TALLY;
MACRO_CPDF CPDF_DISPLAY_TOTAL_TRANSFER_SIZE;
MACRO_CPDF CPDF_IGNORE_STATUS_UPDATES;
MACRO_CPDF CPDF_INHIBIT_CANCELLATION;
$D1DA0296571289DF868C89A8669F2FDC CPMS_CODE_REQUIRED;
$D1DA0296571289DF868C89A8669F2FDC CPMS_NO_SERVICE;
$D1DA0296571289DF868C89A8669F2FDC CPMS_OK;
$D1DA0296571289DF868C89A8669F2FDC CPMS_RADIO_UNIT_OFF;
$D1DA0296571289DF868C89A8669F2FDC CPMS_SIM_ERROR;
$AAE9C0E016A413A2263063F4FA1EF93F CPT_BYTE_COUNT;
MACRO_CPU_AUX CPU_AUX_CARRY;
MACRO_CPU_AUX CPU_AUX_CARRY_OFFSET;
MACRO_CPU_CARRY CPU_CARRY;
MACRO_CPU_CARRY CPU_CARRY_OFFSET;
MACRO_CPU_DIRECTION CPU_DIRECTION;
MACRO_CPU_DIRECTION CPU_DIRECTION_OFFSET;
MACRO_CPU_INTERRUPT CPU_INTERRUPT;
MACRO_CPU_INTERRUPT CPU_INTERRUPT_OFFSET;
MACRO_CPU CPU_OVERFLOW;
MACRO_CPU CPU_OVERFLOW_OFFSET;
MACRO_CPU_PARITY CPU_PARITY;
MACRO_CPU_PARITY CPU_PARITY_OFFSET;
MACRO_CPU_SIGN CPU_SIGN;
MACRO_CPU_SIGN CPU_SIGN_OFFSET;
MACRO_CPU_TRAP CPU_TRAP;
MACRO_CPU_TRAP CPU_TRAP_OFFSET;
MACRO_CPU_ZERO CPU_ZERO;
MACRO_CPU_ZERO CPU_ZERO_OFFSET;
$AA2971232B1DB23A811646E0AB6A9E6A CQGS_BUSY;
$AA2971232B1DB23A811646E0AB6A9E6A CQGS_FAILED;
$AA2971232B1DB23A811646E0AB6A9E6A CQGS_FAILED_IACP_CONNECTION;
$AA2971232B1DB23A811646E0AB6A9E6A CQGS_SUCCESS;
MACRO_CQNF CQNF_COPY;
MACRO_CQNF CQNF_ERROR;
MACRO_CQNF CQNF_MOVE;
MACRO_CQNF CQNF_NO_OPERATION;
MACRO_CQNF CQNF_SOURCE_EQUAL_DEST;
MACRO_CQNF CQNF_UNUSED;
$9D491DC32B45CDA360448FBF0D531364 CQTF_CLEAR;
$9D491DC32B45CDA360448FBF0D531364 CQTF_CLEAR_DEFAULT;
$9D491DC32B45CDA360448FBF0D531364 CQTF_COPY;
MACRO_CQTF CQTF_COPY_ONLY;
MACRO_CLIPBOARD_ITEM CQTF_IN_PROGRESS;
$9D491DC32B45CDA360448FBF0D531364 CQTF_MOVE;
MACRO_CQTF CQTF_NOTIFICATION;
$9D491DC32B45CDA360448FBF0D531364 CQTF_SET_DEFAULT;
MACRO_CQTF CQTF_USE_REGION;
MACRO_SCANNER CRC_ABSOLUTE;
MACRO_CRC CRC_VALUE;
optr __pascal __far CREATEVISMONIKERLINE(word pointSize, FontID typeFace, word numberOfFields, VisMonikerColumn *columnList);
optr __pascal __far CREATEVISMONIKERLINEADAPTABLECOLUMNS(word pointSize, FontID typeFace, word numberOfFields, VisMonikerColumn *columnList);
MACRO_FFFP CREATING_NEW_FIELD;
MACRO_CRF2 CRF_IN_FINAL_LIST;
MACRO_CT2 CRF_IN_PARENT_LIST;
MACRO_CRF2 CRF_PROTECTION;
MACRO_CRF_RESERVED CRF_RESERVED;
MACRO_CRF CRF_SPECIAL_RINGING_TONE;
MACRO_CRT CRT_REGULAR_COMMIT;
MACRO_CRT CRT_SAVE_FILE_COMMIT;
MACRO_CRT CRT_VISUAL_UPDATE_COMMIT;
MACRO_CSAF CSAF_WAITING_FOR_COMPLETION_MSG;
MACRO_CSAF CSAF_WAITING_TO_DETACH;
MACRO_CSCF CSCF_CONNECTION_TYPE;
MACRO_CSCF CSCF_DATA_GROUP;
MACRO_CSCMF CSCF_DESTINATION;
MACRO_CSCF CSCF_DIRECTORY_PATH;
MACRO_CSCF CSCF_DRIVE;
MACRO_CSCF CSCF_FILE_PATH;
MACRO_CSCF CSCF_MEMORYCARD_PATH;
MACRO_CSCF CSCF_MEMORY_CARD;
MACRO_CSCMF CSCMF_GENERATING_UI;
MACRO_CSC CSC_DEFAULT_FEATURES;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_COPY_FROM_FILE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_COPY_TO_FILE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_ESTABLISH_CONNECTION;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_ESTABLISH_MMC_CONNECTION;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_FIND_DIRECTORY;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_FIND_DISK_IN_REMOTE_DRIVE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_FIND_DRIVE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CANNOT_USE_INSTALL_BATCH_FILE_FOR_MORE_THAN_ONE_INSTALL;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CONNECTION_LOST;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_CONNECTION_MEDIUM_ALREADY_IN_USE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_DATA_CALL_IN_PROGRESS;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_DEST_FILE_OPEN_BY_ANOTHER_APP;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_DIRECTORY_CREATE_ERROR;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_DIRECTORY_DOES_NOT_EXIST_CREATE_IT;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_FILE_OVERWRITE_WARNING;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_ILLEGAL_SETTING;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_MMC_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_NULL_SETTING;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_OPERATION_ABORTED;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_OUT_OF_MEMORY;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_PACKAGE_NOT_COMPATIBLE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_PACKAGE_OLD_SO_NOT_INSTALLED;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_REMOTE_NOT_ENOUGH_DISK_SPACE_TO_COMPLETE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_REPLACE_EXISTING_DOCUMENT;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_REPLACE_EXISTING_SOFTWARE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_REPLACE_UNRELATED_SOFTWARE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_SOURCE_FILE_OPEN_BY_ANOTHER_APP;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_THIS_IS_THE_LAST_ONE;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_TRANSLATION_ERROR;
$AA08ACBA0B0A168C6C117BF4AAF6B961 CSDBT_WILL_NEED_TO_REBOOT;
MACRO_CSDCF CSDCF_CONNECTION_TYPE;
MACRO_CSDCF CSDCF_DATA_GROUP;
MACRO_CSC CSDCF_DESTINATION;
MACRO_CSDCF CSDCF_DIRECTORY_PATH;
MACRO_CSDCF CSDCF_DRIVE;
MACRO_CSDCF CSDCF_FILE_PATH;
MACRO_CSDC CSDC_DEFAULT_FEATURES;
$9D017184267BADE5A4328A83A19B1EE4 CSE_DATA_FETCHABLE;
$9D017184267BADE5A4328A83A19B1EE4 CSE_DATA_UNAVAILABLE;
$9D017184267BADE5A4328A83A19B1EE4 CSE_OK;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_FAILED;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_FAILED_MISSING_RESOURCE;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_FAILED_NUMBER_TOO_LONG;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_FAILED_OTHER_ERROR;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_FAILED_SIM_BUSY;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_NAME_TRUNCATED;
$9D017184267BADE5A4328A83A19B1EE4 CSE_SAVE_NOT_EDITING;
MACRO_CSF CSF_DRAW_MASK;
MACRO_CSF CSF_FILLED_LIST;
MACRO_CSF CSF_INDEX;
MACRO_CSF CSF_PATTERN;
MACRO_CSF CSF_RGB;
MACRO_CSLF CSLF_CANCEL_COPY;
MACRO_CSLF CSLF_HAVE_FOCUS;
MACRO_MAX_SIM_NUMBER CSLF_NAME_SORTED;
MACRO_CSLF CSLF_REFRESH_LIST;
MACRO_CSLF CSLF_SELECT_CONTACT_NUMBER;
MACRO_CSLF CSLF_SUSPEND_SELECT_NOTIFY;
MACRO_CSLF CSL_DEFAULT_FEATURES;
MACRO_SMSC_DYN CSMS_DEFAULT_FEATURES;
MACRO_CSTF CSTF_DRAW_MASK;
MACRO_CSTF CSTF_INDEX;
MACRO_CSTF CSTF_PATTERN;
$679AF5CC6149ACE7C4F062204D178770 CST_SUCCESS;
MACRO_CS CS_BSW;
MACRO_CS_CALCULATOR CS_CALCULATOR;
MACRO_CS CS_CONTROL;
MACRO_CS2 CS_DEFAULT_FEATURES;
MACRO_CS_DEFAULT CS_DEFAULT_TOOLBOX_FEATURES;
MACRO_CS_IMPENDING CS_IMPENDING_DISCONNECTION;
MACRO_CS_UI CS_UI_FUNCS;
MACRO_CS_IMPENDING CS_UNACKED_DATA;
MACRO_CS_lightColor CS_darkColor;
MACRO_CS_lightColor CS_lightColor;
MACRO_CS_lightColor_OFFSET CS_lightColor_OFFSET;
MACRO_CTBH CTBH_BOTTOM;
MACRO_CTBH CTBH_CENTER;
MACRO_CTBH CTBH_HEIGHT;
MACRO_CTBH CTBH_TOP;
$9F458BEFCC98CF6FE2D1882D3CF34F8F CTDIS_COMPLETED;
$9F458BEFCC98CF6FE2D1882D3CF34F8F CTDIS_HIGH_PRIORITY;
$9F458BEFCC98CF6FE2D1882D3CF34F8F CTDIS_NORMAL_PRIORITY;
$F4268A596477C9C1C12FBAF0AD126796 CTDST_BYTE_COUNT;
$53132F90EB77F20CC3117450DCB54102 CTFDE_CANCELED;
$53132F90EB77F20CC3117450DCB54102 CTFDE_DISK_FULL;
$53132F90EB77F20CC3117450DCB54102 CTFDE_ERROR;
$53132F90EB77F20CC3117450DCB54102 CTFDE_FILE_CREATE;
$53132F90EB77F20CC3117450DCB54102 CTFDE_FILE_OPEN;
$53132F90EB77F20CC3117450DCB54102 CTFDE_FILE_READ;
$53132F90EB77F20CC3117450DCB54102 CTFDE_FILE_WRITE;
$53132F90EB77F20CC3117450DCB54102 CTFDE_NO_ERROR;
$53132F90EB77F20CC3117450DCB54102 CTFDE_OUT_OF_MEMORY;
$53132F90EB77F20CC3117450DCB54102 CTFDE_TRANSFER_COMPLETE;
$53132F90EB77F20CC3117450DCB54102 CTFDE_TRANSFER_CONTINUES;
$53132F90EB77F20CC3117450DCB54102 CTFDE_TRANSFER_STARTING;
MACRO_CTFER CTFER_PROTO_MAJOR;
MACRO_CTFER_PROTO CTFER_PROTO_MINOR;
$45B57FF165175B8B486C50007D24CC8B CTFT_INVALID_ID;
$45B57FF165175B8B486C50007D24CC8B CTFT_NO_TONE;
$45B57FF165175B8B486C50007D24CC8B CTFT_OK;
MACRO_CTF CTF_CREATE_DEST_PATH_DIRECTORY;
MACRO_CTF CTF_DONT_RESERVE_VIRTUAL_SERIAL_PORT;
MACRO_CTF CTF_MULTIPLE_TRANSFER;
MACRO_CTF CTF_NO_TRANSFER_IF_FILE_OPEN;
MACRO_CTF CTF_QUERY_ON_OVERWRITE;
MACRO_CTLATE CTLATE_PROTO_MAJOR;
MACRO_CTLATE_PROTO CTLATE_PROTO_MINOR;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_CANCELED;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_DISK_FULL;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_ERROR;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_FILE_CREATE;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_FILE_OPEN;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_FILE_READ;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_FILE_TOO_LARGE;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_FILE_WRITE;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_INVALID_FORMAT;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_NO_ERROR;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_OUT_OF_MEMORY;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_SOURCE_FILE_EMPTY;
$ACFD472A21D2348D12A5675FC335F578 CTLDE_TRANSLATION_NOT_SUPPORTED;
MACRO_CTLATE_PROTO CTLD_FORMAT_NAME_SIZE;
MACRO_CTP CTP_DRAW_MASK_ORIENTATION;
MACRO_CTP_INDEX CTP_DRAW_MASK_ORIENTATION_OFFSET;
MACRO_COO CTP_INDEX_ORIENTATION;
MACRO_CTP_INDEX CTP_INDEX_ORIENTATION_OFFSET;
MACRO_CTP CTP_IS_POPUP;
MACRO_CTP CTP_PATTERN_ORIENTATION;
MACRO_CTP_INDEX CTP_PATTERN_ORIENTATION_OFFSET;
$054D39CB2D30E5301EC532F068C38240 CT_CANADA;
MACRO_CT2 CT_CHART;
MACRO_CT CT_CHECK_NAME_EXISTS;
MACRO_CT CT_CHECK_NAME_SPACE;
MACRO_CT2 CT_CONSTANT;
MACRO_CT CT_CREATE_CELL;
$054D39CB2D30E5301EC532F068C38240 CT_DENMARK;
MACRO_CT CT_DEREF_CELL;
MACRO_CT2 CT_DISPLAY_FORMULA;
MACRO_CT2 CT_EMPTY;
MACRO_CT CT_EMPTY_CELL;
MACRO_CT CT_EVAL_FUNCTION;
MACRO_CT CT_FORMAT_FUNCTION;
MACRO_CT CT_FORMAT_NAME;
MACRO_CT2 CT_FORMULA;
$054D39CB2D30E5301EC532F068C38240 CT_FRANCE;
MACRO_CT CT_FUNCTION_TO_CELL;
MACRO_CT CT_FUNCTION_TO_TOKEN;
$054D39CB2D30E5301EC532F068C38240 CT_GERMANY;
$BED77A7283D637306628B55E8E8E9B31 CT_INFRARED;
$054D39CB2D30E5301EC532F068C38240 CT_ITALY;
MACRO_CT CT_LOCK_NAME;
$BED77A7283D637306628B55E8E8E9B31 CT_MEMORYCARD;
MACRO_CT2 CT_NAME;
MACRO_CT CT_NAME_TO_CELL;
MACRO_CT CT_NAME_TO_TOKEN;
$054D39CB2D30E5301EC532F068C38240 CT_NETHERLANDS;
$BED77A7283D637306628B55E8E8E9B31 CT_SERIAL;
$BED77A7283D637306628B55E8E8E9B31 CT_SOCKET;
$054D39CB2D30E5301EC532F068C38240 CT_SPAIN;
MACRO_CT CT_SPECIAL_FUNCTION;
MACRO_CT2 CT_TEXT;
$054D39CB2D30E5301EC532F068C38240 CT_UNITED_KINGDOM;
$054D39CB2D30E5301EC532F068C38240 CT_UNITED_STATES;
MACRO_CT CT_UNLOCK;
MACRO_CURRENCY CURRENCY_SYMBOL_LENGTH;
MACRO_STANDARD CURSOR_IMAGE_SIZE_32;
MACRO_STANDARD CURSOR_IMAGE_SIZE_64;
MACRO_CUSTOM CUSTOM_RULER_DEFINITION;
MACRO_CVMF CVMF_DIRTY;
void __pascal CWARNINGNOTICE(word code);
MACRO_CWF CWF_OPTIONS_LIST;
MACRO_CWF CWF_STATUS_BUTTON;
MACRO_CW CW_DEFAULT_FEATURES;
MACRO_C_NULL C_ACUTE;
MACRO_C_NULL C_AMPERSAND;
MACRO_C_NULL C_APPROX_EQUAL;
MACRO_C_NULL C_ASCII_CIRCUMFLEX;
MACRO_C_NULL C_ASCII_TILDE;
MACRO_C_NULL C_ASTERISK;
MACRO_C_NULL C_AT_SIGN;
MACRO_C_NULL C_BACKQUOTE;
MACRO_C_NULL C_BACKSLASH;
MACRO_C_NUL C_BEL;
MACRO_C C_BLACK;
MACRO_C C_BLUE;
MACRO_C_NULL C_BREVE;
MACRO_C C_BROWN;
MACRO_C_NUL C_BS;
MACRO_C_NULL C_BULLET;
MACRO_C_LIGHT C_BW_GREY;
MACRO_C_NUL C_CAN;
MACRO_C_NULL C_CAP_A;
MACRO_C_NULL C_CAP_B;
MACRO_C_NULL C_CAP_C;
MACRO_C_NULL C_CAP_D;
MACRO_C_NULL C_CAP_E;
MACRO_C_NULL C_CAP_F;
MACRO_C_NULL C_CAP_G;
MACRO_C_NULL C_CAP_H;
MACRO_C_NULL C_CAP_I;
MACRO_C_NULL C_CAP_J;
MACRO_C_NULL C_CAP_K;
MACRO_C_NULL C_CAP_L;
MACRO_C_NULL C_CAP_M;
MACRO_C_NULL C_CAP_N;
MACRO_C_NULL C_CAP_O;
MACRO_C_NULL C_CAP_P;
MACRO_C_NULL C_CAP_Q;
MACRO_C_NULL C_CAP_R;
MACRO_C_NULL C_CAP_S;
MACRO_C_NULL C_CAP_T;
MACRO_C_NULL C_CAP_U;
MACRO_C_NULL C_CAP_V;
MACRO_C_NULL C_CAP_W;
MACRO_C_NULL C_CAP_X;
MACRO_C_NULL C_CAP_Y;
MACRO_C_NULL C_CAP_Z;
MACRO_C_NULL C_CARON;
MACRO_C_NULL C_CEDILLA;
MACRO_C_NULL C_CENT;
MACRO_C_NULL C_CIRCUMFLEX;
MACRO_C_NULL C_CNTR_DOT;
MACRO_C_NULL C_COLON;
MACRO_C_NULL C_COMMA;
MACRO_C_NULL C_COPYRIGHT;
MACRO_C_NUL C_CR;
MACRO_C_NULL C_CTRL_A;
MACRO_C_NULL C_CTRL_B;
MACRO_C_NULL C_CTRL_C;
MACRO_C_NULL C_CTRL_D;
MACRO_C_NULL C_CTRL_E;
MACRO_C_NULL C_CTRL_F;
MACRO_C_NULL C_CTRL_G;
MACRO_C_NULL C_CTRL_H;
MACRO_C_NUL C_CTRL_I;
MACRO_C_NUL C_CTRL_J;
MACRO_C_NULL C_CTRL_K;
MACRO_C_NULL C_CTRL_L;
MACRO_C_NUL C_CTRL_M;
MACRO_C_NUL C_CTRL_N;
MACRO_C_NUL C_CTRL_O;
MACRO_C_NULL C_CTRL_P;
MACRO_C_NULL C_CTRL_Q;
MACRO_C_NULL C_CTRL_R;
MACRO_C_NULL C_CTRL_S;
MACRO_C_NULL C_CTRL_T;
MACRO_C_NULL C_CTRL_U;
MACRO_C_NULL C_CTRL_V;
MACRO_C_NULL C_CTRL_W;
MACRO_C_NULL C_CTRL_X;
MACRO_C_NULL C_CTRL_Y;
MACRO_C_NULL C_CTRL_Z;
MACRO_C_NULL C_CURRENCY;
MACRO_C C_CYAN;
MACRO_C_NULL C_DAGGER;
MACRO_C C_DARK_GRAY;
MACRO_C_LIGHT C_DARK_GREY;
MACRO_C_NULL C_DBLDAGGER;
MACRO_C_NULL C_DBLQUOTELOW;
MACRO_C_NUL C_DC1;
MACRO_C_NUL C_DC2;
MACRO_C_NUL C_DC3;
MACRO_C_NUL C_DC4;
MACRO_C_NULL C_DEGREE;
MACRO_C_NULL C_DELETE;
MACRO_C_NULL C_DIAMONDBULLET;
MACRO_C_NULL C_DIERESIS;
MACRO_C_NULL C_DIVISION;
MACRO_C_NULL C_DOLLAR_SIGN;
MACRO_C_NULL C_DOTACCENT;
MACRO_C_NULL C_EIGHT;
MACRO_C_NULL C_ELLIPSIS;
MACRO_C_NUL C_EM;
MACRO_C_NULL C_EMDASH;
MACRO_C_NULL C_EMSPACE;
MACRO_C_NULL C_ENDASH;
MACRO_C_NULL C_ENSPACE;
MACRO_C_NULL C_ENTER;
MACRO_C_NULL C_EQUAL;
MACRO_C_NUL C_ESC;
MACRO_C_NULL C_ESCAPE;
MACRO_C_NUL C_ETX;
MACRO_C_NULL C_EXCLAMATION;
MACRO_C_NULL C_EXCLAMDOWN;
MACRO_C_NUL C_FF;
MACRO_C_NUL C_FIELD_SEP;
MACRO_C_NULL C_FIVE;
MACRO_C_NULL C_FLORIN;
MACRO_C_NULL C_FOUR;
MACRO_C_NULL C_FRACTION;
MACRO_C_NUL C_FS;
MACRO_C_NULL C_GERMANDBLS;
MACRO_C_NULL C_GRAPHIC;
MACRO_C_NUL C_GRAVE;
MACRO_C_GRAY C_GRAY_0;
MACRO_C_GRAY C_GRAY_100;
MACRO_C_GRAY C_GRAY_13;
MACRO_C_GRAY C_GRAY_20;
MACRO_C_GRAY C_GRAY_27;
MACRO_C_GRAY C_GRAY_33;
MACRO_C_GRAY C_GRAY_40;
MACRO_C_GRAY C_GRAY_47;
MACRO_C_GRAY C_GRAY_53;
MACRO_C_GRAY C_GRAY_60;
MACRO_C_GRAY C_GRAY_68;
MACRO_C_GRAY C_GRAY_7;
MACRO_C_GRAY C_GRAY_73;
MACRO_C_GRAY C_GRAY_80;
MACRO_C_GRAY C_GRAY_88;
MACRO_C_GRAY C_GRAY_93;
MACRO_C_NULL C_GREATEREQUAL;
MACRO_C_NULL C_GREATER_THAN;
MACRO_C C_GREEN;
MACRO_C_NULL C_GUILLEDBLLEFT;
MACRO_C_NULL C_GUILLEDBLRIGHT;
MACRO_C_NULL C_GUILSNGLEFT;
MACRO_C_NULL C_GUILSNGRIGHT;
MACRO_C_NULL C_HUNGARUMLAT;
MACRO_C_NUL C_HYPHEN;
MACRO_C_NULL C_INFINITY;
MACRO_C_NULL C_INTEGRAL;
MACRO_C_NULL C_LA_ACUTE;
MACRO_C_NULL C_LA_CIRCUMFLEX;
MACRO_C_NULL C_LA_DIERESIS;
MACRO_C_NULL C_LA_GRAVE;
MACRO_C_NULL C_LA_RING;
MACRO_C_NULL C_LA_TILDE;
MACRO_C_NULL C_LC_CEDILLA;
MACRO_C_NULL C_LEFT_BRACE;
MACRO_C_NULL C_LEFT_BRACKET;
MACRO_C_NULL C_LEFT_PAREN;
MACRO_C_NULL C_LESSEQUAL;
MACRO_C_NULL C_LESS_THAN;
MACRO_C_NULL C_LE_ACUTE;
MACRO_C_NULL C_LE_CIRCUMFLEX;
MACRO_C_NULL C_LE_DIERESIS;
MACRO_C_NULL C_LE_GRAVE;
MACRO_C_NUL C_LF;
MACRO_C C_LIGHT_BLUE;
MACRO_C C_LIGHT_CYAN;
MACRO_C C_LIGHT_GRAY;
MACRO_C C_LIGHT_GREEN;
MACRO_C_LIGHT C_LIGHT_GREY;
MACRO_C C_LIGHT_RED;
MACRO_C C_LIGHT_VIOLET;
MACRO_C_NULL C_LINEFEED;
MACRO_C_NULL C_LI_ACUTE;
MACRO_C_NULL C_LI_CIRCUMFLEX;
MACRO_C_NULL C_LI_DIERESIS;
MACRO_C_NULL C_LI_DOTLESS;
MACRO_C_NULL C_LI_GRAVE;
MACRO_C_NULL C_LN_TILDE;
MACRO_C_NULL C_LOGICAL_NOT;
MACRO_C_NULL C_LOGO;
MACRO_C_NUL C_LOZENGE;
MACRO_C_NULL C_LO_ACUTE;
MACRO_C_NULL C_LO_CIRCUMFLEX;
MACRO_C_NULL C_LO_DIERESIS;
MACRO_C_NULL C_LO_GRAVE;
MACRO_C_NULL C_LO_SLASH;
MACRO_C_NULL C_LO_TILDE;
MACRO_C_NULL C_LU_ACUTE;
MACRO_C_NULL C_LU_CIRCUMFLEX;
MACRO_C_NULL C_LU_DIERESIS;
MACRO_C_NULL C_LU_GRAVE;
MACRO_C_NULL C_LY_ACUTE;
MACRO_C_NULL C_LY_DIERESIS;
MACRO_C_NULL C_L_AE;
MACRO_C_NULL C_L_DELTA;
MACRO_C_NULL C_L_MU;
MACRO_C_NULL C_L_OE;
MACRO_C_NULL C_L_PI;
MACRO_C_NULL C_MACRON;
MACRO_C_NULL C_MINUS;
MACRO_C_NULL C_NINE;
MACRO_C_NULL C_NONBRKHYPHEN;
MACRO_C_NULL C_NONBRKSPACE;
MACRO_C_NULL C_NOTEQUAL;
MACRO_C_NUL C_NUL;
MACRO_C_NULL C_NULL;
MACRO_C_NULL C_NULL_WIDTH;
MACRO_C_NULL C_NUMBER_SIGN;
MACRO_C_NULL C_OGONEK;
MACRO_C_NULL C_ONE;
MACRO_C_NULL C_OPTHYPHEN;
MACRO_C_NULL C_ORDFEMININE;
MACRO_C_NULL C_ORDMASCULINE;
MACRO_C_NULL C_PARAGRAPH;
MACRO_C_NUL C_PARTIAL_DIFF;
MACRO_C_NULL C_PERCENT;
MACRO_C_NULL C_PERIOD;
MACRO_C_NULL C_PERTHOUSAND;
MACRO_C_NULL C_PLUS;
MACRO_C_NULL C_PLUSMINUS;
MACRO_C_NUL C_PRODUCT;
MACRO_C_NULL C_QUESTIONDOWN;
MACRO_C_NULL C_QUESTION_MARK;
MACRO_C_NULL C_QUOTE;
MACRO_C_NULL C_QUOTEDBLLEFT;
MACRO_C_NULL C_QUOTEDBLRIGHT;
MACRO_C_NULL C_QUOTESNGLEFT;
MACRO_C_NULL C_QUOTESNGRIGHT;
MACRO_C_GRAY C_R0_G0_B0;
MACRO_C_GRAY C_R0_G0_B1;
MACRO_C_GRAY C_R0_G0_B2;
MACRO_C_GRAY C_R0_G0_B3;
MACRO_C_GRAY C_R0_G0_B4;
MACRO_C_GRAY C_R0_G0_B5;
MACRO_C_GRAY C_R0_G1_B0;
MACRO_C_GRAY C_R0_G1_B1;
MACRO_C_GRAY C_R0_G1_B2;
MACRO_C_GRAY C_R0_G1_B3;
MACRO_C_GRAY C_R0_G1_B4;
MACRO_C_GRAY C_R0_G1_B5;
MACRO_C_GRAY C_R0_G2_B0;
MACRO_C_GRAY C_R0_G2_B1;
MACRO_C_GRAY C_R0_G2_B2;
MACRO_C_GRAY C_R0_G2_B3;
MACRO_C_GRAY C_R0_G2_B4;
MACRO_C_GRAY C_R0_G2_B5;
MACRO_C_GRAY C_R0_G3_B0;
MACRO_C_GRAY C_R0_G3_B1;
MACRO_C_GRAY C_R0_G3_B2;
MACRO_C_GRAY C_R0_G3_B3;
MACRO_C_GRAY C_R0_G3_B4;
MACRO_C_GRAY C_R0_G3_B5;
MACRO_C_GRAY C_R0_G4_B0;
MACRO_C_GRAY C_R0_G4_B1;
MACRO_C_GRAY C_R0_G4_B2;
MACRO_C_GRAY C_R0_G4_B3;
MACRO_C_GRAY C_R0_G4_B4;
MACRO_C_GRAY C_R0_G4_B5;
MACRO_C_GRAY C_R0_G5_B0;
MACRO_C_GRAY C_R0_G5_B1;
MACRO_C_GRAY C_R0_G5_B2;
MACRO_C_GRAY C_R0_G5_B3;
MACRO_C_GRAY C_R0_G5_B4;
MACRO_C_GRAY C_R0_G5_B5;
MACRO_C_GRAY C_R1_G0_B0;
MACRO_C_GRAY C_R1_G0_B1;
MACRO_C_GRAY C_R1_G0_B2;
MACRO_C_GRAY C_R1_G0_B3;
MACRO_C_GRAY C_R1_G0_B4;
MACRO_C_GRAY C_R1_G0_B5;
MACRO_C_GRAY C_R1_G1_B0;
MACRO_C_GRAY C_R1_G1_B1;
MACRO_C_GRAY C_R1_G1_B2;
MACRO_C_GRAY C_R1_G1_B3;
MACRO_C_GRAY C_R1_G1_B4;
MACRO_C_GRAY C_R1_G1_B5;
MACRO_C_GRAY C_R1_G2_B0;
MACRO_C_GRAY C_R1_G2_B1;
MACRO_C_GRAY C_R1_G2_B2;
MACRO_C_GRAY C_R1_G2_B3;
MACRO_C_GRAY C_R1_G2_B4;
MACRO_C_GRAY C_R1_G2_B5;
MACRO_C_GRAY C_R1_G3_B0;
MACRO_C_GRAY C_R1_G3_B1;
MACRO_C_GRAY C_R1_G3_B2;
MACRO_C_GRAY C_R1_G3_B3;
MACRO_C_GRAY C_R1_G3_B4;
MACRO_C_GRAY C_R1_G3_B5;
MACRO_C_GRAY C_R1_G4_B0;
MACRO_C_GRAY C_R1_G4_B1;
MACRO_C_GRAY C_R1_G4_B2;
MACRO_C_GRAY C_R1_G4_B3;
MACRO_C_GRAY C_R1_G4_B4;
MACRO_C_GRAY C_R1_G4_B5;
MACRO_C_GRAY C_R1_G5_B0;
MACRO_C_GRAY C_R1_G5_B1;
MACRO_C_GRAY C_R1_G5_B2;
MACRO_C_GRAY C_R1_G5_B3;
MACRO_C_GRAY C_R1_G5_B4;
MACRO_C_GRAY C_R1_G5_B5;
MACRO_C_GRAY C_R2_G0_B0;
MACRO_C_GRAY C_R2_G0_B1;
MACRO_C_GRAY C_R2_G0_B2;
MACRO_C_GRAY C_R2_G0_B3;
MACRO_C_GRAY C_R2_G0_B4;
MACRO_C_GRAY C_R2_G0_B5;
MACRO_C_GRAY C_R2_G1_B0;
MACRO_C_GRAY C_R2_G1_B1;
MACRO_C_GRAY C_R2_G1_B2;
MACRO_C_GRAY C_R2_G1_B3;
MACRO_C_GRAY C_R2_G1_B4;
MACRO_C_GRAY C_R2_G1_B5;
MACRO_C_GRAY C_R2_G2_B0;
MACRO_C_GRAY C_R2_G2_B1;
MACRO_C_GRAY C_R2_G2_B2;
MACRO_C_GRAY C_R2_G2_B3;
MACRO_C_GRAY C_R2_G2_B4;
MACRO_C_GRAY C_R2_G2_B5;
MACRO_C_GRAY C_R2_G3_B0;
MACRO_C_GRAY C_R2_G3_B1;
MACRO_C_GRAY C_R2_G3_B2;
MACRO_C_GRAY C_R2_G3_B3;
MACRO_C_GRAY C_R2_G3_B4;
MACRO_C_GRAY C_R2_G3_B5;
MACRO_C_GRAY C_R2_G4_B0;
MACRO_C_GRAY C_R2_G4_B1;
MACRO_C_GRAY C_R2_G4_B2;
MACRO_C_GRAY C_R2_G4_B3;
MACRO_C_GRAY C_R2_G4_B4;
MACRO_C_GRAY C_R2_G4_B5;
MACRO_C_GRAY C_R2_G5_B0;
MACRO_C_GRAY C_R2_G5_B1;
MACRO_C_GRAY C_R2_G5_B2;
MACRO_C_GRAY C_R2_G5_B3;
MACRO_C_GRAY C_R2_G5_B4;
MACRO_C_GRAY C_R2_G5_B5;
MACRO_C_GRAY C_R3_G0_B0;
MACRO_C_GRAY C_R3_G0_B1;
MACRO_C_GRAY C_R3_G0_B2;
MACRO_C_GRAY C_R3_G0_B3;
MACRO_C_GRAY C_R3_G0_B4;
MACRO_C_GRAY C_R3_G0_B5;
MACRO_C_GRAY C_R3_G1_B0;
MACRO_C_GRAY C_R3_G1_B1;
MACRO_C_GRAY C_R3_G1_B2;
MACRO_C_GRAY C_R3_G1_B3;
MACRO_C_GRAY C_R3_G1_B4;
MACRO_C_GRAY C_R3_G1_B5;
MACRO_C_GRAY C_R3_G2_B0;
MACRO_C_GRAY C_R3_G2_B1;
MACRO_C_GRAY C_R3_G2_B2;
MACRO_C_GRAY C_R3_G2_B3;
MACRO_C_GRAY C_R3_G2_B4;
MACRO_C_GRAY C_R3_G2_B5;
MACRO_C_GRAY C_R3_G3_B0;
MACRO_C_GRAY C_R3_G3_B1;
MACRO_C_GRAY C_R3_G3_B2;
MACRO_C_GRAY C_R3_G3_B3;
MACRO_C_GRAY C_R3_G3_B4;
MACRO_C_GRAY C_R3_G3_B5;
MACRO_C_GRAY C_R3_G4_B0;
MACRO_C_GRAY C_R3_G4_B1;
MACRO_C_GRAY C_R3_G4_B2;
MACRO_C_GRAY C_R3_G4_B3;
MACRO_C_GRAY C_R3_G4_B4;
MACRO_C_GRAY C_R3_G4_B5;
MACRO_C_GRAY C_R3_G5_B0;
MACRO_C_GRAY C_R3_G5_B1;
MACRO_C_GRAY C_R3_G5_B2;
MACRO_C_GRAY C_R3_G5_B3;
MACRO_C_GRAY C_R3_G5_B4;
MACRO_C_GRAY C_R3_G5_B5;
MACRO_C_GRAY C_R4_G0_B0;
MACRO_C_GRAY C_R4_G0_B1;
MACRO_C_GRAY C_R4_G0_B2;
MACRO_C_GRAY C_R4_G0_B3;
MACRO_C_GRAY C_R4_G0_B4;
MACRO_C_GRAY C_R4_G0_B5;
MACRO_C_GRAY C_R4_G1_B0;
MACRO_C_GRAY C_R4_G1_B1;
MACRO_C_GRAY C_R4_G1_B2;
MACRO_C_GRAY C_R4_G1_B3;
MACRO_C_GRAY C_R4_G1_B4;
MACRO_C_GRAY C_R4_G1_B5;
MACRO_C_GRAY C_R4_G2_B0;
MACRO_C_GRAY C_R4_G2_B1;
MACRO_C_GRAY C_R4_G2_B2;
MACRO_C_GRAY C_R4_G2_B3;
MACRO_C_GRAY C_R4_G2_B4;
MACRO_C_GRAY C_R4_G2_B5;
MACRO_C_GRAY C_R4_G3_B0;
MACRO_C_GRAY C_R4_G3_B1;
MACRO_C_GRAY C_R4_G3_B2;
MACRO_C_GRAY C_R4_G3_B3;
MACRO_C_GRAY C_R4_G3_B4;
MACRO_C_GRAY C_R4_G3_B5;
MACRO_C_GRAY C_R4_G4_B0;
MACRO_C_GRAY C_R4_G4_B1;
MACRO_C_GRAY C_R4_G4_B2;
MACRO_C_GRAY C_R4_G4_B3;
MACRO_C_GRAY C_R4_G4_B4;
MACRO_C_GRAY C_R4_G4_B5;
MACRO_C_GRAY C_R4_G5_B0;
MACRO_C_GRAY C_R4_G5_B1;
MACRO_C_GRAY C_R4_G5_B2;
MACRO_C_GRAY C_R4_G5_B3;
MACRO_C_GRAY C_R4_G5_B4;
MACRO_C_GRAY C_R4_G5_B5;
MACRO_C_GRAY C_R5_G0_B0;
MACRO_C_GRAY C_R5_G0_B1;
MACRO_C_GRAY C_R5_G0_B2;
MACRO_C_GRAY C_R5_G0_B3;
MACRO_C_GRAY C_R5_G0_B4;
MACRO_C_GRAY C_R5_G0_B5;
MACRO_C_GRAY C_R5_G1_B0;
MACRO_C_GRAY C_R5_G1_B1;
MACRO_C_GRAY C_R5_G1_B2;
MACRO_C_GRAY C_R5_G1_B3;
MACRO_C_GRAY C_R5_G1_B4;
MACRO_C_GRAY C_R5_G1_B5;
MACRO_C_GRAY C_R5_G2_B0;
MACRO_C_GRAY C_R5_G2_B1;
MACRO_C_GRAY C_R5_G2_B2;
MACRO_C_GRAY C_R5_G2_B3;
MACRO_C_GRAY C_R5_G2_B4;
MACRO_C_GRAY C_R5_G2_B5;
MACRO_C_GRAY C_R5_G3_B0;
MACRO_C_GRAY C_R5_G3_B1;
MACRO_C_GRAY C_R5_G3_B2;
MACRO_C_GRAY C_R5_G3_B3;
MACRO_C_GRAY C_R5_G3_B4;
MACRO_C_GRAY C_R5_G3_B5;
MACRO_C_GRAY C_R5_G4_B0;
MACRO_C_GRAY C_R5_G4_B1;
MACRO_C_GRAY C_R5_G4_B2;
MACRO_C_GRAY C_R5_G4_B3;
MACRO_C_GRAY C_R5_G4_B4;
MACRO_C_GRAY C_R5_G4_B5;
MACRO_C_GRAY C_R5_G5_B0;
MACRO_C_GRAY C_R5_G5_B1;
MACRO_C_GRAY C_R5_G5_B2;
MACRO_C_GRAY C_R5_G5_B3;
MACRO_C_GRAY C_R5_G5_B4;
MACRO_C_GRAY C_R5_G5_B5;
MACRO_C_NUL C_RADICAL;
MACRO_C C_RED;
MACRO_C_NULL C_REGISTERED;
MACRO_C_NULL C_RIGHT_BRACE;
MACRO_C_NULL C_RIGHT_BRACKET;
MACRO_C_NULL C_RIGHT_PAREN;
MACRO_C_NULL C_RING;
MACRO_C_NULL C_ROOT;
MACRO_C_NULL C_SECTION;
MACRO_C_NULL C_SEMICOLON;
MACRO_C_NULL C_SEVEN;
MACRO_C_NULL C_SHIFT_IN;
MACRO_C_NULL C_SHIFT_OUT;
MACRO_C_NULL C_SIX;
MACRO_C_NULL C_SLASH;
MACRO_C_NULL C_SMALL_A;
MACRO_C_NULL C_SMALL_B;
MACRO_C_NULL C_SMALL_C;
MACRO_C_NULL C_SMALL_D;
MACRO_C_NULL C_SMALL_E;
MACRO_C_NULL C_SMALL_F;
MACRO_C_NULL C_SMALL_G;
MACRO_C_NULL C_SMALL_H;
MACRO_C_NULL C_SMALL_I;
MACRO_C_NULL C_SMALL_J;
MACRO_C_NULL C_SMALL_K;
MACRO_C_NULL C_SMALL_L;
MACRO_C_NULL C_SMALL_M;
MACRO_C_NULL C_SMALL_N;
MACRO_C_NULL C_SMALL_O;
MACRO_C_NULL C_SMALL_P;
MACRO_C_NULL C_SMALL_Q;
MACRO_C_NULL C_SMALL_R;
MACRO_C_NULL C_SMALL_S;
MACRO_C_NULL C_SMALL_T;
MACRO_C_NULL C_SMALL_U;
MACRO_C_NULL C_SMALL_V;
MACRO_C_NULL C_SMALL_W;
MACRO_C_NULL C_SMALL_X;
MACRO_C_NULL C_SMALL_Y;
MACRO_C_NULL C_SMALL_Z;
MACRO_C_NULL C_SNGQUOTELOW;
MACRO_C_NULL C_SNG_QUOTE;
MACRO_C_NULL C_SPACE;
MACRO_C_NULL C_STERLING;
MACRO_C_NUL C_STX;
MACRO_C_NUL C_SUM;
MACRO_C_NULL C_TAB;
MACRO_C_NULL C_THINSPACE;
MACRO_C_NULL C_THREE;
MACRO_C_NULL C_TILDE;
MACRO_C_NULL C_TRADEMARK;
MACRO_C_NULL C_TWO;
MACRO_C_NULL C_UA_ACUTE;
MACRO_C_NULL C_UA_CIRCUMFLEX;
MACRO_C_NULL C_UA_DIERESIS;
MACRO_C_NULL C_UA_GRAVE;
MACRO_C_NULL C_UA_RING;
MACRO_C_NULL C_UA_TILDE;
MACRO_C_NULL C_UC_CEDILLA;
MACRO_C_NULL C_UE_ACUTE;
MACRO_C_NULL C_UE_CIRCUMFLEX;
MACRO_C_NULL C_UE_DIERESIS;
MACRO_C_NULL C_UE_GRAVE;
MACRO_C_NULL C_UI_ACUTE;
MACRO_C_NULL C_UI_CIRCUMFLEX;
MACRO_C_NULL C_UI_DIERESIS;
MACRO_C_NULL C_UI_GRAVE;
MACRO_C_NULL C_UNDERSCORE;
MACRO_C_GRAY C_UNUSED_0;
MACRO_C_GRAY C_UNUSED_1;
MACRO_C_GRAY C_UNUSED_2;
MACRO_C_GRAY C_UNUSED_3;
MACRO_C_GRAY C_UNUSED_4;
MACRO_C_GRAY C_UNUSED_5;
MACRO_C_GRAY C_UNUSED_6;
MACRO_C_GRAY C_UNUSED_7;
MACRO_C_NULL C_UN_TILDE;
MACRO_C_NULL C_UO_ACUTE;
MACRO_C_NULL C_UO_CIRCUMFLEX;
MACRO_C_NULL C_UO_DIERESIS;
MACRO_C_NULL C_UO_GRAVE;
MACRO_C_NULL C_UO_SLASH;
MACRO_C_NULL C_UO_TILDE;
MACRO_C_NULL C_UU_ACUTE;
MACRO_C_NULL C_UU_CIRCUMFLEX;
MACRO_C_NULL C_UU_DIERESIS;
MACRO_C_NULL C_UU_GRAVE;
MACRO_C_NULL C_UY_ACUTE;
MACRO_C_NULL C_UY_DIERESIS;
MACRO_C_NULL C_U_AE;
MACRO_C_NULL C_U_DELTA;
MACRO_C_NULL C_U_OE;
MACRO_C_NULL C_U_OMEGA;
MACRO_C_NULL C_U_PI;
MACRO_C_NULL C_U_SIGMA;
MACRO_C_NULL C_VERTICAL_BAR;
MACRO_C C_VIOLET;
MACRO_C_NUL C_VT;
MACRO_C C_WHITE;
MACRO_C C_YELLOW;
MACRO_C_NULL C_YEN;
MACRO_C_NULL C_ZERO;
MACRO_CenterLeftRightWidth CenterLeftRightWidth;
MACRO_CenterLeftRightWidth CenterLeftRightWidth_OFFSET;
MACRO_CenterTopBottomHeight CenterTopBottomHeight;
MACRO_CenterTopBottomHeight CenterTopBottomHeight_OFFSET;
MACRO_DACRB DACPF_CATENATE;
MACRO_DACRB DACRB_NO_REFERENCE_BYTE;
MACRO_DACRB DACRB_WITH_REFERENCE_BYTE;
MACRO_DACSF DACSF_2_TO_1_ADPCM;
MACRO_DACSF DACSF_3_TO_1_ADPCM;
MACRO_DACSF DACSF_4_TO_1_ADPCM;
MACRO_DACSF DACSF_8_BIT_PCM;
MACRO_DAR DAR_NORMAL;
MACRO_DAR DAR_SQUISHED;
MACRO_DAR DAR_VERY_SQUISHED;
MACRO_DATABASE DATABASE_NAME_LIST;
MACRO_DATA DATA_GROUP_TEXT_BUFFER_LENGTH;
MACRO_DIRECTION DATETIME_STRING_LENGTH;
MACRO_SECOND DATE_NUMBER_MAX;
MACRO_SECOND DATE_NUMBER_MIN;
MACRO_TOKEN_LENGTH DATE_TIME_BUFFER_SIZE;
MACRO_TOKEN_LENGTH DATE_TIME_FORMAT_SIZE;
MACRO_MONTH_MIN DAY_MAX;
MACRO_DAY DAY_MIN;
MACRO_DA DA_CHARACTER;
MACRO_DA DA_FILE_SYSTEM;
MACRO_DA DA_HAS_EXTENDED_INFO;
MACRO_DBCS DBCS_GEOS;
void __pascal DBDELETEATUNGROUPED(VMFileHandle file, DBGroupAndItem id, word deleteOffset, word deleteCount);
void __pascal DBDIRTY(const void *ptr);
void __pascal DBFREEUNGROUPED(VMFileHandle file, DBGroupAndItem id);
MACRO_DLF_INDEX DBF_LOG_RCVD;
DBGroupAndItem __pascal DBGETMAP(VMFileHandle file);
DBGroup __pascal DBGROUPALLOC(VMFileHandle file);
void __pascal DBGROUPFREE(VMFileHandle file, DBGroup group);
Boolean __pascal DBINFOUNGROUPED(VMFileHandle file, DBGroupAndItem grpAndItem, word *sizePtr);
void __pascal DBINSERTATUNGROUPED(VMFileHandle file, DBGroupAndItem id, word insertOffset, word insertCount);
void *__pascal DBLOCKGETREFUNGROUPED(VMFileHandle file, DBGroupAndItem id, optr *refPtr);
void *__pascal DBLOCKUNGROUPED(VMFileHandle file, DBGroupAndItem id);
DBGroupAndItem __pascal DBRAWALLOC(VMFileHandle file, DBGroup group, word size);
DBGroupAndItem __pascal DBRAWCOPYDBITEM(VMFileHandle srcFile, DBGroupAndItem srcID, VMFileHandle destFile, DBGroup destGroup);
void __pascal DBREALLOCUNGROUPED(VMFileHandle file, DBGroupAndItem id, word size);
void __pascal DBSETMAPUNGROUPED(VMFileHandle file, DBGroupAndItem id);
void __pascal DBUNLOCK(void *ptr);
$1E2C1667D0E65F4DBAC4B37F866C6A90 DB_GROUP_ID;
$1E2C1667D0E65F4DBAC4B37F866C6A90 DB_ITEM_BLOCK_ID;
$1E2C1667D0E65F4DBAC4B37F866C6A90 DB_MAP_ID;
MACRO_DB DB_UNGROUPED;
MACRO_DCCF DCCF_DROP_CAP;
MACRO_DCC DCC_DEFAULT_FEATURES;
MACRO_DCC DCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_DC DC_CF_RGB;
MACRO_DC DC_COLOR_2;
MACRO_DC DC_COLOR_4;
MACRO_DC DC_COLOR_8;
MACRO_DC DC_GRAY_1;
MACRO_DC DC_GRAY_2;
MACRO_DC DC_GRAY_4;
MACRO_DC DC_GRAY_8;
MACRO_DC DC_TEXT;
MACRO_FPSIZE DECIMAL_EXPONENT_LOWER_LIMIT;
MACRO_FPSIZE DECIMAL_EXPONENT_UPPER_LIMIT;
MACRO_DECIMAL DECIMAL_PRECISION;
MACRO_DEFAULT_BACKLIGHT DEFAULT_BACKLIGHT_LEVEL;
MACRO_DEFAULT_CLASS DEFAULT_CLASS_MESSAGES;
MACRO_LT DEFAULT_CLIENT_IP_ADDR;
MACRO_DEFAULT_DESIRED DEFAULT_DESIRED_HANDLE_SIZE;
MACRO_DEFAULT_EXPORTED DEFAULT_EXPORTED_MESSAGES;
MACRO_DEFAULT_EXPORTED DEFAULT_EXPORTED_MESSAGES_2;
MACRO_DEFAULT_EXPORTED DEFAULT_EXPORTED_MESSAGES_3;
MACRO_DEFAULT_EXPORTED DEFAULT_EXPORTED_MESSAGES_4;
MACRO_DEFAULT_EXPORTED DEFAULT_EXPORTED_MESSAGES_5;
MACRO_DEFAULT_EXPORTED DEFAULT_EXPORTED_MESSAGES_6;
MACRO_DEFAULT_FIELD_HEIGHT DEFAULT_FIELD_HEIGHT;
MACRO_FIRST_FIELD DEFAULT_FIELD_WIDTH;
MACRO_DEFAULT_FIELD DEFAULT_FIELD_X_POSITION;
MACRO_DEFAULT DEFAULT_FONT_ID;
MACRO_DEFAULT_FONT DEFAULT_FONT_SIZE;
MACRO_DEFAULT_GUIDE DEFAULT_GUIDE_INFLUENCE;
MACRO_DEFAULT_IMPORT DEFAULT_IMPORT_FIELD_WIDTH;
MACRO_A DEFAULT_LABEL_WIDTH;
MACRO_DEFAULT_LABEL DEFAULT_LABEL_X_POSITION;
MACRO_DEFAULT_LOCK DEFAULT_LOCK_TIME_OUT;
MACRO_DEFAULT_MASTER DEFAULT_MASTER_MESSAGES;
MACRO_MPD_PASS_INFO DEFAULT_MAX_BLOCK_NUMBER;
MACRO_DEFAULT_MAX DEFAULT_MAX_LINE_WIDTH;
MACRO_DEFAULT_RECORD_BOUNDARY_LINE DEFAULT_MULTI_RECORD_BOUNDARY_LINE_WIDTH;
MACRO_DEFAULT_PAGE DEFAULT_PAGE_MARGIN;
MACRO_DEFAULT_LABEL DEFAULT_PAGE_NUMBER_WIDTH;
MACRO_DEFAULT_RECORD_BOUNDARY DEFAULT_RECORD_BOUNDARY_HEIGHT;
MACRO_DEFAULT_RECORD_BOUNDARY_LINE DEFAULT_RECORD_BOUNDARY_LINE_WIDTH;
MACRO_DEFAULT_RECORD_BOUNDARY DEFAULT_RECORD_BOUNDARY_WIDTH;
MACRO_DEFAULT_RECORD DEFAULT_RECORD_BOUNDARY_X_POSITION;
MACRO_DEFAULT_RECORD DEFAULT_RECORD_BOUNDARY_Y_POSITION;
MACRO_LT DEFAULT_SERVER_IP_ADDR;
MACRO_DEFAULT_FIELD_HEIGHT DEFAULT_Y_DISTANCE_BETWEEN_FIELDS;
MACRO_DEFAULT_ZOOM DEFAULT_ZOOM_MAXIMUM;
MACRO_DEFAULT_ZOOM DEFAULT_ZOOM_MINIMUM;
MACRO_DEF_FORCED DEF_FORCED_SHUTDOWN;
MACRO_DEF_INTERACTIVE DEF_INTERACTIVE;
MACRO_DEF_PARA DEF_PARA_ATTR_CENTER;
MACRO_DEF_PARA_ATTR DEF_PARA_ATTR_RIGHT;
MACRO_DEF DEF_PROMPT;
MACRO_ADDED DELETED;
MACRO_SOURCE DESTINATION;
MACRO_CLSF DESTINATION_TYPE_TEXT_BUFFER_LENGTH;
MACRO_DESTROY DESTROY_ON_EOS;
MACRO_DES DES_ALIAS;
MACRO_DES DES_BUSY;
MACRO_DES DES_FORMATTABLE;
MACRO_DES DES_LOCAL_ONLY;
MACRO_DES DES_READ_ONLY;
MACRO_DFF DFF_CALLBACK_CYL_HEAD;
MACRO_DISK DFF_CALLBACK_PCT_DONE;
MACRO_DFF_FORCE DFF_FORCE_ERASE;
MACRO_DFNU DFNU_COLUMN;
MACRO_DFNU DFNU_FIELD;
MACRO_DFNU DFNU_FIXED;
$890BC88F75D92222BBDFEE843EA4450E DFR_NOT_FOUND;
$890BC88F75D92222BBDFEE843EA4450E DFR_NOT_UNIQUE;
$890BC88F75D92222BBDFEE843EA4450E DFR_UNIQUE;
MACRO_DF DF_DICT;
MACRO_DF_EXPOSED DF_DISPLAY_TYPE;
MACRO_DF_EXPOSED DF_DONT_DRAW_CHILDREN;
MACRO_EVAL_MAX_NESTED_LEVELS DF_DONT_POP_ARGUMENT;
MACRO_DF_EXPOSED DF_EXPOSED;
MACRO_DF_EXPOSED DF_OBJECT_SPECIFIC;
MACRO_DF_EXPOSED DF_PRINT;
$CAC17B8F1D131D022D498B43B69E80A4 DG_ALL_DATA;
$CAC17B8F1D131D022D498B43B69E80A4 DG_CALENDAR;
$CAC17B8F1D131D022D498B43B69E80A4 DG_CONTACTS;
$CAC17B8F1D131D022D498B43B69E80A4 DG_DOCUMENTS;
MACRO_DICT DICT_GCM_FEATURES;
MACRO_DICT_GCM DICT_GCM_TOOLBOX_FEATURES;
MACRO_DIRECTION DIRECTION_STRING_LENGTH;
MACRO_ECHO DISCARD;
Boolean __pascal DISKCHECKINUSE(DiskHandle disk);
Boolean __pascal DISKCHECKUNNAMED(DiskHandle disk);
Boolean __pascal DISKCHECKWRITABLE(DiskHandle disk);
DiskCopyError __pascal DISKCOPY(word source, word dest, Boolean (__pascal *callback)(DiskCopyCallback code, DiskHandle disk, word param));
DiskHandle __pascal DISKFIND(const char *fname, DiskFindResult *code);
DiskHandle __pascal DISKFOREACH(Boolean (__pascal *callback)(DiskHandle disk));
FormatError __pascal DISKFORMAT(word driveNumber, MediaType media, DiskFormatFlags flags, dword *goodClusters, dword *badClusters, DiskHandle disk, char *volumeName, Boolean (__pascal *callback)(word percentDone));
word __pascal DISKGETDRIVE(DiskHandle disk);
dword __pascal DISKGETVOLUMEFREESPACE(DiskHandle dh);
word __pascal DISKGETVOLUMEINFO(DiskHandle dh, DiskInfoStruct *info);
void __pascal DISKGETVOLUMENAME(DiskHandle disk, char *buffer);
DiskHandle __pascal DISKREGISTERDISK(word driveNumber);
DiskHandle __pascal DISKREGISTERDISKSILENTLY(word driveNumber);
DiskHandle __pascal DISKRESTORE(void *buffer, DiskRestoreError (__pascal *callback)(const char *driveName, const char *diskName, void **bufferPtr, DiskRestoreError errorPtr));
Boolean __pascal DISKSAVE(DiskHandle disk, void *buffer, word *bufSizePtr);
word __pascal DISKSETVOLUMENAME(DiskHandle dh, const char *name);
MACRO_DISK DISK_IS_STD_PATH_MASK;
MACRO_DISK_SPACE DISK_SPACE_CRITICAL;
MACRO_DISK2 DISK_SPACE_LOW;
MACRO_DLF DLF_ABORTED;
MACRO_DLF_INFO_SIZE DLF_INDEX;
MACRO_DLF_INDEX DLF_INDEX_OFFSET;
MACRO_DLF DLF_INFO_SIZE;
MACRO_DLF_INFO_SIZE DLF_INFO_SIZE_OFFSET;
MACRO_DLF DLF_MEDIA_BUSY;
MACRO_DLF DLF_REMOTE;
MACRO_DLF DLF_SNIFF;
MACRO_DLF DLF_SOLICITED;
MACRO_IDT DLF_VALID;
MACRO_DMC DMC_DEFAULT;
MACRO_DMC DMC_INVERTED;
MACRO_DMC DMC_NO_CHANGE;
MACRO_DMC DMC_TOGGLE;
MACRO_DMD DMD_DEFAULT;
MACRO_DMD DMD_HIGH;
MACRO_DMD DMD_NO_CHANGE;
MACRO_DMD DMD_TOGGLE;
MACRO_DMF DMF_CLIP_TO_MAX_WIDTH;
MACRO_DMF DMF_NONE;
MACRO_VIFGT DMF_TEXT_ONLY;
MACRO_DMF DMF_UNDERLINE_ACCELERATOR;
MACRO_DMF DMF_X_JUST_MASK;
MACRO_DMF_Y DMF_X_JUST_OFFSET;
MACRO_DMF DMF_Y_JUST_MASK;
MACRO_DMF_Y DMF_Y_JUST_OFFSET;
MACRO_DMO DMO_DEFAULT;
MACRO_DMO DMO_NO_CHANGE;
MACRO_DMO DMO_PORTRAIT;
MACRO_DMO DMO_TOGGLE;
MACRO_DMR DMR_DEFAULT;
MACRO_DMR DMR_HIGH;
MACRO_DMR DMR_NO_CHANGE;
MACRO_DMR DMR_TOGGLE;
MACRO_DMR DM_color;
MACRO_DM DM_color_OFFSET;
MACRO_DM_orientation DM_definition;
MACRO_DM_definition DM_definition_OFFSET;
MACRO_DM DM_orientation;
MACRO_DM_orientation DM_orientation_OFFSET;
MACRO_DM_definition DM_resolution;
MACRO_DM_resolution DM_resolution_OFFSET;
MACRO_DOF DOF_CREATE_FILE_IF_FILE_DOES_NOT_EXIST;
MACRO_DOF DOF_FORCE_REAL_EMPTY_DOCUMENT;
MACRO_DOF DOF_FORCE_TEMPLATE_BEHAVIOR;
MACRO_DOF DOF_NAME_HOLDS_FILE_ID;
MACRO_DOF DOF_OPEN_FOR_IACP_ONLY;
MACRO_DOF DOF_RAISE_APP_AND_DOC;
MACRO_DOF DOF_REOPEN;
MACRO_DOF DOF_SAVE_AS_OVERWRITE_EXISTING_FILE;
MACRO_ECHO DOMAIN_SERVER;
MACRO_DRAW2 DONT_DRAW;
$31F4A8F425A43C1740760E7FEB04741B DONT_SELECT_AFTER_EDIT;
MACRO_DOS_NO_DOT_DOS DOS_DOT_DOS_FILE_NAME_LENGTH;
MACRO_DOS_NO_DOT_DOS_FILE DOS_DOT_DOS_FILE_NAME_LENGTH_ZT;
MACRO_DOS_NO_DOT_DOS_FILE_NAME DOS_DOT_DOS_FILE_NAME_SIZE;
MACRO_DOS_FILE_NAME DOS_DOT_FILE_NAME_LENGTH;
MACRO_DOS_NO DOS_DOT_FILE_NAME_LENGTH_ZT;
MACRO_DOS_NO_DOT DOS_DOT_FILE_NAME_SIZE;
MACRO_DOS DOS_DRIVE_REF_LENGTH;
MACRO_DOS_FILE DOS_FILE_NAME_CORE_LENGTH;
MACRO_DOS_FILE_NAME DOS_FILE_NAME_EXT_LENGTH;
MACRO_DOS_NO_DOT_DOS DOS_NO_DOT_DOS_FILE_NAME_LENGTH;
MACRO_DOS_NO_DOT_DOS_FILE DOS_NO_DOT_DOS_FILE_NAME_LENGTH_ZT;
MACRO_DOS_NO_DOT_DOS_FILE_NAME DOS_NO_DOT_DOS_FILE_NAME_SIZE;
MACRO_DOS_FILE_NAME DOS_NO_DOT_FILE_NAME_LENGTH;
MACRO_DOS_NO DOS_NO_DOT_FILE_NAME_LENGTH_ZT;
MACRO_DOS_NO_DOT DOS_NO_DOT_FILE_NAME_SIZE;
MACRO_DOS DOS_STD_PATH_LENGTH;
MACRO_DOTTED_EIGHTH DOTTED_EIGHTH;
MACRO_DOTTED DOTTED_HALF;
MACRO_DOTTED_QUARTER DOTTED_QUARTER;
MACRO_DOTTED_SIXTEENTH DOTTED_SIXTEENTH;
MACRO_DOTTED_THIRTYSECOND DOTTED_THIRTYSECOND;
MACRO_DOUBLE_DOT_SIXTEENTH DOTTED_WHOLE;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_FRIDAY;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_MONDAY;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_SATURDAY;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_SUNDAY;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_THURSDAY;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_TUESAY;
$8F20B6CA164593CDB33CDFB420FC5CE4 DOTW_WEDNESDAY;
MACRO_DOUBLE_DOT_EIGHTH DOUBLE_DOT_EIGHTH;
MACRO_DOUBLE DOUBLE_DOT_HALF;
MACRO_DOUBLE_DOT DOUBLE_DOT_QUARTER;
MACRO_DOUBLE_DOT_SIXTEENTH DOUBLE_DOT_SIXTEENTH;
MACRO_ONE DOUBLE_DOT_WHOLE;
MACRO_DPI DPI_ENTRY_NUMBER_IN_PATH;
MACRO_DPI_ENTRY DPI_ENTRY_NUMBER_IN_PATH_OFFSET;
MACRO_FILE_RIGHTS DPI_EXISTS_LOCALLY;
MACRO_DPI_ENTRY DPI_STD_PATH;
MACRO_DPI_STD DPI_STD_PATH_OFFSET;
$49A544EF34D2802EAC69A6AC23FC1A6B DP_CANT_TELL;
$49A544EF34D2802EAC69A6AC23FC1A6B DP_INVALID_DEVICE;
$49A544EF34D2802EAC69A6AC23FC1A6B DP_NOT_PRESENT;
$49A544EF34D2802EAC69A6AC23FC1A6B DP_PRESENT;
$11BE9D4940848FB94A5DB8ED83C1A452 DQS_CANCEL;
$11BE9D4940848FB94A5DB8ED83C1A452 DQS_DELAYED;
$11BE9D4940848FB94A5DB8ED83C1A452 DQS_OK;
$11BE9D4940848FB94A5DB8ED83C1A452 DQS_SAVE_ERROR;
MACRO_DRAW2 DRAW;
MACRO_DRAW DRAW_MMC_ICON;
MACRO_DRAW DRAW_TONE_ICON;
$19B9D80A0D679364B81427CE8B49472D DRE_ALL_DRIVES_USED;
$19B9D80A0D679364B81427CE8B49472D DRE_COULDNT_CREATE_NEW_DISK_HANDLE;
$19B9D80A0D679364B81427CE8B49472D DRE_DISK_IN_DRIVE;
$19B9D80A0D679364B81427CE8B49472D DRE_DRIVE_NO_LONGER_EXISTS;
$19B9D80A0D679364B81427CE8B49472D DRE_NOT_ATTACHED_TO_SERVER;
$19B9D80A0D679364B81427CE8B49472D DRE_PERMISSION_DENIED;
$19B9D80A0D679364B81427CE8B49472D DRE_REMOVABLE_DRIVE_DOESNT_HOLD_DISK;
$19B9D80A0D679364B81427CE8B49472D DRE_REMOVABLE_DRIVE_IS_BUSY;
MACRO_DRIVER_EXT DRE_SET_DEVICE;
MACRO_DRIVER_EXT DRE_TEST_DEVICE;
$19B9D80A0D679364B81427CE8B49472D DRE_USER_CANCELED_RESTORE;
MediaType __pascal DRIVEGETDEFAULTMEDIA(word driveNumber);
word __pascal DRIVEGETEXTSTATUS(word driveNumber);
char far *__pascal __far DRIVEGETNAME(word driveNumber, char far *buffer, word bufferSize);
word __pascal DRIVEGETSTATUS(word driveNumber);
void __pascal DRIVERCALLENTRYPOINT(Handle driver, word func, DriverPassParams *passParams, DriverReturnParams *returnParams);
MACRO_DRIVER_PROTO DRIVER_EXT_PROTO_MAJOR;
MACRO_DRIVER_EXT DRIVER_EXT_PROTO_MINOR;
MACRO_DRIVER DRIVER_PROTO_MAJOR;
MACRO_DRIVER_PROTO DRIVER_PROTO_MINOR;
MACRO_DR DRIVER_SUSPEND_ERROR_BUFFER_SIZE;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_CONNECT_TRANSFER;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_CONNECT_TRANSLATE;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_FEP;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_FILE_SYSTEM;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_FONT;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_INPUT;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_LOCALIZATION;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_MAILBOX_DATA;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_MAILBOX_RECEIVE;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_MAILBOX_TRANSPORT;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_MASS_STORAGE;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_MODEM;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_NETWORK;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_OTHER_PROCESSOR;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_OUTPUT;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_PAGER;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_PCMCIA;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_POWER_MANAGEMENT;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_PRINTER;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_SCAN;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_SOCKET;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_SOUND;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_STREAM;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_SWAP;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_TASK_SWITCH;
$718BBCEF78DB13D2175E4FFD00EF4DEC DRIVER_TYPE_VIDEO;
Boolean __pascal DRIVETESTMEDIASUPPORT(word driveNumber, MediaType media);
MACRO_DRIVE_5 DRIVE_3_5;
MACRO_DRIVE_5 DRIVE_5_25;
MACRO_DRIVE_5 DRIVE_8;
MACRO_DRIVE_5 DRIVE_CD_ROM;
MACRO_DRIVE_5 DRIVE_FIXED;
MACRO_DRIVE_MAX DRIVE_MAX_DRIVES;
MACRO_DRIVE DRIVE_NAME_MAX_LENGTH;
MACRO_DRIVE_5 DRIVE_PCMCIA;
MACRO_DRIVE_5 DRIVE_RAM;
MACRO_DRIVE_5 DRIVE_UNKNOWN;
MACRO_DRV DRV_ESC_QUERY_ESC;
$569F95C749261F23B943FB98A4C269DE DR_CTFD_CANCEL;
$569F95C749261F23B943FB98A4C269DE DR_CTFD_GET_FILE;
$569F95C749261F23B943FB98A4C269DE DR_CTFD_SEND_FILE;
$C70E81C799DF407D19651D9A26314ABD DR_CTLD_CANCEL;
$C70E81C799DF407D19651D9A26314ABD DR_CTLD_TRANSLATE;
MACRO_DR DR_EXIT;
MACRO_DR DR_INIT;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_DEVICE_INFO;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_DRIVER_INFO;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_END_JOB;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_END_PAGE;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_APPEND_PAGE;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_CAP_HEAD;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_CLEAN_HEAD;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_EJECT_PAPER;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_GET_COLOR_TRANSFER;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_GET_ERRORS;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_GET_JOB_STATUS;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_INIT_PRINT_ENGINE;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_INSERT_PAPER;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_MOVE_IN_X_ONLY;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_MOVE_IN_Y_ONLY;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_PARK_HEAD;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_PREPEND_PAGE;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_PRINT_BITMAP;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_PRINT_GSTRING;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_SET_COPIES;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_SET_JOB_STATUS;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_SET_PAGE_TRANSFORM;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_SET_TOD;
$D5559E4F88516008E59686C89B6F373F DR_PRINT_ESC_WAIT_FOR_MECH;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_EVAL_UI;
MACRO_PRINT DR_PRINT_FIRST_PSTATE_NEEDED;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_COLOR_FORMAT;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_CURSOR;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_LINE_SPACING;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_MAIN_UI;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_MARGINS;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_OPTIONS_UI;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_PAPER_PATH;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_PRINT_AREA;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_GET_STYLES;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_HOME_CURSOR;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_RAW;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_COLOR;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_CURSOR;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_FONT;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_LINE_SPACING;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_MODE;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_PAPER_PATH;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_STREAM;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SET_STYLES;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_START_JOB;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_START_PAGE;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_STUFF_UI;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_STYLE_RUN;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_SWATH;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_TEST_STYLES;
$665976B34275D482C2DA2F35CBE71BA3 DR_PRINT_TEXT;
MACRO_DR DR_SUSPEND;
MACRO_DR DR_UNSUSPEND;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_CLOSE;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_FLUSH;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_GET_MEDIUM;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_OPEN;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_OPEN_FOR_DRIVERS;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_READ;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_READ_BYTE;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_SET_FLOW_CONTROL;
MACRO_DR_VIRTUAL_SERIAL DR_VIRTUAL_SERIAL_SET_FORMAT;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_SET_NOTIFY;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_WRITE;
MACRO_DR_VIRTUAL DR_VIRTUAL_SERIAL_WRITE_BYTE;
MACRO_DS_TINY DS_HUGE;
MACRO_DS_TINY DS_LARGE;
MACRO_DS DS_MEDIA_REMOVABLE;
MACRO_DS DS_NETWORK;
MACRO_DRIVE_5 DS_PRESENT;
MACRO_DS_TINY DS_STANDARD;
MACRO_DS_TINY DS_TINY;
MACRO_DS DS_TYPE;
MACRO_DTCF DTCF_CUSTOM;
MACRO_DTCF DTCF_LIST;
MACRO_DTC DTC_DEFAULT_FEATURES;
MACRO_DTC DTC_DEFAULT_TOOLBOX_FEATURES;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_DAY;
MACRO_DTF DTF_DICT;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_H;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_HM;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_HMS;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_HMS_24HOUR;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_HM_24HOUR;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_LONG;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_LONG_CONDENSED;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_LONG_NO_WEEKDAY;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_LONG_NO_WEEKDAY_CONDENSED;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MD_LONG;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MD_LONG_NO_WEEKDAY;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MD_SHORT;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MONTH;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MS;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MY_LONG;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_MY_SHORT;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_SHORT;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_WEEKDAY;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_YEAR;
$A77A1A600597C7BC9573EDC19D68BC05 DTF_ZERO_PADDED_SHORT;
$5B6005029F45BDECB0AA0FEDC6377FB5 DT_COMMUNICATOR;
MACRO_DT DT_DISP_ASPECT_RATIO;
MACRO_DT_DISP_ASPECT DT_DISP_ASPECT_RATIO_OFFSET;
MACRO_DT_DISP DT_DISP_CLASS;
MACRO_DT_DISP_CLASS DT_DISP_CLASS_OFFSET;
MACRO_DC DT_DISP_SIZE;
MACRO_DT_DISP_SIZE DT_DISP_SIZE_OFFSET;
MACRO_DT_EXTRA DT_EXTRA_ENTRY;
$5B6005029F45BDECB0AA0FEDC6377FB5 DT_MEMORYCARD;
MACRO_DT_UNKNOWN DT_UNKNOWN;
MACRO_DIRECTION DURATION_BUFFER_SIZE;
MACRO_DU DU_CENTIMETERS;
MACRO_DU DU_CICEROS;
MACRO_DU DU_EUR_POINTS;
MACRO_DU DU_INCHES;
MACRO_DU DU_INCHES_OR_CENTIMETERS;
MACRO_DU DU_MILLIMETERS;
MACRO_DU DU_PICAS;
MACRO_DU DU_POINTS;
MACRO_DU DU_POINTS_OR_MILLIMETERS;
MACRO_DYNAMIC DYNAMIC_F;
MACRO_DYNAMIC DYNAMIC_FF;
MACRO_DYNAMIC DYNAMIC_FFF;
MACRO_DYNAMIC DYNAMIC_FFFF;
MACRO_DYNAMIC DYNAMIC_MF;
MACRO_DYNAMIC DYNAMIC_MP;
MACRO_DYNAMIC DYNAMIC_P;
MACRO_DYNAMIC DYNAMIC_PP;
MACRO_DYNAMIC DYNAMIC_PPP;
MACRO_DYNAMIC DYNAMIC_PPPP;
MACRO_EA EA_FREE_LIST_TERMINATOR;
MACRO_IMPORTC_DEFAULT ECA_IGNORE_INPUT;
void __pascal ECCHECKBOUNDS(void *address);
void __pascal ECCHECKCHUNKARRAY(optr o);
void __pascal ECCHECKCLASS(ClassStruct *class);
void __pascal ECCHECKDRIVERHANDLE(GeodeHandle gh);
void __pascal ECCHECKEVENTHANDLE(EventHandle eh);
void __pascal ECCHECKFILEHANDLE(FileHandle fh);
void __pascal ECCHECKGEODEHANDLE(GeodeHandle gh);
void __pascal ECCHECKGSTATEHANDLE(GStateHandle gsh);
void __pascal ECCHECKHUGEARRAY(VMFileHandle vmFile, VMBlockHandle vmBlock);
void __pascal ECCHECKLIBRARYHANDLE(GeodeHandle gh);
void __pascal ECCHECKLMEMCHUNK(void *chunkPtr);
void __pascal ECCHECKLMEMHANDLE(MemHandle mh);
void __pascal ECCHECKLMEMHANDLENS(MemHandle mh);
void __pascal ECCHECKLMEMOBJECT(optr obj);
void __pascal ECCHECKLMEMOD(optr o);
void __pascal ECCHECKMEMHANDLE(MemHandle mh);
void __pascal ECCHECKMEMHANDLENS(MemHandle mh);
void __pascal ECCHECKOBJECT(optr obj);
void __pascal ECCHECKOD(optr obj);
void __pascal ECCHECKPROCESSHANDLE(GeodeHandle gh);
void __pascal ECCHECKQUEUEHANDLE(QueueHandle qh);
void __pascal ECCHECKRESOURCEHANDLE(MemHandle mh);
void ECCHECKSTACK(void);
void __pascal ECCHECKTHREADHANDLE(ThreadHandle th);
void __pascal ECCHECKWINDOWHANDLE(WindowHandle wh);
MACRO_ECF ECF_ANAL_VMEM;
MACRO_ECF ECF_APP;
MACRO_ECF ECF_BLOCK_CHECKSUM;
MACRO_ECF ECF_FREE;
MACRO_ECF ECF_GRAPHICS;
MACRO_ECF ECF_HIGH;
MACRO_ECF ECF_LMEM;
MACRO_ECF ECF_LMEM_MOVE;
MACRO_ECF ECF_NORMAL;
MACRO_ECF ECF_SEGMENT;
MACRO_ECF ECF_TEXT;
MACRO_ECF ECF_UNLOCK_MOVE;
MACRO_ECF ECF_VMEM;
MACRO_ECF ECF_VMEM_DISCARD;
MACRO_ECHO ECHO;
void __pascal ECLMEMEXISTS(optr o);
void __pascal ECLMEMVALIDATEHANDLE(optr o);
void __pascal ECLMEMVALIDATEHEAP(MemHandle mh);
void ECMEMVERIFYHEAP(void);
MACRO_ECPF ECPF_ADJUSTED_CREATE;
MACRO_ECRF ECRF_DESTROYED;
MACRO_ECPF ECRF_NOT_CREATING;
void __pascal ECVMCHECKMEMHANDLE(MemHandle han);
void __pascal ECVMCHECKVMBLOCKHANDLE(VMFileHandle file, VMBlockHandle block);
void __pascal ECVMCHECKVMFILE(VMFileHandle file);
MACRO_IS EFSA_NON_EXCLUSIVE;
MACRO_EFSA EFSA_SEARCHABLE;
MACRO_EF EF_ERROR_PUSHED;
MACRO_EF EF_KEEP_LAST_CELL;
MACRO_EF EF_MAKE_DEPENDENCIES;
MACRO_EF EF_NO_NAMES;
MACRO_SNF EF_OLD_EXIT;
MACRO_EF EF_ONLY_NAMES;
MACRO_SNF EF_PANIC;
MACRO_SNF EF_RESET;
MACRO_SNF EF_RESTART;
MACRO_SNF EF_RUN_DOS;
MACRO_EIGHTH EIGHTH;
word __pascal ELEMENTARRAYADDELEMENT(optr arr, void *element, dword callbackData, Boolean (__pascal *callback)(void *elementToAdd, void *elementFromArray, dword valueForCallback));
void __pascal ELEMENTARRAYADDREFERENCE(optr arr, word token);
ChunkHandle __pascal ELEMENTARRAYCREATEAT(optr arr, word elementSize, word headerSize, ObjChunkFlags ocf);
void __pascal ELEMENTARRAYDELETE(optr arr, word token);
word __pascal ELEMENTARRAYELEMENTCHANGED(optr arr, word token, dword callbackData, Boolean (__pascal *callback)(void *elementChanged, void *elementToCompare, dword valueForCallback));
word __pascal ELEMENTARRAYGETUSEDCOUNT(optr arr, dword callbackData, Boolean (__pascal *callback)(void *element, dword cbData));
void __pascal ELEMENTARRAYREMOVEREFERENCE(optr arr, word token, dword callbackData, void (__pascal *callback)(void *element, dword valueForCallback));
word __pascal ELEMENTARRAYTOKENTOUSEDINDEX(optr arr, word token, dword callbackData, Boolean (__pascal *callback)(void *element, dword cbData));
word __pascal ELEMENTARRAYUSEDINDEXTOTOKEN(optr arr, word index, dword callbackData, Boolean (__pascal *callback)(void *element, dword cbData));
$EDE771BB5E2C603B563C5F6AD912397F EMPTY_MSGCENTRE_ITEM;
MACRO_ENG ENG_CHAR_TO_GET_ASCII_CIRCUMFLEX;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO ENG_CHAR_TO_GET_CHAR_CHO_CHAN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_CHO_CHING;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_CHO_CHOE;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_DO_CHADA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_DO_DEK;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_FO_FAN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_HO_HIP;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_HO_NOKHUK;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_KHO_KHWAI;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_KHO_RAKHANG;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_KO_KAI;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_LO_CHULA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAITAIKHU;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAIYAMOK;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAI_CHATTAWA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAI_EK;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAI_HAN_AKAT;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAI_THO;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MAI_TRI;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_MO_MA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_NIKHAHIT;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_NO_NEN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_NO_NU;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_O_ANG;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_PAIYANNOI;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_PHINTHU;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_PHO_PHAN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_PHO_PHUNG;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_PHO_SAMPHAO;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_PO_PLA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_RO_RUA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_RU;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_A;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_AA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_AE;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_AI_MAIMALAI;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_AI_MAIMUAN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_AM;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_E;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_I;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_II;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_O;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_U;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_UE;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_UEE;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SARA_UU;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SO_RUSI;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SO_SALA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_SO_SUA;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_THANTHAKHAT;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_THO_NANGMONTHO;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_THO_PHUTHAO;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_THO_THAHAN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_THO_THONG;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_THO_THUNG;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_TO_PATAK;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_TO_TAO;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_WO_WAEN;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_YO_YAK;
MACRO_ENG ENG_CHAR_TO_GET_CHAR_YO_YING;
MACRO_ENG_CHAR_TO_GET_CURRENCY ENG_CHAR_TO_GET_CURRENCY_SYMBOL_BAHT;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_EIGHT;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_FIVE;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_FOUR;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_NINE;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_ONE;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_SEVEN;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_THREE;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_TWO;
MACRO_ENG ENG_CHAR_TO_GET_DIGIT_ZERO;
MACRO_ENG ENG_CHAR_TO_GET_LEFT_PAREN;
MACRO_ENG ENG_CHAR_TO_GET_MINUS;
MACRO_ENG ENG_CHAR_TO_GET_PLUS;
MACRO_ENG ENG_CHAR_TO_GET_QUOTE;
MACRO_ENG ENG_CHAR_TO_GET_RIGHT_PAREN;
MACRO_ENG ENG_CHAR_TO_GET_SPACE;
MACRO__IOFBF EOF;
MACRO_TMMF_CHARACTER_JUSTIFICATION EOREGREC;
MACRO_EOREG EOREG_HIGH;
MACRO_EOSF_DESTROY EOSF_DESTROY;
MACRO_EOSF EOSF_UNLOCK;
MACRO_EO EO_LANDSCAPE;
MACRO_EO EO_PORTRAIT;
MACRO_EPN_SELECTION EPN_BLOCKS_LOWER_OBJECTS;
MACRO_EVALUATE EPN_PADDING;
MACRO_EPN EPN_PADDING_OFFSET;
MACRO_EPN_SELECTION EPN_SELECTION_LOCK_SET;
MACRO_ERROR_UNSUPPORTED ERROR_ACCESS_DENIED;
MACRO_ERROR_UNSUPPORTED ERROR_ALREADY_LOCKED;
MACRO_ERROR_UNSUPPORTED ERROR_ARGS_INVALID;
MACRO_ERROR_UNSUPPORTED ERROR_ARGS_TOO_LONG;
MACRO_ERROR_UNSUPPORTED ERROR_ATTR_CANNOT_BE_SET;
MACRO_ERROR_UNSUPPORTED ERROR_ATTR_NOT_FOUND;
MACRO_ERROR_UNSUPPORTED ERROR_ATTR_NOT_SUPPORTED;
MACRO_ERROR_UNSUPPORTED ERROR_ATTR_SIZE_MISMATCH;
MACRO_ERROR_UNSUPPORTED ERROR_CANNOT_FIND_COMMAND_INTERPRETER;
MACRO_ERROR_UNSUPPORTED ERROR_CANNOT_MAP_NAME;
MACRO_ERROR_UNSUPPORTED ERROR_CANNOT_MOVE_DIRECTORY;
MACRO_ERROR ERROR_CHECK;
MACRO_ERROR_COORD ERROR_COORD;
MACRO_ERROR_UNSUPPORTED ERROR_CRC_ERROR;
MACRO_ERROR_UNSUPPORTED ERROR_DIFFERENT_DEVICE;
MACRO_ERROR_UNSUPPORTED ERROR_DIRECTORY_NOT_EMPTY;
MACRO_ERROR_UNSUPPORTED ERROR_DISK_STALE;
MACRO_ERROR_UNSUPPORTED ERROR_DISK_UNAVAILABLE;
MACRO_ERROR_UNSUPPORTED ERROR_DOS_EXEC_IN_PROGRESS;
MACRO_ERROR_UNSUPPORTED ERROR_DRIVE_NOT_READY;
MACRO_ERROR_UNSUPPORTED ERROR_FILE_EXISTS;
MACRO_ERROR_UNSUPPORTED ERROR_FILE_FORMAT_MISMATCH;
MACRO_ERROR_UNSUPPORTED ERROR_FILE_IN_USE;
MACRO_ERROR_UNSUPPORTED ERROR_FILE_NOT_FOUND;
MACRO_ERROR_UNSUPPORTED ERROR_GENERAL_FAILURE;
MACRO_ERROR_UNSUPPORTED ERROR_INSUFFICIENT_MEMORY;
MACRO_ERROR_UNSUPPORTED ERROR_INVALID_LONGNAME;
MACRO_ERROR_UNSUPPORTED ERROR_INVALID_VOLUME;
MACRO_ERROR_UNSUPPORTED ERROR_IS_CURRENT_DIRECTORY;
MACRO_ERROR_UNSUPPORTED ERROR_NETWORK_ACCESS_DENIED;
MACRO_ERROR_UNSUPPORTED ERROR_NETWORK_CONNECTION_BROKEN;
MACRO_ERROR_UNSUPPORTED ERROR_NETWORK_NOT_LOGGED_IN;
MACRO_ERROR_UNSUPPORTED ERROR_NO_MORE_FILES;
MACRO_ERROR_UNSUPPORTED ERROR_NO_TASK_DRIVER_LOADED;
MACRO_ERROR_UNSUPPORTED ERROR_PATH_NOT_FOUND;
MACRO_ERROR_UNSUPPORTED ERROR_PATH_TOO_LONG;
MACRO_ERROR_UNSUPPORTED ERROR_READ_FAULT;
MACRO_ERROR_UNSUPPORTED ERROR_SECTOR_NOT_FOUND;
MACRO_ERROR_UNSUPPORTED ERROR_SEEK_ERROR;
MACRO_ERROR_UNSUPPORTED ERROR_SHARING_OVERFLOW;
MACRO_ERROR_UNSUPPORTED ERROR_SHARING_VIOLATION;
MACRO_ERROR_UNSUPPORTED ERROR_SHORT_READ_WRITE;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_DESTINATION_GEODE_SPECIFIED_BUT_CONVERSION_ISNT_SMMC_NORMAL;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_END_SEND_DATE_BEFORE_START_SEND_DATE;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_SMS_SCNUMBER_NOT_FOUND_IN_INI_FILE;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_SSI_MESSAGE_TEXT_IS_NULLCHUNK;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_SSI_MESSAGE_TEXT_PLUS_GEODETOKEN_TOO_LONG;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_SSI_RECIPIENT_LIST_IS_NULLOPTR;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_SSI_SUMMARY_TEXT_IS_NULLCHUNK;
$5D8844FD0E3D1F87D7A2926C70C58B55 ERROR_SMSLIB_SSI_SUMMARY_TEXT_TOO_LONG;
MACRO_ERROR_UNSUPPORTED ERROR_TOO_MANY_OPEN_FILES;
MACRO_ERROR_UNSUPPORTED ERROR_UNKNOWN_MEDIA;
MACRO_ERROR_UNSUPPORTED ERROR_UNKNOWN_VOLUME;
MACRO_ERROR_UNSUPPORTED ERROR_UNSUPPORTED_FUNCTION;
MACRO_ERROR_UNSUPPORTED ERROR_WRITE_FAULT;
MACRO_ERROR_UNSUPPORTED ERROR_WRITE_PROTECTED;
$24EBCDDAD62EE668732C34758CA22F5B ERR_ABORT_CMD_EXEC;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_CANT_COPY_FIXED_DISKS;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_CANT_FORMAT_DEST;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_CANT_READ_FROM_SOURCE;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_CANT_WRITE_TO_DEST;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_DISKCOPY_INSUFFICIENT_MEM;
$24EBCDDAD62EE668732C34758CA22F5B ERR_FILE_SYSTEM_FULL;
$24EBCDDAD62EE668732C34758CA22F5B ERR_ILLEGAL_ATTR;
$24EBCDDAD62EE668732C34758CA22F5B ERR_ILLEGAL_DATA;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_INCOMPATIBLE_FORMATS;
$24EBCDDAD62EE668732C34758CA22F5B ERR_LOW_BATTERY;
$24EBCDDAD62EE668732C34758CA22F5B ERR_NO_FILE_OR_DIR;
$89FAB5A60CC68CC7F7EAD1181396A440 ERR_OPERATION_CANCELLED;
$24EBCDDAD62EE668732C34758CA22F5B ERR_UNDEFINED;
$24EBCDDAD62EE668732C34758CA22F5B ERR_UNSUPPORTED_CMD;
$24EBCDDAD62EE668732C34758CA22F5B ERR_UNSUPPORTED_PID;
MACRO_ERT ERT_LOAD_FROM_TEMP_VISUAL_UPDATE_ROW;
MACRO_ERT ERT_REGULAR;
MACRO_NT ESAT_EMPTY;
MACRO_ESAT ESAT_ERROR;
MACRO_ESAT_FUNCTION ESAT_FUNCTION;
MACRO_ESAT_TOP ESAT_NAME;
MACRO_ESAT ESAT_NUMBER;
MACRO_ESAT ESAT_NUM_TYPE;
MACRO_ESAT ESAT_RANGE;
MACRO_ESAT ESAT_STRING;
MACRO_ESAT_TOP ESAT_TOP_OF_STACK;
MACRO_ESOT ESOT_FUNCTION;
MACRO_ESOT ESOT_OPEN_PAREN;
MACRO_ESOT ESOT_OPERATOR;
MACRO_ESOT ESOT_TOP_OF_STACK;
MACRO_EUDC EUDC_DEFAULT_FEATURES;
MACRO_EUDC_DEFAULT EUDC_DEFAULT_TOOLBOX_FEATURES;
MACRO_EUDF EUDF_EDIT_USER_DICTIONARY;
MACRO_EUDTF EUDTF_EDIT_USER_DICTIONARY;
MACRO_EVALUATE EVALUATE_HIGH;
MACRO_EVALUATE EVALUATE_LOW;
MACRO_EVALUATE EVALUATE_MEDIUM;
MACRO_EVALUATE EVALUATE_NONE;
MACRO_EVALUATE EVALUATE_SUB_HIGH;
MACRO_EVALUATE EVALUATE_SUB_LOW;
MACRO_EVALUATE EVALUATE_SUB_MEDIUM;
MACRO_MAX_AUTOMATIC EVAL_BUFFER_SIZE;
MACRO_EVAL_MAX_NESTED_LEVELS EVAL_MAX_NESTED_LEVELS;
MACRO_MINIMUM EVENT_TEXT_STRING_SIZE;
MACRO_EXPORTCF EXPORTCF_BASIC;
MACRO_EXPORTCF EXPORTCF_EXPORT_TRIGGER;
MACRO_EXPORTCF EXPORTCF_FORMAT_OPTIONS;
MACRO_EXPORTCF EXPORTCF_GLYPH;
MACRO_EXPORTCTF EXPORTCTF_DIALOG_BOX;
MACRO_EXPORTC EXPORTC_DEFAULT_FEATURES;
MACRO_EXPORTC_DEFAULT EXPORTC_DEFAULT_TOOLBOX_FEATURES;
MACRO_EXTERNAL EXTERNAL_VIEW_HEIGHT;
MACRO_FACF FACF_FONT_WEIGHT;
MACRO_FACF FACF_FONT_WIDTH;
MACRO_FACF FACF_TRACK_KERNING;
MACRO_FACTORIAL FACTORIAL_LIMIT;
MACRO_FAC FAC_DEFAULT_FEATURES;
MACRO_FAC FAC_DEFAULT_TOOLBOX_FEATURES;
MACRO_FAF FAF_PUSH_RESULT;
MACRO_FAF_STORE FAF_STORE_NUMBER;
MACRO_FALSE FALSE;
Boolean __pascal __far FAXTIFFCONVERTTOFAXFILE(hptr tiffHandle, hptr faxfileHandle);
FaxTiffConvertError __pascal __far FAXTIFFCONVERTTOFAXFILERETURNERROR(hptr tiffHandle, hptr faxfileHandle);
Boolean __pascal __far FAXTIFFCONVERTTOTIFF(hptr tiffHandle, hptr faxfileHandle, word firstPage, word lastPage);
FaxTiffConvertError __pascal __far FAXTIFFCONVERTTOTIFFRETURNERROR(hptr tiffHandle, hptr faxfileHandle, word firstPage, word lastPage);
VMFileHandle __pascal __far FAXTIFFCREATEFAXFILE(char *name, VMAccessFlags flags, VMOpenType mode, word compression);
Boolean __pascal __far FAXTIFFVALIDATETIFFFILE(hptr tiffHandle);
MACRO_FAX_COMPANY FAX_COMPANY_NAME_SIZE;
MACRO_FAX FAX_NAME_SIZE;
MACRO_FAX_NOTE FAX_NOTE_FILE_MAJOR_PROTOCOL;
MACRO_FAX_NOTE FAX_NOTE_FILE_MINOR_PROTOCOL;
MACRO_FAX FAX_PHONE_NUMBER_SIZE;
MACRO_FA_LINK FA_ARCHIVE;
$59C14898AE7A5B587F14A1C1BA665695 FA_CALCULATOR_APP;
$59C14898AE7A5B587F14A1C1BA665695 FA_CALENDAR_APP;
$59C14898AE7A5B587F14A1C1BA665695 FA_CLOCK_APP;
$59C14898AE7A5B587F14A1C1BA665695 FA_CONTACT_APP;
$59C14898AE7A5B587F14A1C1BA665695 FA_EXTRAS_APP;
MACRO_FA FA_FAMILY;
MACRO_FA_FAMILY_OFFSET FA_FAMILY_OFFSET;
$59C14898AE7A5B587F14A1C1BA665695 FA_FAX_APP;
MACRO_FA FA_FIXED_WIDTH;
MACRO_FA_LINK FA_HIDDEN;
MACRO_FA_LINK FA_LINK;
$59C14898AE7A5B587F14A1C1BA665695 FA_NOTEBOOK_APP;
MACRO_FA FA_ORIENT;
MACRO_FA FA_OUTLINE;
$59C14898AE7A5B587F14A1C1BA665695 FA_PHONE_APP;
MACRO_FA_LINK FA_RDONLY;
MACRO_FA_READ FA_READ_ONLY;
MACRO_FA_READ FA_READ_WRITE;
$59C14898AE7A5B587F14A1C1BA665695 FA_SERVICES_APP;
$59C14898AE7A5B587F14A1C1BA665695 FA_SMS_APP;
MACRO_FA_LINK FA_SUBDIR;
MACRO_FA_LINK FA_SYSTEM;
$59C14898AE7A5B587F14A1C1BA665695 FA_SYSTEM_APP;
MACRO_FIDR_ID FA_USEFUL;
$59C14898AE7A5B587F14A1C1BA665695 FA_USER_DATA_APP;
MACRO_FA_LINK FA_VOLUME;
MACRO_FA_READ FA_WRITE_ONLY;
$59C14898AE7A5B587F14A1C1BA665695 FA_WWW_INSTALL_APP;
MACRO_FCDBF FCDBF_DESTRUCTIVE_ACTION;
MACRO_FCDBF FCDBF_DIALOG_TYPE;
MACRO_FCDBF FCDBF_DIALOG_TYPE_OFFSET;
MACRO_FCDBF FCDBF_INTERACTION_TYPE;
MACRO_FCDBF_INTERACTION FCDBF_INTERACTION_TYPE_OFFSET;
MACRO_FCDBF FCDBF_NO_BEEP;
MACRO_FCDBF_NO FCDBF_NO_BEEP_OFFSET;
MACRO_TI FCDBF_SYSTEM_MODAL;
MACRO_FCF_ACCESS FCF_ACCESS;
MACRO_FCF2 FCF_LONG_LIST;
MACRO_FCF_MODE FCF_MODE;
MACRO_FILE_CREATE FCF_NATIVE;
MACRO_FCF FCF_NATIVE_WITH_EXT_ATTRS;
MACRO_FCF2 FCF_SHORT_LIST;
int __pascal FCLOSE(FILE *stream);
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_ADD_SP_DIRECTORY;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_ATTRIBUTES;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_BATCH;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_CLOSE;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_CONTENTS;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_CREATE;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_DELETE;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_DELETE_SP_DIRECTORY;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_DISK_FORMAT;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_FILE_READ;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_FILE_UNREAD;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_OPEN;
$FD0DDF1BA677F9C28B24DB878E28101E FCNT_RENAME;
MACRO_FCR FCR_ADD_TO_DATABASE;
MACRO_FCR FCR_ADD_TO_LAYOUT;
MACRO_FCTF FCTF_TOOL_LIST;
$7CE27BC75A49256278CCD2BF5B9418EB FCTT_ALARM_CLOCK;
$7CE27BC75A49256278CCD2BF5B9418EB FCTT_CALENDAR_ALARM;
$7CE27BC75A49256278CCD2BF5B9418EB FCTT_SMS_RECEIVED;
$7CE27BC75A49256278CCD2BF5B9418EB FCTT_STOP;
MACRO_FCT FCT_ADDED_TO_LAYOUT;
MACRO_FCT FCT_CREATED;
MACRO_FCT FCT_CREATED_AND_ADDED_TO_LAYOUT;
MACRO_FCT FCT_DELETED_FROM_DATABASE;
MACRO_FCT FCT_DELETED_FROM_LAYOUT;
MACRO_FCTF FC_DEFAULT_FEATURES;
MACRO_FC2 FC_DEFAULT_TOOLBOX_FEATURES;
MACRO_FC FC_FILE;
MACRO_FC FC_NO_FILE;
MACRO_FDAT_2SECOND FDAT_2SECOND;
MACRO_FDAT_2SECOND_OFFSET FDAT_2SECOND_OFFSET;
MACRO_FDAT_DAY_OFFSET FDAT_BASE_YEAR;
MACRO_FDAT_DAY FDAT_DAY;
MACRO_FDAT_DAY_OFFSET FDAT_DAY_OFFSET;
MACRO_FD_DAY_OFFSET FDAT_HOUR;
MACRO_FDAT_HOUR FDAT_HOUR_OFFSET;
MACRO_FDAT FDAT_MINUTE;
MACRO_FDAT_MINUTE FDAT_MINUTE_OFFSET;
MACRO_FDAT_MONTH FDAT_MONTH;
MACRO_FDAT_MONTH_OFFSET FDAT_MONTH_OFFSET;
MACRO_FDAT_YEAR FDAT_YEAR;
MACRO_FDAT_YEAR_OFFSET FDAT_YEAR_OFFSET;
$C1A703C5E43FF6ACC37796EA2F35EF3E FDA_READ_ONLY;
$C1A703C5E43FF6ACC37796EA2F35EF3E FDA_READ_ONLY_DENY_NONE;
$C1A703C5E43FF6ACC37796EA2F35EF3E FDA_READ_WRITE;
MACRO_FDA FDA_TYPE_POSITION;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_DB_ADDED;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_DB_CHANGED;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_DB_CLOSED;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_DB_REMOVED;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_DB_SWITCHED_DBS;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_ENTRY_ADDED;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_ENTRY_CHANGED;
$BAA57D29C5CB51255352E7B021838F86 FDBAT_ENTRY_DELETED;
MACRO_FDBRF FDBRF_INVISIBLE;
MACRO_FDBRF_NOT FDBRF_NOT_YET_SAVED;
MACRO_FDBRF_TEMPORARILY FDBRF_TEMPORARILY_VISIBLE;
FileHandle __pascal FDCLOSE(FILE *stream);
$537933D0DB3C015B354BCE628C9392E0 FDD_APP_DATA;
$537933D0DB3C015B354BCE628C9392E0 FDD_BROADCAST_MESSAGES;
$537933D0DB3C015B354BCE628C9392E0 FDD_BUSINESS_CARDS;
$537933D0DB3C015B354BCE628C9392E0 FDD_CALENDAR_MEMOS;
$537933D0DB3C015B354BCE628C9392E0 FDD_CONTACT_IMAGES;
$537933D0DB3C015B354BCE628C9392E0 FDD_CREATED_TEXTS;
$537933D0DB3C015B354BCE628C9392E0 FDD_DOCUMENT;
$537933D0DB3C015B354BCE628C9392E0 FDD_DOWNLOADED_FILES;
$537933D0DB3C015B354BCE628C9392E0 FDD_INTERNET;
$537933D0DB3C015B354BCE628C9392E0 FDD_MESSAGE_TEMPLATES;
$537933D0DB3C015B354BCE628C9392E0 FDD_MMC;
$537933D0DB3C015B354BCE628C9392E0 FDD_MMC_CONTACT_IMAGES;
$537933D0DB3C015B354BCE628C9392E0 FDD_NONE;
$537933D0DB3C015B354BCE628C9392E0 FDD_PRIVATE;
$537933D0DB3C015B354BCE628C9392E0 FDD_RECEIVED_FAXES;
$537933D0DB3C015B354BCE628C9392E0 FDD_RECEIVED_MAIL;
$537933D0DB3C015B354BCE628C9392E0 FDD_RECEIVED_SM;
$537933D0DB3C015B354BCE628C9392E0 FDD_TONES;
$537933D0DB3C015B354BCE628C9392E0 FDD_WWW_HOTLIST;
$FE7FE942B8120315422BF7C005D4DC25 FDH_ADDRESS_INFO;
$FE7FE942B8120315422BF7C005D4DC25 FDH_HANDLE1;
$FE7FE942B8120315422BF7C005D4DC25 FDH_HANDLE2;
$FE7FE942B8120315422BF7C005D4DC25 FDH_HANDLE3;
$FE7FE942B8120315422BF7C005D4DC25 FDH_HANDLE4;
$FE7FE942B8120315422BF7C005D4DC25 FDH_HANDLE5;
$FE7FE942B8120315422BF7C005D4DC25 FDH_TEXT_TR_ITEM;
FILE *__pascal FDOPEN(FileHandle fileHan, const char *modeString);
$757622241BD6F526DC0072E1E3E807C5 FDSS_FULL;
$757622241BD6F526DC0072E1E3E807C5 FDSS_NEARLY_FULL;
$757622241BD6F526DC0072E1E3E807C5 FDSS_NOT_FULL;
$1C1996B8B1840EF248925820121303E4 FDTF_FORMATTED;
MACRO_FDTF FDTF_HAS_DEFAULT;
MACRO_FDTF FDTF_HAS_MAX;
MACRO_FDTF FDTF_HAS_MIN;
MACRO_FDTF FDTF_HAS_NOTES;
MACRO_DATABASE FDTF_MANDATORY;
$1C1996B8B1840EF248925820121303E4 FDTF_NOT_FORMATTED;
MACRO_FDT FDT_COMPUTED;
MACRO_FDT FDT_DATE;
MACRO_FDT FDT_GENERAL_TEXT;
MACRO_FDT FDT_INTEGER;
MACRO_FDT FDT_PAGE_NUMBER;
MACRO_FDT FDT_REAL;
MACRO_FDT FDT_TIME;
MACRO_FD FD_DAY;
MACRO_FD_DAY_OFFSET FD_DAY_OFFSET;
MACRO_FD FD_MONTH;
MACRO_FD_MONTH FD_MONTH_OFFSET;
MACRO_FD FD_YEAR;
MACRO_FD_YEAR FD_YEAR_OFFSET;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_CREATION;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_CREATOR;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_CUSTOM;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_DESKTOP_INFO;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_DISK;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_DOS_NAME;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_DRIVE_STATUS;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_END_OF_LIST;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_FILE_ATTR;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_FILE_ID;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_FILE_TYPE;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_FLAGS;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_GEODE_ATTR;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_MODIFICATION;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_MULTIPLE;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_NAME;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_NOTICE;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_OWNER;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_PASSWORD;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_PATH_INFO;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_PROTOCOL;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_RELEASE;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_RIGHTS;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_SIZE;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_TOKEN;
$FC794F59B9E0B467AEAB163D8BF022D0 FEA_USER_NOTES;
MACRO_FEF_LEAVE FEF_ALL_EDGES;
MACRO_MAX FEF_ALPHABETIZE;
MACRO_FEF FEF_BITMAPS;
MACRO_FEF2 FEF_BOTTOM;
MACRO_FEF FEF_DOWNCASE;
MACRO_FEF FEF_FAMILY;
MACRO_FEF2 FEF_FIRST_FIELD_FLAG;
MACRO_FEF FEF_FIXED_WIDTH;
MACRO_FEF_LEAVE FEF_LEAVE_EDGES_ALONE;
MACRO_FEF2 FEF_LEFT;
MACRO_FEF FEF_OUTLINES;
MACRO_FEF2 FEF_RIGHT;
MACRO_FEF FEF_STRING;
MACRO_FEF2 FEF_TOP;
MACRO_FEF FEF_USEFUL;
int __pascal FEOF(FILE *stream);
$FA2A7A0A10B13D6063E39A75637109A5 FESC_WILDCARD;
MACRO_FESF FESF_CALLBACK;
MACRO_FESF FESF_DIRS;
MACRO_FESF FESF_GEOS_EXECS;
MACRO_FESF FESF_GEOS_NON_EXECS;
MACRO_FESF FESF_LEAVE_HEADER;
MACRO_FESF FESF_LOCK_CB_DATA;
MACRO_FESF FESF_NON_GEOS;
MACRO_FESF FESF_REAL_SKIP;
$E5CD5D7E1CC68E639C3C7C8A6671A35E FESRT_COUNT_ONLY;
$E5CD5D7E1CC68E639C3C7C8A6671A35E FESRT_DOS_INFO;
$E5CD5D7E1CC68E639C3C7C8A6671A35E FESRT_NAME;
$E5CD5D7E1CC68E639C3C7C8A6671A35E FESRT_NAME_AND_ATTR;
MACRO_FILE_ENUM FE_BUFSIZE_UNLIMITED;
MACRO_FE FE_DENY_READ;
MACRO_FE FE_DENY_WRITE;
MACRO_FE FE_EXCLUSIVE;
MACRO_FE_EXPONENT FE_EXPONENT;
MACRO_FE FE_NONE;
MACRO_FE_SIGN FE_SIGN;
MACRO_FFAF FFAF_DONT_USE_SCIENTIFIC;
MACRO_FFAF FFAF_FLOAT_RESERVED;
MACRO_FFAF FFAF_FROM_ADDR;
MACRO_FFAF FFAF_HEADER_PRESENT;
MACRO_FFAF FFAF_NO_LEAD_ZERO;
MACRO_FFAF FFAF_NO_TRAIL_ZEROS;
MACRO_FFAF FFAF_PERCENT;
MACRO_FFAF FFAF_SCIENTIFIC;
MACRO_FFAF FFAF_SIGN_CHAR_TO_FOLLOW_HEADER;
MACRO_FFAF FFAF_SIGN_CHAR_TO_PRECEDE_TRAILER;
MACRO_FFAF FFAF_TRAILER_PRESENT;
MACRO_FFAF FFAF_USE_COMMAS;
MACRO_FFCCF FFCCF_SHORT_LIST;
MACRO_FFCC FFCC_DEFAULT_FEATURES;
$BF6AF5408CB37ADF79639422A7DC4F9C FFDSOI_AUTO_APPLY_MARK;
$BF6AF5408CB37ADF79639422A7DC4F9C FFDSOI_CLEAR_MARKS_FIRST;
$BF6AF5408CB37ADF79639422A7DC4F9C FFDSOI_SHOW_ONLY_MARKED;
MACRO_FFDT FFDT_DATE_TIME_OP;
MACRO_FFDT_FORMAT FFDT_FORMAT;
MACRO_FFDT FFDT_FROM_ADDR;
MACRO_FFD FFD_ABORT_TYPE_CHANGE;
MACRO_FFD_ATTEMPTED FFD_ATTEMPTED_TO_DELETE_LAST_LAYOUT;
MACRO_LAYOUT FFD_ATTRIBUTES_DEFAULT;
MACRO_LAYOUT FFD_ATTRIBUTES_MAX_TEXT_LENGTH;
MACRO_LAYOUT FFD_ATTRIBUTES_MAX_VALUE;
MACRO_LAYOUT FFD_ATTRIBUTES_MIN_MAX_VALUE;
MACRO_LAYOUT FFD_ATTRIBUTES_MIN_VALUE;
MACRO_FFD FFD_CIRCULAR_EXPRESSION;
MACRO_FFD_ATTEMPTED FFD_DELETE_LAYOUT_OK;
MACRO_FFD FFD_DUPLICATE_FIELD_NAME;
MACRO_FFD_NO FFD_DUPLICATE_LAYOUT_NAME;
MACRO_FFD FFD_NAME_OK;
MACRO_FFD_ATTEMPTED FFD_NO_DELETE_LAYOUT_DONE;
MACRO_FFD_NO FFD_NO_ERROR;
MACRO_FFD FFD_TOO_MANY_FIELDS;
MACRO_FFEBFC_NONE FFEBFC_ALL;
MACRO_FFEBFC FFEBFC_COMPUTED_FIELDS;
MACRO_FFEBFC FFEBFC_DEFAULTS;
MACRO_FFEBFC_NONE FFEBFC_NONE;
MACRO_FFEBFC FFEBFC_SEARCHES;
MACRO_FFEBFC FFEBFC_SUBSETS;
MACRO_FFEBFC FFEBFC_SUBTOTALS;
MACRO_FFEBFC FFEBFC_TOTALS;
MACRO_FFEBFC_NONE FFEBFC_TSD_AND_C;
MACRO_FFEB FFEB_AMPERSAND_ID;
MACRO_FFEB_DEFAULT FFEB_DEFAULT_FEATURES;
MACRO_FFEB_DEFAULT FFEB_DEFAULT_TOOLBOX_FEATURES;
MACRO_FFEB FFEB_DIVISION_ID;
MACRO_FFEB FFEB_EQUALS_ID;
MACRO_FFEB FFEB_EXPONENT_ID;
MACRO_FFEB FFEB_GREATEREQUAL_ID;
MACRO_FFEB FFEB_GREATERTHAN_ID;
MACRO_FFEB FFEB_LEFT_PARENS_ID;
MACRO_FFEB FFEB_LESSEQUAL_ID;
MACRO_FFEB FFEB_LESSTHAN_ID;
MACRO_FFEB FFEB_MINUS_ID;
MACRO_FFEB FFEB_MODULO_ID;
MACRO_FFEB FFEB_MULTIPLY_ID;
MACRO_FFEB FFEB_NOTEQUAL_ID;
MACRO_FFEB FFEB_PLUS_ID;
MACRO_FFEB FFEB_RIGHT_PARENS_ID;
MACRO_FFEB2 FFEB_TEXTEDIT_BOX;
MACRO_FFE_DEFAULT FFE_DEFAULT_FEATURES;
MACRO_FFE_DEFAULT FFE_DEFAULT_TOOLBOX_FEATURES;
MACRO_FFE FFE_EDGE_LIST;
MACRO_FFFPAB FFFPAB_DATA_TYPE;
MACRO_FFFPAB FFFPAB_DEFAULT;
MACRO_FFFPAB FFFPAB_FIELD_NAME;
MACRO_FFFPAB FFFPAB_MAX;
MACRO_FFFPAB FFFPAB_MAX_LENGTH;
MACRO_FFFPAB FFFPAB_MIN;
MACRO_FFFPAB FFFPAB_NOTES;
MACRO_FFFPC FFFPC_CREATE_NEW_FIELD;
MACRO_FFFPC FFFPC_FIELD_PROPERTIES;
MACRO_FFFPC FFFPC_NONE;
MACRO_FFFPNB FFFPNB_OK;
MACRO_FFFPNB FFFPNB_OK_AND_CREATE_ANOTHER;
MACRO_FFFPUL FFFPUL_ADVANCED;
MACRO_FFFPUL FFFPUL_NONE;
MACRO_FFFPUL FFFPUL_NOVICE;
MACRO_FFFP_ADVANCED FFFP_ADVANCED_FEATURES;
MACRO_FFFP_FIELD FFFP_APPLY_RESET_CLOSE_TRIGGER_FEATURE;
MACRO_FFFP_FIELD FFFP_CANCEL_TRIGGER_FEATURE;
MACRO_FFFP_FIELD FFFP_COMPUTED_DATA_TYPE_FEATURE;
MACRO_FFFP_FIELD FFFP_CREATE_TRIGGER_FEATURE;
MACRO_FFFP_FIELD FFFP_DATA_ATTRS_FEATURE;
MACRO_FFFP_FIELD FFFP_DATA_TYPE_FEATURE;
MACRO_FFFP FFFP_DEFAULT_EXISTS;
MACRO_FFFP_DEFAULT FFFP_DEFAULT_TOOLBOX_FEATURES;
MACRO_FFFP_EDIT FFFP_EDIT_FIELD_ADVANCED_FEATURES;
MACRO_FFFP_EDIT FFFP_EDIT_FIELD_INTERMEDIATE_FEATURES;
MACRO_FFFP_FIELD FFFP_FIELD_ATTRS_FEATURE;
MACRO_FFFP_FIELD FFFP_FIELD_NAME_DESCR_FEATURE;
MACRO_FFFPAB FFFP_FIELD_NAME_FEATURE;
MACRO_FFFP_INTERMEDIATE FFFP_INTERMEDIATE_FEATURES;
MACRO_FFFP FFFP_MAX_EXISTS;
MACRO_FFFP FFFP_MIN_EXISTS;
MACRO_FFFV FFFV_FIELD_LARGER_THAN_MAX;
MACRO_FFFV FFFV_FIELD_NOT_DIRTY;
MACRO_FFFV FFFV_FIELD_NOT_LEGAL;
MACRO_FFFV FFFV_FIELD_OK;
MACRO_FFFV FFFV_FIELD_SMALLER_THAN_MIN;
MACRO_FFFV FFFV_NOT_IN_DESIGN_MODE;
MACRO_FFFV FFFV_SYSTEM_ERROR;
MACRO_FFGBUF FFGBUF_NOTHING;
MACRO_FFGBUF FFGBUF_UPDATE_APPEARENCES;
int __pascal FFLUSH(FILE *stream);
MACRO_FFRCPF FFRCPF_COMMIT_CURRENT_RECORD;
MACRO_FFRCPF FFRCPF_CREATE_NEW_RECORD;
MACRO_FFRCPF FFRCPF_DELETE_CURRENT_RECORD;
MACRO_FFRCPF FFRCPF_GOTO_RECORD;
MACRO_FFGBUF FFRCPF_MARK_RECORDS;
MACRO_FFRCPF FFRCPF_NAVIGATION;
MACRO_FFRCPF FFRCPF_REVERT_CURRENT_RECORD;
MACRO_FFRCPTF FFRCPTF_COMMIT_CURRENT_RECORD;
MACRO_FFRCPTF FFRCPTF_CREATE_NEW_RECORD;
MACRO_FFRCPTF FFRCPTF_CURRENT_RECORD;
MACRO_FFRCPTF FFRCPTF_DELETE_CURRENT_RECORD;
MACRO_FFRCPTF FFRCPTF_GOTO_RECORD;
MACRO_FFRCPTF FFRCPTF_MARK_RECORDS;
MACRO_FFRCPTF FFRCPTF_NAVIGATION;
MACRO_FFRCPTF FFRCPTF_REVERT_CURRENT_RECORD;
$CD43E1C34EA79D68A22A14D48BA75902 FFRCPV_FIRST_RECORD;
$CD43E1C34EA79D68A22A14D48BA75902 FFRCPV_LAST_RECORD;
MACRO_FFGBUF FFRCP_CURRENT_RECORD_DISPLAY_STRING_SIZE;
MACRO_FFRCP_DEFAULT FFRCP_DEFAULT_FEATURES;
MACRO_FFRCP_DEFAULT FFRCP_DEFAULT_TOOLBOX_FEATURES;
MACRO_FFRCP FFRCP_INVALID_RECORD;
MACRO_FFGBUF FFRCP_MAX_RECORD_NUM_CHARS;
MACRO_FFRCP_NEW FFRCP_NEW_RECORD;
MACRO_FFGBUF FFRCP_SELECT_RECORD_TIMER_TICKS;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_CLEAN_CURRENT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_COMMIT_CURRENT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_CREATE_NEW_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_DELETE_CURRENT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_DIRTY_CURRENT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_GOTO_FIRST_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_GOTO_LAST_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_GOTO_NEXT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_GOTO_PREVIOUS_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_GOTO_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_INVALID_REQUEST;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_MARK_CURRENT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_NULL_REQUEST;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_REFRESH;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_REVERT_CURRENT_RECORD;
$DEC3C9B9A2EC727EC553EB05369EA972 FFRCR_UNMARK_CURRENT_RECORD;
MACRO_FFTC_CREATE FFTC_CREATE_NEW_FIELD_FEATURE;
MACRO_FFTC_DELETE FFTC_DEFAULT_FEATURES;
MACRO_FFTC_DEFAULT FFTC_DEFAULT_TOOLBOX_FEATURES;
MACRO_FFTC_DELETE FFTC_DELETE_FIELD_FEATURE;
MACRO_FFTC_EDIT FFTC_EDIT_FIELD_FEATURE;
MACRO_FFTC FFTC_FIELD_LISTS_FEATURE;
MACRO_FFTC_FIELD FFTC_FIELD_NOTES_FEATURE;
MACRO_FF FF_MONO;
MACRO_FF FF_NON_PORTABLE;
MACRO_FF FF_ORNAMENT;
MACRO_FF FF_SANS_SERIF;
MACRO_FF FF_SCRIPT;
MACRO_FF FF_SERIF;
MACRO_FF FF_SPECIAL;
MACRO_FF FF_SYMBOL;
int __pascal FGETC(FILE *stream);
char *__pascal FGETS(char *buffer, int buflength, FILE *stream);
MACRO_FG FG_MONO;
MACRO_FG FG_NON_PORTABLE;
MACRO_FG FG_ORNAMENT;
MACRO_FG FG_SANS_SERIF;
MACRO_FG FG_SCRIPT;
MACRO_FG FG_SERIF;
MACRO_FG FG_SPECIAL;
MACRO_FG FG_SYMBOL;
MACRO_FIDR FIDR_ID;
MACRO_FIDR_ID FIDR_ID_OFFSET;
MACRO_MIN FIDR_maker;
MACRO_FIDR_maker FIDR_maker_OFFSET;
MACRO_FID FID_BERKELEY;
MACRO_FID FID_BISON;
MACRO_FID_BITSTREAM FID_BITSTREAM_AACHEN;
MACRO_FID_BITSTREAM FID_BITSTREAM_ACCOLADE;
MACRO_FID_BITSTREAM FID_BITSTREAM_ACE_I;
MACRO_FID_BITSTREAM FID_BITSTREAM_ADOBE_CASLON;
MACRO_FID_BITSTREAM FID_BITSTREAM_ADOBE_GARAMOND;
MACRO_FID_BITSTREAM FID_BITSTREAM_ADOBE_UTOPIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_AKZIDENZ_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_AKZIDENZ_GROTESK_BUCH;
MACRO_FID_BITSTREAM FID_BITSTREAM_AKZINDENZ_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_ALBERTUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_ALGERIAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_ALTERNATE_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_AMERICANA;
MACRO_FID_BITSTREAM FID_BITSTREAM_AMERICAN_TYPEWRITER;
MACRO_FID_BITSTREAM FID_BITSTREAM_AMERICAN_UNCIAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_ANGLIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_ANGRO;
MACRO_FID_BITSTREAM FID_BITSTREAM_ANGSANA_NEW;
MACRO_FID_BITSTREAM FID_BITSTREAM_ANTIQUE_OLIVE;
MACRO_FID_BITSTREAM FID_BITSTREAM_ANZEIGEN_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_ARCADIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_ARISTON;
MACRO_FID_BITSTREAM FID_BITSTREAM_ARNOLD_BOCKLIN;
MACRO_FID_BITSTREAM FID_BITSTREAM_ARSIS;
MACRO_FID_BITSTREAM FID_BITSTREAM_ASTER;
MACRO_FID_BITSTREAM FID_BITSTREAM_AUGUSTEA_OPEN;
MACRO_FID_BITSTREAM FID_BITSTREAM_AUREALIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_AVANTE_GARDE;
MACRO_FID_BITSTREAM FID_BITSTREAM_AVANTE_GARDE_CONDENSED;
MACRO_FID_BITSTREAM FID_BITSTREAM_AVENIR;
MACRO_FID_BITSTREAM FID_BITSTREAM_BALLOON;
MACRO_FID_BITSTREAM FID_BITSTREAM_BALMORAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_BANCO;
MACRO_FID_BITSTREAM FID_BITSTREAM_BARBEDOR;
MACRO_FID_BITSTREAM FID_BITSTREAM_BARCELONA;
MACRO_FID_BITSTREAM FID_BITSTREAM_BASILIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_BASKERVILLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_BASKERVILLE_HANDCUT;
MACRO_FID_BITSTREAM FID_BITSTREAM_BAUER_BODONI;
MACRO_FID_BITSTREAM FID_BITSTREAM_BAUHAUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_BELSHAW;
MACRO_FID_BITSTREAM FID_BITSTREAM_BELWE;
MACRO_FID_BITSTREAM FID_BITSTREAM_BEMBO;
MACRO_FID_BITSTREAM FID_BITSTREAM_BENGUIAT_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_BERKELEY_OLD_STYLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_BERLINER_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_BERNHARD_ANTIQUE;
MACRO_FID_BITSTREAM FID_BITSTREAM_BIBLE_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_BINNER;
MACRO_FID_BITSTREAM FID_BITSTREAM_BLIPPO_C_BLACK;
MACRO_FID_BITSTREAM FID_BITSTREAM_BLOCK;
MACRO_FID_BITSTREAM FID_BITSTREAM_BODONI;
MACRO_FID_BITSTREAM FID_BITSTREAM_BOOKMAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_BOTTLENECK;
MACRO_FID_BITSTREAM FID_BITSTREAM_BRITANNIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_BROADWAY;
MACRO_FID_BITSTREAM FID_BITSTREAM_BRODY;
MACRO_FID_BITSTREAM FID_BITSTREAM_BRONX;
MACRO_FID_BITSTREAM FID_BITSTREAM_BRUSH_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_BUNDESBAHN_PI_1;
MACRO_FID_BITSTREAM FID_BITSTREAM_BUNDESBAHN_PI_2;
MACRO_FID_BITSTREAM FID_BITSTREAM_BUNDESBAHN_PI_3;
MACRO_FID_BITSTREAM FID_BITSTREAM_BUSTER;
MACRO_FID_BITSTREAM FID_BITSTREAM_BUXOM;
MACRO_FID_BITSTREAM FID_BITSTREAM_CABARET;
MACRO_FID_BITSTREAM FID_BITSTREAM_CAMELLIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_CANDICE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CANDIDA;
MACRO_FID_BITSTREAM FID_BITSTREAM_CAROUSEL;
MACRO_FID_BITSTREAM FID_BITSTREAM_CARTA;
MACRO_FID_BITSTREAM FID_BITSTREAM_CASCADE_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_CASLON;
MACRO_FID_BITSTREAM FID_BITSTREAM_CASTLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CAXTON;
MACRO_FID_BITSTREAM FID_BITSTREAM_CENTENNIAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_CENTURY;
MACRO_FID_BITSTREAM FID_BITSTREAM_CENTURY_OLD_STYLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CENTURY_SCHOOLBOOK;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHARLEMAGNE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHARME;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHELMSFORD;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHELTENHAM;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHEQ;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHESTERFIELD;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHISEL;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHOC;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHROMIUM_ONE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CHURCHWARD_BRUSH;
MACRO_FID_BITSTREAM FID_BITSTREAM_CIRKULUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_CITY;
MACRO_FID_BITSTREAM FID_BITSTREAM_CLARENDON;
MACRO_FID_BITSTREAM FID_BITSTREAM_CLEARFACE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CLEARFACE_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_COCHIN;
MACRO_FID_BITSTREAM FID_BITSTREAM_COLUMNA_SOLID;
MACRO_FID_BITSTREAM FID_BITSTREAM_COMMERCIAL_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_COMPACTA;
MACRO_FID_BITSTREAM FID_BITSTREAM_COMPANY;
MACRO_FID_BITSTREAM FID_BITSTREAM_CONCORDE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CONCORDE_NOVA;
MACRO_FID_BITSTREAM FID_BITSTREAM_CONFERENCE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CONGRESS;
MACRO_FID_BITSTREAM FID_BITSTREAM_COOPER_C_BLACK;
MACRO_FID_BITSTREAM FID_BITSTREAM_COPPERPLATE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CORINTHIAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_CORONA;
MACRO_FID_BITSTREAM FID_BITSTREAM_CORTEZ;
MACRO_FID_BITSTREAM FID_BITSTREAM_COTTONWOOD;
MACRO_FID_BITSTREAM FID_BITSTREAM_COUNTDOWN;
MACRO_FID_BITSTREAM FID_BITSTREAM_CRILLEE;
MACRO_FID_BITSTREAM FID_BITSTREAM_CROISSANT;
MACRO_FID_BITSTREAM FID_BITSTREAM_CUSHING;
MACRO_FID_BITSTREAM FID_BITSTREAM_DATA_70;
MACRO_FID_BITSTREAM FID_BITSTREAM_DAVIDA;
MACRO_FID_BITSTREAM FID_BITSTREAM_DEMIAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_DEMOS;
MACRO_FID_BITSTREAM FID_BITSTREAM_DIGI_ANTIQUA;
MACRO_FID_BITSTREAM FID_BITSTREAM_DIGI_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_DINGBATS;
MACRO_FID_BITSTREAM FID_BITSTREAM_DOM_CASUAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_DORIC_BOLD;
MACRO_FID_BITSTREAM FID_BITSTREAM_DYNAMO;
MACRO_FID_BITSTREAM FID_BITSTREAM_ECKMANN;
MACRO_FID_BITSTREAM FID_BITSTREAM_EDISON;
MACRO_FID_BITSTREAM FID_BITSTREAM_EDWARDIAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_EGIZIO;
MACRO_FID_BITSTREAM FID_BITSTREAM_EGYPTIENNE;
MACRO_FID_BITSTREAM FID_BITSTREAM_EINHORN;
MACRO_FID_BITSTREAM FID_BITSTREAM_ELAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_ENGLISCHE_SCHREIBSCHRIFT;
MACRO_FID_BITSTREAM FID_BITSTREAM_ENVIRO;
MACRO_FID_BITSTREAM FID_BITSTREAM_ERAS;
MACRO_FID_BITSTREAM FID_BITSTREAM_ESPRIT;
MACRO_FID_BITSTREAM FID_BITSTREAM_EUROSTILE;
MACRO_FID_BITSTREAM FID_BITSTREAM_EXCELSIOR;
MACRO_FID_BITSTREAM FID_BITSTREAM_FENICE;
MACRO_FID_BITSTREAM FID_BITSTREAM_FETTE_ENGSCHRIFT;
MACRO_FID_BITSTREAM FID_BITSTREAM_FETTE_FRAKTUR;
MACRO_FID_BITSTREAM FID_BITSTREAM_FETTE_GOTILCH;
MACRO_FID_BITSTREAM FID_BITSTREAM_FETTE_MIDSCHRIFT;
MACRO_FID_BITSTREAM FID_BITSTREAM_FLAMENCO;
MACRO_FID_BITSTREAM FID_BITSTREAM_FLANGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_FLASH;
MACRO_FID_BITSTREAM FID_BITSTREAM_FLORA;
MACRO_FID_BITSTREAM FID_BITSTREAM_FLYER;
MACRO_FID_BITSTREAM FID_BITSTREAM_FOLIO;
MACRO_FID_BITSTREAM FID_BITSTREAM_FRANKFURTER;
MACRO_FID_BITSTREAM FID_BITSTREAM_FRANKLIN_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_FREESTYLE_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_FRIZ_QUADRATA;
MACRO_FID_BITSTREAM FID_BITSTREAM_FRUTIGER;
MACRO_FID_BITSTREAM FID_BITSTREAM_FUN_DINGBATS;
MACRO_FID_BITSTREAM FID_BITSTREAM_FUTURA;
MACRO_FID_BITSTREAM FID_BITSTREAM_FUTURA_C_BLACK;
MACRO_FID_BITSTREAM FID_BITSTREAM_FUTURA_DISPLAY;
MACRO_FID_BITSTREAM FID_BITSTREAM_GALADRIEL;
MACRO_FID_BITSTREAM FID_BITSTREAM_GALLIARD;
MACRO_FID_BITSTREAM FID_BITSTREAM_GALLIARD_ROMAN_ITALIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_GAMMA;
MACRO_FID_BITSTREAM FID_BITSTREAM_GARAMOND;
MACRO_FID_BITSTREAM FID_BITSTREAM_GARTH_GRAPHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_GILL;
MACRO_FID_BITSTREAM FID_BITSTREAM_GILLIES_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_GILL_KAYO;
MACRO_FID_BITSTREAM FID_BITSTREAM_GILL_SANS;
MACRO_FID_BITSTREAM FID_BITSTREAM_GLASER_STENCIL;
MACRO_FID_BITSTREAM FID_BITSTREAM_GLASTONBURY;
MACRO_FID_BITSTREAM FID_BITSTREAM_GLYPHA;
MACRO_FID_BITSTREAM FID_BITSTREAM_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_GOUDY;
MACRO_FID_BITSTREAM FID_BITSTREAM_GOUDY_HEAVYFACE;
MACRO_FID_BITSTREAM FID_BITSTREAM_GOUDY_OLD_STYLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_GOUDY_SANS;
MACRO_FID_BITSTREAM FID_BITSTREAM_GRANJON;
MACRO_FID_BITSTREAM FID_BITSTREAM_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_HAAS_UNICA;
MACRO_FID_BITSTREAM FID_BITSTREAM_HADFIELD;
MACRO_FID_BITSTREAM FID_BITSTREAM_HARLOW;
MACRO_FID_BITSTREAM FID_BITSTREAM_HAWTHORN;
MACRO_FID_BITSTREAM FID_BITSTREAM_HELVETICA;
MACRO_FID_BITSTREAM FID_BITSTREAM_HELVETICA_INSERAT;
MACRO_FID_BITSTREAM FID_BITSTREAM_HIGHLIGHT;
MACRO_FID_BITSTREAM FID_BITSTREAM_HILL;
MACRO_FID_BITSTREAM FID_BITSTREAM_HIROSHIGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_HOBO;
MACRO_FID_BITSTREAM FID_BITSTREAM_HOGARTH_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_HOLLANDER;
MACRO_FID_BITSTREAM FID_BITSTREAM_HOLSATIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_HORATIO;
MACRO_FID_BITSTREAM FID_BITSTREAM_HORNDON;
MACRO_FID_BITSTREAM FID_BITSTREAM_ICE_AGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_ICONE;
MACRO_FID_BITSTREAM FID_BITSTREAM_IMPRESSUM;
MACRO_FID_BITSTREAM FID_BITSTREAM_INDUSTRIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_INSIGNIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_ISADORA;
MACRO_FID_BITSTREAM FID_BITSTREAM_ISBELL;
MACRO_FID_BITSTREAM FID_BITSTREAM_ITALIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_JAMILLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_JANSON;
MACRO_FID_BITSTREAM FID_BITSTREAM_JENSON_OLD_STYLE;
MACRO_FID_BITSTREAM FID_BITSTREAM_JULIA_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_JUNIPER;
MACRO_FID_BITSTREAM FID_BITSTREAM_KABEL;
MACRO_FID_BITSTREAM FID_BITSTREAM_KALLIGRAPHIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_KANJI_HON_MINCHO;
MACRO_FID_BITSTREAM FID_BITSTREAM_KANJI_SQUARE_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_KAPITELLIA;
MACRO_FID_BITSTREAM FID_BITSTREAM_KAUFMANN;
MACRO_FID_BITSTREAM FID_BITSTREAM_KNIGHTSBRIDGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_KORINNA;
MACRO_FID_BITSTREAM FID_BITSTREAM_KUNSTLERSCHREIBSCHRIFT;
MACRO_FID_BITSTREAM FID_BITSTREAM_LATIN_WIDE;
MACRO_FID_BITSTREAM FID_BITSTREAM_LAZYBONES;
MACRO_FID_BITSTREAM FID_BITSTREAM_LCD;
MACRO_FID_BITSTREAM FID_BITSTREAM_LEAWOOD;
MACRO_FID_BITSTREAM FID_BITSTREAM_LETTER_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_LE_GRIFFE;
MACRO_FID_BITSTREAM FID_BITSTREAM_LIBERTY;
MACRO_FID_BITSTREAM FID_BITSTREAM_LIFE;
MACRO_FID_BITSTREAM FID_BITSTREAM_LINDSAY;
MACRO_FID_BITSTREAM FID_BITSTREAM_LINOSCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_LINOTEXT;
MACRO_FID_BITSTREAM FID_BITSTREAM_LITERA;
MACRO_FID_BITSTREAM FID_BITSTREAM_LITHOS;
MACRO_FID_BITSTREAM FID_BITSTREAM_LUBALIN_GRAPH;
MACRO_FID_BITSTREAM FID_BITSTREAM_LUCIDA;
MACRO_FID_BITSTREAM FID_BITSTREAM_LUCIDA_SANS;
MACRO_FID_BITSTREAM FID_BITSTREAM_MACHINE;
MACRO_FID_BITSTREAM FID_BITSTREAM_MADISON;
MACRO_FID_BITSTREAM FID_BITSTREAM_MAGNA;
MACRO_FID_BITSTREAM FID_BITSTREAM_MAGNUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_MARCONI;
MACRO_FID_BITSTREAM FID_BITSTREAM_MARIAGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_MAXIMA;
MACRO_FID_BITSTREAM FID_BITSTREAM_MEDICI_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_MELIOR;
MACRO_FID_BITSTREAM FID_BITSTREAM_MEMPHIS;
MACRO_FID_BITSTREAM FID_BITSTREAM_MERIDIEN;
MACRO_FID_BITSTREAM FID_BITSTREAM_MESSIDOR;
MACRO_FID_BITSTREAM FID_BITSTREAM_MICR;
MACRO_FID_BITSTREAM FID_BITSTREAM_MICROGRAMMA;
MACRO_FID_BITSTREAM FID_BITSTREAM_MINISTER;
MACRO_FID_BITSTREAM FID_BITSTREAM_MISTRAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_MIXAGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_MODERN;
MACRO_FID_BITSTREAM FID_BITSTREAM_MODERN_NO_216;
MACRO_FID_BITSTREAM FID_BITSTREAM_MOTTER_FEMINA;
MACRO_FID_BITSTREAM FID_BITSTREAM_NAPOLEAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_NEUE_HELVETICA;
MACRO_FID_BITSTREAM FID_BITSTREAM_NEUZEIT_GROTESK;
MACRO_FID_BITSTREAM FID_BITSTREAM_NEVISON_CASUAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_NEWS_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_NEWTEXT;
MACRO_FID_BITSTREAM FID_BITSTREAM_NEW_ASTER;
MACRO_FID_BITSTREAM FID_BITSTREAM_NICOLAS_COCHIN;
MACRO_FID_BITSTREAM FID_BITSTREAM_NIKIS;
MACRO_FID_BITSTREAM FID_BITSTREAM_NIMROD;
MACRO_FID_BITSTREAM FID_BITSTREAM_NOVARESE;
MACRO_FID_BITSTREAM FID_BITSTREAM_NUPITAL_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_OCR_A;
MACRO_FID_BITSTREAM FID_BITSTREAM_OCR_B;
MACRO_FID_BITSTREAM FID_BITSTREAM_OCTOPUSS;
MACRO_FID_BITSTREAM FID_BITSTREAM_ODIN;
MACRO_FID_BITSTREAM FID_BITSTREAM_OKAY;
MACRO_FID_BITSTREAM FID_BITSTREAM_OLD_ENGLISH;
MACRO_FID_BITSTREAM FID_BITSTREAM_OLD_TOWN;
MACRO_FID_BITSTREAM FID_BITSTREAM_OPTIMA;
MACRO_FID_BITSTREAM FID_BITSTREAM_PACELLA;
MACRO_FID_BITSTREAM FID_BITSTREAM_PADDINGTION;
MACRO_FID_BITSTREAM FID_BITSTREAM_PALACE_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_PALATINO;
MACRO_FID_BITSTREAM FID_BITSTREAM_PALETTE;
MACRO_FID_BITSTREAM FID_BITSTREAM_PANACHE;
MACRO_FID_BITSTREAM FID_BITSTREAM_PAPYRUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_PARK_AVENUE;
MACRO_FID_BITSTREAM FID_BITSTREAM_PEIGNOT;
MACRO_FID_BITSTREAM FID_BITSTREAM_PENDRY_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_PEPITA;
MACRO_FID_BITSTREAM FID_BITSTREAM_PERPETUA;
MACRO_FID_BITSTREAM FID_BITSTREAM_PHYLLIS;
MACRO_FID_BITSTREAM FID_BITSTREAM_PHYLLIS_INITIALS;
MACRO_FID_BITSTREAM FID_BITSTREAM_PICCADILLY;
MACRO_FID_BITSTREAM FID_BITSTREAM_PLANTIN;
MACRO_FID_BITSTREAM FID_BITSTREAM_PLAYBILL;
MACRO_FID_BITSTREAM FID_BITSTREAM_PLAZA;
MACRO_FID_BITSTREAM FID_BITSTREAM_POST_ANTIQUA;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRAXIS;
MACRO_FID_BITSTREAM FID_BITSTREAM_PREMIER;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRESENT_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRESIDENT;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRESTIGE_ELITE;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRIMUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRIMUS_ANTIQUA;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRINCETOWN;
MACRO_FID_BITSTREAM FID_BITSTREAM_PROTEUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_PRO_ARTE;
MACRO_FID_BITSTREAM FID_BITSTREAM_PUMP;
MACRO_FID_BITSTREAM FID_BITSTREAM_QUENTIN;
MACRO_FID_BITSTREAM FID_BITSTREAM_QUORUM;
MACRO_FID_BITSTREAM FID_BITSTREAM_RAGE;
MACRO_FID_BITSTREAM FID_BITSTREAM_RALEIGH;
MACRO_FID_BITSTREAM FID_BITSTREAM_RENAULT;
MACRO_FID_BITSTREAM FID_BITSTREAM_REVUE;
MACRO_FID_BITSTREAM FID_BITSTREAM_RIALTO;
MACRO_FID_BITSTREAM FID_BITSTREAM_ROCKWELL;
MACRO_FID_BITSTREAM FID_BITSTREAM_ROMANA;
MACRO_FID_BITSTREAM FID_BITSTREAM_ROMAN_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_ROMIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_RUBBER_STAMP;
MACRO_FID_BITSTREAM FID_BITSTREAM_SABON;
MACRO_FID_BITSTREAM FID_BITSTREAM_SABON_ANTIQUA;
MACRO_FID_BITSTREAM FID_BITSTREAM_SERIFA;
MACRO_FID_BITSTREAM FID_BITSTREAM_SERIF_GOTHIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_SERPENTINE;
MACRO_FID_BITSTREAM FID_BITSTREAM_SHAMROCK;
MACRO_FID_BITSTREAM FID_BITSTREAM_SHELLEY;
MACRO_FID_BITSTREAM FID_BITSTREAM_SINALOA;
MACRO_FID_BITSTREAM FID_BITSTREAM_SLIMBACH;
MACRO_FID_BITSTREAM FID_BITSTREAM_SLIPSTREAM;
MACRO_FID_BITSTREAM FID_BITSTREAM_SLOGAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_SONATA;
MACRO_FID_BITSTREAM FID_BITSTREAM_SOUVENIR;
MACRO_FID_BITSTREAM FID_BITSTREAM_SPRINGFIELD;
MACRO_FID_BITSTREAM FID_BITSTREAM_SQUIRE;
MACRO_FID_BITSTREAM FID_BITSTREAM_STEMPEL_SCHNEIDLER;
MACRO_FID_BITSTREAM FID_BITSTREAM_STENCIL;
MACRO_FID_BITSTREAM FID_BITSTREAM_STENTOR;
MACRO_FID_BITSTREAM FID_BITSTREAM_STILLA;
MACRO_FID_BITSTREAM FID_BITSTREAM_STILLA_CAPS;
MACRO_FID_BITSTREAM FID_BITSTREAM_STONE_INFORMAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_STONE_SANS;
MACRO_FID_BITSTREAM FID_BITSTREAM_STONE_SERIF;
MACRO_FID_BITSTREAM FID_BITSTREAM_STOP;
MACRO_FID_BITSTREAM FID_BITSTREAM_STRATFORD;
MACRO_FID_BITSTREAM FID_BITSTREAM_STYMIE;
MACRO_FID_BITSTREAM FID_BITSTREAM_SUPERSTAR;
MACRO_FID_BITSTREAM FID_BITSTREAM_SWIFT;
MACRO_FID_BITSTREAM FID_BITSTREAM_SYNCHRO;
MACRO_FID_BITSTREAM FID_BITSTREAM_SYNTAX;
MACRO_FID_BITSTREAM FID_BITSTREAM_TANGO;
MACRO_FID_BITSTREAM FID_BITSTREAM_TARRAGON;
MACRO_FID_BITSTREAM FID_BITSTREAM_TEKTON;
MACRO_FID_BITSTREAM FID_BITSTREAM_TEMPO;
MACRO_FID_BITSTREAM FID_BITSTREAM_THOROWGOOD;
MACRO_FID_BITSTREAM FID_BITSTREAM_THUNDERBIRD;
MACRO_FID_BITSTREAM FID_BITSTREAM_TIEPOLO;
MACRO_FID_BITSTREAM FID_BITSTREAM_TIFFANY;
MACRO_FID_BITSTREAM FID_BITSTREAM_TIMELESS;
MACRO_FID_BITSTREAM FID_BITSTREAM_TIMES_NEW_ROMAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_TIME_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_TITUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_TRAJAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_TRAJANUS;
MACRO_FID_BITSTREAM FID_BITSTREAM_ULTE_SCHWABACHER;
MACRO_FID_BITSTREAM FID_BITSTREAM_UNIVERS;
MACRO_FID_BITSTREAM FID_BITSTREAM_UNIVERSITY_ROMAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_URW_ANTIQUA;
MACRO_FID_BITSTREAM FID_BITSTREAM_URW_MONO;
MACRO_FID_BITSTREAM FID_BITSTREAM_URW_ROMAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_URW_SANS;
MACRO_FID_BITSTREAM FID_BITSTREAM_URW_SYMBOLPS;
MACRO_FID_BITSTREAM FID_BITSTREAM_USHERWOOD;
MACRO_FID_BITSTREAM FID_BITSTREAM_U_GREEK_MATH_PI;
MACRO_FID_BITSTREAM FID_BITSTREAM_U_NEWS_COMM_PI;
MACRO_FID_BITSTREAM FID_BITSTREAM_VAG_RUNDSCHRIFT;
MACRO_FID_BITSTREAM FID_BITSTREAM_VAN_DIJK;
MACRO_FID_BITSTREAM FID_BITSTREAM_VARIO;
MACRO_FID_BITSTREAM FID_BITSTREAM_VEGAS;
MACRO_FID_BITSTREAM FID_BITSTREAM_VELJOVIC;
MACRO_FID_BITSTREAM FID_BITSTREAM_VENDOME;
MACRO_FID_BITSTREAM FID_BITSTREAM_VICTORIAN;
MACRO_FID_BITSTREAM FID_BITSTREAM_VIVALDI;
MACRO_FID_BITSTREAM FID_BITSTREAM_VLADIMIR_SCRIPT;
MACRO_FID_BITSTREAM FID_BITSTREAM_VOLTA;
MACRO_FID_BITSTREAM FID_BITSTREAM_WALBAUM;
MACRO_FID_BITSTREAM FID_BITSTREAM_WASHINGTON;
MACRO_FID_BITSTREAM FID_BITSTREAM_WEIDEMANN;
MACRO_FID_BITSTREAM FID_BITSTREAM_WEIFZ_RUNDGOTIFCH;
MACRO_FID_BITSTREAM FID_BITSTREAM_WEISS;
MACRO_FID_BITSTREAM FID_BITSTREAM_WINDSOR;
MACRO_FID_BITSTREAM FID_BITSTREAM_WORCESTER_ROUND;
MACRO_FID_BITSTREAM FID_BITSTREAM_ZAPF_BOOK;
MACRO_FID_BITSTREAM FID_BITSTREAM_ZAPF_CHANCERY;
MACRO_FID_BITSTREAM FID_BITSTREAM_ZAPF_DINGBATS;
MACRO_FID_BITSTREAM FID_BITSTREAM_ZAPF_INTERNATIONAL;
MACRO_FID_BITSTREAM FID_BITSTREAM_ZIPPER;
MACRO_FID FID_CALENDAR;
MACRO_FID FID_CHICAGO;
MACRO_FID_DTC FID_DTC_AACHEN;
MACRO_FID_DTC FID_DTC_ACCOLADE;
MACRO_FID_DTC FID_DTC_ACE_I;
MACRO_FID_DTC FID_DTC_ADOBE_CASLON;
MACRO_FID_DTC FID_DTC_ADOBE_GARAMOND;
MACRO_FID_DTC FID_DTC_ADOBE_UTOPIA;
MACRO_FID_DTC FID_DTC_AKZIDENZ_GROTESK;
MACRO_FID_DTC FID_DTC_AKZIDENZ_GROTESK_BUCH;
MACRO_FID_DTC FID_DTC_AKZINDENZ_GROTESK;
MACRO_FID_DTC FID_DTC_ALBERTUS;
MACRO_FID_DTC FID_DTC_ALGERIAN;
MACRO_FID_DTC FID_DTC_ALTERNATE_GOTHIC;
MACRO_FID_DTC FID_DTC_AMERICANA;
MACRO_FID_DTC FID_DTC_AMERICAN_TYPEWRITER;
MACRO_FID_DTC FID_DTC_AMERICAN_UNCIAL;
MACRO_FID_DTC FID_DTC_ANGLIA;
MACRO_FID_DTC FID_DTC_ANGRO;
MACRO_FID_DTC FID_DTC_ANGSANA_NEW;
MACRO_FID_DTC FID_DTC_ANTIQUE_OLIVE;
MACRO_FID_DTC FID_DTC_ANZEIGEN_GROTESK;
MACRO_FID_DTC FID_DTC_ARCADIA;
MACRO_FID_DTC FID_DTC_ARISTON;
MACRO_FID_DTC FID_DTC_ARNOLD_BOCKLIN;
MACRO_FID_DTC FID_DTC_ARSIS;
MACRO_FID_DTC FID_DTC_ASTER;
MACRO_FID_DTC FID_DTC_AUGUSTEA_OPEN;
MACRO_FID_DTC FID_DTC_AUREALIA;
MACRO_FID_DTC FID_DTC_AVANTE_GARDE;
MACRO_FID_DTC FID_DTC_AVANTE_GARDE_CONDENSED;
MACRO_FID_DTC FID_DTC_AVENIR;
MACRO_FID_DTC FID_DTC_BALLOON;
MACRO_FID_DTC FID_DTC_BALMORAL;
MACRO_FID_DTC FID_DTC_BANCO;
MACRO_FID_DTC FID_DTC_BARBEDOR;
MACRO_FID_DTC FID_DTC_BARCELONA;
MACRO_FID_DTC FID_DTC_BASILIA;
MACRO_FID_DTC FID_DTC_BASKERVILLE;
MACRO_FID_DTC FID_DTC_BASKERVILLE_HANDCUT;
MACRO_FID_DTC FID_DTC_BAUER_BODONI;
MACRO_FID_DTC FID_DTC_BAUHAUS;
MACRO_FID_DTC FID_DTC_BELSHAW;
MACRO_FID_DTC FID_DTC_BELWE;
MACRO_FID_DTC FID_DTC_BEMBO;
MACRO_FID_DTC FID_DTC_BENGUIAT_GOTHIC;
MACRO_FID_DTC FID_DTC_BERKELEY_OLD_STYLE;
MACRO_FID_DTC FID_DTC_BERLINER_GROTESK;
MACRO_FID_DTC FID_DTC_BERNHARD_ANTIQUE;
MACRO_FID_DTC FID_DTC_BIBLE_SCRIPT;
MACRO_FID_DTC FID_DTC_BINNER;
MACRO_FID_DTC FID_DTC_BLIPPO_C_BLACK;
MACRO_FID_DTC FID_DTC_BLOCK;
MACRO_FID_DTC FID_DTC_BODONI;
MACRO_FID_DTC FID_DTC_BOOKMAN;
MACRO_FID_DTC FID_DTC_BOTTLENECK;
MACRO_FID_DTC FID_DTC_BRITANNIC;
MACRO_FID_DTC FID_DTC_BROADWAY;
MACRO_FID_DTC FID_DTC_BRODY;
MACRO_FID_DTC FID_DTC_BRONX;
MACRO_FID_DTC FID_DTC_BRUSH_SCRIPT;
MACRO_FID_DTC FID_DTC_BUNDESBAHN_PI_1;
MACRO_FID_DTC FID_DTC_BUNDESBAHN_PI_2;
MACRO_FID_DTC FID_DTC_BUNDESBAHN_PI_3;
MACRO_FID_DTC FID_DTC_BUSTER;
MACRO_FID_DTC FID_DTC_BUXOM;
MACRO_FID_DTC FID_DTC_CABARET;
MACRO_FID_DTC FID_DTC_CAMELLIA;
MACRO_FID_DTC FID_DTC_CANDICE;
MACRO_FID_DTC FID_DTC_CANDIDA;
MACRO_FID_DTC FID_DTC_CAROUSEL;
MACRO_FID_DTC FID_DTC_CARTA;
MACRO_FID_DTC FID_DTC_CASCADE_SCRIPT;
MACRO_FID_DTC FID_DTC_CASLON;
MACRO_FID_DTC FID_DTC_CASTLE;
MACRO_FID_DTC FID_DTC_CAXTON;
MACRO_FID_DTC FID_DTC_CENTENNIAL;
MACRO_FID_DTC FID_DTC_CENTURY;
MACRO_FID_DTC FID_DTC_CENTURY_OLD_STYLE;
MACRO_FID_DTC FID_DTC_CENTURY_SCHOOLBOOK;
MACRO_FID_DTC FID_DTC_CHARLEMAGNE;
MACRO_FID_DTC FID_DTC_CHARME;
MACRO_FID_DTC FID_DTC_CHELMSFORD;
MACRO_FID_DTC FID_DTC_CHELTENHAM;
MACRO_FID_DTC FID_DTC_CHEQ;
MACRO_FID_DTC FID_DTC_CHESTERFIELD;
MACRO_FID_DTC FID_DTC_CHISEL;
MACRO_FID_DTC FID_DTC_CHOC;
MACRO_FID_DTC FID_DTC_CHROMIUM_ONE;
MACRO_FID_DTC FID_DTC_CHURCHWARD_BRUSH;
MACRO_FID_DTC FID_DTC_CIRKULUS;
MACRO_FID_DTC FID_DTC_CITY;
MACRO_FID_DTC FID_DTC_CLARENDON;
MACRO_FID_DTC FID_DTC_CLEARFACE;
MACRO_FID_DTC FID_DTC_CLEARFACE_GOTHIC;
MACRO_FID_DTC FID_DTC_COCHIN;
MACRO_FID_DTC FID_DTC_COLUMNA_SOLID;
MACRO_FID_DTC FID_DTC_COMMERCIAL_SCRIPT;
MACRO_FID_DTC FID_DTC_COMPACTA;
MACRO_FID_DTC FID_DTC_COMPANY;
MACRO_FID_DTC FID_DTC_CONCORDE;
MACRO_FID_DTC FID_DTC_CONCORDE_NOVA;
MACRO_FID_DTC FID_DTC_CONFERENCE;
MACRO_FID_DTC FID_DTC_CONGRESS;
MACRO_FID_DTC FID_DTC_COOPER_C_BLACK;
MACRO_FID_DTC FID_DTC_COPPERPLATE;
MACRO_FID_DTC FID_DTC_CORINTHIAN;
MACRO_FID_DTC FID_DTC_CORONA;
MACRO_FID_DTC FID_DTC_CORTEZ;
MACRO_FID_DTC FID_DTC_COTTONWOOD;
MACRO_FID_DTC FID_DTC_COUNTDOWN;
MACRO_FID_DTC FID_DTC_CRILLEE;
MACRO_FID_DTC FID_DTC_CROISSANT;
MACRO_FID_DTC FID_DTC_CUSHING;
MACRO_FID_DTC FID_DTC_DATA_70;
MACRO_FID_DTC FID_DTC_DAVIDA;
MACRO_FID_DTC FID_DTC_DEMIAN;
MACRO_FID_DTC FID_DTC_DEMOS;
MACRO_FID_DTC FID_DTC_DIGI_ANTIQUA;
MACRO_FID_DTC FID_DTC_DIGI_GROTESK;
MACRO_FID_DTC FID_DTC_DINGBATS;
MACRO_FID_DTC FID_DTC_DOM_CASUAL;
MACRO_FID_DTC FID_DTC_DORIC_BOLD;
MACRO_FID_DTC FID_DTC_DYNAMO;
MACRO_FID_DTC FID_DTC_ECKMANN;
MACRO_FID_DTC FID_DTC_EDISON;
MACRO_FID_DTC FID_DTC_EDWARDIAN;
MACRO_FID_DTC FID_DTC_EGIZIO;
MACRO_FID_DTC FID_DTC_EGYPTIENNE;
MACRO_FID_DTC FID_DTC_EINHORN;
MACRO_FID_DTC FID_DTC_ELAN;
MACRO_FID_DTC FID_DTC_ENGLISCHE_SCHREIBSCHRIFT;
MACRO_FID_DTC FID_DTC_ENVIRO;
MACRO_FID_DTC FID_DTC_ERAS;
MACRO_FID_DTC FID_DTC_ESPRIT;
MACRO_FID_DTC FID_DTC_EUROSTILE;
MACRO_FID_DTC FID_DTC_EXCELSIOR;
MACRO_FID_DTC FID_DTC_FENICE;
MACRO_FID_DTC FID_DTC_FETTE_ENGSCHRIFT;
MACRO_FID_DTC FID_DTC_FETTE_FRAKTUR;
MACRO_FID_DTC FID_DTC_FETTE_GOTILCH;
MACRO_FID_DTC FID_DTC_FETTE_MIDSCHRIFT;
MACRO_FID_DTC FID_DTC_FLAMENCO;
MACRO_FID_DTC FID_DTC_FLANGE;
MACRO_FID_DTC FID_DTC_FLASH;
MACRO_FID_DTC FID_DTC_FLORA;
MACRO_FID_DTC FID_DTC_FLYER;
MACRO_FID_DTC FID_DTC_FOLIO;
MACRO_FID_DTC FID_DTC_FRANKFURTER;
MACRO_FID_DTC FID_DTC_FRANKLIN_GOTHIC;
MACRO_FID_DTC FID_DTC_FREESTYLE_SCRIPT;
MACRO_FID_DTC FID_DTC_FRIZ_QUADRATA;
MACRO_FID_DTC FID_DTC_FRUTIGER;
MACRO_FID_DTC FID_DTC_FUN_DINGBATS;
MACRO_FID_DTC FID_DTC_FUTURA;
MACRO_FID_DTC FID_DTC_FUTURA_C_BLACK;
MACRO_FID_DTC FID_DTC_FUTURA_DISPLAY;
MACRO_FID_DTC FID_DTC_GALADRIEL;
MACRO_FID_DTC FID_DTC_GALLIARD;
MACRO_FID_DTC FID_DTC_GALLIARD_ROMAN_ITALIC;
MACRO_FID_DTC FID_DTC_GAMMA;
MACRO_FID_DTC FID_DTC_GARAMOND;
MACRO_FID_DTC FID_DTC_GARTH_GRAPHIC;
MACRO_FID_DTC FID_DTC_GILL;
MACRO_FID_DTC FID_DTC_GILLIES_GOTHIC;
MACRO_FID_DTC FID_DTC_GILL_KAYO;
MACRO_FID_DTC FID_DTC_GILL_SANS;
MACRO_FID_DTC FID_DTC_GLASER_STENCIL;
MACRO_FID_DTC FID_DTC_GLASTONBURY;
MACRO_FID_DTC FID_DTC_GLYPHA;
MACRO_FID_DTC FID_DTC_GOTHIC;
MACRO_FID_DTC FID_DTC_GOUDY;
MACRO_FID_DTC FID_DTC_GOUDY_HEAVYFACE;
MACRO_FID_DTC FID_DTC_GOUDY_OLD_STYLE;
MACRO_FID_DTC FID_DTC_GOUDY_SANS;
MACRO_FID_DTC FID_DTC_GRANJON;
MACRO_FID_DTC FID_DTC_GROTESK;
MACRO_FID_DTC FID_DTC_HAAS_UNICA;
MACRO_FID_DTC FID_DTC_HADFIELD;
MACRO_FID_DTC FID_DTC_HARLOW;
MACRO_FID_DTC FID_DTC_HAWTHORN;
MACRO_FID_DTC FID_DTC_HELVETICA;
MACRO_FID_DTC FID_DTC_HELVETICA_INSERAT;
MACRO_FID_DTC FID_DTC_HIGHLIGHT;
MACRO_FID_DTC FID_DTC_HILL;
MACRO_FID_DTC FID_DTC_HIROSHIGE;
MACRO_FID_DTC FID_DTC_HOBO;
MACRO_FID_DTC FID_DTC_HOGARTH_SCRIPT;
MACRO_FID_DTC FID_DTC_HOLLANDER;
MACRO_FID_DTC FID_DTC_HOLSATIA;
MACRO_FID_DTC FID_DTC_HORATIO;
MACRO_FID_DTC FID_DTC_HORNDON;
MACRO_FID_DTC FID_DTC_ICE_AGE;
MACRO_FID_DTC FID_DTC_ICONE;
MACRO_FID_DTC FID_DTC_IMPRESSUM;
MACRO_FID_DTC FID_DTC_INDUSTRIA;
MACRO_FID_DTC FID_DTC_INSIGNIA;
MACRO_FID_DTC FID_DTC_ISADORA;
MACRO_FID_DTC FID_DTC_ISBELL;
MACRO_FID_DTC FID_DTC_ITALIA;
MACRO_FID_DTC FID_DTC_JAMILLE;
MACRO_FID_DTC FID_DTC_JANSON;
MACRO_FID_DTC FID_DTC_JENSON_OLD_STYLE;
MACRO_FID_DTC FID_DTC_JULIA_SCRIPT;
MACRO_FID_DTC FID_DTC_JUNIPER;
MACRO_FID_DTC FID_DTC_KABEL;
MACRO_FID_DTC FID_DTC_KALLIGRAPHIA;
MACRO_FID_DTC FID_DTC_KANJI_HON_MINCHO;
MACRO_FID_DTC FID_DTC_KANJI_SQUARE_GOTHIC;
MACRO_FID_DTC FID_DTC_KAPITELLIA;
MACRO_FID_DTC FID_DTC_KAUFMANN;
MACRO_FID_DTC FID_DTC_KNIGHTSBRIDGE;
MACRO_FID_DTC FID_DTC_KORINNA;
MACRO_FID_DTC FID_DTC_KUNSTLERSCHREIBSCHRIFT;
MACRO_FID_DTC FID_DTC_LATIN_WIDE;
MACRO_FID_DTC FID_DTC_LAZYBONES;
MACRO_FID_DTC FID_DTC_LCD;
MACRO_FID_DTC FID_DTC_LEAWOOD;
MACRO_FID_DTC FID_DTC_LETTER_GOTHIC;
MACRO_FID_DTC FID_DTC_LE_GRIFFE;
MACRO_FID_DTC FID_DTC_LIBERTY;
MACRO_FID_DTC FID_DTC_LIFE;
MACRO_FID_DTC FID_DTC_LINDSAY;
MACRO_FID_DTC FID_DTC_LINOSCRIPT;
MACRO_FID_DTC FID_DTC_LINOTEXT;
MACRO_FID_DTC FID_DTC_LITERA;
MACRO_FID_DTC FID_DTC_LITHOS;
MACRO_FID_DTC FID_DTC_LUBALIN_GRAPH;
MACRO_FID_DTC FID_DTC_LUCIDA;
MACRO_FID_DTC FID_DTC_LUCIDA_SANS;
MACRO_FID_DTC FID_DTC_MACHINE;
MACRO_FID_DTC FID_DTC_MADISON;
MACRO_FID_DTC FID_DTC_MAGNA;
MACRO_FID_DTC FID_DTC_MAGNUS;
MACRO_FID_DTC FID_DTC_MARCONI;
MACRO_FID_DTC FID_DTC_MARIAGE;
MACRO_FID_DTC FID_DTC_MAXIMA;
MACRO_FID_DTC FID_DTC_MEDICI_SCRIPT;
MACRO_FID_DTC FID_DTC_MELIOR;
MACRO_FID_DTC FID_DTC_MEMPHIS;
MACRO_FID_DTC FID_DTC_MERIDIEN;
MACRO_FID_DTC FID_DTC_MESSIDOR;
MACRO_FID_DTC FID_DTC_MICR;
MACRO_FID_DTC FID_DTC_MICROGRAMMA;
MACRO_FID_DTC FID_DTC_MINISTER;
MACRO_FID_DTC FID_DTC_MISTRAL;
MACRO_FID_DTC FID_DTC_MIXAGE;
MACRO_FID_DTC FID_DTC_MODERN;
MACRO_FID_DTC FID_DTC_MODERN_NO_216;
MACRO_FID_DTC FID_DTC_MOTTER_FEMINA;
MACRO_FID_DTC FID_DTC_NAPOLEAN;
MACRO_FID_DTC FID_DTC_NEUE_HELVETICA;
MACRO_FID_DTC FID_DTC_NEUZEIT_GROTESK;
MACRO_FID_DTC FID_DTC_NEVISON_CASUAL;
MACRO_FID_DTC FID_DTC_NEWS_GOTHIC;
MACRO_FID_DTC FID_DTC_NEWTEXT;
MACRO_FID_DTC FID_DTC_NEW_ASTER;
MACRO_FID_DTC FID_DTC_NICOLAS_COCHIN;
MACRO_FID_DTC FID_DTC_NIKIS;
MACRO_FID_DTC FID_DTC_NIMROD;
MACRO_FID_DTC FID_DTC_NOVARESE;
MACRO_FID_DTC FID_DTC_NUPITAL_SCRIPT;
MACRO_FID_DTC FID_DTC_OCR_A;
MACRO_FID_DTC FID_DTC_OCR_B;
MACRO_FID_DTC FID_DTC_OCTOPUSS;
MACRO_FID_DTC FID_DTC_ODIN;
MACRO_FID_DTC FID_DTC_OKAY;
MACRO_FID_DTC FID_DTC_OLD_ENGLISH;
MACRO_FID_DTC FID_DTC_OLD_TOWN;
MACRO_FID_DTC FID_DTC_OPTIMA;
MACRO_FID_DTC FID_DTC_PACELLA;
MACRO_FID_DTC FID_DTC_PADDINGTION;
MACRO_FID_DTC FID_DTC_PALACE_SCRIPT;
MACRO_FID_DTC FID_DTC_PALATINO;
MACRO_FID_DTC FID_DTC_PALETTE;
MACRO_FID_DTC FID_DTC_PANACHE;
MACRO_FID_DTC FID_DTC_PAPYRUS;
MACRO_FID_DTC FID_DTC_PARK_AVENUE;
MACRO_FID_DTC FID_DTC_PEIGNOT;
MACRO_FID_DTC FID_DTC_PENDRY_SCRIPT;
MACRO_FID_DTC FID_DTC_PEPITA;
MACRO_FID_DTC FID_DTC_PERPETUA;
MACRO_FID_DTC FID_DTC_PHYLLIS;
MACRO_FID_DTC FID_DTC_PHYLLIS_INITIALS;
MACRO_FID_DTC FID_DTC_PICCADILLY;
MACRO_FID_DTC FID_DTC_PLANTIN;
MACRO_FID_DTC FID_DTC_PLAYBILL;
MACRO_FID_DTC FID_DTC_PLAZA;
MACRO_FID_DTC FID_DTC_POST_ANTIQUA;
MACRO_FID_DTC FID_DTC_PRAXIS;
MACRO_FID_DTC FID_DTC_PREMIER;
MACRO_FID_DTC FID_DTC_PRESENT_SCRIPT;
MACRO_FID_DTC FID_DTC_PRESIDENT;
MACRO_FID_DTC FID_DTC_PRESTIGE_ELITE;
MACRO_FID_DTC FID_DTC_PRIMUS;
MACRO_FID_DTC FID_DTC_PRIMUS_ANTIQUA;
MACRO_FID_DTC FID_DTC_PRINCETOWN;
MACRO_FID_DTC FID_DTC_PROTEUS;
MACRO_FID_DTC FID_DTC_PRO_ARTE;
MACRO_FID_DTC FID_DTC_PUMP;
MACRO_FID_DTC FID_DTC_QUENTIN;
MACRO_FID_DTC FID_DTC_QUORUM;
MACRO_FID_DTC FID_DTC_RAGE;
MACRO_FID_DTC FID_DTC_RALEIGH;
MACRO_FID_DTC FID_DTC_RENAULT;
MACRO_FID_DTC FID_DTC_REVUE;
MACRO_FID_DTC FID_DTC_RIALTO;
MACRO_FID_DTC FID_DTC_ROCKWELL;
MACRO_FID_DTC FID_DTC_ROMANA;
MACRO_FID_DTC FID_DTC_ROMAN_SCRIPT;
MACRO_FID_DTC FID_DTC_ROMIC;
MACRO_FID_DTC FID_DTC_RUBBER_STAMP;
MACRO_FID_DTC FID_DTC_SABON;
MACRO_FID_DTC FID_DTC_SABON_ANTIQUA;
MACRO_FID_DTC FID_DTC_SERIFA;
MACRO_FID_DTC FID_DTC_SERIF_GOTHIC;
MACRO_FID_DTC FID_DTC_SERPENTINE;
MACRO_FID_DTC FID_DTC_SHAMROCK;
MACRO_FID_DTC FID_DTC_SHELLEY;
MACRO_FID_DTC FID_DTC_SINALOA;
MACRO_FID_DTC FID_DTC_SLIMBACH;
MACRO_FID_DTC FID_DTC_SLIPSTREAM;
MACRO_FID_DTC FID_DTC_SLOGAN;
MACRO_FID_DTC FID_DTC_SONATA;
MACRO_FID_DTC FID_DTC_SOUVENIR;
MACRO_FID_DTC FID_DTC_SPRINGFIELD;
MACRO_FID_DTC FID_DTC_SQUIRE;
MACRO_FID_DTC FID_DTC_STEMPEL_SCHNEIDLER;
MACRO_FID_DTC FID_DTC_STENCIL;
MACRO_FID_DTC FID_DTC_STENTOR;
MACRO_FID_DTC FID_DTC_STILLA;
MACRO_FID_DTC FID_DTC_STILLA_CAPS;
MACRO_FID_DTC FID_DTC_STONE_INFORMAL;
MACRO_FID_DTC FID_DTC_STONE_SANS;
MACRO_FID_DTC FID_DTC_STONE_SERIF;
MACRO_FID_DTC FID_DTC_STOP;
MACRO_FID_DTC FID_DTC_STRATFORD;
MACRO_FID_DTC FID_DTC_STYMIE;
MACRO_FID_DTC FID_DTC_SUPERSTAR;
MACRO_FID_DTC FID_DTC_SWIFT;
MACRO_FID_DTC FID_DTC_SYNCHRO;
MACRO_FID_DTC FID_DTC_SYNTAX;
MACRO_FID_DTC FID_DTC_TANGO;
MACRO_FID_DTC FID_DTC_TARRAGON;
MACRO_FID_DTC FID_DTC_TEKTON;
MACRO_FID_DTC FID_DTC_TEMPO;
MACRO_FID_DTC FID_DTC_THOROWGOOD;
MACRO_FID_DTC FID_DTC_THUNDERBIRD;
MACRO_FID_DTC FID_DTC_TIEPOLO;
MACRO_FID_DTC FID_DTC_TIFFANY;
MACRO_FID_DTC FID_DTC_TIMELESS;
MACRO_FID_DTC FID_DTC_TIMES_NEW_ROMAN;
MACRO_FID_DTC FID_DTC_TIME_SCRIPT;
MACRO_FID_DTC FID_DTC_TITUS;
MACRO_FID_DTC FID_DTC_TRAJAN;
MACRO_FID_DTC FID_DTC_TRAJANUS;
MACRO_FID_DTC FID_DTC_ULTE_SCHWABACHER;
MACRO_FID_DTC FID_DTC_UNIVERS;
MACRO_FID_DTC FID_DTC_UNIVERSITY_ROMAN;
MACRO_FID_DTC FID_DTC_URW_ANTIQUA;
MACRO_FID_DTC FID_DTC_URW_MONO;
MACRO_FID_DTC FID_DTC_URW_ROMAN;
MACRO_FID_DTC FID_DTC_URW_SANS;
MACRO_FID_DTC FID_DTC_URW_SYMBOLPS;
MACRO_FID_DTC FID_DTC_USHERWOOD;
MACRO_FID_DTC FID_DTC_U_GREEK_MATH_PI;
MACRO_FID_DTC FID_DTC_U_NEWS_COMM_PI;
MACRO_FID_DTC FID_DTC_VAG_RUNDSCHRIFT;
MACRO_FID_DTC FID_DTC_VAN_DIJK;
MACRO_FID_DTC FID_DTC_VARIO;
MACRO_FID_DTC FID_DTC_VEGAS;
MACRO_FID_DTC FID_DTC_VELJOVIC;
MACRO_FID_DTC FID_DTC_VENDOME;
MACRO_FID_DTC FID_DTC_VICTORIAN;
MACRO_FID_DTC FID_DTC_VIVALDI;
MACRO_FID_DTC FID_DTC_VLADIMIR_SCRIPT;
MACRO_FID_DTC FID_DTC_VOLTA;
MACRO_FID_DTC FID_DTC_WALBAUM;
MACRO_FID_DTC FID_DTC_WASHINGTON;
MACRO_FID_DTC FID_DTC_WEIDEMANN;
MACRO_FID_DTC FID_DTC_WEIFZ_RUNDGOTIFCH;
MACRO_FID_DTC FID_DTC_WEISS;
MACRO_FID_DTC FID_DTC_WINDSOR;
MACRO_FID_DTC FID_DTC_WORCESTER_ROUND;
MACRO_FID_DTC FID_DTC_ZAPF_BOOK;
MACRO_FID_DTC FID_DTC_ZAPF_CHANCERY;
MACRO_FID_DTC FID_DTC_ZAPF_DINGBATS;
MACRO_FID_DTC FID_DTC_ZAPF_INTERNATIONAL;
MACRO_FID_DTC FID_DTC_ZIPPER;
MACRO_FID FID_INVALID;
MACRO_FID FID_JSYS;
MACRO_FID FID_LED;
MACRO_DEFAULT_FONT FID_NAME_LEN;
MACRO_FID FID_NOTEPAD;
MACRO_FID FID_PIZZA_KANJI;
MACRO_FID FID_PMSYSTEM;
MACRO_FID_PRINTER FID_PRINTER_10CPI;
MACRO_FID_PRINTER FID_PRINTER_12CPI;
MACRO_FID_PRINTER FID_PRINTER_15CPI;
MACRO_FID_PRINTER FID_PRINTER_16CPI;
MACRO_FID_PRINTER FID_PRINTER_17CPI;
MACRO_FID_PRINTER FID_PRINTER_20CPI;
MACRO_FID_PRINTER FID_PRINTER_24CPI;
MACRO_FID_PRINTER FID_PRINTER_PROP_SANS;
MACRO_FID_PRINTER FID_PRINTER_PROP_SERIF;
MACRO_FID_PS FID_PS_AACHEN;
MACRO_FID_PS FID_PS_ACCOLADE;
MACRO_FID_PS FID_PS_ACE_I;
MACRO_FID_PS FID_PS_ADOBE_CASLON;
MACRO_FID_PS FID_PS_ADOBE_GARAMOND;
MACRO_FID_PS FID_PS_ADOBE_UTOPIA;
MACRO_FID_PS FID_PS_AKZIDENZ_GROTESK;
MACRO_FID_PS FID_PS_AKZIDENZ_GROTESK_BUCH;
MACRO_FID_PS FID_PS_AKZINDENZ_GROTESK;
MACRO_FID_PS FID_PS_ALBERTUS;
MACRO_FID_PS FID_PS_ALGERIAN;
MACRO_FID_PS FID_PS_ALTERNATE_GOTHIC;
MACRO_FID_PS FID_PS_AMERICANA;
MACRO_FID_PS FID_PS_AMERICAN_TYPEWRITER;
MACRO_FID_PS FID_PS_AMERICAN_UNCIAL;
MACRO_FID_PS FID_PS_ANGLIA;
MACRO_FID_PS FID_PS_ANGRO;
MACRO_FID_PS FID_PS_ANGSANA_NEW;
MACRO_FID_PS FID_PS_ANTIQUE_OLIVE;
MACRO_FID_PS FID_PS_ANZEIGEN_GROTESK;
MACRO_FID_PS FID_PS_ARCADIA;
MACRO_FID_PS FID_PS_ARISTON;
MACRO_FID_PS FID_PS_ARNOLD_BOCKLIN;
MACRO_FID_PS FID_PS_ARSIS;
MACRO_FID_PS FID_PS_ASTER;
MACRO_FID_PS FID_PS_AUGUSTEA_OPEN;
MACRO_FID_PS FID_PS_AUREALIA;
MACRO_FID_PS FID_PS_AVANTE_GARDE;
MACRO_FID_PS FID_PS_AVANTE_GARDE_CONDENSED;
MACRO_FID_PS FID_PS_AVENIR;
MACRO_FID_PS FID_PS_BALLOON;
MACRO_FID_PS FID_PS_BALMORAL;
MACRO_FID_PS FID_PS_BANCO;
MACRO_FID_PS FID_PS_BARBEDOR;
MACRO_FID_PS FID_PS_BARCELONA;
MACRO_FID_PS FID_PS_BASILIA;
MACRO_FID_PS FID_PS_BASKERVILLE;
MACRO_FID_PS FID_PS_BASKERVILLE_HANDCUT;
MACRO_FID_PS FID_PS_BAUER_BODONI;
MACRO_FID_PS FID_PS_BAUHAUS;
MACRO_FID_PS FID_PS_BELSHAW;
MACRO_FID_PS FID_PS_BELWE;
MACRO_FID_PS FID_PS_BEMBO;
MACRO_FID_PS FID_PS_BENGUIAT_GOTHIC;
MACRO_FID_PS FID_PS_BERKELEY_OLD_STYLE;
MACRO_FID_PS FID_PS_BERLINER_GROTESK;
MACRO_FID_PS FID_PS_BERNHARD_ANTIQUE;
MACRO_FID_PS FID_PS_BIBLE_SCRIPT;
MACRO_FID_PS FID_PS_BINNER;
MACRO_FID_PS FID_PS_BLIPPO_C_BLACK;
MACRO_FID_PS FID_PS_BLOCK;
MACRO_FID_PS FID_PS_BODONI;
MACRO_FID_PS FID_PS_BOOKMAN;
MACRO_FID_PS FID_PS_BOTTLENECK;
MACRO_FID_PS FID_PS_BRITANNIC;
MACRO_FID_PS FID_PS_BROADWAY;
MACRO_FID_PS FID_PS_BRODY;
MACRO_FID_PS FID_PS_BRONX;
MACRO_FID_PS FID_PS_BRUSH_SCRIPT;
MACRO_FID_PS FID_PS_BUNDESBAHN_PI_1;
MACRO_FID_PS FID_PS_BUNDESBAHN_PI_2;
MACRO_FID_PS FID_PS_BUNDESBAHN_PI_3;
MACRO_FID_PS FID_PS_BUSTER;
MACRO_FID_PS FID_PS_BUXOM;
MACRO_FID_PS FID_PS_CABARET;
MACRO_FID_PS FID_PS_CAMELLIA;
MACRO_FID_PS FID_PS_CANDICE;
MACRO_FID_PS FID_PS_CANDIDA;
MACRO_FID_PS FID_PS_CAROUSEL;
MACRO_FID_PS FID_PS_CARTA;
MACRO_FID_PS FID_PS_CASCADE_SCRIPT;
MACRO_FID_PS FID_PS_CASLON;
MACRO_FID_PS FID_PS_CASTLE;
MACRO_FID_PS FID_PS_CAXTON;
MACRO_FID_PS FID_PS_CENTENNIAL;
MACRO_FID_PS FID_PS_CENTURY;
MACRO_FID_PS FID_PS_CENTURY_OLD_STYLE;
MACRO_FID_PS FID_PS_CENTURY_SCHOOLBOOK;
MACRO_FID_PS FID_PS_CHARLEMAGNE;
MACRO_FID_PS FID_PS_CHARME;
MACRO_FID_PS FID_PS_CHELMSFORD;
MACRO_FID_PS FID_PS_CHELTENHAM;
MACRO_FID_PS FID_PS_CHEQ;
MACRO_FID_PS FID_PS_CHESTERFIELD;
MACRO_FID_PS FID_PS_CHISEL;
MACRO_FID_PS FID_PS_CHOC;
MACRO_FID_PS FID_PS_CHROMIUM_ONE;
MACRO_FID_PS FID_PS_CHURCHWARD_BRUSH;
MACRO_FID_PS FID_PS_CIRKULUS;
MACRO_FID_PS FID_PS_CITY;
MACRO_FID_PS FID_PS_CLARENDON;
MACRO_FID_PS FID_PS_CLEARFACE;
MACRO_FID_PS FID_PS_CLEARFACE_GOTHIC;
MACRO_FID_PS FID_PS_COCHIN;
MACRO_FID_PS FID_PS_COLUMNA_SOLID;
MACRO_FID_PS FID_PS_COMMERCIAL_SCRIPT;
MACRO_FID_PS FID_PS_COMPACTA;
MACRO_FID_PS FID_PS_COMPANY;
MACRO_FID_PS FID_PS_CONCORDE;
MACRO_FID_PS FID_PS_CONCORDE_NOVA;
MACRO_FID_PS FID_PS_CONFERENCE;
MACRO_FID_PS FID_PS_CONGRESS;
MACRO_FID_PS FID_PS_COOPER_C_BLACK;
MACRO_FID_PS FID_PS_COPPERPLATE;
MACRO_FID_PS FID_PS_CORINTHIAN;
MACRO_FID_PS FID_PS_CORONA;
MACRO_FID_PS FID_PS_CORTEZ;
MACRO_FID_PS FID_PS_COTTONWOOD;
MACRO_FID_PS FID_PS_COUNTDOWN;
MACRO_FID_PS FID_PS_COURIER;
MACRO_FID_PS FID_PS_CRILLEE;
MACRO_FID_PS FID_PS_CROISSANT;
MACRO_FID_PS FID_PS_CUSHING;
MACRO_FID_PS FID_PS_DATA_70;
MACRO_FID_PS FID_PS_DAVIDA;
MACRO_FID_PS FID_PS_DEMIAN;
MACRO_FID_PS FID_PS_DEMOS;
MACRO_FID_PS FID_PS_DIGI_ANTIQUA;
MACRO_FID_PS FID_PS_DIGI_GROTESK;
MACRO_FID_PS FID_PS_DINGBATS;
MACRO_FID_PS FID_PS_DOM_CASUAL;
MACRO_FID_PS FID_PS_DORIC_BOLD;
MACRO_FID_PS FID_PS_DYNAMO;
MACRO_FID_PS FID_PS_ECKMANN;
MACRO_FID_PS FID_PS_EDISON;
MACRO_FID_PS FID_PS_EDWARDIAN;
MACRO_FID_PS FID_PS_EGIZIO;
MACRO_FID_PS FID_PS_EGYPTIENNE;
MACRO_FID_PS FID_PS_EINHORN;
MACRO_FID_PS FID_PS_ELAN;
MACRO_FID_PS FID_PS_ENGLISCHE_SCHREIBSCHRIFT;
MACRO_FID_PS FID_PS_ENVIRO;
MACRO_FID_PS FID_PS_ERAS;
MACRO_FID_PS FID_PS_ESPRIT;
MACRO_FID_PS FID_PS_EUROSTILE;
MACRO_FID_PS FID_PS_EXCELSIOR;
MACRO_FID_PS FID_PS_FENICE;
MACRO_FID_PS FID_PS_FETTE_ENGSCHRIFT;
MACRO_FID_PS FID_PS_FETTE_FRAKTUR;
MACRO_FID_PS FID_PS_FETTE_GOTILCH;
MACRO_FID_PS FID_PS_FETTE_MIDSCHRIFT;
MACRO_FID_PS FID_PS_FLAMENCO;
MACRO_FID_PS FID_PS_FLANGE;
MACRO_FID_PS FID_PS_FLASH;
MACRO_FID_PS FID_PS_FLORA;
MACRO_FID_PS FID_PS_FLYER;
MACRO_FID_PS FID_PS_FOLIO;
MACRO_FID_PS FID_PS_FRANKFURTER;
MACRO_FID_PS FID_PS_FRANKLIN_GOTHIC;
MACRO_FID_PS FID_PS_FREESTYLE_SCRIPT;
MACRO_FID_PS FID_PS_FRIZ_QUADRATA;
MACRO_FID_PS FID_PS_FRUTIGER;
MACRO_FID_PS FID_PS_FUN_DINGBATS;
MACRO_FID_PS FID_PS_FUTURA;
MACRO_FID_PS FID_PS_FUTURA_C_BLACK;
MACRO_FID_PS FID_PS_FUTURA_DISPLAY;
MACRO_FID_PS FID_PS_GALADRIEL;
MACRO_FID_PS FID_PS_GALLIARD;
MACRO_FID_PS FID_PS_GALLIARD_ROMAN_ITALIC;
MACRO_FID_PS FID_PS_GAMMA;
MACRO_FID_PS FID_PS_GARAMOND;
MACRO_FID_PS FID_PS_GARTH_GRAPHIC;
MACRO_FID_PS FID_PS_GILL;
MACRO_FID_PS FID_PS_GILLIES_GOTHIC;
MACRO_FID_PS FID_PS_GILL_KAYO;
MACRO_FID_PS FID_PS_GILL_SANS;
MACRO_FID_PS FID_PS_GLASER_STENCIL;
MACRO_FID_PS FID_PS_GLASTONBURY;
MACRO_FID_PS FID_PS_GLYPHA;
MACRO_FID_PS FID_PS_GOTHIC;
MACRO_FID_PS FID_PS_GOUDY;
MACRO_FID_PS FID_PS_GOUDY_HEAVYFACE;
MACRO_FID_PS FID_PS_GOUDY_OLD_STYLE;
MACRO_FID_PS FID_PS_GOUDY_SANS;
MACRO_FID_PS FID_PS_GRANJON;
MACRO_FID_PS FID_PS_GROTESK;
MACRO_FID_PS FID_PS_HAAS_UNICA;
MACRO_FID_PS FID_PS_HADFIELD;
MACRO_FID_PS FID_PS_HARLOW;
MACRO_FID_PS FID_PS_HAWTHORN;
MACRO_FID_PS FID_PS_HELVETICA;
MACRO_FID_PS FID_PS_HELVETICA_INSERAT;
MACRO_FID_PS FID_PS_HIGHLIGHT;
MACRO_FID_PS FID_PS_HILL;
MACRO_FID_PS FID_PS_HIROSHIGE;
MACRO_FID_PS FID_PS_HOBO;
MACRO_FID_PS FID_PS_HOGARTH_SCRIPT;
MACRO_FID_PS FID_PS_HOLLANDER;
MACRO_FID_PS FID_PS_HOLSATIA;
MACRO_FID_PS FID_PS_HORATIO;
MACRO_FID_PS FID_PS_HORNDON;
MACRO_FID_PS FID_PS_ICE_AGE;
MACRO_FID_PS FID_PS_ICONE;
MACRO_FID_PS FID_PS_IMPRESSUM;
MACRO_FID_PS FID_PS_INDUSTRIA;
MACRO_FID_PS FID_PS_INSIGNIA;
MACRO_FID_PS FID_PS_ISADORA;
MACRO_FID_PS FID_PS_ISBELL;
MACRO_FID_PS FID_PS_ITALIA;
MACRO_FID_PS FID_PS_JAMILLE;
MACRO_FID_PS FID_PS_JANSON;
MACRO_FID_PS FID_PS_JENSON_OLD_STYLE;
MACRO_FID_PS FID_PS_JULIA_SCRIPT;
MACRO_FID_PS FID_PS_JUNIPER;
MACRO_FID_PS FID_PS_KABEL;
MACRO_FID_PS FID_PS_KALLIGRAPHIA;
MACRO_FID_PS FID_PS_KANJI_HON_MINCHO;
MACRO_FID_PS FID_PS_KANJI_SQUARE_GOTHIC;
MACRO_FID_PS FID_PS_KAPITELLIA;
MACRO_FID_PS FID_PS_KAUFMANN;
MACRO_FID_PS FID_PS_KNIGHTSBRIDGE;
MACRO_FID_PS FID_PS_KORINNA;
MACRO_FID_PS FID_PS_KUNSTLERSCHREIBSCHRIFT;
MACRO_FID_PS FID_PS_LATIN_WIDE;
MACRO_FID_PS FID_PS_LAZYBONES;
MACRO_FID_PS FID_PS_LCD;
MACRO_FID_PS FID_PS_LEAWOOD;
MACRO_FID_PS FID_PS_LETTER_GOTHIC;
MACRO_FID_PS FID_PS_LE_GRIFFE;
MACRO_FID_PS FID_PS_LIBERTY;
MACRO_FID_PS FID_PS_LIFE;
MACRO_FID_PS FID_PS_LINDSAY;
MACRO_FID_PS FID_PS_LINOSCRIPT;
MACRO_FID_PS FID_PS_LINOTEXT;
MACRO_FID_PS FID_PS_LITERA;
MACRO_FID_PS FID_PS_LITHOS;
MACRO_FID_PS FID_PS_LUBALIN_GRAPH;
MACRO_FID_PS FID_PS_LUCIDA;
MACRO_FID_PS FID_PS_LUCIDA_SANS;
MACRO_FID_PS FID_PS_MACHINE;
MACRO_FID_PS FID_PS_MADISON;
MACRO_FID_PS FID_PS_MAGNA;
MACRO_FID_PS FID_PS_MAGNUS;
MACRO_FID_PS FID_PS_MARCONI;
MACRO_FID_PS FID_PS_MARIAGE;
MACRO_FID_PS FID_PS_MAXIMA;
MACRO_FID_PS FID_PS_MEDICI_SCRIPT;
MACRO_FID_PS FID_PS_MELIOR;
MACRO_FID_PS FID_PS_MEMPHIS;
MACRO_FID_PS FID_PS_MERIDIEN;
MACRO_FID_PS FID_PS_MESSIDOR;
MACRO_FID_PS FID_PS_MICR;
MACRO_FID_PS FID_PS_MICROGRAMMA;
MACRO_FID_PS FID_PS_MINISTER;
MACRO_FID_PS FID_PS_MISTRAL;
MACRO_FID_PS FID_PS_MIXAGE;
MACRO_FID_PS FID_PS_MODERN;
MACRO_FID_PS FID_PS_MODERN_NO_216;
MACRO_FID_PS FID_PS_MOTTER_FEMINA;
MACRO_FID_PS FID_PS_NAPOLEAN;
MACRO_FID_PS FID_PS_NEUE_HELVETICA;
MACRO_FID_PS FID_PS_NEUZEIT_GROTESK;
MACRO_FID_PS FID_PS_NEVISON_CASUAL;
MACRO_FID_PS FID_PS_NEWS_GOTHIC;
MACRO_FID_PS FID_PS_NEWTEXT;
MACRO_FID_PS FID_PS_NEW_ASTER;
MACRO_FID_PS FID_PS_NICOLAS_COCHIN;
MACRO_FID_PS FID_PS_NIKIS;
MACRO_FID_PS FID_PS_NIMROD;
MACRO_FID_PS FID_PS_NOVARESE;
MACRO_FID_PS FID_PS_NUPITAL_SCRIPT;
MACRO_FID_PS FID_PS_OCR_A;
MACRO_FID_PS FID_PS_OCR_B;
MACRO_FID_PS FID_PS_OCTOPUSS;
MACRO_FID_PS FID_PS_ODIN;
MACRO_FID_PS FID_PS_OKAY;
MACRO_FID_PS FID_PS_OLD_ENGLISH;
MACRO_FID_PS FID_PS_OLD_TOWN;
MACRO_FID_PS FID_PS_OPTIMA;
MACRO_FID_PS FID_PS_PACELLA;
MACRO_FID_PS FID_PS_PADDINGTION;
MACRO_FID_PS FID_PS_PALACE_SCRIPT;
MACRO_FID_PS FID_PS_PALATINO;
MACRO_FID_PS FID_PS_PALETTE;
MACRO_FID_PS FID_PS_PANACHE;
MACRO_FID_PS FID_PS_PAPYRUS;
MACRO_FID_PS FID_PS_PARK_AVENUE;
MACRO_FID_PS FID_PS_PEIGNOT;
MACRO_FID_PS FID_PS_PENDRY_SCRIPT;
MACRO_FID_PS FID_PS_PEPITA;
MACRO_FID_PS FID_PS_PERPETUA;
MACRO_FID_PS FID_PS_PHYLLIS;
MACRO_FID_PS FID_PS_PHYLLIS_INITIALS;
MACRO_FID_PS FID_PS_PICCADILLY;
MACRO_FID_PS FID_PS_PLANTIN;
MACRO_FID_PS FID_PS_PLAYBILL;
MACRO_FID_PS FID_PS_PLAZA;
MACRO_FID_PS FID_PS_POST_ANTIQUA;
MACRO_FID_PS FID_PS_PRAXIS;
MACRO_FID_PS FID_PS_PREMIER;
MACRO_FID_PS FID_PS_PRESENT_SCRIPT;
MACRO_FID_PS FID_PS_PRESIDENT;
MACRO_FID_PS FID_PS_PRESTIGE_ELITE;
MACRO_FID_PS FID_PS_PRIMUS;
MACRO_FID_PS FID_PS_PRIMUS_ANTIQUA;
MACRO_FID_PS FID_PS_PRINCETOWN;
MACRO_FID_PS FID_PS_PROTEUS;
MACRO_FID_PS FID_PS_PRO_ARTE;
MACRO_FID_PS FID_PS_PUMP;
MACRO_FID_PS FID_PS_QUENTIN;
MACRO_FID_PS FID_PS_QUORUM;
MACRO_FID_PS FID_PS_RAGE;
MACRO_FID_PS FID_PS_RALEIGH;
MACRO_FID_PS FID_PS_RENAULT;
MACRO_FID_PS FID_PS_REVUE;
MACRO_FID_PS FID_PS_RIALTO;
MACRO_FID_PS FID_PS_ROCKWELL;
MACRO_FID_PS FID_PS_ROMANA;
MACRO_FID_PS FID_PS_ROMAN_SCRIPT;
MACRO_FID_PS FID_PS_ROMIC;
MACRO_FID_PS FID_PS_RUBBER_STAMP;
MACRO_FID_PS FID_PS_SABON;
MACRO_FID_PS FID_PS_SABON_ANTIQUA;
MACRO_FID_PS FID_PS_SERIFA;
MACRO_FID_PS FID_PS_SERIF_GOTHIC;
MACRO_FID_PS FID_PS_SERPENTINE;
MACRO_FID_PS FID_PS_SHAMROCK;
MACRO_FID_PS FID_PS_SHELLEY;
MACRO_FID_PS FID_PS_SINALOA;
MACRO_FID_PS FID_PS_SLIMBACH;
MACRO_FID_PS FID_PS_SLIPSTREAM;
MACRO_FID_PS FID_PS_SLOGAN;
MACRO_FID_PS FID_PS_SONATA;
MACRO_FID_PS FID_PS_SOUVENIR;
MACRO_FID_PS FID_PS_SPRINGFIELD;
MACRO_FID_PS FID_PS_SQUIRE;
MACRO_FID_PS FID_PS_STEMPEL_SCHNEIDLER;
MACRO_FID_PS FID_PS_STENCIL;
MACRO_FID_PS FID_PS_STENTOR;
MACRO_FID_PS FID_PS_STILLA;
MACRO_FID_PS FID_PS_STILLA_CAPS;
MACRO_FID_PS FID_PS_STONE_INFORMAL;
MACRO_FID_PS FID_PS_STONE_SANS;
MACRO_FID_PS FID_PS_STONE_SERIF;
MACRO_FID_PS FID_PS_STOP;
MACRO_FID_PS FID_PS_STRATFORD;
MACRO_FID_PS FID_PS_STYMIE;
MACRO_FID_PS FID_PS_SUPERSTAR;
MACRO_FID_PS FID_PS_SWIFT;
MACRO_FID_PS FID_PS_SYMBOL;
MACRO_FID_PS FID_PS_SYNCHRO;
MACRO_FID_PS FID_PS_SYNTAX;
MACRO_FID_PS FID_PS_TANGO;
MACRO_FID_PS FID_PS_TARRAGON;
MACRO_FID_PS FID_PS_TEKTON;
MACRO_FID_PS FID_PS_TEMPO;
MACRO_FID_PS FID_PS_THOROWGOOD;
MACRO_FID_PS FID_PS_THUNDERBIRD;
MACRO_FID_PS FID_PS_TIEPOLO;
MACRO_FID_PS FID_PS_TIFFANY;
MACRO_FID_PS FID_PS_TIMELESS;
MACRO_FID_PS FID_PS_TIMES_NEW_ROMAN;
MACRO_FID_PS FID_PS_TIMES_ROMAN;
MACRO_FID_PS FID_PS_TIME_SCRIPT;
MACRO_FID_PS FID_PS_TITUS;
MACRO_FID_PS FID_PS_TRAJAN;
MACRO_FID_PS FID_PS_TRAJANUS;
MACRO_FID_PS FID_PS_ULTE_SCHWABACHER;
MACRO_FID_PS FID_PS_UNIVERS;
MACRO_FID_PS FID_PS_UNIVERSITY_ROMAN;
MACRO_FID_PS FID_PS_URW_ANTIQUA;
MACRO_FID_PS FID_PS_URW_SANS;
MACRO_FID_PS FID_PS_USHERWOOD;
MACRO_FID_PS FID_PS_U_GREEK_MATH_PI;
MACRO_FID_PS FID_PS_U_NEWS_COMM_PI;
MACRO_FID_PS FID_PS_VAG_RUNDSCHRIFT;
MACRO_FID_PS FID_PS_VAN_DIJK;
MACRO_FID_PS FID_PS_VARIO;
MACRO_FID_PS FID_PS_VEGAS;
MACRO_FID_PS FID_PS_VELJOVIC;
MACRO_FID_PS FID_PS_VENDOME;
MACRO_FID_PS FID_PS_VICTORIAN;
MACRO_FID_PS FID_PS_VIVALDI;
MACRO_FID_PS FID_PS_VLADIMIR_SCRIPT;
MACRO_FID_PS FID_PS_VOLTA;
MACRO_FID_PS FID_PS_WALBAUM;
MACRO_FID_PS FID_PS_WASHINGTON;
MACRO_FID_PS FID_PS_WEIDEMANN;
MACRO_FID_PS FID_PS_WEIFZ_RUNDGOTIFCH;
MACRO_FID_PS FID_PS_WEISS;
MACRO_FID_PS FID_PS_WINDSOR;
MACRO_FID_PS FID_PS_WORCESTER_ROUND;
MACRO_FID_PS FID_PS_ZAPF_BOOK;
MACRO_FID_PS FID_PS_ZAPF_CHANCERY;
MACRO_FID_PS FID_PS_ZAPF_DINGBATS;
MACRO_FID_PS FID_PS_ZAPF_INTERNATIONAL;
MACRO_FID_PS FID_PS_ZIPPER;
MACRO_FID FID_RESPONDER;
MACRO_FID FID_ROMA;
MACRO_FID FID_TERMINAL;
MACRO_FID FID_TERMINAL_GRAPHIC;
MACRO_FID FID_UNIVERSITY;
MACRO_FID FID_WINDOWS;
MACRO_MIN_MAX FIELDNAME_NUM_CHARS_DISPLAYED;
MACRO_FIELD_IN FIELD_ABOVE_MAX;
MACRO_FIELD_IN FIELD_BELOW_MIN;
MACRO_FIELD FIELD_DEFAULT_VALUE_ROW;
MACRO_FIELD_IN FIELD_IN_RANGE;
MACRO_FIELD FIELD_TYPE_ROW;
void FILEBATCHCHANGENOTIFICATIONS(void);
word __pascal FILECLOSE(FileHandle fh, Boolean noErrorFlag);
word __pascal FILECOMMIT(FileHandle fh, Boolean noErrorFlag);
PathCompareType __pascal FILECOMPAREPATHS(const char *path1, DiskHandle disk1, const char *path2, DiskHandle disk2);
DiskHandle __pascal FILECONSTRUCTACTUALPATH(char **buffer, word bufSize, DiskHandle disk, const char far *tail, Boolean addDriveLetter);
DiskHandle __pascal FILECONSTRUCTFULLPATH(char **buffer, word bufSize, DiskHandle disk, const char *tail, Boolean addDriveLetter);
word __pascal FILECOPY(const char *source, const char *dest, DiskHandle sourceDisk, DiskHandle destDisk);
word __pascal FILECOPYLOCAL(const char *source, const char *dest, DiskHandle sourceDisk, DiskHandle destDisk);
word __pascal FILECOPYPATHEXTATTRIBUTES(const char *sourcePath, DiskHandle sourceDisk, const char *destPath, DiskHandle destDisk);
FileHandle __pascal FILECREATE(const char *name, FileCreateFlags flags, FileAttrs attributes);
word __pascal FILECREATEDIR(const char *name);
word __pascal FILECREATELINK(const char *path, word targetDiskHandle, const char *targetPath, word targetAttrsFlag);
FileHandle __pascal FILECREATETEMPFILE(const char *dir, FileCreateFlags flags, FileAttrs attributes);
word __pascal FILEDELETE(const char *name);
word __pascal FILEDELETEDIR(const char *name);
void FILEDISABLEOPENCLOSENOTIFICATION(void);
FileHandle __pascal FILEDUPLICATEHANDLE(FileHandle fh);
void FILEENABLEOPENCLOSENOTIFICATION(void);
word __pascal FILEENUM(FileEnumParams *params, MemHandle *bufCreated, word *numNoFit);
void *__pascal FILEENUMLOCATEATTR(FileEnumCallbackData *fecd, FileExtendedAttribute attr, const char *name);
Boolean __pascal FILEENUMWILDCARD(FileEnumCallbackData *fecd, word frame);
void FILEFLUSHCHANGENOTIFICATIONS(void);
FileAttrs __pascal FILEGETATTRIBUTES(const char *path);
DiskHandle __pascal FILEGETCURRENTPATH(char *buffer, word bufferSize);
ChunkHandle __pascal FILEGETCURRENTPATHIDS(MemHandle block);
FileDateAndTime __pascal FILEGETDATEANDTIME(FileHandle fh);
DiskHandle __pascal FILEGETDISKHANDLE(FileHandle fh);
MemHandle __pascal FILEGETHANDLEALLEXTATTRIBUTES(FileHandle fh, word *numExtAttrs);
word __pascal FILEGETHANDLEEXTATTRIBUTES(FileHandle fh, FileExtendedAttribute attr, void *buffer, word bufSize);
DiskHandle __pascal FILEGETLINKEXTRADATA(const char *path, char *buffer, word bufSize);
word __pascal FILEGETPATHEXTATTRIBUTES(const char *path, FileExtendedAttribute attr, void *buffer, word bufSize);
word __pascal FILELOCKRECORD(FileHandle fh, dword filePos, dword regLength);
word __pascal FILEMOVE(const char *source, const char *dest, DiskHandle sourceDisk, DiskHandle destDisk);
word __pascal FILEMOVELOCAL(const char *source, const char *dest, DiskHandle sourceDisk, DiskHandle destDisk);
MACRO_FILENAME2 FILENAME_LENGTH;
MACRO_FILENAME FILENAME_MAX;
FileHandle __pascal FILEOPEN(const char *name, FileAccessFlags flags);
MemHandle __pascal FILEOPENANDREAD(FileOpenAndReadFlags flags, const char far *filename, FileHandle *fh);
StandardPath __pascal FILEPARSESTANDARDPATH(DiskHandle disk, const char **path);
void FILEPOPDIR(void);
dword __pascal FILEPOS(FileHandle fh, dword posOrOffset, FilePosMode mode);
void FILEPUSHDIR(void);
word __pascal FILEREAD(FileHandle fh, void *buf, word count, Boolean noErrorFlag);
DiskHandle __pascal FILEREADLINK(const char *path, const char *targetPath);
word __pascal FILERENAME(const char *oldName, const char *newame);
DiskHandle __pascal FILERESOLVESTANDARDPATH(char **buffer, word bufSize, const char *tail, FileResolveStandardPathFlags flags, FileAttrs *attrsPtr);
word __pascal FILESETATTRIBUTES(const char *path, FileAttrs attr);
DiskHandle __pascal FILESETCURRENTPATH(DiskHandle disk, const char *path);
word __pascal FILESETDATEANDTIME(FileHandle fh, FileDateAndTime dateAndTime);
word __pascal FILESETHANDLEEXTATTRIBUTES(FileHandle fh, FileExtendedAttribute attr, const void *buffer, word bufSize);
DiskHandle __pascal FILESETLINKEXTRADATA(const char *path, char *buffer, word bufSize);
word __pascal FILESETPATHEXTATTRIBUTES(const char *path, FileExtendedAttribute attr, const void *buffer, word bufSize);
void __pascal FILESETROOTPATH(DiskHandle disk);
void __pascal FILESETSTANDARDPATH(StandardPath sp);
dword __pascal FILESIZE(FileHandle fh);
word __pascal FILETRUNCATE(FileHandle fh, dword offset, Boolean noErrorFlag);
word __pascal FILEUNLOCKRECORD(FileHandle fh, dword filePos, dword regLength);
word __pascal FILEWRITE(FileHandle fh, const void *buf, word count, Boolean noErrorFlag);
MACRO_FILE FILE_ACCESS_R;
MACRO_FILE FILE_ACCESS_RW;
MACRO_FILE FILE_ACCESS_W;
MACRO_FILE_ATTR FILE_ATTR_HIDDEN;
MACRO_FILE_ATTR FILE_ATTR_NORMAL;
MACRO_FILE_ATTR FILE_ATTR_READ_ONLY;
MACRO_FILE_ATTR FILE_ATTR_SYSTEM;
MACRO_FILE_ATTR FILE_ATTR_VOLUME_LABEL;
MACRO_FILE_CREATE FILE_CREATE_NO_TRUNCATE;
MACRO_FILE_CREATE FILE_CREATE_ONLY;
MACRO_FILE_CREATE FILE_CREATE_TRUNCATE;
MACRO_FA_READ FILE_DENY_NONE;
MACRO_FA_READ FILE_DENY_R;
MACRO_FA_READ FILE_DENY_RW;
MACRO_FA_READ FILE_DENY_W;
MACRO_FILE_DESKTOP FILE_DESKTOP_INFO_SIZE;
MACRO_FILE_ENUM FILE_ENUM_ALL_FILE_TYPES;
MACRO_FILE_FORMAT FILE_FORMAT_NAME_SIZE;
MACRO_FILE_LONGNAME FILE_LONGNAME_BUFFER_SIZE;
MACRO_FILE FILE_NO_ERRORS;
MACRO_FILE_NO FILE_NO_ID;
MACRO_FILE_PASSWORD FILE_OWNER_NAME_SIZE;
MACRO_FILE_PASSWORD FILE_PASSWORD_SIZE;
MACRO_FILE_POS FILE_POS_END;
MACRO_FILE_POS FILE_POS_RELATIVE;
MACRO_FILE_POS FILE_POS_START;
MACRO_FILE_RIGHTS FILE_RIGHTS_SIZE;
MACRO_ECHO FINGER;
MACRO_FIRST_EVENT FIRST_EVENT_ID;
MACRO_FIRST_FIELD FIRST_FIELD_Y_POSITION;
MACRO_FIRST FIRST_GEN_APP_GCN_LIST_TYPE;
MACRO_DEFAULT_MASTER FIRST_MASTER_MESSAGE;
void __pascal __far FIXNUMADD(FixNum far *c, FixNum far *a, FixNum far *b);
void __pascal __far FIXNUMSUB(FixNum far *c, FixNum far *a, FixNum far *b);
void __pascal __far FIXNUMTOASCII(FixNum far *num, char far *buffer, word bufSiz);
void __pascal __far FIXNUMUMULT(FixNum far *c, FixNum far *a, FixNum far *b);
void __pascal __far FIXNUMUMULTTIMES2(FixNum far *c, FixNum far *a, FixNum far *b);
MACRO_FJCF FJCF_CENTER;
MACRO_FJCF FJCF_FULL;
MACRO_SIZE FJCF_FULL_CHAR;
MACRO_FJCF FJCF_LEFT;
MACRO_FJCF FJCF_RIGHT;
MACRO_FJC FJC_DEFAULT_FEATURES;
MACRO_COMPLEX_MONIKER FLASHING_NOTE_DEFAULT_DURATION;
MACRO_FLASHING FLASHING_NOTE_DEFAULT_MINIMUM_DURATION;
VMBlockHandle __pascal FLATFILEINITFILE(VMFileHandle vmFileHandle, word spreadsheetFlags);
MACRO_GFSSUIC FLEXIBLE_ARRAY_SIZE;
void FLOAT0(void);
void FLOAT1(void);
void FLOAT10(void);
void FLOAT10TOTHEX(void);
void FLOAT16384(void);
void FLOAT2(void);
void FLOAT3600(void);
void FLOAT5(void);
void FLOAT86400(void);
void FLOATABS(void);
void FLOATADD(void);
void FLOATARCCOS(void);
void FLOATARCCOSH(void);
void FLOATARCSIN(void);
void FLOATARCSINH(void);
void FLOATARCTAN(void);
void FLOATARCTAN2(void);
void FLOATARCTANH(void);
Boolean __pascal FLOATASCIITOFLOAT(word floatAtoFflags, word stringLength, void *string, void *resultLocation);
word FLOATCOMP(void);
word FLOATCOMPANDDROP(void);
word __pascal FLOATCOMPESDI(FloatNum *);
void FLOATCOS(void);
void FLOATCOSH(void);
void __pascal FLOATDATENUMBERGETMONTHANDDAY(byte *month, byte *day);
void FLOATDATENUMBERGETWEEKDAY(void);
word FLOATDATENUMBERGETYEAR(void);
word FLOATDEPTH(void);
void FLOATDIV(void);
void FLOATDIVIDE(void);
void FLOATDIVIDE10(void);
void FLOATDIVIDE2(void);
void FLOATDROP(void);
void FLOATDUP(void);
void __pascal FLOATDWORDTOFLOAT(__int32 num);
void FLOATEPSILON(void);
word FLOATEQ0(void);
void FLOATEXIT(void);
void FLOATEXP(void);
void FLOATEXPONENTIAL(void);
void FLOATFACTORIAL(void);
word __pascal FLOATFLOATIEEE64TOASCII_STDFORMAT(char *string, IEEE64FloatNum number, FloatFloatToAsciiFormatFlags format, word numDigits, word numFractionalDigits);
word __pascal FLOATFLOATTOASCII(FFA_stackFrame *stackFrame, char *resultString, FloatNum *number);
word __pascal FLOATFLOATTOASCII_STDFORMAT(char *string, FloatNum *number, FloatFloatToAsciiFormatFlags format, word numDigits, word numFractionalDigits);
__int32 FLOATFLOATTODWORD(void);
word __pascal FLOATFORMATADDFORMAT(FormatInfoStruc *formatInfoStruc, FormatParams *formatParams, word formatToken);
FormatIdType __pascal FLOATFORMATDELETE(FormatInfoStruc *formatInfoStruc);
word __pascal FLOATFORMATGETFORMATPARAMSWITHLISTENTRY(FormatInfoStruc *formatInfoStruc);
void __pascal FLOATFORMATGETFORMATPARAMSWITHTOKEN(FormatInfoStruc *formatInfoStruc, FormatParams *buffer);
word __pascal FLOATFORMATGETFORMATTOKENWITHNAME(FormatInfoStruc *formatInfoStruc);
VMBlockHandle __pascal FLOATFORMATINIT(word userDefVMFileHan);
void __pascal FLOATFORMATINITFORMATLIST(FormatInfoStruc *formatInfoStruc);
void __pascal FLOATFORMATINVOKEUSERDEFDB(FormatInfoStruc *formatInfoStruc);
void __pascal FLOATFORMATISFORMATTHESAME(FormatInfoStruc *formatInfoStruc, FormatParams *formatParams);
void __pascal FLOATFORMATNUMBER(FormatIdType formatToken, word userDefBlkHan, word userDefFileHan, FloatNum *floatNum, char *resultLocation);
void __pascal FLOATFORMATPROCESSFORMATSELECTED(FormatInfoStruc *formatInfoStruc);
word __pascal FLOATFORMATUSERDEFOK(FormatInfoStruc *formatInfoStruc);
void FLOATFRAC(void);
void __pascal FLOATGEOS80TOIEEE32(float *num);
void __pascal FLOATGEOS80TOIEEE64(double *num);
FloatErrorType __pascal FLOATGETDATENUMBER(word year, byte month, byte day);
byte __pascal FLOATGETDAYSINMONTH(word year, byte month);
word FLOATGETNUMDIGITSININTEGERPART(void);
int FLOATGETSTACKPOINTER(void);
FloatErrorType __pascal FLOATGETTIMENUMBER(byte hours, byte minutes, byte seconds);
word FLOATGT0(void);
void __pascal FLOATIEEE32TOGEOS80(float *num);
void __pascal FLOATIEEE64TOGEOS80(double *num);
void __pascal FLOATINIT(word stackSize, FloatStackType stackType);
void FLOATINT(void);
void FLOATINTFRAC(void);
void FLOATINVERSE(void);
void FLOATLG(void);
void FLOATLG10(void);
void FLOATLN(void);
void FLOATLN10(void);
void FLOATLN1PLUSX(void);
void FLOATLN2(void);
void FLOATLOG(void);
word FLOATLT0(void);
void FLOATMAX(void);
void FLOATMIN(void);
void FLOATMINUS1(void);
void FLOATMINUSPOINT5(void);
void FLOATMOD(void);
void FLOATMULTIPLY(void);
void FLOATMULTIPLY10(void);
void FLOATMULTIPLY2(void);
void FLOATNEGATE(void);
void FLOATOVER(void);
void FLOATPI(void);
void __pascal FLOATPICK(word num);
void FLOATPIDIV2(void);
void FLOATPOINT5(void);
word __pascal FLOATPOPNUMBER(FloatNum *number);
word __pascal FLOATPUSHNUMBER(FloatNum *number);
void FLOATRANDOM(void);
void __pascal FLOATRANDOMIZE(RandomGenInitFlags rgiflag, dword seed);
void FLOATRANDOMN(void);
void __pascal FLOATROLL(word num);
void __pascal FLOATROLLDOWN(word num);
void FLOATROT(void);
void __pascal FLOATROUND(byte numDecimalPlaces);
void __pascal FLOATSETSTACKPOINTER(word newValue);
void FLOATSIN(void);
void FLOATSINH(void);
void FLOATSQR(void);
void FLOATSQRT(void);
void FLOATSQRT2(void);
word __pascal FLOATSTRINGGETDATENUMBER(char *dateString);
word __pascal FLOATSTRINGGETTIMENUMBER(char *timeString);
void FLOATSUB(void);
void FLOATSWAP(void);
void FLOATTAN(void);
void FLOATTANH(void);
void FLOATTIMENUMBERGETHOUR(void);
void FLOATTIMENUMBERGETMINUTES(void);
void FLOATTIMENUMBERGETSECONDS(void);
void FLOATTRUNC(void);
void __pascal FLOATWORDTOFLOAT(word num);
MACRO_RGIF_GENERATE FLOAT_ERROR_CODES_ENUM_START;
MACRO_FLOAT_FORMAT FLOAT_FORMAT_CANNOT_ALLOC;
MACRO_FLOAT_FORMAT FLOAT_FORMAT_FORMAT_NAME_NOT_FOUND;
MACRO_FLOAT_FORMAT FLOAT_FORMAT_NO_ERROR;
MACRO_FLOAT_FORMAT_PARAMS FLOAT_FORMAT_PARAMS_DONT_MATCH;
MACRO_FLOAT_FORMAT FLOAT_FORMAT_PARAMS_MATCH;
MACRO_FLOAT_FORMAT FLOAT_FORMAT_TOO_MANY_FORMATS;
MACRO_FLOAT_NEG FLOAT_GEN_ERR;
MACRO_FLOAT_NEG FLOAT_NEG_INFINITY;
MACRO_FLOAT_POS FLOAT_POS_INFINITY;
MACRO_FLOAT_STACK FLOAT_STACK_ERROR;
MACRO_FLOAT_STACK FLOAT_STACK_GROW;
MACRO_FLOAT_STACK FLOAT_STACK_WRAP;
MACRO_FLOAT FLOAT_TO_ASCII_HUGE_BUF_LEN;
MACRO_FLOAT FLOAT_TO_ASCII_NORMAL_BUF_LEN;
Segment __pascal FLOWALTERHIERARCHICALGRAB(optr objectOptr, Message gainedMessage, word offsetToMasterInstance, word offsetToHierarchicalGrab, optr objectToBeGivenExclusive, HierarchicalGrabFlags flags);
word __pascal FLOWCHECKKBDSHORTCUT(KeyboardShortcut *shortcutTable, word numEntriesInTable, word character, word flags, word state);
Boolean __pascal FLOWDISPATCHSENDONORDESTROYCLASSEDEVENT(MessageReturnValues *retvals, optr objectOptr, Message messageToSend, EventHandle classedEvent, word otherData, optr objectToSendTo, MessageFlags flags);
Segment __pascal FLOWUPDATEHIERARCHICALGRAB(optr objectOptr, Message gainedMessage, word offsetToMasterInstance, word offsetToHierarchicalGrab, Message updateMessage);
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ABORTED;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_BAD_PARTITION_TABLE;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_CANNOT_FORMAT_FIXED_DISKS_IN_CUR_RELEASE;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_DONE;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_DRIVE_NOT_READY;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_CANNOT_ALLOC_SECTOR_BUFFER;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_DISK_IS_IN_USE;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_DISK_UNAVAILABLE;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_DRIVE_CANNOT_BE_FORMATTED;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_DRIVE_CANNOT_SUPPORT_GIVEN_FORMAT;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_INVALID_DRIVE_SPECIFIED;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_MULTIPLE_PRIMARY_PARTITIONS;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_NO_EXTENDED_PARTITION_FOUND;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_NO_PARTITION_FOUND;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_READING_PARTITION_TABLE;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_WRITE_PROTECTED;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_WRITING_BOOT;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_WRITING_FAT;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_ERR_WRITING_ROOT_DIR;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_READY;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_RUNNING;
$650A659A1C931CAD8E1FEB17E9C8DD01 FMT_SET_VOLUME_NAME_ERR;
MACRO_FM FM_ADOBE;
MACRO_FM FM_AGFA;
MACRO_FM FM_ATECH;
MACRO_FM FM_BITMAP;
MACRO_FM FM_BITSTREAM;
MACRO_FF FM_DONT_USE;
MACRO_FF FM_EXACT;
MACRO_FM FM_MICROLOGIC;
MACRO_FM FM_NIMBUSQ;
MACRO_FM FM_PRINTER;
MACRO_FM FM_PUBLIC;
void __pascal __far FOAMADJUSTTIMEBACKWARD(TimerCompressedDate startDate, word startTime, word adjustment, AdvanceNoticeType noticeType, TimerCompressedDate *resultDate, word *resultTime);
void __pascal __far FOAMADJUSTTIMEFORWARD(TimerCompressedDate startDate, word startTime, word adjustment, AdvanceNoticeType noticeType, TimerCompressedDate *resultDate, word *resultTime);
Boolean __far FOAMCANCELIFNOFREESPACE(void);
Boolean __pascal __far FOAMCANCELIFNOFREESPACEONDISK(DiskHandle diskHan);
FoamDiskSpaceStatus __far FOAMCHECKIFOUTOFSPACE(void);
FoamDiskSpaceStatus __pascal __far FOAMCHECKIFOUTOFSPACEONDISK(DiskHandle diskHan);
optr __pascal __far FOAMCONVERTVALUETOSTRING(dword value, hptr lmemHandle, UtilHexToAsciiFlags flags);
FieldID __pascal FOAMDBADDFIELDTORECORD(VMFileHandle file, MemHandle record, char *fieldName, word fieldType);
RecordID __pascal FOAMDBBINARYSEARCH(VMFileHandle file, MemHandle record, int (__pascal *callback)(void *passedRecord, void *curRecord));
word __pascal FOAMDBCLOSE(VMFileHandle file);
MemHandle __pascal FOAMDBCREATEEMPTYRECORD(VMFileHandle file);
void __pascal FOAMDBDELETEFIELDFROMRECORD(VMFileHandle file, MemHandle record, FieldID id);
Boolean __pascal FOAMDBDELETERECORD(VMFileHandle file, MemHandle record);
void __pascal FOAMDBDISCARDRECORD(VMFileHandle file, MemHandle record);
MemHandle __pascal FOAMDBDUPLICATERECORD(VMFileHandle file, MemHandle record);
Boolean __pascal FOAMDBFIELDENUM(MemHandle record, void *enumData, Boolean (__pascal *callback)(FieldHeader *field, void *enumData));
RecordID __pascal FOAMDBGETCURRENTRECORDID(VMFileHandle file);
word __pascal FOAMDBGETFIELDDATA(VMFileHandle file, MemHandle record, FieldID id, char *dest, word maxBytesToGet);
Boolean __pascal FOAMDBGETFIELDNAME(VMFileHandle file, MemHandle record, FieldID id, TCHAR *dest, word maxBytesToGet);
Boolean __pascal FOAMDBGETFIELDTYPE(VMFileHandle file, MemHandle record, FieldID id, byte *type);
dword __pascal FOAMDBGETNEXTPREVRECORD(VMFileHandle file, RecordID record, word count);
dword __pascal FOAMDBGETNUMVISIBLERECORDS(VMFileHandle file);
MemHandle __pascal FOAMDBGETRECORDFROMID(VMFileHandle file, RecordID id);
RecordID __pascal FOAMDBGETRECORDID(MemHandle record);
dword __pascal FOAMDBGETVISIBLEINDEXFROMID(VMFileHandle file, RecordID id);
MemHandle __pascal FOAMDBGETVISIBLERECORD(VMFileHandle file, dword index);
Boolean __pascal FOAMDBLOCKEDRECORDENUM(RecordHeader *record, void *enumData, Boolean (__pascal *callback)(FieldHeader *field, void *enumData));
Boolean __pascal FOAMDBMAPNAMETOTOKEN(VMFileHandle file, TCHAR *nameToLookFor, word *token);
Boolean __pascal FOAMDBMAPTOKENTONAME(VMFileHandle file, word nameToken, word maxBytesToCopy, TCHAR *dest);
VMFileHandle __pascal FOAMDBOPEN(char *filename, word mapBlockSize, word majorProtocol, word minorProtocol);
void __pascal FOAMDBRESORTDATABASE(VMFileHandle file, sword (__pascal *callback)(RecordHeader *record1, RecordHeader *record2));
void __pascal FOAMDBRESUMENOTIFICATIONS(VMFileHandle file);
void __pascal FOAMDBRESUMEUPDATES(VMFileHandle file);
dword __pascal FOAMDBSAVERECORD(VMFileHandle file, MemHandle record, sword (__pascal *callback)(RecordHeader *record1, RecordHeader *record2));
void __pascal FOAMDBSETCURRENTRECORDID(VMFileHandle file, RecordID id);
void __pascal FOAMDBSETFIELDDATA(VMFileHandle file, MemHandle record, FieldID id, char *data, word dataSize);
void __pascal FOAMDBSETFIELDNAME(VMFileHandle file, MemHandle record, FieldID id, char *name);
void __pascal FOAMDBSETNAMEFORTOKEN(VMFileHandle file, word nameToken, TCHAR *name);
void __pascal FOAMDBSUSPENDNOTIFICATIONS(VMFileHandle file);
void __pascal FOAMDBSUSPENDUPDATES(VMFileHandle file);
Boolean __pascal FOAMDBVISIBLERECORDENUM(VMFileHandle file, void *enumData, Boolean (__pascal *callback)(RecordHeader *record, void *enumData));
Boolean __pascal FOAMDBVISIBLERECORDENUMWITHRANGE(VMFileHandle file, void *enumData, dword startElement, dword numOfRecords, Boolean (__pascal *callback)(RecordHeader *record, void *enumData));
InteractionCommand __pascal __far FOAMDISPLAYDELETEWARNING(optr preText, TCHAR *midText, optr postText);
void __pascal __far FOAMDISPLAYDELETEWARNINGNOBLOCK(optr bodyText, word msg, optr dest);
void __pascal __far FOAMDISPLAYERROR(optr errorText);
void __pascal __far FOAMDISPLAYERRORNOBLOCK(optr errorText);
void __pascal __far FOAMDISPLAYNOTE(optr noteText);
void __pascal __far FOAMDISPLAYNOTENOBLOCK(optr noteText);
InteractionCommand __pascal __far FOAMDISPLAYOKCANCELWARNING(optr warningText);
InteractionCommand __pascal __far FOAMDISPLAYQUESTION(optr questionText);
void __pascal __far FOAMDISPLAYWARNING(optr warningText);
void __pascal __far FOAMDISPLAYWARNINGNOBLOCK(optr warningText);
Boolean __pascal __far FOAMDOCCHECKPROTOCOL(DocumentHandle docHandle, word numCreatorChars, word majorProtocol, word minorProtocol);
void __pascal __far FOAMDOCCLOSE(DocumentHandle docHandle);
void __pascal __far FOAMDOCCONVERTFROMDOSAPPEND(optr object, TCHAR *buffer, word bufferLength);
void __pascal __far FOAMDOCCONVERTFROMDOSDONE(DocumentHandle docHandle, optr object);
optr __far FOAMDOCCONVERTFROMDOSINIT(void);
void __pascal __far FOAMDOCCONVERTTODOSDONE(optr object);
optr __pascal __far FOAMDOCCONVERTTODOSINIT(DocumentHandle docHandle);
word __pascal __far FOAMDOCCONVERTTODOSRANGE(optr object, TCHAR *buffer, dword startPos, dword endPos);
word __pascal __far FOAMDOCCREATE(DocumentInfo *docInfo, FileAttrInfo *fileAttr, DocumentPrefix *prefix);
Boolean __pascal __far FOAMDOCDELETE(DocumentInfo *docInfo);
word __pascal __far FOAMDOCGETDOSTEXTSMALL(DocumentHandle docHandle, void *buffer, word count);
word __pascal __far FOAMDOCGETHEADERDATA(DocumentHandle docHandle, FoamDocHeader docHeader);
dword __pascal __far FOAMDOCGETTEXTLENGTH(DocumentHandle docHandle);
dword __pascal __far FOAMDOCGETTEXTLENGTHFROMFIELD(char *field);
Boolean __pascal __far FOAMDOCISTEXTFORMATTED(DocumentHandle docHandle, DocumentFontInfo *fontInfo);
DocumentHandle __pascal __far FOAMDOCOPEN(DocumentInfo *docInfo, FDocAccess docAccess);
void __pascal __far FOAMDOCSETATTRINFO(DocumentHandle docHandle, FileAttrInfo *fileAttrInfo);
void __pascal __far FOAMDOCSETBLOCKHANDLE(DocumentHandle docHandle, VMBlockHandle block, FoamDocHeader docHeader);
void __pascal __far FOAMDOCSETHEADERDATA(DocumentHandle docHandle, word data, FoamDocHeader docHeader);
void __pascal __far FOAMDOCSETTEXTFORMATTED(DocumentHandle docHandle, FoamDocTextFormatted fdtf, DocumentFontInfo *fontInfo);
void __pascal __far FOAMDOCSETTEXTLENGTH(DocumentHandle docHandle, dword length);
void __pascal __far FOAMDOCSTOREDOSTEXTSMALL(DocumentHandle docHandle, void *buffer, word bufferLen);
word __pascal __far FOAMDOCSTORETEXTASVMCHAIN(DocumentHandle docHandle, optr textObject);
void __pascal FOAMGENERATEUNIQUEFILENAME(FileLongName *nameBuffer);
int __far FOAMGETBACKLIGHTTIMEOUT(void);
optr __pascal __far FOAMGETCOMPLEXMONIKERBITMAP(ComplexMonikerBitmap cmb);
int __pascal __far FOAMGETCOMPLEXMONIKERTEXT(ComplexMonikerText cmt, TCHAR *buffer, int bufsize);
void __pascal __far FOAMGETCOMPRESSEDDATETIME(TimerCompressedDate *currentDate, word *currentTime);
FDocumentDir __far FOAMGETDOCUMENTDIR(void);
void __pascal __far FOAMGETDOCUMENTDIRNAME(FDocumentDir fDocDir, FileLongName *buffer);
void __pascal __far FOAMGETDOCUMENTOUTBOXNAME(FileLongName *buffer);
GeosFileType __pascal __far FOAMGETFILETYPE(TCHAR *filename);
dword __far FOAMGETFREEDISKSPACE(void);
dword __pascal __far FOAMGETFREEDISKSPACEONDISK(DiskHandle diskHan);
GeosFileType __pascal __far FOAMGETHANDLEFILETYPE(DocumentHandle docHandle);
byte __pascal FOAMGETLEXICALORDER(char theChar);
word __far FOAMGETLOWSOUNDFLAG(void);
dword __pascal __far FOAMGETMINUTESBETWEENTIMES(TimerCompressedDate firstDate, word firstTime, TimerCompressedDate secondDate, word secondTime);
Boolean __pascal __far FOAMISTEXTFORMATTED(optr textObject, DocumentFontInfo *fontInfo);
void __pascal __far FOAMLAUNCHAPPLICATION(FApplication applicationConstant);
Boolean __pascal __far FOAMLAUNCHREADERAPP(FoamReaderAppType frat);
word __pascal __far FOAMPATHCHECKLOCK(FoamPathHandle fph);
void __pascal __far FOAMPATHFOLDERNAME(FoamPathHandle fph, TCHAR *buffer);
void __pascal __far FOAMPATHFOLDERNAMEFORDISPLAY(FoamPathHandle fph, TCHAR *buffer);
StandardPath __pascal __far FOAMPATHGETFULLPATH(FoamPathHandle fph, TCHAR *buffer);
StandardPath __pascal __far FOAMPATHGETFULLPATHFORDISPLAY(FoamPathHandle fph, TCHAR *buffer);
word __pascal __far FOAMPATHISFDD(FoamPathHandle fph);
void __pascal __far FOAMPATHLOCK(FoamPathHandle fph);
FoamPathHandle __pascal __far FOAMPATHMAKE(FoamPathHandle parent, TCHAR *pathstr);
FoamPathHandle __pascal __far FOAMPATHMAKESP(StandardPath stdPath, TCHAR *pathname);
FoamPathHandle __pascal __far FOAMPATHPARENT(FoamPathHandle fph);
void __pascal __far FOAMPATHRENAME(FoamPathHandle fph, TCHAR *newName);
void __pascal __far FOAMPATHUNLOCK(FoamPathHandle fph);
void __pascal __far FOAMPLAYCMTTONE(FoamCMTToneType cmtTone);
optr __pascal __far FOAMREPLACESTRINGINTEMPLATE(optr template, optr s1, optr s2, optr s3);
dword __pascal __far FOAMROUNDUPASMULTIPLEOFCLUSTERSIZE(dword space);
dword __pascal __far FOAMROUNDUPASMULTIPLEOFCLUSTERSIZEONDISK(dword space, DiskHandle diskHan);
void __pascal __far FOAMSETBACKLIGHTTIMEOUT(int timeoutLevel);
void __pascal __far FOAMSETDOCUMENTDIR(FDocumentDir fDocDir);
void __pascal __far FOAMSETLOWSOUNDFLAG(word lowSndFlag);
InteractionCommand __pascal __far FOAMSTANDARDDIALOGOPTR(void *helpFile, void *helpContext, LayerPriority layerPriority, Message rejectTriggerMessage, optr rejectTriggerDestination, Message acceptTriggerMessage, optr acceptTriggerDestination, optr triggerTopText, TCHAR *arg2, TCHAR *arg1, FoamCustomDialogBoxFlags dialogFlags, optr bodyText, optr titleText, optr titleIconBitmap);
optr __pascal __far FOAMSTANDARDDIALOGOPTRNOBLOCK(void *helpFile, void *helpContext, LayerPriority layerPriority, Message rejectTriggerMessage, optr rejectTriggerDestination, Message acceptTriggerMessage, optr acceptTriggerDestination, optr triggerTopText, TCHAR *arg2, TCHAR *arg1, FoamCustomDialogBoxFlags dialogFlags, optr bodyText, optr titleText, optr titleIconBitmap);
void __pascal __far FOAMSTARTSOUNDSEQUENCE(StandardSoundType sound, word duration, word interval);
Boolean __far FOAMSTOPSOUNDSEQUENCE(void);
signed int __pascal __far FOAMUTOFFSET();
FoamSaveAction __pascal __far FOAMWARNFORSAVING(dword space);
FoamSaveAction __pascal __far FOAMWARNFORSAVINGONDISK(dword space, DiskHandle diskHan);
FoamDiskSpaceStatus __pascal __far FOAMWARNIFNOTENOUGHSPACE(dword space);
FoamDiskSpaceStatus __pascal __far FOAMWARNIFNOTENOUGHSPACEONDISK(dword space, DiskHandle diskHan);
Boolean __far FOAMWARNIFOUTOFSPACE(void);
Boolean __pascal __far FOAMWARNIFOUTOFSPACEONDISK(DiskHandle diskHan);
FoamDiskSpaceStatus __far FOAMWARNSPACEAFTEROPERATION(void);
FoamDiskSpaceStatus __pascal __far FOAMWARNSPACEAFTEROPERATIONONDISK(DiskHandle diskHan);
MACRO_VTDS_FOAM FOAM_BUBBLE_TITLE_FONT_SIZE;
MACRO_FOAM_DEFAULT FOAM_DEFAULT_BUBBLE_WIDTH;
MACRO_FOAM_DOCUMENT FOAM_DEFAULT_COMPONENT_WIDTH;
MACRO_FOAM_DISK_SPACE FOAM_DISK_SPACE_FULL_LEVEL;
MACRO_FOAM_DISK FOAM_DISK_SPACE_NEARLY_FULL_LEVEL;
MACRO_FOAM_DOCUMENT FOAM_DOCUMENT_PREFIX_TEXT_SIZE;
MACRO_FOAM_FCLOCK FOAM_FCLOCK_ALARM_SOUND;
MACRO_FOAM_DOCUMENT FOAM_FILE_SELECTOR_WIDTH;
MACRO_FOAM_HEADER FOAM_HEADER_ICON_WIDTH;
MACRO_FLASHING FOAM_INDICATOR_WIDTH;
MACRO_FOAM_LARGE FOAM_LARGE_FONT_SIZE;
MACRO_FOAM_LIGHT_FONT FOAM_LIGHT_FONT_SIZE;
MACRO_FOAM_LIGHT_ZOOM1 FOAM_LIGHT_ZOOM1_FONT_SIZE;
MACRO_FOAM_LIGHT FOAM_LIGHT_ZOOM2_FONT_SIZE;
MACRO_FOAM_MAX_CONCATENATED FOAM_MAX_CONCATENATED_MESSAGES;
MACRO_FOAM_MAX_CONCATENATED FOAM_MAX_CONCATENATED_SMS_TEXT_SIZE;
MACRO_FOAM FOAM_MAX_SMS_TEXT_SIZE;
MACRO_FOAM_MAX FOAM_MAX_SMS_TEXT_SIZE_WITHOUT_HEADERS;
MACRO_FOAM_NORMAL FOAM_NORMAL_FONT_SIZE;
MACRO_FOAM_NUM FOAM_NUM_SPECIAL_SOUNDS;
MACRO_FOAM_PRINT FOAM_PRINT_A4_HEIGHT;
MACRO_FOAM_PRINT FOAM_PRINT_A4_WIDTH;
MACRO_FOAM_PRINT_BAUD FOAM_PRINT_BAUD_RATE_DEFAULT_INTEGER;
MACRO_FOAM_PRINT_LETTER FOAM_PRINT_LETTER_HEIGHT;
MACRO_FOAM_PRINT_LETTER FOAM_PRINT_LETTER_WIDTH;
MACRO_FOAM_SMALL FOAM_SMALL_FONT_SIZE;
MACRO_FOAM_TITLE FOAM_TITLE_FONT_SIZE;
MACRO_FOAM_ZOOM1 FOAM_ZOOM1_FONT_SIZE;
MACRO_FOAM_HEADER FOAM_ZOOM2_FONT_SIZE;
MACRO_FOAM_ZOOM_COMMENT_CLIP FOAM_ZOOM_COMMENT_CLIP_X_LENGTH;
MACRO_FOAM_ZOOM_COMMENT FOAM_ZOOM_COMMENT_FONT_LENGTH;
MACRO_FOAM_ZOOM FOAM_ZOOM_COMMENT_MAX_LENGTH;
MACRO_FOAM_ZOOM_COMMENT FOAM_ZOOM_COMMENT_MNEMONIC_LENGTH;
MACRO_FOAM_ZOOM_COMMENT_MOVE FOAM_ZOOM_COMMENT_MOVE_TO_LENGTH;
MACRO_DPI_STD FOARF_ADD_CRLF;
MACRO_FOARF FOARF_ADD_EOF;
MACRO_FOARF_NULL FOARF_NULL_TERMINATE;
MACRO_FOF FOF_CLOSE;
MACRO_FOF FOF_COPY;
MACRO_FOF FOF_COPY_TO_SOUNDS;
MACRO_MAX_NUM_OF FOF_COPY_VIA_IR;
MACRO_FOF FOF_CREATE_FOLDER;
MACRO_FOF FOF_CREATE_NEW;
MACRO_FOF_DEFAULT FOF_DEFAULT_FEATURES;
MACRO_FOF FOF_DELETE;
MACRO_FOF_DEFAULT FOF_FULL_MENU;
MACRO_FOF FOF_MOVE;
MACRO_FOF FOF_OPEN;
MACRO_FOF FOF_RENAME;
MACRO_FOF FOF_RENAME_COPY;
$3CDB7B10D95D89346CF13679E3142EAE FOMC_FIRST_FIELD;
$3CDB7B10D95D89346CF13679E3142EAE FOMC_LAST_FIELD;
$3CDB7B10D95D89346CF13679E3142EAE FOMC_NEXT_FIELD;
$3CDB7B10D95D89346CF13679E3142EAE FOMC_PREVIOUS_FIELD;
FILE *__pascal FOPEN(const char *filename, const char *modeString);
MACRO_FOPEN FOPEN_MAX;
MACRO_MPD_PASS_INFO FOREVER_WAIT;
MACRO_FORMATTED FORMATTED_RANGE_BUFFER_SIZE;
MACRO_FORMAT FORMAT_ARRAY_HDR_SIG;
MACRO_FORMAT_ENTRY FORMAT_ENTRY_SIG;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_CURRENCY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_CURRENCY_INTEGER;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_CURRENCY_WITH_COMMAS;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_DAY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG_CONDENSED;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG_MD;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG_MD_NO_WKDAY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG_MY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG_NO_WKDAY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_LONG_NO_WKDAY_CONDENSED;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_MONTH;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_SHORT;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_SHORT_MD;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_SHORT_MY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_SHORT_ZERO_PADDED;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_WEEKDAY;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_DATE_YEAR;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_FIXED;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_FIXED_INTEGER;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_FIXED_WITH_COMMAS;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_GENERAL;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_INDETERMINATE;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_MILLIONS;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_PERCENTAGE;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_PERCENTAGE_INTEGER;
MACRO_FLOAT_STACK FORMAT_ID_PREDEF;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_SCIENTIFIC;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_THOUSANDS;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_TIME_H;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_TIME_HM;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_TIME_HMS;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_TIME_HMS_24HR;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_TIME_HM_24HR;
$7A3E27181726140AF3D6524B218613FC FORMAT_ID_TIME_MS;
MACRO_FORMAT_PARAMS FORMAT_INFO_STRUC_ID;
MACRO_FLOAT_STACK FORMAT_NAME_LENGTH;
MACRO_FORMAT_PARAMS FORMAT_PARAMS_ID;
$B19A794A42962187F2659A8495EF1E92 FPBR_115200;
$B19A794A42962187F2659A8495EF1E92 FPBR_19200;
$B19A794A42962187F2659A8495EF1E92 FPBR_57600;
$B19A794A42962187F2659A8495EF1E92 FPBR_9600;
$8BA0B8CCCA5679A3EBC348C6E602E361 FPCT_IR;
$8BA0B8CCCA5679A3EBC348C6E602E361 FPCT_PARALLEL;
$8BA0B8CCCA5679A3EBC348C6E602E361 FPCT_SERIAL;
$4CB75D72147BD9F41A145206BB75A21D FPDB_EIGHT;
$4CB75D72147BD9F41A145206BB75A21D FPDB_SEVEN;
MACRO_FPDF FPDF_CANCEL;
$DE2ACE1D27092D4A105467982A297D73 FPE_BUFFER_TOO_SMALL;
$DE2ACE1D27092D4A105467982A297D73 FPE_HAS_NO_PARENT;
$DE2ACE1D27092D4A105467982A297D73 FPE_MEMORY_SHORTAGE;
$DE2ACE1D27092D4A105467982A297D73 FPE_NO_ERROR;
$DE2ACE1D27092D4A105467982A297D73 FPE_PATH_NOT_FOUND;
$DE2ACE1D27092D4A105467982A297D73 FPE_PATH_TABLE_FULL;
$C4AF06427251E370F13D6268B18F1803 FPFC_NONE;
$C4AF06427251E370F13D6268B18F1803 FPFC_SOFTWARE;
$A0C62A4D7C575C50F511A7DA59F1E48C FPHS_OFF;
$A0C62A4D7C575C50F511A7DA59F1E48C FPHS_ON;
$80D96DAFE1DB6F5E9255DC93C944D179 FPPS_A4;
$80D96DAFE1DB6F5E9255DC93C944D179 FPPS_LETTER;
$3D96E4EAD4E6E93A63D2510DDAC8EC93 FPP_EVEN;
$3D96E4EAD4E6E93A63D2510DDAC8EC93 FPP_NONE;
$3D96E4EAD4E6E93A63D2510DDAC8EC93 FPP_ODD;
$8190556512B3D3A3DDF7FBD94D738FA5 FPSB_ONE;
$8190556512B3D3A3DDF7FBD94D738FA5 FPSB_TWO;
MACRO_FFCC FPSCF_10;
MACRO_FPSCF FPSCF_12;
MACRO_FPSCF FPSCF_14;
MACRO_FPSCF FPSCF_18;
MACRO_FPSCF FPSCF_24;
MACRO_FPSCF FPSCF_36;
MACRO_FPSCF FPSCF_54;
MACRO_FPSCF FPSCF_USER_DEFINED;
MACRO_FPSC FPSC_DEFAULT_FEATURES;
MACRO_FPSIZE FPSIZE;
MACRO_SIGN FP_DEFAULT_STACK_ELEMENTS;
MACRO_SIGN FP_DEFAULT_STACK_SIZE;
MACRO_FP FP_MIN_STACK_ELEMENTS;
MACRO_FP FP_MIN_STACK_SIZE;
MACRO_FP FP_NAN;
$A8904477F74D910E307441D7A5DD1647 FRAT_FAX;
$A8904477F74D910E307441D7A5DD1647 FRAT_MAIL;
$A8904477F74D910E307441D7A5DD1647 FRAT_MISSED_CALLS;
$A8904477F74D910E307441D7A5DD1647 FRAT_OUTBOX;
$A8904477F74D910E307441D7A5DD1647 FRAT_SMS;
word __pascal FREAD(void *buf, word elSize, word nmemb, FILE *stream);
MACRO_FRSPF FRSPF_ADD_DRIVE_NAME;
MACRO_FRSPF FRSPF_RETURN_FIRST_DIR;
MACRO_FR FR_ACOUSTIC_BASS_DRUM;
MACRO_FR_ACOUSTIC FR_ACOUSTIC_SNARE;
MACRO_FR_BASS FR_BASS_DRUM_1;
MACRO_FR_LOW_AGOGO FR_CABASA;
MACRO_FR_CHINESE FR_CHINESE_CYMBAL;
MACRO_FR_LONG_GUIRO FR_CLAVES;
MACRO_FR_LOW FR_CLOSED_HI_HAT;
MACRO_FR_COWBELL FR_COWBELL;
MACRO_FR_CRASH FR_CRASH_CYMBAL_1;
MACRO_FR_COWBELL FR_CRASH_CYMBAL_2;
MACRO_FR_ELECTRIC FR_ELECTRIC_SNARE;
MACRO_FR_HAND FR_HAND_CLAP;
MACRO_FR_HIGH_AGOGO FR_HIGH_AGOGO;
MACRO_FR_HIGH FR_HIGH_FLOOR_TOM;
MACRO_FR_CRASH FR_HIGH_TOM;
MACRO_FR_RIDE_CYMBAL FR_HI_BONGO;
MACRO_FR_LOW_MID FR_HI_MID_TOM;
MACRO_FR_HI FR_HI_TIMBALE;
MACRO_FR_HI_WOOD FR_HI_WOOD_BLOCK;
MACRO_FR_LONG_GUIRO FR_LONG_GUIRO;
MACRO_FR_LONG FR_LONG_WHISTLE;
MACRO_FR_LOW_AGOGO FR_LOW_AGOGO;
MACRO_FR_LOW_BONGO FR_LOW_BONGO;
MACRO_FR_LOW_CONGA FR_LOW_CONGA;
MACRO_FR_LOW FR_LOW_FLOOR_TOM;
MACRO_FR_LOW_MID FR_LOW_MID_TOM;
MACRO_FR_LOW_TIMBALE FR_LOW_TIMBALE;
MACRO_FR_LOW_TOM FR_LOW_TOM;
MACRO_FR_LOW_WOOD FR_LOW_WOOD_BLOCK;
MACRO_FR_MARACAS FR_MARACAS;
MACRO_FR_LOW_WOOD FR_MUTE_CUICA;
MACRO_FR_LOW_BONGO FR_MUTE_HI_CONGA;
MACRO_FR_OPEN_CUICA FR_MUTE_TRIANGLE;
MACRO_FR_OPEN_CUICA FR_OPEN_CUICA;
MACRO_FR_OPEN FR_OPEN_HI_CONGA;
MACRO_FR_LOW_TOM FR_OPEN_HI_HAT;
MACRO_FR_OPEN_TRIANGLE FR_OPEN_TRIANGLE;
MACRO_FR_HIGH FR_PEDAL_HI_HAT;
MACRO_FR_RIDE_BELL FR_RIDE_BELL;
MACRO_FR_RIDE FR_RIDE_CYMBAL_1;
MACRO_FR_RIDE_CYMBAL FR_RIDE_CYMBAL_2;
MACRO_FR_SHORT FR_SHORT_GUIRO;
MACRO_FR_MARACAS FR_SHORT_WHISTLE;
MACRO_FR_BASS FR_SIDE_STICK;
MACRO_FR_SPLASH FR_SPLASH_CYMBAL;
MACRO_FR_TAMBOURINE FR_TAMBOURINE;
MACRO_FR_VIBRASLAP FR_VIBRASLAP;
MACRO_FSA FSA_ALLOW_CHANGE_DIRS;
$4AB2905DC487E8532D4D6660E86D487C FSA_DO_NOTHING;
MACRO_FSA FSA_HAS_CHANGE_DIRECTORY_LIST;
MACRO_FSA FSA_HAS_CHANGE_DRIVE_LIST;
MACRO_FSA FSA_HAS_CLOSE_DIR_BUTTON;
MACRO_FSA FSA_HAS_DOCUMENT_BUTTON;
MACRO_FSA FSA_HAS_FILE_LIST;
MACRO_FSA FSA_HAS_OPEN_DIR_BUTTON;
$4AB2905DC487E8532D4D6660E86D487C FSA_SAVE_DATA;
MACRO_FSA FSA_SHOW_FILES_DISABLED;
MACRO_FSA FSA_SHOW_FIXED_DISKS_ONLY;
MACRO_FSA FSA_SHOW_WRITABLE_DISKS_ONLY;
$4AB2905DC487E8532D4D6660E86D487C FSA_THROW_AWAY_CHANGES;
MACRO_FSA FSA_USE_VIRTUAL_ROOT;
int __pascal FSEEK(FILE *stream, dword posOrOffset, word mode);
MACRO_FSFC FSFC_DIRS;
MACRO_FSFC FSFC_FILE_FILTER;
MACRO_FSFC FSFC_FILTER_IS_C;
MACRO_FSFC FSFC_GEOS_EXECUTABLES;
MACRO_FSFC FSFC_GEOS_NON_EXECUTABLES;
MACRO_FSFC FSFC_MASK_CASE_INSENSITIVE;
MACRO_FSFC FSFC_NON_GEOS_FILES;
MACRO_FSFC FSFC_TOKEN_NO_ID;
MACRO_FSFC FSFC_USE_FAKE_FILE_SYSTEM;
MACRO_FSFC FSFC_USE_MASK_FOR_DIRS;
$3CD932289B448C86446CC5FB60CDE42A FSRC_FINE;
$3CD932289B448C86446CC5FB60CDE42A FSRC_STANDARD;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_CANCELED;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_DISK_FULL;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_ERROR;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_FILE_CREATE;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_FILE_OPEN;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_FILE_READ;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_FILE_TOO_LARGE;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_FILE_WRITE;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_INVALID_FORMAT;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_NO_ERROR;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_OUT_OF_MEMORY;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_SOURCE_FILE_EMPTY;
$08B2A41D5FDB0C7688E8EC48ABE114F2 FTCE_TRANSLATION_NOT_SUPPORTED;
$0E1CB1FBBEAC4526B96E773A9DAFEFB3 FTCT_NEW_PAGE;
$0E1CB1FBBEAC4526B96E773A9DAFEFB3 FTCT_PROGRESS;
dword __pascal FTELL(FILE *stream);
MACRO_ECHO FTP;
MACRO_ECHO FTP_DATA;
MACRO_FTSCF FTSCF_ALL_CAP;
MACRO_FTSCF FTSCF_BOLD;
MACRO_FTSCF FTSCF_BOXED;
MACRO_FTSCF FTSCF_BUTTON;
MACRO_FTSCF FTSCF_INDEX;
MACRO_FTSCF FTSCF_ITALIC;
MACRO_FTSCF FTSCF_PLAIN;
MACRO_FTSCF FTSCF_SMALL_CAP;
MACRO_FTSCF FTSCF_STRIKE_THRU;
MACRO_FTSCF FTSCF_SUBSCRIPT;
MACRO_FTSCF FTSCF_SUPERSCRIPT;
MACRO_FTSCF FTSCF_UNDERLINE;
MACRO_FTSC FTSC_DEFAULT_FEATURES;
MACRO_FT_2SECOND FT_2SECOND;
MACRO_FT_2SECOND_OFFSET FT_2SECOND_OFFSET;
MACRO_CT FT_ALL;
MACRO_FT_PRINT FT_FINANCIAL;
MACRO_FILE_POS FT_HOUR;
MACRO_FT_HOUR FT_HOUR_OFFSET;
MACRO_FT_PRINT FT_INFORMATION;
MACRO_FT_PRINT FT_LOGICAL;
MACRO_FT_PRINT FT_MATH;
MACRO_FT FT_MINUTE;
MACRO_FT_MINUTE FT_MINUTE_OFFSET;
MACRO_FT_PRINT FT_PRINT;
MACRO_FT_PRINT FT_STATISTICAL;
MACRO_FT_PRINT FT_STRING;
MACRO_FT_PRINT FT_TIME_DATE;
MACRO_FT_PRINT FT_TRIGONOMETRIC;
$D259DC1B1D231EC7AC9527C0B9641DDD FUAT_NO;
$D259DC1B1D231EC7AC9527C0B9641DDD FUAT_YES;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ABS;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ACOS;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ACOSH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_AND;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ASIN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ASINH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ATAN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ATAN2;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ATANH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_AVG;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_CHAR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_CHOOSE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_CLEAN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_CODE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_COLS;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_COS;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_COSH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_COUNT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_CTERM;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_DATE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_DATEVALUE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_DAY;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_DDB;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_DEGREES;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ERR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_EXACT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_EXP;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_FACT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_FALSE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_FILENAME;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_FIND;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_FIRST_EXTERNAL_FUNCTION;
MACRO_CT FUNCTION_ID_FIRST_EXTERNAL_FUNCTION_BASE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_FV;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_HLOOKUP;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_HOUR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_IF;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_INDEX;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_INT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_IRR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ISERR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ISNUMBER;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ISSTRING;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_LEFT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_LENGTH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_LN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_LOG;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_LOWER;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_MAX;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_MID;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_MIN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_MINUTE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_MOD;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_MONTH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_N;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_NA;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_NOW;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_NPV;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_OR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PAGE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PAGES;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PI;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PMT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PRODUCT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PROPER;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_PV;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_RADIANS;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_RANDOM;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_RANDOM_N;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_RATE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_REPEAT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_REPLACE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_RIGHT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ROUND;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_ROWS;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SECOND;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SIN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SINH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SLN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SQRT;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_STD;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_STDP;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_STRING;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SUM;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_SYD;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TAN;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TANH;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TERM;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TIME;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TIMEVALUE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TODAY;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TRIM;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TRUE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_TRUNC;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_UPPER;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_VALUE;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_VAR;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_VARP;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_VLOOKUP;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_WEEKDAY;
$ADCFDE7ABA2A00DE3730A3013FECF134 FUNCTION_ID_YEAR;
MACRO_FUTURE_AREA FUTURE_AREA_ATTR_ELEMENT_SIZE;
MACRO_FUTURE FUTURE_LINE_ATTR_ELEMENT_DATA_SIZE;
$B3091C5DAF7254A51DC990DAE453836F FVL_1;
$B3091C5DAF7254A51DC990DAE453836F FVL_2;
$B3091C5DAF7254A51DC990DAE453836F FVL_3;
$B3091C5DAF7254A51DC990DAE453836F FVL_4;
$B3091C5DAF7254A51DC990DAE453836F FVL_5;
MACRO_FWI FWI_CONDENSED;
MACRO_FWI FWI_EXPANDED;
MACRO_FWI_MAXIMUM FWI_MAXIMUM;
MACRO_FWI FWI_MEDIUM;
MACRO_FWI FWI_MINIMUM;
MACRO_FWI FWI_NARROW;
MACRO_FWI FWI_WIDE;
word __pascal FWRITE(const void *buf, word elSize, word nmemb, FILE *stream);
$BE5313DA5CDC4E8087A9EB88C9DFCAE4 FWTS_OFF;
$BE5313DA5CDC4E8087A9EB88C9DFCAE4 FWTS_ON;
MACRO_FA_FAMILY_OFFSET FW_MAXIMUM;
MACRO_FA_FAMILY_OFFSET FW_MINIMUM;
MACRO_FA_FAMILY_OFFSET FW_NORMAL;
$D45B97C661E170765A7C05DAD2AAA682 FZCT_CLIP_X;
$D45B97C661E170765A7C05DAD2AAA682 FZCT_FONT;
$D45B97C661E170765A7C05DAD2AAA682 FZCT_INVALID;
$D45B97C661E170765A7C05DAD2AAA682 FZCT_MOVE_TO;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_ALWAYS_INTERACTABLE_WINDOWS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_NOTIFY_DOC_SIZE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_NOTIFY_PAPER_SIZE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_APP_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_BITMAP_CURRENT_FORMAT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_BITMAP_CURRENT_TOOL_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_BORDER_COLOR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_CARD_BACK_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_CHART_AXIS_ATTRIBUTES;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_CHART_GROUP_FLAGS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_CHART_MARKER_SHAPE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_CHART_TYPE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_CURSOR_POSITION_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_DISPLAY_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_DISPLAY_LIST_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_DOCUMENT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_DUMMY_CHANGE_2;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_DUMMY_CHANGE_3;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_FIELD_APPEARANCE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_FIELD_LIST_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_FIELD_PROPERTIES_STATUS_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FLAT_FILE_RCP_STATUS_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FONT_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_FONT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_AREA_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_BODY_INSTRUCTION_FLAGS_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_BODY_SELECTION_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_CURRENT_TOOL_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_GRADIENT_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_LINE_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_GROBJ_TEXT_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_HYPERLINK_STATUS_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_INK_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_JUSTIFICATION_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_LIBRARY_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_PAGE_INFO_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_PAGE_NAME_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_PAGE_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_PARA_COLOR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_POINT_SIZE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_RULER_GRID_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_RULER_GUIDE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_RULER_TYPE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SEARCH_REPLACE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SEARCH_SPELL_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SELECT_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPLINE_MARKER_SHAPE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPLINE_OPEN_CLOSE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPLINE_POINT;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPLINE_POLYLINE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPLINE_SMOOTHNESS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_ACTIVE_CELL_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_CELL_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_CELL_NOTES_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_CELL_WIDTH_HEIGHT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_DATA_RANGE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_DOC_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_EDIT_BAR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_NAME_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_SPREADSHEET_SELECTION_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_STYLE_GROBJ_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_STYLE_SHEET_GROBJ_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_STYLE_SHEET_TEXT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_STYLE_TEXT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_BG_COLOR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_CHAR_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_COUNT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_FG_COLOR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_HYPERLINKABILITY_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_NAME_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_PARA_ATTR_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_SELECTION_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_STYLE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_TEXT_TYPE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_APP_TARGET_NOTIFY_VIEW_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_CONTROLLED_GEN_VIEW_OBJECTS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_CONTROLLED_INK_OBJECTS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_CONTROLLERS_WITHIN_USER_DO_DIALOGS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_DATASTORE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_DISPLAY_OBJECTS_WITH_RULERS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_EDIT_CONTROL_NOTIFY_UNDO_STATE_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_FLOAT_FORMAT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_FLOAT_FORMAT_INIT;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_FOAM_NOTIFICATIONS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_FOCUS_WINDOW_KBD_STATUS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_FULL_SCREEN_EXCL_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_GAME_STATUS_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_GEN_CONTROL_NOTIFY_STATUS_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_MAILBOX_SEND_CONTROL;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_MODAL_WIN_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_NOTIFY_CONTENT_BOOK_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_NOTIFY_CONTENT_CONTEXT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_NOTIFY_FOCUS_TEXT_OBJECT;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_NOTIFY_HELP_CONTEXT_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_NOTIFY_NAVIGATE_ENTRY_CHANGE;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_NOTIFY_TEXT_CONTEXT;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_SELF_LOAD_OPTIONS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_STARTUP_LOAD_OPTIONS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_TEXT_RULER_OBJECTS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_USER_DO_DIALOGS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_VIEWER_NOTIFICATIONS;
$621BFAEEC8642981E46383FA80AD7C6D GAGCNLT_WINDOWS;
MACRO_GAGOF GAGOF_REFERENCE;
MACRO_GAGOF GAGOF_REFERENCE_OFFSET;
MACRO_GAGOF GAGOF_RELATIVE;
word __pascal GAMERANDOM(word maxValue);
MACRO_GAUC GAUC_POPUP;
MACRO_GAUC GAUC_RECALC_CONTROLLER;
MACRO_GAUC GAUC_REPARENT;
MACRO_GAUC GAUC_RESTART;
MACRO_GAUC GAUC_TOOLBAR;
MACRO_GAUC GAUC_USABILITY;
MACRO_GAUTF GAUTF_COMMAND;
MACRO_GAUC GAUTF_END_OF_LIST;
MACRO_GAUTF GAUTF_OFF_IF_BIT_ON;
MACRO_GA GA_APPLICATION;
MACRO_GA GA_DRIVER;
MACRO_GA GA_DRIVER_INITIALIZED;
MACRO_GA GA_ENTRY_POINTS_IN_C;
MACRO_GA GA_GEODE_INITIALIZED;
MACRO_GA GA_HAS_GENERAL_CONSUMER_MODE;
MACRO_GA2 GA_INITIATES_BUSY_STATE;
MACRO_GA2 GA_INITIATES_INPUT_HOLD_UP;
MACRO_GA2 GA_INITIATES_INPUT_IGNORE;
MACRO_GA2 GA_KBD_SEARCH_PATH;
MACRO_GA GA_KEEP_FILE_OPEN;
MACRO_GA GA_LIBRARY;
MACRO_GA GA_LIBRARY_INITIALIZED;
MACRO_GA GA_MULTI_LAUNCHABLE;
MACRO_GA2 GA_NOTIFY_VISIBILITY;
MACRO_GA GA_PROCESS;
MACRO_GA2 GA_READ_ONLY;
MACRO_GA GA_REQUIRES_COPROC;
MACRO_GA2 GA_SIGNAL_INTERACTION_COMPLETE;
MACRO_GA GA_SYSTEM;
MACRO_GA2 GA_TARGETABLE;
MACRO_GA GA_USES_COPROC;
MACRO_GBF GBF_DEFAULT_FOCUS;
MACRO_GBF GBF_DEFAULT_TARGET;
MACRO_GOTDF GBF_HAS_ACTION_NOTIFICATION;
MACRO_GBI GBI_BRANCH_MINIMIZED;
MACRO_GBI GBI_USABLE;
MACRO_GCBF GCBF_ALWAYS_INTERACTABLE;
MACRO_GCBF GCBF_ALWAYS_ON_GCN_LIST;
MACRO_GCBF GCBF_ALWAYS_UPDATE;
MACRO_GCBF GCBF_CUSTOM_ENABLE_DISABLE;
MACRO_GCBF GCBF_DO_NOT_DESTROY_CHILDREN_WHEN_CLOSED;
MACRO_GCBF GCBF_EXPAND_TOOL_WIDTH_TO_FIT_PARENT;
MACRO_GCBF GCBF_IS_ON_ACTIVE_LIST;
MACRO_GCBF GCBF_IS_ON_START_LOAD_OPTIONS_LIST;
MACRO_GCBF GCBF_MANUALLY_REMOVE_FROM_ACTIVE_LIST;
MACRO_GCBF GCBF_NOT_REQUIRED_TO_BE_ON_SELF_LOAD_OPTIONS_LIST;
MACRO_GCBF GCBF_SPECIFIC_UI;
MACRO_GCBF GCBF_SUSPEND_ON_APPLY;
MACRO_GCBF GCBF_USE_GEN_DESTROY;
MACRO_GCCF_NOTIFY GCCF_ALWAYS_ADD;
MACRO_GCCF GCCF_HORIZONTAL_GUIDES;
MACRO_GCCF_NOTIFY GCCF_IS_DIRECTLY_A_FEATURE;
MACRO_GCCF_NOTIFY GCCF_NOTIFY_WHEN_ADDING;
MACRO_GCCF GCCF_VERTICAL_GUIDES;
MACRO_GCC GCC_DEFAULT_FEATURES;
MACRO_GCC GCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GCF_FIRST_CALL GCF_FIRST_CALL;
MACRO_GCIF GCIF_CONTROLLER;
MACRO_GCIF GCIF_NORMAL_UI;
MACRO_GCIF GCIF_TOOLBOX_UI;
MACRO_GCMI GCMF_LEFT_ICON;
MACRO_GCMF GCMF_RIGHT_ICON;
MACRO_GCMI GCMI_EXIT;
MACRO_GCMI GCMI_HELP;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MAX_X;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MAX_X_ROUNDED;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MAX_Y;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MAX_Y_ROUNDED;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MIN_X;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MIN_X_ROUNDED;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MIN_Y;
$A9DA9023B6FBA41BA3230240B6602CF9 GCMI_MIN_Y_ROUNDED;
MACRO_GCMI GCMI_NONE;
$FF296692CD885ED8365E6B263DAC431B GCNDCNT_CREATED;
$FF296692CD885ED8365E6B263DAC431B GCNDCNT_DESTROYED;
$873EC953EBCAA549C13959FDFD48AF45 GCNEMNT_CREATED;
$873EC953EBCAA549C13959FDFD48AF45 GCNEMNT_DESTROYED;
Boolean __pascal GCNLISTADD(optr OD, ManufacturerID manufID, word listType);
Boolean __pascal GCNLISTADDTOBLOCK(optr OD, ManufacturerID manufID, word listType, MemHandle mh, ChunkHandle listOfLists);
Boolean __pascal GCNLISTADDTOLIST(optr OD, optr list);
ChunkHandle __pascal GCNLISTCREATEBLOCK(MemHandle mh);
ChunkHandle __pascal GCNLISTCREATELIST(MemHandle mh);
void __pascal GCNLISTDESTROYBLOCK(MemHandle mh, ChunkHandle listOfLists);
void __pascal GCNLISTDESTROYLIST(optr list);
Boolean __pascal GCNLISTFINDITEMINLIST(optr OD, optr list);
ChunkHandle __pascal GCNLISTFINDLISTINBLOCK(ManufacturerID manufID, word changeType, MemHandle mh, ChunkHandle listOfLists, Boolean createIfNotFound);
void __pascal GCNLISTRELOCATEBLOCK(MemHandle mh, ChunkHandle listOfLists, MemHandle relocBlock);
void __pascal GCNLISTRELOCATELIST(optr list, MemHandle relocBlock);
Boolean __pascal GCNLISTREMOVE(optr OD, ManufacturerID manufID, word listType);
Boolean __pascal GCNLISTREMOVEFROMBLOCK(optr OD, ManufacturerID manufID, word listType, MemHandle mh, ChunkHandle listOfLists);
Boolean __pascal GCNLISTREMOVEFROMLIST(optr OD, optr list);
Boolean __pascal GCNLISTUNRELOCATEBLOCK(MemHandle mh, ChunkHandle listOfLists, MemHandle relocBlock);
void __pascal GCNLISTUNRELOCATELIST(optr list, MemHandle relocBlock);
MACRO_GCNLSF GCNLSF_FORCE_QUEUE;
MACRO_GCNLSF GCNLSF_IGNORE_IF_STATUS_TRANSITIONING;
MACRO_GCNLTF GCNLSF_SET_STATUS;
MACRO_GCNLTF GCNLTF_SAVE_TO_STATE;
$0E8F9602ACE59B4E632B46626F798AEB GCNSCT_SHUTDOWN;
$0E8F9602ACE59B4E632B46626F798AEB GCNSCT_SUSPEND;
$0E8F9602ACE59B4E632B46626F798AEB GCNSCT_UNSUSPEND;
$893FC781B957FE149F14732CEA08381B GCNSLT_ACCESS_POINT_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_APPLICATION;
$893FC781B957FE149F14732CEA08381B GCNSLT_CONTACT_LIST_SELECTION;
$893FC781B957FE149F14732CEA08381B GCNSLT_CONTACT_LOG_CHANGES;
$893FC781B957FE149F14732CEA08381B GCNSLT_CONTACT_SIM_LIST_CHANGES;
$893FC781B957FE149F14732CEA08381B GCNSLT_CONTACT_SIM_LIST_CONTACT_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_CONTACT_SIM_LIST_FDN_STATUS;
$893FC781B957FE149F14732CEA08381B GCNSLT_CONTACT_SIM_LIST_SELECTION;
$893FC781B957FE149F14732CEA08381B GCNSLT_DATE_TIME;
$893FC781B957FE149F14732CEA08381B GCNSLT_DICTIONARY;
$893FC781B957FE149F14732CEA08381B GCNSLT_EMAIL_DATABASE_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_EXPRESS_MENU_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_EXPRESS_MENU_OBJECTS;
$893FC781B957FE149F14732CEA08381B GCNSLT_FAX_INFO_FILE_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_FILE_SYSTEM;
$893FC781B957FE149F14732CEA08381B GCNSLT_FOAM_DB_CHANGES;
$893FC781B957FE149F14732CEA08381B GCNSLT_FONT_CHANGES;
$893FC781B957FE149F14732CEA08381B GCNSLT_INK;
$893FC781B957FE149F14732CEA08381B GCNSLT_INSTALLED_PRINTERS;
$893FC781B957FE149F14732CEA08381B GCNSLT_KEYBOARD_MAP_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_KEYBOARD_OBJECTS;
$893FC781B957FE149F14732CEA08381B GCNSLT_NOTIFY_INDICATOR_EVENT;
$893FC781B957FE149F14732CEA08381B GCNSLT_NOTIFY_INIT_FILE_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_NOTIFY_KEYBOARD_EVENT;
$893FC781B957FE149F14732CEA08381B GCNSLT_NOTIFY_SERIAL_LURKER;
$893FC781B957FE149F14732CEA08381B GCNSLT_PCMCIA_NOTIFY_CARD_CHANGE;
$893FC781B957FE149F14732CEA08381B GCNSLT_PENELOPE_HARDWARE_NOTIFICATIONS;
$893FC781B957FE149F14732CEA08381B GCNSLT_PENELOPE_RADIO_STATUS_NOTIFICATIONS;
$893FC781B957FE149F14732CEA08381B GCNSLT_PRINT_JOB_STATUS;
$893FC781B957FE149F14732CEA08381B GCNSLT_REMOVABLE_DISK;
$893FC781B957FE149F14732CEA08381B GCNSLT_RESPONDER_NOTIFICATIONS;
$893FC781B957FE149F14732CEA08381B GCNSLT_SECURITY_SETTINGS_NOTIFICATIONS;
$893FC781B957FE149F14732CEA08381B GCNSLT_SHUTDOWN_CONTROL;
$893FC781B957FE149F14732CEA08381B GCNSLT_TRANSFER_NOTIFICATION;
$893FC781B957FE149F14732CEA08381B GCNSLT_TRANSPARENT_DETACH;
$893FC781B957FE149F14732CEA08381B GCNSLT_TRANSPARENT_DETACH_DA;
$893FC781B957FE149F14732CEA08381B GCNSLT_TRANSPARENT_DETACH_FULL_SCREEN_EXCL;
$893FC781B957FE149F14732CEA08381B GCNSLT_TRANSPARENT_DETACH_IN_PROGRESS;
$893FC781B957FE149F14732CEA08381B GCNSLT_UI_CHANGE;
MACRO_GCSF GCSF_HIGHLIGHTED_TOOLGROUP_SELECTED;
MACRO_GCSF GCSF_NORMAL_FEATURES_CHANGED;
MACRO_GCSF GCSF_TOOLBOX_FEATURES_CHANGED;
MACRO_GCSUIC GCSUIC_ADD_NORMAL_FEATURES_IF_APP_FEATURE_ON;
MACRO_GCSUIC GCSUIC_ADD_TOOLBOX_FEATURES_IF_APP_FEATURE_ON;
MACRO_GCSUIC GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF;
MACRO_GCSUIC GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_ON;
MACRO_GCSUIC GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL;
MACRO_GCSUIC GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF;
MACRO_GCSUIC GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_ON;
MACRO_GCSUIC GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL;
MACRO_GCUF GCUF_USER_TOOLBOX_UI;
MACRO_GCUF GCUF_USER_UI;
$23AB1D777A17D61FCB408E9E96142E17 GCUIT_NORMAL;
$23AB1D777A17D61FCB408E9E96142E17 GCUIT_TOOLBOX;
MACRO_GDA_READ GDA_ATTACH_TO_DIRTY_FILE;
MACRO_GDA_READ GDA_AUTO_SAVE_STOPPED;
MACRO_GDA_READ GDA_BACKUP_EXISTS;
MACRO_GDA_READ GDA_CLOSING;
MACRO_GDA_READ GDA_DIRTY;
MACRO_GDA_READ GDA_FORCE_DENY_WRITE;
MACRO_GDA_READ GDA_MODEL;
MACRO_GDA_READ GDA_ON_WRITABLE_MEDIA;
MACRO_GDA_READ GDA_OPENING;
MACRO_GDA_READ GDA_PREVENT_AUTO_SAVE;
MACRO_GDA_READ GDA_READ_ONLY;
MACRO_GDA_READ GDA_READ_WRITE;
MACRO_GDA_READ GDA_SAVE_FAILED;
MACRO_GDA_READ GDA_SHARED_MULTIPLE;
MACRO_GDA_READ GDA_SHARED_SINGLE;
MACRO_GDA_READ GDA_UNTITLED;
MACRO_GDA GDA_USER_DISMISSABLE;
MACRO_GDCA GDCA_CURRENT_TASK;
MACRO_GDCA_CURRENT GDCA_CURRENT_TASK_OFFSET;
MACRO_GDCA GDCA_DOCUMENT_EXISTS;
MACRO_GDCA GDCA_DOS_FILE_DENY_WRITE;
MACRO_GDCA GDCA_DO_NOT_SAVE_FILES;
MACRO_GCSUIC GDCA_MAXIMIZED_NAME_ON_PRIMARY;
MACRO_GDCA GDCA_MODE;
MACRO_GDCA_MODE GDCA_MODE_OFFSET;
MACRO_GDCM GDCA_MULTIPLE_OPEN_FILES;
MACRO_GDCA GDCA_NATIVE;
MACRO_GDCA GDCA_SUPPORTS_SAVE_AS_REVERT;
MACRO_GDCA GDCA_VM_FILE;
MACRO_GDCF_OPEN GDCF_COPY;
MACRO_GDCF GDCF_DISPLAY_LIST;
MACRO_GDCF_OPEN GDCF_EDIT_USER_NOTES;
MACRO_GDCF_OPEN GDCF_EXPORT;
MACRO_GDCF_SINGLE GDCF_NAME_ON_PRIMARY;
MACRO_GEN_DOCUMENT_GET GDCF_NEW;
MACRO_GDCF_OPEN GDCF_OPEN_CLOSE;
MACRO_GDCF GDCF_OVERLAPPING_MAXIMIZED;
MACRO_GDCF_OPEN GDCF_QUICK_BACKUP;
MACRO_GDCA_CURRENT GDCF_READ_ONLY_SUPPORTS_SAVE_AS_REVERT;
MACRO_GDCF_OPEN GDCF_RENAME;
MACRO_GDCF_OPEN GDCF_REVERT;
MACRO_GDCF_OPEN GDCF_SAVE;
MACRO_GDCF_OPEN GDCF_SAVE_AS;
MACRO_GDCF_OPEN GDCF_SAVE_AS_TEMPLATE;
MACRO_GDCF_OPEN GDCF_SET_DEFAULT_DOCUMENT;
MACRO_GDCF_OPEN GDCF_SET_EMPTY_DOCUMENT;
MACRO_GDCF_OPEN GDCF_SET_PASSWORD;
MACRO_GDCF_OPEN GDCF_SET_TYPE;
MACRO_GDCF_SINGLE GDCF_SINGLE_FILE_CLEAN_CAN_NEW_OPEN;
MACRO_GDCF_SINGLE GDCF_SUPPORTS_TEMPLATES;
MACRO_GDCF_SINGLE GDCF_SUPPORTS_USER_MAKING_SHARED_DOCUMENTS;
MACRO_GDCF_SINGLE GDCF_SUPPORTS_USER_SETTABLE_DEFAULT_DOCUMENT;
MACRO_GDCF_SINGLE GDCF_SUPPORTS_USER_SETTABLE_EMPTY_DOCUMENT;
MACRO_GDCF GDCF_TILE;
MACRO_GDCM GDCM_SHARED_MULTIPLE;
MACRO_GDCM GDCM_SHARED_SINGLE;
MACRO_GDCM GDCM_VIEWER;
MACRO_GDCTF_NEW GDCTF_CLOSE;
MACRO_GDCTF GDCTF_DISPLAY_LIST;
MACRO_GDCTF_NEW GDCTF_NEW_EMPTY;
MACRO_GDCTF_NEW GDCTF_OPEN;
MACRO_GDCTF GDCTF_OVERLAPPING_MAXIMIZED;
MACRO_GDCTF_NEW GDCTF_QUICK_BACKUP;
MACRO_GDCTF_NEW GDCTF_SAVE;
MACRO_GDCTF GDCTF_TILE;
MACRO_GDCTF_NEW GDCTF_USE_TEMPLATE;
MACRO_GDCT GDCT_COPY_TO;
MACRO_GDCT GDCT_DIALOG;
MACRO_GDCT GDCT_MOVE_TO;
MACRO_GDCT GDCT_NEW;
MACRO_GDCT GDCT_NONE;
MACRO_GDCT GDCT_OPEN;
MACRO_GDCT GDCT_PASSWORD;
MACRO_GDCT GDCT_SAVE_AS;
MACRO_GDCT GDCT_TYPE;
MACRO_GDCT GDCT_USE_TEMPLATE;
MACRO_GDC GDC_DEFAULT_FEATURES;
MACRO_GDC_DEFAULT GDC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GDC_SUGGESTED GDC_SUGGESTED_ADVANCED_FEATURES;
MACRO_GDC_SUGGESTED GDC_SUGGESTED_BEGINNING_FEATURES;
MACRO_GDC_SUGGESTED GDC_SUGGESTED_INTERMEDIATE_FEATURES;
MACRO_GDCTF_NEW GDC_SUGGESTED_INTRODUCTORY_FEATURES;
$14D34EC051630892B30EBAADF9B59B1D GDDT_FILE_SYSTEM;
$14D34EC051630892B30EBAADF9B59B1D GDDT_KEYBOARD;
$14D34EC051630892B30EBAADF9B59B1D GDDT_MEMORY_VIDEO;
$14D34EC051630892B30EBAADF9B59B1D GDDT_MOUSE;
$14D34EC051630892B30EBAADF9B59B1D GDDT_POWER_MANAGEMENT;
$14D34EC051630892B30EBAADF9B59B1D GDDT_TASK;
$14D34EC051630892B30EBAADF9B59B1D GDDT_VIDEO;
MACRO_GDGA GDGA_APPLICATION_THREAD;
MACRO_GDGA GDGA_AUTOMATIC_CHANGE_NOTIFICATION;
MACRO_GDGA GDGA_AUTOMATIC_DIRTY_NOTIFICATION;
MACRO_GDGA GDGA_AUTOMATIC_UNDO_INTERACTION;
MACRO_GDGA GDGA_CONTENT_DOES_NOT_MANAGE_CHILDREN;
MACRO_GDGA GDGA_LARGE_CONTENT;
MACRO_GDGA GDGA_NATIVE;
MACRO_GDGA GDGA_SUPPORTS_AUTO_SAVE;
MACRO_GFST GDGA_VM_FILE;
MACRO_GDGA GDGA_VM_FILE_CONTAINS_OBJECTS;
MACRO_GDA GDLI_NO_CHANGE;
MACRO_GDLP GDLP_FIRST;
MACRO_GDLP GDLP_LAST;
$66B2988911F7460091C46A06CF8D5416 GDMT_HELP;
$66B2988911F7460091C46A06CF8D5416 GDMT_HELP_PRIMARY;
$66B2988911F7460091C46A06CF8D5416 GDMT_LEVEL_0;
$66B2988911F7460091C46A06CF8D5416 GDMT_LEVEL_1;
$66B2988911F7460091C46A06CF8D5416 GDMT_LEVEL_2;
$66B2988911F7460091C46A06CF8D5416 GDMT_LEVEL_3;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_ATTACH;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_AUTO_SAVE;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_CLOSE;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_DETACH;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_NEW;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_NORMAL;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_OPEN;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_REVERT;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_REVERT_QUICK;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_REVERT_TO_AUTO_SAVE;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_SAVE;
$24B080F506CD1092DEE44DBE66CFFB7E GDO_SAVE_AS;
$02D1D190F894C3D3A6B5EAC52D3A690B GDT_MULTI_USER;
$02D1D190F894C3D3A6B5EAC52D3A690B GDT_NORMAL;
$02D1D190F894C3D3A6B5EAC52D3A690B GDT_PUBLIC;
$02D1D190F894C3D3A6B5EAC52D3A690B GDT_READ_ONLY;
$02D1D190F894C3D3A6B5EAC52D3A690B GDT_READ_ONLY_TEMPLATE;
$02D1D190F894C3D3A6B5EAC52D3A690B GDT_TEMPLATE;
MACRO_GECF GECF_COPY;
MACRO_GECF GECF_CUT;
MACRO_GECF GECF_DELETE;
MACRO_GECF GECF_PASTE;
MACRO_GECF GECF_SELECT_ALL;
MACRO_GECF GECF_UNDO;
MACRO_GECTF GECTF_COPY;
MACRO_GECTF GECTF_CUT;
MACRO_GECTF GECTF_DELETE;
MACRO_GECTF GECTF_PASTE;
MACRO_GECTF GECTF_SELECT_ALL;
MACRO_GECTF GECTF_UNDO;
MACRO_GEC GEC_DEFAULT_FEATURES;
MACRO_GEC_DEFAULT GEC_DEFAULT_TOOLBOX_FEATURES;
optr __pascal GENFINDOBJECTINTREE(optr startObject, dword childTable);
MACRO_LCSDTGF GENGO_LONG_NAME_LENGTH;
MACRO_GENGO GENGO_SHORT_NAME_LENGTH;
MACRO_GENOA GENOA_TEST;
void __pascal GENPROCESSGENATTRSAFTERACTION(MemHandle mh, ChunkHandle chnk);
void __pascal GENPROCESSGENATTRSBEFOREACTION(MemHandle mh, ChunkHandle chnk);
Boolean GENPROCESSUNDOCHECKIFIGNORING(void);
VMFileHandle GENPROCESSUNDOGETFILE(void);
void __pascal GENSETUPWARDLINK(MemHandle mh, ChunkHandle chnk, optr parent);
void __pascal GENSPECSHRINK(MemHandle mh, ChunkHandle chnk);
MACRO_GEN_DOCUMENT GEN_DOCUMENT_GENERATE_NAME_CANCEL;
MACRO_GEN GEN_DOCUMENT_GENERATE_NAME_ERROR;
MACRO_GEN_DOCUMENT_GET GEN_DOCUMENT_GET_VARIABLE_BUFFER_SIZE;
MACRO_TGHT GEN_VALUE_MAX_TEXT_LEN;
void __pascal GEODEADDREFERENCE(GeodeHandle gh);
QueueHandle GEODEALLOCQUEUE(void);
MemHandle __pascal GEODEDUPLICATERESOURCE(MemHandle mh);
GeodeHandle __pascal GEODEFIND(const char *name, word numChars, GeodeAttrs attrMatch, GeodeAttrs attrNoMatch);
word __pascal GEODEFINDRESOURCE(FileHandle file, word resNum, word resOffset, dword *base);
void __pascal GEODEFLUSHQUEUE(QueueHandle source, QueueHandle dest, optr obj, word messageFlags);
void __pascal GEODEFREEDRIVER(GeodeHandle gh);
void __pascal GEODEFREELIBRARY(GeodeHandle gh);
void __pascal GEODEFREEQUEUE(QueueHandle qh);
optr __pascal GEODEGETAPPOBJECT(GeodeHandle gh);
GeodeHandle GEODEGETCODEPROCESSHANDLE(void);
GeodeHandle __pascal GEODEGETDEFAULTDRIVER(GeodeDefaultDriverType type);
MemHandle __pascal GEODEGETGEODERESOURCEHANDLE(GeodeHandle geode, word resourceID);
word __pascal GEODEGETINFO(GeodeHandle gh, GeodeGetInfoType info, void *buf);
optr __pascal GEODEGETOPTRNS(optr obj);
GeodeHandle GEODEGETPROCESSHANDLE(void);
word __pascal GEODEGETUIDATA(GeodeHandle gh);
DriverInfoStruct *__pascal GEODEINFODRIVER(GeodeHandle gh);
word __pascal GEODEINFOQUEUE(QueueHandle qh);
GeodeHandle __pascal GEODELOAD(const char *name, GeodeAttrs attrMatch, GeodeAttrs attrNoMatch, word priority, dword appInfo, GeodeLoadError *err);
void __pascal GEODELOADDGROUP(MemHandle mh);
word __pascal GEODEPRIVALLOC(GeodeHandle gh, word numWords);
void __pascal GEODEPRIVFREE(word offset, word numWords);
void __pascal GEODEPRIVREAD(GeodeHandle gh, word offset, word numWords, word *dest);
Boolean __pascal GEODEPRIVWRITE(GeodeHandle gh, word offset, word numWords, word *src);
Boolean __pascal GEODEREMOVEREFERENCE(GeodeHandle gh);
ReservationHandle __pascal GEODEREQUESTSPACE(int amount, GeodeHandle gh);
void __pascal GEODERETURNSPACE(ReservationHandle resv);
void __pascal GEODESETDEFAULTDRIVER(GeodeDefaultDriverType type, GeodeHandle gh);
Boolean __pascal GEODESETGENERALPATCHPATH();
Boolean __pascal GEODESETLANGUAGEPATCHPATH();
Boolean __pascal GEODESETLANGUAGESTANDARDPATH(word stdPath);
void __pascal GEODESETUIDATA(GeodeHandle gh, word data);
MemHandle __pascal GEODESNATCHRESOURCE(FileHandle file, word resNum, word resOffset);
GeodeHandle __pascal GEODEUSEDRIVER(const char *name, word protoMajor, word protoMinor, GeodeLoadError *err);
GeodeHandle __pascal GEODEUSELIBRARY(const char *name, word protoMajor, word protoMinor, GeodeLoadError *err);
MACRO_DRIVER_EXT GEODE_MAX_DEVICE_NAME_LENGTH;
MACRO_GEODE GEODE_NAME_EXT_SIZE;
MACRO_GEODE GEODE_NAME_SIZE;
$BA8846BAD6ACFF8D252C4AB2697E5C35 GEODE_TYPE_APPLICATION;
$BA8846BAD6ACFF8D252C4AB2697E5C35 GEODE_TYPE_DRIVER;
$BA8846BAD6ACFF8D252C4AB2697E5C35 GEODE_TYPE_LIBRARY;
word __pascal GEOS_TOLOWER(wchar ch);
word __pascal GEOS_TOUPPER(wchar ch);
word __pascal GETTOKENFORPOSITION(optr object, word runOffset, dword *position);
MACRO_GET GET_FIRST;
MACRO_GET GET_LAST;
$2032E0F0CFA3E21E1117726C9940E06D GET_METHOD;
$6E8BC7FDB541C5AB02DA93DFCDA51EF6 GE_END_OF_SONG;
$6E8BC7FDB541C5AB02DA93DFCDA51EF6 GE_NO_EVENT;
$6E8BC7FDB541C5AB02DA93DFCDA51EF6 GE_SEND_NOTIFICATION;
$6E8BC7FDB541C5AB02DA93DFCDA51EF6 GE_SET_PRIORITY;
$6E8BC7FDB541C5AB02DA93DFCDA51EF6 GE_SET_TEMPO;
$6E8BC7FDB541C5AB02DA93DFCDA51EF6 GE_V_SEMAPHORE;
MACRO_GFF GFF_DETACHING;
MACRO_GFF GFF_HAS_DEFAULT_LAUNCHER;
MACRO_GFF GFF_LOAD_BITMAP;
MACRO_GFF GFF_LOAD_DEFAULT_LAUNCHER_WHEN_NEXT_PROCESS_EXITS;
MACRO_GFF GFF_NEEDS_WORKSPACE_MENU;
MACRO_GFF GFF_NEED_DEFAULT_LAUNCHER;
MACRO_GFF GFF_QUIT_ON_CLOSE;
MACRO_GFF GFF_RESTORING_APPS;
MACRO_GFHF GFHF_DBCS;
MACRO_GFHF GFHF_HIDDEN;
MACRO_GFHF GFHF_NOTES;
MACRO_GFHF GFHF_SHARED_MULTIPLE;
MACRO_GFHF GFHF_SHARED_SINGLE;
MACRO_FILE_NO GFHF_TEMPLATE;
MACRO_GFHF GFHF_UNREAD;
MACRO_GFH GFH_NOTICE_SIZE;
$D00CC554A099D4E54C40A499600BD316 GFMI_ABOVE_BOX;
$D00CC554A099D4E54C40A499600BD316 GFMI_ABOVE_BOX_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_ACCENT;
$D00CC554A099D4E54C40A499600BD316 GFMI_ACCENT_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_ASCENT;
$D00CC554A099D4E54C40A499600BD316 GFMI_ASCENT_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_AVERAGE_WIDTH;
$D00CC554A099D4E54C40A499600BD316 GFMI_AVERAGE_WIDTH_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_BASELINE;
$D00CC554A099D4E54C40A499600BD316 GFMI_BASELINE_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_BELOW_BOX;
$D00CC554A099D4E54C40A499600BD316 GFMI_BELOW_BOX_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_DEFAULT_CHAR;
$D00CC554A099D4E54C40A499600BD316 GFMI_DESCENT;
$D00CC554A099D4E54C40A499600BD316 GFMI_DESCENT_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_DRIVER;
$D00CC554A099D4E54C40A499600BD316 GFMI_FIRST_CHAR;
$D00CC554A099D4E54C40A499600BD316 GFMI_HEIGHT;
$D00CC554A099D4E54C40A499600BD316 GFMI_HEIGHT_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_KERN_COUNT;
$D00CC554A099D4E54C40A499600BD316 GFMI_LAST_CHAR;
$D00CC554A099D4E54C40A499600BD316 GFMI_LEADING;
$D00CC554A099D4E54C40A499600BD316 GFMI_LEADING_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_MAX_ADJUSTED_HEIGHT;
$D00CC554A099D4E54C40A499600BD316 GFMI_MAX_ADJUSTED_HEIGHT_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_MAX_WIDTH;
$D00CC554A099D4E54C40A499600BD316 GFMI_MAX_WIDTH_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_MEAN;
$D00CC554A099D4E54C40A499600BD316 GFMI_MEAN_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_STRIKE_POS;
$D00CC554A099D4E54C40A499600BD316 GFMI_STRIKE_POS_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_UNDER_POS;
$D00CC554A099D4E54C40A499600BD316 GFMI_UNDER_POS_ROUNDED;
$D00CC554A099D4E54C40A499600BD316 GFMI_UNDER_THICKNESS;
$D00CC554A099D4E54C40A499600BD316 GFMI_UNDER_THICKNESS_ROUNDED;
MACRO_GFSEF GFSEF_DISABLED;
MACRO_GFSEF GFSEF_ERROR;
MACRO_GFSEF GFSEF_NO_ENTRIES;
MACRO_GFSEF GFSEF_OPEN;
MACRO_GFSEF GFSEF_PARENT_DIR;
MACRO_GFSEF GFSEF_READ_ONLY;
MACRO_GFSEF GFSEF_SHARED_MULTIPLE;
MACRO_GFSEF GFSEF_SHARED_SINGLE;
MACRO_GFSEF GFSEF_TEMPLATE;
MACRO_GFSET GFSEF_TYPE;
MACRO_GFSEF GFSEF_TYPE_OFFSET;
MACRO_GFSET GFSET_FILE;
MACRO_GFSET GFSET_SUBDIR;
MACRO_GFSET GFSET_VOLUME;
MACRO_GFSSUIC GFSSUIC_ADD_FEATURES_IF_APP_FEATURE_ON;
MACRO_GFSSUIC GFSSUIC_ADD_FEATURES_IF_APP_LEVEL;
MACRO_GFSSUIC GFSSUIC_SET_FEATURES_IF_APP_FEATURE_OFF;
MACRO_GFSSUIC GFSSUIC_SET_FEATURES_IF_APP_FEATURE_ON;
MACRO_GFSSUIC GFSSUIC_SET_FEATURES_IF_APP_LEVEL;
MACRO_GFST GFST_ALL_FILES;
MACRO_GFST GFST_DOCUMENTS;
MACRO_GFST GFST_EXECUTABLES;
MACRO_GFST GFST_NON_GEOS_FILES;
MACRO_GFTMF GFTMF_EXACT_MATCH;
MACRO_GFTMF GFTMF_SKIP_THIS_NODE;
$753EECC1378132035188572323486D44 GFT_DATA;
$753EECC1378132035188572323486D44 GFT_DIRECTORY;
$753EECC1378132035188572323486D44 GFT_EXECUTABLE;
$753EECC1378132035188572323486D44 GFT_LINK;
$753EECC1378132035188572323486D44 GFT_NOT_GEOS_FILE;
$753EECC1378132035188572323486D44 GFT_VM;
MACRO_GGAD GGAD_FIRST_RECIPIENT;
MACRO_FUTURE_AREA GGAD_MULTIPLE_END_COLORS;
MACRO_GGAD GGAD_MULTIPLE_INTERVALS;
MACRO_GGAD GGAD_MULTIPLE_TYPES;
MACRO_GFSSUIC GGA_COMPOSITE;
$5AD4E179393241D800F378B6AB37A656 GGIT_ATTRIBUTES;
$5AD4E179393241D800F378B6AB37A656 GGIT_GEODE_PROTOCOL;
$5AD4E179393241D800F378B6AB37A656 GGIT_GEODE_REF_COUNT;
$5AD4E179393241D800F378B6AB37A656 GGIT_GEODE_RELEASE;
$5AD4E179393241D800F378B6AB37A656 GGIT_PERM_NAME_AND_EXT;
$5AD4E179393241D800F378B6AB37A656 GGIT_PERM_NAME_ONLY;
$5AD4E179393241D800F378B6AB37A656 GGIT_TOKEN_ID;
$5AD4E179393241D800F378B6AB37A656 GGIT_TYPE;
$A42602A6880D3C60080093A44C74C3CA GGSEC_HOTSPOT;
MACRO_GIA GIA_INITIATED_VIA_USER_DO_DIALOG;
MACRO_GIA_MODAL GIA_MODAL;
MACRO_GIV GIA_NOT_USER_INITIATABLE;
MACRO_GIA_SYS GIA_SYS_MODAL;
MACRO_GIGBT GIGBT_EXCLUSIVE;
MACRO_GIGBT GIGBT_EXCLUSIVE_NONE;
MACRO_GIGBT GIGBT_EXTENDED_SELECTION;
MACRO_GIGBT GIGBT_NON_EXCLUSIVE;
MACRO_GIGSF GIGSF_INDETERMINATE;
MACRO_GIGSF GIGSF_MODIFIED;
MACRO_GIGBT GIGS_NONE;
MACRO_GIGT GIGT_EDIT_MENU;
MACRO_GIGT GIGT_FILE_MENU;
MACRO_GIGT GIGT_HELP_MENU;
MACRO_GIGT GIGT_OPTIONS_MENU;
MACRO_GIGT GIGT_PRINT_GROUP;
MACRO_GIGT GIGT_VIEW_MENU;
MACRO_GIGT GIGT_WINDOW_MENU;
MACRO_GIT GIT_AFFIRMATION;
MACRO_GIT GIT_COMMAND;
MACRO_GIT_FLASHING GIT_FLASHING;
MACRO_GIT GIT_MULTIPLE_RESPONSE;
MACRO_GIT GIT_NOTIFICATION;
MACRO_GIT GIT_ORGANIZATIONAL;
$DAD790FDB2B58BEEDE292F7C1062D012 GIT_PEN_POS;
$DAD790FDB2B58BEEDE292F7C1062D012 GIT_PRIVATE_DATA;
MACRO_GIT GIT_PROGRESS;
MACRO_GIT GIT_PROPERTIES;
$DAD790FDB2B58BEEDE292F7C1062D012 GIT_WINDOW;
MACRO_GIV GIV_CONTROL_GROUP;
MACRO_GIV GIV_DIALOG;
MACRO_GIV GIV_NO_PREFERENCE;
MACRO_GIV GIV_POPOUT;
MACRO_GIV GIV_POPUP;
MACRO_GIV GIV_SUB_GROUP;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_ATTRIBUTE_MISMATCH;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_DISK_TOO_FULL;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_DRIVER_INIT_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_FIELD_DETACHING;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_FILE_NOT_FOUND;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_FILE_READ_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_INSUFFICIENT_HEAP_SPACE;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_LAST_GEODE_LOAD_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_LIBRARY_INIT_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_LIBRARY_LOAD_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_LIBRARY_NOT_FOUND;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_LIBRARY_PROTOCOL_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_MEMORY_ALLOCATION_ERROR;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_NOT_GEOS_EXECUTABLE_FILE;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_NOT_GEOS_FILE;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_NOT_MULTI_LAUNCHABLE;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_PROTOCOL_IMPORTER_TOO_OLD;
$13BEEE46ACD3B01C5148791CEAF659A5 GLE_PROTOCOL_IMPORTER_TOO_RECENT;
$27E8C610FAD22D8691545344EDA4017F GMDFID_ADDRESS_CARD;
$27E8C610FAD22D8691545344EDA4017F GMDFID_APPOINTMENT;
$27E8C610FAD22D8691545344EDA4017F GMDFID_DOCUMENT;
$27E8C610FAD22D8691545344EDA4017F GMDFID_FAX_FILE;
$27E8C610FAD22D8691545344EDA4017F GMDFID_FOAM_FILE;
$27E8C610FAD22D8691545344EDA4017F GMDFID_INK;
$27E8C610FAD22D8691545344EDA4017F GMDFID_INVALID;
$27E8C610FAD22D8691545344EDA4017F GMDFID_OBEX;
$27E8C610FAD22D8691545344EDA4017F GMDFID_SHORT_MESSAGE;
$27E8C610FAD22D8691545344EDA4017F GMDFID_STREAM_GSTRING;
$27E8C610FAD22D8691545344EDA4017F GMDFID_TEXT_ARRAY;
$27E8C610FAD22D8691545344EDA4017F GMDFID_TEXT_CHAIN;
$27E8C610FAD22D8691545344EDA4017F GMDFID_TEXT_FILE;
$27E8C610FAD22D8691545344EDA4017F GMDFID_TRANSFER_ITEM;
$27E8C610FAD22D8691545344EDA4017F GMDFID_VM_COMPOSITE;
$27E8C610FAD22D8691545344EDA4017F GMDFID_VM_GSTRING;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_CELL_MODEM;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_DATA_MODEM;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_FAX_MODEM;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_INFRARED;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_INVALID;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_LOOPBACK;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_NETWORK;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_PARALLEL_PORT;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_PRINTER;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_SERIAL_CABLE;
$CAACF5457222C6E57B1C9D5BC45EFBA2 GMID_SM;
$FF2AB1DACD3E74CA8F2D6CE9C2BDB245 GMSID_FILE;
$FF2AB1DACD3E74CA8F2D6CE9C2BDB245 GMSID_VM_TREE;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_FAX_SEND;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_LOCAL;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_NET_LIBRARY;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_OBEX;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_PRINT_SPOOLER;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_SKELETON;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_SM;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_SMTP;
$FC9B086B3907F97114104B7DEF00EAF5 GMTID_ZOOMER;
MACRO_GMT GMT_BUFFER;
MACRO_GMT GMT_ENUM;
MACRO_GOAACF GOAACF_MM_AND;
MACRO_GOICF_DEFAULT GOAACF_MM_CLEAR;
MACRO_GOAACF GOAACF_MM_COPY;
MACRO_GOAACF GOAACF_MM_INVERT;
MACRO_GOAACF GOAACF_MM_NOP;
MACRO_GOAACF GOAACF_MM_OR;
MACRO_GOAACF GOAACF_MM_SET;
MACRO_GOAACF GOAACF_MM_XOR;
MACRO_GOAACF GOAACF_TRANSPARENCY;
MACRO_GOAAC GOAAC_DEFAULT_FEATURES;
MACRO_GOAAC GOAAC_DEFAULT_TOOLBOX_FEATURES;
$2C172900036D0F598CF971AC939F175C GOAAET_BASE;
$2C172900036D0F598CF971AC939F175C GOAAET_GRADIENT;
MACRO_GOAAIR GOAAIR_TRANSPARENT;
MACRO_GOACF GOACF_CHORD_TYPE;
MACRO_GOACF GOACF_END_ANGLE;
MACRO_GOACF GOACF_PIE_TYPE;
MACRO_GOACF GOACF_START_ANGLE;
MACRO_GOADCF GOADCF_ALIGN_BOTTOM;
MACRO_GOADCF GOADCF_ALIGN_CENTER_HORIZONTALLY;
MACRO_GOADCF GOADCF_ALIGN_CENTER_VERTICALLY;
MACRO_GOADCF GOADCF_ALIGN_HEIGHT;
MACRO_GOADCF GOADCF_ALIGN_LEFT;
MACRO_GOADCF GOADCF_ALIGN_RIGHT;
MACRO_GOADCF GOADCF_ALIGN_TOP;
MACRO_GOADCF GOADCF_ALIGN_WIDTH;
MACRO_GOADCF GOADCF_DISTRIBUTE_BOTTOM;
MACRO_GOADCF GOADCF_DISTRIBUTE_CENTER_HORIZONTALLY;
MACRO_GOADCF GOADCF_DISTRIBUTE_CENTER_VERTICALLY;
MACRO_GOADCF GOADCF_DISTRIBUTE_HEIGHT;
MACRO_GOADCF GOADCF_DISTRIBUTE_LEFT;
MACRO_GOADCF GOADCF_DISTRIBUTE_RIGHT;
MACRO_GOADCF GOADCF_DISTRIBUTE_TOP;
MACRO_GOADCF GOADCF_DISTRIBUTE_WIDTH;
MACRO_GOAE GOAE_GAE;
MACRO_GOAE GOAE_IGNORING_CONSTRAIN;
MACRO_GOAE GOAE_RULER_CONSTRAIN;
MACRO_GOAF GOAF_DONT_COPY_LOCKS;
MACRO_GOAF GOAF_HAS_PASTE_INSIDE_CHILDREN;
MACRO_GOAF GOAF_INSERT_DELETE_DELETE_ALLOWED;
MACRO_GOAF GOAF_INSERT_DELETE_MOVE_ALLOWED;
MACRO_GOAF GOAF_INSERT_DELETE_RESIZE_ALLOWED;
MACRO_GOAF GOAF_INSTRUCTION;
MACRO_GOAF GOAF_MULTIPLICATIVE_RESIZE;
MACRO_GOAF GOAF_PASTE_INSIDE;
MACRO_GOAM GOAM_ACTION_ACTIVATED;
MACRO_GOAM GOAM_ACTION_HAPPENING;
MACRO_GOAM GOAM_ACTION_PENDING;
MACRO_GOAM GOAM_CHOOSE;
MACRO_GOAM GOAM_CREATE;
MACRO_GOAM GOAM_MOVE;
MACRO_GOAM GOAM_RESIZE;
MACRO_GOAM GOAM_ROTATE;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_ATTRED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_CREATED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_DELETED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_MOVED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_NULL;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_PASTED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_RESIZED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_ROTATED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_SELECTED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_SKEWED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_SPEC_MODIFIED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_TRANSFORMED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_UNSELECTED;
$70DA3748760AEBB3D3CF6C39FC632258 GOANT_WRAP_CHANGED;
MACRO_GOATGCF GOATGCF_ALIGN_TO_GRID;
MACRO_GOATGC GOATGC_DEFAULT_FEATURES;
MACRO_GOATGC GOATGC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOArcC GOArcC_DEFAULT_FEATURES;
MACRO_GOArcC GOArcC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOBAAD GOBAAD_FIRST_RECIPIENT;
MACRO_GOBAAD GOBAAD_MULTIPLE_BACKGROUND_COLORS;
MACRO_GOBAAD GOBAAD_MULTIPLE_COLORS;
MACRO_GOBAAD GOBAAD_MULTIPLE_DRAW_MODES;
MACRO_GOBAAD GOBAAD_MULTIPLE_ELEMENT_TYPES;
MACRO_GOBAAD GOBAAD_MULTIPLE_GRADIENT_END_COLORS;
MACRO_GOBAAD GOBAAD_MULTIPLE_GRADIENT_INTERVALS;
MACRO_GOBAAD GOBAAD_MULTIPLE_GRADIENT_TYPES;
MACRO_GOBAAD GOBAAD_MULTIPLE_INFOS;
MACRO_GOBAAD GOBAAD_MULTIPLE_MASKS;
MACRO_GOBAAD GOBAAD_MULTIPLE_PATTERNS;
MACRO_GOBAAD GOBAAD_MULTIPLE_STYLE_ELEMENTS;
MACRO_GOBAGOF GOBAGOF_DRAW_LIST_POSITION;
MACRO_GOBAGOF GOBAGOF_REFERENCE;
MACRO_GOBAGOF GOBAGOF_REFERENCE_OFFSET;
MACRO_GOBLAD GOBLAD_ARROWHEAD_FILLED;
MACRO_GOBLAD GOBLAD_ARROWHEAD_FILL_WITH_AREA_ATTRIBUTES;
MACRO_GOBLAD GOBLAD_ARROWHEAD_ON_END;
MACRO_GOBLAD GOBLAD_ARROWHEAD_ON_START;
MACRO_GOBLAD GOBLAD_FIRST_RECIPIENT;
MACRO_GOBLAD GOBLAD_MULTIPLE_ARROWHEAD_ANGLES;
MACRO_GOBLAD GOBLAD_MULTIPLE_ARROWHEAD_LENGTHS;
MACRO_GOBLAD GOBLAD_MULTIPLE_COLORS;
MACRO_GOBLAD GOBLAD_MULTIPLE_ELEMENT_TYPES;
MACRO_GOBLAD GOBLAD_MULTIPLE_ENDS;
MACRO_GOBLAD GOBLAD_MULTIPLE_JOINS;
MACRO_GOBLAD GOBLAD_MULTIPLE_MASKS;
MACRO_GOBLAD GOBLAD_MULTIPLE_MITER_LIMITS;
MACRO_GOBLAD GOBLAD_MULTIPLE_STYLES;
MACRO_GOBLAD GOBLAD_MULTIPLE_STYLE_ELEMENTS;
MACRO_GOBLAD GOBLAD_MULTIPLE_WIDTHS;
MACRO_GOCCF_ELLIPSE GOCCF_ARC;
MACRO_GOCCF GOCCF_CONVERT_FROM_GRAPHIC;
MACRO_GROBJ_DUPLICATE_CONTROL GOCCF_CONVERT_TO_BITMAP;
MACRO_GOCCF GOCCF_CONVERT_TO_GRAPHIC;
MACRO_GOCCF_ELLIPSE GOCCF_EIGHT_POINTED_STAR;
MACRO_GOCCF_ELLIPSE GOCCF_ELLIPSE;
MACRO_GOCCF_ELLIPSE GOCCF_FIVE_POINTED_STAR;
MACRO_GOCCF_ELLIPSE GOCCF_HEXAGON;
MACRO_GOCCF_ELLIPSE GOCCF_LINE;
MACRO_GOCCF_ELLIPSE GOCCF_OCTOGON;
MACRO_GROBJ_CONVERT_CONTROL GOCCF_RECTANGLE;
MACRO_GOCCF_ELLIPSE GOCCF_ROUNDED_RECTANGLE;
MACRO_GOCCF_ELLIPSE GOCCF_TRIANGLE;
MACRO_GOCDCF GOCDCF_MOVE;
MACRO_GOCSC GOCDCF_REPETITIONS;
MACRO_GOCDCF GOCDCF_ROTATE;
MACRO_GOCDCF GOCDCF_SCALE;
MACRO_GOCDCF GOCDCF_SKEW;
MACRO_GOCDC GOCDC_DEFAULT_FEATURES;
MACRO_GODMC GOCSCF_NUM_POLYGON_SIDES;
MACRO_GOCSCF GOCSCF_NUM_STAR_POINTS;
MACRO_GOCSCF GOCSCF_POLYGON_RADIUS;
MACRO_GOCSCF GOCSCF_STAR_RADII;
MACRO_GOCSC GOCSC_DEFAULT_FEATURES;
MACRO_GODACF GODACF_SET_DEFAULT_ATTRIBUTES;
MACRO_GODAC GODAC_DEFAULT_FEATURES;
MACRO_GODAC_DEFAULT GODAC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GODCF GODCF_DUPLICATE;
MACRO_GODCF GODCF_DUPLICATE_IN_PLACE;
MACRO_GODCTF GODCTF_DUPLICATE;
MACRO_GODCTF GODCTF_DUPLICATE_IN_PLACE;
MACRO_GODF GODF_DRAW_CLIP_ONLY;
MACRO_GODF GODF_DRAW_INSTRUCTIONS;
MACRO_GODF GODF_DRAW_OBJECTS_ONLY;
MACRO_GODF GODF_DRAW_QUICK_VIEW;
MACRO_GODF GODF_DRAW_SELECTED_OBJECTS_ONLY;
MACRO_GODF GODF_DRAW_WITH_INCREASED_RESOLUTION;
MACRO_GODF GODF_DRAW_WRAP_TEXT_AROUND_ONLY;
MACRO_GODF GODF_DRAW_WRAP_TEXT_INSIDE_ONLY;
MACRO_GODF GODF_PRINT_INSTRUCTIONS;
MACRO_GODMCF GODMCF_DRAFT_MODE;
MACRO_GODMC GODMC_DEFAULT_FEATURES;
MACRO_GOLC GODepthCF_BRING_TO_FRONT;
MACRO_GODepthCF GODepthCF_SEND_TO_BACK;
MACRO_GODepthCF GODepthCF_SHUFFLE_DOWN;
MACRO_GODepthCF GODepthCF_SHUFFLE_UP;
MACRO_GODepthC GODepthC_DEFAULT_FEATURES;
MACRO_GODepthC_DEFAULT GODepthC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOFA GOFA_ABOUT_OPPOSITE;
MACRO_GOFA GOFA_ADJUST;
MACRO_GOFA GOFA_CONSTRAIN;
MACRO_GOFA GOFA_EXTEND;
MACRO_GOFA GOFA_FROM_CENTER;
MACRO_GOFA GOFA_RULER_HAS_SEEN_EVENT;
MACRO_GOFA GOFA_SNAP_TO;
MACRO_GOFA GOFA_VIEW_ZOOMED;
MACRO_GOFCF GOFCF_FLIP_HORIZONTALLY;
MACRO_GOFCF GOFCF_FLIP_VERTICALLY;
MACRO_GOFS GOFS_MOUSE_GRAB;
MACRO_GOFS GOFS_OPEN;
MACRO_GOFS GOFS_SYS_TARGETED;
MACRO_GOFS GOFS_TARGETED;
MACRO_GOGCF GOGCF_GROUP;
MACRO_GOGCF GOGCF_UNGROUP;
MACRO_GOGC GOGC_DEFAULT_FEATURES;
MACRO_GOGC_DEFAULT GOGC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOGFCF GOGFCF_HORIZONTAL_GRADIENT;
MACRO_GOGFCF GOGFCF_NUM_INTERVALS;
MACRO_GOGFCF GOGFCF_RADIAL_ELLIPSE_GRADIENT;
MACRO_GOGFCF GOGFCF_RADIAL_RECT_GRADIENT;
MACRO_GOGFCF GOGFCF_VERTICAL_GRADIENT;
MACRO_GOGFC GOGFC_DEFAULT_FEATURES;
$22150128E3663DED7B125D4703D8ACF2 GOGT_LEFT_TO_RIGHT;
$22150128E3663DED7B125D4703D8ACF2 GOGT_NONE;
$22150128E3663DED7B125D4703D8ACF2 GOGT_RADIAL_ELLIPSE;
$22150128E3663DED7B125D4703D8ACF2 GOGT_RADIAL_RECT;
$22150128E3663DED7B125D4703D8ACF2 GOGT_TOP_TO_BOTTOM;
MACRO_GOHCF GOHCF_INVISIBLE_HANDLES;
MACRO_GOHCF GOHCF_LARGE_HANDLES;
MACRO_GOHCF GOHCF_MEDIUM_HANDLES;
MACRO_GOHCF GOHCF_SMALL_HANDLES;
MACRO_GOHC GOHC_DEFAULT_FEATURES;
MACRO_GOHC GOHC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOTransformC GOHSCF_HIDE;
MACRO_GOHSCF GOHSCF_SHOW;
MACRO_GOHSCF GOHSC_DEFAULT_FEATURES;
MACRO_GOHS GOHS_HANDLE_BOTTOM;
MACRO_GOHS GOHS_HANDLE_LEFT;
MACRO_GOHS GOHS_HANDLE_RIGHT;
MACRO_GOHS GOHS_HANDLE_TOP;
MACRO_GOICF_DEFAULT GOICF_DEFAULT_FEATURES;
MACRO_GOICF GOICF_DELETE;
MACRO_GOICF GOICF_DRAW;
MACRO_GOICF GOICF_MAKE_EDITABLE;
MACRO_GOICF GOICF_MAKE_UNEDITABLE;
MACRO_GOICF GOICF_PRINT;
MACRO_GOIRS GOIRS_IGNORE_RECT;
MACRO_GOIRS GOIRS_IGNORE_TEMP;
MACRO_GOIRS GOIRS_XOR_CHECK;
MACRO_GOLACF GOLACF_ARROWHEAD_TYPE;
MACRO_GOLACF GOLACF_ARROWHEAD_WHICH_END;
MACRO_GOLACF GOLACF_STYLE;
MACRO_GOLACF GOLACF_WIDTH_INDEX;
MACRO_GOLACF GOLACF_WIDTH_VALUE;
MACRO_GOLACTF GOLACTF_STYLE;
MACRO_GOLACTF GOLACTF_WIDTH_INDEX;
MACRO_GOLAC GOLAC_DEFAULT_FEATURES;
MACRO_GOLAC_DEFAULT GOLAC_DEFAULT_TOOLBOX_FEATURES;
$BE811DE6E44980473EC4740E24C9BC7F GOLAET_BASE;
MACRO_GOLAIR GOLAIR_ARROWHEAD_FILLED;
MACRO_GOLAIR GOLAIR_ARROWHEAD_FILL_WITH_AREA_ATTRIBUTES;
MACRO_GOLAIR GOLAIR_ARROWHEAD_ON_END;
MACRO_LINE_ATTR_TYPE GOLAIR_ARROWHEAD_ON_START;
MACRO_GROBJ_CREATE_CONTROL GOLC_DEFAULT_FEATURES;
MACRO_GOLC GOLC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOL GOL_ATTRIBUTE;
MACRO_GOL GOL_COPY;
MACRO_GOL GOL_DELETE;
MACRO_GOL GOL_DRAW;
MACRO_GOL GOL_EDIT;
MACRO_GOL GOL_GROUP;
MACRO_GOL GOL_LOCK;
MACRO_GOL GOL_MOVE;
MACRO_GOL GOL_PRINT;
MACRO_GOL GOL_RESIZE;
MACRO_GOL GOL_ROTATE;
MACRO_GOL GOL_SELECT;
MACRO_GOL GOL_SHOW;
MACRO_GOL GOL_SKEW;
MACRO_GOL GOL_UNGROUP;
MACRO_GOL GOL_WRAP;
MACRO_GOMOF GOMOF_DRAW_BG;
MACRO_GOMOF GOMOF_DRAW_FG_AREA;
MACRO_GOMOF GOMOF_DRAW_FG_LINE;
MACRO_GOMOF GOMOF_GET_DWF_SELECTION_HANDLE_BOUNDS;
MACRO_GOMOF GOMOF_INVALIDATE;
MACRO_GOMOF GOMOF_INVALIDATE_AREA;
MACRO_GOMOF GOMOF_INVALIDATE_LINE;
MACRO_GOMOF GOMOF_NOTIFY_ACTION;
MACRO_GOMOF GOMOF_SEND_UI_NOTIFICATION;
MACRO_GOMOF GOMOF_SPECIAL_RESIZE_CONSTRAIN;
$87D4EC0DCB98396977B2BC5B3B8102D8 GOMRF_BOUNDS;
$87D4EC0DCB98396977B2BC5B3B8102D8 GOMRF_HANDLE;
$87D4EC0DCB98396977B2BC5B3B8102D8 GOMRF_NOTHING;
MACRO_GONCF GONCF_CUSTOM_MOVE;
MACRO_GONCF GONCF_NUDGE_DOWN;
MACRO_GOLAC_DEFAULT GONCF_NUDGE_LEFT;
MACRO_GONCF GONCF_NUDGE_RIGHT;
MACRO_GONCF GONCF_NUDGE_UP;
MACRO_GOOACF GOOACF_DONT_WRAP;
MACRO_GOOACF GOOACF_INSERT_OR_DELETE_DELETE;
MACRO_GOOACF GOOACF_INSERT_OR_DELETE_MOVE;
MACRO_GOOACF GOOACF_INSERT_OR_DELETE_RESIZE;
MACRO_GOOACF GOOACF_INSTRUCTIONS;
MACRO_GOOACF GOOACF_WRAP_AROUND_RECT;
MACRO_GOOACF GOOACF_WRAP_INSIDE;
MACRO_GOOACF GOOACF_WRAP_TIGHTLY;
MACRO_GOOAC_DEFAULT GOOAC_DEFAULT_FEATURES;
MACRO_GOOAC GOOAC_INSERT_OR_DELETE_FEATURES;
MACRO_GOOAC GOOAC_WRAP_FEATURES;
MACRO_GOOF GOOF_ADDED_TO_BODY;
MACRO_GOOF GOOF_ATTRIBUTE_MANAGER;
MACRO_GOOF GOOF_FLOATER;
MACRO_GOOF GOOF_GROBJ_INVALID;
MACRO_GOOF GOOF_HAS_ACTION_NOTIFICATION;
MACRO_GOOF GOOF_HAS_UNBALANCED_PARENT_DIMENSIONS;
MACRO_GOOF GOOF_IN_GROUP;
MACRO_GOPICF GOPICF_BREAKOUT_PASTE_INSIDE;
MACRO_GODAC_DEFAULT GOPICF_PASTE_INSIDE;
MACRO_GOPICTF GOPICTF_BREAKOUT_PASTE_INSIDE;
MACRO_GOPICF GOPICTF_PASTE_INSIDE;
MACRO_GOPICTF GOPIC_DEFAULT_FEATURES;
MACRO_GOPIC GOPIC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOPIS GOPIS_CREATE;
MACRO_GOPIS GOPIS_EDIT;
MACRO_GOPIS GOPIS_MOVE;
MACRO_GOPIS GOPIS_NORMAL;
MACRO_GOPIS GOPIS_RESIZE_ROTATE;
MACRO_GORCF GORCF_135_DEGREES_CCW;
MACRO_GORCF GORCF_135_DEGREES_CW;
MACRO_GORCF GORCF_180_DEGREES;
MACRO_GORCF GORCF_45_DEGREES_CCW;
MACRO_GORCF GORCF_45_DEGREES_CW;
MACRO_GORCF GORCF_90_DEGREES_CCW;
MACRO_GORCF GORCF_90_DEGREES_CW;
MACRO_GORCF GORCF_CUSTOM_ROTATION;
MACRO_GOSCF GOSCF_CUSTOM_SCALE;
MACRO_GOSCF_LEFT GOSCF_CUSTOM_SKEW;
MACRO_GOSCF GOSCF_DOUBLE_HEIGHT;
MACRO_GOSCF GOSCF_DOUBLE_WIDTH;
MACRO_GOSCF_LEFT GOSCF_DOWN;
MACRO_GOSCF GOSCF_HALF_HEIGHT;
MACRO_GOSCF GOSCF_HALF_WIDTH;
MACRO_GOSCF_LEFT GOSCF_LEFT;
MACRO_GOSCF_LEFT GOSCF_RIGHT;
MACRO_GOSCF_LEFT GOSCF_UP;
MACRO_GOTCF_PTR GOTCF_ARC;
MACRO_GOTCF_PTR GOTCF_ELLIPSE;
MACRO_GOTCF_PTR GOTCF_LINE;
MACRO_GOTCF_PTR GOTCF_POLYCURVE;
MACRO_GOTCF_PTR GOTCF_POLYLINE;
MACRO_GOTCF_PTR GOTCF_PTR;
MACRO_GOTCF_PTR GOTCF_RECT;
MACRO_GOTCF_PTR GOTCF_ROTATE_PTR;
MACRO_GOTCF_PTR GOTCF_ROUNDED_RECT;
MACRO_GOTCF_PTR GOTCF_SPLINE;
MACRO_GOTCF_PTR GOTCF_TEXT;
MACRO_GOTCF GOTCF_UNTRANSFORM;
MACRO_GOTCF_PTR GOTCF_ZOOM;
MACRO_GOTC GOTC_DEFAULT_FEATURES;
MACRO_GOTC_DEFAULT GOTC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GOTDF GOTDF_VAR_DATA;
MACRO_GOTM GOTM_EDITED;
MACRO_GOTM GOTM_EDIT_INDICATOR_DRAWN;
MACRO_GOTM GOTM_HANDLES_DRAWN;
MACRO_GOTM GOTM_SELECTED;
MACRO_GOTM GOTM_SPRITE_DRAWN;
MACRO_GOTM GOTM_SPRITE_DRAWN_HI_RES;
MACRO_GOTM GOTM_SYS_TARGET;
MACRO_GOTM GOTM_TEMP_HANDLES;
MACRO_GOTransformC GOTransformC_DEFAULT_FEATURES;
MACRO_GOUINT GOUINT_AREA;
MACRO_GOUINT GOUINT_GROBJ_SELECT;
MACRO_GOUINT GOUINT_LINE;
MACRO_GOUINT GOUINT_SELECT;
MACRO_GOUINT GOUINT_STYLE;
MACRO_GOUINT GOUINT_STYLE_SHEET;
MACRO_GOVGCM GOVGCM_GUARDIAN_CREATE;
MACRO_GOVGCM GOVGCM_NO_CREATE;
MACRO_GOVGCM GOVGCM_VIS_WARD_CREATE;
MACRO_GOVGF GOVGF_ALSO_UNUSED;
MACRO_GOVGF GOVGF_APPLY_OBJECT_TO_VIS_TRANSFORM;
MACRO_GOVGF GOVGF_CAN_EDIT_EXISTING_OBJECTS;
MACRO_GOVGF GOVGF_LARGE;
MACRO_GOVGF GOVGF_UNUSED;
MACRO_VWMET GOVGF_VIS_BOUNDS_HAVE_CHANGED;
$FF5DF312F068DDB94B2021990FE7BABB GOWTT_DONT_WRAP;
$FF5DF312F068DDB94B2021990FE7BABB GOWTT_WRAP_AROUND_RECT;
$FF5DF312F068DDB94B2021990FE7BABB GOWTT_WRAP_AROUND_TIGHTLY;
$FF5DF312F068DDB94B2021990FE7BABB GOWTT_WRAP_INSIDE;
MACRO_GO GO_SHOW_GRID;
MACRO_GO GO_SNAP_TO_GRID;
MACRO_GPCF GPCF_GOTO_PAGE;
MACRO_GPCF GPCF_NEXT_PAGE;
MACRO_GPCF GPCF_PREVIOUS_PAGE;
MACRO_GPCTF GPCTF_GOTO_PAGE;
MACRO_GPCTF GPCTF_NEXT_PAGE;
MACRO_GPCTF GPCTF_PREVIOUS_PAGE;
MACRO_GPC GPC_DEFAULT_FEATURES;
MACRO_GPC_DEFAULT GPC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GPICF GPICF_CHAR_TABLE;
MACRO_GPICF GPICF_CHAR_TABLE_CUSTOM;
MACRO_GPICF GPICF_CHAR_TABLE_INTERNATIONAL;
MACRO_GPICF GPICF_CHAR_TABLE_MATH;
MACRO_GPICF GPICF_CHAR_TABLE_SYMBOLS;
MACRO_GPICF GPICF_HWR_ENTRY_AREA;
MACRO_GPC_DEFAULT GPICF_KEYBOARD;
MACRO_GPICTF GPICTF_INITIATE;
MACRO_GPICTF GPIC_DEFAULT_FEATURES;
MACRO_GPIC GPIC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GPT GPT_ACTIVE;
$90E002FB11625EF7CF0797170E6D5996 GPT_CLIP;
$90E002FB11625EF7CF0797170E6D5996 GPT_CURRENT;
MACRO_GPT GPT_DEFAULT;
$90E002FB11625EF7CF0797170E6D5996 GPT_WIN_CLIP;
void __pascal GRAPPLYROTATION(GStateHandle gstate, WWFixedAsDWord angle);
void __pascal GRAPPLYSCALE(GStateHandle gstate, WWFixedAsDWord xScale, WWFixedAsDWord yScale);
void __pascal GRAPPLYTRANSFORM(GStateHandle gstate, const TransMatrix *tm);
void __pascal GRAPPLYTRANSLATION(GStateHandle gstate, WWFixedAsDWord xTrans, WWFixedAsDWord yTrans);
void __pascal GRAPPLYTRANSLATIONDWORD(GStateHandle gstate, sdword xTrans, sdword yTrans);
void __pascal GRBEGINPATH(GStateHandle gstate, PathCombineType params);
void __pascal GRBEGINUPDATE(GStateHandle gstate);
void __pascal GRBITBLT(GStateHandle gstate, sword sourceX, sword sourceY, sword destX, sword destY, word width, word height, BLTMode mode);
void __pascal GRBRUSHPOLYLINE(GStateHandle gstate, const Point *points, word numPoints, word brushH, word brushW);
dword __pascal GRCHARMETRICS(GStateHandle gstate, GCM_info info, word ch);
dword __pascal GRCHARWIDTH(GStateHandle gstate, word ch);
FontID __pascal GRCHECKFONTAVAILID(FontEnumFlags flags, word family, FontID id);
FontID __pascal GRCHECKFONTAVAILNAME(FontEnumFlags flags, word family, const char *name);
void __pascal GRCLEARBITMAP(GStateHandle gstate);
void __pascal GRCLOSESUBPATH(GStateHandle gstate);
void __pascal GRCOMMENT(GStateHandle gstate, const void *data, word size);
VMBlockHandle __pascal GRCOMPACTBITMAP(VMFileHandle srcFile, VMBlockHandle srcBlock, VMFileHandle destFile);
GSRetType __pascal GRCOPYGSTRING(GStateHandle source, GStateHandle dest, GSControl flags);
VMBlockHandle __pascal GRCREATEBITMAP(BMFormat initFormat, word initWidth, word initHeight, VMFileHandle vmFile, optr exposureOD, GStateHandle *bmgs);
GStateHandle __pascal GRCREATEGSTRING(Handle han, GStringType hanType, word far *vmBlock);
word __pascal GRCREATEPALETTE(GStateHandle gstate);
GStateHandle __pascal GRCREATESTATE(WindowHandle win);
void __pascal GRDELETEGSTRINGELEMENT(GStateHandle gstate, word count);
void __pascal GRDESTROYBITMAP(GStateHandle gstate, BMDestroy flags);
void __pascal GRDESTROYGSTRING(GStateHandle gstring, GStateHandle gstate, GStringKillType type);
void __pascal GRDESTROYPALETTE(GStateHandle gstate);
void __pascal GRDESTROYSTATE(GStateHandle gstate);
void __pascal GRDRAWARC(GStateHandle gstate, sword left, sword top, sword right, sword bottom, word startAngle, word endAngle, ArcCloseType closeType);
void __pascal GRDRAWARC3POINT(GStateHandle gstate, const ThreePointArcParams *params);
void __pascal GRDRAWARC3POINTTO(GStateHandle gstate, const ThreePointArcToParams *params);
void __pascal GRDRAWBITMAP(GStateHandle gstate, sword x, sword y, const Bitmap *bm, Bitmap *(__pascal *callback)(Bitmap *bm));
void __pascal GRDRAWBITMAPATCP(GStateHandle gstate, const Bitmap *bm, Bitmap *(__pascal *callback)(Bitmap *bm));
void __pascal GRDRAWCHAR(GStateHandle gstate, sword x, sword y, word ch);
void __pascal GRDRAWCHARATCP(GStateHandle gstate, word ch);
void __pascal GRDRAWCURVE(GStateHandle gstate, const Point *points);
void __pascal GRDRAWCURVETO(GStateHandle gstate, const Point *points);
void __pascal GRDRAWELLIPSE(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
GSRetType __pascal GRDRAWGSTRING(GStateHandle gstate, GStateHandle gstringToDraw, sword x, sword y, GSControl flags, word *lastElement);
GSRetType __pascal GRDRAWGSTRINGATCP(GStateHandle gstate, GStateHandle gstringToDraw, GSControl flags, word *lastElement);
void __pascal GRDRAWHLINE(GStateHandle gstate, sword x1, sword y, sword x2);
void __pascal GRDRAWHLINETO(GStateHandle gstate, sword x);
void __pascal GRDRAWHUGEBITMAP(GStateHandle gstate, sword x, sword y, VMFileHandle vmFile, VMBlockHandle vmBlk);
void __pascal GRDRAWHUGEBITMAPATCP(GStateHandle gstate, VMFileHandle vmFile, VMBlockHandle vmBlk);
void __pascal GRDRAWHUGEIMAGE(GStateHandle gstate, sword x, sword y, ImageFlags flags, VMFileHandle vmFile, VMBlockHandle vmBlk);
void __pascal GRDRAWIMAGE(GStateHandle gstate, sword x, sword y, ImageFlags flags, const Bitmap *bm);
void __pascal GRDRAWLINE(GStateHandle gstate, sword x1, sword y1, sword x2, sword y2);
void __pascal GRDRAWLINETO(GStateHandle gstate, sword x, sword y);
void __pascal GRDRAWPATH(GStateHandle gstate);
void __pascal GRDRAWPOINT(GStateHandle gstate, sword x, sword y);
void __pascal GRDRAWPOINTATCP(GStateHandle gstate);
void __pascal GRDRAWPOLYGON(GStateHandle gstate, const Point *points, word numPoints);
void __pascal GRDRAWPOLYLINE(GStateHandle gstate, const Point *points, word numPoints);
void __pascal GRDRAWRECT(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
void __pascal GRDRAWRECTTO(GStateHandle gstate, sword x, sword y);
void __pascal GRDRAWREGION(GStateHandle gstate, sword xPos, sword yPos, const Region *reg, word cxParam, word dxParam);
void __pascal GRDRAWREGIONATCP(GStateHandle gstate, const Region *reg, word axParam, word bxParam, word cxParam, word dxParam);
void __pascal GRDRAWRELARC3POINTTO(GStateHandle gstate, const ThreePointRelArcToParams *params);
void __pascal GRDRAWRELLINETO(GStateHandle gstate, WWFixedAsDWord x, WWFixedAsDWord y);
void __pascal GRDRAWROUNDRECT(GStateHandle gstate, sword left, sword top, sword right, sword bottom, word radius);
void __pascal GRDRAWROUNDRECTTO(GStateHandle gstate, sword bottom, sword right, word radius);
void __pascal GRDRAWSPLINE(GStateHandle gstate, const Point *points, word numPoints);
void __pascal GRDRAWSPLINETO(GStateHandle gstate, const Point *points, word numPoints);
void __pascal GRDRAWTEXT(GStateHandle gstate, sword x, sword y, const char *str, word size);
void __pascal GRDRAWTEXTATCP(GStateHandle gstate, const char *str, word size);
void __pascal GRDRAWVLINE(GStateHandle gstate, sword x, sword y1, sword y2);
void __pascal GRDRAWVLINETO(GStateHandle gstate, sword y);
GStateHandle __pascal GREDITBITMAP(VMFileHandle vmFile, VMBlockHandle vmBlock, optr exposureOD);
GStateHandle __pascal GREDITGSTRING(Handle vmFile, word vmBlock);
GStringErrorType __pascal GRENDGSTRING(GStateHandle gstate);
void __pascal GRENDPATH(GStateHandle gstate);
void __pascal GRENDUPDATE(GStateHandle gstate);
word __pascal GRENUMFONTS(FontEnumStruct *buffer, word size, FontEnumFlags flags, word family);
void __pascal GRESCAPE(GStateHandle gstate, word code, const void *data, word size);
void __pascal GRFILLARC(GStateHandle gstate, sword left, sword top, sword right, sword bottom, word startAngle, word endAngle, ArcCloseType closeType);
void __pascal GRFILLARC3POINT(GStateHandle gstate, const ThreePointArcParams *params);
void __pascal GRFILLARC3POINTTO(GStateHandle gstate, const ThreePointArcToParams *params);
void __pascal GRFILLBITMAP(GStateHandle gstate, sword x, sword y, const Bitmap *bm, Bitmap *(__pascal *callback)(Bitmap *bm));
void __pascal GRFILLBITMAPATCP(GStateHandle gstate, const Bitmap *bm, Bitmap *(__pascal *callback)(Bitmap *bm));
void __pascal GRFILLELLIPSE(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
void __pascal GRFILLHUGEBITMAP(GStateHandle gstate, sword x, sword y, VMFileHandle vmFile, VMBlockHandle vmBlk);
void __pascal GRFILLHUGEBITMAPATCP(GStateHandle gstate, VMFileHandle vmFile, VMBlockHandle vmBlk);
void __pascal GRFILLPATH(GStateHandle gstate, RegionFillRule rule);
void __pascal GRFILLPOLYGON(GStateHandle gstate, RegionFillRule windingRule, const Point *points, word numPoints);
void __pascal GRFILLRECT(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
void __pascal GRFILLRECTTO(GStateHandle gstate, sword x, sword y);
void __pascal GRFILLROUNDRECT(GStateHandle gstate, sword left, sword top, sword right, sword bottom, word radius);
void __pascal GRFILLROUNDRECTTO(GStateHandle gstate, sword right, sword bottom, word radius);
Boolean __pascal GRFINDNEARESTPOINTSIZE(FontID id, dword sizeSHL16, word styles, word *styleFound, dword *sizeFoundSHL16);
dword __pascal GRFONTMETRICS(GStateHandle gstate, GFM_info info);
RGBColorAsDWord __pascal GRGETAREACOLOR(GStateHandle gstate);
word __pascal GRGETAREACOLORMAP(GStateHandle gstate);
word __pascal GRGETAREAMASK(GStateHandle gstate, DrawMask *dm);
GraphicPattern __pascal GRGETAREAPATTERN(GStateHandle gstate, const MemHandle *customPattern, word *customSize);
MemHandle __pascal GRGETBITMAP(GStateHandle gstate, sword x, sword y, word width, word height, XYSize *sizeCopied);
word __pascal GRGETBITMAPMODE(GStateHandle gstate);
XYValueAsDWord __pascal GRGETBITMAPRES(GStateHandle gstate);
XYValueAsDWord __pascal GRGETBITMAPSIZE(const Bitmap *bm);
CharInfo __pascal GRGETCHARINFO(GStateHandle gstate, word ch);
MemHandle __pascal GRGETCLIPREGION(GStateHandle gstate, RegionFillRule rule);
XYValueAsDWord __pascal GRGETCURPOS(GStateHandle gstate);
void __pascal GRGETCURPOSWWFIXED(GStateHandle gstate, PointWWFixed far *cp);
FontID __pascal GRGETDEFFONTID(dword *sizeSHL16);
GStateHandle __pascal GRGETEXCLUSIVE(GeodeHandle videoDriver);
FontID __pascal GRGETFONT(GStateHandle gstate, WWFixedAsDWord *pointSize);
word __pascal GRGETFONTNAME(FontID id, char *name);
FontWeight __pascal GRGETFONTWEIGHT(GStateHandle gstate);
FontWidth __pascal GRGETFONTWIDTH(GStateHandle gstate);
Boolean __pascal GRGETGSTRINGBOUNDS(Handle gstring, GStateHandle gstate, GSControl flags, Rectangle far *bounds);
void __pascal GRGETGSTRINGBOUNDSDWORD(Handle gstring, GStateHandle gstate, GSControl flags, RectDWord far *bounds);
GStringElement __pascal GRGETGSTRINGELEMENT(GStateHandle gstate, GStateHandle gstring, word bufSize, void *buffer, word *elSize);
Handle __pascal GRGETGSTRINGHANDLE(GStateHandle gstate);
XYValueAsDWord __pascal GRGETHUGEBITMAPSIZE(VMFileHandle vmFile, VMBlockHandle vmBlk);
void __pascal GRGETINFO(GStateHandle gstate, GrInfoType type, void *data);
RGBColorAsDWord __pascal GRGETLINECOLOR(GStateHandle gstate);
word __pascal GRGETLINECOLORMAP(GStateHandle gstate);
LineEnd __pascal GRGETLINEEND(GStateHandle gstate);
LineJoin __pascal GRGETLINEJOIN(GStateHandle gstate);
word __pascal GRGETLINEMASK(GStateHandle gstate, DrawMask *dm);
LineStyle __pascal GRGETLINESTYLE(GStateHandle gstate);
WWFixedAsDWord __pascal GRGETLINEWIDTH(GStateHandle gstate);
void __pascal GRGETMASKBOUNDS(GStateHandle gstate, Rectangle *bounds);
void __pascal GRGETMASKBOUNDSDWORD(GStateHandle gstate, RectDWord *bounds);
WWFixedAsDWord __pascal GRGETMITERLIMIT(GStateHandle gstate);
MixMode __pascal GRGETMIXMODE(GStateHandle gstate);
MemHandle __pascal GRGETPALETTE(GStateHandle gstate, GetPalType flag);
MemHandle __pascal GRGETPATH(GStateHandle gstate, GetPathType ptype);
Boolean __pascal GRGETPATHBOUNDS(GStateHandle gstate, GetPathType ptype, Rectangle *bounds);
Boolean __pascal GRGETPATHBOUNDSDWORD(GStateHandle gstate, GetPathType ptype, RectDWord *bounds);
MemHandle __pascal GRGETPATHPOINTS(GStateHandle gstate, word resolution);
MemHandle __pascal GRGETPATHREGION(GStateHandle gstate, RegionFillRule rule);
RGBColorAsDWord __pascal GRGETPOINT(GStateHandle gstate, sword x, sword y);
word __pascal GRGETPTRREGBOUNDS(const Region *reg, Rectangle *bounds);
SubscriptAttr __pascal GRGETSUBSCRIPTATTR(GStateHandle gstate);
SuperscriptAttr __pascal GRGETSUPERSCRIPTATTR(GStateHandle gstate);
Boolean __pascal GRGETTEXTBOUNDS(GStateHandle gstate, const char far *str, word xpos, word ypos, word count, Rectangle *bounds);
RGBColorAsDWord __pascal GRGETTEXTCOLOR(GStateHandle gstate);
word __pascal GRGETTEXTCOLORMAP(GStateHandle gstate);
word __pascal GRGETTEXTDRAWOFFSET(GStateHandle gstate);
word __pascal GRGETTEXTMASK(GStateHandle gstate, DrawMask *dm);
word __pascal GRGETTEXTMODE(GStateHandle gstate);
GraphicPattern __pascal GRGETTEXTPATTERN(GStateHandle gstate, const MemHandle *customPattern, word *customSize);
WWFixedAsDWord __pascal GRGETTEXTSPACEPAD(GStateHandle gstate);
word __pascal GRGETTEXTSTYLE(GStateHandle gstate);
word __pascal GRGETTRACKKERN(GStateHandle gstate);
void __pascal GRGETTRANSFORM(GStateHandle gstate, TransMatrix *tm);
void __pascal GRGETWINBOUNDS(GStateHandle gstate, Rectangle *bounds);
void __pascal GRGETWINBOUNDSDWORD(GStateHandle gstate, RectDWord *bounds);
WindowHandle __pascal GRGETWINHANDLE(GStateHandle gstate);
void __pascal GRGRABEXCLUSIVE(GeodeHandle videoDriver, GStateHandle gstate);
void __pascal GRINITDEFAULTTRANSFORM(GStateHandle gstate);
void __pascal GRINVALRECT(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
void __pascal GRINVALRECTDWORD(GStateHandle gstate, const RectDWord *bounds);
void __pascal GRLABEL(GStateHandle gstate, word label);
GStateHandle __pascal GRLOADGSTRING(Handle han, GStringType hanType, word vmBlock);
RGBColorAsDWord __pascal GRMAPCOLORINDEX(GStateHandle gstate, Color c);
RGBColorAsDWord __pascal GRMAPCOLORRGB(GStateHandle gstate, word red, word green, word blue, Color far *index);
void __pascal GRMOVEREG(Region *reg, sword xOffset, sword yOffset);
void __pascal GRMOVETO(GStateHandle gstate, sword x, sword y);
void __pascal GRMOVETOWWFIXED(GStateHandle gstate, WWFixedAsDWord x, WWFixedAsDWord y);
void __pascal GRMULDWFIXED(const DWFixed *i, const DWFixed *j, DWFixed *result);
WWFixedAsDWord __pascal GRMULWWFIXED(WWFixedAsDWord i, WWFixedAsDWord j);
void __pascal GRNEWPAGE(GStateHandle gstate, PageEndCommand pageEndCommand);
void __pascal GRNULLOP(GStateHandle gstate);
Boolean __pascal GROBJAPPLYNORMALTRANSFORM(optr grobjOD, GStateHandle gstate);
void __pascal GROBJBODYPARSEGSTRING(optr bodyOD, VMFileHandle gstringFile, VMBlockHandle gstringBlock, PointDWFixed far *origin);
void __pascal GROBJBODYPROCESSSELECTEDGROBJSCOMMON(optr grobjBody, Message message, word param1, word param2, word param3, word *ax_return, word *cx_return, word *dx_return, word *bp_return);
word __pascal GROBJBODYSETGROBJDRAWFLAGSFORDRAW(optr grobjBody, word drawFlags);
void __pascal GROBJCALCCORNERS(WWFixed objectWidth, WWFixed objectHeight, sword *negWidthOver2, sword *negHeightOver2, sword *posWidthOver2, sword *posHeightOver2, GStateHandle gstate);
void __pascal GROBJDRAW32BITRECT(RectDWord far *rect, GStateHandle gstate);
void __pascal GROBJDRAWONEHANDLE(optr grobjOD, GrObjHandleSpecification handleSpec, GStateHandle gstate, word handleWidth, word handleHeight);
void __pascal GROBJGETABSSPRITEOBJECTDIMENSIONS(optr spriteObject, WWFixed *spriteWidth, WWFixed *spriteHeight);
optr __pascal GROBJGETBODYOD(Segment grobjSeg);
LineWidthAndHandleDims *__pascal GROBJGETCURRENTHANDLESIZE(LineWidthAndHandleDims *__return_ptr __struct_ptr retstr, Segment grobjSeg);
NudgeUnits *__pascal GROBJGETCURRENTNUDGEUNITS(NudgeUnits *__return_ptr __struct_ptr retstr, Segment grobjSeg);
void __pascal GROBJGETNORMALOBJECTDIMENSIONS(optr normalObject, WWFixed *normalWidth, WWFixed *normalHeight);
void __pascal GROBJGETSPRITEOBJECTDIMENSIONS(optr spriteObject, WWFixed *spriteWidth, WWFixed *spriteHeight);
void __pascal GROBJMESSAGETOBODY(Segment grobjSeg, Message msg, word cx_param, word dx_param, word bp_param);
void __pascal GROBJRESIZESPRITERELATIVETOSPRITE(optr spriteObject, word grObjHandleSpec, PointDWFixed *objectDeltaResize);
MACRO_GROBJ_CONVERT GROBJ_CONVERT_CONTROL_DEFAULT_FEATURES;
MACRO_GROBJ_CONVERT_CONTROL GROBJ_CONVERT_CONTROL_DEFAULT_TOOLBOX_FEATURES;
MACRO_GROBJ_CREATE GROBJ_CREATE_CONTROL_DEFAULT_FEATURES;
MACRO_GROBJ_CREATE_CONTROL GROBJ_CREATE_CONTROL_DEFAULT_TOOLBOX_FEATURES;
MACRO_GROBJ_DUPLICATE GROBJ_DUPLICATE_CONTROL_DEFAULT_FEATURES;
MACRO_GROBJ_DUPLICATE_CONTROL GROBJ_DUPLICATE_CONTROL_DEFAULT_TOOLBOX_FEATURES;
MACRO_GROBJ GROBJ_NUDGE_CONTROL_DEFAULT_FEATURES;
MACRO_GROBJ_ROTATE GROBJ_ROTATE_CONTROL_DEFAULT_FEATURES;
MACRO_GROBJ_SCALE GROBJ_SCALE_CONTROL_DEFAULT_FEATURES;
MACRO_GROBJ_SKEW GROBJ_SKEW_CONTROL_DEFAULT_FEATURES;
void __pascal GRPARSEGSTRING(GStateHandle gstate, GStateHandle gstringToDraw, GSControl flags, Boolean (__pascal *callback)(void *element, GStateHandle gstate));
WWFixedAsDWord __pascal GRQUICKARCSINE(WWFixedAsDWord deltaYDivDistance, word origDeltaX);
WWFixedAsDWord __pascal GRQUICKCOSINE(WWFixedAsDWord angle);
WWFixedAsDWord __pascal GRQUICKSINE(WWFixedAsDWord angle);
WWFixedAsDWord __pascal GRQUICKTANGENT(WWFixedAsDWord angle);
void __pascal GRRELEASEEXCLUSIVE(GeodeHandle videoDriver, GStateHandle gstate, Rectangle *bounds);
void __pascal GRRELMOVETO(GStateHandle gstate, WWFixedAsDWord x, WWFixedAsDWord y);
void __pascal GRRESTORESTATE(GStateHandle gstate);
void __pascal GRRESTORETRANSFORM(GStateHandle gstate);
void __pascal GRSAVESTATE(GStateHandle gstate);
void __pascal GRSAVETRANSFORM(GStateHandle gstate);
void __pascal GRSDIVDWFBYWWF(const DWFixed *dividend, const WWFixed *divisor, DWFixed *quotient);
WWFixedAsDWord __pascal GRSDIVWWFIXED(WWFixedAsDWord dividend, WWFixedAsDWord divisor);
void __pascal GRSETAREAATTR(GStateHandle gstate, const AreaAttr *aa);
void __pascal GRSETAREACOLOR(GStateHandle gstate, ColorFlag flag, word redOrIndex, word green, word blue);
void __pascal GRSETAREACOLORMAP(GStateHandle gstate, word colorMap);
void __pascal GRSETAREAMASKCUSTOM(GStateHandle gstate, const DrawMask *dm);
void __pascal GRSETAREAMASKSYS(GStateHandle gstate, word sysDM);
void __pascal GRSETAREAPATTERN(GStateHandle gstate, GraphicPattern pattern);
void __pascal GRSETBITMAPMODE(GStateHandle gstate, word flags, MemHandle colorCorr);
void __pascal GRSETBITMAPRES(GStateHandle gstate, word xRes, word yRes);
void __pascal GRSETCLIPPATH(GStateHandle gstate, PathCombineType params, RegionFillRule rule);
void __pascal GRSETCLIPRECT(GStateHandle gstate, PathCombineType flags, sword left, sword top, sword right, sword bottom);
void __pascal GRSETCUSTOMAREAPATTERN(GStateHandle gstate, GraphicPattern pattern, const void *patternData, word patternSize);
void __pascal GRSETCUSTOMTEXTPATTERN(GStateHandle gstate, GraphicPattern pattern, const void *patternData);
void __pascal GRSETDEFAULTTRANSFORM(GStateHandle gstate);
void __pascal GRSETFONT(GStateHandle gstate, FontID id, WWFixedAsDWord pointSize);
void __pascal GRSETFONTWEIGHT(GStateHandle gstate, FontWeight weight);
void __pascal GRSETFONTWIDTH(GStateHandle gstate, FontWidth width);
void __pascal GRSETGSTRINGBOUNDS(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
void __pascal GRSETGSTRINGPOS(GStateHandle gstate, GStringSetPosType type, word skip);
void __pascal GRSETLINEATTR(GStateHandle gstate, const LineAttr *la);
void __pascal GRSETLINECOLOR(GStateHandle gstate, ColorFlag flag, word redOrIndex, word green, word blue);
void __pascal GRSETLINECOLORMAP(GStateHandle gstate, word colorMap);
void __pascal GRSETLINEEND(GStateHandle gstate, LineEnd end);
void __pascal GRSETLINEJOIN(GStateHandle gstate, LineJoin join);
void __pascal GRSETLINEMASKCUSTOM(GStateHandle gstate, const DrawMask *dm);
void __pascal GRSETLINEMASKSYS(GStateHandle gstate, word sysDM);
void __pascal GRSETLINESTYLE(GStateHandle gstate, LineStyle style, word skipDistance, const DashPairArray *dpa, word numPairs);
void __pascal GRSETLINEWIDTH(GStateHandle gstate, WWFixedAsDWord width);
void __pascal GRSETMITERLIMIT(GStateHandle gstate, WWFixedAsDWord limit);
void __pascal GRSETMIXMODE(GStateHandle gstate, MixMode mode);
void __pascal GRSETNULLTRANSFORM(GStateHandle gstate);
void __pascal GRSETPALETTE(GStateHandle gstate, const RGBValue *buffer, word index, word numEntries);
void __pascal GRSETPALETTEENTRY(GStateHandle gstate, word index, word red, word green, word blue);
void __pascal GRSETPRIVATEDATA(GStateHandle gstate, word dataAX, word dataBX, word dataCX, word dataDX);
void __pascal GRSETSTROKEPATH(GStateHandle gstate);
void __pascal GRSETSUBSCRIPTATTR(GStateHandle gstate, SubscriptAttr attrs);
void __pascal GRSETSUPERSCRIPTATTR(GStateHandle gstate, SuperscriptAttr attrs);
void __pascal GRSETTEXTATTR(GStateHandle gstate, const TextAttr *ta);
void __pascal GRSETTEXTCOLOR(GStateHandle gstate, ColorFlag flag, word redOrIndex, word green, word blue);
void __pascal GRSETTEXTCOLORMAP(GStateHandle gstate, word colorMap);
void __pascal GRSETTEXTDRAWOFFSET(GStateHandle gstate, word numToDraw);
void __pascal GRSETTEXTMASKCUSTOM(GStateHandle gstate, const DrawMask *dm);
void __pascal GRSETTEXTMASKSYS(GStateHandle gstate, SysDrawMask sysDM);
void __pascal GRSETTEXTMODE(GStateHandle gstate, TextMode bitsToSet, TextMode bitsToClear);
void __pascal GRSETTEXTPATTERN(GStateHandle gstate, GraphicPattern pattern);
void __pascal GRSETTEXTSPACEPAD(GStateHandle gstate, WWFixedAsDWord padding);
void __pascal GRSETTEXTSTYLE(GStateHandle gstate, TextStyle bitsToSet, TextStyle bitsToClear);
void __pascal GRSETTRACKKERN(GStateHandle gstate, word tk);
void __pascal GRSETTRANSFORM(GStateHandle gstate, const TransMatrix *tm);
void __pascal GRSETVMFILE(GStateHandle gstate, VMFileHandle vmFile);
void __pascal GRSETWINCLIPPATH(GStateHandle gstate, PathCombineType params, RegionFillRule rule);
void __pascal GRSETWINCLIPRECT(GStateHandle gstate, PathCombineType flags, sword left, sword top, sword right, sword bottom);
WWFixedAsDWord __pascal GRSQRROOTWWFIXED(WWFixedAsDWord i);
Boolean __pascal GRTESTPATH(GStateHandle gstate, GetPathType ptype);
Boolean __pascal GRTESTPOINTINPATH(GStateHandle gstate, word xPos, word yPos, RegionFillRule rule);
Boolean __pascal GRTESTPOINTINPOLYGON(GStateHandle gstate, RegionFillRule rule, Point *list, word numPoints, sword xCoord, sword yCoord);
Boolean __pascal GRTESTPOINTINREG(const Region *reg, word xPos, word yPos, Rectangle *boundingRect);
TestRectReturnType __pascal GRTESTRECTINMASK(GStateHandle gstate, sword left, sword top, sword right, sword bottom);
TestRectReturnType __pascal GRTESTRECTINREG(const Region *reg, sword left, sword top, sword right, sword bottom);
word __pascal GRTEXTWIDTH(GStateHandle gstate, const char *str, word size);
dword __pascal GRTEXTWIDTHWWFIXED(GStateHandle gstate, const char *str, word size);
XYValueAsDWord __pascal GRTRANSFORM(GStateHandle gstate, sword xCoord, sword yCoord);
void __pascal GRTRANSFORMDWFIXED(GStateHandle gstate, PointDWFixed *coord);
void __pascal GRTRANSFORMDWORD(GStateHandle gstate, sdword xCoord, sdword yCoord, PointDWord *deviceCoordinates);
void __pascal GRTRANSFORMWWFIXED(GStateHandle gstate, WWFixedAsDWord xPos, WWFixedAsDWord yPos, PointWWFixed *deviceCoordinates);
WWFixedAsDWord __pascal GRUDIVWWFIXED(WWFixedAsDWord dividend, WWFixedAsDWord divisor);
VMBlockHandle __pascal GRUNCOMPACTBITMAP(VMFileHandle srcFile, VMBlockHandle srcBlock, VMFileHandle destFile);
XYValueAsDWord __pascal GRUNTRANSFORM(GStateHandle gstate, sword xCoord, sword yCoord);
void __pascal GRUNTRANSFORMDWFIXED(GStateHandle gstate, PointDWFixed *coord);
void __pascal GRUNTRANSFORMDWORD(GStateHandle gstate, sdword xCoord, sdword yCoord, PointDWord *documentCoordinates);
void __pascal GRUNTRANSFORMWWFIXED(GStateHandle gstate, WWFixedAsDWord xPos, WWFixedAsDWord yPos, PointWWFixed *documentCoordinates);
MACRO_GR GR_APPLY_ROTATION;
MACRO_GR GR_APPLY_SCALE;
MACRO_GR GR_APPLY_TRANSFORM;
MACRO_GR GR_APPLY_TRANSLATION;
MACRO_GR GR_APPLY_TRANSLATION_DWORD;
MACRO_GR GR_ATTR_8E;
MACRO_GR GR_ATTR_8F;
MACRO_GR GR_ATTR_90;
MACRO_GR GR_ATTR_91;
MACRO_GR GR_ATTR_92;
MACRO_GR GR_ATTR_93;
MACRO_GR GR_ATTR_94;
MACRO_GR GR_ATTR_95;
MACRO_GR GR_ATTR_96;
MACRO_GR GR_ATTR_97;
MACRO_GR GR_ATTR_98;
MACRO_GR GR_ATTR_99;
MACRO_GR GR_ATTR_9A;
MACRO_GR GR_ATTR_9B;
MACRO_GR GR_ATTR_9C;
MACRO_GR GR_ATTR_9D;
MACRO_GR GR_ATTR_9E;
MACRO_GR GR_ATTR_9F;
MACRO_GR GR_BEGIN_PATH;
MACRO_GR GR_BRUSH_POLYLINE;
MACRO_GR_CLOCK_COLOR_ESCAPE GR_CLOCK_COLOR_ESCAPE;
MACRO_GR GR_CLOSE_SUB_PATH;
MACRO_GR GR_COMMENT;
MACRO_GR GR_CREATE_PALETTE;
MACRO_GR GR_DESTROY_PALETTE;
MACRO_GR GR_DRAW_ARC;
MACRO_GR GR_DRAW_ARC_3POINT;
MACRO_GR GR_DRAW_ARC_3POINT_TO;
MACRO_GR GR_DRAW_BITMAP;
MACRO_GR GR_DRAW_BITMAP_CP;
MACRO_GR GR_DRAW_BITMAP_OPTR;
MACRO_GR GR_DRAW_BITMAP_PTR;
MACRO_GR GR_DRAW_CHAR;
MACRO_GR GR_DRAW_CHAR_CP;
MACRO_GR GR_DRAW_CURVE;
MACRO_GR GR_DRAW_CURVE_TO;
MACRO_GR GR_DRAW_ELLIPSE;
MACRO_GR GR_DRAW_HLINE;
MACRO_GR GR_DRAW_HLINE_TO;
MACRO_GR GR_DRAW_LINE;
MACRO_GR GR_DRAW_LINE_TO;
MACRO_GR GR_DRAW_PATH;
MACRO_GR GR_DRAW_POINT;
MACRO_GR GR_DRAW_POINT_CP;
MACRO_GR GR_DRAW_POLYGON;
MACRO_GR GR_DRAW_POLYLINE;
MACRO_GR GR_DRAW_RECT;
MACRO_GR GR_DRAW_RECT_TO;
MACRO_GR GR_DRAW_REL_ARC_3POINT_TO;
MACRO_GR GR_DRAW_REL_CURVE_TO;
MACRO_GR GR_DRAW_REL_LINE_TO;
MACRO_GR GR_DRAW_ROUND_RECT;
MACRO_GR GR_DRAW_ROUND_RECT_TO;
MACRO_GR GR_DRAW_SPLINE;
MACRO_GR GR_DRAW_SPLINE_TO;
MACRO_GR GR_DRAW_TEXT;
MACRO_GR GR_DRAW_TEXT_CP;
MACRO_GR GR_DRAW_TEXT_FIELD;
MACRO_GR GR_DRAW_TEXT_OPTR;
MACRO_GR GR_DRAW_TEXT_PTR;
MACRO_GR GR_DRAW_VLINE;
MACRO_GR GR_DRAW_VLINE_TO;
MACRO_GR GR_END_GSTRING;
MACRO_GR GR_END_PATH;
MACRO_GR GR_ESCAPE;
MACRO_GR GR_FILL_ARC;
MACRO_GR GR_FILL_ARC_3POINT;
MACRO_GR GR_FILL_ARC_3POINT_TO;
MACRO_GR GR_FILL_BITMAP;
MACRO_GR GR_FILL_BITMAP_CP;
MACRO_GR GR_FILL_BITMAP_OPTR;
MACRO_GR GR_FILL_BITMAP_PTR;
MACRO_GR GR_FILL_ELLIPSE;
MACRO_GR GR_FILL_PATH;
MACRO_GR GR_FILL_POLYGON;
MACRO_GR GR_FILL_RECT;
MACRO_GR GR_FILL_RECT_TO;
MACRO_GR GR_FILL_ROUND_RECT;
MACRO_GR GR_FILL_ROUND_RECT_TO;
MACRO_GR_FIRST GR_FIRST_APPLICATION_ESCAPE;
MACRO_GR_FIRST GR_FIRST_GEOWORKS_ESCAPE;
MACRO_GR_FIRST GR_FIRST_SYSTEM_ESCAPE;
MACRO_GR GR_INIT_DEFAULT_TRANSFORM;
MACRO_GR GR_LABEL;
MACRO_GR_FIRST GR_LAST_APPLICATION_ESCAPE;
MACRO_GR_FIRST GR_LAST_GEOWORKS_ESCAPE;
MACRO_GR_FIRST GR_LAST_SYSTEM_ESCAPE;
MACRO_GR GR_MISC_4;
MACRO_GR GR_MISC_5;
MACRO_GR GR_MISC_6;
MACRO_GR GR_MISC_7;
MACRO_GR GR_MISC_8;
MACRO_GR GR_MISC_9;
MACRO_GR GR_MISC_A;
MACRO_GR GR_MISC_B;
MACRO_GR GR_MISC_C;
MACRO_GR GR_MOVE_TO;
MACRO_GR GR_NEW_PAGE;
MACRO_GR GR_NULL_OP;
MACRO_GR GR_OUTPUT_55;
MACRO_GR GR_OUTPUT_56;
MACRO_GR GR_OUTPUT_57;
MACRO_GR GR_OUTPUT_58;
MACRO_GR GR_OUTPUT_59;
MACRO_GR GR_OUTPUT_5A;
MACRO_GR GR_OUTPUT_5B;
MACRO_GR GR_OUTPUT_5C;
MACRO_GR GR_OUTPUT_5D;
MACRO_GR GR_OUTPUT_5E;
MACRO_GR GR_OUTPUT_5F;
MACRO_GR GR_PATH_A8;
MACRO_GR GR_PATH_A9;
MACRO_GR GR_PATH_AA;
MACRO_GR GR_PATH_AB;
MACRO_GR GR_PATH_AC;
MACRO_GR GR_PATH_AD;
MACRO_GR GR_PATH_AE;
MACRO_GR GR_PATH_AF;
MACRO_GR GR_REL_MOVE_TO;
MACRO_GR GR_RESTORE_STATE;
MACRO_GR GR_RESTORE_TRANSFORM;
MACRO_GR GR_SAVE_STATE;
MACRO_GR GR_SAVE_TRANSFORM;
MACRO_GR GR_SET_AREA_ATTR;
MACRO_GR GR_SET_AREA_COLOR;
MACRO_GR GR_SET_AREA_COLOR_INDEX;
MACRO_GR GR_SET_AREA_COLOR_MAP;
MACRO_GR GR_SET_AREA_MASK;
MACRO_GR GR_SET_AREA_PATTERN;
MACRO_GR GR_SET_CLIP_PATH;
MACRO_GR GR_SET_CLIP_RECT;
MACRO_GR GR_SET_CUSTOM_AREA_MASK;
MACRO_GR GR_SET_CUSTOM_AREA_PATTERN;
MACRO_GR GR_SET_CUSTOM_LINE_MASK;
MACRO_GR GR_SET_CUSTOM_LINE_STYLE;
MACRO_GR GR_SET_CUSTOM_TEXT_MASK;
MACRO_GR GR_SET_CUSTOM_TEXT_PATTERN;
MACRO_GR GR_SET_DEFAULT_TRANSFORM;
MACRO_GR GR_SET_FONT;
MACRO_GR GR_SET_FONT_WEIGHT;
MACRO_GR GR_SET_FONT_WIDTH;
MACRO_GR GR_SET_GSTRING_BOUNDS;
MACRO_GR GR_SET_LINE_ATTR;
MACRO_GR GR_SET_LINE_COLOR;
MACRO_GR GR_SET_LINE_COLOR_INDEX;
MACRO_GR GR_SET_LINE_COLOR_MAP;
MACRO_GR GR_SET_LINE_END;
MACRO_GR GR_SET_LINE_JOIN;
MACRO_GR GR_SET_LINE_MASK;
MACRO_GR GR_SET_LINE_STYLE;
MACRO_GR GR_SET_LINE_WIDTH;
MACRO_GR GR_SET_MITER_LIMIT;
MACRO_GR GR_SET_MIX_MODE;
MACRO_GR GR_SET_NULL_TRANSFORM;
MACRO_GR GR_SET_PALETTE;
MACRO_GR GR_SET_PALETTE_ENTRY;
MACRO_GR GR_SET_STROKE_PATH;
MACRO_GR GR_SET_SUBSCRIPT_ATTR;
MACRO_GR GR_SET_SUPERSCRIPT_ATTR;
MACRO_GR GR_SET_TEXT_ATTR;
MACRO_GR GR_SET_TEXT_COLOR;
MACRO_GR GR_SET_TEXT_COLOR_INDEX;
MACRO_GR GR_SET_TEXT_COLOR_MAP;
MACRO_GR GR_SET_TEXT_MASK;
MACRO_GR GR_SET_TEXT_MODE;
MACRO_GR GR_SET_TEXT_PATTERN;
MACRO_GR GR_SET_TEXT_SPACE_PAD;
MACRO_GR GR_SET_TEXT_STYLE;
MACRO_GR GR_SET_TRACK_KERN;
MACRO_GR GR_SET_TRANSFORM;
MACRO_GR GR_SET_WIN_CLIP_PATH;
MACRO_GR GR_SET_WIN_CLIP_RECT;
MACRO_GR GR_XFORM_1B;
MACRO_GR GR_XFORM_1C;
MACRO_GR GR_XFORM_1D;
MACRO_GR GR_XFORM_1E;
MACRO_GR GR_XFORM_1F;
MACRO_GSCF GSCF_ABORT;
MACRO_GSCF GSCF_CONTINUE;
MACRO_GSCF GSCF_PAUSE;
MACRO_GS GSCF_START;
MACRO_GSC GSC_ATTR;
MACRO_GSC GSC_ESCAPE;
MACRO_GSC GSC_LABEL;
MACRO_GSC GSC_MISC;
MACRO_GSC GSC_NEW_PAGE;
MACRO_GSC GSC_ONE;
MACRO_GSC GSC_OUTPUT;
MACRO_GSC GSC_PARTIAL;
MACRO_GSC GSC_PATH;
MACRO_GSC GSC_XFORM;
$4A93BDE36C1AD5918EC282C61FB32CDD GSET_DISK_FULL;
$4A93BDE36C1AD5918EC282C61FB32CDD GSET_NO_ERROR;
MACRO_GR GSE_BITMAP_SLICE;
MACRO_GOAAIR GSF_AREA_COLOR_RELATIVE;
MACRO_GSF GSF_AREA_MASK_RELATIVE;
MACRO_GSF GSF_LINE_COLOR_RELATIVE;
MACRO_GSF GSF_LINE_MASK_RELATIVE;
MACRO_GSF GSF_LINE_WIDTH_RELATIVE;
MACRO_GSIF GSIF_DYNAMIC_LIST;
MACRO_GSIF GSIF_EXISTING_ITEMS_ONLY;
MACRO_GSIF GSIF_FORWARD;
MACRO_GSIF GSIF_FROM_START;
MACRO_GSIF GSIF_INITIAL_ITEM_FOUND;
MACRO_GSIF GSIF_USABLE_AND_ENABLED_ITEM_FOUND;
MACRO_GSIF GSIF_WRAP_AROUND;
MACRO_GSKT GSKT_KILL_DATA;
MACRO_GSKT GSKT_LEAVE_DATA;
MACRO_GSRCAF GSRCAF_REF_COUNT;
MACRO_GSRCAF GSRCAF_USE_DOC_CLIP_REGION;
$A972662BCE1EC8B4640067EF15BC010B GSRT_ATTR;
$A972662BCE1EC8B4640067EF15BC010B GSRT_COMPLETE;
$A972662BCE1EC8B4640067EF15BC010B GSRT_ESCAPE;
$A972662BCE1EC8B4640067EF15BC010B GSRT_FAULT;
$A972662BCE1EC8B4640067EF15BC010B GSRT_LABEL;
$A972662BCE1EC8B4640067EF15BC010B GSRT_MISC;
$A972662BCE1EC8B4640067EF15BC010B GSRT_NEW_PAGE;
$A972662BCE1EC8B4640067EF15BC010B GSRT_ONE;
$A972662BCE1EC8B4640067EF15BC010B GSRT_OUTPUT;
$A972662BCE1EC8B4640067EF15BC010B GSRT_PATH;
$A972662BCE1EC8B4640067EF15BC010B GSRT_XFORM;
MACRO_GSSD GSSD_MULTIPLE_ARC_CLOSE_TYPES;
MACRO_GSSD GSSD_MULTIPLE_ARC_END_ANGLES;
MACRO_GSSD GSSD_MULTIPLE_ARC_START_ANGLES;
MACRO_GSSD GSSD_MULTIPLE_CLASSES;
MACRO_GSSF GSSF_ARC_SELECTED;
MACRO_GSSF GSSF_BITMAP_SELECTED;
MACRO_GSSF GSSF_EDITING;
MACRO_GSSF GSSF_SPLINE_SELECTED;
MACRO_GSSF GSSF_TEXT_SELECTED;
MACRO_GSSF GSSF_UNGROUPABLE;
MACRO_INSERT GSSOP_RELAYED_FLAG;
MACRO_GSSOP GSSOP_TYPE;
$EC28A20ABB843B6D885125121C0AA5B9 GSSOT_FIRST_OBJECT;
$EC28A20ABB843B6D885125121C0AA5B9 GSSOT_LAST_OBJECT;
$EC28A20ABB843B6D885125121C0AA5B9 GSSOT_NEXT_OBJECT;
$EC28A20ABB843B6D885125121C0AA5B9 GSSOT_PREV_OBJECT;
MACRO_GSSPT GSSPT_BEGINNING;
MACRO_GSSPT GSSPT_END;
MACRO_GSSPT GSSPT_RELATIVE;
MACRO_GSSPT GSSPT_SKIP_1;
MACRO_GST GST_CHUNK;
MACRO_GST GST_PATH;
MACRO_GST GST_PTR;
MACRO_GST GST_STREAM;
MACRO_GST GST_VMEM;
MACRO_GS_USABLE GS_ENABLED;
MACRO_GS GS_GAME_OVER;
MACRO_GS GS_MINIMIZED;
MACRO_GS GS_NULL;
MACRO_GS GS_PAUSED;
MACRO_GS GS_RESTARTING;
MACRO_GS GS_RUNNING;
MACRO_GS GS_STOPPED;
MACRO_GS GS_TEMP_PAUSED;
MACRO_GS_USABLE GS_USABLE;
MACRO_GTA GTA_ALLOW_TEXT_OFF_END;
MACRO_GTA GTA_DONT_SCROLL_TO_CHANGES;
MACRO_GTA GTA_INIT_SCROLLING;
MACRO_GTA GTA_NO_WORD_WRAPPING;
MACRO_GTA GTA_SINGLE_LINE_TEXT;
MACRO_GTA GTA_TAIL_ORIENTED;
MACRO_GTA GTA_USE_TAB_FOR_NAVIGATION;
MACRO_GTCF GTCF_TOOL_DIALOG;
$0545C44ECFB282FAD99EC53958DDB200 GTOCS_CONNECTION_IN_USE;
$0545C44ECFB282FAD99EC53958DDB200 GTOCS_INTERNAL_ERROR;
$0545C44ECFB282FAD99EC53958DDB200 GTOCS_NORMAL;
$0545C44ECFB282FAD99EC53958DDB200 GTOCS_OUT_OF_DISKSPACE;
$0545C44ECFB282FAD99EC53958DDB200 GTOCS_OUT_OF_MEMORY;
MACRO_GTSF GTSF_INDETERMINATE;
MACRO_GTSF GTSF_MODIFIED;
$50617334C99A802EF5B4D6785D74C2B2 GT_BACKSPACE;
$50617334C99A802EF5B4D6785D74C2B2 GT_CHAR;
$50617334C99A802EF5B4D6785D74C2B2 GT_COPY;
$50617334C99A802EF5B4D6785D74C2B2 GT_CUT;
$50617334C99A802EF5B4D6785D74C2B2 GT_DELETE_SELECTION;
$50617334C99A802EF5B4D6785D74C2B2 GT_H_CROSSOUT;
$50617334C99A802EF5B4D6785D74C2B2 GT_IGNORE_GESTURE;
$50617334C99A802EF5B4D6785D74C2B2 GT_MODE_CHAR;
$50617334C99A802EF5B4D6785D74C2B2 GT_NO_GESTURE;
$50617334C99A802EF5B4D6785D74C2B2 GT_PASTE;
$50617334C99A802EF5B4D6785D74C2B2 GT_REPLACE_LAST_CHAR;
$50617334C99A802EF5B4D6785D74C2B2 GT_SELECT_CHARS;
$50617334C99A802EF5B4D6785D74C2B2 GT_STRING_MACRO;
$50617334C99A802EF5B4D6785D74C2B2 GT_V_CROSSOUT;
MACRO_GUO GUO_EXPAND;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_DELAYED_OPERATION;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_FIELD;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_SCREEN;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_UI_FOR_APPLICATION;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_UI_FOR_FIELD;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_UI_FOR_MISC;
$8A444A306AD0D6C1DB52AD7E00837D4D GUQT_UI_FOR_SCREEN;
MACRO_GVA GVA_ADJUST_FOR_ASPECT_RATIO;
MACRO_GVA GVA_CONTROLLED;
MACRO_GVA GVA_DONT_SEND_KBD_RELEASES;
MACRO_GVA GVA_DONT_SEND_PTR_EVENTS;
MACRO_GVA GVA_DRAG_SCROLLING;
MACRO_GVA GVA_FOCUSABLE;
MACRO_GVA GVA_GENERIC_CONTENTS;
MACRO_GVA GVA_NO_WIN_FRAME;
MACRO_GVA GVA_SAME_COLOR_AS_PARENT_WIN;
MACRO_GVA GVA_SCALE_TO_FIT;
MACRO_GVA GVA_SEND_ALL_KBD_CHARS;
MACRO_GVA GVA_TRACK_SCROLLING;
MACRO_GVA GVA_VIEW_FOLLOWS_CONTENT_GEOMETRY;
MACRO_GVA GVA_WINDOW_COORDINATE_MOUSE_EVENTS;
MACRO_DEFAULT_ZOOM GVCA_ADJUST_ASPECT_RATIO;
MACRO_GVCA GVCA_APPLY_TO_ALL;
MACRO_GVCA GVCA_SHOW_HORIZONTAL;
MACRO_GVCA GVCA_SHOW_VERTICAL;
MACRO_GVCF GVCF_100;
MACRO_GVCF GVCF_ADJUST_ASPECT_RATIO;
MACRO_GVCF GVCF_APPLY_TO_ALL;
MACRO_GVCF GVCF_BIG_ENLARGE;
MACRO_GVCF GVCF_CUSTOM_SCALE;
MACRO_GVCF GVCF_ENLARGE;
MACRO_GVCF GVCF_MAIN_100;
MACRO_GVCF GVCF_MAIN_SCALE_TO_FIT;
MACRO_GVCF GVCF_REDRAW;
MACRO_GVCF GVCF_REDUCE;
MACRO_GVCF GVCF_SCALE_TO_FIT;
MACRO_GVCF GVCF_SHOW_HORIZONTAL;
MACRO_GVCF GVCF_SHOW_VERTICAL;
MACRO_GVCF GVCF_ZOOM_IN;
MACRO_GVCF GVCF_ZOOM_OUT;
$FAB72CC09C191B75F969B04AB301B253 GVCSSF_TO_FIT;
MACRO_GVCTF GVCTF_100;
MACRO_GVCTF GVCTF_ADJUST_ASPECT_RATIO;
MACRO_GVCTF GVCTF_APPLY_TO_ALL;
MACRO_GVCTF GVCTF_PAGE_DOWN;
MACRO_GVCTF GVCTF_PAGE_LEFT;
MACRO_GVCTF GVCTF_PAGE_RIGHT;
MACRO_GVCTF GVCTF_PAGE_UP;
MACRO_GVCTF GVCTF_REDRAW;
MACRO_GVCTF GVCTF_SCALE_TO_FIT;
MACRO_GVCTF GVCTF_SHOW_HORIZONTAL;
MACRO_GVCTF GVCTF_SHOW_VERTICAL;
MACRO_GVCTF GVCTF_ZOOM_IN;
MACRO_GVCTF GVCTF_ZOOM_OUT;
MACRO_GVC GVC_DEFAULT_FEATURES;
MACRO_GVC_DEFAULT GVC_DEFAULT_TOOLBOX_FEATURES;
MACRO_GVC_SUGGESTED GVC_SUGGESTED_BEGINNING_FEATURES;
MACRO_GVC_SUGGESTED GVC_SUGGESTED_INTRODUCTORY_FEATURES;
MACRO_GVC_DEFAULT GVC_SUGGESTED_SIMPLE_FEATURES;
MACRO_GVDA GVDA_DONT_DISPLAY_SCROLLBAR;
MACRO_GVDA GVDA_KEEP_ASPECT_RATIO;
MACRO_GVDA GVDA_NO_LARGER_THAN_CONTENT;
MACRO_GVDA GVDA_NO_SMALLER_THAN_CONTENT;
MACRO_GVDA GVDA_SCROLLABLE;
MACRO_GVDA GVDA_SIZE_A_MULTIPLE_OF_INCREMENT;
MACRO_GVDA GVDA_SPLITTABLE;
MACRO_GVDA GVDA_TAIL_ORIENTED;
MACRO_GVDF GVDF_CENTIMETERS;
MACRO_GVDF GVDF_CICEROS;
MACRO_GVDF GVDF_DECIMAL;
MACRO_GVDF GVDF_EUR_POINTS;
MACRO_GVDF GVDF_INCHES;
MACRO_GVDF GVDF_INCHES_OR_CENTIMETERS;
MACRO_GVDF GVDF_INTEGER;
MACRO_GVDF GVDF_MILLIMETERS;
MACRO_GVDF GVDF_PERCENTAGE;
MACRO_GVDF GVDF_PICAS;
MACRO_GVDF GVDF_POINTS;
MACRO_GVDF GVDF_POINTS_OR_MILLIMETERS;
MACRO_GVIT GVIT_INK_WITH_STANDARD_OVERRIDE;
MACRO_GVIT GVIT_PRESSES_ARE_INK;
MACRO_GVIT GVIT_PRESSES_ARE_NOT_INK;
MACRO_GVIT GVIT_QUERY_OUTPUT;
$1E7095AF937764D809F4989B6F83F6F8 GVI_VALUE_AS_RATIO_OF_AVAILABLE_RANGE;
MACRO_TGHT GVSF_INDETERMINATE;
MACRO_GVSF GVSF_MODIFIED;
MACRO_GVSF GVSF_OUT_OF_DATE;
MACRO_GVSOL GVSOL_NO_CHANGE;
$1E7095AF937764D809F4989B6F83F6F8 GVT_INCREMENT;
$1E7095AF937764D809F4989B6F83F6F8 GVT_LONG;
$1E7095AF937764D809F4989B6F83F6F8 GVT_MAXIMUM;
$1E7095AF937764D809F4989B6F83F6F8 GVT_MINIMUM;
$1E7095AF937764D809F4989B6F83F6F8 GVT_RANGE_END;
$1E7095AF937764D809F4989B6F83F6F8 GVT_RANGE_LENGTH;
$1E7095AF937764D809F4989B6F83F6F8 GVT_VALUE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_ACCESS_POINT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_BEGIN_DATA_CONNECTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_BEGIN_FAX_CONNECTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_BITMAP_CURRENT_TOOL_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_BITMAP_CURRNET_FORMAT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CARD_BACK_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CHART_AXIS_ATTRIBUTES;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CHART_GROUP_FLAGS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CHART_TYPE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_LIST_CUR_SELECTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_LOG_CONTACT_LOG_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_LOG_RECENT_CALLS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_LOG_RECENT_FAXES_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_LOG_RECENT_MESSAGES_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_SIM_LIST_CONTACT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_SIM_LIST_CUR_SELECTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_SIM_LIST_FDN_STATUS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTACT_SIM_LIST_SELECTION_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTENT_BOOK_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CONTENT_CONTEXT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_COVER_PAGE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CURRENT_COMPONENT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_CURSOR_POSITION_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_DATASTORE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_DELETE_VARIABLE_GRAPHIC;
$FE050C21ACCAA744772A2162503E3E08 GWNT_DISPLAY_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_DISPLAY_LIST_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_DOCUMENT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_DOCUMENT_OPEN_COMPLETE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_EMAIL_DATABASE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_EMAIL_PAGE_PANEL_UPDATE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_EMAIL_SCAN_INBOX;
$FE050C21ACCAA744772A2162503E3E08 GWNT_EMAIL_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_END_SERIAL_CONNECTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FAX_DESTINATION_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FAX_DIAL_ASSIST_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FAX_LAST_DESTINATIONS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FAX_NEW_JOB_COMPLETED;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FAX_NEW_JOB_CREATED;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLAT_FILE_DUMMY_CHANGE_2;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLAT_FILE_DUMMY_CHANGE_3;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLAT_FILE_FIELD_APPEARANCE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLAT_FILE_FIELD_LIST_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLAT_FILE_FIELD_PROPERTIES_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLAT_FILE_RCP_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLOAT_FORMAT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FLOAT_FORMAT_INIT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FOAM_AUTO_SAVE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FOAM_DB_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FOAM_GAINED_FULL_SCREEN_EXCL;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FOAM_IGNORE_BRING_TO_TOP;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FOAM_LOST_FULL_SCREEN_EXCL;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FOCUS_WINDOW_KBD_STATUS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FONTS_ADDED;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FONTS_DELETED;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FONT_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_FONT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GAME_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GEN_CONTROL_NOTIFY_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_AREA_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_BODY_INSTRUCTION_FLAGS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_BODY_SELECTION_STATE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_CURRENT_TOOL_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_GRADIENT_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_LINE_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_GROBJ_TEXT_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_HARD_ICON_BAR_FUNCTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_HELP_CONTEXT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_HYPERLINK_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_CHANGE_NUM_OUTGOING_DOCUMENTS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_CHANGE_NUM_UNREAD_DOCUMENTS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_CLEAR_NUM_UNREAD_DOCUMENTS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_HANDLE_ECI_CMT_TERMINATE_STATUS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_HANDLE_ECI_NETWORK_TERMINATE_STATUS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_LOG_EVENT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_PUT_UP_FLASHING_NOTE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_PUT_UP_INFORMATION_NOTE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_REFRESH_NOTIFY;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_REPLACE_ICON_GLYPH;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_REPLACE_TEXT_GLYPH;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_SET_ACTIVE_CALL;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_SET_CUSTOM_NOTE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_SET_MAIN_WINDOW_VISIBILITY;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_SET_NUM_OUTGOING_DOCUMENTS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_SET_NUM_UNREAD_DOCUMENTS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INDICATOR_SET_TERMINATE_HANDLING;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INIT_FILE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INK;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INK_DIGITIZER_COORDS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INK_GESTURE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_INK_HAS_TARGET;
$FE050C21ACCAA744772A2162503E3E08 GWNT_JUSTIFICATION_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_KEYBOARD_EVENT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_KEYBOARD_MAP_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_LOGIN_ATTACH;
$FE050C21ACCAA744772A2162503E3E08 GWNT_LOGIN_DETACH;
$FE050C21ACCAA744772A2162503E3E08 GWNT_LOGIN_INITIALIZE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_LOST_SERIAL_CONNECTION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_MAILBOX_SEND_CONTEXT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_MAP_APP_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_MAP_LIBRARY_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_MODAL_WIN_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_NAVIGATE_DELETE_ENTRY;
$FE050C21ACCAA744772A2162503E3E08 GWNT_NAVIGATE_ENTRY_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PAGE_INFO_STATE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PAGE_NAME_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PAGE_STATE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PCCOM_DISPLAY_CHAR;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PCCOM_DISPLAY_STRING;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PCCOM_EXIT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PCMCIA_CARD_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PENELOPE_HARDWARE_NOTIFICATION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_PENELOPE_RADIO_STATUS_NOTIFICATION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_POINT_SIZE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_RESPONDER_NOTIFICATION;
$FE050C21ACCAA744772A2162503E3E08 GWNT_RULER_GRID_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_RULER_GUIDE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_RULER_TYPE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SEARCH_REPLACE_ENABLE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SECURITY_LEVEL;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SECURITY_LOCK_TIME_OUT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SECURITY_PIN_CODE_REQUEST;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SECURITY_SYSTEM_LOCKED;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SELECT_STATE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPELL_ENABLE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPLINE_MARKER_SHAPE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPLINE_OPEN_CLOSE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPLINE_POINT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPLINE_POLYLINE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPLINE_SMOOTHNESS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPOOL_DOC_OR_PAPER_SIZE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPOOL_PRINTING_COMPLETE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_ACTIVE_CELL_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_CELL_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_CELL_NOTES_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_CELL_WIDTH_HEIGHT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_DATA_RANGE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_DOC_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_EDIT_BAR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_NAME_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_SPREADSHEET_SELECTION_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_STARTUP_INDEXED_APP;
$FE050C21ACCAA744772A2162503E3E08 GWNT_STYLE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_STYLE_SHEET_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TAB_DOUBLE_CLICK;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_BG_COLOR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_BORDER_COLOR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_CHAR_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_CONTEXT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_COUNT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_FG_COLOR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_HYPERLINKABILITY_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_NAME_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_OBJECT_HAS_FOCUS;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_PARA_ATTR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_PARA_COLOR_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_REPLACE_GESTURE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_REPLACE_WITH_HWR;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_SELECTION_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_STYLE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_TEXT_TYPE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UI_ZOOM_LEVEL;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UNDO_STATE_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UNUSED_1;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UNUSED_2;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UNUSED_3;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UNUSED_4;
$FE050C21ACCAA744772A2162503E3E08 GWNT_UNUSED_5;
$FE050C21ACCAA744772A2162503E3E08 GWNT_VIEWER_DOCUMENT_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_VIEWER_DOCUMENT_STATUS_CHANGE;
$FE050C21ACCAA744772A2162503E3E08 GWNT_VIEWER_LOAD_UNREAD_DOCUMENT;
$FE050C21ACCAA744772A2162503E3E08 GWNT_VIEWER_SHUTTING_DOWN;
$FE050C21ACCAA744772A2162503E3E08 GWNT_VIEW_STATE_CHANGE;
MACRO_GrObjWrapTextType GrObjWrapTextType;
MACRO_GrObjWrapTextType GrObjWrapTextType_OFFSET;
MACRO_HAF HAF_CODE;
MACRO_HAF HAF_CONFORMING;
MACRO_HAF HAF_LOCK;
MACRO_HAF HAF_NO_ERR;
MACRO_HAF HAF_OBJECT_RESOURCE;
MACRO_HAF HAF_READ_ONLY;
MACRO_HAF_STANDARD HAF_STANDARD;
MACRO_HAF_STANDARD HAF_STANDARD_LOCK;
MACRO_HAF_STANDARD HAF_STANDARD_NO_ERR;
MACRO_HAF_STANDARD HAF_STANDARD_NO_ERR_LOCK;
MACRO_HAF HAF_UI;
MACRO_HAF HAF_ZERO_INIT;
MACRO_HALF HALF;
MACRO_MAX_TICK HALF_ROOT_2;
void __pascal HANDLEMODIFYOWNER(Handle mh, GeodeHandle owner);
void __pascal HANDLEP(MemHandle mh);
void __pascal HANDLEV(MemHandle mh);
MACRO_HANDLE HANDLE_CENTER;
MACRO_HANDLE_RIGHT HANDLE_LEFT_BOTTOM;
MACRO_HANDLE_MIDDLE HANDLE_LEFT_MIDDLE;
MACRO_HANDLE_LEFT HANDLE_LEFT_TOP;
MACRO_HANDLE_MIDDLE_BOTTOM HANDLE_MIDDLE_BOTTOM;
MACRO_HANDLE_MIDDLE HANDLE_MIDDLE_TOP;
MACRO_HANDLE HANDLE_MOVE;
MACRO_HANDLE_MIDDLE_BOTTOM HANDLE_RIGHT_BOTTOM;
MACRO_HANDLE_RIGHT HANDLE_RIGHT_MIDDLE;
MACRO_HANDLE_MIDDLE HANDLE_RIGHT_TOP;
MACRO_HCF HCF_LIST;
MACRO_HCTF HCTF_TOGGLE;
$CF8096EA47B4BE25A0FC4946D90AEA54 HC_CONGESTED;
MACRO_HC HC_DEFAULT_FEATURES;
MACRO_HC_DEFAULT HC_DEFAULT_TOOLBOX_FEATURES;
$CF8096EA47B4BE25A0FC4946D90AEA54 HC_DESPERATE;
$CF8096EA47B4BE25A0FC4946D90AEA54 HC_SCRUBBING;
void __pascal __far HELPSENDHELPNOTIFICATION(word HelpType, const char *contextname, const char *filename);
MACRO_HF HF_DISCARDABLE;
MACRO_HF HF_DISCARDED;
MACRO_HF_DYNAMIC HF_DYNAMIC;
MACRO_HF HF_FIXED;
MACRO_HF HF_LMEM;
MACRO_HF HF_SHARABLE;
MACRO_HF_DYNAMIC HF_STATIC;
MACRO_HF HF_SWAPABLE;
MACRO_HF HF_SWAPPED;
MACRO_HGF HGF_APP_EXCL;
MACRO_HGF HGF_GRAB;
MACRO_HGF HGF_OTHER_INFO;
MACRO_UC HGF_SYS_EXCL;
MACRO_LOW_A_0 HIGH_A;
MACRO_LOW_A_DSH HIGH_A_DSH;
MACRO_LOW_A_SH HIGH_A_SH;
MACRO_LOW_A HIGH_A_b;
MACRO_LOW_A_bb HIGH_A_bb;
MACRO_LOW_B_0 HIGH_B;
MACRO_LOW_B_DSH HIGH_B_DSH;
MACRO_LOW_B_SH HIGH_B_SH;
MACRO_LOW_B HIGH_B_b;
MACRO_LOW_B_bb HIGH_B_bb;
MACRO_LOW HIGH_C;
MACRO_LOW_C_DSH HIGH_C_DSH;
MACRO_LOW_C HIGH_C_SH;
MACRO_REST HIGH_C_b;
MACRO_LOW_C_bb HIGH_C_bb;
MACRO_LOW_D_0 HIGH_D;
MACRO_LOW_D_DSH HIGH_D_DSH;
MACRO_LOW_D_SH HIGH_D_SH;
MACRO_LOW_D HIGH_D_b;
MACRO_LOW_D_bb HIGH_D_bb;
MACRO_LOW_E_0 HIGH_E;
MACRO_LOW_E_DSH HIGH_E_DSH;
MACRO_LOW_E_SH HIGH_E_SH;
MACRO_LOW_E HIGH_E_b;
MACRO_LOW_E_bb HIGH_E_bb;
MACRO_LOW_F_0 HIGH_F;
MACRO_LOW_F_DSH HIGH_F_DSH;
MACRO_LOW_F_SH HIGH_F_SH;
MACRO_LOW_F HIGH_F_b;
MACRO_LOW_F_bb HIGH_F_bb;
MACRO_LOW_G_0 HIGH_G;
MACRO_LOW_G_DSH HIGH_G_DSH;
MACRO_LOW_G_SH HIGH_G_SH;
MACRO_LOW_G HIGH_G_b;
MACRO_LOW_G_bb HIGH_G_bb;
MACRO_HJ HJ_BOTTOM_JUSTIFY_CHILDREN;
MACRO_HJ HJ_CENTER_CHILDREN_VERTICALLY;
MACRO_HJ HJ_FULL_JUSTIFY_CHILDREN_VERTICALLY;
MACRO_HJ HJ_TOP_JUSTIFY_CHILDREN;
$9394009D0E7A2BE4F34E24144A17591B HLME_BLOCK_BECAME_TOO_BIG;
$9394009D0E7A2BE4F34E24144A17591B HLME_BLOCK_NOT_FOUND;
$830110510549E82FC9B47DFDA16B702E HM_BOX;
$830110510549E82FC9B47DFDA16B702E HM_GRID;
$830110510549E82FC9B47DFDA16B702E HM_LINE;
$830110510549E82FC9B47DFDA16B702E HM_NONE;
MACRO_DAY HOUR_MAX;
MACRO_HOUR HOUR_MIN;
MACRO_HPCF HPCF_CLOSE;
MACRO_HPCF HPCF_CONTENTS;
MACRO_HPCF HPCF_FIRST_AID;
MACRO_HPCF HPCF_FIRST_AID_GO_BACK;
MACRO_HPCF HPCF_GO_BACK;
MACRO_HT HPCF_HELP;
MACRO_HPCF HPCF_HISTORY;
MACRO_HPCF HPCF_INSTRUCTIONS;
MACRO_HPCF HPCF_TEXT;
MACRO_ST HSA_LOW_SCORE_IS_BETTER;
MACRO_HSA HSA_ONE_SCORE_PER_NAME;
MACRO_HSF HSF_DATE;
MACRO_HSF HSF_EXTRA_DATA;
MACRO_HSF HSF_SCORE;
MACRO_HSF HSF_SHOW_HIGH_SCORES_TRIGGER;
MACRO_HT HT_FIRST_AID;
MACRO_HT HT_NORMAL_HELP;
MACRO_HT HT_SIMPLE_HELP;
MACRO_HT HT_STATUS_HELP;
MACRO_HT HT_SYSTEM_HELP;
MACRO_HT HT_SYSTEM_MODAL_HELP;
dword __pascal HUGEARRAYAPPEND(VMFileHandle vmFile, VMBlockHandle vmBlock, word numElem, const void *initData);
void __pascal HUGEARRAYCOMPRESSBLOCKS(VMFileHandle vmFile, VMBlockHandle vmBlock);
word __pascal HUGEARRAYCONTRACT(void **elemPtr, word numElem);
VMBlockHandle __pascal HUGEARRAYCREATE(VMFileHandle vmFile, word elemSize, word headerSpace);
void __pascal HUGEARRAYDELETE(VMFileHandle vmFile, VMBlockHandle vmBlock, word numElem, dword elemNum);
void __pascal HUGEARRAYDESTROY(VMFileHandle vmFile, VMBlockHandle vmBlock);
void __pascal HUGEARRAYDIRTY(const void *elemPtr);
Boolean __pascal HUGEARRAYENUM(VMFileHandle vmFile, VMBlockHandle vmBlock, Boolean (__pascal *callback)(void *element, void *enumData), dword startElement, dword count, void *enumData);
word __pascal HUGEARRAYEXPAND(void **elemPtr, word numElem, const void *initData);
dword __pascal HUGEARRAYGETCOUNT(VMFileHandle vmFile, VMBlockHandle vmBlock);
void __pascal HUGEARRAYINSERT(VMFileHandle vmFile, VMBlockHandle vmBlock, word numElem, dword elemNum, const void *initData);
dword __pascal HUGEARRAYLOCK(VMFileHandle vmFile, VMBlockHandle vmBlock, dword elemNum, void **elemPtr, word *elemSize);
void __pascal HUGEARRAYLOCKDIR(VMFileHandle vmFile, VMBlockHandle vmBlock, void **elemPtr);
word __pascal HUGEARRAYNEXT(void **elemPtr, word *size);
word __pascal HUGEARRAYPREV(void **elemPtr1, void **elemPtr2, word *size);
void __pascal HUGEARRAYREPLACE(VMFileHandle vmFile, VMBlockHandle vmBlock, word numElem, dword elemNum, const void *initData);
void __pascal HUGEARRAYRESIZE(VMFileHandle vmFile, VMBlockHandle vmBlock, dword elemNum, word newSize);
void __pascal HUGEARRAYUNLOCK(void *elemPtr);
void __pascal HUGEARRAYUNLOCKDIR(void *elemPtr);
Boolean __pascal HUGELMEMALLOCLOCK(HugeLMemHandle handle, word chunkSize, word timeout, optr *newBufferOptr);
HugeLMemHandle __pascal HUGELMEMCREATE(word maxBlocks, word minSize, word maxSize);
Boolean __pascal HUGELMEMDESTROY(HugeLMemHandle handle);
void __pascal HUGELMEMFORCEDESTROY(HugeLMemHandle handle);
Boolean __pascal HUGELMEMFREE(optr hugeLMemOptr);
void *__pascal HUGELMEMLOCK(MemHandle hugeLMemOptr);
Boolean __pascal HUGELMEMREALLOC(optr hugeLMemOptr, word size);
void __pascal HUGELMEMUNLOCK(MemHandle handle);
MACRO_HUIF HUIF_FLUSHING_QUEUE;
MACRO_HUIF HUIF_HOLD_UP_MODE_DISABLED;
MACRO_HUM HUM_MANUAL;
MACRO_HUM HUM_NOW;
MACRO_HWRLIB HWRLIB_PROTO_MAJOR;
MACRO_HWRLIB_PROTO HWRLIB_PROTO_MAJOR_FOR_2_1;
MACRO_HWRLIB_PROTO HWRLIB_PROTO_MINOR;
MACRO_HWRLS_CAP HWRLS_CAP_LOCK;
MACRO_HWRLS HWRLS_EQN_LOCK;
MACRO_HWRLS_NUM HWRLS_NUM_LOCK;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_ADD_POINT;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_ADD_POINTS;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_BEGIN_INTERACTION;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_DISABLE_CHAR_RANGE;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_DO_GESTURE_RECOGNITION;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_DO_MULTIPLE_CHAR_RECOGNITION;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_DO_SINGLE_CHAR_RECOGNITION;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_ENABLE_CHAR_RANGE;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_END_INTERACTION;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_GET_CHAR_BOUNDS;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_GET_GESTURE_BOUNDS;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_GET_HWR_MANUF_ID;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_RESET;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_RESET_MACRO;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_SET_CHAR_FILTER_CALLBACK;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_SET_CONTEXT;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_SET_LANGUAGE;
$56E1EFDEEEDE42C14FC7F4BC14600B31 HWRR_SET_STRING_FILTER_CALLBACK;
MACRO_HWRTSS HWRTSS_CASE;
MACRO_HWRTSS HWRTSS_DOWNCASE;
MACRO_HWRTSS HWRTSS_EXTENDED;
MACRO_HWRTSS HWRTSS_NONE;
MACRO_HWRTSS HWRTSS_PUNCTUATION;
MACRO_HWRLIB_PROTO HWR_NUMBER_RESERVED_ENTRIES;
MACRO_HWRLIB_PROTO HWR_STRING_ESCAPE_VALUE;
MemHandle __pascal HYPHENATE(char *wordToHyphenate, word shortest);
double __pascal HYPOT(double x, double y);
void __pascal IACPBINDTOKEN(const GeodeToken *token, const char *appPath);
$8F54777DAD6E32D16DCFEAC57A832A2E IACPCE_CANNOT_FIND_SERVER;
$8F54777DAD6E32D16DCFEAC57A832A2E IACPCE_NO_SERVER;
MACRO_IACPCF IACPCF_CLIENT_OD_SPECIFIED;
MACRO_IACPCF IACPCF_FIRST_ONLY;
MACRO_IACPCF IACPCF_OBEY_LAUNCH_MODEL;
MACRO_IACPCF IACPCF_SERVER_MODE;
MACRO_IACPCF IACPCF_SERVER_MODE_OFFSET;
IACPConnection __pascal IACPCONNECT(GeodeToken *list, IACPConnectFlags flags, MemHandle appLaunchBlock, optr client, word *numServersPtr);
IACPConnection __pascal IACPCONNECTTODOCUMENTSERVER(const char far *pathname, const char far *filename, DiskHandle disk, IACPConnectFlags flags, optr client);
MemHandle __pascal IACPCREATEDEFAULTLAUNCHBLOCK(word appMode);
void __pascal IACPFINISHCONNECT(IACPConnection connection, optr server);
dword __pascal IACPGETDOCUMENTID(const char far *pathname, const char far *filename, DiskHandle *disk);
word __pascal IACPGETSERVERNUMBER(IACPConnection connection, optr server);
MemHandle __pascal IACPLOCATESERVER(const GeodeToken *token);
void __pascal IACPLOSTCONNECTION(optr oself, IACPConnection connection);
void __pascal IACPREGISTERDOCUMENT(optr server, word disk, dword fileID);
void __pascal IACPREGISTERSERVER(GeodeToken *list, optr server, IACPServerMode mode, IACPServerFlags flags);
MACRO_IACPSF IACPSF_MAILBOX_DONT_NOTIFY_USER;
MACRO_IACPSM IACPSF_MULTIPLE_INSTANCES;
void __pascal IACPSHUTDOWN(IACPConnection connection, optr server);
void __pascal IACPSHUTDOWNALL(optr obj);
MACRO_IACPSM IACPSM_IN_FLUX;
MACRO_IACPSM IACPSM_NOT_USER_INTERACTIBLE;
MACRO_IACPSM IACPSM_USER_INTERACTIBLE;
$46ECFF6947D6D2B43D020C7192BBA68C IACPS_CLIENT;
$46ECFF6947D6D2B43D020C7192BBA68C IACPS_SERVER;
void __pascal IACPUNBINDTOKEN(const GeodeToken *token);
void __pascal IACPUNREGISTERDOCUMENT(optr server, word disk, dword fileID);
void __pascal IACPUNREGISTERSERVER(GeodeToken *list, optr server);
MACRO_IACP IACP_NO_CONNECTION;
MACRO_IBS IBS_1;
MACRO_IBS IBS_16;
MACRO_IBS IBS_2;
MACRO_IBS IBS_4;
MACRO_IBS IBS_8;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_CUSTOM_BACKGROUND;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_LARGE_CROSS_SECTION;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_LARGE_GRID;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_MEDIUM_CROSS_SECTION;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_MEDIUM_GRID;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_MEDIUM_LINED_PAPER;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_MEDIUM_STENO_PAPER;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_NARROW_LINED_PAPER;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_NARROW_STENO_PAPER;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_NO_BACKGROUND;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_PHONE_MESSAGE;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_SMALL_CROSS_SECTION;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_SMALL_GRID;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_TO_DO_LIST;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_WIDE_LINED_PAPER;
$026EEFCE7DA9673F8CD98A8C1074C125 IBT_WIDE_STENO_PAPER;
void __pascal ICADDUSER(MemHandle icBuff, char *addWord, SpellResult *spellResult, UserResult *userResult);
MACRO_XLAT_TOKEN_FONT ICA_IGNORE_INPUT;
MACRO_ICA ICA_NON_DOCUMENT_IMPORT;
MemHandle __pascal ICBUILDUSERLIST(MemHandle icBuff);
Boolean __pascal ICCHECKFOREMBEDDEDPUNCTUATION(MemHandle icBuff);
SpellResult __pascal ICCHECKWORD(MemHandle icBuff, char *lookupWord);
void __pascal ICDELETEUSER(MemHandle icBuff, char *deleteWord, SpellResult *spellResult, UserResult *userResult);
MACRO_ICEF ICEF_PERMANENT;
SpellResult __pascal ICEXIT(MemHandle icBuff);
MACRO_ICF ICF_ERASER_TOOL;
MACRO_ICO ICF_MARK_DIRTY;
MACRO_ICF_OPTIONS ICF_OPTIONS;
MACRO_ICF ICF_PENCIL_TOOL;
MACRO_ICF ICF_SELECTION_TOOL;
void __pascal ICGETALTERNATE(MemHandle icBuff, word index, char *original, char *alternate);
SpellResult __pascal ICGETANAGRAMS(MemHandle icBuff, char *lookupWord, word minimumLength);
void __pascal ICGETERRORFLAGS(MemHandle icBuff, SpellErrorFlags *errorFlags, SpellErrorFlagsHigh *errorFlagsHigh);
StandardLanguage __pascal ICGETLANGUAGE(MemHandle iCBuff);
word __pascal ICGETNUMALTS(MemHandle icBuff);
void __pascal ICGETTEXTOFFSETS(MemHandle icBuff, word *firstOffset, word *lastOffset);
SpellResult __pascal ICGETWILDCARDS(MemHandle icBuff, char *lookupWord);
void __pascal ICIGNORE(MemHandle icBuff, char *ignoreWord);
SpellResult __pascal ICINIT(MemHandle *icBuff);
MACRO_ICO ICO_AFTER_REFERENCE;
MACRO_ICO ICO_BEFORE_REFERENCE;
MACRO_ICO ICO_FIRST;
MACRO_ICO ICO_LAST;
void __pascal ICRESETIGNORE(MemHandle icBuff);
void __pascal ICRESETSPELLCHECK(MemHandle icBuff);
void __pascal ICSETTASK(MemHandle icBuff, SpellTask spellTask);
word __pascal ICSPL(MemHandle icBuff, char *string);
void __pascal ICSTOPCHECK(MemHandle icBuff);
MACRO_ICTF ICTF_ERASER_TOOL;
MACRO_ICTF ICTF_PENCIL_TOOL;
MACRO_ICTF ICTF_SELECTION_TOOL;
void __pascal ICUPDATEUSER(MemHandle icBuff);
$C58401E689F132956D1A0BBFFD9FEFDA IC_APPLY;
MACRO_IC_CHANGE IC_CANCEL_POPUP_LIST;
MACRO_IC_CHANGE IC_CHANGE;
MACRO_IC IC_CUSTOM_START;
MACRO_IC_DEFAULT IC_DEFAULT_FEATURES;
MACRO_IC_DEFAULT_TOOLBOX IC_DEFAULT_TOOLBOX_FEATURES;
$C58401E689F132956D1A0BBFFD9FEFDA IC_DISMISS;
$C58401E689F132956D1A0BBFFD9FEFDA IC_EXIT;
$C58401E689F132956D1A0BBFFD9FEFDA IC_HELP;
MACRO_IC_NO IC_IEEE488;
$C58401E689F132956D1A0BBFFD9FEFDA IC_INTERACTION_COMPLETE;
$C58401E689F132956D1A0BBFFD9FEFDA IC_NO;
MACRO_IC_NO IC_NO_IEEE488;
$C58401E689F132956D1A0BBFFD9FEFDA IC_NULL;
$C58401E689F132956D1A0BBFFD9FEFDA IC_OK;
$C58401E689F132956D1A0BBFFD9FEFDA IC_RESET;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_ALTERNATE;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_BAD_LANG;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_ERR;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_FOUND;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_HYP_ALT;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_IGNORED;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_INVALID;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_NOMEM;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_NOT_FOUND;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_NO_OPEN;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_NO_USER_DICT;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_OK;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_PRE_PROC;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_USR_BRK;
$BAA0B5F1DB1BCC07071E1163FBE13929 IC_RET_WILD;
$C58401E689F132956D1A0BBFFD9FEFDA IC_STOP;
$C58401E689F132956D1A0BBFFD9FEFDA IC_YES;
MACRO_IDBDI IDBDI_folder;
MACRO_IDC IDC_FONT;
MACRO_IDC IDC_GRAPHICS;
MACRO_IDC IDC_SPREADSHEET;
MACRO_IDC IDC_TEXT;
MACRO_IDR IDR_DATA_ON_DISCONNECTED_LSAP;
MACRO_IDR IDR_FAILED_TO_ESTABLISH_IRLAP_CONNECTION;
MACRO_IDR IDR_IRLAP_RESET;
MACRO_IDR IDR_LINK_MANAGEMENT_DISCONNECT;
MACRO_IDR IDR_NON_RESPONSIVE_LM_MUX_CLIENT;
MACRO_IDR IDR_NO_AVAILABLE_LM_MUX_CLIENT;
MACRO_IDR IDR_UNEXPECTED_IRLAP_DISCONNECT;
MACRO_IDR IDR_UNSPECIFIED;
MACRO_IDR IDR_USER_REQUEST;
MACRO_IDSA IDSA_COMPUTER;
MACRO_IDS IDSA_EXTENDED;
MACRO_IDSA IDSA_FAX;
MACRO_IDSA IDSA_LAN_ACCESS;
MACRO_IDSA IDSA_MODEM;
MACRO_IDSA IDSA_PDA;
MACRO_IDSA IDSA_PNP_COMPATIBLE;
MACRO_IDSA IDSA_PRINTER;
MACRO_IDSB IDSB_EXTENDED;
MACRO_IDSB IDSB_FILE_SERVER;
MACRO_IDSB IDSB_IRCOMM;
MACRO_IDSB IDSB_TELEPHONY;
MACRO_IDST IDST_DELETE_OBJECTS_SHRUNK_TO_ZERO_SIZE;
MACRO_IDST IDST_MOVE_OBJECTS_BELOW_AND_RIGHT_OF_INSERT_POINT_OR_DELETED_SPACE;
MACRO_IDST IDST_MOVE_OBJECTS_INSIDE_DELETED_SPACE_BY_AMOUNT_DELETED;
MACRO_IDST IDST_MOVE_OBJECTS_INTERSECTING_DELETED_SPACE;
MACRO_IDST IDST_RESIZE_OBJECTS_INTERSECTING_SPACE;
MACRO_IDS IDS_CACHED;
MACRO_IDS IDS_DISCOVERY;
MACRO_IDS IDS_PASSIVE;
MACRO_IDT IDT_ADDRESS_RESOLUTION;
MACRO_IDT IDT_DISCOVERY;
$F5B8E4070C0415943F92C37F5DCB1F53 IET_DISK_FULL;
$F5B8E4070C0415943F92C37F5DCB1F53 IET_MEM_ERROR;
$F5B8E4070C0415943F92C37F5DCB1F53 IET_NOT_FOUND;
$F5B8E4070C0415943F92C37F5DCB1F53 IET_OK;
$F5B8E4070C0415943F92C37F5DCB1F53 IET_OPEN_ERROR;
$F5B8E4070C0415943F92C37F5DCB1F53 IET_SHARE;
$60108CF06843D5A22A8502A28473CEFC IE_ALREADY_CONNECTED;
$60108CF06843D5A22A8502A28473CEFC IE_DISCONNECT_INDICATION;
$60108CF06843D5A22A8502A28473CEFC IE_IAS_CONNECTED_TO_ANOTHER_ADDRESS;
$60108CF06843D5A22A8502A28473CEFC IE_INCOMING_CONNECTION;
$60108CF06843D5A22A8502A28473CEFC IE_LSAP_DISCONNECTED;
$60108CF06843D5A22A8502A28473CEFC IE_LSAP_NOT_CONNECTED_TO_IAS;
$60108CF06843D5A22A8502A28473CEFC IE_LSAP_NOT_DISCONNECTED;
$60108CF06843D5A22A8502A28473CEFC IE_LSAP_SEL_IN_USE;
$60108CF06843D5A22A8502A28473CEFC IE_NO_FREE_LSAP_SEL;
$60108CF06843D5A22A8502A28473CEFC IE_RESPONSE_WITHOUT_INDICATION;
$60108CF06843D5A22A8502A28473CEFC IE_SUCCESS;
$60108CF06843D5A22A8502A28473CEFC IE_TTP_TX_QUEUE_FULL;
$60108CF06843D5A22A8502A28473CEFC IE_UNABLE_TO_LOAD_IRLAP_DRIVER;
MACRO_IFCC IFCC_DOWNCASE;
MACRO_IFCC IFCC_INTACT;
MACRO_IFCC IFCC_UPCASE;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_CURRENCY_FORMAT;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_DATE_TIME_FORMAT;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_INK_THICKNESS;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_NUMBER_FORMAT;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_OWNER_INFO;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_PUNCTUATION;
$62BEE5CAD5A9E5876ED46BA0CE1CE619 IFE_SYSTEM_SOUND;
$9F04C1CBC8BC8F6622899A31234C2F39 IFN_EMAIL_RECEIVED;
$9F04C1CBC8BC8F6622899A31234C2F39 IFN_FAX_RECEIVED;
$9F04C1CBC8BC8F6622899A31234C2F39 IFN_SMS_RECEIVED;
MACRO_IFCC IFRF_CHAR_CONVERT;
MACRO_IFRF_CHAR IFRF_CHAR_CONVERT_OFFSET;
MACRO_IFRF IFRF_FIRST_ONLY;
MACRO_IFRF IFRF_READ_ALL;
MACRO_IFRF_SIZE IFRF_SIZE;
MACRO_IF_BCAST IF_BCAST;
MACRO_IF IF_BITSIZE;
MACRO_IF IF_BORDER;
MACRO_IF2 IF_CONTROLLED;
MACRO_IF2 IF_DIRTY;
MACRO_IF2 IF_HAS_SYS_TARGET;
MACRO_IF2 IF_HAS_TARGET;
MACRO_IF2 IF_HAS_UNDO;
MACRO_IF2 IF_INVALIDATE_ERASURES;
MACRO_IF_BCAST IF_MCAST;
MACRO_PCCEP IF_MOUSE_FLAGS;
MACRO_IF2 IF_ONLY_CHILD_OF_CONTENT;
MACRO_IF2 IF_SELECTING;
MACRO_IGVBCRC IGVBCRC_IRLMP_ERROR;
MACRO_IGVBCRC IGVBCRC_NO_SUCH_ATTRIBUTE;
MACRO_IGVBCRC IGVBCRC_NO_SUCH_CLASS;
MACRO_IGVBCRC IGVBCRC_SUCCESS;
MACRO_IICSC IICSC_ASCII;
MACRO_IICSC IICSC_ISO_8859_1;
MACRO_IICSC IICSC_ISO_8859_2;
MACRO_IICSC IICSC_ISO_8859_3;
MACRO_IICSC IICSC_ISO_8859_4;
MACRO_IICSC IICSC_ISO_8859_5;
MACRO_IICSC IICSC_ISO_8859_6;
MACRO_IICSC IICSC_ISO_8859_7;
MACRO_IICSC IICSC_ISO_8859_8;
MACRO_IICSC IICSC_ISO_8859_9;
MACRO_IICSC IICSC_UNICODE;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_CONNECT_CONFIRMATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_CONNECT_INDICATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_DATA_INDICATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_DISCONNECT_INDICATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_DISCOVER_DEVICES_CONFIRMATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_DISCOVER_DEVICES_INDICATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_GET_VALUE_BY_CLASS_CONFIRMATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_LAST_VALUE;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_STATUS_CONFIRMATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_STATUS_INDICATION;
$328EBE8192CE36A2CC4629D9F54C7487 IIC_UDATA_INDICATION;
$E7E3640A076A6B6E83046A83445D1A75 IIN_CALL_BARRING_ACTIVE;
$E7E3640A076A6B6E83046A83445D1A75 IIN_CALL_CHARGE_LIMIT_REACHED;
$E7E3640A076A6B6E83046A83445D1A75 IIN_CHECK_OPERATOR_SERVICES;
$E7E3640A076A6B6E83046A83445D1A75 IIN_DATA_CALL_CREATION_ERROR_BY_OTHER_CALL;
$E7E3640A076A6B6E83046A83445D1A75 IIN_INCOMING_CALLS_NOT_ALLOWED_BY_CUG;
$E7E3640A076A6B6E83046A83445D1A75 IIN_INVALID_PHONE_NUMBER;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NETWORK_BUSY;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NETWORK_FAILURE;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NO_ANSWER;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NO_SERVICE;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NO_SIM;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NUMBER_BUSY;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NUMBER_CHANGED;
$E7E3640A076A6B6E83046A83445D1A75 IIN_NUMBER_NOT_IN_FIXED_DIALLING_LIST;
$E7E3640A076A6B6E83046A83445D1A75 IIN_ONLY_CALLS_WITHIN_CUG_ALLOWED;
$E7E3640A076A6B6E83046A83445D1A75 IIN_OPERATION_NOT_ALLOWED_BY_NETWORK;
$E7E3640A076A6B6E83046A83445D1A75 IIN_PHONE_OFF;
$E7E3640A076A6B6E83046A83445D1A75 IIN_SERVICE_NOT_PROVIDED_BY_NETWORK;
$E7E3640A076A6B6E83046A83445D1A75 IIN_SIM_CALL_COST_LIMIT_EXCEEDED;
$E7E3640A076A6B6E83046A83445D1A75 IIN_SIM_REJECTED;
$E7E3640A076A6B6E83046A83445D1A75 IIN_TEMPORARY_NETWORK_FAILURE;
MACRO_IIVT IIVT_INTEGER;
MACRO_IIVT IIVT_MISSING;
MACRO_IIVT IIVT_OCTET_SEQUENCE;
MACRO_IIVT IIVT_USER_STRING;
$75FCCB57A2565DE34BE8C20CA7D4E9CF IMAGE_MENU_ADD_BOOKMARK;
$75FCCB57A2565DE34BE8C20CA7D4E9CF IMAGE_MENU_MAX;
MACRO_IMCF IMCF_MAP;
MACRO_IMC IMC_DEFAULT_FEATURES;
MACRO_IMC IMC_DEFAULT_TOOLBOX_FEATURES;
MACRO_IMC_MAP IMC_MAP_MONIKER_SIZE;
MACRO_IMF IMF_EXPORT;
MACRO_IMF IMF_IMPORT;
TransErrorInfo *__pascal IMPEXCREATETEMPFILE(TransErrorInfo *__return_ptr __struct_ptr retstr, char *buffer, word fileType, FileHandle *file);
TransErrorInfo *__pascal IMPEXDELETETEMPFILE(TransErrorInfo *__return_ptr __struct_ptr retstr, const char *buffer, FileHandle tempfile, word fileType);
TransErrorInfo *__pascal IMPEXEXPORTTOMETAFILE(TransErrorInfo *__return_ptr __struct_ptr retstr, Handle xlatLib, word routine, VMFileHandle xferFile, FileHandle metafile, dword xferFormat, word arg1, word arg2);
void __pascal IMPEXIMPORTEXPORTCOMPLETED(ImpexTranslationParams *itParams);
TransErrorInfo *__pascal IMPEXIMPORTFROMMETAFILE(TransErrorInfo *__return_ptr __struct_ptr retstr, Handle xlatLib, word routine, VMFileHandle xferFile, FileHandle metafile, dword *xferFormat, word arg1, word arg2);
Boolean __pascal IMPEXUPDATEIMPORTEXPORTSTATUS(const char *msgStr, word percent);
MACRO_IMPEX IMPEX_TEMP_NATIVE_FILE;
MACRO_DFNU IMPEX_TEMP_VM_FILE;
MACRO_IMPORTCF IMPORTCF_BASIC;
MACRO_IMPORTCF IMPORTCF_FILE_MASK;
MACRO_IMPORTCF IMPORTCF_FORMAT_OPTIONS;
MACRO_IMPORTCF IMPORTCF_GLYPH;
MACRO_IMPORTCF IMPORTCF_IMPORT_TRIGGER;
MACRO_IMPORTCF IMPORTCF_PREVIEW_TRIGGER;
MACRO_IMPORTCTF IMPORTCTF_DIALOG_BOX;
MACRO_IMPORTC IMPORTC_DEFAULT_FEATURES;
MACRO_IMPORTC_DEFAULT IMPORTC_DEFAULT_TOOLBOX_FEATURES;
MACRO_IMSG_OK IMSG_BIT_ERROR;
MACRO_IMSG_OK IMSG_CANCEL_OK;
MACRO_IMSG_ENABLE IMSG_CANCEL_OPERATION;
MACRO_IMSG_COLORS IMSG_COLORS_ABSENT;
MACRO_IMSG_COLORS IMSG_COLORS_PRESENT;
MACRO_IMSG_ENABLE IMSG_ENABLE_OPERATION;
MACRO_IMSG_COLORS IMSG_GRABBING_UNUSED;
MACRO_IMSG_STEPLESS IMSG_IDCT_SCALING_2;
MACRO_IMSG_STEPLESS IMSG_IDCT_SCALING_4;
MACRO_IMSG_STEPLESS IMSG_IDCT_SCALING_8;
MACRO_IMSG IMSG_IMAGE_PROPERTIES;
MACRO_IMSG_OK IMSG_INVALID_COMBINATION;
MACRO_IMSG_OK IMSG_INVALID_PARAMETER;
MACRO_IMSG_JPG IMSG_JPG;
MACRO_IMSG_STEPLESS IMSG_NO_SCALING;
MACRO_IMSG_Q IMSG_NO_SIZE_CONTROL;
MACRO_IMSG_OK IMSG_OK;
MACRO_IMSG IMSG_OUTPUT_JPG;
MACRO_IMSG IMSG_OUTPUT_RGB;
MACRO_IMSG IMSG_OUTPUT_YUV;
MACRO_IMSG_OK IMSG_OUT_OF_MEMORY;
MACRO_IMSG_REMOVE IMSG_PRESERVE_COLORS;
MACRO_IMSG_Q IMSG_Q_CONTROL;
MACRO_IMSG_OK IMSG_READ_ERROR;
MACRO_IMSG_REMOVE IMSG_REMOVE_COLORS;
MACRO_IMSG_JPG IMSG_RGB_BITMAP;
MACRO_IMSG_Q IMSG_SIZE_CONTROL;
MACRO_IMSG_STEPLESS IMSG_STEPLESS_SCALING;
MACRO_IMSG_OK IMSG_UNSUPPORTED;
MACRO_IMSG_OK IMSG_WRITE_ERROR;
MACRO_IMSG_JPG IMSG_YUV_BITMAP;
MACRO_INCT INCT_INDICATOR_CALL_TYPE_DATA;
MACRO_INCT INCT_INDICATOR_CALL_TYPE_FAX;
MACRO_INCT INCT_INDICATOR_CALL_TYPE_NONE;
MACRO_INCT INCT_INDICATOR_CALL_TYPE_VOICE;
MACRO_INDICATOR INDICATOR_FREE_SPACE;
MACRO_INDICATOR_MAX INDICATOR_MAX_DOCUMENT_STRING_LENGTH;
void INITFILECOMMIT(void);
void __pascal INITFILEDELETECATEGORY(const char *category);
void __pascal INITFILEDELETEENTRY(const char *category, const char *key);
void __pascal INITFILEDELETESTRINGSECTION(const char *category, const char *key, word stringNum);
Boolean __pascal INITFILEENUMSTRINGSECTION(const char *category, const char *key, InitFileReadFlags flags, Boolean (__pascal *callback)(const char *stringSection, word sectionNum, void *enumData), void *enumData);
dword INITFILEGETTIMELASTMODIFIED(void);
word __pascal INITFILEGRAB(MemHandle mem, FileHandle fh, word size);
void __pascal INITFILEMAKECANONICKEYCATEGORY(char *keyCat, const TCHAR *src);
Boolean __pascal INITFILEREADALLINTEGER(const char *category, const char *key, Boolean (__pascal *callback)(word integerValue, void *enumData), void *enumData);
Boolean __pascal INITFILEREADBOOLEAN(const char *category, const char *key, Boolean *bool);
Boolean __pascal INITFILEREADDATABLOCK(const char *category, const char *key, MemHandle *block, word *dataSize);
Boolean __pascal INITFILEREADDATABUFFER(const char *category, const char *key, void *buffer, word bufSize, word *dataSize);
Boolean __pascal INITFILEREADINTEGER(const char *category, const char *key, word *i);
Boolean __pascal INITFILEREADSTRINGBLOCK(const char *category, const char *key, MemHandle *block, InitFileReadFlags flags, word *dataSize);
Boolean __pascal INITFILEREADSTRINGBUFFER(const char *category, const char *key, char *buffer, InitFileReadFlags flags, word *dataSize);
Boolean __pascal INITFILEREADSTRINGSECTIONBLOCK(const char *category, const char *key, word section, MemHandle *block, InitFileReadFlags flags, word *dataSize);
Boolean __pascal INITFILEREADSTRINGSECTIONBUFFER(const char *category, const char *key, word section, char *buffer, InitFileReadFlags flags, word *dataSize);
void INITFILERELEASE(void);
Boolean INITFILEREVERT(void);
Boolean INITFILESAVE(void);
void __pascal INITFILEWRITEBOOLEAN(const char *category, const char *key, Boolean bool);
void __pascal INITFILEWRITEDATA(const char *category, const char *key, const void *buffer, word bufSize);
void __pascal INITFILEWRITEINTEGER(const char *category, const char *key, word value);
void __pascal INITFILEWRITESTRING(const char *category, const char *key, const char *str);
void __pascal INITFILEWRITESTRINGSECTION(const char *category, const char *key, const char *string);
MACRO_INI INI_CATEGORY_BUFFER_SIZE;
DBGroupAndItem __pascal INKCOMPRESS(MemHandle inkData, VMFileHandle file, DBGroupAndItem destItem);
void __pascal INKDBGETDISPLAYINFO(InkDBDisplayInfo *RetValue, VMFileHandle fh);
dword __pascal INKDBGETHEADFOLDER(VMFileHandle fh);
void __pascal INKDBINIT(VMFileHandle fh);
void __pascal INKDBSETDISPLAYINFO(VMFileHandle fh, dword ofh, dword note, word page);
MemHandle __pascal INKDECOMPRESS(VMFileHandle file, DBGroupAndItem srcItem);
dword __pascal INKFOLDERCREATESUBFOLDER(dword tag, VMFileHandle fh);
void __pascal INKFOLDERDELETE(dword tag, VMFileHandle fh);
word __pascal INKFOLDERDEPTHFIRSTTRAVERSE(dword rfldr, VMFileHandle fh, Boolean (__pascal *callback)(dword fldr, VMFileHandle fh, word *info), word *info);
void __pascal INKFOLDERDISPLAYCHILDINLIST(dword fldr, VMFileHandle fh, optr list, word entry, Boolean displayFolders);
Boolean __pascal INKFOLDERGETCHILDINFO(dword fldr, VMFileHandle fh, word child, dword *childID);
word __pascal INKFOLDERGETCHILDNUMBER(dword fldr, VMFileHandle fh, dword note);
dword __pascal INKFOLDERGETCONTENTS(dword tag, VMFileHandle fh, DBGroupAndItem *subFolders);
dword __pascal INKFOLDERGETNUMCHILDREN(dword fldr, VMFileHandle fh);
void __pascal INKFOLDERMOVE(dword fldr, dword pfldr);
void __pascal INKFOLDERSETTITLE(dword fldr, VMFileHandle fh, const char *name);
void __pascal INKFOLDERSETTITLEFROMTEXTOBJECT(dword fldr, VMFileHandle fh, optr text);
Handle __pascal INKGETDOCCUSTOMGSTRING(VMFileHandle dbfh);
word __pascal INKGETDOCGSTRING(VMFileHandle dbfh);
void __pascal INKGETDOCPAGEINFO(PageSizeReport *psr, VMFileHandle fh);
dword __pascal INKGETPARENTFOLDER(dword tag, VMFileHandle fh);
word __pascal INKGETTITLE(dword tag, VMFileHandle fh, char *dest);
void __pascal INKNOTECOPYMONIKER(dword title, optr list, word type, word entry);
dword __pascal INKNOTECREATE(dword tag, VMFileHandle fh);
word __pascal INKNOTECREATEPAGE(dword tag, VMFileHandle fh, word page);
void __pascal INKNOTEDELETE(dword tag, VMFileHandle fh);
MemHandle __pascal INKNOTEFINDBYKEYWORDS(VMFileHandle fh, const char *strings, word opt);
MemHandle __pascal INKNOTEFINDBYTITLE(char *string, byte opt, Boolean body, VMFileHandle fh);
dword __pascal INKNOTEGETCREATIONDATE(dword note, VMFileHandle fh);
word __pascal INKNOTEGETKEYWORDS(dword tag, VMFileHandle fh, char *text);
dword __pascal INKNOTEGETMODIFICATIONDATE(dword note, VMFileHandle fh);
NoteType __pascal INKNOTEGETNOTETYPE(dword note, VMFileHandle fh);
word __pascal INKNOTEGETNUMPAGES(dword item);
dword __pascal INKNOTEGETPAGES(dword tag, VMFileHandle fh);
void __pascal INKNOTELOADPAGE(dword tag, VMFileHandle fh, word page, optr obj, word type);
void __pascal INKNOTEMOVE(dword tag, dword pfoldr, VMFileHandle fh);
void __pascal INKNOTESAVEPAGE(dword tag, VMFileHandle fh, word page, optr obj, word type);
void __pascal INKNOTESENDKEYWORDSTOTEXTOBJECT(dword tag, VMFileHandle fh, optr text);
void __pascal INKNOTESETKEYWORDS(dword tag, VMFileHandle fh, const char *text);
void __pascal INKNOTESETKEYWORDSFROMTEXTOBJECT(dword tag, VMFileHandle fh, optr text);
void __pascal INKNOTESETMODIFICATIONDATE(word tdft1, word tdft2, dword note, VMFileHandle fh);
void __pascal INKNOTESETNOTETYPE(dword note, VMFileHandle fh, NoteType nt);
void __pascal INKNOTESETTITLE(dword note, VMFileHandle fh, const char *name);
void __pascal INKNOTESETTITLEFROMTEXTOBJECT(dword note, VMFileHandle fh, optr text);
void __pascal INKSENDTITLETOTEXTOBJECT(dword tag, VMFileHandle fh, optr to);
void __pascal INKSETDOCCUSTOMGSTRING(VMFileHandle dbfh, Handle gh);
void __pascal INKSETDOCGSTRING(VMFileHandle dbfh, word type);
void __pascal INKSETDOCPAGEINFO(PageSizeReport *psr, VMFileHandle fh);
MACRO_INK_DB_MAX_NOTE INK_DB_MAX_NOTE_KEYWORDS_SIZE;
MACRO_INK_DB_MAX INK_DB_MAX_TITLE_SIZE;
MACRO_INK INK_DB_PROTOCOL_MAJOR;
MACRO_INK_DB INK_DB_PROTOCOL_MINOR;
MACRO_INRT INRT_INDICATOR_REFRESH_MISSED_CALLS;
MACRO_INSERT INSERT_COMPUTE_TEXT_LENGTH;
MACRO_INSERT_OK INSERT_FAILED;
MACRO_INSERT_OK INSERT_OK;
MACRO_UI INTERFACE_THREAD_DEF_STACK_SIZE;
MACRO_UI INTERFACE_THREAD_MINIMUM_STACK_SIZE;
MACRO_INVALID INVALID_EVENT_ID;
MACRO_DATABASE INVALID_FIELD_LIST_QUERY;
MACRO_INVISIBLE INVISIBLE_RECORD;
MACRO_IPBR_57600BPS IPBR_115200BPS;
MACRO_IPBR_57600BPS IPBR_19200BPS;
MACRO_IPBR_57600BPS IPBR_2400BPS;
MACRO_IPBR_57600BPS IPBR_38400BPS;
MACRO_IPBR_57600BPS IPBR_57600BPS;
MACRO_IPBR_57600BPS IPBR_9600BPS;
MACRO_DLF_INDEX IPBR_RESERVED;
MACRO_IPBR IPBR_RESERVED_OFFSET;
MACRO_IPDS_1024BYTES IPDS_1024BYTES;
MACRO_IPDS_1024BYTES IPDS_128BYTES;
MACRO_IPDS_1024BYTES IPDS_2048BYTES;
MACRO_IPDS_1024BYTES IPDS_256BYTES;
MACRO_IPDS_1024BYTES IPDS_512BYTES;
MACRO_IPDS_1024BYTES IPDS_64BYTES;
MACRO_IPDS IPDS_RESERVED;
MACRO_IPDS IPDS_RESERVED_OFFSET;
MACRO_IPLTT IPLTT_12SEC;
MACRO_IPLTT IPLTT_16SEC;
MACRO_IPLTT IPLTT_20SEC;
MACRO_IPLTT IPLTT_25SEC;
MACRO_IPLTT IPLTT_30SEC;
MACRO_IPLTT IPLTT_3SEC;
MACRO_IPLTT IPLTT_40SEC;
MACRO_IPLTT IPLTT_8SEC;
MACRO_IPMTA IPMTA_100MS;
MACRO_IPMTA IPMTA_10MS;
MACRO_IPMTA IPMTA_250MS;
MACRO_IPMTA IPMTA_25MS;
MACRO_IPMTA IPMTA_500MS;
MACRO_IPMTA IPMTA_50MS;
MACRO_IPMTA IPMTA_5MS;
MACRO_IPMTA IPMTA_RESERVED;
MACRO_IPMT IPMT_001MS;
MACRO_IPMT IPMT_005MS;
MACRO_IPMT IPMT_01MS;
MACRO_IPMT IPMT_05MS;
MACRO_IPMT IPMT_0MS;
MACRO_IPMT IPMT_10MS;
MACRO_IPMT IPMT_1MS;
MACRO_IPMT IPMT_5MS;
MACRO_IPNB IPNB_0BOF;
MACRO_IPNB IPNB_12BOF;
MACRO_IPNB IPNB_1BOF;
MACRO_IPNB IPNB_24BOF;
MACRO_IPNB IPNB_2BOF;
MACRO_IPNB IPNB_3BOF;
MACRO_IPNB IPNB_48BOF;
MACRO_IPNB IPNB_5BOF;
MACRO_IPWS IPWS_1FRAME;
MACRO_IPWS IPWS_2FRAME;
MACRO_IPWS IPWS_3FRAME;
MACRO_IPWS IPWS_4FRAME;
MACRO_IPWS IPWS_5FRAME;
MACRO_IPWS IPWS_6FRAME;
MACRO_IPWS IPWS_7FRAME;
MACRO_IPWS IPWS_RESERVED;
$2ACED5B9D796D93757AEB7868B198887 IP_ACCORDION;
$2ACED5B9D796D93757AEB7868B198887 IP_ACOUSTIC_BASS;
$2ACED5B9D796D93757AEB7868B198887 IP_ACOUSTIC_BASS_DRUM;
$2ACED5B9D796D93757AEB7868B198887 IP_ACOUSTIC_GRAND_PIANO;
$2ACED5B9D796D93757AEB7868B198887 IP_ACOUSTIC_NYLON_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_ACOUSTIC_SNARE;
$2ACED5B9D796D93757AEB7868B198887 IP_ACOUSTIC_STEEL_GUITAR;
MACRO_IP IP_ADDR_SIZE;
$2ACED5B9D796D93757AEB7868B198887 IP_AGOGO;
$2ACED5B9D796D93757AEB7868B198887 IP_ALTO_SAX;
$2ACED5B9D796D93757AEB7868B198887 IP_APPLAUSE;
$2ACED5B9D796D93757AEB7868B198887 IP_BAG_PIPE;
$2ACED5B9D796D93757AEB7868B198887 IP_BANJO;
$2ACED5B9D796D93757AEB7868B198887 IP_BARITONE_SAX;
$2ACED5B9D796D93757AEB7868B198887 IP_BASSOON;
$2ACED5B9D796D93757AEB7868B198887 IP_BASS_DRUM_1;
$2ACED5B9D796D93757AEB7868B198887 IP_BIRD_TWEET;
$2ACED5B9D796D93757AEB7868B198887 IP_BLOWN_BOTTLE;
$2ACED5B9D796D93757AEB7868B198887 IP_BRASS_SECTION;
$2ACED5B9D796D93757AEB7868B198887 IP_BREATH_NOISE;
$2ACED5B9D796D93757AEB7868B198887 IP_BRIGHT_ACOUSTIC_PIANO;
$2ACED5B9D796D93757AEB7868B198887 IP_CABASA;
$2ACED5B9D796D93757AEB7868B198887 IP_CELESTA;
$2ACED5B9D796D93757AEB7868B198887 IP_CELLO;
$2ACED5B9D796D93757AEB7868B198887 IP_CHINESE_CYMBAL;
$2ACED5B9D796D93757AEB7868B198887 IP_CHOIR_AAHS;
$2ACED5B9D796D93757AEB7868B198887 IP_CHURCH_ORGAN;
$2ACED5B9D796D93757AEB7868B198887 IP_CLARINET;
$2ACED5B9D796D93757AEB7868B198887 IP_CLAVES;
$2ACED5B9D796D93757AEB7868B198887 IP_CLAVICORD;
$2ACED5B9D796D93757AEB7868B198887 IP_CLOSED_HI_HAT;
$2ACED5B9D796D93757AEB7868B198887 IP_CONTRABASS;
$2ACED5B9D796D93757AEB7868B198887 IP_COWBELL;
$2ACED5B9D796D93757AEB7868B198887 IP_CRASH_CYMBAL_1;
$2ACED5B9D796D93757AEB7868B198887 IP_CRASH_CYMBAL_2;
$2ACED5B9D796D93757AEB7868B198887 IP_DISTORTION_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_DRAWBAR_ORGAN;
$2ACED5B9D796D93757AEB7868B198887 IP_DULCIMER;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_CLEAN_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_FINGERED_BASS;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_GRAND_PIANO;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_JAZZ_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_MUTED_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_PIANO_1;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_PIANO_2;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_PICKED_BASS;
$2ACED5B9D796D93757AEB7868B198887 IP_ELECTRIC_SNARE;
$2ACED5B9D796D93757AEB7868B198887 IP_ENGLISH_HORN;
$2ACED5B9D796D93757AEB7868B198887 IP_FIDDLE;
$2ACED5B9D796D93757AEB7868B198887 IP_FLUTE;
$2ACED5B9D796D93757AEB7868B198887 IP_FRENCH_HORN;
$2ACED5B9D796D93757AEB7868B198887 IP_FRETLESS_BASS;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_ATMOSPHERE;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_BRIGHTNESS;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_CRYSTAL;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_ECHOES;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_GOBLINS;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_RAIN;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_SCI_FI;
$2ACED5B9D796D93757AEB7868B198887 IP_FX_SOUNDTRACK;
$2ACED5B9D796D93757AEB7868B198887 IP_GLOCKENSPIEL;
$2ACED5B9D796D93757AEB7868B198887 IP_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_GUITAR_FRET_NOISE;
$2ACED5B9D796D93757AEB7868B198887 IP_GUNSHOT;
$2ACED5B9D796D93757AEB7868B198887 IP_HAND_CLAP;
$2ACED5B9D796D93757AEB7868B198887 IP_HARMONICA;
$2ACED5B9D796D93757AEB7868B198887 IP_HARPSICORD;
$2ACED5B9D796D93757AEB7868B198887 IP_HELICOPTER;
$2ACED5B9D796D93757AEB7868B198887 IP_HIGH_AGOGO;
$2ACED5B9D796D93757AEB7868B198887 IP_HIGH_FLOOR_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_HIGH_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_HI_BONGO;
$2ACED5B9D796D93757AEB7868B198887 IP_HI_MID_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_HI_TIMBALE;
$2ACED5B9D796D93757AEB7868B198887 IP_HI_WOOD_BLOCK;
$2ACED5B9D796D93757AEB7868B198887 IP_HONKY_TONK_PIANO;
$2ACED5B9D796D93757AEB7868B198887 IP_KALIMBA;
$2ACED5B9D796D93757AEB7868B198887 IP_KOTO;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_BASS_LEAD;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_CALLIOPE;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_CHARANG;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_CHIFF;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_FIFTHS;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_SAWTOOTH;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_SQUARE;
$2ACED5B9D796D93757AEB7868B198887 IP_LEAD_VOICE;
$2ACED5B9D796D93757AEB7868B198887 IP_LONG_GUIRO;
$2ACED5B9D796D93757AEB7868B198887 IP_LONG_WHISTLE;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_AGOGO;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_BONGO;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_CONGA;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_FLOOR_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_MID_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_TIMBALE;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_LOW_WOOD_BLOCK;
$2ACED5B9D796D93757AEB7868B198887 IP_MARACAS;
$2ACED5B9D796D93757AEB7868B198887 IP_MARIMBA;
$2ACED5B9D796D93757AEB7868B198887 IP_MELODIC_TOM;
$2ACED5B9D796D93757AEB7868B198887 IP_MUSIC_BOX;
$2ACED5B9D796D93757AEB7868B198887 IP_MUTED_TRUMPET;
$2ACED5B9D796D93757AEB7868B198887 IP_MUTE_CUICA;
$2ACED5B9D796D93757AEB7868B198887 IP_MUTE_HI_CONGA;
$2ACED5B9D796D93757AEB7868B198887 IP_MUTE_TRIANGLE;
$2ACED5B9D796D93757AEB7868B198887 IP_OBOE;
$2ACED5B9D796D93757AEB7868B198887 IP_OCARINA;
$2ACED5B9D796D93757AEB7868B198887 IP_OPEN_CUICA;
$2ACED5B9D796D93757AEB7868B198887 IP_OPEN_HI_CONGA;
$2ACED5B9D796D93757AEB7868B198887 IP_OPEN_HI_HAT;
$2ACED5B9D796D93757AEB7868B198887 IP_OPEN_TRIANGLE;
$2ACED5B9D796D93757AEB7868B198887 IP_ORCHESTRAL_HARP;
$2ACED5B9D796D93757AEB7868B198887 IP_ORCHESTRA_HIT;
$2ACED5B9D796D93757AEB7868B198887 IP_OVERDRIVEN_GUITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_BOWED;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_CHOIR;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_HALO;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_METALLIC;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_NEW_AGE;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_POLYSYNTH;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_SWEEP;
$2ACED5B9D796D93757AEB7868B198887 IP_PAD_WARM;
$2ACED5B9D796D93757AEB7868B198887 IP_PAN_FLUTE;
$2ACED5B9D796D93757AEB7868B198887 IP_PEDAL_HI_HAT;
$2ACED5B9D796D93757AEB7868B198887 IP_PERCUSSIVE_ORGAN;
$2ACED5B9D796D93757AEB7868B198887 IP_PICCOLO;
$2ACED5B9D796D93757AEB7868B198887 IP_PIZZICATO_STRINGS;
$2ACED5B9D796D93757AEB7868B198887 IP_RECORDER;
$2ACED5B9D796D93757AEB7868B198887 IP_REED_ORGAN;
$2ACED5B9D796D93757AEB7868B198887 IP_REVERSE_CYMBAL;
$2ACED5B9D796D93757AEB7868B198887 IP_RIDE_BELL;
$2ACED5B9D796D93757AEB7868B198887 IP_RIDE_CYMBAL_1;
$2ACED5B9D796D93757AEB7868B198887 IP_RIDE_CYMBAL_2;
$2ACED5B9D796D93757AEB7868B198887 IP_ROCK_ORGAN;
$2ACED5B9D796D93757AEB7868B198887 IP_SEASHORE;
$2ACED5B9D796D93757AEB7868B198887 IP_SHAKUHACHI;
$2ACED5B9D796D93757AEB7868B198887 IP_SHAMISEN;
$2ACED5B9D796D93757AEB7868B198887 IP_SHANAI;
$2ACED5B9D796D93757AEB7868B198887 IP_SHORT_GUIRO;
$2ACED5B9D796D93757AEB7868B198887 IP_SHORT_WHISTLE;
$2ACED5B9D796D93757AEB7868B198887 IP_SIDE_STICK;
$2ACED5B9D796D93757AEB7868B198887 IP_SITAR;
$2ACED5B9D796D93757AEB7868B198887 IP_SLAP_BASS_1;
$2ACED5B9D796D93757AEB7868B198887 IP_SLAP_BASS_2;
$2ACED5B9D796D93757AEB7868B198887 IP_SOPRANO_SAX;
$2ACED5B9D796D93757AEB7868B198887 IP_SPLASH_CYMBAL;
$2ACED5B9D796D93757AEB7868B198887 IP_STEEL_DRUMS;
$2ACED5B9D796D93757AEB7868B198887 IP_STRING_ENSAMBLE_1;
$2ACED5B9D796D93757AEB7868B198887 IP_STRING_ENSAMBLE_2;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_BASS_1;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_BASS_2;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_BRASS_1;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_BRASS_2;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_DRUM;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_STRINGS_1;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_STRINGS_2;
$2ACED5B9D796D93757AEB7868B198887 IP_SYNTH_VOICE;
$2ACED5B9D796D93757AEB7868B198887 IP_TAIKO_DRUM;
$2ACED5B9D796D93757AEB7868B198887 IP_TAMBOURINE;
$2ACED5B9D796D93757AEB7868B198887 IP_TANGO_ACCORDION;
$2ACED5B9D796D93757AEB7868B198887 IP_TELEPHONE_RING;
$2ACED5B9D796D93757AEB7868B198887 IP_TENOR_SAX;
$2ACED5B9D796D93757AEB7868B198887 IP_TIMPANI;
$2ACED5B9D796D93757AEB7868B198887 IP_TINKLE_BELL;
$2ACED5B9D796D93757AEB7868B198887 IP_TREMOLO_STRINGS;
$2ACED5B9D796D93757AEB7868B198887 IP_TROMBONE;
$2ACED5B9D796D93757AEB7868B198887 IP_TRUMPET;
$2ACED5B9D796D93757AEB7868B198887 IP_TUBA;
$2ACED5B9D796D93757AEB7868B198887 IP_TUBULAR_BELLS;
$2ACED5B9D796D93757AEB7868B198887 IP_VIBRAPHONE;
$2ACED5B9D796D93757AEB7868B198887 IP_VIBRASLAP;
$2ACED5B9D796D93757AEB7868B198887 IP_VIOLA;
$2ACED5B9D796D93757AEB7868B198887 IP_VIOLIN;
$2ACED5B9D796D93757AEB7868B198887 IP_VOICE_OOHS;
$2ACED5B9D796D93757AEB7868B198887 IP_WHISTLE;
$2ACED5B9D796D93757AEB7868B198887 IP_WOODBLOCK;
$2ACED5B9D796D93757AEB7868B198887 IP_XYLOPHONE;
sword __pascal IRDBADDATTRIBUTE(word objectID, char *attrName, word attrNameSize, word dataType, void *data, word dataLegth);
sword __pascal IRDBCLOSEDATABASE();
sword __pascal IRDBCREATEENTRY(char *classname, word length, word clientHandle, word flags);
sword __pascal IRDBDELETEENTRY(word objectID);
sword __pascal IRDBOPENDATABASE();
IrlmpError __pascal IRLMPCONNECTREQUEST(ClientHandle client, IrlmpConnectArgs1 *connectArgs);
IrlmpError __pascal IRLMPCONNECTRESPONSE(ClientHandle client, IrlmpDataArgs *dataArgs);
IrlmpError __pascal IRLMPDATAREQUEST(ClientHandle client, IrlmpDataArgs *dataArgs);
IrlmpError __pascal IRLMPDISCONNECTIAS(ClientHandle client);
IrlmpError __pascal IRLMPDISCONNECTREQUEST(ClientHandle client, IrlmpDataArgs *dataArgs, word reason);
IrlmpError __pascal IRLMPDISCOVERDEVICESREQUEST(ClientHandle client, word timeSlot);
word __pascal IRLMPGETPACKETSIZE(IrlapParamDataSize dataSize);
IrlmpError __pascal IRLMPGETVALUEBYCLASSREQUEST(ClientHandle client, IrlmpGetValueByClassRequestArgs *dataArgs);
IrlmpError __pascal IRLMPREGISTER(IrlmpLsapSel *lsapSel, word extraData, void (__pascal *callback)(ClientHandle client, IrlmpIndicationOrConfirmation type, word extra, dword data, word status), ClientHandle *clientHandle);
IrlmpError __pascal IRLMPSTATUSREQUEST(ClientHandle client);
IrlmpError __pascal IRLMPUDATAREQUEST(ClientHandle client, IrlmpDataArgs *dataArgs);
void __pascal IRLMPUNREGISTER(ClientHandle client);
MACRO_IRLMP IRLMP_ANY_LSAP_SEL;
MACRO_IRLMP_MONITOR IRLMP_BROADCAST_LSAP_SEL;
MACRO_IRLMP_MONITOR IRLMP_CONNECTIONLESS_LSAP_SEL;
MACRO_IRLMP_HEADER IRLMP_HEADER_SIZE;
MACRO_IRLMP_MONITOR IRLMP_IAS_LSAP_SEL;
MACRO_IRLMP_HEADER IRLMP_IAS_MAX_NAME_SIZE;
MACRO_IRLMP_MONITOR IRLMP_MAX_LEGAL_LSAP_SEL;
MACRO_IRLMP_MONITOR IRLMP_MONITOR_LSAP_SEL;
MACRO_IRLMP_MONITOR IRLMP_PENDING_CONNECT;
MACRO_IRLMP_MONITOR IRLMP_XID_DISCOVERY_SAP;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_RECEIVE_CANCEL;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_RECEIVE_EXIT;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_RECEIVE_INIT;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_TRANSMIT_CANCEL;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_TRANSMIT_EXIT;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_TRANSMIT_INIT;
$CCA50C26D593A2CB138ADA813273F847 IRTRE_TRANSMIT_SEND;
$BD26BA738CB61C7296CC4271CFBCE7B4 IRV_DESIRES_INK;
$BD26BA738CB61C7296CC4271CFBCE7B4 IRV_INK_WITH_STANDARD_OVERRIDE;
$BD26BA738CB61C7296CC4271CFBCE7B4 IRV_NO_INK;
$BD26BA738CB61C7296CC4271CFBCE7B4 IRV_NO_REPLY;
$BD26BA738CB61C7296CC4271CFBCE7B4 IRV_WAIT;
int __pascal ISALNUM(unsigned int c);
int __pascal ISALPHA(unsigned int c);
int __pascal ISCNTRL(unsigned int c);
int __pascal ISDIGIT(unsigned int c);
int __pascal ISGRAPH(unsigned int c);
$53C61B125AE057EE6C71A3948F168A4F ISIT_BLOCKED;
$53C61B125AE057EE6C71A3948F168A4F ISIT_CONNECTED;
$53C61B125AE057EE6C71A3948F168A4F ISIT_DISCONNECTED;
$53C61B125AE057EE6C71A3948F168A4F ISIT_OK;
int __pascal ISLOWER(unsigned int c);
Boolean __pascal ISMULTILANGUAGEMODEON();
int __pascal ISPRINT(unsigned int c);
int __pascal ISPUNCT(unsigned int c);
int __pascal ISSPACE(unsigned int c);
int __pascal ISUPPER(unsigned int c);
int __pascal ISXDIGIT(unsigned int c);
MACRO_CB IS_ICON_LEFT;
MACRO_IS IS_ICON_RIGHT;
void __pascal ITOA(int n, TCHAR *s);
$34F5F478C745BEC6E655863B01D07F07 IT_ERASER;
$34F5F478C745BEC6E655863B01D07F07 IT_PENCIL;
$34F5F478C745BEC6E655863B01D07F07 IT_SELECTOR;
$739A06AD2E1482C811284A3E483CBBD9 IT_STANDARD_TABLE;
MACRO_IUTS IUTS_16_SLOT;
MACRO_IUTS IUTS_1_SLOT;
MACRO_IUTS IUTS_6_SLOT;
MACRO_IUTS IUTS_8_SLOT;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_CORRUPTED_SOURCE_FILE;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_CREATE_TEMP_FILE_ERROR;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_OK;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_OUT_OF_MEMORY;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_SOURCE_FILE_ERROR;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_TEMP_FILE_ERROR;
$E2F0EA4473FF1DFCBDC7AB64FF338297 IVDS_UNSUPPORTED_FORMAT;
MACRO_IXC IXC_TERMINATE_STROKE;
MACRO_JCF JCF_CENTER;
MACRO_JCF JCF_FULL;
MACRO_JCF JCF_FULL_CHAR;
MACRO_JCF JCF_LEFT;
MACRO_JCF JCF_RIGHT;
MACRO_JCTF JCTF_CENTER;
MACRO_JCTF JCTF_FULL;
MACRO_JCTF JCTF_FULL_CHAR;
MACRO_JCTF JCTF_LEFT;
MACRO_JCTF JCTF_RIGHT;
MACRO_JC JC_DEFAULT_FEATURES;
MACRO_JC_DEFAULT JC_DEFAULT_TOOLBOX_FEATURES;
MACRO_J J_CENTER;
MACRO_J J_FULL;
MACRO_J2 J_GENERAL;
MACRO_J J_LEFT;
MACRO_J J_RIGHT;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_BELGIUM;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_BELGIUM_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_CANADA;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_CANADA_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_DENMARK;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_DENMARK_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_FRANCE;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_FRANCE_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_GERMANY;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_GERMANY_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_ITALY;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_ITALY_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_LATIN_AMERICA;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_LATIN_AMERICA_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_NETHERLANDS;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_NETHERLANDS_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_NORWAY;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_NORWAY_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_PORTUGAL;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_PORTUGAL_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SPAIN;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SPAIN_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SWEDEN;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SWEDEN_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SWISS_FRENCH;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SWISS_FRENCH_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SWISS_GERMAN;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_SWISS_GERMAN_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_UK;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_UK_EXTD;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_US;
$652408E18CC072C5C9713F4E372F8F5A KEYMAP_US_EXTD;
$FCD3403156F5376418CB16E7D7CFE9A6 KO_KEYBOARD_EMBEDDED;
$FCD3403156F5376418CB16E7D7CFE9A6 KO_KEYBOARD_REQUIRED;
$FCD3403156F5376418CB16E7D7CFE9A6 KO_NO_KEYBOARD;
MACRO_PASSWORD KRF_PREVENT_PASS_THROUGH;
MACRO_KS KS_ALT;
MACRO_KS KS_CHAR_MASK;
MACRO_KS_CHAR_SET KS_CHAR_SET_CONTROL;
MACRO_KS_CHAR_SET KS_CHAR_SET_PRINTABLE;
MACRO_KS KS_CTRL;
MACRO_KS KS_PHYSICAL;
MACRO_KS KS_SHIFT;
MACRO_KT KT_BOTH;
MACRO_KT KT_EXTD;
MACRO_KT KT_NOT_EXTD;
MACRO_LARGEST_COLUMN LARGEST_COLUMN;
MACRO_LARGEST LARGEST_NEGATIVE_COORDINATE;
MACRO_LARGEST LARGEST_POSITIVE_COORDINATE;
MACRO_LARGEST_VISIBLE LARGEST_ROW;
MACRO_LARGEST_VISIBLE LARGEST_VISIBLE_ROW;
MACRO_SMALL2 LARGE_DESIRED_HANDLE_SIZE;
MACRO_LASCF LASCF_CUSTOM;
MACRO_LASCF LASCF_DOUBLE;
MACRO_LASCF LASCF_ONE_AND_A_HALF;
MACRO_LASCF LASCF_SINGLE;
MACRO_LASCF LASCF_TRIPLE;
MACRO_LASCTF LASCTF_DOUBLE;
MACRO_LASCTF LASCTF_ONE_AND_A_HALF;
MACRO_LASCTF LASCTF_SINGLE;
MACRO_LASCTF LASCTF_TRIPLE;
MACRO_LASC LASC_DEFAULT_FEATURES;
MACRO_LASC_DEFAULT LASC_DEFAULT_TOOLBOX_FEATURES;
MACRO_LAST_LINE_END LAST_LINE_END_TYPE;
MACRO_LAST_LINE LAST_LINE_JOIN_TYPE;
MACRO_LAST LAST_MIX_MODE;
MACRO_WCF_MAP_MODE LAYER_PRIO_MODAL;
MACRO_WCF_MAP_MODE LAYER_PRIO_ON_BOTTOM;
MACRO_WCF_MAP_MODE LAYER_PRIO_ON_TOP;
MACRO_WCF_MAP_MODE LAYER_PRIO_STD;
MACRO_LAYOUT LAYOUT_NAME_ARRAY_COLUMN;
MACRO_DATABASE LAYOUT_NAME_LIST;
MACRO_LBDF LBDF_OBJECT;
MACRO_LBDF LBDF_SPRITE;
MACRO_LCF LCF_LOG_UI;
MACRO_LCSDTGF LCSDTGF_NO_CONVERT_STRING_1;
MACRO_LCSDTG LCSDTG_NO_CONVERT_STRING_2;
$18087310102FF466B85E7D6CF648FB54 LCT_ATTACH;
$18087310102FF466B85E7D6CF648FB54 LCT_CLIENT_EXIT;
$18087310102FF466B85E7D6CF648FB54 LCT_CLIENT_THREAD_EXIT;
$18087310102FF466B85E7D6CF648FB54 LCT_DETACH;
$18087310102FF466B85E7D6CF648FB54 LCT_NEW_CLIENT;
$18087310102FF466B85E7D6CF648FB54 LCT_NEW_CLIENT_THREAD;
MACRO_LC LC_DEFAULT_FEATURES;
MACRO_DU LDF_FULL_NAMES;
MACRO_LDF LDF_PRINT_PLURAL_IF_NEEDED;
MACRO_LD LD_AUSTRALIAN;
MACRO_SL_DEFAULT LD_DEFAULT;
MACRO_LD LD_FINANCIAL;
MACRO_LD LD_ISE_BRITISH;
MACRO_LD LD_IZE_BRITISH;
MACRO_LD LD_LEGAL;
MACRO_LD LD_MEDICAL;
MACRO_LD LD_SCIENCE;
MACRO_LECI LECI_INVALID_CONTACT_ID;
MACRO_LED LED_ANY;
MACRO_LED LED_MISSED;
MACRO_LED LED_RECEIVED;
MACRO_LED LED_SENT;
MACRO_BLACK LEFT_MARGIN;
MACRO_LEF LEF_DO_NOT_STORE_CONTACT_ID;
MACRO_LFT LEF_SHOW_COMPANY_NAME;
MACRO_LEF LEF_START_LOGGED;
MACRO_LEF LEF_WILDCARD_NUMBER;
MACRO_LET LET_CALL;
MACRO_LET_DATA LET_DATA;
MACRO_LET LET_DATA_ANY;
MACRO_LET LET_DATA_MAILBOX;
MACRO_LET LET_DATA_TELNET;
MACRO_LET LET_DATA_WWW;
MACRO_LET LET_FAX;
MACRO_LET LET_SMS;
MACRO_LE LE_BUTTCAP;
MACRO_LE LE_ROUNDCAP;
MACRO_LE LE_SQUARECAP;
MACRO_LFT LFT_ALL;
MACRO_LFT LFT_CONTACT_AND_DATETIME;
MACRO_LFT LFT_CONTACT_ID;
MACRO_LFT LFT_DATETIME;
MACRO_LFT LFT_DIRECTION;
MACRO_LFT LFT_MANUALLY_ORIG_CALLS;
MACRO_LFT LFT_NUMBER;
MACRO_LFT LFT_TYPE;
MACRO_LF LF_CONTAINS_EXTENDED_STYLE;
MACRO_LF LF_ENDS_IN_AUTO_HYPHEN;
MACRO_LF LF_ENDS_IN_COLUMN_BREAK;
MACRO_LF LF_ENDS_IN_CR;
MACRO_LF LF_ENDS_IN_NULL;
MACRO_LF LF_ENDS_IN_OPTIONAL_HYPHEN;
MACRO_LF LF_ENDS_IN_SECTION_BREAK;
MACRO_LF LF_ENDS_PARAGRAPH;
MACRO_LF LF_INTERACTS_ABOVE;
MACRO_LF LF_INTERACTS_BELOW;
MACRO_LF LF_LAST_CHAR_EXTENDS_RIGHT;
MACRO_LF LF_LAST_CHAR_KERNED;
MACRO_LF LF_NEEDS_CALC;
MACRO_LF LF_NEEDS_DRAW;
MACRO_LF LF_STARTS_PARAGRAPH;
MACRO_LINE LINE_ATTR_COLOR_SIZE;
MACRO_LINE_ATTR_DRAW LINE_ATTR_DRAW_MODE_SIZE;
MACRO_LINE_ATTR LINE_ATTR_END_SIZE;
MACRO_LINE_ATTR_JOIN LINE_ATTR_JOIN_SIZE;
MACRO_LINE_ATTR_MASK LINE_ATTR_MASK_SIZE;
MACRO_LINE_ATTR_STYLE LINE_ATTR_MITER_LIMIT_SIZE;
MACRO_LINE_ATTR_STYLE LINE_ATTR_STYLE_SIZE;
MACRO_LINE_ATTR_TYPE LINE_ATTR_TYPE_SIZE;
MACRO_LINE_ATTR_DRAW LINE_ATTR_WIDTH_SIZE;
MACRO_LITTLE_I LITTLE_I;
MACRO_LITTLE LITTLE_N;
MACRO_LJ LJ_BEVELED;
MACRO_LJ LJ_MITERED;
MACRO_LJ LJ_ROUND;
MACRO_LLCF LLCF_LOG_UI;
MACRO_LLC LLC_DEFAULT_FEATURES;
MACRO_LMC LMC_size;
ChunkHandle __pascal LMEMALLOC(MemHandle mh, word chunkSize);
void __pascal LMEMCONTRACT(MemHandle mh);
void __pascal LMEMDELETEAT(optr o, word deleteOffset, word deleteCount);
void *__pascal LMEMDEREF(optr o);
void __pascal LMEMFREE(optr o);
word __pascal LMEMGETCHUNKSIZE(optr o);
void __pascal LMEMINITHEAP(MemHandle mh, LMemType type, LocalMemoryFlags flags, word lmemOffset, word numHandles, word freeSpace);
Boolean __pascal LMEMINSERTAT(optr o, word insertOffset, word insertCount);
Boolean __pascal LMEMREALLOC(optr o, word chunkSize);
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_DB_ITEMS;
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_FONT_BLK;
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_GENERAL;
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_GSTATE;
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_GSTRING;
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_OBJ_BLOCK;
$9D46B312836DB1586438ED3C80FB7BC9 LMEM_TYPE_WINDOW;
MACRO_LMF LMF_AUTO_FREE;
MACRO_LMF LMF_DEATH_COUNT;
MACRO_LMF LMF_DETACHABLE;
MACRO_LMF LMF_DUPLICATED;
MACRO_LMF LMF_HAS_FLAGS;
MACRO_LMF LMF_IN_LMEM_ALLOC;
MACRO_LMF LMF_IN_RESOURCE;
MACRO_LMF LMF_IS_VM;
MACRO_LMF LMF_NO_ENLARGE;
MACRO_LMF LMF_NO_HANDLES;
MACRO_LMF LMF_RELOCATED;
MACRO_LMF LMF_RETURN_ERRORS;
Boolean __pascal LOCALADDGENGONAME(const char *longGengo, const char *shortGengo, word year, word month, word day);
WWFixedAsDWord __pascal LOCALASCIITOFIXED(const char *buffer, char **parseEnd);
word __pascal LOCALCALCDAYSINMONTH(word year, word month);
sword __pascal LOCALCMPSTRINGS(const char *str1, const char *str2, word strSize);
sword __pascal LOCALCMPSTRINGSDOSTOGEOS(const char *str1, const char *str2, word strSize, wchar defaultChar, LocalCmpStringsDosToGeosFlags flags);
sword __pascal LOCALCMPSTRINGSNOCASE(const char *str1, const char *str2, word strSize);
sword __pascal LOCALCMPSTRINGSNOSPACE(const char *str1, const char *str2, word strSize);
sword __pascal LOCALCMPSTRINGSNOSPACECASE(const char *str1, const char *str2, word strSize);
Boolean __pascal LOCALCODEPAGETOGEOS(char *str, word strSize, DosCodePage codePage, wchar defaultChar);
wchar __pascal LOCALCODEPAGETOGEOSCHAR(wchar ch, DosCodePage codePage, wchar defaultChar);
word __pascal LOCALCUSTOMFORMATDATETIME(char *str, const char *format, const TimerDateAndTime *dateTime);
word __pascal LOCALCUSTOMPARSEDATETIME(const char *str, const char *format, TimerDateAndTime *dateTime);
WWFixedAsDWord __pascal LOCALDISTANCEFROMASCII(const char *buffer, DistanceUnit distanceUnits, MeasurementType measurementType);
word __pascal LOCALDISTANCETOASCII(char *buffer, WWFixedAsDWord value, DistanceUnit distanceUnits, word measurementType, LocalDistanceFlags flags);
Boolean __pascal LOCALDOSTOGEOS(char *str, word strSize, wchar defaultChar);
wchar __pascal LOCALDOSTOGEOSCHAR(wchar ch, wchar defaultChar);
void __pascal LOCALDOWNCASESTRING(char *str, word size);
void __pascal LOCALFIXEDTOASCII(char *buffer, WWFixedAsDWord value, word fracDigits);
word __pascal LOCALFORMATDATETIME(char *str, DateTimeFormat format, const TimerDateAndTime *dateTime);
word __pascal LOCALFORMATFILEDATETIME(char *str, DateTimeFormat format, const FileDateAndTime *dateTime);
Boolean __pascal LOCALGEOSTOCODEPAGE(char *str, word strSize, DosCodePage codePage, wchar defaultChar);
wchar __pascal LOCALGEOSTOCODEPAGECHAR(wchar ch, DosCodePage codePage, wchar defaultChar);
Boolean __pascal LOCALGEOSTODOS(char *str, word strSize, wchar defaultChar);
wchar __pascal LOCALGEOSTODOSCHAR(wchar ch, wchar defaultChar);
DosCodePage LOCALGETCODEPAGE(void);
void __pascal LOCALGETCURRENCYFORMAT(LocalCurrencyFormat *buf, char *symbol);
void __pascal LOCALGETDATETIMEFORMAT(char *str, DateTimeFormat format);
Boolean __pascal LOCALGETGENGOINFO(word entryNum, GengoNameData *gengoInfo);
word LOCALGETLANGUAGE(void);
MeasurementType LOCALGETMEASUREMENTTYPE(void);
void __pascal LOCALGETNUMERICFORMAT(LocalNumericFormat *buf);
void __pascal LOCALGETQUOTES(LocalQuotes *quotes);
Boolean __pascal LOCALISCODEPAGESUPPORTED(DosCodePage codePage);
Boolean __pascal LOCALISDATECHAR(wchar ch);
Boolean __pascal LOCALISDOSCHAR(wchar ch);
Boolean __pascal LOCALISNUMCHAR(wchar ch);
Boolean __pascal LOCALISSYMBOL(wchar ch);
Boolean __pascal LOCALISTIMECHAR(wchar ch);
word __pascal LOCALLEXICALVALUE(wchar ch);
word __pascal LOCALLEXICALVALUENOCASE(wchar ch);
Boolean __pascal LOCALPARSEDATETIME(const char *str, DateTimeFormat format, TimerDateAndTime *dateTime);
Boolean __pascal LOCALREMOVEGENGONAME(word year, word month, word day, word *errorType);
Handle __pascal LOCALSETCODEPAGE(DosCodePage dcp);
void __pascal LOCALSETCURRENCYFORMAT(const LocalCurrencyFormat *buf, const char *symbol);
void __pascal LOCALSETDATETIMEFORMAT(const char *str, DateTimeFormat format);
void __pascal LOCALSETMEASUREMENTTYPE(MeasurementType meas);
void __pascal LOCALSETNUMERICFORMAT(const LocalNumericFormat *buf);
void __pascal LOCALSETQUOTES(const LocalQuotes *quotes);
word __pascal LOCALSTRINGLENGTH(const char *str);
word __pascal LOCALSTRINGSIZE(const char *str);
void __pascal LOCALUPCASESTRING(char *str, word size);
MACRO_DU LOCAL_DISTANCE_BUFFER_SIZE;
Boolean __pascal __far LOGADDENTRY(LogEntry *logEntry);
void __pascal __far LOGDELETEALLENTRIES();
Boolean __pascal __far LOGDELETEMATCHINGTYPE(LogFieldType lft, optr logEntry);
void __pascal __far LOGDESTROY();
Boolean __pascal __far LOGFINDMATCHINGTYPE(word lft, optr logEntry, VMBlockHandle hugeArray);
word __pascal __far LOGGETCOUNT();
Boolean __pascal __far LOGGETENTRY(int item, LogEntry *buffer);
MACRO_LOOPBACK LOOPBACK_NET;
MACRO_LOW_A_0 LOW_A;
MACRO_LOW_A_DSH LOW_A_DSH;
MACRO_LOW_A_SH LOW_A_SH;
MACRO_LOW_A LOW_A_b;
MACRO_LOW_A_bb LOW_A_bb;
MACRO_LOW_B_0 LOW_B;
MACRO_LOW_B_DSH LOW_B_DSH;
MACRO_LOW_B_SH LOW_B_SH;
MACRO_LOW_B LOW_B_b;
MACRO_LOW_B_bb LOW_B_bb;
MACRO_LOW LOW_C;
MACRO_LOW_C_DSH LOW_C_DSH;
MACRO_LOW_C LOW_C_SH;
MACRO_REST LOW_C_b;
MACRO_LOW_C_bb LOW_C_bb;
MACRO_LOW_D_0 LOW_D;
MACRO_LOW_D_DSH LOW_D_DSH;
MACRO_LOW_D_SH LOW_D_SH;
MACRO_LOW_D LOW_D_b;
MACRO_LOW_D_bb LOW_D_bb;
MACRO_LOW_E_0 LOW_E;
MACRO_LOW_E_DSH LOW_E_DSH;
MACRO_LOW_E_SH LOW_E_SH;
MACRO_LOW_E LOW_E_b;
MACRO_LOW_E_bb LOW_E_bb;
MACRO_LOW_F_0 LOW_F;
MACRO_LOW_F_DSH LOW_F_DSH;
MACRO_LOW_F_SH LOW_F_SH;
MACRO_LOW_F LOW_F_b;
MACRO_LOW_F_bb LOW_F_bb;
MACRO_LOW_G_0 LOW_G;
MACRO_LOW_G_DSH LOW_G_DSH;
MACRO_LOW_G_SH LOW_G_SH;
MACRO_LOW_G LOW_G_b;
MACRO_LOW_G_bb LOW_G_bb;
MACRO_LP LP_IS_PARENT;
MACRO_LS LS_CUSTOM;
MACRO_LS LS_DASHDDOT;
MACRO_LS LS_DASHDOT;
MACRO_LS LS_DASHED;
MACRO_LS LS_DOTTED;
MACRO_LS LS_SOLID;
MACRO_LT LT_ADDR;
MACRO_LT LT_ID;
MACRO_LT2 LT_MULTI_RECORD;
MACRO_LT2 LT_NO_LAYOUT_TYPE;
MACRO_LT2 LT_REPORT;
MACRO_LT2 LT_SINGLE_RECORD;
MemHandle __pascal LZGALLOCCOMPRESSSTACK(GeodeHandle stackOwner);
int __pascal LZGCOMPRESS(byte *compressBuffer, byte *data, int dataSize, MemHandle compressStack);
void __pascal LZGFREECOMPRESSSTACK(MemHandle compressStack);
int __pascal LZGGETUNCOMPRESSEDSIZE(byte *compressedData);
int __pascal LZGUNCOMPRESS(byte *dataBuffer, byte *compressedData);
MACRO_MACHINEID MACHINEID_LENGTH;
MACRO_MAEF MAEF_APP_EXCL;
MACRO_MAEF MAEF_FOCUS;
MACRO_MAEF MAEF_FULL_SCREEN;
MACRO_MAEF MAEF_GRAB;
MACRO_MAEF_MASK MAEF_MASK_OF_ALL_HIERARCHIES;
MACRO_MAEF MAEF_MODAL;
MACRO_MAEF MAEF_MODEL;
MACRO_SSC_DEFAULT MAEF_NOT_HERE;
MACRO_MAEF MAEF_OD_IS_MENU_RELATED;
MACRO_MAEF MAEF_OD_IS_WINDOW;
MACRO_MAEF MAEF_SYS_EXCL;
MACRO_MAEF MAEF_TARGET;
void __pascal MAILBOXACKNOWLEDGEMESSAGERECEIPT(MailboxMessage msg);
MailboxError __pascal MAILBOXBODYREFORMATTED(MailboxMessage msg, MailboxDataFormat newFormat, MailboxMessageFlags newBodyFlags);
MailboxError __pascal MAILBOXCHANGEBODYFORMAT(MailboxMessage msg, const MailboxChangeBodyFormatArgs *mcbfArgs);
void MAILBOXCHANGETOMAILBOXDIR(void);
Boolean __pascal MAILBOXCHECKMEDIUMAVAILABLE(MediumType mediumType, word unitNum, MediumUnitType unitType);
Boolean __pascal MAILBOXCHECKMEDIUMCONNECTED(MediumType mediumType, word unitNum, MediumUnitType unitType);
Boolean __pascal MAILBOXCHECKSTORAGETYPESUPPORTED(MailboxStorage storage);
void __pascal MAILBOXCONVERTTOCLIPBOARDTRANSFERITEM(VMFileHandle mailboxFile, VMBlockHandle mailboxBlock, VMFileHandle clipboardFile, word userID, VMBlockHandle *clipboardBlock);
void __pascal MAILBOXCONVERTTOMAILBOXTRANSFERITEM(VMFileHandle clipboardFile, VMBlockHandle clipboardBlock, VMFileHandle vmFile, word userID, MemHandle nameLMemBlock, ChunkHandle nameChunk, VMFileHandle *transferItemBlock);
word __pascal MAILBOXCREATESTREAMGSTRING(FileLongName name, GStateHandle *gstate, GString *gs);
void __pascal MAILBOXDELETEMESSAGE(MailboxMessage msg);
void __pascal MAILBOXDONEWITHBODY(MailboxMessage msg, const void *appRef, word appRefSize);
void __pascal MAILBOXDONEWITHVMFILE(VMFileHandle file);
void __pascal MAILBOXFREEDRIVER(GeodeHandle driverHandle);
VMFileHandle MAILBOXGETADMINFILE(void);
MailboxError __pascal MAILBOXGETBODYFORMAT(MailboxMessage msg, MailboxDataFormat *dataFormat);
MailboxError __pascal MAILBOXGETBODYMBOXREFBLOCK(MailboxMessage msg, MemHandle *mboxRefHandle);
MailboxError __pascal MAILBOXGETBODYREF(MailboxMessage msg, void *appRefBuf, word *appRefBufSize);
word *MAILBOXGETCANCELFLAG(void);
MailboxError __pascal MAILBOXGETDESTAPP(MailboxMessage msg, GeodeToken *tokenBuf);
MailboxError __pascal MAILBOXGETENDBOUND(MailboxMessage msg, FileDateAndTime *dateTime);
word __pascal MAILBOXGETFIRSTMEDIUMUNIT(MediumType mediumType, MediumUnitType *unitType);
MailboxError __pascal MAILBOXGETMESSAGEFLAGS(MailboxMessage msg, MailboxMessageFlags *flags);
MailboxError __pascal MAILBOXGETNUMTRANSADDRS(MailboxMessage msg, word *numAddresses);
dword __pascal MAILBOXGETREMAININGDESTINATIONS(MailboxMessage msg);
word MAILBOXGETREMAININGMESSAGES(void);
MailboxError __pascal MAILBOXGETSTARTBOUND(MailboxMessage msg, FileDateAndTime *dateTime);
MailboxError __pascal MAILBOXGETSTORAGETYPE(MailboxMessage msg, MailboxStorage *storage);
MailboxError __pascal MAILBOXGETSUBJECTBLOCK(MailboxMessage msg, MemHandle *subjHandle);
MailboxError __pascal MAILBOXGETSUBJECTLMEM(MailboxMessage msg, MemHandle lmemBlock, ChunkHandle *subjectChunk);
Boolean __pascal MAILBOXGETTRANSADDR(MailboxMessage msg, word addrNumber, void *addressBuffer, word *bufSizePtr);
MailboxError __pascal MAILBOXGETTRANSDATA(MailboxMessage msg, dword *transData);
MailboxError __pascal MAILBOXGETTRANSPORT(MailboxMessage msg, MailboxTransport *transport);
MailboxError __pascal MAILBOXGETUSERTRANSADDRLMEM(MailboxMessage msg, word addrNumber, MemHandle lmemBlock, ChunkHandle *addrChunk);
VMFileHandle __pascal MAILBOXGETVMFILE(word expectedNumBlocks, word *vmStatusp);
void __pascal MAILBOXGETVMFILENAME(VMFileHandle file, FileLongName *namep);
GeodeHandle __pascal MAILBOXLOADDATADRIVER(MailboxStorage storage, GeodeLoadError *error);
GeodeHandle __pascal MAILBOXLOADDATADRIVERWITHERROR(MailboxStorage storage, GeodeLoadError *error);
GeodeHandle __pascal MAILBOXLOADTRANSPORTDRIVER(MailboxTransport transport, GeodeLoadError *error);
VMFileHandle __pascal MAILBOXOPENVMFILE(FileLongName *namep, word *vmStatusp);
void MAILBOXPUSHTOMAILBOXDIR(void);
MailboxError __pascal MAILBOXREGISTERMESSAGE(MailboxRegisterMessageArgs *mrmArgs, MailboxMessage *msg);
MailboxError __pascal MAILBOXREPLYTOMESSAGE(MailboxReplyToMessageArgs *mrtmArgs, MailboxMessage *msg);
void __pascal MAILBOXREPORTPROGRESS(MailboxProgressType type, dword data, MailboxProgressAction action);
void __pascal MAILBOXSETCANCELACTION(optr destination, Message messageToSend);
MailboxError __pascal MAILBOXSETTRANSADDR(MailboxMessage msg, word addrNumber, const void *newAddress, word addrSize);
MailboxError __pascal MAILBOXSETTRANSDATA(MailboxMessage msg, dword transData);
MailboxError __pascal MAILBOXSTEALBODY(MailboxMessage msg, void *appRefBuf, word *appRefBufSize);
MACRO_MAILBOX MAILBOX_ANY_TRANSPORT_OPTION;
MACRO_MAILBOX_MAX MAILBOX_ETERNITY;
MACRO_MAILBOX_MAX MAILBOX_MAX_SUBJECT;
MACRO_MAILBOX_NOW MAILBOX_NOW;
MACRO_MANUFACTURER MANUFACTURER_ID_AMERICA_ONLINE;
MACRO_MANUFACTURER MANUFACTURER_ID_APP_LOCAL;
MACRO_MANUFACTURER MANUFACTURER_ID_CREATIVE_LABS;
MACRO_MANUFACTURER MANUFACTURER_ID_DATABASE_FIRST;
MACRO_MANUFACTURER MANUFACTURER_ID_DATABASE_LAST;
MACRO_MANUFACTURER MANUFACTURER_ID_DOS_LAUNCHER;
MACRO_MANUFACTURER MANUFACTURER_ID_GENERIC;
MACRO_MANUFACTURER MANUFACTURER_ID_GEOWORKS;
MACRO_MANUFACTURER MANUFACTURER_ID_INTUIT;
MACRO_MANUFACTURER MANUFACTURER_ID_NOKIA;
MACRO_MANUFACTURER MANUFACTURER_ID_PALM_COMPUTING;
MACRO_MANUFACTURER MANUFACTURER_ID_SDK;
MACRO_MANUFACTURER MANUFACTURER_ID_SHAREWARE;
MACRO_MANUFACTURER MANUFACTURER_ID_SOCKET_16BIT_PORT;
MACRO_MANUFACTURER_ID MANUFACTURER_ID_TBD;
MACRO_MANUFACTURER MANUFACTURER_ID_WIZARD;
MACRO_MARKED MARKED_RECORD;
MACRO_MARKED_RECORD MARKED_RECORD_COLUMN;
MACRO_MASK MASK_MS_CARD;
MACRO_MASK MASK_MS_COVER;
MACRO_MASK MASK_MS_LID;
MACRO_MIN_0 MAX;
MACRO_MINIMUM MAXIMUM_BACKLIGHT_LEVEL;
MACRO_MAXIMUM_LABELS MAXIMUM_LABELS_ACROSS;
MACRO_MAXIMUM_LABELS_DOWN MAXIMUM_LABELS_DOWN;
MACRO_PRINTC MAXIMUM_NUMBER_OF_PRINTERS;
MACRO_MAXIMUM MAXIMUM_PAGE_HEIGHT_VALUE;
MACRO_MINIMUM_PAGE_HEIGHT MAXIMUM_PAGE_WIDTH_VALUE;
MACRO_MAX_ADDRESS MAX_ADDRESS_DATA_LEN;
MACRO_MAX_ADDRESS2 MAX_ADDRESS_SIZE;
MACRO_MAX_AUTOMATIC MAX_AUTOMATIC_FIELD_NAME_SIZE;
MACRO_EUDC_DEFAULT MAX_BACKUP_LIST_SIZE;
MACRO_MAX_CHARS_FOR MAX_CHARS_FOR_COMMAS_IN_HUGE_NUMBERS;
MACRO_MAX_CHARS MAX_CHARS_FOR_COMMAS_IN_NORMAL_NUMBERS;
MACRO_MAX_CHARS_FOR_DECIMAL MAX_CHARS_FOR_DECIMAL_POINT;
MACRO_MAX_CHARS_FOR_DECIMAL MAX_CHARS_FOR_EXPONENT;
MACRO_MAX_CHARS_FOR_NULL MAX_CHARS_FOR_FORMAT_STUFF_IN_HUGE_NUMBERS;
MACRO_MAX_CHARS_FOR_NULL MAX_CHARS_FOR_FORMAT_STUFF_IN_NORMAL_NUMBERS;
MACRO_MAX_CHARS_FOR_NULL MAX_CHARS_FOR_HUGE_NUMBER;
MACRO_MAX_CHARS_FOR_NULL MAX_CHARS_FOR_NORMAL_NUMBER;
MACRO_MAX_CHARS_FOR_NULL MAX_CHARS_FOR_NULL_TERM;
MACRO_MAX_CHARS_FOR_PERCENATGE MAX_CHARS_FOR_PERCENATGE;
MACRO_MAX_COMPANY MAX_COMPANY_DATA_LEN;
MACRO_MAX_COMPLEX_MONIKER MAX_COMPLEX_MONIKER_HEIGHT;
MACRO_MAX_COMPLEX MAX_COMPLEX_MONIKER_WIDTH;
MACRO_MAX_CONTACT MAX_CONTACT_LOG_ENTRIES;
MACRO_MAX_CONTEXT_NAME_SIZE MAX_CONTEXT_NAME_SIZE;
MACRO_MAX_COORD MAX_COORD;
MACRO_MAX_CREATE MAX_CREATE_NEW_MONIKER_LENGTH;
MACRO_SH MAX_CUSTOM_PATTERN_SIZE;
MACRO_MAX_DASH MAX_DASH_ARRAY_PAIRS;
MACRO_MAX_DAY MAX_DAY_LENGTH;
MACRO_MAX_GRAMMAR MAX_DEFINITIONS;
MACRO_MAX_GRAMMAR MAX_DEFINITION_SIZE;
MACRO_MAX_DEVICE MAX_DEVICE_NAME_SIZE;
MACRO_MAX_CHARS MAX_DIGITS_FOR_HUGE_NUMBERS;
MACRO_MAX_DIGITS MAX_DIGITS_FOR_NORMAL_NUMBERS;
MACRO_MAX_DISPLAY MAX_DISPLAY_NAME_SIZE;
MACRO_BOOKING MAX_DTMF_FIELD_DATA_LEN;
MACRO_MAX_NUMBER MAX_EMAIL_DATA_LEN;
MACRO_MAX_ENTRY MAX_ENTRY_LENGTH;
MACRO_MAX_EXPRESSION MAX_EXPRESSION_STRING_LENGTH;
MACRO_TUNE MAX_EXTERNAL_IMAGE_WIDTH;
MACRO_MAX_FIELD MAX_FIELD_LABEL_LEN;
MACRO_MAX_FIELD MAX_FIELD_LABEL_LEN_NO_NULL;
MACRO_MAX_FUNCTION MAX_FIELD_NAME_LENGTH;
MACRO_FWI_MAXIMUM MAX_FONTS;
MACRO_FLOAT_STACK MAX_FORMATS;
MACRO_MAX_FUNCTION MAX_FUNCTION_STRING_LENGTH;
MACRO_MAX_GRAMMAR MAX_GRAMMAR_STRING;
MACRO_MAX_GROUP MAX_GROUP_NAME_LEN;
MACRO_MAX_GROUP MAX_GROUP_NAME_LEN_WITH_NULL;
MACRO_MAX_GSTATE MAX_GSTATE_REF_COUNT;
MACRO_MAX_INITFILE MAX_INITFILE_CATEGORY_LENGTH;
MACRO_IP MAX_IP_ADDR_STRING_LENGTH;
MACRO_IP MAX_IP_ADDR_STRING_LENGTH_ZT;
MACRO_IP MAX_IP_DECIMAL_ADDR_LENGTH;
MACRO_IP MAX_IP_DECIMAL_ADDR_LENGTH_ZT;
MACRO_MAX_COMPANY MAX_JOB_TITLE_DATA_LEN;
MACRO_MAX_TRACK MAX_KERN_VALUE;
$EACFA24C9136175F70D3AFF09A4916AA MAX_LAUNCH_MODE;
MACRO_FFD_NO MAX_LAYOUT_NAME_LENGTH;
MACRO_FFD_NO MAX_LAYOUT_NOTES_LENGTH;
MACRO_MAX_LENGTH_RECORD MAX_LENGTH_RECORD_CONTROL_PANEL_MONIKER;
MACRO_MAX_LENGTH MAX_LENGTH_TREASURE_CHEST_MONIKER;
MACRO_MAX_LOCK MAX_LOCK_CODE_LENGTH;
MACRO_MAX_LOCK MAX_LOCK_CODE_LENGTH_WITH_NULL;
MACRO_MAX_GRAMMAR MAX_MEANINGS_ARRAY_SIZE;
MACRO_MAX MAX_MENU_FONTS;
MACRO_MAX_MONTH MAX_MONTH_LENGTH;
MACRO_MAX_NAMES MAX_NAMES;
MACRO_CRF MAX_NAME_DATA_LEN;
MACRO_MAX_NAME MAX_NAME_DEF_LENGTH;
MACRO_MAX_NAME MAX_NAME_LENGTH;
MACRO_MAX_NETWORK MAX_NETWORK_CODE_LENGTH;
MACRO_MAX_NETWORK MAX_NETWORK_CODE_LENGTH_WITH_NULL;
MACRO_MAX_NEW MAX_NEW_LOCK_CODE_LENGTH;
MACRO_MAX_NEW MAX_NEW_LOCK_CODE_LENGTH_WITH_NULL;
MACRO_MAX_AUTOMATIC MAX_NOTES_TEXT_LENGTH;
MACRO_MAX_NOTE MAX_NOTE_DATA_LEN;
MACRO_MAX_NUMBER MAX_NUMBER_FIELD_DATA_LEN;
MACRO_MAX_FUNCTION MAX_NUMBER_OF_FUNCTIONS;
MACRO_MAX_NUMBER_OF MAX_NUMBER_OF_PASTED_LABELS;
MACRO_MAX_NUM MAX_NUM_CHARS_IN_CELL;
MACRO_MAX_NUM MAX_NUM_FIELDS;
MACRO_MAX_NUM_LAYOUTS MAX_NUM_LAYOUTS;
MACRO_MAX_NUM_OF MAX_NUM_OF_FILES_COPIED_VIA_IR;
MACRO_FDT MAX_NUM_RECORDS;
MACRO_GTCF MAX_NUM_TOOLBOXES;
MACRO_MAX_OPERATOR MAX_OPERATOR_LENGTH;
MACRO_MAX_PACKAGE_SIZE MAX_PACKAGE_INFO_LENGTH;
MACRO_MAX_PACKAGE MAX_PACKAGE_NAME_LENGTH;
MACRO_MAX_PACKAGE_NAME MAX_PACKAGE_NAME_LENGTH_ZT;
MACRO_MAX_PACKAGE MAX_PACKAGE_SIZE_LENGTH;
MACRO_MAX_PACKAGE_SIZE MAX_PACKAGE_SIZE_LENGTH_ZT;
MACRO_MAX_PACKAGE MAX_PACKAGE_SYNOPSIS_LENGTH;
MACRO_MAX_PACKAGE_SYNOPSIS MAX_PACKAGE_SYNOPSIS_LENGTH_ZT;
MACRO_MIN_PAGE MAX_PAGE_MARGIN;
MACRO_MAX_USER MAX_PAPER_SIZES;
MACRO_MAX_PAPER MAX_PAPER_STRING_LENGTH;
MACRO_PASSWORD MAX_PASSWORD_SOURCE_SIZE;
MACRO_MAX_PIN2 MAX_PIN2_CODE_LENGTH;
MACRO_MAX_PIN2 MAX_PIN2_CODE_LENGTH_WITH_NULL;
MACRO_MAX_NEW MAX_PIN_CODE_LENGTH;
MACRO_MAX_NEW MAX_PIN_CODE_LENGTH_WITH_NULL;
MACRO_MAX_PIXELS MAX_PIXELS_TO_MOVE;
MACRO_MIN MAX_POINT_SIZE;
MACRO_MAX_PAPER MAX_PRE_DEFINED_PAPER_SIZES;
MACRO_MAX_PRIORITY MAX_PRIORITY_LIST_ELEMENTS;
MACRO_MIN_PIN2 MAX_PUK2_CODE_LENGTH;
MACRO_MIN_PIN2 MAX_PUK2_CODE_LENGTH_WITH_NULL;
MACRO_MIN_PIN MAX_PUK_CODE_LENGTH;
MACRO_MIN_PIN MAX_PUK_CODE_LENGTH_WITH_NULL;
MACRO_MAX_CONTACT MAX_RECENT_CONTACTS_ENTRIES;
MACRO_MAX_SEPARATOR MAX_SEPARATOR_LENGTH;
MACRO_MAX_SIM MAX_SIM_NAME;
MACRO_MAX_SIM_NUMBER MAX_SIM_NUMBER;
MACRO_MAX_SORT MAX_SORT_KEYS_AND_SUB_TOTAL_FIELDS;
MACRO_ESAT_FUNCTION MAX_STRING_LENGTH;
MACRO_MAX_STYLE MAX_STYLE_SHEET_ATTRS;
MACRO_MAX_SYNONYM MAX_SYNONYMS;
MACRO_MAX_SYNONYM MAX_SYNONYMS_ARRAY_SIZE;
MACRO_MAX_SYNONYM MAX_SYNONYM_SIZE;
MACRO_MAX_TEXT MAX_TEXT_FIELD_LENGTH;
MACRO_FFFPUL MAX_TEXT_STRING_LENGTH;
MACRO_MAX_TICK MAX_TICK_HEIGHT;
MACRO_MAX_TOKEN MAX_TOKEN_STREAM_SIZE;
MACRO_FDA MAX_TOTAL_NAME_LENGTH;
MACRO_MAX_TRACK MAX_TRACK_KERNING;
MACRO_MAX_URL MAX_URL_DATA_LEN;
MACRO_MAX_USER MAX_USER_DEFINED_PAPER_SIZES;
MACRO_MAX_YEAR MAX_WEEKDAY_LENGTH;
MACRO_TUNE MAX_WWW_IMAGE_WIDTH;
MACRO_MAX_YEAR MAX_YEAR_LENGTH;
$226D6F596696CAA25C1621FAEFEF8A42 MBADT_GEOS_TEXT;
$226D6F596696CAA25C1621FAEFEF8A42 MBADT_INK;
$226D6F596696CAA25C1621FAEFEF8A42 MBADT_UNICODE;
$1B6356266B9EF8F332236A62DAC95ED0 MBAIT_DAYS;
$1B6356266B9EF8F332236A62DAC95ED0 MBAIT_HOURS;
$1B6356266B9EF8F332236A62DAC95ED0 MBAIT_MINUTES;
MACRO_MBAI MBAI_HAS_ALARM;
MACRO_MBAI_HAS MBAI_HAS_ALARM_OFFSET;
MACRO_MBAI MBAI_INTERVAL;
MACRO_MBAI_HAS MBAI_INTERVAL_OFFSET;
MACRO_MBAI MBAI_TYPE;
MACRO_MBAI_TYPE MBAI_TYPE_OFFSET;
$124B52ACC1801077A94DD9F8FF7C6719 MBRD_FOREVER;
$124B52ACC1801077A94DD9F8FF7C6719 MBRD_LENGTH;
$124B52ACC1801077A94DD9F8FF7C6719 MBRD_UNTIL;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_DAILY;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_MONTHLY_DATE;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_MONTHLY_WEEKDAY;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_MON_TO_FRI;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_MON_TO_SAT;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_WEEKLY;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_YEARLY_DATE;
$90D2F27AE01C482293D6170BBF623F68 MBRIT_YEARLY_WEEKDAY;
MACRO_MBRI_COUNT MBRI_COUNT;
MACRO_MBRI_COUNT_OFFSET MBRI_COUNT_OFFSET;
MACRO_MBRI_DAY MBRI_DAY_OFFSET;
MACRO_MBRI_COUNT MBRI_TYPE;
MACRO_MBRI_COUNT_OFFSET MBRI_TYPE_OFFSET;
MACRO_MBRI MBRI_WEEK;
MACRO_MBRI_WEEK MBRI_WEEK_OFFSET;
$21D8C3293FB626E927BED6C8754C4455 MBRLUT_DAY;
$21D8C3293FB626E927BED6C8754C4455 MBRLUT_MONTH;
$21D8C3293FB626E927BED6C8754C4455 MBRLUT_WEEK;
$21D8C3293FB626E927BED6C8754C4455 MBRLUT_YEAR;
MACRO_MBRL MBRL_COUNT;
MACRO_MBRL_UNIT MBRL_COUNT_OFFSET;
MACRO_MBRL MBRL_UNIT;
MACRO_MBRL_UNIT MBRL_UNIT_OFFSET;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_FRIDAY;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_MONDAY;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_SATURDAY;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_SUNDAY;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_THURSDAY;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_TUESDAY;
$F1B2C574B764F95C24FA9ED4F85B0B55 MBRW_WEDNESDAY;
MACRO_MB MB_NO_TIME;
MACRO_MB_TODO_HIGH MB_TODO_HIGH_PRIORITY;
MACRO_MB_TODO MB_TODO_NORMAL_PRIORITY;
$9860A502E3BC1D63C7E55B9E2D8B2C6A MCA_CANCEL_ALL;
$9860A502E3BC1D63C7E55B9E2D8B2C6A MCA_CANCEL_CONNECT;
$9860A502E3BC1D63C7E55B9E2D8B2C6A MCA_CANCEL_MESSAGE;
$9860A502E3BC1D63C7E55B9E2D8B2C6A MCA_CANCEL_NONE;
MACRO_BCC MCF_LEFT_MARGIN;
MACRO_MCF MCF_PARA_MARGIN;
MACRO_MCF MCF_RIGHT_MARGIN;
MACRO_MC MC_DEFAULT_FEATURES;
MACRO_MC MC_DEFAULT_TOOLBOX_FEATURES;
$7FD6A432FEFA5E7E876647ACC96DEA5D MDT_APPLICATION;
$7FD6A432FEFA5E7E876647ACC96DEA5D MDT_CLIPBOARD;
$7FD6A432FEFA5E7E876647ACC96DEA5D MDT_FILE;
$7FD6A432FEFA5E7E876647ACC96DEA5D MDT_QUICK_MESSAGE;
MACRO_MDV MDV_ACCEPT;
MACRO_MDV MDV_DELIVER;
MACRO_MDV MDV_FILE;
MACRO_MDV MDV_PLAY;
MACRO_MDV MDV_READ;
MACRO_MDV MDV_VIEW;
MACRO_MEASURE MEASURE_METRIC;
MACRO_MEASURE MEASURE_US;
MACRO_MEDIA MEDIA_160K;
MACRO_MEDIA MEDIA_180K;
MACRO_MEDIA MEDIA_1M2;
MACRO_MEDIA MEDIA_1M44;
MACRO_MEDIA MEDIA_2M88;
MACRO_MEDIA MEDIA_320K;
MACRO_MEDIA MEDIA_360K;
MACRO_MEDIA MEDIA_720K;
MACRO_MEDIA MEDIA_ATA;
MACRO_MEDIA MEDIA_CUSTOM;
MACRO_MEDIA MEDIA_FIXED_DISK;
MACRO_MEDIA MEDIA_FLASH;
MACRO_MEDIA MEDIA_NONEXISTENT;
MACRO_MEDIA MEDIA_SRAM;
MACRO_SMALL2 MEDIUM_DESIRED_HANDLE_SIZE;
MemHandle __pascal MEMALLOC(word byteSize, HeapFlags hfFlags, HeapAllocFlags haFlags);
MemHandle __pascal MEMALLOCLMEM(LMemType type, word headerSize);
MemHandle __pascal MEMALLOCSETOWNER(GeodeHandle owner, word byteSize, HeapFlags hfFlags, HeapAllocFlags haFlags);
void *__pascal MEMCCPY(void *dest, void *src, word c, word n);
void *__pascal MEMCHR(const void *s, int c, size_t n);
int __pascal MEMCMP(const void *dest, const void *src, size_t n);
void *__pascal MEMCPY(void *dest, const void *src, size_t n);
void __pascal MEMDECREFCOUNT(MemHandle mh);
void *__pascal MEMDEREF(MemHandle mh);
void __pascal MEMDISCARD(MemHandle mh);
void __pascal MEMDOWNGRADEEXCLLOCK(MemHandle mh);
void __pascal MEMFREE(MemHandle mh);
word __pascal MEMGETINFO(MemHandle mh, MemGetInfoType info);
void __pascal MEMINCREFCOUNT(MemHandle mh);
void __pascal MEMINITREFCOUNT(MemHandle mh, word count);
void *__pascal MEMLOCK(MemHandle mh);
void *__pascal MEMLOCKEXCL(MemHandle mh);
void *__pascal MEMLOCKFIXEDORMOVABLE(void *ptr);
void *__pascal MEMLOCKSHARED(MemHandle mh);
void __pascal MEMMODIFYFLAGS(MemHandle mh, HeapFlags bitsToSet, HeapFlags bitsToClear);
void __pascal MEMMODIFYOTHERINFO(MemHandle mh, word otherInfo);
void *__pascal MEMMOVE(void *dest, const void *src, size_t n);
GeodeHandle __pascal MEMOWNER(MemHandle mh);
MACRO_MEMO MEMO_FILE_MAJOR_PROTOCOL;
MACRO_MEMO MEMO_FILE_MINOR_PROTOCOL;
void *__pascal MEMPLOCK(MemHandle mh);
MemHandle __pascal MEMPTRTOHANDLE(void *ptr);
MemHandle __pascal MEMREALLOC(MemHandle mh, word byteSize, HeapAllocFlags heapAllocFlags);
void *__pascal MEMSET(void *dest, int c, size_t n);
void *__pascal MEMTHREADGRAB(MemHandle mh);
void *__pascal MEMTHREADGRABNB(MemHandle mh);
void __pascal MEMTHREADRELEASE(MemHandle mh);
void __pascal MEMUNLOCK(MemHandle mh);
void __pascal MEMUNLOCKFIXEDORMOVABLE(void *ptr);
void __pascal MEMUNLOCKSHARED(MemHandle mh);
void __pascal MEMUNLOCKV(MemHandle mh);
void *__pascal MEMUPGRADESHAREDLOCK(MemHandle mh);
$08C4EC10B63CE80B4F3DDF9E5EE9BD4C MESN_MEDIUM_AVAILABLE;
$08C4EC10B63CE80B4F3DDF9E5EE9BD4C MESN_MEDIUM_CONNECTED;
$08C4EC10B63CE80B4F3DDF9E5EE9BD4C MESN_MEDIUM_NOT_AVAILABLE;
$08C4EC10B63CE80B4F3DDF9E5EE9BD4C MESN_MEDIUM_NOT_CONNECTED;
dword __pascal MESSAGESETDESTINATION(EventHandle, optr);
$8BAF60176DB03E0094621C2295F90B6F MESSAGE_NO_ERROR;
$8BAF60176DB03E0094621C2295F90B6F MESSAGE_NO_HANDLES;
$B8313B70574F61A2CF1308AE53933D46 ME_ADDRESS_INVALID;
$B8313B70574F61A2CF1308AE53933D46 ME_APP_REF_BUF_TOO_SMALL;
$B8313B70574F61A2CF1308AE53933D46 ME_CANCELLED_BY_RECEIVER;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_CONNECT;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_CREATE_MESSAGE_FILE;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_ENQUEUE_MESSAGE;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_LOAD_DATA_DRIVER;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_LOAD_TRANSPORT_DRIVER;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_OPEN_MESSAGE_FILE;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_READ_MESSAGE_FILE;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_RESIZE_MBOX_REF;
$B8313B70574F61A2CF1308AE53933D46 ME_CANNOT_SAVE_MESSAGE_FILE;
$B8313B70574F61A2CF1308AE53933D46 ME_CAN_NEVER_CONNECT;
$B8313B70574F61A2CF1308AE53933D46 ME_DATA_DRIVER_CANNOT_ACCESS_MESSAGE_BODY;
$B8313B70574F61A2CF1308AE53933D46 ME_DATA_DRIVER_CANNOT_STORE_MESSAGE_BODY;
$B8313B70574F61A2CF1308AE53933D46 ME_DESTINATION_APPLICATION_UNKNOWN;
$B8313B70574F61A2CF1308AE53933D46 ME_INSUFFICIENT_DISK_SPACE;
$B8313B70574F61A2CF1308AE53933D46 ME_INVALID_MESSAGE;
$B8313B70574F61A2CF1308AE53933D46 ME_LOST_CONNECTION;
$B8313B70574F61A2CF1308AE53933D46 ME_MESSAGE_BLOCKS_ARE_MISMATCHED;
$B8313B70574F61A2CF1308AE53933D46 ME_MESSAGE_BODY_INVALID;
$B8313B70574F61A2CF1308AE53933D46 ME_NOT_ENOUGH_MEMORY;
$B8313B70574F61A2CF1308AE53933D46 ME_REPLY_ADDRESS_NOT_AVAILABLE;
$B8313B70574F61A2CF1308AE53933D46 ME_SUCCESS;
$B8313B70574F61A2CF1308AE53933D46 ME_UNABLE_TO_CREATE_TRANSMIT_THREAD;
$B8313B70574F61A2CF1308AE53933D46 ME_UNKNOWN_DISK_ERROR;
MACRO_MMF_DELETE ME_UNRECOVERABLE;
$B8313B70574F61A2CF1308AE53933D46 ME_UNSUPPORTED_BODY_FORMAT;
$B8313B70574F61A2CF1308AE53933D46 ME_USER_CANCELED;
MACRO_MANUFACTURER_ID MF_CALL;
MACRO_MF MF_CAN_DISCARD_IF_DESPERATE;
MACRO_MF MF_CHECK_DUPLICATE;
MACRO_MF MF_CHECK_LAST_ONLY;
MACRO_MF MF_CUSTOM;
MACRO_MF MF_DISCARD_IF_NO_MATCH;
MACRO_MF MF_DISPATCH_DONT_FREE;
MACRO_MF MF_FIXUP_DS;
MACRO_MF MF_FIXUP_ES;
MACRO_MF MF_FORCE_QUEUE;
MACRO_MF MF_INSERT_AT_FRONT;
MACRO_MF_NO MF_MANUAL1;
MACRO_MF_NO MF_MANUAL2;
MACRO_MF_NO MF_MANUAL3;
MACRO_MF MF_MATCH_ALL;
MACRO_MF_NO MF_NO_MANUAL;
MACRO_MF MF_RECORD;
MACRO_MF MF_REPLACE;
MACRO_MF MF_STACK;
$4F0E3F2AB14EC8561083F792AB823DAA MGCNLT_ACTIVE_LIST;
$4F0E3F2AB14EC8561083F792AB823DAA MGCNLT_APP_STARTUP;
$0AA497ECA26CDC4E1AE3983F9CC61CA9 MGIT_ADDRESS;
$0AA497ECA26CDC4E1AE3983F9CC61CA9 MGIT_EXEC_THREAD;
$0AA497ECA26CDC4E1AE3983F9CC61CA9 MGIT_FLAGS_AND_LOCK_COUNT;
$0AA497ECA26CDC4E1AE3983F9CC61CA9 MGIT_OTHER_INFO;
$0AA497ECA26CDC4E1AE3983F9CC61CA9 MGIT_OWNER_OR_VM_FILE_HANDLE;
$0AA497ECA26CDC4E1AE3983F9CC61CA9 MGIT_SIZE;
MACRO_LOW_A_0 MIDDLE_A;
MACRO_LOW_A_DSH MIDDLE_A_DSH;
MACRO_LOW_A_SH MIDDLE_A_SH;
MACRO_LOW_A MIDDLE_A_b;
MACRO_LOW_A_bb MIDDLE_A_bb;
MACRO_LOW_B_0 MIDDLE_B;
MACRO_LOW_B_DSH MIDDLE_B_DSH;
MACRO_LOW_B_SH MIDDLE_B_SH;
MACRO_LOW_B MIDDLE_B_b;
MACRO_LOW_B_bb MIDDLE_B_bb;
MACRO_LOW MIDDLE_C;
MACRO_LOW_C_DSH MIDDLE_C_DSH;
MACRO_LOW_C MIDDLE_C_SH;
MACRO_REST MIDDLE_C_b;
MACRO_LOW_C_bb MIDDLE_C_bb;
MACRO_LOW_D_0 MIDDLE_D;
MACRO_LOW_D_DSH MIDDLE_D_DSH;
MACRO_LOW_D_SH MIDDLE_D_SH;
MACRO_LOW_D MIDDLE_D_b;
MACRO_LOW_D_bb MIDDLE_D_bb;
MACRO_LOW_E_0 MIDDLE_E;
MACRO_LOW_E_DSH MIDDLE_E_DSH;
MACRO_LOW_E_SH MIDDLE_E_SH;
MACRO_LOW_E MIDDLE_E_b;
MACRO_LOW_E_bb MIDDLE_E_bb;
MACRO_LOW_F_0 MIDDLE_F;
MACRO_LOW_F_DSH MIDDLE_F_DSH;
MACRO_LOW_F_SH MIDDLE_F_SH;
MACRO_LOW_F MIDDLE_F_b;
MACRO_LOW_F_bb MIDDLE_F_bb;
MACRO_LOW_G_0 MIDDLE_G;
MACRO_LOW_G_DSH MIDDLE_G_DSH;
MACRO_LOW_G_SH MIDDLE_G_SH;
MACRO_LOW_G MIDDLE_G_b;
MACRO_LOW_G_bb MIDDLE_G_bb;
MACRO_MIN_0 MIN;
MACRO_MINIMUM MINIMUM_BACKLIGHT_LEVEL;
MACRO_MINIMUM_PAGE_HEIGHT MINIMUM_PAGE_HEIGHT_VALUE;
MACRO_MINIMUM_PAGE MINIMUM_PAGE_WIDTH_VALUE;
MACRO_HOUR MINUTE_MAX;
MACRO_MINUTE MINUTE_MIN;
MACRO_MAX_COORD MIN_COORD;
MACRO_A MIN_FIELD_WIDTH;
MACRO_MAX_TRACK MIN_KERN_VALUE;
MACRO_MIN_LOCK MIN_LOCK_CODE_LENGTH;
MACRO_MIN_MAP_CHAR MIN_MAP_CHAR;
MACRO_GUO MIN_MARQUEE_DIMENSION;
MACRO_MIN_MAX_NUM MIN_MAX_NUM_CHARS_ALLOWED;
MACRO_MIN_MAX MIN_MAX_NUM_CHARS_DISPLAYED;
MACRO_MIN_NETWORK MIN_NETWORK_CODE_LENGTH;
MACRO_MIN_PAGE MIN_PAGE_MARGIN;
MACRO_MIN_PIN2 MIN_PIN2_CODE_LENGTH;
MACRO_MIN_PIN MIN_PIN_CODE_LENGTH;
MACRO_MIN MIN_POINT_SIZE;
MACRO_MIN_PUK2 MIN_PUK2_CODE_LENGTH;
MACRO_MIN_PUK MIN_PUK_CODE_LENGTH;
MACRO_MIN_ROW MIN_ROW;
MACRO_MAX_TRACK MIN_TRACK_KERNING;
MACRO_FIELD MISCELLANEOUS_INFO_ROW;
$02F8496BFBD9CFB6571A3F77ED82FB9D MMCRT_FILE_STARTING;
$02F8496BFBD9CFB6571A3F77ED82FB9D MMCRT_TRANSFER_ABORTED;
$02F8496BFBD9CFB6571A3F77ED82FB9D MMCRT_TRANSFER_COMPLETE;
$02F8496BFBD9CFB6571A3F77ED82FB9D MMCRT_TRANSFER_CONTINUES;
MACRO_MMC MMC_FORMATTED;
MACRO_MMC MMC_NOT_PRESENT;
MACRO_MMC MMC_UNFORMATTED;
MACRO_MDV MMF_BODY_DATA_VOLATILE;
MACRO_MMF_DELETE MMF_DELETE_BODY_AFTER_TRANSMISSION;
MACRO_MMF MMF_PRIORITY;
MACRO_MMF MMF_PRIORITY_OFFSET;
MACRO_MMF MMF_SEND_WITHOUT_QUERY;
MACRO_MMF_VERB MMF_VERB;
MACRO_MMF_VERB MMF_VERB_OFFSET;
MACRO_MMM MMM_CENTIMETER;
MACRO_MMM MMM_HALF_CENTIMETER;
MACRO_MMM MMM_MILLIMETER;
MACRO_MMP MMP_EMERGENCY;
MACRO_MMP MMP_FIRST_CLASS;
MACRO_MMP MMP_THIRD_CLASS;
MACRO_MMP MMP_URGENT;
MACRO_MM MM_AND;
MACRO_MM MM_CLEAR;
MACRO_MM MM_COPY;
MACRO_MM MM_INVERT;
MACRO_MM MM_NOP;
MACRO_MM MM_OR;
MACRO_MM MM_SET;
MACRO_MM MM_XOR;
MACRO_MOCF MOCF_DELETE_MESSAGE;
MACRO_MOCF MOCF_START_SENDING;
MACRO_MOCF MOCF_STOP_SENDING;
MACRO_MOC MOC_DEFAULT_FEATURES;
MACRO_MOC MOC_DEFAULT_TOOLBOX_FEATURES;
Boolean __pascal MODEMANSWERCALL(SerialPortNum port, ModemResultCode *result);
Boolean __pascal MODEMAUTOANSWER(SerialPortNum port, word numRings, ModemResultCode *result);
void __pascal MODEMCLOSE(SerialPortNum port, StreamLingerMode linger);
Boolean __pascal MODEMDIAL(SerialPortNum port, word strLen, const char *dialStr, ModemResultCode *result);
Boolean __pascal MODEMFACTORYRESET(SerialPortNum port, ModemResultCode *result);
Boolean __pascal MODEMHANGUP(SerialPortNum port, ModemResultCode *result);
Boolean __pascal MODEMINITMODEM(SerialPortNum port, word strLen, const char *initStr, ModemResultCode *result);
Boolean __pascal MODEMOPEN(GeodeHandle driver, SerialPortNum port, StreamOpenFlags flags, word inBuffSize, word outBuffSize, word timeout);
Boolean __pascal MODEMRESET(SerialPortNum port, ModemResultCode *result);
void __pascal MODEMSETMESSAGEDATANOTIFY(SerialPortNum port, Message msg, optr destination);
Boolean __pascal MODEMSETMESSAGEENDCALLNOTIFY(SerialPortNum port, Message msg, optr destination);
void __pascal MODEMSETMESSAGERESPONSENOTIFY(SerialPortNum port, Message msg, optr destination);
void __pascal MODEMSETROUTINEDATANOTIFY(SerialPortNum port, word data, ModemDataNotifyRoutinePtr callback);
void __pascal MODEMSETROUTINERESPONSENOTIFY(SerialPortNum port, word data, ModemResponseNotifyRoutinePtr callback);
MACRO_MONTH MONTH_MAX;
MACRO_MONTH_MIN MONTH_MIN;
MACRO_MOT MOT_ALWAYS_BUSY;
MACRO_MOUSE2 MOUSE_CROSS_WIDTH;
MACRO_MOUSE MOUSE_PROTO_MAJOR;
MACRO_MOUSE_PROTO MOUSE_PROTO_MINOR;
MACRO_MPA MPA_REPLACE_SHIFT;
MACRO_MPA MPA_UPDATE_MODE_SHIFT;
$BA9BEDDE95EF8B884DD35A79F3AFC73C MPBT_INBOX;
$BA9BEDDE95EF8B884DD35A79F3AFC73C MPBT_OUTBOX;
MACRO_MPD_PASS MPD_PASS_INFO;
MACRO_MPD_PASS_INFO MPD_PASS_INFO_OFFSET;
MACRO_MPD_REGISTER MPD_REGISTER_PARAMS;
MACRO_MPD MPD_RETURN_INFO;
MACRO_MPD_RETURN_INFO MPD_RETURN_INFO_OFFSET;
MACRO_MPR_PARAM1_OFFSET MPD_RETURN_TYPE;
MACRO_MPD_RETURN MPD_RETURN_TYPE_OFFSET;
MACRO_MPM2 MPM_100_POINT;
MACRO_MPM2 MPM_25_POINT;
MACRO_MPM2 MPM_50_POINT;
MACRO_MSI_PARAM MPM_C_PARAMS;
MACRO_MPM_PICA MPM_INCH;
MACRO_MPM MPM_MEMORY_INFO;
MACRO_MPM_MEMORY MPM_MEMORY_INFO_OFFSET;
MACRO_MPM_PICA MPM_PICA;
MACRO_MPR MPR_BP;
MACRO_MPR MPR_CH;
MACRO_MPR MPR_CL;
MACRO_MPR MPR_CX;
MACRO_MPR MPR_DH;
MACRO_MPR MPR_DL;
MACRO_MPR MPR_DX;
MACRO_MPR MPR_NONE;
MACRO_MPR_PARAM1 MPR_PARAM1;
MACRO_MPR_PARAM1_OFFSET MPR_PARAM1_OFFSET;
MACRO_MPR_PARAM2 MPR_PARAM2;
MACRO_MPR_PARAM2_OFFSET MPR_PARAM2_OFFSET;
MACRO_MPR MPR_PARAM3;
MACRO_MPR_PARAM3 MPR_PARAM3_OFFSET;
$F40F922336D241E4BA6A145EE24387F9 MPT_BYTES;
$F40F922336D241E4BA6A145EE24387F9 MPT_GRAPHIC;
$F40F922336D241E4BA6A145EE24387F9 MPT_PAGES;
$F40F922336D241E4BA6A145EE24387F9 MPT_PERCENTAGE;
$F40F922336D241E4BA6A145EE24387F9 MPT_STRING;
MACRO_MRBWT MRBWT_AH;
MACRO_MRBWT MRBWT_AL;
MACRO_MRBWT MRBWT_AX;
MACRO_MRBWT MRBWT_BP;
MACRO_MRBWT MRBWT_BPH;
MACRO_MRBWT MRBWT_BPL;
MACRO_MRBWT MRBWT_CH;
MACRO_MRBWT MRBWT_CL;
MACRO_MRBWT MRBWT_CX;
MACRO_MRBWT MRBWT_DH;
MACRO_MRBWT MRBWT_DL;
MACRO_MRBWT MRBWT_DX;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_BLACKLISTED;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_BUSY;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_CONNECT;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_CONNECT_1200;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_CONNECT_2400;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_CONNECT_4800;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_CONNECT_9600;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_DELAYED;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_DRIVER_IN_USE;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_ERROR;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_NOT_SUPPORTED;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_NO_ANSWER;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_NO_CARRIER;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_NO_DIALTONE;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_OK;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_TIMEOUT;
$6D58E2A7C9FFD0ABCA06A35E2AA39D25 MRC_UNKNOWN_RESPONSE;
MACRO_MRDWR MRDWR_AX;
MACRO_MRDWR MRDWR_BP;
MACRO_MRDWR MRDWR_CX;
MACRO_MRDWR MRDWR_DX;
MACRO_MRF MRF_CLEAR_POINTER_IMAGE;
MACRO_MRF MRF_PREVENT_PASS_THROUGH;
MACRO_MRF MRF_PROCESSED;
MACRO_MRF MRF_REPLAY;
MACRO_MRF MRF_SET_POINTER_IMAGE;
MACRO_MRMT MRMT_AXBPCXDX;
MACRO_MRMT MRMT_AXCXDXBP;
MACRO_MRMT MRMT_BPAXDXCX;
MACRO_MRMT MRMT_CXDXBPAX;
MACRO_MRMT MRMT_DXCX;
MACRO_MRMT MRMT_MULTIPLEAX;
MACRO_MRT MRT_BYTE_OR_WORD;
MACRO_MRT MRT_DWORD;
MACRO_MRT MRT_MULTIPLE;
MACRO_MRT MRT_VOID;
MACRO_MRVF MRVF_ALWAYS_SCROLL;
MACRO_MRVF MRVF_USE_MARGIN_FROM_TOP_LEFT;
$F3A72C3DC360E2DC4AE8FA2ED0194DAD MRVM_0_PERCENT;
$F3A72C3DC360E2DC4AE8FA2ED0194DAD MRVM_100_PERCENT;
$F3A72C3DC360E2DC4AE8FA2ED0194DAD MRVM_25_PERCENT;
$F3A72C3DC360E2DC4AE8FA2ED0194DAD MRVM_50_PERCENT;
$F3A72C3DC360E2DC4AE8FA2ED0194DAD MRVM_75_PERCENT;
MACRO_MSCCF MSCCF_BRIGHT;
MACRO_MSCCF MSCCF_CONTRAST;
MACRO_MSCCF MSCCF_COUNT;
MACRO_MSCCF MSCCF_DOUG;
MACRO_MSCCF MSCCF_GREY;
MACRO_MSCCTF MSCCTF_BRIGHT;
MACRO_MSCCTF MSCCTF_CONTRAST;
MACRO_MSCCTF MSCCTF_COUNT;
MACRO_MSCCTF MSCCTF_DOUG;
MACRO_MSCCTF MSCCTF_GREY;
MACRO_MSCC MSCC_DEFAULT_FEATURES;
MACRO_MSCC_DEFAULT MSCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_MAILBOX_NOW MSCF_POOF_LIST;
MACRO_MSCF MSCF_TRANSPORT_LIST;
MACRO_MSCRF MSCRF_BLOCK_DIRTIED;
MACRO_MSCRF MSCRF_MESSAGE_WAITING;
$5D3FB63EE043026E94D58F33A227FC46 MSCR_messageWaiting;
$5D3FB63EE043026E94D58F33A227FC46 MSCR_nominal;
MACRO_MSCTF_DIALOG MSCTF_CREATION_PENDING;
MACRO_MSCTF_DIALOG MSCTF_DIALOG_COMPLETE;
MACRO_MSCTF_DIALOG MSCTF_NON_REENTRANT;
MACRO_MSCTF_DIALOG MSCTF_NOTIFY_AFTER_REGISTER;
MACRO_MSCTF MSCTF_SEND_DIALOG;
$2815D5579D9A29F3AA32413A54D711DC MSC_BRIGHT;
$2815D5579D9A29F3AA32413A54D711DC MSC_CONTRAST;
$2815D5579D9A29F3AA32413A54D711DC MSC_COUNT;
MACRO_MSCF MSC_DEFAULT_FEATURES;
MACRO_MSC MSC_DEFAULT_TOOLBOX_FEATURES;
$2815D5579D9A29F3AA32413A54D711DC MSC_DOUG;
$2815D5579D9A29F3AA32413A54D711DC MSC_GREY;
MACRO_MSF MSF_FROM_CHILD;
MACRO_MSF MSF_SEP;
MACRO_MSF MSF_USABLE;
$EDE771BB5E2C603B563C5F6AD912397F MSGCENTRE_ITEM;
void __pascal MSGVISLARGETEXTREGIONFROMPOINT(VisLargeTextRegionFromPointParams *retValue, optr object, PointDWFixed point);
void __pascal MSGVISTEXTLOADSTYLESHEETPARAMS(StyleSheetParams *params, optr object, word preserveArrays);
MACRO_MSI MSI_PARAM_SIZE;
MACRO_MSI_PARAM MSI_PARAM_SIZE_OFFSET;
MACRO_MTDI_LOW MSI_STRUCT_AT_SS_BP;
$5C1295860C50D0FFD797EFFF61F5331D MSN_APP_LOADED;
$5C1295860C50D0FFD797EFFF61F5331D MSN_NEW_FOCUS_APP;
$5C1295860C50D0FFD797EFFF61F5331D MSN_NEW_IACP_BINDING;
$5C1295860C50D0FFD797EFFF61F5331D MSN_REMOVE_IACP_BINDING;
MACRO_MSPCF MSPCF_16BIT;
MACRO_MSPCF MSPCF_48BIT;
MACRO_MSPCF MSPCF_FLOATING;
MACRO_MSPCTF MSPCTF_16BIT;
MACRO_MSPCTF MSPCTF_48BIT;
MACRO_MSPCTF MSPCTF_FLOATING;
MACRO_MSPC MSPC_DEFAULT_FEATURES;
MACRO_MSPC_DEFAULT MSPC_DEFAULT_TOOLBOX_FEATURES;
$8C80A15AD88F08AA5761920E6F61B861 MSP_16BIT;
$8C80A15AD88F08AA5761920E6F61B861 MSP_48BIT;
$8C80A15AD88F08AA5761920E6F61B861 MSP_FLOATING;
MACRO_MS MS_BAR1;
MACRO_MS MS_BAR2;
MACRO_MS MS_CIRCLE;
MACRO_MS MS_CROSS1;
MACRO_MS MS_CROSS2;
MACRO_MS MS_DIAMOND;
MACRO_MS MS_NONE;
MACRO_MS MS_SQUARE;
MACRO_MS MS_TRIANGLE;
MACRO_MRMT MTDI_HIGH_REG;
MACRO_MTDI_HIGH MTDI_HIGH_REG_OFFSET;
MACRO_MTDI MTDI_LOW_REG;
MACRO_MTDI_LOW MTDI_LOW_REG_OFFSET;
MACRO_MT MT_CURRENT;
MACRO_MT MT_DATA_ENTRY;
MACRO_MT MT_DESIGN;
MACRO_FIELD MULTI_RECORD_LAYOUT_ROW;
MACRO_MUSM MUSM_EIGHTH_INCH;
MACRO_MUSM MUSM_HALF_INCH;
MACRO_MUSM MUSM_ONE_INCH;
MACRO_MUSM MUSM_QUARTER_INCH;
MACRO_MUT MUT_ANY;
MACRO_MUT MUT_INT;
MACRO_MUT MUT_MEM_BLOCK;
MACRO_MUT MUT_NONE;
MACRO_MUT MUT_REASON_ENCLOSED;
MACRO_ASF ManualFeed;
MACRO_ManualFeed ManualFeed_OFFSET;
MACRO_NAME_ARRAY_MAX NAAF_SET_DATA_ON_REPLACE;
MACRO_NAF NAF_BY_TOKEN;
MACRO_NAF NAF_DEFINITION;
MACRO_NAF NAF_NAME;
MACRO_NAF NAF_TOKEN_DEFINITION;
word __pascal NAMEARRAYADD(optr arr, const TCHAR *nameToAdd, word nameLength, NameArrayAddFlags flags, const void *data);
void __pascal NAMEARRAYCHANGENAME(optr arr, word nameToken, const TCHAR *newName, word nameLength);
ChunkHandle __pascal NAMEARRAYCREATEAT(optr arr, word dataSize, word headerSize, ObjChunkFlags ocf);
word __pascal NAMEARRAYFIND(optr arr, const TCHAR *nameToAdd, word nameLength, void *returnData);
MACRO_SD NAMENUMBER_LENGTH;
MACRO_NAME_ARRAY_MAX NAME_ARRAY_MAX_DATA_SIZE;
MACRO_NAME_ARRAY NAME_ARRAY_MAX_NAME_LENGTH;
MACRO_NAME NAME_ARRAY_MAX_NAME_SIZE;
MACRO_NAME_LIST NAME_LIST_INCREMENT;
MACRO_NAME2 NAME_ROW;
MACRO_ECHO NAME_SERVER;
MACRO_NCF NCF_IS_COMPOSITE;
MACRO_NCF NCF_IS_FOCUSABLE;
MACRO_NCF NCF_IS_INPUT_NODE;
MACRO_NCF NCF_IS_MENU_RELATED;
MACRO_NECF NECF_STYLES;
MACRO_NEC NEC_DEFAULT_FEATURES;
MACRO_NEF NEF_STATE_CHANGING;
__int32 __pascal NETGENERATERANDOM32();
int __pascal NETGENERATERANDOM8(int limit);
MACRO_NFF NFF_LEADING_ZERO;
MACRO_NF_COMPLETED NF_BACKTRACK_AFTER_TRAVELING;
MACRO_NF_COMPLETED NF_COMPLETED_CIRCUIT;
MACRO_NF_COMPLETED NF_INITIATE_QUERY;
MACRO_NF_COMPLETED NF_NAV_MENU_BAR;
MACRO_NF_COMPLETED NF_REACHED_ROOT;
MACRO_NF_COMPLETED NF_SKIP_NODE;
MACRO_NF_COMPLETED NF_TRAVEL_CIRCUIT;
MACRO_NF NF_UNDEFINED;
MACRO_ENG NG_CHAR_TO_GET_CHAR_SO_SO;
MACRO_MAX_LENGTH_RECORD NLTS_SIGNATURE;
$696725A5B536AC719681B4D1B7E39792 NMDFID_INVALID;
$696725A5B536AC719681B4D1B7E39792 NMDFID_WYSWYG_FOAM_FILE;
$DBA17BBACE22ACBA27E0957E5119F0FA NNT_OBEX_RECEIVE_STATUS;
$DBA17BBACE22ACBA27E0957E5119F0FA NNT_RESTORE_BEGINNING;
$DBA17BBACE22ACBA27E0957E5119F0FA NNT_RESTORE_ENDING;
$DBA17BBACE22ACBA27E0957E5119F0FA NNT_WWW_FETCH;
$DBA17BBACE22ACBA27E0957E5119F0FA NNT_WWW_HOTLIST_CHANGE;
$DBA17BBACE22ACBA27E0957E5119F0FA NNT_WWW_WAKE_UP;
$6307CB310C754CD55CF54B6940ED749C NOKIA_GCNSLT_OBEX_RECEIVE_STATUS;
$6307CB310C754CD55CF54B6940ED749C NOKIA_GCNSLT_WWW_NOTIFICATIONS;
MACRO_NOTES NOTES_FILE_MAJOR_PROTOCOL;
MACRO_NOTES NOTES_FILE_MINOR_PROTOCOL;
MACRO_MARKED_RECORD NOT_A_RECORD;
MACRO_DATABASE NOT_IN_LAYOUT_NAME_LIST;
MACRO_NO NO_ERROR_RETURNED;
MACRO_NO_IDEA NO_IDEA_FORMAT;
MACRO_INSERT_OK NO_INSERT_DONE;
MACRO_FFFV NO_ITEM_HIGHLIGHT;
MACRO_REDRAW NO_REDRAW;
MACRO_CUSTOM NO_RULERS;
MACRO_NO_WAIT NO_WAIT;
MACRO_NRT NRT_LOAD_FROM_TEMP_VISUAL_UPDATE_ROW;
MACRO_NRT NRT_REGULAR;
MACRO_NT NT_BOOLEAN;
MACRO_NT NT_DATE_TIME;
MACRO_NT2 NT_INK;
MACRO_NT2 NT_TEXT;
MACRO_NT NT_VALUE;
MACRO_NULL NULL;
MACRO_CONSTANT NULL_FOAM_PATH;
MACRO_NULL_GROUP NULL_GROUP_ID;
MACRO_NULL2 NULL_UNDO_CONTEXT;
MACRO_NUMBER2 NUMBER_IMPEX_DATA_CLASSES;
MACRO_NUMBER NUMBER_OF_STANDARD_FILES;
MACRO_MAX_SORT NUM_ASCII_DIGITS;
MACRO_NUM NUM_ASCII_FRACTIONAL_DIGITS;
MACRO_FLOAT_STACK NUM_DATE_TIME_FORMATS;
MACRO_GR NUM_GSTRING_CMDS;
MACRO_FLOAT_STACK NUM_NUMBER_FORMATS;
MACRO_FLOAT_STACK NUM_PRE_DEF_FORMATS;
MACRO_N N_ROWS_PER_ROW_BLOCK;
MACRO_N N_ROW_BLOCKS;
MACRO_NullChunk NullChunk;
MACRO_NullClass NullClass;
MACRO_NullDBGroupAndItem NullDBGroupAndItem;
MACRO_NullHandle NullHandle;
MACRO_NullOptr NullOptr;
OBEXError __pascal OBEXABORT(byte *header, word headerLen);
OBEXError __pascal OBEXACCEPTGET(byte *header, word headerLen, TCHAR *bodyFile);
OBEXError __pascal OBEXACCEPTPUT(MemHandle *objInfo);
OBEXError OBEXEXITCLIENT(void);
OBEXError OBEXEXITSERVER(void);
OBEXError __pascal OBEXGET(byte *header, word headerLen, MemHandle *recvInfo);
MACRO_OBEXHI OBEXHI_BODY;
MACRO_OBEXHI OBEXHI_COUNT;
MACRO_OBEXHI OBEXHI_DESCRIPTION;
MACRO_OBEXHI OBEXHI_END_OF_BODY;
MACRO_OBEXHI OBEXHI_HTTP;
MACRO_OBEXHI OBEXHI_LENGTH;
MACRO_OBEXHI OBEXHI_NAME;
MACRO_OBEXHI OBEXHI_TARGET;
MACRO_OBEXHI OBEXHI_TIME;
MACRO_OBEXHI OBEXHI_TYPE;
MACRO_OBEXHI OBEXHI_USER_DEFINED;
MACRO_OBEXHI OBEXHI_WHO;
MACRO_OBEXHT OBEXHT_BINARY;
MACRO_OBEXHT OBEXHT_BYTE;
MACRO_OBEXHT OBEXHT_DWORD;
MACRO_OBEXHT OBEXHT_UNICODEZ;
OBEXError __pascal OBEXINITCLIENT(OBEXTransport transport, OBEXInitClientFlags initFlags, TCHAR *who);
OBEXError __pascal OBEXINITSERVER(OBEXTransport transport, OBEXInitServerFlags initFlags, optr obexApp, Message connectMsg, Message putMsg, Message getMsg, Message disconnectMsg);
OBEXError __pascal OBEXINITSERVERWITHWHO(OBEXTransport transport, OBEXInitServerFlags initFlags, optr obexApp, Message connectMsg, Message putMsg, Message getMsg, Message disconnectMsg, TCHAR *who);
MACRO_OBEXLE OBEXLE_ALREADY_INITIALIZED;
MACRO_OBEXLE OBEXLE_BAD_SERVER_STATE;
MACRO_OBEXLE OBEXLE_CANT_INITIALIZE_SERVER;
MACRO_OBEXLE OBEXLE_FILE_ERROR;
MACRO_OBEXLE OBEXLE_NO_CONNECTION;
MACRO_OBEXLE OBEXLE_NO_OBEX_SERVICE;
MACRO_OBEXLE OBEXLE_OK;
MACRO_OBEXLE OBEXLE_OPERATION_ABORTED;
MACRO_OBEXLE OBEXLE_OPERATION_NOT_IN_PROGRESS;
byte *__pascal OBEXNEXTHEADER(byte *header, OBEXHeaderID *headerType, word *headerLength, dword *headerValue);
OBEXError __pascal OBEXPUT(byte *header, word headerLen, TCHAR *bodyFile, MemHandle *response);
MACRO_OBEXRC OBEXRC_ACCEPTED;
MACRO_OBEXRC OBEXRC_BAD_GATEWAY;
MACRO_OBEXRC OBEXRC_BAD_REQUEST;
MACRO_OBEXRC OBEXRC_CONFLICT;
MACRO_OBEXRC OBEXRC_CONTINUE;
MACRO_OBEXRC OBEXRC_CREATED;
MACRO_OBEXRC OBEXRC_FINAL;
MACRO_OBEXRC OBEXRC_FORBIDDEN;
MACRO_OBEXRC OBEXRC_GATEWAY_TIMEOUT;
MACRO_OBEXRC OBEXRC_GONE;
MACRO_OBEXRC OBEXRC_HTTP_VERSION_NOT_SUPPORTED;
MACRO_OBEXRC OBEXRC_INTERNAL_SERVER_ERROR;
MACRO_OBEXRC OBEXRC_LENGTH_REQUIRED;
MACRO_OBEXRC OBEXRC_METHOD_NOT_ALLOWED;
MACRO_OBEXRC OBEXRC_MOVED_PERMANENTLY;
MACRO_OBEXRC OBEXRC_MOVED_TEMPORARILY;
MACRO_OBEXRC OBEXRC_MULTIPLE_CHOICES;
MACRO_OBEXRC OBEXRC_NON_AUTHORITATIVE_INFO;
MACRO_OBEXRC OBEXRC_NOT_ACCEPTABLE;
MACRO_OBEXRC OBEXRC_NOT_FOUND;
MACRO_OBEXRC OBEXRC_NOT_IMPLEMENTED;
MACRO_OBEXRC OBEXRC_NOT_MODIFIED;
MACRO_OBEXRC OBEXRC_NO_CONTENT;
MACRO_OBEXRC OBEXRC_PARTIAL_CONTENT;
MACRO_OBEXRC OBEXRC_PAYMENT_REQUIRED;
MACRO_OBEXRC OBEXRC_PRECONDITION_FAILED;
MACRO_OBEXRC OBEXRC_PROXY_AUTH_REQUIRED;
MACRO_OBEXRC OBEXRC_REQUESTED_ENTITY_TOO_LARGE;
MACRO_OBEXRC OBEXRC_REQUEST_TIME_OUT;
MACRO_OBEXRC OBEXRC_REQUEST_URL_TOO_LARGE;
MACRO_OBEXRC OBEXRC_RESET_CONTENT;
MACRO_OBEXRC OBEXRC_SEE_OTHER;
MACRO_OBEXRC OBEXRC_SERVICE_UNAVAILABLE;
MACRO_OBEXRC OBEXRC_SUCCESS;
MACRO_OBEXRC OBEXRC_SWITCHING_PROTOCOLS;
MACRO_OBEXRC OBEXRC_UNAUTHORIZED;
MACRO_OBEXRC OBEXRC_UNSUPPORTED_MEDIA_TYPE;
MACRO_OBEXRC OBEXRC_USE_PROXY;
OBEXError __pascal OBEXREJECTGET(OBEXResponseCode response, byte *header, word headerLen);
OBEXError __pascal OBEXREJECTPUT(OBEXResponseCode response, byte *header, word headerLen);
MACRO_OBEXR OBEXR_ABORT;
MACRO_OBEXR OBEXR_CONNECT;
MACRO_OBEXR OBEXR_DISCONNECT;
MACRO_OBEXR OBEXR_GET;
MACRO_OBEXR OBEXR_PUT;
MACRO_OBEXR OBEXR_SETPATH;
OBEXError __pascal OBEXSERVERABORT(OBEXResponseCode response, byte *header, word headerLen);
byte *__pascal OBEXSETHEADER(byte *header, OBEXHeaderID headerType, word headerLength, dword headerValue);
OBEXError __pascal OBEXSETPATH(OBEXSetPathFlags flags, TCHAR *path);
MACRO_OBEXSPF OBEXSPF_PARENT;
$8C4B1481B9D54BF504E4E2C3D296F9F4 OBEXT_TINYTP;
void __pascal OBEXUNICODETOGEOS(char *sbcsBuf, word *dbcsBuf, word length, char unrecognized);
MACRO_OBEX OBEX_MAX_TYPE_HEADER_LENGTH;
optr __pascal OBJBLOCKGETOUTPUT(MemHandle mh);
void __pascal OBJBLOCKSETOUTPUT(MemHandle mh, optr o);
void __pascal OBJCOMPADDCHILD(optr obj, optr objToAdd, word flags, word masterOffset, word compOffset, word linkOffset);
optr __pascal OBJCOMPFINDCHILDBYNUMBER(optr obj, word childToFind, word masterOffset, word compOffset, word linkOffset);
word __pascal OBJCOMPFINDCHILDBYOPTR(optr obj, optr childToFind, word masterOffset, word compOffset, word linkOffset);
void __pascal OBJCOMPMOVECHILD(optr obj, optr objToMove, word flags, word masterOffset, word compOffset, word linkOffset);
Boolean __pascal OBJCOMPPROCESSCHILDREN(optr obj, optr firstChild, ObjCompCallType stdCallback, void *cbData, word masterOffset, word compOffset, word linkOffset, Boolean (__pascal *callback)(optr parent, optr child, void *cbData));
void __pascal OBJCOMPREMOVECHILD(optr obj, optr objToRemove, word flags, word masterOffset, word compOffset, word linkOffset);
void __pascal OBJDECINTERACTIBLECOUNT(MemHandle mh);
void __pascal OBJDECINUSECOUNT(MemHandle mh);
void *__pascal OBJDEREF(optr obj, word masterLevel);
void *__pascal OBJDEREF1(optr obj);
void *__pascal OBJDEREF2(optr obj);
void __pascal OBJDISPATCHMESSAGE(EventHandle event, Message replacementMessage, optr replacementDest, MessageFlags flags);
Boolean __pascal OBJDORELOCATION(ObjRelocationType type, MemHandle block, void *sourceData, void *destData);
Boolean __pascal OBJDOUNRELOCATION(ObjRelocationType type, MemHandle block, void *sourceData, void *destData);
EventHandle __pascal OBJDUPLICATEMESSAGE(EventHandle msg);
MemHandle __pascal OBJDUPLICATERESOURCE(MemHandle blockToDup, GeodeHandle owner, ThreadHandle burdenThread);
void __pascal OBJENABLEDETACH(optr obj);
void __pascal OBJFREECHUNK(optr o);
void __pascal OBJFREEDUPLICATE(MemHandle mh);
void __pascal OBJFREEMESSAGE(EventHandle event);
void __pascal OBJFREEOBJBLOCK(MemHandle block);
ObjChunkFlags __pascal OBJGETFLAGS(optr o);
Boolean __pascal OBJGETMESSAGEDATA(EventHandle event, MessageDataStruct *data);
Message __pascal OBJGETMESSAGEINFO(EventHandle event, optr *dest);
void __pascal OBJINCDETACH(optr obj);
void __pascal OBJINCINTERACTIBLECOUNT(MemHandle mh);
void __pascal OBJINCINUSECOUNT(MemHandle mh);
void __pascal OBJINITIALIZEMASTER(optr obj, ClassStruct *class);
void __pascal OBJINITIALIZEPART(optr obj, word masterOffset);
optr __pascal OBJINSTANTIATE(MemHandle block, ClassStruct *class);
Boolean __pascal OBJISCLASSADESCENDANT(ClassStruct *class1, ClassStruct *class2);
Boolean __pascal OBJISOBJECTINCLASS(optr obj, ClassStruct *class);
optr __pascal OBJLINKFINDPARENT(optr obj, word masterOffset, word linkOffset);
void *__pascal OBJLOCKOBJBLOCK(MemHandle mh);
VMBlockHandle __pascal OBJMAPSAVEDTOSTATE(MemHandle mh);
MemHandle __pascal OBJMAPSTATETOSAVED(VMBlockHandle vmbh, GeodeHandle gh);
void __pascal OBJMARKDIRTY(optr o);
void __pascal OBJPROCBROADCASTMESSAGE(EventHandle event);
void *__pascal OBJRELOCATEENTRYPOINT(EntryPointRelocation *relocData);
Boolean __pascal OBJRELOCORUNRELOCSUPER(optr oself, ClassStruct *class, word frame);
void __pascal OBJRESIZEMASTER(optr obj, word masterOffset, word newSize);
void __pascal OBJSAVEBLOCK(MemHandle mh);
void __pascal OBJSETFLAGS(optr o, ObjChunkFlags bitsToSet, ObjChunkFlags bitsToClear);
Boolean __pascal OBJTESTIFOBJBLOCKRUNBYCURTHREAD(MemHandle mh);
void __pascal OBJUNRELOCATEENTRYPOINT(EntryPointRelocation *relocData, void *entryPoint);
void *__pascal OBJVARADDDATA(optr obj, VardataKey dataType, word dataSize);
void __pascal OBJVARCOPYDATARANGE(optr source, optr dest, word rangeStart, word rangeEnd);
Boolean __pascal OBJVARDELETEDATA(optr obj, VardataKey dataType);
void __pascal OBJVARDELETEDATAAT(optr obj, word extraDataOffset);
void __pascal OBJVARDELETEDATARANGE(optr obj, word rangeStart, word rangeEnd, Boolean useStateFlag);
void *__pascal OBJVARDEREFDATA(optr obj, VardataKey dataType);
void *__pascal OBJVARFINDDATA(optr obj, VardataKey dataType);
void __pascal OBJVARSCANDATA(optr obj, word numHandlers, VarDataCHandler *handlerTable, void *handlerData);
MACRO_OB OB_NO_OUTPUTBIN;
MACRO_OB OB_OUTPUTBIN1;
MACRO_OB OB_OUTPUTBIN2;
MACRO_OB OB_OUTPUTBIN3;
$8C8514500129344CF3AE0280D50BB8A9 OCCT_ABORT_AFTER_FIRST;
$8C8514500129344CF3AE0280D50BB8A9 OCCT_COUNT_CHILDREN;
$8C8514500129344CF3AE0280D50BB8A9 OCCT_DONT_SAVE_PARAMS_DONT_TEST_ABORT;
$8C8514500129344CF3AE0280D50BB8A9 OCCT_DONT_SAVE_PARAMS_TEST_ABORT;
$8C8514500129344CF3AE0280D50BB8A9 OCCT_SAVE_PARAMS_DONT_TEST_ABORT;
$8C8514500129344CF3AE0280D50BB8A9 OCCT_SAVE_PARAMS_TEST_ABORT;
MACRO_OCF OCF_DIRTY;
MACRO_OCF OCF_IGNORE_DIRTY;
MACRO_OCF OCF_IN_RESOURCE;
MACRO_OCF OCF_IS_OBJECT;
MACRO_OCF OCF_VARDATA_RELOC;
MACRO_OC OC_COPIES;
MACRO_OC OC_NO_COPIES;
MACRO_ODD ODD_EVEN;
MACRO_OD OD_DUPLEXLO;
MACRO_OD OD_DUPLEXSO;
MACRO_OD OD_SIMPLEX;
MACRO_OFFSET OFFSET_FOR_GRAPHIC_RUNS;
MACRO_OFFSET OFFSET_FOR_TYPE_RUNS;
$55AA0FAFD6895AE253F1B116796995E4 OFIQNS_DISPATCH;
$55AA0FAFD6895AE253F1B116796995E4 OFIQNS_INPUT_OBJ_OF_OWNING_GEODE;
$55AA0FAFD6895AE253F1B116796995E4 OFIQNS_PROCESS_OF_OWNING_GEODE;
$55AA0FAFD6895AE253F1B116796995E4 OFIQNS_SYSTEM_INPUT_OBJ;
MACRO_OICF OICF_KEEP_IRDA_ALIVE;
MACRO_ONE ONE_HUNDRED_TWENTY_EIGHTH;
MACRO_OP OP_ADDITION;
MACRO_OP OP_DIVISION;
MACRO_OP OP_DIVISION_GRAPHIC;
MACRO_OP OP_EQUAL;
MACRO_OP OP_EXPONENTIATION;
MACRO_OP OP_GREATER_THAN;
MACRO_OP OP_GREATER_THAN_OR_EQUAL;
MACRO_OP OP_GREATER_THAN_OR_EQUAL_GRAPHIC;
MACRO_OP OP_LESS_THAN;
MACRO_OP OP_LESS_THAN_OR_EQUAL;
MACRO_OP OP_LESS_THAN_OR_EQUAL_GRAPHIC;
MACRO_OP OP_MODULO;
MACRO_OP OP_MULTIPLICATION;
MACRO_OP OP_NEGATION;
MACRO_OP OP_NOT_EQUAL;
MACRO_OP OP_NOT_EQUAL_GRAPHIC;
MACRO_OP OP_PERCENT;
MACRO_OP OP_PERCENT_MODULO;
MACRO_OP OP_RANGE_INTERSECTION;
MACRO_OP OP_RANGE_SEPARATOR;
MACRO_OP OP_STRING_CONCAT;
MACRO_OP OP_SUBTRACTION;
MACRO_OP OP_SUBTRACTION_NEGATION;
MACRO_ORS ORS_CURRENT_BLOCK;
MACRO_ORS ORS_EXTERNAL;
MACRO_ORS ORS_KERNEL;
MACRO_ORS ORS_LIBRARY;
MACRO_ORS ORS_NON_STATE_VM;
MACRO_ORS ORS_NULL;
MACRO_ORS ORS_OWNING_GEODE;
MACRO_ORS ORS_OWNING_GEODE_ENTRY_POINT;
MACRO_ORS ORS_UNKNOWN_BLOCK;
MACRO_ORS ORS_VM_HANDLE;
MACRO_OS OS_NO_SORTER;
MACRO_OS OS_SORTER;
MACRO_RULER_TAB OTHER_INTRINSIC_TAB;
MACRO_OTHER OTHER_ZERO_WIDTH_TAB;
MACRO_OutputBin OutputBin;
MACRO_OutputBin_OFFSET OutputBin_OFFSET;
MACRO_OB OutputCopies;
MACRO_OutputDuplex OutputDuplex;
MACRO_OutputDuplex_OFFSET OutputDuplex_OFFSET;
MACRO_OutputSorter OutputSorter;
MACRO_PACF PACF_HIDDEN_TEXT;
MACRO_PACF PACF_KEEP_LINES;
MACRO_PACF PACF_KEEP_PARA_TOGETHER;
MACRO_PACF PACF_KEEP_PARA_WITH_NEXT;
MACRO_PBGCC_DEFAULT PACF_WORD_WRAP;
MACRO_PAC PAC_DEFAULT_FEATURES;
MACRO_PAC PAC_DEFAULT_TOOLBOX_FEATURES;
$1B194811FF696653DDFF3BBB92DF0D98 PADDING_VCGCNLT_INVALID_ITEM_000;
MACRO_SIGN PAD_STR_LEN;
MACRO_PAGE PAGE_MARGIN_INCREMENT;
Handle PARALLELLOADDRIVER(void);
StreamError __pascal PARALLELMASKERROR(Handle driver, ParallelUnit unit, ParallelError errorMask);
StreamError __pascal PARALLELOPEN(Handle driver, ParallelUnit unit, StreamOpenFlags flags, word outBuffSize, word timeout);
StreamError __pascal PARALLELQUERY(Handle driver, ParallelUnit unit, Boolean *printerBusy);
StreamError __pascal PARALLELRESTART(Handle driver, ParallelUnit unit, Boolean resendPending);
StreamError __pascal PARALLELSETERROR(Handle driver, ParallelUnit unit, StreamRoles roles, ParallelError errorCode);
StreamError __pascal PARALLELSETINTERRUPT(Handle driver, ParallelUnit unit, ParallelInterrupt pInt);
StreamError __pascal PARALLELSTATPORT(Handle driver, ParallelUnit unit, byte *interruptLevel, byte *portOpen);
StreamError __pascal PARALLELTIMEOUT(Handle driver, ParallelUnit unit, word waitSeconds);
StreamError __pascal PARALLELVERIFY(Handle driver, ParallelUnit unit, ParallelError *error);
MACRO_PARALLEL_DEVICE_LPT1 PARALLEL_DEVICE_LPT1;
MACRO_PARALLEL_DEVICE_LPT1 PARALLEL_DEVICE_LPT1_OFFSET;
MACRO_PARALLEL_DEVICE_LPT2 PARALLEL_DEVICE_LPT2;
MACRO_PARALLEL_DEVICE_LPT2 PARALLEL_DEVICE_LPT2_OFFSET;
MACRO_PARALLEL_DEVICE PARALLEL_DEVICE_LPT3;
MACRO_PARALLEL_DEVICE PARALLEL_DEVICE_LPT3_OFFSET;
MACRO_PARALLEL PARALLEL_DEVICE_LPT4;
MACRO_PARALLEL PARALLEL_DEVICE_LPT4_OFFSET;
MACRO_PARALLEL_ERROR_ERROR PARALLEL_ERROR_ERROR;
MACRO_PARALLEL_ERROR_ERROR PARALLEL_ERROR_ERROR_OFFSET;
MACRO_PARALLEL_DEVICE_LPT1 PARALLEL_ERROR_FATAL;
MACRO_PARALLEL_DEVICE_LPT1 PARALLEL_ERROR_FATAL_OFFSET;
MACRO_PARALLEL_ERROR_NOPAPER PARALLEL_ERROR_NOPAPER_OFFSET;
MACRO_PARALLEL_ERROR_OFFLINE PARALLEL_ERROR_OFFLINE;
MACRO_PARALLEL_ERROR_OFFLINE PARALLEL_ERROR_OFFLINE_OFFSET;
MACRO_PARALLEL_ERROR PARALLEL_ERROR_TIMEOUT;
MACRO_PARALLEL_ERROR PARALLEL_ERROR_TIMEOUT_OFFSET;
$9890F1E5FA2454931F6E390FA6C697C8 PARALLEL_INT_ALTERNATE;
$9890F1E5FA2454931F6E390FA6C697C8 PARALLEL_INT_NORMAL;
$9890F1E5FA2454931F6E390FA6C697C8 PARALLEL_INT_THREAD;
$BC6932EC74D721FFF786605AD233AF6E PARALLEL_LPT1;
$BC6932EC74D721FFF786605AD233AF6E PARALLEL_LPT2;
$BC6932EC74D721FFF786605AD233AF6E PARALLEL_LPT3;
$BC6932EC74D721FFF786605AD233AF6E PARALLEL_LPT4;
MACRO_SH PARAM_0;
MACRO_SH PARAM_1;
MACRO_SH PARAM_2;
MACRO_SH PARAM_3;
int __pascal PARSEREVALEXPRESSION(byte *tokenBuffer, byte *scratchBuffer, byte *resultsBuffer, word bufSize, CEvalStruct *evalParams);
void __pascal PARSERFORMATCOLUMNREFERENCE(word colNum, char *buffer, word bufferSize);
int __pascal PARSERFORMATEXPRESSION(byte *tokenBuffer, char *textBuffer, CFormatStruct *formatParams);
word __pascal PARSERGETFUNCTIONARGS(FunctionID funcID, FunctionType funcType, char *textPtr);
word __pascal PARSERGETFUNCTIONDESCRIPTION(FunctionID funcID, FunctionType funcType, char *textPtr);
word __pascal PARSERGETFUNCTIONMONIKER(FunctionID funcID, FunctionType funcType, char *textPtr);
word __pascal PARSERGETNUMBEROFFUNCTIONS(FunctionType funcType);
int __pascal PARSERPARSESTRING(char *textBuffer, byte *tokenBuffer, CParserStruct *parserParams, CParserReturnStruct *retval);
MACRO_PARSER PARSER_TOKEN_ARG_END;
MACRO_PARSER PARSER_TOKEN_CELL;
MACRO_PARSER PARSER_TOKEN_CLOSE_FUNCTION;
MACRO_PARSER PARSER_TOKEN_CLOSE_PAREN;
MACRO_PARSER PARSER_TOKEN_END_OF_EXPRESSION;
MACRO_PARSER PARSER_TOKEN_FUNCTION;
MACRO_PARSER PARSER_TOKEN_NAME;
MACRO_PARSER PARSER_TOKEN_NUMBER;
MACRO_PARSER PARSER_TOKEN_OPEN_PAREN;
MACRO_PARSER PARSER_TOKEN_OPERATOR;
MACRO_PARSER PARSER_TOKEN_STRING;
MACRO_PASCF PASCF_SPACE_ON_BOTTOM;
MACRO_PASCF PASCF_SPACE_ON_TOP;
MACRO_PASC PASC_DEFAULT_FEATURES;
MACRO_PASC PASC_DEFAULT_TOOLBOX_FEATURES;
MACRO_PASSWORD PASSWORD_ENCRYPTED_SIZE;
MACRO_PATTERN_SIZE PATTERN_SIZE;
$04FBDCF4757721D0F3DFE13CF714075F PATT_ALT_RINGING_TONE;
$04FBDCF4757721D0F3DFE13CF714075F PATT_CALENDAR_ALARM;
$04FBDCF4757721D0F3DFE13CF714075F PATT_CELL_BROADCAST;
$04FBDCF4757721D0F3DFE13CF714075F PATT_CLOCK_ALARM;
$04FBDCF4757721D0F3DFE13CF714075F PATT_PERSONAL_TONE;
$04FBDCF4757721D0F3DFE13CF714075F PATT_RECALL_ALERT;
$04FBDCF4757721D0F3DFE13CF714075F PATT_RECEIVED_FAX;
$04FBDCF4757721D0F3DFE13CF714075F PATT_RECEIVED_MAIL;
$04FBDCF4757721D0F3DFE13CF714075F PATT_RECEIVED_SMS;
$04FBDCF4757721D0F3DFE13CF714075F PATT_RINGING_TONE;
MACRO_PA PA_LOAD_IF_USABLE;
MACRO_PA PA_REBOOT_IF_CHANGED;
MACRO_PA PA_SAVE_IF_CHANGED;
MACRO_PA PA_SAVE_IF_ENABLED;
MACRO_PA PA_SAVE_IF_USABLE;
MACRO_PBGCC PBGCC_DEFAULT_FEATURES;
MACRO_PBGCC_DEFAULT PBGCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_PCA PCA_COPY_CONTROLS;
MACRO_PCA PCA_DEFAULT_QUALITY;
MACRO_PCA PCA_FORCE_ROTATION;
MACRO_PCA PCA_GRAPHICS_MODE;
MACRO_PCA PCA_MARK_APP_BUSY;
MACRO_PQE PCA_NO_PRINTER_CONTROLS;
MACRO_PCA PCA_PAGE_CONTROLS;
MACRO_PCA PCA_PROGRESS_PAGE;
MACRO_PCA PCA_PROGRESS_PERCENT;
MACRO_PCA PCA_QUALITY_CONTROLS;
MACRO_PCA PCA_SEE_IF_DOC_WILL_FIT;
MACRO_PCA PCA_SHOW_PROGRESS;
MACRO_PCA PCA_TEXT_MODE;
MACRO_PCA PCA_USES_DIALOG_BOX;
MACRO_PCA PCA_VERIFY_PRINT;
MACRO_PCCAT PCCAT_ACCESS_DENIED;
MACRO_PCCAT PCCAT_CONNECTION_LOST;
MACRO_PCCAT PCCAT_DEFAULT_ABORT;
MACRO_PCCAT PCCAT_DIRECTORY_NAME_EXISTS;
MACRO_PCCAT PCCAT_EXTERNAL_ABORT;
MACRO_PCCAT PCCAT_FILE_IN_USE;
MACRO_PCCAT PCCAT_FILE_IS_DIRECTORY;
MACRO_PCCAT PCCAT_FILE_IS_VOLUME;
MACRO_PCCAT PCCAT_FILE_NOT_FOUND;
MACRO_PCCAT PCCAT_FILE_READ_ONLY;
MACRO_PCCAT PCCAT_INTERNAL_RESERVED_ABORT_TYPE;
MACRO_PCCAT PCCAT_INVALID_DRIVE;
MACRO_PCCAT PCCAT_INVALID_FILE_NAME;
MACRO_PCCAT PCCAT_INVALID_PATH_NAME;
MACRO_PCCAT PCCAT_PATH_NOT_FOUND;
MACRO_PCCAT PCCAT_REMOTE_ABORT;
MACRO_PCCAT PCCAT_REMOTE_ACCESS_DENIED;
MACRO_PCCAT PCCAT_REMOTE_CONNECTION_LOST;
MACRO_PCCAT PCCAT_REMOTE_DIRECTORY_NAME_EXISTS;
MACRO_PCCAT PCCAT_REMOTE_EXTERNAL_ABORT;
MACRO_PCCAT PCCAT_REMOTE_FILE_IN_USE;
MACRO_PCCAT PCCAT_REMOTE_FILE_IS_DIRECTORY;
MACRO_PCCAT PCCAT_REMOTE_FILE_IS_VOLUME;
MACRO_PCCAT PCCAT_REMOTE_FILE_NOT_FOUND;
MACRO_PCCAT PCCAT_REMOTE_FILE_READ_ONLY;
MACRO_PCCAT PCCAT_REMOTE_INVALID_DRIVE;
MACRO_PCCAT PCCAT_REMOTE_INVALID_FILE_NAME;
MACRO_PCCAT PCCAT_REMOTE_INVALID_PATH_NAME;
MACRO_PCCAT PCCAT_REMOTE_PATH_NOT_FOUND;
MACRO_PCCAT PCCAT_REMOTE_RESERVED_ABORT_TYPE;
MACRO_PCCAT PCCAT_REMOTE_SHORT_READ_WRITE;
MACRO_PCCAT PCCAT_REMOTE_TOO_MANY_DIRECTORIES;
MACRO_PCCAT PCCAT_REMOTE_VOLUME_OUT_OF_SPACE;
MACRO_PCCAT PCCAT_REMOTE_VOLUME_UNAVAILABLE;
MACRO_PCCAT PCCAT_REMOTE_VOLUME_WRITE_PROTECTED;
MACRO_PCCAT PCCAT_SHORT_READ_WRITE;
MACRO_PCCAT PCCAT_TOO_MANY_DIRECTORIES;
MACRO_PCCAT PCCAT_VOLUME_OUT_OF_SPACE;
MACRO_PCCAT PCCAT_VOLUME_UNAVAILABLE;
MACRO_PCCAT PCCAT_VOLUME_WRITE_PROTECTED;
MACRO_PCCDDL_FULL PCCDDL_FULL_DETAIL;
MACRO_PCCIF_IR PCCDDL_LOW_DETAIL;
MACRO_PCCDDL PCCDDL_MID_DETAIL;
MACRO_PCCEP PCCEP_ABORT;
MACRO_PCCEP PCCEP_EXIT;
MACRO_PCCEP PCCEP_INIT;
MACRO_PCCF PCCF_LOG_UI;
MACRO_PCCIF PCCIF_IMMEDIATE_EXIT;
MACRO_PCCIF_IR PCCIF_IR_STREAM;
MACRO_PCCIF PCCIF_NOTIFY_EXIT;
MACRO_OBEXSPF PCCIF_NOTIFY_OUTPUT;
MACRO_PCCIF_IR PCCIF_SERSOCK_STREAM;
void PCCOMABORT(void);
PCComFullReturnType __pascal PCCOMCD(const char *dirPathname);
PCComFullReturnType __pascal PCCOMDIR(hptr dataBlock, PCComDirDetailLevel detailLevel, char *fileSpec);
PCComReturnType PCCOMEXIT(void);
word __pascal PCCOMFILEENUM(FileEnumParams *params, MemHandle *bufCreated, word *numNoFit);
PCComFullReturnType __pascal PCCOMGET(hptr dataBlock, word bytesPerStatus, optr statusDest, word statusMSG, char *destPathname);
PCComFullReturnType __pascal PCCOMGETFILESIZE(dword *fileSize, char *filename);
PCComFullReturnType __pascal PCCOMGETFREESPACE(dword *driveSpace, word driveLetter);
PCComReturnType __pascal PCCOMINIT(SerialPortNum port, SerialBaud baud, word timeout, optr callbackOptr, PCComInitFlags flags);
PCComFullReturnType __pascal PCCOMLISTDRIVES(hptr dataBlock);
PCComFullReturnType __pascal PCCOMMKDIR(char *dirPathname);
PCComFullReturnType __pascal PCCOMPWD(char *buffer);
PCComFullReturnType __pascal PCCOMREMARK(char *remark);
PCComReturnType PCCOMRESET(void);
PCComFullReturnType __pascal PCCOMSEND(char *sourcePathname, word bytesPerStatus, optr statusOptr, word statusMSG, char *destPathname);
PCComFullReturnType __pascal PCCOMSTATUS(struct StatusReply *statusBuffer, char *currentFilename);
MACRO_PCCRT PCCRT_ALREADY_INITIALIZED;
MACRO_PCCRT PCCRT_BAD_DEST_PATH;
MACRO_PCCRT PCCRT_BUSY;
MACRO_PCCRT PCCRT_CANNOT_ALLOC_STREAM;
MACRO_PCCRT PCCRT_CANNOT_CREATE_THREAD;
MACRO_PCCRT PCCRT_CANNOT_LOAD_SERIAL_DRIVER;
MACRO_PCCRT PCCRT_COMMAND_ABORTED;
MACRO_PCCRT PCCRT_FILE_COMPLETE;
MACRO_PCCRT PCCRT_FILE_STARTING;
MACRO_PCCRT PCCRT_IN_USE;
MACRO_PCCRT PCCRT_MEMORY_ALLOC_ERROR;
MACRO_PCCRT PCCRT_NOT_INITIALIZED;
MACRO_PCCRT PCCRT_NO_ERROR;
MACRO_PCCRT PCCRT_TOO_MUCH_OUTPUT;
MACRO_PCCRT PCCRT_TRANSFER_COMPLETE;
MACRO_PCCRT PCCRT_TRANSFER_CONTINUES;
MACRO_PCC_DEFAULT PCC_DEFAULT_FEATURES;
MACRO_PCC PCC_DENMARK1;
MACRO_PCC PCC_DENMARK2;
MACRO_PCC PCC_FRANCE;
MACRO_PCC PCC_GERMANY;
MACRO_PCC PCC_ITALY;
MACRO_PCC PCC_JAPAN;
MACRO_PCC PCC_LAT_AMERICA;
MACRO_PCC PCC_LEGAL;
MACRO_PCC PCC_NORWAY;
MACRO_PCC PCC_SPAIN1;
MACRO_PCC PCC_SPAIN2;
MACRO_PCC PCC_SWEDEN;
MACRO_PCC PCC_UK;
MACRO_PCC PCC_USA;
MACRO_PCF PCF_DELETE_IF_SELECTED;
MACRO_PCO PCO_LANDSCAPE;
MACRO_PCO PCO_PORTAIT;
$5F243C82FE45840C606DF869E3A8D891 PCPT_PAGE;
$5F243C82FE45840C606DF869E3A8D891 PCPT_PERCENT;
$5F243C82FE45840C606DF869E3A8D891 PCPT_TEXT;
$D8FB211F926F532627781AA9E6FDF29C PCS_PRINT_BOX_NOT_VISIBLE;
$D8FB211F926F532627781AA9E6FDF29C PCS_PRINT_BOX_VISIBLE;
MACRO_PCT2 PCT_0;
MACRO_PCT2 PCT_10;
MACRO_PCT2 PCT_100;
MACRO_PCT2 PCT_15;
MACRO_PCT2 PCT_20;
MACRO_PCT2 PCT_25;
MACRO_PCT2 PCT_30;
MACRO_PCT2 PCT_35;
MACRO_PCT2 PCT_40;
MACRO_PCT2 PCT_45;
MACRO_PCT2 PCT_5;
MACRO_PCT2 PCT_50;
MACRO_PCT2 PCT_55;
MACRO_PCT2 PCT_60;
MACRO_PCT2 PCT_65;
MACRO_PCT2 PCT_70;
MACRO_PCT2 PCT_75;
MACRO_PCT2 PCT_80;
MACRO_PCT2 PCT_85;
MACRO_PCT2 PCT_90;
MACRO_PCT2 PCT_95;
MACRO_PCT PCT_EQUAL;
MACRO_PCT PCT_ERROR;
$E7839518F5D0FA2910B889FACCFA262A PCT_INTERSECTION;
$E7839518F5D0FA2910B889FACCFA262A PCT_NULL;
$E7839518F5D0FA2910B889FACCFA262A PCT_REPLACE;
MACRO_PCT PCT_SUBDIR;
$E7839518F5D0FA2910B889FACCFA262A PCT_UNION;
MACRO_PCT PCT_UNRELATED;
MACRO_PDAT PDAHI_BACKLIGHT_AVAILABLE;
MACRO_PDAT PDAT_N9000;
MACRO_PDAT PDAT_N9000i;
MACRO_PDAT PDAT_N9110;
MACRO_PDAT PDAT_PC_EMULATOR;
$564C78589B2B06EDC17A0AADD470D4ED PDCT_CLOSE;
$564C78589B2B06EDC17A0AADD470D4ED PDCT_DESTROY;
$564C78589B2B06EDC17A0AADD470D4ED PDCT_OPEN;
$564C78589B2B06EDC17A0AADD470D4ED PDCT_RESTART;
$564C78589B2B06EDC17A0AADD470D4ED PDCT_SHUTDOWN;
$922E1BC3CA4971FC5EE74AD2D300FD57 PDDT_NAME;
$922E1BC3CA4971FC5EE74AD2D300FD57 PDDT_PATH;
$922E1BC3CA4971FC5EE74AD2D300FD57 PDDT_SIZE;
$922E1BC3CA4971FC5EE74AD2D300FD57 PDDT_SYNOPSIS;
MACRO_PDL PDL_CHAR_BUFFER_SIZE;
MACRO_PDL PDL_CHAR_MAX_COUNT;
MACRO_PDT PDT_ALL;
MACRO_PDT_ALL PDT_ALL_LOCAL_AND_NETWORK;
MACRO_PDT PDT_CAMERA;
MACRO_PDT PDT_FACSIMILE;
MACRO_PDT PDT_OTHER;
MACRO_PDT PDT_PLOTTER;
MACRO_PDT PDT_PRINTER;
$E0D5EF4CA08979F8B7EC539D9D778F3C PD_INVALID_DEVICE;
MACRO_PEC PEC_FORM_FEED;
MACRO_PEC PEC_NO_FORM_FEED;
MACRO_PEF PEF_DISABLE_IF_NONE;
MACRO_PEF PEF_DISABLE_IF_SELECTED;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_FATAL;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_FILE_SYSTEM_ERROR;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_FILE_SYSTEM_FULL;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_NETWORK_ERR;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_NO_PAPER;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_NO_PRINTER;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_NO_TONER;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_OFF_LINE;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_PAPER_MISFEED;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_PARALLEL_ERR;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_SERIAL_ERR;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_SERVICE;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_SOME_PROBLEM;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_TIMEOUT;
$1DB987EF7E556B3247120F8D9D694ECD PERROR_WARMUP;
MACRO_PF PF_CELLS;
MACRO_PF PF_CONTAINS_DISPLAY_FUNC;
MACRO_PF PF_FUNCTIONS;
MACRO_PF PF_HAS_LOOKAHEAD;
MACRO_PF PF_NAMES;
MACRO_PF PF_NEW_NAMES;
MACRO_PF PF_NUMBERS;
MACRO_PF PF_OPERATORS;
MACRO_PIA PIA_COMPLETE_INTERACTION_ON_APPLY;
MACRO_PIA PIA_LOAD_OPTIONS_ON_INITIATE;
MACRO_PIA PIA_SAVE_OPTIONS_ON_APPLY;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_BIG_KEYS;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_CHAR_TABLE;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_CHAR_TABLE_CUSTOM;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_CHAR_TABLE_INTERNATIONAL;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_CHAR_TABLE_MATH;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_CHAR_TABLE_SYMBOLS;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_HWR_ENTRY_AREA;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_KEYBOARD;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_NUMBERS;
$6A9A78C9A840AF3CA4C5D951A2D6BBEC PIDT_PUNCTUATION;
MACRO_PID PID_LENGTH;
MACRO_PIFF PIFF_ABSENT_KEY_OVERRIDES_DEFAULTS;
MACRO_PIFF PIFF_APPEND_TO_KEY;
MACRO_PIFF PIFF_SUSPEND_ON_LOAD_OPTIONS;
MACRO_PIFF PIFF_USE_ITEM_MONIKERS;
MACRO_PIFF PIFF_USE_ITEM_STRINGS;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_1;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_3;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_5;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_7;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_DEFAULT;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_FLOW;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_GADGET;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_GEODE;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_SYSTEM;
$1E3516506F921EE5127C2D56BAD6FF6D PIL_WINDOW;
$DADDD837A6ADB2AB77B436B6324E6B5A PIV_NONE;
$DADDD837A6ADB2AB77B436B6324E6B5A PIV_UPDATE;
$DADDD837A6ADB2AB77B436B6324E6B5A PIV_VIDEO_DRIVER_DEFAULT;
MACRO_PIXELS PIXELS_PER_INCH;
void __pascal PLAYSOUNDFROMFILE(FileHandle file);
MACRO_PLE PLE_ORIENTATION;
MACRO_PLE PLE_TYPE;
MACRO_PLI PLI_CHECK_SELECTION_HANDLE_BOUNDS;
MACRO_PLI PLI_DONT_INSERT_OBJECTS_WITH_SELECTION_LOCK;
MACRO_PLI PLI_ONLY_INSERT_CLASS;
MACRO_PLI PLI_ONLY_INSERT_HIGH;
MACRO_PLI PLI_ONLY_PROCESS_CLASS;
MACRO_PLI PLI_ONLY_PROCESS_SELECTED;
MACRO_PLI PLI_STOP_AT_FIRST_HIGH;
MACRO_PLL PLL_COLUMNS;
MACRO_PLE PLL_ROWS;
MACRO_PLL PLL_TYPE;
MACRO_PLPC PLPC_ORIENTATION;
MACRO_PLPC PLPC_TYPE;
MACRO_PLP PLP_ORIENTATION;
MACRO_PLP PLP_TYPE;
$204BB3BC898B888C3845A70CF0927A84 PMET_FETCH_UI;
$204BB3BC898B888C3845A70CF0927A84 PMET_GET_MODULE_INFO;
MACRO_PMF PMF_HARDWARE;
MACRO_PMF PMF_NETWORK;
MACRO_PMF PMF_SYSTEM;
MACRO_PMF PMF_USER;
MACRO_PM_FIRST PM_FIRST_TEXT_MODE;
MACRO_PM PM_GRAPHICS_HI_RES;
MACRO_PM PM_GRAPHICS_LOW_RES;
MACRO_PM PM_GRAPHICS_MED_RES;
MACRO_PM2 PM_HANDLES_RESIZE;
MACRO_PM2 PM_HANDLES_ROTATE;
MACRO_PM2 PM_POINTER_IS_ACTION_OBJECT;
MACRO_PM PM_TEXT_DRAFT;
MACRO_PM PM_TEXT_NLQ;
MACRO_POM POM_GRAPHICS_HIGH;
MACRO_POM POM_GRAPHICS_LOW;
MACRO_POM POM_GRAPHICS_MEDIUM;
MACRO_POM POM_TEXT_DRAFT;
MACRO_POM POM_TEXT_NLQ;
MACRO_POM POM_unused;
$2032E0F0CFA3E21E1117726C9940E06D POST_METHOD;
MACRO_PO PO_LANDSCAPE;
MACRO_PO PO_PORTRAIT;
$D99889442930925BF7084DFE03FB6ADE PPIT_PARALLEL;
$D99889442930925BF7084DFE03FB6ADE PPIT_SERIAL;
$D99889442930925BF7084DFE03FB6ADE PPIT_SERIAL_MOUSE;
$1EF2FB4AFF462BF0AD6A594C61E45E4F PPT_CUSTOM;
$1EF2FB4AFF462BF0AD6A594C61E45E4F PPT_FILE;
$1EF2FB4AFF462BF0AD6A594C61E45E4F PPT_NOTHING;
$1EF2FB4AFF462BF0AD6A594C61E45E4F PPT_PARALLEL;
$1EF2FB4AFF462BF0AD6A594C61E45E4F PPT_SERIAL;
MACRO_PQE PQE_HIGH;
MACRO_PQE PQE_LOW;
MACRO_PQE PQE_MEDIUM;
MACRO_PQT PQT_HIGH;
MACRO_PQT PQT_LOW;
MACRO_PQT PQT_MEDIUM;
void PREFDISCARDSAVEDVIDEO(void);
void PREFRESTOREVIDEO(void);
void PREFSAVEVIDEO(void);
MACRO_PREFVM PREFVM_DOC_PROTO_MAJOR;
MACRO_PREFVM PREFVM_DOC_PROTO_MINOR;
MACRO_PREF_ITEM PREF_ITEM_GROUP_MAX_SELECTIONS;
MACRO_PREF_ITEM PREF_ITEM_GROUP_STRING_BUFFER_SIZE;
MACRO_PREF PREF_MODULE_PROTO_MAJOR;
MACRO_PREF PREF_MODULE_PROTO_MINOR;
MACRO_PRINTCF PRINTCF_FAX_TRIGGER;
MACRO_TD PRINTCF_PRINT_TRIGGER;
MACRO_PRINTCTF PRINTCTF_FAX_TRIGGER;
MACRO_PRINTCF PRINTCTF_PRINT_TRIGGER;
MACRO_PRINTCTF PRINTC_DEFAULT_FEATURES;
MACRO_PRINTC PRINTC_DEFAULT_TOOLBOX_FEATURES;
MACRO_PRINT2 PRINT_GRAPHICS;
MACRO_SO_SCALE PRINT_PROTO_MAJOR;
MACRO_PRINT PRINT_PROTO_MINOR;
MACRO_PRINT2 PRINT_TEXT;
MACRO_PRIORITY PRIORITY_FOCUS;
MACRO_PRIORITY PRIORITY_HIGH;
MACRO_PRIORITY PRIORITY_IDLE;
MACRO_PRIORITY2 PRIORITY_LIST_EVALUATE_PARENT_POINT_FOR_BOUNDS;
MACRO_PRIORITY PRIORITY_LOW;
MACRO_PRIORITY PRIORITY_LOWEST;
MACRO_PRIORITY PRIORITY_STANDARD;
MACRO_PRIORITY PRIORITY_TIME_CRITICAL;
MACRO_PRIORITY PRIORITY_UI;
dword __pascal PROCCALLFIXEDORMOVABLE_PASCAL();
void *__pascal PROCGETLIBRARYENTRY(GeodeHandle library, word entryNumber);
ThreadHandle __pascal PROCINFO(GeodeHandle gh);
MACRO_PROC PROC_SE_CONTINUE;
MACRO_PROC PROC_SE_EXIT;
MACRO_PROC PROC_SE_STORE_AT_BACK;
MACRO_PROGRESS PROGRESS_BLACK_HEIGHT;
MACRO_MAX_PIXELS PROGRESS_BLACK_WIDTH;
MACRO_PROGRESS_GRAY PROGRESS_GRAY_HEIGHT;
MACRO_PROGRESS_WHITE PROGRESS_GRAY_WIDTH;
MACRO_PROGRESS_WHITE PROGRESS_WHITE_HEIGHT;
MACRO_PROGRESS PROGRESS_WHITE_WIDTH;
$E7D266D7D37886471FC81C865D983433 PR_DONT_RESEND;
$E7D266D7D37886471FC81C865D983433 PR_RESEND;
MACRO_PSCF PSCF_10;
MACRO_PSCF PSCF_12;
MACRO_PSCF PSCF_14;
MACRO_PSCF PSCF_18;
MACRO_PSCF PSCF_24;
MACRO_PSCF PSCF_36;
MACRO_PSCF PSCF_54;
MACRO_PSCF PSCF_72;
MACRO_FC2 PSCF_9;
MACRO_PSCF PSCF_CUSTOM_SIZE;
MACRO_PSCF PSCF_LARGER;
MACRO_PSCF PSCF_SMALLER;
MACRO_PSCTF PSCTF_10;
MACRO_PSCTF PSCTF_12;
MACRO_PSCTF PSCTF_14;
MACRO_PSCTF PSCTF_18;
MACRO_PSCTF PSCTF_24;
MACRO_PSCTF PSCTF_36;
MACRO_PSCTF PSCTF_54;
MACRO_PSCTF PSCTF_72;
MACRO_PSCTF PSCTF_9;
MACRO_PSCTF PSCTF_LARGER;
MACRO_PSCTF PSCTF_SMALLER;
$8E400B91C438F0E8C81E47287BFF07B6 PSCT_CANCELED;
$8E400B91C438F0E8C81E47287BFF07B6 PSCT_COMPLETE;
$8E400B91C438F0E8C81E47287BFF07B6 PSCT_ERROR;
$8E400B91C438F0E8C81E47287BFF07B6 PSCT_NEW_PAGE;
MACRO_PSC PSC_DEFAULT_FEATURES;
MACRO_PSC_DEFAULT PSC_DEFAULT_TOOLBOX_FEATURES;
MACRO_PSEE_APP PSEE_APP_BASE;
MACRO_PSEE PSEE_BAD_ARG_COUNT;
MACRO_PSEE PSEE_BAD_CELL_REFERENCE;
MACRO_PSEE PSEE_BAD_EXPRESSION;
MACRO_FORMATTED PSEE_BAD_NAME_DEFINITION;
MACRO_PSEE PSEE_BAD_NUMBER;
MACRO_FORMATTED PSEE_CELL_OR_RANGE_IS_LOCKED;
MACRO_PSEE PSEE_CIRCULAR_DEP;
MACRO_PSEE PSEE_CIRCULAR_REF;
MACRO_PSEE PSEE_CIRC_NAME_REF;
MACRO_PSEE PSEE_COLUMN_OUT_OF_RANGE;
MACRO_PSEE PSEE_COLUMN_TOO_LARGE;
MACRO_PSEE PSEE_DIVIDE_BY_ZERO;
MACRO_PSEE PSEE_EXPECTED_CLOSE_PAREN;
MACRO_PSEE PSEE_EXPECTED_END_OF_EXPRESSION;
MACRO_PSEE PSEE_EXPECTED_OPEN_PAREN;
MACRO_PSEE PSEE_FLOAT_BASE;
MACRO_PSEE_APP PSEE_FLOAT_GEN_ERR;
MACRO_PSEE_APP PSEE_FLOAT_NEG_INFINITY;
MACRO_PSEE_APP PSEE_FLOAT_POS_INFINITY;
MACRO_PSEE PSEE_FUNCTION_NO_LONGER_EXISTS;
MACRO_PSEE PSEE_GENERAL;
MACRO_PSEE PSEE_GEN_ERR;
MACRO_PSEE PSEE_ILLEGAL_TOKEN;
MACRO_FORMATTED PSEE_LAST_SPREADSHEET_ERROR;
MACRO_PSEE PSEE_MISSING_CLOSE_PAREN;
MACRO_PSEE PSEE_NA;
MACRO_FORMATTED PSEE_NAME_ALREADY_DEFINED;
MACRO_PSEE PSEE_NESTING_TOO_DEEP;
MACRO_PSEE PSEE_NOT_ENOUGH_NAME_SPACE;
MACRO_PSEE PSEE_NO_CLOSE_QUOTE;
MACRO_FORMATTED PSEE_NO_DEFINITION_GIVEN;
MACRO_FORMATTED PSEE_NO_NAME_GIVEN;
MACRO_PSEE PSEE_NUMBER_OUT_OF_RANGE;
MACRO_PSEE PSEE_OUT_OF_STACK_SPACE;
MACRO_FORMATTED PSEE_REALLOC_FAILED;
MACRO_FORMATTED PSEE_RESULT_SHOULD_BE_CELL_OR_RANGE;
MACRO_PSEE PSEE_ROW_OUT_OF_RANGE;
MACRO_PSEE PSEE_ROW_TOO_LARGE;
MACRO_PSEE PSEE_SSHEET_BASE;
MACRO_PSEE PSEE_TOO_MANY_DEPENDENCIES;
MACRO_PSEE PSEE_TOO_MANY_TOKENS;
MACRO_PSEE PSEE_UNDEFINED_NAME;
MACRO_PSEE PSEE_UNKNOWN_IDENTIFIER;
MACRO_PSEE PSEE_WRONG_TYPE;
MACRO_PSF PSF_ABORT;
MACRO_PSF PSF_FAX_AVAILABLE;
MACRO_PSF PSF_RECEIVED_COMPLETED;
MACRO_PSF PSF_RECEIVED_NAME;
MACRO_PSF PSF_VERIFIED;
MACRO_PSIZECF PSIZECF_CUSTOM_SIZE;
MACRO_PSIZECF PSIZECF_LAYOUT;
MACRO_PSIZECF PSIZECF_MARGINS;
MACRO_PSIZECF PSIZECF_PAGE_TYPE;
MACRO_PSIZECF PSIZECF_SIZE_LIST;
MACRO_PSIZECTF PSIZECTF_DIALOG_BOX;
MACRO_PSIZECT PSIZECT_DEFAULT_TOOLBOX_FEATURES;
MACRO_PSIZEC PSIZEC_DEFAULT_FEATURES;
$6B175670219C3A85EF367898BCFB0158 PSS_ASCII7;
$6B175670219C3A85EF367898BCFB0158 PSS_IBM437;
$6B175670219C3A85EF367898BCFB0158 PSS_IBM850;
$6B175670219C3A85EF367898BCFB0158 PSS_IBM860;
$6B175670219C3A85EF367898BCFB0158 PSS_IBM863;
$6B175670219C3A85EF367898BCFB0158 PSS_IBM865;
$6B175670219C3A85EF367898BCFB0158 PSS_LATIN1;
$6B175670219C3A85EF367898BCFB0158 PSS_PCGEOS;
$6B175670219C3A85EF367898BCFB0158 PSS_ROMAN8;
$6B175670219C3A85EF367898BCFB0158 PSS_VENTURA;
$6B175670219C3A85EF367898BCFB0158 PSS_WINDOWS;
$894F390A6474159F1CD83F51CE405E14 PS_BUSY;
MACRO_PS PS_DOES_FONTS;
MACRO_PS PS_DUMB_RASTER;
$894F390A6474159F1CD83F51CE405E14 PS_IDLE;
MACRO_PS_NORMAL PS_NORMAL;
MACRO_PS PS_PDL;
$894F390A6474159F1CD83F51CE405E14 PS_PRINTING;
MACRO_PS_NORMAL PS_REVERSE;
$894F390A6474159F1CD83F51CE405E14 PS_WAITING;
$894F390A6474159F1CD83F51CE405E14 PS_WARMING_UP;
MACRO_PTR PTR_LEAVE_BOTTOM;
MACRO_PTR PTR_LEAVE_LEFT;
MACRO_PTR PTR_LEAVE_RIGHT;
MACRO_PTR PTR_LEAVE_TOP;
MACRO_PTS PTS_BOLD;
MACRO_PTS PTS_CONDENSED;
MACRO_PTS PTS_DBLHEIGHT;
MACRO_PTS PTS_DBLWIDTH;
MACRO_PTS PTS_FUTURE;
MACRO_PTS PTS_ITALIC;
MACRO_PTS PTS_NLQ;
MACRO_PTS PTS_OUTLINE;
MACRO_PTS PTS_OVERLINE;
MACRO_PTS PTS_QUADHEIGHT;
MACRO_PTS PTS_REVERSE;
MACRO_PTS PTS_SHADOW;
MACRO_PTS PTS_STRIKETHRU;
MACRO_PTS PTS_SUBSCRIPT;
MACRO_PTS PTS_SUPERSCRIPT;
MACRO_PTS PTS_UNDERLINE;
MACRO_PT PT_CUSTOM_BITMAP;
MACRO_PT PT_CUSTOM_HATCH;
$641AB21D504E8A8B7B3E15089835983E PT_ENVELOPE;
$641AB21D504E8A8B7B3E15089835983E PT_LABEL;
$641AB21D504E8A8B7B3E15089835983E PT_PAPER;
$641AB21D504E8A8B7B3E15089835983E PT_POSTCARD;
MACRO_PT_RASTER PT_RASTER;
MACRO_PT PT_SOLID;
MACRO_PT PT_SYSTEM_BITMAP;
MACRO_PT PT_SYSTEM_HATCH;
MACRO_PT PT_USER_BITMAP;
MACRO_PT PT_USER_HATCH;
MACRO_PT_RASTER PT_VECTOR;
optr __pascal __far PUTUPDIALOGVIAUITHREAD(optr dialogBoxTemplate);
MACRO_MAXIMUM_LABELS_DOWN PZCA_ACT_LIKE_GADGET;
MACRO_PZCA PZCA_IGNORE_UPDATE;
MACRO_PZCA PZCA_INITIALIZE;
MACRO_PZCA PZCA_INITIALIZED;
MACRO_PZCA PZCA_LANDSCAPE_VALID;
MACRO_PZCA PZCA_LOAD_SAVE_OPTIONS;
MACRO_PZCA PZCA_NEW_PAGE_TYPE;
MACRO_PZCA PZCA_PAPER_SIZE;
MACRO_PZCA PZCA_PORTRAIT_VALID;
MACRO_PZCA PZCA_SWAP_WIDTH_HEIGHT;
MACRO_PaperSorted PaperSorted;
$AE833769627E9B9B64683B5A8527770E QE_DEAD;
$AE833769627E9B9B64683B5A8527770E QE_TIMEOUT;
$AE833769627E9B9B64683B5A8527770E QE_TOO_BIG;
$C61FD7A9CBADF65BDC6AF41A7BB250B6 QL_AFTER_DETACH;
$C61FD7A9CBADF65BDC6AF41A7BB250B6 QL_AFTER_UI;
$C61FD7A9CBADF65BDC6AF41A7BB250B6 QL_BEFORE_UI;
$C61FD7A9CBADF65BDC6AF41A7BB250B6 QL_DETACH;
$C61FD7A9CBADF65BDC6AF41A7BB250B6 QL_UI;
MACRO_IPLTT QOSF_DEFAULT_PARAMS;
void __pascal QSORT(void *array, word count, word elementSize, int (__pascal *compare)(const void *, const void *));
MACRO_QUARTER QUARTER;
EventHandle __pascal QUEUEGETMESSAGE(QueueHandle qh);
void __pascal QUEUEPOSTMESSAGE(QueueHandle qh, EventHandle event, word flags);
MACRO_SFOF RAFOF_CONTINUING_REPLACE;
MACRO_RAFOF RAFOF_HAS_UNDO;
Boolean __pascal RANGEENUM(CellFunctionParameters *cfp, CRangeEnumParams *params, RangeEnumFlags flags);
Boolean __pascal RANGEEXISTS(CellFunctionParameters *cfp, word rowStart, word colStart, word rowEnd, word colEnd);
void __pascal RANGEINSERT(CellFunctionParameters *cfp, RangeInsertParams *rip);
MACRO_RBE RBE_BATTERY_LOW;
MACRO_RBE RBE_BATTERY_OK;
MACRO_RBE RBE_RECHARGE_END;
MACRO_RBE RBE_RECHARGE_START;
MACRO_RCFCF RCFCF_LOG_UI;
MACRO_RCFCF RCFCF_MULTIPLE_SELECTION;
MACRO_RCFC RCFC_DEFAULT_FEATURES;
MACRO_RCMCF RCMCF_LOG_UI;
MACRO_RCMCF RCMCF_MULTIPLE_SELECTION;
MACRO_RCMC RCMC_DEFAULT_FEATURES;
MACRO_RCMO RCMO_ICON_BITMAP;
MACRO_EFSA RCMO_TOP_TEXT;
MACRO_RCPCF RCPCF_LOG_UI;
MACRO_RCPC RCPC_DEFAULT_FEATURES;
MACRO_RC_BLACK RC_BLACK;
MACRO_RC_DARK RC_DARK_GRAY;
MACRO_RC_DARK_GREY RC_DARK_GREY;
MACRO_RC_BLACK RC_GRAY_13;
MACRO_RC_BLACK RC_GRAY_20;
MACRO_RC_BLACK RC_GRAY_27;
MACRO_RC_BLACK RC_GRAY_33;
MACRO_RC_BLACK RC_GRAY_40;
MACRO_RC_BLACK RC_GRAY_47;
MACRO_RC_BLACK RC_GRAY_53;
MACRO_RC_BLACK RC_GRAY_60;
MACRO_RC_BLACK RC_GRAY_68;
MACRO_RC_BLACK RC_GRAY_7;
MACRO_RC_BLACK RC_GRAY_73;
MACRO_RC_BLACK RC_GRAY_80;
MACRO_RC_BLACK RC_GRAY_88;
MACRO_RC_BLACK RC_GRAY_93;
MACRO_RC_GREY RC_GREY_13;
MACRO_RC_GREY RC_GREY_20;
MACRO_RC_GREY RC_GREY_27;
MACRO_RC_GREY RC_GREY_33;
MACRO_RC_GREY RC_GREY_40;
MACRO_RC_GREY RC_GREY_47;
MACRO_RC_GREY RC_GREY_53;
MACRO_RC_GREY RC_GREY_60;
MACRO_RC_GREY RC_GREY_68;
MACRO_RC_GREY RC_GREY_7;
MACRO_RC_GREY RC_GREY_73;
MACRO_RC_GREY RC_GREY_80;
MACRO_RC_GREY RC_GREY_88;
MACRO_RC_GREY RC_GREY_93;
MACRO_RC_LIGHT RC_LIGHT_GRAY;
MACRO_RC_DARK RC_LIGHT_GREY;
$AB170257BA29E640C758ED9DC28A3816 RC_MISSED_CALLS;
MACRO_RC RC_NO_RS232C;
$AB170257BA29E640C758ED9DC28A3816 RC_RECEIVED_CALLS;
$AB170257BA29E640C758ED9DC28A3816 RC_RECEIVED_FAXES;
$AB170257BA29E640C758ED9DC28A3816 RC_RECEIVED_SMS;
MACRO_RC RC_RS232C;
$AB170257BA29E640C758ED9DC28A3816 RC_SENT_CALLS;
$AB170257BA29E640C758ED9DC28A3816 RC_SENT_FAXES;
$AB170257BA29E640C758ED9DC28A3816 RC_SENT_SMS;
MACRO_RC_BLACK RC_WHITE;
Boolean __pascal __far RECENTCONTACTSERASESTACK(RecentContactsType rcType);
word __pascal __far RECENTCONTACTSGETCOUNT(RecentContactsType rcType);
word __pascal __far RECENTCONTACTSGETENTRY(RecentContactsType rcType, int item, LogEntry *buffer);
int __pascal __far RECENTCONTACTSGETMISSEDCALLSTOTALCOUNT();
word __pascal __far RECENTCONTACTSGETNEWCOUNT(RecentContactsType rcType);
void __pascal __far RECENTCONTACTSRESETMISSEDCALLSTOTALCOUNT();
void __pascal __far RECENTCONTACTSRESETNEWCOUNT(RecentContactsType rcType);
MACRO_FIELD RECORD_LAYOUT_ROW;
MACRO_REDRAW REDRAW;
MACRO_REF REF_ALL_CELLS;
MACRO_REF REF_CELL_ALLOCATED;
MACRO_REF REF_CELL_FREED;
MACRO_REF REF_MATCH_ROW_FLAGS;
MACRO_REF REF_NO_LOCK;
MACRO_REF REF_OTHER_ALLOC_OR_FREE;
MACRO_REF REF_ROW_FLAGS;
MACRO_REF REF_ROW_FLAGS_MODIFIED;
MACRO_RELOC RELOC_END_OF_LIST;
MACRO_RELOC RELOC_RELOC_ENTRY_POINT;
MACRO_RELOC RELOC_RELOC_HANDLE;
MACRO_RELOC RELOC_RELOC_SEGMENT;
int __pascal RENAME(const char *oldName, const char *newName);
MACRO_ADDED RESET;
MACRO_NO_WAIT RESIZE_QUEUE;
int __pascal RESPCHECKMMCPATH(word hdisk, char *buffer);
void RESPDISABLESUSP(void);
void RESPDRIVERBUS(void);
void RESPENABLESUSP(void);
int RESPGETBACKLIGHTSTATE(void);
int RESPGETLIDSTATUS(void);
int __pascal RESPGETMMCCIN(byte *buffer);
int RESPGETMMCDRIVE(void);
int __pascal RESPGETMMCNAME(char *buf, int *bufSize);
int RESPGETMMCSTATUS(void);
int RESPGETPHONEMODULESTATUS(void);
int RESPMMCCHECKFORMAT(void);
void __pascal RESPMMCEVENT(int status);
void __pascal RESPNOTIFYBATTERYSTATUS(word battStat);
int __pascal RESPREADRTCCMOS(int address);
int __pascal RESPREGISTERFORNMI(RespNmiNotifyRoutine *callback);
void RESPRELOADSUSPTIMER(void);
void __pascal RESPSETBACKLIGHTSTATE(Boolean state);
int __pascal RESPSETMMCNAME(char *buf, int bufSize);
void RESPSETPHONEMODULESTATUS(void);
void __pascal RESPUNREGISTERFORNMI(word client);
int __pascal RESPWRITERTCCMOS(int address, int data);
MACRO_REST REST;
MACRO_RES RES_FREE;
MACRO_RES RES_QVGA;
MACRO_RES RES_SVGA;
MACRO_RES RES_SXGA;
MACRO_RES RES_VGA;
MACRO_RES RES_XGA;
MACRO_RGCF RGCF_DELETE;
MACRO_RGCF_GRID RGCF_GRID_SPACING;
MACRO_RGCF RGCF_HV;
MACRO_RGCF RGCF_LIST;
MACRO_RGCF RGCF_POSITION;
MACRO_RGCF_GRID RGCF_SHOW_GRID;
MACRO_RGCF_GRID RGCF_SNAP_TO_GRID;
MACRO_RGC RGC_DEFAULT_FEATURES;
MACRO_RGC RGC_DEFAULT_TOOLBOX_FEATURES;
MACRO_RGIF_GENERATE RGIF_GENERATE_SEED;
MACRO_RGIF RGIF_USE_SEED;
MACRO_ORS RID_SOURCE_OFFSET;
MACRO_RIGHT RIGHT_MARGIN;
MACRO_GDA RIMF_NOT_ENABLED;
MACRO_RNT RNT_BATT_LO;
MACRO_RNT RNT_BATT_OK;
MACRO_RNT RNT_LID_CLOSED;
MACRO_RNT RNT_LID_OPEN;
MACRO_RNT RNT_PHONE_OFF;
MACRO_RNT RNT_PHONE_ON;
MACRO_RNT RNT_SAVE_DATA;
MACRO_RNT RNT_SUSP_DISABLED;
MACRO_RNT RNT_SUSP_ENABLED;
MACRO_RNT RNT_WAKEUP;
MACRO_ROO ROO_LEFT_TO_RIGHT;
MACRO_ROO ROO_TOP_TO_BOTTOM;
dword __pascal ROWGETFLAGS(CellFunctionParameters *cfp, word rowNum);
dword __pascal ROWSETFLAGS(CellFunctionParameters *cfp, word rowNum, word flags);
MACRO_J2 ROW_HEIGHT_AUTOMATIC;
MACRO_ROW ROW_HEIGHT_MAX;
MACRO_ROW ROW_HEIGHT_MIN;
MACRO_RSA RSA_CHOOSE_OWN_SIZE;
MACRO_RSA RSA_SUGGESTED_SIZE;
MACRO_RSCA RSCA_SHOW_HORIZONTAL;
MACRO_RSCA RSCA_SHOW_VERTICAL;
MACRO_RSCCF RSCCF_SHOW_HORIZONTAL;
MACRO_RSCCF RSCCF_SHOW_RULERS;
MACRO_RSCCF RSCCF_SHOW_VERTICAL;
MACRO_RSCC RSCC_DEFAULT_FEATURES;
MACRO_RSCC RSCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_RSCEF RSCEF_FIRST_CELL_EXISTS;
MACRO_RSCEF RSCEF_SECOND_CELL_EXISTS;
$E5A504D2B7F6602B2A85B27A8AF5115B RSE_NO_ERROR;
$E5A504D2B7F6602B2A85B27A8AF5115B RSE_UNABLE_TO_ALLOC;
MACRO_RSF RSF_IGNORE_CASE;
MACRO_RSF RSF_IGNORE_SPACES;
MACRO_RSF RSF_SORT_ASCENDING;
MACRO_RSF RSF_SORT_ROWS;
MACRO_RTCF RTCF_CENTIMETERS;
MACRO_MPM_PICA RTCF_DEFAULT;
MACRO_RTCF RTCF_INCHES;
MACRO_RTCF RTCF_PICAS;
MACRO_RTCF RTCF_POINTS;
MACRO_RTCF RTCF_SPREADSHEET;
RTCMError __pascal RTCMCHECKEVENT(unsigned int eventToken, unsigned int eventID);
$73FB1A80F841CFA6585F3BAEA22225DE RTCME_EVENT_NOT_FOUND;
$73FB1A80F841CFA6585F3BAEA22225DE RTCME_INVALID_EVENT;
$73FB1A80F841CFA6585F3BAEA22225DE RTCME_OK;
$73FB1A80F841CFA6585F3BAEA22225DE RTCME_REGISTER_FAILED;
$9F84FB585A811D87BB98331234F1E256 RTCMGLM_APPLICATION;
$9F84FB585A811D87BB98331234F1E256 RTCMGLM_APPLICATION_IN_BACK;
$9F84FB585A811D87BB98331234F1E256 RTCMGLM_DRIVER;
$9F84FB585A811D87BB98331234F1E256 RTCMGLM_ENGINE;
$9F84FB585A811D87BB98331234F1E256 RTCMGLM_LIBRARY;
RTCMError __pascal RTCMUNREGISTEREVENT(unsigned int eventToken, unsigned int eventID);
MACRO_RTCTF RTCTF_CENTIMETERS;
MACRO_RTCTF RTCTF_DEFAULT;
MACRO_RTCTF RTCTF_INCHES;
MACRO_RTCTF RTCTF_PICAS;
MACRO_RTCTF RTCTF_POINTS;
MACRO_RTCTF RTCTF_SPREADSHEET;
MACRO_RTC RTC_DEFAULT_FEATURES;
MACRO_RTC_DEFAULT RTC_DEFAULT_TOOLBOX_FEATURES;
MACRO_RT RT_ERROR;
MACRO_RT RT_TEXT;
MACRO_RT RT_VALUE;
MACRO_PAGE RUDY_HELP_CHAR;
MACRO_RULER2 RULER_GUIDE_CONTROL_DEFAULT_FEATURES;
MACRO_RULER RULER_TAB_TO_LEFT_MARGIN;
MACRO_TR_REF RULER_TAB_TO_LINE_LEFT;
MACRO_RULER_TAB RULER_TAB_TO_PARA_MARGIN;
MACRO_RVA_NO RVA_BOTTOM_AREA;
MACRO_RVA RVA_HORIZONTAL;
MACRO_RVA_NO RVA_LEFT_AREA;
MACRO_RVA_NO RVA_NO_AREA_CHOICE;
MACRO_RVA_NO RVA_RIGHT_AREA;
MACRO_RVA_NO RVA_TOP_AREA;
MACRO_RVA_NO RVA_X_SCROLLER_AREA;
MACRO_RVA_NO RVA_Y_SCROLLER_AREA;
MACRO_SACF SACF_MANUAL;
MACRO_SACF SACF_RECENT;
MACRO_SAC SAC_DEFAULT_FEATURES;
MACRO_SAT_FILLED SAT_ANGLE;
MACRO_SAT_FILLED SAT_ANGLE_OFFSET;
MACRO_SAT_FILLED SAT_FILLED;
MACRO_SAT_FILLED SAT_FILL_WITH_AREA_ATTRIBUTES;
MACRO_SAT SAT_LENGTH;
MACRO_SAT SAT_LENGTH_OFFSET;
MACRO_SA_ATTACHED SA_ATTACHED;
MACRO_SA SA_BOTTOM_LEFT;
MACRO_SA SA_BOTTOM_RIGHT;
MACRO_SA_ATTACHED SA_BRANCH_MINIMIZED;
MACRO_SA_NOT SA_COLOR;
MACRO_SA_ATTACHED SA_CUSTOM_VIS_PARENT;
MACRO_SA_ATTACHED SA_CUSTOM_VIS_PARENT_FOR_CHILD;
MACRO_SA_NOTHING SA_DRAGGING;
MACRO_SA_NOTHING SA_DRAG_SCROLL;
MACRO_SA2 SA_ENGINE_MODE;
MACRO_SA_NOT SA_HORIZONTALLY_TINY;
MACRO_SA_NOTHING SA_INC_BACK;
MACRO_SA_NOTHING SA_INC_FWD;
MACRO_SA_NOTHING SA_INITIAL_POS;
MACRO_SA_NOT SA_KEYBOARD_ONLY;
MACRO_SA_NOT SA_NOT;
MACRO_SA_NOTHING SA_NOTHING;
MACRO_SA_NOT SA_NO_KEYBOARD;
MACRO_SA_NOTHING SA_PAGE_BACK;
MACRO_SA_NOTHING SA_PAGE_FWD;
MACRO_SA_NOTHING SA_PAN;
MACRO_SA_NOT SA_PEN_BASED;
MACRO_SA_ATTACHED SA_REALIZABLE;
MACRO_SA_NOTHING SA_SCALE;
MACRO_SA_NOTHING SA_SCROLL;
MACRO_SA_NOTHING SA_SCROLL_FOR_SIZE_CHANGE;
MACRO_SA_NOTHING SA_SCROLL_INTO;
MACRO_SA_ATTACHED SA_SIMPLE_GEN_OBJ;
MACRO_SA2 SA_SPREADSHEET_IS_LAYER;
MACRO_SPO SA_TARGETABLE;
MACRO_SA_NOT SA_TINY;
MACRO_SA SA_TOP_LEFT;
MACRO_SA SA_TOP_RIGHT;
MACRO_SA_NOTHING SA_TO_BEGINNING;
MACRO_SA_NOTHING SA_TO_END;
MACRO_SA_ATTACHED SA_TREE_BUILT_BUT_NOT_REALIZED;
MACRO_SA_ATTACHED SA_USES_DUAL_BUILD;
MACRO_SA_NOT SA_VERTICALLY_TINY;
MACRO_SBF SBF_FIND_LAST;
MACRO_VMDT SBF_IN_UPDATE_WIN_GROUP;
MACRO_SDT SBF_REUSE_PORT;
MACRO_SBF SBF_SKIP_CHILD;
MACRO_SBF SBF_TREE_BUILD;
MACRO_SBF SBF_UPDATE_MODE;
MACRO_SBF SBF_VIS_PARENT_FULLY_ENABLED;
MACRO_SBF SBF_VIS_PARENT_UNBUILDING;
MACRO_SBF SBF_VIS_PARENT_WITHIN_SCOPE_OF_TREE_BUILD;
MACRO_SBF SBF_WIN_GROUP;
MACRO_SBP SBP_CHEMICAL;
MACRO_SBP_DENOMINATOR SBP_DEFAULT;
MACRO_SBP_DENOMINATOR SBP_DENOMINATOR;
MACRO_SBS2 SBS_CHECKING_DOCUMENT;
MACRO_SBS2 SBS_CHECKING_SELECTION;
MACRO_SBP_DENOMINATOR SBS_CHEMICAL;
MACRO_SBS_DEFAULT SBS_DEFAULT;
MACRO_SBS SBS_DENOMINATOR;
MACRO_SBS2 SBS_NO_SPELL_ACTIVE;
$B7721C107B1CE5AB932BB7835712916B SB_115200;
$B7721C107B1CE5AB932BB7835712916B SB_1200;
$B7721C107B1CE5AB932BB7835712916B SB_14400;
$B7721C107B1CE5AB932BB7835712916B SB_1800;
$B7721C107B1CE5AB932BB7835712916B SB_19200;
$B7721C107B1CE5AB932BB7835712916B SB_2000;
$B7721C107B1CE5AB932BB7835712916B SB_2400;
$B7721C107B1CE5AB932BB7835712916B SB_300;
$B7721C107B1CE5AB932BB7835712916B SB_3600;
$B7721C107B1CE5AB932BB7835712916B SB_38400;
$B7721C107B1CE5AB932BB7835712916B SB_4800;
$B7721C107B1CE5AB932BB7835712916B SB_57600;
$B7721C107B1CE5AB932BB7835712916B SB_600;
$B7721C107B1CE5AB932BB7835712916B SB_7200;
$B7721C107B1CE5AB932BB7835712916B SB_9600;
MACRO_SCANNER SCANNER_TOKEN_CELL;
MACRO_SCANNER SCANNER_TOKEN_CLOSE_PAREN;
MACRO_SCANNER SCANNER_TOKEN_END_OF_EXPRESSION;
MACRO_SCANNER SCANNER_TOKEN_IDENTIFIER;
MACRO_SCANNER SCANNER_TOKEN_LIST_SEPARATOR;
MACRO_SCANNER SCANNER_TOKEN_NUMBER;
MACRO_SCANNER SCANNER_TOKEN_OPEN_PAREN;
MACRO_SCANNER SCANNER_TOKEN_OPERATOR;
MACRO_SCANNER SCANNER_TOKEN_STRING;
$A92B158753A91318E938831BF2ACA23A SCEP_CLOSED;
$A92B158753A91318E938831BF2ACA23A SCEP_EXEC;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_CORRUPTED_DATA;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_DEVICE_NOT_FOUND;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_DRIVER_ERROR;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_FILESYSTEM_FULL;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_INTERNAL_ERROR;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_OK;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_OPEN_ERROR;
$4F3E01DEFE5EC36DC92AA43627E3DD00 SCEP_IF_STREAM_ERROR;
$A92B158753A91318E938831BF2ACA23A SCEP_IREQ;
$A92B158753A91318E938831BF2ACA23A SCEP_IRSP;
$A92B158753A91318E938831BF2ACA23A SCEP_OPEN;
MACRO_SCEP SCEP_REASON_PROVIDER_DIS;
MACRO_SCEP SCEP_REASON_UNSPECIFIED;
MACRO_SCEP SCEP_REASON_USER_DIS;
$C70ADC1A666FCDFCA0FF17A6CF58244F SCEP_ROLE_RECEIVER;
$C70ADC1A666FCDFCA0FF17A6CF58244F SCEP_ROLE_SENDER;
$A92B158753A91318E938831BF2ACA23A SCEP_RREQ;
$A92B158753A91318E938831BF2ACA23A SCEP_RRSP;
$A92B158753A91318E938831BF2ACA23A SCEP_SREQ;
$A92B158753A91318E938831BF2ACA23A SCEP_SRSP;
$A92B158753A91318E938831BF2ACA23A SCEP_WFCC;
$A92B158753A91318E938831BF2ACA23A SCEP_WFCR;
$A92B158753A91318E938831BF2ACA23A SCEP_WRSP;
MACRO_SCFOF SCFOF_CHECK_NUM_CHARS;
MACRO_SCF SCF_2ND_IC;
MACRO_SCF2 SCF_CLEAR_ATTRIBUTES;
MACRO_SCF2 SCF_CLEAR_DATA;
MACRO_SCF2 SCF_CLEAR_NOTES;
MACRO_SCF SCF_COPROC;
MACRO_SCF SCF_CRASHED;
MACRO_SCF SCF_LOGGING;
MACRO_SCF SCF_MCA;
MACRO_SCF SCF_RESTARTED;
MACRO_SCF SCF_RTC;
MACRO_SCF SCF_UNDER_SWAT;
MACRO_SCORE SCORE_BUFFER_SIZE;
MACRO_SCO SCO_CHECK_NUM_CHARS;
MACRO_SCSO SCO_CHECK_SELECTION;
MACRO_SCRT SCRT_INSUFFICIENT_MEMORY;
MACRO_SCRT SCRT_NO_DATA;
MACRO_SCRT SCRT_TOO_MANY_CHARTS;
$8BC72EBC84419DF45BC0DA27720BD137 SCR_DOCUMENT_CHECKED;
$8BC72EBC84419DF45BC0DA27720BD137 SCR_ONE_WORD_CHECKED;
$8BC72EBC84419DF45BC0DA27720BD137 SCR_SELECTION_CHECKED;
MACRO_SCSO SCSO_BEGINNING_OF_DOCUMENT;
MACRO_SCSO SCSO_BEGINNING_OF_SELECTION;
MACRO_SCSO SCSO_END_OF_SELECTION;
MACRO_SCSO SCSO_WORD_BOUNDARY_BEFORE_SELECTION;
$79E09E430BB425288CA2C3150167489A SCST_BLOCKED;
$79E09E430BB425288CA2C3150167489A SCST_LOCKED;
$79E09E430BB425288CA2C3150167489A SCST_MISSING_CARD;
$79E09E430BB425288CA2C3150167489A SCST_OK;
$79E09E430BB425288CA2C3150167489A SCST_PIN_REQUIRED;
$79E09E430BB425288CA2C3150167489A SCST_REJECTED;
MACRO_SCT2 SCT_DATA;
MACRO_SCT2 SCT_DATA_CIRCUIT_ASYNC;
MACRO_SCT2 SCT_FAX;
MACRO_SCT SCT_FULL;
MACRO_SCT SCT_HALF;
MACRO_SCT2 SCT_PHONE;
MACRO_SC2 SC_ACCEPT;
MACRO_SC SC_COLLATE;
$FCC37038358985FBDB2D5C9E69464523 SC_COMMIT_RECORD;
$627908333F158D43589E55DF16392725 SC_CR;
MACRO_STF SC_DEFAULT_FEATURES;
MACRO_SC_DEFAULT SC_DEFAULT_TOOLBOX_FEATURES;
MACRO_SC SC_DONT_COLLATE;
MACRO_SC_DONT SC_DONT_ROTATE;
MACRO_SC2 SC_EXCEPTION;
$FCC37038358985FBDB2D5C9E69464523 SC_FIRST_RECORD;
$627908333F158D43589E55DF16392725 SC_GRAPHIC;
$FCC37038358985FBDB2D5C9E69464523 SC_INSERT_ENTER_CHAR;
$FCC37038358985FBDB2D5C9E69464523 SC_INSERT_TAB_CHAR;
$FCC37038358985FBDB2D5C9E69464523 SC_LAST_RECORD;
$FCC37038358985FBDB2D5C9E69464523 SC_MARK_RECORD;
$FCC37038358985FBDB2D5C9E69464523 SC_NEW_RECORD;
$FCC37038358985FBDB2D5C9E69464523 SC_NEW_RECORD_2;
$FCC37038358985FBDB2D5C9E69464523 SC_NEXT_FIELD;
$FCC37038358985FBDB2D5C9E69464523 SC_NEXT_FIELD_2;
$FCC37038358985FBDB2D5C9E69464523 SC_NEXT_RECORD;
MACRO_SC_NO SC_NO_SCSI;
$627908333F158D43589E55DF16392725 SC_PAGE_BREAK;
$FCC37038358985FBDB2D5C9E69464523 SC_PREVIOUS_FIELD;
$FCC37038358985FBDB2D5C9E69464523 SC_PREVIOUS_FIELD_2;
$FCC37038358985FBDB2D5C9E69464523 SC_PREVIOUS_FIELD_3;
$FCC37038358985FBDB2D5C9E69464523 SC_PREVIOUS_RECORD;
MACRO_SC2 SC_READ;
MACRO_SC_DONT SC_ROTATE;
MACRO_SC_NO SC_SCSI;
MACRO_SC_SUGGESTED SC_SUGGESTED_INTRODUCTORY_FEATURES;
$627908333F158D43589E55DF16392725 SC_TAB;
MACRO_SC2 SC_URGENT;
$627908333F158D43589E55DF16392725 SC_WILDCARD;
$627908333F158D43589E55DF16392725 SC_WILDCHAR;
MACRO_SC2 SC_WRITE;
MACRO_SDCF_NOTE SDCF_CELL_EXISTS;
MACRO_SDCF_NOTE SDCF_NOTE_EXISTS;
MACRO_SDCF SDCF_UI;
MACRO_SDC_ENVELOPE SDC_ENVELOPE;
MACRO_SDEC SDC_NOISE;
MACRO_SDC_TIMBRE SDC_TIMBRE;
MACRO_SDC SDC_WAVEFORM;
MACRO_SDEC SDEC_ADSR;
MACRO_SDEC SDEC_DSP;
MACRO_SDEC SDEC_NONE;
$43E9C101736C5A6689916A08C170A599 SDE_ALREADY_REGISTERED;
$43E9C101736C5A6689916A08C170A599 SDE_CONNECTION_EXISTS;
$43E9C101736C5A6689916A08C170A599 SDE_CONNECTION_REFUSED;
$43E9C101736C5A6689916A08C170A599 SDE_CONNECTION_RESET;
$43E9C101736C5A6689916A08C170A599 SDE_CONNECTION_RESET_BY_PEER;
$43E9C101736C5A6689916A08C170A599 SDE_CONNECTION_TIMEOUT;
$43E9C101736C5A6689916A08C170A599 SDE_DESTINATION_UNREACHABLE;
$43E9C101736C5A6689916A08C170A599 SDE_DRIVER_NOT_FOUND;
$43E9C101736C5A6689916A08C170A599 SDE_INSUFFICIENT_MEMORY;
$43E9C101736C5A6689916A08C170A599 SDE_INTERRUPTED;
$43E9C101736C5A6689916A08C170A599 SDE_INVALID_ADDR;
$43E9C101736C5A6689916A08C170A599 SDE_INVALID_ADDR_FOR_LINK;
$43E9C101736C5A6689916A08C170A599 SDE_INVALID_CONNECTION_HANDLE;
$43E9C101736C5A6689916A08C170A599 SDE_LINK_OPEN_FAILED;
$43E9C101736C5A6689916A08C170A599 SDE_MEDIUM_BUSY;
$43E9C101736C5A6689916A08C170A599 SDE_NOT_REGISTERED;
$43E9C101736C5A6689916A08C170A599 SDE_NO_ERROR;
$43E9C101736C5A6689916A08C170A599 SDE_TEMPORARY_ERROR;
$43E9C101736C5A6689916A08C170A599 SDE_UNSUPPORTED_FUNCTION;
MACRO_SDF SDF_DRAW_GRID;
MACRO_SDF SDF_DRAW_HEADER_FOOTER_BUTTON;
MACRO_SDF SDF_DRAW_NOTE_BUTTON;
$E255D112540C26465EA789ECF4CA5493 SDK_GAGCNLT_APP_TARGET_NOTIFY_MSET_ATTR_CHANGE;
$E255D112540C26465EA789ECF4CA5493 SDK_GAGCNLT_DUMMY_LIST_TYPE;
$E1B77CF01F306C77AFC25B51211ECA55 SDK_NT_MSET_ATTR_CHANGE;
MACRO_SDM SDM_0;
MACRO_SDM SDM_100;
MACRO_SDM SDM_12_5;
MACRO_SDM SDM_25;
MACRO_SDM SDM_37_5;
MACRO_SDM SDM_50;
MACRO_SDM SDM_62_5;
MACRO_SDM SDM_75;
MACRO_SDM SDM_87_5;
MACRO_SDM SDM_BIG_GRID;
MACRO_SDM SDM_BRICK;
MACRO_SDM SDM_CUSTOM;
MACRO_SDM SDM_DIAG_NE;
MACRO_SDM SDM_DIAG_NW;
MACRO_SDM SDM_GRID;
MACRO_SDM SDM_HORIZONTAL;
MACRO_SET SDM_INVERSE;
MACRO_SDM_MASK SDM_MASK;
MACRO_SDM SDM_SHADED_BAR;
MACRO_SDM SDM_SLANT_BRICK;
MACRO_SDM SDM_TILE;
MACRO_SDM SDM_VERTICAL;
MACRO_SDNC SDNC_NO_NOISE;
MACRO_SDNC SDNC_WHITE_NOISE;
MACRO_SDTC SDTC_ADDITIVE;
MACRO_SDTC SDTC_MODULATOR;
MACRO_SDTC SDTC_SELECTIVE;
MACRO_SDTC SDTC_TONE_GENERATOR;
MACRO_SDT SDT_DATAGRAM;
$832DA866C4E6BD40C97AF9A03AC2F2BF SDT_GRAPHICS;
$832DA866C4E6BD40C97AF9A03AC2F2BF SDT_INK;
$832DA866C4E6BD40C97AF9A03AC2F2BF SDT_OTHER;
MACRO_SDT SDT_SEQ_PACKET;
$832DA866C4E6BD40C97AF9A03AC2F2BF SDT_SPREADHSEET;
MACRO_SDT SDT_STREAM;
$832DA866C4E6BD40C97AF9A03AC2F2BF SDT_TEXT;
MACRO_SDWFC SDWFC_GENERATE;
MACRO_SDWFC SDWFC_NONE;
MACRO_SDWFC SDWFC_SELECT;
$351DC98CA581490C51E4294D2E3595A6 SDX_NO_ERROR;
$351DC98CA581490C51E4294D2E3595A6 SDX_PARAM_PROBLEM;
$351DC98CA581490C51E4294D2E3595A6 SDX_SOURCE_QUENCH;
$351DC98CA581490C51E4294D2E3595A6 SDX_TIME_EXCEEDED;
$351DC98CA581490C51E4294D2E3595A6 SDX_UNREACHABLE;
MACRO_SD SD_DEFAULT_FEATURES;
MACRO_SEARCH_REPLACE SEARCH_REPLACE_MAX_WORD_LENGTH;
MACRO_SEARCH SEARCH_REPLACE_TEXT_MAXIMUM;
MACRO_MINUTE SECOND_MAX;
MACRO_SECOND SECOND_MIN;
Boolean __far SECURITYCHECKCELLPHONEMEDIAAVAILABLE(void);
word __far SECURITYCHECKSIMCARDANDPHONE(void);
void __far SECURITYENTERLOCKMODE(void);
Boolean __far SECURITYGETFDNSTATUS(void);
Boolean __far SECURITYGETLOCKSTATUS(void);
word __far SECURITYGETLOCKTIMEOUTTIME(void);
Boolean __pascal __far SECURITYGETSIMANDPHONESTATUS(SIMCardStatusType *simCardStatus);
void __far SECURITYRESUMEAUTOLOCK(void);
void __far SECURITYSUSPENDAUTOLOCK(void);
CellPhoneMediaStatus __far SECURITYTRYTOMAKECELLPHONEMEDIAAVAILABLE(void);
MACRO_SEEK SEEK_CUR;
MACRO_SEEK SEEK_END;
MACRO_SEEK SEEK_SET;
$6E3AB186370C296995C16D3858DB93EC SEFC_CANCEL;
$6E3AB186370C296995C16D3858DB93EC SEFC_CLOSE_VIEWER;
$6E3AB186370C296995C16D3858DB93EC SEFC_COPY;
$6E3AB186370C296995C16D3858DB93EC SEFC_CREATE_NEW;
$6E3AB186370C296995C16D3858DB93EC SEFC_EDIT;
MACRO_SEFH SEFH_AN_ERROR;
MACRO_SEFH SEFH_A_ERROR;
MACRO_SEFH SEFH_INVALID_PUNCTUATION;
MACRO_SEF2 SEF_ACCENT_ERROR;
MACRO_SEF2 SEF_APOSTROPHY_ALTERNATIVE;
MACRO_SEF2 SEF_CAPITALIZATION_ERROR;
MACRO_SEF2 SEF_COMPOUNDING_ERROR;
$18D836BE8BF676513CD5426CA848A2CC SEF_CTI_FORMAT;
MACRO_SEF SEF_DISPLAY_IN_TOOLBOX;
MACRO_SEF2 SEF_DOUBLE_WORD_ERROR;
MACRO_SEF2 SEF_FINAL_CHAR;
MACRO_SEF2 SEF_INIT_ERROR;
MACRO_SEF2 SEF_INVALID_POST_CLITIC;
MACRO_SEF2 SEF_INVALID_PRE_CHARS;
MACRO_SEF2 SEF_INVALID_PRE_CLITIC;
MACRO_SEF2 SEF_INVALID_TRAILING_CHARS;
MACRO_SEF2 SEF_NEGATIVE_WORD;
MACRO_SEF2 SEF_NOT_FREE_STANDING_WORD;
$18D836BE8BF676513CD5426CA848A2CC SEF_NO_FORMAT;
MACRO_SEF2 SEF_ORDINAL_NUMBER_ERROR;
$18D836BE8BF676513CD5426CA848A2CC SEF_SBI_FORMAT;
MACRO_SEF2 SEF_SOFT_HYPHEN_ERROR;
$31F4A8F425A43C1740760E7FEB04741B SELECT_AFTER_EDIT;
StreamError __pascal SERIALCLOSE(Handle driver, SerialUnit unit, StreamLingerMode linger);
StreamError __pascal SERIALCLOSEWITHOUTRESET(Handle driver, SerialUnit unit, StreamLingerMode linger);
StreamError __pascal SERIALDEFINEPORT(Handle driver, word basePort, byte interruptLevel, SerialUnit *unit);
StreamError __pascal SERIALFLUSH(Handle driver, SerialUnit unit, StreamRoles roles);
StreamError __pascal SERIALGETFORMAT(Handle driver, SerialUnit unit, SerialFormat *format, SerialMode *mode, SerialBaud *baud);
StreamError __pascal SERIALGETMODEM(Handle driver, SerialUnit unit, SerialModem *modem);
Handle SERIALLOADDRIVER(void);
StreamError __pascal SERIALOPEN(Handle driver, SerialUnit unit, StreamOpenFlags flags, word inBuffSize, word outBuffSize, word timeout);
StreamError __pascal SERIALOPENFORDRIVER(Handle driver, SerialUnit unit, StreamOpenFlags flags, word inBuffSize, word outBuffSize, word timeout, GeodeHandle owner);
StreamError __pascal SERIALSETFLOWCONTROL(Handle driver, SerialUnit unit, SerialFlowControl flow, SerialModem modem, SerialModemStatus status);
StreamError __pascal SERIALSETFORMAT(Handle driver, SerialUnit unit, SerialFormat format, SerialMode mode, SerialBaud baud);
StreamError __pascal SERIALSETMODEM(Handle driver, SerialUnit unit, SerialModem modem);
StreamError __pascal SERIALSETNOTIFY(Handle driver, StreamToken stream, SerialModemStatus *status);
StreamError __pascal SERIALSETROLE(Handle driver, SerialUnit unit, SerialRole role);
StreamError __pascal SERIALSTATPORT(Handle driver, SerialUnit unit, word *interruptLevel, Boolean *portOpen);
$08DFC7454898025134E339F743EB252C SERIAL_COM1;
$08DFC7454898025134E339F743EB252C SERIAL_COM2;
$08DFC7454898025134E339F743EB252C SERIAL_COM3;
$08DFC7454898025134E339F743EB252C SERIAL_COM4;
$08DFC7454898025134E339F743EB252C SERIAL_COM5;
$08DFC7454898025134E339F743EB252C SERIAL_COM6;
$08DFC7454898025134E339F743EB252C SERIAL_COM7;
$08DFC7454898025134E339F743EB252C SERIAL_COM8;
MACRO_SERIAL_DEVICE_COM1 SERIAL_DEVICE_COM1;
MACRO_SERIAL_DEVICE_COM1 SERIAL_DEVICE_COM1_OFFSET;
MACRO_SERIAL_DEVICE_COM2 SERIAL_DEVICE_COM2;
MACRO_SERIAL_DEVICE_COM2 SERIAL_DEVICE_COM2_OFFSET;
MACRO_SERIAL_DEVICE_COM3 SERIAL_DEVICE_COM3;
MACRO_SERIAL_DEVICE_COM3 SERIAL_DEVICE_COM3_OFFSET;
MACRO_SERIAL_DEVICE_COM4 SERIAL_DEVICE_COM4;
MACRO_SERIAL_DEVICE_COM4 SERIAL_DEVICE_COM4_OFFSET;
MACRO_SERIAL_DEVICE_COM5 SERIAL_DEVICE_COM5;
MACRO_SERIAL_DEVICE_COM5 SERIAL_DEVICE_COM5_OFFSET;
MACRO_SERIAL_DEVICE_COM6 SERIAL_DEVICE_COM6;
MACRO_SERIAL_DEVICE_COM6 SERIAL_DEVICE_COM6_OFFSET;
MACRO_SERIAL_DEVICE SERIAL_DEVICE_COM7;
MACRO_SERIAL_DEVICE SERIAL_DEVICE_COM7_OFFSET;
MACRO_SERIAL_FLOW_HARDWARE SERIAL_DEVICE_COM8;
MACRO_SERIAL_FLOW_HARDWARE SERIAL_DEVICE_COM8_OFFSET;
MACRO_SERIAL SERIAL_ERROR_BREAK;
MACRO_SERIAL SERIAL_ERROR_BREAK_OFFSET;
MACRO_SERIAL_ERROR SERIAL_ERROR_FRAME;
MACRO_SERIAL_ERROR SERIAL_ERROR_FRAME_OFFSET;
MACRO_SERIAL_ERROR_OVERRUN SERIAL_ERROR_OVERRUN;
MACRO_SERIAL_ERROR_OVERRUN SERIAL_ERROR_OVERRUN_OFFSET;
MACRO_SERIAL_ERROR_PARITY SERIAL_ERROR_PARITY;
MACRO_SERIAL_ERROR_PARITY SERIAL_ERROR_PARITY_OFFSET;
$68221AC6186A965E2AF123AEDDB9FBE4 SERIAL_EVENT_MODEM;
MACRO_SERIAL_FLOW_HARDWARE SERIAL_FLOW_HARDWARE;
MACRO_SERIAL_FLOW_HARDWARE SERIAL_FLOW_HARDWARE_OFFSET;
MACRO_SERIAL_FLOW SERIAL_FLOW_SOFTWARE;
MACRO_SERIAL_FLOW SERIAL_FLOW_SOFTWARE_OFFSET;
MACRO_SERIAL_FORMAT SERIAL_FORMAT_BREAK;
MACRO_SERIAL_FORMAT SERIAL_FORMAT_BREAK_OFFSET;
MACRO_SF_LENGTH SERIAL_FORMAT_DLAB;
MACRO_SF_LENGTH SERIAL_FORMAT_DLAB_OFFSET;
MACRO_SERIAL_FORMAT_EXTRA SERIAL_FORMAT_EXTRA_STOP;
MACRO_SERIAL_FORMAT_EXTRA SERIAL_FORMAT_EXTRA_STOP_OFFSET;
MACRO_SERIAL_FORMAT_LENGTH SERIAL_FORMAT_LENGTH;
MACRO_SERIAL_FORMAT_LENGTH SERIAL_FORMAT_LENGTH_OFFSET;
MACRO_SERIAL_FORMAT_PARITY SERIAL_FORMAT_PARITY;
MACRO_SERIAL_FORMAT_PARITY SERIAL_FORMAT_PARITY_OFFSET;
$8AE5CADB88CA2B17E08A8546F870C5B9 SERIAL_LENGTH_5;
$8AE5CADB88CA2B17E08A8546F870C5B9 SERIAL_LENGTH_6;
$8AE5CADB88CA2B17E08A8546F870C5B9 SERIAL_LENGTH_7;
$8AE5CADB88CA2B17E08A8546F870C5B9 SERIAL_LENGTH_8;
MACRO_SERIAL_MODEM_CTS SERIAL_MODEM_CTS;
MACRO_SERIAL_MODEM_CTS SERIAL_MODEM_CTS_OFFSET;
MACRO_SERIAL_MODEM_DCD SERIAL_MODEM_DCD;
MACRO_SERIAL_MODEM_DCD SERIAL_MODEM_DCD_OFFSET;
MACRO_SERIAL_MODEM_DSR SERIAL_MODEM_DSR;
MACRO_SERIAL_MODEM_DSR SERIAL_MODEM_DSR_OFFSET;
MACRO_SERIAL_MODEM_DTR SERIAL_MODEM_DTR;
MACRO_SERIAL_MODEM_DTR SERIAL_MODEM_DTR_OFFSET;
MACRO_SERIAL_MODEM SERIAL_MODEM_OUT1;
MACRO_SERIAL_MODEM SERIAL_MODEM_OUT1_OFFSET;
MACRO_SMC_DCD SERIAL_MODEM_OUT2;
MACRO_SMC_DCD SERIAL_MODEM_OUT2_OFFSET;
MACRO_SERIAL_MODEM_DTR SERIAL_MODEM_RI;
MACRO_SERIAL_MODEM_DTR SERIAL_MODEM_RI_OFFSET;
MACRO_SERIAL_MODEM_RTS SERIAL_MODEM_RTS;
MACRO_SERIAL_MODEM_RTS SERIAL_MODEM_RTS_OFFSET;
MACRO_SERIAL_MODE SERIAL_MODE_COOKED;
MACRO_SERIAL_MODE SERIAL_MODE_RARE;
MACRO_SERIAL_MODE SERIAL_MODE_RAW;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_EVEN;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_MARK;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_NONE;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_ODD;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_ONE;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_SPACE;
$ECEB8CFA620456586655C6769908C3FF SERIAL_PARITY_ZERO;
MACRO_SERIAL_ERROR_OVERRUN SERIAL_PORT_DOES_NOT_EXIST;
MACRO_STREAM_WRITE SERIAL_READ;
MACRO_SERIAL_STATUS_CTS SERIAL_STATUS_CTS;
MACRO_SERIAL_STATUS_CTS_CHANGED SERIAL_STATUS_CTS_CHANGED;
MACRO_SERIAL_STATUS_CTS_CHANGED SERIAL_STATUS_CTS_CHANGED_OFFSET;
MACRO_SERIAL_STATUS_CTS SERIAL_STATUS_CTS_OFFSET;
MACRO_SERIAL_STATUS SERIAL_STATUS_DCD;
MACRO_SERIAL_STATUS_DCD SERIAL_STATUS_DCD_CHANGED;
MACRO_SERIAL_STATUS_DCD SERIAL_STATUS_DCD_CHANGED_OFFSET;
MACRO_SERIAL_STATUS SERIAL_STATUS_DCD_OFFSET;
MACRO_SERIAL_STATUS_DSR SERIAL_STATUS_DSR;
MACRO_SERIAL_STATUS_DSR_CHANGED SERIAL_STATUS_DSR_CHANGED;
MACRO_SERIAL_STATUS_DSR_CHANGED SERIAL_STATUS_DSR_CHANGED_OFFSET;
MACRO_SERIAL_STATUS_DSR SERIAL_STATUS_DSR_OFFSET;
MACRO_SERIAL_STATUS_RING SERIAL_STATUS_RING;
MACRO_SERIAL_STATUS_RING_CHANGED SERIAL_STATUS_RING_CHANGED;
MACRO_SERIAL_STATUS_RING_CHANGED SERIAL_STATUS_RING_CHANGED_OFFSET;
MACRO_SERIAL_STATUS_RING SERIAL_STATUS_RING_OFFSET;
$8E4F37CBFF6035A202A1AD1B1C2FD4E9 SERIAL_XSTOP_HALF;
$8E4F37CBFF6035A202A1AD1B1C2FD4E9 SERIAL_XSTOP_NONE;
$8E4F37CBFF6035A202A1AD1B1C2FD4E9 SERIAL_XSTOP_ONE;
MACRO_LT SERVER_IP_ADDR;
MACRO_SER SER_BOGUS;
MACRO_SER SER_FALSE;
MACRO_SER SER_TRUE;
MACRO_SES SES_ACTION;
MACRO_SES SES_ACTION_OFFSET;
MACRO_SES SES_FOCUS;
MACRO_SES SES_SELECTED;
MACRO_SES SES_SELECT_STATE_CHANGED;
MACRO_SES SES_TARGET;
MACRO_SET SET_CUSTOM_PATTERN;
$CC352368ACDC62280C5B2878C58E88B5 SET_ENTIRE_SHEET;
$CC352368ACDC62280C5B2878C58E88B5 SET_FIRST_DATA_CELL;
$CC352368ACDC62280C5B2878C58E88B5 SET_LAST_DATA_CELL;
$CC352368ACDC62280C5B2878C58E88B5 SET_NEXT_DATA_CELL;
$CC352368ACDC62280C5B2878C58E88B5 SET_NO_EMPTY_CELLS;
$CC352368ACDC62280C5B2878C58E88B5 SET_NO_EMPTY_CELLS_NO_HDR_FTR;
$CC352368ACDC62280C5B2878C58E88B5 SET_PREV_DATA_CELL;
$A026D910F7EFA3A968A94B2CD1CE537A SE_ALL_PORTS_BUSY;
$A026D910F7EFA3A968A94B2CD1CE537A SE_BIND_CONFLICT;
$A026D910F7EFA3A968A94B2CD1CE537A SE_BUFFER_TOO_SMALL;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CANT_LOAD_DRIVER;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CLOSE_SEND_NOT_SUPPORTED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CONNECTION_CLOSED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CONNECTION_ERROR;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CONNECTION_FAILED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CONNECTION_REFUSED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_CONNECTION_RESET;
$A026D910F7EFA3A968A94B2CD1CE537A SE_DESTINATION_UNREACHABLE;
$A026D910F7EFA3A968A94B2CD1CE537A SE_DOMAIN_REQUIRES_16BIT_PORTS;
$A026D910F7EFA3A968A94B2CD1CE537A SE_EXCEPTION;
$A026D910F7EFA3A968A94B2CD1CE537A SE_IMPROPER_CONDITION;
$A026D910F7EFA3A968A94B2CD1CE537A SE_INFO_NOT_AVAILABLE;
$A026D910F7EFA3A968A94B2CD1CE537A SE_INTERNAL_ERROR;
$A026D910F7EFA3A968A94B2CD1CE537A SE_INTERRUPT;
$A026D910F7EFA3A968A94B2CD1CE537A SE_LINK_FAILED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_LISTEN_QUEUE_EMPTY;
$A026D910F7EFA3A968A94B2CD1CE537A SE_MEDIUM_BUSY;
$A026D910F7EFA3A968A94B2CD1CE537A SE_NON_UNIQUE_CONNECTION;
$A026D910F7EFA3A968A94B2CD1CE537A SE_NORMAL;
$A026D910F7EFA3A968A94B2CD1CE537A SE_NOT_IMPLEMENTED;
$2B879885335CF578DE9C061EC9AFC8E4 SE_NO_ERROR;
$A026D910F7EFA3A968A94B2CD1CE537A SE_OUT_OF_MEMORY;
$A026D910F7EFA3A968A94B2CD1CE537A SE_PORT_ALREADY_LISTENING;
$A026D910F7EFA3A968A94B2CD1CE537A SE_PORT_IN_USE;
$A026D910F7EFA3A968A94B2CD1CE537A SE_PORT_NOT_LISTENING;
$2B879885335CF578DE9C061EC9AFC8E4 SE_PREVIOUS_OWNER_DIED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_ALREADY_BOUND;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_ALREADY_CLOSED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_BUSY;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_CLOSED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_IN_USE;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_LISTENING;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_NOT_BOUND;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_NOT_CONNECTED;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_NOT_INTERRUPTIBLE;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SOCKET_NOT_LISTENING;
$A026D910F7EFA3A968A94B2CD1CE537A SE_SYSTEM_SHUTDOWN;
$A026D910F7EFA3A968A94B2CD1CE537A SE_TEMPORARY_ERROR;
$A026D910F7EFA3A968A94B2CD1CE537A SE_TIMED_OUT;
$2B879885335CF578DE9C061EC9AFC8E4 SE_TIMEOUT;
$A026D910F7EFA3A968A94B2CD1CE537A SE_UNKNOWN_DOMAIN;
$A026D910F7EFA3A968A94B2CD1CE537A SE_URGENT;
MACRO_SFC SFC_HARDWARE;
MACRO_SMS_RTS_CHANGED SFC_SOFTWARE;
MACRO_SFE SFE_DATE_STEP_TOO_LARGE;
MACRO_SFE SFE_NOT_DATE_NUMER;
MACRO_SFE SFE_NO_ERROR;
MACRO_SFOF SFOF_STOP_AT_STARTING_POINT;
MACRO_SFT SFT_DELETE_FILE;
MACRO_SFT SFT_SAVE_FILE;
MACRO_SF_ABSOLUTE SF_ABSOLUTE;
MACRO_SF2 SF_ADD_TO_USER_DICTIONARY;
MACRO_SF_MANUAL SF_ALLOW_ITERATION;
MACRO_SF_MANUAL SF_APPLICATION_FUNCTIONS;
MACRO_SF SF_A_CLOSED;
MACRO_SF SF_A_OPEN;
MACRO_SF_BREAK SF_BREAK;
MACRO_SF SF_CALLIGRAPHIC;
MACRO_SF2 SF_CHECK_ALL;
MACRO_SF2 SF_CHECK_SELECTION;
MACRO_SF2 SF_CHECK_TO_END;
MACRO_SCO SF_CLOSE;
MACRO_SF2 SF_CONTEXT;
MACRO_SF SF_CURSIVE;
MACRO_SF_DLAB SF_DLAB;
MACRO_SF_ABSOLUTE SF_DOC_SIZE_CHANGE;
MACRO_SF_MANUAL SF_DOING_FEEDBACK;
MACRO_SF_ABSOLUTE SF_EC_SETUP_CALLED;
MACRO_SF2 SF_EDIT_USER_DICTIONARY;
MACRO_SF_EXTRA SF_EXTRA_STOP;
$35C83F51E81BBF19225AED727E5F2E01 SF_FILENAME;
MACRO_SF_MANUAL SF_HAVE_GRAB;
MACRO_SF_MANUAL SF_IN_VIEW;
MACRO_SF_MANUAL SF_IS_APP_TARGET;
MACRO_SF_MANUAL SF_IS_SYS_FOCUS;
MACRO_SF_MANUAL SF_IS_SYS_TARGET;
MACRO_SF_LENGTH SF_LENGTH;
MACRO_SF_MANUAL SF_MANUAL_RECALC;
MACRO_SF SF_MODERN;
MACRO_SF SF_OLD;
$35C83F51E81BBF19225AED727E5F2E01 SF_PAGE;
$35C83F51E81BBF19225AED727E5F2E01 SF_PAGES;
MACRO_SF_PARITY SF_PARITY;
MACRO_SF_MANUAL SF_QUICK_TRANS_IN_PROGRESS;
MACRO_SF2 SF_REPLACE_ALL;
MACRO_SF2 SF_REPLACE_CURRENT;
MACRO_SF_ABSOLUTE SF_SCALE_TO_FIT;
MACRO_SF_ABSOLUTE SF_SETUP_HAPPENED;
MACRO_SF2 SF_SIMPLE_MODAL_BOX;
MACRO_SF2 SF_SKIP;
MACRO_SF2 SF_SKIP_ALL;
MACRO_SF SF_SLAB;
MACRO_SF2 SF_STATUS;
MACRO_SF2 SF_SUGGESTIONS;
MACRO_SF_MANUAL SF_SUPPRESS_REDRAW;
MACRO_SF SF_TRANS;
MACRO_SA_NOTHING SF_VERTICAL;
MACRO_SF_ABSOLUTE SF_WINDOW_NOT_SUSPENDED;
$9314BCEB47C6754959841B3FE5544301 SGIT_CPU_SPEED;
$9314BCEB47C6754959841B3FE5544301 SGIT_HEAP_SIZE;
$9314BCEB47C6754959841B3FE5544301 SGIT_LARGEST_FREE_BLOCK;
$9314BCEB47C6754959841B3FE5544301 SGIT_NUMBER_OF_DRIVERS;
$9314BCEB47C6754959841B3FE5544301 SGIT_NUMBER_OF_LIBRARIES;
$9314BCEB47C6754959841B3FE5544301 SGIT_NUMBER_OF_PROCESSES;
$9314BCEB47C6754959841B3FE5544301 SGIT_NUMBER_OF_VOLUMES;
$9314BCEB47C6754959841B3FE5544301 SGIT_SYSTEM_DISK;
$9314BCEB47C6754959841B3FE5544301 SGIT_TOTAL_COUNT;
$9314BCEB47C6754959841B3FE5544301 SGIT_TOTAL_GEODES;
$9314BCEB47C6754959841B3FE5544301 SGIT_TOTAL_HANDLES;
$9314BCEB47C6754959841B3FE5544301 SGIT_UI_PROCESS;
MACRO_SGNF SGNF_EDIT;
MACRO_SGNF SGNF_MARKER_SHAPE;
MACRO_SGNF SGNF_OPEN_CLOSE;
MACRO_SGNF SGNF_POLYLINE;
MACRO_SGNF SGNF_SMOOTHNESS;
MACRO_SGNF SGNF_SPLINE_POINT;
MACRO_ADDED SHOW_NOTES;
MACRO_SH SH_135_DEGREE;
MACRO_SH SH_45_DEGREE;
MACRO_SH SH_BRICK;
MACRO_SH2 SH_DATA;
MACRO_SH SH_HORIZONTAL;
MACRO_SH SH_SLANTED_BRICK;
MACRO_SH2 SH_TYPE;
MACRO_SH SH_VERTICAL;
MACRO_LBDF SIAF_ALL_ASCENDING;
MACRO_SIAF SIAF_ALL_DESCENDING;
MACRO_SIF SIF_COLUMNS;
MACRO_SIF SIF_COMPLETE;
MACRO_SIF SIF_DELETE;
MACRO_SIF_MANAGE SIF_INTERNAL;
MACRO_SIF_MANAGE SIF_MANAGE_ATTRIBUTES;
MACRO_SIF_MANAGE SIF_RESET_LINKAGES;
MACRO_SIGN SIGN_STR_LEN;
$EACFA24C9136175F70D3AFF09A4916AA SILENT;
$E887EFB2B4A55B422593C8F7077A575A SIM_LIST_DESELECTED;
$E887EFB2B4A55B422593C8F7077A575A SIM_LIST_SELECTED;
MACRO_SMS_MSGCENTREFILE SIM_MESSAGE;
double __pascal SIN(double x);
double __pascal SINH(double x);
$0DA4114957093A0370C4C628ED81B61F SISE_DELETE_COLUMN_DATA;
$0DA4114957093A0370C4C628ED81B61F SISE_DELETE_ROW_DATA;
$0DA4114957093A0370C4C628ED81B61F SISE_NO_ERROR;
$0DA4114957093A0370C4C628ED81B61F SISE_TOO_MANY_COLUMNS;
$0DA4114957093A0370C4C628ED81B61F SISE_TOO_MANY_ROWS;
$A6102D84F94E2BE359C99F817E40139E SIT_JOB_INFO;
$A6102D84F94E2BE359C99F817E40139E SIT_JOB_PARAMETERS;
$A6102D84F94E2BE359C99F817E40139E SIT_QUEUE_INFO;
MACRO_SIXTEENTH SIXTEENTH;
MACRO_SIXTYFOURTH SIXTYFOURTH;
MACRO_SIZE SIZE_USER_DEFINED;
$95AA10DAFD72970BE72C956ECFEF3F9C SKCAT_ALARM_SOUND_1;
$95AA10DAFD72970BE72C956ECFEF3F9C SKCAT_ALARM_SOUND_2;
$95AA10DAFD72970BE72C956ECFEF3F9C SKCAT_ALARM_SOUND_3;
$95AA10DAFD72970BE72C956ECFEF3F9C SKCAT_CLICK_LOUD;
$95AA10DAFD72970BE72C956ECFEF3F9C SKCAT_CLICK_OFF;
$95AA10DAFD72970BE72C956ECFEF3F9C SKCAT_CLICK_QUIET;
$28EF303444BB2C403B5E355CB9E57DE5 SLT_GEODE_LOAD;
$28EF303444BB2C403B5E355CB9E57DE5 SLT_USER_LOAD_APPLICATION;
MACRO_SL SL_AFRIKAANS;
MACRO_SL SL_ARABIC;
MACRO_SL SL_AUSTRALIAN;
MACRO_SL SL_BASQUE;
MACRO_SL SL_BRITISH;
MACRO_SL SL_CANADIAN;
MACRO_SL SL_CATALAN;
MACRO_SL SL_CHINESE;
MACRO_SL SL_DANISH;
MACRO_SL_DEFAULT SL_DEFAULT;
MACRO_SL SL_DUTCH;
MACRO_SL SL_ENGLISH;
MACRO_SL SL_FINNISH;
MACRO_SL SL_FLEMISH;
MACRO_SL SL_FRENCH;
MACRO_SL SL_GAELIC;
MACRO_SL SL_GERMAN;
MACRO_SL SL_GREEK;
MACRO_SL SL_HAWAIIAN;
MACRO_SL SL_HEBREW;
MACRO_SL SL_HUNGARIAN;
MACRO_SL SL_INDONESIAN;
MACRO_SL SL_ITALIAN;
MACRO_SL SL_JAPANESE;
MACRO_SL SL_KOREAN;
MACRO_SL SL_LATIN;
MACRO_SL SL_MALAY;
MACRO_SL SL_MAORI;
MACRO_SL SL_NORWEGIAN;
MACRO_SL SL_NZEALAND;
MACRO_SL SL_POLISH;
MACRO_SL SL_PORTUGUESE;
MACRO_SL SL_RUSSIAN;
MACRO_SL SL_SERBO_CROATN;
MACRO_SL SL_SLOVAK;
MACRO_SL SL_SPANISH;
MACRO_SL SL_SWEDISH;
MACRO_SL SL_SWISS;
MACRO_SL SL_TURKISH;
MACRO_SL SL_UK_SCANDINAVIAN;
MACRO_SL SL_UNIVERSAL;
MACRO_SL SL_URDU;
MACRO_SL SL_US_ENGLISH;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_ASCII_CIRCUMFLEX;
MACRO_SMALL_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_CHO_CHAN;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_CHO_CHING;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_CHO_CHOE;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_DO_CHADA;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_DO_DEK;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_FO_FAN;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_HO_HIP;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_HO_NOKHUK;
MACRO_SMALL SMALL_CHAR_TO_GET_CHAR_KHO_KHWAI;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_KHO_RAKHANG;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_KO_KAI;
MACRO_SMALL_CHAR_TO_GET_CHAR_LO SMALL_CHAR_TO_GET_CHAR_LO_CHULA;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_MAITAIKHU;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_MAIYAMOK;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_MAI_CHATTAWA;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_MAI_EK;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_MAI_HAN_AKAT;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_MAI_THO;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_MAI_TRI;
MACRO_SMALL SMALL_CHAR_TO_GET_CHAR_MO_MA;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_NIKHAHIT;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_NO_NEN;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_NO_NU;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_O_ANG;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_PAIYANNOI;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_PHINTHU;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_PHO_PHAN;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_PHO_PHUNG;
MACRO_SMALL_CHAR_TO SMALL_CHAR_TO_GET_CHAR_PHO_SAMPHAO;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_PO_PLA;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_RO_RUA;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_RU;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_A;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_AA;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_AE;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_AI_MAIMALAI;
MACRO_SMALL_CHAR_TO_GET_CHAR SMALL_CHAR_TO_GET_CHAR_SARA_AI_MAIMUAN;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_AM;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_E;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_I;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_II;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_SARA_O;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_U;
MACRO_SMALL_CHAR_TO_GET_CHAR_SARA SMALL_CHAR_TO_GET_CHAR_SARA_UE;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SARA_UEE;
MACRO_SMALL_CHAR_TO_GET_CHAR_SARA_UU SMALL_CHAR_TO_GET_CHAR_SARA_UU;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_SO_RUSI;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_SO_SALA;
MACRO_SMALL_CHAR_TO_GET_CHAR_LO SMALL_CHAR_TO_GET_CHAR_SO_SO;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_SO_SUA;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_THANTHAKHAT;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_THO_NANGMONTHO;
MACRO_SMALL_CHAR_TO_GET_CHAR_THO SMALL_CHAR_TO_GET_CHAR_THO_PHUTHAO;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_THO_THAHAN;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_THO_THONG;
MACRO_SMALL_CHAR SMALL_CHAR_TO_GET_CHAR_THO_THUNG;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_TO_PATAK;
MACRO_SMALL_CHAR_TO SMALL_CHAR_TO_GET_CHAR_TO_TAO;
MACRO_SMALL_CHAR_TO_GET_CHAR SMALL_CHAR_TO_GET_CHAR_WO_WAEN;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_CHAR_YO_YAK;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_CHAR_YO_YING;
MACRO_SMALL_CHAR_TO_GET_CURRENCY SMALL_CHAR_TO_GET_CURRENCY_SYMBOL_BAHT;
MACRO_SMALL_CHAR_TO_GET_CHAR_THO SMALL_CHAR_TO_GET_DIGIT_EIGHT;
MACRO_SMALL_CHAR_TO_GET_DIGIT SMALL_CHAR_TO_GET_DIGIT_FIVE;
MACRO_SMALL_CHAR_TO_GET_DIGIT_FOUR SMALL_CHAR_TO_GET_DIGIT_FOUR;
MACRO_SMALL_CHAR_TO_GET_DIGIT_FOUR SMALL_CHAR_TO_GET_DIGIT_NINE;
MACRO_SMALL_CHAR_TO_GET_DIGIT_ONE SMALL_CHAR_TO_GET_DIGIT_ONE;
MACRO_SMALL_CHAR_TO_GET_DIGIT_SEVEN SMALL_CHAR_TO_GET_DIGIT_SEVEN;
MACRO_SMALL_CHAR_TO_GET_DIGIT_THREE SMALL_CHAR_TO_GET_DIGIT_THREE;
MACRO_SMALL_CHAR_TO_GET_DIGIT_TWO SMALL_CHAR_TO_GET_DIGIT_TWO;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_DIGIT_ZERO;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_LEFT_PAREN;
MACRO_SMALL_CHAR_TO_GET_SPACE SMALL_CHAR_TO_GET_MINUS;
MACRO_SMALL_CHAR_TO_GET SMALL_CHAR_TO_GET_PLUS;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_QUOTE;
MACRO_ENG_CHAR_TO_GET_CHAR_CHO SMALL_CHAR_TO_GET_RIGHT_PAREN;
MACRO_SMALL_CHAR_TO_GET_SPACE SMALL_CHAR_TO_GET_SPACE;
MACRO_SMALL2 SMALL_DESIRED_HANDLE_SIZE;
$91F6B745FFED4EC40A544E2CF466C4F0 SMBC_DISPLAY_AND_STORE;
$91F6B745FFED4EC40A544E2CF466C4F0 SMBC_DISPLAY_ONLY;
$BC9211666FA404E1B11DD473B05D5C23 SMBC_INDEX;
$BC9211666FA404E1B11DD473B05D5C23 SMBC_OFF;
$BC9211666FA404E1B11DD473B05D5C23 SMBC_ON;
$91F6B745FFED4EC40A544E2CF466C4F0 SMBC_STORE_ONLY;
MACRO_SMCF SMCF_MARKER_SHAPE;
$63B0D685B3B20F1E187B8A98187C666A SMCM_OFF;
$63B0D685B3B20F1E187B8A98187C666A SMCM_ON;
MACRO_SMC_DCD SMC_CTS;
MACRO_SMC_DCD SMC_DCD;
MACRO_SMC_DCD SMC_DSR;
MACRO_SMC SMC_DTR;
MACRO_SMC SMC_OUT1;
MACRO_SERIAL_MODE SMC_OUT2;
MACRO_SMC SMC_RI;
MACRO_SMC SMC_RTS;
MACRO_SMDCS SMDCS_EIGHT_BIT_MASK;
MACRO_SMDCS SMDCS_EIGHT_BIT_OFFSET;
$58EF8F61FE8CAC6382F4FA2C4FF68448 SMDRR_NO;
$58EF8F61FE8CAC6382F4FA2C4FF68448 SMDRR_SHOWIMMEDIATELY;
$58EF8F61FE8CAC6382F4FA2C4FF68448 SMDRR_YES;
MACRO_SMKF SMKF_DONT_DRAW_ENDPOINTS;
$6F17267BF24DB2925B9802482B1CA86C SMMC_EMAIL;
$6F17267BF24DB2925B9802482B1CA86C SMMC_ERMES;
$6F17267BF24DB2925B9802482B1CA86C SMMC_FAX_GROUP_3;
$6F17267BF24DB2925B9802482B1CA86C SMMC_FAX_GROUP_4;
$6F17267BF24DB2925B9802482B1CA86C SMMC_NORMAL;
$6F17267BF24DB2925B9802482B1CA86C SMMC_PAGING;
$6F17267BF24DB2925B9802482B1CA86C SMMC_VOICE;
$6F17267BF24DB2925B9802482B1CA86C SMMC_X400;
MACRO_SMM SMM_INVERT_MARK_FLAG;
MACRO_SMM SMM_SET_MARK_FLAG;
MACRO_SMM SMM_UNSET_MARK_FLAG;
$C12DC13DAF679FFA4985FEA10C8AEC6D SMREG_ERROR_INVALID_MESSAGE_PROTOCOL;
$C12DC13DAF679FFA4985FEA10C8AEC6D SMREG_ERROR_INVALID_NUMBER_OF_MESSAGES;
MACRO_SMREG SMREG_PROTOCOL_LENGTH_BYTE;
MACRO_SMREG SMREG_PROTOCOL_LENGTH_WORD;
MACRO_SMRITH SMRITH_BYTE_LENGTH;
MACRO_SMRITH SMRITH_NULL_TERMINATE;
MACRO_SMRITH SMRITH_WORD_LENGTH;
$EB0FB178842C717DA8A7CB0217558F40 SMRP_NO;
$EB0FB178842C717DA8A7CB0217558F40 SMRP_USED;
$EB0FB178842C717DA8A7CB0217558F40 SMRP_YES;
$0451F92F349E32BE151B21642DC2B465 SMRR_APPLICATION_NOT_REGISTERED;
$0451F92F349E32BE151B21642DC2B465 SMRR_FAIL;
$0451F92F349E32BE151B21642DC2B465 SMRR_OK;
MACRO_SMSC_ADDRESS SMSC_ADDRESS_LEN;
MACRO_SMSC_DYN SMSC_CLEAR_LIST;
MACRO_SMSC_DYN SMSC_CLOSE;
MACRO_SMSC_DYN SMSC_DELETE;
MACRO_SMSC_DELIVERED SMSC_DELIVERED;
MACRO_SMSC_DYN SMSC_DYN_LIST;
MACRO_SMSC SMSC_FAILED;
MACRO_SMSC_GET SMSC_GET_NEXT;
MACRO_SMSC_GET SMSC_GET_PREV;
MACRO_SMSC_TIME SMSC_MSG_LEN;
MACRO_SMSC_TIME SMSC_NAME_LEN;
MACRO_SMSC_NO SMSC_NO_MORE_MSG;
MACRO_SMSC_SET SMSC_NO_MSG;
MACRO_SMSC_NO SMSC_OK;
MACRO_SMSC SMSC_PENDING;
MACRO_CW SMSC_SENT;
MACRO_SMSC_SET SMSC_SET_INIT;
MACRO_SMSC_TIME SMSC_TIME_STAMP;
MACRO_SMSC_DYN SMSC_VIEW;
MACRO_SMSF SMSF_CHAR_COUNTER;
MACRO_SMSF SMSF_DEST_NUMBER;
MACRO_SMSF SMSF_FROM;
MACRO_SMSF SMSF_POSTMARK;
MACRO_SMSF SMSF_REPLY_PATH;
MACRO_SMSF SMSF_STAMP;
MACRO_SMSF SMSF_STAMP_BOX;
MACRO_SMSF SMSF_TEMPLATE;
MACRO_SMSF SMSF_TO;
MACRO_SMS_ASCII SMS_ASCII_ADDRESS_MAX_LENGTH;
MACRO_SMS_MSGCENTREFILE SMS_CONTACT_DEVICE_DB;
MACRO_SMS SMS_CTS;
MACRO_SMS SMS_CTS_CHANGED;
MACRO_SERIAL_MODEM_DSR SMS_DCD;
MACRO_SMS SMS_DCD_CHANGED;
MACRO_SMS_DEFAULT SMS_DEFAULT_FEATURES;
MACRO_SMS_DO SMS_DO_EIGHT_BIT_MASK;
MACRO_SMS SMS_DSR;
MACRO_SMS SMS_DSR_CHANGED;
MACRO_SMS_RTS SMS_DTR;
MACRO_SMS_DTR SMS_DTR_CHANGED;
MACRO_SMS_FILE SMS_FILE_MAJOR_PROTOCOL;
MACRO_SMS_FILE SMS_FILE_MINOR_PROTOCOL;
MACRO_SMS_GSM SMS_GSM_0340_ADDRESS_MAX_LENGTH;
MACRO_SMS_GSM_MAX SMS_GSM_MAX_8BIT_USER_DATA;
MACRO_SMS_GSM_MAX SMS_GSM_MAX_USER_DATA_LENGTH;
MACRO_SMS_GSM SMS_INTERNATIONAL_NUMBER;
MACRO_SMS_VPF SMS_ISL_ALL;
MACRO_SMS_ISL SMS_ISL_DANISH;
MACRO_SMS_ISL SMS_ISL_DUTCH;
MACRO_SMS_ISL SMS_ISL_ENGLISH;
MACRO_SMS_ISL SMS_ISL_FINNISH;
MACRO_SMS_ISL SMS_ISL_FRENCH;
MACRO_SMS_ISL SMS_ISL_GERMAN;
MACRO_SMS_ISL SMS_ISL_GREEK;
MACRO_SMS_ISL SMS_ISL_ITALIAN;
MACRO_SMS_ISL SMS_ISL_NORWEGIAN;
MACRO_SMS_ISL SMS_ISL_PORTUGUESE;
MACRO_SMS_ISL SMS_ISL_SPANISH;
MACRO_SMS_ISL SMS_ISL_SWEDISH;
MACRO_SMS_ISL SMS_ISL_TURKISH;
MACRO_SMS_GSM_MAX SMS_MAX_MSGCENTRE_EMPTY_LIST_ITEM_LEN;
MACRO_SMS_GSM_MAX SMS_MAX_MSGCENTRE_NAME_LEN;
MACRO_SAC SMS_MAX_VOICE_NUMBER;
MACRO_SMS_MESSAGE SMS_MESSAGE_IS_IN_SIM;
MACRO_SMS_MESSAGE SMS_MESSAGE_REPLACETYPE_MASK;
MACRO_SMS_MSGCENTREFILE SMS_MSGCENTREFILE_NAME_SIZE;
MACRO_SMS_DO SMS_MTI_SMS_SUBMIT;
MACRO_SMS SMS_RING;
MACRO_SMS SMS_RING_CHANGED;
MACRO_SMS_RTS SMS_RTS;
MACRO_SMS_RTS_CHANGED SMS_RTS_CHANGED;
MACRO_SAC SMS_VCARD_DEFAULT_PORT_NUMBER;
MACRO_SMS_VCARD SMS_VCARD_LONG_PORT_NUMBER_SIZE;
MACRO_SMS_VPF SMS_VPF_INTEGER;
MACRO_SMT SMT_PC;
MACRO_SMT SMT_PC_AT;
MACRO_SMT SMT_PC_CONV;
MACRO_SMT SMT_PC_JR;
MACRO_SMT SMT_PC_XT;
MACRO_SMT SMT_PC_XT_286;
MACRO_SMT SMT_PRODUCT_SPECIFIC_1;
MACRO_SMT SMT_PRODUCT_SPECIFIC_2;
MACRO_SMT SMT_PRODUCT_SPECIFIC_3;
MACRO_SMT SMT_PRODUCT_SPECIFIC_4;
MACRO_SMT SMT_PS1;
MACRO_SMT SMT_PS2_30;
MACRO_SMT SMT_PS2_50;
MACRO_SMT SMT_PS2_60;
MACRO_SMT SMT_PS2_80;
MACRO_SMT SMT_UNKNOWN;
$42A58214516CA2F6AA9A9EC891076ABB SMVP_MAX;
$42A58214516CA2F6AA9A9EC891076ABB SMVP_ONE_DAY;
$42A58214516CA2F6AA9A9EC891076ABB SMVP_ONE_HOUR;
$42A58214516CA2F6AA9A9EC891076ABB SMVP_ONE_WEEK;
$42A58214516CA2F6AA9A9EC891076ABB SMVP_SIX_HOURS;
MACRO_SM2 SM_ADVANCED_CREATE;
MACRO_SM2 SM_ADVANCED_EDIT;
MACRO_SM2 SM_BEGINNER_EDIT;
MACRO_SM2 SM_BEGINNER_POLYLINE_CREATE;
MACRO_SM2 SM_BEGINNER_SPLINE_CREATE;
MACRO_SM SM_COOKED;
MACRO_SM2 SM_INACTIVE;
MACRO_SM SM_RARE;
MACRO_SM SM_RAW;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_1;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_2;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_3;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_4;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_5;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_6;
$781EE3B25E51C102156CFE966979AA40 SM_REPLACE_TYPE_7;
$781EE3B25E51C102156CFE966979AA40 SM_RETURN_CALL_MESSAGE;
$781EE3B25E51C102156CFE966979AA40 SM_TYPE_0;
MACRO_SNAFF SNAFF_IGNORE_CASE;
MACRO_SERIAL_MODEM_DSR SNE_MODEM;
MACRO_SNF SNF_ABORT;
MACRO_SNF SNF_BIZARRE;
MACRO_SNF SNF_CONTINUE;
MACRO_SNF SNF_EXIT;
MACRO_SNF_NOTIFICATION SNF_NOTIFICATION;
MACRO_SNF SNF_REBOOT;
MACRO_SNF SNF_RETRY;
MACRO_UHTA SNF_WORD1_MEM;
MACRO_SNF_WORD2 SNF_WORD2_MEM;
MACRO_SNF_WORD3 SNF_WORD3_MEM;
MACRO_SNF_WORD4 SNF_WORD4_MEM;
MACRO_SNOT SNOT_EXCLUDE_NOTE;
MACRO_SNOT SNOT_INCLUDE_NOTE;
MACRO_SNOT SNOT_NOTE_ONLY;
MACRO_SNSF SNSF_CONTACTS;
MACRO_SNSF SNSF_MANUAL;
MACRO_SNSF SNSF_NO_ADDRESS;
MACRO_SNSF_UPDATE SNSF_NULL_STATUS;
MACRO_SNSF SNSF_RECENT;
MACRO_SNSF_UPDATE SNSF_RELAYED_TO_LIKE_OBJECTS;
MACRO_SNSF_UPDATE SNSF_SEND_AFTER_GENERATION;
MACRO_SNSF_UPDATE SNSF_SEND_ONLY;
MACRO_SNSF_UPDATE SNSF_STRUCTURE_INITIALIZED;
MACRO_SNSF_UPDATE SNSF_UPDATE_APP_TARGET_GCN_LISTS;
MACRO_SOCF SOCF_CLOSE;
MACRO_SOCF_DEFAULT SOCF_DEFAULT_FEATURES;
MACRO_SOCF_DEFAULT_TOOLBOX SOCF_DEFAULT_TOOLBOX_FEATURES;
MACRO_SOCF SOCF_OPEN;
Socket __pascal SOCKETACCEPT(Socket s, int timeout);
SocketError __pascal SOCKETADDLOADONMSG(SocketPort p, SocketLoadType slt, word disk, TCHAR *path);
SocketError __pascal SOCKETADDLOADONMSGINDOMAIN(SocketPort p, SocketLoadType slt, word disk, TCHAR *path, TCHAR *domain);
SocketError __pascal SOCKETBIND(Socket s, SocketPort p, SocketBindFlags flags);
SocketError __pascal SOCKETBINDINDOMAIN(Socket s, SocketPort p, SocketBindFlags flags, TCHAR *domain);
int __pascal SOCKETCHECKLISTEN(SocketPort p, TCHAR *domain, int bufsize);
SocketError __pascal SOCKETCHECKMEDIUMCONNECTION(char *domain, byte *buffer, int *bufsize, MediumAndUnit *mau);
int __pascal SOCKETCHECKREADY(SocketCheckRequest *requests, int numRequests, int timeout);
SocketError __pascal SOCKETCLOSE(Socket s);
int __pascal SOCKETCLOSEDOMAINMEDIUM(char *domain, MediumAndUnit *mau, Boolean force);
SocketError __pascal SOCKETCLOSESEND(Socket s);
SocketError __pascal SOCKETCONNECT(Socket s, SocketAddress *addr, int timeout);
Socket __pascal SOCKETCREATE(SocketDeliveryType delivery);
MemHandle __pascal SOCKETCREATERESOLVEDADDRESS(const char *domainName, byte *rawAddr, int addrSize);
ClassStruct *__pascal SOCKETGETADDRESSCONTROLLER(char *domain);
SocketError __pascal SOCKETGETADDRESSMEDIUM(SocketAddress *sa, MediumAndUnit *mau);
int __pascal SOCKETGETADDRESSSIZE(char *domain);
ChunkHandle __pascal SOCKETGETDOMAINMEDIA(char *domain, optr mediaList);
ChunkHandle __pascal SOCKETGETDOMAINS(optr domainList);
int __pascal SOCKETGETINTSOCKETOPTION(Socket skt, SocketOption opt);
SocketError __pascal SOCKETGETMEDIUMADDRESS(char *domain, byte *buffer, int *bufsize, MediumAndUnit *mau);
SocketError __pascal SOCKETGETPEERNAME(Socket s, SocketAddress *addr);
SocketError __pascal SOCKETGETSOCKETNAME(Socket s, SocketAddress *addr);
SocketError __pascal SOCKETINTERRUPT(Socket s);
SocketError __pascal SOCKETINTERRUPTRESOLVE(TCHAR *domain, byte *address, int addrSize);
SocketError __pascal SOCKETLISTEN(Socket s, int qSize);
SocketError __pascal SOCKETOPENDOMAINMEDIUM(SocketAddress *addr, int timeout);
int __pascal SOCKETRECV(Socket s, void *buffer, int bufSize, int timeout, SocketRecvFlags flags, SocketAddress *addr);
SocketError __pascal SOCKETREMOVELOADONMSG(SocketPort p);
SocketError __pascal SOCKETREMOVELOADONMSGINDOMAIN(SocketPort p, TCHAR *domain);
SocketError __pascal SOCKETRESET(Socket s);
int __pascal SOCKETRESOLVE(char *domainName, byte *rawAddr, int addrSize, byte *result, int resultBuffSize);
SocketError __pascal SOCKETSEND(Socket s, void *buffer, int bufSize, SocketSendFlags flags, SocketAddress *addr);
void __pascal SOCKETSETINTSOCKETOPTION(Socket skt, SocketOption opt, int newval);
Boolean __pascal SOCKETSETMEDIUMBUSY(char *domain, MediumAndUnit *mau, Boolean busy);
MACRO_SOCKET SOCKET_NO_TIMEOUT;
MACRO_SOF SOF_NOBLOCK;
MACRO_SOF SOF_TIMEOUT;
MACRO_SOT SOT_INLINE;
MACRO_SOT SOT_NODELAY;
MACRO_SOT SOT_RECV_BUF;
MACRO_SOT SOT_SEND_BUF;
word __pascal SOUNDALLOCMUSIC(const word far *song, word voices, MemHandle far *control);
word __pascal SOUNDALLOCMUSICNOTE(InstrumentPatch instrument, word instTable, word frequency, word volume, SoundStreamDeltaTimeType DeltaType, word duration, MemHandle far *control);
word __pascal SOUNDALLOCMUSICSTREAM(SoundStreamSize streamSize, SoundPriority priority, word voices, word tempo, MemHandle far *control);
word __pascal SOUNDALLOCSAMPLESTREAM(MemHandle far *control);
void __pascal SOUNDCHANGEOWNERSIMPLE(MemHandle mh, MemHandle owner);
void __pascal SOUNDCHANGEOWNERSTREAM(MemHandle mh, MemHandle owner);
void __pascal SOUNDDACMANAGERFREE(word voice);
word __pascal SOUNDDACMANAGERGETFREE(SoundPriority priority);
void __pascal SOUNDDISABLESAMPLESTREAM(MemHandle mh);
word __pascal SOUNDENABLESAMPLESTREAM(MemHandle mh, SoundPriority priority, word rate, word manufacturerID, DACSampleFormat sampleFormat);
void __pascal SOUNDFREEMUSIC(MemHandle mh);
void __pascal SOUNDFREEMUSICNOTE(MemHandle mh);
void __pascal SOUNDFREEMUSICSTREAM(MemHandle mh);
void __pascal SOUNDFREESAMPLESTREAM(MemHandle mh);
void SOUNDGETEXCLUSIVE(void);
Boolean SOUNDGETEXCLUSIVENB(void);
void __pascal SOUNDINITMUSIC(MemHandle mh, word voices);
word __pascal SOUNDPLAYMUSIC(MemHandle mh, word priority, word tempo, EndOfSongFlags flags);
word __pascal SOUNDPLAYMUSICLMEM(MemHandle mh, word priority, word tempo, EndOfSongFlags flags);
word __pascal SOUNDPLAYMUSICNOTE(MemHandle mh, SoundPriority priority, word tempo, EndOfSongFlags flags);
word __pascal SOUNDPLAYTOMUSICSTREAM(MemHandle mh, const word far *song, word size);
word __pascal SOUNDPLAYTOMUSICSTREAMNB(MemHandle mh, const word far *song, word size, word far *bytesWritten);
word __pascal SOUNDPLAYTOSAMPLESTREAM(MemHandle mh, const word far *sample, word size, const SampleFormatDescription far *format);
word __pascal SOUNDREALLOCMUSIC(MemHandle mh, const word far *song);
word __pascal SOUNDREALLOCMUSICLMEM(MemHandle mh, optr song);
word __pascal SOUNDREALLOCMUSICNOTE(MemHandle mh, word freq, word vol, SoundStreamDeltaTimeType timer, word durat, InstrumentPatch instrument, word instTable);
void SOUNDRELEASEEXCLUSIVE(void);
void __pascal SOUNDSAMPLEDRIVERINFO(word far *voices, SoundDriverCapability far *capability);
word __pascal SOUNDSTOPMUSIC(MemHandle mh);
word __pascal SOUNDSTOPMUSICLMEM(MemHandle mh);
word __pascal SOUNDSTOPMUSICNOTE(MemHandle mh);
word __pascal SOUNDSTOPMUSICSTREAM(MemHandle mh);
void __pascal SOUNDSYNTHDRIVERINFO(word far *voices, SupportedEnvelopeFormat far *format, SoundDriverCapability far *capability);
void __pascal SOUNDVOICEMANAGERFREE(word voice);
word __pascal SOUNDVOICEMANAGERGETFREE(SoundPriority priority);
MACRO_SOUND SOUND_ERROR_DAC_UNATTACHED;
MACRO_SOUND SOUND_ERROR_EXCLUSIVE_ACCESS_GRANTED;
MACRO_SOUND SOUND_ERROR_FAILED_ATTACH_TO_HARDWARE;
MACRO_SOUND SOUND_ERROR_HARDWARE_DOESNT_SUPPORT_FORMAT;
MACRO_SOUND SOUND_ERROR_HARDWARE_NOT_AVAILABLE;
MACRO_SOUND SOUND_ERROR_NO_ERRORS;
MACRO_SOUND SOUND_ERROR_OUT_OF_MEMORY;
MACRO_SOUND SOUND_ERROR_STREAM_DESTROYED;
MACRO_SOUND SOUND_ERROR_STREAM_FULL;
MACRO_SOUND SOUND_ERROR_UNABLE_TO_ALLOCATE_STREAM;
MACRO_SOUND_MASK SOUND_MASK_ALL;
MACRO_SOURCE SOURCE;
MACRO_SO2 SO_BACKWARD_SEARCH;
MACRO_SO_COLLATE SO_COLLATE;
MACRO_SO SO_CUSTOM_ORDER;
MACRO_SS_TILE SO_DELETE;
MACRO_SO_FORCE SO_FORCE_ROT;
MACRO_SO2 SO_IGNORE_CASE;
MACRO_SO2 SO_IGNORE_SOFT_HYPHENS;
$78F6A49E423E9A58155E6F23DC12C169 SO_INLINE;
$78F6A49E423E9A58155E6F23DC12C169 SO_NODELAY;
MACRO_SO SO_NORMAL_ORDER;
MACRO_SO_NO SO_NO_STAPLER;
MACRO_SO2 SO_NO_WILDCARDS;
MACRO_SO_ODD SO_ODD_EVEN;
$78F6A49E423E9A58155E6F23DC12C169 SO_OWNER;
MACRO_SO2 SO_PARTIAL_WORD;
MACRO_SO2 SO_PRESERVE_CASE_OF_DOCUMENT_STRING;
$78F6A49E423E9A58155E6F23DC12C169 SO_RECV_BUF;
MACRO_SO_REVERSE SO_REVERSE_ORDER;
MACRO_SO_SCALE SO_SCALE;
$78F6A49E423E9A58155E6F23DC12C169 SO_SEND_BUF;
MACRO_SO_NO SO_STAPLER;
MACRO_SO2 SO_START_FROM_TOP;
MACRO_SPCF SPCF_DELETE_ANCHORS;
MACRO_SPCF SPCF_DELETE_CONTROLS;
MACRO_SMCF SPCF_INSERT_ANCHORS;
MACRO_SPCF SPCF_INSERT_CONTROLS;
MACRO_SPCTF SPCTF_DELETE_ANCHORS;
MACRO_SPCTF SPCTF_DELETE_CONTROLS;
MACRO_SPCTF SPCTF_INSERT_ANCHORS;
MACRO_SPCTF SPCTF_INSERT_CONTROLS;
MACRO_SPC SPC_DEFAULT_FEATURES;
MACRO_SPC_DEFAULT SPC_DEFAULT_TOOLBOX_FEATURES;
MACRO_SMS_VCARD SPDATF_SECONDS;
MACRO_SPDATF SPDATF_TIME_BEFORE_DATE;
int __pascal SPEEDDIALGETNUMBER(int slot, TCHAR *buf);
int __pascal SPEEDDIALGETRECORD(int slot, RecordID *rid, FieldID *fid);
int __pascal SPEEDDIALGETSLOT(RecordID rid, FieldID fid);
int __pascal SPEEDDIALSETRECORD(int slot, RecordID rid, FieldID fid);
MACRO_SPELL SPELL_MAX_WORD_LENGTH;
MACRO_SPF_SCALE SPF_CENTER_HORIZONTALLY;
MACRO_SPF_SCALE SPF_CENTER_VERTICALLY;
MACRO_SPF_PRINT SPF_PRINT_FOOTER;
MACRO_SPF_PRINT_GRID SPF_PRINT_GRID;
MACRO_SPF_PRINT SPF_PRINT_HEADER;
MACRO_SPF_SCALE SPF_PRINT_ROW_COLUMN_TITLES;
MACRO_SPF SPF_PRINT_TO_SCREEN;
MACRO_SPF_SCALE SPF_SCALE_TO_FIT;
MACRO_SPF_SCALE SPF_SKIP_DRAW;
MACRO_SPLCF SPLCF_DELETE;
MACRO_SPLCF SPLCF_MAKE_CURVY;
MACRO_SPLCF SPLCF_MAKE_STRAIGHT;
MACRO_SPLCTF SPLCTF_DELETE;
MACRO_SPLCTF SPLCTF_MAKE_CURVY;
MACRO_SPLCTF SPLCTF_MAKE_STRAIGHT;
MACRO_SPLC SPLC_DEFAULT_FEATURES;
MACRO_SPLC_DEFAULT SPLC_DEFAULT_TOOLBOX_FEATURES;
void __pascal SPLINEGUARDIANTRANSFORMSPLINEPOINTS(optr guardianOD);
word __pascal SPOOLCONVERTPAPERSIZE(word width, word height, PageType pageType);
word __pascal SPOOLCREATEPAPERSIZE(char *paperSizeString, word width, word height, PageLayout layout, PageType pageType);
word __pascal SPOOLCREATEPRINTER(char *printerName, PrinterDriverType driverType);
FileHandle __pascal SPOOLCREATESPOOLFILE(char *fileNameBuf);
SpoolOpStatus __pascal SPOOLDELAYJOB(word jobID);
Boolean __pascal SPOOLDELETEPAPERSIZE(word paperSizeNum, PageType pageType);
void __pascal SPOOLDELETEPRINTER(word printerNum);
SpoolOpStatus __pascal SPOOLDELJOB(word jobID);
void __pascal SPOOLGETDEFAULTPAGESIZEINFO(PageSizeReport *psr);
int SPOOLGETDEFAULTPRINTER(void);
void __pascal SPOOLGETNUMPAPERSIZES(NumPaperSizesInfo *sizesInfo, PageType pageType);
word __pascal SPOOLGETNUMPRINTERS(PrinterDriverType driverType, byte localOnlyFlag);
void __pascal SPOOLGETPAPERSIZE(PaperSizeInfo *sizeInfo, word paperSizeNum, PageType pageType);
void __pascal SPOOLGETPAPERSIZEORDER(byte *orderBuf, byte *userDefBuf, PaperSizeOrderInfo *numBuf, PageType pageType);
word __pascal SPOOLGETPAPERSTRING(char *stringBuf, word paperSizeNum, PageType pageType);
Boolean __pascal SPOOLGETPRINTERSTRING(PrinterStringInfo *retInfo, word printerNum);
SpoolOpStatus __pascal SPOOLHURRYJOB(word jobID);
SpoolOpStatus __pascal SPOOLINFO(SpoolInfoType infoType, SpoolInfoParams *params);
SpoolOpStatus __pascal SPOOLMODIFYPRIORITY(word jobID, ThreadPriority priority);
void __pascal SPOOLSETDEFAULTPAGESIZEINFO(PageSizeReport *psr);
void __pascal SPOOLSETDEFAULTPRINTER(word printerNum);
void __pascal SPOOLSETDOCSIZE(Boolean openFlag, PageSizeReport *psr);
void __pascal SPOOLSETPAPERSIZEORDER(byte *orderArray, word numEntries, PageType pageType);
SpoolOpStatus __pascal SPOOLVERIFYPRINTERPORT(struct _PrintPortInfo *portInfo);
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_CANT_VERIFY_PORT;
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_JOB_NOT_FOUND;
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_OPERATION_FAILED;
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_OPERATION_SUCCESSFUL;
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_QUEUE_EMPTY;
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_QUEUE_NOT_EMPTY;
$183A3DF51ED1F57844B9AE079B36B115 SPOOL_QUEUE_NOT_FOUND;
MACRO_SPO SPO_ALL_CELLS;
MACRO_SPO SPO_SELECTED_CELLS;
MACRO_SPP SPP_ALPHA;
MACRO_SPP_DEFAULT SPP_DEFAULT;
MACRO_SPP SPP_DISPLAY;
MACRO_SPP SPP_FOOTNOTE;
MACRO_SPP SPP_NUMERATOR;
VMBlockHandle __pascal SPREADSHEETINITFILE(SpreadsheetInitFileData *ifd);
void __pascal SPREADSHEETPARSECREATECELL(C_CallbackStruct *cb_s);
void __pascal SPREADSHEETPARSEDEREFCELL(C_CallbackStruct *cb_s);
void __pascal SPREADSHEETPARSEEMPTYCELL(C_CallbackStruct *cb_s);
void __pascal SPREADSHEETPARSENAMETOTOKEN(C_CallbackStruct *cb_s);
$EC59398CF76823A6A4728F4774D46DC2 SPREADSHEET_ADDRESS_DATA_AREA;
$EC59398CF76823A6A4728F4774D46DC2 SPREADSHEET_ADDRESS_IN_SELECTION;
$EC59398CF76823A6A4728F4774D46DC2 SPREADSHEET_ADDRESS_NIL;
$EC59398CF76823A6A4728F4774D46DC2 SPREADSHEET_ADDRESS_ON_SCREEN;
$EC59398CF76823A6A4728F4774D46DC2 SPREADSHEET_ADDRESS_PAST_END;
$EC59398CF76823A6A4728F4774D46DC2 SPREADSHEET_ADDRESS_USE_SELECTION;
MACRO_SFE SPREADSHEET_MAX_DATE_FILL_STEP;
MACRO_SFE SPREADSHEET_MIN_DATE_FILL_STEP;
MACRO_SPREADSHEET_RULER SPREADSHEET_RULER_HEIGHT;
MACRO_SPREADSHEET SPREADSHEET_RULER_WIDTH;
MACRO_SPRT SPRT_OK;
MACRO_SPRT SPRT_TOO_NEW;
MACRO_SPRT SPRT_TOO_OLD;
MACRO_SPP_DEFAULT SPS_ALPHA;
MACRO_SPS_DEFAULT SPS_DEFAULT;
MACRO_SPP_DEFAULT SPS_DISPLAY;
MACRO_SPP_DEFAULT SPS_FOOTNOTE;
MACRO_SPS SPS_NUMERATOR;
MACRO_SPT_8086 SPT_80186;
MACRO_SPT_8086 SPT_80286;
MACRO_SPT_8086 SPT_80386;
MACRO_SPT_8086 SPT_80486;
MACRO_SPT_8086 SPT_8086;
MACRO_SPT SPT_8088;
$F5133D8A3D740B95AD56751B25FB56C0 SP_ALARM;
$E26DFDD3B595AD2345D19D74002512EA SP_APPLICATION;
$F5133D8A3D740B95AD56751B25FB56C0 SP_BACKGROUND;
$E26DFDD3B595AD2345D19D74002512EA SP_BACKUP;
$E26DFDD3B595AD2345D19D74002512EA SP_DOCUMENT;
$E26DFDD3B595AD2345D19D74002512EA SP_DOS_ROOM;
$E26DFDD3B595AD2345D19D74002512EA SP_DUMMY;
$E26DFDD3B595AD2345D19D74002512EA SP_FILE_SYSTEM_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_FONT;
$E26DFDD3B595AD2345D19D74002512EA SP_FONT_DRIVERS;
$F5133D8A3D740B95AD56751B25FB56C0 SP_GAME;
$E26DFDD3B595AD2345D19D74002512EA SP_HELP_FILES;
$E26DFDD3B595AD2345D19D74002512EA SP_HWR;
MACRO_DESTROY SP_IMMEDIATE;
$E26DFDD3B595AD2345D19D74002512EA SP_IMPORT_EXPORT_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_KEYBOARD_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_MOUSE_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_NOT_STANDARD_PATH;
$E26DFDD3B595AD2345D19D74002512EA SP_PAGER_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_POWER_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_PRINTER_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_PRIVATE_DATA;
$E26DFDD3B595AD2345D19D74002512EA SP_SPOOL;
$F5133D8A3D740B95AD56751B25FB56C0 SP_STANDARD;
$E26DFDD3B595AD2345D19D74002512EA SP_STATE;
$E26DFDD3B595AD2345D19D74002512EA SP_SWAP_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_SYSTEM;
$F5133D8A3D740B95AD56751B25FB56C0 SP_SYSTEM_LEVEL;
$E26DFDD3B595AD2345D19D74002512EA SP_SYS_APPLICATION;
$E26DFDD3B595AD2345D19D74002512EA SP_TASK_SWITCH_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_TEMPLATE;
MACRO_SP SP_THEME;
$E26DFDD3B595AD2345D19D74002512EA SP_TOP;
$E26DFDD3B595AD2345D19D74002512EA SP_USER_DATA;
$E26DFDD3B595AD2345D19D74002512EA SP_VIDEO_DRIVERS;
$E26DFDD3B595AD2345D19D74002512EA SP_WASTE_BASKET;
double __pascal SQRT(double x);
MACRO_SRCF SRCF_CLOSE;
MACRO_SRCF SRCF_FIND_FROM_TOP;
MACRO_SRCF SRCF_FIND_NEXT;
MACRO_SRCF SRCF_FIND_PREV;
MACRO_SRCF SRCF_IGNORE_CASE;
MACRO_SRFI SRCF_NOTES_OPTIONS;
MACRO_SRCF SRCF_PARTIAL_WORDS;
MACRO_SRCF SRCF_REPLACE_ALL;
MACRO_SRCF SRCF_REPLACE_ALL_IN_SELECTION;
MACRO_SRCF SRCF_REPLACE_CURRENT;
MACRO_SRCF SRCF_SPECIAL_CHARS;
MACRO_SRCF SRCF_WILDCARDS;
MACRO_SRCTF SRCTF_SEARCH_REPLACE;
MACRO_SRCTF SRC_DEFAULT_FEATURES;
MACRO_SRC SRC_DEFAULT_TOOLBOX_FEATURES;
MACRO_SRC SRC_SUGGESTED_BEGINNING_FEATURES;
MACRO_SREF SREF_REPLACE;
MACRO_SREF SREF_SEARCH;
MACRO_SRFI SRFI_REPLACE_TEXT;
MACRO_SRFI SRFI_SEARCH_TEXT;
MACRO_SRF SRF_ADDRESS;
MACRO_SRF_SSHEET SRF_HAVE_GRAB;
MACRO_SRF_SSHEET SRF_NO_INTERACTIVE_RESIZE;
MACRO_SRF SRF_PEEK;
MACRO_SRF_SSHEET SRF_SSHEET_IS_FOCUS;
MACRO_SRF_SSHEET SRF_SSHEET_IS_TARGET;
MACRO_SRF SRF_URGENT;
$9BCBD61203C90FDAD9FF615FC58BC77E SROUT_CHECK_WORD;
$9BCBD61203C90FDAD9FF615FC58BC77E SROUT_GET_ERROR_FLAGS;
$9BCBD61203C90FDAD9FF615FC58BC77E SROUT_GET_TEXT_OFFSETS;
$9BCBD61203C90FDAD9FF615FC58BC77E SROUT_RESET_SPELL_CHECK;
MACRO_SRP SRP_FLAGS;
MACRO_SRT SRT_NULL_OPERATION;
MACRO_SRT SRT_OK;
MACRO_SRT SRT_TOO_MANY_POINTS;
MACRO_SR SR_DCE;
MACRO_SR SR_DTE;
MACRO_SSCF_DEFINE SSCF_APPLY;
MACRO_SSCF_SEMI SSCF_AUTO_SMOOTH;
MACRO_SSCF_DEFAULT SSCF_DEFAULT_FEATURES;
MACRO_SSCF_DEFINE SSCF_DEFINE;
MACRO_SSCF_DEFINE SSCF_LOAD;
MACRO_SSCF_DEFINE SSCF_MANAGE;
MACRO_SPLC_DEFAULT SSCF_NONE;
MACRO_SSCF_DEFINE SSCF_RECALL_STYLE;
MACRO_SSCF_DEFINE SSCF_REDEFINE;
MACRO_SSCF_DEFINE SSCF_RETURN_TO_BASE;
MACRO_SSCF_DEFINE SSCF_SAVE_STYLE;
MACRO_SSCF_SEMI SSCF_SEMI_SMOOTH;
MACRO_SSCF SSCF_UI;
MACRO_SSCF_SEMI SSCF_VERY_SMOOTH;
MACRO_SSCTF SSCTF_AUTO_SMOOTH;
MACRO_SSCTF SSCTF_NONE;
MACRO_SSCTF_REDEFINE SSCTF_RECALL_STYLE;
MACRO_SSCTF_REDEFINE SSCTF_REDEFINE;
MACRO_SSCTF_REDEFINE SSCTF_RETURN_TO_BASE;
MACRO_SSCTF_REDEFINE SSCTF_SAVE_STYLE;
MACRO_SSCTF SSCTF_SEMI_SMOOTH;
MACRO_SSCTF_REDEFINE SSCTF_STYLE_LIST;
MACRO_SSCTF SSCTF_VERY_SMOOTH;
MACRO_SSC SSC_DEFAULT_FEATURES;
MACRO_SSC_DEFAULT SSC_DEFAULT_TOOLBOX_FEATURES;
MACRO_SSDDF SSDDF_PLURAL_FOR_NON_RELATIVE_IF_NEEDED;
MACRO_SOCF_DEFAULT_TOOLBOX SSDDF_RELATIVE;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_AUTH_FAILED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_AUTH_REFUSED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_BLACKLISTED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_CALL_FAILED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_CANCEL;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_DELAYED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_DEVICE_BUSY;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_DEVICE_ERROR;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_DEVICE_NOT_FOUND;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_DEVICE_TIMEOUT;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_DIAL_ERROR;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_IDLE_TIMEOUT;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_INVALID_ACCPNT;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_LINE_BUSY;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_LOGIN_FAILED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_LOGIN_FAILED_NO_NOTIFY;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_LOOPED_BACK;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_LQM_FAILURE;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_NEG_FAILED;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_NO_ANSWER;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_NO_CARRIER;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_NO_DIALTONE;
$2D34B58C94EDB5E35C856580B17916B1 SSDE_NO_USERNAME;
MACRO_SOCF_DEFAULT_TOOLBOX SSDF_NEW_CATEGORY;
$90205E8727C8D8A4A85D58457ACCF4E4 SSDTT_MSEC;
$90205E8727C8D8A4A85D58457ACCF4E4 SSDTT_TEMPO;
$90205E8727C8D8A4A85D58457ACCF4E4 SSDTT_TICKS;
$30C6FA5BB078C7ECCC3421A6C3F89219 SSE_CHANGE;
$30C6FA5BB078C7ECCC3421A6C3F89219 SSE_GENERAL;
$30C6FA5BB078C7ECCC3421A6C3F89219 SSE_VOICE_OFF;
$30C6FA5BB078C7ECCC3421A6C3F89219 SSE_VOICE_ON;
MACRO_SSFF SSFF_GEOMETRIC;
MACRO_SSFF SSFF_ROWS;
$2215ADAE06A0AE5285309900AF409715 SSFT_DAY;
$2215ADAE06A0AE5285309900AF409715 SSFT_MONTH;
$2215ADAE06A0AE5285309900AF409715 SSFT_NUMBER;
$2215ADAE06A0AE5285309900AF409715 SSFT_WEEKDAY;
$2215ADAE06A0AE5285309900AF409715 SSFT_YEAR;
MACRO_SSF_ADDRESS SSF_ADDRESS;
MACRO_SSF SSF_ALARM;
MACRO_SSF SSF_ERROR;
MACRO_SSF SSF_KEY_CLICK;
MACRO_SPF_PRINT_GRID SSF_MATCH_CASE;
MACRO_SSF_MATCH SSF_MATCH_PARTIAL_WORDS;
MACRO_SSF SSF_NOTIFY;
MACRO_SSF SSF_NO_INPUT;
MACRO_SSF_ADDRESS SSF_OPEN_LINK;
MACRO_SSF_MATCH SSF_SEARCH_BY_ROWS;
MACRO_SSF_MATCH SSF_SEARCH_FORMULAS;
MACRO_SSF_MATCH SSF_SEARCH_NOTES;
MACRO_SSF_MATCH SSF_SEARCH_TEXT_OBJECTS;
MACRO_SSF_MATCH SSF_SEARCH_VALUES;
MACRO_SSF_ADDRESS SSF_URGENT;
MACRO_SSF SSF_WARNING;
MACRO_SSMC SSMC_DEFAULT_FEATURES;
MACRO_SSMC_DEFAULT SSMC_DEFAULT_TOOLBOX_FEATURES;
MACRO_SSM SSM_NORMAL;
MACRO_SSM SSM_URGENT;
$955FC0FDE82C2E6F54BC7A6A8D5E6A27 SSN_LINK_CONNECTED;
$955FC0FDE82C2E6F54BC7A6A8D5E6A27 SSN_LINK_NOT_CONNECTED;
MACRO_SSPF SSPF_FIRST_POINT_IS_CONTROL;
MACRO_SSPF SSPF_HAS_CONTROLS;
MACRO_SSPF SSPF_TYPE;
MACRO_SSPF SSPF_TYPE_OFFSET;
MACRO_SSRCAF SSRCAF_REF_COUNT;
MACRO_SSRCAF SSRCAF_TRANSFORM_VALID;
MACRO_SSS SSS_DATA;
MACRO_SSS_TYPE SSS_DATA_OFFSET;
MACRO_SP SSS_LARGE;
MACRO_SP SSS_MEDIUM;
MACRO_SP SSS_ONE_SHOT;
MACRO_SP SSS_SMALL;
MACRO_SSS SSS_TYPE;
MACRO_SSS_TYPE SSS_TYPE_OFFSET;
$3E7E18BB14457278993EAF15234DBA2E SST_ALARM;
MACRO_SST SST_ANCHOR_POINT;
MACRO_SST_PIXELS SST_AVG_CHAR_WIDTHS;
$D82DACCF3DF168100F177C5B5BE78C23 SST_CLEAN;
$D82DACCF3DF168100F177C5B5BE78C23 SST_CLEAN_FORCED;
$D82DACCF3DF168100F177C5B5BE78C23 SST_CLEAN_REBOOT;
$D82DACCF3DF168100F177C5B5BE78C23 SST_CONFIRM_END;
$D82DACCF3DF168100F177C5B5BE78C23 SST_CONFIRM_START;
MACRO_SST SST_CONTROL_POINT;
MACRO_SST_PIXELS SST_COUNT;
$3E7E18BB14457278993EAF15234DBA2E SST_CUSTOM_BUFFER;
$3E7E18BB14457278993EAF15234DBA2E SST_CUSTOM_NOTE;
$3E7E18BB14457278993EAF15234DBA2E SST_CUSTOM_SOUND;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_DEVICE_POWER;
$D82DACCF3DF168100F177C5B5BE78C23 SST_DIRTY;
$3E7E18BB14457278993EAF15234DBA2E SST_ERROR;
$D82DACCF3DF168100F177C5B5BE78C23 SST_FINAL;
MACRO_UIHO SST_IGNORE_SOUND_OFF;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_INDICATOR;
MACRO_SST SST_INSIDE_CLOSED_CURVE;
MACRO_SST SST_INSIDE_VIS_BOUNDS;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_IRDA;
$3E7E18BB14457278993EAF15234DBA2E SST_KEY_CLICK;
MACRO_SST_PIXELS SST_LINES_OF_TEXT;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_MAILBOX;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_MEDIUM;
MACRO_SST SST_NONE;
$3E7E18BB14457278993EAF15234DBA2E SST_NOTIFY;
$3E7E18BB14457278993EAF15234DBA2E SST_NO_INPUT;
$D82DACCF3DF168100F177C5B5BE78C23 SST_PANIC;
MACRO_SST_PIXELS SST_PCT_OF_FIELD_HEIGHT;
MACRO_SST_PIXELS SST_PCT_OF_FIELD_WIDTH;
MACRO_SST_PIXELS SST_PIXELS;
$D82DACCF3DF168100F177C5B5BE78C23 SST_REBOOT;
$D82DACCF3DF168100F177C5B5BE78C23 SST_RESTART;
MACRO_SST SST_SEGMENT;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_SOCKET;
$D82DACCF3DF168100F177C5B5BE78C23 SST_SUSPEND;
$9D86436D6F2F67FCE06FCB0B56F70165 SST_TERMINAL;
$3E7E18BB14457278993EAF15234DBA2E SST_WARNING;
MACRO_SST_PIXELS SST_WIDE_CHAR_WIDTHS;
MACRO_SS2 SS_CLOSED;
MACRO_SS2 SS_CREATED_BLOCK;
MACRO_SS2 SS_FILLED;
MACRO_SS SS_FIRE_BUTTON_1;
MACRO_SS SS_FIRE_BUTTON_2;
MACRO_SS2 SS_HAS_ATTR_CHUNKS;
MACRO_SS SS_LALT;
MACRO_SS SS_LCTRL;
MACRO_SS SS_LSHIFT;
MACRO_SS2 SS_MODE;
MACRO_SS2 SS_MODE_OFFSET;
MACRO_SS SS_RALT;
MACRO_SS SS_RCTRL;
MACRO_SS SS_RSHIFT;
MACRO_SS_TILE SS_SCALE_TO_FIT;
MACRO_SS_TILE SS_TILE;
MACRO_SM2 SS_VIS_BOUNDARY_DRAWN;
MACRO_STANDARD STANDARD_CURSOR_IMAGE_SIZE;
MACRO_STD STD_INIT_HANDLES;
MACRO_STD STD_INIT_HEAP;
MACRO_STD STD_LMEM_OBJECT_FLAGS;
MACRO_STF STF_SPELL;
TCHAR *__pascal STRCAT(TCHAR *s, const TCHAR *t);
TCHAR *__pascal STRCHR(const TCHAR *s, int c);
int __pascal STRCMP(const TCHAR *s, const TCHAR *t);
TCHAR *__pascal STRCPY(TCHAR *s, const TCHAR *t);
word __pascal STRCSPN(const TCHAR *s, const TCHAR *set);
StreamError __pascal STREAMCLOSE(Handle driver, StreamToken stream, StreamLingerMode linger);
StreamError __pascal STREAMESCLOADOPTIONS(Handle driver, const char *category);
StreamError __pascal STREAMFLUSH(Handle driver, StreamToken stream);
StreamError __pascal STREAMGETDEVICEMAP(Handle driver, word *retInfo);
StreamError __pascal STREAMGETERROR(Handle driver, StreamToken stream, StreamRoles roles, word *errorCode);
StreamError __pascal STREAMOPEN(Handle driver, word buffSize, GeodeHandle owner, HeapFlags heapFlags, StreamToken *stream);
StreamError __pascal STREAMQUERY(Handle driver, StreamToken stream, StreamRoles role, word *bytesAvailable);
StreamError __pascal STREAMREAD(Handle driver, StreamToken stream, StreamBlocker blocker, word buffSize, byte *buffer, word *numBytesRead);
StreamError __pascal STREAMREADBYTE(Handle driver, StreamToken stream, StreamBlocker blocker, byte *dataByte);
StreamError __pascal STREAMSETDATAROUTINENOTIFY(Handle driver, StreamToken stream, StreamNotifyType type, word data, StreamGeneralNotifyRoutine *callback, word threshold);
StreamError __pascal STREAMSETERROR(Handle driver, StreamToken stream, StreamRoles roles, word errorCode);
StreamError __pascal STREAMSETMESSAGENOTIFY(Handle driver, StreamToken stream, StreamNotifyType type, Message msg, optr destination);
StreamError __pascal STREAMSETNONOTIFY(Handle driver, StreamToken stream, StreamNotifyType type);
StreamError __pascal STREAMSETNOTIFY(Handle driver, StreamToken stream, word *status);
StreamError __pascal STREAMSETROUTINENOTIFY(Handle driver, StreamToken stream, StreamNotifyType type, word data, StreamGeneralNotifyRoutine *callback);
StreamError __pascal STREAMSETTHRESHOLD(Handle driver, StreamToken stream, StreamRoles roles, word threshold);
StreamError __pascal STREAMWRITE(Handle driver, StreamToken stream, StreamBlocker blocker, word buffSize, byte *buffer, word *numBytesWritten);
StreamError __pascal STREAMWRITEBYTE(Handle driver, StreamToken stream, StreamBlocker blocker, byte dataByte);
$4ACB06FB599B794B795470E84B15C244 STREAM_BLOCK;
MACRO_STREAM_BOTH STREAM_BOTH;
$30479F21CC38D10C8B51278DACAC42EB STREAM_BUFFER_TOO_LARGE;
$30479F21CC38D10C8B51278DACAC42EB STREAM_CANNOT_ALLOC;
$30479F21CC38D10C8B51278DACAC42EB STREAM_CLOSED;
$30479F21CC38D10C8B51278DACAC42EB STREAM_CLOSING;
$30479F21CC38D10C8B51278DACAC42EB STREAM_DEVICE_IN_USE;
$2D8A2014CBC3ADB6C407119D364CD229 STREAM_DISCARD;
$68221AC6186A965E2AF123AEDDB9FBE4 STREAM_EVENT_DATA;
$68221AC6186A965E2AF123AEDDB9FBE4 STREAM_EVENT_ERROR;
MACRO_STREAM STREAM_FIRST_DEV_ERROR;
$2D8A2014CBC3ADB6C407119D364CD229 STREAM_LINGER;
$7B5E1B6BB836FBFD056989984B712786 STREAM_MODE_MESSAGE;
$7B5E1B6BB836FBFD056989984B712786 STREAM_MODE_NONE;
$7B5E1B6BB836FBFD056989984B712786 STREAM_MODE_ROUTINE;
$30479F21CC38D10C8B51278DACAC42EB STREAM_NOT_IMPLEMENTED;
$4ACB06FB599B794B795470E84B15C244 STREAM_NO_BLOCK;
$30479F21CC38D10C8B51278DACAC42EB STREAM_NO_DEVICE;
$30479F21CC38D10C8B51278DACAC42EB STREAM_NO_ERROR;
$965BF2DE53BBEF0CD7A62F657AAEDAC0 STREAM_OPEN_NO_BLOCK;
$965BF2DE53BBEF0CD7A62F657AAEDAC0 STREAM_OPEN_TIMEOUT;
$30479F21CC38D10C8B51278DACAC42EB STREAM_POWER_ERROR;
MACRO_SOF STREAM_READ;
$536230E93DF9B0220E2A8D90C00430A1 STREAM_ROLES_BOTH;
$536230E93DF9B0220E2A8D90C00430A1 STREAM_ROLES_READER;
$536230E93DF9B0220E2A8D90C00430A1 STREAM_ROLES_WRITER;
$30479F21CC38D10C8B51278DACAC42EB STREAM_SHORT_READ_WRITE;
MACRO_SERIAL_DEVICE_COM1 STREAM_STATUS_UNKNOWN;
MACRO_SERIAL_DEVICE_COM1 STREAM_STATUS_UNKNOWN_OFFSET;
MACRO_STREAM_TYPE_EVENT STREAM_TYPE_EVENT;
MACRO_STREAM_TYPE_EVENT STREAM_TYPE_EVENT_OFFSET;
MACRO_STREAM_TYPE_HOW STREAM_TYPE_HOW;
MACRO_STREAM_TYPE_HOW STREAM_TYPE_HOW_OFFSET;
MACRO_STREAM_TYPE STREAM_TYPE_READER;
MACRO_STREAM_TYPE STREAM_TYPE_READER_OFFSET;
$30479F21CC38D10C8B51278DACAC42EB STREAM_WOULD_BLOCK;
MACRO_STREAM_WRITE STREAM_WRITE;
word __pascal STRLEN(const TCHAR *str);
TCHAR *__pascal STRNCAT(TCHAR *s, const TCHAR *t, const size_t n);
int __pascal STRNCMP(const TCHAR *s, const TCHAR *t, const size_t n);
TCHAR *__pascal STRNCPY(TCHAR *s, const TCHAR *t, const size_t n);
TCHAR *__pascal STRPBRK(const TCHAR *s, const TCHAR *set);
word __pascal STRPOS(const TCHAR *s, int c);
TCHAR *__pascal STRRCHR(const TCHAR *s, int c);
void __pascal STRREV(TCHAR *s);
word __pascal STRRPOS(const TCHAR *s, int c);
word __pascal STRSPN(const TCHAR *s, const TCHAR *set);
TCHAR *__pascal STRSTR(const TCHAR *s, const TCHAR *t);
void __pascal STYLESHEETADDATTRIBUTEHEADER();
void __pascal STYLESHEETADDCHARTODESCRIPTION();
void __pascal STYLESHEETADDNAMEFROMCHUNK();
void __pascal STYLESHEETADDNAMEFROMPTR();
void __pascal STYLESHEETADDWORD();
void __pascal STYLESHEETCALLDESCRIBEROUTINES();
void __pascal STYLESHEETCALLMERGEROUTINES();
void __pascal STYLESHEETCOPYELEMENT();
void __pascal STYLESHEETDEFINESTYLE();
void __pascal STYLESHEETDELETESTYLE();
void __pascal STYLESHEETDESCRIBEATTRS();
void __pascal STYLESHEETDESCRIBEDISTANCE();
void __pascal STYLESHEETDESCRIBEEXCLUSIVEWORD();
void __pascal STYLESHEETDESCRIBENONEXCLUSIVEWORD();
void __pascal STYLESHEETDESCRIBESTYLE();
void __pascal STYLESHEETDESCRIBEWWFIXED();
void __pascal STYLESHEETGENERATECHECKSUM();
void __pascal STYLESHEETGETNOTIFYCOUNTER();
void __pascal STYLESHEETGETSTYLE();
void __pascal STYLESHEETGETSTYLECOUNTS();
void __pascal STYLESHEETGETSTYLETOAPPLY();
void __pascal STYLESHEETIMPORTSTYLES();
void __pascal STYLESHEETINCNOTIFYCOUNTER();
void __pascal STYLESHEETLOCKSTYLECHUNK();
void __pascal STYLESHEETMODIFYSTYLE();
void __pascal STYLESHEETOPENFILEFORIMPORT();
void __pascal STYLESHEETREDEFINESTYLE();
void __pascal STYLESHEETREQUESTENTRYMONIKER();
void __pascal STYLESHEETUNLOCKSTYLECHUNK();
void __pascal STYLESHEETUPDATEMODIFYBOX();
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_ANAGRAM;
MACRO_ST_NONE ST_AUTO_SMOOTH;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_CORRECT;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_DEFINITION;
MACRO_ST_DOING ST_DOING_CHAR_SELECTION;
MACRO_ST_DOING ST_DOING_LINE_SELECTION;
MACRO_ST_DOING ST_DOING_PARA_SELECTION;
MACRO_ST_DOING ST_DOING_WORD_SELECTION;
MACRO_ST ST_ELAPSED_TIME;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_HYPHENATE;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_INIT;
MACRO_ST_MAX ST_MAX_SMOOTHNESS;
MACRO_ST ST_MONEY;
MACRO_ST_NONE ST_NONE;
MACRO_ST ST_POINTS;
MACRO_ST_NONE ST_SEMI_SMOOTH;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_TERMINATE;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_VERIFY;
MACRO_ST_NONE ST_VERY_SMOOTH;
$E40E6B41FCC2DCB1AA75F896BDA28190 ST_WILDCARD;
MACRO_SUSF SUSF_GEOMETRY;
MACRO_SUSF SUSF_UPDATE_UI;
$1E2C1667D0E65F4DBAC4B37F866C6A90 SVMID_DOCUMENT_NOTES;
$1E2C1667D0E65F4DBAC4B37F866C6A90 SVMID_HA_BLOCK_ID;
$1E2C1667D0E65F4DBAC4B37F866C6A90 SVMID_HA_DIR_ID;
MACRO_SVMID SVMID_RANGE_DBASE;
MACRO_SVT SVT_AROUND_CENTER;
MACRO_SVT SVT_AROUND_POINT;
MACRO_SVT SVT_AROUND_UPPER_LEFT;
MACRO_SWSS SWSS_FRACTION;
MACRO_SWSS SWSS_MANTISSA;
MACRO_SWSS SWSS_RATIO;
MACRO_SWSS SWSS_SIGN;
MACRO_SW SW_DATA;
MACRO_SW SW_TYPE;
void SYSDISABLEAPO(void);
void SYSENABLEAPO(void);
dword SYSGETCONFIG(void);
Boolean __pascal SYSGETDOSENVIRONMENT(const char *variable, char *buffer, word bufSize);
ErrorCheckingFlags __pascal SYSGETECLEVEL(MemHandle *checksumBlock);
dword __pascal SYSGETINFO(SysGetInfoType info);
word SYSGETINKWIDTHANDHEIGHT(void);
Boolean SYSGETPENMODE(void);
Boolean __pascal SYSHOOKNOTIFICATION(SysSubsystemType subsys, void (__pascal *routine)(SysSubsystemType subsys, SysNotificationType notif, word word1, word word2, word word3, word word4));
Boolean __pascal SYSIGNORENOTIFICATION(SysSubsystemType subsys);
void SYSLOCKBIOS(void);
word __pascal SYSNOTIFY(SysNotifyFlags flags, const char *string1, const char *string2);
void __pascal SYSREGISTERSCREEN(GeodeHandle driver, WindowHandle root);
void __pascal SYSSENDNOTIFICATION(SysSubsystemType subsys, SysNotificationType notif, word word1, word word2, word word3, word word4);
void __pascal SYSSETECLEVEL(ErrorCheckingFlags flags, MemHandle checksumBlock);
word __pascal SYSSETEXITFLAGS(ExitFlags bitsToSet, ExitFlags bitsToClear);
void __pascal SYSSETINKWIDTHANDHEIGHT(word WidthAndHeight);
void __pascal SYSSTATISTICS(SysStats *stats);
MACRO_CUSTOM SYSTEM_DEFAULT;
void __pascal SYSUNHOOKNOTIFICATION(SysSubsystemType subsys, void (__pascal *routine)(SysSubsystemType subsys, SysNotificationType notif, word word1, word word2, word word3, word word4));
void SYSUNLOCKBIOS(void);
MACRO_OutputDuplex_OFFSET StapledOutput;
MACRO_TAB TAB_INTRINSIC_WIDTH;
void __pascal __far TAKEDOWNDIALOGVIAUITHREAD(optr dialogBox);
double __pascal TAN(double x);
double __pascal TANH(double x);
MACRO_TAT TAT_CHAR_ATTRS;
MACRO_TAT TAT_GRAPHICS;
MACRO_TAT TAT_PARA_ATTRS;
MACRO_TAT TAT_TYPES;
MACRO_TCCF TCCF_CHARACTER;
MACRO_TCCF TCCF_LINE;
MACRO_TCCF TCCF_PARAGRAPH;
MACRO_TCCF TCCF_RECALC;
MACRO_TCCF TCCF_WORD;
MACRO_TCC TCC_DEFAULT_FEATURES;
MACRO_TCC TCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_TCD_DAY TCD_DAY;
MACRO_TCD_DAY_OFFSET TCD_DAY_OFFSET;
MACRO_TCD_MONTH TCD_MONTH;
MACRO_TCD_MONTH_OFFSET TCD_MONTH_OFFSET;
MACRO_TCD TCD_YEAR;
MACRO_TCD_YEAR TCD_YEAR_OFFSET;
MACRO_TCF TCF_CLEAR;
MACRO_TCF TCF_CLEAR_ALL;
MACRO_TCF TCF_GRAY_SCREEN;
MACRO_TCF TCF_LEADER;
MACRO_TCF TCF_LINE;
MACRO_TCF TCF_LIST;
MACRO_TCF TCF_POSITION;
MACRO_TCF TCF_TYPE;
$ACD65A8E70DEE0751A1FB96F5A959E73 TCO_COPY;
$ACD65A8E70DEE0751A1FB96F5A959E73 TCO_RETURN_NOTHING;
$ACD65A8E70DEE0751A1FB96F5A959E73 TCO_RETURN_TRANSFER_FORMAT;
$ACD65A8E70DEE0751A1FB96F5A959E73 TCO_RETURN_TRANSFER_ITEM;
MACRO_TC_ACUTE TC_ACUTE;
MACRO_TC_FIELD TC_AMPERSAND;
MACRO_TC_FIELD TC_ASCII_CIRCUMFLEX;
MACRO_TC_FIELD TC_ASCII_TILDE;
MACRO_TC_FIELD TC_ASTERISK;
MACRO_TC_FIELD TC_AT_SIGN;
MACRO_TC_FIELD TC_BACKQUOTE;
MACRO_TC_FIELD TC_BACKSLASH;
MACRO_TC_NUL TC_BEL;
MACRO_TC_NUL TC_BS;
MACRO_TC_DC1 TC_CAN;
MACRO_TC_FIELD TC_CAP_A;
MACRO_TC_FIELD TC_CAP_B;
MACRO_TC_FIELD TC_CAP_C;
MACRO_TC_FIELD TC_CAP_D;
MACRO_TC_FIELD TC_CAP_E;
MACRO_TC_FIELD TC_CAP_F;
MACRO_TC_FIELD TC_CAP_G;
MACRO_TC_FIELD TC_CAP_H;
MACRO_TC_FIELD TC_CAP_I;
MACRO_TC_FIELD TC_CAP_J;
MACRO_TC_FIELD TC_CAP_K;
MACRO_TC_FIELD TC_CAP_L;
MACRO_TC_FIELD TC_CAP_M;
MACRO_TC_FIELD TC_CAP_N;
MACRO_TC_FIELD TC_CAP_O;
MACRO_TC_FIELD TC_CAP_P;
MACRO_TC_FIELD TC_CAP_Q;
MACRO_TC_FIELD TC_CAP_R;
MACRO_TC_FIELD TC_CAP_S;
MACRO_TC_FIELD TC_CAP_T;
MACRO_TC_FIELD TC_CAP_U;
MACRO_TC_FIELD TC_CAP_V;
MACRO_TC_FIELD TC_CAP_W;
MACRO_TC_FIELD TC_CAP_X;
MACRO_TC_FIELD TC_CAP_Y;
MACRO_TC_FIELD TC_CAP_Z;
MACRO_TC_ACUTE TC_CENT;
MACRO_TC_HYPHEN TC_CHARACTER_BO_BAIMAI;
MACRO_TC_HYPHEN TC_CHARACTER_CHO_CHAN;
MACRO_TC_HYPHEN TC_CHARACTER_CHO_CHANG;
MACRO_TC_HYPHEN TC_CHARACTER_CHO_CHING;
MACRO_TC_HYPHEN TC_CHARACTER_CHO_CHOE;
MACRO_TC_HYPHEN TC_CHARACTER_DO_CHADA;
MACRO_TC_HYPHEN TC_CHARACTER_DO_DEK;
MACRO_TC_HYPHEN TC_CHARACTER_FO_FA;
MACRO_TC_HYPHEN TC_CHARACTER_FO_FAN;
MACRO_TC_HYPHEN TC_CHARACTER_HO_HIP;
MACRO_TC_HYPHEN TC_CHARACTER_HO_NOKHUK;
MACRO_TC_HYPHEN TC_CHARACTER_KHO_KHAI;
MACRO_TC_HYPHEN TC_CHARACTER_KHO_KHON;
MACRO_TC_HYPHEN TC_CHARACTER_KHO_KHWAI;
MACRO_TC_HYPHEN TC_CHARACTER_KHO_RAKHANG;
MACRO_TC_HYPHEN TC_CHARACTER_KO_KAI;
MACRO_TC_HYPHEN TC_CHARACTER_LO_CHULA;
MACRO_TC_HYPHEN TC_CHARACTER_LO_LING;
MACRO_TC_HYPHEN TC_CHARACTER_LU;
MACRO_TC_HYPHEN TC_CHARACTER_MAITAIKHU;
MACRO_TC_CHARACTER TC_CHARACTER_MAITAIKHU_LEFT;
MACRO_TC_HYPHEN TC_CHARACTER_MAIYAMOK;
MACRO_TC_HYPHEN TC_CHARACTER_MAI_CHATTAWA;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_CHATTAWA_DOWN;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_CHATTAWA_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_CHATTAWA_LEFT_DOWN;
MACRO_TC_HYPHEN TC_CHARACTER_MAI_EK;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_EK_DOWN;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_EK_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_EK_LEFT_DOWN;
MACRO_TC_HYPHEN TC_CHARACTER_MAI_HAN_AKAT;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_HAN_AKAT_LEFT;
MACRO_TC_HYPHEN TC_CHARACTER_MAI_THO;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_THO_DOWN;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_THO_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_THO_LEFT_DOWN;
MACRO_TC_HYPHEN TC_CHARACTER_MAI_TRI;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_TRI_DOWN;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_TRI_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_MAI_TRI_LEFT_DOWN;
MACRO_TC_HYPHEN TC_CHARACTER_MO_MA;
MACRO_TC_HYPHEN TC_CHARACTER_NGO_NGU;
MACRO_TC_HYPHEN TC_CHARACTER_NIKHAHIT;
MACRO_TC_CHARACTER TC_CHARACTER_NIKHAHIT_LEFT;
MACRO_TC_HYPHEN TC_CHARACTER_NO_NEN;
MACRO_TC_HYPHEN TC_CHARACTER_NO_NU;
MACRO_TC_HYPHEN TC_CHARACTER_O_ANG;
MACRO_TC_HYPHEN TC_CHARACTER_PAIYANNOI;
MACRO_TC_HYPHEN TC_CHARACTER_PHINTHU;
MACRO_TC_HYPHEN TC_CHARACTER_PHO_PHAN;
MACRO_TC_HYPHEN TC_CHARACTER_PHO_PHUNG;
MACRO_TC_HYPHEN TC_CHARACTER_PHO_SAMPHAO;
MACRO_TC_HYPHEN TC_CHARACTER_PO_PLA;
MACRO_TC_HYPHEN TC_CHARACTER_RO_RUA;
MACRO_TC_HYPHEN TC_CHARACTER_RU;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_A;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_AA;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_AE;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_AI_MAIMALAI;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_AI_MAIMUAN;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_AM;
MACRO_TC_CHARACTER TC_CHARACTER_SARA_AM_SPLIT;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_E;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_I;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_II;
MACRO_TC_CHARACTER TC_CHARACTER_SARA_II_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_SARA_I_LEFT;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_O;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_U;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_UE;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_UEE;
MACRO_TC_CHARACTER TC_CHARACTER_SARA_UEE_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_SARA_UE_LEFT;
MACRO_TC_HYPHEN TC_CHARACTER_SARA_UU;
MACRO_TC_HYPHEN TC_CHARACTER_SO_RUSI;
MACRO_TC_HYPHEN TC_CHARACTER_SO_SALA;
MACRO_TC_HYPHEN TC_CHARACTER_SO_SO;
MACRO_TC_HYPHEN TC_CHARACTER_SO_SUA;
MACRO_TC_HYPHEN TC_CHARACTER_THANTHAKHAT;
MACRO_TC_CHARACTER TC_CHARACTER_THANTHAKHAT_DOWN;
MACRO_TC_CHARACTER TC_CHARACTER_THANTHAKHAT_LEFT;
MACRO_TC_CHARACTER TC_CHARACTER_THANTHAKHAT_LEFT_DOWN;
MACRO_TC_HYPHEN TC_CHARACTER_THO_NANGMONTHO;
MACRO_TC_HYPHEN TC_CHARACTER_THO_PHUTHAO;
MACRO_TC_HYPHEN TC_CHARACTER_THO_THAHAN;
MACRO_TC_HYPHEN TC_CHARACTER_THO_THAN;
MACRO_TC_CHARACTER TC_CHARACTER_THO_THAN_NO_DESCENT;
MACRO_TC_HYPHEN TC_CHARACTER_THO_THONG;
MACRO_TC_HYPHEN TC_CHARACTER_THO_THUNG;
MACRO_TC_HYPHEN TC_CHARACTER_TO_PATAK;
MACRO_TC_HYPHEN TC_CHARACTER_TO_TAO;
MACRO_TC_HYPHEN TC_CHARACTER_WO_WAEN;
MACRO_TC_HYPHEN TC_CHARACTER_YO_YAK;
MACRO_TC_HYPHEN TC_CHARACTER_YO_YING;
MACRO_TC_CHARACTER TC_CHARACTER_YO_YING_NO_DESCENT;
MACRO_TC_FIELD TC_COLON;
MACRO_TC_COLUMN TC_COLUMN_BREAK;
MACRO_TC_FIELD TC_COMMA;
MACRO_TC_ACUTE TC_COPYRIGHT;
MACRO_TC_CR TC_CR;
MACRO_TC TC_CTRL_A;
MACRO_TC TC_CTRL_B;
MACRO_TC TC_CTRL_C;
MACRO_TC TC_CTRL_D;
MACRO_TC TC_CTRL_E;
MACRO_TC TC_CTRL_F;
MACRO_TC TC_CTRL_G;
MACRO_TC TC_CTRL_H;
MACRO_TC_CTRL_I TC_CTRL_I;
MACRO_TC_CTRL_I TC_CTRL_J;
MACRO_TC TC_CTRL_K;
MACRO_TC TC_CTRL_L;
MACRO_TC_CTRL TC_CTRL_M;
MACRO_TC_LF TC_CTRL_N;
MACRO_TC_LF TC_CTRL_O;
MACRO_TC TC_CTRL_P;
MACRO_TC TC_CTRL_Q;
MACRO_TC TC_CTRL_R;
MACRO_TC TC_CTRL_S;
MACRO_TC TC_CTRL_T;
MACRO_TC TC_CTRL_U;
MACRO_TC TC_CTRL_V;
MACRO_TC TC_CTRL_W;
MACRO_TC TC_CTRL_X;
MACRO_TC TC_CTRL_Y;
MACRO_TC TC_CTRL_Z;
MACRO_TC_ACUTE TC_CURRENCY;
MACRO_TC_HYPHEN TC_CURRENCY_SYMBOL_BAHT;
MACRO_TC_DC1 TC_DC1;
MACRO_TC_DC1 TC_DC2;
MACRO_TC_DC1 TC_DC3;
MACRO_TC_DC1 TC_DC4;
MACRO_TC_DEFAULT TC_DEFAULT_FEATURES;
MACRO_TC_DEFAULT TC_DEFAULT_TOOLBOX_FEATURES;
MACRO_TC_ACUTE TC_DEGREE;
MACRO_TC_FIELD TC_DELETE;
MACRO_TC_HYPHEN TC_DIGIT_EIGHT;
MACRO_TC_HYPHEN TC_DIGIT_FIVE;
MACRO_TC_HYPHEN TC_DIGIT_FOUR;
MACRO_TC_HYPHEN TC_DIGIT_NINE;
MACRO_TC_HYPHEN TC_DIGIT_ONE;
MACRO_TC_HYPHEN TC_DIGIT_SEVEN;
MACRO_TC_HYPHEN TC_DIGIT_SIX;
MACRO_TC_HYPHEN TC_DIGIT_THREE;
MACRO_TC_HYPHEN TC_DIGIT_TWO;
MACRO_TC_HYPHEN TC_DIGIT_ZERO;
MACRO_TC_ACUTE TC_DIVISION;
MACRO_TC_FIELD TC_DOLLAR_SIGN;
MACRO_TC_FIELD TC_EIGHT;
MACRO_TC_DC1 TC_EM;
MACRO_TC_LF TC_EMSPACE;
MACRO_TC_LF TC_ENSPACE;
MACRO_TC TC_ENTER;
MACRO_TC_FIELD TC_EQUAL;
MACRO_TC_DC1 TC_ESC;
MACRO_TC TC_ESCAPE;
MACRO_TC_NUL TC_ETX;
MACRO_TC_FIELD TC_EXCLAMATION;
MACRO_TC_VT TC_FF;
MACRO_TC_FIELD TC_FIELD_SEP;
MACRO_TC_FIELD TC_FIVE;
MACRO_TC_FIELD TC_FOUR;
MACRO_TC_FS TC_FS;
MACRO_TC2 TC_GCM_FEATURES;
MACRO_TC_ACUTE TC_GERMANDBLS;
MACRO_TC_LF TC_GRAPHIC;
MACRO_TC_HYPHEN TC_GRAVE;
MACRO_TC_ACUTE TC_GREATEREQUAL;
MACRO_TC_FIELD TC_GREATER_THAN;
MACRO_TC_ACUTE TC_GUILLEDBLLEFT;
MACRO_TC_ACUTE TC_GUILLEDBLRIGHT;
MACRO_TC_HYPHEN TC_HYPHEN;
MACRO_TC_FIELD TC_LEFT_BRACE;
MACRO_TC_FIELD TC_LEFT_BRACKET;
MACRO_TC_FIELD TC_LEFT_PAREN;
MACRO_TC_ACUTE TC_LESSEQUAL;
MACRO_TC_FIELD TC_LESS_THAN;
MACRO_TC_LF TC_LF;
MACRO_TC TC_LINEFEED;
MACRO_TC_ACUTE TC_L_MU;
MACRO_TC_ACUTE TC_L_PI;
MACRO_TC_FIELD TC_MINUS;
MACRO_TC_FIELD TC_NINE;
MACRO_TC_COLUMN TC_NONBRKHYPHEN;
MACRO_TC_NUL TC_NUL;
MACRO_TC TC_NULL;
MACRO_TC_LF TC_NULL_WIDTH;
MACRO_TC_FIELD TC_NUMBER_SIGN;
MACRO_TC_FIELD TC_ONE;
MACRO_TC_COLUMN TC_OPTHYPHEN;
MACRO_TC_ACUTE TC_ORDFEMININE;
MACRO_TC_SECTION TC_PAGE_BREAK;
MACRO_TC_ACUTE TC_PARAGRAPH;
MACRO_TC_FIELD TC_PERCENT;
MACRO_TC_FIELD TC_PERIOD;
MACRO_TC_ACUTE TC_PERTHOUSAND;
MACRO_TC_FIELD TC_PLUS;
MACRO_TC_ACUTE TC_PLUSMINUS;
MACRO_TC_FIELD TC_QUESTION_MARK;
MACRO_TC_FIELD TC_QUOTE;
MACRO_TC_ACUTE TC_REGISTERED;
MACRO_TC_FIELD TC_RIGHT_BRACE;
MACRO_TC_FIELD TC_RIGHT_BRACKET;
MACRO_TC_FIELD TC_RIGHT_PAREN;
MACRO_TC_ACUTE TC_SECTION;
MACRO_TC_SECTION TC_SECTION_BREAK;
MACRO_TC_FIELD TC_SEMICOLON;
MACRO_TC_FIELD TC_SEVEN;
MACRO_TC TC_SHIFT_IN;
MACRO_TC TC_SHIFT_OUT;
MACRO_TC_FIELD TC_SIX;
MACRO_TC_FIELD TC_SLASH;
MACRO_TC_FIELD TC_SMALL_A;
MACRO_TC_FIELD TC_SMALL_B;
MACRO_TC_FIELD TC_SMALL_C;
MACRO_TC_FIELD TC_SMALL_D;
MACRO_TC_FIELD TC_SMALL_E;
MACRO_TC_FIELD TC_SMALL_F;
MACRO_TC_FIELD TC_SMALL_G;
MACRO_TC_FIELD TC_SMALL_H;
MACRO_TC_FIELD TC_SMALL_I;
MACRO_TC_FIELD TC_SMALL_J;
MACRO_TC_FIELD TC_SMALL_K;
MACRO_TC_FIELD TC_SMALL_L;
MACRO_TC_FIELD TC_SMALL_M;
MACRO_TC_FIELD TC_SMALL_N;
MACRO_TC_FIELD TC_SMALL_O;
MACRO_TC_FIELD TC_SMALL_P;
MACRO_TC_FIELD TC_SMALL_Q;
MACRO_TC_FIELD TC_SMALL_R;
MACRO_TC_FIELD TC_SMALL_S;
MACRO_TC_FIELD TC_SMALL_T;
MACRO_TC_FIELD TC_SMALL_U;
MACRO_TC_FIELD TC_SMALL_V;
MACRO_TC_FIELD TC_SMALL_W;
MACRO_TC_FIELD TC_SMALL_X;
MACRO_TC_FIELD TC_SMALL_Y;
MACRO_TC_FIELD TC_SMALL_Z;
MACRO_TC_FIELD TC_SNG_QUOTE;
MACRO_TC_FIELD TC_SPACE;
MACRO_TC_ACUTE TC_STERLING;
MACRO_TC_NUL TC_STX;
MACRO_TC TC_TAB;
MACRO_TC_LF TC_THINSPACE;
MACRO_TC_FIELD TC_THREE;
MACRO_TC_ACUTE TC_TRADEMARK;
MACRO_TC_FIELD TC_TWO;
MACRO_TC_FIELD TC_UNDERSCORE;
MACRO_TC_FIELD TC_VERTICAL_BAR;
MACRO_TC_VT TC_VT;
MACRO_TC_ACUTE TC_YEN;
MACRO_TC_FIELD TC_ZERO;
MACRO_TDF TDF_THESDICT;
MACRO_TDTF TDTF_THESDICT;
MACRO_TD TD_GCM_TOOLBOX_FEATURES;
MACRO_TELNET TELNET_DEFAULT_PORT;
MACRO_ECHO TELNET_SERVER;
MACRO_FIELD TEMP_DATA_ROW;
MACRO_FIELD TEMP_DATA_ROW_FOR_VISUAL_UPDATES;
optr __pascal TEXTALLOCCLIPBOARDOBJECT(VMFileHandle file, VisTextStorageFlags storageFlags, byte regionFlag);
Boolean __pascal TEXTFINDDEFAULTCHARATTR(VisTextDefaultCharAttr *defaultAttr, VisTextCharAttr *attr);
Boolean __pascal TEXTFINDDEFAULTPARAATTR(VisTextDefaultParaAttr *defaultAttr, VisTextParaAttr *attr);
VMBlockHandle __pascal TEXTFINISHWITHCLIPBOARDOBJECT(optr obj, TextClipboardOption opt, optr owner, const char *name);
Boolean __pascal TEXTGETSYSTEMCHARATTRRUN(word *chunkOrConstant, optr object, ObjChunkFlags flags);
void __pascal TEXTMAPDEFAULTCHARATTR(VisTextDefaultCharAttr defaulAttr, VisTextCharAttr *attr);
void __pascal TEXTMAPDEFAULTPARAATTR(VisTextDefaultParaAttr defaulAttr, VisTextParaAttr *attr);
dword __pascal TEXTSEARCHINHUGEARRAY(char *str2, word str2Size, dword str1Size, dword curOffset, dword endOffset, FileHandle hugeArrayFile, VMBlockHandle hugeArrayBlock, word searchOptions, dword *matchLen);
char *__pascal TEXTSEARCHINSTRING(const char *str1, const char *startPtr, const char *endPtr, word str1Size, const char *str2, word str2Size, word searchOptions, word *matchLen);
void __pascal TEXTSENDSEARCHNOTIFICATION(SearchReplaceEnableFlags flags);
void __pascal TEXTSETHYPHENATIONCALL(void *hyphenationWordEntryPoint);
void __pascal TEXTSETSPELLLIBRARY(MemHandle libHandle);
MACRO_TEXT TEXT_ADDRESS_PAST_END;
MACRO_TEXT_ADDRESS TEXT_ADDRESS_PAST_END_HIGH;
MACRO_TEXT_ADDRESS TEXT_ADDRESS_PAST_END_LOW;
MACRO_VIS_TEXT_MAX_TABS TEXT_ONE_LINE_RIGHT_MARGIN;
MACRO_TEXT2 TEXT_POS_INVALID;
MACRO_TEXT2 TEXT_RULER_HEIGHT;
$8EED5B23BB25CC4C68758CEFE7548B42 TE_BOUND;
$8EED5B23BB25CC4C68758CEFE7548B42 TE_BREAKPOINT;
$D2F139DC058277D374F33882489AB670 TE_CUSTOM;
$D2F139DC058277D374F33882489AB670 TE_DISK_FULL;
$8EED5B23BB25CC4C68758CEFE7548B42 TE_DIVIDE_BY_ZERO;
$D2F139DC058277D374F33882489AB670 TE_ERROR;
$D2F139DC058277D374F33882489AB670 TE_EXPORT_ERROR;
$D2F139DC058277D374F33882489AB670 TE_EXPORT_FILE_EMPTY;
$D2F139DC058277D374F33882489AB670 TE_EXPORT_INVALID_CLIPBOARD_FORMAT;
$D2F139DC058277D374F33882489AB670 TE_EXPORT_NOT_SUPPORTED;
$D2F139DC058277D374F33882489AB670 TE_FILE_ERROR;
$D2F139DC058277D374F33882489AB670 TE_FILE_OPEN;
$D2F139DC058277D374F33882489AB670 TE_FILE_READ;
$D2F139DC058277D374F33882489AB670 TE_FILE_TOO_LARGE;
$D2F139DC058277D374F33882489AB670 TE_FILE_WRITE;
$8EED5B23BB25CC4C68758CEFE7548B42 TE_FPU_EXCEPTION;
$D2F139DC058277D374F33882489AB670 TE_IMPORT_ERROR;
$D2F139DC058277D374F33882489AB670 TE_IMPORT_NOT_SUPPORTED;
$D2F139DC058277D374F33882489AB670 TE_INVALID_FORMAT;
$D2F139DC058277D374F33882489AB670 TE_METAFILE_CREATION_ERROR;
$D2F139DC058277D374F33882489AB670 TE_NO_ERROR;
$D2F139DC058277D374F33882489AB670 TE_OUT_OF_MEMORY;
$8EED5B23BB25CC4C68758CEFE7548B42 TE_OVERFLOW;
$8EED5B23BB25CC4C68758CEFE7548B42 TE_SINGLE_STEP;
MACRO_TFF TFF_EDITABLE_TEXT_OBJECT_HAS_FOCUS;
MACRO_TFF TFF_OBJECT_RUN_BY_UI_THREAD;
MACRO_TF TF_NO_TRACTOR;
MACRO_TF TF_TRACTOR1;
MACRO_TF TF_TRACTOR2;
MACRO_TF TF_TRACTOR3;
MACRO_TGF TGF_DISABLE_ENFORCED_DESIRED_MAX_HEIGHT_WHILE_EDITING;
MACRO_TGF TGF_ENFORCE_DESIRED_MAX_HEIGHT;
MACRO_TGF TGF_ENFORCE_DESIRED_MIN_HEIGHT;
MACRO_TGF TGF_ENFORCE_MIN_DISPLAY_SIZE;
MACRO_TGF TGF_SHRINK_WIDTH_TO_MIN_AFTER_EDIT;
MACRO_TGHT TGHT_ACTIVE_HIGHLIGHT;
MACRO_TGHT TGHT_INACTIVE_HIGHLIGHT;
MACRO_TGHT TGHT_NO_HIGHLIGHT;
$1E8870198DDE23EBA103909082FA56A6 TGIT_PRIORITY_AND_USAGE;
$1E8870198DDE23EBA103909082FA56A6 TGIT_QUEUE_HANDLE;
$1E8870198DDE23EBA103909082FA56A6 TGIT_THREAD_HANDLE;
ThaiKeyboardMapType __pascal __far THAICHANGEKEYBOARDMAP();
ThaiKeyboardMapType __pascal __far THAIGETKEYBOARDMAP();
Boolean __pascal __far THAISWITCHTOKEYMAP(ThaiKeyboardMapType map);
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_A;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_B;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_C;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_D;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_E;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_F;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_G;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_H;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_I;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_J;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_K;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_L;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_M;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_N;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_O;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_P;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_Q;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_R;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_S;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_T;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_U;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_V;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_W;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_X;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_Y;
MACRO_THAI THAI_CHAR_FROM_KEY_CAP_Z;
MACRO_THAI THAI_CHAR_FROM_KEY_COMMA;
MACRO_THAI THAI_CHAR_FROM_KEY_EIGHT;
MACRO_THAI THAI_CHAR_FROM_KEY_FIVE;
MACRO_THAI THAI_CHAR_FROM_KEY_FOUR;
MACRO_THAI THAI_CHAR_FROM_KEY_NINE;
MACRO_THAI THAI_CHAR_FROM_KEY_ONE;
MACRO_THAI THAI_CHAR_FROM_KEY_PERIOD;
MACRO_THAI THAI_CHAR_FROM_KEY_SEMICOLON;
MACRO_THAI THAI_CHAR_FROM_KEY_SEVEN;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_COMMA;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_EIGHT;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_FIVE;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_FOUR;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_NINE;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_ONE;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_PERIOD;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_SEMICOLON;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_SEVEN;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_SIX;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_THREE;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_TWO;
MACRO_THAI THAI_CHAR_FROM_KEY_SHIFT_ZERO;
MACRO_THAI THAI_CHAR_FROM_KEY_SIX;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_A;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_B;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_C;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_D;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_E;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_F;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_G;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_H;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_I;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_J;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_K;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_L;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_M;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_N;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_O;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_P;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_Q;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_R;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_S;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_T;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_U;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_V;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_W;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_X;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_Y;
MACRO_THAI THAI_CHAR_FROM_KEY_SMALL_Z;
MACRO_THAI THAI_CHAR_FROM_KEY_SPACE;
MACRO_THAI THAI_CHAR_FROM_KEY_THREE;
MACRO_THAI THAI_CHAR_FROM_KEY_TWO;
MACRO_THAI THAI_CHAR_FROM_KEY_ZERO;
MACRO_TRA THCF_CLEAR_ALL_CONTEXTS;
MACRO_THCF THCF_CLEAR_ALL_HYPERLINKS;
MACRO_THCF THCF_DEFINE_CONTEXT;
MACRO_THCF THCF_DEFINE_FILE;
MACRO_THCF THCF_FOLLOW_HYPERLINK;
MACRO_THCF THCF_SET_CONTEXT;
MACRO_THCF THCF_SET_HYPERLINK;
word __pascal THESAURUSGETMEANINGS(char *lookupWord, MeaningsRetParams *params);
word __pascal THESAURUSGETSYNONYMS(char *lookupWord, word senseNumber, optr *synonyms);
MACRO_THIRTYSECOND THIRTYSECOND;
SemaphoreHandle __pascal THREADALLOCSEM(word value);
ThreadLockHandle THREADALLOCTHREADLOCK(void);
void __pascal THREADATTACHTOQUEUE(QueueHandle qh, ClassStruct *class);
ThreadHandle __pascal THREADCREATE(word priority, word valueToPass, word (*startRoutine)(word valuePassed), word stackSize, GeodeHandle owner);
void __pascal THREADDESTROY(word errorCode, optr ackObject, word ackData);
void __pascal THREADFREESEM(SemaphoreHandle sem);
void __pascal THREADFREETHREADLOCK(ThreadLockHandle sem);
word THREADGETERROR(void);
word __pascal THREADGETINFO(ThreadHandle th, ThreadGetInfoType info);
void __pascal THREADGRABTHREADLOCK(ThreadLockHandle sem);
void __pascal THREADHANDLEEXCEPTION(ThreadHandle th, ThreadException exception, void (*handler)(void));
void __pascal THREADMODIFY(ThreadHandle th, word newBasePriority, ThreadModifyFlags flags);
word __pascal THREADPRIVALLOC(word wordsRequested, GeodeHandle owner);
void __pascal THREADPRIVFREE(word range, word wordsRequested);
SemaphoreError __pascal THREADPSEM(SemaphoreHandle sem);
SemaphoreError __pascal THREADPTIMEDSEM(SemaphoreHandle sem, word timeout);
void __pascal THREADRELEASETHREADLOCK(ThreadLockHandle sem);
void __pascal THREADSETERROR(word errno);
void __pascal THREADVSEM(SemaphoreHandle sem);
MACRO_TIF TIF_NORMAL;
dword TIMERGETCOUNT(void);
void __pascal TIMERGETDATEANDTIME(TimerDateAndTime *dateAndTime);
TimerFileDateTime *TIMERGETFILEDATETIME(TimerFileDateTime *__return_ptr __struct_ptr retstr);
void __pascal TIMERSETDATEANDTIME(word flags, const TimerDateAndTime *dateAndTime);
void __pascal TIMERSLEEP(word ticks);
TimerHandle __pascal TIMERSTART(TimerType timerType, optr destObject, word ticks, Message msg, word interval, word *id);
Boolean __pascal TIMERSTOP(TimerHandle th, word id);
$B673D35522669009ED40C2BBAA348CE6 TIMER_EVENT_CONTINUAL;
$B673D35522669009ED40C2BBAA348CE6 TIMER_EVENT_ONE_SHOT;
$B673D35522669009ED40C2BBAA348CE6 TIMER_EVENT_REAL_TIME;
$B673D35522669009ED40C2BBAA348CE6 TIMER_MS_ROUTINE_ONE_SHOT;
$B673D35522669009ED40C2BBAA348CE6 TIMER_ROUTINE_CONTINUAL;
$B673D35522669009ED40C2BBAA348CE6 TIMER_ROUTINE_ONE_SHOT;
$B673D35522669009ED40C2BBAA348CE6 TIMER_ROUTINE_REAL_TIME;
MACRO_TIME TIME_SET_DATE;
MACRO_TIME_SET TIME_SET_TIME;
MACRO_TI TI_ON_MMC;
$1469305C9A4BEB75679A38DFE15FF374 TKMT_ENGLISH;
$1469305C9A4BEB75679A38DFE15FF374 TKMT_THAI;
$88B5D0B5A2060167D6627592E3BB6725 TL_APPLICATION_OBJECTS;
MACRO_TL TL_BULLET;
$88B5D0B5A2060167D6627592E3BB6725 TL_CONTENT;
MACRO_TL TL_DOT;
$88B5D0B5A2060167D6627592E3BB6725 TL_GENERIC_OBJECTS;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_APPLICATION;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_DISPLAY;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_DISPLAY_CTRL;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_FIELD;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_PRIMARY;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_SYSTEM;
$88B5D0B5A2060167D6627592E3BB6725 TL_GEN_VIEW;
$88B5D0B5A2060167D6627592E3BB6725 TL_LIBRARY_LEVELS;
MACRO_TL TL_LINE;
MACRO_TL TL_NONE;
$88B5D0B5A2060167D6627592E3BB6725 TL_TARGET;
MACRO_TMF TMF_BASE_PRIO;
MACRO_TMF_ZERO TMF_ZERO_USAGE;
MACRO_GCNLTF TMGCNF_RELOCATED;
MACRO_TMMF_CHARACTER_JUSTIFICATION TMMF_CHARACTER_JUSTIFICATION;
MACRO_TM TM_DRAW_ACCENT;
MACRO_TM TM_DRAW_BASE;
MACRO_TM TM_DRAW_BOTTOM;
MACRO_TM TM_DRAW_OPTIONAL_HYPHENS;
MACRO_TM TM_PAD_SPACES;
MACRO_TM TM_PAIR_KERN;
MACRO_TM TM_TRACK_KERN;
word __pascal TOCADDDISK(const char *diskName, const TocDiskStruct *diskDesc);
Boolean TOCCREATENEWFILE(void);
void *__pascal TOCDBLOCK(DBGroupAndItem thing);
void *__pascal TOCDBLOCKGETREF(DBGroupAndItem thing, optr *refPtr);
Boolean __pascal TOCFINDCATEGORY(TocCategoryStruct *cat);
word __pascal TOCGETFILEHANDLE();
word __pascal TOCNAMEARRAYADD(DBGroupAndItem array, const char *nameToFind, const void *data);
word __pascal TOCNAMEARRAYFIND(DBGroupAndItem array, const char *name, void *buffer);
word __pascal TOCNAMEARRAYGETELEMENT(DBGroupAndItem array, word element, void *buffer);
word __pascal TOCSORTEDNAMEARRAYADD(word arr, const char *nameToAdd, NameArrayAddFlags flags, const void *data);
Boolean __pascal TOCSORTEDNAMEARRAYFIND(word arr, const char *nameToFind, SortedNameArrayFindFlags flags, void *buffer, word *elementNum);
void __pascal TOCUPDATECATEGORY(TocUpdateCategoryParams *params);
MACRO_TOC TOC_NAME_MAX_LENGTH;
MACRO_TOKEN TOKEN_CHARS_LENGTH;
MACRO_KT TOKEN_DELIMITER;
MACRO_TOKEN_LENGTH TOKEN_LENGTH;
int __pascal TOLOWER(unsigned int c);
MACRO_TOP TOP_MARGIN;
int __pascal TOUPPER(unsigned int c);
$3B7EBAD49AD5A311A61ED5C3DEC7EC6C TO_NULL;
$3B7EBAD49AD5A311A61ED5C3DEC7EC6C TO_OBJ_BLOCK_OUTPUT;
$3B7EBAD49AD5A311A61ED5C3DEC7EC6C TO_PROCESS;
$3B7EBAD49AD5A311A61ED5C3DEC7EC6C TO_SELF;
MACRO_TP TP_10_6_PITCH;
MACRO_TP TP_10_PITCH;
MACRO_TP TP_12_PITCH;
MACRO_TP TP_15_PITCH;
MACRO_TP TP_16_6_PITCH;
MACRO_TP TP_16_PITCH;
MACRO_TP TP_17_PITCH;
MACRO_TP TP_19_2_PITCH;
MACRO_TP TP_20_PITCH;
MACRO_TP TP_21_3_PITCH;
MACRO_TP TP_24_PITCH;
MACRO_TP TP_5_PITCH;
MACRO_TP TP_6_PITCH;
MACRO_TP TP_PROPORTIONAL;
MACRO_TRA TRA_COPY_TAB;
MACRO_TRA TRA_MOVE_MARGIN;
MACRO_TRA TRA_MOVE_TAB;
MACRO_TRA TRA_NULL;
MACRO_TRCA TRCA_IGNORE_ORIGIN;
MACRO_TRCA TRCA_ROUND;
MACRO_TRCCF TRCCF_IGNORE_ORIGIN;
MACRO_TRCCF TRCCF_ROUND;
MACRO_TRCC TRCC_DEFAULT_FEATURES;
MACRO_TRCC TRCC_DEFAULT_TOOLBOX_FEATURES;
MACRO_TRF TRF_ALWAYS_MOVE_BOTH_MARGINS;
MACRO_TRF TRF_DRAGGING;
MACRO_TRF TRF_OBJECT_SELECTED;
MACRO_TRF TRF_ROUND_COORDINATES;
MACRO_TRF TRF_SELECTING;
MACRO_TRRT TRRT_IN;
MACRO_TRRT TRRT_OUT;
MACRO_TRRT TRRT_PARTIAL;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_BLOCK;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_DB_ITEM;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_HUGE_ARRAY;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_OPTR;
MACRO_TRT TRT_OTHER;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_POINTER;
MACRO_TRT TRT_RULER;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_SEGMENT_CHUNK;
$FD9CF0A438A888F33B48E36318B4C8B6 TRT_VM_BLOCK;
MACRO_FALSE TRUE;
MACRO_TR TR_REF_NUMBER;
MACRO_TR_REF TR_REF_NUMBER_OFFSET;
MACRO_TSCF TSCF_ALL_CAP;
MACRO_TSCF TSCF_BOLD;
MACRO_TSCF TSCF_BOXED;
MACRO_TSCF TSCF_BUTTON;
MACRO_TSCF TSCF_INDEX;
MACRO_TSCF TSCF_ITALIC;
MACRO_MSPC_DEFAULT TSCF_PLAIN;
MACRO_TSCF TSCF_SMALL_CAP;
MACRO_TSCF TSCF_STRIKE_THRU;
MACRO_TSCF TSCF_SUBSCRIPT;
MACRO_TSCF TSCF_SUPERSCRIPT;
MACRO_TSCF TSCF_UNDERLINE;
MACRO_TSCTF TSCTF_ALL_CAP;
MACRO_TSCTF TSCTF_BOLD;
MACRO_TSCTF TSCTF_BOXED;
MACRO_TSCTF TSCTF_BUTTON;
MACRO_TSCTF TSCTF_INDEX;
MACRO_TSCTF TSCTF_ITALIC;
MACRO_TSCTF TSCTF_PLAIN;
MACRO_TSCTF TSCTF_SMALL_CAP;
MACRO_TSCTF TSCTF_STRIKE_THRU;
MACRO_TSCTF TSCTF_SUBSCRIPT;
MACRO_TSCTF TSCTF_SUPERSCRIPT;
MACRO_TSCTF TSCTF_UNDERLINE;
MACRO_TSC TSC_DEFAULT_FEATURES;
MACRO_TSC_DEFAULT TSC_DEFAULT_TOOLBOX_FEATURES;
MACRO_TSF TSF_APPLY_TO_SELECTION_ONLY;
MACRO_TSF TSF_MARGINS_RELATIVE;
MACRO_TSF TSF_POINT_SIZE_RELATIVE;
MACRO_TSF TSF_SPACING_RELATIVE;
$8A0FAB3510E333DDB8EAC3049ED5AAA5 TSN_TERM_CONNECTED;
$8A0FAB3510E333DDB8EAC3049ED5AAA5 TSN_TERM_NOT_CONNECTED;
MACRO_TS_ALTSTICK TS_ALTSTICK;
MACRO_TS TS_BOLD;
MACRO_TS_ALTSTICK TS_CAPSLOCK;
MACRO_TS_ALTSTICK TS_CTRLSTICK;
MACRO_TS_ALTSTICK TS_FNCTSTICK;
MACRO_TS TS_ITALIC;
MACRO_TS_ALTSTICK TS_NUMLOCK;
MACRO_LAST_LINE_END TS_OUTLINE;
MACRO_TS_ALTSTICK TS_SCROLLLOCK;
MACRO_TS_ALTSTICK TS_SHIFTSTICK;
MACRO_TS TS_STRIKE_THRU;
MACRO_TS TS_SUBSCRIPT;
MACRO_TS TS_SUPERSCRIPT;
MACRO_TS TS_UNDERLINE;
void __pascal TTPADVANCECREDIT(ClientHandle client, word credits);
IrlmpError __pascal TTPCONNECTREQUEST(ClientHandle client, IrlmpConnectArgs1 *connectArgs);
IrlmpError __pascal TTPCONNECTRESPONSE(ClientHandle client, IrlmpDataArgs *dataArgs);
IrlmpError __pascal TTPDATAREQUEST(ClientHandle client, IrlmpDataArgs *dataArgs);
IrlmpError __pascal TTPDISCONNECTREQUEST(ClientHandle client, IrlmpDataArgs *dataArgs);
$A6853A487064880F72C2535E53D874C9 TTPIC_CONNECT_CONFIRMATION;
$A6853A487064880F72C2535E53D874C9 TTPIC_CONNECT_INDICATION;
$A6853A487064880F72C2535E53D874C9 TTPIC_DATA_INDICATION;
$A6853A487064880F72C2535E53D874C9 TTPIC_DISCONNECT_INDICATION;
$A6853A487064880F72C2535E53D874C9 TTPIC_STATUS_CONFIRMATION;
IrlmpError __pascal TTPREGISTER(IrlmpLsapSel *lsapSel, word extraData, void (__pascal *callback)(ClientHandle client, IrlmpIndicationOrConfirmation type, word extra, dword data, word status), ClientHandle *clientHandle);
IrlmpError __pascal TTPSTATUSREQUEST(ClientHandle client);
word __pascal TTPTXQUEUEGETFREECOUNT(ClientHandle client);
IrlmpError __pascal TTPUNREGISTER(ClientHandle client);
MACRO_IRLMP_HEADER TTP_HEADER_SIZE;
MACRO_TT TT_ANCHORED;
MACRO_TT TT_CENTER;
$ADC9A944F1FE6DE7FE5938C088503ABD TT_FIXED_TONE;
MACRO_TT TT_LEFT;
$ADC9A944F1FE6DE7FE5938C088503ABD TT_LONG_TONE;
$ADC9A944F1FE6DE7FE5938C088503ABD TT_NO_TONE;
MACRO_TT TT_RIGHT;
$ADC9A944F1FE6DE7FE5938C088503ABD TT_SHORT_TONE;
$ADC9A944F1FE6DE7FE5938C088503ABD TT_UNCHECKED;
MACRO_TUCF TUCF_ADD_CALLBACK;
MACRO_TUCF TUCF_CUSTOM_FILES;
MACRO_TUCF TUCF_DIRECTORY_NOT_FOUND;
MACRO_TUCF TUCF_EXTENDED_DEVICE_DRIVERS;
MACRO_TUNE TUNE_NAME_MAX_LENGTH;
MACRO_TYPE TYPE_STRING_LENGTH;
MACRO_TT TabLeader;
MACRO_TabLeader TabLeader_OFFSET;
MACRO_TRT TabReferenceType;
MACRO_TabLeader TabType;
MACRO_TabType TabType_OFFSET;
MACRO_AutoSheetFeed TractorFeed;
MACRO_TractorFeed TractorFeed_OFFSET;
$C1B24CAA6544326D69CB1DDF29A53078 UADT_FLAGS;
$C1B24CAA6544326D69CB1DDF29A53078 UADT_PTR;
$C1B24CAA6544326D69CB1DDF29A53078 UADT_VM_CHAIN;
$08FA84B0CCC446B442C6A6A80D5B4D16 UATH_CONVERT_OVERFLOW;
$08FA84B0CCC446B442C6A6A80D5B4D16 UATH_NON_NUMERIC_DIGIT_IN_STRING;
MACRO_UC UC_BACKLIGHT;
MACRO_UC UC_BUTTON_EVENT;
MACRO_UC UC_CARD_INSERT;
MACRO_UC UC_CARD_REMOVE;
MACRO_UC UC_COPY;
MACRO_UC UC_COVER_CLOSE;
MACRO_UC UC_COVER_OPEN;
MACRO_UC UC_CUT;
MACRO_UC UC_DATE;
MACRO_UC UC_DELETE;
MACRO_UC UC_EXIT;
MACRO_UC UC_IR;
MACRO_UC UC_JOTTER;
MACRO_UC UC_LOCK;
MACRO_UC UC_MENU;
MACRO_UC UC_NULL;
MACRO_UC UC_OFF;
MACRO_UC UC_ON;
MACRO_UC UC_PASTE;
MACRO_UC UC_QUICK_COPY;
MACRO_UC UC_ROTATE;
MACRO_UC UC_SWITCH_KEYMAP;
MACRO_UC UC_TIME;
MACRO_UC UC_ZOOM;
MACRO_UD UD_NOT_UNDOABLE;
MACRO_UD UD_REDO;
MACRO_UD UD_UNDO;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_CREATED_NEW_ELEMENT;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_GRAPHIC_FLAGS;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_GRAPHIC_TYPE;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_GSTRING_SIZE;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_GSTRING_VMCHAIN;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_GSTRING_VMCHAIN_HANDLE;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_VARIABLE_MANUFACTURER_ID;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_VARIABLE_PRIVATE_DATA;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_VARIABLE_TYPE;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_INVALID_VARIABLE_VMCHAIN_HANDLE;
$8A6E954DDB0D916EB9EEB3AB15E1646F UGRV_MODIFIED_ELEMENT;
MACRO_UHTAF UHTAF_INCLUDE_LEADING_ZEROS;
MACRO_UHTAF UHTAF_NULL_TERMINATE;
MACRO_UHTAF UHTAF_SBCS_STRING;
MACRO_UHTAF UHTAF_SIGNED_VALUE;
MACRO_UHTAF UHTAF_THOUSANDS_SEPARATORS;
MACRO_UHTA UHTA_ALL_BUFFER_SIZE;
MACRO_UHTA UHTA_NO_NULL_TERM_BUFFER_SIZE;
MACRO_UHTA UHTA_NULL_TERM_BUFFER_SIZE;
MACRO_UHTA UHTA_SPACE_FOR_SEPARATORS;
MACRO_UHTA UHTA_SPACE_FOR_SIGN;
MACRO_UIBF UIBF_BLINKING_CURSOR;
MACRO_UIBF UIBF_CLICK_GOES_THRU;
MACRO_UIBF UIBF_CLICK_TO_TYPE;
MACRO_UIBF UIBF_KEYBOARD_ONLY;
MACRO_UIBF UIBF_NO_KEYBOARD;
MACRO_UIBF UIBF_SELECT_ALWAYS_RAISES;
MACRO_UIBF UIBF_SELECT_DISPLAYS_MENU;
MACRO_UIBF UIBF_SPECIFIC_UI_COMPATIBLE;
MACRO_UIEO UIEO_CONTROL_PANEL;
MACRO_UIEO UIEO_DESK_ACCESSORY_LIST;
MACRO_UIEO UIEO_DOS_TASKS_LIST;
MACRO_UIEO UIEO_EXIT_TO_DOS;
MACRO_UIEO UIEO_GEOS_TASKS_LIST;
MACRO_UIEO UIEO_MAIN_APPS_LIST;
MACRO_UIEO UIEO_OTHER_APPS_LIST;
MACRO_UIEO UIEO_POSITION;
MACRO_UIEO UIEO_RETURN_TO_DEFAULT_LAUNCHER;
MACRO_UIEO UIEO_UTILITIES_PANEL;
$A3A78A9B23B572A589ADDD9A5B47ED7A UIEP_LOWER_LEFT;
$A3A78A9B23B572A589ADDD9A5B47ED7A UIEP_NONE;
$A3A78A9B23B572A589ADDD9A5B47ED7A UIEP_TOP_PRIMARY;
MACRO_UIFA_ADJUST UIFA_ADJUST;
MACRO_UIFA UIFA_CONSTRAIN;
MACRO_UIFA_MOVE UIFA_COPY;
MACRO_UIFA_ADJUST UIFA_EXTEND;
MACRO_UIFA UIFA_FEATURES;
MACRO_UIFA UIFA_IN;
MACRO_UIFA_MOVE UIFA_MOVE;
MACRO_UIFA UIFA_MOVE_COPY;
MACRO_UIFA_POPUP UIFA_PAN;
MACRO_UIFA_POPUP UIFA_POPUP;
MACRO_UIFA UIFA_PREF_A;
MACRO_UIFA UIFA_PREF_B;
MACRO_UIFA UIFA_PREF_C;
MACRO_UIFA UIFA_SELECT;
MACRO_UIHO UIHO_HIDE_HELP_BUTTONS;
$58017EFC15E097F8A2A4AAE107A67AB2 UIIL_ADVANCED;
$58017EFC15E097F8A2A4AAE107A67AB2 UIIL_BEGINNING;
$58017EFC15E097F8A2A4AAE107A67AB2 UIIL_GURU;
$58017EFC15E097F8A2A4AAE107A67AB2 UIIL_INTERMEDIATE;
$58017EFC15E097F8A2A4AAE107A67AB2 UIIL_INTRODUCTORY;
MACRO_UIIO UIIO_ALLOW_INITIALLY_HIDDEN_MENU_BARS;
MACRO_UIIO UIIO_DISABLE_POPOUTS;
MACRO_UIIO UIIO_OPTIONS_MENU;
$1E975EE268A6A7F02CB8EEFBAAB959A3 UILM_GURU;
$1E975EE268A6A7F02CB8EEFBAAB959A3 UILM_MULTIPLE_INSTANCES;
$1E975EE268A6A7F02CB8EEFBAAB959A3 UILM_SINGLE_INSTANCE;
$1E975EE268A6A7F02CB8EEFBAAB959A3 UILM_TRANSPARENT;
MACRO_UILO UILO_CLOSABLE_APPS;
MACRO_UILO UILO_DESK_ACCESSORIES;
MACRO_UIWOI UIWOI_MASK;
MACRO_UIWOI UIWOI_OPTIONS;
MACRO_UIWO UIWO_COMBINE_HEADER_AND_MENU_IN_MAXIMIZED_WINDOWS;
MACRO_UIWO UIWO_KBD_NAVIGATION;
MACRO_UIWO UIWO_MAXIMIZE_ON_STARTUP;
MACRO_UIWO UIWO_PINNABLE_MENUS;
MACRO_UIWO UIWO_POPOUT_MENU_BAR;
MACRO_UIWO UIWO_PRIMARY_MIN_MAX_RESTORE_CONTROLS;
MACRO_UIWO UIWO_WINDOW_MENU;
MACRO_UI UI_MAXIMUM_THREAD_BORROW_STACK_SPACE_AMOUNT;
MACRO_UI UI_STACK_SPACE_REQUIREMENT_FOR_RECURSE_ITERATION;
MACRO_EOSF_DESTROY UNLOCK_ON_EOS;
MACRO_UNMARKED UNMARKED_RECORD;
$B005D40A4D99760044A8955F64F45611 UR_ADD;
$B005D40A4D99760044A8955F64F45611 UR_CER;
$B005D40A4D99760044A8955F64F45611 UR_DER;
$B005D40A4D99760044A8955F64F45611 UR_DNE;
$B005D40A4D99760044A8955F64F45611 UR_FER;
$B005D40A4D99760044A8955F64F45611 UR_FND;
$B005D40A4D99760044A8955F64F45611 UR_GER;
$B005D40A4D99760044A8955F64F45611 UR_HER;
$B005D40A4D99760044A8955F64F45611 UR_IER;
$B005D40A4D99760044A8955F64F45611 UR_INV;
$B005D40A4D99760044A8955F64F45611 UR_LER;
$B005D40A4D99760044A8955F64F45611 UR_NFD;
$B005D40A4D99760044A8955F64F45611 UR_OK;
$B005D40A4D99760044A8955F64F45611 UR_PER;
$B005D40A4D99760044A8955F64F45611 UR_SER;
$B005D40A4D99760044A8955F64F45611 UR_UER;
$B005D40A4D99760044A8955F64F45611 UR_USER_DICT_FULL;
$B005D40A4D99760044A8955F64F45611 UR_WORD_ALREADY_ADDED;
$EACFA24C9136175F70D3AFF09A4916AA USER;
void __pascal USERADDAUTOEXEC(const char *appName);
MemHandle __pascal USERALLOCOBJBLOCK(ThreadHandle threadHandle);
Boolean USERCHECKIFCONTEXTUPDATEDESIRED(void);
optr __pascal USERCREATEDIALOG(optr dialogBox);
MemHandle __pascal USERCREATEINKDESTINATIONINFO(optr dest, GStateHandle gs, word brushSize, GestureCallback *callback);
void __pascal USERDESTROYDIALOG(optr dialogBox);
word __pascal USERDISKRESTORE(void *savedData, word *diskHandlePtr);
word __pascal USERDODIALOG(optr dialogBox);
Boolean __pascal USERENCRYPTPASSWORD(const char *string, char *dest);
UIInterfaceLevel USERGETDEFAULTLAUNCHLEVEL(void);
UIInterfaceLevel USERGETDEFAULTUILEVEL(void);
GeodeHandle USERGETHWRLIBRARYHANDLE(void);
void __pascal USERGETINITFILECATEGORY(char *buf);
UIInterfaceOptions USERGETINTERFACEOPTIONS(void);
UILaunchModel USERGETLAUNCHMODEL(void);
UILaunchOptions USERGETLAUNCHOPTIONS(void);
GeodeHandle __pascal USERLOADAPPLICATION(AppLaunchFlags alf, Message attachMethod, MemHandle appLaunchBlock, char *filename, StandardPath sPath, GeodeLoadError *err);
void __pascal USERREGISTERFORTEXTCONTEXT(optr obj);
void __pascal USERREMOVEAUTOEXEC(const char *appName);
word __pascal USERSTANDARDDIALOG(char *helpContext, char *customTriggers, char *arg2, char *arg1, char *string, CustomDialogBoxFlags dialogFlags);
word __pascal USERSTANDARDDIALOGOPTR(optr helpContext, optr customTriggers, optr arg2, optr arg1, optr string, CustomDialogBoxFlags dialogFlags);
void __pascal __far USERSTOPSTANDARDSOUND(StandardSoundType soundType, word countID);
void __pascal USERUNREGISTERFORTEXTCONTEXT(optr obj);
Boolean __pascal UTILASCIITOHEX32(const char *string, sdword *value);
word __pascal UTILHEX32TOASCII(char *buffer, dword value, UtilHexToAsciiFlags flags);
$2D5D17C9E708B66D5927A805E70A264A VACC_BACKGROUND;
$2D5D17C9E708B66D5927A805E70A264A VACC_HOUR_HAND;
$2D5D17C9E708B66D5927A805E70A264A VACC_MINUTE_HAND;
$2D5D17C9E708B66D5927A805E70A264A VACC_SECOND_HAND;
MACRO_VARF VARF_NOT_IF_ALREADY_INVALID;
MACRO_VARF VARF_ONLY_REDRAW_MARGINS;
MACRO_VA_FULLY VA_BRANCH_NOT_MINIMIZABLE;
MACRO_VA_FULLY VA_DETECTABLE;
MACRO_VA_FULLY VA_DRAWABLE;
MACRO_VA_FULLY VA_FULLY_ENABLED;
MACRO_VA_FULLY VA_MANAGED;
MACRO_RT VA_NEW_DOCUMENT;
MACRO_VA VA_NO_RENAME;
MACRO_VA VA_NO_UNDO;
MACRO_VA_FULLY VA_OLD_BOUNDS_SAVED;
MACRO_VA_FULLY VA_REALIZED;
MACRO_VUM VA_VISIBLE;
MACRO_VCA VCA_AUTO_SAVE;
MACRO_VCA VCA_AUTO_SAVE_STOPPED;
MACRO_VCA VCA_DOCUMENT_EMPTY_WHEN_OPENED;
MACRO_VCA VCA_DOCUMENT_IS_NATIVE;
MACRO_VCA VCA_DOCUMENT_NAME_CHOSEN;
MACRO_VCA VCA_DOCUMENT_NOT_FULLY_LOADED;
MACRO_VCA VCA_DOCUMENT_READ_ONLY;
MACRO_VCA VCA_NO_DOCUMENT;
$6AE0A459E61341E98CA11D4260B51E44 VCC_CONTINUE;
$6AE0A459E61341E98CA11D4260B51E44 VCC_DONT_CONTINUE;
MACRO_VCF VCF_MOVING;
MACRO_VCF VCF_RESTORED;
MACRO_VCGA VCGA_ALLOW_CHILDREN_TO_WRAP;
MACRO_VCGA VCGA_CUSTOM_MANAGE_CHILDREN;
MACRO_VCGA VCGA_HAS_MINIMUM_SIZE;
MACRO_VCGA VCGA_INCLUDE_ENDS_IN_CHILD_SPACING;
MACRO_VCGA VCGA_ONE_PASS_OPTIMIZATION;
MACRO_VCGA VCGA_ONLY_DRAWS_IN_MARGINS;
MACRO_VCGA VCGA_ORIENT_CHILDREN_VERTICALLY;
MACRO_VCGA VCGA_WRAP_AFTER_CHILD_COUNT;
$1B194811FF696653DDFF3BBB92DF0D98 VCGCNLT_TARGET_NOTIFY_TEXT_PARA_ATTR_CHANGE;
MACRO_VCGDA VCGDA_DIVIDE_HEIGHT_EQUALLY;
MACRO_VCGDA VCGDA_DIVIDE_WIDTH_EQUALLY;
MACRO_VCGDA VCGDA_EXPAND_HEIGHT_TO_FIT_PARENT;
MACRO_VCGDA VCGDA_EXPAND_WIDTH_TO_FIT_PARENT;
MACRO_VCGDA VCGDA_HEIGHT_JUSTIFICATION;
MACRO_HJ VCGDA_WIDTH_JUSTIFICATION;
MACRO_VCNA VCNA_ACTIVE_MOUSE_GRAB_REQUIRES_LARGE_EVENTS;
MACRO_VCNA VCNA_LARGE_DOCUMENT_MODEL;
MACRO_VCNA VCNA_SAME_HEIGHT_AS_VIEW;
MACRO_VCNA VCNA_SAME_WIDTH_AS_VIEW;
MACRO_VCNA VCNA_VIEW_DOC_BOUNDS_SET_MANUALLY;
MACRO_VCNA VCNA_VIEW_DOES_NOT_WIN_SCROLL;
MACRO_VCNA VCNA_WINDOW_COORDINATE_MOUSE_EVENTS;
$F68AD6F442694C0F19CBFD28DFF60AAF VCS_CLOSED;
$F68AD6F442694C0F19CBFD28DFF60AAF VCS_DOCUMENT_DELETED;
$F68AD6F442694C0F19CBFD28DFF60AAF VCS_ERROR;
$F68AD6F442694C0F19CBFD28DFF60AAF VCS_NOT_CLOSED;
MACRO_VC_NUMPAD_MULT VC_ALT_GR;
MACRO_VC_BACKSPACE VC_BACKSPACE;
MACRO_VC_NULL VC_BLANK;
MACRO_VC_NUMPAD_MULT VC_BREAK;
MACRO_VC_NUMPAD_MULT VC_CAPSLOCK;
MACRO_VC_CLOCK VC_CLOCK;
MACRO_VC_NULL VC_CTRL_A;
MACRO_VC_NULL VC_CTRL_B;
MACRO_VC_NULL VC_CTRL_C;
MACRO_VC_NULL VC_CTRL_D;
MACRO_VC_NULL VC_CTRL_E;
MACRO_VC_NULL VC_CTRL_F;
MACRO_VC_NULL VC_CTRL_G;
MACRO_VC_NULL VC_CTRL_H;
MACRO_VC_NULL VC_CTRL_I;
MACRO_VC_NULL VC_CTRL_J;
MACRO_VC_NULL VC_CTRL_K;
MACRO_VC_NULL VC_CTRL_L;
MACRO_VC_NULL VC_CTRL_M;
MACRO_VC_NULL VC_CTRL_N;
MACRO_VC_NULL VC_CTRL_O;
MACRO_VC_NULL VC_CTRL_P;
MACRO_VC_NULL VC_CTRL_Q;
MACRO_VC_NULL VC_CTRL_R;
MACRO_VC_NULL VC_CTRL_S;
MACRO_VC_NULL VC_CTRL_T;
MACRO_VC_NULL VC_CTRL_U;
MACRO_VC_NULL VC_CTRL_V;
MACRO_VC_NULL VC_CTRL_W;
MACRO_VC_NULL VC_CTRL_X;
MACRO_VC_NULL VC_CTRL_Y;
MACRO_VC_NULL VC_CTRL_Z;
MACRO_VC_NUMPAD_MULT VC_DEL;
MACRO_VC_NUMPAD_MULT VC_DOWN;
MACRO_VC_NUMPAD_MULT VC_END;
MACRO_VC_BACKSPACE VC_ENTER;
MACRO_VC_NULL VC_ESCAPE;
MACRO_VC_NUMPAD_MULT VC_F1;
MACRO_VC_NUMPAD_MULT VC_F10;
MACRO_VC_NUMPAD_MULT VC_F11;
MACRO_VC_NUMPAD_MULT VC_F12;
MACRO_VC_NUMPAD_MULT VC_F13;
MACRO_VC_NUMPAD_MULT VC_F14;
MACRO_VC_NUMPAD_MULT VC_F15;
MACRO_VC_NUMPAD_MULT VC_F16;
MACRO_VC_NUMPAD_MULT VC_F2;
MACRO_VC_NUMPAD_MULT VC_F3;
MACRO_VC_NUMPAD_MULT VC_F4;
MACRO_VC_NUMPAD_MULT VC_F5;
MACRO_VC_NUMPAD_MULT VC_F6;
MACRO_VC_NUMPAD_MULT VC_F7;
MACRO_VC_NUMPAD_MULT VC_F8;
MACRO_VC_NUMPAD_MULT VC_F9;
MACRO_VC_NUMPAD_MULT VC_FIRE_BUTTON_1;
MACRO_VC_NUMPAD_MULT VC_FIRE_BUTTON_2;
MACRO_VC_NUMPAD_MULT VC_HOME;
MACRO_VC_NUMPAD_MULT VC_INS;
MACRO_VC_NUMPAD_MULT VC_INVALID_KEY;
MACRO_VC VC_ISANSI;
MACRO_VC_ISCALC VC_ISCALC;
MACRO_VC VC_ISCTRL;
MACRO_VC_ISUI VC_ISUI;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_0;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_135;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_180;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_225;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_270;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_315;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_45;
MACRO_VC_NUMPAD_MULT VC_JOYSTICK_90;
MACRO_VC_NUMPAD_MULT VC_LALT;
MACRO_VC_NUMPAD_MULT VC_LCTRL;
MACRO_VC_NUMPAD_MULT VC_LEFT;
MACRO_VC_BACKSPACE VC_LF;
MACRO_VC_NUMPAD_MULT VC_LSHIFT;
MACRO_VC_NUMPAD_MULT VC_NEXT;
MACRO_VC_NUMPAD_MULT VC_NEXT_BUTTON;
MACRO_VC_NULL VC_NULL;
MACRO_VC_NUMPAD_MULT VC_NUMLOCK;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_0;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_1;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_2;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_3;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_4;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_5;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_6;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_7;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_8;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_9;
MACRO_VC_NUMPAD VC_NUMPAD_DIV;
MACRO_VC_NUMPAD VC_NUMPAD_ENTER;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_MINUS;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_MULT;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_PERIOD;
MACRO_VC_NUMPAD_MULT VC_NUMPAD_PLUS;
MACRO_VC_NUMPAD_MULT VC_PAUSE;
MACRO_VC_NUMPAD_MULT VC_PREVIOUS;
MACRO_VC_NUMPAD_MULT VC_PREV_BUTTON;
MACRO_VC_NUMPAD_MULT VC_PRINTSCREEN;
MACRO_VC_NUMPAD_MULT VC_RALT;
MACRO_VC_NUMPAD_MULT VC_RCTRL;
MACRO_VC_NUMPAD_MULT VC_RIGHT;
MACRO_VC_NUMPAD_MULT VC_RSHIFT;
MACRO_VC_NUMPAD_MULT VC_SCROLLLOCK;
MACRO_VC_NUMPAD_MULT VC_SYSREQ;
MACRO_VC_NUMPAD_MULT VC_SYSTEMRESET;
MACRO_VC_BACKSPACE VC_TAB;
MACRO_VC_NUMPAD_MULT VC_UP;
MACRO_VDA VDA_ALLOW_NEXT_PREV_SHORTCUTS;
MACRO_VDF_EXTRA VDF_EXTRA_DATA;
MACRO_VDF_EXTRA VDF_SAVE_TO_STATE;
MACRO_VDF VDF_TYPE;
MACRO_VEDP VEDP_dataType;
MACRO_VEDP VEDP_entrySize;
$E6B61DEEE226FE36C6ECD5FE04B8FF87 VFT_FAXFILE;
$E6B61DEEE226FE36C6ECD5FE04B8FF87 VFT_GRAPHICS;
$E6B61DEEE226FE36C6ECD5FE04B8FF87 VFT_NOTE;
$E6B61DEEE226FE36C6ECD5FE04B8FF87 VFT_RESET_STATUS;
MACRO_VGA VGA_ALWAYS_RECALC_SIZE;
MACRO_VGA VGA_DONT_CENTER;
MACRO_VGA VGA_GEOMETRY_CALCULATED;
MACRO_VGA VGA_NOTIFY_GEOMETRY_VALID;
MACRO_VGA VGA_NO_SIZE_HINTS;
MACRO_VGA VGA_ONLY_RECALC_SIZE_WHEN_INVALID;
MACRO_VGA VGA_USE_VIS_CENTER;
MACRO_VGA VGA_USE_VIS_SET_POSITION;
Boolean __pascal __far VIEWERADDLIBRARY(FileLongName *libName, GeodeToken *token);
void __pascal __far VIEWERADDSENDCONTROL(optr newOutput, word newParentOffset);
ViewerInterfaceError __pascal __far VIEWERGETFILETOKEN(DocumentInfo *docInfo, GeodeToken *token);
ViewerInterfaceError __pascal __far VIEWERGETLIBRARY(DocumentInfo *docInfo, FileLongName *fname);
Boolean __pascal __far VIEWERGETLIBRARYNAMEFROMTOKEN(TokenChars *token, FileLongName *libName);
ViewerCloseStatus __pascal __far VIEWERLIBRARYCHANGEDOCUMENT(hptr libHandle, ViewerChangeDocumentStruct *vcds);
int __pascal __far VIEWERLIBRARYCLOSE(hptr libHandle, optr uiOptr);
hptr __pascal __far VIEWERLIBRARYDETACH(hptr libHandle, optr uiOptr);
hptr __pascal __far VIEWERLIBRARYOPEN(ViewerParams viewerParams, optr *uiOptr);
int __pascal __far VIEWERMARKFILEREAD(FileHandle fileH);
int __pascal __far VIEWERMARKFILEUNREAD(FileHandle fileH);
void __pascal __far VIEWERREMOVESENDCONTROL(optr output, ViewerCloseStatus vcs);
void __pascal __far VIEWERSENDDOCUMENTNOTIFICATION(MemHandle memH);
void __pascal __far VIEWERSETSENDCONTROLOPTIONS(optr optionsTree);
Boolean __pascal __far VIEWERUNLOADLIBRARY(hptr libHandle);
$D058C97724CBABC7C49D422F15E51ED3 VIE_FILE_NOT_RECOGNIZED;
$D058C97724CBABC7C49D422F15E51ED3 VIE_NO_VIEWER_LIBRARY;
$D058C97724CBABC7C49D422F15E51ED3 VIE_SHARING_VIOLATION;
MACRO_VIFGF VIFGF_FORCE;
MACRO_VIFGF VIFGF_GRAB;
MACRO_VIFGF VIFGF_KBD;
MACRO_VIFGF VIFGF_LARGE;
MACRO_VIFGF VIFGF_MOUSE;
MACRO_VIFGF VIFGF_NOT_HERE;
MACRO_VIFGF VIFGF_PTR;
MACRO_VIFGT VIFGT_ACTIVE;
MACRO_VIFGT VIFGT_PRE_PASSIVE;
MACRO_VIFGT VIGFT_POST_PASSIVE;
void VIRTUALSERIALSTRATEGY(void);
void __pascal VISOBJECTHANDLESINKREPLY();
void __pascal VISTEXTFORMATNUMBER(char *buf, dword num, VisTextNumberType numtype);
MACRO_VIS2 VIS_RULER_HEIGHT;
MACRO_VTTF VIS_TEXT_CURRENT_FILE_TOKEN;
MACRO_VTDCI_POSITION_OFFSET VIS_TEXT_DEFAULT_DROP_CAP;
MACRO_VIS_TEXT_DEFAULT_GRAPHIC VIS_TEXT_DEFAULT_GRAPHIC_HEIGHT;
MACRO_VIS_TEXT_DEFAULT_GRAPHIC VIS_TEXT_DEFAULT_GRAPHIC_WIDTH;
MACRO_VTHI_HYPHEN_SHORTEST_SUFFIX VIS_TEXT_DEFAULT_HYPHENATION;
MACRO_VIS_TEXT_DEFAULT VIS_TEXT_DEFAULT_POINT_SIZE;
MACRO_VIS_TEXT_MAX_STARTING VIS_TEXT_DEFAULT_STARTING_NUMBER;
MACRO_VIS_TEXT_STANDARD VIS_TEXT_GAINED_TARGET_NOTIFICATION_FLAGS;
MACRO_VIS_TEXT2 VIS_TEXT_GRAPHIC_OPAQUE_SIZE;
MACRO_VTDCA_FONT_OFFSET VIS_TEXT_INITIAL_CHAR_ATTR;
MACRO_VTDPA_RIGHT_MARGIN VIS_TEXT_INITIAL_PARA_ATTR;
MACRO_VIS_TEXT_MIN_NON_ZERO VIS_TEXT_MAX_LEADING;
MACRO_VIS_TEXT_MAX_LINE VIS_TEXT_MAX_LINE_SPACING;
MACRO_VIS_TEXT_MAX_LINE_SPACING_FRAC VIS_TEXT_MAX_LINE_SPACING_FRAC;
MACRO_VIS_TEXT_MAX_LINE_SPACING VIS_TEXT_MAX_LINE_SPACING_INT;
MACRO_VIS_TEXT_MAX VIS_TEXT_MAX_PARA_WIDTH;
MACRO_VIS_TEXT_MAX_STARTING VIS_TEXT_MAX_STARTING_NUMBER;
MACRO_VIS_TEXT_MAX_TABS VIS_TEXT_MAX_TABS;
MACRO_VIS_TEXT_MIN_NON_ZERO VIS_TEXT_MIN_NON_ZERO_LEADING;
MACRO_VIS_TEXT_MIN VIS_TEXT_MIN_NON_ZERO_LINE_SPACING;
MACRO_VIS_TEXT_MIN_NON VIS_TEXT_MIN_NON_ZERO_LINE_SPACING_FRAC;
MACRO_VIS_TEXT_MIN_NON VIS_TEXT_MIN_NON_ZERO_LINE_SPACING_INT;
MACRO_VTDCI_POSITION_OFFSET VIS_TEXT_MIN_STARTING_NUMBER;
MACRO_VIS_TEXT_MAX_LINE_SPACING_FRAC VIS_TEXT_MIN_TEXT_FIELD_WIDTH;
MACRO_VIS_TEXT_RANGE VIS_TEXT_RANGE_PARAGRAPH_SELECTION;
MACRO_VIS_TEXT_RANGE_PARAGRAPH VIS_TEXT_RANGE_PARAGRAPH_SELECTION_HIGH;
MACRO_VIS_TEXT_RANGE_PARAGRAPH_SELECTION VIS_TEXT_RANGE_PARAGRAPH_SELECTION_LOW;
MACRO_VIS_TEXT VIS_TEXT_RANGE_SELECTION;
MACRO_VIS VIS_TEXT_RANGE_SELECTION_HIGH;
MACRO_VIS_TEXT VIS_TEXT_RANGE_SELECTION_LOW;
MACRO_VIS_TEXT_STANDARD VIS_TEXT_STANDARD_NOTIFICATION_FLAGS;
MACRO_VLM_DEFAULT VLM_DEFAULT_FEATURES;
MACRO_VLM VLM_UI;
$343F1017F7A21EB67653CBDBF253318A VLR_CHANGE_DOCUMENT;
$343F1017F7A21EB67653CBDBF253318A VLR_CLOSE;
$343F1017F7A21EB67653CBDBF253318A VLR_DETACH;
$343F1017F7A21EB67653CBDBF253318A VLR_OPEN;
MACRO_VLTA VLTA_EXACT_HEIGHT;
$F960CD7F69E887083606AAB5153FD70E VLTDM_CONDENSED;
$F960CD7F69E887083606AAB5153FD70E VLTDM_DRAFT_WITHOUT_STYLES;
$F960CD7F69E887083606AAB5153FD70E VLTDM_DRAFT_WITH_STYLES;
$F960CD7F69E887083606AAB5153FD70E VLTDM_GALLEY;
$F960CD7F69E887083606AAB5153FD70E VLTDM_PAGE;
MACRO_VLTF VLTF_HEIGHT_NOTIFY_PENDING;
MACRO_VLTRF VLTRF_EMPTY;
MACRO_VLTRF VLTRF_ENDED_BY_COLUMN_BREAK;
MACRO_VMAF VMAF_ALLOW_SHARED_MEMORY;
MACRO_VMAF VMAF_DISALLOW_SHARED_MULTIPLE;
MACRO_VMAF VMAF_FORCE_DENY_WRITE;
MACRO_VMAF VMAF_FORCE_READ_ONLY;
MACRO_VMAF VMAF_FORCE_READ_WRITE;
MACRO_VMAF VMAF_FORCE_SHARED_MULTIPLE;
MACRO_VMAF VMAF_USE_BLOCK_LEVEL_SYNCHRONIZATION;
VMBlockHandle __pascal VMALLOC(VMFileHandle file, word size, word userId);
VMBlockHandle __pascal VMALLOCLMEM(VMFileHandle file, LMemType ltype, word headerSize);
VMBlockHandle __pascal VMATTACH(VMFileHandle file, VMBlockHandle block, MemHandle mh);
MACRO_VMA VMA_BACKUP;
MACRO_VMA VMA_COMPACT_OBJ_BLOCK;
MACRO_VMA VMA_NOTIFY_DIRTY;
MACRO_VMA VMA_NO_DISCARD_IF_IN_USE;
MACRO_VMA_OBJECT_ATTRS VMA_OBJECT_ATTRS;
MACRO_VMA VMA_OBJECT_RELOC;
MACRO_VMA VMA_SINGLE_THREAD_ACCESS;
MACRO_VMA VMA_SYNC_UPDATE;
Boolean __pascal VMCHECKFORMODIFICATIONS(VMFileHandle file);
word __pascal VMCLOSE(VMFileHandle file, Boolean noErrorFlag);
Boolean __pascal VMCOMPAREVMCHAINS(VMFileHandle sourceFile, VMChain sourceChain, VMFileHandle destFile, VMChain destChain);
VMBlockHandle __pascal VMCOPYVMBLOCK(VMFileHandle sourceFile, VMBlockHandle sourceBlock, VMFileHandle destFile);
VMChain __pascal VMCOPYVMCHAIN(VMFileHandle sourceFile, VMChain sourceChain, VMFileHandle destFile);
MACRO_VMCW VMCW_BERKELEY_10;
MACRO_VMCW_BERKELEY VMCW_BERKELEY_10_OFFSET;
MACRO_VMCW VMCW_BERKELEY_9;
MACRO_VMCW_BERKELEY VMCW_BERKELEY_9_OFFSET;
MACRO_VMCW VMCW_HINTED;
MemHandle __pascal VMDETACH(VMFileHandle file, VMBlockHandle block, GeodeHandle owner);
void __pascal VMDIRTY(MemHandle mh);
word __pascal VMDISCARDDIRTYBLOCKS(VMFileHandle file);
MACRO_VMDT VMDT_GSTRING;
MACRO_VMDT VMDT_NULL;
MACRO_VMDT VMDT_TEXT;
MACRO_VMDT VMDT_TOKEN;
MACRO_VMDT VMDT_VIS_MONIKER;
VMBlockHandle __pascal VMFIND(VMFileHandle file, VMBlockHandle startBlock, word userId);
void __pascal VMFREE(VMFileHandle file, VMBlockHandle block);
void __pascal VMFREEVMCHAIN(VMFileHandle file, VMChain chain);
word __pascal VMGETATTRIBUTES(VMFileHandle file);
word __pascal VMGETDIRTYSTATE(VMFileHandle file);
void __pascal VMGETHEADERINFO(VMFileHandle file, VMHeaderInfoStruct *vmInfo);
VMBlockHandle __pascal VMGETMAPBLOCK(VMFileHandle file);
VMStartExclusiveReturnValue __pascal VMGRABEXCLUSIVE(VMFileHandle file, word timeout, VMOperation operation, VMOperation *currentOperation);
Boolean __pascal VMINFO(VMFileHandle file, VMBlockHandle block, VMInfoStruct *info);
Boolean __pascal VMINFOVMCHAIN(VMFileHandle sourceFile, VMChain sourceChain, dword *chainSize, word *vmBlockCount, word *dbItemCount);
MACRO_VMLET VMLET_GSTRING;
MACRO_VMLET VMLET_GS_ASPECT_RATIO;
MACRO_VMLET_STYLE VMLET_GS_ASPECT_RATIO_OFFSET;
MACRO_VMLET VMLET_GS_COLOR;
MACRO_VMLET_STYLE VMLET_GS_COLOR_OFFSET;
MACRO_VMS VMLET_GS_SIZE;
MACRO_VMLET_GS VMLET_GS_SIZE_OFFSET;
MACRO_VMLET VMLET_MONIKER_LIST;
MACRO_VMLET VMLET_STYLE;
MACRO_VMLET_STYLE VMLET_STYLE_OFFSET;
void *__pascal VMLOCK(VMFileHandle file, VMBlockHandle block, MemHandle *mh);
VMBlockHandle __pascal VMMEMBLOCKTOVMBLOCK(MemHandle mh, VMFileHandle *file);
void __pascal VMMODIFYUSERID(VMFileHandle file, VMBlockHandle block, word userId);
VMFileHandle __pascal VMOPEN(char *name, VMAccessFlags flags, VMOpenType mode, word compression);
MACRO_VMO VMO_CREATE;
MACRO_VMO VMO_CREATE_ONLY;
MACRO_VMO VMO_CREATE_TRUNCATE;
MACRO_VM VMO_FIRST_APP_CODE;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_INTERNAL;
MACRO_VMO VMO_NATIVE_WITH_EXT_ATTRS;
MACRO_VMO VMO_OPEN;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_READ;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_REVERT;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_SAVE;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_SAVE_AS;
MACRO_VMO VMO_TEMP_FILE;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_UPDATE;
$38043EA795AB2B56EF44A5A5D36268F3 VMO_WRITE;
void __pascal VMPRESERVEBLOCKSHANDLE(VMFileHandle file, VMBlockHandle block);
void __pascal VMRELEASEEXCLUSIVE(VMFileHandle file);
void __pascal VMREVERT(VMFileHandle file);
$7278AABDD0E168673A3FECEE013DB48D VMRT_RELOCATE_AFTER_READ;
$7278AABDD0E168673A3FECEE013DB48D VMRT_RELOCATE_AFTER_WRITE;
$7278AABDD0E168673A3FECEE013DB48D VMRT_RELOCATE_FROM_RESOURCE;
$7278AABDD0E168673A3FECEE013DB48D VMRT_UNRELOCATE_BEFORE_WRITE;
$7278AABDD0E168673A3FECEE013DB48D VMRT_UNRELOCATE_FROM_RESOURCE;
Boolean __pascal VMSAVE(VMFileHandle file);
VMFileHandle __pascal VMSAVEAS(VMFileHandle file, const char *name, VMAccessFlags flags, VMOpenType mode, word compression);
$11E19FAFE5FE52C9F8E49313102752D2 VMSERV_CHANGES;
$11E19FAFE5FE52C9F8E49313102752D2 VMSERV_NO_CHANGES;
$11E19FAFE5FE52C9F8E49313102752D2 VMSERV_TIMEOUT;
VMAttributes __pascal VMSETATTRIBUTES(VMFileHandle file, VMAttributes attrToSet, VMAttributes AttrToClear);
void __pascal VMSETDIRTYLIMIT(VMFileHandle file, word dirtyLimit);
void __pascal VMSETEXECTHREAD(VMFileHandle file, ThreadHandle thread);
void __pascal VMSETMAPBLOCK(VMFileHandle file, VMBlockHandle block);
void __pascal VMSETRELOC(VMFileHandle file, void (__pascal *reloc)(VMFileHandle file, VMBlockHandle block, MemHandle mh, void *data, VMRelocType type));
MACRO_VMSF VMSF_COPY_CHUNK;
MACRO_VMSF VMSF_GSTRING;
MACRO_VMSF VMSF_REPLACE_LIST;
MACRO_VMSF VMSF_STYLE;
MACRO_VMSF VMSF_STYLE_OFFSET;
MACRO_VMST VMST_FPTR;
MACRO_VMST VMST_HPTR;
MACRO_VMST VMST_OPTR;
MACRO_VMS VMS_ABBREV_TEXT;
MACRO_VMS VMS_GRAPHIC_TEXT;
MACRO_VMS VMS_ICON;
MACRO_VMS VMS_TEXT;
MACRO_VMS VMS_TOOL;
MACRO_VMT VMT_GSTRING;
MACRO_VMT VMT_GS_ASPECT_RATIO;
MACRO_VMT_GS VMT_GS_ASPECT_RATIO_OFFSET;
MACRO_VMT VMT_GS_COLOR;
MACRO_VMT_GS VMT_GS_COLOR_OFFSET;
MACRO_VMT VMT_MONIKER_LIST;
void __pascal VMUNLOCK(MemHandle mh);
word __pascal VMUPDATE(VMFileHandle file);
MemHandle __pascal VMVMBLOCKTOMEMBLOCK(VMFileHandle file, VMBlockHandle block);
MACRO_VM_FILE VM_CANNOT_CREATE;
MACRO_VM_FILE VM_CANNOT_OPEN_SHARED_MULTIPLE;
MACRO_VM_CHAIN_TREE VM_CHAIN_TREE;
MACRO_VM VM_CREATE_OK;
MACRO_VM_FILE VM_DISCARD_CANNOT_DISCARD_BLOCK;
MACRO_VM_FILE VM_FILE_EXISTS;
MACRO_VM_FILE VM_FILE_FORMAT_MISMATCH;
MACRO_VM_FILE VM_FILE_NOT_FOUND;
MACRO_VM_FILE VM_OPEN_INVALID_VM_FILE;
MACRO_VM VM_OPEN_OK_BLOCK_LEVEL;
MACRO_VM VM_OPEN_OK_READ_ONLY;
MACRO_VM VM_OPEN_OK_READ_WRITE_MULTIPLE;
MACRO_VM VM_OPEN_OK_READ_WRITE_NOT_SHARED;
MACRO_VM VM_OPEN_OK_READ_WRITE_SINGLE;
MACRO_VM VM_OPEN_OK_TEMPLATE;
MACRO_VM_FILE VM_SHARING_DENIED;
MACRO_VM_FILE VM_TRUNCATE_FAILED;
MACRO_VM_FILE VM_UPDATE_BLOCK_WAS_LOCKED;
MACRO_VM_FILE VM_UPDATE_INSUFFICIENT_DISK_SPACE;
MACRO_VM_FILE VM_UPDATE_NOTHING_DIRTY;
MACRO_VM_FILE VM_WRITE_PROTECTED;
MACRO_VOF VOF_EC_UPDATING;
MACRO_VOF VOF_GEOMETRY_INVALID;
MACRO_VOF VOF_GEO_UPDATE_PATH;
MACRO_VOF VOF_IMAGE_INVALID;
MACRO_VOF VOF_IMAGE_UPDATE_PATH;
MACRO_VOF VOF_UPDATE_PENDING;
MACRO_VOF VOF_WINDOW_INVALID;
MACRO_VOF VOF_WINDOW_UPDATE_PATH;
MACRO_VOLUME_BUFFER VOLUME_BUFFER_SIZE;
MACRO_VOLUME VOLUME_NAME_LENGTH;
MACRO_VOLUME_NAME VOLUME_NAME_LENGTH_ZT;
MACRO_VPCF VPCF_ALWAYS_SCALE;
MACRO_VPCF VPCF_ALWAYS_TILE;
MACRO_VRA VRA_HORIZONTAL;
MACRO_VRA VRA_IGNORE_ORIGIN;
MACRO_VRA VRA_MASTER;
MACRO_VRA VRA_SHOW_GRID;
MACRO_VRA VRA_SHOW_GUIDES;
MACRO_VRA VRA_SHOW_MOUSE;
MACRO_VRCS_CONSTRAIN VRCS_CONSTRAIN_FLAGS;
MACRO_VRCS_SNAP_FLAGS VRCS_CONSTRAIN_TO_DIAGONALS;
MACRO_VRCS VRCS_CONSTRAIN_TO_HORIZONTAL_AXIS;
MACRO_VRCS_SNAP_FLAGS VRCS_CONSTRAIN_TO_HV_AXES;
MACRO_VRCS VRCS_CONSTRAIN_TO_NEGATIVE_UNITY_SLOPE_AXIS;
MACRO_VRCS VRCS_CONSTRAIN_TO_UNITY_SLOPE_AXIS;
MACRO_VRCS VRCS_CONSTRAIN_TO_VECTOR;
MACRO_VRCS VRCS_CONSTRAIN_TO_VECTOR_REFLECTION;
MACRO_VRCS VRCS_CONSTRAIN_TO_VERTICAL_AXIS;
MACRO_VRCS VRCS_INTERNAL;
MACRO_VRCS_CONSTRAIN VRCS_MOUSE_TWEAKING_FLAGS;
MACRO_VRCS VRCS_OVERRIDE;
MACRO_VRCS VRCS_SET_REFERENCE;
MACRO_VRCS_SNAP_FLAGS VRCS_SNAP_FLAGS;
MACRO_VRCS_SNAP VRCS_SNAP_TO_GRID_ABSOLUTE;
MACRO_VRCS_SNAP VRCS_SNAP_TO_GRID_RELATIVE;
MACRO_VRCS VRCS_SNAP_TO_GRID_X_ABSOLUTE;
MACRO_VRCS VRCS_SNAP_TO_GRID_X_RELATIVE;
MACRO_VRCS VRCS_SNAP_TO_GRID_Y_ABSOLUTE;
MACRO_VRCS VRCS_SNAP_TO_GRID_Y_RELATIVE;
MACRO_VRCS_SNAP VRCS_SNAP_TO_GUIDES;
MACRO_VRCS VRCS_SNAP_TO_GUIDES_X;
MACRO_VRCS VRCS_SNAP_TO_GUIDES_Y;
MACRO_VRCS_SNAP_FLAGS VRCS_VECTOR_CONSTRAIN;
MACRO_VRECUI VRECUI_MODE_IDLE;
MACRO_VRECUI VRECUI_MODE_PAUSE;
MACRO_VRECUI VRECUI_MODE_PLAY;
MACRO_VRECUI VRECUI_MODE_RECORD;
MACRO_VREC_FILE VREC_FILE_MAJOR_PROTOCOL;
MACRO_VREC_FILE VREC_FILE_MINOR_PROTOCOL;
MACRO_VREC VREC_NEW_FILE;
MACRO_VREC VREC_NEW_RECORDED_FILE;
MACRO_VREC VREC_OLD_FILE;
MACRO_VRT VRT_CENTIMETERS;
MACRO_VRT VRT_CUSTOM;
MACRO_VRT VRT_DEFAULT;
MACRO_VRT VRT_INCHES;
MACRO_VRT VRT_NONE;
MACRO_VRT VRT_PICAS;
MACRO_VRT VRT_POINTS;
MACRO_VSFC VSFC_BOTH;
MACRO_VSFC VSFC_HARDWARE;
MACRO_VSFC VSFC_SOFTWARE;
Boolean __pascal VSLIBRARYENTRY(LibraryCallType ty, GeodeHandle client);
MACRO_VSNE VSNE_DATA;
MACRO_VSNE VSNE_ERROR;
MACRO_VSNE VSNE_FCLASS;
MACRO_VSNE VSNE_MODEM;
MACRO_VSNM VSNM_MESSAGE;
MACRO_VSNM VSNM_NONE;
MACRO_VSNM VSNM_ROUTINE;
MACRO_VSNT VSNT_READER;
MACRO_VSNT VSNT_WRITER;
sword __pascal VSPRINTF(TCHAR *buf, const TCHAR *format, va_list args);
MACRO_VS VS_ALREADY_OPEN;
MACRO_VS VS_BUFFER_TOO_BIG;
MACRO_VS VS_CANNOT_ALLOC;
MACRO_VS VS_CLOSED;
MACRO_VS VS_DATA_RESOURCE_RESERVED;
MACRO_DR_VIRTUAL_SERIAL VS_INIT;
MACRO_VS2 VS_LARGE;
MACRO_DR_VIRTUAL_SERIAL VS_NOT_SUPPORTED;
MACRO_VS VS_OK;
MACRO_VS VS_SHORT_READ_WRITE;
MACRO_VS2 VS_SMALL;
MACRO_VS2 VS_TYPICAL;
MACRO_VTCAF VTCAF_MULTIPLE_BG_COLORS;
MACRO_VTCAF VTCAF_MULTIPLE_BG_GRAY_SCREENS;
MACRO_VTCAF VTCAF_MULTIPLE_BG_PATTERNS;
MACRO_VTCAF VTCAF_MULTIPLE_COLORS;
MACRO_VTCAF VTCAF_MULTIPLE_FONT_IDS;
MACRO_VTCAF VTCAF_MULTIPLE_FONT_WEIGHTS;
MACRO_VTCAF VTCAF_MULTIPLE_FONT_WIDTHS;
MACRO_VTCAF VTCAF_MULTIPLE_GRAY_SCREENS;
MACRO_VTCAF VTCAF_MULTIPLE_PATTERNS;
MACRO_VTCAF VTCAF_MULTIPLE_POINT_SIZES;
MACRO_VTCAF VTCAF_MULTIPLE_STYLES;
MACRO_VTCAF VTCAF_MULTIPLE_TRACK_KERNINGS;
MACRO_VTCF VTCF_ENSURE_CONTEXT_NOT_ALREADY_SET;
MACRO_VTCF VTCF_REDIRECT_HYPERLINKS;
MACRO_VTCF VTCF_SHOWING_HYPERLINKS;
MACRO_VTCF VTCF_TOKEN;
MACRO_VTCT VTCT_ANSWER;
$6AB7212DDAB6BEAA997F6210640B6D76 VTCT_CAPLOCK_CURSOR;
MACRO_VTCT VTCT_CATEGORY;
MACRO_VTCT VTCT_DEFINITION;
$6AB7212DDAB6BEAA997F6210640B6D76 VTCT_EQNLOCK_CURSOR;
MACRO_VTCT VTCT_FILE;
$6AB7212DDAB6BEAA997F6210640B6D76 VTCT_NORMAL_CURSOR;
$6AB7212DDAB6BEAA997F6210640B6D76 VTCT_NUMLOCK_CURSOR;
MACRO_VTCT VTCT_QUESTION;
MACRO_VTCT VTCT_TEXT;
MACRO_VTDCA VTDCA_BOLD;
MACRO_VTDCA_COLOR VTDCA_COLOR;
MACRO_VTDCA_COLOR_OFFSET VTDCA_COLOR_OFFSET;
MACRO_VTDCA_FONT VTDCA_FONT;
MACRO_VTDCA_FONT_OFFSET VTDCA_FONT_OFFSET;
MACRO_VTDCA_ITALIC VTDCA_ITALIC;
MACRO_VTDCA_SIZE VTDCA_SIZE;
MACRO_VTDCA_SIZE_OFFSET VTDCA_SIZE_OFFSET;
MACRO_VTDF VTDCA_UNDERLINE;
MACRO_VTKI_BOTTOM_LINES VTDCI_CHAR_COUNT;
MACRO_VTDCI_CHAR VTDCI_CHAR_COUNT_OFFSET;
MACRO_VTDCI VTDCI_LINE_COUNT;
MACRO_VTDCI_LINE VTDCI_LINE_COUNT_OFFSET;
MACRO_VTDCI_POSITION VTDCI_POSITION;
MACRO_VTDCI_POSITION_OFFSET VTDCI_POSITION_OFFSET;
MACRO_VTDDT VTDDT_CENTIMETER;
MACRO_VTDDT VTDDT_HALF_INCH;
MACRO_VTDDT VTDDT_INCH;
MACRO_VTDDT VTDDT_NONE;
MACRO_VTDF VTDF_BERKELEY;
MACRO_VTDF VTDF_BISON;
MACRO_VTDF VTDF_CENTURY_SCHOOLBOOK;
MACRO_VTDF VTDF_CHICAGO;
MACRO_VTDF VTDF_JSYS;
MACRO_VTDF VTDF_LED;
MACRO_VTDS_FOAM VTDF_RESPONDER;
MACRO_VTDF VTDF_ROMA;
MACRO_VTDF VTDF_UNIVERSITY;
MACRO_VTDF VTDF_URW_MONO;
MACRO_VTDF VTDF_URW_ROMAN;
MACRO_VTDF VTDF_URW_SANS;
MACRO_VTDF VTDF_URW_SYMBOLS;
MACRO_VTDF VTDF_WINDOWS;
MACRO_VTDPA VTDPA_DEFAULT_TABS;
MACRO_VTDPA_DEFAULT VTDPA_DEFAULT_TABS_OFFSET;
MACRO_VTDDT VTDPA_JUSTIFICATION;
MACRO_VTDPA_JUSTIFICATION VTDPA_JUSTIFICATION_OFFSET;
MACRO_VTDPA_LEFT VTDPA_LEFT_MARGIN;
MACRO_VTDPA_LEFT_MARGIN VTDPA_LEFT_MARGIN_OFFSET;
MACRO_VTDPA_PARA VTDPA_PARA_MARGIN;
MACRO_VTDPA_PARA_MARGIN VTDPA_PARA_MARGIN_OFFSET;
MACRO_VTDPA_RIGHT VTDPA_RIGHT_MARGIN;
MACRO_VTDPA_RIGHT_MARGIN VTDPA_RIGHT_MARGIN_OFFSET;
MACRO_VTDS VTDS_10;
MACRO_VTDS VTDS_12;
MACRO_VTDS VTDS_14;
MACRO_VTDS VTDS_18;
MACRO_VTDS VTDS_24;
MACRO_VTDS VTDS_36;
MACRO_VTDS VTDS_8;
MACRO_VTDS VTDS_9;
MACRO_VTDS_FOAM VTDS_FOAM_NORMAL;
MACRO_VTDS_FOAM VTDS_FOAM_SMALL;
MACRO_VTEFT VTEFT_BEFORE_AFTER;
MACRO_VTEFT VTEFT_CHARACTER_LEVELER_LEVEL;
MACRO_VTEFT VTEFT_REPLACE_PARAMS;
MACRO_VTES_ALL VTES_ALL_CAP;
MACRO_VTES_BACKGROUND VTES_BACKGROUND_COLOR;
MACRO_VTES VTES_BOXED;
MACRO_VTES_BUTTON VTES_BUTTON;
MACRO_VTES_CHANGE VTES_CHANGE_BAR;
MACRO_VTES_HIDDEN VTES_HIDDEN;
MACRO_VTES_INDEX VTES_INDEX;
MACRO_VTES_SMALL VTES_SMALL_CAP;
void __pascal VTFCLEARSMARTQUOTES();
MACRO_VTFC VTFC_ALLOW_COLUMN_BREAKS;
MACRO_VTFC VTFC_ALPHA;
MACRO_VTFC VTFC_ALPHA_NUMERIC;
MACRO_VTFC VTFC_DASHED_ALPHA_NUMERIC;
MACRO_VTFC VTFC_DATE;
MACRO_VTFC VTFC_DOS_CHARACTER_SET;
MACRO_VTFC VTFC_DOS_FILENAMES;
MACRO_VTFC VTFC_DOS_PATH;
MACRO_VTFC VTFC_DOS_VOLUME_NAMES;
MACRO_VTFC VTFC_FILENAMES;
MACRO_VTFC VTFC_FLOAT_DECIMAL;
MACRO_VTFC VTFC_NORMAL_ASCII;
MACRO_VTFC VTFC_NO_FILTER;
MACRO_VTFC VTFC_NUMERIC;
MACRO_VTFC VTFC_SIGNED_DECIMAL;
MACRO_VTFC VTFC_SIGNED_NUMERIC;
MACRO_VTFC VTFC_TIME;
MACRO_VTF_AUTO VTF_ALLOW_SMART_QUOTES;
MACRO_VTF_AUTO VTF_ALLOW_UNDO;
MACRO_VTF_AUTO VTF_AUTO_HYPHENATE;
MACRO_VTF VTF_CHILDREN_OUTSIDE_PORTAL_WIN;
MACRO_VTF_AUTO VTF_DONT_SHOW_GRAPHICS;
MACRO_VTF_AUTO VTF_DONT_SHOW_SOFT_PAGE_BREAKS;
MACRO_VTF_NO VTF_FILTER_CLASS;
MACRO_VTF VTF_IS_COMPOSITE;
MACRO_VTF VTF_IS_CONTENT;
MACRO_VTF VTF_IS_GEN;
MACRO_VTF VTF_IS_INPUT_NODE;
MACRO_VTF VTF_IS_PORTAL;
MACRO_VTF VTF_IS_WINDOW;
MACRO_VTF VTF_IS_WIN_GROUP;
MACRO_VTFC VTF_NO_SPACES;
MACRO_VTF_NO VTF_NO_TABS;
MACRO_VTUGF VTF_NO_WORD_WRAPPING;
MACRO_VTF_AUTO VTF_OUTLINE_MODE;
MACRO_VTF_AUTO VTF_SHOW_HIDDEN_TEXT;
MACRO_VTF_AUTO VTF_TRANSPARENT;
MACRO_VTF_NO VTF_UPCASE_CHARS;
MACRO_VTF_AUTO VTF_USE_50_PCT_TEXT_MASK;
MACRO_VTGAF VTGAF_MERGE_WITH_PASSED;
MACRO_VTGT VTGF_DRAW_FROM_BASELINE;
MACRO_VTGF VTGF_HANDLES_POINTER;
MACRO_VTGF VTGF_HOT_SPOT;
MACRO_VTGTRF VTGTRF_ALLOCATE;
MACRO_VTGTRF VTGTRF_ALLOCATE_ALWAYS;
MACRO_VTGTRF VTGTRF_RESIZE_DEST;
MACRO_VTGT VTGT_GSTRING;
MACRO_VTGT VTGT_VARIABLE;
MACRO_VTPAA_PARA_NUMBER VTHI_HYPHEN_MAX_LINES;
MACRO_VTHI_HYPHEN_MAX VTHI_HYPHEN_MAX_LINES_OFFSET;
MACRO_VTHI_HYPHEN VTHI_HYPHEN_SHORTEST_PREFIX;
MACRO_VTHI_HYPHEN_SHORTEST_PREFIX VTHI_HYPHEN_SHORTEST_PREFIX_OFFSET;
MACRO_VTHI_HYPHEN_SHORTEST VTHI_HYPHEN_SHORTEST_SUFFIX;
MACRO_VTHI_HYPHEN_SHORTEST_SUFFIX VTHI_HYPHEN_SHORTEST_SUFFIX_OFFSET;
MACRO_VTHI VTHI_HYPHEN_SHORTEST_WORD;
MACRO_VTHI_HYPHEN_SHORTEST_WORD VTHI_HYPHEN_SHORTEST_WORD_OFFSET;
MACRO_VTHWRF VTHWRF_NO_CONTEXT;
MACRO_VTHWRF VTHWRF_USE_PASSED_CONTEXT;
MACRO_VTIF VTIF_ACTIVE_SEARCH_SPELL;
MACRO_VTIF VTIF_ADJUST_TYPE;
MACRO_ASST VTIF_HAS_LINES;
MACRO_VTIF VTIF_HILITED;
MACRO_VTIF VTIF_SUSPENDED;
MACRO_VTIF VTIF_UPDATE_PENDING;
MACRO_VTISF VTISF_CURSOR_ENABLED;
MACRO_VTISF VTISF_CURSOR_ON;
MACRO_VTISF VTISF_DOING_DRAG_SELECTION;
MACRO_VTISF VTISF_DOING_SELECTION;
MACRO_VTISF VTISF_IS_FOCUS;
MACRO_ST_DOING VTISF_IS_TARGET;
MACRO_VTISF VTISF_SELECTION_TYPE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_BACKWARD_CHAR;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_BACKWARD_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_BACKWARD_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_BACKWARD_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_BACKWARD_CHAR;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_BACKWARD_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_BACKWARD_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_BACKWARD_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_CHAR;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_EVERYTHING;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_TO_END;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_TO_START;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DELETE_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_DESELECT;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_END_OF_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_END_OF_TEXT;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_FORWARD_CHAR;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_FORWARD_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_FORWARD_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_FORWARD_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_INSERT_DATE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_INSERT_NAME;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_INSERT_TIME;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_PAGE_DOWN;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_PAGE_UP;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_BACKWARD_CHAR;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_BACKWARD_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_BACKWARD_PAGE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_BACKWARD_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_BACKWARD_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_END_OF_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_FORWARD_CHAR;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_FORWARD_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_FORWARD_PAGE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_FORWARD_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_FORWARD_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_START_OF_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_TO_END;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_ADJUST_TO_START;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_OBJECT;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_PARAGRAPH;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_SELECT_WORD;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_START_OF_LINE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_START_OF_TEXT;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_TOGGLE_OVERSTRIKE_MODE;
$10D7E492D0FBE89D90074FE4DC571B45 VTKF_TOGGLE_SMART_QUOTES;
MACRO_VTKI_BOTTOM VTKI_BOTTOM_LINES;
MACRO_VTKI_BOTTOM_LINES VTKI_BOTTOM_LINES_OFFSET;
MACRO_VTKI VTKI_TOP_LINES;
MACRO_VTKI_TOP VTKI_TOP_LINES_OFFSET;
MACRO_VTNCF VTNCF_COLOR_MONIKERS_FOR_UNSET_CONTEXTS;
MACRO_VTNCF VTNCF_DISABLE_MONIKERS_FOR_SET_CONTEXTS;
MACRO_VTNCT VTNCT_ADD;
MACRO_VTNCT VTNCT_NULL;
MACRO_VTNCT VTNCT_REMOVE;
MACRO_VTNCT VTNCT_RENAME;
MACRO_VTNF VTNF_CHAR_ATTR;
MACRO_VTNF VTNF_COUNT;
MACRO_VTNF VTNF_CURSOR_POSITION;
MACRO_VTNF VTNF_HYPERLINKABILITY;
MACRO_VTNF VTNF_NAME;
MACRO_VTNF VTNF_PARA_ATTR;
MACRO_VTNF VTNF_SEARCH_ENABLE;
MACRO_VTNF VTNF_SELECTION;
MACRO_VTNCT VTNF_SELECT_STATE;
MACRO_VTNF VTNF_SPELL_ENABLE;
MACRO_VTNF VTNF_STYLE;
MACRO_VTNF VTNF_STYLE_SHEET;
MACRO_VTNF VTNF_TYPE;
MACRO_VTNSF VTNSF_NULL_STATUS;
MACRO_VTNSF VTNSF_RELAYED_TO_LIKE_TEXT_OBJECTS;
MACRO_VTNSF VTNSF_SEND_AFTER_GENERATION;
MACRO_VTNSF VTNSF_SEND_ONLY;
MACRO_VTNSF VTNSF_STRUCTURE_INITIALIZED;
MACRO_VTNSF VTNSF_UPDATE_APP_TARGET_GCN_LISTS;
MACRO_VTNT2 VTNT_CONTEXT;
MACRO_VTNT2 VTNT_FILE;
MACRO_VTNT VTNT_LETTER_LOWER_A;
MACRO_VTNT VTNT_LETTER_UPPER_A;
MACRO_VTNT VTNT_NUMBER;
MACRO_VTNT VTNT_ROMAN_NUMERAL_LOWER;
MACRO_VTNT VTNT_ROMAN_NUMERAL_UPPER;
MACRO_VTPAA_ALLOW VTPAA_ALLOW_AUTO_HYPHENATION;
MACRO_VTPAA_COLUMN VTPAA_COLUMN_BREAK_BEFORE;
MACRO_VTPAA_DISABLE VTPAA_DISABLE_WORD_WRAP;
MACRO_VTPAA_DROP VTPAA_DROP_CAP;
MACRO_VTNT VTPAA_JUSTIFICATION;
MACRO_VTPAA_JUSTIFICATION VTPAA_JUSTIFICATION_OFFSET;
MACRO_VTPAA_KEEP_LINES VTPAA_KEEP_LINES;
MACRO_VTPAA_KEEP VTPAA_KEEP_PARA_TOGETHER;
MACRO_VTPAA VTPAA_KEEP_PARA_WITH_NEXT;
MACRO_VTPAA_PARA VTPAA_PARA_NUMBER_TYPE;
MACRO_VTPAA_PARA_NUMBER VTPAA_PARA_NUMBER_TYPE_OFFSET;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_ANCHORS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_BOTTOM;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_COLORS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_DOUBLES;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_DRAW_INNERS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_GRAY_SCREENS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_LEFT;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_PATTERNS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_RIGHT;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_SHADOWS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_SPACINGS;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_TOP;
MACRO_VTPABF VTPABF_MULTIPLE_BORDER_WIDTHS;
MACRO_VTPAF2 VTPAF2_MULTIPLE_LANGUAGES;
MACRO_VTPAF VTPAF_MULTIPLE_BG_COLORS;
MACRO_VTPAF VTPAF_MULTIPLE_BG_GRAY_SCREENS;
MACRO_VTPAF VTPAF_MULTIPLE_BG_PATTERNS;
MACRO_VTPAF VTPAF_MULTIPLE_BOTTOM_SPACING;
MACRO_VTPAF VTPAF_MULTIPLE_DEFAULT_TABS;
MACRO_VTPAF VTPAF_MULTIPLE_LEADINGS;
MACRO_VTPAF VTPAF_MULTIPLE_LEFT_MARGINS;
MACRO_VTPAF VTPAF_MULTIPLE_LINE_SPACINGS;
MACRO_VTPAF VTPAF_MULTIPLE_NEXT_STYLES;
MACRO_VTPAF VTPAF_MULTIPLE_PARA_MARGINS;
MACRO_VTPAF VTPAF_MULTIPLE_PREPEND_CHARS;
MACRO_VTPAF VTPAF_MULTIPLE_RIGHT_MARGINS;
MACRO_VTPAF VTPAF_MULTIPLE_STARTING_PARA_NUMBERS;
MACRO_VTPAF VTPAF_MULTIPLE_STYLES;
MACRO_VTPAF VTPAF_MULTIPLE_TAB_LISTS;
MACRO_VTPAF VTPAF_MULTIPLE_TOP_SPACING;
MACRO_VTPBF_ANCHOR VTPBF_ANCHOR;
MACRO_VTPBF_ANCHOR_OFFSET VTPBF_ANCHOR_OFFSET;
MACRO_VTPBF_BOTTOM VTPBF_BOTTOM;
MACRO_VTPBF_DOUBLE VTPBF_DOUBLE;
MACRO_VTPBF_DRAW VTPBF_DRAW_INNER_LINES;
MACRO_SA VTPBF_LEFT;
MACRO_VTPBF_RIGHT VTPBF_RIGHT;
MACRO_VTPBF_SHADOW VTPBF_SHADOW;
MACRO_VTPBF VTPBF_TOP;
MACRO_VTRC VTRC_CHAR_ATTR_CHANGE;
MACRO_SNOT VTRC_PARAGRAPH_CHANGE;
MACRO_VTRC VTRC_PARA_ATTR_BORDER_CHANGE;
MACRO_VTRF VTRF_DO_NOT_SEND_CONTEXT_UPDATE;
MACRO_VTEFT VTRF_FILTER;
MACRO_VTRF VTRF_KEYBOARD_INPUT;
MACRO_VTRF VTRF_TRUNCATE;
MACRO_VTRF VTRF_UNDO;
MACRO_VTRF VTRF_USER_MODIFICATION;
MACRO_VTSDBF VTSDBF_CHAR_ATTR;
MACRO_VTSDBF VTSDBF_CHAR_ATTR_OFFSET;
MACRO_VTSDBF VTSDBF_GRAPHIC;
MACRO_VTSDBF_GRAPHIC VTSDBF_GRAPHIC_OFFSET;
MACRO_VTSDBF VTSDBF_NAME;
MACRO_VTSDBF VTSDBF_PARA_ATTR;
MACRO_VTSDBF_PARA VTSDBF_PARA_ATTR_OFFSET;
MACRO_VTSDBF VTSDBF_REGION;
MACRO_VTSDBF VTSDBF_STYLE;
MACRO_VTST VTSDBF_TEXT;
MACRO_VTSDBF VTSDBF_TYPE;
MACRO_VTSDBF_TYPE VTSDBF_TYPE_OFFSET;
MACRO_VTSF_MULTIPLE VTSF_DEFAULT_CHAR_ATTR;
MACRO_VTSF_MULTIPLE VTSF_DEFAULT_PARA_ATTR;
MACRO_VTSF_MULTIPLE VTSF_GRAPHICS;
MACRO_VTSF VTSF_LARGE;
MACRO_VTSF_MULTIPLE VTSF_MULTIPLE_CHAR_ATTRS;
MACRO_VTSF_MULTIPLE VTSF_MULTIPLE_PARA_ATTRS;
MACRO_VTSF_STYLES VTSF_NAMES;
MACRO_VTSF_STYLES VTSF_STYLES;
MACRO_VTSF_MULTIPLE VTSF_TYPES;
MACRO_VTSSF VTSSF_DRAGGING;
MACRO_VTST VTST_NONE;
MACRO_VTST VTST_RUNS_AND_ELEMENTS;
MACRO_VTST VTST_RUNS_ONLY;
MACRO_VTST VTST_SINGLE_CHUNK;
MACRO_VTS VTS_EDITABLE;
MACRO_VTS VTS_ONE_LINE;
MACRO_VTS VTS_OVERSTRIKE_MODE;
MACRO_VTS VTS_SELECTABLE;
MACRO_VTS VTS_SUBCLASS_VIRT_PHYS_TRANSLATION;
MACRO_VTS VTS_TARGETABLE;
MACRO_VTS VTS_USER_MODIFIED;
MACRO_VTTF VTTF_MULTIPLE_CONTEXTS;
MACRO_VTCF VTTF_MULTIPLE_HYPERLINKS;
MACRO_VTUGF VTUGF_NEW_ELEMENT;
MACRO_OFFSET VTUGF_RECALC;
$229E643E5E7DA98B885366267C47B572 VTVT_CONTEXT_NAME;
$229E643E5E7DA98B885366267C47B572 VTVT_CONTEXT_PAGE;
$229E643E5E7DA98B885366267C47B572 VTVT_CONTEXT_PAGE_IN_SECTION;
$229E643E5E7DA98B885366267C47B572 VTVT_CONTEXT_SECTION;
$229E643E5E7DA98B885366267C47B572 VTVT_CREATION_DATE_TIME;
$229E643E5E7DA98B885366267C47B572 VTVT_CURRENT_DATE_TIME;
$229E643E5E7DA98B885366267C47B572 VTVT_HOTSPOT;
$229E643E5E7DA98B885366267C47B572 VTVT_MODIFICATION_DATE_TIME;
$229E643E5E7DA98B885366267C47B572 VTVT_NUMBER_OF_PAGES;
$229E643E5E7DA98B885366267C47B572 VTVT_NUMBER_OF_PAGES_IN_SECTION;
$229E643E5E7DA98B885366267C47B572 VTVT_NUMBER_OF_SECTIONS;
$229E643E5E7DA98B885366267C47B572 VTVT_PAGE_NUMBER;
$229E643E5E7DA98B885366267C47B572 VTVT_PAGE_NUMBER_IN_SECTION;
$229E643E5E7DA98B885366267C47B572 VTVT_SECTION_NUMBER;
$229E643E5E7DA98B885366267C47B572 VTVT_STORED_DATE_TIME;
MACRO_VUIF_ALREADY VUIF_ALREADY_INVALID;
MACRO_VUIF VUIF_ALREADY_INVALIDATED;
MACRO_VUIF_ALREADY VUIF_ALWAYS_INVALIDATE;
MACRO_VUIF VUIF_JUST_OPENED;
MACRO_VUIF VUIF_SEND_TO_ALL_CHILDREN;
MACRO_VUM VUM_DELAYED_VIA_APP_QUEUE;
MACRO_VUM VUM_DELAYED_VIA_UI_QUEUE;
MACRO_VUM VUM_MANUAL;
MACRO_VUM VUM_NOW;
MACRO_VWMET VWMET_LARGE;
MACRO_VWMET VWMET_SMALL;
MACRO_VWTAS VWTAS_ACTIVE;
MACRO_VWTAS VWTAS_INACTIVE;
MACRO_WAKE WAKE_UP_WWW;
void __pascal WAVPLAYFILE(DiskHandle disk, const char *path, const char *fname);
MACRO_WCF_MAP WCF_MAP_MODE;
MACRO_WCF_MAP_MODE WCF_MAP_MODE_OFFSET;
MACRO_WCF_PLAIN WCF_PLAIN;
MACRO_WCF WCF_RGB;
MACRO_WCF_TRANSPARENT WCF_TRANSPARENT;
MACRO_WCT WCT_KEEP_PARTIALLY_VISIBLE;
MACRO_WCT WCT_KEEP_VISIBLE;
MACRO_WCT WCT_KEEP_VISIBLE_WITH_MARGIN;
MACRO_WCT WCT_NONE;
MACRO_SNOT WC_MATCH_MULTIPLE_CHARS;
MACRO_SNOT WC_MATCH_SINGLE_CHAR;
MACRO_SNOT WC_MATCH_WHITESPACE_CHAR;
MACRO_WHEN WHEN_DATE_TIME_CHANGE;
MACRO_ECHO WHOIS;
MACRO_WHOLE WHOLE;
MACRO_WIF WIF_DONT_INVALIDATE;
MACRO_WIF WIF_INVALIDATE;
void __pascal WINACKUPDATE(WindowHandle win);
void __pascal WINAPPLYROTATION(WindowHandle win, WWFixedAsDWord angle, WinInvalFlag flag);
void __pascal WINAPPLYSCALE(WindowHandle win, WWFixedAsDWord xScale, WWFixedAsDWord yScale, WinInvalFlag flag);
void __pascal WINAPPLYTRANSFORM(WindowHandle win, const TransMatrix *tm, WinInvalFlag flag);
void __pascal WINAPPLYTRANSLATION(WindowHandle win, WWFixedAsDWord xTrans, WWFixedAsDWord yTrans, WinInvalFlag flag);
void __pascal WINAPPLYTRANSLATIONDWORD(WindowHandle win, sdword xTrans, sdword yTrans, WinInvalFlag flag);
WindowHandle __pascal WINCHANGEACK(WindowHandle win, sword x, sword y, optr *winOD);
void __pascal WINCHANGEPRIORITY(WindowHandle win, WinPassFlags flags, word layerID);
void __pascal WINCLOSE(WindowHandle win);
void __pascal WINDECREFCOUNT(WindowHandle win);
MACRO_ODD WINDING;
void WINENSURECHANGENOTIFICATION(void);
optr __pascal WINGEODEGETINPUTOBJ(GeodeHandle gh);
optr __pascal WINGEODEGETPARENTOBJ(GeodeHandle gh);
void __pascal WINGEODESETACTIVEWIN(GeodeHandle gh, WindowHandle win);
void __pascal WINGEODESETINPUTOBJ(GeodeHandle gh, optr iobj);
void __pascal WINGEODESETPARENTOBJ(GeodeHandle gh, optr pObj);
void __pascal WINGEODESETPTRIMAGE(GeodeHandle gh, optr ptrCh);
void __pascal WINGETINFO(WindowHandle win, WinInfoType type, void *data);
void __pascal WINGETTRANSFORM(WindowHandle win, TransMatrix *tm);
void __pascal WINGETWINSCREENBOUNDS(WindowHandle win, Rectangle *bounds);
Boolean __pascal WINGRABCHANGE(WindowHandle win, optr newObj);
void __pascal WININVALREG(WindowHandle win, const Region *reg, word axParam, word bxParam, word cxParam, word dxParam);
void __pascal WINMOVE(WindowHandle win, sword xMove, sword yMove, WinPassFlags flags);
WindowHandle __pascal WINOPEN(Handle parentWinOrVidDr, optr inputRecipient, optr exposureRecipient, word colorFlags, word redOrIndex, word green, word blue, word flags, word layerID, GeodeHandle owner, const Region *winReg, word axParam, word bxParam, word cxParam, word dxParam);
void __pascal WINREALIZEPALETTE(WindowHandle win);
void __pascal WINRELEASECHANGE(WindowHandle win, optr obj);
void __pascal WINRESIZE(WindowHandle win, const Region *reg, word axParam, word bxParam, word cxParam, word dxParam, WinPassFlags flags);
void __pascal WINSCROLL(WindowHandle win, WWFixedAsDWord xMove, WWFixedAsDWord yMove, PointWWFixed *scrollAmt);
void __pascal WINSETINFO(WindowHandle win, WinInfoType type, dword data);
void __pascal WINSETNULLTRANSFORM(WindowHandle win, WinInvalFlag flag);
void __pascal WINSETPTRIMAGE(WindowHandle win, PtrImageLevel ptrLevel, optr ptrCh);
void __pascal WINSETTRANSFORM(WindowHandle win, const TransMatrix *tm, WinInvalFlag flag);
void __pascal WINSUSPENDUPDATE(WindowHandle win);
XYValueAsDWord __pascal WINTRANSFORM(WindowHandle win, sword x, sword y);
void __pascal WINTRANSFORMDWORD(WindowHandle win, sdword xCoord, sdword yCoord, PointDWord *screenCoordinates);
void __pascal WINUNSUSPENDUPDATE(WindowHandle win);
XYValueAsDWord __pascal WINUNTRANSFORM(WindowHandle win, sword x, sword y);
void __pascal WINUNTRANSFORMDWORD(WindowHandle win, sdword xCoord, sdword yCoord, PointDWord *documentCoordinates);
MACRO_WIN WIN_PRIO_COMMAND;
MACRO_WIN WIN_PRIO_MODAL;
MACRO_WIN WIN_PRIO_ON_BOTTOM;
MACRO_WIN WIN_PRIO_ON_TOP;
MACRO_WIN WIN_PRIO_POPUP;
MACRO_WIN WIN_PRIO_STD;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_COLOR;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_EXPOSURE_OBJ;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_FIRST_CHILD_WIN;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_FLAGS;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_INPUT_OBJ;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_LAST_CHILD_WIN;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_LAYER_ID;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_NEXT_SIBLING_WIN;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_PARENT_WIN;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_PREV_SIBLING_WIN;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_PRIORITY;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_PRIVATE_DATA;
$E6967276F138CC0C62E8FBC35A6A38DA WIT_STRATEGY;
MACRO_WJ WJ_CENTER_CHILDREN_HORIZONTALLY;
MACRO_WJ WJ_FULL_JUSTIFY_CHILDREN_HORIZONTALLY;
MACRO_WJ WJ_LEFT_JUSTIFY_CHILDREN;
MACRO_WJ WJ_RIGHT_JUSTIFY_CHILDREN;
MACRO_WPF WPF_ABS;
MACRO_WIN WPF_CREATE_GSTATE;
MACRO_WPF WPF_INIT_EXCLUDED;
MACRO_WPF_INIT_SUSPENDED WPF_INIT_SUSPENDED;
MACRO_WPF WPF_LAYER;
MACRO_WPF_LAYER_PRIORITY WPF_LAYER_PRIORITY;
MACRO_WPF_LAYER_PRIORITY_OFFSET WPF_LAYER_PRIORITY_OFFSET;
MACRO_WPF WPF_PLACE_BEHIND;
MACRO_WPF WPF_PLACE_LAYER_BEHIND;
MACRO_WPF_PRIORITY WPF_PRIORITY;
MACRO_WRF WPF_PTR_IN_UNIV;
MACRO_WPF_PTR WPF_PTR_IN_VIS;
MACRO_WPF WPF_ROOT;
MACRO_WPF WPF_SAVE_UNDER;
MACRO_WPF_WIN WPF_WIN_PRIORITY;
MACRO_WPF_WIN_PRIORITY WPF_WIN_PRIORITY_OFFSET;
MACRO_WPSF WPSF_CONSTRAIN_TYPE;
MACRO_WPSF WPSF_HINT_FOR_ICON;
MACRO_WPSF WPSF_NEVER_SAVE_STATE;
MACRO_WCT WPSF_PERSIST;
MACRO_WPSF WPSF_POSITION_TYPE;
MACRO_WPSF WPSF_SHRINK_DESIRED_SIZE_TO_FIT_IN_PARENT;
MACRO_WPSF WPSF_SIZE_TYPE;
MACRO_WPT WPT_AS_REQUIRED;
MACRO_WPT WPT_AT_MOUSE_POSITION;
MACRO_WPT WPT_AT_RATIO;
MACRO_WPT WPT_AT_SPECIFIC_POSITION;
MACRO_WPT WPT_CENTER;
MACRO_WPT WPT_STAGGER;
MACRO_WPT WPT_TILED;
MACRO_WRF WRF_CLOSED;
MACRO_WRF WRF_DELAYED_V;
MACRO_WRF WRF_DELAYED_WASH;
MACRO_WRF WRF_EXPOSE_PENDING;
MACRO_WRF WRF_SIBLING_VALID;
MACRO_WST WST_AS_DESIRED;
MACRO_WST WST_AS_RATIO_OF_FIELD;
MACRO_WST WST_AS_RATIO_OF_PARENT;
MACRO_WST WST_EXTEND_NEAR_BOTTOM_RIGHT;
MACRO_WST WST_EXTEND_TO_BOTTOM_RIGHT;
MACRO_TRRT WWFIXED_OVERFLOW;
MACRO_XLAT_TOKEN_FONT XLAT_TOKEN_FONT_12;
MACRO_XLAT_TOKEN_FONT XLAT_TOKEN_FONT_34;
MACRO_XLAT XLAT_TOKEN_GRAPHICS_12;
MACRO_XLAT XLAT_TOKEN_GRAPHICS_34;
MACRO_XLAT_TOKEN XLAT_TOKEN_SPREADSHEET_12;
MACRO_XLAT_TOKEN XLAT_TOKEN_SPREADSHEET_34;
MACRO_NUMBER2 XLAT_TOKEN_TEXT_12;
MACRO_NUMBER2 XLAT_TOKEN_TEXT_34;
MACRO_FLOAT YEAR_LENGTH;
MACRO_FLOAT YEAR_MAX;
MACRO_YEAR YEAR_MIN;
MACRO_ZL ZL_ZOOM_1;
MACRO_ZL ZL_ZOOM_2;
MACRO_ZL ZL_ZOOM_3;
const word AI_arcCloseType;
const WWFixed AI_endAngle;
const PointWWFixed AI_endPoint;
const PointWWFixed AI_midPoint;
const WWFixed AI_radius;
const WWFixed AI_startAngle;
const PointWWFixed AI_startPoint;
const FApplication ALI_launcherApp;
const optr ALI_triggerObj;
const word APCI_altBitmap;
const optr APCI_defineParent;
const word APCI_defineSlot;
const word APCI_editMsg;
const optr APCI_enableDisable;
const AccessPointType _APCI_type;
ChunkHandle ATTR_ACCESS_POINT_CONTROL_LIST_MONIKER;
word ATTR_ACCESS_POINT_CONTROL_SELECTION;
Point ATTR_ANALOG_CLOCK_SHOW_AM_PM;
SSSetCallType ATTR_BARRING_CALL_TYPE;
Boolean ATTR_BARRING_QUERY_ANSWERED;
optr ATTR_COLOR_SELECTOR_DISABLE_OBJECT;
Point ATTR_COMPLEX_MONIKER_SEPARATOR_START_POINT;
ConnectionType ATTR_CONNECT_SETTINGS_CONTROL_DEFAULT_CONNECTION_TYPE;
DataGroup ATTR_CONNECT_SETTINGS_CONTROL_DEFAULT_DATA_GROUP;
DestinationType ATTR_CONNECT_SETTINGS_CONTROL_DEFAULT_DESTINATION_TYPE;
ContactEditRecoverData ATTR_CONTACT_EDIT_RECOVER_FROM_STATE;
word ATTR_CONTACT_LIST_ALTERNATE_NOTIFY_CONTACT_SELECTED_MSG;
Message ATTR_CONTACT_LIST_ALTERNATE_NOTIFY_MULTIPLE_CONTACTS_SELECTED_MSG;
Message ATTR_CONTACT_LIST_ALTERNATE_NOTIFY_NUMBER_ENTERED_MSG;
ContdbCallType ATTR_CONTACT_LIST_CALL_TYPE;
MemHandle ATTR_CONTACT_LIST_DONT_ALLOW_RECORDS;
ChunkHandle ATTR_CONTACT_LIST_EMERGENCY_NUMBERS;
RecordID ATTR_CONTACT_LIST_LIMITING_GROUP_ID;
ChunkHandle ATTR_CONTACT_LIST_MONIKER;
Message ATTR_CONTACT_LIST_NOTIFY_CONTACT_SELECTED_MSG;
Message ATTR_CONTACT_LIST_NOTIFY_MULTIPLE_CONTACTS_SELECTED_MSG;
Message ATTR_CONTACT_LIST_NOTIFY_NUMBER_ENTERED_MSG;
word ATTR_CONTACT_LIST_NUM_ITEMS;
Message ATTR_CONTACT_LIST_STATUS_MSG;
Message ATTR_CONTACT_SIM_LIST_ALTERNATE_NOTIFY_CONTACT_SELECTED_MSG;
Message ATTR_CONTACT_SIM_LIST_ALTERNATE_NOTIFY_MULTIPLE_CONTACTS_SELECTED_MSG;
Message ATTR_CONTACT_SIM_LIST_ALTERNATE_NOTIFY_NUMBER_ENTERED_MSG;
ContdbCallType ATTR_CONTACT_SIM_LIST_CALL_TYPE;
ChunkHandle ATTR_CONTACT_SIM_LIST_EMERGENCY_NUMBERS;
Message ATTR_CONTACT_SIM_LIST_NOTIFY_CONTACT_SELECTED_MSG;
Message ATTR_CONTACT_SIM_LIST_NOTIFY_MULTIPLE_CONTACTS_SELECTED_MSG;
Message ATTR_CONTACT_SIM_LIST_NOTIFY_NUMBER_ENTERED_MSG;
Message ATTR_CONTACT_SIM_LIST_STATUS_MSG;
SSSetCallType ATTR_DIVERTING_CALL_TYPE;
optr ATTR_EXPORT_CONTROL_APP_UI;
Message ATTR_FFRCP_VALUE_JUMP_TO_RECORD_MSG;
Message ATTR_FFRCP_VALUE_NEW_RECORD_MSG;
FDocumentDir ATTR_FFS_DOCUMENT_DIR;
ChunkHandle ATTR_FILE_OPEN_CREATE_TRIGGER_MONIKER;
FDocumentDir ATTR_FILE_OPEN_DEFAULT_DIRECTORY;
ChunkHandle ATTR_FILE_OPEN_DEFAULT_FILE_NAME_PREFIX;
ChunkHandle ATTR_FILE_OPEN_EXCLUDE_DIR;
ChunkHandle ATTR_FILE_OPEN_EXCLUDE_FILE;
FileAttrInfo ATTR_FILE_OPEN_FILE_ATTR_INFO;
ChunkHandle ATTR_FILE_OPEN_INCLUDE_DIR;
ChunkHandle ATTR_FILE_OPEN_INCLUDE_FILE;
FileLongName ATTR_FILE_OPEN_VIEWER_LIB_NAME;
FilterListCustomIdentifiers ATTR_FILTER_LIST_CUSTOM_IDENTIFIERS;
word ATTR_FLASHING_NOTE_MINIMUM_DURATION;
FontEnumFlags ATTR_FOAM_FONT_CONTROL_SHORT_LIST_FONT_TYPE;
FontEnumFlags ATTR_FONT_CONTROL_LONG_LIST_FONT_TYPE;
FontEnumFlags ATTR_FONT_CONTROL_SHORT_LIST_FONT_TYPE;
GrObjActionNotificationStruct ATTR_GB_ACTION_NOTIFICATION;
GrObjBodyPasteCallBackStruct ATTR_GB_PASTE_CALL_BACK;
GeodeToken ATTR_GEN_APPLICATION_ADDITIONAL_TOKENS[];
optr ATTR_GEN_APPLICATION_KBD_OBJ;
optr ATTR_GEN_APPLICATION_PRINT_CONTROL;
optr ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER;
optr ATTR_GEN_BOOLEAN_GROUP_LINK;
Message ATTR_GEN_BOOLEAN_GROUP_STATUS_MSG;
optr ATTR_GEN_CONTROL_APP_TOOLBOX_UI;
optr ATTR_GEN_CONTROL_APP_UI;
WordFlags ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI;
WordFlags ATTR_GEN_CONTROL_PROHIBIT_UI;
WordFlags ATTR_GEN_CONTROL_REQUIRE_TOOLBOX_UI;
WordFlags ATTR_GEN_CONTROL_REQUIRE_UI;
GenDefaultMonikerType ATTR_GEN_DEFAULT_MONIKER;
DestinationClassArgs ATTR_GEN_DESTINATION_CLASS;
ChunkHandle ATTR_GEN_DISPLAY_TRAVELING_OBJECTS;
UIInterfaceLevel ATTR_GEN_DOCUMENT_CONTROL_NO_EMPTY_DOC_IF_NOT_ABOVE;
ChunkHandle ATTR_GEN_FEATURE_LINK;
GeodeToken ATTR_GEN_FILE_SELECTOR_CREATOR_MATCH;
GenFileSelectorFileAttrs ATTR_GEN_FILE_SELECTOR_FILE_ATTR;
GenFileSelectorFileHeaderFlags ATTR_GEN_FILE_SELECTOR_FILE_HEADER_FLAGS;
GenFileSelectorGeodeAttrs ATTR_GEN_FILE_SELECTOR_GEODE_ATTR;
GenFileSelectorMask ATTR_GEN_FILE_SELECTOR_NAME_MASK;
GeodeToken ATTR_GEN_FILE_SELECTOR_TOKEN_MATCH;
GenFilePath ATTR_GEN_FILE_SELECTOR_VIRTUAL_ROOT;
optr ATTR_GEN_FOCUS_HELP;
optr ATTR_GEN_FOCUS_HELP_LIB;
HelpType ATTR_GEN_HELP_TYPE;
GenInteractionGroupType ATTR_GEN_INTERACTION_GROUP_TYPE;
optr ATTR_GEN_INTERACTION_PEN_MODE_KEYBOARD_OBJECT;
Message ATTR_GEN_ITEM_GROUP_CUSTOM_DOUBLE_PRESS;
optr ATTR_GEN_ITEM_GROUP_LINK;
Message ATTR_GEN_ITEM_GROUP_STATUS_MSG;
optr ATTR_GEN_OUTPUT_TRAVEL_START;
GenFilePath ATTR_GEN_PATH_DATA;
CharTableData ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_DATA;
optr ATTR_GEN_PEN_INPUT_CONTROL_CUSTOM_CHAR_TABLE_MONIKER;
PenInputDisplayType ATTR_GEN_PEN_INPUT_CONTROL_STARTUP_DISPLAY_TYPE;
Point ATTR_GEN_POSITION;
sword ATTR_GEN_POSITION_X;
sword ATTR_GEN_POSITION_Y;
ChunkHandle ATTR_GEN_TEXT_CHAR_ATTR;
ChunkHandle ATTR_GEN_TEXT_CUSTOM_FILTER;
VisTextDefaultCharAttr ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR;
VisTextDefaultParaAttr ATTR_GEN_TEXT_DEFAULT_PARA_ATTR;
word ATTR_GEN_TEXT_EXTENDED_FILTER;
word ATTR_GEN_TEXT_GRAPHIC_RUNS;
ChunkHandle ATTR_GEN_TEXT_MULTIPLE_CHAR_ATTR_RUNS;
ChunkHandle ATTR_GEN_TEXT_MULTIPLE_PARA_ATTR_RUNS;
word ATTR_GEN_TEXT_NAME_ARRAY;
ChunkHandle ATTR_GEN_TEXT_PARA_ATTR;
optr ATTR_GEN_TEXT_RUNS_ITEM_GROUP;
optr ATTR_GEN_TEXT_SET_OBJECT_ENABLED_WHEN_TEXT_EXISTS;
Message ATTR_GEN_TEXT_STATUS_MSG;
word ATTR_GEN_TEXT_STYLE_ARRAY;
word ATTR_GEN_TEXT_TYPE_RUNS;
word ATTR_GEN_TRIGGER_ACTION_DATA;
Message ATTR_GEN_TRIGGER_CUSTOM_DOUBLE_PRESS;
InteractionCommand ATTR_GEN_TRIGGER_INTERACTION_COMMAND;
word ATTR_GEN_VALUE_DECIMAL_PLACES;
WWFixed ATTR_GEN_VALUE_METRIC_INCREMENT;
optr ATTR_GEN_VALUE_RUNS_ITEM_GROUP;
Message ATTR_GEN_VALUE_STATUS_MSG;
word ATTR_GEN_VALUE_WITH_LIST_MAX_TEXT_LEN;
InkDestinationInfoParams ATTR_GEN_VIEW_INK_DESTINATION_INFO;
XYSize ATTR_GEN_VIEW_PAGE_SIZE;
dword ATTR_GEN_VISIBILITY_DATA;
optr ATTR_GEN_VISIBILITY_DESTINATION;
Message ATTR_GEN_VISIBILITY_MESSAGE;
MemHandle ATTR_GEN_WINDOW_CUSTOM_LAYER_ID;
LayerPriority ATTR_GEN_WINDOW_CUSTOM_LAYER_PRIORITY;
MemHandle ATTR_GEN_WINDOW_CUSTOM_PARENT;
WinPriority ATTR_GEN_WINDOW_CUSTOM_WINDOW_PRIORITY;
KeyboardOverride ATTR_GEN_WINDOW_KBD_OVERRIDE;
Point ATTR_GEN_WINDOW_KBD_POSITION;
GrObjActionNotificationStruct ATTR_GO_ACTION_NOTIFICATION;
GrObjObjManipData ATTR_GO_OBJ_MANIP_DATA;
PointWWFixed ATTR_GO_PARENT_DIMENSIONS_OFFSET;
word ATTR_GROBJ_TOOL_CONTROL_POSITION_FOR_ADDED_TOOLS;
optr ATTR_HELP_CUSTOM_POINTER_IMAGE;
ChunkHandle ATTR_HIGH_SCORE_DATE_TITLE_MONIKER;
ChunkHandle ATTR_HIGH_SCORE_EXTRA_TITLE_MONIKER;
ChunkHandle ATTR_HIGH_SCORE_NAME_TITLE_MONIKER;
ChunkHandle ATTR_HIGH_SCORE_SCORE_TITLE_MONIKER;
ChunkHandle ATTR_HIGH_SCORE_SHOW_SCORES_TRIGGER_MONIKER;
optr ATTR_IMPORT_CONTROL_APP_UI;
optr ATTR_IMPORT_CONTROL_CANCEL_DESTINATION;
word ATTR_IMPORT_CONTROL_CANCEL_MESSAGE;
word ATTR_INK_MAX_POINTS;
InkStrokeSize ATTR_INK_STROKE_SIZE;
Message ATTR_LOG_CONTROL_NOTIFY_ENTRY_SELECTED_MSG;
MailboxDataFormat ATTR_MAILBOX_SEND_CONTROL_AVAILABLE_FORMATS[];
MailboxMediaTransport ATTR_MAILBOX_SEND_CONTROL_SINGLE_TRANSPORT;
MailboxTransportAndOption ATTR_MAILBOX_SEND_CONTROL_TRANSPORT_HINT;
PageSizeControlChanges ATTR_PAGE_SIZE_CONTROL_UI_CHANGES;
word ATTR_PREF_DIALOG_SYS_SHUTDOWN_TYPE;
PrefEnableData ATTR_PREF_ITEM_GROUP_ENABLE;
word ATTR_PREF_ITEM_GROUP_OVERRIDE;
ChunkHandle ATTR_PREF_ITEM_GROUP_STATUS_TEXT;
ChunkHandle ATTR_PREF_ITEM_GROUP_TEXT_DISPLAY;
UIInterfaceLevel ATTR_PREF_MAX_LEVEL;
UIInterfaceLevel ATTR_PREF_MIN_LEVEL;
PrefMgrFeatures ATTR_PREF_PROHIBITED_FEATURES;
optr ATTR_PREF_REBOOT_STRING;
PrefMgrFeatures ATTR_PREF_REQUIRED_FEATURES;
ChunkHandle ATTR_PREF_TEXT_INIT_FILE_CATEGORY_TARGET;
optr ATTR_PREF_TOC_LIST_CONTAINER;
PrefTocExtraEntry ATTR_PREF_TOC_LIST_EXTRA_ENTRY_1;
PrefTocExtraEntry ATTR_PREF_TOC_LIST_EXTRA_ENTRY_2;
char ATTR_PREF_TOC_LIST_INFO_KEY[];
PrefTriggerAction ATTR_PREF_TRIGGER_ACTION;
word ATTR_PREF_VALUE_ROUND;
word ATTR_PREF_VALUE_WRAP;
optr ATTR_PRINT_CONTROL_APP_UI;
Message ATTR_RECENT_CONTACTS_CONTROL_NOTIFY_ENTRY_SELECTED_MSG;
Message ATTR_RECENT_CONTACTS_CONTROL_NOTIFY_MULTIPLE_ENTRIES_SELECTED_MSG;
Message ATTR_RECENT_CONTACTS_PHONE_CONTROL_NOTIFY_MISSED_CALLS_LIST_OPENED_MSG;
SelectionDataType ATTR_SEARCH_CONTROL_SELECTION_TYPE;
ChunkHandle ATTR_SEARCH_CONTROL_SET_EXCLUDE_NOTE_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_FIND_FROM_TOP_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_FIND_NEXT_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_FIND_PREV_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_INCLUDE_NOTE_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_NOTE_ONLY_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_REPLACE_ALL_IN_SELECTION_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_REPLACE_ALL_MONIKER;
ChunkHandle ATTR_SEARCH_CONTROL_SET_REPLACE_CURRENT_MONIKER;
SMMessageConversion ATTR_SMSSEND_CONVERSION;
word ATTR_SMSSEND_DATA_LENGTH;
GeodeToken ATTR_SMSSEND_DESTINATION_GEODE_TOKEN;
FileDateAndTime ATTR_SMSSEND_END_SENDING_DATE;
SMReplyPath ATTR_SMSSEND_REPLY_PATH;
FileDateAndTime ATTR_SMSSEND_START_SENDING_DATE;
SMValidityPeriod ATTR_SMSSEND_VALIDITY_PERIOD;
ChunkHandle ATTR_SMS_EDIT_SET_OBJECT_ENABLED_WHEN_ADDRESS_EXISTS;
PointDWord ATTR_SPEC_POSITION;
sword ATTR_SPEC_POSITION_X;
sword ATTR_SPEC_POSITION_Y;
GenFilePath ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_PATH;
GeodeToken ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_TOKEN;
dword ATTR_VIEWER_CONTROL_SHOW_DELETE_PROGRESS_DIALOG_THRESHOLD;
dword ATTR_VIEWER_CONTROL_SHOW_SAVE_PROGRESS_DIALOG_THRESHOLD;
VSCOptionsAction ATTR_VIEWER_SEND_CONTROL_OPTIONS_OPTR;
ChunkHandle ATTR_VIEWER_SEND_CONTROL_REPLY_SEND_MONIKER;
ChunkHandle ATTR_VIEWER_TEXT_OBJECT;
VarGeoData ATTR_VIS_GEOMETRY_DATA;
word ATTR_VIS_TEXT_ADD_SPACE_ON_TOP_TO_FIRST_LINE_OF_REGION;
word ATTR_VIS_TEXT_ADD_SPACE_TO_ALL_LINES;
word ATTR_VIS_TEXT_CHAR_ATTR_INSERTION_TOKEN;
ChunkHandle ATTR_VIS_TEXT_CUSTOM_FILTER;
VisTextExtendedFilterType ATTR_VIS_TEXT_EXTENDED_FILTER;
word ATTR_VIS_TEXT_GRAPHIC_RUNS;
WBFixed ATTR_VIS_TEXT_MINIMUM_SINGLE_LINE_HEIGHT;
word ATTR_VIS_TEXT_NAME_ARRAY;
word ATTR_VIS_TEXT_NOTIFY_CURSOR_POSITION;
word ATTR_VIS_TEXT_SELECTED_TAB;
word ATTR_VIS_TEXT_STYLE_ARRAY;
VisTextSuspendData ATTR_VIS_TEXT_SUSPEND_DATA;
word ATTR_VIS_TEXT_TYPE_INSERTION_TOKEN;
word ATTR_VIS_TEXT_TYPE_RUNS;
SSSetCallType ATTR_WAITING_CALL_TYPE;
const int AppAttachFlags;
const BitmapGuardianFlags BGI_flags;
const ClassStruct *BGI_toolClass;
int Boolean;
const optr CAI_curClock;
const word CAI_interval;
const optr CBCI_controlObj;
const Boolean CBI_queryActive;
const byte CBI_requestId;
const optr CCI_clearDialogOptr;
const optr CCI_undoDialogOptr;
const optr CCI_visObject;
word CC_attrs;
FloatNum CC_current;
dword CC_notes;
byte CC_recalcFlags;
byte CC_type;
const optr CDCI_controlObj;
const Boolean CDI_queryActive;
const byte CDI_requestId;
const TCHAR CDI_vmbNumber[31];
const Boolean CDI_vmbxQueryActive;
const MemHandle CEI_record;
const RecordID CEI_recordID;
ReturnValue CF_current;
word CF_formulaSize;
ReturnType CF_return;
const word CGLI_displayMemberCount;
const optr CGLI_storedGroups;
const word CI_avoidDetachCount;
const ConnectGetSendStatus CI_connectGetSendStatus;
const ConnectConnectionStatus CI_connectionStatus;
const DiskHandle CI_destDiskHandle;
const char CI_destFormat[16];
const MemHandle CI_getSourceDataBlock;
const Message CI_notifyOnCompletionMsg;
const optr CI_notifyOnCompletionOptr;
const optr CI_openConnectionDialog;
const Message CI_openConnectionReturnMsg;
const optr CI_openConnectionReturnObj;
const ConnectOpenConnectionTimeOutFlags CI_openConnectionTimeOutFlags;
const dword CI_openConnectionTimeOutTime;
const FileHandle CI_originalDestFile;
const optr CI_progressDialogOptr;
const char CI_sourceFormat[16];
const DiskHandle CI_tempDiskHandle;
const FileLongName CI_xferDriverName;
const GeodeHandle CI_xferDrvHandle;
void (*CI_xferDrvStratRoutine)();
const GeodeHandle CI_xlateDrvHandle;
void (*CI_xlateDrvStratRoutine)();
const ThreadHandle CI_xlateThread;
const word CLI_curItem;
const VMBlockHandle CLI_searchResult;
const TimerHandle CLI_timerHandle;
const word CLI_timerID;
const Message CMFAI_completionMsg;
const optr CMFAI_completionOptr;
const Message CMFAI_fileActionMsg;
const optr CMFAI_fileActionOptr;
const MemHandle CMFAI_fileDetailsBlock;
const ConnectMFAGetPackageStatus CMFAI_getPackageStatus;
const optr CMFAI_packageArray;
void CMFA_FILE_ACTION_MSG(optr completionOptr, Message completionMsg);
void CMFA_GET_PACKAGE_COMPLETION_MSG(ConnectError error);
void CMFA_LIST_PACKAGES_COMPLETION_MSG(ConnectError error, optr packageArray);
const Message CMFI_completionMsg;
const optr CMFI_completionOptr;
const ConnectMFGetSendStatus CMFI_connectmfGetSendStatus;
const optr CMFI_fileArray;
const word CMFI_nextFile;
const optr CMFI_progressDialog;
const byte CMI_fontSize;
const word CMI_iconBitmap;
const TextStyle CMI_textStyle;
const word CMI_topText;
void CONNECT_COMPLETION_MSG(ConnectError error);
void CONNECT_OPEN_CONNECTION_COMPLETION_MSG(ConnectError error);
void CONNECT_PROGRESS_DIALOG_CANCELLATION_MSG();
void CONNECT_QUIT_GEODE_COMPLETION_MSG(GeodeHandle geode, ConnectQuitGeodeStatus status);
void CONTACTS_PHONE_CONTROL_NOTIFY_MISSED_CALLS_LIST_OPENED_MSG();
const dword CPDI_bytesCurrentFile;
const optr CPDI_cancelDialog;
const Message CPDI_cancellationMsg;
const optr CPDI_cancellationOptr;
const dword CPDI_cumulativeTally;
const ConnectProgressDialogFlags CPDI_flags;
const dword CPDI_transferSize;
const word CPGLI_hasParents;
const RecordID CPGLI_record;
const optr CSAI_connectObj;
const ConnectSubApplicationFlags CSAI_flags;
const ChunkHandle CSCI_dialogTitle;
const ConnectSettingsControllerMiscFlags CSCI_miscFlags;
const optr CSCI_settingsDisplayController;
const optr CSDCI_settingsController;
const word CSEI_editedLocation;
sword CSHA_count;
const ColorQuad CSI_color;
const byte CSI_colorIndeterminate;
const SystemDrawMask CSI_drawMask;
const byte CSI_drawMaskIndeterminate;
const GraphicPattern CSI_pattern;
const byte CSI_patternIndeterminate;
const ColorModifiedStates CSI_states;
const ColorToolboxPreferences CSI_toolboxPrefs;
const optr CSLI_copyProgressOptr;
const CSListFlags CSLI_flags;
const word CSLI_matchLength;
const word CSLI_reserved;
const hptr CSLI_timerHandle;
const word CSLI_timerID;
const optr CWCI_controlObj;
const Boolean CWI_queryActive;
const int CompPart;
void __cdecl ConnectAbridgePath(char *thePath, word maxWidth, char *includedInWidth, FontID fontID, WWFixedAsDWord pointSize);
ConnectCheckLegalError __cdecl ConnectCheckLegalDosDirPath(const TCHAR *dirPath);
ConnectCheckLegalError __cdecl ConnectCheckLegalDosDriveName(const TCHAR *driveName);
ConnectCheckLegalError __cdecl ConnectCheckLegalDosFileName(const TCHAR *fileName);
ConnectCheckLegalError __cdecl ConnectCheckLegalDosFilePath(TCHAR *filePath);
ConnectError __cdecl ConnectCreatePathOnServer(TCHAR *serverPath);
optr __cdecl ConnectCreateProgressDialog(optr cancellationOptr, Message cancellationMsg);
optr __cdecl ConnectCreateProgressDialogFromTemplate(optr progressDialogTemplate, optr cancellationOptr, Message cancellationMsg);
ConnectError ConnectDisplayServerPath(void);
InteractionCommand __cdecl ConnectDoStandardDialog(ConnectStandardDialogBoxType dialogType, TCHAR *arg1, TCHAR *arg2);
InteractionCommand __cdecl ConnectDoStandardDialogWithReason(ConnectError error, ConnectStandardDialogBoxType dbType, TCHAR *arg);
Boolean __cdecl ConnectDoStandardErrorDialog(ConnectError error, TCHAR *arg1, TCHAR *arg2);
word __cdecl ConnectFileEnum(FileEnumParams *params, MemHandle *bufCreated, word *numNoFit);
ConnectError __cdecl ConnectGetFileSize(dword *fileSize, char *fileName);
ConnectError __cdecl ConnectGetFreeSpace(dword *driveSpace, word driveLetter, dword localSize);
ConnectError __cdecl ConnectGetPackageDescriptorData(optr pkgDescArray, word n, PackageDescriptorDataType pddt, TCHAR *retBuf, word bufLength);
ConnectError __cdecl ConnectGetServerPath(TCHAR *buffer);
InteractionCommand __cdecl ConnectMaybeDoStandardDialog(ConnectStandardDialogBoxType dialogType, TCHAR *arg1, TCHAR *arg2, optr connectObj);
Boolean __cdecl ConnectMaybeDoStandardErrorDialog(ConnectError error, TCHAR *arg1, TCHAR *arg2, optr connectObj);
Boolean __cdecl ConnectMaybeWarnIfOutOfSpace(ConnectError error, optr connectObj);
ConnectError __cdecl ConnectRemark(ConnectError error, TCHAR *actionString);
ConnectError __cdecl ConnectSetServerPath(TCHAR *path);
void __cdecl ConnectValidateIniPathSettings(TCHAR *fname);
Boolean __cdecl ConnectWarnIfOutOfSpace(ConnectError error);
word __cdecl ContactCardToVCardLen(VMFileHandle dbHandle, MemHandle record, optr fields, MemHandle bufferHandle, word bufferLen);
dword ContextLocation;
const word DCI_status;
DebugObjDuplicateResourceInfo DEBUG_META_OBJ_DUPLICATE_RESOURCE_INFO;
DetachDataEntry DETACH_DATA;
int DiskHandle;
word __cdecl DosExec(const char *prog, DiskHandle progDisk, const char *arguments, const char *execDir, DiskHandle execDisk, DosExecFlags flags);
const ExportControlAttrs ECI_attrs;
const ImpexDataClasses ECI_dataClasses;
const optr ECI_destination;
const word ECI_message;
const ExtendedFileSelectorAttrs EFSI_attrs;
const ChunkHandle EFSI_selections;
const MemHandle EUDCI_icBuff;
const MemHandle EUDCI_userDictList;
word __cdecl EciGetCellId(word *cellId);
word __cdecl EciGetImei(byte *imei);
byte __cdecl EciShowTextStart(byte type, byte time, byte format, byte font, TCHAR *message);
byte __cdecl EciShowTextStop();
word __cdecl EciStartVoiceCall(TCHAR *number);
MemHandle FFEB_RESET_TEXT;
const FFEBFunctionContext FFEB_context;
const FFD_attributes FFFP_attrEnabled;
const byte FFFP_colNum;
const optr FFFP_computedFieldExpressionBuilderOptr;
const FFFPContext FFFP_context;
const optr FFFP_defaultValueExpressionBuilderOptr;
const FFFieldPropertiesInputStruct FFFP_fpis;
const byte FFFP_markBusyCount;
const FFGBUpdateUIFlags FFGBI_updateFieldAppearences;
FFDBFieldNavigationOrderInfo FFI_VAR_FNO_INFO_SHADOW_DATA;
FFDBSortInfo FFI_VAR_SORT_INFO_SHADOW_DATA;
byte FFI_VAR_SUBSET_TOKEN_STREAM;
const Boolean FFI_autoApplyMark;
const word FFI_automaticFieldNumber;
const Boolean FFI_clearMarksFirst;
const byte FFI_columnsTaken[32];
const byte FFI_currentLayout;
const byte FFI_currentLayoutType;
const word FFI_currentMarkedRecord;
const ModeType FFI_currentMode;
const word FFI_currentPage;
const byte FFI_currentTopRecordInMultiRecDisplay;
const FieldID FFI_databaseNameList[256];
const ClassStruct *FFI_designModeGrObjTool;
const byte FFI_dirtyRecord;
const byte FFI_editingNewRecord;
const optr FFI_expressionBuilderOptr;
const FFDBFieldNavigationOrderInfo FFI_fieldOrderInfo;
const VMBlockHandle FFI_floatControlBlock;
const word FFI_floatControlCount;
const HierarchicalGrab FFI_focusExcl;
const optr FFI_grObjAM;
const optr FFI_grObjHeadOptr;
const word FFI_highestLayoutNumber;
const byte FFI_layoutColumnsTaken[32];
const FieldID FFI_layoutNameList[256];
const VMBlockHandle FFI_mapBlock;
const word FFI_nonce;
const FieldID FFI_notInLayoutNameList[256];
const byte FFI_numFields;
const byte FFI_numInLayoutNameList;
const byte FFI_numInNotInLayoutNameList;
const byte FFI_numLayouts;
const word FFI_numMarkedRecords;
const word FFI_numRecords;
const LayoutSize FFI_pageSize;
const RecordOrderOption FFI_recordOrder;
const Boolean FFI_showOnlyMarked;
const HierarchicalGrab FFI_targetExcl;
const Message FFI_tokenStreamDestMsg;
const optr FFI_tokenStreamDestOptr;
const word FFI_totalNumRecordsInDatabase;
optr FFLG_TEMPORARY_WARD_INSTANCE_DATA;
const GrObjElementObjPtr FFLG_field;
const GrObjElementObjPtr FFLG_self;
const LayoutSize FFPLRI_recordLayoutBounds;
void FFRCP_VALUE_JUMP_TO_RECORD_MSG_PROTOTYPE(FFRCPJumpType jumpType);
void FFRCP_VALUE_NEW_RECORD_MSG_PROTOTYPE();
const optr FFTC_createNewFieldOptr;
const dword FFTC_currentDatabaseObject;
const optr FFTC_editFieldOptr;
Boolean FFTFG_NUKE_FLAG;
optr FFTFG_TEMPORARY_WARD_INSTANCE_DATA;
const FieldEdgeFlags FFTFG_edgeFlags;
const FieldDataType FFTFG_fieldType;
const GrObjElementObjPtr FFTFG_label;
const FormatIdType _FFT_displayFormat;
const FieldID FFT_fieldColumn;
const FieldDataType FFT_fieldType;
const Boolean FFT_inDesignMode;
const Boolean FFT_navigating;
const Rectangle FII_realBounds;
const word FLI_currentNoneMoniker;
const ChunkHandle FLI_filterItems;
const int FLI_noItemsMoniker;
const int FLI_noMatchMoniker;
const word FNI_duration;
const word FOI_folderTextChunk;
const ViewerAttributes FOI_viewerAttr;
const hptr FOI_viewerLibraryHandle;
const byte FOI_viewerLibraryOpenCount;
const ChunkHandle FOI_viewerLibraryStateChunk;
const optr FOI_viewerLibraryUIOD;
const word FPDI_cancelActionMsg;
const optr FPDI_cancelDestination;
const ChunkHandle FPDI_descriptionText;
const ChunkHandle FPDI_statusText;
void __pascal FREE(void *blockPtr, GeodeHandle geodeHan);
const FApplication FSAI_launcherApp;
const Message FTI_filterMsg;
const word FTI_filterTimeout;
const word FTI_timerHandle;
const word FTI_timerID;
const word GAI_appFeatures;
const UIInterfaceLevel _GAI_appLevel;
const Message GAI_appMode;
const AppInstanceReference GAI_appRef;
const ChunkHandle GAI_iacpConnects;
const AppLaunchFlags GAI_launchFlags;
const ApplicationOptFlags GAI_optFlags;
const Handle GAI_specificUI;
const ApplicationStates GAI_states;
const Message GBGI_applyMsg;
const optr GBGI_destination;
const word GBGI_indeterminateBooleans;
const word GBGI_modifiedBooleans;
const word GBGI_selectedBooleans;
const RectDWord GBI_bounds;
const word GBI_childCount;
const byte GBI_curHandleHeight;
const byte GBI_curHandleWidth;
const BBFixed GBI_curNudgeX;
const BBFixed GBI_curNudgeY;
const PointWWFixed GBI_curScaleFactor;
const GrObjFunctionsActive GBI_currentModifiers;
const GrObjFunctionsActive GBI_currentOptions;
const GrObjFunctionsActive GBI_defaultOptions;
const byte GBI_desiredHandleSize;
const GrObjDrawFlags GBI_drawFlags;
const GrObjFileStatus GBI_fileStatus;
const GrObjBodyFlags GBI_flags;
const optr GBI_goam;
const word GBI_graphicsState;
const optr GBI_head;
const word GBI_identifier;
const PointDWFixed GBI_interestingPoint;
const PointDWFixed GBI_lastPtr;
const optr GBI_mouseGrab;
const word GBI_objBlockArray;
const word GBI_priorityList;
const word GBI_reserved1;
const word GBI_reserved2;
const optr GBI_ruler;
const optr GBI_selectionArray;
const word GBI_suspendCount;
const GrObjBodyUnsuspendOps GBI_unsuspendOps;
word GCBI_childCount;
const GenControlChildInfo *GCBI_childList;
optr GCBI_controllerName;
MemHandle GCBI_dupBlock;
WordFlags GCBI_features;
word GCBI_featuresCount;
const GenControlFeaturesInfo *GCBI_featuresList;
word GCBI_gcnCount;
char *GCBI_helpContext;
word GCBI_notificationCount;
byte GCBI_reserved[8];
MemHandle GCBI_toolBlock;
word GCBI_toolCount;
WordFlags GCBI_toolFeatures;
word GCBI_toolFeaturesCount;
const GenControlFeaturesInfo *GCBI_toolFeaturesList;
const GenControlChildInfo *GCBI_toolList;
const byte GCI_attrs;
const word GCI_baseHeight;
const word GCI_baseWidth;
const optr GCI_genView;
const MemHandle GCI_gstate;
const optr GCI_output;
const GameStatus GCI_status;
const TimerHandle GCI_timerHandle;
const word GCI_timerID;
const word GCI_timerInterval;
const int GCNListType;
const GenDisplayControlAttributes GDCII_attrs;
const GenDocumentControlAttrs GDCI_attrs;
const byte GDCI_defaultExists;
const ChunkHandle GDCI_defaultFile;
const optr GDCI_dialogGroup;
const int GDCI_dialogImportMoniker;
const ChunkHandle GDCI_dialogImportText;
const int GDCI_dialogNewMoniker;
const ChunkHandle GDCI_dialogNewText;
const int GDCI_dialogOpenDefaultMoniker;
const ChunkHandle GDCI_dialogOpenDefaultText;
const int GDCI_dialogOpenMoniker;
const ChunkHandle GDCI_dialogOpenText;
const int GDCI_dialogTemplateMoniker;
const ChunkHandle GDCI_dialogTemplateText;
const int GDCI_dialogUserLevelMoniker;
const ChunkHandle GDCI_dialogUserLevelText;
const word GDCI_docAttrs;
const FileHandle GDCI_docFileHandle;
const word GDCI_docType;
const optr GDCI_documentGroup;
const GeodeToken GDCI_documentToken;
const byte GDCI_emptyExists;
const ChunkHandle GDCI_enableDisableList;
const optr GDCI_exportGroup;
const GenDocumentControlFeatures GDCI_features;
const optr GDCI_importGroup;
const ChunkHandle GDCI_noNameText;
const optr GDCI_openGroup;
const optr GDCI_saveAsGroup;
const GenFileSelectorType GDCI_selectorType;
const FileLongName GDCI_targetDocName;
const ChunkHandle GDCI_templateDir;
const optr GDCI_useTemplateGroup;
const optr GDCI_userLevelGroup;
const GenDocumentGroupAttrs GDGI_attrs;
const optr GDGI_documentControl;
const optr GDGI_genDisplay;
const optr GDGI_genDisplayGroup;
const optr GDGI_genDocument;
const optr GDGI_genView;
const optr GDGI_output;
const word GDGI_protocolMajor;
const word GDGI_protocolMinor;
const ChunkHandle GDGI_untitledName;
const GenDisplayAttrs GDI_attributes;
const GenDocumentAttrs GDI_attrs;
const MemHandle GDI_display;
const optr GDI_document;
const FileHandle GDI_fileHandle;
const FileLongName GDI_fileName;
const word GDI_operation;
const GenDocumentType GDI_type;
const word GDLI_numItems;
const word GDLI_queryMsg;
const ChunkHandle GFI_apps;
const GenFieldFlags GFI_flags;
const ChunkHandle GFI_genApplications;
const optr GFI_notificationDestination;
const byte GFI_numAppsToCheck;
const byte GFI_numAttachingApps;
const byte GFI_numDetachedApps;
const byte GFI_numRestartedApps;
const ChunkHandle GFI_processes;
const optr GFI_visParent;
const FileSelectorAttrs GFSI_attrs;
const optr GFSI_destination;
const FileSelectorFileCriteria GFSI_fileCriteria;
const Message GFSI_notificationMsg;
const GenFileSelectorSelection GFSI_selection;
const GenGadgetAttributes GGI_attrs;
const optr GH_currentBody;
const ClassStruct *GH_currentTool;
const optr GH_floater;
const word GH_initializeFloaterData;
const Message GIGI_applyMsg;
const GenItemGroupBehaviorType GIGI_behaviorType;
const optr GIGI_destination;
const word GIGI_numSelections;
const word GIGI_selection;
const GenItemGroupStateFlags GIGI_stateFlags;
const GenInteractionAttrs GII_attrs;
const word GII_identifier;
const GenInteractionType GII_type;
const GenInteractionVisibility GII_visibility;
const GenAttrs GI_attrs;
const int GI_comp;
const int GI_kbdAccelerator;
const int GI_link;
const GenStates GI_states;
const word GI_suspendCount;
const GroupUnsuspendOps GI_unsuspendOps;
const int GI_visMoniker;
const word GOAMI_areaAttrArrayHandle;
const ChunkHandle GOAMI_bodyList;
const word GOAMI_charAttrArrayHandle;
const word GOAMI_grObjStyleArrayHandle;
const word GOAMI_graphicArrayHandle;
const word GOAMI_lineAttrArrayHandle;
const word GOAMI_nameArrayHandle;
const word GOAMI_paraAttrArrayHandle;
const optr GOAMI_text;
const word GOAMI_textStyleArrayHandle;
const word GOAMI_typeArrayHandle;
const GrObjActionModes GOI_actionModes;
const word GOI_areaAttrToken;
const GrObjAttrFlags GOI_attrFlags;
const word GOI_lineAttrToken;
const GrObjLocks GOI_locks;
const GrObjMessageOptimizationFlags GOI_msgOptFlags;
const ChunkHandle GOI_normalTransform;
const GrObjOptimizationFlags GOI_optFlags;
const ChunkHandle GOI_spriteTransform;
const GrObjTempModes GOI_tempState;
GrObjFunctionsActive GOMD_goFA;
GStateHandle GOMD_gstate;
const word GOTII_specInitData;
const ClassStruct *GOTII_toolClass;
const word *GOVGI_class;
const GrObjVisGuardianFlags GOVGI_flags;
const optr GOVGI_ward;
const word GPICI_lastNumSelected;
const ChunkHandle GPI_longTermMoniker;
const PointWWFixed GSI_gstringCenterTrans;
const word GSI_vmemBlockHandle;
const optr GSYI_defaultField;
const optr GSYI_defaultScreen;
const GeodeHandle GSYI_defaultUI;
const int GSYI_screenComp;
const GeodeHandle GSYI_specificUI;
const ChunkHandle GTCI_toolGroupList;
const ChunkHandle GTCI_toolboxList;
const optr GTGI_controller;
const Message GTI_actionMsg;
const optr GTI_destination;
word GTP_curPos;
word GTP_curSize;
word GTP_curSlot;
dword GTP_id;
Handle GTP_optBlock;
PointDWFixed GTP_selectionCenterDOCUMENT;
Handle GTP_vmFile;
const word GTXI_applyMsg;
const GenTextAttrs GTXI_attrs;
const optr GTXI_destination;
const word GTXI_maxLength;
const GenTextStateFlags GTXI_stateFlags;
const ChunkHandle GTXI_text;
const GenViewControlAttrs GVCI_attrs;
const word GVCI_maxZoom;
const word GVCI_minZoom;
const word GVCI_scale;
const GenViewAttrs GVI_attrs;
const ColorQuad GVI_color;
const optr GVI_content;
const RectDWord GVI_docBounds;
const optr GVI_guardian;
const GenViewDimensionAttrs GVI_horizAttrs;
const optr GVI_horizLink;
const PointDWord GVI_increment;
const GenViewInkType GVI_inkType;
const PointDWFixed GVI_origin;
const PointWWFixed GVI_scaleFactor;
const GenViewDimensionAttrs GVI_vertAttrs;
const optr GVI_vertLink;
const Message GVLI_applyMsg;
const optr GVLI_destination;
const GenValueDisplayFormat GVLI_displayFormat;
const WWFixedAsDWord GVLI_maximum;
const GenValueStateFlags GVLI_stateFlags;
const optr GVWLC_listObj;
$2ACED5B9D796D93757AEB7868B198887 _HARMONICS;
const GeodeHandle HCI_compressLib;
const MemHandle HCI_curFile;
const HelpType HCI_helpType;
const MemHandle HCI_historyBuf;
const word HCI_nameArrayVM;
optr HINT_ALIGN_BOTTOM_EDGE_WITH_OBJECT;
optr HINT_ALIGN_LEFT_EDGE_WITH_OBJECT;
optr HINT_ALIGN_RIGHT_EDGE_WITH_OBJECT;
optr HINT_ALIGN_TOP_EDGE_WITH_OBJECT;
word HINT_CUSTOM_SYS_MENU;
word HINT_FILE_SELECTOR_FILE_LIST_WIDTH;
word HINT_FILE_SELECTOR_NUMBER_OF_FILES_TO_SHOW;
GenFileSelectorScalableUIEntryArray HINT_FILE_SELECTOR_SCALABLE_UI_DATA;
word HINT_GADGET_TEXT_COLOR;
GenControlUserData HINT_GEN_CONTROL_MODIFY_INITIAL_UI;
GenControlScalableUIEntry HINT_GEN_CONTROL_SCALABLE_UI_DATA;
GenControlUserData HINT_GEN_CONTROL_USER_MODIFIED_UI;
Rectangle HINT_GEN_CUSTOM_EXTRA_MARGINS;
SystemAttrs HINT_IF_SYSTEM_ATTRS;
word HINT_INDENT_CHILDREN;
optr HINT_INTERACTION_ACTIVATED_BY;
ZoomLevel HINT_MAXIMUM_ZOOM_LEVEL;
Rectangle HINT_PRIMARY_OPEN_ICON_BOUNDS;
word HINT_SEEK_SLOT;
ColorQuad HINT_TEXT_WASH_COLOR;
WWFixedAsDWord HINT_VALUE_DISPLAYS_RANGE;
GenValueIntervals HINT_VALUE_DISPLAY_INTERVALS;
optr HINT_VIEW_SHARES_SPACE_WITH_VIEW_ABOVE;
optr HINT_VIEW_SHARES_SPACE_WITH_VIEW_BELOW;
optr HINT_VIEW_SHARES_SPACE_WITH_VIEW_TO_LEFT;
optr HINT_VIEW_SHARES_SPACE_WITH_VIEW_TO_RIGHT;
word HINT_WRAP_AFTER_CHILD_COUNT;
const HighScoreAttributes HSI_attrs;
const GeodeToken HSI_creator;
const FileHandle HSI_fileHandle;
const ChunkHandle HSI_fileName;
const int HSI_highScoreLine1;
const int HSI_highScoreLine2;
const int HSI_highScoreLine3;
const int HSI_highScoreLine4;
const int HSI_highScoreTitle;
const ScoreType HSI_scoreType;
const int HierarchicalGrab;
const ImportControlAttrs ICI_attrs;
const ImpexDataClasses ICI_dataClasses;
const optr ICI_destination;
const word ICI_message;
const word III_leftIcon;
const ChunkHandle III_leftIconList;
const word III_rightIcon;
const ChunkHandle III_rightIconList;
const byte II_antMask;
const TimerHandle II_antTimer;
const word II_antTimerID;
const GStateHandle II_cachedGState;
const Message II_dirtyMsg;
const optr II_dirtyOutput;
const InkFlags II_flags;
const IconsShown II_numIcons;
const Color II_penColor;
const ChunkHandle II_segments;
const Rectangle II_selectBounds;
const InkTool II_tool;
const word IMCI_childBlock;
const word IMCI_dataBlock1;
const word IMCI_dataBlock2;
const ImpexMapFlags IMCI_flags;
const word IMCI_mapListBlock;
const Point IMPI_bitmapMouseOffset;
const byte IMPI_flags;
const Point IMPI_lastPos;
const InkTool IMPI_oldTool;
const VMBlockHandle IMPI_pasteBitmap;
const GStateHandle IMPI_pasteBitmapGState;
const Rectangle IMPI_pastedBounds;
const word IMPI_pastedEnd;
const word IMPI_pastedStart;
MACRO__IOFBF IOFBF;
MACRO__IOFBF _IOLBF;
MACRO__IOFBF _IONBF;
const byte IPI_doNotTranslateGState;
void IRReceiveCancel(void);
void IRReceiveExit(void);
Boolean __cdecl IRReceiveInit(word token, optr notifyObject, Message recvStartMsg, Message recvMsg, Message stoppedMsg);
void IRTransmitCancel(void);
void IRTransmitExit(void);
Boolean __cdecl IRTransmitInit(ObexTDMailboxTransAddr *transAddr);
Boolean __cdecl IRTransmitSend(ObexTDMailboxTransAddr *transAddr, FileDDAppRef *appRef);
void ImageViewerCleanUp(void);
ImageViewerDrawStatus __cdecl ImageViewerConvertToBitmap(DocumentInfo *info, VMFileHandle *bitMapFile, VMBlockHandle *bitMapBlock);
ImageViewerDrawStatus __cdecl ImageViewerConvertToBitmapAndGiveSize(DocumentInfo *info, VMFileHandle *bitMapFile, TCHAR *ptcVMFileName, VMBlockHandle *bitMapBlock, word *pwHeight, word *pwWidth, word *pwZoomValue);
ImageViewerDrawStatus __cdecl ImageViewerDrawBitmapToGState(DocumentInfo *info, GStateHandle gstate, word *pwHeight, word *pwWidth, word *pwZoomValue);
void __cdecl ImsgMainEngine(IMSG_INPUT_ptr imsgInput, IMSG_OUTPUT_ptr imsgOutput);
const word LGCI_datetimeLineOffset;
const word LGCI_directionLineOffset;
const word LGCI_durationLineOffset;
const word LGCI_hugeArrayHandle;
const byte LGCI_listType;
const word LGCI_nameNumberLineOffset;
const byte LGCI_spacingSet;
const word LGCI_typeLineOffset;
const word LII_currLevel;
const ChunkHandle LII_levelBitmapList;
const ChunkHandle LII_typeBitmap;
const optr LLCI_dialogs;
void LOG_CONTROL_NOTIFY_ENTRY_SELECTED_MSG();
const word LWUDI_textID;
const optr LWUDI_textObj;
const int LinkPart;
const ChunkHandle MACI_defaultAddrs;
const GeodeHandle MACI_driver;
const word MACI_refCount;
const optr MACI_validDest;
const Message MACI_validMsg;
const word MAI_curIndex;
const GStateHandle MAI_gstate;
const Message MAI_notifyMsg;
const optr MAI_notifyObj;
const TimerHandle MAI_timerHan;
const word MAI_timerID;
void *__pascal MALLOC(word blockSize, GeodeHandle geodeHan, word zeroInit);
word MBA_descSize;
byte MBA_descType;
byte MBA_description[];
const Message MFAI_getPackageFileActionCompletionMsg;
const optr MFAI_getPackageFileActionCompletionOptr;
const MetaBase MI_base;
void MODEM_DATA_NOTIFICATION();
void MODEM_END_CALL_NOTIFICATION();
const word MPBI_gen;
const ChunkHandle MPBI_progressGauge;
const ThreadHandle MPBI_thread;
const MPBType MPBI_type;
const ChunkHandle MPGI_bytes;
const ChunkHandle MPGI_graphic;
const ChunkHandle MPGI_pages;
const ChunkHandle MPGI_percent;
const ChunkHandle MPGI_text;
optr MRFAMI_image;
const optr MSACI_pc;
const word MSACI_pcAttrs;
const ChunkHandle MSACI_trans;
const ChunkHandle MSCI_dataTypes;
const ChunkHandle MSCI_transactions;
MailboxDataFormat MSCT_bodyFormat;
ChunkHandle MSCT_bodyRef;
MailboxStorage MSCT_bodyStorage;
GeodeToken MSCT_destApp;
FileDateAndTime MSCT_endBound;
MailboxMessageFlags MSCT_messageFlags;
MSCObjectData MSCT_objData;
FileDateAndTime MSCT_startBound;
ChunkHandle MSCT_summary;
void MSG_ACCESS_POINT_CONTROL_CHANGING_LEVELS();
void MSG_AL_APP_SELECTED();
void MSG_AL_LAUNCH_SELECTED_APP();
void MSG_APPLYMESSAGE_FOR_MSGCENTRELIST();
void MSG_APP_RECEIVING_DATA();
void MSG_APP_S_ABORT_IND(MemHandle mhAbortIndData);
void MSG_APP_S_COMMANDID_IND(const word wCmdID);
void MSG_APP_S_COMMAND_CNF(const Boolean BAckOrNack, MemHandle mhCommandCnfData);
void MSG_APP_S_COMMAND_IND(MemHandle mhCommandIndData);
void MSG_APP_S_CONNECT_CNF(const Boolean BAckOrNack, MemHandle mhConnectCnfData);
void MSG_APP_S_CONNECT_IND(MemHandle mhConnectData);
void MSG_APP_S_DISCONNECT_IND(const word wReasonLength, MemHandle mhDIS_ind, const SCEP_IF_Status ifStatus, const dword dwBytesRequired);
Boolean MSG_BARRING_ALTERNATE_LINE_SELECTED();
void MSG_BARRING_APPLY_CANCEL_REQUEST();
void MSG_BARRING_APPLY_CLEAR_ALL();
void MSG_BARRING_APPLY_CLOSE();
void MSG_BARRING_APPLY_GET_STATUS();
void MSG_BARRING_APPLY_NETWORK_PASSWD(byte command);
void MSG_BARRING_ECI_STATUS(word messageId, MemHandle structure);
SSSetCallType MSG_BARRING_GET_CALL_TYPE();
void MSG_BARRING_GET_NETWORK_PASSWD();
void MSG_BARRING_UPDATE_TITLE();
void MSG_BC_BORDER_SIDES_STATUS();
void MSG_BC_BORDER_TYPE_STATUS();
void MSG_BC_SET_BORDER_ANCHOR();
void MSG_BC_SET_BORDER_BITS();
void MSG_BC_SET_BORDER_SPACING();
void MSG_BC_SET_BORDER_TYPE();
void MSG_BC_SET_BORDER_WIDTH();
void MSG_BC_SET_SHADOW_WIDTH();
void MSG_BC_SET_SIMPLE_BORDER();
void MSG_BG_ACTIVATE_REAL_ESTATE_RESIZE();
void MSG_BG_REAL_ESTATE_HANDLE_HIT_DETECTION();
void MSG_CALENDAR_ADD_EVENT(CalendarEventParamStruct *params, optr completionOptr, Message completionMsg);
void MSG_CALENDAR_CHECK_IF_EVENT_EXISTS(FileDateAndTime startDateTime, FileDateAndTime endDateTime, optr completionOptr, Message completionMsg);
void MSG_CALENDAR_DELETE_EVENT_BY_ID(CalendarEventID eventID, optr completionOptr, Message completionMsg);
void MSG_CALENDAR_GET_EVENT_BY_ID(CalendarEventID eventID, GeodeHandle owner, optr completionOptr, Message completionMsg);
void MSG_CALENDAR_MODIFY_EVENT_BY_ID(CalendarEventParamStruct *params, CalendarEventID eventID, optr completionOptr, Message completionMsg);
word MSG_CLEAN_UP();
void MSG_CLOSE_BUBBLE();
void MSG_CMFA_ALLOCATE_PACKAGE_ARRAY(word headerSize);
void MSG_CMFA_CANCEL_GET_PACKAGE();
MemHandle MSG_CMFA_GET_FILE_DETAILS_BLOCK();
void MSG_CMFA_GET_PACKAGE(optr packageArray, word n, ConnectTransferFlags flags, optr progressDialog, optr completionOptr, Message completionMsg);
void MSG_CMFA_GET_PACKAGE_GIVEN_PACKAGE_FILE(DiskHandle localDiskHandle, TCHAR *localPackageFilePath, TCHAR *remotePackagePath, ConnectTransferFlags flags, optr progressDialog, optr completionOptr, Message completionMsg);
void MSG_CMFA_LIST_PACKAGES(TCHAR *remotePath, ConnectTransferFlags flags, optr progressDialog, optr completionOptr, Message completionMsg);
void MSG_CMFA_SET_FILE_ACTION(optr fileActionOptr, Message fileActionMsg);
void MSG_CMFA_SET_PACKAGE_DESTINATION(DiskHandle rootDrive, TCHAR *rootPath);
void MSG_CMF_FINISH_FILE_ARRAY(ConnectError error);
void MSG_CMF_GET_FILE_ARRAY(optr array, ConnectTransferFlags flags, optr progressDialog, optr completionOptr, Message completionMsg);
void MSG_CMF_SEND_FILE_ARRAY(optr array, ConnectTransferFlags flags, optr progressDialog, optr completionOptr, Message completionMsg);
void MSG_CMP_BACK();
void MSG_CMP_CLEAR_DIALOG_RESET();
void MSG_CMP_CLOSE();
void MSG_CMP_CTRL_CLEAR();
void MSG_CMP_EDIT();
MemHandle MSG_CMP_FIND_TUNE_NAME(MemHandle hTune);
void MSG_CMP_GET_OTA(TCHAR *ptcFile);
void MSG_CMP_INITIATE(TCHAR *ptFile);
void MSG_CMP_ONE_NOTE_PLAY();
int MSG_CMP_ONE_NOTE_TO_STRING(byte *tone_string);
void MSG_CMP_OTA_OPEN(TCHAR *ptcFile);
void MSG_CMP_PLAY(Boolean bChangePlayButton);
void MSG_CMP_PLAY_FROM_BUTTON();
Boolean MSG_CMP_SAVE_OK(optr newDlg);
void MSG_CMP_STOP_FROM_BUTTON();
int MSG_CMP_TEST();
void MSG_CMP_UNDO_DIALOG_RESET();
void MSG_CMP_UNDO_DIALOG_SET(optr dialog);
void MSG_CMP_UPDATE_NAME(TCHAR *ptcFileName, Boolean boolOnMemoryCard);
void MSG_CMP_VP_ECI_RECEIVE(word messageId, MemHandle structure);
void MSG_CONNECT_ALLOCATE_VARDATA_PATH_BUFFERS();
void MSG_CONNECT_CANCEL_TRANSFER();
ConnectError MSG_CONNECT_CLOSE_CONNECTION();
void MSG_CONNECT_CONTACT_SERVER();
void MSG_CONNECT_CONTINUE_GET_AFTER_TRANSFER();
void MSG_CONNECT_CONTINUE_SEND_AFTER_TRANSLATION();
void MSG_CONNECT_DELETE_VARDATA_PATH_BUFFERS();
void MSG_CONNECT_FINISH_GET_AFTER_TRANSLATION();
void MSG_CONNECT_FINISH_SEND_AFTER_TRANSFER();
void MSG_CONNECT_FORCE_GEODE_TO_QUIT(GeodeHandle geode, word completionMsg, optr completionOptr, GeodeHandle exceptThisApp);
void MSG_CONNECT_GET_FILE(DiskHandle localDiskHandle, TCHAR *localFilePath, TCHAR *remoteFilePath, char *localFormat, char *remoteFormat, optr progressDialog, ConnectTransferFlags flags, optr completionOptr, Message completionMsg);
ConnectError MSG_CONNECT_HANDLE_ERROR(ConnectError error, TCHAR *arg1, TCHAR *arg2);
void MSG_CONNECT_MMC_TRANSFER_STATUS(MMCReturnType returnType, dword bytesThisFile);
void MSG_CONNECT_OPEN_CONNECTION(ConnectionType cType, sword timeOut, optr completionOptr, Message completionMsg);
ConnectError MSG_CONNECT_PREPARE_FOR_TRANSFER(ConnectTransferFlags flags);
void MSG_CONNECT_PROGRESS_DIALOG_CANCEL();
void MSG_CONNECT_PROGRESS_DIALOG_DESTROY_DIALOG();
void MSG_CONNECT_PROGRESS_DIALOG_DISMISS_DIALOG();
ConnectProgressDialogFlags MSG_CONNECT_PROGRESS_DIALOG_GET_FLAGS();
void MSG_CONNECT_PROGRESS_DIALOG_INITIATE_DIALOG(ConnectProgressDialogFlags flags);
void MSG_CONNECT_PROGRESS_DIALOG_REPORT_PROGRESS(ConnectProgressType type, dword data);
void MSG_CONNECT_PROGRESS_DIALOG_RESUME_CANCEL();
void MSG_CONNECT_PROGRESS_DIALOG_SET_CANCEL_ACTION(optr cancellationOptr, Message cancellationMsg);
void MSG_CONNECT_PROGRESS_DIALOG_SET_TRANSFER_SIZE(dword size);
void MSG_CONNECT_PROGRESS_DIALOG_STARTING_NEW_FILE(MemHandle dataBlock);
ConnectProgressDialogFlags MSG_CONNECT_PROGRESS_DIALOG_SUSPEND_CANCEL();
void MSG_CONNECT_RESET_AFTER_TRANSFER();
void MSG_CONNECT_SEND_FILE(DiskHandle localDiskHandle, TCHAR *localFilePath, TCHAR *remoteFilePath, char *localFormat, char *remoteFormat, optr progressDialog, ConnectTransferFlags flags, optr completionOptr, Message completionMsg);
void MSG_CONNECT_SETTINGS_CONTROL_ADD_FOLDER();
void MSG_CONNECT_SETTINGS_CONTROL_CLOSE_DIALOG();
void MSG_CONNECT_SETTINGS_CONTROL_DELETE_FOLDER();
void MSG_CONNECT_SETTINGS_CONTROL_DO_RENAME_FOLDER_DIALOG();
ConnectionType MSG_CONNECT_SETTINGS_CONTROL_GET_CONNECTION_TYPE_SETTING();
void MSG_CONNECT_SETTINGS_CONTROL_GET_CONNECTION_TYPE_TEXT(TCHAR *buffer, word bufferLength);
DataGroup MSG_CONNECT_SETTINGS_CONTROL_GET_DATA_GROUP_SETTING();
void MSG_CONNECT_SETTINGS_CONTROL_GET_DATA_GROUP_TEXT(TCHAR *buffer, word bufferLength);
DestinationType MSG_CONNECT_SETTINGS_CONTROL_GET_DESTINATION_TYPE_SETTING();
void MSG_CONNECT_SETTINGS_CONTROL_GET_DESTINATION_TYPE_TEXT(TCHAR *buffer, word bufferLength);
void MSG_CONNECT_SETTINGS_CONTROL_GET_DIRECTORY_PATH_DISPLAY_TEXT(TCHAR *buffer, word bufferLength);
void MSG_CONNECT_SETTINGS_CONTROL_GET_DIRECTORY_PATH_TEXT(TCHAR *buffer, word bufferLength);
void MSG_CONNECT_SETTINGS_CONTROL_GET_DRIVE_TEXT(TCHAR *buffer, word bufferLength);
void MSG_CONNECT_SETTINGS_CONTROL_GET_FILE_PATH_TEXT(TCHAR *buffer, word bufferLength);
void MSG_CONNECT_SETTINGS_CONTROL_GET_MEMORYCARD_FOLDER(TCHAR *buffer, word bufferLength);
void MSG_CONNECT_SETTINGS_CONTROL_INITIATE_DIALOG();
void MSG_CONNECT_SETTINGS_CONTROL_INIT_DYNAMIC_LIST();
void MSG_CONNECT_SETTINGS_CONTROL_READ_SETTINGS();
void MSG_CONNECT_SETTINGS_CONTROL_RENAME_FOLDER();
void MSG_CONNECT_SETTINGS_CONTROL_SAVE_CT_GIG_SETTINGS();
void MSG_CONNECT_SETTINGS_CONTROL_SAVE_GIG_SETTINGS();
void MSG_CONNECT_SETTINGS_CONTROL_WRITE_SETTINGS();
void MSG_CONNECT_SETTINGS_DISPLAY_CONTROL_UPDATE_UI();
void MSG_CONNECT_SET_TRANSFER_DRIVER(char *driver);
ConnectError MSG_CONNECT_START_TRANSLATION(DiskHandle sourceDiskHandle, TCHAR *sourceFilePath, char *sourceFormat, DiskHandle destDiskHandle, TCHAR *destFilePath, char *destFormat);
void MSG_CONNECT_TRANSLATION_DONE(ConnectTranslateDriverError xlatError, MemHandle driverArgs);
void MSG_CONNECT_USE_OPEN_DIALOG(optr progressDialog);
void MSG_CONTACT_EDIT_ADD_FIELD_SPEED_DIAL();
void MSG_CONTACT_EDIT_CHANGE_FIELD_LABEL();
void MSG_CONTACT_EDIT_CHANGE_LABEL_OF_FOCUSED_FIELD();
void MSG_CONTACT_EDIT_COPY_FIELDS_TO_CLIPBOARD();
void MSG_CONTACT_EDIT_COPY_RECORD();
void MSG_CONTACT_EDIT_CORRECT_FAX_HALF_LINES();
void MSG_CONTACT_EDIT_CORRECT_TEL_DATA_HALF_LINES();
void MSG_CONTACT_EDIT_CORRECT_TEL_FAX_HALF_LINES();
void MSG_CONTACT_EDIT_CORRECT_TEL_HALF_LINES();
void MSG_CONTACT_EDIT_DELETE_FIELD();
void MSG_CONTACT_EDIT_DELETE_RECORD();
void MSG_CONTACT_EDIT_DISPLAY_NEXT_RECORD();
void MSG_CONTACT_EDIT_DISPLAY_PREVIOUS_RECORD();
void MSG_CONTACT_EDIT_FETCH_URL();
void MSG_CONTACT_EDIT_INITIATE_ADD_FIELD_DIALOG();
void MSG_CONTACT_EDIT_INITIATE_MENU_DIALOG();
void MSG_CONTACT_EDIT_INITIATE_OPTIONS_DIALOG();
void MSG_CONTACT_EDIT_INITIATE_REAL_OPTIONS_DIALOG();
void MSG_CONTACT_EDIT_MARK_MODIFIED();
void MSG_CONTACT_EDIT_SAVE_AND_CLOSE();
void MSG_CONTACT_EDIT_SAVE_RECORD_DATA();
void MSG_CONTACT_EDIT_SET_FOCUS_TO_TOP_FIELD();
void MSG_CONTACT_EDIT_SET_SELECTION_TO_TOP_FIELD();
void MSG_CONTACT_EDIT_SHOW_GROUPS();
void MSG_CONTACT_GROUP_LIST_INIT();
void MSG_CONTACT_LIST_ALTERNATE_NOTIFY_CONTACT_SELECTED();
void MSG_CONTACT_LIST_CANCEL_CONTACT_NUMBER_POPUP();
void MSG_CONTACT_LIST_CLOSE_CONTACT_NUMBER_POPUP();
void MSG_CONTACT_LIST_COMPLETE_SEARCH();
void MSG_CONTACT_LIST_DO_GROUP_SEARCH();
RecordID MSG_CONTACT_LIST_GET_GROUP_LIMIT();
dword MSG_CONTACT_LIST_GET_ID_OF_SELECTED_RECORD();
void MSG_CONTACT_LIST_NOTIFY_CONTACT_SELECTED();
void MSG_CONTACT_LIST_PRESERVE_SEARCH_ON_NEXT_LOST_FOCUS();
void MSG_CONTACT_LIST_QUERY_NUMBER_LIST_MONIKER();
void MSG_CONTACT_LIST_SEARCH_TEXT_GAINED_FOCUS();
void MSG_CONTACT_LIST_SEARCH_TEXT_LOST_FOCUS();
void MSG_CONTACT_LIST_SEARCH_TEXT_TIMEOUT_MSG();
void MSG_CONTACT_LIST_SELECTION_CHANGED();
void MSG_CONTACT_LIST_SELECT_CONTACT_NUMBER();
void MSG_CONTACT_LIST_SELECT_CURRENT_CONTACT();
void MSG_CONTACT_PARENT_GROUP_LIST_RESET();
void MSG_CONTACT_SIM_LIST_ALTERNATE_NOTIFY_CONTACT_SELECTED();
void MSG_CONTACT_SIM_LIST_CLEAR_SELECTED_ENTRIES();
void MSG_CONTACT_SIM_LIST_CUR_SEL_TIMER_SEND_NOW();
void MSG_CONTACT_SIM_LIST_CUR_SEL_TIMER_TIMEOUT_MSG();
void MSG_CONTACT_SIM_LIST_GAINED_FOCUS();
void MSG_CONTACT_SIM_LIST_LOST_FOCUS();
void MSG_CONTACT_SIM_LIST_NOTIFY_CONTACT_SELECTED();
void MSG_CONTACT_SIM_LIST_SEARCH_ENTRIES();
void MSG_CONTACT_SIM_LIST_SELECT_CURRENT_CONTACT();
word MSG_CONT_CLEAN_UP();
void MSG_CONT_DIMM_ACTION(word dimm_state);
word MSG_CONT_DRAW_LINE(word position, byte *line, word length);
void MSG_CONT_GET_IMAGE_INFO(DocumentInfo *info);
void MSG_CONT_INIT_VIEWER(struct image_info *size_info, DocumentInfo *info, word inline_flag, word caller_app);
void MSG_CONT_SET_ERROR_FLAG(word value);
void MSG_CONT_SET_SCALE(word zoom);
void MSG_CPC_MERGE_TEXT_SET_VALID();
word MSG_CREATE_BITMAP(word width, word height);
void MSG_CSA_CONTINUE_DETACH();
ConnectSubApplicationFlags MSG_CSA_GET_FLAGS();
ConnectSubApplicationFlags MSG_CSA_SET_FLAGS(ConnectSubApplicationFlags flagsToSet, ConnectSubApplicationFlags flagsToClear);
void MSG_CS_SET_CF_INDEX();
void MSG_CS_SET_CF_RGB_BLUE();
void MSG_CS_SET_CF_RGB_GREEN();
void MSG_CS_SET_CF_RGB_RED();
void MSG_CS_SET_DRAW_MASK();
void MSG_CS_SET_FILLED_STATUS();
void MSG_CS_SET_PATTERN();
void MSG_DCC_USER_CHANGED_DROP_CAP();
optr MSG_DIALOG_GET_PRINTTER_CONTROLLER();
byte MSG_DIALOG_GET_PRINTTER_INFO();
void MSG_DIALOG_SET_PRINTTER_INFO(byte info);
Boolean MSG_DIVERTING_ALTERNATE_LINE_SELECTED();
void MSG_DIVERTING_APPLY_CANCEL_REQUEST();
void MSG_DIVERTING_APPLY_CLEAR_ALL();
void MSG_DIVERTING_APPLY_CLOSE();
void MSG_DIVERTING_APPLY_GET_STATUS();
void MSG_DIVERTING_APPLY_VMB_NUMBER(byte command);
void MSG_DIVERTING_CANCEL_BUSY();
void MSG_DIVERTING_CANCEL_NOT_REACHABLE();
void MSG_DIVERTING_CANCEL_NO_REPLY();
void MSG_DIVERTING_CANCEL_UNCOND();
void MSG_DIVERTING_ECI_STATUS(word messageId, MemHandle structure);
SSSetCallType MSG_DIVERTING_GET_CALL_TYPE();
void MSG_DIVERTING_GET_VMB_NUMBER();
void MSG_DIVERTING_UPDATE_TITLE();
void MSG_DIVERTING_VMB_STATUS(word messageId, MemHandle structure);
void MSG_DRAW_GIF_BACKROUND();
word MSG_DRAW_LINE(word x_offset, word y_offset, word position, byte *line, word length);
void MSG_DRAW_MOUSE_CROSS(byte draw_once);
void MSG_EFS_RESET_SEARCH();
void MSG_EUDC_ADD_NEW_WORD_TO_USER_DICTIONARY();
void MSG_EUDC_CLOSE_EDIT_BOX();
void MSG_EUDC_DELETE_SELECTED_WORD_FROM_USER_DICTIONARY();
void MSG_EUDC_GET_USER_DICTIONARY_LIST_MONIKER();
void MSG_EUDC_LOAD_DICTIONARY();
void MSG_EUDC_UPDATE_SELECTED_WORD();
void MSG_EXPORT_CONTROL_CANCEL();
void MSG_EXPORT_CONTROL_EXPORT();
ChunkHandle MSG_EXPORT_CONTROL_GET_FILE_SELECT_GROUP_OFFSET();
ChunkHandle MSG_EXPORT_CONTROL_GET_FORMAT_GROUP_OFFSET();
void MSG_EXPORT_CONTROL_NEW_LIBRARY_DISK();
void MSG_FC_REQUEST_MONIKER();
void MSG_FFD_ADD_EXISTING_GROBJ_TO_LAYOUT(FieldID index, optr fieldOptr, optr labelOptr);
void MSG_FFD_ADD_FIELD_TO_LAYOUT(byte index, word width);
void MSG_FFD_ADD_NAME_TO_LAYOUT_LIST(byte colNum, word width);
void MSG_FFD_ADD_NAME_TO_NOT_IN_LAYOUT_LIST(byte colNum);
void MSG_FFD_ADD_PAGE_NUMBER_TO_LAYOUT();
void MSG_FFD_ADD_PASTED_FIELD_TO_LAYOUT(optr guardianOptr, optr labelOptr, FieldID colNum);
void MSG_FFD_ATTACH_FILE(VMBlockHandle ssMapBlock, VMFileHandle fileHandle);
void MSG_FFD_ATTACH_UI(MemHandle setupData, FileHandle fileHandle);
void MSG_FFD_CHANGE_COMPUTED_FIELD(MemHandle textHandle);
Boolean MSG_FFD_CHANGE_FIELD_ATTRIBUTES(MemHandle fieldInfoHandle, byte colNum);
void MSG_FFD_CHANGE_FIELD_ATTRIBUTES_WITH_RESPONSE(MemHandle fieldInfoHandle, byte colNum, optr outputOD, Message successMessage, Message resultMessage);
void MSG_FFD_CHANGE_NAME_IN_LAYOUT_LIST(byte colNum);
void MSG_FFD_CHANGE_NAME_IN_NOT_IN_LAYOUT_LIST(byte colNum);
void MSG_FFD_CHANGE_SCREEN_FIELD_ATTRIBUTES(FieldID colNum, FieldDataType dataType);
FieldRangeCheck MSG_FFD_CHECK_FIELD_DATA_BETWEEN_MIN_AND_MAX(word column, FloatNum dataValue);
Boolean MSG_FFD_CHECK_FIELD_DATA_TYPE(word column, MemHandle dataHandle, dword floatAddress);
InsertResult MSG_FFD_COMMIT_TEMP_DATA_ROW_TO_DATABASE(Boolean displayErrorMessages, CommitRecordType commitRecordType);
void MSG_FFD_CREATE_DATA_BLOCK_AND_SEND_NOTIFICATION();
Boolean MSG_FFD_CREATE_NEW_FIELD(MemHandle fieldInfoHandle, FieldID far *colNum);
void MSG_FFD_CREATE_NEW_FIELD_WITH_RESPONSE(MemHandle fieldInfoHandle, optr outputOD, Message successMessage, Message resultMessage);
byte MSG_FFD_CREATE_NEW_LAYOUT(MemHandle singleRecordGrObjBodyHandle, MemHandle multiRecordGrObjBodyHandle, ChunkHandle ffGrObjBodyChunk, optr ffGrObjHeadOptr);
Boolean MSG_FFD_CURRENTLY_EDITING_A_RECORD();
void MSG_FFD_DELETE_CHUNK_ELEMENT_FROM_LAYOUT(FieldID colNum);
void MSG_FFD_DELETE_CURRENT_RECORD();
Boolean MSG_FFD_DELETE_FIELD(byte colNum);
void MSG_FFD_DELETE_FIELDS_BUT_ASK_FIRST(MemHandle fieldIDListHandle, FieldListQuery list, word numItems);
void MSG_FFD_DELETE_FIELD_FROM_LAYOUT(byte index);
FFDeleteLayoutResult MSG_FFD_DELETE_LAYOUT(byte layoutNum, optr ffGrObjHeadOptr);
void MSG_FFD_DELETE_NAME_FROM_LAYOUT_LIST(byte colNum, FieldListQuery whichList);
void MSG_FFD_DELETE_NAME_FROM_NOT_IN_LAYOUT_LIST(byte colNum);
void MSG_FFD_DISPLAY_TEMP_ROW_COMPUTED_FIELDS();
void MSG_FFD_DISPLAY_USER_DEFINED_FORMAT(TCHAR *fieldText, FloatNum *floatNum, FormatIdType displayFormat);
void MSG_FFD_DISPLAY_VALIDATION_ERROR(FieldID colNum, FFFieldValidationType retval);
void MSG_FFD_DRAW_MARGINS(GStateHandle gstate);
void MSG_FFD_EDIT_EXISTING_RECORD(word recordToEdit, Boolean moveGrObjBody, Boolean fieldGrabTarget, EditRecordType editRecordType);
void MSG_FFD_EDIT_EXPRESSION(MemHandle tokenStreamHandle, optr expressionBuilderOptr, optr resultDestinationOptr, Message resultMessage);
void MSG_FFD_EDIT_FIELD_PROPERTIES(FieldListQuery whichList, word fieldID, optr editFieldOptr);
void MSG_FFD_EDIT_NEW_RECORD(Boolean moveGrObjBody, NewRecordType newRecordType, Boolean fieldGrabTarget);
void MSG_FFD_EXPORT_TO_CLIPBOARD(word begRecord, word endRecord);
void MSG_FFD_EXPORT_TRANSFER_FILE(ImpexTranslationParams *itParams, word begRecord, word endRecord);
void MSG_FFD_EXPRESSION_BUILDER_GET_FIELD_NAME(MemHandle childBlock, ChunkHandle textEditor, word fieldID);
Boolean MSG_FFD_FIELD_DEPENDED_UPON(FieldID colNum);
void MSG_FFD_FIELD_ORGANIZER_ENABLE_DISABLE(optr fieldOrganizer, VisUpdateMode updateMode);
void MSG_FFD_FLUSH_MAP_CONTROL();
sword MSG_FFD_FNO_INFO_ADD_ITEM(FieldID fieldID);
Boolean MSG_FFD_FNO_INFO_DECREASE_PRIORITY(word itemIndex);
void MSG_FFD_FNO_INFO_DELETE_ALL_ITEMS();
sword MSG_FFD_FNO_INFO_DELETE_ITEM(word itemIndex);
sword MSG_FFD_FNO_INFO_GET_FIELD(FieldID fieldID, FieldOrderMovementCommand movementCmd);
sword MSG_FFD_FNO_INFO_GET_NEXT_FIELD(FieldID fieldID, Boolean forwardFlag);
sword MSG_FFD_FNO_INFO_GET_NUM_ITEMS();
Boolean MSG_FFD_FNO_INFO_INCREASE_PRIORITY(word itemIndex);
void MSG_FFD_FNO_INFO_LIST_MONIKER_QUERY(optr dynList, word itemIndex);
void MSG_FFD_FNO_INFO_NUKE_FIELD(FieldID fieldID);
sword MSG_FFD_FNO_INFO_QUERY_ITEM(word itemIndex);
void MSG_FFD_FNO_INFO_SHADOW_DELETE();
void MSG_FFD_FNO_INFO_SHADOW_RESTORE();
void MSG_FFD_FNO_INFO_SHADOW_SAVE();
MemHandle MSG_FFD_GET_COLUMN_FIELD_NAME(word columnNum, TCHAR *textBuffer);
Boolean MSG_FFD_GET_COLUMN_MIN_OR_MAX_STRING(word columnNum, TCHAR *textBuffer, MinOrMaxValue minOrMax);
byte MSG_FFD_GET_CURRENT_LAYOUT();
byte MSG_FFD_GET_CURRENT_LAYOUT_INDEX();
MemHandle MSG_FFD_GET_CURRENT_LAYOUT_NAME(TCHAR *textBuffer);
ModeType MSG_FFD_GET_CURRENT_MODE();
byte MSG_FFD_GET_CUR_COL();
word MSG_FFD_GET_CUR_ROW();
FieldDataType MSG_FFD_GET_DATA_TYPE_AND_FLAGS(byte fieldNum, FieldDataTypesFlags *flags);
void MSG_FFD_GET_DATA_TYPE_AND_LENGTH(word fieldNum, word row, FieldDataType *dataType, word *dataLength);
VMFileHandle MSG_FFD_GET_DOCUMENT_HANDLE();
word MSG_FFD_GET_FIRST_MARKED_RECORD();
optr MSG_FFD_GET_GROBJ_BODIES_FOR_CURRENT_LAYOUT(optr *grobjBody2);
optr MSG_FFD_GET_GROBJ_BODY_FOR_LAYOUT(byte layoutNum, LayoutType layoutType);
byte MSG_FFD_GET_INDEXED_COL_NUM(byte index);
MemHandle MSG_FFD_GET_INDEXED_FIELD_NAME(word fieldNum, FieldListQuery whichList, TCHAR *textBuffer);
MemHandle MSG_FFD_GET_INDEXED_LAYOUT_NAME(byte layoutNameIndex, TCHAR *textBuffer);
MemHandle MSG_FFD_GET_LAYOUT_NAME(word layoutNum, TCHAR *textBuffer);
MemHandle MSG_FFD_GET_LAYOUT_NOTES(byte layoutNum, TCHAR *textBuffer);
byte MSG_FFD_GET_LAYOUT_NUM_FROM_INDEX(byte layoutNameIndex);
LayoutType MSG_FFD_GET_LAYOUT_TYPE(byte layoutNum, Boolean curLayout);
word MSG_FFD_GET_MAX_LENGTH(byte colNum);
void MSG_FFD_GET_MULTI_RECORD_BOUNDS(LayoutSize *bounds);
byte MSG_FFD_GET_NEXT_COL();
byte MSG_FFD_GET_NUMBER_OF_FIELDS(optr dList, FieldListQuery whichList);
byte MSG_FFD_GET_NUMBER_OF_LAYOUTS();
word MSG_FFD_GET_NUMBER_OF_PAGES();
byte MSG_FFD_GET_NUM_FIELDS();
byte MSG_FFD_GET_NUM_LAYOUTS();
word MSG_FFD_GET_NUM_MARKED_RECORDS();
word MSG_FFD_GET_NUM_RECORDS();
void MSG_FFD_GET_PAGE_BOUNDS(PageSizeReport *psr);
RecordOrderOption MSG_FFD_GET_RECORD_ORDER_FOR_CURRENT_LAYOUT();
RecordOrderOption MSG_FFD_GET_RECORD_ORDER_FOR_LAYOUT(byte layoutNum);
Boolean MSG_FFD_GET_SHOW_ONLY_MARKED();
void MSG_FFD_GET_SINGLE_RECORD_BOUNDS(LayoutSize *bounds);
MemHandle MSG_FFD_GET_SUBSET_TOKEN_STREAM();
void MSG_FFD_GO_TO_PAGE(word newPage, Boolean redraw);
void MSG_FFD_GRAB_TARGET_ON_FIRST_FIELD();
void MSG_FFD_IMPORT_TRANSFER_FILE(ImpexTranslationParams *itParams);
void MSG_FFD_INIT_CELL_PARAMS(FileHandle documentHandle, VMBlockHandle floatControllerVMBlock);
void MSG_FFD_INIT_MULTI_RECORD_LAYOUT(byte layoutNum, MemHandle mrGrObjBodyHandle, ChunkHandle mrGrObjBodyChunk, optr ffGrObjHeadOptr);
byte MSG_FFD_INIT_SINGLE_RECORD_LAYOUT(byte layoutNum, VMBlockHandle grObjBodyVMBlock, ChunkHandle grObjBodyChunk, optr grObjBodyOptr, LayoutType layoutType);
Boolean MSG_FFD_IS_THIS_A_NEW_RECORD();
void MSG_FFD_LOAD_CURRENT_RECORD_TO_SCREEN();
void MSG_FFD_LOAD_FIELD_WITH_NAME(optr fieldOptr, FieldID colNum);
void MSG_FFD_LOAD_FIELD_WITH_PAGE_NUMBER(optr fieldOptr);
void MSG_FFD_LOAD_FIELD_WITH_UNFORMATTED_TEXT(optr fieldOptr, FieldID colNum);
void MSG_FFD_LOAD_FLOAT_FORMAT_BLOCK(MemHandle floatFormatDataBlock, FormatIdType fieldFormat);
void MSG_FFD_LOAD_TEMP_ROW_FROM_ANOTHER_ROW(word recordToLoad);
void MSG_FFD_MOVE_FIELDS_INTO_LAYOUT_LIST(MemHandle fieldIDListHandle, word numItems);
void MSG_FFD_MOVE_FIELDS_OUT_OF_LAYOUT_LIST(MemHandle fieldIDListHandle, word numItems);
void MSG_FFD_NOTIFY_ATTRIBUTE_CHANGES();
void MSG_FFD_NOTIFY_CLIPBOARD_PASTE(optr grObjBody);
void MSG_FFD_NOTIFY_FIELD_NAVIGATION(optr textOptr, FieldID colNum, ShortcutCode shortcut);
void MSG_FFD_NOTIFY_LAYOUT_SIZE_GREW(LayoutSize srBounds, PageSizeReport psr);
void MSG_FFD_NOTIFY_MAP_CONTROL();
void MSG_FFD_PARSE_EXPRESSION(MemHandle stringHandle);
Boolean MSG_FFD_PARSE_PARSE_STRING(MemHandle stringHandle, MemHandle tokenBufferHandle, word tokenBufferSize, word *numTokens, VisTextRange *errorOffsetPtr);
void MSG_FFD_PARSE_RETURN_TEMPLATE(MemHandle tokenStreamHandle, word numTokens);
Boolean MSG_FFD_RECORD_CONTROL(FFRecordControlRequest rcpRequest, word data);
void MSG_FFD_REDRAW_MULTI_RECORD();
Boolean MSG_FFD_RENAME_LAYOUT(byte layoutNum, TCHAR *newLayoutName);
void MSG_FFD_REQUEST_FIELD_MONIKER(optr dList, word entryNum, FieldListQuery whichList);
void MSG_FFD_REQUEST_FIELD_MONIKER_DISABLED(optr dynList, word entryNum, FieldListQuery whichList);
void MSG_FFD_REQUEST_FIELD_NOTES(word entryNum, FieldListQuery whichList, optr notesDisplay);
Boolean MSG_FFD_REQUEST_UNIQUE_FIELD_NAME(optr textObject, TCHAR *candidate, TCHAR *newFieldName);
void MSG_FFD_REQUEST_UNIQUE_FIELD_NAME_WITH_RESPONSE(optr textObject, TCHAR *candidate, TCHAR *newFieldName, optr resultDest, Message resultMsg);
void MSG_FFD_RESULT_OF_FIELD_CREATION_TEMPLATE(FFFieldCreationResult fieldResult, byte colNum);
void MSG_FFD_RESULT_OF_FIELD_MODIFICATION_TEMPLATE(FFFieldCreationResult fieldResult, byte colNum, Boolean nameChanged);
void MSG_FFD_RESULT_OF_REQUEST_UNIQUE_FIELD_NAME();
Boolean MSG_FFD_REVERT_CURRENT_RECORD();
void MSG_FFD_SET_CURRENT_MODE(ModeType newMode);
void MSG_FFD_SET_CURRENT_MODE_TO_DATA_ENTRY();
void MSG_FFD_SET_CURRENT_MODE_TO_DESIGN();
void MSG_FFD_SET_CUR_COL(byte colNumber);
void MSG_FFD_SET_CUR_ROW(word rowNumber);
void MSG_FFD_SET_DOCUMENT_HANDLE(VMFileHandle documentFileHandle);
void MSG_FFD_SET_GROBJ_AM(optr grObjAMOptr);
void MSG_FFD_SET_LAYOUT_TYPE(byte layoutNum, LayoutType layoutType);
void MSG_FFD_SET_MULTI_RECORD_BOUNDS(LayoutSize bounds);
void MSG_FFD_SET_MULTI_RECORD_WITHIN_MARGINS(PageSizeReport *psr);
void MSG_FFD_SET_PAGE_BOUNDS(PageSizeReport *psr);
void MSG_FFD_SET_RECORD_ORDER_FOR_CURRENT_LAYOUT(RecordOrderOption recordOrder);
void MSG_FFD_SET_RECORD_ORDER_FOR_LAYOUT(byte layoutNum, RecordOrderOption recordOrder);
void MSG_FFD_SET_SINGLE_RECORD_BOUNDS(LayoutSize bounds);
void MSG_FFD_SET_TEMP_DATA_ROW_FOR_NEW_RECORD();
byte MSG_FFD_SORT_INFO_ADD_ITEM(word item);
Boolean MSG_FFD_SORT_INFO_DECREASE_PRIORITY(word itemIndex);
void MSG_FFD_SORT_INFO_DELETE_ALL_ITEMS();
byte MSG_FFD_SORT_INFO_DELETE_ITEM(word itemIndex);
byte MSG_FFD_SORT_INFO_GET_NUM_ITEMS();
sbyte MSG_FFD_SORT_INFO_GET_SORT_DIRECTION(word itemIndex);
FFDSortOptions MSG_FFD_SORT_INFO_GET_SORT_OPTIONS();
Boolean MSG_FFD_SORT_INFO_INCREASE_PRIORITY(word itemIndex);
Boolean MSG_FFD_SORT_INFO_ITEM_SEARCH(byte dbIndex, byte *sortIndex);
void MSG_FFD_SORT_INFO_LIST_MONIKER_QUERY(optr dynList, word itemIndex);
void MSG_FFD_SORT_INFO_LIST_REQUEST_NOTES(optr textObj, word itemIndex);
void MSG_FFD_SORT_INFO_NUKE_FIELD(byte columnNum);
sword MSG_FFD_SORT_INFO_QUERY_ITEM(word itemIndex, sbyte *sortAscending);
void MSG_FFD_SORT_INFO_SET_SORT_DIRECTION(word itemIndex, sbyte sortAscending);
void MSG_FFD_SORT_INFO_SET_SORT_OPTIONS(FFDSortOptions sortOptions);
void MSG_FFD_SORT_INFO_SHADOW_DELETE();
void MSG_FFD_SORT_INFO_SHADOW_RESTORE();
void MSG_FFD_SORT_INFO_SHADOW_SAVE();
sbyte MSG_FFD_SORT_INFO_SORT();
void MSG_FFD_STORE_CURRENT_ROW();
Boolean MSG_FFD_STORE_FIELD_DATA_IN_TEMP_ROW_CELL(word colNum, char *data);
void MSG_FFD_STORE_LAYOUT_NOTES(byte layoutNum, TCHAR *textBuffer);
void MSG_FFD_STORE_TEMP_ROW_INTO_ANOTHER_ROW(word rowToStoreInto);
Boolean MSG_FFD_SUBSET_APPLY(MemHandle tokenStreamHandle, word numTokens);
void MSG_FFD_SUBSET_AUTO_APPLY_MARK(Boolean applyFlag);
void MSG_FFD_SUBSET_CLEAR_MARKS_FIRST(Boolean applyFlag);
void MSG_FFD_SUBSET_DELETE_MARKED_RECORDS();
FFDSubsetOptionsInfo MSG_FFD_SUBSET_GET_OPTIONS();
void MSG_FFD_SUBSET_INVERT_MARKS();
void MSG_FFD_SUBSET_MARK_ALL();
Boolean MSG_FFD_SUBSET_SHOW_ALL_RECORDS();
Boolean MSG_FFD_SUBSET_SHOW_ONLY_MARKED_RECORDS();
void MSG_FFD_SUBSET_UNMARK_ALL();
void MSG_FFD_SUCCESSFUL_FIELD_CREATION_OR_MODIFICATION_TEMPLATE();
LayoutType MSG_FFD_SWITCH_TO_INDEXED_LAYOUT(byte index, optr ffGrObjHeadOptr);
void MSG_FFD_SWITCH_TO_LAYOUT(byte layoutNum, optr ffGrObjHeadOptr, LayoutType layoutType, Boolean printing);
Boolean MSG_FFD_TRANSFER_TEMP_ROW_TO_SCREEN_FIELDS();
FFFieldValidationType MSG_FFD_VALIDATE_SCREEN_FIELD(optr textOptr, FieldID colNum, Boolean formatText);
FFFieldValidationType MSG_FFD_VALIDATE_SCREEN_FIELD_WITH_MESSAGE(optr textOptr, FieldID colNum, Boolean formatText);
Boolean MSG_FFD_VERIFY_SCREEN_FIELDS();
void MSG_FFEB_APPLY_CHANGE();
void MSG_FFEB_CANCEL_CHANGE();
void MSG_FFEB_CLOSE_DOWN();
void MSG_FFEB_EDIT_EXPRESSION(MemHandle textHandle, dword highlightStart, dword highlightEnd, optr resultDestination, Message resultMessage);
void MSG_FFEB_RESET_CHANGE();
void MSG_FFEB_RETURN_MSG_TEMPLATE(MemHandle stringHandle);
void MSG_FFFP_APPLY();
void MSG_FFFP_CANCEL();
void MSG_FFFP_CLOSE();
void MSG_FFFP_CREATE_FIELD(word messageToSendBack);
void MSG_FFFP_DISPLAY_NOTES();
void MSG_FFFP_EDIT_DEFAULT_OR_COMPUTED_EXPRESSION();
void MSG_FFFP_ENABLE_TRIGGERS();
void MSG_FFFP_FIELD_CREATION_DONE(FFFieldCreationResult fieldResult, byte colNum);
void MSG_FFFP_FIELD_MODIFICATION_DONE(FFFieldCreationResult fieldResult, byte colNum, Boolean nameChanged);
void MSG_FFFP_INC_MARK_BUSY_COUNT();
void MSG_FFFP_INITIATE_INTERACTION();
void MSG_FFFP_INITIATE_NEW_FIELD_INTERACTION();
void MSG_FFFP_NEW_FIELD();
void MSG_FFFP_RESET();
void MSG_FFFP_SET_DEFAULT_OR_COMPUTED_EXPRESSION(MemHandle tokenStream, word numTokens);
void MSG_FFFP_SET_EXPRESSION_BUILDER_INFO(optr computedFEB, optr defaultVEB);
void MSG_FFFP_STORE_FIELD_INFO(word messageToSendBack, byte colNum);
void MSG_FFGB_SET_FIELD_APPEARENCES_FLAG();
void MSG_FFGB_UPDATE_FIELD_APPEARENCE_UI();
void MSG_FFLG_INITIALIZE(VMBlockHandle vmBlockHandle, ChunkHandle chunkHandle, VMFileHandle *file);
void MSG_FFLG_RELEASE_FIELD();
void MSG_FFPLR_GET_RECORD_BOUNDARY_SIZE(LayoutSize *recordBounds);
void MSG_FFPLR_SET_RECORD_BOUNDARY_SIZE(LayoutSize recordBounds);
void MSG_FFRCP_CREATE_NEW_RECORD();
void MSG_FFRCP_DELETE_CURRENT_RECORD();
void MSG_FFRCP_GOTO_FIRST_RECORD();
void MSG_FFRCP_GOTO_LAST_RECORD();
void MSG_FFRCP_GOTO_NEXT_RECORD();
void MSG_FFRCP_GOTO_PREVIOUS_RECORD();
void MSG_FFRCP_GOTO_RECORD();
void MSG_FFRCP_REVERT_CURRENT_RECORD();
void MSG_FFS_OPEN();
void MSG_FFTC_DELETE_FIELD();
void MSG_FFTC_EDIT_A_FIELD();
void MSG_FFTC_RESET_CHANGE();
void MSG_FFTC_SET_FIELD_PROPERTIES_UIC_INFO(optr createNewUICOptr, optr editFieldUICOptr);
void MSG_FFTC_TRANSFER_FROM_DATABASE_TO_LAYOUT();
void MSG_FFTC_TRANSFER_FROM_LAYOUT_TO_DATABASE();
optr MSG_FFTFG_GET_LABEL_OPTR(VMFileHandle documentHandle);
void MSG_FFTFG_INITIALIZE(VMBlockHandle vmBlockHandle, ChunkHandle chunkHandle, FieldEdgeFlags edgeFlags);
void MSG_FFTFG_NUKE_FIELD();
void MSG_FFTFG_RELEASE_LABEL();
void MSG_FFTFG_RESET_DEFINED_TYPE(FormatIdType formatToReset, FormatIdType newFormat);
void MSG_FFTFG_SET_EDGES(FieldEdgeFlags edges, Boolean redraw);
void MSG_FFTFG_SET_FIELD_TYPE(FieldDataType fieldType);
void MSG_FFTFG_SET_FOR_DATA_ENTRY();
void MSG_FFTFG_SET_FOR_DESIGN_MODE();
void MSG_FFTFG_SIMPLE_SET_FOR_DESIGN_MODE();
void MSG_FFTFG_UPDATE_PAGE_NUMBER();
void MSG_FFTFG_UPDATE_UI_BLOCK(MemHandle appearenceChangeBlock);
void MSG_FFT_ASK_FOR_FIELD_NAME();
Boolean MSG_FFT_FIELD_HAS_DEPENDENCIES();
void MSG_FFT_GET_DISPLAY_ARRAY_ELEMENT(GetDisplayArrayInfo *getDisplayArrayInfo);
VMFileHandle MSG_FFT_GET_DOCUMENT_HANDLE();
void MSG_FFT_GET_FIELD_NAME(char *fieldName);
void MSG_FFT_INITIALIZE(FieldID colNum);
void MSG_FFT_REPORT_DEMISE(Boolean reallyNuke);
void MSG_FFT_REPORT_PASTED_FIELD(optr database, optr guardian, optr label);
void MSG_FFT_RESET_DEFINED_TYPE(FormatIdType formatToReset, FormatIdType newFormat);
FormatIdType MSG_FFT_RETURN_FORMAT_TYPE();
void MSG_FFT_SEND_FIELD_COLUMN();
void MSG_FFT_SEND_FIELD_NAVIGATION_INFO(ShortcutCode shortcut);
void MSG_FFT_SET_DISPLAY_FORMAT(FormatIdType displayFormat);
void MSG_FFT_SET_FIELD_TYPE(FieldDataType fieldType, Boolean resetIfChanged);
void MSG_FFT_SET_FOR_DATA_ENTRY_MODE();
void MSG_FFT_SET_FOR_DESIGN_MODE();
void MSG_FFT_SIMPLE_SET_FOR_DESIGN_MODE();
void MSG_FILE_OPEN_CONTROL_CLOSE_ALL_BUBBLES();
void MSG_FILE_OPEN_CONTROL_COPY();
void MSG_FILE_OPEN_CONTROL_COPY_TO_SOUNDS();
void MSG_FILE_OPEN_CONTROL_COPY_VIA_IR();
void MSG_FILE_OPEN_CONTROL_CREATE_FOLDER();
void MSG_FILE_OPEN_CONTROL_DELETE();
void MSG_FILE_OPEN_CONTROL_MOVE();
void MSG_FILE_OPEN_CONTROL_RENAME();
void MSG_FILE_OPEN_CONTROL_RENAME_COPY();
void MSG_FILTER_TEXT_RESET();
void MSG_FILTER_TEXT_RESET_TEXT_IF_NOT_FOCUSED();
void MSG_FILTER_TEXT_SEND_FILTER_MSG();
void MSG_FJC_SET_JUSTIFICATION();
void MSG_FLASHING_NOTE_ACCEPT_USER_ACTION();
void MSG_FLASHING_NOTE_DISMISS_DIALOG_NOW();
void MSG_FOAM_PROGRESS_DIALOG_CANCEL_TRIGGERED();
void MSG_FOC_CLOSE();
void MSG_FOC_COPY_DEST_READY();
void MSG_FOC_COPY_DOC();
void MSG_FOC_CREATE_FOLDER();
void MSG_FOC_CREATE_NEW();
void MSG_FOC_DELETE_FILE_OP_VAR_DATA_VIA_QUEUE();
void MSG_FOC_MENU();
void MSG_FOC_MOVE_DOC();
void MSG_FOC_OPEN();
void MSG_FOC_OPEN_FOLDER();
void MSG_FOC_RENAME_DOC();
void MSG_FORMAT_APPLY();
void MSG_FORMAT_DECIMAL_OFFSET();
void MSG_FORMAT_DELETE();
void MSG_FORMAT_NUM_DECIMALS();
void MSG_FORMAT_OPTION_BOOLEAN_CHANGE();
void MSG_FORMAT_OPTION_STYLE_CHANGE();
void MSG_FORMAT_SELECTED();
void MSG_FORMAT_UPDATE_USER_DEF_SAMPLES();
void MSG_FORMAT_USER_DEF_CANCEL();
void MSG_FORMAT_USER_DEF_INVOKE();
void MSG_FORMAT_USER_DEF_OK();
word MSG_FREAD(byte *dest, word number_of_bytes);
void MSG_FSA_RETURN_TO_LAUNCHER();
void MSG_FTSC_PLAIN_TEXT_CHANGE();
void MSG_GAME_CONTENT_ABORT_GAME();
void MSG_GAME_CONTENT_CONTINUE_GAME();
void MSG_GAME_CONTENT_END_TEMP_PAUSE();
void MSG_GAME_CONTENT_GAME_OVER();
void MSG_GAME_CONTENT_PAUSE_GAME();
void MSG_GAME_CONTENT_START_GAME();
void MSG_GAME_CONTENT_TEMP_PAUSE();
void MSG_GAME_CONTENT_TIMER_TICK();
void MSG_GB_CLEAR();
void MSG_GB_CLONE_SELECTED_GROBJS();
void MSG_GB_CLOSE_FINISH_UP();
void MSG_GB_CONVERT_SELECTED_GROBJS_TO_BITMAP();
void MSG_GB_CONVERT_SELECTED_GROBJS_TO_GRAPHIC();
void MSG_GB_CREATE_GROBJ_TRANSFER_FORMAT();
void MSG_GB_CREATE_GSTRING_TRANSFER_FORMAT();
void MSG_GB_CREATE_SORTABLE_ARRAY();
void MSG_GB_DELETE_INSTRUCTIONS();
void MSG_GB_DELETE_SELECTED_GROBJS();
void MSG_GB_DESTROY_SORTABLE_ARRAY();
void MSG_GB_DETACH_GOAM();
void MSG_GB_DETACH_UI();
void MSG_GB_DUPLICATE_SELECTED_GROBJS();
void MSG_GB_EVALUATE_MOUSE_POSITION();
void MSG_GB_FILL_PRIORITY_LIST();
void MSG_GB_GRAB_TARGET_FOCUS();
void MSG_GB_GROUP_SELECTED_GROBJS();
void MSG_GB_HIDE_UNSELECTED_GROBJS();
void MSG_GB_IGNORE_UNDO_ACTIONS_AND_SUSPEND();
void MSG_GB_INVALIDATE();
void MSG_GB_MAKE_INSTRUCTIONS_SELECTABLE_AND_EDITABLE();
void MSG_GB_MAKE_INSTRUCTIONS_UNSELECTABLE_AND_UNEDITABLE();
void MSG_GB_PASTE();
void MSG_GB_PASTE_INSIDE();
void MSG_GB_PRIORITY_LIST_RESET();
void MSG_GB_PULL_SELECTED_GROBJS_TO_FRONT();
void MSG_GB_PUSH_SELECTED_GROBJS_TO_BACK();
void MSG_GB_RECALC_FOR_TEXT_ATTR_CHANGE();
void MSG_GB_REMOVE_ALL_GROBJS_FROM_SELECTION_LIST();
void MSG_GB_REORDER_SELECTION_ARRAY();
void MSG_GB_SHOW_ALL_GROBJS();
void MSG_GB_SHUFFLE_SELECTED_GROBJS_DOWN();
void MSG_GB_SHUFFLE_SELECTED_GROBJS_UP();
void MSG_GB_SORT_SORTABLE_ARRAY();
void MSG_GB_SUSPEND_ACTION_NOTIFICATION();
void MSG_GB_UNGROUP_SELECTED_GROUPS();
void MSG_GB_UNSUSPEND_ACTION_NOTIFICATION();
void MSG_GB_UNSUSPEND_AND_ACCEPT_UNDO_ACTIONS();
void MSG_GB_UPDATE_EXTENDED_AREA_ATTR_CONTROLLERS();
void MSG_GB_UPDATE_EXTENDED_AREA_ATTR_CONTROLLERS_WITH_DEFAULTS();
void MSG_GB_UPDATE_EXTENDED_LINE_ATTR_CONTROLLERS();
void MSG_GB_UPDATE_EXTENDED_LINE_ATTR_CONTROLLERS_WITH_DEFAULTS();
void MSG_GB_UPDATE_INSTRUCTION_CONTROLLERS();
void MSG_GCC_CREATE_HORIZONTAL_GUIDELINE();
void MSG_GCC_CREATE_VERTICAL_GUIDELINE();
void MSG_GDC_LIST_APPLY();
void MSG_GDC_LIST_QUERY();
void MSG_GDC_RESIZE_DISPLAYS();
void MSG_GDC_SET_OVERLAPPING();
void MSG_GDC_SWAP_DISPLAYS();
void MSG_GDC_TILE();
void MSG_GEN_ACTIVATE();
void MSG_GEN_APPLICATION_ACCEPT_INPUT();
void MSG_GEN_APPLICATION_BRING_UP_HELP();
void MSG_GEN_APPLICATION_CLOSE_COMPLETE(optr ackOD);
void MSG_GEN_APPLICATION_CLOSE_FILE_ACK();
void MSG_GEN_APPLICATION_DETACH_PENDING();
void MSG_GEN_APPLICATION_DO_STANDARD_DIALOG(Message dialogMethod, optr dialogOD, char *helpContext, char *customTriggers, char *arg2, char *arg1, char *string, CustomDialogBoxFlags dialogFlags);
void MSG_GEN_APPLICATION_FIELD_QUIT_ABORTED();
void MSG_GEN_APPLICATION_FLOATING_KEYBOARD_CLOSED();
void MSG_GEN_APPLICATION_GCN_LIST_SEND_INTERNAL();
void MSG_GEN_APPLICATION_HOLD_UP_INPUT();
void MSG_GEN_APPLICATION_IACP_COMPLETE_CONNECTIONS();
void MSG_GEN_APPLICATION_IACP_NO_MORE_CONNECTIONS(optr ackOD);
void MSG_GEN_APPLICATION_IACP_REGISTER();
void MSG_GEN_APPLICATION_IACP_SHUTDOWN_ALL_CONNECTIONS();
void MSG_GEN_APPLICATION_IACP_UNREGISTER();
void MSG_GEN_APPLICATION_IGNORE_INPUT();
void MSG_GEN_APPLICATION_INITIATE_UI_QUIT();
void MSG_GEN_APPLICATION_INSTALL_TOKEN();
void MSG_GEN_APPLICATION_MARK_APP_COMPLETELY_BUSY();
void MSG_GEN_APPLICATION_MARK_APP_NOT_COMPLETELY_BUSY();
void MSG_GEN_APPLICATION_MARK_BUSY();
void MSG_GEN_APPLICATION_MARK_NOT_BUSY();
void MSG_GEN_APPLICATION_NOTIFY_MODAL_WIN_CHANGE();
void MSG_GEN_APPLICATION_OPEN_COMPLETE();
void MSG_GEN_APPLICATION_QUIT_AFTER_UI();
void MSG_GEN_APPLICATION_REMOVE_ALL_BLOCKING_DIALOGS();
void MSG_GEN_APPLICATION_RESUME_INPUT();
void MSG_GEN_APPLICATION_ROTATE_DISPLAY();
void MSG_GEN_APPLICATION_SEND_APP_INSTANCE_REFERENCE_TO_FIELD();
void MSG_GEN_APPLICATION_SET_ATTACHED_TO_STATE_FILE();
void MSG_GEN_APPLICATION_SET_NOT_ATTACHED_TO_STATE_FILE();
void MSG_GEN_APPLICATION_SET_NOT_QUITTING();
void MSG_GEN_APPLICATION_SET_NOT_USER_INTERACTABLE();
void MSG_GEN_APPLICATION_SET_USER_INTERACTABLE();
void MSG_GEN_APPLICATION_TOGGLE_CURRENT_MENU_BAR();
void MSG_GEN_APPLICATION_TOGGLE_CURSOR();
void MSG_GEN_APPLICATION_TOGGLE_EXPRESS_MENU();
void MSG_GEN_APPLICATION_TOGGLE_FLOATING_KEYBOARD();
void MSG_GEN_APPLICATION_UNUSED();
void MSG_GEN_APPLICATION_UNUSED_2();
void MSG_GEN_APPLICATION_UNUSED_3();
void MSG_GEN_APPLICATION_UNUSED_4();
void MSG_GEN_APPLICATION_UPDATE_APP_FEATURES(optr unReparentObject, optr reparentObject, GenAppUsabilityTuple *levelTable, word tableLength, void *table, word appOpeningFlag, UIInterfaceLevel oldLevel, UIInterfaceLevel level, word featuresChanged, word featuresOn);
void MSG_GEN_APPLICATION_UPDATE_FEATURES_VIA_TABLE(optr unReparentObject, optr reparentObject, GenAppUsabilityTuple *levelTable, word tableLength, void *table, word appOpeningFlag, UIInterfaceLevel oldLevel, UIInterfaceLevel level, word featuresChanged, word featuresOn);
void MSG_GEN_APPLY();
void MSG_GEN_BRANCH_REPLACE_PARAMS(BranchReplaceParamType type, dword replaceParam, dword searchParam);
void MSG_GEN_BRING_TO_TOP();
void MSG_GEN_CONTROL_ADD_FEATURE(WordFlags featureToAdd);
void MSG_GEN_CONTROL_ADD_TO_GCN_LISTS();
void MSG_GEN_CONTROL_ADD_TO_UI();
void MSG_GEN_CONTROL_DESTROY_TOOLBOX_UI();
void MSG_GEN_CONTROL_DESTROY_UI();
void MSG_GEN_CONTROL_GENERATE_UI();
void MSG_GEN_CONTROL_NOTIFY_INTERACTABLE(GenControlInteractableFlags flags);
void MSG_GEN_CONTROL_NOTIFY_NOT_INTERACTABLE(GenControlInteractableFlags flags);
void MSG_GEN_CONTROL_REBUILD_NORMAL_UI();
void MSG_GEN_CONTROL_REBUILD_TOOLBOX_UI();
void MSG_GEN_CONTROL_REMOVE_FEATURE(WordFlags featureToRemove);
void MSG_GEN_CONTROL_REMOVE_FROM_GCN_LISTS();
void MSG_GEN_CONTROL_REMOVE_FROM_UI();
void MSG_GEN_CONTROL_UNBUILD_NORMAL_UI_IF_POSSIBLE();
void MSG_GEN_CONTROL_UPDATE_UI(MemHandle toolBlock, MemHandle childBlock, WordFlags toolboxFeatures, WordFlags features, MemHandle data, word changeID, ManufacturerID manufID);
void MSG_GEN_DISPLAY_CLOSE();
void MSG_GEN_DISPLAY_GROUP_RESIZE_DISPLAYS();
void MSG_GEN_DISPLAY_GROUP_SET_FULL_SIZED();
void MSG_GEN_DISPLAY_GROUP_SET_MONIKER();
void MSG_GEN_DISPLAY_GROUP_SET_NUM_ITEMS();
void MSG_GEN_DISPLAY_GROUP_SET_OVERLAPPING();
void MSG_GEN_DISPLAY_GROUP_SWAP_DISPLAYS();
void MSG_GEN_DISPLAY_GROUP_TILE_DISPLAYS();
void MSG_GEN_DISPLAY_SET_MAXIMIZED();
void MSG_GEN_DISPLAY_SET_MINIMIZED();
void MSG_GEN_DISPLAY_SET_NOT_MAXIMIZED();
void MSG_GEN_DISPLAY_SET_NOT_MINIMIZED();
void MSG_GEN_DISPLAY_UPDATE_FROM_DOCUMENT();
void MSG_GEN_DOCUMENT_ATTACH_FAILED();
void MSG_GEN_DOCUMENT_ATTACH_UI_TO_DOCUMENT();
void MSG_GEN_DOCUMENT_AUTO_SAVE();
void MSG_GEN_DOCUMENT_CHECK_FOR_MODIFICATIONS();
void MSG_GEN_DOCUMENT_CLEAR_DEFAULT();
void MSG_GEN_DOCUMENT_CLEAR_EMPTY();
void MSG_GEN_DOCUMENT_CLOSE_IF_CLEAN_UNNAMED();
void MSG_GEN_DOCUMENT_CLOSE_IF_OPEN_FOR_IACP_ONLY();
void MSG_GEN_DOCUMENT_CONTROL_DISPLAY_DIALOG();
void MSG_GEN_DOCUMENT_CONTROL_FILE_EXPORTED();
void MSG_GEN_DOCUMENT_CONTROL_IMPORT_CANCELLED();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_COPY_TO_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_EXPORT_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_IMPORT_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_MOVE_TO_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_NEW_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_OPEN_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_SAVE_AS_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_SAVE_AS_TEMPLATE_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_SAVE_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_SET_PASSWORD_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_SET_TYPE_DOC();
void MSG_GEN_DOCUMENT_CONTROL_INITIATE_USE_TEMPLATE_DOC();
void MSG_GEN_DOCUMENT_CONTROL_OPEN_DEFAULT_DOC();
void MSG_GEN_DOCUMENT_CONTROL_SAVE_AS_CANCELLED();
void MSG_GEN_DOCUMENT_CREATE_UI_FOR_DOCUMENT();
void MSG_GEN_DOCUMENT_DESTROY_UI_FOR_DOCUMENT();
void MSG_GEN_DOCUMENT_DETACH_UI_FROM_DOCUMENT();
void MSG_GEN_DOCUMENT_DISABLE_AUTO_SAVE();
void MSG_GEN_DOCUMENT_DOCUMENT_HAS_CHANGED();
void MSG_GEN_DOCUMENT_EDIT_USER_NOTES();
void MSG_GEN_DOCUMENT_ENABLE_AUTO_SAVE();
void MSG_GEN_DOCUMENT_FILE_CHANGED_REINITIALIZE_CREATED_UI();
optr MSG_GEN_DOCUMENT_GROUP_GET_OUTPUT();
void MSG_GEN_DOCUMENT_GROUP_SAVE_AS_CANCELLED();
void MSG_GEN_DOCUMENT_MARK_DIRTY();
void MSG_GEN_DOCUMENT_PHYSICAL_CLOSE();
void MSG_GEN_DOCUMENT_PHYSICAL_DELETE();
void MSG_GEN_DOCUMENT_QUICK_BACKUP();
void MSG_GEN_DOCUMENT_READ_CACHED_DATA_FROM_FILE();
void MSG_GEN_DOCUMENT_RECOVER_QUICK_BACKUP();
void MSG_GEN_DOCUMENT_RENAME();
void MSG_GEN_DOCUMENT_REOPEN_FILE();
void MSG_GEN_DOCUMENT_REVERT_NO_PROMPT();
void MSG_GEN_DOCUMENT_SAVE_AS_CANCELLED();
void MSG_GEN_DOCUMENT_SAVE_AS_COMPLETED();
void MSG_GEN_DOCUMENT_SET_DEFAULT();
void MSG_GEN_DOCUMENT_SET_EMPTY();
void MSG_GEN_DOCUMENT_WRITE_CACHED_DATA_TO_FILE(Boolean isSave);
void MSG_GEN_FIELD_ABOUT_TO_CLOSE();
void MSG_GEN_FIELD_ABOUT_TO_DETACH_COMPLETE();
void MSG_GEN_FIELD_APP_NO_LONGER_EXITING();
void MSG_GEN_FIELD_APP_STARTUP_DONE();
void MSG_GEN_FIELD_CREATE_EXPRESS_MENU();
void MSG_GEN_FIELD_DISABLE_EXPRESS_MENU();
void MSG_GEN_FIELD_ENABLE_BITMAP();
void MSG_GEN_FIELD_ENABLE_EXPRESS_MENU();
void MSG_GEN_FIELD_EXIT_TO_DOS();
void MSG_GEN_FIELD_EXIT_TO_DOS_CONFIRMATION_RESPONSE();
UILaunchModel MSG_GEN_FIELD_GET_LAUNCH_MODEL();
void MSG_GEN_FIELD_LOAD_DEFAULT_LAUNCHER();
void MSG_GEN_FIELD_NO_APPS_RESTORED();
void MSG_GEN_FIELD_OPEN_WINDOW_LIST();
void MSG_GEN_FIELD_ORDER_GEN_APPLICATION_LIST();
void MSG_GEN_FIELD_RESET_BG();
void MSG_GEN_FIELD_RESTORE_APP();
void MSG_GEN_FIELD_RESTORE_APPS();
void MSG_GEN_FIELD_RESTORE_NEXT_APP();
void MSG_GEN_FIELD_SET_VIS_PARENT();
void MSG_GEN_FIELD_SHUTDOWN_APPS();
void MSG_GEN_FIELD_SHUTDOWN_CONTROL_RESPONSE();
void MSG_GEN_FIELD_UNUSED_3();
void MSG_GEN_FIELD_UNUSED_4();
void MSG_GEN_FIELD_UNUSED_5();
void MSG_GEN_FILE_SELECTOR_DELETE_SELECTION();
void MSG_GEN_FILE_SELECTOR_FAKE_FLUSH_CACHES();
void MSG_GEN_FILE_SELECTOR_RESCAN();
void MSG_GEN_FILE_SELECTOR_UNUSED();
void MSG_GEN_FILE_SELECTOR_UP_DIRECTORY();
void MSG_GEN_GET_HELP();
void MSG_GEN_GROW_PARENTS();
void MSG_GEN_INTERACTION_DISABLE_DISCARDING();
void MSG_GEN_INTERACTION_INITIATE();
void MSG_GEN_INTERACTION_INITIATE_NO_DISTURB();
void MSG_GEN_INTERACTION_POP_IN();
void MSG_GEN_INTERACTION_POP_OUT();
void MSG_GEN_INTERACTION_TOGGLE_POPOUT();
void MSG_GEN_ITEM_GROUP_UPDATE_EXTENDED_SELECTION(word flags, word setSelMsg, word prevExtentItem, word extentItem, word anchorItem);
void MSG_GEN_LOWER_TO_BOTTOM();
void MSG_GEN_MAKE_APPLYABLE();
void MSG_GEN_MAKE_NOT_APPLYABLE();
void MSG_GEN_NAVIGATE_TO_NEXT_FIELD();
void MSG_GEN_NAVIGATE_TO_PREVIOUS_FIELD();
void MSG_GEN_PEN_INPUT_CONTROL_RESET_CONSTRAIN();
void MSG_GEN_POST_APPLY();
MemHandle MSG_GEN_PROCESS_CLOSE_CUSTOM();
void MSG_GEN_PROCESS_CLOSE_ENGINE();
void MSG_GEN_PROCESS_FINAL_DETACH();
void MSG_GEN_PROCESS_INSTALL_TOKEN();
void MSG_GEN_PROCESS_REAL_DETACH();
void MSG_GEN_PROCESS_UNDO_ABORT_CHAIN();
void MSG_GEN_PROCESS_UNDO_ACCEPT_ACTIONS();
void MSG_GEN_PROCESS_UNDO_FLUSH_ACTIONS();
void MSG_GEN_PROCESS_UNDO_PLAYBACK_CHAIN();
void MSG_GEN_PROCESS_UNDO_START_CHAIN(optr title, optr owner);
void MSG_GEN_RESET();
void MSG_GEN_ROTATE_DISPLAY();
void MSG_GEN_SET_FIXED_SIZE(byte updateMode, word count, word height, word width);
void MSG_GEN_SET_HELP();
void MSG_GEN_SET_KBD_MKR_PATH();
void MSG_GEN_SET_MAXIMUM_SIZE(byte updateMode, word count, word height, word width);
void MSG_GEN_SYSTEM_ADD_SCREEN_CHILD();
void MSG_GEN_SYSTEM_FOREACH_FIELD();
void MSG_GEN_SYSTEM_GET_MODAL_GEODE();
void MSG_GEN_SYSTEM_MARK_BUSY();
void MSG_GEN_SYSTEM_MARK_NOT_BUSY();
void MSG_GEN_SYSTEM_NOTIFY_SYS_MODAL_WIN_CHANGE();
void MSG_GEN_SYSTEM_REMOVE_SCREEN_CHILD();
void MSG_GEN_SYSTEM_SET_DEFAULT_SCREEN();
void MSG_GEN_SYSTEM_SET_SPECIFIC_UI();
void MSG_GEN_TOOL_CONTROL_INTERNAL_GROUP_LIST();
void MSG_GEN_TOOL_CONTROL_INTERNAL_GROUP_LIST_QUERY();
void MSG_GEN_TOOL_CONTROL_INTERNAL_GROUP_LIST_VISIBILITY();
void MSG_GEN_TOOL_CONTROL_INTERNAL_NUDGE_BACK();
void MSG_GEN_TOOL_CONTROL_INTERNAL_NUDGE_FORWARD();
void MSG_GEN_TOOL_CONTROL_INTERNAL_PLACEMENT_LIST();
void MSG_GEN_TOOL_CONTROL_INTERNAL_PLACEMENT_LIST_QUERY();
void MSG_GEN_TOOL_CONTROL_INTERNAL_POSITION_VALUE();
void MSG_GEN_TOOL_CONTROL_INTERNAL_RESET_PLACEMENT();
void MSG_GEN_TOOL_CONTROL_INTERNAL_RESET_POSITION();
void MSG_GEN_TOOL_CONTROL_INTERNAL_RESET_TOOLS();
void MSG_GEN_TOOL_CONTROL_INTERNAL_TOOLS_LIST();
void MSG_GEN_TRIGGER_MAKE_DEFAULT_ACTION();
void MSG_GEN_VALUE_ADD_RANGE_LENGTH();
void MSG_GEN_VALUE_DECREMENT();
void MSG_GEN_VALUE_INCREMENT();
void MSG_GEN_VALUE_SELECT_TEXT();
void MSG_GEN_VALUE_SET_OUT_OF_DATE();
void MSG_GEN_VALUE_SET_VALUE_TO_MAXIMUM();
void MSG_GEN_VALUE_SET_VALUE_TO_MINIMUM();
void MSG_GEN_VALUE_SUBTRACT_RANGE_LENGTH();
void MSG_GEN_VIEW_ALLOW_GLOBAL_TRANSFER();
void MSG_GEN_VIEW_INITIATE_DRAG_SCROLL();
void MSG_GEN_VIEW_MAKE_RECT_VISIBLE(MakeRectVisibleFlags yFlags, MakeRectVisibleMargin yMargin, MakeRectVisibleFlags xFlags, MakeRectVisibleMargin xMargin, sdword bottom, sdword right, sdword top, sdword left);
void MSG_GEN_VIEW_REDRAW_CONTENT();
void MSG_GEN_VIEW_RESET_EXTENDED_INK_TYPE();
void MSG_GEN_VIEW_SCALE_LOW(sdword yOrigin, sdword xOrigin, ScaleViewType scaleType, WWFixedAsDWord yScaleFactor, WWFixedAsDWord xScaleFactor);
void MSG_GEN_VIEW_SCROLL(sdword yOffset, sdword xOffset);
void MSG_GEN_VIEW_SCROLL_BOTTOM();
void MSG_GEN_VIEW_SCROLL_DOWN();
void MSG_GEN_VIEW_SCROLL_LEFT();
void MSG_GEN_VIEW_SCROLL_LEFT_EDGE();
void MSG_GEN_VIEW_SCROLL_PAGE_DOWN();
void MSG_GEN_VIEW_SCROLL_PAGE_LEFT();
void MSG_GEN_VIEW_SCROLL_PAGE_RIGHT();
void MSG_GEN_VIEW_SCROLL_PAGE_UP();
void MSG_GEN_VIEW_SCROLL_RIGHT();
void MSG_GEN_VIEW_SCROLL_RIGHT_EDGE();
void MSG_GEN_VIEW_SCROLL_TOP();
void MSG_GEN_VIEW_SCROLL_UP();
void MSG_GEN_VIEW_SEND_NOTIFICATION();
void MSG_GEN_VIEW_SET_DOC_BOUNDS(sdword bottom, sdword right, sdword top, sdword left);
void MSG_GEN_VIEW_SET_DRAG_BOUNDS(sdword bottom, sdword right, sdword top, sdword left);
void MSG_GEN_VIEW_SET_EXTENDED_INK_TYPE(Boolean createGState, Color inkColor, word brushSize, optr destObj);
void MSG_GEN_VIEW_SET_INCREMENT(sdword yIncrement, sdword xIncrement);
void MSG_GEN_VIEW_SET_ORIGIN(sdword yOrigin, sdword xOrigin);
void MSG_GEN_VIEW_SET_ORIGIN_LOW(sdword yOrigin, sdword xOrigin);
void MSG_GEN_VIEW_SET_SCALE_FACTOR(sdword yOrigin, sdword xOrigin, ScaleViewType scaleType, WWFixedAsDWord yScaleFactor, WWFixedAsDWord xScaleFactor);
void MSG_GEN_VIEW_SUSPEND_UPDATE();
void MSG_GEN_VIEW_UNSUSPEND_UPDATE();
dword MSG_GET_COMP_FILE_SIZE();
FieldID MSG_GET_FIELD_COLUMN_FROM_TEXT_OBJECT();
void MSG_GET_IMAGE_INFO(DocumentInfo *info);
void MSG_GET_IMAGE_SIZE(struct image_info *info);
byte MSG_GET_INSTANCE_DATA();
dword MSG_GET_INSTANCE_DATA_TRIGGER();
optr MSG_GET_PRINTTER_CONTROLLER();
word MSG_GET_ZOOM();
void MSG_GH_FLOATER_FINISHED_CREATE();
void MSG_GH_SEND_NOTIFY_CURRENT_TOOL();
void MSG_GH_SET_TEXT_TOOL_FOR_SEARCH_SPELL();
void MSG_GOAM_CREATE_ALL_ARRAYS();
void MSG_GOAM_GET_FULL_AREA_ATTR_ELEMENT();
void MSG_GOAM_GET_FULL_LINE_ATTR_ELEMENT();
void MSG_GOAM_INVALIDATE_BODIES();
void MSG_GOAM_LOAD_STYLE_SHEET();
void MSG_GOAM_LOAD_STYLE_SHEET_PARAMS();
void MSG_GOCC_CONVERT_FROM_GRAPHIC();
void MSG_GOCC_CONVERT_TO_BITMAP();
void MSG_GOCC_CONVERT_TO_GRAPHIC();
void MSG_GOCDC_CUSTOM_DUPLICATE();
void MSG_GOCSC_CREATE_POLYGON();
void MSG_GOCSC_CREATE_STAR();
void MSG_GODAC_SET_DEFAULT_ATTRIBUTES();
void MSG_GODC_BRING_TO_FRONT();
void MSG_GODC_SEND_TO_BACK();
void MSG_GODC_SHUFFLE_DOWN();
void MSG_GODC_SHUFFLE_UP();
void MSG_GOFC_FLIP_HORIZONTALLY();
void MSG_GOFC_FLIP_VERTICALLY();
void MSG_GOGC_GROUP();
void MSG_GOGC_UNGROUP();
void MSG_GOHC_SET_HANDLES();
void MSG_GOHSC_HIDE();
void MSG_GOHSC_SHOW();
void MSG_GOIC_DELETE_INSTRUCTIONS();
void MSG_GOIC_MAKE_INSTRUCTIONS_EDITABLE();
void MSG_GOIC_MAKE_INSTRUCTIONS_UNEDITABLE();
void MSG_GOLC_CHANGE_LOCKS();
void MSG_GONC_CUSTOM_MOVE();
void MSG_GOPIC_BREAKOUT_PASTE_INSIDE();
void MSG_GOPIC_PASTE_INSIDE();
void MSG_GORC_CUSTOM_ROTATE();
void MSG_GOSC_CUSTOM_SCALE();
void MSG_GOSC_CUSTOM_SKEW();
void MSG_GOTC_UNTRANSFORM();
void MSG_GOVG_CLEAR_VIS_WARD_OD();
void MSG_GOVG_CONVERT_LARGE_MOUSE_DATA();
void MSG_GOVG_CREATE_WARD_WITH_TRANSFER();
void MSG_GOVG_NORMALIZE();
void MSG_GOVG_UPDATE_EDIT_GRAB_WITH_STORED_DATA();
void MSG_GOVG_UPDATE_VIS_WARD_WITH_STORED_DATA();
void MSG_GOVG_VIS_BOUNDS_SETUP();
void MSG_GO_ACTIVATE_MOVE();
void MSG_GO_ACTIVATE_RESIZE();
void MSG_GO_ACTIVATE_ROTATE();
void MSG_GO_ADD_POTENTIAL_SIZE_TO_BLOCK();
void MSG_GO_ADJUST_CREATE();
void MSG_GO_AFTER_ADDED_TO_BODY();
void MSG_GO_AFTER_QUICK_PASTE();
void MSG_GO_BECOME_UNSELECTED();
void MSG_GO_BEFORE_REMOVED_FROM_BODY();
void MSG_GO_BEFORE_REMOVED_FROM_GROUP();
void MSG_GO_BEGIN_CREATE();
void MSG_GO_CALC_PARENT_DIMENSIONS();
void MSG_GO_CLEAR();
void MSG_GO_CLEAR_SANS_UNDO();
void MSG_GO_COMPLETE_CREATE();
void MSG_GO_DESELECT_IF_COPY_LOCK_SET();
void MSG_GO_DESELECT_IF_GROUP_LOCK_SET();
void MSG_GO_DO_NOTHING();
void MSG_GO_FLIP_HORIZ();
void MSG_GO_FLIP_VERT();
void MSG_GO_GENERATE_UNDO_CLEAR_CHAIN();
void MSG_GO_GENERATE_UNDO_CLEAR_CHAIN_WITH_ACTION_NOTIFICATION();
void MSG_GO_GENERATE_UNDO_REPLACE_GEOMETRY_INSTANCE_DATA_ACTION();
void MSG_GO_GENERATE_UNDO_UNDO_CLEAR_CHAIN();
void MSG_GO_GENERATE_UNDO_UNDO_CLEAR_CHAIN_WITH_ACTION_NOTIFICATION();
void MSG_GO_GRAB_MOUSE();
void MSG_GO_GROUP_GAINED_SELECTION_LIST();
void MSG_GO_GROUP_LOST_SELECTION_LIST();
void MSG_GO_INIT_TO_DEFAULT_ATTRS();
void MSG_GO_INVALIDATE();
void MSG_GO_INVALIDATE_AREA();
void MSG_GO_INVALIDATE_LINE();
void MSG_GO_INVALIDATE_WITH_UNDO();
void MSG_GO_LOST_SELECTION_LIST();
void MSG_GO_MAKE_ATTRS_DEFAULT();
void MSG_GO_MAKE_INSTRUCTION();
void MSG_GO_MAKE_NOT_INSTRUCTION();
void MSG_GO_NOTIFY_GROBJ_INVALID();
void MSG_GO_NOTIFY_GROBJ_VALID();
void MSG_GO_NUKE_DATA_IN_OTHER_BLOCKS();
void MSG_GO_OBJ_FREE();
void MSG_GO_OBJ_FREE_GUARANTEED_NO_QUEUED_MESSAGES();
void MSG_GO_QUICK_TOTAL_BODY_CLEAR();
void MSG_GO_REACTIVATE_CREATE();
void MSG_GO_RECREATE_CACHED_GSTATES();
void MSG_GO_RELEASE_EXCLS();
void MSG_GO_RELEASE_MOUSE();
void MSG_GO_REMOVE_FROM_BODY();
void MSG_GO_REMOVE_FROM_GROUP();
void MSG_GO_SEND_ANOTHER_TOOL_ACTIVATED();
void MSG_GO_SUBTRACT_POTENTIAL_SIZE_FROM_BLOCK();
void MSG_GO_SUSPEND_ACTION_NOTIFICATION();
void MSG_GO_SUSPEND_COMPLETE_CREATE();
void MSG_GO_TOGGLE_SELECTION();
void MSG_GO_UNSUSPEND_ACTION_NOTIFICATION();
void MSG_GO_UNTRANSFORM();
void MSG_GROBJ_DUPLICATE_CONTROL_DUPLICATE();
void MSG_GROBJ_DUPLICATE_CONTROL_DUPLICATE_IN_PLACE();
Boolean MSG_GROUP_CHECK_FOR_GROBJ_TEXTS();
void MSG_GROUP_EXPAND();
void MSG_GROUP_INITIALIZE();
void MSG_GSO_SET_GSTRING_FOR_1X_CONVERT();
void MSG_GTELNET_OPEN_CONNECTION(GTelnetOpenConnectionParams params);
void MSG_GVC_PAGE_DOWN();
void MSG_GVC_PAGE_LEFT();
void MSG_GVC_PAGE_RIGHT();
void MSG_GVC_PAGE_UP();
void MSG_GVC_REDRAW();
void MSG_GVC_SET_ATTRS();
void MSG_GVC_SET_SCALE();
void MSG_GVC_SET_SCALE_VIA_LIST();
void MSG_GVC_ZOOM_IN();
void MSG_GVC_ZOOM_OUT();
void MSG_GV_CLEAR_REALIZED_AND_UPWARD_LINK();
void MSG_HC_FIRST_AID_GO_BACK();
void MSG_HC_GET_HISTORY_LIST_MONIKER();
void MSG_HC_GOTO_HISTORY();
void MSG_HC_GO_BACK();
void MSG_HC_USER_CHANGED_HYPHENATION();
void MSG_HIGH_SCORE_FORMAT_SCORE(char *dest, dword score);
void MSG_IMAGE_CLOSE();
void MSG_IMAGE_COORDINATES(struct image_info *cross_coordinates);
void MSG_IMAGE_COPY();
void MSG_IMAGE_DELETE();
word MSG_IMAGE_GET_CALLER();
void MSG_IMAGE_GET_ZOOMED_COORDINATES(struct image_info *cross_coordinates);
void MSG_IMAGE_ROTATE();
word MSG_IMAGE_STATUS();
void MSG_IMAGE_ZOOMIN();
void MSG_IMAGE_ZOOMLEVEL(word *pwZoom);
void MSG_IMAGE_ZOOMOUT();
void MSG_IMC_MAP_CANCEL();
void MSG_IMC_MAP_DONE();
void MSG_IMC_MAP_ENTRY();
MemHandle MSG_IMC_MAP_GET_MAP_DATA();
void MSG_IMC_UNMAP();
void MSG_IMPORT_CONTROL_CANCEL();
void MSG_IMPORT_CONTROL_CONTINUE_IMPORT();
ChunkHandle MSG_IMPORT_CONTROL_GET_FILE_SELECT_GROUP_OFFSET();
ChunkHandle MSG_IMPORT_CONTROL_GET_FORMAT_GROUP_OFFSET();
void MSG_IMPORT_CONTROL_IMPORT();
void MSG_IMPORT_CONTROL_NEW_LIBRARY_DISK();
void MSG_IMPORT_CONTROL_SET_FILE_MASK();
void MSG_IM_APPLY(word wId);
void MSG_INIT_VIEWER(struct image_info *size_info, DocumentInfo *info, word inline_flag, word caller_app);
void MSG_INKMP_ABORT_PASTE();
void MSG_INKMP_CREATE_PASTE_BITMAP();
void MSG_INKMP_DRAG_BITMAP();
void MSG_INKMP_FINISH_PASTE();
void MSG_INK_ADVANCE_SELECTION_ANTS();
void MSG_JC_SET_JUSTIFICATION();
void MSG_LASC_USER_CHANGED_LEADING_TYPE();
void MSG_LOG_CONTROL_AFFIRM_DELETE();
void MSG_LOG_CONTROL_DISPLAY_LOG();
void MSG_LOG_CONTROL_SELECT_CURRENT_ENTRY();
void MSG_LOG_CONTROL_TRIM_LOG();
void MSG_LOG_CONTROL_VIEW_EVENTS_SEARCH_SUBSET();
void MSG_LOG_GEN_CONTROL_LIST_ENTRY_QUERY();
void MSG_LOG_GEN_CONTROL_SET_FIELD_SPACING();
void MSG_LOG_LENGTH_CONTROL_INITIATE_DIALOG();
void MSG_LOG_LENGTH_CONTROL_LIST_ITEM_SELECTED();
void MSG_MAILBOX_ADDRESS_CONTROL_ADD_REF();
void MSG_MAILBOX_ADDRESS_CONTROL_DEL_REF();
optr MSG_MAILBOX_SEND_CONTROL_CREATE_TRANSACTION();
void MSG_MAILBOX_SEND_CONTROL_GET_ADDRESSES();
void MSG_MAILBOX_SEND_CONTROL_INITIATE_DIALOG_WITH_TRANSPORT(MailboxMediaTransport mediaTransport);
void MSG_MENU_ANIMATION_ADVANCE_ANIMATION();
void MSG_MENU_ANIMATION_ANIMATION_COMPLETE();
void MSG_META_ADD_VAR_DATA(word dataType, word dataSize, void *data);
void MSG_META_APP_STARTUP(MemHandle appLaunchBlock);
void MSG_META_ATTACH();
void MSG_META_BLOCK_FREE();
void MSG_META_BRING_UP_HELP();
void MSG_META_DETACH_ABORT();
void MSG_META_DETACH_COMPLETE();
void MSG_META_DUMMY();
void MSG_META_FINAL_OBJ_FREE();
void MSG_META_GCN_LIST_DESTROY();
void MSG_META_GCN_LIST_SEND(GCNListSendFlags flags, EventHandle event, MemHandle block, word listType, ManufacturerID listManuf);
void MSG_META_INITIALIZE();
void MSG_META_LEAVE_CONSTRAIN();
void MSG_META_LOAD_OPTIONS();
void MSG_META_NULL();
void MSG_META_OBJ_FREE();
void MSG_META_QUIT();
void MSG_META_RESERVED_1();
void MSG_META_RESET_OPTIONS();
void MSG_META_SAVE_OPTIONS();
void MSG_META_SHUTDOWN_COMPLETE();
void MSG_META_SUSPEND();
void MSG_META_TRANSPARENT_DETACH();
void MSG_META_UNSUSPEND();
void MSG_MPB_DETACH_THREAD();
void MSG_MPB_HIDE_THYSELF();
void MSG_MSAC_ATTACH_PRINT_CONTROL();
word MSG_MSAC_GET_OBJECT_TYPE();
void MSG_MSC_PAUSE();
void MSG_MSC_PROTO(optr myMSet, VMFileHandle vmfh, VMBlockHandle mscpVM);
void MSG_MSET_CONTINUE_CALCULATION();
void MSG_MSET_DRAW(GStateHandle gstate, sword lowLine, sword highLine);
VMBlockHandle MSG_MSET_INITIALIZE(VMFileHandle vmfh, VMBlockHandle vmbh);
void MSG_MSET_NEW_LINE(sword newLine);
void MSG_MSET_NO_CALC_MEMORY();
void MSG_MSET_PAUSE_CALCULATION();
void MSG_MSET_RESET_CALCULATION();
void MSG_MSET_SEND_NOTIFICATION_OF_PARAM_CHANGE();
void MSG_MSET_SEND_NULL_STATUS_NOTIFICATION();
void MSG_MSET_SET_MAX_DWELL(word newMaxDwell);
void MSG_MSET_SET_PRIORITY(word newPriority);
void MSG_MSET_SET_SELECT_XY(sword newX, sword newY);
void MSG_MSET_SET_SIZE(word newWidth, word newHeight);
void MSG_MSET_STOP_CALCULATION();
void MSG_MSET_ZOOM(BBFixedAsWord zoomVal);
void MSG_MSGCENTREINUSE_UPDATE_MSGC_TRIGGER_IN_SMSEND(TCHAR *msgcString);
Boolean MSG_MSGCENTREINUSE_UPDATE_TRIGGER_FROM_INI_FILE();
void MSG_MSGCENTRELIST_BUBBLE_CANCEL();
void MSG_MSGCENTRELIST_BUBBLE_CLOSE();
void MSG_MSGCENTRELIST_CLOSE_EDITOR();
void MSG_MSGCENTRELIST_FIND_MSGCNUMBER_FOR_SMSEND(TCHAR *nameString);
void MSG_MSGCENTRELIST_GAIN_FOCUS_AND_CLOSE_BUBBLE();
void MSG_MSGCENTRELIST_KNOCK_MSGCENTRESELECTION_OUT();
void MSG_MSGCENTRELIST_LOOSE_FOCUS_AND_CLOSE_BUBBLE();
void MSG_MSGCENTRELIST_OPEN_EDITOR();
void MSG_MSGCENTRELIST_SAVE_MSGCNUMBER_IN_SMSEND(TCHAR *numString);
void MSG_MSGCENTRELIST_SELECTION_CLOSE_MSGCENTRELIST();
void MSG_MSGCENTRELIST_SELECTION_CLOSE_MSGCENTRELIST_FILE();
void MSG_MSGCENTRELIST_SELECTION_CREATE_EMPTY_LIST_MONIKER_ITEM();
Boolean MSG_MSGCENTRELIST_SELECTION_CREATE_MSGCENTRELIST();
MemHandle MSG_MSGCENTRELIST_SELECTION_CREATE_MSGCENTRELIST_FILE(TCHAR *mcfileName);
Boolean MSG_MSGCENTRELIST_SELECTION_GET_CENTER_NAME_AND_NUMBER(TCHAR *msgName, TCHAR *msgNumber);
void MSG_MSGCENTRELIST_SELECTION_INITIALIZE_MSGCENTRELIST();
void MSG_MSGCENTRELIST_SELECTION_ITEM_DELETE();
void MSG_MSGCENTRELIST_SELECTION_MATCH_MSGCENTRENUMBER(TCHAR *nameString);
Boolean MSG_MSGCENTRELIST_SELECTION_MSGCENTRE_OK(TCHAR *msgName, TCHAR *msgNumber);
MemHandle MSG_MSGCENTRELIST_SELECTION_OPEN_MSGCENTRELIST_FILE(TCHAR *mcfileName);
Boolean MSG_MSGCENTRELIST_SELECTION_REMOVE_EMPTY_LIST_MONIKER_ITEM();
void MSG_MSGCENTRELIST_UPDATE_TRIGGER_IN_SMSEND(TCHAR *msgcString);
Boolean MSG_MSGCENTRELIST_WAKE_MSGCENTRESELECTION();
void MSG_MSGCENTRELIST_WRITE_TO_INI();
void MSG_MSGCENTRE_ADD_TO_LIST_IN_SMSEND(TCHAR *numString);
dword MSG_MSGCENTRE_GET_MSGCENTRELIST_SIZE();
void MSG_MSGCENTRE_INTERACTION_INITIATE();
void MSG_MSGCENTRE_OPEN_LIST_FOR_CREATE();
void MSG_MSGCENTRE_OPEN_LIST_FOR_EDIT();
Boolean MSG_MSGCENTRE_SELECTION_ADD_TO_MSGCENTRELIST(TCHAR *msgName, TCHAR *msgNumber, MsgCentreItemType itemType);
void MSG_MSGCENTRE_SELECTION_BUBBLE_CLOSE();
void MSG_MSGCENTRE_SELECTION_EDIT_ITEM_CLOSE();
void MSG_MSGCENTRE_SELECTION_NEW_ITEM_CLOSE();
void MSG_PAC_SET_PARA_ATTR();
void MSG_PAC_USER_CHANGED_KEEP();
void MSG_PAT_CLOSE_INTERACTION();
void MSG_PAT_INIT_DYNAMIC_LIST();
void MSG_PAT_SET_RINGING_TONE();
void MSG_PAT_SET_TO_DEFAULT();
void MSG_PAT_SET_TO_NONE();
void MSG_PC_GOTO_PAGE();
void MSG_PC_NEXT_PAGE();
void MSG_PC_PREVIOUS_PAGE();
void MSG_PERSON_CONTACTS_CONTROL_PERSON_CONTACTS_AFFIRM_DELETE();
void MSG_PERSON_CONTACTS_CONTROL_PERSON_CONTACTS_SEARCH_SUBSET();
void MSG_PREF_DIALOG_REBOOT();
void MSG_PREF_DYNAMIC_LIST_BUILD_ARRAY();
void MSG_PREF_DYNAMIC_LIST_TIMER();
void MSG_PREF_PORT_ITEM_FREE_DRIVER();
word MSG_PREF_PORT_ITEM_GET_STATUS();
void MSG_PREF_SET_ORIGINAL_STATE();
void MSG_PRINT_CONTROL_ABORT_PRINT_JOB();
void MSG_PRINT_CONTROL_INITIATE_PRINT();
void MSG_PRINT_CONTROL_PRINT();
void MSG_PRINT_CONTROL_PRINTING_CANCELLED();
void MSG_PRINT_CONTROL_PRINTING_COMPLETED();
void MSG_PRINT_CONTROL_VERIFY_CANCEL();
void MSG_PRINT_CONTROL_VERIFY_PRINT();
void MSG_PRINT_CONTROL_VERIFY_SCALE();
void MSG_PROCESS_CALL_ROUTINE(word dataDI, word dataSI, word dataDX, word dataCX, word dataBX, word dataAX, void (*routine)());
void MSG_PROCESS_COPY_CHUNK_IN();
void MSG_PROCESS_COPY_CHUNK_OUT();
void MSG_PROCESS_COPY_CHUNK_OVER();
void MSG_PROCESS_EXIT();
void MSG_PROCESS_FLUSH_PROCESS_QUEUE();
void MSG_PROCESS_INSTANTIATE();
void MSG_PSC_LARGER_POINT_SIZE();
void MSG_PSC_SMALLER_POINT_SIZE();
void MSG_PTDC_MONTH_CHANGE();
void MSG_PTDC_SET_DATE();
void MSG_PTDC_SET_TIME();
void MSG_PTDC_TIMER_TICK();
void MSG_PTDC_YEAR_CHANGE();
void MSG_PZC_REQUEST_PAGE_SIZE_MONIKER();
void MSG_PZC_SET_ENVELOPE_ORIENTATION();
void MSG_PZC_SET_LABEL_COLUMNS();
void MSG_PZC_SET_LABEL_ROWS();
void MSG_PZC_SET_MARGIN_BOTTOM();
void MSG_PZC_SET_MARGIN_LEFT();
void MSG_PZC_SET_MARGIN_RIGHT();
void MSG_PZC_SET_MARGIN_TOP();
void MSG_PZC_SET_PAGE_HEIGHT();
void MSG_PZC_SET_PAGE_SIZE_ENTRY();
void MSG_PZC_SET_PAGE_TYPE();
void MSG_PZC_SET_PAGE_WIDTH();
void MSG_PZC_SET_PAPER_ORIENTATION();
void MSG_RECENT_CONTACTS_CONTROL_CLEAR_ALL();
void MSG_RECENT_CONTACTS_CONTROL_CLEAR_ALL_LISTS();
void MSG_RECENT_CONTACTS_CONTROL_CLEAR_ALL_LISTS_OK();
void MSG_RECENT_CONTACTS_CONTROL_COPY_NUMBER();
void MSG_RECENT_CONTACTS_CONTROL_ERASE_STACK();
void MSG_RECENT_CONTACTS_CONTROL_ERASE_STACK_CANCELED();
void MSG_RECENT_CONTACTS_CONTROL_LIST_QUERY();
void MSG_RECENT_CONTACTS_CONTROL_OPEN_LIST();
void MSG_RECENT_CONTACTS_CONTROL_SELECTION_CHANGED();
void MSG_RECENT_CONTACTS_CONTROL_SELECT_CURRENT_ENTRY();
word MSG_RELEASE_ACTIVE();
void MSG_RGC_DELETE_GUIDE();
void MSG_RGG_CHANGE_MONIKER();
void MSG_RGG_START_ANIMATION();
void MSG_RGG_STOP_ANIMATION();
void MSG_ROTATE();
void MSG_SCENTRE_CONTROL_SETTINGS_CLOSED();
SCEP_STATE MSG_SCEP_GET_STATE();
void MSG_SCEP_S_ABORT_REQ(const MemHandle mhAbortReqData);
void MSG_SCEP_S_COMMAND_REQ(const MemHandle mhCommandReqData);
void MSG_SCEP_S_COMMAND_RSP(const Boolean AckOrNackFlag, MemHandle mhCommandRspData);
void MSG_SCEP_S_CONNECT_REQ(const MemHandle mhConnectReqData);
void MSG_SCEP_S_CONNECT_RSP(const Boolean AckOrNackFlag, MemHandle mhConnectData);
void MSG_SCEP_S_DISCONNECT_REQ(const word wReasonLength, MemHandle mhDIS_req);
void MSG_SC_ADD_UNKNOWN_WORD_TO_USER_DICTIONARY();
void MSG_SC_CHECK_ENTIRE_DOCUMENT();
void MSG_SC_CHECK_SELECTION();
void MSG_SC_CHECK_TO_END();
void MSG_SC_GET_IC_BUFF();
void MSG_SC_IGNORE_WORD();
void MSG_SC_REPLACE_ALL();
void MSG_SC_REPLACE_WORD();
void MSG_SC_SKIP_WORD();
void MSG_SC_SPELL_CHECK_ABORTED();
void MSG_SC_SUGGEST_SPELLING();
void MSG_SC_UPDATE_REPLACEMENT_WORD();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_LOCK_CODE();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_LOCK_CODE_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_LOCK_TIME_OUT();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_LOCK_TIME_OUT_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_NETWORK_PASSWORD();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_NETWORK_PASSWORD_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_PIN2_CODE();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_PIN2_CODE_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_PIN_CODE();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_PIN_CODE_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_PIN_CODE_REQUEST();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_PIN_CODE_REQUEST_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_SECURITY_LEVEL();
void MSG_SECURITY_SETTINGS_CONTROL_CHANGE_SECURITY_LEVEL_APPROVED();
void MSG_SECURITY_SETTINGS_CONTROL_LOCK_TIME_OUT_CHANGED();
void MSG_SECURITY_SETTINGS_CONTROL_PIN_CODE_REQUEST_CHANGED();
word MSG_SET_ACTIVE();
void MSG_SET_ERROR_FLAG(word value);
void MSG_SET_IMAGE_SIZE(word width, word height);
void MSG_SET_INSTANCE_DATA(byte from);
void MSG_SET_INSTANCE_DATA_TRIGGER(dword trigger);
void MSG_SET_SCALE(word scale);
void MSG_SG_SET_SPLINE_CREATE_AND_AFTER_CREATE_MODES();
void MSG_SG_SWITCH_TO_SPLINE_AFTER_CREATE_MODE();
void MSG_SG_SWITCH_TO_SPLINE_CREATE_MODE();
void MSG_SMAC_ADD_RECIPIENT();
void MSG_SMAC_CANCEL();
void MSG_SMAC_CHANGE_DEVICE_MEMORY();
void MSG_SMAC_CHANGE_SIM_VIEW();
void MSG_SMAC_MANUAL_DIALING();
void MSG_SMAC_MSD_CANCEL();
void MSG_SMAC_OPEN_SEND_OPTIONS_DIALOG();
void MSG_SMSC_CLEAR();
void MSG_SMSC_CLOSE();
void MSG_SMSC_DELETE();
void MSG_SMSC_HEADER_CREATE();
void MSG_SMSC_INVALIDATE();
void MSG_SMSC_LIST_INITIATE();
void MSG_SMSC_LIST_SET();
void MSG_SMSC_LIST_UPDATE();
void MSG_SMSC_VM_ADD();
void MSG_SMSC_VM_CREATE();
void MSG_SMSC_VM_DELETE();
void MSG_SMSC_VM_REMOVE();
optr MSG_SMSSEND_ADD_TO_RECIPIENT_LIST(TCHAR *phoneNum);
void MSG_SMSSEND_DELETE_RECIPIENT_LIST();
optr MSG_SMSSEND_GET_RECIPIENT_LIST();
MailboxError MSG_SMSSEND_SEND_MESSAGE();
MailboxError MSG_SMSSEND_SEND_MESSAGE_TEXT(TCHAR *messageText);
ChunkHandle MSG_SMSSEND_SET_SMS_MESSAGE(TCHAR *messageText);
ChunkHandle MSG_SMSSEND_SET_SMS_SUMMARY(TCHAR *summaryText);
void MSG_SMS_EDIT_APPEND_ADDRESS1_TEXT(TCHAR *buffer);
void MSG_SMS_EDIT_CHECK_TEXT_FORMATTING();
word MSG_SMS_EDIT_GET_ADDRESS1_TEXT(TCHAR *buffer);
dword MSG_SMS_EDIT_GET_ADDRESS1_TEXT_SIZE();
word MSG_SMS_EDIT_GET_ADDRESS2_TEXT(TCHAR *buffer);
word MSG_SMS_EDIT_GET_MODIFIED_STATE();
SMReplyPath MSG_SMS_EDIT_GET_REPLY_PATH();
word MSG_SMS_EDIT_GET_TEXT_CONTENT(TCHAR *buffer);
dword MSG_SMS_EDIT_GET_TEXT_SIZE();
void MSG_SMS_EDIT_HANDLE_FORMATTING_OUTPUT(SMSEditFormattingCommands command);
void MSG_SMS_EDIT_HIGLIGHT_ADDRESS();
void MSG_SMS_EDIT_HIGLIGHT_TEXT(word begin, word end);
void MSG_SMS_EDIT_NORMAL_TEXT();
void MSG_SMS_EDIT_SET_ADDRESS1_TEXT(TCHAR *buffer);
void MSG_SMS_EDIT_SET_ADDRESS2_TEXT(TCHAR *buffer);
void MSG_SMS_EDIT_SET_FOCUS_TO_ADDRESS();
void MSG_SPEC_ADD_CHILD_RELATIVE_TO_GEN(word buildFlags, optr parent, optr child);
void MSG_SPEC_GUP_QUERY();
void MSG_SPEC_NAVIGATE_TO_NEXT_FIELD();
void MSG_SPEC_NAVIGATE_TO_PREVIOUS_FIELD();
void MSG_SPEC_SCAN_GEOMETRY_HINTS();
void MSG_SPEC_UPDATE_MENU_SEPARATORS();
void MSG_SPEC_UPDATE_SPECIFIC_OBJECT();
void MSG_SPEC_VIS_CLOSE_NOTIFY();
void MSG_SPEC_VIS_OPEN_NOTIFY();
void MSG_SPEED_DIAL_OPEN_LIST();
void MSG_SPEED_DIAL_QUERY_LIST_ENTRY();
void MSG_SPEED_DIAL_REPLACE_ENTRY();
void MSG_SPLINE_ABORT_CURRENT_OPERATION();
void MSG_SPLINE_BEGIN_MOVE();
void MSG_SPLINE_CLOSE_CURVE();
void MSG_SPLINE_DELTA_VIS_BOUNDS(Rectangle rect);
void MSG_SPLINE_DRAW_VIS_BOUNDARY();
void MSG_SPLINE_END_MOVE();
void MSG_SPLINE_END_SELECT_RECTANGLE();
void MSG_SPLINE_ERASE_VIS_BOUNDARY();
void MSG_SPLINE_GENERATE_NOTIFY(SplineGenerateNotifyParams params);
void MSG_SPLINE_INITIALIZE(SplineInitParams params);
void MSG_SPLINE_INSERT_ALL_CONTROLS();
void MSG_SPLINE_INVERT_HOLLOW_HANDLES();
void MSG_SPLINE_MAKE_STAR(SplineMakeStarParams params);
void MSG_SPLINE_NOTIFY_CHANGE_BOUNDS(Rectangle rect);
void MSG_SPLINE_NOTIFY_CREATE_MODE_DONE();
void MSG_SPLINE_OPEN_CURVE();
void MSG_SPLINE_REVERSE_POINTS();
void MSG_SPLINE_SET_DEFAULT_AREA_ATTRS();
void MSG_SPLINE_SET_DEFAULT_LINE_ATTRS();
void MSG_SPLINE_SET_MINIMAL_VIS_BOUNDS();
void MSG_SPLINE_SET_POINTS(SplineSetPointParams params);
void MSG_SPLINE_SET_VIS_BOUNDS(Rectangle rect);
void MSG_SPLINE_UNSELECT_ALL_POINTS();
void MSG_SPOOL_SHOW_PRINTER_CONTROL_PANEL();
void MSG_SPREADSHEET_ADD_NAME_WITH_PARAM_BLK();
void MSG_SPREADSHEET_CHANGE_NAME_WITH_PARAM_BLK();
void MSG_SPREADSHEET_COMPLETE_REDRAW();
void MSG_SPREADSHEET_DELETE_NAME_WITH_LIST_ENTRY();
void MSG_SPREADSHEET_END_MOVE_COPY();
void MSG_SPREADSHEET_ERROR();
byte MSG_SPREADSHEET_EVAL_EXPRESSION();
Boolean MSG_SPREADSHEET_EVAL_FUNCTION();
word MSG_SPREADSHEET_FORMAT_FUNCTION();
Boolean MSG_SPREADSHEET_FUNCTION_TO_CELL();
Boolean MSG_SPREADSHEET_FUNCTION_TO_TOKEN();
SpreadsheetDrawFlags MSG_SPREADSHEET_GET_DRAW_FLAGS();
void MSG_SPREADSHEET_GET_NAME_WITH_LIST_ENTRY();
void MSG_SPREADSHEET_GET_RANGE_BOUNDS();
void MSG_SPREADSHEET_GOTO_CELL();
word MSG_SPREADSHEET_HANDLE_SPECIAL_FUNCTION();
void MSG_SPREADSHEET_INIT_CHOOSE_NAME_LIST();
void MSG_SPREADSHEET_INIT_NAME_LIST();
word MSG_SPREADSHEET_MAKE_FOCUS();
void MSG_SPREADSHEET_NAME_REQUEST_ENTRY_MONIKER();
void MSG_SPREADSHEET_NAME_UPDATE_DEFINITION();
void MSG_SPREADSHEET_NAME_UPDATE_NAME();
void MSG_SPREADSHEET_NOTES_ENUM();
void MSG_SPREADSHEET_RECALC();
void MSG_SPREADSHEET_RULER_DRAW_RANGE(SpreadsheetDrawParams *ssDrawParams);
void MSG_SPREADSHEET_START_MOVE_COPY();
void MSG_SRC_FIND_FROM_TOP();
void MSG_SRC_FIND_NEXT();
void MSG_SRC_FIND_PREV();
void MSG_SRC_REPLACE_ALL_OCCURRENCES_NO_QUERY();
void MSG_SRC_REPLACE_ALL_OCCURRENCES_QUERY_RESPONSE();
void MSG_SRC_SEARCH_ABORTED();
void MSG_SRC_SEARCH_STRING_NOT_FOUND_FOR_REPLACE_ALL();
void MSG_SRC_SEARCH_STRING_NOT_FOUND_FOR_REPLACE_ALL_IN_SELECTION();
void MSG_SRC_SEARCH_STRING_NOT_FOUND_FOR_SEARCH();
void MSG_SRC_UPDATE_SPECIAL_CHARS_BY_FOCUS_INFO();
void MSG_SSC_APPLY_BOX_STYLE();
void MSG_SSC_APPLY_STYLE();
void MSG_SSC_APPLY_TOOLBOX_STYLE();
void MSG_SSC_DEFINE_STYLE();
void MSG_SSC_DELETE_REVERT_STYLE();
void MSG_SSC_DELETE_STYLE();
void MSG_SSC_INITIATE_MODIFY_STYLE();
void MSG_SSC_LOAD_STYLE_SHEET();
void MSG_SSC_LOAD_STYLE_SHEET_FILE_SELECTED();
void MSG_SSC_MODIFY_STYLE();
void MSG_SSC_QUERY_BASE_STYLE();
void MSG_SSC_QUERY_STYLE();
void MSG_SSC_RECALL_STYLE();
void MSG_SSC_REDEFINE_STYLE();
void MSG_SSC_RETURN_TO_BASE_STYLE();
void MSG_SSC_SAVE_STYLE();
void MSG_SSC_SELECT_STYLE();
void MSG_SSC_STATUS_STYLE();
void MSG_SSHEET_EXPORT_FROM_DATA_FILE();
void MSG_SSHEET_INIT_FOR_EXPORT();
void MSG_SSHEET_PASTE_FROM_DATA_FILE();
void MSG_START_WAIT_NEXT_ROUND_TIMER();
void MSG_STYLE_SHEET_GET_DEFINE_UI();
void MSG_STYLE_SHEET_GET_MODIFY_UI();
void MSG_STYLE_SHEET_SET_SAVED_STYLE();
void MSG_TCC_RECALC();
void MSG_TC_BACKUP_SELECTED();
void MSG_TC_CLEAR_ALL_TABS();
void MSG_TC_CLEAR_TAB();
void MSG_TC_COPY_DONE();
void MSG_TC_GET_BACKUP_MONIKER();
void MSG_TC_GET_MEANING_MONIKER();
void MSG_TC_GET_SYNONYM_MONIKER();
void MSG_TC_GET_TEXT();
void MSG_TC_LOOKUP();
void MSG_TC_MEANING_DOUBLE_CLICK();
void MSG_TC_MEANING_SELECTED();
void MSG_TC_QUERY_TAB();
void MSG_TC_REPLACE();
void MSG_TC_REPLACE_DONE();
void MSG_TC_SELECT_DONE();
void MSG_TC_SELECT_TAB();
void MSG_TC_SET_TAB_LINE();
void MSG_TC_SET_TAB_TYPE();
void MSG_TC_SYNONYM_DOUBLE_CLICK();
void MSG_TC_SYNONYM_SELECTED();
void MSG_TG_CALC_DESIRED_MAX_HEIGHT();
void MSG_TG_CALC_DESIRED_MIN_HEIGHT();
void MSG_THC_ADD_CONTEXT();
void MSG_THC_ADD_FILE();
void MSG_THC_DELETE_ALL_HYPERLINKS();
void MSG_THC_DELETE_CONTEXT();
void MSG_THC_DELETE_FILE();
void MSG_THC_FOLLOW_HYPERLINK();
void MSG_THC_RENAME_CONTEXT();
void MSG_THC_RENAME_FILE();
void MSG_THC_UNSET_ALL_CONTEXTS();
void MSG_TLT_ACTIVATE_OTHER_LEVEL();
void MSG_TSC_PLAIN_TEXT_CHANGE();
void MSG_UPDATE_INDICATOR(word position, word progress, word total_width);
void MSG_USER_CONTINUE_STARTUP();
void MSG_USER_DELETE_STATE_FILES_DIALOG_RESPONSE();
void MSG_USER_FREE_SOUND_HANDLE();
void MSG_USER_FREE_SPECIFIC_UI();
void MSG_USER_IS_PASSWORD_DIALOG_ACTIVE();
void MSG_USER_LAUNCH_APPLICATION();
void MSG_USER_PASSWORD_ENTERED();
void MSG_USER_PROMPT_FOR_PASSWORD();
void MSG_USER_STARTUP_APPLS();
void MSG_USER_UPDATE_SOUND_PARAMS();
void MSG_USER_USE_LIBRARY();
void MSG_UVT_DRAW_UNDERLINE();
void MSG_UVT_MOVE_TO_END_IF_NOT_FOCUSED();
void MSG_VC_CLOCK_TICK();
void MSG_VC_START_TIMER();
void MSG_VC_STOP_TIMER();
void MSG_VD_RETURN_HEAPSPACE();
void MSG_VIEWER_AUTO_SAVE();
void MSG_VIEWER_AUTO_SAVE_EXECUTE();
void MSG_VIEWER_AUTO_SAVE_START();
void MSG_VIEWER_AUTO_SAVE_STOP();
void MSG_VIEWER_CLOSE_DOCUMENT();
void MSG_VIEWER_DELETE();
void MSG_VIEWER_NOTIFY_SEND_CONTROLS();
void MSG_VIEWER_SAVE_BEFORE_MAILBOX_SEND();
void MSG_VIS_ADD_BUTTON_POST_PASSIVE();
void MSG_VIS_ADD_BUTTON_PRE_PASSIVE();
void MSG_VIS_BOUNDS_CHANGED(word bottom, word right, word top, word left);
void MSG_VIS_CALL_ROUTINE();
void MSG_VIS_CLOSE();
void MSG_VIS_CLOSE_WIN();
void MSG_VIS_CONTENT_DISABLE_HOLD_UP();
void MSG_VIS_CONTENT_ENABLE_HOLD_UP();
void MSG_VIS_CONTENT_HOLD_UP_INPUT_FLOW();
void MSG_VIS_CONTENT_NOTIFY_ACTIVE_MOUSE_GRAB_WIN_CHANGED();
void MSG_VIS_CONTENT_REMOTE_OBJ_MESSAGE_VIA_HOLD_UP_QUEUE();
void MSG_VIS_CONTENT_RESUME_INPUT_FLOW();
void MSG_VIS_CONTENT_SET_DOC_BOUNDS(sdword bottom, sdword right, sdword top, sdword left);
void MSG_VIS_CREATE_CACHED_GSTATES();
void MSG_VIS_DESTROY_CACHED_GSTATES();
void MSG_VIS_DRAW_MONIKER(DrawMonikerFlags monikerFlags, ChunkHandle visMoniker, word textHeight, GStateHandle gstate, word yMaximum, word xMaximum, word yInset, word xInset);
void MSG_VIS_FORCE_GRAB_LARGE_MOUSE();
void MSG_VIS_FORCE_GRAB_MOUSE();
void MSG_VIS_GRAB_LARGE_MOUSE();
void MSG_VIS_GRAB_MOUSE();
void MSG_VIS_INVALIDATE();
void MSG_VIS_INVAL_TREE();
void MSG_VIS_LARGE_TEXT_CREATE_DATA_STRUCTURES();
void MSG_VIS_LARGE_TEXT_REGION_FROM_POINT();
void MSG_VIS_LAYER_INSERT_OR_DELETE_SPACE(InsertDeleteSpaceTypes type, DWFixed spaceY, DWFixed spaceX, DWFixed positionY, DWFixed positionX);
void MSG_VIS_LAYER_SET_DOC_BOUNDS(__int32 bottom, __int32 right, __int32 top, __int32 left);
void MSG_VIS_LOST_GADGET_EXCL();
void MSG_VIS_MOVE_RESIZE_WIN();
void MSG_VIS_NOTIFY_GEOMETRY_VALID();
void MSG_VIS_RECREATE_CACHED_GSTATES();
void MSG_VIS_REDRAW_ENTIRE_OBJECT();
void MSG_VIS_RELEASE_MOUSE();
void MSG_VIS_REMOVE_BUTTON_POST_PASSIVE();
void MSG_VIS_REMOVE_BUTTON_PRE_PASSIVE();
void MSG_VIS_RULER_CLEAR_CONSTRAIN_TRANSFORM();
void MSG_VIS_RULER_CREATE_GUIDE_ARRAY();
void MSG_VIS_RULER_DESELECT_ALL_HORIZONTAL_GUIDES();
void MSG_VIS_RULER_DESELECT_ALL_VERTICAL_GUIDES();
void MSG_VIS_RULER_DRAW_GUIDE_INDICATORS();
void MSG_VIS_RULER_HIDE_GRID();
void MSG_VIS_RULER_HIDE_MOUSE();
void MSG_VIS_RULER_INVALIDATE_WITH_SLAVES();
void MSG_VIS_RULER_LOST_SELECTION();
void MSG_VIS_RULER_RULE_LARGE_PTR();
void MSG_VIS_RULER_SHOW_GRID();
void MSG_VIS_RULER_SHOW_MOUSE();
void MSG_VIS_RULER_TURN_GRID_SNAPPING_OFF();
void MSG_VIS_RULER_TURN_GRID_SNAPPING_ON();
void MSG_VIS_RULER_TURN_GUIDES_SNAPPING_OFF();
void MSG_VIS_RULER_TURN_GUIDES_SNAPPING_ON();
void MSG_VIS_RULER_UPDATE_CONTROLLERS();
void MSG_VIS_RULER_UPDATE_GRID_CONTROLLER();
void MSG_VIS_RULER_UPDATE_GUIDE_CONTROLLER();
void MSG_VIS_RULER_UPDATE_TYPE_CONTROLLER();
void MSG_VIS_RULER_VIEW_SCALE_FACTOR_CHANGED(WindowHandle viewWindow, WWFixedAsDWord yScaleFactor, WWFixedAsDWord xScaleFactor);
void MSG_VIS_TEXT_ATTRIBUTE_CHANGE();
void MSG_VIS_TEXT_CHAR_ATTR_VIRTUAL_TO_PHYSICAL(VisTextCharAttr attr);
void MSG_VIS_TEXT_CLEAR_ALL_TABS(dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_CLEAR_TAB(word position, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_CROSS_SECTION_REPLACE_ABORTED();
void MSG_VIS_TEXT_DELETE_ALL();
void MSG_VIS_TEXT_DELETE_ALL_HYPERLINKS(VisTextSetContextFlags flags, word file, word context, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_DELETE_SELECTION();
void MSG_VIS_TEXT_EDIT_DRAW();
void MSG_VIS_TEXT_FLASH_CURSOR_OFF();
void MSG_VIS_TEXT_FLASH_CURSOR_ON();
void MSG_VIS_TEXT_GENERATE_CURSOR_POSITION_NOTIFICATION();
void MSG_VIS_TEXT_GET_GRAPHIC_AT_POSITION(VisTextGraphic *retPtr, dword position);
void MSG_VIS_TEXT_GET_RUN_BOUNDS(VisTextRange *retVal, word runOffset, dword position);
void MSG_VIS_TEXT_GET_SINGLE_CHAR_ATTR();
void MSG_VIS_TEXT_GRAPHIC_VARIABLE_CLOSE();
void MSG_VIS_TEXT_GRAPHIC_VARIABLE_OPEN();
void MSG_VIS_TEXT_GRAPHIC_VARIABLE_START_SELECT();
void MSG_VIS_TEXT_LOAD_FROM_DB_ITEM_WITH_STYLES(FileHandle file, DBGroupAndItem item, StyleSheetParams *params);
void MSG_VIS_TEXT_LOAD_STYLE_SHEET_PARAMS();
void MSG_VIS_TEXT_MOVE_TAB(word destPosition, word sourcePosition, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_PARA_ATTR_VIRTUAL_TO_PHYSICAL(VisTextParaAttr attr);
void MSG_VIS_TEXT_RECALC_AND_DRAW();
void MSG_VIS_TEXT_REDIRECT_HYPERLINKS(VisTextSetContextFlags flags, word context, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_REGION_FROM_POINT();
void MSG_VIS_TEXT_REPLACE_WITH_GRAPHIC(VisTextGraphic graphic, word sourceFile, word pasteFrame, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_REPLACE_WITH_HWR(HWRContext context, MemHandle ink, VisTextHWRFlags flags, VisTextRange range);
void MSG_VIS_TEXT_REPLACE_WITH_TEXT_TRANSFER_FORMAT(VMBlockHandle block, VMFileHandle file, word pasteFrame, dword end, dword start);
void MSG_VIS_TEXT_SCREEN_UPDATE();
void MSG_VIS_TEXT_SCROLL_PAGE_DOWN();
void MSG_VIS_TEXT_SCROLL_PAGE_UP();
void MSG_VIS_TEXT_SEARCH_FROM_OFFSET(SearchFromOffsetReturnStruct *retStruct, SearchFromOffsetFlags flags, dword currentOffset, dword startOffset, dword startObject, MemHandle searchReplaceStruct);
void MSG_VIS_TEXT_SELECT_ALL();
void MSG_VIS_TEXT_SELECT_END();
void MSG_VIS_TEXT_SELECT_RANGE(dword end, dword start);
void MSG_VIS_TEXT_SELECT_START();
void MSG_VIS_TEXT_SET_BORDER_BITS(VisTextParaBorderFlags bitsToClear, VisTextParaBorderFlags bitsToSet, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_BORDER_SHADOW(byte width, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_BORDER_SPACING(byte width, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_BORDER_WIDTH(byte width, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_CHAR_ATTR(VisTextCharAttr *attrs, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_CHAR_ATTR_BY_DEFAULT(VisTextDefaultCharAttr defCharAttrs, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_CHAR_ATTR_BY_TOKEN(word token, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_CONTEXT(VisTextSetContextFlags flags, word context, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_CONTEXT_GIVEN_NAME_TEXT(optr object, VisTextSetContextFlags flags, word context, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_DEFAULT_TABS(word defaultTabs, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_DROP_CAP_PARAMS(VisTextDropCapInfo bitsToSet, VisTextDropCapInfo bitsToClear, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_HWR_CONTEXT();
void MSG_VIS_TEXT_SET_HWR_FILTER();
void MSG_VIS_TEXT_SET_HYPERLINK(VisTextSetContextFlags flags, word file, word context, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_HYPERLINK_TEXT_STYLE(VisTextExtendedStyles extBitsToClear, VisTextExtendedStyles extBitsToSet, TextStyle styleBitsToClear, TextStyle styleBitsToSet, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_HYPHENATION_PARAMS(VisTextHyphenationInfo bitsToSet, VisTextHyphenationInfo bitsToClear, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_KEEP_PARAMS(VisTextKeepInfo bitsToSet, VisTextKeepInfo bitsToClear, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_LEADING(word leading, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_LEFT_AND_PARA_MARGIN(word position, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_LEFT_MARGIN(word position, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_LINE_SPACING(BBFixed lineSpacing, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_NOT_USER_MODIFIED();
void MSG_VIS_TEXT_SET_PARAGRAPH_NUMBER(word startingParaNumber, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_ATTR(VisTextParaAttr *newParaAttrs, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_ATTR_BY_DEFAULT(VisTextDefaultParaAttr defParaAttrs, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_ATTR_BY_TOKEN(word paraAttrToken, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_BG_COLOR(ColorQuad color, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_BG_GRAY_SCREEN(SystemDrawMask grayScreen, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_BG_PATTERN(GraphicPattern hatch, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PARA_MARGIN(word position, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_PREPEND_CHARS(char *prependChars, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_RIGHT_MARGIN(word position, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_SEARCH_IN_PROGRESS();
void MSG_VIS_TEXT_SET_SPACE_ON_BOTTOM(BBFixed spacing, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_SPACE_ON_TOP(BBFixed spacing, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_SPELL_IN_PROGRESS();
void MSG_VIS_TEXT_SET_TAB(Tab tab, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_SET_USER_MODIFIED();
void MSG_VIS_TEXT_SHOW_POSITION(dword position);
void MSG_VIS_TEXT_SHOW_SELECTION(VisTextShowSelectionFlags flags, MakeRectVisibleFlags yFlags, MakeRectVisibleMargin yMargin, MakeRectVisibleFlags xFlags, MakeRectVisibleMargin xMargin, sdword bottom, sdword right, sdword top, sdword left);
void MSG_VIS_TEXT_SPELL_CHECK_FROM_OFFSET(optr replyObject, dword startOffset, dword numCharsToCheck, SpellCheckFromOffsetFlags flags, MemHandle icBuff);
void MSG_VIS_TEXT_SUBST_ATTR_TOKEN(Boolean *recalcFlag, Boolean relayed, Boolean updateRefFlag, word runOffset, word newToken, word oldToken);
void MSG_VIS_TEXT_UNSET_ALL_CONTEXTS(VisTextSetContextFlags flags, word context, dword rangeEnd, dword rangeStart);
void MSG_VIS_TEXT_UPDATE_GENERIC();
void MSG_VIS_UPDATE_GEOMETRY();
void MSG_VIS_VUP_ALLOW_GLOBAL_TRANSFER();
void MSG_VIS_VUP_ALTER_INPUT_FLOW(PointDWord translation, WindowHandle window, optr object, VisInputFlowGrabType grabType, VisInputFlowGrabFlags grabFlags);
void MSG_VIS_VUP_QUERY();
void MSG_VIS_VUP_SET_MOUSE_INTERACTION_BOUNDS(int bottom, int right, int top, int left);
void MSG_VIS_VUP_TERMINATE_ACTIVE_MOUSE_FUNCTION();
void MSG_VIS_WIN_ABOUT_TO_BE_CLOSED();
void MSG_VPC_ALWAYS_SCALE();
void MSG_VPC_ALWAYS_TILE();
void MSG_VRECUI_CLOSE();
void MSG_VRECUI_CONTINUE();
void MSG_VRECUI_CONTROL_INITIATE(TCHAR *directory, TCHAR *file);
void MSG_VRECUI_CTRL_VOLUME_COMMAND(word commandId);
void MSG_VRECUI_DELETE();
void MSG_VRECUI_MENU_SELECT();
void MSG_VRECUI_PAUSE();
void MSG_VRECUI_PLAY();
void MSG_VRECUI_RECORD();
void MSG_VRECUI_SET_ERROR();
void MSG_VRECUI_SET_PAUSE(byte Pause, byte Continue);
void MSG_VRECUI_SET_TRIGGERS(byte statePlay, byte stateRec);
void MSG_VRECUI_STOP();
void MSG_VRECUI_UI_STOP();
void MSG_VRECUI_UPDATE_STATE();
void MSG_VSC_CANCEL_REPLY();
void MSG_VSC_SET_REPLY_ADDRESSES(MemHandle vscReplyInfo);
void MSG_W3PROCESS_HANDLE_IACP_EVENT(word wIACP_Case, MemHandle mhFetchParams);
void MSG_WAITING_APPLY_CANCEL_REQUEST();
void MSG_WAITING_APPLY_CLOSE();
void MSG_WAITING_APPLY_GET_STATUS();
void MSG_WAITING_ECI_STATUS(word messageId, MemHandle structure);
void MSG_ZOOM_IN();
void MSG_ZOOM_OUT();
const ThreadHandle MSI_calcThread;
const Boolean MSI_initialized;
const VMBlockHandle MSI_msetVMBlock;
const VMFileHandle MSI_vmFile;
ChunkHandle MSOT_desc;
word MSOT_feature;
int MailboxError;
const int MailboxObjectType;
optr Message;
const VMFileHandle MsgCentreVMHandle;
const word NECI_largeTextInit;
const int NotificationType;
const optr PATI_list;
const Boolean PATI_longTones;
const word PATI_selection;
const hptr PATI_timerHandle;
const word PATI_timerID;
const word PATI_timerTone;
const ChunkHandle PATI_toneArray;
const ToneName PATI_toneName;
const PickAToneType PATI_type;
const PrefInitFileFlags PBGI_initFileFlags;
const word PBGI_originalState;
const dword PCCI_currentContactID;
const PathName PCFSI_currentRemotePath;
const FileLongName PCFSI_currentVolume;
const hptr PCFSI_driveListing;
const PrintControlAttrs PCI_attrs;
const word PCI_defPrinter;
const optr PCI_docNameOutput;
const PageSizeReport PCI_docSizeInfo;
const dword PCI_dupRoot;
const word PCI_endPage;
const word PCI_endUserPage;
const FileLongName PCI_fileName;
const word PCI_handle;
const optr PCI_output;
const word PCI_startPage;
const word PCI_startUserPage;
const ChunkHandle PCI_templateMon;
int PDAHardwareInfo;
const optr PIDLI_array;
const PrefInitFileFlags PIGI_initFileFlags;
const word PIGI_originalNumSelections;
const word PIGI_originalSelection;
const byte PIGI_suspendCount;
TCHAR PIGSV_buffer[256];
word PIGSV_numSelections;
word PIGSV_selections[16];
const PrefInteractionAttrs PII_attrs;
const PrefAttributes PI_attrs;
optr PI_pointerImage;
const word PPII_portMask;
const byte PPII_status;
const byte PPII_type;
const ChunkHandle PSII_initFileString;
const byte PTDCI_maxDays;
const byte PTDCI_month;
const dword PTDCI_timer;
const word PTDCI_year;
const ChunkHandle PTI_originalText;
const TocUpdateCategoryFlags PTLI_flags;
const TocCategoryStruct PTLI_tocInfo;
const PointerModes PTR_modes;
const word PVI_originalValue;
const PageSizeCtrlAttrs PZCI_attrs;
const dword PZCI_height;
const PageLayout PZCI_layout;
const PCMarginParams PZCI_margins;
const dword PZCI_width;
dword __cdecl ProcCallFixedOrMovable_cdecl();
const word RCCI_listGroupOffset;
void *__pascal REALLOC(void *blockPtr, word newSize, GeodeHandle geodeHan);
const Handle RGCI_dataBlock;
const VisRulerType RGCI_rulerType;
const word RGGI_currentItem;
const word RGGI_delayTime;
const int RGGI_monikerList;
const word RGGI_timerHandle;
const word RGGI_timerID;
const word RRI_radius;
const RulerShowControlAttributes RSCI_attrs;
const Message RSCI_message;
MemHandle RSWP_string;
RTCMError __cdecl RTCMREGISTEREVENT(TimerCompressedDate date, unsigned int hour, unsigned int minute, word eventMsg, RTCMGeodeLaunchMode mode, GeodeToken geodeToken, char *geodePath, unsigned int *eventToken, unsigned int *eventID);
const RulerViewAttributes RVI_attrs;
const word SACI_actionMsg;
const word SACI_geode;
void SCEP_CloseInit(void);
SCEP_IF_Status SCEP_ConnectInit(const optr AppOptr, const GeodeHandle hAppProcessHandle, const SCEP_ROLE srRole, optr *pSCEOOptr, GeodeHandle *phSCEPProcessHandle);
const MemHandle SCI_ICBuffHan;
const dword SCI_charsLeft;
const word SCI_enableFlags;
const byte SCI_haveSelection;
const SpellBoxState SCI_spellState;
const word SDCI_fieldID;
const dword SDCI_recordID;
const optr SDCI_triggerObject;
const byte SGI_splineAfterCreateMode;
const byte SGI_splineCreateMode;
const byte SGI_splineMode;
const MemHandle SMACI_addressBlock;
const byte SMACI_addressSelectedFrom;
const DocumentInfo SMACI_docInfo;
const word SMACI_numAddresses;
const ChunkHandle SMACI_postcard;
const optr SMACI_transaction;
TCHAR *SMRegIntegerToHex(word value, TCHAR *buffer, SMRegIntegerToHexFlags flags);
SMRegResult SMRegRegisterApplication(GeodeToken appl, TCHAR *messageProtocol, word numOfMessages);
SMRegResult SMRegUnregisterApplication(GeodeToken appl, TCHAR *messageProtocol, word numOfMessages);
word __cdecl SMSAddServiceCentreNumber(TCHAR *number, TCHAR *name);
void SMSC_MSG_DISABLE_TRIGGERS();
void SMSC_MSG_ENABLE_TRIGGERS();
word __cdecl SMSCheckServiceCentreName(TCHAR *name);
RetVal __cdecl SMSConfAddMsg(SMSCData *MessageData);
RetVal __cdecl SMSConfGetMsg(SMSCData *, byte);
const optr SMSControlObj;
word __cdecl SMSCountMessageParts(MemHandle sourceHandle, word length);
void __cdecl SMSDateAndTimeToString(TCHAR *buffer, TimerDateAndTime dateAndTime, SMSPrintDateAndTimeFlags printFlags);
Boolean SMSDisplayFeedbackDialog(optr oself);
word __cdecl SMSDocGetText(DocumentHandle docHandle, void *buffer, word count);
void __cdecl SMSDocStoreText(DocumentHandle docHandle, void *buffer, word bufferLen);
Boolean __cdecl SMSFindPhoneNumber(MemHandle sourceHandle, MemHandle numberHandle, word *startPoint, word *endPoint, word sourceLength);
Boolean __cdecl SMSFindURL(MemHandle sourceHandle, MemHandle urlHandle, dword *startPoint, dword sourceLength);
MailboxError SMSLibRetrieveMessage(MailboxMessage msg, TCHAR *msgBuffer);
TCHAR *__cdecl SMSUnicodeToGeos(TCHAR *target, void *source, word length);
const SearchReplaceEnableFlags SRCI_enableFlags;
const SearchReplaceFocusInfo SRCI_focusInfo;
const byte SRCI_haveSelection;
const SpreadsheetRulerFlags SRI_flags;
const word SRI_resizeRC;
const optr SRI_spreadsheet;
const dword SRI_startRCPos;
const ClassStruct *SSCI_styledClass;
const ClassStruct *SSCI_targetClass;
const CellReference SSI_active;
const word SSI_ancestorList;
const byte SSI_attributes;
const RectDWord SSI_bounds;
const CellFunctionParameters SSI_cellParams;
const optr SSI_chartBody;
const word SSI_childList;
const word SSI_chunk;
const word SSI_circCount;
const FloatNum SSI_converge;
const word SSI_curAttrs;
const SpreadsheetDrawFlags SSI_drawFlags;
const word SSI_finalList;
const SpreadsheetFlags SSI_flags;
const CellRange SSI_footer;
const word SSI_formatArray;
const byte SSI_gsRefCount;
const word SSI_gstate;
const CellRange SSI_header;
const word SSI_mapBlock;
const ChunkHandle SSI_messageText;
const word SSI_nameArray;
const PointDWord SSI_offset;
const CellRange SSI_quickSource;
const optr SSI_recipientList;
const word SSI_rowArray;
const optr SSI_ruler;
const CellRange SSI_selected;
const word SSI_styleArray;
const ChunkHandle SSI_summaryText;
const CellRange SSI_visible;
RetVal __cdecl StartPlayVoiceFile(char *, byte, byte);
RetVal __cdecl StartRecVoiceFile(byte);
RetVal __cdecl StopPlayVoiceFile(byte);
DiskHandle __cdecl SysLocateFileInDosPath(const char *fname, char *buffer);
Boolean SysShutdown(SysShutdownType type, ...);
const void *TCI_backups;
const void *TCI_grammars;
const TCHAR TCI_lastWord[26];
const void *TCI_meanings;
const word TCI_numberOfTabs;
const word TCI_selectedTab;
const word TCI_status;
const void *TCI_synonyms;
const Tab TCI_tabList[25];
word TEMP_CLIPBOARD_NOTIFICATION_LIST_COUNT;
ConnectTransferFlags TEMP_CMFA_CONNECT_TRANSFER_FLAGS;
PathAndFileName TEMP_CMFA_DEST_FILE_PATH;
FileLongName TEMP_CMFA_NEW_FILE_GEOS_FILE_NAME;
PackageRoot TEMP_CMFA_PACKAGE_DESTINATION;
ConnectTransferFlags TEMP_CMF_CONNECT_TRANSFER_FLAGS;
optr TEMP_CONNECT_ALTERNATE_OPEN_DIALOG;
PathAndFileName TEMP_CONNECT_DEST_FILE_PATH;
ConnectQuitGeodeState TEMP_CONNECT_QUIT_VARS;
optr TEMP_CONNECT_SETTINGS_CONTROL_DIR_ARRAY;
ConnectSubAppDetachData TEMP_CONNECT_SUB_APP_DETACH_DATA;
PathAndFileName TEMP_CONNECT_TEMP_FILE_PATH;
VMFileHandle TEMP_CONTACT_EDIT_DB_HANDLE;
word TEMP_CONTACT_EDIT_ORIGINAL_BLOCK_SIZE;
ChunkHandle TEMP_CONTACT_LIST_ALTERNATE_LINE_TEXT;
RecordID TEMP_CONTACT_LIST_SELECTED_CONTACT;
Rectangle TEMP_CONTACT_LIST_TAB_BOUNDS;
ChunkHandle TEMP_CONTACT_SIM_LIST_ALTERNATE_LINE_TEXT;
word TEMP_CURRENT_CONTEXT_INDEX;
word TEMP_EC_INTERACTIBLE_COUNT;
word TEMP_EC_IN_USE_COUNT;
MemHandle TEMP_EXPORT_CONTROL_IMPEX_THREAD_INFO;
word TEMP_FILE_OPEN_CONTROL_DESTINATION_PATH;
word TEMP_FILE_OPEN_CONTROL_LAST_UI;
DocumentInfo TEMP_FILE_OPEN_CONTROL_NEW_DOC;
DocumentInfo TEMP_FILE_OPEN_FILE_SELECTOR_INFO;
FlashingNoteTimerData TEMP_FLASHING_NOTE_TIMER_DATA;
hptr TEMP_FOAM_HELP_CONTROL_UI;
FocFilePath TEMP_FOC_SELECTOR_INFO;
FileLongName TEMP_FS_SELECTION;
NotifyDisplayListChange TEMP_GDC_CACHED_LIST_DATA;
word TEMP_GDC_CACHED_SELECTED_DISPLAY;
NotifyDisplayListChange TEMP_GDC_CACHED_TOOL_LIST_DATA;
optr TEMP_GEN_APPLICATION_APP_MODE_COMPLETE_ACK_OD;
EventHandle TEMP_GEN_APPLICATION_CLOSE_FILE_ACK_EVENT;
DisplayMode TEMP_GEN_APPLICATION_DISPLAY_MODE;
hptr TEMP_GEN_APPLICATION_EXTRA_STATE_BLOCK;
FloatingKeyboardInfo TEMP_GEN_APPLICATION_FLOATING_KEYBOARD_INFO;
ChunkHandle TEMP_GEN_APPLICATION_NO_LONGER_USED;
MemHandle TEMP_GEN_APPLICATION_SAVED_ALB;
word TEMP_GEN_EMC_PANEL_ITEM_PRIORITY;
ActivationData TEMP_GEN_FIELD_ACTIVATION_DIALOG;
GeodeToken TEMP_GEN_FIELD_DEFAULT_LAUNCHER_ID;
FilePathIDArray TEMP_GEN_FILE_SELECTOR_DIR_IDS;
PathName TEMP_GEN_FILE_SELECTOR_HOME_DIRECTORY;
TempGenToolControlInstance TEMP_GEN_TOOL_CONTROL_INSTANCE;
ReservationHandle TEMP_HEAPSPACE_TOKEN;
optr TEMP_HELP_HEAPSPACE_TOKEN;
TempImportExportData TEMP_IMPORT_EXPORT_DATA;
InkTool TEMP_INK_CONTROL_SELECTED_TOOL;
MSCAddressesAndTransport TEMP_MAILBOX_SEND_CONTROL_ADDRESSES_AND_TRANSPORT;
TempMailboxDialogData TEMP_MAILBOX_SEND_CONTROL_CURRENT_DIALOG;
EnsureActiveFTPriorityPreferenceData TEMP_META_ENSURE_ACTIVE_FT_LAYER_PRIORITY_PREFERENCE;
TempMetaGCNData TEMP_META_GCN;
ChunkHandle TEMP_META_QUIT_LIST;
dword TEMP_NOTES_EDIT_OLD_UNDO_CONTEXT;
PageSizeControlMaxDimensions TEMP_PAGE_SIZE_CONTROL_MAX_DIMENSIONS;
PDLKbdData TEMP_PDL_KBD_DATA;
TempPrintCompletionEventData TEMP_PRINT_COMPLETION_EVENT;
TempPrintAddressControlData TEMP_PRINT_CONTROL_ADDRESS_CONTROL;
TempPrintCtrlInstance TEMP_PRINT_CONTROL_INSTANCE;
optr TEMP_RECENT_CONTACTS_CONTROL_CONFIRM_DIALOG;
RegisterInfo TEMP_REGISTER_INFO;
VMFileHandle TEMP_SPEED_DIAL_DB_HANDLE;
SpreadsheetDocOrigin TEMP_SPREADSHEET_DOC_ORIGIN;
optr TEMP_STYLE_SHEET_DEFINE_UI;
optr TEMP_STYLE_SHEET_MANAGE_UI;
SSCTempAttrInfo TEMP_SYTLE_SHEET_ATTR_TOKENS;
MemHandle TEMP_SYTLE_SHEET_SAVED_STYLE;
Color TEMP_TOOL_GROUP_HIGHLIGHT;
DocumentInfo TEMP_VIEWER_DOC_INFO;
optr TEMP_VIEWER_LOADING_METER;
ViewerTextState TEMP_VIEWER_ORIGINAL_TEXT;
GetComplexMoniker TEMP_VIEWER_SEND_CONTROL_COMPLEX_MONIKER;
MailboxMediaTransport TEMP_VIEWER_SEND_CONTROL_SINGLE_TRANSPORT;
word TEMP_VIS_INVAL_REGION;
Rectangle TEMP_VIS_OLD_BOUNDS;
VisTextCachedRunInfo TEMP_VIS_TEXT_CACHED_RUN_INFO;
VisTextCachedUndoInfo TEMP_VIS_TEXT_CACHED_UNDO_INFO;
VisTextCursorType TEMP_VIS_TEXT_CURSOR_TYPE;
TVTNCPIData TEMP_VIS_TEXT_NOTIFY_CURSOR_POSITION_INFO;
dword TEMP_VIS_TEXT_NOTIFY_CURSOR_POSITION_TIME;
GenControlInteractableFlags TGCI_upToDate;
const word TGI_desiredMaxHeight;
const word TGI_desiredMinHeight;
const TextGuardianFlags TGI_flags;
const word THCI_file;
const optr TLTI_other_parent;
const TextRulerControlAttributes TRCI_attrs;
const TextRulerAction TRI_action;
const VisTextParaAttrDiffs TRI_diffs;
const TextRulerFlags TRI_flags;
const optr TRI_gcnContent;
const VisTextMaxParaAttr TRI_paraAttr;
const word TRI_regionWidth;
const sword TRI_selectX;
const word TRI_selectedObject;
const word TRI_selectedTab;
const optr TRI_tabControl;
const byte TRI_valid;
const optr TWLC_listObj;
const optr UTWLC_listObj;
word UserStandardSound(StandardSoundType type, ...);
const WWFixed VACI_aspectRatio;
const word VACI_diameter;
const ChunkHandle VACI_hourHand;
const word VACI_lastHourAngle;
const word VACI_lastMinuteAngle;
const word VACI_lastSecondAngle;
const ChunkHandle VACI_minuteHand;
const ChunkHandle VACI_pattern;
const ChunkHandle VACI_secondHand;
const WWFixed VACI_xScale;
const WWFixed VACI_yScale;
const ViewerControlAttributes VCI_attr;
const hptr VCI_autoSaveHandle;
const word VCI_autoSaveID;
const hptr VCI_docHandle;
const optr VCI_gadgetExcl;
const VisCompGeoAttrs VCI_geoAttrs;
const VisCompGeoDimensionAttrs VCI_geoDimensionAttrs;
const word VCI_interval;
const ChunkHandle VCI_region;
const hptr VCI_timer;
const VisClockContinue VCI_timerContinue;
const word VCI_timerID;
const optr VCI_visObject;
const WindowHandle VCI_window;
const VisContentAttrs VCNI_attrs;
const PointDWord VCNI_docOrigin;
const FTVMCGrab VCNI_focusExcl;
const word VCNI_holdUpInputCount;
const HoldUpInputFlags VCNI_holdUpInputFlags;
const Handle VCNI_holdUpInputQueue;
const KbdGrab VCNI_kbdGrab;
const ChunkHandle VCNI_postPassiveMouseGrabList;
const ChunkHandle VCNI_prePassiveMouseGrabList;
const PointWWFixed VCNI_scaleFactor;
const FTVMCGrab VCNI_targetExcl;
const optr VCNI_view;
const word VCNI_viewHeight;
const word VCNI_viewWidth;
const WindowHandle VCNI_window;
optr __cdecl VCardParseVCard(VMFileHandle dbHandle, MemHandle msgTextHandle);
void __cdecl VCardParseVCardToText(MemHandle targetHandle, MemHandle sourceHandle);
const ViewerAttributes VDI_attr;
const Message VDI_closeMsg;
const optr VDI_destination;
const ViewerDialogAttributes VDI_dialogAttr;
const Message VDI_nextPrevMsg;
void VIS_RULER_DWFIXED(sdword dwfInt, word dwfFrac);
void VIS_RULER_POINT(sdword yInt, word yFrac, sdword xInt, word xFrac);
const VisAttrs VI_attrs;
const Rectangle VI_bounds;
const VisGeoAttrs VI_geoAttrs;
const int VI_link;
const VisOptFlags VI_optFlags;
const SpecAttrs VI_specAttrs;
const VisTypeFlags VI_typeFlags;
const optr VLMI_focusObject;
const VisLargeTextAttrs VLTI_attrs;
const VisLargeTextDisplayModes VLTI_displayMode;
const word VLTI_displayModeWidth;
const XYSize VLTI_draftRegionSize;
const VisLargeTextFlags VLTI_flags;
const ChunkHandle VLTI_regionArray;
const word VLTI_regionSpacing;
const dword VLTI_totalHeight;
byte VMG_unused;
const optr VMII_altParent;
const ViewerPrintControlFlags VPCI_flags;
const VisRulerConstrainStrategy VRI_constrainStrategy;
const word VRI_desiredSize;
const Grid VRI_grid;
const optr VRI_guideArray;
const word VRI_guideInfluence;
const dword VRI_invalOD;
const MinIncrementType VRI_minIncrement;
const sdword VRI_mouseMark;
const DWFixed VRI_origin;
const PointDWFixed VRI_reference;
const word VRI_reserved;
const VisRulerAttributes VRI_rulerAttrs;
const WWFixed VRI_scale;
const optr VRI_slave;
const word VRI_transformGState;
const VisRulerType VRI_type;
const WWFixed VRI_vectorSlope;
const word VRI_window;
const word VSI_actionPoint;
const ChunkHandle VSI_areaAttr;
const SplineEditState VSI_editState;
const word VSI_gstate;
const byte VSI_gstateRefCount;
const BBFixed VSI_handleHeight;
const BBFixed VSI_handleSize;
const ChunkHandle VSI_lineAttr;
const MemHandle VSI_lmemBlock;
const SplineMarkerFlags VSI_markerFlags;
const MarkerShape VSI_markerShape;
const ChunkHandle VSI_newPoints;
const ChunkHandle VSI_points;
const ChunkHandle VSI_scratch;
const ChunkHandle VSI_selectedPoints;
const SplineState VSI_state;
const byte VSI_suspendCount;
const SplineUnSuspendFlags VSI_unSuspendFlags;
const ChunkHandle VSI_undoPoints;
const word VTI_charAttrRuns;
const Point VTI_cursorPos;
const word VTI_cursorRegion;
const VisTextFeatures VTI_features;
const VisTextFilters VTI_filters;
const word VTI_goalPosition;
const GSRefCountAndFlags VTI_gsRefCount;
const GStateHandle VTI_gstate;
const word VTI_gstateRegion;
const WBFixed VTI_height;
const VisTextIntFlags VTI_intFlags;
const VisTextIntSelFlags VTI_intSelFlags;
const dword VTI_lastOffset;
const word VTI_lastWidth;
const word VTI_leftOffset;
const word VTI_lines;
const byte VTI_lrMargin;
const word VTI_maxLength;
const optr VTI_output;
const word VTI_paraAttrRuns;
const dword VTI_selectEnd;
const dword VTI_selectMinEnd;
const dword VTI_selectMinStart;
const dword VTI_selectStart;
const PointDWord VTI_startEventPos;
const VisTextStates VTI_state;
const VisTextStorageFlags VTI_storageFlags;
const byte VTI_tbMargin;
const ChunkHandle VTI_text;
const TimerHandle VTI_timerHandle;
const word VTI_timerID;
const VMFileHandle VTI_vmFile;
const ColorQuad VTI_washColor;
byte VUMAW_unused;
VirtualSerialStatus __cdecl VirtualSerialClose(Boolean linger);
VirtualSerialStatus __cdecl VirtualSerialFlush(word flushMode);
VirtualSerialStatus __cdecl VirtualSerialOpen(VSOpenFlags stream_open_mode, word input_buffer_size, word output_buffer_size, word timeout);
VirtualSerialStatus __cdecl VirtualSerialRead(VSBlockingMode blocking_mode, word buffer_size, byte *buffer, word *bytes_read);
VirtualSerialStatus __cdecl VirtualSerialReadByte(VSBlockingMode blocking_mode, byte *data_byte);
void __cdecl VirtualSerialReceiveData(byte destination, byte msgLength, char *data);
VirtualSerialStatus __cdecl VirtualSerialSendDTR(byte DTR_Status);
VirtualSerialStatus __cdecl VirtualSerialSetFlowControl(VSFlowControl flow_control_mode);
VirtualSerialStatus __cdecl VirtualSerialSetFormat(VSSerialFormat format, VSSerialBaud baud);
VirtualSerialStatus __cdecl VirtualSerialSetNotify(VSNotifytype notify_type, optr destination, word method);
VirtualSerialStatus __cdecl VirtualSerialWrite(VSBlockingMode blocking_mode, word buffer_size, const byte *buffer, word *bytes_written);
VirtualSerialStatus __cdecl VirtualSerialWriteByte(VSBlockingMode blocking_mode, byte data_byte);
const int VisMouseGrab;
VisTextExtendedStyles VisTextExtendedStyles;
const int VisTextNotificationFlags;
VisTextParaAttrAttributes VisTextParaAttrAttributes;
const byte VolumeLevel;
RetVal __cdecl VrecuiCheckIfRT24(TCHAR *);
WindowHandle WWFixedAsDWord;
int ZoomLevel;
MACRO__ __ACCPNT_GOH_;
MBEscapeInfo _near;
const byte availableFunctions[255];
void bFTP_Command_cnf(const MemHandle mhUserData, bFTP_commandType *type, word *wResultLength, MemHandle *mhResult);
void bFTP_Command_ind(TCHAR *UserDataFile, Boolean (*fpUserCancelled)(void), Boolean *pAckOrNackFlag, word *wResultLength, MemHandle *pmhResponseData, BFTP_ERRORCODE *pErrorCode);
void bFTP_ConstructErrorPDU(const BFTP_ERRORCODE ecErrorCode, MemHandle *pmhResult);
void bFTP_ConstructPutReq(const TCHAR *szBodyDataFile, dword dwBodyFileSize, MemHandle *pmhHeaderBlock, word *pwHeaderLength);
void bFTP_ConstructQueryReq(bFTP_commandType what, MemHandle *pmhHeaderBlock, word *pwHeaderLength);
void bFTP_parseResolution(byte *resolution, byte *result);
const GStateHandle bitmap_gstate;
VisTextParaAttrAttributes bitsToClear;
const word black_bottom;
const word black_left;
const word black_right;
const word black_top;
const VMBlockHandle block_handle;
const word caller_type;
ColorQuad color;
TCHAR data[511];
const word decompress_zoom;
const VMFileHandle documentHandle;
optr dword;
const word error_flag;
VisTextExtendedStyles extBitsToClear;
FontID fid;
const byte file_format;
const VMFileHandle file_handle;
const DocumentInfo file_info;
const byte file_name[15];
const byte first_draw;
const word first_total_update;
VisTextSetContextFlags flags;
byte fontWeight;
byte fontWidth;
const word formatInfoStrucHan;
byte formula[511];
const byte from;
SystemDrawMask grayScreen;
const word gray_bottom;
const word gray_left;
const word gray_right;
const word gray_top;
GraphicPattern hatch;
const word height;
const word image_type;
const FileHandle input_file_handle;
const dword input_file_size;
word junk;
const byte last_press;
const word last_total_update;
word maximumSize;
word minimumSize;
const VMBlockHandle msgarrayBlock;
const VMBlockHandle msgblock;
const byte need_indicator;
const byte need_mouse_cross;
const byte need_printer;
const byte numberOfFunctions;
optr output;
const byte pixels_to_move;
WWFixed pointSize;
dword position;
dword rangeEnd;
VisTextRange rangeToDelete;
optr replyObj;
const dword resultDestination;
const Message resultMessage;
const word rotation;
const sdword scroll_ratio;
sword sprintf(TCHAR *buf, const TCHAR *format, ...);
TCHAR string[512];
const Boolean suppressButtonDisabling;
const byte temp_file_still_exist;
const word timerGotoRecordNumber;
const TimerHandle timerHandle;
const word timerID;
BBFixed trackKerning;
const word translation_x;
const word translation_y;
const dword trigger;
MsgCentreItemType type;
const word vert_pos;
WindowHandle viewWindow;
const word white_bottom;
const word white_left;
const word white_right;
const word white_top;
const word width;
MemHandle word;
const GStateHandle work_gstate;
const sword x_coordinate;
const sword x_coordinate_old;
const sword y_coordinate;
const sword y_coordinate_old;
const word zoom;
const word zoom_ratio;
