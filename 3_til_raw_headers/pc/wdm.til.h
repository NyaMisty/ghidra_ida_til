struct $01091B9DEBEBC2354EBF1594EEF6BE89 {ULONG PossibleCount;ULONG CurrentCount;};
struct $01DCE0ED23F464638BF845FBE919C7FC {KSP_NODE Property;ULONG EsPid;};
struct $0237C65E8322975CE5980DC9C74E362C {KDPC Dpc;ULONG ReferenceCount;KSPIN_LOCK AccessLock;};
enum $023C071F6B2DC664943C68B81541179C {KSPROPERTY_STREAM_ALLOCATOR = 0x0,KSPROPERTY_STREAM_QUALITY = 0x1,KSPROPERTY_STREAM_DEGRADATION = 0x2,KSPROPERTY_STREAM_MASTERCLOCK = 0x3,KSPROPERTY_STREAM_TIMEFORMAT = 0x4,KSPROPERTY_STREAM_PRESENTATIONTIME = 0x5,KSPROPERTY_STREAM_PRESENTATIONEXTENT = 0x6,KSPROPERTY_STREAM_FRAMETIME = 0x7,KSPROPERTY_STREAM_RATECAPABILITY = 0x8,KSPROPERTY_STREAM_RATE = 0x9,KSPROPERTY_STREAM_PIPE_ID = 0xA,};
enum $02FAD7642A42DC49E4482F6F328202A2 {KSMETHOD_BDA_CREATE_PIN_FACTORY = 0x0,KSMETHOD_BDA_DELETE_PIN_FACTORY = 0x1,KSMETHOD_BDA_CREATE_TOPOLOGY = 0x2,};
struct $05B1F1BDA3A085B0ABA09A777878EB7C {KSPROPERTY Property;KSPIN_DATAFLOW Direction;ULONG Index;ULONG PinType;ULONG RelatedPinIndex;KSPIN_MEDIUM Medium;};
enum $05DAA4B528850479245A9C123C494191 {KSPROPERTY_DVDSUBPIC_PALETTE = 0x0,KSPROPERTY_DVDSUBPIC_HLI = 0x1,KSPROPERTY_DVDSUBPIC_COMPOSIT_ON = 0x2,};
struct $0606DB5FE2099CCDC829F33B29607B55 {KSIDENTIFIER Identifier;ULONG Size;BOOL Looped;ULONG LoopPoint;BOOL InROM;KSDATAFORMAT Format;};
struct $060F75F85D33090A279ABE5EFCC5AB4A {KSPROPERTY Property;ULONG Standard;};
struct $07B7FBDB71A394C363DCB969C30B9F57 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_COMMON Statistics;};
struct $07D0DEFC473073A5B78BC3974C364183 {ULONG MaxGlobalInstanceCount;ULONG MaxFilterInstanceCount;ULONG MinFilterInstanceCount;const PCAUTOMATION_TABLE *AutomationTable;KSPIN_DESCRIPTOR KsPinDescriptor;};
enum $09A34D7915C9A95B91A5C3C199852FD2 {KSPROPERTY_CROSSBAR_CAPS = 0x0,KSPROPERTY_CROSSBAR_PININFO = 0x1,KSPROPERTY_CROSSBAR_CAN_ROUTE = 0x2,KSPROPERTY_CROSSBAR_ROUTE = 0x3,};
enum $0A77555B03865B677ABEDAD45C36FB86 {KSPROPERTY_MEDIASEEKING_CAPABILITIES = 0x0,KSPROPERTY_MEDIASEEKING_FORMATS = 0x1,KSPROPERTY_MEDIASEEKING_TIMEFORMAT = 0x2,KSPROPERTY_MEDIASEEKING_POSITION = 0x3,KSPROPERTY_MEDIASEEKING_STOPPOSITION = 0x4,KSPROPERTY_MEDIASEEKING_POSITIONS = 0x5,KSPROPERTY_MEDIASEEKING_DURATION = 0x6,KSPROPERTY_MEDIASEEKING_AVAILABLE = 0x7,KSPROPERTY_MEDIASEEKING_PREROLL = 0x8,KSPROPERTY_MEDIASEEKING_CONVERTTIMEFORMAT = 0x9,};
enum $0A8504B2A02FDAAC5DE9FC241C2D2824 {GeneralRegistryKey = 0x0,DeviceRegistryKey = 0x1,DriverRegistryKey = 0x2,HwProfileRegistryKey = 0x3,DeviceInterfaceRegistryKey = 0x4,};
struct $0B037F2534779A05E9AEAE9A3A29D997 {PDRIVER_DISPATCH DeviceIoControl;PDRIVER_DISPATCH Read;PDRIVER_DISPATCH Write;PDRIVER_DISPATCH Flush;PDRIVER_DISPATCH Close;PDRIVER_DISPATCH QuerySecurity;PDRIVER_DISPATCH SetSecurity;PFAST_IO_DEVICE_CONTROL FastDeviceIoControl;PFAST_IO_READ FastRead;PFAST_IO_WRITE FastWrite;};
enum $0B04060F21BCD959670CDC2C41862B4B {KSPROPERTY_TUNER_MODE_TV = 0x1,KSPROPERTY_TUNER_MODE_FM_RADIO = 0x2,KSPROPERTY_TUNER_MODE_AM_RADIO = 0x4,KSPROPERTY_TUNER_MODE_DSS = 0x8,KSPROPERTY_TUNER_MODE_ATSC = 0x10,};
enum $0B804802F465170881F43A3A4D8457F6 {KSPROPERTY_BDA_PIDFILTER_MAP_PIDS = 0x0,KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS = 0x1,KSPROPERTY_BDA_PIDFILTER_LIST_PIDS = 0x2,};
enum $0C48B1A02A365DA9EEBAB619832376BC {KS_AMVP_DO_NOT_CARE = 0x0,KS_AMVP_BEST_BANDWIDTH = 0x1,KS_AMVP_INPUT_SAME_AS_OUTPUT = 0x2,};
struct $0C4AC156F5CD9D086646B489056E0FB7 {const GUID *Set;ULONG Id;ULONG Flags;PCPFNEVENT_HANDLER Handler;};
enum $0CCF2589EBE4C99CC2ECB8B07AE7CB21 {KS_MPEG2Profile_Simple = 0x0,KS_MPEG2Profile_Main = 0x1,KS_MPEG2Profile_SNRScalable = 0x2,KS_MPEG2Profile_SpatiallyScalable = 0x3,KS_MPEG2Profile_High = 0x4,};
struct $0D4D90B30C078E58E26CBA964C3C5A4B {KSEVENT Event;ULONG NodeId;ULONG Reserved;};
struct $0E076CBD8F5A7ED08B697C5009EDFCFF {KSIDENTIFIER PropTypeSet;ULONG Id;ULONG PropertyLength;};
enum $0FC989869F227A36D749990E523E5F04 {PowerActionNone = 0x0,PowerActionReserved = 0x1,PowerActionSleep = 0x2,PowerActionHibernate = 0x3,PowerActionShutdown = 0x4,PowerActionShutdownReset = 0x5,PowerActionShutdownOff = 0x6,PowerActionWarmEject = 0x7,};
struct $113235CB38218359B65312E6A8B53D96 {LPCGUID Guid;ULONG InstanceCount;ULONG Flags;};
struct $117E3A994AEBF040E18388CACE709509 {union {struct {GUID Set;ULONG Id;ULONG Flags;};LONGLONG Alignment;};};
union $117E3A994AEBF040E18388CACE709509::$F044539147C377D1A0F579F3A4EAC6A7 {struct {GUID Set;ULONG Id;ULONG Flags;};LONGLONG Alignment;};
struct $12065485545C98CF3EA596DDCCDF0ED5 {BOOL fLargeRoom;};
struct $12A419A691843E3FACBCDACF473D8E54 {BOOL Mute;LONG Level;};
struct $155DA1A439C400442DF8DC3CA0B009F1 {ULONG AccessFlags;ULONG DescriptionSize;KSIDENTIFIER PropTypeSet;ULONG MembersListCount;ULONG Reserved;};
enum $15EAB5DB270905D3ADC7E2FB667B7EB6 {KSPROPERTY_BDA_PIN_ID = 0x0,KSPROPERTY_BDA_PIN_TYPE = 0x1,};
enum $1737843133A6E4DC3631406BF92A2320 {KSPROPERTY_BDA_TABLE_SECTION = 0x0,};
enum $179945923F574A37108B154726F97D56 {KSPROPERTY_VIDEOCOMPRESSION_GETINFO = 0x0,KSPROPERTY_VIDEOCOMPRESSION_KEYFRAME_RATE = 0x1,KSPROPERTY_VIDEOCOMPRESSION_PFRAMES_PER_KEYFRAME = 0x2,KSPROPERTY_VIDEOCOMPRESSION_QUALITY = 0x3,KSPROPERTY_VIDEOCOMPRESSION_OVERRIDE_KEYFRAME = 0x4,KSPROPERTY_VIDEOCOMPRESSION_OVERRIDE_FRAME_SIZE = 0x5,KSPROPERTY_VIDEOCOMPRESSION_WINDOWSIZE = 0x6,};
struct $1889F3BAB83DF1AC38A4E0627115688D {ULONG Size;ULONG Pin;WCHAR SymbolicLinkName[1];};
struct $190FAF90ED71AB17CA7DE27E94D1BCF3 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_NABTS Statistics;};
struct $1A75AE2BAA617C024EDEDCFC2DDC14A8 {KSPROPERTY Property;ULONG MixerPinId;ULONG Reserved;};
struct $1C1547A44DB0B6456BF86742FC40B205 {const GUID *Set;ULONG Id;ULONG Flags;PCPFNPROPERTY_HANDLER Handler;};
struct $1C72DF34A2E997094BDDFB37C83896FB {PFNALLOCATOR_ALLOCATEFRAME AllocateFrame;PFNALLOCATOR_FREEFRAME FreeFrame;};
struct $1C8C43135D010607C9E39DAEFBEEA658 {PVOID Context;ULONG Proportion;LONGLONG DeltaTime;};
enum $1CC95E689DB1A3C540445D2EA8FF4FA2 {CMP_Broadcast = 0x0,CMP_PointToPoint = 0x1,};
struct $1CE0BD7852F87226759D0185D4AC1198 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_CC_PIN Statistics;};
struct $1D3D1B49856810D80BCDEEA6F14E981E {BOOL Mute;LONG Minimum;LONG Maximum;LONG Reset;};
struct $1F0027E2ABF976FB8AD72E88DC9BB28B {KSPROPERTY Property;LONGLONG PictureNumber;LONGLONG DropCount;ULONG AverageFrameSize;};
struct $1F16BBD766B6BEFB723ABEAEF53457A3 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_COMMON_PIN Statistics;};
enum $1FFC3954F3EEED4BA40483519ADC2C52 {KSPROPERTY_BDA_ECM_MAP_STATUS = 0x0,KSPROPERTY_BDA_CA_MODULE_STATUS = 0x1,KSPROPERTY_BDA_CA_SMART_CARD_STATUS = 0x2,KSPROPERTY_BDA_CA_MODULE_UI = 0x3,KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS = 0x4,KSPROPERTY_BDA_CA_REMOVE_PROGRAM = 0x5,};
struct $204C6CB5B1CC0D35B371E5C594718A83 {LONGLONG Granularity;LONGLONG Error;};
enum $214B3FAB360CFC0FA4B19913ED3BE09A {KSMETHOD_STREAMIO_READ = 0x0,KSMETHOD_STREAMIO_WRITE = 0x1,};
enum $219D11F677061808D19E166038DCDF6D {KS_TUNER_TUNING_EXACT = 0x1,KS_TUNER_TUNING_FINE = 0x2,KS_TUNER_TUNING_COARSE = 0x3,};
enum $222C5FE2FBB310101DEF802D75341780 {KSPROPERTY_HRTF3D_PARAMS = 0x0,KSPROPERTY_HRTF3D_INITIALIZE = 0x1,KSPROPERTY_HRTF3D_FILTER_FORMAT = 0x2,};
struct $23496AA6B538BC04EA278D40B88E7395 {KSPROPERTY Property;KSPIN_MEDIUM IFMedium;};
struct $2361741245AFF1C51192B59F7339350B {INTERFACE Interface;PFNUSBCAMD_WaitOnDeviceEvent USBCAMD_WaitOnDeviceEvent;PFNUSBCAMD_BulkReadWrite USBCAMD_BulkReadWrite;PFNUSBCAMD_SetVideoFormat USBCAMD_SetVideoFormat;PFNUSBCAMD_SetIsoPipeState USBCAMD_SetIsoPipeState;PFNUSBCAMD_CancelBulkReadWrite USBCAMD_CancelBulkReadWrite;};
enum $2388D0CB73CB11DFDEA2035054DDD33D {KSPROPERTY_VIDEOPROCAMP_BRIGHTNESS = 0x0,KSPROPERTY_VIDEOPROCAMP_CONTRAST = 0x1,KSPROPERTY_VIDEOPROCAMP_HUE = 0x2,KSPROPERTY_VIDEOPROCAMP_SATURATION = 0x3,KSPROPERTY_VIDEOPROCAMP_SHARPNESS = 0x4,KSPROPERTY_VIDEOPROCAMP_GAMMA = 0x5,KSPROPERTY_VIDEOPROCAMP_COLORENABLE = 0x6,KSPROPERTY_VIDEOPROCAMP_WHITEBALANCE = 0x7,KSPROPERTY_VIDEOPROCAMP_BACKLIGHT_COMPENSATION = 0x8,KSPROPERTY_VIDEOPROCAMP_GAIN = 0x9,};
struct $24396BA7B1ABFC61208375C7C88D8B5F {union {ULONG OptionsFlags;ULONG RequirementsFlags;};POOL_TYPE PoolType;ULONG Frames;ULONG FrameSize;ULONG FileAlignment;ULONG Reserved;};
union $24396BA7B1ABFC61208375C7C88D8B5F::$DA7EE1E32CD45FB8635BE676609FC669 {ULONG OptionsFlags;ULONG RequirementsFlags;};
enum $2670392E564180BCAB600D3A48500581 {KSPROPERTY_BDA_MODULATION_TYPE = 0x0,KSPROPERTY_BDA_INNER_FEC_TYPE = 0x1,KSPROPERTY_BDA_INNER_FEC_RATE = 0x2,KSPROPERTY_BDA_OUTER_FEC_TYPE = 0x3,KSPROPERTY_BDA_OUTER_FEC_RATE = 0x4,KSPROPERTY_BDA_SYMBOL_RATE = 0x5,KSPROPERTY_BDA_SPECTRAL_INVERSION = 0x6,KSPROPERTY_BDA_GUARD_INTERVAL = 0x7,KSPROPERTY_BDA_TRANSMISSION_MODE = 0x8,};
struct $26873349DB0A36B1F3161FA857CA70AC {KSPROPERTY Property;KSRATE Rate;};
enum $270C55D2D3E5E2B5C5E1C425B61D62C1 {KSPROPERTY_VPCONFIG_NUMCONNECTINFO = 0x0,KSPROPERTY_VPCONFIG_GETCONNECTINFO = 0x1,KSPROPERTY_VPCONFIG_SETCONNECTINFO = 0x2,KSPROPERTY_VPCONFIG_VPDATAINFO = 0x3,KSPROPERTY_VPCONFIG_MAXPIXELRATE = 0x4,KSPROPERTY_VPCONFIG_INFORMVPINPUT = 0x5,KSPROPERTY_VPCONFIG_NUMVIDEOFORMAT = 0x6,KSPROPERTY_VPCONFIG_GETVIDEOFORMAT = 0x7,KSPROPERTY_VPCONFIG_SETVIDEOFORMAT = 0x8,KSPROPERTY_VPCONFIG_INVERTPOLARITY = 0x9,KSPROPERTY_VPCONFIG_DECIMATIONCAPABILITY = 0xA,KSPROPERTY_VPCONFIG_SCALEFACTOR = 0xB,KSPROPERTY_VPCONFIG_DDRAWHANDLE = 0xC,KSPROPERTY_VPCONFIG_VIDEOPORTID = 0xD,KSPROPERTY_VPCONFIG_DDRAWSURFACEHANDLE = 0xE,KSPROPERTY_VPCONFIG_SURFACEPARAMS = 0xF,};
enum $27AD37380C8900BF8828E9942DAD6F74 {KS_PixAspectRatio_NTSC4x3 = 0x0,KS_PixAspectRatio_NTSC16x9 = 0x1,KS_PixAspectRatio_PAL4x3 = 0x2,KS_PixAspectRatio_PAL16x9 = 0x3,};
enum $27EA88566304FD4A859B4EB0EE874253 {KSPROPERTY_GENERAL_COMPONENTID = 0x0,};
enum $2811190B5E8A43AD046E3AEC6C4B4077 {KSPROPERTY_AC3_ERROR_CONCEALMENT = 0x1,KSPROPERTY_AC3_ALTERNATE_AUDIO = 0x2,KSPROPERTY_AC3_DOWNMIX = 0x3,KSPROPERTY_AC3_BIT_STREAM_MODE = 0x4,KSPROPERTY_AC3_DIALOGUE_LEVEL = 0x5,KSPROPERTY_AC3_LANGUAGE_CODE = 0x6,KSPROPERTY_AC3_ROOM_TYPE = 0x7,};
struct $299134A1587F81C88B1AF91D3DBFCA39 {ULONG DialogueLevel;};
struct $2AA7958816AF26AF0A1E54EEE587A92C {ULONG InterleavedCapPossible;};
struct $2CC32A13BC47B0ADD425440A5881DEFA {ULONG MethodId;union {PFNKSFASTHANDLER MethodHandler;BOOLEAN MethodSupported;};};
union $2CC32A13BC47B0ADD425440A5881DEFA::$F1120EB057508E4EB018F6F06D0FF063 {PFNKSFASTHANDLER MethodHandler;BOOLEAN MethodSupported;};
enum $2CD358AE72CA35E88B6E5377F4286C0E {KSMETHOD_WAVETABLE_WAVE_ALLOC = 0x0,KSMETHOD_WAVETABLE_WAVE_FREE = 0x1,KSMETHOD_WAVETABLE_WAVE_FIND = 0x2,KSMETHOD_WAVETABLE_WAVE_WRITE = 0x3,};
enum $2D06E770D8F86C31A6EBC72A59D3B380 {KSPROPERTY_MPEG2VID_MODES = 0x0,KSPROPERTY_MPEG2VID_CUR_MODE = 0x1,KSPROPERTY_MPEG2VID_4_3_RECT = 0x2,KSPROPERTY_MPEG2VID_16_9_RECT = 0x3,KSPROPERTY_MPEG2VID_16_9_PANSCAN = 0x4,};
enum $2DEFE1B87100719F80278A026CBFF4D7 {KSPROPERTY_ALLOCATOR_CONTROL_HONOR_COUNT = 0x0,KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE = 0x1,KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS = 0x2,KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE = 0x3,};
enum $2E38A7C1F534E42343A61A8545C8A30E {KSPROPERTY_QUALITY_REPORT = 0x0,KSPROPERTY_QUALITY_ERROR = 0x1,};
enum $2E80CEBFECBA0EBADF6AA183D61A87F6 {KSEVENT_CYCLIC_TIME_INTERVAL = 0x0,};
struct $2E8FF8F0F30DAB89972BBD12E0BA3A8E {ULONG Attributes;ULONG BufferSize;PVOID BufferAddress;};
struct $2FCB7B16F35A994219C907239F9496DC {BOOL fRepeatPreviousBlock;BOOL fErrorInCurrentBlock;};
enum $323950C9678C627AEFAD637828B7290C {BDA_PROMISCUOUS_MULTICAST = 0x0,BDA_FILTERED_MULTICAST = 0x1,BDA_NO_MULTICAST = 0x2,};
enum $32421077C2010E274338AC2C523E1512 {KS_SEEKING_CanSeekAbsolute = 0x1,KS_SEEKING_CanSeekForwards = 0x2,KS_SEEKING_CanSeekBackwards = 0x4,KS_SEEKING_CanGetCurrentPos = 0x8,KS_SEEKING_CanGetStopPos = 0x10,KS_SEEKING_CanGetDuration = 0x20,KS_SEEKING_CanPlayBackwards = 0x40,};
struct $33D5B48BFB25F68EBEA0D059F2171BBA {ULONG PropertyId;union {PFNKSHANDLER GetPropertyHandler;BOOLEAN GetSupported;};ULONG MinProperty;ULONG MinData;union {PFNKSHANDLER SetPropertyHandler;BOOLEAN SetSupported;};const KSPROPERTY_VALUES *Values;ULONG RelationsCount;const KSPROPERTY *Relations;PFNKSHANDLER SupportHandler;ULONG SerializedSize;};
union $33D5B48BFB25F68EBEA0D059F2171BBA::$32A657B5357991FC951178A7ED233F2B {PFNKSHANDLER SetPropertyHandler;BOOLEAN SetSupported;};
union $33D5B48BFB25F68EBEA0D059F2171BBA::$58FB3E9EF9061AAB6CC24D01751A314D {PFNKSHANDLER GetPropertyHandler;BOOLEAN GetSupported;};
struct $358B21B769DBB67C3050F61FED658732 {KSPROPERTY Property;ULONG Mode;ULONG StandardsSupported;ULONG MinFrequency;ULONG MaxFrequency;ULONG TuningGranularity;ULONG NumberOfInputs;ULONG SettlingTime;ULONG Strategy;};
struct $37B8E770EA172EE03D1653C7B692D623 {ULONG NotificationType;union {struct $::$1B15D34C184CB996FC269D8F9168C70F::$557E0A75632B2AB77ABA22F73346E46E EventHandle;struct $::$1B15D34C184CB996FC269D8F9168C70F::$77A8D5BA7911BAC3E5E8672810CEE79A SemaphoreHandle;struct $::$1B15D34C184CB996FC269D8F9168C70F::$F60F9682E16A06CBF246055AD9379216 EventObject;struct $::$1B15D34C184CB996FC269D8F9168C70F::$88E5B7AA2308BDD340E63FD79CED674D SemaphoreObject;struct $::$1B15D34C184CB996FC269D8F9168C70F::$58C2C17DBEA3E5C4294F58D3F434B669 Dpc;struct $::$1B15D34C184CB996FC269D8F9168C70F::$F0EAB68459A9F767BF6487584D0432BE WorkItem;struct $::$1B15D34C184CB996FC269D8F9168C70F::$40DF1D993F355996A89CD36C5B1ABF70 KsWorkItem;struct $::$1B15D34C184CB996FC269D8F9168C70F::$2045542961514ACF8A05342E7D7A4BD3 Alignment;};};
union $37B8E770EA172EE03D1653C7B692D623::$1B15D34C184CB996FC269D8F9168C70F {struct $::$1B15D34C184CB996FC269D8F9168C70F::$557E0A75632B2AB77ABA22F73346E46E EventHandle;struct $::$1B15D34C184CB996FC269D8F9168C70F::$77A8D5BA7911BAC3E5E8672810CEE79A SemaphoreHandle;struct $::$1B15D34C184CB996FC269D8F9168C70F::$F60F9682E16A06CBF246055AD9379216 EventObject;struct $::$1B15D34C184CB996FC269D8F9168C70F::$88E5B7AA2308BDD340E63FD79CED674D SemaphoreObject;struct $::$1B15D34C184CB996FC269D8F9168C70F::$58C2C17DBEA3E5C4294F58D3F434B669 Dpc;struct $::$1B15D34C184CB996FC269D8F9168C70F::$F0EAB68459A9F767BF6487584D0432BE WorkItem;struct $::$1B15D34C184CB996FC269D8F9168C70F::$40DF1D993F355996A89CD36C5B1ABF70 KsWorkItem;struct $::$1B15D34C184CB996FC269D8F9168C70F::$2045542961514ACF8A05342E7D7A4BD3 Alignment;};
struct $38332C6D8513F636DCCBCCABE200BE7A {ULONG Size;KSDS3D_HRTF_FILTER_QUALITY Quality;FLOAT SampleRate;ULONG MaxFilterSize;ULONG FilterTransientMuteLength;ULONG FilterOverlapBufferLength;ULONG OutputOverlapBufferLength;ULONG Reserved;};
struct $3878B18F15C290CF7BC80116234DE41C {HANDLE QualityManager;PVOID Context;};
enum $38DCB8AC08778B6D83885D33F45337CD {KSPROPERTY_DIRECTSOUND3DLISTENER_ALL = 0x0,KSPROPERTY_DIRECTSOUND3DLISTENER_POSITION = 0x1,KSPROPERTY_DIRECTSOUND3DLISTENER_VELOCITY = 0x2,KSPROPERTY_DIRECTSOUND3DLISTENER_ORIENTATION = 0x3,KSPROPERTY_DIRECTSOUND3DLISTENER_DISTANCEFACTOR = 0x4,KSPROPERTY_DIRECTSOUND3DLISTENER_ROLLOFFFACTOR = 0x5,KSPROPERTY_DIRECTSOUND3DLISTENER_DOPPLERFACTOR = 0x6,KSPROPERTY_DIRECTSOUND3DLISTENER_BATCH = 0x7,KSPROPERTY_DIRECTSOUND3DLISTENER_ALLOCATION = 0x8,};
struct $3990AA19D6F3231E9709B3F98F437D89 {ULONG RatioNumerator;ULONG RatioDenominator;ULONG RatioConstantMargin;};
enum $3A65399903FADBC05E4C10BA9E609C32 {KSINTERFACE_MEDIA_MUSIC = 0x0,KSINTERFACE_MEDIA_WAVE_BUFFERED = 0x1,KSINTERFACE_MEDIA_WAVE_QUEUED = 0x2,};
struct $3A744348A6C9F73853F568E19FD6B4F7 {REFERENCE_TIME StartTime;LONG Rate;};
enum $3A98730CE8FA5C41DCBE091A69EDD8A4 {KSEVENT_VPVBINOTIFY_FORMATCHANGE = 0x0,};
struct $3E8BFD172CC0232DA5E7071EC2A0A89F {ULONG CreateFlags;ULONG Node;};
enum $3EB7CD5A2478AE20126886459846210D {KSPROPERTY_BDA_AUTODEMODULATE_START = 0x0,KSPROPERTY_BDA_AUTODEMODULATE_STOP = 0x1,};
enum $3F0E1F32807E838958D0814D130CFE59 {KS_AM_RATE_SimpleRateChange = 0x1,KS_AM_RATE_ExactRateChange = 0x2,KS_AM_RATE_MaxFullDataRate = 0x3,KS_AM_RATE_Step = 0x4,};
struct $40A6D5622BA75F270314126148B7B4DB {INTERFACE Interface;PFNQUERYMEDIUMSLIST QueryMediumsList;};
enum $414881918899110C4C8585ADE11D74B4 {KSPROPERTY_STREAMALLOCATOR_FUNCTIONTABLE = 0x0,KSPROPERTY_STREAMALLOCATOR_STATUS = 0x1,};
struct $42F99BA4BF00EE2B1B9AFA99FBE7C8B1 {ULONG CreateItemsCount;PKSOBJECT_CREATE_ITEM CreateItemsList;};
struct $433BAB6AAAB02EEB6CF36ABDE1A4217C {KSDS3D_HRTF_FILTER_METHOD FilterMethod;KSDS3D_HRTF_COEFF_FORMAT CoeffFormat;KSDS3D_HRTF_FILTER_VERSION Version;ULONG Reserved;};
enum $4359A6DF66D6C0A2E03091CE4CF62226 {KSDEGRADE_STANDARD_SAMPLE = 0x0,KSDEGRADE_STANDARD_QUALITY = 0x1,KSDEGRADE_STANDARD_COMPUTATION = 0x2,KSDEGRADE_STANDARD_SKIP = 0x3,};
struct $436EEAB87169589F8FF54A3E6B966B58 {LONG LeftAttenuation;LONG RightAttenuation;};
struct $441EBF211493C42D9642F77D873F68D1 {KSPROPERTY Property;ULONG StreamIndex;LONG DefaultKeyFrameRate;LONG DefaultPFrameRate;LONG DefaultQuality;LONG NumberOfQualitySettings;LONG Capabilities;};
struct $4436E3E3B2A9BAC50D793DBB422657C7 {KSNODEPROPERTY NodeProperty;PVOID AppContext;ULONG Length;ULONG Reserved;};
enum $46A0A762E46BF16A5C029C85901AE439 {BusQueryDeviceID = 0x0,BusQueryHardwareIDs = 0x1,BusQueryCompatibleIDs = 0x2,BusQueryInstanceID = 0x3,BusQueryDeviceSerialNumber = 0x4,};
enum $46FFE91252AC4BB1103ECF2E486A148F {KS_CompressionCaps_CanQuality = 0x1,KS_CompressionCaps_CanCrunch = 0x2,KS_CompressionCaps_CanKeyFrame = 0x4,KS_CompressionCaps_CanBFrame = 0x8,KS_CompressionCaps_CanWindow = 0x10,};
struct $48207AC35C517F533F0BE91ADB0B9FCA {KSPROPERTY Property;ULONG ModesSupported;KSPIN_MEDIUM VideoMedium;KSPIN_MEDIUM TVAudioMedium;KSPIN_MEDIUM RadioAudioMedium;};
struct $48F34F6E58318E719B3C17D5DF8D3416 {WAVEFORMATEX Format;union $48F34F6E58318E719B3C17D5DF8D3416::$BF32DB6F8F7ADBF71F90C18AFCE2FD9C Samples;DWORD dwChannelMask;GUID SubFormat;};
union $48F34F6E58318E719B3C17D5DF8D3416::$BF32DB6F8F7ADBF71F90C18AFCE2FD9C {WORD wValidBitsPerSample;WORD wSamplesPerBlock;WORD wReserved;};
enum $49B4DF22A98C0153E90C1246F17F787B {KSPROPERTY_VIDEOENCODER_CAPS = 0x0,KSPROPERTY_VIDEOENCODER_STANDARD = 0x1,KSPROPERTY_VIDEOENCODER_COPYPROTECTION = 0x2,KSPROPERTY_VIDEOENCODER_CC_ENABLE = 0x3,};
union $49DE94CD170A783608C4A6CA5E13CF1F {struct {LONGLONG SignedMinimum;LONGLONG SignedMaximum;};struct {ULONGLONG UnsignedMinimum;ULONGLONG UnsignedMaximum;};};
struct $49DE94CD170A783608C4A6CA5E13CF1F::$445634E971F5AB42189D2AF4A82D7917 {ULONGLONG UnsignedMinimum;ULONGLONG UnsignedMaximum;};
struct $49DE94CD170A783608C4A6CA5E13CF1F::$EEA291B95E2758FCA85357F8BCFF0FA8 {LONGLONG SignedMinimum;LONGLONG SignedMaximum;};
enum $4B933B38561F3202E8B681F2D4CA4B1B {KS_MPEG2Level_Low = 0x0,KS_MPEG2Level_Main = 0x1,KS_MPEG2Level_High1440 = 0x2,KS_MPEG2Level_High = 0x3,};
enum $4BE76D8A2D42FA48351D108905A477D8 {KSPROPERTY_GM_GRAPHMANAGER = 0x0,KSPROPERTY_GM_TIMESTAMP_CLOCK = 0x1,KSPROPERTY_GM_RATEMATCH = 0x2,KSPROPERTY_GM_RENDER_CLOCK = 0x3,};
struct $4C3688935B439E6B73B5D283DA0CA595 {ULONG InterfacesCount;const KSPIN_INTERFACE *Interfaces;ULONG MediumsCount;const KSPIN_MEDIUM *Mediums;ULONG DataRangesCount;const PKSDATARANGE *DataRanges;KSPIN_DATAFLOW DataFlow;KSPIN_COMMUNICATION Communication;const GUID *Category;const GUID *Name;union {LONGLONG Reserved;struct {ULONG ConstrainedDataRangesCount;PKSDATARANGE *ConstrainedDataRanges;};};};
union $4C3688935B439E6B73B5D283DA0CA595::$9EF2451CEFA2D95A0F2C171B14CF10A6 {LONGLONG Reserved;struct {ULONG ConstrainedDataRangesCount;PKSDATARANGE *ConstrainedDataRanges;};};
enum $4FF2CEF7F943208657A69CE25EA0FE31 {BDA_CHANGES_COMPLETE = 0x0,BDA_CHANGES_PENDING = 0x1,};
struct $518AEB1FEE0990110D4FC7592EB5CC55 {DS3DVECTOR Position;DS3DVECTOR Velocity;DS3DVECTOR OrientFront;DS3DVECTOR OrientTop;FLOAT DistanceFactor;FLOAT RolloffFactor;FLOAT DopplerFactor;};
struct $52AD6460DAD19A3D48443005CDCF2412 {ULONG QuietCompression;ULONG LoudCompression;};
struct $52BD71AC0F61B53F3E44045ED088295E {LONGLONG Duration;ULONG FrameFlags;ULONG Reserved;};
struct $53BCF8451FB1BBF1B3D3F15C66D0D1DB {ULONG Version;const PCAUTOMATION_TABLE *AutomationTable;ULONG PinSize;ULONG PinCount;const PCPIN_DESCRIPTOR *Pins;ULONG NodeSize;ULONG NodeCount;const PCNODE_DESCRIPTOR *Nodes;ULONG ConnectionCount;const PCCONNECTION_DESCRIPTOR *Connections;ULONG CategoryCount;const GUID *Categories;};
enum $54AE5E5F19366D8071D858EB4F56617A {KSPROPERTY_AEC_NOISE_FILL_ENABLE = 0x0,KSPROPERTY_AEC_STATUS = 0x1,KSPROPERTY_AEC_MODE = 0x2,};
struct $56FA1B9DDCE9D648FE900988960BAD6F {KSPROPERTY Property;ULONG StandardsSupported;ULONG Capabilities;ULONG SettlingTime;ULONG HSyncPerVSync;};
struct $58C2A16435EA044F8AD69979A6836AA4 {KSDPC_ITEM DpcItem;LIST_ENTRY BufferList;};
struct $58C2C1BF6568EE28BD9B872E6BA03976 {KSPIN_INTERFACE Interface;KSPIN_MEDIUM Medium;ULONG PinId;HANDLE PinToHandle;KSPRIORITY Priority;};
enum $59F47961FEC953F20A64EC788B1D06EA {KSPROPERTY_TVAUDIO_CAPS = 0x0,KSPROPERTY_TVAUDIO_MODE = 0x1,KSPROPERTY_TVAUDIO_CURRENTLY_AVAILABLE_MODES = 0x2,};
struct $5B98A3A85E20DBA203FE93F0C6DC9B6B {KSPROPERTY Property;KS_AMVPSIZE Size;};
enum $5DA232089AAC7698584D5CE3C3A8D71B {KSPROPERTY_CAMERACONTROL_PAN = 0x0,KSPROPERTY_CAMERACONTROL_TILT = 0x1,KSPROPERTY_CAMERACONTROL_ROLL = 0x2,KSPROPERTY_CAMERACONTROL_ZOOM = 0x3,KSPROPERTY_CAMERACONTROL_EXPOSURE = 0x4,KSPROPERTY_CAMERACONTROL_IRIS = 0x5,KSPROPERTY_CAMERACONTROL_FOCUS = 0x6,};
enum $5F4F90A626A6FDB67639732D9E3389D6 {KSPROPERTY_CONNECTION_STATE = 0x0,KSPROPERTY_CONNECTION_PRIORITY = 0x1,KSPROPERTY_CONNECTION_DATAFORMAT = 0x2,KSPROPERTY_CONNECTION_ALLOCATORFRAMING = 0x3,KSPROPERTY_CONNECTION_PROPOSEDATAFORMAT = 0x4,KSPROPERTY_CONNECTION_ACQUIREORDERING = 0x5,KSPROPERTY_CONNECTION_ALLOCATORFRAMING_EX = 0x6,KSPROPERTY_CONNECTION_STARTAT = 0x7,};
struct $61992E1E6DA7B91ECC7FA4A74B115A04 {LONGLONG Earliest;LONGLONG Latest;};
enum $62D95A1861CF901152B53DFA047F6B81 {KSINTERFACE_FILEIO_STREAMING = 0x0,};
struct $631353BB22A3E1576EFF7DC760D2A07D {ULONGLONG SteppingDelta;KSPROPERTY_BOUNDS_LONGLONG Bounds;};
enum $6482D7A0F8ECEE932DF178E2624E51B8 {PerRequestExtension = 0x0,DmaBuffer = 0x1,SRBDataBuffer = 0x2,};
enum $658345D4A0AC297778ED4BE2EFA31AA1 {KS_AnalogVideo_None = 0x0,KS_AnalogVideo_NTSC_M = 0x1,KS_AnalogVideo_NTSC_M_J = 0x2,KS_AnalogVideo_NTSC_433 = 0x4,KS_AnalogVideo_PAL_B = 0x10,KS_AnalogVideo_PAL_D = 0x20,KS_AnalogVideo_PAL_G = 0x40,KS_AnalogVideo_PAL_H = 0x80,KS_AnalogVideo_PAL_I = 0x100,KS_AnalogVideo_PAL_M = 0x200,KS_AnalogVideo_PAL_N = 0x400,KS_AnalogVideo_PAL_60 = 0x800,KS_AnalogVideo_SECAM_B = 0x1000,KS_AnalogVideo_SECAM_D = 0x2000,KS_AnalogVideo_SECAM_G = 0x4000,KS_AnalogVideo_SECAM_H = 0x8000,KS_AnalogVideo_SECAM_K = 0x10000,KS_AnalogVideo_SECAM_K1 = 0x20000,KS_AnalogVideo_SECAM_L = 0x40000,KS_AnalogVideo_SECAM_L1 = 0x80000,KS_AnalogVideo_PAL_N_COMBO = 0x100000,};
struct $66CF5E28886A6CE6C0E44A3DF6E2CD53 {BOOL fCopyrighted;BOOL fOriginal;};
enum $67063D379273ADCD5D91019DFED2E95F {KSEVENT_VIDEODECODER_CHANGED = 0x0,};
enum $676B88915C1B724692BC802D411C1179 {TIME_GET_STREAM_TIME = 0x0,TIME_READ_ONBOARD_CLOCK = 0x1,TIME_SET_ONBOARD_CLOCK = 0x2,};
enum $685D0097497CB64E18A21F243FD25622 {KSPROPERTY_ITD3D_PARAMS = 0x0,};
struct $686FDF1C0C03C3D9039AD8B14FB9C99A {PVOID Context;ULONG Status;};
struct $6957CE76948A33FD66E00469AB6817B0 {KSPROPERTY Property;ULONG StreamIndex;LONG Value;};
struct $69DAD432D0597BAB6A67398C913F94DB {KSPROPERTY Property;ULONG PinId;ULONG Reserved;};
enum $6A1D6C7F5A20D066AEDEECAB36006C72 {KSPROPERTY_BDA_RF_TUNER_FREQUENCY = 0x0,KSPROPERTY_BDA_RF_TUNER_POLARITY = 0x1,KSPROPERTY_BDA_RF_TUNER_RANGE = 0x2,KSPROPERTY_BDA_RF_TUNER_TRANSPONDER = 0x3,KSPROPERTY_BDA_RF_TUNER_BANDWIDTH = 0x4,KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER = 0x5,};
enum $6A4F9FD289D1A939E2A70058613B4F06 {KsAcquireOnly = 0x0,KsAcquireAndRemove = 0x1,KsAcquireOnlySingleItem = 0x2,KsAcquireAndRemoveOnlySingleItem = 0x3,};
enum $6A58EEAD8E4C7DF4F80FA7C6A74A3704 {KSPROPERTY_PIN_CINSTANCES = 0x0,KSPROPERTY_PIN_CTYPES = 0x1,KSPROPERTY_PIN_DATAFLOW = 0x2,KSPROPERTY_PIN_DATARANGES = 0x3,KSPROPERTY_PIN_DATAINTERSECTION = 0x4,KSPROPERTY_PIN_INTERFACES = 0x5,KSPROPERTY_PIN_MEDIUMS = 0x6,KSPROPERTY_PIN_COMMUNICATION = 0x7,KSPROPERTY_PIN_GLOBALCINSTANCES = 0x8,KSPROPERTY_PIN_NECESSARYINSTANCES = 0x9,KSPROPERTY_PIN_PHYSICALCONNECTION = 0xA,KSPROPERTY_PIN_CATEGORY = 0xB,KSPROPERTY_PIN_NAME = 0xC,KSPROPERTY_PIN_CONSTRAINEDDATARANGES = 0xD,KSPROPERTY_PIN_PROPOSEDATAFORMAT = 0xE,};
enum $6B2401DF69FC0CC161171E2CBCDDC1C6 {KSEVENT_LOOPEDSTREAMING_POSITION = 0x0,};
enum $6B870DC24D0C8AC4BA7D2C047999A6A3 {KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE = 0x0,KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST = 0x1,KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE = 0x2,};
struct $6B8E9FF8FB4DE59DE7DA4092DA92354D {KSNODEPROPERTY NodeProperty;PVOID ListenerId;ULONG Reserved;};
enum $6C0BF487A7DD9AC5ADF33D9E356F7EE3 {IrpProcessed = 0x0,IrpNotCompleted = 0x1,IrpNotWmi = 0x2,IrpForward = 0x3,};
enum $6C28A36E3B687017C39113137644E2AF {KSPROPERTY_SYSAUDIO_NORMAL_DEFAULT = 0x0,KSPROPERTY_SYSAUDIO_PLAYBACK_DEFAULT = 0x1,KSPROPERTY_SYSAUDIO_RECORD_DEFAULT = 0x2,KSPROPERTY_SYSAUDIO_MIDI_DEFAULT = 0x3,KSPROPERTY_SYSAUDIO_MIXER_DEFAULT = 0x4,};
struct $6C32D841228ADC85BF22C8C3850F7AC4 {ULONG ContentId;DRMRIGHTS DrmRights;};
enum $6D08AF020E88675B59174822EC55B914 {KSEVENT_CLOCK_INTERVAL_MARK = 0x0,KSEVENT_CLOCK_POSITION_MARK = 0x1,};
struct $6D40E8E2125A3BBCEB5B162FD51EF33B {DS3DVECTOR Front;DS3DVECTOR Top;};
enum $6DAD80B3977302E5EA3CDCFB6538A59F {KSMETHOD_STREAMALLOCATOR_ALLOC = 0x0,KSMETHOD_STREAMALLOCATOR_FREE = 0x1,};
struct $6F08919EF02DAA05323F80511ECED656 {KSPROPERTY Property;ULONG NumberOfInputs;ULONG NumberOfOutputs;};
enum $6F5958920F6A8F401B50E2A1B2D54572 {KSPROPERTY_BDA_LNB_LOF_LOW_BAND = 0x0,KSPROPERTY_BDA_LNB_LOF_HIGH_BAND = 0x1,KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY = 0x2,};
enum $6F6C2F72068A7A854C30F881415EDCB8 {KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE = 0x0,KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST = 0x1,KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE = 0x2,};
enum $6F9F41060DD80647953DB726CA7F25E7 {KS_SEEKING_NoPositioning = 0x0,KS_SEEKING_AbsolutePositioning = 0x1,KS_SEEKING_RelativePositioning = 0x2,KS_SEEKING_IncrementalPositioning = 0x3,KS_SEEKING_PositioningBitsMask = 0x3,KS_SEEKING_SeekToKeyFrame = 0x4,KS_SEEKING_ReturnTime = 0x8,};
enum $702932362B8608D728382EB01F6EA68B {KSPROPERTY_BDA_NULL_TRANSFORM_START = 0x0,KSPROPERTY_BDA_NULL_TRANSFORM_STOP = 0x1,};
struct $7069A3AF9C526B33740CA7D5809B477E {ULONG Granularity;ULONG Capacity;};
struct $707EC234ECD45402760253CA9174D40C {KSPROPERTY_MEMBERSHEADER MembersHeader;const void *Members;};
enum $714E217E1FF07AEF9AC8D62CE7BB20D6 {KSPROPERTY_BDA_VOID_TRANSFORM_START = 0x0,KSPROPERTY_BDA_VOID_TRANSFORM_STOP = 0x1,};
enum $729DCE355D7523E6CA017E6077BAB356 {KSPROPERTY_TOPOLOGY_CATEGORIES = 0x0,KSPROPERTY_TOPOLOGY_NODES = 0x1,KSPROPERTY_TOPOLOGY_CONNECTIONS = 0x2,KSPROPERTY_TOPOLOGY_NAME = 0x3,};
enum $7392A4CB0F03A8B0718AEF6E3D9052C7 {DevicePropertyDeviceDescription = 0x0,DevicePropertyHardwareID = 0x1,DevicePropertyCompatibleIDs = 0x2,DevicePropertyBootConfiguration = 0x3,DevicePropertyBootConfigurationTranslated = 0x4,DevicePropertyClassName = 0x5,DevicePropertyClassGuid = 0x6,DevicePropertyDriverKeyName = 0x7,DevicePropertyManufacturer = 0x8,DevicePropertyFriendlyName = 0x9,DevicePropertyLocationInformation = 0xA,DevicePropertyPhysicalDeviceObjectName = 0xB,DevicePropertyBusTypeGuid = 0xC,DevicePropertyLegacyBusType = 0xD,DevicePropertyBusNumber = 0xE,DevicePropertyEnumeratorName = 0xF,DevicePropertyAddress = 0x10,DevicePropertyUINumber = 0x11,DevicePropertyInstallState = 0x12,DevicePropertyRemovalPolicy = 0x13,};
struct $742D342C7048E2C3902DF7570B72F6FC {ULONG Size;ULONG Flags;union {HANDLE ObjectHandle;PVOID ObjectPointer;};PVOID Reserved;KSEVENT Event;KSEVENTDATA EventData;};
union $742D342C7048E2C3902DF7570B72F6FC::$1E7C0E17512837337D4DA69F160D7B1A {HANDLE ObjectHandle;PVOID ObjectPointer;};
struct $7445C9FCFCC2899651BCA0E341BC0369 {KSNODEPROPERTY NodeProperty;ULONG DevSpecificId;ULONG DeviceInfo;ULONG Length;};
struct $764676431BC78EE50306C71955FB365D {KSPROPERTY Property;ULONG Value;};
enum $7772B546DBDF650B52C572BF7BB5BA92 {KSPROPERTY_AUDDECOUT_MODES = 0x0,KSPROPERTY_AUDDECOUT_CUR_MODE = 0x1,};
enum $7A8E7332A2E71E967EDB7B241741D182 {KSPROPERTY_SYSAUDIO_DEVICE_COUNT = 0x1,KSPROPERTY_SYSAUDIO_DEVICE_FRIENDLY_NAME = 0x2,KSPROPERTY_SYSAUDIO_DEVICE_INSTANCE = 0x3,KSPROPERTY_SYSAUDIO_DEVICE_INTERFACE_NAME = 0x4,KSPROPERTY_SYSAUDIO_SELECT_GRAPH = 0x5,KSPROPERTY_SYSAUDIO_CREATE_VIRTUAL_SOURCE = 0x6,KSPROPERTY_SYSAUDIO_DEVICE_DEFAULT = 0x7,KSPROPERTY_SYSAUDIO_INSTANCE_INFO = 0xE,KSPROPERTY_SYSAUDIO_COMPONENT_ID = 0x10,};
enum $7CE1B7F1EC16E342EFF5A9F3696EB2C0 {KsListEntryTail = 0x0,KsListEntryHead = 0x1,};
enum $7CE1FE37114556B00E2D910941BCF644 {BDA_SIGNAL_UNAVAILABLE = 0x0,BDA_SIGNAL_INACTIVE = 0x1,BDA_SIGNAL_ACTIVE = 0x2,};
struct $7D6AD1D4C0599A70ED2A75DF53A62D54 {LONGLONG Current;LONGLONG Stop;KS_SEEKING_FLAGS CurrentFlags;KS_SEEKING_FLAGS StopFlags;};
struct $7DA6CEE7E211DED2F61B14AB99948ADC {KSPROPERTY Property;PVOID Context;PFNDRMADDCONTENTHANDLERS DrmAddContentHandlers;PFNDRMCREATECONTENTMIXED DrmCreateContentMixed;PFNDRMDESTROYCONTENT DrmDestroyContent;PFNDRMFORWARDCONTENTTODEVICEOBJECT DrmForwardContentToDeviceObject;PFNDRMFORWARDCONTENTTOFILEOBJECT DrmForwardContentToFileObject;PFNDRMFORWARDCONTENTTOINTERFACE DrmForwardContentToInterface;PFNDRMGETCONTENTRIGHTS DrmGetContentRights;};
struct $7DB559BE1DE343E17A8A94B6F2E38031 {LONGLONG PresentationStart;LONGLONG Duration;KSPIN_INTERFACE Interface;LONG Rate;ULONG Flags;};
enum $8142B63D1170E3CCF91671CCCC3193B7 {CMP_PlugLocal = 0x0,CMP_PlugRemote = 0x1,};
struct $816E3560EF21380C948191659F672DF0 {ULONG MaximumChannelsPerConnection;ULONG MinimumBitsPerSample;ULONG MaximumBitsPerSample;ULONG MinimumSampleFrequency;ULONG MaximumSampleFrequency;ULONG TotalConnections;ULONG ActiveConnections;};
struct $8251F34BCF49AE1C266F7CD180791646 {KSNODEPROPERTY NodeProperty;LONG Channel;ULONG Reserved;};
struct $8276AF68B2084DDEC7235E96B5A3DDF6 {ULONG Size;ULONG Flags;GUID Attribute;};
enum $84B3C5477E189348A14D3C2A7517CC31 {KSPROPERTY_SYSAUDIO_ATTACH_VIRTUAL_SOURCE = 0x1,};
enum $85B8D048AA221EC9AB61032617833AB7 {FLOAT_COEFF = 0x0,SHORT_COEFF = 0x1,KSDS3D_COEFF_COUNT = 0x2,};
struct $85CBE24E9ED55DBB779718CA5D73A273 {KSPROPERTY Property;ULONG Mode;};
enum $861DD39FC4CEDEF9FD3B0ECFEB4EA61F {KSEVENT_STREAMALLOCATOR_INTERNAL_FREEFRAME = 0x0,KSEVENT_STREAMALLOCATOR_FREEFRAME = 0x1,};
struct $8630A1F515F1D9088A894BA95A0F4D66 {KSPROPERTY Property;VBICODECFILTERING_SCANLINES Scanlines;};
struct $87CE1B284ED7C4D9787DE2C17B5E3229 {ULONG Size;ULONG TypeSpecificFlags;KSTIME PresentationTime;LONGLONG Duration;ULONG FrameExtent;ULONG DataUsed;PVOID Data;ULONG OptionsFlags;};
enum $87F25CE704E45E1C4AD5F80E170A75FF {KS_VIDEODECODER_FLAGS_CAN_DISABLE_OUTPUT = 0x1,KS_VIDEODECODER_FLAGS_CAN_USE_VCR_LOCKING = 0x2,KS_VIDEODECODER_FLAGS_CAN_INDICATE_LOCKED = 0x4,};
enum $88B706C139ABA6F86ADC31E6AAF44FB3 {KSPROPERTY_RTAUDIO_GETPOSITIONFUNCTION = 0x0,};
enum $8C42F93EAAD4EBF2FF4C30FDE456EABE {CMP_PlugOut = 0x0,CMP_PlugIn = 0x1,};
enum $8D43FB820B033ED13008555ED0EFBEEB {InterruptSyncModeNormal = 0x1,InterruptSyncModeAll = 0x2,InterruptSyncModeRepeat = 0x3,};
enum $8DE99528E372621AB370A19368014C30 {KSMETHOD_BDA_START_CHANGES = 0x0,KSMETHOD_BDA_CHECK_CHANGES = 0x1,KSMETHOD_BDA_COMMIT_CHANGES = 0x2,KSMETHOD_BDA_GET_CHANGE_STATE = 0x3,};
enum $8E304CD910907B07F66BA6A3540081CA {KS_PhysConn_Video_Tuner = 0x1,KS_PhysConn_Video_Composite = 0x2,KS_PhysConn_Video_SVideo = 0x3,KS_PhysConn_Video_RGB = 0x4,KS_PhysConn_Video_YRYBY = 0x5,KS_PhysConn_Video_SerialDigital = 0x6,KS_PhysConn_Video_ParallelDigital = 0x7,KS_PhysConn_Video_SCSI = 0x8,KS_PhysConn_Video_AUX = 0x9,KS_PhysConn_Video_1394 = 0xA,KS_PhysConn_Video_USB = 0xB,KS_PhysConn_Video_VideoDecoder = 0xC,KS_PhysConn_Video_VideoEncoder = 0xD,KS_PhysConn_Video_SCART = 0xE,KS_PhysConn_Audio_Tuner = 0x1000,KS_PhysConn_Audio_Line = 0x1001,KS_PhysConn_Audio_Mic = 0x1002,KS_PhysConn_Audio_AESDigital = 0x1003,KS_PhysConn_Audio_SPDIFDigital = 0x1004,KS_PhysConn_Audio_SCSI = 0x1005,KS_PhysConn_Audio_AUX = 0x1006,KS_PhysConn_Audio_1394 = 0x1007,KS_PhysConn_Audio_USB = 0x1008,KS_PhysConn_Audio_AudioDecoder = 0x1009,};
enum $8EE7F9EA7D1453B89425165DC84C8DAD {KSEVENT_CONTROL_CHANGE = 0x0,};
struct $8F18F53EFBEBE9496980818DD790123F {ULONGLONG PlayOffset;ULONGLONG WriteOffset;};
struct $8F4AC9317002A11552A6341450417F12 {PDRIVER_DISPATCH Create;PVOID Context;UNICODE_STRING ObjectClass;PSECURITY_DESCRIPTOR SecurityDescriptor;ULONG Flags;};
struct $8FE9905039884FA12A33AF170E497D82 {ULONG InsideConeAngle;ULONG OutsideConeAngle;};
struct $91BD25BE856B91F4F94C146E39BAA29E {GUID Manufacturer;GUID Product;GUID Component;GUID Name;ULONG Version;ULONG Revision;};
enum $9239C4646B2840F9E3B30EC525310BA9 {KsObjectTypeDevice = 0x0,KsObjectTypeFilterFactory = 0x1,KsObjectTypeFilter = 0x2,KsObjectTypePin = 0x3,};
struct $9283D0FA6633E8568FC062864CF70F24 {ULONG InterleavedCapSupported;};
enum $931B4160E02726FBC71D690B6D34D309 {KSPROPERTY_CLOCK_TIME = 0x0,KSPROPERTY_CLOCK_PHYSICALTIME = 0x1,KSPROPERTY_CLOCK_CORRELATEDTIME = 0x2,KSPROPERTY_CLOCK_CORRELATEDPHYSICALTIME = 0x3,KSPROPERTY_CLOCK_RESOLUTION = 0x4,KSPROPERTY_CLOCK_STATE = 0x5,KSPROPERTY_CLOCK_FUNCTIONTABLE = 0x6,};
enum $936EE475885E5E1972395CF18A9E441C {DIRECT_FORM = 0x0,CASCADE_FORM = 0x1,KSDS3D_FILTER_METHOD_COUNT = 0x2,};
enum $938A3B861D25DE16265A89B1C43AD81C {BDA_EVENT_SIGNAL_LOSS = 0x0,BDA_EVENT_SIGNAL_LOCK = 0x1,BDA_EVENT_DATA_START = 0x2,BDA_EVENT_DATA_STOP = 0x3,BDA_EVENT_CHANNEL_ACQUIRED = 0x4,BDA_EVENT_CHANNEL_LOST = 0x5,BDA_EVENT_CHANNEL_SOURCE_CHANGED = 0x6,BDA_EVENT_CHANNEL_ACTIVATED = 0x7,BDA_EVENT_CHANNEL_DEACTIVATED = 0x8,BDA_EVENT_SUBCHANNEL_ACQUIRED = 0x9,BDA_EVENT_SUBCHANNEL_LOST = 0xA,BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED = 0xB,BDA_EVENT_SUBCHANNEL_ACTIVATED = 0xC,BDA_EVENT_SUBCHANNEL_DEACTIVATED = 0xD,BDA_EVENT_ACCESS_GRANTED = 0xE,BDA_EVENT_ACCESS_DENIED = 0xF,BDA_EVENT_OFFER_EXTENDED = 0x10,BDA_EVENT_PURCHASE_COMPLETED = 0x11,BDA_EVENT_SMART_CARD_INSERTED = 0x12,BDA_EVENT_SMART_CARD_REMOVED = 0x13,};
struct $9452773C7C9658DF0A7C90A31311AC2C {INTERFACE Interface;PFNREFERENCEDEVICEOBJECT ReferenceDeviceObject;PFNDEREFERENCEDEVICEOBJECT DereferenceDeviceObject;PFNQUERYREFERENCESTRING QueryReferenceString;};
enum $96E1D162D1577D34227CC3C8C2455781 {Av61883_GetUnitInfo = 0x0,Av61883_SetUnitInfo = 0x1,Av61883_SetPlug = 0x2,Av61883_GetPlugHandle = 0x3,Av61883_GetPlugState = 0x4,Av61883_Connect = 0x5,Av61883_Disconnect = 0x6,Av61883_AttachFrame = 0x7,Av61883_CancelFrame = 0x8,Av61883_Talk = 0x9,Av61883_Listen = 0xA,Av61883_Stop = 0xB,Av61883_SendFcpRequest = 0xC,Av61883_GetFcpResponse = 0xD,Av61883_GetFcpRequest = 0xE,Av61883_SendFcpResponse = 0xF,Av61883_SetFcpNotify = 0x10,Av61883_CreatePlug = 0x11,Av61883_DeletePlug = 0x12,Av61883_BusResetNotify = 0x13,Av61883_BusReset = 0x14,Av61883_SetUnitDirectory = 0x15,Av61883_MonitorPlugs = 0x16,Av61883_MAX = 0x17,};
struct $97739C7249C02ACEBAF17DFC34E3F72B {KSPROPERTY Property;KSMULTIPLE_ITEM MultipleItem;};
struct $97BF4F75CC2B13E4CD29FCADBEF14990 {LONG ActiveSpeakerPositions;};
enum $984DD30B3DA0FC7F55BB22873AC26968 {KSPROPERTY_VIDEOCONTROL_CAPS = 0x0,KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE = 0x1,KSPROPERTY_VIDEOCONTROL_FRAME_RATES = 0x2,KSPROPERTY_VIDEOCONTROL_MODE = 0x3,};
struct $98D21277AAAA3049664E864EBED0B60A {KS_FRAMING_RANGE Range;ULONG InPlaceWeight;ULONG NotInPlaceWeight;};
enum $98FA3A45888AB38274FC20DD306BA119 {KSEVENT_TUNER_CHANGED = 0x0,};
enum $99797C396B1D447BBE63E5346EF4FE3A {KSPIN_COMMUNICATION_NONE = 0x0,KSPIN_COMMUNICATION_SINK = 0x1,KSPIN_COMMUNICATION_SOURCE = 0x2,KSPIN_COMMUNICATION_BOTH = 0x3,KSPIN_COMMUNICATION_BRIDGE = 0x4,};
struct $99C6912CDB5C12269FDD73BE73429D8B {KSMETHOD Method;ULONG NodeId;ULONG Reserved;};
struct $9A6BD7645A973A5ADF34F154404EC940 {KSPROPERTY Property;LONG Value;ULONG Flags;ULONG Capabilities;};
struct $9ADD4811563784E97592213CBF8060F3 {LONG BitStreamMode;};
struct $9B0A4478CCC03CE069B62A821FAD8B21 {PHYSICAL_ADDRESS PhysicalAddress;ULONG Length;};
struct $9CC657B7E0AE245246966219C61A944E {ULONG CreateFlags;};
struct $9D2EE2D5E082F56CCDE737471FBF8D82 {KSEVENT Event;PKSEVENTDATA EventData;PVOID Reserved;};
enum $9D9FB30271C58D4C0035E931B55503FE {KSEVENT_VIDCAPTOSTI_EXT_TRIGGER = 0x0,};
struct $9DABE2D50638D6782800B54C16FE3B63 {const GUID *Set;ULONG Id;ULONG Flags;PCPFNMETHOD_HANDLER Handler;};
enum $9E0565FF8CB6288B094DEDB695088DFB {KSPROPERTY_DROPPEDFRAMES_CURRENT = 0x0,};
struct $9E1ED747B9CD39E7270D6384935529E0 {DS3DVECTOR Position;DS3DVECTOR Velocity;ULONG InsideConeAngle;ULONG OutsideConeAngle;DS3DVECTOR ConeOrientation;LONG ConeOutsideVolume;FLOAT MinDistance;FLOAT MaxDistance;ULONG Mode;};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$2045542961514ACF8A05342E7D7A4BD3 {PVOID Unused;LONG_PTR Alignment[2];};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$40DF1D993F355996A89CD36C5B1ABF70 {PWORK_QUEUE_ITEM WorkQueueItem;PKSWORKER KsWorkerObject;ULONG_PTR Reserved;};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$557E0A75632B2AB77ABA22F73346E46E {HANDLE Event;ULONG_PTR Reserved[2];};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$58C2C17DBEA3E5C4294F58D3F434B669 {PKDPC Dpc;ULONG ReferenceCount;ULONG_PTR Reserved;};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$77A8D5BA7911BAC3E5E8672810CEE79A {HANDLE Semaphore;ULONG Reserved;LONG Adjustment;};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$88E5B7AA2308BDD340E63FD79CED674D {PVOID Semaphore;KPRIORITY Increment;LONG Adjustment;};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$F0EAB68459A9F767BF6487584D0432BE {PWORK_QUEUE_ITEM WorkQueueItem;WORK_QUEUE_TYPE WorkQueueType;ULONG_PTR Reserved;};
struct $::$1B15D34C184CB996FC269D8F9168C70F::$F60F9682E16A06CBF246055AD9379216 {PVOID Event;KPRIORITY Increment;ULONG_PTR Reserved;};
struct $::$9EF2451CEFA2D95A0F2C171B14CF10A6::$DEC6D8E934FC1F5324F6B18F87CE5851 {ULONG ConstrainedDataRangesCount;PKSDATARANGE *ConstrainedDataRanges;};
struct $::$F044539147C377D1A0F579F3A4EAC6A7::$8DB12206A787E12F5CB68E9C5F8D04FA {GUID Set;ULONG Id;ULONG Flags;};
struct $A07373D2A5755254DCD028456AB4EC3B {KSEVENTDATA EventData;LONGLONG MarkTime;};
struct $A156F3783D3AF89709906294AAADEE96 {KSDATARANGE DataRange;ULONG MaximumChannels;ULONG MinimumBitsPerSample;ULONG MaximumBitsPerSample;ULONG MinimumSampleFrequency;ULONG MaximumSampleFrequency;};
enum $A1E89C657E90049EA789DE2B75FA4D0B {KS_TUNER_STRATEGY_PLL = 0x1,KS_TUNER_STRATEGY_SIGNAL_STRENGTH = 0x2,KS_TUNER_STRATEGY_DRIVER_TUNES = 0x4,};
enum $A2D51A8FAB7AC563CC6DB2B9AADBE187 {KSPROPERTY_TUNER_CAPS = 0x0,KSPROPERTY_TUNER_MODE_CAPS = 0x1,KSPROPERTY_TUNER_MODE = 0x2,KSPROPERTY_TUNER_STANDARD = 0x3,KSPROPERTY_TUNER_FREQUENCY = 0x4,KSPROPERTY_TUNER_INPUT = 0x5,KSPROPERTY_TUNER_STATUS = 0x6,KSPROPERTY_TUNER_IF_MEDIUM = 0x7,};
struct $A352DA0F15C73F1F5EAA2E36AD3C4FF0 {KSEVENTDATA KsEventData;ULONGLONG Position;};
struct $A35330E71724D40A1BD15D9C53ABB072 {const GUID *Set;ULONG EventsCount;const KSEVENT_ITEM *EventItem;};
struct $A35FF47659D3E73F219744D22283F451 {KSPROPERTY Property;ULONG Flags;ULONG DeviceNumber;};
struct $A4CC0F087DE00420119DAAB092DFFA3E {KSPROPERTY Property;ULONG NodeId;ULONG Reserved;};
union $A4FB595EF421231CAF150DDD3288A6D5 {struct {ULONG FormatSize;ULONG Flags;ULONG SampleSize;ULONG Reserved;GUID MajorFormat;GUID SubFormat;GUID Specifier;};LONGLONG Alignment;};
struct $A4FB595EF421231CAF150DDD3288A6D5::$33A5881EA3D20175AF6F6CBC82269B7B {ULONG FormatSize;ULONG Flags;ULONG SampleSize;ULONG Reserved;GUID MajorFormat;GUID SubFormat;GUID Specifier;};
enum $A5B4E8FAC21A27E9D836EC72E0E2550F {KSPROPERTY_DIRECTSOUND3DBUFFER_ALL = 0x0,KSPROPERTY_DIRECTSOUND3DBUFFER_POSITION = 0x1,KSPROPERTY_DIRECTSOUND3DBUFFER_VELOCITY = 0x2,KSPROPERTY_DIRECTSOUND3DBUFFER_CONEANGLES = 0x3,KSPROPERTY_DIRECTSOUND3DBUFFER_CONEORIENTATION = 0x4,KSPROPERTY_DIRECTSOUND3DBUFFER_CONEOUTSIDEVOLUME = 0x5,KSPROPERTY_DIRECTSOUND3DBUFFER_MINDISTANCE = 0x6,KSPROPERTY_DIRECTSOUND3DBUFFER_MAXDISTANCE = 0x7,KSPROPERTY_DIRECTSOUND3DBUFFER_MODE = 0x8,};
enum $A6BC26748E56DACD668315459CCF5D3F {KSPROPERTY_DRMAUDIOSTREAM_CONTENTID = 0x0,};
enum $A82677F2D780EECC07262E494F367D1E {KS_DVDCOPYSTATE_INITIALIZE = 0x0,KS_DVDCOPYSTATE_INITIALIZE_TITLE = 0x1,KS_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED = 0x2,KS_DVDCOPYSTATE_AUTHENTICATION_REQUIRED = 0x3,KS_DVDCOPYSTATE_DONE = 0x4,};
struct $AAD79452FC68247846A5E3B058A03BB4 {KSPROPERTY Property;ULONG Capabilities;KSPIN_MEDIUM InputMedium;KSPIN_MEDIUM OutputMedium;};
enum $AB84C8955069406F80CB719201B159DD {KS_MACROVISION_DISABLED = 0x0,KS_MACROVISION_LEVEL1 = 0x1,KS_MACROVISION_LEVEL2 = 0x2,KS_MACROVISION_LEVEL3 = 0x3,};
struct $AC9A5C69A2E8BFD7F981D24477498145 {LONG Channel;FLOAT VolSmoothScale;FLOAT TotalDryAttenuation;FLOAT TotalWetAttenuation;LONG SmoothFrequency;LONG Delay;};
enum $ACDD7173F686B0B8EEB5D0397954DC28 {ConstantBitRate = 0x0,VariableBitRateAverage = 0x1,VariableBitRatePeak = 0x2,};
enum $AD2684E740CA89CFFCE63237D53FEB0F {KSEVENT_VPNOTIFY_FORMATCHANGE = 0x0,};
struct $AD455FBC572689F791F2277291BE97AE {const GUID *Set;ULONG PropertiesCount;const KSPROPERTY_ITEM *PropertyItem;ULONG FastIoCount;const KSFASTPROPERTY_ITEM *FastIoTable;};
enum $ADC633718E981BBAA2F59FA41E3EE0B2 {KSINTERFACE_STANDARD_STREAMING = 0x0,KSINTERFACE_STANDARD_LOOPED_STREAMING = 0x1,KSINTERFACE_STANDARD_CONTROL = 0x2,};
struct $B03639772012518ABC96BF05B41D5C12 {KSALLOCATOR_FRAMING_EX Framing;ULONG AllocatedFrames;ULONG Reserved;};
struct $B04A80E61A6C52E3FD4D22A5F125C77E {KSPROPERTY Property;ULONG StreamIndex;ULONG VideoControlCaps;};
struct $B0BC4AADD5C9FF12157D028DEF0CCD6A {ULONG FromNode;ULONG FromNodePin;ULONG ToNode;ULONG ToNodePin;};
enum $B3236B54C110CBB1085E590D1151299D {KsInvokeOnSuccess = 0x1,KsInvokeOnError = 0x2,KsInvokeOnCancel = 0x4,};
enum $B3A84405D78147E904BCCE08E14749CA {KSPROPERTY_TOPOLOGYNODE_ENABLE = 0x1,KSPROPERTY_TOPOLOGYNODE_RESET = 0x2,};
struct $B4A25942D193F2EAA86C395C02EC729E {ULONG CX;ULONG CY;};
enum $B4C4FC6252558A234733AE07E885CE6F {KSPROPERTY_WAVE_COMPATIBLE_CAPABILITIES = 0x0,KSPROPERTY_WAVE_INPUT_CAPABILITIES = 0x1,KSPROPERTY_WAVE_OUTPUT_CAPABILITIES = 0x2,KSPROPERTY_WAVE_BUFFER = 0x3,KSPROPERTY_WAVE_FREQUENCY = 0x4,KSPROPERTY_WAVE_VOLUME = 0x5,KSPROPERTY_WAVE_PAN = 0x6,};
enum $B4EFCEC8C68CF8B596CEF68A8AD15C1A {KSSTATE_STOP = 0x0,KSSTATE_ACQUIRE = 0x1,KSSTATE_PAUSE = 0x2,KSSTATE_RUN = 0x3,};
enum $B6084D6A0EEB0FD386ED58F84822BF64 {SE_TECH_NONE = 0x0,SE_TECH_ANALOG_DEVICES_PHAT = 0x1,SE_TECH_CREATIVE = 0x2,SE_TECH_NATIONAL_SEMI = 0x3,SE_TECH_YAMAHA_YMERSION = 0x4,SE_TECH_BBE = 0x5,SE_TECH_CRYSTAL_SEMI = 0x6,SE_TECH_QSOUND_QXPANDER = 0x7,SE_TECH_SPATIALIZER = 0x8,SE_TECH_SRS = 0x9,SE_TECH_PLATFORM_TECH = 0xA,SE_TECH_AKM = 0xB,SE_TECH_AUREAL = 0xC,SE_TECH_AZTECH = 0xD,SE_TECH_BINAURA = 0xE,SE_TECH_ESS_TECH = 0xF,SE_TECH_HARMAN_VMAX = 0x10,SE_TECH_NVIDEA = 0x11,SE_TECH_PHILIPS_INCREDIBLE = 0x12,SE_TECH_TEXAS_INST = 0x13,SE_TECH_VLSI_TECH = 0x14,};
struct $B62AAB724E8D7D841EB663A6FEE96A5E {ULONG MinFrameSize;ULONG MaxFrameSize;ULONG Stepping;};
struct $B62AAF3B70FEB5C8D5EF5D71926BC992 {KSPROPERTY Property;ULONG Frequency;ULONG LastFrequency;ULONG TuningFlags;ULONG VideoSubChannel;ULONG AudioSubChannel;ULONG Channel;ULONG Country;};
enum $B7D2D905F5EEADB8A12D41415E190E1C {KsStackCopyToNewLocation = 0x0,KsStackReuseCurrentLocation = 0x1,KsStackUseNewLocation = 0x2,};
enum $B8842F298E38803458C077776FB4B251 {KS_AMVP_MODE_WEAVE = 0x0,KS_AMVP_MODE_BOBINTERLEAVED = 0x1,KS_AMVP_MODE_BOBNONINTERLEAVED = 0x2,KS_AMVP_MODE_SKIPEVEN = 0x3,KS_AMVP_MODE_SKIPODD = 0x4,};
struct $BA718A362089753A7EB60B21429558A7 {ULONG SteppingDelta;ULONG Reserved;KSPROPERTY_BOUNDS_LONG Bounds;};
struct $BBE51AA07033B60919BF464EA8FAB770 {ULONG EventId;ULONG DataInput;ULONG ExtraEntryData;PFNKSADDEVENT AddHandler;PFNKSREMOVEEVENT RemoveHandler;PFNKSHANDLER SupportHandler;};
enum $BBECFD7EEFB9354C969D1C42B172D4E0 {BDA_UNDEFINED_CHANNEL = 0xFFFFFFFF,};
struct $BC7A094E99B893F962A170A802EFE988 {ULONG MembersFlags;ULONG MembersSize;ULONG MembersCount;ULONG Flags;};
struct $BDE91A4D4766441856A2EB7036E539BD {KSEVENTDATA EventData;LONGLONG TimeBase;LONGLONG Interval;};
struct $BF6BFD8678B7E7ABDC56122D693BAF10 {ULONG InputChannels;ULONG OutputChannels;KSAUDIO_MIX_CAPS Capabilities[1];};
struct $BFD35443418CDCF1187E122E74A5B815 {DWORD dwPitch;DWORD dwXOrigin;DWORD dwYOrigin;};
enum $C06925BC9DA0F969A0E4486B73371866 {KSPROPERTY_VIDEODECODER_CAPS = 0x0,KSPROPERTY_VIDEODECODER_STANDARD = 0x1,KSPROPERTY_VIDEODECODER_STATUS = 0x2,KSPROPERTY_VIDEODECODER_OUTPUT_ENABLE = 0x3,KSPROPERTY_VIDEODECODER_VCR_TIMING = 0x4,};
struct $C0F7BB227D2914979DE22500D0E4A4BA {ULONG PropertyId;union {PFNKSFASTHANDLER GetPropertyHandler;BOOLEAN GetSupported;};union {PFNKSFASTHANDLER SetPropertyHandler;BOOLEAN SetSupported;};ULONG Reserved;};
union $C0F7BB227D2914979DE22500D0E4A4BA::$0CCE2AE982A077A8E6346F069E293B38 {PFNKSFASTHANDLER GetPropertyHandler;BOOLEAN GetSupported;};
union $C0F7BB227D2914979DE22500D0E4A4BA::$AC534CA50395027A7F697CBC885BBBC2 {PFNKSFASTHANDLER SetPropertyHandler;BOOLEAN SetSupported;};
struct $C18AA754B44D3B0CE088F6A6B0863744 {ULONG PelsWidth;ULONG PelsHeight;ULONG BitsPerPel;WCHAR DeviceID[1];};
struct $C1C3EF408C46606406ABFE21B3E99DE8 {KSPROPERTY Property;ULONG StreamIndex;ULONG RangeIndex;SIZE Dimensions;LONGLONG CurrentActualFrameRate;LONGLONG CurrentMaxAvailableFrameRate;};
enum $C3305B6EE9A249E58E7AD6D1E51C81B9 {USBCAMD_CamControlFlag_NoVideoRawProcessing = 0x1,USBCAMD_CamControlFlag_NoStillRawProcessing = 0x2,USBCAMD_CamControlFlag_AssociatedFormat = 0x4,USBCAMD_CamControlFlag_EnableDeviceEvents = 0x8,};
enum $C43D2A6EFFDC6958F872464784E778EF {KSEVENT_TVAUDIO_CHANGED = 0x0,};
enum $C84AAC0EFB97B6FA6320B166810390ED {KSPROPERTY_AUDIOGFX_RENDERTARGETDEVICEID = 0x0,KSPROPERTY_AUDIOGFX_CAPTURETARGETDEVICEID = 0x1,};
struct $C8A55C2939C105561C2DA558734F3C5E {KSPROPERTY Property;ULONG PinId;ULONG NodeId;ULONG Flags;ULONG Reserved;};
enum $C8C95D1253099DC07F9D615EA2A8002A {KSEVENTS_NONE = 0x0,KSEVENTS_SPINLOCK = 0x1,KSEVENTS_MUTEX = 0x2,KSEVENTS_FMUTEX = 0x3,KSEVENTS_FMUTEXUNSAFE = 0x4,KSEVENTS_INTERRUPT = 0x5,KSEVENTS_ERESOURCE = 0x6,};
enum $C9C41CE7F7AB140BE1C872069B92FC11 {LT_DONT_CARE = 0x0,LT_LOWEST_LATENCY = 0x1,};
struct $C9C4D03C150E869FFC5FB33A10EAB149 {BOOL Enable;KSPROPERTY_SYSAUDIO_DEFAULT_TYPE DeviceType;ULONG Flags;ULONG Reserved;};
union $C9F2A16A1B5FC998B91DA494984E0FDB {struct {LONG SignedMinimum;LONG SignedMaximum;};struct {ULONG UnsignedMinimum;ULONG UnsignedMaximum;};};
struct $C9F2A16A1B5FC998B91DA494984E0FDB::$0559678CAE7576A37561112FDF9C20E6 {LONG SignedMinimum;LONG SignedMaximum;};
struct $C9F2A16A1B5FC998B91DA494984E0FDB::$F7C05C0C56E55CB044DFD46C70BB2992 {ULONG UnsignedMinimum;ULONG UnsignedMaximum;};
struct $CA0DACF90AABDE33CADDF7416F0C17F2 {LONGLONG TimeBase;LONGLONG Interval;};
enum $CAE561814972B63FC408CA74931D2863 {KSEVENT_CROSSBAR_CHANGED = 0x0,};
struct $CB16EFCEDA39FCD4D0BC1BDE67199271 {KSPROPERTY Property;ULONG StreamIndex;LONG Mode;};
enum $CB3435FABEA0A3C4DEC3DC8A5EBD37B4 {KSEVENT_CONNECTION_POSITIONUPDATE = 0x0,KSEVENT_CONNECTION_DATADISCONTINUITY = 0x1,KSEVENT_CONNECTION_TIMEDISCONTINUITY = 0x2,KSEVENT_CONNECTION_PRIORITY = 0x3,KSEVENT_CONNECTION_ENDOFSTREAM = 0x4,};
enum $CD1AEEBAB641DEC86F01C12702A854EA {DeviceTextDescription = 0x0,DeviceTextLocationInformation = 0x1,};
enum $CD1B745820A9D90889EBAB7E9D163FB3 {KSPROPERTY_BDA_SIGNAL_STRENGTH = 0x0,KSPROPERTY_BDA_SIGNAL_QUALITY = 0x1,KSPROPERTY_BDA_SIGNAL_PRESENT = 0x2,KSPROPERTY_BDA_SIGNAL_LOCKED = 0x3,KSPROPERTY_BDA_SAMPLE_TIME = 0x4,};
enum $CFCB2E1C2645813857E415DB4A5CF091 {KSPROPERTY_VBICODECFILTERING_SCANLINES_REQUESTED_BIT_ARRAY = 0x1,KSPROPERTY_VBICODECFILTERING_SCANLINES_DISCOVERED_BIT_ARRAY = 0x2,KSPROPERTY_VBICODECFILTERING_SUBSTREAMS_REQUESTED_BIT_ARRAY = 0x3,KSPROPERTY_VBICODECFILTERING_SUBSTREAMS_DISCOVERED_BIT_ARRAY = 0x4,KSPROPERTY_VBICODECFILTERING_STATISTICS = 0x5,};
enum $CFDA6B458BFD5441F09F532A42BB2B66 {KSPROPERTY_DVDCOPY_CHLG_KEY = 0x1,KSPROPERTY_DVDCOPY_DVD_KEY1 = 0x2,KSPROPERTY_DVDCOPY_DEC_KEY2 = 0x3,KSPROPERTY_DVDCOPY_TITLE_KEY = 0x4,KSPROPERTY_COPY_MACROVISION = 0x5,KSPROPERTY_DVDCOPY_REGION = 0x6,KSPROPERTY_DVDCOPY_SET_COPY_STATE = 0x7,KSPROPERTY_DVDCOPY_DISC_KEY = 0x80,};
struct $D0C2582348DF16EE31650672742EA602 {ULONG Size;ULONG Count;};
struct $D2D205A4E5DA2498F5010F3E3EADEEBB {KSPROPERTY Property;ULONG StreamIndex;ULONG RangeIndex;SIZE Dimensions;};
enum $D5CA3A18CB786C06D1FE5E26C4BBD8C9 {KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE = 0x0,KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST = 0x1,KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE = 0x2,};
struct $D611436986C6FEF0F654B123D787805F {ULONG PriorityClass;ULONG PrioritySubClass;};
enum $D62050DCDBDF6C35CAC61CEAA5D0241B {MEDIA_TRANSPORT_PACKET = 0x0,MEDIA_ELEMENTARY_STREAM = 0x1,MEDIA_MPEG2_PSI = 0x2,MEDIA_TRANSPORT_PAYLOAD = 0x3,};
struct $D63E714A239F9C0D1FE2D222C2E0E7D5 {REFERENCE_TIME OutputZeroTime;LONG Rate;};
enum $D64CEF8F52066C406CD4BA6573420261 {KSRESET_BEGIN = 0x0,KSRESET_END = 0x1,};
enum $D65DCBF02618B4971A14091F77C71942 {KSTARGET_STATE_DISABLED = 0x0,KSTARGET_STATE_ENABLED = 0x1,};
enum $D71657AF3CFE9B494B76211ED274B166 {kVersionInvalid = 0xFFFFFFFF,kVersionWin98 = 0x0,kVersionWin98SE = 0x1,kVersionWin2K = 0x2,kVersionWin98SE_QFE2 = 0x3,kVersionWin2K_SP2 = 0x4,kVersionWinME = 0x5,kVersionWin98SE_QFE3 = 0x6,kVersionWinME_QFE1 = 0x7,kVersionWinXP = 0x8,kVersionWinXPSP1 = 0x9,kVersionWinXPServer = 0xA,};
struct $D86AEF8896DDE0BDF211E48E78F8BB6F {KSPROPERTY Property;ULONG NumberOfLines;ULONG SignalLocked;};
struct $D8768C71F24D405D4B7DEC8016730D6C {ULONG CategoriesCount;const GUID *Categories;ULONG TopologyNodesCount;const GUID *TopologyNodes;ULONG TopologyConnectionsCount;const KSTOPOLOGY_CONNECTION *TopologyConnections;const GUID *TopologyNodesNames;ULONG Reserved;};
struct $D8D7C26B9FDE94F9B7E724B17C76CE36 {ULONG PropertyItemSize;ULONG PropertyCount;const PCPROPERTY_ITEM *Properties;ULONG MethodItemSize;ULONG MethodCount;const PCMETHOD_ITEM *Methods;ULONG EventItemSize;ULONG EventCount;const PCEVENT_ITEM *Events;ULONG Reserved;};
struct $D96EA640170F725CA11FCBCFEE3FF36E {ULONG Flags;const PCAUTOMATION_TABLE *AutomationTable;const GUID *Type;const GUID *Name;};
struct $D9863DBF23EBBD7F74D85DDE027E035E {const GUID *Set;ULONG MethodsCount;const KSMETHOD_ITEM *MethodItem;ULONG FastIoCount;const KSFASTMETHOD_ITEM *FastIoTable;};
enum $DAFE30771B95F95613600355B79694C1 {KS_VideoControlFlag_FlipHorizontal = 0x1,KS_VideoControlFlag_FlipVertical = 0x2,KS_Obsolete_VideoControlFlag_ExternalTriggerEnable = 0x10,KS_Obsolete_VideoControlFlag_Trigger = 0x20,KS_VideoControlFlag_ExternalTriggerEnable = 0x4,KS_VideoControlFlag_Trigger = 0x8,};
struct $DB6743270A05FF5B7AB17563AEBB3A96 {KSPROPERTY Property;VBICODECFILTERING_NABTS_SUBSTREAMS Substreams;};
struct $DCA1691E12E502D611F5426518CFEFB5 {KSDATARANGE DataRange;GUID Technology;ULONG Channels;ULONG Notes;ULONG ChannelMask;};
struct $DCCCDBDB2D2AC461237A75FB18C0449E {LONGLONG Time;LONGLONG SystemTime;};
enum $DD5FC77EC1374A734666B81823C28AFB {FULL_FILTER = 0x0,LIGHT_FILTER = 0x1,KSDS3D_FILTER_QUALITY_COUNT = 0x2,};
enum $DD63D416C80B0B367D506EB1E8E34ADE {KSSTREAM_POINTER_STATE_UNLOCKED = 0x0,KSSTREAM_POINTER_STATE_LOCKED = 0x1,};
struct $DE2D2125000B90024B7DD637FE0DF34E {ULONG TimeDeltaMs;ULONG ByteCount;};
struct $DE8F492EE455543594962797C1392B09 {ULONG MethodId;union {PFNKSHANDLER MethodHandler;BOOLEAN MethodSupported;};ULONG MinMethod;ULONG MinData;PFNKSHANDLER SupportHandler;ULONG Flags;};
union $DE8F492EE455543594962797C1392B09::$5BDBA56DE03A5015F28D8AA8E2E4ED3B {PFNKSHANDLER MethodHandler;BOOLEAN MethodSupported;};
enum $DF2051BCD5E4FC2C953B94B617C6FC67 {HAL_MCE_RECORD = 0x0,HAL_MCA_RECORD = 0x1,};
enum $DF42200E5C7644BA9EFD9248E6DB20BA {KSEVENT_BDA_PIN_CONNECTED = 0x0,KSEVENT_BDA_PIN_DISCONNECTED = 0x1,};
struct $E15D7B7CA61FF43DF93005DFD376A388 {KSPROPERTY Property;ULONG CurrentFrequency;ULONG PLLOffset;ULONG SignalStrength;ULONG Busy;};
struct $E1A151A2F6A6C209F977C1A4EAB9F7DF {GUID ProtocolId;PVOID Argument1;PVOID Argument2;};
struct $E1D601DFB9F50A58CFF7A79389CE7A63 {ULONG CountItems;ULONG PinFlags;KS_COMPRESSION OutputCompression;ULONG PinWeight;KS_FRAMING_ITEM FramingItem[1];};
struct $E21F85AFDEE9EAF37885ADBF8938BB0C {KSALLOCATOR_FRAMING Framing;ULONG AllocatedFrames;ULONG Reserved;};
enum $E429D5BCA10BC7F1E46CF67F9B793820 {KSPROPERTY_STREAMINTERFACE_HEADERSIZE = 0x0,};
struct $E4A6BAB3223452EC45F6B117A37FFCF9 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_NABTS_PIN Statistics;};
struct $E4D39CEDA60A9A842177218EB3078B88 {KSPROPERTY Property;ULONG InputIndex;};
enum $E4F601CF8334073149F423AA599EAEAE {KSPROPERTY_VBICAP_PROPERTIES_PROTECTION = 0x1,};
struct $E4F7CAB5B6B7D45C514D7552CCE8FB09 {BOOL fDownMix;BOOL fDolbySurround;};
struct $E56F877AE116898CEBF188009740BA30 {ULONG ulPID;MEDIA_SAMPLE_CONTENT MediaSampleContent;};
struct $E5C551D5220B94E855DFD2A46F971A3B {KSPROPERTY Property;VBICODECFILTERING_CC_SUBSTREAMS Substreams;};
enum $E5E05FC88E8385A5216FCD37A95BAA87 {KSPIN_DATAFLOW_IN = 0x1,KSPIN_DATAFLOW_OUT = 0x2,};
struct $E79116A6AA0CFF653592F57D81FA8A4C {ULONG MaximumChannelsPerConnection;ULONG MinimumBitsPerSample;ULONG MaximumBitsPerSample;ULONG MinimumSampleFrequency;ULONG MaximumSampleFrequency;ULONG TotalConnections;ULONG StaticConnections;ULONG StreamingConnections;ULONG ActiveConnections;ULONG ActiveStaticConnections;ULONG ActiveStreamingConnections;ULONG Total3DConnections;ULONG Static3DConnections;ULONG Streaming3DConnections;ULONG Active3DConnections;ULONG ActiveStatic3DConnections;ULONG ActiveStreaming3DConnections;ULONG TotalSampleMemory;ULONG FreeSampleMemory;ULONG LargestFreeContiguousSampleMemory;};
struct $E7BDCECB0924BC4C6E03B7EEA1B31BA1 {LONGLONG Time;ULONG Numerator;ULONG Denominator;};
struct $EA4AC72E281160164D445E15D4425ADE {KS_AMVPSIZE Size;DWORD MaxPixelsPerSecond;DWORD Reserved;};
struct $ECC65BA02B08F93DE1D3AD2A06446B79 {ULONG Enabled;KSDS3D_ITD_PARAMS LeftParams;KSDS3D_ITD_PARAMS RightParams;ULONG Reserved;};
struct $ECD9D23603D8BADEE24156B8BE3276B4 {KSPROPERTY Property;ULONG IndexInputPin;ULONG IndexOutputPin;ULONG CanRoute;};
struct $EE7A277138FF7ACF03A1E9A4C6095702 {KSIDENTIFIER PropTypeSet;ULONG MembersListCount;const KSPROPERTY_MEMBERSLIST *MembersList;};
struct $EEDA301819F8EA8D15C0ADB3D7583498 {GUID MemoryType;GUID BusType;ULONG MemoryFlags;ULONG BusFlags;ULONG Flags;ULONG Frames;ULONG FileAlignment;ULONG MemoryTypeWeight;KS_FRAMING_RANGE PhysicalRange;KS_FRAMING_RANGE_WEIGHTED FramingRange;};
enum $EEDC202E1D6A59707A46C9F564CBCDC1 {DebugLevelFatal = 0x0,DebugLevelError = 0x1,DebugLevelWarning = 0x2,DebugLevelInfo = 0x3,DebugLevelTrace = 0x4,DebugLevelVerbose = 0x5,DebugLevelMaximum = 0x6,};
struct $EF98EE567420140E285BF0657F46953F {KSPROPERTY Property;GUID SourceFormat;GUID TargetFormat;LONGLONG Time;};
struct $F0AD97B4DA1FA55F31FC7FE8AE7CC03A {PFNKSCLOCK_GETTIME GetTime;PFNKSCLOCK_GETTIME GetPhysicalTime;PFNKSCLOCK_CORRELATEDTIME GetCorrelatedTime;PFNKSCLOCK_CORRELATEDTIME GetCorrelatedPhysicalTime;};
struct $F0DE5EAC046D7D32AA534DC253D377C4 {ULONG ulDeviceType;};
struct $F1FF9EB17A5B0DC512AB60E4FE6215DC {GUID PropertySet;ULONG Count;};
struct $F2115D41876A8CDF2A6608801240E71C {KSPROPERTY Property;GUID PinCategory;GUID PinName;};
enum $F5E9AD53D969E47E21B14A1F6622DC98 {KSPROPERTY_OVERLAYUPDATE_INTERESTS = 0x0,KSPROPERTY_OVERLAYUPDATE_CLIPLIST = 0x1,KSPROPERTY_OVERLAYUPDATE_PALETTE = 0x2,KSPROPERTY_OVERLAYUPDATE_COLORKEY = 0x4,KSPROPERTY_OVERLAYUPDATE_VIDEOPOSITION = 0x8,KSPROPERTY_OVERLAYUPDATE_DISPLAYCHANGE = 0x10,KSPROPERTY_OVERLAYUPDATE_COLORREF = 0x10000000,};
enum $F750B0D5AE4952E6A2E06632A571D241 {KSPROPERTY_AUDIO_LATENCY = 0x1,KSPROPERTY_AUDIO_COPY_PROTECTION = 0x2,KSPROPERTY_AUDIO_CHANNEL_CONFIG = 0x3,KSPROPERTY_AUDIO_VOLUMELEVEL = 0x4,KSPROPERTY_AUDIO_POSITION = 0x5,KSPROPERTY_AUDIO_DYNAMIC_RANGE = 0x6,KSPROPERTY_AUDIO_QUALITY = 0x7,KSPROPERTY_AUDIO_SAMPLING_RATE = 0x8,KSPROPERTY_AUDIO_DYNAMIC_SAMPLING_RATE = 0x9,KSPROPERTY_AUDIO_MIX_LEVEL_TABLE = 0xA,KSPROPERTY_AUDIO_MIX_LEVEL_CAPS = 0xB,KSPROPERTY_AUDIO_MUX_SOURCE = 0xC,KSPROPERTY_AUDIO_MUTE = 0xD,KSPROPERTY_AUDIO_BASS = 0xE,KSPROPERTY_AUDIO_MID = 0xF,KSPROPERTY_AUDIO_TREBLE = 0x10,KSPROPERTY_AUDIO_BASS_BOOST = 0x11,KSPROPERTY_AUDIO_EQ_LEVEL = 0x12,KSPROPERTY_AUDIO_NUM_EQ_BANDS = 0x13,KSPROPERTY_AUDIO_EQ_BANDS = 0x14,KSPROPERTY_AUDIO_AGC = 0x15,KSPROPERTY_AUDIO_DELAY = 0x16,KSPROPERTY_AUDIO_LOUDNESS = 0x17,KSPROPERTY_AUDIO_WIDE_MODE = 0x18,KSPROPERTY_AUDIO_WIDENESS = 0x19,KSPROPERTY_AUDIO_REVERB_LEVEL = 0x1A,KSPROPERTY_AUDIO_CHORUS_LEVEL = 0x1B,KSPROPERTY_AUDIO_DEV_SPECIFIC = 0x1C,KSPROPERTY_AUDIO_DEMUX_DEST = 0x1D,KSPROPERTY_AUDIO_STEREO_ENHANCE = 0x1E,KSPROPERTY_AUDIO_MANUFACTURE_GUID = 0x1F,KSPROPERTY_AUDIO_PRODUCT_GUID = 0x20,KSPROPERTY_AUDIO_CPU_RESOURCES = 0x21,KSPROPERTY_AUDIO_STEREO_SPEAKER_GEOMETRY = 0x22,KSPROPERTY_AUDIO_SURROUND_ENCODE = 0x23,KSPROPERTY_AUDIO_3D_INTERFACE = 0x24,KSPROPERTY_AUDIO_PEAKMETER = 0x25,KSPROPERTY_AUDIO_ALGORITHM_INSTANCE = 0x26,KSPROPERTY_AUDIO_FILTER_STATE = 0x27,KSPROPERTY_AUDIO_PREFERRED_STATUS = 0x28,};
enum $F83EBA9D0BD861E54A6698205AB72334 {KSPROPERTY_BIBLIOGRAPHIC_LEADER = 0x52444C20,KSPROPERTY_BIBLIOGRAPHIC_LCCN = 0x30313020,KSPROPERTY_BIBLIOGRAPHIC_ISBN = 0x30323020,KSPROPERTY_BIBLIOGRAPHIC_ISSN = 0x32323020,KSPROPERTY_BIBLIOGRAPHIC_CATALOGINGSOURCE = 0x30343020,KSPROPERTY_BIBLIOGRAPHIC_MAINPERSONALNAME = 0x30303120,KSPROPERTY_BIBLIOGRAPHIC_MAINCORPORATEBODY = 0x30313120,KSPROPERTY_BIBLIOGRAPHIC_MAINMEETINGNAME = 0x31313120,KSPROPERTY_BIBLIOGRAPHIC_MAINUNIFORMTITLE = 0x30333120,KSPROPERTY_BIBLIOGRAPHIC_UNIFORMTITLE = 0x30343220,KSPROPERTY_BIBLIOGRAPHIC_TITLESTATEMENT = 0x35343220,KSPROPERTY_BIBLIOGRAPHIC_VARYINGFORMTITLE = 0x36343220,KSPROPERTY_BIBLIOGRAPHIC_PUBLICATION = 0x30363220,KSPROPERTY_BIBLIOGRAPHIC_PHYSICALDESCRIPTION = 0x30303320,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYTITLE = 0x30343420,KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENT = 0x30393420,KSPROPERTY_BIBLIOGRAPHIC_GENERALNOTE = 0x30303520,KSPROPERTY_BIBLIOGRAPHIC_BIBLIOGRAPHYNOTE = 0x34303520,KSPROPERTY_BIBLIOGRAPHIC_CONTENTSNOTE = 0x35303520,KSPROPERTY_BIBLIOGRAPHIC_CREATIONCREDIT = 0x38303520,KSPROPERTY_BIBLIOGRAPHIC_CITATION = 0x30313520,KSPROPERTY_BIBLIOGRAPHIC_PARTICIPANT = 0x31313520,KSPROPERTY_BIBLIOGRAPHIC_SUMMARY = 0x30323520,KSPROPERTY_BIBLIOGRAPHIC_TARGETAUDIENCE = 0x31323520,KSPROPERTY_BIBLIOGRAPHIC_ADDEDFORMAVAILABLE = 0x30333520,KSPROPERTY_BIBLIOGRAPHIC_SYSTEMDETAILS = 0x38333520,KSPROPERTY_BIBLIOGRAPHIC_AWARDS = 0x36383520,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYPERSONALNAME = 0x30303620,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYTOPICALTERM = 0x30353620,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYGEOGRAPHIC = 0x31353620,KSPROPERTY_BIBLIOGRAPHIC_INDEXTERMGENRE = 0x35353620,KSPROPERTY_BIBLIOGRAPHIC_INDEXTERMCURRICULUM = 0x38353620,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYUNIFORMTITLE = 0x30333720,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYRELATED = 0x30343720,KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENTPERSONALNAME = 0x30303820,KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENTUNIFORMTITLE = 0x30333820,};
enum $FA11D0DE19A9089B50BC241520DAD748 {KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED = 0x0,KSEVENT_BDA_CA_MODULE_STATUS_CHANGED = 0x1,KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED = 0x2,KSEVENT_BDA_CA_MODULE_UI_REQUESTED = 0x3,};
struct $FB17C9225429EF808B128BCE70FFD0DB {ULONG Size;ULONG Enabled;BOOL SwapChannels;BOOL ZeroAzimuth;BOOL CrossFadeOutput;ULONG FilterSize;};
struct $FB8A4E21AD43EDA8BFCCEEFE99FC59C9 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_CC Statistics;};
struct $FBE7179BAB40555F1A13AD3C5BC3BB71 {BOOL fStereo;ULONG DualMode;};
enum $FC23A50C1CCE287E75E010175501A7BF {KSPROPERTY_BDA_NODE_TYPES = 0x0,KSPROPERTY_BDA_PIN_TYPES = 0x1,KSPROPERTY_BDA_TEMPLATE_CONNECTIONS = 0x2,KSPROPERTY_BDA_NODE_METHODS = 0x3,KSPROPERTY_BDA_NODE_PROPERTIES = 0x4,KSPROPERTY_BDA_NODE_EVENTS = 0x5,KSPROPERTY_BDA_CONTROLLING_PIN_ID = 0x6,KSPROPERTY_BDA_NODE_DESCRIPTORS = 0x7,};
struct $FDD48878D337B9676F07B6A46EC3FECC {SE_TECHNIQUE Technique;ULONG Center;ULONG Depth;ULONG Reserved;};
enum $FDE649CC57CE41CE85FECAF000FEEDF5 {DS3D_HRTF_VERSION_1 = 0x0,};
enum $FE3B83602F0ED43C5C383B1542328237 {WmiEventControl = 0x0,WmiDataBlockControl = 0x1,};
struct $FF5E69F4B253A5B06BAE6BEDF0A709ED {ULONG Count;PKSATTRIBUTE *Attributes;};
typedef ULONG ACCESS_MASK;
typedef struct _ACCESS_RANGE ACCESS_RANGE;
typedef struct _ACCESS_STATE ACCESS_STATE;
typedef struct _ACL ACL;
typedef struct _ACPI_EVAL_INPUT_BUFFER ACPI_EVAL_INPUT_BUFFER;
typedef struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX ACPI_EVAL_INPUT_BUFFER_COMPLEX;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING;
typedef struct _ACPI_EVAL_OUTPUT_BUFFER ACPI_EVAL_OUTPUT_BUFFER;
typedef struct _ACPI_INTERFACE_STANDARD ACPI_INTERFACE_STANDARD;
typedef struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER;
typedef struct _ACPI_METHOD_ARGUMENT ACPI_METHOD_ARGUMENT;
typedef struct _ADDRESS_FIFO ADDRESS_FIFO;
typedef struct _ADDRESS_OFFSET ADDRESS_OFFSET;
typedef struct _ADDRESS_RANGE ADDRESS_RANGE;
typedef struct adpcmcoef_tag ADPCMCOEFSET;
typedef struct adpcmewaveformat_tag ADPCMEWAVEFORMAT;
typedef struct adpcmwaveformat_tag ADPCMWAVEFORMAT;
typedef struct _AGP_STD_DATA AGP_STD_DATA;
typedef struct _ALLOW_PERFORMANCE_HIT_IN ALLOW_PERFORMANCE_HIT_IN;
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE ALTERNATIVE_ARCHITECTURE_TYPE;
typedef STRING ANSI_STRING;
typedef STRING32 ANSI_STRING32;
typedef STRING64 ANSI_STRING64;
typedef struct aptxwaveformat_tag APTXWAVEFORMAT;
typedef struct _ASYNC_PACKET ASYNC_PACKET;
typedef struct _ATAPI_FAILURE_PREDICT_DATA ATAPI_FAILURE_PREDICT_DATA;
typedef WORD ATOM;
enum ATSCComponentTypeFlags {ATSCCT_AC3 = 0x1,};
typedef struct audiofile_af10waveformat_tag AUDIOFILE_AF10WAVEFORMAT;
typedef struct audiofile_af36waveformat_tag AUDIOFILE_AF36WAVEFORMAT;
typedef struct _AVCCONNECTINFO AVCCONNECTINFO;
typedef struct _AVCPRECONNECTINFO AVCPRECONNECTINFO;
typedef struct _AVCSTRM_BUFFER_STRUCT AVCSTRM_BUFFER_STRUCT;
typedef enum _AVCSTRM_FORMAT AVCSTRM_FORMAT;
typedef struct _AVCSTRM_FORMAT_INFO AVCSTRM_FORMAT_INFO;
typedef enum _AVCSTRM_FUNCTION AVCSTRM_FUNCTION;
typedef struct _AVCSTRM_OPEN_STRUCT AVCSTRM_OPEN_STRUCT;
typedef struct _AVC_COMMAND_IRB AVC_COMMAND_IRB;
typedef struct _AVC_EXT_PLUG_COUNTS AVC_EXT_PLUG_COUNTS;
typedef enum _tagAVC_FUNCTION AVC_FUNCTION;
typedef struct _AVC_IRB AVC_IRB;
typedef struct _AVC_MULTIFUNC_IRB AVC_MULTIFUNC_IRB;
typedef struct _AVC_PEER_DO_LIST AVC_PEER_DO_LIST;
typedef struct _AVC_PEER_DO_LOCATOR AVC_PEER_DO_LOCATOR;
typedef struct _AVC_PIN_COUNT AVC_PIN_COUNT;
typedef struct _AVC_PIN_DESCRIPTOR AVC_PIN_DESCRIPTOR;
typedef struct _AVC_PIN_ID AVC_PIN_ID;
typedef struct _AVC_PRECONNECT_INFO AVC_PRECONNECT_INFO;
typedef struct _AVC_SETCONNECT_INFO AVC_SETCONNECT_INFO;
typedef struct _AVC_STREAM_REQUEST_BLOCK AVC_STREAM_REQUEST_BLOCK;
typedef struct _AVC_SUBUNIT_ADDR_SPEC AVC_SUBUNIT_ADDR_SPEC;
typedef struct _AVC_SUBUNIT_INFO_BLOCK AVC_SUBUNIT_INFO_BLOCK;
typedef struct _AVC_UNIQUE_ID AVC_UNIQUE_ID;
typedef struct _AV_61883_REQUEST AV_61883_REQUEST;
typedef struct _AV_PCR AV_PCR;
typedef enum _tagAvcCommandType AvcCommandType;
typedef enum _tagAvcResponseCode AvcResponseCode;
typedef enum _tagAvcSubunitType AvcSubunitType;
typedef struct _BANDWIDTH_ALLOCATION BANDWIDTH_ALLOCATION;
typedef struct $7069A3AF9C526B33740CA7D5809B477E BATTERY_REPORTING_SCALE;
typedef union _BAY_STATUS BAY_STATUS;
typedef struct _BDANODE_DESCRIPTOR BDANODE_DESCRIPTOR;
typedef struct _BDA_CA_MODULE_UI BDA_CA_MODULE_UI;
typedef enum $4FF2CEF7F943208657A69CE25EA0FE31 BDA_CHANGE_STATE;
typedef struct _BDA_ETHERNET_ADDRESS BDA_ETHERNET_ADDRESS;
typedef struct _BDA_ETHERNET_ADDRESS_LIST BDA_ETHERNET_ADDRESS_LIST;
typedef enum $938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_ID;
typedef struct _BDA_FILTER_TEMPLATE BDA_FILTER_TEMPLATE;
typedef struct _BDA_IPv4_ADDRESS BDA_IPv4_ADDRESS;
typedef struct _BDA_IPv4_ADDRESS_LIST BDA_IPv4_ADDRESS_LIST;
typedef struct _BDA_IPv6_ADDRESS BDA_IPv6_ADDRESS;
typedef struct _BDA_IPv6_ADDRESS_LIST BDA_IPv6_ADDRESS_LIST;
typedef enum $323950C9678C627AEFAD637828B7290C BDA_MULTICAST_MODE;
typedef struct _BDA_PID_MAP BDA_PID_MAP;
typedef struct _BDA_PID_UNMAP BDA_PID_UNMAP;
typedef struct _BDA_PIN_PAIRING BDA_PIN_PAIRING;
typedef struct _BDA_PROGRAM_PID_LIST BDA_PROGRAM_PID_LIST;
typedef enum $7CE1FE37114556B00E2D910941BCF644 BDA_SIGNAL_STATE;
typedef struct _BDA_TABLE_SECTION BDA_TABLE_SECTION;
typedef struct _BDA_TEMPLATE_CONNECTION BDA_TEMPLATE_CONNECTION;
typedef struct _BDA_TEMPLATE_PIN_JOINT BDA_TEMPLATE_PIN_JOINT;
typedef ULONG BDA_TOPOLOGY_JOINT;
typedef struct tagBDA_TRANSPORT_INFO BDA_TRANSPORT_INFO;
typedef union _BM_REQUEST_TYPE BM_REQUEST_TYPE;
typedef int BOOL;
typedef UCHAR BOOLEAN;
typedef struct _BOOTDISK_INFORMATION BOOTDISK_INFORMATION;
typedef struct _BOOTDISK_INFORMATION_EX BOOTDISK_INFORMATION_EX;
typedef enum _BUS_DATA_TYPE BUS_DATA_TYPE;
typedef struct _BUS_GENERATION_NODE BUS_GENERATION_NODE;
typedef struct $40A6D5622BA75F270314126148B7B4DB BUS_INTERFACE_MEDIUMS;
typedef struct $9452773C7C9658DF0A7C90A31311AC2C BUS_INTERFACE_REFERENCE;
typedef struct _BUS_INTERFACE_STANDARD BUS_INTERFACE_STANDARD;
typedef enum $46A0A762E46BF16A5C029C85901AE439 BUS_QUERY_ID_TYPE;
typedef struct _BUS_RESET_NOTIFY BUS_RESET_NOTIFY;
typedef unsigned __int8 BYTE;
enum BinaryConvolutionCodeRate {BDA_BCC_RATE_NOT_SET = 0xFFFFFFFF,BDA_BCC_RATE_NOT_DEFINED = 0x0,BDA_BCC_RATE_1_2 = 0x1,BDA_BCC_RATE_2_3 = 0x2,BDA_BCC_RATE_3_4 = 0x3,BDA_BCC_RATE_3_5 = 0x4,BDA_BCC_RATE_4_5 = 0x5,BDA_BCC_RATE_5_6 = 0x6,BDA_BCC_RATE_5_11 = 0x7,BDA_BCC_RATE_7_8 = 0x8,BDA_BCC_RATE_MAX = 0x9,};
typedef STRING CANSI_STRING;
typedef char CCHAR;
typedef struct _CC_BYTE_PAIR CC_BYTE_PAIR;
typedef struct _CC_HW_FIELD CC_HW_FIELD;
typedef char CHAR;
typedef struct _CIP_ATTACH_FRAME CIP_ATTACH_FRAME;
typedef struct _CIP_CANCEL_FRAME CIP_CANCEL_FRAME;
typedef struct _CIP_DATA_FORMAT CIP_DATA_FORMAT;
typedef struct _CIP_FRAME CIP_FRAME;
typedef struct _CIP_HDR1 CIP_HDR1;
typedef struct _CIP_HDR2_FDF CIP_HDR2_FDF;
typedef struct _CIP_HDR2_MPEGTS CIP_HDR2_MPEGTS;
typedef struct _CIP_HDR2_SYT CIP_HDR2_SYT;
typedef struct _CIP_LISTEN CIP_LISTEN;
typedef struct _CIP_NOTIFY_INFO CIP_NOTIFY_INFO;
typedef struct _CIP_STOP CIP_STOP;
typedef struct _CIP_TALK CIP_TALK;
typedef struct _CIP_VALIDATE_INFO CIP_VALIDATE_INFO;
typedef struct _CLIENT_ID CLIENT_ID;
typedef ULONG CLONG;
typedef GUID CLSID;
typedef MCA_EXCEPTION CMC_EXCEPTION;
typedef struct _CMP_CONNECT CMP_CONNECT;
typedef enum $1CC95E689DB1A3C540445D2EA8FF4FA2 CMP_CONNECT_TYPE;
typedef struct _CMP_CREATE_PLUG CMP_CREATE_PLUG;
typedef struct _CMP_DELETE_PLUG CMP_DELETE_PLUG;
typedef struct _CMP_DISCONNECT CMP_DISCONNECT;
typedef struct _CMP_GET_PLUG_HANDLE CMP_GET_PLUG_HANDLE;
typedef struct _CMP_GET_PLUG_STATE CMP_GET_PLUG_STATE;
typedef struct _CMP_MONITOR_INFO CMP_MONITOR_INFO;
typedef struct _CMP_MONITOR_PLUGS CMP_MONITOR_PLUGS;
typedef struct _CMP_NOTIFY_INFO CMP_NOTIFY_INFO;
typedef enum $8142B63D1170E3CCF91671CCCC3193B7 CMP_PLUG_LOCATION;
typedef enum $8C42F93EAAD4EBF2FF4C30FDE456EABE CMP_PLUG_TYPE;
typedef struct _CMP_SET_PLUG CMP_SET_PLUG;
typedef struct _CM_COMPONENT_INFORMATION CM_COMPONENT_INFORMATION;
typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA CM_DISK_GEOMETRY_DEVICE_DATA;
typedef struct _CM_EISA_FUNCTION_INFORMATION CM_EISA_FUNCTION_INFORMATION;
typedef struct _CM_EISA_SLOT_INFORMATION CM_EISA_SLOT_INFORMATION;
typedef struct _CM_FLOPPY_DEVICE_DATA CM_FLOPPY_DEVICE_DATA;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR CM_FULL_RESOURCE_DESCRIPTOR;
typedef struct _CM_INT13_DRIVE_PARAMETER CM_INT13_DRIVE_PARAMETER;
typedef struct _CM_KEYBOARD_DEVICE_DATA CM_KEYBOARD_DEVICE_DATA;
typedef struct _CM_MCA_POS_DATA CM_MCA_POS_DATA;
typedef struct _CM_MONITOR_DEVICE_DATA CM_MONITOR_DEVICE_DATA;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR CM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PARTIAL_RESOURCE_LIST CM_PARTIAL_RESOURCE_LIST;
typedef struct _CM_PNP_BIOS_DEVICE_NODE CM_PNP_BIOS_DEVICE_NODE;
typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK CM_PNP_BIOS_INSTALLATION_CHECK;
typedef struct _CM_RESOURCE_LIST CM_RESOURCE_LIST;
typedef int CM_RESOURCE_TYPE;
typedef struct _CM_ROM_BLOCK CM_ROM_BLOCK;
typedef struct _CM_SCSI_DEVICE_DATA CM_SCSI_DEVICE_DATA;
typedef struct _CM_SERIAL_DEVICE_DATA CM_SERIAL_DEVICE_DATA;
typedef enum _CM_SHARE_DISPOSITION CM_SHARE_DISPOSITION;
typedef struct _CM_SONIC_DEVICE_DATA CM_SONIC_DEVICE_DATA;
typedef struct _CM_VIDEO_DEVICE_DATA CM_VIDEO_DEVICE_DATA;
typedef DWORD COLORREF;
typedef struct _CONFIG_ROM CONFIG_ROM;
typedef struct contres_cr10waveformat_tag CONTRESCR10WAVEFORMAT;
typedef struct contres_vqlpcwaveformat_tag CONTRESVQLPCWAVEFORMAT;
typedef MCA_EXCEPTION CPE_EXCEPTION;
typedef enum _CREATE_FILE_TYPE CREATE_FILE_TYPE;
typedef struct creative_adpcmwaveformat_tag CREATIVEADPCMWAVEFORMAT;
typedef struct creative_fastspeech10format_tag CREATIVEFASTSPEECH10WAVEFORMAT;
typedef struct creative_fastspeech8format_tag CREATIVEFASTSPEECH8WAVEFORMAT;
typedef __int16 CSHORT;
typedef struct csimaadpcmwaveformat_tag CSIMAADPCMWAVEFORMAT;
typedef struct _CSTRING CSTRING;
typedef struct _CYCLE_TIME CYCLE_TIME;
enum ComponentCategory {CategoryNotSet = 0xFFFFFFFF,CategoryOther = 0x0,CategoryVideo = 0x1,CategoryAudio = 0x2,CategoryText = 0x3,CategoryData = 0x4,};
enum ComponentStatus {StatusActive = 0x0,StatusInactive = 0x1,StatusUnavailable = 0x2,};
typedef struct _DBC_BAY_DESCRIPTOR DBC_BAY_DESCRIPTOR;
typedef struct _DBC_SUBSYSTEM_DESCRIPTOR DBC_SUBSYSTEM_DESCRIPTOR;
typedef struct _DDPIXELFORMAT DDPIXELFORMAT;
typedef struct _DDVIDEOPORTCONNECT DDVIDEOPORTCONNECT;
typedef struct _DEVICE_CAPABILITIES DEVICE_CAPABILITIES;
typedef struct _DEVICE_DESCRIPTION DEVICE_DESCRIPTION;
typedef struct _DEVICE_FLAGS DEVICE_FLAGS;
typedef enum _DEVICE_INSTALL_STATE DEVICE_INSTALL_STATE;
typedef struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION DEVICE_INTERFACE_CHANGE_NOTIFICATION;
typedef struct _DEVICE_OBJECT DEVICE_OBJECT;
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef enum $7392A4CB0F03A8B0718AEF6E3D9052C7 DEVICE_REGISTRY_PROPERTY;
typedef struct _DEVICE_RELATIONS DEVICE_RELATIONS;
typedef enum _DEVICE_RELATION_TYPE DEVICE_RELATION_TYPE;
typedef enum _DEVICE_REMOVAL_POLICY DEVICE_REMOVAL_POLICY;
typedef enum $CD1AEEBAB641DEC86F01C12702A854EA DEVICE_TEXT_TYPE;
typedef struct _DEVICE_UI_FIRMWARE_REVISION DEVICE_UI_FIRMWARE_REVISION;
typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE DEVICE_USAGE_NOTIFICATION_TYPE;
typedef struct _DEVOBJ_EXTENSION DEVOBJ_EXTENSION;
typedef struct creative_fastspeechformat_tag DIALOGICOKIADPCMWAVEFORMAT;
typedef struct digiadpcmmwaveformat_tag DIGIADPCMWAVEFORMAT;
typedef struct digifixwaveformat_tag DIGIFIXWAVEFORMAT;
typedef struct digirealwaveformat_tag DIGIREALWAVEFORMAT;
typedef struct digistdwaveformat_tag DIGISTDWAVEFORMAT;
typedef struct _DISPATCHER_HEADER DISPATCHER_HEADER;
typedef struct _DMA_ADAPTER DMA_ADAPTER;
typedef struct _DMA_CONFIGURATION_BYTE0 DMA_CONFIGURATION_BYTE0;
typedef struct _DMA_CONFIGURATION_BYTE1 DMA_CONFIGURATION_BYTE1;
typedef struct _DMA_OPERATIONS DMA_OPERATIONS;
typedef enum _DMA_SPEED DMA_SPEED;
typedef enum _DMA_WIDTH DMA_WIDTH;
typedef struct dolbyac2waveformat_tag DOLBYAC2WAVEFORMAT;
typedef double DOUBLE;
typedef enum _DPFLTR_TYPE DPFLTR_TYPE;
typedef struct _DRB DRB;
typedef struct _DRIVER_EXTENSION DRIVER_EXTENSION;
typedef struct _DRIVER_OBJECT DRIVER_OBJECT;
typedef struct tagDRMFORWARD DRMFORWARD;
typedef struct tagDRMRIGHTS DRMRIGHTS;
typedef struct drmwaveformat_tag DRMWAVEFORMAT;
typedef struct _DS3DVECTOR DS3DVECTOR;
enum DVBSystemType {DVB_Cable = 0x0,DVB_Terrestrial = 0x1,DVB_Satellite = 0x2,};
typedef struct dvi_adpcmwaveformat_tag DVIADPCMWAVEFORMAT;
typedef struct _DVINFO DVINFO;
typedef unsigned int DWORD;
typedef unsigned int DWORD32;
typedef unsigned __int64 DWORD64;
typedef ULONGLONG DWORDLONG;
typedef ULONG_PTR DWORD_PTR;
enum DeviceObjectState {DeviceObjectStarted = 0x0,DeviceObjectStopped = 0x1,DeviceObjectRemoved = 0x2,};
typedef struct echosc1waveformat_tag ECHOSC1WAVEFORMAT;
typedef struct wavefilter_echo_tag ECHOWAVEFILTER;
typedef struct _EISA_DMA_CONFIGURATION EISA_DMA_CONFIGURATION;
typedef struct _EISA_IRQ_CONFIGURATION EISA_IRQ_CONFIGURATION;
typedef struct _EISA_IRQ_DESCRIPTOR EISA_IRQ_DESCRIPTOR;
typedef struct _EISA_MEMORY_CONFIGURATION EISA_MEMORY_CONFIGURATION;
typedef struct _EISA_MEMORY_TYPE EISA_MEMORY_TYPE;
typedef struct _EISA_PORT_CONFIGURATION EISA_PORT_CONFIGURATION;
typedef struct _EISA_PORT_DESCRIPTOR EISA_PORT_DESCRIPTOR;
typedef struct _EMULATOR_ACCESS_ENTRY EMULATOR_ACCESS_ENTRY;
typedef enum _EMULATOR_PORT_ACCESS_TYPE EMULATOR_PORT_ACCESS_TYPE;
typedef struct _ENABLE_DISABLE_FP_IN ENABLE_DISABLE_FP_IN;
typedef struct _ENABLE_DISABLE_FP_POLLING_IN ENABLE_DISABLE_FP_POLLING_IN;
typedef struct _ENABLE_OFFLINE_DIAGS_OUT ENABLE_OFFLINE_DIAGS_OUT;
typedef struct _ERESOURCE ERESOURCE;
typedef ULONG_PTR ERESOURCE_THREAD;
typedef enum _EVENT_TYPE EVENT_TYPE;
typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;
typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;
typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;
typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;
typedef struct _EXECUTE_SELF_TEST_IN EXECUTE_SELF_TEST_IN;
typedef struct _EXECUTE_SELF_TEST_OUT EXECUTE_SELF_TEST_OUT;
typedef ULONG EXECUTION_STATE;
typedef enum _EXTENDED_AGP_REGISTER EXTENDED_AGP_REGISTER;
typedef enum _EX_POOL_PRIORITY EX_POOL_PRIORITY;
typedef int (__stdcall *FARPROC)();
typedef struct _FAST_IO_DISPATCH FAST_IO_DISPATCH;
typedef struct _FAST_MUTEX FAST_MUTEX;
typedef UCHAR FCHAR;
typedef struct _FCP_FRAME FCP_FRAME;
typedef struct _FCP_GET_REQUEST FCP_GET_REQUEST;
typedef struct _FCP_GET_RESPONSE FCP_GET_RESPONSE;
typedef struct _FCP_SEND_REQUEST FCP_REQUEST;
typedef struct _FCP_GET_RESPONSE FCP_RESPONSE;
typedef struct _FCP_SEND_REQUEST FCP_SEND_REQUEST;
typedef struct _FCP_SEND_RESPONSE FCP_SEND_RESPONSE;
enum FECMethod {BDA_FEC_METHOD_NOT_SET = 0xFFFFFFFF,BDA_FEC_METHOD_NOT_DEFINED = 0x0,BDA_FEC_VITERBI = 0x1,BDA_FEC_RS_204_188 = 0x2,BDA_FEC_MAX = 0x3,};
typedef struct _iobuf FILE;
typedef struct _FILETIME FILETIME;
typedef struct _FILE_BASIC_INFORMATION FILE_BASIC_INFORMATION;
typedef struct _FILE_FS_DEVICE_INFORMATION FILE_FS_DEVICE_INFORMATION;
typedef struct _FILE_FULL_EA_INFORMATION FILE_FULL_EA_INFORMATION;
typedef enum _FILE_INFORMATION_CLASS FILE_INFORMATION_CLASS;
typedef struct _FILE_NETWORK_OPEN_INFORMATION FILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_OBJECT FILE_OBJECT;
typedef struct _FILE_POSITION_INFORMATION FILE_POSITION_INFORMATION;
typedef struct _FILE_STANDARD_INFORMATION FILE_STANDARD_INFORMATION;
typedef float FLOAT;
typedef struct _FLOAT128 FLOAT128;
typedef ULONG FLONG;
typedef GUID FMTID;
typedef struct fmtowns_snd_waveformat_tag FMTOWNS_SND_WAVEFORMAT;
typedef USHORT FSHORT;
typedef enum _FSINFOCLASS FS_INFORMATION_CLASS;
typedef struct g721_adpcmwaveformat_tag G721_ADPCMWAVEFORMAT;
typedef struct g723_adpcmwaveformat_tag G723_ADPCMWAVEFORMAT;
typedef struct _GENERAL_LOOKASIDE GENERAL_LOOKASIDE;
typedef struct _GENERIC_MAPPING GENERIC_MAPPING;
typedef struct _GET_FP_CAPABILITY_OUT GET_FP_CAPABILITY_OUT;
typedef struct _GET_LOCAL_HOST_INFO1 GET_LOCAL_HOST_INFO1;
typedef struct _GET_LOCAL_HOST_INFO2 GET_LOCAL_HOST_INFO2;
typedef struct _GET_LOCAL_HOST_INFO3 GET_LOCAL_HOST_INFO3;
typedef struct _GET_LOCAL_HOST_INFO4 GET_LOCAL_HOST_INFO4;
typedef struct _GET_LOCAL_HOST_INFO5 GET_LOCAL_HOST_INFO5;
typedef struct _GET_LOCAL_HOST_INFO6 GET_LOCAL_HOST_INFO6;
typedef struct _GET_LOCAL_HOST_INFO7 GET_LOCAL_HOST_INFO7;
typedef struct _GET_UNIT_CAPABILITIES GET_UNIT_CAPABILITIES;
typedef struct _GET_UNIT_IDS GET_UNIT_IDS;
typedef struct _GET_UNIT_INFO GET_UNIT_INFO;
typedef HANDLE GLOBALHANDLE;
typedef struct gsm610waveformat_tag GSM610WAVEFORMAT;
typedef struct _GUID GUID;
enum GuardInterval {BDA_GUARD_NOT_SET = 0xFFFFFFFF,BDA_GUARD_NOT_DEFINED = 0x0,BDA_GUARD_1_32 = 0x1,BDA_GUARD_1_16 = 0x2,BDA_GUARD_1_8 = 0x3,BDA_GUARD_1_4 = 0x4,BDA_GUARD_MAX = 0x5,};
typedef struct HACCEL__ *HACCEL;
struct HACCEL__ {int unused;};
typedef __int16 HALF_PTR;
typedef void *HANDLE;
typedef unsigned int HANDLE_PTR;
typedef struct HBITMAP__ *HBITMAP;
struct HBITMAP__ {int unused;};
typedef struct HBRUSH__ *HBRUSH;
struct HBRUSH__ {int unused;};
typedef struct _HCD_ISO_STAT_COUNTERS HCD_ISO_STAT_COUNTERS;
typedef struct _HCD_STAT_COUNTERS HCD_STAT_COUNTERS;
typedef struct _HCD_STAT_INFORMATION_1 HCD_STAT_INFORMATION_1;
typedef struct _HCD_STAT_INFORMATION_2 HCD_STAT_INFORMATION_2;
typedef struct HCOLORSPACE__ *HCOLORSPACE;
struct HCOLORSPACE__ {int unused;};
typedef HICON HCURSOR;
typedef struct HDC__ *HDC;
struct HDC__ {int unused;};
typedef struct HDESK__ *HDESK;
struct HDESK__ {int unused;};
typedef struct HENHMETAFILE__ *HENHMETAFILE;
struct HENHMETAFILE__ {int unused;};
typedef int HFILE;
typedef struct HFONT__ *HFONT;
struct HFONT__ {int unused;};
typedef void *HGDIOBJ;
typedef HANDLE HGLOBAL;
typedef struct HGLRC__ *HGLRC;
struct HGLRC__ {int unused;};
typedef struct HHOOK__ *HHOOK;
struct HHOOK__ {int unused;};
typedef struct HICON__ *HICON;
struct HICON__ {int unused;};
typedef struct _HIDD_ATTRIBUTES HIDD_ATTRIBUTES;
typedef struct _HIDD_CONFIGURATION HIDD_CONFIGURATION;
typedef struct _HIDP_BUTTON_CAPS HIDP_BUTTON_CAPS;
typedef struct _HIDP_CAPS HIDP_CAPS;
typedef struct _HIDP_COLLECTION_DESC HIDP_COLLECTION_DESC;
typedef struct _HIDP_DATA HIDP_DATA;
typedef struct _HIDP_DEVICE_DESC HIDP_DEVICE_DESC;
typedef struct _HIDP_EXTENDED_ATTRIBUTES HIDP_EXTENDED_ATTRIBUTES;
typedef struct _HIDP_GETCOLDESC_DBG HIDP_GETCOLDESC_DBG;
typedef enum _HIDP_KEYBOARD_DIRECTION HIDP_KEYBOARD_DIRECTION;
typedef struct _HIDP_KEYBOARD_MODIFIER_STATE HIDP_KEYBOARD_MODIFIER_STATE;
typedef struct _HIDP_LINK_COLLECTION_NODE HIDP_LINK_COLLECTION_NODE;
typedef struct _HIDP_REPORT_IDS HIDP_REPORT_IDS;
typedef enum _HIDP_REPORT_TYPE HIDP_REPORT_TYPE;
typedef struct _HIDP_UNKNOWN_TOKEN HIDP_UNKNOWN_TOKEN;
typedef struct _HIDP_VALUE_CAPS HIDP_VALUE_CAPS;
typedef struct _HID_COLLECTION_INFORMATION HID_COLLECTION_INFORMATION;
typedef struct _HID_DESCRIPTOR HID_DESCRIPTOR;
typedef struct _HID_DEVICE_ATTRIBUTES HID_DEVICE_ATTRIBUTES;
typedef struct _HID_DEVICE_EXTENSION HID_DEVICE_EXTENSION;
typedef struct _HID_DRIVER_CONFIG HID_DRIVER_CONFIG;
typedef struct _HID_INTERFACE_NOTIFY_PNP HID_INTERFACE_NOTIFY_PNP;
typedef struct _HID_MINIDRIVER_REGISTRATION HID_MINIDRIVER_REGISTRATION;
typedef void (__stdcall *HID_SEND_IDLE_CALLBACK)(PVOID Context);
typedef struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO;
typedef struct _HID_XFER_PACKET HID_XFER_PACKET;
typedef struct HINSTANCE__ *HINSTANCE;
struct HINSTANCE__ {int unused;};
typedef struct HKEY__ *HKEY;
struct HKEY__ {int unused;};
typedef struct HKL__ *HKL;
struct HKL__ {int unused;};
typedef HANDLE HLOCAL;
typedef struct HMENU__ *HMENU;
struct HMENU__ {int unused;};
typedef struct HMETAFILE__ *HMETAFILE;
struct HMETAFILE__ {int unused;};
typedef HINSTANCE HMODULE;
typedef struct HMONITOR__ *HMONITOR;
struct HMONITOR__ {int unused;};
typedef struct HPALETTE__ *HPALETTE;
struct HPALETTE__ {int unused;};
typedef struct HPEN__ *HPEN;
struct HPEN__ {int unused;};
typedef LONG HRESULT;
typedef struct HRGN__ *HRGN;
struct HRGN__ {int unused;};
typedef struct HRSRC__ *HRSRC;
struct HRSRC__ {int unused;};
typedef struct HSTR__ *HSTR;
struct HSTR__ {int unused;};
typedef struct HTASK__ *HTASK;
struct HTASK__ {int unused;};
typedef struct HUMPD__ *HUMPD;
struct HUMPD__ {int unused;};
typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;
struct HWINEVENTHOOK__ {int unused;};
typedef struct HWINSTA__ *HWINSTA;
struct HWINSTA__ {int unused;};
typedef struct HWND__ *HWND;
struct HWND__ {int unused;};
typedef struct _HWPROFILE_CHANGE_NOTIFICATION HWPROFILE_CHANGE_NOTIFICATION;
typedef struct _HW_CLOCK_OBJECT HW_CLOCK_OBJECT;
typedef struct _HW_EVENT_DESCRIPTOR HW_EVENT_DESCRIPTOR;
typedef struct _HW_INITIALIZATION_DATA HW_INITIALIZATION_DATA;
typedef struct _HW_STREAM_DESCRIPTOR HW_STREAM_DESCRIPTOR;
typedef struct _HW_STREAM_HEADER HW_STREAM_HEADER;
typedef struct _HW_STREAM_INFORMATION HW_STREAM_INFORMATION;
typedef struct _HW_STREAM_OBJECT HW_STREAM_OBJECT;
typedef struct _HW_STREAM_REQUEST_BLOCK HW_STREAM_REQUEST_BLOCK;
typedef struct _HW_TIME_CONTEXT HW_TIME_CONTEXT;
enum HierarchyAlpha {BDA_HALPHA_NOT_SET = 0xFFFFFFFF,BDA_HALPHA_NOT_DEFINED = 0x0,BDA_HALPHA_1 = 0x1,BDA_HALPHA_2 = 0x2,BDA_HALPHA_4 = 0x3,BDA_HALPHA_MAX = 0x4,};
struct IAdapterPowerManagement {struct IAdapterPowerManagementVtbl *lpVtbl;};
struct IAdapterPowerManagementVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *PowerChangeState)(INTERFACE *This, POWER_STATE NewState);NTSTATUS (__stdcall *QueryPowerChangeState)(INTERFACE *This, POWER_STATE NewStateQuery);NTSTATUS (__stdcall *QueryDeviceCapabilities)(INTERFACE *This, PDEVICE_CAPABILITIES PowerDeviceCaps);};
struct IDmaChannel {struct IDmaChannelVtbl *lpVtbl;};
struct IDmaChannelSlave {struct IDmaChannelSlaveVtbl *lpVtbl;};
struct IDmaChannelSlaveVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *AllocateBuffer)(INTERFACE *This, ULONG BufferSize, PPHYSICAL_ADDRESS PhysicalAddressConstraint);void (__stdcall *FreeBuffer)(INTERFACE *This);ULONG (__stdcall *TransferCount)(INTERFACE *This);ULONG (__stdcall *MaximumBufferSize)(INTERFACE *This);ULONG (__stdcall *AllocatedBufferSize)(INTERFACE *This);ULONG (__stdcall *BufferSize)(INTERFACE *This);void (__stdcall *SetBufferSize)(INTERFACE *This, ULONG BufferSize);PVOID (__stdcall *SystemAddress)(INTERFACE *This);PHYSICAL_ADDRESS (__stdcall *PhysicalAddress)(INTERFACE *This);PADAPTER_OBJECT (__stdcall *GetAdapterObject)(INTERFACE *This);void (__stdcall *CopyTo)(INTERFACE *This, PVOID Destination, PVOID Source, ULONG ByteCount);void (__stdcall *CopyFrom)(INTERFACE *This, PVOID Destination, PVOID Source, ULONG ByteCount);NTSTATUS (__stdcall *Start)(INTERFACE *This, ULONG MapSize, BOOLEAN WriteToDevice);NTSTATUS (__stdcall *Stop)(INTERFACE *This);ULONG (__stdcall *ReadCounter)(INTERFACE *This);NTSTATUS (__stdcall *WaitForTC)(INTERFACE *This, ULONG Timeout);};
struct IDmaChannelVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *AllocateBuffer)(INTERFACE *This, ULONG BufferSize, PPHYSICAL_ADDRESS PhysicalAddressConstraint);void (__stdcall *FreeBuffer)(INTERFACE *This);ULONG (__stdcall *TransferCount)(INTERFACE *This);ULONG (__stdcall *MaximumBufferSize)(INTERFACE *This);ULONG (__stdcall *AllocatedBufferSize)(INTERFACE *This);ULONG (__stdcall *BufferSize)(INTERFACE *This);void (__stdcall *SetBufferSize)(INTERFACE *This, ULONG BufferSize);PVOID (__stdcall *SystemAddress)(INTERFACE *This);PHYSICAL_ADDRESS (__stdcall *PhysicalAddress)(INTERFACE *This);PADAPTER_OBJECT (__stdcall *GetAdapterObject)(INTERFACE *This);void (__stdcall *CopyTo)(INTERFACE *This, PVOID Destination, PVOID Source, ULONG ByteCount);void (__stdcall *CopyFrom)(INTERFACE *This, PVOID Destination, PVOID Source, ULONG ByteCount);};
struct IDmaOperations {struct IDmaOperationsVtbl *lpVtbl;};
struct IDmaOperationsVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);PVOID (__stdcall *AllocateCommonBuffer)(INTERFACE *This, ULONG Length, PPHYSICAL_ADDRESS physAddr, BOOLEAN bCacheEnabled);};
struct IDrmAudioStream {struct IDrmAudioStreamVtbl *lpVtbl;};
struct IDrmAudioStreamVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *SetContentId)(INTERFACE *This, ULONG ContentId, PCDRMRIGHTS DrmRights);};
struct IDrmPort {struct IDrmPortVtbl *lpVtbl;};
struct IDrmPort2 {struct IDrmPort2Vtbl *lpVtbl;};
struct IDrmPort2Vtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *CreateContentMixed)(INTERFACE *This, PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);NTSTATUS (__stdcall *DestroyContent)(INTERFACE *This, ULONG ContentId);NTSTATUS (__stdcall *ForwardContentToFileObject)(INTERFACE *This, ULONG ContentId, PFILE_OBJECT FileObject);NTSTATUS (__stdcall *ForwardContentToInterface)(INTERFACE *This, ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);NTSTATUS (__stdcall *GetContentRights)(INTERFACE *This, ULONG ContentId, PDRMRIGHTS DrmRights);NTSTATUS (__stdcall *AddContentHandlers)(INTERFACE *This, ULONG ContentId, PVOID *paHandlers, ULONG NumHandlers);NTSTATUS (__stdcall *ForwardContentToDeviceObject)(INTERFACE *This, ULONG ContentId, PVOID Reserved, PCDRMFORWARD DrmForward);};
struct IDrmPortVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *CreateContentMixed)(INTERFACE *This, PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);NTSTATUS (__stdcall *DestroyContent)(INTERFACE *This, ULONG ContentId);NTSTATUS (__stdcall *ForwardContentToFileObject)(INTERFACE *This, ULONG ContentId, PFILE_OBJECT FileObject);NTSTATUS (__stdcall *ForwardContentToInterface)(INTERFACE *This, ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);NTSTATUS (__stdcall *GetContentRights)(INTERFACE *This, ULONG ContentId, PDRMRIGHTS DrmRights);};
typedef struct _IEEE1394_SCATTER_GATHER_HEADER IEEE1394_SCATTER_GATHER_HEADER;
typedef GUID IID;
struct IIndirectedUnknown {struct IIndirectedUnknownVtbl *lpVtbl;};
struct IIndirectedUnknownVtbl {HRESULT (__stdcall *IndirectedQueryInterface)(IIndirectedUnknown *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *IndirectedAddRef)(IIndirectedUnknown *This);ULONG (__stdcall *IndirectedRelease)(IIndirectedUnknown *This);};
struct IInterruptSync {struct IInterruptSyncVtbl *lpVtbl;};
struct IInterruptSyncVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *CallSynchronizedRoutine)(INTERFACE *This, PINTERRUPTSYNCROUTINE Routine, PVOID DynamicContext);PKINTERRUPT (__stdcall *GetKInterrupt)(INTERFACE *This);NTSTATUS (__stdcall *Connect)(INTERFACE *This);void (__stdcall *Disconnect)(INTERFACE *This);NTSTATUS (__stdcall *RegisterServiceRoutine)(INTERFACE *This, PINTERRUPTSYNCROUTINE Routine, PVOID DynamicContext, BOOLEAN First);};
struct IKoInitializeParentDeviceObject {struct IKoInitializeParentDeviceObjectVtbl *lpVtbl;};
struct IKoInitializeParentDeviceObjectVtbl {HRESULT (__stdcall *SetParentDeviceObject)(IKoInitializeParentDeviceObject *This, PDEVICE_OBJECT ParentDeviceObject);};
typedef struct ima_adpcmwaveformat_tag IMAADPCMWAVEFORMAT;
struct IMiniport {struct IMiniportVtbl *lpVtbl;};
struct IMiniportMidi {struct IMiniportMidiVtbl *lpVtbl;};
struct IMiniportMidiStream {struct IMiniportMidiStreamVtbl *lpVtbl;};
struct IMiniportMidiStreamVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);NTSTATUS (__stdcall *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS (__stdcall *Read)(INTERFACE *This, PVOID BufferAddress, ULONG BufferLength, PULONG BytesRead);NTSTATUS (__stdcall *Write)(INTERFACE *This, PVOID BufferAddress, ULONG BytesToWrite, PULONG BytesWritten);};
struct IMiniportMidiVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS (__stdcall *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS (__stdcall *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTMIDI Port, PSERVICEGROUP *ServiceGroup);void (__stdcall *Service)(INTERFACE *This);NTSTATUS (__stdcall *NewStream)(INTERFACE *This, PMINIPORTMIDISTREAM *Stream, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat, PSERVICEGROUP *ServiceGroup);};
struct IMiniportTopology {struct IMiniportTopologyVtbl *lpVtbl;};
struct IMiniportTopologyVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS (__stdcall *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS (__stdcall *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTTOPOLOGY Port);};
struct IMiniportVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS (__stdcall *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);};
struct IMiniportWaveCyclic {struct IMiniportWaveCyclicVtbl *lpVtbl;};
struct IMiniportWaveCyclicStream {struct IMiniportWaveCyclicStreamVtbl *lpVtbl;};
struct IMiniportWaveCyclicStreamVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);ULONG (__stdcall *SetNotificationFreq)(INTERFACE *This, ULONG Interval, PULONG FrameSize);NTSTATUS (__stdcall *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS (__stdcall *GetPosition)(INTERFACE *This, PULONG Position);NTSTATUS (__stdcall *NormalizePhysicalPosition)(INTERFACE *This, PLONGLONG PhysicalPosition);void (__stdcall *Silence)(INTERFACE *This, PVOID Buffer, ULONG ByteCount);};
struct IMiniportWaveCyclicVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS (__stdcall *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS (__stdcall *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTWAVECYCLIC Port);NTSTATUS (__stdcall *NewStream)(INTERFACE *This, PMINIPORTWAVECYCLICSTREAM *Stream, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat, PDMACHANNEL *DmaChannel, PSERVICEGROUP *ServiceGroup);};
struct IMiniportWavePci {struct IMiniportWavePciVtbl *lpVtbl;};
struct IMiniportWavePciStream {struct IMiniportWavePciStreamVtbl *lpVtbl;};
struct IMiniportWavePciStreamVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);NTSTATUS (__stdcall *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS (__stdcall *GetPosition)(INTERFACE *This, PULONGLONG Position);NTSTATUS (__stdcall *NormalizePhysicalPosition)(INTERFACE *This, PLONGLONG PhysicalPosition);NTSTATUS (__stdcall *GetAllocatorFraming)(INTERFACE *This, PKSALLOCATOR_FRAMING AllocatorFraming);NTSTATUS (__stdcall *RevokeMappings)(INTERFACE *This, PVOID FirstTag, PVOID LastTag, PULONG MappingsRevoked);void (__stdcall *MappingAvailable)(INTERFACE *This);void (__stdcall *Service)(INTERFACE *This);};
struct IMiniportWavePciVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS (__stdcall *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS (__stdcall *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTWAVEPCI Port, PSERVICEGROUP *ServiceGroup);NTSTATUS (__stdcall *NewStream)(INTERFACE *This, PMINIPORTWAVEPCISTREAM *Stream, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PPORTWAVEPCISTREAM PortStream, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat, PDMACHANNEL *DmaChannel, PSERVICEGROUP *ServiceGroup);void (__stdcall *Service)(INTERFACE *This);};
struct IMusicTechnology {struct IMusicTechnologyVtbl *lpVtbl;};
struct IMusicTechnologyVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *SetTechnology)(INTERFACE *This, const GUID *Technology);};
typedef struct _INITIAL_PRIVILEGE_SET INITIAL_PRIVILEGE_SET;
typedef int INT;
typedef signed __int16 INT16;
typedef signed int INT32;
typedef signed __int64 INT64;
typedef signed __int8 INT8;
typedef struct _INTERFACE INTERFACE;
typedef enum _INTERFACE_TYPE INTERFACE_TYPE;
typedef enum $8D43FB820B033ED13008555ED0EFBEEB INTERRUPTSYNCMODE;
typedef int INT_PTR;
struct INonDelegatedUnknown {struct INonDelegatedUnknownVtbl *lpVtbl;};
struct INonDelegatedUnknownVtbl {HRESULT (__stdcall *NonDelegatedQueryInterface)(INonDelegatedUnknown *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *NonDelegatedAddRef)(INonDelegatedUnknown *This);ULONG (__stdcall *NonDelegatedRelease)(INonDelegatedUnknown *This);};
typedef struct _IO_ADDRESS IO_ADDRESS;
typedef enum _IO_ALLOCATION_ACTION IO_ALLOCATION_ACTION;
typedef struct _IO_COMPLETION_CONTEXT IO_COMPLETION_CONTEXT;
typedef enum _IO_COMPLETION_ROUTINE_RESULT IO_COMPLETION_ROUTINE_RESULT;
typedef struct _IO_CSQ IO_CSQ;
typedef struct _IO_CSQ_IRP_CONTEXT IO_CSQ_IRP_CONTEXT;
typedef struct _IO_ERROR_LOG_MESSAGE IO_ERROR_LOG_MESSAGE;
typedef struct _IO_ERROR_LOG_PACKET IO_ERROR_LOG_PACKET;
typedef enum _IO_NOTIFICATION_EVENT_CATEGORY IO_NOTIFICATION_EVENT_CATEGORY;
typedef enum _IO_PAGING_PRIORITY IO_PAGING_PRIORITY;
typedef struct _IO_REMOVE_LOCK IO_REMOVE_LOCK;
typedef struct _IO_REMOVE_LOCK_COMMON_BLOCK IO_REMOVE_LOCK_COMMON_BLOCK;
typedef struct _IO_REMOVE_LOCK_DBG_BLOCK IO_REMOVE_LOCK_DBG_BLOCK;
typedef struct _IO_RESOURCE_DESCRIPTOR IO_RESOURCE_DESCRIPTOR;
typedef struct _IO_RESOURCE_LIST IO_RESOURCE_LIST;
typedef struct _IO_RESOURCE_REQUIREMENTS_LIST IO_RESOURCE_REQUIREMENTS_LIST;
typedef struct _IO_SECURITY_CONTEXT IO_SECURITY_CONTEXT;
typedef struct _IO_STACK_LOCATION IO_STACK_LOCATION;
typedef struct _IO_STATUS_BLOCK IO_STATUS_BLOCK;
typedef struct _IPCR IPCR;
struct IPinCount {struct IPinCountVtbl *lpVtbl;};
struct IPinCountVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *PinCount)(INTERFACE *This, ULONG PinId, PULONG FilterNecessary, PULONG FilterCurrent, PULONG FilterPossible, PULONG GlobalCurrent, PULONG GlobalPossible);};
struct IPort {struct IPortVtbl *lpVtbl;};
struct IPortClsVersion {struct IPortClsVersionVtbl *lpVtbl;};
struct IPortClsVersionVtbl {DWORD (__stdcall *GetVersion)(INTERFACE *This);};
struct IPortEvents {struct IPortEventsVtbl *lpVtbl;};
struct IPortEventsVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *AddEventToEventList)(INTERFACE *This, PKSEVENT_ENTRY EventEntry);void (__stdcall *GenerateEventList)(INTERFACE *This, GUID *Set, ULONG EventId, BOOL PinEvent, ULONG PinId, BOOL NodeEvent, ULONG NodeId);};
struct IPortMidi {struct IPortMidiVtbl *lpVtbl;};
struct IPortMidiVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS (__stdcall *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS (__stdcall *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);void (__stdcall *Notify)(INTERFACE *This, PSERVICEGROUP ServiceGroup);void (__stdcall *RegisterServiceGroup)(INTERFACE *This, PSERVICEGROUP ServiceGroup);};
struct IPortTopology {struct IPortTopologyVtbl *lpVtbl;};
struct IPortTopologyVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS (__stdcall *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS (__stdcall *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);};
struct IPortVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS (__stdcall *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS (__stdcall *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);};
struct IPortWaveCyclic {struct IPortWaveCyclicVtbl *lpVtbl;};
struct IPortWaveCyclicVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS (__stdcall *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS (__stdcall *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);void (__stdcall *Notify)(INTERFACE *This, PSERVICEGROUP ServiceGroup);NTSTATUS (__stdcall *NewSlaveDmaChannel)(INTERFACE *This, PDMACHANNELSLAVE *DmaChannel, PUNKNOWN OuterUnknown, PRESOURCELIST ResourceList, ULONG DmaIndex, ULONG MaximumLength, BOOLEAN DemandMode, DMA_SPEED DmaSpeed);NTSTATUS (__stdcall *NewMasterDmaChannel)(INTERFACE *This, PDMACHANNEL *DmaChannel, PUNKNOWN OuterUnknown, PRESOURCELIST ResourceList, ULONG MaximumLength, BOOLEAN Dma32BitAddresses, BOOLEAN Dma64BitAddresses, DMA_WIDTH DmaWidth, DMA_SPEED DmaSpeed);};
struct IPortWavePci {struct IPortWavePciVtbl *lpVtbl;};
struct IPortWavePciStream {struct IPortWavePciStreamVtbl *lpVtbl;};
struct IPortWavePciStreamVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *GetMapping)(INTERFACE *This, PVOID Tag, PPHYSICAL_ADDRESS PhysicalAddress, PVOID *VirtualAddress, PULONG ByteCount, PULONG Flags);NTSTATUS (__stdcall *ReleaseMapping)(INTERFACE *This, PVOID Tag);NTSTATUS (__stdcall *TerminatePacket)(INTERFACE *This);};
struct IPortWavePciVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS (__stdcall *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS (__stdcall *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);void (__stdcall *Notify)(INTERFACE *This, PSERVICEGROUP ServiceGroup);NTSTATUS (__stdcall *NewMasterDmaChannel)(INTERFACE *This, PDMACHANNEL *OutDmaChannel, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PRESOURCELIST ResourceList, BOOLEAN ScatterGather, BOOLEAN Dma32BitAddresses, BOOLEAN Dma64BitAddresses, BOOLEAN IgnoreCount, DMA_WIDTH DmaWidth, DMA_SPEED DmaSpeed, ULONG MaximumLength, ULONG DmaPort);};
struct IPowerNotify {struct IPowerNotifyVtbl *lpVtbl;};
struct IPowerNotifyVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *PowerChangeNotify)(INTERFACE *This, POWER_STATE PowerState);};
struct IPreFetchOffset {struct IPreFetchOffsetVtbl *lpVtbl;};
struct IPreFetchOffsetVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *SetPreFetchOffset)(INTERFACE *This, ULONG PreFetchOffset);};
typedef struct _IRB IRB;
typedef struct _IRP IRP;
struct IRegistryKey {struct IRegistryKeyVtbl *lpVtbl;};
struct IRegistryKeyVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);NTSTATUS (__stdcall *QueryKey)(INTERFACE *This, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);NTSTATUS (__stdcall *EnumerateKey)(INTERFACE *This, ULONG Index, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);NTSTATUS (__stdcall *QueryValueKey)(INTERFACE *This, PUNICODE_STRING ValueName, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);NTSTATUS (__stdcall *EnumerateValueKey)(INTERFACE *This, ULONG Index, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);NTSTATUS (__stdcall *SetValueKey)(INTERFACE *This, PUNICODE_STRING ValueName, ULONG Type, PVOID Data, ULONG DataSize);NTSTATUS (__stdcall *QueryRegistryValues)(INTERFACE *This, PRTL_QUERY_REGISTRY_TABLE QueryTable, PVOID Context);NTSTATUS (__stdcall *NewSubKey)(INTERFACE *This, IRegistryKey **RegistrySubKey, PUNKNOWN OuterUnknown, ACCESS_MASK DesiredAccess, PUNICODE_STRING SubKeyName, ULONG CreateOptions, PULONG Disposition);NTSTATUS (__stdcall *DeleteKey)(INTERFACE *This);};
struct IResourceList {struct IResourceListVtbl *lpVtbl;};
struct IResourceListVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);ULONG (__stdcall *NumberOfEntries)(INTERFACE *This);ULONG (__stdcall *NumberOfEntriesOfType)(INTERFACE *This, CM_RESOURCE_TYPE Type);PCM_PARTIAL_RESOURCE_DESCRIPTOR (__stdcall *FindTranslatedEntry)(INTERFACE *This, CM_RESOURCE_TYPE Type, ULONG Index);PCM_PARTIAL_RESOURCE_DESCRIPTOR (__stdcall *FindUntranslatedEntry)(INTERFACE *This, CM_RESOURCE_TYPE Type, ULONG Index);NTSTATUS (__stdcall *AddEntry)(INTERFACE *This, PCM_PARTIAL_RESOURCE_DESCRIPTOR Translated, PCM_PARTIAL_RESOURCE_DESCRIPTOR Untranslated);NTSTATUS (__stdcall *AddEntryFromParent)(INTERFACE *This, struct IResourceList *Parent, CM_RESOURCE_TYPE Type, ULONG Index);PCM_RESOURCE_LIST (__stdcall *TranslatedList)(INTERFACE *This);PCM_RESOURCE_LIST (__stdcall *UntranslatedList)(INTERFACE *This);};
typedef struct _ISOCH_DESCRIPTOR ISOCH_DESCRIPTOR;
typedef struct _ISOCH_HEADER ISOCH_HEADER;
struct IServiceGroup {struct IServiceGroupVtbl *lpVtbl;};
struct IServiceGroupVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *RequestService)(INTERFACE *This);NTSTATUS (__stdcall *AddMember)(INTERFACE *This, PSERVICESINK pServiceSink);void (__stdcall *RemoveMember)(INTERFACE *This, PSERVICESINK pServiceSink);void (__stdcall *SupportDelayedService)(INTERFACE *This);void (__stdcall *RequestDelayedService)(INTERFACE *This, ULONGLONG ullDelay);void (__stdcall *CancelDelayedService)(INTERFACE *This);};
struct IServiceSink {struct IServiceSinkVtbl *lpVtbl;};
struct IServiceSinkVtbl {NTSTATUS (__stdcall *QueryInterface)(INTERFACE *This, const IID *const InterfaceId, PVOID *Interface);ULONG (__stdcall *AddRef)(INTERFACE *This);ULONG (__stdcall *Release)(INTERFACE *This);void (__stdcall *RequestService)(INTERFACE *This);};
struct IUnknown {struct IUnknownVtbl *lpVtbl;};
struct IUnknownVtbl {NTSTATUS (__stdcall *QueryInterface)(IUnknown *This, const IID *const, PVOID *);ULONG (__stdcall *AddRef)(IUnknown *This);ULONG (__stdcall *Release)(IUnknown *This);};
typedef struct tagJPEGINFOHEADER JPEGINFOHEADER;
typedef ULONG_PTR KAFFINITY;
typedef struct _KAPC KAPC;
typedef enum _KBUGCHECK_BUFFER_DUMP_STATE KBUGCHECK_BUFFER_DUMP_STATE;
typedef enum _KBUGCHECK_CALLBACK_REASON KBUGCHECK_CALLBACK_REASON;
typedef struct _KBUGCHECK_CALLBACK_RECORD KBUGCHECK_CALLBACK_RECORD;
typedef struct _KBUGCHECK_DUMP_IO KBUGCHECK_DUMP_IO;
typedef enum _KBUGCHECK_DUMP_IO_TYPE KBUGCHECK_DUMP_IO_TYPE;
typedef struct _KBUGCHECK_REASON_CALLBACK_RECORD KBUGCHECK_REASON_CALLBACK_RECORD;
typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA KBUGCHECK_SECONDARY_DUMP_DATA;
typedef struct _KDEVICE_QUEUE KDEVICE_QUEUE;
typedef struct _KDEVICE_QUEUE_ENTRY KDEVICE_QUEUE_ENTRY;
typedef struct _KDPC KDPC;
typedef enum _KDPC_IMPORTANCE KDPC_IMPORTANCE;
typedef struct _KEVENT KEVENT;
typedef struct _KEYBOARD_ID_EX KEYBOARD_ID_EX;
typedef struct _KEYBOARD_PORT_WMI_STD_DATA KEYBOARD_PORT_WMI_STD_DATA;
typedef struct _KEY_BASIC_INFORMATION KEY_BASIC_INFORMATION;
typedef struct _KEY_FULL_INFORMATION KEY_FULL_INFORMATION;
typedef enum _KEY_INFORMATION_CLASS KEY_INFORMATION_CLASS;
typedef struct _KEY_NODE_INFORMATION KEY_NODE_INFORMATION;
typedef enum _KEY_SET_INFORMATION_CLASS KEY_SET_INFORMATION_CLASS;
typedef struct _KEY_USER_FLAGS_INFORMATION KEY_USER_FLAGS_INFORMATION;
typedef struct _KEY_VALUE_BASIC_INFORMATION KEY_VALUE_BASIC_INFORMATION;
typedef struct _KEY_VALUE_ENTRY KEY_VALUE_ENTRY;
typedef struct _KEY_VALUE_FULL_INFORMATION KEY_VALUE_FULL_INFORMATION;
typedef enum _KEY_VALUE_INFORMATION_CLASS KEY_VALUE_INFORMATION_CLASS;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION KEY_VALUE_PARTIAL_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
typedef struct _KEY_WRITE_TIME_INFORMATION KEY_WRITE_TIME_INFORMATION;
typedef struct _KFLOATING_SAVE KFLOATING_SAVE;
typedef enum _KINTERRUPT_MODE KINTERRUPT_MODE;
typedef struct _KIPI_COUNTS KIPI_COUNTS;
typedef UCHAR KIRQL;
typedef struct _KMUTANT KMUTANT;
typedef struct _KMUTANT KMUTEX;
typedef LONG KPRIORITY;
typedef CCHAR KPROCESSOR_MODE;
typedef enum _KPROFILE_SOURCE KPROFILE_SOURCE;
typedef struct $FBE7179BAB40555F1A13AD3C5BC3BB71 KSAC3_ALTERNATE_AUDIO;
typedef struct $9ADD4811563784E97592213CBF8060F3 KSAC3_BIT_STREAM_MODE;
typedef struct $299134A1587F81C88B1AF91D3DBFCA39 KSAC3_DIALOGUE_LEVEL;
typedef struct $E4F7CAB5B6B7D45C514D7552CCE8FB09 KSAC3_DOWNMIX;
typedef struct $2FCB7B16F35A994219C907239F9496DC KSAC3_ERROR_CONCEALMENT;
typedef struct $12065485545C98CF3EA596DDCCDF0ED5 KSAC3_ROOM_TYPE;
typedef struct _KSALLOCATOR_DISPATCH KSALLOCATOR_DISPATCH;
typedef struct $24396BA7B1ABFC61208375C7C88D8B5F KSALLOCATOR_FRAMING;
typedef struct $E1D601DFB9F50A58CFF7A79389CE7A63 KSALLOCATOR_FRAMING_EX;
typedef struct $8276AF68B2084DDEC7235E96B5A3DDF6 KSATTRIBUTE;
typedef struct $FF5E69F4B253A5B06BAE6BEDF0A709ED KSATTRIBUTE_LIST;
typedef struct $97BF4F75CC2B13E4CD29FCADBEF14990 KSAUDIO_CHANNEL_CONFIG;
typedef struct $66CF5E28886A6CE6C0E44A3DF6E2CD53 KSAUDIO_COPY_PROTECTION;
typedef struct $52AD6460DAD19A3D48443005CDCF2412 KSAUDIO_DYNAMIC_RANGE;
typedef struct $BF6BFD8678B7E7ABDC56122D693BAF10 KSAUDIO_MIXCAP_TABLE;
typedef struct $12A419A691843E3FACBCDACF473D8E54 KSAUDIO_MIXLEVEL;
typedef struct $1D3D1B49856810D80BCDEEA6F14E981E KSAUDIO_MIX_CAPS;
typedef struct $8F18F53EFBEBE9496980818DD790123F KSAUDIO_POSITION;
typedef struct $C9C4D03C150E869FFC5FB33A10EAB149 KSAUDIO_PREFERRED_STATUS;
typedef struct $FDD48878D337B9676F07B6A46EC3FECC KSAUDIO_STEREO_ENHANCE;
typedef struct KSAUTOMATION_TABLE_ KSAUTOMATION_TABLE;
struct KSAUTOMATION_TABLE_ {ULONG PropertySetsCount;ULONG PropertyItemSize;const KSPROPERTY_SET *PropertySets;ULONG MethodSetsCount;ULONG MethodItemSize;const KSMETHOD_SET *MethodSets;ULONG EventSetsCount;ULONG EventItemSize;const KSEVENT_SET *EventSets;PVOID Alignment;};
typedef struct $58C2A16435EA044F8AD69979A6836AA4 KSBUFFER_ITEM;
typedef struct $9CC657B7E0AE245246966219C61A944E KSCLOCK_CREATE;
typedef struct _KSCLOCK_DISPATCH KSCLOCK_DISPATCH;
typedef struct $F0AD97B4DA1FA55F31FC7FE8AE7CC03A KSCLOCK_FUNCTIONTABLE;
typedef enum $B3236B54C110CBB1085E590D1151299D KSCOMPLETION_INVOCATION;
typedef struct $91BD25BE856B91F4F94C146E39BAA29E KSCOMPONENTID;
typedef struct $DCCCDBDB2D2AC461237A75FB18C0449E KSCORRELATED_TIME;
typedef union $A4FB595EF421231CAF150DDD3288A6D5 KSDATAFORMAT;
typedef union $A4FB595EF421231CAF150DDD3288A6D5 KSDATARANGE;
typedef struct $A156F3783D3AF89709906294AAADEE96 KSDATARANGE_AUDIO;
typedef struct $DCA1691E12E502D611F5426518CFEFB5 KSDATARANGE_MUSIC;
typedef KSIDENTIFIER KSDEGRADE;
typedef enum $4359A6DF66D6C0A2E03091CE4CF62226 KSDEGRADE_STANDARD;
typedef struct _KSDEVICE KSDEVICE;
typedef struct _KSDEVICE_DESCRIPTOR KSDEVICE_DESCRIPTOR;
typedef struct _KSDEVICE_DISPATCH KSDEVICE_DISPATCH;
typedef PVOID KSDEVICE_HEADER;
typedef struct $0B037F2534779A05E9AEAE9A3A29D997 KSDISPATCH_TABLE;
typedef struct $C18AA754B44D3B0CE088F6A6B0863744 KSDISPLAYCHANGE;
typedef struct $0237C65E8322975CE5980DC9C74E362C KSDPC_ITEM;
typedef struct $6C32D841228ADC85BF22C8C3850F7AC4 KSDRMAUDIOSTREAM_CONTENTID;
typedef struct $9E1ED747B9CD39E7270D6384935529E0 KSDS3D_BUFFER_ALL;
typedef struct $8FE9905039884FA12A33AF170E497D82 KSDS3D_BUFFER_CONE_ANGLES;
typedef enum $85B8D048AA221EC9AB61032617833AB7 KSDS3D_HRTF_COEFF_FORMAT;
typedef struct $433BAB6AAAB02EEB6CF36ABDE1A4217C KSDS3D_HRTF_FILTER_FORMAT_MSG;
typedef enum $936EE475885E5E1972395CF18A9E441C KSDS3D_HRTF_FILTER_METHOD;
typedef enum $DD5FC77EC1374A734666B81823C28AFB KSDS3D_HRTF_FILTER_QUALITY;
typedef enum $FDE649CC57CE41CE85FECAF000FEEDF5 KSDS3D_HRTF_FILTER_VERSION;
typedef struct $38332C6D8513F636DCCBCCABE200BE7A KSDS3D_HRTF_INIT_MSG;
typedef struct $FB17C9225429EF808B128BCE70FFD0DB KSDS3D_HRTF_PARAMS_MSG;
typedef struct $AC9A5C69A2E8BFD7F981D24477498145 KSDS3D_ITD_PARAMS;
typedef struct $ECC65BA02B08F93DE1D3AD2A06446B79 KSDS3D_ITD_PARAMS_MSG;
typedef struct $518AEB1FEE0990110D4FC7592EB5CC55 KSDS3D_LISTENER_ALL;
typedef struct $6D40E8E2125A3BBCEB5B162FD51EF33B KSDS3D_LISTENER_ORIENTATION;
typedef struct _KSEMAPHORE KSEMAPHORE;
typedef struct $686FDF1C0C03C3D9039AD8B14FB9C99A KSERROR;
typedef KSIDENTIFIER KSEVENT;
typedef struct $37B8E770EA172EE03D1653C7B692D623 KSEVENTDATA;
typedef enum $C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_LOCKTYPE;
typedef enum $8EE7F9EA7D1453B89425165DC84C8DAD KSEVENT_AUDIO_CONTROL_CHANGE;
typedef enum $6D08AF020E88675B59174822EC55B914 KSEVENT_CLOCK_POSITION;
typedef enum $CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION;
typedef enum $CAE561814972B63FC408CA74931D2863 KSEVENT_CROSSBAR;
typedef enum $2E80CEBFECBA0EBADF6AA183D61A87F6 KSEVENT_CYCLIC_TIME;
typedef struct _KSEVENT_ENTRY KSEVENT_ENTRY;
typedef struct $BBE51AA07033B60919BF464EA8FAB770 KSEVENT_ITEM;
typedef enum $6B2401DF69FC0CC161171E2CBCDDC1C6 KSEVENT_LOOPEDSTREAMING;
typedef struct $A35330E71724D40A1BD15D9C53ABB072 KSEVENT_SET;
typedef enum $861DD39FC4CEDEF9FD3B0ECFEB4EA61F KSEVENT_STREAMALLOCATOR;
typedef struct $BDE91A4D4766441856A2EB7036E539BD KSEVENT_TIME_INTERVAL;
typedef struct $A07373D2A5755254DCD028456AB4EC3B KSEVENT_TIME_MARK;
typedef enum $98FA3A45888AB38274FC20DD306BA119 KSEVENT_TUNER;
typedef enum $C43D2A6EFFDC6958F872464784E778EF KSEVENT_TVAUDIO;
typedef enum $9D9FB30271C58D4C0035E931B55503FE KSEVENT_VIDCAPTOSTI;
typedef enum $67063D379273ADCD5D91019DFED2E95F KSEVENT_VIDEODECODER;
typedef enum $AD2684E740CA89CFFCE63237D53FEB0F KSEVENT_VPNOTIFY;
typedef enum $3A98730CE8FA5C41DCBE091A69EDD8A4 KSEVENT_VPVBINOTIFY;
typedef struct $0D4D90B30C078E58E26CBA964C3C5A4B KSE_NODE;
typedef struct $2CC32A13BC47B0ADD425440A5881DEFA KSFASTMETHOD_ITEM;
typedef struct $C0F7BB227D2914979DE22500D0E4A4BA KSFASTPROPERTY_ITEM;
typedef struct _KSFILTER KSFILTER;
typedef struct _KSFILTERFACTORY KSFILTERFACTORY;
typedef struct _KSFILTER_DESCRIPTOR KSFILTER_DESCRIPTOR;
typedef struct _KSFILTER_DISPATCH KSFILTER_DISPATCH;
typedef struct $52BD71AC0F61B53F3E44045ED088295E KSFRAMETIME;
typedef struct _KSGATE KSGATE;
typedef struct _KSGOP_USERDATA KSGOP_USERDATA;
struct KSGRAPHMANAGER_FUNCTIONTABLE {PFNKSGRAPHMANAGER_NOTIFY NotifyEvent;};
typedef struct $E1A151A2F6A6C209F977C1A4EAB9F7DF KSHANDSHAKE;
typedef struct $117E3A994AEBF040E18388CACE709509 KSIDENTIFIER;
typedef enum $62D95A1861CF901152B53DFA047F6B81 KSINTERFACE_FILEIO;
typedef enum $3A65399903FADBC05E4C10BA9E609C32 KSINTERFACE_MEDIA;
typedef enum $ADC633718E981BBAA2F59FA41E3EE0B2 KSINTERFACE_STANDARD;
typedef struct $CA0DACF90AABDE33CADDF7416F0C17F2 KSINTERVAL;
typedef enum $6A4F9FD289D1A939E2A70058613B4F06 KSIRP_REMOVAL_OPERATION;
typedef enum $7CE1B7F1EC16E342EFF5A9F3696EB2C0 KSLIST_ENTRY_LOCATION;
typedef struct _KSMAPPING KSMAPPING;
typedef KSIDENTIFIER KSMETHOD;
typedef enum $8DE99528E372621AB370A19368014C30 KSMETHOD_BDA_CHANGE_SYNC;
typedef enum $02FAD7642A42DC49E4482F6F328202A2 KSMETHOD_BDA_DEVICE_CONFIGURATION;
typedef struct $DE8F492EE455543594962797C1392B09 KSMETHOD_ITEM;
typedef struct $D9863DBF23EBBD7F74D85DDE027E035E KSMETHOD_SET;
typedef enum $6DAD80B3977302E5EA3CDCFB6538A59F KSMETHOD_STREAMALLOCATOR;
typedef enum $214B3FAB360CFC0FA4B19913ED3BE09A KSMETHOD_STREAMIO;
typedef enum $2CD358AE72CA35E88B6E5377F4286C0E KSMETHOD_WAVETABLE;
typedef struct _KSMPEGVID_RECT KSMPEGVID_RECT;
typedef struct $97739C7249C02ACEBAF17DFC34E3F72B KSMULTIPLE_DATA_PROP;
typedef struct $D0C2582348DF16EE31650672742EA602 KSMULTIPLE_ITEM;
typedef struct $DE2D2125000B90024B7DD637FE0DF34E KSMUSICFORMAT;
typedef struct _KSM_BDA_PIN KSM_BDA_PIN;
typedef struct _KSM_BDA_PIN_PAIR KSM_BDA_PIN_PAIR;
typedef struct $99C6912CDB5C12269FDD73BE73429D8B KSM_NODE;
typedef struct _KSM_PIN KSM_PIN;
typedef struct _KSM_PIN_PAIR KSM_PIN_PAIR;
typedef struct $A4CC0F087DE00420119DAAB092DFFA3E KSNODEPROPERTY;
typedef struct $6B8E9FF8FB4DE59DE7DA4092DA92354D KSNODEPROPERTY_AUDIO_3D_LISTENER;
typedef struct $8251F34BCF49AE1C266F7CD180791646 KSNODEPROPERTY_AUDIO_CHANNEL;
typedef struct $7445C9FCFCC2899651BCA0E341BC0369 KSNODEPROPERTY_AUDIO_DEV_SPECIFIC;
typedef struct $4436E3E3B2A9BAC50D793DBB422657C7 KSNODEPROPERTY_AUDIO_PROPERTY;
typedef struct $3E8BFD172CC0232DA5E7071EC2A0A89F KSNODE_CREATE;
typedef struct _KSNODE_DESCRIPTOR KSNODE_DESCRIPTOR;
typedef enum $9239C4646B2840F9E3B30EC525310BA9 KSOBJECTTYPE;
typedef PVOID KSOBJECT_BAG;
typedef struct $42F99BA4BF00EE2B1B9AFA99FBE7C8B1 KSOBJECT_CREATE;
typedef struct $8F4AC9317002A11552A6341450417F12 KSOBJECT_CREATE_ITEM;
typedef PVOID KSOBJECT_HEADER;
typedef struct _KSPIN KSPIN;
typedef struct $01091B9DEBEBC2354EBF1594EEF6BE89 KSPIN_CINSTANCES;
typedef enum $99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION;
typedef struct $58C2C1BF6568EE28BD9B872E6BA03976 KSPIN_CONNECT;
typedef enum $E5E05FC88E8385A5216FCD37A95BAA87 KSPIN_DATAFLOW;
typedef struct $4C3688935B439E6B73B5D283DA0CA595 KSPIN_DESCRIPTOR;
typedef struct _KSPIN_DESCRIPTOR_EX KSPIN_DESCRIPTOR_EX;
typedef struct _KSPIN_DISPATCH KSPIN_DISPATCH;
typedef enum _KSPIN_FLAG_AVC KSPIN_FLAG_AVC;
typedef KSIDENTIFIER KSPIN_INTERFACE;
typedef ULONG_PTR KSPIN_LOCK;
typedef KSIDENTIFIER KSPIN_MEDIUM;
typedef struct $1889F3BAB83DF1AC38A4E0627115688D KSPIN_PHYSICALCONNECTION;
typedef struct $D611436986C6FEF0F654B123D787805F KSPRIORITY;
typedef struct _KSPROCESSPIN KSPROCESSPIN;
typedef struct _KSPROCESSPIN_INDEXENTRY KSPROCESSPIN_INDEXENTRY;
typedef KSIDENTIFIER KSPROPERTY;
typedef enum $2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3;
typedef enum $54AE5E5F19366D8071D858EB4F56617A KSPROPERTY_AEC;
typedef enum $2DEFE1B87100719F80278A026CBFF4D7 KSPROPERTY_ALLOCATOR_CONTROL;
typedef struct $9283D0FA6633E8568FC062864CF70F24 KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS_S;
typedef struct $2AA7958816AF26AF0A1E54EEE587A92C KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE_S;
typedef struct $B4A25942D193F2EAA86C395C02EC729E KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE_S;
typedef enum $7772B546DBDF650B52C572BF7BB5BA92 KSPROPERTY_AUDDECOUT;
typedef enum $F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO;
typedef enum $C84AAC0EFB97B6FA6320B166810390ED KSPROPERTY_AUDIOGFX;
typedef enum $3EB7CD5A2478AE20126886459846210D KSPROPERTY_BDA_AUTODEMODULATE;
typedef enum $1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA;
typedef enum $FA11D0DE19A9089B50BC241520DAD748 KSPROPERTY_BDA_CA_EVENT;
typedef enum $2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_DIGITAL_DEMODULATOR;
typedef enum $6B870DC24D0C8AC4BA7D2C047999A6A3 KSPROPERTY_BDA_ETHERNET_FILTER;
typedef enum $6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_FREQUENCY_FILTER;
typedef enum $D5CA3A18CB786C06D1FE5E26C4BBD8C9 KSPROPERTY_BDA_IPv4_FILTER;
typedef enum $6F6C2F72068A7A854C30F881415EDCB8 KSPROPERTY_BDA_IPv6_FILTER;
typedef enum $6F5958920F6A8F401B50E2A1B2D54572 KSPROPERTY_BDA_LNB_INFO;
typedef enum $702932362B8608D728382EB01F6EA68B KSPROPERTY_BDA_NULL_TRANSFORM;
typedef enum $0B804802F465170881F43A3A4D8457F6 KSPROPERTY_BDA_PIDFILTER;
typedef enum $15EAB5DB270905D3ADC7E2FB667B7EB6 KSPROPERTY_BDA_PIN_CONTROL;
typedef enum $DF42200E5C7644BA9EFD9248E6DB20BA KSPROPERTY_BDA_PIN_EVENT;
typedef enum $CD1B745820A9D90889EBAB7E9D163FB3 KSPROPERTY_BDA_SIGNAL_STATS;
typedef enum $FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_TOPOLOGY;
typedef enum $714E217E1FF07AEF9AC8D62CE7BB20D6 KSPROPERTY_BDA_VOID_TRANSFORM;
typedef enum $F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC;
typedef union $C9F2A16A1B5FC998B91DA494984E0FDB KSPROPERTY_BOUNDS_LONG;
typedef union $49DE94CD170A783608C4A6CA5E13CF1F KSPROPERTY_BOUNDS_LONGLONG;
typedef struct $9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_CAMERACONTROL_S;
typedef enum $931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK;
typedef BOOL KSPROPERTY_COMPOSIT_ON;
typedef enum $5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION;
typedef enum $CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_COPYPROT;
typedef struct $6F08919EF02DAA05323F80511ECED656 KSPROPERTY_CROSSBAR_CAPS_S;
typedef struct $05B1F1BDA3A085B0ABA09A777878EB7C KSPROPERTY_CROSSBAR_PININFO_S;
typedef struct $ECD9D23603D8BADEE24156B8BE3276B4 KSPROPERTY_CROSSBAR_ROUTE_S;
typedef struct $155DA1A439C400442DF8DC3CA0B009F1 KSPROPERTY_DESCRIPTION;
typedef enum $A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER;
typedef enum $38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER;
typedef enum $A6BC26748E56DACD668315459CCF5D3F KSPROPERTY_DRMAUDIOSTREAM;
typedef struct $1F0027E2ABF976FB8AD72E88DC9BB28B KSPROPERTY_DROPPEDFRAMES_CURRENT_S;
typedef enum $05DAA4B528850479245A9C123C494191 KSPROPERTY_DVDSUBPIC;
typedef enum $27EA88566304FD4A859B4EB0EE874253 KSPROPERTY_GENERAL;
typedef enum $4BE76D8A2D42FA48351D108905A477D8 KSPROPERTY_GM;
typedef struct _KSPROPERTY_GRAPHMANAGER_INTERFACE KSPROPERTY_GRAPHMANAGER_INTERFACE;
typedef enum $222C5FE2FBB310101DEF802D75341780 KSPROPERTY_HRTF3D;
typedef enum $1737843133A6E4DC3631406BF92A2320 KSPROPERTY_IDS_BDA_TABLE;
typedef enum $685D0097497CB64E18A21F243FD25622 KSPROPERTY_ITD3D;
typedef struct $33D5B48BFB25F68EBEA0D059F2171BBA KSPROPERTY_ITEM;
typedef struct $61992E1E6DA7B91ECC7FA4A74B115A04 KSPROPERTY_MEDIAAVAILABLE;
typedef enum $0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING;
typedef struct $BC7A094E99B893F962A170A802EFE988 KSPROPERTY_MEMBERSHEADER;
typedef struct $707EC234ECD45402760253CA9174D40C KSPROPERTY_MEMBERSLIST;
typedef enum $2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID;
typedef enum $F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE;
typedef enum $6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN;
typedef struct $7D6AD1D4C0599A70ED2A75DF53A62D54 KSPROPERTY_POSITIONS;
typedef enum $2E38A7C1F534E42343A61A8545C8A30E KSPROPERTY_QUALITY;
typedef enum $88B706C139ABA6F86ADC31E6AAF44FB3 KSPROPERTY_RTAUDIO;
typedef struct $0E076CBD8F5A7ED08B697C5009EDFCFF KSPROPERTY_SERIAL;
typedef struct $F1FF9EB17A5B0DC512AB60E4FE6215DC KSPROPERTY_SERIALHDR;
typedef struct $AD455FBC572689F791F2277291BE97AE KSPROPERTY_SET;
typedef struct _KSPROPERTY_SPHLI KSPROPERTY_SPHLI;
typedef struct _KSPROPERTY_SPPAL KSPROPERTY_SPPAL;
typedef struct $BA718A362089753A7EB60B21429558A7 KSPROPERTY_STEPPING_LONG;
typedef struct $631353BB22A3E1576EFF7DC760D2A07D KSPROPERTY_STEPPING_LONGLONG;
typedef enum $023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM;
typedef enum $414881918899110C4C8585ADE11D74B4 KSPROPERTY_STREAMALLOCATOR;
typedef enum $E429D5BCA10BC7F1E46CF67F9B793820 KSPROPERTY_STREAMINTERFACE;
typedef enum $7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO;
typedef enum $6C28A36E3B687017C39113137644E2AF KSPROPERTY_SYSAUDIO_DEFAULT_TYPE;
typedef enum $84B3C5477E189348A14D3C2A7517CC31 KSPROPERTY_SYSAUDIO_PIN;
typedef enum $729DCE355D7523E6CA017E6077BAB356 KSPROPERTY_TOPOLOGY;
typedef enum $B3A84405D78147E904BCCE08E14749CA KSPROPERTY_TOPOLOGYNODE;
typedef enum $A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER;
typedef struct $48207AC35C517F533F0BE91ADB0B9FCA KSPROPERTY_TUNER_CAPS_S;
typedef struct $B62AAF3B70FEB5C8D5EF5D71926BC992 KSPROPERTY_TUNER_FREQUENCY_S;
typedef struct $23496AA6B538BC04EA278D40B88E7395 KSPROPERTY_TUNER_IF_MEDIUM_S;
typedef struct $E4D39CEDA60A9A842177218EB3078B88 KSPROPERTY_TUNER_INPUT_S;
typedef enum $0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODES;
typedef struct $358B21B769DBB67C3050F61FED658732 KSPROPERTY_TUNER_MODE_CAPS_S;
typedef struct $85CBE24E9ED55DBB779718CA5D73A273 KSPROPERTY_TUNER_MODE_S;
typedef struct $060F75F85D33090A279ABE5EFCC5AB4A KSPROPERTY_TUNER_STANDARD_S;
typedef struct $E15D7B7CA61FF43DF93005DFD376A388 KSPROPERTY_TUNER_STATUS_S;
typedef struct $AAD79452FC68247846A5E3B058A03BB4 KSPROPERTY_TVAUDIO_CAPS_S;
typedef struct $85CBE24E9ED55DBB779718CA5D73A273 KSPROPERTY_TVAUDIO_S;
typedef struct $EE7A277138FF7ACF03A1E9A4C6095702 KSPROPERTY_VALUES;
typedef enum $E4F601CF8334073149F423AA599EAEAE KSPROPERTY_VBICAP;
typedef enum $CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING;
typedef struct $E5C551D5220B94E855DFD2A46F971A3B KSPROPERTY_VBICODECFILTERING_CC_SUBSTREAMS_S;
typedef struct $DB6743270A05FF5B7AB17563AEBB3A96 KSPROPERTY_VBICODECFILTERING_NABTS_SUBSTREAMS_S;
typedef struct $8630A1F515F1D9088A894BA95A0F4D66 KSPROPERTY_VBICODECFILTERING_SCANLINES_S;
typedef struct $1CE0BD7852F87226759D0185D4AC1198 KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_PIN_S;
typedef struct $FB8A4E21AD43EDA8BFCCEEFE99FC59C9 KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_S;
typedef struct $1F16BBD766B6BEFB723ABEAEF53457A3 KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_PIN_S;
typedef struct $07B7FBDB71A394C363DCB969C30B9F57 KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_S;
typedef struct $E4A6BAB3223452EC45F6B117A37FFCF9 KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_PIN_S;
typedef struct $190FAF90ED71AB17CA7DE27E94D1BCF3 KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_S;
typedef enum $5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_VIDCAP_CAMERACONTROL;
typedef enum $09A34D7915C9A95B91A5C3C199852FD2 KSPROPERTY_VIDCAP_CROSSBAR;
typedef enum $9E0565FF8CB6288B094DEDB695088DFB KSPROPERTY_VIDCAP_DROPPEDFRAMES;
typedef enum $59F47961FEC953F20A64EC788B1D06EA KSPROPERTY_VIDCAP_TVAUDIO;
typedef enum $179945923F574A37108B154726F97D56 KSPROPERTY_VIDCAP_VIDEOCOMPRESSION;
typedef enum $984DD30B3DA0FC7F55BB22873AC26968 KSPROPERTY_VIDCAP_VIDEOCONTROL;
typedef enum $C06925BC9DA0F969A0E4486B73371866 KSPROPERTY_VIDCAP_VIDEODECODER;
typedef enum $49B4DF22A98C0153E90C1246F17F787B KSPROPERTY_VIDCAP_VIDEOENCODER;
typedef enum $2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDCAP_VIDEOPROCAMP;
typedef struct $441EBF211493C42D9642F77D873F68D1 KSPROPERTY_VIDEOCOMPRESSION_GETINFO_S;
typedef struct $6957CE76948A33FD66E00469AB6817B0 KSPROPERTY_VIDEOCOMPRESSION_S;
typedef struct $C1C3EF408C46606406ABFE21B3E99DE8 KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE_S;
typedef struct $B04A80E61A6C52E3FD4D22A5F125C77E KSPROPERTY_VIDEOCONTROL_CAPS_S;
typedef struct $D2D205A4E5DA2498F5010F3E3EADEEBB KSPROPERTY_VIDEOCONTROL_FRAME_RATES_S;
typedef struct $CB16EFCEDA39FCD4D0BC1BDE67199271 KSPROPERTY_VIDEOCONTROL_MODE_S;
typedef struct $56FA1B9DDCE9D648FE900988960BAD6F KSPROPERTY_VIDEODECODER_CAPS_S;
typedef struct $764676431BC78EE50306C71955FB365D KSPROPERTY_VIDEODECODER_S;
typedef struct $D86AEF8896DDE0BDF211E48E78F8BB6F KSPROPERTY_VIDEODECODER_STATUS_S;
typedef struct $9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_VIDEOENCODER_S;
typedef struct $9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_VIDEOPROCAMP_S;
typedef enum $270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG;
typedef enum $B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE;
typedef struct _KSP_BDA_NODE_PIN KSP_BDA_NODE_PIN;
typedef struct $7DA6CEE7E211DED2F61B14AB99948ADC KSP_DRMAUDIOSTREAM_CONTENTID;
typedef struct $A4CC0F087DE00420119DAAB092DFFA3E KSP_NODE;
typedef struct $01DCE0ED23F464638BF845FBE919C7FC KSP_NODE_ESPID;
typedef struct $69DAD432D0597BAB6A67398C913F94DB KSP_PIN;
typedef struct $EF98EE567420140E285BF0657F46953F KSP_TIMEFORMAT;
typedef struct $1C8C43135D010607C9E39DAEFBEEA658 KSQUALITY;
typedef struct $3878B18F15C290CF7BC80116234DE41C KSQUALITY_MANAGER;
typedef struct $9D2EE2D5E082F56CCDE737471FBF8D82 KSQUERYBUFFER;
typedef struct $7DB559BE1DE343E17A8A94B6F2E38031 KSRATE;
typedef struct $26873349DB0A36B1F3161FA857CA70AC KSRATE_CAPABILITY;
typedef struct $742D342C7048E2C3902DF7570B72F6FC KSRELATIVEEVENT;
typedef enum $D64CEF8F52066C406CD4BA6573420261 KSRESET;
typedef struct $204C6CB5B1CC0D35B371E5C594718A83 KSRESOLUTION;
typedef struct $9B0A4478CCC03CE069B62A821FAD8B21 KSSCATTER_GATHER;
typedef enum $B7D2D905F5EEADB8A12D41415E190E1C KSSTACK_USE;
typedef enum $B4EFCEC8C68CF8B596CEF68A8AD15C1A KSSTATE;
typedef struct $1C72DF34A2E997094BDDFB37C83896FB KSSTREAMALLOCATOR_FUNCTIONTABLE;
typedef struct $E21F85AFDEE9EAF37885ADBF8938BB0C KSSTREAMALLOCATOR_STATUS;
typedef struct $B03639772012518ABC96BF05B41D5C12 KSSTREAMALLOCATOR_STATUS_EX;
typedef struct $87CE1B284ED7C4D9787DE2C17B5E3229 KSSTREAM_HEADER;
typedef struct _KSSTREAM_POINTER KSSTREAM_POINTER;
typedef struct _KSSTREAM_POINTER_OFFSET KSSTREAM_POINTER_OFFSET;
typedef enum $DD63D416C80B0B367D506EB1E8E34ADE KSSTREAM_POINTER_STATE;
typedef enum $D65DCBF02618B4971A14091F77C71942 KSTARGET_STATE;
typedef struct $E7BDCECB0924BC4C6E03B7EEA1B31BA1 KSTIME;
typedef struct $D8768C71F24D405D4B7DEC8016730D6C KSTOPOLOGY;
typedef struct $B0BC4AADD5C9FF12157D028DEF0CCD6A KSTOPOLOGY_CONNECTION;
typedef struct $EA4AC72E281160164D445E15D4425ADE KSVPMAXPIXELRATE;
typedef struct $5B98A3A85E20DBA203FE93F0C6DC9B6B KSVPSIZE_PROP;
typedef struct $BFD35443418CDCF1187E122E74A5B815 KSVPSURFACEPARAMS;
typedef struct $0606DB5FE2099CCDC829F33B29607B55 KSWAVETABLE_WAVE_DESC;
typedef struct $2E8FF8F0F30DAB89972BBD12E0BA3A8E KSWAVE_BUFFER;
typedef struct $F0DE5EAC046D7D32AA534DC253D377C4 KSWAVE_COMPATCAPS;
typedef struct $816E3560EF21380C948191659F672DF0 KSWAVE_INPUT_CAPABILITIES;
typedef struct $E79116A6AA0CFF653592F57D81FA8A4C KSWAVE_OUTPUT_CAPABILITIES;
typedef struct $436EEAB87169589F8FF54A3E6B966B58 KSWAVE_VOLUME;
typedef struct _KSYSTEM_TIME KSYSTEM_TIME;
typedef enum $27AD37380C8900BF8828E9942DAD6F74 KS_AMPixAspectRatio;
typedef struct tagKS_AMVPDATAINFO KS_AMVPDATAINFO;
typedef struct tagKS_AMVPDIMINFO KS_AMVPDIMINFO;
typedef struct tagKS_AMVPSIZE KS_AMVPSIZE;
typedef enum $B8842F298E38803458C077776FB4B251 KS_AMVP_MODE;
typedef enum $0C48B1A02A365DA9EEBAB619832376BC KS_AMVP_SELECTFORMATBY;
typedef struct $D63E714A239F9C0D1FE2D222C2E0E7D5 KS_AM_ExactRateChange;
typedef LONG KS_AM_MaxFullDataRate;
typedef enum $3F0E1F32807E838958D0814D130CFE59 KS_AM_PROPERTY_TS_RATE_CHANGE;
typedef struct $3A744348A6C9F73853F568E19FD6B4F7 KS_AM_SimpleRateChange;
typedef DWORD KS_AM_Step;
typedef struct tagKS_AnalogVideoInfo KS_ANALOGVIDEOINFO;
typedef enum $658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideoStandard;
typedef struct tagKS_BDA_FRAME_INFO KS_BDA_FRAME_INFO;
typedef struct tagKS_BITMAPINFOHEADER KS_BITMAPINFOHEADER;
typedef struct _KS_COLCON KS_COLCON;
typedef struct $3990AA19D6F3231E9709B3F98F437D89 KS_COMPRESSION;
typedef struct _KS_COPY_MACROVISION KS_COPY_MACROVISION;
typedef enum $AB84C8955069406F80CB719201B159DD KS_COPY_MACROVISION_LEVEL;
typedef enum $46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps;
typedef struct tagKS_DATAFORMAT_DV_AVC KS_DATAFORMAT_DV_AVC;
typedef struct tagKS_DATAFORMAT_MPEG2TS_AVC KS_DATAFORMAT_MPEG2TS_AVC;
typedef struct tagKS_DATAFORMAT_VBIINFOHEADER KS_DATAFORMAT_VBIINFOHEADER;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER KS_DATAFORMAT_VIDEOINFOHEADER;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER2 KS_DATAFORMAT_VIDEOINFOHEADER2;
typedef struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE KS_DATAFORMAT_VIDEOINFO_PALETTE;
typedef struct tagKS_DATARANGE_ANALOGVIDEO KS_DATARANGE_ANALOGVIDEO;
typedef struct tagKS_DATARANGE_BDA_ANTENNA KS_DATARANGE_BDA_ANTENNA;
typedef struct tagKS_DATARANGE_BDA_TRANSPORT KS_DATARANGE_BDA_TRANSPORT;
typedef struct tagKS_DATARANGE_DVVIDEO KS_DATARANGE_DVVIDEO;
typedef struct tagKS_DATARANGE_DV_AVC KS_DATARANGE_DV_AVC;
typedef struct tagKS_DATARANGE_MPEG1_VIDEO KS_DATARANGE_MPEG1_VIDEO;
typedef struct tagKS_DATARANGE_MPEG2TS_AVC KS_DATARANGE_MPEG2TS_AVC;
typedef struct tagKS_DATARANGE_MPEG2_VIDEO KS_DATARANGE_MPEG2_VIDEO;
typedef struct tagKS_DATARANGE_VIDEO KS_DATARANGE_VIDEO;
typedef struct tagKS_DATARANGE_VIDEO2 KS_DATARANGE_VIDEO2;
typedef struct tagKS_DATARANGE_VIDEO_PALETTE KS_DATARANGE_VIDEO_PALETTE;
typedef struct tagKS_DATARANGE_VIDEO_VBI KS_DATARANGE_VIDEO_VBI;
typedef enum $A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE;
typedef struct _KS_DVDCOPY_BUSKEY KS_DVDCOPY_BUSKEY;
typedef struct _KS_DVDCOPY_CHLGKEY KS_DVDCOPY_CHLGKEY;
typedef struct _KS_DVDCOPY_DISCKEY KS_DVDCOPY_DISCKEY;
typedef struct _KS_DVDCOPY_REGION KS_DVDCOPY_REGION;
typedef struct _KS_DVDCOPY_SET_COPY_STATE KS_DVDCOPY_SET_COPY_STATE;
typedef struct _KS_DVDCOPY_TITLEKEY KS_DVDCOPY_TITLEKEY;
typedef struct _KS_DVD_YCrCb KS_DVD_YCrCb;
typedef struct _KS_DVD_YUV KS_DVD_YUV;
typedef struct tagKS_FRAME_INFO KS_FRAME_INFO;
typedef struct $EEDA301819F8EA8D15C0ADB3D7583498 KS_FRAMING_ITEM;
typedef struct $B62AAB724E8D7D841EB663A6FEE96A5E KS_FRAMING_RANGE;
typedef struct $98D21277AAAA3049664E864EBED0B60A KS_FRAMING_RANGE_WEIGHTED;
typedef struct tagKS_MPEG1VIDEOINFO KS_MPEG1VIDEOINFO;
typedef enum $4B933B38561F3202E8B681F2D4CA4B1B KS_MPEG2Level;
typedef enum $0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile;
typedef struct tagKS_MPEAUDIOINFO KS_MPEGAUDIOINFO;
typedef struct tagKS_MPEGVIDEOINFO2 KS_MPEGVIDEOINFO2;
typedef enum $8E304CD910907B07F66BA6A3540081CA KS_PhysicalConnectorType;
typedef struct tagKS_RGBQUAD KS_RGBQUAD;
typedef enum $32421077C2010E274338AC2C523E1512 KS_SEEKING_CAPABILITIES;
typedef enum $6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_FLAGS;
typedef struct tag_KS_TRUECOLORINFO KS_TRUECOLORINFO;
typedef enum $A1E89C657E90049EA789DE2B75FA4D0B KS_TUNER_STRATEGY;
typedef enum $219D11F677061808D19E166038DCDF6D KS_TUNER_TUNING_FLAGS;
typedef struct tagKS_TVTUNER_CHANGE_INFO KS_TVTUNER_CHANGE_INFO;
typedef struct tagKS_VBIINFOHEADER KS_VBIINFOHEADER;
typedef struct tagKS_VBI_FRAME_INFO KS_VBI_FRAME_INFO;
typedef enum $87F25CE704E45E1C4AD5F80E170A75FF KS_VIDEODECODER_FLAGS;
typedef struct tagKS_VIDEOINFO KS_VIDEOINFO;
typedef struct tagKS_VIDEOINFOHEADER KS_VIDEOINFOHEADER;
typedef struct tagKS_VIDEOINFOHEADER2 KS_VIDEOINFOHEADER2;
typedef struct _KS_VIDEO_STREAM_CONFIG_CAPS KS_VIDEO_STREAM_CONFIG_CAPS;
typedef enum $DAFE30771B95F95613600355B79694C1 KS_VideoControlFlags;
typedef struct _KTIMER KTIMER;
typedef struct _KWAIT_BLOCK KWAIT_BLOCK;
typedef enum _KWAIT_REASON KWAIT_REASON;
typedef NTSTATUS (__stdcall *KoCreateObjectHandler)(const IID *const ClassId, IUnknown *UnkOuter, const IID *const InterfaceId, PVOID *Interface);
typedef USHORT LANGID;
typedef union _LARGE_INTEGER LARGE_INTEGER;
typedef enum $C9C41CE7F7AB140BE1C872069B92FC11 LATENCY_TIME;
typedef ULONG LCID;
typedef struct _LEGACY_BUS_INFORMATION LEGACY_BUS_INFORMATION;
typedef struct _LIST_ENTRY LIST_ENTRY;
struct LIST_ENTRY32 {ULONG Flink;ULONG Blink;};
struct LIST_ENTRY64 {ULONGLONG Flink;ULONGLONG Blink;};
typedef HANDLE LOCALHANDLE;
typedef enum _LOCK_OPERATION LOCK_OPERATION;
typedef ULONG LOGICAL;
typedef int LONG;
typedef signed int LONG32;
typedef __int64 LONG64;
typedef __int64 LONGLONG;
typedef int LONG_PTR;
typedef struct $A352DA0F15C73F1F5EAA2E36AD3C4FF0 LOOPEDSTREAMING_POSITION_EVENT_DATA;
typedef ADPCMCOEFSET *LPADPCMCOEFSET;
typedef ADPCMEWAVEFORMAT *LPADPCMEWAVEFORMAT;
typedef ADPCMWAVEFORMAT *LPADPCMWAVEFORMAT;
typedef APTXWAVEFORMAT *LPAPTXWAVEFORMAT;
typedef LONG_PTR LPARAM;
typedef AUDIOFILE_AF10WAVEFORMAT *LPAUDIOFILE_AF10WAVEFORMAT;
typedef AUDIOFILE_AF36WAVEFORMAT *LPAUDIOFILE_AF36WAVEFORMAT;
typedef BOOL *LPBOOL;
typedef BYTE *LPBYTE;
typedef const CHAR *LPCCH;
typedef const GUID *LPCGUID;
typedef CHAR *LPCH;
typedef CLSID *LPCLSID;
typedef DWORD *LPCOLORREF;
typedef CONTRESCR10WAVEFORMAT *LPCONTRESCR10WAVEFORMAT;
typedef CONTRESVQLPCWAVEFORMAT *LPCONTRESVQLPCWAVEFORMAT;
typedef CREATIVEADPCMWAVEFORMAT *LPCREATIVEADPCMWAVEFORMAT;
typedef CREATIVEFASTSPEECH10WAVEFORMAT *LPCREATIVEFASTSPEECH10WAVEFORMAT;
typedef CREATIVEFASTSPEECH8WAVEFORMAT *LPCREATIVEFASTSPEECH8WAVEFORMAT;
typedef const RECT *LPCRECT;
typedef const RECTL *LPCRECTL;
typedef CSIMAADPCMWAVEFORMAT *LPCSIMAADPCMWAVEFORMAT;
typedef const CHAR *LPCSTR;
typedef LPCSTR LPCTSTR;
typedef LPCSTR LPCUTSTR;
typedef const WCHAR *LPCUWSTR;
typedef const void *LPCVOID;
typedef const WCHAR *LPCWCH;
typedef const WCHAR *LPCWSTR;
typedef struct _DDPIXELFORMAT *LPDDPIXELFORMAT;
typedef struct _DDVIDEOPORTCONNECT *LPDDVIDEOPORTCONNECT;
typedef DIALOGICOKIADPCMWAVEFORMAT *LPDIALOGICOKIADPCMWAVEFORMAT;
typedef DIGIADPCMWAVEFORMAT *LPDIGIADPCMWAVEFORMAT;
typedef DIGIFIXWAVEFORMAT *LPDIGIFIXWAVEFORMAT;
typedef DIGIREALWAVEFORMAT *LPDIGIREALWAVEFORMAT;
typedef DIGISTDWAVEFORMAT *LPDIGISTDWAVEFORMAT;
typedef DRMWAVEFORMAT *LPDRMWAVEFORMAT;
typedef DVIADPCMWAVEFORMAT *LPDVIADPCMWAVEFORMAT;
typedef DWORD *LPDWORD;
typedef ECHOSC1WAVEFORMAT *LPECHOSC1WAVEFORMAT;
typedef ECHOWAVEFILTER *LPECHOWAVEFILTER;
typedef struct _FILETIME *LPFILETIME;
typedef FMTID *LPFMTID;
typedef FMTOWNS_SND_WAVEFORMAT *LPFMTOWNS_SND_WAVEFORMAT;
typedef G721_ADPCMWAVEFORMAT *LPG721_ADPCMWAVEFORMAT;
typedef G723_ADPCMWAVEFORMAT *LPG723_ADPCMWAVEFORMAT;
typedef GSM610WAVEFORMAT *LPGSM610WAVEFORMAT;
typedef GUID *LPGUID;
typedef HANDLE *LPHANDLE;
typedef IID *LPIID;
typedef IMAADPCMWAVEFORMAT *LPIMAADPCMWAVEFORMAT;
typedef int *LPINT;
typedef int *LPLONG;
typedef MEDIASPACEADPCMWAVEFORMAT *LPMEDIASPACEADPCMWAVEFORMAT;
typedef MPEG1WAVEFORMAT *LPMPEG1WAVEFORMAT;
typedef MPEGLAYER3WAVEFORMAT *LPMPEGLAYER3WAVEFORMAT;
typedef NMS_VBXADPCMWAVEFORMAT *LPNMS_VBXADPCMWAVEFORMAT;
typedef OLIADPCMWAVEFORMAT *LPOLIADPCMWAVEFORMAT;
typedef OLICELPWAVEFORMAT *LPOLICELPWAVEFORMAT;
typedef OLIGSMWAVEFORMAT *LPOLIGSMWAVEFORMAT;
typedef OLIOPRWAVEFORMAT *LPOLIOPRWAVEFORMAT;
typedef OLISBCWAVEFORMAT *LPOLISBCWAVEFORMAT;
typedef PCMWAVEFORMAT *LPPCMWAVEFORMAT;
typedef struct tagPOINT *LPPOINT;
typedef struct tagPOINTS *LPPOINTS;
typedef struct tagRECT *LPRECT;
typedef struct _RECTL *LPRECTL;
typedef SIERRAADPCMWAVEFORMAT *LPSIERRAADPCMWAVEFORMAT;
typedef struct tagSIZE *LPSIZE;
typedef SIZE *LPSIZEL;
typedef SONARCWAVEFORMAT *LPSONARCWAVEFORMAT;
typedef CHAR *LPSTR;
typedef LPSTR LPTCH;
typedef TRUESPEECHWAVEFORMAT *LPTRUESPEECHWAVEFORMAT;
typedef LPSTR LPTSTR;
typedef LPSTR LPUTSTR;
typedef WCHAR *LPUWSTR;
typedef void *LPVOID;
typedef VOLUMEWAVEFILTER *LPVOLUMEWAVEFILTER;
typedef WAVEFILTER *LPWAVEFILTER;
typedef WAVEFORMAT *LPWAVEFORMAT;
typedef WAVEFORMATEX *LPWAVEFORMATEX;
typedef WAVEFORMATIEEEFLOATEX *LPWAVEFORMATIEEEFLOATEX;
typedef WAVEFORMATPCMEX *LPWAVEFORMATPCMEX;
typedef WCHAR *LPWCH;
typedef WORD *LPWORD;
typedef WCHAR *LPWSTR;
typedef YAMAHA_ADPCMWAVEFORMAT *LPYAMAHA_ADPCMWAVEFORMAT;
typedef LONG_PTR LRESULT;
typedef struct _LUID LUID;
typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];
enum MACRO_ACCESS {ACCESS_SYSTEM_SECURITY = 0x1000000,};
enum MACRO_ACCESS_FLAGS {ACCESS_FLAGS_TYPE_READ = 1,ACCESS_FLAGS_TYPE_WRITE = 2,ACCESS_FLAGS_TYPE_LOCK = 4,ACCESS_FLAGS_TYPE_BROADCAST = 8,};
enum MACRO_ACL {ACL_REVISION = 2,ACL_REVISION_DS = 4,ACL_REVISION1 = 1,ACL_REVISION2 = 2,ACL_REVISION3 = 3,ACL_REVISION4 = 4,};
enum MACRO_ACM {ACM_MPEG_LAYER1 = 0x1,ACM_MPEG_LAYER2 = 0x2,ACM_MPEG_LAYER3 = 0x4,ACM_MPEG_STEREO = 0x1,ACM_MPEG_JOINTSTEREO = 0x2,ACM_MPEG_DUALCHANNEL = 0x4,ACM_MPEG_SINGLECHANNEL = 0x8,ACM_MPEG_PRIVATEBIT = 0x1,ACM_MPEG_COPYRIGHT = 0x2,ACM_MPEG_ORIGINALHOME = 0x4,ACM_MPEG_PROTECTIONBIT = 0x8,ACM_MPEG_ID_MPEG1 = 0x10,};
enum MACRO_ACODE {ACODE_RESERVED_0 = 0,ACODE_ACK_COMPLETE = 1,ACODE_ACK_PENDING = 2,ACODE_RESERVED_3 = 3,ACODE_ACK_BUSY_X = 4,ACODE_ACK_BUSY_A = 5,ACODE_ACK_BUSY_B = 6,ACODE_RESERVED_7 = 7,ACODE_RESERVED_8 = 8,ACODE_RESERVED_9 = 9,ACODE_RESERVED_10 = 10,ACODE_RESERVED_11 = 11,ACODE_RESERVED_12 = 12,ACODE_ACK_DATA_ERROR = 13,ACODE_ACK_TYPE_ERROR = 14,ACODE_RESERVED_15 = 15,ACODE_STATUS_MASK = -1072562064,};
enum MACRO_ACPI {ACPI_DRIVER_INTERNAL = 0xA3,};
enum MACRO_ACPI_BIOS {ACPI_BIOS_ERROR = 0xA5,FP_EMULATION_ERROR = 0xA6,};
enum MACRO_ACPI_BIOS_FATAL {ACPI_BIOS_FATAL_ERROR = 0xE0,};
enum MACRO_ACPI_EVAL {ACPI_EVAL_INPUT_BUFFER_SIGNATURE = 1114203457,ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_SIGNATURE = 1231643969,ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_SIGNATURE = 1399416129,ACPI_EVAL_INPUT_BUFFER_COMPLEX_SIGNATURE = 1130980673,ACPI_EVAL_OUTPUT_BUFFER_SIGNATURE = 1114596673,ACPI_METHOD_ARGUMENT_INTEGER = 0,ACPI_METHOD_ARGUMENT_STRING = 1,ACPI_METHOD_ARGUMENT_BUFFER = 2,ACPI_METHOD_ARGUMENT_PACKAGE = 3,ACPI_ACQUIRE_GLOBAL_LOCK_SIGNATURE = 1281843521,ACPI_RELEASE_GLOBAL_LOCK_SIGNATURE = 1281847873,};
enum MACRO_ACPI_OPREGION {ACPI_OPREGION_ACCESS_AS_RAW = 0x1,ACPI_OPREGION_ACCESS_AS_COOKED = 0x2,ACPI_OPREGION_REGION_SPACE_MEMORY = 0x0,ACPI_OPREGION_REGION_SPACE_IO = 0x1,ACPI_OPREGION_REGION_SPACE_PCI_CONFIG = 0x2,ACPI_OPREGION_REGION_SPACE_EC = 0x3,ACPI_OPREGION_REGION_SPACE_SMB = 0x4,ACPI_OPREGION_REGION_SPACE_CMOS_CONFIG = 0x5,ACPI_OPREGION_REGION_SPACE_PCIBARTARGET = 0x6,ACPI_OPREGION_READ = 0x0,ACPI_OPREGION_WRITE = 0x1,ACPI_OPREGION_ACCESS_AT_HIGH_LEVEL = 0x1,};
enum MACRO_ACTIVE {ACTIVE_EX_WORKER_THREAD_TERMINATION = 0xE9,};
enum MACRO_ADDRESS {ADDRESS_TAG_BIT = 0x80000000,};
enum MACRO_AEC {AEC_STATUS_FD_HISTORY_UNINITIALIZED = 0x0,AEC_STATUS_FD_HISTORY_CONTINUOUSLY_CONVERGED = 0x1,AEC_STATUS_FD_HISTORY_PREVIOUSLY_DIVERGED = 0x2,AEC_STATUS_FD_CURRENTLY_CONVERGED = 0x8,AEC_MODE_PASS_THROUGH = 0x0,AEC_MODE_HALF_DUPLEX = 0x1,AEC_MODE_FULL_DUPLEX = 0x2,};
enum MACRO_ALLOC {ALLOC_PRAGMA = 1,ALLOC_DATA_PRAGMA = 1,};
enum MACRO_ALLOCATE {ALLOCATE_ADDRESS_FLAGS_USE_BIG_ENDIAN = 1,ALLOCATE_ADDRESS_FLAGS_USE_COMMON_BUFFER = 2,};
enum MACRO_ALLOW {ALLOW_PERFORMANCE_HIT_IN_Allow_ID = 1,};
enum MACRO_ANY {ANY_SIZE_ARRAY = 1,};
enum MACRO_ANYSIZE {ANYSIZE_ARRAY = 1,};
enum MACRO_APC {APC_INDEX_MISMATCH = 0x1,};
enum MACRO_APPLICATION {APPLICATION_ERROR_MASK = 0x20000000,};
enum MACRO_ASYNC {ASYNC_PAYLOAD_100_RATE = 512,ASYNC_PAYLOAD_200_RATE = 1024,ASYNC_PAYLOAD_400_RATE = 2048,};
enum MACRO_ASYNC_FLAGS {ASYNC_FLAGS_NONINCREMENTING = 0x1,ASYNC_FLAGS_PARTIAL_REQUEST = 0x80000000,ASYNC_FLAGS_NO_STATUS = 0x2,ASYNC_FLAGS_PING = 0x4,ASYNC_FLAGS_BROADCAST = 0x8,};
enum MACRO_ATDISK {ATDISK_DRIVER_INTERNAL = 0x42,};
enum MACRO_ATTEMPTED {ATTEMPTED_SWITCH_FROM_DPC = 0xB8,};
enum MACRO_ATTEMPTED_EXECUTE {ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY = 0xFC,};
enum MACRO_ATTEMPTED_WRITE {ATTEMPTED_WRITE_TO_READONLY_MEMORY = 0xBE,};
enum MACRO_AV {AV_HOST_DMA_DOUBLE_BUFFERING_ENABLED = 0x1,};
enum MACRO_AVC {AVC_SUBUNITINFO_BYTES = 32,};
enum MACRO_AVCCONNECTINFO {AVCCONNECTINFO_MAX_SUBUNITADDR_LEN = 32,};
enum MACRO_AVCSTRM {AVCSTRM_FORMAT_OPTION_STRIP_SPH = 0x1,};
enum MACRO_AVC_DEVICE {AVC_DEVICE_TAPE_REC = 0x20,AVC_DEVICE_CAMERA = 0x38,AVC_DEVICE_TUNER = 0x28,};
enum MACRO_AVC_SUBUNIT {AVC_SUBUNIT_ADDR_PERSISTENT = 0x1,AVC_SUBUNIT_ADDR_TRIGGERBUSRESET = 0x2,};
enum MACRO_AVIIF {AVIIF_CONTROLFRAME = 0x200,};
enum MACRO_AllowPerformanceHit {AllowPerformanceHit = 1,};
enum MACRO_BAD {BAD_POOL_HEADER = 0x19,};
enum MACRO_BAD_EXHANDLE {BAD_EXHANDLE = 0xA7,};
enum MACRO_BAD_POOL {BAD_POOL_CALLER = 0xC2,};
enum MACRO_BAD_SYSTEM {BAD_SYSTEM_CONFIG_INFO = 0x74,};
enum MACRO_BAY {BAY_STATE_EMPTY = 0x0,BAY_STATE_DEVICE_INSERTED = 0x1,BAY_STATE_DEVICE_ENABLED = 0x2,BAY_STATE_DEVICE_REMOVAL_REQUESTED = 0x3,BAY_STATE_DEVICE_REMOVAL_ALLOWED = 0x4,};
enum MACRO_BDA {BDA_FREQUENCY_NOT_SET = -1,BDA_FREQUENCY_NOT_DEFINED = 0,BDA_RANGE_NOT_SET = -1,BDA_RANGE_NOT_DEFINED = 0,BDA_CHAN_BANDWITH_NOT_SET = -1,BDA_CHAN_BANDWITH_NOT_DEFINED = 0,BDA_FREQUENCY_MULTIPLIER_NOT_SET = -1,BDA_FREQUENCY_MULTIPLIER_NOT_DEFINED = 0,};
enum MACRO_BI {BI_BITFIELDS = 3,};
enum MACRO_BLOCK {BLOCK_PERIOD_2997 = 133466800,BLOCK_PERIOD_25 = 133333333,};
enum MACRO_BMREQUEST {BMREQUEST_HOST_TO_DEVICE = 0,BMREQUEST_DEVICE_TO_HOST = 1,BMREQUEST_STANDARD = 0,BMREQUEST_CLASS = 1,BMREQUEST_VENDOR = 2,BMREQUEST_TO_DEVICE = 0,BMREQUEST_TO_INTERFACE = 1,BMREQUEST_TO_ENDPOINT = 2,BMREQUEST_TO_OTHER = 3,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_BOOTING {BOOTING_IN_SAFEMODE_MINIMAL = 0xA8,BOOTING_IN_SAFEMODE_NETWORK = 0xA9,BOOTING_IN_SAFEMODE_DSREPAIR = 0xAA,};
enum MACRO_BOOTLOG {BOOTLOG_LOADED = 0xB5,BOOTLOG_NOT_LOADED = 0xB6,BOOTLOG_ENABLED = 0xB7,};
enum MACRO_BOUND {BOUND_IMAGE_UNSUPPORTED = 0x97,};
enum MACRO_BUFSIZ {BUFSIZ = 512,};
enum MACRO_BUGCHECK {BUGCHECK_MESSAGE_INTRO = 0x4000007F,};
enum MACRO_BUGCHECK_TECH {BUGCHECK_TECH_INFO = 0x40000083,};
enum MACRO_BUGCODE {BUGCODE_ID_DRIVER = 0x40000080,};
enum MACRO_BUGCODE_NDIS {BUGCODE_NDIS_DRIVER = 0x7C,};
enum MACRO_BUGCODE_PSS {BUGCODE_PSS_MESSAGE = 0x40000082,};
enum MACRO_BUGCODE_PSS_CRASH {BUGCODE_PSS_CRASH_INIT = 0x4000008B,BUGCODE_PSS_CRASH_PROGRESS = 0x4000008C,BUGCODE_PSS_CRASH_DONE = 0x4000008D,};
enum MACRO_BUGCODE_PSS_MESSAGE {BUGCODE_PSS_MESSAGE_SIGNATURE = 0xC3,};
enum MACRO_BUGCODE_USB {BUGCODE_USB_DRIVER = 0xFE,};
enum MACRO_BUS {BUS_RESET_FLAGS_PERFORM_RESET = 1,BUS_RESET_FLAGS_FORCE_ROOT = 2,BUS_RESET_BEGINNING = 1,BUS_RESET_FINISHED = 2,BUS_RESET_LOCAL_NODE_IS_ROOT = 4,BUS_RESET_LOCAL_NODE_IS_ISOCH_MANAGER = 8,BUS_RESET_LOCAL_NODE_IS_BUS_MANAGER = 16,BUS_RESET_SELFID_ENUMERATION_ERROR = 32,BUS_RESET_STORM_ERROR = 64,BUS_RESET_ABSENT_ON_POWER_UP = 128,};
enum MACRO_BUS1394 {BUS1394_CURRENT_DDI_VERSION = 2,};
enum MACRO_BUS_ERROR {DATA_BUS_ERROR = 0x2E,INSTRUCTION_BUS_ERROR = 0x2F,};
enum MACRO_BUS_INTERFACE {BUS_INTERFACE_REFERENCE_VERSION = 0x100,};
enum MACRO_BUS_RESPONSE {BUS_RESPONSE_IS_RAW = 1,};
enum MACRO_BW_UNITS_PER_QUADLET {S100_BW_UNITS_PER_QUADLET = 19,S200_BW_UNITS_PER_QUADLET = 9,S400_BW_UNITS_PER_QUADLET = 4,S800_BW_UNITS_PER_QUADLET = 2,S1600_BW_UNITS_PER_QUADLET = 1,};
enum MACRO_C {C_DEVICE_STATUS_CHANGE = 9,C_REMOVE_REQUEST = 10,};
enum MACRO_CACHE {CACHE_MANAGER = 0x34,};
enum MACRO_CANCEL {CANCEL_STATE_IN_COMPLETED_IRP = 0x48,};
enum MACRO_CANNOT {CANNOT_WRITE_CONFIGURATION = 0x75,};
enum MACRO_CC {CC_MAX_HW_DECODE_LINES = 12,};
enum MACRO_CHIPSET {CHIPSET_DETECTED_ERROR = 0xB9,};
enum MACRO_CID {CID_HANDLE_CREATION = 0x16,CID_HANDLE_DELETION = 0x17,};
enum MACRO_CIP {CIP_VALIDATE_FIRST_SOURCE = 0x1,CIP_VALIDATE_ALL_SOURCE = 0x2,CIP_STRIP_SOURCE_HEADER = 0x4,CIP_USE_SOURCE_HEADER_TIMESTAMP = 0x8,CIP_DV_STYLE_SYT = 0x10,CIP_AUDIO_STYLE_SYT = 0x20,CIP_RESET_FRAME_ON_DISCONTINUITY = 0x40,CIP_STATUS_SUCCESS = 0x0,CIP_STATUS_CORRUPT_FRAME = 0x1,CIP_STATUS_FIRST_FRAME = 0x2,CIP_TALK_USE_SPH_TIMESTAMP = 0x1,CIP_TALK_DOUBLE_BUFFER = 0x2,};
enum MACRO_CIP_HDR {CIP_HDR_FMT_MASK = 0x3F,CIP_HDR_FMT_DVCR = 0x80,CIP_HDR_FMT_MPEG = 0xA0,CIP_HDR_FDF0_50_60_MASK = 0x80,CIP_HDR_FDF0_50_60_PAL = 0x80,CIP_HDR_FDF0_50_60_NTSC = 0x0,CIP_HDR_FDF0_STYPE_MASK = 0x7C,CIP_HDR_FDF0_STYPE_SD_DVCR = 0x0,CIP_HDR_FDF0_STYPE_SDL_DVCR = 0x4,CIP_HDR_FDF0_STYPE_HD_DVCR = 0x8,CIP_HDR_FDF0_STYPE_SD_DVCPRO = 0x78,CIP_SPH_DV = 0x0,CIP_SPH_MPEG = 0x1,CIP_FN_DV = 0x0,CIP_FN_MPEG = 0x3,CIP_QPC_DV = 0x0,CIP_QPC_MPEG = 0x0,CIP_DBS_SDDV = 0x78,CIP_DBS_HDDV = 0xF0,CIP_DBS_SDLDV = 0x3C,CIP_DBS_MPEG = 0x6,CIP_FMT_DV = 0x0,CIP_FMT_MPEG = 0x20,CIP_60_FIELDS = 0x0,CIP_50_FIELDS = 0x1,CIP_TSF_ON = 0x1,CIP_TSF_OFF = 0x0,CIP_STYPE_DV = 0x0,CIP_STYPE_DVCPRO = 0x1E,};
enum MACRO_CLOCK {CLOCK_SUPPORT_CAN_SET_ONBOARD_CLOCK = 0x1,CLOCK_SUPPORT_CAN_READ_ONBOARD_CLOCK = 0x2,CLOCK_SUPPORT_CAN_RETURN_STREAM_TIME = 0x4,};
enum MACRO_CLSCTX {CLSCTX_KERNEL_SERVER = 0x200,};
enum MACRO_CM {CM_RESOURCE_INTERRUPT_LEVEL_SENSITIVE = 0,CM_RESOURCE_INTERRUPT_LATCHED = 1,CM_RESOURCE_MEMORY_READ_WRITE = 0,CM_RESOURCE_MEMORY_READ_ONLY = 1,CM_RESOURCE_MEMORY_WRITE_ONLY = 2,CM_RESOURCE_MEMORY_PREFETCHABLE = 4,CM_RESOURCE_MEMORY_COMBINEDWRITE = 8,CM_RESOURCE_MEMORY_24 = 16,CM_RESOURCE_MEMORY_CACHEABLE = 32,CM_RESOURCE_PORT_MEMORY = 0,CM_RESOURCE_PORT_IO = 1,CM_RESOURCE_PORT_10_BIT_DECODE = 4,CM_RESOURCE_PORT_12_BIT_DECODE = 8,CM_RESOURCE_PORT_16_BIT_DECODE = 16,CM_RESOURCE_PORT_POSITIVE_DECODE = 32,CM_RESOURCE_PORT_PASSIVE_DECODE = 64,CM_RESOURCE_PORT_WINDOW_DECODE = 128,CM_RESOURCE_DMA_8 = 0,CM_RESOURCE_DMA_16 = 1,CM_RESOURCE_DMA_32 = 2,CM_RESOURCE_DMA_8_AND_16 = 4,CM_RESOURCE_DMA_BUS_MASTER = 8,CM_RESOURCE_DMA_TYPE_A = 16,CM_RESOURCE_DMA_TYPE_B = 32,CM_RESOURCE_DMA_TYPE_F = 64,};
enum MACRO_CMP {CMP_PLUG_STATE_IDLE = 0,CMP_PLUG_STATE_READY = 1,CMP_PLUG_STATE_SUSPENDED = 2,CMP_PLUG_STATE_ACTIVE = 3,CMP_SPEED_S100 = 0,CMP_SPEED_S200 = 1,CMP_SPEED_S400 = 2,};
enum MACRO_CMP_ADDRESS {CMP_ADDRESS_TYPE_GLOBAL = 0x1,CMP_ADDRESS_TYPE_EXCLUSIVE = 0x2,};
enum MACRO_CNSS {CNSS_FILE_SYSTEM_FILTER = 0xA4,};
enum MACRO_COHERENCY_EXCEPTION {DATA_COHERENCY_EXCEPTION = 0x55,INSTRUCTION_COHERENCY_EXCEPTION = 0x56,};
enum MACRO_CONFIG {CONFIG_ROM_KEY_MASK = 0xFF,CONFIG_ROM_OFFSET_MASK = 0xFFFFFF00,};
enum MACRO_CONFIG_ROM {CONFIG_ROM_SIGNATURE = 0x31333934,};
enum MACRO_CORRUPT {CORRUPT_ACCESS_TOKEN = 0x28,};
enum MACRO_CREATE {CREATE_DELETE_LOCK_NOT_LOCKED = 0x14,};
enum MACRO_CRITICAL {CRITICAL_PROCESS_DIED = 0xEF,};
enum MACRO_CRITICAL_OBJECT {CRITICAL_OBJECT_TERMINATION = 0xF4,};
enum MACRO_CRYSTAL {CRYSTAL_NET_SFM_CODEC = 1,};
enum MACRO_CURRENT {CURRENT_61883_DDI_VERSION = 0x2,};
enum MACRO_CURRENT_AVCSTRM {CURRENT_AVCSTRM_DDI_VERSION = 825578574,};
enum MACRO_ClassInformation_DeviceId_ID {MSMouse_ClassInformation_DeviceId_ID = 1,MSKeyboard_ClassInformation_DeviceId_ID = 1,AGP_STD_DATA_ApertureBase_ID = 1,AGP_STD_DATA_ApertureLength_ID = 2,AGP_STD_DATA_AgpStatus_ID = 3,AGP_STD_DATA_AgpCommand_ID = 4,MSAcpi_ThermalZoneTemperature_ThermalStamp_ID = 1,MSAcpi_ThermalZoneTemperature_ThermalConstant1_ID = 2,MSAcpi_ThermalZoneTemperature_ThermalConstant2_ID = 3,MSAcpi_ThermalZoneTemperature_Reserved_ID = 4,MSAcpi_ThermalZoneTemperature_SamplingPeriod_ID = 5,MSAcpi_ThermalZoneTemperature_CurrentTemperature_ID = 6,MSAcpi_ThermalZoneTemperature_PassiveTripPoint_ID = 7,MSAcpi_ThermalZoneTemperature_CriticalTripPoint_ID = 8,MSAcpi_ThermalZoneTemperature_ActiveTripPointCount_ID = 9,MSAcpi_ThermalZoneTemperature_ActiveTripPoint_ID = 10,WMI_DISK_GEOMETRY_Cylinders_ID = 1,WMI_DISK_GEOMETRY_MediaType_ID = 2,WMI_DISK_GEOMETRY_TracksPerCylinder_ID = 3,WMI_DISK_GEOMETRY_SectorsPerTrack_ID = 4,WMI_DISK_GEOMETRY_BytesPerSector_ID = 5,WMI_DISK_PERFORMANCE_BytesRead_ID = 1,WMI_DISK_PERFORMANCE_BytesWritten_ID = 2,WMI_DISK_PERFORMANCE_ReadTime_ID = 3,WMI_DISK_PERFORMANCE_WriteTime_ID = 4,WMI_DISK_PERFORMANCE_IdleTime_ID = 5,WMI_DISK_PERFORMANCE_ReadCount_ID = 6,WMI_DISK_PERFORMANCE_WriteCount_ID = 7,WMI_DISK_PERFORMANCE_QueueDepth_ID = 8,WMI_DISK_PERFORMANCE_SplitCount_ID = 9,WMI_DISK_PERFORMANCE_QueryTime_ID = 10,WMI_DISK_PERFORMANCE_StorageDeviceNumber_ID = 11,WMI_DISK_PERFORMANCE_StorageManagerName_ID = 12,MSDiskDriver_Performance_PerfData_ID = 1,MSDiskDriver_Performance_DeviceName_ID = 2,STORAGE_FAILURE_PREDICT_STATUS_Reason_ID = 1,STORAGE_FAILURE_PREDICT_STATUS_PredictFailure_ID = 2,STORAGE_FAILURE_PREDICT_DATA_Length_ID = 1,STORAGE_FAILURE_PREDICT_DATA_VendorSpecific_ID = 2,ATAPI_FAILURE_PREDICT_DATA_Length_ID = 1,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific_ID = 2,ATAPI_FAILURE_PREDICT_DATA_OfflineCollectionStatus_ID = 3,ATAPI_FAILURE_PREDICT_DATA_SelfTestStatus_ID = 4,ATAPI_FAILURE_PREDICT_DATA_TotalTime_ID = 5,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific2_ID = 6,ATAPI_FAILURE_PREDICT_DATA_OfflineCollectCapability_ID = 7,ATAPI_FAILURE_PREDICT_DATA_SmartCapability_ID = 8,ATAPI_FAILURE_PREDICT_DATA_ErrorLogCapability_ID = 9,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific3_ID = 10,ATAPI_FAILURE_PREDICT_DATA_ShortPollTimeInMinutes_ID = 11,ATAPI_FAILURE_PREDICT_DATA_ExtendedPollTimeInMinutes_ID = 12,ATAPI_FAILURE_PREDICT_DATA_Reserved_ID = 13,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific4_ID = 14,ATAPI_FAILURE_PREDICT_DATA_Checksum_ID = 15,STORAGE_FAILURE_PREDICT_THRESHOLDS_VendorSpecific_ID = 1,STORAGE_FAILURE_PREDICT_EVENT_Length_ID = 1,STORAGE_FAILURE_PREDICT_EVENT_VendorSpecific_ID = 2,};
enum MACRO_CmResourceTypeBusNumber {CmResourceTypeBusNumber = 6,CmResourceTypeNonArbitrated = 128,};
enum MACRO_CmResourceTypeConfigData {CmResourceTypeConfigData = 128,};
enum MACRO_CmResourceTypeDevicePrivate {CmResourceTypeDevicePrivate = 129,};
enum MACRO_CmResourceTypeDeviceSpecific {CmResourceTypeDeviceSpecific = 5,};
enum MACRO_CmResourceTypeMaximum {CmResourceTypeMaximum = 7,};
enum MACRO_CmResourceTypeMemory {CmResourceTypeMemory = 3,CmResourceTypeDma = 4,};
enum MACRO_CmResourceTypeMfCardConfig {CmResourceTypeMfCardConfig = 131,};
enum MACRO_CmResourceTypeNull {CmResourceTypeNull = 0,CmResourceTypePort = 1,CmResourceTypeInterrupt = 2,};
enum MACRO_CmResourceTypePcCardConfig {CmResourceTypePcCardConfig = 130,};
enum MACRO_DBC {DBC_SUSBSYSTEM_DESCRIPTOR_TYPE = 0x40,DBC_BAY_DESCRIPTOR_TYPE = 0x41,};
enum MACRO_DBCLASS {DBCLASS_VERSION = 0x10000002,};
enum MACRO_DBC_ACPI {DBC_ACPI_CONTROLLER_SIG = 0x49504341,DBC_USB_CONTROLLER_SIG = 0x4253555F,DBC_OEM_FILTER_SIG = 0x464D454F,};
enum MACRO_DBC_IOCTL {DBC_IOCTL_INTERNAL_INDEX = 0x0,};
enum MACRO_DBG {DBG_EXCEPTION_HANDLED = 0x10001,DBG_CONTINUE = 0x10002,};
enum MACRO_DBG_0 {DBG = 0,};
enum MACRO_DBG_EXCEPTION {DBG_EXCEPTION_NOT_HANDLED = 0x80010001,};
enum MACRO_DBG_NO {DBG_NO_STATE_CHANGE = 0xC0010001,DBG_APP_NOT_IDLE = 0xC0010002,};
enum MACRO_DBG_REPLY {DBG_REPLY_LATER = 0x40010001,DBG_UNABLE_TO_PROVIDE_HANDLE = 0x40010002,DBG_TERMINATE_THREAD = 0x40010003,DBG_TERMINATE_PROCESS = 0x40010004,DBG_CONTROL_C = 0x40010005,DBG_PRINTEXCEPTION_C = 0x40010006,DBG_RIPEXCEPTION = 0x40010007,DBG_CONTROL_BREAK = 0x40010008,DBG_COMMAND_EXCEPTION = 0x40010009,};
enum MACRO_DBG_STATUS {DBG_STATUS_CONTROL_C = 1,DBG_STATUS_SYSRQ = 2,DBG_STATUS_BUGCHECK_FIRST = 3,DBG_STATUS_BUGCHECK_SECOND = 4,DBG_STATUS_FATAL = 5,DBG_STATUS_DEBUG_CONTROL = 6,DBG_STATUS_WORKER = 7,};
enum MACRO_DC {DC_FIELDS = 1,DC_PAPERS = 2,DC_PAPERSIZE = 3,DC_MINEXTENT = 4,DC_MAXEXTENT = 5,DC_BINS = 6,DC_DUPLEX = 7,DC_SIZE = 8,DC_EXTRA = 9,DC_VERSION = 10,DC_DRIVER = 11,DC_BINNAMES = 12,DC_ENUMRESOLUTIONS = 13,DC_FILEDEPENDENCIES = 14,DC_TRUETYPE = 15,DC_PAPERNAMES = 16,DC_ORIENTATION = 17,DC_COPIES = 18,};
enum MACRO_DDPF {DDPF_FOURCC = 0x4,};
enum MACRO_DEFAULT {DEFAULT_AVC_TIMEOUT = 1000000,DEFAULT_AVC_RETRIES = 9,};
enum MACRO_DELETE {DELETE = 0x10000,};
enum MACRO_DEREGISTER {DEREGISTER_FCP_NOTIFY = 0x0,REGISTER_FCP_RESPONSE_NOTIFY = 0x1,REGISTER_FCP_REQUEST_NOTIFY = 0x2,REGISTER_BUS_RESET_NOTIFY = 0x1,DEREGISTER_BUS_RESET_NOTIFY = 0x2,};
enum MACRO_DESCRIPTOR {DESCRIPTOR_SYNCH_ON_SY = 0x1,DESCRIPTOR_SYNCH_ON_TAG = 0x2,DESCRIPTOR_SYNCH_ON_TIME = 0x4,DESCRIPTOR_USE_SY_TAG_IN_FIRST = 0x8,DESCRIPTOR_TIME_STAMP_ON_COMPLETION = 0x10,DESCRIPTOR_PRIORITY_TIME_DELIVERY = 0x20,DESCRIPTOR_HEADER_SCATTER_GATHER = 0x40,DESCRIPTOR_SYNCH_ON_ALL_TAGS = 0x80,};
enum MACRO_DESCRIPTOR_INDEX {OS_STRING_DESCRIPTOR_INDEX = 0xEE,MS_GENRE_DESCRIPTOR_INDEX = 0x1,MS_POWER_DESCRIPTOR_INDEX = 0x2,};
enum MACRO_DESCRIPTOR_VERSION : __int64 {KSDEVICE_DESCRIPTOR_VERSION = 0x100,KSFILTER_DESCRIPTOR_VERSION = 0xFFFFFFFF,};
enum MACRO_DEVICE {DEVICE_QUEUE_NOT_BUSY = 0x2,};
enum MACRO_DEVICE_DESCRIPTION {DEVICE_DESCRIPTION_VERSION = 0,DEVICE_DESCRIPTION_VERSION1 = 1,DEVICE_DESCRIPTION_VERSION2 = 2,};
enum MACRO_DEVICE_INTERFACE {DEVICE_INTERFACE_INCLUDE_NONACTIVE = 0x1,};
enum MACRO_DEVICE_REFERENCE {DEVICE_REFERENCE_COUNT_NOT_ZERO = 0x36,};
enum MACRO_DEVICE_STATUS {DEVICE_STATUS_CHANGE_ENABLE = 0,};
enum MACRO_DEVICE_UI {DEVICE_UI_FIRMWARE_REVISION_FirmwareRevision_ID = 1,MSVerifierIrpLogEntry_Count_ID = 1,MSVerifierIrpLogEntry_Major_ID = 2,MSVerifierIrpLogEntry_Minor_ID = 3,MSVerifierIrpLogEntry_Flags_ID = 4,MSVerifierIrpLogEntry_Control_ID = 5,MSVerifierIrpLogEntry_Arg1_ID = 6,MSVerifierIrpLogEntry_Arg2_ID = 7,MSVerifierIrpLogEntry_Arg3_ID = 8,MSVerifierIrpLogEntry_Arg4_ID = 9,MSVerifierIrpLogInformation_DeviceType_ID = 1,MSVerifierIrpLogInformation_EntryCount_ID = 2,MSVerifierIrpLogInformation_Entries_ID = 3,};
enum MACRO_DFS {DFS_FILE_SYSTEM = 0x82,OFS_FILE_SYSTEM = 0x83,};
enum MACRO_DIAGLEVEL {DIAGLEVEL_NONE = 0x0,DIAGLEVEL_IGNORE_OPLUG = 0x1,DIAGLEVEL_IGNORE_IPLUG = 0x2,DIAGLEVEL_SET_CHANNEL_63 = 0x4,DIAGLEVEL_IPCR_IGNORE_FREE = 0x8,DIAGLEVEL_HIDE_OPLUG = 0x10,DIAGLEVEL_IPCR_ALWAYS_ALLOC = 0x20,DIAGLEVEL_SPECIFY_BLOCKSIZE = 0x40,};
enum MACRO_DIRECTORY {DIRECTORY_QUERY = 0x1,DIRECTORY_TRAVERSE = 0x2,DIRECTORY_CREATE_OBJECT = 0x4,DIRECTORY_CREATE_SUBDIRECTORY = 0x8,DIRECTORY_ALL_ACCESS = 0xF000F,};
enum MACRO_DIRTY {DIRTY_MAPPED_PAGES_CONGESTION = 0xEB,};
enum MACRO_DIRTY_NOWRITE {DIRTY_NOWRITE_PAGES_CONGESTION = 0xFD,};
enum MACRO_DISORDERLY {DISORDERLY_SHUTDOWN = 0xF3,};
enum MACRO_DM {DM_UPDATE = 1,DM_COPY = 2,DM_PROMPT = 4,DM_MODIFY = 8,DM_IN_BUFFER = 8,DM_IN_PROMPT = 4,DM_OUT_BUFFER = 2,DM_OUT_DEFAULT = 1,};
enum MACRO_DO {DO_VERIFY_VOLUME = 0x2,DO_BUFFERED_IO = 0x4,DO_EXCLUSIVE = 0x8,DO_DIRECT_IO = 0x10,DO_MAP_IO_BUFFER = 0x20,DO_DEVICE_INITIALIZING = 0x80,DO_SHUTDOWN_REGISTERED = 0x800,DO_BUS_ENUMERATED_DEVICE = 0x1000,DO_POWER_PAGABLE = 0x2000,DO_POWER_INRUSH = 0x4000,};
enum MACRO_DPC {DPC_NORMAL = 0,DPC_THREADED = 1,};
enum MACRO_DPFLTR {DPFLTR_ERROR_LEVEL = 0,DPFLTR_WARNING_LEVEL = 1,DPFLTR_TRACE_LEVEL = 2,DPFLTR_INFO_LEVEL = 3,DPFLTR_MASK = -2147483648,};
enum MACRO_DRB {DRB_FUNCTION_CHANGE_REQUEST = 0x0,DRB_FUNCTION_GET_SUBSYSTEM_DESCRIPTOR = 0x1,DRB_FUNCTION_GET_BAY_DESCRIPTOR = 0x2,DRB_FUNCTION_SET_BAY_FEATURE = 0x3,DRB_FUNCTION_CLEAR_BAY_FEATURE = 0x4,DRB_FUNCTION_GET_BAY_STATUS = 0x5,DRB_FUNCTION_GET_CONTROLLER_STATUS = 0x6,DRB_FUNCTION_START_DEVICE_IN_BAY = 0x7,DRB_FUNCTION_EJECT_DEVICE_IN_BAY = 0x8,DRB_FUNCTION_STOP_DEVICE_IN_BAY = 0x9,};
enum MACRO_DRIVER {DRIVER_POWER_STATE_FAILURE = 0x9F,};
enum MACRO_DRIVER_CORRUPTED {DRIVER_CORRUPTED_MMPOOL = 0xD0,DRIVER_IRQL_NOT_LESS_OR_EQUAL = 0xD1,DRIVER_PORTION_MUST_BE_NONPAGED = 0xD3,};
enum MACRO_DRIVER_CORRUPTED_SYSPTES {DRIVER_CORRUPTED_SYSPTES = 0xDB,DRIVER_INVALID_STACK_ACCESS = 0xDC,};
enum MACRO_DRIVER_INTERNAL {PORT_DRIVER_INTERNAL = 0x2C,SCSI_DISK_DRIVER_INTERNAL = 0x2D,};
enum MACRO_DRIVER_LEFT {DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS = 0xCB,};
enum MACRO_DRIVER_OVERRAN {DRIVER_OVERRAN_STACK_BUFFER = 0xF7,};
enum MACRO_DRIVER_PAGE {DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL = 0xD5,DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION = 0xD6,DRIVER_UNMAPPING_INVALID_VIEW = 0xD7,DRIVER_USED_EXCESSIVE_PTES = 0xD8,};
enum MACRO_DRIVER_RETURNED {DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN = 0xF9,};
enum MACRO_DRIVER_UNLOADED {DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS = 0xCE,};
enum MACRO_DRIVER_VERIFIER {DRIVER_VERIFIER_DETECTED_VIOLATION = 0xC4,DRIVER_CORRUPTED_EXPOOL = 0xC5,DRIVER_CAUGHT_MODIFYING_FREED_POOL = 0xC6,};
enum MACRO_DRIVER_VERIFIER_DMA {DRIVER_VERIFIER_DMA_VIOLATION = 0xE6,};
enum MACRO_DRIVER_VERIFIER_IOMANAGER {DRIVER_VERIFIER_IOMANAGER_VIOLATION = 0xC9,};
enum MACRO_DRVO {DRVO_UNLOAD_INVOKED = 0x1,DRVO_LEGACY_DRIVER = 0x2,DRVO_BUILTIN_DRIVER = 0x4,};
enum MACRO_DUPLICATE {DUPLICATE_CLOSE_SOURCE = 0x1,DUPLICATE_SAME_ACCESS = 0x2,DUPLICATE_SAME_ATTRIBUTES = 0x4,};
enum MACRO_EISA {EISA_FUNCTION_ENABLED = 0x80,EISA_FREE_FORM_DATA = 0x40,EISA_HAS_PORT_INIT_ENTRY = 0x20,EISA_HAS_PORT_RANGE = 0x10,EISA_HAS_DMA_ENTRY = 0x8,EISA_HAS_IRQ_ENTRY = 0x4,EISA_HAS_MEMORY_ENTRY = 0x2,EISA_HAS_TYPE_ENTRY = 0x1,EISA_HAS_INFORMATION = 0x1F,EISA_MORE_ENTRIES = 0x80,EISA_SYSTEM_MEMORY = 0x0,EISA_MEMORY_TYPE_RAM = 0x1,EISA_INVALID_SLOT = 0x80,EISA_INVALID_FUNCTION = 0x81,EISA_INVALID_CONFIGURATION = 0x82,EISA_EMPTY_SLOT = 0x83,EISA_INVALID_BIOS_CALL = 0x86,};
enum MACRO_EMPTY {EMPTY_THREAD_REAPER_LIST = 0x13,};
enum MACRO_EMULATOR {EMULATOR_READ_ACCESS = 0x1,EMULATOR_WRITE_ACCESS = 0x2,};
enum MACRO_ENABLE {ENABLE_VID_POWER = 1,};
enum MACRO_ENABLE_DISABLE {ENABLE_DISABLE_FP_IN_Enable_ID = 1,};
enum MACRO_ENABLE_DISABLE_FP {ENABLE_DISABLE_FP_POLLING_IN_Period_ID = 1,ENABLE_DISABLE_FP_POLLING_IN_Enable_ID = 2,};
enum MACRO_ENABLE_OFFLINE {ENABLE_OFFLINE_DIAGS_OUT_Success_ID = 1,};
enum MACRO_ENABLE_VOP {ENABLE_VOP_POWER = 11,};
enum MACRO_END {END_OF_NT_EVALUATION_PERIOD = 0x98,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_EPT {EPT_NT_INVALID_ENTRY = 0xC0020034,EPT_NT_CANT_PERFORM_OP = 0xC0020035,EPT_NT_NOT_REGISTERED = 0xC0020036,};
enum MACRO_EPT_NT {EPT_NT_CANT_CREATE = 0xC002004C,};
enum MACRO_ERROR {ERROR_SEVERITY_SUCCESS = 0x0,ERROR_SEVERITY_INFORMATIONAL = 0x40000000,ERROR_SEVERITY_WARNING = 0x80000000,ERROR_SEVERITY_ERROR = 0xC0000000,};
enum MACRO_ERROR_LOG {ERROR_LOG_LIMIT_SIZE = 240,};
enum MACRO_ES : __int64 {ES_SYSTEM_REQUIRED = 0x1,ES_DISPLAY_REQUIRED = 0x2,ES_USER_PRESENT = 0x4,ES_CONTINUOUS = 0x80000000,};
enum MACRO_EVENT {EVENT_QUERY_STATE = 0x1,EVENT_MODIFY_STATE = 0x2,EVENT_ALL_ACCESS = 0x1F0003,};
enum MACRO_EXCEPTION {EXCEPTION_EXECUTE_HANDLER = 1,EXCEPTION_CONTINUE_SEARCH = 0,EXCEPTION_CONTINUE_EXECUTION = -1,};
enum MACRO_EXCEPTION_NONCONTINUABLE {EXCEPTION_NONCONTINUABLE = 0x1,EXCEPTION_MAXIMUM_PARAMETERS = 0xF,};
enum MACRO_EXECUTE {EXECUTE_SELF_TEST_IN_Subcommand_ID = 1,EXECUTE_SELF_TEST_OUT_ReturnCode_ID = 2,};
enum MACRO_EXT {EXT_TCODE_RESERVED0 = 0,EXT_TCODE_MASK_SWAP = 1,EXT_TCODE_COMPARE_SWAP = 2,EXT_TCODE_FETCH_ADD = 3,EXT_TCODE_LITTLE_ADD = 4,EXT_TCODE_BOUNDED_ADD = 5,EXT_TCODE_WRAP_ADD = 6,};
enum MACRO_EnableDisableFailurePredictionPolling {EnableDisableFailurePredictionPolling = 3,};
enum MACRO_EnableDisableHardwareFailurePrediction {EnableDisableHardwareFailurePrediction = 2,};
enum MACRO_EnableOfflineDiags {EnableOfflineDiags = 5,};
enum MACRO_ExecuteSelfTest {ExecuteSelfTest = 8,};
enum MACRO_FACILITY {FACILITY_USB_ERROR_CODE = 0x10,FACILITY_TERMINAL_SERVER = 0xA,FACILITY_SXS_ERROR_CODE = 0x15,FACILITY_RPC_STUBS = 0x3,FACILITY_RPC_RUNTIME = 0x2,FACILITY_IO_ERROR_CODE = 0x4,FACILITY_HID_ERROR_CODE = 0x11,FACILITY_FIREWIRE_ERROR_CODE = 0x12,FACILITY_DEBUGGER = 0x1,FACILITY_CLUSTER_ERROR_CODE = 0x13,FACILITY_ACPI_ERROR_CODE = 0x14,};
enum MACRO_FACILITY_MCA {FACILITY_MCA_ERROR_CODE = 0x5,};
enum MACRO_FAILED {CRITICAL_SERVICE_FAILED = 0x5A,SET_ENV_VAR_FAILED = 0x5B,HAL_INITIALIZATION_FAILED = 0x5C,};
enum MACRO_FAILURE {NMI_HARDWARE_FAILURE = 0x80,SPIN_LOCK_INIT_FAILURE = 0x81,};
enum MACRO_FILE {FILE_DEVICE_BEEP = 0x1,FILE_DEVICE_CD_ROM = 0x2,FILE_DEVICE_CD_ROM_FILE_SYSTEM = 0x3,FILE_DEVICE_CONTROLLER = 0x4,FILE_DEVICE_DATALINK = 0x5,FILE_DEVICE_DFS = 0x6,FILE_DEVICE_DISK = 0x7,FILE_DEVICE_DISK_FILE_SYSTEM = 0x8,FILE_DEVICE_FILE_SYSTEM = 0x9,FILE_DEVICE_INPORT_PORT = 0xA,FILE_DEVICE_KEYBOARD = 0xB,FILE_DEVICE_MAILSLOT = 0xC,FILE_DEVICE_MIDI_IN = 0xD,FILE_DEVICE_MIDI_OUT = 0xE,FILE_DEVICE_MOUSE = 0xF,FILE_DEVICE_MULTI_UNC_PROVIDER = 0x10,FILE_DEVICE_NAMED_PIPE = 0x11,FILE_DEVICE_NETWORK = 0x12,FILE_DEVICE_NETWORK_BROWSER = 0x13,FILE_DEVICE_NETWORK_FILE_SYSTEM = 0x14,FILE_DEVICE_NULL = 0x15,FILE_DEVICE_PARALLEL_PORT = 0x16,FILE_DEVICE_PHYSICAL_NETCARD = 0x17,FILE_DEVICE_PRINTER = 0x18,FILE_DEVICE_SCANNER = 0x19,FILE_DEVICE_SERIAL_MOUSE_PORT = 0x1A,FILE_DEVICE_SERIAL_PORT = 0x1B,FILE_DEVICE_SCREEN = 0x1C,FILE_DEVICE_SOUND = 0x1D,FILE_DEVICE_STREAMS = 0x1E,FILE_DEVICE_TAPE = 0x1F,FILE_DEVICE_TAPE_FILE_SYSTEM = 0x20,FILE_DEVICE_TRANSPORT = 0x21,FILE_DEVICE_UNKNOWN = 0x22,FILE_DEVICE_VIDEO = 0x23,FILE_DEVICE_VIRTUAL_DISK = 0x24,FILE_DEVICE_WAVE_IN = 0x25,FILE_DEVICE_WAVE_OUT = 0x26,FILE_DEVICE_8042_PORT = 0x27,FILE_DEVICE_NETWORK_REDIRECTOR = 0x28,FILE_DEVICE_BATTERY = 0x29,FILE_DEVICE_BUS_EXTENDER = 0x2A,FILE_DEVICE_MODEM = 0x2B,FILE_DEVICE_VDM = 0x2C,FILE_DEVICE_MASS_STORAGE = 0x2D,FILE_DEVICE_SMB = 0x2E,FILE_DEVICE_KS = 0x2F,FILE_DEVICE_CHANGER = 0x30,FILE_DEVICE_SMARTCARD = 0x31,FILE_DEVICE_ACPI = 0x32,FILE_DEVICE_DVD = 0x33,FILE_DEVICE_FULLSCREEN_VIDEO = 0x34,FILE_DEVICE_DFS_FILE_SYSTEM = 0x35,FILE_DEVICE_DFS_VOLUME = 0x36,FILE_DEVICE_SERENUM = 0x37,FILE_DEVICE_TERMSRV = 0x38,FILE_DEVICE_KSEC = 0x39,FILE_DEVICE_FIPS = 0x3A,FILE_DEVICE_INFINIBAND = 0x3B,};
enum MACRO_FILENAME {FILENAME_MAX = 260,FOPEN_MAX = 20,};
enum MACRO_FILE_ANY {FILE_ANY_ACCESS = 0,FILE_SPECIAL_ACCESS = 0,FILE_READ_ACCESS = 1,FILE_WRITE_ACCESS = 2,FILE_READ_DATA = 1,FILE_LIST_DIRECTORY = 1,FILE_WRITE_DATA = 2,FILE_ADD_FILE = 2,FILE_APPEND_DATA = 4,FILE_ADD_SUBDIRECTORY = 4,FILE_CREATE_PIPE_INSTANCE = 4,FILE_READ_EA = 8,FILE_WRITE_EA = 16,FILE_EXECUTE = 32,FILE_TRAVERSE = 32,FILE_DELETE_CHILD = 64,FILE_READ_ATTRIBUTES = 128,FILE_WRITE_ATTRIBUTES = 256,FILE_ALL_ACCESS = 2032127,FILE_GENERIC_READ = 1179785,FILE_GENERIC_WRITE = 1179926,FILE_GENERIC_EXECUTE = 1179808,FILE_SHARE_READ = 1,FILE_SHARE_WRITE = 2,FILE_SHARE_DELETE = 4,FILE_SHARE_VALID_FLAGS = 7,FILE_ATTRIBUTE_READONLY = 1,FILE_ATTRIBUTE_HIDDEN = 2,FILE_ATTRIBUTE_SYSTEM = 4,FILE_ATTRIBUTE_DIRECTORY = 16,FILE_ATTRIBUTE_ARCHIVE = 32,FILE_ATTRIBUTE_DEVICE = 64,FILE_ATTRIBUTE_NORMAL = 128,FILE_ATTRIBUTE_TEMPORARY = 256,FILE_ATTRIBUTE_SPARSE_FILE = 512,FILE_ATTRIBUTE_REPARSE_POINT = 1024,FILE_ATTRIBUTE_COMPRESSED = 2048,FILE_ATTRIBUTE_OFFLINE = 4096,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 8192,FILE_ATTRIBUTE_ENCRYPTED = 16384,FILE_ATTRIBUTE_VALID_FLAGS = 32695,FILE_ATTRIBUTE_VALID_SET_FLAGS = 12711,FILE_SUPERSEDE = 0,FILE_OPEN = 1,FILE_CREATE = 2,FILE_OPEN_IF = 3,FILE_OVERWRITE = 4,FILE_OVERWRITE_IF = 5,FILE_MAXIMUM_DISPOSITION = 5,FILE_DIRECTORY_FILE = 1,FILE_WRITE_THROUGH = 2,FILE_SEQUENTIAL_ONLY = 4,FILE_NO_INTERMEDIATE_BUFFERING = 8,FILE_SYNCHRONOUS_IO_ALERT = 16,FILE_SYNCHRONOUS_IO_NONALERT = 32,FILE_NON_DIRECTORY_FILE = 64,FILE_CREATE_TREE_CONNECTION = 128,FILE_COMPLETE_IF_OPLOCKED = 256,FILE_NO_EA_KNOWLEDGE = 512,FILE_OPEN_FOR_RECOVERY = 1024,FILE_RANDOM_ACCESS = 2048,FILE_DELETE_ON_CLOSE = 4096,FILE_OPEN_BY_FILE_ID = 8192,FILE_OPEN_FOR_BACKUP_INTENT = 16384,FILE_NO_COMPRESSION = 32768,FILE_RESERVE_OPFILTER = 1048576,FILE_OPEN_REPARSE_POINT = 2097152,FILE_OPEN_NO_RECALL = 4194304,FILE_OPEN_FOR_FREE_SPACE_QUERY = 8388608,FILE_COPY_STRUCTURED_STORAGE = 65,FILE_STRUCTURED_STORAGE = 1089,FILE_VALID_OPTION_FLAGS = 16777215,FILE_VALID_PIPE_OPTION_FLAGS = 50,FILE_VALID_MAILSLOT_OPTION_FLAGS = 50,FILE_VALID_SET_FLAGS = 54,FILE_SUPERSEDED = 0,FILE_OPENED = 1,FILE_CREATED = 2,FILE_OVERWRITTEN = 3,FILE_EXISTS = 4,FILE_DOES_NOT_EXIST = 5,FILE_WRITE_TO_END_OF_FILE = -1,FILE_USE_FILE_POINTER_POSITION = -2,FILE_BYTE_ALIGNMENT = 0,FILE_WORD_ALIGNMENT = 1,FILE_LONG_ALIGNMENT = 3,FILE_QUAD_ALIGNMENT = 7,FILE_OCTA_ALIGNMENT = 15,FILE_32_BYTE_ALIGNMENT = 31,FILE_64_BYTE_ALIGNMENT = 63,FILE_128_BYTE_ALIGNMENT = 127,FILE_256_BYTE_ALIGNMENT = 255,FILE_512_BYTE_ALIGNMENT = 511,};
enum MACRO_FILE_DEVICE {FILE_DEVICE_DBC = 34,};
enum MACRO_FILE_DEVICE_USB {FILE_DEVICE_USB = 34,};
enum MACRO_FILE_REMOVABLE {FILE_REMOVABLE_MEDIA = 0x1,FILE_READ_ONLY_DEVICE = 0x2,FILE_FLOPPY_DISKETTE = 0x4,FILE_WRITE_ONCE_MEDIA = 0x8,FILE_REMOTE_DEVICE = 0x10,FILE_DEVICE_IS_MOUNTED = 0x20,FILE_VIRTUAL_VOLUME = 0x40,FILE_AUTOGENERATED_DEVICE_NAME = 0x80,FILE_DEVICE_SECURE_OPEN = 0x100,FILE_CHARACTERISTIC_PNP_DEVICE = 0x800,};
enum MACRO_FILE_SYSTEM {FILE_SYSTEM = 0x22,FAT_FILE_SYSTEM = 0x23,NTFS_FILE_SYSTEM = 0x24,NPFS_FILE_SYSTEM = 0x25,CDFS_FILE_SYSTEM = 0x26,RDR_FILE_SYSTEM = 0x27,};
enum MACRO_FLOPPY {FLOPPY_INTERNAL_ERROR = 0x37,};
enum MACRO_FLTMGR {FLTMGR_FILE_SYSTEM = 0xF5,};
enum MACRO_FLUSH {FLUSH_MULTIPLE_MAXIMUM = 32,};
enum MACRO_FO {FO_FILE_OPEN = 0x1,FO_SYNCHRONOUS_IO = 0x2,FO_ALERTABLE_IO = 0x4,FO_NO_INTERMEDIATE_BUFFERING = 0x8,FO_WRITE_THROUGH = 0x10,FO_SEQUENTIAL_ONLY = 0x20,FO_CACHE_SUPPORTED = 0x40,FO_NAMED_PIPE = 0x80,FO_STREAM_FILE = 0x100,FO_MAILSLOT = 0x200,FO_GENERATE_AUDIT_ON_CLOSE = 0x400,FO_DIRECT_DEVICE_OPEN = 0x800,FO_FILE_MODIFIED = 0x1000,FO_FILE_SIZE_CHANGED = 0x2000,FO_CLEANUP_COMPLETE = 0x4000,FO_TEMPORARY_FILE = 0x8000,FO_DELETE_ON_CLOSE = 0x10000,FO_OPENED_CASE_SENSITIVE = 0x20000,FO_HANDLE_CREATED = 0x40000,FO_FILE_FAST_IO_READ = 0x80000,FO_RANDOM_ACCESS = 0x100000,FO_FILE_OPEN_CANCELLED = 0x200000,FO_VOLUME_OPEN = 0x400000,FO_FILE_OBJECT_HAS_EXTENSION = 0x800000,FO_REMOTE_ORIGIN = 0x1000000,};
enum MACRO_FRAME {FRAME_TIME_NTSC = 333667,FRAME_TIME_PAL = 400000,};
enum MACRO_FRAME_SIZE {FRAME_SIZE_SDDV_NTSC = 120000,FRAME_SIZE_SDDV_PAL = 144000,FRAME_SIZE_HDDV_NTSC = 240000,FRAME_SIZE_HDDV_PAL = 288000,FRAME_SIZE_SDLDV_NTSC = 60000,FRAME_SIZE_SDLDV_PAL = 72000,};
enum MACRO_GENERIC {GENERIC_READ = 0x80000000,GENERIC_WRITE = 0x40000000,GENERIC_EXECUTE = 0x20000000,GENERIC_ALL = 0x10000000,};
enum MACRO_GET {GET_HOST_UNIQUE_ID = 1,GET_HOST_CAPABILITIES = 2,GET_POWER_SUPPLIED = 3,GET_PHYS_ADDR_ROUTINE = 4,GET_HOST_CONFIG_ROM = 5,GET_HOST_CSR_CONTENTS = 6,GET_HOST_DMA_CAPABILITIES = 7,};
enum MACRO_GET_FP {GET_FP_CAPABILITY_OUT_Capability_ID = 1,};
enum MACRO_GET_UNIT {GET_UNIT_INFO_IDS = 0x1,GET_UNIT_INFO_CAPABILITIES = 0x2,GET_UNIT_INFO_ISOCH_PARAMS = 0x3,GET_UNIT_BUS_GENERATION_NODE = 0x4,GET_UNIT_DDI_VERSION = 0x5,GET_UNIT_DIAG_LEVEL = 0x6,};
enum MACRO_GetFailurePredictionCapability {GetFailurePredictionCapability = 4,};
enum MACRO_HAL {HAL_MEMORY_ALLOCATION = 0xAC,};
enum MACRO_HARDWARE {HARDWARE_PROFILE_UNDOCKED_STRING = 0x40010001,HARDWARE_PROFILE_DOCKED_STRING = 0x40010002,HARDWARE_PROFILE_UNKNOWN_STRING = 0x40010003,};
enum MACRO_HARDWARE_INTERRUPT {HARDWARE_INTERRUPT_STORM = 0xF2,};
enum MACRO_HASH {HASH_STRING_ALGORITHM_DEFAULT = 0,HASH_STRING_ALGORITHM_X65599 = 1,HASH_STRING_ALGORITHM_INVALID = -1,};
enum MACRO_HCD {HCD_GET_STATS_1 = 255,HCD_DIAGNOSTIC_MODE_ON = 256,HCD_DIAGNOSTIC_MODE_OFF = 257,HCD_GET_ROOT_HUB_NAME = 258,HCD_GET_DRIVERKEY_NAME = 265,HCD_GET_STATS_2 = 266,HCD_DISABLE_PORT = 268,HCD_ENABLE_PORT = 269,HCD_USER_REQUEST = 270,};
enum MACRO_HFILE {HFILE_ERROR = -1,};
enum MACRO_HID {HID_REVISION = 0x1,};
enum MACRO_HIDP {HIDP_LINK_COLLECTION_ROOT = 65535,HIDP_LINK_COLLECTION_UNSPECIFIED = 0,HIDP_STATUS_SUCCESS = 1114112,HIDP_STATUS_NULL = -2146369535,HIDP_STATUS_INVALID_PREPARSED_DATA = -1072627711,HIDP_STATUS_INVALID_REPORT_TYPE = -1072627710,HIDP_STATUS_INVALID_REPORT_LENGTH = -1072627709,HIDP_STATUS_USAGE_NOT_FOUND = -1072627708,HIDP_STATUS_VALUE_OUT_OF_RANGE = -1072627707,HIDP_STATUS_BAD_LOG_PHY_VALUES = -1072627706,HIDP_STATUS_BUFFER_TOO_SMALL = -1072627705,HIDP_STATUS_INTERNAL_ERROR = -1072627704,HIDP_STATUS_I8042_TRANS_UNKNOWN = -1072627703,HIDP_STATUS_INCOMPATIBLE_REPORT_ID = -1072627702,HIDP_STATUS_NOT_VALUE_ARRAY = -1072627701,HIDP_STATUS_IS_VALUE_ARRAY = -1072627700,HIDP_STATUS_DATA_INDEX_NOT_FOUND = -1072627699,HIDP_STATUS_DATA_INDEX_OUT_OF_RANGE = -1072627698,HIDP_STATUS_BUTTON_NOT_PRESSED = -1072627697,HIDP_STATUS_REPORT_DOES_NOT_EXIST = -1072627696,HIDP_STATUS_NOT_IMPLEMENTED = -1072627680,HIDP_STATUS_I8242_TRANS_UNKNOWN = -1072627703,HIDP_GETCOLDESC_SUCCESS = 0,HIDP_GETCOLDESC_RESOURCES = 1,HIDP_GETCOLDESC_BUFFER = 2,HIDP_GETCOLDESC_LINK_RESOURCES = 3,HIDP_GETCOLDESC_UNEXP_END_COL = 4,HIDP_GETCOLDESC_PREPARSE_RESOURCES = 5,HIDP_GETCOLDESC_ONE_BYTE = 6,HIDP_GETCOLDESC_TWO_BYTE = 7,HIDP_GETCOLDESC_FOUR_BYTE = 8,HIDP_GETCOLDESC_BYTE_ALLIGN = 9,HIDP_GETCOLDESC_MAIN_ITEM_NO_USAGE = 10,HIDP_GETCOLDESC_TOP_COLLECTION_USAGE = 11,HIDP_GETCOLDESC_PUSH_RESOURCES = 16,HIDP_GETCOLDESC_ITEM_UNKNOWN = 18,HIDP_GETCOLDESC_REPORT_ID = 19,HIDP_GETCOLDESC_BAD_REPORT_ID = 20,HIDP_GETCOLDESC_NO_REPORT_ID = 21,HIDP_GETCOLDESC_DEFAULT_ID_ERROR = 22,HIDP_GETCOLDESC_NO_DATA = 26,HIDP_GETCOLDESC_INVALID_MAIN_ITEM = 27,HIDP_GETCOLDESC_NO_CLOSE_DELIMITER = 32,HIDP_GETCOLDESC_NOT_VALID_DELIMITER = 33,HIDP_GETCOLDESC_MISMATCH_OC_DELIMITER = 34,HIDP_GETCOLDESC_UNSUPPORTED = 64,};
enum MACRO_HID_HID {HID_HID_DESCRIPTOR_TYPE = 0x21,HID_REPORT_DESCRIPTOR_TYPE = 0x22,HID_PHYSICAL_DESCRIPTOR_TYPE = 0x23,HID_STRING_ID_IMANUFACTURER = 0xE,HID_STRING_ID_IPRODUCT = 0xF,HID_STRING_ID_ISERIALNUMBER = 0x10,};
enum MACRO_HID_USAGE {HID_USAGE_PAGE_UNDEFINED = 0x0,HID_USAGE_PAGE_GENERIC = 0x1,HID_USAGE_PAGE_SIMULATION = 0x2,HID_USAGE_PAGE_VR = 0x3,HID_USAGE_PAGE_SPORT = 0x4,HID_USAGE_PAGE_GAME = 0x5,HID_USAGE_PAGE_KEYBOARD = 0x7,HID_USAGE_PAGE_LED = 0x8,HID_USAGE_PAGE_BUTTON = 0x9,HID_USAGE_PAGE_ORDINAL = 0xA,HID_USAGE_PAGE_TELEPHONY = 0xB,HID_USAGE_PAGE_CONSUMER = 0xC,HID_USAGE_PAGE_DIGITIZER = 0xD,HID_USAGE_PAGE_UNICODE = 0x10,HID_USAGE_PAGE_ALPHANUMERIC = 0x14,HID_USAGE_GENERIC_POINTER = 0x1,HID_USAGE_GENERIC_MOUSE = 0x2,HID_USAGE_GENERIC_JOYSTICK = 0x4,HID_USAGE_GENERIC_GAMEPAD = 0x5,HID_USAGE_GENERIC_KEYBOARD = 0x6,HID_USAGE_GENERIC_KEYPAD = 0x7,HID_USAGE_GENERIC_SYSTEM_CTL = 0x80,HID_USAGE_GENERIC_X = 0x30,HID_USAGE_GENERIC_Y = 0x31,HID_USAGE_GENERIC_Z = 0x32,HID_USAGE_GENERIC_RX = 0x33,HID_USAGE_GENERIC_RY = 0x34,HID_USAGE_GENERIC_RZ = 0x35,HID_USAGE_GENERIC_SLIDER = 0x36,HID_USAGE_GENERIC_DIAL = 0x37,HID_USAGE_GENERIC_WHEEL = 0x38,HID_USAGE_GENERIC_HATSWITCH = 0x39,HID_USAGE_GENERIC_COUNTED_BUFFER = 0x3A,HID_USAGE_GENERIC_BYTE_COUNT = 0x3B,HID_USAGE_GENERIC_MOTION_WAKEUP = 0x3C,HID_USAGE_GENERIC_VX = 0x40,HID_USAGE_GENERIC_VY = 0x41,HID_USAGE_GENERIC_VZ = 0x42,HID_USAGE_GENERIC_VBRX = 0x43,HID_USAGE_GENERIC_VBRY = 0x44,HID_USAGE_GENERIC_VBRZ = 0x45,HID_USAGE_GENERIC_VNO = 0x46,HID_USAGE_GENERIC_SYSCTL_POWER = 0x81,HID_USAGE_GENERIC_SYSCTL_SLEEP = 0x82,HID_USAGE_GENERIC_SYSCTL_WAKE = 0x83,HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU = 0x84,HID_USAGE_GENERIC_SYSCTL_MAIN_MENU = 0x85,HID_USAGE_GENERIC_SYSCTL_APP_MENU = 0x86,HID_USAGE_GENERIC_SYSCTL_HELP_MENU = 0x87,HID_USAGE_GENERIC_SYSCTL_MENU_EXIT = 0x88,HID_USAGE_GENERIC_SYSCTL_MENU_SELECT = 0x89,HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT = 0x8A,HID_USAGE_GENERIC_SYSCTL_MENU_LEFT = 0x8B,HID_USAGE_GENERIC_SYSCTL_MENU_UP = 0x8C,HID_USAGE_GENERIC_SYSCTL_MENU_DOWN = 0x8D,HID_USAGE_SIMULATION_RUDDER = 0xBA,HID_USAGE_SIMULATION_THROTTLE = 0xBB,HID_USAGE_KEYBOARD_NOEVENT = 0x0,HID_USAGE_KEYBOARD_ROLLOVER = 0x1,HID_USAGE_KEYBOARD_POSTFAIL = 0x2,HID_USAGE_KEYBOARD_UNDEFINED = 0x3,HID_USAGE_KEYBOARD_aA = 0x4,HID_USAGE_KEYBOARD_zZ = 0x1D,HID_USAGE_KEYBOARD_ONE = 0x1E,HID_USAGE_KEYBOARD_ZERO = 0x27,HID_USAGE_KEYBOARD_LCTRL = 0xE0,HID_USAGE_KEYBOARD_LSHFT = 0xE1,HID_USAGE_KEYBOARD_LALT = 0xE2,HID_USAGE_KEYBOARD_LGUI = 0xE3,HID_USAGE_KEYBOARD_RCTRL = 0xE4,HID_USAGE_KEYBOARD_RSHFT = 0xE5,HID_USAGE_KEYBOARD_RALT = 0xE6,HID_USAGE_KEYBOARD_RGUI = 0xE7,HID_USAGE_KEYBOARD_SCROLL_LOCK = 0x47,HID_USAGE_KEYBOARD_NUM_LOCK = 0x53,HID_USAGE_KEYBOARD_CAPS_LOCK = 0x39,HID_USAGE_KEYBOARD_F1 = 0x3A,HID_USAGE_KEYBOARD_F12 = 0x45,HID_USAGE_KEYBOARD_RETURN = 0x28,HID_USAGE_KEYBOARD_ESCAPE = 0x29,HID_USAGE_KEYBOARD_DELETE = 0x2A,HID_USAGE_KEYBOARD_PRINT_SCREEN = 0x46,HID_USAGE_LED_NUM_LOCK = 0x1,HID_USAGE_LED_CAPS_LOCK = 0x2,HID_USAGE_LED_SCROLL_LOCK = 0x3,HID_USAGE_LED_COMPOSE = 0x4,HID_USAGE_LED_KANA = 0x5,HID_USAGE_LED_POWER = 0x6,HID_USAGE_LED_SHIFT = 0x7,HID_USAGE_LED_DO_NOT_DISTURB = 0x8,HID_USAGE_LED_MUTE = 0x9,HID_USAGE_LED_TONE_ENABLE = 0xA,HID_USAGE_LED_HIGH_CUT_FILTER = 0xB,HID_USAGE_LED_LOW_CUT_FILTER = 0xC,HID_USAGE_LED_EQUALIZER_ENABLE = 0xD,HID_USAGE_LED_SOUND_FIELD_ON = 0xE,HID_USAGE_LED_SURROUND_FIELD_ON = 0xF,HID_USAGE_LED_REPEAT = 0x10,HID_USAGE_LED_STEREO = 0x11,HID_USAGE_LED_SAMPLING_RATE_DETECT = 0x12,HID_USAGE_LED_SPINNING = 0x13,HID_USAGE_LED_CAV = 0x14,HID_USAGE_LED_CLV = 0x15,HID_USAGE_LED_RECORDING_FORMAT_DET = 0x16,HID_USAGE_LED_OFF_HOOK = 0x17,HID_USAGE_LED_RING = 0x18,HID_USAGE_LED_MESSAGE_WAITING = 0x19,HID_USAGE_LED_DATA_MODE = 0x1A,HID_USAGE_LED_BATTERY_OPERATION = 0x1B,HID_USAGE_LED_BATTERY_OK = 0x1C,HID_USAGE_LED_BATTERY_LOW = 0x1D,HID_USAGE_LED_SPEAKER = 0x1E,HID_USAGE_LED_HEAD_SET = 0x1F,HID_USAGE_LED_HOLD = 0x20,HID_USAGE_LED_MICROPHONE = 0x21,HID_USAGE_LED_COVERAGE = 0x22,HID_USAGE_LED_NIGHT_MODE = 0x23,HID_USAGE_LED_SEND_CALLS = 0x24,HID_USAGE_LED_CALL_PICKUP = 0x25,HID_USAGE_LED_CONFERENCE = 0x26,HID_USAGE_LED_STAND_BY = 0x27,HID_USAGE_LED_CAMERA_ON = 0x28,HID_USAGE_LED_CAMERA_OFF = 0x29,HID_USAGE_LED_ON_LINE = 0x2A,HID_USAGE_LED_OFF_LINE = 0x2B,HID_USAGE_LED_BUSY = 0x2C,HID_USAGE_LED_READY = 0x2D,HID_USAGE_LED_PAPER_OUT = 0x2E,HID_USAGE_LED_PAPER_JAM = 0x2F,HID_USAGE_LED_REMOTE = 0x30,HID_USAGE_LED_FORWARD = 0x31,HID_USAGE_LED_REVERSE = 0x32,HID_USAGE_LED_STOP = 0x33,HID_USAGE_LED_REWIND = 0x34,HID_USAGE_LED_FAST_FORWARD = 0x35,HID_USAGE_LED_PLAY = 0x36,HID_USAGE_LED_PAUSE = 0x37,HID_USAGE_LED_RECORD = 0x38,HID_USAGE_LED_ERROR = 0x39,HID_USAGE_LED_SELECTED_INDICATOR = 0x3A,HID_USAGE_LED_IN_USE_INDICATOR = 0x3B,HID_USAGE_LED_MULTI_MODE_INDICATOR = 0x3C,HID_USAGE_LED_INDICATOR_ON = 0x3D,HID_USAGE_LED_INDICATOR_FLASH = 0x3E,HID_USAGE_LED_INDICATOR_SLOW_BLINK = 0x3F,HID_USAGE_LED_INDICATOR_FAST_BLINK = 0x40,HID_USAGE_LED_INDICATOR_OFF = 0x41,HID_USAGE_LED_FLASH_ON_TIME = 0x42,HID_USAGE_LED_SLOW_BLINK_ON_TIME = 0x43,HID_USAGE_LED_SLOW_BLINK_OFF_TIME = 0x44,HID_USAGE_LED_FAST_BLINK_ON_TIME = 0x45,HID_USAGE_LED_FAST_BLINK_OFF_TIME = 0x46,HID_USAGE_LED_INDICATOR_COLOR = 0x47,HID_USAGE_LED_RED = 0x48,HID_USAGE_LED_GREEN = 0x49,HID_USAGE_LED_AMBER = 0x4A,HID_USAGE_LED_GENERIC_INDICATOR = 0x4B,HID_USAGE_TELEPHONY_PHONE = 0x1,HID_USAGE_TELEPHONY_ANSWERING_MACHINE = 0x2,HID_USAGE_TELEPHONY_MESSAGE_CONTROLS = 0x3,HID_USAGE_TELEPHONY_HANDSET = 0x4,HID_USAGE_TELEPHONY_HEADSET = 0x5,HID_USAGE_TELEPHONY_KEYPAD = 0x6,HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON = 0x7,HID_USAGE_CONSUMERCTRL = 0x1,HID_USAGE_DIGITIZER_PEN = 0x2,HID_USAGE_DIGITIZER_IN_RANGE = 0x32,HID_USAGE_DIGITIZER_TIP_SWITCH = 0x42,HID_USAGE_DIGITIZER_BARREL_SWITCH = 0x44,};
enum MACRO_HOST {HOST_INFO_PACKET_BASED = 0x1,HOST_INFO_STREAM_BASED = 0x2,HOST_INFO_SUPPORTS_ISOCH_STRIPPING = 0x4,HOST_INFO_SUPPORTS_START_ON_CYCLE = 0x8,HOST_INFO_SUPPORTS_RETURNING_ISO_HDR = 0x10,HOST_INFO_SUPPORTS_ISO_HDR_INSERTION = 0x20,HOST_INFO_SUPPORTS_ISO_DUAL_BUFFER_RX = 0x40,HOST_INFO_DMA_DOUBLE_BUFFERING_ENABLED = 0x80,};
enum MACRO_HTTP {HTTP_DRIVER_CORRUPTED = 0xFA,};
enum MACRO_ID {SYSID_UUID_Uuid_ID = 1,MSSmBios_SysidUUIDList_Count_ID = 1,MSSmBios_SysidUUIDList_List_ID = 2,SYSID_1394_x1394_ID = 1,MSSmBios_Sysid1394List_Count_ID = 1,MSSmBios_Sysid1394List_List_ID = 2,MSMCAEvent_Header_RecordId_ID = 1,MSMCAEvent_Header_ErrorSeverity_ID = 2,MSMCAEvent_Header_Type_ID = 3,MSMCAEvent_Header_Cpu_ID = 4,MSMCAEvent_Header_AdditionalErrors_ID = 5,MSMCAEvent_Header_LogToEventlog_ID = 6,MSMCAEvent_CPUError_RecordId_ID = 1,MSMCAEvent_CPUError_ErrorSeverity_ID = 2,MSMCAEvent_CPUError_Type_ID = 3,MSMCAEvent_CPUError_Cpu_ID = 4,MSMCAEvent_CPUError_AdditionalErrors_ID = 5,MSMCAEvent_CPUError_LogToEventlog_ID = 6,};
enum MACRO_IMPERSONATING {IMPERSONATING_WORKER_THREAD = 0xDF,};
enum MACRO_INACCESSIBLE {INACCESSIBLE_BOOT_DEVICE = 0x7B,};
enum MACRO_INCONSISTENT {INCONSISTENT_IRP = 0x2A,};
enum MACRO_INCREMENT {EVENT_INCREMENT = 1,IO_NO_INCREMENT = 0,IO_CD_ROM_INCREMENT = 1,IO_DISK_INCREMENT = 1,IO_KEYBOARD_INCREMENT = 6,IO_MAILSLOT_INCREMENT = 2,IO_MOUSE_INCREMENT = 6,IO_NAMED_PIPE_INCREMENT = 2,IO_NETWORK_INCREMENT = 2,IO_PARALLEL_INCREMENT = 1,IO_SERIAL_INCREMENT = 2,IO_SOUND_INCREMENT = 8,IO_VIDEO_INCREMENT = 1,SEMAPHORE_INCREMENT = 1,};
enum MACRO_INITIAL {INITIAL_PRIVILEGE_COUNT = 3,};
enum MACRO_INITIALIZATION_FAILED {PHASE0_INITIALIZATION_FAILED = 0x31,PHASE1_INITIALIZATION_FAILED = 0x32,};
enum MACRO_INITIAL_BANDWIDTH {INITIAL_BANDWIDTH_UNITS = 4915,};
enum MACRO_INITIAL_REGISTER {INITIAL_REGISTER_SPACE_HI = 0xFFFF,INITIAL_REGISTER_SPACE_LO = 0xF0000000,};
enum MACRO_INSTALL {INSTALL_MORE_MEMORY = 0x7D,};
enum MACRO_INSUFFICIENT {INSUFFICIENT_SYSTEM_MAP_REGS = 0x45,};
enum MACRO_INTERNAL {INTERNAL_POWER_ERROR = 0xA0,};
enum MACRO_INTERNAL_ERROR {XNS_INTERNAL_ERROR = 0x57,FTDISK_INTERNAL_ERROR = 0x58,};
enum MACRO_INTERRUPT {INTERRUPT_UNWIND_ATTEMPTED = 0x3C,INTERRUPT_EXCEPTION_NOT_HANDLED = 0x3D,};
enum MACRO_INVALID {INVALID_AFFINITY_SET = 0x3,INVALID_DATA_ACCESS_TRAP = 0x4,INVALID_PROCESS_ATTACH_ATTEMPT = 0x5,INVALID_PROCESS_DETACH_ATTEMPT = 0x6,INVALID_SOFTWARE_INTERRUPT = 0x7,};
enum MACRO_INVALID_FLOATING {INVALID_FLOATING_POINT_STATE = 0xE7,INVALID_CANCEL_OF_FILE_OPEN = 0xE8,};
enum MACRO_INVALID_HIBERNATED {INVALID_HIBERNATED_STATE = 0xBD,};
enum MACRO_INVALID_KERNEL {INVALID_KERNEL_HANDLE = 0x93,};
enum MACRO_INVALID_REGION {INVALID_REGION_OR_SEGMENT = 0x99,};
enum MACRO_INVALID_WORK {INVALID_WORK_QUEUE_ITEM = 0x96,};
enum MACRO_IO {IO_ERR_RETRY_SUCCEEDED = 0x40001,IO_ERR_INSUFFICIENT_RESOURCES = 0xC0040002,IO_ERR_CONFIGURATION_ERROR = 0xC0040003,IO_ERR_DRIVER_ERROR = 0xC0040004,IO_ERR_PARITY = 0xC0040005,IO_ERR_SEEK_ERROR = 0xC0040006,IO_ERR_BAD_BLOCK = 0xC0040007,IO_ERR_OVERRUN_ERROR = 0xC0040008,IO_ERR_TIMEOUT = 0xC0040009,IO_ERR_SEQUENCE = 0xC004000A,IO_ERR_CONTROLLER_ERROR = 0xC004000B,IO_ERR_INTERNAL_ERROR = 0xC004000C,IO_ERR_INCORRECT_IRQL = 0xC004000D,IO_ERR_INVALID_IOBASE = 0xC004000E,IO_ERR_NOT_READY = 0xC004000F,IO_ERR_INVALID_REQUEST = 0xC0040010,IO_ERR_VERSION = 0xC0040011,IO_ERR_LAYERED_FAILURE = 0xC0040012,IO_ERR_RESET = 0xC0040013,IO_ERR_PROTOCOL = 0xC0040014,IO_ERR_MEMORY_CONFLICT_DETECTED = 0xC0040015,IO_ERR_PORT_CONFLICT_DETECTED = 0xC0040016,IO_ERR_DMA_CONFLICT_DETECTED = 0xC0040017,IO_ERR_IRQ_CONFLICT_DETECTED = 0xC0040018,IO_ERR_BAD_FIRMWARE = 0xC0040019,IO_WRN_BAD_FIRMWARE = 0x8004001A,IO_ERR_DMA_RESOURCE_CONFLICT = 0xC004001B,IO_ERR_INTERRUPT_RESOURCE_CONFLICT = 0xC004001C,IO_ERR_MEMORY_RESOURCE_CONFLICT = 0xC004001D,IO_ERR_PORT_RESOURCE_CONFLICT = 0xC004001E,IO_BAD_BLOCK_WITH_NAME = 0xC004001F,IO_WRITE_CACHE_ENABLED = 0x80040020,IO_RECOVERED_VIA_ECC = 0x80040021,IO_WRITE_CACHE_DISABLED = 0x80040022,IO_FILE_QUOTA_THRESHOLD = 0x40040024,IO_FILE_QUOTA_LIMIT = 0x40040025,IO_FILE_QUOTA_STARTED = 0x40040026,IO_FILE_QUOTA_SUCCEEDED = 0x40040027,IO_FILE_QUOTA_FAILED = 0x80040028,IO_FILE_SYSTEM_CORRUPT = 0xC0040029,IO_FILE_QUOTA_CORRUPT = 0xC004002A,IO_SYSTEM_SLEEP_FAILED = 0xC004002B,IO_DUMP_POINTER_FAILURE = 0xC004002C,IO_DUMP_DRIVER_LOAD_FAILURE = 0xC004002D,IO_DUMP_INITIALIZATION_FAILURE = 0xC004002E,IO_DUMP_DUMPFILE_CONFLICT = 0xC004002F,IO_DUMP_DIRECT_CONFIG_FAILED = 0xC0040030,IO_DUMP_PAGE_CONFIG_FAILED = 0xC0040031,IO_LOST_DELAYED_WRITE = 0x80040032,IO_WARNING_PAGING_FAILURE = 0x80040033,IO_WRN_FAILURE_PREDICTED = 0x80040034,IO_WARNING_INTERRUPT_STILL_PENDING = 0x80040035,IO_DRIVER_CANCEL_TIMEOUT = 0x80040036,IO_FILE_SYSTEM_CORRUPT_WITH_NAME = 0xC0040037,IO_WARNING_ALLOCATION_FAILED = 0x80040038,IO_WARNING_LOG_FLUSH_FAILED = 0x80040039,IO_WARNING_DUPLICATE_SIGNATURE = 0x8004003A,IO_WARNING_DUPLICATE_PATH = 0x8004003B,};
enum MACRO_IOCTL {IOCTL_QUERY_DEVICE_POWER_STATE = 0x294000,IOCTL_SET_DEVICE_WAKE = 0x298004,IOCTL_CANCEL_DEVICE_WAKE = 0x298008,};
enum MACRO_IOCTL_1394 {IOCTL_1394_CLASS = 0x22021D,IOCTL_1394_TOGGLE_ENUM_TEST_ON = 0x220220,IOCTL_1394_TOGGLE_ENUM_TEST_OFF = 0x220224,};
enum MACRO_IOCTL_61883 {IOCTL_61883_CLASS = 0x220245,};
enum MACRO_IOCTL_ACPI {IOCTL_ACPI_ASYNC_EVAL_METHOD = 3325952,IOCTL_ACPI_EVAL_METHOD = 3325956,IOCTL_ACPI_ACQUIRE_GLOBAL_LOCK = 3325968,IOCTL_ACPI_RELEASE_GLOBAL_LOCK = 3325972,};
enum MACRO_IOCTL_AVC {IOCTL_AVC_CLASS = 0x220248,};
enum MACRO_IOCTL_AVCSTRM {IOCTL_AVCSTRM_CLASS = 0x22024D,};
enum MACRO_IOCTL_AVC_UPDATE {IOCTL_AVC_UPDATE_VIRTUAL_SUBUNIT_INFO = 0x2A0000,IOCTL_AVC_REMOVE_VIRTUAL_SUBUNIT_INFO = 0x2A0004,IOCTL_AVC_BUS_RESET = 0x2A0008,};
enum MACRO_IOCTL_HID {IOCTL_HID_GET_DRIVER_CONFIG = 721296,IOCTL_HID_SET_DRIVER_CONFIG = 721300,IOCTL_HID_GET_POLL_FREQUENCY_MSEC = 721304,IOCTL_HID_SET_POLL_FREQUENCY_MSEC = 721308,IOCTL_GET_NUM_DEVICE_INPUT_BUFFERS = 721312,IOCTL_SET_NUM_DEVICE_INPUT_BUFFERS = 721316,IOCTL_HID_GET_COLLECTION_INFORMATION = 721320,IOCTL_HID_GET_COLLECTION_DESCRIPTOR = 721299,IOCTL_HID_FLUSH_QUEUE = 721303,IOCTL_HID_SET_FEATURE = 721297,IOCTL_HID_SET_OUTPUT_REPORT = 721301,IOCTL_HID_GET_FEATURE = 721298,IOCTL_GET_PHYSICAL_DESCRIPTOR = 721306,IOCTL_HID_GET_HARDWARE_ID = 721310,IOCTL_HID_GET_INPUT_REPORT = 721314,IOCTL_HID_GET_MANUFACTURER_STRING = 721338,IOCTL_HID_GET_PRODUCT_STRING = 721342,IOCTL_HID_GET_SERIALNUMBER_STRING = 721346,IOCTL_HID_GET_INDEXED_STRING = 721378,IOCTL_HID_GET_MS_GENRE_DESCRIPTOR = 721382,IOCTL_HID_ENABLE_SECURE_READ = 721419,IOCTL_HID_DISABLE_SECURE_READ = 721423,};
enum MACRO_IOCTL_HID_GET {IOCTL_HID_GET_DEVICE_DESCRIPTOR = 720899,IOCTL_HID_GET_REPORT_DESCRIPTOR = 720903,IOCTL_HID_READ_REPORT = 720907,IOCTL_HID_WRITE_REPORT = 720911,IOCTL_HID_GET_STRING = 720915,IOCTL_HID_ACTIVATE_DEVICE = 720927,IOCTL_HID_DEACTIVATE_DEVICE = 720931,IOCTL_HID_GET_DEVICE_ATTRIBUTES = 720935,IOCTL_HID_SEND_IDLE_NOTIFICATION_REQUEST = 720939,};
enum MACRO_IOCTL_INTERNAL {IOCTL_INTERNAL_DBC_SUBMIT_DRB = 2228227,};
enum MACRO_IOCTL_INTERNAL_USB {IOCTL_INTERNAL_USB_SUBMIT_URB = 2228227,IOCTL_INTERNAL_USB_RESET_PORT = 2228231,IOCTL_INTERNAL_USB_CYCLE_PORT = 2228255,};
enum MACRO_IOCTL_INTERNAL_USB_GET {IOCTL_INTERNAL_USB_GET_PORT_STATUS = 2228243,IOCTL_INTERNAL_USB_SUBMIT_IDLE_NOTIFICATION = 2228263,IOCTL_INTERNAL_USB_GET_ROOTHUB_PDO = 2228239,IOCTL_INTERNAL_USB_ENABLE_PORT = 2228247,IOCTL_INTERNAL_USB_GET_HUB_COUNT = 2228251,IOCTL_INTERNAL_USB_GET_HUB_NAME = 2228256,IOCTL_INTERNAL_USB_GET_BUS_INFO = 2229280,IOCTL_INTERNAL_USB_GET_CONTROLLER_NAME = 2229284,IOCTL_INTERNAL_USB_GET_BUSGUID_INFO = 2229288,IOCTL_INTERNAL_USB_GET_PARENT_HUB_INFO = 2229292,IOCTL_INTERNAL_USB_GET_DEVICE_HANDLE = 2229299,IOCTL_USB_HCD_GET_STATS_1 = 2229244,IOCTL_USB_HCD_GET_STATS_2 = 2229288,IOCTL_USB_HCD_DISABLE_PORT = 2229296,IOCTL_USB_HCD_ENABLE_PORT = 2229300,IOCTL_USB_DIAGNOSTIC_MODE_ON = 2229248,IOCTL_USB_DIAGNOSTIC_MODE_OFF = 2229252,IOCTL_USB_GET_ROOT_HUB_NAME = 2229256,IOCTL_GET_HCD_DRIVERKEY_NAME = 2229284,IOCTL_USB_GET_NODE_INFORMATION = 2229256,IOCTL_USB_GET_NODE_CONNECTION_INFORMATION = 2229260,IOCTL_USB_GET_NODE_CONNECTION_ATTRIBUTES = 2229312,IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION = 2229264,IOCTL_USB_GET_NODE_CONNECTION_NAME = 2229268,IOCTL_USB_DIAG_IGNORE_HUBS_ON = 2229272,IOCTL_USB_DIAG_IGNORE_HUBS_OFF = 2229276,IOCTL_USB_GET_NODE_CONNECTION_DRIVERKEY_NAME = 2229280,IOCTL_USB_GET_HUB_CAPABILITIES = 2229308,IOCTL_USB_HUB_CYCLE_PORT = 2229316,IOCTL_USB_GET_NODE_CONNECTION_INFORMATION_EX = 2229320,};
enum MACRO_IOCTL_KS {IOCTL_KS_PROPERTY = 0x2F0003,IOCTL_KS_ENABLE_EVENT = 0x2F0007,IOCTL_KS_DISABLE_EVENT = 0x2F000B,IOCTL_KS_METHOD = 0x2F000F,IOCTL_KS_WRITE_STREAM = 0x2F8013,IOCTL_KS_READ_STREAM = 0x2F4017,IOCTL_KS_RESET_STATE = 0x2F001B,};
enum MACRO_IOCTL_KS_HANDSHAKE {IOCTL_KS_HANDSHAKE = 0x2F001F,};
enum MACRO_IOCTL_USB {IOCTL_USB_USER_REQUEST = 2229304,};
enum MACRO_IOCTL_USBPRINT {IOCTL_USBPRINT_GET_LPT_STATUS = 2228272,IOCTL_USBPRINT_GET_1284_ID = 2228276,IOCTL_USBPRINT_VENDOR_SET_COMMAND = 2228280,IOCTL_USBPRINT_VENDOR_GET_COMMAND = 2228284,IOCTL_USBPRINT_SOFT_RESET = 2228288,};
enum MACRO_IO_ERR {IO_ERR_THREAD_STUCK_IN_DEVICE_DRIVER = 0xC004006C,};
enum MACRO_IO_ERR_PORT {IO_ERR_PORT_TIMEOUT = 0xC0040075,IO_WARNING_BUS_RESET = 0x80040076,IO_INFO_THROTTLE_COMPLETE = 0x40040077,};
enum MACRO_IO_FORCE {IO_FORCE_ACCESS_CHECK = 0x1,IO_NO_PARAMETER_CHECKING = 0x100,IO_REPARSE = 0x0,IO_REMOUNT = 0x1,};
enum MACRO_IO_RESOURCE {IO_RESOURCE_PREFERRED = 0x1,IO_RESOURCE_DEFAULT = 0x2,IO_RESOURCE_ALTERNATIVE = 0x8,};
enum MACRO_IO_TYPE {IO_TYPE_ADAPTER = 0x1,IO_TYPE_CONTROLLER = 0x2,IO_TYPE_DEVICE = 0x3,IO_TYPE_DRIVER = 0x4,IO_TYPE_FILE = 0x5,IO_TYPE_IRP = 0x6,IO_TYPE_MASTER_ADAPTER = 0x7,IO_TYPE_OPEN_PACKET = 0x8,IO_TYPE_TIMER = 0x9,IO_TYPE_VPB = 0xA,IO_TYPE_ERROR_LOG = 0xB,IO_TYPE_ERROR_MESSAGE = 0xC,IO_TYPE_DEVICE_OBJECT_EXTENSION = 0xD,};
enum MACRO_IO_TYPE_CSQ {IO_TYPE_CSQ_IRP_CONTEXT = 1,IO_TYPE_CSQ = 2,IO_TYPE_CSQ_EX = 3,};
enum MACRO_IRB {IRB_BUS_RESERVED_SZ = 8,IRB_PORT_RESERVED_SZ = 8,IRB_FLAG_USE_PRE_CALCULATED_VALUE = 1,IRB_FLAG_ALLOW_REMOTE_FREE = 2,};
enum MACRO_IRP {IRP_MJ_CREATE = 0x0,IRP_MJ_CREATE_NAMED_PIPE = 0x1,IRP_MJ_CLOSE = 0x2,IRP_MJ_READ = 0x3,IRP_MJ_WRITE = 0x4,IRP_MJ_QUERY_INFORMATION = 0x5,IRP_MJ_SET_INFORMATION = 0x6,IRP_MJ_QUERY_EA = 0x7,IRP_MJ_SET_EA = 0x8,IRP_MJ_FLUSH_BUFFERS = 0x9,IRP_MJ_QUERY_VOLUME_INFORMATION = 0xA,IRP_MJ_SET_VOLUME_INFORMATION = 0xB,IRP_MJ_DIRECTORY_CONTROL = 0xC,IRP_MJ_FILE_SYSTEM_CONTROL = 0xD,IRP_MJ_DEVICE_CONTROL = 0xE,IRP_MJ_INTERNAL_DEVICE_CONTROL = 0xF,IRP_MJ_SHUTDOWN = 0x10,IRP_MJ_LOCK_CONTROL = 0x11,IRP_MJ_CLEANUP = 0x12,IRP_MJ_CREATE_MAILSLOT = 0x13,IRP_MJ_QUERY_SECURITY = 0x14,IRP_MJ_SET_SECURITY = 0x15,IRP_MJ_POWER = 0x16,IRP_MJ_SYSTEM_CONTROL = 0x17,IRP_MJ_DEVICE_CHANGE = 0x18,IRP_MJ_QUERY_QUOTA = 0x19,IRP_MJ_SET_QUOTA = 0x1A,IRP_MJ_PNP = 0x1B,IRP_MJ_PNP_POWER = 0x1B,IRP_MJ_MAXIMUM_FUNCTION = 0x1B,IRP_MJ_SCSI = 0xF,IRP_MN_SCSI_CLASS = 0x1,IRP_MN_START_DEVICE = 0x0,IRP_MN_QUERY_REMOVE_DEVICE = 0x1,IRP_MN_REMOVE_DEVICE = 0x2,IRP_MN_CANCEL_REMOVE_DEVICE = 0x3,IRP_MN_STOP_DEVICE = 0x4,IRP_MN_QUERY_STOP_DEVICE = 0x5,IRP_MN_CANCEL_STOP_DEVICE = 0x6,IRP_MN_QUERY_DEVICE_RELATIONS = 0x7,IRP_MN_QUERY_INTERFACE = 0x8,IRP_MN_QUERY_CAPABILITIES = 0x9,IRP_MN_QUERY_RESOURCES = 0xA,IRP_MN_QUERY_RESOURCE_REQUIREMENTS = 0xB,IRP_MN_QUERY_DEVICE_TEXT = 0xC,IRP_MN_FILTER_RESOURCE_REQUIREMENTS = 0xD,IRP_MN_READ_CONFIG = 0xF,IRP_MN_WRITE_CONFIG = 0x10,IRP_MN_EJECT = 0x11,IRP_MN_SET_LOCK = 0x12,IRP_MN_QUERY_ID = 0x13,IRP_MN_QUERY_PNP_DEVICE_STATE = 0x14,IRP_MN_QUERY_BUS_INFORMATION = 0x15,IRP_MN_DEVICE_USAGE_NOTIFICATION = 0x16,IRP_MN_SURPRISE_REMOVAL = 0x17,IRP_MN_WAIT_WAKE = 0x0,IRP_MN_POWER_SEQUENCE = 0x1,IRP_MN_SET_POWER = 0x2,IRP_MN_QUERY_POWER = 0x3,IRP_MN_QUERY_ALL_DATA = 0x0,IRP_MN_QUERY_SINGLE_INSTANCE = 0x1,IRP_MN_CHANGE_SINGLE_INSTANCE = 0x2,IRP_MN_CHANGE_SINGLE_ITEM = 0x3,IRP_MN_ENABLE_EVENTS = 0x4,IRP_MN_DISABLE_EVENTS = 0x5,IRP_MN_ENABLE_COLLECTION = 0x6,IRP_MN_DISABLE_COLLECTION = 0x7,IRP_MN_REGINFO = 0x8,IRP_MN_EXECUTE_METHOD = 0x9,IRP_MN_REGINFO_EX = 0xB,};
enum MACRO_IRP_MN {IRP_MN_BUS_RESET = 0x87,};
enum MACRO_IRP_NOCACHE {IRP_NOCACHE = 0x1,IRP_PAGING_IO = 0x2,IRP_MOUNT_COMPLETION = 0x2,IRP_SYNCHRONOUS_API = 0x4,IRP_ASSOCIATED_IRP = 0x8,IRP_BUFFERED_IO = 0x10,IRP_DEALLOCATE_BUFFER = 0x20,IRP_INPUT_OPERATION = 0x40,IRP_SYNCHRONOUS_PAGING_IO = 0x40,IRP_CREATE_OPERATION = 0x80,IRP_READ_OPERATION = 0x100,IRP_WRITE_OPERATION = 0x200,IRP_CLOSE_OPERATION = 0x400,IRP_QUOTA_CHARGED = 0x1,IRP_ALLOCATED_MUST_SUCCEED = 0x2,IRP_ALLOCATED_FIXED_SIZE = 0x4,IRP_LOOKASIDE_ALLOCATION = 0x8,};
enum MACRO_IRQL {IRQL_NOT_DISPATCH_LEVEL = 0x8,IRQL_NOT_GREATER_OR_EQUAL = 0x9,IRQL_NOT_LESS_OR_EQUAL = 0xA,};
enum MACRO_IRQL_GT {IRQL_GT_ZERO_AT_SYSTEM_SERVICE = 0x4A,};
enum MACRO_IRQL_UNEXPECTED {IRQL_UNEXPECTED_VALUE = 0xC8,};
enum MACRO_ISOCH {ISOCH_PAYLOAD_50_RATE = 512,ISOCH_PAYLOAD_100_RATE = 1024,ISOCH_PAYLOAD_200_RATE = 2048,ISOCH_PAYLOAD_400_RATE = 4096,ISOCH_PAYLOAD_800_RATE = 8192,ISOCH_PAYLOAD_1600_RATE = 16384,};
enum MACRO_ISOCH_ANY {ISOCH_ANY_CHANNEL = 0xFFFFFFFF,ISOCH_MAX_CHANNEL = 0x3F,};
enum MACRO_ISSUE {ISSUE_BUS_RESET_AFTER_MODIFY = 0x4,};
enum MACRO_JIFMK {JIFMK_SOF0 = 0xFFC0,JIFMK_SOF1 = 0xFFC1,JIFMK_SOF2 = 0xFFC2,JIFMK_SOF3 = 0xFFC3,JIFMK_SOF5 = 0xFFC5,JIFMK_SOF6 = 0xFFC6,JIFMK_SOF7 = 0xFFC7,JIFMK_JPG = 0xFFC8,JIFMK_SOF9 = 0xFFC9,JIFMK_SOF10 = 0xFFCA,JIFMK_SOF11 = 0xFFCB,JIFMK_SOF13 = 0xFFCD,JIFMK_SOF14 = 0xFFCE,JIFMK_SOF15 = 0xFFCF,JIFMK_DHT = 0xFFC4,JIFMK_DAC = 0xFFCC,JIFMK_RST0 = 0xFFD0,JIFMK_RST1 = 0xFFD1,JIFMK_RST2 = 0xFFD2,JIFMK_RST3 = 0xFFD3,JIFMK_RST4 = 0xFFD4,JIFMK_RST5 = 0xFFD5,JIFMK_RST6 = 0xFFD6,JIFMK_RST7 = 0xFFD7,JIFMK_SOI = 0xFFD8,JIFMK_EOI = 0xFFD9,JIFMK_SOS = 0xFFDA,JIFMK_DQT = 0xFFDB,JIFMK_DNL = 0xFFDC,JIFMK_DRI = 0xFFDD,JIFMK_DHP = 0xFFDE,JIFMK_EXP = 0xFFDF,JIFMK_APP0 = 0xFFE0,JIFMK_APP1 = 0xFFE1,JIFMK_APP2 = 0xFFE2,JIFMK_APP3 = 0xFFE3,JIFMK_APP4 = 0xFFE4,JIFMK_APP5 = 0xFFE5,JIFMK_APP6 = 0xFFE6,JIFMK_APP7 = 0xFFE7,JIFMK_JPG0 = 0xFFF0,JIFMK_JPG1 = 0xFFF1,JIFMK_JPG2 = 0xFFF2,JIFMK_JPG3 = 0xFFF3,JIFMK_JPG4 = 0xFFF4,JIFMK_JPG5 = 0xFFF5,JIFMK_JPG6 = 0xFFF6,JIFMK_JPG7 = 0xFFF7,JIFMK_JPG8 = 0xFFF8,JIFMK_JPG9 = 0xFFF9,JIFMK_JPG10 = 0xFFFA,JIFMK_JPG11 = 0xFFFB,JIFMK_JPG12 = 0xFFFC,JIFMK_JPG13 = 0xFFFD,JIFMK_COM = 0xFFFE,JIFMK_TEM = 0xFF01,JIFMK_RES = 0xFF02,JIFMK_00 = 0xFF00,JIFMK_FF = 0xFFFF,};
enum MACRO_JPEG {JPEG_PROCESS_BASELINE = 0,};
enum MACRO_JPEG_Y {JPEG_Y = 1,JPEG_YCbCr = 2,JPEG_RGB = 3,};
enum MACRO_KERNEL {KERNEL_APC_PENDING_DURING_EXIT = 0x20,};
enum MACRO_KERNEL_DATA {KERNEL_DATA_INPAGE_ERROR = 0x7A,};
enum MACRO_KERNEL_MODE {KERNEL_MODE_EXCEPTION_NOT_HANDLED = 0x8E,KERNEL_MODE_EXCEPTION_NOT_HANDLED_M = 0x1000008E,};
enum MACRO_KERNEL_STACK {KERNEL_STACK_INPAGE_ERROR = 0x77,};
enum MACRO_KERNEL_STACK_LOCKED {KERNEL_STACK_LOCKED_AT_EXIT = 0x94,};
enum MACRO_KEY {KEY_QUERY_VALUE = 0x1,KEY_SET_VALUE = 0x2,KEY_CREATE_SUB_KEY = 0x4,KEY_ENUMERATE_SUB_KEYS = 0x8,KEY_NOTIFY = 0x10,KEY_CREATE_LINK = 0x20,KEY_WOW64_32KEY = 0x200,KEY_WOW64_64KEY = 0x100,KEY_WOW64_RES = 0x300,KEY_READ = 0x20019,KEY_WRITE = 0x20006,KEY_EXECUTE = 0x20019,KEY_ALL_ACCESS = 0xF003F,};
enum MACRO_KEYBOARD {KEYBOARD_PORT_WMI_STD_I8042 = 0,KEYBOARD_PORT_WMI_STD_SERIAL = 1,KEYBOARD_PORT_WMI_STD_USB = 2,KEYBOARD_PORT_WMI_STD_DATA_ConnectorType_ID = 1,KEYBOARD_PORT_WMI_STD_DATA_DataQueueSize_ID = 2,KEYBOARD_PORT_WMI_STD_DATA_ErrorCount_ID = 3,KEYBOARD_PORT_WMI_STD_DATA_FunctionKeys_ID = 4,KEYBOARD_PORT_WMI_STD_DATA_Indicators_ID = 5,KEYBOARD_ID_EX_Type_ID = 1,KEYBOARD_ID_EX_Subtype_ID = 2,};
enum MACRO_KEY_SIGNATURE {MODULE_VENDOR_ID_KEY_SIGNATURE = 0x3,NODE_CAPABILITIES_KEY_SIGNATURE = 0xC,SPEC_ID_KEY_SIGNATURE = 0x12,SOFTWARE_VERSION_KEY_SIGNATURE = 0x13,MODEL_ID_KEY_SIGNATURE = 0x17,COMMAND_BASE_KEY_SIGNATURE = 0x40,VENDOR_KEY_SIGNATURE = 0x81,TEXTUAL_LEAF_INDIRECT_KEY_SIGNATURE = 0x81,MODEL_KEY_SIGNATURE = 0x82,UNIT_DIRECTORY_KEY_SIGNATURE = 0xD1,UNIT_DEP_DIR_KEY_SIGNATURE = 0xD4,};
enum MACRO_KIP0PCRADDRESS {KIP0PCRADDRESS = 0xFFDFF000,};
enum MACRO_KMODE {KMODE_EXCEPTION_NOT_HANDLED = 0x1E,};
enum MACRO_KS {KS_DVD_CGMS_RESERVED_MASK = 0x78,KS_DVD_CGMS_COPY_PROTECT_MASK = 0x18,KS_DVD_CGMS_COPY_PERMITTED = 0x0,KS_DVD_CGMS_COPY_ONCE = 0x10,KS_DVD_CGMS_NO_COPY = 0x18,KS_DVD_COPYRIGHT_MASK = 0x40,KS_DVD_NOT_COPYRIGHTED = 0x0,KS_DVD_COPYRIGHTED = 0x40,KS_DVD_SECTOR_PROTECT_MASK = 0x20,KS_DVD_SECTOR_NOT_PROTECTED = 0x0,KS_DVD_SECTOR_PROTECTED = 0x20,KS_BI_RGB = 0x0,KS_BI_RLE8 = 0x1,KS_BI_RLE4 = 0x2,KS_BI_BITFIELDS = 0x3,KS_iPALETTE_COLORS = 0x100,KS_iEGA_COLORS = 0x10,KS_iMASK_COLORS = 0x3,KS_iTRUECOLOR = 0x10,KS_iRED = 0x0,KS_iGREEN = 0x1,KS_iBLUE = 0x2,KS_iPALETTE = 0x8,KS_iMAXBITS = 0x8,KS_VBIDATARATE_NABTS = 0x576428,KS_VBIDATARATE_CC = 0x7AEC5,KS_VBISAMPLINGRATE_4X_NABTS = 0x15D90A0,KS_VBISAMPLINGRATE_47X_NABTS = 0x19BFCC0,KS_VBISAMPLINGRATE_5X_NABTS = 0x1B4F4C8,KS_TVTUNER_CHANGE_BEGIN_TUNE = 0x1,KS_TVTUNER_CHANGE_END_TUNE = 0x2,KS_INTERLACE_IsInterlaced = 0x1,KS_INTERLACE_1FieldPerSample = 0x2,KS_INTERLACE_Field1First = 0x4,KS_INTERLACE_UNUSED = 0x8,KS_INTERLACE_FieldPatternMask = 0x30,KS_INTERLACE_FieldPatField1Only = 0x0,KS_INTERLACE_FieldPatField2Only = 0x10,KS_INTERLACE_FieldPatBothRegular = 0x20,KS_INTERLACE_FieldPatBothIrregular = 0x30,KS_INTERLACE_DisplayModeMask = 0xC0,KS_INTERLACE_DisplayModeBobOnly = 0x0,KS_INTERLACE_DisplayModeWeaveOnly = 0x40,KS_INTERLACE_DisplayModeBobOrWeave = 0x80,KS_MPEG2_DoPanScan = 0x1,KS_MPEG2_DVDLine21Field1 = 0x2,KS_MPEG2_DVDLine21Field2 = 0x4,KS_MPEG2_SourceIsLetterboxed = 0x8,KS_MPEG2_FilmCameraMode = 0x10,KS_MPEG2_LetterboxAnalogOut = 0x20,KS_MPEG2_DSS_UserData = 0x40,KS_MPEG2_DVB_UserData = 0x80,KS_MPEG2_27MhzTimebase = 0x100,KS_MAX_SIZE_MPEG1_SEQUENCE_INFO = 0x8C,KS_MPEGAUDIOINFO_27MhzTimebase = 0x1,KS_VIDEOSTREAM_PREVIEW = 0x1,KS_VIDEOSTREAM_CAPTURE = 0x2,KS_VIDEOSTREAM_VBI = 0x10,KS_VIDEOSTREAM_NABTS = 0x20,KS_VIDEOSTREAM_CC = 0x100,KS_VIDEOSTREAM_EDS = 0x200,KS_VIDEOSTREAM_TELETEXT = 0x400,KS_VIDEOSTREAM_STILL = 0x1000,KS_VIDEOSTREAM_IS_VPE = 0x8000,KS_VIDEO_ALLOC_VPE_SYSTEM = 0x1,KS_VIDEO_ALLOC_VPE_DISPLAY = 0x2,KS_VIDEO_ALLOC_VPE_AGP = 0x4,KS_VBICAP_PROTECTION_MV_PRESENT = 0x1,KS_VBICAP_PROTECTION_MV_HARDWARE = 0x2,KS_VBICAP_PROTECTION_MV_DETECTED = 0x4,KS_NABTS_GROUPID_ORIGINAL_CONTENT_BASE = 0x800,KS_NABTS_GROUPID_ORIGINAL_CONTENT_ADVERTISER_BASE = 0x810,KS_NABTS_GROUPID_PRODUCTION_COMPANY_CONTENT_BASE = 0x820,KS_NABTS_GROUPID_PRODUCTION_COMPANY_ADVERTISER_BASE = 0x830,KS_NABTS_GROUPID_SYNDICATED_SHOW_CONTENT_BASE = 0x840,KS_NABTS_GROUPID_SYNDICATED_SHOW_ADVERTISER_BASE = 0x850,KS_NABTS_GROUPID_NETWORK_WIDE_CONTENT_BASE = 0x860,KS_NABTS_GROUPID_NETWORK_WIDE_ADVERTISER_BASE = 0x870,KS_NABTS_GROUPID_TELEVISION_STATION_CONTENT_BASE = 0x880,KS_NABTS_GROUPID_TELEVISION_STATION_ADVERTISER_BASE = 0x890,KS_NABTS_GROUPID_LOCAL_CABLE_SYSTEM_CONTENT_BASE = 0x8A0,KS_NABTS_GROUPID_LOCAL_CABLE_SYSTEM_ADVERTISER_BASE = 0x8B0,KS_NABTS_GROUPID_MICROSOFT_RESERVED_TEST_DATA_BASE = 0x8F0,};
enum MACRO_KSAC3 {KSAC3_ALTERNATE_AUDIO_1 = 1,KSAC3_ALTERNATE_AUDIO_2 = 2,KSAC3_ALTERNATE_AUDIO_BOTH = 3,KSAC3_SERVICE_MAIN_AUDIO = 0,KSAC3_SERVICE_NO_DIALOG = 1,KSAC3_SERVICE_VISUALLY_IMPAIRED = 2,KSAC3_SERVICE_HEARING_IMPAIRED = 3,KSAC3_SERVICE_DIALOG_ONLY = 4,KSAC3_SERVICE_COMMENTARY = 5,KSAC3_SERVICE_EMERGENCY_FLASH = 6,KSAC3_SERVICE_VOICE_OVER = 7,};
enum MACRO_KSALL : __int64 {KSALL_NODES = 4294967295,};
enum MACRO_KSALLOCATOR {KSALLOCATOR_REQUIREMENTF_INPLACE_MODIFIER = 0x1,KSALLOCATOR_REQUIREMENTF_SYSTEM_MEMORY = 0x2,KSALLOCATOR_REQUIREMENTF_FRAME_INTEGRITY = 0x4,KSALLOCATOR_REQUIREMENTF_MUST_ALLOCATE = 0x8,KSALLOCATOR_REQUIREMENTF_PREFERENCES_ONLY = 0x80000000,KSALLOCATOR_OPTIONF_COMPATIBLE = 0x1,KSALLOCATOR_OPTIONF_SYSTEM_MEMORY = 0x2,KSALLOCATOR_OPTIONF_VALID = 0x3,KSALLOCATOR_FLAG_PARTIAL_READ_SUPPORT = 0x10,KSALLOCATOR_FLAG_DEVICE_SPECIFIC = 0x20,KSALLOCATOR_FLAG_CAN_ALLOCATE = 0x40,KSALLOCATOR_FLAG_INSIST_ON_FRAMESIZE_RATIO = 0x80,KSALLOCATOR_FLAG_NO_FRAME_INTEGRITY = 0x100,KSALLOCATOR_FLAG_MULTIPLE_OUTPUT = 0x200,KSALLOCATOR_FLAG_CYCLE = 0x400,KSALLOCATOR_FLAG_ALLOCATOR_EXISTS = 0x800,KSALLOCATOR_FLAG_INDEPENDENT_RANGES = 0x1000,KSALLOCATOR_FLAG_ATTENTION_STEPPING = 0x2000,};
enum MACRO_KSATTRIBUTE {KSATTRIBUTE_REQUIRED = 0x1,};
enum MACRO_KSAUDDECOUTMODE {KSAUDDECOUTMODE_STEREO_ANALOG = 0x1,KSAUDDECOUTMODE_PCM_51 = 0x2,KSAUDDECOUTMODE_SPDIFF = 0x4,};
enum MACRO_KSAUDIO {KSAUDIO_STEREO_SPEAKER_GEOMETRY_HEADPHONE = -1,KSAUDIO_STEREO_SPEAKER_GEOMETRY_MIN = 5,KSAUDIO_STEREO_SPEAKER_GEOMETRY_NARROW = 10,KSAUDIO_STEREO_SPEAKER_GEOMETRY_WIDE = 20,KSAUDIO_STEREO_SPEAKER_GEOMETRY_MAX = 180,};
enum MACRO_KSAUDIO_QUALITY {KSAUDIO_QUALITY_WORST = 0x0,KSAUDIO_QUALITY_PC = 0x1,KSAUDIO_QUALITY_BASIC = 0x2,KSAUDIO_QUALITY_ADVANCED = 0x3,KSAUDIO_CPU_RESOURCES_NOT_HOST_CPU = 0x0,KSAUDIO_CPU_RESOURCES_HOST_CPU = 0x7FFFFFFF,};
enum MACRO_KSAUDIO_SPEAKER {KSAUDIO_SPEAKER_DIRECTOUT = 0,KSAUDIO_SPEAKER_MONO = 4,KSAUDIO_SPEAKER_STEREO = 3,KSAUDIO_SPEAKER_QUAD = 51,KSAUDIO_SPEAKER_SURROUND = 263,KSAUDIO_SPEAKER_5POINT1 = 63,KSAUDIO_SPEAKER_7POINT1 = 255,KSAUDIO_SPEAKER_GROUND_FRONT_LEFT = 1,KSAUDIO_SPEAKER_GROUND_FRONT_CENTER = 4,KSAUDIO_SPEAKER_GROUND_FRONT_RIGHT = 2,KSAUDIO_SPEAKER_GROUND_REAR_LEFT = 16,KSAUDIO_SPEAKER_GROUND_REAR_RIGHT = 32,KSAUDIO_SPEAKER_TOP_MIDDLE = 2048,KSAUDIO_SPEAKER_SUPER_WOOFER = 8,};
enum MACRO_KSCREATE {KSCREATE_ITEM_SECURITYCHANGED = 0x1,KSCREATE_ITEM_WILDCARD = 0x2,KSCREATE_ITEM_NOPARAMETERS = 0x4,KSCREATE_ITEM_FREEONSTOP = 0x8,};
enum MACRO_KSDATAFORMAT {KSDATAFORMAT_BIT_TEMPORAL_COMPRESSION = 0,KSDATAFORMAT_TEMPORAL_COMPRESSION = 1,KSDATAFORMAT_BIT_ATTRIBUTES = 1,KSDATAFORMAT_ATTRIBUTES = 2,};
enum MACRO_KSDATARANGE {KSDATARANGE_BIT_ATTRIBUTES = 1,KSDATARANGE_ATTRIBUTES = 2,KSDATARANGE_BIT_REQUIRED_ATTRIBUTES = 2,KSDATARANGE_REQUIRED_ATTRIBUTES = 4,};
enum MACRO_KSDISPATCH {KSDISPATCH_FASTIO = 0x80000000,};
enum MACRO_KSDSOUND {KSDSOUND_BUFFER_PRIMARY = 0x1,KSDSOUND_BUFFER_STATIC = 0x2,KSDSOUND_BUFFER_LOCHARDWARE = 0x4,KSDSOUND_BUFFER_LOCSOFTWARE = 0x8,KSDSOUND_BUFFER_CTRL_3D = 0x1,KSDSOUND_BUFFER_CTRL_FREQUENCY = 0x2,KSDSOUND_BUFFER_CTRL_PAN = 0x4,KSDSOUND_BUFFER_CTRL_VOLUME = 0x8,KSDSOUND_BUFFER_CTRL_POSITIONNOTIFY = 0x10,};
enum MACRO_KSDSOUND_3D {KSDSOUND_3D_MODE_NORMAL = 0x0,KSDSOUND_3D_MODE_HEADRELATIVE = 0x1,KSDSOUND_3D_MODE_DISABLE = 0x2,KSDSOUND_BUFFER_CTRL_HRTF_3D = 0x40000000,};
enum MACRO_KSEVENT {KSEVENT_TYPE_ENABLE = 0x1,KSEVENT_TYPE_ONESHOT = 0x2,KSEVENT_TYPE_ENABLEBUFFERED = 0x4,KSEVENT_TYPE_SETSUPPORT = 0x100,KSEVENT_TYPE_BASICSUPPORT = 0x200,KSEVENT_TYPE_QUERYBUFFER = 0x400,KSEVENT_TYPE_TOPOLOGY = 0x10000000,};
enum MACRO_KSEVENTF {KSEVENTF_EVENT_HANDLE = 0x1,KSEVENTF_SEMAPHORE_HANDLE = 0x2,KSEVENTF_EVENT_OBJECT = 0x4,KSEVENTF_SEMAPHORE_OBJECT = 0x8,KSEVENTF_DPC = 0x10,KSEVENTF_WORKITEM = 0x20,KSEVENTF_KSWORKITEM = 0x80,};
enum MACRO_KSEVENT_ENTRY {KSEVENT_ENTRY_DELETED = 1,KSEVENT_ENTRY_ONESHOT = 2,KSEVENT_ENTRY_BUFFERED = 4,};
enum MACRO_KSFILTER : __int64 {KSFILTER_NODE = 4294967295,};
enum MACRO_KSFILTER_FLAG {KSFILTER_FLAG_DISPATCH_LEVEL_PROCESSING = 0x1,KSFILTER_FLAG_CRITICAL_PROCESSING = 0x2,KSFILTER_FLAG_HYPERCRITICAL_PROCESSING = 0x4,KSFILTER_FLAG_RECEIVE_ZERO_LENGTH_SAMPLES = 0x8,KSFILTER_FLAG_DENY_USERMODE_ACCESS = 0x80000000,};
enum MACRO_KSFRAMETIME {KSFRAMETIME_VARIABLESIZE = 0x1,};
enum MACRO_KSINSTANCE : __int64 {KSINSTANCE_INDETERMINATE = 4294967295,};
enum MACRO_KSMEDIUM {KSMEDIUM_TYPE_ANYINSTANCE = 0,KSMEDIUM_STANDARD_DEVIO = 0,};
enum MACRO_KSMETHOD {KSMETHOD_TYPE_NONE = 0x0,KSMETHOD_TYPE_READ = 0x1,KSMETHOD_TYPE_WRITE = 0x2,KSMETHOD_TYPE_MODIFY = 0x3,KSMETHOD_TYPE_SOURCE = 0x4,KSMETHOD_TYPE_SEND = 0x1,KSMETHOD_TYPE_SETSUPPORT = 0x100,KSMETHOD_TYPE_BASICSUPPORT = 0x200,KSMETHOD_TYPE_TOPOLOGY = 0x10000000,};
enum MACRO_KSMPEGVIDMODE {KSMPEGVIDMODE_PANSCAN = 0x1,KSMPEGVIDMODE_LTRBOX = 0x2,KSMPEGVIDMODE_SCALE = 0x4,};
enum MACRO_KSNODEPIN {KSNODEPIN_STANDARD_IN = 1,KSNODEPIN_STANDARD_OUT = 0,KSNODEPIN_SUM_MUX_IN = 1,KSNODEPIN_SUM_MUX_OUT = 0,KSNODEPIN_DEMUX_IN = 0,KSNODEPIN_DEMUX_OUT = 1,KSNODEPIN_AEC_RENDER_IN = 1,KSNODEPIN_AEC_RENDER_OUT = 0,KSNODEPIN_AEC_CAPTURE_IN = 2,KSNODEPIN_AEC_CAPTURE_OUT = 3,};
enum MACRO_KSPIN {KSPIN_FLAG_DISPATCH_LEVEL_PROCESSING = 1,KSPIN_FLAG_CRITICAL_PROCESSING = 2,KSPIN_FLAG_HYPERCRITICAL_PROCESSING = 4,KSPIN_FLAG_ASYNCHRONOUS_PROCESSING = 8,KSPIN_FLAG_DO_NOT_INITIATE_PROCESSING = 16,KSPIN_FLAG_INITIATE_PROCESSING_ON_EVERY_ARRIVAL = 32,KSPIN_FLAG_FRAMES_NOT_REQUIRED_FOR_PROCESSING = 64,KSPIN_FLAG_ENFORCE_FIFO = 128,KSPIN_FLAG_GENERATE_MAPPINGS = 256,KSPIN_FLAG_DISTINCT_TRAILING_EDGE = 512,KSPIN_FLAG_PROCESS_IN_RUN_STATE_ONLY = 65536,KSPIN_FLAG_SPLITTER = 131072,KSPIN_FLAG_USE_STANDARD_TRANSPORT = 262144,KSPIN_FLAG_DO_NOT_USE_STANDARD_TRANSPORT = 524288,KSPIN_FLAG_FIXED_FORMAT = 1048576,KSPIN_FLAG_GENERATE_EOS_EVENTS = 2097152,KSPIN_FLAG_RENDERER = 2162688,KSPIN_FLAG_IMPLEMENT_CLOCK = 4194304,KSPIN_FLAG_SOME_FRAMES_REQUIRED_FOR_PROCESSING = 8388608,KSPIN_FLAG_PROCESS_IF_ANY_IN_RUN_STATE = 16777216,KSPIN_FLAG_DENY_USERMODE_ACCESS = -2147483648,};
enum MACRO_KSPRIORITY {KSPRIORITY_LOW = 0x1,KSPRIORITY_NORMAL = 0x40000000,KSPRIORITY_HIGH = 0x80000000,KSPRIORITY_EXCLUSIVE = 0xFFFFFFFF,};
enum MACRO_KSPROBE {KSPROBE_STREAMREAD = 0x0,KSPROBE_STREAMWRITE = 0x1,KSPROBE_ALLOCATEMDL = 0x10,KSPROBE_PROBEANDLOCK = 0x20,KSPROBE_SYSTEMADDRESS = 0x40,KSPROBE_MODIFY = 0x200,KSPROBE_STREAMWRITEMODIFY = 0x201,KSPROBE_ALLOWFORMATCHANGE = 0x80,};
enum MACRO_KSPROPERTY {KSPROPERTY_TYPE_GET = 0x1,KSPROPERTY_TYPE_SET = 0x2,KSPROPERTY_TYPE_SETSUPPORT = 0x100,KSPROPERTY_TYPE_BASICSUPPORT = 0x200,KSPROPERTY_TYPE_RELATIONS = 0x400,KSPROPERTY_TYPE_SERIALIZESET = 0x800,KSPROPERTY_TYPE_UNSERIALIZESET = 0x1000,KSPROPERTY_TYPE_SERIALIZERAW = 0x2000,KSPROPERTY_TYPE_UNSERIALIZERAW = 0x4000,KSPROPERTY_TYPE_SERIALIZESIZE = 0x8000,KSPROPERTY_TYPE_DEFAULTVALUES = 0x10000,KSPROPERTY_TYPE_TOPOLOGY = 0x10000000,KSPROPERTY_MEMBER_RANGES = 0x1,KSPROPERTY_MEMBER_STEPPEDRANGES = 0x2,KSPROPERTY_MEMBER_VALUES = 0x3,KSPROPERTY_MEMBER_FLAG_DEFAULT = 0x1,KSPROPERTY_MEMBER_FLAG_BASICSUPPORT_MULTICHANNEL = 0x2,KSPROPERTY_MEMBER_FLAG_BASICSUPPORT_UNIFORM = 0x4,};
enum MACRO_KSPROPERTY_VIDEOPROCAMP {KSPROPERTY_VIDEOPROCAMP_FLAGS_AUTO = 0x1,KSPROPERTY_VIDEOPROCAMP_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_FLAGS_AUTO = 0x1,KSPROPERTY_CAMERACONTROL_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_FLAGS_ABSOLUTE = 0x0,KSPROPERTY_CAMERACONTROL_FLAGS_RELATIVE = 0x10,};
enum MACRO_KSRATE {KSRATE_NOPRESENTATIONSTART = 0x1,KSRATE_NOPRESENTATIONDURATION = 0x2,};
enum MACRO_KSRELATIVEEVENT {KSRELATIVEEVENT_FLAG_HANDLE = 0x1,KSRELATIVEEVENT_FLAG_POINTER = 0x2,};
enum MACRO_KSSTREAM {KSSTREAM_HEADER_OPTIONSF_SPLICEPOINT = 0x1,KSSTREAM_HEADER_OPTIONSF_PREROLL = 0x2,KSSTREAM_HEADER_OPTIONSF_DATADISCONTINUITY = 0x4,KSSTREAM_HEADER_OPTIONSF_TYPECHANGED = 0x8,KSSTREAM_HEADER_OPTIONSF_TIMEVALID = 0x10,KSSTREAM_HEADER_OPTIONSF_TIMEDISCONTINUITY = 0x40,KSSTREAM_HEADER_OPTIONSF_FLUSHONPAUSE = 0x80,KSSTREAM_HEADER_OPTIONSF_DURATIONVALID = 0x100,KSSTREAM_HEADER_OPTIONSF_ENDOFSTREAM = 0x200,KSSTREAM_HEADER_OPTIONSF_LOOPEDDATA = 0x80000000,};
enum MACRO_KSSTREAM_READ {KSSTREAM_READ = 0,KSSTREAM_WRITE = 1,KSSTREAM_PAGED_DATA = 0,KSSTREAM_NONPAGED_DATA = 256,KSSTREAM_SYNCHRONOUS = 4096,KSSTREAM_FAILUREEXCEPTION = 8192,};
enum MACRO_KSWAVE {KSWAVE_COMPATCAPS_INPUT = 0x0,KSWAVE_COMPATCAPS_OUTPUT = 0x1,KSWAVE_BUFFER_ATTRIBUTEF_LOOPING = 0x1,KSWAVE_BUFFER_ATTRIBUTEF_STATIC = 0x2,};
enum MACRO_KS_AM {KS_AM_UseNewCSSKey = 0x1,};
enum MACRO_KS_CC {KS_CC_SUBSTREAM_ODD = 0x1,KS_CC_SUBSTREAM_EVEN = 0x2,KS_CC_SUBSTREAM_FIELD1_MASK = 0xF0,KS_CC_SUBSTREAM_SERVICE_CC1 = 0x10,KS_CC_SUBSTREAM_SERVICE_CC2 = 0x20,KS_CC_SUBSTREAM_SERVICE_T1 = 0x40,KS_CC_SUBSTREAM_SERVICE_T2 = 0x80,KS_CC_SUBSTREAM_FIELD2_MASK = 0x1F00,KS_CC_SUBSTREAM_SERVICE_CC3 = 0x100,KS_CC_SUBSTREAM_SERVICE_CC4 = 0x200,KS_CC_SUBSTREAM_SERVICE_T3 = 0x400,KS_CC_SUBSTREAM_SERVICE_T4 = 0x800,KS_CC_SUBSTREAM_SERVICE_XDS = 0x1000,};
enum MACRO_KS_TVAUDIO {KS_TVAUDIO_MODE_MONO = 0x1,KS_TVAUDIO_MODE_STEREO = 0x2,KS_TVAUDIO_MODE_LANG_A = 0x10,KS_TVAUDIO_MODE_LANG_B = 0x20,KS_TVAUDIO_MODE_LANG_C = 0x40,};
enum MACRO_KS_VIDEO {KS_VIDEO_FLAG_FRAME = 0x0,KS_VIDEO_FLAG_FIELD1 = 0x1,KS_VIDEO_FLAG_FIELD2 = 0x2,KS_VIDEO_FLAG_I_FRAME = 0x0,KS_VIDEO_FLAG_P_FRAME = 0x10,KS_VIDEO_FLAG_B_FRAME = 0x20,KS_VBI_FLAG_FIELD1 = 0x1,KS_VBI_FLAG_FIELD2 = 0x2,KS_VBI_FLAG_MV_PRESENT = 0x100,KS_VBI_FLAG_MV_HARDWARE = 0x200,KS_VBI_FLAG_MV_DETECTED = 0x400,KS_VBI_FLAG_TVTUNER_CHANGE = 0x10,KS_VBI_FLAG_VBIINFOHEADER_CHANGE = 0x20,KS_AnalogVideo_NTSC_Mask = 0x7,KS_AnalogVideo_PAL_Mask = 0x100FF0,KS_AnalogVideo_SECAM_Mask = 0xFF000,};
enum MACRO_LANG {LANG_NEUTRAL = 0x0,LANG_INVARIANT = 0x7F,LANG_AFRIKAANS = 0x36,LANG_ALBANIAN = 0x1C,LANG_ARABIC = 0x1,LANG_ARMENIAN = 0x2B,LANG_ASSAMESE = 0x4D,LANG_AZERI = 0x2C,LANG_BASQUE = 0x2D,LANG_BELARUSIAN = 0x23,LANG_BENGALI = 0x45,LANG_BULGARIAN = 0x2,LANG_CATALAN = 0x3,LANG_CHINESE = 0x4,LANG_CROATIAN = 0x1A,LANG_CZECH = 0x5,LANG_DANISH = 0x6,LANG_DIVEHI = 0x65,LANG_DUTCH = 0x13,LANG_ENGLISH = 0x9,LANG_ESTONIAN = 0x25,LANG_FAEROESE = 0x38,LANG_FARSI = 0x29,LANG_FINNISH = 0xB,LANG_FRENCH = 0xC,LANG_GALICIAN = 0x56,LANG_GEORGIAN = 0x37,LANG_GERMAN = 0x7,LANG_GREEK = 0x8,LANG_GUJARATI = 0x47,LANG_HEBREW = 0xD,LANG_HINDI = 0x39,LANG_HUNGARIAN = 0xE,LANG_ICELANDIC = 0xF,LANG_INDONESIAN = 0x21,LANG_ITALIAN = 0x10,LANG_JAPANESE = 0x11,LANG_KANNADA = 0x4B,LANG_KASHMIRI = 0x60,LANG_KAZAK = 0x3F,LANG_KONKANI = 0x57,LANG_KOREAN = 0x12,LANG_KYRGYZ = 0x40,LANG_LATVIAN = 0x26,LANG_LITHUANIAN = 0x27,LANG_MACEDONIAN = 0x2F,LANG_MALAY = 0x3E,LANG_MALAYALAM = 0x4C,LANG_MANIPURI = 0x58,LANG_MARATHI = 0x4E,LANG_MONGOLIAN = 0x50,LANG_NEPALI = 0x61,LANG_NORWEGIAN = 0x14,LANG_ORIYA = 0x48,LANG_POLISH = 0x15,LANG_PORTUGUESE = 0x16,LANG_PUNJABI = 0x46,LANG_ROMANIAN = 0x18,LANG_RUSSIAN = 0x19,LANG_SANSKRIT = 0x4F,LANG_SERBIAN = 0x1A,LANG_SINDHI = 0x59,LANG_SLOVAK = 0x1B,LANG_SLOVENIAN = 0x24,LANG_SPANISH = 0xA,LANG_SWAHILI = 0x41,LANG_SWEDISH = 0x1D,LANG_SYRIAC = 0x5A,LANG_TAMIL = 0x49,LANG_TATAR = 0x44,LANG_TELUGU = 0x4A,LANG_THAI = 0x1E,LANG_TURKISH = 0x1F,LANG_UKRAINIAN = 0x22,LANG_URDU = 0x20,LANG_UZBEK = 0x43,LANG_VIETNAMESE = 0x2A,};
enum MACRO_LANG_SYSTEM {LANG_SYSTEM_DEFAULT = 2048,LANG_USER_DEFAULT = 1024,};
enum MACRO_LAST {LAST_CHANCE_CALLED_FROM_KMODE = 0x15,};
enum MACRO_LENGTH {NORMAL_DISPATCH_LENGTH = 106,DISPATCH_LENGTH = 106,};
enum MACRO_LEVEL {PASSIVE_LEVEL = 0,LOW_LEVEL = 0,APC_LEVEL = 1,DISPATCH_LEVEL = 2,PROFILE_LEVEL = 27,CLOCK1_LEVEL = 28,CLOCK2_LEVEL = 28,IPI_LEVEL = 29,POWER_LEVEL = 30,HIGH_LEVEL = 31,SYNCH_LEVEL = 27,};
enum MACRO_LM {LM_SERVER_INTERNAL_ERROR = 0x54,};
enum MACRO_LOCAL {LOCAL_BUS = 0x3FF,};
enum MACRO_LOCALE {LOCALE_SYSTEM_DEFAULT = 2048,LOCALE_USER_DEFAULT = 1024,LOCALE_NEUTRAL = 0,LOCALE_INVARIANT = 127,};
enum MACRO_LOCATION {NODE_IDS_LOCATION = 0x8,RESET_START_LOCATION = 0xC,SPLIT_TIMEOUT_HI_LOCATION = 0x18,SPLIT_TIMEOUT_LO_LOCATION = 0x1C,INTERRUPT_TARGET_LOCATION = 0x50,INTERRUPT_MASK_LOCATION = 0x54,CYCLE_TIME_LOCATION = 0x200,BUS_TIME_LOCATION = 0x204,POWER_FAIL_IMMINENT_LOCATION = 0x208,POWER_SOURCE_LOCATION = 0x20C,BUSY_TIMEOUT_LOCATION = 0x210,BUS_MANAGER_ID_LOCATION = 0x21C,BANDWIDTH_AVAILABLE_LOCATION = 0x220,CHANNELS_AVAILABLE_LOCATION = 0x224,NETWORK_CHANNELS_LOCATION = 0x234,CONFIG_ROM_LOCATION = 0x400,TOPOLOGY_MAP_LOCATION = 0x1000,SPEED_MAP_LOCATION = 0x2000,};
enum MACRO_LOCK {LOCK_TRANSACTION_MASK_SWAP = 1,LOCK_TRANSACTION_COMPARE_SWAP = 2,LOCK_TRANSACTION_FETCH_ADD = 3,LOCK_TRANSACTION_LITTLE_ADD = 4,LOCK_TRANSACTION_BOUNDED_ADD = 5,LOCK_TRANSACTION_WRAP_ADD = 6,};
enum MACRO_LOCKED {LOCKED_PAGES_TRACKER_CORRUPTION = 0xD9,};
enum MACRO_LOCK_CTL {LOCK_CTL = 2,};
enum MACRO_LONG {LONG_LEAST_SIGNIFICANT_BIT = 0,LONG_3RD_MOST_SIGNIFICANT_BIT = 1,LONG_2ND_MOST_SIGNIFICANT_BIT = 2,LONG_MOST_SIGNIFICANT_BIT = 3,};
enum MACRO_LOW {LOW_PRIORITY = 0,LOW_REALTIME_PRIORITY = 16,};
enum MACRO_LOWBYTE {LOWBYTE_MASK = 0xFF,};
enum MACRO_MACHINE {MACHINE_CHECK_EXCEPTION = 0x9C,};
enum MACRO_MAILSLOT {MAILSLOT_FILE_SYSTEM = 0x52,};
enum MACRO_MANUALLY {MANUALLY_INITIATED_CRASH = 0xE2,};
enum MACRO_MANUALLY_INITIATED : __int64 {MANUALLY_INITIATED_CRASH1 = 0xDEADDEAD,};
enum MACRO_MASK {MASK_AUX_50_60_BIT = 0x200000,};
enum MACRO_MAX {MAX_PATH = 260,};
enum MACRO_MAXCHAR {MAXCHAR = 0x7F,MINSHORT = 0x8000,};
enum MACRO_MAXIMUM {MAXIMUM_WAIT_OBJECTS_EXCEEDED = 0xC,};
enum MACRO_MAXIMUM_ALLOWED {MAXIMUM_ALLOWED = 0x2000000,};
enum MACRO_MAXIMUM_FILENAME {MAXIMUM_FILENAME_LENGTH = 256,};
enum MACRO_MAXIMUM_PROCESSORS {MAXIMUM_PROCESSORS = 32,};
enum MACRO_MAXIMUM_USB {MAXIMUM_USB_STRING_LENGTH = 255,};
enum MACRO_MAXIMUM_WAIT {MAXIMUM_WAIT_OBJECTS = 64,MAXIMUM_SUSPEND_COUNT = 127,};
enum MACRO_MAXLONG {MAXLONG = 0x7FFFFFFF,};
enum MACRO_MAXLONGLONG : __int64 {MAXLONGLONG = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_MAXSHORT {MAXSHORT = 0x7FFF,MINLONG = 0x80000000,};
enum MACRO_MAXUCHAR {MAXUCHAR = 0xFF,};
enum MACRO_MAXULONG {MAXULONG = 0xFFFFFFFF,};
enum MACRO_MAXUSHORT {MAXUSHORT = 0xFFFF,};
enum MACRO_MAX_AVC {MAX_AVC_SUBUNITINFO_PAGES = 8,MAX_AVC_SUBUNITINFO_BYTES = 4,};
enum MACRO_MAX_AVC_OPERAND {MAX_AVC_OPERAND_BYTES = 509,};
enum MACRO_MAX_BAY {MAX_BAY_NUMBER = 31,};
enum MACRO_MAX_LOCAL {MAX_LOCAL_NODES = 64,};
enum MACRO_MAX_NABTS {MAX_NABTS_VBI_LINES_PER_FIELD = 11,};
enum MACRO_MAX_REC {MAX_REC_100_RATE = 0x8,MAX_REC_200_RATE = 0x9,MAX_REC_400_RATE = 0xA,};
enum MACRO_MAX_WST {MAX_WST_VBI_LINES_PER_FIELD = 17,};
enum MACRO_MBR {MBR_CHECKSUM_MISMATCH = 0x8B,};
enum MACRO_MCA {MCA_WARNING_CACHE = 0x8005003C,MCA_ERROR_CACHE = 0xC005003D,MCA_WARNING_TLB = 0x8005003E,MCA_ERROR_TLB = 0xC005003F,MCA_WARNING_CPU_BUS = 0x80050040,MCA_ERROR_CPU_BUS = 0xC0050041,MCA_WARNING_REGISTER_FILE = 0x80050042,MCA_ERROR_REGISTER_FILE = 0xC0050043,MCA_WARNING_MAS = 0x80050044,MCA_ERROR_MAS = 0xC0050045,MCA_WARNING_MEM_UNKNOWN = 0x80050046,MCA_ERROR_MEM_UNKNOWN = 0xC0050047,MCA_WARNING_MEM_1_2 = 0x80050048,MCA_ERROR_MEM_1_2 = 0xC0050049,MCA_WARNING_MEM_1_2_5 = 0x8005004A,MCA_ERROR_MEM_1_2_5 = 0xC005004B,MCA_WARNING_MEM_1_2_5_4 = 0x8005004C,MCA_ERROR_MEM_1_2_5_4 = 0xC005004D,MCA_WARNING_SYSTEM_EVENT = 0x8005004E,MCA_ERROR_SYSTEM_EVENT = 0xC005004F,MCA_WARNING_PCI_BUS_PARITY = 0x80050050,MCA_ERROR_PCI_BUS_PARITY = 0xC0050051,MCA_WARNING_PCI_BUS_PARITY_NO_INFO = 0x80050052,MCA_ERROR_PCI_BUS_PARITY_NO_INFO = 0xC0050053,MCA_WARNING_PCI_BUS_SERR = 0x80050054,MCA_ERROR_PCI_BUS_SERR = 0xC0050055,MCA_WARNING_PCI_BUS_SERR_NO_INFO = 0x80050056,MCA_ERROR_PCI_BUS_SERR_NO_INFO = 0xC0050057,MCA_WARNING_PCI_BUS_MASTER_ABORT = 0x80050058,MCA_ERROR_PCI_BUS_MASTER_ABORT = 0xC0050059,MCA_WARNING_PCI_BUS_MASTER_ABORT_NO_INFO = 0x8005005A,MCA_ERROR_PCI_BUS_MASTER_ABORT_NO_INFO = 0xC005005B,MCA_WARNING_PCI_BUS_TIMEOUT = 0x8005005C,MCA_ERROR_PCI_BUS_TIMEOUT = 0xC005005D,MCA_WARNING_PCI_BUS_TIMEOUT_NO_INFO = 0x8005005E,MCA_ERROR_PCI_BUS_TIMEOUT_NO_INFO = 0xC005005F,MCA_WARNING_PCI_BUS_UNKNOWN = 0x80050060,MCA_ERROR_PCI_BUS_UNKNOWN = 0xC0050061,MCA_WARNING_PCI_DEVICE = 0x80050062,MCA_ERROR_PCI_DEVICE = 0xC0050063,MCA_WARNING_SMBIOS = 0x80050064,MCA_ERROR_SMBIOS = 0xC0050065,MCA_WARNING_PLATFORM_SPECIFIC = 0x80050066,MCA_ERROR_PLATFORM_SPECIFIC = 0xC0050067,MCA_WARNING_UNKNOWN = 0x80050068,MCA_ERROR_UNKNOWN = 0xC0050069,MCA_WARNING_UNKNOWN_NO_CPU = 0x8005006A,MCA_ERROR_UNKNOWN_NO_CPU = 0xC005006B,};
enum MACRO_MCACpuCacheError {MCACpuCacheError = 0,MCACpuTlbError = 1,MCACpuBusError = 2,};
enum MACRO_MCACpuRegFileError {MCACpuRegFileError = 3,MCACpuMSError = 4,};
enum MACRO_MCA_EXTREG {MCA_EXTREG_V2MAX = 24,};
enum MACRO_MCA_WARNING {MCA_WARNING_CMC_THRESHOLD_EXCEEDED = 0x8005006D,MCA_WARNING_CPE_THRESHOLD_EXCEEDED = 0x8005006E,MCA_WARNING_CPU_THERMAL_THROTTLED = 0x8005006F,MCA_INFO_CPU_THERMAL_THROTTLING_REMOVED = 0x40050070,MCA_WARNING_CPU = 0x80050071,MCA_ERROR_CPU = 0xC0050072,MCA_INFO_NO_MORE_CORRECTED_ERROR_LOGS = 0x40050073,MCA_INFO_MEMORY_PAGE_MARKED_BAD = 0x40050074,};
enum MACRO_MDL {MDL_MAPPED_TO_SYSTEM_VA = 0x1,MDL_PAGES_LOCKED = 0x2,MDL_SOURCE_IS_NONPAGED_POOL = 0x4,MDL_ALLOCATED_FIXED_SIZE = 0x8,MDL_PARTIAL = 0x10,MDL_PARTIAL_HAS_BEEN_MAPPED = 0x20,MDL_IO_PAGE_READ = 0x40,MDL_WRITE_OPERATION = 0x80,MDL_PARENT_MAPPED_SYSTEM_VA = 0x100,MDL_FREE_EXTRA_PTES = 0x200,MDL_DESCRIBES_AWE = 0x400,MDL_IO_SPACE = 0x800,MDL_NETWORK_HEADER = 0x1000,MDL_MAPPING_CAN_FAIL = 0x2000,MDL_ALLOCATED_MUST_SUCCEED = 0x4000,};
enum MACRO_MEM {MEM_COMMIT = 0x1000,MEM_RESERVE = 0x2000,MEM_DECOMMIT = 0x4000,MEM_RELEASE = 0x8000,MEM_FREE = 0x10000,MEM_PRIVATE = 0x20000,MEM_MAPPED = 0x40000,MEM_RESET = 0x80000,MEM_TOP_DOWN = 0x100000,MEM_LARGE_PAGES = 0x20000000,MEM_4MB_PAGES = 0x80000000,};
enum MACRO_MEMORY {MEMORY_ALLOCATION_ALIGNMENT = 8,};
enum MACRO_MEMORY_IMAGE {MEMORY_IMAGE_CORRUPT = 0xA2,};
enum MACRO_MEMORY_MANAGEMENT {MEMORY_MANAGEMENT = 0x1A,};
enum MACRO_METHOD {METHOD_BUFFERED = 0,METHOD_IN_DIRECT = 1,METHOD_OUT_DIRECT = 2,METHOD_NEITHER = 3,METHOD_DIRECT_TO_HARDWARE = 1,METHOD_DIRECT_FROM_HARDWARE = 2,};
enum MACRO_MIN {MIN_DIMENSION = 1,};
enum MACRO_MINCHAR {MINCHAR = 0x80,};
enum MACRO_MIN_DEV {MIN_DEV_VER_FOR_QI = 0x100,};
enum MACRO_MISMATCHED {MISMATCHED_HAL = 0x79,};
enum MACRO_MM {MM_MAXIMUM_DISK_IO_SIZE = 0x10000,};
enum MACRO_MM_CHROMATIC {MM_CHROMATIC_M1 = 0x1,MM_CHROMATIC_M1_WAVEIN = 0x2,MM_CHROMATIC_M1_WAVEOUT = 0x3,MM_CHROMATIC_M1_FMSYNTH = 0x4,MM_CHROMATIC_M1_MIXER = 0x5,MM_CHROMATIC_M1_AUX = 0x6,MM_CHROMATIC_M1_AUX_CD = 0x7,MM_CHROMATIC_M1_MIDIIN = 0x8,MM_CHROMATIC_M1_MIDIOUT = 0x9,MM_CHROMATIC_M1_WTSYNTH = 0x10,MM_CHROMATIC_M1_MPEGWAVEIN = 0x11,MM_CHROMATIC_M1_MPEGWAVEOUT = 0x12,MM_CHROMATIC_M2 = 0x13,MM_CHROMATIC_M2_WAVEIN = 0x14,MM_CHROMATIC_M2_WAVEOUT = 0x15,MM_CHROMATIC_M2_FMSYNTH = 0x16,MM_CHROMATIC_M2_MIXER = 0x17,MM_CHROMATIC_M2_AUX = 0x18,MM_CHROMATIC_M2_AUX_CD = 0x19,MM_CHROMATIC_M2_MIDIIN = 0x20,MM_CHROMATIC_M2_MIDIOUT = 0x21,MM_CHROMATIC_M2_WTSYNTH = 0x22,MM_CHROMATIC_M2_MPEGWAVEIN = 0x23,MM_CHROMATIC_M2_MPEGWAVEOUT = 0x24,MM_VIENNASYS_TSP_WAVE_DRIVER = 0x1,MM_CONNECTIX_VIDEC_CODEC = 0x1,MM_GADGETLABS_WAVE44_WAVEIN = 0x1,MM_GADGETLABS_WAVE44_WAVEOUT = 0x2,MM_GADGETLABS_WAVE42_WAVEIN = 0x3,MM_GADGETLABS_WAVE42_WAVEOUT = 0x4,MM_GADGETLABS_WAVE4_MIDIIN = 0x5,MM_GADGETLABS_WAVE4_MIDIOUT = 0x6,MM_FRONTIER_WAVECENTER_MIDIIN = 0x1,MM_FRONTIER_WAVECENTER_MIDIOUT = 0x2,MM_FRONTIER_WAVECENTER_WAVEIN = 0x3,MM_FRONTIER_WAVECENTER_WAVEOUT = 0x4,MM_VIONA_QVINPCI_MIXER = 0x1,MM_VIONA_QVINPCI_WAVEIN = 0x2,MM_VIONAQVINPCI_WAVEOUT = 0x3,MM_VIONA_BUSTER_MIXER = 0x4,MM_VIONA_CINEMASTER_MIXER = 0x5,MM_VIONA_CONCERTO_MIXER = 0x6,MM_CASIO_WP150_MIDIOUT = 0x1,MM_CASIO_WP150_MIDIIN = 0x2,MM_CASIO_LSG_MIDIOUT = 0x3,MM_DIMD_PLATFORM = 0x0,MM_DIMD_DIRSOUND = 0x1,MM_DIMD_VIRTMPU = 0x2,MM_DIMD_VIRTSB = 0x3,MM_DIMD_VIRTJOY = 0x4,MM_DIMD_WAVEIN = 0x5,MM_DIMD_WAVEOUT = 0x6,MM_DIMD_MIDIIN = 0x7,MM_DIMD_MIDIOUT = 0x8,MM_DIMD_AUX_LINE = 0x9,MM_DIMD_MIXER = 0xA,MM_DIMD_WSS_WAVEIN = 0xE,MM_DIMD_WSS_WAVEOUT = 0xF,MM_DIMD_WSS_MIXER = 0x11,MM_DIMD_WSS_AUX = 0x15,MM_DIMD_WSS_SYNTH = 0x4C,MM_S3_WAVEOUT = 0x1,MM_S3_WAVEIN = 0x2,MM_S3_MIDIOUT = 0x3,MM_S3_MIDIIN = 0x4,MM_S3_FMSYNTH = 0x5,MM_S3_MIXER = 0x6,MM_S3_AUX = 0x7,MM_VKC_MPU401_MIDIIN = 0x100,MM_VKC_SERIAL_MIDIIN = 0x101,MM_VKC_MPU401_MIDIOUT = 0x200,MM_VKC_SERIAL_MIDIOUT = 0x201,MM_ZEFIRO_ZA2 = 0x2,MM_FHGIIS_MPEGLAYER3 = 0xA,MM_QUICKNET_PJWAVEIN = 0x1,MM_QUICKNET_PJWAVEOUT = 0x2,MM_SICRESOURCE_SSO3D = 0x2,MM_SICRESOURCE_SSOW3DI = 0x3,MM_NEOMAGIC_SYNTH = 0x1,MM_NEOMAGIC_WAVEOUT = 0x2,MM_NEOMAGIC_WAVEIN = 0x3,MM_NEOMAGIC_MIDIOUT = 0x4,MM_NEOMAGIC_MIDIIN = 0x5,MM_NEOMAGIC_AUX = 0x6,MM_NEOMAGIC_MW3DX_WAVEOUT = 0xA,MM_NEOMAGIC_MW3DX_WAVEIN = 0xB,MM_NEOMAGIC_MW3DX_MIDIOUT = 0xC,MM_NEOMAGIC_MW3DX_MIDIIN = 0xD,MM_NEOMAGIC_MW3DX_FMSYNTH = 0xE,MM_NEOMAGIC_MW3DX_GMSYNTH = 0xF,MM_NEOMAGIC_MW3DX_MIXER = 0x10,MM_NEOMAGIC_MW3DX_AUX = 0x11,MM_NEOMAGIC_MWAVE_WAVEOUT = 0x14,MM_NEOMAGIC_MWAVE_WAVEIN = 0x15,MM_NEOMAGIC_MWAVE_MIDIOUT = 0x16,MM_NEOMAGIC_MWAVE_MIDIIN = 0x17,MM_NEOMAGIC_MWAVE_MIXER = 0x18,MM_NEOMAGIC_MWAVE_AUX = 0x19,MM_MERGING_MPEGL3 = 0x1,MM_XIRLINK_VISIONLINK = 0x1,MM_OTI_611WAVEIN = 0x5,MM_OTI_611WAVEOUT = 0x6,MM_OTI_611MIXER = 0x7,MM_OTI_611MIDIN = 0x12,MM_OTI_611MIDIOUT = 0x13,MM_AUREAL_AU8820 = 0x10,MM_AU8820_SYNTH = 0x11,MM_AU8820_WAVEOUT = 0x12,MM_AU8820_WAVEIN = 0x13,MM_AU8820_MIXER = 0x14,MM_AU8820_AUX = 0x15,MM_AU8820_MIDIOUT = 0x16,MM_AU8820_MIDIIN = 0x17,MM_AUREAL_AU8830 = 0x20,MM_AU8830_SYNTH = 0x21,MM_AU8830_WAVEOUT = 0x22,MM_AU8830_WAVEIN = 0x23,MM_AU8830_MIXER = 0x24,MM_AU8830_AUX = 0x25,MM_AU8830_MIDIOUT = 0x26,MM_AU8830_MIDIIN = 0x27,MM_VIVO_AUDIO_CODEC = 0x1,MM_SHARP_MDC_MIDI_SYNTH = 0x1,MM_SHARP_MDC_MIDI_IN = 0x2,MM_SHARP_MDC_MIDI_OUT = 0x3,MM_SHARP_MDC_WAVE_IN = 0x4,MM_SHARP_MDC_WAVE_OUT = 0x5,MM_SHARP_MDC_AUX = 0x6,MM_SHARP_MDC_MIXER = 0xA,MM_SHARP_MDC_AUX_MASTER = 0x64,MM_SHARP_MDC_AUX_BASS = 0x65,MM_SHARP_MDC_AUX_TREBLE = 0x66,MM_SHARP_MDC_AUX_MIDI_VOL = 0x67,MM_SHARP_MDC_AUX_WAVE_VOL = 0x68,MM_SHARP_MDC_AUX_WAVE_RVB = 0x69,MM_SHARP_MDC_AUX_WAVE_CHR = 0x6A,MM_SHARP_MDC_AUX_VOL = 0x6B,MM_SHARP_MDC_AUX_RVB = 0x6C,MM_SHARP_MDC_AUX_CHR = 0x6D,MM_LUCENT_ACM_G723 = 0x0,MM_ATT_G729A = 0x1,MM_MARIAN_ARC44WAVEIN = 0x1,MM_MARIAN_ARC44WAVEOUT = 0x2,MM_MARIAN_PRODIF24WAVEIN = 0x3,MM_MARIAN_PRODIF24WAVEOUT = 0x4,MM_MARIAN_ARC88WAVEIN = 0x5,MM_MARIAN_ARC88WAVEOUT = 0x6,MM_BCB_NETBOARD_10 = 0x1,MM_BCB_TT75_10 = 0x2,MM_MOTIONPIXELS_MVI2 = 0x1,MM_QDESIGN_ACM_MPEG = 0x1,MM_QDESIGN_ACM_QDESIGN_MUSIC = 0x2,MM_NMP_CCP_WAVEIN = 0x1,MM_NMP_CCP_WAVEOUT = 0x2,MM_NMP_ACM_AMR = 0xA,MM_DF_ACM_G726 = 0x1,MM_DF_ACM_GSM610 = 0x2,MM_BERCOS_WAVEIN = 0x1,MM_BERCOS_MIXER = 0x2,MM_BERCOS_WAVEOUT = 0x3,MM_ONLIVE_MPCODEC = 0x1,MM_PHONET_PP_WAVEOUT = 0x1,MM_PHONET_PP_WAVEIN = 0x2,MM_PHONET_PP_MIXER = 0x3,MM_FTR_ENCODER_WAVEIN = 0x1,MM_FTR_ACM = 0x2,MM_ENET_T2000_LINEIN = 0x1,MM_ENET_T2000_LINEOUT = 0x2,MM_ENET_T2000_HANDSETIN = 0x3,MM_ENET_T2000_HANDSETOUT = 0x4,MM_EMAGIC_UNITOR8 = 0x1,MM_SIPROLAB_ACELPNET = 0x1,MM_DICTAPHONE_G726 = 0x1,MM_RZS_ACM_TUBGSM = 0x1,MM_EES_PCMIDI14 = 0x1,MM_EES_PCMIDI14_IN = 0x2,MM_EES_PCMIDI14_OUT1 = 0x3,MM_EES_PCMIDI14_OUT2 = 0x4,MM_EES_PCMIDI14_OUT3 = 0x5,MM_EES_PCMIDI14_OUT4 = 0x6,MM_HAFTMANN_LPTDAC2 = 0x1,MM_LUCID_PCI24WAVEIN = 0x1,MM_LUCID_PCI24WAVEOUT = 0x2,MM_HEADSPACE_HAESYNTH = 0x1,MM_HEADSPACE_HAEWAVEOUT = 0x2,MM_HEADSPACE_HAEWAVEIN = 0x3,MM_HEADSPACE_HAEMIXER = 0x4,MM_UNISYS_ACM_NAP = 0x1,MM_LUMINOSITI_SCWAVEIN = 0x1,MM_LUMINOSITI_SCWAVEOUT = 0x2,MM_LUMINOSITI_SCWAVEMIX = 0x3,MM_ACTIVEVOICE_ACM_VOXADPCM = 0x1,MM_DTS_DS = 0x1,MM_SOFTLAB_NSK_FRW_WAVEIN = 0x1,MM_SOFTLAB_NSK_FRW_WAVEOUT = 0x2,MM_SOFTLAB_NSK_FRW_MIXER = 0x3,MM_SOFTLAB_NSK_FRW_AUX = 0x4,MM_FORTEMEDIA_WAVEIN = 0x1,MM_FORTEMEDIA_WAVEOUT = 0x2,MM_FORTEMEDIA_FMSYNC = 0x3,MM_FORTEMEDIA_MIXER = 0x4,MM_FORTEMEDIA_AUX = 0x5,MM_SONORUS_STUDIO = 0x1,MM_I_LINK_VOICE_CODER = 0x1,MM_SELSIUS_SYSTEMS_RTPWAVEOUT = 0x1,MM_SELSIUS_SYSTEMS_RTPWAVEIN = 0x2,MM_ADMOS_FM_SYNTH = 0x1,MM_ADMOS_QS3AMIDIOUT = 0x2,MM_ADMOS_QS3AMIDIIN = 0x3,MM_ADMOS_QS3AWAVEOUT = 0x4,MM_ADMOS_QS3AWAVEIN = 0x5,MM_LEXICON_STUDIO_WAVE_OUT = 0x1,MM_LEXICON_STUDIO_WAVE_IN = 0x2,MM_SGI_320_WAVEIN = 0x1,MM_SGI_320_WAVEOUT = 0x2,MM_SGI_320_MIXER = 0x3,MM_SGI_540_WAVEIN = 0x4,MM_SGI_540_WAVEOUT = 0x5,MM_SGI_540_MIXER = 0x6,MM_SGI_RAD_ADATMONO1_WAVEIN = 0x7,MM_SGI_RAD_ADATMONO2_WAVEIN = 0x8,MM_SGI_RAD_ADATMONO3_WAVEIN = 0x9,MM_SGI_RAD_ADATMONO4_WAVEIN = 0xA,MM_SGI_RAD_ADATMONO5_WAVEIN = 0xB,MM_SGI_RAD_ADATMONO6_WAVEIN = 0xC,MM_SGI_RAD_ADATMONO7_WAVEIN = 0xD,MM_SGI_RAD_ADATMONO8_WAVEIN = 0xE,MM_SGI_RAD_ADATSTEREO12_WAVEIN = 0xF,MM_SGI_RAD_ADATSTEREO34_WAVEIN = 0x10,MM_SGI_RAD_ADATSTEREO56_WAVEIN = 0x11,MM_SGI_RAD_ADATSTEREO78_WAVEIN = 0x12,MM_SGI_RAD_ADAT8CHAN_WAVEIN = 0x13,MM_SGI_RAD_ADATMONO1_WAVEOUT = 0x14,MM_SGI_RAD_ADATMONO2_WAVEOUT = 0x15,MM_SGI_RAD_ADATMONO3_WAVEOUT = 0x16,MM_SGI_RAD_ADATMONO4_WAVEOUT = 0x17,MM_SGI_RAD_ADATMONO5_WAVEOUT = 0x18,MM_SGI_RAD_ADATMONO6_WAVEOUT = 0x19,MM_SGI_RAD_ADATMONO7_WAVEOUT = 0x1A,MM_SGI_RAD_ADATMONO8_WAVEOUT = 0x1B,MM_SGI_RAD_ADATSTEREO12_WAVEOUT = 0x1C,MM_SGI_RAD_ADATSTEREO32_WAVEOUT = 0x1D,MM_SGI_RAD_ADATSTEREO56_WAVEOUT = 0x1E,MM_SGI_RAD_ADATSTEREO78_WAVEOUT = 0x1F,MM_SGI_RAD_ADAT8CHAN_WAVEOUT = 0x20,MM_SGI_RAD_AESMONO1_WAVEIN = 0x21,MM_SGI_RAD_AESMONO2_WAVEIN = 0x22,MM_SGI_RAD_AESSTEREO_WAVEIN = 0x23,MM_SGI_RAD_AESMONO1_WAVEOUT = 0x24,MM_SGI_RAD_AESMONO2_WAVEOUT = 0x25,MM_SGI_RAD_AESSTEREO_WAVEOUT = 0x26,MM_IPI_ACM_HSX = 0x1,MM_IPI_ACM_RPELP = 0x2,MM_IPI_WF_ASSS = 0x3,MM_IPI_AT_WAVEOUT = 0x4,MM_IPI_AT_WAVEIN = 0x5,MM_IPI_AT_MIXER = 0x6,MM_ICE_WAVEOUT = 0x1,MM_ICE_WAVEIN = 0x2,MM_ICE_MTWAVEOUT = 0x3,MM_ICE_MTWAVEIN = 0x4,MM_ICE_MIDIOUT1 = 0x5,MM_ICE_MIDIIN1 = 0x6,MM_ICE_MIDIOUT2 = 0x7,MM_ICE_MIDIIN2 = 0x8,MM_ICE_SYNTH = 0x9,MM_ICE_MIXER = 0xA,MM_ICE_AUX = 0xB,MM_VQST_VQC1 = 0x1,MM_VQST_VQC2 = 0x2,MM_ETEK_KWIKMIDI_MIDIIN = 0x1,MM_ETEK_KWIKMIDI_MIDIOUT = 0x2,MM_INTERNET_SSW_MIDIOUT = 0xA,MM_INTERNET_SSW_MIDIIN = 0xB,MM_INTERNET_SSW_WAVEOUT = 0xC,MM_INTERNET_SSW_WAVEIN = 0xD,MM_SONY_ACM_SCX = 0x1,MM_UH_ACM_ADPCM = 0x1,MM_SYDEC_NV_WAVEIN = 0x1,MM_SYDEC_NV_WAVEOUT = 0x2,MM_FLEXION_X300_WAVEIN = 0x1,MM_FLEXION_X300_WAVEOUT = 0x2,MM_VIA_WAVEOUT = 0x1,MM_VIA_WAVEIN = 0x2,MM_VIA_MIXER = 0x3,MM_VIA_AUX = 0x4,MM_VIA_MPU401_MIDIOUT = 0x5,MM_VIA_MPU401_MIDIIN = 0x6,MM_VIA_SWFM_SYNTH = 0x7,MM_VIA_WDM_WAVEOUT = 0x8,MM_VIA_WDM_WAVEIN = 0x9,MM_VIA_WDM_MIXER = 0xA,MM_VIA_WDM_MPU401_MIDIOUT = 0xB,MM_VIA_WDM_MPU401_MIDIIN = 0xC,MM_MICRONAS_SC4 = 0x1,MM_MICRONAS_CLP833 = 0x2,MM_HP_WAVEOUT = 0x1,MM_HP_WAVEIN = 0x2,MM_QUICKAUDIO_MINIMIDI = 0x1,MM_QUICKAUDIO_MAXIMIDI = 0x2,MM_ICCC_UNA3_WAVEIN = 0x1,MM_ICCC_UNA3_WAVEOUT = 0x2,MM_ICCC_UNA3_AUX = 0x3,MM_ICCC_UNA3_MIXER = 0x4,MM_3COM_CB_MIXER = 0x1,MM_3COM_CB_WAVEIN = 0x2,MM_3COM_CB_WAVEOUT = 0x3,MM_MINDMAKER_GC_WAVEIN = 0x1,MM_MINDMAKER_GC_WAVEOUT = 0x2,MM_MINDMAKER_GC_MIXER = 0x3,MM_TELEKOL_WAVEOUT = 0x1,MM_TELEKOL_WAVEIN = 0x2,MM_ALGOVISION_VB80WAVEOUT = 0x1,MM_ALGOVISION_VB80WAVEIN = 0x2,MM_ALGOVISION_VB80MIXER = 0x3,MM_ALGOVISION_VB80AUX = 0x4,MM_ALGOVISION_VB80AUX2 = 0x5,};
enum MACRO_MM_MICROSOFT {MM_MICROSOFT = 1,MM_CREATIVE = 2,MM_MEDIAVISION = 3,MM_FUJITSU = 4,MM_PRAGMATRAX = 5,MM_CYRIX = 6,MM_PHILIPS_SPEECH_PROCESSING = 7,MM_NETXL = 8,MM_ZYXEL = 9,MM_BECUBED = 10,MM_AARDVARK = 11,MM_BINTEC = 12,MM_HEWLETT_PACKARD = 13,MM_ACULAB = 14,MM_FAITH = 15,MM_MITEL = 16,MM_QUANTUM3D = 17,MM_SNI = 18,MM_EMU = 19,MM_ARTISOFT = 20,MM_TURTLE_BEACH = 21,MM_IBM = 22,MM_VOCALTEC = 23,MM_ROLAND = 24,MM_DSP_SOLUTIONS = 25,MM_NEC = 26,MM_ATI = 27,MM_WANGLABS = 28,MM_TANDY = 29,MM_VOYETRA = 30,MM_ANTEX = 31,MM_ICL_PS = 32,MM_INTEL = 33,MM_GRAVIS = 34,MM_VAL = 35,MM_INTERACTIVE = 36,MM_YAMAHA = 37,MM_EVEREX = 38,MM_ECHO = 39,MM_SIERRA = 40,MM_CAT = 41,MM_APPS = 42,MM_DSP_GROUP = 43,MM_MELABS = 44,MM_COMPUTER_FRIENDS = 45,MM_ESS = 46,MM_AUDIOFILE = 47,MM_MOTOROLA = 48,MM_CANOPUS = 49,MM_EPSON = 50,MM_TRUEVISION = 51,MM_AZTECH = 52,MM_VIDEOLOGIC = 53,MM_SCALACS = 54,MM_KORG = 55,MM_APT = 56,MM_ICS = 57,MM_ITERATEDSYS = 58,MM_METHEUS = 59,MM_LOGITECH = 60,MM_WINNOV = 61,MM_NCR = 62,MM_EXAN = 63,MM_AST = 64,MM_WILLOWPOND = 65,MM_SONICFOUNDRY = 66,MM_VITEC = 67,MM_MOSCOM = 68,MM_SILICONSOFT = 69,MM_TERRATEC = 70,MM_MEDIASONIC = 71,MM_SANYO = 72,MM_SUPERMAC = 73,MM_AUDIOPT = 74,MM_NOGATECH = 75,MM_SPEECHCOMP = 76,MM_AHEAD = 77,MM_DOLBY = 78,MM_OKI = 79,MM_AURAVISION = 80,MM_OLIVETTI = 81,MM_IOMAGIC = 82,MM_MATSUSHITA = 83,MM_CONTROLRES = 84,MM_XEBEC = 85,MM_NEWMEDIA = 86,MM_NMS = 87,MM_LYRRUS = 88,MM_COMPUSIC = 89,MM_OPTI = 90,MM_ADLACC = 91,MM_COMPAQ = 92,MM_DIALOGIC = 93,MM_INSOFT = 94,MM_MPTUS = 95,MM_WEITEK = 96,MM_LERNOUT_AND_HAUSPIE = 97,MM_QCIAR = 98,MM_APPLE = 99,MM_DIGITAL = 100,MM_MOTU = 101,MM_WORKBIT = 102,MM_OSITECH = 103,MM_MIRO = 104,MM_CIRRUSLOGIC = 105,MM_ISOLUTION = 106,MM_HORIZONS = 107,MM_CONCEPTS = 108,MM_VTG = 109,MM_RADIUS = 110,MM_ROCKWELL = 111,MM_XYZ = 112,MM_OPCODE = 113,MM_VOXWARE = 114,MM_NORTHERN_TELECOM = 115,MM_APICOM = 116,MM_GRANDE = 117,MM_ADDX = 118,MM_WILDCAT = 119,MM_RHETOREX = 120,MM_BROOKTREE = 121,MM_ENSONIQ = 125,MM_FAST = 126,MM_NVIDIA = 127,MM_OKSORI = 128,MM_DIACOUSTICS = 129,MM_GULBRANSEN = 130,MM_KAY_ELEMETRICS = 131,MM_CRYSTAL = 132,MM_SPLASH_STUDIOS = 133,MM_QUARTERDECK = 134,MM_TDK = 135,MM_DIGITAL_AUDIO_LABS = 136,MM_SEERSYS = 137,MM_PICTURETEL = 138,MM_ATT_MICROELECTRONICS = 139,MM_OSPREY = 140,MM_MEDIATRIX = 141,MM_SOUNDESIGNS = 142,MM_ALDIGITAL = 143,MM_SPECTRUM_SIGNAL_PROCESSING = 144,MM_ECS = 145,MM_AMD = 146,MM_COREDYNAMICS = 147,MM_CANAM = 148,MM_SOFTSOUND = 149,MM_NORRIS = 150,MM_DDD = 151,MM_EUPHONICS = 152,MM_PRECEPT = 153,MM_CRYSTAL_NET = 154,MM_CHROMATIC = 155,MM_VOICEINFO = 156,MM_VIENNASYS = 157,MM_CONNECTIX = 158,MM_GADGETLABS = 159,MM_FRONTIER = 160,MM_VIONA = 161,MM_CASIO = 162,MM_DIAMONDMM = 163,MM_S3 = 164,MM_DVISION = 165,MM_NETSCAPE = 166,MM_SOUNDSPACE = 167,MM_VANKOEVERING = 168,MM_QTEAM = 169,MM_ZEFIRO = 170,MM_STUDER = 171,MM_FRAUNHOFER_IIS = 172,MM_QUICKNET = 173,MM_ALARIS = 174,MM_SICRESOURCE = 175,MM_NEOMAGIC = 176,MM_MERGING_TECHNOLOGIES = 177,MM_XIRLINK = 178,MM_COLORGRAPH = 179,MM_OTI = 180,MM_AUREAL = 181,MM_VIVO = 182,MM_SHARP = 183,MM_LUCENT = 184,MM_ATT = 185,MM_SUNCOM = 186,MM_SORVIS = 187,MM_INVISION = 188,MM_BERKOM = 189,MM_MARIAN = 190,MM_DPSINC = 191,MM_BCB = 192,MM_MOTIONPIXELS = 193,MM_QDESIGN = 194,MM_NMP = 195,MM_DATAFUSION = 196,MM_DUCK = 197,MM_FTR = 198,MM_BERCOS = 199,MM_ONLIVE = 200,MM_SIEMENS_SBC = 201,MM_TERALOGIC = 202,MM_PHONET = 203,MM_WINBOND = 204,MM_VIRTUALMUSIC = 205,MM_ENET = 206,MM_GUILLEMOT = 207,MM_EMAGIC = 208,MM_MWM = 209,MM_PACIFICRESEARCH = 210,MM_SIPROLAB = 211,MM_LYNX = 212,MM_SPECTRUM_PRODUCTIONS = 213,MM_DICTAPHONE = 214,MM_QUALCOMM = 215,MM_RZS = 216,MM_AUDIOSCIENCE = 217,MM_PINNACLE = 218,MM_EES = 219,MM_HAFTMANN = 220,MM_LUCID = 221,MM_HEADSPACE = 222,MM_UNISYS = 223,MM_LUMINOSITI = 224,MM_ACTIVEVOICE = 225,MM_DTS = 226,MM_DIGIGRAM = 227,MM_SOFTLAB_NSK = 228,MM_FORTEMEDIA = 229,MM_SONORUS = 230,MM_ARRAY = 231,MM_DATARAN = 232,MM_I_LINK = 233,MM_SELSIUS_SYSTEMS = 234,MM_ADMOS = 235,MM_LEXICON = 236,MM_SGI = 237,MM_IPI = 238,MM_ICE = 239,MM_VQST = 240,MM_ETEK = 241,MM_CS = 242,MM_ALESIS = 243,MM_INTERNET = 244,MM_SONY = 245,MM_HYPERACTIVE = 246,MM_UHER_INFORMATIC = 247,MM_SYDEC_NV = 248,MM_FLEXION = 249,MM_VIA = 250,MM_MICRONAS = 251,MM_ANALOGDEVICES = 252,MM_HP = 253,MM_MATROX_DIV = 254,MM_QUICKAUDIO = 255,MM_YOUCOM = 256,MM_RICHMOND = 257,MM_IODD = 258,MM_ICCC = 259,MM_3COM = 260,MM_MALDEN = 261,MM_3DFX = 262,MM_MINDMAKER = 263,MM_TELEKOL = 264,MM_ST_MICROELECTRONICS = 265,MM_ALGOVISION = 266,MM_UNMAPPED = 65535,MM_PID_UNMAPPED = 65535,MM_MIDI_MAPPER = 1,MM_WAVE_MAPPER = 2,MM_SNDBLST_MIDIOUT = 3,MM_SNDBLST_MIDIIN = 4,MM_SNDBLST_SYNTH = 5,MM_SNDBLST_WAVEOUT = 6,MM_SNDBLST_WAVEIN = 7,MM_ADLIB = 9,MM_MPU401_MIDIOUT = 10,MM_MPU401_MIDIIN = 11,MM_PC_JOYSTICK = 12,MM_PCSPEAKER_WAVEOUT = 13,MM_MSFT_WSS_WAVEIN = 14,MM_MSFT_WSS_WAVEOUT = 15,MM_MSFT_WSS_FMSYNTH_STEREO = 16,MM_MSFT_WSS_MIXER = 17,MM_MSFT_WSS_OEM_WAVEIN = 18,MM_MSFT_WSS_OEM_WAVEOUT = 19,MM_MSFT_WSS_OEM_FMSYNTH_STEREO = 20,MM_MSFT_WSS_AUX = 21,MM_MSFT_WSS_OEM_AUX = 22,MM_MSFT_GENERIC_WAVEIN = 23,MM_MSFT_GENERIC_WAVEOUT = 24,MM_MSFT_GENERIC_MIDIIN = 25,MM_MSFT_GENERIC_MIDIOUT = 26,MM_MSFT_GENERIC_MIDISYNTH = 27,MM_MSFT_GENERIC_AUX_LINE = 28,MM_MSFT_GENERIC_AUX_MIC = 29,MM_MSFT_GENERIC_AUX_CD = 30,MM_MSFT_WSS_OEM_MIXER = 31,MM_MSFT_MSACM = 32,MM_MSFT_ACM_MSADPCM = 33,MM_MSFT_ACM_IMAADPCM = 34,MM_MSFT_ACM_MSFILTER = 35,MM_MSFT_ACM_GSM610 = 36,MM_MSFT_ACM_G711 = 37,MM_MSFT_ACM_PCM = 38,MM_WSS_SB16_WAVEIN = 39,MM_WSS_SB16_WAVEOUT = 40,MM_WSS_SB16_MIDIIN = 41,MM_WSS_SB16_MIDIOUT = 42,MM_WSS_SB16_SYNTH = 43,MM_WSS_SB16_AUX_LINE = 44,MM_WSS_SB16_AUX_CD = 45,MM_WSS_SB16_MIXER = 46,MM_WSS_SBPRO_WAVEIN = 47,MM_WSS_SBPRO_WAVEOUT = 48,MM_WSS_SBPRO_MIDIIN = 49,MM_WSS_SBPRO_MIDIOUT = 50,MM_WSS_SBPRO_SYNTH = 51,MM_WSS_SBPRO_AUX_LINE = 52,MM_WSS_SBPRO_AUX_CD = 53,MM_WSS_SBPRO_MIXER = 54,MM_MSFT_WSS_NT_WAVEIN = 55,MM_MSFT_WSS_NT_WAVEOUT = 56,MM_MSFT_WSS_NT_FMSYNTH_STEREO = 57,MM_MSFT_WSS_NT_MIXER = 58,MM_MSFT_WSS_NT_AUX = 59,MM_MSFT_SB16_WAVEIN = 60,MM_MSFT_SB16_WAVEOUT = 61,MM_MSFT_SB16_MIDIIN = 62,MM_MSFT_SB16_MIDIOUT = 63,MM_MSFT_SB16_SYNTH = 64,MM_MSFT_SB16_AUX_LINE = 65,MM_MSFT_SB16_AUX_CD = 66,MM_MSFT_SB16_MIXER = 67,MM_MSFT_SBPRO_WAVEIN = 68,MM_MSFT_SBPRO_WAVEOUT = 69,MM_MSFT_SBPRO_MIDIIN = 70,MM_MSFT_SBPRO_MIDIOUT = 71,MM_MSFT_SBPRO_SYNTH = 72,MM_MSFT_SBPRO_AUX_LINE = 73,MM_MSFT_SBPRO_AUX_CD = 74,MM_MSFT_SBPRO_MIXER = 75,MM_MSFT_MSOPL_SYNTH = 76,MM_MSFT_VMDMS_LINE_WAVEIN = 80,MM_MSFT_VMDMS_LINE_WAVEOUT = 81,MM_MSFT_VMDMS_HANDSET_WAVEIN = 82,MM_MSFT_VMDMS_HANDSET_WAVEOUT = 83,MM_MSFT_VMDMW_LINE_WAVEIN = 84,MM_MSFT_VMDMW_LINE_WAVEOUT = 85,MM_MSFT_VMDMW_HANDSET_WAVEIN = 86,MM_MSFT_VMDMW_HANDSET_WAVEOUT = 87,MM_MSFT_VMDMW_MIXER = 88,MM_MSFT_VMDM_GAME_WAVEOUT = 89,MM_MSFT_VMDM_GAME_WAVEIN = 90,MM_MSFT_ACM_MSNAUDIO = 91,MM_MSFT_ACM_MSG723 = 92,MM_MSFT_ACM_MSRT24 = 93,MM_MSFT_WDMAUDIO_WAVEOUT = 100,MM_MSFT_WDMAUDIO_WAVEIN = 101,MM_MSFT_WDMAUDIO_MIDIOUT = 102,MM_MSFT_WDMAUDIO_MIDIIN = 103,MM_MSFT_WDMAUDIO_MIXER = 104,MM_MSFT_WDMAUDIO_AUX = 105,MM_CREATIVE_SB15_WAVEIN = 1,MM_CREATIVE_SB20_WAVEIN = 2,MM_CREATIVE_SBPRO_WAVEIN = 3,MM_CREATIVE_SBP16_WAVEIN = 4,MM_CREATIVE_PHNBLST_WAVEIN = 5,MM_CREATIVE_SB15_WAVEOUT = 101,MM_CREATIVE_SB20_WAVEOUT = 102,MM_CREATIVE_SBPRO_WAVEOUT = 103,MM_CREATIVE_SBP16_WAVEOUT = 104,MM_CREATIVE_PHNBLST_WAVEOUT = 105,MM_CREATIVE_MIDIOUT = 201,MM_CREATIVE_MIDIIN = 202,MM_CREATIVE_FMSYNTH_MONO = 301,MM_CREATIVE_FMSYNTH_STEREO = 302,MM_CREATIVE_MIDI_AWE32 = 303,MM_CREATIVE_AUX_CD = 401,MM_CREATIVE_AUX_LINE = 402,MM_CREATIVE_AUX_MIC = 403,MM_CREATIVE_AUX_MASTER = 404,MM_CREATIVE_AUX_PCSPK = 405,MM_CREATIVE_AUX_WAVE = 406,MM_CREATIVE_AUX_MIDI = 407,MM_CREATIVE_SBPRO_MIXER = 408,MM_CREATIVE_SB16_MIXER = 409,MM_MEDIAVISION_PROAUDIO = 16,MM_PROAUD_MIDIOUT = 17,MM_PROAUD_MIDIIN = 18,MM_PROAUD_SYNTH = 19,MM_PROAUD_WAVEOUT = 20,MM_PROAUD_WAVEIN = 21,MM_PROAUD_MIXER = 22,MM_PROAUD_AUX = 23,MM_MEDIAVISION_THUNDER = 32,MM_THUNDER_SYNTH = 35,MM_THUNDER_WAVEOUT = 36,MM_THUNDER_WAVEIN = 37,MM_THUNDER_AUX = 39,MM_MEDIAVISION_TPORT = 64,MM_TPORT_WAVEOUT = 65,MM_TPORT_WAVEIN = 66,MM_TPORT_SYNTH = 67,MM_MEDIAVISION_PROAUDIO_PLUS = 80,MM_PROAUD_PLUS_MIDIOUT = 81,MM_PROAUD_PLUS_MIDIIN = 82,MM_PROAUD_PLUS_SYNTH = 83,MM_PROAUD_PLUS_WAVEOUT = 84,MM_PROAUD_PLUS_WAVEIN = 85,MM_PROAUD_PLUS_MIXER = 86,MM_PROAUD_PLUS_AUX = 87,MM_MEDIAVISION_PROAUDIO_16 = 96,MM_PROAUD_16_MIDIOUT = 97,MM_PROAUD_16_MIDIIN = 98,MM_PROAUD_16_SYNTH = 99,MM_PROAUD_16_WAVEOUT = 100,MM_PROAUD_16_WAVEIN = 101,MM_PROAUD_16_MIXER = 102,MM_PROAUD_16_AUX = 103,MM_MEDIAVISION_PROSTUDIO_16 = 96,MM_STUDIO_16_MIDIOUT = 97,MM_STUDIO_16_MIDIIN = 98,MM_STUDIO_16_SYNTH = 99,MM_STUDIO_16_WAVEOUT = 100,MM_STUDIO_16_WAVEIN = 101,MM_STUDIO_16_MIXER = 102,MM_STUDIO_16_AUX = 103,MM_MEDIAVISION_CDPC = 112,MM_CDPC_MIDIOUT = 113,MM_CDPC_MIDIIN = 114,MM_CDPC_SYNTH = 115,MM_CDPC_WAVEOUT = 116,MM_CDPC_WAVEIN = 117,MM_CDPC_MIXER = 118,MM_CDPC_AUX = 119,MM_MEDIAVISION_OPUS1208 = 128,MM_OPUS401_MIDIOUT = 129,MM_OPUS401_MIDIIN = 130,MM_OPUS1208_SYNTH = 131,MM_OPUS1208_WAVEOUT = 132,MM_OPUS1208_WAVEIN = 133,MM_OPUS1208_MIXER = 134,MM_OPUS1208_AUX = 135,MM_MEDIAVISION_OPUS1216 = 144,MM_OPUS1216_MIDIOUT = 145,MM_OPUS1216_MIDIIN = 146,MM_OPUS1216_SYNTH = 147,MM_OPUS1216_WAVEOUT = 148,MM_OPUS1216_WAVEIN = 149,MM_OPUS1216_MIXER = 150,MM_OPUS1216_AUX = 151,MM_CYRIX_XASYNTH = 1,MM_CYRIX_XAMIDIIN = 2,MM_CYRIX_XAMIDIOUT = 3,MM_CYRIX_XAWAVEIN = 4,MM_CYRIX_XAWAVEOUT = 5,MM_CYRIX_XAAUX = 6,MM_CYRIX_XAMIXER = 7,MM_PHILIPS_ACM_LPCBB = 1,MM_NETXL_XLVIDEO = 1,MM_ZYXEL_ACM_ADPCM = 1,MM_AARDVARK_STUDIO12_WAVEOUT = 1,MM_AARDVARK_STUDIO12_WAVEIN = 2,MM_AARDVARK_STUDIO88_WAVEOUT = 3,MM_AARDVARK_STUDIO88_WAVEIN = 4,MM_BINTEC_TAPI_WAVE = 1,MM_HEWLETT_PACKARD_CU_CODEC = 1,MM_MITEL_TALKTO_LINE_WAVEOUT = 100,MM_MITEL_TALKTO_LINE_WAVEIN = 101,MM_MITEL_TALKTO_HANDSET_WAVEOUT = 102,MM_MITEL_TALKTO_HANDSET_WAVEIN = 103,MM_MITEL_TALKTO_BRIDGED_WAVEOUT = 104,MM_MITEL_TALKTO_BRIDGED_WAVEIN = 105,MM_MITEL_MPA_HANDSET_WAVEOUT = 200,MM_MITEL_MPA_HANDSET_WAVEIN = 201,MM_MITEL_MPA_HANDSFREE_WAVEOUT = 202,MM_MITEL_MPA_HANDSFREE_WAVEIN = 203,MM_MITEL_MPA_LINE1_WAVEOUT = 204,MM_MITEL_MPA_LINE1_WAVEIN = 205,MM_MITEL_MPA_LINE2_WAVEOUT = 206,MM_MITEL_MPA_LINE2_WAVEIN = 207,MM_MITEL_MEDIAPATH_WAVEOUT = 300,MM_MITEL_MEDIAPATH_WAVEIN = 301,MM_SNI_ACM_G721 = 1,MM_EMU_APSSYNTH = 1,MM_EMU_APSMIDIIN = 2,MM_EMU_APSMIDIOUT = 3,MM_EMU_APSWAVEIN = 4,MM_EMU_APSWAVEOUT = 5,MM_ARTISOFT_SBWAVEIN = 1,MM_ARTISOFT_SBWAVEOUT = 2,MM_TBS_TROPEZ_WAVEIN = 37,MM_TBS_TROPEZ_WAVEOUT = 38,MM_TBS_TROPEZ_AUX1 = 39,MM_TBS_TROPEZ_AUX2 = 40,MM_TBS_TROPEZ_LINE = 41,MM_MMOTION_WAVEAUX = 1,MM_MMOTION_WAVEOUT = 2,MM_MMOTION_WAVEIN = 3,MM_IBM_PCMCIA_WAVEIN = 11,MM_IBM_PCMCIA_WAVEOUT = 12,MM_IBM_PCMCIA_SYNTH = 13,MM_IBM_PCMCIA_MIDIIN = 14,MM_IBM_PCMCIA_MIDIOUT = 15,MM_IBM_PCMCIA_AUX = 16,MM_IBM_THINKPAD200 = 17,MM_IBM_MWAVE_WAVEIN = 18,MM_IBM_MWAVE_WAVEOUT = 19,MM_IBM_MWAVE_MIXER = 20,MM_IBM_MWAVE_MIDIIN = 21,MM_IBM_MWAVE_MIDIOUT = 22,MM_IBM_MWAVE_AUX = 23,MM_IBM_WC_MIDIOUT = 30,MM_IBM_WC_WAVEOUT = 31,MM_IBM_WC_MIXEROUT = 33,MM_VOCALTEC_WAVEOUT = 1,MM_VOCALTEC_WAVEIN = 2,MM_ROLAND_RAP10_MIDIOUT = 10,MM_ROLAND_RAP10_MIDIIN = 11,MM_ROLAND_RAP10_SYNTH = 12,MM_ROLAND_RAP10_WAVEOUT = 13,MM_ROLAND_RAP10_WAVEIN = 14,MM_ROLAND_MPU401_MIDIOUT = 15,MM_ROLAND_MPU401_MIDIIN = 16,MM_ROLAND_SMPU_MIDIOUTA = 17,MM_ROLAND_SMPU_MIDIOUTB = 18,MM_ROLAND_SMPU_MIDIINA = 19,MM_ROLAND_SMPU_MIDIINB = 20,MM_ROLAND_SC7_MIDIOUT = 21,MM_ROLAND_SC7_MIDIIN = 22,MM_ROLAND_SERIAL_MIDIOUT = 23,MM_ROLAND_SERIAL_MIDIIN = 24,MM_ROLAND_SCP_MIDIOUT = 38,MM_ROLAND_SCP_MIDIIN = 39,MM_ROLAND_SCP_WAVEOUT = 40,MM_ROLAND_SCP_WAVEIN = 41,MM_ROLAND_SCP_MIXER = 42,MM_ROLAND_SCP_AUX = 48,MM_DSP_SOLUTIONS_WAVEOUT = 1,MM_DSP_SOLUTIONS_WAVEIN = 2,MM_DSP_SOLUTIONS_SYNTH = 3,MM_DSP_SOLUTIONS_AUX = 4,MM_NEC_73_86_SYNTH = 5,MM_NEC_73_86_WAVEOUT = 6,MM_NEC_73_86_WAVEIN = 7,MM_NEC_26_SYNTH = 9,MM_NEC_MPU401_MIDIOUT = 10,MM_NEC_MPU401_MIDIIN = 11,MM_NEC_JOYSTICK = 12,MM_WANGLABS_WAVEIN1 = 1,MM_WANGLABS_WAVEOUT1 = 2,MM_TANDY_VISWAVEIN = 1,MM_TANDY_VISWAVEOUT = 2,MM_TANDY_VISBIOSSYNTH = 3,MM_TANDY_SENS_MMAWAVEIN = 4,MM_TANDY_SENS_MMAWAVEOUT = 5,MM_TANDY_SENS_MMAMIDIIN = 6,MM_TANDY_SENS_MMAMIDIOUT = 7,MM_TANDY_SENS_VISWAVEOUT = 8,MM_TANDY_PSSJWAVEIN = 9,MM_TANDY_PSSJWAVEOUT = 10,MM_ANTEX_SX12_WAVEIN = 1,MM_ANTEX_SX12_WAVEOUT = 2,MM_ANTEX_SX15_WAVEIN = 3,MM_ANTEX_SX15_WAVEOUT = 4,MM_ANTEX_VP625_WAVEIN = 5,MM_ANTEX_VP625_WAVEOUT = 6,MM_ANTEX_AUDIOPORT22_WAVEIN = 7,MM_ANTEX_AUDIOPORT22_WAVEOUT = 8,MM_ANTEX_AUDIOPORT22_FEEDTHRU = 9,MM_INTELOPD_WAVEIN = 1,MM_INTELOPD_WAVEOUT = 101,MM_INTELOPD_AUX = 401,MM_INTEL_NSPMODEMLINEIN = 501,MM_INTEL_NSPMODEMLINEOUT = 502,MM_VAL_MICROKEY_AP_WAVEIN = 1,MM_VAL_MICROKEY_AP_WAVEOUT = 2,MM_INTERACTIVE_WAVEIN = 69,MM_INTERACTIVE_WAVEOUT = 69,MM_YAMAHA_GSS_SYNTH = 1,MM_YAMAHA_GSS_WAVEOUT = 2,MM_YAMAHA_GSS_WAVEIN = 3,MM_YAMAHA_GSS_MIDIOUT = 4,MM_YAMAHA_GSS_MIDIIN = 5,MM_YAMAHA_GSS_AUX = 6,MM_YAMAHA_SERIAL_MIDIOUT = 7,MM_YAMAHA_SERIAL_MIDIIN = 8,MM_YAMAHA_OPL3SA_WAVEOUT = 16,MM_YAMAHA_OPL3SA_WAVEIN = 17,MM_YAMAHA_OPL3SA_FMSYNTH = 18,MM_YAMAHA_OPL3SA_YSYNTH = 19,MM_YAMAHA_OPL3SA_MIDIOUT = 20,MM_YAMAHA_OPL3SA_MIDIIN = 21,MM_YAMAHA_OPL3SA_MIXER = 23,MM_YAMAHA_OPL3SA_JOYSTICK = 24,MM_YAMAHA_YMF724LEG_MIDIOUT = 25,MM_YAMAHA_YMF724LEG_MIDIIN = 26,MM_YAMAHA_YMF724_WAVEOUT = 27,MM_YAMAHA_YMF724_WAVEIN = 28,MM_YAMAHA_YMF724_MIDIOUT = 29,MM_YAMAHA_YMF724_AUX = 30,MM_YAMAHA_YMF724_MIXER = 31,MM_YAMAHA_YMF724LEG_FMSYNTH = 32,MM_YAMAHA_YMF724LEG_MIXER = 33,MM_YAMAHA_SXG_MIDIOUT = 34,MM_YAMAHA_SXG_WAVEOUT = 35,MM_YAMAHA_SXG_MIXER = 36,MM_YAMAHA_ACXG_WAVEIN = 37,MM_YAMAHA_ACXG_WAVEOUT = 38,MM_YAMAHA_ACXG_MIDIOUT = 39,MM_YAMAHA_ACXG_MIXER = 40,MM_YAMAHA_ACXG_AUX = 41,MM_EVEREX_CARRIER = 1,MM_ECHO_SYNTH = 1,MM_ECHO_WAVEOUT = 2,MM_ECHO_WAVEIN = 3,MM_ECHO_MIDIOUT = 4,MM_ECHO_MIDIIN = 5,MM_ECHO_AUX = 6,MM_SIERRA_ARIA_MIDIOUT = 20,MM_SIERRA_ARIA_MIDIIN = 21,MM_SIERRA_ARIA_SYNTH = 22,MM_SIERRA_ARIA_WAVEOUT = 23,MM_SIERRA_ARIA_WAVEIN = 24,MM_SIERRA_ARIA_AUX = 25,MM_SIERRA_ARIA_AUX2 = 32,MM_SIERRA_QUARTET_WAVEIN = 80,MM_SIERRA_QUARTET_WAVEOUT = 81,MM_SIERRA_QUARTET_MIDIIN = 82,MM_SIERRA_QUARTET_MIDIOUT = 83,MM_SIERRA_QUARTET_SYNTH = 84,MM_SIERRA_QUARTET_AUX_CD = 85,MM_SIERRA_QUARTET_AUX_LINE = 86,MM_SIERRA_QUARTET_AUX_MODEM = 87,MM_SIERRA_QUARTET_MIXER = 88,MM_CAT_WAVEOUT = 1,MM_DSP_GROUP_TRUESPEECH = 1,MM_MELABS_MIDI2GO = 1,MM_ESS_AMWAVEOUT = 1,MM_ESS_AMWAVEIN = 2,MM_ESS_AMAUX = 3,MM_ESS_AMSYNTH = 4,MM_ESS_AMMIDIOUT = 5,MM_ESS_AMMIDIIN = 6,MM_ESS_MIXER = 7,MM_ESS_AUX_CD = 8,MM_ESS_MPU401_MIDIOUT = 9,MM_ESS_MPU401_MIDIIN = 10,MM_ESS_ES488_WAVEOUT = 16,MM_ESS_ES488_WAVEIN = 17,MM_ESS_ES488_MIXER = 18,MM_ESS_ES688_WAVEOUT = 19,MM_ESS_ES688_WAVEIN = 20,MM_ESS_ES688_MIXER = 21,MM_ESS_ES1488_WAVEOUT = 22,MM_ESS_ES1488_WAVEIN = 23,MM_ESS_ES1488_MIXER = 24,MM_ESS_ES1688_WAVEOUT = 25,MM_ESS_ES1688_WAVEIN = 26,MM_ESS_ES1688_MIXER = 27,MM_ESS_ES1788_WAVEOUT = 28,MM_ESS_ES1788_WAVEIN = 29,MM_ESS_ES1788_MIXER = 30,MM_ESS_ES1888_WAVEOUT = 31,MM_ESS_ES1888_WAVEIN = 32,MM_ESS_ES1888_MIXER = 33,MM_ESS_ES1868_WAVEOUT = 34,MM_ESS_ES1868_WAVEIN = 35,MM_ESS_ES1868_MIXER = 36,MM_ESS_ES1878_WAVEOUT = 37,MM_ESS_ES1878_WAVEIN = 38,MM_ESS_ES1878_MIXER = 39,MM_CANOPUS_ACM_DVREX = 1,MM_EPS_FMSND = 1,MM_TRUEVISION_WAVEIN1 = 1,MM_TRUEVISION_WAVEOUT1 = 2,MM_AZTECH_MIDIOUT = 3,MM_AZTECH_MIDIIN = 4,MM_AZTECH_WAVEIN = 17,MM_AZTECH_WAVEOUT = 18,MM_AZTECH_FMSYNTH = 20,MM_AZTECH_MIXER = 21,MM_AZTECH_PRO16_WAVEIN = 33,MM_AZTECH_PRO16_WAVEOUT = 34,MM_AZTECH_PRO16_FMSYNTH = 38,MM_AZTECH_DSP16_WAVEIN = 65,MM_AZTECH_DSP16_WAVEOUT = 66,MM_AZTECH_DSP16_FMSYNTH = 68,MM_AZTECH_DSP16_WAVESYNTH = 70,MM_AZTECH_NOVA16_WAVEIN = 71,MM_AZTECH_NOVA16_WAVEOUT = 72,MM_AZTECH_NOVA16_MIXER = 73,MM_AZTECH_WASH16_WAVEIN = 74,MM_AZTECH_WASH16_WAVEOUT = 75,MM_AZTECH_WASH16_MIXER = 76,MM_AZTECH_AUX_CD = 401,MM_AZTECH_AUX_LINE = 402,MM_AZTECH_AUX_MIC = 403,MM_AZTECH_AUX = 404,MM_VIDEOLOGIC_MSWAVEIN = 1,MM_VIDEOLOGIC_MSWAVEOUT = 2,MM_KORG_PCIF_MIDIOUT = 1,MM_KORG_PCIF_MIDIIN = 2,MM_KORG_1212IO_MSWAVEIN = 3,MM_KORG_1212IO_MSWAVEOUT = 4,MM_APT_ACE100CD = 1,MM_ICS_WAVEDECK_WAVEOUT = 1,MM_ICS_WAVEDECK_WAVEIN = 2,MM_ICS_WAVEDECK_MIXER = 3,MM_ICS_WAVEDECK_AUX = 4,MM_ICS_WAVEDECK_SYNTH = 5,MM_ICS_WAVEDEC_SB_WAVEOUT = 6,MM_ICS_WAVEDEC_SB_WAVEIN = 7,MM_ICS_WAVEDEC_SB_FM_MIDIOUT = 8,MM_ICS_WAVEDEC_SB_MPU401_MIDIOUT = 9,MM_ICS_WAVEDEC_SB_MPU401_MIDIIN = 10,MM_ICS_WAVEDEC_SB_MIXER = 11,MM_ICS_WAVEDEC_SB_AUX = 12,MM_ICS_2115_LITE_MIDIOUT = 13,MM_ICS_2120_LITE_MIDIOUT = 14,MM_ITERATEDSYS_FUFCODEC = 1,MM_METHEUS_ZIPPER = 1,MM_WINNOV_CAVIAR_WAVEIN = 1,MM_WINNOV_CAVIAR_WAVEOUT = 2,MM_WINNOV_CAVIAR_VIDC = 3,MM_WINNOV_CAVIAR_CHAMPAGNE = 4,MM_WINNOV_CAVIAR_YUV8 = 5,MM_NCR_BA_WAVEIN = 1,MM_NCR_BA_WAVEOUT = 2,MM_NCR_BA_SYNTH = 3,MM_NCR_BA_AUX = 4,MM_NCR_BA_MIXER = 5,MM_AST_MODEMWAVE_WAVEIN = 13,MM_AST_MODEMWAVE_WAVEOUT = 14,MM_WILLOWPOND_FMSYNTH_STEREO = 20,MM_WILLOWPOND_MPU401 = 21,MM_WILLOWPOND_SNDPORT_WAVEIN = 100,MM_WILLOWPOND_SNDPORT_WAVEOUT = 101,MM_WILLOWPOND_SNDPORT_MIXER = 102,MM_WILLOWPOND_SNDPORT_AUX = 103,MM_WILLOWPOND_PH_WAVEIN = 104,MM_WILLOWPOND_PH_WAVEOUT = 105,MM_WILLOWPOND_PH_MIXER = 106,MM_WILLOWPOND_PH_AUX = 107,MM_WILLOPOND_SNDCOMM_WAVEIN = 108,MM_WILLOWPOND_SNDCOMM_WAVEOUT = 109,MM_WILLOWPOND_SNDCOMM_MIXER = 110,MM_WILLOWPOND_SNDCOMM_AUX = 111,MM_WILLOWPOND_GENERIC_WAVEIN = 112,MM_WILLOWPOND_GENERIC_WAVEOUT = 113,MM_WILLOWPOND_GENERIC_MIXER = 114,MM_WILLOWPOND_GENERIC_AUX = 115,MM_VITEC_VMAKER = 1,MM_VITEC_VMPRO = 2,MM_MOSCOM_VPC2400_IN = 1,MM_MOSCOM_VPC2400_OUT = 2,MM_SILICONSOFT_SC1_WAVEIN = 1,MM_SILICONSOFT_SC1_WAVEOUT = 2,MM_SILICONSOFT_SC2_WAVEIN = 3,MM_SILICONSOFT_SC2_WAVEOUT = 4,MM_SILICONSOFT_SOUNDJR2_WAVEOUT = 5,MM_SILICONSOFT_SOUNDJR2PR_WAVEIN = 6,MM_SILICONSOFT_SOUNDJR2PR_WAVEOUT = 7,MM_SILICONSOFT_SOUNDJR3_WAVEOUT = 8,MM_TTEWS_WAVEIN = 1,MM_TTEWS_WAVEOUT = 2,MM_TTEWS_MIDIIN = 3,MM_TTEWS_MIDIOUT = 4,MM_TTEWS_MIDISYNTH = 5,MM_TTEWS_MIDIMONITOR = 6,MM_TTEWS_VMIDIIN = 7,MM_TTEWS_VMIDIOUT = 8,MM_TTEWS_AUX = 9,MM_TTEWS_MIXER = 10,MM_MEDIASONIC_ACM_G723 = 1,MM_MEDIASONIC_ICOM = 2,MM_ICOM_WAVEIN = 3,MM_ICOM_WAVEOUT = 4,MM_ICOM_MIXER = 5,MM_ICOM_AUX = 6,MM_ICOM_LINE = 7,MM_SANYO_ACM_LD_ADPCM = 1,MM_AHEAD_MULTISOUND = 1,MM_AHEAD_SOUNDBLASTER = 2,MM_AHEAD_PROAUDIO = 3,MM_AHEAD_GENERIC = 4,MM_OLIVETTI_WAVEIN = 1,MM_OLIVETTI_WAVEOUT = 2,MM_OLIVETTI_MIXER = 3,MM_OLIVETTI_AUX = 4,MM_OLIVETTI_MIDIIN = 5,MM_OLIVETTI_MIDIOUT = 6,MM_OLIVETTI_SYNTH = 7,MM_OLIVETTI_JOYSTICK = 8,MM_OLIVETTI_ACM_GSM = 9,MM_OLIVETTI_ACM_ADPCM = 10,MM_OLIVETTI_ACM_CELP = 11,MM_OLIVETTI_ACM_SBC = 12,MM_OLIVETTI_ACM_OPR = 13,MM_IOMAGIC_TEMPO_WAVEOUT = 1,MM_IOMAGIC_TEMPO_WAVEIN = 2,MM_IOMAGIC_TEMPO_SYNTH = 3,MM_IOMAGIC_TEMPO_MIDIOUT = 4,MM_IOMAGIC_TEMPO_MXDOUT = 5,MM_IOMAGIC_TEMPO_AUXOUT = 6,MM_MATSUSHITA_WAVEIN = 1,MM_MATSUSHITA_WAVEOUT = 2,MM_MATSUSHITA_FMSYNTH_STEREO = 3,MM_MATSUSHITA_MIXER = 4,MM_MATSUSHITA_AUX = 5,MM_NEWMEDIA_WAVJAMMER = 1,MM_LYRRUS_BRIDGE_GUITAR = 1,MM_OPTI_M16_FMSYNTH_STEREO = 1,MM_OPTI_M16_MIDIIN = 2,MM_OPTI_M16_MIDIOUT = 3,MM_OPTI_M16_WAVEIN = 4,MM_OPTI_M16_WAVEOUT = 5,MM_OPTI_M16_MIXER = 6,MM_OPTI_M16_AUX = 7,MM_OPTI_P16_FMSYNTH_STEREO = 16,MM_OPTI_P16_MIDIIN = 17,MM_OPTI_P16_MIDIOUT = 18,MM_OPTI_P16_WAVEIN = 19,MM_OPTI_P16_WAVEOUT = 20,MM_OPTI_P16_MIXER = 21,MM_OPTI_P16_AUX = 22,MM_OPTI_M32_WAVEIN = 32,MM_OPTI_M32_WAVEOUT = 33,MM_OPTI_M32_MIDIIN = 34,MM_OPTI_M32_MIDIOUT = 35,MM_OPTI_M32_SYNTH_STEREO = 36,MM_OPTI_M32_MIXER = 37,MM_OPTI_M32_AUX = 38,MM_COMPAQ_BB_WAVEIN = 1,MM_COMPAQ_BB_WAVEOUT = 2,MM_COMPAQ_BB_WAVEAUX = 3,MM_MPTUS_SPWAVEOUT = 1,MM_LERNOUT_ANDHAUSPIE_LHCODECACM = 1,MM_DIGITAL_AV320_WAVEIN = 1,MM_DIGITAL_AV320_WAVEOUT = 2,MM_DIGITAL_ACM_G723 = 3,MM_DIGITAL_ICM_H263 = 4,MM_DIGITAL_ICM_H261 = 5,MM_MOTU_MTP_MIDIOUT_ALL = 100,MM_MOTU_MTP_MIDIIN_1 = 101,MM_MOTU_MTP_MIDIOUT_1 = 101,MM_MOTU_MTP_MIDIIN_2 = 102,MM_MOTU_MTP_MIDIOUT_2 = 102,MM_MOTU_MTP_MIDIIN_3 = 103,MM_MOTU_MTP_MIDIOUT_3 = 103,MM_MOTU_MTP_MIDIIN_4 = 104,MM_MOTU_MTP_MIDIOUT_4 = 104,MM_MOTU_MTP_MIDIIN_5 = 105,MM_MOTU_MTP_MIDIOUT_5 = 105,MM_MOTU_MTP_MIDIIN_6 = 106,MM_MOTU_MTP_MIDIOUT_6 = 106,MM_MOTU_MTP_MIDIIN_7 = 107,MM_MOTU_MTP_MIDIOUT_7 = 107,MM_MOTU_MTP_MIDIIN_8 = 108,MM_MOTU_MTP_MIDIOUT_8 = 108,MM_MOTU_MTPII_MIDIOUT_ALL = 200,MM_MOTU_MTPII_MIDIIN_SYNC = 200,MM_MOTU_MTPII_MIDIIN_1 = 201,MM_MOTU_MTPII_MIDIOUT_1 = 201,MM_MOTU_MTPII_MIDIIN_2 = 202,MM_MOTU_MTPII_MIDIOUT_2 = 202,MM_MOTU_MTPII_MIDIIN_3 = 203,MM_MOTU_MTPII_MIDIOUT_3 = 203,MM_MOTU_MTPII_MIDIIN_4 = 204,MM_MOTU_MTPII_MIDIOUT_4 = 204,MM_MOTU_MTPII_MIDIIN_5 = 205,MM_MOTU_MTPII_MIDIOUT_5 = 205,MM_MOTU_MTPII_MIDIIN_6 = 206,MM_MOTU_MTPII_MIDIOUT_6 = 206,MM_MOTU_MTPII_MIDIIN_7 = 207,MM_MOTU_MTPII_MIDIOUT_7 = 207,MM_MOTU_MTPII_MIDIIN_8 = 208,MM_MOTU_MTPII_MIDIOUT_8 = 208,MM_MOTU_MTPII_NET_MIDIIN_1 = 209,MM_MOTU_MTPII_NET_MIDIOUT_1 = 209,MM_MOTU_MTPII_NET_MIDIIN_2 = 210,MM_MOTU_MTPII_NET_MIDIOUT_2 = 210,MM_MOTU_MTPII_NET_MIDIIN_3 = 211,MM_MOTU_MTPII_NET_MIDIOUT_3 = 211,MM_MOTU_MTPII_NET_MIDIIN_4 = 212,MM_MOTU_MTPII_NET_MIDIOUT_4 = 212,MM_MOTU_MTPII_NET_MIDIIN_5 = 213,MM_MOTU_MTPII_NET_MIDIOUT_5 = 213,MM_MOTU_MTPII_NET_MIDIIN_6 = 214,MM_MOTU_MTPII_NET_MIDIOUT_6 = 214,MM_MOTU_MTPII_NET_MIDIIN_7 = 215,MM_MOTU_MTPII_NET_MIDIOUT_7 = 215,MM_MOTU_MTPII_NET_MIDIIN_8 = 216,MM_MOTU_MTPII_NET_MIDIOUT_8 = 216,MM_MOTU_MXP_MIDIIN_MIDIOUT_ALL = 300,MM_MOTU_MXP_MIDIIN_SYNC = 300,MM_MOTU_MXP_MIDIIN_MIDIIN_1 = 301,MM_MOTU_MXP_MIDIIN_MIDIOUT_1 = 301,MM_MOTU_MXP_MIDIIN_MIDIIN_2 = 302,MM_MOTU_MXP_MIDIIN_MIDIOUT_2 = 302,MM_MOTU_MXP_MIDIIN_MIDIIN_3 = 303,MM_MOTU_MXP_MIDIIN_MIDIOUT_3 = 303,MM_MOTU_MXP_MIDIIN_MIDIIN_4 = 304,MM_MOTU_MXP_MIDIIN_MIDIOUT_4 = 304,MM_MOTU_MXP_MIDIIN_MIDIIN_5 = 305,MM_MOTU_MXP_MIDIIN_MIDIOUT_5 = 305,MM_MOTU_MXP_MIDIIN_MIDIIN_6 = 306,MM_MOTU_MXP_MIDIIN_MIDIOUT_6 = 306,MM_MOTU_MXPMPU_MIDIOUT_ALL = 400,MM_MOTU_MXPMPU_MIDIIN_SYNC = 400,MM_MOTU_MXPMPU_MIDIIN_1 = 401,MM_MOTU_MXPMPU_MIDIOUT_1 = 401,MM_MOTU_MXPMPU_MIDIIN_2 = 402,MM_MOTU_MXPMPU_MIDIOUT_2 = 402,MM_MOTU_MXPMPU_MIDIIN_3 = 403,MM_MOTU_MXPMPU_MIDIOUT_3 = 403,MM_MOTU_MXPMPU_MIDIIN_4 = 404,MM_MOTU_MXPMPU_MIDIOUT_4 = 404,MM_MOTU_MXPMPU_MIDIIN_5 = 405,MM_MOTU_MXPMPU_MIDIOUT_5 = 405,MM_MOTU_MXPMPU_MIDIIN_6 = 406,MM_MOTU_MXPMPU_MIDIOUT_6 = 406,MM_MOTU_MXN_MIDIOUT_ALL = 500,MM_MOTU_MXN_MIDIIN_SYNC = 500,MM_MOTU_MXN_MIDIIN_1 = 501,MM_MOTU_MXN_MIDIOUT_1 = 501,MM_MOTU_MXN_MIDIIN_2 = 502,MM_MOTU_MXN_MIDIOUT_2 = 502,MM_MOTU_MXN_MIDIIN_3 = 503,MM_MOTU_MXN_MIDIOUT_3 = 503,MM_MOTU_MXN_MIDIIN_4 = 504,MM_MOTU_MXN_MIDIOUT_4 = 504,MM_MOTU_FLYER_MIDI_IN_SYNC = 600,MM_MOTU_FLYER_MIDI_IN_A = 601,MM_MOTU_FLYER_MIDI_OUT_A = 601,MM_MOTU_FLYER_MIDI_IN_B = 602,MM_MOTU_FLYER_MIDI_OUT_B = 602,MM_MOTU_PKX_MIDI_IN_SYNC = 700,MM_MOTU_PKX_MIDI_IN_A = 701,MM_MOTU_PKX_MIDI_OUT_A = 701,MM_MOTU_PKX_MIDI_IN_B = 702,MM_MOTU_PKX_MIDI_OUT_B = 702,MM_MOTU_DTX_MIDI_IN_SYNC = 800,MM_MOTU_DTX_MIDI_IN_A = 801,MM_MOTU_DTX_MIDI_OUT_A = 801,MM_MOTU_DTX_MIDI_IN_B = 802,MM_MOTU_DTX_MIDI_OUT_B = 802,MM_MOTU_MTPAV_MIDIOUT_ALL = 900,MM_MOTU_MTPAV_MIDIIN_SYNC = 900,MM_MOTU_MTPAV_MIDIIN_1 = 901,MM_MOTU_MTPAV_MIDIOUT_1 = 901,MM_MOTU_MTPAV_MIDIIN_2 = 902,MM_MOTU_MTPAV_MIDIOUT_2 = 902,MM_MOTU_MTPAV_MIDIIN_3 = 903,MM_MOTU_MTPAV_MIDIOUT_3 = 903,MM_MOTU_MTPAV_MIDIIN_4 = 904,MM_MOTU_MTPAV_MIDIOUT_4 = 904,MM_MOTU_MTPAV_MIDIIN_5 = 905,MM_MOTU_MTPAV_MIDIOUT_5 = 905,MM_MOTU_MTPAV_MIDIIN_6 = 906,MM_MOTU_MTPAV_MIDIOUT_6 = 906,MM_MOTU_MTPAV_MIDIIN_7 = 907,MM_MOTU_MTPAV_MIDIOUT_7 = 907,MM_MOTU_MTPAV_MIDIIN_8 = 908,MM_MOTU_MTPAV_MIDIOUT_8 = 908,MM_MOTU_MTPAV_NET_MIDIIN_1 = 909,MM_MOTU_MTPAV_NET_MIDIOUT_1 = 909,MM_MOTU_MTPAV_NET_MIDIIN_2 = 910,MM_MOTU_MTPAV_NET_MIDIOUT_2 = 910,MM_MOTU_MTPAV_NET_MIDIIN_3 = 911,MM_MOTU_MTPAV_NET_MIDIOUT_3 = 911,MM_MOTU_MTPAV_NET_MIDIIN_4 = 912,MM_MOTU_MTPAV_NET_MIDIOUT_4 = 912,MM_MOTU_MTPAV_NET_MIDIIN_5 = 913,MM_MOTU_MTPAV_NET_MIDIOUT_5 = 913,MM_MOTU_MTPAV_NET_MIDIIN_6 = 914,MM_MOTU_MTPAV_NET_MIDIOUT_6 = 914,MM_MOTU_MTPAV_NET_MIDIIN_7 = 915,MM_MOTU_MTPAV_NET_MIDIOUT_7 = 915,MM_MOTU_MTPAV_NET_MIDIIN_8 = 916,MM_MOTU_MTPAV_NET_MIDIOUT_8 = 916,MM_MOTU_MTPAV_MIDIIN_ADAT = 917,MM_MOTU_MTPAV_MIDIOUT_ADAT = 917,MM_MOTU_MXPXT_MIDIIN_SYNC = 1000,MM_MOTU_MXPXT_MIDIOUT_ALL = 1000,MM_MOTU_MXPXT_MIDIIN_1 = 1001,MM_MOTU_MXPXT_MIDIOUT_1 = 1001,MM_MOTU_MXPXT_MIDIOUT_2 = 1002,MM_MOTU_MXPXT_MIDIIN_2 = 1002,MM_MOTU_MXPXT_MIDIIN_3 = 1003,MM_MOTU_MXPXT_MIDIOUT_3 = 1003,MM_MOTU_MXPXT_MIDIIN_4 = 1004,MM_MOTU_MXPXT_MIDIOUT_4 = 1004,MM_MOTU_MXPXT_MIDIIN_5 = 1005,MM_MOTU_MXPXT_MIDIOUT_5 = 1005,MM_MOTU_MXPXT_MIDIOUT_6 = 1006,MM_MOTU_MXPXT_MIDIIN_6 = 1006,MM_MOTU_MXPXT_MIDIOUT_7 = 1007,MM_MOTU_MXPXT_MIDIIN_7 = 1007,MM_MOTU_MXPXT_MIDIOUT_8 = 1008,MM_MOTU_MXPXT_MIDIIN_8 = 1008,MM_WORKBIT_MIXER = 1,MM_WORKBIT_WAVEOUT = 2,MM_WORKBIT_WAVEIN = 3,MM_WORKBIT_MIDIIN = 4,MM_WORKBIT_MIDIOUT = 5,MM_WORKBIT_FMSYNTH = 6,MM_WORKBIT_AUX = 7,MM_WORKBIT_JOYSTICK = 8,MM_OSITECH_TRUMPCARD = 1,MM_MIRO_MOVIEPRO = 1,MM_MIRO_VIDEOD1 = 2,MM_MIRO_VIDEODC1TV = 3,MM_MIRO_VIDEOTD = 4,MM_MIRO_DC30_WAVEOUT = 5,MM_MIRO_DC30_WAVEIN = 6,MM_MIRO_DC30_MIX = 7,MM_ISOLUTION_PASCAL = 1,MM_VOICEMIXER = 1,};
enum MACRO_MM_VOXWARE {MM_VOXWARE_CODEC = 1,MM_NORTEL_MPXAC_WAVEIN = 1,MM_NORTEL_MPXAC_WAVEOUT = 2,MM_ADDX_PCTV_DIGITALMIX = 1,MM_ADDX_PCTV_WAVEIN = 2,MM_ADDX_PCTV_WAVEOUT = 3,MM_ADDX_PCTV_MIXER = 4,MM_ADDX_PCTV_AUX_CD = 5,MM_ADDX_PCTV_AUX_LINE = 6,MM_WILDCAT_AUTOSCOREMIDIIN = 1,MM_RHETOREX_WAVEIN = 1,MM_RHETOREX_WAVEOUT = 2,MM_BTV_WAVEIN = 1,MM_BTV_WAVEOUT = 2,MM_BTV_MIDIIN = 3,MM_BTV_MIDIOUT = 4,MM_BTV_MIDISYNTH = 5,MM_BTV_AUX_LINE = 6,MM_BTV_AUX_MIC = 7,MM_BTV_AUX_CD = 8,MM_BTV_DIGITALIN = 9,MM_BTV_DIGITALOUT = 10,MM_BTV_MIDIWAVESTREAM = 11,MM_BTV_MIXER = 12,MM_ENSONIQ_SOUNDSCAPE = 16,MM_SOUNDSCAPE_WAVEOUT = 17,MM_SOUNDSCAPE_WAVEOUT_AUX = 18,MM_SOUNDSCAPE_WAVEIN = 19,MM_SOUNDSCAPE_MIDIOUT = 20,MM_SOUNDSCAPE_MIDIIN = 21,MM_SOUNDSCAPE_SYNTH = 22,MM_SOUNDSCAPE_MIXER = 23,MM_SOUNDSCAPE_AUX = 24,MM_NVIDIA_WAVEOUT = 1,MM_NVIDIA_WAVEIN = 2,MM_NVIDIA_MIDIOUT = 3,MM_NVIDIA_MIDIIN = 4,MM_NVIDIA_GAMEPORT = 5,MM_NVIDIA_MIXER = 6,MM_NVIDIA_AUX = 7,MM_OKSORI_BASE = 0,MM_OKSORI_OSR8_WAVEOUT = 1,MM_OKSORI_OSR8_WAVEIN = 2,MM_OKSORI_OSR16_WAVEOUT = 3,MM_OKSORI_OSR16_WAVEIN = 4,MM_OKSORI_FM_OPL4 = 5,MM_OKSORI_MIX_MASTER = 6,MM_OKSORI_MIX_WAVE = 7,MM_OKSORI_MIX_FM = 8,MM_OKSORI_MIX_LINE = 9,MM_OKSORI_MIX_CD = 10,MM_OKSORI_MIX_MIC = 11,MM_OKSORI_MIX_ECHO = 12,MM_OKSORI_MIX_AUX1 = 13,MM_OKSORI_MIX_LINE1 = 14,MM_OKSORI_EXT_MIC1 = 15,MM_OKSORI_EXT_MIC2 = 16,MM_OKSORI_MIDIOUT = 17,MM_OKSORI_MIDIIN = 18,MM_OKSORI_MPEG_CDVISION = 19,MM_DIACOUSTICS_DRUM_ACTION = 1,MM_KAY_ELEMETRICS_CSL = 17152,MM_KAY_ELEMETRICS_CSL_DAT = 17160,MM_KAY_ELEMETRICS_CSL_4CHANNEL = 17161,MM_CRYSTAL_CS4232_WAVEIN = 1,MM_CRYSTAL_CS4232_WAVEOUT = 2,MM_CRYSTAL_CS4232_WAVEMIXER = 3,MM_CRYSTAL_CS4232_WAVEAUX_AUX1 = 4,MM_CRYSTAL_CS4232_WAVEAUX_AUX2 = 5,MM_CRYSTAL_CS4232_WAVEAUX_LINE = 6,MM_CRYSTAL_CS4232_WAVEAUX_MONO = 7,MM_CRYSTAL_CS4232_WAVEAUX_MASTER = 8,MM_CRYSTAL_CS4232_MIDIIN = 9,MM_CRYSTAL_CS4232_MIDIOUT = 10,MM_CRYSTAL_CS4232_INPUTGAIN_AUX1 = 13,MM_CRYSTAL_CS4232_INPUTGAIN_LOOP = 14,MM_CRYSTAL_SOUND_FUSION_WAVEIN = 21,MM_CRYSTAL_SOUND_FUSION_WAVEOUT = 22,MM_CRYSTAL_SOUND_FUSION_MIXER = 23,MM_CRYSTAL_SOUND_FUSION_MIDIIN = 24,MM_CRYSTAL_SOUND_FUSION_MIDIOUT = 25,MM_CRYSTAL_SOUND_FUSION_JOYSTICK = 26,MM_QUARTERDECK_LHWAVEIN = 0,MM_QUARTERDECK_LHWAVEOUT = 1,MM_TDK_MW_MIDI_SYNTH = 1,MM_TDK_MW_MIDI_IN = 2,MM_TDK_MW_MIDI_OUT = 3,MM_TDK_MW_WAVE_IN = 4,MM_TDK_MW_WAVE_OUT = 5,MM_TDK_MW_AUX = 6,MM_TDK_MW_MIXER = 10,MM_TDK_MW_AUX_MASTER = 100,MM_TDK_MW_AUX_BASS = 101,MM_TDK_MW_AUX_TREBLE = 102,MM_TDK_MW_AUX_MIDI_VOL = 103,MM_TDK_MW_AUX_WAVE_VOL = 104,MM_TDK_MW_AUX_WAVE_RVB = 105,MM_TDK_MW_AUX_WAVE_CHR = 106,MM_TDK_MW_AUX_VOL = 107,MM_TDK_MW_AUX_RVB = 108,MM_TDK_MW_AUX_CHR = 109,MM_DIGITAL_AUDIO_LABS_TC = 1,MM_DIGITAL_AUDIO_LABS_DOC = 2,MM_DIGITAL_AUDIO_LABS_V8 = 16,MM_DIGITAL_AUDIO_LABS_CPRO = 17,MM_DIGITAL_AUDIO_LABS_VP = 18,MM_DIGITAL_AUDIO_LABS_CDLX = 19,MM_DIGITAL_AUDIO_LABS_CTDIF = 20,MM_SEERSYS_SEERSYNTH = 1,MM_SEERSYS_SEERWAVE = 2,MM_SEERSYS_SEERMIX = 3,MM_SEERSYS_WAVESYNTH = 4,MM_SEERSYS_WAVESYNTH_WG = 5,MM_SEERSYS_REALITY = 6,MM_OSPREY_1000WAVEIN = 1,MM_OSPREY_1000WAVEOUT = 2,MM_SOUNDESIGNS_WAVEIN = 1,MM_SOUNDESIGNS_WAVEOUT = 2,MM_SSP_SNDFESWAVEIN = 1,MM_SSP_SNDFESWAVEOUT = 2,MM_SSP_SNDFESMIDIIN = 3,MM_SSP_SNDFESMIDIOUT = 4,MM_SSP_SNDFESSYNTH = 5,MM_SSP_SNDFESMIX = 6,MM_SSP_SNDFESAUX = 7,MM_ECS_AADF_MIDI_IN = 10,MM_ECS_AADF_MIDI_OUT = 11,MM_ECS_AADF_WAVE2MIDI_IN = 12,MM_AMD_INTERWAVE_WAVEIN = 1,MM_AMD_INTERWAVE_WAVEOUT = 2,MM_AMD_INTERWAVE_SYNTH = 3,MM_AMD_INTERWAVE_MIXER1 = 4,MM_AMD_INTERWAVE_MIXER2 = 5,MM_AMD_INTERWAVE_JOYSTICK = 6,MM_AMD_INTERWAVE_EX_CD = 7,MM_AMD_INTERWAVE_MIDIIN = 8,MM_AMD_INTERWAVE_MIDIOUT = 9,MM_AMD_INTERWAVE_AUX1 = 10,MM_AMD_INTERWAVE_AUX2 = 11,MM_AMD_INTERWAVE_AUX_MIC = 12,MM_AMD_INTERWAVE_AUX_CD = 13,MM_AMD_INTERWAVE_MONO_IN = 14,MM_AMD_INTERWAVE_MONO_OUT = 15,MM_AMD_INTERWAVE_EX_TELEPHONY = 16,MM_AMD_INTERWAVE_WAVEOUT_BASE = 17,MM_AMD_INTERWAVE_WAVEOUT_TREBLE = 18,MM_AMD_INTERWAVE_STEREO_ENHANCED = 19,MM_COREDYNAMICS_DYNAMIXHR = 1,MM_COREDYNAMICS_DYNASONIX_SYNTH = 2,MM_COREDYNAMICS_DYNASONIX_MIDI_IN = 3,MM_COREDYNAMICS_DYNASONIX_MIDI_OUT = 4,MM_COREDYNAMICS_DYNASONIX_WAVE_IN = 5,MM_COREDYNAMICS_DYNASONIX_WAVE_OUT = 6,MM_COREDYNAMICS_DYNASONIX_AUDIO_IN = 7,MM_COREDYNAMICS_DYNASONIX_AUDIO_OUT = 8,MM_COREDYNAMICS_DYNAGRAFX_VGA = 9,MM_COREDYNAMICS_DYNAGRAFX_WAVE_IN = 10,MM_COREDYNAMICS_DYNAGRAFX_WAVE_OUT = 11,MM_CANAM_CBXWAVEOUT = 1,MM_CANAM_CBXWAVEIN = 2,MM_SOFTSOUND_CODEC = 1,MM_NORRIS_VOICELINK = 1,MM_DDD_MIDILINK_MIDIIN = 1,MM_DDD_MIDILINK_MIDIOUT = 2,MM_EUPHONICS_AUX_CD = 1,MM_EUPHONICS_AUX_LINE = 2,MM_EUPHONICS_AUX_MASTER = 3,MM_EUPHONICS_AUX_MIC = 4,MM_EUPHONICS_AUX_MIDI = 5,MM_EUPHONICS_AUX_WAVE = 6,MM_EUPHONICS_FMSYNTH_MONO = 7,MM_EUPHONICS_FMSYNTH_STEREO = 8,MM_EUPHONICS_MIDIIN = 9,MM_EUPHONICS_MIDIOUT = 10,MM_EUPHONICS_MIXER = 11,MM_EUPHONICS_WAVEIN = 12,MM_EUPHONICS_WAVEOUT = 13,MM_EUPHONICS_EUSYNTH = 14,};
enum MACRO_MONITOR {MONITOR_STATE_CREATED = 0x1,MONITOR_STATE_REMOVED = 0x2,MONITOR_STATE_UPDATED = 0x4,};
enum MACRO_MONITOR_PLUG_NOTIFY {REGISTER_MONITOR_PLUG_NOTIFY = 0x1,DEREGISTER_MONITOR_PLUG_NOTIFY = 0x2,};
enum MACRO_MP : __int64 {MP_UNINITIALIZED_VALUE = 4294967295,};
enum MACRO_MPEGLAYER3 {MPEGLAYER3_WFX_EXTRA_BYTES = 12,MPEGLAYER3_ID_UNKNOWN = 0,MPEGLAYER3_ID_MPEG = 1,MPEGLAYER3_ID_CONSTANTFRAMESIZE = 2,MPEGLAYER3_FLAG_PADDING_ISO = 0,MPEGLAYER3_FLAG_PADDING_ON = 1,MPEGLAYER3_FLAG_PADDING_OFF = 2,};
enum MACRO_MSAcpiInfo {MSAcpiInfo_BootArchitecture_ID = 1,MSAcpiInfo_PreferredProfile_ID = 2,MSAcpiInfo_Capabilities_ID = 3,};
enum MACRO_MSIde {MSIde_PortDeviceInfo_Bus_ID = 1,MSIde_PortDeviceInfo_Target_ID = 2,MSIde_PortDeviceInfo_Lun_ID = 3,};
enum MACRO_MSMCAEvent {MSMCAEvent_CPUError_MajorErrorType_ID = 7,MSMCAEvent_CPUError_Level_ID = 8,MSMCAEvent_CPUError_CacheOp_ID = 9,MSMCAEvent_CPUError_CacheMesi_ID = 10,MSMCAEvent_CPUError_TLBOp_ID = 11,MSMCAEvent_CPUError_BusType_ID = 12,MSMCAEvent_CPUError_BusSev_ID = 13,MSMCAEvent_CPUError_RegFileId_ID = 14,MSMCAEvent_CPUError_RegFileOp_ID = 15,MSMCAEvent_CPUError_MSSid_ID = 16,MSMCAEvent_CPUError_MSOp_ID = 17,MSMCAEvent_CPUError_MSArrayId_ID = 18,MSMCAEvent_CPUError_MSIndex_ID = 19,MSMCAEvent_CPUError_Size_ID = 20,MSMCAEvent_CPUError_RawRecord_ID = 21,MSMCAEvent_MemoryError_RecordId_ID = 1,MSMCAEvent_MemoryError_ErrorSeverity_ID = 2,MSMCAEvent_MemoryError_Type_ID = 3,MSMCAEvent_MemoryError_Cpu_ID = 4,MSMCAEvent_MemoryError_AdditionalErrors_ID = 5,MSMCAEvent_MemoryError_LogToEventlog_ID = 6,MSMCAEvent_MemoryError_VALIDATION_BITS_ID = 7,MSMCAEvent_MemoryError_MEM_ERROR_STATUS_ID = 8,MSMCAEvent_MemoryError_MEM_PHYSICAL_ADDR_ID = 9,MSMCAEvent_MemoryError_MEM_PHYSICAL_MASK_ID = 10,MSMCAEvent_MemoryError_RESPONDER_ID_ID = 11,MSMCAEvent_MemoryError_TARGET_ID_ID = 12,MSMCAEvent_MemoryError_REQUESTOR_ID_ID = 13,MSMCAEvent_MemoryError_BUS_SPECIFIC_DATA_ID = 14,MSMCAEvent_MemoryError_MEM_NODE_ID = 15,MSMCAEvent_MemoryError_MEM_CARD_ID = 16,MSMCAEvent_MemoryError_MEM_BANK_ID = 17,MSMCAEvent_MemoryError_xMEM_DEVICE_ID = 18,MSMCAEvent_MemoryError_MEM_MODULE_ID = 19,MSMCAEvent_MemoryError_MEM_ROW_ID = 20,MSMCAEvent_MemoryError_MEM_COLUMN_ID = 21,MSMCAEvent_MemoryError_MEM_BIT_POSITION_ID = 22,MSMCAEvent_MemoryError_Size_ID = 23,MSMCAEvent_MemoryError_RawRecord_ID = 24,MSMCAEvent_PCIBusError_RecordId_ID = 1,MSMCAEvent_PCIBusError_ErrorSeverity_ID = 2,MSMCAEvent_PCIBusError_Type_ID = 3,MSMCAEvent_PCIBusError_Cpu_ID = 4,MSMCAEvent_PCIBusError_AdditionalErrors_ID = 5,MSMCAEvent_PCIBusError_LogToEventlog_ID = 6,MSMCAEvent_PCIBusError_VALIDATION_BITS_ID = 7,MSMCAEvent_PCIBusError_PCI_BUS_ERROR_STATUS_ID = 8,MSMCAEvent_PCIBusError_PCI_BUS_ADDRESS_ID = 9,MSMCAEvent_PCIBusError_PCI_BUS_DATA_ID = 10,MSMCAEvent_PCIBusError_PCI_BUS_CMD_ID = 11,MSMCAEvent_PCIBusError_PCI_BUS_REQUESTOR_ID_ID = 12,MSMCAEvent_PCIBusError_PCI_BUS_RESPONDER_ID_ID = 13,MSMCAEvent_PCIBusError_PCI_BUS_TARGET_ID_ID = 14,MSMCAEvent_PCIBusError_PCI_BUS_ERROR_TYPE_ID = 15,MSMCAEvent_PCIBusError_PCI_BUS_ID_BusNumber_ID = 16,MSMCAEvent_PCIBusError_PCI_BUS_ID_SegmentNumber_ID = 17,MSMCAEvent_PCIBusError_Size_ID = 18,MSMCAEvent_PCIBusError_RawRecord_ID = 19,MSMCAEvent_PCIComponentError_RecordId_ID = 1,MSMCAEvent_PCIComponentError_ErrorSeverity_ID = 2,MSMCAEvent_PCIComponentError_Type_ID = 3,MSMCAEvent_PCIComponentError_Cpu_ID = 4,MSMCAEvent_PCIComponentError_AdditionalErrors_ID = 5,MSMCAEvent_PCIComponentError_LogToEventlog_ID = 6,MSMCAEvent_PCIComponentError_VALIDATION_BITS_ID = 7,MSMCAEvent_PCIComponentError_PCI_COMP_ERROR_STATUS_ID = 8,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_VendorId_ID = 9,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_DeviceId_ID = 10,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeInterface_ID = 11,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeSubClass_ID = 12,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeBaseClass_ID = 13,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_FunctionNumber_ID = 14,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_DeviceNumber_ID = 15,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_BusNumber_ID = 16,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_SegmentNumber_ID = 17,MSMCAEvent_PCIComponentError_Size_ID = 18,MSMCAEvent_PCIComponentError_RawRecord_ID = 19,MSMCAEvent_SystemEventError_RecordId_ID = 1,MSMCAEvent_SystemEventError_ErrorSeverity_ID = 2,MSMCAEvent_SystemEventError_Type_ID = 3,MSMCAEvent_SystemEventError_Cpu_ID = 4,MSMCAEvent_SystemEventError_AdditionalErrors_ID = 5,MSMCAEvent_SystemEventError_LogToEventlog_ID = 6,MSMCAEvent_SystemEventError_VALIDATION_BITS_ID = 7,MSMCAEvent_SystemEventError_SEL_TIME_STAMP_ID = 8,MSMCAEvent_SystemEventError_SEL_RECORD_ID_ID = 9,MSMCAEvent_SystemEventError_SEL_GENERATOR_ID_ID = 10,MSMCAEvent_SystemEventError_SEL_RECORD_TYPE_ID = 11,MSMCAEvent_SystemEventError_SEL_EVM_REV_ID = 12,MSMCAEvent_SystemEventError_SEL_SENSOR_TYPE_ID = 13,MSMCAEvent_SystemEventError_SEL_SENSOR_NUM_ID = 14,MSMCAEvent_SystemEventError_SEL_EVENT_DIR_TYPE_ID = 15,MSMCAEvent_SystemEventError_SEL_DATA1_ID = 16,MSMCAEvent_SystemEventError_SEL_DATA2_ID = 17,MSMCAEvent_SystemEventError_SEL_DATA3_ID = 18,MSMCAEvent_SystemEventError_Size_ID = 19,MSMCAEvent_SystemEventError_RawRecord_ID = 20,MSMCAEvent_SMBIOSError_RecordId_ID = 1,MSMCAEvent_SMBIOSError_ErrorSeverity_ID = 2,MSMCAEvent_SMBIOSError_Type_ID = 3,MSMCAEvent_SMBIOSError_Cpu_ID = 4,MSMCAEvent_SMBIOSError_AdditionalErrors_ID = 5,MSMCAEvent_SMBIOSError_LogToEventlog_ID = 6,MSMCAEvent_SMBIOSError_VALIDATION_BITS_ID = 7,MSMCAEvent_SMBIOSError_SMBIOS_EVENT_TYPE_ID = 8,MSMCAEvent_SMBIOSError_Size_ID = 9,MSMCAEvent_SMBIOSError_RawRecord_ID = 10,MSMCAEvent_PlatformSpecificError_RecordId_ID = 1,MSMCAEvent_PlatformSpecificError_ErrorSeverity_ID = 2,MSMCAEvent_PlatformSpecificError_Type_ID = 3,MSMCAEvent_PlatformSpecificError_Cpu_ID = 4,MSMCAEvent_PlatformSpecificError_AdditionalErrors_ID = 5,MSMCAEvent_PlatformSpecificError_LogToEventlog_ID = 6,MSMCAEvent_PlatformSpecificError_VALIDATION_BITS_ID = 7,MSMCAEvent_PlatformSpecificError_PLATFORM_ERROR_STATUS_ID = 8,MSMCAEvent_PlatformSpecificError_PLATFORM_REQUESTOR_ID_ID = 9,MSMCAEvent_PlatformSpecificError_PLATFORM_RESPONDER_ID_ID = 10,MSMCAEvent_PlatformSpecificError_PLATFORM_TARGET_ID_ID = 11,MSMCAEvent_PlatformSpecificError_PLATFORM_BUS_SPECIFIC_DATA_ID = 12,MSMCAEvent_PlatformSpecificError_OEM_COMPONENT_ID_ID = 13,MSMCAEvent_PlatformSpecificError_Size_ID = 14,MSMCAEvent_PlatformSpecificError_RawRecord_ID = 15,MSMCAEvent_InvalidError_RecordId_ID = 1,MSMCAEvent_InvalidError_ErrorSeverity_ID = 2,MSMCAEvent_InvalidError_Type_ID = 3,MSMCAEvent_InvalidError_Cpu_ID = 4,MSMCAEvent_InvalidError_AdditionalErrors_ID = 5,MSMCAEvent_InvalidError_LogToEventlog_ID = 6,MSMCAEvent_InvalidError_Size_ID = 7,MSMCAEvent_InvalidError_RawRecord_ID = 8,MSMCAEvent_MemoryPageRemoved_PhysicalAddress_ID = 1,};
enum MACRO_MSMCAInfo {MSMCAInfo_Entry_Length_ID = 1,MSMCAInfo_Entry_Data_ID = 2,MSMCAInfo_RawMCAData_Count_ID = 1,MSMCAInfo_RawMCAData_Records_ID = 2,MSMCAInfo_RawCMCEvent_Count_ID = 1,MSMCAInfo_RawCMCEvent_Records_ID = 2,MSMCAInfo_RawMCAEvent_Count_ID = 1,MSMCAInfo_RawMCAEvent_Records_ID = 2,MSMCAInfo_RawCorrectedPlatformEvent_Count_ID = 1,MSMCAInfo_RawCorrectedPlatformEvent_Records_ID = 2,};
enum MACRO_MSNdis {MSNdis_NetworkAddress_Address_ID = 1,MSNdis_NetworkShortAddress_Address_ID = 1,MSNdis_NetworkLinkSpeed_Outbound_ID = 1,MSNdis_NetworkLinkSpeed_Inbound_ID = 2,MSNdis_EnumerateAdapter_DeviceName_ID = 1,MSNdis_NotifyAdapterRemoval_DeviceName_ID = 1,MSNdis_NotifyAdapterArrival_DeviceName_ID = 1,MSNdis_DeviceWakeOnMagicPacketOnly_EnableWakeOnMagicPacketOnly_ID = 1,MSNdis_HardwareStatus_NdisHardwareStatus_ID = 1,MSNdis_MediaSupported_NumberElements_ID = 1,MSNdis_MediaSupported_NdisMediaSupported_ID = 2,MSNdis_MediaInUse_NumberElements_ID = 1,MSNdis_MediaInUse_NdisMediaInUse_ID = 2,MSNdis_MaximumLookahead_NdisMaximumLookahead_ID = 1,MSNdis_MaximumFrameSize_NdisMaximumFrameSize_ID = 1,MSNdis_LinkSpeed_NdisLinkSpeed_ID = 1,MSNdis_TransmitBufferSpace_NdisTransmitBufferSpace_ID = 1,MSNdis_ReceiveBufferSpace_NdisReceiveBufferSpace_ID = 1,MSNdis_TransmitBlockSize_NdisTransmitBlockSize_ID = 1,MSNdis_ReceiveBlockSize_NdisReceiveBlockSize_ID = 1,MSNdis_VendorID_NdisVendorID_ID = 1,MSNdis_VendorDescription_NdisVendorDescription_ID = 1,MSNdis_CurrentPacketFilter_NdisCurrentPacketFilter_ID = 1,MSNdis_CurrentLookahead_NdisCurrentLookahead_ID = 1,MSNdis_DriverVersion_NdisDriverVersion_ID = 1,MSNdis_MaximumTotalSize_NdisMaximumTotalSize_ID = 1,MSNdis_MacOptions_NdisMacOptions_ID = 1,MSNdis_MediaConnectStatus_NdisMediaConnectStatus_ID = 1,MSNdis_MaximumSendPackets_NdisMaximumSendPackets_ID = 1,MSNdis_VendorDriverVersion_NdisVendorDriverVersion_ID = 1,MSNdis_VlanIdentifier_NdisVlanId_ID = 1,MSNdis_PhysicalMediumType_NdisPhysicalMediumType_ID = 1,MSNdis_TransmitsOk_NdisTransmitsOk_ID = 1,MSNdis_ReceivesOk_NdisReceivesOk_ID = 1,MSNdis_TransmitsError_NdisTransmitsError_ID = 1,MSNdis_ReceiveError_NdisReceiveError_ID = 1,MSNdis_ReceiveNoBuffer_NdisReceiveNoBuffer_ID = 1,MSNdis_CoHardwareStatus_NdisCoHardwareStatus_ID = 1,MSNdis_CoMediaSupported_NumberElements_ID = 1,MSNdis_CoMediaSupported_NdisCoMediaSupported_ID = 2,MSNdis_CoMediaInUse_NumberElements_ID = 1,MSNdis_CoMediaInUse_NdisCoMediaInUse_ID = 2,MSNdis_CoLinkSpeed_NdisCoLinkSpeed_ID = 1,MSNdis_CoVendorId_NdisCoVendorID_ID = 1,MSNdis_CoVendorDescription_NdisCoVendorDescription_ID = 1,MSNdis_CoDriverVersion_NdisCoDriverVersion_ID = 1,MSNdis_CoMacOptions_NdisCoMacOptions_ID = 1,MSNdis_CoMediaConnectStatus_NdisCoMediaConnectStatus_ID = 1,MSNdis_CoVendorDriverVersion_NdisCoVendorDriverVersion_ID = 1,MSNdis_CoMinimumLinkSpeed_NdisCoMinimumLinkSpeed_ID = 1,MSNdis_CoTransmitPdusOk_NdisCoTransmitPdusOk_ID = 1,MSNdis_CoReceivePdusOk_NdisCoReceivePdusOk_ID = 1,MSNdis_CoTransmitPduErrors_NdisCoTransmitPduErrors_ID = 1,MSNdis_CoReceivePduErrors_NdisCoReceivePduErrors_ID = 1,MSNdis_CoReceivePdusNoBuffer_NdisCoReceivePdusNoBuffer_ID = 1,MSNdis_AtmSupportedVcRates_MinCellRate_ID = 1,MSNdis_AtmSupportedVcRates_MaxCellRate_ID = 2,MSNdis_AtmSupportedServiceCategory_NdisAtmSupportedServiceCategory_ID = 1,MSNdis_AtmSupportedAalTypes_NdisAtmSupportedAalTypes_ID = 1,MSNdis_AtmHardwareCurrentAddress_NdisAtmHardwareCurrentAddress_ID = 1,MSNdis_AtmMaxActiveVcs_NdisAtmMaxActiveVcs_ID = 1,MSNdis_AtmMaxActiveVciBits_NdisAtmMaxActiveVciBits_ID = 1,MSNdis_AtmMaxActiveVpiBits_NdisAtmMaxActiveVpiBits_ID = 1,MSNdis_AtmMaxAal0PacketSize_NdisAtmMaxAal0PacketSize_ID = 1,MSNdis_AtmMaxAal1PacketSize_NdisAtmMaxAal1PacketSize_ID = 1,MSNdis_AtmMaxAal34PacketSize_NdisAtmMaxAal34PacketSize_ID = 1,MSNdis_AtmMaxAal5PacketSize_NdisAtmMaxAal5PacketSize_ID = 1,MSNdis_AtmReceiveCellsOk_NdisAtmReceiveCellsOk_ID = 1,MSNdis_AtmTransmitCellsOk_NdisAtmTransmitCellsOk_ID = 1,MSNdis_AtmReceiveCellsDropped_NdisAtmReceiveCellsDropped_ID = 1,MSNdis_EthernetPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_EthernetCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_EthernetMulticastList_NumberElements_ID = 1,MSNdis_EthernetMulticastList_NdisMulticastList_ID = 2,MSNdis_EthernetMaximumMulticastListSize_NdisEthernetMaximumMulticastListSize_ID = 1,MSNdis_EthernetMacOptions_NdisEthernetMacOptions_ID = 1,MSNdis_EthernetReceiveErrorAlignment_NdisEthernetReceiveErrorAlignment_ID = 1,MSNdis_EthernetOneTransmitCollision_NdisEthernetOneTransmitCollision_ID = 1,MSNdis_EthernetMoreTransmitCollisions_NdisEthernetMoreTransmitCollisions_ID = 1,MSNdis_TokenRingPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_TokenRingCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_TokenRingCurrentFunctional_NdisTokenRingCurrentFunctional_ID = 1,MSNdis_TokenRingCurrentGroup_NdisTokenRingCurrentGroup_ID = 1,MSNdis_TokenRingLastOpenStatus_NdisTokenRingLastOpenStatus_ID = 1,MSNdis_TokenRingCurrentRingStatus_NdisTokenRingCurrentRingStatus_ID = 1,MSNdis_TokenRingCurrentRingState_NdisTokenRingCurrentRingState_ID = 1,MSNdis_TokenRingLineErrors_NdisTokenRingLineErrors_ID = 1,MSNdis_TokenRingLostFrames_NdisTokenRingLostFrames_ID = 1,MSNdis_FddiLongPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_FddiLongCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_FddiLongMulticastList_NumberElements_ID = 1,MSNdis_FddiLongMulticastList_NdisMulticastList_ID = 2,MSNdis_FddiLongMaximumListSize_NdisFddiLongMaximumListSize_ID = 1,MSNdis_FddiShortPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_FddiShortCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_FddiShortMulticastList_NumberElements_ID = 1,MSNdis_FddiShortMulticastList_NdisMulticastList_ID = 2,MSNdis_FddiShortMaximumListSize_NdisFddiShortMaximumListSize_ID = 1,MSNdis_FddiAttachmentType_NdisFddiAttachmentType_ID = 1,MSNdis_FddiUpstreamNodeLong_NdisFddiUpstreamNodeLong_ID = 1,MSNdis_FddiDownstreamNodeLong_NdisFddiDownstreamNodeLong_ID = 1,MSNdis_FddiFrameErrors_NdisFddiFrameErrors_ID = 1,MSNdis_FddiFramesLost_NdisFddiFramesLost_ID = 1,MSNdis_FddiRingManagmentState_NdisFddiRingManagmentState_ID = 1,MSNdis_FddiLctFailures_NdisFddiLctFailures_ID = 1,MSNdis_FddiLemRejects_NdisFddiLemRejects_ID = 1,MSNdis_FddiLConnectionState_NdisFddiLConnectionState_ID = 1,MSNdis_80211_BaseServiceSetIdentifier_Ndis80211MacAddress_ID = 1,MSNdis_80211_ServiceSetIdentifier_Ndis80211SsId_ID = 1,MSNdis_80211_NetworkType_Ndis80211NetworkType_ID = 1,MSNdis_80211_NetworkTypesSupported_NumberOfItems_ID = 1,MSNdis_80211_NetworkTypesSupported_Ndis80211NetworkTypes_ID = 2,MSNdis_80211_NetworkTypeInUse_Ndis80211NetworkTypeInUse_ID = 1,MSNdis_80211_PowerMode_Ndis80211PowerMode_ID = 1,MSNdis_80211_TransmitPowerLevel_Ndis80211TransmitPowerLevel_ID = 1,MSNdis_80211_ReceivedSignalStrength_Ndis80211ReceivedSignalStrength_ID = 1,MSNdis_80211_ReceivedSignalStrengthEventTrigger_Ndis80211ReceivedSignalStrengthTrigger_ID = 1,MSNdis_80211_NetworkInfrastructure_Ndis80211NetworkInfrastructure_ID = 1,MSNdis_80211_ConfigurationFH_FHLength_ID = 1,MSNdis_80211_ConfigurationFH_HopPattern_ID = 2,MSNdis_80211_ConfigurationFH_HopSet_ID = 3,MSNdis_80211_ConfigurationFH_DwellTime_ID = 4,MSNdis_80211_ConfigurationInfo_ConfigLength_ID = 1,MSNdis_80211_ConfigurationInfo_BeaconPeriod_ID = 2,MSNdis_80211_ConfigurationInfo_ATIMWindow_ID = 3,MSNdis_80211_ConfigurationInfo_DSConfig_ID = 4,MSNdis_80211_ConfigurationInfo_FHConfig_ID = 5,MSNdis_80211_WLanBssId_Ndis80211WLanBssIdLength_ID = 1,MSNdis_80211_WLanBssId_Ndis80211MacAddress_ID = 2,MSNdis_80211_WLanBssId_Reserved_ID = 3,MSNdis_80211_WLanBssId_Ndis80211SsIdLength_ID = 4,MSNdis_80211_WLanBssId_Ndis80211SsId_ID = 5,MSNdis_80211_WLanBssId_Ndis80211Privacy_ID = 6,MSNdis_80211_WLanBssId_Ndis80211Rssi_ID = 7,MSNdis_80211_WLanBssId_Ndis80211NetworkTypeInUse_ID = 8,MSNdis_80211_WLanBssId_Ndis80211Configuration_ID = 9,MSNdis_80211_WLanBssId_Ndis80211InfrastructureMode_ID = 10,MSNdis_80211_WLanBssId_Ndis80211SupportedRate_ID = 11,MSNdis_80211_BSSIList_NumberOfItems_ID = 1,MSNdis_80211_BSSIList_Ndis80211BSSIList_ID = 2,MSNdis_80211_InfrastructureMode_Ndis80211InfrastructureMode_ID = 1,MSNdis_80211_FragmentationThreshold_Ndis80211FragmentationThreshold_ID = 1,MSNdis_80211_RTSThreshold_Ndis80211RTSThreshold_ID = 1,MSNdis_80211_NumberOfAntennas_Ndis80211NumberOfAntennas_ID = 1,MSNdis_80211_ReceiveAntennaSelected_Ndis80211ReceiveAntennaSelected_ID = 1,MSNdis_80211_TransmitAntennaSelected_Ndis80211TransmitAntennaSelected_ID = 1,MSNdis_80211_DataRates_Ndis80211DataRate_ID = 1,MSNdis_80211_DesiredDataRates_Ndis80211DesiredRate_ID = 1,MSNdis_80211_Configuration_Ndis80211Config_ID = 1,MSNdis_80211_Statistics_StatisticsLength_ID = 1,MSNdis_80211_Statistics_TransmittedFragmentCount_ID = 2,MSNdis_80211_Statistics_MulticastTransmittedFrameCount_ID = 3,MSNdis_80211_Statistics_FailedCount_ID = 4,MSNdis_80211_Statistics_RetryCount_ID = 5,MSNdis_80211_Statistics_MultipleRetryCount_ID = 6,MSNdis_80211_Statistics_RTSSuccessCount_ID = 7,MSNdis_80211_Statistics_RTSFailureCount_ID = 8,MSNdis_80211_Statistics_ACKFailureCount_ID = 9,MSNdis_80211_Statistics_FrameDuplicateCount_ID = 10,MSNdis_80211_Statistics_ReceivedFragmentCount_ID = 11,MSNdis_80211_Statistics_MulticastReceivedFrameCount_ID = 12,MSNdis_80211_Statistics_FCSErrorCount_ID = 13,MSNdis_80211_AddWEP_Length_ID = 1,MSNdis_80211_AddWEP_KeyIndex_ID = 2,MSNdis_80211_AddWEP_KeyLength_ID = 3,MSNdis_80211_AddWEP_KeyMaterial_ID = 4,MSNdis_80211_RemoveWEP_Ndis80211KeyIndex_ID = 1,MSNdis_80211_Disassociate_UnusedParameter_ID = 1,MSNdis_80211_BssIdListScan_UnusedParameter_ID = 1,MSNdis_80211_AuthenticationMode_Ndis80211AuthenticationMode_ID = 1,MSNdis_80211_PrivacyFilter_Ndis80211PrivacyFilter_ID = 1,MSNdis_80211_WEPStatus_Ndis80211WEPStatus_ID = 1,MSNdis_80211_ReloadDefaults_Ndis80211ReloadDefaults_ID = 1,MSNdis_StatusMediaSpecificIndication_NumberElements_ID = 1,MSNdis_StatusMediaSpecificIndication_NdisStatusMediaSpecificIndication_ID = 2,MSNdis_StatusLinkSpeedChange_NdisStatusLinkSpeedChange_ID = 1,MSNdis_StatusProtocolBind_Transport_ID = 1,MSNdis_StatusProtocolUnbind_Transport_ID = 1,MSNdis_StatusDevicePowerOn_Device_ID = 1,MSNdis_StatusDevicePowerOff_Device_ID = 1,};
enum MACRO_MSPower {MSPower_DeviceEnable_Enable_ID = 1,MSPower_DeviceWakeEnable_Enable_ID = 1,};
enum MACRO_MSSerial {MSSerial_PortName_PortName_ID = 1,SERIAL_WMI_COMM_DATA_BaudRate_ID = 1,SERIAL_WMI_COMM_DATA_BitsPerByte_ID = 2,};
enum MACRO_MSSmBios {MSSmBios_RawSMBiosTables_Used20CallingMethod_ID = 1,MSSmBios_RawSMBiosTables_SmbiosMajorVersion_ID = 2,MSSmBios_RawSMBiosTables_SmbiosMinorVersion_ID = 3,MSSmBios_RawSMBiosTables_DmiRevision_ID = 4,MSSmBios_RawSMBiosTables_Size_ID = 5,MSSmBios_RawSMBiosTables_SMBiosData_ID = 6,};
enum MACRO_MSWmi {MSWmi_MofData_Unused1_ID = 1,MSWmi_MofData_Unused2_ID = 2,MSWmi_MofData_Size_ID = 3,MSWmi_MofData_Unused4_ID = 4,MSWmi_MofData_BinaryMofData_ID = 5,MSWmi_PnPDeviceId_PnPDeviceId_ID = 1,MSWmi_PnPInstanceNames_Count_ID = 1,MSWmi_PnPInstanceNames_InstanceNameList_ID = 2,MSWmi_Guid_Guid_ID = 1,MSWmi_GuidRegistrationInfo_Operation_ID = 1,MSWmi_GuidRegistrationInfo_GuidCount_ID = 2,MSWmi_GuidRegistrationInfo_GuidList_ID = 3,};
enum MACRO_MULTIPLE {MULTIPLE_IRP_COMPLETE_REQUESTS = 0x44,};
enum MACRO_MULTIPROCESSOR {MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED = 0x3E,};
enum MACRO_MUST {MUST_SUCCEED_POOL_EMPTY = 0x41,};
enum MACRO_MUTEX {MUTEX_LEVEL_NUMBER_VIOLATION = 0xD,};
enum MACRO_MUTEX_ALREADY {MUTEX_ALREADY_OWNED = 0xBF,};
enum MACRO_NABTS {NABTS_LINES_PER_BUNDLE = 16,NABTS_PAYLOAD_PER_LINE = 28,NABTS_BYTES_PER_LINE = 36,};
enum MACRO_NABTS_BUFFER {NABTS_BUFFER_PICTURENUMBER_SUPPORT = 1,};
enum MACRO_NANOSECONDS {NANOSECONDS = 10000000,};
enum MACRO_NDIS {NDIS_INTERNAL_ERROR = 0x4F,};
enum MACRO_NETWORK {NETWORK_BOOT_INITIALIZATION_FAILED = 0xBB,NETWORK_BOOT_DUPLICATE_ADDRESS = 0xBC,};
enum MACRO_NLS {NLS_VALID_LOCALE_MASK = 0xFFFFF,};
enum MACRO_NO {NO_EXCEPTION_HANDLING_SUPPORT = 0xB,};
enum MACRO_NOMINAL {NOMINAL_CYCLE_TIME = 125,};
enum MACRO_NOTIFICATION_ROUTINE {REGISTER_NOTIFICATION_ROUTINE = 1,DEREGISTER_NOTIFICATION_ROUTINE = 2,};
enum MACRO_NOTIFY {NOTIFY_FLAGS_NEVER = 0,NOTIFY_FLAGS_AFTER_READ = 1,NOTIFY_FLAGS_AFTER_WRITE = 2,NOTIFY_FLAGS_AFTER_LOCK = 4,};
enum MACRO_NO_BOOT {NO_BOOT_DEVICE = 0x53,};
enum MACRO_NO_BUS {NO_BUS_MANAGER = 0x3F,};
enum MACRO_NO_MORE {NO_MORE_IRP_STACK_LOCATIONS = 0x35,};
enum MACRO_NO_MORE_SYSTEM {NO_MORE_SYSTEM_PTES = 0x3F,};
enum MACRO_NO_PAGES {NO_PAGES_AVAILABLE = 0x4D,};
enum MACRO_NO_SPIN {NO_SPIN_LOCK_AVAILABLE = 0x1D,};
enum MACRO_NO_SUCH {NO_SUCH_PARTITION = 0x43,};
enum MACRO_NO_USER {NO_USER_MODE_CONTEXT = 0xE,};
enum MACRO_NULL {ANSI_NULL = 0,UNICODE_NULL = 0,};
enum MACRO_NULL64 {NULL64 = 0,};
enum MACRO_NULL_0 {NULL = 0,};
enum MACRO_OBJ {OBJ_HANDLE_TAGBITS = 0x3,};
enum MACRO_OBJECT {OBJECT_INITIALIZATION_FAILED = 0x5E,SECURITY_INITIALIZATION_FAILED = 0x5F,PROCESS_INITIALIZATION_FAILED = 0x60,HAL1_INITIALIZATION_FAILED = 0x61,OBJECT1_INITIALIZATION_FAILED = 0x62,SECURITY1_INITIALIZATION_FAILED = 0x63,SYMBOLIC_INITIALIZATION_FAILED = 0x64,MEMORY1_INITIALIZATION_FAILED = 0x65,CACHE_INITIALIZATION_FAILED = 0x66,CONFIG_INITIALIZATION_FAILED = 0x67,FILE_INITIALIZATION_FAILED = 0x68,IO1_INITIALIZATION_FAILED = 0x69,LPC_INITIALIZATION_FAILED = 0x6A,PROCESS1_INITIALIZATION_FAILED = 0x6B,REFMON_INITIALIZATION_FAILED = 0x6C,SESSION1_INITIALIZATION_FAILED = 0x6D,SESSION2_INITIALIZATION_FAILED = 0x6E,SESSION3_INITIALIZATION_FAILED = 0x6F,SESSION4_INITIALIZATION_FAILED = 0x70,SESSION5_INITIALIZATION_FAILED = 0x71,ASSIGN_DRIVE_LETTERS_FAILED = 0x72,CONFIG_LIST_FAILED = 0x73,};
enum MACRO_OBJECT_TYPE {OBJECT_TYPE_CREATE = 0x1,OBJECT_TYPE_ALL_ACCESS = 0xF0001,};
enum MACRO_OBJ_INHERIT {OBJ_INHERIT = 0x2,OBJ_PERMANENT = 0x10,OBJ_EXCLUSIVE = 0x20,OBJ_CASE_INSENSITIVE = 0x40,OBJ_OPENIF = 0x80,OBJ_OPENLINK = 0x100,OBJ_KERNEL_HANDLE = 0x200,OBJ_FORCE_ACCESS_CHECK = 0x400,OBJ_VALID_ATTRIBUTES = 0x7F2,};
enum MACRO_OBJ_NAME {OBJ_NAME_PATH_SEPARATOR = 92,};
enum MACRO_PAGE {PAGE_FAULT_WITH_INTERRUPTS_OFF = 0x49,};
enum MACRO_PAGE_FAULT {PAGE_FAULT_IN_NONPAGED_AREA = 0x50,};
enum MACRO_PAGE_FAULT_IN {PAGE_FAULT_IN_FREED_SPECIAL_POOL = 0xCC,PAGE_FAULT_BEYOND_END_OF_ALLOCATION = 0xCD,};
enum MACRO_PAGE_NOACCESS {PAGE_NOACCESS = 0x1,PAGE_READONLY = 0x2,PAGE_READWRITE = 0x4,PAGE_WRITECOPY = 0x8,PAGE_EXECUTE = 0x10,PAGE_EXECUTE_READ = 0x20,PAGE_EXECUTE_READWRITE = 0x40,PAGE_EXECUTE_WRITECOPY = 0x80,PAGE_GUARD = 0x100,PAGE_NOCACHE = 0x200,PAGE_WRITECOMBINE = 0x400,};
enum MACRO_PAGE_SIZE {PAGE_SIZE = 0x1000,PAGE_SHIFT = 0xC,};
enum MACRO_PANIC {PANIC_STACK_SWITCH = 0x2B,};
enum MACRO_PARALLEL {PARALLEL_WMI_LOG_INFO_Flags1_ID = 1,PARALLEL_WMI_LOG_INFO_Flags2_ID = 2,PARALLEL_WMI_LOG_INFO_spare_ID = 3,PARALLEL_WMI_LOG_INFO_SppWriteCount_ID = 4,PARALLEL_WMI_LOG_INFO_NibbleReadCount_ID = 5,PARALLEL_WMI_LOG_INFO_BoundedEcpWriteCount_ID = 6,PARALLEL_WMI_LOG_INFO_BoundedEcpReadCount_ID = 7,PARALLEL_WMI_LOG_INFO_HwEcpWriteCount_ID = 8,PARALLEL_WMI_LOG_INFO_HwEcpReadCount_ID = 9,PARALLEL_WMI_LOG_INFO_SwEcpWriteCount_ID = 10,PARALLEL_WMI_LOG_INFO_SwEcpReadCount_ID = 11,PARALLEL_WMI_LOG_INFO_HwEppWriteCount_ID = 12,PARALLEL_WMI_LOG_INFO_HwEppReadCount_ID = 13,PARALLEL_WMI_LOG_INFO_SwEppWriteCount_ID = 14,PARALLEL_WMI_LOG_INFO_SwEppReadCount_ID = 15,PARALLEL_WMI_LOG_INFO_ByteReadCount_ID = 16,PARALLEL_WMI_LOG_INFO_ChannelNibbleReadCount_ID = 17,};
enum MACRO_PARPORT {PARPORT_WMI_ALLOC_FREE_COUNTS_PortAllocates_ID = 1,PARPORT_WMI_ALLOC_FREE_COUNTS_PortFrees_ID = 2,};
enum MACRO_PCEVENT {PCEVENT_ITEM_FLAG_ENABLE = 1,PCEVENT_ITEM_FLAG_ONESHOT = 2,PCEVENT_ITEM_FLAG_BASICSUPPORT = 512,PCEVENT_VERB_NONE = 0,PCEVENT_VERB_ADD = 1,PCEVENT_VERB_REMOVE = 2,PCEVENT_VERB_SUPPORT = 4,};
enum MACRO_PCFILTER : __int64 {PCFILTER_NODE = 4294967295,};
enum MACRO_PCI {PCI_BUS_DRIVER_INTERNAL = 0xA1,};
enum MACRO_PCI_CAPABILITY {PCI_CAPABILITY_ID_POWER_MANAGEMENT = 0x1,PCI_CAPABILITY_ID_AGP = 0x2,PCI_CAPABILITY_ID_MSI = 0x5,PCI_CAPABILITY_ID_AGP_TARGET = 0xE,PCI_AGP_RATE_1X = 0x1,PCI_AGP_RATE_2X = 0x2,PCI_AGP_RATE_4X = 0x4,};
enum MACRO_PCI_CONFIG {PCI_CONFIG_SPACE_ACCESS_FAILURE = 0xC0,};
enum MACRO_PCI_TYPE0 {PCI_TYPE0_ADDRESSES = 6,PCI_TYPE1_ADDRESSES = 2,PCI_TYPE2_ADDRESSES = 5,PCI_MAX_DEVICES = 32,PCI_MAX_FUNCTION = 8,PCI_MAX_BRIDGE_NUMBER = 255,PCI_INVALID_VENDORID = 65535,PCI_MULTIFUNCTION = 128,PCI_DEVICE_TYPE = 0,PCI_BRIDGE_TYPE = 1,PCI_CARDBUS_BRIDGE_TYPE = 2,PCI_ENABLE_IO_SPACE = 1,PCI_ENABLE_MEMORY_SPACE = 2,PCI_ENABLE_BUS_MASTER = 4,PCI_ENABLE_SPECIAL_CYCLES = 8,PCI_ENABLE_WRITE_AND_INVALIDATE = 16,PCI_ENABLE_VGA_COMPATIBLE_PALETTE = 32,PCI_ENABLE_PARITY = 64,PCI_ENABLE_WAIT_CYCLE = 128,PCI_ENABLE_SERR = 256,PCI_ENABLE_FAST_BACK_TO_BACK = 512,PCI_STATUS_CAPABILITIES_LIST = 16,PCI_STATUS_66MHZ_CAPABLE = 32,PCI_STATUS_UDF_SUPPORTED = 64,PCI_STATUS_FAST_BACK_TO_BACK = 128,PCI_STATUS_DATA_PARITY_DETECTED = 256,PCI_STATUS_DEVSEL = 1536,PCI_STATUS_SIGNALED_TARGET_ABORT = 2048,PCI_STATUS_RECEIVED_TARGET_ABORT = 4096,PCI_STATUS_RECEIVED_MASTER_ABORT = 8192,PCI_STATUS_SIGNALED_SYSTEM_ERROR = 16384,PCI_STATUS_DETECTED_PARITY_ERROR = 32768,PCI_WHICHSPACE_CONFIG = 0,PCI_WHICHSPACE_ROM = 1382638416,PCI_CLASS_PRE_20 = 0,PCI_CLASS_MASS_STORAGE_CTLR = 1,PCI_CLASS_NETWORK_CTLR = 2,PCI_CLASS_DISPLAY_CTLR = 3,PCI_CLASS_MULTIMEDIA_DEV = 4,PCI_CLASS_MEMORY_CTLR = 5,PCI_CLASS_BRIDGE_DEV = 6,PCI_CLASS_SIMPLE_COMMS_CTLR = 7,PCI_CLASS_BASE_SYSTEM_DEV = 8,PCI_CLASS_INPUT_DEV = 9,PCI_CLASS_DOCKING_STATION = 10,PCI_CLASS_PROCESSOR = 11,PCI_CLASS_SERIAL_BUS_CTLR = 12,PCI_CLASS_WIRELESS_CTLR = 13,PCI_CLASS_INTELLIGENT_IO_CTLR = 14,PCI_CLASS_SATELLITE_COMMS_CTLR = 15,PCI_CLASS_ENCRYPTION_DECRYPTION = 16,PCI_CLASS_DATA_ACQ_SIGNAL_PROC = 17,PCI_CLASS_NOT_DEFINED = 255,PCI_SUBCLASS_PRE_20_NON_VGA = 0,PCI_SUBCLASS_PRE_20_VGA = 1,PCI_SUBCLASS_MSC_SCSI_BUS_CTLR = 0,PCI_SUBCLASS_MSC_IDE_CTLR = 1,PCI_SUBCLASS_MSC_FLOPPY_CTLR = 2,PCI_SUBCLASS_MSC_IPI_CTLR = 3,PCI_SUBCLASS_MSC_RAID_CTLR = 4,PCI_SUBCLASS_MSC_OTHER = 128,PCI_SUBCLASS_NET_ETHERNET_CTLR = 0,PCI_SUBCLASS_NET_TOKEN_RING_CTLR = 1,PCI_SUBCLASS_NET_FDDI_CTLR = 2,PCI_SUBCLASS_NET_ATM_CTLR = 3,PCI_SUBCLASS_NET_ISDN_CTLR = 4,PCI_SUBCLASS_NET_OTHER = 128,PCI_SUBCLASS_VID_VGA_CTLR = 0,PCI_SUBCLASS_VID_XGA_CTLR = 1,PCI_SUBLCASS_VID_3D_CTLR = 2,PCI_SUBCLASS_VID_OTHER = 128,PCI_SUBCLASS_MM_VIDEO_DEV = 0,PCI_SUBCLASS_MM_AUDIO_DEV = 1,PCI_SUBCLASS_MM_TELEPHONY_DEV = 2,PCI_SUBCLASS_MM_OTHER = 128,PCI_SUBCLASS_MEM_RAM = 0,PCI_SUBCLASS_MEM_FLASH = 1,PCI_SUBCLASS_MEM_OTHER = 128,PCI_SUBCLASS_BR_HOST = 0,PCI_SUBCLASS_BR_ISA = 1,PCI_SUBCLASS_BR_EISA = 2,PCI_SUBCLASS_BR_MCA = 3,PCI_SUBCLASS_BR_PCI_TO_PCI = 4,PCI_SUBCLASS_BR_PCMCIA = 5,PCI_SUBCLASS_BR_NUBUS = 6,PCI_SUBCLASS_BR_CARDBUS = 7,PCI_SUBCLASS_BR_RACEWAY = 8,PCI_SUBCLASS_BR_OTHER = 128,PCI_SUBCLASS_COM_SERIAL = 0,PCI_SUBCLASS_COM_PARALLEL = 1,PCI_SUBCLASS_COM_MULTIPORT = 2,PCI_SUBCLASS_COM_MODEM = 3,PCI_SUBCLASS_COM_OTHER = 128,PCI_SUBCLASS_SYS_INTERRUPT_CTLR = 0,PCI_SUBCLASS_SYS_DMA_CTLR = 1,PCI_SUBCLASS_SYS_SYSTEM_TIMER = 2,PCI_SUBCLASS_SYS_REAL_TIME_CLOCK = 3,PCI_SUBCLASS_SYS_GEN_HOTPLUG_CTLR = 4,PCI_SUBCLASS_SYS_OTHER = 128,PCI_SUBCLASS_INP_KEYBOARD = 0,PCI_SUBCLASS_INP_DIGITIZER = 1,PCI_SUBCLASS_INP_MOUSE = 2,PCI_SUBCLASS_INP_SCANNER = 3,PCI_SUBCLASS_INP_GAMEPORT = 4,PCI_SUBCLASS_INP_OTHER = 128,PCI_SUBCLASS_DOC_GENERIC = 0,PCI_SUBCLASS_DOC_OTHER = 128,PCI_SUBCLASS_PROC_386 = 0,PCI_SUBCLASS_PROC_486 = 1,PCI_SUBCLASS_PROC_PENTIUM = 2,PCI_SUBCLASS_PROC_ALPHA = 16,PCI_SUBCLASS_PROC_POWERPC = 32,PCI_SUBCLASS_PROC_COPROCESSOR = 64,PCI_SUBCLASS_SB_IEEE1394 = 0,PCI_SUBCLASS_SB_ACCESS = 1,PCI_SUBCLASS_SB_SSA = 2,PCI_SUBCLASS_SB_USB = 3,PCI_SUBCLASS_SB_FIBRE_CHANNEL = 4,PCI_SUBCLASS_SB_SMBUS = 5,PCI_SUBCLASS_WIRELESS_IRDA = 0,PCI_SUBCLASS_WIRELESS_CON_IR = 1,PCI_SUBCLASS_WIRELESS_RF = 16,PCI_SUBCLASS_WIRELESS_OTHER = 128,PCI_SUBCLASS_INTIO_I2O = 0,PCI_SUBCLASS_SAT_TV = 1,PCI_SUBCLASS_SAT_AUDIO = 2,PCI_SUBCLASS_SAT_VOICE = 3,PCI_SUBCLASS_SAT_DATA = 4,PCI_SUBCLASS_CRYPTO_NET_COMP = 0,PCI_SUBCLASS_CRYPTO_ENTERTAINMENT = 16,PCI_SUBCLASS_CRYPTO_OTHER = 128,PCI_SUBCLASS_DASP_DPIO = 0,PCI_SUBCLASS_DASP_OTHER = 128,PCI_ADDRESS_IO_SPACE = 1,PCI_ADDRESS_MEMORY_TYPE_MASK = 6,PCI_ADDRESS_MEMORY_PREFETCHABLE = 8,PCI_ADDRESS_IO_ADDRESS_MASK = -4,PCI_ADDRESS_MEMORY_ADDRESS_MASK = -16,PCI_ADDRESS_ROM_ADDRESS_MASK = -2048,PCI_TYPE_32BIT = 0,PCI_TYPE_20BIT = 2,PCI_TYPE_64BIT = 4,PCI_ROMADDRESS_ENABLED = 1,PCI_DEVICE_PRESENT_INTERFACE_VERSION = 1,PCI_USE_SUBSYSTEM_IDS = 1,PCI_USE_REVISION = 2,PCI_USE_VENDEV_IDS = 4,PCI_USE_CLASS_SUBCLASS = 8,PCI_USE_PROGIF = 16,PCI_USE_LOCAL_BUS = 32,PCI_USE_LOCAL_DEVICE = 64,};
enum MACRO_PCI_VERIFIER {PCI_VERIFIER_DETECTED_VIOLATION = 0xF6,};
enum MACRO_PCMETHOD {PCMETHOD_ITEM_FLAG_NONE = 0,PCMETHOD_ITEM_FLAG_READ = 1,PCMETHOD_ITEM_FLAG_WRITE = 2,PCMETHOD_ITEM_FLAG_MODIFY = 3,PCMETHOD_ITEM_FLAG_SOURCE = 4,PCMETHOD_ITEM_FLAG_BASICSUPPORT = 512,};
enum MACRO_PCPROPERTY {PCPROPERTY_ITEM_FLAG_GET = 1,PCPROPERTY_ITEM_FLAG_SET = 2,PCPROPERTY_ITEM_FLAG_BASICSUPPORT = 512,PCPROPERTY_ITEM_FLAG_SERIALIZERAW = 8192,PCPROPERTY_ITEM_FLAG_UNSERIALIZERAW = 16384,PCPROPERTY_ITEM_FLAG_SERIALIZESIZE = 32768,PCPROPERTY_ITEM_FLAG_SERIALIZE = 57344,PCPROPERTY_ITEM_FLAG_DEFAULTVALUES = 65536,};
enum MACRO_PF {PF_FLOATING_POINT_PRECISION_ERRATA = 0,PF_FLOATING_POINT_EMULATED = 1,PF_COMPARE_EXCHANGE_DOUBLE = 2,PF_MMX_INSTRUCTIONS_AVAILABLE = 3,PF_PPC_MOVEMEM_64BIT_OK = 4,PF_ALPHA_BYTE_INSTRUCTIONS = 5,PF_XMMI_INSTRUCTIONS_AVAILABLE = 6,PF_3DNOW_INSTRUCTIONS_AVAILABLE = 7,PF_RDTSC_INSTRUCTION_AVAILABLE = 8,PF_PAE_ENABLED = 9,PF_XMMI64_INSTRUCTIONS_AVAILABLE = 10,};
enum MACRO_PFN {PFN_SHARE_COUNT = 0x1B,PFN_REFERENCE_COUNT = 0x1C,};
enum MACRO_PFN_LIST {PFN_LIST_CORRUPT = 0x4E,};
enum MACRO_PHASE0 {PHASE0_EXCEPTION = 0x78,};
enum MACRO_PHY {PHY_PACKET_ID_CONFIGURATION = 0,PHY_PACKET_ID_LINK_ON = 1,PHY_PACKET_ID_SELF_ID = 2,};
enum MACRO_PINBALL {PINBALL_FILE_SYSTEM = 0x59,};
enum MACRO_PLUGPLAY {PLUGPLAY_REGKEY_DEVICE = 1,PLUGPLAY_REGKEY_DRIVER = 2,PLUGPLAY_REGKEY_CURRENT_HWPROFILE = 4,};
enum MACRO_PNP {PNP_INTERNAL_ERROR = 0x95,};
enum MACRO_PNPNOTIFY {PNPNOTIFY_DEVICE_INTERFACE_INCLUDE_EXISTING_INTERFACES = 0x1,};
enum MACRO_PNP_DETECTED {PNP_DETECTED_FATAL_ERROR = 0xCA,};
enum MACRO_PNP_DEVICE {PNP_DEVICE_DISABLED = 0x1,PNP_DEVICE_DONT_DISPLAY_IN_UI = 0x2,PNP_DEVICE_FAILED = 0x4,PNP_DEVICE_REMOVED = 0x8,PNP_DEVICE_RESOURCE_REQUIREMENTS_CHANGED = 0x10,PNP_DEVICE_NOT_DISABLEABLE = 0x20,};
enum MACRO_PO {PO_CB_SYSTEM_POWER_POLICY = 0,PO_CB_AC_STATUS = 1,PO_CB_BUTTON_COLLISION = 2,PO_CB_SYSTEM_STATE_LOCK = 3,PO_CB_LID_SWITCH_STATE = 4,PO_CB_PROCESSOR_POWER_POLICY = 5,};
enum MACRO_POINTER {POINTER_PORT_WMI_STD_I8042 = 0,POINTER_PORT_WMI_STD_SERIAL = 1,POINTER_PORT_WMI_STD_USB = 2,POINTER_PORT_WMI_STD_DATA_ConnectorType_ID = 1,POINTER_PORT_WMI_STD_DATA_DataQueueSize_ID = 2,POINTER_PORT_WMI_STD_DATA_ErrorCount_ID = 3,POINTER_PORT_WMI_STD_DATA_Buttons_ID = 4,POINTER_PORT_WMI_STD_MOUSE = 0,POINTER_PORT_WMI_STD_POINTER = 1,POINTER_PORT_WMI_ABSOLUTE_POINTER = 2,POINTER_PORT_WMI_TABLET = 3,POINTER_PORT_WMI_TOUCH_SCRENE = 4,POINTER_PORT_WMI_PEN = 5,POINTER_PORT_WMI_TRACK_BALL = 6,POINTER_PORT_WMI_OTHER = 256,POINTER_PORT_WMI_STD_DATA_HardwareType_ID = 5,};
enum MACRO_POOL {POOL_CORRUPTION_IN_FILE_AREA = 0xDE,};
enum MACRO_POOL_COLD {POOL_COLD_ALLOCATION = 256,};
enum MACRO_POOL_TAGGING {POOL_TAGGING = 1,};
enum MACRO_PORT {PORT_MAXIMUM_MESSAGE_LENGTH = 256,};
enum MACRO_PORT_SUPPORTS {PORT_SUPPORTS_NOTHING = 0,PORT_SUPPORTS_CSRS = 1,PORT_SUPPORTS_LARGE_ASYNC = 2,PORT_SUPPORTS_NATIVE_ENDIAN = 4,PORT_SUPPORTS_WMI = 8,};
enum MACRO_POWER {POWER_FAILURE_SIMULATE = 0xE5,};
enum MACRO_POWER_CLASS {POWER_CLASS_NOT_NEED_NOT_REPEAT = 0,POWER_CLASS_SELF_POWER_PROVIDE_15W = 1,POWER_CLASS_SELF_POWER_PROVIDE_30W = 2,POWER_CLASS_SELF_POWER_PROVIDE_45W = 3,POWER_CLASS_MAYBE_POWERED_UPTO_1W = 4,POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_2W = 5,POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_5W = 6,POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_9W = 7,};
enum MACRO_POWER_SYSTEM {POWER_SYSTEM_MAXIMUM = 7,};
enum MACRO_PP0 {PP0_INITIALIZATION_FAILED = 0x8F,PP1_INITIALIZATION_FAILED = 0x90,};
enum MACRO_PRAGMA {PRAGMA_DEPRECATED_DDK = 0,};
enum MACRO_PRIORITY {HIGH_PRIORITY = 31,MAXIMUM_PRIORITY = 32,};
enum MACRO_PRIVILEGE {PRIVILEGE_SET_ALL_NECESSARY = 1,};
enum MACRO_PROCESS {PROCESS_HAS_LOCKED_PAGES = 0x76,};
enum MACRO_PROCESSOR {PROCESSOR_FEATURE_MAX = 64,};
enum MACRO_PROCESS_DUP {PROCESS_DUP_HANDLE = 0x40,PROCESS_ALL_ACCESS = 0x1F0FFF,};
enum MACRO_PSS {PSS_MESSAGE_INTRO = 0x40000081,};
enum MACRO_PTR {MAXUINT_PTR = -1,MAXINT_PTR = -1,MININT_PTR = 0,MAXULONG_PTR = -1,MAXLONG_PTR = -1,MINLONG_PTR = 0,MAXUHALF_PTR = 65535,MAXHALF_PTR = 32767,MINHALF_PTR = -32768,};
enum MACRO_QDI {QDI_SETDIBITS = 0x1,QDI_GETDIBITS = 0x2,QDI_DIBTOSCREEN = 0x4,QDI_STRETCHDIB = 0x8,};
enum MACRO_QUERYDIBSUPPORT {QUERYDIBSUPPORT = 3073,};
enum MACRO_QUOTA {QUOTA_UNDERFLOW = 0x21,};
enum MACRO_RAMDISK {RAMDISK_BOOT_INITIALIZATION_FAILED = 0xF8,};
enum MACRO_RCODE {RCODE_RESPONSE_COMPLETE = 0,RCODE_RESERVED1 = 1,RCODE_RESERVED2 = 2,RCODE_RESERVED3 = 3,RCODE_CONFLICT_ERROR = 4,RCODE_DATA_ERROR = 5,RCODE_TYPE_ERROR = 6,RCODE_ADDRESS_ERROR = 7,RCODE_TIMED_OUT = 15,RCODE_STATUS_MASK = -1072562048,};
enum MACRO_READ {READ_CONTROL = 0x20000,};
enum MACRO_READ_LOG {READ_LOG_SECTORS_IN_LogAddress_ID = 1,READ_LOG_SECTORS_IN_SectorCount_ID = 2,READ_LOG_SECTORS_OUT_Length_ID = 3,READ_LOG_SECTORS_OUT_LogSectors_ID = 4,};
enum MACRO_RECOM {RECOM_DRIVER = 0x84,};
enum MACRO_RECURSIVE {RECURSIVE_MACHINE_CHECK = 0xFB,};
enum MACRO_REDBOOK {REDBOOK_WMI_NUMBER_OF_BUFFERS_ID = 1,REDBOOK_WMI_SECTORS_PER_READ_ID = 2,REDBOOK_WMI_SECTORS_PER_READ_MASK_ID = 3,REDBOOK_WMI_MAX_SECTORS_PER_READ_ID = 4,REDBOOK_WMI_PLAY_ENABLED_ID = 5,REDBOOK_WMI_CDDA_SUPPORTED_ID = 6,REDBOOK_WMI_CDDA_ACCURATE_ID = 7,REDBOOK_WMI_STD_DATA_Reserved1_ID = 8,REDBOOK_WMI_PERF_TIME_READING_DELAY_ID = 1,REDBOOK_WMI_PERF_TIME_READING_ID = 2,REDBOOK_WMI_PERF_TIME_STREAMING_DELAY_ID = 3,REDBOOK_WMI_PERF_TIME_STREAMING_ID = 4,REDBOOK_WMI_PERF_DATA_PROCESSED_ID = 5,REDBOOK_WMI_PERF_STREAM_PAUSED_COUNT_ID = 6,};
enum MACRO_REFERENCE {REFERENCE_BY_POINTER = 0x18,};
enum MACRO_REG {REG_OPTION_RESERVED = 0x0,REG_OPTION_NON_VOLATILE = 0x0,REG_OPTION_VOLATILE = 0x1,REG_OPTION_CREATE_LINK = 0x2,REG_OPTION_BACKUP_RESTORE = 0x4,REG_OPTION_OPEN_LINK = 0x8,REG_LEGAL_OPTION = 0xF,REG_CREATED_NEW_KEY = 0x1,REG_OPENED_EXISTING_KEY = 0x2,REG_STANDARD_FORMAT = 0x1,REG_LATEST_FORMAT = 0x2,REG_NO_COMPRESSION = 0x4,REG_WHOLE_HIVE_VOLATILE = 0x1,REG_REFRESH_HIVE = 0x2,REG_NO_LAZY_FLUSH = 0x4,REG_FORCE_RESTORE = 0x8,REG_FORCE_UNLOAD = 0x1,};
enum MACRO_REGISTRY {REGISTRY_ERROR = 0x51,};
enum MACRO_REG_NONE {REG_NONE = 0,REG_SZ = 1,REG_EXPAND_SZ = 2,REG_BINARY = 3,REG_DWORD = 4,REG_DWORD_LITTLE_ENDIAN = 4,REG_DWORD_BIG_ENDIAN = 5,REG_LINK = 6,REG_MULTI_SZ = 7,REG_RESOURCE_LIST = 8,REG_FULL_RESOURCE_DESCRIPTOR = 9,REG_RESOURCE_REQUIREMENTS_LIST = 10,REG_QWORD = 11,REG_QWORD_LITTLE_ENDIAN = 11,};
enum MACRO_REMOVAL {REMOVAL_EVENT_WAKE_ENABLE = 3,REMOVAL_REQUEST_ENABLE = 4,};
enum MACRO_REQUEST {REQUEST_ASYNC_READ = 0,REQUEST_ASYNC_WRITE = 1,REQUEST_ASYNC_LOCK = 2,REQUEST_ISOCH_ALLOCATE_BANDWIDTH = 3,REQUEST_ISOCH_ALLOCATE_CHANNEL = 4,REQUEST_ISOCH_ALLOCATE_RESOURCES = 5,REQUEST_ISOCH_ATTACH_BUFFERS = 6,REQUEST_ISOCH_DETACH_BUFFERS = 7,REQUEST_ISOCH_FREE_BANDWIDTH = 8,REQUEST_ISOCH_FREE_CHANNEL = 9,REQUEST_ISOCH_FREE_RESOURCES = 10,REQUEST_ISOCH_LISTEN = 11,REQUEST_ISOCH_STOP = 12,REQUEST_ISOCH_TALK = 13,REQUEST_ISOCH_QUERY_CYCLE_TIME = 14,REQUEST_ISOCH_QUERY_RESOURCES = 15,REQUEST_ISOCH_SET_CHANNEL_BANDWIDTH = 16,REQUEST_ALLOCATE_ADDRESS_RANGE = 17,REQUEST_FREE_ADDRESS_RANGE = 18,REQUEST_GET_LOCAL_HOST_INFO = 19,REQUEST_GET_ADDR_FROM_DEVICE_OBJECT = 20,REQUEST_CONTROL = 21,REQUEST_GET_SPEED_BETWEEN_DEVICES = 22,REQUEST_SET_DEVICE_XMIT_PROPERTIES = 23,REQUEST_GET_CONFIGURATION_INFO = 24,REQUEST_BUS_RESET = 25,REQUEST_GET_GENERATION_COUNT = 26,REQUEST_SEND_PHY_CONFIG_PACKET = 27,REQUEST_GET_SPEED_TOPOLOGY_MAPS = 28,REQUEST_BUS_RESET_NOTIFICATION = 29,REQUEST_ASYNC_STREAM = 30,REQUEST_SET_LOCAL_HOST_PROPERTIES = 31,REQUEST_ISOCH_MODIFY_STREAM_PROPERTIES = 32,};
enum MACRO_REQUEST_DEVICE {REQUEST_DEVICE_INSERTED_STATE = 5,REQUEST_DEVICE_ENABLED_STATE = 6,REQUEST_REMOVAL_REQUESTED_STATE = 7,REQUEST_REMOVAL_ALLOWED_STATE = 8,};
enum MACRO_RESOURCE {RESOURCE_NOT_OWNED = 0xE3,};
enum MACRO_RESOURCE_HASH {RESOURCE_HASH_TABLE_SIZE = 64,};
enum MACRO_RESOURCE_USED {RESOURCE_USED_IN_LISTENING = 0x1,RESOURCE_USED_IN_TALKING = 0x2,RESOURCE_BUFFERS_CIRCULAR = 0x4,RESOURCE_STRIP_ADDITIONAL_QUADLETS = 0x8,RESOURCE_TIME_STAMP_ON_COMPLETION = 0x10,RESOURCE_SYNCH_ON_TIME = 0x20,RESOURCE_USE_PACKET_BASED = 0x40,RESOURCE_VARIABLE_ISOCH_PAYLOAD = 0x80,RESOURCE_USE_MULTICHANNEL = 0x100,};
enum MACRO_RETRIEVE {RETRIEVE_DEVICE_UNIT_INFO = 0x0,RETRIEVE_LOCAL_UNIT_INFO = 0x1,};
enum MACRO_REVISION {MAX_ACL_REVISION = 4,SECURITY_DESCRIPTOR_REVISION = 1,};
enum MACRO_ROCKWELL {ROCKWELL_WA1_WAVEIN = 100,ROCKWELL_WA1_WAVEOUT = 101,ROCKWELL_WA1_SYNTH = 102,ROCKWELL_WA1_MIXER = 103,ROCKWELL_WA1_MPU401_IN = 104,ROCKWELL_WA1_MPU401_OUT = 105,ROCKWELL_WA2_WAVEIN = 200,ROCKWELL_WA2_WAVEOUT = 201,ROCKWELL_WA2_SYNTH = 202,ROCKWELL_WA2_MIXER = 203,ROCKWELL_WA2_MPU401_IN = 204,ROCKWELL_WA2_MPU401_OUT = 205,};
enum MACRO_RPC {RPC_NT_INVALID_STRING_BINDING = 0xC0020001,RPC_NT_WRONG_KIND_OF_BINDING = 0xC0020002,RPC_NT_INVALID_BINDING = 0xC0020003,RPC_NT_PROTSEQ_NOT_SUPPORTED = 0xC0020004,RPC_NT_INVALID_RPC_PROTSEQ = 0xC0020005,RPC_NT_INVALID_STRING_UUID = 0xC0020006,RPC_NT_INVALID_ENDPOINT_FORMAT = 0xC0020007,RPC_NT_INVALID_NET_ADDR = 0xC0020008,RPC_NT_NO_ENDPOINT_FOUND = 0xC0020009,RPC_NT_INVALID_TIMEOUT = 0xC002000A,RPC_NT_OBJECT_NOT_FOUND = 0xC002000B,RPC_NT_ALREADY_REGISTERED = 0xC002000C,RPC_NT_TYPE_ALREADY_REGISTERED = 0xC002000D,RPC_NT_ALREADY_LISTENING = 0xC002000E,RPC_NT_NO_PROTSEQS_REGISTERED = 0xC002000F,RPC_NT_NOT_LISTENING = 0xC0020010,RPC_NT_UNKNOWN_MGR_TYPE = 0xC0020011,RPC_NT_UNKNOWN_IF = 0xC0020012,RPC_NT_NO_BINDINGS = 0xC0020013,RPC_NT_NO_PROTSEQS = 0xC0020014,RPC_NT_CANT_CREATE_ENDPOINT = 0xC0020015,RPC_NT_OUT_OF_RESOURCES = 0xC0020016,RPC_NT_SERVER_UNAVAILABLE = 0xC0020017,RPC_NT_SERVER_TOO_BUSY = 0xC0020018,RPC_NT_INVALID_NETWORK_OPTIONS = 0xC0020019,RPC_NT_NO_CALL_ACTIVE = 0xC002001A,RPC_NT_CALL_FAILED = 0xC002001B,RPC_NT_CALL_FAILED_DNE = 0xC002001C,RPC_NT_PROTOCOL_ERROR = 0xC002001D,RPC_NT_UNSUPPORTED_TRANS_SYN = 0xC002001F,RPC_NT_UNSUPPORTED_TYPE = 0xC0020021,RPC_NT_INVALID_TAG = 0xC0020022,RPC_NT_INVALID_BOUND = 0xC0020023,RPC_NT_NO_ENTRY_NAME = 0xC0020024,RPC_NT_INVALID_NAME_SYNTAX = 0xC0020025,RPC_NT_UNSUPPORTED_NAME_SYNTAX = 0xC0020026,RPC_NT_UUID_NO_ADDRESS = 0xC0020028,RPC_NT_DUPLICATE_ENDPOINT = 0xC0020029,RPC_NT_UNKNOWN_AUTHN_TYPE = 0xC002002A,RPC_NT_MAX_CALLS_TOO_SMALL = 0xC002002B,RPC_NT_STRING_TOO_LONG = 0xC002002C,RPC_NT_PROTSEQ_NOT_FOUND = 0xC002002D,RPC_NT_PROCNUM_OUT_OF_RANGE = 0xC002002E,RPC_NT_BINDING_HAS_NO_AUTH = 0xC002002F,RPC_NT_UNKNOWN_AUTHN_SERVICE = 0xC0020030,RPC_NT_UNKNOWN_AUTHN_LEVEL = 0xC0020031,RPC_NT_INVALID_AUTH_IDENTITY = 0xC0020032,RPC_NT_UNKNOWN_AUTHZ_SERVICE = 0xC0020033,};
enum MACRO_RPC_NT {RPC_NT_NOTHING_TO_EXPORT = 0xC0020037,RPC_NT_INCOMPLETE_NAME = 0xC0020038,RPC_NT_INVALID_VERS_OPTION = 0xC0020039,RPC_NT_NO_MORE_MEMBERS = 0xC002003A,RPC_NT_NOT_ALL_OBJS_UNEXPORTED = 0xC002003B,RPC_NT_INTERFACE_NOT_FOUND = 0xC002003C,RPC_NT_ENTRY_ALREADY_EXISTS = 0xC002003D,RPC_NT_ENTRY_NOT_FOUND = 0xC002003E,RPC_NT_NAME_SERVICE_UNAVAILABLE = 0xC002003F,RPC_NT_INVALID_NAF_ID = 0xC0020040,RPC_NT_CANNOT_SUPPORT = 0xC0020041,RPC_NT_NO_CONTEXT_AVAILABLE = 0xC0020042,RPC_NT_INTERNAL_ERROR = 0xC0020043,RPC_NT_ZERO_DIVIDE = 0xC0020044,RPC_NT_ADDRESS_ERROR = 0xC0020045,RPC_NT_FP_DIV_ZERO = 0xC0020046,RPC_NT_FP_UNDERFLOW = 0xC0020047,RPC_NT_FP_OVERFLOW = 0xC0020048,RPC_NT_NO_MORE_ENTRIES = 0xC0030001,RPC_NT_SS_CHAR_TRANS_OPEN_FAIL = 0xC0030002,RPC_NT_SS_CHAR_TRANS_SHORT_FILE = 0xC0030003,RPC_NT_SS_IN_NULL_CONTEXT = 0xC0030004,RPC_NT_SS_CONTEXT_MISMATCH = 0xC0030005,RPC_NT_SS_CONTEXT_DAMAGED = 0xC0030006,RPC_NT_SS_HANDLES_MISMATCH = 0xC0030007,RPC_NT_SS_CANNOT_GET_CALL_HANDLE = 0xC0030008,RPC_NT_NULL_REF_POINTER = 0xC0030009,RPC_NT_ENUM_VALUE_OUT_OF_RANGE = 0xC003000A,RPC_NT_BYTE_COUNT_TOO_SMALL = 0xC003000B,RPC_NT_BAD_STUB_DATA = 0xC003000C,RPC_NT_CALL_IN_PROGRESS = 0xC0020049,RPC_NT_NO_MORE_BINDINGS = 0xC002004A,RPC_NT_GROUP_MEMBER_NOT_FOUND = 0xC002004B,};
enum MACRO_RPC_NT_INVALID {RPC_NT_INVALID_OBJECT = 0xC002004D,RPC_NT_NO_INTERFACES = 0xC002004F,RPC_NT_CALL_CANCELLED = 0xC0020050,RPC_NT_BINDING_INCOMPLETE = 0xC0020051,RPC_NT_COMM_FAILURE = 0xC0020052,RPC_NT_UNSUPPORTED_AUTHN_LEVEL = 0xC0020053,RPC_NT_NO_PRINC_NAME = 0xC0020054,RPC_NT_NOT_RPC_ERROR = 0xC0020055,RPC_NT_UUID_LOCAL_ONLY = 0x40020056,RPC_NT_SEC_PKG_ERROR = 0xC0020057,RPC_NT_NOT_CANCELLED = 0xC0020058,RPC_NT_INVALID_ES_ACTION = 0xC0030059,RPC_NT_WRONG_ES_VERSION = 0xC003005A,RPC_NT_WRONG_STUB_VERSION = 0xC003005B,RPC_NT_INVALID_PIPE_OBJECT = 0xC003005C,RPC_NT_INVALID_PIPE_OPERATION = 0xC003005D,RPC_NT_WRONG_PIPE_VERSION = 0xC003005E,RPC_NT_PIPE_CLOSED = 0xC003005F,RPC_NT_PIPE_DISCIPLINE_ERROR = 0xC0030060,RPC_NT_PIPE_EMPTY = 0xC0030061,RPC_NT_INVALID_ASYNC_HANDLE = 0xC0020062,RPC_NT_INVALID_ASYNC_CALL = 0xC0020063,RPC_NT_SEND_INCOMPLETE = 0x400200AF,};
enum MACRO_RT {RT_STRING = 6,RT_RCDATA = 10,};
enum MACRO_RTL {RTL_QUERY_REGISTRY_SUBKEY = 0x1,RTL_QUERY_REGISTRY_TOPKEY = 0x2,RTL_QUERY_REGISTRY_REQUIRED = 0x4,RTL_QUERY_REGISTRY_NOVALUE = 0x8,RTL_QUERY_REGISTRY_NOEXPAND = 0x10,RTL_QUERY_REGISTRY_DIRECT = 0x20,RTL_QUERY_REGISTRY_DELETE = 0x40,RTL_REGISTRY_ABSOLUTE = 0x0,RTL_REGISTRY_SERVICES = 0x1,RTL_REGISTRY_CONTROL = 0x2,RTL_REGISTRY_WINDOWS_NT = 0x3,RTL_REGISTRY_DEVICEMAP = 0x4,RTL_REGISTRY_USER = 0x5,RTL_REGISTRY_MAXIMUM = 0x6,RTL_REGISTRY_HANDLE = 0x40000000,RTL_REGISTRY_OPTIONAL = 0x80000000,};
enum MACRO_ReadLogSectors {ReadLogSectors = 6,};
enum MACRO_RegisteredGuids {RegisteredGuids_GuidType_ID = 1,RegisteredGuids_LoggerId_ID = 2,RegisteredGuids_EnableLevel_ID = 3,RegisteredGuids_EnableFlags_ID = 4,RegisteredGuids_IsEnabled_ID = 5,};
enum MACRO_ResourceNeverExclusive {ResourceNeverExclusive = 0x10,ResourceReleaseByOtherThread = 0x20,ResourceOwnedExclusive = 0x80,};
enum MACRO_SCODE {SCODE_100_RATE = 0,SCODE_200_RATE = 1,SCODE_400_RATE = 2,SCODE_800_RATE = 3,SCODE_1600_RATE = 4,SCODE_3200_RATE = 5,};
enum MACRO_SCSI {SCSI_VERIFIER_DETECTED_VIOLATION = 0xF1,};
enum MACRO_SE {SE_PRIVILEGE_ENABLED_BY_DEFAULT = 0x1,SE_PRIVILEGE_ENABLED = 0x2,SE_PRIVILEGE_REMOVED = 0x4,SE_PRIVILEGE_USED_FOR_ACCESS = 0x80000000,};
enum MACRO_SEC {SEC_RESERVE = 0x4000000,};
enum MACRO_SECTION {SECTION_QUERY = 0x1,SECTION_MAP_WRITE = 0x2,SECTION_MAP_READ = 0x4,SECTION_MAP_EXECUTE = 0x8,SECTION_EXTEND_SIZE = 0x10,SECTION_ALL_ACCESS = 0xF001F,};
enum MACRO_SECURITY {SECURITY_SYSTEM = 0x29,};
enum MACRO_SECURITY_DESCRIPTOR {SECURITY_DESCRIPTOR_REVISION1 = 1,};
enum MACRO_SECURITY_DYNAMIC {SECURITY_DYNAMIC_TRACKING = 1,SECURITY_STATIC_TRACKING = 0,};
enum MACRO_SECURITY_INFORMATION {OWNER_SECURITY_INFORMATION = 0x1,GROUP_SECURITY_INFORMATION = 0x2,DACL_SECURITY_INFORMATION = 0x4,SACL_SECURITY_INFORMATION = 0x8,PROTECTED_DACL_SECURITY_INFORMATION = 0x80000000,PROTECTED_SACL_SECURITY_INFORMATION = 0x40000000,UNPROTECTED_DACL_SECURITY_INFORMATION = 0x20000000,UNPROTECTED_SACL_SECURITY_INFORMATION = 0x10000000,};
enum MACRO_SEEK {SEEK_CUR = 1,SEEK_END = 2,SEEK_SET = 0,};
enum MACRO_SEGMENT {SEGMENT_ALL_ACCESS = 983071,};
enum MACRO_SELF {SELF_ID_CONNECTED_TO_CHILD = 3,SELF_ID_CONNECTED_TO_PARENT = 2,SELF_ID_NOT_CONNECTED = 1,SELF_ID_NOT_PRESENT = 0,};
enum MACRO_SELFID {SELFID_PACKET_SIGNITURE = 2,};
enum MACRO_SEMAPHORE {SEMAPHORE_QUERY_STATE = 0x1,SEMAPHORE_MODIFY_STATE = 0x2,SEMAPHORE_ALL_ACCESS = 0x1F0003,};
enum MACRO_SERIAL {SERIAL_DRIVER_INTERNAL = 0x38,};
enum MACRO_SERIAL_WMI {SERIAL_WMI_PARITY_NONE = 0,SERIAL_WMI_PARITY_ODD = 1,SERIAL_WMI_PARITY_EVEN = 2,SERIAL_WMI_PARITY_SPACE = 3,SERIAL_WMI_PARITY_MARK = 4,SERIAL_WMI_COMM_DATA_Parity_ID = 3,SERIAL_WMI_COMM_DATA_ParityCheckEnable_ID = 4,SERIAL_WMI_STOP_1 = 0,SERIAL_WMI_STOP_1_5 = 1,SERIAL_WMI_STOP_2 = 2,SERIAL_WMI_COMM_DATA_StopBits_ID = 5,SERIAL_WMI_COMM_DATA_XoffCharacter_ID = 6,SERIAL_WMI_COMM_DATA_XoffXmitThreshold_ID = 7,SERIAL_WMI_COMM_DATA_XonCharacter_ID = 8,SERIAL_WMI_COMM_DATA_XonXmitThreshold_ID = 9,SERIAL_WMI_COMM_DATA_MaximumBaudRate_ID = 10,SERIAL_WMI_COMM_DATA_MaximumOutputBufferSize_ID = 11,SERIAL_WMI_COMM_DATA_MaximumInputBufferSize_ID = 12,SERIAL_WMI_COMM_DATA_Support16BitMode_ID = 13,SERIAL_WMI_COMM_DATA_SupportDTRDSR_ID = 14,SERIAL_WMI_COMM_DATA_SupportIntervalTimeouts_ID = 15,SERIAL_WMI_COMM_DATA_SupportParityCheck_ID = 16,SERIAL_WMI_COMM_DATA_SupportRTSCTS_ID = 17,SERIAL_WMI_COMM_DATA_SupportXonXoff_ID = 18,SERIAL_WMI_COMM_DATA_SettableBaudRate_ID = 19,SERIAL_WMI_COMM_DATA_SettableDataBits_ID = 20,SERIAL_WMI_COMM_DATA_SettableFlowControl_ID = 21,SERIAL_WMI_COMM_DATA_SettableParity_ID = 22,SERIAL_WMI_COMM_DATA_SettableParityCheck_ID = 23,SERIAL_WMI_COMM_DATA_SettableStopBits_ID = 24,SERIAL_WMI_COMM_DATA_IsBusy_ID = 25,SERIAL_WMI_HW_DATA_IrqNumber_ID = 1,SERIAL_WMI_HW_DATA_IrqVector_ID = 2,SERIAL_WMI_HW_DATA_IrqLevel_ID = 3,SERIAL_WMI_HW_DATA_IrqAffinityMask_ID = 4,SERIAL_WMI_INTTYPE_LATCHED = 0,SERIAL_WMI_INTTYPE_LEVEL = 1,SERIAL_WMI_HW_DATA_InterruptType_ID = 5,SERIAL_WMI_HW_DATA_BaseIOAddress_ID = 6,SERIAL_WMI_PERF_DATA_ReceivedCount_ID = 1,SERIAL_WMI_PERF_DATA_TransmittedCount_ID = 2,SERIAL_WMI_PERF_DATA_FrameErrorCount_ID = 3,SERIAL_WMI_PERF_DATA_SerialOverrunErrorCount_ID = 4,SERIAL_WMI_PERF_DATA_BufferOverrunErrorCount_ID = 5,SERIAL_WMI_PERF_DATA_ParityErrorCount_ID = 6,SERIAL_WMI_COMMPROP_wPacketLength_ID = 1,SERIAL_WMI_COMMPROP_wPacketVersion_ID = 2,SERIAL_WMI_COMMPROP_dwServiceMask_ID = 3,SERIAL_WMI_COMMPROP_dwReserved1_ID = 4,SERIAL_WMI_COMMPROP_dwMaxTxQueue_ID = 5,SERIAL_WMI_COMMPROP_dwMaxRxQueue_ID = 6,SERIAL_WMI_COMMPROP_dwMaxBaud_ID = 7,SERIAL_WMI_COMMPROP_dwProvSubType_ID = 8,SERIAL_WMI_COMMPROP_dwProvCapabilities_ID = 9,SERIAL_WMI_COMMPROP_dwSettableParams_ID = 10,SERIAL_WMI_COMMPROP_dwSettableBaud_ID = 11,SERIAL_WMI_COMMPROP_wSettableData_ID = 12,SERIAL_WMI_COMMPROP_wSettableStopParity_ID = 13,SERIAL_WMI_COMMPROP_dwCurrentTxQueue_ID = 14,SERIAL_WMI_COMMPROP_dwCurrentRxQueue_ID = 15,SERIAL_WMI_COMMPROP_dwProvSpec1_ID = 16,SERIAL_WMI_COMMPROP_dwProvSpec2_ID = 17,SERIAL_WMI_COMMPROP_dwProvCharSize_ID = 18,SERIAL_WMI_COMMPROP_wcProvChar_ID = 19,};
enum MACRO_SERVICE {SERVICE_KERNEL_DRIVER = 0x1,SERVICE_FILE_SYSTEM_DRIVER = 0x2,SERVICE_ADAPTER = 0x4,SERVICE_RECOGNIZER_DRIVER = 0x8,SERVICE_DRIVER = 0xB,SERVICE_WIN32_OWN_PROCESS = 0x10,SERVICE_WIN32_SHARE_PROCESS = 0x20,SERVICE_WIN32 = 0x30,SERVICE_INTERACTIVE_PROCESS = 0x100,SERVICE_TYPE_ALL = 0x13F,SERVICE_BOOT_START = 0x0,SERVICE_SYSTEM_START = 0x1,SERVICE_AUTO_START = 0x2,SERVICE_DEMAND_START = 0x3,SERVICE_DISABLED = 0x4,SERVICE_ERROR_IGNORE = 0x0,SERVICE_ERROR_NORMAL = 0x1,SERVICE_ERROR_SEVERE = 0x2,SERVICE_ERROR_CRITICAL = 0x3,};
enum MACRO_SESSION {SESSION_HAS_VALID_POOL_ON_EXIT = 0xAB,};
enum MACRO_SESSION_HAS {SESSION_HAS_VALID_VIEWS_ON_EXIT = 0xBA,};
enum MACRO_SESSION_HAS_VALID {SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT = 0xEC,};
enum MACRO_SET {SET_OF_INVALID_CONTEXT = 0x30,};
enum MACRO_SETUP {SETUP_FAILURE = 0x85,AUDIT_FAILURE = 0x86,};
enum MACRO_SET_LOCAL {SET_LOCAL_HOST_PROPERTIES_NO_CYCLE_STARTS = 0x1,SET_LOCAL_HOST_PROPERTIES_CYCLE_START_CONTROL = 0x1,SET_LOCAL_HOST_PROPERTIES_GAP_COUNT = 0x2,SET_LOCAL_HOST_PROPERTIES_MODIFY_CROM = 0x3,SET_LOCAL_HOST_PROPERTIES_MAX_PAYLOAD = 0x4,};
enum MACRO_SET_UNIT {SET_UNIT_INFO_DIAG_LEVEL = 0x1,SET_UNIT_INFO_ISOCH_PARAMS = 0x2,SET_CMP_ADDRESS_RANGE_TYPE = 0x3,};
enum MACRO_SE_MIN {SE_MIN_WELL_KNOWN_PRIVILEGE = 2,SE_CREATE_TOKEN_PRIVILEGE = 2,SE_ASSIGNPRIMARYTOKEN_PRIVILEGE = 3,SE_LOCK_MEMORY_PRIVILEGE = 4,SE_INCREASE_QUOTA_PRIVILEGE = 5,SE_MACHINE_ACCOUNT_PRIVILEGE = 6,SE_TCB_PRIVILEGE = 7,SE_SECURITY_PRIVILEGE = 8,SE_TAKE_OWNERSHIP_PRIVILEGE = 9,SE_LOAD_DRIVER_PRIVILEGE = 10,SE_SYSTEM_PROFILE_PRIVILEGE = 11,SE_SYSTEMTIME_PRIVILEGE = 12,SE_PROF_SINGLE_PROCESS_PRIVILEGE = 13,SE_INC_BASE_PRIORITY_PRIVILEGE = 14,SE_CREATE_PAGEFILE_PRIVILEGE = 15,SE_CREATE_PERMANENT_PRIVILEGE = 16,SE_BACKUP_PRIVILEGE = 17,SE_RESTORE_PRIVILEGE = 18,SE_SHUTDOWN_PRIVILEGE = 19,SE_DEBUG_PRIVILEGE = 20,SE_AUDIT_PRIVILEGE = 21,SE_SYSTEM_ENVIRONMENT_PRIVILEGE = 22,SE_CHANGE_NOTIFY_PRIVILEGE = 23,SE_REMOTE_SHUTDOWN_PRIVILEGE = 24,SE_UNDOCK_PRIVILEGE = 25,SE_SYNC_AGENT_PRIVILEGE = 26,SE_ENABLE_DELEGATION_PRIVILEGE = 27,SE_MANAGE_VOLUME_PRIVILEGE = 28,SE_IMPERSONATE_PRIVILEGE = 29,SE_CREATE_GLOBAL_PRIVILEGE = 30,SE_MAX_WELL_KNOWN_PRIVILEGE = 30,};
enum MACRO_SHARED {SHARED_RESOURCE_CONV_ERROR = 0x1F,};
enum MACRO_SHORT {SHORT_LEAST_SIGNIFICANT_BIT = 0,SHORT_MOST_SIGNIFICANT_BIT = 1,};
enum MACRO_SL {SL_PENDING_RETURNED = 0x1,SL_INVOKE_ON_CANCEL = 0x20,SL_INVOKE_ON_SUCCESS = 0x40,SL_INVOKE_ON_ERROR = 0x80,SL_FORCE_ACCESS_CHECK = 0x1,SL_OPEN_PAGING_FILE = 0x2,SL_OPEN_TARGET_DIRECTORY = 0x4,SL_CASE_SENSITIVE = 0x80,SL_KEY_SPECIFIED = 0x1,SL_OVERRIDE_VERIFY_VOLUME = 0x2,SL_WRITE_THROUGH = 0x4,SL_FT_SEQUENTIAL_WRITE = 0x8,SL_READ_ACCESS_GRANTED = 0x1,SL_WRITE_ACCESS_GRANTED = 0x4,SL_FAIL_IMMEDIATELY = 0x1,SL_EXCLUSIVE_LOCK = 0x2,SL_RESTART_SCAN = 0x1,SL_RETURN_SINGLE_ENTRY = 0x2,SL_INDEX_SPECIFIED = 0x4,SL_WATCH_TREE = 0x1,SL_ALLOW_RAW_MOUNT = 0x1,};
enum MACRO_SLHP {SLHP_FLAG_ADD_CROM_DATA = 0x1,SLHP_FLAG_REMOVE_CROM_DATA = 0x2,};
enum MACRO_SORT {SORT_DEFAULT = 0x0,SORT_JAPANESE_XJIS = 0x0,SORT_JAPANESE_UNICODE = 0x1,SORT_CHINESE_BIG5 = 0x0,SORT_CHINESE_PRCP = 0x0,SORT_CHINESE_UNICODE = 0x1,SORT_CHINESE_PRC = 0x2,SORT_CHINESE_BOPOMOFO = 0x3,SORT_KOREAN_KSC = 0x0,SORT_KOREAN_UNICODE = 0x1,SORT_GERMAN_PHONE_BOOK = 0x1,SORT_HUNGARIAN_DEFAULT = 0x0,SORT_HUNGARIAN_TECHNICAL = 0x1,SORT_GEORGIAN_TRADITIONAL = 0x0,SORT_GEORGIAN_MODERN = 0x1,};
enum MACRO_SPEAKER {SPEAKER_FRONT_LEFT = 0x1,SPEAKER_FRONT_RIGHT = 0x2,SPEAKER_FRONT_CENTER = 0x4,SPEAKER_LOW_FREQUENCY = 0x8,SPEAKER_BACK_LEFT = 0x10,SPEAKER_BACK_RIGHT = 0x20,SPEAKER_FRONT_LEFT_OF_CENTER = 0x40,SPEAKER_FRONT_RIGHT_OF_CENTER = 0x80,SPEAKER_BACK_CENTER = 0x100,SPEAKER_SIDE_LEFT = 0x200,SPEAKER_SIDE_RIGHT = 0x400,SPEAKER_TOP_CENTER = 0x800,SPEAKER_TOP_FRONT_LEFT = 0x1000,SPEAKER_TOP_FRONT_CENTER = 0x2000,SPEAKER_TOP_FRONT_RIGHT = 0x4000,SPEAKER_TOP_BACK_LEFT = 0x8000,SPEAKER_TOP_BACK_CENTER = 0x10000,SPEAKER_TOP_BACK_RIGHT = 0x20000,SPEAKER_RESERVED = 0x7FFC0000,SPEAKER_ALL = 0x80000000,};
enum MACRO_SPECIAL {SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION = 0xC1,};
enum MACRO_SPECIFIC {SPECIFIC_RIGHTS_ALL = 0xFFFF,};
enum MACRO_SPEED {SPEED_MAP_LENGTH = 0x3F1,};
enum MACRO_SPEED_100 {SPEED_100_INDEX = 0,SPEED_200_INDEX = 1,SPEED_400_INDEX = 2,};
enum MACRO_SPEED_FLAGS {SPEED_FLAGS_100 = 0x1,SPEED_FLAGS_200 = 0x2,SPEED_FLAGS_400 = 0x4,SPEED_FLAGS_800 = 0x8,SPEED_FLAGS_1600 = 0x10,SPEED_FLAGS_3200 = 0x20,SPEED_FLAGS_FASTEST = 0x80000000,};
enum MACRO_SPIN {SPIN_LOCK_ALREADY_OWNED = 0xF,SPIN_LOCK_NOT_OWNED = 0x10,};
enum MACRO_SRB {SRB_HW_FLAGS_DATA_TRANSFER = 0x1,SRB_HW_FLAGS_STREAM_REQUEST = 0x2,};
enum MACRO_SRC {SRC_PACKETS_PER_NTSC_FRAME = 250,SRC_PACKETS_PER_PAL_FRAME = 300,};
enum MACRO_SRC_PACKET {SRC_PACKET_SIZE_SDDV = 480,SRC_PACKET_SIZE_HDDV = 960,SRC_PACKET_SIZE_SDLDV = 240,SRC_PACKET_SIZE_MPEG2TS = 192,};
enum MACRO_STANDARD {STANDARD_RIGHTS_REQUIRED = 0xF0000,STANDARD_RIGHTS_READ = 0x20000,STANDARD_RIGHTS_WRITE = 0x20000,STANDARD_RIGHTS_EXECUTE = 0x20000,STANDARD_RIGHTS_ALL = 0x1F0000,};
enum MACRO_STATE {STATE_CLEAR_LOCATION = 0x0,STATE_SET_LOCATION = 0x4,};
enum MACRO_STATUS {STATUS_SUCCESS = 0x0,};
enum MACRO_STATUS_ACPI {STATUS_ACPI_INVALID_OPCODE = 0xC0140001,STATUS_ACPI_STACK_OVERFLOW = 0xC0140002,STATUS_ACPI_ASSERT_FAILED = 0xC0140003,STATUS_ACPI_INVALID_INDEX = 0xC0140004,STATUS_ACPI_INVALID_ARGUMENT = 0xC0140005,STATUS_ACPI_FATAL = 0xC0140006,STATUS_ACPI_INVALID_SUPERNAME = 0xC0140007,STATUS_ACPI_INVALID_ARGTYPE = 0xC0140008,STATUS_ACPI_INVALID_OBJTYPE = 0xC0140009,STATUS_ACPI_INVALID_TARGETTYPE = 0xC014000A,STATUS_ACPI_INCORRECT_ARGUMENT_COUNT = 0xC014000B,STATUS_ACPI_ADDRESS_NOT_MAPPED = 0xC014000C,STATUS_ACPI_INVALID_EVENTTYPE = 0xC014000D,STATUS_ACPI_HANDLER_COLLISION = 0xC014000E,STATUS_ACPI_INVALID_DATA = 0xC014000F,STATUS_ACPI_INVALID_REGION = 0xC0140010,STATUS_ACPI_INVALID_ACCESS_SIZE = 0xC0140011,STATUS_ACPI_ACQUIRE_GLOBAL_LOCK = 0xC0140012,STATUS_ACPI_ALREADY_INITIALIZED = 0xC0140013,STATUS_ACPI_NOT_INITIALIZED = 0xC0140014,STATUS_ACPI_INVALID_MUTEX_LEVEL = 0xC0140015,STATUS_ACPI_MUTEX_NOT_OWNED = 0xC0140016,STATUS_ACPI_MUTEX_NOT_OWNER = 0xC0140017,STATUS_ACPI_RS_ACCESS = 0xC0140018,STATUS_ACPI_INVALID_TABLE = 0xC0140019,STATUS_ACPI_REG_HANDLER_FAILED = 0xC0140020,STATUS_ACPI_POWER_REQUEST_FAILED = 0xC0140021,STATUS_CTX_WINSTATION_NAME_INVALID = 0xC00A0001,STATUS_CTX_INVALID_PD = 0xC00A0002,STATUS_CTX_PD_NOT_FOUND = 0xC00A0003,STATUS_CTX_CDM_CONNECT = 0x400A0004,STATUS_CTX_CDM_DISCONNECT = 0x400A0005,STATUS_CTX_CLOSE_PENDING = 0xC00A0006,STATUS_CTX_NO_OUTBUF = 0xC00A0007,STATUS_CTX_MODEM_INF_NOT_FOUND = 0xC00A0008,STATUS_CTX_INVALID_MODEMNAME = 0xC00A0009,STATUS_CTX_RESPONSE_ERROR = 0xC00A000A,STATUS_CTX_MODEM_RESPONSE_TIMEOUT = 0xC00A000B,STATUS_CTX_MODEM_RESPONSE_NO_CARRIER = 0xC00A000C,STATUS_CTX_MODEM_RESPONSE_NO_DIALTONE = 0xC00A000D,STATUS_CTX_MODEM_RESPONSE_BUSY = 0xC00A000E,STATUS_CTX_MODEM_RESPONSE_VOICE = 0xC00A000F,STATUS_CTX_TD_ERROR = 0xC00A0010,STATUS_CTX_LICENSE_CLIENT_INVALID = 0xC00A0012,STATUS_CTX_LICENSE_NOT_AVAILABLE = 0xC00A0013,STATUS_CTX_LICENSE_EXPIRED = 0xC00A0014,STATUS_CTX_WINSTATION_NOT_FOUND = 0xC00A0015,STATUS_CTX_WINSTATION_NAME_COLLISION = 0xC00A0016,STATUS_CTX_WINSTATION_BUSY = 0xC00A0017,STATUS_CTX_BAD_VIDEO_MODE = 0xC00A0018,STATUS_CTX_GRAPHICS_INVALID = 0xC00A0022,STATUS_CTX_NOT_CONSOLE = 0xC00A0024,STATUS_CTX_CLIENT_QUERY_TIMEOUT = 0xC00A0026,STATUS_CTX_CONSOLE_DISCONNECT = 0xC00A0027,STATUS_CTX_CONSOLE_CONNECT = 0xC00A0028,STATUS_CTX_SHADOW_DENIED = 0xC00A002A,STATUS_CTX_WINSTATION_ACCESS_DENIED = 0xC00A002B,STATUS_CTX_INVALID_WD = 0xC00A002E,STATUS_CTX_WD_NOT_FOUND = 0xC00A002F,STATUS_CTX_SHADOW_INVALID = 0xC00A0030,STATUS_CTX_SHADOW_DISABLED = 0xC00A0031,STATUS_RDP_PROTOCOL_ERROR = 0xC00A0032,STATUS_CTX_CLIENT_LICENSE_NOT_SET = 0xC00A0033,STATUS_CTX_CLIENT_LICENSE_IN_USE = 0xC00A0034,STATUS_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 0xC00A0035,STATUS_CTX_SHADOW_NOT_RUNNING = 0xC00A0036,STATUS_PNP_BAD_MPS_TABLE = 0xC0040035,STATUS_PNP_TRANSLATION_FAILED = 0xC0040036,STATUS_PNP_IRQ_TRANSLATION_FAILED = 0xC0040037,STATUS_PNP_INVALID_ID = 0xC0040038,STATUS_SXS_SECTION_NOT_FOUND = 0xC0150001,STATUS_SXS_CANT_GEN_ACTCTX = 0xC0150002,STATUS_SXS_INVALID_ACTCTXDATA_FORMAT = 0xC0150003,STATUS_SXS_ASSEMBLY_NOT_FOUND = 0xC0150004,STATUS_SXS_MANIFEST_FORMAT_ERROR = 0xC0150005,STATUS_SXS_MANIFEST_PARSE_ERROR = 0xC0150006,STATUS_SXS_ACTIVATION_CONTEXT_DISABLED = 0xC0150007,STATUS_SXS_KEY_NOT_FOUND = 0xC0150008,STATUS_SXS_VERSION_CONFLICT = 0xC0150009,STATUS_SXS_WRONG_SECTION_TYPE = 0xC015000A,STATUS_SXS_THREAD_QUERIES_DISABLED = 0xC015000B,STATUS_SXS_ASSEMBLY_MISSING = 0xC015000C,STATUS_SXS_RELEASE_ACTIVATION_CONTEXT = 0x4015000D,STATUS_SXS_PROCESS_DEFAULT_ALREADY_SET = 0xC015000E,STATUS_SXS_EARLY_DEACTIVATION = 0xC015000F,STATUS_SXS_INVALID_DEACTIVATION = 0xC0150010,STATUS_SXS_MULTIPLE_DEACTIVATION = 0xC0150011,STATUS_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 0xC0150012,STATUS_SXS_PROCESS_TERMINATION_REQUESTED = 0xC0150013,STATUS_SXS_CORRUPT_ACTIVATION_STACK = 0xC0150014,STATUS_SXS_CORRUPTION = 0xC0150015,STATUS_CLUSTER_INVALID_NODE = 0xC0130001,STATUS_CLUSTER_NODE_EXISTS = 0xC0130002,STATUS_CLUSTER_JOIN_IN_PROGRESS = 0xC0130003,STATUS_CLUSTER_NODE_NOT_FOUND = 0xC0130004,STATUS_CLUSTER_LOCAL_NODE_NOT_FOUND = 0xC0130005,STATUS_CLUSTER_NETWORK_EXISTS = 0xC0130006,STATUS_CLUSTER_NETWORK_NOT_FOUND = 0xC0130007,STATUS_CLUSTER_NETINTERFACE_EXISTS = 0xC0130008,STATUS_CLUSTER_NETINTERFACE_NOT_FOUND = 0xC0130009,STATUS_CLUSTER_INVALID_REQUEST = 0xC013000A,STATUS_CLUSTER_INVALID_NETWORK_PROVIDER = 0xC013000B,STATUS_CLUSTER_NODE_DOWN = 0xC013000C,STATUS_CLUSTER_NODE_UNREACHABLE = 0xC013000D,STATUS_CLUSTER_NODE_NOT_MEMBER = 0xC013000E,STATUS_CLUSTER_JOIN_NOT_IN_PROGRESS = 0xC013000F,STATUS_CLUSTER_INVALID_NETWORK = 0xC0130010,STATUS_CLUSTER_NO_NET_ADAPTERS = 0xC0130011,STATUS_CLUSTER_NODE_UP = 0xC0130012,STATUS_CLUSTER_NODE_PAUSED = 0xC0130013,STATUS_CLUSTER_NODE_NOT_PAUSED = 0xC0130014,STATUS_CLUSTER_NO_SECURITY_CONTEXT = 0xC0130015,STATUS_CLUSTER_NETWORK_NOT_INTERNAL = 0xC0130016,STATUS_CLUSTER_POISONED = 0xC0130017,};
enum MACRO_STATUS_CLUSTER {STATUS_CLUSTER_NODE_ALREADY_UP = 0x80130001,STATUS_CLUSTER_NODE_ALREADY_DOWN = 0x80130002,STATUS_CLUSTER_NETWORK_ALREADY_ONLINE = 0x80130003,STATUS_CLUSTER_NETWORK_ALREADY_OFFLINE = 0x80130004,STATUS_CLUSTER_NODE_ALREADY_MEMBER = 0x80130005,STATUS_UNSUCCESSFUL = 0xC0000001,STATUS_NOT_IMPLEMENTED = 0xC0000002,STATUS_INVALID_INFO_CLASS = 0xC0000003,STATUS_INFO_LENGTH_MISMATCH = 0xC0000004,STATUS_ACCESS_VIOLATION = 0xC0000005,STATUS_IN_PAGE_ERROR = 0xC0000006,STATUS_PAGEFILE_QUOTA = 0xC0000007,STATUS_INVALID_HANDLE = 0xC0000008,STATUS_BAD_INITIAL_STACK = 0xC0000009,STATUS_BAD_INITIAL_PC = 0xC000000A,STATUS_INVALID_CID = 0xC000000B,STATUS_TIMER_NOT_CANCELED = 0xC000000C,STATUS_INVALID_PARAMETER = 0xC000000D,STATUS_NO_SUCH_DEVICE = 0xC000000E,STATUS_NO_SUCH_FILE = 0xC000000F,STATUS_INVALID_DEVICE_REQUEST = 0xC0000010,STATUS_END_OF_FILE = 0xC0000011,STATUS_WRONG_VOLUME = 0xC0000012,STATUS_NO_MEDIA_IN_DEVICE = 0xC0000013,STATUS_UNRECOGNIZED_MEDIA = 0xC0000014,STATUS_NONEXISTENT_SECTOR = 0xC0000015,STATUS_MORE_PROCESSING_REQUIRED = 0xC0000016,STATUS_NO_MEMORY = 0xC0000017,STATUS_CONFLICTING_ADDRESSES = 0xC0000018,STATUS_NOT_MAPPED_VIEW = 0xC0000019,STATUS_UNABLE_TO_FREE_VM = 0xC000001A,STATUS_UNABLE_TO_DELETE_SECTION = 0xC000001B,STATUS_INVALID_SYSTEM_SERVICE = 0xC000001C,STATUS_ILLEGAL_INSTRUCTION = 0xC000001D,STATUS_INVALID_LOCK_SEQUENCE = 0xC000001E,STATUS_INVALID_VIEW_SIZE = 0xC000001F,STATUS_INVALID_FILE_FOR_SECTION = 0xC0000020,STATUS_ALREADY_COMMITTED = 0xC0000021,STATUS_ACCESS_DENIED = 0xC0000022,STATUS_BUFFER_TOO_SMALL = 0xC0000023,STATUS_OBJECT_TYPE_MISMATCH = 0xC0000024,STATUS_NONCONTINUABLE_EXCEPTION = 0xC0000025,STATUS_INVALID_DISPOSITION = 0xC0000026,STATUS_UNWIND = 0xC0000027,STATUS_BAD_STACK = 0xC0000028,STATUS_INVALID_UNWIND_TARGET = 0xC0000029,STATUS_NOT_LOCKED = 0xC000002A,STATUS_PARITY_ERROR = 0xC000002B,STATUS_UNABLE_TO_DECOMMIT_VM = 0xC000002C,STATUS_NOT_COMMITTED = 0xC000002D,STATUS_INVALID_PORT_ATTRIBUTES = 0xC000002E,STATUS_PORT_MESSAGE_TOO_LONG = 0xC000002F,STATUS_INVALID_PARAMETER_MIX = 0xC0000030,STATUS_INVALID_QUOTA_LOWER = 0xC0000031,STATUS_DISK_CORRUPT_ERROR = 0xC0000032,STATUS_OBJECT_NAME_INVALID = 0xC0000033,STATUS_OBJECT_NAME_NOT_FOUND = 0xC0000034,STATUS_OBJECT_NAME_COLLISION = 0xC0000035,STATUS_PORT_DISCONNECTED = 0xC0000037,STATUS_DEVICE_ALREADY_ATTACHED = 0xC0000038,STATUS_OBJECT_PATH_INVALID = 0xC0000039,STATUS_OBJECT_PATH_NOT_FOUND = 0xC000003A,STATUS_OBJECT_PATH_SYNTAX_BAD = 0xC000003B,STATUS_DATA_OVERRUN = 0xC000003C,STATUS_DATA_LATE_ERROR = 0xC000003D,STATUS_DATA_ERROR = 0xC000003E,STATUS_CRC_ERROR = 0xC000003F,STATUS_SECTION_TOO_BIG = 0xC0000040,STATUS_PORT_CONNECTION_REFUSED = 0xC0000041,STATUS_INVALID_PORT_HANDLE = 0xC0000042,STATUS_SHARING_VIOLATION = 0xC0000043,STATUS_QUOTA_EXCEEDED = 0xC0000044,STATUS_INVALID_PAGE_PROTECTION = 0xC0000045,STATUS_MUTANT_NOT_OWNED = 0xC0000046,STATUS_SEMAPHORE_LIMIT_EXCEEDED = 0xC0000047,STATUS_PORT_ALREADY_SET = 0xC0000048,STATUS_SECTION_NOT_IMAGE = 0xC0000049,STATUS_SUSPEND_COUNT_EXCEEDED = 0xC000004A,STATUS_THREAD_IS_TERMINATING = 0xC000004B,STATUS_BAD_WORKING_SET_LIMIT = 0xC000004C,STATUS_INCOMPATIBLE_FILE_MAP = 0xC000004D,STATUS_SECTION_PROTECTION = 0xC000004E,STATUS_EAS_NOT_SUPPORTED = 0xC000004F,STATUS_EA_TOO_LARGE = 0xC0000050,STATUS_NONEXISTENT_EA_ENTRY = 0xC0000051,STATUS_NO_EAS_ON_FILE = 0xC0000052,STATUS_EA_CORRUPT_ERROR = 0xC0000053,STATUS_FILE_LOCK_CONFLICT = 0xC0000054,STATUS_LOCK_NOT_GRANTED = 0xC0000055,STATUS_DELETE_PENDING = 0xC0000056,STATUS_CTL_FILE_NOT_SUPPORTED = 0xC0000057,STATUS_UNKNOWN_REVISION = 0xC0000058,STATUS_REVISION_MISMATCH = 0xC0000059,STATUS_INVALID_OWNER = 0xC000005A,STATUS_INVALID_PRIMARY_GROUP = 0xC000005B,STATUS_NO_IMPERSONATION_TOKEN = 0xC000005C,STATUS_CANT_DISABLE_MANDATORY = 0xC000005D,STATUS_NO_LOGON_SERVERS = 0xC000005E,STATUS_NO_SUCH_LOGON_SESSION = 0xC000005F,STATUS_NO_SUCH_PRIVILEGE = 0xC0000060,STATUS_PRIVILEGE_NOT_HELD = 0xC0000061,STATUS_INVALID_ACCOUNT_NAME = 0xC0000062,STATUS_USER_EXISTS = 0xC0000063,STATUS_NO_SUCH_USER = 0xC0000064,STATUS_GROUP_EXISTS = 0xC0000065,STATUS_NO_SUCH_GROUP = 0xC0000066,STATUS_MEMBER_IN_GROUP = 0xC0000067,STATUS_MEMBER_NOT_IN_GROUP = 0xC0000068,STATUS_LAST_ADMIN = 0xC0000069,STATUS_WRONG_PASSWORD = 0xC000006A,STATUS_ILL_FORMED_PASSWORD = 0xC000006B,STATUS_PASSWORD_RESTRICTION = 0xC000006C,STATUS_LOGON_FAILURE = 0xC000006D,STATUS_ACCOUNT_RESTRICTION = 0xC000006E,STATUS_INVALID_LOGON_HOURS = 0xC000006F,STATUS_INVALID_WORKSTATION = 0xC0000070,STATUS_PASSWORD_EXPIRED = 0xC0000071,STATUS_ACCOUNT_DISABLED = 0xC0000072,STATUS_NONE_MAPPED = 0xC0000073,STATUS_TOO_MANY_LUIDS_REQUESTED = 0xC0000074,STATUS_LUIDS_EXHAUSTED = 0xC0000075,STATUS_INVALID_SUB_AUTHORITY = 0xC0000076,STATUS_INVALID_ACL = 0xC0000077,STATUS_INVALID_SID = 0xC0000078,STATUS_INVALID_SECURITY_DESCR = 0xC0000079,STATUS_PROCEDURE_NOT_FOUND = 0xC000007A,STATUS_INVALID_IMAGE_FORMAT = 0xC000007B,STATUS_NO_TOKEN = 0xC000007C,STATUS_BAD_INHERITANCE_ACL = 0xC000007D,STATUS_RANGE_NOT_LOCKED = 0xC000007E,STATUS_DISK_FULL = 0xC000007F,STATUS_SERVER_DISABLED = 0xC0000080,STATUS_SERVER_NOT_DISABLED = 0xC0000081,STATUS_TOO_MANY_GUIDS_REQUESTED = 0xC0000082,STATUS_GUIDS_EXHAUSTED = 0xC0000083,STATUS_INVALID_ID_AUTHORITY = 0xC0000084,STATUS_AGENTS_EXHAUSTED = 0xC0000085,STATUS_INVALID_VOLUME_LABEL = 0xC0000086,STATUS_SECTION_NOT_EXTENDED = 0xC0000087,STATUS_NOT_MAPPED_DATA = 0xC0000088,STATUS_RESOURCE_DATA_NOT_FOUND = 0xC0000089,STATUS_RESOURCE_TYPE_NOT_FOUND = 0xC000008A,STATUS_RESOURCE_NAME_NOT_FOUND = 0xC000008B,STATUS_ARRAY_BOUNDS_EXCEEDED = 0xC000008C,STATUS_FLOAT_DENORMAL_OPERAND = 0xC000008D,STATUS_FLOAT_DIVIDE_BY_ZERO = 0xC000008E,STATUS_FLOAT_INEXACT_RESULT = 0xC000008F,STATUS_FLOAT_INVALID_OPERATION = 0xC0000090,STATUS_FLOAT_OVERFLOW = 0xC0000091,STATUS_FLOAT_STACK_CHECK = 0xC0000092,STATUS_FLOAT_UNDERFLOW = 0xC0000093,STATUS_INTEGER_DIVIDE_BY_ZERO = 0xC0000094,STATUS_INTEGER_OVERFLOW = 0xC0000095,STATUS_PRIVILEGED_INSTRUCTION = 0xC0000096,STATUS_TOO_MANY_PAGING_FILES = 0xC0000097,STATUS_FILE_INVALID = 0xC0000098,STATUS_ALLOTTED_SPACE_EXCEEDED = 0xC0000099,STATUS_INSUFFICIENT_RESOURCES = 0xC000009A,STATUS_DFS_EXIT_PATH_FOUND = 0xC000009B,STATUS_DEVICE_DATA_ERROR = 0xC000009C,STATUS_DEVICE_NOT_CONNECTED = 0xC000009D,STATUS_DEVICE_POWER_FAILURE = 0xC000009E,STATUS_FREE_VM_NOT_AT_BASE = 0xC000009F,STATUS_MEMORY_NOT_ALLOCATED = 0xC00000A0,STATUS_WORKING_SET_QUOTA = 0xC00000A1,STATUS_MEDIA_WRITE_PROTECTED = 0xC00000A2,STATUS_DEVICE_NOT_READY = 0xC00000A3,STATUS_INVALID_GROUP_ATTRIBUTES = 0xC00000A4,STATUS_BAD_IMPERSONATION_LEVEL = 0xC00000A5,STATUS_CANT_OPEN_ANONYMOUS = 0xC00000A6,STATUS_BAD_VALIDATION_CLASS = 0xC00000A7,STATUS_BAD_TOKEN_TYPE = 0xC00000A8,STATUS_BAD_MASTER_BOOT_RECORD = 0xC00000A9,STATUS_INSTRUCTION_MISALIGNMENT = 0xC00000AA,STATUS_INSTANCE_NOT_AVAILABLE = 0xC00000AB,STATUS_PIPE_NOT_AVAILABLE = 0xC00000AC,STATUS_INVALID_PIPE_STATE = 0xC00000AD,STATUS_PIPE_BUSY = 0xC00000AE,STATUS_ILLEGAL_FUNCTION = 0xC00000AF,STATUS_PIPE_DISCONNECTED = 0xC00000B0,STATUS_PIPE_CLOSING = 0xC00000B1,STATUS_PIPE_CONNECTED = 0xC00000B2,STATUS_PIPE_LISTENING = 0xC00000B3,STATUS_INVALID_READ_MODE = 0xC00000B4,STATUS_IO_TIMEOUT = 0xC00000B5,STATUS_FILE_FORCED_CLOSED = 0xC00000B6,STATUS_PROFILING_NOT_STARTED = 0xC00000B7,STATUS_PROFILING_NOT_STOPPED = 0xC00000B8,STATUS_COULD_NOT_INTERPRET = 0xC00000B9,STATUS_FILE_IS_A_DIRECTORY = 0xC00000BA,STATUS_NOT_SUPPORTED = 0xC00000BB,STATUS_REMOTE_NOT_LISTENING = 0xC00000BC,STATUS_DUPLICATE_NAME = 0xC00000BD,STATUS_BAD_NETWORK_PATH = 0xC00000BE,STATUS_NETWORK_BUSY = 0xC00000BF,STATUS_DEVICE_DOES_NOT_EXIST = 0xC00000C0,STATUS_TOO_MANY_COMMANDS = 0xC00000C1,STATUS_ADAPTER_HARDWARE_ERROR = 0xC00000C2,STATUS_INVALID_NETWORK_RESPONSE = 0xC00000C3,STATUS_UNEXPECTED_NETWORK_ERROR = 0xC00000C4,STATUS_BAD_REMOTE_ADAPTER = 0xC00000C5,STATUS_PRINT_QUEUE_FULL = 0xC00000C6,STATUS_NO_SPOOL_SPACE = 0xC00000C7,STATUS_PRINT_CANCELLED = 0xC00000C8,STATUS_NETWORK_NAME_DELETED = 0xC00000C9,STATUS_NETWORK_ACCESS_DENIED = 0xC00000CA,STATUS_BAD_DEVICE_TYPE = 0xC00000CB,STATUS_BAD_NETWORK_NAME = 0xC00000CC,STATUS_TOO_MANY_NAMES = 0xC00000CD,STATUS_TOO_MANY_SESSIONS = 0xC00000CE,STATUS_SHARING_PAUSED = 0xC00000CF,STATUS_REQUEST_NOT_ACCEPTED = 0xC00000D0,STATUS_REDIRECTOR_PAUSED = 0xC00000D1,STATUS_NET_WRITE_FAULT = 0xC00000D2,STATUS_PROFILING_AT_LIMIT = 0xC00000D3,STATUS_NOT_SAME_DEVICE = 0xC00000D4,STATUS_FILE_RENAMED = 0xC00000D5,STATUS_VIRTUAL_CIRCUIT_CLOSED = 0xC00000D6,STATUS_NO_SECURITY_ON_OBJECT = 0xC00000D7,STATUS_CANT_WAIT = 0xC00000D8,STATUS_PIPE_EMPTY = 0xC00000D9,STATUS_CANT_ACCESS_DOMAIN_INFO = 0xC00000DA,STATUS_CANT_TERMINATE_SELF = 0xC00000DB,STATUS_INVALID_SERVER_STATE = 0xC00000DC,STATUS_INVALID_DOMAIN_STATE = 0xC00000DD,STATUS_INVALID_DOMAIN_ROLE = 0xC00000DE,STATUS_NO_SUCH_DOMAIN = 0xC00000DF,STATUS_DOMAIN_EXISTS = 0xC00000E0,STATUS_DOMAIN_LIMIT_EXCEEDED = 0xC00000E1,STATUS_OPLOCK_NOT_GRANTED = 0xC00000E2,STATUS_INVALID_OPLOCK_PROTOCOL = 0xC00000E3,STATUS_INTERNAL_DB_CORRUPTION = 0xC00000E4,STATUS_INTERNAL_ERROR = 0xC00000E5,STATUS_GENERIC_NOT_MAPPED = 0xC00000E6,STATUS_BAD_DESCRIPTOR_FORMAT = 0xC00000E7,STATUS_INVALID_USER_BUFFER = 0xC00000E8,STATUS_UNEXPECTED_IO_ERROR = 0xC00000E9,STATUS_UNEXPECTED_MM_CREATE_ERR = 0xC00000EA,STATUS_UNEXPECTED_MM_MAP_ERROR = 0xC00000EB,STATUS_UNEXPECTED_MM_EXTEND_ERR = 0xC00000EC,STATUS_NOT_LOGON_PROCESS = 0xC00000ED,STATUS_LOGON_SESSION_EXISTS = 0xC00000EE,STATUS_INVALID_PARAMETER_1 = 0xC00000EF,STATUS_INVALID_PARAMETER_2 = 0xC00000F0,STATUS_INVALID_PARAMETER_3 = 0xC00000F1,STATUS_INVALID_PARAMETER_4 = 0xC00000F2,STATUS_INVALID_PARAMETER_5 = 0xC00000F3,STATUS_INVALID_PARAMETER_6 = 0xC00000F4,STATUS_INVALID_PARAMETER_7 = 0xC00000F5,STATUS_INVALID_PARAMETER_8 = 0xC00000F6,STATUS_INVALID_PARAMETER_9 = 0xC00000F7,STATUS_INVALID_PARAMETER_10 = 0xC00000F8,STATUS_INVALID_PARAMETER_11 = 0xC00000F9,STATUS_INVALID_PARAMETER_12 = 0xC00000FA,STATUS_REDIRECTOR_NOT_STARTED = 0xC00000FB,STATUS_REDIRECTOR_STARTED = 0xC00000FC,STATUS_STACK_OVERFLOW = 0xC00000FD,STATUS_NO_SUCH_PACKAGE = 0xC00000FE,STATUS_BAD_FUNCTION_TABLE = 0xC00000FF,STATUS_VARIABLE_NOT_FOUND = 0xC0000100,STATUS_DIRECTORY_NOT_EMPTY = 0xC0000101,STATUS_FILE_CORRUPT_ERROR = 0xC0000102,STATUS_NOT_A_DIRECTORY = 0xC0000103,STATUS_BAD_LOGON_SESSION_STATE = 0xC0000104,STATUS_LOGON_SESSION_COLLISION = 0xC0000105,STATUS_NAME_TOO_LONG = 0xC0000106,STATUS_FILES_OPEN = 0xC0000107,STATUS_CONNECTION_IN_USE = 0xC0000108,STATUS_MESSAGE_NOT_FOUND = 0xC0000109,STATUS_PROCESS_IS_TERMINATING = 0xC000010A,STATUS_INVALID_LOGON_TYPE = 0xC000010B,STATUS_NO_GUID_TRANSLATION = 0xC000010C,STATUS_CANNOT_IMPERSONATE = 0xC000010D,STATUS_IMAGE_ALREADY_LOADED = 0xC000010E,STATUS_ABIOS_NOT_PRESENT = 0xC000010F,STATUS_ABIOS_LID_NOT_EXIST = 0xC0000110,STATUS_ABIOS_LID_ALREADY_OWNED = 0xC0000111,STATUS_ABIOS_NOT_LID_OWNER = 0xC0000112,STATUS_ABIOS_INVALID_COMMAND = 0xC0000113,STATUS_ABIOS_INVALID_LID = 0xC0000114,STATUS_ABIOS_SELECTOR_NOT_AVAILABLE = 0xC0000115,STATUS_ABIOS_INVALID_SELECTOR = 0xC0000116,STATUS_NO_LDT = 0xC0000117,STATUS_INVALID_LDT_SIZE = 0xC0000118,STATUS_INVALID_LDT_OFFSET = 0xC0000119,STATUS_INVALID_LDT_DESCRIPTOR = 0xC000011A,STATUS_INVALID_IMAGE_NE_FORMAT = 0xC000011B,STATUS_RXACT_INVALID_STATE = 0xC000011C,STATUS_RXACT_COMMIT_FAILURE = 0xC000011D,STATUS_MAPPED_FILE_SIZE_ZERO = 0xC000011E,STATUS_TOO_MANY_OPENED_FILES = 0xC000011F,STATUS_CANCELLED = 0xC0000120,STATUS_CANNOT_DELETE = 0xC0000121,STATUS_INVALID_COMPUTER_NAME = 0xC0000122,STATUS_FILE_DELETED = 0xC0000123,STATUS_SPECIAL_ACCOUNT = 0xC0000124,STATUS_SPECIAL_GROUP = 0xC0000125,STATUS_SPECIAL_USER = 0xC0000126,STATUS_MEMBERS_PRIMARY_GROUP = 0xC0000127,STATUS_FILE_CLOSED = 0xC0000128,STATUS_TOO_MANY_THREADS = 0xC0000129,STATUS_THREAD_NOT_IN_PROCESS = 0xC000012A,STATUS_TOKEN_ALREADY_IN_USE = 0xC000012B,STATUS_PAGEFILE_QUOTA_EXCEEDED = 0xC000012C,STATUS_COMMITMENT_LIMIT = 0xC000012D,STATUS_INVALID_IMAGE_LE_FORMAT = 0xC000012E,STATUS_INVALID_IMAGE_NOT_MZ = 0xC000012F,STATUS_INVALID_IMAGE_PROTECT = 0xC0000130,STATUS_INVALID_IMAGE_WIN_16 = 0xC0000131,STATUS_LOGON_SERVER_CONFLICT = 0xC0000132,STATUS_TIME_DIFFERENCE_AT_DC = 0xC0000133,STATUS_SYNCHRONIZATION_REQUIRED = 0xC0000134,STATUS_DLL_NOT_FOUND = 0xC0000135,STATUS_OPEN_FAILED = 0xC0000136,STATUS_IO_PRIVILEGE_FAILED = 0xC0000137,STATUS_ORDINAL_NOT_FOUND = 0xC0000138,STATUS_ENTRYPOINT_NOT_FOUND = 0xC0000139,STATUS_CONTROL_C_EXIT = 0xC000013A,STATUS_LOCAL_DISCONNECT = 0xC000013B,STATUS_REMOTE_DISCONNECT = 0xC000013C,STATUS_REMOTE_RESOURCES = 0xC000013D,STATUS_LINK_FAILED = 0xC000013E,STATUS_LINK_TIMEOUT = 0xC000013F,STATUS_INVALID_CONNECTION = 0xC0000140,STATUS_INVALID_ADDRESS = 0xC0000141,STATUS_DLL_INIT_FAILED = 0xC0000142,STATUS_MISSING_SYSTEMFILE = 0xC0000143,STATUS_UNHANDLED_EXCEPTION = 0xC0000144,STATUS_APP_INIT_FAILURE = 0xC0000145,STATUS_PAGEFILE_CREATE_FAILED = 0xC0000146,STATUS_NO_PAGEFILE = 0xC0000147,STATUS_INVALID_LEVEL = 0xC0000148,STATUS_WRONG_PASSWORD_CORE = 0xC0000149,STATUS_ILLEGAL_FLOAT_CONTEXT = 0xC000014A,STATUS_PIPE_BROKEN = 0xC000014B,STATUS_REGISTRY_CORRUPT = 0xC000014C,STATUS_REGISTRY_IO_FAILED = 0xC000014D,STATUS_NO_EVENT_PAIR = 0xC000014E,STATUS_UNRECOGNIZED_VOLUME = 0xC000014F,STATUS_SERIAL_NO_DEVICE_INITED = 0xC0000150,STATUS_NO_SUCH_ALIAS = 0xC0000151,STATUS_MEMBER_NOT_IN_ALIAS = 0xC0000152,STATUS_MEMBER_IN_ALIAS = 0xC0000153,STATUS_ALIAS_EXISTS = 0xC0000154,STATUS_LOGON_NOT_GRANTED = 0xC0000155,STATUS_TOO_MANY_SECRETS = 0xC0000156,STATUS_SECRET_TOO_LONG = 0xC0000157,STATUS_INTERNAL_DB_ERROR = 0xC0000158,STATUS_FULLSCREEN_MODE = 0xC0000159,STATUS_TOO_MANY_CONTEXT_IDS = 0xC000015A,STATUS_LOGON_TYPE_NOT_GRANTED = 0xC000015B,STATUS_NOT_REGISTRY_FILE = 0xC000015C,STATUS_NT_CROSS_ENCRYPTION_REQUIRED = 0xC000015D,STATUS_DOMAIN_CTRLR_CONFIG_ERROR = 0xC000015E,STATUS_FT_MISSING_MEMBER = 0xC000015F,STATUS_ILL_FORMED_SERVICE_ENTRY = 0xC0000160,STATUS_ILLEGAL_CHARACTER = 0xC0000161,STATUS_UNMAPPABLE_CHARACTER = 0xC0000162,STATUS_UNDEFINED_CHARACTER = 0xC0000163,STATUS_FLOPPY_VOLUME = 0xC0000164,STATUS_FLOPPY_ID_MARK_NOT_FOUND = 0xC0000165,STATUS_FLOPPY_WRONG_CYLINDER = 0xC0000166,STATUS_FLOPPY_UNKNOWN_ERROR = 0xC0000167,STATUS_FLOPPY_BAD_REGISTERS = 0xC0000168,STATUS_DISK_RECALIBRATE_FAILED = 0xC0000169,STATUS_DISK_OPERATION_FAILED = 0xC000016A,STATUS_DISK_RESET_FAILED = 0xC000016B,STATUS_SHARED_IRQ_BUSY = 0xC000016C,STATUS_FT_ORPHANING = 0xC000016D,STATUS_BIOS_FAILED_TO_CONNECT_INTERRUPT = 0xC000016E,STATUS_PARTITION_FAILURE = 0xC0000172,STATUS_INVALID_BLOCK_LENGTH = 0xC0000173,STATUS_DEVICE_NOT_PARTITIONED = 0xC0000174,STATUS_UNABLE_TO_LOCK_MEDIA = 0xC0000175,STATUS_UNABLE_TO_UNLOAD_MEDIA = 0xC0000176,STATUS_EOM_OVERFLOW = 0xC0000177,STATUS_NO_MEDIA = 0xC0000178,STATUS_NO_SUCH_MEMBER = 0xC000017A,STATUS_INVALID_MEMBER = 0xC000017B,STATUS_KEY_DELETED = 0xC000017C,STATUS_NO_LOG_SPACE = 0xC000017D,STATUS_TOO_MANY_SIDS = 0xC000017E,STATUS_LM_CROSS_ENCRYPTION_REQUIRED = 0xC000017F,STATUS_KEY_HAS_CHILDREN = 0xC0000180,STATUS_CHILD_MUST_BE_VOLATILE = 0xC0000181,STATUS_DEVICE_CONFIGURATION_ERROR = 0xC0000182,STATUS_DRIVER_INTERNAL_ERROR = 0xC0000183,STATUS_INVALID_DEVICE_STATE = 0xC0000184,STATUS_IO_DEVICE_ERROR = 0xC0000185,STATUS_DEVICE_PROTOCOL_ERROR = 0xC0000186,STATUS_BACKUP_CONTROLLER = 0xC0000187,STATUS_LOG_FILE_FULL = 0xC0000188,STATUS_TOO_LATE = 0xC0000189,STATUS_NO_TRUST_LSA_SECRET = 0xC000018A,STATUS_NO_TRUST_SAM_ACCOUNT = 0xC000018B,STATUS_TRUSTED_DOMAIN_FAILURE = 0xC000018C,STATUS_TRUSTED_RELATIONSHIP_FAILURE = 0xC000018D,STATUS_EVENTLOG_FILE_CORRUPT = 0xC000018E,STATUS_EVENTLOG_CANT_START = 0xC000018F,STATUS_TRUST_FAILURE = 0xC0000190,STATUS_MUTANT_LIMIT_EXCEEDED = 0xC0000191,STATUS_NETLOGON_NOT_STARTED = 0xC0000192,STATUS_ACCOUNT_EXPIRED = 0xC0000193,STATUS_POSSIBLE_DEADLOCK = 0xC0000194,STATUS_NETWORK_CREDENTIAL_CONFLICT = 0xC0000195,STATUS_REMOTE_SESSION_LIMIT = 0xC0000196,STATUS_EVENTLOG_FILE_CHANGED = 0xC0000197,STATUS_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 0xC0000198,STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 0xC0000199,STATUS_NOLOGON_SERVER_TRUST_ACCOUNT = 0xC000019A,STATUS_DOMAIN_TRUST_INCONSISTENT = 0xC000019B,STATUS_FS_DRIVER_REQUIRED = 0xC000019C,STATUS_NO_USER_SESSION_KEY = 0xC0000202,STATUS_USER_SESSION_DELETED = 0xC0000203,STATUS_RESOURCE_LANG_NOT_FOUND = 0xC0000204,STATUS_INSUFF_SERVER_RESOURCES = 0xC0000205,STATUS_INVALID_BUFFER_SIZE = 0xC0000206,STATUS_INVALID_ADDRESS_COMPONENT = 0xC0000207,STATUS_INVALID_ADDRESS_WILDCARD = 0xC0000208,STATUS_TOO_MANY_ADDRESSES = 0xC0000209,STATUS_ADDRESS_ALREADY_EXISTS = 0xC000020A,STATUS_ADDRESS_CLOSED = 0xC000020B,STATUS_CONNECTION_DISCONNECTED = 0xC000020C,STATUS_CONNECTION_RESET = 0xC000020D,STATUS_TOO_MANY_NODES = 0xC000020E,STATUS_TRANSACTION_ABORTED = 0xC000020F,STATUS_TRANSACTION_TIMED_OUT = 0xC0000210,STATUS_TRANSACTION_NO_RELEASE = 0xC0000211,STATUS_TRANSACTION_NO_MATCH = 0xC0000212,STATUS_TRANSACTION_RESPONDED = 0xC0000213,STATUS_TRANSACTION_INVALID_ID = 0xC0000214,STATUS_TRANSACTION_INVALID_TYPE = 0xC0000215,STATUS_NOT_SERVER_SESSION = 0xC0000216,STATUS_NOT_CLIENT_SESSION = 0xC0000217,STATUS_CANNOT_LOAD_REGISTRY_FILE = 0xC0000218,STATUS_DEBUG_ATTACH_FAILED = 0xC0000219,STATUS_SYSTEM_PROCESS_TERMINATED = 0xC000021A,STATUS_DATA_NOT_ACCEPTED = 0xC000021B,STATUS_NO_BROWSER_SERVERS_FOUND = 0xC000021C,STATUS_VDM_HARD_ERROR = 0xC000021D,STATUS_DRIVER_CANCEL_TIMEOUT = 0xC000021E,STATUS_REPLY_MESSAGE_MISMATCH = 0xC000021F,STATUS_MAPPED_ALIGNMENT = 0xC0000220,STATUS_IMAGE_CHECKSUM_MISMATCH = 0xC0000221,STATUS_LOST_WRITEBEHIND_DATA = 0xC0000222,STATUS_CLIENT_SERVER_PARAMETERS_INVALID = 0xC0000223,STATUS_PASSWORD_MUST_CHANGE = 0xC0000224,STATUS_NOT_FOUND = 0xC0000225,STATUS_NOT_TINY_STREAM = 0xC0000226,STATUS_RECOVERY_FAILURE = 0xC0000227,STATUS_STACK_OVERFLOW_READ = 0xC0000228,STATUS_FAIL_CHECK = 0xC0000229,STATUS_DUPLICATE_OBJECTID = 0xC000022A,STATUS_OBJECTID_EXISTS = 0xC000022B,STATUS_CONVERT_TO_LARGE = 0xC000022C,STATUS_RETRY = 0xC000022D,STATUS_FOUND_OUT_OF_SCOPE = 0xC000022E,STATUS_ALLOCATE_BUCKET = 0xC000022F,STATUS_PROPSET_NOT_FOUND = 0xC0000230,STATUS_MARSHALL_OVERFLOW = 0xC0000231,STATUS_INVALID_VARIANT = 0xC0000232,STATUS_DOMAIN_CONTROLLER_NOT_FOUND = 0xC0000233,STATUS_ACCOUNT_LOCKED_OUT = 0xC0000234,STATUS_HANDLE_NOT_CLOSABLE = 0xC0000235,STATUS_CONNECTION_REFUSED = 0xC0000236,STATUS_GRACEFUL_DISCONNECT = 0xC0000237,STATUS_ADDRESS_ALREADY_ASSOCIATED = 0xC0000238,STATUS_ADDRESS_NOT_ASSOCIATED = 0xC0000239,STATUS_CONNECTION_INVALID = 0xC000023A,STATUS_CONNECTION_ACTIVE = 0xC000023B,STATUS_NETWORK_UNREACHABLE = 0xC000023C,STATUS_HOST_UNREACHABLE = 0xC000023D,STATUS_PROTOCOL_UNREACHABLE = 0xC000023E,STATUS_PORT_UNREACHABLE = 0xC000023F,STATUS_REQUEST_ABORTED = 0xC0000240,STATUS_CONNECTION_ABORTED = 0xC0000241,STATUS_BAD_COMPRESSION_BUFFER = 0xC0000242,STATUS_USER_MAPPED_FILE = 0xC0000243,STATUS_AUDIT_FAILED = 0xC0000244,STATUS_TIMER_RESOLUTION_NOT_SET = 0xC0000245,STATUS_CONNECTION_COUNT_LIMIT = 0xC0000246,STATUS_LOGIN_TIME_RESTRICTION = 0xC0000247,STATUS_LOGIN_WKSTA_RESTRICTION = 0xC0000248,STATUS_IMAGE_MP_UP_MISMATCH = 0xC0000249,STATUS_INSUFFICIENT_LOGON_INFO = 0xC0000250,STATUS_BAD_DLL_ENTRYPOINT = 0xC0000251,STATUS_BAD_SERVICE_ENTRYPOINT = 0xC0000252,STATUS_LPC_REPLY_LOST = 0xC0000253,STATUS_IP_ADDRESS_CONFLICT1 = 0xC0000254,STATUS_IP_ADDRESS_CONFLICT2 = 0xC0000255,STATUS_REGISTRY_QUOTA_LIMIT = 0xC0000256,STATUS_PATH_NOT_COVERED = 0xC0000257,STATUS_NO_CALLBACK_ACTIVE = 0xC0000258,STATUS_LICENSE_QUOTA_EXCEEDED = 0xC0000259,STATUS_PWD_TOO_SHORT = 0xC000025A,STATUS_PWD_TOO_RECENT = 0xC000025B,STATUS_PWD_HISTORY_CONFLICT = 0xC000025C,STATUS_PLUGPLAY_NO_DEVICE = 0xC000025E,STATUS_UNSUPPORTED_COMPRESSION = 0xC000025F,STATUS_INVALID_HW_PROFILE = 0xC0000260,STATUS_INVALID_PLUGPLAY_DEVICE_PATH = 0xC0000261,STATUS_DRIVER_ORDINAL_NOT_FOUND = 0xC0000262,STATUS_DRIVER_ENTRYPOINT_NOT_FOUND = 0xC0000263,STATUS_RESOURCE_NOT_OWNED = 0xC0000264,STATUS_TOO_MANY_LINKS = 0xC0000265,STATUS_QUOTA_LIST_INCONSISTENT = 0xC0000266,STATUS_FILE_IS_OFFLINE = 0xC0000267,STATUS_EVALUATION_EXPIRATION = 0xC0000268,STATUS_ILLEGAL_DLL_RELOCATION = 0xC0000269,STATUS_LICENSE_VIOLATION = 0xC000026A,STATUS_DLL_INIT_FAILED_LOGOFF = 0xC000026B,STATUS_DRIVER_UNABLE_TO_LOAD = 0xC000026C,STATUS_DFS_UNAVAILABLE = 0xC000026D,STATUS_VOLUME_DISMOUNTED = 0xC000026E,STATUS_WX86_INTERNAL_ERROR = 0xC000026F,STATUS_WX86_FLOAT_STACK_CHECK = 0xC0000270,STATUS_VALIDATE_CONTINUE = 0xC0000271,STATUS_NO_MATCH = 0xC0000272,STATUS_NO_MORE_MATCHES = 0xC0000273,STATUS_NOT_A_REPARSE_POINT = 0xC0000275,STATUS_IO_REPARSE_TAG_INVALID = 0xC0000276,STATUS_IO_REPARSE_TAG_MISMATCH = 0xC0000277,STATUS_IO_REPARSE_DATA_INVALID = 0xC0000278,STATUS_IO_REPARSE_TAG_NOT_HANDLED = 0xC0000279,STATUS_REPARSE_POINT_NOT_RESOLVED = 0xC0000280,STATUS_DIRECTORY_IS_A_REPARSE_POINT = 0xC0000281,STATUS_RANGE_LIST_CONFLICT = 0xC0000282,STATUS_SOURCE_ELEMENT_EMPTY = 0xC0000283,STATUS_DESTINATION_ELEMENT_FULL = 0xC0000284,STATUS_ILLEGAL_ELEMENT_ADDRESS = 0xC0000285,STATUS_MAGAZINE_NOT_PRESENT = 0xC0000286,STATUS_REINITIALIZATION_NEEDED = 0xC0000287,STATUS_DEVICE_REQUIRES_CLEANING = 0x80000288,STATUS_DEVICE_DOOR_OPEN = 0x80000289,STATUS_ENCRYPTION_FAILED = 0xC000028A,STATUS_DECRYPTION_FAILED = 0xC000028B,STATUS_RANGE_NOT_FOUND = 0xC000028C,STATUS_NO_RECOVERY_POLICY = 0xC000028D,STATUS_NO_EFS = 0xC000028E,STATUS_WRONG_EFS = 0xC000028F,STATUS_NO_USER_KEYS = 0xC0000290,STATUS_FILE_NOT_ENCRYPTED = 0xC0000291,STATUS_NOT_EXPORT_FORMAT = 0xC0000292,STATUS_FILE_ENCRYPTED = 0xC0000293,STATUS_WAKE_SYSTEM = 0x40000294,STATUS_WMI_GUID_NOT_FOUND = 0xC0000295,STATUS_WMI_INSTANCE_NOT_FOUND = 0xC0000296,STATUS_WMI_ITEMID_NOT_FOUND = 0xC0000297,STATUS_WMI_TRY_AGAIN = 0xC0000298,STATUS_SHARED_POLICY = 0xC0000299,STATUS_POLICY_OBJECT_NOT_FOUND = 0xC000029A,STATUS_POLICY_ONLY_IN_DS = 0xC000029B,STATUS_VOLUME_NOT_UPGRADED = 0xC000029C,STATUS_REMOTE_STORAGE_NOT_ACTIVE = 0xC000029D,STATUS_REMOTE_STORAGE_MEDIA_ERROR = 0xC000029E,STATUS_NO_TRACKING_SERVICE = 0xC000029F,STATUS_SERVER_SID_MISMATCH = 0xC00002A0,STATUS_DS_NO_ATTRIBUTE_OR_VALUE = 0xC00002A1,STATUS_DS_INVALID_ATTRIBUTE_SYNTAX = 0xC00002A2,STATUS_DS_ATTRIBUTE_TYPE_UNDEFINED = 0xC00002A3,STATUS_DS_ATTRIBUTE_OR_VALUE_EXISTS = 0xC00002A4,STATUS_DS_BUSY = 0xC00002A5,STATUS_DS_UNAVAILABLE = 0xC00002A6,STATUS_DS_NO_RIDS_ALLOCATED = 0xC00002A7,STATUS_DS_NO_MORE_RIDS = 0xC00002A8,STATUS_DS_INCORRECT_ROLE_OWNER = 0xC00002A9,STATUS_DS_RIDMGR_INIT_ERROR = 0xC00002AA,STATUS_DS_OBJ_CLASS_VIOLATION = 0xC00002AB,STATUS_DS_CANT_ON_NON_LEAF = 0xC00002AC,STATUS_DS_CANT_ON_RDN = 0xC00002AD,STATUS_DS_CANT_MOD_OBJ_CLASS = 0xC00002AE,STATUS_DS_CROSS_DOM_MOVE_FAILED = 0xC00002AF,STATUS_DS_GC_NOT_AVAILABLE = 0xC00002B0,STATUS_DIRECTORY_SERVICE_REQUIRED = 0xC00002B1,STATUS_REPARSE_ATTRIBUTE_CONFLICT = 0xC00002B2,STATUS_CANT_ENABLE_DENY_ONLY = 0xC00002B3,STATUS_FLOAT_MULTIPLE_FAULTS = 0xC00002B4,STATUS_FLOAT_MULTIPLE_TRAPS = 0xC00002B5,STATUS_DEVICE_REMOVED = 0xC00002B6,STATUS_JOURNAL_DELETE_IN_PROGRESS = 0xC00002B7,STATUS_JOURNAL_NOT_ACTIVE = 0xC00002B8,STATUS_NOINTERFACE = 0xC00002B9,STATUS_DS_ADMIN_LIMIT_EXCEEDED = 0xC00002C1,STATUS_DRIVER_FAILED_SLEEP = 0xC00002C2,STATUS_MUTUAL_AUTHENTICATION_FAILED = 0xC00002C3,STATUS_CORRUPT_SYSTEM_FILE = 0xC00002C4,STATUS_DATATYPE_MISALIGNMENT_ERROR = 0xC00002C5,STATUS_WMI_READ_ONLY = 0xC00002C6,STATUS_WMI_SET_FAILURE = 0xC00002C7,STATUS_COMMITMENT_MINIMUM = 0xC00002C8,STATUS_REG_NAT_CONSUMPTION = 0xC00002C9,STATUS_TRANSPORT_FULL = 0xC00002CA,STATUS_DS_SAM_INIT_FAILURE = 0xC00002CB,STATUS_ONLY_IF_CONNECTED = 0xC00002CC,STATUS_DS_SENSITIVE_GROUP_VIOLATION = 0xC00002CD,STATUS_PNP_RESTART_ENUMERATION = 0xC00002CE,STATUS_JOURNAL_ENTRY_DELETED = 0xC00002CF,STATUS_DS_CANT_MOD_PRIMARYGROUPID = 0xC00002D0,STATUS_SYSTEM_IMAGE_BAD_SIGNATURE = 0xC00002D1,STATUS_PNP_REBOOT_REQUIRED = 0xC00002D2,STATUS_POWER_STATE_INVALID = 0xC00002D3,STATUS_DS_INVALID_GROUP_TYPE = 0xC00002D4,STATUS_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 0xC00002D5,STATUS_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 0xC00002D6,STATUS_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 0xC00002D7,STATUS_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 0xC00002D8,STATUS_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 0xC00002D9,STATUS_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 0xC00002DA,STATUS_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 0xC00002DB,STATUS_DS_HAVE_PRIMARY_MEMBERS = 0xC00002DC,STATUS_WMI_NOT_SUPPORTED = 0xC00002DD,STATUS_INSUFFICIENT_POWER = 0xC00002DE,STATUS_SAM_NEED_BOOTKEY_PASSWORD = 0xC00002DF,STATUS_SAM_NEED_BOOTKEY_FLOPPY = 0xC00002E0,STATUS_DS_CANT_START = 0xC00002E1,STATUS_DS_INIT_FAILURE = 0xC00002E2,STATUS_SAM_INIT_FAILURE = 0xC00002E3,STATUS_DS_GC_REQUIRED = 0xC00002E4,STATUS_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 0xC00002E5,STATUS_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 0xC00002E6,STATUS_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 0xC00002E7,STATUS_MULTIPLE_FAULT_VIOLATION = 0xC00002E8,STATUS_CURRENT_DOMAIN_NOT_ALLOWED = 0xC00002E9,STATUS_CANNOT_MAKE = 0xC00002EA,STATUS_SYSTEM_SHUTDOWN = 0xC00002EB,STATUS_DS_INIT_FAILURE_CONSOLE = 0xC00002EC,STATUS_DS_SAM_INIT_FAILURE_CONSOLE = 0xC00002ED,STATUS_UNFINISHED_CONTEXT_DELETED = 0xC00002EE,STATUS_NO_TGT_REPLY = 0xC00002EF,STATUS_OBJECTID_NOT_FOUND = 0xC00002F0,STATUS_NO_IP_ADDRESSES = 0xC00002F1,STATUS_WRONG_CREDENTIAL_HANDLE = 0xC00002F2,STATUS_CRYPTO_SYSTEM_INVALID = 0xC00002F3,STATUS_MAX_REFERRALS_EXCEEDED = 0xC00002F4,STATUS_MUST_BE_KDC = 0xC00002F5,STATUS_STRONG_CRYPTO_NOT_SUPPORTED = 0xC00002F6,STATUS_TOO_MANY_PRINCIPALS = 0xC00002F7,STATUS_NO_PA_DATA = 0xC00002F8,STATUS_PKINIT_NAME_MISMATCH = 0xC00002F9,STATUS_SMARTCARD_LOGON_REQUIRED = 0xC00002FA,STATUS_KDC_INVALID_REQUEST = 0xC00002FB,STATUS_KDC_UNABLE_TO_REFER = 0xC00002FC,STATUS_KDC_UNKNOWN_ETYPE = 0xC00002FD,STATUS_SHUTDOWN_IN_PROGRESS = 0xC00002FE,STATUS_SERVER_SHUTDOWN_IN_PROGRESS = 0xC00002FF,STATUS_NOT_SUPPORTED_ON_SBS = 0xC0000300,STATUS_WMI_GUID_DISCONNECTED = 0xC0000301,STATUS_WMI_ALREADY_DISABLED = 0xC0000302,STATUS_WMI_ALREADY_ENABLED = 0xC0000303,STATUS_MFT_TOO_FRAGMENTED = 0xC0000304,STATUS_COPY_PROTECTION_FAILURE = 0xC0000305,STATUS_CSS_AUTHENTICATION_FAILURE = 0xC0000306,STATUS_CSS_KEY_NOT_PRESENT = 0xC0000307,STATUS_CSS_KEY_NOT_ESTABLISHED = 0xC0000308,STATUS_CSS_SCRAMBLED_SECTOR = 0xC0000309,STATUS_CSS_REGION_MISMATCH = 0xC000030A,STATUS_CSS_RESETS_EXHAUSTED = 0xC000030B,STATUS_PKINIT_FAILURE = 0xC0000320,STATUS_SMARTCARD_SUBSYSTEM_FAILURE = 0xC0000321,STATUS_NO_KERB_KEY = 0xC0000322,STATUS_HOST_DOWN = 0xC0000350,STATUS_UNSUPPORTED_PREAUTH = 0xC0000351,STATUS_EFS_ALG_BLOB_TOO_BIG = 0xC0000352,STATUS_PORT_NOT_SET = 0xC0000353,STATUS_DEBUGGER_INACTIVE = 0xC0000354,STATUS_DS_VERSION_CHECK_FAILURE = 0xC0000355,STATUS_AUDITING_DISABLED = 0xC0000356,STATUS_PRENT4_MACHINE_ACCOUNT = 0xC0000357,STATUS_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 0xC0000358,STATUS_INVALID_IMAGE_WIN_32 = 0xC0000359,STATUS_INVALID_IMAGE_WIN_64 = 0xC000035A,STATUS_BAD_BINDINGS = 0xC000035B,STATUS_NETWORK_SESSION_EXPIRED = 0xC000035C,STATUS_APPHELP_BLOCK = 0xC000035D,STATUS_ALL_SIDS_FILTERED = 0xC000035E,STATUS_NOT_SAFE_MODE_DRIVER = 0xC000035F,STATUS_ACCESS_DISABLED_BY_POLICY_DEFAULT = 0xC0000361,STATUS_ACCESS_DISABLED_BY_POLICY_PATH = 0xC0000362,STATUS_ACCESS_DISABLED_BY_POLICY_PUBLISHER = 0xC0000363,STATUS_ACCESS_DISABLED_BY_POLICY_OTHER = 0xC0000364,STATUS_FAILED_DRIVER_ENTRY = 0xC0000365,STATUS_DEVICE_ENUMERATION_ERROR = 0xC0000366,STATUS_WAIT_FOR_OPLOCK = 0x367,STATUS_MOUNT_POINT_NOT_RESOLVED = 0xC0000368,STATUS_INVALID_DEVICE_OBJECT_PARAMETER = 0xC0000369,STATUS_MCA_OCCURED = 0xC000036A,STATUS_DRIVER_BLOCKED_CRITICAL = 0xC000036B,STATUS_DRIVER_BLOCKED = 0xC000036C,STATUS_DRIVER_DATABASE_ERROR = 0xC000036D,STATUS_SYSTEM_HIVE_TOO_LARGE = 0xC000036E,STATUS_INVALID_IMPORT_OF_NON_DLL = 0xC000036F,STATUS_DS_SHUTTING_DOWN = 0x40000370,STATUS_SMARTCARD_WRONG_PIN = 0xC0000380,STATUS_SMARTCARD_CARD_BLOCKED = 0xC0000381,STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED = 0xC0000382,STATUS_SMARTCARD_NO_CARD = 0xC0000383,STATUS_SMARTCARD_NO_KEY_CONTAINER = 0xC0000384,STATUS_SMARTCARD_NO_CERTIFICATE = 0xC0000385,STATUS_SMARTCARD_NO_KEYSET = 0xC0000386,STATUS_SMARTCARD_IO_ERROR = 0xC0000387,STATUS_DOWNGRADE_DETECTED = 0xC0000388,STATUS_SMARTCARD_CERT_REVOKED = 0xC0000389,STATUS_ISSUING_CA_UNTRUSTED = 0xC000038A,STATUS_REVOCATION_OFFLINE_C = 0xC000038B,STATUS_PKINIT_CLIENT_FAILURE = 0xC000038C,STATUS_SMARTCARD_CERT_EXPIRED = 0xC000038D,STATUS_DRIVER_FAILED_PRIOR_UNLOAD = 0xC000038E,STATUS_SMARTCARD_SILENT_CONTEXT = 0xC000038F,STATUS_PER_USER_TRUST_QUOTA_EXCEEDED = 0xC0000401,STATUS_ALL_USER_TRUST_QUOTA_EXCEEDED = 0xC0000402,STATUS_USER_DELETE_TRUST_QUOTA_EXCEEDED = 0xC0000403,STATUS_DS_NAME_NOT_UNIQUE = 0xC0000404,STATUS_DS_DUPLICATE_ID_FOUND = 0xC0000405,STATUS_DS_GROUP_CONVERSION_ERROR = 0xC0000406,STATUS_VOLSNAP_PREPARE_HIBERNATE = 0xC0000407,STATUS_USER2USER_REQUIRED = 0xC0000408,STATUS_STACK_BUFFER_OVERRUN = 0xC0000409,STATUS_NO_S4U_PROT_SUPPORT = 0xC000040A,STATUS_CROSSREALM_DELEGATION_FAILURE = 0xC000040B,STATUS_REVOCATION_OFFLINE_KDC = 0xC000040C,STATUS_ISSUING_CA_UNTRUSTED_KDC = 0xC000040D,STATUS_KDC_CERT_EXPIRED = 0xC000040E,STATUS_KDC_CERT_REVOKED = 0xC000040F,STATUS_PARAMETER_QUOTA_EXCEEDED = 0xC0000410,STATUS_HIBERNATION_FAILURE = 0xC0000411,STATUS_DELAY_LOAD_FAILED = 0xC0000412,STATUS_AUTHENTICATION_FIREWALL_FAILED = 0xC0000413,STATUS_VDM_DISALLOWED = 0xC0000414,STATUS_HUNG_DISPLAY_DRIVER_THREAD = 0xC0000415,STATUS_WOW_ASSERTION = 0xC0009898,};
enum MACRO_STATUS_CONTINUE {STATUS_CONTINUE_COMPLETION = 0,};
enum MACRO_STATUS_GUARD {STATUS_GUARD_PAGE_VIOLATION = 0x80000001,STATUS_DATATYPE_MISALIGNMENT = 0x80000002,STATUS_BREAKPOINT = 0x80000003,STATUS_SINGLE_STEP = 0x80000004,STATUS_BUFFER_OVERFLOW = 0x80000005,STATUS_NO_MORE_FILES = 0x80000006,STATUS_WAKE_SYSTEM_DEBUGGER = 0x80000007,STATUS_HANDLES_CLOSED = 0x8000000A,STATUS_NO_INHERITANCE = 0x8000000B,STATUS_GUID_SUBSTITUTION_MADE = 0x8000000C,STATUS_PARTIAL_COPY = 0x8000000D,STATUS_DEVICE_PAPER_EMPTY = 0x8000000E,STATUS_DEVICE_POWERED_OFF = 0x8000000F,STATUS_DEVICE_OFF_LINE = 0x80000010,STATUS_DEVICE_BUSY = 0x80000011,STATUS_NO_MORE_EAS = 0x80000012,STATUS_INVALID_EA_NAME = 0x80000013,STATUS_EA_LIST_INCONSISTENT = 0x80000014,STATUS_INVALID_EA_FLAG = 0x80000015,STATUS_VERIFY_REQUIRED = 0x80000016,STATUS_EXTRANEOUS_INFORMATION = 0x80000017,STATUS_RXACT_COMMIT_NECESSARY = 0x80000018,STATUS_NO_MORE_ENTRIES = 0x8000001A,STATUS_FILEMARK_DETECTED = 0x8000001B,STATUS_MEDIA_CHANGED = 0x8000001C,STATUS_BUS_RESET = 0x8000001D,STATUS_END_OF_MEDIA = 0x8000001E,STATUS_BEGINNING_OF_MEDIA = 0x8000001F,STATUS_MEDIA_CHECK = 0x80000020,STATUS_SETMARK_DETECTED = 0x80000021,STATUS_NO_DATA_DETECTED = 0x80000022,STATUS_REDIRECTOR_HAS_OPEN_HANDLES = 0x80000023,STATUS_SERVER_HAS_OPEN_HANDLES = 0x80000024,STATUS_ALREADY_DISCONNECTED = 0x80000025,STATUS_LONGJUMP = 0x80000026,STATUS_CLEANER_CARTRIDGE_INSTALLED = 0x80000027,STATUS_PLUGPLAY_QUERY_VETOED = 0x80000028,STATUS_UNWIND_CONSOLIDATE = 0x80000029,STATUS_REGISTRY_HIVE_RECOVERED = 0x8000002A,STATUS_DLL_MIGHT_BE_INSECURE = 0x8000002B,STATUS_DLL_MIGHT_BE_INCOMPATIBLE = 0x8000002C,};
enum MACRO_STATUS_INVALID {STATUS_INVALID_GENERATION = 0xC0120090,};
enum MACRO_STATUS_OBJECT {STATUS_OBJECT_NAME_EXISTS = 0x40000000,STATUS_THREAD_WAS_SUSPENDED = 0x40000001,STATUS_WORKING_SET_LIMIT_RANGE = 0x40000002,STATUS_IMAGE_NOT_AT_BASE = 0x40000003,STATUS_RXACT_STATE_CREATED = 0x40000004,STATUS_SEGMENT_NOTIFICATION = 0x40000005,STATUS_LOCAL_USER_SESSION_KEY = 0x40000006,STATUS_BAD_CURRENT_DIRECTORY = 0x40000007,STATUS_SERIAL_MORE_WRITES = 0x40000008,STATUS_REGISTRY_RECOVERED = 0x40000009,STATUS_FT_READ_RECOVERY_FROM_BACKUP = 0x4000000A,STATUS_FT_WRITE_RECOVERY = 0x4000000B,STATUS_SERIAL_COUNTER_TIMEOUT = 0x4000000C,STATUS_NULL_LM_PASSWORD = 0x4000000D,STATUS_IMAGE_MACHINE_TYPE_MISMATCH = 0x4000000E,STATUS_RECEIVE_PARTIAL = 0x4000000F,STATUS_RECEIVE_EXPEDITED = 0x40000010,STATUS_RECEIVE_PARTIAL_EXPEDITED = 0x40000011,STATUS_EVENT_DONE = 0x40000012,STATUS_EVENT_PENDING = 0x40000013,STATUS_CHECKING_FILE_SYSTEM = 0x40000014,STATUS_FATAL_APP_EXIT = 0x40000015,STATUS_PREDEFINED_HANDLE = 0x40000016,STATUS_WAS_UNLOCKED = 0x40000017,STATUS_SERVICE_NOTIFICATION = 0x40000018,STATUS_WAS_LOCKED = 0x40000019,STATUS_LOG_HARD_ERROR = 0x4000001A,STATUS_ALREADY_WIN32 = 0x4000001B,STATUS_WX86_UNSIMULATE = 0x4000001C,STATUS_WX86_CONTINUE = 0x4000001D,STATUS_WX86_SINGLE_STEP = 0x4000001E,STATUS_WX86_BREAKPOINT = 0x4000001F,STATUS_WX86_EXCEPTION_CONTINUE = 0x40000020,STATUS_WX86_EXCEPTION_LASTCHANCE = 0x40000021,STATUS_WX86_EXCEPTION_CHAIN = 0x40000022,STATUS_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 0x40000023,STATUS_NO_YIELD_PERFORMED = 0x40000024,STATUS_TIMER_RESUME_IGNORED = 0x40000025,STATUS_ARBITRATION_UNHANDLED = 0x40000026,STATUS_CARDBUS_NOT_SUPPORTED = 0x40000027,STATUS_WX86_CREATEWX86TIB = 0x40000028,STATUS_MP_PROCESSOR_MISMATCH = 0x40000029,STATUS_HIBERNATED = 0x4000002A,STATUS_RESUME_HIBERNATION = 0x4000002B,STATUS_FIRMWARE_UPDATED = 0x4000002C,STATUS_DRIVERS_LEAKING_LOCKED_PAGES = 0x4000002D,};
enum MACRO_STATUS_SEVERITY {STATUS_SEVERITY_WARNING = 0x2,STATUS_SEVERITY_SUCCESS = 0x0,STATUS_SEVERITY_INFORMATIONAL = 0x1,STATUS_SEVERITY_ERROR = 0x3,STATUS_WAIT_0 = 0x0,STATUS_WAIT_1 = 0x1,STATUS_WAIT_2 = 0x2,STATUS_WAIT_3 = 0x3,STATUS_WAIT_63 = 0x3F,STATUS_ABANDONED = 0x80,STATUS_ABANDONED_WAIT_0 = 0x80,STATUS_ABANDONED_WAIT_63 = 0xBF,STATUS_USER_APC = 0xC0,STATUS_KERNEL_APC = 0x100,STATUS_ALERTED = 0x101,STATUS_TIMEOUT = 0x102,STATUS_PENDING = 0x103,STATUS_REPARSE = 0x104,STATUS_MORE_ENTRIES = 0x105,STATUS_NOT_ALL_ASSIGNED = 0x106,STATUS_SOME_NOT_MAPPED = 0x107,STATUS_OPLOCK_BREAK_IN_PROGRESS = 0x108,STATUS_VOLUME_MOUNTED = 0x109,STATUS_RXACT_COMMITTED = 0x10A,STATUS_NOTIFY_CLEANUP = 0x10B,STATUS_NOTIFY_ENUM_DIR = 0x10C,STATUS_NO_QUOTAS_FOR_ACCOUNT = 0x10D,STATUS_PRIMARY_TRANSPORT_CONNECT_FAILED = 0x10E,STATUS_PAGE_FAULT_TRANSITION = 0x110,STATUS_PAGE_FAULT_DEMAND_ZERO = 0x111,STATUS_PAGE_FAULT_COPY_ON_WRITE = 0x112,STATUS_PAGE_FAULT_GUARD_PAGE = 0x113,STATUS_PAGE_FAULT_PAGING_FILE = 0x114,STATUS_CACHE_PAGE_LOCKED = 0x115,STATUS_CRASH_DUMP = 0x116,STATUS_BUFFER_ALL_ZEROS = 0x117,STATUS_REPARSE_OBJECT = 0x118,STATUS_RESOURCE_REQUIREMENTS_CHANGED = 0x119,STATUS_TRANSLATION_COMPLETE = 0x120,STATUS_DS_MEMBERSHIP_EVALUATED_LOCALLY = 0x121,STATUS_NOTHING_TO_TERMINATE = 0x122,STATUS_PROCESS_NOT_IN_JOB = 0x123,STATUS_PROCESS_IN_JOB = 0x124,STATUS_VOLSNAP_HIBERNATE_READY = 0x125,STATUS_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 0x126,};
enum MACRO_STORAGE {STORAGE_SCSI_INFO_EXCEPTIONS_PageSavable_ID = 1,STORAGE_SCSI_INFO_EXCEPTIONS_Flags_ID = 2,STORAGE_SCSI_INFO_EXCEPTIONS_MRIE_ID = 3,STORAGE_SCSI_INFO_EXCEPTIONS_Padding_ID = 4,STORAGE_SCSI_INFO_EXCEPTIONS_IntervalTimer_ID = 5,STORAGE_SCSI_INFO_EXCEPTIONS_ReportCount_ID = 6,};
enum MACRO_STREAM : __int64 {STREAM_SYSTEM_TIME_MASK = 0x1FFFFFFFF,};
enum MACRO_STREAMS {STREAMS_INTERNAL_ERROR = 0x4B,FATAL_UNHANDLED_HARD_ERROR = 0x4C,};
enum MACRO_STREAM_CLASS {STREAM_CLASS_VERSION_20 = 0x200,};
enum MACRO_STRICT {STRICT = 1,};
enum MACRO_SUBLANG {SUBLANG_NEUTRAL = 0x0,SUBLANG_DEFAULT = 0x1,SUBLANG_SYS_DEFAULT = 0x2,SUBLANG_ARABIC_SAUDI_ARABIA = 0x1,SUBLANG_ARABIC_IRAQ = 0x2,SUBLANG_ARABIC_EGYPT = 0x3,SUBLANG_ARABIC_LIBYA = 0x4,SUBLANG_ARABIC_ALGERIA = 0x5,SUBLANG_ARABIC_MOROCCO = 0x6,SUBLANG_ARABIC_TUNISIA = 0x7,SUBLANG_ARABIC_OMAN = 0x8,SUBLANG_ARABIC_YEMEN = 0x9,SUBLANG_ARABIC_SYRIA = 0xA,SUBLANG_ARABIC_JORDAN = 0xB,SUBLANG_ARABIC_LEBANON = 0xC,SUBLANG_ARABIC_KUWAIT = 0xD,SUBLANG_ARABIC_UAE = 0xE,SUBLANG_ARABIC_BAHRAIN = 0xF,SUBLANG_ARABIC_QATAR = 0x10,SUBLANG_AZERI_LATIN = 0x1,SUBLANG_AZERI_CYRILLIC = 0x2,SUBLANG_CHINESE_TRADITIONAL = 0x1,SUBLANG_CHINESE_SIMPLIFIED = 0x2,SUBLANG_CHINESE_HONGKONG = 0x3,SUBLANG_CHINESE_SINGAPORE = 0x4,SUBLANG_CHINESE_MACAU = 0x5,SUBLANG_DUTCH = 0x1,SUBLANG_DUTCH_BELGIAN = 0x2,SUBLANG_ENGLISH_US = 0x1,SUBLANG_ENGLISH_UK = 0x2,SUBLANG_ENGLISH_AUS = 0x3,SUBLANG_ENGLISH_CAN = 0x4,SUBLANG_ENGLISH_NZ = 0x5,SUBLANG_ENGLISH_EIRE = 0x6,SUBLANG_ENGLISH_SOUTH_AFRICA = 0x7,SUBLANG_ENGLISH_JAMAICA = 0x8,SUBLANG_ENGLISH_CARIBBEAN = 0x9,SUBLANG_ENGLISH_BELIZE = 0xA,SUBLANG_ENGLISH_TRINIDAD = 0xB,SUBLANG_ENGLISH_ZIMBABWE = 0xC,SUBLANG_ENGLISH_PHILIPPINES = 0xD,SUBLANG_FRENCH = 0x1,SUBLANG_FRENCH_BELGIAN = 0x2,SUBLANG_FRENCH_CANADIAN = 0x3,SUBLANG_FRENCH_SWISS = 0x4,SUBLANG_FRENCH_LUXEMBOURG = 0x5,SUBLANG_FRENCH_MONACO = 0x6,SUBLANG_GERMAN = 0x1,SUBLANG_GERMAN_SWISS = 0x2,SUBLANG_GERMAN_AUSTRIAN = 0x3,SUBLANG_GERMAN_LUXEMBOURG = 0x4,SUBLANG_GERMAN_LIECHTENSTEIN = 0x5,SUBLANG_ITALIAN = 0x1,SUBLANG_ITALIAN_SWISS = 0x2,SUBLANG_KASHMIRI_SASIA = 0x2,SUBLANG_KASHMIRI_INDIA = 0x2,SUBLANG_KOREAN = 0x1,SUBLANG_LITHUANIAN = 0x1,SUBLANG_MALAY_MALAYSIA = 0x1,SUBLANG_MALAY_BRUNEI_DARUSSALAM = 0x2,SUBLANG_NEPALI_INDIA = 0x2,SUBLANG_NORWEGIAN_BOKMAL = 0x1,SUBLANG_NORWEGIAN_NYNORSK = 0x2,SUBLANG_PORTUGUESE = 0x2,SUBLANG_PORTUGUESE_BRAZILIAN = 0x1,SUBLANG_SERBIAN_LATIN = 0x2,SUBLANG_SERBIAN_CYRILLIC = 0x3,SUBLANG_SPANISH = 0x1,SUBLANG_SPANISH_MEXICAN = 0x2,SUBLANG_SPANISH_MODERN = 0x3,SUBLANG_SPANISH_GUATEMALA = 0x4,SUBLANG_SPANISH_COSTA_RICA = 0x5,SUBLANG_SPANISH_PANAMA = 0x6,SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 0x7,SUBLANG_SPANISH_VENEZUELA = 0x8,SUBLANG_SPANISH_COLOMBIA = 0x9,SUBLANG_SPANISH_PERU = 0xA,SUBLANG_SPANISH_ARGENTINA = 0xB,SUBLANG_SPANISH_ECUADOR = 0xC,SUBLANG_SPANISH_CHILE = 0xD,SUBLANG_SPANISH_URUGUAY = 0xE,SUBLANG_SPANISH_PARAGUAY = 0xF,SUBLANG_SPANISH_BOLIVIA = 0x10,SUBLANG_SPANISH_EL_SALVADOR = 0x11,SUBLANG_SPANISH_HONDURAS = 0x12,SUBLANG_SPANISH_NICARAGUA = 0x13,SUBLANG_SPANISH_PUERTO_RICO = 0x14,SUBLANG_SWEDISH = 0x1,SUBLANG_SWEDISH_FINLAND = 0x2,SUBLANG_URDU_PAKISTAN = 0x1,SUBLANG_URDU_INDIA = 0x2,SUBLANG_UZBEK_LATIN = 0x1,SUBLANG_UZBEK_CYRILLIC = 0x2,};
enum MACRO_SYMBOLIC {SYMBOLIC_LINK_QUERY = 0x1,SYMBOLIC_LINK_ALL_ACCESS = 0xF0001,};
enum MACRO_SYNCH {SYNCH_ON_SY = 1,SYNCH_ON_TAG = 2,SYNCH_ON_TIME = 4,};
enum MACRO_SYNCHRONIZE {SYNCHRONIZE = 0x100000,};
enum MACRO_SYS {SYS_OPEN = 20,};
enum MACRO_SYSAUDIO {SYSAUDIO_FLAGS_DONT_COMBINE_PINS = 0x1,};
enum MACRO_SYSTEM {SYSTEM_EXIT_OWNED_MUTEX = 0x39,SYSTEM_UNWIND_PREVIOUS_USER = 0x3A,SYSTEM_SERVICE_EXCEPTION = 0x3B,};
enum MACRO_SYSTEM_LICENSE {SYSTEM_LICENSE_VIOLATION = 0x9A,};
enum MACRO_SYSTEM_PTE {SYSTEM_PTE_MISUSE = 0xDA,};
enum MACRO_SYSTEM_SCAN {SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD = 0xD4,};
enum MACRO_SYSTEM_THREAD {SYSTEM_THREAD_EXCEPTION_NOT_HANDLED = 0x7E,SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M = 0x1000007E,};
enum MACRO_TAG {DEVICE_EXTENSION_TAG = 0xDEADBEEF,VIRTUAL_DEVICE_EXTENSION_TAG = 0xDEAFBEEF,PORT_EXTENSION_TAG = 0xDEAFCAFE,BUS_EXTENSION_TAG = 0xABACADAB,ISOCH_RESOURCE_TAG = 0xBABEFACE,BANDWIDTH_ALLOCATE_TAG = 0xFEEDBEAD,};
enum MACRO_TARGET {TARGET_MDL_TOO_SMALL = 0x40,};
enum MACRO_TCODE {TCODE_WRITE_REQUEST_QUADLET = 0,TCODE_WRITE_REQUEST_BLOCK = 1,TCODE_WRITE_RESPONSE = 2,TCODE_RESERVED1 = 3,TCODE_READ_REQUEST_QUADLET = 4,TCODE_READ_REQUEST_BLOCK = 5,TCODE_READ_RESPONSE_QUADLET = 6,TCODE_READ_RESPONSE_BLOCK = 7,TCODE_CYCLE_START = 8,TCODE_LOCK_REQUEST = 9,TCODE_ISOCH_DATA_BLOCK = 10,TCODE_LOCK_RESPONSE = 11,TCODE_RESERVED2 = 12,TCODE_RESERVED3 = 13,TCODE_SELFID = 14,TCODE_RESERVED4 = 15,TCODE_REQUEST_BLOCK_MASK = 1,TCODE_RESPONSE_MASK = 2,};
enum MACRO_TERMINAL {TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE = 0xCF,};
enum MACRO_THREAD {THREAD_TERMINATE_HELD_MUTEX = 0x4000008A,};
enum MACRO_THREAD_NOT {THREAD_NOT_MUTEX_OWNER = 0x11,};
enum MACRO_THREAD_STUCK {THREAD_STUCK_IN_DEVICE_DRIVER = 0xEA,THREAD_STUCK_IN_DEVICE_DRIVER_M = 0x100000EA,};
enum MACRO_THREAD_TERMINATE {THREAD_TERMINATE = 0x1,THREAD_SET_INFORMATION = 0x20,THREAD_ALL_ACCESS = 0x1F03FF,};
enum MACRO_THREAD_WAIT {THREAD_WAIT_OBJECTS = 3,};
enum MACRO_TIMER {TIMER_OR_DPC_INVALID = 0xC7,};
enum MACRO_TMP {TMP_MAX = 32767,};
enum MACRO_TRAP {TRAP_CAUSE_UNKNOWN = 0x12,};
enum MACRO_UDFS {UDFS_FILE_SYSTEM = 0x9B,};
enum MACRO_UNEXPECTED {UNEXPECTED_INITIALIZATION_CALL = 0x33,};
enum MACRO_UNEXPECTED_KERNEL {UNEXPECTED_KERNEL_MODE_TRAP = 0x7F,UNEXPECTED_KERNEL_MODE_TRAP_M = 0x1000007F,};
enum MACRO_UNICODE {UNICODE_STRING_MAX_BYTES = 65534,UNICODE_STRING_MAX_CHARS = 32767,};
enum MACRO_UNIT_DIRECTORY_ENTRY {ADD_UNIT_DIRECTORY_ENTRY = 0x1,REMOVE_UNIT_DIRECTORY_ENTRY = 0x2,};
enum MACRO_UNKNOWN_LOGON_SESSION {DEREF_UNKNOWN_LOGON_SESSION = 0x46,REF_UNKNOWN_LOGON_SESSION = 0x47,};
enum MACRO_UNMOUNTABLE {UNMOUNTABLE_BOOT_VOLUME = 0xED,};
enum MACRO_UNSUPPORTED {UNSUPPORTED_PROCESSOR = 0x5D,};
enum MACRO_UP {UP_DRIVER_ON_MP_SYSTEM = 0x92,};
enum MACRO_URB {URB_FUNCTION_SELECT_CONFIGURATION = 0x0,URB_FUNCTION_SELECT_INTERFACE = 0x1,URB_FUNCTION_ABORT_PIPE = 0x2,URB_FUNCTION_TAKE_FRAME_LENGTH_CONTROL = 0x3,URB_FUNCTION_RELEASE_FRAME_LENGTH_CONTROL = 0x4,URB_FUNCTION_GET_FRAME_LENGTH = 0x5,URB_FUNCTION_SET_FRAME_LENGTH = 0x6,URB_FUNCTION_GET_CURRENT_FRAME_NUMBER = 0x7,URB_FUNCTION_CONTROL_TRANSFER = 0x8,URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER = 0x9,URB_FUNCTION_ISOCH_TRANSFER = 0xA,URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE = 0xB,URB_FUNCTION_SET_DESCRIPTOR_TO_DEVICE = 0xC,URB_FUNCTION_SET_FEATURE_TO_DEVICE = 0xD,URB_FUNCTION_SET_FEATURE_TO_INTERFACE = 0xE,URB_FUNCTION_SET_FEATURE_TO_ENDPOINT = 0xF,URB_FUNCTION_CLEAR_FEATURE_TO_DEVICE = 0x10,URB_FUNCTION_CLEAR_FEATURE_TO_INTERFACE = 0x11,URB_FUNCTION_CLEAR_FEATURE_TO_ENDPOINT = 0x12,URB_FUNCTION_GET_STATUS_FROM_DEVICE = 0x13,URB_FUNCTION_GET_STATUS_FROM_INTERFACE = 0x14,URB_FUNCTION_GET_STATUS_FROM_ENDPOINT = 0x15,URB_FUNCTION_RESERVED_0X0016 = 0x16,URB_FUNCTION_VENDOR_DEVICE = 0x17,URB_FUNCTION_VENDOR_INTERFACE = 0x18,URB_FUNCTION_VENDOR_ENDPOINT = 0x19,URB_FUNCTION_CLASS_DEVICE = 0x1A,URB_FUNCTION_CLASS_INTERFACE = 0x1B,URB_FUNCTION_CLASS_ENDPOINT = 0x1C,URB_FUNCTION_RESERVE_0X001D = 0x1D,URB_FUNCTION_SYNC_RESET_PIPE_AND_CLEAR_STALL = 0x1E,URB_FUNCTION_CLASS_OTHER = 0x1F,URB_FUNCTION_VENDOR_OTHER = 0x20,URB_FUNCTION_GET_STATUS_FROM_OTHER = 0x21,URB_FUNCTION_CLEAR_FEATURE_TO_OTHER = 0x22,URB_FUNCTION_SET_FEATURE_TO_OTHER = 0x23,URB_FUNCTION_GET_DESCRIPTOR_FROM_ENDPOINT = 0x24,URB_FUNCTION_SET_DESCRIPTOR_TO_ENDPOINT = 0x25,URB_FUNCTION_GET_CONFIGURATION = 0x26,URB_FUNCTION_GET_INTERFACE = 0x27,URB_FUNCTION_GET_DESCRIPTOR_FROM_INTERFACE = 0x28,URB_FUNCTION_SET_DESCRIPTOR_TO_INTERFACE = 0x29,URB_FUNCTION_GET_MS_FEATURE_DESCRIPTOR = 0x2A,URB_FUNCTION_RESERVE_0X002B = 0x2B,URB_FUNCTION_RESERVE_0X002C = 0x2C,URB_FUNCTION_RESERVE_0X002D = 0x2D,URB_FUNCTION_RESERVE_0X002E = 0x2E,URB_FUNCTION_RESERVE_0X002F = 0x2F,URB_FUNCTION_SYNC_RESET_PIPE = 0x30,URB_FUNCTION_SYNC_CLEAR_STALL = 0x31,URB_FUNCTION_RESET_PIPE = 0x1E,};
enum MACRO_USB {USB_GETSTATUS_SELF_POWERED = 0x1,USB_GETSTATUS_REMOTE_WAKEUP_ENABLED = 0x2,USB_DEVICE_DESCRIPTOR_TYPE = 0x1,USB_CONFIGURATION_DESCRIPTOR_TYPE = 0x2,USB_STRING_DESCRIPTOR_TYPE = 0x3,USB_INTERFACE_DESCRIPTOR_TYPE = 0x4,USB_ENDPOINT_DESCRIPTOR_TYPE = 0x5,USB_RESERVED_DESCRIPTOR_TYPE = 0x6,USB_CONFIG_POWER_DESCRIPTOR_TYPE = 0x7,USB_INTERFACE_POWER_DESCRIPTOR_TYPE = 0x8,USB_ENDPOINT_TYPE_MASK = 0x3,USB_ENDPOINT_TYPE_CONTROL = 0x0,USB_ENDPOINT_TYPE_ISOCHRONOUS = 0x1,USB_ENDPOINT_TYPE_BULK = 0x2,USB_ENDPOINT_TYPE_INTERRUPT = 0x3,USB_CONFIG_POWERED_MASK = 0xC0,USB_CONFIG_BUS_POWERED = 0x80,USB_CONFIG_SELF_POWERED = 0x40,USB_CONFIG_REMOTE_WAKEUP = 0x20,USB_ENDPOINT_DIRECTION_MASK = 0x80,USB_REQUEST_GET_STATUS = 0x0,USB_REQUEST_CLEAR_FEATURE = 0x1,USB_REQUEST_SET_FEATURE = 0x3,USB_REQUEST_SET_ADDRESS = 0x5,USB_REQUEST_GET_DESCRIPTOR = 0x6,USB_REQUEST_SET_DESCRIPTOR = 0x7,USB_REQUEST_GET_CONFIGURATION = 0x8,USB_REQUEST_SET_CONFIGURATION = 0x9,USB_REQUEST_GET_INTERFACE = 0xA,USB_REQUEST_SET_INTERFACE = 0xB,USB_REQUEST_SYNC_FRAME = 0xC,USB_DEVICE_CLASS_RESERVED = 0x0,USB_DEVICE_CLASS_AUDIO = 0x1,USB_DEVICE_CLASS_COMMUNICATIONS = 0x2,USB_DEVICE_CLASS_HUMAN_INTERFACE = 0x3,USB_DEVICE_CLASS_MONITOR = 0x4,USB_DEVICE_CLASS_PHYSICAL_INTERFACE = 0x5,USB_DEVICE_CLASS_POWER = 0x6,USB_DEVICE_CLASS_PRINTER = 0x7,USB_DEVICE_CLASS_STORAGE = 0x8,USB_DEVICE_CLASS_HUB = 0x9,USB_DEVICE_CLASS_VENDOR_SPECIFIC = 0xFF,USB_FEATURE_ENDPOINT_STALL = 0x0,USB_FEATURE_REMOTE_WAKEUP = 0x1,USB_FEATURE_INTERFACE_POWER_D0 = 0x2,USB_FEATURE_INTERFACE_POWER_D1 = 0x3,USB_FEATURE_INTERFACE_POWER_D2 = 0x4,USB_FEATURE_INTERFACE_POWER_D3 = 0x5,USB_SUPPORT_D0_COMMAND = 0x1,USB_SUPPORT_D1_COMMAND = 0x2,USB_SUPPORT_D2_COMMAND = 0x4,USB_SUPPORT_D3_COMMAND = 0x8,USB_SUPPORT_D1_WAKEUP = 0x10,USB_SUPPORT_D2_WAKEUP = 0x20,USB_PORT_STATUS_CONNECT = 0x1,USB_PORT_STATUS_ENABLE = 0x2,USB_PORT_STATUS_SUSPEND = 0x4,USB_PORT_STATUS_OVER_CURRENT = 0x8,USB_PORT_STATUS_RESET = 0x10,USB_PORT_STATUS_POWER = 0x100,USB_PORT_STATUS_LOW_SPEED = 0x200,USB_PORT_STATUS_HIGH_SPEED = 0x400,USB_DEVICE_QUALIFIER_DESCRIPTOR_TYPE = 0x6,USB_OTHER_SPEED_CONFIGURATION_DESCRIPTOR_TYPE = 0x7,USB_PORTATTR_NO_CONNECTOR = 0x1,USB_PORTATTR_SHARED_USB2 = 0x2,USB_PORTATTR_MINI_CONNECTOR = 0x4,USB_PORTATTR_OEM_CONNECTOR = 0x8,USB_PORTATTR_OWNED_BY_CC = 0x1000000,USB_PORTATTR_NO_OVERCURRENT_UI = 0x2000000,USB_DEFAULT_DEVICE_ADDRESS = 0x0,USB_DEFAULT_ENDPOINT_ADDRESS = 0x0,USB_DEFAULT_MAX_PACKET = 0x40,};
enum MACRO_USBCAMD {USBCAMD_DATA_PIPE = 0x1,USBCAMD_MULTIPLEX_PIPE = 0x2,USBCAMD_SYNC_PIPE = 0x4,USBCAMD_DONT_CARE_PIPE = 0x8,USBCAMD_VIDEO_STREAM = 0x1,USBCAMD_STILL_STREAM = 0x2,USBCAMD_VIDEO_STILL_STREAM = 0x3,USBCAMD_PROCESSPACKETEX_DropFrame = 0x2,USBCAMD_PROCESSPACKETEX_NextFrameIsStill = 0x4,USBCAMD_PROCESSPACKETEX_CurrentFrameIsStill = 0x8,USBCAMD_STOP_STREAM = 0x1,USBCAMD_START_STREAM = 0x0,USBCAMD_VERSION_200 = 0x200,};
enum MACRO_USBD {USBD_TRANSFER_DIRECTION = 0x1,USBD_SHORT_TRANSFER_OK = 0x2,USBD_START_ISO_TRANSFER_ASAP = 0x4,USBD_DEFAULT_PIPE_TRANSFER = 0x8,USBD_TRANSFER_DIRECTION_OUT = 0x0,USBD_TRANSFER_DIRECTION_IN = 0x1,};
enum MACRO_USBDI {USBDI_VERSION = 0x500,};
enum MACRO_USBD_ISO {USBD_ISO_START_FRAME_RANGE = 1024,USBD_STATUS_SUCCESS = 0,USBD_STATUS_PENDING = 1073741824,USBD_STATUS_CRC = -1073741823,USBD_STATUS_BTSTUFF = -1073741822,USBD_STATUS_DATA_TOGGLE_MISMATCH = -1073741821,USBD_STATUS_STALL_PID = -1073741820,USBD_STATUS_DEV_NOT_RESPONDING = -1073741819,USBD_STATUS_PID_CHECK_FAILURE = -1073741818,USBD_STATUS_UNEXPECTED_PID = -1073741817,USBD_STATUS_DATA_OVERRUN = -1073741816,USBD_STATUS_DATA_UNDERRUN = -1073741815,USBD_STATUS_RESERVED1 = -1073741814,USBD_STATUS_RESERVED2 = -1073741813,USBD_STATUS_BUFFER_OVERRUN = -1073741812,USBD_STATUS_BUFFER_UNDERRUN = -1073741811,USBD_STATUS_NOT_ACCESSED = -1073741809,USBD_STATUS_FIFO = -1073741808,USBD_STATUS_XACT_ERROR = -1073741807,USBD_STATUS_BABBLE_DETECTED = -1073741806,USBD_STATUS_DATA_BUFFER_ERROR = -1073741805,USBD_STATUS_ENDPOINT_HALTED = -1073741776,USBD_STATUS_INVALID_URB_FUNCTION = -2147483136,USBD_STATUS_INVALID_PARAMETER = -2147482880,USBD_STATUS_ERROR_BUSY = -2147482624,USBD_STATUS_INVALID_PIPE_HANDLE = -2147482112,USBD_STATUS_NO_BANDWIDTH = -2147481856,USBD_STATUS_INTERNAL_HC_ERROR = -2147481600,USBD_STATUS_ERROR_SHORT_TRANSFER = -2147481344,USBD_STATUS_BAD_START_FRAME = -1073739264,USBD_STATUS_ISOCH_REQUEST_FAILED = -1073739008,USBD_STATUS_FRAME_CONTROL_OWNED = -1073738752,USBD_STATUS_FRAME_CONTROL_NOT_OWNED = -1073738496,USBD_STATUS_NOT_SUPPORTED = -1073738240,USBD_STATUS_INAVLID_CONFIGURATION_DESCRIPTOR = -1073737984,USBD_STATUS_INSUFFICIENT_RESOURCES = -1073737728,USBD_STATUS_SET_CONFIG_FAILED = -1073733632,USBD_STATUS_BUFFER_TOO_SMALL = -1073729536,USBD_STATUS_INTERFACE_NOT_FOUND = -1073725440,USBD_STATUS_INAVLID_PIPE_FLAGS = -1073721344,USBD_STATUS_TIMEOUT = -1073717248,USBD_STATUS_DEVICE_GONE = -1073713152,USBD_STATUS_STATUS_NOT_MAPPED = -1073709056,USBD_STATUS_CANCELED = -1073676288,USBD_STATUS_ISO_NOT_ACCESSED_BY_HW = -1073610752,USBD_STATUS_ISO_TD_ERROR = -1073545216,USBD_STATUS_ISO_NA_LATE_USBPORT = -1073479680,USBD_STATUS_ISO_NOT_ACCESSED_LATE = -1073414144,USBD_DEFAULT_MAXIMUM_TRANSFER_SIZE = -1,USBD_PF_CHANGE_MAX_PACKET = 1,USBD_PF_SHORT_PACKET_OPT = 2,USBD_PF_ENABLE_RT_THREAD_ACCESS = 4,USBD_PF_MAP_ADD_TRANSFERS = 8,USBD_PF_VALID_MASK = 15,};
enum MACRO_USBD_KEEP {USBD_KEEP_DEVICE_DATA = 0x1,USBD_MARK_DEVICE_BUSY = 0x2,USBD_DEVHACK_SLOW_ENUMERATION = 0x1,USBD_DEVHACK_DISABLE_SN = 0x2,USBD_DEVHACK_SET_DIAG_ID = 0x4,};
enum MACRO_USBD_PORT {USBD_PORT_ENABLED = 0x1,USBD_PORT_CONNECTED = 0x2,};
enum MACRO_USBPRINT {USBPRINT_IOCTL_INDEX = 0x0,};
enum MACRO_USBUSER {USBUSER_VERSION = 0x4,};
enum MACRO_USBUSER_GET {USBUSER_GET_CONTROLLER_INFO_0 = 0x1,USBUSER_GET_CONTROLLER_DRIVER_KEY = 0x2,USBUSER_PASS_THRU = 0x3,USBUSER_GET_POWER_STATE_MAP = 0x4,USBUSER_GET_BANDWIDTH_INFORMATION = 0x5,USBUSER_GET_BUS_STATISTICS_0 = 0x6,USBUSER_GET_ROOTHUB_SYMBOLIC_NAME = 0x7,USBUSER_GET_USB_DRIVER_VERSION = 0x8,USBUSER_GET_USB2_HW_VERSION = 0x9,USBUSER_OP_SEND_ONE_PACKET = 0x10000001,USBUSER_OP_RAW_RESET_PORT = 0x20000001,USBUSER_OP_OPEN_RAW_DEVICE = 0x20000002,USBUSER_OP_CLOSE_RAW_DEVICE = 0x20000003,USBUSER_OP_SEND_RAW_COMMAND = 0x20000004,USBUSER_SET_ROOTPORT_FEATURE = 0x20000005,USBUSER_CLEAR_ROOTPORT_FEATURE = 0x20000006,USBUSER_GET_ROOTPORT_STATUS = 0x20000007,USBUSER_INVALID_REQUEST = 0xFFFFFFF0,USBUSER_OP_MASK_DEVONLY_API = 0x10000000,USBUSER_OP_MASK_HCTEST_API = 0x20000000,};
enum MACRO_USB_BUSIF {USB_BUSIF_HUB_VERSION_0 = 0x0,USB_BUSIF_HUB_VERSION_1 = 0x1,USB_BUSIF_HUB_VERSION_2 = 0x2,USB_BUSIF_HUB_VERSION_3 = 0x3,USB_BUSIF_HUB_VERSION_4 = 0x4,USB_BUSIF_HUB_VERSION_5 = 0x5,};
enum MACRO_USB_GET {USB_GET_NODE_INFORMATION = 258,USB_GET_NODE_CONNECTION_INFORMATION = 259,USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION = 260,USB_GET_NODE_CONNECTION_NAME = 261,USB_DIAG_IGNORE_HUBS_ON = 262,USB_DIAG_IGNORE_HUBS_OFF = 263,USB_GET_NODE_CONNECTION_DRIVERKEY_NAME = 264,USB_GET_HUB_CAPABILITIES = 271,USB_GET_NODE_CONNECTION_ATTRIBUTES = 272,USB_HUB_CYCLE_PORT = 273,USB_GET_NODE_CONNECTION_INFORMATION_EX = 274,};
enum MACRO_USB_HCD {USB_HCD_CAPS_SUPPORTS_RT_THREADS = 0x1,USB_BUSIF_USBDI_VERSION_0 = 0x0,USB_BUSIF_USBDI_VERSION_1 = 0x1,USB_BUSIF_USBDI_VERSION_2 = 0x2,};
enum MACRO_USB_PACKETFLAG {USB_PACKETFLAG_LOW_SPEED = 0x1,USB_PACKETFLAG_FULL_SPEED = 0x2,USB_PACKETFLAG_HIGH_SPEED = 0x4,USB_PACKETFLAG_ASYNC_IN = 0x8,USB_PACKETFLAG_ASYNC_OUT = 0x10,USB_PACKETFLAG_ISO_IN = 0x20,USB_PACKETFLAG_ISO_OUT = 0x40,USB_PACKETFLAG_SETUP = 0x80,USB_PACKETFLAG_TOGGLE0 = 0x100,USB_PACKETFLAG_TOGGLE1 = 0x200,USB_HC_FEATURE_FLAG_PORT_POWER_SWITCHING = 0x1,USB_HC_FEATURE_FLAG_SEL_SUSPEND = 0x2,USB_HC_FEATURE_LEGACY_BIOS = 0x4,};
enum MACRO_USB_SUBMIT {USB_SUBMIT_URB = 0,USB_RESET_PORT = 1,USB_GET_ROOTHUB_PDO = 3,USB_GET_PORT_STATUS = 4,USB_ENABLE_PORT = 5,USB_GET_HUB_COUNT = 6,USB_CYCLE_PORT = 7,USB_GET_HUB_NAME = 8,USB_IDLE_NOTIFICATION = 9,USB_GET_BUS_INFO = 264,USB_GET_CONTROLLER_NAME = 265,USB_GET_BUSGUID_INFO = 266,USB_GET_PARENT_HUB_INFO = 267,USB_GET_DEVICE_HANDLE = 268,};
enum MACRO_USE {USE_LOCAL_NODE = 1,};
enum MACRO_USER {USER_MODE_HEALTH_MONITOR = 0x9E,};
enum MACRO_VALID {VALID_TRANSFER_FLAGS_MASK = 15,};
enum MACRO_VER {VER_SERVER_NT = 0x80000000,VER_WORKSTATION_NT = 0x40000000,VER_SUITE_SMALLBUSINESS = 0x1,VER_SUITE_ENTERPRISE = 0x2,VER_SUITE_BACKOFFICE = 0x4,VER_SUITE_COMMUNICATIONS = 0x8,VER_SUITE_TERMINAL = 0x10,VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x20,VER_SUITE_EMBEDDEDNT = 0x40,VER_SUITE_DATACENTER = 0x80,VER_SUITE_SINGLEUSERTS = 0x100,VER_SUITE_PERSONAL = 0x200,VER_SUITE_BLADE = 0x400,VER_SUITE_EMBEDDED_RESTRICTED = 0x800,VER_SUITE_SECURITY_APPLIANCE = 0x1000,};
enum MACRO_VER_PRODUCTBUILD {VER_PRODUCTBUILD = 3790,VER_PRODUCTBUILD_QFE = 0,VER_PRODUCTMAJORVERSION = 5,VER_PRODUCTMINORVERSION = 2,VER_PRODUCTVERSION_W = 1282,VER_PRODUCTVERSION_DW = 84020942,VER_DEBUG = 0,VER_PRERELEASE = 0,};
enum MACRO_VIDEO {VIDEO_DRIVER_INIT_FAILURE = 0xB4,};
enum MACRO_WAVE {WAVE_FORMAT_UNKNOWN = 0x0,WAVE_FORMAT_ADPCM = 0x2,WAVE_FORMAT_IEEE_FLOAT = 0x3,WAVE_FORMAT_VSELP = 0x4,WAVE_FORMAT_IBM_CVSD = 0x5,WAVE_FORMAT_ALAW = 0x6,WAVE_FORMAT_MULAW = 0x7,WAVE_FORMAT_DTS = 0x8,WAVE_FORMAT_DRM = 0x9,WAVE_FORMAT_OKI_ADPCM = 0x10,WAVE_FORMAT_DVI_ADPCM = 0x11,WAVE_FORMAT_IMA_ADPCM = 0x11,WAVE_FORMAT_MEDIASPACE_ADPCM = 0x12,WAVE_FORMAT_SIERRA_ADPCM = 0x13,WAVE_FORMAT_G723_ADPCM = 0x14,WAVE_FORMAT_DIGISTD = 0x15,WAVE_FORMAT_DIGIFIX = 0x16,WAVE_FORMAT_DIALOGIC_OKI_ADPCM = 0x17,WAVE_FORMAT_MEDIAVISION_ADPCM = 0x18,WAVE_FORMAT_CU_CODEC = 0x19,WAVE_FORMAT_YAMAHA_ADPCM = 0x20,WAVE_FORMAT_SONARC = 0x21,WAVE_FORMAT_DSPGROUP_TRUESPEECH = 0x22,WAVE_FORMAT_ECHOSC1 = 0x23,WAVE_FORMAT_AUDIOFILE_AF36 = 0x24,WAVE_FORMAT_APTX = 0x25,WAVE_FORMAT_AUDIOFILE_AF10 = 0x26,WAVE_FORMAT_PROSODY_1612 = 0x27,WAVE_FORMAT_LRC = 0x28,WAVE_FORMAT_DOLBY_AC2 = 0x30,WAVE_FORMAT_GSM610 = 0x31,WAVE_FORMAT_MSNAUDIO = 0x32,WAVE_FORMAT_ANTEX_ADPCME = 0x33,WAVE_FORMAT_CONTROL_RES_VQLPC = 0x34,WAVE_FORMAT_DIGIREAL = 0x35,WAVE_FORMAT_DIGIADPCM = 0x36,WAVE_FORMAT_CONTROL_RES_CR10 = 0x37,WAVE_FORMAT_NMS_VBXADPCM = 0x38,WAVE_FORMAT_CS_IMAADPCM = 0x39,WAVE_FORMAT_ECHOSC3 = 0x3A,WAVE_FORMAT_ROCKWELL_ADPCM = 0x3B,WAVE_FORMAT_ROCKWELL_DIGITALK = 0x3C,WAVE_FORMAT_XEBEC = 0x3D,WAVE_FORMAT_G721_ADPCM = 0x40,WAVE_FORMAT_G728_CELP = 0x41,WAVE_FORMAT_MSG723 = 0x42,WAVE_FORMAT_MPEG = 0x50,WAVE_FORMAT_RT24 = 0x52,WAVE_FORMAT_PAC = 0x53,WAVE_FORMAT_MPEGLAYER3 = 0x55,WAVE_FORMAT_LUCENT_G723 = 0x59,WAVE_FORMAT_CIRRUS = 0x60,WAVE_FORMAT_ESPCM = 0x61,WAVE_FORMAT_VOXWARE = 0x62,WAVE_FORMAT_CANOPUS_ATRAC = 0x63,WAVE_FORMAT_G726_ADPCM = 0x64,WAVE_FORMAT_G722_ADPCM = 0x65,WAVE_FORMAT_DSAT_DISPLAY = 0x67,WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 0x69,WAVE_FORMAT_VOXWARE_AC8 = 0x70,WAVE_FORMAT_VOXWARE_AC10 = 0x71,WAVE_FORMAT_VOXWARE_AC16 = 0x72,WAVE_FORMAT_VOXWARE_AC20 = 0x73,WAVE_FORMAT_VOXWARE_RT24 = 0x74,WAVE_FORMAT_VOXWARE_RT29 = 0x75,WAVE_FORMAT_VOXWARE_RT29HW = 0x76,WAVE_FORMAT_VOXWARE_VR12 = 0x77,WAVE_FORMAT_VOXWARE_VR18 = 0x78,WAVE_FORMAT_VOXWARE_TQ40 = 0x79,WAVE_FORMAT_SOFTSOUND = 0x80,WAVE_FORMAT_VOXWARE_TQ60 = 0x81,WAVE_FORMAT_MSRT24 = 0x82,WAVE_FORMAT_G729A = 0x83,WAVE_FORMAT_MVI_MVI2 = 0x84,WAVE_FORMAT_DF_G726 = 0x85,WAVE_FORMAT_DF_GSM610 = 0x86,WAVE_FORMAT_ISIAUDIO = 0x88,WAVE_FORMAT_ONLIVE = 0x89,WAVE_FORMAT_SBC24 = 0x91,WAVE_FORMAT_DOLBY_AC3_SPDIF = 0x92,WAVE_FORMAT_MEDIASONIC_G723 = 0x93,WAVE_FORMAT_PROSODY_8KBPS = 0x94,WAVE_FORMAT_ZYXEL_ADPCM = 0x97,WAVE_FORMAT_PHILIPS_LPCBB = 0x98,WAVE_FORMAT_PACKED = 0x99,WAVE_FORMAT_MALDEN_PHONYTALK = 0xA0,WAVE_FORMAT_RHETOREX_ADPCM = 0x100,WAVE_FORMAT_IRAT = 0x101,WAVE_FORMAT_VIVO_G723 = 0x111,WAVE_FORMAT_VIVO_SIREN = 0x112,WAVE_FORMAT_DIGITAL_G723 = 0x123,WAVE_FORMAT_SANYO_LD_ADPCM = 0x125,WAVE_FORMAT_SIPROLAB_ACEPLNET = 0x130,WAVE_FORMAT_SIPROLAB_ACELP4800 = 0x131,WAVE_FORMAT_SIPROLAB_ACELP8V3 = 0x132,WAVE_FORMAT_SIPROLAB_G729 = 0x133,WAVE_FORMAT_SIPROLAB_G729A = 0x134,WAVE_FORMAT_SIPROLAB_KELVIN = 0x135,WAVE_FORMAT_G726ADPCM = 0x140,WAVE_FORMAT_QUALCOMM_PUREVOICE = 0x150,WAVE_FORMAT_QUALCOMM_HALFRATE = 0x151,WAVE_FORMAT_TUBGSM = 0x155,WAVE_FORMAT_MSAUDIO1 = 0x160,WAVE_FORMAT_UNISYS_NAP_ADPCM = 0x170,WAVE_FORMAT_UNISYS_NAP_ULAW = 0x171,WAVE_FORMAT_UNISYS_NAP_ALAW = 0x172,WAVE_FORMAT_UNISYS_NAP_16K = 0x173,WAVE_FORMAT_CREATIVE_ADPCM = 0x200,WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 0x202,WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 0x203,WAVE_FORMAT_UHER_ADPCM = 0x210,WAVE_FORMAT_QUARTERDECK = 0x220,WAVE_FORMAT_ILINK_VC = 0x230,WAVE_FORMAT_RAW_SPORT = 0x240,WAVE_FORMAT_ESST_AC3 = 0x241,WAVE_FORMAT_IPI_HSX = 0x250,WAVE_FORMAT_IPI_RPELP = 0x251,WAVE_FORMAT_CS2 = 0x260,WAVE_FORMAT_SONY_SCX = 0x270,WAVE_FORMAT_FM_TOWNS_SND = 0x300,WAVE_FORMAT_BTV_DIGITAL = 0x400,WAVE_FORMAT_QDESIGN_MUSIC = 0x450,WAVE_FORMAT_VME_VMPCM = 0x680,WAVE_FORMAT_TPC = 0x681,WAVE_FORMAT_OLIGSM = 0x1000,WAVE_FORMAT_OLIADPCM = 0x1001,WAVE_FORMAT_OLICELP = 0x1002,WAVE_FORMAT_OLISBC = 0x1003,WAVE_FORMAT_OLIOPR = 0x1004,WAVE_FORMAT_LH_CODEC = 0x1100,WAVE_FORMAT_NORRIS = 0x1400,WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 0x1500,WAVE_FORMAT_DVM = 0x2000,WAVE_FORMAT_EXTENSIBLE = 0xFFFE,WAVE_FORMAT_DEVELOPMENT = 0xFFFF,WAVE_FORMAT_PCM = 0x1,};
enum MACRO_WAVE_FILTER {WAVE_FILTER_UNKNOWN = 0x0,WAVE_FILTER_DEVELOPMENT = 0xFFFF,WAVE_FILTER_VOLUME = 0x1,WAVE_FILTER_ECHO = 0x2,};
enum MACRO_WDM {WDM_MAJORVERSION = 0x1,WDM_MINORVERSION = 0x30,};
enum MACRO_WEOF {WEOF = 0xFFFF,};
enum MACRO_WIN32K {WIN32K_INIT_OR_RIT_FAILURE = 0x91,};
enum MACRO_WINDOWS {WINDOWS_NT_BANNER = 0x4000007E,};
enum MACRO_WINDOWS_NT {WINDOWS_NT_CSD_STRING = 0x40000087,WINDOWS_NT_INFO_STRING = 0x40000088,WINDOWS_NT_MP_STRING = 0x40000089,};
enum MACRO_WINDOWS_NT_INFO {WINDOWS_NT_INFO_STRING_PLURAL = 0x4000009D,WINDOWS_NT_RC_STRING = 0x4000009E,};
enum MACRO_WINLOGON : __int64 {WINLOGON_FATAL_ERROR = 0xC000021A,};
enum MACRO_WINVER {WINVER = 0x500,};
enum MACRO_WMI {WMI_USB_DRIVER_INFORMATION = 0,WMI_USB_DRIVER_NOTIFICATION = 1,WMI_USB_POWER_DEVICE_ENABLE = 2,};
enum MACRO_WMIREG {WMIREG_ACTION_REGISTER = 1,WMIREG_ACTION_DEREGISTER = 2,WMIREG_ACTION_REREGISTER = 3,WMIREG_ACTION_UPDATE_GUIDS = 4,WMIREG_ACTION_BLOCK_IRPS = 5,};
enum MACRO_WMIREGISTER {WMIREGISTER = 0,WMIUPDATE = 1,};
enum MACRO_WMI_TAPE {WMI_TAPE_DRIVE_PARAMETERS_MaximumBlockSize_ID = 1,WMI_TAPE_DRIVE_PARAMETERS_MinimumBlockSize_ID = 2,WMI_TAPE_DRIVE_PARAMETERS_DefaultBlockSize_ID = 3,WMI_TAPE_DRIVE_PARAMETERS_MaximumPartitionCount_ID = 4,WMI_TAPE_DRIVE_PARAMETERS_CompressionCapable_ID = 5,WMI_TAPE_DRIVE_PARAMETERS_CompressionEnabled_ID = 6,WMI_TAPE_DRIVE_PARAMETERS_ReportSetmarks_ID = 7,WMI_TAPE_DRIVE_PARAMETERS_HardwareErrorCorrection_ID = 8,WMI_TAPE_MEDIA_PARAMETERS_MaximumCapacity_ID = 1,WMI_TAPE_MEDIA_PARAMETERS_AvailableCapacity_ID = 2,WMI_TAPE_MEDIA_PARAMETERS_BlockSize_ID = 3,WMI_TAPE_MEDIA_PARAMETERS_PartitionCount_ID = 4,WMI_TAPE_MEDIA_PARAMETERS_MediaWriteProtected_ID = 5,WMI_TAPE_SYMBOLIC_NAME_TapeSymbolicName_ID = 1,WMI_TAPE_PROBLEM_WARNING_DriveProblemType_ID = 1,WMI_TAPE_PROBLEM_WARNING_TapeData_ID = 2,WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectedWithoutDelay_ID = 1,WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectedWithDelay_ID = 2,WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalErrors_ID = 3,WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalCorrectedErrors_ID = 4,WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalUncorrectedErrors_ID = 5,WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectionAlgorithmProcessed_ID = 6,WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectedWithoutDelay_ID = 7,WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectedWithDelay_ID = 8,WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalErrors_ID = 9,WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalCorrectedErrors_ID = 10,WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalUncorrectedErrors_ID = 11,WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectionAlgorithmProcessed_ID = 12,WMI_TAPE_PROBLEM_IO_ERROR_NonMediumErrors_ID = 13,WMI_TAPE_PROBLEM_DEVICE_ERROR_ReadWarning_ID = 1,WMI_TAPE_PROBLEM_DEVICE_ERROR_WriteWarning_ID = 2,WMI_TAPE_PROBLEM_DEVICE_ERROR_HardError_ID = 3,WMI_TAPE_PROBLEM_DEVICE_ERROR_ReadFailure_ID = 4,WMI_TAPE_PROBLEM_DEVICE_ERROR_WriteFailure_ID = 5,WMI_TAPE_PROBLEM_DEVICE_ERROR_UnsupportedFormat_ID = 6,WMI_TAPE_PROBLEM_DEVICE_ERROR_TapeSnapped_ID = 7,WMI_TAPE_PROBLEM_DEVICE_ERROR_DriveRequiresCleaning_ID = 8,WMI_TAPE_PROBLEM_DEVICE_ERROR_TimetoCleanDrive_ID = 9,WMI_TAPE_PROBLEM_DEVICE_ERROR_DriveHardwareError_ID = 10,WMI_TAPE_PROBLEM_DEVICE_ERROR_ScsiInterfaceError_ID = 11,WMI_TAPE_PROBLEM_DEVICE_ERROR_MediaLife_ID = 12,WMI_CHANGER_PARAMETERS_NumberOfSlots_ID = 1,WMI_CHANGER_PARAMETERS_NumberOfDrives_ID = 2,WMI_CHANGER_PARAMETERS_NumberOfIEPorts_ID = 3,WMI_CHANGER_PARAMETERS_NumberOfTransports_ID = 4,WMI_CHANGER_PARAMETERS_NumberOfDoors_ID = 5,WMI_CHANGER_PARAMETERS_NumberOfCleanerSlots_ID = 6,WMI_CHANGER_PARAMETERS_MagazineSize_ID = 7,WMI_CHANGER_PROBLEM_WARNING_ChangerProblemType_ID = 1,WMI_CHANGER_PROBLEM_WARNING_ChangerData_ID = 2,WMI_CHANGER_PROBLEM_DEVICE_ERROR_ChangerProblemType_ID = 1,};
enum MACRO_WORKER {WORKER_THREAD_RETURNED_AT_BAD_IRQL = 0xE1,};
enum MACRO_WORKER_INVALID {WORKER_INVALID = 0xE4,};
enum MACRO_WRITE {WRITE_DAC = 0x40000,WRITE_OWNER = 0x80000,};
enum MACRO_WRITE_LOG {WRITE_LOG_SECTORS_IN_LogAddress_ID = 1,WRITE_LOG_SECTORS_IN_SectorCount_ID = 2,WRITE_LOG_SECTORS_IN_Length_ID = 3,WRITE_LOG_SECTORS_IN_LogSectors_ID = 4,WRITE_LOG_SECTORS_OUT_Success_ID = 5,};
enum MACRO_WST {WST_TVTUNER_CHANGE_BEGIN_TUNE = 0x1000,WST_TVTUNER_CHANGE_END_TUNE = 0x2000,};
enum MACRO_WST_BYTES {WST_BYTES_PER_LINE = 42,};
enum MACRO_WriteLogSectors {WriteLogSectors = 7,};
enum MACRO__100NS {_100NS_UNITS_PER_SECOND = 10000000,};
enum MACRO__ALPHA {_ALPHA = 0x103,};
enum MACRO__BDATYPES {_BDATYPES_ = 1,};
enum MACRO__INC {_INC_MMREG = 158,};
enum MACRO__IOB {_IOB_ENTRIES = 20,};
enum MACRO__IOFBF {_IOFBF = 0x0,_IOLBF = 0x40,};
enum MACRO__IONBF {_IONBF = 0x4,_IOMYBUF = 0x8,_IOEOF = 0x10,_IOERR = 0x20,_IOSTRG = 0x40,_IORW = 0x80,};
enum MACRO__IOREAD {_IOREAD = 0x1,_IOWRT = 0x2,};
enum MACRO__NLSCMPERROR {_NLSCMPERROR = 2147483647,};
enum MACRO__NSTREAM {_NSTREAM_ = 512,};
enum MACRO__SYS {_SYS_OPEN = 20,};
enum MACRO__UPPER {_UPPER = 0x1,_LOWER = 0x2,_DIGIT = 0x4,_SPACE = 0x8,_PUNCT = 0x10,_CONTROL = 0x20,_BLANK = 0x40,_HEX = 0x80,_LEADBYTE = 0x8000,};
typedef struct _MCA_EXCEPTION MCA_EXCEPTION;
typedef enum $DF2051BCD5E4FC2C953B94B617C6FC67 MCA_EXCEPTION_TYPE;
typedef union _MCI_ADDR MCI_ADDR;
typedef union _MCI_STATS MCI_STATS;
typedef struct _MDL MDL;
typedef struct mediaspace_adpcmwaveformat_tag MEDIASPACEADPCMWAVEFORMAT;
typedef enum $D62050DCDBDF6C35CAC61CEAA5D0241B MEDIA_SAMPLE_CONTENT;
typedef enum _MEMORY_CACHING_TYPE MEMORY_CACHING_TYPE;
typedef enum _MEMORY_CACHING_TYPE_ORIG MEMORY_CACHING_TYPE_ORIG;
typedef enum _MM_PAGE_PRIORITY MM_PAGE_PRIORITY;
typedef enum _MM_SYSTEM_SIZE MM_SYSTEMSIZE;
typedef enum _MODE MODE;
typedef struct mpeg1waveformat_tag MPEG1WAVEFORMAT;
enum MPEG2StreamType {BDA_UNITIALIZED_MPEG2STREAMTYPE = 0xFFFFFFFF,Reserved1 = 0x0,ISO_IEC_11172_2_VIDEO = 0x1,ISO_IEC_13818_2_VIDEO = 0x2,ISO_IEC_11172_3_AUDIO = 0x3,ISO_IEC_13818_3_AUDIO = 0x4,ISO_IEC_13818_1_PRIVATE_SECTION = 0x5,ISO_IEC_13818_1_PES = 0x6,ISO_IEC_13522_MHEG = 0x7,ANNEX_A_DSM_CC = 0x8,ITU_T_REC_H_222_1 = 0x9,ISO_IEC_13818_6_TYPE_A = 0xA,ISO_IEC_13818_6_TYPE_B = 0xB,ISO_IEC_13818_6_TYPE_C = 0xC,ISO_IEC_13818_6_TYPE_D = 0xD,ISO_IEC_13818_1_AUXILIARY = 0xE,ISO_IEC_13818_1_RESERVED = 0xF,USER_PRIVATE = 0x10,};
typedef struct _MPEG2_TRANSPORT_STRIDE MPEG2_TRANSPORT_STRIDE;
typedef struct mpeglayer3waveformat_tag MPEGLAYER3WAVEFORMAT;
typedef struct _MSAcpiInfo MSAcpiInfo;
typedef struct _MSAcpi_ThermalZoneTemperature MSAcpi_ThermalZoneTemperature;
typedef struct _MSDiskDriver_Performance MSDiskDriver_Performance;
typedef struct _MSIde_PortDeviceInfo MSIde_PortDeviceInfo;
typedef struct _MSKeyboard_ClassInformation MSKeyboard_ClassInformation;
typedef struct _MSMCAEvent_CPUError MSMCAEvent_CPUError;
typedef struct _MSMCAEvent_Header MSMCAEvent_Header;
typedef struct _MSMCAEvent_InvalidError MSMCAEvent_InvalidError;
typedef struct _MSMCAEvent_MemoryError MSMCAEvent_MemoryError;
typedef struct _MSMCAEvent_MemoryPageRemoved MSMCAEvent_MemoryPageRemoved;
typedef struct _MSMCAEvent_PCIBusError MSMCAEvent_PCIBusError;
typedef struct _MSMCAEvent_PCIComponentError MSMCAEvent_PCIComponentError;
typedef struct _MSMCAEvent_PlatformSpecificError MSMCAEvent_PlatformSpecificError;
typedef struct _MSMCAEvent_SMBIOSError MSMCAEvent_SMBIOSError;
typedef struct _MSMCAEvent_SystemEventError MSMCAEvent_SystemEventError;
typedef struct _MSMCAInfo_Entry MSMCAInfo_Entry;
typedef struct _MSMCAInfo_RawCMCEvent MSMCAInfo_RawCMCEvent;
typedef struct _MSMCAInfo_RawCorrectedPlatformEvent MSMCAInfo_RawCorrectedPlatformEvent;
typedef struct _MSMCAInfo_RawMCAData MSMCAInfo_RawMCAData;
typedef struct _MSMCAInfo_RawMCAEvent MSMCAInfo_RawMCAEvent;
typedef struct _MSMouse_ClassInformation MSMouse_ClassInformation;
typedef struct _MSNdis_80211_AddWEP MSNdis_80211_AddWEP;
typedef struct _MSNdis_80211_AuthenticationMode MSNdis_80211_AuthenticationMode;
typedef struct _MSNdis_80211_BSSIList MSNdis_80211_BSSIList;
typedef struct _MSNdis_80211_BaseServiceSetIdentifier MSNdis_80211_BaseServiceSetIdentifier;
typedef struct _MSNdis_80211_BssIdListScan MSNdis_80211_BssIdListScan;
typedef struct _MSNdis_80211_Configuration MSNdis_80211_Configuration;
typedef struct _MSNdis_80211_ConfigurationFH MSNdis_80211_ConfigurationFH;
typedef struct _MSNdis_80211_ConfigurationInfo MSNdis_80211_ConfigurationInfo;
typedef struct _MSNdis_80211_DataRates MSNdis_80211_DataRates;
typedef struct _MSNdis_80211_DesiredDataRates MSNdis_80211_DesiredDataRates;
typedef struct _MSNdis_80211_Disassociate MSNdis_80211_Disassociate;
typedef struct _MSNdis_80211_FragmentationThreshold MSNdis_80211_FragmentationThreshold;
typedef struct _MSNdis_80211_InfrastructureMode MSNdis_80211_InfrastructureMode;
typedef struct _MSNdis_80211_NetworkInfrastructure MSNdis_80211_NetworkInfrastructure;
typedef struct _MSNdis_80211_NetworkType MSNdis_80211_NetworkType;
typedef struct _MSNdis_80211_NetworkTypeInUse MSNdis_80211_NetworkTypeInUse;
typedef struct _MSNdis_80211_NetworkTypesSupported MSNdis_80211_NetworkTypesSupported;
typedef struct _MSNdis_80211_NumberOfAntennas MSNdis_80211_NumberOfAntennas;
typedef struct _MSNdis_80211_PowerMode MSNdis_80211_PowerMode;
typedef struct _MSNdis_80211_PrivacyFilter MSNdis_80211_PrivacyFilter;
typedef struct _MSNdis_80211_RTSThreshold MSNdis_80211_RTSThreshold;
typedef struct _MSNdis_80211_ReceiveAntennaSelected MSNdis_80211_ReceiveAntennaSelected;
typedef struct _MSNdis_80211_ReceivedSignalStrength MSNdis_80211_ReceivedSignalStrength;
typedef struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger MSNdis_80211_ReceivedSignalStrengthEventTrigger;
typedef struct _MSNdis_80211_ReloadDefaults MSNdis_80211_ReloadDefaults;
typedef struct _MSNdis_80211_RemoveWEP MSNdis_80211_RemoveWEP;
typedef struct _MSNdis_80211_ServiceSetIdentifier MSNdis_80211_ServiceSetIdentifier;
typedef struct _MSNdis_80211_Statistics MSNdis_80211_Statistics;
typedef struct _MSNdis_80211_TransmitAntennaSelected MSNdis_80211_TransmitAntennaSelected;
typedef struct _MSNdis_80211_TransmitPowerLevel MSNdis_80211_TransmitPowerLevel;
typedef struct _MSNdis_80211_WEPStatus MSNdis_80211_WEPStatus;
typedef struct _MSNdis_80211_WLanBssId MSNdis_80211_WLanBssId;
typedef struct _MSNdis_AtmHardwareCurrentAddress MSNdis_AtmHardwareCurrentAddress;
typedef struct _MSNdis_AtmMaxAal0PacketSize MSNdis_AtmMaxAal0PacketSize;
typedef struct _MSNdis_AtmMaxAal1PacketSize MSNdis_AtmMaxAal1PacketSize;
typedef struct _MSNdis_AtmMaxAal34PacketSize MSNdis_AtmMaxAal34PacketSize;
typedef struct _MSNdis_AtmMaxAal5PacketSize MSNdis_AtmMaxAal5PacketSize;
typedef struct _MSNdis_AtmMaxActiveVciBits MSNdis_AtmMaxActiveVciBits;
typedef struct _MSNdis_AtmMaxActiveVcs MSNdis_AtmMaxActiveVcs;
typedef struct _MSNdis_AtmMaxActiveVpiBits MSNdis_AtmMaxActiveVpiBits;
typedef struct _MSNdis_AtmReceiveCellsDropped MSNdis_AtmReceiveCellsDropped;
typedef struct _MSNdis_AtmReceiveCellsOk MSNdis_AtmReceiveCellsOk;
typedef struct _MSNdis_AtmSupportedAalTypes MSNdis_AtmSupportedAalTypes;
typedef struct _MSNdis_AtmSupportedServiceCategory MSNdis_AtmSupportedServiceCategory;
typedef struct _MSNdis_AtmSupportedVcRates MSNdis_AtmSupportedVcRates;
typedef struct _MSNdis_AtmTransmitCellsOk MSNdis_AtmTransmitCellsOk;
typedef struct _MSNdis_CoDriverVersion MSNdis_CoDriverVersion;
typedef struct _MSNdis_CoHardwareStatus MSNdis_CoHardwareStatus;
typedef struct _MSNdis_CoLinkSpeed MSNdis_CoLinkSpeed;
typedef struct _MSNdis_CoMacOptions MSNdis_CoMacOptions;
typedef struct _MSNdis_CoMediaConnectStatus MSNdis_CoMediaConnectStatus;
typedef struct _MSNdis_CoMediaInUse MSNdis_CoMediaInUse;
typedef struct _MSNdis_CoMediaSupported MSNdis_CoMediaSupported;
typedef struct _MSNdis_CoMinimumLinkSpeed MSNdis_CoMinimumLinkSpeed;
typedef struct _MSNdis_CoReceivePduErrors MSNdis_CoReceivePduErrors;
typedef struct _MSNdis_CoReceivePdusNoBuffer MSNdis_CoReceivePdusNoBuffer;
typedef struct _MSNdis_CoReceivePdusOk MSNdis_CoReceivePdusOk;
typedef struct _MSNdis_CoTransmitPduErrors MSNdis_CoTransmitPduErrors;
typedef struct _MSNdis_CoTransmitPdusOk MSNdis_CoTransmitPdusOk;
typedef struct _MSNdis_CoVendorDescription MSNdis_CoVendorDescription;
typedef struct _MSNdis_CoVendorDriverVersion MSNdis_CoVendorDriverVersion;
typedef struct _MSNdis_CoVendorId MSNdis_CoVendorId;
typedef struct _MSNdis_CurrentLookahead MSNdis_CurrentLookahead;
typedef struct _MSNdis_CurrentPacketFilter MSNdis_CurrentPacketFilter;
typedef struct _MSNdis_DeviceWakeOnMagicPacketOnly MSNdis_DeviceWakeOnMagicPacketOnly;
typedef struct _MSNdis_DriverVersion MSNdis_DriverVersion;
typedef struct _MSNdis_EnumerateAdapter MSNdis_EnumerateAdapter;
typedef struct _MSNdis_EthernetCurrentAddress MSNdis_EthernetCurrentAddress;
typedef struct _MSNdis_EthernetMacOptions MSNdis_EthernetMacOptions;
typedef struct _MSNdis_EthernetMaximumMulticastListSize MSNdis_EthernetMaximumMulticastListSize;
typedef struct _MSNdis_EthernetMoreTransmitCollisions MSNdis_EthernetMoreTransmitCollisions;
typedef struct _MSNdis_EthernetMulticastList MSNdis_EthernetMulticastList;
typedef struct _MSNdis_EthernetOneTransmitCollision MSNdis_EthernetOneTransmitCollision;
typedef struct _MSNdis_EthernetPermanentAddress MSNdis_EthernetPermanentAddress;
typedef struct _MSNdis_EthernetReceiveErrorAlignment MSNdis_EthernetReceiveErrorAlignment;
typedef struct _MSNdis_FddiAttachmentType MSNdis_FddiAttachmentType;
typedef struct _MSNdis_FddiDownstreamNodeLong MSNdis_FddiDownstreamNodeLong;
typedef struct _MSNdis_FddiFrameErrors MSNdis_FddiFrameErrors;
typedef struct _MSNdis_FddiFramesLost MSNdis_FddiFramesLost;
typedef struct _MSNdis_FddiLConnectionState MSNdis_FddiLConnectionState;
typedef struct _MSNdis_FddiLctFailures MSNdis_FddiLctFailures;
typedef struct _MSNdis_FddiLemRejects MSNdis_FddiLemRejects;
typedef struct _MSNdis_FddiLongCurrentAddress MSNdis_FddiLongCurrentAddress;
typedef struct _MSNdis_FddiLongMaximumListSize MSNdis_FddiLongMaximumListSize;
typedef struct _MSNdis_FddiLongMulticastList MSNdis_FddiLongMulticastList;
typedef struct _MSNdis_FddiLongPermanentAddress MSNdis_FddiLongPermanentAddress;
typedef struct _MSNdis_FddiRingManagmentState MSNdis_FddiRingManagmentState;
typedef struct _MSNdis_FddiShortCurrentAddress MSNdis_FddiShortCurrentAddress;
typedef struct _MSNdis_FddiShortMaximumListSize MSNdis_FddiShortMaximumListSize;
typedef struct _MSNdis_FddiShortMulticastList MSNdis_FddiShortMulticastList;
typedef struct _MSNdis_FddiShortPermanentAddress MSNdis_FddiShortPermanentAddress;
typedef struct _MSNdis_FddiUpstreamNodeLong MSNdis_FddiUpstreamNodeLong;
typedef struct _MSNdis_HardwareStatus MSNdis_HardwareStatus;
typedef struct _MSNdis_LinkSpeed MSNdis_LinkSpeed;
typedef struct _MSNdis_MacOptions MSNdis_MacOptions;
typedef struct _MSNdis_MaximumFrameSize MSNdis_MaximumFrameSize;
typedef struct _MSNdis_MaximumLookahead MSNdis_MaximumLookahead;
typedef struct _MSNdis_MaximumSendPackets MSNdis_MaximumSendPackets;
typedef struct _MSNdis_MaximumTotalSize MSNdis_MaximumTotalSize;
typedef struct _MSNdis_MediaConnectStatus MSNdis_MediaConnectStatus;
typedef struct _MSNdis_MediaInUse MSNdis_MediaInUse;
typedef struct _MSNdis_MediaSupported MSNdis_MediaSupported;
typedef struct _MSNdis_NetworkAddress MSNdis_NetworkAddress;
typedef struct _MSNdis_NetworkLinkSpeed MSNdis_NetworkLinkSpeed;
typedef struct _MSNdis_NetworkShortAddress MSNdis_NetworkShortAddress;
typedef struct _MSNdis_NotifyAdapterArrival MSNdis_NotifyAdapterArrival;
typedef struct _MSNdis_NotifyAdapterRemoval MSNdis_NotifyAdapterRemoval;
typedef struct _MSNdis_PhysicalMediumType MSNdis_PhysicalMediumType;
typedef struct _MSNdis_ReceiveBlockSize MSNdis_ReceiveBlockSize;
typedef struct _MSNdis_ReceiveBufferSpace MSNdis_ReceiveBufferSpace;
typedef struct _MSNdis_ReceiveError MSNdis_ReceiveError;
typedef struct _MSNdis_ReceiveNoBuffer MSNdis_ReceiveNoBuffer;
typedef struct _MSNdis_ReceivesOk MSNdis_ReceivesOk;
typedef struct _MSNdis_StatusDevicePowerOff MSNdis_StatusDevicePowerOff;
typedef struct _MSNdis_StatusDevicePowerOn MSNdis_StatusDevicePowerOn;
typedef struct _MSNdis_StatusLinkSpeedChange MSNdis_StatusLinkSpeedChange;
typedef struct _MSNdis_StatusMediaSpecificIndication MSNdis_StatusMediaSpecificIndication;
typedef struct _MSNdis_StatusProtocolBind MSNdis_StatusProtocolBind;
typedef struct _MSNdis_StatusProtocolUnbind MSNdis_StatusProtocolUnbind;
typedef struct _MSNdis_TokenRingCurrentAddress MSNdis_TokenRingCurrentAddress;
typedef struct _MSNdis_TokenRingCurrentFunctional MSNdis_TokenRingCurrentFunctional;
typedef struct _MSNdis_TokenRingCurrentGroup MSNdis_TokenRingCurrentGroup;
typedef struct _MSNdis_TokenRingCurrentRingState MSNdis_TokenRingCurrentRingState;
typedef struct _MSNdis_TokenRingCurrentRingStatus MSNdis_TokenRingCurrentRingStatus;
typedef struct _MSNdis_TokenRingLastOpenStatus MSNdis_TokenRingLastOpenStatus;
typedef struct _MSNdis_TokenRingLineErrors MSNdis_TokenRingLineErrors;
typedef struct _MSNdis_TokenRingLostFrames MSNdis_TokenRingLostFrames;
typedef struct _MSNdis_TokenRingPermanentAddress MSNdis_TokenRingPermanentAddress;
typedef struct _MSNdis_TransmitBlockSize MSNdis_TransmitBlockSize;
typedef struct _MSNdis_TransmitBufferSpace MSNdis_TransmitBufferSpace;
typedef struct _MSNdis_TransmitsError MSNdis_TransmitsError;
typedef struct _MSNdis_TransmitsOk MSNdis_TransmitsOk;
typedef struct _MSNdis_VendorDescription MSNdis_VendorDescription;
typedef struct _MSNdis_VendorDriverVersion MSNdis_VendorDriverVersion;
typedef struct _MSNdis_VendorID MSNdis_VendorID;
typedef struct _MSNdis_VlanIdentifier MSNdis_VlanIdentifier;
typedef struct _MSPower_DeviceEnable MSPower_DeviceEnable;
typedef struct _MSPower_DeviceWakeEnable MSPower_DeviceWakeEnable;
typedef struct _MSSerial_PortName MSSerial_PortName;
typedef struct _MSSmBios_RawSMBiosTables MSSmBios_RawSMBiosTables;
typedef struct _MSSmBios_SMBiosEventlog MSSmBios_SMBiosEventlog;
typedef struct _MSSmBios_Sysid1394List MSSmBios_Sysid1394List;
typedef struct _MSSmBios_SysidUUIDList MSSmBios_SysidUUIDList;
typedef struct _MSVerifierIrpLogEntry MSVerifierIrpLogEntry;
typedef struct _MSVerifierIrpLogInformation MSVerifierIrpLogInformation;
typedef struct _MSWmi_Guid MSWmi_Guid;
typedef struct _MSWmi_GuidRegistrationInfo MSWmi_GuidRegistrationInfo;
typedef struct _MSWmi_MofData MSWmi_MofData;
typedef struct _MSWmi_PnPDeviceId MSWmi_PnPDeviceId;
typedef struct _MSWmi_PnPInstanceNames MSWmi_PnPInstanceNames;
typedef struct _MSWmi_ProviderInfo MSWmi_ProviderInfo;
enum ModulationType {BDA_MOD_NOT_SET = 0xFFFFFFFF,BDA_MOD_NOT_DEFINED = 0x0,BDA_MOD_16QAM = 0x1,BDA_MOD_32QAM = 0x2,BDA_MOD_64QAM = 0x3,BDA_MOD_80QAM = 0x4,BDA_MOD_96QAM = 0x5,BDA_MOD_112QAM = 0x6,BDA_MOD_128QAM = 0x7,BDA_MOD_160QAM = 0x8,BDA_MOD_192QAM = 0x9,BDA_MOD_224QAM = 0xA,BDA_MOD_256QAM = 0xB,BDA_MOD_320QAM = 0xC,BDA_MOD_384QAM = 0xD,BDA_MOD_448QAM = 0xE,BDA_MOD_512QAM = 0xF,BDA_MOD_640QAM = 0x10,BDA_MOD_768QAM = 0x11,BDA_MOD_896QAM = 0x12,BDA_MOD_1024QAM = 0x13,BDA_MOD_QPSK = 0x14,BDA_MOD_BPSK = 0x15,BDA_MOD_OQPSK = 0x16,BDA_MOD_8VSB = 0x17,BDA_MOD_16VSB = 0x18,BDA_MOD_ANALOG_AMPLITUDE = 0x19,BDA_MOD_ANALOG_FREQUENCY = 0x1A,BDA_MOD_MAX = 0x1B,};
typedef struct _NABTSFEC_BUFFER NABTSFEC_BUFFER;
typedef struct _NABTS_BUFFER NABTS_BUFFER;
typedef struct _NABTS_BUFFER_LINE NABTS_BUFFER_LINE;
typedef int (__stdcall *NEARPROC)();
typedef struct _NETWORK_CHANNELS NETWORK_CHANNELSR;
typedef struct nms_vbxadpcmmwaveformat_tag NMS_VBXADPCMWAVEFORMAT;
typedef struct _NODE_ADDRESS NODE_ADDRESS;
typedef struct _NODE_DEVICE_EXTENSION NODE_DEVICE_EXTENSION;
typedef struct _NOTIFICATION_INFO NOTIFICATION_INFO;
typedef ADPCMCOEFSET *NPADPCMCOEFSET;
typedef ADPCMEWAVEFORMAT *NPADPCMEWAVEFORMAT;
typedef ADPCMWAVEFORMAT *NPADPCMWAVEFORMAT;
typedef struct _NPAGED_LOOKASIDE_LIST NPAGED_LOOKASIDE_LIST;
typedef APTXWAVEFORMAT *NPAPTXWAVEFORMAT;
typedef AUDIOFILE_AF10WAVEFORMAT *NPAUDIOFILE_AF10WAVEFORMAT;
typedef AUDIOFILE_AF36WAVEFORMAT *NPAUDIOFILE_AF36WAVEFORMAT;
typedef CONTRESCR10WAVEFORMAT *NPCONTRESCR10WAVEFORMAT;
typedef CONTRESVQLPCWAVEFORMAT *NPCONTRESVQLPCWAVEFORMAT;
typedef CREATIVEADPCMWAVEFORMAT *NPCREATIVEADPCMWAVEFORMAT;
typedef CREATIVEFASTSPEECH10WAVEFORMAT *NPCREATIVEFASTSPEECH10WAVEFORMAT;
typedef CREATIVEFASTSPEECH8WAVEFORMAT *NPCREATIVEFASTSPEECH8WAVEFORMAT;
typedef CSIMAADPCMWAVEFORMAT *NPCSIMAADPCMWAVEFORMAT;
typedef DIALOGICOKIADPCMWAVEFORMAT *NPDIALOGICOKIADPCMWAVEFORMAT;
typedef DIGIADPCMWAVEFORMAT *NPDIGIADPCMWAVEFORMAT;
typedef DIGIFIXWAVEFORMAT *NPDIGIFIXWAVEFORMAT;
typedef DIGIREALWAVEFORMAT *NPDIGIREALWAVEFORMAT;
typedef DIGISTDWAVEFORMAT *NPDIGISTDWAVEFORMAT;
typedef DRMWAVEFORMAT *NPDRMWAVEFORMAT;
typedef DVIADPCMWAVEFORMAT *NPDVIADPCMWAVEFORMAT;
typedef ECHOSC1WAVEFORMAT *NPECHOSC1WAVEFORMAT;
typedef ECHOWAVEFILTER *NPECHOWAVEFILTER;
typedef FMTOWNS_SND_WAVEFORMAT *NPFMTOWNS_SND_WAVEFORMAT;
typedef G721_ADPCMWAVEFORMAT *NPG721_ADPCMWAVEFORMAT;
typedef G723_ADPCMWAVEFORMAT *NPG723_ADPCMWAVEFORMAT;
typedef GSM610WAVEFORMAT *NPGSM610WAVEFORMAT;
typedef IMAADPCMWAVEFORMAT *NPIMAADPCMWAVEFORMAT;
typedef MEDIASPACEADPCMWAVEFORMAT *NPMEDIASPACEADPCMWAVEFORMAT;
typedef MPEG1WAVEFORMAT *NPMPEG1WAVEFORMAT;
typedef MPEGLAYER3WAVEFORMAT *NPMPEGLAYER3WAVEFORMAT;
typedef NMS_VBXADPCMWAVEFORMAT *NPNMS_VBXADPCMWAVEFORMAT;
typedef OLIADPCMWAVEFORMAT *NPOLIADPCMWAVEFORMAT;
typedef OLICELPWAVEFORMAT *NPOLICELPWAVEFORMAT;
typedef OLIGSMWAVEFORMAT *NPOLIGSMWAVEFORMAT;
typedef OLIOPRWAVEFORMAT *NPOLIOPRWAVEFORMAT;
typedef OLISBCWAVEFORMAT *NPOLISBCWAVEFORMAT;
typedef PCMWAVEFORMAT *NPPCMWAVEFORMAT;
typedef struct tagPOINT *NPPOINT;
typedef struct tagRECT *NPRECT;
typedef SIERRAADPCMWAVEFORMAT *NPSIERRAADPCMWAVEFORMAT;
typedef SONARCWAVEFORMAT *NPSONARCWAVEFORMAT;
typedef CHAR *NPSTR;
typedef TRUESPEECHWAVEFORMAT *NPTRUESPEECHWAVEFORMAT;
typedef VOLUMEWAVEFILTER *NPVOLUMEWAVEFILTER;
typedef WAVEFILTER *NPWAVEFILTER;
typedef WAVEFORMAT *NPWAVEFORMAT;
typedef WAVEFORMATEX *NPWAVEFORMATEX;
typedef WAVEFORMATIEEEFLOATEX *NPWAVEFORMATIEEEFLOATEX;
typedef WAVEFORMATPCMEX *NPWAVEFORMATPCMEX;
typedef YAMAHA_ADPCMWAVEFORMAT *NPYAMAHA_ADPCMWAVEFORMAT;
typedef LONG NTSTATUS;
typedef enum _NT_PRODUCT_TYPE NT_PRODUCT_TYPE;
typedef WCHAR *NWPSTR;
typedef struct _OBJECTID OBJECTID;
typedef struct _OBJECT_ATTRIBUTES OBJECT_ATTRIBUTES;
typedef struct _OBJECT_ATTRIBUTES32 OBJECT_ATTRIBUTES32;
typedef struct _OBJECT_ATTRIBUTES64 OBJECT_ATTRIBUTES64;
typedef struct _OBJECT_HANDLE_INFORMATION OBJECT_HANDLE_INFORMATION;
typedef struct _OBJECT_NAME_INFORMATION OBJECT_NAME_INFORMATION;
typedef STRING OEM_STRING;
typedef struct oliadpcmwaveformat_tag OLIADPCMWAVEFORMAT;
typedef struct olicelpwaveformat_tag OLICELPWAVEFORMAT;
typedef struct oligsmwaveformat_tag OLIGSMWAVEFORMAT;
typedef struct olioprwaveformat_tag OLIOPRWAVEFORMAT;
typedef struct olisbcwaveformat_tag OLISBCWAVEFORMAT;
typedef struct _OPCR OPCR;
typedef struct _OS_STRING OS_STRING;
typedef struct _OWNER_ENTRY OWNER_ENTRY;
typedef ACCESS_MASK *PACCESS_MASK;
typedef struct _ACCESS_RANGE *PACCESS_RANGE;
typedef struct _ACCESS_STATE *PACCESS_STATE;
typedef PVOID PACCESS_TOKEN;
typedef struct _PACKET_PARAMETERS PACKET_PARAMETERS;
typedef ACL *PACL;
typedef struct _ACPI_EVAL_INPUT_BUFFER *PACPI_EVAL_INPUT_BUFFER;
typedef struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX *PACPI_EVAL_INPUT_BUFFER_COMPLEX;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER *PACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING *PACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING;
typedef struct _ACPI_EVAL_OUTPUT_BUFFER *PACPI_EVAL_OUTPUT_BUFFER;
typedef struct _ACPI_INTERFACE_STANDARD *PACPI_INTERFACE_STANDARD;
typedef struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER *PACPI_MANIPULATE_GLOBAL_LOCK_BUFFER;
typedef struct _ACPI_METHOD_ARGUMENT *PACPI_METHOD_ARGUMENT;
typedef void (__cdecl *PACPI_OP_REGION_CALLBACK)();
typedef NTSTATUS (__cdecl *PACPI_OP_REGION_HANDLER)(ULONG AccessType, PVOID OperationRegionObject, ULONG Address, ULONG Size, PULONG Data, ULONG_PTR Context, PACPI_OP_REGION_CALLBACK CompletionHandler, PVOID CompletionContext);
typedef IAdapterPowerManagement *PADAPTERPOWERMANAGEMENT;
typedef struct _DMA_ADAPTER *PADAPTER_OBJECT;
typedef void (__stdcall *PADAPTER_RECEIVE_PACKET_ROUTINE)(PHW_STREAM_REQUEST_BLOCK Srb);
typedef struct _ADDRESS_FIFO *PADDRESS_FIFO;
typedef struct _ADDRESS_OFFSET *PADDRESS_OFFSET;
typedef struct _ADDRESS_RANGE *PADDRESS_RANGE;
typedef ADPCMCOEFSET *PADPCMCOEFSET;
typedef ADPCMEWAVEFORMAT *PADPCMEWAVEFORMAT;
typedef ADPCMWAVEFORMAT *PADPCMWAVEFORMAT;
typedef struct _PAGED_LOOKASIDE_LIST PAGED_LOOKASIDE_LIST;
typedef struct _AGP_STD_DATA *PAGP_STD_DATA;
typedef NTSTATUS (__stdcall *PALLOCATE_ADAPTER_CHANNEL)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, ULONG NumberOfMapRegisters, PDRIVER_CONTROL ExecutionRoutine, PVOID Context);
typedef PVOID (__stdcall *PALLOCATE_COMMON_BUFFER)(PDMA_ADAPTER DmaAdapter, ULONG Length, PPHYSICAL_ADDRESS LogicalAddress, BOOLEAN CacheEnabled);
typedef PVOID (__stdcall *PALLOCATE_FUNCTION)(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag);
typedef struct _ALLOW_PERFORMANCE_HIT_IN *PALLOW_PERFORMANCE_HIT_IN;
typedef PSTRING PANSI_STRING;
typedef ANSI_STRING32 *PANSI_STRING32;
typedef ANSI_STRING64 *PANSI_STRING64;
typedef APTXWAVEFORMAT *PAPTXWAVEFORMAT;
typedef struct _PARALLEL_WMI_LOG_INFO PARALLEL_WMI_LOG_INFO;
typedef struct _PARPORT_WMI_ALLOC_FREE_COUNTS PARPORT_WMI_ALLOC_FREE_COUNTS;
typedef struct _ASYNC_PACKET *PASYNC_PACKET;
typedef struct _ATAPI_FAILURE_PREDICT_DATA *PATAPI_FAILURE_PREDICT_DATA;
typedef AUDIOFILE_AF10WAVEFORMAT *PAUDIOFILE_AF10WAVEFORMAT;
typedef AUDIOFILE_AF36WAVEFORMAT *PAUDIOFILE_AF36WAVEFORMAT;
typedef struct _AVCCONNECTINFO *PAVCCONNECTINFO;
typedef struct _AVCPRECONNECTINFO *PAVCPRECONNECTINFO;
typedef struct _AVCSTRM_BUFFER_STRUCT *PAVCSTRM_BUFFER_STRUCT;
typedef struct _AVCSTRM_FORMAT_INFO *PAVCSTRM_FORMAT_INFO;
typedef struct _AVCSTRM_OPEN_STRUCT *PAVCSTRM_OPEN_STRUCT;
typedef struct _AVC_COMMAND_IRB *PAVC_COMMAND_IRB;
typedef struct _AVC_EXT_PLUG_COUNTS *PAVC_EXT_PLUG_COUNTS;
typedef struct _AVC_IRB *PAVC_IRB;
typedef struct _AVC_MULTIFUNC_IRB *PAVC_MULTIFUNC_IRB;
typedef struct _AVC_PEER_DO_LIST *PAVC_PEER_DO_LIST;
typedef struct _AVC_PEER_DO_LOCATOR *PAVC_PEER_DO_LOCATOR;
typedef struct _AVC_PIN_COUNT *PAVC_PIN_COUNT;
typedef struct _AVC_PIN_DESCRIPTOR *PAVC_PIN_DESCRIPTOR;
typedef struct _AVC_PIN_ID *PAVC_PIN_ID;
typedef struct _AVC_PRECONNECT_INFO *PAVC_PRECONNECT_INFO;
typedef struct _AVC_SETCONNECT_INFO *PAVC_SETCONNECT_INFO;
typedef struct _AVC_STREAM_REQUEST_BLOCK *PAVC_STREAM_REQUEST_BLOCK;
typedef struct _AVC_SUBUNIT_ADDR_SPEC *PAVC_SUBUNIT_ADDR_SPEC;
typedef struct _AVC_SUBUNIT_INFO_BLOCK *PAVC_SUBUNIT_INFO_BLOCK;
typedef struct _AVC_UNIQUE_ID *PAVC_UNIQUE_ID;
typedef struct _AV_61883_REQUEST *PAV_61883_REQUEST;
typedef struct _AV_PCR *PAV_PCR;
typedef struct _BANDWIDTH_ALLOCATION *PBANDWIDTH_ALLOCATION;
typedef void (__stdcall *PBANKED_SECTION_ROUTINE)(ULONG ReadBank, ULONG WriteBank, PVOID Context);
typedef struct $7069A3AF9C526B33740CA7D5809B477E *PBATTERY_REPORTING_SCALE;
typedef union _BAY_STATUS *PBAY_STATUS;
typedef struct _BDANODE_DESCRIPTOR *PBDANODE_DESCRIPTOR;
typedef struct _BDA_CA_MODULE_UI *PBDA_CA_MODULE_UI;
typedef enum $4FF2CEF7F943208657A69CE25EA0FE31 *PBDA_CHANGE_STATE;
typedef struct _BDA_ETHERNET_ADDRESS *PBDA_ETHERNET_ADDRESS;
typedef struct _BDA_ETHERNET_ADDRESS_LIST *PBDA_ETHERNET_ADDRESS_LIST;
typedef enum $938A3B861D25DE16265A89B1C43AD81C *PBDA_EVENT_ID;
typedef struct _BDA_FILTER_TEMPLATE *PBDA_FILTER_TEMPLATE;
typedef struct _BDA_IPv4_ADDRESS *PBDA_IPv4_ADDRESS;
typedef struct _BDA_IPv4_ADDRESS_LIST *PBDA_IPv4_ADDRESS_LIST;
typedef struct _BDA_IPv6_ADDRESS *PBDA_IPv6_ADDRESS;
typedef struct _BDA_IPv6_ADDRESS_LIST *PBDA_IPv6_ADDRESS_LIST;
typedef enum $323950C9678C627AEFAD637828B7290C *PBDA_MULTICAST_MODE;
typedef struct _BDA_PID_MAP *PBDA_PID_MAP;
typedef struct _BDA_PID_UNMAP *PBDA_PID_UNMAP;
typedef struct _BDA_PIN_PAIRING *PBDA_PIN_PAIRING;
typedef struct _BDA_PROGRAM_PID_LIST *PBDA_PROGRAM_PID_LIST;
typedef enum $7CE1FE37114556B00E2D910941BCF644 *PBDA_SIGNAL_STATE;
typedef struct _BDA_TABLE_SECTION *PBDA_TABLE_SECTION;
typedef struct _BDA_TEMPLATE_CONNECTION *PBDA_TEMPLATE_CONNECTION;
typedef struct _BDA_TEMPLATE_PIN_JOINT *PBDA_TEMPLATE_PIN_JOINT;
typedef ULONG *PBDA_TOPOLOGY_JOINT;
typedef struct tagBDA_TRANSPORT_INFO *PBDA_TRANSPORT_INFO;
typedef union _BM_REQUEST_TYPE *PBM_REQUEST_TYPE;
typedef BOOL *PBOOL;
typedef BOOLEAN *PBOOLEAN;
typedef struct _BOOTDISK_INFORMATION *PBOOTDISK_INFORMATION;
typedef struct _BOOTDISK_INFORMATION_EX *PBOOTDISK_INFORMATION_EX;
typedef NTSTATUS (__stdcall *PBUILD_MDL_FROM_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PSCATTER_GATHER_LIST ScatterGather, PMDL OriginalMdl, PMDL *TargetMdl);
typedef NTSTATUS (__stdcall *PBUILD_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PMDL Mdl, PVOID CurrentVa, ULONG Length, PDRIVER_LIST_CONTROL ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice, PVOID ScatterGatherBuffer, ULONG ScatterGatherLength);
typedef void (__stdcall *PBUS_BUS_RESET_NOTIFICATION)(PVOID Context);
typedef enum _BUS_DATA_TYPE *PBUS_DATA_TYPE;
typedef struct _BUS_GENERATION_NODE *PBUS_GENERATION_NODE;
typedef struct $40A6D5622BA75F270314126148B7B4DB *PBUS_INTERFACE_MEDIUMS;
typedef struct $9452773C7C9658DF0A7C90A31311AC2C *PBUS_INTERFACE_REFERENCE;
typedef struct _BUS_INTERFACE_STANDARD *PBUS_INTERFACE_STANDARD;
typedef void (__stdcall *PBUS_ISOCH_DESCRIPTOR_ROUTINE)(PVOID Context1, PVOID Context2);
typedef void (__stdcall *PBUS_NOTIFICATION_ROUTINE)(PNOTIFICATION_INFO NotificationInfo);
typedef enum $46A0A762E46BF16A5C029C85901AE439 *PBUS_QUERY_ID_TYPE;
typedef struct _BUS_RESET_NOTIFY *PBUS_RESET_NOTIFY;
typedef void (__stdcall *PBUS_RESET_ROUTINE)(PVOID Context, PBUS_GENERATION_NODE BusResetInfo);
typedef BYTE *PBYTE;
typedef NTSTATUS (__stdcall *PCALCULATE_SCATTER_GATHER_LIST_SIZE)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID CurrentVa, ULONG Length, PULONG ScatterGatherListSize, PULONG pNumberOfMapRegisters);
typedef void (__stdcall *PCALLBACK_FUNCTION)(PVOID CallbackContext, PVOID Argument1, PVOID Argument2);
typedef struct _CALLBACK_OBJECT *PCALLBACK_OBJECT;
typedef NTSTATUS (__stdcall *PCAM_ALLOCATE_BW_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PULONG RawFrameLength, PVOID Format);
typedef NTSTATUS (__stdcall *PCAM_ALLOCATE_BW_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PULONG RawFrameLength, PVOID Format, ULONG StreamNumber);
typedef NTSTATUS (__stdcall *PCAM_CONFIGURE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PUSBD_INTERFACE_INFORMATION Interface, PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PLONG DataPipeIndex, PLONG SyncPipeIndex);
typedef NTSTATUS (__stdcall *PCAM_CONFIGURE_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PUSBD_INTERFACE_INFORMATION Interface, PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, ULONG PipeConfigListSize, PUSBCAMD_Pipe_Config_Descriptor PipeConfig, PUSB_DEVICE_DESCRIPTOR DeviceDescriptor);
typedef NTSTATUS (__stdcall *PCAM_FREE_BW_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS (__stdcall *PCAM_FREE_BW_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, ULONG STreamNumber);
typedef NTSTATUS (__stdcall *PCAM_INITIALIZE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef void (__stdcall *PCAM_NEW_FRAME_ROUTINE)(PVOID DeviceContext, PVOID FrameContext);
typedef void (__stdcall *PCAM_NEW_FRAME_ROUTINE_EX)(PVOID DeviceContext, PVOID FrameContext, ULONG StreamNumber, PULONG FrameLength);
typedef ULONG (__stdcall *PCAM_PROCESS_PACKET_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID CurrentFrameContext, PUSBD_ISO_PACKET_DESCRIPTOR SyncPacket, PVOID SyncBuffer, PUSBD_ISO_PACKET_DESCRIPTOR DataPacket, PVOID DataBuffer, PBOOLEAN FrameComplete, PBOOLEAN NextFrameIsStill);
typedef ULONG (__stdcall *PCAM_PROCESS_PACKET_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID CurrentFrameContext, PUSBD_ISO_PACKET_DESCRIPTOR SyncPacket, PVOID SyncBuffer, PUSBD_ISO_PACKET_DESCRIPTOR DataPacket, PVOID DataBuffer, PBOOLEAN FrameComplete, PULONG PacketFlag, PULONG ValidDataOffset);
typedef NTSTATUS (__stdcall *PCAM_PROCESS_RAW_FRAME_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID FrameContext, PVOID FrameBuffer, ULONG FrameLength, PVOID RawFrameBuffer, ULONG RawFrameLength, ULONG NumberOfPackets, PULONG BytesReturned);
typedef NTSTATUS (__stdcall *PCAM_PROCESS_RAW_FRAME_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID FrameContext, PVOID FrameBuffer, ULONG FrameLength, PVOID RawFrameBuffer, ULONG RawFrameLength, ULONG NumberOfPackets, PULONG BytesReturned, ULONG ActualRawFrameLength, ULONG StreamNumber);
typedef NTSTATUS (__stdcall *PCAM_START_CAPTURE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS (__stdcall *PCAM_START_CAPTURE_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, ULONG StreamNumber);
typedef NTSTATUS (__stdcall *PCAM_STATE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS (__stdcall *PCAM_STOP_CAPTURE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS (__stdcall *PCAM_STOP_CAPTURE_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, ULONG StreamNumber);
typedef PSTRING PCANSI_STRING;
typedef struct $D8D7C26B9FDE94F9B7E724B17C76CE36 PCAUTOMATION_TABLE;
typedef const CHAR *PCCH;
typedef CCHAR *PCCHAR;
typedef KSTOPOLOGY_CONNECTION PCCONNECTION_DESCRIPTOR;
typedef struct _CC_BYTE_PAIR *PCC_BYTE_PAIR;
typedef struct _CC_HW_FIELD *PCC_HW_FIELD;
typedef const DRMFORWARD *PCDRMFORWARD;
typedef const DRMRIGHTS *PCDRMRIGHTS;
typedef struct $0C4AC156F5CD9D086646B489056E0FB7 PCEVENT_ITEM;
typedef struct _PCEVENT_REQUEST PCEVENT_REQUEST;
typedef struct $53BCF8451FB1BBF1B3D3F15C66D0D1DB PCFILTER_DESCRIPTOR;
typedef CHAR *PCH;
typedef CHAR *PCHAR;
typedef struct _CIP_ATTACH_FRAME *PCIP_ATTACH_FRAME;
typedef struct _CIP_CANCEL_FRAME *PCIP_CANCEL_FRAME;
typedef struct _CIP_DATA_FORMAT *PCIP_DATA_FORMAT;
typedef struct _CIP_FRAME *PCIP_FRAME;
typedef struct _CIP_HDR1 *PCIP_HDR1;
typedef struct _CIP_HDR2_FDF *PCIP_HDR2_FDF;
typedef struct _CIP_HDR2_MPEGTS *PCIP_HDR2_MPEGTS;
typedef struct _CIP_HDR2_SYT *PCIP_HDR2_SYT;
typedef struct _CIP_LISTEN *PCIP_LISTEN;
typedef struct _CIP_NOTIFY_INFO *PCIP_NOTIFY_INFO;
typedef ULONG (__stdcall *PCIP_NOTIFY_ROUTINE)(PCIP_NOTIFY_INFO NotifyInfo);
typedef struct _CIP_STOP *PCIP_STOP;
typedef struct _CIP_TALK *PCIP_TALK;
typedef struct _CIP_VALIDATE_INFO *PCIP_VALIDATE_INFO;
typedef ULONG (__stdcall *PCIP_VALIDATE_ROUTINE)(PCIP_VALIDATE_INFO ValidateInfo);
typedef struct _PCI_AGP_APERTURE_PAGE_SIZE PCI_AGP_APERTURE_PAGE_SIZE;
typedef struct _PCI_AGP_CAPABILITY PCI_AGP_CAPABILITY;
typedef struct _PCI_AGP_CONTROL PCI_AGP_CONTROL;
struct PCI_AGP_EXTENDED_CAPABILITY {PCI_AGP_ISOCH_STATUS IsochStatus;PCI_AGP_CONTROL AgpControl;USHORT ApertureSize;PCI_AGP_APERTURE_PAGE_SIZE AperturePageSize;ULONG GartLow;ULONG GartHigh;PCI_AGP_ISOCH_COMMAND IsochCommand;};
typedef struct _PCI_AGP_ISOCH_COMMAND PCI_AGP_ISOCH_COMMAND;
typedef struct _PCI_AGP_ISOCH_STATUS PCI_AGP_ISOCH_STATUS;
typedef struct _PCI_CAPABILITIES_HEADER PCI_CAPABILITIES_HEADER;
typedef struct _PCI_COMMON_CONFIG PCI_COMMON_CONFIG;
typedef struct _PCI_DEVICE_PRESENCE_PARAMETERS PCI_DEVICE_PRESENCE_PARAMETERS;
typedef struct _PCI_DEVICE_PRESENT_INTERFACE PCI_DEVICE_PRESENT_INTERFACE;
typedef struct _PCI_MSI_CAPABILITY PCI_MSI_CAPABILITY;
typedef struct _PCI_PMC PCI_PMC;
typedef struct _PCI_PMCSR PCI_PMCSR;
typedef struct _PCI_PMCSR_BSE PCI_PMCSR_BSE;
typedef struct _PCI_PM_CAPABILITY PCI_PM_CAPABILITY;
typedef struct _PCI_SLOT_NUMBER PCI_SLOT_NUMBER;
typedef const KSPIN_DESCRIPTOR *PCKSPIN_DESCRIPTOR;
typedef CLIENT_ID *PCLIENT_ID;
typedef CLONG *PCLONG;
typedef MCA_EXCEPTION *PCMC_EXCEPTION;
typedef struct $9DABE2D50638D6782800B54C16FE3B63 PCMETHOD_ITEM;
typedef struct _PCMETHOD_REQUEST PCMETHOD_REQUEST;
typedef struct _CMP_CONNECT *PCMP_CONNECT;
typedef struct _CMP_CREATE_PLUG *PCMP_CREATE_PLUG;
typedef struct _CMP_DELETE_PLUG *PCMP_DELETE_PLUG;
typedef struct _CMP_DISCONNECT *PCMP_DISCONNECT;
typedef struct _CMP_GET_PLUG_HANDLE *PCMP_GET_PLUG_HANDLE;
typedef struct _CMP_GET_PLUG_STATE *PCMP_GET_PLUG_STATE;
typedef struct _CMP_MONITOR_INFO *PCMP_MONITOR_INFO;
typedef struct _CMP_MONITOR_PLUGS *PCMP_MONITOR_PLUGS;
typedef void (__stdcall *PCMP_MONITOR_ROUTINE)(PCMP_MONITOR_INFO MonitorInfo);
typedef struct _CMP_NOTIFY_INFO *PCMP_NOTIFY_INFO;
typedef void (__stdcall *PCMP_NOTIFY_ROUTINE)(PCMP_NOTIFY_INFO NotifyInfo);
typedef struct _CMP_SET_PLUG *PCMP_SET_PLUG;
typedef struct pcmwaveformat_tag PCMWAVEFORMAT;
typedef struct _CM_COMPONENT_INFORMATION *PCM_COMPONENT_INFORMATION;
typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA *PCM_DISK_GEOMETRY_DEVICE_DATA;
typedef struct _CM_EISA_FUNCTION_INFORMATION *PCM_EISA_FUNCTION_INFORMATION;
typedef struct _CM_EISA_SLOT_INFORMATION *PCM_EISA_SLOT_INFORMATION;
typedef struct _CM_FLOPPY_DEVICE_DATA *PCM_FLOPPY_DEVICE_DATA;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR *PCM_FULL_RESOURCE_DESCRIPTOR;
typedef struct _CM_INT13_DRIVE_PARAMETER *PCM_INT13_DRIVE_PARAMETER;
typedef struct _CM_KEYBOARD_DEVICE_DATA *PCM_KEYBOARD_DEVICE_DATA;
typedef struct _CM_MCA_POS_DATA *PCM_MCA_POS_DATA;
typedef struct _CM_MONITOR_DEVICE_DATA *PCM_MONITOR_DEVICE_DATA;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *PCM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PARTIAL_RESOURCE_LIST *PCM_PARTIAL_RESOURCE_LIST;
typedef struct _CM_PNP_BIOS_DEVICE_NODE *PCM_PNP_BIOS_DEVICE_NODE;
typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK *PCM_PNP_BIOS_INSTALLATION_CHECK;
typedef struct _CM_RESOURCE_LIST *PCM_RESOURCE_LIST;
typedef struct _CM_ROM_BLOCK *PCM_ROM_BLOCK;
typedef struct _CM_SCSI_DEVICE_DATA *PCM_SCSI_DEVICE_DATA;
typedef struct _CM_SERIAL_DEVICE_DATA *PCM_SERIAL_DEVICE_DATA;
typedef struct _CM_SONIC_DEVICE_DATA *PCM_SONIC_DEVICE_DATA;
typedef struct _CM_VIDEO_DEVICE_DATA *PCM_VIDEO_DEVICE_DATA;
typedef struct $D96EA640170F725CA11FCBCFEE3FF36E PCNODE_DESCRIPTOR;
typedef const OBJECT_ATTRIBUTES *PCOBJECT_ATTRIBUTES;
typedef const OBJECT_ATTRIBUTES32 *PCOBJECT_ATTRIBUTES32;
typedef const OBJECT_ATTRIBUTES64 *PCOBJECT_ATTRIBUTES64;
typedef const STRING *PCOEM_STRING;
typedef NTSTATUS (__stdcall *PCOMMAND_COMPLETE_FUNCTION)(PVOID DeviceContext, PVOID CommandContext, NTSTATUS NtStatus);
typedef struct _CONFIG_ROM *PCONFIG_ROM;
typedef CONTRESCR10WAVEFORMAT *PCONTRESCR10WAVEFORMAT;
typedef CONTRESVQLPCWAVEFORMAT *PCONTRESVQLPCWAVEFORMAT;
typedef MCA_EXCEPTION *PCPE_EXCEPTION;
typedef NTSTATUS (__stdcall *PCPFNEVENT_HANDLER)(PPCEVENT_REQUEST EventRequest);
typedef NTSTATUS (__stdcall *PCPFNMETHOD_HANDLER)(PPCMETHOD_REQUEST MethodRequest);
typedef NTSTATUS (__stdcall *PCPFNPROPERTY_HANDLER)(PPCPROPERTY_REQUEST PropertyRequest);
typedef NTSTATUS (__stdcall *PCPFNSTARTDEVICE)(PDEVICE_OBJECT DeviceObject, PIRP Irp, PRESOURCELIST ResourceList);
typedef struct $07D0DEFC473073A5B78BC3974C364183 PCPIN_DESCRIPTOR;
typedef struct $1C1547A44DB0B6456BF86742FC40B205 PCPROPERTY_ITEM;
typedef struct _PCPROPERTY_REQUEST PCPROPERTY_REQUEST;
typedef CREATIVEADPCMWAVEFORMAT *PCREATIVEADPCMWAVEFORMAT;
typedef CREATIVEFASTSPEECH10WAVEFORMAT *PCREATIVEFASTSPEECH10WAVEFORMAT;
typedef CREATIVEFASTSPEECH8WAVEFORMAT *PCREATIVEFASTSPEECH8WAVEFORMAT;
typedef CSHORT *PCSHORT;
typedef CSIMAADPCMWAVEFORMAT *PCSIMAADPCMWAVEFORMAT;
typedef const CHAR *PCSTR;
typedef CSTRING *PCSTRING;
typedef const char *PCSZ;
typedef LPCSTR PCTSTR;
typedef const UNICODE_STRING *PCUNICODE_STRING;
typedef LPCSTR PCUTSTR;
typedef const WCHAR *PCUWSTR;
typedef const WCHAR *PCWCH;
typedef const WCHAR *PCWSTR;
typedef struct _CYCLE_TIME *PCYCLE_TIME;
typedef struct _DBC_BAY_DESCRIPTOR *PDBC_BAY_DESCRIPTOR;
typedef struct _DBC_SUBSYSTEM_DESCRIPTOR *PDBC_SUBSYSTEM_DESCRIPTOR;
typedef struct _DEVICE_CAPABILITIES *PDEVICE_CAPABILITIES;
typedef void (__stdcall *PDEVICE_CHANGE_COMPLETE_CALLBACK)(PVOID Context);
typedef struct _DEVICE_DESCRIPTION *PDEVICE_DESCRIPTION;
typedef struct _DEVICE_FLAGS *PDEVICE_FLAGS;
typedef enum _DEVICE_INSTALL_STATE *PDEVICE_INSTALL_STATE;
typedef struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION *PDEVICE_INTERFACE_CHANGE_NOTIFICATION;
typedef void (__stdcall *PDEVICE_NOTIFY_CALLBACK)(PVOID, ULONG);
typedef struct _DEVICE_OBJECT *PDEVICE_OBJECT;
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;
typedef struct _DEVICE_RELATIONS *PDEVICE_RELATIONS;
typedef enum _DEVICE_RELATION_TYPE *PDEVICE_RELATION_TYPE;
typedef enum _DEVICE_REMOVAL_POLICY *PDEVICE_REMOVAL_POLICY;
typedef enum $CD1AEEBAB641DEC86F01C12702A854EA *PDEVICE_TEXT_TYPE;
typedef struct _DEVICE_UI_FIRMWARE_REVISION *PDEVICE_UI_FIRMWARE_REVISION;
typedef struct _DEVOBJ_EXTENSION *PDEVOBJ_EXTENSION;
typedef DIALOGICOKIADPCMWAVEFORMAT *PDIALOGICOKIADPCMWAVEFORMAT;
typedef DIGIADPCMWAVEFORMAT *PDIGIADPCMWAVEFORMAT;
typedef DIGIFIXWAVEFORMAT *PDIGIFIXWAVEFORMAT;
typedef DIGIREALWAVEFORMAT *PDIGIREALWAVEFORMAT;
typedef DIGISTDWAVEFORMAT *PDIGISTDWAVEFORMAT;
typedef IDmaChannel *PDMACHANNEL;
typedef IDmaChannelSlave *PDMACHANNELSLAVE;
typedef IDmaOperations *PDMAOPERATIONS;
typedef struct _DMA_ADAPTER *PDMA_ADAPTER;
typedef struct _DMA_OPERATIONS *PDMA_OPERATIONS;
typedef enum _DMA_SPEED *PDMA_SPEED;
typedef enum _DMA_WIDTH *PDMA_WIDTH;
typedef struct _DRB *PDRB;
typedef NTSTATUS (__stdcall *PDRIVER_ADD_DEVICE)(struct _DRIVER_OBJECT *DriverObject, struct _DEVICE_OBJECT *PhysicalDeviceObject);
typedef void (__stdcall *PDRIVER_CANCEL)(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);
typedef IO_ALLOCATION_ACTION (__stdcall *PDRIVER_CONTROL)(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PVOID MapRegisterBase, PVOID Context);
typedef NTSTATUS (__stdcall *PDRIVER_DISPATCH)(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);
typedef struct _DRIVER_EXTENSION *PDRIVER_EXTENSION;
typedef NTSTATUS (__stdcall *PDRIVER_INITIALIZE)(struct _DRIVER_OBJECT *DriverObject, PUNICODE_STRING RegistryPath);
typedef void (__stdcall *PDRIVER_LIST_CONTROL)(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PSCATTER_GATHER_LIST ScatterGather, PVOID Context);
typedef NTSTATUS (__stdcall *PDRIVER_NOTIFICATION_CALLBACK_ROUTINE)(PVOID NotificationStructure, PVOID Context);
typedef struct _DRIVER_OBJECT *PDRIVER_OBJECT;
typedef void (__stdcall *PDRIVER_STARTIO)(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);
typedef void (__stdcall *PDRIVER_UNLOAD)(struct _DRIVER_OBJECT *DriverObject);
typedef IDrmAudioStream *PDRMAUDIOSTREAM;
typedef struct tagDRMFORWARD *PDRMFORWARD;
typedef IDrmPort *PDRMPORT;
typedef IDrmPort2 *PDRMPORT2;
typedef struct tagDRMRIGHTS *PDRMRIGHTS;
typedef DRMWAVEFORMAT *PDRMWAVEFORMAT;
typedef struct _DS3DVECTOR *PDS3DVECTOR;
typedef DVIADPCMWAVEFORMAT *PDVIADPCMWAVEFORMAT;
typedef struct _DVINFO *PDVINFO;
typedef DWORD *PDWORD;
typedef unsigned int *PDWORD32;
typedef unsigned __int64 *PDWORD64;
typedef DWORDLONG *PDWORDLONG;
typedef ULONG_PTR *PDWORD_PTR;
typedef ECHOSC1WAVEFORMAT *PECHOSC1WAVEFORMAT;
typedef ECHOWAVEFILTER *PECHOWAVEFILTER;
typedef struct _EISA_DMA_CONFIGURATION *PEISA_DMA_CONFIGURATION;
typedef struct _EISA_IRQ_CONFIGURATION *PEISA_IRQ_CONFIGURATION;
typedef struct _EISA_IRQ_DESCRIPTOR *PEISA_IRQ_DESCRIPTOR;
typedef struct _EISA_MEMORY_CONFIGURATION *PEISA_MEMORY_CONFIGURATION;
typedef struct _EISA_MEMORY_TYPE *PEISA_MEMORY_TYPE;
typedef struct _EISA_PORT_CONFIGURATION *PEISA_PORT_CONFIGURATION;
typedef struct _EISA_PORT_DESCRIPTOR *PEISA_PORT_DESCRIPTOR;
typedef struct _EMULATOR_ACCESS_ENTRY *PEMULATOR_ACCESS_ENTRY;
typedef enum _EMULATOR_PORT_ACCESS_TYPE *PEMULATOR_PORT_ACCESS_TYPE;
typedef struct _ENABLE_DISABLE_FP_IN *PENABLE_DISABLE_FP_IN;
typedef struct _ENABLE_DISABLE_FP_POLLING_IN *PENABLE_DISABLE_FP_POLLING_IN;
typedef struct _ENABLE_OFFLINE_DIAGS_OUT *PENABLE_OFFLINE_DIAGS_OUT;
typedef struct _EPROCESS *PEPROCESS;
typedef struct _ERESOURCE *PERESOURCE;
typedef ERESOURCE_THREAD *PERESOURCE_THREAD;
typedef struct _ETHREAD *PETHREAD;
typedef struct _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;
typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;
typedef struct _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;
typedef EXCEPTION_DISPOSITION (__stdcall *PEXCEPTION_ROUTINE)(struct _EXCEPTION_RECORD *ExceptionRecord, PVOID EstablisherFrame, struct _CONTEXT *ContextRecord, PVOID DispatcherContext);
typedef struct _EXECUTE_SELF_TEST_IN *PEXECUTE_SELF_TEST_IN;
typedef struct _EXECUTE_SELF_TEST_OUT *PEXECUTE_SELF_TEST_OUT;
typedef enum _EXTENDED_AGP_REGISTER *PEXTENDED_AGP_REGISTER;
typedef NTSTATUS (__stdcall *PEX_CALLBACK_FUNCTION)(PVOID CallbackContext, PVOID Argument1, PVOID Argument2);
typedef void (__stdcall *PFAST_IO_ACQUIRE_FILE)(struct _FILE_OBJECT *FileObject);
typedef NTSTATUS (__stdcall *PFAST_IO_ACQUIRE_FOR_CCFLUSH)(struct _FILE_OBJECT *FileObject, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS (__stdcall *PFAST_IO_ACQUIRE_FOR_MOD_WRITE)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER EndingOffset, struct _ERESOURCE **ResourceToRelease, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_CHECK_IF_POSSIBLE)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, BOOLEAN CheckForReadOperation, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef void (__stdcall *PFAST_IO_DETACH_DEVICE)(struct _DEVICE_OBJECT *SourceDevice, struct _DEVICE_OBJECT *TargetDevice);
typedef BOOLEAN (__stdcall *PFAST_IO_DEVICE_CONTROL)(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, ULONG IoControlCode, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef struct _FAST_IO_DISPATCH *PFAST_IO_DISPATCH;
typedef BOOLEAN (__stdcall *PFAST_IO_LOCK)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PLARGE_INTEGER Length, PEPROCESS ProcessId, ULONG Key, BOOLEAN FailImmediately, BOOLEAN ExclusiveLock, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_MDL_READ)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_MDL_READ_COMPLETE)(struct _FILE_OBJECT *FileObject, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_MDL_READ_COMPLETE_COMPRESSED)(struct _FILE_OBJECT *FileObject, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_MDL_WRITE_COMPLETE)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_PREPARE_MDL_WRITE)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_QUERY_BASIC_INFO)(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PFILE_BASIC_INFORMATION Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_QUERY_NETWORK_OPEN_INFO)(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, struct _FILE_NETWORK_OPEN_INFORMATION *Buffer, struct _IO_STATUS_BLOCK *IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_QUERY_OPEN)(struct _IRP *Irp, PFILE_NETWORK_OPEN_INFORMATION NetworkInformation, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_QUERY_STANDARD_INFO)(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PFILE_STANDARD_INFORMATION Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_READ)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_READ_COMPRESSED)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PVOID Buffer, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _COMPRESSED_DATA_INFO *CompressedDataInfo, ULONG CompressedDataInfoLength, struct _DEVICE_OBJECT *DeviceObject);
typedef void (__stdcall *PFAST_IO_RELEASE_FILE)(struct _FILE_OBJECT *FileObject);
typedef NTSTATUS (__stdcall *PFAST_IO_RELEASE_FOR_CCFLUSH)(struct _FILE_OBJECT *FileObject, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS (__stdcall *PFAST_IO_RELEASE_FOR_MOD_WRITE)(struct _FILE_OBJECT *FileObject, struct _ERESOURCE *ResourceToRelease, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_UNLOCK_ALL)(struct _FILE_OBJECT *FileObject, PEPROCESS ProcessId, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_UNLOCK_ALL_BY_KEY)(struct _FILE_OBJECT *FileObject, PVOID ProcessId, ULONG Key, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_UNLOCK_SINGLE)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PLARGE_INTEGER Length, PEPROCESS ProcessId, ULONG Key, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_WRITE)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (__stdcall *PFAST_IO_WRITE_COMPRESSED)(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PVOID Buffer, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _COMPRESSED_DATA_INFO *CompressedDataInfo, ULONG CompressedDataInfoLength, struct _DEVICE_OBJECT *DeviceObject);
typedef struct _FAST_MUTEX *PFAST_MUTEX;
typedef struct _FCP_FRAME *PFCP_FRAME;
typedef struct _FCP_GET_REQUEST *PFCP_GET_REQUEST;
typedef struct _FCP_GET_RESPONSE *PFCP_GET_RESPONSE;
typedef struct _FCP_SEND_REQUEST *PFCP_REQUEST;
typedef struct _FCP_GET_RESPONSE *PFCP_RESPONSE;
typedef struct _FCP_SEND_REQUEST *PFCP_SEND_REQUEST;
typedef struct _FCP_SEND_RESPONSE *PFCP_SEND_RESPONSE;
typedef struct _FILETIME *PFILETIME;
typedef struct _FILE_BASIC_INFORMATION *PFILE_BASIC_INFORMATION;
typedef struct _FILE_FS_DEVICE_INFORMATION *PFILE_FS_DEVICE_INFORMATION;
typedef struct _FILE_FULL_EA_INFORMATION *PFILE_FULL_EA_INFORMATION;
typedef enum _FILE_INFORMATION_CLASS *PFILE_INFORMATION_CLASS;
typedef struct _FILE_NETWORK_OPEN_INFORMATION *PFILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_OBJECT *PFILE_OBJECT;
typedef struct _FILE_POSITION_INFORMATION *PFILE_POSITION_INFORMATION;
typedef struct _FILE_STANDARD_INFORMATION *PFILE_STANDARD_INFORMATION;
typedef FLOAT *PFLOAT;
typedef FLOAT128 *PFLOAT128;
typedef BOOLEAN (__stdcall *PFLUSH_ADAPTER_BUFFERS)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, PVOID CurrentVa, ULONG Length, BOOLEAN WriteToDevice);
typedef FMTOWNS_SND_WAVEFORMAT *PFMTOWNS_SND_WAVEFORMAT;
typedef NTSTATUS (__stdcall *PFNALLOCATOR_ALLOCATEFRAME)(PFILE_OBJECT FileObject, PVOID *Frame);
typedef void (__stdcall *PFNALLOCATOR_FREEFRAME)(PFILE_OBJECT FileObject, PVOID Frame);
typedef NTSTATUS (__stdcall *PFNAVCINTERSECTHANDLER)(PVOID Context, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG DataBufferSize, PVOID Data, PULONG DataSize);
typedef HRESULT (__stdcall *PFNCREATEINSTANCE)(PUNKNOWN *Unknown, const IID *const ClassId, PUNKNOWN OuterUnknown, POOL_TYPE PoolType);
typedef void (__stdcall *PFNDEREFERENCEDEVICEOBJECT)(PVOID Context);
typedef NTSTATUS (__stdcall *PFNDRMADDCONTENTHANDLERS)(ULONG ContentId, PVOID *paHandlers, ULONG NumHandlers);
typedef NTSTATUS (__stdcall *PFNDRMCREATECONTENTMIXED)(PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);
typedef NTSTATUS (__stdcall *PFNDRMDESTROYCONTENT)(ULONG ContentId);
typedef NTSTATUS (__stdcall *PFNDRMFORWARDCONTENTTODEVICEOBJECT)(ULONG ContentId, PVOID Reserved, PCDRMFORWARD DrmForward);
typedef NTSTATUS (__stdcall *PFNDRMFORWARDCONTENTTOFILEOBJECT)(ULONG ContentId, PFILE_OBJECT FileObject);
typedef NTSTATUS (__stdcall *PFNDRMFORWARDCONTENTTOINTERFACE)(ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);
typedef NTSTATUS (__stdcall *PFNDRMGETCONTENTRIGHTS)(ULONG ContentId, PDRMRIGHTS DrmRights);
typedef NTSTATUS (__stdcall *PFNKSADDEVENT)(PIRP Irp, PKSEVENTDATA EventData, struct _KSEVENT_ENTRY *EventEntry);
typedef NTSTATUS (__stdcall *PFNKSALLOCATOR)(PIRP Irp, ULONG BufferSize, BOOLEAN InputOperation);
typedef BOOLEAN (__stdcall *PFNKSCANCELTIMER)(PVOID Context, PKTIMER Timer);
typedef LONGLONG (__fastcall *PFNKSCLOCK_CORRELATEDTIME)(PFILE_OBJECT FileObject, PLONGLONG SystemTime);
typedef LONGLONG (__fastcall *PFNKSCLOCK_GETTIME)(PFILE_OBJECT FileObject);
typedef NTSTATUS (__stdcall *PFNKSCONTEXT_DISPATCH)(PVOID Context, PIRP Irp);
typedef LONGLONG (__fastcall *PFNKSCORRELATEDTIME)(PVOID Context, PLONGLONG SystemTime);
typedef PVOID (__stdcall *PFNKSDEFAULTALLOCATE)(PVOID Context);
typedef void (__stdcall *PFNKSDEFAULTFREE)(PVOID Context, PVOID Buffer);
typedef void (__stdcall *PFNKSDELETEALLOCATOR)(PVOID Context);
typedef NTSTATUS (__stdcall *PFNKSDEVICE)(PKSDEVICE Device);
typedef NTSTATUS (__stdcall *PFNKSDEVICECREATE)(PKSDEVICE Device);
typedef NTSTATUS (__stdcall *PFNKSDEVICEIRP)(PKSDEVICE Device, PIRP Irp);
typedef void (__stdcall *PFNKSDEVICEIRPVOID)(PKSDEVICE Device, PIRP Irp);
typedef NTSTATUS (__stdcall *PFNKSDEVICEPNPSTART)(PKSDEVICE Device, PIRP Irp, PCM_RESOURCE_LIST TranslatedResourceList, PCM_RESOURCE_LIST UntranslatedResourceList);
typedef NTSTATUS (__stdcall *PFNKSDEVICEQUERYCAPABILITIES)(PKSDEVICE Device, PIRP Irp, PDEVICE_CAPABILITIES Capabilities);
typedef NTSTATUS (__stdcall *PFNKSDEVICEQUERYPOWER)(PKSDEVICE Device, PIRP Irp, DEVICE_POWER_STATE DeviceTo, DEVICE_POWER_STATE DeviceFrom, SYSTEM_POWER_STATE SystemTo, SYSTEM_POWER_STATE SystemFrom, POWER_ACTION Action);
typedef void (__stdcall *PFNKSDEVICESETPOWER)(PKSDEVICE Device, PIRP Irp, DEVICE_POWER_STATE To, DEVICE_POWER_STATE From);
typedef BOOLEAN (__stdcall *PFNKSFASTHANDLER)(PFILE_OBJECT FileObject, PKSIDENTIFIER Request, ULONG RequestLength, PVOID Data, ULONG DataLength, PIO_STATUS_BLOCK IoStatus);
typedef void (__stdcall *PFNKSFILTERFACTORYPOWER)(PKSFILTERFACTORY FilterFactory, DEVICE_POWER_STATE State);
typedef NTSTATUS (__stdcall *PFNKSFILTERFACTORYVOID)(PKSFILTERFACTORY FilterFactory);
typedef NTSTATUS (__stdcall *PFNKSFILTERIRP)(PKSFILTER Filter, PIRP Irp);
typedef void (__stdcall *PFNKSFILTERPOWER)(PKSFILTER Filter, DEVICE_POWER_STATE State);
typedef NTSTATUS (__stdcall *PFNKSFILTERPROCESS)(PKSFILTER Filter, PKSPROCESSPIN_INDEXENTRY Index);
typedef NTSTATUS (__stdcall *PFNKSFILTERVOID)(PKSFILTER Filter);
typedef void (__stdcall *PFNKSFREE)(PVOID Data);
typedef BOOLEAN (__stdcall *PFNKSGENERATEEVENTCALLBACK)(PVOID Context, PKSEVENT_ENTRY EventEntry);
typedef void (__stdcall *PFNKSGRAPHMANAGER_NOTIFY)(PFILE_OBJECT GraphManager, ULONG EventId, PVOID Filter, PVOID Pin, PVOID Frame, ULONG Duration);
typedef NTSTATUS (__stdcall *PFNKSHANDLER)(PIRP Irp, PKSIDENTIFIER Request, PVOID Data);
typedef NTSTATUS (__stdcall *PFNKSINITIALIZEALLOCATOR)(PVOID InitialContext, PKSALLOCATOR_FRAMING AllocatorFraming, PVOID *Context);
typedef NTSTATUS (__stdcall *PFNKSINTERSECTHANDLER)(PIRP Irp, PKSP_PIN Pin, PKSDATARANGE DataRange, PVOID Data);
typedef NTSTATUS (__stdcall *PFNKSINTERSECTHANDLEREX)(PVOID Context, PIRP Irp, PKSP_PIN Pin, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG DataBufferSize, PVOID Data, PULONG DataSize);
typedef NTSTATUS (__stdcall *PFNKSIRPLISTCALLBACK)(PIRP Irp, PVOID Context);
typedef void (__stdcall *PFNKSITEMFREECALLBACK)(PKSOBJECT_CREATE_ITEM CreateItem);
typedef NTSTATUS (__stdcall *PFNKSPIN)(PKSPIN Pin);
typedef BOOLEAN (__stdcall *PFNKSPINCANCELTIMER)(PKSPIN Pin, PKTIMER Timer);
typedef LONGLONG (__fastcall *PFNKSPINCORRELATEDTIME)(PKSPIN Pin, PLONGLONG SystemTime);
typedef void (__stdcall *PFNKSPINFRAMERETURN)(PKSPIN Pin, PVOID Data, ULONG Size, PMDL Mdl, PVOID Context, NTSTATUS Status);
typedef NTSTATUS (__stdcall *PFNKSPINHANDSHAKE)(PKSPIN Pin, PKSHANDSHAKE In, PKSHANDSHAKE Out);
typedef NTSTATUS (__stdcall *PFNKSPININITIALIZEALLOCATOR)(PKSPIN Pin, PKSALLOCATOR_FRAMING AllocatorFraming, PVOID *Context);
typedef NTSTATUS (__stdcall *PFNKSPINIRP)(PKSPIN Pin, PIRP Irp);
typedef void (__stdcall *PFNKSPINIRPCOMPLETION)(PKSPIN Pin, PIRP Irp);
typedef void (__stdcall *PFNKSPINPOWER)(PKSPIN Pin, DEVICE_POWER_STATE State);
typedef void (__stdcall *PFNKSPINRESOLUTION)(PKSPIN Pin, PKSRESOLUTION Resolution);
typedef NTSTATUS (__stdcall *PFNKSPINSETDATAFORMAT)(PKSPIN Pin, PKSDATAFORMAT OldFormat, PKSMULTIPLE_ITEM OldAttributeList, const KSDATARANGE *DataRange, const KSATTRIBUTE_LIST *AttributeRange);
typedef NTSTATUS (__stdcall *PFNKSPINSETDEVICESTATE)(PKSPIN Pin, KSSTATE ToState, KSSTATE FromState);
typedef BOOLEAN (__stdcall *PFNKSPINSETTIMER)(PKSPIN Pin, PKTIMER Timer, LARGE_INTEGER DueTime, PKDPC Dpc);
typedef void (__stdcall *PFNKSPINVOID)(PKSPIN Pin);
typedef void (__stdcall *PFNKSREMOVEEVENT)(PFILE_OBJECT FileObject, struct _KSEVENT_ENTRY *EventEntry);
typedef BOOLEAN (__stdcall *PFNKSSETTIMER)(PVOID Context, PKTIMER Timer, LARGE_INTEGER DueTime, PKDPC Dpc);
typedef void (__stdcall *PFNKSSTREAMPOINTER)(PKSSTREAM_POINTER StreamPointer);
typedef NTSTATUS (__stdcall *PFNQUERYMEDIUMSLIST)(PVOID Context, ULONG *MediumsCount, PKSPIN_MEDIUM *MediumList);
typedef NTSTATUS (__stdcall *PFNQUERYREFERENCESTRING)(PVOID Context, PWCHAR *String);
typedef void (__stdcall *PFNREFERENCEDEVICEOBJECT)(PVOID Context);
typedef NTSTATUS (__stdcall *PFNUSBCAMD_BulkReadWrite)(PVOID DeviceContext, USHORT PipeIndex, PVOID Buffer, ULONG BufferLength, PCOMMAND_COMPLETE_FUNCTION CommandComplete, PVOID CommandContext);
typedef NTSTATUS (__stdcall *PFNUSBCAMD_CancelBulkReadWrite)(PVOID DeviceContext, ULONG PipeIndex);
typedef NTSTATUS (__stdcall *PFNUSBCAMD_SetIsoPipeState)(PVOID DeviceContext, ULONG PipeStateFlags);
typedef NTSTATUS (__stdcall *PFNUSBCAMD_SetVideoFormat)(PVOID DeviceContext, PHW_STREAM_REQUEST_BLOCK pSrb);
typedef NTSTATUS (__stdcall *PFNUSBCAMD_WaitOnDeviceEvent)(PVOID DeviceContext, ULONG PipeIndex, PVOID Buffer, ULONG BufferLength, PCOMMAND_COMPLETE_FUNCTION EventComplete, PVOID EventContext, BOOLEAN LoopBack);
typedef ULONG PFN_COUNT;
typedef ULONG PFN_NUMBER;
typedef void (__stdcall *PFREE_ADAPTER_CHANNEL)(PDMA_ADAPTER DmaAdapter);
typedef void (__stdcall *PFREE_COMMON_BUFFER)(PDMA_ADAPTER DmaAdapter, ULONG Length, PHYSICAL_ADDRESS LogicalAddress, PVOID VirtualAddress, BOOLEAN CacheEnabled);
typedef void (__stdcall *PFREE_FUNCTION)(PVOID Buffer);
typedef void (__stdcall *PFREE_MAP_REGISTERS)(PDMA_ADAPTER DmaAdapter, PVOID MapRegisterBase, ULONG NumberOfMapRegisters);
typedef enum _FSINFOCLASS *PFS_INFORMATION_CLASS;
typedef G721_ADPCMWAVEFORMAT *PG721_ADPCMWAVEFORMAT;
typedef G723_ADPCMWAVEFORMAT *PG723_ADPCMWAVEFORMAT;
typedef struct _GENERAL_LOOKASIDE *PGENERAL_LOOKASIDE;
typedef GENERIC_MAPPING *PGENERIC_MAPPING;
typedef struct _DMA_ADAPTER *(__stdcall *PGET_DMA_ADAPTER)(PVOID Context, struct _DEVICE_DESCRIPTION *DeviceDescriptor, PULONG NumberOfMapRegisters);
typedef ULONG (__stdcall *PGET_DMA_ALIGNMENT)(PDMA_ADAPTER DmaAdapter);
typedef struct _GET_FP_CAPABILITY_OUT *PGET_FP_CAPABILITY_OUT;
typedef struct _GET_LOCAL_HOST_INFO1 *PGET_LOCAL_HOST_INFO1;
typedef struct _GET_LOCAL_HOST_INFO2 *PGET_LOCAL_HOST_INFO2;
typedef struct _GET_LOCAL_HOST_INFO3 *PGET_LOCAL_HOST_INFO3;
typedef struct _GET_LOCAL_HOST_INFO4 *PGET_LOCAL_HOST_INFO4;
typedef struct _GET_LOCAL_HOST_INFO5 *PGET_LOCAL_HOST_INFO5;
typedef struct _GET_LOCAL_HOST_INFO6 *PGET_LOCAL_HOST_INFO6;
typedef struct _GET_LOCAL_HOST_INFO7 *PGET_LOCAL_HOST_INFO7;
typedef NTSTATUS (__stdcall *PGET_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PMDL Mdl, PVOID CurrentVa, ULONG Length, PDRIVER_LIST_CONTROL ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice);
typedef ULONG (__stdcall *PGET_SET_DEVICE_DATA)(PVOID Context, ULONG DataType, PVOID Buffer, ULONG Offset, ULONG Length);
typedef struct _GET_UNIT_CAPABILITIES *PGET_UNIT_CAPABILITIES;
typedef struct _GET_UNIT_IDS *PGET_UNIT_IDS;
typedef struct _GET_UNIT_INFO *PGET_UNIT_INFO;
typedef NTSTATUS (__stdcall *PGPE_CLEAR_STATUS)(PDEVICE_OBJECT, PVOID);
typedef NTSTATUS (__stdcall *PGPE_CONNECT_VECTOR)(PDEVICE_OBJECT, ULONG, KINTERRUPT_MODE, BOOLEAN, PGPE_SERVICE_ROUTINE, PVOID, PVOID);
typedef NTSTATUS (__stdcall *PGPE_DISABLE_EVENT)(PDEVICE_OBJECT, PVOID);
typedef NTSTATUS (__stdcall *PGPE_DISCONNECT_VECTOR)(PVOID);
typedef NTSTATUS (__stdcall *PGPE_ENABLE_EVENT)(PDEVICE_OBJECT, PVOID);
typedef BOOLEAN (__stdcall *PGPE_SERVICE_ROUTINE)(PVOID, PVOID);
typedef GSM610WAVEFORMAT *PGSM610WAVEFORMAT;
typedef GUID *PGUID;
typedef __int16 *PHALF_PTR;
typedef HANDLE *PHANDLE;
typedef struct _HCD_ISO_STAT_COUNTERS *PHCD_ISO_STAT_COUNTERS;
typedef struct _HCD_STAT_COUNTERS *PHCD_STAT_COUNTERS;
typedef struct _HCD_STAT_INFORMATION_1 *PHCD_STAT_INFORMATION_1;
typedef struct _HCD_STAT_INFORMATION_2 *PHCD_STAT_INFORMATION_2;
typedef struct _HIDD_ATTRIBUTES *PHIDD_ATTRIBUTES;
typedef struct _HIDD_CONFIGURATION *PHIDD_CONFIGURATION;
typedef struct _HIDP_BUTTON_CAPS *PHIDP_BUTTON_CAPS;
typedef struct _HIDP_CAPS *PHIDP_CAPS;
typedef struct _HIDP_COLLECTION_DESC *PHIDP_COLLECTION_DESC;
typedef struct _HIDP_DATA *PHIDP_DATA;
typedef struct _HIDP_DEVICE_DESC *PHIDP_DEVICE_DESC;
typedef struct _HIDP_EXTENDED_ATTRIBUTES *PHIDP_EXTENDED_ATTRIBUTES;
typedef struct _HIDP_GETCOLDESC_DBG *PHIDP_GETCOLDESC_DBG;
typedef BOOLEAN (__stdcall *PHIDP_INSERT_SCANCODES)(PVOID Context, PCHAR NewScanCodes, ULONG Length);
typedef struct _HIDP_KEYBOARD_MODIFIER_STATE *PHIDP_KEYBOARD_MODIFIER_STATE;
typedef struct _HIDP_LINK_COLLECTION_NODE *PHIDP_LINK_COLLECTION_NODE;
typedef struct _HIDP_PREPARSED_DATA *PHIDP_PREPARSED_DATA;
typedef PUCHAR PHIDP_REPORT_DESCRIPTOR;
typedef struct _HIDP_REPORT_IDS *PHIDP_REPORT_IDS;
typedef struct _HIDP_UNKNOWN_TOKEN *PHIDP_UNKNOWN_TOKEN;
typedef struct _HIDP_VALUE_CAPS *PHIDP_VALUE_CAPS;
typedef struct _HID_COLLECTION_INFORMATION *PHID_COLLECTION_INFORMATION;
typedef struct _HID_DESCRIPTOR *PHID_DESCRIPTOR;
typedef struct _HID_DEVICE_ATTRIBUTES *PHID_DEVICE_ATTRIBUTES;
typedef struct _HID_DEVICE_EXTENSION *PHID_DEVICE_EXTENSION;
typedef struct _HID_DRIVER_CONFIG *PHID_DRIVER_CONFIG;
typedef struct _HID_INTERFACE_NOTIFY_PNP *PHID_INTERFACE_NOTIFY_PNP;
typedef struct _HID_MINIDRIVER_REGISTRATION *PHID_MINIDRIVER_REGISTRATION;
typedef void (__stdcall *PHID_STATUS_CHANGE)(PVOID Context, enum DeviceObjectState State);
typedef struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO *PHID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO;
typedef struct _HID_XFER_PACKET *PHID_XFER_PACKET;
typedef HKEY *PHKEY;
typedef struct _HWPROFILE_CHANGE_NOTIFICATION *PHWPROFILE_CHANGE_NOTIFICATION;
typedef void (__stdcall *PHW_CANCEL_SRB)(PHW_STREAM_REQUEST_BLOCK SRB);
typedef void (__stdcall *PHW_CLOCK_FUNCTION)(PHW_TIME_CONTEXT HwTimeContext);
typedef struct _HW_CLOCK_OBJECT *PHW_CLOCK_OBJECT;
typedef struct _HW_EVENT_DESCRIPTOR *PHW_EVENT_DESCRIPTOR;
typedef NTSTATUS (__stdcall *PHW_EVENT_ROUTINE)(PHW_EVENT_DESCRIPTOR EventDescriptor);
typedef struct _HW_INITIALIZATION_DATA *PHW_INITIALIZATION_DATA;
typedef BOOLEAN (__stdcall *PHW_INTERRUPT)(PVOID DeviceExtension);
typedef void (__stdcall *PHW_PRIORITY_ROUTINE)(PVOID Context);
typedef void (__stdcall *PHW_QUERY_CLOCK_ROUTINE)(PHW_TIME_CONTEXT TimeContext);
typedef void (__stdcall *PHW_RECEIVE_DEVICE_SRB)(PHW_STREAM_REQUEST_BLOCK SRB);
typedef void (__stdcall *PHW_RECEIVE_STREAM_CONTROL_SRB)(struct _HW_STREAM_REQUEST_BLOCK *SRB);
typedef void (__stdcall *PHW_RECEIVE_STREAM_DATA_SRB)(struct _HW_STREAM_REQUEST_BLOCK *SRB);
typedef void (__stdcall *PHW_REQUEST_TIMEOUT_HANDLER)(PHW_STREAM_REQUEST_BLOCK SRB);
typedef BOOLEAN (__stdcall *PHW_RESET_ADAPTER)(PVOID DeviceExtension);
typedef struct _HW_STREAM_DESCRIPTOR *PHW_STREAM_DESCRIPTOR;
typedef struct _HW_STREAM_HEADER *PHW_STREAM_HEADER;
typedef struct _HW_STREAM_INFORMATION *PHW_STREAM_INFORMATION;
typedef struct _HW_STREAM_OBJECT *PHW_STREAM_OBJECT;
typedef struct _HW_STREAM_REQUEST_BLOCK *PHW_STREAM_REQUEST_BLOCK;
typedef void (__stdcall *PHW_TIMER_ROUTINE)(PVOID Context);
typedef struct _HW_TIME_CONTEXT *PHW_TIME_CONTEXT;
typedef LARGE_INTEGER PHYSICAL_ADDRESS;
typedef struct _PHY_CONFIGURATION_PACKET PHY_CONFIGURATION_PACKET;
typedef struct $E56F877AE116898CEBF188009740BA30 PID_MAP;
typedef struct _IEEE1394_SCATTER_GATHER_HEADER *PIEEE1394_SCATTER_GATHER_HEADER;
typedef IMAADPCMWAVEFORMAT *PIMAADPCMWAVEFORMAT;
typedef struct _INITIAL_PRIVILEGE_SET *PINITIAL_PRIVILEGE_SET;
typedef int *PINT;
typedef signed __int16 *PINT16;
typedef signed int *PINT32;
typedef signed __int64 *PINT64;
typedef signed __int8 *PINT8;
typedef struct _INTERFACE *PINTERFACE;
typedef void (__stdcall *PINTERFACE_DEREFERENCE)(PVOID Context);
typedef void (__stdcall *PINTERFACE_REFERENCE)(PVOID Context);
typedef enum _INTERFACE_TYPE *PINTERFACE_TYPE;
typedef IInterruptSync *PINTERRUPTSYNC;
typedef NTSTATUS (__stdcall *PINTERRUPTSYNCROUTINE)(struct IInterruptSync *InterruptSync, PVOID DynamicContext);
typedef int *PINT_PTR;
typedef struct _IO_ADDRESS *PIO_ADDRESS;
typedef enum _IO_ALLOCATION_ACTION *PIO_ALLOCATION_ACTION;
typedef void (__stdcall *PIO_APC_ROUTINE)(PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG Reserved);
typedef struct _IO_COMPLETION_CONTEXT *PIO_COMPLETION_CONTEXT;
typedef NTSTATUS (__stdcall *PIO_COMPLETION_ROUTINE)(PDEVICE_OBJECT DeviceObject, PIRP Irp, PVOID Context);
typedef enum _IO_COMPLETION_ROUTINE_RESULT *PIO_COMPLETION_ROUTINE_RESULT;
typedef struct _IO_CSQ *PIO_CSQ;
typedef void (__stdcall *PIO_CSQ_ACQUIRE_LOCK)(PIO_CSQ Csq, PKIRQL Irql);
typedef void (__stdcall *PIO_CSQ_COMPLETE_CANCELED_IRP)(PIO_CSQ Csq, PIRP Irp);
typedef void (__stdcall *PIO_CSQ_INSERT_IRP)(struct _IO_CSQ *Csq, PIRP Irp);
typedef NTSTATUS (__stdcall *PIO_CSQ_INSERT_IRP_EX)(struct _IO_CSQ *Csq, PIRP Irp, PVOID InsertContext);
typedef struct _IO_CSQ_IRP_CONTEXT *PIO_CSQ_IRP_CONTEXT;
typedef PIRP (__stdcall *PIO_CSQ_PEEK_NEXT_IRP)(PIO_CSQ Csq, PIRP Irp, PVOID PeekContext);
typedef void (__stdcall *PIO_CSQ_RELEASE_LOCK)(PIO_CSQ Csq, KIRQL Irql);
typedef void (__stdcall *PIO_CSQ_REMOVE_IRP)(PIO_CSQ Csq, PIRP Irp);
typedef void (__stdcall *PIO_DPC_ROUTINE)(PKDPC Dpc, struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PVOID Context);
typedef struct _IO_ERROR_LOG_MESSAGE *PIO_ERROR_LOG_MESSAGE;
typedef struct _IO_ERROR_LOG_PACKET *PIO_ERROR_LOG_PACKET;
typedef struct _IO_REMOVE_LOCK *PIO_REMOVE_LOCK;
typedef struct _IO_REMOVE_LOCK_TRACKING_BLOCK *PIO_REMOVE_LOCK_TRACKING_BLOCK;
typedef struct _IO_RESOURCE_DESCRIPTOR *PIO_RESOURCE_DESCRIPTOR;
typedef struct _IO_RESOURCE_LIST *PIO_RESOURCE_LIST;
typedef struct _IO_RESOURCE_REQUIREMENTS_LIST *PIO_RESOURCE_REQUIREMENTS_LIST;
typedef struct _IO_SECURITY_CONTEXT *PIO_SECURITY_CONTEXT;
typedef struct _IO_STACK_LOCATION *PIO_STACK_LOCATION;
typedef struct _IO_STATUS_BLOCK *PIO_STATUS_BLOCK;
typedef struct _IO_TIMER *PIO_TIMER;
typedef void (__stdcall *PIO_TIMER_ROUTINE)(struct _DEVICE_OBJECT *DeviceObject, PVOID Context);
typedef struct _IO_WORKITEM *PIO_WORKITEM;
typedef void (__stdcall *PIO_WORKITEM_ROUTINE)(PDEVICE_OBJECT DeviceObject, PVOID Context);
typedef struct _IPCR *PIPCR;
typedef struct _IRB *PIRB;
typedef struct _IRP *PIRP;
typedef struct _ISOCH_DESCRIPTOR *PISOCH_DESCRIPTOR;
typedef struct _ISOCH_HEADER *PISOCH_HEADER;
typedef KAFFINITY *PKAFFINITY;
typedef struct _KAPC *PKAPC;
typedef struct _KBUGCHECK_CALLBACK_RECORD *PKBUGCHECK_CALLBACK_RECORD;
typedef void (__stdcall *PKBUGCHECK_CALLBACK_ROUTINE)(PVOID Buffer, ULONG Length);
typedef struct _KBUGCHECK_DUMP_IO *PKBUGCHECK_DUMP_IO;
typedef struct _KBUGCHECK_REASON_CALLBACK_RECORD *PKBUGCHECK_REASON_CALLBACK_RECORD;
typedef void (__stdcall *PKBUGCHECK_REASON_CALLBACK_ROUTINE)(KBUGCHECK_CALLBACK_REASON Reason, struct _KBUGCHECK_REASON_CALLBACK_RECORD *Record, PVOID ReasonSpecificData, ULONG ReasonSpecificDataLength);
typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA *PKBUGCHECK_SECONDARY_DUMP_DATA;
typedef void (__stdcall *PKDEFERRED_ROUTINE)(struct _KDPC *Dpc, PVOID DeferredContext, PVOID SystemArgument1, PVOID SystemArgument2);
typedef struct _KDEVICE_QUEUE *PKDEVICE_QUEUE;
typedef struct _KDEVICE_QUEUE_ENTRY *PKDEVICE_QUEUE_ENTRY;
typedef struct _KDPC *PKDPC;
typedef struct _KEVENT *PKEVENT;
typedef struct _KEYBOARD_ID_EX *PKEYBOARD_ID_EX;
typedef struct _KEYBOARD_PORT_WMI_STD_DATA *PKEYBOARD_PORT_WMI_STD_DATA;
typedef struct _KEY_BASIC_INFORMATION *PKEY_BASIC_INFORMATION;
typedef struct _KEY_FULL_INFORMATION *PKEY_FULL_INFORMATION;
typedef struct _KEY_NODE_INFORMATION *PKEY_NODE_INFORMATION;
typedef struct _KEY_USER_FLAGS_INFORMATION *PKEY_USER_FLAGS_INFORMATION;
typedef struct _KEY_VALUE_BASIC_INFORMATION *PKEY_VALUE_BASIC_INFORMATION;
typedef struct _KEY_VALUE_ENTRY *PKEY_VALUE_ENTRY;
typedef struct _KEY_VALUE_FULL_INFORMATION *PKEY_VALUE_FULL_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION *PKEY_VALUE_PARTIAL_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
typedef struct _KEY_WRITE_TIME_INFORMATION *PKEY_WRITE_TIME_INFORMATION;
typedef struct _KFLOATING_SAVE *PKFLOATING_SAVE;
typedef struct _KINTERRUPT *PKINTERRUPT;
typedef void (*PKINTERRUPT_ROUTINE)(void);
typedef ULONG_PTR (__stdcall *PKIPI_BROADCAST_WORKER)(ULONG_PTR Argument);
typedef PVOID PKIPI_CONTEXT;
typedef struct _KIPI_COUNTS *PKIPI_COUNTS;
typedef void (__stdcall *PKIPI_WORKER)(PKIPI_CONTEXT PacketContext, PVOID Parameter1, PVOID Parameter2, PVOID Parameter3);
typedef KIRQL *PKIRQL;
typedef void (__stdcall *PKKERNEL_ROUTINE)(struct _KAPC *Apc, PKNORMAL_ROUTINE *NormalRoutine, PVOID *NormalContext, PVOID *SystemArgument1, PVOID *SystemArgument2);
typedef struct _KMUTANT *PKMUTANT;
typedef struct _KMUTANT *PKMUTEX;
typedef void (__stdcall *PKNORMAL_ROUTINE)(PVOID NormalContext, PVOID SystemArgument1, PVOID SystemArgument2);
typedef void (__stdcall *PKRUNDOWN_ROUTINE)(struct _KAPC *Apc);
typedef struct $FBE7179BAB40555F1A13AD3C5BC3BB71 *PKSAC3_ALTERNATE_AUDIO;
typedef struct $9ADD4811563784E97592213CBF8060F3 *PKSAC3_BIT_STREAM_MODE;
typedef struct $299134A1587F81C88B1AF91D3DBFCA39 *PKSAC3_DIALOGUE_LEVEL;
typedef struct $E4F7CAB5B6B7D45C514D7552CCE8FB09 *PKSAC3_DOWNMIX;
typedef struct $2FCB7B16F35A994219C907239F9496DC *PKSAC3_ERROR_CONCEALMENT;
typedef struct $12065485545C98CF3EA596DDCCDF0ED5 *PKSAC3_ROOM_TYPE;
typedef struct _KSALLOCATOR_DISPATCH *PKSALLOCATOR_DISPATCH;
typedef struct $24396BA7B1ABFC61208375C7C88D8B5F *PKSALLOCATOR_FRAMING;
typedef struct $E1D601DFB9F50A58CFF7A79389CE7A63 *PKSALLOCATOR_FRAMING_EX;
typedef struct $8276AF68B2084DDEC7235E96B5A3DDF6 *PKSATTRIBUTE;
typedef struct $FF5E69F4B253A5B06BAE6BEDF0A709ED *PKSATTRIBUTE_LIST;
typedef struct $97BF4F75CC2B13E4CD29FCADBEF14990 *PKSAUDIO_CHANNEL_CONFIG;
typedef struct $66CF5E28886A6CE6C0E44A3DF6E2CD53 *PKSAUDIO_COPY_PROTECTION;
typedef struct $52AD6460DAD19A3D48443005CDCF2412 *PKSAUDIO_DYNAMIC_RANGE;
typedef struct $BF6BFD8678B7E7ABDC56122D693BAF10 *PKSAUDIO_MIXCAP_TABLE;
typedef struct $12A419A691843E3FACBCDACF473D8E54 *PKSAUDIO_MIXLEVEL;
typedef struct $1D3D1B49856810D80BCDEEA6F14E981E *PKSAUDIO_MIX_CAPS;
typedef struct $8F18F53EFBEBE9496980818DD790123F *PKSAUDIO_POSITION;
typedef struct $C9C4D03C150E869FFC5FB33A10EAB149 *PKSAUDIO_PREFERRED_STATUS;
typedef struct $FDD48878D337B9676F07B6A46EC3FECC *PKSAUDIO_STEREO_ENHANCE;
typedef struct KSAUTOMATION_TABLE_ *PKSAUTOMATION_TABLE;
typedef struct $58C2A16435EA044F8AD69979A6836AA4 *PKSBUFFER_ITEM;
typedef struct $9CC657B7E0AE245246966219C61A944E *PKSCLOCK_CREATE;
typedef struct _KSCLOCK_DISPATCH *PKSCLOCK_DISPATCH;
typedef struct $F0AD97B4DA1FA55F31FC7FE8AE7CC03A *PKSCLOCK_FUNCTIONTABLE;
typedef struct $91BD25BE856B91F4F94C146E39BAA29E *PKSCOMPONENTID;
typedef struct $DCCCDBDB2D2AC461237A75FB18C0449E *PKSCORRELATED_TIME;
typedef union $A4FB595EF421231CAF150DDD3288A6D5 *PKSDATAFORMAT;
typedef union $A4FB595EF421231CAF150DDD3288A6D5 *PKSDATARANGE;
typedef struct $A156F3783D3AF89709906294AAADEE96 *PKSDATARANGE_AUDIO;
typedef struct $DCA1691E12E502D611F5426518CFEFB5 *PKSDATARANGE_MUSIC;
typedef PVOID PKSDEFAULTCLOCK;
typedef KSIDENTIFIER *PKSDEGRADE;
typedef struct _KSDEVICE *PKSDEVICE;
typedef struct _KSDEVICE_DESCRIPTOR *PKSDEVICE_DESCRIPTOR;
typedef struct _KSDEVICE_DISPATCH *PKSDEVICE_DISPATCH;
typedef struct $0B037F2534779A05E9AEAE9A3A29D997 *PKSDISPATCH_TABLE;
typedef struct $C18AA754B44D3B0CE088F6A6B0863744 *PKSDISPLAYCHANGE;
typedef struct $0237C65E8322975CE5980DC9C74E362C *PKSDPC_ITEM;
typedef struct $6C32D841228ADC85BF22C8C3850F7AC4 *PKSDRMAUDIOSTREAM_CONTENTID;
typedef struct $9E1ED747B9CD39E7270D6384935529E0 *PKSDS3D_BUFFER_ALL;
typedef struct $8FE9905039884FA12A33AF170E497D82 *PKSDS3D_BUFFER_CONE_ANGLES;
typedef struct $433BAB6AAAB02EEB6CF36ABDE1A4217C *PKSDS3D_HRTF_FILTER_FORMAT_MSG;
typedef struct $38332C6D8513F636DCCBCCABE200BE7A *PKSDS3D_HRTF_INIT_MSG;
typedef struct $FB17C9225429EF808B128BCE70FFD0DB *PKSDS3D_HRTF_PARAMS_MSG;
typedef struct $AC9A5C69A2E8BFD7F981D24477498145 *PKSDS3D_ITD_PARAMS;
typedef struct $ECC65BA02B08F93DE1D3AD2A06446B79 *PKSDS3D_ITD_PARAMS_MSG;
typedef struct $518AEB1FEE0990110D4FC7592EB5CC55 *PKSDS3D_LISTENER_ALL;
typedef struct $6D40E8E2125A3BBCEB5B162FD51EF33B *PKSDS3D_LISTENER_ORIENTATION;
typedef struct _KSEMAPHORE *PKSEMAPHORE;
typedef struct $686FDF1C0C03C3D9039AD8B14FB9C99A *PKSERROR;
typedef BOOLEAN (__stdcall *PKSERVICE_ROUTINE)(struct _KINTERRUPT *Interrupt, PVOID ServiceContext);
typedef KSIDENTIFIER *PKSEVENT;
typedef struct $37B8E770EA172EE03D1653C7B692D623 *PKSEVENTDATA;
typedef struct _KSEVENT_ENTRY *PKSEVENT_ENTRY;
typedef struct $BBE51AA07033B60919BF464EA8FAB770 *PKSEVENT_ITEM;
typedef struct $A35330E71724D40A1BD15D9C53ABB072 *PKSEVENT_SET;
typedef struct $BDE91A4D4766441856A2EB7036E539BD *PKSEVENT_TIME_INTERVAL;
typedef struct $A07373D2A5755254DCD028456AB4EC3B *PKSEVENT_TIME_MARK;
typedef struct $0D4D90B30C078E58E26CBA964C3C5A4B *PKSE_NODE;
typedef struct $2CC32A13BC47B0ADD425440A5881DEFA *PKSFASTMETHOD_ITEM;
typedef struct $C0F7BB227D2914979DE22500D0E4A4BA *PKSFASTPROPERTY_ITEM;
typedef struct _KSFILTER *PKSFILTER;
typedef struct _KSFILTERFACTORY *PKSFILTERFACTORY;
typedef struct _KSFILTER_DESCRIPTOR *PKSFILTER_DESCRIPTOR;
typedef struct _KSFILTER_DISPATCH *PKSFILTER_DISPATCH;
typedef struct $52BD71AC0F61B53F3E44045ED088295E *PKSFRAMETIME;
typedef struct _KSGATE *PKSGATE;
typedef struct _KSGOP_USERDATA *PKSGOP_USERDATA;
typedef struct KSGRAPHMANAGER_FUNCTIONTABLE PKSGRAPHMANAGER_FUNCTIONTABLE;
typedef struct $E1A151A2F6A6C209F977C1A4EAB9F7DF *PKSHANDSHAKE;
typedef struct $117E3A994AEBF040E18388CACE709509 *PKSIDENTIFIER;
typedef struct $CA0DACF90AABDE33CADDF7416F0C17F2 *PKSINTERVAL;
typedef struct _KSMAPPING *PKSMAPPING;
typedef KSIDENTIFIER *PKSMETHOD;
typedef struct $DE8F492EE455543594962797C1392B09 *PKSMETHOD_ITEM;
typedef struct $D9863DBF23EBBD7F74D85DDE027E035E *PKSMETHOD_SET;
typedef struct _KSMPEGVID_RECT *PKSMPEGVID_RECT;
typedef struct $97739C7249C02ACEBAF17DFC34E3F72B *PKSMULTIPLE_DATA_PROP;
typedef struct $D0C2582348DF16EE31650672742EA602 *PKSMULTIPLE_ITEM;
typedef struct $DE2D2125000B90024B7DD637FE0DF34E *PKSMUSICFORMAT;
typedef struct _KSM_BDA_PIN *PKSM_BDA_PIN;
typedef struct _KSM_BDA_PIN_PAIR *PKSM_BDA_PIN_PAIR;
typedef struct $99C6912CDB5C12269FDD73BE73429D8B *PKSM_NODE;
typedef struct _KSM_PIN *PKSM_PIN;
typedef struct _KSM_PIN_PAIR *PKSM_PIN_PAIR;
typedef struct $A4CC0F087DE00420119DAAB092DFFA3E *PKSNODEPROPERTY;
typedef struct $6B8E9FF8FB4DE59DE7DA4092DA92354D *PKSNODEPROPERTY_AUDIO_3D_LISTENER;
typedef struct $8251F34BCF49AE1C266F7CD180791646 *PKSNODEPROPERTY_AUDIO_CHANNEL;
typedef struct $7445C9FCFCC2899651BCA0E341BC0369 *PKSNODEPROPERTY_AUDIO_DEV_SPECIFIC;
typedef struct $4436E3E3B2A9BAC50D793DBB422657C7 *PKSNODEPROPERTY_AUDIO_PROPERTY;
typedef struct $3E8BFD172CC0232DA5E7071EC2A0A89F *PKSNODE_CREATE;
typedef struct _KSNODE_DESCRIPTOR *PKSNODE_DESCRIPTOR;
typedef struct $42F99BA4BF00EE2B1B9AFA99FBE7C8B1 *PKSOBJECT_CREATE;
typedef struct $8F4AC9317002A11552A6341450417F12 *PKSOBJECT_CREATE_ITEM;
typedef struct _KSPIN *PKSPIN;
typedef struct $01091B9DEBEBC2354EBF1594EEF6BE89 *PKSPIN_CINSTANCES;
typedef enum $99797C396B1D447BBE63E5346EF4FE3A *PKSPIN_COMMUNICATION;
typedef struct $58C2C1BF6568EE28BD9B872E6BA03976 *PKSPIN_CONNECT;
typedef enum $E5E05FC88E8385A5216FCD37A95BAA87 *PKSPIN_DATAFLOW;
typedef struct $4C3688935B439E6B73B5D283DA0CA595 *PKSPIN_DESCRIPTOR;
typedef struct _KSPIN_DESCRIPTOR_EX *PKSPIN_DESCRIPTOR_EX;
typedef struct _KSPIN_DISPATCH *PKSPIN_DISPATCH;
typedef KSIDENTIFIER *PKSPIN_INTERFACE;
typedef KSPIN_LOCK *PKSPIN_LOCK;
typedef KSIDENTIFIER *PKSPIN_MEDIUM;
typedef struct $1889F3BAB83DF1AC38A4E0627115688D *PKSPIN_PHYSICALCONNECTION;
typedef struct $D611436986C6FEF0F654B123D787805F *PKSPRIORITY;
typedef struct _KSPROCESSPIN *PKSPROCESSPIN;
typedef struct _KSPROCESSPIN_INDEXENTRY *PKSPROCESSPIN_INDEXENTRY;
typedef KSIDENTIFIER *PKSPROPERTY;
typedef struct $9283D0FA6633E8568FC062864CF70F24 *PKSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS_S;
typedef struct $2AA7958816AF26AF0A1E54EEE587A92C *PKSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE_S;
typedef struct $B4A25942D193F2EAA86C395C02EC729E *PKSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE_S;
typedef union $C9F2A16A1B5FC998B91DA494984E0FDB *PKSPROPERTY_BOUNDS_LONG;
typedef union $49DE94CD170A783608C4A6CA5E13CF1F *PKSPROPERTY_BOUNDS_LONGLONG;
typedef struct $9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_CAMERACONTROL_S;
typedef BOOL *PKSPROPERTY_COMPOSIT_ON;
typedef struct $6F08919EF02DAA05323F80511ECED656 *PKSPROPERTY_CROSSBAR_CAPS_S;
typedef struct $05B1F1BDA3A085B0ABA09A777878EB7C *PKSPROPERTY_CROSSBAR_PININFO_S;
typedef struct $ECD9D23603D8BADEE24156B8BE3276B4 *PKSPROPERTY_CROSSBAR_ROUTE_S;
typedef struct $155DA1A439C400442DF8DC3CA0B009F1 *PKSPROPERTY_DESCRIPTION;
typedef struct $1F0027E2ABF976FB8AD72E88DC9BB28B *PKSPROPERTY_DROPPEDFRAMES_CURRENT_S;
typedef struct _KSPROPERTY_GRAPHMANAGER_INTERFACE *PKSPROPERTY_GRAPHMANAGER_INTERFACE;
typedef struct $33D5B48BFB25F68EBEA0D059F2171BBA *PKSPROPERTY_ITEM;
typedef struct $61992E1E6DA7B91ECC7FA4A74B115A04 *PKSPROPERTY_MEDIAAVAILABLE;
typedef struct $BC7A094E99B893F962A170A802EFE988 *PKSPROPERTY_MEMBERSHEADER;
typedef struct $707EC234ECD45402760253CA9174D40C *PKSPROPERTY_MEMBERSLIST;
typedef struct $7D6AD1D4C0599A70ED2A75DF53A62D54 *PKSPROPERTY_POSITIONS;
typedef struct $0E076CBD8F5A7ED08B697C5009EDFCFF *PKSPROPERTY_SERIAL;
typedef struct $F1FF9EB17A5B0DC512AB60E4FE6215DC *PKSPROPERTY_SERIALHDR;
typedef struct $AD455FBC572689F791F2277291BE97AE *PKSPROPERTY_SET;
typedef struct _KSPROPERTY_SPHLI *PKSPROPERTY_SPHLI;
typedef struct _KSPROPERTY_SPPAL *PKSPROPERTY_SPPAL;
typedef struct $BA718A362089753A7EB60B21429558A7 *PKSPROPERTY_STEPPING_LONG;
typedef struct $631353BB22A3E1576EFF7DC760D2A07D *PKSPROPERTY_STEPPING_LONGLONG;
typedef struct $48207AC35C517F533F0BE91ADB0B9FCA *PKSPROPERTY_TUNER_CAPS_S;
typedef struct $B62AAF3B70FEB5C8D5EF5D71926BC992 *PKSPROPERTY_TUNER_FREQUENCY_S;
typedef struct $23496AA6B538BC04EA278D40B88E7395 *PKSPROPERTY_TUNER_IF_MEDIUM_S;
typedef struct $E4D39CEDA60A9A842177218EB3078B88 *PKSPROPERTY_TUNER_INPUT_S;
typedef struct $358B21B769DBB67C3050F61FED658732 *PKSPROPERTY_TUNER_MODE_CAPS_S;
typedef struct $85CBE24E9ED55DBB779718CA5D73A273 *PKSPROPERTY_TUNER_MODE_S;
typedef struct $060F75F85D33090A279ABE5EFCC5AB4A *PKSPROPERTY_TUNER_STANDARD_S;
typedef struct $E15D7B7CA61FF43DF93005DFD376A388 *PKSPROPERTY_TUNER_STATUS_S;
typedef struct $AAD79452FC68247846A5E3B058A03BB4 *PKSPROPERTY_TVAUDIO_CAPS_S;
typedef struct $85CBE24E9ED55DBB779718CA5D73A273 *PKSPROPERTY_TVAUDIO_S;
typedef struct $EE7A277138FF7ACF03A1E9A4C6095702 *PKSPROPERTY_VALUES;
typedef struct $E5C551D5220B94E855DFD2A46F971A3B *PKSPROPERTY_VBICODECFILTERING_CC_SUBSTREAMS_S;
typedef struct $DB6743270A05FF5B7AB17563AEBB3A96 *PKSPROPERTY_VBICODECFILTERING_NABTS_SUBSTREAMS_S;
typedef struct $8630A1F515F1D9088A894BA95A0F4D66 *PKSPROPERTY_VBICODECFILTERING_SCANLINES_S;
typedef struct $1CE0BD7852F87226759D0185D4AC1198 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_CC_PIN_S;
typedef struct $FB8A4E21AD43EDA8BFCCEEFE99FC59C9 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_CC_S;
typedef struct $1F16BBD766B6BEFB723ABEAEF53457A3 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_PIN_S;
typedef struct $07B7FBDB71A394C363DCB969C30B9F57 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_S;
typedef struct $E4A6BAB3223452EC45F6B117A37FFCF9 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_PIN_S;
typedef struct $190FAF90ED71AB17CA7DE27E94D1BCF3 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_S;
typedef struct $441EBF211493C42D9642F77D873F68D1 *PKSPROPERTY_VIDEOCOMPRESSION_GETINFO_S;
typedef struct $6957CE76948A33FD66E00469AB6817B0 *PKSPROPERTY_VIDEOCOMPRESSION_S;
typedef struct $C1C3EF408C46606406ABFE21B3E99DE8 *PKSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE_S;
typedef struct $B04A80E61A6C52E3FD4D22A5F125C77E *PKSPROPERTY_VIDEOCONTROL_CAPS_S;
typedef struct $D2D205A4E5DA2498F5010F3E3EADEEBB *PKSPROPERTY_VIDEOCONTROL_FRAME_RATES_S;
typedef struct $CB16EFCEDA39FCD4D0BC1BDE67199271 *PKSPROPERTY_VIDEOCONTROL_MODE_S;
typedef struct $56FA1B9DDCE9D648FE900988960BAD6F *PKSPROPERTY_VIDEODECODER_CAPS_S;
typedef struct $764676431BC78EE50306C71955FB365D *PKSPROPERTY_VIDEODECODER_S;
typedef struct $D86AEF8896DDE0BDF211E48E78F8BB6F *PKSPROPERTY_VIDEODECODER_STATUS_S;
typedef struct $9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_VIDEOENCODER_S;
typedef struct $9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_VIDEOPROCAMP_S;
typedef struct _KSP_BDA_NODE_PIN *PKSP_BDA_NODE_PIN;
typedef struct $7DA6CEE7E211DED2F61B14AB99948ADC *PKSP_DRMAUDIOSTREAM_CONTENTID;
typedef struct $A4CC0F087DE00420119DAAB092DFFA3E *PKSP_NODE;
typedef struct $01DCE0ED23F464638BF845FBE919C7FC *PKSP_NODE_ESPID;
typedef struct $69DAD432D0597BAB6A67398C913F94DB *PKSP_PIN;
typedef struct $EF98EE567420140E285BF0657F46953F *PKSP_TIMEFORMAT;
typedef struct $1C8C43135D010607C9E39DAEFBEEA658 *PKSQUALITY;
typedef struct $3878B18F15C290CF7BC80116234DE41C *PKSQUALITY_MANAGER;
typedef struct $9D2EE2D5E082F56CCDE737471FBF8D82 *PKSQUERYBUFFER;
typedef struct $7DB559BE1DE343E17A8A94B6F2E38031 *PKSRATE;
typedef struct $26873349DB0A36B1F3161FA857CA70AC *PKSRATE_CAPABILITY;
typedef struct $204C6CB5B1CC0D35B371E5C594718A83 *PKSRESOLUTION;
typedef struct $9B0A4478CCC03CE069B62A821FAD8B21 *PKSSCATTER_GATHER;
typedef enum $B4EFCEC8C68CF8B596CEF68A8AD15C1A *PKSSTATE;
typedef struct $1C72DF34A2E997094BDDFB37C83896FB *PKSSTREAMALLOCATOR_FUNCTIONTABLE;
typedef struct $E21F85AFDEE9EAF37885ADBF8938BB0C *PKSSTREAMALLOCATOR_STATUS;
typedef struct $B03639772012518ABC96BF05B41D5C12 *PKSSTREAMALLOCATOR_STATUS_EX;
typedef struct $87CE1B284ED7C4D9787DE2C17B5E3229 *PKSSTREAM_HEADER;
typedef struct _KSSTREAM_POINTER *PKSSTREAM_POINTER;
typedef struct _KSSTREAM_POINTER_OFFSET *PKSSTREAM_POINTER_OFFSET;
typedef void (__stdcall *PKSTART_ROUTINE)(PVOID StartContext);
typedef struct $E7BDCECB0924BC4C6E03B7EEA1B31BA1 *PKSTIME;
typedef struct $D8768C71F24D405D4B7DEC8016730D6C *PKSTOPOLOGY;
typedef struct $B0BC4AADD5C9FF12157D028DEF0CCD6A *PKSTOPOLOGY_CONNECTION;
typedef struct $EA4AC72E281160164D445E15D4425ADE *PKSVPMAXPIXELRATE;
typedef struct $5B98A3A85E20DBA203FE93F0C6DC9B6B *PKSVPSIZE_PROP;
typedef struct $BFD35443418CDCF1187E122E74A5B815 *PKSVPSURFACEPARAMS;
typedef struct $0606DB5FE2099CCDC829F33B29607B55 *PKSWAVETABLE_WAVE_DESC;
typedef struct $2E8FF8F0F30DAB89972BBD12E0BA3A8E *PKSWAVE_BUFFER;
typedef struct $F0DE5EAC046D7D32AA534DC253D377C4 *PKSWAVE_COMPATCAPS;
typedef struct $816E3560EF21380C948191659F672DF0 *PKSWAVE_INPUT_CAPABILITIES;
typedef struct $E79116A6AA0CFF653592F57D81FA8A4C *PKSWAVE_OUTPUT_CAPABILITIES;
typedef struct $436EEAB87169589F8FF54A3E6B966B58 *PKSWAVE_VOLUME;
typedef PVOID PKSWORKER;
typedef BOOLEAN (__stdcall *PKSYNCHRONIZE_ROUTINE)(PVOID SynchronizeContext);
typedef struct _KSYSTEM_TIME *PKSYSTEM_TIME;
typedef struct tagKS_AMVPDATAINFO *PKS_AMVPDATAINFO;
typedef struct tagKS_AMVPDIMINFO *PKS_AMVPDIMINFO;
typedef struct tagKS_AMVPSIZE *PKS_AMVPSIZE;
typedef struct $D63E714A239F9C0D1FE2D222C2E0E7D5 *PKS_AM_ExactRateChange;
typedef struct $3A744348A6C9F73853F568E19FD6B4F7 *PKS_AM_SimpleRateChange;
typedef struct tagKS_AnalogVideoInfo *PKS_ANALOGVIDEOINFO;
typedef struct tagKS_BDA_FRAME_INFO *PKS_BDA_FRAME_INFO;
typedef struct tagKS_BITMAPINFOHEADER *PKS_BITMAPINFOHEADER;
typedef struct _KS_COLCON *PKS_COLCON;
typedef struct $3990AA19D6F3231E9709B3F98F437D89 *PKS_COMPRESSION;
typedef struct _KS_COPY_MACROVISION *PKS_COPY_MACROVISION;
typedef enum $AB84C8955069406F80CB719201B159DD *PKS_COPY_MACROVISION_LEVEL;
typedef struct tagKS_DATAFORMAT_DV_AVC *PKS_DATAFORMAT_DV_AVC;
typedef struct tagKS_DATAFORMAT_MPEG2TS_AVC *PKS_DATAFORMAT_MPEG2TS_AVC;
typedef struct tagKS_DATAFORMAT_VBIINFOHEADER *PKS_DATAFORMAT_VBIINFOHEADER;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER *PKS_DATAFORMAT_VIDEOINFOHEADER;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER2 *PKS_DATAFORMAT_VIDEOINFOHEADER2;
typedef struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE *PKS_DATAFORMAT_VIDEOINFO_PALETTE;
typedef struct tagKS_DATARANGE_ANALOGVIDEO *PKS_DATARANGE_ANALOGVIDEO;
typedef struct tagKS_DATARANGE_BDA_ANTENNA *PKS_DATARANGE_BDA_ANTENNA;
typedef struct tagKS_DATARANGE_BDA_TRANSPORT *PKS_DATARANGE_BDA_TRANSPORT;
typedef struct tagKS_DATARANGE_DVVIDEO *PKS_DATARANGE_DVVIDEO;
typedef struct tagKS_DATARANGE_DV_AVC *PKS_DATARANGE_DV_AVC;
typedef struct tagKS_DATARANGE_MPEG1_VIDEO *PKS_DATARANGE_MPEG1_VIDEO;
typedef struct tagKS_DATARANGE_MPEG2TS_AVC *PKS_DATARANGE_MPEG2TS_AVC;
typedef struct tagKS_DATARANGE_MPEG2_VIDEO *PKS_DATARANGE_MPEG2_VIDEO;
typedef struct tagKS_DATARANGE_VIDEO *PKS_DATARANGE_VIDEO;
typedef struct tagKS_DATARANGE_VIDEO2 *PKS_DATARANGE_VIDEO2;
typedef struct tagKS_DATARANGE_VIDEO_PALETTE *PKS_DATARANGE_VIDEO_PALETTE;
typedef struct tagKS_DATARANGE_VIDEO_VBI *PKS_DATARANGE_VIDEO_VBI;
typedef struct _KS_DVDCOPY_BUSKEY *PKS_DVDCOPY_BUSKEY;
typedef struct _KS_DVDCOPY_CHLGKEY *PKS_DVDCOPY_CHLGKEY;
typedef struct _KS_DVDCOPY_DISCKEY *PKS_DVDCOPY_DISCKEY;
typedef struct _KS_DVDCOPY_REGION *PKS_DVDCOPY_REGION;
typedef struct _KS_DVDCOPY_SET_COPY_STATE *PKS_DVDCOPY_SET_COPY_STATE;
typedef struct _KS_DVDCOPY_TITLEKEY *PKS_DVDCOPY_TITLEKEY;
typedef struct _KS_DVD_YCrCb *PKS_DVD_YCrCb;
typedef struct _KS_DVD_YUV *PKS_DVD_YUV;
typedef struct tagKS_FRAME_INFO *PKS_FRAME_INFO;
typedef struct $EEDA301819F8EA8D15C0ADB3D7583498 *PKS_FRAMING_ITEM;
typedef struct $B62AAB724E8D7D841EB663A6FEE96A5E *PKS_FRAMING_RANGE;
typedef struct $98D21277AAAA3049664E864EBED0B60A *PKS_FRAMING_RANGE_WEIGHTED;
typedef struct tagKS_MPEG1VIDEOINFO *PKS_MPEG1VIDEOINFO;
typedef struct tagKS_MPEAUDIOINFO *PKS_MPEGAUDIOINFO;
typedef struct tagKS_MPEGVIDEOINFO2 *PKS_MPEGVIDEOINFO2;
typedef struct tagKS_RGBQUAD *PKS_RGBQUAD;
typedef struct tag_KS_TRUECOLORINFO *PKS_TRUECOLORINFO;
typedef struct tagKS_TVTUNER_CHANGE_INFO *PKS_TVTUNER_CHANGE_INFO;
typedef struct tagKS_VBIINFOHEADER *PKS_VBIINFOHEADER;
typedef struct tagKS_VBI_FRAME_INFO *PKS_VBI_FRAME_INFO;
typedef struct tagKS_VIDEOINFO *PKS_VIDEOINFO;
typedef struct tagKS_VIDEOINFOHEADER *PKS_VIDEOINFOHEADER;
typedef struct tagKS_VIDEOINFOHEADER2 *PKS_VIDEOINFOHEADER2;
typedef struct _KS_VIDEO_STREAM_CONFIG_CAPS *PKS_VIDEO_STREAM_CONFIG_CAPS;
typedef struct _KTHREAD *PKTHREAD;
typedef struct _KTIMER *PKTIMER;
typedef BOOLEAN (*PKTRANSFER_ROUTINE)(void);
typedef struct _KWAIT_BLOCK *PKWAIT_BLOCK;
typedef LARGE_INTEGER *PLARGE_INTEGER;
typedef PULONG PLCID;
typedef struct _LEGACY_BUS_INFORMATION *PLEGACY_BUS_INFORMATION;
typedef struct _LIST_ENTRY *PLIST_ENTRY;
typedef LIST_ENTRY32 *PLIST_ENTRY32;
typedef LIST_ENTRY64 *PLIST_ENTRY64;
typedef ULONG *PLOGICAL;
typedef LONG *PLONG;
typedef signed int *PLONG32;
typedef __int64 *PLONG64;
typedef LONGLONG *PLONGLONG;
typedef int *PLONG_PTR;
typedef struct $A352DA0F15C73F1F5EAA2E36AD3C4FF0 *PLOOPEDSTREAMING_POSITION_EVENT_DATA;
typedef struct _PLUGPLAY_NOTIFICATION_HEADER PLUGPLAY_NOTIFICATION_HEADER;
typedef struct _LUID *PLUID;
typedef struct _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
typedef PHYSICAL_ADDRESS (__stdcall *PMAP_TRANSFER)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, PVOID CurrentVa, PULONG Length, BOOLEAN WriteToDevice);
typedef struct _MCA_EXCEPTION *PMCA_EXCEPTION;
typedef union _MCI_ADDR *PMCI_ADDR;
typedef union _MCI_STATS *PMCI_STATS;
typedef struct _MDL *PMDL;
typedef MEDIASPACEADPCMWAVEFORMAT *PMEDIASPACEADPCMWAVEFORMAT;
typedef IMiniport *PMINIPORT;
typedef IMiniportMidi *PMINIPORTMIDI;
typedef IMiniportMidiStream *PMINIPORTMIDISTREAM;
typedef IMiniportTopology *PMINIPORTTOPOLOGY;
typedef IMiniportWaveCyclic *PMINIPORTWAVECYCLIC;
typedef IMiniportWaveCyclicStream *PMINIPORTWAVECYCLICSTREAM;
typedef IMiniportWavePci *PMINIPORTWAVEPCI;
typedef IMiniportWavePciStream *PMINIPORTWAVEPCISTREAM;
typedef NTSTATUS (__stdcall *PMM_DLL_INITIALIZE)(PUNICODE_STRING RegistryPath);
typedef NTSTATUS (*PMM_DLL_UNLOAD)(void);
typedef MPEG1WAVEFORMAT *PMPEG1WAVEFORMAT;
typedef struct _MPEG2_TRANSPORT_STRIDE *PMPEG2_TRANSPORT_STRIDE;
typedef MPEGLAYER3WAVEFORMAT *PMPEGLAYER3WAVEFORMAT;
typedef struct _MSAcpiInfo *PMSAcpiInfo;
typedef struct _MSAcpi_ThermalZoneTemperature *PMSAcpi_ThermalZoneTemperature;
typedef struct _MSDiskDriver_Performance *PMSDiskDriver_Performance;
typedef struct _MSIde_PortDeviceInfo *PMSIde_PortDeviceInfo;
typedef struct _MSKeyboard_ClassInformation *PMSKeyboard_ClassInformation;
typedef struct _MSMCAEvent_CPUError *PMSMCAEvent_CPUError;
typedef struct _MSMCAEvent_Header *PMSMCAEvent_Header;
typedef struct _MSMCAEvent_InvalidError *PMSMCAEvent_InvalidError;
typedef struct _MSMCAEvent_MemoryError *PMSMCAEvent_MemoryError;
typedef struct _MSMCAEvent_MemoryPageRemoved *PMSMCAEvent_MemoryPageRemoved;
typedef struct _MSMCAEvent_PCIBusError *PMSMCAEvent_PCIBusError;
typedef struct _MSMCAEvent_PCIComponentError *PMSMCAEvent_PCIComponentError;
typedef struct _MSMCAEvent_PlatformSpecificError *PMSMCAEvent_PlatformSpecificError;
typedef struct _MSMCAEvent_SMBIOSError *PMSMCAEvent_SMBIOSError;
typedef struct _MSMCAEvent_SystemEventError *PMSMCAEvent_SystemEventError;
typedef struct _MSMCAInfo_Entry *PMSMCAInfo_Entry;
typedef struct _MSMCAInfo_RawCMCEvent *PMSMCAInfo_RawCMCEvent;
typedef struct _MSMCAInfo_RawCorrectedPlatformEvent *PMSMCAInfo_RawCorrectedPlatformEvent;
typedef struct _MSMCAInfo_RawMCAData *PMSMCAInfo_RawMCAData;
typedef struct _MSMCAInfo_RawMCAEvent *PMSMCAInfo_RawMCAEvent;
typedef struct _MSMouse_ClassInformation *PMSMouse_ClassInformation;
typedef struct _MSNdis_80211_AddWEP *PMSNdis_80211_AddWEP;
typedef struct _MSNdis_80211_AuthenticationMode *PMSNdis_80211_AuthenticationMode;
typedef struct _MSNdis_80211_BSSIList *PMSNdis_80211_BSSIList;
typedef struct _MSNdis_80211_BaseServiceSetIdentifier *PMSNdis_80211_BaseServiceSetIdentifier;
typedef struct _MSNdis_80211_BssIdListScan *PMSNdis_80211_BssIdListScan;
typedef struct _MSNdis_80211_Configuration *PMSNdis_80211_Configuration;
typedef struct _MSNdis_80211_ConfigurationFH *PMSNdis_80211_ConfigurationFH;
typedef struct _MSNdis_80211_ConfigurationInfo *PMSNdis_80211_ConfigurationInfo;
typedef struct _MSNdis_80211_DataRates *PMSNdis_80211_DataRates;
typedef struct _MSNdis_80211_DesiredDataRates *PMSNdis_80211_DesiredDataRates;
typedef struct _MSNdis_80211_Disassociate *PMSNdis_80211_Disassociate;
typedef struct _MSNdis_80211_FragmentationThreshold *PMSNdis_80211_FragmentationThreshold;
typedef struct _MSNdis_80211_InfrastructureMode *PMSNdis_80211_InfrastructureMode;
typedef struct _MSNdis_80211_NetworkInfrastructure *PMSNdis_80211_NetworkInfrastructure;
typedef struct _MSNdis_80211_NetworkType *PMSNdis_80211_NetworkType;
typedef struct _MSNdis_80211_NetworkTypeInUse *PMSNdis_80211_NetworkTypeInUse;
typedef struct _MSNdis_80211_NetworkTypesSupported *PMSNdis_80211_NetworkTypesSupported;
typedef struct _MSNdis_80211_NumberOfAntennas *PMSNdis_80211_NumberOfAntennas;
typedef struct _MSNdis_80211_PowerMode *PMSNdis_80211_PowerMode;
typedef struct _MSNdis_80211_PrivacyFilter *PMSNdis_80211_PrivacyFilter;
typedef struct _MSNdis_80211_RTSThreshold *PMSNdis_80211_RTSThreshold;
typedef struct _MSNdis_80211_ReceiveAntennaSelected *PMSNdis_80211_ReceiveAntennaSelected;
typedef struct _MSNdis_80211_ReceivedSignalStrength *PMSNdis_80211_ReceivedSignalStrength;
typedef struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger *PMSNdis_80211_ReceivedSignalStrengthEventTrigger;
typedef struct _MSNdis_80211_ReloadDefaults *PMSNdis_80211_ReloadDefaults;
typedef struct _MSNdis_80211_RemoveWEP *PMSNdis_80211_RemoveWEP;
typedef struct _MSNdis_80211_ServiceSetIdentifier *PMSNdis_80211_ServiceSetIdentifier;
typedef struct _MSNdis_80211_Statistics *PMSNdis_80211_Statistics;
typedef struct _MSNdis_80211_TransmitAntennaSelected *PMSNdis_80211_TransmitAntennaSelected;
typedef struct _MSNdis_80211_TransmitPowerLevel *PMSNdis_80211_TransmitPowerLevel;
typedef struct _MSNdis_80211_WEPStatus *PMSNdis_80211_WEPStatus;
typedef struct _MSNdis_80211_WLanBssId *PMSNdis_80211_WLanBssId;
typedef struct _MSNdis_AtmHardwareCurrentAddress *PMSNdis_AtmHardwareCurrentAddress;
typedef struct _MSNdis_AtmMaxAal0PacketSize *PMSNdis_AtmMaxAal0PacketSize;
typedef struct _MSNdis_AtmMaxAal1PacketSize *PMSNdis_AtmMaxAal1PacketSize;
typedef struct _MSNdis_AtmMaxAal34PacketSize *PMSNdis_AtmMaxAal34PacketSize;
typedef struct _MSNdis_AtmMaxAal5PacketSize *PMSNdis_AtmMaxAal5PacketSize;
typedef struct _MSNdis_AtmMaxActiveVciBits *PMSNdis_AtmMaxActiveVciBits;
typedef struct _MSNdis_AtmMaxActiveVcs *PMSNdis_AtmMaxActiveVcs;
typedef struct _MSNdis_AtmMaxActiveVpiBits *PMSNdis_AtmMaxActiveVpiBits;
typedef struct _MSNdis_AtmReceiveCellsDropped *PMSNdis_AtmReceiveCellsDropped;
typedef struct _MSNdis_AtmReceiveCellsOk *PMSNdis_AtmReceiveCellsOk;
typedef struct _MSNdis_AtmSupportedAalTypes *PMSNdis_AtmSupportedAalTypes;
typedef struct _MSNdis_AtmSupportedServiceCategory *PMSNdis_AtmSupportedServiceCategory;
typedef struct _MSNdis_AtmSupportedVcRates *PMSNdis_AtmSupportedVcRates;
typedef struct _MSNdis_AtmTransmitCellsOk *PMSNdis_AtmTransmitCellsOk;
typedef struct _MSNdis_CoDriverVersion *PMSNdis_CoDriverVersion;
typedef struct _MSNdis_CoHardwareStatus *PMSNdis_CoHardwareStatus;
typedef struct _MSNdis_CoLinkSpeed *PMSNdis_CoLinkSpeed;
typedef struct _MSNdis_CoMacOptions *PMSNdis_CoMacOptions;
typedef struct _MSNdis_CoMediaConnectStatus *PMSNdis_CoMediaConnectStatus;
typedef struct _MSNdis_CoMediaInUse *PMSNdis_CoMediaInUse;
typedef struct _MSNdis_CoMediaSupported *PMSNdis_CoMediaSupported;
typedef struct _MSNdis_CoMinimumLinkSpeed *PMSNdis_CoMinimumLinkSpeed;
typedef struct _MSNdis_CoReceivePduErrors *PMSNdis_CoReceivePduErrors;
typedef struct _MSNdis_CoReceivePdusNoBuffer *PMSNdis_CoReceivePdusNoBuffer;
typedef struct _MSNdis_CoReceivePdusOk *PMSNdis_CoReceivePdusOk;
typedef struct _MSNdis_CoTransmitPduErrors *PMSNdis_CoTransmitPduErrors;
typedef struct _MSNdis_CoTransmitPdusOk *PMSNdis_CoTransmitPdusOk;
typedef struct _MSNdis_CoVendorDescription *PMSNdis_CoVendorDescription;
typedef struct _MSNdis_CoVendorDriverVersion *PMSNdis_CoVendorDriverVersion;
typedef struct _MSNdis_CoVendorId *PMSNdis_CoVendorId;
typedef struct _MSNdis_CurrentLookahead *PMSNdis_CurrentLookahead;
typedef struct _MSNdis_CurrentPacketFilter *PMSNdis_CurrentPacketFilter;
typedef struct _MSNdis_DeviceWakeOnMagicPacketOnly *PMSNdis_DeviceWakeOnMagicPacketOnly;
typedef struct _MSNdis_DriverVersion *PMSNdis_DriverVersion;
typedef struct _MSNdis_EnumerateAdapter *PMSNdis_EnumerateAdapter;
typedef struct _MSNdis_EthernetCurrentAddress *PMSNdis_EthernetCurrentAddress;
typedef struct _MSNdis_EthernetMacOptions *PMSNdis_EthernetMacOptions;
typedef struct _MSNdis_EthernetMaximumMulticastListSize *PMSNdis_EthernetMaximumMulticastListSize;
typedef struct _MSNdis_EthernetMoreTransmitCollisions *PMSNdis_EthernetMoreTransmitCollisions;
typedef struct _MSNdis_EthernetMulticastList *PMSNdis_EthernetMulticastList;
typedef struct _MSNdis_EthernetOneTransmitCollision *PMSNdis_EthernetOneTransmitCollision;
typedef struct _MSNdis_EthernetPermanentAddress *PMSNdis_EthernetPermanentAddress;
typedef struct _MSNdis_EthernetReceiveErrorAlignment *PMSNdis_EthernetReceiveErrorAlignment;
typedef struct _MSNdis_FddiAttachmentType *PMSNdis_FddiAttachmentType;
typedef struct _MSNdis_FddiDownstreamNodeLong *PMSNdis_FddiDownstreamNodeLong;
typedef struct _MSNdis_FddiFrameErrors *PMSNdis_FddiFrameErrors;
typedef struct _MSNdis_FddiFramesLost *PMSNdis_FddiFramesLost;
typedef struct _MSNdis_FddiLConnectionState *PMSNdis_FddiLConnectionState;
typedef struct _MSNdis_FddiLctFailures *PMSNdis_FddiLctFailures;
typedef struct _MSNdis_FddiLemRejects *PMSNdis_FddiLemRejects;
typedef struct _MSNdis_FddiLongCurrentAddress *PMSNdis_FddiLongCurrentAddress;
typedef struct _MSNdis_FddiLongMaximumListSize *PMSNdis_FddiLongMaximumListSize;
typedef struct _MSNdis_FddiLongMulticastList *PMSNdis_FddiLongMulticastList;
typedef struct _MSNdis_FddiLongPermanentAddress *PMSNdis_FddiLongPermanentAddress;
typedef struct _MSNdis_FddiRingManagmentState *PMSNdis_FddiRingManagmentState;
typedef struct _MSNdis_FddiShortCurrentAddress *PMSNdis_FddiShortCurrentAddress;
typedef struct _MSNdis_FddiShortMaximumListSize *PMSNdis_FddiShortMaximumListSize;
typedef struct _MSNdis_FddiShortMulticastList *PMSNdis_FddiShortMulticastList;
typedef struct _MSNdis_FddiShortPermanentAddress *PMSNdis_FddiShortPermanentAddress;
typedef struct _MSNdis_FddiUpstreamNodeLong *PMSNdis_FddiUpstreamNodeLong;
typedef struct _MSNdis_HardwareStatus *PMSNdis_HardwareStatus;
typedef struct _MSNdis_LinkSpeed *PMSNdis_LinkSpeed;
typedef struct _MSNdis_MacOptions *PMSNdis_MacOptions;
typedef struct _MSNdis_MaximumFrameSize *PMSNdis_MaximumFrameSize;
typedef struct _MSNdis_MaximumLookahead *PMSNdis_MaximumLookahead;
typedef struct _MSNdis_MaximumSendPackets *PMSNdis_MaximumSendPackets;
typedef struct _MSNdis_MaximumTotalSize *PMSNdis_MaximumTotalSize;
typedef struct _MSNdis_MediaConnectStatus *PMSNdis_MediaConnectStatus;
typedef struct _MSNdis_MediaInUse *PMSNdis_MediaInUse;
typedef struct _MSNdis_MediaSupported *PMSNdis_MediaSupported;
typedef struct _MSNdis_NetworkAddress *PMSNdis_NetworkAddress;
typedef struct _MSNdis_NetworkLinkSpeed *PMSNdis_NetworkLinkSpeed;
typedef struct _MSNdis_NetworkShortAddress *PMSNdis_NetworkShortAddress;
typedef struct _MSNdis_NotifyAdapterArrival *PMSNdis_NotifyAdapterArrival;
typedef struct _MSNdis_NotifyAdapterRemoval *PMSNdis_NotifyAdapterRemoval;
typedef struct _MSNdis_PhysicalMediumType *PMSNdis_PhysicalMediumType;
typedef struct _MSNdis_ReceiveBlockSize *PMSNdis_ReceiveBlockSize;
typedef struct _MSNdis_ReceiveBufferSpace *PMSNdis_ReceiveBufferSpace;
typedef struct _MSNdis_ReceiveError *PMSNdis_ReceiveError;
typedef struct _MSNdis_ReceiveNoBuffer *PMSNdis_ReceiveNoBuffer;
typedef struct _MSNdis_ReceivesOk *PMSNdis_ReceivesOk;
typedef struct _MSNdis_StatusDevicePowerOff *PMSNdis_StatusDevicePowerOff;
typedef struct _MSNdis_StatusDevicePowerOn *PMSNdis_StatusDevicePowerOn;
typedef struct _MSNdis_StatusLinkSpeedChange *PMSNdis_StatusLinkSpeedChange;
typedef struct _MSNdis_StatusMediaSpecificIndication *PMSNdis_StatusMediaSpecificIndication;
typedef struct _MSNdis_StatusProtocolBind *PMSNdis_StatusProtocolBind;
typedef struct _MSNdis_StatusProtocolUnbind *PMSNdis_StatusProtocolUnbind;
typedef struct _MSNdis_TokenRingCurrentAddress *PMSNdis_TokenRingCurrentAddress;
typedef struct _MSNdis_TokenRingCurrentFunctional *PMSNdis_TokenRingCurrentFunctional;
typedef struct _MSNdis_TokenRingCurrentGroup *PMSNdis_TokenRingCurrentGroup;
typedef struct _MSNdis_TokenRingCurrentRingState *PMSNdis_TokenRingCurrentRingState;
typedef struct _MSNdis_TokenRingCurrentRingStatus *PMSNdis_TokenRingCurrentRingStatus;
typedef struct _MSNdis_TokenRingLastOpenStatus *PMSNdis_TokenRingLastOpenStatus;
typedef struct _MSNdis_TokenRingLineErrors *PMSNdis_TokenRingLineErrors;
typedef struct _MSNdis_TokenRingLostFrames *PMSNdis_TokenRingLostFrames;
typedef struct _MSNdis_TokenRingPermanentAddress *PMSNdis_TokenRingPermanentAddress;
typedef struct _MSNdis_TransmitBlockSize *PMSNdis_TransmitBlockSize;
typedef struct _MSNdis_TransmitBufferSpace *PMSNdis_TransmitBufferSpace;
typedef struct _MSNdis_TransmitsError *PMSNdis_TransmitsError;
typedef struct _MSNdis_TransmitsOk *PMSNdis_TransmitsOk;
typedef struct _MSNdis_VendorDescription *PMSNdis_VendorDescription;
typedef struct _MSNdis_VendorDriverVersion *PMSNdis_VendorDriverVersion;
typedef struct _MSNdis_VendorID *PMSNdis_VendorID;
typedef struct _MSNdis_VlanIdentifier *PMSNdis_VlanIdentifier;
typedef struct _MSPower_DeviceEnable *PMSPower_DeviceEnable;
typedef struct _MSPower_DeviceWakeEnable *PMSPower_DeviceWakeEnable;
typedef struct _MSSerial_PortName *PMSSerial_PortName;
typedef struct _MSSmBios_RawSMBiosTables *PMSSmBios_RawSMBiosTables;
typedef struct _MSSmBios_SMBiosEventlog *PMSSmBios_SMBiosEventlog;
typedef struct _MSSmBios_Sysid1394List *PMSSmBios_Sysid1394List;
typedef struct _MSSmBios_SysidUUIDList *PMSSmBios_SysidUUIDList;
typedef struct _MSVerifierIrpLogEntry *PMSVerifierIrpLogEntry;
typedef struct _MSVerifierIrpLogInformation *PMSVerifierIrpLogInformation;
typedef struct _MSWmi_Guid *PMSWmi_Guid;
typedef struct _MSWmi_GuidRegistrationInfo *PMSWmi_GuidRegistrationInfo;
typedef struct _MSWmi_MofData *PMSWmi_MofData;
typedef struct _MSWmi_PnPDeviceId *PMSWmi_PnPDeviceId;
typedef struct _MSWmi_PnPInstanceNames *PMSWmi_PnPInstanceNames;
typedef struct _MSWmi_ProviderInfo *PMSWmi_ProviderInfo;
typedef IMusicTechnology *PMUSICTECHNOLOGY;
typedef struct _NABTSFEC_BUFFER *PNABTSFEC_BUFFER;
typedef struct _NABTS_BUFFER *PNABTS_BUFFER;
typedef struct _NABTS_BUFFER_LINE *PNABTS_BUFFER_LINE;
typedef struct _NETWORK_CHANNELS *PNETWORK_CHANNELS;
typedef BOOLEAN (__stdcall *PNMI_CALLBACK)(PVOID Context, BOOLEAN Handled);
typedef NMS_VBXADPCMWAVEFORMAT *PNMS_VBXADPCMWAVEFORMAT;
typedef struct _NODE_ADDRESS *PNODE_ADDRESS;
typedef struct _NODE_DEVICE_EXTENSION *PNODE_DEVICE_EXTENSION;
typedef struct _NOTIFICATION_INFO *PNOTIFICATION_INFO;
typedef struct _NPAGED_LOOKASIDE_LIST *PNPAGED_LOOKASIDE_LIST;
typedef struct _PNP_BUS_INFORMATION PNP_BUS_INFORMATION;
typedef ULONG PNP_DEVICE_STATE;
typedef NTSTATUS *PNTSTATUS;
typedef enum _NT_PRODUCT_TYPE *PNT_PRODUCT_TYPE;
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;
typedef OBJECT_ATTRIBUTES32 *POBJECT_ATTRIBUTES32;
typedef OBJECT_ATTRIBUTES64 *POBJECT_ATTRIBUTES64;
typedef struct _OBJECT_HANDLE_INFORMATION *POBJECT_HANDLE_INFORMATION;
typedef struct _OBJECT_NAME_INFORMATION *POBJECT_NAME_INFORMATION;
typedef struct _OBJECT_TYPE *POBJECT_TYPE;
typedef PSTRING POEM_STRING;
typedef struct tagPOINT POINT;
typedef unsigned int POINTER_64_INT;
typedef struct _POINTER_PORT_WMI_STD_DATA POINTER_PORT_WMI_STD_DATA;
typedef struct _POINTL POINTL;
typedef struct tagPOINTS POINTS;
typedef OLIADPCMWAVEFORMAT *POLIADPCMWAVEFORMAT;
typedef OLICELPWAVEFORMAT *POLICELPWAVEFORMAT;
typedef OLIGSMWAVEFORMAT *POLIGSMWAVEFORMAT;
typedef OLIOPRWAVEFORMAT *POLIOPRWAVEFORMAT;
typedef OLISBCWAVEFORMAT *POLISBCWAVEFORMAT;
typedef enum _POOL_TYPE POOL_TYPE;
typedef struct _OPCR *POPCR;
typedef struct _PORT_CONFIGURATION_INFORMATION PORT_CONFIGURATION_INFORMATION;
typedef struct _OS_STRING *POS_STRING;
typedef enum $0FC989869F227A36D749990E523E5F04 POWER_ACTION;
typedef struct _POWER_SEQUENCE POWER_SEQUENCE;
typedef union _POWER_STATE POWER_STATE;
typedef enum _POWER_STATE_TYPE POWER_STATE_TYPE;
typedef struct _OWNER_ENTRY *POWNER_ENTRY;
typedef struct _PACKET_PARAMETERS *PPACKET_PARAMETERS;
typedef struct _PAGED_LOOKASIDE_LIST *PPAGED_LOOKASIDE_LIST;
typedef struct _PARALLEL_WMI_LOG_INFO *PPARALLEL_WMI_LOG_INFO;
typedef struct _PARPORT_WMI_ALLOC_FREE_COUNTS *PPARPORT_WMI_ALLOC_FREE_COUNTS;
typedef struct $D8D7C26B9FDE94F9B7E724B17C76CE36 *PPCAUTOMATION_TABLE;
typedef KSTOPOLOGY_CONNECTION *PPCCONNECTION_DESCRIPTOR;
typedef struct $0C4AC156F5CD9D086646B489056E0FB7 *PPCEVENT_ITEM;
typedef struct _PCEVENT_REQUEST *PPCEVENT_REQUEST;
typedef struct $53BCF8451FB1BBF1B3D3F15C66D0D1DB *PPCFILTER_DESCRIPTOR;
typedef struct _PCI_AGP_APERTURE_PAGE_SIZE *PPCI_AGP_APERTURE_PAGE_SIZE;
typedef struct _PCI_AGP_CAPABILITY *PPCI_AGP_CAPABILITY;
typedef struct _PCI_AGP_CONTROL *PPCI_AGP_CONTROL;
typedef struct PCI_AGP_EXTENDED_CAPABILITY *PPCI_AGP_EXTENDED_CAPABILITY;
typedef struct _PCI_AGP_ISOCH_COMMAND *PPCI_AGP_ISOCH_COMMAND;
typedef struct _PCI_AGP_ISOCH_STATUS *PPCI_AGP_ISOCH_STATUS;
typedef struct _PCI_CAPABILITIES_HEADER *PPCI_CAPABILITIES_HEADER;
typedef struct _PCI_COMMON_CONFIG *PPCI_COMMON_CONFIG;
typedef struct _PCI_DEVICE_PRESENCE_PARAMETERS *PPCI_DEVICE_PRESENCE_PARAMETERS;
typedef struct _PCI_DEVICE_PRESENT_INTERFACE *PPCI_DEVICE_PRESENT_INTERFACE;
typedef BOOLEAN (__stdcall *PPCI_IS_DEVICE_PRESENT)(USHORT VendorID, USHORT DeviceID, UCHAR RevisionID, USHORT SubVendorID, USHORT SubSystemID, ULONG Flags);
typedef BOOLEAN (__stdcall *PPCI_IS_DEVICE_PRESENT_EX)(PVOID Context, PPCI_DEVICE_PRESENCE_PARAMETERS Parameters);
typedef struct _PCI_MSI_CAPABILITY *PPCI_PCI_CAPABILITY;
typedef struct _PCI_PMC *PPCI_PMC;
typedef struct _PCI_PMCSR *PPCI_PMCSR;
typedef struct _PCI_PMCSR_BSE *PPCI_PMCSR_BSE;
typedef struct _PCI_PM_CAPABILITY *PPCI_PM_CAPABILITY;
typedef struct _PCI_SLOT_NUMBER *PPCI_SLOT_NUMBER;
typedef struct $9DABE2D50638D6782800B54C16FE3B63 *PPCMETHOD_ITEM;
typedef struct _PCMETHOD_REQUEST *PPCMETHOD_REQUEST;
typedef PCMWAVEFORMAT *PPCMWAVEFORMAT;
typedef struct $D96EA640170F725CA11FCBCFEE3FF36E *PPCNODE_DESCRIPTOR;
typedef struct $07D0DEFC473073A5B78BC3974C364183 *PPCPIN_DESCRIPTOR;
typedef struct $1C1547A44DB0B6456BF86742FC40B205 *PPCPROPERTY_ITEM;
typedef struct _PCPROPERTY_REQUEST *PPCPROPERTY_REQUEST;
typedef ULONG *PPFN_NUMBER;
typedef LARGE_INTEGER *PPHYSICAL_ADDRESS;
typedef struct _PHY_CONFIGURATION_PACKET *PPHY_CONFIGURATION_PACKET;
typedef IPinCount *PPINCOUNT;
typedef struct _PLUGPLAY_NOTIFICATION_HEADER *PPLUGPLAY_NOTIFICATION_HEADER;
typedef struct _PNP_BUS_INFORMATION *PPNP_BUS_INFORMATION;
typedef ULONG *PPNP_DEVICE_STATE;
typedef struct tagPOINT *PPOINT;
typedef struct _POINTER_PORT_WMI_STD_DATA *PPOINTER_PORT_WMI_STD_DATA;
typedef struct _POINTL *PPOINTL;
typedef struct tagPOINTS *PPOINTS;
typedef IPort *PPORT;
typedef IPortClsVersion *PPORTCLSVERSION;
typedef IPortEvents *PPORTEVENTS;
typedef IPortMidi *PPORTMIDI;
typedef IPortTopology *PPORTTOPOLOGY;
typedef IPortWaveCyclic *PPORTWAVECYCLIC;
typedef IPortWavePci *PPORTWAVEPCI;
typedef IPortWavePciStream *PPORTWAVEPCISTREAM;
typedef void (__stdcall *PPORT_ALLOC_COMPLETE_NOTIFICATION)(PVOID Context);
typedef struct _PORT_CONFIGURATION_INFORMATION *PPORT_CONFIGURATION_INFORMATION;
typedef NTSTATUS (__stdcall *PPORT_PHYS_ADDR_ROUTINE)(PVOID Context, PIRB Irb);
typedef IPowerNotify *PPOWERNOTIFY;
typedef enum $0FC989869F227A36D749990E523E5F04 *PPOWER_ACTION;
typedef struct _POWER_SEQUENCE *PPOWER_SEQUENCE;
typedef union _POWER_STATE *PPOWER_STATE;
typedef enum _POWER_STATE_TYPE *PPOWER_STATE_TYPE;
typedef IPreFetchOffset *PPREFETCHOFFSET;
typedef struct _PRIVILEGE_SET *PPRIVILEGE_SET;
typedef void (__stdcall *PPUT_DMA_ADAPTER)(PDMA_ADAPTER DmaAdapter);
typedef void (__stdcall *PPUT_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PSCATTER_GATHER_LIST ScatterGather, BOOLEAN WriteToDevice);
typedef QUAD *PQUAD;
typedef struct _RAW_RESET_PORT_PARAMETERS *PRAW_RESET_PORT_PARAMETERS;
typedef struct _RAW_ROOTPORT_FEATURE *PRAW_ROOTPORT_FEATURE;
typedef struct _RAW_ROOTPORT_PARAMETERS *PRAW_ROOTPORT_PARAMETERS;
typedef ULONG (__stdcall *PREAD_DMA_COUNTER)(PDMA_ADAPTER DmaAdapter);
typedef struct _READ_LOG_SECTORS_IN *PREAD_LOG_SECTORS_IN;
typedef struct _READ_LOG_SECTORS_OUT *PREAD_LOG_SECTORS_OUT;
typedef struct tagRECT *PRECT;
typedef struct _RECTL *PRECTL;
typedef struct _REDBOOK_WMI_PERF_DATA *PREDBOOK_WMI_PERF_DATA;
typedef struct _REDBOOK_WMI_STD_DATA *PREDBOOK_WMI_STD_DATA;
typedef NTSTATUS (__stdcall *PREGISTER_FOR_DEVICE_NOTIFICATIONS)(PDEVICE_OBJECT, PDEVICE_NOTIFY_CALLBACK, PVOID);
typedef IRegistryKey *PREGISTRYKEY;
typedef struct _REG_CREATE_KEY_INFORMATION *PREG_CREATE_KEY_INFORMATION;
typedef struct _REG_DELETE_KEY_INFORMATION *PREG_DELETE_KEY_INFORMATION;
typedef struct _REG_DELETE_VALUE_KEY_INFORMATION *PREG_DELETE_VALUE_KEY_INFORMATION;
typedef struct _REG_ENUMERATE_KEY_INFORMATION *PREG_ENUMERATE_KEY_INFORMATION;
typedef struct _REG_ENUMERATE_VALUE_KEY_INFORMATION *PREG_ENUMERATE_VALUE_KEY_INFORMATION;
typedef struct _REG_KEY_HANDLE_CLOSE_INFORMATION *PREG_KEY_HANDLE_CLOSE_INFORMATION;
typedef struct _REG_CREATE_KEY_INFORMATION *PREG_OPEN_KEY_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION *PREG_POST_CREATE_KEY_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION *PREG_POST_OPEN_KEY_INFORMATION;
typedef struct _REG_POST_OPERATION_INFORMATION *PREG_POST_OPERATION_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION *PREG_PRE_CREATE_KEY_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION *PREG_PRE_OPEN_KEY_INFORMATION;
typedef struct _REG_QUERY_KEY_INFORMATION *PREG_QUERY_KEY_INFORMATION;
typedef struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION *PREG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION;
typedef struct _REG_QUERY_VALUE_KEY_INFORMATION *PREG_QUERY_VALUE_KEY_INFORMATION;
typedef struct _REG_RENAME_KEY_INFORMATION *PREG_RENAME_KEY_INFORMATION;
typedef struct _REG_SET_INFORMATION_KEY_INFORMATION *PREG_SET_INFORMATION_KEY_INFORMATION;
typedef struct _REG_SET_VALUE_KEY_INFORMATION *PREG_SET_VALUE_KEY_INFORMATION;
typedef void (__stdcall *PREQUEST_POWER_COMPLETE)(PDEVICE_OBJECT DeviceObject, UCHAR MinorFunction, POWER_STATE PowerState, PVOID Context, PIO_STATUS_BLOCK IoStatus);
typedef IResourceList *PRESOURCELIST;
typedef struct _RESOURCE_HASH_ENTRY *PRESOURCE_HASH_ENTRY;
typedef struct _RESOURCE_PERFORMANCE_DATA *PRESOURCE_PERFORMANCE_DATA;
typedef void (__stdcall *PRH_INIT_CALLBACK)(PVOID);
typedef struct _PRIVILEGE_SET PRIVILEGE_SET;
typedef struct _KAPC *PRKAPC;
typedef struct _KDEVICE_QUEUE *PRKDEVICE_QUEUE;
typedef struct _KDEVICE_QUEUE_ENTRY *PRKDEVICE_QUEUE_ENTRY;
typedef struct _KDPC *PRKDPC;
typedef struct _KEVENT *PRKEVENT;
typedef struct _KMUTANT *PRKMUTANT;
typedef struct _KMUTANT *PRKMUTEX;
typedef struct _KSEMAPHORE *PRKSEMAPHORE;
typedef struct _KTHREAD *PRKTHREAD;
typedef struct _KTIMER *PRKTIMER;
typedef struct _KWAIT_BLOCK *PRKWAIT_BLOCK;
typedef struct _LIST_ENTRY *PRLIST_ENTRY;
typedef int (__stdcall *PROC)();
typedef struct _ROOTHUB_PDO_EXTENSION *PROOTHUB_PDO_EXTENSION;
typedef NTSTATUS (__stdcall *PRTAUDIOGETPOSITION)(PFILE_OBJECT PinFileObject, PUCHAR *ppPlayPosition, PLONG plOffset);
typedef RTL_BITMAP *PRTL_BITMAP;
typedef RTL_BITMAP_RUN *PRTL_BITMAP_RUN;
typedef NTSTATUS (__stdcall *PRTL_QUERY_REGISTRY_ROUTINE)(PWSTR ValueName, ULONG ValueType, PVOID ValueData, ULONG ValueLength, PVOID Context, PVOID EntryContext);
typedef struct _RTL_QUERY_REGISTRY_TABLE *PRTL_QUERY_REGISTRY_TABLE;
typedef struct _RegisteredGuids *PRegisteredGuids;
typedef struct _SCATTER_GATHER_ELEMENT *PSCATTER_GATHER_ELEMENT;
typedef struct _SCATTER_GATHER_LIST *PSCATTER_GATHER_LIST;
typedef SCHAR *PSCHAR;
typedef SECTION_OBJECT_POINTERS *PSECTION_OBJECT_POINTERS;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
typedef PVOID PSECURITY_DESCRIPTOR;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;
typedef ULONG *PSECURITY_INFORMATION;
typedef enum _SECURITY_OPERATION_CODE *PSECURITY_OPERATION_CODE;
typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;
typedef struct _SECURITY_SUBJECT_CONTEXT *PSECURITY_SUBJECT_CONTEXT;
typedef struct _SELF_ID *PSELF_ID;
typedef struct _SELF_ID_MORE *PSELF_ID_MORE;
typedef struct _SERIAL_WMI_COMMPROP *PSERIAL_WMI_COMMPROP;
typedef struct _SERIAL_WMI_COMM_DATA *PSERIAL_WMI_COMM_DATA;
typedef struct _SERIAL_WMI_HW_DATA *PSERIAL_WMI_HW_DATA;
typedef struct _SERIAL_WMI_PERF_DATA *PSERIAL_WMI_PERF_DATA;
typedef IServiceGroup *PSERVICEGROUP;
typedef IServiceSink *PSERVICESINK;
typedef struct _SET_CMP_ADDRESS_TYPE *PSET_CMP_ADDRESS_TYPE;
typedef struct _SET_FCP_NOTIFY *PSET_FCP_NOTIFY;
typedef struct _SET_LOCAL_HOST_PROPS1 *PSET_LOCAL_HOST_PROPS1;
typedef struct _SET_LOCAL_HOST_PROPS2 *PSET_LOCAL_HOST_PROPS2;
typedef struct _SET_LOCAL_HOST_PROPS3 *PSET_LOCAL_HOST_PROPS3;
typedef struct _SET_LOCAL_HOST_PROPS4 *PSET_LOCAL_HOST_PROPS4;
typedef struct _SET_UNIT_DIRECTORY *PSET_UNIT_DIRECTORY;
typedef struct _SET_UNIT_INFO *PSET_UNIT_INFO;
typedef struct _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;
typedef struct _SHARE_ACCESS *PSHARE_ACCESS;
typedef SHORT *PSHORT;
typedef PVOID PSID;
typedef SIERRAADPCMWAVEFORMAT *PSIERRAADPCMWAVEFORMAT;
typedef struct _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;
typedef struct tagSIZE *PSIZE;
typedef SIZE *PSIZEL;
typedef ULONG_PTR *PSIZE_T;
typedef union _SLIST_HEADER *PSLIST_HEADER;
typedef SONARCWAVEFORMAT *PSONARCWAVEFORMAT;
typedef struct _SPEED_MAP *PSPEED_MAP;
typedef LONG *PSPFN_NUMBER;
typedef LONG_PTR *PSSIZE_T;
typedef struct _STORAGE_FAILURE_PREDICT_DATA *PSTORAGE_FAILURE_PREDICT_DATA;
typedef struct _STORAGE_FAILURE_PREDICT_EVENT *PSTORAGE_FAILURE_PREDICT_EVENT;
typedef struct _STORAGE_FAILURE_PREDICT_STATUS *PSTORAGE_FAILURE_PREDICT_STATUS;
typedef struct _STORAGE_FAILURE_PREDICT_THRESHOLDS *PSTORAGE_FAILURE_PREDICT_THRESHOLDS;
typedef struct _STORAGE_SCSI_INFO_EXCEPTIONS *PSTORAGE_SCSI_INFO_EXCEPTIONS;
typedef CHAR *PSTR;
typedef struct _STREAM_DATA_INTERSECT_INFO *PSTREAM_DATA_INTERSECT_INFO;
typedef struct _STREAM_METHOD_DESCRIPTOR *PSTREAM_METHOD_DESCRIPTOR;
typedef enum _STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE *PSTREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE;
typedef enum _STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE *PSTREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE;
typedef PHYSICAL_ADDRESS *PSTREAM_PHYSICAL_ADDRESS;
typedef enum _STREAM_PRIORITY *PSTREAM_PRIORITY;
typedef struct _STREAM_PROPERTY_DESCRIPTOR *PSTREAM_PROPERTY_DESCRIPTOR;
typedef void (__stdcall *PSTREAM_RECEIVE_PACKET)(PVOID Srb, PVOID DeviceContext, PBOOLEAN Completed);
typedef unsigned __int64 *PSTREAM_SYSTEM_TIME;
typedef unsigned __int64 *PSTREAM_TIMESTAMP;
typedef struct _STREAM_TIME_REFERENCE *PSTREAM_TIME_REFERENCE;
typedef STRING *PSTRING;
typedef STRING32 *PSTRING32;
typedef STRING64 *PSTRING64;
typedef union _SUBSYTEM_ATTRIBUTES *PSUBSYTEM_ATTRIBUTES;
typedef struct $1A75AE2BAA617C024EDEDCFC2DDC14A8 *PSYSAUDIO_ATTACH_VIRTUAL_SOURCE;
typedef struct $F2115D41876A8CDF2A6608801240E71C *PSYSAUDIO_CREATE_VIRTUAL_SOURCE;
typedef struct $A35FF47659D3E73F219744D22283F451 *PSYSAUDIO_INSTANCE_INFO;
typedef struct $C8A55C2939C105561C2DA558734F3C5E *PSYSAUDIO_SELECT_GRAPH;
typedef enum $6C0BF487A7DD9AC5ADF33D9E356F7EE3 *PSYSCTL_IRP_DISPOSITION;
typedef struct _SYSID_1394 *PSYSID_1394;
typedef struct _SYSID_UUID *PSYSID_UUID;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;
typedef CHAR *PSZ;
typedef struct _TARGET_DEVICE_CUSTOM_NOTIFICATION *PTARGET_DEVICE_CUSTOM_NOTIFICATION;
typedef struct _TARGET_DEVICE_REMOVAL_NOTIFICATION *PTARGET_DEVICE_REMOVAL_NOTIFICATION;
typedef LPSTR PTCH;
typedef char *PTCHAR;
typedef struct _TEXTUAL_LEAF *PTEXTUAL_LEAF;
typedef TIME_FIELDS *PTIME_FIELDS;
typedef struct _TOPOLOGY_MAP *PTOPOLOGY_MAP;
typedef BOOLEAN (__stdcall *PTRANSLATE_BUS_ADDRESS)(PVOID Context, PHYSICAL_ADDRESS BusAddress, ULONG Length, PULONG AddressSpace, PPHYSICAL_ADDRESS TranslatedAddress);
typedef TRUESPEECHWAVEFORMAT *PTRUESPEECHWAVEFORMAT;
typedef LPSTR PTSTR;
typedef unsigned __int8 *PTUCHAR;
typedef UCHAR *PUCHAR;
typedef unsigned __int16 *PUHALF_PTR;
typedef unsigned int *PUINT;
typedef unsigned __int16 *PUINT16;
typedef unsigned int *PUINT32;
typedef unsigned __int64 *PUINT64;
typedef unsigned __int8 *PUINT8;
typedef unsigned int *PUINT_PTR;
typedef ULARGE_INTEGER *PULARGE_INTEGER;
typedef ULONG *PULONG;
typedef unsigned int *PULONG32;
typedef unsigned __int64 *PULONG64;
typedef ULONGLONG *PULONGLONG;
typedef unsigned int *PULONG_PTR;
typedef UNICODE_STRING *PUNICODE_STRING;
typedef UNICODE_STRING32 *PUNICODE_STRING32;
typedef UNICODE_STRING64 *PUNICODE_STRING64;
typedef struct _UNIT_DDI_VERSION *PUNIT_DDI_VERSION;
typedef struct _UNIT_DIAG_LEVEL *PUNIT_DIAG_LEVEL;
typedef struct _UNIT_ISOCH_PARAMS *PUNIT_ISOCH_PARAMS;
typedef IUnknown *PUNKNOWN;
typedef void (__stdcall *PUNREGISTER_FOR_DEVICE_NOTIFICATIONS)(PDEVICE_OBJECT, PDEVICE_NOTIFY_CALLBACK);
typedef UQUAD *PUQUAD;
typedef struct _URB *PURB;
typedef USHORT *PUSAGE;
typedef struct _USAGE_AND_PAGE *PUSAGE_AND_PAGE;
typedef struct _USBCAMD_DEVICE_DATA *PUSBCAMD_DEVICE_DATA;
typedef struct _USBCAMD_DEVICE_DATA2 *PUSBCAMD_DEVICE_DATA2;
typedef struct $2361741245AFF1C51192B59F7339350B *PUSBCAMD_INTERFACE;
typedef struct _pipe_config_descriptor *PUSBCAMD_Pipe_Config_Descriptor;
typedef struct _USBD_DEVICE_INFORMATION *PUSBD_DEVICE_INFORMATION;
typedef struct _USBD_INTERFACE_INFORMATION *PUSBD_INTERFACE_INFORMATION;
typedef struct _USBD_INTERFACE_LIST_ENTRY *PUSBD_INTERFACE_LIST_ENTRY;
typedef struct _USBD_ISO_PACKET_DESCRIPTOR *PUSBD_ISO_PACKET_DESCRIPTOR;
typedef struct _USBD_PIPE_INFORMATION *PUSBD_PIPE_INFORMATION;
typedef struct _USBD_VERSION_INFORMATION *PUSBD_VERSION_INFORMATION;
typedef struct _USBUSER_BANDWIDTH_INFO_REQUEST *PUSBUSER_BANDWIDTH_INFO_REQUEST;
typedef struct _USBUSER_BUS_STATISTICS_0_REQUEST *PUSBUSER_BUS_STATISTICS_0_REQUEST;
typedef struct _USBUSER_CLOSE_RAW_DEVICE *PUSBUSER_CLOSE_RAW_DEVICE;
typedef struct _USBUSER_CONTROLLER_INFO_0 *PUSBUSER_CONTROLLER_INFO_0;
typedef struct _USBUSER_CONTROLLER_UNICODE_NAME *PUSBUSER_CONTROLLER_UNICODE_NAME;
typedef struct _USBUSER_GET_DRIVER_VERSION *PUSBUSER_GET_DRIVER_VERSION;
typedef struct _USBUSER_GET_USB2HW_VERSION *PUSBUSER_GET_USB2HW_VERSION;
typedef struct _USBUSER_OPEN_RAW_DEVICE *PUSBUSER_OPEN_RAW_DEVICE;
typedef struct _USBUSER_PASS_THRU_REQUEST *PUSBUSER_PASS_THRU_REQUEST;
typedef struct _USBUSER_POWER_INFO_REQUEST *PUSBUSER_POWER_INFO_REQUEST;
typedef struct _USBUSER_RAW_RESET_ROOT_PORT *PUSBUSER_RAW_RESET_ROOT_PORT;
typedef struct _USBUSER_REQUEST_HEADER *PUSBUSER_REQUEST_HEADER;
typedef struct _USBUSER_ROOTPORT_FEATURE_REQUEST *PUSBUSER_ROOTPORT_FEATURE_REQUEST;
typedef struct _USBUSER_ROOTPORT_PARAMETERS *PUSBUSER_ROOTPORT_PARAMETERS;
typedef struct _USBUSER_SEND_ONE_PACKET *PUSBUSER_SEND_ONE_PACKET;
typedef struct _USBUSER_SEND_RAW_COMMAND *PUSBUSER_SEND_RAW_COMMAND;
typedef struct _USB_ACQUIRE_INFO *PUSB_ACQUIRE_INFO;
typedef struct _USB_BANDWIDTH_INFO *PUSB_BANDWIDTH_INFO;
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND)(PVOID, BOOLEAN);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_CREATE_USB_DEVICE)(PVOID, PUSB_DEVICE_HANDLE *, PUSB_DEVICE_HANDLE, USHORT, USHORT);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_ENUM_LOG_ENTRY)(PVOID, ULONG, ULONG, ULONG, ULONG);
typedef void (__stdcall *PUSB_BUSIFFN_FLUSH_TRANSFERS)(PVOID, PVOID);
typedef void (__stdcall *PUSB_BUSIFFN_GETUSBDI_VERSION)(PVOID, PUSBD_VERSION_INFORMATION, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION)(PVOID, PVOID, ULONG, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_DEVICEHACK_FLAGS)(PVOID, PUSB_DEVICE_HANDLE, PULONG);
typedef PVOID (__stdcall *PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT)(PVOID, PVOID);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_DEVICE_INFORMATION)(PVOID, PUSB_DEVICE_HANDLE, PVOID, ULONG, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO)(PVOID, PDEVICE_OBJECT, PVOID, ULONG, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_POTRTHACK_FLAGS)(PVOID, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME)(PVOID, PVOID, ULONG, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_GET_USB_DESCRIPTORS)(PVOID, PUSB_DEVICE_HANDLE, PUCHAR, PULONG, PUCHAR, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_INITIALIZE_20HUB)(PVOID, PUSB_DEVICE_HANDLE, ULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_INITIALIZE_USB_DEVICE)(PVOID, PUSB_DEVICE_HANDLE);
typedef BOOLEAN (__stdcall *PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED)(PVOID);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_QUERY_BUS_INFORMATION)(PVOID, ULONG, PVOID, PULONG, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_QUERY_BUS_TIME)(PVOID, PULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_REMOVE_USB_DEVICE)(PVOID, PUSB_DEVICE_HANDLE, ULONG);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_RESTORE_DEVICE)(PVOID, PUSB_DEVICE_HANDLE, PUSB_DEVICE_HANDLE);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY)(PVOID, PVOID, PRH_INIT_CALLBACK);
typedef void (__stdcall *PUSB_BUSIFFN_SET_DEVHANDLE_DATA)(PVOID, PVOID, PDEVICE_OBJECT);
typedef NTSTATUS (__stdcall *PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB)(PVOID, PURB);
typedef struct _USB_BUS_INFORMATION_LEVEL_0 *PUSB_BUS_INFORMATION_LEVEL_0;
typedef struct _USB_BUS_INFORMATION_LEVEL_1 *PUSB_BUS_INFORMATION_LEVEL_1;
typedef struct _USB_BUS_INTERFACE_HUB_V0 *PUSB_BUS_INTERFACE_HUB_V0;
typedef struct _USB_BUS_INTERFACE_HUB_V1 *PUSB_BUS_INTERFACE_HUB_V1;
typedef struct _USB_BUS_INTERFACE_HUB_V2 *PUSB_BUS_INTERFACE_HUB_V2;
typedef struct _USB_BUS_INTERFACE_HUB_V3 *PUSB_BUS_INTERFACE_HUB_V3;
typedef struct _USB_BUS_INTERFACE_HUB_V4 *PUSB_BUS_INTERFACE_HUB_V4;
typedef struct _USB_BUS_INTERFACE_HUB_V5 *PUSB_BUS_INTERFACE_HUB_V5;
typedef struct _USB_BUS_INTERFACE_USBDI_V0 *PUSB_BUS_INTERFACE_USBDI_V0;
typedef struct _USB_BUS_INTERFACE_USBDI_V1 *PUSB_BUS_INTERFACE_USBDI_V1;
typedef struct _USB_BUS_INTERFACE_USBDI_V2 *PUSB_BUS_INTERFACE_USBDI_V2;
typedef struct _USB_BUS_NOTIFICATION *PUSB_BUS_NOTIFICATION;
typedef struct _USB_BUS_STATISTICS_0 *PUSB_BUS_STATISTICS_0;
typedef struct _USB_CLOSE_RAW_DEVICE_PARAMETERS *PUSB_CLOSE_RAW_DEVICE_PARAMETERS;
typedef struct _USB_COMMON_DESCRIPTOR *PUSB_COMMON_DESCRIPTOR;
typedef struct _USB_CONFIGURATION_DESCRIPTOR *PUSB_CONFIGURATION_DESCRIPTOR;
typedef struct _USB_CONFIGURATION_POWER_DESCRIPTOR *PUSB_CONFIGURATION_POWER_DESCRIPTOR;
typedef struct _USB_CONNECTION_NOTIFICATION *PUSB_CONNECTION_NOTIFICATION;
typedef enum _USB_CONNECTION_STATUS *PUSB_CONNECTION_STATUS;
typedef struct _USB_CONTROLLER_INFORMATION_0 *PUSB_CONTROLLER_INFORMATION_0;
typedef struct _USB_CONTROLLER_INFO_0 *PUSB_CONTROLLER_INFO_0;
typedef struct _USB_DEFAULT_PIPE_SETUP_PACKET *PUSB_DEFAULT_PIPE_SETUP_PACKET;
typedef struct _USB_DESCRIPTOR_REQUEST *PUSB_DESCRIPTOR_REQUEST;
typedef struct _USB_DEVICE_DESCRIPTOR *PUSB_DEVICE_DESCRIPTOR;
typedef PVOID PUSB_DEVICE_HANDLE;
typedef struct _USB_DEVICE_INFORMATION_0 *PUSB_DEVICE_INFORMATION_0;
typedef struct _USB_DEVICE_QUALIFIER_DESCRIPTOR *PUSB_DEVICE_QUALIFIER_DESCRIPTOR;
typedef struct _USB_DRIVER_VERSION_PARAMETERS *PUSB_DRIVER_VERSION_PARAMETERS;
typedef struct _USB_ENDPOINT_DESCRIPTOR *PUSB_ENDPOINT_DESCRIPTOR;
typedef struct _USB_EXTHUB_INFORMATION_0 *PUSB_EXTHUB_INFORMATION_0;
typedef struct _USB_EXTPORT_INFORMATION_0 *PUSB_EXTPORT_INFORMATION;
typedef struct _USB_HCD_DRIVERKEY_NAME *PUSB_HCD_DRIVERKEY_NAME;
typedef union _USB_HIGH_SPEED_MAXPACKET *PUSB_HIGH_SPEED_MAXPACKET;
typedef struct _USB_HUB_CAPABILITIES *PUSB_HUB_CAPABILITIES;
typedef struct _USB_HUB_DESCRIPTOR *PUSB_HUB_DESCRIPTOR;
typedef struct _USB_HUB_INFORMATION *PUSB_HUB_INFORMATION;
typedef struct _USB_HUB_NAME *PUSB_HUB_NAME;
typedef struct _USB_IDLE_CALLBACK_INFO *PUSB_IDLE_CALLBACK_INFO;
typedef struct _USB_INTERFACE_DESCRIPTOR *PUSB_INTERFACE_DESCRIPTOR;
typedef struct _USB_INTERFACE_POWER_DESCRIPTOR *PUSB_INTERFACE_POWER_DESCRIPTOR;
typedef struct _USB_LEVEL_INFORMATION *PUSB_LEVEL_INFORMATION;
typedef struct _USB_MI_PARENT_INFORMATION *PUSB_MI_PARENT_INFORMATION;
typedef struct _USB_NODE_CONNECTION_ATTRIBUTES *PUSB_NODE_CONNECTION_ATTRIBUTES;
typedef struct _USB_NODE_CONNECTION_DRIVERKEY_NAME *PUSB_NODE_CONNECTION_DRIVERKEY_NAME;
typedef struct _USB_NODE_CONNECTION_INFORMATION *PUSB_NODE_CONNECTION_INFORMATION;
typedef struct _USB_NODE_CONNECTION_INFORMATION_EX *PUSB_NODE_CONNECTION_INFORMATION_EX;
typedef struct _USB_NODE_CONNECTION_NAME *PUSB_NODE_CONNECTION_NAME;
typedef struct _USB_NODE_INFORMATION *PUSB_NODE_INFORMATION;
typedef struct _USB_NOTIFICATION *PUSB_NOTIFICATION;
typedef struct _USB_OPEN_RAW_DEVICE_PARAMETERS *PUSB_OPEN_RAW_DEVICE_PARAMETERS;
typedef struct _USB_PASS_THRU_PARAMETERS *PUSB_PASS_THRU_PARAMETERS;
typedef struct _USB_PIPE_INFO *PUSB_PIPE_INFO;
typedef struct _USB_PIPE_INFORMATION_0 *PUSB_PIPE_INFORMATION_0;
typedef struct _USB_POWER_INFO *PUSB_POWER_INFO;
typedef struct _USB_ROOT_HUB_NAME *PUSB_ROOT_HUB_NAME;
typedef struct _USB_SEND_RAW_COMMAND_PARAMETERS *PUSB_SEND_RAW_COMMAND_PARAMETERS;
typedef struct _USB_STRING_DESCRIPTOR *PUSB_STRING_DESCRIPTOR;
typedef struct _USB_UNICODE_NAME *PUSB_UNICODE_NAME;
typedef struct _USB_USB2HW_VERSION_PARAMETERS *PUSB_USB2HW_VERSION_PARAMETERS;
typedef USHORT *PUSHORT;
typedef LPSTR PUTSTR;
typedef WCHAR *PUWSTR;
typedef struct _VBICAP_PROPERTIES_PROTECTION_S *PVBICAP_PROPERTIES_PROTECTION_S;
typedef struct _VBICODECFILTERING_CC_SUBSTREAMS *PVBICODECFILTERING_CC_SUBSTREAMS;
typedef struct _VBICODECFILTERING_NABTS_SUBSTREAMS *PVBICODECFILTERING_NABTS_SUBSTREAMS;
typedef struct _VBICODECFILTERING_SCANLINES *PVBICODECFILTERING_SCANLINES;
typedef struct _VBICODECFILTERING_STATISTICS_CC *PVBICODECFILTERING_STATISTICS_CC;
typedef struct _VBICODECFILTERING_STATISTICS_CC_PIN *PVBICODECFILTERING_STATISTICS_CC_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON *PVBICODECFILTERING_STATISTICS_COMMON;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON_PIN *PVBICODECFILTERING_STATISTICS_COMMON_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS *PVBICODECFILTERING_STATISTICS_NABTS;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS_PIN *PVBICODECFILTERING_STATISTICS_NABTS_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT *PVBICODECFILTERING_STATISTICS_TELETEXT;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN *PVBICODECFILTERING_STATISTICS_TELETEXT_PIN;
typedef void *PVOID;
typedef void *PVOID64;
typedef VOLUMEWAVEFILTER *PVOLUMEWAVEFILTER;
typedef struct _WAIT_CONTEXT_BLOCK *PWAIT_CONTEXT_BLOCK;
typedef WAVEFILTER *PWAVEFILTER;
typedef WAVEFORMAT *PWAVEFORMAT;
typedef WAVEFORMATEX *PWAVEFORMATEX;
typedef struct $48F34F6E58318E719B3C17D5DF8D3416 *PWAVEFORMATEXTENSIBLE;
typedef WAVEFORMATIEEEFLOATEX *PWAVEFORMATIEEEFLOATEX;
typedef WAVEFORMATPCMEX *PWAVEFORMATPCMEX;
typedef WCHAR *PWCH;
typedef WCHAR *PWCHAR;
typedef struct $113235CB38218359B65312E6A8B53D96 *PWMIGUIDREGINFO;
typedef struct _WMILIB_CONTEXT *PWMILIB_CONTEXT;
typedef struct _WMI_CHANGER_PARAMETERS *PWMI_CHANGER_PARAMETERS;
typedef struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR *PWMI_CHANGER_PROBLEM_DEVICE_ERROR;
typedef struct _WMI_CHANGER_PROBLEM_WARNING *PWMI_CHANGER_PROBLEM_WARNING;
typedef struct _WMI_DISK_GEOMETRY *PWMI_DISK_GEOMETRY;
typedef struct _WMI_DISK_PERFORMANCE *PWMI_DISK_PERFORMANCE;
typedef NTSTATUS (__stdcall *PWMI_EXECUTE_METHOD)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG MethodId, ULONG InBufferSize, ULONG OutBufferSize, PUCHAR Buffer);
typedef NTSTATUS (__stdcall *PWMI_FUNCTION_CONTROL)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, WMIENABLEDISABLECONTROL Function, BOOLEAN Enable);
typedef NTSTATUS (__stdcall *PWMI_QUERY_DATABLOCK)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG InstanceCount, PULONG InstanceLengthArray, ULONG BufferAvail, PUCHAR Buffer);
typedef NTSTATUS (__stdcall *PWMI_QUERY_REGINFO)(PDEVICE_OBJECT DeviceObject, PULONG RegFlags, PUNICODE_STRING InstanceName, PUNICODE_STRING *RegistryPath, PUNICODE_STRING MofResourceName, PDEVICE_OBJECT *Pdo);
typedef NTSTATUS (__stdcall *PWMI_SET_DATABLOCK)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG BufferSize, PUCHAR Buffer);
typedef NTSTATUS (__stdcall *PWMI_SET_DATAITEM)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG DataItemId, ULONG BufferSize, PUCHAR Buffer);
typedef struct _WMI_TAPE_DRIVE_PARAMETERS *PWMI_TAPE_DRIVE_PARAMETERS;
typedef struct _WMI_TAPE_MEDIA_PARAMETERS *PWMI_TAPE_MEDIA_PARAMETERS;
typedef struct _WMI_TAPE_PROBLEM_DEVICE_ERROR *PWMI_TAPE_PROBLEM_DEVICE_ERROR;
typedef struct _WMI_TAPE_PROBLEM_IO_ERROR *PWMI_TAPE_PROBLEM_IO_ERROR;
typedef struct _WMI_TAPE_PROBLEM_WARNING *PWMI_TAPE_PROBLEM_WARNING;
typedef struct _WMI_TAPE_SYMBOLIC_NAME *PWMI_TAPE_SYMBOLIC_NAME;
typedef WORD *PWORD;
typedef void (__stdcall *PWORKER_THREAD_ROUTINE)(PVOID Parameter);
typedef struct _WORK_QUEUE_ITEM *PWORK_QUEUE_ITEM;
typedef struct _WRITE_LOG_SECTORS_IN *PWRITE_LOG_SECTORS_IN;
typedef struct _WRITE_LOG_SECTORS_OUT *PWRITE_LOG_SECTORS_OUT;
typedef WCHAR *PWSTR;
typedef struct _WST_BUFFER *PWST_BUFFER;
typedef struct _WST_BUFFER_LINE *PWST_BUFFER_LINE;
typedef YAMAHA_ADPCMWAVEFORMAT *PYAMAHA_ADPCMWAVEFORMAT;
enum Polarisation {BDA_POLARISATION_NOT_SET = 0xFFFFFFFF,BDA_POLARISATION_NOT_DEFINED = 0x0,BDA_POLARISATION_LINEAR_H = 0x1,BDA_POLARISATION_LINEAR_V = 0x2,BDA_POLARISATION_CIRCULAR_L = 0x3,BDA_POLARISATION_CIRCULAR_R = 0x4,BDA_POLARISATION_MAX = 0x5,};
typedef struct _QUAD QUAD;
typedef struct _RAW_RESET_PORT_PARAMETERS RAW_RESET_PORT_PARAMETERS;
typedef struct _RAW_ROOTPORT_FEATURE RAW_ROOTPORT_FEATURE;
typedef struct _RAW_ROOTPORT_PARAMETERS RAW_ROOTPORT_PARAMETERS;
typedef struct _READ_LOG_SECTORS_IN READ_LOG_SECTORS_IN;
typedef struct _READ_LOG_SECTORS_OUT READ_LOG_SECTORS_OUT;
typedef struct tagRECT RECT;
typedef struct _RECTL RECTL;
typedef struct _REDBOOK_WMI_PERF_DATA REDBOOK_WMI_PERF_DATA;
typedef struct _REDBOOK_WMI_STD_DATA REDBOOK_WMI_STD_DATA;
typedef LONGLONG REFERENCE_TIME;
typedef struct _REG_CREATE_KEY_INFORMATION REG_CREATE_KEY_INFORMATION;
typedef struct _REG_DELETE_KEY_INFORMATION REG_DELETE_KEY_INFORMATION;
typedef struct _REG_DELETE_VALUE_KEY_INFORMATION REG_DELETE_VALUE_KEY_INFORMATION;
typedef struct _REG_ENUMERATE_KEY_INFORMATION REG_ENUMERATE_KEY_INFORMATION;
typedef struct _REG_ENUMERATE_VALUE_KEY_INFORMATION REG_ENUMERATE_VALUE_KEY_INFORMATION;
typedef struct _REG_KEY_HANDLE_CLOSE_INFORMATION REG_KEY_HANDLE_CLOSE_INFORMATION;
typedef enum _REG_NOTIFY_CLASS REG_NOTIFY_CLASS;
typedef struct _REG_CREATE_KEY_INFORMATION REG_OPEN_KEY_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION REG_POST_CREATE_KEY_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION REG_POST_OPEN_KEY_INFORMATION;
typedef struct _REG_POST_OPERATION_INFORMATION REG_POST_OPERATION_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION REG_PRE_CREATE_KEY_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION REG_PRE_OPEN_KEY_INFORMATION;
typedef struct _REG_QUERY_KEY_INFORMATION REG_QUERY_KEY_INFORMATION;
typedef struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION;
typedef struct _REG_QUERY_VALUE_KEY_INFORMATION REG_QUERY_VALUE_KEY_INFORMATION;
typedef struct _REG_RENAME_KEY_INFORMATION REG_RENAME_KEY_INFORMATION;
typedef struct _REG_SET_INFORMATION_KEY_INFORMATION REG_SET_INFORMATION_KEY_INFORMATION;
typedef struct _REG_SET_VALUE_KEY_INFORMATION REG_SET_VALUE_KEY_INFORMATION;
typedef struct _RESOURCE_HASH_ENTRY RESOURCE_HASH_ENTRY;
typedef struct _RESOURCE_PERFORMANCE_DATA RESOURCE_PERFORMANCE_DATA;
typedef struct _ROOTHUB_PDO_EXTENSION ROOTHUB_PDO_EXTENSION;
typedef struct _RTL_BITMAP RTL_BITMAP;
typedef struct _RTL_BITMAP_RUN RTL_BITMAP_RUN;
typedef struct _RTL_QUERY_REGISTRY_TABLE RTL_QUERY_REGISTRY_TABLE;
typedef USHORT RTL_STRING_LENGTH_TYPE;
typedef struct _RegisteredGuids RegisteredGuids;
typedef struct _SCATTER_GATHER_ELEMENT SCATTER_GATHER_ELEMENT;
typedef struct _SCATTER_GATHER_LIST SCATTER_GATHER_LIST;
typedef signed __int8 SCHAR;
typedef enum _SECTION_INHERIT SECTION_INHERIT;
typedef struct _SECTION_OBJECT_POINTERS SECTION_OBJECT_POINTERS;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef ULONG SECURITY_INFORMATION;
typedef enum _SECURITY_OPERATION_CODE SECURITY_OPERATION_CODE;
typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;
typedef int SECURITY_STATUS;
typedef struct _SECURITY_SUBJECT_CONTEXT SECURITY_SUBJECT_CONTEXT;
typedef struct _SELF_ID SELF_ID;
typedef struct _SELF_ID_MORE SELF_ID_MORE;
typedef struct _SERIAL_WMI_COMMPROP SERIAL_WMI_COMMPROP;
typedef struct _SERIAL_WMI_COMM_DATA SERIAL_WMI_COMM_DATA;
typedef struct _SERIAL_WMI_HW_DATA SERIAL_WMI_HW_DATA;
typedef struct _SERIAL_WMI_PERF_DATA SERIAL_WMI_PERF_DATA;
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
typedef struct _SET_CMP_ADDRESS_TYPE SET_CMP_ADDRESS_TYPE;
typedef struct _SET_FCP_NOTIFY SET_FCP_NOTIFY;
typedef struct _SET_LOCAL_HOST_PROPS1 SET_LOCAL_HOST_PROPS1;
typedef struct _SET_LOCAL_HOST_PROPS2 SET_LOCAL_HOST_PROPS2;
typedef struct _SET_LOCAL_HOST_PROPS3 SET_LOCAL_HOST_PROPS3;
typedef struct _SET_LOCAL_HOST_PROPS4 SET_LOCAL_HOST_PROPS4;
typedef struct _SET_UNIT_DIRECTORY SET_UNIT_DIRECTORY;
typedef struct _SET_UNIT_INFO SET_UNIT_INFO;
typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;
typedef enum $B6084D6A0EEB0FD386ED58F84822BF64 SE_TECHNIQUE;
typedef int SHANDLE_PTR;
typedef struct _SHARE_ACCESS SHARE_ACCESS;
typedef __int16 SHORT;
typedef struct sierra_adpcmwaveformat_tag SIERRAADPCMWAVEFORMAT;
typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;
typedef struct tagSIZE SIZE;
typedef SIZE SIZEL;
typedef ULONG_PTR SIZE_T;
typedef union _SLIST_HEADER SLIST_HEADER;
typedef struct sonarcwaveformat_tag SONARCWAVEFORMAT;
typedef struct _SPEED_MAP SPEED_MAP;
typedef LONG SPFN_NUMBER;
typedef HANDLE *SPHANDLE;
typedef enum _SRB_COMMAND SRB_COMMAND;
typedef LONG_PTR SSIZE_T;
typedef struct _STORAGE_FAILURE_PREDICT_DATA STORAGE_FAILURE_PREDICT_DATA;
typedef struct _STORAGE_FAILURE_PREDICT_EVENT STORAGE_FAILURE_PREDICT_EVENT;
typedef struct _STORAGE_FAILURE_PREDICT_STATUS STORAGE_FAILURE_PREDICT_STATUS;
typedef struct _STORAGE_FAILURE_PREDICT_THRESHOLDS STORAGE_FAILURE_PREDICT_THRESHOLDS;
typedef struct _STORAGE_SCSI_INFO_EXCEPTIONS STORAGE_SCSI_INFO_EXCEPTIONS;
typedef enum $6482D7A0F8ECEE932DF178E2624E51B8 STREAM_BUFFER_TYPE;
typedef struct _STREAM_DATA_INTERSECT_INFO STREAM_DATA_INTERSECT_INFO;
typedef enum $EEDC202E1D6A59707A46C9F564CBCDC1 STREAM_DEBUG_LEVEL;
typedef struct _STREAM_METHOD_DESCRIPTOR STREAM_METHOD_DESCRIPTOR;
typedef enum _STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE;
typedef enum _STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE;
typedef PHYSICAL_ADDRESS STREAM_PHYSICAL_ADDRESS;
typedef enum _STREAM_PRIORITY STREAM_PRIORITY;
typedef struct _STREAM_PROPERTY_DESCRIPTOR STREAM_PROPERTY_DESCRIPTOR;
typedef unsigned __int64 STREAM_SYSTEM_TIME;
typedef unsigned __int64 STREAM_TIMESTAMP;
typedef struct _STREAM_TIME_REFERENCE STREAM_TIME_REFERENCE;
typedef struct _STRING STRING;
typedef struct _STRING32 STRING32;
typedef struct _STRING64 STRING64;
typedef union _SUBSYTEM_ATTRIBUTES SUBSYTEM_ATTRIBUTES;
typedef enum _SUITE_TYPE SUITE_TYPE;
typedef struct $1A75AE2BAA617C024EDEDCFC2DDC14A8 SYSAUDIO_ATTACH_VIRTUAL_SOURCE;
typedef struct $F2115D41876A8CDF2A6608801240E71C SYSAUDIO_CREATE_VIRTUAL_SOURCE;
typedef struct $A35FF47659D3E73F219744D22283F451 SYSAUDIO_INSTANCE_INFO;
typedef struct $C8A55C2939C105561C2DA558734F3C5E SYSAUDIO_SELECT_GRAPH;
typedef enum $6C0BF487A7DD9AC5ADF33D9E356F7EE3 SYSCTL_IRP_DISPOSITION;
typedef struct _SYSID_1394 SYSID_1394;
typedef struct _SYSID_UUID SYSID_UUID;
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
enum SpectralInversion {BDA_SPECTRAL_INVERSION_NOT_SET = 0xFFFFFFFF,BDA_SPECTRAL_INVERSION_NOT_DEFINED = 0x0,BDA_SPECTRAL_INVERSION_AUTOMATIC = 0x1,BDA_SPECTRAL_INVERSION_NORMAL = 0x2,BDA_SPECTRAL_INVERSION_INVERTED = 0x3,BDA_SPECTRAL_INVERSION_MAX = 0x4,};
typedef struct _TARGET_DEVICE_CUSTOM_NOTIFICATION TARGET_DEVICE_CUSTOM_NOTIFICATION;
typedef struct _TARGET_DEVICE_REMOVAL_NOTIFICATION TARGET_DEVICE_REMOVAL_NOTIFICATION;
typedef char TCHAR;
typedef struct _TEXTUAL_LEAF TEXTUAL_LEAF;
typedef enum _TIMER_TYPE TIMER_TYPE;
typedef struct _TIME_FIELDS TIME_FIELDS;
typedef enum $676B88915C1B724692BC802D411C1179 TIME_FUNCTION;
typedef struct _TOPOLOGY_MAP TOPOLOGY_MAP;
typedef enum _TRACE_INFORMATION_CLASS TRACE_INFORMATION_CLASS;
typedef struct truespeechwaveformat_tag TRUESPEECHWAVEFORMAT;
typedef unsigned __int8 TUCHAR;
enum TransmissionMode {BDA_XMIT_MODE_NOT_SET = 0xFFFFFFFF,BDA_XMIT_MODE_NOT_DEFINED = 0x0,BDA_XMIT_MODE_2K = 0x1,BDA_XMIT_MODE_8K = 0x2,BDA_XMIT_MODE_MAX = 0x3,};
typedef unsigned __int8 UCHAR;
typedef unsigned __int16 UHALF_PTR;
typedef unsigned int UINT;
typedef unsigned __int16 UINT16;
typedef unsigned int UINT32;
typedef unsigned __int64 UINT64;
typedef unsigned __int8 UINT8;
typedef unsigned int UINT_PTR;
typedef union _ULARGE_INTEGER ULARGE_INTEGER;
typedef unsigned int ULONG;
typedef unsigned int ULONG32;
typedef unsigned __int64 ULONG64;
typedef unsigned __int64 ULONGLONG;
typedef unsigned int ULONG_PTR;
typedef struct _UNICODE_STRING UNICODE_STRING;
typedef STRING32 UNICODE_STRING32;
typedef STRING64 UNICODE_STRING64;
typedef struct _UNIT_DDI_VERSION UNIT_DDI_VERSION;
typedef struct _UNIT_DIAG_LEVEL UNIT_DIAG_LEVEL;
typedef struct _UNIT_ISOCH_PARAMS UNIT_ISOCH_PARAMS;
typedef QUAD UQUAD;
typedef struct _URB URB;
typedef USHORT USAGE;
typedef struct _USAGE_AND_PAGE USAGE_AND_PAGE;
typedef enum $C3305B6EE9A249E58E7AD6D1E51C81B9 USBCAMD_CamControlFlags;
typedef struct _USBCAMD_DEVICE_DATA USBCAMD_DEVICE_DATA;
typedef struct _USBCAMD_DEVICE_DATA2 USBCAMD_DEVICE_DATA2;
typedef struct $2361741245AFF1C51192B59F7339350B USBCAMD_INTERFACE;
typedef struct _pipe_config_descriptor USBCAMD_Pipe_Config_Descriptor;
typedef PVOID USBD_CONFIGURATION_HANDLE;
typedef struct _USBD_DEVICE_INFORMATION USBD_DEVICE_INFORMATION;
typedef PVOID USBD_INTERFACE_HANDLE;
typedef struct _USBD_INTERFACE_INFORMATION USBD_INTERFACE_INFORMATION;
typedef struct _USBD_INTERFACE_LIST_ENTRY USBD_INTERFACE_LIST_ENTRY;
typedef struct _USBD_ISO_PACKET_DESCRIPTOR USBD_ISO_PACKET_DESCRIPTOR;
typedef PVOID USBD_PIPE_HANDLE;
typedef struct _USBD_PIPE_INFORMATION USBD_PIPE_INFORMATION;
typedef enum _USBD_PIPE_TYPE USBD_PIPE_TYPE;
typedef LONG USBD_STATUS;
typedef struct _USBD_VERSION_INFORMATION USBD_VERSION_INFORMATION;
typedef struct _USBUSER_BANDWIDTH_INFO_REQUEST USBUSER_BANDWIDTH_INFO_REQUEST;
typedef struct _USBUSER_BUS_STATISTICS_0_REQUEST USBUSER_BUS_STATISTICS_0_REQUEST;
typedef struct _USBUSER_CLOSE_RAW_DEVICE USBUSER_CLOSE_RAW_DEVICE;
typedef struct _USBUSER_CONTROLLER_INFO_0 USBUSER_CONTROLLER_INFO_0;
typedef struct _USBUSER_CONTROLLER_UNICODE_NAME USBUSER_CONTROLLER_UNICODE_NAME;
typedef struct _USBUSER_GET_DRIVER_VERSION USBUSER_GET_DRIVER_VERSION;
typedef struct _USBUSER_GET_USB2HW_VERSION USBUSER_GET_USB2HW_VERSION;
typedef struct _USBUSER_OPEN_RAW_DEVICE USBUSER_OPEN_RAW_DEVICE;
typedef struct _USBUSER_PASS_THRU_REQUEST USBUSER_PASS_THRU_REQUEST;
typedef struct _USBUSER_POWER_INFO_REQUEST USBUSER_POWER_INFO_REQUEST;
typedef struct _USBUSER_RAW_RESET_ROOT_PORT USBUSER_RAW_RESET_ROOT_PORT;
typedef struct _USBUSER_REQUEST_HEADER USBUSER_REQUEST_HEADER;
typedef struct _USBUSER_ROOTPORT_FEATURE_REQUEST USBUSER_ROOTPORT_FEATURE_REQUEST;
typedef struct _USBUSER_ROOTPORT_PARAMETERS USBUSER_ROOTPORT_PARAMETERS;
typedef struct _USBUSER_SEND_ONE_PACKET USBUSER_SEND_ONE_PACKET;
typedef struct _USBUSER_SEND_RAW_COMMAND USBUSER_SEND_RAW_COMMAND;
typedef struct _USB_ACQUIRE_INFO USB_ACQUIRE_INFO;
typedef struct _USB_BANDWIDTH_INFO USB_BANDWIDTH_INFO;
typedef struct _USB_BUS_INFORMATION_LEVEL_0 USB_BUS_INFORMATION_LEVEL_0;
typedef struct _USB_BUS_INFORMATION_LEVEL_1 USB_BUS_INFORMATION_LEVEL_1;
typedef struct _USB_BUS_INTERFACE_HUB_V0 USB_BUS_INTERFACE_HUB_V0;
typedef struct _USB_BUS_INTERFACE_HUB_V1 USB_BUS_INTERFACE_HUB_V1;
typedef struct _USB_BUS_INTERFACE_HUB_V2 USB_BUS_INTERFACE_HUB_V2;
typedef struct _USB_BUS_INTERFACE_HUB_V3 USB_BUS_INTERFACE_HUB_V3;
typedef struct _USB_BUS_INTERFACE_HUB_V4 USB_BUS_INTERFACE_HUB_V4;
typedef struct _USB_BUS_INTERFACE_HUB_V5 USB_BUS_INTERFACE_HUB_V5;
typedef struct _USB_BUS_INTERFACE_USBDI_V0 USB_BUS_INTERFACE_USBDI_V0;
typedef struct _USB_BUS_INTERFACE_USBDI_V1 USB_BUS_INTERFACE_USBDI_V1;
typedef struct _USB_BUS_INTERFACE_USBDI_V2 USB_BUS_INTERFACE_USBDI_V2;
typedef struct _USB_BUS_NOTIFICATION USB_BUS_NOTIFICATION;
typedef struct _USB_BUS_STATISTICS_0 USB_BUS_STATISTICS_0;
typedef struct _USB_CLOSE_RAW_DEVICE_PARAMETERS USB_CLOSE_RAW_DEVICE_PARAMETERS;
typedef struct _USB_COMMON_DESCRIPTOR USB_COMMON_DESCRIPTOR;
typedef struct _USB_CONFIGURATION_DESCRIPTOR USB_CONFIGURATION_DESCRIPTOR;
typedef struct _USB_CONFIGURATION_POWER_DESCRIPTOR USB_CONFIGURATION_POWER_DESCRIPTOR;
typedef struct _USB_CONNECTION_NOTIFICATION USB_CONNECTION_NOTIFICATION;
typedef enum _USB_CONNECTION_STATUS USB_CONNECTION_STATUS;
typedef enum _USB_CONTROLLER_FLAVOR USB_CONTROLLER_FLAVOR;
typedef struct _USB_CONTROLLER_INFORMATION_0 USB_CONTROLLER_INFORMATION_0;
typedef struct _USB_CONTROLLER_INFO_0 USB_CONTROLLER_INFO_0;
typedef struct _USB_DEFAULT_PIPE_SETUP_PACKET USB_DEFAULT_PIPE_SETUP_PACKET;
typedef struct _USB_DESCRIPTOR_REQUEST USB_DESCRIPTOR_REQUEST;
typedef struct _USB_DEVICE_DESCRIPTOR USB_DEVICE_DESCRIPTOR;
typedef struct _USB_DEVICE_INFORMATION_0 USB_DEVICE_INFORMATION_0;
typedef struct _USB_DEVICE_QUALIFIER_DESCRIPTOR USB_DEVICE_QUALIFIER_DESCRIPTOR;
typedef enum _USB_DEVICE_SPEED USB_DEVICE_SPEED;
typedef enum _USB_DEVICE_TYPE USB_DEVICE_TYPE;
typedef struct _USB_DRIVER_VERSION_PARAMETERS USB_DRIVER_VERSION_PARAMETERS;
typedef struct _USB_ENDPOINT_DESCRIPTOR USB_ENDPOINT_DESCRIPTOR;
typedef struct _USB_EXTHUB_INFORMATION_0 USB_EXTHUB_INFORMATION_0;
typedef struct _USB_EXTPORT_INFORMATION_0 USB_EXTPORT_INFORMATION_0;
typedef struct _USB_HCD_DRIVERKEY_NAME USB_HCD_DRIVERKEY_NAME;
typedef union _USB_HIGH_SPEED_MAXPACKET USB_HIGH_SPEED_MAXPACKET;
typedef struct _USB_HUB_CAPABILITIES USB_HUB_CAPABILITIES;
typedef struct _USB_HUB_DESCRIPTOR USB_HUB_DESCRIPTOR;
typedef struct _USB_HUB_INFORMATION USB_HUB_INFORMATION;
typedef struct _USB_HUB_NAME USB_HUB_NAME;
typedef enum _USB_HUB_NODE USB_HUB_NODE;
typedef void (__stdcall *USB_IDLE_CALLBACK)(PVOID Context);
typedef struct _USB_IDLE_CALLBACK_INFO USB_IDLE_CALLBACK_INFO;
typedef struct _USB_INTERFACE_DESCRIPTOR USB_INTERFACE_DESCRIPTOR;
typedef struct _USB_INTERFACE_POWER_DESCRIPTOR USB_INTERFACE_POWER_DESCRIPTOR;
typedef struct _USB_LEVEL_INFORMATION USB_LEVEL_INFORMATION;
typedef struct _USB_MI_PARENT_INFORMATION USB_MI_PARENT_INFORMATION;
typedef struct _USB_NODE_CONNECTION_ATTRIBUTES USB_NODE_CONNECTION_ATTRIBUTES;
typedef struct _USB_NODE_CONNECTION_DRIVERKEY_NAME USB_NODE_CONNECTION_DRIVERKEY_NAME;
typedef struct _USB_NODE_CONNECTION_INFORMATION USB_NODE_CONNECTION_INFORMATION;
typedef struct _USB_NODE_CONNECTION_INFORMATION_EX USB_NODE_CONNECTION_INFORMATION_EX;
typedef struct _USB_NODE_CONNECTION_NAME USB_NODE_CONNECTION_NAME;
typedef struct _USB_NODE_INFORMATION USB_NODE_INFORMATION;
typedef struct _USB_NOTIFICATION USB_NOTIFICATION;
typedef enum _USB_NOTIFICATION_TYPE USB_NOTIFICATION_TYPE;
typedef struct _USB_OPEN_RAW_DEVICE_PARAMETERS USB_OPEN_RAW_DEVICE_PARAMETERS;
typedef struct _USB_PASS_THRU_PARAMETERS USB_PASS_THRU_PARAMETERS;
typedef struct _USB_PIPE_INFO USB_PIPE_INFO;
typedef struct _USB_PIPE_INFORMATION_0 USB_PIPE_INFORMATION_0;
typedef struct _USB_POWER_INFO USB_POWER_INFO;
typedef struct _USB_ROOT_HUB_NAME USB_ROOT_HUB_NAME;
typedef struct _USB_SEND_RAW_COMMAND_PARAMETERS USB_SEND_RAW_COMMAND_PARAMETERS;
typedef struct _USB_STRING_DESCRIPTOR USB_STRING_DESCRIPTOR;
typedef struct _USB_UNICODE_NAME USB_UNICODE_NAME;
typedef struct _USB_USB2HW_VERSION_PARAMETERS USB_USB2HW_VERSION_PARAMETERS;
typedef enum _USB_USER_ERROR_CODE USB_USER_ERROR_CODE;
typedef unsigned __int16 USHORT;
typedef LONGLONG USN;
enum VARENUM {VT_EMPTY = 0x0,VT_NULL = 0x1,VT_I2 = 0x2,VT_I4 = 0x3,VT_R4 = 0x4,VT_R8 = 0x5,VT_CY = 0x6,VT_DATE = 0x7,VT_BSTR = 0x8,VT_DISPATCH = 0x9,VT_ERROR = 0xA,VT_BOOL = 0xB,VT_VARIANT = 0xC,VT_UNKNOWN = 0xD,VT_DECIMAL = 0xE,VT_I1 = 0x10,VT_UI1 = 0x11,VT_UI2 = 0x12,VT_UI4 = 0x13,VT_I8 = 0x14,VT_UI8 = 0x15,VT_INT = 0x16,VT_UINT = 0x17,VT_VOID = 0x18,VT_HRESULT = 0x19,VT_PTR = 0x1A,VT_SAFEARRAY = 0x1B,VT_CARRAY = 0x1C,VT_USERDEFINED = 0x1D,VT_LPSTR = 0x1E,VT_LPWSTR = 0x1F,VT_FILETIME = 0x40,VT_BLOB = 0x41,VT_STREAM = 0x42,VT_STORAGE = 0x43,VT_STREAMED_OBJECT = 0x44,VT_STORED_OBJECT = 0x45,VT_BLOB_OBJECT = 0x46,VT_CF = 0x47,VT_CLSID = 0x48,VT_VECTOR = 0x1000,VT_ARRAY = 0x2000,VT_BYREF = 0x4000,VT_RESERVED = 0x8000,VT_ILLEGAL = 0xFFFF,VT_ILLEGALMASKED = 0xFFF,VT_TYPEMASK = 0xFFF,};
typedef struct _VBICAP_PROPERTIES_PROTECTION_S VBICAP_PROPERTIES_PROTECTION_S;
typedef struct _VBICODECFILTERING_CC_SUBSTREAMS VBICODECFILTERING_CC_SUBSTREAMS;
typedef struct _VBICODECFILTERING_NABTS_SUBSTREAMS VBICODECFILTERING_NABTS_SUBSTREAMS;
typedef struct _VBICODECFILTERING_SCANLINES VBICODECFILTERING_SCANLINES;
typedef struct _VBICODECFILTERING_STATISTICS_CC VBICODECFILTERING_STATISTICS_CC;
typedef struct _VBICODECFILTERING_STATISTICS_CC_PIN VBICODECFILTERING_STATISTICS_CC_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON VBICODECFILTERING_STATISTICS_COMMON;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON_PIN VBICODECFILTERING_STATISTICS_COMMON_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS VBICODECFILTERING_STATISTICS_NABTS;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS_PIN VBICODECFILTERING_STATISTICS_NABTS_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT VBICODECFILTERING_STATISTICS_TELETEXT;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN VBICODECFILTERING_STATISTICS_TELETEXT_PIN;
typedef enum $ACDD7173F686B0B8EEB5D0397954DC28 VIDEOENCODER_BITRATE_MODE;
typedef struct wavefilter_volume_tag VOLUMEWAVEFILTER;
typedef struct _WAIT_CONTEXT_BLOCK WAIT_CONTEXT_BLOCK;
typedef enum _WAIT_TYPE WAIT_TYPE;
typedef struct wavefilter_tag WAVEFILTER;
typedef struct waveformat_tag WAVEFORMAT;
typedef struct tWAVEFORMATEX WAVEFORMATEX;
typedef struct $48F34F6E58318E719B3C17D5DF8D3416 WAVEFORMATEXTENSIBLE;
typedef WAVEFORMATEXTENSIBLE WAVEFORMATIEEEFLOATEX;
typedef WAVEFORMATEXTENSIBLE WAVEFORMATPCMEX;
typedef wchar_t WCHAR;
typedef enum _WDMUSB_POWER_STATE WDMUSB_POWER_STATE;
typedef enum $FE3B83602F0ED43C5C383B1542328237 WMIENABLEDISABLECONTROL;
typedef struct $113235CB38218359B65312E6A8B53D96 WMIGUIDREGINFO;
typedef struct _WMILIB_CONTEXT WMILIB_CONTEXT;
typedef struct _WMI_CHANGER_PARAMETERS WMI_CHANGER_PARAMETERS;
typedef struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR WMI_CHANGER_PROBLEM_DEVICE_ERROR;
typedef struct _WMI_CHANGER_PROBLEM_WARNING WMI_CHANGER_PROBLEM_WARNING;
typedef struct _WMI_DISK_GEOMETRY WMI_DISK_GEOMETRY;
typedef struct _WMI_DISK_PERFORMANCE WMI_DISK_PERFORMANCE;
typedef void (__stdcall *WMI_NOTIFICATION_CALLBACK)(PVOID Wnode, PVOID Context);
typedef struct _WMI_TAPE_DRIVE_PARAMETERS WMI_TAPE_DRIVE_PARAMETERS;
typedef struct _WMI_TAPE_MEDIA_PARAMETERS WMI_TAPE_MEDIA_PARAMETERS;
typedef struct _WMI_TAPE_PROBLEM_DEVICE_ERROR WMI_TAPE_PROBLEM_DEVICE_ERROR;
typedef struct _WMI_TAPE_PROBLEM_IO_ERROR WMI_TAPE_PROBLEM_IO_ERROR;
typedef struct _WMI_TAPE_PROBLEM_WARNING WMI_TAPE_PROBLEM_WARNING;
typedef struct _WMI_TAPE_SYMBOLIC_NAME WMI_TAPE_SYMBOLIC_NAME;
typedef unsigned __int16 WORD;
typedef struct _WORK_QUEUE_ITEM WORK_QUEUE_ITEM;
typedef enum _WORK_QUEUE_TYPE WORK_QUEUE_TYPE;
typedef UINT_PTR WPARAM;
typedef struct _WRITE_LOG_SECTORS_IN WRITE_LOG_SECTORS_IN;
typedef struct _WRITE_LOG_SECTORS_OUT WRITE_LOG_SECTORS_OUT;
typedef struct _WST_BUFFER WST_BUFFER;
typedef struct _WST_BUFFER_LINE WST_BUFFER_LINE;
typedef struct yamaha_adpmcwaveformat_tag YAMAHA_ADPCMWAVEFORMAT;
struct _ACCESS_RANGE {STREAM_PHYSICAL_ADDRESS RangeStart;ULONG RangeLength;BOOLEAN RangeInMemory;ULONG Reserved;};
struct _ACCESS_STATE {LUID OperationID;BOOLEAN SecurityEvaluated;BOOLEAN GenerateAudit;BOOLEAN GenerateOnClose;BOOLEAN PrivilegesAllocated;ULONG Flags;ACCESS_MASK RemainingDesiredAccess;ACCESS_MASK PreviouslyGrantedAccess;ACCESS_MASK OriginalDesiredAccess;SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;PSECURITY_DESCRIPTOR SecurityDescriptor;PVOID AuxData;union _ACCESS_STATE::$18D81C5C1A882E7A2AF410C6CD9261CD Privileges;BOOLEAN AuditPrivileges;UNICODE_STRING ObjectName;UNICODE_STRING ObjectTypeName;};
union _ACCESS_STATE::$18D81C5C1A882E7A2AF410C6CD9261CD {INITIAL_PRIVILEGE_SET InitialPrivilegeSet;PRIVILEGE_SET PrivilegeSet;};
struct _ACL {UCHAR AclRevision;UCHAR Sbz1;USHORT AclSize;USHORT AceCount;USHORT Sbz2;};
struct _ACPI_EVAL_INPUT_BUFFER {ULONG Signature;union {UCHAR MethodName[4];ULONG MethodNameAsUlong;};};
union _ACPI_EVAL_INPUT_BUFFER::$CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX {ULONG Signature;union {UCHAR MethodName[4];ULONG MethodNameAsUlong;};ULONG Size;ULONG ArgumentCount;ACPI_METHOD_ARGUMENT Argument[1];};
union _ACPI_EVAL_INPUT_BUFFER_COMPLEX::$CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER {ULONG Signature;union {UCHAR MethodName[4];ULONG MethodNameAsUlong;};ULONG IntegerArgument;};
union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER::$CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING {ULONG Signature;union {UCHAR MethodName[4];ULONG MethodNameAsUlong;};ULONG StringLength;UCHAR String[1];};
union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING::$CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
struct _ACPI_EVAL_OUTPUT_BUFFER {ULONG Signature;ULONG Length;ULONG Count;ACPI_METHOD_ARGUMENT Argument[1];};
struct _ACPI_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PGPE_CONNECT_VECTOR GpeConnectVector;PGPE_DISCONNECT_VECTOR GpeDisconnectVector;PGPE_ENABLE_EVENT GpeEnableEvent;PGPE_DISABLE_EVENT GpeDisableEvent;PGPE_CLEAR_STATUS GpeClearStatus;PREGISTER_FOR_DEVICE_NOTIFICATIONS RegisterForDeviceNotifications;PUNREGISTER_FOR_DEVICE_NOTIFICATIONS UnregisterForDeviceNotifications;};
struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER {ULONG Signature;PVOID LockObject;};
struct _ACPI_METHOD_ARGUMENT {USHORT Type;USHORT DataLength;union {ULONG Argument;UCHAR Data[1];};};
union _ACPI_METHOD_ARGUMENT::$0083E76AA1C365C25C9D682C0B227FF6 {ULONG Argument;UCHAR Data[1];};
struct _ADDRESS_FIFO {SINGLE_LIST_ENTRY FifoList;PMDL FifoMdl;};
struct _ADDRESS_OFFSET {USHORT Off_High;ULONG Off_Low;};
struct _ADDRESS_RANGE {USHORT AR_Off_High;USHORT AR_Length;ULONG AR_Off_Low;};
struct _AGP_STD_DATA {ULONGLONG ApertureBase;ULONG ApertureLength;ULONG AgpStatus;ULONG AgpCommand;};
struct _ALLOW_PERFORMANCE_HIT_IN {BOOLEAN Allow;};
enum _ALTERNATIVE_ARCHITECTURE_TYPE {StandardDesign = 0x0,NEC98x86 = 0x1,EndAlternatives = 0x2,};
struct _ASYNC_PACKET {unsigned __int16 AP_Priority : 4;unsigned __int16 AP_tCode : 4;unsigned __int16 AP_rt : 2;unsigned __int16 AP_tLabel : 6;NODE_ADDRESS AP_Destination_ID;union _ASYNC_PACKET::$AB07F285586641EA5A3A0A6EB783C0F2 u;NODE_ADDRESS AP_Source_ID;ULONG AP_Offset_Low;union _ASYNC_PACKET::$03C481F7A4752B31164DFBAFD3BDD779 u1;};
union _ASYNC_PACKET::$03C481F7A4752B31164DFBAFD3BDD779 {struct _ASYNC_PACKET::$03C481F7A4752B31164DFBAFD3BDD779::$1D6F3402F5C57A4CB8668FC1E7849EE4 Block;ULONG AP_Quadlet_Data;};
struct _ASYNC_PACKET::$03C481F7A4752B31164DFBAFD3BDD779::$1D6F3402F5C57A4CB8668FC1E7849EE4 {USHORT AP_Extended_tCode;USHORT AP_Data_Length;};
union _ASYNC_PACKET::$AB07F285586641EA5A3A0A6EB783C0F2 {struct _ASYNC_PACKET::$AB07F285586641EA5A3A0A6EB783C0F2::$5FED45C7A7070B3B92A06D6CE07E910F Response;USHORT AP_Offset_High;};
struct _ASYNC_PACKET::$AB07F285586641EA5A3A0A6EB783C0F2::$5FED45C7A7070B3B92A06D6CE07E910F {unsigned __int16 AP_Reserved : 12;unsigned __int16 AP_Rcode : 4;};
struct _ATAPI_FAILURE_PREDICT_DATA {ULONG Length;UCHAR VendorSpecific[362];UCHAR OfflineCollectionStatus;UCHAR SelfTestStatus;USHORT TotalTime;UCHAR VendorSpecific2;UCHAR OfflineCollectCapability;USHORT SmartCapability;UCHAR ErrorLogCapability;UCHAR VendorSpecific3;UCHAR ShortPollTimeInMinutes;UCHAR ExtendedPollTimeInMinutes;UCHAR Reserved[12];UCHAR VendorSpecific4[125];UCHAR Checksum;};
struct _AVCCONNECTINFO {GUID DeviceID;UCHAR SubunitAddress[32];ULONG SubunitPlugNumber;KSPIN_DATAFLOW DataFlow;HANDLE hPlug;ULONG UnitPlugNumber;};
struct _AVCPRECONNECTINFO {GUID DeviceID;UCHAR SubunitAddress[32];ULONG SubunitPlugNumber;KSPIN_DATAFLOW DataFlow;ULONG Flags;ULONG UnitPlugNumber;};
struct _AVCSTRM_BUFFER_STRUCT {BOOL ClockProvider;HANDLE ClockHandle;PKSSTREAM_HEADER StreamHeader;PVOID FrameBuffer;PVOID Context;};
enum _AVCSTRM_FORMAT {AVCSTRM_FORMAT_SDDV_NTSC = 0x0,AVCSTRM_FORMAT_SDDV_PAL = 0x1,AVCSTRM_FORMAT_MPEG2TS = 0x2,AVCSTRM_FORMAT_HDDV_NTSC = 0x3,AVCSTRM_FORMAT_HDDV_PAL = 0x4,AVCSTRM_FORMAT_SDLDV_NTSC = 0x5,AVCSTRM_FORMAT_SDLDV_PAL = 0x6,};
struct _AVCSTRM_FORMAT_INFO {ULONG SizeOfThisBlock;AVCSTRM_FORMAT AVCStrmFormat;CIP_HDR1 cipHdr1;CIP_HDR2_SYT cipHdr2;ULONG SrcPacketsPerFrame;ULONG FrameSize;ULONG NumOfRcvBuffers;ULONG NumOfXmtBuffers;DWORD OptionFlags;ULONG AvgTimePerFrame;ULONG BlockPeriod;ULONG Reserved[4];};
enum _AVCSTRM_FUNCTION {AVCSTRM_READ = 0x0,AVCSTRM_WRITE = 0x1,AVCSTRM_ABORT_STREAMING = 0x2,AVCSTRM_OPEN = 0x100,AVCSTRM_CLOSE = 0x101,AVCSTRM_GET_STATE = 0x102,AVCSTRM_SET_STATE = 0x103,AVCSTRM_GET_PROPERTY = 0x104,AVCSTRM_SET_PROPERTY = 0x105,};
struct _AVCSTRM_OPEN_STRUCT {KSPIN_DATAFLOW DataFlow;PAVCSTRM_FORMAT_INFO AVCFormatInfo;PVOID AVCStreamContext;HANDLE hPlugLocal;};
struct _AVC_COMMAND_IRB {struct {AVC_FUNCTION Function;};unsigned __int8 SubunitAddrFlag : 1;unsigned __int8 AlternateOpcodesFlag : 1;unsigned __int8 TimeoutFlag : 1;unsigned __int8 RetryFlag : 1;union {UCHAR CommandType;UCHAR ResponseCode;};PUCHAR SubunitAddr;PUCHAR AlternateOpcodes;LARGE_INTEGER Timeout;UCHAR Retries;UCHAR Opcode;ULONG OperandLength;UCHAR Operands[509];NODE_ADDRESS NodeAddress;ULONG Generation;};
union _AVC_COMMAND_IRB::$39C82A5B2A48A1A8E03C983BBE5BCCB4 {UCHAR CommandType;UCHAR ResponseCode;};
struct _AVC_EXT_PLUG_COUNTS {ULONG ExtInputs;ULONG ExtOutputs;};
struct _AVC_IRB {AVC_FUNCTION Function;};
struct _AVC_MULTIFUNC_IRB {struct {AVC_FUNCTION Function;};union {AVC_PIN_COUNT PinCount;AVC_PIN_DESCRIPTOR PinDescriptor;AVC_PRECONNECT_INFO PreConnectInfo;AVC_SETCONNECT_INFO SetConnectInfo;AVC_PIN_ID PinId;AVC_EXT_PLUG_COUNTS ExtPlugCounts;AVC_UNIQUE_ID UniqueID;AVC_PEER_DO_LOCATOR PeerLocator;AVC_PEER_DO_LIST PeerList;AVC_SUBUNIT_INFO_BLOCK Subunits;};};
union _AVC_MULTIFUNC_IRB::$19B143002B6E29BFBBF92C7766CBAC0D {AVC_PIN_COUNT PinCount;AVC_PIN_DESCRIPTOR PinDescriptor;AVC_PRECONNECT_INFO PreConnectInfo;AVC_SETCONNECT_INFO SetConnectInfo;AVC_PIN_ID PinId;AVC_EXT_PLUG_COUNTS ExtPlugCounts;AVC_UNIQUE_ID UniqueID;AVC_PEER_DO_LOCATOR PeerLocator;AVC_PEER_DO_LIST PeerList;AVC_SUBUNIT_INFO_BLOCK Subunits;};
struct _AVC_PEER_DO_LIST {ULONG Count;PDEVICE_OBJECT *Objects;};
struct _AVC_PEER_DO_LOCATOR {NODE_ADDRESS NodeAddress;ULONG Generation;PDEVICE_OBJECT DeviceObject;};
struct _AVC_PIN_COUNT {ULONG PinCount;};
struct _AVC_PIN_DESCRIPTOR {ULONG PinId;KSPIN_DESCRIPTOR PinDescriptor;PFNAVCINTERSECTHANDLER IntersectHandler;PVOID Context;};
struct _AVC_PIN_ID {ULONG PinId;};
struct _AVC_PRECONNECT_INFO {ULONG PinId;AVCPRECONNECTINFO ConnectInfo;};
struct _AVC_SETCONNECT_INFO {ULONG PinId;AVCCONNECTINFO ConnectInfo;};
struct _AVC_STREAM_REQUEST_BLOCK {ULONG SizeOfThisBlock;ULONG Version;AVCSTRM_FUNCTION Function;ULONG Flags;NTSTATUS Status;PVOID AVCStreamContext;PVOID Context1;PVOID Context2;PVOID Context3;PVOID Context4;ULONG Reserved[4];union _AVC_STREAM_REQUEST_BLOCK::_tagCommandData CommandData;};
union _AVC_STREAM_REQUEST_BLOCK::_tagCommandData {KSSTATE StreamState;AVCSTRM_OPEN_STRUCT OpenStruct;AVCSTRM_BUFFER_STRUCT BufferStruct;};
struct _AVC_SUBUNIT_ADDR_SPEC {ULONG Flags;UCHAR SubunitAddress[1];};
struct _AVC_SUBUNIT_INFO_BLOCK {UCHAR Info[32];};
struct _AVC_UNIQUE_ID {GUID DeviceID;};
struct _AV_61883_REQUEST {ULONG Function;ULONG Version;ULONG Flags;union {GET_UNIT_INFO GetUnitInfo;SET_UNIT_INFO SetUnitInfo;CMP_GET_PLUG_HANDLE GetPlugHandle;CMP_GET_PLUG_STATE GetPlugState;CMP_CONNECT Connect;CMP_DISCONNECT Disconnect;CIP_ATTACH_FRAME AttachFrame;CIP_CANCEL_FRAME CancelFrame;CIP_TALK Talk;CIP_LISTEN Listen;CIP_STOP Stop;FCP_REQUEST Request;FCP_RESPONSE Response;FCP_SEND_REQUEST SendRequest;FCP_GET_RESPONSE GetResponse;FCP_GET_REQUEST GetRequest;FCP_SEND_RESPONSE SendResponse;SET_FCP_NOTIFY SetFcpNotify;CMP_CREATE_PLUG CreatePlug;CMP_DELETE_PLUG DeletePlug;CMP_SET_PLUG SetPlug;BUS_RESET_NOTIFY BusResetNotify;SET_UNIT_DIRECTORY SetUnitDirectory;CMP_MONITOR_PLUGS MonitorPlugs;};};
union _AV_61883_REQUEST::$F219298361C97389521033D921298EFE {GET_UNIT_INFO GetUnitInfo;SET_UNIT_INFO SetUnitInfo;CMP_GET_PLUG_HANDLE GetPlugHandle;CMP_GET_PLUG_STATE GetPlugState;CMP_CONNECT Connect;CMP_DISCONNECT Disconnect;CIP_ATTACH_FRAME AttachFrame;CIP_CANCEL_FRAME CancelFrame;CIP_TALK Talk;CIP_LISTEN Listen;CIP_STOP Stop;FCP_REQUEST Request;FCP_RESPONSE Response;FCP_SEND_REQUEST SendRequest;FCP_GET_RESPONSE GetResponse;FCP_GET_REQUEST GetRequest;FCP_SEND_RESPONSE SendResponse;SET_FCP_NOTIFY SetFcpNotify;CMP_CREATE_PLUG CreatePlug;CMP_DELETE_PLUG DeletePlug;CMP_SET_PLUG SetPlug;BUS_RESET_NOTIFY BusResetNotify;SET_UNIT_DIRECTORY SetUnitDirectory;CMP_MONITOR_PLUGS MonitorPlugs;};
struct _AV_PCR {union {OPCR oPCR;IPCR iPCR;ULONG ulongData;};};
union _AV_PCR::$396EF7A68396BFEFEEA92DFA7F5171E0 {OPCR oPCR;IPCR iPCR;ULONG ulongData;};
struct _BANDWIDTH_ALLOCATION {LIST_ENTRY AllocationList;ULONG Tag;ULONG OwnedUnits;ULONG fulSpeed;BOOLEAN bRemoteAllocation;ULONG Generation;PNODE_DEVICE_EXTENSION DeviceExtension;};
union _BAY_STATUS {USHORT us;struct {unsigned __int32 VidEnabled : 1;unsigned __int32 RemovalWakeupEnabled : 1;unsigned __int32 DeviceStatusChangeEnabled : 1;unsigned __int32 RemovalRequestEnabled : 1;unsigned __int32 LastBayStateRequested : 3;unsigned __int32 InterlockEngaged : 1;unsigned __int32 DeviceUsbIsPresent : 1;unsigned __int32 Device1394IsPresent : 1;unsigned __int32 DeviceStatusChange : 1;unsigned __int32 RemovalRequestChange : 1;unsigned __int32 CurrentBayState : 3;unsigned __int32 SecurityLockEngaged : 1;unsigned __int32 Reserved : 8;};};
struct _BAY_STATUS::$6ACD10B4FE63F7045E18AEC2BCEBB3B0 {unsigned __int32 VidEnabled : 1;unsigned __int32 RemovalWakeupEnabled : 1;unsigned __int32 DeviceStatusChangeEnabled : 1;unsigned __int32 RemovalRequestEnabled : 1;unsigned __int32 LastBayStateRequested : 3;unsigned __int32 InterlockEngaged : 1;unsigned __int32 DeviceUsbIsPresent : 1;unsigned __int32 Device1394IsPresent : 1;unsigned __int32 DeviceStatusChange : 1;unsigned __int32 RemovalRequestChange : 1;unsigned __int32 CurrentBayState : 3;unsigned __int32 SecurityLockEngaged : 1;unsigned __int32 Reserved : 8;};
struct _BDANODE_DESCRIPTOR {ULONG ulBdaNodeType;GUID guidFunction;GUID guidName;};
struct _BDA_CA_MODULE_UI {ULONG ulFormat;ULONG ulbcDesc;ULONG ulDesc[1];};
struct _BDA_ETHERNET_ADDRESS {BYTE rgbAddress[6];};
struct _BDA_ETHERNET_ADDRESS_LIST {ULONG ulcAddresses;BDA_ETHERNET_ADDRESS rgAddressl[1];};
struct _BDA_FILTER_TEMPLATE {const KSFILTER_DESCRIPTOR *pFilterDescriptor;ULONG ulcPinPairs;const BDA_PIN_PAIRING *pPinPairs;};
struct _BDA_IPv4_ADDRESS {BYTE rgbAddress[4];};
struct _BDA_IPv4_ADDRESS_LIST {ULONG ulcAddresses;BDA_IPv4_ADDRESS rgAddressl[1];};
struct _BDA_IPv6_ADDRESS {BYTE rgbAddress[6];};
struct _BDA_IPv6_ADDRESS_LIST {ULONG ulcAddresses;BDA_IPv6_ADDRESS rgAddressl[1];};
struct _BDA_PID_MAP {MEDIA_SAMPLE_CONTENT MediaSampleContent;ULONG ulcPIDs;ULONG aulPIDs[1];};
struct _BDA_PID_UNMAP {ULONG ulcPIDs;ULONG aulPIDs[1];};
struct _BDA_PIN_PAIRING {ULONG ulInputPin;ULONG ulOutputPin;ULONG ulcMaxInputsPerOutput;ULONG ulcMinInputsPerOutput;ULONG ulcMaxOutputsPerInput;ULONG ulcMinOutputsPerInput;ULONG ulcTopologyJoints;const ULONG *pTopologyJoints;};
struct _BDA_PROGRAM_PID_LIST {ULONG ulProgramNumber;ULONG ulcPIDs;ULONG ulPID[1];};
struct _BDA_TABLE_SECTION {ULONG ulPrimarySectionId;ULONG ulSecondarySectionId;ULONG ulcbSectionLength;ULONG argbSectionData[1];};
struct _BDA_TEMPLATE_CONNECTION {ULONG FromNodeType;ULONG FromNodePinType;ULONG ToNodeType;ULONG ToNodePinType;};
struct _BDA_TEMPLATE_PIN_JOINT {ULONG uliTemplateConnection;ULONG ulcInstancesMax;};
union _BM_REQUEST_TYPE {UCHAR B;};
struct _BM_REQUEST_TYPE::_BM {unsigned __int8 Recipient : 2;unsigned __int8 Reserved : 3;unsigned __int8 Type : 2;unsigned __int8 Dir : 1;};
struct _BOOTDISK_INFORMATION {LONGLONG BootPartitionOffset;LONGLONG SystemPartitionOffset;ULONG BootDeviceSignature;ULONG SystemDeviceSignature;};
struct _BOOTDISK_INFORMATION_EX {LONGLONG BootPartitionOffset;LONGLONG SystemPartitionOffset;ULONG BootDeviceSignature;ULONG SystemDeviceSignature;GUID BootDeviceGuid;GUID SystemDeviceGuid;BOOLEAN BootDeviceIsGpt;BOOLEAN SystemDeviceIsGpt;};
enum _BUS_DATA_TYPE {ConfigurationSpaceUndefined = 0xFFFFFFFF,Cmos = 0x0,EisaConfiguration = 0x1,Pos = 0x2,CbusConfiguration = 0x3,PCIConfiguration = 0x4,VMEConfiguration = 0x5,NuBusConfiguration = 0x6,PCMCIAConfiguration = 0x7,MPIConfiguration = 0x8,MPSAConfiguration = 0x9,PNPISAConfiguration = 0xA,SgiInternalConfiguration = 0xB,MaximumBusDataType = 0xC,};
struct _BUS_GENERATION_NODE {ULONG GenerationCount;NODE_ADDRESS LocalNodeAddress;NODE_ADDRESS DeviceNodeAddress;};
struct _BUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PTRANSLATE_BUS_ADDRESS TranslateBusAddress;PGET_DMA_ADAPTER GetDmaAdapter;PGET_SET_DEVICE_DATA SetBusData;PGET_SET_DEVICE_DATA GetBusData;};
struct _BUS_RESET_NOTIFY {ULONG Flags;PBUS_RESET_ROUTINE pfnNotify;PVOID Context;};
struct _CC_BYTE_PAIR {BYTE Decoded[2];USHORT Reserved;};
struct _CC_HW_FIELD {VBICODECFILTERING_SCANLINES ScanlinesRequested;ULONG fieldFlags;LONGLONG PictureNumber;CC_BYTE_PAIR Lines[12];};
struct _CIP_ATTACH_FRAME {HANDLE hConnect;ULONG FrameLength;ULONG SourceLength;PCIP_FRAME Frame;};
struct _CIP_CANCEL_FRAME {HANDLE hConnect;PCIP_FRAME Frame;};
struct _CIP_DATA_FORMAT {UCHAR FMT;UCHAR FDF_hi;UCHAR FDF_mid;UCHAR FDF_lo;BOOLEAN bHeader;UCHAR Padding;UCHAR BlockSize;UCHAR Fraction;ULONG BlockPeriod;};
struct _CIP_FRAME {PCIP_FRAME pNext;ULONG Flags;PCIP_VALIDATE_ROUTINE pfnValidate;PVOID ValidateContext;PCIP_NOTIFY_ROUTINE pfnNotify;PVOID NotifyContext;CYCLE_TIME Timestamp;ULONG Status;PUCHAR Packet;ULONG CompletedBytes;};
struct _CIP_HDR1 {unsigned __int32 DBC : 8;unsigned __int32 Rsv00 : 2;unsigned __int32 SPH : 1;unsigned __int32 QPC : 3;unsigned __int32 FN : 2;unsigned __int32 DBS : 8;unsigned __int32 SID : 6;unsigned __int32 Bit00 : 2;};
struct _CIP_HDR2_FDF {unsigned __int32 FDF : 24;unsigned __int32 FMT : 6;unsigned __int32 Bit10 : 2;};
struct _CIP_HDR2_MPEGTS {unsigned __int32 TSF : 1;unsigned __int32 RSV23bit : 23;unsigned __int32 FMT : 6;unsigned __int32 Bit10 : 2;};
struct _CIP_HDR2_SYT {unsigned __int32 SYT : 16;unsigned __int32 RSV : 2;unsigned __int32 STYPE : 5;unsigned __int32 F5060_OR_TSF : 1;unsigned __int32 FMT : 6;unsigned __int32 Bit10 : 2;};
struct _CIP_LISTEN {HANDLE hConnect;};
struct _CIP_NOTIFY_INFO {HANDLE hConnect;PVOID Context;PCIP_FRAME Frame;};
struct _CIP_STOP {HANDLE hConnect;};
struct _CIP_TALK {HANDLE hConnect;};
struct _CIP_VALIDATE_INFO {HANDLE hConnect;PVOID Context;CYCLE_TIME TimeStamp;PUCHAR Packet;};
struct _CLIENT_ID {HANDLE UniqueProcess;HANDLE UniqueThread;};
struct _CMP_CONNECT {HANDLE hOutputPlug;HANDLE hInputPlug;CMP_CONNECT_TYPE Type;CIP_DATA_FORMAT Format;HANDLE hConnect;};
struct _CMP_CREATE_PLUG {CMP_PLUG_TYPE PlugType;AV_PCR Pcr;PCMP_NOTIFY_ROUTINE pfnNotify;PVOID Context;ULONG PlugNum;HANDLE hPlug;};
struct _CMP_DELETE_PLUG {HANDLE hPlug;};
struct _CMP_DISCONNECT {HANDLE hConnect;};
struct _CMP_GET_PLUG_HANDLE {ULONG PlugNum;CMP_PLUG_TYPE Type;HANDLE hPlug;};
struct _CMP_GET_PLUG_STATE {HANDLE hPlug;ULONG State;ULONG DataRate;ULONG Payload;ULONG BC_Connections;ULONG PP_Connections;};
struct _CMP_MONITOR_INFO {ULONG State;ULONG PlugNum;ULONG PlugType;AV_PCR Pcr;PVOID Context;};
struct _CMP_MONITOR_PLUGS {ULONG Flags;PCMP_MONITOR_ROUTINE pfnNotify;PVOID Context;};
struct _CMP_NOTIFY_INFO {HANDLE hPlug;AV_PCR Pcr;PVOID Context;};
struct _CMP_SET_PLUG {HANDLE hPlug;AV_PCR Pcr;};
struct _CM_COMPONENT_INFORMATION {DEVICE_FLAGS Flags;ULONG Version;ULONG Key;KAFFINITY AffinityMask;};
struct _CM_DISK_GEOMETRY_DEVICE_DATA {ULONG BytesPerSector;ULONG NumberOfCylinders;ULONG SectorsPerTrack;ULONG NumberOfHeads;};
struct _CM_EISA_FUNCTION_INFORMATION {ULONG CompressedId;UCHAR IdSlotFlags1;UCHAR IdSlotFlags2;UCHAR MinorRevision;UCHAR MajorRevision;UCHAR Selections[26];UCHAR FunctionFlags;UCHAR TypeString[80];EISA_MEMORY_CONFIGURATION EisaMemory[9];EISA_IRQ_CONFIGURATION EisaIrq[7];EISA_DMA_CONFIGURATION EisaDma[4];EISA_PORT_CONFIGURATION EisaPort[20];UCHAR InitializationData[60];};
struct _CM_EISA_SLOT_INFORMATION {UCHAR ReturnCode;UCHAR ReturnFlags;UCHAR MajorRevision;UCHAR MinorRevision;USHORT Checksum;UCHAR NumberFunctions;UCHAR FunctionInformation;ULONG CompressedId;};
enum _CM_ERROR_CONTROL_TYPE {IgnoreError = 0x0,NormalError = 0x1,SevereError = 0x2,CriticalError = 0x3,};
struct _CM_FLOPPY_DEVICE_DATA {USHORT Version;USHORT Revision;CHAR Size[8];ULONG MaxDensity;ULONG MountDensity;UCHAR StepRateHeadUnloadTime;UCHAR HeadLoadTime;UCHAR MotorOffTime;UCHAR SectorLengthCode;UCHAR SectorPerTrack;UCHAR ReadWriteGapLength;UCHAR DataTransferLength;UCHAR FormatGapLength;UCHAR FormatFillCharacter;UCHAR HeadSettleTime;UCHAR MotorSettleTime;UCHAR MaximumTrackValue;UCHAR DataTransferRate;};
struct _CM_FULL_RESOURCE_DESCRIPTOR {INTERFACE_TYPE DoNotUse1;ULONG DoNotUse2;CM_PARTIAL_RESOURCE_LIST PartialResourceList;};
struct _CM_INT13_DRIVE_PARAMETER {USHORT DriveSelect;ULONG MaxCylinders;USHORT SectorsPerTrack;USHORT MaxHeads;USHORT NumberDrives;};
struct _CM_KEYBOARD_DEVICE_DATA {USHORT Version;USHORT Revision;UCHAR Type;UCHAR Subtype;USHORT KeyboardFlags;};
struct _CM_MCA_POS_DATA {USHORT AdapterId;UCHAR PosData1;UCHAR PosData2;UCHAR PosData3;UCHAR PosData4;};
struct _CM_MONITOR_DEVICE_DATA {USHORT Version;USHORT Revision;USHORT HorizontalScreenSize;USHORT VerticalScreenSize;USHORT HorizontalResolution;USHORT VerticalResolution;USHORT HorizontalDisplayTimeLow;USHORT HorizontalDisplayTime;USHORT HorizontalDisplayTimeHigh;USHORT HorizontalBackPorchLow;USHORT HorizontalBackPorch;USHORT HorizontalBackPorchHigh;USHORT HorizontalFrontPorchLow;USHORT HorizontalFrontPorch;USHORT HorizontalFrontPorchHigh;USHORT HorizontalSyncLow;USHORT HorizontalSync;USHORT HorizontalSyncHigh;USHORT VerticalBackPorchLow;USHORT VerticalBackPorch;USHORT VerticalBackPorchHigh;USHORT VerticalFrontPorchLow;USHORT VerticalFrontPorch;USHORT VerticalFrontPorchHigh;USHORT VerticalSyncLow;USHORT VerticalSync;USHORT VerticalSyncHigh;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR {UCHAR Type;UCHAR ShareDisposition;USHORT Flags;union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0 u;};
union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0 {struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$BBBCA153A119060DF311607C16E36BB2 Generic;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$BBBCA153A119060DF311607C16E36BB2 Port;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$BB7094CF39B58C60385FAAA7DFEE1197 Interrupt;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$BBBCA153A119060DF311607C16E36BB2 Memory;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$1F3D6AF14FC8FA95287DDF447D6BE47F Dma;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$D2EE30319AFD96435F4334D8E12C7935 BusNumber;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$6BF00F84A5C727E3B25245E9FBDFB278 DeviceSpecificData;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$1F3D6AF14FC8FA95287DDF447D6BE47F {ULONG Channel;ULONG Port;ULONG Reserved1;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$6BF00F84A5C727E3B25245E9FBDFB278 {ULONG DataSize;ULONG Reserved1;ULONG Reserved2;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$812F79A5FC2BE6FE62CE9F41854F4845 {ULONG Data[3];};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$BB7094CF39B58C60385FAAA7DFEE1197 {ULONG Level;ULONG Vector;KAFFINITY Affinity;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$BBBCA153A119060DF311607C16E36BB2 {PHYSICAL_ADDRESS Start;ULONG Length;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$6C598239F5A12A08B71DAFA297FA0FC0::$D2EE30319AFD96435F4334D8E12C7935 {ULONG Start;ULONG Length;ULONG Reserved;};
struct _CM_PARTIAL_RESOURCE_LIST {USHORT Version;USHORT Revision;ULONG Count;CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];};
struct _CM_PNP_BIOS_DEVICE_NODE {USHORT Size;UCHAR Node;ULONG ProductId;UCHAR DeviceType[3];USHORT DeviceAttributes;};
struct _CM_PNP_BIOS_INSTALLATION_CHECK {UCHAR Signature[4];UCHAR Revision;UCHAR Length;USHORT ControlField;UCHAR Checksum;ULONG EventFlagAddress;USHORT RealModeEntryOffset;USHORT RealModeEntrySegment;USHORT ProtectedModeEntryOffset;ULONG ProtectedModeCodeBaseAddress;ULONG OemDeviceId;USHORT RealModeDataBaseAddress;ULONG ProtectedModeDataBaseAddress;};
struct _CM_RESOURCE_LIST {ULONG Count;CM_FULL_RESOURCE_DESCRIPTOR List[1];};
struct _CM_ROM_BLOCK {ULONG Address;ULONG Size;};
struct _CM_SCSI_DEVICE_DATA {USHORT Version;USHORT Revision;UCHAR HostIdentifier;};
struct _CM_SERIAL_DEVICE_DATA {USHORT Version;USHORT Revision;ULONG BaudClock;};
enum _CM_SERVICE_LOAD_TYPE {BootLoad = 0x0,SystemLoad = 0x1,AutoLoad = 0x2,DemandLoad = 0x3,DisableLoad = 0x4,};
enum _CM_SERVICE_NODE_TYPE {DriverType = 0x1,FileSystemType = 0x2,Win32ServiceOwnProcess = 0x10,Win32ServiceShareProcess = 0x20,AdapterType = 0x4,RecognizerType = 0x8,};
enum _CM_SHARE_DISPOSITION {CmResourceShareUndetermined = 0x0,CmResourceShareDeviceExclusive = 0x1,CmResourceShareDriverExclusive = 0x2,CmResourceShareShared = 0x3,};
struct _CM_SONIC_DEVICE_DATA {USHORT Version;USHORT Revision;USHORT DataConfigurationRegister;UCHAR EthernetAddress[8];};
struct _CM_VIDEO_DEVICE_DATA {USHORT Version;USHORT Revision;ULONG VideoClock;};
struct _CONFIG_ROM {ULONG CR_Info;ULONG CR_Signiture;ULONG CR_BusInfoBlockCaps;ULONG CR_Node_UniqueID[2];ULONG CR_Root_Info;};
struct _CONTEXT;
enum _CREATE_FILE_TYPE {CreateFileTypeNone = 0x0,CreateFileTypeNamedPipe = 0x1,CreateFileTypeMailslot = 0x2,};
struct _CSTRING {USHORT Length;USHORT MaximumLength;const char *Buffer;};
struct _CYCLE_TIME {unsigned __int32 CL_CycleOffset : 12;unsigned __int32 CL_CycleCount : 13;unsigned __int32 CL_SecondCount : 7;};
struct _DBC_BAY_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bBayNumber;UCHAR bHubPortNumber;UCHAR bPHYPortNumber;UCHAR bFormFactor;};
struct _DBC_SUBSYSTEM_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;SUBSYTEM_ATTRIBUTES bmAttributes;UCHAR guid1394Link[8];ULONG v3_3ContinuousPower;ULONG v3_3PeakPower;ULONG v5_0ContinuousPower;ULONG v5_0PeakPower;ULONG v12_0ContinuousPower;ULONG v12_0PeakPower;ULONG AggregatePower;ULONG ThermalDissapation;USHORT bcdSpecificationRelease;};
struct _DDPIXELFORMAT {DWORD dwSize;DWORD dwFlags;DWORD dwFourCC;union {DWORD dwRGBBitCount;DWORD dwYUVBitCount;DWORD dwZBufferBitDepth;DWORD dwAlphaBitDepth;};union {DWORD dwRBitMask;DWORD dwYBitMask;};union {DWORD dwGBitMask;DWORD dwUBitMask;};union {DWORD dwBBitMask;DWORD dwVBitMask;};union {DWORD dwRGBAlphaBitMask;DWORD dwYUVAlphaBitMask;DWORD dwRGBZBitMask;DWORD dwYUVZBitMask;};};
union _DDPIXELFORMAT::$0E0BD8DB15B3F2A790C062F781315157 {DWORD dwRBitMask;DWORD dwYBitMask;};
union _DDPIXELFORMAT::$10AA641B3215541DB69A48A361AE0013 {DWORD dwRGBBitCount;DWORD dwYUVBitCount;DWORD dwZBufferBitDepth;DWORD dwAlphaBitDepth;};
union _DDPIXELFORMAT::$3ED4EC923A768B2489A9D1155BD11968 {DWORD dwRGBAlphaBitMask;DWORD dwYUVAlphaBitMask;DWORD dwRGBZBitMask;DWORD dwYUVZBitMask;};
union _DDPIXELFORMAT::$4C5EBD389D88C4C046794501FFF390F4 {DWORD dwBBitMask;DWORD dwVBitMask;};
union _DDPIXELFORMAT::$DB4BDA43012B420E1DC9AEEACAA267A5 {DWORD dwGBitMask;DWORD dwUBitMask;};
struct _DDVIDEOPORTCONNECT {DWORD dwSize;DWORD dwPortWidth;GUID guidTypeID;DWORD dwFlags;DWORD dwReserved1;};
struct _DEVICE_CAPABILITIES {USHORT Size;USHORT Version;unsigned __int32 DeviceD1 : 1;unsigned __int32 DeviceD2 : 1;unsigned __int32 LockSupported : 1;unsigned __int32 EjectSupported : 1;unsigned __int32 Removable : 1;unsigned __int32 DockDevice : 1;unsigned __int32 UniqueID : 1;unsigned __int32 SilentInstall : 1;unsigned __int32 RawDeviceOK : 1;unsigned __int32 SurpriseRemovalOK : 1;unsigned __int32 WakeFromD0 : 1;unsigned __int32 WakeFromD1 : 1;unsigned __int32 WakeFromD2 : 1;unsigned __int32 WakeFromD3 : 1;unsigned __int32 HardwareDisabled : 1;unsigned __int32 NonDynamic : 1;unsigned __int32 WarmEjectSupported : 1;unsigned __int32 NoDisplayInUI : 1;unsigned __int32 Reserved : 14;ULONG Address;ULONG UINumber;DEVICE_POWER_STATE DeviceState[7];SYSTEM_POWER_STATE SystemWake;DEVICE_POWER_STATE DeviceWake;ULONG D1Latency;ULONG D2Latency;ULONG D3Latency;};
struct _DEVICE_DESCRIPTION {ULONG Version;BOOLEAN Master;BOOLEAN ScatterGather;BOOLEAN DemandMode;BOOLEAN AutoInitialize;BOOLEAN Dma32BitAddresses;BOOLEAN IgnoreCount;BOOLEAN Reserved1;BOOLEAN Dma64BitAddresses;ULONG DoNotUse2;ULONG DmaChannel;INTERFACE_TYPE InterfaceType;DMA_WIDTH DmaWidth;DMA_SPEED DmaSpeed;ULONG MaximumLength;ULONG DmaPort;};
struct _DEVICE_FLAGS {unsigned __int32 Failed : 1;unsigned __int32 ReadOnly : 1;unsigned __int32 Removable : 1;unsigned __int32 ConsoleIn : 1;unsigned __int32 ConsoleOut : 1;unsigned __int32 Input : 1;unsigned __int32 Output : 1;};
enum _DEVICE_INSTALL_STATE {InstallStateInstalled = 0x0,InstallStateNeedsReinstall = 0x1,InstallStateFailedInstall = 0x2,InstallStateFinishInstall = 0x3,};
struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;GUID InterfaceClassGuid;PUNICODE_STRING SymbolicLinkName;};
struct __declspec(align(8)) _DEVICE_OBJECT {CSHORT Type;USHORT Size;LONG ReferenceCount;struct _DRIVER_OBJECT *DriverObject;struct _DEVICE_OBJECT *NextDevice;struct _DEVICE_OBJECT *AttachedDevice;struct _IRP *CurrentIrp;PIO_TIMER Timer;ULONG Flags;ULONG Characteristics;PVOID DoNotUse1;PVOID DeviceExtension;ULONG DeviceType;CCHAR StackSize;union _DEVICE_OBJECT::$3ABEFC84562B0417329DFE2AD83813CB Queue;ULONG AlignmentRequirement;KDEVICE_QUEUE DeviceQueue;KDPC Dpc;ULONG ActiveThreadCount;PSECURITY_DESCRIPTOR SecurityDescriptor;KEVENT DeviceLock;USHORT SectorSize;USHORT Spare1;struct _DEVOBJ_EXTENSION *DeviceObjectExtension;PVOID Reserved;};
union _DEVICE_OBJECT::$3ABEFC84562B0417329DFE2AD83813CB {LIST_ENTRY ListEntry;WAIT_CONTEXT_BLOCK Wcb;};
struct _DEVICE_OBJECT_POWER_EXTENSION;
enum _DEVICE_POWER_STATE {PowerDeviceUnspecified = 0x0,PowerDeviceD0 = 0x1,PowerDeviceD1 = 0x2,PowerDeviceD2 = 0x3,PowerDeviceD3 = 0x4,PowerDeviceMaximum = 0x5,};
struct _DEVICE_RELATIONS {ULONG Count;PDEVICE_OBJECT Objects[1];};
enum _DEVICE_RELATION_TYPE {BusRelations = 0x0,EjectionRelations = 0x1,PowerRelations = 0x2,RemovalRelations = 0x3,TargetDeviceRelation = 0x4,SingleBusRelations = 0x5,};
enum _DEVICE_REMOVAL_POLICY {RemovalPolicyExpectNoRemoval = 0x1,RemovalPolicyExpectOrderlyRemoval = 0x2,RemovalPolicyExpectSurpriseRemoval = 0x3,};
struct _DEVICE_UI_FIRMWARE_REVISION {CHAR VariableData[1];};
enum _DEVICE_USAGE_NOTIFICATION_TYPE {DeviceUsageTypeUndefined = 0x0,DeviceUsageTypePaging = 0x1,DeviceUsageTypeHibernation = 0x2,DeviceUsageTypeDumpFile = 0x3,};
struct _DEVOBJ_EXTENSION {CSHORT Type;USHORT Size;PDEVICE_OBJECT DeviceObject;};
struct _DISK_PARTITION;
struct _DISPATCHER_HEADER {union {struct {UCHAR Type;UCHAR Absolute;UCHAR Size;union {UCHAR Inserted;BOOLEAN DebugActive;};};volatile LONG Lock;};LONG SignalState;LIST_ENTRY WaitListHead;};
union _DISPATCHER_HEADER::$::$4FC8E3694DA5D66B7DD7733C42232B0C::$7D8003392045D3B1A5079D9763A312FD {UCHAR Inserted;BOOLEAN DebugActive;};
union _DISPATCHER_HEADER::$C3350567D48F492C7817B919E7F13F98 {struct {UCHAR Type;UCHAR Absolute;UCHAR Size;union {UCHAR Inserted;BOOLEAN DebugActive;};};volatile LONG Lock;};
struct _DISPATCHER_HEADER::$C3350567D48F492C7817B919E7F13F98::$4FC8E3694DA5D66B7DD7733C42232B0C {UCHAR Type;UCHAR Absolute;UCHAR Size;union {UCHAR Inserted;BOOLEAN DebugActive;};};
struct _DMA_ADAPTER {USHORT Version;USHORT Size;PDMA_OPERATIONS DmaOperations;};
struct _DMA_CONFIGURATION_BYTE0 {unsigned __int8 Channel : 3;unsigned __int8 Reserved : 3;unsigned __int8 Shared : 1;unsigned __int8 MoreEntries : 1;};
struct _DMA_CONFIGURATION_BYTE1 {unsigned __int8 Reserved0 : 2;unsigned __int8 TransferSize : 2;unsigned __int8 Timing : 2;unsigned __int8 Reserved1 : 2;};
struct _DMA_OPERATIONS {ULONG Size;PPUT_DMA_ADAPTER PutDmaAdapter;PALLOCATE_COMMON_BUFFER AllocateCommonBuffer;PFREE_COMMON_BUFFER FreeCommonBuffer;PALLOCATE_ADAPTER_CHANNEL AllocateAdapterChannel;PFLUSH_ADAPTER_BUFFERS FlushAdapterBuffers;PFREE_ADAPTER_CHANNEL FreeAdapterChannel;PFREE_MAP_REGISTERS FreeMapRegisters;PMAP_TRANSFER MapTransfer;PGET_DMA_ALIGNMENT GetDmaAlignment;PREAD_DMA_COUNTER ReadDmaCounter;PGET_SCATTER_GATHER_LIST GetScatterGatherList;PPUT_SCATTER_GATHER_LIST PutScatterGatherList;PCALCULATE_SCATTER_GATHER_LIST_SIZE CalculateScatterGatherList;PBUILD_SCATTER_GATHER_LIST BuildScatterGatherList;PBUILD_MDL_FROM_SCATTER_GATHER_LIST BuildMdlFromScatterGatherList;};
enum _DMA_SPEED {Compatible = 0x0,TypeA = 0x1,TypeB = 0x2,TypeC = 0x3,TypeF = 0x4,MaximumDmaSpeed = 0x5,};
enum _DMA_WIDTH {Width8Bits = 0x0,Width16Bits = 0x1,Width32Bits = 0x2,MaximumDmaWidth = 0x3,};
enum _DPFLTR_TYPE {DPFLTR_SYSTEM_ID = 0x0,DPFLTR_SMSS_ID = 0x1,DPFLTR_SETUP_ID = 0x2,DPFLTR_NTFS_ID = 0x3,DPFLTR_FSTUB_ID = 0x4,DPFLTR_CRASHDUMP_ID = 0x5,DPFLTR_CDAUDIO_ID = 0x6,DPFLTR_CDROM_ID = 0x7,DPFLTR_CLASSPNP_ID = 0x8,DPFLTR_DISK_ID = 0x9,DPFLTR_REDBOOK_ID = 0xA,DPFLTR_STORPROP_ID = 0xB,DPFLTR_SCSIPORT_ID = 0xC,DPFLTR_SCSIMINIPORT_ID = 0xD,DPFLTR_CONFIG_ID = 0xE,DPFLTR_I8042PRT_ID = 0xF,DPFLTR_SERMOUSE_ID = 0x10,DPFLTR_LSERMOUS_ID = 0x11,DPFLTR_KBDHID_ID = 0x12,DPFLTR_MOUHID_ID = 0x13,DPFLTR_KBDCLASS_ID = 0x14,DPFLTR_MOUCLASS_ID = 0x15,DPFLTR_TWOTRACK_ID = 0x16,DPFLTR_WMILIB_ID = 0x17,DPFLTR_ACPI_ID = 0x18,DPFLTR_AMLI_ID = 0x19,DPFLTR_HALIA64_ID = 0x1A,DPFLTR_VIDEO_ID = 0x1B,DPFLTR_SVCHOST_ID = 0x1C,DPFLTR_VIDEOPRT_ID = 0x1D,DPFLTR_TCPIP_ID = 0x1E,DPFLTR_DMSYNTH_ID = 0x1F,DPFLTR_NTOSPNP_ID = 0x20,DPFLTR_FASTFAT_ID = 0x21,DPFLTR_SAMSS_ID = 0x22,DPFLTR_PNPMGR_ID = 0x23,DPFLTR_NETAPI_ID = 0x24,DPFLTR_SCSERVER_ID = 0x25,DPFLTR_SCCLIENT_ID = 0x26,DPFLTR_SERIAL_ID = 0x27,DPFLTR_SERENUM_ID = 0x28,DPFLTR_UHCD_ID = 0x29,DPFLTR_RPCPROXY_ID = 0x2A,DPFLTR_AUTOCHK_ID = 0x2B,DPFLTR_DCOMSS_ID = 0x2C,DPFLTR_UNIMODEM_ID = 0x2D,DPFLTR_SIS_ID = 0x2E,DPFLTR_FLTMGR_ID = 0x2F,DPFLTR_WMICORE_ID = 0x30,DPFLTR_BURNENG_ID = 0x31,DPFLTR_IMAPI_ID = 0x32,DPFLTR_SXS_ID = 0x33,DPFLTR_FUSION_ID = 0x34,DPFLTR_IDLETASK_ID = 0x35,DPFLTR_SOFTPCI_ID = 0x36,DPFLTR_TAPE_ID = 0x37,DPFLTR_MCHGR_ID = 0x38,DPFLTR_IDEP_ID = 0x39,DPFLTR_PCIIDE_ID = 0x3A,DPFLTR_FLOPPY_ID = 0x3B,DPFLTR_FDC_ID = 0x3C,DPFLTR_TERMSRV_ID = 0x3D,DPFLTR_W32TIME_ID = 0x3E,DPFLTR_PREFETCHER_ID = 0x3F,DPFLTR_RSFILTER_ID = 0x40,DPFLTR_FCPORT_ID = 0x41,DPFLTR_PCI_ID = 0x42,DPFLTR_DMIO_ID = 0x43,DPFLTR_DMCONFIG_ID = 0x44,DPFLTR_DMADMIN_ID = 0x45,DPFLTR_WSOCKTRANSPORT_ID = 0x46,DPFLTR_VSS_ID = 0x47,DPFLTR_PNPMEM_ID = 0x48,DPFLTR_PROCESSOR_ID = 0x49,DPFLTR_DMSERVER_ID = 0x4A,DPFLTR_SR_ID = 0x4B,DPFLTR_INFINIBAND_ID = 0x4C,DPFLTR_IHVDRIVER_ID = 0x4D,DPFLTR_IHVVIDEO_ID = 0x4E,DPFLTR_IHVAUDIO_ID = 0x4F,DPFLTR_IHVNETWORK_ID = 0x50,DPFLTR_IHVSTREAMING_ID = 0x51,DPFLTR_IHVBUS_ID = 0x52,DPFLTR_HPS_ID = 0x53,DPFLTR_RTLTHREADPOOL_ID = 0x54,DPFLTR_LDR_ID = 0x55,DPFLTR_TCPIP6_ID = 0x56,DPFLTR_ISAPNP_ID = 0x57,DPFLTR_SHPC_ID = 0x58,DPFLTR_STORPORT_ID = 0x59,DPFLTR_STORMINIPORT_ID = 0x5A,DPFLTR_PRINTSPOOLER_ID = 0x5B,DPFLTR_VSSDYNDISK_ID = 0x5C,DPFLTR_VERIFIER_ID = 0x5D,DPFLTR_VDS_ID = 0x5E,DPFLTR_VDSBAS_ID = 0x5F,DPFLTR_VDSDYNDR_ID = 0x60,DPFLTR_VDSUTIL_ID = 0x61,DPFLTR_DFRGIFC_ID = 0x62,DPFLTR_ENDOFTABLE_ID = 0x63,};
struct _DRB {union {struct _DRB_HEADER DrbHeader;struct _DRB_CHANGE_REQUEST DrbChangeRequest;struct _DRB_GET_SUBSYSTEM_DESCRIPTOR DrbGetSubsystemDescriptor;struct _DRB_GET_BAY_DESCRIPTOR DrbGetBayDescriptor;struct _DRB_BAY_FEATURE_REQUEST DrbBayFeatureRequest;struct _DRB_GET_BAY_STATUS DrbGetBayStatus;struct _DRB_GET_CONTROLLER_STATUS DrbGetControllerStatus;struct _DRB_START_DEVICE_IN_BAY DrbStartDeviceInBay;struct _DRB_EJECT_DEVICE_IN_BAY DrbEjectDeviceInBay;struct _DRB_STOP_DEVICE_IN_BAY DrbStopDeviceInBay;};};
union _DRB::$D62B0294F39AA411B7C19ECFF4F80ACD {struct _DRB_HEADER DrbHeader;struct _DRB_CHANGE_REQUEST DrbChangeRequest;struct _DRB_GET_SUBSYSTEM_DESCRIPTOR DrbGetSubsystemDescriptor;struct _DRB_GET_BAY_DESCRIPTOR DrbGetBayDescriptor;struct _DRB_BAY_FEATURE_REQUEST DrbBayFeatureRequest;struct _DRB_GET_BAY_STATUS DrbGetBayStatus;struct _DRB_GET_CONTROLLER_STATUS DrbGetControllerStatus;struct _DRB_START_DEVICE_IN_BAY DrbStartDeviceInBay;struct _DRB_EJECT_DEVICE_IN_BAY DrbEjectDeviceInBay;struct _DRB_STOP_DEVICE_IN_BAY DrbStopDeviceInBay;};
struct _DRB_BAY_FEATURE_REQUEST {struct _DRB_HEADER Hdr;USHORT BayNumber;USHORT FeatureSelector;};
struct _DRB_CHANGE_REQUEST {struct _DRB_HEADER Hdr;ULONG BayChange;};
struct _DRB_EJECT_DEVICE_IN_BAY {struct _DRB_HEADER Hdr;USHORT BayNumber;USHORT ReservedMBZ;};
struct _DRB_GET_BAY_DESCRIPTOR {struct _DRB_HEADER Hdr;USHORT BayNumber;USHORT ReservedMBZ;DBC_BAY_DESCRIPTOR BayDescriptor;};
struct _DRB_GET_BAY_STATUS {struct _DRB_HEADER Hdr;USHORT BayNumber;USHORT Reserved;BAY_STATUS BayStatus;};
struct _DRB_GET_CONTROLLER_STATUS {struct _DRB_HEADER Hdr;};
struct _DRB_GET_SUBSYSTEM_DESCRIPTOR {struct _DRB_HEADER Hdr;DBC_SUBSYSTEM_DESCRIPTOR SubsystemDescriptor;};
struct _DRB_HEADER {USHORT Length;USHORT Function;ULONG Flags;};
struct _DRB_START_DEVICE_IN_BAY {struct _DRB_HEADER Hdr;USHORT BayNumber;USHORT ReservedMBZ;PDEVICE_OBJECT PdoDeviceObjectUsb;PDEVICE_OBJECT PdoDeviceObject1394;};
struct _DRB_STOP_DEVICE_IN_BAY {struct _DRB_HEADER Hdr;USHORT BayNumber;USHORT ReservedMBZ;};
struct _DRIVER_EXTENSION {struct _DRIVER_OBJECT *DriverObject;PDRIVER_ADD_DEVICE AddDevice;ULONG Count;UNICODE_STRING ServiceKeyName;};
struct _DRIVER_OBJECT {CSHORT Type;CSHORT Size;PDEVICE_OBJECT DeviceObject;ULONG Flags;PVOID DriverStart;ULONG DriverSize;PVOID DriverSection;PDRIVER_EXTENSION DriverExtension;UNICODE_STRING DriverName;PUNICODE_STRING HardwareDatabase;PFAST_IO_DISPATCH FastIoDispatch;PDRIVER_INITIALIZE DriverInit;PDRIVER_STARTIO DriverStartIo;PDRIVER_UNLOAD DriverUnload;PDRIVER_DISPATCH MajorFunction[28];};
struct _DRIVE_LAYOUT_INFORMATION;
struct _DS3DVECTOR {union {FLOAT x;FLOAT dvX;};union {FLOAT y;FLOAT dvY;};union {FLOAT z;FLOAT dvZ;};};
union _DS3DVECTOR::$1C324E33BC6F74D1A02BB1B088C4590A {FLOAT z;FLOAT dvZ;};
union _DS3DVECTOR::$4C8BE1C25D9187060DF6575EC0B5A14F {FLOAT y;FLOAT dvY;};
union _DS3DVECTOR::$C7D9B5A2358E86AF5EA4461ED5800501 {FLOAT x;FLOAT dvX;};
struct _DVINFO {DWORD dwDVAAuxSrc;DWORD dwDVAAuxCtl;DWORD dwDVAAuxSrc1;DWORD dwDVAAuxCtl1;DWORD dwDVVAuxSrc;DWORD dwDVVAuxCtl;DWORD dwDVReserved[2];};
struct _EISA_DMA_CONFIGURATION {DMA_CONFIGURATION_BYTE0 ConfigurationByte0;DMA_CONFIGURATION_BYTE1 ConfigurationByte1;};
struct _EISA_IRQ_CONFIGURATION {EISA_IRQ_DESCRIPTOR ConfigurationByte;UCHAR Reserved;};
struct _EISA_IRQ_DESCRIPTOR {unsigned __int8 Interrupt : 4;unsigned __int8 Reserved : 1;unsigned __int8 LevelTriggered : 1;unsigned __int8 Shared : 1;unsigned __int8 MoreEntries : 1;};
struct _EISA_MEMORY_CONFIGURATION {EISA_MEMORY_TYPE ConfigurationByte;UCHAR DataSize;USHORT AddressLowWord;UCHAR AddressHighByte;USHORT MemorySize;};
struct _EISA_MEMORY_TYPE {unsigned __int8 ReadWrite : 1;unsigned __int8 Cached : 1;unsigned __int8 Reserved0 : 1;unsigned __int8 Type : 2;unsigned __int8 Shared : 1;unsigned __int8 Reserved1 : 1;unsigned __int8 MoreEntries : 1;};
struct _EISA_PORT_CONFIGURATION {EISA_PORT_DESCRIPTOR Configuration;USHORT PortAddress;};
struct _EISA_PORT_DESCRIPTOR {unsigned __int8 NumberPorts : 5;unsigned __int8 Reserved : 1;unsigned __int8 Shared : 1;unsigned __int8 MoreEntries : 1;};
struct _EMULATOR_ACCESS_ENTRY {ULONG BasePort;ULONG NumConsecutivePorts;EMULATOR_PORT_ACCESS_TYPE AccessType;UCHAR AccessMode;UCHAR StringSupport;PVOID Routine;};
enum _EMULATOR_PORT_ACCESS_TYPE {Uchar = 0x0,Ushort = 0x1,Ulong = 0x2,};
struct _ENABLE_DISABLE_FP_IN {BOOLEAN Enable;};
struct _ENABLE_DISABLE_FP_POLLING_IN {ULONG Period;BOOLEAN Enable;};
struct _ENABLE_OFFLINE_DIAGS_OUT {BOOLEAN Success;};
struct _ERESOURCE {LIST_ENTRY SystemResourcesList;POWNER_ENTRY OwnerTable;SHORT ActiveCount;USHORT Flag;PKSEMAPHORE SharedWaiters;PKEVENT ExclusiveWaiters;OWNER_ENTRY OwnerThreads[2];ULONG ContentionCount;USHORT NumberOfSharedWaiters;USHORT NumberOfExclusiveWaiters;union {PVOID Address;ULONG_PTR CreatorBackTraceIndex;};KSPIN_LOCK SpinLock;};
union _ERESOURCE::$6485B31835FF66149107F3D6F17C6B98 {PVOID Address;ULONG_PTR CreatorBackTraceIndex;};
enum _EVENT_TYPE {NotificationEvent = 0x0,SynchronizationEvent = 0x1,};
enum _EXCEPTION_DISPOSITION {ExceptionContinueExecution = 0x0,ExceptionContinueSearch = 0x1,ExceptionNestedException = 0x2,ExceptionCollidedUnwind = 0x3,};
struct _EXCEPTION_POINTERS {PEXCEPTION_RECORD ExceptionRecord;PVOID ContextRecord;};
struct _EXCEPTION_RECORD {NTSTATUS ExceptionCode;ULONG ExceptionFlags;struct _EXCEPTION_RECORD *ExceptionRecord;PVOID ExceptionAddress;ULONG NumberParameters;ULONG_PTR ExceptionInformation[15];};
struct _EXCEPTION_RECORD32 {NTSTATUS ExceptionCode;ULONG ExceptionFlags;ULONG ExceptionRecord;ULONG ExceptionAddress;ULONG NumberParameters;ULONG ExceptionInformation[15];};
struct _EXCEPTION_RECORD64 {NTSTATUS ExceptionCode;ULONG ExceptionFlags;ULONG64 ExceptionRecord;ULONG64 ExceptionAddress;ULONG NumberParameters;ULONG __unusedAlignment;ULONG64 ExceptionInformation[15];};
struct _EXECUTE_SELF_TEST_IN {UCHAR Subcommand;};
struct _EXECUTE_SELF_TEST_OUT {ULONG ReturnCode;};
enum _EXTENDED_AGP_REGISTER {IsochStatus = 0x0,AgpControl = 0x1,ApertureSize = 0x2,AperturePageSize = 0x3,GartLow = 0x4,GartHigh = 0x5,IsochCommand = 0x6,};
enum _EX_POOL_PRIORITY {LowPoolPriority = 0x0,LowPoolPrioritySpecialPoolOverrun = 0x8,LowPoolPrioritySpecialPoolUnderrun = 0x9,NormalPoolPriority = 0x10,NormalPoolPrioritySpecialPoolOverrun = 0x18,NormalPoolPrioritySpecialPoolUnderrun = 0x19,HighPoolPriority = 0x20,HighPoolPrioritySpecialPoolOverrun = 0x28,HighPoolPrioritySpecialPoolUnderrun = 0x29,};
struct _FAST_IO_DISPATCH {ULONG SizeOfFastIoDispatch;PFAST_IO_CHECK_IF_POSSIBLE FastIoCheckIfPossible;PFAST_IO_READ FastIoRead;PFAST_IO_WRITE FastIoWrite;PFAST_IO_QUERY_BASIC_INFO FastIoQueryBasicInfo;PFAST_IO_QUERY_STANDARD_INFO FastIoQueryStandardInfo;PFAST_IO_LOCK FastIoLock;PFAST_IO_UNLOCK_SINGLE FastIoUnlockSingle;PFAST_IO_UNLOCK_ALL FastIoUnlockAll;PFAST_IO_UNLOCK_ALL_BY_KEY FastIoUnlockAllByKey;PFAST_IO_DEVICE_CONTROL FastIoDeviceControl;PFAST_IO_ACQUIRE_FILE AcquireFileForNtCreateSection;PFAST_IO_RELEASE_FILE ReleaseFileForNtCreateSection;PFAST_IO_DETACH_DEVICE FastIoDetachDevice;PFAST_IO_QUERY_NETWORK_OPEN_INFO FastIoQueryNetworkOpenInfo;PFAST_IO_ACQUIRE_FOR_MOD_WRITE AcquireForModWrite;PFAST_IO_MDL_READ MdlRead;PFAST_IO_MDL_READ_COMPLETE MdlReadComplete;PFAST_IO_PREPARE_MDL_WRITE PrepareMdlWrite;PFAST_IO_MDL_WRITE_COMPLETE MdlWriteComplete;PFAST_IO_READ_COMPRESSED FastIoReadCompressed;PFAST_IO_WRITE_COMPRESSED FastIoWriteCompressed;PFAST_IO_MDL_READ_COMPLETE_COMPRESSED MdlReadCompleteCompressed;PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED MdlWriteCompleteCompressed;PFAST_IO_QUERY_OPEN FastIoQueryOpen;PFAST_IO_RELEASE_FOR_MOD_WRITE ReleaseForModWrite;PFAST_IO_ACQUIRE_FOR_CCFLUSH AcquireForCcFlush;PFAST_IO_RELEASE_FOR_CCFLUSH ReleaseForCcFlush;};
struct _FAST_MUTEX {LONG Count;PKTHREAD Owner;ULONG Contention;KEVENT Event;ULONG OldIrql;};
struct _FCP_FRAME {unsigned __int8 ctype : 4;unsigned __int8 cts : 4;UCHAR payload[511];};
struct _FCP_GET_REQUEST {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _FCP_GET_RESPONSE {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _FCP_SEND_REQUEST {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _FCP_SEND_RESPONSE {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _FILETIME {DWORD dwLowDateTime;DWORD dwHighDateTime;};
struct _FILE_BASIC_INFORMATION {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;ULONG FileAttributes;};
struct _FILE_FS_DEVICE_INFORMATION {ULONG DeviceType;ULONG Characteristics;};
struct _FILE_FULL_EA_INFORMATION {ULONG NextEntryOffset;UCHAR Flags;UCHAR EaNameLength;USHORT EaValueLength;CHAR EaName[1];};
enum _FILE_INFORMATION_CLASS {FileBasicInformation = 0x4,FileStandardInformation = 0x5,FilePositionInformation = 0xE,FileEndOfFileInformation = 0x14,};
struct _FILE_NETWORK_OPEN_INFORMATION {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONG FileAttributes;};
struct _FILE_OBJECT {CSHORT Type;CSHORT Size;PDEVICE_OBJECT DeviceObject;PVOID DoNotUse1;PVOID FsContext;PVOID FsContext2;PSECTION_OBJECT_POINTERS SectionObjectPointer;PVOID PrivateCacheMap;NTSTATUS FinalStatus;struct _FILE_OBJECT *RelatedFileObject;BOOLEAN LockOperation;BOOLEAN DeletePending;BOOLEAN ReadAccess;BOOLEAN WriteAccess;BOOLEAN DeleteAccess;BOOLEAN SharedRead;BOOLEAN SharedWrite;BOOLEAN SharedDelete;ULONG Flags;UNICODE_STRING FileName;LARGE_INTEGER CurrentByteOffset;ULONG Waiters;ULONG Busy;PVOID LastLock;KEVENT Lock;KEVENT Event;PIO_COMPLETION_CONTEXT CompletionContext;};
struct _FILE_POSITION_INFORMATION {LARGE_INTEGER CurrentByteOffset;};
struct _FILE_STANDARD_INFORMATION {LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONG NumberOfLinks;BOOLEAN DeletePending;BOOLEAN Directory;};
struct _FLOAT128 {__int64 LowPart;__int64 HighPart;};
enum _FSINFOCLASS {FileFsVolumeInformation = 0x1,FileFsLabelInformation = 0x2,FileFsSizeInformation = 0x3,FileFsDeviceInformation = 0x4,FileFsAttributeInformation = 0x5,FileFsControlInformation = 0x6,FileFsFullSizeInformation = 0x7,FileFsObjectIdInformation = 0x8,FileFsDriverPathInformation = 0x9,FileFsMaximumInformation = 0xA,};
struct _GENERAL_LOOKASIDE {SLIST_HEADER ListHead;USHORT Depth;USHORT MaximumDepth;ULONG TotalAllocates;union {ULONG AllocateMisses;ULONG AllocateHits;};ULONG TotalFrees;union {ULONG FreeMisses;ULONG FreeHits;};POOL_TYPE Type;ULONG Tag;ULONG Size;PALLOCATE_FUNCTION Allocate;PFREE_FUNCTION Free;LIST_ENTRY ListEntry;ULONG LastTotalAllocates;union {ULONG LastAllocateMisses;ULONG LastAllocateHits;};ULONG Future[2];};
union _GENERAL_LOOKASIDE::$069B740C1857A11367A9BFE4C43AA2E8 {ULONG LastAllocateMisses;ULONG LastAllocateHits;};
union _GENERAL_LOOKASIDE::$12DFDCE967313C3B7DB84D914C6D2312 {ULONG AllocateMisses;ULONG AllocateHits;};
union _GENERAL_LOOKASIDE::$30CCD2649BDFA90F272B33B2D857C57A {ULONG FreeMisses;ULONG FreeHits;};
struct _GENERIC_MAPPING {ACCESS_MASK GenericRead;ACCESS_MASK GenericWrite;ACCESS_MASK GenericExecute;ACCESS_MASK GenericAll;};
struct _GET_FP_CAPABILITY_OUT {ULONG Capability;};
struct _GET_LOCAL_HOST_INFO1 {LARGE_INTEGER UniqueId;};
struct _GET_LOCAL_HOST_INFO2 {ULONG HostCapabilities;ULONG MaxAsyncReadRequest;ULONG MaxAsyncWriteRequest;};
struct _GET_LOCAL_HOST_INFO3 {ULONG deciWattsSupplied;ULONG Voltage;};
struct _GET_LOCAL_HOST_INFO4 {PPORT_PHYS_ADDR_ROUTINE PhysAddrMappingRoutine;PVOID Context;};
struct _GET_LOCAL_HOST_INFO5 {PVOID ConfigRom;ULONG ConfigRomLength;};
struct _GET_LOCAL_HOST_INFO6 {ADDRESS_OFFSET CsrBaseAddress;ULONG CsrDataLength;PVOID CsrDataBuffer;};
struct _GET_LOCAL_HOST_INFO7 {ULONG HostDmaCapabilities;ULARGE_INTEGER MaxDmaBufferSize;};
struct _GET_UNIT_CAPABILITIES {ULONG NumOutputPlugs;ULONG NumInputPlugs;ULONG MaxDataRate;ULONG CTSFlags;ULONG HardwareFlags;};
struct _GET_UNIT_IDS {LARGE_INTEGER UniqueID;ULONG VendorID;ULONG ModelID;ULONG ulVendorLength;PWSTR VendorText;ULONG ulModelLength;PWSTR ModelText;ULONG UnitModelID;ULONG ulUnitModelLength;PWSTR UnitModelText;};
struct _GET_UNIT_INFO {ULONG nLevel;PVOID Information;};
struct _GUID {unsigned int Data1;unsigned __int16 Data2;unsigned __int16 Data3;unsigned __int8 Data4[8];};
struct _HCD_ISO_STAT_COUNTERS {USHORT LateUrbs;USHORT DoubleBufferedPackets;USHORT TransfersCF_5ms;USHORT TransfersCF_2ms;USHORT TransfersCF_1ms;USHORT MaxInterruptLatency;USHORT BadStartFrame;USHORT StaleUrbs;USHORT IsoPacketNotAccesed;USHORT IsoPacketHWError;USHORT SmallestUrbPacketCount;USHORT LargestUrbPacketCount;USHORT IsoCRC_Error;USHORT IsoOVERRUN_Error;USHORT IsoINTERNAL_Error;USHORT IsoUNKNOWN_Error;ULONG IsoBytesTransferred;USHORT LateMissedCount;USHORT HWIsoMissedCount;ULONG Reserved7[8];};
struct _HCD_STAT_COUNTERS {ULONG BytesTransferred;USHORT IsoMissedCount;USHORT DataOverrunErrorCount;USHORT CrcErrorCount;USHORT ScheduleOverrunCount;USHORT TimeoutErrorCount;USHORT InternalHcErrorCount;USHORT BufferOverrunErrorCount;USHORT SWErrorCount;USHORT StallPidCount;USHORT PortDisableCount;};
struct _HCD_STAT_INFORMATION_1 {ULONG Reserved1;ULONG Reserved2;ULONG ResetCounters;LARGE_INTEGER TimeRead;HCD_STAT_COUNTERS Counters;};
struct _HCD_STAT_INFORMATION_2 {ULONG Reserved1;ULONG Reserved2;ULONG ResetCounters;LARGE_INTEGER TimeRead;LONG LockedMemoryUsed;HCD_STAT_COUNTERS Counters;HCD_ISO_STAT_COUNTERS IsoCounters;};
struct _HIDD_ATTRIBUTES {ULONG Size;USHORT VendorID;USHORT ProductID;USHORT VersionNumber;};
struct _HIDD_CONFIGURATION {PVOID cookie;ULONG size;ULONG RingBufferSize;};
struct _HIDP_BUTTON_CAPS {USAGE UsagePage;UCHAR ReportID;BOOLEAN IsAlias;USHORT BitField;USHORT LinkCollection;USAGE LinkUsage;USAGE LinkUsagePage;BOOLEAN IsRange;BOOLEAN IsStringRange;BOOLEAN IsDesignatorRange;BOOLEAN IsAbsolute;ULONG Reserved[10];union {struct _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893::$83D0A1D806B42BB3CFEB24AD25988CD4 Range;struct _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893::$9A2DEDAE27CA526CD6B2E1277E119468 NotRange;};};
union _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893 {struct _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893::$83D0A1D806B42BB3CFEB24AD25988CD4 Range;struct _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893::$9A2DEDAE27CA526CD6B2E1277E119468 NotRange;};
struct _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893::$83D0A1D806B42BB3CFEB24AD25988CD4 {USAGE UsageMin;USAGE UsageMax;USHORT StringMin;USHORT StringMax;USHORT DesignatorMin;USHORT DesignatorMax;USHORT DataIndexMin;USHORT DataIndexMax;};
struct _HIDP_BUTTON_CAPS::$EECF18E811B231775A73F932F7651893::$9A2DEDAE27CA526CD6B2E1277E119468 {USAGE Usage;USAGE Reserved1;USHORT StringIndex;USHORT Reserved2;USHORT DesignatorIndex;USHORT Reserved3;USHORT DataIndex;USHORT Reserved4;};
struct _HIDP_CAPS {USAGE Usage;USAGE UsagePage;USHORT InputReportByteLength;USHORT OutputReportByteLength;USHORT FeatureReportByteLength;USHORT Reserved[17];USHORT NumberLinkCollectionNodes;USHORT NumberInputButtonCaps;USHORT NumberInputValueCaps;USHORT NumberInputDataIndices;USHORT NumberOutputButtonCaps;USHORT NumberOutputValueCaps;USHORT NumberOutputDataIndices;USHORT NumberFeatureButtonCaps;USHORT NumberFeatureValueCaps;USHORT NumberFeatureDataIndices;};
struct _HIDP_COLLECTION_DESC {USAGE UsagePage;USAGE Usage;UCHAR CollectionNumber;UCHAR Reserved[15];USHORT InputLength;USHORT OutputLength;USHORT FeatureLength;USHORT PreparsedDataLength;PHIDP_PREPARSED_DATA PreparsedData;};
struct _HIDP_DATA {USHORT DataIndex;USHORT Reserved;union {ULONG RawValue;BOOLEAN On;};};
union _HIDP_DATA::$054E66EBAEB900A97FB470AAB272100E {ULONG RawValue;BOOLEAN On;};
struct _HIDP_DEVICE_DESC {PHIDP_COLLECTION_DESC CollectionDesc;ULONG CollectionDescLength;PHIDP_REPORT_IDS ReportIDs;ULONG ReportIDsLength;HIDP_GETCOLDESC_DBG Dbg;};
struct _HIDP_EXTENDED_ATTRIBUTES {UCHAR NumGlobalUnknowns;UCHAR Reserved[3];PHIDP_UNKNOWN_TOKEN GlobalUnknowns;ULONG Data[1];};
struct _HIDP_GETCOLDESC_DBG {ULONG BreakOffset;ULONG ErrorCode;ULONG Args[6];};
enum _HIDP_KEYBOARD_DIRECTION {HidP_Keyboard_Break = 0x0,HidP_Keyboard_Make = 0x1,};
struct _HIDP_KEYBOARD_MODIFIER_STATE {union {struct {unsigned __int32 LeftControl : 1;unsigned __int32 LeftShift : 1;unsigned __int32 LeftAlt : 1;unsigned __int32 LeftGUI : 1;unsigned __int32 RightControl : 1;unsigned __int32 RightShift : 1;unsigned __int32 RightAlt : 1;unsigned __int32 RigthGUI : 1;unsigned __int32 CapsLock : 1;unsigned __int32 ScollLock : 1;unsigned __int32 NumLock : 1;unsigned __int32 Reserved : 21;};ULONG ul;};};
union _HIDP_KEYBOARD_MODIFIER_STATE::$09F65E3D8EC31FFE3E62B668D67CDD30 {struct {unsigned __int32 LeftControl : 1;unsigned __int32 LeftShift : 1;unsigned __int32 LeftAlt : 1;unsigned __int32 LeftGUI : 1;unsigned __int32 RightControl : 1;unsigned __int32 RightShift : 1;unsigned __int32 RightAlt : 1;unsigned __int32 RigthGUI : 1;unsigned __int32 CapsLock : 1;unsigned __int32 ScollLock : 1;unsigned __int32 NumLock : 1;unsigned __int32 Reserved : 21;};ULONG ul;};
struct _HIDP_KEYBOARD_MODIFIER_STATE::$09F65E3D8EC31FFE3E62B668D67CDD30::$CCD288663407EB3BCE693252A6740B18 {unsigned __int32 LeftControl : 1;unsigned __int32 LeftShift : 1;unsigned __int32 LeftAlt : 1;unsigned __int32 LeftGUI : 1;unsigned __int32 RightControl : 1;unsigned __int32 RightShift : 1;unsigned __int32 RightAlt : 1;unsigned __int32 RigthGUI : 1;unsigned __int32 CapsLock : 1;unsigned __int32 ScollLock : 1;unsigned __int32 NumLock : 1;unsigned __int32 Reserved : 21;};
struct _HIDP_LINK_COLLECTION_NODE {USAGE LinkUsage;USAGE LinkUsagePage;USHORT Parent;USHORT NumberOfChildren;USHORT NextSibling;USHORT FirstChild;unsigned __int32 CollectionType : 8;unsigned __int32 IsAlias : 1;unsigned __int32 Reserved : 23;PVOID UserContext;};
struct _HIDP_REPORT_IDS {UCHAR ReportID;UCHAR CollectionNumber;USHORT InputLength;USHORT OutputLength;USHORT FeatureLength;};
enum _HIDP_REPORT_TYPE {HidP_Input = 0x0,HidP_Output = 0x1,HidP_Feature = 0x2,};
struct _HIDP_UNKNOWN_TOKEN {UCHAR Token;UCHAR Reserved[3];ULONG BitField;};
struct _HIDP_VALUE_CAPS {USAGE UsagePage;UCHAR ReportID;BOOLEAN IsAlias;USHORT BitField;USHORT LinkCollection;USAGE LinkUsage;USAGE LinkUsagePage;BOOLEAN IsRange;BOOLEAN IsStringRange;BOOLEAN IsDesignatorRange;BOOLEAN IsAbsolute;BOOLEAN HasNull;UCHAR Reserved;USHORT BitSize;USHORT ReportCount;USHORT Reserved2[5];ULONG UnitsExp;ULONG Units;LONG LogicalMin;LONG LogicalMax;LONG PhysicalMin;LONG PhysicalMax;union {struct _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41::$83D0A1D806B42BB3CFEB24AD25988CD4 Range;struct _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41::$9A2DEDAE27CA526CD6B2E1277E119468 NotRange;};};
union _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41 {struct _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41::$83D0A1D806B42BB3CFEB24AD25988CD4 Range;struct _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41::$9A2DEDAE27CA526CD6B2E1277E119468 NotRange;};
struct _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41::$83D0A1D806B42BB3CFEB24AD25988CD4 {USAGE UsageMin;USAGE UsageMax;USHORT StringMin;USHORT StringMax;USHORT DesignatorMin;USHORT DesignatorMax;USHORT DataIndexMin;USHORT DataIndexMax;};
struct _HIDP_VALUE_CAPS::$D10B5F657B465D66794202428CB38B41::$9A2DEDAE27CA526CD6B2E1277E119468 {USAGE Usage;USAGE Reserved1;USHORT StringIndex;USHORT Reserved2;USHORT DesignatorIndex;USHORT Reserved3;USHORT DataIndex;USHORT Reserved4;};
struct _HID_COLLECTION_INFORMATION {ULONG DescriptorSize;BOOLEAN Polled;UCHAR Reserved1[1];USHORT VendorID;USHORT ProductID;USHORT VersionNumber;};
struct _HID_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT bcdHID;UCHAR bCountry;UCHAR bNumDescriptors;struct _HID_DESCRIPTOR::_HID_DESCRIPTOR_DESC_LIST DescriptorList[1];};
struct _HID_DESCRIPTOR::_HID_DESCRIPTOR_DESC_LIST {UCHAR bReportType;USHORT wReportLength;};
struct _HID_DEVICE_ATTRIBUTES {ULONG Size;USHORT VendorID;USHORT ProductID;USHORT VersionNumber;USHORT Reserved[11];};
struct _HID_DEVICE_EXTENSION {PDEVICE_OBJECT PhysicalDeviceObject;PDEVICE_OBJECT NextDeviceObject;PVOID MiniDeviceExtension;};
struct _HID_DRIVER_CONFIG {ULONG Size;ULONG RingBufferSize;};
struct _HID_INTERFACE_NOTIFY_PNP {struct {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;};PHID_STATUS_CHANGE StatusChangeFn;PVOID CallbackContext;};
struct _HID_MINIDRIVER_REGISTRATION {ULONG Revision;PDRIVER_OBJECT DriverObject;PUNICODE_STRING RegistryPath;ULONG DeviceExtensionSize;BOOLEAN DevicesArePolled;UCHAR Reserved[3];};
struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO {HID_SEND_IDLE_CALLBACK IdleCallback;PVOID IdleContext;};
struct _HID_XFER_PACKET {PUCHAR reportBuffer;ULONG reportBufferLen;UCHAR reportId;};
struct _HWPROFILE_CHANGE_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;};
struct _HW_CLOCK_OBJECT {PHW_CLOCK_FUNCTION HwClockFunction;ULONG ClockSupportFlags;ULONG Reserved[2];};
struct _HW_EVENT_DESCRIPTOR {BOOLEAN Enable;PKSEVENT_ENTRY EventEntry;PKSEVENTDATA EventData;union {struct _HW_STREAM_OBJECT *StreamObject;struct _HW_DEVICE_EXTENSION *DeviceExtension;};ULONG EnableEventSetIndex;PVOID HwInstanceExtension;ULONG Reserved;};
union _HW_EVENT_DESCRIPTOR::$5566F62EE5BDFEA92488954C24E62452 {struct _HW_STREAM_OBJECT *StreamObject;struct _HW_DEVICE_EXTENSION *DeviceExtension;};
struct _HW_INITIALIZATION_DATA {union {ULONG HwInitializationDataSize;struct {USHORT SizeOfThisPacket;USHORT StreamClassVersion;};};PHW_INTERRUPT HwInterrupt;PHW_RECEIVE_DEVICE_SRB HwReceivePacket;PHW_CANCEL_SRB HwCancelPacket;PHW_REQUEST_TIMEOUT_HANDLER HwRequestTimeoutHandler;ULONG DeviceExtensionSize;ULONG PerRequestExtensionSize;ULONG PerStreamExtensionSize;ULONG FilterInstanceExtensionSize;BOOLEAN BusMasterDMA;BOOLEAN Dma24BitAddresses;ULONG BufferAlignment;BOOLEAN TurnOffSynchronization;ULONG DmaBufferSize;ULONG NumNameExtensions;PWCHAR *NameExtensionArray;};
union _HW_INITIALIZATION_DATA::$629464E23AC53C7DCCC75BF07BD6EA4B {ULONG HwInitializationDataSize;struct {USHORT SizeOfThisPacket;USHORT StreamClassVersion;};};
struct _HW_INITIALIZATION_DATA::$629464E23AC53C7DCCC75BF07BD6EA4B::$CDC7C98BFDDB2D5AE64DC8463D32D136 {USHORT SizeOfThisPacket;USHORT StreamClassVersion;};
struct _HW_STREAM_DESCRIPTOR {HW_STREAM_HEADER StreamHeader;HW_STREAM_INFORMATION StreamInfo;};
struct _HW_STREAM_HEADER {ULONG NumberOfStreams;ULONG SizeOfHwStreamInformation;ULONG NumDevPropArrayEntries;PKSPROPERTY_SET DevicePropertiesArray;ULONG NumDevEventArrayEntries;PKSEVENT_SET DeviceEventsArray;PKSTOPOLOGY Topology;PHW_EVENT_ROUTINE DeviceEventRoutine;LONG NumDevMethodArrayEntries;PKSMETHOD_SET DeviceMethodsArray;};
struct _HW_STREAM_INFORMATION {ULONG NumberOfPossibleInstances;KSPIN_DATAFLOW DataFlow;BOOLEAN DataAccessible;ULONG NumberOfFormatArrayEntries;PKSDATAFORMAT *StreamFormatsArray;PVOID ClassReserved[4];ULONG NumStreamPropArrayEntries;PKSPROPERTY_SET StreamPropertiesArray;ULONG NumStreamEventArrayEntries;PKSEVENT_SET StreamEventsArray;GUID *Category;GUID *Name;ULONG MediumsCount;const KSPIN_MEDIUM *Mediums;BOOLEAN BridgeStream;ULONG Reserved[2];};
struct _HW_STREAM_OBJECT {ULONG SizeOfThisPacket;ULONG StreamNumber;PVOID HwStreamExtension;PHW_RECEIVE_STREAM_DATA_SRB ReceiveDataPacket;PHW_RECEIVE_STREAM_CONTROL_SRB ReceiveControlPacket;HW_CLOCK_OBJECT HwClockObject;BOOLEAN Dma;BOOLEAN Pio;PVOID HwDeviceExtension;ULONG StreamHeaderMediaSpecific;ULONG StreamHeaderWorkspace;BOOLEAN Allocator;PHW_EVENT_ROUTINE HwEventRoutine;ULONG Reserved[2];};
struct _HW_STREAM_REQUEST_BLOCK {ULONG SizeOfThisPacket;SRB_COMMAND Command;NTSTATUS Status;PHW_STREAM_OBJECT StreamObject;PVOID HwDeviceExtension;PVOID SRBExtension;union _HW_STREAM_REQUEST_BLOCK::_CommandData CommandData;ULONG NumberOfBuffers;ULONG TimeoutCounter;ULONG TimeoutOriginal;struct _HW_STREAM_REQUEST_BLOCK *NextSRB;PIRP Irp;ULONG Flags;PVOID HwInstanceExtension;union {ULONG NumberOfBytesToTransfer;ULONG ActualBytesTransferred;};PKSSCATTER_GATHER ScatterGatherBuffer;ULONG NumberOfPhysicalPages;ULONG NumberOfScatterGatherElements;ULONG Reserved[1];};
union _HW_STREAM_REQUEST_BLOCK::$9AC406258F9759C0176992CA6A9257C0 {ULONG NumberOfBytesToTransfer;ULONG ActualBytesTransferred;};
union _HW_STREAM_REQUEST_BLOCK::_CommandData {PKSSTREAM_HEADER DataBufferArray;PHW_STREAM_DESCRIPTOR StreamBuffer;KSSTATE StreamState;PSTREAM_TIME_REFERENCE TimeReference;PSTREAM_PROPERTY_DESCRIPTOR PropertyInfo;PKSDATAFORMAT OpenFormat;struct _PORT_CONFIGURATION_INFORMATION *ConfigInfo;HANDLE MasterClockHandle;DEVICE_POWER_STATE DeviceState;PSTREAM_DATA_INTERSECT_INFO IntersectInfo;PVOID MethodInfo;LONG FilterTypeIndex;};
struct _HW_TIME_CONTEXT {struct _HW_DEVICE_EXTENSION *HwDeviceExtension;struct _HW_STREAM_OBJECT *HwStreamObject;TIME_FUNCTION Function;ULONGLONG Time;ULONGLONG SystemTime;};
struct _IEEE1394_SCATTER_GATHER_HEADER {USHORT HeaderLength;USHORT DataLength;UCHAR HeaderData;};
struct _INITIAL_PRIVILEGE_SET {ULONG PrivilegeCount;ULONG Control;LUID_AND_ATTRIBUTES Privilege[3];};
struct _INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;};
enum _INTERFACE_TYPE {InterfaceTypeUndefined = 0xFFFFFFFF,Internal = 0x0,Isa = 0x1,Eisa = 0x2,MicroChannel = 0x3,TurboChannel = 0x4,PCIBus = 0x5,VMEBus = 0x6,NuBus = 0x7,PCMCIABus = 0x8,CBus = 0x9,MPIBus = 0xA,MPSABus = 0xB,ProcessorInternal = 0xC,InternalPowerBus = 0xD,PNPISABus = 0xE,PNPBus = 0xF,MaximumInterfaceType = 0x10,};
struct _IO_ADDRESS {NODE_ADDRESS IA_Destination_ID;ADDRESS_OFFSET IA_Destination_Offset;};
enum _IO_ALLOCATION_ACTION {KeepObject = 0x1,DeallocateObject = 0x2,DeallocateObjectKeepRegisters = 0x3,};
struct _IO_COMPLETION_CONTEXT {PVOID Port;PVOID Key;};
enum _IO_COMPLETION_ROUTINE_RESULT {ContinueCompletion = 0x0,StopCompletion = 0xC0000016,};
struct _IO_CSQ {ULONG Type;PIO_CSQ_INSERT_IRP CsqInsertIrp;PIO_CSQ_REMOVE_IRP CsqRemoveIrp;PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp;PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock;PIO_CSQ_RELEASE_LOCK CsqReleaseLock;PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp;PVOID ReservePointer;};
struct _IO_CSQ_IRP_CONTEXT {ULONG Type;PIRP Irp;PIO_CSQ Csq;};
struct _IO_ERROR_LOG_MESSAGE {USHORT Type;USHORT Size;USHORT DriverNameLength;LARGE_INTEGER TimeStamp;ULONG DriverNameOffset;IO_ERROR_LOG_PACKET EntryData;};
struct _IO_ERROR_LOG_PACKET {UCHAR MajorFunctionCode;UCHAR RetryCount;USHORT DumpDataSize;USHORT NumberOfStrings;USHORT StringOffset;USHORT EventCategory;NTSTATUS ErrorCode;ULONG UniqueErrorValue;NTSTATUS FinalStatus;ULONG SequenceNumber;ULONG IoControlCode;LARGE_INTEGER DeviceOffset;ULONG DumpData[1];};
enum _IO_NOTIFICATION_EVENT_CATEGORY {EventCategoryReserved = 0x0,EventCategoryHardwareProfileChange = 0x1,EventCategoryDeviceInterfaceChange = 0x2,EventCategoryTargetDeviceChange = 0x3,};
enum _IO_PAGING_PRIORITY {IoPagingPriorityInvalid = 0x0,IoPagingPriorityNormal = 0x1,IoPagingPriorityHigh = 0x2,IoPagingPriorityReserved1 = 0x3,IoPagingPriorityReserved2 = 0x4,};
struct _IO_REMOVE_LOCK {IO_REMOVE_LOCK_COMMON_BLOCK Common;};
struct _IO_REMOVE_LOCK_COMMON_BLOCK {BOOLEAN Removed;BOOLEAN Reserved[3];LONG IoCount;KEVENT RemoveEvent;};
struct _IO_REMOVE_LOCK_DBG_BLOCK {LONG Signature;ULONG HighWatermark;LONGLONG MaxLockedTicks;LONG AllocateTag;LIST_ENTRY LockList;KSPIN_LOCK Spin;LONG LowMemoryCount;ULONG Reserved1[4];PVOID Reserved2;PIO_REMOVE_LOCK_TRACKING_BLOCK Blocks;};
struct _IO_RESOURCE_DESCRIPTOR {UCHAR Option;UCHAR Type;UCHAR ShareDisposition;UCHAR Spare1;USHORT Flags;USHORT Spare2;union _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F u;};
union _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F {struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$6F2DCCC140478981F4C84F12EF58F0E8 Port;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$6F2DCCC140478981F4C84F12EF58F0E8 Memory;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$E426392FD8B562CCCB238153B7F5CB1B Interrupt;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$17B187B8C3CC0C2C04D148A62457C1B5 Dma;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$6F2DCCC140478981F4C84F12EF58F0E8 Generic;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$CFEA0CDFCF8B31E537C8D44F49AF209A BusNumber;struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$F28011FF41998B198A306197E74BFABD ConfigData;};
struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$17B187B8C3CC0C2C04D148A62457C1B5 {ULONG MinimumChannel;ULONG MaximumChannel;};
struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$6F2DCCC140478981F4C84F12EF58F0E8 {ULONG Length;ULONG Alignment;PHYSICAL_ADDRESS MinimumAddress;PHYSICAL_ADDRESS MaximumAddress;};
struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$812F79A5FC2BE6FE62CE9F41854F4845 {ULONG Data[3];};
struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$CFEA0CDFCF8B31E537C8D44F49AF209A {ULONG Length;ULONG MinBusNumber;ULONG MaxBusNumber;ULONG Reserved;};
struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$E426392FD8B562CCCB238153B7F5CB1B {ULONG MinimumVector;ULONG MaximumVector;};
struct _IO_RESOURCE_DESCRIPTOR::$19EB0A7CA5A9FC7CC61753E70B42602F::$F28011FF41998B198A306197E74BFABD {ULONG Priority;ULONG Reserved1;ULONG Reserved2;};
struct _IO_RESOURCE_DESCRIPTOR::$::$17B187B8C3CC0C2C04D148A62457C1B5 {ULONG MinimumChannel;ULONG MaximumChannel;};
struct _IO_RESOURCE_DESCRIPTOR::$::$6F2DCCC140478981F4C84F12EF58F0E8 {ULONG Length;ULONG Alignment;PHYSICAL_ADDRESS MinimumAddress;PHYSICAL_ADDRESS MaximumAddress;};
struct _IO_RESOURCE_DESCRIPTOR::$::$812F79A5FC2BE6FE62CE9F41854F4845 {ULONG Data[3];};
struct _IO_RESOURCE_DESCRIPTOR::$::$CFEA0CDFCF8B31E537C8D44F49AF209A {ULONG Length;ULONG MinBusNumber;ULONG MaxBusNumber;ULONG Reserved;};
struct _IO_RESOURCE_DESCRIPTOR::$::$E426392FD8B562CCCB238153B7F5CB1B {ULONG MinimumVector;ULONG MaximumVector;};
struct _IO_RESOURCE_DESCRIPTOR::$::$F28011FF41998B198A306197E74BFABD {ULONG Priority;ULONG Reserved1;ULONG Reserved2;};
struct _IO_RESOURCE_LIST {USHORT Version;USHORT Revision;ULONG Count;IO_RESOURCE_DESCRIPTOR Descriptors[1];};
struct _IO_RESOURCE_REQUIREMENTS_LIST {ULONG ListSize;INTERFACE_TYPE DoNotUse1;ULONG DoNotUse2;ULONG DoNotUse3;ULONG Reserved[3];ULONG AlternativeLists;IO_RESOURCE_LIST List[1];};
struct _IO_SECURITY_CONTEXT {PSECURITY_QUALITY_OF_SERVICE SecurityQos;PACCESS_STATE AccessState;ACCESS_MASK DesiredAccess;ULONG FullCreateOptions;};
struct _IO_STACK_LOCATION {UCHAR MajorFunction;UCHAR MinorFunction;UCHAR Flags;UCHAR Control;union _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6 Parameters;PDEVICE_OBJECT DeviceObject;PFILE_OBJECT FileObject;PIO_COMPLETION_ROUTINE CompletionRoutine;PVOID Context;};
union _IO_STACK_LOCATION::$::$01D776BE44431130AB476CFB6102BAD9::$A1B04431FB6E59C2D561338119C8AE61 {struct {BOOLEAN ReplaceIfExists;BOOLEAN AdvanceOnly;};ULONG ClusterCount;HANDLE DeleteHandle;};
struct _IO_STACK_LOCATION::$::$::$A1B04431FB6E59C2D561338119C8AE61::$5395532E35CA13A919E63C6E41FE24BB {BOOLEAN ReplaceIfExists;BOOLEAN AdvanceOnly;};
union _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6 {struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$68F4161CE02EA63EA7D518C4FD2536A7 Create;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$D177823888D2499403AB088A16B8A5D6 Read;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$D177823888D2499403AB088A16B8A5D6 Write;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$0B4B6594CAB5E465787267831231A11E QueryFile;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$01D776BE44431130AB476CFB6102BAD9 SetFile;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$A0C1706FD51296A5870D577CA7F99003 QueryVolume;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$3EEFC530056981631A2136A7505B6E7C DeviceIoControl;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$87783F014E4F04B8D50290341FC531DC MountVolume;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$87783F014E4F04B8D50290341FC531DC VerifyVolume;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$B2B4984C7002DD41520623255E2F9497 Scsi;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$670710264263D47AAED285B3D8DDF250 QueryDeviceRelations;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$7995DA36ED0214F9D006DCD5B47162D4 QueryInterface;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$6B11BC409C8BDB4C1D2CF8E6F83B383D DeviceCapabilities;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$E3C1BD80419791D70DF0170630DDCD15 FilterResourceRequirements;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$5886429FC15D5D9FBCD15B5B7E423A41 ReadWriteConfig;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$CAFA629F92AFE900ACAC7E5B47418F4C SetLock;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$03E399533941020534C84F7B69BA6C0D QueryId;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$7336F5CE809A28AD3CEF03AEB402B448 QueryDeviceText;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$41591AB00568573FD23A44C44B36D401 UsageNotification;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$B225BF4DA8BD0649341E73B822EE9BDC WaitWake;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$A3F11F7237E1D19F6A2E9E54FFFFB312 PowerSequence;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$43981C4C4313815F05EE3956B46AFA17 Power;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$69C11E4E3904219D9A8207E8DBA8FECD StartDevice;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$D24474CE3B68EBF89E5A61C71CBC75EE WMI;struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$15881024B0F660B7398AF4B4249A3A24 Others;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$01D776BE44431130AB476CFB6102BAD9 {ULONG Length;FILE_INFORMATION_CLASS FileInformationClass;PFILE_OBJECT FileObject;union {struct {BOOLEAN ReplaceIfExists;BOOLEAN AdvanceOnly;};ULONG ClusterCount;HANDLE DeleteHandle;};};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$03E399533941020534C84F7B69BA6C0D {BUS_QUERY_ID_TYPE IdType;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$0B4B6594CAB5E465787267831231A11E {ULONG Length;FILE_INFORMATION_CLASS FileInformationClass;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$15881024B0F660B7398AF4B4249A3A24 {PVOID Argument1;PVOID Argument2;PVOID Argument3;PVOID Argument4;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$3EEFC530056981631A2136A7505B6E7C {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;PVOID Type3InputBuffer;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$41591AB00568573FD23A44C44B36D401 {BOOLEAN InPath;BOOLEAN Reserved[3];DEVICE_USAGE_NOTIFICATION_TYPE Type;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$43981C4C4313815F05EE3956B46AFA17 {ULONG SystemContext;POWER_STATE_TYPE Type;POWER_STATE State;POWER_ACTION ShutdownType;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$5886429FC15D5D9FBCD15B5B7E423A41 {ULONG WhichSpace;PVOID Buffer;ULONG Offset;ULONG Length;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$670710264263D47AAED285B3D8DDF250 {DEVICE_RELATION_TYPE Type;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$68F4161CE02EA63EA7D518C4FD2536A7 {PIO_SECURITY_CONTEXT SecurityContext;ULONG Options;USHORT FileAttributes;USHORT ShareAccess;ULONG EaLength;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$69C11E4E3904219D9A8207E8DBA8FECD {PCM_RESOURCE_LIST AllocatedResources;PCM_RESOURCE_LIST AllocatedResourcesTranslated;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$6B11BC409C8BDB4C1D2CF8E6F83B383D {PDEVICE_CAPABILITIES Capabilities;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$7336F5CE809A28AD3CEF03AEB402B448 {DEVICE_TEXT_TYPE DeviceTextType;LCID LocaleId;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$7995DA36ED0214F9D006DCD5B47162D4 {const GUID *InterfaceType;USHORT Size;USHORT Version;PINTERFACE Interface;PVOID InterfaceSpecificData;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$87783F014E4F04B8D50290341FC531DC {PVOID DoNotUse1;PDEVICE_OBJECT DeviceObject;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$A0C1706FD51296A5870D577CA7F99003 {ULONG Length;FS_INFORMATION_CLASS FsInformationClass;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$A3F11F7237E1D19F6A2E9E54FFFFB312 {PPOWER_SEQUENCE PowerSequence;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$B225BF4DA8BD0649341E73B822EE9BDC {SYSTEM_POWER_STATE PowerState;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$B2B4984C7002DD41520623255E2F9497 {struct _SCSI_REQUEST_BLOCK *Srb;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$CAFA629F92AFE900ACAC7E5B47418F4C {BOOLEAN Lock;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$D177823888D2499403AB088A16B8A5D6 {ULONG Length;ULONG Key;LARGE_INTEGER ByteOffset;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$D24474CE3B68EBF89E5A61C71CBC75EE {ULONG_PTR ProviderId;PVOID DataPath;ULONG BufferSize;PVOID Buffer;};
struct _IO_STACK_LOCATION::$F62DA081B85FBDE1243CDE7F90C66EE6::$E3C1BD80419791D70DF0170630DDCD15 {PIO_RESOURCE_REQUIREMENTS_LIST IoResourceRequirementList;};
struct _IO_STATUS_BLOCK {union {NTSTATUS Status;PVOID Pointer;};ULONG_PTR Information;};
union _IO_STATUS_BLOCK::$77CEE0AF02806C16F943E6B3BF8ECA77 {NTSTATUS Status;PVOID Pointer;};
struct _IPCR {unsigned __int32 Reserved0 : 16;unsigned __int32 Channel : 6;unsigned __int32 Reserved1 : 2;unsigned __int32 PPCCounter : 6;unsigned __int32 BCCCounter : 1;unsigned __int32 OnLine : 1;};
struct _IRB {ULONG FunctionNumber;ULONG Flags;ULONG_PTR BusReserved[8];ULONG_PTR PortReserved[8];union _IRB::$C43CD371F98202BC5345CD1D25102977 u;};
union _IRB::$C43CD371F98202BC5345CD1D25102977 {struct _IRB::$C43CD371F98202BC5345CD1D25102977::$A653E6D7F576950BBC0E22BD37908D6E AsyncRead;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$8DB1C6EA8954EF4A6E7B65249EFF0CAA AsyncWrite;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$374614C96B9B9AB1C9381961745036DE AsyncLock;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$9C6A76CF103F177BAD003EFB50DB192A IsochAllocateBandwidth;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$40BECF06CA5752C42150F940166EFB49 IsochAllocateChannel;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$A0A51A754C18E1961396418108AFF737 IsochAllocateResources;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$BD9F34CFB20DBD490D96593C3D16B1D1 IsochAttachBuffers;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$BD9F34CFB20DBD490D96593C3D16B1D1 IsochDetachBuffers;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$E7AD8EBAE96CA3C35F657992CB1E66F5 IsochFreeBandwidth;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$0DE7F83DF42C02908AF2DF4F86550E2C IsochFreeChannel;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$3B921EC61E4980EF99D2DFC33AB84E69 IsochFreeResources;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$59E9053D14191E1B615262BD3D2AE457 IsochListen;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$70E1BC476872F483865FFAF07E56A546 IsochQueryCurrentCycleTime;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$01BDBD429B8C0DD257FCF18BABE0CCB7 IsochQueryResources;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$4F022CE3EA4F36DFAB183A9831612D8A IsochSetChannelBandwidth;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$F229F9FF6234D7E976DAE8A9B55FC6C6 IsochStop;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$59E9053D14191E1B615262BD3D2AE457 IsochTalk;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$864B42D4E2ACD4517CF225AA2DF24A42 IsochModifyStreamProperties;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$30E9AC1B3BDD22F62F8F5273F2D8EDA5 AllocateAddressRange;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$A3E383DBB25F925F390EAD79F1B5C4E8 FreeAddressRange;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$C37C4995068D9E55582E0602A1D1624A GetLocalHostInformation;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$2D2DF44D295EC42644D062C74B5CAA27 Get1394AddressFromDeviceObject;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$63B8CBCBBFE46CCDA85FC49538275DDC Control;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$EA1BB6A7C969746FACCE63670DE44F25 GetMaxSpeedBetweenDevices;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$55E0CA3AD4B4B8D53E3C765BD10D674F SetDeviceXmitProperties;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$C37C4995068D9E55582E0602A1D1624A SetLocalHostProperties;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$219DA241D93CF62D9B9604270AF73786 GetConfigurationInformation;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$D603794C96816A9E860A75571B258EDC BusReset;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$EF5A024EBB42BFC49A309B1B28E775A9 GetGenerationCount;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$6D66BCD1D47130D70616FC220FC5E2C7 SendPhyConfigurationPacket;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$03D8048E736B90FF167B50E9E8C38941 GetSpeedTopologyMaps;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$2343477B8241248C71439816DD5C9CB5 BusResetNotification;struct _IRB::$C43CD371F98202BC5345CD1D25102977::$9C6D36E2B3EAAC836134F242613D5770 AsyncStream;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$01BDBD429B8C0DD257FCF18BABE0CCB7 {ULONG fulSpeed;ULONG BytesPerFrameAvailable;LARGE_INTEGER ChannelsAvailable;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$03D8048E736B90FF167B50E9E8C38941 {PSPEED_MAP SpeedMap;PTOPOLOGY_MAP TopologyMap;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$0DE7F83DF42C02908AF2DF4F86550E2C {ULONG nChannel;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$219DA241D93CF62D9B9604270AF73786 {PCONFIG_ROM ConfigRom;ULONG UnitDirectoryBufferSize;PVOID UnitDirectory;IO_ADDRESS UnitDirectoryLocation;ULONG UnitDependentDirectoryBufferSize;PVOID UnitDependentDirectory;IO_ADDRESS UnitDependentDirectoryLocation;ULONG VendorLeafBufferSize;PTEXTUAL_LEAF VendorLeaf;ULONG ModelLeafBufferSize;PTEXTUAL_LEAF ModelLeaf;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$2343477B8241248C71439816DD5C9CB5 {ULONG fulFlags;PBUS_BUS_RESET_NOTIFICATION ResetRoutine;PVOID ResetContext;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$2D2DF44D295EC42644D062C74B5CAA27 {ULONG fulFlags;NODE_ADDRESS NodeAddress;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$30E9AC1B3BDD22F62F8F5273F2D8EDA5 {PMDL Mdl;ULONG fulFlags;ULONG nLength;ULONG MaxSegmentSize;ULONG fulAccessType;ULONG fulNotificationOptions;PVOID Callback;PVOID Context;ADDRESS_OFFSET Required1394Offset;PSLIST_HEADER FifoSListHead;PKSPIN_LOCK FifoSpinLock;ULONG AddressesReturned;PADDRESS_RANGE p1394AddressRange;HANDLE hAddressRange;PVOID DeviceExtension;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$374614C96B9B9AB1C9381961745036DE {IO_ADDRESS DestinationAddress;ULONG nNumberOfArgBytes;ULONG nNumberOfDataBytes;ULONG fulTransactionType;ULONG fulFlags;ULONG Arguments[2];ULONG DataValues[2];PVOID pBuffer;ULONG ulGeneration;UCHAR chPriority;UCHAR nSpeed;UCHAR tCode;UCHAR Reserved;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$3B921EC61E4980EF99D2DFC33AB84E69 {HANDLE hResource;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$40BECF06CA5752C42150F940166EFB49 {ULONG nRequestedChannel;ULONG Channel;LARGE_INTEGER ChannelsAvailable;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$4F022CE3EA4F36DFAB183A9831612D8A {HANDLE hBandwidth;ULONG nMaxBytesPerFrame;ULONG nBandwidthUnitsRequired;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$55E0CA3AD4B4B8D53E3C765BD10D674F {ULONG fulSpeed;ULONG fulPriority;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$59E9053D14191E1B615262BD3D2AE457 {HANDLE hResource;ULONG fulFlags;CYCLE_TIME StartTime;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$63B8CBCBBFE46CCDA85FC49538275DDC {ULONG ulIoControlCode;PMDL pInBuffer;ULONG ulInBufferLength;PMDL pOutBuffer;ULONG ulOutBufferLength;ULONG BytesReturned;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$6D66BCD1D47130D70616FC220FC5E2C7 {PHY_CONFIGURATION_PACKET PhyConfigurationPacket;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$70E1BC476872F483865FFAF07E56A546 {CYCLE_TIME CycleTime;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$864B42D4E2ACD4517CF225AA2DF24A42 {HANDLE hResource;ULARGE_INTEGER ChannelMask;ULONG fulSpeed;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$8DB1C6EA8954EF4A6E7B65249EFF0CAA {IO_ADDRESS DestinationAddress;ULONG nNumberOfBytesToWrite;ULONG nBlockSize;ULONG fulFlags;PMDL Mdl;ULONG ulGeneration;UCHAR chPriority;UCHAR nSpeed;UCHAR tCode;UCHAR Reserved;ULONG ElapsedTime;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$9C6A76CF103F177BAD003EFB50DB192A {ULONG nMaxBytesPerFrameRequested;ULONG fulSpeed;HANDLE hBandwidth;ULONG BytesPerFrameAvailable;ULONG SpeedSelected;ULONG nBandwidthUnitsRequired;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$9C6D36E2B3EAAC836134F242613D5770 {ULONG nNumberOfBytesToStream;ULONG fulFlags;PMDL Mdl;ULONG ulTag;ULONG nChannel;ULONG ulSynch;ULONG Reserved;UCHAR nSpeed;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$A0A51A754C18E1961396418108AFF737 {ULONG fulSpeed;ULONG fulFlags;ULONG nChannel;ULONG nMaxBytesPerFrame;ULONG nNumberOfBuffers;ULONG nMaxBufferSize;ULONG nQuadletsToStrip;HANDLE hResource;ULARGE_INTEGER ChannelMask;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$A3E383DBB25F925F390EAD79F1B5C4E8 {ULONG nAddressesToFree;PADDRESS_RANGE p1394AddressRange;PHANDLE pAddressRange;PVOID DeviceExtension;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$A653E6D7F576950BBC0E22BD37908D6E {IO_ADDRESS DestinationAddress;ULONG nNumberOfBytesToRead;ULONG nBlockSize;ULONG fulFlags;PMDL Mdl;ULONG ulGeneration;UCHAR chPriority;UCHAR nSpeed;UCHAR tCode;UCHAR Reserved;ULONG ElapsedTime;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$BD9F34CFB20DBD490D96593C3D16B1D1 {HANDLE hResource;ULONG nNumberOfDescriptors;PISOCH_DESCRIPTOR pIsochDescriptor;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$C37C4995068D9E55582E0602A1D1624A {ULONG nLevel;PVOID Information;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$D603794C96816A9E860A75571B258EDC {ULONG fulFlags;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$E7AD8EBAE96CA3C35F657992CB1E66F5 {HANDLE hBandwidth;ULONG nMaxBytesPerFrameRequested;ULONG fulSpeed;ULONG BytesPerFrameAvailable;ULONG SpeedSelected;ULONG nBandwidthUnitsRequired;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$EA1BB6A7C969746FACCE63670DE44F25 {ULONG fulFlags;ULONG ulNumberOfDestinations;PDEVICE_OBJECT hDestinationDeviceObjects[64];ULONG fulSpeed;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$EF5A024EBB42BFC49A309B1B28E775A9 {ULONG GenerationCount;};
struct _IRB::$C43CD371F98202BC5345CD1D25102977::$F229F9FF6234D7E976DAE8A9B55FC6C6 {HANDLE hResource;ULONG fulFlags;};
struct __declspec(align(8)) _IRP {CSHORT Type;USHORT Size;PMDL MdlAddress;ULONG Flags;union _IRP::$CBBBB9F4F0755A16DC8A369061485BEC AssociatedIrp;LIST_ENTRY ThreadListEntry;IO_STATUS_BLOCK IoStatus;KPROCESSOR_MODE RequestorMode;BOOLEAN PendingReturned;CHAR StackCount;CHAR CurrentLocation;BOOLEAN Cancel;KIRQL CancelIrql;CCHAR ApcEnvironment;UCHAR AllocationFlags;PIO_STATUS_BLOCK UserIosb;PKEVENT UserEvent;union _IRP::$587A9B960BE92E4E8E029EB753BAD923 Overlay;PDRIVER_CANCEL CancelRoutine;PVOID UserBuffer;union _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6 Tail;};
union _IRP::$587A9B960BE92E4E8E029EB753BAD923 {struct _IRP::$587A9B960BE92E4E8E029EB753BAD923::$15DEB8494280A91F57C8F397618367A3 AsynchronousParameters;LARGE_INTEGER AllocationSize;};
struct _IRP::$587A9B960BE92E4E8E029EB753BAD923::$15DEB8494280A91F57C8F397618367A3 {PIO_APC_ROUTINE UserApcRoutine;PVOID UserApcContext;};
union _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6 {struct _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6::$2AD798E65616C4F7304824DBFA27E419 Overlay;KAPC Apc;PVOID CompletionKey;};
struct _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6::$2AD798E65616C4F7304824DBFA27E419 {union {KDEVICE_QUEUE_ENTRY DeviceQueueEntry;struct {PVOID DriverContext[4];};};PETHREAD Thread;PCHAR AuxiliaryBuffer;struct {LIST_ENTRY ListEntry;union {struct _IO_STACK_LOCATION *CurrentStackLocation;ULONG PacketType;};};PFILE_OBJECT OriginalFileObject;};
union _IRP::$::$2AD798E65616C4F7304824DBFA27E419::$63BBF9CAFCFD23268916A053C4643290 {KDEVICE_QUEUE_ENTRY DeviceQueueEntry;struct {PVOID DriverContext[4];};};
struct _IRP::$::$2AD798E65616C4F7304824DBFA27E419::$665C8370128C04AB892B069E6FB086E8 {LIST_ENTRY ListEntry;union {struct _IO_STACK_LOCATION *CurrentStackLocation;ULONG PacketType;};};
struct _IRP::$::$::$63BBF9CAFCFD23268916A053C4643290::$D67882FDDE0993B795A398485751D997 {PVOID DriverContext[4];};
union _IRP::$::$::$665C8370128C04AB892B069E6FB086E8::$8B5CD6CDFBAAB114E6B0B83ED2C2A4E9 {struct _IO_STACK_LOCATION *CurrentStackLocation;ULONG PacketType;};
union _IRP::$CBBBB9F4F0755A16DC8A369061485BEC {struct _IRP *MasterIrp;LONG IrpCount;PVOID SystemBuffer;};
struct _ISOCH_DESCRIPTOR {ULONG fulFlags;PMDL Mdl;ULONG ulLength;ULONG nMaxBytesPerFrame;ULONG ulSynch;ULONG ulTag;CYCLE_TIME CycleTime;PBUS_ISOCH_DESCRIPTOR_ROUTINE Callback;PVOID Context1;PVOID Context2;NTSTATUS status;ULONG_PTR DeviceReserved[8];ULONG_PTR BusReserved[8];ULONG_PTR PortReserved[16];};
struct _ISOCH_HEADER {unsigned __int32 IH_Sy : 4;unsigned __int32 IH_tCode : 4;unsigned __int32 IH_Channel : 6;unsigned __int32 IH_Tag : 2;unsigned __int32 IH_Data_Length : 16;};
struct _KAPC {CSHORT Type;CSHORT Size;ULONG Spare0;struct _KTHREAD *Thread;LIST_ENTRY ApcListEntry;PKKERNEL_ROUTINE KernelRoutine;PKRUNDOWN_ROUTINE RundownRoutine;PKNORMAL_ROUTINE NormalRoutine;PVOID NormalContext;PVOID SystemArgument1;PVOID SystemArgument2;CCHAR ApcStateIndex;KPROCESSOR_MODE ApcMode;BOOLEAN Inserted;};
enum _KBUGCHECK_BUFFER_DUMP_STATE {BufferEmpty = 0x0,BufferInserted = 0x1,BufferStarted = 0x2,BufferFinished = 0x3,BufferIncomplete = 0x4,};
enum _KBUGCHECK_CALLBACK_REASON {KbCallbackInvalid = 0x0,KbCallbackReserved1 = 0x1,KbCallbackSecondaryDumpData = 0x2,KbCallbackDumpIo = 0x3,};
struct _KBUGCHECK_CALLBACK_RECORD {LIST_ENTRY Entry;PKBUGCHECK_CALLBACK_ROUTINE CallbackRoutine;PVOID Buffer;ULONG Length;PUCHAR Component;ULONG_PTR Checksum;UCHAR State;};
struct _KBUGCHECK_DUMP_IO {ULONG64 Offset;PVOID Buffer;ULONG BufferLength;KBUGCHECK_DUMP_IO_TYPE Type;};
enum _KBUGCHECK_DUMP_IO_TYPE {KbDumpIoInvalid = 0x0,KbDumpIoHeader = 0x1,KbDumpIoBody = 0x2,KbDumpIoSecondaryData = 0x3,KbDumpIoComplete = 0x4,};
struct _KBUGCHECK_REASON_CALLBACK_RECORD {LIST_ENTRY Entry;PKBUGCHECK_REASON_CALLBACK_ROUTINE CallbackRoutine;PUCHAR Component;ULONG_PTR Checksum;KBUGCHECK_CALLBACK_REASON Reason;UCHAR State;};
struct _KBUGCHECK_SECONDARY_DUMP_DATA {PVOID InBuffer;ULONG InBufferLength;ULONG MaximumAllowed;GUID Guid;PVOID OutBuffer;ULONG OutBufferLength;};
struct _KDEVICE_QUEUE {CSHORT Type;CSHORT Size;LIST_ENTRY DeviceListHead;KSPIN_LOCK Lock;BOOLEAN Busy;};
struct _KDEVICE_QUEUE_ENTRY {LIST_ENTRY DeviceListEntry;ULONG SortKey;BOOLEAN Inserted;};
struct _KDPC {CSHORT Type;UCHAR Number;UCHAR Importance;LIST_ENTRY DpcListEntry;PKDEFERRED_ROUTINE DeferredRoutine;PVOID DeferredContext;PVOID SystemArgument1;PVOID SystemArgument2;PVOID DpcData;};
enum _KDPC_IMPORTANCE {LowImportance = 0x0,MediumImportance = 0x1,HighImportance = 0x2,};
struct _KEVENT {DISPATCHER_HEADER Header;};
struct _KEYBOARD_ID_EX {ULONG Type;ULONG Subtype;};
struct _KEYBOARD_PORT_WMI_STD_DATA {ULONG ConnectorType;ULONG DataQueueSize;ULONG ErrorCount;ULONG FunctionKeys;ULONG Indicators;};
struct _KEY_BASIC_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG NameLength;WCHAR Name[1];};
struct _KEY_FULL_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG ClassOffset;ULONG ClassLength;ULONG SubKeys;ULONG MaxNameLen;ULONG MaxClassLen;ULONG Values;ULONG MaxValueNameLen;ULONG MaxValueDataLen;WCHAR Class[1];};
enum _KEY_INFORMATION_CLASS {KeyBasicInformation = 0x0,KeyNodeInformation = 0x1,KeyFullInformation = 0x2,};
struct _KEY_NODE_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG ClassOffset;ULONG ClassLength;ULONG NameLength;WCHAR Name[1];};
enum _KEY_SET_INFORMATION_CLASS {KeyWriteTimeInformation = 0x0,KeyUserFlagsInformation = 0x1,MaxKeySetInfoClass = 0x2,};
struct _KEY_USER_FLAGS_INFORMATION {ULONG UserFlags;};
struct _KEY_VALUE_BASIC_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG NameLength;WCHAR Name[1];};
struct _KEY_VALUE_ENTRY {PUNICODE_STRING ValueName;ULONG DataLength;ULONG DataOffset;ULONG Type;};
struct _KEY_VALUE_FULL_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG DataOffset;ULONG DataLength;ULONG NameLength;WCHAR Name[1];};
enum _KEY_VALUE_INFORMATION_CLASS {KeyValueBasicInformation = 0x0,KeyValueFullInformation = 0x1,KeyValuePartialInformation = 0x2,KeyValueFullInformationAlign64 = 0x3,KeyValuePartialInformationAlign64 = 0x4,MaxKeyValueInfoClass = 0x5,};
struct _KEY_VALUE_PARTIAL_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG DataLength;UCHAR Data[1];};
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 {ULONG Type;ULONG DataLength;UCHAR Data[1];};
struct _KEY_WRITE_TIME_INFORMATION {LARGE_INTEGER LastWriteTime;};
struct _KFLOATING_SAVE {ULONG DoNotUse1;ULONG DoNotUse2;ULONG DoNotUse3;ULONG DoNotUse4;ULONG DoNotUse5;ULONG DoNotUse6;ULONG DoNotUse7;ULONG DoNotUse8;};
enum _KINTERRUPT_MODE {LevelSensitive = 0x0,Latched = 0x1,};
struct _KIPI_COUNTS {ULONG Freeze;ULONG Packet;ULONG DPC;ULONG APC;ULONG FlushSingleTb;ULONG FlushMultipleTb;ULONG FlushEntireTb;ULONG GenericCall;ULONG ChangeColor;ULONG SweepDcache;ULONG SweepIcache;ULONG SweepIcacheRange;ULONG FlushIoBuffers;ULONG GratuitousDPC;};
struct _KMUTANT {DISPATCHER_HEADER Header;LIST_ENTRY MutantListEntry;struct _KTHREAD *OwnerThread;BOOLEAN Abandoned;UCHAR ApcDisable;};
enum _KPROFILE_SOURCE {ProfileTime = 0x0,ProfileAlignmentFixup = 0x1,ProfileTotalIssues = 0x2,ProfilePipelineDry = 0x3,ProfileLoadInstructions = 0x4,ProfilePipelineFrozen = 0x5,ProfileBranchInstructions = 0x6,ProfileTotalNonissues = 0x7,ProfileDcacheMisses = 0x8,ProfileIcacheMisses = 0x9,ProfileCacheMisses = 0xA,ProfileBranchMispredictions = 0xB,ProfileStoreInstructions = 0xC,ProfileFpInstructions = 0xD,ProfileIntegerInstructions = 0xE,Profile2Issue = 0xF,Profile3Issue = 0x10,Profile4Issue = 0x11,ProfileSpecialInstructions = 0x12,ProfileTotalCycles = 0x13,ProfileIcacheIssues = 0x14,ProfileDcacheAccesses = 0x15,ProfileMemoryBarrierCycles = 0x16,ProfileLoadLinkedIssues = 0x17,ProfileMaximum = 0x18,};
struct _KSALLOCATOR_DISPATCH {PFNKSPININITIALIZEALLOCATOR InitializeAllocator;PFNKSDELETEALLOCATOR DeleteAllocator;PFNKSDEFAULTALLOCATE Allocate;PFNKSDEFAULTFREE Free;};
struct _KSCLOCK_DISPATCH {PFNKSPINSETTIMER SetTimer;PFNKSPINCANCELTIMER CancelTimer;PFNKSPINCORRELATEDTIME CorrelatedTime;PFNKSPINRESOLUTION Resolution;};
struct _KSDEVICE {const KSDEVICE_DESCRIPTOR *Descriptor;KSOBJECT_BAG Bag;PVOID Context;PDEVICE_OBJECT FunctionalDeviceObject;PDEVICE_OBJECT PhysicalDeviceObject;PDEVICE_OBJECT NextDeviceObject;BOOLEAN Started;SYSTEM_POWER_STATE SystemPowerState;DEVICE_POWER_STATE DevicePowerState;};
struct _KSDEVICE_DESCRIPTOR {const KSDEVICE_DISPATCH *Dispatch;ULONG FilterDescriptorsCount;const KSFILTER_DESCRIPTOR *const *FilterDescriptors;ULONG Version;};
struct _KSDEVICE_DISPATCH {PFNKSDEVICECREATE Add;PFNKSDEVICEPNPSTART Start;PFNKSDEVICE PostStart;PFNKSDEVICEIRP QueryStop;PFNKSDEVICEIRPVOID CancelStop;PFNKSDEVICEIRPVOID Stop;PFNKSDEVICEIRP QueryRemove;PFNKSDEVICEIRPVOID CancelRemove;PFNKSDEVICEIRPVOID Remove;PFNKSDEVICEQUERYCAPABILITIES QueryCapabilities;PFNKSDEVICEIRPVOID SurpriseRemoval;PFNKSDEVICEQUERYPOWER QueryPower;PFNKSDEVICESETPOWER SetPower;PFNKSDEVICEIRP QueryInterface;};
struct _KSEMAPHORE {DISPATCHER_HEADER Header;LONG Limit;};
struct _KSEVENT_ENTRY {LIST_ENTRY ListEntry;PVOID Object;union {PKSDPC_ITEM DpcItem;PKSBUFFER_ITEM BufferItem;};PKSEVENTDATA EventData;ULONG NotificationType;const KSEVENT_SET *EventSet;const KSEVENT_ITEM *EventItem;PFILE_OBJECT FileObject;ULONG SemaphoreAdjustment;ULONG Reserved;ULONG Flags;};
union _KSEVENT_ENTRY::$B26956EB948B1BB74D1F370DF846EB48 {PKSDPC_ITEM DpcItem;PKSBUFFER_ITEM BufferItem;};
struct _KSFILTER {const KSFILTER_DESCRIPTOR *Descriptor;KSOBJECT_BAG Bag;PVOID Context;};
struct _KSFILTERFACTORY {const KSFILTER_DESCRIPTOR *FilterDescriptor;KSOBJECT_BAG Bag;PVOID Context;};
struct _KSFILTER_DESCRIPTOR {const KSFILTER_DISPATCH *Dispatch;const KSAUTOMATION_TABLE *AutomationTable;ULONG Version;ULONG Flags;const GUID *ReferenceGuid;ULONG PinDescriptorsCount;ULONG PinDescriptorSize;const KSPIN_DESCRIPTOR_EX *PinDescriptors;ULONG CategoriesCount;const GUID *Categories;ULONG NodeDescriptorsCount;ULONG NodeDescriptorSize;const KSNODE_DESCRIPTOR *NodeDescriptors;ULONG ConnectionsCount;const KSTOPOLOGY_CONNECTION *Connections;const KSCOMPONENTID *ComponentId;};
struct _KSFILTER_DISPATCH {PFNKSFILTERIRP Create;PFNKSFILTERIRP Close;PFNKSFILTERPROCESS Process;PFNKSFILTERVOID Reset;};
struct _KSGATE {LONG Count;PKSGATE NextGate;};
struct _KSGOP_USERDATA {ULONG sc;ULONG reserved1;BYTE cFields;CHAR l21Data[3];};
struct _KSMAPPING {PHYSICAL_ADDRESS PhysicalAddress;ULONG ByteCount;ULONG Alignment;};
struct _KSMPEGVID_RECT {ULONG StartX;ULONG StartY;ULONG EndX;ULONG EndY;};
struct _KSM_BDA_PIN {KSMETHOD Method;union {ULONG PinId;ULONG PinType;};ULONG Reserved;};
union _KSM_BDA_PIN::$E33ABE1885360AB30BA4739A3C7D59A2 {ULONG PinId;ULONG PinType;};
struct _KSM_BDA_PIN_PAIR {KSMETHOD Method;union {ULONG InputPinId;ULONG InputPinType;};union {ULONG OutputPinId;ULONG OutputPinType;};};
union _KSM_BDA_PIN_PAIR::$54CD25B4E687557DB78A3697AAB04510 {ULONG OutputPinId;ULONG OutputPinType;};
union _KSM_BDA_PIN_PAIR::$F2C15BE15B02E5D4E08CDF00E238673A {ULONG InputPinId;ULONG InputPinType;};
struct _KSM_PIN {KSMETHOD Method;union {ULONG PinId;ULONG PinType;};ULONG Reserved;};
union _KSM_PIN::$E33ABE1885360AB30BA4739A3C7D59A2 {ULONG PinId;ULONG PinType;};
struct _KSM_PIN_PAIR {KSMETHOD Method;ULONG InputPinId;ULONG OutputPinId;ULONG Reserved;};
struct _KSNODE_DESCRIPTOR {const KSAUTOMATION_TABLE *AutomationTable;const GUID *Type;const GUID *Name;PVOID Alignment;};
struct _KSPIN {const KSPIN_DESCRIPTOR_EX *Descriptor;KSOBJECT_BAG Bag;PVOID Context;ULONG Id;KSPIN_COMMUNICATION Communication;BOOLEAN ConnectionIsExternal;KSPIN_INTERFACE ConnectionInterface;KSPIN_MEDIUM ConnectionMedium;KSPRIORITY ConnectionPriority;PKSDATAFORMAT ConnectionFormat;PKSMULTIPLE_ITEM AttributeList;ULONG StreamHeaderSize;KSPIN_DATAFLOW DataFlow;KSSTATE DeviceState;KSRESET ResetState;KSSTATE ClientState;};
struct _KSPIN_DESCRIPTOR_EX {const KSPIN_DISPATCH *Dispatch;const KSAUTOMATION_TABLE *AutomationTable;KSPIN_DESCRIPTOR PinDescriptor;ULONG Flags;ULONG InstancesPossible;ULONG InstancesNecessary;const KSALLOCATOR_FRAMING_EX *AllocatorFraming;PFNKSINTERSECTHANDLEREX IntersectHandler;};
struct _KSPIN_DISPATCH {PFNKSPINIRP Create;PFNKSPINIRP Close;PFNKSPIN Process;PFNKSPINVOID Reset;PFNKSPINSETDATAFORMAT SetDataFormat;PFNKSPINSETDEVICESTATE SetDeviceState;PFNKSPIN Connect;PFNKSPINVOID Disconnect;const KSCLOCK_DISPATCH *Clock;const KSALLOCATOR_DISPATCH *Allocator;};
enum _KSPIN_FLAG_AVC {KSPIN_FLAG_AVCMASK = 0x3,KSPIN_FLAG_AVC_PERMANENT = 0x1,KSPIN_FLAG_AVC_CONNECTED = 0x2,KSPIN_FLAG_AVC_PCRONLY = 0x4,KSPIN_FLAG_AVC_FIXEDPCR = 0x8,};
struct _KSPROCESSPIN {PKSPIN Pin;PKSSTREAM_POINTER StreamPointer;PKSPROCESSPIN InPlaceCounterpart;PKSPROCESSPIN DelegateBranch;PKSPROCESSPIN CopySource;PVOID Data;ULONG BytesAvailable;ULONG BytesUsed;ULONG Flags;BOOLEAN Terminate;};
struct _KSPROCESSPIN_INDEXENTRY {PKSPROCESSPIN *Pins;ULONG Count;};
struct _KSPROPERTY_GRAPHMANAGER_INTERFACE {PFILE_OBJECT GraphManager;KSGRAPHMANAGER_FUNCTIONTABLE FunctionTable;};
struct _KSPROPERTY_SPHLI {USHORT HLISS;USHORT Reserved;ULONG StartPTM;ULONG EndPTM;USHORT StartX;USHORT StartY;USHORT StopX;USHORT StopY;KS_COLCON ColCon;};
struct _KSPROPERTY_SPPAL {KS_DVD_YUV sppal[16];};
struct _KSP_BDA_NODE_PIN {KSPROPERTY Property;ULONG ulNodeType;ULONG ulInputPinId;ULONG ulOutputPinId;};
struct _KSSTREAM_POINTER {PVOID Context;PKSPIN Pin;PKSSTREAM_HEADER StreamHeader;PKSSTREAM_POINTER_OFFSET Offset;KSSTREAM_POINTER_OFFSET OffsetIn;KSSTREAM_POINTER_OFFSET OffsetOut;};
struct _KSSTREAM_POINTER_OFFSET {union {PUCHAR Data;PKSMAPPING Mappings;};PVOID Alignment;ULONG Count;ULONG Remaining;};
union _KSSTREAM_POINTER_OFFSET::$4CF715FE59791F9AF0BCA050DECE6C8F {PUCHAR Data;PKSMAPPING Mappings;};
struct _KSYSTEM_TIME {ULONG LowPart;LONG High1Time;LONG High2Time;};
struct _KS_COLCON {unsigned __int8 emph1col : 4;unsigned __int8 emph2col : 4;unsigned __int8 backcol : 4;unsigned __int8 patcol : 4;unsigned __int8 emph1con : 4;unsigned __int8 emph2con : 4;unsigned __int8 backcon : 4;unsigned __int8 patcon : 4;};
struct _KS_COPY_MACROVISION {ULONG MACROVISIONLevel;};
struct _KS_DVDCOPY_BUSKEY {BYTE BusKey[5];BYTE Reserved[1];};
struct _KS_DVDCOPY_CHLGKEY {BYTE ChlgKey[10];BYTE Reserved[2];};
struct _KS_DVDCOPY_DISCKEY {BYTE DiscKey[2048];};
struct _KS_DVDCOPY_REGION {UCHAR Reserved;UCHAR RegionData;UCHAR Reserved2[2];};
struct _KS_DVDCOPY_SET_COPY_STATE {ULONG DVDCopyState;};
struct _KS_DVDCOPY_TITLEKEY {ULONG KeyFlags;ULONG ReservedNT[2];UCHAR TitleKey[6];UCHAR Reserved[2];};
struct _KS_DVD_YCrCb {UCHAR Reserved;UCHAR Y;UCHAR Cr;UCHAR Cb;};
struct _KS_DVD_YUV {UCHAR Reserved;UCHAR Y;UCHAR V;UCHAR U;};
struct _KS_VIDEO_STREAM_CONFIG_CAPS {GUID guid;ULONG VideoStandard;SIZE InputSize;SIZE MinCroppingSize;SIZE MaxCroppingSize;int CropGranularityX;int CropGranularityY;int CropAlignX;int CropAlignY;SIZE MinOutputSize;SIZE MaxOutputSize;int OutputGranularityX;int OutputGranularityY;int StretchTapsX;int StretchTapsY;int ShrinkTapsX;int ShrinkTapsY;LONGLONG MinFrameInterval;LONGLONG MaxFrameInterval;LONG MinBitsPerSecond;LONG MaxBitsPerSecond;};
struct _KTIMER {DISPATCHER_HEADER Header;ULARGE_INTEGER DueTime;LIST_ENTRY TimerListEntry;struct _KDPC *Dpc;LONG Period;};
struct _KWAIT_BLOCK {LIST_ENTRY WaitListEntry;struct _KTHREAD *Thread;PVOID Object;struct _KWAIT_BLOCK *NextWaitBlock;USHORT WaitKey;USHORT WaitType;};
enum _KWAIT_REASON {Executive = 0x0,FreePage = 0x1,PageIn = 0x2,PoolAllocation = 0x3,DelayExecution = 0x4,Suspended = 0x5,UserRequest = 0x6,WrExecutive = 0x7,WrFreePage = 0x8,WrPageIn = 0x9,WrPoolAllocation = 0xA,WrDelayExecution = 0xB,WrSuspended = 0xC,WrUserRequest = 0xD,WrEventPair = 0xE,WrQueue = 0xF,WrLpcReceive = 0x10,WrLpcReply = 0x11,WrVirtualMemory = 0x12,WrPageOut = 0x13,WrRendezvous = 0x14,Spare2 = 0x15,Spare3 = 0x16,Spare4 = 0x17,Spare5 = 0x18,Spare6 = 0x19,WrKernel = 0x1A,WrResource = 0x1B,WrPushLock = 0x1C,WrMutex = 0x1D,WrQuantumEnd = 0x1E,WrDispatchInt = 0x1F,WrPreempted = 0x20,WrYieldExecution = 0x21,MaximumWaitReason = 0x22,};
union _LARGE_INTEGER {struct {ULONG LowPart;LONG HighPart;};struct _LARGE_INTEGER::$824E624842C29B0A9DF85A636208834D u;LONGLONG QuadPart;};
struct _LARGE_INTEGER::$824E624842C29B0A9DF85A636208834D {ULONG LowPart;LONG HighPart;};
struct _LEGACY_BUS_INFORMATION {GUID BusTypeGuid;INTERFACE_TYPE LegacyBusType;ULONG BusNumber;};
struct _LIST_ENTRY {struct _LIST_ENTRY *Flink;struct _LIST_ENTRY *Blink;};
enum _LOCK_OPERATION {IoReadAccess = 0x0,IoWriteAccess = 0x1,IoModifyAccess = 0x2,};
struct _LUID {ULONG LowPart;LONG HighPart;};
struct _LUID_AND_ATTRIBUTES {LUID Luid;ULONG Attributes;};
struct _MCA_EXCEPTION {ULONG VersionNumber;MCA_EXCEPTION_TYPE ExceptionType;LARGE_INTEGER TimeStamp;ULONG ProcessorNumber;ULONG Reserved1;union _MCA_EXCEPTION::$778E3D9E82734009103A1940AB270D68 u;ULONG ExtCnt;ULONG Reserved3;ULONGLONG ExtReg[24];};
union _MCA_EXCEPTION::$778E3D9E82734009103A1940AB270D68 {struct _MCA_EXCEPTION::$778E3D9E82734009103A1940AB270D68::$8B54ED8CB39CC03D44DD62F841F64493 Mca;struct _MCA_EXCEPTION::$778E3D9E82734009103A1940AB270D68::$3514090A4590A95A1DE583AEB66EEF9E Mce;};
struct _MCA_EXCEPTION::$778E3D9E82734009103A1940AB270D68::$3514090A4590A95A1DE583AEB66EEF9E {ULONGLONG Address;ULONGLONG Type;};
struct _MCA_EXCEPTION::$778E3D9E82734009103A1940AB270D68::$8B54ED8CB39CC03D44DD62F841F64493 {UCHAR BankNumber;UCHAR Reserved2[7];MCI_STATS Status;MCI_ADDR Address;ULONGLONG Misc;};
union _MCI_ADDR {struct {ULONG Address;ULONG Reserved;};ULONGLONG QuadPart;};
struct _MCI_ADDR::$A76831D64C2EAE3852FBB9C70B9C2DA0 {ULONG Address;ULONG Reserved;};
union _MCI_STATS {struct _MCI_STATS::$C2A101EC7ECF14B971CBBE2E489A1AF6 MciStats;ULONGLONG QuadPart;};
struct _MCI_STATS::$C2A101EC7ECF14B971CBBE2E489A1AF6 {USHORT McaCod;USHORT MsCod;unsigned __int32 OtherInfo : 25;unsigned __int32 Damage : 1;unsigned __int32 AddressValid : 1;unsigned __int32 MiscValid : 1;unsigned __int32 Enabled : 1;unsigned __int32 UnCorrected : 1;unsigned __int32 OverFlow : 1;unsigned __int32 Valid : 1;};
struct _MDL {struct _MDL *Next;CSHORT Size;CSHORT MdlFlags;struct _EPROCESS *Process;PVOID MappedSystemVa;PVOID StartVa;ULONG ByteCount;ULONG ByteOffset;};
enum _MEMORY_CACHING_TYPE {MmNonCached = 0x0,MmCached = 0x1,MmWriteCombined = 0x2,MmHardwareCoherentCached = 0x3,MmCachingTypeDoNotUse1 = 0x4,MmCachingTypeDoNotUse2 = 0x5,MmMaximumCacheType = 0x6,};
enum _MEMORY_CACHING_TYPE_ORIG {MmFrameBufferCached = 0x2,};
enum _MM_PAGE_PRIORITY {LowPagePriority = 0x0,NormalPagePriority = 0x10,HighPagePriority = 0x20,};
enum _MM_SYSTEM_SIZE {MmSmallSystem = 0x0,MmMediumSystem = 0x1,MmLargeSystem = 0x2,};
enum _MODE {KernelMode = 0x0,UserMode = 0x1,MaximumMode = 0x2,};
struct _MPEG2_TRANSPORT_STRIDE {DWORD dwOffset;DWORD dwPacketLength;DWORD dwStride;};
struct _MSAcpiInfo {ULONG BootArchitecture;ULONG PreferredProfile;ULONG Capabilities;};
struct _MSAcpi_ThermalZoneTemperature {ULONG ThermalStamp;ULONG ThermalConstant1;ULONG ThermalConstant2;ULONG Reserved;ULONG SamplingPeriod;ULONG CurrentTemperature;ULONG PassiveTripPoint;ULONG CriticalTripPoint;ULONG ActiveTripPointCount;ULONG ActiveTripPoint[10];};
struct _MSDiskDriver_Performance {WMI_DISK_PERFORMANCE PerfData;CHAR VariableData[1];};
struct _MSIde_PortDeviceInfo {UCHAR Bus;UCHAR Target;UCHAR Lun;};
struct _MSKeyboard_ClassInformation {ULONGLONG DeviceId;};
struct _MSMCAEvent_CPUError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG MajorErrorType;ULONG Level;ULONG CacheOp;ULONG CacheMesi;ULONG TLBOp;ULONG BusType;ULONG BusSev;ULONG RegFileId;ULONG RegFileOp;ULONG MSSid;ULONG MSOp;ULONG MSArrayId;ULONG MSIndex;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_Header {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;};
struct _MSMCAEvent_InvalidError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_MemoryError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG MEM_ERROR_STATUS;ULONGLONG MEM_PHYSICAL_ADDR;ULONGLONG MEM_PHYSICAL_MASK;ULONGLONG RESPONDER_ID;ULONGLONG TARGET_ID;ULONGLONG REQUESTOR_ID;ULONGLONG BUS_SPECIFIC_DATA;USHORT MEM_NODE;USHORT MEM_CARD;USHORT MEM_BANK;USHORT xMEM_DEVICE;USHORT MEM_MODULE;USHORT MEM_ROW;USHORT MEM_COLUMN;USHORT MEM_BIT_POSITION;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_MemoryPageRemoved {ULONGLONG PhysicalAddress;};
struct _MSMCAEvent_PCIBusError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG PCI_BUS_ERROR_STATUS;ULONGLONG PCI_BUS_ADDRESS;ULONGLONG PCI_BUS_DATA;ULONGLONG PCI_BUS_CMD;ULONGLONG PCI_BUS_REQUESTOR_ID;ULONGLONG PCI_BUS_RESPONDER_ID;ULONGLONG PCI_BUS_TARGET_ID;USHORT PCI_BUS_ERROR_TYPE;UCHAR PCI_BUS_ID_BusNumber;UCHAR PCI_BUS_ID_SegmentNumber;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_PCIComponentError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG PCI_COMP_ERROR_STATUS;USHORT PCI_COMP_INFO_VendorId;USHORT PCI_COMP_INFO_DeviceId;UCHAR PCI_COMP_INFO_ClassCodeInterface;UCHAR PCI_COMP_INFO_ClassCodeSubClass;UCHAR PCI_COMP_INFO_ClassCodeBaseClass;UCHAR PCI_COMP_INFO_FunctionNumber;UCHAR PCI_COMP_INFO_DeviceNumber;UCHAR PCI_COMP_INFO_BusNumber;UCHAR PCI_COMP_INFO_SegmentNumber;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_PlatformSpecificError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG PLATFORM_ERROR_STATUS;ULONGLONG PLATFORM_REQUESTOR_ID;ULONGLONG PLATFORM_RESPONDER_ID;ULONGLONG PLATFORM_TARGET_ID;ULONGLONG PLATFORM_BUS_SPECIFIC_DATA;UCHAR OEM_COMPONENT_ID[16];ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_SMBIOSError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;UCHAR SMBIOS_EVENT_TYPE;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_SystemEventError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG SEL_TIME_STAMP;USHORT SEL_RECORD_ID;USHORT SEL_GENERATOR_ID;UCHAR SEL_RECORD_TYPE;UCHAR SEL_EVM_REV;UCHAR SEL_SENSOR_TYPE;UCHAR SEL_SENSOR_NUM;UCHAR SEL_EVENT_DIR_TYPE;UCHAR SEL_DATA1;UCHAR SEL_DATA2;UCHAR SEL_DATA3;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAInfo_Entry {ULONG Length;UCHAR Data[1];};
struct _MSMCAInfo_RawCMCEvent {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSMCAInfo_RawCorrectedPlatformEvent {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSMCAInfo_RawMCAData {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSMCAInfo_RawMCAEvent {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSMouse_ClassInformation {ULONGLONG DeviceId;};
struct _MSNdis_80211_AddWEP {ULONG Length;ULONG KeyIndex;ULONG KeyLength;UCHAR KeyMaterial[1];};
struct _MSNdis_80211_AuthenticationMode {ULONG Ndis80211AuthenticationMode;};
struct _MSNdis_80211_BSSIList {ULONG NumberOfItems;MSNdis_80211_WLanBssId Ndis80211BSSIList[1];};
struct _MSNdis_80211_BaseServiceSetIdentifier {UCHAR Ndis80211MacAddress[6];};
struct _MSNdis_80211_BssIdListScan {ULONG UnusedParameter;};
struct _MSNdis_80211_Configuration {MSNdis_80211_ConfigurationInfo Ndis80211Config;};
struct _MSNdis_80211_ConfigurationFH {ULONG FHLength;ULONG HopPattern;ULONG HopSet;ULONG DwellTime;};
struct _MSNdis_80211_ConfigurationInfo {ULONG ConfigLength;ULONG BeaconPeriod;ULONG ATIMWindow;ULONG DSConfig;MSNdis_80211_ConfigurationFH FHConfig;};
struct _MSNdis_80211_DataRates {UCHAR Ndis80211DataRate[8];};
struct _MSNdis_80211_DesiredDataRates {UCHAR Ndis80211DesiredRate[8];};
struct _MSNdis_80211_Disassociate {ULONG UnusedParameter;};
struct _MSNdis_80211_FragmentationThreshold {ULONG Ndis80211FragmentationThreshold;};
struct _MSNdis_80211_InfrastructureMode {MSNdis_80211_NetworkInfrastructure Ndis80211InfrastructureMode;};
struct _MSNdis_80211_NetworkInfrastructure {ULONG Ndis80211NetworkInfrastructure;};
struct _MSNdis_80211_NetworkType {ULONG Ndis80211NetworkType;};
struct _MSNdis_80211_NetworkTypeInUse {MSNdis_80211_NetworkType Ndis80211NetworkTypeInUse;};
struct _MSNdis_80211_NetworkTypesSupported {ULONG NumberOfItems;MSNdis_80211_NetworkType Ndis80211NetworkTypes[1];};
struct _MSNdis_80211_NumberOfAntennas {ULONG Ndis80211NumberOfAntennas;};
struct _MSNdis_80211_PowerMode {ULONG Ndis80211PowerMode;};
struct _MSNdis_80211_PrivacyFilter {ULONG Ndis80211PrivacyFilter;};
struct _MSNdis_80211_RTSThreshold {ULONG Ndis80211RTSThreshold;};
struct _MSNdis_80211_ReceiveAntennaSelected {ULONG Ndis80211ReceiveAntennaSelected;};
struct _MSNdis_80211_ReceivedSignalStrength {LONG Ndis80211ReceivedSignalStrength;};
struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger {LONG Ndis80211ReceivedSignalStrengthTrigger;};
struct _MSNdis_80211_ReloadDefaults {ULONG Ndis80211ReloadDefaults;};
struct _MSNdis_80211_RemoveWEP {ULONG Ndis80211KeyIndex;};
struct _MSNdis_80211_ServiceSetIdentifier {UCHAR Ndis80211SsId[33];};
struct _MSNdis_80211_Statistics {ULONG StatisticsLength;ULONGLONG TransmittedFragmentCount;ULONGLONG MulticastTransmittedFrameCount;ULONGLONG FailedCount;ULONGLONG RetryCount;ULONGLONG MultipleRetryCount;ULONGLONG RTSSuccessCount;ULONGLONG RTSFailureCount;ULONGLONG ACKFailureCount;ULONGLONG FrameDuplicateCount;ULONGLONG ReceivedFragmentCount;ULONGLONG MulticastReceivedFrameCount;ULONGLONG FCSErrorCount;};
struct _MSNdis_80211_TransmitAntennaSelected {ULONG Ndis80211TransmitAntennaSelected;};
struct _MSNdis_80211_TransmitPowerLevel {ULONG Ndis80211TransmitPowerLevel;};
struct _MSNdis_80211_WEPStatus {ULONG Ndis80211WEPStatus;};
struct _MSNdis_80211_WLanBssId {ULONG Ndis80211WLanBssIdLength;UCHAR Ndis80211MacAddress[6];USHORT Reserved;ULONG Ndis80211SsIdLength;UCHAR Ndis80211SsId[32];ULONG Ndis80211Privacy;ULONG Ndis80211Rssi;MSNdis_80211_NetworkType Ndis80211NetworkTypeInUse;MSNdis_80211_ConfigurationInfo Ndis80211Configuration;MSNdis_80211_NetworkInfrastructure Ndis80211InfrastructureMode;UCHAR Ndis80211SupportedRate[8];};
struct _MSNdis_AtmHardwareCurrentAddress {MSNdis_NetworkAddress NdisAtmHardwareCurrentAddress;};
struct _MSNdis_AtmMaxAal0PacketSize {ULONG NdisAtmMaxAal0PacketSize;};
struct _MSNdis_AtmMaxAal1PacketSize {ULONG NdisAtmMaxAal1PacketSize;};
struct _MSNdis_AtmMaxAal34PacketSize {ULONG NdisAtmMaxAal34PacketSize;};
struct _MSNdis_AtmMaxAal5PacketSize {ULONG NdisAtmMaxAal5PacketSize;};
struct _MSNdis_AtmMaxActiveVciBits {ULONG NdisAtmMaxActiveVciBits;};
struct _MSNdis_AtmMaxActiveVcs {ULONG NdisAtmMaxActiveVcs;};
struct _MSNdis_AtmMaxActiveVpiBits {ULONG NdisAtmMaxActiveVpiBits;};
struct _MSNdis_AtmReceiveCellsDropped {ULONGLONG NdisAtmReceiveCellsDropped;};
struct _MSNdis_AtmReceiveCellsOk {ULONGLONG NdisAtmReceiveCellsOk;};
struct _MSNdis_AtmSupportedAalTypes {ULONG NdisAtmSupportedAalTypes;};
struct _MSNdis_AtmSupportedServiceCategory {ULONG NdisAtmSupportedServiceCategory;};
struct _MSNdis_AtmSupportedVcRates {ULONG MinCellRate;ULONG MaxCellRate;};
struct _MSNdis_AtmTransmitCellsOk {ULONGLONG NdisAtmTransmitCellsOk;};
struct _MSNdis_CoDriverVersion {USHORT NdisCoDriverVersion;};
struct _MSNdis_CoHardwareStatus {ULONG NdisCoHardwareStatus;};
struct _MSNdis_CoLinkSpeed {MSNdis_NetworkLinkSpeed NdisCoLinkSpeed;};
struct _MSNdis_CoMacOptions {ULONG NdisCoMacOptions;};
struct _MSNdis_CoMediaConnectStatus {ULONG NdisCoMediaConnectStatus;};
struct _MSNdis_CoMediaInUse {ULONG NumberElements;ULONG NdisCoMediaInUse[1];};
struct _MSNdis_CoMediaSupported {ULONG NumberElements;ULONG NdisCoMediaSupported[1];};
struct _MSNdis_CoMinimumLinkSpeed {MSNdis_NetworkLinkSpeed NdisCoMinimumLinkSpeed;};
struct _MSNdis_CoReceivePduErrors {ULONG NdisCoReceivePduErrors;};
struct _MSNdis_CoReceivePdusNoBuffer {ULONG NdisCoReceivePdusNoBuffer;};
struct _MSNdis_CoReceivePdusOk {ULONGLONG NdisCoReceivePdusOk;};
struct _MSNdis_CoTransmitPduErrors {ULONG NdisCoTransmitPduErrors;};
struct _MSNdis_CoTransmitPdusOk {ULONGLONG NdisCoTransmitPdusOk;};
struct _MSNdis_CoVendorDescription {CHAR VariableData[1];};
struct _MSNdis_CoVendorDriverVersion {ULONG NdisCoVendorDriverVersion;};
struct _MSNdis_CoVendorId {ULONG NdisCoVendorID;};
struct _MSNdis_CurrentLookahead {ULONG NdisCurrentLookahead;};
struct _MSNdis_CurrentPacketFilter {ULONG NdisCurrentPacketFilter;};
struct _MSNdis_DeviceWakeOnMagicPacketOnly {BOOLEAN EnableWakeOnMagicPacketOnly;};
struct _MSNdis_DriverVersion {USHORT NdisDriverVersion;};
struct _MSNdis_EnumerateAdapter {CHAR VariableData[1];};
struct _MSNdis_EthernetCurrentAddress {MSNdis_NetworkAddress NdisCurrentAddress;};
struct _MSNdis_EthernetMacOptions {ULONG NdisEthernetMacOptions;};
struct _MSNdis_EthernetMaximumMulticastListSize {ULONG NdisEthernetMaximumMulticastListSize;};
struct _MSNdis_EthernetMoreTransmitCollisions {ULONG NdisEthernetMoreTransmitCollisions;};
struct _MSNdis_EthernetMulticastList {ULONG NumberElements;MSNdis_NetworkAddress NdisMulticastList[1];};
struct _MSNdis_EthernetOneTransmitCollision {ULONG NdisEthernetOneTransmitCollision;};
struct _MSNdis_EthernetPermanentAddress {MSNdis_NetworkAddress NdisPermanentAddress;};
struct _MSNdis_EthernetReceiveErrorAlignment {ULONG NdisEthernetReceiveErrorAlignment;};
struct _MSNdis_FddiAttachmentType {ULONG NdisFddiAttachmentType;};
struct _MSNdis_FddiDownstreamNodeLong {MSNdis_NetworkAddress NdisFddiDownstreamNodeLong;};
struct _MSNdis_FddiFrameErrors {ULONG NdisFddiFrameErrors;};
struct _MSNdis_FddiFramesLost {ULONG NdisFddiFramesLost;};
struct _MSNdis_FddiLConnectionState {ULONG NdisFddiLConnectionState;};
struct _MSNdis_FddiLctFailures {ULONG NdisFddiLctFailures;};
struct _MSNdis_FddiLemRejects {ULONG NdisFddiLemRejects;};
struct _MSNdis_FddiLongCurrentAddress {MSNdis_NetworkAddress NdisCurrentAddress;};
struct _MSNdis_FddiLongMaximumListSize {ULONG NdisFddiLongMaximumListSize;};
struct _MSNdis_FddiLongMulticastList {ULONG NumberElements;MSNdis_NetworkAddress NdisMulticastList[1];};
struct _MSNdis_FddiLongPermanentAddress {MSNdis_NetworkAddress NdisPermanentAddress;};
struct _MSNdis_FddiRingManagmentState {ULONG NdisFddiRingManagmentState;};
struct _MSNdis_FddiShortCurrentAddress {MSNdis_NetworkShortAddress NdisCurrentAddress;};
struct _MSNdis_FddiShortMaximumListSize {ULONG NdisFddiShortMaximumListSize;};
struct _MSNdis_FddiShortMulticastList {ULONG NumberElements;MSNdis_NetworkShortAddress NdisMulticastList[1];};
struct _MSNdis_FddiShortPermanentAddress {MSNdis_NetworkShortAddress NdisPermanentAddress;};
struct _MSNdis_FddiUpstreamNodeLong {MSNdis_NetworkAddress NdisFddiUpstreamNodeLong;};
struct _MSNdis_HardwareStatus {ULONG NdisHardwareStatus;};
struct _MSNdis_LinkSpeed {ULONG NdisLinkSpeed;};
struct _MSNdis_MacOptions {ULONG NdisMacOptions;};
struct _MSNdis_MaximumFrameSize {ULONG NdisMaximumFrameSize;};
struct _MSNdis_MaximumLookahead {ULONG NdisMaximumLookahead;};
struct _MSNdis_MaximumSendPackets {ULONG NdisMaximumSendPackets;};
struct _MSNdis_MaximumTotalSize {ULONG NdisMaximumTotalSize;};
struct _MSNdis_MediaConnectStatus {ULONG NdisMediaConnectStatus;};
struct _MSNdis_MediaInUse {ULONG NumberElements;ULONG NdisMediaInUse[1];};
struct _MSNdis_MediaSupported {ULONG NumberElements;ULONG NdisMediaSupported[1];};
struct _MSNdis_NetworkAddress {UCHAR Address[6];};
struct _MSNdis_NetworkLinkSpeed {ULONG Outbound;ULONG Inbound;};
struct _MSNdis_NetworkShortAddress {UCHAR Address[2];};
struct _MSNdis_NotifyAdapterArrival {CHAR VariableData[1];};
struct _MSNdis_NotifyAdapterRemoval {CHAR VariableData[1];};
struct _MSNdis_PhysicalMediumType {ULONG NdisPhysicalMediumType;};
struct _MSNdis_ReceiveBlockSize {ULONG NdisReceiveBlockSize;};
struct _MSNdis_ReceiveBufferSpace {ULONG NdisReceiveBufferSpace;};
struct _MSNdis_ReceiveError {ULONG NdisReceiveError;};
struct _MSNdis_ReceiveNoBuffer {ULONG NdisReceiveNoBuffer;};
struct _MSNdis_ReceivesOk {ULONGLONG NdisReceivesOk;};
struct _MSNdis_StatusDevicePowerOff {CHAR VariableData[1];};
struct _MSNdis_StatusDevicePowerOn {CHAR VariableData[1];};
struct _MSNdis_StatusLinkSpeedChange {MSNdis_NetworkLinkSpeed NdisStatusLinkSpeedChange;};
struct _MSNdis_StatusMediaSpecificIndication {ULONG NumberElements;UCHAR NdisStatusMediaSpecificIndication[1];};
struct _MSNdis_StatusProtocolBind {CHAR VariableData[1];};
struct _MSNdis_StatusProtocolUnbind {CHAR VariableData[1];};
struct _MSNdis_TokenRingCurrentAddress {MSNdis_NetworkAddress NdisCurrentAddress;};
struct _MSNdis_TokenRingCurrentFunctional {ULONG NdisTokenRingCurrentFunctional;};
struct _MSNdis_TokenRingCurrentGroup {ULONG NdisTokenRingCurrentGroup;};
struct _MSNdis_TokenRingCurrentRingState {ULONG NdisTokenRingCurrentRingState;};
struct _MSNdis_TokenRingCurrentRingStatus {ULONG NdisTokenRingCurrentRingStatus;};
struct _MSNdis_TokenRingLastOpenStatus {ULONG NdisTokenRingLastOpenStatus;};
struct _MSNdis_TokenRingLineErrors {ULONG NdisTokenRingLineErrors;};
struct _MSNdis_TokenRingLostFrames {ULONG NdisTokenRingLostFrames;};
struct _MSNdis_TokenRingPermanentAddress {MSNdis_NetworkAddress NdisPermanentAddress;};
struct _MSNdis_TransmitBlockSize {ULONG NdisTransmitBlockSize;};
struct _MSNdis_TransmitBufferSpace {ULONG NdisTransmitBufferSpace;};
struct _MSNdis_TransmitsError {ULONG NdisTransmitsError;};
struct _MSNdis_TransmitsOk {ULONGLONG NdisTransmitsOk;};
struct _MSNdis_VendorDescription {CHAR VariableData[1];};
struct _MSNdis_VendorDriverVersion {ULONG NdisVendorDriverVersion;};
struct _MSNdis_VendorID {ULONG NdisVendorID;};
struct _MSNdis_VlanIdentifier {ULONG NdisVlanId;};
struct _MSPower_DeviceEnable {BOOLEAN Enable;};
struct _MSPower_DeviceWakeEnable {BOOLEAN Enable;};
struct _MSSerial_PortName {CHAR VariableData[1];};
struct _MSSmBios_RawSMBiosTables {BOOLEAN Used20CallingMethod;UCHAR SmbiosMajorVersion;UCHAR SmbiosMinorVersion;UCHAR DmiRevision;ULONG Size;UCHAR SMBiosData[1];};
struct _MSSmBios_SMBiosEventlog {char VariableData[1];};
struct _MSSmBios_Sysid1394List {ULONG Count;SYSID_1394 List[1];};
struct _MSSmBios_SysidUUIDList {ULONG Count;SYSID_UUID List[1];};
struct _MSVerifierIrpLogEntry {ULONG Count;UCHAR Major;UCHAR Minor;UCHAR Flags;UCHAR Control;ULONGLONG Arg1;ULONGLONG Arg2;ULONGLONG Arg3;ULONGLONG Arg4;};
struct _MSVerifierIrpLogInformation {ULONG DeviceType;ULONG EntryCount;MSVerifierIrpLogEntry Entries[1];};
struct _MSWmi_Guid {UCHAR Guid[16];};
struct _MSWmi_GuidRegistrationInfo {ULONG Operation;ULONG GuidCount;MSWmi_Guid GuidList[1];};
struct _MSWmi_MofData {ULONG Unused1;ULONG Unused2;ULONG Size;ULONG Unused4;UCHAR BinaryMofData[1];};
struct _MSWmi_PnPDeviceId {CHAR VariableData[1];};
struct _MSWmi_PnPInstanceNames {ULONG Count;WCHAR InstanceNameList[1];};
struct _MSWmi_ProviderInfo {char VariableData[1];};
struct _NABTSFEC_BUFFER {ULONG dataSize;USHORT groupID;USHORT Reserved;UCHAR data[448];};
struct _NABTS_BUFFER {VBICODECFILTERING_SCANLINES ScanlinesRequested;LONGLONG PictureNumber;NABTS_BUFFER_LINE NabtsLines[11];};
struct _NABTS_BUFFER_LINE {BYTE Confidence;BYTE Bytes[36];};
struct _NETWORK_CHANNELS {unsigned __int32 NC_Channel : 6;unsigned __int32 NC_Reserved : 18;unsigned __int32 NC_Npm_ID : 6;unsigned __int32 NC_Valid : 1;unsigned __int32 NC_One : 1;};
struct _NODE_ADDRESS {unsigned __int16 NA_Node_Number : 6;unsigned __int16 NA_Bus_Number : 10;};
struct _NODE_DEVICE_EXTENSION {ULONG Tag;BOOLEAN bConfigurationInformationValid;PCONFIG_ROM ConfigRom;ULONG UnitDirectoryLength;PVOID UnitDirectory;IO_ADDRESS UnitDirectoryLocation;ULONG UnitDependentDirectoryLength;PVOID UnitDependentDirectory;IO_ADDRESS UnitDependentDirectoryLocation;ULONG VendorLeafLength;PTEXTUAL_LEAF VendorLeaf;ULONG ModelLeafLength;PTEXTUAL_LEAF ModelLeaf;NODE_ADDRESS NodeAddress;UCHAR Speed;UCHAR Priority;PIRP Irp;PDEVICE_OBJECT DeviceObject;PDEVICE_OBJECT PortDeviceObject;PVOID DeviceInformation;PBUS_BUS_RESET_NOTIFICATION ResetRoutine;PVOID ResetContext;};
struct _NOTIFICATION_INFO {PMDL Mdl;ULONG ulOffset;ULONG nLength;ULONG fulNotificationOptions;PVOID Context;PADDRESS_FIFO Fifo;PVOID RequestPacket;PMDL ResponseMdl;PVOID *ResponsePacket;PULONG ResponseLength;PKEVENT *ResponseEvent;ULONG ResponseCode;};
struct _NPAGED_LOOKASIDE_LIST {GENERAL_LOOKASIDE L;KSPIN_LOCK Lock__ObsoleteButDoNotDelete;};
enum _NT_PRODUCT_TYPE {NtProductWinNt = 0x1,NtProductLanManNt = 0x2,NtProductServer = 0x3,};
struct _OBJECTID {GUID Lineage;ULONG Uniquifier;};
struct _OBJECT_ATTRIBUTES {ULONG Length;HANDLE RootDirectory;PUNICODE_STRING ObjectName;ULONG Attributes;PVOID SecurityDescriptor;PVOID SecurityQualityOfService;};
struct _OBJECT_ATTRIBUTES32 {ULONG Length;ULONG RootDirectory;ULONG ObjectName;ULONG Attributes;ULONG SecurityDescriptor;ULONG SecurityQualityOfService;};
struct _OBJECT_ATTRIBUTES64 {ULONG Length;ULONG64 RootDirectory;ULONG64 ObjectName;ULONG Attributes;ULONG64 SecurityDescriptor;ULONG64 SecurityQualityOfService;};
struct _OBJECT_HANDLE_INFORMATION {ULONG HandleAttributes;ACCESS_MASK GrantedAccess;};
struct _OBJECT_NAME_INFORMATION {UNICODE_STRING Name;};
struct _OPCR {unsigned __int32 Payload : 10;unsigned __int32 OverheadID : 4;unsigned __int32 DataRate : 2;unsigned __int32 Channel : 6;unsigned __int32 Reserved : 2;unsigned __int32 PPCCounter : 6;unsigned __int32 BCCCounter : 1;unsigned __int32 OnLine : 1;};
struct _OS_STRING {UCHAR bLength;UCHAR bDescriptorType;WCHAR MicrosoftString[7];UCHAR bVendorCode;UCHAR bPad;};
struct _OWNER_ENTRY {ERESOURCE_THREAD OwnerThread;union {LONG OwnerCount;ULONG TableSize;};};
union _OWNER_ENTRY::$57E192EC8BEEC282F0F946374745D7F7 {LONG OwnerCount;ULONG TableSize;};
struct _PACKET_PARAMETERS {UCHAR DeviceAddress;UCHAR EndpointAddress;USHORT MaximumPacketSize;ULONG Timeout;ULONG Flags;ULONG DataLength;USHORT HubDeviceAddress;USHORT PortTTNumber;UCHAR ErrorCount;UCHAR Pad[3];USBD_STATUS UsbdStatusCode;UCHAR Data[4];};
struct _PAGED_LOOKASIDE_LIST {GENERAL_LOOKASIDE L;FAST_MUTEX Lock__ObsoleteButDoNotDelete;};
struct _PARALLEL_WMI_LOG_INFO {ULONG Flags1;ULONG Flags2;ULONG spare[2];LONGLONG SppWriteCount;LONGLONG NibbleReadCount;LONGLONG BoundedEcpWriteCount;LONGLONG BoundedEcpReadCount;LONGLONG HwEcpWriteCount;LONGLONG HwEcpReadCount;LONGLONG SwEcpWriteCount;LONGLONG SwEcpReadCount;LONGLONG HwEppWriteCount;LONGLONG HwEppReadCount;LONGLONG SwEppWriteCount;LONGLONG SwEppReadCount;LONGLONG ByteReadCount;LONGLONG ChannelNibbleReadCount;};
struct _PARPORT_WMI_ALLOC_FREE_COUNTS {ULONG PortAllocates;ULONG PortFrees;};
struct _PCEVENT_REQUEST {PUNKNOWN MajorTarget;PUNKNOWN MinorTarget;ULONG Node;const PCEVENT_ITEM *EventItem;PKSEVENT_ENTRY EventEntry;ULONG Verb;PIRP Irp;};
struct _PCI_AGP_APERTURE_PAGE_SIZE {unsigned __int16 PageSizeMask : 11;unsigned __int16 Rsvd1 : 1;unsigned __int16 PageSizeSelect : 4;};
struct _PCI_AGP_CAPABILITY {PCI_CAPABILITIES_HEADER Header;unsigned __int16 Minor : 4;unsigned __int16 Major : 4;unsigned __int16 Rsvd1 : 8;struct _PCI_AGP_CAPABILITY::_PCI_AGP_STATUS AGPStatus;struct _PCI_AGP_CAPABILITY::_PCI_AGP_COMMAND AGPCommand;};
struct _PCI_AGP_CAPABILITY::_PCI_AGP_COMMAND {unsigned __int32 Rate : 3;unsigned __int32 Rsvd1 : 1;unsigned __int32 FastWriteEnable : 1;unsigned __int32 FourGBEnable : 1;unsigned __int32 Rsvd2 : 1;unsigned __int32 Gart64 : 1;unsigned __int32 AGPEnable : 1;unsigned __int32 SBAEnable : 1;unsigned __int32 CalibrationCycle : 3;unsigned __int32 AsyncReqSize : 3;unsigned __int32 Rsvd3 : 8;unsigned __int32 RequestQueueDepth : 8;};
struct _PCI_AGP_CAPABILITY::_PCI_AGP_STATUS {unsigned __int32 Rate : 3;unsigned __int32 Agp3Mode : 1;unsigned __int32 FastWrite : 1;unsigned __int32 FourGB : 1;unsigned __int32 HostTransDisable : 1;unsigned __int32 Gart64 : 1;unsigned __int32 ITA_Coherent : 1;unsigned __int32 SideBandAddressing : 1;unsigned __int32 CalibrationCycle : 3;unsigned __int32 AsyncRequestSize : 3;unsigned __int32 Rsvd1 : 1;unsigned __int32 Isoch : 1;unsigned __int32 Rsvd2 : 6;unsigned __int32 RequestQueueDepthMaximum : 8;};
struct _PCI_AGP_CONTROL {unsigned __int32 Rsvd1 : 7;unsigned __int32 GTLB_Enable : 1;unsigned __int32 AP_Enable : 1;unsigned __int32 CAL_Disable : 1;unsigned __int32 Rsvd2 : 22;};
struct _PCI_AGP_ISOCH_COMMAND {unsigned __int16 Rsvd1 : 6;unsigned __int16 Isoch_Y : 2;unsigned __int16 Isoch_N : 8;};
struct _PCI_AGP_ISOCH_STATUS {unsigned __int32 ErrorCode : 2;unsigned __int32 Rsvd1 : 1;unsigned __int32 Isoch_L : 3;unsigned __int32 Isoch_Y : 2;unsigned __int32 Isoch_N : 8;unsigned __int32 Rsvd2 : 16;};
struct _PCI_CAPABILITIES_HEADER {UCHAR CapabilityID;UCHAR Next;};
struct _PCI_COMMON_CONFIG {USHORT VendorID;USHORT DeviceID;USHORT Command;USHORT Status;UCHAR RevisionID;UCHAR ProgIf;UCHAR SubClass;UCHAR BaseClass;UCHAR CacheLineSize;UCHAR LatencyTimer;UCHAR HeaderType;UCHAR BIST;union _PCI_COMMON_CONFIG::$5ED0BA451DE7585DB9551A8CA5B9C3B7 u;UCHAR DeviceSpecific[192];};
union _PCI_COMMON_CONFIG::$5ED0BA451DE7585DB9551A8CA5B9C3B7 {struct _PCI_COMMON_CONFIG::$5ED0BA451DE7585DB9551A8CA5B9C3B7::_PCI_HEADER_TYPE_0 type0;};
struct _PCI_COMMON_CONFIG::$5ED0BA451DE7585DB9551A8CA5B9C3B7::_PCI_HEADER_TYPE_0 {ULONG BaseAddresses[6];ULONG CIS;USHORT SubVendorID;USHORT SubSystemID;ULONG ROMBaseAddress;UCHAR CapabilitiesPtr;UCHAR Reserved1[3];ULONG Reserved2;UCHAR InterruptLine;UCHAR InterruptPin;UCHAR MinimumGrant;UCHAR MaximumLatency;};
struct _PCI_COMMON_CONFIG::$::_PCI_HEADER_TYPE_0 {ULONG BaseAddresses[6];ULONG CIS;USHORT SubVendorID;USHORT SubSystemID;ULONG ROMBaseAddress;UCHAR CapabilitiesPtr;UCHAR Reserved1[3];ULONG Reserved2;UCHAR InterruptLine;UCHAR InterruptPin;UCHAR MinimumGrant;UCHAR MaximumLatency;};
struct _PCI_DEVICE_PRESENCE_PARAMETERS {ULONG Size;ULONG Flags;USHORT VendorID;USHORT DeviceID;UCHAR RevisionID;USHORT SubVendorID;USHORT SubSystemID;UCHAR BaseClass;UCHAR SubClass;UCHAR ProgIf;};
struct _PCI_DEVICE_PRESENT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCI_IS_DEVICE_PRESENT IsDevicePresent;PPCI_IS_DEVICE_PRESENT_EX IsDevicePresentEx;};
struct _PCI_MSI_CAPABILITY {PCI_CAPABILITIES_HEADER Header;struct _PCI_MSI_CAPABILITY::_PCI_MSI_MESSAGE_CONTROL MessageControl;union _PCI_MSI_CAPABILITY::$FE70DE1489E9369DDFBDD9E0E8D9F890 MessageAddress;union _PCI_MSI_CAPABILITY::$3F539E4D15BE8D2D83B7A8D8787EDAEA Data;};
union _PCI_MSI_CAPABILITY::$3F539E4D15BE8D2D83B7A8D8787EDAEA {struct _PCI_MSI_CAPABILITY::$3F539E4D15BE8D2D83B7A8D8787EDAEA::_PCI_MSI_64BIT_DATA Bit64;struct _PCI_MSI_CAPABILITY::$3F539E4D15BE8D2D83B7A8D8787EDAEA::_PCI_MSI_32BIT_DATA Bit32;};
struct _PCI_MSI_CAPABILITY::$3F539E4D15BE8D2D83B7A8D8787EDAEA::_PCI_MSI_32BIT_DATA {USHORT MessageData;ULONG Unused;};
struct _PCI_MSI_CAPABILITY::$3F539E4D15BE8D2D83B7A8D8787EDAEA::_PCI_MSI_64BIT_DATA {ULONG MessageUpperAddress;USHORT MessageData;};
union _PCI_MSI_CAPABILITY::$FE70DE1489E9369DDFBDD9E0E8D9F890 {struct _PCI_MSI_CAPABILITY::$FE70DE1489E9369DDFBDD9E0E8D9F890::_PCI_MSI_MESSAGE_ADDRESS Register;ULONG_PTR Raw;};
struct _PCI_MSI_CAPABILITY::$FE70DE1489E9369DDFBDD9E0E8D9F890::_PCI_MSI_MESSAGE_ADDRESS {unsigned __int32 Reserved : 2;unsigned __int32 Address : 30;};
struct _PCI_MSI_CAPABILITY::_PCI_MSI_MESSAGE_CONTROL {unsigned __int16 MSIEnable : 1;unsigned __int16 MultipleMessageCapable : 3;unsigned __int16 MultipleMessageEnable : 3;unsigned __int16 CapableOf64Bits : 1;unsigned __int16 Reserved : 8;};
struct _PCI_PMC {unsigned __int8 Version : 3;unsigned __int8 PMEClock : 1;unsigned __int8 Rsvd1 : 1;unsigned __int8 DeviceSpecificInitialization : 1;unsigned __int8 Rsvd2 : 2;struct _PCI_PMC::_PM_SUPPORT Support;};
struct _PCI_PMC::_PM_SUPPORT {unsigned __int8 Rsvd2 : 1;unsigned __int8 D1 : 1;unsigned __int8 D2 : 1;unsigned __int8 PMED0 : 1;unsigned __int8 PMED1 : 1;unsigned __int8 PMED2 : 1;unsigned __int8 PMED3Hot : 1;unsigned __int8 PMED3Cold : 1;};
struct _PCI_PMCSR {unsigned __int16 PowerState : 2;unsigned __int16 Rsvd1 : 6;unsigned __int16 PMEEnable : 1;unsigned __int16 DataSelect : 4;unsigned __int16 DataScale : 2;unsigned __int16 PMEStatus : 1;};
struct _PCI_PMCSR_BSE {unsigned __int8 Rsvd1 : 6;unsigned __int8 D3HotSupportsStopClock : 1;unsigned __int8 BusPowerClockControlEnabled : 1;};
struct _PCI_PM_CAPABILITY {PCI_CAPABILITIES_HEADER Header;union _PCI_PM_CAPABILITY::$D88BA7F7712EFFD5A716339859759941 PMC;union _PCI_PM_CAPABILITY::$C45C7236308434D5F24B7026BFA487E6 PMCSR;union _PCI_PM_CAPABILITY::$0CFAED28D81EDD84E3F5FE60E5E74408 PMCSR_BSE;UCHAR Data;};
union _PCI_PM_CAPABILITY::$0CFAED28D81EDD84E3F5FE60E5E74408 {PCI_PMCSR_BSE BridgeSupport;UCHAR AsUCHAR;};
union _PCI_PM_CAPABILITY::$C45C7236308434D5F24B7026BFA487E6 {PCI_PMCSR ControlStatus;USHORT AsUSHORT;};
union _PCI_PM_CAPABILITY::$D88BA7F7712EFFD5A716339859759941 {PCI_PMC Capabilities;USHORT AsUSHORT;};
struct _PCI_SLOT_NUMBER {union _PCI_SLOT_NUMBER::$49AFFD3D7EC59F1BE207C4846B68BFFF u;};
union _PCI_SLOT_NUMBER::$49AFFD3D7EC59F1BE207C4846B68BFFF {struct _PCI_SLOT_NUMBER::$49AFFD3D7EC59F1BE207C4846B68BFFF::$A9FC48894F8D14019CAF4D8F08A526D6 bits;ULONG AsULONG;};
struct _PCI_SLOT_NUMBER::$49AFFD3D7EC59F1BE207C4846B68BFFF::$A9FC48894F8D14019CAF4D8F08A526D6 {unsigned __int32 DeviceNumber : 5;unsigned __int32 FunctionNumber : 3;unsigned __int32 Reserved : 24;};
struct _PCI_SLOT_NUMBER::$::$A9FC48894F8D14019CAF4D8F08A526D6 {unsigned __int32 DeviceNumber : 5;unsigned __int32 FunctionNumber : 3;unsigned __int32 Reserved : 24;};
struct _PCMETHOD_REQUEST {PUNKNOWN MajorTarget;PUNKNOWN MinorTarget;ULONG Node;const PCMETHOD_ITEM *MethodItem;ULONG Verb;};
struct _PCPROPERTY_REQUEST {PUNKNOWN MajorTarget;PUNKNOWN MinorTarget;ULONG Node;const PCPROPERTY_ITEM *PropertyItem;ULONG Verb;ULONG InstanceSize;PVOID Instance;ULONG ValueSize;PVOID Value;PIRP Irp;};
struct _PHY_CONFIGURATION_PACKET {unsigned __int32 PCP_Phys_ID : 6;unsigned __int32 PCP_Packet_ID : 2;unsigned __int32 PCP_Gap_Count : 6;unsigned __int32 PCP_Set_Gap_Count : 1;unsigned __int32 PCP_Force_Root : 1;unsigned __int32 PCP_Reserved1 : 8;unsigned __int32 PCP_Reserved2 : 8;ULONG PCP_Inverse;};
struct _PLUGPLAY_NOTIFICATION_HEADER {USHORT Version;USHORT Size;GUID Event;};
struct _PNP_BUS_INFORMATION {GUID BusTypeGuid;INTERFACE_TYPE LegacyBusType;ULONG BusNumber;};
struct _POINTER_PORT_WMI_STD_DATA {ULONG ConnectorType;ULONG DataQueueSize;ULONG ErrorCount;ULONG Buttons;ULONG HardwareType;};
struct _POINTL {LONG x;LONG y;};
enum _POOL_TYPE {NonPagedPool = 0x0,PagedPool = 0x1,NonPagedPoolMustSucceed = 0x2,DontUseThisType = 0x3,NonPagedPoolCacheAligned = 0x4,PagedPoolCacheAligned = 0x5,NonPagedPoolCacheAlignedMustS = 0x6,MaxPoolType = 0x7,};
struct _PORT_CONFIGURATION_INFORMATION {ULONG SizeOfThisPacket;PVOID HwDeviceExtension;PDEVICE_OBJECT ClassDeviceObject;PDEVICE_OBJECT PhysicalDeviceObject;ULONG SystemIoBusNumber;INTERFACE_TYPE AdapterInterfaceType;ULONG BusInterruptLevel;ULONG BusInterruptVector;KINTERRUPT_MODE InterruptMode;ULONG DmaChannel;ULONG NumberOfAccessRanges;PACCESS_RANGE AccessRanges;ULONG StreamDescriptorSize;PIRP Irp;PKINTERRUPT InterruptObject;PADAPTER_OBJECT DmaAdapterObject;PDEVICE_OBJECT RealPhysicalDeviceObject;ULONG Reserved[1];};
struct _POWER_SEQUENCE {ULONG SequenceD1;ULONG SequenceD2;ULONG SequenceD3;};
union _POWER_STATE {SYSTEM_POWER_STATE SystemState;DEVICE_POWER_STATE DeviceState;};
enum _POWER_STATE_TYPE {SystemPowerState = 0x0,DevicePowerState = 0x1,};
struct _PRIVILEGE_SET {ULONG PrivilegeCount;ULONG Control;LUID_AND_ATTRIBUTES Privilege[1];};
struct _QUAD {double DoNotUseThisField;};
struct _RAW_RESET_PORT_PARAMETERS {USHORT PortNumber;USHORT PortStatus;};
struct _RAW_ROOTPORT_FEATURE {USHORT PortNumber;USHORT PortFeature;USHORT PortStatus;};
struct _RAW_ROOTPORT_PARAMETERS {USHORT PortNumber;USHORT PortStatus;};
struct _READ_LOG_SECTORS_IN {UCHAR LogAddress;UCHAR SectorCount;};
struct _READ_LOG_SECTORS_OUT {ULONG Length;UCHAR LogSectors[1];};
struct _RECTL {LONG left;LONG top;LONG right;LONG bottom;};
struct _REDBOOK_WMI_PERF_DATA {LONGLONG TimeReadDelay;LONGLONG TimeReading;LONGLONG TimeStreamDelay;LONGLONG TimeStreaming;LONGLONG DataProcessed;ULONG StreamPausedCount;};
struct _REDBOOK_WMI_STD_DATA {ULONG NumberOfBuffers;ULONG SectorsPerRead;ULONG SectorsPerReadMask;ULONG MaximumSectorsPerRead;BOOLEAN PlayEnabled;BOOLEAN CDDASupported;BOOLEAN CDDAAccurate;BOOLEAN Reserved1;};
struct _REG_CREATE_KEY_INFORMATION {PUNICODE_STRING CompleteName;PVOID RootObject;};
struct _REG_DELETE_KEY_INFORMATION {PVOID Object;};
struct _REG_DELETE_VALUE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING ValueName;};
struct _REG_ENUMERATE_KEY_INFORMATION {PVOID Object;ULONG Index;KEY_INFORMATION_CLASS KeyInformationClass;PVOID KeyInformation;ULONG Length;PULONG ResultLength;};
struct _REG_ENUMERATE_VALUE_KEY_INFORMATION {PVOID Object;ULONG Index;KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass;PVOID KeyValueInformation;ULONG Length;PULONG ResultLength;};
struct _REG_KEY_HANDLE_CLOSE_INFORMATION {PVOID Object;};
enum _REG_NOTIFY_CLASS {RegNtDeleteKey = 0x0,RegNtPreDeleteKey = 0x0,RegNtSetValueKey = 0x1,RegNtPreSetValueKey = 0x1,RegNtDeleteValueKey = 0x2,RegNtPreDeleteValueKey = 0x2,RegNtSetInformationKey = 0x3,RegNtPreSetInformationKey = 0x3,RegNtRenameKey = 0x4,RegNtPreRenameKey = 0x4,RegNtEnumerateKey = 0x5,RegNtPreEnumerateKey = 0x5,RegNtEnumerateValueKey = 0x6,RegNtPreEnumerateValueKey = 0x6,RegNtQueryKey = 0x7,RegNtPreQueryKey = 0x7,RegNtQueryValueKey = 0x8,RegNtPreQueryValueKey = 0x8,RegNtQueryMultipleValueKey = 0x9,RegNtPreQueryMultipleValueKey = 0x9,RegNtPreCreateKey = 0xA,RegNtPostCreateKey = 0xB,RegNtPreOpenKey = 0xC,RegNtPostOpenKey = 0xD,RegNtKeyHandleClose = 0xE,RegNtPreKeyHandleClose = 0xE,RegNtPostDeleteKey = 0xF,RegNtPostSetValueKey = 0x10,RegNtPostDeleteValueKey = 0x11,RegNtPostSetInformationKey = 0x12,RegNtPostRenameKey = 0x13,RegNtPostEnumerateKey = 0x14,RegNtPostEnumerateValueKey = 0x15,RegNtPostQueryKey = 0x16,RegNtPostQueryValueKey = 0x17,RegNtPostQueryMultipleValueKey = 0x18,RegNtPostKeyHandleClose = 0x19,RegNtPreCreateKeyEx = 0x1A,RegNtPostCreateKeyEx = 0x1B,RegNtPreOpenKeyEx = 0x1C,RegNtPostOpenKeyEx = 0x1D,};
struct _REG_POST_CREATE_KEY_INFORMATION {PUNICODE_STRING CompleteName;PVOID Object;NTSTATUS Status;};
struct _REG_POST_OPERATION_INFORMATION {PVOID Object;NTSTATUS Status;};
struct _REG_PRE_CREATE_KEY_INFORMATION {PUNICODE_STRING CompleteName;};
struct _REG_QUERY_KEY_INFORMATION {PVOID Object;KEY_INFORMATION_CLASS KeyInformationClass;PVOID KeyInformation;ULONG Length;PULONG ResultLength;};
struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION {PVOID Object;PKEY_VALUE_ENTRY ValueEntries;ULONG EntryCount;PVOID ValueBuffer;PULONG BufferLength;PULONG RequiredBufferLength;};
struct _REG_QUERY_VALUE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING ValueName;KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass;PVOID KeyValueInformation;ULONG Length;PULONG ResultLength;};
struct _REG_RENAME_KEY_INFORMATION {PVOID Object;PUNICODE_STRING NewName;};
struct _REG_SET_INFORMATION_KEY_INFORMATION {PVOID Object;KEY_SET_INFORMATION_CLASS KeySetInformationClass;PVOID KeySetInformation;ULONG KeySetInformationLength;};
struct _REG_SET_VALUE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING ValueName;ULONG TitleIndex;ULONG Type;PVOID Data;ULONG DataSize;};
struct _RESOURCE_HASH_ENTRY {LIST_ENTRY ListEntry;PVOID Address;ULONG ContentionCount;ULONG Number;};
struct _RESOURCE_PERFORMANCE_DATA {ULONG ActiveResourceCount;ULONG TotalResourceCount;ULONG ExclusiveAcquire;ULONG SharedFirstLevel;ULONG SharedSecondLevel;ULONG StarveFirstLevel;ULONG StarveSecondLevel;ULONG WaitForExclusive;ULONG OwnerTableExpands;ULONG MaximumTableExpand;LIST_ENTRY HashTable[64];};
struct _ROOTHUB_PDO_EXTENSION {ULONG Signature;};
struct _RTL_BITMAP {ULONG SizeOfBitMap;PULONG Buffer;};
struct _RTL_BITMAP_RUN {ULONG StartingIndex;ULONG NumberOfBits;};
struct _RTL_QUERY_REGISTRY_TABLE {PRTL_QUERY_REGISTRY_ROUTINE QueryRoutine;ULONG Flags;PWSTR Name;PVOID EntryContext;ULONG DefaultType;PVOID DefaultData;ULONG DefaultLength;};
struct _RegisteredGuids {ULONG GuidType;ULONG LoggerId;ULONG EnableLevel;ULONG EnableFlags;BOOLEAN IsEnabled;};
struct _SCATTER_GATHER_ELEMENT {PHYSICAL_ADDRESS Address;ULONG Length;ULONG_PTR Reserved;};
struct _SCATTER_GATHER_LIST {ULONG NumberOfElements;ULONG_PTR Reserved;SCATTER_GATHER_ELEMENT Elements[];};
struct _SCSI_REQUEST_BLOCK;
enum _SECTION_INHERIT {ViewShare = 0x1,ViewUnmap = 0x2,};
struct _SECTION_OBJECT_POINTERS {PVOID DataSectionObject;PVOID SharedCacheMap;PVOID ImageSectionObject;};
enum _SECURITY_IMPERSONATION_LEVEL {SecurityAnonymous = 0x0,SecurityIdentification = 0x1,SecurityImpersonation = 0x2,SecurityDelegation = 0x3,};
enum _SECURITY_OPERATION_CODE {SetSecurityDescriptor = 0x0,QuerySecurityDescriptor = 0x1,DeleteSecurityDescriptor = 0x2,AssignSecurityDescriptor = 0x3,};
struct _SECURITY_QUALITY_OF_SERVICE {ULONG Length;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;BOOLEAN EffectiveOnly;};
struct _SECURITY_SUBJECT_CONTEXT {PACCESS_TOKEN ClientToken;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;PACCESS_TOKEN PrimaryToken;PVOID ProcessAuditId;};
struct _SELF_ID {unsigned __int32 SID_Phys_ID : 6;unsigned __int32 SID_Packet_ID : 2;unsigned __int32 SID_Gap_Count : 6;unsigned __int32 SID_Link_Active : 1;unsigned __int32 SID_Zero : 1;unsigned __int32 SID_Power_Class : 3;unsigned __int32 SID_Contender : 1;unsigned __int32 SID_Delay : 2;unsigned __int32 SID_Speed : 2;unsigned __int32 SID_More_Packets : 1;unsigned __int32 SID_Initiated_Rst : 1;unsigned __int32 SID_Port3 : 2;unsigned __int32 SID_Port2 : 2;unsigned __int32 SID_Port1 : 2;};
struct _SELF_ID_MORE {unsigned __int32 SID_Phys_ID : 6;unsigned __int32 SID_Packet_ID : 2;unsigned __int32 SID_PortA : 2;unsigned __int32 SID_Reserved2 : 2;unsigned __int32 SID_Sequence : 3;unsigned __int32 SID_One : 1;unsigned __int32 SID_PortE : 2;unsigned __int32 SID_PortD : 2;unsigned __int32 SID_PortC : 2;unsigned __int32 SID_PortB : 2;unsigned __int32 SID_More_Packets : 1;unsigned __int32 SID_Reserved3 : 1;unsigned __int32 SID_PortH : 2;unsigned __int32 SID_PortG : 2;unsigned __int32 SID_PortF : 2;};
struct _SERIAL_WMI_COMMPROP {USHORT wPacketLength;USHORT wPacketVersion;ULONG dwServiceMask;ULONG dwReserved1;ULONG dwMaxTxQueue;ULONG dwMaxRxQueue;ULONG dwMaxBaud;ULONG dwProvSubType;ULONG dwProvCapabilities;ULONG dwSettableParams;ULONG dwSettableBaud;USHORT wSettableData;USHORT wSettableStopParity;ULONG dwCurrentTxQueue;ULONG dwCurrentRxQueue;ULONG dwProvSpec1;ULONG dwProvSpec2;ULONG dwProvCharSize;UCHAR wcProvChar[1];};
struct _SERIAL_WMI_COMM_DATA {ULONG BaudRate;ULONG BitsPerByte;ULONG Parity;BOOLEAN ParityCheckEnable;ULONG StopBits;ULONG XoffCharacter;ULONG XoffXmitThreshold;ULONG XonCharacter;ULONG XonXmitThreshold;ULONG MaximumBaudRate;ULONG MaximumOutputBufferSize;ULONG MaximumInputBufferSize;BOOLEAN Support16BitMode;BOOLEAN SupportDTRDSR;BOOLEAN SupportIntervalTimeouts;BOOLEAN SupportParityCheck;BOOLEAN SupportRTSCTS;BOOLEAN SupportXonXoff;BOOLEAN SettableBaudRate;BOOLEAN SettableDataBits;BOOLEAN SettableFlowControl;BOOLEAN SettableParity;BOOLEAN SettableParityCheck;BOOLEAN SettableStopBits;BOOLEAN IsBusy;};
struct _SERIAL_WMI_HW_DATA {ULONG IrqNumber;ULONG IrqVector;ULONG IrqLevel;ULONGLONG IrqAffinityMask;ULONG InterruptType;ULONGLONG BaseIOAddress;};
struct _SERIAL_WMI_PERF_DATA {ULONG ReceivedCount;ULONG TransmittedCount;ULONG FrameErrorCount;ULONG SerialOverrunErrorCount;ULONG BufferOverrunErrorCount;ULONG ParityErrorCount;};
struct _SET_CMP_ADDRESS_TYPE {ULONG Type;};
struct _SET_FCP_NOTIFY {ULONG Flags;NODE_ADDRESS NodeAddress;};
struct _SET_LOCAL_HOST_PROPS1 {ULONG fulFlags;};
struct _SET_LOCAL_HOST_PROPS2 {ULONG GapCountLowerBound;};
struct _SET_LOCAL_HOST_PROPS3 {ULONG fulFlags;HANDLE hCromData;ULONG nLength;PMDL Mdl;};
struct _SET_LOCAL_HOST_PROPS4 {ULONG MaxAsyncPayloadRequested;ULONG MaxAsyncPayloadResult;};
struct _SET_UNIT_DIRECTORY {ULONG Flags;ULONG UnitSpecId;ULONG UnitSwVersion;HANDLE hCromEntry;};
struct _SET_UNIT_INFO {ULONG nLevel;PVOID Information;};
struct _SE_IMPERSONATION_STATE {PACCESS_TOKEN Token;BOOLEAN CopyOnOpen;BOOLEAN EffectiveOnly;SECURITY_IMPERSONATION_LEVEL Level;};
struct _SHARE_ACCESS {ULONG OpenCount;ULONG Readers;ULONG Writers;ULONG Deleters;ULONG SharedRead;ULONG SharedWrite;ULONG SharedDelete;};
struct _SINGLE_LIST_ENTRY {struct _SINGLE_LIST_ENTRY *Next;};
union _SLIST_HEADER {ULONGLONG Alignment;struct {SINGLE_LIST_ENTRY Next;USHORT Depth;USHORT Sequence;};};
struct _SLIST_HEADER::$BA2131F2EA14A0314AA9F8156BC7211D {SINGLE_LIST_ENTRY Next;USHORT Depth;USHORT Sequence;};
struct _SPEED_MAP {USHORT SPD_Length;USHORT SPD_CRC;ULONG SPD_Generation;UCHAR SPD_Speed_Code[4032];};
enum _SRB_COMMAND {SRB_READ_DATA = 0x0,SRB_WRITE_DATA = 0x1,SRB_GET_STREAM_STATE = 0x2,SRB_SET_STREAM_STATE = 0x3,SRB_SET_STREAM_PROPERTY = 0x4,SRB_GET_STREAM_PROPERTY = 0x5,SRB_OPEN_MASTER_CLOCK = 0x6,SRB_INDICATE_MASTER_CLOCK = 0x7,SRB_UNKNOWN_STREAM_COMMAND = 0x8,SRB_SET_STREAM_RATE = 0x9,SRB_PROPOSE_DATA_FORMAT = 0xA,SRB_CLOSE_MASTER_CLOCK = 0xB,SRB_PROPOSE_STREAM_RATE = 0xC,SRB_SET_DATA_FORMAT = 0xD,SRB_GET_DATA_FORMAT = 0xE,SRB_BEGIN_FLUSH = 0xF,SRB_END_FLUSH = 0x10,SRB_GET_STREAM_INFO = 0x100,SRB_OPEN_STREAM = 0x101,SRB_CLOSE_STREAM = 0x102,SRB_OPEN_DEVICE_INSTANCE = 0x103,SRB_CLOSE_DEVICE_INSTANCE = 0x104,SRB_GET_DEVICE_PROPERTY = 0x105,SRB_SET_DEVICE_PROPERTY = 0x106,SRB_INITIALIZE_DEVICE = 0x107,SRB_CHANGE_POWER_STATE = 0x108,SRB_UNINITIALIZE_DEVICE = 0x109,SRB_UNKNOWN_DEVICE_COMMAND = 0x10A,SRB_PAGING_OUT_DRIVER = 0x10B,SRB_GET_DATA_INTERSECTION = 0x10C,SRB_INITIALIZATION_COMPLETE = 0x10D,SRB_SURPRISE_REMOVAL = 0x10E,SRB_DEVICE_METHOD = 0x10F,SRB_STREAM_METHOD = 0x110,};
struct _STORAGE_FAILURE_PREDICT_DATA {ULONG Length;UCHAR VendorSpecific[512];};
struct _STORAGE_FAILURE_PREDICT_EVENT {ULONG Length;UCHAR VendorSpecific[1];};
struct _STORAGE_FAILURE_PREDICT_STATUS {ULONG Reason;BOOLEAN PredictFailure;};
struct _STORAGE_FAILURE_PREDICT_THRESHOLDS {UCHAR VendorSpecific[512];};
struct _STORAGE_SCSI_INFO_EXCEPTIONS {BOOLEAN PageSavable;UCHAR Flags;UCHAR MRIE;UCHAR Padding;ULONG IntervalTimer;ULONG ReportCount;};
struct _STREAM_DATA_INTERSECT_INFO {ULONG StreamNumber;PKSDATARANGE DataRange;PVOID DataFormatBuffer;ULONG SizeOfDataFormatBuffer;};
struct _STREAM_METHOD_DESCRIPTOR {ULONG MethodSetID;PKSMETHOD Method;PVOID MethodInfo;LONG MethodInputSize;LONG MethodOutputSize;};
enum _STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE {ReadyForNextDeviceRequest = 0x0,DeviceRequestComplete = 0x1,SignalMultipleDeviceEvents = 0x2,SignalDeviceEvent = 0x3,DeleteDeviceEvent = 0x4,SignalMultipleDeviceInstanceEvents = 0x5,DeviceNotificationMaximum = 0x6,};
enum _STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE {ReadyForNextStreamDataRequest = 0x0,ReadyForNextStreamControlRequest = 0x1,HardwareStarved = 0x2,StreamRequestComplete = 0x3,SignalMultipleStreamEvents = 0x4,SignalStreamEvent = 0x5,DeleteStreamEvent = 0x6,StreamNotificationMaximum = 0x7,};
enum _STREAM_PRIORITY {High = 0x0,Dispatch = 0x1,Low = 0x2,LowToHigh = 0x3,};
struct _STREAM_PROPERTY_DESCRIPTOR {PKSPROPERTY Property;ULONG PropertySetID;PVOID PropertyInfo;ULONG PropertyInputSize;ULONG PropertyOutputSize;};
struct _STREAM_TIME_REFERENCE {STREAM_TIMESTAMP CurrentOnboardClockValue;LARGE_INTEGER OnboardClockFrequency;LARGE_INTEGER CurrentSystemTime;ULONG Reserved[2];};
struct _STRING {USHORT Length;USHORT MaximumLength;PCHAR Buffer;};
struct _STRING32 {USHORT Length;USHORT MaximumLength;ULONG Buffer;};
struct _STRING64 {USHORT Length;USHORT MaximumLength;ULONGLONG Buffer;};
union _SUBSYTEM_ATTRIBUTES {ULONG ul;struct {unsigned __int32 BayCount : 4;unsigned __int32 HasSecurityLock : 1;unsigned __int32 Reserved : 27;};};
struct _SUBSYTEM_ATTRIBUTES::$200CB89C70FDB3B8A476660875D9DB77 {unsigned __int32 BayCount : 4;unsigned __int32 HasSecurityLock : 1;unsigned __int32 Reserved : 27;};
enum _SUITE_TYPE {SmallBusiness = 0x0,Enterprise = 0x1,BackOffice = 0x2,CommunicationServer = 0x3,TerminalServer = 0x4,SmallBusinessRestricted = 0x5,EmbeddedNT = 0x6,DataCenter = 0x7,SingleUserTS = 0x8,Personal = 0x9,Blade = 0xA,EmbeddedRestricted = 0xB,SecurityAppliance = 0xC,MaxSuiteType = 0xD,};
struct _SYSID_1394 {UCHAR x1394[8];};
struct _SYSID_UUID {UCHAR Uuid[16];};
enum _SYSTEM_POWER_STATE {PowerSystemUnspecified = 0x0,PowerSystemWorking = 0x1,PowerSystemSleeping1 = 0x2,PowerSystemSleeping2 = 0x3,PowerSystemSleeping3 = 0x4,PowerSystemHibernate = 0x5,PowerSystemShutdown = 0x6,PowerSystemMaximum = 0x7,};
struct _TARGET_DEVICE_CUSTOM_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;PFILE_OBJECT FileObject;LONG NameBufferOffset;UCHAR CustomDataBuffer[1];};
struct _TARGET_DEVICE_REMOVAL_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;PFILE_OBJECT FileObject;};
struct _TEXTUAL_LEAF {USHORT TL_CRC;USHORT TL_Length;ULONG TL_Spec_Id;ULONG TL_Language_Id;UCHAR TL_Data;};
enum _TIMER_TYPE {NotificationTimer = 0x0,SynchronizationTimer = 0x1,};
struct _TIME_FIELDS {CSHORT Year;CSHORT Month;CSHORT Day;CSHORT Hour;CSHORT Minute;CSHORT Second;CSHORT Milliseconds;CSHORT Weekday;};
struct _TOPOLOGY_MAP {USHORT TOP_Length;USHORT TOP_CRC;ULONG TOP_Generation;USHORT TOP_Node_Count;USHORT TOP_Self_ID_Count;SELF_ID TOP_Self_ID_Array[1];};
enum _TRACE_INFORMATION_CLASS {TraceIdClass = 0x0,TraceHandleClass = 0x1,TraceEnableFlagsClass = 0x2,TraceEnableLevelClass = 0x3,GlobalLoggerHandleClass = 0x4,EventLoggerHandleClass = 0x5,AllLoggerHandlesClass = 0x6,TraceHandleByNameClass = 0x7,};
union _ULARGE_INTEGER {struct {ULONG LowPart;ULONG HighPart;};struct _ULARGE_INTEGER::$A11EDDC93F80F43D83612CEB0708CAE5 u;ULONGLONG QuadPart;};
struct _ULARGE_INTEGER::$A11EDDC93F80F43D83612CEB0708CAE5 {ULONG LowPart;ULONG HighPart;};
struct _UNICODE_STRING {USHORT Length;USHORT MaximumLength;PWSTR Buffer;};
struct _UNIT_DDI_VERSION {ULONG Version;};
struct _UNIT_DIAG_LEVEL {ULONG DiagLevel;};
struct _UNIT_ISOCH_PARAMS {ULONG RX_NumPackets;ULONG RX_NumDescriptors;ULONG TX_NumPackets;ULONG TX_NumDescriptors;};
struct _URB {union {struct _URB_HEADER UrbHeader;struct _URB_SELECT_INTERFACE UrbSelectInterface;struct _URB_SELECT_CONFIGURATION UrbSelectConfiguration;struct _URB_PIPE_REQUEST UrbPipeRequest;struct _URB_FRAME_LENGTH_CONTROL UrbFrameLengthControl;struct _URB_GET_FRAME_LENGTH UrbGetFrameLength;struct _URB_SET_FRAME_LENGTH UrbSetFrameLength;struct _URB_GET_CURRENT_FRAME_NUMBER UrbGetCurrentFrameNumber;struct _URB_CONTROL_TRANSFER UrbControlTransfer;struct _URB_BULK_OR_INTERRUPT_TRANSFER UrbBulkOrInterruptTransfer;struct _URB_ISOCH_TRANSFER UrbIsochronousTransfer;struct _URB_CONTROL_DESCRIPTOR_REQUEST UrbControlDescriptorRequest;struct _URB_CONTROL_GET_STATUS_REQUEST UrbControlGetStatusRequest;struct _URB_CONTROL_FEATURE_REQUEST UrbControlFeatureRequest;struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST UrbControlVendorClassRequest;struct _URB_CONTROL_GET_INTERFACE_REQUEST UrbControlGetInterfaceRequest;struct _URB_CONTROL_GET_CONFIGURATION_REQUEST UrbControlGetConfigurationRequest;struct _URB_OS_FEATURE_DESCRIPTOR_REQUEST UrbOSFeatureDescriptorRequest;};};
union _URB::$7A63028ECF2555176D97F57361F7A6AB {struct _URB_HEADER UrbHeader;struct _URB_SELECT_INTERFACE UrbSelectInterface;struct _URB_SELECT_CONFIGURATION UrbSelectConfiguration;struct _URB_PIPE_REQUEST UrbPipeRequest;struct _URB_FRAME_LENGTH_CONTROL UrbFrameLengthControl;struct _URB_GET_FRAME_LENGTH UrbGetFrameLength;struct _URB_SET_FRAME_LENGTH UrbSetFrameLength;struct _URB_GET_CURRENT_FRAME_NUMBER UrbGetCurrentFrameNumber;struct _URB_CONTROL_TRANSFER UrbControlTransfer;struct _URB_BULK_OR_INTERRUPT_TRANSFER UrbBulkOrInterruptTransfer;struct _URB_ISOCH_TRANSFER UrbIsochronousTransfer;struct _URB_CONTROL_DESCRIPTOR_REQUEST UrbControlDescriptorRequest;struct _URB_CONTROL_GET_STATUS_REQUEST UrbControlGetStatusRequest;struct _URB_CONTROL_FEATURE_REQUEST UrbControlFeatureRequest;struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST UrbControlVendorClassRequest;struct _URB_CONTROL_GET_INTERFACE_REQUEST UrbControlGetInterfaceRequest;struct _URB_CONTROL_GET_CONFIGURATION_REQUEST UrbControlGetConfigurationRequest;struct _URB_OS_FEATURE_DESCRIPTOR_REQUEST UrbOSFeatureDescriptorRequest;};
struct _URB_BULK_OR_INTERRUPT_TRANSFER {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;};
struct _URB_CONTROL_DESCRIPTOR_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;USHORT Reserved1;UCHAR Index;UCHAR DescriptorType;USHORT LanguageId;USHORT Reserved2;};
struct _URB_CONTROL_FEATURE_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved2;ULONG Reserved3;PVOID Reserved4;PMDL Reserved5;struct _URB *UrbLink;struct _URB_HCD_AREA hca;USHORT Reserved0;USHORT FeatureSelector;USHORT Index;USHORT Reserved1;};
struct _URB_CONTROL_GET_CONFIGURATION_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR Reserved1[8];};
struct _URB_CONTROL_GET_INTERFACE_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR Reserved1[4];USHORT Interface;USHORT Reserved2;};
struct _URB_CONTROL_GET_STATUS_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR Reserved1[4];USHORT Index;USHORT Reserved2;};
struct _URB_CONTROL_TRANSFER {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR SetupPacket[8];};
struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR RequestTypeReservedBits;UCHAR Request;USHORT Value;USHORT Index;USHORT Reserved1;};
struct _URB_FRAME_LENGTH_CONTROL {struct _URB_HEADER Hdr;};
struct _URB_GET_CURRENT_FRAME_NUMBER {struct _URB_HEADER Hdr;ULONG FrameNumber;};
struct _URB_GET_FRAME_LENGTH {struct _URB_HEADER Hdr;ULONG FrameLength;ULONG FrameNumber;};
struct _URB_HCD_AREA {PVOID Reserved8[8];};
struct _URB_HEADER {USHORT Length;USHORT Function;USBD_STATUS Status;PVOID UsbdDeviceHandle;ULONG UsbdFlags;};
struct _URB_ISOCH_TRANSFER {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;ULONG StartFrame;ULONG NumberOfPackets;ULONG ErrorCount;USBD_ISO_PACKET_DESCRIPTOR IsoPacket[1];};
struct _URB_OS_FEATURE_DESCRIPTOR_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;unsigned __int8 Recipient : 5;unsigned __int8 Reserved1 : 3;UCHAR Reserved2;UCHAR InterfaceNumber;UCHAR MS_PageIndex;USHORT MS_FeatureDescriptorIndex;USHORT Reserved3;};
struct _URB_PIPE_REQUEST {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG Reserved;};
struct _URB_SELECT_CONFIGURATION {struct _URB_HEADER Hdr;PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor;USBD_CONFIGURATION_HANDLE ConfigurationHandle;USBD_INTERFACE_INFORMATION Interface;};
struct _URB_SELECT_INTERFACE {struct _URB_HEADER Hdr;USBD_CONFIGURATION_HANDLE ConfigurationHandle;USBD_INTERFACE_INFORMATION Interface;};
struct _URB_SET_FRAME_LENGTH {struct _URB_HEADER Hdr;LONG FrameLengthDelta;};
struct _USAGE_AND_PAGE {USAGE Usage;USAGE UsagePage;};
struct _USBCAMD_DEVICE_DATA {ULONG Sig;PCAM_INITIALIZE_ROUTINE CamInitialize;PCAM_INITIALIZE_ROUTINE CamUnInitialize;PCAM_PROCESS_PACKET_ROUTINE CamProcessUSBPacket;PCAM_NEW_FRAME_ROUTINE CamNewVideoFrame;PCAM_PROCESS_RAW_FRAME_ROUTINE CamProcessRawVideoFrame;PCAM_START_CAPTURE_ROUTINE CamStartCapture;PCAM_STOP_CAPTURE_ROUTINE CamStopCapture;PCAM_CONFIGURE_ROUTINE CamConfigure;PCAM_STATE_ROUTINE CamSaveState;PCAM_STATE_ROUTINE CamRestoreState;PCAM_ALLOCATE_BW_ROUTINE CamAllocateBandwidth;PCAM_FREE_BW_ROUTINE CamFreeBandwidth;};
struct _USBCAMD_DEVICE_DATA2 {ULONG Sig;PCAM_INITIALIZE_ROUTINE CamInitialize;PCAM_INITIALIZE_ROUTINE CamUnInitialize;PCAM_PROCESS_PACKET_ROUTINE_EX CamProcessUSBPacketEx;PCAM_NEW_FRAME_ROUTINE_EX CamNewVideoFrameEx;PCAM_PROCESS_RAW_FRAME_ROUTINE_EX CamProcessRawVideoFrameEx;PCAM_START_CAPTURE_ROUTINE_EX CamStartCaptureEx;PCAM_STOP_CAPTURE_ROUTINE_EX CamStopCaptureEx;PCAM_CONFIGURE_ROUTINE_EX CamConfigureEx;PCAM_STATE_ROUTINE CamSaveState;PCAM_STATE_ROUTINE CamRestoreState;PCAM_ALLOCATE_BW_ROUTINE_EX CamAllocateBandwidthEx;PCAM_FREE_BW_ROUTINE_EX CamFreeBandwidthEx;};
struct _USBD_DEVICE_INFORMATION {ULONG OffsetNext;PVOID UsbdDeviceHandle;USB_DEVICE_DESCRIPTOR DeviceDescriptor;};
struct _USBD_INTERFACE_INFORMATION {USHORT Length;UCHAR InterfaceNumber;UCHAR AlternateSetting;UCHAR Class;UCHAR SubClass;UCHAR Protocol;UCHAR Reserved;USBD_INTERFACE_HANDLE InterfaceHandle;ULONG NumberOfPipes;USBD_PIPE_INFORMATION Pipes[1];};
struct _USBD_INTERFACE_LIST_ENTRY {PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor;PUSBD_INTERFACE_INFORMATION Interface;};
struct _USBD_ISO_PACKET_DESCRIPTOR {ULONG Offset;ULONG Length;USBD_STATUS Status;};
struct _USBD_PIPE_INFORMATION {USHORT MaximumPacketSize;UCHAR EndpointAddress;UCHAR Interval;USBD_PIPE_TYPE PipeType;USBD_PIPE_HANDLE PipeHandle;ULONG MaximumTransferSize;ULONG PipeFlags;};
enum _USBD_PIPE_TYPE {UsbdPipeTypeControl = 0x0,UsbdPipeTypeIsochronous = 0x1,UsbdPipeTypeBulk = 0x2,UsbdPipeTypeInterrupt = 0x3,};
struct _USBD_VERSION_INFORMATION {ULONG USBDI_Version;ULONG Supported_USB_Version;};
struct _USBUSER_BANDWIDTH_INFO_REQUEST {USBUSER_REQUEST_HEADER Header;USB_BANDWIDTH_INFO BandwidthInformation;};
struct _USBUSER_BUS_STATISTICS_0_REQUEST {USBUSER_REQUEST_HEADER Header;USB_BUS_STATISTICS_0 BusStatistics0;};
struct _USBUSER_CLOSE_RAW_DEVICE {USBUSER_REQUEST_HEADER Header;USB_CLOSE_RAW_DEVICE_PARAMETERS Parameters;};
struct _USBUSER_CONTROLLER_INFO_0 {USBUSER_REQUEST_HEADER Header;USB_CONTROLLER_INFO_0 Info0;};
struct _USBUSER_CONTROLLER_UNICODE_NAME {USBUSER_REQUEST_HEADER Header;USB_UNICODE_NAME UnicodeName;};
struct _USBUSER_GET_DRIVER_VERSION {USBUSER_REQUEST_HEADER Header;USB_DRIVER_VERSION_PARAMETERS Parameters;};
struct _USBUSER_GET_USB2HW_VERSION {USBUSER_REQUEST_HEADER Header;USB_USB2HW_VERSION_PARAMETERS Parameters;};
struct _USBUSER_OPEN_RAW_DEVICE {USBUSER_REQUEST_HEADER Header;USB_OPEN_RAW_DEVICE_PARAMETERS Parameters;};
struct _USBUSER_PASS_THRU_REQUEST {USBUSER_REQUEST_HEADER Header;USB_PASS_THRU_PARAMETERS PassThru;};
struct _USBUSER_POWER_INFO_REQUEST {USBUSER_REQUEST_HEADER Header;USB_POWER_INFO PowerInformation;};
struct _USBUSER_RAW_RESET_ROOT_PORT {USBUSER_REQUEST_HEADER Header;RAW_RESET_PORT_PARAMETERS Parameters;};
struct _USBUSER_REQUEST_HEADER {ULONG UsbUserRequest;USB_USER_ERROR_CODE UsbUserStatusCode;ULONG RequestBufferLength;ULONG ActualBufferLength;};
struct _USBUSER_ROOTPORT_FEATURE_REQUEST {USBUSER_REQUEST_HEADER Header;RAW_ROOTPORT_FEATURE Parameters;};
struct _USBUSER_ROOTPORT_PARAMETERS {USBUSER_REQUEST_HEADER Header;RAW_ROOTPORT_PARAMETERS Parameters;};
struct _USBUSER_SEND_ONE_PACKET {USBUSER_REQUEST_HEADER Header;PACKET_PARAMETERS PacketParameters;};
struct _USBUSER_SEND_RAW_COMMAND {USBUSER_REQUEST_HEADER Header;USB_SEND_RAW_COMMAND_PARAMETERS Parameters;};
struct _USB_ACQUIRE_INFO {USB_NOTIFICATION_TYPE NotificationType;ULONG TotalSize;WCHAR Buffer[1];};
struct _USB_BANDWIDTH_INFO {ULONG DeviceCount;ULONG TotalBusBandwidth;ULONG Total32secBandwidth;ULONG AllocedBulkAndControl;ULONG AllocedIso;ULONG AllocedInterrupt_1ms;ULONG AllocedInterrupt_2ms;ULONG AllocedInterrupt_4ms;ULONG AllocedInterrupt_8ms;ULONG AllocedInterrupt_16ms;ULONG AllocedInterrupt_32ms;};
struct _USB_BUS_INFORMATION_LEVEL_0 {ULONG TotalBandwidth;ULONG ConsumedBandwidth;};
struct _USB_BUS_INFORMATION_LEVEL_1 {ULONG TotalBandwidth;ULONG ConsumedBandwidth;ULONG ControllerNameLength;WCHAR ControllerNameUnicodeString[1];};
struct _USB_BUS_INTERFACE_HUB_V0 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;};
struct _USB_BUS_INTERFACE_HUB_V1 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;};
struct _USB_BUS_INTERFACE_HUB_V2 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;};
struct _USB_BUS_INTERFACE_HUB_V3 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;};
struct _USB_BUS_INTERFACE_HUB_V4 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;};
struct _USB_BUS_INTERFACE_HUB_V5 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;PUSB_BUSIFFN_SET_DEVHANDLE_DATA SetDeviceHandleData;};
struct _USB_BUS_INTERFACE_USBDI_V0 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;};
struct _USB_BUS_INTERFACE_USBDI_V1 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED IsDeviceHighSpeed;};
struct _USB_BUS_INTERFACE_USBDI_V2 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED IsDeviceHighSpeed;PUSB_BUSIFFN_ENUM_LOG_ENTRY EnumLogEntry;};
struct _USB_BUS_NOTIFICATION {USB_NOTIFICATION_TYPE NotificationType;ULONG TotalBandwidth;ULONG ConsumedBandwidth;ULONG ControllerNameLength;};
struct _USB_BUS_STATISTICS_0 {ULONG DeviceCount;LARGE_INTEGER CurrentSystemTime;ULONG CurrentUsbFrame;ULONG BulkBytes;ULONG IsoBytes;ULONG InterruptBytes;ULONG ControlDataBytes;ULONG PciInterruptCount;ULONG HardResetCount;ULONG WorkerSignalCount;ULONG CommonBufferBytes;ULONG WorkerIdleTimeMs;BOOLEAN RootHubEnabled;UCHAR RootHubDevicePowerState;UCHAR Unused;UCHAR NameIndex;};
struct _USB_CLOSE_RAW_DEVICE_PARAMETERS {ULONG xxx;};
struct _USB_COMMON_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;};
struct _USB_CONFIGURATION_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT wTotalLength;UCHAR bNumInterfaces;UCHAR bConfigurationValue;UCHAR iConfiguration;UCHAR bmAttributes;UCHAR MaxPower;};
struct _USB_CONFIGURATION_POWER_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR SelfPowerConsumedD0[3];UCHAR bPowerSummaryId;UCHAR bBusPowerSavingD1;UCHAR bSelfPowerSavingD1;UCHAR bBusPowerSavingD2;UCHAR bSelfPowerSavingD2;UCHAR bBusPowerSavingD3;UCHAR bSelfPowerSavingD3;USHORT TransitionTimeFromD1;USHORT TransitionTimeFromD2;USHORT TransitionTimeFromD3;};
struct _USB_CONNECTION_NOTIFICATION {USB_NOTIFICATION_TYPE NotificationType;ULONG ConnectionNumber;ULONG RequestedBandwidth;ULONG EnumerationFailReason;ULONG PowerRequested;ULONG HubNameLength;};
enum _USB_CONNECTION_STATUS {NoDeviceConnected = 0x0,DeviceConnected = 0x1,DeviceFailedEnumeration = 0x2,DeviceGeneralFailure = 0x3,DeviceCausedOvercurrent = 0x4,DeviceNotEnoughPower = 0x5,DeviceNotEnoughBandwidth = 0x6,DeviceHubNestedTooDeeply = 0x7,DeviceInLegacyHub = 0x8,};
enum _USB_CONTROLLER_FLAVOR {USB_HcGeneric = 0x0,OHCI_Generic = 0x64,OHCI_Hydra = 0x65,OHCI_NEC = 0x66,UHCI_Generic = 0xC8,UHCI_Piix4 = 0xC9,UHCI_Piix3 = 0xCA,UHCI_Ich2_1 = 0xCB,UHCI_Ich2_2 = 0xCC,UHCI_Ich1 = 0xCD,UHCI_VIA = 0xFA,EHCI_Generic = 0x3E8,EHCI_NEC = 0x7D0,EHCI_Lucent = 0xBB8,};
struct _USB_CONTROLLER_INFORMATION_0 {ULONG InformationLevel;ULONG ActualLength;BOOLEAN SelectiveSuspendEnabled;BOOLEAN IsHighSpeedController;};
struct _USB_CONTROLLER_INFO_0 {ULONG PciVendorId;ULONG PciDeviceId;ULONG PciRevision;ULONG NumberOfRootPorts;USB_CONTROLLER_FLAVOR ControllerFlavor;ULONG HcFeatureFlags;};
struct _USB_DEFAULT_PIPE_SETUP_PACKET {BM_REQUEST_TYPE bmRequestType;UCHAR bRequest;union _USB_DEFAULT_PIPE_SETUP_PACKET::_wValue wValue;union _USB_DEFAULT_PIPE_SETUP_PACKET::_wIndex wIndex;USHORT wLength;};
union _USB_DEFAULT_PIPE_SETUP_PACKET::_wIndex {struct {UCHAR LowByte;UCHAR HiByte;};USHORT W;};
struct _USB_DEFAULT_PIPE_SETUP_PACKET::_wIndex::$C5207073352B9080466BBA41ADF73D00 {UCHAR LowByte;UCHAR HiByte;};
union _USB_DEFAULT_PIPE_SETUP_PACKET::_wValue {struct {UCHAR LowByte;UCHAR HiByte;};USHORT W;};
struct _USB_DEFAULT_PIPE_SETUP_PACKET::_wValue::$C5207073352B9080466BBA41ADF73D00 {UCHAR LowByte;UCHAR HiByte;};
struct _USB_DESCRIPTOR_REQUEST {ULONG ConnectionIndex;struct _USB_DESCRIPTOR_REQUEST::$096697E6C0870D9A8512E4DDC79C9B46 SetupPacket;UCHAR Data[];};
struct _USB_DESCRIPTOR_REQUEST::$096697E6C0870D9A8512E4DDC79C9B46 {UCHAR bmRequest;UCHAR bRequest;USHORT wValue;USHORT wIndex;USHORT wLength;};
struct _USB_DEVICE_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT bcdUSB;UCHAR bDeviceClass;UCHAR bDeviceSubClass;UCHAR bDeviceProtocol;UCHAR bMaxPacketSize0;USHORT idVendor;USHORT idProduct;USHORT bcdDevice;UCHAR iManufacturer;UCHAR iProduct;UCHAR iSerialNumber;UCHAR bNumConfigurations;};
struct _USB_DEVICE_INFORMATION_0 {ULONG InformationLevel;ULONG ActualLength;ULONG PortNumber;USB_DEVICE_DESCRIPTOR DeviceDescriptor;UCHAR DD_pad[2];UCHAR CurrentConfigurationValue;UCHAR ReservedMBZ;USHORT DeviceAddress;ULONG HubAddress;USB_DEVICE_SPEED DeviceSpeed;USB_DEVICE_TYPE DeviceType;ULONG NumberOfOpenPipes;USB_PIPE_INFORMATION_0 PipeList[1];};
struct _USB_DEVICE_QUALIFIER_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT bcdUSB;UCHAR bDeviceClass;UCHAR bDeviceSubClass;UCHAR bDeviceProtocol;UCHAR bMaxPacketSize0;UCHAR bNumConfigurations;UCHAR bReserved;};
enum _USB_DEVICE_SPEED {UsbLowSpeed = 0x0,UsbFullSpeed = 0x1,UsbHighSpeed = 0x2,};
enum _USB_DEVICE_TYPE {Usb11Device = 0x0,Usb20Device = 0x1,};
struct _USB_DRIVER_VERSION_PARAMETERS {ULONG DriverTrackingCode;ULONG USBDI_Version;ULONG USBUSER_Version;BOOLEAN CheckedPortDriver;BOOLEAN CheckedMiniportDriver;USHORT USB_Version;};
struct _USB_ENDPOINT_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bEndpointAddress;UCHAR bmAttributes;USHORT wMaxPacketSize;UCHAR bInterval;};
struct _USB_EXTHUB_INFORMATION_0 {ULONG InformationLevel;ULONG NumberOfPorts;USB_EXTPORT_INFORMATION_0 Port[255];};
struct _USB_EXTPORT_INFORMATION_0 {ULONG PhysicalPortNumber;ULONG PortLabelNumber;USHORT VidOverride;USHORT PidOverride;ULONG PortAttributes;};
struct _USB_HCD_DRIVERKEY_NAME {ULONG ActualLength;WCHAR DriverKeyName[1];};
union _USB_HIGH_SPEED_MAXPACKET {USHORT us;};
struct _USB_HIGH_SPEED_MAXPACKET::_MP {unsigned __int16 MaxPacket : 11;unsigned __int16 HSmux : 2;unsigned __int16 Reserved : 3;};
struct _USB_HUB_CAPABILITIES {unsigned __int32 HubIs2xCapable : 1;};
struct _USB_HUB_DESCRIPTOR {UCHAR bDescriptorLength;UCHAR bDescriptorType;UCHAR bNumberOfPorts;USHORT wHubCharacteristics;UCHAR bPowerOnToPowerGood;UCHAR bHubControlCurrent;UCHAR bRemoveAndPowerMask[64];};
struct _USB_HUB_INFORMATION {USB_HUB_DESCRIPTOR HubDescriptor;BOOLEAN HubIsBusPowered;};
struct _USB_HUB_NAME {ULONG ActualLength;WCHAR HubName[1];};
enum _USB_HUB_NODE {UsbHub = 0x0,UsbMIParent = 0x1,};
struct _USB_IDLE_CALLBACK_INFO {USB_IDLE_CALLBACK IdleCallback;PVOID IdleContext;};
struct _USB_INTERFACE_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bInterfaceNumber;UCHAR bAlternateSetting;UCHAR bNumEndpoints;UCHAR bInterfaceClass;UCHAR bInterfaceSubClass;UCHAR bInterfaceProtocol;UCHAR iInterface;};
struct _USB_INTERFACE_POWER_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bmCapabilitiesFlags;UCHAR bBusPowerSavingD1;UCHAR bSelfPowerSavingD1;UCHAR bBusPowerSavingD2;UCHAR bSelfPowerSavingD2;UCHAR bBusPowerSavingD3;UCHAR bSelfPowerSavingD3;USHORT TransitionTimeFromD1;USHORT TransitionTimeFromD2;USHORT TransitionTimeFromD3;};
struct _USB_LEVEL_INFORMATION {ULONG InformationLevel;ULONG ActualLength;};
struct _USB_MI_PARENT_INFORMATION {ULONG NumberOfInterfaces;};
struct _USB_NODE_CONNECTION_ATTRIBUTES {ULONG ConnectionIndex;USB_CONNECTION_STATUS ConnectionStatus;ULONG PortAttributes;};
struct _USB_NODE_CONNECTION_DRIVERKEY_NAME {ULONG ConnectionIndex;ULONG ActualLength;WCHAR DriverKeyName[1];};
struct _USB_NODE_CONNECTION_INFORMATION {ULONG ConnectionIndex;USB_DEVICE_DESCRIPTOR DeviceDescriptor;UCHAR CurrentConfigurationValue;BOOLEAN LowSpeed;BOOLEAN DeviceIsHub;USHORT DeviceAddress;ULONG NumberOfOpenPipes;USB_CONNECTION_STATUS ConnectionStatus;USB_PIPE_INFO PipeList[];};
struct _USB_NODE_CONNECTION_INFORMATION_EX {ULONG ConnectionIndex;USB_DEVICE_DESCRIPTOR DeviceDescriptor;UCHAR CurrentConfigurationValue;UCHAR Speed;BOOLEAN DeviceIsHub;USHORT DeviceAddress;ULONG NumberOfOpenPipes;USB_CONNECTION_STATUS ConnectionStatus;USB_PIPE_INFO PipeList[];};
struct _USB_NODE_CONNECTION_NAME {ULONG ConnectionIndex;ULONG ActualLength;WCHAR NodeName[1];};
struct _USB_NODE_INFORMATION {USB_HUB_NODE NodeType;union _USB_NODE_INFORMATION::$354FC77C019B22332D3A20CE3C314EDB u;};
union _USB_NODE_INFORMATION::$354FC77C019B22332D3A20CE3C314EDB {USB_HUB_INFORMATION HubInformation;USB_MI_PARENT_INFORMATION MiParentInformation;};
struct _USB_NOTIFICATION {USB_NOTIFICATION_TYPE NotificationType;};
enum _USB_NOTIFICATION_TYPE {EnumerationFailure = 0x0,InsufficentBandwidth = 0x1,InsufficentPower = 0x2,OverCurrent = 0x3,ResetOvercurrent = 0x4,AcquireBusInfo = 0x5,AcquireHubName = 0x6,AcquireControllerName = 0x7,HubOvercurrent = 0x8,HubPowerChange = 0x9,HubNestedTooDeeply = 0xA,ModernDeviceInLegacyHub = 0xB,};
struct _USB_OPEN_RAW_DEVICE_PARAMETERS {USHORT PortStatus;USHORT MaxPacketEp0;};
struct _USB_PASS_THRU_PARAMETERS {GUID FunctionGUID;ULONG ParameterLength;UCHAR Parameters[4];};
struct _USB_PIPE_INFO {USB_ENDPOINT_DESCRIPTOR EndpointDescriptor;ULONG ScheduleOffset;};
struct _USB_PIPE_INFORMATION_0 {USB_ENDPOINT_DESCRIPTOR EndpointDescriptor;UCHAR ED_Pad[1];ULONG ScheduleOffset;};
struct _USB_POWER_INFO {WDMUSB_POWER_STATE SystemState;WDMUSB_POWER_STATE HcDevicePowerState;WDMUSB_POWER_STATE HcDeviceWake;WDMUSB_POWER_STATE HcSystemWake;WDMUSB_POWER_STATE RhDevicePowerState;WDMUSB_POWER_STATE RhDeviceWake;WDMUSB_POWER_STATE RhSystemWake;WDMUSB_POWER_STATE LastSystemSleepState;BOOLEAN CanWakeup;BOOLEAN IsPowered;};
struct _USB_ROOT_HUB_NAME {ULONG ActualLength;WCHAR RootHubName[1];};
struct _USB_SEND_RAW_COMMAND_PARAMETERS {UCHAR Usb_bmRequest;UCHAR Usb_bRequest;USHORT Usb_wVlaue;USHORT Usb_wIndex;USHORT Usb_wLength;USHORT DeviceAddress;USHORT MaximumPacketSize;ULONG Timeout;ULONG DataLength;USBD_STATUS UsbdStatusCode;UCHAR Data[4];};
struct _USB_STRING_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;WCHAR bString[1];};
struct _USB_UNICODE_NAME {ULONG Length;WCHAR String[1];};
struct _USB_USB2HW_VERSION_PARAMETERS {UCHAR Usb2HwRevision;};
enum _USB_USER_ERROR_CODE {UsbUserSuccess = 0x0,UsbUserNotSupported = 0x1,UsbUserInvalidRequestCode = 0x2,UsbUserFeatureDisabled = 0x3,UsbUserInvalidHeaderParameter = 0x4,UsbUserInvalidParameter = 0x5,UsbUserMiniportError = 0x6,UsbUserBufferTooSmall = 0x7,UsbUserErrorNotMapped = 0x8,UsbUserDeviceNotStarted = 0x9,UsbUserNoDeviceConnected = 0xA,};
struct _VBICAP_PROPERTIES_PROTECTION_S {KSPROPERTY Property;ULONG StreamIndex;ULONG Status;};
struct _VBICODECFILTERING_CC_SUBSTREAMS {DWORD SubstreamMask;};
struct _VBICODECFILTERING_NABTS_SUBSTREAMS {DWORD SubstreamMask[128];};
struct _VBICODECFILTERING_SCANLINES {DWORD DwordBitArray[32];};
struct _VBICODECFILTERING_STATISTICS_CC {VBICODECFILTERING_STATISTICS_COMMON Common;};
struct _VBICODECFILTERING_STATISTICS_CC_PIN {VBICODECFILTERING_STATISTICS_COMMON_PIN Common;};
struct _VBICODECFILTERING_STATISTICS_COMMON {DWORD InputSRBsProcessed;DWORD OutputSRBsProcessed;DWORD SRBsIgnored;DWORD InputSRBsMissing;DWORD OutputSRBsMissing;DWORD OutputFailures;DWORD InternalErrors;DWORD ExternalErrors;DWORD InputDiscontinuities;DWORD DSPFailures;DWORD TvTunerChanges;DWORD VBIHeaderChanges;DWORD LineConfidenceAvg;DWORD BytesOutput;};
struct _VBICODECFILTERING_STATISTICS_COMMON_PIN {DWORD SRBsProcessed;DWORD SRBsIgnored;DWORD SRBsMissing;DWORD InternalErrors;DWORD ExternalErrors;DWORD Discontinuities;DWORD LineConfidenceAvg;DWORD BytesOutput;};
struct _VBICODECFILTERING_STATISTICS_NABTS {VBICODECFILTERING_STATISTICS_COMMON Common;DWORD FECBundleBadLines;DWORD FECQueueOverflows;DWORD FECCorrectedLines;DWORD FECUncorrectableLines;DWORD BundlesProcessed;DWORD BundlesSent2IP;DWORD FilteredLines;};
struct _VBICODECFILTERING_STATISTICS_NABTS_PIN {VBICODECFILTERING_STATISTICS_COMMON_PIN Common;};
struct _VBICODECFILTERING_STATISTICS_TELETEXT {VBICODECFILTERING_STATISTICS_COMMON Common;};
struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN {VBICODECFILTERING_STATISTICS_COMMON_PIN Common;};
struct _WAIT_CONTEXT_BLOCK {KDEVICE_QUEUE_ENTRY WaitQueueEntry;PDRIVER_CONTROL DeviceRoutine;PVOID DeviceContext;ULONG NumberOfMapRegisters;PVOID DeviceObject;PVOID CurrentIrp;PKDPC BufferChainingDpc;};
enum _WAIT_TYPE {WaitAll = 0x0,WaitAny = 0x1,};
enum _WDMUSB_POWER_STATE {WdmUsbPowerNotMapped = 0x0,WdmUsbPowerSystemUnspecified = 0x64,WdmUsbPowerSystemWorking = 0x65,WdmUsbPowerSystemSleeping1 = 0x66,WdmUsbPowerSystemSleeping2 = 0x67,WdmUsbPowerSystemSleeping3 = 0x68,WdmUsbPowerSystemHibernate = 0x69,WdmUsbPowerSystemShutdown = 0x6A,WdmUsbPowerDeviceUnspecified = 0xC8,WdmUsbPowerDeviceD0 = 0xC9,WdmUsbPowerDeviceD1 = 0xCA,WdmUsbPowerDeviceD2 = 0xCB,WdmUsbPowerDeviceD3 = 0xCC,};
struct _WMILIB_CONTEXT {ULONG GuidCount;PWMIGUIDREGINFO GuidList;PWMI_QUERY_REGINFO QueryWmiRegInfo;PWMI_QUERY_DATABLOCK QueryWmiDataBlock;PWMI_SET_DATABLOCK SetWmiDataBlock;PWMI_SET_DATAITEM SetWmiDataItem;PWMI_EXECUTE_METHOD ExecuteWmiMethod;PWMI_FUNCTION_CONTROL WmiFunctionControl;};
struct _WMI_CHANGER_PARAMETERS {ULONG NumberOfSlots;ULONG NumberOfDrives;ULONG NumberOfIEPorts;ULONG NumberOfTransports;ULONG NumberOfDoors;ULONG NumberOfCleanerSlots;ULONG MagazineSize;};
struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR {ULONG ChangerProblemType;};
struct _WMI_CHANGER_PROBLEM_WARNING {ULONG ChangerProblemType;UCHAR ChangerData[512];};
struct _WMI_DISK_GEOMETRY {LONGLONG Cylinders;ULONG MediaType;ULONG TracksPerCylinder;ULONG SectorsPerTrack;ULONG BytesPerSector;};
struct _WMI_DISK_PERFORMANCE {LONGLONG BytesRead;LONGLONG BytesWritten;LONGLONG ReadTime;LONGLONG WriteTime;LONGLONG IdleTime;ULONG ReadCount;ULONG WriteCount;ULONG QueueDepth;ULONG SplitCount;LONGLONG QueryTime;ULONG StorageDeviceNumber;USHORT StorageManagerName[8];};
struct _WMI_TAPE_DRIVE_PARAMETERS {ULONG MaximumBlockSize;ULONG MinimumBlockSize;ULONG DefaultBlockSize;ULONG MaximumPartitionCount;BOOLEAN CompressionCapable;BOOLEAN CompressionEnabled;BOOLEAN ReportSetmarks;BOOLEAN HardwareErrorCorrection;};
struct _WMI_TAPE_MEDIA_PARAMETERS {ULONGLONG MaximumCapacity;ULONGLONG AvailableCapacity;ULONG BlockSize;ULONG PartitionCount;BOOLEAN MediaWriteProtected;};
struct _WMI_TAPE_PROBLEM_DEVICE_ERROR {BOOLEAN ReadWarning;BOOLEAN WriteWarning;BOOLEAN HardError;BOOLEAN ReadFailure;BOOLEAN WriteFailure;BOOLEAN UnsupportedFormat;BOOLEAN TapeSnapped;BOOLEAN DriveRequiresCleaning;BOOLEAN TimetoCleanDrive;BOOLEAN DriveHardwareError;BOOLEAN ScsiInterfaceError;BOOLEAN MediaLife;};
struct _WMI_TAPE_PROBLEM_IO_ERROR {ULONG ReadCorrectedWithoutDelay;ULONG ReadCorrectedWithDelay;ULONG ReadTotalErrors;ULONG ReadTotalCorrectedErrors;ULONG ReadTotalUncorrectedErrors;ULONG ReadCorrectionAlgorithmProcessed;ULONG WriteCorrectedWithoutDelay;ULONG WriteCorrectedWithDelay;ULONG WriteTotalErrors;ULONG WriteTotalCorrectedErrors;ULONG WriteTotalUncorrectedErrors;ULONG WriteCorrectionAlgorithmProcessed;ULONG NonMediumErrors;};
struct _WMI_TAPE_PROBLEM_WARNING {ULONG DriveProblemType;UCHAR TapeData[512];};
struct _WMI_TAPE_SYMBOLIC_NAME {CHAR VariableData[1];};
struct _WORK_QUEUE_ITEM {LIST_ENTRY List;PWORKER_THREAD_ROUTINE WorkerRoutine;PVOID Parameter;};
enum _WORK_QUEUE_TYPE {CriticalWorkQueue = 0x0,DelayedWorkQueue = 0x1,HyperCriticalWorkQueue = 0x2,MaximumWorkQueue = 0x3,};
struct _WRITE_LOG_SECTORS_IN {UCHAR LogAddress;UCHAR SectorCount;ULONG Length;UCHAR LogSectors[1];};
struct _WRITE_LOG_SECTORS_OUT {BOOLEAN Success;};
struct _WST_BUFFER {VBICODECFILTERING_SCANLINES ScanlinesRequested;WST_BUFFER_LINE WstLines[17];};
struct _WST_BUFFER_LINE {BYTE Confidence;BYTE Bytes[42];};
typedef char __C_ASSERT__[1];
struct _iobuf {char *_ptr;int _cnt;char *_base;int _flag;int _file;int _charbuf;int _bufsiz;char *_tmpfname;};
struct _pipe_config_descriptor {CHAR StreamAssociation;UCHAR PipeConfigFlags;};
enum _tagAVC_FUNCTION {AVC_FUNCTION_COMMAND = 0x0,AVC_FUNCTION_GET_PIN_COUNT = 0x1,AVC_FUNCTION_GET_PIN_DESCRIPTOR = 0x2,AVC_FUNCTION_GET_CONNECTINFO = 0x3,AVC_FUNCTION_SET_CONNECTINFO = 0x4,AVC_FUNCTION_ACQUIRE = 0x5,AVC_FUNCTION_RELEASE = 0x6,AVC_FUNCTION_CLR_CONNECTINFO = 0x7,AVC_FUNCTION_GET_EXT_PLUG_COUNTS = 0x8,AVC_FUNCTION_GET_UNIQUE_ID = 0x9,AVC_FUNCTION_GET_REQUEST = 0xA,AVC_FUNCTION_SEND_RESPONSE = 0xB,AVC_FUNCTION_FIND_PEER_DO = 0xC,AVC_FUNCTION_PEER_DO_LIST = 0xD,AVC_FUNCTION_GET_SUBUNIT_INFO = 0xE,};
enum _tagAvcCommandType {AVC_CTYPE_CONTROL = 0x0,AVC_CTYPE_STATUS = 0x1,AVC_CTYPE_SPEC_INQ = 0x2,AVC_CTYPE_NOTIFY = 0x3,AVC_CTYPE_GEN_INQ = 0x4,};
enum _tagAvcResponseCode {AVC_RESPONSE_NOTIMPL = 0x8,AVC_RESPONSE_ACCEPTED = 0x9,AVC_RESPONSE_REJECTED = 0xA,AVC_RESPONSE_IN_TRANSITION = 0xB,AVC_RESPONSE_STABLE = 0xC,AVC_RESPONSE_IMPLEMENTED = 0xC,AVC_RESPONSE_CHANGED = 0xD,AVC_RESPONSE_INTERIM = 0xF,};
enum _tagAvcSubunitType {AVC_SUBUNITTYPE_VIDEO_MONITOR = 0x0,AVC_SUBUNITTYPE_AUDIO = 0x1,AVC_SUBUNITTYPE_PRINTER = 0x2,AVC_SUBUNITTYPE_DISC_PLAYER = 0x3,AVC_SUBUNITTYPE_TAPE_PLAYER = 0x4,AVC_SUBUNITTYPE_TUNER = 0x5,AVC_SUBUNITTYPE_CA = 0x6,AVC_SUBUNITTYPE_VIDEO_CAMERA = 0x7,AVC_SUBUNITTYPE_PANEL = 0x9,AVC_SUBUNITTYPE_BULLETINBOARD = 0xA,AVC_SUBUNITTYPE_CAMERASTORAGE = 0xB,AVC_SUBUNITTYPE_VENDOR_UNIQUE = 0x1C,AVC_SUBUNITTYPE_EXTENDED = 0x1E,AVC_SUBUNITTYPE_EXTENDED_FULL = 0xFF,AVC_SUBUNITTYPE_UNIT = 0x1F,};
struct adpcmcoef_tag {__int16 iCoef1;__int16 iCoef2;};
struct adpcmewaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;WORD wNumCoef;ADPCMCOEFSET aCoef[];};
struct aptxwaveformat_tag {WAVEFORMATEX wfx;};
struct audiofile_af10waveformat_tag {WAVEFORMATEX wfx;};
struct audiofile_af36waveformat_tag {WAVEFORMATEX wfx;};
struct contres_cr10waveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct contres_vqlpcwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct creative_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct creative_fastspeech10format_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct creative_fastspeech8format_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct creative_fastspeechformat_tag {WAVEFORMATEX ewf;};
struct csimaadpcmwaveformat_tag {WAVEFORMATEX wfx;};
struct digiadpcmmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct digifixwaveformat_tag {WAVEFORMATEX wfx;};
struct digirealwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct digistdwaveformat_tag {WAVEFORMATEX wfx;};
struct dolbyac2waveformat_tag {WAVEFORMATEX wfx;WORD nAuxBitsCode;};
struct drmwaveformat_tag {WAVEFORMATEX wfx;WORD wReserved;ULONG ulContentId;WAVEFORMATEX wfxSecure;};
struct dvi_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct echosc1waveformat_tag {WAVEFORMATEX wfx;};
typedef unsigned int error_status_t;
struct fmtowns_snd_waveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
typedef __int64 fpos_t;
struct g721_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD nAuxBlockSize;};
struct g723_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD cbExtraSize;WORD nAuxBlockSize;};
struct gsm610waveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct ima_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct mediaspace_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct mpeg1waveformat_tag {WAVEFORMATEX wfx;WORD fwHeadLayer;DWORD dwHeadBitrate;WORD fwHeadMode;WORD fwHeadModeExt;WORD wHeadEmphasis;WORD fwHeadFlags;DWORD dwPTSLow;DWORD dwPTSHigh;};
struct mpeglayer3waveformat_tag {WAVEFORMATEX wfx;WORD wID;DWORD fdwFlags;WORD nBlockSize;WORD nFramesPerBlock;WORD nCodecDelay;};
struct nms_vbxadpcmmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct oliadpcmwaveformat_tag {WAVEFORMATEX wfx;};
struct olicelpwaveformat_tag {WAVEFORMATEX wfx;};
struct oligsmwaveformat_tag {WAVEFORMATEX wfx;};
struct olioprwaveformat_tag {WAVEFORMATEX wfx;};
struct olisbcwaveformat_tag {WAVEFORMATEX wfx;};
struct pcmwaveformat_tag {WAVEFORMAT wf;WORD wBitsPerSample;};
typedef int ptrdiff_t;
typedef struct tag_s_RIFFWAVE_INST s_RIFFWAVE_inst;
struct sierra_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
typedef unsigned int size_t;
struct sonarcwaveformat_tag {WAVEFORMATEX wfx;WORD wCompType;};
struct tWAVEFORMATEX {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;WORD wBitsPerSample;WORD cbSize;};
struct tagBDA_TRANSPORT_INFO {ULONG ulcbPhyiscalPacket;ULONG ulcbPhyiscalFrame;ULONG ulcbPhyiscalFrameAlignment;REFERENCE_TIME AvgTimePerFrame;};
struct tagDRMFORWARD {DWORD Flags;PDEVICE_OBJECT DeviceObject;PFILE_OBJECT FileObject;PVOID Context;};
struct tagDRMRIGHTS {BOOL CopyProtect;ULONG Reserved;BOOL DigitalOutputDisable;};
struct tagJPEGINFOHEADER {DWORD JPEGSize;DWORD JPEGProcess;DWORD JPEGColorSpaceID;DWORD JPEGBitsPerSample;DWORD JPEGHSubSampling;DWORD JPEGVSubSampling;};
struct tagKS_AMVPDATAINFO {DWORD dwSize;DWORD dwMicrosecondsPerField;KS_AMVPDIMINFO amvpDimInfo;DWORD dwPictAspectRatioX;DWORD dwPictAspectRatioY;BOOL bEnableDoubleClock;BOOL bEnableVACT;BOOL bDataIsInterlaced;LONG lHalfLinesOdd;BOOL bFieldPolarityInverted;DWORD dwNumLinesInVREF;LONG lHalfLinesEven;DWORD dwReserved1;};
struct tagKS_AMVPDIMINFO {DWORD dwFieldWidth;DWORD dwFieldHeight;DWORD dwVBIWidth;DWORD dwVBIHeight;RECT rcValidRegion;};
struct tagKS_AMVPSIZE {DWORD dwWidth;DWORD dwHeight;};
struct tagKS_AnalogVideoInfo {RECT rcSource;RECT rcTarget;DWORD dwActiveWidth;DWORD dwActiveHeight;REFERENCE_TIME AvgTimePerFrame;};
struct tagKS_BDA_FRAME_INFO {ULONG ExtendedHeaderSize;DWORD dwFrameFlags;ULONG ulEvent;ULONG ulChannelNumber;ULONG ulSubchannelNumber;ULONG ulReason;};
struct tagKS_BITMAPINFOHEADER {DWORD biSize;LONG biWidth;LONG biHeight;WORD biPlanes;WORD biBitCount;DWORD biCompression;DWORD biSizeImage;LONG biXPelsPerMeter;LONG biYPelsPerMeter;DWORD biClrUsed;DWORD biClrImportant;};
struct tagKS_DATAFORMAT_DV_AVC {KSDATAFORMAT DataFormat;DVINFO DVVideoInfo;AVCCONNECTINFO ConnectInfo;};
struct tagKS_DATAFORMAT_MPEG2TS_AVC {KSDATAFORMAT DataFormat;AVCCONNECTINFO ConnectInfo;};
struct tagKS_DATAFORMAT_VBIINFOHEADER {KSDATAFORMAT DataFormat;KS_VBIINFOHEADER VBIInfoHeader;};
struct tagKS_DATAFORMAT_VIDEOINFOHEADER {KSDATAFORMAT DataFormat;KS_VIDEOINFOHEADER VideoInfoHeader;};
struct tagKS_DATAFORMAT_VIDEOINFOHEADER2 {KSDATAFORMAT DataFormat;KS_VIDEOINFOHEADER2 VideoInfoHeader2;};
struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE {KSDATAFORMAT DataFormat;KS_VIDEOINFO VideoInfo;};
struct tagKS_DATARANGE_ANALOGVIDEO {KSDATARANGE DataRange;KS_ANALOGVIDEOINFO AnalogVideoInfo;};
struct tagKS_DATARANGE_BDA_ANTENNA {KSDATARANGE DataRange;};
struct tagKS_DATARANGE_BDA_TRANSPORT {KSDATARANGE DataRange;BDA_TRANSPORT_INFO BdaTransportInfo;};
struct tagKS_DATARANGE_DVVIDEO {KSDATARANGE DataRange;DVINFO DVVideoInfo;};
struct tagKS_DATARANGE_DV_AVC {KSDATARANGE DataRange;DVINFO DVVideoInfo;AVCPRECONNECTINFO ConnectInfo;};
struct tagKS_DATARANGE_MPEG1_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_MPEG1VIDEOINFO VideoInfoHeader;};
struct tagKS_DATARANGE_MPEG2TS_AVC {KSDATARANGE DataRange;AVCPRECONNECTINFO ConnectInfo;};
struct tagKS_DATARANGE_MPEG2_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_MPEGVIDEOINFO2 VideoInfoHeader;};
struct tagKS_DATARANGE_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VIDEOINFOHEADER VideoInfoHeader;};
struct tagKS_DATARANGE_VIDEO2 {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VIDEOINFOHEADER2 VideoInfoHeader;};
struct tagKS_DATARANGE_VIDEO_PALETTE {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VIDEOINFO VideoInfo;};
struct tagKS_DATARANGE_VIDEO_VBI {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VBIINFOHEADER VBIInfoHeader;};
struct tagKS_FRAME_INFO {ULONG ExtendedHeaderSize;DWORD dwFrameFlags;LONGLONG PictureNumber;LONGLONG DropCount;HANDLE hDirectDraw;HANDLE hSurfaceHandle;RECT DirectDrawRect;DWORD Reserved1;DWORD Reserved2;DWORD Reserved3;DWORD Reserved4;};
struct tagKS_MPEAUDIOINFO {DWORD dwFlags;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;};
struct tagKS_MPEG1VIDEOINFO {KS_VIDEOINFOHEADER hdr;DWORD dwStartTimeCode;DWORD cbSequenceHeader;BYTE bSequenceHeader[1];};
struct tagKS_MPEGVIDEOINFO2 {KS_VIDEOINFOHEADER2 hdr;DWORD dwStartTimeCode;DWORD cbSequenceHeader;DWORD dwProfile;DWORD dwLevel;DWORD dwFlags;DWORD bSequenceHeader[1];};
struct tagKS_RGBQUAD {BYTE rgbBlue;BYTE rgbGreen;BYTE rgbRed;BYTE rgbReserved;};
struct tagKS_TVTUNER_CHANGE_INFO {DWORD dwFlags;DWORD dwCountryCode;DWORD dwAnalogVideoStandard;DWORD dwChannel;};
struct tagKS_VBIINFOHEADER {ULONG StartLine;ULONG EndLine;ULONG SamplingFrequency;ULONG MinLineStartTime;ULONG MaxLineStartTime;ULONG ActualLineStartTime;ULONG ActualLineEndTime;ULONG VideoStandard;ULONG SamplesPerLine;ULONG StrideInBytes;ULONG BufferSize;};
struct tagKS_VBI_FRAME_INFO {ULONG ExtendedHeaderSize;DWORD dwFrameFlags;LONGLONG PictureNumber;LONGLONG DropCount;DWORD dwSamplingFrequency;KS_TVTUNER_CHANGE_INFO TvTunerChangeInfo;KS_VBIINFOHEADER VBIInfoHeader;};
struct tagKS_VIDEOINFO {RECT rcSource;RECT rcTarget;DWORD dwBitRate;DWORD dwBitErrorRate;REFERENCE_TIME AvgTimePerFrame;KS_BITMAPINFOHEADER bmiHeader;union {KS_RGBQUAD bmiColors[256];DWORD dwBitMasks[3];KS_TRUECOLORINFO TrueColorInfo;};};
union tagKS_VIDEOINFO::$F8BBADE88DA80D04A6A2CB02740F1E2F {KS_RGBQUAD bmiColors[256];DWORD dwBitMasks[3];KS_TRUECOLORINFO TrueColorInfo;};
struct tagKS_VIDEOINFOHEADER {RECT rcSource;RECT rcTarget;DWORD dwBitRate;DWORD dwBitErrorRate;REFERENCE_TIME AvgTimePerFrame;KS_BITMAPINFOHEADER bmiHeader;};
struct tagKS_VIDEOINFOHEADER2 {RECT rcSource;RECT rcTarget;DWORD dwBitRate;DWORD dwBitErrorRate;REFERENCE_TIME AvgTimePerFrame;DWORD dwInterlaceFlags;DWORD dwCopyProtectFlags;DWORD dwPictAspectRatioX;DWORD dwPictAspectRatioY;DWORD dwReserved1;DWORD dwReserved2;KS_BITMAPINFOHEADER bmiHeader;};
struct tagPOINT {LONG x;LONG y;};
struct tagPOINTS {SHORT x;SHORT y;};
struct tagRECT {LONG left;LONG top;LONG right;LONG bottom;};
struct tagSIZE {LONG cx;LONG cy;};
struct tag_KS_TRUECOLORINFO {DWORD dwBitMasks[3];KS_RGBQUAD bmiColors[256];};
struct tag_s_RIFFWAVE_INST;
struct tag_s_RIFFWAVE_inst {BYTE bUnshiftedNote;char chFineTune;char chGain;BYTE bLowNote;BYTE bHighNote;BYTE bLowVelocity;BYTE bHighVelocity;};
struct truespeechwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;WORD nSamplesPerBlock;BYTE abReserved[28];};
typedef char *va_list;
struct wavefilter_echo_tag {WAVEFILTER wfltr;DWORD dwVolume;DWORD dwDelay;};
struct wavefilter_tag {DWORD cbStruct;DWORD dwFilterTag;DWORD fdwFilter;DWORD dwReserved[5];};
struct wavefilter_volume_tag {WAVEFILTER wfltr;DWORD dwVolume;};
struct waveformat_tag {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;};
typedef unsigned __int16 wchar_t;
typedef wchar_t wctype_t;
typedef wchar_t wint_t;
struct yamaha_adpmcwaveformat_tag {WAVEFORMATEX wfx;};

void __fastcall ExAcquireFastMutex(PFAST_MUTEX FastMutex);
void __fastcall ExAcquireFastMutexUnsafe(PFAST_MUTEX FastMutex);
PSINGLE_LIST_ENTRY __fastcall ExInterlockedFlushSList(PSLIST_HEADER ListHead);
void __fastcall ExReleaseFastMutex(PFAST_MUTEX FastMutex);
void __fastcall ExReleaseFastMutexUnsafe(PFAST_MUTEX FastMutex);
void __fastcall ExReleaseResourceLite(PERESOURCE Resource);
BOOLEAN __fastcall ExTryToAcquireFastMutex(PFAST_MUTEX FastMutex);
ULONG __fastcall ExfInterlockedAddUlong(PULONG Addend, ULONG Increment, PKSPIN_LOCK Lock);
LONGLONG __fastcall ExfInterlockedCompareExchange64(volatile LONGLONG *Destination, PLONGLONG ExChange, PLONGLONG Comperand);
PLIST_ENTRY __fastcall ExfInterlockedInsertHeadList(PLIST_ENTRY ListHead, PLIST_ENTRY ListEntry, PKSPIN_LOCK Lock);
PLIST_ENTRY __fastcall ExfInterlockedInsertTailList(PLIST_ENTRY ListHead, PLIST_ENTRY ListEntry, PKSPIN_LOCK Lock);
PSINGLE_LIST_ENTRY __fastcall ExfInterlockedPopEntryList(PSINGLE_LIST_ENTRY ListHead, PKSPIN_LOCK Lock);
PSINGLE_LIST_ENTRY __fastcall ExfInterlockedPushEntryList(PSINGLE_LIST_ENTRY ListHead, PSINGLE_LIST_ENTRY ListEntry, PKSPIN_LOCK Lock);
PLIST_ENTRY __fastcall ExfInterlockedRemoveHeadList(PLIST_ENTRY ListHead, PKSPIN_LOCK Lock);
LONG __fastcall InterlockedCompareExchange(volatile LONG *Destination, LONG ExChange, LONG Comperand);
LONG __fastcall InterlockedDecrement(volatile LONG *Addend);
LONG __fastcall InterlockedExchange(volatile LONG *Target, LONG Value);
LONG __fastcall InterlockedExchangeAdd(volatile LONG *Addend, LONG Increment);
LONG __fastcall InterlockedIncrement(volatile LONG *Addend);
PSINGLE_LIST_ENTRY __fastcall InterlockedPopEntrySList(PSLIST_HEADER ListHead);
PSINGLE_LIST_ENTRY __fastcall InterlockedPushEntrySList(PSLIST_HEADER ListHead, PSINGLE_LIST_ENTRY ListEntry);
NTSTATUS __fastcall IofCallDriver(PDEVICE_OBJECT DeviceObject, PIRP Irp);
void __fastcall IofCompleteRequest(PIRP Irp, CCHAR PriorityBoost);
BOOLEAN __fastcall KeTestSpinLock(PKSPIN_LOCK SpinLock);
BOOLEAN __fastcall KeTryToAcquireSpinLockAtDpcLevel(PKSPIN_LOCK SpinLock);
void __fastcall KefAcquireSpinLockAtDpcLevel(PKSPIN_LOCK SpinLock);
void __fastcall KefReleaseSpinLockFromDpcLevel(PKSPIN_LOCK SpinLock);
KIRQL __fastcall KfAcquireSpinLock(PKSPIN_LOCK SpinLock);
void __fastcall KfLowerIrql(KIRQL NewIrql);
KIRQL __fastcall KfRaiseIrql(KIRQL NewIrql);
void __fastcall KfReleaseSpinLock(PKSPIN_LOCK SpinLock, KIRQL NewIrql);
LONG_PTR __fastcall ObfDereferenceObject(PVOID Object);
LONG_PTR __fastcall ObfReferenceObject(PVOID Object);
void __fastcall RtlPrefetchMemoryNonTemporal(PVOID Source, SIZE_T Length);
ULONG __fastcall RtlUlongByteSwap(ULONG Source);
ULONGLONG __fastcall RtlUlonglongByteSwap(ULONGLONG Source);
USHORT __fastcall RtlUshortByteSwap(USHORT Source);
MACRO_ACCESS_FLAGS ACCESS_FLAGS_TYPE_BROADCAST;
MACRO_ACCESS_FLAGS ACCESS_FLAGS_TYPE_LOCK;
MACRO_ACCESS_FLAGS ACCESS_FLAGS_TYPE_READ;
MACRO_ACCESS_FLAGS ACCESS_FLAGS_TYPE_WRITE;
MACRO_ACCESS ACCESS_SYSTEM_SECURITY;
MACRO_ACL ACL_REVISION;
MACRO_ACL ACL_REVISION1;
MACRO_ACL ACL_REVISION2;
MACRO_ACL ACL_REVISION3;
MACRO_ACL ACL_REVISION4;
MACRO_ACL ACL_REVISION_DS;
MACRO_ACM ACM_MPEG_COPYRIGHT;
MACRO_ACM ACM_MPEG_DUALCHANNEL;
MACRO_ACM ACM_MPEG_ID_MPEG1;
MACRO_ACM ACM_MPEG_JOINTSTEREO;
MACRO_ACM ACM_MPEG_LAYER1;
MACRO_ACM ACM_MPEG_LAYER2;
MACRO_ACM ACM_MPEG_LAYER3;
MACRO_ACM ACM_MPEG_ORIGINALHOME;
MACRO_ACM ACM_MPEG_PRIVATEBIT;
MACRO_ACM ACM_MPEG_PROTECTIONBIT;
MACRO_ACM ACM_MPEG_SINGLECHANNEL;
MACRO_ACM ACM_MPEG_STEREO;
MACRO_ACODE ACODE_ACK_BUSY_A;
MACRO_ACODE ACODE_ACK_BUSY_B;
MACRO_ACODE ACODE_ACK_BUSY_X;
MACRO_ACODE ACODE_ACK_COMPLETE;
MACRO_ACODE ACODE_ACK_DATA_ERROR;
MACRO_ACODE ACODE_ACK_PENDING;
MACRO_ACODE ACODE_ACK_TYPE_ERROR;
MACRO_ACODE ACODE_RESERVED_0;
MACRO_ACODE ACODE_RESERVED_10;
MACRO_ACODE ACODE_RESERVED_11;
MACRO_ACODE ACODE_RESERVED_12;
MACRO_ACODE ACODE_RESERVED_15;
MACRO_ACODE ACODE_RESERVED_3;
MACRO_ACODE ACODE_RESERVED_7;
MACRO_ACODE ACODE_RESERVED_8;
MACRO_ACODE ACODE_RESERVED_9;
MACRO_ACODE ACODE_STATUS_MASK;
MACRO_ACPI_EVAL ACPI_ACQUIRE_GLOBAL_LOCK_SIGNATURE;
MACRO_ACPI_BIOS ACPI_BIOS_ERROR;
MACRO_ACPI_BIOS_FATAL ACPI_BIOS_FATAL_ERROR;
MACRO_ACPI ACPI_DRIVER_INTERNAL;
MACRO_ACPI_EVAL ACPI_EVAL_INPUT_BUFFER_COMPLEX_SIGNATURE;
MACRO_ACPI_EVAL ACPI_EVAL_INPUT_BUFFER_SIGNATURE;
MACRO_ACPI_EVAL ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_SIGNATURE;
MACRO_ACPI_EVAL ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_SIGNATURE;
MACRO_ACPI_EVAL ACPI_EVAL_OUTPUT_BUFFER_SIGNATURE;
MACRO_ACPI_EVAL ACPI_METHOD_ARGUMENT_BUFFER;
MACRO_ACPI_EVAL ACPI_METHOD_ARGUMENT_INTEGER;
MACRO_ACPI_EVAL ACPI_METHOD_ARGUMENT_PACKAGE;
MACRO_ACPI_EVAL ACPI_METHOD_ARGUMENT_STRING;
MACRO_ACPI_OPREGION ACPI_OPREGION_ACCESS_AS_COOKED;
MACRO_ACPI_OPREGION ACPI_OPREGION_ACCESS_AS_RAW;
MACRO_ACPI_OPREGION ACPI_OPREGION_ACCESS_AT_HIGH_LEVEL;
MACRO_ACPI_OPREGION ACPI_OPREGION_READ;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_CMOS_CONFIG;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_EC;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_IO;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_MEMORY;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_PCIBARTARGET;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_PCI_CONFIG;
MACRO_ACPI_OPREGION ACPI_OPREGION_REGION_SPACE_SMB;
MACRO_ACPI_OPREGION ACPI_OPREGION_WRITE;
MACRO_ACPI_EVAL ACPI_RELEASE_GLOBAL_LOCK_SIGNATURE;
MACRO_ACTIVE ACTIVE_EX_WORKER_THREAD_TERMINATION;
MACRO_ADDRESS ADDRESS_TAG_BIT;
MACRO_UNIT_DIRECTORY_ENTRY ADD_UNIT_DIRECTORY_ENTRY;
MACRO_AEC AEC_MODE_FULL_DUPLEX;
MACRO_AEC AEC_MODE_HALF_DUPLEX;
MACRO_AEC AEC_MODE_PASS_THROUGH;
MACRO_AEC AEC_STATUS_FD_CURRENTLY_CONVERGED;
MACRO_AEC AEC_STATUS_FD_HISTORY_CONTINUOUSLY_CONVERGED;
MACRO_AEC AEC_STATUS_FD_HISTORY_PREVIOUSLY_DIVERGED;
MACRO_AEC AEC_STATUS_FD_HISTORY_UNINITIALIZED;
MACRO_ClassInformation_DeviceId_ID AGP_STD_DATA_AgpCommand_ID;
MACRO_ClassInformation_DeviceId_ID AGP_STD_DATA_AgpStatus_ID;
MACRO_ClassInformation_DeviceId_ID AGP_STD_DATA_ApertureBase_ID;
MACRO_ClassInformation_DeviceId_ID AGP_STD_DATA_ApertureLength_ID;
MACRO_ALLOCATE ALLOCATE_ADDRESS_FLAGS_USE_BIG_ENDIAN;
MACRO_ALLOCATE ALLOCATE_ADDRESS_FLAGS_USE_COMMON_BUFFER;
MACRO_ALLOC ALLOC_DATA_PRAGMA;
MACRO_ALLOC ALLOC_PRAGMA;
MACRO_ALLOW ALLOW_PERFORMANCE_HIT_IN_Allow_ID;
MPEG2StreamType ANNEX_A_DSM_CC;
MACRO_NULL ANSI_NULL;
MACRO_ANYSIZE ANYSIZE_ARRAY;
MACRO_ANY ANY_SIZE_ARRAY;
MACRO_APC APC_INDEX_MISMATCH;
MACRO_LEVEL APC_LEVEL;
MACRO_APPLICATION APPLICATION_ERROR_MASK;
MACRO_OBJECT ASSIGN_DRIVE_LETTERS_FAILED;
MACRO_ASYNC_FLAGS ASYNC_FLAGS_BROADCAST;
MACRO_ASYNC_FLAGS ASYNC_FLAGS_NONINCREMENTING;
MACRO_ASYNC_FLAGS ASYNC_FLAGS_NO_STATUS;
MACRO_ASYNC_FLAGS ASYNC_FLAGS_PARTIAL_REQUEST;
MACRO_ASYNC_FLAGS ASYNC_FLAGS_PING;
MACRO_ASYNC ASYNC_PAYLOAD_100_RATE;
MACRO_ASYNC ASYNC_PAYLOAD_200_RATE;
MACRO_ASYNC ASYNC_PAYLOAD_400_RATE;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_Checksum_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_ErrorLogCapability_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_ExtendedPollTimeInMinutes_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_Length_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_OfflineCollectCapability_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_OfflineCollectionStatus_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_Reserved_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_SelfTestStatus_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_ShortPollTimeInMinutes_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_SmartCapability_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_TotalTime_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_VendorSpecific2_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_VendorSpecific3_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_VendorSpecific4_ID;
MACRO_ClassInformation_DeviceId_ID ATAPI_FAILURE_PREDICT_DATA_VendorSpecific_ID;
MACRO_ATDISK ATDISK_DRIVER_INTERNAL;
ATSCComponentTypeFlags ATSCCT_AC3;
MACRO_ATTEMPTED_EXECUTE ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY;
MACRO_ATTEMPTED ATTEMPTED_SWITCH_FROM_DPC;
MACRO_ATTEMPTED_WRITE ATTEMPTED_WRITE_TO_READONLY_MEMORY;
MACRO_SETUP AUDIT_FAILURE;
MACRO_AVCCONNECTINFO AVCCONNECTINFO_MAX_SUBUNITADDR_LEN;
_AVCSTRM_FUNCTION AVCSTRM_ABORT_STREAMING;
_AVCSTRM_FUNCTION AVCSTRM_CLOSE;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_HDDV_NTSC;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_HDDV_PAL;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_MPEG2TS;
MACRO_AVCSTRM AVCSTRM_FORMAT_OPTION_STRIP_SPH;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_SDDV_NTSC;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_SDDV_PAL;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_SDLDV_NTSC;
_AVCSTRM_FORMAT AVCSTRM_FORMAT_SDLDV_PAL;
_AVCSTRM_FUNCTION AVCSTRM_GET_PROPERTY;
_AVCSTRM_FUNCTION AVCSTRM_GET_STATE;
_AVCSTRM_FUNCTION AVCSTRM_OPEN;
_AVCSTRM_FUNCTION AVCSTRM_READ;
_AVCSTRM_FUNCTION AVCSTRM_SET_PROPERTY;
_AVCSTRM_FUNCTION AVCSTRM_SET_STATE;
_AVCSTRM_FUNCTION AVCSTRM_WRITE;
_tagAvcCommandType AVC_CTYPE_CONTROL;
_tagAvcCommandType AVC_CTYPE_GEN_INQ;
_tagAvcCommandType AVC_CTYPE_NOTIFY;
_tagAvcCommandType AVC_CTYPE_SPEC_INQ;
_tagAvcCommandType AVC_CTYPE_STATUS;
MACRO_AVC_DEVICE AVC_DEVICE_CAMERA;
MACRO_AVC_DEVICE AVC_DEVICE_TAPE_REC;
MACRO_AVC_DEVICE AVC_DEVICE_TUNER;
_tagAVC_FUNCTION AVC_FUNCTION_ACQUIRE;
_tagAVC_FUNCTION AVC_FUNCTION_CLR_CONNECTINFO;
_tagAVC_FUNCTION AVC_FUNCTION_COMMAND;
_tagAVC_FUNCTION AVC_FUNCTION_FIND_PEER_DO;
_tagAVC_FUNCTION AVC_FUNCTION_GET_CONNECTINFO;
_tagAVC_FUNCTION AVC_FUNCTION_GET_EXT_PLUG_COUNTS;
_tagAVC_FUNCTION AVC_FUNCTION_GET_PIN_COUNT;
_tagAVC_FUNCTION AVC_FUNCTION_GET_PIN_DESCRIPTOR;
_tagAVC_FUNCTION AVC_FUNCTION_GET_REQUEST;
_tagAVC_FUNCTION AVC_FUNCTION_GET_SUBUNIT_INFO;
_tagAVC_FUNCTION AVC_FUNCTION_GET_UNIQUE_ID;
_tagAVC_FUNCTION AVC_FUNCTION_PEER_DO_LIST;
_tagAVC_FUNCTION AVC_FUNCTION_RELEASE;
_tagAVC_FUNCTION AVC_FUNCTION_SEND_RESPONSE;
_tagAVC_FUNCTION AVC_FUNCTION_SET_CONNECTINFO;
_tagAvcResponseCode AVC_RESPONSE_ACCEPTED;
_tagAvcResponseCode AVC_RESPONSE_CHANGED;
_tagAvcResponseCode AVC_RESPONSE_IMPLEMENTED;
_tagAvcResponseCode AVC_RESPONSE_INTERIM;
_tagAvcResponseCode AVC_RESPONSE_IN_TRANSITION;
_tagAvcResponseCode AVC_RESPONSE_NOTIMPL;
_tagAvcResponseCode AVC_RESPONSE_REJECTED;
_tagAvcResponseCode AVC_RESPONSE_STABLE;
MACRO_AVC AVC_SUBUNITINFO_BYTES;
_tagAvcSubunitType AVC_SUBUNITTYPE_AUDIO;
_tagAvcSubunitType AVC_SUBUNITTYPE_BULLETINBOARD;
_tagAvcSubunitType AVC_SUBUNITTYPE_CA;
_tagAvcSubunitType AVC_SUBUNITTYPE_CAMERASTORAGE;
_tagAvcSubunitType AVC_SUBUNITTYPE_DISC_PLAYER;
_tagAvcSubunitType AVC_SUBUNITTYPE_EXTENDED;
_tagAvcSubunitType AVC_SUBUNITTYPE_EXTENDED_FULL;
_tagAvcSubunitType AVC_SUBUNITTYPE_PANEL;
_tagAvcSubunitType AVC_SUBUNITTYPE_PRINTER;
_tagAvcSubunitType AVC_SUBUNITTYPE_TAPE_PLAYER;
_tagAvcSubunitType AVC_SUBUNITTYPE_TUNER;
_tagAvcSubunitType AVC_SUBUNITTYPE_UNIT;
_tagAvcSubunitType AVC_SUBUNITTYPE_VENDOR_UNIQUE;
_tagAvcSubunitType AVC_SUBUNITTYPE_VIDEO_CAMERA;
_tagAvcSubunitType AVC_SUBUNITTYPE_VIDEO_MONITOR;
MACRO_AVC_SUBUNIT AVC_SUBUNIT_ADDR_PERSISTENT;
MACRO_AVC_SUBUNIT AVC_SUBUNIT_ADDR_TRIGGERBUSRESET;
MACRO_AVIIF AVIIF_CONTROLFRAME;
MACRO_AV AV_HOST_DMA_DOUBLE_BUFFERING_ENABLED;
_USB_NOTIFICATION_TYPE AcquireBusInfo;
_USB_NOTIFICATION_TYPE AcquireControllerName;
_USB_NOTIFICATION_TYPE AcquireHubName;
_CM_SERVICE_NODE_TYPE AdapterType;
_EXTENDED_AGP_REGISTER AgpControl;
_TRACE_INFORMATION_CLASS AllLoggerHandlesClass;
MACRO_AllowPerformanceHit AllowPerformanceHit;
_EXTENDED_AGP_REGISTER AperturePageSize;
_EXTENDED_AGP_REGISTER ApertureSize;
_SECURITY_OPERATION_CODE AssignSecurityDescriptor;
_CM_SERVICE_LOAD_TYPE AutoLoad;
$96E1D162D1577D34227CC3C8C2455781 Av61883_AttachFrame;
$96E1D162D1577D34227CC3C8C2455781 Av61883_BusReset;
$96E1D162D1577D34227CC3C8C2455781 Av61883_BusResetNotify;
$96E1D162D1577D34227CC3C8C2455781 Av61883_CancelFrame;
$96E1D162D1577D34227CC3C8C2455781 Av61883_Connect;
$96E1D162D1577D34227CC3C8C2455781 Av61883_CreatePlug;
$96E1D162D1577D34227CC3C8C2455781 Av61883_DeletePlug;
$96E1D162D1577D34227CC3C8C2455781 Av61883_Disconnect;
$96E1D162D1577D34227CC3C8C2455781 Av61883_GetFcpRequest;
$96E1D162D1577D34227CC3C8C2455781 Av61883_GetFcpResponse;
$96E1D162D1577D34227CC3C8C2455781 Av61883_GetPlugHandle;
$96E1D162D1577D34227CC3C8C2455781 Av61883_GetPlugState;
$96E1D162D1577D34227CC3C8C2455781 Av61883_GetUnitInfo;
$96E1D162D1577D34227CC3C8C2455781 Av61883_Listen;
$96E1D162D1577D34227CC3C8C2455781 Av61883_MAX;
$96E1D162D1577D34227CC3C8C2455781 Av61883_MonitorPlugs;
$96E1D162D1577D34227CC3C8C2455781 Av61883_SendFcpRequest;
$96E1D162D1577D34227CC3C8C2455781 Av61883_SendFcpResponse;
$96E1D162D1577D34227CC3C8C2455781 Av61883_SetFcpNotify;
$96E1D162D1577D34227CC3C8C2455781 Av61883_SetPlug;
$96E1D162D1577D34227CC3C8C2455781 Av61883_SetUnitDirectory;
$96E1D162D1577D34227CC3C8C2455781 Av61883_SetUnitInfo;
$96E1D162D1577D34227CC3C8C2455781 Av61883_Stop;
$96E1D162D1577D34227CC3C8C2455781 Av61883_Talk;
MACRO_BAD_EXHANDLE BAD_EXHANDLE;
MACRO_BAD_POOL BAD_POOL_CALLER;
MACRO_BAD BAD_POOL_HEADER;
MACRO_BAD_SYSTEM BAD_SYSTEM_CONFIG_INFO;
MACRO_TAG BANDWIDTH_ALLOCATE_TAG;
MACRO_LOCATION BANDWIDTH_AVAILABLE_LOCATION;
MACRO_BAY BAY_STATE_DEVICE_ENABLED;
MACRO_BAY BAY_STATE_DEVICE_INSERTED;
MACRO_BAY BAY_STATE_DEVICE_REMOVAL_ALLOWED;
MACRO_BAY BAY_STATE_DEVICE_REMOVAL_REQUESTED;
MACRO_BAY BAY_STATE_EMPTY;
BinaryConvolutionCodeRate BDA_BCC_RATE_1_2;
BinaryConvolutionCodeRate BDA_BCC_RATE_2_3;
BinaryConvolutionCodeRate BDA_BCC_RATE_3_4;
BinaryConvolutionCodeRate BDA_BCC_RATE_3_5;
BinaryConvolutionCodeRate BDA_BCC_RATE_4_5;
BinaryConvolutionCodeRate BDA_BCC_RATE_5_11;
BinaryConvolutionCodeRate BDA_BCC_RATE_5_6;
BinaryConvolutionCodeRate BDA_BCC_RATE_7_8;
BinaryConvolutionCodeRate BDA_BCC_RATE_MAX;
BinaryConvolutionCodeRate BDA_BCC_RATE_NOT_DEFINED;
BinaryConvolutionCodeRate BDA_BCC_RATE_NOT_SET;
$4FF2CEF7F943208657A69CE25EA0FE31 BDA_CHANGES_COMPLETE;
$4FF2CEF7F943208657A69CE25EA0FE31 BDA_CHANGES_PENDING;
MACRO_BDA BDA_CHAN_BANDWITH_NOT_DEFINED;
MACRO_BDA BDA_CHAN_BANDWITH_NOT_SET;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_ACCESS_DENIED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_ACCESS_GRANTED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_CHANNEL_ACQUIRED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_CHANNEL_ACTIVATED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_CHANNEL_DEACTIVATED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_CHANNEL_LOST;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_CHANNEL_SOURCE_CHANGED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_DATA_START;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_DATA_STOP;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_OFFER_EXTENDED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_PURCHASE_COMPLETED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SIGNAL_LOCK;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SIGNAL_LOSS;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SMART_CARD_INSERTED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SMART_CARD_REMOVED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SUBCHANNEL_ACQUIRED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SUBCHANNEL_ACTIVATED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SUBCHANNEL_DEACTIVATED;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SUBCHANNEL_LOST;
$938A3B861D25DE16265A89B1C43AD81C BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED;
FECMethod BDA_FEC_MAX;
FECMethod BDA_FEC_METHOD_NOT_DEFINED;
FECMethod BDA_FEC_METHOD_NOT_SET;
FECMethod BDA_FEC_RS_204_188;
FECMethod BDA_FEC_VITERBI;
$323950C9678C627AEFAD637828B7290C BDA_FILTERED_MULTICAST;
MACRO_BDA BDA_FREQUENCY_MULTIPLIER_NOT_DEFINED;
MACRO_BDA BDA_FREQUENCY_MULTIPLIER_NOT_SET;
MACRO_BDA BDA_FREQUENCY_NOT_DEFINED;
MACRO_BDA BDA_FREQUENCY_NOT_SET;
GuardInterval BDA_GUARD_1_16;
GuardInterval BDA_GUARD_1_32;
GuardInterval BDA_GUARD_1_4;
GuardInterval BDA_GUARD_1_8;
GuardInterval BDA_GUARD_MAX;
GuardInterval BDA_GUARD_NOT_DEFINED;
GuardInterval BDA_GUARD_NOT_SET;
HierarchyAlpha BDA_HALPHA_1;
HierarchyAlpha BDA_HALPHA_2;
HierarchyAlpha BDA_HALPHA_4;
HierarchyAlpha BDA_HALPHA_MAX;
HierarchyAlpha BDA_HALPHA_NOT_DEFINED;
HierarchyAlpha BDA_HALPHA_NOT_SET;
ModulationType BDA_MOD_1024QAM;
ModulationType BDA_MOD_112QAM;
ModulationType BDA_MOD_128QAM;
ModulationType BDA_MOD_160QAM;
ModulationType BDA_MOD_16QAM;
ModulationType BDA_MOD_16VSB;
ModulationType BDA_MOD_192QAM;
ModulationType BDA_MOD_224QAM;
ModulationType BDA_MOD_256QAM;
ModulationType BDA_MOD_320QAM;
ModulationType BDA_MOD_32QAM;
ModulationType BDA_MOD_384QAM;
ModulationType BDA_MOD_448QAM;
ModulationType BDA_MOD_512QAM;
ModulationType BDA_MOD_640QAM;
ModulationType BDA_MOD_64QAM;
ModulationType BDA_MOD_768QAM;
ModulationType BDA_MOD_80QAM;
ModulationType BDA_MOD_896QAM;
ModulationType BDA_MOD_8VSB;
ModulationType BDA_MOD_96QAM;
ModulationType BDA_MOD_ANALOG_AMPLITUDE;
ModulationType BDA_MOD_ANALOG_FREQUENCY;
ModulationType BDA_MOD_BPSK;
ModulationType BDA_MOD_MAX;
ModulationType BDA_MOD_NOT_DEFINED;
ModulationType BDA_MOD_NOT_SET;
ModulationType BDA_MOD_OQPSK;
ModulationType BDA_MOD_QPSK;
$323950C9678C627AEFAD637828B7290C BDA_NO_MULTICAST;
Polarisation BDA_POLARISATION_CIRCULAR_L;
Polarisation BDA_POLARISATION_CIRCULAR_R;
Polarisation BDA_POLARISATION_LINEAR_H;
Polarisation BDA_POLARISATION_LINEAR_V;
Polarisation BDA_POLARISATION_MAX;
Polarisation BDA_POLARISATION_NOT_DEFINED;
Polarisation BDA_POLARISATION_NOT_SET;
$323950C9678C627AEFAD637828B7290C BDA_PROMISCUOUS_MULTICAST;
MACRO_BDA BDA_RANGE_NOT_DEFINED;
MACRO_BDA BDA_RANGE_NOT_SET;
$7CE1FE37114556B00E2D910941BCF644 BDA_SIGNAL_ACTIVE;
$7CE1FE37114556B00E2D910941BCF644 BDA_SIGNAL_INACTIVE;
$7CE1FE37114556B00E2D910941BCF644 BDA_SIGNAL_UNAVAILABLE;
SpectralInversion BDA_SPECTRAL_INVERSION_AUTOMATIC;
SpectralInversion BDA_SPECTRAL_INVERSION_INVERTED;
SpectralInversion BDA_SPECTRAL_INVERSION_MAX;
SpectralInversion BDA_SPECTRAL_INVERSION_NORMAL;
SpectralInversion BDA_SPECTRAL_INVERSION_NOT_DEFINED;
SpectralInversion BDA_SPECTRAL_INVERSION_NOT_SET;
$BBECFD7EEFB9354C969D1C42B172D4E0 BDA_UNDEFINED_CHANNEL;
MPEG2StreamType BDA_UNITIALIZED_MPEG2STREAMTYPE;
TransmissionMode BDA_XMIT_MODE_2K;
TransmissionMode BDA_XMIT_MODE_8K;
TransmissionMode BDA_XMIT_MODE_MAX;
TransmissionMode BDA_XMIT_MODE_NOT_DEFINED;
TransmissionMode BDA_XMIT_MODE_NOT_SET;
MACRO_BI BI_BITFIELDS;
MACRO_BLOCK BLOCK_PERIOD_25;
MACRO_BLOCK BLOCK_PERIOD_2997;
MACRO_BMREQUEST BMREQUEST_CLASS;
MACRO_BMREQUEST BMREQUEST_DEVICE_TO_HOST;
MACRO_BMREQUEST BMREQUEST_HOST_TO_DEVICE;
MACRO_BMREQUEST BMREQUEST_STANDARD;
MACRO_BMREQUEST BMREQUEST_TO_DEVICE;
MACRO_BMREQUEST BMREQUEST_TO_ENDPOINT;
MACRO_BMREQUEST BMREQUEST_TO_INTERFACE;
MACRO_BMREQUEST BMREQUEST_TO_OTHER;
MACRO_BMREQUEST BMREQUEST_VENDOR;
MACRO_BOOTING BOOTING_IN_SAFEMODE_DSREPAIR;
MACRO_BOOTING BOOTING_IN_SAFEMODE_MINIMAL;
MACRO_BOOTING BOOTING_IN_SAFEMODE_NETWORK;
MACRO_BOOTLOG BOOTLOG_ENABLED;
MACRO_BOOTLOG BOOTLOG_LOADED;
MACRO_BOOTLOG BOOTLOG_NOT_LOADED;
MACRO_BOUND BOUND_IMAGE_UNSUPPORTED;
MACRO_BUFSIZ BUFSIZ;
MACRO_BUGCHECK BUGCHECK_MESSAGE_INTRO;
MACRO_BUGCHECK_TECH BUGCHECK_TECH_INFO;
MACRO_BUGCODE BUGCODE_ID_DRIVER;
MACRO_BUGCODE_NDIS BUGCODE_NDIS_DRIVER;
MACRO_BUGCODE_PSS_CRASH BUGCODE_PSS_CRASH_DONE;
MACRO_BUGCODE_PSS_CRASH BUGCODE_PSS_CRASH_INIT;
MACRO_BUGCODE_PSS_CRASH BUGCODE_PSS_CRASH_PROGRESS;
MACRO_BUGCODE_PSS BUGCODE_PSS_MESSAGE;
MACRO_BUGCODE_PSS_MESSAGE BUGCODE_PSS_MESSAGE_SIGNATURE;
MACRO_BUGCODE_USB BUGCODE_USB_DRIVER;
MACRO_BUS1394 BUS1394_CURRENT_DDI_VERSION;
MACRO_LOCATION BUSY_TIMEOUT_LOCATION;
MACRO_TAG BUS_EXTENSION_TAG;
MACRO_BUS_INTERFACE BUS_INTERFACE_REFERENCE_VERSION;
MACRO_LOCATION BUS_MANAGER_ID_LOCATION;
MACRO_BUS BUS_RESET_ABSENT_ON_POWER_UP;
MACRO_BUS BUS_RESET_BEGINNING;
MACRO_BUS BUS_RESET_FINISHED;
MACRO_BUS BUS_RESET_FLAGS_FORCE_ROOT;
MACRO_BUS BUS_RESET_FLAGS_PERFORM_RESET;
MACRO_BUS BUS_RESET_LOCAL_NODE_IS_BUS_MANAGER;
MACRO_BUS BUS_RESET_LOCAL_NODE_IS_ISOCH_MANAGER;
MACRO_BUS BUS_RESET_LOCAL_NODE_IS_ROOT;
MACRO_BUS BUS_RESET_SELFID_ENUMERATION_ERROR;
MACRO_BUS BUS_RESET_STORM_ERROR;
MACRO_BUS_RESPONSE BUS_RESPONSE_IS_RAW;
MACRO_LOCATION BUS_TIME_LOCATION;
_SUITE_TYPE BackOffice;
NTSTATUS __stdcall BdaCheckChanges(PIRP pIrp);
NTSTATUS __stdcall BdaCommitChanges(PIRP pIrp);
NTSTATUS __stdcall BdaCreateFilterFactory(PKSDEVICE pKSDevice, const KSFILTER_DESCRIPTOR *pFilterDescriptor, const BDA_FILTER_TEMPLATE *pBdaFilterTemplate);
NTSTATUS __stdcall BdaCreateFilterFactoryEx(PKSDEVICE pKSDevice, const KSFILTER_DESCRIPTOR *pFilterDescriptor, const BDA_FILTER_TEMPLATE *pBdaFilterTemplate, PKSFILTERFACTORY *ppKSFilterFactory);
NTSTATUS __stdcall BdaCreatePin(PKSFILTER pKSFilter, ULONG ulPinType, PULONG pulPinId);
NTSTATUS __stdcall BdaCreateTopology(PKSFILTER pKSFilter, ULONG InputPinId, ULONG OutputPinId);
NTSTATUS __stdcall BdaDeletePin(PKSFILTER pKSFilter, PULONG pulPinId);
NTSTATUS __stdcall BdaFilterFactoryUpdateCacheData(PKSFILTERFACTORY pFilterFactory, const KSFILTER_DESCRIPTOR *pFilterDescriptor);
NTSTATUS __stdcall BdaGetChangeState(PIRP pIrp, PBDA_CHANGE_STATE pChangeState);
NTSTATUS __stdcall BdaInitFilter(PKSFILTER pKSFilter, const BDA_FILTER_TEMPLATE *pBdaFilterTemplate);
NTSTATUS __stdcall BdaMethodCreatePin(PIRP pIrp, PKSMETHOD pKSMethod, PULONG pulPinFactoryID);
NTSTATUS __stdcall BdaMethodCreateTopology(PIRP pIrp, PKSMETHOD pKSMethod, PVOID pvIgnored);
NTSTATUS __stdcall BdaMethodDeletePin(PIRP pIrp, PKSMETHOD pKSMethod, PVOID pvIgnored);
NTSTATUS __stdcall BdaPropertyGetControllingPinId(PIRP Irp, PKSP_BDA_NODE_PIN Property, PULONG pulControllingPinId);
NTSTATUS __stdcall BdaPropertyGetPinControl(PIRP Irp, PKSPROPERTY Property, ULONG *pulProperty);
NTSTATUS __stdcall BdaPropertyNodeDescriptors(PIRP pIrp, PKSPROPERTY pKSProperty, BDANODE_DESCRIPTOR *pNodeDescriptorProperty);
NTSTATUS __stdcall BdaPropertyNodeEvents(PIRP pIrp, PKSP_NODE pKSProperty, GUID *pguidProperty);
NTSTATUS __stdcall BdaPropertyNodeMethods(PIRP pIrp, PKSP_NODE pKSProperty, GUID *pguidProperty);
NTSTATUS __stdcall BdaPropertyNodeProperties(PIRP pIrp, PKSP_NODE pKSProperty, GUID *pguidProperty);
NTSTATUS __stdcall BdaPropertyNodeTypes(PIRP pIrp, PKSPROPERTY pKSProperty, ULONG *pulProperty);
NTSTATUS __stdcall BdaPropertyPinTypes(PIRP pIrp, PKSPROPERTY pKSProperty, ULONG *pulProperty);
NTSTATUS __stdcall BdaPropertyTemplateConnections(PIRP pIrp, PKSPROPERTY pKSProperty, PKSTOPOLOGY_CONNECTION pConnectionProperty);
NTSTATUS __stdcall BdaStartChanges(PIRP pIrp);
NTSTATUS __stdcall BdaUninitFilter(PKSFILTER pKSFilter);
NTSTATUS __stdcall BdaValidateNodeProperty(PIRP pIrp, PKSPROPERTY pProperty);
_SUITE_TYPE Blade;
_CM_SERVICE_LOAD_TYPE BootLoad;
_KBUGCHECK_BUFFER_DUMP_STATE BufferEmpty;
_KBUGCHECK_BUFFER_DUMP_STATE BufferFinished;
_KBUGCHECK_BUFFER_DUMP_STATE BufferIncomplete;
_KBUGCHECK_BUFFER_DUMP_STATE BufferInserted;
_KBUGCHECK_BUFFER_DUMP_STATE BufferStarted;
$46A0A762E46BF16A5C029C85901AE439 BusQueryCompatibleIDs;
$46A0A762E46BF16A5C029C85901AE439 BusQueryDeviceID;
$46A0A762E46BF16A5C029C85901AE439 BusQueryDeviceSerialNumber;
$46A0A762E46BF16A5C029C85901AE439 BusQueryHardwareIDs;
$46A0A762E46BF16A5C029C85901AE439 BusQueryInstanceID;
_DEVICE_RELATION_TYPE BusRelations;
MACRO_OBJECT CACHE_INITIALIZATION_FAILED;
MACRO_CACHE CACHE_MANAGER;
MACRO_CANCEL CANCEL_STATE_IN_COMPLETED_IRP;
MACRO_CANNOT CANNOT_WRITE_CONFIGURATION;
$936EE475885E5E1972395CF18A9E441C CASCADE_FORM;
_INTERFACE_TYPE CBus;
MACRO_CC CC_MAX_HW_DECODE_LINES;
MACRO_FILE_SYSTEM CDFS_FILE_SYSTEM;
MACRO_LOCATION CHANNELS_AVAILABLE_LOCATION;
MACRO_CHIPSET CHIPSET_DETECTED_ERROR;
MACRO_CID CID_HANDLE_CREATION;
MACRO_CID CID_HANDLE_DELETION;
MACRO_CIP_HDR CIP_50_FIELDS;
MACRO_CIP_HDR CIP_60_FIELDS;
MACRO_CIP CIP_AUDIO_STYLE_SYT;
MACRO_CIP_HDR CIP_DBS_HDDV;
MACRO_CIP_HDR CIP_DBS_MPEG;
MACRO_CIP_HDR CIP_DBS_SDDV;
MACRO_CIP_HDR CIP_DBS_SDLDV;
MACRO_CIP CIP_DV_STYLE_SYT;
MACRO_CIP_HDR CIP_FMT_DV;
MACRO_CIP_HDR CIP_FMT_MPEG;
MACRO_CIP_HDR CIP_FN_DV;
MACRO_CIP_HDR CIP_FN_MPEG;
MACRO_CIP_HDR CIP_HDR_FDF0_50_60_MASK;
MACRO_CIP_HDR CIP_HDR_FDF0_50_60_NTSC;
MACRO_CIP_HDR CIP_HDR_FDF0_50_60_PAL;
MACRO_CIP_HDR CIP_HDR_FDF0_STYPE_HD_DVCR;
MACRO_CIP_HDR CIP_HDR_FDF0_STYPE_MASK;
MACRO_CIP_HDR CIP_HDR_FDF0_STYPE_SDL_DVCR;
MACRO_CIP_HDR CIP_HDR_FDF0_STYPE_SD_DVCPRO;
MACRO_CIP_HDR CIP_HDR_FDF0_STYPE_SD_DVCR;
MACRO_CIP_HDR CIP_HDR_FMT_DVCR;
MACRO_CIP_HDR CIP_HDR_FMT_MASK;
MACRO_CIP_HDR CIP_HDR_FMT_MPEG;
MACRO_CIP_HDR CIP_QPC_DV;
MACRO_CIP_HDR CIP_QPC_MPEG;
MACRO_CIP CIP_RESET_FRAME_ON_DISCONTINUITY;
MACRO_CIP_HDR CIP_SPH_DV;
MACRO_CIP_HDR CIP_SPH_MPEG;
MACRO_CIP CIP_STATUS_CORRUPT_FRAME;
MACRO_CIP CIP_STATUS_FIRST_FRAME;
MACRO_CIP CIP_STATUS_SUCCESS;
MACRO_CIP CIP_STRIP_SOURCE_HEADER;
MACRO_CIP_HDR CIP_STYPE_DV;
MACRO_CIP_HDR CIP_STYPE_DVCPRO;
MACRO_CIP CIP_TALK_DOUBLE_BUFFER;
MACRO_CIP CIP_TALK_USE_SPH_TIMESTAMP;
MACRO_CIP_HDR CIP_TSF_OFF;
MACRO_CIP_HDR CIP_TSF_ON;
MACRO_CIP CIP_USE_SOURCE_HEADER_TIMESTAMP;
MACRO_CIP CIP_VALIDATE_ALL_SOURCE;
MACRO_CIP CIP_VALIDATE_FIRST_SOURCE;
MACRO_LEVEL CLOCK1_LEVEL;
MACRO_LEVEL CLOCK2_LEVEL;
MACRO_CLOCK CLOCK_SUPPORT_CAN_READ_ONBOARD_CLOCK;
MACRO_CLOCK CLOCK_SUPPORT_CAN_RETURN_STREAM_TIME;
MACRO_CLOCK CLOCK_SUPPORT_CAN_SET_ONBOARD_CLOCK;
MACRO_CLSCTX CLSCTX_KERNEL_SERVER;
MACRO_CMP_ADDRESS CMP_ADDRESS_TYPE_EXCLUSIVE;
MACRO_CMP_ADDRESS CMP_ADDRESS_TYPE_GLOBAL;
$1CC95E689DB1A3C540445D2EA8FF4FA2 CMP_Broadcast;
MACRO_CMP CMP_PLUG_STATE_ACTIVE;
MACRO_CMP CMP_PLUG_STATE_IDLE;
MACRO_CMP CMP_PLUG_STATE_READY;
MACRO_CMP CMP_PLUG_STATE_SUSPENDED;
$8C42F93EAAD4EBF2FF4C30FDE456EABE CMP_PlugIn;
$8142B63D1170E3CCF91671CCCC3193B7 CMP_PlugLocal;
$8C42F93EAAD4EBF2FF4C30FDE456EABE CMP_PlugOut;
$8142B63D1170E3CCF91671CCCC3193B7 CMP_PlugRemote;
$1CC95E689DB1A3C540445D2EA8FF4FA2 CMP_PointToPoint;
MACRO_CMP CMP_SPEED_S100;
MACRO_CMP CMP_SPEED_S200;
MACRO_CMP CMP_SPEED_S400;
MACRO_CM CM_RESOURCE_DMA_16;
MACRO_CM CM_RESOURCE_DMA_32;
MACRO_CM CM_RESOURCE_DMA_8;
MACRO_CM CM_RESOURCE_DMA_8_AND_16;
MACRO_CM CM_RESOURCE_DMA_BUS_MASTER;
MACRO_CM CM_RESOURCE_DMA_TYPE_A;
MACRO_CM CM_RESOURCE_DMA_TYPE_B;
MACRO_CM CM_RESOURCE_DMA_TYPE_F;
MACRO_CM CM_RESOURCE_INTERRUPT_LATCHED;
MACRO_CM CM_RESOURCE_INTERRUPT_LEVEL_SENSITIVE;
MACRO_CM CM_RESOURCE_MEMORY_24;
MACRO_CM CM_RESOURCE_MEMORY_CACHEABLE;
MACRO_CM CM_RESOURCE_MEMORY_COMBINEDWRITE;
MACRO_CM CM_RESOURCE_MEMORY_PREFETCHABLE;
MACRO_CM CM_RESOURCE_MEMORY_READ_ONLY;
MACRO_CM CM_RESOURCE_MEMORY_READ_WRITE;
MACRO_CM CM_RESOURCE_MEMORY_WRITE_ONLY;
MACRO_CM CM_RESOURCE_PORT_10_BIT_DECODE;
MACRO_CM CM_RESOURCE_PORT_12_BIT_DECODE;
MACRO_CM CM_RESOURCE_PORT_16_BIT_DECODE;
MACRO_CM CM_RESOURCE_PORT_IO;
MACRO_CM CM_RESOURCE_PORT_MEMORY;
MACRO_CM CM_RESOURCE_PORT_PASSIVE_DECODE;
MACRO_CM CM_RESOURCE_PORT_POSITIVE_DECODE;
MACRO_CM CM_RESOURCE_PORT_WINDOW_DECODE;
MACRO_CNSS CNSS_FILE_SYSTEM_FILTER;
MACRO_KEY_SIGNATURE COMMAND_BASE_KEY_SIGNATURE;
MACRO_OBJECT CONFIG_INITIALIZATION_FAILED;
MACRO_OBJECT CONFIG_LIST_FAILED;
MACRO_CONFIG CONFIG_ROM_KEY_MASK;
MACRO_LOCATION CONFIG_ROM_LOCATION;
MACRO_CONFIG CONFIG_ROM_OFFSET_MASK;
MACRO_CONFIG_ROM CONFIG_ROM_SIGNATURE;
MACRO_CORRUPT CORRUPT_ACCESS_TOKEN;
MACRO_CREATE CREATE_DELETE_LOCK_NOT_LOCKED;
MACRO_CRITICAL_OBJECT CRITICAL_OBJECT_TERMINATION;
MACRO_CRITICAL CRITICAL_PROCESS_DIED;
MACRO_FAILED CRITICAL_SERVICE_FAILED;
MACRO_CRYSTAL CRYSTAL_NET_SFM_CODEC;
MACRO_CURRENT CURRENT_61883_DDI_VERSION;
MACRO_CURRENT_AVCSTRM CURRENT_AVCSTRM_DDI_VERSION;
MACRO_LOCATION CYCLE_TIME_LOCATION;
MACRO_C C_DEVICE_STATUS_CHANGE;
MACRO_C C_REMOVE_REQUEST;
ComponentCategory CategoryAudio;
ComponentCategory CategoryData;
ComponentCategory CategoryNotSet;
ComponentCategory CategoryOther;
ComponentCategory CategoryText;
ComponentCategory CategoryVideo;
_BUS_DATA_TYPE CbusConfiguration;
NTSTATUS __stdcall CmRegisterCallback(PEX_CALLBACK_FUNCTION Function, PVOID Context, PLARGE_INTEGER Cookie);
_CM_SHARE_DISPOSITION CmResourceShareDeviceExclusive;
_CM_SHARE_DISPOSITION CmResourceShareDriverExclusive;
_CM_SHARE_DISPOSITION CmResourceShareShared;
_CM_SHARE_DISPOSITION CmResourceShareUndetermined;
MACRO_CmResourceTypeBusNumber CmResourceTypeBusNumber;
MACRO_CmResourceTypeConfigData CmResourceTypeConfigData;
MACRO_CmResourceTypeDevicePrivate CmResourceTypeDevicePrivate;
MACRO_CmResourceTypeDeviceSpecific CmResourceTypeDeviceSpecific;
MACRO_CmResourceTypeMemory CmResourceTypeDma;
MACRO_CmResourceTypeNull CmResourceTypeInterrupt;
MACRO_CmResourceTypeMaximum CmResourceTypeMaximum;
MACRO_CmResourceTypeMemory CmResourceTypeMemory;
MACRO_CmResourceTypeMfCardConfig CmResourceTypeMfCardConfig;
MACRO_CmResourceTypeBusNumber CmResourceTypeNonArbitrated;
MACRO_CmResourceTypeNull CmResourceTypeNull;
MACRO_CmResourceTypePcCardConfig CmResourceTypePcCardConfig;
MACRO_CmResourceTypeNull CmResourceTypePort;
NTSTATUS __stdcall CmUnRegisterCallback(LARGE_INTEGER Cookie);
_BUS_DATA_TYPE Cmos;
_SUITE_TYPE CommunicationServer;
_DMA_SPEED Compatible;
_BUS_DATA_TYPE ConfigurationSpaceUndefined;
$ACDD7173F686B0B8EEB5D0397954DC28 ConstantBitRate;
_IO_COMPLETION_ROUTINE_RESULT ContinueCompletion;
_CREATE_FILE_TYPE CreateFileTypeMailslot;
_CREATE_FILE_TYPE CreateFileTypeNamedPipe;
_CREATE_FILE_TYPE CreateFileTypeNone;
_CM_ERROR_CONTROL_TYPE CriticalError;
_WORK_QUEUE_TYPE CriticalWorkQueue;
MACRO_SECURITY_INFORMATION DACL_SECURITY_INFORMATION;
MACRO_BUS_ERROR DATA_BUS_ERROR;
MACRO_COHERENCY_EXCEPTION DATA_COHERENCY_EXCEPTION;
NTSTATUS __stdcall DBCLASS_ClassDispatch(PDEVICE_OBJECT ControllerFdo, PIRP Irp, PBOOLEAN HandledByClass);
NTSTATUS __stdcall DBCLASS_FilterDispatch(PDEVICE_OBJECT ControllerFdo, PIRP Irp);
NTSTATUS __stdcall DBCLASS_RegisterBusFilter(ULONG DbclassVersion, PDRIVER_OBJECT BusFilterDriverObject, PDEVICE_OBJECT FilterFdo);
NTSTATUS __stdcall DBCLASS_RegisterController(ULONG DbclassVersion, PDEVICE_OBJECT ControllerFdo, PDEVICE_OBJECT TopOfStack, PDEVICE_OBJECT ControllerPdo, ULONG ControllerSig);
NTSTATUS __stdcall DBCLASS_SetD0_Complete(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall DBCLASS_UnRegisterController(PDEVICE_OBJECT ControllerFdo, PDEVICE_OBJECT TopOfStack);
MACRO_DBCLASS DBCLASS_VERSION;
MACRO_DBC_ACPI DBC_ACPI_CONTROLLER_SIG;
MACRO_DBC DBC_BAY_DESCRIPTOR_TYPE;
MACRO_DBC_IOCTL DBC_IOCTL_INTERNAL_INDEX;
MACRO_DBC_ACPI DBC_OEM_FILTER_SIG;
MACRO_DBC DBC_SUSBSYSTEM_DESCRIPTOR_TYPE;
MACRO_DBC_ACPI DBC_USB_CONTROLLER_SIG;
MACRO_DBG_0 DBG;
MACRO_DBG_NO DBG_APP_NOT_IDLE;
MACRO_DBG_REPLY DBG_COMMAND_EXCEPTION;
MACRO_DBG DBG_CONTINUE;
MACRO_DBG_REPLY DBG_CONTROL_BREAK;
MACRO_DBG_REPLY DBG_CONTROL_C;
MACRO_DBG DBG_EXCEPTION_HANDLED;
MACRO_DBG_EXCEPTION DBG_EXCEPTION_NOT_HANDLED;
MACRO_DBG_NO DBG_NO_STATE_CHANGE;
MACRO_DBG_REPLY DBG_PRINTEXCEPTION_C;
MACRO_DBG_REPLY DBG_REPLY_LATER;
MACRO_DBG_REPLY DBG_RIPEXCEPTION;
MACRO_DBG_STATUS DBG_STATUS_BUGCHECK_FIRST;
MACRO_DBG_STATUS DBG_STATUS_BUGCHECK_SECOND;
MACRO_DBG_STATUS DBG_STATUS_CONTROL_C;
MACRO_DBG_STATUS DBG_STATUS_DEBUG_CONTROL;
MACRO_DBG_STATUS DBG_STATUS_FATAL;
MACRO_DBG_STATUS DBG_STATUS_SYSRQ;
MACRO_DBG_STATUS DBG_STATUS_WORKER;
MACRO_DBG_REPLY DBG_TERMINATE_PROCESS;
MACRO_DBG_REPLY DBG_TERMINATE_THREAD;
MACRO_DBG_REPLY DBG_UNABLE_TO_PROVIDE_HANDLE;
MACRO_DC DC_BINNAMES;
MACRO_DC DC_BINS;
MACRO_DC DC_COPIES;
MACRO_DC DC_DRIVER;
MACRO_DC DC_DUPLEX;
MACRO_DC DC_ENUMRESOLUTIONS;
MACRO_DC DC_EXTRA;
MACRO_DC DC_FIELDS;
MACRO_DC DC_FILEDEPENDENCIES;
MACRO_DC DC_MAXEXTENT;
MACRO_DC DC_MINEXTENT;
MACRO_DC DC_ORIENTATION;
MACRO_DC DC_PAPERNAMES;
MACRO_DC DC_PAPERS;
MACRO_DC DC_PAPERSIZE;
MACRO_DC DC_SIZE;
MACRO_DC DC_TRUETYPE;
MACRO_DC DC_VERSION;
PVOID __stdcall DDK_ExAllocateFromNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside, PVOID F, ULONG L);
PVOID __stdcall DDK_ExAllocateFromPagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside, PVOID F, ULONG L);
PVOID __stdcall DDK_ExAllocatePool(POOL_TYPE PoolType, SIZE_T NumberOfBytes, PVOID F, ULONG L);
PVOID __stdcall DDK_ExAllocatePoolWithQuota(POOL_TYPE PoolType, SIZE_T NumberOfBytes, PVOID F, ULONG L);
PVOID __stdcall DDK_ExAllocatePoolWithQuotaTag(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag, PVOID F, ULONG L);
PVOID __stdcall DDK_ExAllocatePoolWithTag(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag, PVOID F, ULONG L);
PVOID __stdcall DDK_ExAllocatePoolWithTagPriority(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag, EX_POOL_PRIORITY Priority, PVOID F, ULONG L);
void __stdcall DDK_ExDeleteNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside, PVOID F, ULONG L);
void __stdcall DDK_ExDeletePagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside, PVOID F, ULONG L);
void __stdcall DDK_ExFreePool(PVOID P, PVOID F, ULONG L);
void __stdcall DDK_ExFreePoolWithTag(PVOID P, ULONG Tag, PVOID F, ULONG L);
void __stdcall DDK_ExFreeToNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside, PVOID Entry, PVOID F, ULONG L);
void __stdcall DDK_ExFreeToPagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside, PVOID Entry, PVOID F, ULONG L);
void __stdcall DDK_ExInitializeNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside, PALLOCATE_FUNCTION Allocate, PFREE_FUNCTION Free, ULONG Flags, SIZE_T Size, ULONG Tag, USHORT Depth, PVOID F, ULONG L);
void __stdcall DDK_ExInitializePagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside, PALLOCATE_FUNCTION Allocate, PFREE_FUNCTION Free, ULONG Flags, SIZE_T Size, ULONG Tag, USHORT Depth, PVOID F, ULONG L);
void __stdcall DDK_ExInitializeSListHead(PSLIST_HEADER SListHead, PVOID F, ULONG L);
PSINGLE_LIST_ENTRY __stdcall DDK_ExInterlockedFlushSList(PSLIST_HEADER ListHead, PVOID F, ULONG L);
PLIST_ENTRY __stdcall DDK_ExInterlockedInsertHeadList(PLIST_ENTRY ListHead, PLIST_ENTRY ListEntry, PKSPIN_LOCK Lock, PVOID F, ULONG L);
PLIST_ENTRY __stdcall DDK_ExInterlockedInsertTailList(PLIST_ENTRY ListHead, PLIST_ENTRY ListEntry, PKSPIN_LOCK Lock, PVOID F, ULONG L);
PSINGLE_LIST_ENTRY __stdcall DDK_ExInterlockedPopEntryList(PSINGLE_LIST_ENTRY ListHead, PKSPIN_LOCK, PVOID F, ULONG L);
PSINGLE_LIST_ENTRY __stdcall DDK_ExInterlockedPopEntrySList(PSLIST_HEADER ListHead, PKSPIN_LOCK Lock, PVOID F, ULONG L);
PSINGLE_LIST_ENTRY __stdcall DDK_ExInterlockedPushEntryList(PSINGLE_LIST_ENTRY ListHead, PSINGLE_LIST_ENTRY ListEntry, PKSPIN_LOCK, PVOID F, ULONG L);
PSINGLE_LIST_ENTRY __stdcall DDK_ExInterlockedPushEntrySList(PSLIST_HEADER ListHead, PSINGLE_LIST_ENTRY ListEntry, PKSPIN_LOCK Lock, PVOID F, ULONG L);
PLIST_ENTRY __stdcall DDK_ExInterlockedRemoveHeadList(PLIST_ENTRY ListHead, PKSPIN_LOCK Lock, PVOID F, ULONG L);
USHORT __stdcall DDK_ExQueryDepthSList(PSLIST_HEADER SListHead, PVOID F, ULONG L);
void __stdcall DDK_InitializeListHead(PLIST_ENTRY ListHead, PVOID F, ULONG L);
void __stdcall DDK_InsertHeadList(PLIST_ENTRY ListHead, PLIST_ENTRY Entry, PVOID F, ULONG L);
void __stdcall DDK_InsertTailList(PLIST_ENTRY ListHead, PLIST_ENTRY Entry, PVOID F, ULONG L);
NTSTATUS __stdcall DDK_IoConnectInterrupt(PKINTERRUPT *InterruptObject, PKSERVICE_ROUTINE ServiceRoutine, PVOID ServiceContext, PKSPIN_LOCK SpinLock, ULONG Vector, KIRQL Irql, KIRQL SynchronizeIrql, KINTERRUPT_MODE InterruptMode, BOOLEAN ShareVector, KAFFINITY ProcessorEnableMask, BOOLEAN FloatingSave, PVOID F, ULONG L);
void __stdcall DDK_IoCopyCurrentIrpStackLocationToNext(PIRP Irp, PVOID F, ULONG L);
PIO_STACK_LOCATION __stdcall DDK_IoGetCurrentIrpStackLocation(PIRP Irp, PVOID F, ULONG L);
PIO_STACK_LOCATION __stdcall DDK_IoGetNextIrpStackLocation(PIRP Irp, PVOID F, ULONG L);
void __stdcall DDK_IoMarkIrpPending(PIRP Irp, PVOID F, ULONG L);
PDRIVER_CANCEL __stdcall DDK_IoSetCancelRoutine(PIRP Irp, PDRIVER_CANCEL CancelRoutine, PVOID F, ULONG L);
void __stdcall DDK_IoSetCompletionRoutine(PIRP Irp, PIO_COMPLETION_ROUTINE CompletionRoutine, PVOID Context, BOOLEAN InvokeOnSuccess, BOOLEAN InvokeOnError, BOOLEAN InvokeOnCancel, PVOID F, ULONG L);
void __stdcall DDK_IoSetCompletionRoutineEx(PDEVICE_OBJECT DeviceObject, PIRP Irp, PIO_COMPLETION_ROUTINE CompletionRoutine, PVOID Context, BOOLEAN InvokeOnSuccess, BOOLEAN InvokeOnError, BOOLEAN InvokeOnCancel, PVOID F, ULONG L);
void __stdcall DDK_IoSetNextIrpStackLocation(PIRP Irp, PVOID F, ULONG L);
void __stdcall DDK_IoSkipCurrentIrpStackLocation(PIRP Irp, PVOID F, ULONG L);
BOOLEAN __stdcall DDK_IsListEmpty(PLIST_ENTRY ListHead, PVOID F, ULONG L);
KIRQL __stdcall DDK_KeAcquireInterruptSpinLock(PKINTERRUPT Interrupt, PVOID F, ULONG L);
void __stdcall DDK_KeAcquireSpinLock(PKSPIN_LOCK SpinLock, PKIRQL OldIrql, PVOID F, ULONG L);
void __stdcall DDK_KeAcquireSpinLockAtDpcLevel(PKSPIN_LOCK SpinLock, PVOID F, ULONG L);
void __stdcall DDK_KeInitializeSpinLock(PKSPIN_LOCK SpinLock, PVOID F, ULONG L);
void __stdcall DDK_KeReleaseInterruptSpinLock(PKINTERRUPT Interrupt, KIRQL OldIrql, PVOID F, ULONG L);
void __stdcall DDK_KeReleaseSpinLock(PKSPIN_LOCK SpinLock, KIRQL NewIrql, PVOID F, ULONG L);
void __stdcall DDK_KeReleaseSpinLockFromDpcLevel(PKSPIN_LOCK SpinLock, PVOID F, ULONG L);
PLIST_ENTRY __stdcall DDK_RemoveHeadList(PLIST_ENTRY ListHead, PVOID F, ULONG L);
PLIST_ENTRY __stdcall DDK_RemoveTailList(PLIST_ENTRY ListHead, PVOID F, ULONG L);
MACRO_DDPF DDPF_FOURCC;
MACRO_DEFAULT DEFAULT_AVC_RETRIES;
MACRO_DEFAULT DEFAULT_AVC_TIMEOUT;
MACRO_DELETE DELETE;
MACRO_UNKNOWN_LOGON_SESSION DEREF_UNKNOWN_LOGON_SESSION;
MACRO_DEREGISTER DEREGISTER_BUS_RESET_NOTIFY;
MACRO_DEREGISTER DEREGISTER_FCP_NOTIFY;
MACRO_MONITOR_PLUG_NOTIFY DEREGISTER_MONITOR_PLUG_NOTIFY;
MACRO_NOTIFICATION_ROUTINE DEREGISTER_NOTIFICATION_ROUTINE;
MACRO_DESCRIPTOR DESCRIPTOR_HEADER_SCATTER_GATHER;
MACRO_DESCRIPTOR DESCRIPTOR_PRIORITY_TIME_DELIVERY;
MACRO_DESCRIPTOR DESCRIPTOR_SYNCH_ON_ALL_TAGS;
MACRO_DESCRIPTOR DESCRIPTOR_SYNCH_ON_SY;
MACRO_DESCRIPTOR DESCRIPTOR_SYNCH_ON_TAG;
MACRO_DESCRIPTOR DESCRIPTOR_SYNCH_ON_TIME;
MACRO_DESCRIPTOR DESCRIPTOR_TIME_STAMP_ON_COMPLETION;
MACRO_DESCRIPTOR DESCRIPTOR_USE_SY_TAG_IN_FIRST;
MACRO_DEVICE_DESCRIPTION DEVICE_DESCRIPTION_VERSION;
MACRO_DEVICE_DESCRIPTION DEVICE_DESCRIPTION_VERSION1;
MACRO_DEVICE_DESCRIPTION DEVICE_DESCRIPTION_VERSION2;
MACRO_TAG DEVICE_EXTENSION_TAG;
MACRO_DEVICE_INTERFACE DEVICE_INTERFACE_INCLUDE_NONACTIVE;
MACRO_DEVICE DEVICE_QUEUE_NOT_BUSY;
MACRO_DEVICE_REFERENCE DEVICE_REFERENCE_COUNT_NOT_ZERO;
MACRO_DEVICE_STATUS DEVICE_STATUS_CHANGE_ENABLE;
MACRO_DEVICE_UI DEVICE_UI_FIRMWARE_REVISION_FirmwareRevision_ID;
MACRO_DFS DFS_FILE_SYSTEM;
MACRO_DIAGLEVEL DIAGLEVEL_HIDE_OPLUG;
MACRO_DIAGLEVEL DIAGLEVEL_IGNORE_IPLUG;
MACRO_DIAGLEVEL DIAGLEVEL_IGNORE_OPLUG;
MACRO_DIAGLEVEL DIAGLEVEL_IPCR_ALWAYS_ALLOC;
MACRO_DIAGLEVEL DIAGLEVEL_IPCR_IGNORE_FREE;
MACRO_DIAGLEVEL DIAGLEVEL_NONE;
MACRO_DIAGLEVEL DIAGLEVEL_SET_CHANNEL_63;
MACRO_DIAGLEVEL DIAGLEVEL_SPECIFY_BLOCKSIZE;
MACRO_DIRECTORY DIRECTORY_ALL_ACCESS;
MACRO_DIRECTORY DIRECTORY_CREATE_OBJECT;
MACRO_DIRECTORY DIRECTORY_CREATE_SUBDIRECTORY;
MACRO_DIRECTORY DIRECTORY_QUERY;
MACRO_DIRECTORY DIRECTORY_TRAVERSE;
$936EE475885E5E1972395CF18A9E441C DIRECT_FORM;
MACRO_DIRTY DIRTY_MAPPED_PAGES_CONGESTION;
MACRO_DIRTY_NOWRITE DIRTY_NOWRITE_PAGES_CONGESTION;
MACRO_DISORDERLY DISORDERLY_SHUTDOWN;
MACRO_LENGTH DISPATCH_LENGTH;
MACRO_LEVEL DISPATCH_LEVEL;
MACRO_DM DM_COPY;
MACRO_DM DM_IN_BUFFER;
MACRO_DM DM_IN_PROMPT;
MACRO_DM DM_MODIFY;
MACRO_DM DM_OUT_BUFFER;
MACRO_DM DM_OUT_DEFAULT;
MACRO_DM DM_PROMPT;
MACRO_DM DM_UPDATE;
MACRO_DO DO_BUFFERED_IO;
MACRO_DO DO_BUS_ENUMERATED_DEVICE;
MACRO_DO DO_DEVICE_INITIALIZING;
MACRO_DO DO_DIRECT_IO;
MACRO_DO DO_EXCLUSIVE;
MACRO_DO DO_MAP_IO_BUFFER;
MACRO_DO DO_POWER_INRUSH;
MACRO_DO DO_POWER_PAGABLE;
MACRO_DO DO_SHUTDOWN_REGISTERED;
MACRO_DO DO_VERIFY_VOLUME;
MACRO_DPC DPC_NORMAL;
MACRO_DPC DPC_THREADED;
_DPFLTR_TYPE DPFLTR_ACPI_ID;
_DPFLTR_TYPE DPFLTR_AMLI_ID;
_DPFLTR_TYPE DPFLTR_AUTOCHK_ID;
_DPFLTR_TYPE DPFLTR_BURNENG_ID;
_DPFLTR_TYPE DPFLTR_CDAUDIO_ID;
_DPFLTR_TYPE DPFLTR_CDROM_ID;
_DPFLTR_TYPE DPFLTR_CLASSPNP_ID;
_DPFLTR_TYPE DPFLTR_CONFIG_ID;
_DPFLTR_TYPE DPFLTR_CRASHDUMP_ID;
_DPFLTR_TYPE DPFLTR_DCOMSS_ID;
_DPFLTR_TYPE DPFLTR_DFRGIFC_ID;
_DPFLTR_TYPE DPFLTR_DISK_ID;
_DPFLTR_TYPE DPFLTR_DMADMIN_ID;
_DPFLTR_TYPE DPFLTR_DMCONFIG_ID;
_DPFLTR_TYPE DPFLTR_DMIO_ID;
_DPFLTR_TYPE DPFLTR_DMSERVER_ID;
_DPFLTR_TYPE DPFLTR_DMSYNTH_ID;
_DPFLTR_TYPE DPFLTR_ENDOFTABLE_ID;
MACRO_DPFLTR DPFLTR_ERROR_LEVEL;
_DPFLTR_TYPE DPFLTR_FASTFAT_ID;
_DPFLTR_TYPE DPFLTR_FCPORT_ID;
_DPFLTR_TYPE DPFLTR_FDC_ID;
_DPFLTR_TYPE DPFLTR_FLOPPY_ID;
_DPFLTR_TYPE DPFLTR_FLTMGR_ID;
_DPFLTR_TYPE DPFLTR_FSTUB_ID;
_DPFLTR_TYPE DPFLTR_FUSION_ID;
_DPFLTR_TYPE DPFLTR_HALIA64_ID;
_DPFLTR_TYPE DPFLTR_HPS_ID;
_DPFLTR_TYPE DPFLTR_I8042PRT_ID;
_DPFLTR_TYPE DPFLTR_IDEP_ID;
_DPFLTR_TYPE DPFLTR_IDLETASK_ID;
_DPFLTR_TYPE DPFLTR_IHVAUDIO_ID;
_DPFLTR_TYPE DPFLTR_IHVBUS_ID;
_DPFLTR_TYPE DPFLTR_IHVDRIVER_ID;
_DPFLTR_TYPE DPFLTR_IHVNETWORK_ID;
_DPFLTR_TYPE DPFLTR_IHVSTREAMING_ID;
_DPFLTR_TYPE DPFLTR_IHVVIDEO_ID;
_DPFLTR_TYPE DPFLTR_IMAPI_ID;
_DPFLTR_TYPE DPFLTR_INFINIBAND_ID;
MACRO_DPFLTR DPFLTR_INFO_LEVEL;
_DPFLTR_TYPE DPFLTR_ISAPNP_ID;
_DPFLTR_TYPE DPFLTR_KBDCLASS_ID;
_DPFLTR_TYPE DPFLTR_KBDHID_ID;
_DPFLTR_TYPE DPFLTR_LDR_ID;
_DPFLTR_TYPE DPFLTR_LSERMOUS_ID;
MACRO_DPFLTR DPFLTR_MASK;
_DPFLTR_TYPE DPFLTR_MCHGR_ID;
_DPFLTR_TYPE DPFLTR_MOUCLASS_ID;
_DPFLTR_TYPE DPFLTR_MOUHID_ID;
_DPFLTR_TYPE DPFLTR_NETAPI_ID;
_DPFLTR_TYPE DPFLTR_NTFS_ID;
_DPFLTR_TYPE DPFLTR_NTOSPNP_ID;
_DPFLTR_TYPE DPFLTR_PCIIDE_ID;
_DPFLTR_TYPE DPFLTR_PCI_ID;
_DPFLTR_TYPE DPFLTR_PNPMEM_ID;
_DPFLTR_TYPE DPFLTR_PNPMGR_ID;
_DPFLTR_TYPE DPFLTR_PREFETCHER_ID;
_DPFLTR_TYPE DPFLTR_PRINTSPOOLER_ID;
_DPFLTR_TYPE DPFLTR_PROCESSOR_ID;
_DPFLTR_TYPE DPFLTR_REDBOOK_ID;
_DPFLTR_TYPE DPFLTR_RPCPROXY_ID;
_DPFLTR_TYPE DPFLTR_RSFILTER_ID;
_DPFLTR_TYPE DPFLTR_RTLTHREADPOOL_ID;
_DPFLTR_TYPE DPFLTR_SAMSS_ID;
_DPFLTR_TYPE DPFLTR_SCCLIENT_ID;
_DPFLTR_TYPE DPFLTR_SCSERVER_ID;
_DPFLTR_TYPE DPFLTR_SCSIMINIPORT_ID;
_DPFLTR_TYPE DPFLTR_SCSIPORT_ID;
_DPFLTR_TYPE DPFLTR_SERENUM_ID;
_DPFLTR_TYPE DPFLTR_SERIAL_ID;
_DPFLTR_TYPE DPFLTR_SERMOUSE_ID;
_DPFLTR_TYPE DPFLTR_SETUP_ID;
_DPFLTR_TYPE DPFLTR_SHPC_ID;
_DPFLTR_TYPE DPFLTR_SIS_ID;
_DPFLTR_TYPE DPFLTR_SMSS_ID;
_DPFLTR_TYPE DPFLTR_SOFTPCI_ID;
_DPFLTR_TYPE DPFLTR_SR_ID;
_DPFLTR_TYPE DPFLTR_STORMINIPORT_ID;
_DPFLTR_TYPE DPFLTR_STORPORT_ID;
_DPFLTR_TYPE DPFLTR_STORPROP_ID;
_DPFLTR_TYPE DPFLTR_SVCHOST_ID;
_DPFLTR_TYPE DPFLTR_SXS_ID;
_DPFLTR_TYPE DPFLTR_SYSTEM_ID;
_DPFLTR_TYPE DPFLTR_TAPE_ID;
_DPFLTR_TYPE DPFLTR_TCPIP6_ID;
_DPFLTR_TYPE DPFLTR_TCPIP_ID;
_DPFLTR_TYPE DPFLTR_TERMSRV_ID;
MACRO_DPFLTR DPFLTR_TRACE_LEVEL;
_DPFLTR_TYPE DPFLTR_TWOTRACK_ID;
_DPFLTR_TYPE DPFLTR_UHCD_ID;
_DPFLTR_TYPE DPFLTR_UNIMODEM_ID;
_DPFLTR_TYPE DPFLTR_VDSBAS_ID;
_DPFLTR_TYPE DPFLTR_VDSDYNDR_ID;
_DPFLTR_TYPE DPFLTR_VDSUTIL_ID;
_DPFLTR_TYPE DPFLTR_VDS_ID;
_DPFLTR_TYPE DPFLTR_VERIFIER_ID;
_DPFLTR_TYPE DPFLTR_VIDEOPRT_ID;
_DPFLTR_TYPE DPFLTR_VIDEO_ID;
_DPFLTR_TYPE DPFLTR_VSSDYNDISK_ID;
_DPFLTR_TYPE DPFLTR_VSS_ID;
_DPFLTR_TYPE DPFLTR_W32TIME_ID;
MACRO_DPFLTR DPFLTR_WARNING_LEVEL;
_DPFLTR_TYPE DPFLTR_WMICORE_ID;
_DPFLTR_TYPE DPFLTR_WMILIB_ID;
_DPFLTR_TYPE DPFLTR_WSOCKTRANSPORT_ID;
MACRO_DRB DRB_FUNCTION_CHANGE_REQUEST;
MACRO_DRB DRB_FUNCTION_CLEAR_BAY_FEATURE;
MACRO_DRB DRB_FUNCTION_EJECT_DEVICE_IN_BAY;
MACRO_DRB DRB_FUNCTION_GET_BAY_DESCRIPTOR;
MACRO_DRB DRB_FUNCTION_GET_BAY_STATUS;
MACRO_DRB DRB_FUNCTION_GET_CONTROLLER_STATUS;
MACRO_DRB DRB_FUNCTION_GET_SUBSYSTEM_DESCRIPTOR;
MACRO_DRB DRB_FUNCTION_SET_BAY_FEATURE;
MACRO_DRB DRB_FUNCTION_START_DEVICE_IN_BAY;
MACRO_DRB DRB_FUNCTION_STOP_DEVICE_IN_BAY;
MACRO_DRIVER_VERIFIER DRIVER_CAUGHT_MODIFYING_FREED_POOL;
MACRO_DRIVER_VERIFIER DRIVER_CORRUPTED_EXPOOL;
MACRO_DRIVER_CORRUPTED DRIVER_CORRUPTED_MMPOOL;
MACRO_DRIVER_CORRUPTED_SYSPTES DRIVER_CORRUPTED_SYSPTES;
MACRO_DRIVER_CORRUPTED_SYSPTES DRIVER_INVALID_STACK_ACCESS;
MACRO_DRIVER_CORRUPTED DRIVER_IRQL_NOT_LESS_OR_EQUAL;
MACRO_DRIVER_LEFT DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS;
MACRO_DRIVER_OVERRAN DRIVER_OVERRAN_STACK_BUFFER;
MACRO_DRIVER_PAGE DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION;
MACRO_DRIVER_PAGE DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL;
MACRO_DRIVER_CORRUPTED DRIVER_PORTION_MUST_BE_NONPAGED;
MACRO_DRIVER DRIVER_POWER_STATE_FAILURE;
MACRO_DRIVER_RETURNED DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN;
MACRO_DRIVER_UNLOADED DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS;
MACRO_DRIVER_PAGE DRIVER_UNMAPPING_INVALID_VIEW;
MACRO_DRIVER_PAGE DRIVER_USED_EXCESSIVE_PTES;
MACRO_DRIVER_VERIFIER DRIVER_VERIFIER_DETECTED_VIOLATION;
MACRO_DRIVER_VERIFIER_DMA DRIVER_VERIFIER_DMA_VIOLATION;
MACRO_DRIVER_VERIFIER_IOMANAGER DRIVER_VERIFIER_IOMANAGER_VIOLATION;
MACRO_DRVO DRVO_BUILTIN_DRIVER;
MACRO_DRVO DRVO_LEGACY_DRIVER;
MACRO_DRVO DRVO_UNLOAD_INVOKED;
$FDE649CC57CE41CE85FECAF000FEEDF5 DS3D_HRTF_VERSION_1;
MACRO_DUPLICATE DUPLICATE_CLOSE_SOURCE;
MACRO_DUPLICATE DUPLICATE_SAME_ACCESS;
MACRO_DUPLICATE DUPLICATE_SAME_ATTRIBUTES;
DVBSystemType DVB_Cable;
DVBSystemType DVB_Satellite;
DVBSystemType DVB_Terrestrial;
_SUITE_TYPE DataCenter;
void __stdcall DbgBreakPoint();
NTSTATUS __stdcall DeRegisterOpRegionHandler(PDEVICE_OBJECT DeviceObject, PVOID OperationRegionObject);
_IO_ALLOCATION_ACTION DeallocateObject;
_IO_ALLOCATION_ACTION DeallocateObjectKeepRegisters;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelError;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelFatal;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelInfo;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelMaximum;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelTrace;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelVerbose;
$EEDC202E1D6A59707A46C9F564CBCDC1 DebugLevelWarning;
_KWAIT_REASON DelayExecution;
_WORK_QUEUE_TYPE DelayedWorkQueue;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE DeleteDeviceEvent;
_SECURITY_OPERATION_CODE DeleteSecurityDescriptor;
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE DeleteStreamEvent;
_CM_SERVICE_LOAD_TYPE DemandLoad;
_USB_CONNECTION_STATUS DeviceCausedOvercurrent;
_USB_CONNECTION_STATUS DeviceConnected;
_USB_CONNECTION_STATUS DeviceFailedEnumeration;
_USB_CONNECTION_STATUS DeviceGeneralFailure;
_USB_CONNECTION_STATUS DeviceHubNestedTooDeeply;
_USB_CONNECTION_STATUS DeviceInLegacyHub;
$0A8504B2A02FDAAC5DE9FC241C2D2824 DeviceInterfaceRegistryKey;
_USB_CONNECTION_STATUS DeviceNotEnoughBandwidth;
_USB_CONNECTION_STATUS DeviceNotEnoughPower;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE DeviceNotificationMaximum;
DeviceObjectState DeviceObjectRemoved;
DeviceObjectState DeviceObjectStarted;
DeviceObjectState DeviceObjectStopped;
_POWER_STATE_TYPE DevicePowerState;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyAddress;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyBootConfiguration;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyBootConfigurationTranslated;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyBusNumber;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyBusTypeGuid;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyClassGuid;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyClassName;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyCompatibleIDs;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyDeviceDescription;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyDriverKeyName;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyEnumeratorName;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyFriendlyName;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyHardwareID;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyInstallState;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyLegacyBusType;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyLocationInformation;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyManufacturer;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyPhysicalDeviceObjectName;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyRemovalPolicy;
$7392A4CB0F03A8B0718AEF6E3D9052C7 DevicePropertyUINumber;
$0A8504B2A02FDAAC5DE9FC241C2D2824 DeviceRegistryKey;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE DeviceRequestComplete;
$CD1AEEBAB641DEC86F01C12702A854EA DeviceTextDescription;
$CD1AEEBAB641DEC86F01C12702A854EA DeviceTextLocationInformation;
_DEVICE_USAGE_NOTIFICATION_TYPE DeviceUsageTypeDumpFile;
_DEVICE_USAGE_NOTIFICATION_TYPE DeviceUsageTypeHibernation;
_DEVICE_USAGE_NOTIFICATION_TYPE DeviceUsageTypePaging;
_DEVICE_USAGE_NOTIFICATION_TYPE DeviceUsageTypeUndefined;
_CM_SERVICE_LOAD_TYPE DisableLoad;
_STREAM_PRIORITY Dispatch;
$6482D7A0F8ECEE932DF178E2624E51B8 DmaBuffer;
_POOL_TYPE DontUseThisType;
$0A8504B2A02FDAAC5DE9FC241C2D2824 DriverRegistryKey;
_CM_SERVICE_NODE_TYPE DriverType;
NTSTATUS __stdcall DrmAddContentHandlers(ULONG ContentId, PVOID *paHandlers, ULONG NumHandlers);
NTSTATUS __stdcall DrmCreateContentMixed(PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);
NTSTATUS __stdcall DrmDestroyContent(ULONG ContentId);
NTSTATUS __stdcall DrmForwardContentToDeviceObject(ULONG ContentId, PVOID Reserved, PCDRMFORWARD DrmForward);
NTSTATUS __stdcall DrmForwardContentToFileObject(ULONG ContentId, PFILE_OBJECT FileObject);
NTSTATUS __stdcall DrmForwardContentToInterface(ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);
NTSTATUS __stdcall DrmGetContentRights(ULONG ContentId, PDRMRIGHTS DrmRights);
_USB_CONTROLLER_FLAVOR EHCI_Generic;
_USB_CONTROLLER_FLAVOR EHCI_Lucent;
_USB_CONTROLLER_FLAVOR EHCI_NEC;
MACRO_EISA EISA_EMPTY_SLOT;
MACRO_EISA EISA_FREE_FORM_DATA;
MACRO_EISA EISA_FUNCTION_ENABLED;
MACRO_EISA EISA_HAS_DMA_ENTRY;
MACRO_EISA EISA_HAS_INFORMATION;
MACRO_EISA EISA_HAS_IRQ_ENTRY;
MACRO_EISA EISA_HAS_MEMORY_ENTRY;
MACRO_EISA EISA_HAS_PORT_INIT_ENTRY;
MACRO_EISA EISA_HAS_PORT_RANGE;
MACRO_EISA EISA_HAS_TYPE_ENTRY;
MACRO_EISA EISA_INVALID_BIOS_CALL;
MACRO_EISA EISA_INVALID_CONFIGURATION;
MACRO_EISA EISA_INVALID_FUNCTION;
MACRO_EISA EISA_INVALID_SLOT;
MACRO_EISA EISA_MEMORY_TYPE_RAM;
MACRO_EISA EISA_MORE_ENTRIES;
MACRO_EISA EISA_SYSTEM_MEMORY;
MACRO_EMPTY EMPTY_THREAD_REAPER_LIST;
MACRO_EMULATOR EMULATOR_READ_ACCESS;
MACRO_EMULATOR EMULATOR_WRITE_ACCESS;
MACRO_ENABLE_DISABLE ENABLE_DISABLE_FP_IN_Enable_ID;
MACRO_ENABLE_DISABLE_FP ENABLE_DISABLE_FP_POLLING_IN_Enable_ID;
MACRO_ENABLE_DISABLE_FP ENABLE_DISABLE_FP_POLLING_IN_Period_ID;
MACRO_ENABLE_OFFLINE ENABLE_OFFLINE_DIAGS_OUT_Success_ID;
MACRO_ENABLE ENABLE_VID_POWER;
MACRO_ENABLE_VOP ENABLE_VOP_POWER;
MACRO_END END_OF_NT_EVALUATION_PERIOD;
MACRO_EOF EOF;
MACRO_EPT_NT EPT_NT_CANT_CREATE;
MACRO_EPT EPT_NT_CANT_PERFORM_OP;
MACRO_EPT EPT_NT_INVALID_ENTRY;
MACRO_EPT EPT_NT_NOT_REGISTERED;
MACRO_ERROR_LOG ERROR_LOG_LIMIT_SIZE;
MACRO_ERROR ERROR_SEVERITY_ERROR;
MACRO_ERROR ERROR_SEVERITY_INFORMATIONAL;
MACRO_ERROR ERROR_SEVERITY_SUCCESS;
MACRO_ERROR ERROR_SEVERITY_WARNING;
MACRO_ES ES_CONTINUOUS;
MACRO_ES ES_DISPLAY_REQUIRED;
MACRO_ES ES_SYSTEM_REQUIRED;
MACRO_ES ES_USER_PRESENT;
MACRO_EVENT EVENT_ALL_ACCESS;
MACRO_INCREMENT EVENT_INCREMENT;
MACRO_EVENT EVENT_MODIFY_STATE;
MACRO_EVENT EVENT_QUERY_STATE;
MACRO_EXCEPTION EXCEPTION_CONTINUE_EXECUTION;
MACRO_EXCEPTION EXCEPTION_CONTINUE_SEARCH;
MACRO_EXCEPTION EXCEPTION_EXECUTE_HANDLER;
MACRO_EXCEPTION_NONCONTINUABLE EXCEPTION_MAXIMUM_PARAMETERS;
MACRO_EXCEPTION_NONCONTINUABLE EXCEPTION_NONCONTINUABLE;
MACRO_EXECUTE EXECUTE_SELF_TEST_IN_Subcommand_ID;
MACRO_EXECUTE EXECUTE_SELF_TEST_OUT_ReturnCode_ID;
MACRO_EXT EXT_TCODE_BOUNDED_ADD;
MACRO_EXT EXT_TCODE_COMPARE_SWAP;
MACRO_EXT EXT_TCODE_FETCH_ADD;
MACRO_EXT EXT_TCODE_LITTLE_ADD;
MACRO_EXT EXT_TCODE_MASK_SWAP;
MACRO_EXT EXT_TCODE_RESERVED0;
MACRO_EXT EXT_TCODE_WRAP_ADD;
_INTERFACE_TYPE Eisa;
_BUS_DATA_TYPE EisaConfiguration;
_DEVICE_RELATION_TYPE EjectionRelations;
_SUITE_TYPE EmbeddedNT;
_SUITE_TYPE EmbeddedRestricted;
MACRO_EnableDisableFailurePredictionPolling EnableDisableFailurePredictionPolling;
MACRO_EnableDisableHardwareFailurePrediction EnableDisableHardwareFailurePrediction;
MACRO_EnableOfflineDiags EnableOfflineDiags;
_ALTERNATIVE_ARCHITECTURE_TYPE EndAlternatives;
_SUITE_TYPE Enterprise;
_USB_NOTIFICATION_TYPE EnumerationFailure;
_IO_NOTIFICATION_EVENT_CATEGORY EventCategoryDeviceInterfaceChange;
_IO_NOTIFICATION_EVENT_CATEGORY EventCategoryHardwareProfileChange;
_IO_NOTIFICATION_EVENT_CATEGORY EventCategoryReserved;
_IO_NOTIFICATION_EVENT_CATEGORY EventCategoryTargetDeviceChange;
_TRACE_INFORMATION_CLASS EventLoggerHandleClass;
BOOLEAN __stdcall ExAcquireResourceExclusiveLite(PERESOURCE Resource, BOOLEAN Wait);
BOOLEAN __stdcall ExAcquireResourceSharedLite(PERESOURCE Resource, BOOLEAN Wait);
BOOLEAN __stdcall ExAcquireSharedStarveExclusive(PERESOURCE Resource, BOOLEAN Wait);
BOOLEAN __stdcall ExAcquireSharedWaitForExclusive(PERESOURCE Resource, BOOLEAN Wait);
PVOID __stdcall ExAllocateFromNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside);
PVOID __stdcall ExAllocateFromPagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside);
PVOID __stdcall ExAllocatePool(POOL_TYPE PoolType, SIZE_T NumberOfBytes);
PVOID __stdcall ExAllocatePoolWithQuota(POOL_TYPE PoolType, SIZE_T NumberOfBytes);
PVOID __stdcall ExAllocatePoolWithQuotaTag(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag);
PVOID __stdcall ExAllocatePoolWithTag(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag);
PVOID __stdcall ExAllocatePoolWithTagPriority(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag, EX_POOL_PRIORITY Priority);
void __stdcall ExConvertExclusiveToSharedLite(PERESOURCE Resource);
NTSTATUS __stdcall ExCreateCallback(PCALLBACK_OBJECT *CallbackObject, POBJECT_ATTRIBUTES ObjectAttributes, BOOLEAN Create, BOOLEAN AllowMultipleCallbacks);
void __stdcall ExDeleteNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside);
void __stdcall ExDeletePagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside);
NTSTATUS __stdcall ExDeleteResourceLite(PERESOURCE Resource);
void __stdcall ExFreePool(PVOID P);
void __stdcall ExFreePoolWithTag(PVOID P, ULONG Tag);
void __stdcall ExFreeToNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside, PVOID Entry);
void __stdcall ExFreeToPagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside, PVOID Entry);
ULONG __stdcall ExGetExclusiveWaiterCount(PERESOURCE Resource);
KPROCESSOR_MODE ExGetPreviousMode(void);
ULONG __stdcall ExGetSharedWaiterCount(PERESOURCE Resource);
void __stdcall ExInitializeNPagedLookasideList(PNPAGED_LOOKASIDE_LIST Lookaside, PALLOCATE_FUNCTION Allocate, PFREE_FUNCTION Free, ULONG Flags, SIZE_T Size, ULONG Tag, USHORT Depth);
void __stdcall ExInitializePagedLookasideList(PPAGED_LOOKASIDE_LIST Lookaside, PALLOCATE_FUNCTION Allocate, PFREE_FUNCTION Free, ULONG Flags, SIZE_T Size, ULONG Tag, USHORT Depth);
NTSTATUS __stdcall ExInitializeResourceLite(PERESOURCE Resource);
LARGE_INTEGER __stdcall ExInterlockedAddLargeInteger(PLARGE_INTEGER Addend, LARGE_INTEGER Increment, PKSPIN_LOCK Lock);
BOOLEAN __stdcall ExIsProcessorFeaturePresent(ULONG ProcessorFeature);
BOOLEAN __stdcall ExIsResourceAcquiredExclusiveLite(PERESOURCE Resource);
ULONG __stdcall ExIsResourceAcquiredSharedLite(PERESOURCE Resource);
void __stdcall ExLocalTimeToSystemTime(PLARGE_INTEGER LocalTime, PLARGE_INTEGER SystemTime);
void __stdcall ExNotifyCallback(PVOID CallbackObject, PVOID Argument1, PVOID Argument2);
void __stdcall ExQueueWorkItem(PWORK_QUEUE_ITEM WorkItem, WORK_QUEUE_TYPE QueueType);
void __stdcall ExRaiseStatus(NTSTATUS Status);
PVOID __stdcall ExRegisterCallback(PCALLBACK_OBJECT CallbackObject, PCALLBACK_FUNCTION CallbackFunction, PVOID CallbackContext);
NTSTATUS __stdcall ExReinitializeResourceLite(PERESOURCE Resource);
void __stdcall ExReleaseResourceForThreadLite(PERESOURCE Resource, ERESOURCE_THREAD ResourceThreadId);
void __stdcall ExSetResourceOwnerPointer(PERESOURCE Resource, PVOID OwnerPointer);
ULONG __stdcall ExSetTimerResolution(ULONG DesiredTime, BOOLEAN SetResolution);
void __stdcall ExSystemTimeToLocalTime(PLARGE_INTEGER SystemTime, PLARGE_INTEGER LocalTime);
BOOLEAN __stdcall ExTryToAcquireResourceExclusiveLite(PERESOURCE Resource);
void __stdcall ExUnregisterCallback(PVOID CallbackRegistration);
BOOLEAN __stdcall ExVerifySuite(SUITE_TYPE SuiteType);
_EXCEPTION_DISPOSITION ExceptionCollidedUnwind;
_EXCEPTION_DISPOSITION ExceptionContinueExecution;
_EXCEPTION_DISPOSITION ExceptionContinueSearch;
_EXCEPTION_DISPOSITION ExceptionNestedException;
MACRO_ExecuteSelfTest ExecuteSelfTest;
_KWAIT_REASON Executive;
MACRO_FACILITY FACILITY_ACPI_ERROR_CODE;
MACRO_FACILITY FACILITY_CLUSTER_ERROR_CODE;
MACRO_FACILITY FACILITY_DEBUGGER;
MACRO_FACILITY FACILITY_FIREWIRE_ERROR_CODE;
MACRO_FACILITY FACILITY_HID_ERROR_CODE;
MACRO_FACILITY FACILITY_IO_ERROR_CODE;
MACRO_FACILITY_MCA FACILITY_MCA_ERROR_CODE;
MACRO_FACILITY FACILITY_RPC_RUNTIME;
MACRO_FACILITY FACILITY_RPC_STUBS;
MACRO_FACILITY FACILITY_SXS_ERROR_CODE;
MACRO_FACILITY FACILITY_TERMINAL_SERVER;
MACRO_FACILITY FACILITY_USB_ERROR_CODE;
MACRO_BOOL FALSE;
MACRO_STREAMS FATAL_UNHANDLED_HARD_ERROR;
MACRO_FILE_SYSTEM FAT_FILE_SYSTEM;
MACRO_FILENAME FILENAME_MAX;
MACRO_FILE_ANY FILE_128_BYTE_ALIGNMENT;
MACRO_FILE_ANY FILE_256_BYTE_ALIGNMENT;
MACRO_FILE_ANY FILE_32_BYTE_ALIGNMENT;
MACRO_FILE_ANY FILE_512_BYTE_ALIGNMENT;
MACRO_FILE_ANY FILE_64_BYTE_ALIGNMENT;
MACRO_FILE_ANY FILE_ADD_FILE;
MACRO_FILE_ANY FILE_ADD_SUBDIRECTORY;
MACRO_FILE_ANY FILE_ALL_ACCESS;
MACRO_FILE_ANY FILE_ANY_ACCESS;
MACRO_FILE_ANY FILE_APPEND_DATA;
MACRO_FILE_ANY FILE_ATTRIBUTE_ARCHIVE;
MACRO_FILE_ANY FILE_ATTRIBUTE_COMPRESSED;
MACRO_FILE_ANY FILE_ATTRIBUTE_DEVICE;
MACRO_FILE_ANY FILE_ATTRIBUTE_DIRECTORY;
MACRO_FILE_ANY FILE_ATTRIBUTE_ENCRYPTED;
MACRO_FILE_ANY FILE_ATTRIBUTE_HIDDEN;
MACRO_FILE_ANY FILE_ATTRIBUTE_NORMAL;
MACRO_FILE_ANY FILE_ATTRIBUTE_NOT_CONTENT_INDEXED;
MACRO_FILE_ANY FILE_ATTRIBUTE_OFFLINE;
MACRO_FILE_ANY FILE_ATTRIBUTE_READONLY;
MACRO_FILE_ANY FILE_ATTRIBUTE_REPARSE_POINT;
MACRO_FILE_ANY FILE_ATTRIBUTE_SPARSE_FILE;
MACRO_FILE_ANY FILE_ATTRIBUTE_SYSTEM;
MACRO_FILE_ANY FILE_ATTRIBUTE_TEMPORARY;
MACRO_FILE_ANY FILE_ATTRIBUTE_VALID_FLAGS;
MACRO_FILE_ANY FILE_ATTRIBUTE_VALID_SET_FLAGS;
MACRO_FILE_REMOVABLE FILE_AUTOGENERATED_DEVICE_NAME;
MACRO_FILE_ANY FILE_BYTE_ALIGNMENT;
MACRO_FILE_REMOVABLE FILE_CHARACTERISTIC_PNP_DEVICE;
MACRO_FILE_ANY FILE_COMPLETE_IF_OPLOCKED;
MACRO_FILE_ANY FILE_COPY_STRUCTURED_STORAGE;
MACRO_FILE_ANY FILE_CREATE;
MACRO_FILE_ANY FILE_CREATED;
MACRO_FILE_ANY FILE_CREATE_PIPE_INSTANCE;
MACRO_FILE_ANY FILE_CREATE_TREE_CONNECTION;
MACRO_FILE_ANY FILE_DELETE_CHILD;
MACRO_FILE_ANY FILE_DELETE_ON_CLOSE;
MACRO_FILE FILE_DEVICE_8042_PORT;
MACRO_FILE FILE_DEVICE_ACPI;
MACRO_FILE FILE_DEVICE_BATTERY;
MACRO_FILE FILE_DEVICE_BEEP;
MACRO_FILE FILE_DEVICE_BUS_EXTENDER;
MACRO_FILE FILE_DEVICE_CD_ROM;
MACRO_FILE FILE_DEVICE_CD_ROM_FILE_SYSTEM;
MACRO_FILE FILE_DEVICE_CHANGER;
MACRO_FILE FILE_DEVICE_CONTROLLER;
MACRO_FILE FILE_DEVICE_DATALINK;
MACRO_FILE_DEVICE FILE_DEVICE_DBC;
MACRO_FILE FILE_DEVICE_DFS;
MACRO_FILE FILE_DEVICE_DFS_FILE_SYSTEM;
MACRO_FILE FILE_DEVICE_DFS_VOLUME;
MACRO_FILE FILE_DEVICE_DISK;
MACRO_FILE FILE_DEVICE_DISK_FILE_SYSTEM;
MACRO_FILE FILE_DEVICE_DVD;
MACRO_FILE FILE_DEVICE_FILE_SYSTEM;
MACRO_FILE FILE_DEVICE_FIPS;
MACRO_FILE FILE_DEVICE_FULLSCREEN_VIDEO;
MACRO_FILE FILE_DEVICE_INFINIBAND;
MACRO_FILE FILE_DEVICE_INPORT_PORT;
MACRO_FILE_REMOVABLE FILE_DEVICE_IS_MOUNTED;
MACRO_FILE FILE_DEVICE_KEYBOARD;
MACRO_FILE FILE_DEVICE_KS;
MACRO_FILE FILE_DEVICE_KSEC;
MACRO_FILE FILE_DEVICE_MAILSLOT;
MACRO_FILE FILE_DEVICE_MASS_STORAGE;
MACRO_FILE FILE_DEVICE_MIDI_IN;
MACRO_FILE FILE_DEVICE_MIDI_OUT;
MACRO_FILE FILE_DEVICE_MODEM;
MACRO_FILE FILE_DEVICE_MOUSE;
MACRO_FILE FILE_DEVICE_MULTI_UNC_PROVIDER;
MACRO_FILE FILE_DEVICE_NAMED_PIPE;
MACRO_FILE FILE_DEVICE_NETWORK;
MACRO_FILE FILE_DEVICE_NETWORK_BROWSER;
MACRO_FILE FILE_DEVICE_NETWORK_FILE_SYSTEM;
MACRO_FILE FILE_DEVICE_NETWORK_REDIRECTOR;
MACRO_FILE FILE_DEVICE_NULL;
MACRO_FILE FILE_DEVICE_PARALLEL_PORT;
MACRO_FILE FILE_DEVICE_PHYSICAL_NETCARD;
MACRO_FILE FILE_DEVICE_PRINTER;
MACRO_FILE FILE_DEVICE_SCANNER;
MACRO_FILE FILE_DEVICE_SCREEN;
MACRO_FILE_REMOVABLE FILE_DEVICE_SECURE_OPEN;
MACRO_FILE FILE_DEVICE_SERENUM;
MACRO_FILE FILE_DEVICE_SERIAL_MOUSE_PORT;
MACRO_FILE FILE_DEVICE_SERIAL_PORT;
MACRO_FILE FILE_DEVICE_SMARTCARD;
MACRO_FILE FILE_DEVICE_SMB;
MACRO_FILE FILE_DEVICE_SOUND;
MACRO_FILE FILE_DEVICE_STREAMS;
MACRO_FILE FILE_DEVICE_TAPE;
MACRO_FILE FILE_DEVICE_TAPE_FILE_SYSTEM;
MACRO_FILE FILE_DEVICE_TERMSRV;
MACRO_FILE FILE_DEVICE_TRANSPORT;
MACRO_FILE FILE_DEVICE_UNKNOWN;
MACRO_FILE_DEVICE_USB FILE_DEVICE_USB;
MACRO_FILE FILE_DEVICE_VDM;
MACRO_FILE FILE_DEVICE_VIDEO;
MACRO_FILE FILE_DEVICE_VIRTUAL_DISK;
MACRO_FILE FILE_DEVICE_WAVE_IN;
MACRO_FILE FILE_DEVICE_WAVE_OUT;
MACRO_FILE_ANY FILE_DIRECTORY_FILE;
MACRO_FILE_ANY FILE_DOES_NOT_EXIST;
MACRO_FILE_ANY FILE_EXECUTE;
MACRO_FILE_ANY FILE_EXISTS;
MACRO_FILE_REMOVABLE FILE_FLOPPY_DISKETTE;
MACRO_FILE_ANY FILE_GENERIC_EXECUTE;
MACRO_FILE_ANY FILE_GENERIC_READ;
MACRO_FILE_ANY FILE_GENERIC_WRITE;
MACRO_OBJECT FILE_INITIALIZATION_FAILED;
MACRO_FILE_ANY FILE_LIST_DIRECTORY;
MACRO_FILE_ANY FILE_LONG_ALIGNMENT;
MACRO_FILE_ANY FILE_MAXIMUM_DISPOSITION;
MACRO_FILE_ANY FILE_NON_DIRECTORY_FILE;
MACRO_FILE_ANY FILE_NO_COMPRESSION;
MACRO_FILE_ANY FILE_NO_EA_KNOWLEDGE;
MACRO_FILE_ANY FILE_NO_INTERMEDIATE_BUFFERING;
MACRO_FILE_ANY FILE_OCTA_ALIGNMENT;
MACRO_FILE_ANY FILE_OPEN;
MACRO_FILE_ANY FILE_OPENED;
MACRO_FILE_ANY FILE_OPEN_BY_FILE_ID;
MACRO_FILE_ANY FILE_OPEN_FOR_BACKUP_INTENT;
MACRO_FILE_ANY FILE_OPEN_FOR_FREE_SPACE_QUERY;
MACRO_FILE_ANY FILE_OPEN_FOR_RECOVERY;
MACRO_FILE_ANY FILE_OPEN_IF;
MACRO_FILE_ANY FILE_OPEN_NO_RECALL;
MACRO_FILE_ANY FILE_OPEN_REPARSE_POINT;
MACRO_FILE_ANY FILE_OVERWRITE;
MACRO_FILE_ANY FILE_OVERWRITE_IF;
MACRO_FILE_ANY FILE_OVERWRITTEN;
MACRO_FILE_ANY FILE_QUAD_ALIGNMENT;
MACRO_FILE_ANY FILE_RANDOM_ACCESS;
MACRO_FILE_ANY FILE_READ_ACCESS;
MACRO_FILE_ANY FILE_READ_ATTRIBUTES;
MACRO_FILE_ANY FILE_READ_DATA;
MACRO_FILE_ANY FILE_READ_EA;
MACRO_FILE_REMOVABLE FILE_READ_ONLY_DEVICE;
MACRO_FILE_REMOVABLE FILE_REMOTE_DEVICE;
MACRO_FILE_REMOVABLE FILE_REMOVABLE_MEDIA;
MACRO_FILE_ANY FILE_RESERVE_OPFILTER;
MACRO_FILE_ANY FILE_SEQUENTIAL_ONLY;
MACRO_FILE_ANY FILE_SHARE_DELETE;
MACRO_FILE_ANY FILE_SHARE_READ;
MACRO_FILE_ANY FILE_SHARE_VALID_FLAGS;
MACRO_FILE_ANY FILE_SHARE_WRITE;
MACRO_FILE_ANY FILE_SPECIAL_ACCESS;
MACRO_FILE_ANY FILE_STRUCTURED_STORAGE;
MACRO_FILE_ANY FILE_SUPERSEDE;
MACRO_FILE_ANY FILE_SUPERSEDED;
MACRO_FILE_ANY FILE_SYNCHRONOUS_IO_ALERT;
MACRO_FILE_ANY FILE_SYNCHRONOUS_IO_NONALERT;
MACRO_FILE_SYSTEM FILE_SYSTEM;
MACRO_FILE_ANY FILE_TRAVERSE;
MACRO_FILE_ANY FILE_USE_FILE_POINTER_POSITION;
MACRO_FILE_ANY FILE_VALID_MAILSLOT_OPTION_FLAGS;
MACRO_FILE_ANY FILE_VALID_OPTION_FLAGS;
MACRO_FILE_ANY FILE_VALID_PIPE_OPTION_FLAGS;
MACRO_FILE_ANY FILE_VALID_SET_FLAGS;
MACRO_FILE_REMOVABLE FILE_VIRTUAL_VOLUME;
MACRO_FILE_ANY FILE_WORD_ALIGNMENT;
MACRO_FILE_ANY FILE_WRITE_ACCESS;
MACRO_FILE_ANY FILE_WRITE_ATTRIBUTES;
MACRO_FILE_ANY FILE_WRITE_DATA;
MACRO_FILE_ANY FILE_WRITE_EA;
MACRO_FILE_REMOVABLE FILE_WRITE_ONCE_MEDIA;
MACRO_FILE_ANY FILE_WRITE_THROUGH;
MACRO_FILE_ANY FILE_WRITE_TO_END_OF_FILE;
$85B8D048AA221EC9AB61032617833AB7 FLOAT_COEFF;
MACRO_FLOPPY FLOPPY_INTERNAL_ERROR;
MACRO_FLTMGR FLTMGR_FILE_SYSTEM;
MACRO_FLUSH FLUSH_MULTIPLE_MAXIMUM;
MACRO_FILENAME FOPEN_MAX;
MACRO_FO FO_ALERTABLE_IO;
MACRO_FO FO_CACHE_SUPPORTED;
MACRO_FO FO_CLEANUP_COMPLETE;
MACRO_FO FO_DELETE_ON_CLOSE;
MACRO_FO FO_DIRECT_DEVICE_OPEN;
MACRO_FO FO_FILE_FAST_IO_READ;
MACRO_FO FO_FILE_MODIFIED;
MACRO_FO FO_FILE_OBJECT_HAS_EXTENSION;
MACRO_FO FO_FILE_OPEN;
MACRO_FO FO_FILE_OPEN_CANCELLED;
MACRO_FO FO_FILE_SIZE_CHANGED;
MACRO_FO FO_GENERATE_AUDIT_ON_CLOSE;
MACRO_FO FO_HANDLE_CREATED;
MACRO_FO FO_MAILSLOT;
MACRO_FO FO_NAMED_PIPE;
MACRO_FO FO_NO_INTERMEDIATE_BUFFERING;
MACRO_FO FO_OPENED_CASE_SENSITIVE;
MACRO_FO FO_RANDOM_ACCESS;
MACRO_FO FO_REMOTE_ORIGIN;
MACRO_FO FO_SEQUENTIAL_ONLY;
MACRO_FO FO_STREAM_FILE;
MACRO_FO FO_SYNCHRONOUS_IO;
MACRO_FO FO_TEMPORARY_FILE;
MACRO_FO FO_VOLUME_OPEN;
MACRO_FO FO_WRITE_THROUGH;
MACRO_ACPI_BIOS FP_EMULATION_ERROR;
MACRO_FRAME_SIZE FRAME_SIZE_HDDV_NTSC;
MACRO_FRAME_SIZE FRAME_SIZE_HDDV_PAL;
MACRO_FRAME_SIZE FRAME_SIZE_SDDV_NTSC;
MACRO_FRAME_SIZE FRAME_SIZE_SDDV_PAL;
MACRO_FRAME_SIZE FRAME_SIZE_SDLDV_NTSC;
MACRO_FRAME_SIZE FRAME_SIZE_SDLDV_PAL;
MACRO_FRAME FRAME_TIME_NTSC;
MACRO_FRAME FRAME_TIME_PAL;
MACRO_INTERNAL_ERROR FTDISK_INTERNAL_ERROR;
$DD5FC77EC1374A734666B81823C28AFB FULL_FILTER;
_FILE_INFORMATION_CLASS FileBasicInformation;
_FILE_INFORMATION_CLASS FileEndOfFileInformation;
_FSINFOCLASS FileFsAttributeInformation;
_FSINFOCLASS FileFsControlInformation;
_FSINFOCLASS FileFsDeviceInformation;
_FSINFOCLASS FileFsDriverPathInformation;
_FSINFOCLASS FileFsFullSizeInformation;
_FSINFOCLASS FileFsLabelInformation;
_FSINFOCLASS FileFsMaximumInformation;
_FSINFOCLASS FileFsObjectIdInformation;
_FSINFOCLASS FileFsSizeInformation;
_FSINFOCLASS FileFsVolumeInformation;
_FILE_INFORMATION_CLASS FilePositionInformation;
_FILE_INFORMATION_CLASS FileStandardInformation;
_CM_SERVICE_NODE_TYPE FileSystemType;
PSINGLE_LIST_ENTRY __stdcall FirstEntrySList(const SLIST_HEADER *SListHead);
_KWAIT_REASON FreePage;
MACRO_GENERIC GENERIC_ALL;
MACRO_GENERIC GENERIC_EXECUTE;
MACRO_GENERIC GENERIC_READ;
MACRO_GENERIC GENERIC_WRITE;
MACRO_GET_FP GET_FP_CAPABILITY_OUT_Capability_ID;
MACRO_GET GET_HOST_CAPABILITIES;
MACRO_GET GET_HOST_CONFIG_ROM;
MACRO_GET GET_HOST_CSR_CONTENTS;
MACRO_GET GET_HOST_DMA_CAPABILITIES;
MACRO_GET GET_HOST_UNIQUE_ID;
MACRO_GET GET_PHYS_ADDR_ROUTINE;
MACRO_GET GET_POWER_SUPPLIED;
MACRO_GET_UNIT GET_UNIT_BUS_GENERATION_NODE;
MACRO_GET_UNIT GET_UNIT_DDI_VERSION;
MACRO_GET_UNIT GET_UNIT_DIAG_LEVEL;
MACRO_GET_UNIT GET_UNIT_INFO_CAPABILITIES;
MACRO_GET_UNIT GET_UNIT_INFO_IDS;
MACRO_GET_UNIT GET_UNIT_INFO_ISOCH_PARAMS;
MACRO_SECURITY_INFORMATION GROUP_SECURITY_INFORMATION;
_EXTENDED_AGP_REGISTER GartHigh;
_EXTENDED_AGP_REGISTER GartLow;
$0A8504B2A02FDAAC5DE9FC241C2D2824 GeneralRegistryKey;
MACRO_GetFailurePredictionCapability GetFailurePredictionCapability;
_TRACE_INFORMATION_CLASS GlobalLoggerHandleClass;
MACRO_OBJECT HAL1_INITIALIZATION_FAILED;
MACRO_FAILED HAL_INITIALIZATION_FAILED;
$DF2051BCD5E4FC2C953B94B617C6FC67 HAL_MCA_RECORD;
$DF2051BCD5E4FC2C953B94B617C6FC67 HAL_MCE_RECORD;
MACRO_HAL HAL_MEMORY_ALLOCATION;
MACRO_HARDWARE_INTERRUPT HARDWARE_INTERRUPT_STORM;
MACRO_HARDWARE HARDWARE_PROFILE_DOCKED_STRING;
MACRO_HARDWARE HARDWARE_PROFILE_UNDOCKED_STRING;
MACRO_HARDWARE HARDWARE_PROFILE_UNKNOWN_STRING;
MACRO_HASH HASH_STRING_ALGORITHM_DEFAULT;
MACRO_HASH HASH_STRING_ALGORITHM_INVALID;
MACRO_HASH HASH_STRING_ALGORITHM_X65599;
MACRO_HCD HCD_DIAGNOSTIC_MODE_OFF;
MACRO_HCD HCD_DIAGNOSTIC_MODE_ON;
MACRO_HCD HCD_DISABLE_PORT;
MACRO_HCD HCD_ENABLE_PORT;
MACRO_HCD HCD_GET_DRIVERKEY_NAME;
MACRO_HCD HCD_GET_ROOT_HUB_NAME;
MACRO_HCD HCD_GET_STATS_1;
MACRO_HCD HCD_GET_STATS_2;
MACRO_HCD HCD_USER_REQUEST;
MACRO_HFILE HFILE_ERROR;
MACRO_HIDP HIDP_GETCOLDESC_BAD_REPORT_ID;
MACRO_HIDP HIDP_GETCOLDESC_BUFFER;
MACRO_HIDP HIDP_GETCOLDESC_BYTE_ALLIGN;
MACRO_HIDP HIDP_GETCOLDESC_DEFAULT_ID_ERROR;
MACRO_HIDP HIDP_GETCOLDESC_FOUR_BYTE;
MACRO_HIDP HIDP_GETCOLDESC_INVALID_MAIN_ITEM;
MACRO_HIDP HIDP_GETCOLDESC_ITEM_UNKNOWN;
MACRO_HIDP HIDP_GETCOLDESC_LINK_RESOURCES;
MACRO_HIDP HIDP_GETCOLDESC_MAIN_ITEM_NO_USAGE;
MACRO_HIDP HIDP_GETCOLDESC_MISMATCH_OC_DELIMITER;
MACRO_HIDP HIDP_GETCOLDESC_NOT_VALID_DELIMITER;
MACRO_HIDP HIDP_GETCOLDESC_NO_CLOSE_DELIMITER;
MACRO_HIDP HIDP_GETCOLDESC_NO_DATA;
MACRO_HIDP HIDP_GETCOLDESC_NO_REPORT_ID;
MACRO_HIDP HIDP_GETCOLDESC_ONE_BYTE;
MACRO_HIDP HIDP_GETCOLDESC_PREPARSE_RESOURCES;
MACRO_HIDP HIDP_GETCOLDESC_PUSH_RESOURCES;
MACRO_HIDP HIDP_GETCOLDESC_REPORT_ID;
MACRO_HIDP HIDP_GETCOLDESC_RESOURCES;
MACRO_HIDP HIDP_GETCOLDESC_SUCCESS;
MACRO_HIDP HIDP_GETCOLDESC_TOP_COLLECTION_USAGE;
MACRO_HIDP HIDP_GETCOLDESC_TWO_BYTE;
MACRO_HIDP HIDP_GETCOLDESC_UNEXP_END_COL;
MACRO_HIDP HIDP_GETCOLDESC_UNSUPPORTED;
MACRO_HIDP HIDP_LINK_COLLECTION_ROOT;
MACRO_HIDP HIDP_LINK_COLLECTION_UNSPECIFIED;
MACRO_HIDP HIDP_STATUS_BAD_LOG_PHY_VALUES;
MACRO_HIDP HIDP_STATUS_BUFFER_TOO_SMALL;
MACRO_HIDP HIDP_STATUS_BUTTON_NOT_PRESSED;
MACRO_HIDP HIDP_STATUS_DATA_INDEX_NOT_FOUND;
MACRO_HIDP HIDP_STATUS_DATA_INDEX_OUT_OF_RANGE;
MACRO_HIDP HIDP_STATUS_I8042_TRANS_UNKNOWN;
MACRO_HIDP HIDP_STATUS_I8242_TRANS_UNKNOWN;
MACRO_HIDP HIDP_STATUS_INCOMPATIBLE_REPORT_ID;
MACRO_HIDP HIDP_STATUS_INTERNAL_ERROR;
MACRO_HIDP HIDP_STATUS_INVALID_PREPARSED_DATA;
MACRO_HIDP HIDP_STATUS_INVALID_REPORT_LENGTH;
MACRO_HIDP HIDP_STATUS_INVALID_REPORT_TYPE;
MACRO_HIDP HIDP_STATUS_IS_VALUE_ARRAY;
MACRO_HIDP HIDP_STATUS_NOT_IMPLEMENTED;
MACRO_HIDP HIDP_STATUS_NOT_VALUE_ARRAY;
MACRO_HIDP HIDP_STATUS_NULL;
MACRO_HIDP HIDP_STATUS_REPORT_DOES_NOT_EXIST;
MACRO_HIDP HIDP_STATUS_SUCCESS;
MACRO_HIDP HIDP_STATUS_USAGE_NOT_FOUND;
MACRO_HIDP HIDP_STATUS_VALUE_OUT_OF_RANGE;
MACRO_HID_HID HID_HID_DESCRIPTOR_TYPE;
MACRO_HID_HID HID_PHYSICAL_DESCRIPTOR_TYPE;
MACRO_HID_HID HID_REPORT_DESCRIPTOR_TYPE;
MACRO_HID HID_REVISION;
MACRO_HID_HID HID_STRING_ID_IMANUFACTURER;
MACRO_HID_HID HID_STRING_ID_IPRODUCT;
MACRO_HID_HID HID_STRING_ID_ISERIALNUMBER;
MACRO_HID_USAGE HID_USAGE_CONSUMERCTRL;
MACRO_HID_USAGE HID_USAGE_DIGITIZER_BARREL_SWITCH;
MACRO_HID_USAGE HID_USAGE_DIGITIZER_IN_RANGE;
MACRO_HID_USAGE HID_USAGE_DIGITIZER_PEN;
MACRO_HID_USAGE HID_USAGE_DIGITIZER_TIP_SWITCH;
MACRO_HID_USAGE HID_USAGE_GENERIC_BYTE_COUNT;
MACRO_HID_USAGE HID_USAGE_GENERIC_COUNTED_BUFFER;
MACRO_HID_USAGE HID_USAGE_GENERIC_DIAL;
MACRO_HID_USAGE HID_USAGE_GENERIC_GAMEPAD;
MACRO_HID_USAGE HID_USAGE_GENERIC_HATSWITCH;
MACRO_HID_USAGE HID_USAGE_GENERIC_JOYSTICK;
MACRO_HID_USAGE HID_USAGE_GENERIC_KEYBOARD;
MACRO_HID_USAGE HID_USAGE_GENERIC_KEYPAD;
MACRO_HID_USAGE HID_USAGE_GENERIC_MOTION_WAKEUP;
MACRO_HID_USAGE HID_USAGE_GENERIC_MOUSE;
MACRO_HID_USAGE HID_USAGE_GENERIC_POINTER;
MACRO_HID_USAGE HID_USAGE_GENERIC_RX;
MACRO_HID_USAGE HID_USAGE_GENERIC_RY;
MACRO_HID_USAGE HID_USAGE_GENERIC_RZ;
MACRO_HID_USAGE HID_USAGE_GENERIC_SLIDER;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_APP_MENU;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_HELP_MENU;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MAIN_MENU;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MENU_DOWN;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MENU_EXIT;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MENU_LEFT;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MENU_SELECT;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_MENU_UP;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_POWER;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_SLEEP;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSCTL_WAKE;
MACRO_HID_USAGE HID_USAGE_GENERIC_SYSTEM_CTL;
MACRO_HID_USAGE HID_USAGE_GENERIC_VBRX;
MACRO_HID_USAGE HID_USAGE_GENERIC_VBRY;
MACRO_HID_USAGE HID_USAGE_GENERIC_VBRZ;
MACRO_HID_USAGE HID_USAGE_GENERIC_VNO;
MACRO_HID_USAGE HID_USAGE_GENERIC_VX;
MACRO_HID_USAGE HID_USAGE_GENERIC_VY;
MACRO_HID_USAGE HID_USAGE_GENERIC_VZ;
MACRO_HID_USAGE HID_USAGE_GENERIC_WHEEL;
MACRO_HID_USAGE HID_USAGE_GENERIC_X;
MACRO_HID_USAGE HID_USAGE_GENERIC_Y;
MACRO_HID_USAGE HID_USAGE_GENERIC_Z;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_CAPS_LOCK;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_DELETE;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_ESCAPE;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_F1;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_F12;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_LALT;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_LCTRL;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_LGUI;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_LSHFT;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_NOEVENT;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_NUM_LOCK;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_ONE;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_POSTFAIL;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_PRINT_SCREEN;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_RALT;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_RCTRL;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_RETURN;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_RGUI;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_ROLLOVER;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_RSHFT;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_SCROLL_LOCK;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_UNDEFINED;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_ZERO;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_aA;
MACRO_HID_USAGE HID_USAGE_KEYBOARD_zZ;
MACRO_HID_USAGE HID_USAGE_LED_AMBER;
MACRO_HID_USAGE HID_USAGE_LED_BATTERY_LOW;
MACRO_HID_USAGE HID_USAGE_LED_BATTERY_OK;
MACRO_HID_USAGE HID_USAGE_LED_BATTERY_OPERATION;
MACRO_HID_USAGE HID_USAGE_LED_BUSY;
MACRO_HID_USAGE HID_USAGE_LED_CALL_PICKUP;
MACRO_HID_USAGE HID_USAGE_LED_CAMERA_OFF;
MACRO_HID_USAGE HID_USAGE_LED_CAMERA_ON;
MACRO_HID_USAGE HID_USAGE_LED_CAPS_LOCK;
MACRO_HID_USAGE HID_USAGE_LED_CAV;
MACRO_HID_USAGE HID_USAGE_LED_CLV;
MACRO_HID_USAGE HID_USAGE_LED_COMPOSE;
MACRO_HID_USAGE HID_USAGE_LED_CONFERENCE;
MACRO_HID_USAGE HID_USAGE_LED_COVERAGE;
MACRO_HID_USAGE HID_USAGE_LED_DATA_MODE;
MACRO_HID_USAGE HID_USAGE_LED_DO_NOT_DISTURB;
MACRO_HID_USAGE HID_USAGE_LED_EQUALIZER_ENABLE;
MACRO_HID_USAGE HID_USAGE_LED_ERROR;
MACRO_HID_USAGE HID_USAGE_LED_FAST_BLINK_OFF_TIME;
MACRO_HID_USAGE HID_USAGE_LED_FAST_BLINK_ON_TIME;
MACRO_HID_USAGE HID_USAGE_LED_FAST_FORWARD;
MACRO_HID_USAGE HID_USAGE_LED_FLASH_ON_TIME;
MACRO_HID_USAGE HID_USAGE_LED_FORWARD;
MACRO_HID_USAGE HID_USAGE_LED_GENERIC_INDICATOR;
MACRO_HID_USAGE HID_USAGE_LED_GREEN;
MACRO_HID_USAGE HID_USAGE_LED_HEAD_SET;
MACRO_HID_USAGE HID_USAGE_LED_HIGH_CUT_FILTER;
MACRO_HID_USAGE HID_USAGE_LED_HOLD;
MACRO_HID_USAGE HID_USAGE_LED_INDICATOR_COLOR;
MACRO_HID_USAGE HID_USAGE_LED_INDICATOR_FAST_BLINK;
MACRO_HID_USAGE HID_USAGE_LED_INDICATOR_FLASH;
MACRO_HID_USAGE HID_USAGE_LED_INDICATOR_OFF;
MACRO_HID_USAGE HID_USAGE_LED_INDICATOR_ON;
MACRO_HID_USAGE HID_USAGE_LED_INDICATOR_SLOW_BLINK;
MACRO_HID_USAGE HID_USAGE_LED_IN_USE_INDICATOR;
MACRO_HID_USAGE HID_USAGE_LED_KANA;
MACRO_HID_USAGE HID_USAGE_LED_LOW_CUT_FILTER;
MACRO_HID_USAGE HID_USAGE_LED_MESSAGE_WAITING;
MACRO_HID_USAGE HID_USAGE_LED_MICROPHONE;
MACRO_HID_USAGE HID_USAGE_LED_MULTI_MODE_INDICATOR;
MACRO_HID_USAGE HID_USAGE_LED_MUTE;
MACRO_HID_USAGE HID_USAGE_LED_NIGHT_MODE;
MACRO_HID_USAGE HID_USAGE_LED_NUM_LOCK;
MACRO_HID_USAGE HID_USAGE_LED_OFF_HOOK;
MACRO_HID_USAGE HID_USAGE_LED_OFF_LINE;
MACRO_HID_USAGE HID_USAGE_LED_ON_LINE;
MACRO_HID_USAGE HID_USAGE_LED_PAPER_JAM;
MACRO_HID_USAGE HID_USAGE_LED_PAPER_OUT;
MACRO_HID_USAGE HID_USAGE_LED_PAUSE;
MACRO_HID_USAGE HID_USAGE_LED_PLAY;
MACRO_HID_USAGE HID_USAGE_LED_POWER;
MACRO_HID_USAGE HID_USAGE_LED_READY;
MACRO_HID_USAGE HID_USAGE_LED_RECORD;
MACRO_HID_USAGE HID_USAGE_LED_RECORDING_FORMAT_DET;
MACRO_HID_USAGE HID_USAGE_LED_RED;
MACRO_HID_USAGE HID_USAGE_LED_REMOTE;
MACRO_HID_USAGE HID_USAGE_LED_REPEAT;
MACRO_HID_USAGE HID_USAGE_LED_REVERSE;
MACRO_HID_USAGE HID_USAGE_LED_REWIND;
MACRO_HID_USAGE HID_USAGE_LED_RING;
MACRO_HID_USAGE HID_USAGE_LED_SAMPLING_RATE_DETECT;
MACRO_HID_USAGE HID_USAGE_LED_SCROLL_LOCK;
MACRO_HID_USAGE HID_USAGE_LED_SELECTED_INDICATOR;
MACRO_HID_USAGE HID_USAGE_LED_SEND_CALLS;
MACRO_HID_USAGE HID_USAGE_LED_SHIFT;
MACRO_HID_USAGE HID_USAGE_LED_SLOW_BLINK_OFF_TIME;
MACRO_HID_USAGE HID_USAGE_LED_SLOW_BLINK_ON_TIME;
MACRO_HID_USAGE HID_USAGE_LED_SOUND_FIELD_ON;
MACRO_HID_USAGE HID_USAGE_LED_SPEAKER;
MACRO_HID_USAGE HID_USAGE_LED_SPINNING;
MACRO_HID_USAGE HID_USAGE_LED_STAND_BY;
MACRO_HID_USAGE HID_USAGE_LED_STEREO;
MACRO_HID_USAGE HID_USAGE_LED_STOP;
MACRO_HID_USAGE HID_USAGE_LED_SURROUND_FIELD_ON;
MACRO_HID_USAGE HID_USAGE_LED_TONE_ENABLE;
MACRO_HID_USAGE HID_USAGE_PAGE_ALPHANUMERIC;
MACRO_HID_USAGE HID_USAGE_PAGE_BUTTON;
MACRO_HID_USAGE HID_USAGE_PAGE_CONSUMER;
MACRO_HID_USAGE HID_USAGE_PAGE_DIGITIZER;
MACRO_HID_USAGE HID_USAGE_PAGE_GAME;
MACRO_HID_USAGE HID_USAGE_PAGE_GENERIC;
MACRO_HID_USAGE HID_USAGE_PAGE_KEYBOARD;
MACRO_HID_USAGE HID_USAGE_PAGE_LED;
MACRO_HID_USAGE HID_USAGE_PAGE_ORDINAL;
MACRO_HID_USAGE HID_USAGE_PAGE_SIMULATION;
MACRO_HID_USAGE HID_USAGE_PAGE_SPORT;
MACRO_HID_USAGE HID_USAGE_PAGE_TELEPHONY;
MACRO_HID_USAGE HID_USAGE_PAGE_UNDEFINED;
MACRO_HID_USAGE HID_USAGE_PAGE_UNICODE;
MACRO_HID_USAGE HID_USAGE_PAGE_VR;
MACRO_HID_USAGE HID_USAGE_SIMULATION_RUDDER;
MACRO_HID_USAGE HID_USAGE_SIMULATION_THROTTLE;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_ANSWERING_MACHINE;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_HANDSET;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_HEADSET;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_KEYPAD;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_MESSAGE_CONTROLS;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_PHONE;
MACRO_HID_USAGE HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON;
MACRO_LEVEL HIGH_LEVEL;
MACRO_PRIORITY HIGH_PRIORITY;
MACRO_HOST HOST_INFO_DMA_DOUBLE_BUFFERING_ENABLED;
MACRO_HOST HOST_INFO_PACKET_BASED;
MACRO_HOST HOST_INFO_STREAM_BASED;
MACRO_HOST HOST_INFO_SUPPORTS_ISOCH_STRIPPING;
MACRO_HOST HOST_INFO_SUPPORTS_ISO_DUAL_BUFFER_RX;
MACRO_HOST HOST_INFO_SUPPORTS_ISO_HDR_INSERTION;
MACRO_HOST HOST_INFO_SUPPORTS_RETURNING_ISO_HDR;
MACRO_HOST HOST_INFO_SUPPORTS_START_ON_CYCLE;
MACRO_HTTP HTTP_DRIVER_CORRUPTED;
PVOID __stdcall HalAllocateCommonBuffer(PDMA_ADAPTER DmaAdapter, ULONG Length, PPHYSICAL_ADDRESS LogicalAddress, BOOLEAN CacheEnabled);
void __stdcall HalFreeCommonBuffer(PDMA_ADAPTER DmaAdapter, ULONG Length, PHYSICAL_ADDRESS LogicalAddress, PVOID VirtualAddress, BOOLEAN CacheEnabled);
ULONG __stdcall HalGetDmaAlignment(PDMA_ADAPTER DmaAdapter);
ULONG __stdcall HalReadDmaCounter(PDMA_ADAPTER DmaAdapter);
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE HardwareStarved;
BOOLEAN __stdcall HidD_FlushQueue(HANDLE HidDeviceObject);
BOOLEAN __stdcall HidD_FreePreparsedData(PHIDP_PREPARSED_DATA PreparsedData);
BOOLEAN __stdcall HidD_GetAttributes(HANDLE HidDeviceObject, PHIDD_ATTRIBUTES Attributes);
BOOLEAN __stdcall HidD_GetConfiguration(HANDLE HidDeviceObject, PHIDD_CONFIGURATION Configuration, ULONG ConfigurationLength);
BOOLEAN __stdcall HidD_GetFeature(HANDLE HidDeviceObject, PVOID ReportBuffer, ULONG ReportBufferLength);
void __stdcall HidD_GetHidGuid(LPGUID HidGuid);
BOOLEAN __stdcall HidD_GetIndexedString(HANDLE HidDeviceObject, ULONG StringIndex, PVOID Buffer, ULONG BufferLength);
BOOLEAN __stdcall HidD_GetInputReport(HANDLE HidDeviceObject, PVOID ReportBuffer, ULONG ReportBufferLength);
BOOLEAN __stdcall HidD_GetManufacturerString(HANDLE HidDeviceObject, PVOID Buffer, ULONG BufferLength);
BOOLEAN __stdcall HidD_GetMsGenreDescriptor(HANDLE HidDeviceObject, PVOID Buffer, ULONG BufferLength);
BOOLEAN __stdcall HidD_GetNumInputBuffers(HANDLE HidDeviceObject, PULONG NumberBuffers);
BOOLEAN __stdcall HidD_GetPhysicalDescriptor(HANDLE HidDeviceObject, PVOID Buffer, ULONG BufferLength);
BOOLEAN __stdcall HidD_GetPreparsedData(HANDLE HidDeviceObject, PHIDP_PREPARSED_DATA *PreparsedData);
BOOLEAN __stdcall HidD_GetProductString(HANDLE HidDeviceObject, PVOID Buffer, ULONG BufferLength);
BOOLEAN __stdcall HidD_GetSerialNumberString(HANDLE HidDeviceObject, PVOID Buffer, ULONG BufferLength);
BOOLEAN __stdcall HidD_SetConfiguration(HANDLE HidDeviceObject, PHIDD_CONFIGURATION Configuration, ULONG ConfigurationLength);
BOOLEAN __stdcall HidD_SetFeature(HANDLE HidDeviceObject, PVOID ReportBuffer, ULONG ReportBufferLength);
BOOLEAN __stdcall HidD_SetNumInputBuffers(HANDLE HidDeviceObject, ULONG NumberBuffers);
BOOLEAN __stdcall HidD_SetOutputReport(HANDLE HidDeviceObject, PVOID ReportBuffer, ULONG ReportBufferLength);
NTSTATUS __stdcall HidNotifyPresence(PDEVICE_OBJECT DeviceObject, BOOLEAN IsPresent);
_HIDP_REPORT_TYPE HidP_Feature;
void __stdcall HidP_FreeCollectionDescription(PHIDP_DEVICE_DESC DeviceDescription);
NTSTATUS __stdcall HidP_GetButtonCaps(HIDP_REPORT_TYPE ReportType, PHIDP_BUTTON_CAPS ButtonCaps, PUSHORT ButtonCapsLength, PHIDP_PREPARSED_DATA PreparsedData);
NTSTATUS __stdcall HidP_GetCaps(PHIDP_PREPARSED_DATA PreparsedData, PHIDP_CAPS Capabilities);
NTSTATUS __stdcall HidP_GetCollectionDescription(PHIDP_REPORT_DESCRIPTOR ReportDesc, ULONG DescLength, POOL_TYPE PoolType, PHIDP_DEVICE_DESC DeviceDescription);
NTSTATUS __stdcall HidP_GetData(HIDP_REPORT_TYPE ReportType, PHIDP_DATA DataList, PULONG DataLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_GetExtendedAttributes(HIDP_REPORT_TYPE ReportType, USHORT DataIndex, PHIDP_PREPARSED_DATA PreparsedData, PHIDP_EXTENDED_ATTRIBUTES Attributes, PULONG LengthAttributes);
NTSTATUS __stdcall HidP_GetLinkCollectionNodes(PHIDP_LINK_COLLECTION_NODE LinkCollectionNodes, PULONG LinkCollectionNodesLength, PHIDP_PREPARSED_DATA PreparsedData);
NTSTATUS __stdcall HidP_GetScaledUsageValue(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PLONG UsageValue, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_GetSpecificButtonCaps(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PHIDP_BUTTON_CAPS ButtonCaps, PUSHORT ButtonCapsLength, PHIDP_PREPARSED_DATA PreparsedData);
NTSTATUS __stdcall HidP_GetSpecificValueCaps(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PHIDP_VALUE_CAPS ValueCaps, PUSHORT ValueCapsLength, PHIDP_PREPARSED_DATA PreparsedData);
NTSTATUS __stdcall HidP_GetUsageValue(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PULONG UsageValue, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_GetUsageValueArray(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PCHAR UsageValue, USHORT UsageValueByteLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_GetUsages(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE *UsageList, ULONG *UsageLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_GetUsagesEx(HIDP_REPORT_TYPE ReportType, USHORT LinkCollection, PUSAGE_AND_PAGE ButtonList, ULONG *UsageLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_GetValueCaps(HIDP_REPORT_TYPE ReportType, PHIDP_VALUE_CAPS ValueCaps, PUSHORT ValueCapsLength, PHIDP_PREPARSED_DATA PreparsedData);
NTSTATUS __stdcall HidP_InitializeReportForID(HIDP_REPORT_TYPE ReportType, UCHAR ReportID, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
_HIDP_REPORT_TYPE HidP_Input;
_HIDP_KEYBOARD_DIRECTION HidP_Keyboard_Break;
_HIDP_KEYBOARD_DIRECTION HidP_Keyboard_Make;
ULONG __stdcall HidP_MaxDataListLength(HIDP_REPORT_TYPE ReportType, PHIDP_PREPARSED_DATA PreparsedData);
ULONG __stdcall HidP_MaxUsageListLength(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, PHIDP_PREPARSED_DATA PreparsedData);
_HIDP_REPORT_TYPE HidP_Output;
NTSTATUS __stdcall HidP_SetData(HIDP_REPORT_TYPE ReportType, PHIDP_DATA DataList, PULONG DataLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_SetScaledUsageValue(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, LONG UsageValue, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_SetUsageValue(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, ULONG UsageValue, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_SetUsageValueArray(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, USAGE Usage, PCHAR UsageValue, USHORT UsageValueByteLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_SetUsages(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, PUSAGE UsageList, PULONG UsageLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_SysPowerCaps(PHIDP_PREPARSED_DATA Ppd, PULONG OutputBuffer);
NTSTATUS __stdcall HidP_SysPowerEvent(PCHAR HidPacket, USHORT HidPacketLength, PHIDP_PREPARSED_DATA Ppd, PULONG OutputBuffer);
NTSTATUS __stdcall HidP_TranslateUsageAndPagesToI8042ScanCodes(PUSAGE_AND_PAGE ChangedUsageList, ULONG UsageListLength, HIDP_KEYBOARD_DIRECTION KeyAction, PHIDP_KEYBOARD_MODIFIER_STATE ModifierState, PHIDP_INSERT_SCANCODES InsertCodesProcedure, PVOID InsertCodesContext);
NTSTATUS __stdcall HidP_TranslateUsagesToI8042ScanCodes(PUSAGE ChangedUsageList, ULONG UsageListLength, HIDP_KEYBOARD_DIRECTION KeyAction, PHIDP_KEYBOARD_MODIFIER_STATE ModifierState, PHIDP_INSERT_SCANCODES InsertCodesProcedure, PVOID InsertCodesContext);
NTSTATUS __stdcall HidP_UnsetUsages(HIDP_REPORT_TYPE ReportType, USAGE UsagePage, USHORT LinkCollection, PUSAGE UsageList, PULONG UsageLength, PHIDP_PREPARSED_DATA PreparsedData, PCHAR Report, ULONG ReportLength);
NTSTATUS __stdcall HidP_UsageAndPageListDifference(PUSAGE_AND_PAGE PreviousUsageList, PUSAGE_AND_PAGE CurrentUsageList, PUSAGE_AND_PAGE BreakUsageList, PUSAGE_AND_PAGE MakeUsageList, ULONG UsageListLength);
NTSTATUS __stdcall HidP_UsageListDifference(PUSAGE PreviousUsageList, PUSAGE CurrentUsageList, PUSAGE BreakUsageList, PUSAGE MakeUsageList, ULONG UsageListLength);
NTSTATUS __stdcall HidRegisterMinidriver(PHID_MINIDRIVER_REGISTRATION MinidriverRegistration);
_STREAM_PRIORITY High;
_KDPC_IMPORTANCE HighImportance;
_MM_PAGE_PRIORITY HighPagePriority;
_EX_POOL_PRIORITY HighPoolPriority;
_EX_POOL_PRIORITY HighPoolPrioritySpecialPoolOverrun;
_EX_POOL_PRIORITY HighPoolPrioritySpecialPoolUnderrun;
_USB_NOTIFICATION_TYPE HubNestedTooDeeply;
_USB_NOTIFICATION_TYPE HubOvercurrent;
_USB_NOTIFICATION_TYPE HubPowerChange;
$0A8504B2A02FDAAC5DE9FC241C2D2824 HwProfileRegistryKey;
_WORK_QUEUE_TYPE HyperCriticalWorkQueue;
MACRO_IMPERSONATING IMPERSONATING_WORKER_THREAD;
MACRO_INACCESSIBLE INACCESSIBLE_BOOT_DEVICE;
MACRO_INCONSISTENT INCONSISTENT_IRP;
MACRO_INITIAL_BANDWIDTH INITIAL_BANDWIDTH_UNITS;
MACRO_INITIAL INITIAL_PRIVILEGE_COUNT;
MACRO_INITIAL_REGISTER INITIAL_REGISTER_SPACE_HI;
MACRO_INITIAL_REGISTER INITIAL_REGISTER_SPACE_LO;
MACRO_INSTALL INSTALL_MORE_MEMORY;
MACRO_BUS_ERROR INSTRUCTION_BUS_ERROR;
MACRO_COHERENCY_EXCEPTION INSTRUCTION_COHERENCY_EXCEPTION;
MACRO_INSUFFICIENT INSUFFICIENT_SYSTEM_MAP_REGS;
MACRO_INTERNAL INTERNAL_POWER_ERROR;
MACRO_INTERRUPT INTERRUPT_EXCEPTION_NOT_HANDLED;
MACRO_LOCATION INTERRUPT_MASK_LOCATION;
MACRO_LOCATION INTERRUPT_TARGET_LOCATION;
MACRO_INTERRUPT INTERRUPT_UNWIND_ATTEMPTED;
MACRO_INVALID INVALID_AFFINITY_SET;
MACRO_INVALID_FLOATING INVALID_CANCEL_OF_FILE_OPEN;
MACRO_INVALID INVALID_DATA_ACCESS_TRAP;
MACRO_INVALID_FLOATING INVALID_FLOATING_POINT_STATE;
MACRO_INVALID_HIBERNATED INVALID_HIBERNATED_STATE;
MACRO_INVALID_KERNEL INVALID_KERNEL_HANDLE;
MACRO_INVALID INVALID_PROCESS_ATTACH_ATTEMPT;
MACRO_INVALID INVALID_PROCESS_DETACH_ATTEMPT;
MACRO_INVALID_REGION INVALID_REGION_OR_SEGMENT;
MACRO_INVALID INVALID_SOFTWARE_INTERRUPT;
MACRO_INVALID_WORK INVALID_WORK_QUEUE_ITEM;
MACRO_OBJECT IO1_INITIALIZATION_FAILED;
MACRO_IOCTL_1394 IOCTL_1394_CLASS;
MACRO_IOCTL_1394 IOCTL_1394_TOGGLE_ENUM_TEST_OFF;
MACRO_IOCTL_1394 IOCTL_1394_TOGGLE_ENUM_TEST_ON;
MACRO_IOCTL_61883 IOCTL_61883_CLASS;
MACRO_IOCTL_ACPI IOCTL_ACPI_ACQUIRE_GLOBAL_LOCK;
MACRO_IOCTL_ACPI IOCTL_ACPI_ASYNC_EVAL_METHOD;
MACRO_IOCTL_ACPI IOCTL_ACPI_EVAL_METHOD;
MACRO_IOCTL_ACPI IOCTL_ACPI_RELEASE_GLOBAL_LOCK;
MACRO_IOCTL_AVCSTRM IOCTL_AVCSTRM_CLASS;
MACRO_IOCTL_AVC_UPDATE IOCTL_AVC_BUS_RESET;
MACRO_IOCTL_AVC IOCTL_AVC_CLASS;
MACRO_IOCTL_AVC_UPDATE IOCTL_AVC_REMOVE_VIRTUAL_SUBUNIT_INFO;
MACRO_IOCTL_AVC_UPDATE IOCTL_AVC_UPDATE_VIRTUAL_SUBUNIT_INFO;
MACRO_IOCTL IOCTL_CANCEL_DEVICE_WAKE;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_GET_HCD_DRIVERKEY_NAME;
MACRO_IOCTL_HID IOCTL_GET_NUM_DEVICE_INPUT_BUFFERS;
MACRO_IOCTL_HID IOCTL_GET_PHYSICAL_DESCRIPTOR;
MACRO_IOCTL_HID_GET IOCTL_HID_ACTIVATE_DEVICE;
MACRO_IOCTL_HID_GET IOCTL_HID_DEACTIVATE_DEVICE;
MACRO_IOCTL_HID IOCTL_HID_DISABLE_SECURE_READ;
MACRO_IOCTL_HID IOCTL_HID_ENABLE_SECURE_READ;
MACRO_IOCTL_HID IOCTL_HID_FLUSH_QUEUE;
MACRO_IOCTL_HID IOCTL_HID_GET_COLLECTION_DESCRIPTOR;
MACRO_IOCTL_HID IOCTL_HID_GET_COLLECTION_INFORMATION;
MACRO_IOCTL_HID_GET IOCTL_HID_GET_DEVICE_ATTRIBUTES;
MACRO_IOCTL_HID_GET IOCTL_HID_GET_DEVICE_DESCRIPTOR;
MACRO_IOCTL_HID IOCTL_HID_GET_DRIVER_CONFIG;
MACRO_IOCTL_HID IOCTL_HID_GET_FEATURE;
MACRO_IOCTL_HID IOCTL_HID_GET_HARDWARE_ID;
MACRO_IOCTL_HID IOCTL_HID_GET_INDEXED_STRING;
MACRO_IOCTL_HID IOCTL_HID_GET_INPUT_REPORT;
MACRO_IOCTL_HID IOCTL_HID_GET_MANUFACTURER_STRING;
MACRO_IOCTL_HID IOCTL_HID_GET_MS_GENRE_DESCRIPTOR;
MACRO_IOCTL_HID IOCTL_HID_GET_POLL_FREQUENCY_MSEC;
MACRO_IOCTL_HID IOCTL_HID_GET_PRODUCT_STRING;
MACRO_IOCTL_HID_GET IOCTL_HID_GET_REPORT_DESCRIPTOR;
MACRO_IOCTL_HID IOCTL_HID_GET_SERIALNUMBER_STRING;
MACRO_IOCTL_HID_GET IOCTL_HID_GET_STRING;
MACRO_IOCTL_HID_GET IOCTL_HID_READ_REPORT;
MACRO_IOCTL_HID_GET IOCTL_HID_SEND_IDLE_NOTIFICATION_REQUEST;
MACRO_IOCTL_HID IOCTL_HID_SET_DRIVER_CONFIG;
MACRO_IOCTL_HID IOCTL_HID_SET_FEATURE;
MACRO_IOCTL_HID IOCTL_HID_SET_OUTPUT_REPORT;
MACRO_IOCTL_HID IOCTL_HID_SET_POLL_FREQUENCY_MSEC;
MACRO_IOCTL_HID_GET IOCTL_HID_WRITE_REPORT;
MACRO_IOCTL_INTERNAL IOCTL_INTERNAL_DBC_SUBMIT_DRB;
MACRO_IOCTL_INTERNAL_USB IOCTL_INTERNAL_USB_CYCLE_PORT;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_ENABLE_PORT;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_BUSGUID_INFO;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_BUS_INFO;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_CONTROLLER_NAME;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_DEVICE_HANDLE;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_HUB_COUNT;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_HUB_NAME;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_PARENT_HUB_INFO;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_PORT_STATUS;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_GET_ROOTHUB_PDO;
MACRO_IOCTL_INTERNAL_USB IOCTL_INTERNAL_USB_RESET_PORT;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_INTERNAL_USB_SUBMIT_IDLE_NOTIFICATION;
MACRO_IOCTL_INTERNAL_USB IOCTL_INTERNAL_USB_SUBMIT_URB;
MACRO_IOCTL_KS IOCTL_KS_DISABLE_EVENT;
MACRO_IOCTL_KS IOCTL_KS_ENABLE_EVENT;
MACRO_IOCTL_KS_HANDSHAKE IOCTL_KS_HANDSHAKE;
MACRO_IOCTL_KS IOCTL_KS_METHOD;
MACRO_IOCTL_KS IOCTL_KS_PROPERTY;
MACRO_IOCTL_KS IOCTL_KS_READ_STREAM;
MACRO_IOCTL_KS IOCTL_KS_RESET_STATE;
MACRO_IOCTL_KS IOCTL_KS_WRITE_STREAM;
MACRO_IOCTL IOCTL_QUERY_DEVICE_POWER_STATE;
MACRO_IOCTL IOCTL_SET_DEVICE_WAKE;
MACRO_IOCTL_HID IOCTL_SET_NUM_DEVICE_INPUT_BUFFERS;
MACRO_IOCTL_USBPRINT IOCTL_USBPRINT_GET_1284_ID;
MACRO_IOCTL_USBPRINT IOCTL_USBPRINT_GET_LPT_STATUS;
MACRO_IOCTL_USBPRINT IOCTL_USBPRINT_SOFT_RESET;
MACRO_IOCTL_USBPRINT IOCTL_USBPRINT_VENDOR_GET_COMMAND;
MACRO_IOCTL_USBPRINT IOCTL_USBPRINT_VENDOR_SET_COMMAND;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_DIAGNOSTIC_MODE_OFF;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_DIAGNOSTIC_MODE_ON;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_DIAG_IGNORE_HUBS_OFF;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_DIAG_IGNORE_HUBS_ON;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_HUB_CAPABILITIES;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_NODE_CONNECTION_ATTRIBUTES;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_NODE_CONNECTION_DRIVERKEY_NAME;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_NODE_CONNECTION_INFORMATION;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_NODE_CONNECTION_INFORMATION_EX;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_NODE_CONNECTION_NAME;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_NODE_INFORMATION;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_GET_ROOT_HUB_NAME;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_HCD_DISABLE_PORT;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_HCD_ENABLE_PORT;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_HCD_GET_STATS_1;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_HCD_GET_STATS_2;
MACRO_IOCTL_INTERNAL_USB_GET IOCTL_USB_HUB_CYCLE_PORT;
MACRO_IOCTL_USB IOCTL_USB_USER_REQUEST;
MACRO_IO IO_BAD_BLOCK_WITH_NAME;
MACRO_INCREMENT IO_CD_ROM_INCREMENT;
MACRO_INCREMENT IO_DISK_INCREMENT;
MACRO_IO IO_DRIVER_CANCEL_TIMEOUT;
MACRO_IO IO_DUMP_DIRECT_CONFIG_FAILED;
MACRO_IO IO_DUMP_DRIVER_LOAD_FAILURE;
MACRO_IO IO_DUMP_DUMPFILE_CONFLICT;
MACRO_IO IO_DUMP_INITIALIZATION_FAILURE;
MACRO_IO IO_DUMP_PAGE_CONFIG_FAILED;
MACRO_IO IO_DUMP_POINTER_FAILURE;
MACRO_IO IO_ERR_BAD_BLOCK;
MACRO_IO IO_ERR_BAD_FIRMWARE;
MACRO_IO IO_ERR_CONFIGURATION_ERROR;
MACRO_IO IO_ERR_CONTROLLER_ERROR;
MACRO_IO IO_ERR_DMA_CONFLICT_DETECTED;
MACRO_IO IO_ERR_DMA_RESOURCE_CONFLICT;
MACRO_IO IO_ERR_DRIVER_ERROR;
MACRO_IO IO_ERR_INCORRECT_IRQL;
MACRO_IO IO_ERR_INSUFFICIENT_RESOURCES;
MACRO_IO IO_ERR_INTERNAL_ERROR;
MACRO_IO IO_ERR_INTERRUPT_RESOURCE_CONFLICT;
MACRO_IO IO_ERR_INVALID_IOBASE;
MACRO_IO IO_ERR_INVALID_REQUEST;
MACRO_IO IO_ERR_IRQ_CONFLICT_DETECTED;
MACRO_IO IO_ERR_LAYERED_FAILURE;
MACRO_IO IO_ERR_MEMORY_CONFLICT_DETECTED;
MACRO_IO IO_ERR_MEMORY_RESOURCE_CONFLICT;
MACRO_IO IO_ERR_NOT_READY;
MACRO_IO IO_ERR_OVERRUN_ERROR;
MACRO_IO IO_ERR_PARITY;
MACRO_IO IO_ERR_PORT_CONFLICT_DETECTED;
MACRO_IO IO_ERR_PORT_RESOURCE_CONFLICT;
MACRO_IO_ERR_PORT IO_ERR_PORT_TIMEOUT;
MACRO_IO IO_ERR_PROTOCOL;
MACRO_IO IO_ERR_RESET;
MACRO_IO IO_ERR_RETRY_SUCCEEDED;
MACRO_IO IO_ERR_SEEK_ERROR;
MACRO_IO IO_ERR_SEQUENCE;
MACRO_IO_ERR IO_ERR_THREAD_STUCK_IN_DEVICE_DRIVER;
MACRO_IO IO_ERR_TIMEOUT;
MACRO_IO IO_ERR_VERSION;
MACRO_IO IO_FILE_QUOTA_CORRUPT;
MACRO_IO IO_FILE_QUOTA_FAILED;
MACRO_IO IO_FILE_QUOTA_LIMIT;
MACRO_IO IO_FILE_QUOTA_STARTED;
MACRO_IO IO_FILE_QUOTA_SUCCEEDED;
MACRO_IO IO_FILE_QUOTA_THRESHOLD;
MACRO_IO IO_FILE_SYSTEM_CORRUPT;
MACRO_IO IO_FILE_SYSTEM_CORRUPT_WITH_NAME;
MACRO_IO_FORCE IO_FORCE_ACCESS_CHECK;
MACRO_IO_ERR_PORT IO_INFO_THROTTLE_COMPLETE;
MACRO_INCREMENT IO_KEYBOARD_INCREMENT;
MACRO_IO IO_LOST_DELAYED_WRITE;
MACRO_INCREMENT IO_MAILSLOT_INCREMENT;
MACRO_INCREMENT IO_MOUSE_INCREMENT;
MACRO_INCREMENT IO_NAMED_PIPE_INCREMENT;
MACRO_INCREMENT IO_NETWORK_INCREMENT;
MACRO_INCREMENT IO_NO_INCREMENT;
MACRO_IO_FORCE IO_NO_PARAMETER_CHECKING;
MACRO_INCREMENT IO_PARALLEL_INCREMENT;
MACRO_IO IO_RECOVERED_VIA_ECC;
MACRO_IO_FORCE IO_REMOUNT;
MACRO_IO_FORCE IO_REPARSE;
MACRO_IO_RESOURCE IO_RESOURCE_ALTERNATIVE;
MACRO_IO_RESOURCE IO_RESOURCE_DEFAULT;
MACRO_IO_RESOURCE IO_RESOURCE_PREFERRED;
MACRO_INCREMENT IO_SERIAL_INCREMENT;
MACRO_INCREMENT IO_SOUND_INCREMENT;
MACRO_IO IO_SYSTEM_SLEEP_FAILED;
MACRO_IO_TYPE IO_TYPE_ADAPTER;
MACRO_IO_TYPE IO_TYPE_CONTROLLER;
MACRO_IO_TYPE_CSQ IO_TYPE_CSQ;
MACRO_IO_TYPE_CSQ IO_TYPE_CSQ_EX;
MACRO_IO_TYPE_CSQ IO_TYPE_CSQ_IRP_CONTEXT;
MACRO_IO_TYPE IO_TYPE_DEVICE;
MACRO_IO_TYPE IO_TYPE_DEVICE_OBJECT_EXTENSION;
MACRO_IO_TYPE IO_TYPE_DRIVER;
MACRO_IO_TYPE IO_TYPE_ERROR_LOG;
MACRO_IO_TYPE IO_TYPE_ERROR_MESSAGE;
MACRO_IO_TYPE IO_TYPE_FILE;
MACRO_IO_TYPE IO_TYPE_IRP;
MACRO_IO_TYPE IO_TYPE_MASTER_ADAPTER;
MACRO_IO_TYPE IO_TYPE_OPEN_PACKET;
MACRO_IO_TYPE IO_TYPE_TIMER;
MACRO_IO_TYPE IO_TYPE_VPB;
MACRO_INCREMENT IO_VIDEO_INCREMENT;
MACRO_IO IO_WARNING_ALLOCATION_FAILED;
MACRO_IO_ERR_PORT IO_WARNING_BUS_RESET;
MACRO_IO IO_WARNING_DUPLICATE_PATH;
MACRO_IO IO_WARNING_DUPLICATE_SIGNATURE;
MACRO_IO IO_WARNING_INTERRUPT_STILL_PENDING;
MACRO_IO IO_WARNING_LOG_FLUSH_FAILED;
MACRO_IO IO_WARNING_PAGING_FAILURE;
MACRO_IO IO_WRITE_CACHE_DISABLED;
MACRO_IO IO_WRITE_CACHE_ENABLED;
MACRO_IO IO_WRN_BAD_FIRMWARE;
MACRO_IO IO_WRN_FAILURE_PREDICTED;
MACRO_LEVEL IPI_LEVEL;
MACRO_IRB IRB_BUS_RESERVED_SZ;
MACRO_IRB IRB_FLAG_ALLOW_REMOTE_FREE;
MACRO_IRB IRB_FLAG_USE_PRE_CALCULATED_VALUE;
MACRO_IRB IRB_PORT_RESERVED_SZ;
MACRO_IRP_NOCACHE IRP_ALLOCATED_FIXED_SIZE;
MACRO_IRP_NOCACHE IRP_ALLOCATED_MUST_SUCCEED;
MACRO_IRP_NOCACHE IRP_ASSOCIATED_IRP;
MACRO_IRP_NOCACHE IRP_BUFFERED_IO;
MACRO_IRP_NOCACHE IRP_CLOSE_OPERATION;
MACRO_IRP_NOCACHE IRP_CREATE_OPERATION;
MACRO_IRP_NOCACHE IRP_DEALLOCATE_BUFFER;
MACRO_IRP_NOCACHE IRP_INPUT_OPERATION;
MACRO_IRP_NOCACHE IRP_LOOKASIDE_ALLOCATION;
MACRO_IRP IRP_MJ_CLEANUP;
MACRO_IRP IRP_MJ_CLOSE;
MACRO_IRP IRP_MJ_CREATE;
MACRO_IRP IRP_MJ_CREATE_MAILSLOT;
MACRO_IRP IRP_MJ_CREATE_NAMED_PIPE;
MACRO_IRP IRP_MJ_DEVICE_CHANGE;
MACRO_IRP IRP_MJ_DEVICE_CONTROL;
MACRO_IRP IRP_MJ_DIRECTORY_CONTROL;
MACRO_IRP IRP_MJ_FILE_SYSTEM_CONTROL;
MACRO_IRP IRP_MJ_FLUSH_BUFFERS;
MACRO_IRP IRP_MJ_INTERNAL_DEVICE_CONTROL;
MACRO_IRP IRP_MJ_LOCK_CONTROL;
MACRO_IRP IRP_MJ_MAXIMUM_FUNCTION;
MACRO_IRP IRP_MJ_PNP;
MACRO_IRP IRP_MJ_PNP_POWER;
MACRO_IRP IRP_MJ_POWER;
MACRO_IRP IRP_MJ_QUERY_EA;
MACRO_IRP IRP_MJ_QUERY_INFORMATION;
MACRO_IRP IRP_MJ_QUERY_QUOTA;
MACRO_IRP IRP_MJ_QUERY_SECURITY;
MACRO_IRP IRP_MJ_QUERY_VOLUME_INFORMATION;
MACRO_IRP IRP_MJ_READ;
MACRO_IRP IRP_MJ_SCSI;
MACRO_IRP IRP_MJ_SET_EA;
MACRO_IRP IRP_MJ_SET_INFORMATION;
MACRO_IRP IRP_MJ_SET_QUOTA;
MACRO_IRP IRP_MJ_SET_SECURITY;
MACRO_IRP IRP_MJ_SET_VOLUME_INFORMATION;
MACRO_IRP IRP_MJ_SHUTDOWN;
MACRO_IRP IRP_MJ_SYSTEM_CONTROL;
MACRO_IRP IRP_MJ_WRITE;
MACRO_IRP_MN IRP_MN_BUS_RESET;
MACRO_IRP IRP_MN_CANCEL_REMOVE_DEVICE;
MACRO_IRP IRP_MN_CANCEL_STOP_DEVICE;
MACRO_IRP IRP_MN_CHANGE_SINGLE_INSTANCE;
MACRO_IRP IRP_MN_CHANGE_SINGLE_ITEM;
MACRO_IRP IRP_MN_DEVICE_USAGE_NOTIFICATION;
MACRO_IRP IRP_MN_DISABLE_COLLECTION;
MACRO_IRP IRP_MN_DISABLE_EVENTS;
MACRO_IRP IRP_MN_EJECT;
MACRO_IRP IRP_MN_ENABLE_COLLECTION;
MACRO_IRP IRP_MN_ENABLE_EVENTS;
MACRO_IRP IRP_MN_EXECUTE_METHOD;
MACRO_IRP IRP_MN_FILTER_RESOURCE_REQUIREMENTS;
MACRO_IRP IRP_MN_POWER_SEQUENCE;
MACRO_IRP IRP_MN_QUERY_ALL_DATA;
MACRO_IRP IRP_MN_QUERY_BUS_INFORMATION;
MACRO_IRP IRP_MN_QUERY_CAPABILITIES;
MACRO_IRP IRP_MN_QUERY_DEVICE_RELATIONS;
MACRO_IRP IRP_MN_QUERY_DEVICE_TEXT;
MACRO_IRP IRP_MN_QUERY_ID;
MACRO_IRP IRP_MN_QUERY_INTERFACE;
MACRO_IRP IRP_MN_QUERY_PNP_DEVICE_STATE;
MACRO_IRP IRP_MN_QUERY_POWER;
MACRO_IRP IRP_MN_QUERY_REMOVE_DEVICE;
MACRO_IRP IRP_MN_QUERY_RESOURCES;
MACRO_IRP IRP_MN_QUERY_RESOURCE_REQUIREMENTS;
MACRO_IRP IRP_MN_QUERY_SINGLE_INSTANCE;
MACRO_IRP IRP_MN_QUERY_STOP_DEVICE;
MACRO_IRP IRP_MN_READ_CONFIG;
MACRO_IRP IRP_MN_REGINFO;
MACRO_IRP IRP_MN_REGINFO_EX;
MACRO_IRP IRP_MN_REMOVE_DEVICE;
MACRO_IRP IRP_MN_SCSI_CLASS;
MACRO_IRP IRP_MN_SET_LOCK;
MACRO_IRP IRP_MN_SET_POWER;
MACRO_IRP IRP_MN_START_DEVICE;
MACRO_IRP IRP_MN_STOP_DEVICE;
MACRO_IRP IRP_MN_SURPRISE_REMOVAL;
MACRO_IRP IRP_MN_WAIT_WAKE;
MACRO_IRP IRP_MN_WRITE_CONFIG;
MACRO_IRP_NOCACHE IRP_MOUNT_COMPLETION;
MACRO_IRP_NOCACHE IRP_NOCACHE;
MACRO_IRP_NOCACHE IRP_PAGING_IO;
MACRO_IRP_NOCACHE IRP_QUOTA_CHARGED;
MACRO_IRP_NOCACHE IRP_READ_OPERATION;
MACRO_IRP_NOCACHE IRP_SYNCHRONOUS_API;
MACRO_IRP_NOCACHE IRP_SYNCHRONOUS_PAGING_IO;
MACRO_IRP_NOCACHE IRP_WRITE_OPERATION;
MACRO_IRQL_GT IRQL_GT_ZERO_AT_SYSTEM_SERVICE;
MACRO_IRQL IRQL_NOT_DISPATCH_LEVEL;
MACRO_IRQL IRQL_NOT_GREATER_OR_EQUAL;
MACRO_IRQL IRQL_NOT_LESS_OR_EQUAL;
MACRO_IRQL_UNEXPECTED IRQL_UNEXPECTED_VALUE;
MACRO_ISOCH_ANY ISOCH_ANY_CHANNEL;
MACRO_ISOCH_ANY ISOCH_MAX_CHANNEL;
MACRO_ISOCH ISOCH_PAYLOAD_100_RATE;
MACRO_ISOCH ISOCH_PAYLOAD_1600_RATE;
MACRO_ISOCH ISOCH_PAYLOAD_200_RATE;
MACRO_ISOCH ISOCH_PAYLOAD_400_RATE;
MACRO_ISOCH ISOCH_PAYLOAD_50_RATE;
MACRO_ISOCH ISOCH_PAYLOAD_800_RATE;
MACRO_TAG ISOCH_RESOURCE_TAG;
MPEG2StreamType ISO_IEC_11172_2_VIDEO;
MPEG2StreamType ISO_IEC_11172_3_AUDIO;
MPEG2StreamType ISO_IEC_13522_MHEG;
MPEG2StreamType ISO_IEC_13818_1_AUXILIARY;
MPEG2StreamType ISO_IEC_13818_1_PES;
MPEG2StreamType ISO_IEC_13818_1_PRIVATE_SECTION;
MPEG2StreamType ISO_IEC_13818_1_RESERVED;
MPEG2StreamType ISO_IEC_13818_2_VIDEO;
MPEG2StreamType ISO_IEC_13818_3_AUDIO;
MPEG2StreamType ISO_IEC_13818_6_TYPE_A;
MPEG2StreamType ISO_IEC_13818_6_TYPE_B;
MPEG2StreamType ISO_IEC_13818_6_TYPE_C;
MPEG2StreamType ISO_IEC_13818_6_TYPE_D;
MACRO_ISSUE ISSUE_BUS_RESET_AFTER_MODIFY;
MPEG2StreamType ITU_T_REC_H_222_1;
_CM_ERROR_CONTROL_TYPE IgnoreError;
void __stdcall InitializeListHead(PLIST_ENTRY ListHead);
void __stdcall InitializeSListHead(PSLIST_HEADER SListHead);
void __stdcall InsertHeadList(PLIST_ENTRY ListHead, PLIST_ENTRY Entry);
void __stdcall InsertTailList(PLIST_ENTRY ListHead, PLIST_ENTRY Entry);
_DEVICE_INSTALL_STATE InstallStateFailedInstall;
_DEVICE_INSTALL_STATE InstallStateFinishInstall;
_DEVICE_INSTALL_STATE InstallStateInstalled;
_DEVICE_INSTALL_STATE InstallStateNeedsReinstall;
_USB_NOTIFICATION_TYPE InsufficentBandwidth;
_USB_NOTIFICATION_TYPE InsufficentPower;
ULONGLONG __stdcall Int64ShllMod32(ULONGLONG Value, ULONG ShiftCount);
LONGLONG __stdcall Int64ShraMod32(LONGLONG Value, ULONG ShiftCount);
ULONGLONG __stdcall Int64ShrlMod32(ULONGLONG Value, ULONG ShiftCount);
_INTERFACE_TYPE InterfaceTypeUndefined;
_INTERFACE_TYPE Internal;
_INTERFACE_TYPE InternalPowerBus;
$8D43FB820B033ED13008555ED0EFBEEB InterruptSyncModeAll;
$8D43FB820B033ED13008555ED0EFBEEB InterruptSyncModeNormal;
$8D43FB820B033ED13008555ED0EFBEEB InterruptSyncModeRepeat;
void __stdcall IoAcquireCancelSpinLock(PKIRQL Irql);
NTSTATUS __stdcall IoAcquireRemoveLockEx(PIO_REMOVE_LOCK RemoveLock, PVOID Tag, PCSTR File, ULONG Line, ULONG RemlockSize);
NTSTATUS __stdcall IoAllocateAdapterChannel(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, ULONG NumberOfMapRegisters, PDRIVER_CONTROL ExecutionRoutine, PVOID Context);
NTSTATUS __stdcall IoAllocateDriverObjectExtension(PDRIVER_OBJECT DriverObject, PVOID ClientIdentificationAddress, ULONG DriverObjectExtensionSize, PVOID *DriverObjectExtension);
PVOID __stdcall IoAllocateErrorLogEntry(PVOID IoObject, UCHAR EntrySize);
PIRP __stdcall IoAllocateIrp(CCHAR StackSize, BOOLEAN ChargeQuota);
PMDL __stdcall IoAllocateMdl(PVOID VirtualAddress, ULONG Length, BOOLEAN SecondaryBuffer, BOOLEAN ChargeQuota, PIRP Irp);
PIO_WORKITEM __stdcall IoAllocateWorkItem(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall IoAttachDevice(PDEVICE_OBJECT SourceDevice, PUNICODE_STRING TargetDevice, PDEVICE_OBJECT *AttachedDevice);
PDEVICE_OBJECT __stdcall IoAttachDeviceToDeviceStack(PDEVICE_OBJECT SourceDevice, PDEVICE_OBJECT TargetDevice);
PIRP __stdcall IoBuildAsynchronousFsdRequest(ULONG MajorFunction, PDEVICE_OBJECT DeviceObject, PVOID Buffer, ULONG Length, PLARGE_INTEGER StartingOffset, PIO_STATUS_BLOCK IoStatusBlock);
PIRP __stdcall IoBuildDeviceIoControlRequest(ULONG IoControlCode, PDEVICE_OBJECT DeviceObject, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, BOOLEAN InternalDeviceIoControl, PKEVENT Event, PIO_STATUS_BLOCK IoStatusBlock);
void __stdcall IoBuildPartialMdl(PMDL SourceMdl, PMDL TargetMdl, PVOID VirtualAddress, ULONG Length);
PIRP __stdcall IoBuildSynchronousFsdRequest(ULONG MajorFunction, PDEVICE_OBJECT DeviceObject, PVOID Buffer, ULONG Length, PLARGE_INTEGER StartingOffset, PKEVENT Event, PIO_STATUS_BLOCK IoStatusBlock);
BOOLEAN __stdcall IoCancelIrp(PIRP Irp);
NTSTATUS __stdcall IoCheckShareAccess(ACCESS_MASK DesiredAccess, ULONG DesiredShareAccess, PFILE_OBJECT FileObject, PSHARE_ACCESS ShareAccess, BOOLEAN Update);
NTSTATUS __stdcall IoConnectInterrupt(PKINTERRUPT *InterruptObject, PKSERVICE_ROUTINE ServiceRoutine, PVOID ServiceContext, PKSPIN_LOCK SpinLock, ULONG Vector, KIRQL Irql, KIRQL SynchronizeIrql, KINTERRUPT_MODE InterruptMode, BOOLEAN ShareVector, KAFFINITY ProcessorEnableMask, BOOLEAN FloatingSave);
NTSTATUS __stdcall IoCreateDevice(PDRIVER_OBJECT DriverObject, ULONG DeviceExtensionSize, PUNICODE_STRING DeviceName, ULONG DeviceType, ULONG DeviceCharacteristics, BOOLEAN Exclusive, PDEVICE_OBJECT *DeviceObject);
NTSTATUS __stdcall IoCreateFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER AllocationSize, ULONG FileAttributes, ULONG ShareAccess, ULONG Disposition, ULONG CreateOptions, PVOID EaBuffer, ULONG EaLength, CREATE_FILE_TYPE CreateFileType, PVOID ExtraCreateParameters, ULONG Options);
PKEVENT __stdcall IoCreateNotificationEvent(PUNICODE_STRING EventName, PHANDLE EventHandle);
NTSTATUS __stdcall IoCreateSymbolicLink(PUNICODE_STRING SymbolicLinkName, PUNICODE_STRING DeviceName);
PKEVENT __stdcall IoCreateSynchronizationEvent(PUNICODE_STRING EventName, PHANDLE EventHandle);
NTSTATUS __stdcall IoCreateUnprotectedSymbolicLink(PUNICODE_STRING SymbolicLinkName, PUNICODE_STRING DeviceName);
NTSTATUS __stdcall IoCsqInitialize(PIO_CSQ Csq, PIO_CSQ_INSERT_IRP CsqInsertIrp, PIO_CSQ_REMOVE_IRP CsqRemoveIrp, PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp, PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock, PIO_CSQ_RELEASE_LOCK CsqReleaseLock, PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp);
NTSTATUS __stdcall IoCsqInitializeEx(PIO_CSQ Csq, PIO_CSQ_INSERT_IRP_EX CsqInsertIrp, PIO_CSQ_REMOVE_IRP CsqRemoveIrp, PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp, PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock, PIO_CSQ_RELEASE_LOCK CsqReleaseLock, PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp);
void __stdcall IoCsqInsertIrp(PIO_CSQ Csq, PIRP Irp, PIO_CSQ_IRP_CONTEXT Context);
NTSTATUS __stdcall IoCsqInsertIrpEx(PIO_CSQ Csq, PIRP Irp, PIO_CSQ_IRP_CONTEXT Context, PVOID InsertContext);
PIRP __stdcall IoCsqRemoveIrp(PIO_CSQ Csq, PIO_CSQ_IRP_CONTEXT Context);
PIRP __stdcall IoCsqRemoveNextIrp(PIO_CSQ Csq, PVOID PeekContext);
void __stdcall IoDeleteDevice(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall IoDeleteSymbolicLink(PUNICODE_STRING SymbolicLinkName);
void __stdcall IoDetachDevice(PDEVICE_OBJECT TargetDevice);
void __stdcall IoDisconnectInterrupt(PKINTERRUPT InterruptObject);
BOOLEAN __stdcall IoFlushAdapterBuffers(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, PVOID CurrentVa, ULONG Length, BOOLEAN WriteToDevice);
BOOLEAN __stdcall IoForwardIrpSynchronously(PDEVICE_OBJECT DeviceObject, PIRP Irp);
void __stdcall IoFreeAdapterChannel(PDMA_ADAPTER DmaAdapter);
void __stdcall IoFreeErrorLogEntry(PVOID ElEntry);
void __stdcall IoFreeIrp(PIRP Irp);
void __stdcall IoFreeMapRegisters(PDMA_ADAPTER DmaAdapter, PVOID MapRegisterBase, ULONG NumberOfMapRegisters);
void __stdcall IoFreeMdl(PMDL Mdl);
void __stdcall IoFreeWorkItem(PIO_WORKITEM IoWorkItem);
PDEVICE_OBJECT __stdcall IoGetAttachedDeviceReference(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall IoGetBootDiskInformation(PBOOTDISK_INFORMATION BootDiskInformation, ULONG Size);
PEPROCESS IoGetCurrentProcess(void);
NTSTATUS __stdcall IoGetDeviceInterfaceAlias(PUNICODE_STRING SymbolicLinkName, const GUID *AliasInterfaceClassGuid, PUNICODE_STRING AliasSymbolicLinkName);
NTSTATUS __stdcall IoGetDeviceInterfaces(const GUID *InterfaceClassGuid, PDEVICE_OBJECT PhysicalDeviceObject, ULONG Flags, PWSTR *SymbolicLinkList);
NTSTATUS __stdcall IoGetDeviceObjectPointer(PUNICODE_STRING ObjectName, ACCESS_MASK DesiredAccess, PFILE_OBJECT *FileObject, PDEVICE_OBJECT *DeviceObject);
NTSTATUS __stdcall IoGetDeviceProperty(PDEVICE_OBJECT DeviceObject, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);
struct _DMA_ADAPTER *__stdcall IoGetDmaAdapter(PDEVICE_OBJECT PhysicalDeviceObject, struct _DEVICE_DESCRIPTION *DeviceDescription, PULONG NumberOfMapRegisters);
PVOID __stdcall IoGetDriverObjectExtension(PDRIVER_OBJECT DriverObject, PVOID ClientIdentificationAddress);
PVOID IoGetInitialStack(void);
PDEVICE_OBJECT __stdcall IoGetRelatedDeviceObject(PFILE_OBJECT FileObject);
ULONG_PTR IoGetRemainingStackSize(void);
void __stdcall IoGetStackLimits(PULONG_PTR LowLimit, PULONG_PTR HighLimit);
void __stdcall IoInitializeIrp(PIRP Irp, USHORT PacketSize, CCHAR StackSize);
void __stdcall IoInitializeRemoveLockEx(PIO_REMOVE_LOCK Lock, ULONG AllocateTag, ULONG MaxLockedMinutes, ULONG HighWatermark, ULONG RemlockSize);
NTSTATUS __stdcall IoInitializeTimer(PDEVICE_OBJECT DeviceObject, PIO_TIMER_ROUTINE TimerRoutine, PVOID Context);
void __stdcall IoInvalidateDeviceRelations(PDEVICE_OBJECT DeviceObject, DEVICE_RELATION_TYPE Type);
void __stdcall IoInvalidateDeviceState(PDEVICE_OBJECT PhysicalDeviceObject);
BOOLEAN __stdcall IoIsWdmVersionAvailable(UCHAR MajorVersion, UCHAR MinorVersion);
PHYSICAL_ADDRESS __stdcall IoMapTransfer(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, PVOID CurrentVa, PULONG Length, BOOLEAN WriteToDevice);
_LOCK_OPERATION IoModifyAccess;
NTSTATUS __stdcall IoOpenDeviceInterfaceRegistryKey(PUNICODE_STRING SymbolicLinkName, ACCESS_MASK DesiredAccess, PHANDLE DeviceInterfaceKey);
NTSTATUS __stdcall IoOpenDeviceRegistryKey(PDEVICE_OBJECT DeviceObject, ULONG DevInstKeyType, ACCESS_MASK DesiredAccess, PHANDLE DevInstRegKey);
_IO_PAGING_PRIORITY IoPagingPriorityHigh;
_IO_PAGING_PRIORITY IoPagingPriorityInvalid;
_IO_PAGING_PRIORITY IoPagingPriorityNormal;
_IO_PAGING_PRIORITY IoPagingPriorityReserved1;
_IO_PAGING_PRIORITY IoPagingPriorityReserved2;
void __stdcall IoQueueWorkItem(PIO_WORKITEM IoWorkItem, PIO_WORKITEM_ROUTINE WorkerRoutine, WORK_QUEUE_TYPE QueueType, PVOID Context);
_LOCK_OPERATION IoReadAccess;
NTSTATUS __stdcall IoRegisterDeviceInterface(PDEVICE_OBJECT PhysicalDeviceObject, const GUID *InterfaceClassGuid, PUNICODE_STRING ReferenceString, PUNICODE_STRING SymbolicLinkName);
NTSTATUS __stdcall IoRegisterPlugPlayNotification(IO_NOTIFICATION_EVENT_CATEGORY EventCategory, ULONG EventCategoryFlags, PVOID EventCategoryData, PDRIVER_OBJECT DriverObject, PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine, PVOID Context, PVOID *NotificationEntry);
void __stdcall IoReleaseCancelSpinLock(KIRQL Irql);
void __stdcall IoReleaseRemoveLockAndWaitEx(PIO_REMOVE_LOCK RemoveLock, PVOID Tag, ULONG RemlockSize);
void __stdcall IoReleaseRemoveLockEx(PIO_REMOVE_LOCK RemoveLock, PVOID Tag, ULONG RemlockSize);
NTSTATUS __stdcall IoReportTargetDeviceChange(PDEVICE_OBJECT PhysicalDeviceObject, PVOID NotificationStructure);
NTSTATUS __stdcall IoReportTargetDeviceChangeAsynchronous(PDEVICE_OBJECT PhysicalDeviceObject, PVOID NotificationStructure, PDEVICE_CHANGE_COMPLETE_CALLBACK Callback, PVOID Context);
void __stdcall IoRequestDeviceEject(PDEVICE_OBJECT PhysicalDeviceObject);
void __stdcall IoReuseIrp(PIRP Irp, NTSTATUS Iostatus);
NTSTATUS __stdcall IoSetCompletionRoutineEx(PDEVICE_OBJECT DeviceObject, PIRP Irp, PIO_COMPLETION_ROUTINE CompletionRoutine, PVOID Context, BOOLEAN InvokeOnSuccess, BOOLEAN InvokeOnError, BOOLEAN InvokeOnCancel);
NTSTATUS __stdcall IoSetDeviceInterfaceState(PUNICODE_STRING SymbolicLinkName, BOOLEAN Enable);
void __stdcall IoSetShareAccess(ACCESS_MASK DesiredAccess, ULONG DesiredShareAccess, PFILE_OBJECT FileObject, PSHARE_ACCESS ShareAccess);
void __stdcall IoSetStartIoAttributes(PDEVICE_OBJECT DeviceObject, BOOLEAN DeferredStartIo, BOOLEAN NonCancelable);
void __stdcall IoStartNextPacket(PDEVICE_OBJECT DeviceObject, BOOLEAN Cancelable);
void __stdcall IoStartNextPacketByKey(PDEVICE_OBJECT DeviceObject, BOOLEAN Cancelable, ULONG Key);
void __stdcall IoStartPacket(PDEVICE_OBJECT DeviceObject, PIRP Irp, PULONG Key, PDRIVER_CANCEL CancelFunction);
void __stdcall IoStartTimer(PDEVICE_OBJECT DeviceObject);
void __stdcall IoStopTimer(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall IoUnregisterPlugPlayNotification(PVOID NotificationEntry);
void __stdcall IoUnregisterShutdownNotification(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall IoWMIAllocateInstanceIds(GUID *Guid, ULONG InstanceCount, ULONG *FirstInstanceId);
NTSTATUS __stdcall IoWMIDeviceObjectToInstanceName(PVOID DataBlockObject, PDEVICE_OBJECT DeviceObject, PUNICODE_STRING InstanceName);
NTSTATUS __stdcall IoWMIExecuteMethod(PVOID DataBlockObject, PUNICODE_STRING InstanceName, ULONG MethodId, ULONG InBufferSize, PULONG OutBufferSize, PUCHAR InOutBuffer);
NTSTATUS __stdcall IoWMIHandleToInstanceName(PVOID DataBlockObject, HANDLE FileHandle, PUNICODE_STRING InstanceName);
NTSTATUS __stdcall IoWMIOpenBlock(GUID *DataBlockGuid, ULONG DesiredAccess, PVOID *DataBlockObject);
NTSTATUS __stdcall IoWMIQueryAllData(PVOID DataBlockObject, ULONG *InOutBufferSize, PVOID OutBuffer);
NTSTATUS __stdcall IoWMIQueryAllDataMultiple(PVOID *DataBlockObjectList, ULONG ObjectCount, ULONG *InOutBufferSize, PVOID OutBuffer);
NTSTATUS __stdcall IoWMIQuerySingleInstance(PVOID DataBlockObject, PUNICODE_STRING InstanceName, ULONG *InOutBufferSize, PVOID OutBuffer);
NTSTATUS __stdcall IoWMIQuerySingleInstanceMultiple(PVOID *DataBlockObjectList, PUNICODE_STRING InstanceNames, ULONG ObjectCount, ULONG *InOutBufferSize, PVOID OutBuffer);
NTSTATUS __stdcall IoWMIRegistrationControl(PDEVICE_OBJECT DeviceObject, ULONG Action);
NTSTATUS __stdcall IoWMISetNotificationCallback(PVOID Object, WMI_NOTIFICATION_CALLBACK Callback, PVOID Context);
NTSTATUS __stdcall IoWMISetSingleInstance(PVOID DataBlockObject, PUNICODE_STRING InstanceName, ULONG Version, ULONG ValueBufferSize, PVOID ValueBuffer);
NTSTATUS __stdcall IoWMISetSingleItem(PVOID DataBlockObject, PUNICODE_STRING InstanceName, ULONG DataItemId, ULONG Version, ULONG ValueBufferSize, PVOID ValueBuffer);
NTSTATUS __stdcall IoWMISuggestInstanceName(PDEVICE_OBJECT PhysicalDeviceObject, PUNICODE_STRING SymbolicLinkName, BOOLEAN CombineNames, PUNICODE_STRING SuggestedInstanceName);
NTSTATUS __stdcall IoWMIWriteEvent(PVOID WnodeEventItem);
_LOCK_OPERATION IoWriteAccess;
void __stdcall IoWriteErrorLogEntry(PVOID ElEntry);
$6C0BF487A7DD9AC5ADF33D9E356F7EE3 IrpForward;
$6C0BF487A7DD9AC5ADF33D9E356F7EE3 IrpNotCompleted;
$6C0BF487A7DD9AC5ADF33D9E356F7EE3 IrpNotWmi;
$6C0BF487A7DD9AC5ADF33D9E356F7EE3 IrpProcessed;
_INTERFACE_TYPE Isa;
_EXTENDED_AGP_REGISTER IsochCommand;
_EXTENDED_AGP_REGISTER IsochStatus;
MACRO_JIFMK JIFMK_00;
MACRO_JIFMK JIFMK_APP0;
MACRO_JIFMK JIFMK_APP1;
MACRO_JIFMK JIFMK_APP2;
MACRO_JIFMK JIFMK_APP3;
MACRO_JIFMK JIFMK_APP4;
MACRO_JIFMK JIFMK_APP5;
MACRO_JIFMK JIFMK_APP6;
MACRO_JIFMK JIFMK_APP7;
MACRO_JIFMK JIFMK_COM;
MACRO_JIFMK JIFMK_DAC;
MACRO_JIFMK JIFMK_DHP;
MACRO_JIFMK JIFMK_DHT;
MACRO_JIFMK JIFMK_DNL;
MACRO_JIFMK JIFMK_DQT;
MACRO_JIFMK JIFMK_DRI;
MACRO_JIFMK JIFMK_EOI;
MACRO_JIFMK JIFMK_EXP;
MACRO_JIFMK JIFMK_FF;
MACRO_JIFMK JIFMK_JPG;
MACRO_JIFMK JIFMK_JPG0;
MACRO_JIFMK JIFMK_JPG1;
MACRO_JIFMK JIFMK_JPG10;
MACRO_JIFMK JIFMK_JPG11;
MACRO_JIFMK JIFMK_JPG12;
MACRO_JIFMK JIFMK_JPG13;
MACRO_JIFMK JIFMK_JPG2;
MACRO_JIFMK JIFMK_JPG3;
MACRO_JIFMK JIFMK_JPG4;
MACRO_JIFMK JIFMK_JPG5;
MACRO_JIFMK JIFMK_JPG6;
MACRO_JIFMK JIFMK_JPG7;
MACRO_JIFMK JIFMK_JPG8;
MACRO_JIFMK JIFMK_JPG9;
MACRO_JIFMK JIFMK_RES;
MACRO_JIFMK JIFMK_RST0;
MACRO_JIFMK JIFMK_RST1;
MACRO_JIFMK JIFMK_RST2;
MACRO_JIFMK JIFMK_RST3;
MACRO_JIFMK JIFMK_RST4;
MACRO_JIFMK JIFMK_RST5;
MACRO_JIFMK JIFMK_RST6;
MACRO_JIFMK JIFMK_RST7;
MACRO_JIFMK JIFMK_SOF0;
MACRO_JIFMK JIFMK_SOF1;
MACRO_JIFMK JIFMK_SOF10;
MACRO_JIFMK JIFMK_SOF11;
MACRO_JIFMK JIFMK_SOF13;
MACRO_JIFMK JIFMK_SOF14;
MACRO_JIFMK JIFMK_SOF15;
MACRO_JIFMK JIFMK_SOF2;
MACRO_JIFMK JIFMK_SOF3;
MACRO_JIFMK JIFMK_SOF5;
MACRO_JIFMK JIFMK_SOF6;
MACRO_JIFMK JIFMK_SOF7;
MACRO_JIFMK JIFMK_SOF9;
MACRO_JIFMK JIFMK_SOI;
MACRO_JIFMK JIFMK_SOS;
MACRO_JIFMK JIFMK_TEM;
MACRO_JPEG JPEG_PROCESS_BASELINE;
MACRO_JPEG_Y JPEG_RGB;
MACRO_JPEG_Y JPEG_Y;
MACRO_JPEG_Y JPEG_YCbCr;
MACRO_KERNEL KERNEL_APC_PENDING_DURING_EXIT;
MACRO_KERNEL_DATA KERNEL_DATA_INPAGE_ERROR;
MACRO_KERNEL_MODE KERNEL_MODE_EXCEPTION_NOT_HANDLED;
MACRO_KERNEL_MODE KERNEL_MODE_EXCEPTION_NOT_HANDLED_M;
MACRO_KERNEL_STACK KERNEL_STACK_INPAGE_ERROR;
MACRO_KERNEL_STACK_LOCKED KERNEL_STACK_LOCKED_AT_EXIT;
MACRO_KEYBOARD KEYBOARD_ID_EX_Subtype_ID;
MACRO_KEYBOARD KEYBOARD_ID_EX_Type_ID;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_DATA_ConnectorType_ID;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_DATA_DataQueueSize_ID;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_DATA_ErrorCount_ID;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_DATA_FunctionKeys_ID;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_DATA_Indicators_ID;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_I8042;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_SERIAL;
MACRO_KEYBOARD KEYBOARD_PORT_WMI_STD_USB;
MACRO_KEY KEY_ALL_ACCESS;
MACRO_KEY KEY_CREATE_LINK;
MACRO_KEY KEY_CREATE_SUB_KEY;
MACRO_KEY KEY_ENUMERATE_SUB_KEYS;
MACRO_KEY KEY_EXECUTE;
MACRO_KEY KEY_NOTIFY;
MACRO_KEY KEY_QUERY_VALUE;
MACRO_KEY KEY_READ;
MACRO_KEY KEY_SET_VALUE;
MACRO_KEY KEY_WOW64_32KEY;
MACRO_KEY KEY_WOW64_64KEY;
MACRO_KEY KEY_WOW64_RES;
MACRO_KEY KEY_WRITE;
MACRO_KIP0PCRADDRESS KIP0PCRADDRESS;
MACRO_KMODE KMODE_EXCEPTION_NOT_HANDLED;
MACRO_KSAC3 KSAC3_ALTERNATE_AUDIO_1;
MACRO_KSAC3 KSAC3_ALTERNATE_AUDIO_2;
MACRO_KSAC3 KSAC3_ALTERNATE_AUDIO_BOTH;
MACRO_KSAC3 KSAC3_SERVICE_COMMENTARY;
MACRO_KSAC3 KSAC3_SERVICE_DIALOG_ONLY;
MACRO_KSAC3 KSAC3_SERVICE_EMERGENCY_FLASH;
MACRO_KSAC3 KSAC3_SERVICE_HEARING_IMPAIRED;
MACRO_KSAC3 KSAC3_SERVICE_MAIN_AUDIO;
MACRO_KSAC3 KSAC3_SERVICE_NO_DIALOG;
MACRO_KSAC3 KSAC3_SERVICE_VISUALLY_IMPAIRED;
MACRO_KSAC3 KSAC3_SERVICE_VOICE_OVER;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_ALLOCATOR_EXISTS;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_ATTENTION_STEPPING;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_CAN_ALLOCATE;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_CYCLE;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_DEVICE_SPECIFIC;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_INDEPENDENT_RANGES;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_INSIST_ON_FRAMESIZE_RATIO;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_MULTIPLE_OUTPUT;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_NO_FRAME_INTEGRITY;
MACRO_KSALLOCATOR KSALLOCATOR_FLAG_PARTIAL_READ_SUPPORT;
MACRO_KSALLOCATOR KSALLOCATOR_OPTIONF_COMPATIBLE;
MACRO_KSALLOCATOR KSALLOCATOR_OPTIONF_SYSTEM_MEMORY;
MACRO_KSALLOCATOR KSALLOCATOR_OPTIONF_VALID;
MACRO_KSALLOCATOR KSALLOCATOR_REQUIREMENTF_FRAME_INTEGRITY;
MACRO_KSALLOCATOR KSALLOCATOR_REQUIREMENTF_INPLACE_MODIFIER;
MACRO_KSALLOCATOR KSALLOCATOR_REQUIREMENTF_MUST_ALLOCATE;
MACRO_KSALLOCATOR KSALLOCATOR_REQUIREMENTF_PREFERENCES_ONLY;
MACRO_KSALLOCATOR KSALLOCATOR_REQUIREMENTF_SYSTEM_MEMORY;
MACRO_KSALL KSALL_NODES;
MACRO_KSATTRIBUTE KSATTRIBUTE_REQUIRED;
MACRO_KSAUDDECOUTMODE KSAUDDECOUTMODE_PCM_51;
MACRO_KSAUDDECOUTMODE KSAUDDECOUTMODE_SPDIFF;
MACRO_KSAUDDECOUTMODE KSAUDDECOUTMODE_STEREO_ANALOG;
MACRO_KSAUDIO_QUALITY KSAUDIO_CPU_RESOURCES_HOST_CPU;
MACRO_KSAUDIO_QUALITY KSAUDIO_CPU_RESOURCES_NOT_HOST_CPU;
MACRO_KSAUDIO_QUALITY KSAUDIO_QUALITY_ADVANCED;
MACRO_KSAUDIO_QUALITY KSAUDIO_QUALITY_BASIC;
MACRO_KSAUDIO_QUALITY KSAUDIO_QUALITY_PC;
MACRO_KSAUDIO_QUALITY KSAUDIO_QUALITY_WORST;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_5POINT1;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_7POINT1;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_DIRECTOUT;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_GROUND_FRONT_CENTER;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_GROUND_FRONT_LEFT;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_GROUND_FRONT_RIGHT;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_GROUND_REAR_LEFT;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_GROUND_REAR_RIGHT;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_MONO;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_QUAD;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_STEREO;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_SUPER_WOOFER;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_SURROUND;
MACRO_KSAUDIO_SPEAKER KSAUDIO_SPEAKER_TOP_MIDDLE;
MACRO_KSAUDIO KSAUDIO_STEREO_SPEAKER_GEOMETRY_HEADPHONE;
MACRO_KSAUDIO KSAUDIO_STEREO_SPEAKER_GEOMETRY_MAX;
MACRO_KSAUDIO KSAUDIO_STEREO_SPEAKER_GEOMETRY_MIN;
MACRO_KSAUDIO KSAUDIO_STEREO_SPEAKER_GEOMETRY_NARROW;
MACRO_KSAUDIO KSAUDIO_STEREO_SPEAKER_GEOMETRY_WIDE;
MACRO_KSCREATE KSCREATE_ITEM_FREEONSTOP;
MACRO_KSCREATE KSCREATE_ITEM_NOPARAMETERS;
MACRO_KSCREATE KSCREATE_ITEM_SECURITYCHANGED;
MACRO_KSCREATE KSCREATE_ITEM_WILDCARD;
MACRO_KSDATAFORMAT KSDATAFORMAT_ATTRIBUTES;
MACRO_KSDATAFORMAT KSDATAFORMAT_BIT_ATTRIBUTES;
MACRO_KSDATAFORMAT KSDATAFORMAT_BIT_TEMPORAL_COMPRESSION;
MACRO_KSDATAFORMAT KSDATAFORMAT_TEMPORAL_COMPRESSION;
MACRO_KSDATARANGE KSDATARANGE_ATTRIBUTES;
MACRO_KSDATARANGE KSDATARANGE_BIT_ATTRIBUTES;
MACRO_KSDATARANGE KSDATARANGE_BIT_REQUIRED_ATTRIBUTES;
MACRO_KSDATARANGE KSDATARANGE_REQUIRED_ATTRIBUTES;
$4359A6DF66D6C0A2E03091CE4CF62226 KSDEGRADE_STANDARD_COMPUTATION;
$4359A6DF66D6C0A2E03091CE4CF62226 KSDEGRADE_STANDARD_QUALITY;
$4359A6DF66D6C0A2E03091CE4CF62226 KSDEGRADE_STANDARD_SAMPLE;
$4359A6DF66D6C0A2E03091CE4CF62226 KSDEGRADE_STANDARD_SKIP;
MACRO_DESCRIPTOR_VERSION KSDEVICE_DESCRIPTOR_VERSION;
MACRO_KSDISPATCH KSDISPATCH_FASTIO;
$85B8D048AA221EC9AB61032617833AB7 KSDS3D_COEFF_COUNT;
$936EE475885E5E1972395CF18A9E441C KSDS3D_FILTER_METHOD_COUNT;
$DD5FC77EC1374A734666B81823C28AFB KSDS3D_FILTER_QUALITY_COUNT;
MACRO_KSDSOUND_3D KSDSOUND_3D_MODE_DISABLE;
MACRO_KSDSOUND_3D KSDSOUND_3D_MODE_HEADRELATIVE;
MACRO_KSDSOUND_3D KSDSOUND_3D_MODE_NORMAL;
MACRO_KSDSOUND KSDSOUND_BUFFER_CTRL_3D;
MACRO_KSDSOUND KSDSOUND_BUFFER_CTRL_FREQUENCY;
MACRO_KSDSOUND_3D KSDSOUND_BUFFER_CTRL_HRTF_3D;
MACRO_KSDSOUND KSDSOUND_BUFFER_CTRL_PAN;
MACRO_KSDSOUND KSDSOUND_BUFFER_CTRL_POSITIONNOTIFY;
MACRO_KSDSOUND KSDSOUND_BUFFER_CTRL_VOLUME;
MACRO_KSDSOUND KSDSOUND_BUFFER_LOCHARDWARE;
MACRO_KSDSOUND KSDSOUND_BUFFER_LOCSOFTWARE;
MACRO_KSDSOUND KSDSOUND_BUFFER_PRIMARY;
MACRO_KSDSOUND KSDSOUND_BUFFER_STATIC;
MACRO_KSEVENTF KSEVENTF_DPC;
MACRO_KSEVENTF KSEVENTF_EVENT_HANDLE;
MACRO_KSEVENTF KSEVENTF_EVENT_OBJECT;
MACRO_KSEVENTF KSEVENTF_KSWORKITEM;
MACRO_KSEVENTF KSEVENTF_SEMAPHORE_HANDLE;
MACRO_KSEVENTF KSEVENTF_SEMAPHORE_OBJECT;
MACRO_KSEVENTF KSEVENTF_WORKITEM;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_ERESOURCE;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_FMUTEX;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_FMUTEXUNSAFE;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_INTERRUPT;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_MUTEX;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_NONE;
$C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_SPINLOCK;
$FA11D0DE19A9089B50BC241520DAD748 KSEVENT_BDA_CA_MODULE_STATUS_CHANGED;
$FA11D0DE19A9089B50BC241520DAD748 KSEVENT_BDA_CA_MODULE_UI_REQUESTED;
$FA11D0DE19A9089B50BC241520DAD748 KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED;
$DF42200E5C7644BA9EFD9248E6DB20BA KSEVENT_BDA_PIN_CONNECTED;
$DF42200E5C7644BA9EFD9248E6DB20BA KSEVENT_BDA_PIN_DISCONNECTED;
$FA11D0DE19A9089B50BC241520DAD748 KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED;
$6D08AF020E88675B59174822EC55B914 KSEVENT_CLOCK_INTERVAL_MARK;
$6D08AF020E88675B59174822EC55B914 KSEVENT_CLOCK_POSITION_MARK;
$CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION_DATADISCONTINUITY;
$CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION_ENDOFSTREAM;
$CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION_POSITIONUPDATE;
$CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION_PRIORITY;
$CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION_TIMEDISCONTINUITY;
$8EE7F9EA7D1453B89425165DC84C8DAD KSEVENT_CONTROL_CHANGE;
$CAE561814972B63FC408CA74931D2863 KSEVENT_CROSSBAR_CHANGED;
$2E80CEBFECBA0EBADF6AA183D61A87F6 KSEVENT_CYCLIC_TIME_INTERVAL;
MACRO_KSEVENT_ENTRY KSEVENT_ENTRY_BUFFERED;
MACRO_KSEVENT_ENTRY KSEVENT_ENTRY_DELETED;
MACRO_KSEVENT_ENTRY KSEVENT_ENTRY_ONESHOT;
$6B2401DF69FC0CC161171E2CBCDDC1C6 KSEVENT_LOOPEDSTREAMING_POSITION;
$861DD39FC4CEDEF9FD3B0ECFEB4EA61F KSEVENT_STREAMALLOCATOR_FREEFRAME;
$861DD39FC4CEDEF9FD3B0ECFEB4EA61F KSEVENT_STREAMALLOCATOR_INTERNAL_FREEFRAME;
$98FA3A45888AB38274FC20DD306BA119 KSEVENT_TUNER_CHANGED;
$C43D2A6EFFDC6958F872464784E778EF KSEVENT_TVAUDIO_CHANGED;
MACRO_KSEVENT KSEVENT_TYPE_BASICSUPPORT;
MACRO_KSEVENT KSEVENT_TYPE_ENABLE;
MACRO_KSEVENT KSEVENT_TYPE_ENABLEBUFFERED;
MACRO_KSEVENT KSEVENT_TYPE_ONESHOT;
MACRO_KSEVENT KSEVENT_TYPE_QUERYBUFFER;
MACRO_KSEVENT KSEVENT_TYPE_SETSUPPORT;
MACRO_KSEVENT KSEVENT_TYPE_TOPOLOGY;
$9D9FB30271C58D4C0035E931B55503FE KSEVENT_VIDCAPTOSTI_EXT_TRIGGER;
$67063D379273ADCD5D91019DFED2E95F KSEVENT_VIDEODECODER_CHANGED;
$AD2684E740CA89CFFCE63237D53FEB0F KSEVENT_VPNOTIFY_FORMATCHANGE;
$3A98730CE8FA5C41DCBE091A69EDD8A4 KSEVENT_VPVBINOTIFY_FORMATCHANGE;
MACRO_DESCRIPTOR_VERSION KSFILTER_DESCRIPTOR_VERSION;
MACRO_KSFILTER_FLAG KSFILTER_FLAG_CRITICAL_PROCESSING;
MACRO_KSFILTER_FLAG KSFILTER_FLAG_DENY_USERMODE_ACCESS;
MACRO_KSFILTER_FLAG KSFILTER_FLAG_DISPATCH_LEVEL_PROCESSING;
MACRO_KSFILTER_FLAG KSFILTER_FLAG_HYPERCRITICAL_PROCESSING;
MACRO_KSFILTER_FLAG KSFILTER_FLAG_RECEIVE_ZERO_LENGTH_SAMPLES;
MACRO_KSFILTER KSFILTER_NODE;
MACRO_KSFRAMETIME KSFRAMETIME_VARIABLESIZE;
MACRO_KSINSTANCE KSINSTANCE_INDETERMINATE;
$62D95A1861CF901152B53DFA047F6B81 KSINTERFACE_FILEIO_STREAMING;
$3A65399903FADBC05E4C10BA9E609C32 KSINTERFACE_MEDIA_MUSIC;
$3A65399903FADBC05E4C10BA9E609C32 KSINTERFACE_MEDIA_WAVE_BUFFERED;
$3A65399903FADBC05E4C10BA9E609C32 KSINTERFACE_MEDIA_WAVE_QUEUED;
$ADC633718E981BBAA2F59FA41E3EE0B2 KSINTERFACE_STANDARD_CONTROL;
$ADC633718E981BBAA2F59FA41E3EE0B2 KSINTERFACE_STANDARD_LOOPED_STREAMING;
$ADC633718E981BBAA2F59FA41E3EE0B2 KSINTERFACE_STANDARD_STREAMING;
MACRO_KSMEDIUM KSMEDIUM_STANDARD_DEVIO;
MACRO_KSMEDIUM KSMEDIUM_TYPE_ANYINSTANCE;
$8DE99528E372621AB370A19368014C30 KSMETHOD_BDA_CHECK_CHANGES;
$8DE99528E372621AB370A19368014C30 KSMETHOD_BDA_COMMIT_CHANGES;
$02FAD7642A42DC49E4482F6F328202A2 KSMETHOD_BDA_CREATE_PIN_FACTORY;
$02FAD7642A42DC49E4482F6F328202A2 KSMETHOD_BDA_CREATE_TOPOLOGY;
$02FAD7642A42DC49E4482F6F328202A2 KSMETHOD_BDA_DELETE_PIN_FACTORY;
$8DE99528E372621AB370A19368014C30 KSMETHOD_BDA_GET_CHANGE_STATE;
$8DE99528E372621AB370A19368014C30 KSMETHOD_BDA_START_CHANGES;
$6DAD80B3977302E5EA3CDCFB6538A59F KSMETHOD_STREAMALLOCATOR_ALLOC;
$6DAD80B3977302E5EA3CDCFB6538A59F KSMETHOD_STREAMALLOCATOR_FREE;
$214B3FAB360CFC0FA4B19913ED3BE09A KSMETHOD_STREAMIO_READ;
$214B3FAB360CFC0FA4B19913ED3BE09A KSMETHOD_STREAMIO_WRITE;
MACRO_KSMETHOD KSMETHOD_TYPE_BASICSUPPORT;
MACRO_KSMETHOD KSMETHOD_TYPE_MODIFY;
MACRO_KSMETHOD KSMETHOD_TYPE_NONE;
MACRO_KSMETHOD KSMETHOD_TYPE_READ;
MACRO_KSMETHOD KSMETHOD_TYPE_SEND;
MACRO_KSMETHOD KSMETHOD_TYPE_SETSUPPORT;
MACRO_KSMETHOD KSMETHOD_TYPE_SOURCE;
MACRO_KSMETHOD KSMETHOD_TYPE_TOPOLOGY;
MACRO_KSMETHOD KSMETHOD_TYPE_WRITE;
$2CD358AE72CA35E88B6E5377F4286C0E KSMETHOD_WAVETABLE_WAVE_ALLOC;
$2CD358AE72CA35E88B6E5377F4286C0E KSMETHOD_WAVETABLE_WAVE_FIND;
$2CD358AE72CA35E88B6E5377F4286C0E KSMETHOD_WAVETABLE_WAVE_FREE;
$2CD358AE72CA35E88B6E5377F4286C0E KSMETHOD_WAVETABLE_WAVE_WRITE;
MACRO_KSMPEGVIDMODE KSMPEGVIDMODE_LTRBOX;
MACRO_KSMPEGVIDMODE KSMPEGVIDMODE_PANSCAN;
MACRO_KSMPEGVIDMODE KSMPEGVIDMODE_SCALE;
MACRO_KSNODEPIN KSNODEPIN_AEC_CAPTURE_IN;
MACRO_KSNODEPIN KSNODEPIN_AEC_CAPTURE_OUT;
MACRO_KSNODEPIN KSNODEPIN_AEC_RENDER_IN;
MACRO_KSNODEPIN KSNODEPIN_AEC_RENDER_OUT;
MACRO_KSNODEPIN KSNODEPIN_DEMUX_IN;
MACRO_KSNODEPIN KSNODEPIN_DEMUX_OUT;
MACRO_KSNODEPIN KSNODEPIN_STANDARD_IN;
MACRO_KSNODEPIN KSNODEPIN_STANDARD_OUT;
MACRO_KSNODEPIN KSNODEPIN_SUM_MUX_IN;
MACRO_KSNODEPIN KSNODEPIN_SUM_MUX_OUT;
$99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION_BOTH;
$99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION_BRIDGE;
$99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION_NONE;
$99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION_SINK;
$99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION_SOURCE;
$E5E05FC88E8385A5216FCD37A95BAA87 KSPIN_DATAFLOW_IN;
$E5E05FC88E8385A5216FCD37A95BAA87 KSPIN_DATAFLOW_OUT;
MACRO_KSPIN KSPIN_FLAG_ASYNCHRONOUS_PROCESSING;
_KSPIN_FLAG_AVC KSPIN_FLAG_AVCMASK;
_KSPIN_FLAG_AVC KSPIN_FLAG_AVC_CONNECTED;
_KSPIN_FLAG_AVC KSPIN_FLAG_AVC_FIXEDPCR;
_KSPIN_FLAG_AVC KSPIN_FLAG_AVC_PCRONLY;
_KSPIN_FLAG_AVC KSPIN_FLAG_AVC_PERMANENT;
MACRO_KSPIN KSPIN_FLAG_CRITICAL_PROCESSING;
MACRO_KSPIN KSPIN_FLAG_DENY_USERMODE_ACCESS;
MACRO_KSPIN KSPIN_FLAG_DISPATCH_LEVEL_PROCESSING;
MACRO_KSPIN KSPIN_FLAG_DISTINCT_TRAILING_EDGE;
MACRO_KSPIN KSPIN_FLAG_DO_NOT_INITIATE_PROCESSING;
MACRO_KSPIN KSPIN_FLAG_DO_NOT_USE_STANDARD_TRANSPORT;
MACRO_KSPIN KSPIN_FLAG_ENFORCE_FIFO;
MACRO_KSPIN KSPIN_FLAG_FIXED_FORMAT;
MACRO_KSPIN KSPIN_FLAG_FRAMES_NOT_REQUIRED_FOR_PROCESSING;
MACRO_KSPIN KSPIN_FLAG_GENERATE_EOS_EVENTS;
MACRO_KSPIN KSPIN_FLAG_GENERATE_MAPPINGS;
MACRO_KSPIN KSPIN_FLAG_HYPERCRITICAL_PROCESSING;
MACRO_KSPIN KSPIN_FLAG_IMPLEMENT_CLOCK;
MACRO_KSPIN KSPIN_FLAG_INITIATE_PROCESSING_ON_EVERY_ARRIVAL;
MACRO_KSPIN KSPIN_FLAG_PROCESS_IF_ANY_IN_RUN_STATE;
MACRO_KSPIN KSPIN_FLAG_PROCESS_IN_RUN_STATE_ONLY;
MACRO_KSPIN KSPIN_FLAG_RENDERER;
MACRO_KSPIN KSPIN_FLAG_SOME_FRAMES_REQUIRED_FOR_PROCESSING;
MACRO_KSPIN KSPIN_FLAG_SPLITTER;
MACRO_KSPIN KSPIN_FLAG_USE_STANDARD_TRANSPORT;
MACRO_KSPRIORITY KSPRIORITY_EXCLUSIVE;
MACRO_KSPRIORITY KSPRIORITY_HIGH;
MACRO_KSPRIORITY KSPRIORITY_LOW;
MACRO_KSPRIORITY KSPRIORITY_NORMAL;
MACRO_KSPROBE KSPROBE_ALLOCATEMDL;
MACRO_KSPROBE KSPROBE_ALLOWFORMATCHANGE;
MACRO_KSPROBE KSPROBE_MODIFY;
MACRO_KSPROBE KSPROBE_PROBEANDLOCK;
MACRO_KSPROBE KSPROBE_STREAMREAD;
MACRO_KSPROBE KSPROBE_STREAMWRITE;
MACRO_KSPROBE KSPROBE_STREAMWRITEMODIFY;
MACRO_KSPROBE KSPROBE_SYSTEMADDRESS;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_ALTERNATE_AUDIO;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_BIT_STREAM_MODE;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_DIALOGUE_LEVEL;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_DOWNMIX;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_ERROR_CONCEALMENT;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_LANGUAGE_CODE;
$2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3_ROOM_TYPE;
$54AE5E5F19366D8071D858EB4F56617A KSPROPERTY_AEC_MODE;
$54AE5E5F19366D8071D858EB4F56617A KSPROPERTY_AEC_NOISE_FILL_ENABLE;
$54AE5E5F19366D8071D858EB4F56617A KSPROPERTY_AEC_STATUS;
$2DEFE1B87100719F80278A026CBFF4D7 KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS;
$2DEFE1B87100719F80278A026CBFF4D7 KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE;
$2DEFE1B87100719F80278A026CBFF4D7 KSPROPERTY_ALLOCATOR_CONTROL_HONOR_COUNT;
$2DEFE1B87100719F80278A026CBFF4D7 KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE;
$7772B546DBDF650B52C572BF7BB5BA92 KSPROPERTY_AUDDECOUT_CUR_MODE;
$7772B546DBDF650B52C572BF7BB5BA92 KSPROPERTY_AUDDECOUT_MODES;
$C84AAC0EFB97B6FA6320B166810390ED KSPROPERTY_AUDIOGFX_CAPTURETARGETDEVICEID;
$C84AAC0EFB97B6FA6320B166810390ED KSPROPERTY_AUDIOGFX_RENDERTARGETDEVICEID;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_3D_INTERFACE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_AGC;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_ALGORITHM_INSTANCE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_BASS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_BASS_BOOST;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_CHANNEL_CONFIG;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_CHORUS_LEVEL;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_COPY_PROTECTION;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_CPU_RESOURCES;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_DELAY;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_DEMUX_DEST;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_DEV_SPECIFIC;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_DYNAMIC_RANGE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_DYNAMIC_SAMPLING_RATE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_EQ_BANDS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_EQ_LEVEL;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_FILTER_STATE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_LATENCY;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_LOUDNESS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_MANUFACTURE_GUID;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_MID;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_MIX_LEVEL_CAPS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_MIX_LEVEL_TABLE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_MUTE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_MUX_SOURCE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_NUM_EQ_BANDS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_PEAKMETER;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_POSITION;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_PREFERRED_STATUS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_PRODUCT_GUID;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_QUALITY;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_REVERB_LEVEL;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_SAMPLING_RATE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_STEREO_ENHANCE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_STEREO_SPEAKER_GEOMETRY;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_SURROUND_ENCODE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_TREBLE;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_VOLUMELEVEL;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_WIDENESS;
$F750B0D5AE4952E6A2E06632A571D241 KSPROPERTY_AUDIO_WIDE_MODE;
$3EB7CD5A2478AE20126886459846210D KSPROPERTY_BDA_AUTODEMODULATE_START;
$3EB7CD5A2478AE20126886459846210D KSPROPERTY_BDA_AUTODEMODULATE_STOP;
$1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA_MODULE_STATUS;
$1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA_MODULE_UI;
$1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA_REMOVE_PROGRAM;
$1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS;
$1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA_SMART_CARD_STATUS;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_CONTROLLING_PIN_ID;
$1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_ECM_MAP_STATUS;
$6B870DC24D0C8AC4BA7D2C047999A6A3 KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST;
$6B870DC24D0C8AC4BA7D2C047999A6A3 KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE;
$6B870DC24D0C8AC4BA7D2C047999A6A3 KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_GUARD_INTERVAL;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_INNER_FEC_RATE;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_INNER_FEC_TYPE;
$D5CA3A18CB786C06D1FE5E26C4BBD8C9 KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST;
$D5CA3A18CB786C06D1FE5E26C4BBD8C9 KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE;
$D5CA3A18CB786C06D1FE5E26C4BBD8C9 KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE;
$6F6C2F72068A7A854C30F881415EDCB8 KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST;
$6F6C2F72068A7A854C30F881415EDCB8 KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE;
$6F6C2F72068A7A854C30F881415EDCB8 KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE;
$6F5958920F6A8F401B50E2A1B2D54572 KSPROPERTY_BDA_LNB_LOF_HIGH_BAND;
$6F5958920F6A8F401B50E2A1B2D54572 KSPROPERTY_BDA_LNB_LOF_LOW_BAND;
$6F5958920F6A8F401B50E2A1B2D54572 KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_MODULATION_TYPE;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_NODE_DESCRIPTORS;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_NODE_EVENTS;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_NODE_METHODS;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_NODE_PROPERTIES;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_NODE_TYPES;
$702932362B8608D728382EB01F6EA68B KSPROPERTY_BDA_NULL_TRANSFORM_START;
$702932362B8608D728382EB01F6EA68B KSPROPERTY_BDA_NULL_TRANSFORM_STOP;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_OUTER_FEC_RATE;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_OUTER_FEC_TYPE;
$0B804802F465170881F43A3A4D8457F6 KSPROPERTY_BDA_PIDFILTER_LIST_PIDS;
$0B804802F465170881F43A3A4D8457F6 KSPROPERTY_BDA_PIDFILTER_MAP_PIDS;
$0B804802F465170881F43A3A4D8457F6 KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS;
$15EAB5DB270905D3ADC7E2FB667B7EB6 KSPROPERTY_BDA_PIN_ID;
$15EAB5DB270905D3ADC7E2FB667B7EB6 KSPROPERTY_BDA_PIN_TYPE;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_PIN_TYPES;
$6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_RF_TUNER_BANDWIDTH;
$6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_RF_TUNER_FREQUENCY;
$6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER;
$6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_RF_TUNER_POLARITY;
$6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_RF_TUNER_RANGE;
$6A1D6C7F5A20D066AEDEECAB36006C72 KSPROPERTY_BDA_RF_TUNER_TRANSPONDER;
$CD1B745820A9D90889EBAB7E9D163FB3 KSPROPERTY_BDA_SAMPLE_TIME;
$CD1B745820A9D90889EBAB7E9D163FB3 KSPROPERTY_BDA_SIGNAL_LOCKED;
$CD1B745820A9D90889EBAB7E9D163FB3 KSPROPERTY_BDA_SIGNAL_PRESENT;
$CD1B745820A9D90889EBAB7E9D163FB3 KSPROPERTY_BDA_SIGNAL_QUALITY;
$CD1B745820A9D90889EBAB7E9D163FB3 KSPROPERTY_BDA_SIGNAL_STRENGTH;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_SPECTRAL_INVERSION;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_SYMBOL_RATE;
$1737843133A6E4DC3631406BF92A2320 KSPROPERTY_BDA_TABLE_SECTION;
$FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_TEMPLATE_CONNECTIONS;
$2670392E564180BCAB600D3A48500581 KSPROPERTY_BDA_TRANSMISSION_MODE;
$714E217E1FF07AEF9AC8D62CE7BB20D6 KSPROPERTY_BDA_VOID_TRANSFORM_START;
$714E217E1FF07AEF9AC8D62CE7BB20D6 KSPROPERTY_BDA_VOID_TRANSFORM_STOP;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYGEOGRAPHIC;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYPERSONALNAME;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYRELATED;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYTITLE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYTOPICALTERM;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYUNIFORMTITLE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ADDEDFORMAVAILABLE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_AWARDS;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_BIBLIOGRAPHYNOTE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_CATALOGINGSOURCE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_CITATION;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_CONTENTSNOTE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_CREATIONCREDIT;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_GENERALNOTE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_INDEXTERMCURRICULUM;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_INDEXTERMGENRE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ISBN;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_ISSN;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_LCCN;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_LEADER;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_MAINCORPORATEBODY;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_MAINMEETINGNAME;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_MAINPERSONALNAME;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_MAINUNIFORMTITLE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_PARTICIPANT;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_PHYSICALDESCRIPTION;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_PUBLICATION;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENT;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENTPERSONALNAME;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENTUNIFORMTITLE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_SUMMARY;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_SYSTEMDETAILS;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_TARGETAUDIENCE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_TITLESTATEMENT;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_UNIFORMTITLE;
$F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC_VARYINGFORMTITLE;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_EXPOSURE;
MACRO_KSPROPERTY_VIDEOPROCAMP KSPROPERTY_CAMERACONTROL_FLAGS_ABSOLUTE;
MACRO_KSPROPERTY_VIDEOPROCAMP KSPROPERTY_CAMERACONTROL_FLAGS_AUTO;
MACRO_KSPROPERTY_VIDEOPROCAMP KSPROPERTY_CAMERACONTROL_FLAGS_MANUAL;
MACRO_KSPROPERTY_VIDEOPROCAMP KSPROPERTY_CAMERACONTROL_FLAGS_RELATIVE;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_FOCUS;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_IRIS;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_PAN;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_ROLL;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_TILT;
$5DA232089AAC7698584D5CE3C3A8D71B KSPROPERTY_CAMERACONTROL_ZOOM;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_CORRELATEDPHYSICALTIME;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_CORRELATEDTIME;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_FUNCTIONTABLE;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_PHYSICALTIME;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_RESOLUTION;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_STATE;
$931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK_TIME;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_ACQUIREORDERING;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_ALLOCATORFRAMING;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_ALLOCATORFRAMING_EX;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_DATAFORMAT;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_PRIORITY;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_PROPOSEDATAFORMAT;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_STARTAT;
$5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION_STATE;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_COPY_MACROVISION;
$09A34D7915C9A95B91A5C3C199852FD2 KSPROPERTY_CROSSBAR_CAN_ROUTE;
$09A34D7915C9A95B91A5C3C199852FD2 KSPROPERTY_CROSSBAR_CAPS;
$09A34D7915C9A95B91A5C3C199852FD2 KSPROPERTY_CROSSBAR_PININFO;
$09A34D7915C9A95B91A5C3C199852FD2 KSPROPERTY_CROSSBAR_ROUTE;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_ALL;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_CONEANGLES;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_CONEORIENTATION;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_CONEOUTSIDEVOLUME;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_MAXDISTANCE;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_MINDISTANCE;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_MODE;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_POSITION;
$A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER_VELOCITY;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_ALL;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_ALLOCATION;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_BATCH;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_DISTANCEFACTOR;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_DOPPLERFACTOR;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_ORIENTATION;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_POSITION;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_ROLLOFFFACTOR;
$38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER_VELOCITY;
$A6BC26748E56DACD668315459CCF5D3F KSPROPERTY_DRMAUDIOSTREAM_CONTENTID;
$9E0565FF8CB6288B094DEDB695088DFB KSPROPERTY_DROPPEDFRAMES_CURRENT;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_CHLG_KEY;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_DEC_KEY2;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_DISC_KEY;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_DVD_KEY1;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_REGION;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_SET_COPY_STATE;
$CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_DVDCOPY_TITLE_KEY;
$05DAA4B528850479245A9C123C494191 KSPROPERTY_DVDSUBPIC_COMPOSIT_ON;
$05DAA4B528850479245A9C123C494191 KSPROPERTY_DVDSUBPIC_HLI;
$05DAA4B528850479245A9C123C494191 KSPROPERTY_DVDSUBPIC_PALETTE;
$27EA88566304FD4A859B4EB0EE874253 KSPROPERTY_GENERAL_COMPONENTID;
$4BE76D8A2D42FA48351D108905A477D8 KSPROPERTY_GM_GRAPHMANAGER;
$4BE76D8A2D42FA48351D108905A477D8 KSPROPERTY_GM_RATEMATCH;
$4BE76D8A2D42FA48351D108905A477D8 KSPROPERTY_GM_RENDER_CLOCK;
$4BE76D8A2D42FA48351D108905A477D8 KSPROPERTY_GM_TIMESTAMP_CLOCK;
$222C5FE2FBB310101DEF802D75341780 KSPROPERTY_HRTF3D_FILTER_FORMAT;
$222C5FE2FBB310101DEF802D75341780 KSPROPERTY_HRTF3D_INITIALIZE;
$222C5FE2FBB310101DEF802D75341780 KSPROPERTY_HRTF3D_PARAMS;
$685D0097497CB64E18A21F243FD25622 KSPROPERTY_ITD3D_PARAMS;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_AVAILABLE;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_CAPABILITIES;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_CONVERTTIMEFORMAT;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_DURATION;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_FORMATS;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_POSITION;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_POSITIONS;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_PREROLL;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_STOPPOSITION;
$0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING_TIMEFORMAT;
MACRO_KSPROPERTY KSPROPERTY_MEMBER_FLAG_BASICSUPPORT_MULTICHANNEL;
MACRO_KSPROPERTY KSPROPERTY_MEMBER_FLAG_BASICSUPPORT_UNIFORM;
MACRO_KSPROPERTY KSPROPERTY_MEMBER_FLAG_DEFAULT;
MACRO_KSPROPERTY KSPROPERTY_MEMBER_RANGES;
MACRO_KSPROPERTY KSPROPERTY_MEMBER_STEPPEDRANGES;
MACRO_KSPROPERTY KSPROPERTY_MEMBER_VALUES;
$2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID_16_9_PANSCAN;
$2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID_16_9_RECT;
$2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID_4_3_RECT;
$2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID_CUR_MODE;
$2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID_MODES;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_CLIPLIST;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_COLORKEY;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_COLORREF;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_DISPLAYCHANGE;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_INTERESTS;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_PALETTE;
$F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE_VIDEOPOSITION;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_CATEGORY;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_CINSTANCES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_COMMUNICATION;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_CONSTRAINEDDATARANGES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_CTYPES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_DATAFLOW;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_DATAINTERSECTION;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_DATARANGES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_GLOBALCINSTANCES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_INTERFACES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_MEDIUMS;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_NAME;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_NECESSARYINSTANCES;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_PHYSICALCONNECTION;
$6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN_PROPOSEDATAFORMAT;
$2E38A7C1F534E42343A61A8545C8A30E KSPROPERTY_QUALITY_ERROR;
$2E38A7C1F534E42343A61A8545C8A30E KSPROPERTY_QUALITY_REPORT;
$88B706C139ABA6F86ADC31E6AAF44FB3 KSPROPERTY_RTAUDIO_GETPOSITIONFUNCTION;
$414881918899110C4C8585ADE11D74B4 KSPROPERTY_STREAMALLOCATOR_FUNCTIONTABLE;
$414881918899110C4C8585ADE11D74B4 KSPROPERTY_STREAMALLOCATOR_STATUS;
$E429D5BCA10BC7F1E46CF67F9B793820 KSPROPERTY_STREAMINTERFACE_HEADERSIZE;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_ALLOCATOR;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_DEGRADATION;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_FRAMETIME;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_MASTERCLOCK;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_PIPE_ID;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_PRESENTATIONEXTENT;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_PRESENTATIONTIME;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_QUALITY;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_RATE;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_RATECAPABILITY;
$023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM_TIMEFORMAT;
$84B3C5477E189348A14D3C2A7517CC31 KSPROPERTY_SYSAUDIO_ATTACH_VIRTUAL_SOURCE;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_COMPONENT_ID;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_CREATE_VIRTUAL_SOURCE;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_DEVICE_COUNT;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_DEVICE_DEFAULT;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_DEVICE_FRIENDLY_NAME;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_DEVICE_INSTANCE;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_DEVICE_INTERFACE_NAME;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_INSTANCE_INFO;
$6C28A36E3B687017C39113137644E2AF KSPROPERTY_SYSAUDIO_MIDI_DEFAULT;
$6C28A36E3B687017C39113137644E2AF KSPROPERTY_SYSAUDIO_MIXER_DEFAULT;
$6C28A36E3B687017C39113137644E2AF KSPROPERTY_SYSAUDIO_NORMAL_DEFAULT;
$6C28A36E3B687017C39113137644E2AF KSPROPERTY_SYSAUDIO_PLAYBACK_DEFAULT;
$6C28A36E3B687017C39113137644E2AF KSPROPERTY_SYSAUDIO_RECORD_DEFAULT;
$7A8E7332A2E71E967EDB7B241741D182 KSPROPERTY_SYSAUDIO_SELECT_GRAPH;
$B3A84405D78147E904BCCE08E14749CA KSPROPERTY_TOPOLOGYNODE_ENABLE;
$B3A84405D78147E904BCCE08E14749CA KSPROPERTY_TOPOLOGYNODE_RESET;
$729DCE355D7523E6CA017E6077BAB356 KSPROPERTY_TOPOLOGY_CATEGORIES;
$729DCE355D7523E6CA017E6077BAB356 KSPROPERTY_TOPOLOGY_CONNECTIONS;
$729DCE355D7523E6CA017E6077BAB356 KSPROPERTY_TOPOLOGY_NAME;
$729DCE355D7523E6CA017E6077BAB356 KSPROPERTY_TOPOLOGY_NODES;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_CAPS;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_FREQUENCY;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_IF_MEDIUM;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_INPUT;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_MODE;
$0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODE_AM_RADIO;
$0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODE_ATSC;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_MODE_CAPS;
$0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODE_DSS;
$0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODE_FM_RADIO;
$0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODE_TV;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_STANDARD;
$A2D51A8FAB7AC563CC6DB2B9AADBE187 KSPROPERTY_TUNER_STATUS;
$59F47961FEC953F20A64EC788B1D06EA KSPROPERTY_TVAUDIO_CAPS;
$59F47961FEC953F20A64EC788B1D06EA KSPROPERTY_TVAUDIO_CURRENTLY_AVAILABLE_MODES;
$59F47961FEC953F20A64EC788B1D06EA KSPROPERTY_TVAUDIO_MODE;
MACRO_KSPROPERTY KSPROPERTY_TYPE_BASICSUPPORT;
MACRO_KSPROPERTY KSPROPERTY_TYPE_DEFAULTVALUES;
MACRO_KSPROPERTY KSPROPERTY_TYPE_GET;
MACRO_KSPROPERTY KSPROPERTY_TYPE_RELATIONS;
MACRO_KSPROPERTY KSPROPERTY_TYPE_SERIALIZERAW;
MACRO_KSPROPERTY KSPROPERTY_TYPE_SERIALIZESET;
MACRO_KSPROPERTY KSPROPERTY_TYPE_SERIALIZESIZE;
MACRO_KSPROPERTY KSPROPERTY_TYPE_SET;
MACRO_KSPROPERTY KSPROPERTY_TYPE_SETSUPPORT;
MACRO_KSPROPERTY KSPROPERTY_TYPE_TOPOLOGY;
MACRO_KSPROPERTY KSPROPERTY_TYPE_UNSERIALIZERAW;
MACRO_KSPROPERTY KSPROPERTY_TYPE_UNSERIALIZESET;
$E4F601CF8334073149F423AA599EAEAE KSPROPERTY_VBICAP_PROPERTIES_PROTECTION;
$CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING_SCANLINES_DISCOVERED_BIT_ARRAY;
$CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING_SCANLINES_REQUESTED_BIT_ARRAY;
$CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING_STATISTICS;
$CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING_SUBSTREAMS_DISCOVERED_BIT_ARRAY;
$CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING_SUBSTREAMS_REQUESTED_BIT_ARRAY;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_GETINFO;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_KEYFRAME_RATE;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_OVERRIDE_FRAME_SIZE;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_OVERRIDE_KEYFRAME;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_PFRAMES_PER_KEYFRAME;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_QUALITY;
$179945923F574A37108B154726F97D56 KSPROPERTY_VIDEOCOMPRESSION_WINDOWSIZE;
$984DD30B3DA0FC7F55BB22873AC26968 KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE;
$984DD30B3DA0FC7F55BB22873AC26968 KSPROPERTY_VIDEOCONTROL_CAPS;
$984DD30B3DA0FC7F55BB22873AC26968 KSPROPERTY_VIDEOCONTROL_FRAME_RATES;
$984DD30B3DA0FC7F55BB22873AC26968 KSPROPERTY_VIDEOCONTROL_MODE;
$C06925BC9DA0F969A0E4486B73371866 KSPROPERTY_VIDEODECODER_CAPS;
$C06925BC9DA0F969A0E4486B73371866 KSPROPERTY_VIDEODECODER_OUTPUT_ENABLE;
$C06925BC9DA0F969A0E4486B73371866 KSPROPERTY_VIDEODECODER_STANDARD;
$C06925BC9DA0F969A0E4486B73371866 KSPROPERTY_VIDEODECODER_STATUS;
$C06925BC9DA0F969A0E4486B73371866 KSPROPERTY_VIDEODECODER_VCR_TIMING;
$49B4DF22A98C0153E90C1246F17F787B KSPROPERTY_VIDEOENCODER_CAPS;
$49B4DF22A98C0153E90C1246F17F787B KSPROPERTY_VIDEOENCODER_CC_ENABLE;
$49B4DF22A98C0153E90C1246F17F787B KSPROPERTY_VIDEOENCODER_COPYPROTECTION;
$49B4DF22A98C0153E90C1246F17F787B KSPROPERTY_VIDEOENCODER_STANDARD;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_BACKLIGHT_COMPENSATION;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_BRIGHTNESS;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_COLORENABLE;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_CONTRAST;
MACRO_KSPROPERTY_VIDEOPROCAMP KSPROPERTY_VIDEOPROCAMP_FLAGS_AUTO;
MACRO_KSPROPERTY_VIDEOPROCAMP KSPROPERTY_VIDEOPROCAMP_FLAGS_MANUAL;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_GAIN;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_GAMMA;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_HUE;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_SATURATION;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_SHARPNESS;
$2388D0CB73CB11DFDEA2035054DDD33D KSPROPERTY_VIDEOPROCAMP_WHITEBALANCE;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_DDRAWHANDLE;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_DDRAWSURFACEHANDLE;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_DECIMATIONCAPABILITY;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_GETCONNECTINFO;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_GETVIDEOFORMAT;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_INFORMVPINPUT;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_INVERTPOLARITY;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_MAXPIXELRATE;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_NUMCONNECTINFO;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_NUMVIDEOFORMAT;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_SCALEFACTOR;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_SETCONNECTINFO;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_SETVIDEOFORMAT;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_SURFACEPARAMS;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_VIDEOPORTID;
$270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG_VPDATAINFO;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_BUFFER;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_COMPATIBLE_CAPABILITIES;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_FREQUENCY;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_INPUT_CAPABILITIES;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_OUTPUT_CAPABILITIES;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_PAN;
$B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE_VOLUME;
MACRO_KSRATE KSRATE_NOPRESENTATIONDURATION;
MACRO_KSRATE KSRATE_NOPRESENTATIONSTART;
MACRO_KSRELATIVEEVENT KSRELATIVEEVENT_FLAG_HANDLE;
MACRO_KSRELATIVEEVENT KSRELATIVEEVENT_FLAG_POINTER;
$D64CEF8F52066C406CD4BA6573420261 KSRESET_BEGIN;
$D64CEF8F52066C406CD4BA6573420261 KSRESET_END;
$B4EFCEC8C68CF8B596CEF68A8AD15C1A KSSTATE_ACQUIRE;
$B4EFCEC8C68CF8B596CEF68A8AD15C1A KSSTATE_PAUSE;
$B4EFCEC8C68CF8B596CEF68A8AD15C1A KSSTATE_RUN;
$B4EFCEC8C68CF8B596CEF68A8AD15C1A KSSTATE_STOP;
MACRO_KSSTREAM_READ KSSTREAM_FAILUREEXCEPTION;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_DATADISCONTINUITY;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_DURATIONVALID;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_ENDOFSTREAM;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_FLUSHONPAUSE;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_LOOPEDDATA;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_PREROLL;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_SPLICEPOINT;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_TIMEDISCONTINUITY;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_TIMEVALID;
MACRO_KSSTREAM KSSTREAM_HEADER_OPTIONSF_TYPECHANGED;
MACRO_KSSTREAM_READ KSSTREAM_NONPAGED_DATA;
MACRO_KSSTREAM_READ KSSTREAM_PAGED_DATA;
$DD63D416C80B0B367D506EB1E8E34ADE KSSTREAM_POINTER_STATE_LOCKED;
$DD63D416C80B0B367D506EB1E8E34ADE KSSTREAM_POINTER_STATE_UNLOCKED;
MACRO_KSSTREAM_READ KSSTREAM_READ;
MACRO_KSSTREAM_READ KSSTREAM_SYNCHRONOUS;
MACRO_KSSTREAM_READ KSSTREAM_WRITE;
$D65DCBF02618B4971A14091F77C71942 KSTARGET_STATE_DISABLED;
$D65DCBF02618B4971A14091F77C71942 KSTARGET_STATE_ENABLED;
MACRO_KSWAVE KSWAVE_BUFFER_ATTRIBUTEF_LOOPING;
MACRO_KSWAVE KSWAVE_BUFFER_ATTRIBUTEF_STATIC;
MACRO_KSWAVE KSWAVE_COMPATCAPS_INPUT;
MACRO_KSWAVE KSWAVE_COMPATCAPS_OUTPUT;
$0C48B1A02A365DA9EEBAB619832376BC KS_AMVP_BEST_BANDWIDTH;
$0C48B1A02A365DA9EEBAB619832376BC KS_AMVP_DO_NOT_CARE;
$0C48B1A02A365DA9EEBAB619832376BC KS_AMVP_INPUT_SAME_AS_OUTPUT;
$B8842F298E38803458C077776FB4B251 KS_AMVP_MODE_BOBINTERLEAVED;
$B8842F298E38803458C077776FB4B251 KS_AMVP_MODE_BOBNONINTERLEAVED;
$B8842F298E38803458C077776FB4B251 KS_AMVP_MODE_SKIPEVEN;
$B8842F298E38803458C077776FB4B251 KS_AMVP_MODE_SKIPODD;
$B8842F298E38803458C077776FB4B251 KS_AMVP_MODE_WEAVE;
$3F0E1F32807E838958D0814D130CFE59 KS_AM_RATE_ExactRateChange;
$3F0E1F32807E838958D0814D130CFE59 KS_AM_RATE_MaxFullDataRate;
$3F0E1F32807E838958D0814D130CFE59 KS_AM_RATE_SimpleRateChange;
$3F0E1F32807E838958D0814D130CFE59 KS_AM_RATE_Step;
MACRO_KS_AM KS_AM_UseNewCSSKey;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_NTSC_433;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_NTSC_M;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_NTSC_M_J;
MACRO_KS_VIDEO KS_AnalogVideo_NTSC_Mask;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_None;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_60;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_B;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_D;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_G;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_H;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_I;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_M;
MACRO_KS_VIDEO KS_AnalogVideo_PAL_Mask;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_N;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_PAL_N_COMBO;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_B;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_D;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_G;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_H;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_K;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_K1;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_L;
$658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideo_SECAM_L1;
MACRO_KS_VIDEO KS_AnalogVideo_SECAM_Mask;
MACRO_KS KS_BI_BITFIELDS;
MACRO_KS KS_BI_RGB;
MACRO_KS KS_BI_RLE4;
MACRO_KS KS_BI_RLE8;
MACRO_KS_CC KS_CC_SUBSTREAM_EVEN;
MACRO_KS_CC KS_CC_SUBSTREAM_FIELD1_MASK;
MACRO_KS_CC KS_CC_SUBSTREAM_FIELD2_MASK;
MACRO_KS_CC KS_CC_SUBSTREAM_ODD;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_CC1;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_CC2;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_CC3;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_CC4;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_T1;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_T2;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_T3;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_T4;
MACRO_KS_CC KS_CC_SUBSTREAM_SERVICE_XDS;
$46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps_CanBFrame;
$46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps_CanCrunch;
$46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps_CanKeyFrame;
$46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps_CanQuality;
$46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps_CanWindow;
$A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED;
$A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE_AUTHENTICATION_REQUIRED;
$A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE_DONE;
$A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE_INITIALIZE;
$A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE_INITIALIZE_TITLE;
MACRO_KS KS_DVD_CGMS_COPY_ONCE;
MACRO_KS KS_DVD_CGMS_COPY_PERMITTED;
MACRO_KS KS_DVD_CGMS_COPY_PROTECT_MASK;
MACRO_KS KS_DVD_CGMS_NO_COPY;
MACRO_KS KS_DVD_CGMS_RESERVED_MASK;
MACRO_KS KS_DVD_COPYRIGHTED;
MACRO_KS KS_DVD_COPYRIGHT_MASK;
MACRO_KS KS_DVD_NOT_COPYRIGHTED;
MACRO_KS KS_DVD_SECTOR_NOT_PROTECTED;
MACRO_KS KS_DVD_SECTOR_PROTECTED;
MACRO_KS KS_DVD_SECTOR_PROTECT_MASK;
MACRO_KS KS_INTERLACE_1FieldPerSample;
MACRO_KS KS_INTERLACE_DisplayModeBobOnly;
MACRO_KS KS_INTERLACE_DisplayModeBobOrWeave;
MACRO_KS KS_INTERLACE_DisplayModeMask;
MACRO_KS KS_INTERLACE_DisplayModeWeaveOnly;
MACRO_KS KS_INTERLACE_Field1First;
MACRO_KS KS_INTERLACE_FieldPatBothIrregular;
MACRO_KS KS_INTERLACE_FieldPatBothRegular;
MACRO_KS KS_INTERLACE_FieldPatField1Only;
MACRO_KS KS_INTERLACE_FieldPatField2Only;
MACRO_KS KS_INTERLACE_FieldPatternMask;
MACRO_KS KS_INTERLACE_IsInterlaced;
MACRO_KS KS_INTERLACE_UNUSED;
$AB84C8955069406F80CB719201B159DD KS_MACROVISION_DISABLED;
$AB84C8955069406F80CB719201B159DD KS_MACROVISION_LEVEL1;
$AB84C8955069406F80CB719201B159DD KS_MACROVISION_LEVEL2;
$AB84C8955069406F80CB719201B159DD KS_MACROVISION_LEVEL3;
MACRO_KS KS_MAX_SIZE_MPEG1_SEQUENCE_INFO;
$4B933B38561F3202E8B681F2D4CA4B1B KS_MPEG2Level_High;
$4B933B38561F3202E8B681F2D4CA4B1B KS_MPEG2Level_High1440;
$4B933B38561F3202E8B681F2D4CA4B1B KS_MPEG2Level_Low;
$4B933B38561F3202E8B681F2D4CA4B1B KS_MPEG2Level_Main;
$0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile_High;
$0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile_Main;
$0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile_SNRScalable;
$0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile_Simple;
$0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile_SpatiallyScalable;
MACRO_KS KS_MPEG2_27MhzTimebase;
MACRO_KS KS_MPEG2_DSS_UserData;
MACRO_KS KS_MPEG2_DVB_UserData;
MACRO_KS KS_MPEG2_DVDLine21Field1;
MACRO_KS KS_MPEG2_DVDLine21Field2;
MACRO_KS KS_MPEG2_DoPanScan;
MACRO_KS KS_MPEG2_FilmCameraMode;
MACRO_KS KS_MPEG2_LetterboxAnalogOut;
MACRO_KS KS_MPEG2_SourceIsLetterboxed;
MACRO_KS KS_MPEGAUDIOINFO_27MhzTimebase;
MACRO_KS KS_NABTS_GROUPID_LOCAL_CABLE_SYSTEM_ADVERTISER_BASE;
MACRO_KS KS_NABTS_GROUPID_LOCAL_CABLE_SYSTEM_CONTENT_BASE;
MACRO_KS KS_NABTS_GROUPID_MICROSOFT_RESERVED_TEST_DATA_BASE;
MACRO_KS KS_NABTS_GROUPID_NETWORK_WIDE_ADVERTISER_BASE;
MACRO_KS KS_NABTS_GROUPID_NETWORK_WIDE_CONTENT_BASE;
MACRO_KS KS_NABTS_GROUPID_ORIGINAL_CONTENT_ADVERTISER_BASE;
MACRO_KS KS_NABTS_GROUPID_ORIGINAL_CONTENT_BASE;
MACRO_KS KS_NABTS_GROUPID_PRODUCTION_COMPANY_ADVERTISER_BASE;
MACRO_KS KS_NABTS_GROUPID_PRODUCTION_COMPANY_CONTENT_BASE;
MACRO_KS KS_NABTS_GROUPID_SYNDICATED_SHOW_ADVERTISER_BASE;
MACRO_KS KS_NABTS_GROUPID_SYNDICATED_SHOW_CONTENT_BASE;
MACRO_KS KS_NABTS_GROUPID_TELEVISION_STATION_ADVERTISER_BASE;
MACRO_KS KS_NABTS_GROUPID_TELEVISION_STATION_CONTENT_BASE;
$DAFE30771B95F95613600355B79694C1 KS_Obsolete_VideoControlFlag_ExternalTriggerEnable;
$DAFE30771B95F95613600355B79694C1 KS_Obsolete_VideoControlFlag_Trigger;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_1394;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_AESDigital;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_AUX;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_AudioDecoder;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_Line;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_Mic;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_SCSI;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_SPDIFDigital;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_Tuner;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Audio_USB;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_1394;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_AUX;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_Composite;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_ParallelDigital;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_RGB;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_SCART;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_SCSI;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_SVideo;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_SerialDigital;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_Tuner;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_USB;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_VideoDecoder;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_VideoEncoder;
$8E304CD910907B07F66BA6A3540081CA KS_PhysConn_Video_YRYBY;
$27AD37380C8900BF8828E9942DAD6F74 KS_PixAspectRatio_NTSC16x9;
$27AD37380C8900BF8828E9942DAD6F74 KS_PixAspectRatio_NTSC4x3;
$27AD37380C8900BF8828E9942DAD6F74 KS_PixAspectRatio_PAL16x9;
$27AD37380C8900BF8828E9942DAD6F74 KS_PixAspectRatio_PAL4x3;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_AbsolutePositioning;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanGetCurrentPos;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanGetDuration;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanGetStopPos;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanPlayBackwards;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanSeekAbsolute;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanSeekBackwards;
$32421077C2010E274338AC2C523E1512 KS_SEEKING_CanSeekForwards;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_IncrementalPositioning;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_NoPositioning;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_PositioningBitsMask;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_RelativePositioning;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_ReturnTime;
$6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_SeekToKeyFrame;
$A1E89C657E90049EA789DE2B75FA4D0B KS_TUNER_STRATEGY_DRIVER_TUNES;
$A1E89C657E90049EA789DE2B75FA4D0B KS_TUNER_STRATEGY_PLL;
$A1E89C657E90049EA789DE2B75FA4D0B KS_TUNER_STRATEGY_SIGNAL_STRENGTH;
$219D11F677061808D19E166038DCDF6D KS_TUNER_TUNING_COARSE;
$219D11F677061808D19E166038DCDF6D KS_TUNER_TUNING_EXACT;
$219D11F677061808D19E166038DCDF6D KS_TUNER_TUNING_FINE;
MACRO_KS_TVAUDIO KS_TVAUDIO_MODE_LANG_A;
MACRO_KS_TVAUDIO KS_TVAUDIO_MODE_LANG_B;
MACRO_KS_TVAUDIO KS_TVAUDIO_MODE_LANG_C;
MACRO_KS_TVAUDIO KS_TVAUDIO_MODE_MONO;
MACRO_KS_TVAUDIO KS_TVAUDIO_MODE_STEREO;
MACRO_KS KS_TVTUNER_CHANGE_BEGIN_TUNE;
MACRO_KS KS_TVTUNER_CHANGE_END_TUNE;
MACRO_KS KS_VBICAP_PROTECTION_MV_DETECTED;
MACRO_KS KS_VBICAP_PROTECTION_MV_HARDWARE;
MACRO_KS KS_VBICAP_PROTECTION_MV_PRESENT;
MACRO_KS KS_VBIDATARATE_CC;
MACRO_KS KS_VBIDATARATE_NABTS;
MACRO_KS KS_VBISAMPLINGRATE_47X_NABTS;
MACRO_KS KS_VBISAMPLINGRATE_4X_NABTS;
MACRO_KS KS_VBISAMPLINGRATE_5X_NABTS;
MACRO_KS_VIDEO KS_VBI_FLAG_FIELD1;
MACRO_KS_VIDEO KS_VBI_FLAG_FIELD2;
MACRO_KS_VIDEO KS_VBI_FLAG_MV_DETECTED;
MACRO_KS_VIDEO KS_VBI_FLAG_MV_HARDWARE;
MACRO_KS_VIDEO KS_VBI_FLAG_MV_PRESENT;
MACRO_KS_VIDEO KS_VBI_FLAG_TVTUNER_CHANGE;
MACRO_KS_VIDEO KS_VBI_FLAG_VBIINFOHEADER_CHANGE;
$87F25CE704E45E1C4AD5F80E170A75FF KS_VIDEODECODER_FLAGS_CAN_DISABLE_OUTPUT;
$87F25CE704E45E1C4AD5F80E170A75FF KS_VIDEODECODER_FLAGS_CAN_INDICATE_LOCKED;
$87F25CE704E45E1C4AD5F80E170A75FF KS_VIDEODECODER_FLAGS_CAN_USE_VCR_LOCKING;
MACRO_KS KS_VIDEOSTREAM_CAPTURE;
MACRO_KS KS_VIDEOSTREAM_CC;
MACRO_KS KS_VIDEOSTREAM_EDS;
MACRO_KS KS_VIDEOSTREAM_IS_VPE;
MACRO_KS KS_VIDEOSTREAM_NABTS;
MACRO_KS KS_VIDEOSTREAM_PREVIEW;
MACRO_KS KS_VIDEOSTREAM_STILL;
MACRO_KS KS_VIDEOSTREAM_TELETEXT;
MACRO_KS KS_VIDEOSTREAM_VBI;
MACRO_KS KS_VIDEO_ALLOC_VPE_AGP;
MACRO_KS KS_VIDEO_ALLOC_VPE_DISPLAY;
MACRO_KS KS_VIDEO_ALLOC_VPE_SYSTEM;
MACRO_KS_VIDEO KS_VIDEO_FLAG_B_FRAME;
MACRO_KS_VIDEO KS_VIDEO_FLAG_FIELD1;
MACRO_KS_VIDEO KS_VIDEO_FLAG_FIELD2;
MACRO_KS_VIDEO KS_VIDEO_FLAG_FRAME;
MACRO_KS_VIDEO KS_VIDEO_FLAG_I_FRAME;
MACRO_KS_VIDEO KS_VIDEO_FLAG_P_FRAME;
$DAFE30771B95F95613600355B79694C1 KS_VideoControlFlag_ExternalTriggerEnable;
$DAFE30771B95F95613600355B79694C1 KS_VideoControlFlag_FlipHorizontal;
$DAFE30771B95F95613600355B79694C1 KS_VideoControlFlag_FlipVertical;
$DAFE30771B95F95613600355B79694C1 KS_VideoControlFlag_Trigger;
MACRO_KS KS_iBLUE;
MACRO_KS KS_iEGA_COLORS;
MACRO_KS KS_iGREEN;
MACRO_KS KS_iMASK_COLORS;
MACRO_KS KS_iMAXBITS;
MACRO_KS KS_iPALETTE;
MACRO_KS KS_iPALETTE_COLORS;
MACRO_KS KS_iRED;
MACRO_KS KS_iTRUECOLOR;
_KBUGCHECK_CALLBACK_REASON KbCallbackDumpIo;
_KBUGCHECK_CALLBACK_REASON KbCallbackInvalid;
_KBUGCHECK_CALLBACK_REASON KbCallbackReserved1;
_KBUGCHECK_CALLBACK_REASON KbCallbackSecondaryDumpData;
_KBUGCHECK_DUMP_IO_TYPE KbDumpIoBody;
_KBUGCHECK_DUMP_IO_TYPE KbDumpIoComplete;
_KBUGCHECK_DUMP_IO_TYPE KbDumpIoHeader;
_KBUGCHECK_DUMP_IO_TYPE KbDumpIoInvalid;
_KBUGCHECK_DUMP_IO_TYPE KbDumpIoSecondaryData;
NTSTATUS KdDisableDebugger(void);
NTSTATUS KdEnableDebugger(void);
BOOLEAN KdRefreshDebuggerNotPresent(void);
KIRQL __stdcall KeAcquireInterruptSpinLock(PKINTERRUPT Interrupt);
BOOLEAN KeAreApcsDisabled(void);
void __stdcall __noreturn KeBugCheckEx(ULONG BugCheckCode, ULONG_PTR BugCheckParameter1, ULONG_PTR BugCheckParameter2, ULONG_PTR BugCheckParameter3, ULONG_PTR BugCheckParameter4);
BOOLEAN __stdcall KeCancelTimer(PKTIMER);
void __stdcall KeClearEvent(PRKEVENT Event);
NTSTATUS __stdcall KeDelayExecutionThread(KPROCESSOR_MODE WaitMode, BOOLEAN Alertable, PLARGE_INTEGER Interval);
BOOLEAN __stdcall KeDeregisterBugCheckCallback(PKBUGCHECK_CALLBACK_RECORD CallbackRecord);
BOOLEAN __stdcall KeDeregisterBugCheckReasonCallback(PKBUGCHECK_REASON_CALLBACK_RECORD CallbackRecord);
NTSTATUS __stdcall KeDeregisterNmiCallback(PVOID Handle);
void KeEnterCriticalRegion(void);
void KeFlushQueuedDpcs(void);
void KeFlushWriteBuffer(void);
KIRQL __stdcall KeGetCurrentIrql();
PKTHREAD __stdcall KeGetCurrentThread();
ULONG KeGetRecommendedSharedDataAlignment(void);
void __stdcall KeInitializeDeviceQueue(PKDEVICE_QUEUE DeviceQueue);
void __stdcall KeInitializeDpc(PRKDPC Dpc, PKDEFERRED_ROUTINE DeferredRoutine, PVOID DeferredContext);
void __stdcall KeInitializeEvent(PRKEVENT Event, EVENT_TYPE Type, BOOLEAN State);
void __stdcall KeInitializeMutex(PRKMUTEX Mutex, ULONG Level);
void __stdcall KeInitializeSemaphore(PRKSEMAPHORE Semaphore, LONG Count, LONG Limit);
void __stdcall KeInitializeSpinLock(PKSPIN_LOCK SpinLock);
void __stdcall KeInitializeTimer(PKTIMER Timer);
void __stdcall KeInitializeTimerEx(PKTIMER Timer, TIMER_TYPE Type);
BOOLEAN __stdcall KeInsertByKeyDeviceQueue(PKDEVICE_QUEUE DeviceQueue, PKDEVICE_QUEUE_ENTRY DeviceQueueEntry, ULONG SortKey);
BOOLEAN __stdcall KeInsertDeviceQueue(PKDEVICE_QUEUE DeviceQueue, PKDEVICE_QUEUE_ENTRY DeviceQueueEntry);
BOOLEAN __stdcall KeInsertQueueDpc(PRKDPC Dpc, PVOID SystemArgument1, PVOID SystemArgument2);
ULONG_PTR __stdcall KeIpiGenericCall(PKIPI_BROADCAST_WORKER BroadcastFunction, ULONG_PTR Context);
void KeLeaveCriticalRegion(void);
void KeMemoryBarrier(void);
ULONGLONG KeQueryInterruptTime(void);
LARGE_INTEGER __stdcall KeQueryPerformanceCounter(PLARGE_INTEGER PerformanceFrequency);
KPRIORITY __stdcall KeQueryPriorityThread(PKTHREAD Thread);
ULONG __stdcall KeQueryRuntimeThread(PKTHREAD Thread, PULONG UserTime);
void __stdcall KeQuerySystemTime(PLARGE_INTEGER CurrentTime);
ULONG KeQueryTimeIncrement(void);
LONG __stdcall KeReadStateEvent(PRKEVENT Event);
LONG __stdcall KeReadStateMutex(PRKMUTEX Mutex);
LONG __stdcall KeReadStateSemaphore(PRKSEMAPHORE Semaphore);
BOOLEAN __stdcall KeReadStateTimer(PKTIMER Timer);
BOOLEAN __stdcall KeRegisterBugCheckCallback(PKBUGCHECK_CALLBACK_RECORD CallbackRecord, PKBUGCHECK_CALLBACK_ROUTINE CallbackRoutine, PVOID Buffer, ULONG Length, PUCHAR Component);
BOOLEAN __stdcall KeRegisterBugCheckReasonCallback(PKBUGCHECK_REASON_CALLBACK_RECORD CallbackRecord, PKBUGCHECK_REASON_CALLBACK_ROUTINE CallbackRoutine, KBUGCHECK_CALLBACK_REASON Reason, PUCHAR Component);
PVOID __stdcall KeRegisterNmiCallback(PNMI_CALLBACK CallbackRoutine, PVOID Context);
void __stdcall KeReleaseInterruptSpinLock(PKINTERRUPT Interrupt, KIRQL OldIrql);
LONG __stdcall KeReleaseMutex(PRKMUTEX Mutex, BOOLEAN Wait);
LONG __stdcall KeReleaseSemaphore(PRKSEMAPHORE Semaphore, KPRIORITY Increment, LONG Adjustment, BOOLEAN Wait);
PKDEVICE_QUEUE_ENTRY __stdcall KeRemoveByKeyDeviceQueue(PKDEVICE_QUEUE DeviceQueue, ULONG SortKey);
PKDEVICE_QUEUE_ENTRY __stdcall KeRemoveByKeyDeviceQueueIfBusy(PKDEVICE_QUEUE DeviceQueue, ULONG SortKey);
PKDEVICE_QUEUE_ENTRY __stdcall KeRemoveDeviceQueue(PKDEVICE_QUEUE DeviceQueue);
BOOLEAN __stdcall KeRemoveEntryDeviceQueue(PKDEVICE_QUEUE DeviceQueue, PKDEVICE_QUEUE_ENTRY DeviceQueueEntry);
BOOLEAN __stdcall KeRemoveQueueDpc(PRKDPC Dpc);
LONG __stdcall KeResetEvent(PRKEVENT Event);
NTSTATUS __stdcall KeRestoreFloatingPointState(PKFLOATING_SAVE FloatSave);
NTSTATUS __stdcall KeSaveFloatingPointState(PKFLOATING_SAVE FloatSave);
LONG __stdcall KeSetEvent(PRKEVENT Event, KPRIORITY Increment, BOOLEAN Wait);
KPRIORITY __stdcall KeSetPriorityThread(PKTHREAD Thread, KPRIORITY Priority);
BOOLEAN __stdcall KeSetTimer(PKTIMER Timer, LARGE_INTEGER DueTime, PKDPC Dpc);
BOOLEAN __stdcall KeSetTimerEx(PKTIMER Timer, LARGE_INTEGER DueTime, LONG Period, PKDPC Dpc);
void __stdcall KeStallExecutionProcessor(ULONG MicroSeconds);
BOOLEAN __stdcall KeSynchronizeExecution(PKINTERRUPT Interrupt, PKSYNCHRONIZE_ROUTINE SynchronizeRoutine, PVOID SynchronizeContext);
NTSTATUS __stdcall KeWaitForMultipleObjects(ULONG Count, PVOID Object[], WAIT_TYPE WaitType, KWAIT_REASON WaitReason, KPROCESSOR_MODE WaitMode, BOOLEAN Alertable, PLARGE_INTEGER Timeout, PKWAIT_BLOCK WaitBlockArray);
NTSTATUS __stdcall KeWaitForSingleObject(PVOID Object, KWAIT_REASON WaitReason, KPROCESSOR_MODE WaitMode, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
_IO_ALLOCATION_ACTION KeepObject;
_MODE KernelMode;
_KEY_INFORMATION_CLASS KeyBasicInformation;
_KEY_INFORMATION_CLASS KeyFullInformation;
_KEY_INFORMATION_CLASS KeyNodeInformation;
_KEY_SET_INFORMATION_CLASS KeyUserFlagsInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValueBasicInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValueFullInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValueFullInformationAlign64;
_KEY_VALUE_INFORMATION_CLASS KeyValuePartialInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValuePartialInformationAlign64;
_KEY_SET_INFORMATION_CLASS KeyWriteTimeInformation;
NTSTATUS __stdcall KoCreateInstance(const IID *const ClassId, IUnknown *UnkOuter, ULONG ClsContext, const IID *const InterfaceId, PVOID *Interface);
NTSTATUS __stdcall KoDeviceInitialize(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall KoDriverInitialize(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPathName, KoCreateObjectHandler CreateObjectHandler);
void __stdcall KoRelease(const IID *const ClassId);
$6A4F9FD289D1A939E2A70058613B4F06 KsAcquireAndRemove;
$6A4F9FD289D1A939E2A70058613B4F06 KsAcquireAndRemoveOnlySingleItem;
void __stdcall KsAcquireControl(PVOID Object);
void __stdcall KsAcquireDevice(PKSDEVICE Device);
void __stdcall KsAcquireDeviceSecurityLock(KSDEVICE_HEADER Header, BOOLEAN Exclusive);
$6A4F9FD289D1A939E2A70058613B4F06 KsAcquireOnly;
$6A4F9FD289D1A939E2A70058613B4F06 KsAcquireOnlySingleItem;
NTSTATUS __stdcall KsAcquireResetValue(PIRP Irp, KSRESET *ResetValue);
NTSTATUS __stdcall KsAddDevice(PDRIVER_OBJECT DriverObject, PDEVICE_OBJECT PhysicalDeviceObject);
void __stdcall KsAddEvent(PVOID Object, PKSEVENT_ENTRY EventEntry);
void __stdcall KsAddIrpToCancelableQueue(PLIST_ENTRY QueueHead, PKSPIN_LOCK SpinLock, PIRP Irp, KSLIST_ENTRY_LOCATION ListLocation, PDRIVER_CANCEL DriverCancel);
NTSTATUS __stdcall KsAddItemToObjectBag(KSOBJECT_BAG ObjectBag, PVOID Item, PFNKSFREE Free);
NTSTATUS __stdcall KsAddObjectCreateItemToDeviceHeader(KSDEVICE_HEADER Header, PDRIVER_DISPATCH Create, PVOID Context, PWCHAR ObjectClass, PSECURITY_DESCRIPTOR SecurityDescriptor);
NTSTATUS __stdcall KsAddObjectCreateItemToObjectHeader(KSOBJECT_HEADER Header, PDRIVER_DISPATCH Create, PVOID Context, PWCHAR ObjectClass, PSECURITY_DESCRIPTOR SecurityDescriptor);
NTSTATUS __stdcall KsAllocateDefaultClock(PKSDEFAULTCLOCK *DefaultClock);
NTSTATUS __stdcall KsAllocateDefaultClockEx(PKSDEFAULTCLOCK *DefaultClock, PVOID Context, PFNKSSETTIMER SetTimer, PFNKSCANCELTIMER CancelTimer, PFNKSCORRELATEDTIME CorrelatedTime, const KSRESOLUTION *Resolution, ULONG Flags);
NTSTATUS __stdcall KsAllocateDeviceHeader(KSDEVICE_HEADER *Header, ULONG ItemsCount, PKSOBJECT_CREATE_ITEM ItemsList);
NTSTATUS __stdcall KsAllocateExtraData(PIRP Irp, ULONG ExtraSize, PVOID *ExtraBuffer);
NTSTATUS __stdcall KsAllocateObjectBag(PKSDEVICE Device, KSOBJECT_BAG *ObjectBag);
NTSTATUS __stdcall KsAllocateObjectCreateItem(KSDEVICE_HEADER Header, PKSOBJECT_CREATE_ITEM CreateItem, BOOLEAN AllocateEntry, PFNKSITEMFREECALLBACK ItemFreeCallback);
NTSTATUS __stdcall KsAllocateObjectHeader(KSOBJECT_HEADER *Header, ULONG ItemsCount, PKSOBJECT_CREATE_ITEM ItemsList, PIRP Irp, const KSDISPATCH_TABLE *Table);
NTSTATUS __stdcall KsCacheMedium(PUNICODE_STRING SymbolicLink, PKSPIN_MEDIUM Medium, ULONG PinDirection);
void __stdcall KsCancelIo(PLIST_ENTRY QueueHead, PKSPIN_LOCK SpinLock);
void __stdcall KsCancelRoutine(PDEVICE_OBJECT DeviceObject, PIRP Irp);
void __stdcall KsCompletePendingRequest(PIRP Irp);
NTSTATUS __stdcall KsCopyObjectBagItems(KSOBJECT_BAG ObjectBagDestination, KSOBJECT_BAG ObjectBagSource);
NTSTATUS __stdcall KsCreateAllocator(HANDLE ConnectionHandle, PKSALLOCATOR_FRAMING AllocatorFraming, PHANDLE AllocatorHandle);
NTSTATUS __stdcall KsCreateClock(HANDLE ConnectionHandle, PKSCLOCK_CREATE ClockCreate, PHANDLE ClockHandle);
NTSTATUS __stdcall KsCreateDefaultAllocator(PIRP Irp);
NTSTATUS __stdcall KsCreateDefaultAllocatorEx(PIRP Irp, PVOID InitializeContext, PFNKSDEFAULTALLOCATE DefaultAllocate, PFNKSDEFAULTFREE DefaultFree, PFNKSINITIALIZEALLOCATOR InitializeAllocator, PFNKSDELETEALLOCATOR DeleteAllocator);
NTSTATUS __stdcall KsCreateDefaultClock(PIRP Irp, PKSDEFAULTCLOCK DefaultClock);
NTSTATUS __stdcall KsCreateDefaultSecurity(PSECURITY_DESCRIPTOR ParentSecurity, PSECURITY_DESCRIPTOR *DefaultSecurity);
NTSTATUS __stdcall KsCreateDevice(PDRIVER_OBJECT DriverObject, PDEVICE_OBJECT PhysicalDeviceObject, const KSDEVICE_DESCRIPTOR *Descriptor, ULONG ExtensionSize, PKSDEVICE *Device);
NTSTATUS __stdcall KsCreateFilterFactory(PDEVICE_OBJECT DeviceObject, const KSFILTER_DESCRIPTOR *Descriptor, PWCHAR RefString, PSECURITY_DESCRIPTOR SecurityDescriptor, ULONG CreateItemFlags, PFNKSFILTERFACTORYPOWER SleepCallback, PFNKSFILTERFACTORYPOWER WakeCallback, PKSFILTERFACTORY *FilterFactory);
NTSTATUS __stdcall KsCreatePin(HANDLE FilterHandle, PKSPIN_CONNECT Connect, ACCESS_MASK DesiredAccess, PHANDLE ConnectionHandle);
NTSTATUS __stdcall KsCreateTopologyNode(HANDLE ParentHandle, PKSNODE_CREATE NodeCreate, ACCESS_MASK DesiredAccess, PHANDLE NodeHandle);
ULONG __stdcall KsDecrementCountedWorker(PKSWORKER Worker);
NTSTATUS __stdcall KsDefaultAddEventHandler(PIRP Irp, PKSEVENTDATA EventData, PKSEVENT_ENTRY EventEntry);
NTSTATUS __stdcall KsDefaultDeviceIoCompletion(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDefaultDispatchPnp(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDefaultDispatchPower(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDefaultForwardIrp(PDEVICE_OBJECT DeviceObject, PIRP Irp);
void __stdcall KsDereferenceBusObject(KSDEVICE_HEADER Header);
ULONG __stdcall KsDeviceGetBusData(PKSDEVICE Device, ULONG DataType, PVOID Buffer, ULONG Offset, ULONG Length);
PKSFILTERFACTORY __stdcall KsDeviceGetFirstChildFilterFactory(PKSDEVICE Device);
void __stdcall KsDeviceRegisterAdapterObject(PKSDEVICE Device, PADAPTER_OBJECT AdapterObject, ULONG MaxMappingsByteCount, ULONG MappingTableStride);
ULONG __stdcall KsDeviceSetBusData(PKSDEVICE Device, ULONG DataType, PVOID Buffer, ULONG Offset, ULONG Length);
NTSTATUS __stdcall KsDisableEvent(PIRP Irp, PLIST_ENTRY EventsList, KSEVENTS_LOCKTYPE EventsFlags, PVOID EventsLock);
void __stdcall KsDiscardEvent(PKSEVENT_ENTRY EventEntry);
BOOLEAN __stdcall KsDispatchFastIoDeviceControlFailure(PFILE_OBJECT FileObject, BOOLEAN Wait, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, ULONG IoControlCode, PIO_STATUS_BLOCK IoStatus, PDEVICE_OBJECT DeviceObject);
BOOLEAN __stdcall KsDispatchFastReadFailure(PFILE_OBJECT FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall KsDispatchInvalidDeviceRequest(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDispatchIrp(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDispatchQuerySecurity(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDispatchSetSecurity(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall KsDispatchSpecificMethod(PIRP Irp, PFNKSHANDLER Handler);
NTSTATUS __stdcall KsDispatchSpecificProperty(PIRP Irp, PFNKSHANDLER Handler);
NTSTATUS __stdcall KsEnableEvent(PIRP Irp, ULONG EventSetsCount, const KSEVENT_SET *EventSet, PLIST_ENTRY EventsList, KSEVENTS_LOCKTYPE EventsFlags, PVOID EventsLock);
NTSTATUS __stdcall KsEnableEventWithAllocator(PIRP Irp, ULONG EventSetsCount, const KSEVENT_SET *EventSet, PLIST_ENTRY EventsList, KSEVENTS_LOCKTYPE EventsFlags, PVOID EventsLock, PFNKSALLOCATOR Allocator, ULONG EventItemSize);
BOOLEAN __stdcall KsFastMethodHandler(PFILE_OBJECT FileObject, PKSMETHOD Method, ULONG MethodLength, PVOID Data, ULONG DataLength, PIO_STATUS_BLOCK IoStatus, ULONG MethodSetsCount, const KSMETHOD_SET *MethodSet);
BOOLEAN __stdcall KsFastPropertyHandler(PFILE_OBJECT FileObject, PKSPROPERTY Property, ULONG PropertyLength, PVOID Data, ULONG DataLength, PIO_STATUS_BLOCK IoStatus, ULONG PropertySetsCount, const KSPROPERTY_SET *PropertySet);
void __stdcall KsFilterAcquireControl(PKSFILTER Filter);
void __stdcall KsFilterAcquireProcessingMutex(PKSFILTER Filter);
void __stdcall KsFilterAddEvent(PKSFILTER Filter, PKSEVENT_ENTRY EventEntry);
NTSTATUS __stdcall KsFilterAddTopologyConnections(PKSFILTER Filter, ULONG NewConnectionsCount, const KSTOPOLOGY_CONNECTION *const NewTopologyConnections);
void __stdcall KsFilterAttemptProcessing(PKSFILTER Filter, BOOLEAN Asynchronous);
NTSTATUS __stdcall KsFilterCreateNode(PKSFILTER Filter, const KSNODE_DESCRIPTOR *const NodeDescriptor, PULONG NodeID);
NTSTATUS __stdcall KsFilterCreatePinFactory(PKSFILTER Filter, const KSPIN_DESCRIPTOR_EX *const PinDescriptor, PULONG PinID);
NTSTATUS __stdcall KsFilterFactoryAddCreateItem(PKSFILTERFACTORY FilterFactory, PWCHAR RefString, PSECURITY_DESCRIPTOR SecurityDescriptor, ULONG CreateItemFlags);
PKSDEVICE __stdcall KsFilterFactoryGetDevice(PKSFILTERFACTORY FilterFactory);
PKSFILTER __stdcall KsFilterFactoryGetFirstChildFilter(PKSFILTERFACTORY FilterFactory);
PKSFILTERFACTORY __stdcall KsFilterFactoryGetNextSiblingFilterFactory(PKSFILTERFACTORY FilterFactory);
PKSDEVICE __stdcall KsFilterFactoryGetParentDevice(PKSFILTERFACTORY FilterFactory);
PUNICODE_STRING __stdcall KsFilterFactoryGetSymbolicLink(PKSFILTERFACTORY FilterFactory);
NTSTATUS __stdcall KsFilterFactorySetDeviceClassesState(PKSFILTERFACTORY FilterFactory, BOOLEAN NewState);
NTSTATUS __stdcall KsFilterFactoryUpdateCacheData(PKSFILTERFACTORY FilterFactory, const KSFILTER_DESCRIPTOR *FilterDescriptor);
void __stdcall KsFilterGenerateEvents(PKSFILTER Filter, const GUID *EventSet, ULONG EventId, ULONG DataSize, PVOID Data, PFNKSGENERATEEVENTCALLBACK CallBack, PVOID CallBackContext);
PKSGATE __stdcall KsFilterGetAndGate(PKSFILTER Filter);
ULONG __stdcall KsFilterGetChildPinCount(PKSFILTER Filter, ULONG PinId);
PKSDEVICE __stdcall KsFilterGetDevice(PKSFILTER Filter);
PKSPIN __stdcall KsFilterGetFirstChildPin(PKSFILTER Filter, ULONG PinId);
PKSFILTER __stdcall KsFilterGetNextSiblingFilter(PKSFILTER Filter);
PKSFILTERFACTORY __stdcall KsFilterGetParentFilterFactory(PKSFILTER Filter);
void __stdcall KsFilterRegisterPowerCallbacks(PKSFILTER Filter, PFNKSFILTERPOWER Sleep, PFNKSFILTERPOWER Wake);
void __stdcall KsFilterReleaseControl(PKSFILTER Filter);
void __stdcall KsFilterReleaseProcessingMutex(PKSFILTER Filter);
NTSTATUS __stdcall KsForwardAndCatchIrp(PDEVICE_OBJECT DeviceObject, PIRP Irp, PFILE_OBJECT FileObject, KSSTACK_USE StackUse);
NTSTATUS __stdcall KsForwardIrp(PIRP Irp, PFILE_OBJECT FileObject, BOOLEAN ReuseStackLocation);
void __stdcall KsFreeDefaultClock(PKSDEFAULTCLOCK DefaultClock);
void __stdcall KsFreeDeviceHeader(KSDEVICE_HEADER Header);
void __stdcall KsFreeEventList(PFILE_OBJECT FileObject, PLIST_ENTRY EventsList, KSEVENTS_LOCKTYPE EventsFlags, PVOID EventsLock);
void __stdcall KsFreeObjectBag(KSOBJECT_BAG ObjectBag);
NTSTATUS __stdcall KsFreeObjectCreateItem(KSDEVICE_HEADER Header, PUNICODE_STRING CreateItem);
NTSTATUS __stdcall KsFreeObjectCreateItemsByContext(KSDEVICE_HEADER Header, PVOID Context);
void __stdcall KsFreeObjectHeader(KSOBJECT_HEADER Header);
void __stdcall KsGateAddOffInputToAnd(PKSGATE AndGate);
void __stdcall KsGateAddOffInputToOr(PKSGATE OrGate);
void __stdcall KsGateAddOnInputToAnd(PKSGATE AndGate);
void __stdcall KsGateAddOnInputToOr(PKSGATE OrGate);
BOOLEAN __stdcall KsGateCaptureThreshold(PKSGATE Gate);
BOOLEAN __stdcall KsGateGetStateUnsafe(PKSGATE Gate);
void __stdcall KsGateInitialize(PKSGATE Gate, LONG InitialCount, PKSGATE NextGate, BOOLEAN StateToPropagate);
void __stdcall KsGateInitializeAnd(PKSGATE AndGate, PKSGATE NextOrGate);
void __stdcall KsGateInitializeOr(PKSGATE OrGate, PKSGATE NextAndGate);
void __stdcall KsGateRemoveOffInputFromAnd(PKSGATE AndGate);
void __stdcall KsGateRemoveOffInputFromOr(PKSGATE OrGate);
void __stdcall KsGateRemoveOnInputFromAnd(PKSGATE AndGate);
void __stdcall KsGateRemoveOnInputFromOr(PKSGATE OrGate);
void __stdcall KsGateTerminateAnd(PKSGATE AndGate);
void __stdcall KsGateTerminateOr(PKSGATE OrGate);
void __stdcall KsGateTurnInputOff(PKSGATE Gate);
void __stdcall KsGateTurnInputOn(PKSGATE Gate);
NTSTATUS __stdcall KsGenerateDataEvent(PKSEVENT_ENTRY EventEntry, ULONG DataSize, PVOID Data);
NTSTATUS __stdcall KsGenerateEvent(PKSEVENT_ENTRY EventEntry);
void __stdcall KsGenerateEventList(GUID *Set, ULONG EventId, PLIST_ENTRY EventsList, KSEVENTS_LOCKTYPE EventsFlags, PVOID EventsLock);
void __stdcall KsGenerateEvents(PVOID Object, const GUID *EventSet, ULONG EventId, ULONG DataSize, PVOID Data, PFNKSGENERATEEVENTCALLBACK CallBack, PVOID CallBackContext);
KSSTATE __stdcall KsGetDefaultClockState(PKSDEFAULTCLOCK DefaultClock);
LONGLONG __stdcall KsGetDefaultClockTime(PKSDEFAULTCLOCK DefaultClock);
PKSDEVICE __stdcall KsGetDevice(PVOID Object);
PKSDEVICE __stdcall KsGetDeviceForDeviceObject(PDEVICE_OBJECT FunctionalDeviceObject);
PKSFILTER __stdcall KsGetFilterFromFileObject(PFILE_OBJECT FileObject);
PKSFILTER __stdcall KsGetFilterFromIrp(PIRP Irp);
PVOID __stdcall KsGetFirstChild(PVOID Object);
NTSTATUS __stdcall KsGetImageNameAndResourceId(HANDLE RegKey, PUNICODE_STRING ImageName, PULONG_PTR ResourceId, PULONG ValueType);
PVOID __stdcall KsGetNextSibling(PVOID Object);
ULONG __stdcall KsGetNodeIdFromIrp(PIRP Irp);
PVOID __stdcall KsGetObjectFromFileObject(PFILE_OBJECT FileObject);
KSOBJECTTYPE __stdcall KsGetObjectTypeFromFileObject(PFILE_OBJECT FileObject);
KSOBJECTTYPE __stdcall KsGetObjectTypeFromIrp(PIRP Irp);
PVOID __stdcall KsGetParent(PVOID Object);
PKSPIN __stdcall KsGetPinFromFileObject(PFILE_OBJECT FileObject);
PKSPIN __stdcall KsGetPinFromIrp(PIRP Irp);
NTSTATUS __stdcall KsHandleSizedListQuery(PIRP Irp, ULONG DataItemsCount, ULONG DataItemSize, const void *DataItems);
ULONG __stdcall KsIncrementCountedWorker(PKSWORKER Worker);
NTSTATUS __stdcall KsInitializeDevice(PDEVICE_OBJECT FunctionalDeviceObject, PDEVICE_OBJECT PhysicalDeviceObject, PDEVICE_OBJECT NextDeviceObject, const KSDEVICE_DESCRIPTOR *Descriptor);
NTSTATUS __stdcall KsInitializeDriver(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPathName, const KSDEVICE_DESCRIPTOR *Descriptor);
$B3236B54C110CBB1085E590D1151299D KsInvokeOnCancel;
$B3236B54C110CBB1085E590D1151299D KsInvokeOnError;
$B3236B54C110CBB1085E590D1151299D KsInvokeOnSuccess;
$7CE1B7F1EC16E342EFF5A9F3696EB2C0 KsListEntryHead;
$7CE1B7F1EC16E342EFF5A9F3696EB2C0 KsListEntryTail;
NTSTATUS __stdcall KsLoadResource(PVOID ImageBase, POOL_TYPE PoolType, ULONG_PTR ResourceName, ULONG ResourceType, PVOID *Resource, PULONG ResourceSize);
NTSTATUS __stdcall KsMapModuleName(PDEVICE_OBJECT PhysicalDeviceObject, PUNICODE_STRING ModuleName, PUNICODE_STRING ImageName, PULONG_PTR ResourceId, PULONG ValueType);
NTSTATUS __stdcall KsMergeAutomationTables(PKSAUTOMATION_TABLE *AutomationTableAB, PKSAUTOMATION_TABLE AutomationTableA, PKSAUTOMATION_TABLE AutomationTableB, KSOBJECT_BAG Bag);
NTSTATUS __stdcall KsMethodHandler(PIRP Irp, ULONG MethodSetsCount, const KSMETHOD_SET *MethodSet);
NTSTATUS __stdcall KsMethodHandlerWithAllocator(PIRP Irp, ULONG MethodSetsCount, const KSMETHOD_SET *MethodSet, PFNKSALLOCATOR Allocator, ULONG MethodItemSize);
NTSTATUS __stdcall KsMoveIrpsOnCancelableQueue(PLIST_ENTRY SourceList, PKSPIN_LOCK SourceLock, PLIST_ENTRY DestinationList, PKSPIN_LOCK DestinationLock, KSLIST_ENTRY_LOCATION ListLocation, PFNKSIRPLISTCALLBACK ListCallback, PVOID Context);
void __stdcall KsNullDriverUnload(PDRIVER_OBJECT DriverObject);
$9239C4646B2840F9E3B30EC525310BA9 KsObjectTypeDevice;
$9239C4646B2840F9E3B30EC525310BA9 KsObjectTypeFilter;
$9239C4646B2840F9E3B30EC525310BA9 KsObjectTypeFilterFactory;
$9239C4646B2840F9E3B30EC525310BA9 KsObjectTypePin;
void __stdcall KsPinAcquireControl(PKSPIN Pin);
void __stdcall KsPinAcquireProcessingMutex(PKSPIN Pin);
void __stdcall KsPinAddEvent(PKSPIN Pin, PKSEVENT_ENTRY EventEntry);
void __stdcall KsPinAttachAndGate(PKSPIN Pin, PKSGATE AndGate);
void __stdcall KsPinAttachOrGate(PKSPIN Pin, PKSGATE OrGate);
void __stdcall KsPinAttemptProcessing(PKSPIN Pin, BOOLEAN Asynchronous);
NTSTATUS __stdcall KsPinDataIntersection(PIRP Irp, PKSP_PIN Pin, PVOID Data, ULONG DescriptorsCount, const KSPIN_DESCRIPTOR *Descriptor, PFNKSINTERSECTHANDLER IntersectHandler);
NTSTATUS __stdcall KsPinDataIntersectionEx(PIRP Irp, PKSP_PIN Pin, PVOID Data, ULONG DescriptorsCount, const KSPIN_DESCRIPTOR *Descriptor, ULONG DescriptorSize, PFNKSINTERSECTHANDLEREX IntersectHandler, PVOID HandlerContext);
void __stdcall KsPinGenerateEvents(PKSPIN Pin, const GUID *EventSet, ULONG EventId, ULONG DataSize, PVOID Data, PFNKSGENERATEEVENTCALLBACK CallBack, PVOID CallBackContext);
PKSGATE __stdcall KsPinGetAndGate(PKSPIN Pin);
NTSTATUS __stdcall KsPinGetAvailableByteCount(PKSPIN Pin, PLONG InputDataBytes, PLONG OutputBufferBytes);
NTSTATUS __stdcall KsPinGetConnectedFilterInterface(PKSPIN Pin, const GUID *InterfaceId, PVOID *Interface);
PDEVICE_OBJECT __stdcall KsPinGetConnectedPinDeviceObject(PKSPIN Pin);
PFILE_OBJECT __stdcall KsPinGetConnectedPinFileObject(PKSPIN Pin);
NTSTATUS __stdcall KsPinGetConnectedPinInterface(PKSPIN Pin, const GUID *InterfaceId, PVOID *Interface);
void __stdcall KsPinGetCopyRelationships(PKSPIN Pin, PKSPIN *CopySource, PKSPIN *DelegateBranch);
PKSDEVICE __stdcall KsPinGetDevice(PKSPIN Pin);
PKSSTREAM_POINTER __stdcall KsPinGetFirstCloneStreamPointer(PKSPIN Pin);
PKSSTREAM_POINTER __stdcall KsPinGetLeadingEdgeStreamPointer(PKSPIN Pin, KSSTREAM_POINTER_STATE State);
PKSPIN __stdcall KsPinGetNextSiblingPin(PKSPIN Pin);
PKSFILTER __stdcall KsPinGetParentFilter(PKSPIN Pin);
PKSSTREAM_POINTER __stdcall KsPinGetTrailingEdgeStreamPointer(PKSPIN Pin, KSSTREAM_POINTER_STATE State);
NTSTATUS __stdcall KsPinHandshake(PKSPIN Pin, PKSHANDSHAKE In, PKSHANDSHAKE Out);
NTSTATUS __stdcall KsPinPropertyHandler(PIRP Irp, PKSPROPERTY Property, PVOID Data, ULONG DescriptorsCount, const KSPIN_DESCRIPTOR *Descriptor);
void __stdcall KsPinRegisterFrameReturnCallback(PKSPIN Pin, PFNKSPINFRAMERETURN FrameReturn);
void __stdcall KsPinRegisterHandshakeCallback(PKSPIN Pin, PFNKSPINHANDSHAKE Handshake);
void __stdcall KsPinRegisterIrpCompletionCallback(PKSPIN Pin, PFNKSPINIRPCOMPLETION IrpCompletion);
void __stdcall KsPinRegisterPowerCallbacks(PKSPIN Pin, PFNKSPINPOWER Sleep, PFNKSPINPOWER Wake);
void __stdcall KsPinReleaseControl(PKSPIN Pin);
void __stdcall KsPinReleaseProcessingMutex(PKSPIN Pin);
void __stdcall KsPinSetPinClockTime(PKSPIN Pin, LONGLONG Time);
NTSTATUS __stdcall KsPinSubmitFrame(PKSPIN Pin, PVOID Data, ULONG Size, PKSSTREAM_HEADER StreamHeader, PVOID Context);
NTSTATUS __stdcall KsPinSubmitFrameMdl(PKSPIN Pin, PMDL Mdl, PKSSTREAM_HEADER StreamHeader, PVOID Context);
NTSTATUS __stdcall KsProbeStreamIrp(PIRP Irp, ULONG ProbeFlags, ULONG HeaderSize);
BOOLEAN __stdcall KsProcessPinUpdate(PKSPROCESSPIN ProcessPin);
NTSTATUS __stdcall KsPropertyHandler(PIRP Irp, ULONG PropertySetsCount, const KSPROPERTY_SET *PropertySet);
NTSTATUS __stdcall KsPropertyHandlerWithAllocator(PIRP Irp, ULONG PropertySetsCount, const KSPROPERTY_SET *PropertySet, PFNKSALLOCATOR Allocator, ULONG PropertyItemSize);
PDEVICE_OBJECT __stdcall KsQueryDevicePnpObject(KSDEVICE_HEADER Header);
NTSTATUS __stdcall KsQueryInformationFile(PFILE_OBJECT FileObject, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
ACCESS_MASK __stdcall KsQueryObjectAccessMask(KSOBJECT_HEADER Header);
PKSOBJECT_CREATE_ITEM __stdcall KsQueryObjectCreateItem(KSOBJECT_HEADER Header);
NTSTATUS __stdcall KsQueueWorkItem(PKSWORKER Worker, PWORK_QUEUE_ITEM WorkItem);
NTSTATUS __stdcall KsReadFile(PFILE_OBJECT FileObject, PKEVENT Event, PVOID PortContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, ULONG Key, KPROCESSOR_MODE RequestorMode);
void __stdcall KsRecalculateStackDepth(KSDEVICE_HEADER Header, BOOLEAN ReuseStackLocation);
NTSTATUS __stdcall KsReferenceBusObject(KSDEVICE_HEADER Header);
NTSTATUS __stdcall KsRegisterCountedWorker(WORK_QUEUE_TYPE WorkQueueType, PWORK_QUEUE_ITEM CountedWorkItem, PKSWORKER *Worker);
NTSTATUS __stdcall KsRegisterFilterWithNoKSPins(PDEVICE_OBJECT DeviceObject, const GUID *InterfaceClassGUID, ULONG PinCount, BOOL *PinDirection, KSPIN_MEDIUM *MediumList, GUID *CategoryList);
NTSTATUS __stdcall KsRegisterWorker(WORK_QUEUE_TYPE WorkQueueType, PKSWORKER *Worker);
void __stdcall KsReleaseControl(PVOID Object);
void __stdcall KsReleaseDevice(PKSDEVICE Device);
void __stdcall KsReleaseDeviceSecurityLock(KSDEVICE_HEADER Header);
void __stdcall KsReleaseIrpOnCancelableQueue(PIRP Irp, PDRIVER_CANCEL DriverCancel);
PIRP __stdcall KsRemoveIrpFromCancelableQueue(PLIST_ENTRY QueueHead, PKSPIN_LOCK SpinLock, KSLIST_ENTRY_LOCATION ListLocation, KSIRP_REMOVAL_OPERATION RemovalOperation);
ULONG __stdcall KsRemoveItemFromObjectBag(KSOBJECT_BAG ObjectBag, PVOID Item, BOOLEAN Free);
void __stdcall KsRemoveSpecificIrpFromCancelableQueue(PIRP Irp);
void __stdcall KsSetDefaultClockState(PKSDEFAULTCLOCK DefaultClock, KSSTATE State);
void __stdcall KsSetDefaultClockTime(PKSDEFAULTCLOCK DefaultClock, LONGLONG Time);
void __stdcall KsSetDevicePnpAndBaseObject(KSDEVICE_HEADER Header, PDEVICE_OBJECT PnpDeviceObject, PDEVICE_OBJECT BaseObject);
NTSTATUS __stdcall KsSetInformationFile(PFILE_OBJECT FileObject, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall KsSetMajorFunctionHandler(PDRIVER_OBJECT DriverObject, ULONG MajorFunction);
void __stdcall KsSetPowerDispatch(KSOBJECT_HEADER Header, PFNKSCONTEXT_DISPATCH PowerDispatch, PVOID PowerContext);
void __stdcall KsSetTargetDeviceObject(KSOBJECT_HEADER Header, PDEVICE_OBJECT TargetDevice);
void __stdcall KsSetTargetState(KSOBJECT_HEADER Header, KSTARGET_STATE TargetState);
$B7D2D905F5EEADB8A12D41415E190E1C KsStackCopyToNewLocation;
$B7D2D905F5EEADB8A12D41415E190E1C KsStackReuseCurrentLocation;
$B7D2D905F5EEADB8A12D41415E190E1C KsStackUseNewLocation;
NTSTATUS __stdcall KsStreamIo(PFILE_OBJECT FileObject, PKEVENT Event, PVOID PortContext, PIO_COMPLETION_ROUTINE CompletionRoutine, PVOID CompletionContext, KSCOMPLETION_INVOCATION CompletionInvocationFlags, PIO_STATUS_BLOCK IoStatusBlock, PVOID StreamHeaders, ULONG Length, ULONG Flags, KPROCESSOR_MODE RequestorMode);
NTSTATUS __stdcall KsStreamPointerAdvance(PKSSTREAM_POINTER StreamPointer);
NTSTATUS __stdcall KsStreamPointerAdvanceOffsets(PKSSTREAM_POINTER StreamPointer, ULONG InUsed, ULONG OutUsed, BOOLEAN Eject);
void __stdcall KsStreamPointerAdvanceOffsetsAndUnlock(PKSSTREAM_POINTER StreamPointer, ULONG InUsed, ULONG OutUsed, BOOLEAN Eject);
void __stdcall KsStreamPointerCancelTimeout(PKSSTREAM_POINTER StreamPointer);
NTSTATUS __stdcall KsStreamPointerClone(PKSSTREAM_POINTER StreamPointer, PFNKSSTREAMPOINTER CancelCallback, ULONG ContextSize, PKSSTREAM_POINTER *CloneStreamPointer);
void __stdcall KsStreamPointerDelete(PKSSTREAM_POINTER StreamPointer);
PIRP __stdcall KsStreamPointerGetIrp(PKSSTREAM_POINTER StreamPointer, PBOOLEAN FirstFrameInIrp, PBOOLEAN LastFrameInIrp);
PMDL __stdcall KsStreamPointerGetMdl(PKSSTREAM_POINTER StreamPointer);
PKSSTREAM_POINTER __stdcall KsStreamPointerGetNextClone(PKSSTREAM_POINTER StreamPointer);
NTSTATUS __stdcall KsStreamPointerLock(PKSSTREAM_POINTER StreamPointer);
void __stdcall KsStreamPointerScheduleTimeout(PKSSTREAM_POINTER StreamPointer, PFNKSSTREAMPOINTER Callback, ULONGLONG Interval);
NTSTATUS __stdcall KsStreamPointerSetStatusCode(PKSSTREAM_POINTER StreamPointer, NTSTATUS Status);
void __stdcall KsStreamPointerUnlock(PKSSTREAM_POINTER StreamPointer, BOOLEAN Eject);
NTSTATUS __stdcall KsSynchronousIoControlDevice(PFILE_OBJECT FileObject, KPROCESSOR_MODE RequestorMode, ULONG IoControl, PVOID InBuffer, ULONG InSize, PVOID OutBuffer, ULONG OutSize, PULONG BytesReturned);
void __stdcall KsTerminateDevice(PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall KsTopologyPropertyHandler(PIRP Irp, PKSPROPERTY Property, PVOID Data, const KSTOPOLOGY *Topology);
void __stdcall KsUnregisterWorker(PKSWORKER Worker);
NTSTATUS __stdcall KsUnserializeObjectPropertiesFromRegistry(PFILE_OBJECT FileObject, HANDLE ParentKey, PUNICODE_STRING RegistryPath);
NTSTATUS __stdcall KsValidateAllocatorCreateRequest(PIRP Irp, PKSALLOCATOR_FRAMING *AllocatorFraming);
NTSTATUS __stdcall KsValidateAllocatorFramingEx(PKSALLOCATOR_FRAMING_EX Framing, ULONG BufferSize, const KSALLOCATOR_FRAMING_EX *PinFraming);
NTSTATUS __stdcall KsValidateClockCreateRequest(PIRP Irp, PKSCLOCK_CREATE *ClockCreate);
NTSTATUS __stdcall KsValidateConnectRequest(PIRP Irp, ULONG DescriptorsCount, const KSPIN_DESCRIPTOR *Descriptor, PKSPIN_CONNECT *Connect);
NTSTATUS __stdcall KsValidateTopologyNodeCreateRequest(PIRP Irp, PKSTOPOLOGY Topology, PKSNODE_CREATE *NodeCreate);
NTSTATUS __stdcall KsWriteFile(PFILE_OBJECT FileObject, PKEVENT Event, PVOID PortContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, ULONG Key, KPROCESSOR_MODE RequestorMode);
MACRO_LANG LANG_AFRIKAANS;
MACRO_LANG LANG_ALBANIAN;
MACRO_LANG LANG_ARABIC;
MACRO_LANG LANG_ARMENIAN;
MACRO_LANG LANG_ASSAMESE;
MACRO_LANG LANG_AZERI;
MACRO_LANG LANG_BASQUE;
MACRO_LANG LANG_BELARUSIAN;
MACRO_LANG LANG_BENGALI;
MACRO_LANG LANG_BULGARIAN;
MACRO_LANG LANG_CATALAN;
MACRO_LANG LANG_CHINESE;
MACRO_LANG LANG_CROATIAN;
MACRO_LANG LANG_CZECH;
MACRO_LANG LANG_DANISH;
MACRO_LANG LANG_DIVEHI;
MACRO_LANG LANG_DUTCH;
MACRO_LANG LANG_ENGLISH;
MACRO_LANG LANG_ESTONIAN;
MACRO_LANG LANG_FAEROESE;
MACRO_LANG LANG_FARSI;
MACRO_LANG LANG_FINNISH;
MACRO_LANG LANG_FRENCH;
MACRO_LANG LANG_GALICIAN;
MACRO_LANG LANG_GEORGIAN;
MACRO_LANG LANG_GERMAN;
MACRO_LANG LANG_GREEK;
MACRO_LANG LANG_GUJARATI;
MACRO_LANG LANG_HEBREW;
MACRO_LANG LANG_HINDI;
MACRO_LANG LANG_HUNGARIAN;
MACRO_LANG LANG_ICELANDIC;
MACRO_LANG LANG_INDONESIAN;
MACRO_LANG LANG_INVARIANT;
MACRO_LANG LANG_ITALIAN;
MACRO_LANG LANG_JAPANESE;
MACRO_LANG LANG_KANNADA;
MACRO_LANG LANG_KASHMIRI;
MACRO_LANG LANG_KAZAK;
MACRO_LANG LANG_KONKANI;
MACRO_LANG LANG_KOREAN;
MACRO_LANG LANG_KYRGYZ;
MACRO_LANG LANG_LATVIAN;
MACRO_LANG LANG_LITHUANIAN;
MACRO_LANG LANG_MACEDONIAN;
MACRO_LANG LANG_MALAY;
MACRO_LANG LANG_MALAYALAM;
MACRO_LANG LANG_MANIPURI;
MACRO_LANG LANG_MARATHI;
MACRO_LANG LANG_MONGOLIAN;
MACRO_LANG LANG_NEPALI;
MACRO_LANG LANG_NEUTRAL;
MACRO_LANG LANG_NORWEGIAN;
MACRO_LANG LANG_ORIYA;
MACRO_LANG LANG_POLISH;
MACRO_LANG LANG_PORTUGUESE;
MACRO_LANG LANG_PUNJABI;
MACRO_LANG LANG_ROMANIAN;
MACRO_LANG LANG_RUSSIAN;
MACRO_LANG LANG_SANSKRIT;
MACRO_LANG LANG_SERBIAN;
MACRO_LANG LANG_SINDHI;
MACRO_LANG LANG_SLOVAK;
MACRO_LANG LANG_SLOVENIAN;
MACRO_LANG LANG_SPANISH;
MACRO_LANG LANG_SWAHILI;
MACRO_LANG LANG_SWEDISH;
MACRO_LANG LANG_SYRIAC;
MACRO_LANG_SYSTEM LANG_SYSTEM_DEFAULT;
MACRO_LANG LANG_TAMIL;
MACRO_LANG LANG_TATAR;
MACRO_LANG LANG_TELUGU;
MACRO_LANG LANG_THAI;
MACRO_LANG LANG_TURKISH;
MACRO_LANG LANG_UKRAINIAN;
MACRO_LANG LANG_URDU;
MACRO_LANG_SYSTEM LANG_USER_DEFAULT;
MACRO_LANG LANG_UZBEK;
MACRO_LANG LANG_VIETNAMESE;
MACRO_LAST LAST_CHANCE_CALLED_FROM_KMODE;
$DD5FC77EC1374A734666B81823C28AFB LIGHT_FILTER;
MACRO_LM LM_SERVER_INTERNAL_ERROR;
MACRO_LOCALE LOCALE_INVARIANT;
MACRO_LOCALE LOCALE_NEUTRAL;
MACRO_LOCALE LOCALE_SYSTEM_DEFAULT;
MACRO_LOCALE LOCALE_USER_DEFAULT;
MACRO_LOCAL LOCAL_BUS;
MACRO_LOCKED LOCKED_PAGES_TRACKER_CORRUPTION;
MACRO_LOCK_CTL LOCK_CTL;
MACRO_LOCK LOCK_TRANSACTION_BOUNDED_ADD;
MACRO_LOCK LOCK_TRANSACTION_COMPARE_SWAP;
MACRO_LOCK LOCK_TRANSACTION_FETCH_ADD;
MACRO_LOCK LOCK_TRANSACTION_LITTLE_ADD;
MACRO_LOCK LOCK_TRANSACTION_MASK_SWAP;
MACRO_LOCK LOCK_TRANSACTION_WRAP_ADD;
MACRO_LONG LONG_2ND_MOST_SIGNIFICANT_BIT;
MACRO_LONG LONG_3RD_MOST_SIGNIFICANT_BIT;
MACRO_LONG LONG_LEAST_SIGNIFICANT_BIT;
MACRO_LONG LONG_MOST_SIGNIFICANT_BIT;
MACRO_LOWBYTE LOWBYTE_MASK;
MACRO_LEVEL LOW_LEVEL;
MACRO_LOW LOW_PRIORITY;
MACRO_LOW LOW_REALTIME_PRIORITY;
MACRO_OBJECT LPC_INITIALIZATION_FAILED;
$C9C41CE7F7AB140BE1C872069B92FC11 LT_DONT_CARE;
$C9C41CE7F7AB140BE1C872069B92FC11 LT_LOWEST_LATENCY;
_KINTERRUPT_MODE Latched;
_KINTERRUPT_MODE LevelSensitive;
void __stdcall ListEntry32To64(PLIST_ENTRY32 l32, PLIST_ENTRY64 l64);
void __stdcall ListEntry64To32(PLIST_ENTRY64 l64, PLIST_ENTRY32 l32);
_STREAM_PRIORITY Low;
_KDPC_IMPORTANCE LowImportance;
_MM_PAGE_PRIORITY LowPagePriority;
_EX_POOL_PRIORITY LowPoolPriority;
_EX_POOL_PRIORITY LowPoolPrioritySpecialPoolOverrun;
_EX_POOL_PRIORITY LowPoolPrioritySpecialPoolUnderrun;
_STREAM_PRIORITY LowToHigh;
MACRO_MACHINE MACHINE_CHECK_EXCEPTION;
MACRO_MAILSLOT MAILSLOT_FILE_SYSTEM;
MACRO_MANUALLY MANUALLY_INITIATED_CRASH;
MACRO_MANUALLY_INITIATED MANUALLY_INITIATED_CRASH1;
MACRO_MASK MASK_AUX_50_60_BIT;
MACRO_MAXCHAR MAXCHAR;
MACRO_PTR MAXHALF_PTR;
MACRO_MAXIMUM_ALLOWED MAXIMUM_ALLOWED;
MACRO_MAXIMUM_FILENAME MAXIMUM_FILENAME_LENGTH;
MACRO_PRIORITY MAXIMUM_PRIORITY;
MACRO_MAXIMUM_PROCESSORS MAXIMUM_PROCESSORS;
MACRO_MAXIMUM_WAIT MAXIMUM_SUSPEND_COUNT;
MACRO_MAXIMUM_USB MAXIMUM_USB_STRING_LENGTH;
MACRO_MAXIMUM_WAIT MAXIMUM_WAIT_OBJECTS;
MACRO_MAXIMUM MAXIMUM_WAIT_OBJECTS_EXCEEDED;
MACRO_PTR MAXINT_PTR;
MACRO_MAXLONG MAXLONG;
MACRO_MAXLONGLONG MAXLONGLONG;
MACRO_PTR MAXLONG_PTR;
MACRO_MAXSHORT MAXSHORT;
MACRO_MAXUCHAR MAXUCHAR;
MACRO_PTR MAXUHALF_PTR;
MACRO_PTR MAXUINT_PTR;
MACRO_MAXULONG MAXULONG;
MACRO_PTR MAXULONG_PTR;
MACRO_MAXUSHORT MAXUSHORT;
MACRO_REVISION MAX_ACL_REVISION;
MACRO_MAX_AVC_OPERAND MAX_AVC_OPERAND_BYTES;
MACRO_MAX_AVC MAX_AVC_SUBUNITINFO_BYTES;
MACRO_MAX_AVC MAX_AVC_SUBUNITINFO_PAGES;
MACRO_MAX_BAY MAX_BAY_NUMBER;
MACRO_MAX_LOCAL MAX_LOCAL_NODES;
MACRO_MAX_NABTS MAX_NABTS_VBI_LINES_PER_FIELD;
MACRO_MAX MAX_PATH;
MACRO_MAX_REC MAX_REC_100_RATE;
MACRO_MAX_REC MAX_REC_200_RATE;
MACRO_MAX_REC MAX_REC_400_RATE;
MACRO_MAX_WST MAX_WST_VBI_LINES_PER_FIELD;
MACRO_MBR MBR_CHECKSUM_MISMATCH;
MACRO_MCACpuCacheError MCACpuBusError;
MACRO_MCACpuCacheError MCACpuCacheError;
MACRO_MCACpuRegFileError MCACpuMSError;
MACRO_MCACpuRegFileError MCACpuRegFileError;
MACRO_MCACpuCacheError MCACpuTlbError;
MACRO_MCA MCA_ERROR_CACHE;
MACRO_MCA_WARNING MCA_ERROR_CPU;
MACRO_MCA MCA_ERROR_CPU_BUS;
MACRO_MCA MCA_ERROR_MAS;
MACRO_MCA MCA_ERROR_MEM_1_2;
MACRO_MCA MCA_ERROR_MEM_1_2_5;
MACRO_MCA MCA_ERROR_MEM_1_2_5_4;
MACRO_MCA MCA_ERROR_MEM_UNKNOWN;
MACRO_MCA MCA_ERROR_PCI_BUS_MASTER_ABORT;
MACRO_MCA MCA_ERROR_PCI_BUS_MASTER_ABORT_NO_INFO;
MACRO_MCA MCA_ERROR_PCI_BUS_PARITY;
MACRO_MCA MCA_ERROR_PCI_BUS_PARITY_NO_INFO;
MACRO_MCA MCA_ERROR_PCI_BUS_SERR;
MACRO_MCA MCA_ERROR_PCI_BUS_SERR_NO_INFO;
MACRO_MCA MCA_ERROR_PCI_BUS_TIMEOUT;
MACRO_MCA MCA_ERROR_PCI_BUS_TIMEOUT_NO_INFO;
MACRO_MCA MCA_ERROR_PCI_BUS_UNKNOWN;
MACRO_MCA MCA_ERROR_PCI_DEVICE;
MACRO_MCA MCA_ERROR_PLATFORM_SPECIFIC;
MACRO_MCA MCA_ERROR_REGISTER_FILE;
MACRO_MCA MCA_ERROR_SMBIOS;
MACRO_MCA MCA_ERROR_SYSTEM_EVENT;
MACRO_MCA MCA_ERROR_TLB;
MACRO_MCA MCA_ERROR_UNKNOWN;
MACRO_MCA MCA_ERROR_UNKNOWN_NO_CPU;
MACRO_MCA_EXTREG MCA_EXTREG_V2MAX;
MACRO_MCA_WARNING MCA_INFO_CPU_THERMAL_THROTTLING_REMOVED;
MACRO_MCA_WARNING MCA_INFO_MEMORY_PAGE_MARKED_BAD;
MACRO_MCA_WARNING MCA_INFO_NO_MORE_CORRECTED_ERROR_LOGS;
MACRO_MCA MCA_WARNING_CACHE;
MACRO_MCA_WARNING MCA_WARNING_CMC_THRESHOLD_EXCEEDED;
MACRO_MCA_WARNING MCA_WARNING_CPE_THRESHOLD_EXCEEDED;
MACRO_MCA_WARNING MCA_WARNING_CPU;
MACRO_MCA MCA_WARNING_CPU_BUS;
MACRO_MCA_WARNING MCA_WARNING_CPU_THERMAL_THROTTLED;
MACRO_MCA MCA_WARNING_MAS;
MACRO_MCA MCA_WARNING_MEM_1_2;
MACRO_MCA MCA_WARNING_MEM_1_2_5;
MACRO_MCA MCA_WARNING_MEM_1_2_5_4;
MACRO_MCA MCA_WARNING_MEM_UNKNOWN;
MACRO_MCA MCA_WARNING_PCI_BUS_MASTER_ABORT;
MACRO_MCA MCA_WARNING_PCI_BUS_MASTER_ABORT_NO_INFO;
MACRO_MCA MCA_WARNING_PCI_BUS_PARITY;
MACRO_MCA MCA_WARNING_PCI_BUS_PARITY_NO_INFO;
MACRO_MCA MCA_WARNING_PCI_BUS_SERR;
MACRO_MCA MCA_WARNING_PCI_BUS_SERR_NO_INFO;
MACRO_MCA MCA_WARNING_PCI_BUS_TIMEOUT;
MACRO_MCA MCA_WARNING_PCI_BUS_TIMEOUT_NO_INFO;
MACRO_MCA MCA_WARNING_PCI_BUS_UNKNOWN;
MACRO_MCA MCA_WARNING_PCI_DEVICE;
MACRO_MCA MCA_WARNING_PLATFORM_SPECIFIC;
MACRO_MCA MCA_WARNING_REGISTER_FILE;
MACRO_MCA MCA_WARNING_SMBIOS;
MACRO_MCA MCA_WARNING_SYSTEM_EVENT;
MACRO_MCA MCA_WARNING_TLB;
MACRO_MCA MCA_WARNING_UNKNOWN;
MACRO_MCA MCA_WARNING_UNKNOWN_NO_CPU;
MACRO_MDL MDL_ALLOCATED_FIXED_SIZE;
MACRO_MDL MDL_ALLOCATED_MUST_SUCCEED;
MACRO_MDL MDL_DESCRIBES_AWE;
MACRO_MDL MDL_FREE_EXTRA_PTES;
MACRO_MDL MDL_IO_PAGE_READ;
MACRO_MDL MDL_IO_SPACE;
MACRO_MDL MDL_MAPPED_TO_SYSTEM_VA;
MACRO_MDL MDL_MAPPING_CAN_FAIL;
MACRO_MDL MDL_NETWORK_HEADER;
MACRO_MDL MDL_PAGES_LOCKED;
MACRO_MDL MDL_PARENT_MAPPED_SYSTEM_VA;
MACRO_MDL MDL_PARTIAL;
MACRO_MDL MDL_PARTIAL_HAS_BEEN_MAPPED;
MACRO_MDL MDL_SOURCE_IS_NONPAGED_POOL;
MACRO_MDL MDL_WRITE_OPERATION;
$D62050DCDBDF6C35CAC61CEAA5D0241B MEDIA_ELEMENTARY_STREAM;
$D62050DCDBDF6C35CAC61CEAA5D0241B MEDIA_MPEG2_PSI;
$D62050DCDBDF6C35CAC61CEAA5D0241B MEDIA_TRANSPORT_PACKET;
$D62050DCDBDF6C35CAC61CEAA5D0241B MEDIA_TRANSPORT_PAYLOAD;
MACRO_OBJECT MEMORY1_INITIALIZATION_FAILED;
MACRO_MEMORY MEMORY_ALLOCATION_ALIGNMENT;
MACRO_MEMORY_IMAGE MEMORY_IMAGE_CORRUPT;
MACRO_MEMORY_MANAGEMENT MEMORY_MANAGEMENT;
MACRO_MEM MEM_4MB_PAGES;
MACRO_MEM MEM_COMMIT;
MACRO_MEM MEM_DECOMMIT;
MACRO_MEM MEM_FREE;
MACRO_MEM MEM_LARGE_PAGES;
MACRO_MEM MEM_MAPPED;
MACRO_MEM MEM_PRIVATE;
MACRO_MEM MEM_RELEASE;
MACRO_MEM MEM_RESERVE;
MACRO_MEM MEM_RESET;
MACRO_MEM MEM_TOP_DOWN;
MACRO_METHOD METHOD_BUFFERED;
MACRO_METHOD METHOD_DIRECT_FROM_HARDWARE;
MACRO_METHOD METHOD_DIRECT_TO_HARDWARE;
MACRO_METHOD METHOD_IN_DIRECT;
MACRO_METHOD METHOD_NEITHER;
MACRO_METHOD METHOD_OUT_DIRECT;
MACRO_MINCHAR MINCHAR;
MACRO_PTR MINHALF_PTR;
MACRO_PTR MININT_PTR;
MACRO_MAXSHORT MINLONG;
MACRO_PTR MINLONG_PTR;
MACRO_MAXCHAR MINSHORT;
MACRO_MIN_DEV MIN_DEV_VER_FOR_QI;
MACRO_MIN MIN_DIMENSION;
MACRO_MISMATCHED MISMATCHED_HAL;
MACRO_MM_MICROSOFT MM_3COM;
MACRO_MM_CHROMATIC MM_3COM_CB_MIXER;
MACRO_MM_CHROMATIC MM_3COM_CB_WAVEIN;
MACRO_MM_CHROMATIC MM_3COM_CB_WAVEOUT;
MACRO_MM_MICROSOFT MM_3DFX;
MACRO_MM_MICROSOFT MM_AARDVARK;
MACRO_MM_MICROSOFT MM_AARDVARK_STUDIO12_WAVEIN;
MACRO_MM_MICROSOFT MM_AARDVARK_STUDIO12_WAVEOUT;
MACRO_MM_MICROSOFT MM_AARDVARK_STUDIO88_WAVEIN;
MACRO_MM_MICROSOFT MM_AARDVARK_STUDIO88_WAVEOUT;
MACRO_MM_MICROSOFT MM_ACTIVEVOICE;
MACRO_MM_CHROMATIC MM_ACTIVEVOICE_ACM_VOXADPCM;
MACRO_MM_MICROSOFT MM_ACULAB;
MACRO_MM_MICROSOFT MM_ADDX;
MACRO_MM_VOXWARE MM_ADDX_PCTV_AUX_CD;
MACRO_MM_VOXWARE MM_ADDX_PCTV_AUX_LINE;
MACRO_MM_VOXWARE MM_ADDX_PCTV_DIGITALMIX;
MACRO_MM_VOXWARE MM_ADDX_PCTV_MIXER;
MACRO_MM_VOXWARE MM_ADDX_PCTV_WAVEIN;
MACRO_MM_VOXWARE MM_ADDX_PCTV_WAVEOUT;
MACRO_MM_MICROSOFT MM_ADLACC;
MACRO_MM_MICROSOFT MM_ADLIB;
MACRO_MM_MICROSOFT MM_ADMOS;
MACRO_MM_CHROMATIC MM_ADMOS_FM_SYNTH;
MACRO_MM_CHROMATIC MM_ADMOS_QS3AMIDIIN;
MACRO_MM_CHROMATIC MM_ADMOS_QS3AMIDIOUT;
MACRO_MM_CHROMATIC MM_ADMOS_QS3AWAVEIN;
MACRO_MM_CHROMATIC MM_ADMOS_QS3AWAVEOUT;
MACRO_MM_MICROSOFT MM_AHEAD;
MACRO_MM_MICROSOFT MM_AHEAD_GENERIC;
MACRO_MM_MICROSOFT MM_AHEAD_MULTISOUND;
MACRO_MM_MICROSOFT MM_AHEAD_PROAUDIO;
MACRO_MM_MICROSOFT MM_AHEAD_SOUNDBLASTER;
MACRO_MM_MICROSOFT MM_ALARIS;
MACRO_MM_MICROSOFT MM_ALDIGITAL;
MACRO_MM_MICROSOFT MM_ALESIS;
MACRO_MM_MICROSOFT MM_ALGOVISION;
MACRO_MM_CHROMATIC MM_ALGOVISION_VB80AUX;
MACRO_MM_CHROMATIC MM_ALGOVISION_VB80AUX2;
MACRO_MM_CHROMATIC MM_ALGOVISION_VB80MIXER;
MACRO_MM_CHROMATIC MM_ALGOVISION_VB80WAVEIN;
MACRO_MM_CHROMATIC MM_ALGOVISION_VB80WAVEOUT;
MACRO_MM_MICROSOFT MM_AMD;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_AUX1;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_AUX2;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_AUX_CD;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_AUX_MIC;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_EX_CD;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_EX_TELEPHONY;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_JOYSTICK;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_MIDIIN;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_MIDIOUT;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_MIXER1;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_MIXER2;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_MONO_IN;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_MONO_OUT;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_STEREO_ENHANCED;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_SYNTH;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_WAVEIN;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_WAVEOUT;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_WAVEOUT_BASE;
MACRO_MM_VOXWARE MM_AMD_INTERWAVE_WAVEOUT_TREBLE;
MACRO_MM_MICROSOFT MM_ANALOGDEVICES;
MACRO_MM_MICROSOFT MM_ANTEX;
MACRO_MM_MICROSOFT MM_ANTEX_AUDIOPORT22_FEEDTHRU;
MACRO_MM_MICROSOFT MM_ANTEX_AUDIOPORT22_WAVEIN;
MACRO_MM_MICROSOFT MM_ANTEX_AUDIOPORT22_WAVEOUT;
MACRO_MM_MICROSOFT MM_ANTEX_SX12_WAVEIN;
MACRO_MM_MICROSOFT MM_ANTEX_SX12_WAVEOUT;
MACRO_MM_MICROSOFT MM_ANTEX_SX15_WAVEIN;
MACRO_MM_MICROSOFT MM_ANTEX_SX15_WAVEOUT;
MACRO_MM_MICROSOFT MM_ANTEX_VP625_WAVEIN;
MACRO_MM_MICROSOFT MM_ANTEX_VP625_WAVEOUT;
MACRO_MM_MICROSOFT MM_APICOM;
MACRO_MM_MICROSOFT MM_APPLE;
MACRO_MM_MICROSOFT MM_APPS;
MACRO_MM_MICROSOFT MM_APT;
MACRO_MM_MICROSOFT MM_APT_ACE100CD;
MACRO_MM_MICROSOFT MM_ARRAY;
MACRO_MM_MICROSOFT MM_ARTISOFT;
MACRO_MM_MICROSOFT MM_ARTISOFT_SBWAVEIN;
MACRO_MM_MICROSOFT MM_ARTISOFT_SBWAVEOUT;
MACRO_MM_MICROSOFT MM_AST;
MACRO_MM_MICROSOFT MM_AST_MODEMWAVE_WAVEIN;
MACRO_MM_MICROSOFT MM_AST_MODEMWAVE_WAVEOUT;
MACRO_MM_MICROSOFT MM_ATI;
MACRO_MM_MICROSOFT MM_ATT;
MACRO_MM_CHROMATIC MM_ATT_G729A;
MACRO_MM_MICROSOFT MM_ATT_MICROELECTRONICS;
MACRO_MM_CHROMATIC MM_AU8820_AUX;
MACRO_MM_CHROMATIC MM_AU8820_MIDIIN;
MACRO_MM_CHROMATIC MM_AU8820_MIDIOUT;
MACRO_MM_CHROMATIC MM_AU8820_MIXER;
MACRO_MM_CHROMATIC MM_AU8820_SYNTH;
MACRO_MM_CHROMATIC MM_AU8820_WAVEIN;
MACRO_MM_CHROMATIC MM_AU8820_WAVEOUT;
MACRO_MM_CHROMATIC MM_AU8830_AUX;
MACRO_MM_CHROMATIC MM_AU8830_MIDIIN;
MACRO_MM_CHROMATIC MM_AU8830_MIDIOUT;
MACRO_MM_CHROMATIC MM_AU8830_MIXER;
MACRO_MM_CHROMATIC MM_AU8830_SYNTH;
MACRO_MM_CHROMATIC MM_AU8830_WAVEIN;
MACRO_MM_CHROMATIC MM_AU8830_WAVEOUT;
MACRO_MM_MICROSOFT MM_AUDIOFILE;
MACRO_MM_MICROSOFT MM_AUDIOPT;
MACRO_MM_MICROSOFT MM_AUDIOSCIENCE;
MACRO_MM_MICROSOFT MM_AURAVISION;
MACRO_MM_MICROSOFT MM_AUREAL;
MACRO_MM_CHROMATIC MM_AUREAL_AU8820;
MACRO_MM_CHROMATIC MM_AUREAL_AU8830;
MACRO_MM_MICROSOFT MM_AZTECH;
MACRO_MM_MICROSOFT MM_AZTECH_AUX;
MACRO_MM_MICROSOFT MM_AZTECH_AUX_CD;
MACRO_MM_MICROSOFT MM_AZTECH_AUX_LINE;
MACRO_MM_MICROSOFT MM_AZTECH_AUX_MIC;
MACRO_MM_MICROSOFT MM_AZTECH_DSP16_FMSYNTH;
MACRO_MM_MICROSOFT MM_AZTECH_DSP16_WAVEIN;
MACRO_MM_MICROSOFT MM_AZTECH_DSP16_WAVEOUT;
MACRO_MM_MICROSOFT MM_AZTECH_DSP16_WAVESYNTH;
MACRO_MM_MICROSOFT MM_AZTECH_FMSYNTH;
MACRO_MM_MICROSOFT MM_AZTECH_MIDIIN;
MACRO_MM_MICROSOFT MM_AZTECH_MIDIOUT;
MACRO_MM_MICROSOFT MM_AZTECH_MIXER;
MACRO_MM_MICROSOFT MM_AZTECH_NOVA16_MIXER;
MACRO_MM_MICROSOFT MM_AZTECH_NOVA16_WAVEIN;
MACRO_MM_MICROSOFT MM_AZTECH_NOVA16_WAVEOUT;
MACRO_MM_MICROSOFT MM_AZTECH_PRO16_FMSYNTH;
MACRO_MM_MICROSOFT MM_AZTECH_PRO16_WAVEIN;
MACRO_MM_MICROSOFT MM_AZTECH_PRO16_WAVEOUT;
MACRO_MM_MICROSOFT MM_AZTECH_WASH16_MIXER;
MACRO_MM_MICROSOFT MM_AZTECH_WASH16_WAVEIN;
MACRO_MM_MICROSOFT MM_AZTECH_WASH16_WAVEOUT;
MACRO_MM_MICROSOFT MM_AZTECH_WAVEIN;
MACRO_MM_MICROSOFT MM_AZTECH_WAVEOUT;
MACRO_MM_MICROSOFT MM_BCB;
MACRO_MM_CHROMATIC MM_BCB_NETBOARD_10;
MACRO_MM_CHROMATIC MM_BCB_TT75_10;
MACRO_MM_MICROSOFT MM_BECUBED;
MACRO_MM_MICROSOFT MM_BERCOS;
MACRO_MM_CHROMATIC MM_BERCOS_MIXER;
MACRO_MM_CHROMATIC MM_BERCOS_WAVEIN;
MACRO_MM_CHROMATIC MM_BERCOS_WAVEOUT;
MACRO_MM_MICROSOFT MM_BERKOM;
MACRO_MM_MICROSOFT MM_BINTEC;
MACRO_MM_MICROSOFT MM_BINTEC_TAPI_WAVE;
MACRO_MM_MICROSOFT MM_BROOKTREE;
MACRO_MM_VOXWARE MM_BTV_AUX_CD;
MACRO_MM_VOXWARE MM_BTV_AUX_LINE;
MACRO_MM_VOXWARE MM_BTV_AUX_MIC;
MACRO_MM_VOXWARE MM_BTV_DIGITALIN;
MACRO_MM_VOXWARE MM_BTV_DIGITALOUT;
MACRO_MM_VOXWARE MM_BTV_MIDIIN;
MACRO_MM_VOXWARE MM_BTV_MIDIOUT;
MACRO_MM_VOXWARE MM_BTV_MIDISYNTH;
MACRO_MM_VOXWARE MM_BTV_MIDIWAVESTREAM;
MACRO_MM_VOXWARE MM_BTV_MIXER;
MACRO_MM_VOXWARE MM_BTV_WAVEIN;
MACRO_MM_VOXWARE MM_BTV_WAVEOUT;
MACRO_MM_MICROSOFT MM_CANAM;
MACRO_MM_VOXWARE MM_CANAM_CBXWAVEIN;
MACRO_MM_VOXWARE MM_CANAM_CBXWAVEOUT;
MACRO_MM_MICROSOFT MM_CANOPUS;
MACRO_MM_MICROSOFT MM_CANOPUS_ACM_DVREX;
MACRO_MM_MICROSOFT MM_CASIO;
MACRO_MM_CHROMATIC MM_CASIO_LSG_MIDIOUT;
MACRO_MM_CHROMATIC MM_CASIO_WP150_MIDIIN;
MACRO_MM_CHROMATIC MM_CASIO_WP150_MIDIOUT;
MACRO_MM_MICROSOFT MM_CAT;
MACRO_MM_MICROSOFT MM_CAT_WAVEOUT;
MACRO_MM_MICROSOFT MM_CDPC_AUX;
MACRO_MM_MICROSOFT MM_CDPC_MIDIIN;
MACRO_MM_MICROSOFT MM_CDPC_MIDIOUT;
MACRO_MM_MICROSOFT MM_CDPC_MIXER;
MACRO_MM_MICROSOFT MM_CDPC_SYNTH;
MACRO_MM_MICROSOFT MM_CDPC_WAVEIN;
MACRO_MM_MICROSOFT MM_CDPC_WAVEOUT;
MACRO_MM_MICROSOFT MM_CHROMATIC;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_AUX;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_AUX_CD;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_FMSYNTH;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_MIDIIN;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_MIDIOUT;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_MIXER;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_MPEGWAVEIN;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_MPEGWAVEOUT;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_WAVEIN;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_WAVEOUT;
MACRO_MM_CHROMATIC MM_CHROMATIC_M1_WTSYNTH;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_AUX;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_AUX_CD;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_FMSYNTH;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_MIDIIN;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_MIDIOUT;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_MIXER;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_MPEGWAVEIN;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_MPEGWAVEOUT;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_WAVEIN;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_WAVEOUT;
MACRO_MM_CHROMATIC MM_CHROMATIC_M2_WTSYNTH;
MACRO_MM_MICROSOFT MM_CIRRUSLOGIC;
MACRO_MM_MICROSOFT MM_COLORGRAPH;
MACRO_MM_MICROSOFT MM_COMPAQ;
MACRO_MM_MICROSOFT MM_COMPAQ_BB_WAVEAUX;
MACRO_MM_MICROSOFT MM_COMPAQ_BB_WAVEIN;
MACRO_MM_MICROSOFT MM_COMPAQ_BB_WAVEOUT;
MACRO_MM_MICROSOFT MM_COMPUSIC;
MACRO_MM_MICROSOFT MM_COMPUTER_FRIENDS;
MACRO_MM_MICROSOFT MM_CONCEPTS;
MACRO_MM_MICROSOFT MM_CONNECTIX;
MACRO_MM_CHROMATIC MM_CONNECTIX_VIDEC_CODEC;
MACRO_MM_MICROSOFT MM_CONTROLRES;
MACRO_MM_MICROSOFT MM_COREDYNAMICS;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNAGRAFX_VGA;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNAGRAFX_WAVE_IN;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNAGRAFX_WAVE_OUT;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNAMIXHR;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_AUDIO_IN;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_AUDIO_OUT;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_MIDI_IN;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_MIDI_OUT;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_SYNTH;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_WAVE_IN;
MACRO_MM_VOXWARE MM_COREDYNAMICS_DYNASONIX_WAVE_OUT;
MACRO_MM_MICROSOFT MM_CREATIVE;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_CD;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_LINE;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_MASTER;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_MIC;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_MIDI;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_PCSPK;
MACRO_MM_MICROSOFT MM_CREATIVE_AUX_WAVE;
MACRO_MM_MICROSOFT MM_CREATIVE_FMSYNTH_MONO;
MACRO_MM_MICROSOFT MM_CREATIVE_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_CREATIVE_MIDIIN;
MACRO_MM_MICROSOFT MM_CREATIVE_MIDIOUT;
MACRO_MM_MICROSOFT MM_CREATIVE_MIDI_AWE32;
MACRO_MM_MICROSOFT MM_CREATIVE_PHNBLST_WAVEIN;
MACRO_MM_MICROSOFT MM_CREATIVE_PHNBLST_WAVEOUT;
MACRO_MM_MICROSOFT MM_CREATIVE_SB15_WAVEIN;
MACRO_MM_MICROSOFT MM_CREATIVE_SB15_WAVEOUT;
MACRO_MM_MICROSOFT MM_CREATIVE_SB16_MIXER;
MACRO_MM_MICROSOFT MM_CREATIVE_SB20_WAVEIN;
MACRO_MM_MICROSOFT MM_CREATIVE_SB20_WAVEOUT;
MACRO_MM_MICROSOFT MM_CREATIVE_SBP16_WAVEIN;
MACRO_MM_MICROSOFT MM_CREATIVE_SBP16_WAVEOUT;
MACRO_MM_MICROSOFT MM_CREATIVE_SBPRO_MIXER;
MACRO_MM_MICROSOFT MM_CREATIVE_SBPRO_WAVEIN;
MACRO_MM_MICROSOFT MM_CREATIVE_SBPRO_WAVEOUT;
MACRO_MM_MICROSOFT MM_CRYSTAL;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_INPUTGAIN_AUX1;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_INPUTGAIN_LOOP;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_MIDIIN;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_MIDIOUT;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEAUX_AUX1;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEAUX_AUX2;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEAUX_LINE;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEAUX_MASTER;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEAUX_MONO;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEIN;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEMIXER;
MACRO_MM_VOXWARE MM_CRYSTAL_CS4232_WAVEOUT;
MACRO_MM_MICROSOFT MM_CRYSTAL_NET;
MACRO_MM_VOXWARE MM_CRYSTAL_SOUND_FUSION_JOYSTICK;
MACRO_MM_VOXWARE MM_CRYSTAL_SOUND_FUSION_MIDIIN;
MACRO_MM_VOXWARE MM_CRYSTAL_SOUND_FUSION_MIDIOUT;
MACRO_MM_VOXWARE MM_CRYSTAL_SOUND_FUSION_MIXER;
MACRO_MM_VOXWARE MM_CRYSTAL_SOUND_FUSION_WAVEIN;
MACRO_MM_VOXWARE MM_CRYSTAL_SOUND_FUSION_WAVEOUT;
MACRO_MM_MICROSOFT MM_CS;
MACRO_MM_MICROSOFT MM_CYRIX;
MACRO_MM_MICROSOFT MM_CYRIX_XAAUX;
MACRO_MM_MICROSOFT MM_CYRIX_XAMIDIIN;
MACRO_MM_MICROSOFT MM_CYRIX_XAMIDIOUT;
MACRO_MM_MICROSOFT MM_CYRIX_XAMIXER;
MACRO_MM_MICROSOFT MM_CYRIX_XASYNTH;
MACRO_MM_MICROSOFT MM_CYRIX_XAWAVEIN;
MACRO_MM_MICROSOFT MM_CYRIX_XAWAVEOUT;
MACRO_MM_MICROSOFT MM_DATAFUSION;
MACRO_MM_MICROSOFT MM_DATARAN;
MACRO_MM_MICROSOFT MM_DDD;
MACRO_MM_VOXWARE MM_DDD_MIDILINK_MIDIIN;
MACRO_MM_VOXWARE MM_DDD_MIDILINK_MIDIOUT;
MACRO_MM_CHROMATIC MM_DF_ACM_G726;
MACRO_MM_CHROMATIC MM_DF_ACM_GSM610;
MACRO_MM_MICROSOFT MM_DIACOUSTICS;
MACRO_MM_VOXWARE MM_DIACOUSTICS_DRUM_ACTION;
MACRO_MM_MICROSOFT MM_DIALOGIC;
MACRO_MM_MICROSOFT MM_DIAMONDMM;
MACRO_MM_MICROSOFT MM_DICTAPHONE;
MACRO_MM_CHROMATIC MM_DICTAPHONE_G726;
MACRO_MM_MICROSOFT MM_DIGIGRAM;
MACRO_MM_MICROSOFT MM_DIGITAL;
MACRO_MM_MICROSOFT MM_DIGITAL_ACM_G723;
MACRO_MM_MICROSOFT MM_DIGITAL_AUDIO_LABS;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_CDLX;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_CPRO;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_CTDIF;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_DOC;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_TC;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_V8;
MACRO_MM_VOXWARE MM_DIGITAL_AUDIO_LABS_VP;
MACRO_MM_MICROSOFT MM_DIGITAL_AV320_WAVEIN;
MACRO_MM_MICROSOFT MM_DIGITAL_AV320_WAVEOUT;
MACRO_MM_MICROSOFT MM_DIGITAL_ICM_H261;
MACRO_MM_MICROSOFT MM_DIGITAL_ICM_H263;
MACRO_MM_CHROMATIC MM_DIMD_AUX_LINE;
MACRO_MM_CHROMATIC MM_DIMD_DIRSOUND;
MACRO_MM_CHROMATIC MM_DIMD_MIDIIN;
MACRO_MM_CHROMATIC MM_DIMD_MIDIOUT;
MACRO_MM_CHROMATIC MM_DIMD_MIXER;
MACRO_MM_CHROMATIC MM_DIMD_PLATFORM;
MACRO_MM_CHROMATIC MM_DIMD_VIRTJOY;
MACRO_MM_CHROMATIC MM_DIMD_VIRTMPU;
MACRO_MM_CHROMATIC MM_DIMD_VIRTSB;
MACRO_MM_CHROMATIC MM_DIMD_WAVEIN;
MACRO_MM_CHROMATIC MM_DIMD_WAVEOUT;
MACRO_MM_CHROMATIC MM_DIMD_WSS_AUX;
MACRO_MM_CHROMATIC MM_DIMD_WSS_MIXER;
MACRO_MM_CHROMATIC MM_DIMD_WSS_SYNTH;
MACRO_MM_CHROMATIC MM_DIMD_WSS_WAVEIN;
MACRO_MM_CHROMATIC MM_DIMD_WSS_WAVEOUT;
MACRO_MM_MICROSOFT MM_DOLBY;
MACRO_MM_MICROSOFT MM_DPSINC;
MACRO_MM_MICROSOFT MM_DSP_GROUP;
MACRO_MM_MICROSOFT MM_DSP_GROUP_TRUESPEECH;
MACRO_MM_MICROSOFT MM_DSP_SOLUTIONS;
MACRO_MM_MICROSOFT MM_DSP_SOLUTIONS_AUX;
MACRO_MM_MICROSOFT MM_DSP_SOLUTIONS_SYNTH;
MACRO_MM_MICROSOFT MM_DSP_SOLUTIONS_WAVEIN;
MACRO_MM_MICROSOFT MM_DSP_SOLUTIONS_WAVEOUT;
MACRO_MM_MICROSOFT MM_DTS;
MACRO_MM_CHROMATIC MM_DTS_DS;
MACRO_MM_MICROSOFT MM_DUCK;
MACRO_MM_MICROSOFT MM_DVISION;
MACRO_MM_MICROSOFT MM_ECHO;
MACRO_MM_MICROSOFT MM_ECHO_AUX;
MACRO_MM_MICROSOFT MM_ECHO_MIDIIN;
MACRO_MM_MICROSOFT MM_ECHO_MIDIOUT;
MACRO_MM_MICROSOFT MM_ECHO_SYNTH;
MACRO_MM_MICROSOFT MM_ECHO_WAVEIN;
MACRO_MM_MICROSOFT MM_ECHO_WAVEOUT;
MACRO_MM_MICROSOFT MM_ECS;
MACRO_MM_VOXWARE MM_ECS_AADF_MIDI_IN;
MACRO_MM_VOXWARE MM_ECS_AADF_MIDI_OUT;
MACRO_MM_VOXWARE MM_ECS_AADF_WAVE2MIDI_IN;
MACRO_MM_MICROSOFT MM_EES;
MACRO_MM_CHROMATIC MM_EES_PCMIDI14;
MACRO_MM_CHROMATIC MM_EES_PCMIDI14_IN;
MACRO_MM_CHROMATIC MM_EES_PCMIDI14_OUT1;
MACRO_MM_CHROMATIC MM_EES_PCMIDI14_OUT2;
MACRO_MM_CHROMATIC MM_EES_PCMIDI14_OUT3;
MACRO_MM_CHROMATIC MM_EES_PCMIDI14_OUT4;
MACRO_MM_MICROSOFT MM_EMAGIC;
MACRO_MM_CHROMATIC MM_EMAGIC_UNITOR8;
MACRO_MM_MICROSOFT MM_EMU;
MACRO_MM_MICROSOFT MM_EMU_APSMIDIIN;
MACRO_MM_MICROSOFT MM_EMU_APSMIDIOUT;
MACRO_MM_MICROSOFT MM_EMU_APSSYNTH;
MACRO_MM_MICROSOFT MM_EMU_APSWAVEIN;
MACRO_MM_MICROSOFT MM_EMU_APSWAVEOUT;
MACRO_MM_MICROSOFT MM_ENET;
MACRO_MM_CHROMATIC MM_ENET_T2000_HANDSETIN;
MACRO_MM_CHROMATIC MM_ENET_T2000_HANDSETOUT;
MACRO_MM_CHROMATIC MM_ENET_T2000_LINEIN;
MACRO_MM_CHROMATIC MM_ENET_T2000_LINEOUT;
MACRO_MM_MICROSOFT MM_ENSONIQ;
MACRO_MM_VOXWARE MM_ENSONIQ_SOUNDSCAPE;
MACRO_MM_MICROSOFT MM_EPSON;
MACRO_MM_MICROSOFT MM_EPS_FMSND;
MACRO_MM_MICROSOFT MM_ESS;
MACRO_MM_MICROSOFT MM_ESS_AMAUX;
MACRO_MM_MICROSOFT MM_ESS_AMMIDIIN;
MACRO_MM_MICROSOFT MM_ESS_AMMIDIOUT;
MACRO_MM_MICROSOFT MM_ESS_AMSYNTH;
MACRO_MM_MICROSOFT MM_ESS_AMWAVEIN;
MACRO_MM_MICROSOFT MM_ESS_AMWAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_AUX_CD;
MACRO_MM_MICROSOFT MM_ESS_ES1488_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES1488_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES1488_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES1688_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES1688_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES1688_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES1788_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES1788_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES1788_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES1868_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES1868_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES1868_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES1878_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES1878_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES1878_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES1888_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES1888_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES1888_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES488_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES488_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES488_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_ES688_MIXER;
MACRO_MM_MICROSOFT MM_ESS_ES688_WAVEIN;
MACRO_MM_MICROSOFT MM_ESS_ES688_WAVEOUT;
MACRO_MM_MICROSOFT MM_ESS_MIXER;
MACRO_MM_MICROSOFT MM_ESS_MPU401_MIDIIN;
MACRO_MM_MICROSOFT MM_ESS_MPU401_MIDIOUT;
MACRO_MM_MICROSOFT MM_ETEK;
MACRO_MM_CHROMATIC MM_ETEK_KWIKMIDI_MIDIIN;
MACRO_MM_CHROMATIC MM_ETEK_KWIKMIDI_MIDIOUT;
MACRO_MM_MICROSOFT MM_EUPHONICS;
MACRO_MM_VOXWARE MM_EUPHONICS_AUX_CD;
MACRO_MM_VOXWARE MM_EUPHONICS_AUX_LINE;
MACRO_MM_VOXWARE MM_EUPHONICS_AUX_MASTER;
MACRO_MM_VOXWARE MM_EUPHONICS_AUX_MIC;
MACRO_MM_VOXWARE MM_EUPHONICS_AUX_MIDI;
MACRO_MM_VOXWARE MM_EUPHONICS_AUX_WAVE;
MACRO_MM_VOXWARE MM_EUPHONICS_EUSYNTH;
MACRO_MM_VOXWARE MM_EUPHONICS_FMSYNTH_MONO;
MACRO_MM_VOXWARE MM_EUPHONICS_FMSYNTH_STEREO;
MACRO_MM_VOXWARE MM_EUPHONICS_MIDIIN;
MACRO_MM_VOXWARE MM_EUPHONICS_MIDIOUT;
MACRO_MM_VOXWARE MM_EUPHONICS_MIXER;
MACRO_MM_VOXWARE MM_EUPHONICS_WAVEIN;
MACRO_MM_VOXWARE MM_EUPHONICS_WAVEOUT;
MACRO_MM_MICROSOFT MM_EVEREX;
MACRO_MM_MICROSOFT MM_EVEREX_CARRIER;
MACRO_MM_MICROSOFT MM_EXAN;
MACRO_MM_MICROSOFT MM_FAITH;
MACRO_MM_MICROSOFT MM_FAST;
MACRO_MM_CHROMATIC MM_FHGIIS_MPEGLAYER3;
MACRO_MM_MICROSOFT MM_FLEXION;
MACRO_MM_CHROMATIC MM_FLEXION_X300_WAVEIN;
MACRO_MM_CHROMATIC MM_FLEXION_X300_WAVEOUT;
MACRO_MM_MICROSOFT MM_FORTEMEDIA;
MACRO_MM_CHROMATIC MM_FORTEMEDIA_AUX;
MACRO_MM_CHROMATIC MM_FORTEMEDIA_FMSYNC;
MACRO_MM_CHROMATIC MM_FORTEMEDIA_MIXER;
MACRO_MM_CHROMATIC MM_FORTEMEDIA_WAVEIN;
MACRO_MM_CHROMATIC MM_FORTEMEDIA_WAVEOUT;
MACRO_MM_MICROSOFT MM_FRAUNHOFER_IIS;
MACRO_MM_MICROSOFT MM_FRONTIER;
MACRO_MM_CHROMATIC MM_FRONTIER_WAVECENTER_MIDIIN;
MACRO_MM_CHROMATIC MM_FRONTIER_WAVECENTER_MIDIOUT;
MACRO_MM_CHROMATIC MM_FRONTIER_WAVECENTER_WAVEIN;
MACRO_MM_CHROMATIC MM_FRONTIER_WAVECENTER_WAVEOUT;
MACRO_MM_MICROSOFT MM_FTR;
MACRO_MM_CHROMATIC MM_FTR_ACM;
MACRO_MM_CHROMATIC MM_FTR_ENCODER_WAVEIN;
MACRO_MM_MICROSOFT MM_FUJITSU;
MACRO_MM_MICROSOFT MM_GADGETLABS;
MACRO_MM_CHROMATIC MM_GADGETLABS_WAVE42_WAVEIN;
MACRO_MM_CHROMATIC MM_GADGETLABS_WAVE42_WAVEOUT;
MACRO_MM_CHROMATIC MM_GADGETLABS_WAVE44_WAVEIN;
MACRO_MM_CHROMATIC MM_GADGETLABS_WAVE44_WAVEOUT;
MACRO_MM_CHROMATIC MM_GADGETLABS_WAVE4_MIDIIN;
MACRO_MM_CHROMATIC MM_GADGETLABS_WAVE4_MIDIOUT;
MACRO_MM_MICROSOFT MM_GRANDE;
MACRO_MM_MICROSOFT MM_GRAVIS;
MACRO_MM_MICROSOFT MM_GUILLEMOT;
MACRO_MM_MICROSOFT MM_GULBRANSEN;
MACRO_MM_MICROSOFT MM_HAFTMANN;
MACRO_MM_CHROMATIC MM_HAFTMANN_LPTDAC2;
MACRO_MM_MICROSOFT MM_HEADSPACE;
MACRO_MM_CHROMATIC MM_HEADSPACE_HAEMIXER;
MACRO_MM_CHROMATIC MM_HEADSPACE_HAESYNTH;
MACRO_MM_CHROMATIC MM_HEADSPACE_HAEWAVEIN;
MACRO_MM_CHROMATIC MM_HEADSPACE_HAEWAVEOUT;
MACRO_MM_MICROSOFT MM_HEWLETT_PACKARD;
MACRO_MM_MICROSOFT MM_HEWLETT_PACKARD_CU_CODEC;
MACRO_MM_MICROSOFT MM_HORIZONS;
MACRO_MM_MICROSOFT MM_HP;
MACRO_MM_CHROMATIC MM_HP_WAVEIN;
MACRO_MM_CHROMATIC MM_HP_WAVEOUT;
MACRO_MM_MICROSOFT MM_HYPERACTIVE;
MACRO_MM_MICROSOFT MM_IBM;
MACRO_MM_MICROSOFT MM_IBM_MWAVE_AUX;
MACRO_MM_MICROSOFT MM_IBM_MWAVE_MIDIIN;
MACRO_MM_MICROSOFT MM_IBM_MWAVE_MIDIOUT;
MACRO_MM_MICROSOFT MM_IBM_MWAVE_MIXER;
MACRO_MM_MICROSOFT MM_IBM_MWAVE_WAVEIN;
MACRO_MM_MICROSOFT MM_IBM_MWAVE_WAVEOUT;
MACRO_MM_MICROSOFT MM_IBM_PCMCIA_AUX;
MACRO_MM_MICROSOFT MM_IBM_PCMCIA_MIDIIN;
MACRO_MM_MICROSOFT MM_IBM_PCMCIA_MIDIOUT;
MACRO_MM_MICROSOFT MM_IBM_PCMCIA_SYNTH;
MACRO_MM_MICROSOFT MM_IBM_PCMCIA_WAVEIN;
MACRO_MM_MICROSOFT MM_IBM_PCMCIA_WAVEOUT;
MACRO_MM_MICROSOFT MM_IBM_THINKPAD200;
MACRO_MM_MICROSOFT MM_IBM_WC_MIDIOUT;
MACRO_MM_MICROSOFT MM_IBM_WC_MIXEROUT;
MACRO_MM_MICROSOFT MM_IBM_WC_WAVEOUT;
MACRO_MM_MICROSOFT MM_ICCC;
MACRO_MM_CHROMATIC MM_ICCC_UNA3_AUX;
MACRO_MM_CHROMATIC MM_ICCC_UNA3_MIXER;
MACRO_MM_CHROMATIC MM_ICCC_UNA3_WAVEIN;
MACRO_MM_CHROMATIC MM_ICCC_UNA3_WAVEOUT;
MACRO_MM_MICROSOFT MM_ICE;
MACRO_MM_CHROMATIC MM_ICE_AUX;
MACRO_MM_CHROMATIC MM_ICE_MIDIIN1;
MACRO_MM_CHROMATIC MM_ICE_MIDIIN2;
MACRO_MM_CHROMATIC MM_ICE_MIDIOUT1;
MACRO_MM_CHROMATIC MM_ICE_MIDIOUT2;
MACRO_MM_CHROMATIC MM_ICE_MIXER;
MACRO_MM_CHROMATIC MM_ICE_MTWAVEIN;
MACRO_MM_CHROMATIC MM_ICE_MTWAVEOUT;
MACRO_MM_CHROMATIC MM_ICE_SYNTH;
MACRO_MM_CHROMATIC MM_ICE_WAVEIN;
MACRO_MM_CHROMATIC MM_ICE_WAVEOUT;
MACRO_MM_MICROSOFT MM_ICL_PS;
MACRO_MM_MICROSOFT MM_ICOM_AUX;
MACRO_MM_MICROSOFT MM_ICOM_LINE;
MACRO_MM_MICROSOFT MM_ICOM_MIXER;
MACRO_MM_MICROSOFT MM_ICOM_WAVEIN;
MACRO_MM_MICROSOFT MM_ICOM_WAVEOUT;
MACRO_MM_MICROSOFT MM_ICS;
MACRO_MM_MICROSOFT MM_ICS_2115_LITE_MIDIOUT;
MACRO_MM_MICROSOFT MM_ICS_2120_LITE_MIDIOUT;
MACRO_MM_MICROSOFT MM_ICS_WAVEDECK_AUX;
MACRO_MM_MICROSOFT MM_ICS_WAVEDECK_MIXER;
MACRO_MM_MICROSOFT MM_ICS_WAVEDECK_SYNTH;
MACRO_MM_MICROSOFT MM_ICS_WAVEDECK_WAVEIN;
MACRO_MM_MICROSOFT MM_ICS_WAVEDECK_WAVEOUT;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_AUX;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_FM_MIDIOUT;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_MIXER;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_MPU401_MIDIIN;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_MPU401_MIDIOUT;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_WAVEIN;
MACRO_MM_MICROSOFT MM_ICS_WAVEDEC_SB_WAVEOUT;
MACRO_MM_MICROSOFT MM_INSOFT;
MACRO_MM_MICROSOFT MM_INTEL;
MACRO_MM_MICROSOFT MM_INTELOPD_AUX;
MACRO_MM_MICROSOFT MM_INTELOPD_WAVEIN;
MACRO_MM_MICROSOFT MM_INTELOPD_WAVEOUT;
MACRO_MM_MICROSOFT MM_INTEL_NSPMODEMLINEIN;
MACRO_MM_MICROSOFT MM_INTEL_NSPMODEMLINEOUT;
MACRO_MM_MICROSOFT MM_INTERACTIVE;
MACRO_MM_MICROSOFT MM_INTERACTIVE_WAVEIN;
MACRO_MM_MICROSOFT MM_INTERACTIVE_WAVEOUT;
MACRO_MM_MICROSOFT MM_INTERNET;
MACRO_MM_CHROMATIC MM_INTERNET_SSW_MIDIIN;
MACRO_MM_CHROMATIC MM_INTERNET_SSW_MIDIOUT;
MACRO_MM_CHROMATIC MM_INTERNET_SSW_WAVEIN;
MACRO_MM_CHROMATIC MM_INTERNET_SSW_WAVEOUT;
MACRO_MM_MICROSOFT MM_INVISION;
MACRO_MM_MICROSOFT MM_IODD;
MACRO_MM_MICROSOFT MM_IOMAGIC;
MACRO_MM_MICROSOFT MM_IOMAGIC_TEMPO_AUXOUT;
MACRO_MM_MICROSOFT MM_IOMAGIC_TEMPO_MIDIOUT;
MACRO_MM_MICROSOFT MM_IOMAGIC_TEMPO_MXDOUT;
MACRO_MM_MICROSOFT MM_IOMAGIC_TEMPO_SYNTH;
MACRO_MM_MICROSOFT MM_IOMAGIC_TEMPO_WAVEIN;
MACRO_MM_MICROSOFT MM_IOMAGIC_TEMPO_WAVEOUT;
MACRO_MM_MICROSOFT MM_IPI;
MACRO_MM_CHROMATIC MM_IPI_ACM_HSX;
MACRO_MM_CHROMATIC MM_IPI_ACM_RPELP;
MACRO_MM_CHROMATIC MM_IPI_AT_MIXER;
MACRO_MM_CHROMATIC MM_IPI_AT_WAVEIN;
MACRO_MM_CHROMATIC MM_IPI_AT_WAVEOUT;
MACRO_MM_CHROMATIC MM_IPI_WF_ASSS;
MACRO_MM_MICROSOFT MM_ISOLUTION;
MACRO_MM_MICROSOFT MM_ISOLUTION_PASCAL;
MACRO_MM_MICROSOFT MM_ITERATEDSYS;
MACRO_MM_MICROSOFT MM_ITERATEDSYS_FUFCODEC;
MACRO_MM_MICROSOFT MM_I_LINK;
MACRO_MM_CHROMATIC MM_I_LINK_VOICE_CODER;
MACRO_MM_MICROSOFT MM_KAY_ELEMETRICS;
MACRO_MM_VOXWARE MM_KAY_ELEMETRICS_CSL;
MACRO_MM_VOXWARE MM_KAY_ELEMETRICS_CSL_4CHANNEL;
MACRO_MM_VOXWARE MM_KAY_ELEMETRICS_CSL_DAT;
MACRO_MM_MICROSOFT MM_KORG;
MACRO_MM_MICROSOFT MM_KORG_1212IO_MSWAVEIN;
MACRO_MM_MICROSOFT MM_KORG_1212IO_MSWAVEOUT;
MACRO_MM_MICROSOFT MM_KORG_PCIF_MIDIIN;
MACRO_MM_MICROSOFT MM_KORG_PCIF_MIDIOUT;
MACRO_MM_MICROSOFT MM_LERNOUT_ANDHAUSPIE_LHCODECACM;
MACRO_MM_MICROSOFT MM_LERNOUT_AND_HAUSPIE;
MACRO_MM_MICROSOFT MM_LEXICON;
MACRO_MM_CHROMATIC MM_LEXICON_STUDIO_WAVE_IN;
MACRO_MM_CHROMATIC MM_LEXICON_STUDIO_WAVE_OUT;
MACRO_MM_MICROSOFT MM_LOGITECH;
MACRO_MM_MICROSOFT MM_LUCENT;
MACRO_MM_CHROMATIC MM_LUCENT_ACM_G723;
MACRO_MM_MICROSOFT MM_LUCID;
MACRO_MM_CHROMATIC MM_LUCID_PCI24WAVEIN;
MACRO_MM_CHROMATIC MM_LUCID_PCI24WAVEOUT;
MACRO_MM_MICROSOFT MM_LUMINOSITI;
MACRO_MM_CHROMATIC MM_LUMINOSITI_SCWAVEIN;
MACRO_MM_CHROMATIC MM_LUMINOSITI_SCWAVEMIX;
MACRO_MM_CHROMATIC MM_LUMINOSITI_SCWAVEOUT;
MACRO_MM_MICROSOFT MM_LYNX;
MACRO_MM_MICROSOFT MM_LYRRUS;
MACRO_MM_MICROSOFT MM_LYRRUS_BRIDGE_GUITAR;
MACRO_MM_MICROSOFT MM_MALDEN;
MACRO_MM_MICROSOFT MM_MARIAN;
MACRO_MM_CHROMATIC MM_MARIAN_ARC44WAVEIN;
MACRO_MM_CHROMATIC MM_MARIAN_ARC44WAVEOUT;
MACRO_MM_CHROMATIC MM_MARIAN_ARC88WAVEIN;
MACRO_MM_CHROMATIC MM_MARIAN_ARC88WAVEOUT;
MACRO_MM_CHROMATIC MM_MARIAN_PRODIF24WAVEIN;
MACRO_MM_CHROMATIC MM_MARIAN_PRODIF24WAVEOUT;
MACRO_MM_MICROSOFT MM_MATROX_DIV;
MACRO_MM_MICROSOFT MM_MATSUSHITA;
MACRO_MM_MICROSOFT MM_MATSUSHITA_AUX;
MACRO_MM_MICROSOFT MM_MATSUSHITA_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_MATSUSHITA_MIXER;
MACRO_MM_MICROSOFT MM_MATSUSHITA_WAVEIN;
MACRO_MM_MICROSOFT MM_MATSUSHITA_WAVEOUT;
MACRO_MM MM_MAXIMUM_DISK_IO_SIZE;
MACRO_MM_MICROSOFT MM_MEDIASONIC;
MACRO_MM_MICROSOFT MM_MEDIASONIC_ACM_G723;
MACRO_MM_MICROSOFT MM_MEDIASONIC_ICOM;
MACRO_MM_MICROSOFT MM_MEDIATRIX;
MACRO_MM_MICROSOFT MM_MEDIAVISION;
MACRO_MM_MICROSOFT MM_MEDIAVISION_CDPC;
MACRO_MM_MICROSOFT MM_MEDIAVISION_OPUS1208;
MACRO_MM_MICROSOFT MM_MEDIAVISION_OPUS1216;
MACRO_MM_MICROSOFT MM_MEDIAVISION_PROAUDIO;
MACRO_MM_MICROSOFT MM_MEDIAVISION_PROAUDIO_16;
MACRO_MM_MICROSOFT MM_MEDIAVISION_PROAUDIO_PLUS;
MACRO_MM_MICROSOFT MM_MEDIAVISION_PROSTUDIO_16;
MACRO_MM_MICROSOFT MM_MEDIAVISION_THUNDER;
MACRO_MM_MICROSOFT MM_MEDIAVISION_TPORT;
MACRO_MM_MICROSOFT MM_MELABS;
MACRO_MM_MICROSOFT MM_MELABS_MIDI2GO;
MACRO_MM_CHROMATIC MM_MERGING_MPEGL3;
MACRO_MM_MICROSOFT MM_MERGING_TECHNOLOGIES;
MACRO_MM_MICROSOFT MM_METHEUS;
MACRO_MM_MICROSOFT MM_METHEUS_ZIPPER;
MACRO_MM_MICROSOFT MM_MICRONAS;
MACRO_MM_CHROMATIC MM_MICRONAS_CLP833;
MACRO_MM_CHROMATIC MM_MICRONAS_SC4;
MACRO_MM_MICROSOFT MM_MICROSOFT;
MACRO_MM_MICROSOFT MM_MIDI_MAPPER;
MACRO_MM_MICROSOFT MM_MINDMAKER;
MACRO_MM_CHROMATIC MM_MINDMAKER_GC_MIXER;
MACRO_MM_CHROMATIC MM_MINDMAKER_GC_WAVEIN;
MACRO_MM_CHROMATIC MM_MINDMAKER_GC_WAVEOUT;
MACRO_MM_MICROSOFT MM_MIRO;
MACRO_MM_MICROSOFT MM_MIRO_DC30_MIX;
MACRO_MM_MICROSOFT MM_MIRO_DC30_WAVEIN;
MACRO_MM_MICROSOFT MM_MIRO_DC30_WAVEOUT;
MACRO_MM_MICROSOFT MM_MIRO_MOVIEPRO;
MACRO_MM_MICROSOFT MM_MIRO_VIDEOD1;
MACRO_MM_MICROSOFT MM_MIRO_VIDEODC1TV;
MACRO_MM_MICROSOFT MM_MIRO_VIDEOTD;
MACRO_MM_MICROSOFT MM_MITEL;
MACRO_MM_MICROSOFT MM_MITEL_MEDIAPATH_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_MEDIAPATH_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_MPA_HANDSET_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_MPA_HANDSET_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_MPA_HANDSFREE_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_MPA_HANDSFREE_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_MPA_LINE1_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_MPA_LINE1_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_MPA_LINE2_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_MPA_LINE2_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_TALKTO_BRIDGED_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_TALKTO_BRIDGED_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_TALKTO_HANDSET_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_TALKTO_HANDSET_WAVEOUT;
MACRO_MM_MICROSOFT MM_MITEL_TALKTO_LINE_WAVEIN;
MACRO_MM_MICROSOFT MM_MITEL_TALKTO_LINE_WAVEOUT;
MACRO_MM_MICROSOFT MM_MMOTION_WAVEAUX;
MACRO_MM_MICROSOFT MM_MMOTION_WAVEIN;
MACRO_MM_MICROSOFT MM_MMOTION_WAVEOUT;
MACRO_MM_MICROSOFT MM_MOSCOM;
MACRO_MM_MICROSOFT MM_MOSCOM_VPC2400_IN;
MACRO_MM_MICROSOFT MM_MOSCOM_VPC2400_OUT;
MACRO_MM_MICROSOFT MM_MOTIONPIXELS;
MACRO_MM_CHROMATIC MM_MOTIONPIXELS_MVI2;
MACRO_MM_MICROSOFT MM_MOTOROLA;
MACRO_MM_MICROSOFT MM_MOTU;
MACRO_MM_MICROSOFT MM_MOTU_DTX_MIDI_IN_A;
MACRO_MM_MICROSOFT MM_MOTU_DTX_MIDI_IN_B;
MACRO_MM_MICROSOFT MM_MOTU_DTX_MIDI_IN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_DTX_MIDI_OUT_A;
MACRO_MM_MICROSOFT MM_MOTU_DTX_MIDI_OUT_B;
MACRO_MM_MICROSOFT MM_MOTU_FLYER_MIDI_IN_A;
MACRO_MM_MICROSOFT MM_MOTU_FLYER_MIDI_IN_B;
MACRO_MM_MICROSOFT MM_MOTU_FLYER_MIDI_IN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_FLYER_MIDI_OUT_A;
MACRO_MM_MICROSOFT MM_MOTU_FLYER_MIDI_OUT_B;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_ADAT;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIIN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_ADAT;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIIN_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPAV_NET_MIDIOUT_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIIN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIIN_8;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_7;
MACRO_MM_MICROSOFT MM_MOTU_MTPII_NET_MIDIOUT_8;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_7;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIIN_8;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_7;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_8;
MACRO_MM_MICROSOFT MM_MOTU_MTP_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIIN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MXN_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIIN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MXPMPU_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_7;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_8;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIIN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_7;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_8;
MACRO_MM_MICROSOFT MM_MOTU_MXPXT_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIIN_1;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIIN_2;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIIN_3;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIIN_4;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIIN_5;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIIN_6;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_1;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_2;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_3;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_4;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_5;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_6;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_MIDIOUT_ALL;
MACRO_MM_MICROSOFT MM_MOTU_MXP_MIDIIN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_PKX_MIDI_IN_A;
MACRO_MM_MICROSOFT MM_MOTU_PKX_MIDI_IN_B;
MACRO_MM_MICROSOFT MM_MOTU_PKX_MIDI_IN_SYNC;
MACRO_MM_MICROSOFT MM_MOTU_PKX_MIDI_OUT_A;
MACRO_MM_MICROSOFT MM_MOTU_PKX_MIDI_OUT_B;
MACRO_MM_MICROSOFT MM_MPTUS;
MACRO_MM_MICROSOFT MM_MPTUS_SPWAVEOUT;
MACRO_MM_MICROSOFT MM_MPU401_MIDIIN;
MACRO_MM_MICROSOFT MM_MPU401_MIDIOUT;
MACRO_MM_MICROSOFT MM_MSFT_ACM_G711;
MACRO_MM_MICROSOFT MM_MSFT_ACM_GSM610;
MACRO_MM_MICROSOFT MM_MSFT_ACM_IMAADPCM;
MACRO_MM_MICROSOFT MM_MSFT_ACM_MSADPCM;
MACRO_MM_MICROSOFT MM_MSFT_ACM_MSFILTER;
MACRO_MM_MICROSOFT MM_MSFT_ACM_MSG723;
MACRO_MM_MICROSOFT MM_MSFT_ACM_MSNAUDIO;
MACRO_MM_MICROSOFT MM_MSFT_ACM_MSRT24;
MACRO_MM_MICROSOFT MM_MSFT_ACM_PCM;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_AUX_CD;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_AUX_LINE;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_AUX_MIC;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_MIDIIN;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_MIDIOUT;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_MIDISYNTH;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_GENERIC_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_MSACM;
MACRO_MM_MICROSOFT MM_MSFT_MSOPL_SYNTH;
MACRO_MM_MICROSOFT MM_MSFT_SB16_AUX_CD;
MACRO_MM_MICROSOFT MM_MSFT_SB16_AUX_LINE;
MACRO_MM_MICROSOFT MM_MSFT_SB16_MIDIIN;
MACRO_MM_MICROSOFT MM_MSFT_SB16_MIDIOUT;
MACRO_MM_MICROSOFT MM_MSFT_SB16_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_SB16_SYNTH;
MACRO_MM_MICROSOFT MM_MSFT_SB16_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_SB16_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_AUX_CD;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_AUX_LINE;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_MIDIIN;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_MIDIOUT;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_SYNTH;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_SBPRO_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_VMDMS_HANDSET_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_VMDMS_HANDSET_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_VMDMS_LINE_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_VMDMS_LINE_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_VMDMW_HANDSET_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_VMDMW_HANDSET_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_VMDMW_LINE_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_VMDMW_LINE_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_VMDMW_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_VMDM_GAME_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_VMDM_GAME_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_WDMAUDIO_AUX;
MACRO_MM_MICROSOFT MM_MSFT_WDMAUDIO_MIDIIN;
MACRO_MM_MICROSOFT MM_MSFT_WDMAUDIO_MIDIOUT;
MACRO_MM_MICROSOFT MM_MSFT_WDMAUDIO_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_WDMAUDIO_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_WDMAUDIO_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_WSS_AUX;
MACRO_MM_MICROSOFT MM_MSFT_WSS_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_MSFT_WSS_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_WSS_NT_AUX;
MACRO_MM_MICROSOFT MM_MSFT_WSS_NT_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_MSFT_WSS_NT_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_WSS_NT_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_WSS_NT_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_WSS_OEM_AUX;
MACRO_MM_MICROSOFT MM_MSFT_WSS_OEM_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_MSFT_WSS_OEM_MIXER;
MACRO_MM_MICROSOFT MM_MSFT_WSS_OEM_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_WSS_OEM_WAVEOUT;
MACRO_MM_MICROSOFT MM_MSFT_WSS_WAVEIN;
MACRO_MM_MICROSOFT MM_MSFT_WSS_WAVEOUT;
MACRO_MM_MICROSOFT MM_MWM;
MACRO_MM_MICROSOFT MM_NCR;
MACRO_MM_MICROSOFT MM_NCR_BA_AUX;
MACRO_MM_MICROSOFT MM_NCR_BA_MIXER;
MACRO_MM_MICROSOFT MM_NCR_BA_SYNTH;
MACRO_MM_MICROSOFT MM_NCR_BA_WAVEIN;
MACRO_MM_MICROSOFT MM_NCR_BA_WAVEOUT;
MACRO_MM_MICROSOFT MM_NEC;
MACRO_MM_MICROSOFT MM_NEC_26_SYNTH;
MACRO_MM_MICROSOFT MM_NEC_73_86_SYNTH;
MACRO_MM_MICROSOFT MM_NEC_73_86_WAVEIN;
MACRO_MM_MICROSOFT MM_NEC_73_86_WAVEOUT;
MACRO_MM_MICROSOFT MM_NEC_JOYSTICK;
MACRO_MM_MICROSOFT MM_NEC_MPU401_MIDIIN;
MACRO_MM_MICROSOFT MM_NEC_MPU401_MIDIOUT;
MACRO_MM_MICROSOFT MM_NEOMAGIC;
MACRO_MM_CHROMATIC MM_NEOMAGIC_AUX;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MIDIIN;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MIDIOUT;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_AUX;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_FMSYNTH;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_GMSYNTH;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_MIDIIN;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_MIDIOUT;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_MIXER;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_WAVEIN;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MW3DX_WAVEOUT;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MWAVE_AUX;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MWAVE_MIDIIN;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MWAVE_MIDIOUT;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MWAVE_MIXER;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MWAVE_WAVEIN;
MACRO_MM_CHROMATIC MM_NEOMAGIC_MWAVE_WAVEOUT;
MACRO_MM_CHROMATIC MM_NEOMAGIC_SYNTH;
MACRO_MM_CHROMATIC MM_NEOMAGIC_WAVEIN;
MACRO_MM_CHROMATIC MM_NEOMAGIC_WAVEOUT;
MACRO_MM_MICROSOFT MM_NETSCAPE;
MACRO_MM_MICROSOFT MM_NETXL;
MACRO_MM_MICROSOFT MM_NETXL_XLVIDEO;
MACRO_MM_MICROSOFT MM_NEWMEDIA;
MACRO_MM_MICROSOFT MM_NEWMEDIA_WAVJAMMER;
MACRO_MM_MICROSOFT MM_NMP;
MACRO_MM_CHROMATIC MM_NMP_ACM_AMR;
MACRO_MM_CHROMATIC MM_NMP_CCP_WAVEIN;
MACRO_MM_CHROMATIC MM_NMP_CCP_WAVEOUT;
MACRO_MM_MICROSOFT MM_NMS;
MACRO_MM_MICROSOFT MM_NOGATECH;
MACRO_MM_MICROSOFT MM_NORRIS;
MACRO_MM_VOXWARE MM_NORRIS_VOICELINK;
MACRO_MM_VOXWARE MM_NORTEL_MPXAC_WAVEIN;
MACRO_MM_VOXWARE MM_NORTEL_MPXAC_WAVEOUT;
MACRO_MM_MICROSOFT MM_NORTHERN_TELECOM;
MACRO_MM_MICROSOFT MM_NVIDIA;
MACRO_MM_VOXWARE MM_NVIDIA_AUX;
MACRO_MM_VOXWARE MM_NVIDIA_GAMEPORT;
MACRO_MM_VOXWARE MM_NVIDIA_MIDIIN;
MACRO_MM_VOXWARE MM_NVIDIA_MIDIOUT;
MACRO_MM_VOXWARE MM_NVIDIA_MIXER;
MACRO_MM_VOXWARE MM_NVIDIA_WAVEIN;
MACRO_MM_VOXWARE MM_NVIDIA_WAVEOUT;
MACRO_MM_MICROSOFT MM_OKI;
MACRO_MM_MICROSOFT MM_OKSORI;
MACRO_MM_VOXWARE MM_OKSORI_BASE;
MACRO_MM_VOXWARE MM_OKSORI_EXT_MIC1;
MACRO_MM_VOXWARE MM_OKSORI_EXT_MIC2;
MACRO_MM_VOXWARE MM_OKSORI_FM_OPL4;
MACRO_MM_VOXWARE MM_OKSORI_MIDIIN;
MACRO_MM_VOXWARE MM_OKSORI_MIDIOUT;
MACRO_MM_VOXWARE MM_OKSORI_MIX_AUX1;
MACRO_MM_VOXWARE MM_OKSORI_MIX_CD;
MACRO_MM_VOXWARE MM_OKSORI_MIX_ECHO;
MACRO_MM_VOXWARE MM_OKSORI_MIX_FM;
MACRO_MM_VOXWARE MM_OKSORI_MIX_LINE;
MACRO_MM_VOXWARE MM_OKSORI_MIX_LINE1;
MACRO_MM_VOXWARE MM_OKSORI_MIX_MASTER;
MACRO_MM_VOXWARE MM_OKSORI_MIX_MIC;
MACRO_MM_VOXWARE MM_OKSORI_MIX_WAVE;
MACRO_MM_VOXWARE MM_OKSORI_MPEG_CDVISION;
MACRO_MM_VOXWARE MM_OKSORI_OSR16_WAVEIN;
MACRO_MM_VOXWARE MM_OKSORI_OSR16_WAVEOUT;
MACRO_MM_VOXWARE MM_OKSORI_OSR8_WAVEIN;
MACRO_MM_VOXWARE MM_OKSORI_OSR8_WAVEOUT;
MACRO_MM_MICROSOFT MM_OLIVETTI;
MACRO_MM_MICROSOFT MM_OLIVETTI_ACM_ADPCM;
MACRO_MM_MICROSOFT MM_OLIVETTI_ACM_CELP;
MACRO_MM_MICROSOFT MM_OLIVETTI_ACM_GSM;
MACRO_MM_MICROSOFT MM_OLIVETTI_ACM_OPR;
MACRO_MM_MICROSOFT MM_OLIVETTI_ACM_SBC;
MACRO_MM_MICROSOFT MM_OLIVETTI_AUX;
MACRO_MM_MICROSOFT MM_OLIVETTI_JOYSTICK;
MACRO_MM_MICROSOFT MM_OLIVETTI_MIDIIN;
MACRO_MM_MICROSOFT MM_OLIVETTI_MIDIOUT;
MACRO_MM_MICROSOFT MM_OLIVETTI_MIXER;
MACRO_MM_MICROSOFT MM_OLIVETTI_SYNTH;
MACRO_MM_MICROSOFT MM_OLIVETTI_WAVEIN;
MACRO_MM_MICROSOFT MM_OLIVETTI_WAVEOUT;
MACRO_MM_MICROSOFT MM_ONLIVE;
MACRO_MM_CHROMATIC MM_ONLIVE_MPCODEC;
MACRO_MM_MICROSOFT MM_OPCODE;
MACRO_MM_MICROSOFT MM_OPTI;
MACRO_MM_MICROSOFT MM_OPTI_M16_AUX;
MACRO_MM_MICROSOFT MM_OPTI_M16_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_OPTI_M16_MIDIIN;
MACRO_MM_MICROSOFT MM_OPTI_M16_MIDIOUT;
MACRO_MM_MICROSOFT MM_OPTI_M16_MIXER;
MACRO_MM_MICROSOFT MM_OPTI_M16_WAVEIN;
MACRO_MM_MICROSOFT MM_OPTI_M16_WAVEOUT;
MACRO_MM_MICROSOFT MM_OPTI_M32_AUX;
MACRO_MM_MICROSOFT MM_OPTI_M32_MIDIIN;
MACRO_MM_MICROSOFT MM_OPTI_M32_MIDIOUT;
MACRO_MM_MICROSOFT MM_OPTI_M32_MIXER;
MACRO_MM_MICROSOFT MM_OPTI_M32_SYNTH_STEREO;
MACRO_MM_MICROSOFT MM_OPTI_M32_WAVEIN;
MACRO_MM_MICROSOFT MM_OPTI_M32_WAVEOUT;
MACRO_MM_MICROSOFT MM_OPTI_P16_AUX;
MACRO_MM_MICROSOFT MM_OPTI_P16_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_OPTI_P16_MIDIIN;
MACRO_MM_MICROSOFT MM_OPTI_P16_MIDIOUT;
MACRO_MM_MICROSOFT MM_OPTI_P16_MIXER;
MACRO_MM_MICROSOFT MM_OPTI_P16_WAVEIN;
MACRO_MM_MICROSOFT MM_OPTI_P16_WAVEOUT;
MACRO_MM_MICROSOFT MM_OPUS1208_AUX;
MACRO_MM_MICROSOFT MM_OPUS1208_MIXER;
MACRO_MM_MICROSOFT MM_OPUS1208_SYNTH;
MACRO_MM_MICROSOFT MM_OPUS1208_WAVEIN;
MACRO_MM_MICROSOFT MM_OPUS1208_WAVEOUT;
MACRO_MM_MICROSOFT MM_OPUS1216_AUX;
MACRO_MM_MICROSOFT MM_OPUS1216_MIDIIN;
MACRO_MM_MICROSOFT MM_OPUS1216_MIDIOUT;
MACRO_MM_MICROSOFT MM_OPUS1216_MIXER;
MACRO_MM_MICROSOFT MM_OPUS1216_SYNTH;
MACRO_MM_MICROSOFT MM_OPUS1216_WAVEIN;
MACRO_MM_MICROSOFT MM_OPUS1216_WAVEOUT;
MACRO_MM_MICROSOFT MM_OPUS401_MIDIIN;
MACRO_MM_MICROSOFT MM_OPUS401_MIDIOUT;
MACRO_MM_MICROSOFT MM_OSITECH;
MACRO_MM_MICROSOFT MM_OSITECH_TRUMPCARD;
MACRO_MM_MICROSOFT MM_OSPREY;
MACRO_MM_VOXWARE MM_OSPREY_1000WAVEIN;
MACRO_MM_VOXWARE MM_OSPREY_1000WAVEOUT;
MACRO_MM_MICROSOFT MM_OTI;
MACRO_MM_CHROMATIC MM_OTI_611MIDIN;
MACRO_MM_CHROMATIC MM_OTI_611MIDIOUT;
MACRO_MM_CHROMATIC MM_OTI_611MIXER;
MACRO_MM_CHROMATIC MM_OTI_611WAVEIN;
MACRO_MM_CHROMATIC MM_OTI_611WAVEOUT;
MACRO_MM_MICROSOFT MM_PACIFICRESEARCH;
MACRO_MM_MICROSOFT MM_PCSPEAKER_WAVEOUT;
MACRO_MM_MICROSOFT MM_PC_JOYSTICK;
MACRO_MM_MICROSOFT MM_PHILIPS_ACM_LPCBB;
MACRO_MM_MICROSOFT MM_PHILIPS_SPEECH_PROCESSING;
MACRO_MM_MICROSOFT MM_PHONET;
MACRO_MM_CHROMATIC MM_PHONET_PP_MIXER;
MACRO_MM_CHROMATIC MM_PHONET_PP_WAVEIN;
MACRO_MM_CHROMATIC MM_PHONET_PP_WAVEOUT;
MACRO_MM_MICROSOFT MM_PICTURETEL;
MACRO_MM_MICROSOFT MM_PID_UNMAPPED;
MACRO_MM_MICROSOFT MM_PINNACLE;
MACRO_MM_MICROSOFT MM_PRAGMATRAX;
MACRO_MM_MICROSOFT MM_PRECEPT;
MACRO_MM_MICROSOFT MM_PROAUD_16_AUX;
MACRO_MM_MICROSOFT MM_PROAUD_16_MIDIIN;
MACRO_MM_MICROSOFT MM_PROAUD_16_MIDIOUT;
MACRO_MM_MICROSOFT MM_PROAUD_16_MIXER;
MACRO_MM_MICROSOFT MM_PROAUD_16_SYNTH;
MACRO_MM_MICROSOFT MM_PROAUD_16_WAVEIN;
MACRO_MM_MICROSOFT MM_PROAUD_16_WAVEOUT;
MACRO_MM_MICROSOFT MM_PROAUD_AUX;
MACRO_MM_MICROSOFT MM_PROAUD_MIDIIN;
MACRO_MM_MICROSOFT MM_PROAUD_MIDIOUT;
MACRO_MM_MICROSOFT MM_PROAUD_MIXER;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_AUX;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_MIDIIN;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_MIDIOUT;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_MIXER;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_SYNTH;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_WAVEIN;
MACRO_MM_MICROSOFT MM_PROAUD_PLUS_WAVEOUT;
MACRO_MM_MICROSOFT MM_PROAUD_SYNTH;
MACRO_MM_MICROSOFT MM_PROAUD_WAVEIN;
MACRO_MM_MICROSOFT MM_PROAUD_WAVEOUT;
MACRO_MM_MICROSOFT MM_QCIAR;
MACRO_MM_MICROSOFT MM_QDESIGN;
MACRO_MM_CHROMATIC MM_QDESIGN_ACM_MPEG;
MACRO_MM_CHROMATIC MM_QDESIGN_ACM_QDESIGN_MUSIC;
MACRO_MM_MICROSOFT MM_QTEAM;
MACRO_MM_MICROSOFT MM_QUALCOMM;
MACRO_MM_MICROSOFT MM_QUANTUM3D;
MACRO_MM_MICROSOFT MM_QUARTERDECK;
MACRO_MM_VOXWARE MM_QUARTERDECK_LHWAVEIN;
MACRO_MM_VOXWARE MM_QUARTERDECK_LHWAVEOUT;
MACRO_MM_MICROSOFT MM_QUICKAUDIO;
MACRO_MM_CHROMATIC MM_QUICKAUDIO_MAXIMIDI;
MACRO_MM_CHROMATIC MM_QUICKAUDIO_MINIMIDI;
MACRO_MM_MICROSOFT MM_QUICKNET;
MACRO_MM_CHROMATIC MM_QUICKNET_PJWAVEIN;
MACRO_MM_CHROMATIC MM_QUICKNET_PJWAVEOUT;
MACRO_MM_MICROSOFT MM_RADIUS;
MACRO_MM_MICROSOFT MM_RHETOREX;
MACRO_MM_VOXWARE MM_RHETOREX_WAVEIN;
MACRO_MM_VOXWARE MM_RHETOREX_WAVEOUT;
MACRO_MM_MICROSOFT MM_RICHMOND;
MACRO_MM_MICROSOFT MM_ROCKWELL;
MACRO_MM_MICROSOFT MM_ROLAND;
MACRO_MM_MICROSOFT MM_ROLAND_MPU401_MIDIIN;
MACRO_MM_MICROSOFT MM_ROLAND_MPU401_MIDIOUT;
MACRO_MM_MICROSOFT MM_ROLAND_RAP10_MIDIIN;
MACRO_MM_MICROSOFT MM_ROLAND_RAP10_MIDIOUT;
MACRO_MM_MICROSOFT MM_ROLAND_RAP10_SYNTH;
MACRO_MM_MICROSOFT MM_ROLAND_RAP10_WAVEIN;
MACRO_MM_MICROSOFT MM_ROLAND_RAP10_WAVEOUT;
MACRO_MM_MICROSOFT MM_ROLAND_SC7_MIDIIN;
MACRO_MM_MICROSOFT MM_ROLAND_SC7_MIDIOUT;
MACRO_MM_MICROSOFT MM_ROLAND_SCP_AUX;
MACRO_MM_MICROSOFT MM_ROLAND_SCP_MIDIIN;
MACRO_MM_MICROSOFT MM_ROLAND_SCP_MIDIOUT;
MACRO_MM_MICROSOFT MM_ROLAND_SCP_MIXER;
MACRO_MM_MICROSOFT MM_ROLAND_SCP_WAVEIN;
MACRO_MM_MICROSOFT MM_ROLAND_SCP_WAVEOUT;
MACRO_MM_MICROSOFT MM_ROLAND_SERIAL_MIDIIN;
MACRO_MM_MICROSOFT MM_ROLAND_SERIAL_MIDIOUT;
MACRO_MM_MICROSOFT MM_ROLAND_SMPU_MIDIINA;
MACRO_MM_MICROSOFT MM_ROLAND_SMPU_MIDIINB;
MACRO_MM_MICROSOFT MM_ROLAND_SMPU_MIDIOUTA;
MACRO_MM_MICROSOFT MM_ROLAND_SMPU_MIDIOUTB;
MACRO_MM_MICROSOFT MM_RZS;
MACRO_MM_CHROMATIC MM_RZS_ACM_TUBGSM;
MACRO_MM_MICROSOFT MM_S3;
MACRO_MM_CHROMATIC MM_S3_AUX;
MACRO_MM_CHROMATIC MM_S3_FMSYNTH;
MACRO_MM_CHROMATIC MM_S3_MIDIIN;
MACRO_MM_CHROMATIC MM_S3_MIDIOUT;
MACRO_MM_CHROMATIC MM_S3_MIXER;
MACRO_MM_CHROMATIC MM_S3_WAVEIN;
MACRO_MM_CHROMATIC MM_S3_WAVEOUT;
MACRO_MM_MICROSOFT MM_SANYO;
MACRO_MM_MICROSOFT MM_SANYO_ACM_LD_ADPCM;
MACRO_MM_MICROSOFT MM_SCALACS;
MACRO_MM_MICROSOFT MM_SEERSYS;
MACRO_MM_VOXWARE MM_SEERSYS_REALITY;
MACRO_MM_VOXWARE MM_SEERSYS_SEERMIX;
MACRO_MM_VOXWARE MM_SEERSYS_SEERSYNTH;
MACRO_MM_VOXWARE MM_SEERSYS_SEERWAVE;
MACRO_MM_VOXWARE MM_SEERSYS_WAVESYNTH;
MACRO_MM_VOXWARE MM_SEERSYS_WAVESYNTH_WG;
MACRO_MM_MICROSOFT MM_SELSIUS_SYSTEMS;
MACRO_MM_CHROMATIC MM_SELSIUS_SYSTEMS_RTPWAVEIN;
MACRO_MM_CHROMATIC MM_SELSIUS_SYSTEMS_RTPWAVEOUT;
MACRO_MM_MICROSOFT MM_SGI;
MACRO_MM_CHROMATIC MM_SGI_320_MIXER;
MACRO_MM_CHROMATIC MM_SGI_320_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_320_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_540_MIXER;
MACRO_MM_CHROMATIC MM_SGI_540_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_540_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADAT8CHAN_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADAT8CHAN_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO1_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO1_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO2_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO2_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO3_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO3_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO4_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO4_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO5_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO5_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO6_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO6_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO7_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO7_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO8_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATMONO8_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO12_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO12_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO32_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO34_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO56_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO56_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO78_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_ADATSTEREO78_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_AESMONO1_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_AESMONO1_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_AESMONO2_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_AESMONO2_WAVEOUT;
MACRO_MM_CHROMATIC MM_SGI_RAD_AESSTEREO_WAVEIN;
MACRO_MM_CHROMATIC MM_SGI_RAD_AESSTEREO_WAVEOUT;
MACRO_MM_MICROSOFT MM_SHARP;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_BASS;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_CHR;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_MASTER;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_MIDI_VOL;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_RVB;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_TREBLE;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_VOL;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_WAVE_CHR;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_WAVE_RVB;
MACRO_MM_CHROMATIC MM_SHARP_MDC_AUX_WAVE_VOL;
MACRO_MM_CHROMATIC MM_SHARP_MDC_MIDI_IN;
MACRO_MM_CHROMATIC MM_SHARP_MDC_MIDI_OUT;
MACRO_MM_CHROMATIC MM_SHARP_MDC_MIDI_SYNTH;
MACRO_MM_CHROMATIC MM_SHARP_MDC_MIXER;
MACRO_MM_CHROMATIC MM_SHARP_MDC_WAVE_IN;
MACRO_MM_CHROMATIC MM_SHARP_MDC_WAVE_OUT;
MACRO_MM_MICROSOFT MM_SICRESOURCE;
MACRO_MM_CHROMATIC MM_SICRESOURCE_SSO3D;
MACRO_MM_CHROMATIC MM_SICRESOURCE_SSOW3DI;
MACRO_MM_MICROSOFT MM_SIEMENS_SBC;
MACRO_MM_MICROSOFT MM_SIERRA;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_AUX;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_AUX2;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_MIDIIN;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_MIDIOUT;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_SYNTH;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_WAVEIN;
MACRO_MM_MICROSOFT MM_SIERRA_ARIA_WAVEOUT;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_AUX_CD;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_AUX_LINE;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_AUX_MODEM;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_MIDIIN;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_MIDIOUT;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_MIXER;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_SYNTH;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_WAVEIN;
MACRO_MM_MICROSOFT MM_SIERRA_QUARTET_WAVEOUT;
MACRO_MM_MICROSOFT MM_SILICONSOFT;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SC1_WAVEIN;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SC1_WAVEOUT;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SC2_WAVEIN;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SC2_WAVEOUT;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SOUNDJR2PR_WAVEIN;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SOUNDJR2PR_WAVEOUT;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SOUNDJR2_WAVEOUT;
MACRO_MM_MICROSOFT MM_SILICONSOFT_SOUNDJR3_WAVEOUT;
MACRO_MM_MICROSOFT MM_SIPROLAB;
MACRO_MM_CHROMATIC MM_SIPROLAB_ACELPNET;
MACRO_MM_MICROSOFT MM_SNDBLST_MIDIIN;
MACRO_MM_MICROSOFT MM_SNDBLST_MIDIOUT;
MACRO_MM_MICROSOFT MM_SNDBLST_SYNTH;
MACRO_MM_MICROSOFT MM_SNDBLST_WAVEIN;
MACRO_MM_MICROSOFT MM_SNDBLST_WAVEOUT;
MACRO_MM_MICROSOFT MM_SNI;
MACRO_MM_MICROSOFT MM_SNI_ACM_G721;
MACRO_MM_MICROSOFT MM_SOFTLAB_NSK;
MACRO_MM_CHROMATIC MM_SOFTLAB_NSK_FRW_AUX;
MACRO_MM_CHROMATIC MM_SOFTLAB_NSK_FRW_MIXER;
MACRO_MM_CHROMATIC MM_SOFTLAB_NSK_FRW_WAVEIN;
MACRO_MM_CHROMATIC MM_SOFTLAB_NSK_FRW_WAVEOUT;
MACRO_MM_MICROSOFT MM_SOFTSOUND;
MACRO_MM_VOXWARE MM_SOFTSOUND_CODEC;
MACRO_MM_MICROSOFT MM_SONICFOUNDRY;
MACRO_MM_MICROSOFT MM_SONORUS;
MACRO_MM_CHROMATIC MM_SONORUS_STUDIO;
MACRO_MM_MICROSOFT MM_SONY;
MACRO_MM_CHROMATIC MM_SONY_ACM_SCX;
MACRO_MM_MICROSOFT MM_SORVIS;
MACRO_MM_MICROSOFT MM_SOUNDESIGNS;
MACRO_MM_VOXWARE MM_SOUNDESIGNS_WAVEIN;
MACRO_MM_VOXWARE MM_SOUNDESIGNS_WAVEOUT;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_AUX;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_MIDIIN;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_MIDIOUT;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_MIXER;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_SYNTH;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_WAVEIN;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_WAVEOUT;
MACRO_MM_VOXWARE MM_SOUNDSCAPE_WAVEOUT_AUX;
MACRO_MM_MICROSOFT MM_SOUNDSPACE;
MACRO_MM_MICROSOFT MM_SPECTRUM_PRODUCTIONS;
MACRO_MM_MICROSOFT MM_SPECTRUM_SIGNAL_PROCESSING;
MACRO_MM_MICROSOFT MM_SPEECHCOMP;
MACRO_MM_MICROSOFT MM_SPLASH_STUDIOS;
MACRO_MM_VOXWARE MM_SSP_SNDFESAUX;
MACRO_MM_VOXWARE MM_SSP_SNDFESMIDIIN;
MACRO_MM_VOXWARE MM_SSP_SNDFESMIDIOUT;
MACRO_MM_VOXWARE MM_SSP_SNDFESMIX;
MACRO_MM_VOXWARE MM_SSP_SNDFESSYNTH;
MACRO_MM_VOXWARE MM_SSP_SNDFESWAVEIN;
MACRO_MM_VOXWARE MM_SSP_SNDFESWAVEOUT;
MACRO_MM_MICROSOFT MM_STUDER;
MACRO_MM_MICROSOFT MM_STUDIO_16_AUX;
MACRO_MM_MICROSOFT MM_STUDIO_16_MIDIIN;
MACRO_MM_MICROSOFT MM_STUDIO_16_MIDIOUT;
MACRO_MM_MICROSOFT MM_STUDIO_16_MIXER;
MACRO_MM_MICROSOFT MM_STUDIO_16_SYNTH;
MACRO_MM_MICROSOFT MM_STUDIO_16_WAVEIN;
MACRO_MM_MICROSOFT MM_STUDIO_16_WAVEOUT;
MACRO_MM_MICROSOFT MM_ST_MICROELECTRONICS;
MACRO_MM_MICROSOFT MM_SUNCOM;
MACRO_MM_MICROSOFT MM_SUPERMAC;
MACRO_MM_MICROSOFT MM_SYDEC_NV;
MACRO_MM_CHROMATIC MM_SYDEC_NV_WAVEIN;
MACRO_MM_CHROMATIC MM_SYDEC_NV_WAVEOUT;
MACRO_MM_MICROSOFT MM_TANDY;
MACRO_MM_MICROSOFT MM_TANDY_PSSJWAVEIN;
MACRO_MM_MICROSOFT MM_TANDY_PSSJWAVEOUT;
MACRO_MM_MICROSOFT MM_TANDY_SENS_MMAMIDIIN;
MACRO_MM_MICROSOFT MM_TANDY_SENS_MMAMIDIOUT;
MACRO_MM_MICROSOFT MM_TANDY_SENS_MMAWAVEIN;
MACRO_MM_MICROSOFT MM_TANDY_SENS_MMAWAVEOUT;
MACRO_MM_MICROSOFT MM_TANDY_SENS_VISWAVEOUT;
MACRO_MM_MICROSOFT MM_TANDY_VISBIOSSYNTH;
MACRO_MM_MICROSOFT MM_TANDY_VISWAVEIN;
MACRO_MM_MICROSOFT MM_TANDY_VISWAVEOUT;
MACRO_MM_MICROSOFT MM_TBS_TROPEZ_AUX1;
MACRO_MM_MICROSOFT MM_TBS_TROPEZ_AUX2;
MACRO_MM_MICROSOFT MM_TBS_TROPEZ_LINE;
MACRO_MM_MICROSOFT MM_TBS_TROPEZ_WAVEIN;
MACRO_MM_MICROSOFT MM_TBS_TROPEZ_WAVEOUT;
MACRO_MM_MICROSOFT MM_TDK;
MACRO_MM_VOXWARE MM_TDK_MW_AUX;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_BASS;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_CHR;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_MASTER;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_MIDI_VOL;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_RVB;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_TREBLE;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_VOL;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_WAVE_CHR;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_WAVE_RVB;
MACRO_MM_VOXWARE MM_TDK_MW_AUX_WAVE_VOL;
MACRO_MM_VOXWARE MM_TDK_MW_MIDI_IN;
MACRO_MM_VOXWARE MM_TDK_MW_MIDI_OUT;
MACRO_MM_VOXWARE MM_TDK_MW_MIDI_SYNTH;
MACRO_MM_VOXWARE MM_TDK_MW_MIXER;
MACRO_MM_VOXWARE MM_TDK_MW_WAVE_IN;
MACRO_MM_VOXWARE MM_TDK_MW_WAVE_OUT;
MACRO_MM_MICROSOFT MM_TELEKOL;
MACRO_MM_CHROMATIC MM_TELEKOL_WAVEIN;
MACRO_MM_CHROMATIC MM_TELEKOL_WAVEOUT;
MACRO_MM_MICROSOFT MM_TERALOGIC;
MACRO_MM_MICROSOFT MM_TERRATEC;
MACRO_MM_MICROSOFT MM_THUNDER_AUX;
MACRO_MM_MICROSOFT MM_THUNDER_SYNTH;
MACRO_MM_MICROSOFT MM_THUNDER_WAVEIN;
MACRO_MM_MICROSOFT MM_THUNDER_WAVEOUT;
MACRO_MM_MICROSOFT MM_TPORT_SYNTH;
MACRO_MM_MICROSOFT MM_TPORT_WAVEIN;
MACRO_MM_MICROSOFT MM_TPORT_WAVEOUT;
MACRO_MM_MICROSOFT MM_TRUEVISION;
MACRO_MM_MICROSOFT MM_TRUEVISION_WAVEIN1;
MACRO_MM_MICROSOFT MM_TRUEVISION_WAVEOUT1;
MACRO_MM_MICROSOFT MM_TTEWS_AUX;
MACRO_MM_MICROSOFT MM_TTEWS_MIDIIN;
MACRO_MM_MICROSOFT MM_TTEWS_MIDIMONITOR;
MACRO_MM_MICROSOFT MM_TTEWS_MIDIOUT;
MACRO_MM_MICROSOFT MM_TTEWS_MIDISYNTH;
MACRO_MM_MICROSOFT MM_TTEWS_MIXER;
MACRO_MM_MICROSOFT MM_TTEWS_VMIDIIN;
MACRO_MM_MICROSOFT MM_TTEWS_VMIDIOUT;
MACRO_MM_MICROSOFT MM_TTEWS_WAVEIN;
MACRO_MM_MICROSOFT MM_TTEWS_WAVEOUT;
MACRO_MM_MICROSOFT MM_TURTLE_BEACH;
MACRO_MM_MICROSOFT MM_UHER_INFORMATIC;
MACRO_MM_CHROMATIC MM_UH_ACM_ADPCM;
MACRO_MM_MICROSOFT MM_UNISYS;
MACRO_MM_CHROMATIC MM_UNISYS_ACM_NAP;
MACRO_MM_MICROSOFT MM_UNMAPPED;
MACRO_MM_MICROSOFT MM_VAL;
MACRO_MM_MICROSOFT MM_VAL_MICROKEY_AP_WAVEIN;
MACRO_MM_MICROSOFT MM_VAL_MICROKEY_AP_WAVEOUT;
MACRO_MM_MICROSOFT MM_VANKOEVERING;
MACRO_MM_MICROSOFT MM_VIA;
MACRO_MM_CHROMATIC MM_VIA_AUX;
MACRO_MM_CHROMATIC MM_VIA_MIXER;
MACRO_MM_CHROMATIC MM_VIA_MPU401_MIDIIN;
MACRO_MM_CHROMATIC MM_VIA_MPU401_MIDIOUT;
MACRO_MM_CHROMATIC MM_VIA_SWFM_SYNTH;
MACRO_MM_CHROMATIC MM_VIA_WAVEIN;
MACRO_MM_CHROMATIC MM_VIA_WAVEOUT;
MACRO_MM_CHROMATIC MM_VIA_WDM_MIXER;
MACRO_MM_CHROMATIC MM_VIA_WDM_MPU401_MIDIIN;
MACRO_MM_CHROMATIC MM_VIA_WDM_MPU401_MIDIOUT;
MACRO_MM_CHROMATIC MM_VIA_WDM_WAVEIN;
MACRO_MM_CHROMATIC MM_VIA_WDM_WAVEOUT;
MACRO_MM_MICROSOFT MM_VIDEOLOGIC;
MACRO_MM_MICROSOFT MM_VIDEOLOGIC_MSWAVEIN;
MACRO_MM_MICROSOFT MM_VIDEOLOGIC_MSWAVEOUT;
MACRO_MM_MICROSOFT MM_VIENNASYS;
MACRO_MM_CHROMATIC MM_VIENNASYS_TSP_WAVE_DRIVER;
MACRO_MM_MICROSOFT MM_VIONA;
MACRO_MM_CHROMATIC MM_VIONAQVINPCI_WAVEOUT;
MACRO_MM_CHROMATIC MM_VIONA_BUSTER_MIXER;
MACRO_MM_CHROMATIC MM_VIONA_CINEMASTER_MIXER;
MACRO_MM_CHROMATIC MM_VIONA_CONCERTO_MIXER;
MACRO_MM_CHROMATIC MM_VIONA_QVINPCI_MIXER;
MACRO_MM_CHROMATIC MM_VIONA_QVINPCI_WAVEIN;
MACRO_MM_MICROSOFT MM_VIRTUALMUSIC;
MACRO_MM_MICROSOFT MM_VITEC;
MACRO_MM_MICROSOFT MM_VITEC_VMAKER;
MACRO_MM_MICROSOFT MM_VITEC_VMPRO;
MACRO_MM_MICROSOFT MM_VIVO;
MACRO_MM_CHROMATIC MM_VIVO_AUDIO_CODEC;
MACRO_MM_CHROMATIC MM_VKC_MPU401_MIDIIN;
MACRO_MM_CHROMATIC MM_VKC_MPU401_MIDIOUT;
MACRO_MM_CHROMATIC MM_VKC_SERIAL_MIDIIN;
MACRO_MM_CHROMATIC MM_VKC_SERIAL_MIDIOUT;
MACRO_MM_MICROSOFT MM_VOCALTEC;
MACRO_MM_MICROSOFT MM_VOCALTEC_WAVEIN;
MACRO_MM_MICROSOFT MM_VOCALTEC_WAVEOUT;
MACRO_MM_MICROSOFT MM_VOICEINFO;
MACRO_MM_MICROSOFT MM_VOICEMIXER;
MACRO_MM_MICROSOFT MM_VOXWARE;
MACRO_MM_VOXWARE MM_VOXWARE_CODEC;
MACRO_MM_MICROSOFT MM_VOYETRA;
MACRO_MM_MICROSOFT MM_VQST;
MACRO_MM_CHROMATIC MM_VQST_VQC1;
MACRO_MM_CHROMATIC MM_VQST_VQC2;
MACRO_MM_MICROSOFT MM_VTG;
MACRO_MM_MICROSOFT MM_WANGLABS;
MACRO_MM_MICROSOFT MM_WANGLABS_WAVEIN1;
MACRO_MM_MICROSOFT MM_WANGLABS_WAVEOUT1;
MACRO_MM_MICROSOFT MM_WAVE_MAPPER;
MACRO_MM_MICROSOFT MM_WEITEK;
MACRO_MM_MICROSOFT MM_WILDCAT;
MACRO_MM_VOXWARE MM_WILDCAT_AUTOSCOREMIDIIN;
MACRO_MM_MICROSOFT MM_WILLOPOND_SNDCOMM_WAVEIN;
MACRO_MM_MICROSOFT MM_WILLOWPOND;
MACRO_MM_MICROSOFT MM_WILLOWPOND_FMSYNTH_STEREO;
MACRO_MM_MICROSOFT MM_WILLOWPOND_GENERIC_AUX;
MACRO_MM_MICROSOFT MM_WILLOWPOND_GENERIC_MIXER;
MACRO_MM_MICROSOFT MM_WILLOWPOND_GENERIC_WAVEIN;
MACRO_MM_MICROSOFT MM_WILLOWPOND_GENERIC_WAVEOUT;
MACRO_MM_MICROSOFT MM_WILLOWPOND_MPU401;
MACRO_MM_MICROSOFT MM_WILLOWPOND_PH_AUX;
MACRO_MM_MICROSOFT MM_WILLOWPOND_PH_MIXER;
MACRO_MM_MICROSOFT MM_WILLOWPOND_PH_WAVEIN;
MACRO_MM_MICROSOFT MM_WILLOWPOND_PH_WAVEOUT;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDCOMM_AUX;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDCOMM_MIXER;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDCOMM_WAVEOUT;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDPORT_AUX;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDPORT_MIXER;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDPORT_WAVEIN;
MACRO_MM_MICROSOFT MM_WILLOWPOND_SNDPORT_WAVEOUT;
MACRO_MM_MICROSOFT MM_WINBOND;
MACRO_MM_MICROSOFT MM_WINNOV;
MACRO_MM_MICROSOFT MM_WINNOV_CAVIAR_CHAMPAGNE;
MACRO_MM_MICROSOFT MM_WINNOV_CAVIAR_VIDC;
MACRO_MM_MICROSOFT MM_WINNOV_CAVIAR_WAVEIN;
MACRO_MM_MICROSOFT MM_WINNOV_CAVIAR_WAVEOUT;
MACRO_MM_MICROSOFT MM_WINNOV_CAVIAR_YUV8;
MACRO_MM_MICROSOFT MM_WORKBIT;
MACRO_MM_MICROSOFT MM_WORKBIT_AUX;
MACRO_MM_MICROSOFT MM_WORKBIT_FMSYNTH;
MACRO_MM_MICROSOFT MM_WORKBIT_JOYSTICK;
MACRO_MM_MICROSOFT MM_WORKBIT_MIDIIN;
MACRO_MM_MICROSOFT MM_WORKBIT_MIDIOUT;
MACRO_MM_MICROSOFT MM_WORKBIT_MIXER;
MACRO_MM_MICROSOFT MM_WORKBIT_WAVEIN;
MACRO_MM_MICROSOFT MM_WORKBIT_WAVEOUT;
MACRO_MM_MICROSOFT MM_WSS_SB16_AUX_CD;
MACRO_MM_MICROSOFT MM_WSS_SB16_AUX_LINE;
MACRO_MM_MICROSOFT MM_WSS_SB16_MIDIIN;
MACRO_MM_MICROSOFT MM_WSS_SB16_MIDIOUT;
MACRO_MM_MICROSOFT MM_WSS_SB16_MIXER;
MACRO_MM_MICROSOFT MM_WSS_SB16_SYNTH;
MACRO_MM_MICROSOFT MM_WSS_SB16_WAVEIN;
MACRO_MM_MICROSOFT MM_WSS_SB16_WAVEOUT;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_AUX_CD;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_AUX_LINE;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_MIDIIN;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_MIDIOUT;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_MIXER;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_SYNTH;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_WAVEIN;
MACRO_MM_MICROSOFT MM_WSS_SBPRO_WAVEOUT;
MACRO_MM_MICROSOFT MM_XEBEC;
MACRO_MM_MICROSOFT MM_XIRLINK;
MACRO_MM_CHROMATIC MM_XIRLINK_VISIONLINK;
MACRO_MM_MICROSOFT MM_XYZ;
MACRO_MM_MICROSOFT MM_YAMAHA;
MACRO_MM_MICROSOFT MM_YAMAHA_ACXG_AUX;
MACRO_MM_MICROSOFT MM_YAMAHA_ACXG_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_ACXG_MIXER;
MACRO_MM_MICROSOFT MM_YAMAHA_ACXG_WAVEIN;
MACRO_MM_MICROSOFT MM_YAMAHA_ACXG_WAVEOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_GSS_AUX;
MACRO_MM_MICROSOFT MM_YAMAHA_GSS_MIDIIN;
MACRO_MM_MICROSOFT MM_YAMAHA_GSS_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_GSS_SYNTH;
MACRO_MM_MICROSOFT MM_YAMAHA_GSS_WAVEIN;
MACRO_MM_MICROSOFT MM_YAMAHA_GSS_WAVEOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_FMSYNTH;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_JOYSTICK;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_MIDIIN;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_MIXER;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_WAVEIN;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_WAVEOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_OPL3SA_YSYNTH;
MACRO_MM_MICROSOFT MM_YAMAHA_SERIAL_MIDIIN;
MACRO_MM_MICROSOFT MM_YAMAHA_SERIAL_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_SXG_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_SXG_MIXER;
MACRO_MM_MICROSOFT MM_YAMAHA_SXG_WAVEOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724LEG_FMSYNTH;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724LEG_MIDIIN;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724LEG_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724LEG_MIXER;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724_AUX;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724_MIDIOUT;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724_MIXER;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724_WAVEIN;
MACRO_MM_MICROSOFT MM_YAMAHA_YMF724_WAVEOUT;
MACRO_MM_MICROSOFT MM_YOUCOM;
MACRO_MM_MICROSOFT MM_ZEFIRO;
MACRO_MM_CHROMATIC MM_ZEFIRO_ZA2;
MACRO_MM_MICROSOFT MM_ZYXEL;
MACRO_MM_MICROSOFT MM_ZYXEL_ACM_ADPCM;
MACRO_KEY_SIGNATURE MODEL_ID_KEY_SIGNATURE;
MACRO_KEY_SIGNATURE MODEL_KEY_SIGNATURE;
MACRO_KEY_SIGNATURE MODULE_VENDOR_ID_KEY_SIGNATURE;
MACRO_MONITOR MONITOR_STATE_CREATED;
MACRO_MONITOR MONITOR_STATE_REMOVED;
MACRO_MONITOR MONITOR_STATE_UPDATED;
MACRO_MPEGLAYER3 MPEGLAYER3_FLAG_PADDING_ISO;
MACRO_MPEGLAYER3 MPEGLAYER3_FLAG_PADDING_OFF;
MACRO_MPEGLAYER3 MPEGLAYER3_FLAG_PADDING_ON;
MACRO_MPEGLAYER3 MPEGLAYER3_ID_CONSTANTFRAMESIZE;
MACRO_MPEGLAYER3 MPEGLAYER3_ID_MPEG;
MACRO_MPEGLAYER3 MPEGLAYER3_ID_UNKNOWN;
MACRO_MPEGLAYER3 MPEGLAYER3_WFX_EXTRA_BYTES;
_INTERFACE_TYPE MPIBus;
_BUS_DATA_TYPE MPIConfiguration;
_INTERFACE_TYPE MPSABus;
_BUS_DATA_TYPE MPSAConfiguration;
MACRO_MP MP_UNINITIALIZED_VALUE;
MACRO_MSAcpiInfo MSAcpiInfo_BootArchitecture_ID;
MACRO_MSAcpiInfo MSAcpiInfo_Capabilities_ID;
MACRO_MSAcpiInfo MSAcpiInfo_PreferredProfile_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_ActiveTripPointCount_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_ActiveTripPoint_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_CriticalTripPoint_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_CurrentTemperature_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_PassiveTripPoint_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_Reserved_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_SamplingPeriod_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_ThermalConstant1_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_ThermalConstant2_ID;
MACRO_ClassInformation_DeviceId_ID MSAcpi_ThermalZoneTemperature_ThermalStamp_ID;
MACRO_ClassInformation_DeviceId_ID MSDiskDriver_Performance_DeviceName_ID;
MACRO_ClassInformation_DeviceId_ID MSDiskDriver_Performance_PerfData_ID;
MACRO_MSIde MSIde_PortDeviceInfo_Bus_ID;
MACRO_MSIde MSIde_PortDeviceInfo_Lun_ID;
MACRO_MSIde MSIde_PortDeviceInfo_Target_ID;
MACRO_ClassInformation_DeviceId_ID MSKeyboard_ClassInformation_DeviceId_ID;
MACRO_ID MSMCAEvent_CPUError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_BusSev_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_BusType_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_CacheMesi_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_CacheOp_ID;
MACRO_ID MSMCAEvent_CPUError_Cpu_ID;
MACRO_ID MSMCAEvent_CPUError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_Level_ID;
MACRO_ID MSMCAEvent_CPUError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_MSArrayId_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_MSIndex_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_MSOp_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_MSSid_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_MajorErrorType_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_RawRecord_ID;
MACRO_ID MSMCAEvent_CPUError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_RegFileId_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_RegFileOp_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_CPUError_TLBOp_ID;
MACRO_ID MSMCAEvent_CPUError_Type_ID;
MACRO_ID MSMCAEvent_Header_AdditionalErrors_ID;
MACRO_ID MSMCAEvent_Header_Cpu_ID;
MACRO_ID MSMCAEvent_Header_ErrorSeverity_ID;
MACRO_ID MSMCAEvent_Header_LogToEventlog_ID;
MACRO_ID MSMCAEvent_Header_RecordId_ID;
MACRO_ID MSMCAEvent_Header_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_InvalidError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_BUS_SPECIFIC_DATA_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_BANK_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_BIT_POSITION_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_CARD_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_COLUMN_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_ERROR_STATUS_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_MODULE_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_NODE_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_PHYSICAL_ADDR_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_PHYSICAL_MASK_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_MEM_ROW_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_REQUESTOR_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_RESPONDER_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_TARGET_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_VALIDATION_BITS_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryError_xMEM_DEVICE_ID;
MACRO_MSMCAEvent MSMCAEvent_MemoryPageRemoved_PhysicalAddress_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_ADDRESS_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_CMD_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_DATA_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_ERROR_STATUS_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_ERROR_TYPE_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_ID_BusNumber_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_ID_SegmentNumber_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_REQUESTOR_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_RESPONDER_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_PCI_BUS_TARGET_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIBusError_VALIDATION_BITS_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_ERROR_STATUS_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_BusNumber_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeBaseClass_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeInterface_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeSubClass_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_DeviceId_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_DeviceNumber_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_FunctionNumber_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_SegmentNumber_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_PCI_COMP_INFO_VendorId_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_PCIComponentError_VALIDATION_BITS_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_OEM_COMPONENT_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_PLATFORM_BUS_SPECIFIC_DATA_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_PLATFORM_ERROR_STATUS_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_PLATFORM_REQUESTOR_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_PLATFORM_RESPONDER_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_PLATFORM_TARGET_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_PlatformSpecificError_VALIDATION_BITS_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_SMBIOS_EVENT_TYPE_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_SMBIOSError_VALIDATION_BITS_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_AdditionalErrors_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_Cpu_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_ErrorSeverity_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_LogToEventlog_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_RawRecord_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_RecordId_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_DATA1_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_DATA2_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_DATA3_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_EVENT_DIR_TYPE_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_EVM_REV_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_GENERATOR_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_RECORD_ID_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_RECORD_TYPE_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_SENSOR_NUM_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_SENSOR_TYPE_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_SEL_TIME_STAMP_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_Size_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_Type_ID;
MACRO_MSMCAEvent MSMCAEvent_SystemEventError_VALIDATION_BITS_ID;
MACRO_MSMCAInfo MSMCAInfo_Entry_Data_ID;
MACRO_MSMCAInfo MSMCAInfo_Entry_Length_ID;
MACRO_MSMCAInfo MSMCAInfo_RawCMCEvent_Count_ID;
MACRO_MSMCAInfo MSMCAInfo_RawCMCEvent_Records_ID;
MACRO_MSMCAInfo MSMCAInfo_RawCorrectedPlatformEvent_Count_ID;
MACRO_MSMCAInfo MSMCAInfo_RawCorrectedPlatformEvent_Records_ID;
MACRO_MSMCAInfo MSMCAInfo_RawMCAData_Count_ID;
MACRO_MSMCAInfo MSMCAInfo_RawMCAData_Records_ID;
MACRO_MSMCAInfo MSMCAInfo_RawMCAEvent_Count_ID;
MACRO_MSMCAInfo MSMCAInfo_RawMCAEvent_Records_ID;
MACRO_ClassInformation_DeviceId_ID MSMouse_ClassInformation_DeviceId_ID;
MACRO_MSNdis MSNdis_80211_AddWEP_KeyIndex_ID;
MACRO_MSNdis MSNdis_80211_AddWEP_KeyLength_ID;
MACRO_MSNdis MSNdis_80211_AddWEP_KeyMaterial_ID;
MACRO_MSNdis MSNdis_80211_AddWEP_Length_ID;
MACRO_MSNdis MSNdis_80211_AuthenticationMode_Ndis80211AuthenticationMode_ID;
MACRO_MSNdis MSNdis_80211_BSSIList_Ndis80211BSSIList_ID;
MACRO_MSNdis MSNdis_80211_BSSIList_NumberOfItems_ID;
MACRO_MSNdis MSNdis_80211_BaseServiceSetIdentifier_Ndis80211MacAddress_ID;
MACRO_MSNdis MSNdis_80211_BssIdListScan_UnusedParameter_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationFH_DwellTime_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationFH_FHLength_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationFH_HopPattern_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationFH_HopSet_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationInfo_ATIMWindow_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationInfo_BeaconPeriod_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationInfo_ConfigLength_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationInfo_DSConfig_ID;
MACRO_MSNdis MSNdis_80211_ConfigurationInfo_FHConfig_ID;
MACRO_MSNdis MSNdis_80211_Configuration_Ndis80211Config_ID;
MACRO_MSNdis MSNdis_80211_DataRates_Ndis80211DataRate_ID;
MACRO_MSNdis MSNdis_80211_DesiredDataRates_Ndis80211DesiredRate_ID;
MACRO_MSNdis MSNdis_80211_Disassociate_UnusedParameter_ID;
MACRO_MSNdis MSNdis_80211_FragmentationThreshold_Ndis80211FragmentationThreshold_ID;
MACRO_MSNdis MSNdis_80211_InfrastructureMode_Ndis80211InfrastructureMode_ID;
MACRO_MSNdis MSNdis_80211_NetworkInfrastructure_Ndis80211NetworkInfrastructure_ID;
MACRO_MSNdis MSNdis_80211_NetworkTypeInUse_Ndis80211NetworkTypeInUse_ID;
MACRO_MSNdis MSNdis_80211_NetworkType_Ndis80211NetworkType_ID;
MACRO_MSNdis MSNdis_80211_NetworkTypesSupported_Ndis80211NetworkTypes_ID;
MACRO_MSNdis MSNdis_80211_NetworkTypesSupported_NumberOfItems_ID;
MACRO_MSNdis MSNdis_80211_NumberOfAntennas_Ndis80211NumberOfAntennas_ID;
MACRO_MSNdis MSNdis_80211_PowerMode_Ndis80211PowerMode_ID;
MACRO_MSNdis MSNdis_80211_PrivacyFilter_Ndis80211PrivacyFilter_ID;
MACRO_MSNdis MSNdis_80211_RTSThreshold_Ndis80211RTSThreshold_ID;
MACRO_MSNdis MSNdis_80211_ReceiveAntennaSelected_Ndis80211ReceiveAntennaSelected_ID;
MACRO_MSNdis MSNdis_80211_ReceivedSignalStrengthEventTrigger_Ndis80211ReceivedSignalStrengthTrigger_ID;
MACRO_MSNdis MSNdis_80211_ReceivedSignalStrength_Ndis80211ReceivedSignalStrength_ID;
MACRO_MSNdis MSNdis_80211_ReloadDefaults_Ndis80211ReloadDefaults_ID;
MACRO_MSNdis MSNdis_80211_RemoveWEP_Ndis80211KeyIndex_ID;
MACRO_MSNdis MSNdis_80211_ServiceSetIdentifier_Ndis80211SsId_ID;
MACRO_MSNdis MSNdis_80211_Statistics_ACKFailureCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_FCSErrorCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_FailedCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_FrameDuplicateCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_MulticastReceivedFrameCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_MulticastTransmittedFrameCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_MultipleRetryCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_RTSFailureCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_RTSSuccessCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_ReceivedFragmentCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_RetryCount_ID;
MACRO_MSNdis MSNdis_80211_Statistics_StatisticsLength_ID;
MACRO_MSNdis MSNdis_80211_Statistics_TransmittedFragmentCount_ID;
MACRO_MSNdis MSNdis_80211_TransmitAntennaSelected_Ndis80211TransmitAntennaSelected_ID;
MACRO_MSNdis MSNdis_80211_TransmitPowerLevel_Ndis80211TransmitPowerLevel_ID;
MACRO_MSNdis MSNdis_80211_WEPStatus_Ndis80211WEPStatus_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211Configuration_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211InfrastructureMode_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211MacAddress_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211NetworkTypeInUse_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211Privacy_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211Rssi_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211SsIdLength_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211SsId_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211SupportedRate_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Ndis80211WLanBssIdLength_ID;
MACRO_MSNdis MSNdis_80211_WLanBssId_Reserved_ID;
MACRO_MSNdis MSNdis_AtmHardwareCurrentAddress_NdisAtmHardwareCurrentAddress_ID;
MACRO_MSNdis MSNdis_AtmMaxAal0PacketSize_NdisAtmMaxAal0PacketSize_ID;
MACRO_MSNdis MSNdis_AtmMaxAal1PacketSize_NdisAtmMaxAal1PacketSize_ID;
MACRO_MSNdis MSNdis_AtmMaxAal34PacketSize_NdisAtmMaxAal34PacketSize_ID;
MACRO_MSNdis MSNdis_AtmMaxAal5PacketSize_NdisAtmMaxAal5PacketSize_ID;
MACRO_MSNdis MSNdis_AtmMaxActiveVciBits_NdisAtmMaxActiveVciBits_ID;
MACRO_MSNdis MSNdis_AtmMaxActiveVcs_NdisAtmMaxActiveVcs_ID;
MACRO_MSNdis MSNdis_AtmMaxActiveVpiBits_NdisAtmMaxActiveVpiBits_ID;
MACRO_MSNdis MSNdis_AtmReceiveCellsDropped_NdisAtmReceiveCellsDropped_ID;
MACRO_MSNdis MSNdis_AtmReceiveCellsOk_NdisAtmReceiveCellsOk_ID;
MACRO_MSNdis MSNdis_AtmSupportedAalTypes_NdisAtmSupportedAalTypes_ID;
MACRO_MSNdis MSNdis_AtmSupportedServiceCategory_NdisAtmSupportedServiceCategory_ID;
MACRO_MSNdis MSNdis_AtmSupportedVcRates_MaxCellRate_ID;
MACRO_MSNdis MSNdis_AtmSupportedVcRates_MinCellRate_ID;
MACRO_MSNdis MSNdis_AtmTransmitCellsOk_NdisAtmTransmitCellsOk_ID;
MACRO_MSNdis MSNdis_CoDriverVersion_NdisCoDriverVersion_ID;
MACRO_MSNdis MSNdis_CoHardwareStatus_NdisCoHardwareStatus_ID;
MACRO_MSNdis MSNdis_CoLinkSpeed_NdisCoLinkSpeed_ID;
MACRO_MSNdis MSNdis_CoMacOptions_NdisCoMacOptions_ID;
MACRO_MSNdis MSNdis_CoMediaConnectStatus_NdisCoMediaConnectStatus_ID;
MACRO_MSNdis MSNdis_CoMediaInUse_NdisCoMediaInUse_ID;
MACRO_MSNdis MSNdis_CoMediaInUse_NumberElements_ID;
MACRO_MSNdis MSNdis_CoMediaSupported_NdisCoMediaSupported_ID;
MACRO_MSNdis MSNdis_CoMediaSupported_NumberElements_ID;
MACRO_MSNdis MSNdis_CoMinimumLinkSpeed_NdisCoMinimumLinkSpeed_ID;
MACRO_MSNdis MSNdis_CoReceivePduErrors_NdisCoReceivePduErrors_ID;
MACRO_MSNdis MSNdis_CoReceivePdusNoBuffer_NdisCoReceivePdusNoBuffer_ID;
MACRO_MSNdis MSNdis_CoReceivePdusOk_NdisCoReceivePdusOk_ID;
MACRO_MSNdis MSNdis_CoTransmitPduErrors_NdisCoTransmitPduErrors_ID;
MACRO_MSNdis MSNdis_CoTransmitPdusOk_NdisCoTransmitPdusOk_ID;
MACRO_MSNdis MSNdis_CoVendorDescription_NdisCoVendorDescription_ID;
MACRO_MSNdis MSNdis_CoVendorDriverVersion_NdisCoVendorDriverVersion_ID;
MACRO_MSNdis MSNdis_CoVendorId_NdisCoVendorID_ID;
MACRO_MSNdis MSNdis_CurrentLookahead_NdisCurrentLookahead_ID;
MACRO_MSNdis MSNdis_CurrentPacketFilter_NdisCurrentPacketFilter_ID;
MACRO_MSNdis MSNdis_DeviceWakeOnMagicPacketOnly_EnableWakeOnMagicPacketOnly_ID;
MACRO_MSNdis MSNdis_DriverVersion_NdisDriverVersion_ID;
MACRO_MSNdis MSNdis_EnumerateAdapter_DeviceName_ID;
MACRO_MSNdis MSNdis_EthernetCurrentAddress_NdisCurrentAddress_ID;
MACRO_MSNdis MSNdis_EthernetMacOptions_NdisEthernetMacOptions_ID;
MACRO_MSNdis MSNdis_EthernetMaximumMulticastListSize_NdisEthernetMaximumMulticastListSize_ID;
MACRO_MSNdis MSNdis_EthernetMoreTransmitCollisions_NdisEthernetMoreTransmitCollisions_ID;
MACRO_MSNdis MSNdis_EthernetMulticastList_NdisMulticastList_ID;
MACRO_MSNdis MSNdis_EthernetMulticastList_NumberElements_ID;
MACRO_MSNdis MSNdis_EthernetOneTransmitCollision_NdisEthernetOneTransmitCollision_ID;
MACRO_MSNdis MSNdis_EthernetPermanentAddress_NdisPermanentAddress_ID;
MACRO_MSNdis MSNdis_EthernetReceiveErrorAlignment_NdisEthernetReceiveErrorAlignment_ID;
MACRO_MSNdis MSNdis_FddiAttachmentType_NdisFddiAttachmentType_ID;
MACRO_MSNdis MSNdis_FddiDownstreamNodeLong_NdisFddiDownstreamNodeLong_ID;
MACRO_MSNdis MSNdis_FddiFrameErrors_NdisFddiFrameErrors_ID;
MACRO_MSNdis MSNdis_FddiFramesLost_NdisFddiFramesLost_ID;
MACRO_MSNdis MSNdis_FddiLConnectionState_NdisFddiLConnectionState_ID;
MACRO_MSNdis MSNdis_FddiLctFailures_NdisFddiLctFailures_ID;
MACRO_MSNdis MSNdis_FddiLemRejects_NdisFddiLemRejects_ID;
MACRO_MSNdis MSNdis_FddiLongCurrentAddress_NdisCurrentAddress_ID;
MACRO_MSNdis MSNdis_FddiLongMaximumListSize_NdisFddiLongMaximumListSize_ID;
MACRO_MSNdis MSNdis_FddiLongMulticastList_NdisMulticastList_ID;
MACRO_MSNdis MSNdis_FddiLongMulticastList_NumberElements_ID;
MACRO_MSNdis MSNdis_FddiLongPermanentAddress_NdisPermanentAddress_ID;
MACRO_MSNdis MSNdis_FddiRingManagmentState_NdisFddiRingManagmentState_ID;
MACRO_MSNdis MSNdis_FddiShortCurrentAddress_NdisCurrentAddress_ID;
MACRO_MSNdis MSNdis_FddiShortMaximumListSize_NdisFddiShortMaximumListSize_ID;
MACRO_MSNdis MSNdis_FddiShortMulticastList_NdisMulticastList_ID;
MACRO_MSNdis MSNdis_FddiShortMulticastList_NumberElements_ID;
MACRO_MSNdis MSNdis_FddiShortPermanentAddress_NdisPermanentAddress_ID;
MACRO_MSNdis MSNdis_FddiUpstreamNodeLong_NdisFddiUpstreamNodeLong_ID;
MACRO_MSNdis MSNdis_HardwareStatus_NdisHardwareStatus_ID;
MACRO_MSNdis MSNdis_LinkSpeed_NdisLinkSpeed_ID;
MACRO_MSNdis MSNdis_MacOptions_NdisMacOptions_ID;
MACRO_MSNdis MSNdis_MaximumFrameSize_NdisMaximumFrameSize_ID;
MACRO_MSNdis MSNdis_MaximumLookahead_NdisMaximumLookahead_ID;
MACRO_MSNdis MSNdis_MaximumSendPackets_NdisMaximumSendPackets_ID;
MACRO_MSNdis MSNdis_MaximumTotalSize_NdisMaximumTotalSize_ID;
MACRO_MSNdis MSNdis_MediaConnectStatus_NdisMediaConnectStatus_ID;
MACRO_MSNdis MSNdis_MediaInUse_NdisMediaInUse_ID;
MACRO_MSNdis MSNdis_MediaInUse_NumberElements_ID;
MACRO_MSNdis MSNdis_MediaSupported_NdisMediaSupported_ID;
MACRO_MSNdis MSNdis_MediaSupported_NumberElements_ID;
MACRO_MSNdis MSNdis_NetworkAddress_Address_ID;
MACRO_MSNdis MSNdis_NetworkLinkSpeed_Inbound_ID;
MACRO_MSNdis MSNdis_NetworkLinkSpeed_Outbound_ID;
MACRO_MSNdis MSNdis_NetworkShortAddress_Address_ID;
MACRO_MSNdis MSNdis_NotifyAdapterArrival_DeviceName_ID;
MACRO_MSNdis MSNdis_NotifyAdapterRemoval_DeviceName_ID;
MACRO_MSNdis MSNdis_PhysicalMediumType_NdisPhysicalMediumType_ID;
MACRO_MSNdis MSNdis_ReceiveBlockSize_NdisReceiveBlockSize_ID;
MACRO_MSNdis MSNdis_ReceiveBufferSpace_NdisReceiveBufferSpace_ID;
MACRO_MSNdis MSNdis_ReceiveError_NdisReceiveError_ID;
MACRO_MSNdis MSNdis_ReceiveNoBuffer_NdisReceiveNoBuffer_ID;
MACRO_MSNdis MSNdis_ReceivesOk_NdisReceivesOk_ID;
MACRO_MSNdis MSNdis_StatusDevicePowerOff_Device_ID;
MACRO_MSNdis MSNdis_StatusDevicePowerOn_Device_ID;
MACRO_MSNdis MSNdis_StatusLinkSpeedChange_NdisStatusLinkSpeedChange_ID;
MACRO_MSNdis MSNdis_StatusMediaSpecificIndication_NdisStatusMediaSpecificIndication_ID;
MACRO_MSNdis MSNdis_StatusMediaSpecificIndication_NumberElements_ID;
MACRO_MSNdis MSNdis_StatusProtocolBind_Transport_ID;
MACRO_MSNdis MSNdis_StatusProtocolUnbind_Transport_ID;
MACRO_MSNdis MSNdis_TokenRingCurrentAddress_NdisCurrentAddress_ID;
MACRO_MSNdis MSNdis_TokenRingCurrentFunctional_NdisTokenRingCurrentFunctional_ID;
MACRO_MSNdis MSNdis_TokenRingCurrentGroup_NdisTokenRingCurrentGroup_ID;
MACRO_MSNdis MSNdis_TokenRingCurrentRingState_NdisTokenRingCurrentRingState_ID;
MACRO_MSNdis MSNdis_TokenRingCurrentRingStatus_NdisTokenRingCurrentRingStatus_ID;
MACRO_MSNdis MSNdis_TokenRingLastOpenStatus_NdisTokenRingLastOpenStatus_ID;
MACRO_MSNdis MSNdis_TokenRingLineErrors_NdisTokenRingLineErrors_ID;
MACRO_MSNdis MSNdis_TokenRingLostFrames_NdisTokenRingLostFrames_ID;
MACRO_MSNdis MSNdis_TokenRingPermanentAddress_NdisPermanentAddress_ID;
MACRO_MSNdis MSNdis_TransmitBlockSize_NdisTransmitBlockSize_ID;
MACRO_MSNdis MSNdis_TransmitBufferSpace_NdisTransmitBufferSpace_ID;
MACRO_MSNdis MSNdis_TransmitsError_NdisTransmitsError_ID;
MACRO_MSNdis MSNdis_TransmitsOk_NdisTransmitsOk_ID;
MACRO_MSNdis MSNdis_VendorDescription_NdisVendorDescription_ID;
MACRO_MSNdis MSNdis_VendorDriverVersion_NdisVendorDriverVersion_ID;
MACRO_MSNdis MSNdis_VendorID_NdisVendorID_ID;
MACRO_MSNdis MSNdis_VlanIdentifier_NdisVlanId_ID;
MACRO_MSPower MSPower_DeviceEnable_Enable_ID;
MACRO_MSPower MSPower_DeviceWakeEnable_Enable_ID;
MACRO_MSSerial MSSerial_PortName_PortName_ID;
MACRO_MSSmBios MSSmBios_RawSMBiosTables_DmiRevision_ID;
MACRO_MSSmBios MSSmBios_RawSMBiosTables_SMBiosData_ID;
MACRO_MSSmBios MSSmBios_RawSMBiosTables_Size_ID;
MACRO_MSSmBios MSSmBios_RawSMBiosTables_SmbiosMajorVersion_ID;
MACRO_MSSmBios MSSmBios_RawSMBiosTables_SmbiosMinorVersion_ID;
MACRO_MSSmBios MSSmBios_RawSMBiosTables_Used20CallingMethod_ID;
MACRO_ID MSSmBios_Sysid1394List_Count_ID;
MACRO_ID MSSmBios_Sysid1394List_List_ID;
MACRO_ID MSSmBios_SysidUUIDList_Count_ID;
MACRO_ID MSSmBios_SysidUUIDList_List_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Arg1_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Arg2_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Arg3_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Arg4_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Control_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Count_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Flags_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Major_ID;
MACRO_DEVICE_UI MSVerifierIrpLogEntry_Minor_ID;
MACRO_DEVICE_UI MSVerifierIrpLogInformation_DeviceType_ID;
MACRO_DEVICE_UI MSVerifierIrpLogInformation_Entries_ID;
MACRO_DEVICE_UI MSVerifierIrpLogInformation_EntryCount_ID;
MACRO_MSWmi MSWmi_GuidRegistrationInfo_GuidCount_ID;
MACRO_MSWmi MSWmi_GuidRegistrationInfo_GuidList_ID;
MACRO_MSWmi MSWmi_GuidRegistrationInfo_Operation_ID;
MACRO_MSWmi MSWmi_Guid_Guid_ID;
MACRO_MSWmi MSWmi_MofData_BinaryMofData_ID;
MACRO_MSWmi MSWmi_MofData_Size_ID;
MACRO_MSWmi MSWmi_MofData_Unused1_ID;
MACRO_MSWmi MSWmi_MofData_Unused2_ID;
MACRO_MSWmi MSWmi_MofData_Unused4_ID;
MACRO_MSWmi MSWmi_PnPDeviceId_PnPDeviceId_ID;
MACRO_MSWmi MSWmi_PnPInstanceNames_Count_ID;
MACRO_MSWmi MSWmi_PnPInstanceNames_InstanceNameList_ID;
MACRO_DESCRIPTOR_INDEX MS_GENRE_DESCRIPTOR_INDEX;
MACRO_DESCRIPTOR_INDEX MS_POWER_DESCRIPTOR_INDEX;
MACRO_MULTIPLE MULTIPLE_IRP_COMPLETE_REQUESTS;
MACRO_MULTIPROCESSOR MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED;
MACRO_MUST MUST_SUCCEED_POOL_EMPTY;
MACRO_MUTEX_ALREADY MUTEX_ALREADY_OWNED;
MACRO_MUTEX MUTEX_LEVEL_NUMBER_VIOLATION;
_KEY_SET_INFORMATION_CLASS MaxKeySetInfoClass;
_KEY_VALUE_INFORMATION_CLASS MaxKeyValueInfoClass;
_POOL_TYPE MaxPoolType;
_SUITE_TYPE MaxSuiteType;
_BUS_DATA_TYPE MaximumBusDataType;
_DMA_SPEED MaximumDmaSpeed;
_DMA_WIDTH MaximumDmaWidth;
_INTERFACE_TYPE MaximumInterfaceType;
_MODE MaximumMode;
_KWAIT_REASON MaximumWaitReason;
_WORK_QUEUE_TYPE MaximumWorkQueue;
_KDPC_IMPORTANCE MediumImportance;
_INTERFACE_TYPE MicroChannel;
NTSTATUS __stdcall MmAddVerifierThunks(PVOID ThunkBuffer, ULONG ThunkBufferSize);
NTSTATUS __stdcall MmAdvanceMdl(PMDL Mdl, ULONG NumberOfBytes);
PVOID __stdcall MmAllocateMappingAddress(SIZE_T NumberOfBytes, ULONG PoolTag);
PMDL __stdcall MmAllocatePagesForMdl(PHYSICAL_ADDRESS LowAddress, PHYSICAL_ADDRESS HighAddress, PHYSICAL_ADDRESS SkipBytes, SIZE_T TotalBytes);
void __stdcall MmBuildMdlForNonPagedPool(PMDL MemoryDescriptorList);
_MEMORY_CACHING_TYPE MmCached;
_MEMORY_CACHING_TYPE MmCachingTypeDoNotUse1;
_MEMORY_CACHING_TYPE MmCachingTypeDoNotUse2;
PMDL __stdcall MmCreateMdl(PMDL MemoryDescriptorList, PVOID Base, SIZE_T Length);
_MEMORY_CACHING_TYPE_ORIG MmFrameBufferCached;
void __stdcall MmFreeMappingAddress(PVOID BaseAddress, ULONG PoolTag);
void __stdcall MmFreePagesFromMdl(PMDL MemoryDescriptorList);
PVOID __stdcall MmGetSystemRoutineAddress(PUNICODE_STRING SystemRoutineName);
_MEMORY_CACHING_TYPE MmHardwareCoherentCached;
LOGICAL __stdcall MmIsDriverVerifying(struct _DRIVER_OBJECT *DriverObject);
LOGICAL __stdcall MmIsIoSpaceActive(PHYSICAL_ADDRESS StartAddress, SIZE_T NumberOfBytes);
NTSTATUS __stdcall MmIsVerifierEnabled(PULONG VerifierFlags);
_MM_SYSTEM_SIZE MmLargeSystem;
PVOID __stdcall MmLockPagableDataSection(PVOID AddressWithinSection);
PVOID __stdcall MmMapIoSpace(PHYSICAL_ADDRESS PhysicalAddress, SIZE_T NumberOfBytes, MEMORY_CACHING_TYPE CacheType);
PVOID __stdcall MmMapLockedPages(PMDL MemoryDescriptorList, KPROCESSOR_MODE AccessMode);
PVOID __stdcall MmMapLockedPagesSpecifyCache(PMDL MemoryDescriptorList, KPROCESSOR_MODE AccessMode, MEMORY_CACHING_TYPE CacheType, PVOID BaseAddress, ULONG BugCheckOnFailure, MM_PAGE_PRIORITY Priority);
PVOID __stdcall MmMapLockedPagesWithReservedMapping(PVOID MappingAddress, ULONG PoolTag, PMDL MemoryDescriptorList, MEMORY_CACHING_TYPE CacheType);
_MEMORY_CACHING_TYPE MmMaximumCacheType;
_MM_SYSTEM_SIZE MmMediumSystem;
_MEMORY_CACHING_TYPE MmNonCached;
PVOID __stdcall MmPageEntireDriver(PVOID AddressWithinSection);
void __stdcall MmProbeAndLockPages(PMDL MemoryDescriptorList, KPROCESSOR_MODE AccessMode, LOCK_OPERATION Operation);
void __stdcall MmProbeAndLockProcessPages(PMDL MemoryDescriptorList, PEPROCESS Process, KPROCESSOR_MODE AccessMode, LOCK_OPERATION Operation);
NTSTATUS __stdcall MmProtectMdlSystemAddress(PMDL MemoryDescriptorList, ULONG NewProtect);
MM_SYSTEMSIZE MmQuerySystemSize(void);
void __stdcall MmResetDriverPaging(PVOID AddressWithinSection);
SIZE_T __stdcall MmSizeOfMdl(PVOID Base, SIZE_T Length);
_MM_SYSTEM_SIZE MmSmallSystem;
void __stdcall MmUnlockPagableImageSection(PVOID ImageSectionHandle);
void __stdcall MmUnlockPages(PMDL MemoryDescriptorList);
void __stdcall MmUnmapIoSpace(PVOID BaseAddress, SIZE_T NumberOfBytes);
void __stdcall MmUnmapLockedPages(PVOID BaseAddress, PMDL MemoryDescriptorList);
void __stdcall MmUnmapReservedMapping(PVOID BaseAddress, ULONG PoolTag, PMDL MemoryDescriptorList);
_MEMORY_CACHING_TYPE MmWriteCombined;
_USB_NOTIFICATION_TYPE ModernDeviceInLegacyHub;
MACRO_NABTS_BUFFER NABTS_BUFFER_PICTURENUMBER_SUPPORT;
MACRO_NABTS NABTS_BYTES_PER_LINE;
MACRO_NABTS NABTS_LINES_PER_BUNDLE;
MACRO_NABTS NABTS_PAYLOAD_PER_LINE;
MACRO_NANOSECONDS NANOSECONDS;
MACRO_NDIS NDIS_INTERNAL_ERROR;
_ALTERNATIVE_ARCHITECTURE_TYPE NEC98x86;
MACRO_NETWORK NETWORK_BOOT_DUPLICATE_ADDRESS;
MACRO_NETWORK NETWORK_BOOT_INITIALIZATION_FAILED;
MACRO_LOCATION NETWORK_CHANNELS_LOCATION;
MACRO_NLS NLS_VALID_LOCALE_MASK;
MACRO_FAILURE NMI_HARDWARE_FAILURE;
MACRO_KEY_SIGNATURE NODE_CAPABILITIES_KEY_SIGNATURE;
MACRO_LOCATION NODE_IDS_LOCATION;
MACRO_NOMINAL NOMINAL_CYCLE_TIME;
MACRO_LENGTH NORMAL_DISPATCH_LENGTH;
MACRO_NOTIFY NOTIFY_FLAGS_AFTER_LOCK;
MACRO_NOTIFY NOTIFY_FLAGS_AFTER_READ;
MACRO_NOTIFY NOTIFY_FLAGS_AFTER_WRITE;
MACRO_NOTIFY NOTIFY_FLAGS_NEVER;
MACRO_NO_BOOT NO_BOOT_DEVICE;
MACRO_NO_BUS NO_BUS_MANAGER;
MACRO_NO NO_EXCEPTION_HANDLING_SUPPORT;
MACRO_NO_MORE NO_MORE_IRP_STACK_LOCATIONS;
MACRO_NO_MORE_SYSTEM NO_MORE_SYSTEM_PTES;
MACRO_NO_PAGES NO_PAGES_AVAILABLE;
MACRO_NO_SPIN NO_SPIN_LOCK_AVAILABLE;
MACRO_NO_SUCH NO_SUCH_PARTITION;
MACRO_NO_USER NO_USER_MODE_CONTEXT;
MACRO_FILE_SYSTEM NPFS_FILE_SYSTEM;
MACRO_FILE_SYSTEM NTFS_FILE_SYSTEM;
MACRO_NULL_0 NULL;
MACRO_NULL64 NULL64;
_USB_CONNECTION_STATUS NoDeviceConnected;
_POOL_TYPE NonPagedPool;
_POOL_TYPE NonPagedPoolCacheAligned;
_POOL_TYPE NonPagedPoolCacheAlignedMustS;
_POOL_TYPE NonPagedPoolMustSucceed;
_CM_ERROR_CONTROL_TYPE NormalError;
_MM_PAGE_PRIORITY NormalPagePriority;
_EX_POOL_PRIORITY NormalPoolPriority;
_EX_POOL_PRIORITY NormalPoolPrioritySpecialPoolOverrun;
_EX_POOL_PRIORITY NormalPoolPrioritySpecialPoolUnderrun;
_EVENT_TYPE NotificationEvent;
_TIMER_TYPE NotificationTimer;
_NT_PRODUCT_TYPE NtProductLanManNt;
_NT_PRODUCT_TYPE NtProductServer;
_NT_PRODUCT_TYPE NtProductWinNt;
_INTERFACE_TYPE NuBus;
_BUS_DATA_TYPE NuBusConfiguration;
MACRO_OBJECT OBJECT1_INITIALIZATION_FAILED;
MACRO_OBJECT OBJECT_INITIALIZATION_FAILED;
MACRO_OBJECT_TYPE OBJECT_TYPE_ALL_ACCESS;
MACRO_OBJECT_TYPE OBJECT_TYPE_CREATE;
MACRO_OBJ_INHERIT OBJ_CASE_INSENSITIVE;
MACRO_OBJ_INHERIT OBJ_EXCLUSIVE;
MACRO_OBJ_INHERIT OBJ_FORCE_ACCESS_CHECK;
MACRO_OBJ OBJ_HANDLE_TAGBITS;
MACRO_OBJ_INHERIT OBJ_INHERIT;
MACRO_OBJ_INHERIT OBJ_KERNEL_HANDLE;
MACRO_OBJ_NAME OBJ_NAME_PATH_SEPARATOR;
MACRO_OBJ_INHERIT OBJ_OPENIF;
MACRO_OBJ_INHERIT OBJ_OPENLINK;
MACRO_OBJ_INHERIT OBJ_PERMANENT;
MACRO_OBJ_INHERIT OBJ_VALID_ATTRIBUTES;
MACRO_DFS OFS_FILE_SYSTEM;
_USB_CONTROLLER_FLAVOR OHCI_Generic;
_USB_CONTROLLER_FLAVOR OHCI_Hydra;
_USB_CONTROLLER_FLAVOR OHCI_NEC;
MACRO_DESCRIPTOR_INDEX OS_STRING_DESCRIPTOR_INDEX;
MACRO_SECURITY_INFORMATION OWNER_SECURITY_INFORMATION;
NTSTATUS __stdcall ObGetObjectSecurity(PVOID Object, PSECURITY_DESCRIPTOR *SecurityDescriptor, PBOOLEAN MemoryAllocated);
NTSTATUS __stdcall ObReferenceObjectByHandle(HANDLE Handle, ACCESS_MASK DesiredAccess, POBJECT_TYPE ObjectType, KPROCESSOR_MODE AccessMode, PVOID *Object, POBJECT_HANDLE_INFORMATION HandleInformation);
NTSTATUS __stdcall ObReferenceObjectByPointer(PVOID Object, ACCESS_MASK DesiredAccess, POBJECT_TYPE ObjectType, KPROCESSOR_MODE AccessMode);
void __stdcall ObReleaseObjectSecurity(PSECURITY_DESCRIPTOR SecurityDescriptor, BOOLEAN MemoryAllocated);
_USB_NOTIFICATION_TYPE OverCurrent;
MACRO_PAGE_NOACCESS PAGE_EXECUTE;
MACRO_PAGE_NOACCESS PAGE_EXECUTE_READ;
MACRO_PAGE_NOACCESS PAGE_EXECUTE_READWRITE;
MACRO_PAGE_NOACCESS PAGE_EXECUTE_WRITECOPY;
MACRO_PAGE_FAULT_IN PAGE_FAULT_BEYOND_END_OF_ALLOCATION;
MACRO_PAGE_FAULT_IN PAGE_FAULT_IN_FREED_SPECIAL_POOL;
MACRO_PAGE_FAULT PAGE_FAULT_IN_NONPAGED_AREA;
MACRO_PAGE PAGE_FAULT_WITH_INTERRUPTS_OFF;
MACRO_PAGE_NOACCESS PAGE_GUARD;
MACRO_PAGE_NOACCESS PAGE_NOACCESS;
MACRO_PAGE_NOACCESS PAGE_NOCACHE;
MACRO_PAGE_NOACCESS PAGE_READONLY;
MACRO_PAGE_NOACCESS PAGE_READWRITE;
MACRO_PAGE_SIZE PAGE_SHIFT;
MACRO_PAGE_SIZE PAGE_SIZE;
MACRO_PAGE_NOACCESS PAGE_WRITECOMBINE;
MACRO_PAGE_NOACCESS PAGE_WRITECOPY;
MACRO_PANIC PANIC_STACK_SWITCH;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_BoundedEcpReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_BoundedEcpWriteCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_ByteReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_ChannelNibbleReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_Flags1_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_Flags2_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_HwEcpReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_HwEcpWriteCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_HwEppReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_HwEppWriteCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_NibbleReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_SppWriteCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_SwEcpReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_SwEcpWriteCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_SwEppReadCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_SwEppWriteCount_ID;
MACRO_PARALLEL PARALLEL_WMI_LOG_INFO_spare_ID;
MACRO_PARPORT PARPORT_WMI_ALLOC_FREE_COUNTS_PortAllocates_ID;
MACRO_PARPORT PARPORT_WMI_ALLOC_FREE_COUNTS_PortFrees_ID;
MACRO_LEVEL PASSIVE_LEVEL;
MACRO_PCEVENT PCEVENT_ITEM_FLAG_BASICSUPPORT;
MACRO_PCEVENT PCEVENT_ITEM_FLAG_ENABLE;
MACRO_PCEVENT PCEVENT_ITEM_FLAG_ONESHOT;
MACRO_PCEVENT PCEVENT_VERB_ADD;
MACRO_PCEVENT PCEVENT_VERB_NONE;
MACRO_PCEVENT PCEVENT_VERB_REMOVE;
MACRO_PCEVENT PCEVENT_VERB_SUPPORT;
MACRO_PCFILTER PCFILTER_NODE;
_INTERFACE_TYPE PCIBus;
_BUS_DATA_TYPE PCIConfiguration;
MACRO_PCI_TYPE0 PCI_ADDRESS_IO_ADDRESS_MASK;
MACRO_PCI_TYPE0 PCI_ADDRESS_IO_SPACE;
MACRO_PCI_TYPE0 PCI_ADDRESS_MEMORY_ADDRESS_MASK;
MACRO_PCI_TYPE0 PCI_ADDRESS_MEMORY_PREFETCHABLE;
MACRO_PCI_TYPE0 PCI_ADDRESS_MEMORY_TYPE_MASK;
MACRO_PCI_TYPE0 PCI_ADDRESS_ROM_ADDRESS_MASK;
MACRO_PCI_CAPABILITY PCI_AGP_RATE_1X;
MACRO_PCI_CAPABILITY PCI_AGP_RATE_2X;
MACRO_PCI_CAPABILITY PCI_AGP_RATE_4X;
MACRO_PCI_TYPE0 PCI_BRIDGE_TYPE;
MACRO_PCI PCI_BUS_DRIVER_INTERNAL;
MACRO_PCI_CAPABILITY PCI_CAPABILITY_ID_AGP;
MACRO_PCI_CAPABILITY PCI_CAPABILITY_ID_AGP_TARGET;
MACRO_PCI_CAPABILITY PCI_CAPABILITY_ID_MSI;
MACRO_PCI_CAPABILITY PCI_CAPABILITY_ID_POWER_MANAGEMENT;
MACRO_PCI_TYPE0 PCI_CARDBUS_BRIDGE_TYPE;
MACRO_PCI_TYPE0 PCI_CLASS_BASE_SYSTEM_DEV;
MACRO_PCI_TYPE0 PCI_CLASS_BRIDGE_DEV;
MACRO_PCI_TYPE0 PCI_CLASS_DATA_ACQ_SIGNAL_PROC;
MACRO_PCI_TYPE0 PCI_CLASS_DISPLAY_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_DOCKING_STATION;
MACRO_PCI_TYPE0 PCI_CLASS_ENCRYPTION_DECRYPTION;
MACRO_PCI_TYPE0 PCI_CLASS_INPUT_DEV;
MACRO_PCI_TYPE0 PCI_CLASS_INTELLIGENT_IO_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_MASS_STORAGE_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_MEMORY_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_MULTIMEDIA_DEV;
MACRO_PCI_TYPE0 PCI_CLASS_NETWORK_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_NOT_DEFINED;
MACRO_PCI_TYPE0 PCI_CLASS_PRE_20;
MACRO_PCI_TYPE0 PCI_CLASS_PROCESSOR;
MACRO_PCI_TYPE0 PCI_CLASS_SATELLITE_COMMS_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_SERIAL_BUS_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_SIMPLE_COMMS_CTLR;
MACRO_PCI_TYPE0 PCI_CLASS_WIRELESS_CTLR;
MACRO_PCI_CONFIG PCI_CONFIG_SPACE_ACCESS_FAILURE;
MACRO_PCI_TYPE0 PCI_DEVICE_PRESENT_INTERFACE_VERSION;
MACRO_PCI_TYPE0 PCI_DEVICE_TYPE;
MACRO_PCI_TYPE0 PCI_ENABLE_BUS_MASTER;
MACRO_PCI_TYPE0 PCI_ENABLE_FAST_BACK_TO_BACK;
MACRO_PCI_TYPE0 PCI_ENABLE_IO_SPACE;
MACRO_PCI_TYPE0 PCI_ENABLE_MEMORY_SPACE;
MACRO_PCI_TYPE0 PCI_ENABLE_PARITY;
MACRO_PCI_TYPE0 PCI_ENABLE_SERR;
MACRO_PCI_TYPE0 PCI_ENABLE_SPECIAL_CYCLES;
MACRO_PCI_TYPE0 PCI_ENABLE_VGA_COMPATIBLE_PALETTE;
MACRO_PCI_TYPE0 PCI_ENABLE_WAIT_CYCLE;
MACRO_PCI_TYPE0 PCI_ENABLE_WRITE_AND_INVALIDATE;
MACRO_PCI_TYPE0 PCI_INVALID_VENDORID;
MACRO_PCI_TYPE0 PCI_MAX_BRIDGE_NUMBER;
MACRO_PCI_TYPE0 PCI_MAX_DEVICES;
MACRO_PCI_TYPE0 PCI_MAX_FUNCTION;
MACRO_PCI_TYPE0 PCI_MULTIFUNCTION;
MACRO_PCI_TYPE0 PCI_ROMADDRESS_ENABLED;
MACRO_PCI_TYPE0 PCI_STATUS_66MHZ_CAPABLE;
MACRO_PCI_TYPE0 PCI_STATUS_CAPABILITIES_LIST;
MACRO_PCI_TYPE0 PCI_STATUS_DATA_PARITY_DETECTED;
MACRO_PCI_TYPE0 PCI_STATUS_DETECTED_PARITY_ERROR;
MACRO_PCI_TYPE0 PCI_STATUS_DEVSEL;
MACRO_PCI_TYPE0 PCI_STATUS_FAST_BACK_TO_BACK;
MACRO_PCI_TYPE0 PCI_STATUS_RECEIVED_MASTER_ABORT;
MACRO_PCI_TYPE0 PCI_STATUS_RECEIVED_TARGET_ABORT;
MACRO_PCI_TYPE0 PCI_STATUS_SIGNALED_SYSTEM_ERROR;
MACRO_PCI_TYPE0 PCI_STATUS_SIGNALED_TARGET_ABORT;
MACRO_PCI_TYPE0 PCI_STATUS_UDF_SUPPORTED;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_CARDBUS;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_EISA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_HOST;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_ISA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_MCA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_NUBUS;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_PCI_TO_PCI;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_PCMCIA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_BR_RACEWAY;
MACRO_PCI_TYPE0 PCI_SUBCLASS_COM_MODEM;
MACRO_PCI_TYPE0 PCI_SUBCLASS_COM_MULTIPORT;
MACRO_PCI_TYPE0 PCI_SUBCLASS_COM_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_COM_PARALLEL;
MACRO_PCI_TYPE0 PCI_SUBCLASS_COM_SERIAL;
MACRO_PCI_TYPE0 PCI_SUBCLASS_CRYPTO_ENTERTAINMENT;
MACRO_PCI_TYPE0 PCI_SUBCLASS_CRYPTO_NET_COMP;
MACRO_PCI_TYPE0 PCI_SUBCLASS_CRYPTO_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_DASP_DPIO;
MACRO_PCI_TYPE0 PCI_SUBCLASS_DASP_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_DOC_GENERIC;
MACRO_PCI_TYPE0 PCI_SUBCLASS_DOC_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INP_DIGITIZER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INP_GAMEPORT;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INP_KEYBOARD;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INP_MOUSE;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INP_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INP_SCANNER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_INTIO_I2O;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MEM_FLASH;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MEM_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MEM_RAM;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MM_AUDIO_DEV;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MM_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MM_TELEPHONY_DEV;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MM_VIDEO_DEV;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MSC_FLOPPY_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MSC_IDE_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MSC_IPI_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MSC_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MSC_RAID_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_MSC_SCSI_BUS_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_NET_ATM_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_NET_ETHERNET_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_NET_FDDI_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_NET_ISDN_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_NET_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_NET_TOKEN_RING_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PRE_20_NON_VGA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PRE_20_VGA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PROC_386;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PROC_486;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PROC_ALPHA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PROC_COPROCESSOR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PROC_PENTIUM;
MACRO_PCI_TYPE0 PCI_SUBCLASS_PROC_POWERPC;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SAT_AUDIO;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SAT_DATA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SAT_TV;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SAT_VOICE;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SB_ACCESS;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SB_FIBRE_CHANNEL;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SB_IEEE1394;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SB_SMBUS;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SB_SSA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SB_USB;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SYS_DMA_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SYS_GEN_HOTPLUG_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SYS_INTERRUPT_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SYS_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SYS_REAL_TIME_CLOCK;
MACRO_PCI_TYPE0 PCI_SUBCLASS_SYS_SYSTEM_TIMER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_VID_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_VID_VGA_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_VID_XGA_CTLR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_WIRELESS_CON_IR;
MACRO_PCI_TYPE0 PCI_SUBCLASS_WIRELESS_IRDA;
MACRO_PCI_TYPE0 PCI_SUBCLASS_WIRELESS_OTHER;
MACRO_PCI_TYPE0 PCI_SUBCLASS_WIRELESS_RF;
MACRO_PCI_TYPE0 PCI_SUBLCASS_VID_3D_CTLR;
MACRO_PCI_TYPE0 PCI_TYPE0_ADDRESSES;
MACRO_PCI_TYPE0 PCI_TYPE1_ADDRESSES;
MACRO_PCI_TYPE0 PCI_TYPE2_ADDRESSES;
MACRO_PCI_TYPE0 PCI_TYPE_20BIT;
MACRO_PCI_TYPE0 PCI_TYPE_32BIT;
MACRO_PCI_TYPE0 PCI_TYPE_64BIT;
MACRO_PCI_TYPE0 PCI_USE_CLASS_SUBCLASS;
MACRO_PCI_TYPE0 PCI_USE_LOCAL_BUS;
MACRO_PCI_TYPE0 PCI_USE_LOCAL_DEVICE;
MACRO_PCI_TYPE0 PCI_USE_PROGIF;
MACRO_PCI_TYPE0 PCI_USE_REVISION;
MACRO_PCI_TYPE0 PCI_USE_SUBSYSTEM_IDS;
MACRO_PCI_TYPE0 PCI_USE_VENDEV_IDS;
MACRO_PCI_VERIFIER PCI_VERIFIER_DETECTED_VIOLATION;
MACRO_PCI_TYPE0 PCI_WHICHSPACE_CONFIG;
MACRO_PCI_TYPE0 PCI_WHICHSPACE_ROM;
_INTERFACE_TYPE PCMCIABus;
_BUS_DATA_TYPE PCMCIAConfiguration;
MACRO_PCMETHOD PCMETHOD_ITEM_FLAG_BASICSUPPORT;
MACRO_PCMETHOD PCMETHOD_ITEM_FLAG_MODIFY;
MACRO_PCMETHOD PCMETHOD_ITEM_FLAG_NONE;
MACRO_PCMETHOD PCMETHOD_ITEM_FLAG_READ;
MACRO_PCMETHOD PCMETHOD_ITEM_FLAG_SOURCE;
MACRO_PCMETHOD PCMETHOD_ITEM_FLAG_WRITE;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_BASICSUPPORT;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_DEFAULTVALUES;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_GET;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_SERIALIZE;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_SERIALIZERAW;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_SERIALIZESIZE;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_SET;
MACRO_PCPROPERTY PCPROPERTY_ITEM_FLAG_UNSERIALIZERAW;
MACRO_PFN_LIST PFN_LIST_CORRUPT;
MACRO_PFN PFN_REFERENCE_COUNT;
MACRO_PFN PFN_SHARE_COUNT;
MACRO_PF PF_3DNOW_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ALPHA_BYTE_INSTRUCTIONS;
MACRO_PF PF_COMPARE_EXCHANGE_DOUBLE;
MACRO_PF PF_FLOATING_POINT_EMULATED;
MACRO_PF PF_FLOATING_POINT_PRECISION_ERRATA;
MACRO_PF PF_MMX_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_PAE_ENABLED;
MACRO_PF PF_PPC_MOVEMEM_64BIT_OK;
MACRO_PF PF_RDTSC_INSTRUCTION_AVAILABLE;
MACRO_PF PF_XMMI64_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_XMMI_INSTRUCTIONS_AVAILABLE;
MACRO_PHASE0 PHASE0_EXCEPTION;
MACRO_INITIALIZATION_FAILED PHASE0_INITIALIZATION_FAILED;
MACRO_INITIALIZATION_FAILED PHASE1_INITIALIZATION_FAILED;
MACRO_PHY PHY_PACKET_ID_CONFIGURATION;
MACRO_PHY PHY_PACKET_ID_LINK_ON;
MACRO_PHY PHY_PACKET_ID_SELF_ID;
MACRO_PINBALL PINBALL_FILE_SYSTEM;
MACRO_PLUGPLAY PLUGPLAY_REGKEY_CURRENT_HWPROFILE;
MACRO_PLUGPLAY PLUGPLAY_REGKEY_DEVICE;
MACRO_PLUGPLAY PLUGPLAY_REGKEY_DRIVER;
_INTERFACE_TYPE PNPBus;
_INTERFACE_TYPE PNPISABus;
_BUS_DATA_TYPE PNPISAConfiguration;
MACRO_PNPNOTIFY PNPNOTIFY_DEVICE_INTERFACE_INCLUDE_EXISTING_INTERFACES;
MACRO_PNP_DETECTED PNP_DETECTED_FATAL_ERROR;
MACRO_PNP_DEVICE PNP_DEVICE_DISABLED;
MACRO_PNP_DEVICE PNP_DEVICE_DONT_DISPLAY_IN_UI;
MACRO_PNP_DEVICE PNP_DEVICE_FAILED;
MACRO_PNP_DEVICE PNP_DEVICE_NOT_DISABLEABLE;
MACRO_PNP_DEVICE PNP_DEVICE_REMOVED;
MACRO_PNP_DEVICE PNP_DEVICE_RESOURCE_REQUIREMENTS_CHANGED;
MACRO_PNP PNP_INTERNAL_ERROR;
MACRO_POINTER POINTER_PORT_WMI_ABSOLUTE_POINTER;
MACRO_POINTER POINTER_PORT_WMI_OTHER;
MACRO_POINTER POINTER_PORT_WMI_PEN;
MACRO_POINTER POINTER_PORT_WMI_STD_DATA_Buttons_ID;
MACRO_POINTER POINTER_PORT_WMI_STD_DATA_ConnectorType_ID;
MACRO_POINTER POINTER_PORT_WMI_STD_DATA_DataQueueSize_ID;
MACRO_POINTER POINTER_PORT_WMI_STD_DATA_ErrorCount_ID;
MACRO_POINTER POINTER_PORT_WMI_STD_DATA_HardwareType_ID;
MACRO_POINTER POINTER_PORT_WMI_STD_I8042;
MACRO_POINTER POINTER_PORT_WMI_STD_MOUSE;
MACRO_POINTER POINTER_PORT_WMI_STD_POINTER;
MACRO_POINTER POINTER_PORT_WMI_STD_SERIAL;
MACRO_POINTER POINTER_PORT_WMI_STD_USB;
MACRO_POINTER POINTER_PORT_WMI_TABLET;
MACRO_POINTER POINTER_PORT_WMI_TOUCH_SCRENE;
MACRO_POINTER POINTER_PORT_WMI_TRACK_BALL;
MACRO_POOL_COLD POOL_COLD_ALLOCATION;
MACRO_POOL POOL_CORRUPTION_IN_FILE_AREA;
MACRO_POOL_TAGGING POOL_TAGGING;
MACRO_DRIVER_INTERNAL PORT_DRIVER_INTERNAL;
MACRO_TAG PORT_EXTENSION_TAG;
MACRO_PORT PORT_MAXIMUM_MESSAGE_LENGTH;
MACRO_PORT_SUPPORTS PORT_SUPPORTS_CSRS;
MACRO_PORT_SUPPORTS PORT_SUPPORTS_LARGE_ASYNC;
MACRO_PORT_SUPPORTS PORT_SUPPORTS_NATIVE_ENDIAN;
MACRO_PORT_SUPPORTS PORT_SUPPORTS_NOTHING;
MACRO_PORT_SUPPORTS PORT_SUPPORTS_WMI;
MACRO_POWER_CLASS POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_2W;
MACRO_POWER_CLASS POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_5W;
MACRO_POWER_CLASS POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_9W;
MACRO_POWER_CLASS POWER_CLASS_MAYBE_POWERED_UPTO_1W;
MACRO_POWER_CLASS POWER_CLASS_NOT_NEED_NOT_REPEAT;
MACRO_POWER_CLASS POWER_CLASS_SELF_POWER_PROVIDE_15W;
MACRO_POWER_CLASS POWER_CLASS_SELF_POWER_PROVIDE_30W;
MACRO_POWER_CLASS POWER_CLASS_SELF_POWER_PROVIDE_45W;
MACRO_POWER POWER_FAILURE_SIMULATE;
MACRO_LOCATION POWER_FAIL_IMMINENT_LOCATION;
MACRO_LEVEL POWER_LEVEL;
MACRO_LOCATION POWER_SOURCE_LOCATION;
MACRO_POWER_SYSTEM POWER_SYSTEM_MAXIMUM;
MACRO_PO PO_CB_AC_STATUS;
MACRO_PO PO_CB_BUTTON_COLLISION;
MACRO_PO PO_CB_LID_SWITCH_STATE;
MACRO_PO PO_CB_PROCESSOR_POWER_POLICY;
MACRO_PO PO_CB_SYSTEM_POWER_POLICY;
MACRO_PO PO_CB_SYSTEM_STATE_LOCK;
MACRO_PP0 PP0_INITIALIZATION_FAILED;
MACRO_PP0 PP1_INITIALIZATION_FAILED;
MACRO_PRAGMA PRAGMA_DEPRECATED_DDK;
MACRO_PRIVILEGE PRIVILEGE_SET_ALL_NECESSARY;
MACRO_OBJECT PROCESS1_INITIALIZATION_FAILED;
MACRO_PROCESSOR PROCESSOR_FEATURE_MAX;
MACRO_PROCESS_DUP PROCESS_ALL_ACCESS;
MACRO_PROCESS_DUP PROCESS_DUP_HANDLE;
MACRO_PROCESS PROCESS_HAS_LOCKED_PAGES;
MACRO_OBJECT PROCESS_INITIALIZATION_FAILED;
MACRO_LEVEL PROFILE_LEVEL;
MACRO_SECURITY_INFORMATION PROTECTED_DACL_SECURITY_INFORMATION;
MACRO_SECURITY_INFORMATION PROTECTED_SACL_SECURITY_INFORMATION;
MACRO_PSS PSS_MESSAGE_INTRO;
_KWAIT_REASON PageIn;
_POOL_TYPE PagedPool;
_POOL_TYPE PagedPoolCacheAligned;
NTSTATUS __stdcall PcAddAdapterDevice(PDRIVER_OBJECT DriverObject, PDEVICE_OBJECT PhysicalDeviceObject, PCPFNSTARTDEVICE StartDevice, ULONG MaxObjects, ULONG DeviceExtensionSize);
NTSTATUS __stdcall PcAddContentHandlers(ULONG ContentId, PVOID *paHandlers, ULONG NumHandlers);
NTSTATUS __stdcall PcCompleteIrp(PDEVICE_OBJECT pDeviceObject, PIRP pIrp, NTSTATUS ntStatus);
NTSTATUS __stdcall PcCompletePendingPropertyRequest(PPCPROPERTY_REQUEST PropertyRequest, NTSTATUS NtStatus);
NTSTATUS __stdcall PcCreateContentMixed(PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);
NTSTATUS __stdcall PcDestroyContent(ULONG ContentId);
NTSTATUS __stdcall PcDispatchIrp(PDEVICE_OBJECT pDeviceObject, PIRP pIrp);
NTSTATUS __stdcall PcForwardContentToDeviceObject(ULONG ContentId, PVOID Reserved, PCDRMFORWARD DrmForward);
NTSTATUS __stdcall PcForwardContentToFileObject(ULONG ContentId, PFILE_OBJECT FileObject);
NTSTATUS __stdcall PcForwardContentToInterface(ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);
NTSTATUS __stdcall PcForwardIrpSynchronous(PDEVICE_OBJECT DeviceObject, PIRP Irp);
NTSTATUS __stdcall PcGetContentRights(ULONG ContentId, PDRMRIGHTS DrmRights);
NTSTATUS __stdcall PcGetDeviceProperty(PVOID DeviceObject, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);
ULONGLONG __stdcall PcGetTimeInterval(ULONGLONG Since);
NTSTATUS __stdcall PcInitializeAdapterDriver(PDRIVER_OBJECT DriverObject, PUNICODE_STRING RegistryPathName, PDRIVER_ADD_DEVICE AddDevice);
NTSTATUS __stdcall PcNewDmaChannel(PDMACHANNEL *OutDmaChannel, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PDEVICE_DESCRIPTION DeviceDescription, PDEVICE_OBJECT DeviceObject);
NTSTATUS __stdcall PcNewInterruptSync(PINTERRUPTSYNC *OutInterruptSync, PUNKNOWN OuterUnknown, PRESOURCELIST ResourceList, ULONG ResourceIndex, INTERRUPTSYNCMODE Mode);
NTSTATUS __stdcall PcNewMiniport(PMINIPORT *OutMiniPort, const IID *const ClassID);
NTSTATUS __stdcall PcNewPort(PPORT *OutPort, const IID *const ClassID);
NTSTATUS __stdcall PcNewRegistryKey(PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, PVOID DeviceObject, PVOID SubDevice, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);
NTSTATUS __stdcall PcNewResourceList(PRESOURCELIST *OutResourceList, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PCM_RESOURCE_LIST TranslatedResources, PCM_RESOURCE_LIST UntranslatedResources);
NTSTATUS __stdcall PcNewResourceSublist(PRESOURCELIST *OutResourceList, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PRESOURCELIST ParentList, ULONG MaximumEntries);
NTSTATUS __stdcall PcNewServiceGroup(PSERVICEGROUP *OutServiceGroup, PUNKNOWN OuterUnknown);
NTSTATUS __stdcall PcRegisterAdapterPowerManagement(PUNKNOWN Unknown, PVOID pvContext1);
NTSTATUS __stdcall PcRegisterIoTimeout(PDEVICE_OBJECT pDeviceObject, PIO_TIMER_ROUTINE pTimerRoutine, PVOID pContext);
NTSTATUS __stdcall PcRegisterPhysicalConnection(PDEVICE_OBJECT DeviceObject, PUNKNOWN FromUnknown, ULONG FromPin, PUNKNOWN ToUnknown, ULONG ToPin);
NTSTATUS __stdcall PcRegisterPhysicalConnectionFromExternal(PDEVICE_OBJECT DeviceObject, PUNICODE_STRING FromString, ULONG FromPin, PUNKNOWN ToUnknown, ULONG ToPin);
NTSTATUS __stdcall PcRegisterPhysicalConnectionToExternal(PDEVICE_OBJECT DeviceObject, PUNKNOWN FromUnknown, ULONG FromPin, PUNICODE_STRING ToString, ULONG ToPin);
NTSTATUS __stdcall PcRegisterSubdevice(PDEVICE_OBJECT DeviceObject, PWCHAR Name, PUNKNOWN Unknown);
NTSTATUS __stdcall PcRequestNewPowerState(PDEVICE_OBJECT pDeviceObject, DEVICE_POWER_STATE RequestedNewState);
NTSTATUS __stdcall PcUnregisterIoTimeout(PDEVICE_OBJECT pDeviceObject, PIO_TIMER_ROUTINE pTimerRoutine, PVOID pContext);
$6482D7A0F8ECEE932DF178E2624E51B8 PerRequestExtension;
_SUITE_TYPE Personal;
NTSTATUS __stdcall PoCallDriver(PDEVICE_OBJECT DeviceObject, PIRP Irp);
PULONG __stdcall PoRegisterDeviceForIdleDetection(PDEVICE_OBJECT DeviceObject, ULONG ConservationIdleTime, ULONG PerformanceIdleTime, DEVICE_POWER_STATE State);
PVOID __stdcall PoRegisterSystemState(PVOID StateHandle, EXECUTION_STATE Flags);
NTSTATUS __stdcall PoRequestPowerIrp(PDEVICE_OBJECT DeviceObject, UCHAR MinorFunction, POWER_STATE PowerState, PREQUEST_POWER_COMPLETE CompletionFunction, PVOID Context, PIRP *Irp);
NTSTATUS __stdcall PoRequestShutdownEvent(PVOID *Event);
NTSTATUS __stdcall PoRequestShutdownWait(PETHREAD Thread);
POWER_STATE __stdcall PoSetPowerState(PDEVICE_OBJECT DeviceObject, POWER_STATE_TYPE Type, POWER_STATE State);
void __stdcall PoSetSystemState(EXECUTION_STATE Flags);
void __stdcall PoStartNextPowerIrp(PIRP Irp);
void __stdcall PoUnregisterSystemState(PVOID StateHandle);
_KWAIT_REASON PoolAllocation;
_BUS_DATA_TYPE Pos;
$0FC989869F227A36D749990E523E5F04 PowerActionHibernate;
$0FC989869F227A36D749990E523E5F04 PowerActionNone;
$0FC989869F227A36D749990E523E5F04 PowerActionReserved;
$0FC989869F227A36D749990E523E5F04 PowerActionShutdown;
$0FC989869F227A36D749990E523E5F04 PowerActionShutdownOff;
$0FC989869F227A36D749990E523E5F04 PowerActionShutdownReset;
$0FC989869F227A36D749990E523E5F04 PowerActionSleep;
$0FC989869F227A36D749990E523E5F04 PowerActionWarmEject;
_DEVICE_POWER_STATE PowerDeviceD0;
_DEVICE_POWER_STATE PowerDeviceD1;
_DEVICE_POWER_STATE PowerDeviceD2;
_DEVICE_POWER_STATE PowerDeviceD3;
_DEVICE_POWER_STATE PowerDeviceMaximum;
_DEVICE_POWER_STATE PowerDeviceUnspecified;
_DEVICE_RELATION_TYPE PowerRelations;
_SYSTEM_POWER_STATE PowerSystemHibernate;
_SYSTEM_POWER_STATE PowerSystemMaximum;
_SYSTEM_POWER_STATE PowerSystemShutdown;
_SYSTEM_POWER_STATE PowerSystemSleeping1;
_SYSTEM_POWER_STATE PowerSystemSleeping2;
_SYSTEM_POWER_STATE PowerSystemSleeping3;
_SYSTEM_POWER_STATE PowerSystemUnspecified;
_SYSTEM_POWER_STATE PowerSystemWorking;
void __stdcall ProbeForRead(const void *Address, SIZE_T Length, ULONG Alignment);
void __stdcall ProbeForWrite(PVOID Address, SIZE_T Length, ULONG Alignment);
_INTERFACE_TYPE ProcessorInternal;
_KPROFILE_SOURCE Profile2Issue;
_KPROFILE_SOURCE Profile3Issue;
_KPROFILE_SOURCE Profile4Issue;
_KPROFILE_SOURCE ProfileAlignmentFixup;
_KPROFILE_SOURCE ProfileBranchInstructions;
_KPROFILE_SOURCE ProfileBranchMispredictions;
_KPROFILE_SOURCE ProfileCacheMisses;
_KPROFILE_SOURCE ProfileDcacheAccesses;
_KPROFILE_SOURCE ProfileDcacheMisses;
_KPROFILE_SOURCE ProfileFpInstructions;
_KPROFILE_SOURCE ProfileIcacheIssues;
_KPROFILE_SOURCE ProfileIcacheMisses;
_KPROFILE_SOURCE ProfileIntegerInstructions;
_KPROFILE_SOURCE ProfileLoadInstructions;
_KPROFILE_SOURCE ProfileLoadLinkedIssues;
_KPROFILE_SOURCE ProfileMaximum;
_KPROFILE_SOURCE ProfileMemoryBarrierCycles;
_KPROFILE_SOURCE ProfilePipelineDry;
_KPROFILE_SOURCE ProfilePipelineFrozen;
_KPROFILE_SOURCE ProfileSpecialInstructions;
_KPROFILE_SOURCE ProfileStoreInstructions;
_KPROFILE_SOURCE ProfileTime;
_KPROFILE_SOURCE ProfileTotalCycles;
_KPROFILE_SOURCE ProfileTotalIssues;
_KPROFILE_SOURCE ProfileTotalNonissues;
NTSTATUS __stdcall PsCreateSystemThread(PHANDLE ThreadHandle, ULONG DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ProcessHandle, PCLIENT_ID ClientId, PKSTART_ROUTINE StartRoutine, PVOID StartContext);
NTSTATUS __stdcall PsTerminateSystemThread(NTSTATUS ExitStatus);
MACRO_QDI QDI_DIBTOSCREEN;
MACRO_QDI QDI_GETDIBITS;
MACRO_QDI QDI_SETDIBITS;
MACRO_QDI QDI_STRETCHDIB;
MACRO_QUERYDIBSUPPORT QUERYDIBSUPPORT;
MACRO_QUOTA QUOTA_UNDERFLOW;
_SECURITY_OPERATION_CODE QuerySecurityDescriptor;
MACRO_RAMDISK RAMDISK_BOOT_INITIALIZATION_FAILED;
MACRO_RCODE RCODE_ADDRESS_ERROR;
MACRO_RCODE RCODE_CONFLICT_ERROR;
MACRO_RCODE RCODE_DATA_ERROR;
MACRO_RCODE RCODE_RESERVED1;
MACRO_RCODE RCODE_RESERVED2;
MACRO_RCODE RCODE_RESERVED3;
MACRO_RCODE RCODE_RESPONSE_COMPLETE;
MACRO_RCODE RCODE_STATUS_MASK;
MACRO_RCODE RCODE_TIMED_OUT;
MACRO_RCODE RCODE_TYPE_ERROR;
MACRO_FILE_SYSTEM RDR_FILE_SYSTEM;
MACRO_READ READ_CONTROL;
MACRO_READ_LOG READ_LOG_SECTORS_IN_LogAddress_ID;
MACRO_READ_LOG READ_LOG_SECTORS_IN_SectorCount_ID;
MACRO_READ_LOG READ_LOG_SECTORS_OUT_Length_ID;
MACRO_READ_LOG READ_LOG_SECTORS_OUT_LogSectors_ID;
void __stdcall READ_PORT_BUFFER_UCHAR(PUCHAR Port, PUCHAR Buffer, ULONG Count);
void __stdcall READ_PORT_BUFFER_ULONG(PULONG Port, PULONG Buffer, ULONG Count);
void __stdcall READ_PORT_BUFFER_USHORT(PUSHORT Port, PUSHORT Buffer, ULONG Count);
UCHAR __stdcall READ_PORT_UCHAR(PUCHAR Port);
ULONG __stdcall READ_PORT_ULONG(PULONG Port);
USHORT __stdcall READ_PORT_USHORT(PUSHORT Port);
void __stdcall READ_REGISTER_BUFFER_UCHAR(PUCHAR Register, PUCHAR Buffer, ULONG Count);
void __stdcall READ_REGISTER_BUFFER_ULONG(PULONG Register, PULONG Buffer, ULONG Count);
void __stdcall READ_REGISTER_BUFFER_USHORT(PUSHORT Register, PUSHORT Buffer, ULONG Count);
UCHAR __stdcall READ_REGISTER_UCHAR(PUCHAR Register);
ULONG __stdcall READ_REGISTER_ULONG(PULONG Register);
USHORT __stdcall READ_REGISTER_USHORT(PUSHORT Register);
MACRO_RECOM RECOM_DRIVER;
MACRO_RECURSIVE RECURSIVE_MACHINE_CHECK;
MACRO_REDBOOK REDBOOK_WMI_CDDA_ACCURATE_ID;
MACRO_REDBOOK REDBOOK_WMI_CDDA_SUPPORTED_ID;
MACRO_REDBOOK REDBOOK_WMI_MAX_SECTORS_PER_READ_ID;
MACRO_REDBOOK REDBOOK_WMI_NUMBER_OF_BUFFERS_ID;
MACRO_REDBOOK REDBOOK_WMI_PERF_DATA_PROCESSED_ID;
MACRO_REDBOOK REDBOOK_WMI_PERF_STREAM_PAUSED_COUNT_ID;
MACRO_REDBOOK REDBOOK_WMI_PERF_TIME_READING_DELAY_ID;
MACRO_REDBOOK REDBOOK_WMI_PERF_TIME_READING_ID;
MACRO_REDBOOK REDBOOK_WMI_PERF_TIME_STREAMING_DELAY_ID;
MACRO_REDBOOK REDBOOK_WMI_PERF_TIME_STREAMING_ID;
MACRO_REDBOOK REDBOOK_WMI_PLAY_ENABLED_ID;
MACRO_REDBOOK REDBOOK_WMI_SECTORS_PER_READ_ID;
MACRO_REDBOOK REDBOOK_WMI_SECTORS_PER_READ_MASK_ID;
MACRO_REDBOOK REDBOOK_WMI_STD_DATA_Reserved1_ID;
MACRO_REFERENCE REFERENCE_BY_POINTER;
MACRO_OBJECT REFMON_INITIALIZATION_FAILED;
MACRO_UNKNOWN_LOGON_SESSION REF_UNKNOWN_LOGON_SESSION;
MACRO_DEREGISTER REGISTER_BUS_RESET_NOTIFY;
MACRO_DEREGISTER REGISTER_FCP_REQUEST_NOTIFY;
MACRO_DEREGISTER REGISTER_FCP_RESPONSE_NOTIFY;
MACRO_MONITOR_PLUG_NOTIFY REGISTER_MONITOR_PLUG_NOTIFY;
MACRO_NOTIFICATION_ROUTINE REGISTER_NOTIFICATION_ROUTINE;
MACRO_REGISTRY REGISTRY_ERROR;
MACRO_REG_NONE REG_BINARY;
MACRO_REG REG_CREATED_NEW_KEY;
MACRO_REG_NONE REG_DWORD;
MACRO_REG_NONE REG_DWORD_BIG_ENDIAN;
MACRO_REG_NONE REG_DWORD_LITTLE_ENDIAN;
MACRO_REG_NONE REG_EXPAND_SZ;
MACRO_REG REG_FORCE_RESTORE;
MACRO_REG REG_FORCE_UNLOAD;
MACRO_REG_NONE REG_FULL_RESOURCE_DESCRIPTOR;
MACRO_REG REG_LATEST_FORMAT;
MACRO_REG REG_LEGAL_OPTION;
MACRO_REG_NONE REG_LINK;
MACRO_REG_NONE REG_MULTI_SZ;
MACRO_REG_NONE REG_NONE;
MACRO_REG REG_NO_COMPRESSION;
MACRO_REG REG_NO_LAZY_FLUSH;
MACRO_REG REG_OPENED_EXISTING_KEY;
MACRO_REG REG_OPTION_BACKUP_RESTORE;
MACRO_REG REG_OPTION_CREATE_LINK;
MACRO_REG REG_OPTION_NON_VOLATILE;
MACRO_REG REG_OPTION_OPEN_LINK;
MACRO_REG REG_OPTION_RESERVED;
MACRO_REG REG_OPTION_VOLATILE;
MACRO_REG_NONE REG_QWORD;
MACRO_REG_NONE REG_QWORD_LITTLE_ENDIAN;
MACRO_REG REG_REFRESH_HIVE;
MACRO_REG_NONE REG_RESOURCE_LIST;
MACRO_REG_NONE REG_RESOURCE_REQUIREMENTS_LIST;
MACRO_REG REG_STANDARD_FORMAT;
MACRO_REG_NONE REG_SZ;
MACRO_REG REG_WHOLE_HIVE_VOLATILE;
MACRO_REMOVAL REMOVAL_EVENT_WAKE_ENABLE;
MACRO_REMOVAL REMOVAL_REQUEST_ENABLE;
MACRO_UNIT_DIRECTORY_ENTRY REMOVE_UNIT_DIRECTORY_ENTRY;
MACRO_REQUEST REQUEST_ALLOCATE_ADDRESS_RANGE;
MACRO_REQUEST REQUEST_ASYNC_LOCK;
MACRO_REQUEST REQUEST_ASYNC_READ;
MACRO_REQUEST REQUEST_ASYNC_STREAM;
MACRO_REQUEST REQUEST_ASYNC_WRITE;
MACRO_REQUEST REQUEST_BUS_RESET;
MACRO_REQUEST REQUEST_BUS_RESET_NOTIFICATION;
MACRO_REQUEST REQUEST_CONTROL;
MACRO_REQUEST_DEVICE REQUEST_DEVICE_ENABLED_STATE;
MACRO_REQUEST_DEVICE REQUEST_DEVICE_INSERTED_STATE;
MACRO_REQUEST REQUEST_FREE_ADDRESS_RANGE;
MACRO_REQUEST REQUEST_GET_ADDR_FROM_DEVICE_OBJECT;
MACRO_REQUEST REQUEST_GET_CONFIGURATION_INFO;
MACRO_REQUEST REQUEST_GET_GENERATION_COUNT;
MACRO_REQUEST REQUEST_GET_LOCAL_HOST_INFO;
MACRO_REQUEST REQUEST_GET_SPEED_BETWEEN_DEVICES;
MACRO_REQUEST REQUEST_GET_SPEED_TOPOLOGY_MAPS;
MACRO_REQUEST REQUEST_ISOCH_ALLOCATE_BANDWIDTH;
MACRO_REQUEST REQUEST_ISOCH_ALLOCATE_CHANNEL;
MACRO_REQUEST REQUEST_ISOCH_ALLOCATE_RESOURCES;
MACRO_REQUEST REQUEST_ISOCH_ATTACH_BUFFERS;
MACRO_REQUEST REQUEST_ISOCH_DETACH_BUFFERS;
MACRO_REQUEST REQUEST_ISOCH_FREE_BANDWIDTH;
MACRO_REQUEST REQUEST_ISOCH_FREE_CHANNEL;
MACRO_REQUEST REQUEST_ISOCH_FREE_RESOURCES;
MACRO_REQUEST REQUEST_ISOCH_LISTEN;
MACRO_REQUEST REQUEST_ISOCH_MODIFY_STREAM_PROPERTIES;
MACRO_REQUEST REQUEST_ISOCH_QUERY_CYCLE_TIME;
MACRO_REQUEST REQUEST_ISOCH_QUERY_RESOURCES;
MACRO_REQUEST REQUEST_ISOCH_SET_CHANNEL_BANDWIDTH;
MACRO_REQUEST REQUEST_ISOCH_STOP;
MACRO_REQUEST REQUEST_ISOCH_TALK;
MACRO_REQUEST_DEVICE REQUEST_REMOVAL_ALLOWED_STATE;
MACRO_REQUEST_DEVICE REQUEST_REMOVAL_REQUESTED_STATE;
MACRO_REQUEST REQUEST_SEND_PHY_CONFIG_PACKET;
MACRO_REQUEST REQUEST_SET_DEVICE_XMIT_PROPERTIES;
MACRO_REQUEST REQUEST_SET_LOCAL_HOST_PROPERTIES;
MACRO_LOCATION RESET_START_LOCATION;
MACRO_RESOURCE_USED RESOURCE_BUFFERS_CIRCULAR;
MACRO_RESOURCE_HASH RESOURCE_HASH_TABLE_SIZE;
MACRO_RESOURCE RESOURCE_NOT_OWNED;
MACRO_RESOURCE_USED RESOURCE_STRIP_ADDITIONAL_QUADLETS;
MACRO_RESOURCE_USED RESOURCE_SYNCH_ON_TIME;
MACRO_RESOURCE_USED RESOURCE_TIME_STAMP_ON_COMPLETION;
MACRO_RESOURCE_USED RESOURCE_USED_IN_LISTENING;
MACRO_RESOURCE_USED RESOURCE_USED_IN_TALKING;
MACRO_RESOURCE_USED RESOURCE_USE_MULTICHANNEL;
MACRO_RESOURCE_USED RESOURCE_USE_PACKET_BASED;
MACRO_RESOURCE_USED RESOURCE_VARIABLE_ISOCH_PAYLOAD;
MACRO_RETRIEVE RETRIEVE_DEVICE_UNIT_INFO;
MACRO_RETRIEVE RETRIEVE_LOCAL_UNIT_INFO;
MACRO_ROCKWELL ROCKWELL_WA1_MIXER;
MACRO_ROCKWELL ROCKWELL_WA1_MPU401_IN;
MACRO_ROCKWELL ROCKWELL_WA1_MPU401_OUT;
MACRO_ROCKWELL ROCKWELL_WA1_SYNTH;
MACRO_ROCKWELL ROCKWELL_WA1_WAVEIN;
MACRO_ROCKWELL ROCKWELL_WA1_WAVEOUT;
MACRO_ROCKWELL ROCKWELL_WA2_MIXER;
MACRO_ROCKWELL ROCKWELL_WA2_MPU401_IN;
MACRO_ROCKWELL ROCKWELL_WA2_MPU401_OUT;
MACRO_ROCKWELL ROCKWELL_WA2_SYNTH;
MACRO_ROCKWELL ROCKWELL_WA2_WAVEIN;
MACRO_ROCKWELL ROCKWELL_WA2_WAVEOUT;
MACRO_RPC_NT RPC_NT_ADDRESS_ERROR;
MACRO_RPC RPC_NT_ALREADY_LISTENING;
MACRO_RPC RPC_NT_ALREADY_REGISTERED;
MACRO_RPC_NT RPC_NT_BAD_STUB_DATA;
MACRO_RPC RPC_NT_BINDING_HAS_NO_AUTH;
MACRO_RPC_NT_INVALID RPC_NT_BINDING_INCOMPLETE;
MACRO_RPC_NT RPC_NT_BYTE_COUNT_TOO_SMALL;
MACRO_RPC_NT_INVALID RPC_NT_CALL_CANCELLED;
MACRO_RPC RPC_NT_CALL_FAILED;
MACRO_RPC RPC_NT_CALL_FAILED_DNE;
MACRO_RPC_NT RPC_NT_CALL_IN_PROGRESS;
MACRO_RPC_NT RPC_NT_CANNOT_SUPPORT;
MACRO_RPC RPC_NT_CANT_CREATE_ENDPOINT;
MACRO_RPC_NT_INVALID RPC_NT_COMM_FAILURE;
MACRO_RPC RPC_NT_DUPLICATE_ENDPOINT;
MACRO_RPC_NT RPC_NT_ENTRY_ALREADY_EXISTS;
MACRO_RPC_NT RPC_NT_ENTRY_NOT_FOUND;
MACRO_RPC_NT RPC_NT_ENUM_VALUE_OUT_OF_RANGE;
MACRO_RPC_NT RPC_NT_FP_DIV_ZERO;
MACRO_RPC_NT RPC_NT_FP_OVERFLOW;
MACRO_RPC_NT RPC_NT_FP_UNDERFLOW;
MACRO_RPC_NT RPC_NT_GROUP_MEMBER_NOT_FOUND;
MACRO_RPC_NT RPC_NT_INCOMPLETE_NAME;
MACRO_RPC_NT RPC_NT_INTERFACE_NOT_FOUND;
MACRO_RPC_NT RPC_NT_INTERNAL_ERROR;
MACRO_RPC_NT_INVALID RPC_NT_INVALID_ASYNC_CALL;
MACRO_RPC_NT_INVALID RPC_NT_INVALID_ASYNC_HANDLE;
MACRO_RPC RPC_NT_INVALID_AUTH_IDENTITY;
MACRO_RPC RPC_NT_INVALID_BINDING;
MACRO_RPC RPC_NT_INVALID_BOUND;
MACRO_RPC RPC_NT_INVALID_ENDPOINT_FORMAT;
MACRO_RPC_NT_INVALID RPC_NT_INVALID_ES_ACTION;
MACRO_RPC_NT RPC_NT_INVALID_NAF_ID;
MACRO_RPC RPC_NT_INVALID_NAME_SYNTAX;
MACRO_RPC RPC_NT_INVALID_NETWORK_OPTIONS;
MACRO_RPC RPC_NT_INVALID_NET_ADDR;
MACRO_RPC_NT_INVALID RPC_NT_INVALID_OBJECT;
MACRO_RPC_NT_INVALID RPC_NT_INVALID_PIPE_OBJECT;
MACRO_RPC_NT_INVALID RPC_NT_INVALID_PIPE_OPERATION;
MACRO_RPC RPC_NT_INVALID_RPC_PROTSEQ;
MACRO_RPC RPC_NT_INVALID_STRING_BINDING;
MACRO_RPC RPC_NT_INVALID_STRING_UUID;
MACRO_RPC RPC_NT_INVALID_TAG;
MACRO_RPC RPC_NT_INVALID_TIMEOUT;
MACRO_RPC_NT RPC_NT_INVALID_VERS_OPTION;
MACRO_RPC RPC_NT_MAX_CALLS_TOO_SMALL;
MACRO_RPC_NT RPC_NT_NAME_SERVICE_UNAVAILABLE;
MACRO_RPC_NT RPC_NT_NOTHING_TO_EXPORT;
MACRO_RPC_NT RPC_NT_NOT_ALL_OBJS_UNEXPORTED;
MACRO_RPC_NT_INVALID RPC_NT_NOT_CANCELLED;
MACRO_RPC RPC_NT_NOT_LISTENING;
MACRO_RPC_NT_INVALID RPC_NT_NOT_RPC_ERROR;
MACRO_RPC RPC_NT_NO_BINDINGS;
MACRO_RPC RPC_NT_NO_CALL_ACTIVE;
MACRO_RPC_NT RPC_NT_NO_CONTEXT_AVAILABLE;
MACRO_RPC RPC_NT_NO_ENDPOINT_FOUND;
MACRO_RPC RPC_NT_NO_ENTRY_NAME;
MACRO_RPC_NT_INVALID RPC_NT_NO_INTERFACES;
MACRO_RPC_NT RPC_NT_NO_MORE_BINDINGS;
MACRO_RPC_NT RPC_NT_NO_MORE_ENTRIES;
MACRO_RPC_NT RPC_NT_NO_MORE_MEMBERS;
MACRO_RPC_NT_INVALID RPC_NT_NO_PRINC_NAME;
MACRO_RPC RPC_NT_NO_PROTSEQS;
MACRO_RPC RPC_NT_NO_PROTSEQS_REGISTERED;
MACRO_RPC_NT RPC_NT_NULL_REF_POINTER;
MACRO_RPC RPC_NT_OBJECT_NOT_FOUND;
MACRO_RPC RPC_NT_OUT_OF_RESOURCES;
MACRO_RPC_NT_INVALID RPC_NT_PIPE_CLOSED;
MACRO_RPC_NT_INVALID RPC_NT_PIPE_DISCIPLINE_ERROR;
MACRO_RPC_NT_INVALID RPC_NT_PIPE_EMPTY;
MACRO_RPC RPC_NT_PROCNUM_OUT_OF_RANGE;
MACRO_RPC RPC_NT_PROTOCOL_ERROR;
MACRO_RPC RPC_NT_PROTSEQ_NOT_FOUND;
MACRO_RPC RPC_NT_PROTSEQ_NOT_SUPPORTED;
MACRO_RPC_NT_INVALID RPC_NT_SEC_PKG_ERROR;
MACRO_RPC_NT_INVALID RPC_NT_SEND_INCOMPLETE;
MACRO_RPC RPC_NT_SERVER_TOO_BUSY;
MACRO_RPC RPC_NT_SERVER_UNAVAILABLE;
MACRO_RPC_NT RPC_NT_SS_CANNOT_GET_CALL_HANDLE;
MACRO_RPC_NT RPC_NT_SS_CHAR_TRANS_OPEN_FAIL;
MACRO_RPC_NT RPC_NT_SS_CHAR_TRANS_SHORT_FILE;
MACRO_RPC_NT RPC_NT_SS_CONTEXT_DAMAGED;
MACRO_RPC_NT RPC_NT_SS_CONTEXT_MISMATCH;
MACRO_RPC_NT RPC_NT_SS_HANDLES_MISMATCH;
MACRO_RPC_NT RPC_NT_SS_IN_NULL_CONTEXT;
MACRO_RPC RPC_NT_STRING_TOO_LONG;
MACRO_RPC RPC_NT_TYPE_ALREADY_REGISTERED;
MACRO_RPC RPC_NT_UNKNOWN_AUTHN_LEVEL;
MACRO_RPC RPC_NT_UNKNOWN_AUTHN_SERVICE;
MACRO_RPC RPC_NT_UNKNOWN_AUTHN_TYPE;
MACRO_RPC RPC_NT_UNKNOWN_AUTHZ_SERVICE;
MACRO_RPC RPC_NT_UNKNOWN_IF;
MACRO_RPC RPC_NT_UNKNOWN_MGR_TYPE;
MACRO_RPC_NT_INVALID RPC_NT_UNSUPPORTED_AUTHN_LEVEL;
MACRO_RPC RPC_NT_UNSUPPORTED_NAME_SYNTAX;
MACRO_RPC RPC_NT_UNSUPPORTED_TRANS_SYN;
MACRO_RPC RPC_NT_UNSUPPORTED_TYPE;
MACRO_RPC_NT_INVALID RPC_NT_UUID_LOCAL_ONLY;
MACRO_RPC RPC_NT_UUID_NO_ADDRESS;
MACRO_RPC_NT_INVALID RPC_NT_WRONG_ES_VERSION;
MACRO_RPC RPC_NT_WRONG_KIND_OF_BINDING;
MACRO_RPC_NT_INVALID RPC_NT_WRONG_PIPE_VERSION;
MACRO_RPC_NT_INVALID RPC_NT_WRONG_STUB_VERSION;
MACRO_RPC_NT RPC_NT_ZERO_DIVIDE;
MACRO_RTL RTL_QUERY_REGISTRY_DELETE;
MACRO_RTL RTL_QUERY_REGISTRY_DIRECT;
MACRO_RTL RTL_QUERY_REGISTRY_NOEXPAND;
MACRO_RTL RTL_QUERY_REGISTRY_NOVALUE;
MACRO_RTL RTL_QUERY_REGISTRY_REQUIRED;
MACRO_RTL RTL_QUERY_REGISTRY_SUBKEY;
MACRO_RTL RTL_QUERY_REGISTRY_TOPKEY;
MACRO_RTL RTL_REGISTRY_ABSOLUTE;
MACRO_RTL RTL_REGISTRY_CONTROL;
MACRO_RTL RTL_REGISTRY_DEVICEMAP;
MACRO_RTL RTL_REGISTRY_HANDLE;
MACRO_RTL RTL_REGISTRY_MAXIMUM;
MACRO_RTL RTL_REGISTRY_OPTIONAL;
MACRO_RTL RTL_REGISTRY_SERVICES;
MACRO_RTL RTL_REGISTRY_USER;
MACRO_RTL RTL_REGISTRY_WINDOWS_NT;
MACRO_RT RT_RCDATA;
MACRO_RT RT_STRING;
MACRO_ReadLogSectors ReadLogSectors;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE ReadyForNextDeviceRequest;
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE ReadyForNextStreamControlRequest;
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE ReadyForNextStreamDataRequest;
_CM_SERVICE_NODE_TYPE RecognizerType;
_REG_NOTIFY_CLASS RegNtDeleteKey;
_REG_NOTIFY_CLASS RegNtDeleteValueKey;
_REG_NOTIFY_CLASS RegNtEnumerateKey;
_REG_NOTIFY_CLASS RegNtEnumerateValueKey;
_REG_NOTIFY_CLASS RegNtKeyHandleClose;
_REG_NOTIFY_CLASS RegNtPostCreateKey;
_REG_NOTIFY_CLASS RegNtPostCreateKeyEx;
_REG_NOTIFY_CLASS RegNtPostDeleteKey;
_REG_NOTIFY_CLASS RegNtPostDeleteValueKey;
_REG_NOTIFY_CLASS RegNtPostEnumerateKey;
_REG_NOTIFY_CLASS RegNtPostEnumerateValueKey;
_REG_NOTIFY_CLASS RegNtPostKeyHandleClose;
_REG_NOTIFY_CLASS RegNtPostOpenKey;
_REG_NOTIFY_CLASS RegNtPostOpenKeyEx;
_REG_NOTIFY_CLASS RegNtPostQueryKey;
_REG_NOTIFY_CLASS RegNtPostQueryMultipleValueKey;
_REG_NOTIFY_CLASS RegNtPostQueryValueKey;
_REG_NOTIFY_CLASS RegNtPostRenameKey;
_REG_NOTIFY_CLASS RegNtPostSetInformationKey;
_REG_NOTIFY_CLASS RegNtPostSetValueKey;
_REG_NOTIFY_CLASS RegNtPreCreateKey;
_REG_NOTIFY_CLASS RegNtPreCreateKeyEx;
_REG_NOTIFY_CLASS RegNtPreDeleteKey;
_REG_NOTIFY_CLASS RegNtPreDeleteValueKey;
_REG_NOTIFY_CLASS RegNtPreEnumerateKey;
_REG_NOTIFY_CLASS RegNtPreEnumerateValueKey;
_REG_NOTIFY_CLASS RegNtPreKeyHandleClose;
_REG_NOTIFY_CLASS RegNtPreOpenKey;
_REG_NOTIFY_CLASS RegNtPreOpenKeyEx;
_REG_NOTIFY_CLASS RegNtPreQueryKey;
_REG_NOTIFY_CLASS RegNtPreQueryMultipleValueKey;
_REG_NOTIFY_CLASS RegNtPreQueryValueKey;
_REG_NOTIFY_CLASS RegNtPreRenameKey;
_REG_NOTIFY_CLASS RegNtPreSetInformationKey;
_REG_NOTIFY_CLASS RegNtPreSetValueKey;
_REG_NOTIFY_CLASS RegNtQueryKey;
_REG_NOTIFY_CLASS RegNtQueryMultipleValueKey;
_REG_NOTIFY_CLASS RegNtQueryValueKey;
_REG_NOTIFY_CLASS RegNtRenameKey;
_REG_NOTIFY_CLASS RegNtSetInformationKey;
_REG_NOTIFY_CLASS RegNtSetValueKey;
NTSTATUS __stdcall RegisterOpRegionHandler(PDEVICE_OBJECT DeviceObject, ULONG AccessType, ULONG RegionSpace, PACPI_OP_REGION_HANDLER Handler, PVOID Context, ULONG Flags, PVOID *OperationRegionObject);
MACRO_RegisteredGuids RegisteredGuids_EnableFlags_ID;
MACRO_RegisteredGuids RegisteredGuids_EnableLevel_ID;
MACRO_RegisteredGuids RegisteredGuids_GuidType_ID;
MACRO_RegisteredGuids RegisteredGuids_IsEnabled_ID;
MACRO_RegisteredGuids RegisteredGuids_LoggerId_ID;
_DEVICE_REMOVAL_POLICY RemovalPolicyExpectNoRemoval;
_DEVICE_REMOVAL_POLICY RemovalPolicyExpectOrderlyRemoval;
_DEVICE_REMOVAL_POLICY RemovalPolicyExpectSurpriseRemoval;
_DEVICE_RELATION_TYPE RemovalRelations;
BOOLEAN __stdcall RemoveEntryList(PLIST_ENTRY Entry);
PLIST_ENTRY __stdcall RemoveHeadList(PLIST_ENTRY ListHead);
PLIST_ENTRY __stdcall RemoveTailList(PLIST_ENTRY ListHead);
MPEG2StreamType Reserved1;
_USB_NOTIFICATION_TYPE ResetOvercurrent;
MACRO_ResourceNeverExclusive ResourceNeverExclusive;
MACRO_ResourceNeverExclusive ResourceOwnedExclusive;
MACRO_ResourceNeverExclusive ResourceReleaseByOtherThread;
NTSTATUS __stdcall RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString, PCANSI_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlAppendUnicodeStringToString(PUNICODE_STRING Destination, PCUNICODE_STRING Source);
NTSTATUS __stdcall RtlAppendUnicodeToString(PUNICODE_STRING Destination, PCWSTR Source);
BOOLEAN __stdcall RtlAreBitsClear(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG Length);
BOOLEAN __stdcall RtlAreBitsSet(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG Length);
void __stdcall RtlAssert(PVOID FailedAssertion, PVOID FileName, ULONG LineNumber, PCHAR Message);
void __stdcall RtlClearAllBits(PRTL_BITMAP BitMapHeader);
void __stdcall RtlClearBit(PRTL_BITMAP BitMapHeader, ULONG BitNumber);
void __stdcall RtlClearBits(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG NumberToClear);
SIZE_T __stdcall RtlCompareMemory(const void *Source1, const void *Source2, SIZE_T Length);
LONG __stdcall RtlCompareUnicodeString(PCUNICODE_STRING String1, PCUNICODE_STRING String2, BOOLEAN CaseInSensitive);
LARGE_INTEGER __stdcall RtlConvertLongToLargeInteger(LONG SignedInteger);
LARGE_INTEGER __stdcall RtlConvertUlongToLargeInteger(ULONG UnsignedInteger);
void __stdcall RtlCopyUnicodeString(PUNICODE_STRING DestinationString, PCUNICODE_STRING SourceString);
NTSTATUS __stdcall RtlCreateSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, ULONG Revision);
NTSTATUS __stdcall RtlDeleteRegistryValue(ULONG RelativeTo, PCWSTR Path, PCWSTR ValueName);
LARGE_INTEGER __stdcall RtlEnlargedIntegerMultiply(LONG Multiplicand, LONG Multiplier);
ULONG __stdcall RtlEnlargedUnsignedDivide(ULARGE_INTEGER Dividend, ULONG Divisor, PULONG Remainder);
LARGE_INTEGER __stdcall RtlEnlargedUnsignedMultiply(ULONG Multiplicand, ULONG Multiplier);
BOOLEAN __stdcall RtlEqualUnicodeString(PCUNICODE_STRING String1, PCUNICODE_STRING String2, BOOLEAN CaseInSensitive);
LARGE_INTEGER __stdcall RtlExtendedIntegerMultiply(LARGE_INTEGER Multiplicand, LONG Multiplier);
LARGE_INTEGER __stdcall RtlExtendedLargeIntegerDivide(LARGE_INTEGER Dividend, ULONG Divisor, PULONG Remainder);
LARGE_INTEGER __stdcall RtlExtendedMagicDivide(LARGE_INTEGER Dividend, LARGE_INTEGER MagicDivisor, CCHAR ShiftCount);
ULONG __stdcall RtlFindClearBits(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
ULONG __stdcall RtlFindClearBitsAndSet(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
ULONG __stdcall RtlFindClearRuns(PRTL_BITMAP BitMapHeader, PRTL_BITMAP_RUN RunArray, ULONG SizeOfRunArray, BOOLEAN LocateLongestRuns);
ULONG __stdcall RtlFindFirstRunClear(PRTL_BITMAP BitMapHeader, PULONG StartingIndex);
ULONG __stdcall RtlFindLastBackwardRunClear(PRTL_BITMAP BitMapHeader, ULONG FromIndex, PULONG StartingRunIndex);
CCHAR __stdcall RtlFindLeastSignificantBit(ULONGLONG Set);
ULONG __stdcall RtlFindLongestRunClear(PRTL_BITMAP BitMapHeader, PULONG StartingIndex);
CCHAR __stdcall RtlFindMostSignificantBit(ULONGLONG Set);
ULONG __stdcall RtlFindNextForwardRunClear(PRTL_BITMAP BitMapHeader, ULONG FromIndex, PULONG StartingRunIndex);
ULONG __stdcall RtlFindSetBits(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
ULONG __stdcall RtlFindSetBitsAndClear(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
void __stdcall RtlFreeAnsiString(PANSI_STRING AnsiString);
void __stdcall RtlFreeUnicodeString(PUNICODE_STRING UnicodeString);
NTSTATUS __stdcall RtlGUIDFromString(PUNICODE_STRING GuidString, GUID *Guid);
NTSTATUS __stdcall RtlHashUnicodeString(const UNICODE_STRING *String, BOOLEAN CaseInSensitive, ULONG HashAlgorithm, PULONG HashValue);
void __stdcall RtlInitAnsiString(PANSI_STRING DestinationString, PCSZ SourceString);
void __stdcall RtlInitString(PSTRING DestinationString, PCSZ SourceString);
void __stdcall RtlInitUnicodeString(PUNICODE_STRING DestinationString, PCWSTR SourceString);
void __stdcall RtlInitializeBitMap(PRTL_BITMAP BitMapHeader, PULONG BitMapBuffer, ULONG SizeOfBitMap);
NTSTATUS __stdcall RtlInt64ToUnicodeString(ULONGLONG Value, ULONG Base, PUNICODE_STRING String);
NTSTATUS __stdcall RtlIntegerToUnicodeString(ULONG Value, ULONG Base, PUNICODE_STRING String);
LARGE_INTEGER __stdcall RtlLargeIntegerAdd(LARGE_INTEGER Addend1, LARGE_INTEGER Addend2);
LARGE_INTEGER __stdcall RtlLargeIntegerArithmeticShift(LARGE_INTEGER LargeInteger, CCHAR ShiftCount);
LARGE_INTEGER __stdcall RtlLargeIntegerNegate(LARGE_INTEGER Subtrahend);
LARGE_INTEGER __stdcall RtlLargeIntegerShiftLeft(LARGE_INTEGER LargeInteger, CCHAR ShiftCount);
LARGE_INTEGER __stdcall RtlLargeIntegerShiftRight(LARGE_INTEGER LargeInteger, CCHAR ShiftCount);
LARGE_INTEGER __stdcall RtlLargeIntegerSubtract(LARGE_INTEGER Minuend, LARGE_INTEGER Subtrahend);
ULONG __stdcall RtlLengthSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor);
ULONG __stdcall RtlNumberOfClearBits(PRTL_BITMAP BitMapHeader);
ULONG __stdcall RtlNumberOfSetBits(PRTL_BITMAP BitMapHeader);
NTSTATUS __stdcall RtlQueryRegistryValues(ULONG RelativeTo, PCWSTR Path, PRTL_QUERY_REGISTRY_TABLE QueryTable, PVOID Context, PVOID Environment);
PVOID __stdcall RtlSecureZeroMemory(PVOID ptr, SIZE_T cnt);
void __stdcall RtlSetAllBits(PRTL_BITMAP BitMapHeader);
void __stdcall RtlSetBit(PRTL_BITMAP BitMapHeader, ULONG BitNumber);
void __stdcall RtlSetBits(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG NumberToSet);
NTSTATUS __stdcall RtlSetDaclSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, BOOLEAN DaclPresent, PACL Dacl, BOOLEAN DaclDefaulted);
NTSTATUS __stdcall RtlStringFromGUID(const GUID *const Guid, PUNICODE_STRING GuidString);
BOOLEAN __stdcall RtlTestBit(PRTL_BITMAP BitMapHeader, ULONG BitNumber);
BOOLEAN __stdcall RtlTimeFieldsToTime(PTIME_FIELDS TimeFields, PLARGE_INTEGER Time);
void __stdcall RtlTimeToTimeFields(PLARGE_INTEGER Time, PTIME_FIELDS TimeFields);
NTSTATUS __stdcall RtlUnicodeStringToAnsiString(PANSI_STRING DestinationString, PCUNICODE_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUnicodeStringToInteger(PCUNICODE_STRING String, ULONG Base, PULONG Value);
BOOLEAN __stdcall RtlValidRelativeSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptorInput, ULONG SecurityDescriptorLength, SECURITY_INFORMATION RequiredInformation);
BOOLEAN __stdcall RtlValidSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor);
NTSTATUS __stdcall RtlWriteRegistryValue(ULONG RelativeTo, PCWSTR Path, PCWSTR ValueName, ULONG ValueType, PVOID ValueData, ULONG ValueLength);
ULONG __stdcall RtlxAnsiStringToUnicodeSize(PCANSI_STRING AnsiString);
ULONG __stdcall RtlxUnicodeStringToAnsiSize(PCUNICODE_STRING UnicodeString);
MACRO_BW_UNITS_PER_QUADLET S100_BW_UNITS_PER_QUADLET;
MACRO_BW_UNITS_PER_QUADLET S1600_BW_UNITS_PER_QUADLET;
MACRO_BW_UNITS_PER_QUADLET S200_BW_UNITS_PER_QUADLET;
MACRO_BW_UNITS_PER_QUADLET S400_BW_UNITS_PER_QUADLET;
MACRO_BW_UNITS_PER_QUADLET S800_BW_UNITS_PER_QUADLET;
MACRO_SECURITY_INFORMATION SACL_SECURITY_INFORMATION;
MACRO_SCODE SCODE_100_RATE;
MACRO_SCODE SCODE_1600_RATE;
MACRO_SCODE SCODE_200_RATE;
MACRO_SCODE SCODE_3200_RATE;
MACRO_SCODE SCODE_400_RATE;
MACRO_SCODE SCODE_800_RATE;
MACRO_DRIVER_INTERNAL SCSI_DISK_DRIVER_INTERNAL;
MACRO_SCSI SCSI_VERIFIER_DETECTED_VIOLATION;
MACRO_SECTION SECTION_ALL_ACCESS;
MACRO_SECTION SECTION_EXTEND_SIZE;
MACRO_SECTION SECTION_MAP_EXECUTE;
MACRO_SECTION SECTION_MAP_READ;
MACRO_SECTION SECTION_MAP_WRITE;
MACRO_SECTION SECTION_QUERY;
MACRO_OBJECT SECURITY1_INITIALIZATION_FAILED;
MACRO_REVISION SECURITY_DESCRIPTOR_REVISION;
MACRO_SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR_REVISION1;
MACRO_SECURITY_DYNAMIC SECURITY_DYNAMIC_TRACKING;
MACRO_OBJECT SECURITY_INITIALIZATION_FAILED;
MACRO_SECURITY_DYNAMIC SECURITY_STATIC_TRACKING;
MACRO_SECURITY SECURITY_SYSTEM;
MACRO_SEC SEC_RESERVE;
MACRO_SEEK SEEK_CUR;
MACRO_SEEK SEEK_END;
MACRO_SEEK SEEK_SET;
MACRO_SEGMENT SEGMENT_ALL_ACCESS;
MACRO_SELFID SELFID_PACKET_SIGNITURE;
MACRO_SELF SELF_ID_CONNECTED_TO_CHILD;
MACRO_SELF SELF_ID_CONNECTED_TO_PARENT;
MACRO_SELF SELF_ID_NOT_CONNECTED;
MACRO_SELF SELF_ID_NOT_PRESENT;
MACRO_SEMAPHORE SEMAPHORE_ALL_ACCESS;
MACRO_INCREMENT SEMAPHORE_INCREMENT;
MACRO_SEMAPHORE SEMAPHORE_MODIFY_STATE;
MACRO_SEMAPHORE SEMAPHORE_QUERY_STATE;
MACRO_SERIAL SERIAL_DRIVER_INTERNAL;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwCurrentRxQueue_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwCurrentTxQueue_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwMaxBaud_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwMaxRxQueue_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwMaxTxQueue_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwProvCapabilities_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwProvCharSize_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwProvSpec1_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwProvSpec2_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwProvSubType_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwReserved1_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwServiceMask_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwSettableBaud_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_dwSettableParams_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_wPacketLength_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_wPacketVersion_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_wSettableData_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_wSettableStopParity_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMMPROP_wcProvChar_ID;
MACRO_MSSerial SERIAL_WMI_COMM_DATA_BaudRate_ID;
MACRO_MSSerial SERIAL_WMI_COMM_DATA_BitsPerByte_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_IsBusy_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_MaximumBaudRate_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_MaximumInputBufferSize_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_MaximumOutputBufferSize_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_ParityCheckEnable_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_Parity_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SettableBaudRate_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SettableDataBits_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SettableFlowControl_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SettableParityCheck_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SettableParity_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SettableStopBits_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_StopBits_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_Support16BitMode_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SupportDTRDSR_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SupportIntervalTimeouts_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SupportParityCheck_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SupportRTSCTS_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_SupportXonXoff_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_XoffCharacter_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_XoffXmitThreshold_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_XonCharacter_ID;
MACRO_SERIAL_WMI SERIAL_WMI_COMM_DATA_XonXmitThreshold_ID;
MACRO_SERIAL_WMI SERIAL_WMI_HW_DATA_BaseIOAddress_ID;
MACRO_SERIAL_WMI SERIAL_WMI_HW_DATA_InterruptType_ID;
MACRO_SERIAL_WMI SERIAL_WMI_HW_DATA_IrqAffinityMask_ID;
MACRO_SERIAL_WMI SERIAL_WMI_HW_DATA_IrqLevel_ID;
MACRO_SERIAL_WMI SERIAL_WMI_HW_DATA_IrqNumber_ID;
MACRO_SERIAL_WMI SERIAL_WMI_HW_DATA_IrqVector_ID;
MACRO_SERIAL_WMI SERIAL_WMI_INTTYPE_LATCHED;
MACRO_SERIAL_WMI SERIAL_WMI_INTTYPE_LEVEL;
MACRO_SERIAL_WMI SERIAL_WMI_PARITY_EVEN;
MACRO_SERIAL_WMI SERIAL_WMI_PARITY_MARK;
MACRO_SERIAL_WMI SERIAL_WMI_PARITY_NONE;
MACRO_SERIAL_WMI SERIAL_WMI_PARITY_ODD;
MACRO_SERIAL_WMI SERIAL_WMI_PARITY_SPACE;
MACRO_SERIAL_WMI SERIAL_WMI_PERF_DATA_BufferOverrunErrorCount_ID;
MACRO_SERIAL_WMI SERIAL_WMI_PERF_DATA_FrameErrorCount_ID;
MACRO_SERIAL_WMI SERIAL_WMI_PERF_DATA_ParityErrorCount_ID;
MACRO_SERIAL_WMI SERIAL_WMI_PERF_DATA_ReceivedCount_ID;
MACRO_SERIAL_WMI SERIAL_WMI_PERF_DATA_SerialOverrunErrorCount_ID;
MACRO_SERIAL_WMI SERIAL_WMI_PERF_DATA_TransmittedCount_ID;
MACRO_SERIAL_WMI SERIAL_WMI_STOP_1;
MACRO_SERIAL_WMI SERIAL_WMI_STOP_1_5;
MACRO_SERIAL_WMI SERIAL_WMI_STOP_2;
MACRO_SERVICE SERVICE_ADAPTER;
MACRO_SERVICE SERVICE_AUTO_START;
MACRO_SERVICE SERVICE_BOOT_START;
MACRO_SERVICE SERVICE_DEMAND_START;
MACRO_SERVICE SERVICE_DISABLED;
MACRO_SERVICE SERVICE_DRIVER;
MACRO_SERVICE SERVICE_ERROR_CRITICAL;
MACRO_SERVICE SERVICE_ERROR_IGNORE;
MACRO_SERVICE SERVICE_ERROR_NORMAL;
MACRO_SERVICE SERVICE_ERROR_SEVERE;
MACRO_SERVICE SERVICE_FILE_SYSTEM_DRIVER;
MACRO_SERVICE SERVICE_INTERACTIVE_PROCESS;
MACRO_SERVICE SERVICE_KERNEL_DRIVER;
MACRO_SERVICE SERVICE_RECOGNIZER_DRIVER;
MACRO_SERVICE SERVICE_SYSTEM_START;
MACRO_SERVICE SERVICE_TYPE_ALL;
MACRO_SERVICE SERVICE_WIN32;
MACRO_SERVICE SERVICE_WIN32_OWN_PROCESS;
MACRO_SERVICE SERVICE_WIN32_SHARE_PROCESS;
MACRO_OBJECT SESSION1_INITIALIZATION_FAILED;
MACRO_OBJECT SESSION2_INITIALIZATION_FAILED;
MACRO_OBJECT SESSION3_INITIALIZATION_FAILED;
MACRO_OBJECT SESSION4_INITIALIZATION_FAILED;
MACRO_OBJECT SESSION5_INITIALIZATION_FAILED;
MACRO_SESSION SESSION_HAS_VALID_POOL_ON_EXIT;
MACRO_SESSION_HAS_VALID SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT;
MACRO_SESSION_HAS SESSION_HAS_VALID_VIEWS_ON_EXIT;
MACRO_SETUP SETUP_FAILURE;
MACRO_SET_UNIT SET_CMP_ADDRESS_RANGE_TYPE;
MACRO_FAILED SET_ENV_VAR_FAILED;
MACRO_SET_LOCAL SET_LOCAL_HOST_PROPERTIES_CYCLE_START_CONTROL;
MACRO_SET_LOCAL SET_LOCAL_HOST_PROPERTIES_GAP_COUNT;
MACRO_SET_LOCAL SET_LOCAL_HOST_PROPERTIES_MAX_PAYLOAD;
MACRO_SET_LOCAL SET_LOCAL_HOST_PROPERTIES_MODIFY_CROM;
MACRO_SET_LOCAL SET_LOCAL_HOST_PROPERTIES_NO_CYCLE_STARTS;
MACRO_SET SET_OF_INVALID_CONTEXT;
MACRO_SET_UNIT SET_UNIT_INFO_DIAG_LEVEL;
MACRO_SET_UNIT SET_UNIT_INFO_ISOCH_PARAMS;
MACRO_SE_MIN SE_ASSIGNPRIMARYTOKEN_PRIVILEGE;
MACRO_SE_MIN SE_AUDIT_PRIVILEGE;
MACRO_SE_MIN SE_BACKUP_PRIVILEGE;
MACRO_SE_MIN SE_CHANGE_NOTIFY_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_GLOBAL_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_PAGEFILE_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_PERMANENT_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_TOKEN_PRIVILEGE;
MACRO_SE_MIN SE_DEBUG_PRIVILEGE;
MACRO_SE_MIN SE_ENABLE_DELEGATION_PRIVILEGE;
MACRO_SE_MIN SE_IMPERSONATE_PRIVILEGE;
MACRO_SE_MIN SE_INCREASE_QUOTA_PRIVILEGE;
MACRO_SE_MIN SE_INC_BASE_PRIORITY_PRIVILEGE;
MACRO_SE_MIN SE_LOAD_DRIVER_PRIVILEGE;
MACRO_SE_MIN SE_LOCK_MEMORY_PRIVILEGE;
MACRO_SE_MIN SE_MACHINE_ACCOUNT_PRIVILEGE;
MACRO_SE_MIN SE_MANAGE_VOLUME_PRIVILEGE;
MACRO_SE_MIN SE_MAX_WELL_KNOWN_PRIVILEGE;
MACRO_SE_MIN SE_MIN_WELL_KNOWN_PRIVILEGE;
MACRO_SE SE_PRIVILEGE_ENABLED;
MACRO_SE SE_PRIVILEGE_ENABLED_BY_DEFAULT;
MACRO_SE SE_PRIVILEGE_REMOVED;
MACRO_SE SE_PRIVILEGE_USED_FOR_ACCESS;
MACRO_SE_MIN SE_PROF_SINGLE_PROCESS_PRIVILEGE;
MACRO_SE_MIN SE_REMOTE_SHUTDOWN_PRIVILEGE;
MACRO_SE_MIN SE_RESTORE_PRIVILEGE;
MACRO_SE_MIN SE_SECURITY_PRIVILEGE;
MACRO_SE_MIN SE_SHUTDOWN_PRIVILEGE;
MACRO_SE_MIN SE_SYNC_AGENT_PRIVILEGE;
MACRO_SE_MIN SE_SYSTEMTIME_PRIVILEGE;
MACRO_SE_MIN SE_SYSTEM_ENVIRONMENT_PRIVILEGE;
MACRO_SE_MIN SE_SYSTEM_PROFILE_PRIVILEGE;
MACRO_SE_MIN SE_TAKE_OWNERSHIP_PRIVILEGE;
MACRO_SE_MIN SE_TCB_PRIVILEGE;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_AKM;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_ANALOG_DEVICES_PHAT;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_AUREAL;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_AZTECH;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_BBE;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_BINAURA;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_CREATIVE;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_CRYSTAL_SEMI;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_ESS_TECH;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_HARMAN_VMAX;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_NATIONAL_SEMI;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_NONE;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_NVIDEA;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_PHILIPS_INCREDIBLE;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_PLATFORM_TECH;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_QSOUND_QXPANDER;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_SPATIALIZER;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_SRS;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_TEXAS_INST;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_VLSI_TECH;
$B6084D6A0EEB0FD386ED58F84822BF64 SE_TECH_YAMAHA_YMERSION;
MACRO_SE_MIN SE_UNDOCK_PRIVILEGE;
MACRO_SHARED SHARED_RESOURCE_CONV_ERROR;
$85B8D048AA221EC9AB61032617833AB7 SHORT_COEFF;
MACRO_SHORT SHORT_LEAST_SIGNIFICANT_BIT;
MACRO_SHORT SHORT_MOST_SIGNIFICANT_BIT;
MACRO_SLHP SLHP_FLAG_ADD_CROM_DATA;
MACRO_SLHP SLHP_FLAG_REMOVE_CROM_DATA;
MACRO_SL SL_ALLOW_RAW_MOUNT;
MACRO_SL SL_CASE_SENSITIVE;
MACRO_SL SL_EXCLUSIVE_LOCK;
MACRO_SL SL_FAIL_IMMEDIATELY;
MACRO_SL SL_FORCE_ACCESS_CHECK;
MACRO_SL SL_FT_SEQUENTIAL_WRITE;
MACRO_SL SL_INDEX_SPECIFIED;
MACRO_SL SL_INVOKE_ON_CANCEL;
MACRO_SL SL_INVOKE_ON_ERROR;
MACRO_SL SL_INVOKE_ON_SUCCESS;
MACRO_SL SL_KEY_SPECIFIED;
MACRO_SL SL_OPEN_PAGING_FILE;
MACRO_SL SL_OPEN_TARGET_DIRECTORY;
MACRO_SL SL_OVERRIDE_VERIFY_VOLUME;
MACRO_SL SL_PENDING_RETURNED;
MACRO_SL SL_READ_ACCESS_GRANTED;
MACRO_SL SL_RESTART_SCAN;
MACRO_SL SL_RETURN_SINGLE_ENTRY;
MACRO_SL SL_WATCH_TREE;
MACRO_SL SL_WRITE_ACCESS_GRANTED;
MACRO_SL SL_WRITE_THROUGH;
MACRO_KEY_SIGNATURE SOFTWARE_VERSION_KEY_SIGNATURE;
MACRO_SORT SORT_CHINESE_BIG5;
MACRO_SORT SORT_CHINESE_BOPOMOFO;
MACRO_SORT SORT_CHINESE_PRC;
MACRO_SORT SORT_CHINESE_PRCP;
MACRO_SORT SORT_CHINESE_UNICODE;
MACRO_SORT SORT_DEFAULT;
MACRO_SORT SORT_GEORGIAN_MODERN;
MACRO_SORT SORT_GEORGIAN_TRADITIONAL;
MACRO_SORT SORT_GERMAN_PHONE_BOOK;
MACRO_SORT SORT_HUNGARIAN_DEFAULT;
MACRO_SORT SORT_HUNGARIAN_TECHNICAL;
MACRO_SORT SORT_JAPANESE_UNICODE;
MACRO_SORT SORT_JAPANESE_XJIS;
MACRO_SORT SORT_KOREAN_KSC;
MACRO_SORT SORT_KOREAN_UNICODE;
MACRO_SPEAKER SPEAKER_ALL;
MACRO_SPEAKER SPEAKER_BACK_CENTER;
MACRO_SPEAKER SPEAKER_BACK_LEFT;
MACRO_SPEAKER SPEAKER_BACK_RIGHT;
MACRO_SPEAKER SPEAKER_FRONT_CENTER;
MACRO_SPEAKER SPEAKER_FRONT_LEFT;
MACRO_SPEAKER SPEAKER_FRONT_LEFT_OF_CENTER;
MACRO_SPEAKER SPEAKER_FRONT_RIGHT;
MACRO_SPEAKER SPEAKER_FRONT_RIGHT_OF_CENTER;
MACRO_SPEAKER SPEAKER_LOW_FREQUENCY;
MACRO_SPEAKER SPEAKER_RESERVED;
MACRO_SPEAKER SPEAKER_SIDE_LEFT;
MACRO_SPEAKER SPEAKER_SIDE_RIGHT;
MACRO_SPEAKER SPEAKER_TOP_BACK_CENTER;
MACRO_SPEAKER SPEAKER_TOP_BACK_LEFT;
MACRO_SPEAKER SPEAKER_TOP_BACK_RIGHT;
MACRO_SPEAKER SPEAKER_TOP_CENTER;
MACRO_SPEAKER SPEAKER_TOP_FRONT_CENTER;
MACRO_SPEAKER SPEAKER_TOP_FRONT_LEFT;
MACRO_SPEAKER SPEAKER_TOP_FRONT_RIGHT;
MACRO_SPECIAL SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION;
MACRO_SPECIFIC SPECIFIC_RIGHTS_ALL;
MACRO_KEY_SIGNATURE SPEC_ID_KEY_SIGNATURE;
MACRO_SPEED_100 SPEED_100_INDEX;
MACRO_SPEED_100 SPEED_200_INDEX;
MACRO_SPEED_100 SPEED_400_INDEX;
MACRO_SPEED_FLAGS SPEED_FLAGS_100;
MACRO_SPEED_FLAGS SPEED_FLAGS_1600;
MACRO_SPEED_FLAGS SPEED_FLAGS_200;
MACRO_SPEED_FLAGS SPEED_FLAGS_3200;
MACRO_SPEED_FLAGS SPEED_FLAGS_400;
MACRO_SPEED_FLAGS SPEED_FLAGS_800;
MACRO_SPEED_FLAGS SPEED_FLAGS_FASTEST;
MACRO_SPEED SPEED_MAP_LENGTH;
MACRO_LOCATION SPEED_MAP_LOCATION;
MACRO_SPIN SPIN_LOCK_ALREADY_OWNED;
MACRO_FAILURE SPIN_LOCK_INIT_FAILURE;
MACRO_SPIN SPIN_LOCK_NOT_OWNED;
MACRO_LOCATION SPLIT_TIMEOUT_HI_LOCATION;
MACRO_LOCATION SPLIT_TIMEOUT_LO_LOCATION;
$6482D7A0F8ECEE932DF178E2624E51B8 SRBDataBuffer;
_SRB_COMMAND SRB_BEGIN_FLUSH;
_SRB_COMMAND SRB_CHANGE_POWER_STATE;
_SRB_COMMAND SRB_CLOSE_DEVICE_INSTANCE;
_SRB_COMMAND SRB_CLOSE_MASTER_CLOCK;
_SRB_COMMAND SRB_CLOSE_STREAM;
_SRB_COMMAND SRB_DEVICE_METHOD;
_SRB_COMMAND SRB_END_FLUSH;
_SRB_COMMAND SRB_GET_DATA_FORMAT;
_SRB_COMMAND SRB_GET_DATA_INTERSECTION;
_SRB_COMMAND SRB_GET_DEVICE_PROPERTY;
_SRB_COMMAND SRB_GET_STREAM_INFO;
_SRB_COMMAND SRB_GET_STREAM_PROPERTY;
_SRB_COMMAND SRB_GET_STREAM_STATE;
MACRO_SRB SRB_HW_FLAGS_DATA_TRANSFER;
MACRO_SRB SRB_HW_FLAGS_STREAM_REQUEST;
_SRB_COMMAND SRB_INDICATE_MASTER_CLOCK;
_SRB_COMMAND SRB_INITIALIZATION_COMPLETE;
_SRB_COMMAND SRB_INITIALIZE_DEVICE;
_SRB_COMMAND SRB_OPEN_DEVICE_INSTANCE;
_SRB_COMMAND SRB_OPEN_MASTER_CLOCK;
_SRB_COMMAND SRB_OPEN_STREAM;
_SRB_COMMAND SRB_PAGING_OUT_DRIVER;
_SRB_COMMAND SRB_PROPOSE_DATA_FORMAT;
_SRB_COMMAND SRB_PROPOSE_STREAM_RATE;
_SRB_COMMAND SRB_READ_DATA;
_SRB_COMMAND SRB_SET_DATA_FORMAT;
_SRB_COMMAND SRB_SET_DEVICE_PROPERTY;
_SRB_COMMAND SRB_SET_STREAM_PROPERTY;
_SRB_COMMAND SRB_SET_STREAM_RATE;
_SRB_COMMAND SRB_SET_STREAM_STATE;
_SRB_COMMAND SRB_STREAM_METHOD;
_SRB_COMMAND SRB_SURPRISE_REMOVAL;
_SRB_COMMAND SRB_UNINITIALIZE_DEVICE;
_SRB_COMMAND SRB_UNKNOWN_DEVICE_COMMAND;
_SRB_COMMAND SRB_UNKNOWN_STREAM_COMMAND;
_SRB_COMMAND SRB_WRITE_DATA;
MACRO_SRC SRC_PACKETS_PER_NTSC_FRAME;
MACRO_SRC SRC_PACKETS_PER_PAL_FRAME;
MACRO_SRC_PACKET SRC_PACKET_SIZE_HDDV;
MACRO_SRC_PACKET SRC_PACKET_SIZE_MPEG2TS;
MACRO_SRC_PACKET SRC_PACKET_SIZE_SDDV;
MACRO_SRC_PACKET SRC_PACKET_SIZE_SDLDV;
MACRO_STANDARD STANDARD_RIGHTS_ALL;
MACRO_STANDARD STANDARD_RIGHTS_EXECUTE;
MACRO_STANDARD STANDARD_RIGHTS_READ;
MACRO_STANDARD STANDARD_RIGHTS_REQUIRED;
MACRO_STANDARD STANDARD_RIGHTS_WRITE;
MACRO_STATE STATE_CLEAR_LOCATION;
MACRO_STATE STATE_SET_LOCATION;
MACRO_STATUS_SEVERITY STATUS_ABANDONED;
MACRO_STATUS_SEVERITY STATUS_ABANDONED_WAIT_0;
MACRO_STATUS_SEVERITY STATUS_ABANDONED_WAIT_63;
MACRO_STATUS_CLUSTER STATUS_ABIOS_INVALID_COMMAND;
MACRO_STATUS_CLUSTER STATUS_ABIOS_INVALID_LID;
MACRO_STATUS_CLUSTER STATUS_ABIOS_INVALID_SELECTOR;
MACRO_STATUS_CLUSTER STATUS_ABIOS_LID_ALREADY_OWNED;
MACRO_STATUS_CLUSTER STATUS_ABIOS_LID_NOT_EXIST;
MACRO_STATUS_CLUSTER STATUS_ABIOS_NOT_LID_OWNER;
MACRO_STATUS_CLUSTER STATUS_ABIOS_NOT_PRESENT;
MACRO_STATUS_CLUSTER STATUS_ABIOS_SELECTOR_NOT_AVAILABLE;
MACRO_STATUS_CLUSTER STATUS_ACCESS_DENIED;
MACRO_STATUS_CLUSTER STATUS_ACCESS_DISABLED_BY_POLICY_DEFAULT;
MACRO_STATUS_CLUSTER STATUS_ACCESS_DISABLED_BY_POLICY_OTHER;
MACRO_STATUS_CLUSTER STATUS_ACCESS_DISABLED_BY_POLICY_PATH;
MACRO_STATUS_CLUSTER STATUS_ACCESS_DISABLED_BY_POLICY_PUBLISHER;
MACRO_STATUS_CLUSTER STATUS_ACCESS_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_ACCOUNT_DISABLED;
MACRO_STATUS_CLUSTER STATUS_ACCOUNT_EXPIRED;
MACRO_STATUS_CLUSTER STATUS_ACCOUNT_LOCKED_OUT;
MACRO_STATUS_CLUSTER STATUS_ACCOUNT_RESTRICTION;
MACRO_STATUS_ACPI STATUS_ACPI_ACQUIRE_GLOBAL_LOCK;
MACRO_STATUS_ACPI STATUS_ACPI_ADDRESS_NOT_MAPPED;
MACRO_STATUS_ACPI STATUS_ACPI_ALREADY_INITIALIZED;
MACRO_STATUS_ACPI STATUS_ACPI_ASSERT_FAILED;
MACRO_STATUS_ACPI STATUS_ACPI_FATAL;
MACRO_STATUS_ACPI STATUS_ACPI_HANDLER_COLLISION;
MACRO_STATUS_ACPI STATUS_ACPI_INCORRECT_ARGUMENT_COUNT;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_ACCESS_SIZE;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_ARGTYPE;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_ARGUMENT;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_DATA;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_EVENTTYPE;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_INDEX;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_MUTEX_LEVEL;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_OBJTYPE;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_OPCODE;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_REGION;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_SUPERNAME;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_TABLE;
MACRO_STATUS_ACPI STATUS_ACPI_INVALID_TARGETTYPE;
MACRO_STATUS_ACPI STATUS_ACPI_MUTEX_NOT_OWNED;
MACRO_STATUS_ACPI STATUS_ACPI_MUTEX_NOT_OWNER;
MACRO_STATUS_ACPI STATUS_ACPI_NOT_INITIALIZED;
MACRO_STATUS_ACPI STATUS_ACPI_POWER_REQUEST_FAILED;
MACRO_STATUS_ACPI STATUS_ACPI_REG_HANDLER_FAILED;
MACRO_STATUS_ACPI STATUS_ACPI_RS_ACCESS;
MACRO_STATUS_ACPI STATUS_ACPI_STACK_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_ADAPTER_HARDWARE_ERROR;
MACRO_STATUS_CLUSTER STATUS_ADDRESS_ALREADY_ASSOCIATED;
MACRO_STATUS_CLUSTER STATUS_ADDRESS_ALREADY_EXISTS;
MACRO_STATUS_CLUSTER STATUS_ADDRESS_CLOSED;
MACRO_STATUS_CLUSTER STATUS_ADDRESS_NOT_ASSOCIATED;
MACRO_STATUS_CLUSTER STATUS_AGENTS_EXHAUSTED;
MACRO_STATUS_SEVERITY STATUS_ALERTED;
MACRO_STATUS_CLUSTER STATUS_ALIAS_EXISTS;
MACRO_STATUS_CLUSTER STATUS_ALLOCATE_BUCKET;
MACRO_STATUS_CLUSTER STATUS_ALLOTTED_SPACE_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_ALL_SIDS_FILTERED;
MACRO_STATUS_CLUSTER STATUS_ALL_USER_TRUST_QUOTA_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_ALREADY_COMMITTED;
MACRO_STATUS_GUARD STATUS_ALREADY_DISCONNECTED;
MACRO_STATUS_OBJECT STATUS_ALREADY_WIN32;
MACRO_STATUS_CLUSTER STATUS_APPHELP_BLOCK;
MACRO_STATUS_CLUSTER STATUS_APP_INIT_FAILURE;
MACRO_STATUS_OBJECT STATUS_ARBITRATION_UNHANDLED;
MACRO_STATUS_CLUSTER STATUS_ARRAY_BOUNDS_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_AUDITING_DISABLED;
MACRO_STATUS_CLUSTER STATUS_AUDIT_FAILED;
MACRO_STATUS_CLUSTER STATUS_AUTHENTICATION_FIREWALL_FAILED;
MACRO_STATUS_CLUSTER STATUS_BACKUP_CONTROLLER;
MACRO_STATUS_CLUSTER STATUS_BAD_BINDINGS;
MACRO_STATUS_CLUSTER STATUS_BAD_COMPRESSION_BUFFER;
MACRO_STATUS_OBJECT STATUS_BAD_CURRENT_DIRECTORY;
MACRO_STATUS_CLUSTER STATUS_BAD_DESCRIPTOR_FORMAT;
MACRO_STATUS_CLUSTER STATUS_BAD_DEVICE_TYPE;
MACRO_STATUS_CLUSTER STATUS_BAD_DLL_ENTRYPOINT;
MACRO_STATUS_CLUSTER STATUS_BAD_FUNCTION_TABLE;
MACRO_STATUS_CLUSTER STATUS_BAD_IMPERSONATION_LEVEL;
MACRO_STATUS_CLUSTER STATUS_BAD_INHERITANCE_ACL;
MACRO_STATUS_CLUSTER STATUS_BAD_INITIAL_PC;
MACRO_STATUS_CLUSTER STATUS_BAD_INITIAL_STACK;
MACRO_STATUS_CLUSTER STATUS_BAD_LOGON_SESSION_STATE;
MACRO_STATUS_CLUSTER STATUS_BAD_MASTER_BOOT_RECORD;
MACRO_STATUS_CLUSTER STATUS_BAD_NETWORK_NAME;
MACRO_STATUS_CLUSTER STATUS_BAD_NETWORK_PATH;
MACRO_STATUS_CLUSTER STATUS_BAD_REMOTE_ADAPTER;
MACRO_STATUS_CLUSTER STATUS_BAD_SERVICE_ENTRYPOINT;
MACRO_STATUS_CLUSTER STATUS_BAD_STACK;
MACRO_STATUS_CLUSTER STATUS_BAD_TOKEN_TYPE;
MACRO_STATUS_CLUSTER STATUS_BAD_VALIDATION_CLASS;
MACRO_STATUS_CLUSTER STATUS_BAD_WORKING_SET_LIMIT;
MACRO_STATUS_GUARD STATUS_BEGINNING_OF_MEDIA;
MACRO_STATUS_CLUSTER STATUS_BIOS_FAILED_TO_CONNECT_INTERRUPT;
MACRO_STATUS_GUARD STATUS_BREAKPOINT;
MACRO_STATUS_SEVERITY STATUS_BUFFER_ALL_ZEROS;
MACRO_STATUS_GUARD STATUS_BUFFER_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_BUFFER_TOO_SMALL;
MACRO_STATUS_GUARD STATUS_BUS_RESET;
MACRO_STATUS_SEVERITY STATUS_CACHE_PAGE_LOCKED;
MACRO_STATUS_CLUSTER STATUS_CANCELLED;
MACRO_STATUS_CLUSTER STATUS_CANNOT_DELETE;
MACRO_STATUS_CLUSTER STATUS_CANNOT_IMPERSONATE;
MACRO_STATUS_CLUSTER STATUS_CANNOT_LOAD_REGISTRY_FILE;
MACRO_STATUS_CLUSTER STATUS_CANNOT_MAKE;
MACRO_STATUS_CLUSTER STATUS_CANT_ACCESS_DOMAIN_INFO;
MACRO_STATUS_CLUSTER STATUS_CANT_DISABLE_MANDATORY;
MACRO_STATUS_CLUSTER STATUS_CANT_ENABLE_DENY_ONLY;
MACRO_STATUS_CLUSTER STATUS_CANT_OPEN_ANONYMOUS;
MACRO_STATUS_CLUSTER STATUS_CANT_TERMINATE_SELF;
MACRO_STATUS_CLUSTER STATUS_CANT_WAIT;
MACRO_STATUS_OBJECT STATUS_CARDBUS_NOT_SUPPORTED;
MACRO_STATUS_OBJECT STATUS_CHECKING_FILE_SYSTEM;
MACRO_STATUS_CLUSTER STATUS_CHILD_MUST_BE_VOLATILE;
MACRO_STATUS_GUARD STATUS_CLEANER_CARTRIDGE_INSTALLED;
MACRO_STATUS_CLUSTER STATUS_CLIENT_SERVER_PARAMETERS_INVALID;
MACRO_STATUS_ACPI STATUS_CLUSTER_INVALID_NETWORK;
MACRO_STATUS_ACPI STATUS_CLUSTER_INVALID_NETWORK_PROVIDER;
MACRO_STATUS_ACPI STATUS_CLUSTER_INVALID_NODE;
MACRO_STATUS_ACPI STATUS_CLUSTER_INVALID_REQUEST;
MACRO_STATUS_ACPI STATUS_CLUSTER_JOIN_IN_PROGRESS;
MACRO_STATUS_ACPI STATUS_CLUSTER_JOIN_NOT_IN_PROGRESS;
MACRO_STATUS_ACPI STATUS_CLUSTER_LOCAL_NODE_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_CLUSTER_NETINTERFACE_EXISTS;
MACRO_STATUS_ACPI STATUS_CLUSTER_NETINTERFACE_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_CLUSTER_NETWORK_ALREADY_OFFLINE;
MACRO_STATUS_CLUSTER STATUS_CLUSTER_NETWORK_ALREADY_ONLINE;
MACRO_STATUS_ACPI STATUS_CLUSTER_NETWORK_EXISTS;
MACRO_STATUS_ACPI STATUS_CLUSTER_NETWORK_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_CLUSTER_NETWORK_NOT_INTERNAL;
MACRO_STATUS_CLUSTER STATUS_CLUSTER_NODE_ALREADY_DOWN;
MACRO_STATUS_CLUSTER STATUS_CLUSTER_NODE_ALREADY_MEMBER;
MACRO_STATUS_CLUSTER STATUS_CLUSTER_NODE_ALREADY_UP;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_DOWN;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_EXISTS;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_NOT_MEMBER;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_NOT_PAUSED;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_PAUSED;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_UNREACHABLE;
MACRO_STATUS_ACPI STATUS_CLUSTER_NODE_UP;
MACRO_STATUS_ACPI STATUS_CLUSTER_NO_NET_ADAPTERS;
MACRO_STATUS_ACPI STATUS_CLUSTER_NO_SECURITY_CONTEXT;
MACRO_STATUS_ACPI STATUS_CLUSTER_POISONED;
MACRO_STATUS_CLUSTER STATUS_COMMITMENT_LIMIT;
MACRO_STATUS_CLUSTER STATUS_COMMITMENT_MINIMUM;
MACRO_STATUS_CLUSTER STATUS_CONFLICTING_ADDRESSES;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_ABORTED;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_ACTIVE;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_COUNT_LIMIT;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_DISCONNECTED;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_INVALID;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_IN_USE;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_REFUSED;
MACRO_STATUS_CLUSTER STATUS_CONNECTION_RESET;
MACRO_STATUS_CONTINUE STATUS_CONTINUE_COMPLETION;
MACRO_STATUS_CLUSTER STATUS_CONTROL_C_EXIT;
MACRO_STATUS_CLUSTER STATUS_CONVERT_TO_LARGE;
MACRO_STATUS_CLUSTER STATUS_COPY_PROTECTION_FAILURE;
MACRO_STATUS_CLUSTER STATUS_CORRUPT_SYSTEM_FILE;
MACRO_STATUS_CLUSTER STATUS_COULD_NOT_INTERPRET;
MACRO_STATUS_SEVERITY STATUS_CRASH_DUMP;
MACRO_STATUS_CLUSTER STATUS_CRC_ERROR;
MACRO_STATUS_CLUSTER STATUS_CROSSREALM_DELEGATION_FAILURE;
MACRO_STATUS_CLUSTER STATUS_CRYPTO_SYSTEM_INVALID;
MACRO_STATUS_CLUSTER STATUS_CSS_AUTHENTICATION_FAILURE;
MACRO_STATUS_CLUSTER STATUS_CSS_KEY_NOT_ESTABLISHED;
MACRO_STATUS_CLUSTER STATUS_CSS_KEY_NOT_PRESENT;
MACRO_STATUS_CLUSTER STATUS_CSS_REGION_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_CSS_RESETS_EXHAUSTED;
MACRO_STATUS_CLUSTER STATUS_CSS_SCRAMBLED_SECTOR;
MACRO_STATUS_CLUSTER STATUS_CTL_FILE_NOT_SUPPORTED;
MACRO_STATUS_ACPI STATUS_CTX_BAD_VIDEO_MODE;
MACRO_STATUS_ACPI STATUS_CTX_CDM_CONNECT;
MACRO_STATUS_ACPI STATUS_CTX_CDM_DISCONNECT;
MACRO_STATUS_ACPI STATUS_CTX_CLIENT_LICENSE_IN_USE;
MACRO_STATUS_ACPI STATUS_CTX_CLIENT_LICENSE_NOT_SET;
MACRO_STATUS_ACPI STATUS_CTX_CLIENT_QUERY_TIMEOUT;
MACRO_STATUS_ACPI STATUS_CTX_CLOSE_PENDING;
MACRO_STATUS_ACPI STATUS_CTX_CONSOLE_CONNECT;
MACRO_STATUS_ACPI STATUS_CTX_CONSOLE_DISCONNECT;
MACRO_STATUS_ACPI STATUS_CTX_GRAPHICS_INVALID;
MACRO_STATUS_ACPI STATUS_CTX_INVALID_MODEMNAME;
MACRO_STATUS_ACPI STATUS_CTX_INVALID_PD;
MACRO_STATUS_ACPI STATUS_CTX_INVALID_WD;
MACRO_STATUS_ACPI STATUS_CTX_LICENSE_CLIENT_INVALID;
MACRO_STATUS_ACPI STATUS_CTX_LICENSE_EXPIRED;
MACRO_STATUS_ACPI STATUS_CTX_LICENSE_NOT_AVAILABLE;
MACRO_STATUS_ACPI STATUS_CTX_MODEM_INF_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_CTX_MODEM_RESPONSE_BUSY;
MACRO_STATUS_ACPI STATUS_CTX_MODEM_RESPONSE_NO_CARRIER;
MACRO_STATUS_ACPI STATUS_CTX_MODEM_RESPONSE_NO_DIALTONE;
MACRO_STATUS_ACPI STATUS_CTX_MODEM_RESPONSE_TIMEOUT;
MACRO_STATUS_ACPI STATUS_CTX_MODEM_RESPONSE_VOICE;
MACRO_STATUS_ACPI STATUS_CTX_NOT_CONSOLE;
MACRO_STATUS_ACPI STATUS_CTX_NO_OUTBUF;
MACRO_STATUS_ACPI STATUS_CTX_PD_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_CTX_RESPONSE_ERROR;
MACRO_STATUS_ACPI STATUS_CTX_SHADOW_DENIED;
MACRO_STATUS_ACPI STATUS_CTX_SHADOW_DISABLED;
MACRO_STATUS_ACPI STATUS_CTX_SHADOW_ENDED_BY_MODE_CHANGE;
MACRO_STATUS_ACPI STATUS_CTX_SHADOW_INVALID;
MACRO_STATUS_ACPI STATUS_CTX_SHADOW_NOT_RUNNING;
MACRO_STATUS_ACPI STATUS_CTX_TD_ERROR;
MACRO_STATUS_ACPI STATUS_CTX_WD_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_CTX_WINSTATION_ACCESS_DENIED;
MACRO_STATUS_ACPI STATUS_CTX_WINSTATION_BUSY;
MACRO_STATUS_ACPI STATUS_CTX_WINSTATION_NAME_COLLISION;
MACRO_STATUS_ACPI STATUS_CTX_WINSTATION_NAME_INVALID;
MACRO_STATUS_ACPI STATUS_CTX_WINSTATION_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_CURRENT_DOMAIN_NOT_ALLOWED;
MACRO_STATUS_GUARD STATUS_DATATYPE_MISALIGNMENT;
MACRO_STATUS_CLUSTER STATUS_DATATYPE_MISALIGNMENT_ERROR;
MACRO_STATUS_CLUSTER STATUS_DATA_ERROR;
MACRO_STATUS_CLUSTER STATUS_DATA_LATE_ERROR;
MACRO_STATUS_CLUSTER STATUS_DATA_NOT_ACCEPTED;
MACRO_STATUS_CLUSTER STATUS_DATA_OVERRUN;
MACRO_STATUS_CLUSTER STATUS_DEBUGGER_INACTIVE;
MACRO_STATUS_CLUSTER STATUS_DEBUG_ATTACH_FAILED;
MACRO_STATUS_CLUSTER STATUS_DECRYPTION_FAILED;
MACRO_STATUS_CLUSTER STATUS_DELAY_LOAD_FAILED;
MACRO_STATUS_CLUSTER STATUS_DELETE_PENDING;
MACRO_STATUS_CLUSTER STATUS_DESTINATION_ELEMENT_FULL;
MACRO_STATUS_CLUSTER STATUS_DEVICE_ALREADY_ATTACHED;
MACRO_STATUS_GUARD STATUS_DEVICE_BUSY;
MACRO_STATUS_CLUSTER STATUS_DEVICE_CONFIGURATION_ERROR;
MACRO_STATUS_CLUSTER STATUS_DEVICE_DATA_ERROR;
MACRO_STATUS_CLUSTER STATUS_DEVICE_DOES_NOT_EXIST;
MACRO_STATUS_CLUSTER STATUS_DEVICE_DOOR_OPEN;
MACRO_STATUS_CLUSTER STATUS_DEVICE_ENUMERATION_ERROR;
MACRO_STATUS_CLUSTER STATUS_DEVICE_NOT_CONNECTED;
MACRO_STATUS_CLUSTER STATUS_DEVICE_NOT_PARTITIONED;
MACRO_STATUS_CLUSTER STATUS_DEVICE_NOT_READY;
MACRO_STATUS_GUARD STATUS_DEVICE_OFF_LINE;
MACRO_STATUS_GUARD STATUS_DEVICE_PAPER_EMPTY;
MACRO_STATUS_GUARD STATUS_DEVICE_POWERED_OFF;
MACRO_STATUS_CLUSTER STATUS_DEVICE_POWER_FAILURE;
MACRO_STATUS_CLUSTER STATUS_DEVICE_PROTOCOL_ERROR;
MACRO_STATUS_CLUSTER STATUS_DEVICE_REMOVED;
MACRO_STATUS_CLUSTER STATUS_DEVICE_REQUIRES_CLEANING;
MACRO_STATUS_CLUSTER STATUS_DFS_EXIT_PATH_FOUND;
MACRO_STATUS_CLUSTER STATUS_DFS_UNAVAILABLE;
MACRO_STATUS_CLUSTER STATUS_DIRECTORY_IS_A_REPARSE_POINT;
MACRO_STATUS_CLUSTER STATUS_DIRECTORY_NOT_EMPTY;
MACRO_STATUS_CLUSTER STATUS_DIRECTORY_SERVICE_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_DISK_CORRUPT_ERROR;
MACRO_STATUS_CLUSTER STATUS_DISK_FULL;
MACRO_STATUS_CLUSTER STATUS_DISK_OPERATION_FAILED;
MACRO_STATUS_CLUSTER STATUS_DISK_RECALIBRATE_FAILED;
MACRO_STATUS_CLUSTER STATUS_DISK_RESET_FAILED;
MACRO_STATUS_CLUSTER STATUS_DLL_INIT_FAILED;
MACRO_STATUS_CLUSTER STATUS_DLL_INIT_FAILED_LOGOFF;
MACRO_STATUS_GUARD STATUS_DLL_MIGHT_BE_INCOMPATIBLE;
MACRO_STATUS_GUARD STATUS_DLL_MIGHT_BE_INSECURE;
MACRO_STATUS_CLUSTER STATUS_DLL_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_DOMAIN_CONTROLLER_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_DOMAIN_CTRLR_CONFIG_ERROR;
MACRO_STATUS_CLUSTER STATUS_DOMAIN_EXISTS;
MACRO_STATUS_CLUSTER STATUS_DOMAIN_LIMIT_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_DOMAIN_TRUST_INCONSISTENT;
MACRO_STATUS_CLUSTER STATUS_DOWNGRADE_DETECTED;
MACRO_STATUS_OBJECT STATUS_DRIVERS_LEAKING_LOCKED_PAGES;
MACRO_STATUS_CLUSTER STATUS_DRIVER_BLOCKED;
MACRO_STATUS_CLUSTER STATUS_DRIVER_BLOCKED_CRITICAL;
MACRO_STATUS_CLUSTER STATUS_DRIVER_CANCEL_TIMEOUT;
MACRO_STATUS_CLUSTER STATUS_DRIVER_DATABASE_ERROR;
MACRO_STATUS_CLUSTER STATUS_DRIVER_ENTRYPOINT_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_DRIVER_FAILED_PRIOR_UNLOAD;
MACRO_STATUS_CLUSTER STATUS_DRIVER_FAILED_SLEEP;
MACRO_STATUS_CLUSTER STATUS_DRIVER_INTERNAL_ERROR;
MACRO_STATUS_CLUSTER STATUS_DRIVER_ORDINAL_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_DRIVER_UNABLE_TO_LOAD;
MACRO_STATUS_CLUSTER STATUS_DS_ADMIN_LIMIT_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER;
MACRO_STATUS_CLUSTER STATUS_DS_ATTRIBUTE_OR_VALUE_EXISTS;
MACRO_STATUS_CLUSTER STATUS_DS_ATTRIBUTE_TYPE_UNDEFINED;
MACRO_STATUS_CLUSTER STATUS_DS_BUSY;
MACRO_STATUS_CLUSTER STATUS_DS_CANT_MOD_OBJ_CLASS;
MACRO_STATUS_CLUSTER STATUS_DS_CANT_MOD_PRIMARYGROUPID;
MACRO_STATUS_CLUSTER STATUS_DS_CANT_ON_NON_LEAF;
MACRO_STATUS_CLUSTER STATUS_DS_CANT_ON_RDN;
MACRO_STATUS_CLUSTER STATUS_DS_CANT_START;
MACRO_STATUS_CLUSTER STATUS_DS_CROSS_DOM_MOVE_FAILED;
MACRO_STATUS_CLUSTER STATUS_DS_DUPLICATE_ID_FOUND;
MACRO_STATUS_CLUSTER STATUS_DS_GC_NOT_AVAILABLE;
MACRO_STATUS_CLUSTER STATUS_DS_GC_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER;
MACRO_STATUS_CLUSTER STATUS_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER;
MACRO_STATUS_CLUSTER STATUS_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER;
MACRO_STATUS_CLUSTER STATUS_DS_GROUP_CONVERSION_ERROR;
MACRO_STATUS_CLUSTER STATUS_DS_HAVE_PRIMARY_MEMBERS;
MACRO_STATUS_CLUSTER STATUS_DS_INCORRECT_ROLE_OWNER;
MACRO_STATUS_CLUSTER STATUS_DS_INIT_FAILURE;
MACRO_STATUS_CLUSTER STATUS_DS_INIT_FAILURE_CONSOLE;
MACRO_STATUS_CLUSTER STATUS_DS_INVALID_ATTRIBUTE_SYNTAX;
MACRO_STATUS_CLUSTER STATUS_DS_INVALID_GROUP_TYPE;
MACRO_STATUS_CLUSTER STATUS_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER;
MACRO_STATUS_CLUSTER STATUS_DS_LOCAL_MEMBER_OF_LOCAL_ONLY;
MACRO_STATUS_CLUSTER STATUS_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED;
MACRO_STATUS_SEVERITY STATUS_DS_MEMBERSHIP_EVALUATED_LOCALLY;
MACRO_STATUS_CLUSTER STATUS_DS_NAME_NOT_UNIQUE;
MACRO_STATUS_CLUSTER STATUS_DS_NO_ATTRIBUTE_OR_VALUE;
MACRO_STATUS_CLUSTER STATUS_DS_NO_FPO_IN_UNIVERSAL_GROUPS;
MACRO_STATUS_CLUSTER STATUS_DS_NO_MORE_RIDS;
MACRO_STATUS_CLUSTER STATUS_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN;
MACRO_STATUS_CLUSTER STATUS_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN;
MACRO_STATUS_CLUSTER STATUS_DS_NO_RIDS_ALLOCATED;
MACRO_STATUS_CLUSTER STATUS_DS_OBJ_CLASS_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_DS_RIDMGR_INIT_ERROR;
MACRO_STATUS_CLUSTER STATUS_DS_SAM_INIT_FAILURE;
MACRO_STATUS_CLUSTER STATUS_DS_SAM_INIT_FAILURE_CONSOLE;
MACRO_STATUS_CLUSTER STATUS_DS_SENSITIVE_GROUP_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_DS_SHUTTING_DOWN;
MACRO_STATUS_CLUSTER STATUS_DS_UNAVAILABLE;
MACRO_STATUS_CLUSTER STATUS_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER;
MACRO_STATUS_CLUSTER STATUS_DS_VERSION_CHECK_FAILURE;
MACRO_STATUS_CLUSTER STATUS_DUPLICATE_NAME;
MACRO_STATUS_CLUSTER STATUS_DUPLICATE_OBJECTID;
MACRO_STATUS_CLUSTER STATUS_EAS_NOT_SUPPORTED;
MACRO_STATUS_CLUSTER STATUS_EA_CORRUPT_ERROR;
MACRO_STATUS_GUARD STATUS_EA_LIST_INCONSISTENT;
MACRO_STATUS_CLUSTER STATUS_EA_TOO_LARGE;
MACRO_STATUS_CLUSTER STATUS_EFS_ALG_BLOB_TOO_BIG;
MACRO_STATUS_CLUSTER STATUS_ENCRYPTION_FAILED;
MACRO_STATUS_CLUSTER STATUS_END_OF_FILE;
MACRO_STATUS_GUARD STATUS_END_OF_MEDIA;
MACRO_STATUS_CLUSTER STATUS_ENTRYPOINT_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_EOM_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_EVALUATION_EXPIRATION;
MACRO_STATUS_CLUSTER STATUS_EVENTLOG_CANT_START;
MACRO_STATUS_CLUSTER STATUS_EVENTLOG_FILE_CHANGED;
MACRO_STATUS_CLUSTER STATUS_EVENTLOG_FILE_CORRUPT;
MACRO_STATUS_OBJECT STATUS_EVENT_DONE;
MACRO_STATUS_OBJECT STATUS_EVENT_PENDING;
MACRO_STATUS_GUARD STATUS_EXTRANEOUS_INFORMATION;
MACRO_STATUS_CLUSTER STATUS_FAILED_DRIVER_ENTRY;
MACRO_STATUS_CLUSTER STATUS_FAIL_CHECK;
MACRO_STATUS_OBJECT STATUS_FATAL_APP_EXIT;
MACRO_STATUS_GUARD STATUS_FILEMARK_DETECTED;
MACRO_STATUS_CLUSTER STATUS_FILES_OPEN;
MACRO_STATUS_CLUSTER STATUS_FILE_CLOSED;
MACRO_STATUS_CLUSTER STATUS_FILE_CORRUPT_ERROR;
MACRO_STATUS_CLUSTER STATUS_FILE_DELETED;
MACRO_STATUS_CLUSTER STATUS_FILE_ENCRYPTED;
MACRO_STATUS_CLUSTER STATUS_FILE_FORCED_CLOSED;
MACRO_STATUS_CLUSTER STATUS_FILE_INVALID;
MACRO_STATUS_CLUSTER STATUS_FILE_IS_A_DIRECTORY;
MACRO_STATUS_CLUSTER STATUS_FILE_IS_OFFLINE;
MACRO_STATUS_CLUSTER STATUS_FILE_LOCK_CONFLICT;
MACRO_STATUS_CLUSTER STATUS_FILE_NOT_ENCRYPTED;
MACRO_STATUS_CLUSTER STATUS_FILE_RENAMED;
MACRO_STATUS_OBJECT STATUS_FIRMWARE_UPDATED;
MACRO_STATUS_CLUSTER STATUS_FLOAT_DENORMAL_OPERAND;
MACRO_STATUS_CLUSTER STATUS_FLOAT_DIVIDE_BY_ZERO;
MACRO_STATUS_CLUSTER STATUS_FLOAT_INEXACT_RESULT;
MACRO_STATUS_CLUSTER STATUS_FLOAT_INVALID_OPERATION;
MACRO_STATUS_CLUSTER STATUS_FLOAT_MULTIPLE_FAULTS;
MACRO_STATUS_CLUSTER STATUS_FLOAT_MULTIPLE_TRAPS;
MACRO_STATUS_CLUSTER STATUS_FLOAT_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_FLOAT_STACK_CHECK;
MACRO_STATUS_CLUSTER STATUS_FLOAT_UNDERFLOW;
MACRO_STATUS_CLUSTER STATUS_FLOPPY_BAD_REGISTERS;
MACRO_STATUS_CLUSTER STATUS_FLOPPY_ID_MARK_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_FLOPPY_UNKNOWN_ERROR;
MACRO_STATUS_CLUSTER STATUS_FLOPPY_VOLUME;
MACRO_STATUS_CLUSTER STATUS_FLOPPY_WRONG_CYLINDER;
MACRO_STATUS_CLUSTER STATUS_FOUND_OUT_OF_SCOPE;
MACRO_STATUS_CLUSTER STATUS_FREE_VM_NOT_AT_BASE;
MACRO_STATUS_SEVERITY STATUS_FSFILTER_OP_COMPLETED_SUCCESSFULLY;
MACRO_STATUS_CLUSTER STATUS_FS_DRIVER_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_FT_MISSING_MEMBER;
MACRO_STATUS_CLUSTER STATUS_FT_ORPHANING;
MACRO_STATUS_OBJECT STATUS_FT_READ_RECOVERY_FROM_BACKUP;
MACRO_STATUS_OBJECT STATUS_FT_WRITE_RECOVERY;
MACRO_STATUS_CLUSTER STATUS_FULLSCREEN_MODE;
MACRO_STATUS_CLUSTER STATUS_GENERIC_NOT_MAPPED;
MACRO_STATUS_CLUSTER STATUS_GRACEFUL_DISCONNECT;
MACRO_STATUS_CLUSTER STATUS_GROUP_EXISTS;
MACRO_STATUS_GUARD STATUS_GUARD_PAGE_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_GUIDS_EXHAUSTED;
MACRO_STATUS_GUARD STATUS_GUID_SUBSTITUTION_MADE;
MACRO_STATUS_GUARD STATUS_HANDLES_CLOSED;
MACRO_STATUS_CLUSTER STATUS_HANDLE_NOT_CLOSABLE;
MACRO_STATUS_OBJECT STATUS_HIBERNATED;
MACRO_STATUS_CLUSTER STATUS_HIBERNATION_FAILURE;
MACRO_STATUS_CLUSTER STATUS_HOST_DOWN;
MACRO_STATUS_CLUSTER STATUS_HOST_UNREACHABLE;
MACRO_STATUS_CLUSTER STATUS_HUNG_DISPLAY_DRIVER_THREAD;
MACRO_STATUS_CLUSTER STATUS_ILLEGAL_CHARACTER;
MACRO_STATUS_CLUSTER STATUS_ILLEGAL_DLL_RELOCATION;
MACRO_STATUS_CLUSTER STATUS_ILLEGAL_ELEMENT_ADDRESS;
MACRO_STATUS_CLUSTER STATUS_ILLEGAL_FLOAT_CONTEXT;
MACRO_STATUS_CLUSTER STATUS_ILLEGAL_FUNCTION;
MACRO_STATUS_CLUSTER STATUS_ILLEGAL_INSTRUCTION;
MACRO_STATUS_CLUSTER STATUS_ILL_FORMED_PASSWORD;
MACRO_STATUS_CLUSTER STATUS_ILL_FORMED_SERVICE_ENTRY;
MACRO_STATUS_CLUSTER STATUS_IMAGE_ALREADY_LOADED;
MACRO_STATUS_CLUSTER STATUS_IMAGE_CHECKSUM_MISMATCH;
MACRO_STATUS_OBJECT STATUS_IMAGE_MACHINE_TYPE_MISMATCH;
MACRO_STATUS_OBJECT STATUS_IMAGE_MACHINE_TYPE_MISMATCH_EXE;
MACRO_STATUS_CLUSTER STATUS_IMAGE_MP_UP_MISMATCH;
MACRO_STATUS_OBJECT STATUS_IMAGE_NOT_AT_BASE;
MACRO_STATUS_CLUSTER STATUS_INCOMPATIBLE_FILE_MAP;
MACRO_STATUS_CLUSTER STATUS_INFO_LENGTH_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_INSTANCE_NOT_AVAILABLE;
MACRO_STATUS_CLUSTER STATUS_INSTRUCTION_MISALIGNMENT;
MACRO_STATUS_CLUSTER STATUS_INSUFFICIENT_LOGON_INFO;
MACRO_STATUS_CLUSTER STATUS_INSUFFICIENT_POWER;
MACRO_STATUS_CLUSTER STATUS_INSUFFICIENT_RESOURCES;
MACRO_STATUS_CLUSTER STATUS_INSUFF_SERVER_RESOURCES;
MACRO_STATUS_CLUSTER STATUS_INTEGER_DIVIDE_BY_ZERO;
MACRO_STATUS_CLUSTER STATUS_INTEGER_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_INTERNAL_DB_CORRUPTION;
MACRO_STATUS_CLUSTER STATUS_INTERNAL_DB_ERROR;
MACRO_STATUS_CLUSTER STATUS_INTERNAL_ERROR;
MACRO_STATUS_CLUSTER STATUS_INVALID_ACCOUNT_NAME;
MACRO_STATUS_CLUSTER STATUS_INVALID_ACL;
MACRO_STATUS_CLUSTER STATUS_INVALID_ADDRESS;
MACRO_STATUS_CLUSTER STATUS_INVALID_ADDRESS_COMPONENT;
MACRO_STATUS_CLUSTER STATUS_INVALID_ADDRESS_WILDCARD;
MACRO_STATUS_CLUSTER STATUS_INVALID_BLOCK_LENGTH;
MACRO_STATUS_CLUSTER STATUS_INVALID_BUFFER_SIZE;
MACRO_STATUS_CLUSTER STATUS_INVALID_CID;
MACRO_STATUS_CLUSTER STATUS_INVALID_COMPUTER_NAME;
MACRO_STATUS_CLUSTER STATUS_INVALID_CONNECTION;
MACRO_STATUS_CLUSTER STATUS_INVALID_DEVICE_OBJECT_PARAMETER;
MACRO_STATUS_CLUSTER STATUS_INVALID_DEVICE_REQUEST;
MACRO_STATUS_CLUSTER STATUS_INVALID_DEVICE_STATE;
MACRO_STATUS_CLUSTER STATUS_INVALID_DISPOSITION;
MACRO_STATUS_CLUSTER STATUS_INVALID_DOMAIN_ROLE;
MACRO_STATUS_CLUSTER STATUS_INVALID_DOMAIN_STATE;
MACRO_STATUS_GUARD STATUS_INVALID_EA_FLAG;
MACRO_STATUS_GUARD STATUS_INVALID_EA_NAME;
MACRO_STATUS_CLUSTER STATUS_INVALID_FILE_FOR_SECTION;
MACRO_STATUS_INVALID STATUS_INVALID_GENERATION;
MACRO_STATUS_CLUSTER STATUS_INVALID_GROUP_ATTRIBUTES;
MACRO_STATUS_CLUSTER STATUS_INVALID_HANDLE;
MACRO_STATUS_CLUSTER STATUS_INVALID_HW_PROFILE;
MACRO_STATUS_CLUSTER STATUS_INVALID_ID_AUTHORITY;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_FORMAT;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_LE_FORMAT;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_NE_FORMAT;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_NOT_MZ;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_PROTECT;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_WIN_16;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_WIN_32;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMAGE_WIN_64;
MACRO_STATUS_CLUSTER STATUS_INVALID_IMPORT_OF_NON_DLL;
MACRO_STATUS_CLUSTER STATUS_INVALID_INFO_CLASS;
MACRO_STATUS_CLUSTER STATUS_INVALID_LDT_DESCRIPTOR;
MACRO_STATUS_CLUSTER STATUS_INVALID_LDT_OFFSET;
MACRO_STATUS_CLUSTER STATUS_INVALID_LDT_SIZE;
MACRO_STATUS_CLUSTER STATUS_INVALID_LEVEL;
MACRO_STATUS_CLUSTER STATUS_INVALID_LOCK_SEQUENCE;
MACRO_STATUS_CLUSTER STATUS_INVALID_LOGON_HOURS;
MACRO_STATUS_CLUSTER STATUS_INVALID_LOGON_TYPE;
MACRO_STATUS_CLUSTER STATUS_INVALID_MEMBER;
MACRO_STATUS_CLUSTER STATUS_INVALID_NETWORK_RESPONSE;
MACRO_STATUS_CLUSTER STATUS_INVALID_OPLOCK_PROTOCOL;
MACRO_STATUS_CLUSTER STATUS_INVALID_OWNER;
MACRO_STATUS_CLUSTER STATUS_INVALID_PAGE_PROTECTION;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_1;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_10;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_11;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_12;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_2;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_3;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_4;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_5;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_6;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_7;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_8;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_9;
MACRO_STATUS_CLUSTER STATUS_INVALID_PARAMETER_MIX;
MACRO_STATUS_CLUSTER STATUS_INVALID_PIPE_STATE;
MACRO_STATUS_CLUSTER STATUS_INVALID_PLUGPLAY_DEVICE_PATH;
MACRO_STATUS_CLUSTER STATUS_INVALID_PORT_ATTRIBUTES;
MACRO_STATUS_CLUSTER STATUS_INVALID_PORT_HANDLE;
MACRO_STATUS_CLUSTER STATUS_INVALID_PRIMARY_GROUP;
MACRO_STATUS_CLUSTER STATUS_INVALID_QUOTA_LOWER;
MACRO_STATUS_CLUSTER STATUS_INVALID_READ_MODE;
MACRO_STATUS_CLUSTER STATUS_INVALID_SECURITY_DESCR;
MACRO_STATUS_CLUSTER STATUS_INVALID_SERVER_STATE;
MACRO_STATUS_CLUSTER STATUS_INVALID_SID;
MACRO_STATUS_CLUSTER STATUS_INVALID_SUB_AUTHORITY;
MACRO_STATUS_CLUSTER STATUS_INVALID_SYSTEM_SERVICE;
MACRO_STATUS_CLUSTER STATUS_INVALID_UNWIND_TARGET;
MACRO_STATUS_CLUSTER STATUS_INVALID_USER_BUFFER;
MACRO_STATUS_CLUSTER STATUS_INVALID_VARIANT;
MACRO_STATUS_CLUSTER STATUS_INVALID_VIEW_SIZE;
MACRO_STATUS_CLUSTER STATUS_INVALID_VOLUME_LABEL;
MACRO_STATUS_CLUSTER STATUS_INVALID_WORKSTATION;
MACRO_STATUS_CLUSTER STATUS_IN_PAGE_ERROR;
MACRO_STATUS_CLUSTER STATUS_IO_DEVICE_ERROR;
MACRO_STATUS_CLUSTER STATUS_IO_PRIVILEGE_FAILED;
MACRO_STATUS_CLUSTER STATUS_IO_REPARSE_DATA_INVALID;
MACRO_STATUS_CLUSTER STATUS_IO_REPARSE_TAG_INVALID;
MACRO_STATUS_CLUSTER STATUS_IO_REPARSE_TAG_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_IO_REPARSE_TAG_NOT_HANDLED;
MACRO_STATUS_CLUSTER STATUS_IO_TIMEOUT;
MACRO_STATUS_CLUSTER STATUS_IP_ADDRESS_CONFLICT1;
MACRO_STATUS_CLUSTER STATUS_IP_ADDRESS_CONFLICT2;
MACRO_STATUS_CLUSTER STATUS_ISSUING_CA_UNTRUSTED;
MACRO_STATUS_CLUSTER STATUS_ISSUING_CA_UNTRUSTED_KDC;
MACRO_STATUS_CLUSTER STATUS_JOURNAL_DELETE_IN_PROGRESS;
MACRO_STATUS_CLUSTER STATUS_JOURNAL_ENTRY_DELETED;
MACRO_STATUS_CLUSTER STATUS_JOURNAL_NOT_ACTIVE;
MACRO_STATUS_CLUSTER STATUS_KDC_CERT_EXPIRED;
MACRO_STATUS_CLUSTER STATUS_KDC_CERT_REVOKED;
MACRO_STATUS_CLUSTER STATUS_KDC_INVALID_REQUEST;
MACRO_STATUS_CLUSTER STATUS_KDC_UNABLE_TO_REFER;
MACRO_STATUS_CLUSTER STATUS_KDC_UNKNOWN_ETYPE;
MACRO_STATUS_SEVERITY STATUS_KERNEL_APC;
MACRO_STATUS_CLUSTER STATUS_KEY_DELETED;
MACRO_STATUS_CLUSTER STATUS_KEY_HAS_CHILDREN;
MACRO_STATUS_CLUSTER STATUS_LAST_ADMIN;
MACRO_STATUS_CLUSTER STATUS_LICENSE_QUOTA_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_LICENSE_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_LINK_FAILED;
MACRO_STATUS_CLUSTER STATUS_LINK_TIMEOUT;
MACRO_STATUS_CLUSTER STATUS_LM_CROSS_ENCRYPTION_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_LOCAL_DISCONNECT;
MACRO_STATUS_OBJECT STATUS_LOCAL_USER_SESSION_KEY;
MACRO_STATUS_CLUSTER STATUS_LOCK_NOT_GRANTED;
MACRO_STATUS_CLUSTER STATUS_LOGIN_TIME_RESTRICTION;
MACRO_STATUS_CLUSTER STATUS_LOGIN_WKSTA_RESTRICTION;
MACRO_STATUS_CLUSTER STATUS_LOGON_FAILURE;
MACRO_STATUS_CLUSTER STATUS_LOGON_NOT_GRANTED;
MACRO_STATUS_CLUSTER STATUS_LOGON_SERVER_CONFLICT;
MACRO_STATUS_CLUSTER STATUS_LOGON_SESSION_COLLISION;
MACRO_STATUS_CLUSTER STATUS_LOGON_SESSION_EXISTS;
MACRO_STATUS_CLUSTER STATUS_LOGON_TYPE_NOT_GRANTED;
MACRO_STATUS_CLUSTER STATUS_LOG_FILE_FULL;
MACRO_STATUS_OBJECT STATUS_LOG_HARD_ERROR;
MACRO_STATUS_GUARD STATUS_LONGJUMP;
MACRO_STATUS_CLUSTER STATUS_LOST_WRITEBEHIND_DATA;
MACRO_STATUS_CLUSTER STATUS_LPC_REPLY_LOST;
MACRO_STATUS_CLUSTER STATUS_LUIDS_EXHAUSTED;
MACRO_STATUS_CLUSTER STATUS_MAGAZINE_NOT_PRESENT;
MACRO_STATUS_CLUSTER STATUS_MAPPED_ALIGNMENT;
MACRO_STATUS_CLUSTER STATUS_MAPPED_FILE_SIZE_ZERO;
MACRO_STATUS_CLUSTER STATUS_MARSHALL_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_MAX_REFERRALS_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_MCA_OCCURED;
MACRO_STATUS_GUARD STATUS_MEDIA_CHANGED;
MACRO_STATUS_GUARD STATUS_MEDIA_CHECK;
MACRO_STATUS_CLUSTER STATUS_MEDIA_WRITE_PROTECTED;
MACRO_STATUS_CLUSTER STATUS_MEMBERS_PRIMARY_GROUP;
MACRO_STATUS_CLUSTER STATUS_MEMBER_IN_ALIAS;
MACRO_STATUS_CLUSTER STATUS_MEMBER_IN_GROUP;
MACRO_STATUS_CLUSTER STATUS_MEMBER_NOT_IN_ALIAS;
MACRO_STATUS_CLUSTER STATUS_MEMBER_NOT_IN_GROUP;
MACRO_STATUS_CLUSTER STATUS_MEMORY_NOT_ALLOCATED;
MACRO_STATUS_CLUSTER STATUS_MESSAGE_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_MFT_TOO_FRAGMENTED;
MACRO_STATUS_CLUSTER STATUS_MISSING_SYSTEMFILE;
MACRO_STATUS_SEVERITY STATUS_MORE_ENTRIES;
MACRO_STATUS_CLUSTER STATUS_MORE_PROCESSING_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_MOUNT_POINT_NOT_RESOLVED;
MACRO_STATUS_OBJECT STATUS_MP_PROCESSOR_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_MULTIPLE_FAULT_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_MUST_BE_KDC;
MACRO_STATUS_CLUSTER STATUS_MUTANT_LIMIT_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_MUTANT_NOT_OWNED;
MACRO_STATUS_CLUSTER STATUS_MUTUAL_AUTHENTICATION_FAILED;
MACRO_STATUS_CLUSTER STATUS_NAME_TOO_LONG;
MACRO_STATUS_CLUSTER STATUS_NETLOGON_NOT_STARTED;
MACRO_STATUS_CLUSTER STATUS_NETWORK_ACCESS_DENIED;
MACRO_STATUS_CLUSTER STATUS_NETWORK_BUSY;
MACRO_STATUS_CLUSTER STATUS_NETWORK_CREDENTIAL_CONFLICT;
MACRO_STATUS_CLUSTER STATUS_NETWORK_NAME_DELETED;
MACRO_STATUS_CLUSTER STATUS_NETWORK_SESSION_EXPIRED;
MACRO_STATUS_CLUSTER STATUS_NETWORK_UNREACHABLE;
MACRO_STATUS_CLUSTER STATUS_NET_WRITE_FAULT;
MACRO_STATUS_CLUSTER STATUS_NOINTERFACE;
MACRO_STATUS_CLUSTER STATUS_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT;
MACRO_STATUS_CLUSTER STATUS_NOLOGON_SERVER_TRUST_ACCOUNT;
MACRO_STATUS_CLUSTER STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT;
MACRO_STATUS_CLUSTER STATUS_NONCONTINUABLE_EXCEPTION;
MACRO_STATUS_CLUSTER STATUS_NONEXISTENT_EA_ENTRY;
MACRO_STATUS_CLUSTER STATUS_NONEXISTENT_SECTOR;
MACRO_STATUS_CLUSTER STATUS_NONE_MAPPED;
MACRO_STATUS_SEVERITY STATUS_NOTHING_TO_TERMINATE;
MACRO_STATUS_SEVERITY STATUS_NOTIFY_CLEANUP;
MACRO_STATUS_SEVERITY STATUS_NOTIFY_ENUM_DIR;
MACRO_STATUS_SEVERITY STATUS_NOT_ALL_ASSIGNED;
MACRO_STATUS_CLUSTER STATUS_NOT_A_DIRECTORY;
MACRO_STATUS_CLUSTER STATUS_NOT_A_REPARSE_POINT;
MACRO_STATUS_CLUSTER STATUS_NOT_CLIENT_SESSION;
MACRO_STATUS_CLUSTER STATUS_NOT_COMMITTED;
MACRO_STATUS_CLUSTER STATUS_NOT_EXPORT_FORMAT;
MACRO_STATUS_CLUSTER STATUS_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_NOT_IMPLEMENTED;
MACRO_STATUS_CLUSTER STATUS_NOT_LOCKED;
MACRO_STATUS_CLUSTER STATUS_NOT_LOGON_PROCESS;
MACRO_STATUS_CLUSTER STATUS_NOT_MAPPED_DATA;
MACRO_STATUS_CLUSTER STATUS_NOT_MAPPED_VIEW;
MACRO_STATUS_CLUSTER STATUS_NOT_REGISTRY_FILE;
MACRO_STATUS_CLUSTER STATUS_NOT_SAFE_MODE_DRIVER;
MACRO_STATUS_CLUSTER STATUS_NOT_SAME_DEVICE;
MACRO_STATUS_CLUSTER STATUS_NOT_SERVER_SESSION;
MACRO_STATUS_CLUSTER STATUS_NOT_SUPPORTED;
MACRO_STATUS_CLUSTER STATUS_NOT_SUPPORTED_ON_SBS;
MACRO_STATUS_CLUSTER STATUS_NOT_TINY_STREAM;
MACRO_STATUS_CLUSTER STATUS_NO_BROWSER_SERVERS_FOUND;
MACRO_STATUS_CLUSTER STATUS_NO_CALLBACK_ACTIVE;
MACRO_STATUS_GUARD STATUS_NO_DATA_DETECTED;
MACRO_STATUS_CLUSTER STATUS_NO_EAS_ON_FILE;
MACRO_STATUS_CLUSTER STATUS_NO_EFS;
MACRO_STATUS_CLUSTER STATUS_NO_EVENT_PAIR;
MACRO_STATUS_CLUSTER STATUS_NO_GUID_TRANSLATION;
MACRO_STATUS_CLUSTER STATUS_NO_IMPERSONATION_TOKEN;
MACRO_STATUS_GUARD STATUS_NO_INHERITANCE;
MACRO_STATUS_CLUSTER STATUS_NO_IP_ADDRESSES;
MACRO_STATUS_CLUSTER STATUS_NO_KERB_KEY;
MACRO_STATUS_CLUSTER STATUS_NO_LDT;
MACRO_STATUS_CLUSTER STATUS_NO_LOGON_SERVERS;
MACRO_STATUS_CLUSTER STATUS_NO_LOG_SPACE;
MACRO_STATUS_CLUSTER STATUS_NO_MATCH;
MACRO_STATUS_CLUSTER STATUS_NO_MEDIA;
MACRO_STATUS_CLUSTER STATUS_NO_MEDIA_IN_DEVICE;
MACRO_STATUS_CLUSTER STATUS_NO_MEMORY;
MACRO_STATUS_GUARD STATUS_NO_MORE_EAS;
MACRO_STATUS_GUARD STATUS_NO_MORE_ENTRIES;
MACRO_STATUS_GUARD STATUS_NO_MORE_FILES;
MACRO_STATUS_CLUSTER STATUS_NO_MORE_MATCHES;
MACRO_STATUS_CLUSTER STATUS_NO_PAGEFILE;
MACRO_STATUS_CLUSTER STATUS_NO_PA_DATA;
MACRO_STATUS_SEVERITY STATUS_NO_QUOTAS_FOR_ACCOUNT;
MACRO_STATUS_CLUSTER STATUS_NO_RECOVERY_POLICY;
MACRO_STATUS_CLUSTER STATUS_NO_S4U_PROT_SUPPORT;
MACRO_STATUS_CLUSTER STATUS_NO_SECURITY_ON_OBJECT;
MACRO_STATUS_CLUSTER STATUS_NO_SPOOL_SPACE;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_ALIAS;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_DEVICE;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_DOMAIN;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_FILE;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_GROUP;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_LOGON_SESSION;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_MEMBER;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_PACKAGE;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_PRIVILEGE;
MACRO_STATUS_CLUSTER STATUS_NO_SUCH_USER;
MACRO_STATUS_CLUSTER STATUS_NO_TGT_REPLY;
MACRO_STATUS_CLUSTER STATUS_NO_TOKEN;
MACRO_STATUS_CLUSTER STATUS_NO_TRACKING_SERVICE;
MACRO_STATUS_CLUSTER STATUS_NO_TRUST_LSA_SECRET;
MACRO_STATUS_CLUSTER STATUS_NO_TRUST_SAM_ACCOUNT;
MACRO_STATUS_CLUSTER STATUS_NO_USER_KEYS;
MACRO_STATUS_CLUSTER STATUS_NO_USER_SESSION_KEY;
MACRO_STATUS_OBJECT STATUS_NO_YIELD_PERFORMED;
MACRO_STATUS_CLUSTER STATUS_NT_CROSS_ENCRYPTION_REQUIRED;
MACRO_STATUS_OBJECT STATUS_NULL_LM_PASSWORD;
MACRO_STATUS_CLUSTER STATUS_OBJECTID_EXISTS;
MACRO_STATUS_CLUSTER STATUS_OBJECTID_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_OBJECT_NAME_COLLISION;
MACRO_STATUS_OBJECT STATUS_OBJECT_NAME_EXISTS;
MACRO_STATUS_CLUSTER STATUS_OBJECT_NAME_INVALID;
MACRO_STATUS_CLUSTER STATUS_OBJECT_NAME_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_OBJECT_PATH_INVALID;
MACRO_STATUS_CLUSTER STATUS_OBJECT_PATH_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_OBJECT_PATH_SYNTAX_BAD;
MACRO_STATUS_CLUSTER STATUS_OBJECT_TYPE_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_ONLY_IF_CONNECTED;
MACRO_STATUS_CLUSTER STATUS_OPEN_FAILED;
MACRO_STATUS_SEVERITY STATUS_OPLOCK_BREAK_IN_PROGRESS;
MACRO_STATUS_CLUSTER STATUS_OPLOCK_NOT_GRANTED;
MACRO_STATUS_CLUSTER STATUS_ORDINAL_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_PAGEFILE_CREATE_FAILED;
MACRO_STATUS_CLUSTER STATUS_PAGEFILE_QUOTA;
MACRO_STATUS_CLUSTER STATUS_PAGEFILE_QUOTA_EXCEEDED;
MACRO_STATUS_SEVERITY STATUS_PAGE_FAULT_COPY_ON_WRITE;
MACRO_STATUS_SEVERITY STATUS_PAGE_FAULT_DEMAND_ZERO;
MACRO_STATUS_SEVERITY STATUS_PAGE_FAULT_GUARD_PAGE;
MACRO_STATUS_SEVERITY STATUS_PAGE_FAULT_PAGING_FILE;
MACRO_STATUS_SEVERITY STATUS_PAGE_FAULT_TRANSITION;
MACRO_STATUS_CLUSTER STATUS_PARAMETER_QUOTA_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_PARITY_ERROR;
MACRO_STATUS_GUARD STATUS_PARTIAL_COPY;
MACRO_STATUS_CLUSTER STATUS_PARTITION_FAILURE;
MACRO_STATUS_CLUSTER STATUS_PASSWORD_EXPIRED;
MACRO_STATUS_CLUSTER STATUS_PASSWORD_MUST_CHANGE;
MACRO_STATUS_CLUSTER STATUS_PASSWORD_RESTRICTION;
MACRO_STATUS_CLUSTER STATUS_PATH_NOT_COVERED;
MACRO_STATUS_SEVERITY STATUS_PENDING;
MACRO_STATUS_CLUSTER STATUS_PER_USER_TRUST_QUOTA_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_PIPE_BROKEN;
MACRO_STATUS_CLUSTER STATUS_PIPE_BUSY;
MACRO_STATUS_CLUSTER STATUS_PIPE_CLOSING;
MACRO_STATUS_CLUSTER STATUS_PIPE_CONNECTED;
MACRO_STATUS_CLUSTER STATUS_PIPE_DISCONNECTED;
MACRO_STATUS_CLUSTER STATUS_PIPE_EMPTY;
MACRO_STATUS_CLUSTER STATUS_PIPE_LISTENING;
MACRO_STATUS_CLUSTER STATUS_PIPE_NOT_AVAILABLE;
MACRO_STATUS_CLUSTER STATUS_PKINIT_CLIENT_FAILURE;
MACRO_STATUS_CLUSTER STATUS_PKINIT_FAILURE;
MACRO_STATUS_CLUSTER STATUS_PKINIT_NAME_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_PLUGPLAY_NO_DEVICE;
MACRO_STATUS_GUARD STATUS_PLUGPLAY_QUERY_VETOED;
MACRO_STATUS_ACPI STATUS_PNP_BAD_MPS_TABLE;
MACRO_STATUS_ACPI STATUS_PNP_INVALID_ID;
MACRO_STATUS_ACPI STATUS_PNP_IRQ_TRANSLATION_FAILED;
MACRO_STATUS_CLUSTER STATUS_PNP_REBOOT_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_PNP_RESTART_ENUMERATION;
MACRO_STATUS_ACPI STATUS_PNP_TRANSLATION_FAILED;
MACRO_STATUS_CLUSTER STATUS_POLICY_OBJECT_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_POLICY_ONLY_IN_DS;
MACRO_STATUS_CLUSTER STATUS_PORT_ALREADY_SET;
MACRO_STATUS_CLUSTER STATUS_PORT_CONNECTION_REFUSED;
MACRO_STATUS_CLUSTER STATUS_PORT_DISCONNECTED;
MACRO_STATUS_CLUSTER STATUS_PORT_MESSAGE_TOO_LONG;
MACRO_STATUS_CLUSTER STATUS_PORT_NOT_SET;
MACRO_STATUS_CLUSTER STATUS_PORT_UNREACHABLE;
MACRO_STATUS_CLUSTER STATUS_POSSIBLE_DEADLOCK;
MACRO_STATUS_CLUSTER STATUS_POWER_STATE_INVALID;
MACRO_STATUS_OBJECT STATUS_PREDEFINED_HANDLE;
MACRO_STATUS_CLUSTER STATUS_PRENT4_MACHINE_ACCOUNT;
MACRO_STATUS_SEVERITY STATUS_PRIMARY_TRANSPORT_CONNECT_FAILED;
MACRO_STATUS_CLUSTER STATUS_PRINT_CANCELLED;
MACRO_STATUS_CLUSTER STATUS_PRINT_QUEUE_FULL;
MACRO_STATUS_CLUSTER STATUS_PRIVILEGED_INSTRUCTION;
MACRO_STATUS_CLUSTER STATUS_PRIVILEGE_NOT_HELD;
MACRO_STATUS_CLUSTER STATUS_PROCEDURE_NOT_FOUND;
MACRO_STATUS_SEVERITY STATUS_PROCESS_IN_JOB;
MACRO_STATUS_CLUSTER STATUS_PROCESS_IS_TERMINATING;
MACRO_STATUS_SEVERITY STATUS_PROCESS_NOT_IN_JOB;
MACRO_STATUS_CLUSTER STATUS_PROFILING_AT_LIMIT;
MACRO_STATUS_CLUSTER STATUS_PROFILING_NOT_STARTED;
MACRO_STATUS_CLUSTER STATUS_PROFILING_NOT_STOPPED;
MACRO_STATUS_CLUSTER STATUS_PROPSET_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_PROTOCOL_UNREACHABLE;
MACRO_STATUS_CLUSTER STATUS_PWD_HISTORY_CONFLICT;
MACRO_STATUS_CLUSTER STATUS_PWD_TOO_RECENT;
MACRO_STATUS_CLUSTER STATUS_PWD_TOO_SHORT;
MACRO_STATUS_CLUSTER STATUS_QUOTA_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_QUOTA_LIST_INCONSISTENT;
MACRO_STATUS_CLUSTER STATUS_RANGE_LIST_CONFLICT;
MACRO_STATUS_CLUSTER STATUS_RANGE_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_RANGE_NOT_LOCKED;
MACRO_STATUS_ACPI STATUS_RDP_PROTOCOL_ERROR;
MACRO_STATUS_OBJECT STATUS_RECEIVE_EXPEDITED;
MACRO_STATUS_OBJECT STATUS_RECEIVE_PARTIAL;
MACRO_STATUS_OBJECT STATUS_RECEIVE_PARTIAL_EXPEDITED;
MACRO_STATUS_CLUSTER STATUS_RECOVERY_FAILURE;
MACRO_STATUS_GUARD STATUS_REDIRECTOR_HAS_OPEN_HANDLES;
MACRO_STATUS_CLUSTER STATUS_REDIRECTOR_NOT_STARTED;
MACRO_STATUS_CLUSTER STATUS_REDIRECTOR_PAUSED;
MACRO_STATUS_CLUSTER STATUS_REDIRECTOR_STARTED;
MACRO_STATUS_CLUSTER STATUS_REGISTRY_CORRUPT;
MACRO_STATUS_GUARD STATUS_REGISTRY_HIVE_RECOVERED;
MACRO_STATUS_CLUSTER STATUS_REGISTRY_IO_FAILED;
MACRO_STATUS_CLUSTER STATUS_REGISTRY_QUOTA_LIMIT;
MACRO_STATUS_OBJECT STATUS_REGISTRY_RECOVERED;
MACRO_STATUS_CLUSTER STATUS_REG_NAT_CONSUMPTION;
MACRO_STATUS_CLUSTER STATUS_REINITIALIZATION_NEEDED;
MACRO_STATUS_CLUSTER STATUS_REMOTE_DISCONNECT;
MACRO_STATUS_CLUSTER STATUS_REMOTE_NOT_LISTENING;
MACRO_STATUS_CLUSTER STATUS_REMOTE_RESOURCES;
MACRO_STATUS_CLUSTER STATUS_REMOTE_SESSION_LIMIT;
MACRO_STATUS_CLUSTER STATUS_REMOTE_STORAGE_MEDIA_ERROR;
MACRO_STATUS_CLUSTER STATUS_REMOTE_STORAGE_NOT_ACTIVE;
MACRO_STATUS_SEVERITY STATUS_REPARSE;
MACRO_STATUS_CLUSTER STATUS_REPARSE_ATTRIBUTE_CONFLICT;
MACRO_STATUS_SEVERITY STATUS_REPARSE_OBJECT;
MACRO_STATUS_CLUSTER STATUS_REPARSE_POINT_NOT_RESOLVED;
MACRO_STATUS_CLUSTER STATUS_REPLY_MESSAGE_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_REQUEST_ABORTED;
MACRO_STATUS_CLUSTER STATUS_REQUEST_NOT_ACCEPTED;
MACRO_STATUS_CLUSTER STATUS_RESOURCE_DATA_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_RESOURCE_LANG_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_RESOURCE_NAME_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_RESOURCE_NOT_OWNED;
MACRO_STATUS_SEVERITY STATUS_RESOURCE_REQUIREMENTS_CHANGED;
MACRO_STATUS_CLUSTER STATUS_RESOURCE_TYPE_NOT_FOUND;
MACRO_STATUS_OBJECT STATUS_RESUME_HIBERNATION;
MACRO_STATUS_CLUSTER STATUS_RETRY;
MACRO_STATUS_CLUSTER STATUS_REVISION_MISMATCH;
MACRO_STATUS_CLUSTER STATUS_REVOCATION_OFFLINE_C;
MACRO_STATUS_CLUSTER STATUS_REVOCATION_OFFLINE_KDC;
MACRO_STATUS_SEVERITY STATUS_RXACT_COMMITTED;
MACRO_STATUS_CLUSTER STATUS_RXACT_COMMIT_FAILURE;
MACRO_STATUS_GUARD STATUS_RXACT_COMMIT_NECESSARY;
MACRO_STATUS_CLUSTER STATUS_RXACT_INVALID_STATE;
MACRO_STATUS_OBJECT STATUS_RXACT_STATE_CREATED;
MACRO_STATUS_CLUSTER STATUS_SAM_INIT_FAILURE;
MACRO_STATUS_CLUSTER STATUS_SAM_NEED_BOOTKEY_FLOPPY;
MACRO_STATUS_CLUSTER STATUS_SAM_NEED_BOOTKEY_PASSWORD;
MACRO_STATUS_CLUSTER STATUS_SECRET_TOO_LONG;
MACRO_STATUS_CLUSTER STATUS_SECTION_NOT_EXTENDED;
MACRO_STATUS_CLUSTER STATUS_SECTION_NOT_IMAGE;
MACRO_STATUS_CLUSTER STATUS_SECTION_PROTECTION;
MACRO_STATUS_CLUSTER STATUS_SECTION_TOO_BIG;
MACRO_STATUS_OBJECT STATUS_SEGMENT_NOTIFICATION;
MACRO_STATUS_CLUSTER STATUS_SEMAPHORE_LIMIT_EXCEEDED;
MACRO_STATUS_OBJECT STATUS_SERIAL_COUNTER_TIMEOUT;
MACRO_STATUS_OBJECT STATUS_SERIAL_MORE_WRITES;
MACRO_STATUS_CLUSTER STATUS_SERIAL_NO_DEVICE_INITED;
MACRO_STATUS_CLUSTER STATUS_SERVER_DISABLED;
MACRO_STATUS_GUARD STATUS_SERVER_HAS_OPEN_HANDLES;
MACRO_STATUS_CLUSTER STATUS_SERVER_NOT_DISABLED;
MACRO_STATUS_CLUSTER STATUS_SERVER_SHUTDOWN_IN_PROGRESS;
MACRO_STATUS_CLUSTER STATUS_SERVER_SID_MISMATCH;
MACRO_STATUS_OBJECT STATUS_SERVICE_NOTIFICATION;
MACRO_STATUS_GUARD STATUS_SETMARK_DETECTED;
MACRO_STATUS_SEVERITY STATUS_SEVERITY_ERROR;
MACRO_STATUS_SEVERITY STATUS_SEVERITY_INFORMATIONAL;
MACRO_STATUS_SEVERITY STATUS_SEVERITY_SUCCESS;
MACRO_STATUS_SEVERITY STATUS_SEVERITY_WARNING;
MACRO_STATUS_CLUSTER STATUS_SHARED_IRQ_BUSY;
MACRO_STATUS_CLUSTER STATUS_SHARED_POLICY;
MACRO_STATUS_CLUSTER STATUS_SHARING_PAUSED;
MACRO_STATUS_CLUSTER STATUS_SHARING_VIOLATION;
MACRO_STATUS_CLUSTER STATUS_SHUTDOWN_IN_PROGRESS;
MACRO_STATUS_GUARD STATUS_SINGLE_STEP;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_CARD_BLOCKED;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_CERT_EXPIRED;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_CERT_REVOKED;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_IO_ERROR;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_LOGON_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_NO_CARD;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_NO_CERTIFICATE;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_NO_KEYSET;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_NO_KEY_CONTAINER;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_SILENT_CONTEXT;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_SUBSYSTEM_FAILURE;
MACRO_STATUS_CLUSTER STATUS_SMARTCARD_WRONG_PIN;
MACRO_STATUS_SEVERITY STATUS_SOME_NOT_MAPPED;
MACRO_STATUS_CLUSTER STATUS_SOURCE_ELEMENT_EMPTY;
MACRO_STATUS_CLUSTER STATUS_SPECIAL_ACCOUNT;
MACRO_STATUS_CLUSTER STATUS_SPECIAL_GROUP;
MACRO_STATUS_CLUSTER STATUS_SPECIAL_USER;
MACRO_STATUS_CLUSTER STATUS_STACK_BUFFER_OVERRUN;
MACRO_STATUS_CLUSTER STATUS_STACK_OVERFLOW;
MACRO_STATUS_CLUSTER STATUS_STACK_OVERFLOW_READ;
MACRO_STATUS_CLUSTER STATUS_STRONG_CRYPTO_NOT_SUPPORTED;
MACRO_STATUS STATUS_SUCCESS;
MACRO_STATUS_CLUSTER STATUS_SUSPEND_COUNT_EXCEEDED;
MACRO_STATUS_ACPI STATUS_SXS_ACTIVATION_CONTEXT_DISABLED;
MACRO_STATUS_ACPI STATUS_SXS_ASSEMBLY_MISSING;
MACRO_STATUS_ACPI STATUS_SXS_ASSEMBLY_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_SXS_CANT_GEN_ACTCTX;
MACRO_STATUS_ACPI STATUS_SXS_CORRUPTION;
MACRO_STATUS_ACPI STATUS_SXS_CORRUPT_ACTIVATION_STACK;
MACRO_STATUS_ACPI STATUS_SXS_EARLY_DEACTIVATION;
MACRO_STATUS_ACPI STATUS_SXS_INVALID_ACTCTXDATA_FORMAT;
MACRO_STATUS_ACPI STATUS_SXS_INVALID_DEACTIVATION;
MACRO_STATUS_ACPI STATUS_SXS_KEY_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_SXS_MANIFEST_FORMAT_ERROR;
MACRO_STATUS_ACPI STATUS_SXS_MANIFEST_PARSE_ERROR;
MACRO_STATUS_ACPI STATUS_SXS_MULTIPLE_DEACTIVATION;
MACRO_STATUS_ACPI STATUS_SXS_PROCESS_DEFAULT_ALREADY_SET;
MACRO_STATUS_ACPI STATUS_SXS_PROCESS_TERMINATION_REQUESTED;
MACRO_STATUS_ACPI STATUS_SXS_RELEASE_ACTIVATION_CONTEXT;
MACRO_STATUS_ACPI STATUS_SXS_SECTION_NOT_FOUND;
MACRO_STATUS_ACPI STATUS_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY;
MACRO_STATUS_ACPI STATUS_SXS_THREAD_QUERIES_DISABLED;
MACRO_STATUS_ACPI STATUS_SXS_VERSION_CONFLICT;
MACRO_STATUS_ACPI STATUS_SXS_WRONG_SECTION_TYPE;
MACRO_STATUS_CLUSTER STATUS_SYNCHRONIZATION_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_SYSTEM_HIVE_TOO_LARGE;
MACRO_STATUS_CLUSTER STATUS_SYSTEM_IMAGE_BAD_SIGNATURE;
MACRO_STATUS_CLUSTER STATUS_SYSTEM_PROCESS_TERMINATED;
MACRO_STATUS_CLUSTER STATUS_SYSTEM_SHUTDOWN;
MACRO_STATUS_CLUSTER STATUS_THREAD_IS_TERMINATING;
MACRO_STATUS_CLUSTER STATUS_THREAD_NOT_IN_PROCESS;
MACRO_STATUS_OBJECT STATUS_THREAD_WAS_SUSPENDED;
MACRO_STATUS_SEVERITY STATUS_TIMEOUT;
MACRO_STATUS_CLUSTER STATUS_TIMER_NOT_CANCELED;
MACRO_STATUS_CLUSTER STATUS_TIMER_RESOLUTION_NOT_SET;
MACRO_STATUS_OBJECT STATUS_TIMER_RESUME_IGNORED;
MACRO_STATUS_CLUSTER STATUS_TIME_DIFFERENCE_AT_DC;
MACRO_STATUS_CLUSTER STATUS_TOKEN_ALREADY_IN_USE;
MACRO_STATUS_CLUSTER STATUS_TOO_LATE;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_ADDRESSES;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_COMMANDS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_CONTEXT_IDS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_GUIDS_REQUESTED;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_LINKS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_LUIDS_REQUESTED;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_NAMES;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_NODES;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_OPENED_FILES;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_PAGING_FILES;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_PRINCIPALS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_SECRETS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_SESSIONS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_SIDS;
MACRO_STATUS_CLUSTER STATUS_TOO_MANY_THREADS;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_ABORTED;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_INVALID_ID;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_INVALID_TYPE;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_NO_MATCH;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_NO_RELEASE;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_RESPONDED;
MACRO_STATUS_CLUSTER STATUS_TRANSACTION_TIMED_OUT;
MACRO_STATUS_SEVERITY STATUS_TRANSLATION_COMPLETE;
MACRO_STATUS_CLUSTER STATUS_TRANSPORT_FULL;
MACRO_STATUS_CLUSTER STATUS_TRUSTED_DOMAIN_FAILURE;
MACRO_STATUS_CLUSTER STATUS_TRUSTED_RELATIONSHIP_FAILURE;
MACRO_STATUS_CLUSTER STATUS_TRUST_FAILURE;
MACRO_STATUS_CLUSTER STATUS_UNABLE_TO_DECOMMIT_VM;
MACRO_STATUS_CLUSTER STATUS_UNABLE_TO_DELETE_SECTION;
MACRO_STATUS_CLUSTER STATUS_UNABLE_TO_FREE_VM;
MACRO_STATUS_CLUSTER STATUS_UNABLE_TO_LOCK_MEDIA;
MACRO_STATUS_CLUSTER STATUS_UNABLE_TO_UNLOAD_MEDIA;
MACRO_STATUS_CLUSTER STATUS_UNDEFINED_CHARACTER;
MACRO_STATUS_CLUSTER STATUS_UNEXPECTED_IO_ERROR;
MACRO_STATUS_CLUSTER STATUS_UNEXPECTED_MM_CREATE_ERR;
MACRO_STATUS_CLUSTER STATUS_UNEXPECTED_MM_EXTEND_ERR;
MACRO_STATUS_CLUSTER STATUS_UNEXPECTED_MM_MAP_ERROR;
MACRO_STATUS_CLUSTER STATUS_UNEXPECTED_NETWORK_ERROR;
MACRO_STATUS_CLUSTER STATUS_UNFINISHED_CONTEXT_DELETED;
MACRO_STATUS_CLUSTER STATUS_UNHANDLED_EXCEPTION;
MACRO_STATUS_CLUSTER STATUS_UNKNOWN_REVISION;
MACRO_STATUS_CLUSTER STATUS_UNMAPPABLE_CHARACTER;
MACRO_STATUS_CLUSTER STATUS_UNRECOGNIZED_MEDIA;
MACRO_STATUS_CLUSTER STATUS_UNRECOGNIZED_VOLUME;
MACRO_STATUS_CLUSTER STATUS_UNSUCCESSFUL;
MACRO_STATUS_CLUSTER STATUS_UNSUPPORTED_COMPRESSION;
MACRO_STATUS_CLUSTER STATUS_UNSUPPORTED_PREAUTH;
MACRO_STATUS_CLUSTER STATUS_UNWIND;
MACRO_STATUS_GUARD STATUS_UNWIND_CONSOLIDATE;
MACRO_STATUS_CLUSTER STATUS_USER2USER_REQUIRED;
MACRO_STATUS_SEVERITY STATUS_USER_APC;
MACRO_STATUS_CLUSTER STATUS_USER_DELETE_TRUST_QUOTA_EXCEEDED;
MACRO_STATUS_CLUSTER STATUS_USER_EXISTS;
MACRO_STATUS_CLUSTER STATUS_USER_MAPPED_FILE;
MACRO_STATUS_CLUSTER STATUS_USER_SESSION_DELETED;
MACRO_STATUS_CLUSTER STATUS_VALIDATE_CONTINUE;
MACRO_STATUS_CLUSTER STATUS_VARIABLE_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_VDM_DISALLOWED;
MACRO_STATUS_CLUSTER STATUS_VDM_HARD_ERROR;
MACRO_STATUS_GUARD STATUS_VERIFY_REQUIRED;
MACRO_STATUS_CLUSTER STATUS_VIRTUAL_CIRCUIT_CLOSED;
MACRO_STATUS_SEVERITY STATUS_VOLSNAP_HIBERNATE_READY;
MACRO_STATUS_CLUSTER STATUS_VOLSNAP_PREPARE_HIBERNATE;
MACRO_STATUS_CLUSTER STATUS_VOLUME_DISMOUNTED;
MACRO_STATUS_SEVERITY STATUS_VOLUME_MOUNTED;
MACRO_STATUS_CLUSTER STATUS_VOLUME_NOT_UPGRADED;
MACRO_STATUS_SEVERITY STATUS_WAIT_0;
MACRO_STATUS_SEVERITY STATUS_WAIT_1;
MACRO_STATUS_SEVERITY STATUS_WAIT_2;
MACRO_STATUS_SEVERITY STATUS_WAIT_3;
MACRO_STATUS_SEVERITY STATUS_WAIT_63;
MACRO_STATUS_CLUSTER STATUS_WAIT_FOR_OPLOCK;
MACRO_STATUS_CLUSTER STATUS_WAKE_SYSTEM;
MACRO_STATUS_GUARD STATUS_WAKE_SYSTEM_DEBUGGER;
MACRO_STATUS_OBJECT STATUS_WAS_LOCKED;
MACRO_STATUS_OBJECT STATUS_WAS_UNLOCKED;
MACRO_STATUS_CLUSTER STATUS_WMI_ALREADY_DISABLED;
MACRO_STATUS_CLUSTER STATUS_WMI_ALREADY_ENABLED;
MACRO_STATUS_CLUSTER STATUS_WMI_GUID_DISCONNECTED;
MACRO_STATUS_CLUSTER STATUS_WMI_GUID_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_WMI_INSTANCE_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_WMI_ITEMID_NOT_FOUND;
MACRO_STATUS_CLUSTER STATUS_WMI_NOT_SUPPORTED;
MACRO_STATUS_CLUSTER STATUS_WMI_READ_ONLY;
MACRO_STATUS_CLUSTER STATUS_WMI_SET_FAILURE;
MACRO_STATUS_CLUSTER STATUS_WMI_TRY_AGAIN;
MACRO_STATUS_OBJECT STATUS_WORKING_SET_LIMIT_RANGE;
MACRO_STATUS_CLUSTER STATUS_WORKING_SET_QUOTA;
MACRO_STATUS_CLUSTER STATUS_WOW_ASSERTION;
MACRO_STATUS_CLUSTER STATUS_WRONG_CREDENTIAL_HANDLE;
MACRO_STATUS_CLUSTER STATUS_WRONG_EFS;
MACRO_STATUS_CLUSTER STATUS_WRONG_PASSWORD;
MACRO_STATUS_CLUSTER STATUS_WRONG_PASSWORD_CORE;
MACRO_STATUS_CLUSTER STATUS_WRONG_VOLUME;
MACRO_STATUS_OBJECT STATUS_WX86_BREAKPOINT;
MACRO_STATUS_OBJECT STATUS_WX86_CONTINUE;
MACRO_STATUS_OBJECT STATUS_WX86_CREATEWX86TIB;
MACRO_STATUS_OBJECT STATUS_WX86_EXCEPTION_CHAIN;
MACRO_STATUS_OBJECT STATUS_WX86_EXCEPTION_CONTINUE;
MACRO_STATUS_OBJECT STATUS_WX86_EXCEPTION_LASTCHANCE;
MACRO_STATUS_CLUSTER STATUS_WX86_FLOAT_STACK_CHECK;
MACRO_STATUS_CLUSTER STATUS_WX86_INTERNAL_ERROR;
MACRO_STATUS_OBJECT STATUS_WX86_SINGLE_STEP;
MACRO_STATUS_OBJECT STATUS_WX86_UNSIMULATE;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_DATA_Length_ID;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_DATA_VendorSpecific_ID;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_EVENT_Length_ID;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_EVENT_VendorSpecific_ID;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_STATUS_PredictFailure_ID;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_STATUS_Reason_ID;
MACRO_ClassInformation_DeviceId_ID STORAGE_FAILURE_PREDICT_THRESHOLDS_VendorSpecific_ID;
MACRO_STORAGE STORAGE_SCSI_INFO_EXCEPTIONS_Flags_ID;
MACRO_STORAGE STORAGE_SCSI_INFO_EXCEPTIONS_IntervalTimer_ID;
MACRO_STORAGE STORAGE_SCSI_INFO_EXCEPTIONS_MRIE_ID;
MACRO_STORAGE STORAGE_SCSI_INFO_EXCEPTIONS_Padding_ID;
MACRO_STORAGE STORAGE_SCSI_INFO_EXCEPTIONS_PageSavable_ID;
MACRO_STORAGE STORAGE_SCSI_INFO_EXCEPTIONS_ReportCount_ID;
MACRO_STREAMS STREAMS_INTERNAL_ERROR;
MACRO_STREAM_CLASS STREAM_CLASS_VERSION_20;
MACRO_STREAM STREAM_SYSTEM_TIME_MASK;
MACRO_STRICT STRICT;
MACRO_SUBLANG SUBLANG_ARABIC_ALGERIA;
MACRO_SUBLANG SUBLANG_ARABIC_BAHRAIN;
MACRO_SUBLANG SUBLANG_ARABIC_EGYPT;
MACRO_SUBLANG SUBLANG_ARABIC_IRAQ;
MACRO_SUBLANG SUBLANG_ARABIC_JORDAN;
MACRO_SUBLANG SUBLANG_ARABIC_KUWAIT;
MACRO_SUBLANG SUBLANG_ARABIC_LEBANON;
MACRO_SUBLANG SUBLANG_ARABIC_LIBYA;
MACRO_SUBLANG SUBLANG_ARABIC_MOROCCO;
MACRO_SUBLANG SUBLANG_ARABIC_OMAN;
MACRO_SUBLANG SUBLANG_ARABIC_QATAR;
MACRO_SUBLANG SUBLANG_ARABIC_SAUDI_ARABIA;
MACRO_SUBLANG SUBLANG_ARABIC_SYRIA;
MACRO_SUBLANG SUBLANG_ARABIC_TUNISIA;
MACRO_SUBLANG SUBLANG_ARABIC_UAE;
MACRO_SUBLANG SUBLANG_ARABIC_YEMEN;
MACRO_SUBLANG SUBLANG_AZERI_CYRILLIC;
MACRO_SUBLANG SUBLANG_AZERI_LATIN;
MACRO_SUBLANG SUBLANG_CHINESE_HONGKONG;
MACRO_SUBLANG SUBLANG_CHINESE_MACAU;
MACRO_SUBLANG SUBLANG_CHINESE_SIMPLIFIED;
MACRO_SUBLANG SUBLANG_CHINESE_SINGAPORE;
MACRO_SUBLANG SUBLANG_CHINESE_TRADITIONAL;
MACRO_SUBLANG SUBLANG_DEFAULT;
MACRO_SUBLANG SUBLANG_DUTCH;
MACRO_SUBLANG SUBLANG_DUTCH_BELGIAN;
MACRO_SUBLANG SUBLANG_ENGLISH_AUS;
MACRO_SUBLANG SUBLANG_ENGLISH_BELIZE;
MACRO_SUBLANG SUBLANG_ENGLISH_CAN;
MACRO_SUBLANG SUBLANG_ENGLISH_CARIBBEAN;
MACRO_SUBLANG SUBLANG_ENGLISH_EIRE;
MACRO_SUBLANG SUBLANG_ENGLISH_JAMAICA;
MACRO_SUBLANG SUBLANG_ENGLISH_NZ;
MACRO_SUBLANG SUBLANG_ENGLISH_PHILIPPINES;
MACRO_SUBLANG SUBLANG_ENGLISH_SOUTH_AFRICA;
MACRO_SUBLANG SUBLANG_ENGLISH_TRINIDAD;
MACRO_SUBLANG SUBLANG_ENGLISH_UK;
MACRO_SUBLANG SUBLANG_ENGLISH_US;
MACRO_SUBLANG SUBLANG_ENGLISH_ZIMBABWE;
MACRO_SUBLANG SUBLANG_FRENCH;
MACRO_SUBLANG SUBLANG_FRENCH_BELGIAN;
MACRO_SUBLANG SUBLANG_FRENCH_CANADIAN;
MACRO_SUBLANG SUBLANG_FRENCH_LUXEMBOURG;
MACRO_SUBLANG SUBLANG_FRENCH_MONACO;
MACRO_SUBLANG SUBLANG_FRENCH_SWISS;
MACRO_SUBLANG SUBLANG_GERMAN;
MACRO_SUBLANG SUBLANG_GERMAN_AUSTRIAN;
MACRO_SUBLANG SUBLANG_GERMAN_LIECHTENSTEIN;
MACRO_SUBLANG SUBLANG_GERMAN_LUXEMBOURG;
MACRO_SUBLANG SUBLANG_GERMAN_SWISS;
MACRO_SUBLANG SUBLANG_ITALIAN;
MACRO_SUBLANG SUBLANG_ITALIAN_SWISS;
MACRO_SUBLANG SUBLANG_KASHMIRI_INDIA;
MACRO_SUBLANG SUBLANG_KASHMIRI_SASIA;
MACRO_SUBLANG SUBLANG_KOREAN;
MACRO_SUBLANG SUBLANG_LITHUANIAN;
MACRO_SUBLANG SUBLANG_MALAY_BRUNEI_DARUSSALAM;
MACRO_SUBLANG SUBLANG_MALAY_MALAYSIA;
MACRO_SUBLANG SUBLANG_NEPALI_INDIA;
MACRO_SUBLANG SUBLANG_NEUTRAL;
MACRO_SUBLANG SUBLANG_NORWEGIAN_BOKMAL;
MACRO_SUBLANG SUBLANG_NORWEGIAN_NYNORSK;
MACRO_SUBLANG SUBLANG_PORTUGUESE;
MACRO_SUBLANG SUBLANG_PORTUGUESE_BRAZILIAN;
MACRO_SUBLANG SUBLANG_SERBIAN_CYRILLIC;
MACRO_SUBLANG SUBLANG_SERBIAN_LATIN;
MACRO_SUBLANG SUBLANG_SPANISH;
MACRO_SUBLANG SUBLANG_SPANISH_ARGENTINA;
MACRO_SUBLANG SUBLANG_SPANISH_BOLIVIA;
MACRO_SUBLANG SUBLANG_SPANISH_CHILE;
MACRO_SUBLANG SUBLANG_SPANISH_COLOMBIA;
MACRO_SUBLANG SUBLANG_SPANISH_COSTA_RICA;
MACRO_SUBLANG SUBLANG_SPANISH_DOMINICAN_REPUBLIC;
MACRO_SUBLANG SUBLANG_SPANISH_ECUADOR;
MACRO_SUBLANG SUBLANG_SPANISH_EL_SALVADOR;
MACRO_SUBLANG SUBLANG_SPANISH_GUATEMALA;
MACRO_SUBLANG SUBLANG_SPANISH_HONDURAS;
MACRO_SUBLANG SUBLANG_SPANISH_MEXICAN;
MACRO_SUBLANG SUBLANG_SPANISH_MODERN;
MACRO_SUBLANG SUBLANG_SPANISH_NICARAGUA;
MACRO_SUBLANG SUBLANG_SPANISH_PANAMA;
MACRO_SUBLANG SUBLANG_SPANISH_PARAGUAY;
MACRO_SUBLANG SUBLANG_SPANISH_PERU;
MACRO_SUBLANG SUBLANG_SPANISH_PUERTO_RICO;
MACRO_SUBLANG SUBLANG_SPANISH_URUGUAY;
MACRO_SUBLANG SUBLANG_SPANISH_VENEZUELA;
MACRO_SUBLANG SUBLANG_SWEDISH;
MACRO_SUBLANG SUBLANG_SWEDISH_FINLAND;
MACRO_SUBLANG SUBLANG_SYS_DEFAULT;
MACRO_SUBLANG SUBLANG_URDU_INDIA;
MACRO_SUBLANG SUBLANG_URDU_PAKISTAN;
MACRO_SUBLANG SUBLANG_UZBEK_CYRILLIC;
MACRO_SUBLANG SUBLANG_UZBEK_LATIN;
MACRO_OBJECT SYMBOLIC_INITIALIZATION_FAILED;
MACRO_SYMBOLIC SYMBOLIC_LINK_ALL_ACCESS;
MACRO_SYMBOLIC SYMBOLIC_LINK_QUERY;
MACRO_SYNCHRONIZE SYNCHRONIZE;
MACRO_LEVEL SYNCH_LEVEL;
MACRO_SYNCH SYNCH_ON_SY;
MACRO_SYNCH SYNCH_ON_TAG;
MACRO_SYNCH SYNCH_ON_TIME;
MACRO_SYSAUDIO SYSAUDIO_FLAGS_DONT_COMBINE_PINS;
MACRO_ID SYSID_1394_x1394_ID;
MACRO_ID SYSID_UUID_Uuid_ID;
MACRO_SYSTEM SYSTEM_EXIT_OWNED_MUTEX;
MACRO_SYSTEM_LICENSE SYSTEM_LICENSE_VIOLATION;
MACRO_SYSTEM_PTE SYSTEM_PTE_MISUSE;
MACRO_SYSTEM_SCAN SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD;
MACRO_SYSTEM SYSTEM_SERVICE_EXCEPTION;
MACRO_SYSTEM_THREAD SYSTEM_THREAD_EXCEPTION_NOT_HANDLED;
MACRO_SYSTEM_THREAD SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M;
MACRO_SYSTEM SYSTEM_UNWIND_PREVIOUS_USER;
MACRO_SYS SYS_OPEN;
BOOLEAN __stdcall SeAccessCheck(PSECURITY_DESCRIPTOR SecurityDescriptor, PSECURITY_SUBJECT_CONTEXT SubjectSecurityContext, BOOLEAN SubjectContextLocked, ACCESS_MASK DesiredAccess, ACCESS_MASK PreviouslyGrantedAccess, PPRIVILEGE_SET *Privileges, PGENERIC_MAPPING GenericMapping, KPROCESSOR_MODE AccessMode, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall SeAssignSecurity(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR ExplicitDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, BOOLEAN IsDirectoryObject, PSECURITY_SUBJECT_CONTEXT SubjectContext, PGENERIC_MAPPING GenericMapping, POOL_TYPE PoolType);
NTSTATUS __stdcall SeAssignSecurityEx(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR ExplicitDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, GUID *ObjectType, BOOLEAN IsDirectoryObject, ULONG AutoInheritFlags, PSECURITY_SUBJECT_CONTEXT SubjectContext, PGENERIC_MAPPING GenericMapping, POOL_TYPE PoolType);
NTSTATUS __stdcall SeDeassignSecurity(PSECURITY_DESCRIPTOR *SecurityDescriptor);
BOOLEAN __stdcall SeValidSecurityDescriptor(ULONG Length, PSECURITY_DESCRIPTOR SecurityDescriptor);
_SECURITY_IMPERSONATION_LEVEL SecurityAnonymous;
_SUITE_TYPE SecurityAppliance;
_SECURITY_IMPERSONATION_LEVEL SecurityDelegation;
_SECURITY_IMPERSONATION_LEVEL SecurityIdentification;
_SECURITY_IMPERSONATION_LEVEL SecurityImpersonation;
_SECURITY_OPERATION_CODE SetSecurityDescriptor;
_CM_ERROR_CONTROL_TYPE SevereError;
_BUS_DATA_TYPE SgiInternalConfiguration;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE SignalDeviceEvent;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE SignalMultipleDeviceEvents;
_STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE SignalMultipleDeviceInstanceEvents;
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE SignalMultipleStreamEvents;
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE SignalStreamEvent;
_DEVICE_RELATION_TYPE SingleBusRelations;
_SUITE_TYPE SingleUserTS;
_SUITE_TYPE SmallBusiness;
_SUITE_TYPE SmallBusinessRestricted;
_KWAIT_REASON Spare2;
_KWAIT_REASON Spare3;
_KWAIT_REASON Spare4;
_KWAIT_REASON Spare5;
_KWAIT_REASON Spare6;
_ALTERNATIVE_ARCHITECTURE_TYPE StandardDesign;
ComponentStatus StatusActive;
ComponentStatus StatusInactive;
ComponentStatus StatusUnavailable;
_IO_COMPLETION_ROUTINE_RESULT StopCompletion;
void __stdcall StreamClassAbortOutstandingRequests(PVOID HwDeviceExtension, PHW_STREAM_OBJECT HwStreamObject, NTSTATUS Status);
void __stdcall StreamClassCallAtNewPriority(PHW_STREAM_OBJECT StreamObject, PVOID HwDeviceExtension, STREAM_PRIORITY Priority, PHW_PRIORITY_ROUTINE PriorityRoutine, PVOID Context);
void __stdcall StreamClassCompleteRequestAndMarkQueueReady(PHW_STREAM_REQUEST_BLOCK Srb);
void __stdcall StreamClassDebugAssert(PCHAR File, ULONG Line, PCHAR AssertText, ULONG AssertValue);
void __stdcall StreamClassFilterReenumerateStreams(PVOID HwInstanceExtension, ULONG StreamDescriptorSize);
PVOID __stdcall StreamClassGetDmaBuffer(PVOID HwDeviceExtension);
PKSEVENT_ENTRY __stdcall StreamClassGetNextEvent(PVOID HwInstanceExtension_OR_HwDeviceExtension, PHW_STREAM_OBJECT HwStreamObject, GUID *EventGuid, ULONG EventItem, PKSEVENT_ENTRY CurrentEvent);
STREAM_PHYSICAL_ADDRESS __stdcall StreamClassGetPhysicalAddress(PVOID HwDeviceExtension, PHW_STREAM_REQUEST_BLOCK HwSRB, PVOID VirtualAddress, STREAM_BUFFER_TYPE Type, ULONG *Length);
void __stdcall StreamClassQueryMasterClock(PHW_STREAM_OBJECT HwStreamObject, HANDLE MasterClockHandle, TIME_FUNCTION TimeFunction, PHW_QUERY_CLOCK_ROUTINE ClockCallbackRoutine);
void __stdcall StreamClassQueryMasterClockSync(HANDLE MasterClockHandle, PHW_TIME_CONTEXT TimeContext);
BOOLEAN __stdcall StreamClassReadWriteConfig(PVOID HwDeviceExtension, BOOLEAN Read, PVOID Buffer, ULONG Offset, ULONG Length);
void __stdcall StreamClassReenumerateStreams(PVOID HwDeviceExtension, ULONG StreamDescriptorSize);
NTSTATUS __stdcall StreamClassRegisterAdapter(PVOID Argument1, PVOID Argument2, PHW_INITIALIZATION_DATA HwInitializationData);
NTSTATUS __stdcall StreamClassRegisterFilterWithNoKSPins(PDEVICE_OBJECT DeviceObject, const GUID *InterfaceClassGUID, ULONG PinCount, BOOL *PinDirection, KSPIN_MEDIUM *MediumList, GUID *CategoryList);
void __stdcall StreamClassScheduleTimer(PHW_STREAM_OBJECT StreamObject, PVOID HwDeviceExtension, ULONG NumberOfMicroseconds, PHW_TIMER_ROUTINE TimerRoutine, PVOID Context);
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE StreamNotificationMaximum;
_STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE StreamRequestComplete;
_KWAIT_REASON Suspended;
_EVENT_TYPE SynchronizationEvent;
_TIMER_TYPE SynchronizationTimer;
_CM_SERVICE_LOAD_TYPE SystemLoad;
_POWER_STATE_TYPE SystemPowerState;
MACRO_TARGET TARGET_MDL_TOO_SMALL;
MACRO_TCODE TCODE_CYCLE_START;
MACRO_TCODE TCODE_ISOCH_DATA_BLOCK;
MACRO_TCODE TCODE_LOCK_REQUEST;
MACRO_TCODE TCODE_LOCK_RESPONSE;
MACRO_TCODE TCODE_READ_REQUEST_BLOCK;
MACRO_TCODE TCODE_READ_REQUEST_QUADLET;
MACRO_TCODE TCODE_READ_RESPONSE_BLOCK;
MACRO_TCODE TCODE_READ_RESPONSE_QUADLET;
MACRO_TCODE TCODE_REQUEST_BLOCK_MASK;
MACRO_TCODE TCODE_RESERVED1;
MACRO_TCODE TCODE_RESERVED2;
MACRO_TCODE TCODE_RESERVED3;
MACRO_TCODE TCODE_RESERVED4;
MACRO_TCODE TCODE_RESPONSE_MASK;
MACRO_TCODE TCODE_SELFID;
MACRO_TCODE TCODE_WRITE_REQUEST_BLOCK;
MACRO_TCODE TCODE_WRITE_REQUEST_QUADLET;
MACRO_TCODE TCODE_WRITE_RESPONSE;
MACRO_TERMINAL TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE;
MACRO_KEY_SIGNATURE TEXTUAL_LEAF_INDIRECT_KEY_SIGNATURE;
MACRO_THREAD_TERMINATE THREAD_ALL_ACCESS;
MACRO_THREAD_NOT THREAD_NOT_MUTEX_OWNER;
MACRO_THREAD_TERMINATE THREAD_SET_INFORMATION;
MACRO_THREAD_STUCK THREAD_STUCK_IN_DEVICE_DRIVER;
MACRO_THREAD_STUCK THREAD_STUCK_IN_DEVICE_DRIVER_M;
MACRO_THREAD_TERMINATE THREAD_TERMINATE;
MACRO_THREAD THREAD_TERMINATE_HELD_MUTEX;
MACRO_THREAD_WAIT THREAD_WAIT_OBJECTS;
MACRO_TIMER TIMER_OR_DPC_INVALID;
$676B88915C1B724692BC802D411C1179 TIME_GET_STREAM_TIME;
$676B88915C1B724692BC802D411C1179 TIME_READ_ONBOARD_CLOCK;
$676B88915C1B724692BC802D411C1179 TIME_SET_ONBOARD_CLOCK;
MACRO_TMP TMP_MAX;
MACRO_LOCATION TOPOLOGY_MAP_LOCATION;
MACRO_TRAP TRAP_CAUSE_UNKNOWN;
MACRO_BOOL TRUE;
_DEVICE_RELATION_TYPE TargetDeviceRelation;
_SUITE_TYPE TerminalServer;
_TRACE_INFORMATION_CLASS TraceEnableFlagsClass;
_TRACE_INFORMATION_CLASS TraceEnableLevelClass;
_TRACE_INFORMATION_CLASS TraceHandleByNameClass;
_TRACE_INFORMATION_CLASS TraceHandleClass;
_TRACE_INFORMATION_CLASS TraceIdClass;
_INTERFACE_TYPE TurboChannel;
_DMA_SPEED TypeA;
_DMA_SPEED TypeB;
_DMA_SPEED TypeC;
_DMA_SPEED TypeF;
MACRO_UDFS UDFS_FILE_SYSTEM;
_USB_CONTROLLER_FLAVOR UHCI_Generic;
_USB_CONTROLLER_FLAVOR UHCI_Ich1;
_USB_CONTROLLER_FLAVOR UHCI_Ich2_1;
_USB_CONTROLLER_FLAVOR UHCI_Ich2_2;
_USB_CONTROLLER_FLAVOR UHCI_Piix3;
_USB_CONTROLLER_FLAVOR UHCI_Piix4;
_USB_CONTROLLER_FLAVOR UHCI_VIA;
MACRO_UNEXPECTED UNEXPECTED_INITIALIZATION_CALL;
MACRO_UNEXPECTED_KERNEL UNEXPECTED_KERNEL_MODE_TRAP;
MACRO_UNEXPECTED_KERNEL UNEXPECTED_KERNEL_MODE_TRAP_M;
MACRO_NULL UNICODE_NULL;
MACRO_UNICODE UNICODE_STRING_MAX_BYTES;
MACRO_UNICODE UNICODE_STRING_MAX_CHARS;
MACRO_KEY_SIGNATURE UNIT_DEP_DIR_KEY_SIGNATURE;
MACRO_KEY_SIGNATURE UNIT_DIRECTORY_KEY_SIGNATURE;
MACRO_UNMOUNTABLE UNMOUNTABLE_BOOT_VOLUME;
MACRO_SECURITY_INFORMATION UNPROTECTED_DACL_SECURITY_INFORMATION;
MACRO_SECURITY_INFORMATION UNPROTECTED_SACL_SECURITY_INFORMATION;
MACRO_UNSUPPORTED UNSUPPORTED_PROCESSOR;
MACRO_UP UP_DRIVER_ON_MP_SYSTEM;
MACRO_URB URB_FUNCTION_ABORT_PIPE;
MACRO_URB URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER;
MACRO_URB URB_FUNCTION_CLASS_DEVICE;
MACRO_URB URB_FUNCTION_CLASS_ENDPOINT;
MACRO_URB URB_FUNCTION_CLASS_INTERFACE;
MACRO_URB URB_FUNCTION_CLASS_OTHER;
MACRO_URB URB_FUNCTION_CLEAR_FEATURE_TO_DEVICE;
MACRO_URB URB_FUNCTION_CLEAR_FEATURE_TO_ENDPOINT;
MACRO_URB URB_FUNCTION_CLEAR_FEATURE_TO_INTERFACE;
MACRO_URB URB_FUNCTION_CLEAR_FEATURE_TO_OTHER;
MACRO_URB URB_FUNCTION_CONTROL_TRANSFER;
MACRO_URB URB_FUNCTION_GET_CONFIGURATION;
MACRO_URB URB_FUNCTION_GET_CURRENT_FRAME_NUMBER;
MACRO_URB URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE;
MACRO_URB URB_FUNCTION_GET_DESCRIPTOR_FROM_ENDPOINT;
MACRO_URB URB_FUNCTION_GET_DESCRIPTOR_FROM_INTERFACE;
MACRO_URB URB_FUNCTION_GET_FRAME_LENGTH;
MACRO_URB URB_FUNCTION_GET_INTERFACE;
MACRO_URB URB_FUNCTION_GET_MS_FEATURE_DESCRIPTOR;
MACRO_URB URB_FUNCTION_GET_STATUS_FROM_DEVICE;
MACRO_URB URB_FUNCTION_GET_STATUS_FROM_ENDPOINT;
MACRO_URB URB_FUNCTION_GET_STATUS_FROM_INTERFACE;
MACRO_URB URB_FUNCTION_GET_STATUS_FROM_OTHER;
MACRO_URB URB_FUNCTION_ISOCH_TRANSFER;
MACRO_URB URB_FUNCTION_RELEASE_FRAME_LENGTH_CONTROL;
MACRO_URB URB_FUNCTION_RESERVED_0X0016;
MACRO_URB URB_FUNCTION_RESERVE_0X001D;
MACRO_URB URB_FUNCTION_RESERVE_0X002B;
MACRO_URB URB_FUNCTION_RESERVE_0X002C;
MACRO_URB URB_FUNCTION_RESERVE_0X002D;
MACRO_URB URB_FUNCTION_RESERVE_0X002E;
MACRO_URB URB_FUNCTION_RESERVE_0X002F;
MACRO_URB URB_FUNCTION_RESET_PIPE;
MACRO_URB URB_FUNCTION_SELECT_CONFIGURATION;
MACRO_URB URB_FUNCTION_SELECT_INTERFACE;
MACRO_URB URB_FUNCTION_SET_DESCRIPTOR_TO_DEVICE;
MACRO_URB URB_FUNCTION_SET_DESCRIPTOR_TO_ENDPOINT;
MACRO_URB URB_FUNCTION_SET_DESCRIPTOR_TO_INTERFACE;
MACRO_URB URB_FUNCTION_SET_FEATURE_TO_DEVICE;
MACRO_URB URB_FUNCTION_SET_FEATURE_TO_ENDPOINT;
MACRO_URB URB_FUNCTION_SET_FEATURE_TO_INTERFACE;
MACRO_URB URB_FUNCTION_SET_FEATURE_TO_OTHER;
MACRO_URB URB_FUNCTION_SET_FRAME_LENGTH;
MACRO_URB URB_FUNCTION_SYNC_CLEAR_STALL;
MACRO_URB URB_FUNCTION_SYNC_RESET_PIPE;
MACRO_URB URB_FUNCTION_SYNC_RESET_PIPE_AND_CLEAR_STALL;
MACRO_URB URB_FUNCTION_TAKE_FRAME_LENGTH_CONTROL;
MACRO_URB URB_FUNCTION_VENDOR_DEVICE;
MACRO_URB URB_FUNCTION_VENDOR_ENDPOINT;
MACRO_URB URB_FUNCTION_VENDOR_INTERFACE;
MACRO_URB URB_FUNCTION_VENDOR_OTHER;
PVOID __stdcall USBCAMD_AdapterReceivePacket(PHW_STREAM_REQUEST_BLOCK Srb, PUSBCAMD_DEVICE_DATA DeviceData, PDEVICE_OBJECT *DeviceObject, BOOLEAN NeedsCompletion);
$C3305B6EE9A249E58E7AD6D1E51C81B9 USBCAMD_CamControlFlag_AssociatedFormat;
$C3305B6EE9A249E58E7AD6D1E51C81B9 USBCAMD_CamControlFlag_EnableDeviceEvents;
$C3305B6EE9A249E58E7AD6D1E51C81B9 USBCAMD_CamControlFlag_NoStillRawProcessing;
$C3305B6EE9A249E58E7AD6D1E51C81B9 USBCAMD_CamControlFlag_NoVideoRawProcessing;
NTSTATUS __stdcall USBCAMD_ControlVendorCommand(PVOID DeviceContext, UCHAR Request, USHORT Value, USHORT Index, PVOID Buffer, PULONG BufferLength, BOOLEAN GetData, PCOMMAND_COMPLETE_FUNCTION CommandComplete, PVOID CommandContext);
MACRO_USBCAMD USBCAMD_DATA_PIPE;
MACRO_USBCAMD USBCAMD_DONT_CARE_PIPE;
ULONG __stdcall USBCAMD_DriverEntry(PVOID Context1, PVOID Context2, ULONG DeviceContextSize, ULONG FrameContextSize, PADAPTER_RECEIVE_PACKET_ROUTINE ReceivePacket);
NTSTATUS __stdcall USBCAMD_GetRegistryKeyValue(HANDLE Handle, PWCHAR KeyNameString, ULONG KeyNameStringLength, PVOID Data, ULONG DataLength);
ULONG __stdcall USBCAMD_InitializeNewInterface(PVOID DeviceContext, PVOID DeviceData, ULONG Version, ULONG CamControlFlag);
MACRO_USBCAMD USBCAMD_MULTIPLEX_PIPE;
MACRO_USBCAMD USBCAMD_PROCESSPACKETEX_CurrentFrameIsStill;
MACRO_USBCAMD USBCAMD_PROCESSPACKETEX_DropFrame;
MACRO_USBCAMD USBCAMD_PROCESSPACKETEX_NextFrameIsStill;
MACRO_USBCAMD USBCAMD_START_STREAM;
MACRO_USBCAMD USBCAMD_STILL_STREAM;
MACRO_USBCAMD USBCAMD_STOP_STREAM;
MACRO_USBCAMD USBCAMD_SYNC_PIPE;
NTSTATUS __stdcall USBCAMD_SelectAlternateInterface(PVOID DeviceContext, PUSBD_INTERFACE_INFORMATION RequestInterface);
MACRO_USBCAMD USBCAMD_VERSION_200;
MACRO_USBCAMD USBCAMD_VIDEO_STILL_STREAM;
MACRO_USBCAMD USBCAMD_VIDEO_STREAM;
MACRO_USBDI USBDI_VERSION;
ULONG __stdcall USBD_CalculateUsbBandwidth(ULONG MaxPacketSize, UCHAR EndpointType, BOOLEAN LowSpeed);
PURB __stdcall USBD_CreateConfigurationRequest(PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PUSHORT Siz);
PURB __stdcall USBD_CreateConfigurationRequestEx(PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PUSBD_INTERFACE_LIST_ENTRY InterfaceList);
MACRO_USBD_ISO USBD_DEFAULT_MAXIMUM_TRANSFER_SIZE;
MACRO_USBD USBD_DEFAULT_PIPE_TRANSFER;
MACRO_USBD_KEEP USBD_DEVHACK_DISABLE_SN;
MACRO_USBD_KEEP USBD_DEVHACK_SET_DIAG_ID;
MACRO_USBD_KEEP USBD_DEVHACK_SLOW_ENUMERATION;
void __stdcall USBD_Debug_LogEntry(CHAR *Name, ULONG Info1, ULONG Info2, ULONG Info3);
ULONG __stdcall USBD_GetInterfaceLength(PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor, PUCHAR BufferEnd);
NTSTATUS __stdcall USBD_GetPdoRegistryParameter(PDEVICE_OBJECT PhysicalDeviceObject, PVOID Parameter, ULONG ParameterLength, PWCHAR KeyName, ULONG KeyNameLength);
void __stdcall USBD_GetUSBDIVersion(PUSBD_VERSION_INFORMATION VersionInformation);
MACRO_USBD_ISO USBD_ISO_START_FRAME_RANGE;
MACRO_USBD_KEEP USBD_KEEP_DEVICE_DATA;
MACRO_USBD_KEEP USBD_MARK_DEVICE_BUSY;
MACRO_USBD_ISO USBD_PF_CHANGE_MAX_PACKET;
MACRO_USBD_ISO USBD_PF_ENABLE_RT_THREAD_ACCESS;
MACRO_USBD_ISO USBD_PF_MAP_ADD_TRANSFERS;
MACRO_USBD_ISO USBD_PF_SHORT_PACKET_OPT;
MACRO_USBD_ISO USBD_PF_VALID_MASK;
MACRO_USBD_PORT USBD_PORT_CONNECTED;
MACRO_USBD_PORT USBD_PORT_ENABLED;
PUSB_INTERFACE_DESCRIPTOR __stdcall USBD_ParseConfigurationDescriptor(PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, UCHAR InterfaceNumber, UCHAR AlternateSetting);
PUSB_INTERFACE_DESCRIPTOR __stdcall USBD_ParseConfigurationDescriptorEx(PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PVOID StartPosition, LONG InterfaceNumber, LONG AlternateSetting, LONG InterfaceClass, LONG InterfaceSubClass, LONG InterfaceProtocol);
PUSB_COMMON_DESCRIPTOR __stdcall USBD_ParseDescriptors(PVOID DescriptorBuffer, ULONG TotalLength, PVOID StartPosition, LONG DescriptorType);
NTSTATUS __stdcall USBD_QueryBusTime(PDEVICE_OBJECT RootHubPdo, PULONG CurrentFrame);
void __stdcall USBD_RegisterHcFilter(PDEVICE_OBJECT DeviceObject, PDEVICE_OBJECT FilterDeviceObject);
MACRO_USBD USBD_SHORT_TRANSFER_OK;
MACRO_USBD USBD_START_ISO_TRANSFER_ASAP;
MACRO_USBD_ISO USBD_STATUS_BABBLE_DETECTED;
MACRO_USBD_ISO USBD_STATUS_BAD_START_FRAME;
MACRO_USBD_ISO USBD_STATUS_BTSTUFF;
MACRO_USBD_ISO USBD_STATUS_BUFFER_OVERRUN;
MACRO_USBD_ISO USBD_STATUS_BUFFER_TOO_SMALL;
MACRO_USBD_ISO USBD_STATUS_BUFFER_UNDERRUN;
MACRO_USBD_ISO USBD_STATUS_CANCELED;
MACRO_USBD_ISO USBD_STATUS_CRC;
MACRO_USBD_ISO USBD_STATUS_DATA_BUFFER_ERROR;
MACRO_USBD_ISO USBD_STATUS_DATA_OVERRUN;
MACRO_USBD_ISO USBD_STATUS_DATA_TOGGLE_MISMATCH;
MACRO_USBD_ISO USBD_STATUS_DATA_UNDERRUN;
MACRO_USBD_ISO USBD_STATUS_DEVICE_GONE;
MACRO_USBD_ISO USBD_STATUS_DEV_NOT_RESPONDING;
MACRO_USBD_ISO USBD_STATUS_ENDPOINT_HALTED;
MACRO_USBD_ISO USBD_STATUS_ERROR_BUSY;
MACRO_USBD_ISO USBD_STATUS_ERROR_SHORT_TRANSFER;
MACRO_USBD_ISO USBD_STATUS_FIFO;
MACRO_USBD_ISO USBD_STATUS_FRAME_CONTROL_NOT_OWNED;
MACRO_USBD_ISO USBD_STATUS_FRAME_CONTROL_OWNED;
MACRO_USBD_ISO USBD_STATUS_INAVLID_CONFIGURATION_DESCRIPTOR;
MACRO_USBD_ISO USBD_STATUS_INAVLID_PIPE_FLAGS;
MACRO_USBD_ISO USBD_STATUS_INSUFFICIENT_RESOURCES;
MACRO_USBD_ISO USBD_STATUS_INTERFACE_NOT_FOUND;
MACRO_USBD_ISO USBD_STATUS_INTERNAL_HC_ERROR;
MACRO_USBD_ISO USBD_STATUS_INVALID_PARAMETER;
MACRO_USBD_ISO USBD_STATUS_INVALID_PIPE_HANDLE;
MACRO_USBD_ISO USBD_STATUS_INVALID_URB_FUNCTION;
MACRO_USBD_ISO USBD_STATUS_ISOCH_REQUEST_FAILED;
MACRO_USBD_ISO USBD_STATUS_ISO_NA_LATE_USBPORT;
MACRO_USBD_ISO USBD_STATUS_ISO_NOT_ACCESSED_BY_HW;
MACRO_USBD_ISO USBD_STATUS_ISO_NOT_ACCESSED_LATE;
MACRO_USBD_ISO USBD_STATUS_ISO_TD_ERROR;
MACRO_USBD_ISO USBD_STATUS_NOT_ACCESSED;
MACRO_USBD_ISO USBD_STATUS_NOT_SUPPORTED;
MACRO_USBD_ISO USBD_STATUS_NO_BANDWIDTH;
MACRO_USBD_ISO USBD_STATUS_PENDING;
MACRO_USBD_ISO USBD_STATUS_PID_CHECK_FAILURE;
MACRO_USBD_ISO USBD_STATUS_RESERVED1;
MACRO_USBD_ISO USBD_STATUS_RESERVED2;
MACRO_USBD_ISO USBD_STATUS_SET_CONFIG_FAILED;
MACRO_USBD_ISO USBD_STATUS_STALL_PID;
MACRO_USBD_ISO USBD_STATUS_STATUS_NOT_MAPPED;
MACRO_USBD_ISO USBD_STATUS_SUCCESS;
MACRO_USBD_ISO USBD_STATUS_TIMEOUT;
MACRO_USBD_ISO USBD_STATUS_UNEXPECTED_PID;
MACRO_USBD_ISO USBD_STATUS_XACT_ERROR;
MACRO_USBD USBD_TRANSFER_DIRECTION;
MACRO_USBD USBD_TRANSFER_DIRECTION_IN;
MACRO_USBD USBD_TRANSFER_DIRECTION_OUT;
MACRO_USBPRINT USBPRINT_IOCTL_INDEX;
MACRO_USBUSER_GET USBUSER_CLEAR_ROOTPORT_FEATURE;
MACRO_USBUSER_GET USBUSER_GET_BANDWIDTH_INFORMATION;
MACRO_USBUSER_GET USBUSER_GET_BUS_STATISTICS_0;
MACRO_USBUSER_GET USBUSER_GET_CONTROLLER_DRIVER_KEY;
MACRO_USBUSER_GET USBUSER_GET_CONTROLLER_INFO_0;
MACRO_USBUSER_GET USBUSER_GET_POWER_STATE_MAP;
MACRO_USBUSER_GET USBUSER_GET_ROOTHUB_SYMBOLIC_NAME;
MACRO_USBUSER_GET USBUSER_GET_ROOTPORT_STATUS;
MACRO_USBUSER_GET USBUSER_GET_USB2_HW_VERSION;
MACRO_USBUSER_GET USBUSER_GET_USB_DRIVER_VERSION;
MACRO_USBUSER_GET USBUSER_INVALID_REQUEST;
MACRO_USBUSER_GET USBUSER_OP_CLOSE_RAW_DEVICE;
MACRO_USBUSER_GET USBUSER_OP_MASK_DEVONLY_API;
MACRO_USBUSER_GET USBUSER_OP_MASK_HCTEST_API;
MACRO_USBUSER_GET USBUSER_OP_OPEN_RAW_DEVICE;
MACRO_USBUSER_GET USBUSER_OP_RAW_RESET_PORT;
MACRO_USBUSER_GET USBUSER_OP_SEND_ONE_PACKET;
MACRO_USBUSER_GET USBUSER_OP_SEND_RAW_COMMAND;
MACRO_USBUSER_GET USBUSER_PASS_THRU;
MACRO_USBUSER_GET USBUSER_SET_ROOTPORT_FEATURE;
MACRO_USBUSER USBUSER_VERSION;
MACRO_USB_BUSIF USB_BUSIF_HUB_VERSION_0;
MACRO_USB_BUSIF USB_BUSIF_HUB_VERSION_1;
MACRO_USB_BUSIF USB_BUSIF_HUB_VERSION_2;
MACRO_USB_BUSIF USB_BUSIF_HUB_VERSION_3;
MACRO_USB_BUSIF USB_BUSIF_HUB_VERSION_4;
MACRO_USB_BUSIF USB_BUSIF_HUB_VERSION_5;
MACRO_USB_HCD USB_BUSIF_USBDI_VERSION_0;
MACRO_USB_HCD USB_BUSIF_USBDI_VERSION_1;
MACRO_USB_HCD USB_BUSIF_USBDI_VERSION_2;
MACRO_USB USB_CONFIGURATION_DESCRIPTOR_TYPE;
MACRO_USB USB_CONFIG_BUS_POWERED;
MACRO_USB USB_CONFIG_POWERED_MASK;
MACRO_USB USB_CONFIG_POWER_DESCRIPTOR_TYPE;
MACRO_USB USB_CONFIG_REMOTE_WAKEUP;
MACRO_USB USB_CONFIG_SELF_POWERED;
MACRO_USB_SUBMIT USB_CYCLE_PORT;
MACRO_USB USB_DEFAULT_DEVICE_ADDRESS;
MACRO_USB USB_DEFAULT_ENDPOINT_ADDRESS;
MACRO_USB USB_DEFAULT_MAX_PACKET;
MACRO_USB USB_DEVICE_CLASS_AUDIO;
MACRO_USB USB_DEVICE_CLASS_COMMUNICATIONS;
MACRO_USB USB_DEVICE_CLASS_HUB;
MACRO_USB USB_DEVICE_CLASS_HUMAN_INTERFACE;
MACRO_USB USB_DEVICE_CLASS_MONITOR;
MACRO_USB USB_DEVICE_CLASS_PHYSICAL_INTERFACE;
MACRO_USB USB_DEVICE_CLASS_POWER;
MACRO_USB USB_DEVICE_CLASS_PRINTER;
MACRO_USB USB_DEVICE_CLASS_RESERVED;
MACRO_USB USB_DEVICE_CLASS_STORAGE;
MACRO_USB USB_DEVICE_CLASS_VENDOR_SPECIFIC;
MACRO_USB USB_DEVICE_DESCRIPTOR_TYPE;
MACRO_USB USB_DEVICE_QUALIFIER_DESCRIPTOR_TYPE;
MACRO_USB_GET USB_DIAG_IGNORE_HUBS_OFF;
MACRO_USB_GET USB_DIAG_IGNORE_HUBS_ON;
MACRO_USB_SUBMIT USB_ENABLE_PORT;
MACRO_USB USB_ENDPOINT_DESCRIPTOR_TYPE;
MACRO_USB USB_ENDPOINT_DIRECTION_MASK;
MACRO_USB USB_ENDPOINT_TYPE_BULK;
MACRO_USB USB_ENDPOINT_TYPE_CONTROL;
MACRO_USB USB_ENDPOINT_TYPE_INTERRUPT;
MACRO_USB USB_ENDPOINT_TYPE_ISOCHRONOUS;
MACRO_USB USB_ENDPOINT_TYPE_MASK;
MACRO_USB USB_FEATURE_ENDPOINT_STALL;
MACRO_USB USB_FEATURE_INTERFACE_POWER_D0;
MACRO_USB USB_FEATURE_INTERFACE_POWER_D1;
MACRO_USB USB_FEATURE_INTERFACE_POWER_D2;
MACRO_USB USB_FEATURE_INTERFACE_POWER_D3;
MACRO_USB USB_FEATURE_REMOTE_WAKEUP;
MACRO_USB USB_GETSTATUS_REMOTE_WAKEUP_ENABLED;
MACRO_USB USB_GETSTATUS_SELF_POWERED;
MACRO_USB_SUBMIT USB_GET_BUSGUID_INFO;
MACRO_USB_SUBMIT USB_GET_BUS_INFO;
MACRO_USB_SUBMIT USB_GET_CONTROLLER_NAME;
MACRO_USB_GET USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION;
MACRO_USB_SUBMIT USB_GET_DEVICE_HANDLE;
MACRO_USB_GET USB_GET_HUB_CAPABILITIES;
MACRO_USB_SUBMIT USB_GET_HUB_COUNT;
MACRO_USB_SUBMIT USB_GET_HUB_NAME;
MACRO_USB_GET USB_GET_NODE_CONNECTION_ATTRIBUTES;
MACRO_USB_GET USB_GET_NODE_CONNECTION_DRIVERKEY_NAME;
MACRO_USB_GET USB_GET_NODE_CONNECTION_INFORMATION;
MACRO_USB_GET USB_GET_NODE_CONNECTION_INFORMATION_EX;
MACRO_USB_GET USB_GET_NODE_CONNECTION_NAME;
MACRO_USB_GET USB_GET_NODE_INFORMATION;
MACRO_USB_SUBMIT USB_GET_PARENT_HUB_INFO;
MACRO_USB_SUBMIT USB_GET_PORT_STATUS;
MACRO_USB_SUBMIT USB_GET_ROOTHUB_PDO;
MACRO_USB_HCD USB_HCD_CAPS_SUPPORTS_RT_THREADS;
MACRO_USB_PACKETFLAG USB_HC_FEATURE_FLAG_PORT_POWER_SWITCHING;
MACRO_USB_PACKETFLAG USB_HC_FEATURE_FLAG_SEL_SUSPEND;
MACRO_USB_PACKETFLAG USB_HC_FEATURE_LEGACY_BIOS;
MACRO_USB_GET USB_HUB_CYCLE_PORT;
_USB_CONTROLLER_FLAVOR USB_HcGeneric;
MACRO_USB_SUBMIT USB_IDLE_NOTIFICATION;
MACRO_USB USB_INTERFACE_DESCRIPTOR_TYPE;
MACRO_USB USB_INTERFACE_POWER_DESCRIPTOR_TYPE;
MACRO_USB USB_OTHER_SPEED_CONFIGURATION_DESCRIPTOR_TYPE;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_ASYNC_IN;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_ASYNC_OUT;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_FULL_SPEED;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_HIGH_SPEED;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_ISO_IN;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_ISO_OUT;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_LOW_SPEED;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_SETUP;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_TOGGLE0;
MACRO_USB_PACKETFLAG USB_PACKETFLAG_TOGGLE1;
MACRO_USB USB_PORTATTR_MINI_CONNECTOR;
MACRO_USB USB_PORTATTR_NO_CONNECTOR;
MACRO_USB USB_PORTATTR_NO_OVERCURRENT_UI;
MACRO_USB USB_PORTATTR_OEM_CONNECTOR;
MACRO_USB USB_PORTATTR_OWNED_BY_CC;
MACRO_USB USB_PORTATTR_SHARED_USB2;
MACRO_USB USB_PORT_STATUS_CONNECT;
MACRO_USB USB_PORT_STATUS_ENABLE;
MACRO_USB USB_PORT_STATUS_HIGH_SPEED;
MACRO_USB USB_PORT_STATUS_LOW_SPEED;
MACRO_USB USB_PORT_STATUS_OVER_CURRENT;
MACRO_USB USB_PORT_STATUS_POWER;
MACRO_USB USB_PORT_STATUS_RESET;
MACRO_USB USB_PORT_STATUS_SUSPEND;
MACRO_USB USB_REQUEST_CLEAR_FEATURE;
MACRO_USB USB_REQUEST_GET_CONFIGURATION;
MACRO_USB USB_REQUEST_GET_DESCRIPTOR;
MACRO_USB USB_REQUEST_GET_INTERFACE;
MACRO_USB USB_REQUEST_GET_STATUS;
MACRO_USB USB_REQUEST_SET_ADDRESS;
MACRO_USB USB_REQUEST_SET_CONFIGURATION;
MACRO_USB USB_REQUEST_SET_DESCRIPTOR;
MACRO_USB USB_REQUEST_SET_FEATURE;
MACRO_USB USB_REQUEST_SET_INTERFACE;
MACRO_USB USB_REQUEST_SYNC_FRAME;
MACRO_USB USB_RESERVED_DESCRIPTOR_TYPE;
MACRO_USB_SUBMIT USB_RESET_PORT;
MACRO_USB USB_STRING_DESCRIPTOR_TYPE;
MACRO_USB_SUBMIT USB_SUBMIT_URB;
MACRO_USB USB_SUPPORT_D0_COMMAND;
MACRO_USB USB_SUPPORT_D1_COMMAND;
MACRO_USB USB_SUPPORT_D1_WAKEUP;
MACRO_USB USB_SUPPORT_D2_COMMAND;
MACRO_USB USB_SUPPORT_D2_WAKEUP;
MACRO_USB USB_SUPPORT_D3_COMMAND;
MACRO_USER USER_MODE_HEALTH_MONITOR;
MPEG2StreamType USER_PRIVATE;
MACRO_USE USE_LOCAL_NODE;
_EMULATOR_PORT_ACCESS_TYPE Uchar;
_EMULATOR_PORT_ACCESS_TYPE Ulong;
_USB_DEVICE_TYPE Usb11Device;
_USB_DEVICE_TYPE Usb20Device;
_USB_DEVICE_SPEED UsbFullSpeed;
_USB_DEVICE_SPEED UsbHighSpeed;
_USB_HUB_NODE UsbHub;
_USB_DEVICE_SPEED UsbLowSpeed;
_USB_HUB_NODE UsbMIParent;
_USB_USER_ERROR_CODE UsbUserBufferTooSmall;
_USB_USER_ERROR_CODE UsbUserDeviceNotStarted;
_USB_USER_ERROR_CODE UsbUserErrorNotMapped;
_USB_USER_ERROR_CODE UsbUserFeatureDisabled;
_USB_USER_ERROR_CODE UsbUserInvalidHeaderParameter;
_USB_USER_ERROR_CODE UsbUserInvalidParameter;
_USB_USER_ERROR_CODE UsbUserInvalidRequestCode;
_USB_USER_ERROR_CODE UsbUserMiniportError;
_USB_USER_ERROR_CODE UsbUserNoDeviceConnected;
_USB_USER_ERROR_CODE UsbUserNotSupported;
_USB_USER_ERROR_CODE UsbUserSuccess;
_USBD_PIPE_TYPE UsbdPipeTypeBulk;
_USBD_PIPE_TYPE UsbdPipeTypeControl;
_USBD_PIPE_TYPE UsbdPipeTypeInterrupt;
_USBD_PIPE_TYPE UsbdPipeTypeIsochronous;
_MODE UserMode;
_KWAIT_REASON UserRequest;
_EMULATOR_PORT_ACCESS_TYPE Ushort;
MACRO_VALID VALID_TRANSFER_FLAGS_MASK;
MACRO_KEY_SIGNATURE VENDOR_KEY_SIGNATURE;
MACRO_VER_PRODUCTBUILD VER_DEBUG;
MACRO_VER_PRODUCTBUILD VER_PRERELEASE;
MACRO_VER_PRODUCTBUILD VER_PRODUCTBUILD;
MACRO_VER_PRODUCTBUILD VER_PRODUCTBUILD_QFE;
MACRO_VER_PRODUCTBUILD VER_PRODUCTMAJORVERSION;
MACRO_VER_PRODUCTBUILD VER_PRODUCTMINORVERSION;
MACRO_VER_PRODUCTBUILD VER_PRODUCTVERSION_DW;
MACRO_VER_PRODUCTBUILD VER_PRODUCTVERSION_W;
MACRO_VER VER_SERVER_NT;
MACRO_VER VER_SUITE_BACKOFFICE;
MACRO_VER VER_SUITE_BLADE;
MACRO_VER VER_SUITE_COMMUNICATIONS;
MACRO_VER VER_SUITE_DATACENTER;
MACRO_VER VER_SUITE_EMBEDDEDNT;
MACRO_VER VER_SUITE_EMBEDDED_RESTRICTED;
MACRO_VER VER_SUITE_ENTERPRISE;
MACRO_VER VER_SUITE_PERSONAL;
MACRO_VER VER_SUITE_SECURITY_APPLIANCE;
MACRO_VER VER_SUITE_SINGLEUSERTS;
MACRO_VER VER_SUITE_SMALLBUSINESS;
MACRO_VER VER_SUITE_SMALLBUSINESS_RESTRICTED;
MACRO_VER VER_SUITE_TERMINAL;
MACRO_VER VER_WORKSTATION_NT;
MACRO_VIDEO VIDEO_DRIVER_INIT_FAILURE;
MACRO_TAG VIRTUAL_DEVICE_EXTENSION_TAG;
_INTERFACE_TYPE VMEBus;
_BUS_DATA_TYPE VMEConfiguration;
VARENUM VT_ARRAY;
VARENUM VT_BLOB;
VARENUM VT_BLOB_OBJECT;
VARENUM VT_BOOL;
VARENUM VT_BSTR;
VARENUM VT_BYREF;
VARENUM VT_CARRAY;
VARENUM VT_CF;
VARENUM VT_CLSID;
VARENUM VT_CY;
VARENUM VT_DATE;
VARENUM VT_DECIMAL;
VARENUM VT_DISPATCH;
VARENUM VT_EMPTY;
VARENUM VT_ERROR;
VARENUM VT_FILETIME;
VARENUM VT_HRESULT;
VARENUM VT_I1;
VARENUM VT_I2;
VARENUM VT_I4;
VARENUM VT_I8;
VARENUM VT_ILLEGAL;
VARENUM VT_ILLEGALMASKED;
VARENUM VT_INT;
VARENUM VT_LPSTR;
VARENUM VT_LPWSTR;
VARENUM VT_NULL;
VARENUM VT_PTR;
VARENUM VT_R4;
VARENUM VT_R8;
VARENUM VT_RESERVED;
VARENUM VT_SAFEARRAY;
VARENUM VT_STORAGE;
VARENUM VT_STORED_OBJECT;
VARENUM VT_STREAM;
VARENUM VT_STREAMED_OBJECT;
VARENUM VT_TYPEMASK;
VARENUM VT_UI1;
VARENUM VT_UI2;
VARENUM VT_UI4;
VARENUM VT_UI8;
VARENUM VT_UINT;
VARENUM VT_UNKNOWN;
VARENUM VT_USERDEFINED;
VARENUM VT_VARIANT;
VARENUM VT_VECTOR;
VARENUM VT_VOID;
$ACDD7173F686B0B8EEB5D0397954DC28 VariableBitRateAverage;
$ACDD7173F686B0B8EEB5D0397954DC28 VariableBitRatePeak;
_SECTION_INHERIT ViewShare;
_SECTION_INHERIT ViewUnmap;
MACRO_WAVE_FILTER WAVE_FILTER_DEVELOPMENT;
MACRO_WAVE_FILTER WAVE_FILTER_ECHO;
MACRO_WAVE_FILTER WAVE_FILTER_UNKNOWN;
MACRO_WAVE_FILTER WAVE_FILTER_VOLUME;
MACRO_WAVE WAVE_FORMAT_ADPCM;
MACRO_WAVE WAVE_FORMAT_ALAW;
MACRO_WAVE WAVE_FORMAT_ANTEX_ADPCME;
MACRO_WAVE WAVE_FORMAT_APTX;
MACRO_WAVE WAVE_FORMAT_AUDIOFILE_AF10;
MACRO_WAVE WAVE_FORMAT_AUDIOFILE_AF36;
MACRO_WAVE WAVE_FORMAT_BTV_DIGITAL;
MACRO_WAVE WAVE_FORMAT_CANOPUS_ATRAC;
MACRO_WAVE WAVE_FORMAT_CIRRUS;
MACRO_WAVE WAVE_FORMAT_CONTROL_RES_CR10;
MACRO_WAVE WAVE_FORMAT_CONTROL_RES_VQLPC;
MACRO_WAVE WAVE_FORMAT_CREATIVE_ADPCM;
MACRO_WAVE WAVE_FORMAT_CREATIVE_FASTSPEECH10;
MACRO_WAVE WAVE_FORMAT_CREATIVE_FASTSPEECH8;
MACRO_WAVE WAVE_FORMAT_CS2;
MACRO_WAVE WAVE_FORMAT_CS_IMAADPCM;
MACRO_WAVE WAVE_FORMAT_CU_CODEC;
MACRO_WAVE WAVE_FORMAT_DEVELOPMENT;
MACRO_WAVE WAVE_FORMAT_DF_G726;
MACRO_WAVE WAVE_FORMAT_DF_GSM610;
MACRO_WAVE WAVE_FORMAT_DIALOGIC_OKI_ADPCM;
MACRO_WAVE WAVE_FORMAT_DIGIADPCM;
MACRO_WAVE WAVE_FORMAT_DIGIFIX;
MACRO_WAVE WAVE_FORMAT_DIGIREAL;
MACRO_WAVE WAVE_FORMAT_DIGISTD;
MACRO_WAVE WAVE_FORMAT_DIGITAL_G723;
MACRO_WAVE WAVE_FORMAT_DOLBY_AC2;
MACRO_WAVE WAVE_FORMAT_DOLBY_AC3_SPDIF;
MACRO_WAVE WAVE_FORMAT_DRM;
MACRO_WAVE WAVE_FORMAT_DSAT_DISPLAY;
MACRO_WAVE WAVE_FORMAT_DSPGROUP_TRUESPEECH;
MACRO_WAVE WAVE_FORMAT_DTS;
MACRO_WAVE WAVE_FORMAT_DVI_ADPCM;
MACRO_WAVE WAVE_FORMAT_DVM;
MACRO_WAVE WAVE_FORMAT_ECHOSC1;
MACRO_WAVE WAVE_FORMAT_ECHOSC3;
MACRO_WAVE WAVE_FORMAT_ESPCM;
MACRO_WAVE WAVE_FORMAT_ESST_AC3;
MACRO_WAVE WAVE_FORMAT_EXTENSIBLE;
MACRO_WAVE WAVE_FORMAT_FM_TOWNS_SND;
MACRO_WAVE WAVE_FORMAT_G721_ADPCM;
MACRO_WAVE WAVE_FORMAT_G722_ADPCM;
MACRO_WAVE WAVE_FORMAT_G723_ADPCM;
MACRO_WAVE WAVE_FORMAT_G726ADPCM;
MACRO_WAVE WAVE_FORMAT_G726_ADPCM;
MACRO_WAVE WAVE_FORMAT_G728_CELP;
MACRO_WAVE WAVE_FORMAT_G729A;
MACRO_WAVE WAVE_FORMAT_GSM610;
MACRO_WAVE WAVE_FORMAT_IBM_CVSD;
MACRO_WAVE WAVE_FORMAT_IEEE_FLOAT;
MACRO_WAVE WAVE_FORMAT_ILINK_VC;
MACRO_WAVE WAVE_FORMAT_IMA_ADPCM;
MACRO_WAVE WAVE_FORMAT_IPI_HSX;
MACRO_WAVE WAVE_FORMAT_IPI_RPELP;
MACRO_WAVE WAVE_FORMAT_IRAT;
MACRO_WAVE WAVE_FORMAT_ISIAUDIO;
MACRO_WAVE WAVE_FORMAT_LH_CODEC;
MACRO_WAVE WAVE_FORMAT_LRC;
MACRO_WAVE WAVE_FORMAT_LUCENT_G723;
MACRO_WAVE WAVE_FORMAT_MALDEN_PHONYTALK;
MACRO_WAVE WAVE_FORMAT_MEDIASONIC_G723;
MACRO_WAVE WAVE_FORMAT_MEDIASPACE_ADPCM;
MACRO_WAVE WAVE_FORMAT_MEDIAVISION_ADPCM;
MACRO_WAVE WAVE_FORMAT_MPEG;
MACRO_WAVE WAVE_FORMAT_MPEGLAYER3;
MACRO_WAVE WAVE_FORMAT_MSAUDIO1;
MACRO_WAVE WAVE_FORMAT_MSG723;
MACRO_WAVE WAVE_FORMAT_MSNAUDIO;
MACRO_WAVE WAVE_FORMAT_MSRT24;
MACRO_WAVE WAVE_FORMAT_MULAW;
MACRO_WAVE WAVE_FORMAT_MVI_MVI2;
MACRO_WAVE WAVE_FORMAT_NMS_VBXADPCM;
MACRO_WAVE WAVE_FORMAT_NORRIS;
MACRO_WAVE WAVE_FORMAT_OKI_ADPCM;
MACRO_WAVE WAVE_FORMAT_OLIADPCM;
MACRO_WAVE WAVE_FORMAT_OLICELP;
MACRO_WAVE WAVE_FORMAT_OLIGSM;
MACRO_WAVE WAVE_FORMAT_OLIOPR;
MACRO_WAVE WAVE_FORMAT_OLISBC;
MACRO_WAVE WAVE_FORMAT_ONLIVE;
MACRO_WAVE WAVE_FORMAT_PAC;
MACRO_WAVE WAVE_FORMAT_PACKED;
MACRO_WAVE WAVE_FORMAT_PCM;
MACRO_WAVE WAVE_FORMAT_PHILIPS_LPCBB;
MACRO_WAVE WAVE_FORMAT_PROSODY_1612;
MACRO_WAVE WAVE_FORMAT_PROSODY_8KBPS;
MACRO_WAVE WAVE_FORMAT_QDESIGN_MUSIC;
MACRO_WAVE WAVE_FORMAT_QUALCOMM_HALFRATE;
MACRO_WAVE WAVE_FORMAT_QUALCOMM_PUREVOICE;
MACRO_WAVE WAVE_FORMAT_QUARTERDECK;
MACRO_WAVE WAVE_FORMAT_RAW_SPORT;
MACRO_WAVE WAVE_FORMAT_RHETOREX_ADPCM;
MACRO_WAVE WAVE_FORMAT_ROCKWELL_ADPCM;
MACRO_WAVE WAVE_FORMAT_ROCKWELL_DIGITALK;
MACRO_WAVE WAVE_FORMAT_RT24;
MACRO_WAVE WAVE_FORMAT_SANYO_LD_ADPCM;
MACRO_WAVE WAVE_FORMAT_SBC24;
MACRO_WAVE WAVE_FORMAT_SIERRA_ADPCM;
MACRO_WAVE WAVE_FORMAT_SIPROLAB_ACELP4800;
MACRO_WAVE WAVE_FORMAT_SIPROLAB_ACELP8V3;
MACRO_WAVE WAVE_FORMAT_SIPROLAB_ACEPLNET;
MACRO_WAVE WAVE_FORMAT_SIPROLAB_G729;
MACRO_WAVE WAVE_FORMAT_SIPROLAB_G729A;
MACRO_WAVE WAVE_FORMAT_SIPROLAB_KELVIN;
MACRO_WAVE WAVE_FORMAT_SOFTSOUND;
MACRO_WAVE WAVE_FORMAT_SONARC;
MACRO_WAVE WAVE_FORMAT_SONY_SCX;
MACRO_WAVE WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS;
MACRO_WAVE WAVE_FORMAT_TPC;
MACRO_WAVE WAVE_FORMAT_TUBGSM;
MACRO_WAVE WAVE_FORMAT_UHER_ADPCM;
MACRO_WAVE WAVE_FORMAT_UNISYS_NAP_16K;
MACRO_WAVE WAVE_FORMAT_UNISYS_NAP_ADPCM;
MACRO_WAVE WAVE_FORMAT_UNISYS_NAP_ALAW;
MACRO_WAVE WAVE_FORMAT_UNISYS_NAP_ULAW;
MACRO_WAVE WAVE_FORMAT_UNKNOWN;
MACRO_WAVE WAVE_FORMAT_VIVO_G723;
MACRO_WAVE WAVE_FORMAT_VIVO_SIREN;
MACRO_WAVE WAVE_FORMAT_VME_VMPCM;
MACRO_WAVE WAVE_FORMAT_VOXWARE;
MACRO_WAVE WAVE_FORMAT_VOXWARE_AC10;
MACRO_WAVE WAVE_FORMAT_VOXWARE_AC16;
MACRO_WAVE WAVE_FORMAT_VOXWARE_AC20;
MACRO_WAVE WAVE_FORMAT_VOXWARE_AC8;
MACRO_WAVE WAVE_FORMAT_VOXWARE_BYTE_ALIGNED;
MACRO_WAVE WAVE_FORMAT_VOXWARE_RT24;
MACRO_WAVE WAVE_FORMAT_VOXWARE_RT29;
MACRO_WAVE WAVE_FORMAT_VOXWARE_RT29HW;
MACRO_WAVE WAVE_FORMAT_VOXWARE_TQ40;
MACRO_WAVE WAVE_FORMAT_VOXWARE_TQ60;
MACRO_WAVE WAVE_FORMAT_VOXWARE_VR12;
MACRO_WAVE WAVE_FORMAT_VOXWARE_VR18;
MACRO_WAVE WAVE_FORMAT_VSELP;
MACRO_WAVE WAVE_FORMAT_XEBEC;
MACRO_WAVE WAVE_FORMAT_YAMAHA_ADPCM;
MACRO_WAVE WAVE_FORMAT_ZYXEL_ADPCM;
MACRO_WDM WDM_MAJORVERSION;
MACRO_WDM WDM_MINORVERSION;
MACRO_WEOF WEOF;
MACRO_WIN32K WIN32K_INIT_OR_RIT_FAILURE;
MACRO_WINDOWS WINDOWS_NT_BANNER;
MACRO_WINDOWS_NT WINDOWS_NT_CSD_STRING;
MACRO_WINDOWS_NT WINDOWS_NT_INFO_STRING;
MACRO_WINDOWS_NT_INFO WINDOWS_NT_INFO_STRING_PLURAL;
MACRO_WINDOWS_NT WINDOWS_NT_MP_STRING;
MACRO_WINDOWS_NT_INFO WINDOWS_NT_RC_STRING;
MACRO_WINLOGON WINLOGON_FATAL_ERROR;
MACRO_WINVER WINVER;
MACRO_WMIREGISTER WMIREGISTER;
MACRO_WMIREG WMIREG_ACTION_BLOCK_IRPS;
MACRO_WMIREG WMIREG_ACTION_DEREGISTER;
MACRO_WMIREG WMIREG_ACTION_REGISTER;
MACRO_WMIREG WMIREG_ACTION_REREGISTER;
MACRO_WMIREG WMIREG_ACTION_UPDATE_GUIDS;
MACRO_WMIREGISTER WMIUPDATE;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_MagazineSize_ID;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_NumberOfCleanerSlots_ID;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_NumberOfDoors_ID;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_NumberOfDrives_ID;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_NumberOfIEPorts_ID;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_NumberOfSlots_ID;
MACRO_WMI_TAPE WMI_CHANGER_PARAMETERS_NumberOfTransports_ID;
MACRO_WMI_TAPE WMI_CHANGER_PROBLEM_DEVICE_ERROR_ChangerProblemType_ID;
MACRO_WMI_TAPE WMI_CHANGER_PROBLEM_WARNING_ChangerData_ID;
MACRO_WMI_TAPE WMI_CHANGER_PROBLEM_WARNING_ChangerProblemType_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_GEOMETRY_BytesPerSector_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_GEOMETRY_Cylinders_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_GEOMETRY_MediaType_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_GEOMETRY_SectorsPerTrack_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_GEOMETRY_TracksPerCylinder_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_BytesRead_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_BytesWritten_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_IdleTime_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_QueryTime_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_QueueDepth_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_ReadCount_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_ReadTime_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_SplitCount_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_StorageDeviceNumber_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_StorageManagerName_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_WriteCount_ID;
MACRO_ClassInformation_DeviceId_ID WMI_DISK_PERFORMANCE_WriteTime_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_CompressionCapable_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_CompressionEnabled_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_DefaultBlockSize_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_HardwareErrorCorrection_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_MaximumBlockSize_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_MaximumPartitionCount_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_MinimumBlockSize_ID;
MACRO_WMI_TAPE WMI_TAPE_DRIVE_PARAMETERS_ReportSetmarks_ID;
MACRO_WMI_TAPE WMI_TAPE_MEDIA_PARAMETERS_AvailableCapacity_ID;
MACRO_WMI_TAPE WMI_TAPE_MEDIA_PARAMETERS_BlockSize_ID;
MACRO_WMI_TAPE WMI_TAPE_MEDIA_PARAMETERS_MaximumCapacity_ID;
MACRO_WMI_TAPE WMI_TAPE_MEDIA_PARAMETERS_MediaWriteProtected_ID;
MACRO_WMI_TAPE WMI_TAPE_MEDIA_PARAMETERS_PartitionCount_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_DriveHardwareError_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_DriveRequiresCleaning_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_HardError_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_MediaLife_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_ReadFailure_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_ReadWarning_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_ScsiInterfaceError_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_TapeSnapped_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_TimetoCleanDrive_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_UnsupportedFormat_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_WriteFailure_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_DEVICE_ERROR_WriteWarning_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_NonMediumErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectedWithDelay_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectedWithoutDelay_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectionAlgorithmProcessed_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalCorrectedErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalUncorrectedErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectedWithDelay_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectedWithoutDelay_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectionAlgorithmProcessed_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalCorrectedErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalUncorrectedErrors_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_WARNING_DriveProblemType_ID;
MACRO_WMI_TAPE WMI_TAPE_PROBLEM_WARNING_TapeData_ID;
MACRO_WMI_TAPE WMI_TAPE_SYMBOLIC_NAME_TapeSymbolicName_ID;
MACRO_WMI WMI_USB_DRIVER_INFORMATION;
MACRO_WMI WMI_USB_DRIVER_NOTIFICATION;
MACRO_WMI WMI_USB_POWER_DEVICE_ENABLE;
MACRO_WORKER_INVALID WORKER_INVALID;
MACRO_WORKER WORKER_THREAD_RETURNED_AT_BAD_IRQL;
MACRO_WRITE WRITE_DAC;
MACRO_WRITE_LOG WRITE_LOG_SECTORS_IN_Length_ID;
MACRO_WRITE_LOG WRITE_LOG_SECTORS_IN_LogAddress_ID;
MACRO_WRITE_LOG WRITE_LOG_SECTORS_IN_LogSectors_ID;
MACRO_WRITE_LOG WRITE_LOG_SECTORS_IN_SectorCount_ID;
MACRO_WRITE_LOG WRITE_LOG_SECTORS_OUT_Success_ID;
MACRO_WRITE WRITE_OWNER;
void __stdcall WRITE_PORT_BUFFER_UCHAR(PUCHAR Port, PUCHAR Buffer, ULONG Count);
void __stdcall WRITE_PORT_BUFFER_ULONG(PULONG Port, PULONG Buffer, ULONG Count);
void __stdcall WRITE_PORT_BUFFER_USHORT(PUSHORT Port, PUSHORT Buffer, ULONG Count);
void __stdcall WRITE_PORT_UCHAR(PUCHAR Port, UCHAR Value);
void __stdcall WRITE_PORT_ULONG(PULONG Port, ULONG Value);
void __stdcall WRITE_PORT_USHORT(PUSHORT Port, USHORT Value);
void __stdcall WRITE_REGISTER_BUFFER_UCHAR(PUCHAR Register, PUCHAR Buffer, ULONG Count);
void __stdcall WRITE_REGISTER_BUFFER_ULONG(PULONG Register, PULONG Buffer, ULONG Count);
void __stdcall WRITE_REGISTER_BUFFER_USHORT(PUSHORT Register, PUSHORT Buffer, ULONG Count);
void __stdcall WRITE_REGISTER_UCHAR(PUCHAR Register, UCHAR Value);
void __stdcall WRITE_REGISTER_ULONG(PULONG Register, ULONG Value);
void __stdcall WRITE_REGISTER_USHORT(PUSHORT Register, USHORT Value);
MACRO_WST_BYTES WST_BYTES_PER_LINE;
MACRO_WST WST_TVTUNER_CHANGE_BEGIN_TUNE;
MACRO_WST WST_TVTUNER_CHANGE_END_TUNE;
_WAIT_TYPE WaitAll;
_WAIT_TYPE WaitAny;
_WDMUSB_POWER_STATE WdmUsbPowerDeviceD0;
_WDMUSB_POWER_STATE WdmUsbPowerDeviceD1;
_WDMUSB_POWER_STATE WdmUsbPowerDeviceD2;
_WDMUSB_POWER_STATE WdmUsbPowerDeviceD3;
_WDMUSB_POWER_STATE WdmUsbPowerDeviceUnspecified;
_WDMUSB_POWER_STATE WdmUsbPowerNotMapped;
_WDMUSB_POWER_STATE WdmUsbPowerSystemHibernate;
_WDMUSB_POWER_STATE WdmUsbPowerSystemShutdown;
_WDMUSB_POWER_STATE WdmUsbPowerSystemSleeping1;
_WDMUSB_POWER_STATE WdmUsbPowerSystemSleeping2;
_WDMUSB_POWER_STATE WdmUsbPowerSystemSleeping3;
_WDMUSB_POWER_STATE WdmUsbPowerSystemUnspecified;
_WDMUSB_POWER_STATE WdmUsbPowerSystemWorking;
_DMA_WIDTH Width16Bits;
_DMA_WIDTH Width32Bits;
_DMA_WIDTH Width8Bits;
_CM_SERVICE_NODE_TYPE Win32ServiceOwnProcess;
_CM_SERVICE_NODE_TYPE Win32ServiceShareProcess;
NTSTATUS __stdcall WmiCompleteRequest(PDEVICE_OBJECT DeviceObject, PIRP Irp, NTSTATUS Status, ULONG BufferUsed, CCHAR PriorityBoost);
$FE3B83602F0ED43C5C383B1542328237 WmiDataBlockControl;
$FE3B83602F0ED43C5C383B1542328237 WmiEventControl;
NTSTATUS __stdcall WmiFireEvent(PDEVICE_OBJECT DeviceObject, LPGUID Guid, ULONG InstanceIndex, ULONG EventDataSize, PVOID EventData);
NTSTATUS __stdcall WmiQueryTraceInformation(TRACE_INFORMATION_CLASS TraceInformationClass, PVOID TraceInformation, ULONG TraceInformationLength, PULONG RequiredLength, PVOID Buffer);
NTSTATUS __stdcall WmiSystemControl(PWMILIB_CONTEXT WmiLibInfo, PDEVICE_OBJECT DeviceObject, PIRP Irp, PSYSCTL_IRP_DISPOSITION IrpDisposition);
_KWAIT_REASON WrDelayExecution;
_KWAIT_REASON WrDispatchInt;
_KWAIT_REASON WrEventPair;
_KWAIT_REASON WrExecutive;
_KWAIT_REASON WrFreePage;
_KWAIT_REASON WrKernel;
_KWAIT_REASON WrLpcReceive;
_KWAIT_REASON WrLpcReply;
_KWAIT_REASON WrMutex;
_KWAIT_REASON WrPageIn;
_KWAIT_REASON WrPageOut;
_KWAIT_REASON WrPoolAllocation;
_KWAIT_REASON WrPreempted;
_KWAIT_REASON WrPushLock;
_KWAIT_REASON WrQuantumEnd;
_KWAIT_REASON WrQueue;
_KWAIT_REASON WrRendezvous;
_KWAIT_REASON WrResource;
_KWAIT_REASON WrSuspended;
_KWAIT_REASON WrUserRequest;
_KWAIT_REASON WrVirtualMemory;
_KWAIT_REASON WrYieldExecution;
MACRO_WriteLogSectors WriteLogSectors;
MACRO_INTERNAL_ERROR XNS_INTERNAL_ERROR;
NTSTATUS __stdcall ZwClose(HANDLE Handle);
NTSTATUS __stdcall ZwCreateDirectoryObject(PHANDLE DirectoryHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwCreateFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER AllocationSize, ULONG FileAttributes, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, PVOID EaBuffer, ULONG EaLength);
NTSTATUS __stdcall ZwCreateKey(PHANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG TitleIndex, PUNICODE_STRING Class, ULONG CreateOptions, PULONG Disposition);
NTSTATUS __stdcall ZwCreateSection(PHANDLE SectionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PLARGE_INTEGER MaximumSize, ULONG SectionPageProtection, ULONG AllocationAttributes, HANDLE FileHandle);
NTSTATUS __stdcall ZwDeleteKey(HANDLE KeyHandle);
NTSTATUS __stdcall ZwDeleteValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName);
NTSTATUS __stdcall ZwEnumerateKey(HANDLE KeyHandle, ULONG Index, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwEnumerateValueKey(HANDLE KeyHandle, ULONG Index, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwFlushKey(HANDLE KeyHandle);
NTSTATUS __stdcall ZwMakeTemporaryObject(HANDLE Handle);
NTSTATUS __stdcall ZwMapViewOfSection(HANDLE SectionHandle, HANDLE ProcessHandle, PVOID *BaseAddress, ULONG ZeroBits, SIZE_T CommitSize, PLARGE_INTEGER SectionOffset, PSIZE_T ViewSize, SECTION_INHERIT InheritDisposition, ULONG AllocationType, ULONG Protect);
NTSTATUS __stdcall ZwOpenFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG ShareAccess, ULONG OpenOptions);
NTSTATUS __stdcall ZwOpenKey(PHANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenSection(PHANDLE SectionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenSymbolicLinkObject(PHANDLE LinkHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwQueryInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall ZwQueryKey(HANDLE KeyHandle, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwQuerySymbolicLinkObject(HANDLE LinkHandle, PUNICODE_STRING LinkTarget, PULONG ReturnedLength);
NTSTATUS __stdcall ZwQueryValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwReadFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall ZwSetInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall ZwSetValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName, ULONG TitleIndex, ULONG Type, PVOID Data, ULONG DataSize);
NTSTATUS __stdcall ZwUnmapViewOfSection(HANDLE ProcessHandle, PVOID BaseAddress);
NTSTATUS __stdcall ZwWriteFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, PLARGE_INTEGER ByteOffset, PULONG Key);
MACRO__100NS _100NS_UNITS_PER_SECOND;
MACRO__ALPHA _ALPHA;
MACRO__BDATYPES _BDATYPES_;
MACRO__UPPER _BLANK;
const GUID BUS1394_CLASS_GUID;
const GUID CLSID_KsIBasicAudioInterfaceHandler;
const GUID CLSID_MiniportDriverFmSynth;
const GUID CLSID_MiniportDriverFmSynthWithVol;
const GUID CLSID_MiniportDriverUart;
const GUID CLSID_PortMidi;
const GUID CLSID_PortTopology;
const GUID CLSID_PortWaveCyclic;
const GUID CLSID_PortWavePci;
MACRO__UPPER _CONTROL;
MACRO__UPPER _DIGIT;
ULONG DbgPrint(PCH Format, ...);
const GUID DbgPrintGuid;
const GUID DiskIoGuid;
const GUID DiskPerfGuid;
const GUID ENCAPIPARAM_BITRATE;
const GUID ENCAPIPARAM_BITRATE_MODE;
const GUID ENCAPIPARAM_PEAK_BITRATE;
const GUID EVENTID_CADenialCountChanged;
const GUID EVENTID_SignalStatusChanged;
const GUID EVENTID_TuningChanged;
const GUID EVENTSETID_CROSSBAR;
const GUID EVENTSETID_TUNER;
const GUID EVENTSETID_VIDEODECODER;
POBJECT_TYPE *ExEventObjectType;
POBJECT_TYPE *ExSemaphoreObjectType;
const GUID FileIoGuid;
const GUID GUID_61883_CLASS;
const GUID GUID_ACPI_CMOS_INTERFACE_STANDARD;
const GUID GUID_ACPI_INTERFACE_STANDARD;
const GUID GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD;
const GUID GUID_ACPI_REGS_INTERFACE_STANDARD;
const GUID GUID_AGP_TARGET_BUS_INTERFACE_STANDARD;
const GUID GUID_ARBITER_INTERFACE_STANDARD;
const GUID GUID_AVC_CLASS;
const GUID GUID_BUS_INTERFACE_MEDIUMS;
const GUID GUID_BUS_INTERFACE_STANDARD;
const GUID GUID_BUS_TYPE_1394;
const GUID GUID_BUS_TYPE_AVC;
const GUID GUID_BUS_TYPE_DOT4PRT;
const GUID GUID_BUS_TYPE_EISA;
const GUID GUID_BUS_TYPE_HID;
const GUID GUID_BUS_TYPE_INTERNAL;
const GUID GUID_BUS_TYPE_IRDA;
const GUID GUID_BUS_TYPE_ISAPNP;
const GUID GUID_BUS_TYPE_LPTENUM;
const GUID GUID_BUS_TYPE_MCA;
const GUID GUID_BUS_TYPE_PCI;
const GUID GUID_BUS_TYPE_PCMCIA;
const GUID GUID_BUS_TYPE_SD;
const GUID GUID_BUS_TYPE_SERENUM;
const GUID GUID_BUS_TYPE_USB;
const GUID GUID_BUS_TYPE_USBPRINT;
const GUID GUID_CLASS_DBC;
const GUID GUID_DEVICE_INTERFACE_ARRIVAL;
const GUID GUID_DEVICE_INTERFACE_REMOVAL;
const GUID GUID_DEVINTERFACE_HID;
const GUID GUID_DEVINTERFACE_USB_DEVICE;
const GUID GUID_DEVINTERFACE_USB_HOST_CONTROLLER;
const GUID GUID_DEVINTERFACE_USB_HUB;
const GUID GUID_HID_INTERFACE_HIDPARSE;
const GUID GUID_HID_INTERFACE_NOTIFY;
const GUID GUID_HWPROFILE_CHANGE_CANCELLED;
const GUID GUID_HWPROFILE_CHANGE_COMPLETE;
const GUID GUID_HWPROFILE_QUERY_CHANGE;
const GUID GUID_INT_ROUTE_INTERFACE_STANDARD;
const GUID GUID_LEGACY_DEVICE_DETECTION_STANDARD;
const GUID GUID_MF_ENUMERATION_INTERFACE;
const GUID GUID_NULL;
const GUID GUID_PCI_BUS_INTERFACE_STANDARD;
const GUID GUID_PCI_DEVICE_PRESENT_INTERFACE;
const GUID GUID_PCMCIA_BUS_INTERFACE_STANDARD;
const GUID GUID_PNP_CUSTOM_NOTIFICATION;
const GUID GUID_PNP_LOCATION_INTERFACE;
const GUID GUID_PNP_POWER_NOTIFICATION;
const GUID GUID_POWER_DEVICE_ENABLE;
const GUID GUID_POWER_DEVICE_TIMEOUTS;
const GUID GUID_POWER_DEVICE_WAKE_ENABLE;
const GUID GUID_TARGET_DEVICE_QUERY_REMOVE;
const GUID GUID_TARGET_DEVICE_REMOVE_CANCELLED;
const GUID GUID_TARGET_DEVICE_REMOVE_COMPLETE;
const GUID GUID_TRANSLATOR_INTERFACE_STANDARD;
const GUID GUID_USBCAMD_INTERFACE;
const GUID GUID_USB_WMI_STD_DATA;
const GUID GUID_USB_WMI_STD_NOTIFICATION;
const GUID GUID_VIRTUAL_AVC_CLASS;
const GUID GenericMessageGuid;
const GUID GlobalLoggerGuid;
MACRO__UPPER _HEX;
const GUID HardFaultGuid;
const GUID IID_IAdapterPowerManagement;
const GUID IID_IDmaChannel;
const GUID IID_IDmaChannelSlave;
const GUID IID_IDmaOperations;
const GUID IID_IDrmAudioStream;
const GUID IID_IDrmPort;
const GUID IID_IDrmPort2;
const GUID IID_IInterruptSync;
const GUID IID_IKoInitializeParentDeviceObject;
const GUID IID_IMiniport;
const GUID IID_IMiniportMidi;
const GUID IID_IMiniportMidiStream;
const GUID IID_IMiniportTopology;
const GUID IID_IMiniportWaveCyclic;
const GUID IID_IMiniportWaveCyclicStream;
const GUID IID_IMiniportWavePci;
const GUID IID_IMiniportWavePciStream;
const GUID IID_IMusicTechnology;
const GUID IID_IPinCount;
const GUID IID_IPort;
const GUID IID_IPortClsVersion;
const GUID IID_IPortEvents;
const GUID IID_IPortMidi;
const GUID IID_IPortTopology;
const GUID IID_IPortWaveCyclic;
const GUID IID_IPortWavePci;
const GUID IID_IPortWavePciStream;
const GUID IID_IPowerNotify;
const GUID IID_IPreFetchOffset;
const GUID IID_IRegistryKey;
const GUID IID_IResourceList;
const GUID IID_IServiceGroup;
const GUID IID_IServiceSink;
const GUID IID_IUnknown;
const GUID IID_IWaveCyclicClock;
const GUID IID_IWavePciClock;
MACRO__INC _INC_MMREG;
MACRO__IOB _IOB_ENTRIES;
MACRO__IONBF _IOEOF;
MACRO__IONBF _IOERR;
MACRO__IOFBF IOFBF;
MACRO__IOFBF _IOLBF;
MACRO__IONBF _IOMYBUF;
MACRO__IONBF _IONBF;
MACRO__IOREAD _IOREAD;
MACRO__IONBF _IORW;
MACRO__IONBF _IOSTRG;
MACRO__IOREAD _IOWRT;
const GUID ImageLoadGuid;
LONG __stdcall InterlockedAddLargeStatistic(PLONGLONG Addend, ULONG Increment);
POBJECT_TYPE *IoFileObjectType;
const GUID KSALGORITHMINSTANCE_SYSTEM_ACOUSTIC_ECHO_CANCEL;
const GUID KSALGORITHMINSTANCE_SYSTEM_AGC;
const GUID KSALGORITHMINSTANCE_SYSTEM_MICROPHONE_ARRAY_PROCESSOR;
const GUID KSALGORITHMINSTANCE_SYSTEM_NOISE_SUPPRESS;
const GUID KSAUDFNAME_3D_CENTER;
const GUID KSAUDFNAME_3D_DEPTH;
const GUID KSAUDFNAME_3D_STEREO;
const GUID KSAUDFNAME_ALTERNATE_MICROPHONE;
const GUID KSAUDFNAME_AUX;
const GUID KSAUDFNAME_AUX_MUTE;
const GUID KSAUDFNAME_AUX_VOLUME;
const GUID KSAUDFNAME_BASS;
const GUID KSAUDFNAME_CD_AUDIO;
const GUID KSAUDFNAME_CD_IN_VOLUME;
const GUID KSAUDFNAME_CD_MUTE;
const GUID KSAUDFNAME_CD_VOLUME;
const GUID KSAUDFNAME_LINE_IN;
const GUID KSAUDFNAME_LINE_IN_VOLUME;
const GUID KSAUDFNAME_LINE_MUTE;
const GUID KSAUDFNAME_LINE_VOLUME;
const GUID KSAUDFNAME_MASTER_MUTE;
const GUID KSAUDFNAME_MASTER_VOLUME;
const GUID KSAUDFNAME_MICROPHONE_BOOST;
const GUID KSAUDFNAME_MIC_IN_VOLUME;
const GUID KSAUDFNAME_MIC_MUTE;
const GUID KSAUDFNAME_MIC_VOLUME;
const GUID KSAUDFNAME_MIDI;
const GUID KSAUDFNAME_MIDI_IN_VOLUME;
const GUID KSAUDFNAME_MIDI_MUTE;
const GUID KSAUDFNAME_MIDI_VOLUME;
const GUID KSAUDFNAME_MONO_MIX;
const GUID KSAUDFNAME_MONO_MIX_MUTE;
const GUID KSAUDFNAME_MONO_MIX_VOLUME;
const GUID KSAUDFNAME_MONO_OUT;
const GUID KSAUDFNAME_MONO_OUT_MUTE;
const GUID KSAUDFNAME_MONO_OUT_VOLUME;
const GUID KSAUDFNAME_PC_SPEAKER;
const GUID KSAUDFNAME_PC_SPEAKER_MUTE;
const GUID KSAUDFNAME_PC_SPEAKER_VOLUME;
const GUID KSAUDFNAME_PEAKMETER;
const GUID KSAUDFNAME_RECORDING_CONTROL;
const GUID KSAUDFNAME_RECORDING_SOURCE;
const GUID KSAUDFNAME_STEREO_MIX;
const GUID KSAUDFNAME_STEREO_MIX_MUTE;
const GUID KSAUDFNAME_STEREO_MIX_VOLUME;
const GUID KSAUDFNAME_TREBLE;
const GUID KSAUDFNAME_VIDEO;
const GUID KSAUDFNAME_VIDEO_MUTE;
const GUID KSAUDFNAME_VIDEO_VOLUME;
const GUID KSAUDFNAME_VOLUME_CONTROL;
const GUID KSAUDFNAME_WAVE_IN_VOLUME;
const GUID KSAUDFNAME_WAVE_MUTE;
const GUID KSAUDFNAME_WAVE_OUT_MIX;
const GUID KSAUDFNAME_WAVE_VOLUME;
const GUID KSCATEGORY_ACOUSTIC_ECHO_CANCEL;
const GUID KSCATEGORY_AUDIO;
const GUID KSCATEGORY_AUDIO_DEVICE;
const GUID KSCATEGORY_AUDIO_GFX;
const GUID KSCATEGORY_AUDIO_SPLITTER;
const GUID KSCATEGORY_BDA_IP_SINK;
const GUID KSCATEGORY_BDA_NETWORK_EPG;
const GUID KSCATEGORY_BDA_NETWORK_PROVIDER;
const GUID KSCATEGORY_BDA_NETWORK_TUNER;
const GUID KSCATEGORY_BDA_RECEIVER_COMPONENT;
const GUID KSCATEGORY_BDA_TRANSPORT_INFORMATION;
const GUID KSCATEGORY_BRIDGE;
const GUID KSCATEGORY_CAPTURE;
const GUID KSCATEGORY_CLOCK;
const GUID KSCATEGORY_COMMUNICATIONSTRANSFORM;
const GUID KSCATEGORY_CROSSBAR;
const GUID KSCATEGORY_DATACOMPRESSOR;
const GUID KSCATEGORY_DATADECOMPRESSOR;
const GUID KSCATEGORY_DATATRANSFORM;
const GUID KSCATEGORY_ENCODER;
const GUID KSCATEGORY_ESCALANTE_PLATFORM_DRIVER;
const GUID KSCATEGORY_FILESYSTEM;
const GUID KSCATEGORY_INTERFACETRANSFORM;
const GUID KSCATEGORY_MEDIUMTRANSFORM;
const GUID KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR;
const GUID KSCATEGORY_MIXER;
const GUID KSCATEGORY_MULTIPLEXER;
const GUID KSCATEGORY_NETWORK;
const GUID KSCATEGORY_PREFERRED_MIDIOUT_DEVICE;
const GUID KSCATEGORY_PREFERRED_WAVEIN_DEVICE;
const GUID KSCATEGORY_PREFERRED_WAVEOUT_DEVICE;
const GUID KSCATEGORY_PROXY;
const GUID KSCATEGORY_QUALITY;
const GUID KSCATEGORY_RENDER;
const GUID KSCATEGORY_SPLITTER;
const GUID KSCATEGORY_SYSAUDIO;
const GUID KSCATEGORY_TEXT;
const GUID KSCATEGORY_TOPOLOGY;
const GUID KSCATEGORY_TVAUDIO;
const GUID KSCATEGORY_TVTUNER;
const GUID KSCATEGORY_VBICODEC;
const GUID KSCATEGORY_VIDEO;
const GUID KSCATEGORY_VIRTUAL;
const GUID KSCATEGORY_VPMUX;
const GUID KSCATEGORY_WDMAUD;
const GUID KSCATEGORY_WDMAUD_USE_PIN_NAME;
const GUID KSCOMPONENTID_USBAUDIO;
const GUID KSDATAFORMAT_SPECIFIER_61883_4;
const GUID KSDATAFORMAT_SPECIFIER_AC3_AUDIO;
const GUID KSDATAFORMAT_SPECIFIER_ANALOGVIDEO;
const GUID KSDATAFORMAT_SPECIFIER_AVC;
const GUID KSDATAFORMAT_SPECIFIER_BDA_IP;
const GUID KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT;
const GUID KSDATAFORMAT_SPECIFIER_DIALECT_AC3_AUDIO;
const GUID KSDATAFORMAT_SPECIFIER_DIALECT_MPEG1_AUDIO;
const GUID KSDATAFORMAT_SPECIFIER_DIALECT_MPEG1_VIDEO;
const GUID KSDATAFORMAT_SPECIFIER_DIALECT_MPEG2_AUDIO;
const GUID KSDATAFORMAT_SPECIFIER_DIALECT_MPEG2_VIDEO;
const GUID KSDATAFORMAT_SPECIFIER_DSOUND;
const GUID KSDATAFORMAT_SPECIFIER_DVINFO;
const GUID KSDATAFORMAT_SPECIFIER_DV_AVC;
const GUID KSDATAFORMAT_SPECIFIER_FILEHANDLE;
const GUID KSDATAFORMAT_SPECIFIER_FILENAME;
const GUID KSDATAFORMAT_SPECIFIER_LPCM_AUDIO;
const GUID KSDATAFORMAT_SPECIFIER_MPEG1_VIDEO;
const GUID KSDATAFORMAT_SPECIFIER_MPEG2_AUDIO;
const GUID KSDATAFORMAT_SPECIFIER_MPEG2_VIDEO;
const GUID KSDATAFORMAT_SPECIFIER_NONE;
const GUID KSDATAFORMAT_SPECIFIER_VBI;
const GUID KSDATAFORMAT_SPECIFIER_VC_ID;
const GUID KSDATAFORMAT_SPECIFIER_VIDEOINFO;
const GUID KSDATAFORMAT_SPECIFIER_VIDEOINFO2;
const GUID KSDATAFORMAT_SPECIFIER_WAVEFORMATEX;
const GUID KSDATAFORMAT_SUBTYPE_AC3_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_ANALOG;
const GUID KSDATAFORMAT_SUBTYPE_ATSC_SI;
const GUID KSDATAFORMAT_SUBTYPE_BDA_IP;
const GUID KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL;
const GUID KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT;
const GUID KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP;
const GUID KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP;
const GUID KSDATAFORMAT_SUBTYPE_CC;
const GUID KSDATAFORMAT_SUBTYPE_DSS_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_DSS_VIDEO;
const GUID KSDATAFORMAT_SUBTYPE_DTS_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_DVB_SI;
const GUID KSDATAFORMAT_SUBTYPE_DVHD;
const GUID KSDATAFORMAT_SUBTYPE_DVSD;
const GUID KSDATAFORMAT_SUBTYPE_DVSL;
const GUID KSDATAFORMAT_SUBTYPE_LPCM_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_Line21_BytePair;
const GUID KSDATAFORMAT_SUBTYPE_Line21_GOPPacket;
const GUID KSDATAFORMAT_SUBTYPE_MIDI;
const GUID KSDATAFORMAT_SUBTYPE_MIDI_BUS;
const GUID KSDATAFORMAT_SUBTYPE_MPEG1Packet;
const GUID KSDATAFORMAT_SUBTYPE_MPEG1Payload;
const GUID KSDATAFORMAT_SUBTYPE_MPEG1Video;
const GUID KSDATAFORMAT_SUBTYPE_MPEG2_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_MPEG2_VIDEO;
const GUID KSDATAFORMAT_SUBTYPE_NABTS;
const GUID KSDATAFORMAT_SUBTYPE_NABTS_FEC;
const GUID KSDATAFORMAT_SUBTYPE_NONE;
const GUID KSDATAFORMAT_SUBTYPE_OVERLAY;
const GUID KSDATAFORMAT_SUBTYPE_PCM;
const GUID KSDATAFORMAT_SUBTYPE_RAW8;
const GUID KSDATAFORMAT_SUBTYPE_RIFF;
const GUID KSDATAFORMAT_SUBTYPE_RIFFMIDI;
const GUID KSDATAFORMAT_SUBTYPE_RIFFWAVE;
const GUID KSDATAFORMAT_SUBTYPE_SDDS_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_STANDARD_AC3_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_STANDARD_MPEG1_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_STANDARD_MPEG1_VIDEO;
const GUID KSDATAFORMAT_SUBTYPE_STANDARD_MPEG2_AUDIO;
const GUID KSDATAFORMAT_SUBTYPE_STANDARD_MPEG2_VIDEO;
const GUID KSDATAFORMAT_SUBTYPE_SUBPICTURE;
const GUID KSDATAFORMAT_SUBTYPE_TELETEXT;
const GUID KSDATAFORMAT_SUBTYPE_VPVBI;
const GUID KSDATAFORMAT_SUBTYPE_VPVideo;
const GUID KSDATAFORMAT_SUBTYPE_WAVEFORMATEX;
const GUID KSDATAFORMAT_TYPE_ANALOGVIDEO;
const GUID KSDATAFORMAT_TYPE_AUDIO;
const GUID KSDATAFORMAT_TYPE_AUXLine21Data;
const GUID KSDATAFORMAT_TYPE_BDA_ANTENNA;
const GUID KSDATAFORMAT_TYPE_BDA_IF_SIGNAL;
const GUID KSDATAFORMAT_TYPE_BDA_IP;
const GUID KSDATAFORMAT_TYPE_BDA_IP_CONTROL;
const GUID KSDATAFORMAT_TYPE_DVD_ENCRYPTED_PACK;
const GUID KSDATAFORMAT_TYPE_INTERLEAVED;
const GUID KSDATAFORMAT_TYPE_MIDI;
const GUID KSDATAFORMAT_TYPE_MPE;
const GUID KSDATAFORMAT_TYPE_MPEG2_PES;
const GUID KSDATAFORMAT_TYPE_MPEG2_PROGRAM;
const GUID KSDATAFORMAT_TYPE_MPEG2_SECTIONS;
const GUID KSDATAFORMAT_TYPE_MPEG2_TRANSPORT;
const GUID KSDATAFORMAT_TYPE_MPEG2_TRANSPORT_STRIDE;
const GUID KSDATAFORMAT_TYPE_MUSIC;
const GUID KSDATAFORMAT_TYPE_NABTS;
const GUID KSDATAFORMAT_TYPE_STANDARD_ELEMENTARY_STREAM;
const GUID KSDATAFORMAT_TYPE_STANDARD_PACK_HEADER;
const GUID KSDATAFORMAT_TYPE_STANDARD_PES_PACKET;
const GUID KSDATAFORMAT_TYPE_STREAM;
const GUID KSDATAFORMAT_TYPE_TEXT;
const GUID KSDATAFORMAT_TYPE_VBI;
const GUID KSDATAFORMAT_TYPE_VIDEO;
const GUID KSDEGRADESETID_Standard;
const GUID KSEVENTSETID_AudioControlChange;
const GUID KSEVENTSETID_BdaCAEvent;
const GUID KSEVENTSETID_BdaPinEvent;
const GUID KSEVENTSETID_Clock;
const GUID KSEVENTSETID_Connection;
const GUID KSEVENTSETID_Cyclic;
const GUID KSEVENTSETID_LoopedStreaming;
const GUID KSEVENTSETID_StreamAllocator;
const GUID KSEVENTSETID_VIDCAPTOSTI;
const GUID KSEVENTSETID_VIDCAP_TVAUDIO;
const GUID KSEVENTSETID_VPNotify;
const GUID KSEVENTSETID_VPVBINotify;
const GUID KSINTERFACESETID_FileIo;
const GUID KSINTERFACESETID_Media;
const GUID KSINTERFACESETID_Standard;
const GUID KSMEDIUMSETID_1394SerialBus;
const GUID KSMEDIUMSETID_MidiBus;
const GUID KSMEDIUMSETID_Standard;
const GUID KSMEDIUMSETID_VPBus;
const GUID KSMEMORY_TYPE_DEVICE_UNKNOWN;
const GUID KSMEMORY_TYPE_KERNEL_NONPAGED;
const GUID KSMEMORY_TYPE_KERNEL_PAGED;
const GUID KSMEMORY_TYPE_SYSTEM;
const GUID KSMEMORY_TYPE_USER;
const GUID KSMETHODSETID_BdaChangeSync;
const GUID KSMETHODSETID_BdaDeviceConfiguration;
const GUID KSMETHODSETID_StreamAllocator;
const GUID KSMETHODSETID_StreamIo;
const GUID KSMETHODSETID_Wavetable;
const GUID KSMUSIC_TECHNOLOGY_FMSYNTH;
const GUID KSMUSIC_TECHNOLOGY_PORT;
const GUID KSMUSIC_TECHNOLOGY_SQSYNTH;
const GUID KSMUSIC_TECHNOLOGY_SWSYNTH;
const GUID KSMUSIC_TECHNOLOGY_WAVETABLE;
const GUID KSNAME_Allocator;
const GUID KSNAME_Clock;
const GUID KSNAME_Filter;
const GUID KSNAME_Pin;
const GUID KSNAME_TopologyNode;
const GUID KSNODETYPE_1394_DA_STREAM;
const GUID KSNODETYPE_1394_DV_STREAM_SOUNDTRACK;
const GUID KSNODETYPE_3D_EFFECTS;
const GUID KSNODETYPE_ADC;
const GUID KSNODETYPE_AGC;
const GUID KSNODETYPE_ANALOG_CONNECTOR;
const GUID KSNODETYPE_ANALOG_TAPE;
const GUID KSNODETYPE_CABLE_TUNER_AUDIO;
const GUID KSNODETYPE_CD_PLAYER;
const GUID KSNODETYPE_CHORUS;
const GUID KSNODETYPE_COMMUNICATION_SPEAKER;
const GUID KSNODETYPE_DAC;
const GUID KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE;
const GUID KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE;
const GUID KSNODETYPE_DELAY;
const GUID KSNODETYPE_DEMUX;
const GUID KSNODETYPE_DESKTOP_MICROPHONE;
const GUID KSNODETYPE_DESKTOP_SPEAKER;
const GUID KSNODETYPE_DEV_SPECIFIC;
const GUID KSNODETYPE_DIGITAL_AUDIO_INTERFACE;
const GUID KSNODETYPE_DOWN_LINE_PHONE;
const GUID KSNODETYPE_DRM_DESCRAMBLE;
const GUID KSNODETYPE_DSS_AUDIO;
const GUID KSNODETYPE_DVD_AUDIO;
const GUID KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE;
const GUID KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE;
const GUID KSNODETYPE_EQUALIZATION_NOISE;
const GUID KSNODETYPE_EQUALIZER;
const GUID KSNODETYPE_HANDSET;
const GUID KSNODETYPE_HEADPHONES;
const GUID KSNODETYPE_HEADSET;
const GUID KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO;
const GUID KSNODETYPE_LEGACY_AUDIO_CONNECTOR;
const GUID KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE;
const GUID KSNODETYPE_LINE_CONNECTOR;
const GUID KSNODETYPE_LOUDNESS;
const GUID KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER;
const GUID KSNODETYPE_MICROPHONE;
const GUID KSNODETYPE_MICROPHONE_ARRAY;
const GUID KSNODETYPE_MINIDISK;
const GUID KSNODETYPE_MULTITRACK_RECORDER;
const GUID KSNODETYPE_MUTE;
const GUID KSNODETYPE_MUX;
const GUID KSNODETYPE_NOISE_SUPPRESS;
const GUID KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE;
const GUID KSNODETYPE_PEAKMETER;
const GUID KSNODETYPE_PERSONAL_MICROPHONE;
const GUID KSNODETYPE_PHONE_LINE;
const GUID KSNODETYPE_PHONOGRAPH;
const GUID KSNODETYPE_PROCESSING_MICROPHONE_ARRAY;
const GUID KSNODETYPE_PROLOGIC_DECODER;
const GUID KSNODETYPE_PROLOGIC_ENCODER;
const GUID KSNODETYPE_RADIO_RECEIVER;
const GUID KSNODETYPE_RADIO_TRANSMITTER;
const GUID KSNODETYPE_REVERB;
const GUID KSNODETYPE_ROOM_SPEAKER;
const GUID KSNODETYPE_SATELLITE_RECEIVER_AUDIO;
const GUID KSNODETYPE_SPDIF_INTERFACE;
const GUID KSNODETYPE_SPEAKER;
const GUID KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION;
const GUID KSNODETYPE_SRC;
const GUID KSNODETYPE_STEREO_ENHANCE;
const GUID KSNODETYPE_STEREO_WIDE;
const GUID KSNODETYPE_SUM;
const GUID KSNODETYPE_SUPERMIX;
const GUID KSNODETYPE_SWMIDI;
const GUID KSNODETYPE_SWSYNTH;
const GUID KSNODETYPE_SYNTHESIZER;
const GUID KSNODETYPE_TELEPHONE;
const GUID KSNODETYPE_TONE;
const GUID KSNODETYPE_TV_TUNER_AUDIO;
const GUID KSNODETYPE_VCR_AUDIO;
const GUID KSNODETYPE_VIDEO_DISC_AUDIO;
const GUID KSNODETYPE_VOLUME;
const GUID KSNODE_BDA_8VSB_DEMODULATOR;
const GUID KSNODE_BDA_COFDM_DEMODULATOR;
const GUID KSNODE_BDA_COMMON_CA_POD;
const GUID KSNODE_BDA_IP_SINK;
const GUID KSNODE_BDA_OPENCABLE_POD;
const GUID KSNODE_BDA_PID_FILTER;
const GUID KSNODE_BDA_QAM_DEMODULATOR;
const GUID KSNODE_BDA_QPSK_DEMODULATOR;
const GUID KSNODE_BDA_RF_TUNER;
const GUID KSPROPSETID_AC3;
const GUID KSPROPSETID_Acoustic_Echo_Cancel;
const GUID KSPROPSETID_Audio;
const GUID KSPROPSETID_AudioDecoderOut;
const GUID KSPROPSETID_AudioGfx;
const GUID KSPROPSETID_BdaAutodemodulate;
const GUID KSPROPSETID_BdaCA;
const GUID KSPROPSETID_BdaDigitalDemodulator;
const GUID KSPROPSETID_BdaEthernetFilter;
const GUID KSPROPSETID_BdaFrequencyFilter;
const GUID KSPROPSETID_BdaIPv4Filter;
const GUID KSPROPSETID_BdaIPv6Filter;
const GUID KSPROPSETID_BdaLNBInfo;
const GUID KSPROPSETID_BdaNullTransform;
const GUID KSPROPSETID_BdaPIDFilter;
const GUID KSPROPSETID_BdaPinControl;
const GUID KSPROPSETID_BdaSignalStats;
const GUID KSPROPSETID_BdaTableSection;
const GUID KSPROPSETID_BdaTopology;
const GUID KSPROPSETID_BdaVoidTransform;
const GUID KSPROPSETID_Bibliographic;
const GUID KSPROPSETID_Clock;
const GUID KSPROPSETID_Connection;
const GUID KSPROPSETID_CopyProt;
const GUID KSPROPSETID_DirectSound3DBuffer;
const GUID KSPROPSETID_DirectSound3DListener;
const GUID KSPROPSETID_DrmAudioStream;
const GUID KSPROPSETID_DvdSubPic;
const GUID KSPROPSETID_GM;
const GUID KSPROPSETID_General;
const GUID KSPROPSETID_Hrtf3d;
const GUID KSPROPSETID_Itd3d;
const GUID KSPROPSETID_MediaSeeking;
const GUID KSPROPSETID_Mpeg2Vid;
const GUID KSPROPSETID_OverlayUpdate;
const GUID KSPROPSETID_Pin;
const GUID KSPROPSETID_Quality;
const GUID KSPROPSETID_RtAudio;
const GUID KSPROPSETID_Stream;
const GUID KSPROPSETID_StreamAllocator;
const GUID KSPROPSETID_StreamInterface;
const GUID KSPROPSETID_Sysaudio;
const GUID KSPROPSETID_Sysaudio_Pin;
const GUID KSPROPSETID_TSRateChange;
const GUID KSPROPSETID_Topology;
const GUID KSPROPSETID_TopologyNode;
const GUID KSPROPSETID_VBICAP_PROPERTIES;
const GUID KSPROPSETID_VBICodecFiltering;
const GUID KSPROPSETID_VPConfig;
const GUID KSPROPSETID_VPVBIConfig;
const GUID KSPROPSETID_Wave;
const GUID KSPROPTYPESETID_General;
const GUID KSTIME_FORMAT_BYTE;
const GUID KSTIME_FORMAT_FIELD;
const GUID KSTIME_FORMAT_FRAME;
const GUID KSTIME_FORMAT_MEDIA_TIME;
const GUID KSTIME_FORMAT_SAMPLE;
PBOOLEAN KdDebuggerEnabled;
PBOOLEAN KdDebuggerNotPresent;
CCHAR KeNumberProcessors;
volatile KSYSTEM_TIME KeTickCount;
const GUID KoCreateObject;
NTSTATUS __stdcall KsEdit(KSOBJECT_BAG ObjectBag, PVOID *PointerToPointerToItem, ULONG NewSize, ULONG OldSize, ULONG Tag);
MACRO__UPPER _LEADBYTE;
MACRO__UPPER _LOWER;
const GUID MSAcpiInfo_GUID;
const GUID MSAcpi_ThermalZoneTemperature_GUID;
const GUID MSAgp_Information_GUID;
const GUID MSChangerParameters_GUID;
const GUID MSChangerProblemDeviceError_GUID;
const GUID MSChangerProblemEvent_GUID;
const GUID MSDeviceUI_FirmwareRevision_GUID;
const GUID MSDiskDriver_Geometry_GUID;
const GUID MSDiskDriver_PerformanceData_GUID;
const GUID MSDiskDriver_Performance_GUID;
const GUID MSIde_PortDeviceInfo_GUID;
const GUID MSKeyboard_ClassInformation_GUID;
const GUID MSKeyboard_ExtendedID_GUID;
const GUID MSKeyboard_PortInformation_GUID;
const GUID MSMCAEvent_CPUError_GUID;
const GUID MSMCAEvent_Header_GUID;
const GUID MSMCAEvent_InvalidError_GUID;
const GUID MSMCAEvent_MemoryError_GUID;
const GUID MSMCAEvent_MemoryPageRemoved_GUID;
const GUID MSMCAEvent_PCIBusError_GUID;
const GUID MSMCAEvent_PCIComponentError_GUID;
const GUID MSMCAEvent_PlatformSpecificError_GUID;
const GUID MSMCAEvent_SMBIOSError_GUID;
const GUID MSMCAEvent_SwitchToCMCPolling_GUID;
const GUID MSMCAEvent_SwitchToCPEPolling_GUID;
const GUID MSMCAEvent_SystemEventError_GUID;
const GUID MSMCAInfo_Entry_GUID;
const GUID MSMCAInfo_RawCMCEvent_GUID;
const GUID MSMCAInfo_RawCorrectedPlatformEvent_GUID;
const GUID MSMCAInfo_RawMCAData_GUID;
const GUID MSMCAInfo_RawMCAEvent_GUID;
const GUID MSMouse_ClassInformation_GUID;
const GUID MSMouse_PortInformation_GUID;
const GUID MSNdis_80211_AddWEP_GUID;
const GUID MSNdis_80211_AuthenticationMode_GUID;
const GUID MSNdis_80211_BSSIList_GUID;
const GUID MSNdis_80211_BaseServiceSetIdentifier_GUID;
const GUID MSNdis_80211_BssIdListScan_GUID;
const GUID MSNdis_80211_ConfigurationFH_GUID;
const GUID MSNdis_80211_ConfigurationInfo_GUID;
const GUID MSNdis_80211_Configuration_GUID;
const GUID MSNdis_80211_DataRates_GUID;
const GUID MSNdis_80211_DesiredDataRates_GUID;
const GUID MSNdis_80211_Disassociate_GUID;
const GUID MSNdis_80211_FragmentationThreshold_GUID;
const GUID MSNdis_80211_InfrastructureMode_GUID;
const GUID MSNdis_80211_NetworkInfrastructure_GUID;
const GUID MSNdis_80211_NetworkTypeInUse_GUID;
const GUID MSNdis_80211_NetworkType_GUID;
const GUID MSNdis_80211_NetworkTypesSupported_GUID;
const GUID MSNdis_80211_NumberOfAntennas_GUID;
const GUID MSNdis_80211_PowerMode_GUID;
const GUID MSNdis_80211_PrivacyFilter_GUID;
const GUID MSNdis_80211_RTSThreshold_GUID;
const GUID MSNdis_80211_ReceiveAntennaSelected_GUID;
const GUID MSNdis_80211_ReceivedSignalStrengthEventTrigger_GUID;
const GUID MSNdis_80211_ReceivedSignalStrength_GUID;
const GUID MSNdis_80211_ReloadDefaults_GUID;
const GUID MSNdis_80211_RemoveWEP_GUID;
const GUID MSNdis_80211_ServiceSetIdentifier_GUID;
const GUID MSNdis_80211_Statistics_GUID;
const GUID MSNdis_80211_TransmitAntennaSelected_GUID;
const GUID MSNdis_80211_TransmitPowerLevel_GUID;
const GUID MSNdis_80211_WEPStatus_GUID;
const GUID MSNdis_80211_WLanBssId_GUID;
const GUID MSNdis_AtmHardwareCurrentAddress_GUID;
const GUID MSNdis_AtmMaxAal0PacketSize_GUID;
const GUID MSNdis_AtmMaxAal1PacketSize_GUID;
const GUID MSNdis_AtmMaxAal34PacketSize_GUID;
const GUID MSNdis_AtmMaxAal5PacketSize_GUID;
const GUID MSNdis_AtmMaxActiveVciBits_GUID;
const GUID MSNdis_AtmMaxActiveVcs_GUID;
const GUID MSNdis_AtmMaxActiveVpiBits_GUID;
const GUID MSNdis_AtmReceiveCellsDropped_GUID;
const GUID MSNdis_AtmReceiveCellsOk_GUID;
const GUID MSNdis_AtmSupportedAalTypes_GUID;
const GUID MSNdis_AtmSupportedServiceCategory_GUID;
const GUID MSNdis_AtmSupportedVcRates_GUID;
const GUID MSNdis_AtmTransmitCellsOk_GUID;
const GUID MSNdis_CoDriverVersion_GUID;
const GUID MSNdis_CoHardwareStatus_GUID;
const GUID MSNdis_CoLinkSpeed_GUID;
const GUID MSNdis_CoMacOptions_GUID;
const GUID MSNdis_CoMediaConnectStatus_GUID;
const GUID MSNdis_CoMediaInUse_GUID;
const GUID MSNdis_CoMediaSupported_GUID;
const GUID MSNdis_CoMinimumLinkSpeed_GUID;
const GUID MSNdis_CoReceivePduErrors_GUID;
const GUID MSNdis_CoReceivePdusNoBuffer_GUID;
const GUID MSNdis_CoReceivePdusOk_GUID;
const GUID MSNdis_CoTransmitPduErrors_GUID;
const GUID MSNdis_CoTransmitPdusOk_GUID;
const GUID MSNdis_CoVendorDescription_GUID;
const GUID MSNdis_CoVendorDriverVersion_GUID;
const GUID MSNdis_CoVendorId_GUID;
const GUID MSNdis_CurrentLookahead_GUID;
const GUID MSNdis_CurrentPacketFilter_GUID;
const GUID MSNdis_DeviceWakeOnMagicPacketOnly_GUID;
const GUID MSNdis_DriverVersion_GUID;
const GUID MSNdis_EnumerateAdapter_GUID;
const GUID MSNdis_EthernetCurrentAddress_GUID;
const GUID MSNdis_EthernetMacOptions_GUID;
const GUID MSNdis_EthernetMaximumMulticastListSize_GUID;
const GUID MSNdis_EthernetMoreTransmitCollisions_GUID;
const GUID MSNdis_EthernetMulticastList_GUID;
const GUID MSNdis_EthernetOneTransmitCollision_GUID;
const GUID MSNdis_EthernetPermanentAddress_GUID;
const GUID MSNdis_EthernetReceiveErrorAlignment_GUID;
const GUID MSNdis_FddiAttachmentType_GUID;
const GUID MSNdis_FddiDownstreamNodeLong_GUID;
const GUID MSNdis_FddiFrameErrors_GUID;
const GUID MSNdis_FddiFramesLost_GUID;
const GUID MSNdis_FddiLConnectionState_GUID;
const GUID MSNdis_FddiLctFailures_GUID;
const GUID MSNdis_FddiLemRejects_GUID;
const GUID MSNdis_FddiLongCurrentAddress_GUID;
const GUID MSNdis_FddiLongMaximumListSize_GUID;
const GUID MSNdis_FddiLongMulticastList_GUID;
const GUID MSNdis_FddiLongPermanentAddress_GUID;
const GUID MSNdis_FddiRingManagmentState_GUID;
const GUID MSNdis_FddiShortCurrentAddress_GUID;
const GUID MSNdis_FddiShortMaximumListSize_GUID;
const GUID MSNdis_FddiShortMulticastList_GUID;
const GUID MSNdis_FddiShortPermanentAddress_GUID;
const GUID MSNdis_FddiUpstreamNodeLong_GUID;
const GUID MSNdis_HardwareStatus_GUID;
const GUID MSNdis_LinkSpeed_GUID;
const GUID MSNdis_MacOptions_GUID;
const GUID MSNdis_MaximumFrameSize_GUID;
const GUID MSNdis_MaximumLookahead_GUID;
const GUID MSNdis_MaximumSendPackets_GUID;
const GUID MSNdis_MaximumTotalSize_GUID;
const GUID MSNdis_MediaConnectStatus_GUID;
const GUID MSNdis_MediaInUse_GUID;
const GUID MSNdis_MediaSupported_GUID;
const GUID MSNdis_NdisEnumerateVc_GUID;
const GUID MSNdis_NetworkAddress_GUID;
const GUID MSNdis_NetworkLinkSpeed_GUID;
const GUID MSNdis_NetworkShortAddress_GUID;
const GUID MSNdis_NotifyAdapterArrival_GUID;
const GUID MSNdis_NotifyAdapterRemoval_GUID;
const GUID MSNdis_NotifyVcArrival_GUID;
const GUID MSNdis_NotifyVcRemoval_GUID;
const GUID MSNdis_PhysicalMediumType_GUID;
const GUID MSNdis_ReceiveBlockSize_GUID;
const GUID MSNdis_ReceiveBufferSpace_GUID;
const GUID MSNdis_ReceiveError_GUID;
const GUID MSNdis_ReceiveNoBuffer_GUID;
const GUID MSNdis_ReceivesOk_GUID;
const GUID MSNdis_StatusDevicePowerOff_GUID;
const GUID MSNdis_StatusDevicePowerOn_GUID;
const GUID MSNdis_StatusLinkSpeedChange_GUID;
const GUID MSNdis_StatusMediaConnect_GUID;
const GUID MSNdis_StatusMediaDisconnect_GUID;
const GUID MSNdis_StatusMediaSpecificIndication_GUID;
const GUID MSNdis_StatusProtocolBind_GUID;
const GUID MSNdis_StatusProtocolUnbind_GUID;
const GUID MSNdis_StatusResetEnd_GUID;
const GUID MSNdis_StatusResetStart_GUID;
const GUID MSNdis_TokenRingCurrentAddress_GUID;
const GUID MSNdis_TokenRingCurrentFunctional_GUID;
const GUID MSNdis_TokenRingCurrentGroup_GUID;
const GUID MSNdis_TokenRingCurrentRingState_GUID;
const GUID MSNdis_TokenRingCurrentRingStatus_GUID;
const GUID MSNdis_TokenRingLastOpenStatus_GUID;
const GUID MSNdis_TokenRingLineErrors_GUID;
const GUID MSNdis_TokenRingLostFrames_GUID;
const GUID MSNdis_TokenRingPermanentAddress_GUID;
const GUID MSNdis_TransmitBlockSize_GUID;
const GUID MSNdis_TransmitBufferSpace_GUID;
const GUID MSNdis_TransmitsError_GUID;
const GUID MSNdis_TransmitsOk_GUID;
const GUID MSNdis_VendorDescription_GUID;
const GUID MSNdis_VendorDriverVersion_GUID;
const GUID MSNdis_VendorID_GUID;
const GUID MSNdis_VlanIdentifier_GUID;
const GUID MSParallel_AllocFreeCounts_GUID;
const GUID MSParallel_DeviceBytesTransferred_GUID;
const GUID MSPower_DeviceEnable_GUID;
const GUID MSPower_DeviceWakeEnable_GUID;
const GUID MSRedbook_DriverInformationGuid;
const GUID MSRedbook_PerformanceGuid;
const GUID MSSerial_CommInfo_GUID;
const GUID MSSerial_CommProperties_GUID;
const GUID MSSerial_HardwareConfiguration_GUID;
const GUID MSSerial_PerformanceInformation_GUID;
const GUID MSSerial_PortName_GUID;
const GUID MSSmBios_RawSMBiosTables_GUID;
const GUID MSSmBios_SMBiosEventlog_GUID;
const GUID MSSmBios_Sysid1394List_GUID;
const GUID MSSmBios_Sysid1394_GUID;
const GUID MSSmBios_SysidUUIDList_GUID;
const GUID MSSmBios_SysidUUID_GUID;
const GUID MSStorageDriver_ATAPISmartData_GUID;
const GUID MSStorageDriver_FailurePredictData_GUID;
const GUID MSStorageDriver_FailurePredictEvent_GUID;
const GUID MSStorageDriver_FailurePredictFunction_GUID;
const GUID MSStorageDriver_FailurePredictStatus_GUID;
const GUID MSStorageDriver_FailurePredictThresholds_GUID;
const GUID MSStorageDriver_ScsiInfoExceptions_GUID;
const GUID MSTapeDriveParam_GUID;
const GUID MSTapeDriveProblemEvent_GUID;
const GUID MSTapeMediaCapacity_GUID;
const GUID MSTapeProblemDeviceError_GUID;
const GUID MSTapeProblemIoError_GUID;
const GUID MSTapeSymbolicName_GUID;
const GUID MSVerifierIrpLogEntry_GUID;
const GUID MSVerifierIrpLogInformation_GUID;
const GUID MSWmi_GuidRegistrationInfo_GUID;
const GUID MSWmi_Guid_GUID;
const GUID MSWmi_MofData_GUID;
const GUID MSWmi_PnPDeviceId_GUID;
const GUID MSWmi_PnPInstanceNames_GUID;
const GUID MSWmi_ProviderInfo_GUID;
PBOOLEAN Mm64BitPhysicalAddress;
MACRO__NLSCMPERROR _NLSCMPERROR;
MACRO__NSTREAM _NSTREAM_;
BOOLEAN *NlsMbCodePageTag;
BOOLEAN *NlsMbOemCodePageTag;
const GUID PINNAME_BDA_ANALOG_AUDIO;
const GUID PINNAME_BDA_ANALOG_VIDEO;
const GUID PINNAME_BDA_FM_RADIO;
const GUID PINNAME_BDA_IF_PIN;
const GUID PINNAME_BDA_OPENCABLE_PSIP_PIN;
const GUID PINNAME_BDA_TRANSPORT;
const GUID PINNAME_IPSINK_INPUT;
const GUID PINNAME_MPE;
const GUID PINNAME_VIDEO_ANALOGVIDEOIN;
const GUID PINNAME_VIDEO_CAPTURE;
const GUID PINNAME_VIDEO_CC;
const GUID PINNAME_VIDEO_CC_CAPTURE;
const GUID PINNAME_VIDEO_EDS;
const GUID PINNAME_VIDEO_NABTS;
const GUID PINNAME_VIDEO_NABTS_CAPTURE;
const GUID PINNAME_VIDEO_PREVIEW;
const GUID PINNAME_VIDEO_STILL;
const GUID PINNAME_VIDEO_TELETEXT;
const GUID PINNAME_VIDEO_TIMECODE;
const GUID PINNAME_VIDEO_VBI;
const GUID PINNAME_VIDEO_VIDEOPORT;
const GUID PINNAME_VIDEO_VIDEOPORT_VBI;
const GUID PROPSETID_ALLOCATOR_CONTROL;
const GUID PROPSETID_TUNER;
const GUID PROPSETID_VIDCAP_CAMERACONTROL;
const GUID PROPSETID_VIDCAP_CROSSBAR;
const GUID PROPSETID_VIDCAP_DROPPEDFRAMES;
const GUID PROPSETID_VIDCAP_TVAUDIO;
const GUID PROPSETID_VIDCAP_VIDEOCOMPRESSION;
const GUID PROPSETID_VIDCAP_VIDEOCONTROL;
const GUID PROPSETID_VIDCAP_VIDEODECODER;
const GUID PROPSETID_VIDCAP_VIDEOENCODER;
const GUID PROPSETID_VIDCAP_VIDEOPROCAMP;
MACRO__UPPER _PUNCT;
const GUID PageFaultGuid;
const GUID ProcessGuid;
void ReadWriteBarrier(void);
const GUID RegisteredGuids_GUID;
const GUID RegistryGuid;
MACRO__UPPER _SPACE;
MACRO__SYS _SYS_OPEN;
void StreamClassDebugPrint(STREAM_DEBUG_LEVEL DebugPrintLevel, PCCHAR DebugMessage, ...);
void StreamClassDeviceNotification(STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE NotificationType, PVOID HwDeviceExtension, ...);
void StreamClassStreamNotification(STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE NotificationType, PHW_STREAM_OBJECT StreamObject, ...);
const GUID THERMAL_ZONE_GUID;
const GUID TcpIpGuid;
const GUID ThreadGuid;
const GUID TraceErrorGuid;
MACRO__UPPER _UPPER;
const GUID USB_BUS_INTERFACE_HUB_GUID;
const GUID USB_BUS_INTERFACE_USBDI_GUID;
const GUID UdpIpGuid;
const GUID WmiEventLoggerGuid;
int __cdecl __isascii(int);
int __cdecl __iscsym(int);
int __cdecl __iscsymf(int);
int __cdecl __toascii(int);
int __cdecl _abnormal_termination();
EXCEPTION_DISPOSITION __cdecl _except_handler(struct _EXCEPTION_RECORD *ExceptionRecord, void *EstablisherFrame, struct _CONTEXT *ContextRecord, void *DispatcherContext);
unsigned int __cdecl _exception_code();
void *__cdecl _exception_info();
int __cdecl _fcloseall();
FILE *__cdecl _fdopen(int, const char *);
int __cdecl _fgetchar();
wint_t __cdecl _fgetwchar();
int __cdecl _filbuf(FILE *);
int __cdecl _fileno(FILE *);
int __cdecl _flsbuf(int, FILE *);
int __cdecl _flushall();
int __cdecl _fputchar(int);
wint_t __cdecl _fputwchar(wint_t);
FILE *__cdecl _fsopen(const char *, const char *, int);
int __cdecl _getmaxstdio();
int __cdecl _getw(FILE *);
wchar_t *__cdecl _getws(wchar_t *);
FILE _iob[];
int __cdecl _isctype(int, int);
void *__cdecl _memccpy(void *, const void *, int, unsigned int);
int __cdecl _memicmp(const void *, const void *, unsigned int);
int __cdecl _pclose(FILE *);
FILE *__cdecl _popen(const char *, const char *);
int __cdecl _putw(int, FILE *);
int __cdecl _putws(const wchar_t *);
int __cdecl _rmtmp();
unsigned int __cdecl _rotl(unsigned int Value, int Shift);
unsigned __int64 __cdecl _rotl64(unsigned __int64 Value, int Shift);
unsigned int __cdecl _rotr(unsigned int Value, int Shift);
unsigned __int64 __cdecl _rotr64(unsigned __int64 Value, int Shift);
int __cdecl _setmaxstdio(int);
int _snprintf(char *, size_t, const char *, ...);
int _snwprintf(wchar_t *, size_t, const wchar_t *, ...);
int __cdecl _strcmpi(const char *, const char *);
char *__cdecl _strdup(const char *);
char *__cdecl _strerror(const char *);
int __cdecl _stricmp(const char *, const char *);
int __cdecl _stricoll(const char *, const char *);
char *__cdecl _strlwr(char *);
int __cdecl _strncoll(const char *, const char *, size_t);
int __cdecl _strnicmp(const char *, const char *, size_t);
int __cdecl _strnicoll(const char *, const char *, size_t);
char *__cdecl _strnset(char *, int, size_t);
char *__cdecl _strrev(char *);
char *__cdecl _strset(char *, int);
char *__cdecl _strupr(char *);
char *__cdecl _tempnam(const char *, const char *);
int __cdecl _tolower(int);
int __cdecl _toupper(int);
int __cdecl _unlink(const char *);
int __cdecl _vsnprintf(char *, size_t, const char *, va_list);
int __cdecl _vsnwprintf(wchar_t *, size_t, const wchar_t *, va_list);
wchar_t *__cdecl _wcsdup(const wchar_t *);
int __cdecl _wcsicmp(const wchar_t *, const wchar_t *);
int __cdecl _wcsicoll(const wchar_t *, const wchar_t *);
wchar_t *__cdecl _wcslwr(wchar_t *);
int __cdecl _wcsncoll(const wchar_t *, const wchar_t *, size_t);
int __cdecl _wcsnicmp(const wchar_t *, const wchar_t *, size_t);
int __cdecl _wcsnicoll(const wchar_t *, const wchar_t *, size_t);
wchar_t *__cdecl _wcsnset(wchar_t *, wchar_t, size_t);
wchar_t *__cdecl _wcsrev(wchar_t *);
wchar_t *__cdecl _wcsset(wchar_t *, wchar_t);
wchar_t *__cdecl _wcsupr(wchar_t *);
FILE *__cdecl _wfdopen(int, const wchar_t *);
FILE *__cdecl _wfopen(const wchar_t *, const wchar_t *);
FILE *__cdecl _wfreopen(const wchar_t *, const wchar_t *, FILE *);
FILE *__cdecl _wfsopen(const wchar_t *, const wchar_t *, int);
void __cdecl _wperror(const wchar_t *);
FILE *__cdecl _wpopen(const wchar_t *, const wchar_t *);
int __cdecl _wremove(const wchar_t *);
wchar_t *__cdecl _wtempnam(const wchar_t *, const wchar_t *);
wchar_t *__cdecl _wtmpnam(wchar_t *);
void __cdecl clearerr(FILE *);
int errno;
int __cdecl fclose(FILE *);
int __cdecl fcloseall();
FILE *__cdecl fdopen(int, const char *);
int __cdecl feof(FILE *);
int __cdecl ferror(FILE *);
int __cdecl fflush(FILE *);
int __cdecl fgetc(FILE *);
int __cdecl fgetchar();
int __cdecl fgetpos(FILE *, fpos_t *);
char *__cdecl fgets(char *, int, FILE *);
wint_t __cdecl fgetwc(FILE *);
wchar_t *__cdecl fgetws(wchar_t *, int, FILE *);
int __cdecl fileno(FILE *);
int __cdecl flushall();
FILE *__cdecl fopen(const char *, const char *);
int fprintf(FILE *, const char *, ...);
int __cdecl fputc(int, FILE *);
int __cdecl fputchar(int);
int __cdecl fputs(const char *, FILE *);
wint_t __cdecl fputwc(wint_t, FILE *);
int __cdecl fputws(const wchar_t *, FILE *);
size_t __cdecl fread(void *, size_t, size_t, FILE *);
FILE *__cdecl freopen(const char *, const char *, FILE *);
int fscanf(FILE *, const char *, ...);
int __cdecl fseek(FILE *, int, int);
int __cdecl fsetpos(FILE *, const fpos_t *);
int __cdecl ftell(FILE *);
int fwprintf(FILE *, const wchar_t *, ...);
size_t __cdecl fwrite(const void *, size_t, size_t, FILE *);
int fwscanf(FILE *, const wchar_t *, ...);
int __cdecl getc(FILE *);
int __cdecl getchar();
char *__cdecl gets(char *);
int __cdecl getw(FILE *);
wint_t __cdecl getwc(FILE *);
wint_t __cdecl getwchar();
int __cdecl is_wctype(wint_t, wctype_t);
int __cdecl isalnum(int);
int __cdecl isalpha(int);
int __cdecl iscntrl(int);
int __cdecl isdigit(int);
int __cdecl isgraph(int);
int __cdecl isleadbyte(int);
int __cdecl islower(int);
int __cdecl isprint(int);
int __cdecl ispunct(int);
int __cdecl isspace(int);
int __cdecl isupper(int);
int __cdecl iswalnum(wint_t);
int __cdecl iswalpha(wint_t);
int __cdecl iswascii(wint_t);
int __cdecl iswcntrl(wint_t);
int __cdecl iswctype(wint_t, wctype_t);
int __cdecl iswdigit(wint_t);
int __cdecl iswgraph(wint_t);
int __cdecl iswlower(wint_t);
int __cdecl iswprint(wint_t);
int __cdecl iswpunct(wint_t);
int __cdecl iswspace(wint_t);
int __cdecl iswupper(wint_t);
int __cdecl iswxdigit(wint_t);
int __cdecl isxdigit(int);
void *__cdecl memccpy(void *, const void *, int, unsigned int);
void *__cdecl memchr(const void *, int, size_t);
int __cdecl memcmp(const void *, const void *, size_t);
void *__cdecl memcpy(void *, const void *, size_t);
int __cdecl memicmp(const void *, const void *, unsigned int);
void *__cdecl memmove(void *, const void *, size_t);
void *__cdecl memset(void *, int, size_t);
void __cdecl perror(const char *);
int printf(const char *, ...);
int __cdecl putc(int, FILE *);
int __cdecl putchar(int);
int __cdecl puts(const char *);
int __cdecl putw(int, FILE *);
wint_t __cdecl putwc(wint_t, FILE *);
wint_t __cdecl putwchar(wint_t);
int __cdecl remove(const char *);
int __cdecl rename(const char *, const char *);
void __cdecl rewind(FILE *);
int __cdecl rmtmp();
int scanf(const char *, ...);
void __cdecl setbuf(FILE *, char *);
int __cdecl setvbuf(FILE *, char *, int, size_t);
int sprintf(char *, const char *, ...);
int sscanf(const char *, const char *, ...);
char *__cdecl strcat(char *, const char *);
char *__cdecl strchr(const char *, int);
int __cdecl strcmp(const char *, const char *);
int __cdecl strcmpi(const char *, const char *);
int __cdecl strcoll(const char *, const char *);
char *__cdecl strcpy(char *, const char *);
size_t __cdecl strcspn(const char *, const char *);
char *__cdecl strdup(const char *);
char *__cdecl strerror(int);
int __cdecl stricmp(const char *, const char *);
size_t __cdecl strlen(const char *);
char *__cdecl strlwr(char *);
char *__cdecl strncat(char *, const char *, size_t);
int __cdecl strncmp(const char *, const char *, size_t);
char *__cdecl strncpy(char *, const char *, size_t);
int __cdecl strnicmp(const char *, const char *, size_t);
char *__cdecl strnset(char *, int, size_t);
char *__cdecl strpbrk(const char *, const char *);
char *__cdecl strrchr(const char *, int);
char *__cdecl strrev(char *);
char *__cdecl strset(char *, int);
size_t __cdecl strspn(const char *, const char *);
char *__cdecl strstr(const char *, const char *);
char *__cdecl strtok(char *, const char *);
char *__cdecl strupr(char *);
size_t __cdecl strxfrm(char *, const char *, size_t);
int swprintf(wchar_t *, const wchar_t *, ...);
int swscanf(const wchar_t *, const wchar_t *, ...);
char *__cdecl tempnam(const char *, const char *);
FILE *__cdecl tmpfile();
char *__cdecl tmpnam(char *);
int __cdecl tolower(int);
int __cdecl toupper(int);
wchar_t __cdecl towlower(wchar_t);
wchar_t __cdecl towupper(wchar_t);
int __cdecl ungetc(int, FILE *);
wint_t __cdecl ungetwc(wint_t, FILE *);
int __cdecl unlink(const char *);
int __cdecl vfprintf(FILE *, const char *, va_list);
int __cdecl vfwprintf(FILE *, const wchar_t *, va_list);
int __cdecl vprintf(const char *, va_list);
int __cdecl vsprintf(char *, const char *, va_list);
int __cdecl vswprintf(wchar_t *, const wchar_t *, va_list);
int __cdecl vwprintf(const wchar_t *, va_list);
wchar_t *__cdecl wcscat(wchar_t *, const wchar_t *);
wchar_t *__cdecl wcschr(const wchar_t *, wchar_t);
int __cdecl wcscmp(const wchar_t *, const wchar_t *);
int __cdecl wcscoll(const wchar_t *, const wchar_t *);
wchar_t *__cdecl wcscpy(wchar_t *, const wchar_t *);
size_t __cdecl wcscspn(const wchar_t *, const wchar_t *);
wchar_t *__cdecl wcsdup(const wchar_t *);
int __cdecl wcsicmp(const wchar_t *, const wchar_t *);
int __cdecl wcsicoll(const wchar_t *, const wchar_t *);
size_t __cdecl wcslen(const wchar_t *);
wchar_t *__cdecl wcslwr(wchar_t *);
wchar_t *__cdecl wcsncat(wchar_t *, const wchar_t *, size_t);
int __cdecl wcsncmp(const wchar_t *, const wchar_t *, size_t);
wchar_t *__cdecl wcsncpy(wchar_t *, const wchar_t *, size_t);
int __cdecl wcsnicmp(const wchar_t *, const wchar_t *, size_t);
wchar_t *__cdecl wcsnset(wchar_t *, wchar_t, size_t);
wchar_t *__cdecl wcspbrk(const wchar_t *, const wchar_t *);
wchar_t *__cdecl wcsrchr(const wchar_t *, wchar_t);
wchar_t *__cdecl wcsrev(wchar_t *);
wchar_t *__cdecl wcsset(wchar_t *, wchar_t);
size_t __cdecl wcsspn(const wchar_t *, const wchar_t *);
wchar_t *__cdecl wcsstr(const wchar_t *, const wchar_t *);
wchar_t *__cdecl wcstok(wchar_t *, const wchar_t *);
wchar_t *__cdecl wcsupr(wchar_t *);
size_t __cdecl wcsxfrm(wchar_t *, const wchar_t *, size_t);
int wprintf(const wchar_t *, ...);
int wscanf(const wchar_t *, ...);
$D71657AF3CFE9B494B76211ED274B166 kVersionInvalid;
$D71657AF3CFE9B494B76211ED274B166 kVersionWin2K;
$D71657AF3CFE9B494B76211ED274B166 kVersionWin2K_SP2;
$D71657AF3CFE9B494B76211ED274B166 kVersionWin98;
$D71657AF3CFE9B494B76211ED274B166 kVersionWin98SE;
$D71657AF3CFE9B494B76211ED274B166 kVersionWin98SE_QFE2;
$D71657AF3CFE9B494B76211ED274B166 kVersionWin98SE_QFE3;
$D71657AF3CFE9B494B76211ED274B166 kVersionWinME;
$D71657AF3CFE9B494B76211ED274B166 kVersionWinME_QFE1;
$D71657AF3CFE9B494B76211ED274B166 kVersionWinXP;
$D71657AF3CFE9B494B76211ED274B166 kVersionWinXPSP1;
$D71657AF3CFE9B494B76211ED274B166 kVersionWinXPServer;
