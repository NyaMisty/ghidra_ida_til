struct $060D6FD956D3EBF205D64C3CA4764571 {LARGE_INTEGER StartingLcn;};
enum $0FC989869F227A36D749990E523E5F04 {PowerActionNone = 0x0,PowerActionReserved = 0x1,PowerActionSleep = 0x2,PowerActionHibernate = 0x3,PowerActionShutdown = 0x4,PowerActionShutdownReset = 0x5,PowerActionShutdownOff = 0x6,PowerActionWarmEject = 0x7,};
enum $15254BC33B7AD9AC47C3F32E846C6A31 {ACTCX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0x0,ACTCX_COMPATIBILITY_ELEMENT_TYPE_OS = 0x1,};
enum $17EF44A6FB7BC928DB45B319F6F500E7 {D3DBLEND_ZERO = 0x1,D3DBLEND_ONE = 0x2,D3DBLEND_SRCCOLOR = 0x3,D3DBLEND_INVSRCCOLOR = 0x4,D3DBLEND_SRCALPHA = 0x5,D3DBLEND_INVSRCALPHA = 0x6,D3DBLEND_DESTALPHA = 0x7,D3DBLEND_INVDESTALPHA = 0x8,D3DBLEND_DESTCOLOR = 0x9,D3DBLEND_INVDESTCOLOR = 0xA,D3DBLEND_SRCALPHASAT = 0xB,D3DBLEND_BOTHSRCALPHA = 0xC,D3DBLEND_BOTHINVSRCALPHA = 0xD,D3DBLEND_FORCE_DWORD = 0x7FFFFFFF,};
struct $22BDD2D628B0B561C5A9CA42290FE551 {DWORD bV4Size;LONG bV4Width;LONG bV4Height;WORD bV4Planes;WORD bV4BitCount;DWORD bV4V4Compression;DWORD bV4SizeImage;LONG bV4XPelsPerMeter;LONG bV4YPelsPerMeter;DWORD bV4ClrUsed;DWORD bV4ClrImportant;DWORD bV4RedMask;DWORD bV4GreenMask;DWORD bV4BlueMask;DWORD bV4AlphaMask;DWORD bV4CSType;CIEXYZTRIPLE bV4Endpoints;DWORD bV4GammaRed;DWORD bV4GammaGreen;DWORD bV4GammaBlue;};
enum $2610B2A7A340CFFE968E020BBBA422F4 {D3DSHADE_FLAT = 0x1,D3DSHADE_GOURAUD = 0x2,D3DSHADE_PHONG = 0x3,D3DSHADE_FORCE_DWORD = 0x7FFFFFFF,};
struct $2B6042393D1A02E0AE9B16B44F784AC7 {DWORD bV5Size;LONG bV5Width;LONG bV5Height;WORD bV5Planes;WORD bV5BitCount;DWORD bV5Compression;DWORD bV5SizeImage;LONG bV5XPelsPerMeter;LONG bV5YPelsPerMeter;DWORD bV5ClrUsed;DWORD bV5ClrImportant;DWORD bV5RedMask;DWORD bV5GreenMask;DWORD bV5BlueMask;DWORD bV5AlphaMask;DWORD bV5CSType;CIEXYZTRIPLE bV5Endpoints;DWORD bV5GammaRed;DWORD bV5GammaGreen;DWORD bV5GammaBlue;DWORD bV5Intent;DWORD bV5ProfileData;DWORD bV5ProfileSize;DWORD bV5Reserved;};
struct $49CD7323AA35D3C00204BB7AA8563FFA {HANDLE FileHandle;LARGE_INTEGER StartingVcn;LARGE_INTEGER StartingLcn;DWORD ClusterCount;};
struct $50092E5B8D5585E25A36D2D7AA7D11CF {LARGE_INTEGER FileReferenceNumber;};
enum $51EFE5BE8E1236F96F3F2D668AC77486 {D3DLIGHTSTATE_MATERIAL = 0x1,D3DLIGHTSTATE_AMBIENT = 0x2,D3DLIGHTSTATE_COLORMODEL = 0x3,D3DLIGHTSTATE_FOGMODE = 0x4,D3DLIGHTSTATE_FOGSTART = 0x5,D3DLIGHTSTATE_FOGEND = 0x6,D3DLIGHTSTATE_FOGDENSITY = 0x7,D3DLIGHTSTATE_COLORVERTEX = 0x8,D3DLIGHTSTATE_FORCE_DWORD = 0x7FFFFFFF,};
enum $5C67042CE564A9B56E0B7EEFA6E66A61 {D3DPT_POINTLIST = 0x1,D3DPT_LINELIST = 0x2,D3DPT_LINESTRIP = 0x3,D3DPT_TRIANGLELIST = 0x4,D3DPT_TRIANGLESTRIP = 0x5,D3DPT_TRIANGLEFAN = 0x6,D3DPT_FORCE_DWORD = 0x7FFFFFFF,};
enum $5FB4B89D89D7F3E9E930012D26E1CC5E {UNSPECIFIED_COMPARTMENT_ID = 0x0,DEFAULT_COMPARTMENT_ID = 0x1,};
struct $65CC0CAF86DD981EE7F163A568277E42 {PARTITION_STYLE PartitionStyle;union {CREATE_DISK_MBR Mbr;CREATE_DISK_GPT Gpt;};};
union $65CC0CAF86DD981EE7F163A568277E42::$E6D8F73FA11FE79B0BBE7B30BDE20C7B {CREATE_DISK_MBR Mbr;CREATE_DISK_GPT Gpt;};
struct $65DC3C988CA5686F8A6752C3BA087B10 {PDD_DIRECTDRAW_LOCAL lpDD;GUID guid;DWORD dwUncompWidth;DWORD dwUncompHeight;DDPIXELFORMAT ddUncompPixelFormat;DWORD dwDriverReserved1;DWORD dwDriverReserved2;DWORD dwDriverReserved3;LPVOID lpDriverReserved1;LPVOID lpDriverReserved2;LPVOID lpDriverReserved3;};
enum $68B8926E498CEAACE36DA42D8FDA4ABC {D3DLIGHT_POINT = 0x1,D3DLIGHT_SPOT = 0x2,D3DLIGHT_DIRECTIONAL = 0x3,D3DLIGHT_PARALLELPOINT = 0x4,D3DLIGHT_GLSPOT = 0x5,D3DLIGHT_FORCE_DWORD = 0x7FFFFFFF,};
struct $69F844921B1DE9364EE161E0CBB12E4A {LARGE_INTEGER FileReferenceNumber;ULONG FileRecordLength;UCHAR FileRecordBuffer[1];};
enum $6A410C70A48A9A8ED88D4BC63D96D381 {D3DFILTER_NEAREST = 0x1,D3DFILTER_LINEAR = 0x2,D3DFILTER_MIPNEAREST = 0x3,D3DFILTER_MIPLINEAR = 0x4,D3DFILTER_LINEARMIPNEAREST = 0x5,D3DFILTER_LINEARMIPLINEAR = 0x6,D3DFILTER_FORCE_DWORD = 0x7FFFFFFF,};
enum $6FCDE95E2C9B96CC3981C5612B34F5F0 {D3DTBLEND_DECAL = 0x1,D3DTBLEND_MODULATE = 0x2,D3DTBLEND_DECALALPHA = 0x3,D3DTBLEND_MODULATEALPHA = 0x4,D3DTBLEND_DECALMASK = 0x5,D3DTBLEND_MODULATEMASK = 0x6,D3DTBLEND_COPY = 0x7,D3DTBLEND_ADD = 0x8,D3DTBLEND_FORCE_DWORD = 0x7FFFFFFF,};
enum $70E6C21732097ECC602C3A9C35FA57C2 {D3DRENDERSTATE_TEXTUREHANDLE = 0x1,D3DRENDERSTATE_ANTIALIAS = 0x2,D3DRENDERSTATE_TEXTUREADDRESS = 0x3,D3DRENDERSTATE_TEXTUREPERSPECTIVE = 0x4,D3DRENDERSTATE_WRAPU = 0x5,D3DRENDERSTATE_WRAPV = 0x6,D3DRENDERSTATE_ZENABLE = 0x7,D3DRENDERSTATE_FILLMODE = 0x8,D3DRENDERSTATE_SHADEMODE = 0x9,D3DRENDERSTATE_LINEPATTERN = 0xA,D3DRENDERSTATE_MONOENABLE = 0xB,D3DRENDERSTATE_ROP2 = 0xC,D3DRENDERSTATE_PLANEMASK = 0xD,D3DRENDERSTATE_ZWRITEENABLE = 0xE,D3DRENDERSTATE_ALPHATESTENABLE = 0xF,D3DRENDERSTATE_LASTPIXEL = 0x10,D3DRENDERSTATE_TEXTUREMAG = 0x11,D3DRENDERSTATE_TEXTUREMIN = 0x12,D3DRENDERSTATE_SRCBLEND = 0x13,D3DRENDERSTATE_DESTBLEND = 0x14,D3DRENDERSTATE_TEXTUREMAPBLEND = 0x15,D3DRENDERSTATE_CULLMODE = 0x16,D3DRENDERSTATE_ZFUNC = 0x17,D3DRENDERSTATE_ALPHAREF = 0x18,D3DRENDERSTATE_ALPHAFUNC = 0x19,D3DRENDERSTATE_DITHERENABLE = 0x1A,D3DRENDERSTATE_ALPHABLENDENABLE = 0x1B,D3DRENDERSTATE_FOGENABLE = 0x1C,D3DRENDERSTATE_SPECULARENABLE = 0x1D,D3DRENDERSTATE_ZVISIBLE = 0x1E,D3DRENDERSTATE_SUBPIXEL = 0x1F,D3DRENDERSTATE_SUBPIXELX = 0x20,D3DRENDERSTATE_STIPPLEDALPHA = 0x21,D3DRENDERSTATE_FOGCOLOR = 0x22,D3DRENDERSTATE_FOGTABLEMODE = 0x23,D3DRENDERSTATE_FOGTABLESTART = 0x24,D3DRENDERSTATE_FOGTABLEEND = 0x25,D3DRENDERSTATE_FOGTABLEDENSITY = 0x26,D3DRENDERSTATE_FOGSTART = 0x24,D3DRENDERSTATE_FOGEND = 0x25,D3DRENDERSTATE_FOGDENSITY = 0x26,D3DRENDERSTATE_STIPPLEENABLE = 0x27,D3DRENDERSTATE_EDGEANTIALIAS = 0x28,D3DRENDERSTATE_COLORKEYENABLE = 0x29,D3DRENDERSTATE_BORDERCOLOR = 0x2B,D3DRENDERSTATE_TEXTUREADDRESSU = 0x2C,D3DRENDERSTATE_TEXTUREADDRESSV = 0x2D,D3DRENDERSTATE_MIPMAPLODBIAS = 0x2E,D3DRENDERSTATE_ZBIAS = 0x2F,D3DRENDERSTATE_RANGEFOGENABLE = 0x30,D3DRENDERSTATE_ANISOTROPY = 0x31,D3DRENDERSTATE_FLUSHBATCH = 0x32,D3DRENDERSTATE_TRANSLUCENTSORTINDEPENDENT = 0x33,D3DRENDERSTATE_STENCILENABLE = 0x34,D3DRENDERSTATE_STENCILFAIL = 0x35,D3DRENDERSTATE_STENCILZFAIL = 0x36,D3DRENDERSTATE_STENCILPASS = 0x37,D3DRENDERSTATE_STENCILFUNC = 0x38,D3DRENDERSTATE_STENCILREF = 0x39,D3DRENDERSTATE_STENCILMASK = 0x3A,D3DRENDERSTATE_STENCILWRITEMASK = 0x3B,D3DRENDERSTATE_TEXTUREFACTOR = 0x3C,D3DRENDERSTATE_STIPPLEPATTERN00 = 0x40,D3DRENDERSTATE_STIPPLEPATTERN01 = 0x41,D3DRENDERSTATE_STIPPLEPATTERN02 = 0x42,D3DRENDERSTATE_STIPPLEPATTERN03 = 0x43,D3DRENDERSTATE_STIPPLEPATTERN04 = 0x44,D3DRENDERSTATE_STIPPLEPATTERN05 = 0x45,D3DRENDERSTATE_STIPPLEPATTERN06 = 0x46,D3DRENDERSTATE_STIPPLEPATTERN07 = 0x47,D3DRENDERSTATE_STIPPLEPATTERN08 = 0x48,D3DRENDERSTATE_STIPPLEPATTERN09 = 0x49,D3DRENDERSTATE_STIPPLEPATTERN10 = 0x4A,D3DRENDERSTATE_STIPPLEPATTERN11 = 0x4B,D3DRENDERSTATE_STIPPLEPATTERN12 = 0x4C,D3DRENDERSTATE_STIPPLEPATTERN13 = 0x4D,D3DRENDERSTATE_STIPPLEPATTERN14 = 0x4E,D3DRENDERSTATE_STIPPLEPATTERN15 = 0x4F,D3DRENDERSTATE_STIPPLEPATTERN16 = 0x50,D3DRENDERSTATE_STIPPLEPATTERN17 = 0x51,D3DRENDERSTATE_STIPPLEPATTERN18 = 0x52,D3DRENDERSTATE_STIPPLEPATTERN19 = 0x53,D3DRENDERSTATE_STIPPLEPATTERN20 = 0x54,D3DRENDERSTATE_STIPPLEPATTERN21 = 0x55,D3DRENDERSTATE_STIPPLEPATTERN22 = 0x56,D3DRENDERSTATE_STIPPLEPATTERN23 = 0x57,D3DRENDERSTATE_STIPPLEPATTERN24 = 0x58,D3DRENDERSTATE_STIPPLEPATTERN25 = 0x59,D3DRENDERSTATE_STIPPLEPATTERN26 = 0x5A,D3DRENDERSTATE_STIPPLEPATTERN27 = 0x5B,D3DRENDERSTATE_STIPPLEPATTERN28 = 0x5C,D3DRENDERSTATE_STIPPLEPATTERN29 = 0x5D,D3DRENDERSTATE_STIPPLEPATTERN30 = 0x5E,D3DRENDERSTATE_STIPPLEPATTERN31 = 0x5F,D3DRENDERSTATE_WRAP0 = 0x80,D3DRENDERSTATE_WRAP1 = 0x81,D3DRENDERSTATE_WRAP2 = 0x82,D3DRENDERSTATE_WRAP3 = 0x83,D3DRENDERSTATE_WRAP4 = 0x84,D3DRENDERSTATE_WRAP5 = 0x85,D3DRENDERSTATE_WRAP6 = 0x86,D3DRENDERSTATE_WRAP7 = 0x87,D3DRENDERSTATE_CLIPPING = 0x88,D3DRENDERSTATE_LIGHTING = 0x89,D3DRENDERSTATE_EXTENTS = 0x8A,D3DRENDERSTATE_AMBIENT = 0x8B,D3DRENDERSTATE_FOGVERTEXMODE = 0x8C,D3DRENDERSTATE_COLORVERTEX = 0x8D,D3DRENDERSTATE_LOCALVIEWER = 0x8E,D3DRENDERSTATE_NORMALIZENORMALS = 0x8F,D3DRENDERSTATE_COLORKEYBLENDENABLE = 0x90,D3DRENDERSTATE_DIFFUSEMATERIALSOURCE = 0x91,D3DRENDERSTATE_SPECULARMATERIALSOURCE = 0x92,D3DRENDERSTATE_AMBIENTMATERIALSOURCE = 0x93,D3DRENDERSTATE_EMISSIVEMATERIALSOURCE = 0x94,D3DRENDERSTATE_VERTEXBLEND = 0x97,D3DRENDERSTATE_CLIPPLANEENABLE = 0x98,D3DRENDERSTATE_FORCE_DWORD = 0x7FFFFFFF,};
struct $77920709E0A698A97D5A3C5EADC77423 {GUID DiskId;DWORD MaxPartitionCount;};
struct $7E9A1B5E40099564A008C34F7F4248BF {DWORD dwSize;DWORD dwTrianglesDrawn;DWORD dwLinesDrawn;DWORD dwPointsDrawn;DWORD dwSpansDrawn;DWORD dwVerticesProcessed;};
struct $80E50DFA284ED4BC838B08AAD8EA99BA {LARGE_INTEGER StartingVcn;};
enum $8166B8857E7CD08BCB1E0D6C8F56BCBA {ACTCTX_RUN_LEVEL_UNSPECIFIED = 0x0,ACTCTX_RUN_LEVEL_AS_INVOKER = 0x1,ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 0x2,ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 0x3,ACTCTX_RUN_LEVEL_NUMBERS = 0x4,};
enum $899D83E501CAC73A794C253E28DF1C3C {D3DCULL_NONE = 0x1,D3DCULL_CW = 0x2,D3DCULL_CCW = 0x3,D3DCULL_FORCE_DWORD = 0x7FFFFFFF,};
struct $8E6D798953B4C2C52A2B1F6527ADC626 {DWORD Signature;};
struct $A4A1DF623BA0FBABE6621202D771B918 {DWORD nSize;HDC hdc;PBYTE pvEMF;PBYTE pvCurrentRecord;};
struct $A7B80FA0FB433B10BA587CFD95D0DEA0 {UNICODE_STRING SectionFileName;WCHAR NameBuffer[1];};
enum $A98B79572840FDA381AA9CDCE69D1BC8 {EqualPriority = 0x0,KeepPrefetchedData = 0x1,KeepReadData = 0x2,};
enum $AE792CEDDB98DFDAE2E961BC788E6FD8 {D3DCMP_NEVER = 0x1,D3DCMP_LESS = 0x2,D3DCMP_EQUAL = 0x3,D3DCMP_LESSEQUAL = 0x4,D3DCMP_GREATER = 0x5,D3DCMP_NOTEQUAL = 0x6,D3DCMP_GREATEREQUAL = 0x7,D3DCMP_ALWAYS = 0x8,D3DCMP_FORCE_DWORD = 0x7FFFFFFF,};
enum $B40D63E35646F4288D69365395F51DD5 {D3DVT_VERTEX = 0x1,D3DVT_LVERTEX = 0x2,D3DVT_TLVERTEX = 0x3,D3DVT_FORCE_DWORD = 0x7FFFFFFF,};
enum $C893F2D74E3EE02796797F8957563B0E {D3DFILL_POINT = 0x1,D3DFILL_WIREFRAME = 0x2,D3DFILL_SOLID = 0x3,D3DFILL_FORCE_DWORD = 0x7FFFFFFF,};
struct $D890D4C8B96B04D8C981ECF31CD55F01 {LARGE_INTEGER StartingLcn;LARGE_INTEGER BitmapSize;BYTE Buffer[1];};
struct $DCD76CF5A248684E95EEC87F56AA655C {LARGE_INTEGER VolumeSerialNumber;LARGE_INTEGER NumberSectors;LARGE_INTEGER TotalClusters;LARGE_INTEGER FreeClusters;LARGE_INTEGER TotalReserved;DWORD BytesPerSector;DWORD BytesPerCluster;DWORD BytesPerFileRecordSegment;DWORD ClustersPerFileRecordSegment;LARGE_INTEGER MftValidDataLength;LARGE_INTEGER MftStartLcn;LARGE_INTEGER Mft2StartLcn;LARGE_INTEGER MftZoneStart;LARGE_INTEGER MftZoneEnd;};
struct $E031005FF5EB1AE848321EA608394D98 {DWORD Granularity;DWORD Capacity;};
struct $E5676767DC1847DF2F580E5BAA957339 {ULONG ByteCount;USHORT MajorVersion;USHORT MinorVersion;};
struct $ED1A2D3821D17D4C2EBC1D073E07CA93 {LARGE_INTEGER Length;};
typedef struct _ABC ABC;
typedef struct _ABCFLOAT ABCFLOAT;
typedef BOOL (__stdcall *ABORTPROC)(HDC, int);
typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE ACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_ACE ACCESS_DENIED_CALLBACK_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE ACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_DENIED_OBJECT_ACE ACCESS_DENIED_OBJECT_ACE;
typedef DWORD ACCESS_MASK;
typedef DWORD ACCESS_REASON;
typedef struct _ACCESS_REASONS ACCESS_REASONS;
typedef enum _ACCESS_REASON_TYPE ACCESS_REASON_TYPE;
typedef struct _ACE ACE;
typedef struct _ACE_HEADER ACE_HEADER;
typedef struct _ACL ACL;
typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;
typedef struct _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;
typedef struct _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;
typedef enum $15254BC33B7AD9AC47C3F32E846C6A31 ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
typedef enum $8166B8857E7CD08BCB1E0D6C8F56BCBA ACTCTX_REQUESTED_RUN_LEVEL;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_DATA ACTIVATION_CONTEXT_DATA;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION ACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef enum _ACTIVATION_CONTEXT_INFO_CLASS ACTIVATION_CONTEXT_INFO_CLASS;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX ACTIVATION_CONTEXT_QUERY_INDEX;
typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_STACK ACTIVATION_CONTEXT_STACK;
typedef struct _ACTIVATION_CONTEXT_STACK_FRAMELIST ACTIVATION_CONTEXT_STACK_FRAMELIST;
typedef enum _ADJUST_REASON ADJUST_REASON;
typedef struct _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE ALTERNATIVE_ARCHITECTURE_TYPE;
typedef struct _ALT_RESOURCE_MODULE ALT_RESOURCE_MODULE;
typedef STRING ANSI_STRING;
typedef struct _STRING32 ANSI_STRING32;
typedef struct _STRING64 ANSI_STRING64;
typedef enum _APPCOMPAT_FLAGS APPCOMPAT_FLAGS;
typedef enum _APPCOMPAT_USERFLAGS APPCOMPAT_USERFLAGS;
typedef enum _APPCOMPAT_USERFLAGS_HIGHPART APPCOMPAT_USERFLAGS_HIGHPART;
typedef enum _APPHELPCACHESERVICECLASS APPHELPCACHESERVICECLASS;
typedef struct _APPHELP_CACHE_SERVICE_LOOKUP APPHELP_CACHE_SERVICE_LOOKUP;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION;
typedef WORD ATOM;
typedef struct _ATOM_BASIC_INFORMATION ATOM_BASIC_INFORMATION;
typedef enum _ATOM_INFORMATION_CLASS ATOM_INFORMATION_CLASS;
typedef struct _ATOM_TABLE_INFORMATION ATOM_TABLE_INFORMATION;
typedef enum _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;
typedef AXESLISTA AXESLIST;
typedef struct _AXESLISTA AXESLISTA;
typedef struct _AXESLISTW AXESLISTW;
typedef AXISINFOA AXISINFO;
typedef struct _AXISINFOA AXISINFOA;
typedef struct _AXISINFOW AXISINFOW;
typedef WORD BAD_TRACK_NUMBER;
typedef struct $E031005FF5EB1AE848321EA608394D98 BATTERY_REPORTING_SCALE;
typedef BYTE BCHAR;
typedef struct _BIN_COUNT BIN_COUNT;
typedef struct _BIN_RANGE BIN_RANGE;
typedef struct _BIN_RESULTS BIN_RESULTS;
typedef enum _BIN_TYPES BIN_TYPES;
typedef struct tagBITMAP BITMAP;
typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;
typedef struct _BITMAPCOREINFO BITMAPCOREINFO;
typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;
typedef struct tagBITMAPINFO BITMAPINFO;
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;
typedef struct $22BDD2D628B0B561C5A9CA42290FE551 BITMAPV4HEADER;
typedef struct $2B6042393D1A02E0AE9B16B44F784AC7 BITMAPV5HEADER;
typedef struct _BLENDFUNCTION BLENDFUNCTION;
typedef struct _BLENDOBJ BLENDOBJ;
typedef int BOOL;
typedef unsigned __int8 BOOLEAN;
typedef struct _BOOT_ENTRY BOOT_ENTRY;
typedef struct _BOOT_OPTIONS BOOT_OPTIONS;
typedef struct _BRUSHOBJ BRUSHOBJ;
typedef enum _BUS_DATA_TYPE BUS_DATA_TYPE;
typedef unsigned __int8 BYTE;
typedef struct _CACHE_DESCRIPTOR CACHE_DESCRIPTOR;
typedef struct _CACHE_RELATIONSHIP CACHE_RELATIONSHIP;
typedef STRING CANSI_STRING;
typedef char CCHAR;
typedef struct tagCDDDXGK_REDIRBITMAPPRESENTINFO CDDDXGK_REDIRBITMAPPRESENTINFO;
typedef char CHAR;
typedef struct tagCHARSETINFO CHARSETINFO;
typedef struct _CIECHROMA CIECHROMA;
typedef struct tagCIEXYZ CIEXYZ;
typedef struct tagCIEXYZTRIPLE CIEXYZTRIPLE;
typedef const int CINT;
typedef struct _CLIENT_DIED_MSG CLIENT_DIED_MSG;
typedef struct _CLIENT_ID CLIENT_ID;
typedef struct _CLIENT_ID32 CLIENT_ID32;
typedef struct _CLIENT_ID64 CLIENT_ID64;
typedef struct _CLIPLINE CLIPLINE;
typedef struct _CLIPOBJ CLIPOBJ;
typedef ULONG CLONG;
typedef GUID CLSID;
typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA CM_DISK_GEOMETRY_DEVICE_DATA;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR CM_FULL_RESOURCE_DESCRIPTOR;
typedef struct _CM_INT13_DRIVE_PARAMETER CM_INT13_DRIVE_PARAMETER;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR CM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PARTIAL_RESOURCE_LIST CM_PARTIAL_RESOURCE_LIST;
typedef struct _CM_RESOURCE_LIST CM_RESOURCE_LIST;
typedef struct _CM_ROM_BLOCK CM_ROM_BLOCK;
typedef enum _CM_SHARE_DISPOSITION CM_SHARE_DISPOSITION;
typedef USHORT COLOR16;
typedef struct tagCOLORADJUSTMENT COLORADJUSTMENT;
typedef struct _COLORINFO COLORINFO;
typedef DWORD COLORREF;
typedef enum $5FB4B89D89D7F3E9E930012D26E1CC5E COMPARTMENT_ID;
typedef struct _COMPATIBILITY_CONTEXT_ELEMENT COMPATIBILITY_CONTEXT_ELEMENT;
typedef struct _COMPRESSED_DATA_INFO COMPRESSED_DATA_INFO;
typedef struct _CONTEXT CONTEXT;
typedef struct _CPTABLEINFO CPTABLEINFO;
typedef struct $65CC0CAF86DD981EE7F163A568277E42 CREATE_DISK;
typedef struct $77920709E0A698A97D5A3C5EADC77423 CREATE_DISK_GPT;
typedef struct $8E6D798953B4C2C52A2B1F6527ADC626 CREATE_DISK_MBR;
typedef __int16 CSHORT;
typedef PVOID CSR_API_NUMBER;
typedef struct _CSR_CAPTURE_BUFFER CSR_CAPTURE_BUFFER;
typedef struct _CSTRING CSTRING;
typedef struct _CURDIR CURDIR;
typedef enum _D3DANTIALIASMODE D3DANTIALIASMODE;
typedef enum $17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND;
typedef struct _D3DBRANCH D3DBRANCH;
typedef struct _D3DCLIPSTATUS D3DCLIPSTATUS;
typedef enum $AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMPFUNC;
typedef DWORD D3DCOLOR;
typedef DWORD D3DCOLORMODEL;
typedef struct _D3DCOLORVALUE D3DCOLORVALUE;
typedef enum $899D83E501CAC73A794C253E28DF1C3C D3DCULL;
typedef enum _D3DDDIFORMAT D3DDDIFORMAT;
typedef struct _D3DDeviceDesc D3DDEVICEDESC;
typedef struct _D3DDeviceDesc1 D3DDEVICEDESC1;
typedef struct _D3DDeviceDesc2 D3DDEVICEDESC2;
typedef struct _D3DDeviceDesc7 D3DDEVICEDESC7;
typedef struct _D3DDEVINFO_TEXTUREMANAGER D3DDEVINFO_TEXTUREMANAGER;
typedef struct _D3DDEVINFO_TEXTURING D3DDEVINFO_TEXTURING;
typedef struct _D3DDP_PTRSTRIDE D3DDP_PTRSTRIDE;
typedef struct _D3DDRAWPRIMITIVESTRIDEDDATA D3DDRAWPRIMITIVESTRIDEDDATA;
typedef struct _D3DExecuteBufferDesc D3DEXECUTEBUFFERDESC;
typedef struct _D3DEXECUTEDATA D3DEXECUTEDATA;
typedef enum $C893F2D74E3EE02796797F8957563B0E D3DFILLMODE;
typedef struct _D3DFINDDEVICERESULT D3DFINDDEVICERESULT;
typedef struct _D3DFINDDEVICERESULT1 D3DFINDDEVICERESULT1;
typedef struct _D3DFINDDEVICERESULT2 D3DFINDDEVICERESULT2;
typedef struct _D3DFINDDEVICESEARCH D3DFINDDEVICESEARCH;
typedef LONG D3DFIXED;
typedef enum _D3DFOGMODE D3DFOGMODE;
typedef struct _D3DHVERTEX D3DHVERTEX;
typedef struct _D3DINSTRUCTION D3DINSTRUCTION;
typedef struct _D3DKMT_CREATEDCFROMMEMORY D3DKMT_CREATEDCFROMMEMORY;
typedef struct _D3DKMT_DESTROYDCFROMMEMORY D3DKMT_DESTROYDCFROMMEMORY;
typedef struct _D3DLIGHT D3DLIGHT;
typedef struct _D3DLIGHT2 D3DLIGHT2;
typedef struct _D3DLIGHT7 D3DLIGHT7;
typedef struct _D3DLIGHTDATA D3DLIGHTDATA;
typedef struct _D3DLIGHTINGCAPS D3DLIGHTINGCAPS;
typedef struct _D3DLIGHTINGELEMENT D3DLIGHTINGELEMENT;
typedef enum $51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATETYPE;
typedef enum $68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHTTYPE;
typedef struct _D3DLINE D3DLINE;
typedef struct _D3DLINEPATTERN D3DLINEPATTERN;
typedef struct _D3DLVERTEX D3DLVERTEX;
typedef struct _D3DMATERIAL D3DMATERIAL;
typedef struct _D3DMATERIAL7 D3DMATERIAL7;
typedef enum _D3DMATERIALCOLORSOURCE D3DMATERIALCOLORSOURCE;
typedef DWORD D3DMATERIALHANDLE;
typedef struct _D3DMATRIX D3DMATRIX;
typedef DWORD D3DMATRIXHANDLE;
typedef struct _D3DMATRIXLOAD D3DMATRIXLOAD;
typedef struct _D3DMATRIXMULTIPLY D3DMATRIXMULTIPLY;
typedef struct _D3DNTHALDeviceDesc_V1 D3DNTHALDEVICEDESC_V1;
typedef struct _D3DNTHAL_CALLBACKS D3DNTHAL_CALLBACKS;
typedef struct _D3DNTHAL_CALLBACKS2 D3DNTHAL_CALLBACKS2;
typedef struct _D3DNTHAL_CALLBACKS3 D3DNTHAL_CALLBACKS3;
typedef struct _D3DNTHAL_CLEAR2DATA D3DNTHAL_CLEAR2DATA;
typedef struct _D3DNTHAL_CONTEXTCREATEDATA D3DNTHAL_CONTEXTCREATEDATA;
typedef struct _D3DNTHAL_CONTEXTDESTROYALLDATA D3DNTHAL_CONTEXTDESTROYALLDATA;
typedef struct _D3DNTHAL_CONTEXTDESTROYDATA D3DNTHAL_CONTEXTDESTROYDATA;
typedef struct _D3DNTHAL_DRAWPRIMITIVES2DATA D3DNTHAL_DRAWPRIMITIVES2DATA;
typedef struct _D3DNTHAL_GLOBALDRIVERDATA D3DNTHAL_GLOBALDRIVERDATA;
typedef struct _D3DNTHAL_SCENECAPTUREDATA D3DNTHAL_SCENECAPTUREDATA;
typedef struct _D3DNTHAL_SETRENDERTARGETDATA D3DNTHAL_SETRENDERTARGETDATA;
typedef struct _D3DNTHAL_TEXTURECREATEDATA D3DNTHAL_TEXTURECREATEDATA;
typedef struct _D3DNTHAL_TEXTUREDESTROYDATA D3DNTHAL_TEXTUREDESTROYDATA;
typedef struct _D3DNTHAL_TEXTUREGETSURFDATA D3DNTHAL_TEXTUREGETSURFDATA;
typedef struct _D3DNTHAL_TEXTURESWAPDATA D3DNTHAL_TEXTURESWAPDATA;
typedef struct _D3DNTHAL_VALIDATETEXTURESTAGESTATEDATA D3DNTHAL_VALIDATETEXTURESTAGESTATEDATA;
typedef enum _D3DOPCODE D3DOPCODE;
typedef struct _D3DPICKRECORD D3DPICKRECORD;
typedef struct _D3DPOINT D3DPOINT;
typedef struct _D3DPrimCaps D3DPRIMCAPS;
typedef enum $5C67042CE564A9B56E0B7EEFA6E66A61 D3DPRIMITIVETYPE;
typedef struct _D3DPROCESSVERTICES D3DPROCESSVERTICES;
typedef struct _D3DRECT D3DRECT;
typedef enum $70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATETYPE;
typedef enum $2610B2A7A340CFFE968E020BBBA422F4 D3DSHADEMODE;
typedef struct _D3DSPAN D3DSPAN;
typedef struct _D3DSTATE D3DSTATE;
typedef enum _D3DSTATEBLOCKTYPE D3DSTATEBLOCKTYPE;
typedef struct $7E9A1B5E40099564A008C34F7F4248BF D3DSTATS;
typedef struct _D3DSTATUS D3DSTATUS;
typedef enum _D3DSTENCILOP D3DSTENCILOP;
typedef enum _D3DTEXTUREADDRESS D3DTEXTUREADDRESS;
typedef enum $6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTEXTUREBLEND;
typedef enum $6A410C70A48A9A8ED88D4BC63D96D381 D3DTEXTUREFILTER;
typedef DWORD D3DTEXTUREHANDLE;
typedef struct _D3DTEXTURELOAD D3DTEXTURELOAD;
typedef enum _D3DTEXTUREMAGFILTER D3DTEXTUREMAGFILTER;
typedef enum _D3DTEXTUREMINFILTER D3DTEXTUREMINFILTER;
typedef enum _D3DTEXTUREMIPFILTER D3DTEXTUREMIPFILTER;
typedef enum _D3DTEXTUREOP D3DTEXTUREOP;
typedef enum _D3DTEXTURESTAGESTATETYPE D3DTEXTURESTAGESTATETYPE;
typedef enum _D3DTEXTURETRANSFORMFLAGS D3DTEXTURETRANSFORMFLAGS;
typedef struct _D3DTLVERTEX D3DTLVERTEX;
typedef struct _D3DTRANSFORMCAPS D3DTRANSFORMCAPS;
typedef struct _D3DTRANSFORMDATA D3DTRANSFORMDATA;
typedef enum _D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATETYPE;
typedef struct _D3DTRIANGLE D3DTRIANGLE;
typedef float D3DVALUE;
typedef struct _D3DVECTOR D3DVECTOR;
typedef struct _D3DVERTEX D3DVERTEX;
typedef enum _D3DVERTEXBLENDFLAGS D3DVERTEXBLENDFLAGS;
typedef struct _D3DVERTEXBUFFERDESC D3DVERTEXBUFFERDESC;
typedef enum $B40D63E35646F4288D69365395F51DD5 D3DVERTEXTYPE;
typedef struct _D3DVIEWPORT D3DVIEWPORT;
typedef struct _D3DVIEWPORT2 D3DVIEWPORT2;
typedef struct _D3DVIEWPORT7 D3DVIEWPORT7;
typedef enum _D3DZBUFFERTYPE D3DZBUFFERTYPE;
typedef enum _DBGKM_APINUMBER DBGKM_APINUMBER;
typedef struct _DBGKM_CREATE_PROCESS DBGKM_CREATE_PROCESS;
typedef struct _DBGKM_CREATE_THREAD DBGKM_CREATE_THREAD;
typedef struct _DBGKM_EXCEPTION DBGKM_EXCEPTION;
typedef struct _DBGKM_EXIT_PROCESS DBGKM_EXIT_PROCESS;
typedef struct _DBGKM_EXIT_THREAD DBGKM_EXIT_THREAD;
typedef struct _DBGKM_LOAD_DLL DBGKM_LOAD_DLL;
typedef struct _DBGKM_MSG DBGKM_MSG;
typedef struct _DBGKM_UNLOAD_DLL DBGKM_UNLOAD_DLL;
typedef struct _DBGUI_WAIT_STATE_CHANGE DBGUI_WAIT_STATE_CHANGE;
typedef enum _DBG_STATE DBG_STATE;
typedef struct _DDARGB DDARGB;
typedef struct _DDBLTBATCH DDBLTBATCH;
typedef struct _DDBLTFX DDBLTFX;
typedef DDCAPS_DX7 DDCAPS;
typedef struct _DDCAPS_DX1 DDCAPS_DX1;
typedef struct _DDCAPS_DX3 DDCAPS_DX3;
typedef struct _DDCAPS_DX5 DDCAPS_DX5;
typedef struct _DDCAPS_DX6 DDCAPS_DX6;
typedef struct _DDCAPS_DX7 DDCAPS_DX7;
typedef struct _DDCOLORCONTROL DDCOLORCONTROL;
typedef struct _DDCOLORKEY DDCOLORKEY;
typedef struct _DDCOMPBUFFERINFO DDCOMPBUFFERINFO;
typedef struct tagDDDEVICEIDENTIFIER DDDEVICEIDENTIFIER;
typedef struct tagDDDEVICEIDENTIFIER2 DDDEVICEIDENTIFIER2;
typedef struct _DDGAMMARAMP DDGAMMARAMP;
typedef struct _DDMOCOMPBUFFERINFO DDMOCOMPBUFFERINFO;
typedef struct _DDNTCORECAPS DDNTCORECAPS;
typedef struct _DDOPTSURFACEDESC DDOPTSURFACEDESC;
typedef struct _DDOSCAPS DDOSCAPS;
typedef struct _DDOVERLAYFX DDOVERLAYFX;
typedef struct _DDPIXELFORMAT DDPIXELFORMAT;
typedef struct _DDRGBA DDRGBA;
typedef struct _DDSCAPS DDSCAPS;
typedef struct _DDSCAPS2 DDSCAPS2;
typedef struct _DDSCAPSEX DDSCAPSEX;
typedef struct _DDSURFACEDESC DDSURFACEDESC;
typedef struct _DDSURFACEDESC2 DDSURFACEDESC2;
typedef struct _DDVIDEOPORTBANDWIDTH DDVIDEOPORTBANDWIDTH;
typedef struct _DDVIDEOPORTCAPS DDVIDEOPORTCAPS;
typedef struct _DDVIDEOPORTCONNECT DDVIDEOPORTCONNECT;
typedef struct IDDVideoPortContainerVtbl DDVIDEOPORTCONTAINERCALLBACKS;
typedef struct _DDVIDEOPORTDESC DDVIDEOPORTDESC;
typedef struct _DDVIDEOPORTINFO DDVIDEOPORTINFO;
typedef struct _DDVIDEOPORTNOTIFY DDVIDEOPORTNOTIFY;
typedef struct _DDVIDEOPORTSTATUS DDVIDEOPORTSTATUS;
typedef struct _DD_ADDATTACHEDSURFACEDATA DD_ADDATTACHEDSURFACEDATA;
typedef struct _DD_ATTACHLIST DD_ATTACHLIST;
typedef struct _DD_BEGINMOCOMPFRAMEDATA DD_BEGINMOCOMPFRAMEDATA;
typedef struct _DD_BLTDATA DD_BLTDATA;
struct DD_CALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_DESTROYDRIVER DestroyDriver;PDD_CREATESURFACE CreateSurface;PDD_SETCOLORKEY SetColorKey;PDD_SETMODE SetMode;PDD_WAITFORVERTICALBLANK WaitForVerticalBlank;PDD_CANCREATESURFACE CanCreateSurface;PDD_CREATEPALETTE CreatePalette;PDD_GETSCANLINE GetScanLine;PDD_MAPMEMORY MapMemory;};
typedef struct _DD_CANCREATESURFACEDATA DD_CANCREATESURFACEDATA;
typedef struct _DD_CANCREATEVPORTDATA DD_CANCREATEVPORTDATA;
typedef struct _DD_CLIPPER_GLOBAL DD_CLIPPER_GLOBAL;
typedef struct _DD_CLIPPER_LOCAL DD_CLIPPER_LOCAL;
typedef struct _DD_COLORCONTROLCALLBACKS DD_COLORCONTROLCALLBACKS;
typedef struct _DD_COLORCONTROLDATA DD_COLORCONTROLDATA;
typedef struct _DD_CREATEMOCOMPDATA DD_CREATEMOCOMPDATA;
typedef struct _DD_CREATEPALETTEDATA DD_CREATEPALETTEDATA;
typedef struct _DD_CREATESURFACEDATA DD_CREATESURFACEDATA;
typedef struct _DD_CREATESURFACEEXDATA DD_CREATESURFACEEXDATA;
typedef struct _DD_CREATEVPORTDATA DD_CREATEVPORTDATA;
typedef struct _DD_D3DBUFCALLBACKS DD_D3DBUFCALLBACKS;
typedef struct _DD_DESTROYDDLOCALDATA DD_DESTROYDDLOCALDATA;
typedef struct _DD_DESTROYMOCOMPDATA DD_DESTROYMOCOMPDATA;
typedef struct _DD_DESTROYPALETTEDATA DD_DESTROYPALETTEDATA;
typedef struct _DD_DESTROYSURFACEDATA DD_DESTROYSURFACEDATA;
typedef struct _DD_DESTROYVPORTDATA DD_DESTROYVPORTDATA;
typedef struct _DD_DIRECTDRAW_GLOBAL DD_DIRECTDRAW_GLOBAL;
typedef struct _DD_DIRECTDRAW_LOCAL DD_DIRECTDRAW_LOCAL;
typedef struct _DD_DRVSETCOLORKEYDATA DD_DRVSETCOLORKEYDATA;
typedef struct _DD_ENDMOCOMPFRAMEDATA DD_ENDMOCOMPFRAMEDATA;
typedef struct _DD_FLIPDATA DD_FLIPDATA;
typedef struct _DD_FLIPTOGDISURFACEDATA DD_FLIPTOGDISURFACEDATA;
typedef struct _DD_FLIPVPORTDATA DD_FLIPVPORTDATA;
typedef struct _DD_FREEDRIVERMEMORYDATA DD_FREEDRIVERMEMORYDATA;
typedef struct _DD_GETAVAILDRIVERMEMORYDATA DD_GETAVAILDRIVERMEMORYDATA;
typedef struct _DD_GETBLTSTATUSDATA DD_GETBLTSTATUSDATA;
typedef struct _DD_GETDRIVERINFODATA DD_GETDRIVERINFODATA;
typedef struct _DD_GETDRIVERSTATEDATA DD_GETDRIVERSTATEDATA;
typedef struct _DD_GETFLIPSTATUSDATA DD_GETFLIPSTATUSDATA;
typedef struct _DD_GETINTERNALMOCOMPDATA DD_GETINTERNALMOCOMPDATA;
typedef struct _DD_GETMOCOMPCOMPBUFFDATA DD_GETMOCOMPCOMPBUFFDATA;
typedef struct _DD_GETMOCOMPFORMATSDATA DD_GETMOCOMPFORMATSDATA;
typedef struct _DD_GETMOCOMPGUIDSDATA DD_GETMOCOMPGUIDSDATA;
typedef struct _DD_GETSCANLINEDATA DD_GETSCANLINEDATA;
typedef struct _DD_GETVPORTBANDWIDTHDATA DD_GETVPORTBANDWIDTHDATA;
typedef struct _DD_GETVPORTCONNECTDATA DD_GETVPORTCONNECTDATA;
typedef struct _DD_GETVPORTFIELDDATA DD_GETVPORTFIELDDATA;
typedef struct _DD_GETVPORTFLIPSTATUSDATA DD_GETVPORTFLIPSTATUSDATA;
typedef struct _DD_GETVPORTINPUTFORMATDATA DD_GETVPORTINPUTFORMATDATA;
typedef struct _DD_GETVPORTLINEDATA DD_GETVPORTLINEDATA;
typedef struct _DD_GETVPORTOUTPUTFORMATDATA DD_GETVPORTOUTPUTFORMATDATA;
typedef struct _DD_GETVPORTSIGNALDATA DD_GETVPORTSIGNALDATA;
typedef struct _DD_HALINFO DD_HALINFO;
typedef struct _DD_HALINFO_V4 DD_HALINFO_V4;
struct DD_KERNELCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_KERNELCB_SYNCSURFACE SyncSurfaceData;PDD_KERNELCB_SYNCVIDEOPORT SyncVideoPortData;};
typedef struct _DD_LOCKDATA DD_LOCKDATA;
typedef struct _DD_MAPMEMORYDATA DD_MAPMEMORYDATA;
typedef struct _DD_MISCELLANEOUS2CALLBACKS DD_MISCELLANEOUS2CALLBACKS;
typedef struct _DD_MISCELLANEOUSCALLBACKS DD_MISCELLANEOUSCALLBACKS;
typedef struct _DD_MORECAPS DD_MORECAPS;
typedef struct _DD_MORESURFACECAPS DD_MORESURFACECAPS;
struct DD_MOTIONCOMPCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_MOCOMPCB_GETGUIDS GetMoCompGuids;PDD_MOCOMPCB_GETFORMATS GetMoCompFormats;PDD_MOCOMPCB_CREATE CreateMoComp;PDD_MOCOMPCB_GETCOMPBUFFINFO GetMoCompBuffInfo;PDD_MOCOMPCB_GETINTERNALINFO GetInternalMoCompInfo;PDD_MOCOMPCB_BEGINFRAME BeginMoCompFrame;PDD_MOCOMPCB_ENDFRAME EndMoCompFrame;PDD_MOCOMPCB_RENDER RenderMoComp;PDD_MOCOMPCB_QUERYSTATUS QueryMoCompStatus;PDD_MOCOMPCB_DESTROY DestroyMoComp;};
typedef struct $65DC3C988CA5686F8A6752C3BA087B10 DD_MOTIONCOMP_LOCAL;
typedef struct _DD_NONLOCALVIDMEMCAPS DD_NONLOCALVIDMEMCAPS;
typedef struct _DD_NTCALLBACKS DD_NTCALLBACKS;
struct DD_NTPRIVATEDRIVERCAPS {DWORD dwSize;DWORD dwPrivateCaps;};
struct DD_PALETTECALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_PALCB_DESTROYPALETTE DestroyPalette;PDD_PALCB_SETENTRIES SetEntries;};
typedef struct _DD_PALETTE_GLOBAL DD_PALETTE_GLOBAL;
typedef struct _DD_PALETTE_LOCAL DD_PALETTE_LOCAL;
typedef struct _DD_QUERYMOCOMPSTATUSDATA DD_QUERYMOCOMPSTATUSDATA;
typedef struct _DD_RENDERMOCOMPDATA DD_RENDERMOCOMPDATA;
typedef struct _DD_SETCLIPLISTDATA DD_SETCLIPLISTDATA;
typedef struct _DD_SETCOLORKEYDATA DD_SETCOLORKEYDATA;
typedef struct _DD_SETENTRIESDATA DD_SETENTRIESDATA;
typedef struct _DD_SETEXCLUSIVEMODEDATA DD_SETEXCLUSIVEMODEDATA;
typedef struct _DD_SETOVERLAYPOSITIONDATA DD_SETOVERLAYPOSITIONDATA;
typedef struct _DD_SETPALETTEDATA DD_SETPALETTEDATA;
typedef struct _DD_STEREOMODE DD_STEREOMODE;
struct DD_SURFACECALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_SURFCB_DESTROYSURFACE DestroySurface;PDD_SURFCB_FLIP Flip;PDD_SURFCB_SETCLIPLIST SetClipList;PDD_SURFCB_LOCK Lock;PDD_SURFCB_UNLOCK Unlock;PDD_SURFCB_BLT Blt;PDD_SURFCB_SETCOLORKEY SetColorKey;PDD_SURFCB_ADDATTACHEDSURFACE AddAttachedSurface;PDD_SURFCB_GETBLTSTATUS GetBltStatus;PDD_SURFCB_GETFLIPSTATUS GetFlipStatus;PDD_SURFCB_UPDATEOVERLAY UpdateOverlay;PDD_SURFCB_SETOVERLAYPOSITION SetOverlayPosition;PVOID reserved4;PDD_SURFCB_SETPALETTE SetPalette;};
typedef struct _DD_SURFACE_GLOBAL DD_SURFACE_GLOBAL;
typedef struct _DD_SURFACE_INT DD_SURFACE_INT;
typedef struct _DD_SURFACE_LOCAL DD_SURFACE_LOCAL;
typedef struct _DD_SURFACE_MORE DD_SURFACE_MORE;
typedef struct _DD_SYNCSURFACEDATA DD_SYNCSURFACEDATA;
typedef struct _DD_SYNCVIDEOPORTDATA DD_SYNCVIDEOPORTDATA;
typedef struct _DD_UNLOCKDATA DD_UNLOCKDATA;
typedef struct _DD_UPDATENONLOCALHEAPDATA DD_UPDATENONLOCALHEAPDATA;
typedef struct _DD_UPDATEOVERLAYDATA DD_UPDATEOVERLAYDATA;
typedef struct _DD_UPDATEVPORTDATA DD_UPDATEVPORTDATA;
struct DD_VIDEOPORTCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_VPORTCB_CANCREATEVIDEOPORT CanCreateVideoPort;PDD_VPORTCB_CREATEVIDEOPORT CreateVideoPort;PDD_VPORTCB_FLIP FlipVideoPort;PDD_VPORTCB_GETBANDWIDTH GetVideoPortBandwidth;PDD_VPORTCB_GETINPUTFORMATS GetVideoPortInputFormats;PDD_VPORTCB_GETOUTPUTFORMATS GetVideoPortOutputFormats;PVOID lpReserved1;PDD_VPORTCB_GETFIELD GetVideoPortField;PDD_VPORTCB_GETLINE GetVideoPortLine;PDD_VPORTCB_GETVPORTCONNECT GetVideoPortConnectInfo;PDD_VPORTCB_DESTROYVPORT DestroyVideoPort;PDD_VPORTCB_GETFLIPSTATUS GetVideoPortFlipStatus;PDD_VPORTCB_UPDATE UpdateVideoPort;PDD_VPORTCB_WAITFORSYNC WaitForVideoPortSync;PDD_VPORTCB_GETSIGNALSTATUS GetVideoSignalStatus;PDD_VPORTCB_COLORCONTROL ColorControl;};
typedef struct _DD_VIDEOPORT_LOCAL DD_VIDEOPORT_LOCAL;
typedef struct _DD_VPORTCOLORDATA DD_VPORTCOLORDATA;
typedef struct _DD_WAITFORVERTICALBLANKDATA DD_WAITFORVERTICALBLANKDATA;
typedef struct _DD_WAITFORVPORTSYNCDATA DD_WAITFORVPORTSYNCDATA;
typedef enum _DEBUGOBJECTINFOCLASS DEBUGOBJECTINFOCLASS;
typedef struct _DEBUG_OBJECT_KILL_PROCESS_ON_EXIT_INFORMATION DEBUG_OBJECT_KILL_PROCESS_ON_EXIT_INFORMATION;
typedef struct _DESCRIPTOR_TABLE_ENTRY DESCRIPTOR_TABLE_ENTRY;
typedef struct _DESIGNVECTOR DESIGNVECTOR;
typedef enum _DETECTION_TYPE DETECTION_TYPE;
typedef struct _DEVHTADJDATA DEVHTADJDATA;
typedef struct _DEVHTINFO DEVHTINFO;
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef struct _DEVINFO DEVINFO;
typedef DEVMODEA DEVMODE;
typedef struct _devicemodeA DEVMODEA;
typedef struct _devicemodeW DEVMODEW;
typedef struct DHPDEV__ *DHPDEV;
struct DHPDEV__ {int unused;};
typedef struct DHSURF__ *DHSURF;
struct DHSURF__ {int unused;};
typedef struct tagDIBSECTION DIBSECTION;
typedef struct IDirectDrawVideoPortVtbl DIRECTDRAWVIDEOPORTCALLBACKS;
typedef struct IDirectDrawVideoPortNotifyVtbl DIRECTDRAWVIDEOPORTNOTIFYCALLBACKS;
typedef struct DiskQuotaUserInformation DISKQUOTA_USER_INFORMATION;
typedef struct _DISK_CACHE_INFORMATION DISK_CACHE_INFORMATION;
typedef enum $A98B79572840FDA381AA9CDCE69D1BC8 DISK_CACHE_RETENTION_PRIORITY;
typedef struct _DISK_DETECTION_INFO DISK_DETECTION_INFO;
typedef struct _DISK_EXTENT DISK_EXTENT;
typedef struct _DISK_EX_INT13_INFO DISK_EX_INT13_INFO;
typedef struct _DISK_GEOMETRY DISK_GEOMETRY;
typedef struct _DISK_GEOMETRY_EX DISK_GEOMETRY_EX;
typedef struct _DISK_GROW_PARTITION DISK_GROW_PARTITION;
typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;
typedef struct _DISK_INT13_INFO DISK_INT13_INFO;
typedef struct _DISK_LOGGING DISK_LOGGING;
typedef struct _DISK_PARTITION_INFO DISK_PARTITION_INFO;
typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;
typedef struct _DISK_RECORD DISK_RECORD;
typedef DISPLAY_DEVICEA DISPLAY_DEVICE;
typedef struct _DISPLAY_DEVICEA DISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEW DISPLAY_DEVICEW;
typedef DOCINFOA DOCINFO;
typedef struct _DOCINFOA DOCINFOA;
typedef struct _DOCINFOW DOCINFOW;
typedef struct _DRH_APIBITMAPDATA DRH_APIBITMAPDATA;
typedef struct _DRIVEROBJ DRIVEROBJ;
typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;
typedef struct _DRIVE_LAYOUT_INFORMATION_EX DRIVE_LAYOUT_INFORMATION_EX;
typedef struct _DRIVE_LAYOUT_INFORMATION_GPT DRIVE_LAYOUT_INFORMATION_GPT;
typedef struct _DRIVE_LAYOUT_INFORMATION_MBR DRIVE_LAYOUT_INFORMATION_MBR;
typedef struct tagDRVENABLEDATA DRVENABLEDATA;
typedef struct _DRVFN DRVFN;
typedef unsigned int DWORD;
typedef unsigned int DWORD32;
typedef unsigned __int64 DWORD64;
typedef ULONGLONG DWORDLONG;
typedef ULONG_PTR DWORD_PTR;
struct DiskQuotaUserInformation {LONGLONG QuotaUsed;LONGLONG QuotaThreshold;LONGLONG QuotaLimit;};
typedef struct _EFI_DRIVER_ENTRY EFI_DRIVER_ENTRY;
typedef struct $A4A1DF623BA0FBABE6621202D771B918 EMFINFO;
typedef struct tagEMR EMR;
typedef struct tagABORTPATH EMRABORTPATH;
typedef struct tagEMRALPHABLEND EMRALPHABLEND;
typedef struct tagEMRANGLEARC EMRANGLEARC;
typedef struct tagEMRARC EMRARC;
typedef struct tagEMRARC EMRARCTO;
typedef struct tagABORTPATH EMRBEGINPATH;
typedef struct tagEMRBITBLT EMRBITBLT;
typedef struct tagEMRARC EMRCHORD;
typedef struct tagABORTPATH EMRCLOSEFIGURE;
typedef struct tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;
typedef struct tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;
typedef struct tagEMRCREATECOLORSPACEW EMRCREATECOLORSPACEW;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;
typedef struct tagEMRCREATEPALETTE EMRCREATEPALETTE;
typedef struct tagEMRCREATEPEN EMRCREATEPEN;
typedef struct tagEMRSETCOLORSPACE EMRDELETECOLORSPACE;
typedef struct tagEMRSELECTOBJECT EMRDELETEOBJECT;
typedef struct tagEMRELLIPSE EMRELLIPSE;
typedef struct tagABORTPATH EMRENDPATH;
typedef struct tagEMREOF EMREOF;
typedef struct tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;
typedef struct tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;
typedef struct tagEMREXTCREATEPEN EMREXTCREATEPEN;
typedef struct tagEMREXTFLOODFILL EMREXTFLOODFILL;
typedef struct tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;
typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTW;
typedef struct tagEMRFILLPATH EMRFILLPATH;
typedef struct tagEMRFILLRGN EMRFILLRGN;
typedef struct tagABORTPATH EMRFLATTENPATH;
typedef struct tagEMRFORMAT EMRFORMAT;
typedef struct tagEMRFRAMERGN EMRFRAMERGN;
typedef struct tagEMRGDICOMMENT EMRGDICOMMENT;
typedef struct tagEMRGLSBOUNDEDRECORD EMRGLSBOUNDEDRECORD;
typedef struct tagEMRGLSRECORD EMRGLSRECORD;
typedef struct tagEMRGRADIENTFILL EMRGRADIENTFILL;
typedef struct tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;
typedef struct tagEMRINVERTRGN EMRINVERTRGN;
typedef struct tagEMRLINETO EMRLINETO;
typedef struct tagEMRMASKBLT EMRMASKBLT;
typedef struct tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;
typedef struct tagEMRLINETO EMRMOVETOEX;
typedef struct tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;
typedef struct tagEMRINVERTRGN EMRPAINTRGN;
typedef struct tagEMRARC EMRPIE;
typedef struct tagEMRPIXELFORMAT EMRPIXELFORMAT;
typedef struct tagEMRPLGBLT EMRPLGBLT;
typedef struct tagEMRPOLYLINE EMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE EMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYDRAW EMRPOLYDRAW;
typedef struct tagEMRPOLYDRAW16 EMRPOLYDRAW16;
typedef struct tagEMRPOLYLINE EMRPOLYGON;
typedef struct tagEMRPOLYLINE16 EMRPOLYGON16;
typedef struct tagEMRPOLYLINE EMRPOLYLINE;
typedef struct tagEMRPOLYLINE16 EMRPOLYLINE16;
typedef struct tagEMRPOLYLINE EMRPOLYLINETO;
typedef struct tagEMRPOLYLINE16 EMRPOLYLINETO16;
typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;
typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;
typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;
typedef struct tagABORTPATH EMRREALIZEPALETTE;
typedef struct tagEMRELLIPSE EMRRECTANGLE;
typedef struct tagEMRRESIZEPALETTE EMRRESIZEPALETTE;
typedef struct tagEMRRESTOREDC EMRRESTOREDC;
typedef struct tagEMRROUNDRECT EMRROUNDRECT;
typedef struct tagABORTPATH EMRSAVEDC;
typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;
typedef struct tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;
typedef struct tagEMRSETCOLORSPACE EMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTOBJECT EMRSELECTOBJECT;
typedef struct tagEMRSELECTPALETTE EMRSELECTPALETTE;
typedef struct tagEMRSETARCDIRECTION EMRSETARCDIRECTION;
typedef struct tagEMRSETTEXTCOLOR EMRSETBKCOLOR;
typedef struct tagEMRSELECTCLIPPATH EMRSETBKMODE;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;
typedef struct tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;
typedef struct tagEMRSETCOLORSPACE EMRSETCOLORSPACE;
typedef struct tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;
typedef struct tagEMRSELECTCLIPPATH EMRSETICMMODE;
typedef struct tagEMRSELECTCLIPPATH EMRSETLAYOUT;
typedef struct tagEMRSELECTCLIPPATH EMRSETMAPMODE;
typedef struct tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;
typedef struct tagABORTPATH EMRSETMETARGN;
typedef struct tagEMRSETMITERLIMIT EMRSETMITERLIMIT;
typedef struct tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;
typedef struct tagEMRSETPIXELV EMRSETPIXELV;
typedef struct tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH EMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;
typedef struct tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;
typedef struct tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;
typedef struct tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;
typedef struct tagEMRSTRETCHBLT EMRSTRETCHBLT;
typedef struct tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;
typedef struct tagEMRFILLPATH EMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH EMRSTROKEPATH;
typedef struct tagEMRTEXT EMRTEXT;
typedef struct tagABORTPATH EMRWIDENPATH;
typedef struct _ENGSAFESEMAPHORE ENGSAFESEMAPHORE;
typedef enum _ENG_DEVICE_ATTRIBUTE ENG_DEVICE_ATTRIBUTE;
typedef enum _ENG_SYSTEM_ATTRIBUTE ENG_SYSTEM_ATTRIBUTE;
typedef struct _ENG_TIME_FIELDS ENG_TIME_FIELDS;
typedef struct tagENHMETAHEADER ENHMETAHEADER;
typedef struct tagENHMETARECORD ENHMETARECORD;
typedef int (__stdcall *ENHMFENUMPROC)(HDC hdc, HANDLETABLE *lpht, const ENHMETARECORD *lpmr, int nHandles, LPARAM data);
typedef ENUMLOGFONTA ENUMLOGFONT;
typedef struct tagENUMLOGFONTA ENUMLOGFONTA;
typedef ENUMLOGFONTEXA ENUMLOGFONTEX;
typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEXA;
typedef ENUMLOGFONTEXDVA ENUMLOGFONTEXDV;
typedef struct tagENUMLOGFONTEXDVA ENUMLOGFONTEXDVA;
typedef struct tagENUMLOGFONTEXDVW ENUMLOGFONTEXDVW;
typedef struct tagENUMLOGFONTEXW ENUMLOGFONTEXW;
typedef struct tagENUMLOGFONTW ENUMLOGFONTW;
typedef struct _ENUMRECTS ENUMRECTS;
typedef ENUMTEXTMETRICA ENUMTEXTMETRIC;
typedef struct _ENUMTEXTMETRICA ENUMTEXTMETRICA;
typedef struct _ENUMTEXTMETRICW ENUMTEXTMETRICW;
typedef struct _EVENTLOGRECORD EVENTLOGRECORD;
typedef struct _EVENT_BASIC_INFORMATION EVENT_BASIC_INFORMATION;
typedef enum _EVENT_INFORMATION_CLASS EVENT_INFORMATION_CLASS;
typedef enum _EVENT_TYPE EVENT_TYPE;
typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;
typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;
typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;
typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;
typedef struct _EXCEPTION_REGISTRATION_RECORD EXCEPTION_REGISTRATION_RECORD;
typedef EXCEPTION_DISPOSITION __stdcall EXCEPTION_ROUTINE(struct _EXCEPTION_RECORD *ExceptionRecord, PVOID EstablisherFrame, struct _CONTEXT *ContextRecord, PVOID DispatcherContext);
typedef DWORD EXECUTION_STATE;
typedef struct _EXFAT_STATISTICS EXFAT_STATISTICS;
typedef EXTLOGFONTA EXTLOGFONT;
typedef struct tagEXTLOGFONTA EXTLOGFONTA;
typedef struct tagEXTLOGFONTW EXTLOGFONTW;
typedef struct tagEXTLOGPEN EXTLOGPEN;
typedef int (__stdcall *FARPROC)();
typedef struct _FAT_STATISTICS FAT_STATISTICS;
typedef unsigned __int8 FCHAR;
typedef struct _FD_DEVICEMETRICS FD_DEVICEMETRICS;
typedef struct _FD_GLYPHATTR FD_GLYPHATTR;
typedef struct _FD_GLYPHSET FD_GLYPHSET;
typedef struct _FD_KERNINGPAIR FD_KERNINGPAIR;
typedef struct _FD_LIGATURE FD_LIGATURE;
typedef struct _FD_XFORM FD_XFORM;
typedef struct _FIBER FIBER;
typedef struct _iobuf FILE;
typedef struct _FILEOFFSET_INFORMATION FILEOFFSET_INFORMATION;
typedef struct _FILESYSTEM_STATISTICS FILESYSTEM_STATISTICS;
typedef struct _FILETIME FILETIME;
typedef struct _FILE_ACCESS_INFORMATION FILE_ACCESS_INFORMATION;
typedef struct _FILE_ALLOCATION_INFORMATION FILE_ALLOCATION_INFORMATION;
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION FILE_ATTRIBUTE_TAG_INFORMATION;
typedef struct _FILE_BASIC_INFORMATION FILE_BASIC_INFORMATION;
typedef struct _FILE_BOTH_DIR_INFORMATION FILE_BOTH_DIR_INFORMATION;
typedef struct _FILE_COMPLETION_INFORMATION FILE_COMPLETION_INFORMATION;
typedef struct _FILE_COMPRESSION_INFORMATION FILE_COMPRESSION_INFORMATION;
typedef struct _FILE_DIRECTORY_INFORMATION FILE_DIRECTORY_INFORMATION;
typedef struct _FILE_DISPOSITION_INFORMATION FILE_DISPOSITION_INFORMATION;
typedef struct _FILE_EA_INFORMATION FILE_EA_INFORMATION;
typedef struct _FILE_END_OF_FILE_INFORMATION FILE_END_OF_FILE_INFORMATION;
typedef struct _FILE_FS_ATTRIBUTE_INFORMATION FILE_FS_ATTRIBUTE_INFORMATION;
typedef struct _FILE_FS_DEVICE_INFORMATION FILE_FS_DEVICE_INFORMATION;
typedef struct _FILE_FS_FULL_SIZE_INFORMATION FILE_FS_FULL_SIZE_INFORMATION;
typedef struct _FILE_FS_LABEL_INFORMATION FILE_FS_LABEL_INFORMATION;
typedef struct _FILE_FS_SIZE_INFORMATION FILE_FS_SIZE_INFORMATION;
typedef struct _FILE_FS_VOLUME_INFORMATION FILE_FS_VOLUME_INFORMATION;
typedef struct _FILE_FULL_DIR_INFORMATION FILE_FULL_DIR_INFORMATION;
typedef struct _FILE_FULL_EA_INFORMATION FILE_FULL_EA_INFORMATION;
typedef enum _FILE_INFORMATION_CLASS FILE_INFORMATION_CLASS;
typedef struct _FILE_INTERNAL_INFORMATION FILE_INTERNAL_INFORMATION;
typedef struct _FILE_IO_COMPLETION_INFORMATION FILE_IO_COMPLETION_INFORMATION;
typedef struct _FILE_LINK_INFORMATION FILE_LINK_INFORMATION;
typedef struct _FILE_MAILSLOT_QUERY_INFORMATION FILE_MAILSLOT_QUERY_INFORMATION;
typedef struct _FILE_MAILSLOT_SET_INFORMATION FILE_MAILSLOT_SET_INFORMATION;
typedef struct _FILE_NAME_INFORMATION FILE_NAME_INFORMATION;
typedef struct _FILE_NETWORK_OPEN_INFORMATION FILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;
typedef struct _FILE_PATH FILE_PATH;
typedef struct _FILE_PIPE_INFORMATION FILE_PIPE_INFORMATION;
typedef struct _FILE_PIPE_LOCAL_INFORMATION FILE_PIPE_LOCAL_INFORMATION;
typedef struct _FILE_PIPE_PEEK_BUFFER FILE_PIPE_PEEK_BUFFER;
typedef struct _FILE_PIPE_REMOTE_INFORMATION FILE_PIPE_REMOTE_INFORMATION;
typedef struct _FILE_PIPE_WAIT_FOR_BUFFER FILE_PIPE_WAIT_FOR_BUFFER;
typedef struct _FILE_POSITION_INFORMATION FILE_POSITION_INFORMATION;
typedef struct _FILE_QUOTA_INFORMATION FILE_QUOTA_INFORMATION;
typedef struct _FILE_RENAME_INFORMATION FILE_RENAME_INFORMATION;
typedef union _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;
typedef struct _FILE_STANDARD_INFORMATION FILE_STANDARD_INFORMATION;
typedef struct _FILE_STREAM_INFORMATION FILE_STREAM_INFORMATION;
typedef struct _FILE_TRACKING_INFORMATION FILE_TRACKING_INFORMATION;
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION FILE_VALID_DATA_LENGTH_INFORMATION;
typedef LONG FIX;
typedef struct _FIXED FIXED;
typedef ULONG_PTR FLATPTR;
typedef float FLOAT;
typedef struct _FLOAT128 FLOAT128;
typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;
typedef DWORD FLOATL;
typedef struct _FLOATOBJ FLOATOBJ;
typedef struct tagFLOATOBJ_XFORM FLOATOBJ_XFORM;
typedef union _FLOAT_LONG FLOAT_LONG;
typedef unsigned int FLONG;
typedef GUID FMTID;
typedef BOOL __stdcall FN_DrvAccumulateD3DDirtyRect(SURFOBJ *psoSurf, CDDDXGK_REDIRBITMAPPRESENTINFO *pDirty);
typedef BOOL __stdcall FN_DrvAlphaBlend(SURFOBJ *psoDest, SURFOBJ *psoSrc, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclDest, RECTL *prclSrc, BLENDOBJ *pBlendObj);
typedef BOOL __stdcall FN_DrvAssertMode(DHPDEV dhpdev, BOOL bEnable);
typedef BOOL __stdcall FN_DrvAssociateSharedSurface(SURFOBJ *psoSurf, HANDLE hPhysicalSurface, HANDLE hLogicalSurface, SIZEL sizl);
typedef BOOL __stdcall FN_DrvBitBlt(SURFOBJ *psoTrg, SURFOBJ *psoSrc, SURFOBJ *psoMask, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclTrg, POINTL *pptlSrc, POINTL *pptlMask, BRUSHOBJ *pbo, POINTL *pptlBrush, ROP4 rop4);
typedef void __stdcall FN_DrvCompletePDEV(DHPDEV dhpdev, HDEV hdev);
typedef BOOL __stdcall FN_DrvCopyBits(SURFOBJ *psoDest, SURFOBJ *psoSrc, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclDest, POINTL *pptlSrc);
typedef HBITMAP __stdcall FN_DrvCreateDeviceBitmap(DHPDEV dhpdev, SIZEL sizl, ULONG iFormat);
typedef HBITMAP __stdcall FN_DrvCreateDeviceBitmapEx(DHPDEV dhpdev, SIZEL sizl, ULONG iFormat, DWORD Flags, DHSURF dhsurfGroup, DWORD DxFormat, DWORD SubresourceIndex, HANDLE *phSharedSurface);
typedef void __stdcall FN_DrvDeleteDeviceBitmap(DHSURF dhsurf);
typedef void __stdcall FN_DrvDeleteDeviceBitmapEx(DHSURF);
typedef HBITMAP __stdcall FN_DrvDeriveSurface(DD_DIRECTDRAW_GLOBAL *pDirectDraw, DD_SURFACE_LOCAL *pSurface);
typedef LONG __stdcall FN_DrvDescribePixelFormat(DHPDEV dhpdev, LONG iPixelFormat, ULONG cjpfd, PIXELFORMATDESCRIPTOR *ppfd);
typedef void __stdcall FN_DrvDestroyFont(FONTOBJ *pfo);
typedef void __stdcall FN_DrvDisableDirectDraw(DHPDEV dhpdev);
typedef void __stdcall FN_DrvDisableDriver();
typedef void __stdcall FN_DrvDisablePDEV(DHPDEV dhpdev);
typedef void __stdcall FN_DrvDisableSurface(DHPDEV dhpdev);
typedef ULONG __stdcall FN_DrvDitherColor(DHPDEV dhpdev, ULONG iMode, ULONG rgb, ULONG *pul);
typedef ULONG __stdcall FN_DrvDrawEscape(SURFOBJ *pso, ULONG iEsc, CLIPOBJ *pco, RECTL *prcl, ULONG cjIn, PVOID pvIn);
typedef BOOL __stdcall FN_DrvEnableDirectDraw(DHPDEV dhpdev, DD_CALLBACKS *pCallBacks, DD_SURFACECALLBACKS *pSurfaceCallBacks, DD_PALETTECALLBACKS *pPaletteCallBacks);
typedef BOOL __stdcall FN_DrvEnableDriver(ULONG iEngineVersion, ULONG cj, DRVENABLEDATA *pded);
typedef DHPDEV __stdcall FN_DrvEnablePDEV(DEVMODEW *pdm, LPWSTR pwszLogAddress, ULONG cPat, HSURF *phsurfPatterns, ULONG cjCaps, ULONG *pdevcaps, ULONG cjDevInfo, DEVINFO *pdi, HDEV hdev, LPWSTR pwszDeviceName, HANDLE hDriver);
typedef HSURF __stdcall FN_DrvEnableSurface(DHPDEV dhpdev);
typedef BOOL __stdcall FN_DrvEndDoc(SURFOBJ *pso, FLONG fl);
typedef BOOL __stdcall FN_DrvEndDxInterop(SURFOBJ *psoSurf, BOOL bDiscard, BOOL *bDeviceLost, PVOID KernelModeDeviceHandle);
typedef ULONG __stdcall FN_DrvEscape(SURFOBJ *pso, ULONG iEsc, ULONG cjIn, PVOID pvIn, ULONG cjOut, PVOID pvOut);
typedef BOOL __stdcall FN_DrvFillPath(SURFOBJ *pso, PATHOBJ *ppo, CLIPOBJ *pco, BRUSHOBJ *pbo, POINTL *pptlBrushOrg, MIX mix, FLONG flOptions);
typedef ULONG __stdcall FN_DrvFontManagement(SURFOBJ *pso, FONTOBJ *pfo, ULONG iMode, ULONG cjIn, PVOID pvIn, ULONG cjOut, PVOID pvOut);
typedef void __stdcall FN_DrvFree(PVOID pv, ULONG_PTR id);
typedef BOOL __stdcall FN_DrvGetDirectDrawInfo(DHPDEV dhpdev, DD_HALINFO *pHalInfo, DWORD *pdwNumHeaps, VIDEOMEMORY *pvmList, DWORD *pdwNumFourCCCodes, DWORD *pdwFourCC);
typedef ULONG __stdcall FN_DrvGetGlyphMode(DHPDEV dhpdev, FONTOBJ *pfo);
typedef ULONG __stdcall FN_DrvGetModes(HANDLE hDriver, ULONG cjSize, DEVMODEW *pdm);
typedef PVOID __stdcall FN_DrvGetTrueTypeFile(ULONG_PTR iFile, ULONG *pcj);
typedef BOOL __stdcall FN_DrvGradientFill(SURFOBJ *psoDest, CLIPOBJ *pco, XLATEOBJ *pxlo, TRIVERTEX *pVertex, ULONG nVertex, PVOID pMesh, ULONG nMesh, RECTL *prclExtents, POINTL *pptlDitherOrg, ULONG ulMode);
typedef BOOL __stdcall FN_DrvIcmCheckBitmapBits(DHPDEV dhpdev, HANDLE hColorTransform, SURFOBJ *pso, PBYTE paResults);
typedef HANDLE __stdcall FN_DrvIcmCreateColorTransform(DHPDEV dhpdev, LPLOGCOLORSPACEW pLogColorSpace, PVOID pvSourceProfile, ULONG cjSourceProfile, PVOID pvDestProfile, ULONG cjDestProfile, PVOID pvTargetProfile, ULONG cjTargetProfile, DWORD dwReserved);
typedef BOOL __stdcall FN_DrvIcmDeleteColorTransform(DHPDEV dhpdev, HANDLE hcmXform);
typedef BOOL __stdcall FN_DrvIcmSetDeviceGammaRamp(DHPDEV dhpdev, ULONG iFormat, LPVOID lpRamp);
typedef BOOL __stdcall FN_DrvLineTo(SURFOBJ *pso, CLIPOBJ *pco, BRUSHOBJ *pbo, LONG x1, LONG y1, LONG x2, LONG y2, RECTL *prclBounds, MIX mix);
typedef ULONG_PTR __stdcall FN_DrvLoadFontFile(ULONG cFiles, ULONG_PTR *piFile, PVOID *ppvView, ULONG *pcjView, DESIGNVECTOR *pdv, ULONG ulLangID, ULONG ulFastCheckSum);
typedef void __stdcall FN_DrvLockDisplayArea(DHPDEV dhpdev, RECTL *prcl);
typedef void __stdcall FN_DrvMovePanning(LONG x, LONG y, FLONG fl);
typedef void __stdcall FN_DrvMovePointer(SURFOBJ *pso, LONG x, LONG y, RECTL *prcl);
typedef BOOL __stdcall FN_DrvNextBand(SURFOBJ *pso, POINTL *pptl);
typedef void __stdcall FN_DrvNotify(SURFOBJ *pso, ULONG iType, PVOID pvData);
typedef BOOL __stdcall FN_DrvOffset(SURFOBJ *pso, LONG x, LONG y, FLONG flReserved);
typedef BOOL __stdcall FN_DrvPaint(SURFOBJ *pso, CLIPOBJ *pco, BRUSHOBJ *pbo, POINTL *pptlBrushOrg, MIX mix);
typedef BOOL __stdcall FN_DrvPlgBlt(SURFOBJ *psoTrg, SURFOBJ *psoSrc, SURFOBJ *psoMsk, CLIPOBJ *pco, XLATEOBJ *pxlo, COLORADJUSTMENT *pca, POINTL *pptlBrushOrg, POINTFIX *pptfx, RECTL *prcl, POINTL *pptl, ULONG iMode);
typedef BOOL __stdcall FN_DrvQueryAdvanceWidths(DHPDEV dhpdev, FONTOBJ *pfo, ULONG iMode, HGLYPH *phg, PVOID pvWidths, ULONG cGlyphs);
typedef BOOL __stdcall FN_DrvQueryDeviceSupport(SURFOBJ *pso, XLATEOBJ *pxlo, XFORMOBJ *pxo, ULONG iType, ULONG cjIn, PVOID pvIn, ULONG cjOut, PVOID pvOut);
typedef BOOL __stdcall FN_DrvQueryDriverInfo(DWORD dwMode, PVOID pBuffer, DWORD cjBuf, PDWORD pcbNeeded);
typedef PIFIMETRICS __stdcall FN_DrvQueryFont(DHPDEV dhpdev, ULONG_PTR iFile, ULONG iFace, ULONG_PTR *pid);
typedef LONG __stdcall FN_DrvQueryFontCaps(ULONG culCaps, ULONG *pulCaps);
typedef LONG __stdcall FN_DrvQueryFontData(DHPDEV dhpdev, FONTOBJ *pfo, ULONG iMode, HGLYPH hg, GLYPHDATA *pgd, PVOID pv, ULONG cjSize);
typedef LONG __stdcall FN_DrvQueryFontFile(ULONG_PTR iFile, ULONG ulMode, ULONG cjBuf, ULONG *pulBuf);
typedef PVOID __stdcall FN_DrvQueryFontTree(DHPDEV dhpdev, ULONG_PTR iFile, ULONG iFace, ULONG iMode, ULONG_PTR *pid);
typedef PFD_GLYPHATTR __stdcall FN_DrvQueryGlyphAttrs(FONTOBJ *pfo, ULONG iMode);
typedef ULONG __stdcall FN_DrvQueryPerBandInfo(SURFOBJ *pso, PERBANDINFO *pbi);
typedef BOOL __stdcall FN_DrvQuerySpoolType(DHPDEV dhpdev, LPWSTR pwchType);
typedef LONG __stdcall FN_DrvQueryTrueTypeOutline(DHPDEV dhpdev, FONTOBJ *pfo, HGLYPH hglyph, BOOL bMetricsOnly, GLYPHDATA *pgldt, ULONG cjBuf, TTPOLYGONHEADER *ppoly);
typedef LONG __stdcall FN_DrvQueryTrueTypeSection(ULONG, ULONG, ULONG, HANDLE *, PTRDIFF *);
typedef LONG __stdcall FN_DrvQueryTrueTypeTable(ULONG_PTR iFile, ULONG ulFont, ULONG ulTag, PTRDIFF dpStart, ULONG cjBuf, BYTE *pjBuf, PBYTE *ppjTable, ULONG *pcjTable);
typedef BOOL __stdcall FN_DrvRealizeBrush(BRUSHOBJ *pbo, SURFOBJ *psoTarget, SURFOBJ *psoPattern, SURFOBJ *psoMask, XLATEOBJ *pxlo, ULONG iHatch);
typedef LONG __stdcall FN_DrvRenderHint(DHPDEV dhpdev, ULONG NotifyCode, SIZE_T Length, PVOID Data);
typedef ULONG __stdcall FN_DrvResetDevice(DHPDEV dhpdev, PVOID Reserved);
typedef BOOL __stdcall FN_DrvResetPDEV(DHPDEV dhpdevOld, DHPDEV dhpdevNew);
typedef ULONG_PTR __stdcall FN_DrvSaveScreenBits(SURFOBJ *pso, ULONG iMode, ULONG_PTR ident, RECTL *prcl);
typedef BOOL __stdcall FN_DrvSendPage(SURFOBJ *pso);
typedef BOOL __stdcall FN_DrvSetPalette(DHPDEV dhpdev, PALOBJ *ppalo, FLONG fl, ULONG iStart, ULONG cColors);
typedef BOOL __stdcall FN_DrvSetPixelFormat(SURFOBJ *pso, LONG iPixelFormat, HWND hwnd);
typedef ULONG __stdcall FN_DrvSetPointerShape(SURFOBJ *pso, SURFOBJ *psoMask, SURFOBJ *psoColor, XLATEOBJ *pxlo, LONG xHot, LONG yHot, LONG x, LONG y, RECTL *prcl, FLONG fl);
typedef BOOL __stdcall FN_DrvStartBanding(SURFOBJ *pso, POINTL *pptl);
typedef BOOL __stdcall FN_DrvStartDoc(SURFOBJ *pso, LPWSTR pwszDocName, DWORD dwJobId);
typedef BOOL __stdcall FN_DrvStartDxInterop(SURFOBJ *psoSurf, BOOL bDiscard, PVOID KernelModeDeviceHandle);
typedef BOOL __stdcall FN_DrvStartPage(SURFOBJ *pso);
typedef BOOL __stdcall FN_DrvStretchBlt(SURFOBJ *psoDest, SURFOBJ *psoSrc, SURFOBJ *psoMask, CLIPOBJ *pco, XLATEOBJ *pxlo, COLORADJUSTMENT *pca, POINTL *pptlHTOrg, RECTL *prclDest, RECTL *prclSrc, POINTL *pptlMask, ULONG iMode);
typedef BOOL __stdcall FN_DrvStretchBltROP(SURFOBJ *psoDest, SURFOBJ *psoSrc, SURFOBJ *psoMask, CLIPOBJ *pco, XLATEOBJ *pxlo, COLORADJUSTMENT *pca, POINTL *pptlHTOrg, RECTL *prclDest, RECTL *prclSrc, POINTL *pptlMask, ULONG iMode, BRUSHOBJ *pbo, DWORD rop4);
typedef BOOL __stdcall FN_DrvStrokeAndFillPath(SURFOBJ *pso, PATHOBJ *ppo, CLIPOBJ *pco, XFORMOBJ *pxo, BRUSHOBJ *pboStroke, LINEATTRS *plineattrs, BRUSHOBJ *pboFill, POINTL *pptlBrushOrg, MIX mixFill, FLONG flOptions);
typedef BOOL __stdcall FN_DrvStrokePath(SURFOBJ *pso, PATHOBJ *ppo, CLIPOBJ *pco, XFORMOBJ *pxo, BRUSHOBJ *pbo, POINTL *pptlBrushOrg, LINEATTRS *plineattrs, MIX mix);
typedef BOOL __stdcall FN_DrvSwapBuffers(SURFOBJ *pso, WNDOBJ *pwo);
typedef void __stdcall FN_DrvSynchronize(DHPDEV dhpdev, RECTL *prcl);
typedef LONG __stdcall FN_DrvSynchronizeRedirectionBitmaps(DHPDEV dhpdev, UINT64 *puiFenceID);
typedef void __stdcall FN_DrvSynchronizeSurface(SURFOBJ *pso, RECTL *prcl, FLONG fl);
typedef BOOL __stdcall FN_DrvTextOut(SURFOBJ *pso, STROBJ *pstro, FONTOBJ *pfo, CLIPOBJ *pco, RECTL *prclExtra, RECTL *prclOpaque, BRUSHOBJ *pboFore, BRUSHOBJ *pboOpaque, POINTL *pptlOrg, MIX mix);
typedef BOOL __stdcall FN_DrvTransparentBlt(SURFOBJ *psoDst, SURFOBJ *psoSrc, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclDst, RECTL *prclSrc, ULONG iTransColor, ULONG ulReserved);
typedef BOOL __stdcall FN_DrvUnloadFontFile(ULONG_PTR iFile);
typedef void __stdcall FN_DrvUnlockDisplayArea(DHPDEV dhpdev, RECTL *prcl);
typedef INT __stdcall FN_EngCombineRgn(HANDLE hrgnTrg, HANDLE hrgnSrc1, HANDLE hrgnSrc2, INT iMode);
typedef INT __stdcall FN_EngCopyRgn(HANDLE hrgnDst, HANDLE hrgnSrc);
typedef HANDLE __stdcall FN_EngCreateRectRgn(INT left, INT top, INT right, INT bottom);
typedef void __stdcall FN_EngDeleteRgn(HANDLE hrgn);
typedef INT __stdcall FN_EngIntersectRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
typedef INT __stdcall FN_EngSubtractRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
typedef INT __stdcall FN_EngUnionRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
typedef INT __stdcall FN_EngXorRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
typedef struct _FONTDIFF FONTDIFF;
typedef FONTENUMPROCA FONTENUMPROC;
typedef OLDFONTENUMPROCA FONTENUMPROCA;
typedef OLDFONTENUMPROCW FONTENUMPROCW;
typedef struct _FONTINFO FONTINFO;
typedef struct _FONTOBJ FONTOBJ;
typedef struct tagFONTSIGNATURE FONTSIGNATURE;
typedef struct _FONTSIM FONTSIM;
typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;
typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;
typedef struct _FPO_DATA FPO_DATA;
typedef BOOL (__stdcall *FREEOBJPROC)(struct _DRIVEROBJ *pDriverObj);
typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
typedef unsigned __int16 FSHORT;
typedef enum _FSINFOCLASS FS_INFORMATION_CLASS;
typedef SHORT FWORD;
typedef int FXPT16DOT16;
typedef int FXPT2DOT30;
typedef struct _GAMMARAMP GAMMARAMP;
typedef BYTE GAMMA_TABLES[2][256];
typedef GCP_RESULTSA GCP_RESULTS;
typedef struct tagGCP_RESULTSA GCP_RESULTSA;
typedef struct tagGCP_RESULTSW GCP_RESULTSW;
typedef struct _GDIINFO GDIINFO;
typedef struct _GDI_TEB_BATCH GDI_TEB_BATCH;
typedef struct _GENERATE_NAME_CONTEXT GENERATE_NAME_CONTEXT;
typedef struct _GENERIC_MAPPING GENERIC_MAPPING;
typedef struct $ED1A2D3821D17D4C2EBC1D073E07CA93 GET_LENGTH_INFORMATION;
typedef HANDLE GLOBALHANDLE;
typedef struct _GLYPHBITS GLYPHBITS;
typedef struct _GLYPHDATA GLYPHDATA;
typedef union _GLYPHDEF GLYPHDEF;
typedef struct _GLYPHMETRICS GLYPHMETRICS;
typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;
typedef struct _GLYPHPOS GLYPHPOS;
typedef struct tagGLYPHSET GLYPHSET;
typedef INT (__stdcall *GOBJENUMPROC)(LPVOID, LPARAM);
typedef struct _GRADIENT_RECT GRADIENT_RECT;
typedef struct _GRADIENT_TRIANGLE GRADIENT_TRIANGLE;
typedef struct _GROUP_AFFINITY GROUP_AFFINITY;
typedef struct _GROUP_RELATIONSHIP GROUP_RELATIONSHIP;
typedef struct _GUID GUID;
typedef struct HACCEL__ *HACCEL;
struct HACCEL__ {int unused;};
typedef __int16 HALF_PTR;
typedef void *HANDLE;
typedef struct tagHANDLETABLE HANDLETABLE;
typedef unsigned int HANDLE_PTR;
typedef struct _HARDERROR_MSG HARDERROR_MSG;
typedef enum _HARDERROR_RESPONSE HARDERROR_RESPONSE;
typedef enum _HARDERROR_RESPONSE_OPTION HARDERROR_RESPONSE_OPTION;
typedef struct _HARDWARE_PTE_X86 HARDWARE_PTE_X86;
typedef struct HBITMAP__ *HBITMAP;
struct HBITMAP__ {int unused;};
typedef struct HBM__ *HBM;
struct HBM__ {int unused;};
typedef struct HBRUSH__ *HBRUSH;
struct HBRUSH__ {int unused;};
typedef struct HCOLORSPACE__ *HCOLORSPACE;
struct HCOLORSPACE__ {int unused;};
typedef HICON HCURSOR;
typedef struct HDC__ *HDC;
struct HDC__ {int unused;};
typedef struct HDESK__ *HDESK;
struct HDESK__ {int unused;};
typedef struct HDEV__ *HDEV;
struct HDEV__ {int unused;};
typedef struct HDRVOBJ__ *HDRVOBJ;
struct HDRVOBJ__ {int unused;};
typedef enum _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;
typedef struct _HEAP_LOCK HEAP_LOCK;
typedef struct HENHMETAFILE__ *HENHMETAFILE;
struct HENHMETAFILE__ {int unused;};
typedef struct HFASTMUTEX__ *HFASTMUTEX;
struct HFASTMUTEX__ {int unused;};
typedef ULONG_PTR HFC;
typedef ULONG_PTR HFF;
typedef int HFILE;
typedef struct HFONT__ *HFONT;
struct HFONT__ {int unused;};
typedef void *HGDIOBJ;
typedef HANDLE HGLOBAL;
typedef struct HGLRC__ *HGLRC;
struct HGLRC__ {int unused;};
typedef ULONG HGLYPH;
typedef struct HICON__ *HICON;
struct HICON__ {int unused;};
typedef struct HINSTANCE__ *HINSTANCE;
struct HINSTANCE__ {int unused;};
typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;
typedef struct HKEY__ *HKEY;
struct HKEY__ {int unused;};
typedef struct HKL__ *HKL;
struct HKL__ {int unused;};
typedef HANDLE HLOCAL;
typedef struct HMENU__ *HMENU;
struct HMENU__ {int unused;};
typedef struct HMETAFILE__ *HMETAFILE;
struct HMETAFILE__ {int unused;};
typedef HINSTANCE HMODULE;
typedef struct HMONITOR__ *HMONITOR;
struct HMONITOR__ {int unused;};
typedef struct HPALETTE__ *HPALETTE;
struct HPALETTE__ {int unused;};
typedef struct HPEN__ *HPEN;
struct HPEN__ {int unused;};
typedef LONG HRESULT;
typedef struct HRGN__ *HRGN;
struct HRGN__ {int unused;};
typedef struct HRSRC__ *HRSRC;
struct HRSRC__ {int unused;};
typedef struct HSEMAPHORE__ *HSEMAPHORE;
struct HSEMAPHORE__ {int unused;};
typedef struct HSTR__ *HSTR;
struct HSTR__ {int unused;};
typedef struct HSURF__ *HSURF;
struct HSURF__ {int unused;};
typedef struct HTASK__ *HTASK;
struct HTASK__ {int unused;};
typedef struct HUMPD__ *HUMPD;
struct HUMPD__ {int unused;};
typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;
struct HWINEVENTHOOK__ {int unused;};
typedef struct HWINSTA__ *HWINSTA;
struct HWINSTA__ {int unused;};
typedef struct HWND__ *HWND;
struct HWND__ {int unused;};
typedef int (__stdcall *ICMENUMPROCA)(LPSTR, LPARAM);
typedef int (__stdcall *ICMENUMPROCW)(LPWSTR, LPARAM);
struct IDDVideoPortContainerVtbl;
typedef ULONG IDENT;
struct IDirectDraw;
struct IDirectDrawClipper;
struct IDirectDrawPalette;
struct IDirectDrawSurface;
struct IDirectDrawVideoPortNotifyVtbl;
struct IDirectDrawVideoPortVtbl;
typedef struct _IFIEXTRA IFIEXTRA;
typedef struct _IFIMETRICS IFIMETRICS;
typedef GUID IID;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;
typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF {BYTE bAuxType;BYTE bReserved;DWORD SymbolTableIndex;BYTE rgbReserved[12];};
typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;
typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;
struct IMAGE_COR20_HEADER {DWORD cb;WORD MajorRuntimeVersion;WORD MinorRuntimeVersion;IMAGE_DATA_DIRECTORY MetaData;DWORD Flags;union {DWORD EntryPointToken;DWORD EntryPointRVA;};IMAGE_DATA_DIRECTORY Resources;IMAGE_DATA_DIRECTORY StrongNameSignature;IMAGE_DATA_DIRECTORY CodeManagerTable;IMAGE_DATA_DIRECTORY VTableFixups;IMAGE_DATA_DIRECTORY ExportAddressTableJumps;IMAGE_DATA_DIRECTORY ManagedNativeHeader;};
union IMAGE_COR20_HEADER::$82AC90B078A758A917208A327C0E6423 {DWORD EntryPointToken;DWORD EntryPointRVA;};
typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;
typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR IMAGE_DELAYLOAD_DESCRIPTOR;
typedef struct _IMAGE_DOS_HEADER IMAGE_DOS_HEADER;
typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;
typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY32;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY64;
typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;
typedef struct _IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;
typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;
typedef struct _IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;
typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;
typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;
typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;
typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;
typedef struct _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;
typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;
typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;
typedef struct _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;
typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;
typedef struct in6_addr IN6_ADDR;
typedef struct _INITIAL_PEB INITIAL_PEB;
typedef struct _INITIAL_TEB INITIAL_TEB;
typedef int INT;
typedef signed __int16 INT16;
typedef int INT32;
typedef __int64 INT64;
typedef signed __int8 INT8;
typedef enum _INTERFACE_TYPE INTERFACE_TYPE;
typedef int INT_PTR;
typedef struct in_addr IN_ADDR;
typedef struct _IO_COMPLETION_BASIC_INFORMATION IO_COMPLETION_BASIC_INFORMATION;
typedef enum _IO_COMPLETION_INFORMATION_CLASS IO_COMPLETION_INFORMATION_CLASS;
typedef struct _IO_COUNTERS IO_COUNTERS;
typedef struct _IO_ERROR_LOG_MESSAGE IO_ERROR_LOG_MESSAGE;
typedef struct _IO_ERROR_LOG_PACKET IO_ERROR_LOG_PACKET;
typedef struct _IO_STATUS_BLOCK IO_STATUS_BLOCK;
struct IStream;
struct IStreamVtbl;
typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION JOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST JOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS JOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_JOBSET_INFORMATION JOBOBJECT_JOBSET_INFORMATION;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION JOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _JOB_SET_ARRAY JOB_SET_ARRAY;
typedef ULONG_PTR KAFFINITY;
typedef enum _KCONTINUE_STATUS KCONTINUE_STATUS;
typedef struct _KD_SYMBOLS_INFO KD_SYMBOLS_INFO;
typedef struct _KERNEL_USER_TIMES KERNEL_USER_TIMES;
typedef struct tagKERNINGPAIR KERNINGPAIR;
typedef struct _KEY_BASIC_INFORMATION KEY_BASIC_INFORMATION;
typedef struct _KEY_CONTROL_FLAGS_INFORMATION KEY_CONTROL_FLAGS_INFORMATION;
typedef struct _KEY_FULL_INFORMATION KEY_FULL_INFORMATION;
typedef struct _KEY_HANDLE_TAGS_INFORMATION KEY_HANDLE_TAGS_INFORMATION;
typedef enum _KEY_INFORMATION_CLASS KEY_INFORMATION_CLASS;
typedef struct _KEY_NAME_INFORMATION KEY_NAME_INFORMATION;
typedef struct _KEY_NODE_INFORMATION KEY_NODE_INFORMATION;
typedef enum _KEY_SET_INFORMATION_CLASS KEY_SET_INFORMATION_CLASS;
typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION KEY_SET_VIRTUALIZATION_INFORMATION;
typedef struct _KEY_USER_FLAGS_INFORMATION KEY_USER_FLAGS_INFORMATION;
typedef struct _KEY_VALUE_BASIC_INFORMATION KEY_VALUE_BASIC_INFORMATION;
typedef struct _KEY_VALUE_ENTRY KEY_VALUE_ENTRY;
typedef struct _KEY_VALUE_FULL_INFORMATION KEY_VALUE_FULL_INFORMATION;
typedef enum _KEY_VALUE_INFORMATION_CLASS KEY_VALUE_INFORMATION_CLASS;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION KEY_VALUE_PARTIAL_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
typedef struct _KEY_VIRTUALIZATION_INFORMATION KEY_VIRTUALIZATION_INFORMATION;
typedef struct _KEY_WOW64_FLAGS_INFORMATION KEY_WOW64_FLAGS_INFORMATION;
typedef struct _KEY_WRITE_TIME_INFORMATION KEY_WRITE_TIME_INFORMATION;
typedef enum _KOBJECTS KOBJECTS;
typedef LONG KPRIORITY;
typedef CCHAR KPROCESSOR_MODE;
typedef enum _KPROCESS_STATE KPROCESS_STATE;
typedef enum _KPROFILE_SOURCE KPROFILE_SOURCE;
typedef struct _KSYSTEM_TIME KSYSTEM_TIME;
typedef enum _KTHREAD_STATE KTHREAD_STATE;
typedef struct _KUSER_SHARED_DATA KUSER_SHARED_DATA;
typedef enum _KWAIT_REASON KWAIT_REASON;
typedef WORD LANGID;
typedef union _LARGE_INTEGER LARGE_INTEGER;
typedef enum _LATENCY_TIME LATENCY_TIME;
typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;
typedef DWORD LCID;
typedef LONG LCSCSTYPE;
typedef LONG LCSGAMUTMATCH;
typedef LONG LCSTYPE;
typedef struct tagLC_ID LC_ID;
typedef LONG LDECI4;
typedef struct _LDR_DATA_TABLE_ENTRY LDR_DATA_TABLE_ENTRY;
typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA LDR_DLL_LOADED_NOTIFICATION_DATA;
typedef struct _LDR_DLL_LOADED_NOTIFICATION_ENTRY LDR_DLL_LOADED_NOTIFICATION_ENTRY;
typedef void __stdcall LDR_ENUM_CALLBACK(PLDR_DATA_TABLE_ENTRY ModuleInformation, PVOID Parameter, BOOLEAN *Stop);
typedef struct _LDR_ENUM_RESOURCE_INFO LDR_ENUM_RESOURCE_INFO;
typedef NTSTATUS __stdcall LDR_MANIFEST_PROBER_ROUTINE(PVOID DllHandle, PCWSTR FullDllName, PVOID *ActCtx);
typedef struct _LDR_RESOURCE_INFO LDR_RESOURCE_INFO;
typedef struct _LDT_ENTRY LDT_ENTRY;
typedef struct _LIGATURE LIGATURE;
typedef struct _LINEATTRS LINEATTRS;
typedef void (__stdcall *LINEDDAPROC)(INT, INT, LPARAM);
typedef struct _LIST_ENTRY LIST_ENTRY;
struct LIST_ENTRY32 {DWORD Flink;DWORD Blink;};
struct LIST_ENTRY64 {ULONGLONG Flink;ULONGLONG Blink;};
typedef struct _LOAD_IMPORTS LOAD_IMPORTS;
typedef struct tagLOCALESIGNATURE LOCALESIGNATURE;
typedef HANDLE LOCALHANDLE;
typedef struct tagLOGBRUSH LOGBRUSH;
typedef struct tagLOGBRUSH32 LOGBRUSH32;
typedef LOGCOLORSPACEA LOGCOLORSPACE;
typedef struct tagLOGCOLORSPACEA LOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEW LOGCOLORSPACEW;
typedef LOGFONTA LOGFONT;
typedef struct tagLOGFONTA LOGFONTA;
typedef struct tagLOGFONTW LOGFONTW;
typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP LOGICAL_PROCESSOR_RELATIONSHIP;
typedef struct tagLOGPALETTE LOGPALETTE;
typedef struct tagLOGPEN LOGPEN;
typedef int LONG;
typedef int LONG32;
typedef __int64 LONG64;
typedef __int64 LONGLONG;
typedef int LONG_PTR;
typedef struct _ABC *LPABC;
typedef struct _ABCFLOAT *LPABCFLOAT;
typedef LONG_PTR LPARAM;
typedef LPAXESLISTA LPAXESLIST;
typedef struct _AXESLISTA *LPAXESLISTA;
typedef struct _AXESLISTW *LPAXESLISTW;
typedef LPAXISINFOA LPAXISINFO;
typedef struct _AXISINFOA *LPAXISINFOA;
typedef struct _AXISINFOW *LPAXISINFOW;
typedef struct tagBITMAP *LPBITMAP;
typedef struct tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;
typedef struct _BITMAPCOREINFO *LPBITMAPCOREINFO;
typedef struct tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;
typedef struct tagBITMAPINFO *LPBITMAPINFO;
typedef struct tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;
typedef struct $22BDD2D628B0B561C5A9CA42290FE551 *LPBITMAPV4HEADER;
typedef struct $2B6042393D1A02E0AE9B16B44F784AC7 *LPBITMAPV5HEADER;
typedef struct _BLENDFUNCTION *LPBLENDFUNCTION;
typedef WINBOOL *LPBOOL;
typedef BYTE *LPBYTE;
typedef const CHAR *LPCCH;
typedef const GUID *LPCGUID;
typedef CHAR *LPCH;
typedef struct tagCHARSETINFO *LPCHARSETINFO;
typedef struct tagCIEXYZ *LPCIEXYZ;
typedef struct tagCIEXYZTRIPLE *LPCIEXYZTRIPLE;
typedef DWORD (__stdcall *LPCLIPPERCALLBACK)(LPDIRECTDRAWCLIPPER lpDDClipper, HWND hWnd, DWORD code, LPVOID lpContext);
typedef GUID *LPCLSID;
typedef struct tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;
typedef DWORD *LPCOLORREF;
typedef CONTEXT *LPCONTEXT;
typedef struct _LPCP_CONNECTION_MESSAGE LPCP_CONNECTION_MESSAGE;
typedef struct _LPCP_MESSAGE LPCP_MESSAGE;
typedef const RECT *LPCRECT;
typedef const RECTL *LPCRECTL;
typedef const CHAR *LPCSTR;
typedef LPCCH LPCTCH;
typedef LPCSTR LPCTSTR;
typedef LPCSTR LPCUTSTR;
typedef const WCHAR *LPCUWCHAR;
typedef const WCHAR *LPCUWSTR;
typedef const void *LPCVOID;
typedef const WCHAR *LPCWCH;
typedef const WCHAR *LPCWCHAR;
typedef const WCHAR *LPCWSTR;
typedef enum _LPC_TYPE LPC_TYPE;
typedef struct _D3DBRANCH *LPD3DBRANCH;
typedef struct _D3DCLIPSTATUS *LPD3DCLIPSTATUS;
typedef DWORD *LPD3DCOLOR;
typedef struct _D3DCOLORVALUE *LPD3DCOLORVALUE;
typedef struct _D3DDeviceDesc *LPD3DDEVICEDESC;
typedef struct _D3DDeviceDesc1 *LPD3DDEVICEDESC1;
typedef struct _D3DDeviceDesc2 *LPD3DDEVICEDESC2;
typedef struct _D3DDeviceDesc7 *LPD3DDEVICEDESC7;
typedef struct _D3DDEVINFO_TEXTUREMANAGER *LPD3DDEVINFO_TEXTUREMANAGER;
typedef struct _D3DDEVINFO_TEXTURING *LPD3DDEVINFO_TEXTURING;
typedef struct _D3DDRAWPRIMITIVESTRIDEDDATA *LPD3DDRAWPRIMITIVESTRIDEDDATA;
typedef HRESULT (__stdcall *LPD3DENUMDEVICESCALLBACK)(GUID *lpGuid, LPSTR lpDeviceDescription, LPSTR lpDeviceName, LPD3DDEVICEDESC, LPD3DDEVICEDESC, LPVOID);
typedef HRESULT (__stdcall *LPD3DENUMDEVICESCALLBACK7)(LPSTR lpDeviceDescription, LPSTR lpDeviceName, LPD3DDEVICEDESC7, LPVOID);
typedef HRESULT (__stdcall *LPD3DENUMPIXELFORMATSCALLBACK)(DDPIXELFORMAT *format, void *ctx);
typedef HRESULT (__stdcall *LPD3DENUMTEXTUREFORMATSCALLBACK)(DDSURFACEDESC *surface_desc, void *ctx);
typedef struct _D3DExecuteBufferDesc *LPD3DEXECUTEBUFFERDESC;
typedef struct _D3DEXECUTEDATA *LPD3DEXECUTEDATA;
typedef struct _D3DFINDDEVICERESULT *LPD3DFINDDEVICERESULT;
typedef struct _D3DFINDDEVICERESULT1 *LPD3DFINDDEVICERESULT1;
typedef struct _D3DFINDDEVICERESULT2 *LPD3DFINDDEVICERESULT2;
typedef struct _D3DFINDDEVICESEARCH *LPD3DFINDDEVICESEARCH;
typedef struct _D3DHVERTEX *LPD3DHVERTEX;
typedef struct _D3DINSTRUCTION *LPD3DINSTRUCTION;
typedef struct _D3DLIGHT *LPD3DLIGHT;
typedef struct _D3DLIGHT2 *LPD3DLIGHT2;
typedef struct _D3DLIGHT7 *LPD3DLIGHT7;
typedef struct _D3DLIGHTDATA *LPD3DLIGHTDATA;
typedef struct _D3DLIGHTINGCAPS *LPD3DLIGHTINGCAPS;
typedef struct _D3DLIGHTINGELEMENT *LPD3DLIGHTINGELEMENT;
typedef struct _D3DLINE *LPD3DLINE;
typedef struct _D3DLVERTEX *LPD3DLVERTEX;
typedef struct _D3DMATERIAL *LPD3DMATERIAL;
typedef struct _D3DMATERIAL7 *LPD3DMATERIAL7;
typedef DWORD *LPD3DMATERIALHANDLE;
typedef struct _D3DMATRIX *LPD3DMATRIX;
typedef DWORD *LPD3DMATRIXHANDLE;
typedef struct _D3DMATRIXLOAD *LPD3DMATRIXLOAD;
typedef struct _D3DMATRIXMULTIPLY *LPD3DMATRIXMULTIPLY;
typedef struct _D3DNTHALDeviceDesc_V1 *LPD3DNTHALDEVICEDESC_V1;
typedef struct _D3DNTHAL_CALLBACKS *LPD3DNTHAL_CALLBACKS;
typedef struct _D3DNTHAL_CALLBACKS2 *LPD3DNTHAL_CALLBACKS2;
typedef struct _D3DNTHAL_CALLBACKS3 *LPD3DNTHAL_CALLBACKS3;
typedef DWORD (__stdcall *LPD3DNTHAL_CLEAR2CB)(LPD3DNTHAL_CLEAR2DATA);
typedef struct _D3DNTHAL_CLEAR2DATA *LPD3DNTHAL_CLEAR2DATA;
typedef DWORD (__stdcall *LPD3DNTHAL_CONTEXTCREATECB)(LPD3DNTHAL_CONTEXTCREATEDATA);
typedef struct _D3DNTHAL_CONTEXTCREATEDATA *LPD3DNTHAL_CONTEXTCREATEDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_CONTEXTDESTROYALLCB)(LPD3DNTHAL_CONTEXTDESTROYALLDATA);
typedef struct _D3DNTHAL_CONTEXTDESTROYALLDATA *LPD3DNTHAL_CONTEXTDESTROYALLDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_CONTEXTDESTROYCB)(LPD3DNTHAL_CONTEXTDESTROYDATA);
typedef struct _D3DNTHAL_CONTEXTDESTROYDATA *LPD3DNTHAL_CONTEXTDESTROYDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_DRAWPRIMITIVES2CB)(LPD3DNTHAL_DRAWPRIMITIVES2DATA);
typedef struct _D3DNTHAL_DRAWPRIMITIVES2DATA *LPD3DNTHAL_DRAWPRIMITIVES2DATA;
typedef struct _D3DNTHAL_GLOBALDRIVERDATA *LPD3DNTHAL_GLOBALDRIVERDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_SCENECAPTURECB)(LPD3DNTHAL_SCENECAPTUREDATA);
typedef struct _D3DNTHAL_SCENECAPTUREDATA *LPD3DNTHAL_SCENECAPTUREDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_SETRENDERTARGETCB)(LPD3DNTHAL_SETRENDERTARGETDATA);
typedef struct _D3DNTHAL_SETRENDERTARGETDATA *LPD3DNTHAL_SETRENDERTARGETDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_TEXTURECREATECB)(LPD3DNTHAL_TEXTURECREATEDATA);
typedef struct _D3DNTHAL_TEXTURECREATEDATA *LPD3DNTHAL_TEXTURECREATEDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_TEXTUREDESTROYCB)(LPD3DNTHAL_TEXTUREDESTROYDATA);
typedef struct _D3DNTHAL_TEXTUREDESTROYDATA *LPD3DNTHAL_TEXTUREDESTROYDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_TEXTUREGETSURFCB)(LPD3DNTHAL_TEXTUREGETSURFDATA);
typedef struct _D3DNTHAL_TEXTUREGETSURFDATA *LPD3DNTHAL_TEXTUREGETSURFDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_TEXTURESWAPCB)(LPD3DNTHAL_TEXTURESWAPDATA);
typedef struct _D3DNTHAL_TEXTURESWAPDATA *LPD3DNTHAL_TEXTURESWAPDATA;
typedef DWORD (__stdcall *LPD3DNTHAL_VALIDATETEXTURESTAGESTATECB)(LPD3DNTHAL_VALIDATETEXTURESTAGESTATEDATA);
typedef struct _D3DNTHAL_VALIDATETEXTURESTAGESTATEDATA *LPD3DNTHAL_VALIDATETEXTURESTAGESTATEDATA;
typedef struct _D3DPICKRECORD *LPD3DPICKRECORD;
typedef struct _D3DPOINT *LPD3DPOINT;
typedef struct _D3DPrimCaps *LPD3DPRIMCAPS;
typedef struct _D3DPROCESSVERTICES *LPD3DPROCESSVERTICES;
typedef struct _D3DRECT *LPD3DRECT;
typedef struct _D3DSPAN *LPD3DSPAN;
typedef struct _D3DSTATE *LPD3DSTATE;
typedef struct $7E9A1B5E40099564A008C34F7F4248BF *LPD3DSTATS;
typedef struct _D3DSTATUS *LPD3DSTATUS;
typedef DWORD *LPD3DTEXTUREHANDLE;
typedef struct _D3DTEXTURELOAD *LPD3DTEXTURELOAD;
typedef struct _D3DTLVERTEX *LPD3DTLVERTEX;
typedef struct _D3DTRANSFORMCAPS *LPD3DTRANSFORMCAPS;
typedef struct _D3DTRANSFORMDATA *LPD3DTRANSFORMDATA;
typedef struct _D3DTRIANGLE *LPD3DTRIANGLE;
typedef HRESULT (__stdcall *LPD3DVALIDATECALLBACK)(void *ctx, DWORD offset);
typedef float *LPD3DVALUE;
typedef struct _D3DVECTOR *LPD3DVECTOR;
typedef struct _D3DVERTEX *LPD3DVERTEX;
typedef struct _D3DVERTEXBUFFERDESC *LPD3DVERTEXBUFFERDESC;
typedef struct _D3DVIEWPORT *LPD3DVIEWPORT;
typedef struct _D3DVIEWPORT2 *LPD3DVIEWPORT2;
typedef struct _D3DVIEWPORT7 *LPD3DVIEWPORT7;
typedef struct _DDARGB *LPDDARGB;
typedef struct _DDBLTBATCH *LPDDBLTBATCH;
typedef struct _DDBLTFX *LPDDBLTFX;
typedef DDCAPS *LPDDCAPS;
typedef struct _DDCAPS_DX1 *LPDDCAPS_DX1;
typedef struct _DDCAPS_DX3 *LPDDCAPS_DX3;
typedef struct _DDCAPS_DX5 *LPDDCAPS_DX5;
typedef struct _DDCAPS_DX6 *LPDDCAPS_DX6;
typedef struct _DDCAPS_DX7 *LPDDCAPS_DX7;
typedef struct _DDCOLORCONTROL *LPDDCOLORCONTROL;
typedef struct _DDCOLORKEY *LPDDCOLORKEY;
typedef struct _DDCOMPBUFFERINFO *LPDDCOMPBUFFERINFO;
typedef struct tagDDDEVICEIDENTIFIER *LPDDDEVICEIDENTIFIER;
typedef struct tagDDDEVICEIDENTIFIER2 *LPDDDEVICEIDENTIFIER2;
typedef HRESULT (__stdcall *LPDDENUMMODESCALLBACK)(LPDDSURFACEDESC, LPVOID);
typedef HRESULT (__stdcall *LPDDENUMMODESCALLBACK2)(LPDDSURFACEDESC2, LPVOID);
typedef HRESULT (__stdcall *LPDDENUMSURFACESCALLBACK)(LPDIRECTDRAWSURFACE, LPDDSURFACEDESC, LPVOID);
typedef HRESULT (__stdcall *LPDDENUMSURFACESCALLBACK2)(LPDIRECTDRAWSURFACE4, LPDDSURFACEDESC2, LPVOID);
typedef HRESULT (__stdcall *LPDDENUMSURFACESCALLBACK7)(LPDIRECTDRAWSURFACE7, LPDDSURFACEDESC2, LPVOID);
typedef HRESULT (__stdcall *LPDDENUMVIDEOCALLBACK)(LPDDVIDEOPORTCAPS, LPVOID);
typedef struct _DDGAMMARAMP *LPDDGAMMARAMP;
typedef struct _DDMOCOMPBUFFERINFO *LPDDMOCOMPBUFFERINFO;
typedef struct _DDOSCAPS *LPDDOSCAPS;
typedef struct _DDOVERLAYFX *LPDDOVERLAYFX;
typedef struct _DDPIXELFORMAT *LPDDPIXELFORMAT;
typedef struct _DDRGBA *LPDDRGBA;
typedef struct _DDSCAPS *LPDDSCAPS;
typedef struct _DDSCAPS2 *LPDDSCAPS2;
typedef struct _DDSCAPSEX *LPDDSCAPSEX;
typedef struct _DDSURFACEDESC *LPDDSURFACEDESC;
typedef struct _DDSURFACEDESC2 *LPDDSURFACEDESC2;
typedef struct _DDVIDEOPORTBANDWIDTH *LPDDVIDEOPORTBANDWIDTH;
typedef struct _DDVIDEOPORTCAPS *LPDDVIDEOPORTCAPS;
typedef struct _DDVIDEOPORTCONNECT *LPDDVIDEOPORTCONNECT;
typedef struct IDDVideoPortContainer *LPDDVIDEOPORTCONTAINER;
typedef struct _DDVIDEOPORTDESC *LPDDVIDEOPORTDESC;
typedef struct _DDVIDEOPORTINFO *LPDDVIDEOPORTINFO;
typedef struct _DDVIDEOPORTNOTIFY *LPDDVIDEOPORTNOTIFY;
typedef struct _DDVIDEOPORTSTATUS *LPDDVIDEOPORTSTATUS;
typedef struct _DESIGNVECTOR *LPDESIGNVECTOR;
typedef DEVMODEA *LPDEVMODE;
typedef struct _devicemodeA *LPDEVMODEA;
typedef struct _devicemodeW *LPDEVMODEW;
typedef struct tagDIBSECTION *LPDIBSECTION;
typedef struct IDirectDraw *LPDIRECTDRAW;
typedef struct IDirectDraw2 *LPDIRECTDRAW2;
typedef struct IDirectDraw3 *LPDIRECTDRAW3;
typedef struct IDirectDraw4 *LPDIRECTDRAW4;
typedef struct IDirectDraw7 *LPDIRECTDRAW7;
typedef struct IDirectDrawClipper *LPDIRECTDRAWCLIPPER;
typedef struct IDirectDrawColorControl *LPDIRECTDRAWCOLORCONTROL;
typedef struct IDirectDrawGammaControl *LPDIRECTDRAWGAMMACONTROL;
typedef struct IDirectDrawPalette *LPDIRECTDRAWPALETTE;
typedef struct IDirectDrawSurface *LPDIRECTDRAWSURFACE;
typedef struct IDirectDrawSurface2 *LPDIRECTDRAWSURFACE2;
typedef struct IDirectDrawSurface3 *LPDIRECTDRAWSURFACE3;
typedef struct IDirectDrawSurface4 *LPDIRECTDRAWSURFACE4;
typedef struct IDirectDrawSurface7 *LPDIRECTDRAWSURFACE7;
typedef struct IDirectDrawVideoPort *LPDIRECTDRAWVIDEOPORT;
typedef struct IDirectDrawVideoPortNotify *LPDIRECTDRAWVIDEOPORTNOTIFY;
typedef DISPLAY_DEVICEA *LPDISPLAY_DEVICE;
typedef struct _DISPLAY_DEVICEA *LPDISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEW *LPDISPLAY_DEVICEW;
typedef DOCINFOA *LPDOCINFO;
typedef struct _DOCINFOA *LPDOCINFOA;
typedef struct _DOCINFOW *LPDOCINFOW;
typedef DWORD *LPDWORD;
typedef struct tagENHMETAHEADER *LPENHMETAHEADER;
typedef struct tagENHMETARECORD *LPENHMETARECORD;
typedef ENUMLOGFONTA *LPENUMLOGFONT;
typedef struct tagENUMLOGFONTA *LPENUMLOGFONTA;
typedef ENUMLOGFONTEXA *LPENUMLOGFONTEX;
typedef struct tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;
typedef LPENUMLOGFONTEXDVA LPENUMLOGFONTEXDV;
typedef struct tagENUMLOGFONTEXDVA *LPENUMLOGFONTEXDVA;
typedef struct tagENUMLOGFONTEXDVW *LPENUMLOGFONTEXDVW;
typedef struct tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;
typedef struct tagENUMLOGFONTW *LPENUMLOGFONTW;
typedef LPENUMTEXTMETRICA LPENUMTEXTMETRIC;
typedef struct _ENUMTEXTMETRICA *LPENUMTEXTMETRICA;
typedef struct _ENUMTEXTMETRICW *LPENUMTEXTMETRICW;
typedef struct _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;
typedef EXTLOGFONTA *LPEXTLOGFONT;
typedef struct tagEXTLOGFONTA *LPEXTLOGFONTA;
typedef struct tagEXTLOGFONTW *LPEXTLOGFONTW;
typedef struct tagEXTLOGPEN *LPEXTLOGPEN;
typedef struct _FILETIME *LPFILETIME;
typedef struct tagFLOATOBJ_XFORM *LPFLOATOBJ_XFORM;
typedef GUID *LPFMTID;
typedef DWORD (__stdcall *LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODEA);
typedef UINT (__stdcall *LPFNDEVMODE)(HWND, HMODULE, LPDEVMODEA, LPSTR, LPSTR, LPDEVMODEA, LPSTR, UINT);
typedef struct tagFONTSIGNATURE *LPFONTSIGNATURE;
typedef int *LPFXPT16DOT16;
typedef int *LPFXPT2DOT30;
typedef GCP_RESULTSA *LPGCP_RESULTS;
typedef struct tagGCP_RESULTSA *LPGCP_RESULTSA;
typedef struct tagGCP_RESULTSW *LPGCP_RESULTSW;
typedef struct _GLYPHMETRICS *LPGLYPHMETRICS;
typedef struct _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;
typedef struct tagGLYPHSET *LPGLYPHSET;
typedef struct _GRADIENT_RECT *LPGRADIENT_RECT;
typedef struct _GRADIENT_TRIANGLE *LPGRADIENT_TRIANGLE;
typedef GUID *LPGUID;
typedef HANDLE *LPHANDLE;
typedef struct tagHANDLETABLE *LPHANDLETABLE;
typedef GUID *LPIID;
typedef struct in6_addr *LPIN6_ADDR;
typedef int *LPINT;
typedef struct in_addr *LPIN_ADDR;
typedef struct tagKERNINGPAIR *LPKERNINGPAIR;
typedef struct tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;
typedef struct tagLC_ID *LPLC_ID;
typedef struct _LDT_ENTRY *LPLDT_ENTRY;
typedef struct tagLOCALESIGNATURE *LPLOCALESIGNATURE;
typedef struct tagLOGBRUSH *LPLOGBRUSH;
typedef LOGCOLORSPACEA *LPLOGCOLORSPACE;
typedef struct tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;
typedef LOGFONTA *LPLOGFONT;
typedef struct tagLOGFONTA *LPLOGFONTA;
typedef struct tagLOGFONTW *LPLOGFONTW;
typedef struct tagLOGPALETTE *LPLOGPALETTE;
typedef struct tagLOGPEN *LPLOGPEN;
typedef int *LPLONG;
typedef struct _MAT2 *LPMAT2;
typedef struct tagMETAFILEPICT *LPMETAFILEPICT;
typedef struct tagMETAHEADER *LPMETAHEADER;
typedef struct tagMETARECORD *LPMETARECORD;
typedef NEWTEXTMETRICA *LPNEWTEXTMETRIC;
typedef struct tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;
typedef OSVERSIONINFOA *LPOSVERSIONINFO;
typedef struct _OSVERSIONINFOA *LPOSVERSIONINFOA;
typedef OSVERSIONINFOEXA *LPOSVERSIONINFOEX;
typedef struct _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOW *LPOSVERSIONINFOW;
typedef OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;
typedef struct _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;
typedef struct tagPALETTEENTRY *LPPALETTEENTRY;
typedef struct tagPANOSE *LPPANOSE;
typedef LOGBRUSH *LPPATTERN;
typedef struct tagPELARRAY *LPPELARRAY;
typedef struct tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;
typedef struct tagPOINT *LPPOINT;
typedef struct tagPOINTFX *LPPOINTFX;
typedef struct tagPOINTS *LPPOINTS;
typedef POLYTEXTA *LPPOLYTEXT;
typedef struct _POLYTEXTA *LPPOLYTEXTA;
typedef struct _POLYTEXTW *LPPOLYTEXTW;
typedef struct _RASTERIZER_STATUS *LPRASTERIZER_STATUS;
typedef struct tagRECT *LPRECT;
typedef struct _RECTL *LPRECTL;
typedef struct tagRGBQUAD *LPRGBQUAD;
typedef struct tagRGBTRIPLE *LPRGBTRIPLE;
typedef struct _RGNDATA *LPRGNDATA;
typedef struct _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;
typedef struct _SID_IDENTIFIER_AUTHORITY *LPSID_IDENTIFIER_AUTHORITY;
typedef struct tagSIZE *LPSIZE;
typedef SIZE *LPSIZEL;
typedef CHAR *LPSTR;
typedef LPCH LPTCH;
typedef TEXTMETRICA *LPTEXTMETRIC;
typedef struct tagTEXTMETRICA *LPTEXTMETRICA;
typedef struct tagTEXTMETRICW *LPTEXTMETRICW;
typedef struct _TOKEN_GROUPS *LPTOKEN_GROUPS;
typedef struct _TOKEN_PRIVILEGES *LPTOKEN_PRIVILEGES;
typedef struct _TRIVERTEX *LPTRIVERTEX;
typedef LPSTR LPTSTR;
typedef struct tagTTPOLYCURVE *LPTTPOLYCURVE;
typedef struct tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;
typedef unsigned int *LPUINT;
typedef LPSTR LPUTSTR;
typedef WCHAR *LPUWSTR;
typedef struct _VIDEOMEMORYINFO *LPVIDEOMEMORYINFO;
typedef void *LPVOID;
typedef WCHAR *LPWCH;
typedef struct tagWCRANGE *LPWCRANGE;
typedef struct _WGLSWAP *LPWGLSWAP;
typedef WORD *LPWORD;
typedef WCHAR *LPWSTR;
typedef struct _XFORM *LPXFORM;
typedef LONG_PTR LRESULT;
typedef struct _LUID LUID;
typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];
enum MACRO_ABSOLUTE {ABSOLUTE = 1,RELATIVE = 2,};
enum MACRO_AC {AC_SRC_OVER = 0,AC_SRC_ALPHA = 1,};
enum MACRO_ACCESS {ACCESS_ALLOWED_ACE_TYPE = 0x0,ACCESS_DENIED_ACE_TYPE = 0x1,};
enum MACRO_ACCESS_ACE_FLAG {SUCCESSFUL_ACCESS_ACE_FLAG = 0x40,FAILED_ACCESS_ACE_FLAG = 0x80,};
enum MACRO_ACCESS_MAX {ACCESS_MAX_MS_OBJECT_ACE_TYPE = 0x8,ACCESS_MAX_MS_V4_ACE_TYPE = 0x8,ACCESS_MAX_MS_ACE_TYPE = 0x8,ACCESS_ALLOWED_CALLBACK_ACE_TYPE = 0x9,ACCESS_DENIED_CALLBACK_ACE_TYPE = 0xA,ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE = 0xB,ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE = 0xC,};
enum MACRO_ACCESS_MIN {ACCESS_MIN_MS_ACE_TYPE = 0x0,ACCESS_MAX_MS_V2_ACE_TYPE = 0x3,ACCESS_ALLOWED_COMPOUND_ACE_TYPE = 0x4,ACCESS_MAX_MS_V3_ACE_TYPE = 0x4,ACCESS_MIN_MS_OBJECT_ACE_TYPE = 0x5,ACCESS_ALLOWED_OBJECT_ACE_TYPE = 0x5,ACCESS_DENIED_OBJECT_ACE_TYPE = 0x6,};
enum MACRO_ACCESS_OBJECT {ACCESS_OBJECT_GUID = 0,ACCESS_PROPERTY_SET_GUID = 1,ACCESS_PROPERTY_GUID = 2,ACCESS_MAX_LEVEL = 4,};
enum MACRO_ACCESS_REASON {ACCESS_REASON_TYPE_MASK = 0xFFFF0000,ACCESS_REASON_DATA_MASK = 0xFFFF,};
enum MACRO_ACCESS_SYSTEM {ACCESS_SYSTEM_SECURITY = 0x1000000,};
enum MACRO_ACE {ACE_OBJECT_TYPE_PRESENT = 0x1,ACE_INHERITED_OBJECT_TYPE_PRESENT = 0x2,};
enum MACRO_ACE_TYPE {ACCESS_MAX_MS_V5_ACE_TYPE = 0x11,SYSTEM_MANDATORY_LABEL_ACE_TYPE = 0x11,};
enum MACRO_ACL {ACL_REVISION = 2,ACL_REVISION_DS = 4,ACL_REVISION1 = 1,ACL_REVISION2 = 2,ACL_REVISION3 = 3,ACL_REVISION4 = 4,};
enum MACRO_ACTIVATION {ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = 1,ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = 2,ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = 3,ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = 4,ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = 5,ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = 6,ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = 7,ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = 9,};
enum MACRO_ACTIVATION_CONTEXT {ACTIVATION_CONTEXT_PATH_TYPE_NONE = 1,ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = 2,ACTIVATION_CONTEXT_PATH_TYPE_URL = 3,ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = 4,ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = 8,};
enum MACRO_AD {AD_COUNTERCLOCKWISE = 1,AD_CLOCKWISE = 2,};
enum MACRO_ADDRESS {ADDRESS_TAG_BIT = 0x80000000,};
enum MACRO_ALL {ALL_PROCESSOR_GROUPS = 0xFFFF,};
enum MACRO_ALTERNATE {ALTERNATE = 1,WINDING = 2,};
enum MACRO_ANSI {ANSI_NULL = 0,UNICODE_NULL = 0,};
enum MACRO_ANSI_FIXED {ANSI_FIXED_FONT = 11,ANSI_VAR_FONT = 12,};
enum MACRO_ANYSIZE {ANYSIZE_ARRAY = 1,};
enum MACRO_APPLICATION {APPLICATION_ERROR_MASK = 0x20000000,};
enum MACRO_APPMODEL {APPMODEL_ERROR_NO_PACKAGE = 15700,APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT = 15701,APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT = 15702,APPMODEL_ERROR_NO_APPLICATION = 15703,};
enum MACRO_ASPECT {ASPECT_FILTERING = 1,};
enum MACRO_ASPECTXY {ASPECTXY = 44,};
enum MACRO_ASPECTY {ASPECTY = 42,};
enum MACRO_AT {AT_ROUND_TO_PAGE = 0x40000000,};
enum MACRO_AUDIT {AUDIT_ALLOW_NO_PRIVILEGE = 0x1,};
enum MACRO_AVAILABLE {TLS_MINIMUM_AVAILABLE = 64,FLS_MAXIMUM_AVAILABLE = 128,};
enum MACRO_BANDINFO {BANDINFO = 24,};
enum MACRO_BI {BI_RGB = 0,BI_RLE8 = 1,BI_RLE4 = 2,BI_BITFIELDS = 3,BI_JPEG = 4,BI_PNG = 5,};
enum MACRO_BITS {BITS_PER_ENTRY = 4,};
enum MACRO_BITSPIXEL {BITSPIXEL = 12,};
enum MACRO_BKMODE {BKMODE_LAST = 2,};
enum MACRO_BLACKNESS {BLACKNESS = 0x42,};
enum MACRO_BLACKONWHITE {BLACKONWHITE = 1,WHITEONBLACK = 2,};
enum MACRO_BLTALIGNMENT {BLTALIGNMENT = 119,};
enum MACRO_BMF {BMF_1BPP = 1,BMF_4BPP = 2,BMF_8BPP = 3,BMF_16BPP = 4,BMF_24BPP = 5,BMF_32BPP = 6,BMF_4RLE = 7,BMF_8RLE = 8,BMF_JPEG = 9,BMF_PNG = 10,};
enum MACRO_BMF_TOPDOWN {BMF_TOPDOWN = 0x1,BMF_NOZEROINIT = 0x2,BMF_DONTCACHE = 0x4,BMF_USERMEM = 0x8,BMF_KMSECTION = 0x10,BMF_NOTSYSMEM = 0x20,BMF_WINDOW_BLT = 0x40,BMF_UMPDMEM = 0x80,BMF_TEMP_ALPHA = 0x100,BMF_ACC_NOTIFY = 0x8000,BMF_RMT_ENTER = 0x4000,BMF_RESERVED = 0x3E00,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_BR {BR_DEVICE_ICM = 0x1,BR_HOST_ICM = 0x2,BR_CMYKCOLOR = 0x4,BR_ORIGCOLOR = 0x8,};
enum MACRO_BREAKPOINT {BREAKPOINT_BREAK = 0,BREAKPOINT_PRINT = 1,BREAKPOINT_PROMPT = 2,BREAKPOINT_LOAD_SYMBOLS = 3,BREAKPOINT_UNLOAD_SYMBOLS = 4,BREAKPOINT_COMMAND_STRING = 5,};
enum MACRO_BRUSH {BLACK_BRUSH = 4,DKGRAY_BRUSH = 3,GRAY_BRUSH = 2,HOLLOW_BRUSH = 5,LTGRAY_BRUSH = 1,NULL_BRUSH = 5,WHITE_BRUSH = 0,};
enum MACRO_BS {BS_SOLID = 0,BS_NULL = 1,BS_HOLLOW = 1,BS_HATCHED = 2,BS_PATTERN = 3,BS_INDEXED = 4,BS_DIBPATTERN = 5,BS_DIBPATTERNPT = 6,BS_PATTERN8X8 = 7,BS_DIBPATTERN8X8 = 8,BS_MONOPATTERN = 9,};
enum MACRO_BUFSIZ {BUFSIZ = 512,};
enum MACRO_CA {CA_NEGATIVE = 1,CA_LOG_FILTER = 2,};
enum MACRO_CACHE {CACHE_FULLY_ASSOCIATIVE = 0xFF,};
enum MACRO_CALLBACK {CALLBACK_MODIFY_STATE = 0x1,CALLBACK_ALL_ACCESS = 0x1F0001,};
enum MACRO_CAPTUREBLT {CAPTUREBLT = 0x40000000,NOMIRRORBITMAP = 0x80000000,};
enum MACRO_CBM {CBM_INIT = 4,};
enum MACRO_CBSTACK {CBSTACK_STACK = 0x0,CBSTACK_TRAP_FRAME = 0x4,CBSTACK_CALLBACK_STACK = 0x8,CBSTACK_EBP = 0x18,CBSTACK_RESULT = 0x20,CBSTACK_RESULT_LENGTH = 0x24,};
enum MACRO_CC {CC_NONE = 0,CC_CIRCLES = 1,CC_PIE = 2,CC_CHORD = 4,CC_ELLIPSES = 8,CC_WIDE = 16,CC_STYLED = 32,CC_WIDESTYLED = 64,CC_INTERIORS = 128,CC_ROUNDRECT = 256,};
enum MACRO_CCHDEVICENAME {CCHDEVICENAME = 32,};
enum MACRO_CCHFORMNAME {CCHFORMNAME = 32,};
enum MACRO_CD {CD_RIGHTDOWN = 0x0,CD_LEFTDOWN = 0x1,CD_LEFTWARDS = 0x1,CD_RIGHTUP = 0x2,CD_UPWARDS = 0x2,CD_LEFTUP = 0x3,CD_ANY = 0x4,};
enum MACRO_CDBEX {CDBEX_REDIRECTION = 0x1,CDBEX_DXINTEROP = 0x2,};
enum MACRO_CHARSET {ANSI_CHARSET = 0,DEFAULT_CHARSET = 1,SYMBOL_CHARSET = 2,SHIFTJIS_CHARSET = 128,HANGEUL_CHARSET = 129,HANGUL_CHARSET = 129,GB2312_CHARSET = 134,CHINESEBIG5_CHARSET = 136,GREEK_CHARSET = 161,TURKISH_CHARSET = 162,HEBREW_CHARSET = 177,ARABIC_CHARSET = 178,BALTIC_CHARSET = 186,RUSSIAN_CHARSET = 204,THAI_CHARSET = 222,EE_CHARSET = 238,EASTEUROPE_CHARSET = 238,OEM_CHARSET = 255,JOHAB_CHARSET = 130,VIETNAMESE_CHARSET = 163,MAC_CHARSET = 77,VISCII_CHARSET = 240,TCVN_CHARSET = 241,KOI8_CHARSET = 242,ISO3_CHARSET = 243,ISO4_CHARSET = 244,ISO10_CHARSET = 245,CELTIC_CHARSET = 246,};
enum MACRO_CLIP {CLIP_DEFAULT_PRECIS = 0,CLIP_CHARACTER_PRECIS = 1,CLIP_STROKE_PRECIS = 2,CLIP_MASK = 15,CLIP_LH_ANGLES = 16,CLIP_TT_ALWAYS = 32,CLIP_DFA_DISABLE = 64,CLIP_EMBEDDED = 128,};
enum MACRO_CLOSECHANNEL {CLOSECHANNEL = 4112,};
enum MACRO_CLR {CLR_INVALID = 0xFFFFFFFF,};
enum MACRO_CM {CM_PROB_NOT_CONFIGURED = 0x1,CM_PROB_DEVLOADER_FAILED = 0x2,CM_PROB_OUT_OF_MEMORY = 0x3,CM_PROB_ENTRY_IS_WRONG_TYPE = 0x4,CM_PROB_LACKED_ARBITRATOR = 0x5,CM_PROB_BOOT_CONFIG_CONFLICT = 0x6,CM_PROB_FAILED_FILTER = 0x7,CM_PROB_DEVLOADER_NOT_FOUND = 0x8,CM_PROB_INVALID_DATA = 0x9,CM_PROB_FAILED_START = 0xA,CM_PROB_LIAR = 0xB,CM_PROB_NORMAL_CONFLICT = 0xC,CM_PROB_NOT_VERIFIED = 0xD,CM_PROB_NEED_RESTART = 0xE,CM_PROB_REENUMERATION = 0xF,CM_PROB_PARTIAL_LOG_CONF = 0x10,CM_PROB_UNKNOWN_RESOURCE = 0x11,CM_PROB_REINSTALL = 0x12,CM_PROB_REGISTRY = 0x13,CM_PROB_VXDLDR = 0x14,CM_PROB_WILL_BE_REMOVED = 0x15,CM_PROB_DISABLED = 0x16,CM_PROB_DEVLOADER_NOT_READY = 0x17,CM_PROB_DEVICE_NOT_THERE = 0x18,CM_PROB_MOVED = 0x19,CM_PROB_TOO_EARLY = 0x1A,CM_PROB_NO_VALID_LOG_CONF = 0x1B,CM_PROB_FAILED_INSTALL = 0x1C,CM_PROB_HARDWARE_DISABLED = 0x1D,CM_PROB_CANT_SHARE_IRQ = 0x1E,CM_PROB_FAILED_ADD = 0x1F,CM_PROB_DISABLED_SERVICE = 0x20,CM_PROB_TRANSLATION_FAILED = 0x21,CM_PROB_NO_SOFTCONFIG = 0x22,CM_PROB_BIOS_TABLE = 0x23,CM_PROB_IRQ_TRANSLATION_FAILED = 0x24,CM_PROB_FAILED_DRIVER_ENTRY = 0x25,CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD = 0x26,CM_PROB_DRIVER_FAILED_LOAD = 0x27,CM_PROB_DRIVER_SERVICE_KEY_INVALID = 0x28,CM_PROB_LEGACY_SERVICE_NO_DEVICES = 0x29,CM_PROB_DUPLICATE_DEVICE = 0x2A,CM_PROB_FAILED_POST_START = 0x2B,CM_PROB_HALTED = 0x2C,CM_PROB_PHANTOM = 0x2D,CM_PROB_SYSTEM_SHUTDOWN = 0x2E,CM_PROB_HELD_FOR_EJECT = 0x2F,CM_PROB_DRIVER_BLOCKED = 0x30,CM_PROB_REGISTRY_TOO_LARGE = 0x31,CM_PROB_SETPROPERTIES_FAILED = 0x32,CM_PROB_WAITING_ON_DEPENDENCY = 0x33,CM_PROB_UNSIGNED_DRIVER = 0x34,};
enum MACRO_CM_NONE {CM_NONE = 0x0,CM_DEVICE_ICM = 0x1,CM_GAMMA_RAMP = 0x2,CM_CMYK_COLOR = 0x4,};
enum MACRO_CM_OUT {CM_OUT_OF_GAMUT = 255,CM_IN_GAMUT = 0,};
enum MACRO_CM_RESOURCE {CM_RESOURCE_PORT_MEMORY = 0x0,CM_RESOURCE_PORT_IO = 0x1,CM_RESOURCE_PORT_10_BIT_DECODE = 0x4,CM_RESOURCE_PORT_12_BIT_DECODE = 0x8,CM_RESOURCE_PORT_16_BIT_DECODE = 0x10,CM_RESOURCE_PORT_POSITIVE_DECODE = 0x20,CM_RESOURCE_PORT_PASSIVE_DECODE = 0x40,CM_RESOURCE_PORT_WINDOW_DECODE = 0x80,CM_RESOURCE_MEMORY_READ_WRITE = 0x0,CM_RESOURCE_MEMORY_READ_ONLY = 0x1,CM_RESOURCE_MEMORY_WRITE_ONLY = 0x2,CM_RESOURCE_MEMORY_PREFETCHABLE = 0x4,CM_RESOURCE_MEMORY_COMBINEDWRITE = 0x8,CM_RESOURCE_MEMORY_24 = 0x10,CM_RESOURCE_MEMORY_CACHEABLE = 0x20,CM_RESOURCE_DMA_8 = 0x0,CM_RESOURCE_DMA_16 = 0x1,CM_RESOURCE_DMA_32 = 0x2,CM_RESOURCE_DMA_8_AND_16 = 0x4,CM_RESOURCE_DMA_BUS_MASTER = 0x8,CM_RESOURCE_DMA_TYPE_A = 0x10,CM_RESOURCE_DMA_TYPE_B = 0x20,CM_RESOURCE_DMA_TYPE_F = 0x40,CM_RESOURCE_INTERRUPT_LEVEL_SENSITIVE = 0x0,CM_RESOURCE_INTERRUPT_LATCHED = 0x1,CM_RESOURCE_INTERRUPT_MESSAGE = 0x2,CM_RESOURCE_INTERRUPT_POLICY_INCLUDED = 0x4,CM_BOOT_FLAG_SMSS = 0x0,CM_BOOT_FLAG_SETUP = 0x1,CM_BOOT_FLAG_ACCEPTED = 0x2,CM_BOOT_FLAG_MAX = 0x3E9,};
enum MACRO_COLOR {COLOR_ADJ_MIN = -100,COLOR_ADJ_MAX = 100,};
enum MACRO_COLORMGMTCAPS {COLORMGMTCAPS = 121,};
enum MACRO_COLORONCOLOR {COLORONCOLOR = 3,HALFTONE = 4,};
enum MACRO_COLORRES {COLORRES = 108,};
enum MACRO_COMPLEXREGION {COMPLEXREGION = 3,};
enum MACRO_COMPRESSION {COMPRESSION_FORMAT_NONE = 0x0,COMPRESSION_FORMAT_DEFAULT = 0x1,COMPRESSION_FORMAT_LZNT1 = 0x2,COMPRESSION_ENGINE_STANDARD = 0x0,COMPRESSION_ENGINE_MAXIMUM = 0x100,COMPRESSION_ENGINE_HIBER = 0x200,};
enum MACRO_CONTEXT {CONTEXT_i386 = 0x10000,CONTEXT_i486 = 0x10000,CONTEXT_CONTROL = 0x10001,CONTEXT_INTEGER = 0x10002,CONTEXT_SEGMENTS = 0x10004,CONTEXT_FLOATING_POINT = 0x10008,CONTEXT_DEBUG_REGISTERS = 0x10010,CONTEXT_EXTENDED_REGISTERS = 0x10020,CONTEXT_FULL = 0x10007,CONTEXT_ALL = 0x1003F,};
enum MACRO_CONTEXT_DEBUGGER {CONTEXT_DEBUGGER = 65551,};
enum MACRO_CONTEXT_FLAGS {CONTEXT_FLAGS = 0x0,CONTEXT_DR6 = 0x14,CONTEXT_FLOAT_SAVE = 0x1C,CONTEXT_SEGGS = 0x8C,CONTEXT_SEGFS = 0x90,CONTEXT_SEGES = 0x94,CONTEXT_SEGDS = 0x98,CONTEXT_EDI = 0x9C,CONTEXT_ESI = 0xA0,CONTEXT_EBX = 0xA4,CONTEXT_EDX = 0xA8,CONTEXT_ECX = 0xAC,CONTEXT_EAX = 0xB0,CONTEXT_EBP = 0xB4,CONTEXT_EIP = 0xB8,CONTEXT_SEGCS = 0xBC,CONTEXT_EFLAGS = 0xC0,CONTEXT_ESP = 0xC4,CONTEXT_SEGSS = 0xC8,CONTEXT_FLOAT_SAVE_CONTROL_WORD = 0x1C,CONTEXT_FLOAT_SAVE_STATUS_WORD = 0x20,CONTEXT_FLOAT_SAVE_TAG_WORD = 0x24,CONTEXT_ALIGNED_SIZE = 0x2CC,CONTEXT_FRAME_LENGTH = 0x2D0,};
enum MACRO_CP {CP_NONE = 0,CP_RECTANGLE = 1,CP_REGION = 2,};
enum MACRO_CR0 {CR0_PE = 0x1,CR0_MP = 0x2,CR0_EM = 0x4,CR0_TS = 0x8,CR0_ET = 0x10,CR0_NE = 0x20,CR0_WP = 0x10000,CR0_AM = 0x40000,CR0_NW = 0x20000000,CR0_CD = 0x40000000,CR0_PG = 0x80000000,};
enum MACRO_CS {CS_LOCK_BIT = 0x1,CS_LOCK_BIT_V = 0x0,CS_LOCK_WAITER_WOKEN = 0x2,CS_LOCK_WAITER_INC = 0x4,};
enum MACRO_CS_ENABLE {CS_ENABLE = 0x1,CS_DISABLE = 0x2,CS_DELETE_TRANSFORM = 0x3,};
enum MACRO_CT {CT_RECTANGLES = 0,};
enum MACRO_CTM {RESTORE_CTM = 4100,SAVE_CTM = 4101,};
enum MACRO_CURVECAPS {CURVECAPS = 28,};
enum MACRO_CmResourceTypeBusNumber {CmResourceTypeBusNumber = 6,};
enum MACRO_CmResourceTypeConfigData {CmResourceTypeConfigData = 128,};
enum MACRO_CmResourceTypeDevicePrivate {CmResourceTypeDevicePrivate = 129,};
enum MACRO_CmResourceTypeDeviceSpecific {CmResourceTypeDeviceSpecific = 5,};
enum MACRO_CmResourceTypeMemory {CmResourceTypeMemory = 3,CmResourceTypeDma = 4,};
enum MACRO_CmResourceTypeMemoryLarge {CmResourceTypeMemoryLarge = 7,CmResourceTypeNonArbitrated = 128,};
enum MACRO_CmResourceTypeMfCardConfig {CmResourceTypeMfCardConfig = 131,};
enum MACRO_CmResourceTypeNull {CmResourceTypeNull = 0,CmResourceTypePort = 1,CmResourceTypeInterrupt = 2,};
enum MACRO_CmResourceTypePcCardConfig {CmResourceTypePcCardConfig = 130,};
enum MACRO_D3DCLEAR {D3DCLEAR_TARGET = 0x1,D3DCLEAR_ZBUFFER = 0x2,D3DCLEAR_STENCIL = 0x4,};
enum MACRO_D3DCLIP {D3DCLIP_LEFT = 0x1,D3DCLIP_RIGHT = 0x2,D3DCLIP_TOP = 0x4,D3DCLIP_BOTTOM = 0x8,D3DCLIP_FRONT = 0x10,D3DCLIP_BACK = 0x20,D3DCLIP_GEN0 = 0x40,D3DCLIP_GEN1 = 0x80,D3DCLIP_GEN2 = 0x100,D3DCLIP_GEN3 = 0x200,D3DCLIP_GEN4 = 0x400,D3DCLIP_GEN5 = 0x800,};
enum MACRO_D3DCLIPPLANE0 {D3DCLIPPLANE0 = 1,D3DCLIPPLANE1 = 2,D3DCLIPPLANE2 = 4,D3DCLIPPLANE3 = 8,D3DCLIPPLANE4 = 16,D3DCLIPPLANE5 = 32,};
enum MACRO_D3DCLIPSTATUS {D3DCLIPSTATUS_STATUS = 0x1,D3DCLIPSTATUS_EXTENTS2 = 0x2,D3DCLIPSTATUS_EXTENTS3 = 0x4,};
enum MACRO_D3DCOLOR {D3DCOLOR_MONO = 1,D3DCOLOR_RGB = 2,};
enum MACRO_D3DDD {D3DDD_COLORMODEL = 0x1,D3DDD_DEVCAPS = 0x2,D3DDD_TRANSFORMCAPS = 0x4,D3DDD_LIGHTINGCAPS = 0x8,D3DDD_BCLIPPING = 0x10,D3DDD_LINECAPS = 0x20,D3DDD_TRICAPS = 0x40,D3DDD_DEVICERENDERBITDEPTH = 0x80,D3DDD_DEVICEZBUFFERBITDEPTH = 0x100,D3DDD_MAXBUFFERSIZE = 0x200,D3DDD_MAXVERTEXCOUNT = 0x400,};
enum MACRO_D3DDEB {D3DDEB_BUFSIZE = 0x1,D3DDEB_CAPS = 0x2,D3DDEB_LPDATA = 0x4,};
enum MACRO_D3DDEBCAPS {D3DDEBCAPS_SYSTEMMEMORY = 0x1,D3DDEBCAPS_VIDEOMEMORY = 0x2,D3DDEBCAPS_MEM = 0x3,};
enum MACRO_D3DDEVCAPS {D3DDEVCAPS_FLOATTLVERTEX = 0x1,D3DDEVCAPS_SORTINCREASINGZ = 0x2,D3DDEVCAPS_SORTDECREASINGZ = 0x4,D3DDEVCAPS_SORTEXACT = 0x8,D3DDEVCAPS_EXECUTESYSTEMMEMORY = 0x10,D3DDEVCAPS_EXECUTEVIDEOMEMORY = 0x20,D3DDEVCAPS_TLVERTEXSYSTEMMEMORY = 0x40,D3DDEVCAPS_TLVERTEXVIDEOMEMORY = 0x80,D3DDEVCAPS_TEXTURESYSTEMMEMORY = 0x100,D3DDEVCAPS_TEXTUREVIDEOMEMORY = 0x200,};
enum MACRO_D3DDEVCAPS_DRAWPRIMITIVES2 {D3DDEVCAPS_DRAWPRIMITIVES2 = 0x2000,D3DDEVCAPS_SEPARATETEXTUREMEMORIES = 0x4000,D3DDEVCAPS_DRAWPRIMITIVES2EX = 0x8000,};
enum MACRO_D3DDEVCAPS_DRAWPRIMTLVERTEX {D3DDEVCAPS_DRAWPRIMTLVERTEX = 0x400,D3DDEVCAPS_CANRENDERAFTERFLIP = 0x800,D3DDEVCAPS_TEXTURENONLOCALVIDMEM = 0x1000,};
enum MACRO_D3DDEVCAPS_HWTRANSFORMANDLIGHT {D3DDEVCAPS_HWTRANSFORMANDLIGHT = 0x10000,D3DDEVCAPS_CANBLTSYSTONONLOCAL = 0x20000,D3DDEVCAPS_HWRASTERIZATION = 0x80000,};
enum MACRO_D3DDEVINFOID {D3DDEVINFOID_TEXTUREMANAGER = 1,D3DDEVINFOID_D3DTEXTUREMANAGER = 2,D3DDEVINFOID_TEXTURING = 3,};
enum MACRO_D3DDP {D3DDP_MAXTEXCOORD = 8,};
enum MACRO_D3DENUMRET {D3DENUMRET_CANCEL = 0,D3DENUMRET_OK = 1,};
enum MACRO_D3DEXECUTE {D3DEXECUTE_CLIPPED = 0x1,D3DEXECUTE_UNCLIPPED = 0x2,};
enum MACRO_D3DFDS {D3DFDS_COLORMODEL = 0x1,D3DFDS_GUID = 0x2,D3DFDS_HARDWARE = 0x4,D3DFDS_TRIANGLES = 0x8,D3DFDS_LINES = 0x10,D3DFDS_MISCCAPS = 0x20,D3DFDS_RASTERCAPS = 0x40,D3DFDS_ZCMPCAPS = 0x80,D3DFDS_ALPHACMPCAPS = 0x100,D3DFDS_SRCBLENDCAPS = 0x200,D3DFDS_DSTBLENDCAPS = 0x400,D3DFDS_SHADECAPS = 0x800,D3DFDS_TEXTURECAPS = 0x1000,D3DFDS_TEXTUREFILTERCAPS = 0x2000,D3DFDS_TEXTUREBLENDCAPS = 0x4000,D3DFDS_TEXTUREADDRESSCAPS = 0x8000,};
enum MACRO_D3DFORMAT {D3DFORMAT_OP_TEXTURE = 0x1,D3DFORMAT_OP_VOLUMETEXTURE = 0x2,D3DFORMAT_OP_CUBETEXTURE = 0x4,D3DFORMAT_OP_OFFSCREEN_RENDERTARGET = 0x8,D3DFORMAT_OP_SAME_FORMAT_RENDERTARGET = 0x10,D3DFORMAT_OP_ZSTENCIL = 0x40,D3DFORMAT_OP_ZSTENCIL_WITH_ARBITRARY_COLOR_DEPTH = 0x80,D3DFORMAT_OP_SAME_FORMAT_UP_TO_ALPHA_RENDERTARGET = 0x100,D3DFORMAT_OP_DISPLAYMODE = 0x400,D3DFORMAT_OP_3DACCELERATION = 0x800,D3DFORMAT_OP_PIXELSIZE = 0x1000,D3DFORMAT_OP_CONVERT_TO_ARGB = 0x2000,D3DFORMAT_OP_OFFSCREENPLAIN = 0x4000,D3DFORMAT_OP_SRGBREAD = 0x8000,D3DFORMAT_OP_BUMPMAP = 0x10000,D3DFORMAT_OP_DMAP = 0x20000,D3DFORMAT_OP_NOFILTER = 0x40000,D3DFORMAT_MEMBEROFGROUP_ARGB = 0x80000,D3DFORMAT_OP_SRGBWRITE = 0x100000,D3DFORMAT_OP_NOALPHABLEND = 0x200000,D3DFORMAT_OP_AUTOGENMIPMAP = 0x400000,D3DFORMAT_OP_VERTEXTEXTURE = 0x800000,D3DFORMAT_OP_NOTEXCOORDWRAPNORMIP = 0x1000000,};
enum MACRO_D3DFVF {D3DFVF_RESERVED0 = 0x1,D3DFVF_POSITION_MASK = 0xE,D3DFVF_XYZ = 0x2,D3DFVF_XYZRHW = 0x4,D3DFVF_XYZB1 = 0x6,D3DFVF_XYZB2 = 0x8,D3DFVF_XYZB3 = 0xA,D3DFVF_XYZB4 = 0xC,D3DFVF_XYZB5 = 0xE,D3DFVF_NORMAL = 0x10,D3DFVF_RESERVED1 = 0x20,D3DFVF_DIFFUSE = 0x40,D3DFVF_SPECULAR = 0x80,D3DFVF_TEXCOUNT_MASK = 0xF00,D3DFVF_TEXCOUNT_SHIFT = 0x8,D3DFVF_TEX0 = 0x0,D3DFVF_TEX1 = 0x100,D3DFVF_TEX2 = 0x200,D3DFVF_TEX3 = 0x300,D3DFVF_TEX4 = 0x400,D3DFVF_TEX5 = 0x500,D3DFVF_TEX6 = 0x600,D3DFVF_TEX7 = 0x700,D3DFVF_TEX8 = 0x800,D3DFVF_RESERVED2 = 0xF000,D3DFVF_VERTEX = 0x112,D3DFVF_LVERTEX = 0x1E2,D3DFVF_TLVERTEX = 0x1C4,};
enum MACRO_D3DFVFCAPS {D3DFVFCAPS_TEXCOORDCOUNTMASK = 0xFFFF,D3DFVFCAPS_DONOTSTRIPELEMENTS = 0x80000,};
enum MACRO_D3DFVF_TEXTUREFORMAT2 {D3DFVF_TEXTUREFORMAT2 = 0,D3DFVF_TEXTUREFORMAT1 = 3,D3DFVF_TEXTUREFORMAT3 = 1,D3DFVF_TEXTUREFORMAT4 = 2,};
enum MACRO_D3DLIGHT {D3DLIGHT_ACTIVE = 0x1,D3DLIGHT_NO_SPECULAR = 0x2,D3DLIGHT_ALL = 0x3,};
enum MACRO_D3DLIGHTCAPS {D3DLIGHTCAPS_POINT = 0x1,D3DLIGHTCAPS_SPOT = 0x2,D3DLIGHTCAPS_DIRECTIONAL = 0x4,D3DLIGHTCAPS_PARALLELPOINT = 0x8,};
enum MACRO_D3DLIGHTINGMODEL {D3DLIGHTINGMODEL_RGB = 0x1,D3DLIGHTINGMODEL_MONO = 0x2,};
enum MACRO_D3DMAXNUMPRIMITIVES {D3DMAXNUMPRIMITIVES = 65535,};
enum MACRO_D3DMAXNUMVERTICES {D3DMAXNUMVERTICES = 65535,};
enum MACRO_D3DMAXUSERCLIPPLANES {D3DMAXUSERCLIPPLANES = 32,};
enum MACRO_D3DPAL {D3DPAL_FREE = 0x0,D3DPAL_READONLY = 0x40,D3DPAL_RESERVED = 0x80,};
enum MACRO_D3DPBLENDCAPS {D3DPBLENDCAPS_ZERO = 0x1,D3DPBLENDCAPS_ONE = 0x2,D3DPBLENDCAPS_SRCCOLOR = 0x4,D3DPBLENDCAPS_INVSRCCOLOR = 0x8,D3DPBLENDCAPS_SRCALPHA = 0x10,D3DPBLENDCAPS_INVSRCALPHA = 0x20,D3DPBLENDCAPS_DESTALPHA = 0x40,D3DPBLENDCAPS_INVDESTALPHA = 0x80,D3DPBLENDCAPS_DESTCOLOR = 0x100,D3DPBLENDCAPS_INVDESTCOLOR = 0x200,D3DPBLENDCAPS_SRCALPHASAT = 0x400,D3DPBLENDCAPS_BOTHSRCALPHA = 0x800,D3DPBLENDCAPS_BOTHINVSRCALPHA = 0x1000,};
enum MACRO_D3DPCMPCAPS {D3DPCMPCAPS_NEVER = 0x1,D3DPCMPCAPS_LESS = 0x2,D3DPCMPCAPS_EQUAL = 0x4,D3DPCMPCAPS_LESSEQUAL = 0x8,D3DPCMPCAPS_GREATER = 0x10,D3DPCMPCAPS_NOTEQUAL = 0x20,D3DPCMPCAPS_GREATEREQUAL = 0x40,D3DPCMPCAPS_ALWAYS = 0x80,};
enum MACRO_D3DPMISCCAPS {D3DPMISCCAPS_MASKPLANES = 0x1,D3DPMISCCAPS_MASKZ = 0x2,D3DPMISCCAPS_LINEPATTERNREP = 0x4,D3DPMISCCAPS_CONFORMANT = 0x8,D3DPMISCCAPS_CULLNONE = 0x10,D3DPMISCCAPS_CULLCW = 0x20,D3DPMISCCAPS_CULLCCW = 0x40,};
enum MACRO_D3DPRASTERCAPS {D3DPRASTERCAPS_DITHER = 0x1,D3DPRASTERCAPS_ROP2 = 0x2,D3DPRASTERCAPS_XOR = 0x4,D3DPRASTERCAPS_PAT = 0x8,D3DPRASTERCAPS_ZTEST = 0x10,D3DPRASTERCAPS_SUBPIXEL = 0x20,D3DPRASTERCAPS_SUBPIXELX = 0x40,D3DPRASTERCAPS_FOGVERTEX = 0x80,D3DPRASTERCAPS_FOGTABLE = 0x100,D3DPRASTERCAPS_STIPPLE = 0x200,};
enum MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT {D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT = 0x400,D3DPRASTERCAPS_ANTIALIASSORTINDEPENDENT = 0x800,D3DPRASTERCAPS_ANTIALIASEDGES = 0x1000,D3DPRASTERCAPS_MIPMAPLODBIAS = 0x2000,D3DPRASTERCAPS_ZBIAS = 0x4000,D3DPRASTERCAPS_ZBUFFERLESSHSR = 0x8000,D3DPRASTERCAPS_FOGRANGE = 0x10000,D3DPRASTERCAPS_ANISOTROPY = 0x20000,};
enum MACRO_D3DPRASTERCAPS_WBUFFER {D3DPRASTERCAPS_WBUFFER = 0x40000,D3DPRASTERCAPS_TRANSLUCENTSORTINDEPENDENT = 0x80000,D3DPRASTERCAPS_WFOG = 0x100000,D3DPRASTERCAPS_ZFOG = 0x200000,};
enum MACRO_D3DPROCESSVERTICES {D3DPROCESSVERTICES_TRANSFORMLIGHT = 0x0,D3DPROCESSVERTICES_TRANSFORM = 0x1,D3DPROCESSVERTICES_COPY = 0x2,D3DPROCESSVERTICES_OPMASK = 0x7,D3DPROCESSVERTICES_UPDATEEXTENTS = 0x8,D3DPROCESSVERTICES_NOCOLOR = 0x10,};
enum MACRO_D3DPSHADECAPS {D3DPSHADECAPS_COLORFLATMONO = 0x1,D3DPSHADECAPS_COLORFLATRGB = 0x2,D3DPSHADECAPS_COLORGOURAUDMONO = 0x4,D3DPSHADECAPS_COLORGOURAUDRGB = 0x8,D3DPSHADECAPS_COLORPHONGMONO = 0x10,D3DPSHADECAPS_COLORPHONGRGB = 0x20,D3DPSHADECAPS_SPECULARFLATMONO = 0x40,D3DPSHADECAPS_SPECULARFLATRGB = 0x80,D3DPSHADECAPS_SPECULARGOURAUDMONO = 0x100,D3DPSHADECAPS_SPECULARGOURAUDRGB = 0x200,D3DPSHADECAPS_SPECULARPHONGMONO = 0x400,D3DPSHADECAPS_SPECULARPHONGRGB = 0x800,D3DPSHADECAPS_ALPHAFLATBLEND = 0x1000,D3DPSHADECAPS_ALPHAFLATSTIPPLED = 0x2000,D3DPSHADECAPS_ALPHAGOURAUDBLEND = 0x4000,D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED = 0x8000,D3DPSHADECAPS_ALPHAPHONGBLEND = 0x10000,D3DPSHADECAPS_ALPHAPHONGSTIPPLED = 0x20000,D3DPSHADECAPS_FOGFLAT = 0x40000,D3DPSHADECAPS_FOGGOURAUD = 0x80000,D3DPSHADECAPS_FOGPHONG = 0x100000,};
enum MACRO_D3DPTADDRESSCAPS {D3DPTADDRESSCAPS_WRAP = 0x1,D3DPTADDRESSCAPS_MIRROR = 0x2,D3DPTADDRESSCAPS_CLAMP = 0x4,};
enum MACRO_D3DPTADDRESSCAPS_BORDER {D3DPTADDRESSCAPS_BORDER = 0x8,D3DPTADDRESSCAPS_INDEPENDENTUV = 0x10,};
enum MACRO_D3DPTBLENDCAPS {D3DPTBLENDCAPS_DECAL = 0x1,D3DPTBLENDCAPS_MODULATE = 0x2,D3DPTBLENDCAPS_DECALALPHA = 0x4,D3DPTBLENDCAPS_MODULATEALPHA = 0x8,D3DPTBLENDCAPS_DECALMASK = 0x10,D3DPTBLENDCAPS_MODULATEMASK = 0x20,D3DPTBLENDCAPS_COPY = 0x40,};
enum MACRO_D3DPTBLENDCAPS_ADD {D3DPTBLENDCAPS_ADD = 0x80,};
enum MACRO_D3DPTEXTURECAPS {D3DPTEXTURECAPS_PERSPECTIVE = 0x1,D3DPTEXTURECAPS_POW2 = 0x2,D3DPTEXTURECAPS_ALPHA = 0x4,D3DPTEXTURECAPS_TRANSPARENCY = 0x8,D3DPTEXTURECAPS_BORDER = 0x10,D3DPTEXTURECAPS_SQUAREONLY = 0x20,};
enum MACRO_D3DPTEXTURECAPS_PROJECTED {D3DPTEXTURECAPS_PROJECTED = 0x400,D3DPTEXTURECAPS_CUBEMAP = 0x800,D3DPTEXTURECAPS_COLORKEYBLEND = 0x1000,};
enum MACRO_D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE {D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE = 0x40,D3DPTEXTURECAPS_ALPHAPALETTE = 0x80,D3DPTEXTURECAPS_NONPOW2CONDITIONAL = 0x100,};
enum MACRO_D3DPTFILTERCAPS {D3DPTFILTERCAPS_NEAREST = 0x1,D3DPTFILTERCAPS_LINEAR = 0x2,D3DPTFILTERCAPS_MIPNEAREST = 0x4,D3DPTFILTERCAPS_MIPLINEAR = 0x8,D3DPTFILTERCAPS_LINEARMIPNEAREST = 0x10,D3DPTFILTERCAPS_LINEARMIPLINEAR = 0x20,};
enum MACRO_D3DPTFILTERCAPS_MINFPOINT {D3DPTFILTERCAPS_MINFPOINT = 0x100,D3DPTFILTERCAPS_MINFLINEAR = 0x200,D3DPTFILTERCAPS_MINFANISOTROPIC = 0x400,D3DPTFILTERCAPS_MIPFPOINT = 0x10000,D3DPTFILTERCAPS_MIPFLINEAR = 0x20000,D3DPTFILTERCAPS_MAGFPOINT = 0x1000000,D3DPTFILTERCAPS_MAGFLINEAR = 0x2000000,D3DPTFILTERCAPS_MAGFANISOTROPIC = 0x4000000,D3DPTFILTERCAPS_MAGFAFLATCUBIC = 0x8000000,D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC = 0x10000000,};
enum MACRO_D3DPV {D3DPV_DONOTCOPYDATA = 1,};
enum MACRO_D3DRENDERSTATE {D3DRENDERSTATE_WRAPBIAS = 128,};
enum MACRO_D3DSETSTATUS {D3DSETSTATUS_STATUS = 0x1,D3DSETSTATUS_EXTENTS = 0x2,D3DSETSTATUS_ALL = 0x3,};
enum MACRO_D3DSTATE {D3DSTATE_OVERRIDE_BIAS = 256,};
enum MACRO_D3DSTATUS {D3DSTATUS_CLIPUNIONLEFT = 1,D3DSTATUS_CLIPUNIONRIGHT = 2,D3DSTATUS_CLIPUNIONTOP = 4,D3DSTATUS_CLIPUNIONBOTTOM = 8,D3DSTATUS_CLIPUNIONFRONT = 16,D3DSTATUS_CLIPUNIONBACK = 32,D3DSTATUS_CLIPUNIONGEN0 = 64,D3DSTATUS_CLIPUNIONGEN1 = 128,D3DSTATUS_CLIPUNIONGEN2 = 256,D3DSTATUS_CLIPUNIONGEN3 = 512,D3DSTATUS_CLIPUNIONGEN4 = 1024,D3DSTATUS_CLIPUNIONGEN5 = 2048,D3DSTATUS_CLIPINTERSECTIONLEFT = 4096,D3DSTATUS_CLIPINTERSECTIONRIGHT = 8192,D3DSTATUS_CLIPINTERSECTIONTOP = 16384,D3DSTATUS_CLIPINTERSECTIONBOTTOM = 32768,D3DSTATUS_CLIPINTERSECTIONFRONT = 65536,D3DSTATUS_CLIPINTERSECTIONBACK = 131072,D3DSTATUS_CLIPINTERSECTIONGEN0 = 262144,D3DSTATUS_CLIPINTERSECTIONGEN1 = 524288,D3DSTATUS_CLIPINTERSECTIONGEN2 = 1048576,D3DSTATUS_CLIPINTERSECTIONGEN3 = 2097152,D3DSTATUS_CLIPINTERSECTIONGEN4 = 4194304,D3DSTATUS_CLIPINTERSECTIONGEN5 = 8388608,D3DSTATUS_ZNOTVISIBLE = 16777216,D3DSTATUS_CLIPUNIONALL = 4095,D3DSTATUS_CLIPINTERSECTIONALL = 16773120,D3DSTATUS_DEFAULT = 33550336,};
enum MACRO_D3DSTENCILCAPS {D3DSTENCILCAPS_KEEP = 0x1,D3DSTENCILCAPS_ZERO = 0x2,D3DSTENCILCAPS_REPLACE = 0x4,D3DSTENCILCAPS_INCRSAT = 0x8,D3DSTENCILCAPS_DECRSAT = 0x10,D3DSTENCILCAPS_INVERT = 0x20,D3DSTENCILCAPS_INCR = 0x40,D3DSTENCILCAPS_DECR = 0x80,D3DSTENCILCAPS_TWOSIDED = 0x100,};
enum MACRO_D3DTA {D3DTA_SELECTMASK = 0xF,D3DTA_DIFFUSE = 0x0,D3DTA_CURRENT = 0x1,D3DTA_TEXTURE = 0x2,D3DTA_TFACTOR = 0x3,D3DTA_SPECULAR = 0x4,D3DTA_COMPLEMENT = 0x10,D3DTA_ALPHAREPLICATE = 0x20,};
enum MACRO_D3DTEXOPCAPS {D3DTEXOPCAPS_DISABLE = 0x1,D3DTEXOPCAPS_SELECTARG1 = 0x2,D3DTEXOPCAPS_SELECTARG2 = 0x4,D3DTEXOPCAPS_MODULATE = 0x8,D3DTEXOPCAPS_MODULATE2X = 0x10,D3DTEXOPCAPS_MODULATE4X = 0x20,D3DTEXOPCAPS_ADD = 0x40,D3DTEXOPCAPS_ADDSIGNED = 0x80,D3DTEXOPCAPS_ADDSIGNED2X = 0x100,D3DTEXOPCAPS_SUBTRACT = 0x200,D3DTEXOPCAPS_ADDSMOOTH = 0x400,D3DTEXOPCAPS_BLENDDIFFUSEALPHA = 0x800,D3DTEXOPCAPS_BLENDTEXTUREALPHA = 0x1000,D3DTEXOPCAPS_BLENDFACTORALPHA = 0x2000,D3DTEXOPCAPS_BLENDTEXTUREALPHAPM = 0x4000,D3DTEXOPCAPS_BLENDCURRENTALPHA = 0x8000,D3DTEXOPCAPS_PREMODULATE = 0x10000,D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR = 0x20000,D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA = 0x40000,D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR = 0x80000,D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA = 0x100000,D3DTEXOPCAPS_BUMPENVMAP = 0x200000,D3DTEXOPCAPS_BUMPENVMAPLUMINANCE = 0x400000,D3DTEXOPCAPS_DOTPRODUCT3 = 0x800000,};
enum MACRO_D3DTRANSFORM {D3DTRANSFORM_CLIPPED = 0x1,D3DTRANSFORM_UNCLIPPED = 0x2,};
enum MACRO_D3DTRANSFORMCAPS {D3DTRANSFORMCAPS_CLIP = 0x1,};
enum MACRO_D3DTRIFLAG {D3DTRIFLAG_START = 0x0,D3DTRIFLAG_ODD = 0x1E,D3DTRIFLAG_EVEN = 0x1F,D3DTRIFLAG_EDGEENABLE1 = 0x100,D3DTRIFLAG_EDGEENABLE2 = 0x200,D3DTRIFLAG_EDGEENABLE3 = 0x400,D3DTRIFLAG_EDGEENABLETRIANGLE = 0x700,};
enum MACRO_D3DTSS {D3DTSS_TCI_PASSTHRU = 0x0,D3DTSS_TCI_CAMERASPACENORMAL = 0x10000,D3DTSS_TCI_CAMERASPACEPOSITION = 0x20000,D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR = 0x30000,};
enum MACRO_D3DVBCAPS {D3DVBCAPS_SYSTEMMEMORY = 0x800,D3DVBCAPS_WRITEONLY = 0x10000,D3DVBCAPS_OPTIMIZED = 0x80000000,D3DVBCAPS_DONOTCLIP = 0x1,};
enum MACRO_D3DVIS {D3DVIS_INSIDE_FRUSTUM = 0,D3DVIS_INTERSECT_FRUSTUM = 1,D3DVIS_OUTSIDE_FRUSTUM = 2,D3DVIS_INSIDE_LEFT = 0,D3DVIS_INTERSECT_LEFT = 4,D3DVIS_OUTSIDE_LEFT = 8,D3DVIS_INSIDE_RIGHT = 0,D3DVIS_INTERSECT_RIGHT = 16,D3DVIS_OUTSIDE_RIGHT = 32,D3DVIS_INSIDE_TOP = 0,D3DVIS_INTERSECT_TOP = 64,D3DVIS_OUTSIDE_TOP = 128,D3DVIS_INSIDE_BOTTOM = 0,D3DVIS_INTERSECT_BOTTOM = 256,D3DVIS_OUTSIDE_BOTTOM = 512,D3DVIS_INSIDE_NEAR = 0,D3DVIS_INTERSECT_NEAR = 1024,D3DVIS_OUTSIDE_NEAR = 2048,D3DVIS_INSIDE_FAR = 0,D3DVIS_INTERSECT_FAR = 4096,D3DVIS_OUTSIDE_FAR = 8192,D3DVIS_MASK_FRUSTUM = 3,D3DVIS_MASK_LEFT = 12,D3DVIS_MASK_RIGHT = 48,D3DVIS_MASK_TOP = 192,D3DVIS_MASK_BOTTOM = 768,D3DVIS_MASK_NEAR = 3072,D3DVIS_MASK_FAR = 12288,};
enum MACRO_D3DVOP {D3DVOP_LIGHT = 1024,D3DVOP_TRANSFORM = 1,D3DVOP_CLIP = 4,D3DVOP_EXTENTS = 8,};
enum MACRO_D3DVTXPCAPS {D3DVTXPCAPS_TEXGEN = 0x1,D3DVTXPCAPS_MATERIALSOURCE7 = 0x2,D3DVTXPCAPS_VERTEXFOG = 0x4,D3DVTXPCAPS_DIRECTIONALLIGHTS = 0x8,D3DVTXPCAPS_POSITIONALLIGHTS = 0x10,D3DVTXPCAPS_LOCALVIEWER = 0x20,};
enum MACRO_D3DWRAP {D3DWRAP_U = 0x1,D3DWRAP_V = 0x2,};
enum MACRO_D3DWRAPCOORD {D3DWRAPCOORD_0 = 0x1,D3DWRAPCOORD_1 = 0x2,D3DWRAPCOORD_2 = 0x4,D3DWRAPCOORD_3 = 0x8,};
enum MACRO_DBG {DBG_STATUS_CONTROL_C = 1,DBG_STATUS_SYSRQ = 2,DBG_STATUS_BUGCHECK_FIRST = 3,DBG_STATUS_BUGCHECK_SECOND = 4,DBG_STATUS_FATAL = 5,DBG_STATUS_DEBUG_CONTROL = 6,DBG_STATUS_WORKER = 7,};
enum MACRO_DBGK {DBGK_KILL_PROCESS_ON_EXIT = 0x1,DBGK_ALL_FLAGS = 0x1,};
enum MACRO_DC {DC_FIELDS = 1,DC_PAPERS = 2,DC_PAPERSIZE = 3,DC_MINEXTENT = 4,DC_MAXEXTENT = 5,DC_BINS = 6,DC_DUPLEX = 7,DC_SIZE = 8,DC_EXTRA = 9,DC_VERSION = 10,DC_DRIVER = 11,DC_BINNAMES = 12,DC_ENUMRESOLUTIONS = 13,DC_FILEDEPENDENCIES = 14,DC_TRUETYPE = 15,DC_PAPERNAMES = 16,DC_ORIENTATION = 17,DC_COPIES = 18,};
enum MACRO_DCB {DCB_DISABLE = 8,DCB_ENABLE = 4,DCB_RESET = 1,DCB_SET = 3,DCB_ACCUMULATE = 2,DCB_DIRTY = 2,};
enum MACRO_DCBA {DCBA_FACEUPNONE = 0,DCBA_FACEUPCENTER = 1,DCBA_FACEUPLEFT = 2,DCBA_FACEUPRIGHT = 3,DCBA_FACEDOWNNONE = 256,DCBA_FACEDOWNCENTER = 257,DCBA_FACEDOWNLEFT = 258,DCBA_FACEDOWNRIGHT = 259,};
enum MACRO_DCR {DCR_SOLID = 0,DCR_DRIVER = 1,DCR_HALFTONE = 2,};
enum MACRO_DCTT {DCTT_BITMAP = 1,DCTT_DOWNLOAD = 2,DCTT_SUBDEV = 4,DCTT_DOWNLOAD_OUTLINE = 8,};
enum MACRO_DC_BINADJUST {DC_BINADJUST = 19,DC_MANUFACTURER = 23,DC_MODEL = 24,};
enum MACRO_DC_BRUSH {DC_BRUSH = 18,DC_PEN = 19,};
enum MACRO_DC_DATATYPE {DC_DATATYPE_PRODUCED = 21,DC_EMF_COMPLIANT = 20,};
enum MACRO_DC_TRIVIAL {DC_TRIVIAL = 0,DC_RECT = 1,DC_COMPLEX = 3,};
enum MACRO_DD {DD_OK = 0,DD_FALSE = 1,};
enum MACRO_DDABLT {DDABLT_SRCOVERDEST = 0x1,};
enum MACRO_DDBD {DDBD_1 = 0x4000,DDBD_2 = 0x2000,DDBD_4 = 0x1000,DDBD_8 = 0x800,DDBD_16 = 0x400,DDBD_24 = 0x200,DDBD_32 = 0x100,};
enum MACRO_DDBLT {DDBLT_ALPHADEST = 0x1,DDBLT_ALPHADESTCONSTOVERRIDE = 0x2,DDBLT_ALPHADESTNEG = 0x4,DDBLT_ALPHADESTSURFACEOVERRIDE = 0x8,DDBLT_ALPHAEDGEBLEND = 0x10,DDBLT_ALPHASRC = 0x20,DDBLT_ALPHASRCCONSTOVERRIDE = 0x40,DDBLT_ALPHASRCNEG = 0x80,DDBLT_ALPHASRCSURFACEOVERRIDE = 0x100,DDBLT_ASYNC = 0x200,DDBLT_COLORFILL = 0x400,DDBLT_DDFX = 0x800,DDBLT_DDROPS = 0x1000,DDBLT_KEYDEST = 0x2000,DDBLT_KEYDESTOVERRIDE = 0x4000,DDBLT_KEYSRC = 0x8000,DDBLT_KEYSRCOVERRIDE = 0x10000,DDBLT_ROP = 0x20000,DDBLT_ROTATIONANGLE = 0x40000,DDBLT_ZBUFFER = 0x80000,DDBLT_ZBUFFERDESTCONSTOVERRIDE = 0x100000,DDBLT_ZBUFFERDESTOVERRIDE = 0x200000,DDBLT_ZBUFFERSRCCONSTOVERRIDE = 0x400000,DDBLT_ZBUFFERSRCOVERRIDE = 0x800000,DDBLT_WAIT = 0x1000000,DDBLT_DEPTHFILL = 0x2000000,DDBLT_DONOTWAIT = 0x8000000,DDBLT_PRESENTATION = 0x10000000,DDBLT_LAST_PRESENTATION = 0x20000000,DDBLT_EXTENDED_FLAGS = 0x40000000,DDBLT_EXTENDED_LINEAR_CONTENT = 0x4,};
enum MACRO_DDBLTFAST {DDBLTFAST_NOCOLORKEY = 0x0,DDBLTFAST_SRCCOLORKEY = 0x1,DDBLTFAST_DESTCOLORKEY = 0x2,DDBLTFAST_WAIT = 0x10,DDBLTFAST_DONOTWAIT = 0x20,};
enum MACRO_DDBLTFX {DDBLTFX_ARITHSTRETCHY = 0x1,DDBLTFX_MIRRORLEFTRIGHT = 0x2,DDBLTFX_MIRRORUPDOWN = 0x4,DDBLTFX_NOTEARING = 0x8,DDBLTFX_ROTATE180 = 0x10,DDBLTFX_ROTATE270 = 0x20,DDBLTFX_ROTATE90 = 0x40,DDBLTFX_ZBUFFERRANGE = 0x80,DDBLTFX_ZBUFFERBASEDEST = 0x100,};
enum MACRO_DDBLT_AFLAGS {DDBLT_AFLAGS = 0x80000000,};
enum MACRO_DDCAPS {DDCAPS_STEREOVIEW = 0x40000,};
enum MACRO_DDCAPS2 {DDCAPS2_CERTIFIED = 0x1,DDCAPS2_NO2DDURING3DSCENE = 0x2,DDCAPS2_VIDEOPORT = 0x4,DDCAPS2_AUTOFLIPOVERLAY = 0x8,DDCAPS2_CANBOBINTERLEAVED = 0x10,DDCAPS2_CANBOBNONINTERLEAVED = 0x20,DDCAPS2_COLORCONTROLOVERLAY = 0x40,DDCAPS2_COLORCONTROLPRIMARY = 0x80,DDCAPS2_CANDROPZ16BIT = 0x100,DDCAPS2_NONLOCALVIDMEM = 0x200,DDCAPS2_NONLOCALVIDMEMCAPS = 0x400,DDCAPS2_NOPAGELOCKREQUIRED = 0x800,DDCAPS2_WIDESURFACES = 0x1000,DDCAPS2_CANFLIPODDEVEN = 0x2000,DDCAPS2_CANBOBHARDWARE = 0x4000,DDCAPS2_COPYFOURCC = 0x8000,DDCAPS2_PRIMARYGAMMA = 0x20000,DDCAPS2_CANRENDERWINDOWED = 0x80000,DDCAPS2_CANCALIBRATEGAMMA = 0x100000,DDCAPS2_FLIPINTERVAL = 0x200000,DDCAPS2_FLIPNOVSYNC = 0x400000,DDCAPS2_CANMANAGETEXTURE = 0x800000,DDCAPS2_TEXMANINNONLOCALVIDMEM = 0x1000000,DDCAPS2_STEREO = 0x2000000,DDCAPS2_SYSTONONLOCAL_AS_SYSTOLOCAL = 0x4000000,DDCAPS2_RESERVED1 = 0x8000000,DDCAPS2_CANMANAGERESOURCE = 0x10000000,DDCAPS2_DYNAMICTEXTURES = 0x20000000,DDCAPS2_CANAUTOGENMIPMAP = 0x40000000,};
enum MACRO_DDCAPS_3D {DDCAPS_3D = 0x1,DDCAPS_ALIGNBOUNDARYDEST = 0x2,DDCAPS_ALIGNSIZEDEST = 0x4,DDCAPS_ALIGNBOUNDARYSRC = 0x8,DDCAPS_ALIGNSIZESRC = 0x10,DDCAPS_ALIGNSTRIDE = 0x20,DDCAPS_BLT = 0x40,DDCAPS_BLTQUEUE = 0x80,DDCAPS_BLTFOURCC = 0x100,DDCAPS_BLTSTRETCH = 0x200,DDCAPS_GDI = 0x400,DDCAPS_OVERLAY = 0x800,DDCAPS_OVERLAYCANTCLIP = 0x1000,DDCAPS_OVERLAYFOURCC = 0x2000,DDCAPS_OVERLAYSTRETCH = 0x4000,DDCAPS_PALETTE = 0x8000,DDCAPS_PALETTEVSYNC = 0x10000,DDCAPS_READSCANLINE = 0x20000,DDCAPS_RESERVED1 = 0x40000,DDCAPS_VBI = 0x80000,DDCAPS_ZBLTS = 0x100000,DDCAPS_ZOVERLAYS = 0x200000,DDCAPS_COLORKEY = 0x400000,DDCAPS_ALPHA = 0x800000,DDCAPS_COLORKEYHWASSIST = 0x1000000,DDCAPS_NOHARDWARE = 0x2000000,DDCAPS_BLTCOLORFILL = 0x4000000,DDCAPS_BANKSWITCHED = 0x8000000,DDCAPS_BLTDEPTHFILL = 0x10000000,DDCAPS_CANCLIP = 0x20000000,DDCAPS_CANCLIPSTRETCHED = 0x40000000,DDCAPS_CANBLTSYSMEM = 0x80000000,};
enum MACRO_DDCKEY {DDCKEY_COLORSPACE = 0x1,DDCKEY_DESTBLT = 0x2,DDCKEY_DESTOVERLAY = 0x4,DDCKEY_SRCBLT = 0x8,DDCKEY_SRCOVERLAY = 0x10,};
enum MACRO_DDCKEYCAPS {DDCKEYCAPS_DESTBLT = 0x1,DDCKEYCAPS_DESTBLTCLRSPACE = 0x2,DDCKEYCAPS_DESTBLTCLRSPACEYUV = 0x4,DDCKEYCAPS_DESTBLTYUV = 0x8,DDCKEYCAPS_DESTOVERLAY = 0x10,DDCKEYCAPS_DESTOVERLAYCLRSPACE = 0x20,DDCKEYCAPS_DESTOVERLAYCLRSPACEYUV = 0x40,DDCKEYCAPS_DESTOVERLAYONEACTIVE = 0x80,DDCKEYCAPS_DESTOVERLAYYUV = 0x100,DDCKEYCAPS_SRCBLT = 0x200,DDCKEYCAPS_SRCBLTCLRSPACE = 0x400,DDCKEYCAPS_SRCBLTCLRSPACEYUV = 0x800,DDCKEYCAPS_SRCBLTYUV = 0x1000,DDCKEYCAPS_SRCOVERLAY = 0x2000,DDCKEYCAPS_SRCOVERLAYCLRSPACE = 0x4000,DDCKEYCAPS_SRCOVERLAYCLRSPACEYUV = 0x8000,DDCKEYCAPS_SRCOVERLAYONEACTIVE = 0x10000,DDCKEYCAPS_SRCOVERLAYYUV = 0x20000,DDCKEYCAPS_NOCOSTOVERLAY = 0x40000,};
enum MACRO_DDCOLOR {DDCOLOR_BRIGHTNESS = 0x1,DDCOLOR_CONTRAST = 0x2,DDCOLOR_HUE = 0x4,DDCOLOR_SATURATION = 0x8,DDCOLOR_SHARPNESS = 0x10,DDCOLOR_GAMMA = 0x20,DDCOLOR_COLORENABLE = 0x40,};
enum MACRO_DDCREATE {DDCREATE_HARDWAREONLY = 0x1,DDCREATE_EMULATIONONLY = 0x2,};
enum MACRO_DDEDM {DDEDM_REFRESHRATES = 0x1,DDEDM_STANDARDVGAMODES = 0x2,};
enum MACRO_DDEM {DDEM_MODEPASSED = 0x1,DDEM_MODEFAILED = 0x2,};
enum MACRO_DDENUM {DDENUM_ATTACHEDSECONDARYDEVICES = 0x1,DDENUM_DETACHEDSECONDARYDEVICES = 0x2,DDENUM_NONDISPLAYDEVICES = 0x4,};
enum MACRO_DDENUMOVERLAYZ {DDENUMOVERLAYZ_BACKTOFRONT = 0x0,DDENUMOVERLAYZ_FRONTTOBACK = 0x1,};
enum MACRO_DDENUMRET {DDENUMRET_CANCEL = 0,DDENUMRET_OK = 1,};
enum MACRO_DDENUMSURFACES {DDENUMSURFACES_ALL = 0x1,DDENUMSURFACES_MATCH = 0x2,DDENUMSURFACES_NOMATCH = 0x4,DDENUMSURFACES_CANBECREATED = 0x8,DDENUMSURFACES_DOESEXIST = 0x10,};
enum MACRO_DDERR {DDERR_ALREADYINITIALIZED = -2005532667,DDERR_CANNOTATTACHSURFACE = -2005532662,DDERR_CANNOTDETACHSURFACE = -2005532652,DDERR_CURRENTLYNOTAVAIL = -2005532632,DDERR_EXCEPTION = -2005532617,DDERR_GENERIC = -2147467259,DDERR_HEIGHTALIGN = -2005532582,DDERR_INCOMPATIBLEPRIMARY = -2005532577,DDERR_INVALIDCAPS = -2005532572,DDERR_INVALIDCLIPLIST = -2005532562,DDERR_INVALIDMODE = -2005532552,DDERR_INVALIDOBJECT = -2005532542,DDERR_INVALIDPARAMS = -2147024809,DDERR_INVALIDPIXELFORMAT = -2005532527,DDERR_INVALIDRECT = -2005532522,DDERR_LOCKEDSURFACES = -2005532512,DDERR_NO3D = -2005532502,DDERR_NOALPHAHW = -2005532492,DDERR_NOSTEREOHARDWARE = -2005532491,DDERR_NOSURFACELEFT = -2005532490,DDERR_NOCLIPLIST = -2005532467,DDERR_NOCOLORCONVHW = -2005532462,DDERR_NOCOOPERATIVELEVELSET = -2005532460,DDERR_NOCOLORKEY = -2005532457,DDERR_NOCOLORKEYHW = -2005532452,DDERR_NODIRECTDRAWSUPPORT = -2005532450,DDERR_NOEXCLUSIVEMODE = -2005532447,DDERR_NOFLIPHW = -2005532442,DDERR_NOGDI = -2005532432,DDERR_NOMIRRORHW = -2005532422,DDERR_NOTFOUND = -2005532417,DDERR_NOOVERLAYHW = -2005532412,DDERR_OVERLAPPINGRECTS = -2005532402,DDERR_NORASTEROPHW = -2005532392,DDERR_NOROTATIONHW = -2005532382,DDERR_NOSTRETCHHW = -2005532362,DDERR_NOT4BITCOLOR = -2005532356,DDERR_NOT4BITCOLORINDEX = -2005532355,DDERR_NOT8BITCOLOR = -2005532352,DDERR_NOTEXTUREHW = -2005532342,DDERR_NOVSYNCHW = -2005532337,DDERR_NOZBUFFERHW = -2005532332,DDERR_NOZOVERLAYHW = -2005532322,DDERR_OUTOFCAPS = -2005532312,DDERR_OUTOFMEMORY = -2147024882,DDERR_OUTOFVIDEOMEMORY = -2005532292,DDERR_OVERLAYCANTCLIP = -2005532290,DDERR_OVERLAYCOLORKEYONLYONEACTIVE = -2005532288,DDERR_PALETTEBUSY = -2005532285,DDERR_COLORKEYNOTSET = -2005532272,DDERR_SURFACEALREADYATTACHED = -2005532262,DDERR_SURFACEALREADYDEPENDENT = -2005532252,DDERR_SURFACEBUSY = -2005532242,DDERR_CANTLOCKSURFACE = -2005532237,DDERR_SURFACEISOBSCURED = -2005532232,DDERR_SURFACELOST = -2005532222,DDERR_SURFACENOTATTACHED = -2005532212,DDERR_TOOBIGHEIGHT = -2005532202,DDERR_TOOBIGSIZE = -2005532192,DDERR_TOOBIGWIDTH = -2005532182,DDERR_UNSUPPORTED = -2147467263,DDERR_UNSUPPORTEDFORMAT = -2005532162,DDERR_UNSUPPORTEDMASK = -2005532152,DDERR_INVALIDSTREAM = -2005532151,DDERR_VERTICALBLANKINPROGRESS = -2005532135,DDERR_WASSTILLDRAWING = -2005532132,DDERR_DDSCAPSCOMPLEXREQUIRED = -2005532130,DDERR_XALIGN = -2005532112,DDERR_INVALIDDIRECTDRAWGUID = -2005532111,DDERR_DIRECTDRAWALREADYCREATED = -2005532110,DDERR_NODIRECTDRAWHW = -2005532109,DDERR_PRIMARYSURFACEALREADYEXISTS = -2005532108,DDERR_NOEMULATION = -2005532107,DDERR_REGIONTOOSMALL = -2005532106,DDERR_CLIPPERISUSINGHWND = -2005532105,DDERR_NOCLIPPERATTACHED = -2005532104,DDERR_NOHWND = -2005532103,DDERR_HWNDSUBCLASSED = -2005532102,DDERR_HWNDALREADYSET = -2005532101,DDERR_NOPALETTEATTACHED = -2005532100,DDERR_NOPALETTEHW = -2005532099,DDERR_BLTFASTCANTCLIP = -2005532098,DDERR_NOBLTHW = -2005532097,DDERR_NODDROPSHW = -2005532096,DDERR_OVERLAYNOTVISIBLE = -2005532095,DDERR_NOOVERLAYDEST = -2005532094,DDERR_INVALIDPOSITION = -2005532093,DDERR_NOTAOVERLAYSURFACE = -2005532092,DDERR_EXCLUSIVEMODEALREADYSET = -2005532091,DDERR_NOTFLIPPABLE = -2005532090,DDERR_CANTDUPLICATE = -2005532089,DDERR_NOTLOCKED = -2005532088,DDERR_CANTCREATEDC = -2005532087,DDERR_NODC = -2005532086,DDERR_WRONGMODE = -2005532085,DDERR_IMPLICITLYCREATED = -2005532084,DDERR_NOTPALETTIZED = -2005532083,DDERR_UNSUPPORTEDMODE = -2005532082,DDERR_NOMIPMAPHW = -2005532081,DDERR_INVALIDSURFACETYPE = -2005532080,DDERR_NOOPTIMIZEHW = -2005532072,DDERR_NOTLOADED = -2005532071,DDERR_NOFOCUSWINDOW = -2005532070,DDERR_NOTONMIPMAPSUBLEVEL = -2005532069,DDERR_DCALREADYCREATED = -2005532052,DDERR_NONONLOCALVIDMEM = -2005532042,DDERR_CANTPAGELOCK = -2005532032,DDERR_CANTPAGEUNLOCK = -2005532012,DDERR_NOTPAGELOCKED = -2005531992,DDERR_MOREDATA = -2005531982,DDERR_EXPIRED = -2005531981,DDERR_TESTFINISHED = -2005531980,DDERR_NEWMODE = -2005531979,DDERR_D3DNOTINITIALIZED = -2005531978,DDERR_VIDEONOTACTIVE = -2005531977,DDERR_NOMONITORINFORMATION = -2005531976,DDERR_NODRIVERSUPPORT = -2005531975,DDERR_DEVICEDOESNTOWNSURFACE = -2005531973,DDERR_NOTINITIALIZED = -2147221008,};
enum MACRO_DDFLIP {DDFLIP_WAIT = 0x1,DDFLIP_EVEN = 0x2,DDFLIP_ODD = 0x4,DDFLIP_NOVSYNC = 0x8,DDFLIP_STEREO = 0x10,DDFLIP_DONOTWAIT = 0x20,DDFLIP_INTERVAL2 = 0x2000000,DDFLIP_INTERVAL3 = 0x3000000,DDFLIP_INTERVAL4 = 0x4000000,};
enum MACRO_DDFXALPHACAPS {DDFXALPHACAPS_BLTALPHAEDGEBLEND = 0x1,DDFXALPHACAPS_BLTALPHAPIXELS = 0x2,DDFXALPHACAPS_BLTALPHAPIXELSNEG = 0x4,DDFXALPHACAPS_BLTALPHASURFACES = 0x8,DDFXALPHACAPS_BLTALPHASURFACESNEG = 0x10,DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND = 0x20,DDFXALPHACAPS_OVERLAYALPHAPIXELS = 0x40,DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG = 0x80,DDFXALPHACAPS_OVERLAYALPHASURFACES = 0x100,DDFXALPHACAPS_OVERLAYALPHASURFACESNEG = 0x200,};
enum MACRO_DDFXCAPS {DDFXCAPS_BLTALPHA = 0x1,DDFXCAPS_OVERLAYALPHA = 0x4,DDFXCAPS_OVERLAYARITHSTRETCHYN = 0x8,DDFXCAPS_BLTARITHSTRETCHY = 0x20,DDFXCAPS_BLTARITHSTRETCHYN = 0x10,DDFXCAPS_BLTMIRRORLEFTRIGHT = 0x40,DDFXCAPS_BLTMIRRORUPDOWN = 0x80,DDFXCAPS_BLTROTATION = 0x100,DDFXCAPS_BLTROTATION90 = 0x200,DDFXCAPS_BLTSHRINKX = 0x400,DDFXCAPS_BLTSHRINKXN = 0x800,DDFXCAPS_BLTSHRINKY = 0x1000,DDFXCAPS_BLTSHRINKYN = 0x2000,DDFXCAPS_BLTSTRETCHX = 0x4000,DDFXCAPS_BLTSTRETCHXN = 0x8000,DDFXCAPS_BLTSTRETCHY = 0x10000,DDFXCAPS_BLTSTRETCHYN = 0x20000,DDFXCAPS_OVERLAYARITHSTRETCHY = 0x40000,DDFXCAPS_OVERLAYSHRINKX = 0x80000,DDFXCAPS_OVERLAYSHRINKXN = 0x100000,DDFXCAPS_OVERLAYSHRINKY = 0x200000,DDFXCAPS_OVERLAYSHRINKYN = 0x400000,DDFXCAPS_OVERLAYSTRETCHX = 0x800000,DDFXCAPS_OVERLAYSTRETCHXN = 0x1000000,DDFXCAPS_OVERLAYSTRETCHY = 0x2000000,DDFXCAPS_OVERLAYSTRETCHYN = 0x4000000,DDFXCAPS_OVERLAYMIRRORLEFTRIGHT = 0x8000000,DDFXCAPS_OVERLAYMIRRORUPDOWN = 0x10000000,DDFXCAPS_OVERLAYDEINTERLACE = 0x20000000,DDFXCAPS_BLTFILTER = 0x20,DDFXCAPS_OVERLAYFILTER = 0x40000,};
enum MACRO_DDGBS {DDGBS_CANBLT = 0x1,DDGBS_ISBLTDONE = 0x2,};
enum MACRO_DDGDI {DDGDI_GETHOSTIDENTIFIER = 0x1,};
enum MACRO_DDGFS {DDGFS_CANFLIP = 0x1,DDGFS_ISFLIPDONE = 0x2,};
enum MACRO_DDHAL {DDHAL_SURFCB32_DESTROYSURFACE = 0x1,DDHAL_SURFCB32_FLIP = 0x2,DDHAL_SURFCB32_SETCLIPLIST = 0x4,DDHAL_SURFCB32_LOCK = 0x8,DDHAL_SURFCB32_UNLOCK = 0x10,DDHAL_SURFCB32_BLT = 0x20,DDHAL_SURFCB32_SETCOLORKEY = 0x40,DDHAL_SURFCB32_ADDATTACHEDSURFACE = 0x80,DDHAL_SURFCB32_GETBLTSTATUS = 0x100,DDHAL_SURFCB32_GETFLIPSTATUS = 0x200,DDHAL_SURFCB32_UPDATEOVERLAY = 0x400,DDHAL_SURFCB32_SETOVERLAYPOSITION = 0x800,DDHAL_SURFCB32_RESERVED4 = 0x1000,DDHAL_SURFCB32_SETPALETTE = 0x2000,};
enum MACRO_DDHALINFO {DDHALINFO_ISPRIMARYDISPLAY = 0x1,DDHALINFO_MODEXILLEGAL = 0x2,DDHALINFO_GETDRIVERINFOSET = 0x4,DDHALINFO_GETDRIVERINFO2 = 0x8,};
enum MACRO_DDHAL_CB32 {DDHAL_CB32_DESTROYDRIVER = 0x1,DDHAL_CB32_CREATESURFACE = 0x2,DDHAL_CB32_SETCOLORKEY = 0x4,DDHAL_CB32_SETMODE = 0x8,DDHAL_CB32_WAITFORVERTICALBLANK = 0x10,DDHAL_CB32_CANCREATESURFACE = 0x20,DDHAL_CB32_CREATEPALETTE = 0x40,DDHAL_CB32_GETSCANLINE = 0x80,DDHAL_CB32_MAPMEMORY = 0x80000000,DDHAL_MISCCB32_GETAVAILDRIVERMEMORY = 0x1,DDHAL_MISC2CB32_ALPHABLT = 0x1,DDHAL_MISC2CB32_CREATESURFACEEX = 0x2,DDHAL_MISC2CB32_GETDRIVERSTATE = 0x4,DDHAL_MISC2CB32_DESTROYDDLOCAL = 0x8,DDHAL_NTCB32_FREEDRIVERMEMORY = 0x1,DDHAL_NTCB32_SETEXCLUSIVEMODE = 0x2,DDHAL_NTCB32_FLIPTOGDISURFACE = 0x4,DDHAL_PALCB32_DESTROYPALETTE = 0x1,DDHAL_PALCB32_SETENTRIES = 0x2,DDHAL_VPORT32_CANCREATEVIDEOPORT = 0x1,DDHAL_VPORT32_CREATEVIDEOPORT = 0x2,DDHAL_VPORT32_FLIP = 0x4,DDHAL_VPORT32_GETBANDWIDTH = 0x8,DDHAL_VPORT32_GETINPUTFORMATS = 0x10,DDHAL_VPORT32_GETOUTPUTFORMATS = 0x20,DDHAL_VPORT32_GETFIELD = 0x80,DDHAL_VPORT32_GETLINE = 0x100,DDHAL_VPORT32_GETCONNECT = 0x200,DDHAL_VPORT32_DESTROY = 0x400,DDHAL_VPORT32_GETFLIPSTATUS = 0x800,DDHAL_VPORT32_UPDATE = 0x1000,DDHAL_VPORT32_WAITFORSYNC = 0x2000,DDHAL_VPORT32_GETSIGNALSTATUS = 0x4000,DDHAL_VPORT32_COLORCONTROL = 0x8000,};
enum MACRO_DDHAL_COLOR {DDHAL_COLOR_COLORCONTROL = 0x1,};
enum MACRO_DDHAL_CREATESURFACEEX {DDHAL_CREATESURFACEEX_SWAPHANDLES = 0x1,DDHAL_KERNEL_SYNCSURFACEDATA = 0x1,DDHAL_KERNEL_SYNCVIDEOPORTDATA = 0x2,DDHAL_DRIVER_NOTHANDLED = 0x0,DDHAL_DRIVER_HANDLED = 0x1,DDHAL_DRIVER_NOCKEYHW = 0x2,};
enum MACRO_DDHAL_EXEBUFCB32 {DDHAL_EXEBUFCB32_CANCREATEEXEBUF = 0x1,DDHAL_EXEBUFCB32_CREATEEXEBUF = 0x2,DDHAL_EXEBUFCB32_DESTROYEXEBUF = 0x4,DDHAL_EXEBUFCB32_LOCKEXEBUF = 0x8,DDHAL_EXEBUFCB32_UNLOCKEXEBUF = 0x10,DDHAL_D3DBUFCB32_CANCREATED3DBUF = 0x1,DDHAL_D3DBUFCB32_CREATED3DBUF = 0x2,DDHAL_D3DBUFCB32_DESTROYD3DBUF = 0x4,DDHAL_D3DBUFCB32_LOCKD3DBUF = 0x8,DDHAL_D3DBUFCB32_UNLOCKD3DBUF = 0x10,};
enum MACRO_DDHAL_MOCOMP32 {DDHAL_MOCOMP32_GETGUIDS = 0x1,DDHAL_MOCOMP32_GETFORMATS = 0x2,DDHAL_MOCOMP32_CREATE = 0x4,DDHAL_MOCOMP32_GETCOMPBUFFINFO = 0x8,DDHAL_MOCOMP32_GETINTERNALINFO = 0x10,DDHAL_MOCOMP32_BEGINFRAME = 0x20,DDHAL_MOCOMP32_ENDFRAME = 0x40,DDHAL_MOCOMP32_RENDER = 0x80,DDHAL_MOCOMP32_QUERYSTATUS = 0x100,DDHAL_MOCOMP32_DESTROY = 0x200,};
enum MACRO_DDHAL_PLEASEALLOC {DDHAL_PLEASEALLOC_BLOCKSIZE = 0x2,DDHAL_PLEASEALLOC_USERMEM = 0x4,};
enum MACRO_DDHAL_PRIVATECAP {DDHAL_PRIVATECAP_ATOMICSURFACECREATION = 0x1,DDHAL_PRIVATECAP_NOTIFYPRIMARYCREATION = 0x2,DDHAL_PRIVATECAP_RESERVED1 = 0x4,};
enum MACRO_DDI {DDI_DRIVER_VERSION_NT4 = 0x20000,DDI_DRIVER_VERSION_SP3 = 0x20003,DDI_DRIVER_VERSION_NT5 = 0x30000,DDI_DRIVER_VERSION_NT5_01 = 0x30100,DDI_DRIVER_VERSION_NT5_01_SP1 = 0x30101,};
enum MACRO_DDLOCK {DDLOCK_SURFACEMEMORYPTR = 0x0,DDLOCK_WAIT = 0x1,DDLOCK_EVENT = 0x2,DDLOCK_READONLY = 0x10,DDLOCK_WRITEONLY = 0x20,DDLOCK_NOSYSLOCK = 0x800,DDLOCK_NOOVERWRITE = 0x1000,DDLOCK_DISCARDCONTENTS = 0x2000,DDLOCK_OKTOSWAP = 0x2000,DDLOCK_DONOTWAIT = 0x4000,DDLOCK_HASVOLUMETEXTUREBOXRECT = 0x8000,DDLOCK_NODIRTYUPDATE = 0x10000,};
enum MACRO_DDMCQUERY {DDMCQUERY_READ = 0x1,};
enum MACRO_DDOSD {DDOSD_GUID = 0x1,DDOSD_COMPRESSION_RATIO = 0x2,DDOSD_SCAPS = 0x4,DDOSD_OSCAPS = 0x8,DDOSD_ALL = 0xF,};
enum MACRO_DDOSDCAPS {DDOSDCAPS_OPTCOMPRESSED = 0x1,DDOSDCAPS_OPTREORDERED = 0x2,DDOSDCAPS_MONOLITHICMIPMAP = 0x4,DDOSDCAPS_VALIDSCAPS = 0x30004800,DDOSDCAPS_VALIDOSCAPS = 0x7,};
enum MACRO_DDOVER {DDOVER_ALPHADEST = 0x1,DDOVER_ALPHADESTCONSTOVERRIDE = 0x2,DDOVER_ALPHADESTNEG = 0x4,DDOVER_ALPHADESTSURFACEOVERRIDE = 0x8,DDOVER_ALPHAEDGEBLEND = 0x10,DDOVER_ALPHASRC = 0x20,DDOVER_ALPHASRCCONSTOVERRIDE = 0x40,DDOVER_ALPHASRCNEG = 0x80,DDOVER_ALPHASRCSURFACEOVERRIDE = 0x100,DDOVER_HIDE = 0x200,DDOVER_KEYDEST = 0x400,DDOVER_KEYDESTOVERRIDE = 0x800,DDOVER_KEYSRC = 0x1000,DDOVER_KEYSRCOVERRIDE = 0x2000,DDOVER_SHOW = 0x4000,DDOVER_ADDDIRTYRECT = 0x8000,DDOVER_REFRESHDIRTYRECTS = 0x10000,DDOVER_REFRESHALL = 0x20000,DDOVER_DDFX = 0x80000,DDOVER_AUTOFLIP = 0x100000,DDOVER_BOB = 0x200000,DDOVER_OVERRIDEBOBWEAVE = 0x400000,DDOVER_INTERLEAVED = 0x800000,DDOVER_BOBHARDWARE = 0x1000000,DDOVER_ARGBSCALEFACTORS = 0x2000000,DDOVER_DEGRADEARGBSCALING = 0x4000000,};
enum MACRO_DDOVERFX {DDOVERFX_ARITHSTRETCHY = 0x1,DDOVERFX_MIRRORLEFTRIGHT = 0x2,DDOVERFX_MIRRORUPDOWN = 0x4,DDOVERFX_DEINTERLACE = 0x8,};
enum MACRO_DDOVERZ {DDOVERZ_SENDTOFRONT = 0x0,DDOVERZ_SENDTOBACK = 0x1,DDOVERZ_MOVEFORWARD = 0x2,DDOVERZ_MOVEBACKWARD = 0x3,DDOVERZ_INSERTINFRONTOF = 0x4,DDOVERZ_INSERTINBACKOF = 0x5,};
enum MACRO_DDPCAPS {DDPCAPS_INITIALIZE = 0x0,DDPCAPS_4BIT = 0x1,DDPCAPS_8BITENTRIES = 0x2,DDPCAPS_8BIT = 0x4,DDPCAPS_PRIMARYSURFACE = 0x10,DDPCAPS_PRIMARYSURFACELEFT = 0x20,DDPCAPS_ALLOW256 = 0x40,DDPCAPS_VSYNC = 0x80,DDPCAPS_1BIT = 0x100,DDPCAPS_2BIT = 0x200,DDPCAPS_ALPHA = 0x400,};
enum MACRO_DDPF {DDPF_ALPHAPIXELS = 0x1,DDPF_ALPHA = 0x2,DDPF_FOURCC = 0x4,DDPF_PALETTEINDEXED4 = 0x8,DDPF_PALETTEINDEXEDTO8 = 0x10,DDPF_PALETTEINDEXED8 = 0x20,DDPF_RGB = 0x40,DDPF_COMPRESSED = 0x80,DDPF_RGBTOYUV = 0x100,DDPF_YUV = 0x200,DDPF_ZBUFFER = 0x400,DDPF_PALETTEINDEXED1 = 0x800,DDPF_PALETTEINDEXED2 = 0x1000,DDPF_ZPIXELS = 0x2000,DDPF_STENCILBUFFER = 0x4000,DDPF_ALPHAPREMULT = 0x8000,DDPF_LUMINANCE = 0x20000,DDPF_BUMPLUMINANCE = 0x40000,DDPF_BUMPDUDV = 0x80000,};
enum MACRO_DDPF_D3DFORMAT {DDPF_D3DFORMAT = 0x200000,};
enum MACRO_DDRAWI {DDRAWI_GETCOLOR = 0x1,DDRAWI_SETCOLOR = 0x2,};
enum MACRO_DDRAWISURF {DDRAWISURF_HASCKEYSRCBLT = 0x800,DDRAWISURF_HASPIXELFORMAT = 0x2000,DDRAWISURF_HASOVERLAYDATA = 0x4000,DDRAWISURF_FRONTBUFFER = 0x4000000,DDRAWISURF_BACKBUFFER = 0x8000000,DDRAWISURF_INVALID = 0x10000000,DDRAWISURF_DRIVERMANAGED = 0x40000000,};
enum MACRO_DDRAWIVPORT {DDRAWIVPORT_ON = 0x1,DDRAWIVPORT_SOFTWARE_AUTOFLIP = 0x2,DDRAWIVPORT_COLORKEYANDINTERP = 0x4,};
enum MACRO_DDRAWI_VPORTSTART {DDRAWI_VPORTSTART = 0x1,DDRAWI_VPORTSTOP = 0x2,DDRAWI_VPORTUPDATE = 0x3,DDRAWI_VPORTGETCOLOR = 0x1,DDRAWI_VPORTSETCOLOR = 0x2,};
enum MACRO_DDSCAPS {DDSCAPS_RESERVED1 = 0x1,DDSCAPS_ALPHA = 0x2,DDSCAPS_BACKBUFFER = 0x4,DDSCAPS_COMPLEX = 0x8,DDSCAPS_FLIP = 0x10,DDSCAPS_FRONTBUFFER = 0x20,DDSCAPS_OFFSCREENPLAIN = 0x40,DDSCAPS_OVERLAY = 0x80,DDSCAPS_PALETTE = 0x100,DDSCAPS_PRIMARYSURFACE = 0x200,DDSCAPS_RESERVED3 = 0x400,DDSCAPS_PRIMARYSURFACELEFT = 0x0,DDSCAPS_SYSTEMMEMORY = 0x800,DDSCAPS_TEXTURE = 0x1000,DDSCAPS_3DDEVICE = 0x2000,DDSCAPS_VIDEOMEMORY = 0x4000,DDSCAPS_VISIBLE = 0x8000,DDSCAPS_WRITEONLY = 0x10000,DDSCAPS_ZBUFFER = 0x20000,DDSCAPS_OWNDC = 0x40000,DDSCAPS_LIVEVIDEO = 0x80000,DDSCAPS_HWCODEC = 0x100000,DDSCAPS_MODEX = 0x200000,DDSCAPS_MIPMAP = 0x400000,DDSCAPS_RESERVED2 = 0x800000,DDSCAPS_ALLOCONLOAD = 0x4000000,DDSCAPS_VIDEOPORT = 0x8000000,DDSCAPS_LOCALVIDMEM = 0x10000000,DDSCAPS_NONLOCALVIDMEM = 0x20000000,DDSCAPS_STANDARDVGAMODE = 0x40000000,DDSCAPS_OPTIMIZED = 0x80000000,};
enum MACRO_DDSCAPS2 {DDSCAPS2_HARDWAREDEINTERLACE = 0x0,DDSCAPS2_RESERVED4 = 0x2,DDSCAPS2_HINTDYNAMIC = 0x4,DDSCAPS2_HINTSTATIC = 0x8,DDSCAPS2_TEXTUREMANAGE = 0x10,DDSCAPS2_RESERVED1 = 0x20,DDSCAPS2_RESERVED2 = 0x40,DDSCAPS2_OPAQUE = 0x80,DDSCAPS2_HINTANTIALIASING = 0x100,DDSCAPS2_CUBEMAP = 0x200,DDSCAPS2_CUBEMAP_POSITIVEX = 0x400,DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,DDSCAPS2_CUBEMAP_ALLFACES = 0xFC00,DDSCAPS2_MIPMAPSUBLEVEL = 0x10000,DDSCAPS2_D3DTEXTUREMANAGE = 0x20000,DDSCAPS2_DONOTPERSIST = 0x40000,DDSCAPS2_STEREOSURFACELEFT = 0x80000,DDSCAPS2_VOLUME = 0x200000,DDSCAPS2_NOTUSERLOCKABLE = 0x400000,DDSCAPS2_POINTS = 0x800000,DDSCAPS2_RTPATCHES = 0x1000000,DDSCAPS2_NPATCHES = 0x2000000,DDSCAPS2_RESERVED3 = 0x4000000,DDSCAPS2_DISCARDBACKBUFFER = 0x10000000,DDSCAPS2_ENABLEALPHACHANNEL = 0x20000000,DDSCAPS2_EXTENDEDFORMATPRIMARY = 0x40000000,DDSCAPS2_ADDITIONALPRIMARY = 0x80000000,};
enum MACRO_DDSCAPS3 {DDSCAPS3_MULTISAMPLE_MASK = 0x1F,DDSCAPS3_MULTISAMPLE_QUALITY_MASK = 0xE0,DDSCAPS3_MULTISAMPLE_QUALITY_SHIFT = 0x5,DDSCAPS3_RESERVED1 = 0x100,DDSCAPS3_RESERVED2 = 0x200,DDSCAPS3_LIGHTWEIGHTMIPMAP = 0x400,DDSCAPS3_AUTOGENMIPMAP = 0x800,DDSCAPS3_DMAP = 0x1000,};
enum MACRO_DDSCAPS_EXECUTEBUFFER {DDSCAPS_EXECUTEBUFFER = 8388608,DDSCAPS_COMMANDBUFFER = 1024,};
enum MACRO_DDSCL {DDSCL_FULLSCREEN = 0x1,DDSCL_ALLOWREBOOT = 0x2,DDSCL_NOWINDOWCHANGES = 0x4,DDSCL_NORMAL = 0x8,DDSCL_EXCLUSIVE = 0x10,DDSCL_ALLOWMODEX = 0x40,DDSCL_SETFOCUSWINDOW = 0x80,DDSCL_SETDEVICEWINDOW = 0x100,DDSCL_CREATEDEVICEWINDOW = 0x200,DDSCL_MULTITHREADED = 0x400,DDSCL_FPUSETUP = 0x800,DDSCL_FPUPRESERVE = 0x1000,};
enum MACRO_DDSD {DDSD_CAPS = 0x1,DDSD_HEIGHT = 0x2,DDSD_WIDTH = 0x4,DDSD_PITCH = 0x8,DDSD_BACKBUFFERCOUNT = 0x20,DDSD_ZBUFFERBITDEPTH = 0x40,DDSD_ALPHABITDEPTH = 0x80,DDSD_LPSURFACE = 0x800,DDSD_PIXELFORMAT = 0x1000,DDSD_CKDESTOVERLAY = 0x2000,DDSD_CKDESTBLT = 0x4000,DDSD_CKSRCOVERLAY = 0x8000,DDSD_CKSRCBLT = 0x10000,DDSD_MIPMAPCOUNT = 0x20000,DDSD_REFRESHRATE = 0x40000,DDSD_LINEARSIZE = 0x80000,DDSD_TEXTURESTAGE = 0x100000,DDSD_FVF = 0x200000,DDSD_SRCVBHANDLE = 0x400000,DDSD_DEPTH = 0x800000,DDSD_ALL = 0xFFF9EE,};
enum MACRO_DDSDM {DDSDM_STANDARDVGAMODE = 0x1,};
enum MACRO_DDSGR {DDSGR_CALIBRATE = 0x1,};
enum MACRO_DDSMT {DDSMT_ISTESTREQUIRED = 0x1,};
enum MACRO_DDSPD {DDSPD_IUNKNOWNPOINTER = 0x1,DDSPD_VOLATILE = 0x2,};
enum MACRO_DDSVCAPS {DDSVCAPS_RESERVED1 = 0x1,DDSVCAPS_RESERVED2 = 0x2,DDSVCAPS_RESERVED3 = 0x4,DDSVCAPS_RESERVED4 = 0x8,DDSVCAPS_ENIGMA = 0x1,DDSVCAPS_FLICKER = 0x2,DDSVCAPS_REDBLUE = 0x4,DDSVCAPS_SPLIT = 0x8,DDSVCAPS_STEREOSEQUENTIAL = 0x10,};
enum MACRO_DDVP {DDVP_AUTOFLIP = 0x1,DDVP_CONVERT = 0x2,DDVP_CROP = 0x4,DDVP_INTERLEAVE = 0x8,DDVP_MIRRORLEFTRIGHT = 0x10,DDVP_MIRRORUPDOWN = 0x20,DDVP_PRESCALE = 0x40,DDVP_SKIPEVENFIELDS = 0x80,DDVP_SKIPODDFIELDS = 0x100,DDVP_SYNCMASTER = 0x200,DDVP_VBICONVERT = 0x400,DDVP_VBINOSCALE = 0x800,DDVP_OVERRIDEBOBWEAVE = 0x1000,DDVP_IGNOREVBIXCROP = 0x2000,DDVP_VBINOINTERLEAVE = 0x4000,DDVP_HARDWAREDEINTERLACE = 0x8000,};
enum MACRO_DDVPB {DDVPB_VIDEOPORT = 0x1,DDVPB_OVERLAY = 0x2,DDVPB_TYPE = 0x4,};
enum MACRO_DDVPBCAPS {DDVPBCAPS_SOURCE = 0x1,DDVPBCAPS_DESTINATION = 0x2,};
enum MACRO_DDVPCAPS {DDVPCAPS_AUTOFLIP = 0x1,DDVPCAPS_INTERLACED = 0x2,DDVPCAPS_NONINTERLACED = 0x4,DDVPCAPS_READBACKFIELD = 0x8,DDVPCAPS_READBACKLINE = 0x10,DDVPCAPS_SHAREABLE = 0x20,DDVPCAPS_SKIPEVENFIELDS = 0x40,DDVPCAPS_SKIPODDFIELDS = 0x80,DDVPCAPS_SYNCMASTER = 0x100,DDVPCAPS_VBISURFACE = 0x200,DDVPCAPS_COLORCONTROL = 0x400,DDVPCAPS_OVERSAMPLEDVBI = 0x800,DDVPCAPS_SYSTEMMEMORY = 0x1000,DDVPCAPS_VBIANDVIDEOINDEPENDENT = 0x2000,DDVPCAPS_HARDWAREDEINTERLACE = 0x4000,};
enum MACRO_DDVPCONNECT {DDVPCONNECT_DOUBLECLOCK = 0x1,DDVPCONNECT_VACT = 0x2,DDVPCONNECT_INVERTPOLARITY = 0x4,DDVPCONNECT_DISCARDSVREFDATA = 0x8,DDVPCONNECT_HALFLINE = 0x10,DDVPCONNECT_INTERLACED = 0x20,DDVPCONNECT_SHAREEVEN = 0x40,DDVPCONNECT_SHAREODD = 0x80,};
enum MACRO_DDVPCREATE {DDVPCREATE_VBIONLY = 0x1,DDVPCREATE_VIDEOONLY = 0x2,};
enum MACRO_DDVPD {DDVPD_WIDTH = 0x1,DDVPD_HEIGHT = 0x2,DDVPD_ID = 0x4,DDVPD_CAPS = 0x8,DDVPD_FX = 0x10,DDVPD_AUTOFLIP = 0x20,DDVPD_ALIGN = 0x40,DDVPD_PREFERREDAUTOFLIP = 0x80,DDVPD_FILTERQUALITY = 0x100,};
enum MACRO_DDVPFLIP {DDVPFLIP_VIDEO = 0x1,DDVPFLIP_VBI = 0x2,};
enum MACRO_DDVPFORMAT {DDVPFORMAT_VIDEO = 0x1,DDVPFORMAT_VBI = 0x2,};
enum MACRO_DDVPFX {DDVPFX_CROPTOPDATA = 0x1,DDVPFX_CROPX = 0x2,DDVPFX_CROPY = 0x4,DDVPFX_INTERLEAVE = 0x8,DDVPFX_MIRRORLEFTRIGHT = 0x10,DDVPFX_MIRRORUPDOWN = 0x20,DDVPFX_PRESHRINKX = 0x40,DDVPFX_PRESHRINKY = 0x80,DDVPFX_PRESHRINKXB = 0x100,DDVPFX_PRESHRINKYB = 0x200,DDVPFX_PRESHRINKXS = 0x400,DDVPFX_PRESHRINKYS = 0x800,DDVPFX_PRESTRETCHX = 0x1000,DDVPFX_PRESTRETCHY = 0x2000,DDVPFX_PRESTRETCHXN = 0x4000,DDVPFX_PRESTRETCHYN = 0x8000,DDVPFX_VBICONVERT = 0x10000,DDVPFX_VBINOSCALE = 0x20000,DDVPFX_IGNOREVBIXCROP = 0x40000,DDVPFX_VBINOINTERLEAVE = 0x80000,};
enum MACRO_DDVPSQ {DDVPSQ_NOSIGNAL = 0x1,DDVPSQ_SIGNALOK = 0x2,};
enum MACRO_DDVPSTATUS {DDVPSTATUS_VBIONLY = 0x1,DDVPSTATUS_VIDEOONLY = 0x2,};
enum MACRO_DDVPTARGET {DDVPTARGET_VIDEO = 0x1,DDVPTARGET_VBI = 0x2,};
enum MACRO_DDVPWAIT {DDVPWAIT_BEGIN = 0x1,DDVPWAIT_END = 0x2,DDVPWAIT_LINE = 0x3,};
enum MACRO_DDWAITVB {DDWAITVB_BLOCKBEGIN = 0x1,DDWAITVB_BLOCKBEGINEVENT = 0x2,DDWAITVB_BLOCKEND = 0x4,};
enum MACRO_DDWAITVB_I {DDWAITVB_I_TESTVB = 0x80000006,};
enum MACRO_DD_ROP {DD_ROP_SPACE = 8,};
enum MACRO_DEBUG {DEBUG_OBJECT_WAIT_STATE_CHANGE = 0x1,DEBUG_OBJECT_ADD_REMOVE_PROCESS = 0x2,DEBUG_OBJECT_SET_INFORMATION = 0x4,DEBUG_OBJECT_ALL_ACCESS = 0x1F000F,DEBUG_EVENT_READ = 0x1,DEBUG_EVENT_NOWAIT = 0x2,DEBUG_EVENT_INACTIVE = 0x4,DEBUG_EVENT_RELEASE = 0x8,DEBUG_EVENT_PROTECT_FAILED = 0x10,DEBUG_EVENT_SUSPEND = 0x20,};
enum MACRO_DEFAULT {DEFAULT_PALETTE = 15,};
enum MACRO_DELETE {DELETE = 0x10000,};
enum MACRO_DESKTOPHORZRES {DESKTOPHORZRES = 118,};
enum MACRO_DESKTOPVERTRES {DESKTOPVERTRES = 117,};
enum MACRO_DEVHTADJF {DEVHTADJF_COLOR_DEVICE = 0x1,DEVHTADJF_ADDITIVE_DEVICE = 0x2,};
enum MACRO_DEVICEDATA {DEVICEDATA = 19,};
enum MACRO_DI {DI_COMPAT = 4,DI_DEFAULTSIZE = 8,DI_IMAGE = 2,DI_MASK = 1,DI_NORMAL = 3,DI_APPBANDING = 1,DI_NOMIRROR = 16,};
enum MACRO_DIB {DIB_PAL_COLORS = 1,DIB_RGB_COLORS = 0,};
enum MACRO_DIG {DBL_MANT_DIG = 53,LDBL_MANT_DIG = 53,FLT_DIG = 6,DBL_DIG = 15,LDBL_DIG = 15,};
enum MACRO_DIRECT3D {DIRECT3D_VERSION = 0x700,};
enum MACRO_DIRECTDRAW {DIRECTDRAW_VERSION = 0x700,};
enum MACRO_DIRECTORY {DIRECTORY_QUERY = 0x1,DIRECTORY_TRAVERSE = 0x2,DIRECTORY_CREATE_OBJECT = 0x4,DIRECTORY_CREATE_SUBDIRECTORY = 0x8,DIRECTORY_ALL_ACCESS = 0xF000F,};
enum MACRO_DISCHARGE {DISCHARGE_POLICY_CRITICAL = 0,DISCHARGE_POLICY_LOW = 1,};
enum MACRO_DISK {DISK_LOGGING_START = 0,DISK_LOGGING_STOP = 1,DISK_LOGGING_DUMP = 2,DISK_BINNING = 3,};
enum MACRO_DISPLAY {DISPLAY_DEVICE_ATTACHED_TO_DESKTOP = 0x1,DISPLAY_DEVICE_MULTI_DRIVER = 0x2,DISPLAY_DEVICE_PRIMARY_DEVICE = 0x4,DISPLAY_DEVICE_MIRRORING_DRIVER = 0x8,DISPLAY_DEVICE_VGA_COMPATIBLE = 0x10,DISPLAY_DEVICE_REMOVABLE = 0x20,DISPLAY_DEVICE_DISCONNECT = 0x2000000,DISPLAY_DEVICE_REMOTE = 0x4000000,DISPLAY_DEVICE_MODESPRUNED = 0x8000000,};
enum MACRO_DLL {DLL_PROCESS_DETACH = 0,DLL_PROCESS_ATTACH = 1,DLL_THREAD_ATTACH = 2,DLL_THREAD_DETACH = 3,};
enum MACRO_DM {DM_UPDATE = 1,DM_COPY = 2,DM_PROMPT = 4,DM_MODIFY = 8,DM_IN_BUFFER = 8,DM_IN_PROMPT = 4,DM_OUT_BUFFER = 2,DM_OUT_DEFAULT = 1,};
enum MACRO_DMBIN {DMBIN_FIRST = 1,DMBIN_UPPER = 1,DMBIN_ONLYONE = 1,DMBIN_LOWER = 2,DMBIN_MIDDLE = 3,DMBIN_MANUAL = 4,DMBIN_ENVELOPE = 5,DMBIN_ENVMANUAL = 6,DMBIN_AUTO = 7,DMBIN_TRACTOR = 8,DMBIN_SMALLFMT = 9,DMBIN_LARGEFMT = 10,DMBIN_LARGECAPACITY = 11,DMBIN_CASSETTE = 14,DMBIN_FORMSOURCE = 15,DMBIN_LAST = 15,DMBIN_USER = 256,};
enum MACRO_DMCOLLATE {DMCOLLATE_FALSE = 0,DMCOLLATE_TRUE = 1,};
enum MACRO_DMCOLOR {DMCOLOR_MONOCHROME = 1,DMCOLOR_COLOR = 2,};
enum MACRO_DMDFO {DMDFO_DEFAULT = 0,DMDFO_STRETCH = 1,DMDFO_CENTER = 2,};
enum MACRO_DMDISPLAYFLAGS {DMDISPLAYFLAGS_TEXTMODE = 0x4,};
enum MACRO_DMDITHER {DMDITHER_NONE = 1,DMDITHER_COARSE = 2,DMDITHER_FINE = 3,DMDITHER_LINEART = 4,DMDITHER_ERRORDIFFUSION = 5,DMDITHER_RESERVED6 = 6,DMDITHER_RESERVED7 = 7,DMDITHER_RESERVED8 = 8,DMDITHER_RESERVED9 = 9,DMDITHER_GRAYSCALE = 10,DMDITHER_USER = 256,};
enum MACRO_DMDO {DMDO_DEFAULT = 0,DMDO_90 = 1,DMDO_180 = 2,DMDO_270 = 3,};
enum MACRO_DMDUP {DMDUP_SIMPLEX = 1,DMDUP_VERTICAL = 2,DMDUP_HORIZONTAL = 3,};
enum MACRO_DMICM {DMICM_SATURATE = 1,DMICM_CONTRAST = 2,DMICM_COLORMETRIC = 3,DMICM_USER = 256,};
enum MACRO_DMICMMETHOD {DMICMMETHOD_NONE = 1,DMICMMETHOD_SYSTEM = 2,DMICMMETHOD_DRIVER = 3,DMICMMETHOD_DEVICE = 4,DMICMMETHOD_USER = 256,};
enum MACRO_DMMEDIA {DMMEDIA_STANDARD = 1,DMMEDIA_TRANSPARENCY = 2,DMMEDIA_GLOSSY = 3,DMMEDIA_USER = 256,};
enum MACRO_DMORIENT {DMORIENT_PORTRAIT = 1,DMORIENT_LANDSCAPE = 2,};
enum MACRO_DMPAPER {DMPAPER_FIRST = 1,DMPAPER_LETTER = 1,DMPAPER_LETTERSMALL = 2,DMPAPER_TABLOID = 3,DMPAPER_LEDGER = 4,DMPAPER_LEGAL = 5,DMPAPER_STATEMENT = 6,DMPAPER_EXECUTIVE = 7,DMPAPER_A3 = 8,DMPAPER_A4 = 9,DMPAPER_A4SMALL = 10,DMPAPER_A5 = 11,DMPAPER_B4 = 12,DMPAPER_B5 = 13,DMPAPER_FOLIO = 14,DMPAPER_QUARTO = 15,DMPAPER_10X14 = 16,DMPAPER_11X17 = 17,DMPAPER_NOTE = 18,DMPAPER_ENV_9 = 19,DMPAPER_ENV_10 = 20,DMPAPER_ENV_11 = 21,DMPAPER_ENV_12 = 22,DMPAPER_ENV_14 = 23,DMPAPER_CSHEET = 24,DMPAPER_DSHEET = 25,DMPAPER_ESHEET = 26,DMPAPER_ENV_DL = 27,DMPAPER_ENV_C5 = 28,DMPAPER_ENV_C3 = 29,DMPAPER_ENV_C4 = 30,DMPAPER_ENV_C6 = 31,DMPAPER_ENV_C65 = 32,DMPAPER_ENV_B4 = 33,DMPAPER_ENV_B5 = 34,DMPAPER_ENV_B6 = 35,DMPAPER_ENV_ITALY = 36,DMPAPER_ENV_MONARCH = 37,DMPAPER_ENV_PERSONAL = 38,DMPAPER_FANFOLD_US = 39,DMPAPER_FANFOLD_STD_GERMAN = 40,DMPAPER_FANFOLD_LGL_GERMAN = 41,DMPAPER_ISO_B4 = 42,DMPAPER_JAPANESE_POSTCARD = 43,DMPAPER_9X11 = 44,DMPAPER_10X11 = 45,DMPAPER_15X11 = 46,DMPAPER_ENV_INVITE = 47,DMPAPER_RESERVED_48 = 48,DMPAPER_RESERVED_49 = 49,DMPAPER_LETTER_EXTRA = 50,DMPAPER_LEGAL_EXTRA = 51,DMPAPER_TABLOID_EXTRA = 52,DMPAPER_A4_EXTRA = 53,DMPAPER_LETTER_TRANSVERSE = 54,DMPAPER_A4_TRANSVERSE = 55,DMPAPER_LETTER_EXTRA_TRANSVERSE = 56,DMPAPER_A_PLUS = 57,DMPAPER_B_PLUS = 58,DMPAPER_LETTER_PLUS = 59,DMPAPER_A4_PLUS = 60,DMPAPER_A5_TRANSVERSE = 61,DMPAPER_B5_TRANSVERSE = 62,DMPAPER_A3_EXTRA = 63,DMPAPER_A5_EXTRA = 64,DMPAPER_B5_EXTRA = 65,DMPAPER_A2 = 66,DMPAPER_A3_TRANSVERSE = 67,DMPAPER_A3_EXTRA_TRANSVERSE = 68,DMPAPER_LAST = 68,DMPAPER_USER = 256,};
enum MACRO_DMRES {DMRES_DRAFT = -1,DMRES_LOW = -2,DMRES_MEDIUM = -3,DMRES_HIGH = -4,};
enum MACRO_DMTT {DMTT_BITMAP = 1,DMTT_DOWNLOAD = 2,DMTT_SUBDEV = 3,DMTT_DOWNLOAD_OUTLINE = 4,};
enum MACRO_DM_DEFAULT {DM_DEFAULT = 0x1,DM_MONOCHROME = 0x2,};
enum MACRO_DM_GRAYSCALE {DM_GRAYSCALE = 0x1,DM_INTERLACED = 0x2,};
enum MACRO_DM_SPECVERSION {DM_SPECVERSION = 0x401,DM_ORIENTATION = 0x1,DM_PAPERSIZE = 0x2,DM_PAPERLENGTH = 0x4,DM_PAPERWIDTH = 0x8,DM_SCALE = 0x10,DM_POSITION = 0x20,DM_NUP = 0x40,DM_DISPLAYORIENTATION = 0x80,DM_COPIES = 0x100,DM_DEFAULTSOURCE = 0x200,DM_PRINTQUALITY = 0x400,DM_COLOR = 0x800,DM_DUPLEX = 0x1000,DM_YRESOLUTION = 0x2000,DM_TTOPTION = 0x4000,DM_COLLATE = 0x8000,DM_FORMNAME = 0x10000,DM_LOGPIXELS = 0x20000,DM_BITSPERPEL = 0x40000,DM_PELSWIDTH = 0x80000,DM_PELSHEIGHT = 0x100000,DM_DISPLAYFLAGS = 0x200000,DM_DISPLAYFREQUENCY = 0x400000,DM_ICMMETHOD = 0x800000,DM_ICMINTENT = 0x1000000,DM_MEDIATYPE = 0x2000000,DM_DITHERTYPE = 0x4000000,DM_PANNINGWIDTH = 0x8000000,DM_PANNINGHEIGHT = 0x10000000,DM_DISPLAYFIXEDOUTPUT = 0x20000000,};
enum MACRO_DN {DN_ROOT_ENUMERATED = 0x1,DN_DRIVER_LOADED = 0x2,DN_ENUM_LOADED = 0x4,DN_STARTED = 0x8,DN_MANUAL = 0x10,DN_NEED_TO_ENUM = 0x20,DN_NOT_FIRST_TIME = 0x40,DN_HARDWARE_ENUM = 0x80,DN_LIAR = 0x100,DN_HAS_MARK = 0x200,DN_HAS_PROBLEM = 0x400,DN_FILTERED = 0x800,DN_MOVED = 0x1000,DN_DISABLEABLE = 0x2000,DN_REMOVABLE = 0x4000,DN_PRIVATE_PROBLEM = 0x8000,DN_MF_PARENT = 0x10000,DN_MF_CHILD = 0x20000,DN_WILL_BE_REMOVED = 0x40000,DN_NOT_FIRST_TIMEE = 0x80000,DN_STOP_FREE_RES = 0x100000,DN_REBAL_CANDIDATE = 0x200000,DN_BAD_PARTIAL = 0x400000,DN_NT_ENUMERATOR = 0x800000,DN_NT_DRIVER = 0x1000000,DN_NEEDS_LOCKING = 0x2000000,DN_ARM_WAKEUP = 0x4000000,DN_APM_ENUMERATOR = 0x8000000,DN_APM_DRIVER = 0x10000000,DN_SILENT_INSTALL = 0x20000000,DN_NO_SHOW_IN_DM = 0x40000000,DN_BOOT_LOG_PROB = 0x80000000,DN_NEED_RESTART = 0x100,DN_DRIVER_BLOCKED = 0x40,DN_LEGACY_DRIVER = 0x1000,DN_CHILD_WITH_INVALID_ID = 0x200,DN_CHANGEABLE_FLAGS = 0x61BB62C0,};
enum MACRO_DNF {DNF_PROCESSED = 0x1,DNF_STARTED = 0x2,DNF_START_FAILED = 0x4,DNF_ENUMERATED = 0x8,DNF_DELETED = 0x10,DNF_MADEUP = 0x20,DNF_START_REQUEST_PENDING = 0x40,DNF_NO_RESOURCE_REQUIRED = 0x80,DNF_INSUFFICIENT_RESOURCES = 0x100,DNF_RESOURCE_ASSIGNED = 0x200,DNF_RESOURCE_REPORTED = 0x400,DNF_HAL_NODE = 0x800,DNF_ADDED = 0x1000,DNF_ADD_FAILED = 0x2000,DNF_LEGACY_DRIVER = 0x4000,DNF_STOPPED = 0x8000,DNF_WILL_BE_REMOVED = 0x10000,DNF_LEGACY_RESOURCE_DEVICENODE = 0x20000,DNF_NOT_CONFIGURED = 0x40000,DNF_REINSTALL = 0x80000,DNF_RESOURCE_REQUIREMENTS_NEED_FILTERED = 0x100000,DNF_DISABLED = 0x200000,DNF_RESTART_OK = 0x400000,DNF_NEED_RESTART = 0x800000,DNF_VISITED = 0x1000000,DNF_ASSIGNING_RESOURCES = 0x2000000,DNF_BEEING_ENUMERATED = 0x4000000,DNF_NEED_ENUMERATION_ONLY = 0x8000000,DNF_LOCKED = 0x10000000,DNF_HAS_BOOT_CONFIG = 0x20000000,DNF_BOOT_CONFIG_RESERVED = 0x40000000,DNF_HAS_PROBLEM = 0x80000000,};
enum MACRO_DNS {DNS_ERROR_RCODE_FORMAT_ERROR = 9001,DNS_ERROR_RCODE_SERVER_FAILURE = 9002,DNS_ERROR_RCODE_NAME_ERROR = 9003,DNS_ERROR_RCODE_NOT_IMPLEMENTED = 9004,DNS_ERROR_RCODE_REFUSED = 9005,DNS_ERROR_RCODE_YXDOMAIN = 9006,DNS_ERROR_RCODE_YXRRSET = 9007,DNS_ERROR_RCODE_NXRRSET = 9008,DNS_ERROR_RCODE_NOTAUTH = 9009,DNS_ERROR_RCODE_NOTZONE = 9010,DNS_ERROR_RCODE_BADSIG = 9016,DNS_ERROR_RCODE_BADKEY = 9017,DNS_ERROR_RCODE_BADTIME = 9018,DNS_INFO_NO_RECORDS = 9501,DNS_ERROR_BAD_PACKET = 9502,DNS_ERROR_NO_PACKET = 9503,DNS_ERROR_RCODE = 9504,DNS_ERROR_UNSECURE_PACKET = 9505,DNS_REQUEST_PENDING = 9506,DNS_ERROR_INVALID_TYPE = 9551,DNS_ERROR_INVALID_IP_ADDRESS = 9552,DNS_ERROR_INVALID_PROPERTY = 9553,DNS_ERROR_TRY_AGAIN_LATER = 9554,DNS_ERROR_NOT_UNIQUE = 9555,DNS_ERROR_NON_RFC_NAME = 9556,DNS_STATUS_FQDN = 9557,DNS_STATUS_DOTTED_NAME = 9558,DNS_STATUS_SINGLE_PART_NAME = 9559,DNS_ERROR_INVALID_NAME = 123,DNS_ERROR_INVALID_NAME_CHAR = 9560,DNS_ERROR_NUMERIC_NAME = 9561,DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = 9562,DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = 9563,DNS_ERROR_CANNOT_FIND_ROOT_HINTS = 9564,DNS_ERROR_INCONSISTENT_ROOT_HINTS = 9565,DNS_ERROR_ZONE_DOES_NOT_EXIST = 9601,DNS_ERROR_NO_ZONE_INFO = 9602,DNS_ERROR_INVALID_ZONE_OPERATION = 9603,DNS_ERROR_ZONE_CONFIGURATION_ERROR = 9604,DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = 9605,DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = 9606,DNS_ERROR_ZONE_LOCKED = 9607,DNS_ERROR_ZONE_CREATION_FAILED = 9608,DNS_ERROR_ZONE_ALREADY_EXISTS = 9609,DNS_ERROR_AUTOZONE_ALREADY_EXISTS = 9610,DNS_ERROR_INVALID_ZONE_TYPE = 9611,DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = 9612,DNS_ERROR_ZONE_NOT_SECONDARY = 9613,DNS_ERROR_NEED_SECONDARY_ADDRESSES = 9614,DNS_ERROR_WINS_INIT_FAILED = 9615,DNS_ERROR_NEED_WINS_SERVERS = 9616,DNS_ERROR_NBSTAT_INIT_FAILED = 9617,DNS_ERROR_SOA_DELETE_INVALID = 9618,DNS_ERROR_FORWARDER_ALREADY_EXISTS = 9619,DNS_ERROR_ZONE_REQUIRES_MASTER_IP = 9620,DNS_ERROR_ZONE_IS_SHUTDOWN = 9621,DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = 9651,DNS_ERROR_INVALID_DATAFILE_NAME = 9652,DNS_ERROR_DATAFILE_OPEN_FAILURE = 9653,DNS_ERROR_FILE_WRITEBACK_FAILED = 9654,DNS_ERROR_DATAFILE_PARSING = 9655,DNS_ERROR_RECORD_DOES_NOT_EXIST = 9701,DNS_ERROR_RECORD_FORMAT = 9702,DNS_ERROR_NODE_CREATION_FAILED = 9703,DNS_ERROR_UNKNOWN_RECORD_TYPE = 9704,DNS_ERROR_RECORD_TIMED_OUT = 9705,DNS_ERROR_NAME_NOT_IN_ZONE = 9706,DNS_ERROR_CNAME_LOOP = 9707,DNS_ERROR_NODE_IS_CNAME = 9708,DNS_ERROR_CNAME_COLLISION = 9709,DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = 9710,DNS_ERROR_RECORD_ALREADY_EXISTS = 9711,DNS_ERROR_SECONDARY_DATA = 9712,DNS_ERROR_NO_CREATE_CACHE_DATA = 9713,DNS_ERROR_NAME_DOES_NOT_EXIST = 9714,DNS_WARNING_PTR_CREATE_FAILED = 9715,DNS_WARNING_DOMAIN_UNDELETED = 9716,DNS_ERROR_DS_UNAVAILABLE = 9717,DNS_ERROR_DS_ZONE_ALREADY_EXISTS = 9718,DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = 9719,DNS_INFO_AXFR_COMPLETE = 9751,DNS_ERROR_AXFR = 9752,DNS_INFO_ADDED_LOCAL_WINS = 9753,DNS_STATUS_CONTINUE_NEEDED = 9801,DNS_ERROR_NO_TCPIP = 9851,DNS_ERROR_NO_DNS_SERVERS = 9852,DNS_ERROR_DP_DOES_NOT_EXIST = 9901,DNS_ERROR_DP_ALREADY_EXISTS = 9902,DNS_ERROR_DP_NOT_ENLISTED = 9903,DNS_ERROR_DP_ALREADY_ENLISTED = 9904,DNS_ERROR_DP_NOT_AVAILABLE = 9905,};
enum MACRO_DNUF {DNUF_DONT_SHOW_IN_UI = 0x2,DNUF_NOT_DISABLEABLE = 0x8,};
enum MACRO_DN_ACCELERATION {DN_ACCELERATION_LEVEL = 1,DN_DEVICE_ORIGIN = 2,DN_SLEEP_MODE = 3,DN_DRAWING_BEGIN = 4,DN_ASSOCIATE_WINDOW = 5,DN_COMPOSITION_CHANGED = 6,DN_DRAWING_BEGIN_APIBITMAP = 7,DN_SURFOBJ_DESTRUCTION = 8,};
enum MACRO_DOE {DOE_UNLOAD_PENDING = 0x1,DOE_DELETE_PENDING = 0x2,DOE_REMOVE_PENDING = 0x4,DOE_REMOVE_PROCESSED = 0x8,DOE_START_PENDING = 0x10,DOE_SIO_NO_KEY = 0x20,DOE_SIO_WITH_KEY = 0x40,DOE_SIO_CANCELABLE = 0x80,DOE_SIO_DEFERRED = 0x100,DOE_SIO_NO_CANCEL = 0x200,};
enum MACRO_DOMAIN {DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS = 0x1F2,};
enum MACRO_DOMAIN_USER {DOMAIN_USER_RID_ADMIN = 0x1F4,DOMAIN_USER_RID_GUEST = 0x1F5,DOMAIN_USER_RID_KRBTGT = 0x1F6,DOMAIN_USER_RID_MAX = 0x3E7,DOMAIN_GROUP_RID_ADMINS = 0x200,DOMAIN_GROUP_RID_USERS = 0x201,DOMAIN_GROUP_RID_GUESTS = 0x202,DOMAIN_GROUP_RID_COMPUTERS = 0x203,DOMAIN_GROUP_RID_CONTROLLERS = 0x204,DOMAIN_GROUP_RID_CERT_ADMINS = 0x205,DOMAIN_GROUP_RID_SCHEMA_ADMINS = 0x206,DOMAIN_GROUP_RID_ENTERPRISE_ADMINS = 0x207,DOMAIN_GROUP_RID_POLICY_ADMINS = 0x208,DOMAIN_GROUP_RID_READONLY_CONTROLLERS = 0x209,DOMAIN_ALIAS_RID_ADMINS = 0x220,DOMAIN_ALIAS_RID_USERS = 0x221,DOMAIN_ALIAS_RID_GUESTS = 0x222,DOMAIN_ALIAS_RID_POWER_USERS = 0x223,DOMAIN_ALIAS_RID_ACCOUNT_OPS = 0x224,DOMAIN_ALIAS_RID_SYSTEM_OPS = 0x225,DOMAIN_ALIAS_RID_PRINT_OPS = 0x226,DOMAIN_ALIAS_RID_BACKUP_OPS = 0x227,DOMAIN_ALIAS_RID_REPLICATOR = 0x228,DOMAIN_ALIAS_RID_RAS_SERVERS = 0x229,DOMAIN_ALIAS_RID_PREW2KCOMPACCESS = 0x22A,DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS = 0x22B,DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS = 0x22C,DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = 0x22D,DOMAIN_ALIAS_RID_MONITORING_USERS = 0x22E,DOMAIN_ALIAS_RID_LOGGING_USERS = 0x22F,DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS = 0x230,DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS = 0x231,DOMAIN_ALIAS_RID_DCOM_USERS = 0x232,DOMAIN_ALIAS_RID_IUSERS = 0x238,DOMAIN_ALIAS_RID_CRYPTO_OPERATORS = 0x239,DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP = 0x23B,DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = 0x23C,DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP = 0x23D,DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP = 0x23E,};
enum MACRO_DOSDEVICE {DOSDEVICE_DRIVE_UNKNOWN = 0,DOSDEVICE_DRIVE_CALCULATE = 1,DOSDEVICE_DRIVE_REMOVABLE = 2,DOSDEVICE_DRIVE_FIXED = 3,DOSDEVICE_DRIVE_REMOTE = 4,DOSDEVICE_DRIVE_CDROM = 5,DOSDEVICE_DRIVE_RAMDISK = 6,};
enum MACRO_DOWNLOADFACE {DOWNLOADFACE = 514,};
enum MACRO_DOWNLOADHEADER {DOWNLOADHEADER = 4111,};
enum MACRO_DPFLTR {DPFLTR_ERROR_LEVEL = 0,DPFLTR_WARNING_LEVEL = 1,DPFLTR_TRACE_LEVEL = 2,DPFLTR_INFO_LEVEL = 3,DPFLTR_MASK = -2147483648,};
enum MACRO_DR7 {DR7_ACTIVE = 0x55,DR7_OVERRIDE_V = 0x4,DR7_RESERVED_MASK = 0xDC00,DR7_OVERRIDE_MASK = 0xF0000,};
enum MACRO_DRAFTMODE {DRAFTMODE = 7,QUERYESCSUPPORT = 8,};
enum MACRO_DRAWPATTERNRECT {DRAWPATTERNRECT = 25,};
enum MACRO_DRD {DRD_SUCCESS = 0,DRD_ERROR = 1,};
enum MACRO_DRH {DRH_APIBITMAP = 0x1,};
enum MACRO_DRIVERVERSION {DRIVERVERSION = 0,TECHNOLOGY = 2,};
enum MACRO_DRVQUERY {DRVQUERY_USERMODE = 0x1,};
enum MACRO_DSS {DSS_TIMER_EVENT = 0x1,DSS_FLUSH_EVENT = 0x2,DSS_RESERVED = 0x4,DSS_RESERVED1 = 0x8,};
enum MACRO_DSTINVERT {DSTINVERT = 0x550009,};
enum MACRO_DT {DT_PLOTTER = 0,DT_RASDISPLAY = 1,DT_RASPRINTER = 2,DT_RASCAMERA = 3,DT_CHARSTREAM = 4,DT_METAFILE = 5,DT_DISPFILE = 6,};
enum MACRO_DUPLICATE {DUPLICATE_CLOSE_SOURCE = 0x1,DUPLICATE_SAME_ACCESS = 0x2,};
enum MACRO_DUPLICATE_SAME {DUPLICATE_SAME_ATTRIBUTES = 0x4,};
enum MACRO_E2BIG {E2BIG = 7,ENOEXEC = 8,};
enum MACRO_EACCES {EACCES = 13,};
enum MACRO_EAGAIN {EAGAIN = 11,};
enum MACRO_EBADF {EBADF = 9,};
enum MACRO_ECHILD {ECHILD = 10,};
enum MACRO_ECS {ECS_TEARDOWN = 0x1,ECS_REDRAW = 0x2,};
enum MACRO_ED {ED_ABORTDOC = 0x1,};
enum MACRO_EDEADLK {EDEADLK = 36,};
enum MACRO_EDEADLOCK {EDEADLOCK = 36,};
enum MACRO_EDOM {EDOM = 33,};
enum MACRO_EEXIST {EEXIST = 17,};
enum MACRO_EFAULT {EFAULT = 14,EBUSY = 16,};
enum MACRO_EFBIG {EFBIG = 27,};
enum MACRO_EFLAGS {EFLAGS_USER_SANITIZE = 0x3F4DD7,};
enum MACRO_EHN {EHN_RESTORED = 0x0,EHN_ERROR = 0x1,};
enum MACRO_EILSEQ {EILSEQ = 42,STRUNCATE = 80,};
enum MACRO_EINVAL {EINVAL = 22,};
enum MACRO_EIO {EIO = 5,};
enum MACRO_EISDIR {EISDIR = 21,};
enum MACRO_ELF {ELF_VENDOR_SIZE = 4,ELF_VERSION = 0,ELF_CULTURE_LATIN = 0,};
enum MACRO_EMBEDED {COLORMATCHTOTARGET_EMBEDED = 0x1,CREATECOLORSPACE_EMBEDED = 0x1,SETICMPROFILE_EMBEDED = 0x1,};
enum MACRO_EMFILE {EMFILE = 24,};
enum MACRO_EMLINK {EMLINK = 31,EPIPE = 32,};
enum MACRO_EMR {EMR_HEADER = 1,EMR_POLYBEZIER = 2,EMR_POLYGON = 3,EMR_POLYLINE = 4,EMR_POLYBEZIERTO = 5,EMR_POLYLINETO = 6,EMR_POLYPOLYLINE = 7,EMR_POLYPOLYGON = 8,EMR_SETWINDOWEXTEX = 9,EMR_SETWINDOWORGEX = 10,EMR_SETVIEWPORTEXTEX = 11,EMR_SETVIEWPORTORGEX = 12,EMR_SETBRUSHORGEX = 13,EMR_EOF = 14,EMR_SETPIXELV = 15,EMR_SETMAPPERFLAGS = 16,EMR_SETMAPMODE = 17,EMR_SETBKMODE = 18,EMR_SETPOLYFILLMODE = 19,EMR_SETROP2 = 20,EMR_SETSTRETCHBLTMODE = 21,EMR_SETTEXTALIGN = 22,EMR_SETCOLORADJUSTMENT = 23,EMR_SETTEXTCOLOR = 24,EMR_SETBKCOLOR = 25,EMR_OFFSETCLIPRGN = 26,EMR_MOVETOEX = 27,EMR_SETMETARGN = 28,EMR_EXCLUDECLIPRECT = 29,EMR_INTERSECTCLIPRECT = 30,EMR_SCALEVIEWPORTEXTEX = 31,EMR_SCALEWINDOWEXTEX = 32,EMR_SAVEDC = 33,EMR_RESTOREDC = 34,EMR_SETWORLDTRANSFORM = 35,EMR_MODIFYWORLDTRANSFORM = 36,EMR_SELECTOBJECT = 37,EMR_CREATEPEN = 38,EMR_CREATEBRUSHINDIRECT = 39,EMR_DELETEOBJECT = 40,EMR_ANGLEARC = 41,EMR_ELLIPSE = 42,EMR_RECTANGLE = 43,EMR_ROUNDRECT = 44,EMR_ARC = 45,EMR_CHORD = 46,EMR_PIE = 47,EMR_SELECTPALETTE = 48,EMR_CREATEPALETTE = 49,EMR_SETPALETTEENTRIES = 50,EMR_RESIZEPALETTE = 51,EMR_REALIZEPALETTE = 52,EMR_EXTFLOODFILL = 53,EMR_LINETO = 54,EMR_ARCTO = 55,EMR_POLYDRAW = 56,EMR_SETARCDIRECTION = 57,EMR_SETMITERLIMIT = 58,EMR_BEGINPATH = 59,EMR_ENDPATH = 60,EMR_CLOSEFIGURE = 61,EMR_FILLPATH = 62,EMR_STROKEANDFILLPATH = 63,EMR_STROKEPATH = 64,EMR_FLATTENPATH = 65,EMR_WIDENPATH = 66,EMR_SELECTCLIPPATH = 67,EMR_ABORTPATH = 68,EMR_GDICOMMENT = 70,EMR_FILLRGN = 71,EMR_FRAMERGN = 72,EMR_INVERTRGN = 73,EMR_PAINTRGN = 74,EMR_EXTSELECTCLIPRGN = 75,EMR_BITBLT = 76,EMR_STRETCHBLT = 77,EMR_MASKBLT = 78,EMR_PLGBLT = 79,EMR_SETDIBITSTODEVICE = 80,EMR_STRETCHDIBITS = 81,EMR_EXTCREATEFONTINDIRECTW = 82,EMR_EXTTEXTOUTA = 83,EMR_EXTTEXTOUTW = 84,EMR_POLYBEZIER16 = 85,EMR_POLYGON16 = 86,EMR_POLYLINE16 = 87,EMR_POLYBEZIERTO16 = 88,EMR_POLYLINETO16 = 89,EMR_POLYPOLYLINE16 = 90,EMR_POLYPOLYGON16 = 91,EMR_POLYDRAW16 = 92,EMR_CREATEMONOBRUSH = 93,EMR_CREATEDIBPATTERNBRUSHPT = 94,EMR_EXTCREATEPEN = 95,EMR_POLYTEXTOUTA = 96,EMR_POLYTEXTOUTW = 97,EMR_SETICMMODE = 98,EMR_CREATECOLORSPACE = 99,EMR_SETCOLORSPACE = 100,EMR_DELETECOLORSPACE = 101,EMR_GLSRECORD = 102,EMR_GLSBOUNDEDRECORD = 103,EMR_PIXELFORMAT = 104,EMR_DRAWESCAPE = 105,EMR_EXTESCAPE = 106,EMR_STARTDOC = 107,EMR_SMALLTEXTOUT = 108,EMR_FORCEUFIMAPPING = 109,EMR_NAMEDESCAPE = 110,EMR_COLORCORRECTPALETTE = 111,EMR_SETICMPROFILEA = 112,EMR_SETICMPROFILEW = 113,EMR_ALPHABLEND = 114,EMR_ALPHADIBBLEND = 115,EMR_SETLAYOUT = 115,EMR_TRANSPARENTBLT = 116,EMR_TRANSPARENTDIB = 117,EMR_RESERVED_117 = 117,EMR_GRADIENTFILL = 118,EMR_SETLINKEDUFIS = 119,EMR_SETTEXTJUSTIFICATION = 120,EMR_COLORMATCHTOTARGETW = 121,EMR_CREATECOLORSPACEW = 122,EMR_MIN = 1,EMR_MAX = 122,};
enum MACRO_ENABLEDUPLEX {ENABLEDUPLEX = 28,};
enum MACRO_ENABLEPAIRKERNING {ENABLEPAIRKERNING = 769,};
enum MACRO_ENABLERELATIVEWIDTHS {ENABLERELATIVEWIDTHS = 768,};
enum MACRO_ENAMETOOLONG {ENAMETOOLONG = 38,};
enum MACRO_ENCAPSULATED {ENCAPSULATED_POSTSCRIPT = 4116,};
enum MACRO_ENDCAP {ENDCAP_ROUND = 0,ENDCAP_SQUARE = 1,ENDCAP_BUTT = 2,};
enum MACRO_ENDDOC {ENDDOC = 11,};
enum MACRO_ENFILE {ENFILE = 23,};
enum MACRO_ENG {ENG_FNT_CACHE_READ_FAULT = 0x1,ENG_FNT_CACHE_WRITE_FAULT = 0x2,};
enum MACRO_ENHMETA {ENHMETA_STOCK_OBJECT = 0x80000000,};
enum MACRO_ENODEV {ENODEV = 19,};
enum MACRO_ENOLCK {ENOLCK = 39,};
enum MACRO_ENOMEM {ENOMEM = 12,};
enum MACRO_ENOSPC {ENOSPC = 28,};
enum MACRO_ENOSYS {ENOSYS = 40,};
enum MACRO_ENOTDIR {ENOTDIR = 20,};
enum MACRO_ENOTEMPTY {ENOTEMPTY = 41,};
enum MACRO_ENOTTY {ENOTTY = 25,};
enum MACRO_ENUMPAPERBINS {ENUMPAPERBINS = 31,SETDIBSCALING = 32,};
enum MACRO_ENUMPAPERMETRICS {ENUMPAPERMETRICS = 34,};
enum MACRO_ENXIO {ENXIO = 6,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_EPERM {EPERM = 1,ENOENT = 2,};
enum MACRO_EPROCESS {EPROCESS_VDM_OBJECTS = 0x144,};
enum MACRO_EPSPRINTING {EPSPRINTING = 33,};
enum MACRO_EPT {EPT_S_INVALID_ENTRY = 1751,EPT_S_CANT_PERFORM_OP = 1752,EPT_S_NOT_REGISTERED = 1753,};
enum MACRO_EPT_S {EPT_S_CANT_CREATE = 1899,};
enum MACRO_ERANGE {ERANGE = 34,};
enum MACRO_EROFS {EROFS = 30,};
enum MACRO_ERROR {ERROR_SUCCESS = 0,ERROR_INVALID_FUNCTION = 1,ERROR_FILE_NOT_FOUND = 2,ERROR_PATH_NOT_FOUND = 3,ERROR_TOO_MANY_OPEN_FILES = 4,ERROR_ACCESS_DENIED = 5,ERROR_INVALID_HANDLE = 6,ERROR_ARENA_TRASHED = 7,ERROR_NOT_ENOUGH_MEMORY = 8,ERROR_INVALID_BLOCK = 9,ERROR_BAD_ENVIRONMENT = 10,ERROR_BAD_FORMAT = 11,ERROR_INVALID_ACCESS = 12,ERROR_INVALID_DATA = 13,ERROR_OUTOFMEMORY = 14,ERROR_INVALID_DRIVE = 15,ERROR_CURRENT_DIRECTORY = 16,ERROR_NOT_SAME_DEVICE = 17,ERROR_NO_MORE_FILES = 18,ERROR_WRITE_PROTECT = 19,ERROR_BAD_UNIT = 20,ERROR_NOT_READY = 21,ERROR_BAD_COMMAND = 22,ERROR_CRC = 23,ERROR_BAD_LENGTH = 24,ERROR_SEEK = 25,ERROR_NOT_DOS_DISK = 26,ERROR_SECTOR_NOT_FOUND = 27,ERROR_OUT_OF_PAPER = 28,ERROR_WRITE_FAULT = 29,ERROR_READ_FAULT = 30,ERROR_GEN_FAILURE = 31,ERROR_SHARING_VIOLATION = 32,ERROR_LOCK_VIOLATION = 33,ERROR_WRONG_DISK = 34,ERROR_FCB_UNAVAILABLE = 35,ERROR_SHARING_BUFFER_EXCEEDED = 36,ERROR_HANDLE_EOF = 38,ERROR_HANDLE_DISK_FULL = 39,ERROR_NOT_SUPPORTED = 50,ERROR_REM_NOT_LIST = 51,ERROR_DUP_NAME = 52,ERROR_BAD_NETPATH = 53,ERROR_NETWORK_BUSY = 54,ERROR_DEV_NOT_EXIST = 55,ERROR_TOO_MANY_CMDS = 56,ERROR_ADAP_HDW_ERR = 57,ERROR_BAD_NET_RESP = 58,ERROR_UNEXP_NET_ERR = 59,ERROR_BAD_REM_ADAP = 60,ERROR_PRINTQ_FULL = 61,ERROR_NO_SPOOL_SPACE = 62,ERROR_PRINT_CANCELLED = 63,ERROR_NETNAME_DELETED = 64,ERROR_NETWORK_ACCESS_DENIED = 65,ERROR_BAD_DEV_TYPE = 66,ERROR_BAD_NET_NAME = 67,ERROR_TOO_MANY_NAMES = 68,ERROR_TOO_MANY_SESS = 69,ERROR_SHARING_PAUSED = 70,ERROR_REQ_NOT_ACCEP = 71,ERROR_REDIR_PAUSED = 72,ERROR_FILE_EXISTS = 80,ERROR_CANNOT_MAKE = 82,ERROR_FAIL_I24 = 83,ERROR_OUT_OF_STRUCTURES = 84,ERROR_ALREADY_ASSIGNED = 85,ERROR_INVALID_PASSWORD = 86,ERROR_INVALID_PARAMETER = 87,ERROR_NET_WRITE_FAULT = 88,ERROR_NO_PROC_SLOTS = 89,ERROR_TOO_MANY_SEMAPHORES = 100,ERROR_EXCL_SEM_ALREADY_OWNED = 101,ERROR_SEM_IS_SET = 102,ERROR_TOO_MANY_SEM_REQUESTS = 103,ERROR_INVALID_AT_INTERRUPT_TIME = 104,ERROR_SEM_OWNER_DIED = 105,ERROR_SEM_USER_LIMIT = 106,ERROR_DISK_CHANGE = 107,ERROR_DRIVE_LOCKED = 108,ERROR_BROKEN_PIPE = 109,ERROR_OPEN_FAILED = 110,ERROR_BUFFER_OVERFLOW = 111,ERROR_DISK_FULL = 112,ERROR_NO_MORE_SEARCH_HANDLES = 113,ERROR_INVALID_TARGET_HANDLE = 114,ERROR_INVALID_CATEGORY = 117,ERROR_INVALID_VERIFY_SWITCH = 118,ERROR_BAD_DRIVER_LEVEL = 119,ERROR_CALL_NOT_IMPLEMENTED = 120,ERROR_SEM_TIMEOUT = 121,ERROR_INSUFFICIENT_BUFFER = 122,ERROR_INVALID_NAME = 123,ERROR_INVALID_LEVEL = 124,ERROR_NO_VOLUME_LABEL = 125,ERROR_MOD_NOT_FOUND = 126,ERROR_PROC_NOT_FOUND = 127,ERROR_WAIT_NO_CHILDREN = 128,ERROR_CHILD_NOT_COMPLETE = 129,ERROR_DIRECT_ACCESS_HANDLE = 130,ERROR_NEGATIVE_SEEK = 131,ERROR_SEEK_ON_DEVICE = 132,ERROR_IS_JOIN_TARGET = 133,ERROR_IS_JOINED = 134,ERROR_IS_SUBSTED = 135,ERROR_NOT_JOINED = 136,ERROR_NOT_SUBSTED = 137,ERROR_JOIN_TO_JOIN = 138,ERROR_SUBST_TO_SUBST = 139,ERROR_JOIN_TO_SUBST = 140,ERROR_SUBST_TO_JOIN = 141,ERROR_BUSY_DRIVE = 142,ERROR_SAME_DRIVE = 143,ERROR_DIR_NOT_ROOT = 144,ERROR_DIR_NOT_EMPTY = 145,ERROR_IS_SUBST_PATH = 146,ERROR_IS_JOIN_PATH = 147,ERROR_PATH_BUSY = 148,ERROR_IS_SUBST_TARGET = 149,ERROR_SYSTEM_TRACE = 150,ERROR_INVALID_EVENT_COUNT = 151,ERROR_TOO_MANY_MUXWAITERS = 152,ERROR_INVALID_LIST_FORMAT = 153,ERROR_LABEL_TOO_LONG = 154,ERROR_TOO_MANY_TCBS = 155,ERROR_SIGNAL_REFUSED = 156,ERROR_DISCARDED = 157,ERROR_NOT_LOCKED = 158,ERROR_BAD_THREADID_ADDR = 159,ERROR_BAD_ARGUMENTS = 160,ERROR_BAD_PATHNAME = 161,ERROR_SIGNAL_PENDING = 162,ERROR_MAX_THRDS_REACHED = 164,ERROR_LOCK_FAILED = 167,ERROR_BUSY = 170,ERROR_DEVICE_SUPPORT_IN_PROGRESS = 171,ERROR_CANCEL_VIOLATION = 173,ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174,ERROR_INVALID_SEGMENT_NUMBER = 180,ERROR_INVALID_ORDINAL = 182,ERROR_ALREADY_EXISTS = 183,ERROR_INVALID_FLAG_NUMBER = 186,ERROR_SEM_NOT_FOUND = 187,ERROR_INVALID_STARTING_CODESEG = 188,ERROR_INVALID_STACKSEG = 189,ERROR_INVALID_MODULETYPE = 190,ERROR_INVALID_EXE_SIGNATURE = 191,ERROR_EXE_MARKED_INVALID = 192,ERROR_BAD_EXE_FORMAT = 193,ERROR_ITERATED_DATA_EXCEEDS_64k = 194,ERROR_INVALID_MINALLOCSIZE = 195,ERROR_DYNLINK_FROM_INVALID_RING = 196,ERROR_IOPL_NOT_ENABLED = 197,ERROR_INVALID_SEGDPL = 198,ERROR_AUTODATASEG_EXCEEDS_64k = 199,ERROR_RING2SEG_MUST_BE_MOVABLE = 200,ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201,ERROR_INFLOOP_IN_RELOC_CHAIN = 202,ERROR_ENVVAR_NOT_FOUND = 203,ERROR_NO_SIGNAL_SENT = 205,ERROR_FILENAME_EXCED_RANGE = 206,ERROR_RING2_STACK_IN_USE = 207,ERROR_META_EXPANSION_TOO_LONG = 208,ERROR_INVALID_SIGNAL_NUMBER = 209,ERROR_THREAD_1_INACTIVE = 210,ERROR_LOCKED = 212,ERROR_TOO_MANY_MODULES = 214,ERROR_NESTING_NOT_ALLOWED = 215,ERROR_EXE_MACHINE_TYPE_MISMATCH = 216,ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = 217,ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = 218,ERROR_INVALID_EXITROUTINE_RING = 219,ERROR_FILE_CHECKED_OUT = 220,ERROR_CHECKOUT_REQUIRED = 221,ERROR_BAD_FILE_TYPE = 222,ERROR_FILE_TOO_LARGE = 223,ERROR_FORMS_AUTH_REQUIRED = 224,ERROR_NO_CHILDREN = 228,ERROR_PIPE_LOCAL = 229,ERROR_BAD_PIPE = 230,ERROR_PIPE_BUSY = 231,ERROR_NO_DATA = 232,ERROR_PIPE_NOT_CONNECTED = 233,ERROR_MORE_DATA = 234,ERROR_VC_DISCONNECTED = 240,ERROR_INVALID_EA_NAME = 254,ERROR_EA_LIST_INCONSISTENT = 255,};
enum MACRO_ERROR_0 {ERROR = 0,};
enum MACRO_ERROR_CTX {ERROR_CTX_WINSTATION_NAME_INVALID = 7001,ERROR_CTX_INVALID_PD = 7002,ERROR_CTX_PD_NOT_FOUND = 7003,ERROR_CTX_WD_NOT_FOUND = 7004,ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = 7005,ERROR_CTX_SERVICE_NAME_COLLISION = 7006,ERROR_CTX_CLOSE_PENDING = 7007,ERROR_CTX_NO_OUTBUF = 7008,ERROR_CTX_MODEM_INF_NOT_FOUND = 7009,ERROR_CTX_INVALID_MODEMNAME = 7010,ERROR_CTX_MODEM_RESPONSE_ERROR = 7011,ERROR_CTX_MODEM_RESPONSE_TIMEOUT = 7012,ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = 7013,ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = 7014,ERROR_CTX_MODEM_RESPONSE_BUSY = 7015,ERROR_CTX_MODEM_RESPONSE_VOICE = 7016,ERROR_CTX_TD_ERROR = 7017,ERROR_CTX_WINSTATION_NOT_FOUND = 7022,ERROR_CTX_WINSTATION_ALREADY_EXISTS = 7023,ERROR_CTX_WINSTATION_BUSY = 7024,ERROR_CTX_BAD_VIDEO_MODE = 7025,ERROR_CTX_GRAPHICS_INVALID = 7035,ERROR_CTX_LOGON_DISABLED = 7037,ERROR_CTX_NOT_CONSOLE = 7038,ERROR_CTX_CLIENT_QUERY_TIMEOUT = 7040,ERROR_CTX_CONSOLE_DISCONNECT = 7041,ERROR_CTX_CONSOLE_CONNECT = 7042,ERROR_CTX_SHADOW_DENIED = 7044,ERROR_CTX_WINSTATION_ACCESS_DENIED = 7045,ERROR_CTX_INVALID_WD = 7049,ERROR_CTX_SHADOW_INVALID = 7050,ERROR_CTX_SHADOW_DISABLED = 7051,ERROR_CTX_CLIENT_LICENSE_IN_USE = 7052,ERROR_CTX_CLIENT_LICENSE_NOT_SET = 7053,ERROR_CTX_LICENSE_NOT_AVAILABLE = 7054,ERROR_CTX_LICENSE_CLIENT_INVALID = 7055,ERROR_CTX_LICENSE_EXPIRED = 7056,ERROR_CTX_SHADOW_NOT_RUNNING = 7057,ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 7058,ERROR_ACTIVATION_COUNT_EXCEEDED = 7059,};
enum MACRO_ERROR_DS {ERROR_DS_NOT_INSTALLED = 8200,ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 8201,ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 8202,ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 8203,ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 8204,ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 8205,ERROR_DS_BUSY = 8206,ERROR_DS_UNAVAILABLE = 8207,ERROR_DS_NO_RIDS_ALLOCATED = 8208,ERROR_DS_NO_MORE_RIDS = 8209,ERROR_DS_INCORRECT_ROLE_OWNER = 8210,ERROR_DS_RIDMGR_INIT_ERROR = 8211,ERROR_DS_OBJ_CLASS_VIOLATION = 8212,ERROR_DS_CANT_ON_NON_LEAF = 8213,ERROR_DS_CANT_ON_RDN = 8214,ERROR_DS_CANT_MOD_OBJ_CLASS = 8215,ERROR_DS_CROSS_DOM_MOVE_ERROR = 8216,ERROR_DS_GC_NOT_AVAILABLE = 8217,ERROR_SHARED_POLICY = 8218,ERROR_POLICY_OBJECT_NOT_FOUND = 8219,ERROR_POLICY_ONLY_IN_DS = 8220,ERROR_PROMOTION_ACTIVE = 8221,ERROR_NO_PROMOTION_ACTIVE = 8222,ERROR_DS_OPERATIONS_ERROR = 8224,ERROR_DS_PROTOCOL_ERROR = 8225,ERROR_DS_TIMELIMIT_EXCEEDED = 8226,ERROR_DS_SIZELIMIT_EXCEEDED = 8227,ERROR_DS_ADMIN_LIMIT_EXCEEDED = 8228,ERROR_DS_COMPARE_FALSE = 8229,ERROR_DS_COMPARE_TRUE = 8230,ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = 8231,ERROR_DS_STRONG_AUTH_REQUIRED = 8232,ERROR_DS_INAPPROPRIATE_AUTH = 8233,ERROR_DS_AUTH_UNKNOWN = 8234,ERROR_DS_REFERRAL = 8235,ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = 8236,ERROR_DS_CONFIDENTIALITY_REQUIRED = 8237,ERROR_DS_INAPPROPRIATE_MATCHING = 8238,ERROR_DS_CONSTRAINT_VIOLATION = 8239,ERROR_DS_NO_SUCH_OBJECT = 8240,ERROR_DS_ALIAS_PROBLEM = 8241,ERROR_DS_INVALID_DN_SYNTAX = 8242,ERROR_DS_IS_LEAF = 8243,ERROR_DS_ALIAS_DEREF_PROBLEM = 8244,ERROR_DS_UNWILLING_TO_PERFORM = 8245,ERROR_DS_LOOP_DETECT = 8246,ERROR_DS_NAMING_VIOLATION = 8247,ERROR_DS_OBJECT_RESULTS_TOO_LARGE = 8248,ERROR_DS_AFFECTS_MULTIPLE_DSAS = 8249,ERROR_DS_SERVER_DOWN = 8250,ERROR_DS_LOCAL_ERROR = 8251,ERROR_DS_ENCODING_ERROR = 8252,ERROR_DS_DECODING_ERROR = 8253,ERROR_DS_FILTER_UNKNOWN = 8254,ERROR_DS_PARAM_ERROR = 8255,ERROR_DS_NOT_SUPPORTED = 8256,ERROR_DS_NO_RESULTS_RETURNED = 8257,ERROR_DS_CONTROL_NOT_FOUND = 8258,ERROR_DS_CLIENT_LOOP = 8259,ERROR_DS_REFERRAL_LIMIT_EXCEEDED = 8260,ERROR_DS_SORT_CONTROL_MISSING = 8261,ERROR_DS_OFFSET_RANGE_ERROR = 8262,ERROR_DS_ROOT_MUST_BE_NC = 8301,ERROR_DS_ADD_REPLICA_INHIBITED = 8302,ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = 8303,ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = 8304,ERROR_DS_OBJ_STRING_NAME_EXISTS = 8305,ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = 8306,ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = 8307,ERROR_DS_NO_REQUESTED_ATTS_FOUND = 8308,ERROR_DS_USER_BUFFER_TO_SMALL = 8309,ERROR_DS_ATT_IS_NOT_ON_OBJ = 8310,ERROR_DS_ILLEGAL_MOD_OPERATION = 8311,ERROR_DS_OBJ_TOO_LARGE = 8312,ERROR_DS_BAD_INSTANCE_TYPE = 8313,ERROR_DS_MASTERDSA_REQUIRED = 8314,ERROR_DS_OBJECT_CLASS_REQUIRED = 8315,ERROR_DS_MISSING_REQUIRED_ATT = 8316,ERROR_DS_ATT_NOT_DEF_FOR_CLASS = 8317,ERROR_DS_ATT_ALREADY_EXISTS = 8318,ERROR_DS_CANT_ADD_ATT_VALUES = 8320,ERROR_DS_SINGLE_VALUE_CONSTRAINT = 8321,ERROR_DS_RANGE_CONSTRAINT = 8322,ERROR_DS_ATT_VAL_ALREADY_EXISTS = 8323,ERROR_DS_CANT_REM_MISSING_ATT = 8324,ERROR_DS_CANT_REM_MISSING_ATT_VAL = 8325,ERROR_DS_ROOT_CANT_BE_SUBREF = 8326,ERROR_DS_NO_CHAINING = 8327,ERROR_DS_NO_CHAINED_EVAL = 8328,ERROR_DS_NO_PARENT_OBJECT = 8329,ERROR_DS_PARENT_IS_AN_ALIAS = 8330,ERROR_DS_CANT_MIX_MASTER_AND_REPS = 8331,ERROR_DS_CHILDREN_EXIST = 8332,ERROR_DS_OBJ_NOT_FOUND = 8333,ERROR_DS_ALIASED_OBJ_MISSING = 8334,ERROR_DS_BAD_NAME_SYNTAX = 8335,ERROR_DS_ALIAS_POINTS_TO_ALIAS = 8336,ERROR_DS_CANT_DEREF_ALIAS = 8337,ERROR_DS_OUT_OF_SCOPE = 8338,ERROR_DS_OBJECT_BEING_REMOVED = 8339,ERROR_DS_CANT_DELETE_DSA_OBJ = 8340,ERROR_DS_GENERIC_ERROR = 8341,ERROR_DS_DSA_MUST_BE_INT_MASTER = 8342,ERROR_DS_CLASS_NOT_DSA = 8343,ERROR_DS_INSUFF_ACCESS_RIGHTS = 8344,ERROR_DS_ILLEGAL_SUPERIOR = 8345,ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = 8346,ERROR_DS_NAME_TOO_MANY_PARTS = 8347,ERROR_DS_NAME_TOO_LONG = 8348,ERROR_DS_NAME_VALUE_TOO_LONG = 8349,ERROR_DS_NAME_UNPARSEABLE = 8350,ERROR_DS_NAME_TYPE_UNKNOWN = 8351,ERROR_DS_NOT_AN_OBJECT = 8352,ERROR_DS_SEC_DESC_TOO_SHORT = 8353,ERROR_DS_SEC_DESC_INVALID = 8354,ERROR_DS_NO_DELETED_NAME = 8355,ERROR_DS_SUBREF_MUST_HAVE_PARENT = 8356,ERROR_DS_NCNAME_MUST_BE_NC = 8357,ERROR_DS_CANT_ADD_SYSTEM_ONLY = 8358,ERROR_DS_CLASS_MUST_BE_CONCRETE = 8359,ERROR_DS_INVALID_DMD = 8360,ERROR_DS_OBJ_GUID_EXISTS = 8361,ERROR_DS_NOT_ON_BACKLINK = 8362,ERROR_DS_NO_CROSSREF_FOR_NC = 8363,ERROR_DS_SHUTTING_DOWN = 8364,ERROR_DS_UNKNOWN_OPERATION = 8365,ERROR_DS_INVALID_ROLE_OWNER = 8366,ERROR_DS_COULDNT_CONTACT_FSMO = 8367,ERROR_DS_CROSS_NC_DN_RENAME = 8368,ERROR_DS_CANT_MOD_SYSTEM_ONLY = 8369,ERROR_DS_REPLICATOR_ONLY = 8370,ERROR_DS_OBJ_CLASS_NOT_DEFINED = 8371,ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = 8372,ERROR_DS_NAME_REFERENCE_INVALID = 8373,ERROR_DS_CROSS_REF_EXISTS = 8374,ERROR_DS_CANT_DEL_MASTER_CROSSREF = 8375,ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = 8376,ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = 8377,ERROR_DS_DUP_RDN = 8378,ERROR_DS_DUP_OID = 8379,ERROR_DS_DUP_MAPI_ID = 8380,ERROR_DS_DUP_SCHEMA_ID_GUID = 8381,ERROR_DS_DUP_LDAP_DISPLAY_NAME = 8382,ERROR_DS_SEMANTIC_ATT_TEST = 8383,ERROR_DS_SYNTAX_MISMATCH = 8384,ERROR_DS_EXISTS_IN_MUST_HAVE = 8385,ERROR_DS_EXISTS_IN_MAY_HAVE = 8386,ERROR_DS_NONEXISTENT_MAY_HAVE = 8387,ERROR_DS_NONEXISTENT_MUST_HAVE = 8388,ERROR_DS_AUX_CLS_TEST_FAIL = 8389,ERROR_DS_NONEXISTENT_POSS_SUP = 8390,ERROR_DS_SUB_CLS_TEST_FAIL = 8391,ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = 8392,ERROR_DS_EXISTS_IN_AUX_CLS = 8393,ERROR_DS_EXISTS_IN_SUB_CLS = 8394,ERROR_DS_EXISTS_IN_POSS_SUP = 8395,ERROR_DS_RECALCSCHEMA_FAILED = 8396,ERROR_DS_TREE_DELETE_NOT_FINISHED = 8397,ERROR_DS_CANT_DELETE = 8398,ERROR_DS_ATT_SCHEMA_REQ_ID = 8399,ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = 8400,ERROR_DS_CANT_CACHE_ATT = 8401,ERROR_DS_CANT_CACHE_CLASS = 8402,ERROR_DS_CANT_REMOVE_ATT_CACHE = 8403,ERROR_DS_CANT_REMOVE_CLASS_CACHE = 8404,ERROR_DS_CANT_RETRIEVE_DN = 8405,ERROR_DS_MISSING_SUPREF = 8406,ERROR_DS_CANT_RETRIEVE_INSTANCE = 8407,ERROR_DS_CODE_INCONSISTENCY = 8408,ERROR_DS_DATABASE_ERROR = 8409,ERROR_DS_GOVERNSID_MISSING = 8410,ERROR_DS_MISSING_EXPECTED_ATT = 8411,ERROR_DS_NCNAME_MISSING_CR_REF = 8412,ERROR_DS_SECURITY_CHECKING_ERROR = 8413,ERROR_DS_SCHEMA_NOT_LOADED = 8414,ERROR_DS_SCHEMA_ALLOC_FAILED = 8415,ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = 8416,ERROR_DS_GCVERIFY_ERROR = 8417,ERROR_DS_DRA_SCHEMA_MISMATCH = 8418,ERROR_DS_CANT_FIND_DSA_OBJ = 8419,ERROR_DS_CANT_FIND_EXPECTED_NC = 8420,ERROR_DS_CANT_FIND_NC_IN_CACHE = 8421,ERROR_DS_CANT_RETRIEVE_CHILD = 8422,ERROR_DS_SECURITY_ILLEGAL_MODIFY = 8423,ERROR_DS_CANT_REPLACE_HIDDEN_REC = 8424,ERROR_DS_BAD_HIERARCHY_FILE = 8425,ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = 8426,ERROR_DS_CONFIG_PARAM_MISSING = 8427,ERROR_DS_COUNTING_AB_INDICES_FAILED = 8428,ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = 8429,ERROR_DS_INTERNAL_FAILURE = 8430,ERROR_DS_UNKNOWN_ERROR = 8431,ERROR_DS_ROOT_REQUIRES_CLASS_TOP = 8432,ERROR_DS_REFUSING_FSMO_ROLES = 8433,ERROR_DS_MISSING_FSMO_SETTINGS = 8434,ERROR_DS_UNABLE_TO_SURRENDER_ROLES = 8435,ERROR_DS_DRA_GENERIC = 8436,ERROR_DS_DRA_INVALID_PARAMETER = 8437,ERROR_DS_DRA_BUSY = 8438,ERROR_DS_DRA_BAD_DN = 8439,ERROR_DS_DRA_BAD_NC = 8440,ERROR_DS_DRA_DN_EXISTS = 8441,ERROR_DS_DRA_INTERNAL_ERROR = 8442,ERROR_DS_DRA_INCONSISTENT_DIT = 8443,ERROR_DS_DRA_CONNECTION_FAILED = 8444,ERROR_DS_DRA_BAD_INSTANCE_TYPE = 8445,ERROR_DS_DRA_OUT_OF_MEM = 8446,ERROR_DS_DRA_MAIL_PROBLEM = 8447,ERROR_DS_DRA_REF_ALREADY_EXISTS = 8448,ERROR_DS_DRA_REF_NOT_FOUND = 8449,ERROR_DS_DRA_OBJ_IS_REP_SOURCE = 8450,ERROR_DS_DRA_DB_ERROR = 8451,ERROR_DS_DRA_NO_REPLICA = 8452,ERROR_DS_DRA_ACCESS_DENIED = 8453,ERROR_DS_DRA_NOT_SUPPORTED = 8454,ERROR_DS_DRA_RPC_CANCELLED = 8455,ERROR_DS_DRA_SOURCE_DISABLED = 8456,ERROR_DS_DRA_SINK_DISABLED = 8457,ERROR_DS_DRA_NAME_COLLISION = 8458,ERROR_DS_DRA_SOURCE_REINSTALLED = 8459,ERROR_DS_DRA_MISSING_PARENT = 8460,ERROR_DS_DRA_PREEMPTED = 8461,ERROR_DS_DRA_ABANDON_SYNC = 8462,ERROR_DS_DRA_SHUTDOWN = 8463,ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = 8464,ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = 8465,ERROR_DS_DRA_EXTN_CONNECTION_FAILED = 8466,ERROR_DS_INSTALL_SCHEMA_MISMATCH = 8467,ERROR_DS_DUP_LINK_ID = 8468,ERROR_DS_NAME_ERROR_RESOLVING = 8469,ERROR_DS_NAME_ERROR_NOT_FOUND = 8470,ERROR_DS_NAME_ERROR_NOT_UNIQUE = 8471,ERROR_DS_NAME_ERROR_NO_MAPPING = 8472,ERROR_DS_NAME_ERROR_DOMAIN_ONLY = 8473,ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = 8474,ERROR_DS_CONSTRUCTED_ATT_MOD = 8475,ERROR_DS_WRONG_OM_OBJ_CLASS = 8476,ERROR_DS_DRA_REPL_PENDING = 8477,ERROR_DS_DS_REQUIRED = 8478,ERROR_DS_INVALID_LDAP_DISPLAY_NAME = 8479,ERROR_DS_NON_BASE_SEARCH = 8480,ERROR_DS_CANT_RETRIEVE_ATTS = 8481,ERROR_DS_BACKLINK_WITHOUT_LINK = 8482,ERROR_DS_EPOCH_MISMATCH = 8483,ERROR_DS_SRC_NAME_MISMATCH = 8484,ERROR_DS_SRC_AND_DST_NC_IDENTICAL = 8485,ERROR_DS_DST_NC_MISMATCH = 8486,ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = 8487,ERROR_DS_SRC_GUID_MISMATCH = 8488,ERROR_DS_CANT_MOVE_DELETED_OBJECT = 8489,ERROR_DS_PDC_OPERATION_IN_PROGRESS = 8490,ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = 8491,ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = 8492,ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = 8493,ERROR_DS_NC_MUST_HAVE_NC_PARENT = 8494,ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = 8495,ERROR_DS_DST_DOMAIN_NOT_NATIVE = 8496,ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = 8497,ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = 8498,ERROR_DS_CANT_MOVE_RESOURCE_GROUP = 8499,ERROR_DS_INVALID_SEARCH_FLAG = 8500,ERROR_DS_NO_TREE_DELETE_ABOVE_NC = 8501,ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = 8502,ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = 8503,ERROR_DS_SAM_INIT_FAILURE = 8504,ERROR_DS_SENSITIVE_GROUP_VIOLATION = 8505,ERROR_DS_CANT_MOD_PRIMARYGROUPID = 8506,ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = 8507,ERROR_DS_NONSAFE_SCHEMA_CHANGE = 8508,ERROR_DS_SCHEMA_UPDATE_DISALLOWED = 8509,ERROR_DS_CANT_CREATE_UNDER_SCHEMA = 8510,ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = 8511,ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 8512,ERROR_DS_INVALID_GROUP_TYPE = 8513,ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 8514,ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 8515,ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 8516,ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 8517,ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 8518,ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 8519,ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 8520,ERROR_DS_HAVE_PRIMARY_MEMBERS = 8521,ERROR_DS_STRING_SD_CONVERSION_FAILED = 8522,ERROR_DS_NAMING_MASTER_GC = 8523,ERROR_DS_LOOKUP_FAILURE = 8524,ERROR_DS_COULDNT_UPDATE_SPNS = 8525,ERROR_DS_CANT_RETRIEVE_SD = 8526,ERROR_DS_KEY_NOT_UNIQUE = 8527,ERROR_DS_WRONG_LINKED_ATT_SYNTAX = 8528,ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = 8529,ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = 8530,ERROR_DS_CANT_START = 8531,ERROR_DS_INIT_FAILURE = 8532,ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = 8533,ERROR_DS_SOURCE_DOMAIN_IN_FOREST = 8534,ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = 8535,ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = 8536,ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = 8537,ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = 8538,ERROR_DS_SRC_SID_EXISTS_IN_FOREST = 8539,ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 8540,ERROR_SAM_INIT_FAILURE = 8541,ERROR_DS_DRA_SCHEMA_INFO_SHIP = 8542,ERROR_DS_DRA_SCHEMA_CONFLICT = 8543,ERROR_DS_DRA_EARLIER_SCHEMA_CONLICT = 8544,ERROR_DS_DRA_OBJ_NC_MISMATCH = 8545,ERROR_DS_NC_STILL_HAS_DSAS = 8546,ERROR_DS_GC_REQUIRED = 8547,ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 8548,ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 8549,ERROR_DS_CANT_ADD_TO_GC = 8550,ERROR_DS_NO_CHECKPOINT_WITH_PDC = 8551,ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = 8552,ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = 8553,ERROR_DS_INVALID_NAME_FOR_SPN = 8554,ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = 8555,ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = 8556,ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 8557,ERROR_DS_MUST_BE_RUN_ON_DST_DC = 8558,ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = 8559,ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = 8560,ERROR_DS_INIT_FAILURE_CONSOLE = 8561,ERROR_DS_SAM_INIT_FAILURE_CONSOLE = 8562,ERROR_DS_FOREST_VERSION_TOO_HIGH = 8563,ERROR_DS_DOMAIN_VERSION_TOO_HIGH = 8564,ERROR_DS_FOREST_VERSION_TOO_LOW = 8565,ERROR_DS_DOMAIN_VERSION_TOO_LOW = 8566,ERROR_DS_INCOMPATIBLE_VERSION = 8567,ERROR_DS_LOW_DSA_VERSION = 8568,ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = 8569,ERROR_DS_NOT_SUPPORTED_SORT_ORDER = 8570,ERROR_DS_NAME_NOT_UNIQUE = 8571,ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = 8572,ERROR_DS_OUT_OF_VERSION_STORE = 8573,ERROR_DS_INCOMPATIBLE_CONTROLS_USED = 8574,ERROR_DS_NO_REF_DOMAIN = 8575,ERROR_DS_RESERVED_LINK_ID = 8576,ERROR_DS_LINK_ID_NOT_AVAILABLE = 8577,ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 8578,ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = 8579,ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = 8580,ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = 8581,ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = 8582,ERROR_DS_NAME_ERROR_TRUST_REFERRAL = 8583,ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = 8584,ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = 8585,ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = 8586,ERROR_DS_THREAD_LIMIT_EXCEEDED = 8587,ERROR_DS_NOT_CLOSEST = 8588,ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = 8589,ERROR_DS_SINGLE_USER_MODE_FAILED = 8590,ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = 8591,ERROR_DS_NTDSCRIPT_PROCESS_ERROR = 8592,ERROR_DS_DIFFERENT_REPL_EPOCHS = 8593,ERROR_DS_DRS_EXTENSIONS_CHANGED = 8594,ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = 8595,ERROR_DS_NO_MSDS_INTID = 8596,ERROR_DS_DUP_MSDS_INTID = 8597,ERROR_DS_EXISTS_IN_RDNATTID = 8598,ERROR_DS_AUTHORIZATION_FAILED = 8599,ERROR_DS_INVALID_SCRIPT = 8600,ERROR_DS_REMOTE_CROSSREF_OP_FAILED = 8601,ERROR_DS_CROSS_REF_BUSY = 8602,ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = 8603,ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = 8604,ERROR_DS_DUPLICATE_ID_FOUND = 8605,ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = 8606,ERROR_DS_GROUP_CONVERSION_ERROR = 8607,ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = 8608,ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = 8609,ERROR_DS_ROLE_NOT_VERIFIED = 8610,ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = 8611,ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = 8612,ERROR_DS_EXISTING_AD_CHILD_NC = 8613,};
enum MACRO_ERROR_INVALID {ERROR_INVALID_USER_BUFFER = 1784,ERROR_UNRECOGNIZED_MEDIA = 1785,ERROR_NO_TRUST_LSA_SECRET = 1786,ERROR_NO_TRUST_SAM_ACCOUNT = 1787,ERROR_TRUSTED_DOMAIN_FAILURE = 1788,ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789,ERROR_TRUST_FAILURE = 1790,};
enum MACRO_ERROR_INVALID_TIME {ERROR_INVALID_TIME = 1901,ERROR_INVALID_FORM_NAME = 1902,ERROR_INVALID_FORM_SIZE = 1903,ERROR_ALREADY_WAITING = 1904,ERROR_PRINTER_DELETED = 1905,ERROR_INVALID_PRINTER_STATE = 1906,ERROR_PASSWORD_MUST_CHANGE = 1907,ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908,ERROR_ACCOUNT_LOCKED_OUT = 1909,};
enum MACRO_ERROR_IPSEC {ERROR_IPSEC_QM_POLICY_EXISTS = 13000,ERROR_IPSEC_QM_POLICY_NOT_FOUND = 13001,ERROR_IPSEC_QM_POLICY_IN_USE = 13002,ERROR_IPSEC_MM_POLICY_EXISTS = 13003,ERROR_IPSEC_MM_POLICY_NOT_FOUND = 13004,ERROR_IPSEC_MM_POLICY_IN_USE = 13005,ERROR_IPSEC_MM_FILTER_EXISTS = 13006,ERROR_IPSEC_MM_FILTER_NOT_FOUND = 13007,ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = 13008,ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = 13009,ERROR_IPSEC_MM_AUTH_EXISTS = 13010,ERROR_IPSEC_MM_AUTH_NOT_FOUND = 13011,ERROR_IPSEC_MM_AUTH_IN_USE = 13012,ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = 13013,ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = 13014,ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = 13015,ERROR_IPSEC_TUNNEL_FILTER_EXISTS = 13016,ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = 13017,ERROR_IPSEC_MM_FILTER_PENDING_DELETION = 13018,ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = 13019,ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = 13020,ERROR_IPSEC_MM_POLICY_PENDING_DELETION = 13021,ERROR_IPSEC_MM_AUTH_PENDING_DELETION = 13022,ERROR_IPSEC_QM_POLICY_PENDING_DELETION = 13023,};
enum MACRO_ERROR_IPSEC_IKE {ERROR_IPSEC_IKE_AUTH_FAIL = 13801,ERROR_IPSEC_IKE_ATTRIB_FAIL = 13802,ERROR_IPSEC_IKE_NEGOTIATION_PENDING = 13803,ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = 13804,ERROR_IPSEC_IKE_TIMED_OUT = 13805,ERROR_IPSEC_IKE_NO_CERT = 13806,ERROR_IPSEC_IKE_SA_DELETED = 13807,ERROR_IPSEC_IKE_SA_REAPED = 13808,ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = 13809,ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = 13810,ERROR_IPSEC_IKE_QUEUE_DROP_MM = 13811,ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = 13812,ERROR_IPSEC_IKE_DROP_NO_RESPONSE = 13813,ERROR_IPSEC_IKE_MM_DELAY_DROP = 13814,ERROR_IPSEC_IKE_QM_DELAY_DROP = 13815,ERROR_IPSEC_IKE_ERROR = 13816,ERROR_IPSEC_IKE_CRL_FAILED = 13817,ERROR_IPSEC_IKE_INVALID_KEY_USAGE = 13818,ERROR_IPSEC_IKE_INVALID_CERT_TYPE = 13819,ERROR_IPSEC_IKE_NO_PRIVATE_KEY = 13820,ERROR_IPSEC_IKE_DH_FAIL = 13822,ERROR_IPSEC_IKE_INVALID_HEADER = 13824,ERROR_IPSEC_IKE_NO_POLICY = 13825,ERROR_IPSEC_IKE_INVALID_SIGNATURE = 13826,ERROR_IPSEC_IKE_KERBEROS_ERROR = 13827,ERROR_IPSEC_IKE_NO_PUBLIC_KEY = 13828,ERROR_IPSEC_IKE_PROCESS_ERR = 13829,ERROR_IPSEC_IKE_PROCESS_ERR_SA = 13830,ERROR_IPSEC_IKE_PROCESS_ERR_PROP = 13831,ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = 13832,ERROR_IPSEC_IKE_PROCESS_ERR_KE = 13833,ERROR_IPSEC_IKE_PROCESS_ERR_ID = 13834,ERROR_IPSEC_IKE_PROCESS_ERR_CERT = 13835,ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = 13836,ERROR_IPSEC_IKE_PROCESS_ERR_HASH = 13837,ERROR_IPSEC_IKE_PROCESS_ERR_SIG = 13838,ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = 13839,ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = 13840,ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = 13841,ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = 13842,ERROR_IPSEC_IKE_INVALID_PAYLOAD = 13843,ERROR_IPSEC_IKE_LOAD_SOFT_SA = 13844,ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = 13845,ERROR_IPSEC_IKE_INVALID_COOKIE = 13846,ERROR_IPSEC_IKE_NO_PEER_CERT = 13847,ERROR_IPSEC_IKE_PEER_CRL_FAILED = 13848,ERROR_IPSEC_IKE_POLICY_CHANGE = 13849,ERROR_IPSEC_IKE_NO_MM_POLICY = 13850,ERROR_IPSEC_IKE_NOTCBPRIV = 13851,ERROR_IPSEC_IKE_SECLOADFAIL = 13852,ERROR_IPSEC_IKE_FAILSSPINIT = 13853,ERROR_IPSEC_IKE_FAILQUERYSSP = 13854,ERROR_IPSEC_IKE_SRVACQFAIL = 13855,ERROR_IPSEC_IKE_SRVQUERYCRED = 13856,ERROR_IPSEC_IKE_GETSPIFAIL = 13857,ERROR_IPSEC_IKE_INVALID_FILTER = 13858,ERROR_IPSEC_IKE_OUT_OF_MEMORY = 13859,ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = 13860,ERROR_IPSEC_IKE_INVALID_POLICY = 13861,ERROR_IPSEC_IKE_UNKNOWN_DOI = 13862,ERROR_IPSEC_IKE_INVALID_SITUATION = 13863,ERROR_IPSEC_IKE_DH_FAILURE = 13864,ERROR_IPSEC_IKE_INVALID_GROUP = 13865,ERROR_IPSEC_IKE_ENCRYPT = 13866,ERROR_IPSEC_IKE_DECRYPT = 13867,ERROR_IPSEC_IKE_POLICY_MATCH = 13868,ERROR_IPSEC_IKE_UNSUPPORTED_ID = 13869,ERROR_IPSEC_IKE_INVALID_HASH = 13870,ERROR_IPSEC_IKE_INVALID_HASH_ALG = 13871,ERROR_IPSEC_IKE_INVALID_HASH_SIZE = 13872,ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = 13873,ERROR_IPSEC_IKE_INVALID_AUTH_ALG = 13874,ERROR_IPSEC_IKE_INVALID_SIG = 13875,ERROR_IPSEC_IKE_LOAD_FAILED = 13876,ERROR_IPSEC_IKE_RPC_DELETE = 13877,ERROR_IPSEC_IKE_BENIGN_REINIT = 13878,ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = 13879,ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = 13881,ERROR_IPSEC_IKE_MM_LIMIT = 13882,ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = 13883,ERROR_IPSEC_IKE_NEG_STATUS_END = 13884,ERROR_SXS_SECTION_NOT_FOUND = 14000,ERROR_SXS_CANT_GEN_ACTCTX = 14001,ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = 14002,ERROR_SXS_ASSEMBLY_NOT_FOUND = 14003,ERROR_SXS_MANIFEST_FORMAT_ERROR = 14004,ERROR_SXS_MANIFEST_PARSE_ERROR = 14005,ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = 14006,ERROR_SXS_KEY_NOT_FOUND = 14007,ERROR_SXS_VERSION_CONFLICT = 14008,ERROR_SXS_WRONG_SECTION_TYPE = 14009,ERROR_SXS_THREAD_QUERIES_DISABLED = 14010,ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = 14011,ERROR_SXS_UNKNOWN_ENCODING_GROUP = 14012,ERROR_SXS_UNKNOWN_ENCODING = 14013,ERROR_SXS_INVALID_XML_NAMESPACE_URI = 14014,ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14015,ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14016,ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = 14017,ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = 14018,ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = 14019,ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = 14020,ERROR_SXS_DUPLICATE_DLL_NAME = 14021,ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = 14022,ERROR_SXS_DUPLICATE_CLSID = 14023,ERROR_SXS_DUPLICATE_IID = 14024,ERROR_SXS_DUPLICATE_TLBID = 14025,ERROR_SXS_DUPLICATE_PROGID = 14026,ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = 14027,ERROR_SXS_FILE_HASH_MISMATCH = 14028,ERROR_SXS_POLICY_PARSE_ERROR = 14029,ERROR_SXS_XML_E_MISSINGQUOTE = 14030,ERROR_SXS_XML_E_COMMENTSYNTAX = 14031,ERROR_SXS_XML_E_BADSTARTNAMECHAR = 14032,ERROR_SXS_XML_E_BADNAMECHAR = 14033,ERROR_SXS_XML_E_BADCHARINSTRING = 14034,ERROR_SXS_XML_E_XMLDECLSYNTAX = 14035,ERROR_SXS_XML_E_BADCHARDATA = 14036,ERROR_SXS_XML_E_MISSINGWHITESPACE = 14037,ERROR_SXS_XML_E_EXPECTINGTAGEND = 14038,ERROR_SXS_XML_E_MISSINGSEMICOLON = 14039,ERROR_SXS_XML_E_UNBALANCEDPAREN = 14040,ERROR_SXS_XML_E_INTERNALERROR = 14041,ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = 14042,ERROR_SXS_XML_E_INCOMPLETE_ENCODING = 14043,ERROR_SXS_XML_E_MISSING_PAREN = 14044,ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = 14045,ERROR_SXS_XML_E_MULTIPLE_COLONS = 14046,ERROR_SXS_XML_E_INVALID_DECIMAL = 14047,ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = 14048,ERROR_SXS_XML_E_INVALID_UNICODE = 14049,ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = 14050,ERROR_SXS_XML_E_UNEXPECTEDENDTAG = 14051,ERROR_SXS_XML_E_UNCLOSEDTAG = 14052,ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = 14053,ERROR_SXS_XML_E_MULTIPLEROOTS = 14054,ERROR_SXS_XML_E_INVALIDATROOTLEVEL = 14055,ERROR_SXS_XML_E_BADXMLDECL = 14056,ERROR_SXS_XML_E_MISSINGROOT = 14057,ERROR_SXS_XML_E_UNEXPECTEDEOF = 14058,ERROR_SXS_XML_E_BADPEREFINSUBSET = 14059,ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = 14060,ERROR_SXS_XML_E_UNCLOSEDENDTAG = 14061,ERROR_SXS_XML_E_UNCLOSEDSTRING = 14062,ERROR_SXS_XML_E_UNCLOSEDCOMMENT = 14063,ERROR_SXS_XML_E_UNCLOSEDDECL = 14064,ERROR_SXS_XML_E_UNCLOSEDCDATA = 14065,ERROR_SXS_XML_E_RESERVEDNAMESPACE = 14066,ERROR_SXS_XML_E_INVALIDENCODING = 14067,ERROR_SXS_XML_E_INVALIDSWITCH = 14068,ERROR_SXS_XML_E_BADXMLCASE = 14069,ERROR_SXS_XML_E_INVALID_STANDALONE = 14070,ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = 14071,ERROR_SXS_XML_E_INVALID_VERSION = 14072,ERROR_SXS_XML_E_MISSINGEQUALS = 14073,ERROR_SXS_PROTECTION_RECOVERY_FAILED = 14074,ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = 14075,ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = 14076,ERROR_SXS_UNTRANSLATABLE_HRESULT = 14077,ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = 14078,ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = 14079,ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = 14080,ERROR_SXS_ASSEMBLY_MISSING = 14081,ERROR_SXS_CORRUPT_ACTIVATION_STACK = 14082,ERROR_SXS_CORRUPTION = 14083,ERROR_SXS_EARLY_DEACTIVATION = 14084,ERROR_SXS_INVALID_DEACTIVATION = 14085,ERROR_SXS_MULTIPLE_DEACTIVATION = 14086,ERROR_SXS_PROCESS_TERMINATION_REQUESTED = 14087,ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = 14088,ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 14089,ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 14090,ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 14091,ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 14092,ERROR_SXS_IDENTITY_PARSE_ERROR = 14093,ERROR_MALFORMED_SUBSTITUTION_STRING = 14094,ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = 14095,ERROR_UNMAPPED_SUBSTITUTION_STRING = 14096,ERROR_SXS_ASSEMBLY_NOT_LOCKED = 14097,ERROR_SXS_COMPONENT_STORE_CORRUPT = 14098,ERROR_ADVANCED_INSTALLER_FAILED = 14099,ERROR_XML_ENCODING_MISMATCH = 14100,ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 14101,ERROR_SXS_IDENTITIES_DIFFERENT = 14102,ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 14103,ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = 14104,ERROR_SXS_MANIFEST_TOO_BIG = 14105,ERROR_SXS_SETTING_NOT_REGISTERED = 14106,ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 14107,ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = 14108,ERROR_GENERIC_COMMAND_FAILED = 14109,ERROR_SXS_FILE_HASH_MISSING = 14110,ERROR_MUI_FILE_NOT_FOUND = 15100,ERROR_MUI_INVALID_FILE = 15101,ERROR_MUI_INVALID_RC_CONFIG = 15102,ERROR_MUI_INVALID_LOCALE_NAME = 15103,ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = 15104,ERROR_MUI_FILE_NOT_LOADED = 15105,ERROR_RESOURCE_ENUM_USER_STOP = 15106,ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = 15107,ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = 15108,ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = 15110,ERROR_MRM_INVALID_PRICONFIG = 15111,ERROR_MRM_INVALID_FILE_TYPE = 15112,ERROR_MRM_UNKNOWN_QUALIFIER = 15113,ERROR_MRM_INVALID_QUALIFIER_VALUE = 15114,ERROR_MRM_NO_CANDIDATE = 15115,ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = 15116,ERROR_MRM_RESOURCE_TYPE_MISMATCH = 15117,ERROR_MRM_DUPLICATE_MAP_NAME = 15118,ERROR_MRM_DUPLICATE_ENTRY = 15119,ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = 15120,ERROR_MRM_FILEPATH_TOO_LONG = 15121,ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = 15122,ERROR_MRM_INVALID_PRI_FILE = 15126,ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = 15127,ERROR_MRM_MAP_NOT_FOUND = 15135,ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = 15136,ERROR_MRM_INVALID_QUALIFIER_OPERATOR = 15137,ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = 15138,ERROR_MRM_AUTOMERGE_ENABLED = 15139,ERROR_MRM_TOO_MANY_RESOURCES = 15140,ERROR_MCA_INVALID_CAPABILITIES_STRING = 15200,ERROR_MCA_INVALID_VCP_VERSION = 15201,ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 15202,ERROR_MCA_MCCS_VERSION_MISMATCH = 15203,ERROR_MCA_UNSUPPORTED_MCCS_VERSION = 15204,ERROR_MCA_INTERNAL_ERROR = 15205,ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 15206,ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 15207,ERROR_AMBIGUOUS_SYSTEM_DEVICE = 15250,ERROR_SYSTEM_DEVICE_NOT_FOUND = 15299,ERROR_HASH_NOT_SUPPORTED = 15300,ERROR_HASH_NOT_PRESENT = 15301,ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED = 15321,ERROR_GPIO_CLIENT_INFORMATION_INVALID = 15322,ERROR_GPIO_VERSION_NOT_SUPPORTED = 15323,ERROR_GPIO_INVALID_REGISTRATION_PACKET = 15324,ERROR_GPIO_OPERATION_DENIED = 15325,ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = 15326,ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = 15327,ERROR_CANNOT_SWITCH_RUNLEVEL = 15400,ERROR_INVALID_RUNLEVEL_SETTING = 15401,ERROR_RUNLEVEL_SWITCH_TIMEOUT = 15402,ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = 15403,ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = 15404,ERROR_SERVICES_FAILED_AUTOSTART = 15405,ERROR_COM_TASK_STOP_PENDING = 15501,ERROR_INSTALL_OPEN_PACKAGE_FAILED = 15600,ERROR_INSTALL_PACKAGE_NOT_FOUND = 15601,ERROR_INSTALL_INVALID_PACKAGE = 15602,ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED = 15603,ERROR_INSTALL_OUT_OF_DISK_SPACE = 15604,ERROR_INSTALL_NETWORK_FAILURE = 15605,ERROR_INSTALL_REGISTRATION_FAILURE = 15606,ERROR_INSTALL_DEREGISTRATION_FAILURE = 15607,ERROR_INSTALL_CANCEL = 15608,ERROR_INSTALL_FAILED = 15609,ERROR_REMOVE_FAILED = 15610,ERROR_PACKAGE_ALREADY_EXISTS = 15611,ERROR_NEEDS_REMEDIATION = 15612,ERROR_INSTALL_PREREQUISITE_FAILED = 15613,ERROR_PACKAGE_REPOSITORY_CORRUPTED = 15614,ERROR_INSTALL_POLICY_FAILURE = 15615,ERROR_PACKAGE_UPDATING = 15616,ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = 15617,ERROR_PACKAGES_IN_USE = 15618,ERROR_RECOVERY_FILE_CORRUPT = 15619,ERROR_INVALID_STAGED_SIGNATURE = 15620,ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED = 15621,ERROR_INSTALL_PACKAGE_DOWNGRADE = 15622,ERROR_SYSTEM_NEEDS_REMEDIATION = 15623,ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = 15624,ERROR_RESILIENCY_FILE_CORRUPT = 15625,ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING = 15626,};
enum MACRO_ERROR_KM {ERROR_KM_DRIVER_BLOCKED = 1930,ERROR_CONTEXT_EXPIRED = 1931,ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = 1932,ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = 1933,ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = 1934,ERROR_AUTHENTICATION_FIREWALL_FAILED = 1935,ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = 1936,ERROR_INVALID_PIXEL_FORMAT = 2000,ERROR_BAD_DRIVER = 2001,ERROR_INVALID_WINDOW_STYLE = 2002,ERROR_METAFILE_NOT_SUPPORTED = 2003,ERROR_TRANSFORM_NOT_SUPPORTED = 2004,ERROR_CLIPPING_NOT_SUPPORTED = 2005,ERROR_INVALID_CMM = 2010,ERROR_INVALID_PROFILE = 2011,ERROR_TAG_NOT_FOUND = 2012,ERROR_TAG_NOT_PRESENT = 2013,ERROR_DUPLICATE_TAG = 2014,ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 2015,ERROR_PROFILE_NOT_FOUND = 2016,ERROR_INVALID_COLORSPACE = 2017,ERROR_ICM_NOT_ENABLED = 2018,ERROR_DELETING_ICM_XFORM = 2019,ERROR_INVALID_TRANSFORM = 2020,ERROR_COLORSPACE_MISMATCH = 2021,ERROR_INVALID_COLORINDEX = 2022,ERROR_CONNECTED_OTHER_PASSWORD = 2108,ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = 2109,ERROR_BAD_USERNAME = 2202,ERROR_NOT_CONNECTED = 2250,ERROR_OPEN_FILES = 2401,ERROR_ACTIVE_CONNECTIONS = 2402,ERROR_DEVICE_IN_USE = 2404,ERROR_UNKNOWN_PRINT_MONITOR = 3000,ERROR_PRINTER_DRIVER_IN_USE = 3001,ERROR_SPOOL_FILE_NOT_FOUND = 3002,ERROR_SPL_NO_STARTDOC = 3003,ERROR_SPL_NO_ADDJOB = 3004,ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 3005,ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 3006,ERROR_INVALID_PRINT_MONITOR = 3007,ERROR_PRINT_MONITOR_IN_USE = 3008,ERROR_PRINTER_HAS_JOBS_QUEUED = 3009,ERROR_SUCCESS_REBOOT_REQUIRED = 3010,ERROR_SUCCESS_RESTART_REQUIRED = 3011,ERROR_PRINTER_NOT_FOUND = 3012,ERROR_PRINTER_DRIVER_WARNED = 3013,ERROR_PRINTER_DRIVER_BLOCKED = 3014,ERROR_REQUEST_PAUSED = 3050,ERROR_WINS_INTERNAL = 4000,ERROR_CAN_NOT_DEL_LOCAL_WINS = 4001,ERROR_STATIC_INIT = 4002,ERROR_INC_BACKUP = 4003,ERROR_FULL_BACKUP = 4004,ERROR_REC_NON_EXISTENT = 4005,ERROR_RPL_NOT_ALLOWED = 4006,ERROR_DHCP_ADDRESS_CONFLICT = 4100,ERROR_WMI_GUID_NOT_FOUND = 4200,ERROR_WMI_INSTANCE_NOT_FOUND = 4201,ERROR_WMI_ITEMID_NOT_FOUND = 4202,ERROR_WMI_TRY_AGAIN = 4203,ERROR_WMI_DP_NOT_FOUND = 4204,ERROR_WMI_UNRESOLVED_INSTANCE_REF = 4205,ERROR_WMI_ALREADY_ENABLED = 4206,ERROR_WMI_GUID_DISCONNECTED = 4207,ERROR_WMI_SERVER_UNAVAILABLE = 4208,ERROR_WMI_DP_FAILED = 4209,ERROR_WMI_INVALID_MOF = 4210,ERROR_WMI_INVALID_REGINFO = 4211,ERROR_WMI_ALREADY_DISABLED = 4212,ERROR_WMI_READ_ONLY = 4213,ERROR_WMI_SET_FAILURE = 4214,ERROR_INVALID_MEDIA = 4300,ERROR_INVALID_LIBRARY = 4301,ERROR_INVALID_MEDIA_POOL = 4302,ERROR_DRIVE_MEDIA_MISMATCH = 4303,ERROR_MEDIA_OFFLINE = 4304,ERROR_LIBRARY_OFFLINE = 4305,ERROR_EMPTY = 4306,ERROR_NOT_EMPTY = 4307,ERROR_MEDIA_UNAVAILABLE = 4308,ERROR_RESOURCE_DISABLED = 4309,ERROR_INVALID_CLEANER = 4310,ERROR_UNABLE_TO_CLEAN = 4311,ERROR_OBJECT_NOT_FOUND = 4312,ERROR_DATABASE_FAILURE = 4313,ERROR_DATABASE_FULL = 4314,ERROR_MEDIA_INCOMPATIBLE = 4315,ERROR_RESOURCE_NOT_PRESENT = 4316,ERROR_INVALID_OPERATION = 4317,ERROR_MEDIA_NOT_AVAILABLE = 4318,ERROR_DEVICE_NOT_AVAILABLE = 4319,ERROR_REQUEST_REFUSED = 4320,ERROR_INVALID_DRIVE_OBJECT = 4321,ERROR_LIBRARY_FULL = 4322,ERROR_MEDIUM_NOT_ACCESSIBLE = 4323,ERROR_UNABLE_TO_LOAD_MEDIUM = 4324,ERROR_UNABLE_TO_INVENTORY_DRIVE = 4325,ERROR_UNABLE_TO_INVENTORY_SLOT = 4326,ERROR_UNABLE_TO_INVENTORY_TRANSPORT = 4327,ERROR_TRANSPORT_FULL = 4328,ERROR_CONTROLLING_IEPORT = 4329,ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = 4330,ERROR_CLEANER_SLOT_SET = 4331,ERROR_CLEANER_SLOT_NOT_SET = 4332,ERROR_CLEANER_CARTRIDGE_SPENT = 4333,ERROR_UNEXPECTED_OMID = 4334,ERROR_CANT_DELETE_LAST_ITEM = 4335,ERROR_MESSAGE_EXCEEDS_MAX_SIZE = 4336,ERROR_VOLUME_CONTAINS_SYS_FILES = 4337,ERROR_INDIGENOUS_TYPE = 4338,ERROR_NO_SUPPORTING_DRIVES = 4339,ERROR_CLEANER_CARTRIDGE_INSTALLED = 4340,ERROR_FILE_OFFLINE = 4350,ERROR_REMOTE_STORAGE_NOT_ACTIVE = 4351,ERROR_REMOTE_STORAGE_MEDIA_ERROR = 4352,ERROR_NOT_A_REPARSE_POINT = 4390,ERROR_REPARSE_ATTRIBUTE_CONFLICT = 4391,ERROR_INVALID_REPARSE_DATA = 4392,ERROR_REPARSE_TAG_INVALID = 4393,ERROR_REPARSE_TAG_MISMATCH = 4394,ERROR_VOLUME_NOT_SIS_ENABLED = 4500,ERROR_DEPENDENT_RESOURCE_EXISTS = 5001,ERROR_DEPENDENCY_NOT_FOUND = 5002,ERROR_DEPENDENCY_ALREADY_EXISTS = 5003,ERROR_RESOURCE_NOT_ONLINE = 5004,ERROR_HOST_NODE_NOT_AVAILABLE = 5005,ERROR_RESOURCE_NOT_AVAILABLE = 5006,ERROR_RESOURCE_NOT_FOUND = 5007,ERROR_SHUTDOWN_CLUSTER = 5008,ERROR_CANT_EVICT_ACTIVE_NODE = 5009,ERROR_OBJECT_ALREADY_EXISTS = 5010,ERROR_OBJECT_IN_LIST = 5011,ERROR_GROUP_NOT_AVAILABLE = 5012,ERROR_GROUP_NOT_FOUND = 5013,ERROR_GROUP_NOT_ONLINE = 5014,ERROR_HOST_NODE_NOT_RESOURCE_OWNER = 5015,ERROR_HOST_NODE_NOT_GROUP_OWNER = 5016,ERROR_RESMON_CREATE_FAILED = 5017,ERROR_RESMON_ONLINE_FAILED = 5018,ERROR_RESOURCE_ONLINE = 5019,ERROR_QUORUM_RESOURCE = 5020,ERROR_NOT_QUORUM_CAPABLE = 5021,ERROR_CLUSTER_SHUTTING_DOWN = 5022,ERROR_INVALID_STATE = 5023,ERROR_RESOURCE_PROPERTIES_STORED = 5024,ERROR_NOT_QUORUM_CLASS = 5025,ERROR_CORE_RESOURCE = 5026,ERROR_QUORUM_RESOURCE_ONLINE_FAILED = 5027,ERROR_QUORUMLOG_OPEN_FAILED = 5028,ERROR_CLUSTERLOG_CORRUPT = 5029,ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = 5030,ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = 5031,ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = 5032,ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = 5033,ERROR_QUORUM_OWNER_ALIVE = 5034,ERROR_NETWORK_NOT_AVAILABLE = 5035,ERROR_NODE_NOT_AVAILABLE = 5036,ERROR_ALL_NODES_NOT_AVAILABLE = 5037,ERROR_RESOURCE_FAILED = 5038,ERROR_CLUSTER_INVALID_NODE = 5039,ERROR_CLUSTER_NODE_EXISTS = 5040,ERROR_CLUSTER_JOIN_IN_PROGRESS = 5041,ERROR_CLUSTER_NODE_NOT_FOUND = 5042,ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = 5043,ERROR_CLUSTER_NETWORK_EXISTS = 5044,ERROR_CLUSTER_NETWORK_NOT_FOUND = 5045,ERROR_CLUSTER_NETINTERFACE_EXISTS = 5046,ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = 5047,ERROR_CLUSTER_INVALID_REQUEST = 5048,ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = 5049,ERROR_CLUSTER_NODE_DOWN = 5050,ERROR_CLUSTER_NODE_UNREACHABLE = 5051,ERROR_CLUSTER_NODE_NOT_MEMBER = 5052,ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = 5053,ERROR_CLUSTER_INVALID_NETWORK = 5054,ERROR_CLUSTER_NODE_UP = 5056,ERROR_CLUSTER_IPADDR_IN_USE = 5057,ERROR_CLUSTER_NODE_NOT_PAUSED = 5058,ERROR_CLUSTER_NO_SECURITY_CONTEXT = 5059,ERROR_CLUSTER_NETWORK_NOT_INTERNAL = 5060,ERROR_CLUSTER_NODE_ALREADY_UP = 5061,ERROR_CLUSTER_NODE_ALREADY_DOWN = 5062,ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = 5063,ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = 5064,ERROR_CLUSTER_NODE_ALREADY_MEMBER = 5065,ERROR_CLUSTER_LAST_INTERNAL_NETWORK = 5066,ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = 5067,ERROR_INVALID_OPERATION_ON_QUORUM = 5068,ERROR_DEPENDENCY_NOT_ALLOWED = 5069,ERROR_CLUSTER_NODE_PAUSED = 5070,ERROR_NODE_CANT_HOST_RESOURCE = 5071,ERROR_CLUSTER_NODE_NOT_READY = 5072,ERROR_CLUSTER_NODE_SHUTTING_DOWN = 5073,ERROR_CLUSTER_JOIN_ABORTED = 5074,ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = 5075,ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED = 5076,ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = 5077,ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = 5078,ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = 5079,ERROR_CLUSTER_RESNAME_NOT_FOUND = 5080,ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED = 5081,ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = 5082,ERROR_CLUSTER_DATABASE_SEQMISMATCH = 5083,ERROR_RESMON_INVALID_STATE = 5084,ERROR_CLUSTER_GUM_NOT_LOCKER = 5085,ERROR_QUORUM_DISK_NOT_FOUND = 5086,ERROR_DATABASE_BACKUP_CORRUPT = 5087,ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT = 5088,ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = 5089,ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = 5890,ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = 5891,ERROR_CLUSTER_MEMBERSHIP_HALT = 5892,ERROR_CLUSTER_INSTANCE_ID_MISMATCH = 5893,ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = 5894,ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH = 5895,ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = 5896,ERROR_CLUSTER_PARAMETER_MISMATCH = 5897,ERROR_NODE_CANNOT_BE_CLUSTERED = 5898,ERROR_CLUSTER_WRONG_OS_VERSION = 5899,ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME = 5900,ERROR_CLUSCFG_ALREADY_COMMITTED = 5901,ERROR_CLUSCFG_ROLLBACK_FAILED = 5902,ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT = 5903,ERROR_CLUSTER_OLD_VERSION = 5904,ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME = 5905,ERROR_ENCRYPTION_FAILED = 6000,ERROR_DECRYPTION_FAILED = 6001,ERROR_FILE_ENCRYPTED = 6002,ERROR_NO_RECOVERY_POLICY = 6003,ERROR_NO_EFS = 6004,ERROR_WRONG_EFS = 6005,ERROR_NO_USER_KEYS = 6006,ERROR_FILE_NOT_ENCRYPTED = 6007,ERROR_NOT_EXPORT_FORMAT = 6008,ERROR_FILE_READ_ONLY = 6009,ERROR_DIR_EFS_DISALLOWED = 6010,ERROR_EFS_SERVER_NOT_TRUSTED = 6011,ERROR_BAD_RECOVERY_POLICY = 6012,ERROR_EFS_ALG_BLOB_TOO_BIG = 6013,ERROR_VOLUME_NOT_SUPPORT_EFS = 6014,ERROR_EFS_DISABLED = 6015,ERROR_EFS_VERSION_NOT_SUPPORT = 6016,ERROR_NO_BROWSER_SERVERS_FOUND = 6118,};
enum MACRO_ERROR_NETLOGON {ERROR_NETLOGON_NOT_STARTED = 1792,ERROR_ACCOUNT_EXPIRED = 1793,ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794,ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795,ERROR_UNKNOWN_PORT = 1796,ERROR_UNKNOWN_PRINTER_DRIVER = 1797,ERROR_UNKNOWN_PRINTPROCESSOR = 1798,ERROR_INVALID_SEPARATOR_FILE = 1799,ERROR_INVALID_PRIORITY = 1800,ERROR_INVALID_PRINTER_NAME = 1801,ERROR_PRINTER_ALREADY_EXISTS = 1802,ERROR_INVALID_PRINTER_COMMAND = 1803,ERROR_INVALID_DATATYPE = 1804,ERROR_INVALID_ENVIRONMENT = 1805,};
enum MACRO_ERROR_NO {ERROR_NO_MORE_ITEMS = 259,ERROR_CANNOT_COPY = 266,ERROR_DIRECTORY = 267,ERROR_EAS_DIDNT_FIT = 275,ERROR_EA_FILE_CORRUPT = 276,ERROR_EA_TABLE_FULL = 277,ERROR_INVALID_EA_HANDLE = 278,ERROR_EAS_NOT_SUPPORTED = 282,ERROR_NOT_OWNER = 288,ERROR_TOO_MANY_POSTS = 298,ERROR_PARTIAL_COPY = 299,ERROR_OPLOCK_NOT_GRANTED = 300,ERROR_INVALID_OPLOCK_PROTOCOL = 301,ERROR_DISK_TOO_FRAGMENTED = 302,ERROR_DELETE_PENDING = 303,ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 304,ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 305,ERROR_SECURITY_STREAM_IS_INCONSISTENT = 306,ERROR_INVALID_LOCK_RANGE = 307,ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 308,ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 309,ERROR_INVALID_EXCEPTION_HANDLER = 310,ERROR_DUPLICATE_PRIVILEGES = 311,ERROR_NO_RANGES_PROCESSED = 312,ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = 313,ERROR_DISK_RESOURCES_EXHAUSTED = 314,ERROR_INVALID_TOKEN = 315,ERROR_DEVICE_FEATURE_NOT_SUPPORTED = 316,ERROR_MR_MID_NOT_FOUND = 317,ERROR_SCOPE_NOT_FOUND = 318,ERROR_UNDEFINED_SCOPE = 319,ERROR_INVALID_CAP = 320,ERROR_DEVICE_UNREACHABLE = 321,ERROR_DEVICE_NO_RESOURCES = 322,ERROR_DATA_CHECKSUM_ERROR = 323,ERROR_INTERMIXED_KERNEL_EA_OPERATION = 324,ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = 326,ERROR_OFFSET_ALIGNMENT_VIOLATION = 327,ERROR_INVALID_FIELD_IN_PARAMETER_LIST = 328,ERROR_OPERATION_IN_PROGRESS = 329,ERROR_BAD_DEVICE_PATH = 330,ERROR_TOO_MANY_DESCRIPTORS = 331,ERROR_SCRUB_DATA_DISABLED = 332,ERROR_NOT_REDUNDANT_STORAGE = 333,ERROR_RESIDENT_FILE_NOT_SUPPORTED = 334,ERROR_COMPRESSED_FILE_NOT_SUPPORTED = 335,ERROR_DIRECTORY_NOT_SUPPORTED = 336,ERROR_NOT_READ_FROM_COPY = 337,ERROR_FT_WRITE_FAILURE = 338,ERROR_FT_DI_SCAN_REQUIRED = 339,ERROR_INVALID_KERNEL_INFO_VERSION = 340,ERROR_INVALID_PEP_INFO_VERSION = 341,ERROR_FAIL_NOACTION_REBOOT = 350,ERROR_FAIL_SHUTDOWN = 351,ERROR_FAIL_RESTART = 352,ERROR_MAX_SESSIONS_REACHED = 353,ERROR_INVALID_ADDRESS = 487,ERROR_USER_PROFILE_LOAD = 500,ERROR_ARITHMETIC_OVERFLOW = 534,ERROR_PIPE_CONNECTED = 535,ERROR_PIPE_LISTENING = 536,ERROR_INVALID_LDT_SIZE = 561,ERROR_INVALID_LDT_OFFSET = 563,ERROR_INVALID_LDT_DESCRIPTOR = 564,ERROR_TOO_MANY_THREADS = 565,ERROR_THREAD_NOT_IN_PROCESS = 566,ERROR_PAGEFILE_QUOTA_EXCEEDED = 567,ERROR_LOGON_SERVER_CONFLICT = 568,ERROR_SYNCHRONIZATION_REQUIRED = 569,ERROR_NET_OPEN_FAILED = 570,ERROR_IO_PRIVILEGE_FAILED = 571,ERROR_CONTROL_C_EXIT = 572,ERROR_MISSING_SYSTEMFILE = 573,ERROR_UNHANDLED_EXCEPTION = 574,ERROR_APP_INIT_FAILURE = 575,ERROR_PAGEFILE_CREATE_FAILED = 576,ERROR_INVALID_IMAGE_HASH = 577,ERROR_NO_PAGEFILE = 578,ERROR_ILLEGAL_FLOAT_CONTEXT = 579,ERROR_NO_EVENT_PAIR = 580,ERROR_DOMAIN_CTRLR_CONFIG_ERROR = 581,ERROR_ILLEGAL_CHARACTER = 582,ERROR_UNDEFINED_CHARACTER = 583,ERROR_FLOPPY_VOLUME = 584,ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = 585,ERROR_BACKUP_CONTROLLER = 586,ERROR_MUTANT_LIMIT_EXCEEDED = 587,ERROR_FS_DRIVER_REQUIRED = 588,ERROR_CANNOT_LOAD_REGISTRY_FILE = 589,ERROR_DEBUG_ATTACH_FAILED = 590,ERROR_SYSTEM_PROCESS_TERMINATED = 591,ERROR_DATA_NOT_ACCEPTED = 592,ERROR_VDM_HARD_ERROR = 593,ERROR_DRIVER_CANCEL_TIMEOUT = 594,ERROR_REPLY_MESSAGE_MISMATCH = 595,ERROR_LOST_WRITEBEHIND_DATA = 596,ERROR_CLIENT_SERVER_PARAMETERS_INVALID = 597,ERROR_NOT_TINY_STREAM = 598,ERROR_STACK_OVERFLOW_READ = 599,ERROR_CONVERT_TO_LARGE = 600,ERROR_FOUND_OUT_OF_SCOPE = 601,ERROR_ALLOCATE_BUCKET = 602,ERROR_MARSHALL_OVERFLOW = 603,ERROR_INVALID_VARIANT = 604,ERROR_BAD_COMPRESSION_BUFFER = 605,ERROR_AUDIT_FAILED = 606,ERROR_TIMER_RESOLUTION_NOT_SET = 607,ERROR_INSUFFICIENT_LOGON_INFO = 608,ERROR_BAD_DLL_ENTRYPOINT = 609,ERROR_BAD_SERVICE_ENTRYPOINT = 610,ERROR_IP_ADDRESS_CONFLICT1 = 611,ERROR_IP_ADDRESS_CONFLICT2 = 612,ERROR_REGISTRY_QUOTA_LIMIT = 613,ERROR_NO_CALLBACK_ACTIVE = 614,ERROR_PWD_TOO_SHORT = 615,ERROR_PWD_TOO_RECENT = 616,ERROR_PWD_HISTORY_CONFLICT = 617,ERROR_UNSUPPORTED_COMPRESSION = 618,ERROR_INVALID_HW_PROFILE = 619,ERROR_INVALID_PLUGPLAY_DEVICE_PATH = 620,ERROR_QUOTA_LIST_INCONSISTENT = 621,ERROR_EVALUATION_EXPIRATION = 622,ERROR_ILLEGAL_DLL_RELOCATION = 623,ERROR_DLL_INIT_FAILED_LOGOFF = 624,ERROR_VALIDATE_CONTINUE = 625,ERROR_NO_MORE_MATCHES = 626,ERROR_RANGE_LIST_CONFLICT = 627,ERROR_SERVER_SID_MISMATCH = 628,ERROR_CANT_ENABLE_DENY_ONLY = 629,ERROR_FLOAT_MULTIPLE_FAULTS = 630,ERROR_FLOAT_MULTIPLE_TRAPS = 631,ERROR_NOINTERFACE = 632,ERROR_DRIVER_FAILED_SLEEP = 633,ERROR_CORRUPT_SYSTEM_FILE = 634,ERROR_COMMITMENT_MINIMUM = 635,ERROR_PNP_RESTART_ENUMERATION = 636,ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = 637,ERROR_PNP_REBOOT_REQUIRED = 638,ERROR_INSUFFICIENT_POWER = 639,ERROR_MULTIPLE_FAULT_VIOLATION = 640,ERROR_SYSTEM_SHUTDOWN = 641,ERROR_PORT_NOT_SET = 642,ERROR_DS_VERSION_CHECK_FAILURE = 643,ERROR_RANGE_NOT_FOUND = 644,ERROR_NOT_SAFE_MODE_DRIVER = 646,ERROR_FAILED_DRIVER_ENTRY = 647,ERROR_DEVICE_ENUMERATION_ERROR = 648,ERROR_MOUNT_POINT_NOT_RESOLVED = 649,ERROR_INVALID_DEVICE_OBJECT_PARAMETER = 650,ERROR_MCA_OCCURED = 651,ERROR_DRIVER_DATABASE_ERROR = 652,ERROR_SYSTEM_HIVE_TOO_LARGE = 653,ERROR_DRIVER_FAILED_PRIOR_UNLOAD = 654,ERROR_VOLSNAP_PREPARE_HIBERNATE = 655,ERROR_HIBERNATION_FAILURE = 656,ERROR_FILE_SYSTEM_LIMITATION = 665,ERROR_ASSERTION_FAILURE = 668,ERROR_ACPI_ERROR = 669,ERROR_WOW_ASSERTION = 670,ERROR_PNP_BAD_MPS_TABLE = 671,ERROR_PNP_TRANSLATION_FAILED = 672,ERROR_PNP_IRQ_TRANSLATION_FAILED = 673,ERROR_PNP_INVALID_ID = 674,ERROR_WAKE_SYSTEM_DEBUGGER = 675,ERROR_HANDLES_CLOSED = 676,ERROR_EXTRANEOUS_INFORMATION = 677,ERROR_RXACT_COMMIT_NECESSARY = 678,ERROR_MEDIA_CHECK = 679,ERROR_GUID_SUBSTITUTION_MADE = 680,ERROR_STOPPED_ON_SYMLINK = 681,ERROR_LONGJUMP = 682,ERROR_PLUGPLAY_QUERY_VETOED = 683,ERROR_UNWIND_CONSOLIDATE = 684,ERROR_REGISTRY_HIVE_RECOVERED = 685,ERROR_DLL_MIGHT_BE_INSECURE = 686,ERROR_DLL_MIGHT_BE_INCOMPATIBLE = 687,ERROR_DBG_EXCEPTION_NOT_HANDLED = 688,ERROR_DBG_REPLY_LATER = 689,ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = 690,ERROR_DBG_TERMINATE_THREAD = 691,ERROR_DBG_TERMINATE_PROCESS = 692,ERROR_DBG_CONTROL_C = 693,ERROR_DBG_PRINTEXCEPTION_C = 694,ERROR_DBG_RIPEXCEPTION = 695,ERROR_DBG_CONTROL_BREAK = 696,ERROR_DBG_COMMAND_EXCEPTION = 697,ERROR_OBJECT_NAME_EXISTS = 698,ERROR_THREAD_WAS_SUSPENDED = 699,ERROR_IMAGE_NOT_AT_BASE = 700,ERROR_RXACT_STATE_CREATED = 701,ERROR_SEGMENT_NOTIFICATION = 702,ERROR_BAD_CURRENT_DIRECTORY = 703,ERROR_FT_READ_RECOVERY_FROM_BACKUP = 704,ERROR_FT_WRITE_RECOVERY = 705,ERROR_IMAGE_MACHINE_TYPE_MISMATCH = 706,ERROR_RECEIVE_PARTIAL = 707,ERROR_RECEIVE_EXPEDITED = 708,ERROR_RECEIVE_PARTIAL_EXPEDITED = 709,ERROR_EVENT_DONE = 710,ERROR_EVENT_PENDING = 711,ERROR_CHECKING_FILE_SYSTEM = 712,ERROR_FATAL_APP_EXIT = 713,ERROR_PREDEFINED_HANDLE = 714,ERROR_WAS_UNLOCKED = 715,ERROR_SERVICE_NOTIFICATION = 716,ERROR_WAS_LOCKED = 717,ERROR_LOG_HARD_ERROR = 718,ERROR_ALREADY_WIN32 = 719,ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 720,ERROR_NO_YIELD_PERFORMED = 721,ERROR_TIMER_RESUME_IGNORED = 722,ERROR_ARBITRATION_UNHANDLED = 723,ERROR_CARDBUS_NOT_SUPPORTED = 724,ERROR_MP_PROCESSOR_MISMATCH = 725,ERROR_HIBERNATED = 726,ERROR_RESUME_HIBERNATION = 727,ERROR_FIRMWARE_UPDATED = 728,ERROR_DRIVERS_LEAKING_LOCKED_PAGES = 729,ERROR_WAKE_SYSTEM = 730,ERROR_WAIT_1 = 731,ERROR_WAIT_2 = 732,ERROR_WAIT_3 = 733,ERROR_WAIT_63 = 734,ERROR_ABANDONED_WAIT_0 = 735,ERROR_ABANDONED_WAIT_63 = 736,ERROR_USER_APC = 737,ERROR_KERNEL_APC = 738,ERROR_ALERTED = 739,ERROR_ELEVATION_REQUIRED = 740,ERROR_REPARSE = 741,ERROR_OPLOCK_BREAK_IN_PROGRESS = 742,ERROR_VOLUME_MOUNTED = 743,ERROR_RXACT_COMMITTED = 744,ERROR_NOTIFY_CLEANUP = 745,ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = 746,ERROR_PAGE_FAULT_TRANSITION = 747,ERROR_PAGE_FAULT_DEMAND_ZERO = 748,ERROR_PAGE_FAULT_COPY_ON_WRITE = 749,ERROR_PAGE_FAULT_GUARD_PAGE = 750,ERROR_PAGE_FAULT_PAGING_FILE = 751,ERROR_CACHE_PAGE_LOCKED = 752,ERROR_CRASH_DUMP = 753,ERROR_BUFFER_ALL_ZEROS = 754,ERROR_REPARSE_OBJECT = 755,ERROR_RESOURCE_REQUIREMENTS_CHANGED = 756,ERROR_TRANSLATION_COMPLETE = 757,ERROR_NOTHING_TO_TERMINATE = 758,ERROR_PROCESS_NOT_IN_JOB = 759,ERROR_PROCESS_IN_JOB = 760,ERROR_VOLSNAP_HIBERNATE_READY = 761,ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 762,ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = 763,ERROR_INTERRUPT_STILL_CONNECTED = 764,ERROR_WAIT_FOR_OPLOCK = 765,ERROR_DBG_EXCEPTION_HANDLED = 766,ERROR_DBG_CONTINUE = 767,ERROR_CALLBACK_POP_STACK = 768,ERROR_COMPRESSION_DISABLED = 769,ERROR_CANTFETCHBACKWARDS = 770,ERROR_CANTSCROLLBACKWARDS = 771,ERROR_ROWSNOTRELEASED = 772,ERROR_BAD_ACCESSOR_FLAGS = 773,ERROR_ERRORS_ENCOUNTERED = 774,ERROR_NOT_CAPABLE = 775,ERROR_REQUEST_OUT_OF_SEQUENCE = 776,ERROR_VERSION_PARSE_ERROR = 777,ERROR_BADSTARTPOSITION = 778,ERROR_MEMORY_HARDWARE = 779,ERROR_DISK_REPAIR_DISABLED = 780,ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 781,ERROR_SYSTEM_POWERSTATE_TRANSITION = 782,ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 783,ERROR_MCA_EXCEPTION = 784,ERROR_ACCESS_AUDIT_BY_POLICY = 785,ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 786,ERROR_ABANDON_HIBERFILE = 787,ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 788,ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 789,ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 790,ERROR_NO_ACE_CONDITION = 804,ERROR_INVALID_ACE_CONDITION = 805,ERROR_EA_ACCESS_DENIED = 994,ERROR_OPERATION_ABORTED = 995,ERROR_IO_INCOMPLETE = 996,ERROR_IO_PENDING = 997,ERROR_NOACCESS = 998,ERROR_SWAPERROR = 999,ERROR_STACK_OVERFLOW = 1001,ERROR_INVALID_MESSAGE = 1002,ERROR_CAN_NOT_COMPLETE = 1003,ERROR_INVALID_FLAGS = 1004,ERROR_UNRECOGNIZED_VOLUME = 1005,ERROR_FILE_INVALID = 1006,ERROR_FULLSCREEN_MODE = 1007,ERROR_NO_TOKEN = 1008,ERROR_BADDB = 1009,ERROR_BADKEY = 1010,ERROR_CANTOPEN = 1011,ERROR_CANTREAD = 1012,ERROR_CANTWRITE = 1013,ERROR_REGISTRY_RECOVERED = 1014,ERROR_REGISTRY_CORRUPT = 1015,ERROR_REGISTRY_IO_FAILED = 1016,ERROR_NOT_REGISTRY_FILE = 1017,ERROR_KEY_DELETED = 1018,ERROR_NO_LOG_SPACE = 1019,ERROR_KEY_HAS_CHILDREN = 1020,ERROR_CHILD_MUST_BE_VOLATILE = 1021,ERROR_NOTIFY_ENUM_DIR = 1022,ERROR_DEPENDENT_SERVICES_RUNNING = 1051,ERROR_INVALID_SERVICE_CONTROL = 1052,ERROR_SERVICE_REQUEST_TIMEOUT = 1053,ERROR_SERVICE_NO_THREAD = 1054,ERROR_SERVICE_DATABASE_LOCKED = 1055,ERROR_SERVICE_ALREADY_RUNNING = 1056,ERROR_INVALID_SERVICE_ACCOUNT = 1057,ERROR_SERVICE_DISABLED = 1058,ERROR_CIRCULAR_DEPENDENCY = 1059,ERROR_SERVICE_DOES_NOT_EXIST = 1060,ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061,ERROR_SERVICE_NOT_ACTIVE = 1062,ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063,ERROR_EXCEPTION_IN_SERVICE = 1064,ERROR_DATABASE_DOES_NOT_EXIST = 1065,ERROR_SERVICE_SPECIFIC_ERROR = 1066,ERROR_PROCESS_ABORTED = 1067,ERROR_SERVICE_DEPENDENCY_FAIL = 1068,ERROR_SERVICE_LOGON_FAILED = 1069,ERROR_SERVICE_START_HANG = 1070,ERROR_INVALID_SERVICE_LOCK = 1071,ERROR_SERVICE_MARKED_FOR_DELETE = 1072,ERROR_SERVICE_EXISTS = 1073,ERROR_ALREADY_RUNNING_LKG = 1074,ERROR_SERVICE_DEPENDENCY_DELETED = 1075,ERROR_BOOT_ALREADY_ACCEPTED = 1076,ERROR_SERVICE_NEVER_STARTED = 1077,ERROR_DUPLICATE_SERVICE_NAME = 1078,ERROR_DIFFERENT_SERVICE_ACCOUNT = 1079,ERROR_CANNOT_DETECT_DRIVER_FAILURE = 1080,ERROR_CANNOT_DETECT_PROCESS_ABORT = 1081,ERROR_NO_RECOVERY_PROGRAM = 1082,ERROR_SERVICE_NOT_IN_EXE = 1083,ERROR_NOT_SAFEBOOT_SERVICE = 1084,ERROR_END_OF_MEDIA = 1100,ERROR_FILEMARK_DETECTED = 1101,ERROR_BEGINNING_OF_MEDIA = 1102,ERROR_SETMARK_DETECTED = 1103,ERROR_NO_DATA_DETECTED = 1104,ERROR_PARTITION_FAILURE = 1105,ERROR_INVALID_BLOCK_LENGTH = 1106,ERROR_DEVICE_NOT_PARTITIONED = 1107,ERROR_UNABLE_TO_LOCK_MEDIA = 1108,ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109,ERROR_MEDIA_CHANGED = 1110,ERROR_BUS_RESET = 1111,ERROR_NO_MEDIA_IN_DRIVE = 1112,ERROR_NO_UNICODE_TRANSLATION = 1113,ERROR_DLL_INIT_FAILED = 1114,ERROR_SHUTDOWN_IN_PROGRESS = 1115,ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116,ERROR_IO_DEVICE = 1117,ERROR_SERIAL_NO_DEVICE = 1118,ERROR_IRQ_BUSY = 1119,ERROR_MORE_WRITES = 1120,ERROR_COUNTER_TIMEOUT = 1121,ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122,ERROR_FLOPPY_WRONG_CYLINDER = 1123,ERROR_FLOPPY_UNKNOWN_ERROR = 1124,ERROR_FLOPPY_BAD_REGISTERS = 1125,ERROR_DISK_RECALIBRATE_FAILED = 1126,ERROR_DISK_OPERATION_FAILED = 1127,ERROR_DISK_RESET_FAILED = 1128,ERROR_EOM_OVERFLOW = 1129,ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130,ERROR_POSSIBLE_DEADLOCK = 1131,ERROR_MAPPED_ALIGNMENT = 1132,ERROR_SET_POWER_STATE_VETOED = 1140,ERROR_SET_POWER_STATE_FAILED = 1141,ERROR_TOO_MANY_LINKS = 1142,ERROR_OLD_WIN_VERSION = 1150,ERROR_APP_WRONG_OS = 1151,ERROR_SINGLE_INSTANCE_APP = 1152,ERROR_RMODE_APP = 1153,ERROR_INVALID_DLL = 1154,ERROR_NO_ASSOCIATION = 1155,ERROR_DDE_FAIL = 1156,ERROR_DLL_NOT_FOUND = 1157,ERROR_NO_MORE_USER_HANDLES = 1158,ERROR_MESSAGE_SYNC_ONLY = 1159,ERROR_SOURCE_ELEMENT_EMPTY = 1160,ERROR_DESTINATION_ELEMENT_FULL = 1161,ERROR_ILLEGAL_ELEMENT_ADDRESS = 1162,ERROR_MAGAZINE_NOT_PRESENT = 1163,ERROR_DEVICE_REINITIALIZATION_NEEDED = 1164,ERROR_DEVICE_REQUIRES_CLEANING = 1165,ERROR_DEVICE_DOOR_OPEN = 1166,ERROR_DEVICE_NOT_CONNECTED = 1167,ERROR_NOT_FOUND = 1168,ERROR_NO_MATCH = 1169,ERROR_SET_NOT_FOUND = 1170,ERROR_POINT_NOT_FOUND = 1171,ERROR_NO_TRACKING_SERVICE = 1172,ERROR_NO_VOLUME_ID = 1173,ERROR_UNABLE_TO_REMOVE_REPLACED = 1175,ERROR_UNABLE_TO_MOVE_REPLACEMENT = 1176,ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 1177,ERROR_JOURNAL_DELETE_IN_PROGRESS = 1178,ERROR_JOURNAL_NOT_ACTIVE = 1179,ERROR_POTENTIAL_FILE_FOUND = 1180,ERROR_JOURNAL_ENTRY_DELETED = 1181,ERROR_BAD_DEVICE = 1200,ERROR_CONNECTION_UNAVAIL = 1201,ERROR_DEVICE_ALREADY_REMEMBERED = 1202,ERROR_NO_NET_OR_BAD_PATH = 1203,ERROR_BAD_PROVIDER = 1204,ERROR_CANNOT_OPEN_PROFILE = 1205,ERROR_BAD_PROFILE = 1206,ERROR_NOT_CONTAINER = 1207,ERROR_EXTENDED_ERROR = 1208,ERROR_INVALID_GROUPNAME = 1209,ERROR_INVALID_COMPUTERNAME = 1210,ERROR_INVALID_EVENTNAME = 1211,ERROR_INVALID_DOMAINNAME = 1212,ERROR_INVALID_SERVICENAME = 1213,ERROR_INVALID_NETNAME = 1214,ERROR_INVALID_SHARENAME = 1215,ERROR_INVALID_PASSWORDNAME = 1216,ERROR_INVALID_MESSAGENAME = 1217,ERROR_INVALID_MESSAGEDEST = 1218,ERROR_SESSION_CREDENTIAL_CONFLICT = 1219,ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220,ERROR_DUP_DOMAINNAME = 1221,ERROR_NO_NETWORK = 1222,ERROR_CANCELLED = 1223,ERROR_USER_MAPPED_FILE = 1224,ERROR_CONNECTION_REFUSED = 1225,ERROR_GRACEFUL_DISCONNECT = 1226,ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227,ERROR_ADDRESS_NOT_ASSOCIATED = 1228,ERROR_CONNECTION_INVALID = 1229,ERROR_CONNECTION_ACTIVE = 1230,ERROR_NETWORK_UNREACHABLE = 1231,ERROR_HOST_UNREACHABLE = 1232,ERROR_PROTOCOL_UNREACHABLE = 1233,ERROR_PORT_UNREACHABLE = 1234,ERROR_REQUEST_ABORTED = 1235,ERROR_CONNECTION_ABORTED = 1236,ERROR_RETRY = 1237,ERROR_CONNECTION_COUNT_LIMIT = 1238,ERROR_LOGIN_TIME_RESTRICTION = 1239,ERROR_LOGIN_WKSTA_RESTRICTION = 1240,ERROR_INCORRECT_ADDRESS = 1241,ERROR_ALREADY_REGISTERED = 1242,ERROR_SERVICE_NOT_FOUND = 1243,ERROR_NOT_AUTHENTICATED = 1244,ERROR_NOT_LOGGED_ON = 1245,ERROR_CONTINUE = 1246,ERROR_ALREADY_INITIALIZED = 1247,ERROR_NO_MORE_DEVICES = 1248,ERROR_NO_SUCH_SITE = 1249,ERROR_DOMAIN_CONTROLLER_EXISTS = 1250,ERROR_ONLY_IF_CONNECTED = 1251,ERROR_OVERRIDE_NOCHANGES = 1252,ERROR_BAD_USER_PROFILE = 1253,ERROR_NOT_SUPPORTED_ON_SBS = 1254,ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 1255,ERROR_HOST_DOWN = 1256,ERROR_NON_ACCOUNT_SID = 1257,ERROR_NON_DOMAIN_SID = 1258,ERROR_APPHELP_BLOCK = 1259,ERROR_ACCESS_DISABLED_BY_POLICY = 1260,ERROR_REG_NAT_CONSUMPTION = 1261,ERROR_CSCSHARE_OFFLINE = 1262,ERROR_PKINIT_FAILURE = 1263,ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 1264,ERROR_DOWNGRADE_DETECTED = 1265,ERROR_MACHINE_LOCKED = 1271,ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 1273,ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274,ERROR_DRIVER_BLOCKED = 1275,ERROR_INVALID_IMPORT_OF_NON_DLL = 1276,ERROR_ACCESS_DISABLED_WEBBLADE = 1277,ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = 1278,ERROR_RECOVERY_FAILURE = 1279,ERROR_ALREADY_FIBER = 1280,ERROR_ALREADY_THREAD = 1281,ERROR_STACK_BUFFER_OVERRUN = 1282,ERROR_PARAMETER_QUOTA_EXCEEDED = 1283,ERROR_DEBUGGER_INACTIVE = 1284,ERROR_NOT_ALL_ASSIGNED = 1300,ERROR_SOME_NOT_MAPPED = 1301,ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302,ERROR_LOCAL_USER_SESSION_KEY = 1303,ERROR_NULL_LM_PASSWORD = 1304,ERROR_UNKNOWN_REVISION = 1305,ERROR_REVISION_MISMATCH = 1306,ERROR_INVALID_OWNER = 1307,ERROR_INVALID_PRIMARY_GROUP = 1308,ERROR_NO_IMPERSONATION_TOKEN = 1309,ERROR_CANT_DISABLE_MANDATORY = 1310,ERROR_NO_LOGON_SERVERS = 1311,ERROR_NO_SUCH_LOGON_SESSION = 1312,ERROR_NO_SUCH_PRIVILEGE = 1313,ERROR_PRIVILEGE_NOT_HELD = 1314,ERROR_INVALID_ACCOUNT_NAME = 1315,ERROR_USER_EXISTS = 1316,ERROR_NO_SUCH_USER = 1317,ERROR_GROUP_EXISTS = 1318,ERROR_NO_SUCH_GROUP = 1319,ERROR_MEMBER_IN_GROUP = 1320,ERROR_MEMBER_NOT_IN_GROUP = 1321,ERROR_LAST_ADMIN = 1322,ERROR_WRONG_PASSWORD = 1323,ERROR_ILL_FORMED_PASSWORD = 1324,ERROR_PASSWORD_RESTRICTION = 1325,ERROR_LOGON_FAILURE = 1326,ERROR_ACCOUNT_RESTRICTION = 1327,ERROR_INVALID_LOGON_HOURS = 1328,ERROR_INVALID_WORKSTATION = 1329,ERROR_PASSWORD_EXPIRED = 1330,ERROR_ACCOUNT_DISABLED = 1331,ERROR_NONE_MAPPED = 1332,ERROR_TOO_MANY_LUIDS_REQUESTED = 1333,ERROR_LUIDS_EXHAUSTED = 1334,ERROR_INVALID_SUB_AUTHORITY = 1335,ERROR_INVALID_ACL = 1336,ERROR_INVALID_SID = 1337,ERROR_INVALID_SECURITY_DESCR = 1338,ERROR_BAD_INHERITANCE_ACL = 1340,ERROR_SERVER_DISABLED = 1341,ERROR_SERVER_NOT_DISABLED = 1342,ERROR_INVALID_ID_AUTHORITY = 1343,ERROR_ALLOTTED_SPACE_EXCEEDED = 1344,ERROR_INVALID_GROUP_ATTRIBUTES = 1345,ERROR_BAD_IMPERSONATION_LEVEL = 1346,ERROR_CANT_OPEN_ANONYMOUS = 1347,ERROR_BAD_VALIDATION_CLASS = 1348,ERROR_BAD_TOKEN_TYPE = 1349,ERROR_NO_SECURITY_ON_OBJECT = 1350,ERROR_CANT_ACCESS_DOMAIN_INFO = 1351,ERROR_INVALID_SERVER_STATE = 1352,ERROR_INVALID_DOMAIN_STATE = 1353,ERROR_INVALID_DOMAIN_ROLE = 1354,ERROR_NO_SUCH_DOMAIN = 1355,ERROR_DOMAIN_EXISTS = 1356,ERROR_DOMAIN_LIMIT_EXCEEDED = 1357,ERROR_INTERNAL_DB_CORRUPTION = 1358,ERROR_INTERNAL_ERROR = 1359,ERROR_GENERIC_NOT_MAPPED = 1360,ERROR_BAD_DESCRIPTOR_FORMAT = 1361,ERROR_NOT_LOGON_PROCESS = 1362,ERROR_LOGON_SESSION_EXISTS = 1363,ERROR_NO_SUCH_PACKAGE = 1364,ERROR_BAD_LOGON_SESSION_STATE = 1365,ERROR_LOGON_SESSION_COLLISION = 1366,ERROR_INVALID_LOGON_TYPE = 1367,ERROR_CANNOT_IMPERSONATE = 1368,ERROR_RXACT_INVALID_STATE = 1369,ERROR_RXACT_COMMIT_FAILURE = 1370,ERROR_SPECIAL_ACCOUNT = 1371,ERROR_SPECIAL_GROUP = 1372,ERROR_SPECIAL_USER = 1373,ERROR_MEMBERS_PRIMARY_GROUP = 1374,ERROR_TOKEN_ALREADY_IN_USE = 1375,ERROR_NO_SUCH_ALIAS = 1376,ERROR_MEMBER_NOT_IN_ALIAS = 1377,ERROR_MEMBER_IN_ALIAS = 1378,ERROR_ALIAS_EXISTS = 1379,ERROR_LOGON_NOT_GRANTED = 1380,ERROR_TOO_MANY_SECRETS = 1381,ERROR_SECRET_TOO_LONG = 1382,ERROR_INTERNAL_DB_ERROR = 1383,ERROR_TOO_MANY_CONTEXT_IDS = 1384,ERROR_LOGON_TYPE_NOT_GRANTED = 1385,ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386,ERROR_NO_SUCH_MEMBER = 1387,ERROR_INVALID_MEMBER = 1388,ERROR_TOO_MANY_SIDS = 1389,ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390,ERROR_NO_INHERITANCE = 1391,ERROR_FILE_CORRUPT = 1392,ERROR_DISK_CORRUPT = 1393,ERROR_NO_USER_SESSION_KEY = 1394,ERROR_LICENSE_QUOTA_EXCEEDED = 1395,ERROR_WRONG_TARGET_NAME = 1396,ERROR_MUTUAL_AUTH_FAILED = 1397,ERROR_TIME_SKEW = 1398,ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 1399,ERROR_INVALID_WINDOW_HANDLE = 1400,ERROR_INVALID_MENU_HANDLE = 1401,ERROR_INVALID_CURSOR_HANDLE = 1402,ERROR_INVALID_ACCEL_HANDLE = 1403,ERROR_INVALID_HOOK_HANDLE = 1404,ERROR_INVALID_DWP_HANDLE = 1405,ERROR_TLW_WITH_WSCHILD = 1406,ERROR_CANNOT_FIND_WND_CLASS = 1407,ERROR_WINDOW_OF_OTHER_THREAD = 1408,ERROR_HOTKEY_ALREADY_REGISTERED = 1409,ERROR_CLASS_ALREADY_EXISTS = 1410,ERROR_CLASS_DOES_NOT_EXIST = 1411,ERROR_CLASS_HAS_WINDOWS = 1412,ERROR_INVALID_INDEX = 1413,ERROR_INVALID_ICON_HANDLE = 1414,ERROR_PRIVATE_DIALOG_INDEX = 1415,ERROR_LISTBOX_ID_NOT_FOUND = 1416,ERROR_NO_WILDCARD_CHARACTERS = 1417,ERROR_CLIPBOARD_NOT_OPEN = 1418,ERROR_HOTKEY_NOT_REGISTERED = 1419,ERROR_WINDOW_NOT_DIALOG = 1420,ERROR_CONTROL_ID_NOT_FOUND = 1421,ERROR_INVALID_COMBOBOX_MESSAGE = 1422,ERROR_WINDOW_NOT_COMBOBOX = 1423,ERROR_INVALID_EDIT_HEIGHT = 1424,ERROR_DC_NOT_FOUND = 1425,ERROR_INVALID_HOOK_FILTER = 1426,ERROR_INVALID_FILTER_PROC = 1427,ERROR_HOOK_NEEDS_HMOD = 1428,ERROR_GLOBAL_ONLY_HOOK = 1429,ERROR_JOURNAL_HOOK_SET = 1430,ERROR_HOOK_NOT_INSTALLED = 1431,ERROR_INVALID_LB_MESSAGE = 1432,ERROR_SETCOUNT_ON_BAD_LB = 1433,ERROR_LB_WITHOUT_TABSTOPS = 1434,ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435,ERROR_CHILD_WINDOW_MENU = 1436,ERROR_NO_SYSTEM_MENU = 1437,ERROR_INVALID_MSGBOX_STYLE = 1438,ERROR_INVALID_SPI_VALUE = 1439,ERROR_SCREEN_ALREADY_LOCKED = 1440,ERROR_HWNDS_HAVE_DIFF_PARENT = 1441,ERROR_NOT_CHILD_WINDOW = 1442,ERROR_INVALID_GW_COMMAND = 1443,ERROR_INVALID_THREAD_ID = 1444,ERROR_NON_MDICHILD_WINDOW = 1445,ERROR_POPUP_ALREADY_ACTIVE = 1446,ERROR_NO_SCROLLBARS = 1447,ERROR_INVALID_SCROLLBAR_RANGE = 1448,ERROR_INVALID_SHOWWIN_COMMAND = 1449,ERROR_NO_SYSTEM_RESOURCES = 1450,ERROR_NONPAGED_SYSTEM_RESOURCES = 1451,ERROR_PAGED_SYSTEM_RESOURCES = 1452,ERROR_WORKING_SET_QUOTA = 1453,ERROR_PAGEFILE_QUOTA = 1454,ERROR_COMMITMENT_LIMIT = 1455,ERROR_MENU_ITEM_NOT_FOUND = 1456,ERROR_INVALID_KEYBOARD_HANDLE = 1457,ERROR_HOOK_TYPE_NOT_ALLOWED = 1458,ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 1459,ERROR_TIMEOUT = 1460,ERROR_INVALID_MONITOR_HANDLE = 1461,ERROR_INCORRECT_SIZE = 1462,ERROR_SYMLINK_CLASS_DISABLED = 1463,ERROR_SYMLINK_NOT_SUPPORTED = 1464,ERROR_XML_PARSE_ERROR = 1465,ERROR_XMLDSIG_ERROR = 1466,ERROR_RESTART_APPLICATION = 1467,ERROR_WRONG_COMPARTMENT = 1468,ERROR_AUTHIP_FAILURE = 1469,ERROR_NO_NVRAM_RESOURCES = 1470,ERROR_EVENTLOG_FILE_CORRUPT = 1500,ERROR_EVENTLOG_CANT_START = 1501,ERROR_LOG_FILE_FULL = 1502,ERROR_EVENTLOG_FILE_CHANGED = 1503,ERROR_INVALID_TASK_NAME = 1550,ERROR_INVALID_TASK_INDEX = 1551,ERROR_THREAD_ALREADY_IN_TASK = 1552,ERROR_INSTALL_SERVICE_FAILURE = 1601,ERROR_INSTALL_USEREXIT = 1602,ERROR_INSTALL_FAILURE = 1603,ERROR_INSTALL_SUSPEND = 1604,ERROR_UNKNOWN_PRODUCT = 1605,ERROR_UNKNOWN_FEATURE = 1606,ERROR_UNKNOWN_COMPONENT = 1607,ERROR_UNKNOWN_PROPERTY = 1608,ERROR_INVALID_HANDLE_STATE = 1609,ERROR_BAD_CONFIGURATION = 1610,ERROR_INDEX_ABSENT = 1611,ERROR_INSTALL_SOURCE_ABSENT = 1612,ERROR_INSTALL_PACKAGE_VERSION = 1613,ERROR_PRODUCT_UNINSTALLED = 1614,ERROR_BAD_QUERY_SYNTAX = 1615,ERROR_INVALID_FIELD = 1616,ERROR_DEVICE_REMOVED = 1617,ERROR_INSTALL_ALREADY_RUNNING = 1618,ERROR_INSTALL_PACKAGE_OPEN_FAILED = 1619,ERROR_INSTALL_PACKAGE_INVALID = 1620,ERROR_INSTALL_UI_FAILURE = 1621,ERROR_INSTALL_LOG_FAILURE = 1622,ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 1623,ERROR_INSTALL_TRANSFORM_FAILURE = 1624,ERROR_INSTALL_PACKAGE_REJECTED = 1625,ERROR_FUNCTION_NOT_CALLED = 1626,ERROR_FUNCTION_FAILED = 1627,ERROR_INVALID_TABLE = 1628,ERROR_DATATYPE_MISMATCH = 1629,ERROR_UNSUPPORTED_TYPE = 1630,ERROR_CREATE_FAILED = 1631,ERROR_INSTALL_TEMP_UNWRITABLE = 1632,ERROR_INSTALL_PLATFORM_UNSUPPORTED = 1633,ERROR_INSTALL_NOTUSED = 1634,ERROR_PATCH_PACKAGE_OPEN_FAILED = 1635,ERROR_PATCH_PACKAGE_INVALID = 1636,ERROR_PATCH_PACKAGE_UNSUPPORTED = 1637,ERROR_PRODUCT_VERSION = 1638,ERROR_INVALID_COMMAND_LINE = 1639,ERROR_INSTALL_REMOTE_DISALLOWED = 1640,ERROR_SUCCESS_REBOOT_INITIATED = 1641,ERROR_PATCH_TARGET_NOT_FOUND = 1642,ERROR_PATCH_PACKAGE_REJECTED = 1643,ERROR_INSTALL_TRANSFORM_REJECTED = 1644,ERROR_INSTALL_REMOTE_PROHIBITED = 1645,ERROR_PATCH_REMOVAL_UNSUPPORTED = 1646,ERROR_UNKNOWN_PATCH = 1647,ERROR_PATCH_NO_SEQUENCE = 1648,ERROR_PATCH_REMOVAL_DISALLOWED = 1649,ERROR_INVALID_PATCH_XML = 1650,ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = 1651,ERROR_INSTALL_SERVICE_SAFEBOOT = 1652,};
enum MACRO_ERROR_NOLOGON {ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807,ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808,ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809,ERROR_DOMAIN_TRUST_INCONSISTENT = 1810,ERROR_SERVER_HAS_OPEN_HANDLES = 1811,ERROR_RESOURCE_DATA_NOT_FOUND = 1812,ERROR_RESOURCE_TYPE_NOT_FOUND = 1813,ERROR_RESOURCE_NAME_NOT_FOUND = 1814,ERROR_RESOURCE_LANG_NOT_FOUND = 1815,ERROR_NOT_ENOUGH_QUOTA = 1816,};
enum MACRO_ERROR_NO_SITENAME {ERROR_NO_SITENAME = 1919,ERROR_CANT_ACCESS_FILE = 1920,ERROR_CANT_RESOLVE_FILENAME = 1921,};
enum MACRO_ERROR_SEVERITY {ERROR_SEVERITY_SUCCESS = 0x0,ERROR_SEVERITY_INFORMATIONAL = 0x40000000,ERROR_SEVERITY_WARNING = 0x80000000,ERROR_SEVERITY_ERROR = 0xC0000000,};
enum MACRO_ES {ES_SYSTEM_REQUIRED = 0x1,ES_DISPLAY_REQUIRED = 0x2,ES_USER_PRESENT = 0x4,ES_CONTINUOUS = 0x80000000,};
enum MACRO_ESPIPE {ESPIPE = 29,};
enum MACRO_ESRCH {ESRCH = 3,EINTR = 4,};
enum MACRO_ETO {ETO_GRAYED = 0x1,ETO_OPAQUE = 0x2,ETO_CLIPPED = 0x4,ETO_GLYPH_INDEX = 0x10,ETO_RTLREADING = 0x80,ETO_NUMERICSLOCAL = 0x400,ETO_NUMERICSLATIN = 0x800,ETO_IGNORELANGUAGE = 0x1000,ETO_PDY = 0x2000,ETO_REVERSE_INDEX_MAP = 0x10000,};
enum MACRO_EVENT {EVENT_PAIR_ALL_ACCESS = 0x1F0000,};
enum MACRO_EVENTLOG {EVENTLOG_SEQUENTIAL_READ = 1,EVENTLOG_SEEK_READ = 2,EVENTLOG_FORWARDS_READ = 4,EVENTLOG_BACKWARDS_READ = 8,EVENTLOG_SUCCESS = 0,EVENTLOG_ERROR_TYPE = 1,EVENTLOG_WARNING_TYPE = 2,EVENTLOG_INFORMATION_TYPE = 4,EVENTLOG_AUDIT_SUCCESS = 8,EVENTLOG_AUDIT_FAILURE = 16,};
enum MACRO_EWOULDBLOCK {EWOULDBLOCK = 140,};
enum MACRO_EX {EX_PUSH_LOCK_LOCK_V = 0x0,EX_PUSH_LOCK_LOCK = 0x1,EX_PUSH_LOCK_WAITING = 0x2,EX_PUSH_LOCK_WAKING = 0x4,EX_PUSH_LOCK_MULTIPLE_SHARED = 0x8,EX_PUSH_LOCK_SHARE_INC = 0x10,EX_PUSH_LOCK_PTR_BITS = 0xF,EX_PUSH_LOCK_FLAGS_EXCLUSIVE = 0x1,EX_PUSH_LOCK_FLAGS_WAIT_V = 0x1,EX_PUSH_LOCK_FLAGS_WAIT = 0x2,};
enum MACRO_EXCEPTION {EXCEPTION_EXECUTE_HANDLER = 1,EXCEPTION_CONTINUE_SEARCH = 0,EXCEPTION_CONTINUE_EXECUTION = -1,};
enum MACRO_EXCEPTION_DIVIDED {EXCEPTION_DIVIDED_BY_ZERO = 0,EXCEPTION_DEBUG = 1,EXCEPTION_NMI = 2,EXCEPTION_INT3 = 3,EXCEPTION_BOUND_CHECK = 5,EXCEPTION_INVALID_OPCODE = 6,EXCEPTION_NPX_NOT_AVAILABLE = 7,EXCEPTION_DOUBLE_FAULT = 8,EXCEPTION_NPX_OVERRUN = 9,EXCEPTION_INVALID_TSS = 10,EXCEPTION_SEGMENT_NOT_PRESENT = 11,EXCEPTION_STACK_FAULT = 12,EXCEPTION_GP_FAULT = 13,EXCEPTION_RESERVED_TRAP = 15,EXCEPTION_NPX_ERROR = 16,EXCEPTION_ALIGNMENT_CHECK = 17,};
enum MACRO_EXCEPTION_READ {EXCEPTION_READ_FAULT = 0,EXCEPTION_WRITE_FAULT = 1,EXCEPTION_EXECUTE_FAULT = 8,EXCEPTION_MAXIMUM_PARAMETERS = 15,EXCEPTION_NONCONTINUABLE = 1,EXCEPTION_UNWINDING = 2,EXCEPTION_EXIT_UNWIND = 4,EXCEPTION_STACK_INVALID = 8,EXCEPTION_NESTED_CALL = 16,EXCEPTION_TARGET_UNWIND = 32,EXCEPTION_COLLIDED_UNWIND = 64,EXCEPTION_UNWIND = 102,};
enum MACRO_EXCEPTION_RECORD {EXCEPTION_RECORD_EXCEPTION_CODE = 0x0,EXCEPTION_RECORD_EXCEPTION_FLAGS = 0x4,EXCEPTION_RECORD_EXCEPTION_RECORD = 0x8,EXCEPTION_RECORD_EXCEPTION_ADDRESS = 0xC,EXCEPTION_RECORD_NUMBER_PARAMETERS = 0x10,};
enum MACRO_EXCEPTION_RECORD_LENGTH {EXCEPTION_RECORD_LENGTH = 0x50,};
enum MACRO_EXDEV {EXDEV = 18,};
enum MACRO_EXP {FLT_MIN_EXP = -125,DBL_MIN_EXP = -1021,LDBL_MIN_EXP = -1021,FLT_MIN_10_EXP = -37,DBL_MIN_10_EXP = -307,LDBL_MIN_10_EXP = -307,FLT_MAX_EXP = 128,DBL_MAX_EXP = 1024,LDBL_MAX_EXP = 1024,FLT_MAX_10_EXP = 38,DBL_MAX_10_EXP = 308,LDBL_MAX_10_EXP = 308,};
enum MACRO_EXT {EXT_DEVICE_CAPS = 4099,};
enum MACRO_FACILITY {FACILITY_NULL = 0,FACILITY_RPC = 1,FACILITY_DISPATCH = 2,FACILITY_STORAGE = 3,FACILITY_ITF = 4,FACILITY_WIN32 = 7,FACILITY_WINDOWS = 8,FACILITY_SSPI = 9,FACILITY_SECURITY = 9,FACILITY_CONTROL = 10,FACILITY_CERT = 11,FACILITY_INTERNET = 12,FACILITY_MEDIASERVER = 13,FACILITY_MSMQ = 14,FACILITY_SETUPAPI = 15,FACILITY_SCARD = 16,FACILITY_COMPLUS = 17,FACILITY_AAF = 18,FACILITY_URT = 19,FACILITY_ACS = 20,FACILITY_DPLAY = 21,FACILITY_UMI = 22,FACILITY_SXS = 23,FACILITY_WINDOWS_CE = 24,FACILITY_HTTP = 25,FACILITY_COMMONLOG = 26,FACILITY_USERMODE_FILTER_MANAGER = 31,FACILITY_BACKGROUNDCOPY = 32,FACILITY_CONFIGURATION = 33,FACILITY_STATE_MANAGEMENT = 34,FACILITY_METADIRECTORY = 35,FACILITY_WINDOWSUPDATE = 36,FACILITY_DIRECTORYSERVICE = 37,FACILITY_GRAPHICS = 38,FACILITY_SHELL = 39,FACILITY_TPM_SERVICES = 40,FACILITY_TPM_SOFTWARE = 41,FACILITY_PLA = 48,FACILITY_FVE = 49,FACILITY_WINDOWS_DEFENDER = 80,FACILITY_DIRECT3D11 = 2172,};
enum MACRO_FACILITY_DEBUGGER {FACILITY_DEBUGGER = 0x1,FACILITY_RPC_RUNTIME = 0x2,FACILITY_RPC_STUBS = 0x3,FACILITY_IO_ERROR_CODE = 0x4,FACILITY_TERMINAL_SERVER = 0xA,FACILITY_USB_ERROR_CODE = 0x10,FACILITY_HID_ERROR_CODE = 0x11,FACILITY_FIREWIRE_ERROR_CODE = 0x12,FACILITY_CLUSTER_ERROR_CODE = 0x13,FACILITY_ACPI_ERROR_CODE = 0x14,FACILITY_SXS_ERROR_CODE = 0x15,};
enum MACRO_FACILITY_NT {FACILITY_NT_BIT = 0x10000000,};
enum MACRO_FC {FC_RECT = 1,FC_RECT4 = 2,FC_COMPLEX = 3,};
enum MACRO_FD {FD_ERROR = 0xFFFFFFFF,DDI_ERROR = 0xFFFFFFFF,};
enum MACRO_FDM {FDM_TYPE_BM_SIDE_CONST = 0x1,FDM_TYPE_MAXEXT_EQUAL_BM_SIDE = 0x2,FDM_TYPE_CHAR_INC_EQUAL_BM_BASE = 0x4,FDM_TYPE_ZERO_BEARINGS = 0x8,FDM_TYPE_CONST_BEARINGS = 0x10,};
enum MACRO_FD_NEGATIVE {FD_NEGATIVE_FONT = 1,};
enum MACRO_FF {FF_DECORATIVE = 80,FF_DONTCARE = 0,FF_MODERN = 48,FF_ROMAN = 16,FF_SCRIPT = 64,FF_SWISS = 32,};
enum MACRO_FF_SIGNATURE {FF_SIGNATURE_VERIFIED = 0x1,FF_IGNORED_SIGNATURE = 0x2,};
enum MACRO_FIBER {FIBER_PARAMETER = 0x0,FIBER_EXCEPTION_LIST = 0x4,FIBER_STACK_BASE = 0x8,FIBER_STACK_LIMIT = 0xC,FIBER_DEALLOCATION_STACK = 0x10,FIBER_CONTEXT = 0x14,FIBER_GUARANTEED_STACK_BYTES = 0x2E0,FIBER_FLS_DATA = 0x2E4,FIBER_ACTIVATION_CONTEXT_STACK = 0x2E8,FIBER_CONTEXT_FLAGS = 0x14,FIBER_CONTEXT_EAX = 0xC4,FIBER_CONTEXT_EBX = 0xB8,FIBER_CONTEXT_ECX = 0xC0,FIBER_CONTEXT_EDX = 0xBC,FIBER_CONTEXT_ESI = 0xB4,FIBER_CONTEXT_EDI = 0xB0,FIBER_CONTEXT_EBP = 0xC8,FIBER_CONTEXT_EIP = 0xCC,FIBER_CONTEXT_ESP = 0xD8,FIBER_CONTEXT_DR6 = 0x28,FIBER_CONTEXT_FLOAT_SAVE_STATUS_WORD = 0x34,FIBER_CONTEXT_FLOAT_SAVE_CONTROL_WORD = 0x30,FIBER_CONTEXT_FLOAT_SAVE_TAG_WORD = 0x38,};
enum MACRO_FILE {FILE_LIST_DIRECTORY = 0x1,FILE_READ_DATA = 0x1,FILE_ADD_FILE = 0x2,FILE_WRITE_DATA = 0x2,FILE_ADD_SUBDIRECTORY = 0x4,FILE_APPEND_DATA = 0x4,FILE_CREATE_PIPE_INSTANCE = 0x4,FILE_READ_EA = 0x8,FILE_READ_PROPERTIES = 0x8,FILE_WRITE_EA = 0x10,FILE_WRITE_PROPERTIES = 0x10,FILE_EXECUTE = 0x20,FILE_TRAVERSE = 0x20,FILE_DELETE_CHILD = 0x40,FILE_READ_ATTRIBUTES = 0x80,FILE_WRITE_ATTRIBUTES = 0x100,FILE_SHARE_READ = 0x1,FILE_SHARE_WRITE = 0x2,FILE_SHARE_DELETE = 0x4,FILE_SHARE_VALID_FLAGS = 0x7,FILE_ATTRIBUTE_READONLY = 0x1,FILE_ATTRIBUTE_HIDDEN = 0x2,FILE_ATTRIBUTE_SYSTEM = 0x4,FILE_ATTRIBUTE_DIRECTORY = 0x10,FILE_ATTRIBUTE_ARCHIVE = 0x20,FILE_ATTRIBUTE_DEVICE = 0x40,FILE_ATTRIBUTE_NORMAL = 0x80,FILE_ATTRIBUTE_TEMPORARY = 0x100,FILE_ATTRIBUTE_SPARSE_FILE = 0x200,FILE_ATTRIBUTE_REPARSE_POINT = 0x400,FILE_ATTRIBUTE_COMPRESSED = 0x800,FILE_ATTRIBUTE_OFFLINE = 0x1000,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 0x2000,FILE_ATTRIBUTE_ENCRYPTED = 0x4000,FILE_ATTRIBUTE_INTEGRITY_STREAM = 0x8000,FILE_ATTRIBUTE_VALID_FLAGS = 0x7FB7,FILE_ATTRIBUTE_VALID_SET_FLAGS = 0x31A7,FILE_COPY_STRUCTURED_STORAGE = 0x41,FILE_STRUCTURED_STORAGE = 0x441,FILE_VALID_OPTION_FLAGS = 0xFFFFFF,FILE_VALID_PIPE_OPTION_FLAGS = 0x32,FILE_VALID_MAILSLOT_OPTION_FLAGS = 0x32,FILE_VALID_SET_FLAGS = 0x36,FILE_DIRECTORY_FILE = 0x1,FILE_WRITE_THROUGH = 0x2,FILE_SEQUENTIAL_ONLY = 0x4,FILE_NO_INTERMEDIATE_BUFFERING = 0x8,FILE_SYNCHRONOUS_IO_ALERT = 0x10,FILE_SYNCHRONOUS_IO_NONALERT = 0x20,FILE_NON_DIRECTORY_FILE = 0x40,FILE_CREATE_TREE_CONNECTION = 0x80,FILE_COMPLETE_IF_OPLOCKED = 0x100,FILE_NO_EA_KNOWLEDGE = 0x200,FILE_OPEN_REMOTE_INSTANCE = 0x400,FILE_RANDOM_ACCESS = 0x800,FILE_DELETE_ON_CLOSE = 0x1000,FILE_OPEN_BY_FILE_ID = 0x2000,FILE_OPEN_FOR_BACKUP_INTENT = 0x4000,FILE_NO_COMPRESSION = 0x8000,FILE_RESERVE_OPFILTER = 0x100000,FILE_OPEN_REPARSE_POINT = 0x200000,FILE_OPEN_NO_RECALL = 0x400000,FILE_OPEN_FOR_FREE_SPACE_QUERY = 0x800000,FILE_NOTIFY_CHANGE_FILE_NAME = 0x1,FILE_NOTIFY_CHANGE_DIR_NAME = 0x2,FILE_NOTIFY_CHANGE_NAME = 0x3,FILE_NOTIFY_CHANGE_ATTRIBUTES = 0x4,FILE_NOTIFY_CHANGE_SIZE = 0x8,FILE_NOTIFY_CHANGE_LAST_WRITE = 0x10,FILE_NOTIFY_CHANGE_LAST_ACCESS = 0x20,FILE_NOTIFY_CHANGE_CREATION = 0x40,FILE_NOTIFY_CHANGE_EA = 0x80,FILE_NOTIFY_CHANGE_SECURITY = 0x100,FILE_NOTIFY_CHANGE_STREAM_NAME = 0x200,FILE_NOTIFY_CHANGE_STREAM_SIZE = 0x400,FILE_NOTIFY_CHANGE_STREAM_WRITE = 0x800,FILE_NOTIFY_VALID_MASK = 0xFFF,FILE_CASE_SENSITIVE_SEARCH = 0x1,FILE_CASE_PRESERVED_NAMES = 0x2,FILE_UNICODE_ON_DISK = 0x4,FILE_PERSISTENT_ACLS = 0x8,FILE_FILE_COMPRESSION = 0x10,FILE_VOLUME_QUOTAS = 0x20,FILE_SUPPORTS_SPARSE_FILES = 0x40,FILE_SUPPORTS_REPARSE_POINTS = 0x80,FILE_SUPPORTS_REMOTE_STORAGE = 0x100,};
enum MACRO_FILENO {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_FILESYSTEM {FILESYSTEM_STATISTICS_TYPE_NTFS = 1,FILESYSTEM_STATISTICS_TYPE_FAT = 2,FILESYSTEM_STATISTICS_TYPE_EXFAT = 3,};
enum MACRO_FILE_ACTION {FILE_ACTION_ADDED = 0x1,FILE_ACTION_REMOVED = 0x2,FILE_ACTION_MODIFIED = 0x3,FILE_ACTION_RENAMED_OLD_NAME = 0x4,FILE_ACTION_RENAMED_NEW_NAME = 0x5,FILE_ACTION_ADDED_STREAM = 0x6,FILE_ACTION_REMOVED_STREAM = 0x7,FILE_ACTION_MODIFIED_STREAM = 0x8,FILE_ACTION_REMOVED_BY_DELETE = 0x9,FILE_ACTION_ID_NOT_TUNNELLED = 0xA,FILE_ACTION_TUNNELLED_ID_COLLISION = 0xB,};
enum MACRO_FILE_DEVICE {FILE_DEVICE_BEEP = 1,FILE_DEVICE_CD_ROM = 2,FILE_DEVICE_CD_ROM_FILE_SYSTEM = 3,FILE_DEVICE_CONTROLLER = 4,FILE_DEVICE_DATALINK = 5,FILE_DEVICE_DFS = 6,FILE_DEVICE_DISK = 7,FILE_DEVICE_DISK_FILE_SYSTEM = 8,FILE_DEVICE_FILE_SYSTEM = 9,FILE_DEVICE_INPORT_PORT = 10,FILE_DEVICE_KEYBOARD = 11,FILE_DEVICE_MAILSLOT = 12,FILE_DEVICE_MIDI_IN = 13,FILE_DEVICE_MIDI_OUT = 14,FILE_DEVICE_MOUSE = 15,FILE_DEVICE_MULTI_UNC_PROVIDER = 16,FILE_DEVICE_NAMED_PIPE = 17,FILE_DEVICE_NETWORK = 18,FILE_DEVICE_NETWORK_BROWSER = 19,FILE_DEVICE_NETWORK_FILE_SYSTEM = 20,FILE_DEVICE_NULL = 21,FILE_DEVICE_PARALLEL_PORT = 22,FILE_DEVICE_PHYSICAL_NETCARD = 23,FILE_DEVICE_PRINTER = 24,FILE_DEVICE_SCANNER = 25,FILE_DEVICE_SERIAL_MOUSE_PORT = 26,FILE_DEVICE_SERIAL_PORT = 27,FILE_DEVICE_SCREEN = 28,FILE_DEVICE_SOUND = 29,FILE_DEVICE_STREAMS = 30,FILE_DEVICE_TAPE = 31,FILE_DEVICE_TAPE_FILE_SYSTEM = 32,FILE_DEVICE_TRANSPORT = 33,FILE_DEVICE_UNKNOWN = 34,FILE_DEVICE_VIDEO = 35,FILE_DEVICE_VIRTUAL_DISK = 36,FILE_DEVICE_WAVE_IN = 37,FILE_DEVICE_WAVE_OUT = 38,FILE_DEVICE_8042_PORT = 39,FILE_DEVICE_NETWORK_REDIRECTOR = 40,FILE_DEVICE_BATTERY = 41,FILE_DEVICE_BUS_EXTENDER = 42,FILE_DEVICE_MODEM = 43,FILE_DEVICE_VDM = 44,FILE_DEVICE_MASS_STORAGE = 45,FILE_DEVICE_SMB = 46,FILE_DEVICE_KS = 47,FILE_DEVICE_CHANGER = 48,FILE_DEVICE_SMARTCARD = 49,FILE_DEVICE_ACPI = 50,FILE_DEVICE_DVD = 51,FILE_DEVICE_FULLSCREEN_VIDEO = 52,FILE_DEVICE_DFS_FILE_SYSTEM = 53,FILE_DEVICE_DFS_VOLUME = 54,FILE_DEVICE_SERENUM = 55,FILE_DEVICE_TERMSRV = 56,FILE_DEVICE_KSEC = 57,FILE_ANY_ACCESS = 0,FILE_SPECIAL_ACCESS = 0,FILE_READ_ACCESS = 1,FILE_WRITE_ACCESS = 2,};
enum MACRO_FILE_SUPERSEDED {FILE_SUPERSEDED = 0x0,FILE_OPENED = 0x1,FILE_CREATED = 0x2,FILE_OVERWRITTEN = 0x3,FILE_EXISTS = 0x4,FILE_DOES_NOT_EXIST = 0x5,FILE_PIPE_BYTE_STREAM_TYPE = 0x0,FILE_PIPE_MESSAGE_TYPE = 0x1,FILE_PIPE_BYTE_STREAM_MODE = 0x0,FILE_PIPE_MESSAGE_MODE = 0x1,FILE_PIPE_QUEUE_OPERATION = 0x0,FILE_PIPE_COMPLETE_OPERATION = 0x1,FILE_PIPE_INBOUND = 0x0,FILE_PIPE_OUTBOUND = 0x1,FILE_PIPE_FULL_DUPLEX = 0x2,FILE_PIPE_CLIENT_END = 0x0,FILE_PIPE_SERVER_END = 0x1,FILE_SUPERSEDE = 0x0,FILE_OPEN = 0x1,FILE_CREATE = 0x2,FILE_OPEN_IF = 0x3,FILE_OVERWRITE = 0x4,FILE_OVERWRITE_IF = 0x5,FILE_MAXIMUM_DISPOSITION = 0x5,FILE_REMOVABLE_MEDIA = 0x1,FILE_READ_ONLY_DEVICE = 0x2,FILE_FLOPPY_DISKETTE = 0x4,FILE_WRITE_ONCE_MEDIA = 0x8,FILE_REMOTE_DEVICE = 0x10,FILE_DEVICE_IS_MOUNTED = 0x20,FILE_VIRTUAL_VOLUME = 0x40,FILE_AUTOGENERATED_DEVICE_NAME = 0x80,FILE_DEVICE_SECURE_OPEN = 0x100,};
enum MACRO_FILE_VOLUME {FILE_VOLUME_IS_COMPRESSED = 0x8000,FILE_SUPPORTS_OBJECT_IDS = 0x10000,FILE_SUPPORTS_ENCRYPTION = 0x20000,FILE_NAMED_STREAMS = 0x40000,FILE_READ_ONLY_VOLUME = 0x80000,FILE_SEQUENTIAL_WRITE_ONCE = 0x100000,FILE_SUPPORTS_TRANSACTIONS = 0x200000,FILE_SUPPORTS_HARD_LINKS = 0x400000,FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 0x800000,FILE_SUPPORTS_OPEN_BY_FILE_ID = 0x1000000,FILE_SUPPORTS_USN_JOURNAL = 0x2000000,FILE_SUPPORTS_INTEGRITY_STREAMS = 0x4000000,FILE_SUPPORTS_BLOCK_REFCOUNTING = 0x8000000,FILE_SUPPORTS_SPARSE_VDL = 0x10000000,FILE_DAX_VOLUME = 0x20000000,};
enum MACRO_FIXED {FIXED_NTVDMSTATE_LINEAR_PC_AT = 0x714,};
enum MACRO_FL {FL_ZERO_MEMORY = 0x1,FL_NONPAGED_MEMORY = 0x2,FL_NON_SESSION = 0x4,};
enum MACRO_FLG {FLG_STOP_ON_EXCEPTION = 0x1,FLG_SHOW_LDR_SNAPS = 0x2,FLG_DEBUG_INITIAL_COMMAND = 0x4,FLG_STOP_ON_HUNG_GUI = 0x8,FLG_HEAP_ENABLE_TAIL_CHECK = 0x10,FLG_HEAP_ENABLE_FREE_CHECK = 0x20,FLG_HEAP_VALIDATE_PARAMETERS = 0x40,FLG_HEAP_VALIDATE_ALL = 0x80,FLG_APPLICATION_VERIFIER = 0x100,FLG_POOL_ENABLE_TAGGING = 0x400,FLG_HEAP_ENABLE_TAGGING = 0x800,FLG_USER_STACK_TRACE_DB = 0x1000,FLG_KERNEL_STACK_TRACE_DB = 0x2000,FLG_MAINTAIN_OBJECT_TYPELIST = 0x4000,FLG_HEAP_ENABLE_TAG_BY_DLL = 0x8000,FLG_DISABLE_STACK_EXTENSION = 0x10000,FLG_ENABLE_CSRDEBUG = 0x20000,FLG_ENABLE_KDEBUG_SYMBOL_LOAD = 0x40000,FLG_DISABLE_PAGE_KERNEL_STACKS = 0x80000,FLG_ENABLE_SYSTEM_CRIT_BREAKS = 0x100000,FLG_HEAP_DISABLE_COALESCING = 0x200000,FLG_ENABLE_CLOSE_EXCEPTIONS = 0x400000,FLG_ENABLE_EXCEPTION_LOGGING = 0x800000,FLG_ENABLE_HANDLE_TYPE_TAGGING = 0x1000000,FLG_HEAP_PAGE_ALLOCS = 0x2000000,FLG_DEBUG_INITIAL_COMMAND_EX = 0x4000000,FLG_VALID_BITS = 0x7FFFFFF,};
enum MACRO_FLI {FLI_GLYPHS = 0x40000,FLI_MASK = 0x103B,};
enum MACRO_FLOODFILLBORDER {FLOODFILLBORDER = 0,FLOODFILLSURFACE = 1,};
enum MACRO_FLT {FLT_RADIX = 2,FLT_MANT_DIG = 24,};
enum MACRO_FLT_ROUNDS {FLT_ROUNDS = 1,};
enum MACRO_FLUSHOUTPUT {FLUSHOUTPUT = 6,};
enum MACRO_FM {FM_SEL_ITALIC = 0x1,FM_SEL_UNDERSCORE = 0x2,FM_SEL_NEGATIVE = 0x4,FM_SEL_OUTLINED = 0x8,FM_SEL_STRIKEOUT = 0x10,FM_SEL_BOLD = 0x20,FM_SEL_REGULAR = 0x40,};
enum MACRO_FM_PANOSE {FM_PANOSE_CULTURE_LATIN = 0x0,};
enum MACRO_FM_VERSION {FM_VERSION_NUMBER = 0x0,FM_TYPE_LICENSED = 0x2,FM_READONLY_EMBED = 0x4,FM_EDITABLE_EMBED = 0x8,FM_NO_EMBEDDING = 0x2,FM_INFO_TECH_TRUETYPE = 0x1,FM_INFO_TECH_BITMAP = 0x2,FM_INFO_TECH_STROKE = 0x4,FM_INFO_TECH_OUTLINE_NOT_TRUETYPE = 0x8,FM_INFO_ARB_XFORMS = 0x10,FM_INFO_1BPP = 0x20,FM_INFO_4BPP = 0x40,FM_INFO_8BPP = 0x80,FM_INFO_16BPP = 0x100,FM_INFO_24BPP = 0x200,FM_INFO_32BPP = 0x400,FM_INFO_INTEGER_WIDTH = 0x800,FM_INFO_CONSTANT_WIDTH = 0x1000,FM_INFO_NOT_CONTIGUOUS = 0x2000,FM_INFO_TECH_MM = 0x4000,FM_INFO_RETURNS_OUTLINES = 0x8000,FM_INFO_RETURNS_STROKES = 0x10000,FM_INFO_RETURNS_BITMAPS = 0x20000,FM_INFO_DSIG = 0x40000,FM_INFO_RIGHT_HANDED = 0x80000,FM_INFO_INTEGRAL_SCALING = 0x100000,FM_INFO_90DEGREE_ROTATIONS = 0x200000,FM_INFO_OPTICALLY_FIXED_PITCH = 0x400000,FM_INFO_DO_NOT_ENUMERATE = 0x800000,FM_INFO_ISOTROPIC_SCALING_ONLY = 0x1000000,FM_INFO_ANISOTROPIC_SCALING_ONLY = 0x2000000,FM_INFO_TECH_CFF = 0x4000000,FM_INFO_FAMILY_EQUIV = 0x8000000,FM_INFO_DBCS_FIXED_PITCH = 0x10000000,FM_INFO_NONNEGATIVE_AC = 0x20000000,FM_INFO_IGNORE_TC_RA_ABLE = 0x40000000,FM_INFO_TECH_TYPE1 = 0x80000000,};
enum MACRO_FN {FN_CR0_NPX_STATE = 0x20C,};
enum MACRO_FO {FO_FILE_OBJECT_HAS_EXTENSION = 0x800000,};
enum MACRO_FONT {DEVICE_DEFAULT_FONT = 14,DEFAULT_GUI_FONT = 17,OEM_FIXED_FONT = 10,SYSTEM_FONT = 13,SYSTEM_FIXED_FONT = 16,};
enum MACRO_FONTMAPPER {FONTMAPPER_MAX = 10,};
enum MACRO_FONTTYPE {RASTER_FONTTYPE = 1,DEVICE_FONTTYPE = 2,TRUETYPE_FONTTYPE = 4,};
enum MACRO_FOREST {FOREST_USER_RID_MAX = 0x1F3,};
enum MACRO_FOURCC {FOURCC_DXT1 = 827611204,FOURCC_DXT2 = 844388420,FOURCC_DXT3 = 861165636,FOURCC_DXT4 = 877942852,FOURCC_DXT5 = 894720068,};
enum MACRO_FO_ATTR {FO_ATTR_MODE_ROTATE = 1,};
enum MACRO_FO_DEVICE {FO_DEVICE_FONT = 1,FO_OUTLINE_CAPABLE = 2,FO_TYPE_RASTER = 1,FO_TYPE_DEVICE = 2,FO_TYPE_TRUETYPE = 4,FO_SIM_BOLD = 8192,FO_SIM_ITALIC = 16384,FO_EM_HEIGHT = 32768,FO_GRAY16 = 65536,FO_NOGRAY16 = 131072,FO_NOHINTS = 262144,FO_NO_CHOICE = 524288,FO_CFF = 1048576,FO_POSTSCRIPT = 2097152,FO_MULTIPLEMASTER = 4194304,FO_VERT_FACE = 8388608,FO_DBCS_FONT = 16777216,FO_NOCLEARTYPE = 33554432,FO_CLEARTYPE_X = 268435456,FO_CLEARTYPE_Y = 536870912,FO_CLEARTYPENATURAL_X = 1073741824,};
enum MACRO_FO_HGLYPHS {FO_HGLYPHS = 0,FO_GLYPHBITS = 1,FO_PATHOBJ = 2,};
enum MACRO_FP {FP_CONTROL_WORD = 0x0,FP_STATUS_WORD = 0x4,FP_TAG_WORD = 0x8,FP_ERROR_OFFSET = 0xC,FP_ERROR_SELECTOR = 0x10,FP_DATA_OFFSET = 0x14,FP_DATA_SELECTOR = 0x18,};
enum MACRO_FP_ALTERNATEMODE {FP_ALTERNATEMODE = 1,FP_WINDINGMODE = 2,};
enum MACRO_FR {FR_PRIVATE = 0x10,FR_NOT_ENUM = 0x20,};
enum MACRO_FRAME {FRAME_FPO = 0,FRAME_TRAP = 1,FRAME_TSS = 2,FRAME_NONFPO = 3,};
enum MACRO_FRAME_EDITED {FRAME_EDITED = 0xFFF8,};
enum MACRO_FRS {FRS_ERR_INVALID_API_SEQUENCE = 8001,FRS_ERR_STARTING_SERVICE = 8002,FRS_ERR_STOPPING_SERVICE = 8003,FRS_ERR_INTERNAL_API = 8004,FRS_ERR_INTERNAL = 8005,FRS_ERR_SERVICE_COMM = 8006,FRS_ERR_INSUFFICIENT_PRIV = 8007,FRS_ERR_AUTHENTICATION = 8008,FRS_ERR_PARENT_INSUFFICIENT_PRIV = 8009,FRS_ERR_PARENT_AUTHENTICATION = 8010,FRS_ERR_CHILD_TO_PARENT_COMM = 8011,FRS_ERR_PARENT_TO_CHILD_COMM = 8012,FRS_ERR_SYSVOL_POPULATE = 8013,FRS_ERR_SYSVOL_POPULATE_TIMEOUT = 8014,FRS_ERR_SYSVOL_IS_BUSY = 8015,FRS_ERR_SYSVOL_DEMOTE = 8016,FRS_ERR_INVALID_SERVICE_PARAMETER = 8017,};
enum MACRO_FS {FS_LFN_APIS = 0x4000,};
enum MACRO_FSCTL {FSCTL_MARK_VOLUME_DIRTY = 589872,FSCTL_FILESYSTEM_GET_STATISTICS = 589920,FSCTL_IS_VOLUME_DIRTY = 589944,FSCTL_GET_INTEGRITY_INFORMATION = 590460,FSCTL_SET_INTEGRITY_INFORMATION = 639616,};
enum MACRO_FSCTL_MAILSLOT {FSCTL_MAILSLOT_PEEK = 802819,FSCTL_PIPE_ASSIGN_EVENT = 1114112,FSCTL_PIPE_DISCONNECT = 1114116,FSCTL_PIPE_LISTEN = 1114120,FSCTL_PIPE_PEEK = 1130508,FSCTL_PIPE_QUERY_EVENT = 1114128,FSCTL_PIPE_TRANSCEIVE = 1163287,FSCTL_PIPE_WAIT = 1114136,FSCTL_PIPE_IMPERSONATE = 1114140,FSCTL_PIPE_SET_CLIENT_PROCESS = 1114144,FSCTL_PIPE_QUERY_CLIENT_PROCESS = 1114148,FSCTL_PIPE_INTERNAL_READ = 1138676,FSCTL_PIPE_INTERNAL_WRITE = 1155064,FSCTL_PIPE_INTERNAL_TRANSCEIVE = 1171455,FSCTL_PIPE_INTERNAL_READ_OVFLOW = 1138688,};
enum MACRO_FS_LATIN1 {FS_LATIN1 = 1,FS_LATIN2 = 2,FS_CYRILLIC = 4,FS_GREEK = 8,FS_TURKISH = 16,FS_HEBREW = 32,FS_ARABIC = 64,FS_BALTIC = 128,FS_VIETNAMESE = 256,FS_THAI = 65536,FS_JISJAPAN = 131072,FS_CHINESESIMP = 262144,FS_WANSUNG = 524288,FS_CHINESETRAD = 1048576,FS_JOHAB = 2097152,FS_SYMBOL = -2147483648,};
enum MACRO_FW {FW_DONTCARE = 0,FW_THIN = 100,FW_EXTRALIGHT = 200,FW_ULTRALIGHT = 200,FW_LIGHT = 300,FW_NORMAL = 400,FW_REGULAR = 400,FW_MEDIUM = 500,FW_SEMIBOLD = 600,FW_DEMIBOLD = 600,FW_BOLD = 700,FW_EXTRABOLD = 800,FW_ULTRABOLD = 800,FW_HEAVY = 900,FW_BLACK = 900,};
enum MACRO_FX {FX_CONTROL_WORD = 0x0,FX_STATUS_WORD = 0x2,FX_TAG_WORD = 0x4,FX_ERROR_OPCODE = 0x6,FX_ERROR_OFFSET = 0x8,FX_ERROR_SELECTOR = 0xC,FX_DATA_OFFSET = 0x10,FX_DATA_SELECTOR = 0x14,FX_MXCSR = 0x18,};
enum MACRO_GCAPS {GCAPS_BEZIERS = 0x1,GCAPS_GEOMETRICWIDE = 0x2,GCAPS_ALTERNATEFILL = 0x4,GCAPS_WINDINGFILL = 0x8,GCAPS_HALFTONE = 0x10,GCAPS_COLOR_DITHER = 0x20,GCAPS_HORIZSTRIKE = 0x40,GCAPS_VERTSTRIKE = 0x80,GCAPS_OPAQUERECT = 0x100,GCAPS_VECTORFONT = 0x200,GCAPS_MONO_DITHER = 0x400,GCAPS_ASYNCCHANGE = 0x800,GCAPS_ASYNCMOVE = 0x1000,GCAPS_DONTJOURNAL = 0x2000,GCAPS_DIRECTDRAW = 0x4000,GCAPS_ARBRUSHOPAQUE = 0x8000,GCAPS_PANNING = 0x10000,GCAPS_HIGHRESTEXT = 0x40000,GCAPS_PALMANAGED = 0x80000,GCAPS_DITHERONREALIZE = 0x200000,GCAPS_NO64BITMEMACCESS = 0x400000,GCAPS_FORCEDITHER = 0x800000,GCAPS_GRAY16 = 0x1000000,GCAPS_ICM = 0x2000000,GCAPS_CMYKCOLOR = 0x4000000,GCAPS_LAYERED = 0x8000000,GCAPS_ARBRUSHTEXT = 0x10000000,GCAPS_SCREENPRECISION = 0x20000000,GCAPS_FONT_RASTERIZER = 0x40000000,GCAPS_NUP = 0x80000000,};
enum MACRO_GCAPS2 {GCAPS2_JPEGSRC = 0x1,GCAPS2_xxxx = 0x2,GCAPS2_PNGSRC = 0x8,GCAPS2_CHANGEGAMMARAMP = 0x10,GCAPS2_ALPHACURSOR = 0x20,GCAPS2_SYNCFLUSH = 0x40,GCAPS2_SYNCTIMER = 0x80,GCAPS2_ICD_MULTIMON = 0x100,GCAPS2_MOUSETRAILS = 0x200,GCAPS2_RESERVED1 = 0x400,GCAPS2_EXCLUDELAYERED = 0x800,GCAPS2_INCLUDEAPIBITMAPS = 0x1000,GCAPS2_SHOWHIDDENPOINTER = 0x2000,GCAPS2_CLEARTYPE = 0x4000,GCAPS2_ACC_DRIVER = 0x8000,};
enum MACRO_GCP {GCP_DBCS = 1,GCP_ERROR = 32768,GCP_CLASSIN = 524288,GCP_DIACRITIC = 256,GCP_DISPLAYZWG = 4194304,GCP_GLYPHSHAPE = 16,GCP_JUSTIFY = 65536,GCP_JUSTIFYIN = 2097152,GCP_KASHIDA = 1024,GCP_LIGATE = 32,GCP_MAXEXTENT = 1048576,GCP_NEUTRALOVERRIDE = 33554432,GCP_NUMERICOVERRIDE = 16777216,GCP_NUMERICSLATIN = 67108864,GCP_NUMERICSLOCAL = 134217728,GCP_REORDER = 2,GCP_SYMSWAPOFF = 8388608,GCP_USEKERNING = 8,};
enum MACRO_GCPCLASS {GCPCLASS_LATIN = 1,GCPCLASS_HEBREW = 2,GCPCLASS_ARABIC = 2,GCPCLASS_NEUTRAL = 3,GCPCLASS_LOCALNUMBER = 4,GCPCLASS_LATINNUMBER = 5,GCPCLASS_LATINNUMERICTERMINATOR = 6,GCPCLASS_LATINNUMERICSEPARATOR = 7,GCPCLASS_NUMERICSEPARATOR = 8,GCPCLASS_PREBOUNDLTR = 128,GCPCLASS_PREBOUNDRTL = 64,GCPCLASS_POSTBOUNDLTR = 32,GCPCLASS_POSTBOUNDRTL = 16,};
enum MACRO_GCPGLYPH {GCPGLYPH_LINKBEFORE = 0x8000,GCPGLYPH_LINKAFTER = 0x4000,};
enum MACRO_GDI {GDI_BATCH_BUFFER_SIZE = 310,};
enum MACRO_GDICOMMENT {GDICOMMENT_WINDOWS_METAFILE = -2147483647,GDICOMMENT_BEGINGROUP = 2,GDICOMMENT_ENDGROUP = 3,GDICOMMENT_MULTIFORMATS = 1073741828,GDICOMMENT_IDENTIFIER = 1128875079,};
enum MACRO_GDI_DRIVER {GDI_DRIVER_VERSION = 0x4000,};
enum MACRO_GDI_ERROR {GDI_ERROR = 0xFFFFFFFF,HGDI_ERROR = 0xFFFFFFFF,};
enum MACRO_GENERIC {GENERIC_READ = 0x80000000,GENERIC_WRITE = 0x40000000,GENERIC_EXECUTE = 0x20000000,GENERIC_ALL = 0x10000000,};
enum MACRO_GETCOLORTABLE {GETCOLORTABLE = 5,};
enum MACRO_GETDEVICEUNITS {GETDEVICEUNITS = 42,GETEXTENDEDTEXTMETRICS = 256,};
enum MACRO_GETEXTENTTABLE {GETEXTENTTABLE = 257,};
enum MACRO_GETFACENAME {GETFACENAME = 513,};
enum MACRO_GETPAIRKERNTABLE {GETPAIRKERNTABLE = 258,};
enum MACRO_GETPHYSPAGESIZE {GETPHYSPAGESIZE = 12,};
enum MACRO_GETPRINTINGOFFSET {GETPRINTINGOFFSET = 13,};
enum MACRO_GETSCALINGFACTOR {GETSCALINGFACTOR = 14,};
enum MACRO_GETSETPAPERBINS {GETSETPAPERBINS = 29,};
enum MACRO_GETSETPAPERMETRICS {GETSETPAPERMETRICS = 35,};
enum MACRO_GETSETPRINTORIENT {GETSETPRINTORIENT = 30,};
enum MACRO_GETSETSCREENPARAMS {GETSETSCREENPARAMS = 3072,};
enum MACRO_GETTECHNOLGY {GETTECHNOLGY = 20,};
enum MACRO_GETTECHNOLOGY {GETTECHNOLOGY = 20,};
enum MACRO_GETTRACKKERNTABLE {GETTRACKKERNTABLE = 259,EXTTEXTOUT = 512,};
enum MACRO_GETVECTORBRUSHSIZE {GETVECTORBRUSHSIZE = 27,};
enum MACRO_GETVECTORPENSIZE {GETVECTORPENSIZE = 26,};
enum MACRO_GGI {GGI_MARK_NONEXISTING_GLYPHS = 0x1,};
enum MACRO_GGO {GGO_METRICS = 0,GGO_BITMAP = 1,GGO_NATIVE = 2,GGO_BEZIER = 3,GGO_GRAY2_BITMAP = 4,GGO_GRAY4_BITMAP = 5,GGO_GRAY8_BITMAP = 6,GGO_GLYPH_INDEX = 128,GGO_UNHINTED = 256,};
enum MACRO_GM {GM_COMPATIBLE = 1,GM_ADVANCED = 2,GM_LAST = 2,};
enum MACRO_GRADIENT {GRADIENT_FILL_RECT_H = 0x0,GRADIENT_FILL_RECT_V = 0x1,GRADIENT_FILL_TRIANGLE = 0x2,GRADIENT_FILL_OP_FLAG = 0xFF,};
enum MACRO_GS {GS_8BIT_INDICES = 0x1,};
enum MACRO_GS_UNICODE {GS_UNICODE_HANDLES = 0x1,GS_8BIT_HANDLES = 0x2,GS_16BIT_HANDLES = 0x4,};
enum MACRO_GX {GX_IDENTITY = 0,GX_OFFSET = 1,GX_SCALE = 2,GX_GENERAL = 3,};
enum MACRO_HARDERROR {HARDERROR_OVERRIDE_ERRORMODE = 0x10000000,};
enum MACRO_HASH {HASH_STRING_ALGORITHM_DEFAULT = 0,HASH_STRING_ALGORITHM_X65599 = 1,HASH_STRING_ALGORITHM_INVALID = -1,};
enum MACRO_HEAP {HEAP_NO_SERIALIZE = 1,HEAP_GROWABLE = 2,HEAP_GENERATE_EXCEPTIONS = 4,HEAP_ZERO_MEMORY = 8,HEAP_REALLOC_IN_PLACE_ONLY = 16,HEAP_TAIL_CHECKING_ENABLED = 32,HEAP_FREE_CHECKING_ENABLED = 64,HEAP_DISABLE_COALESCE_ON_FREE = 128,HEAP_CREATE_ALIGN_16 = 65536,HEAP_CREATE_ENABLE_TRACING = 131072,HEAP_CREATE_ENABLE_EXECUTE = 262144,HEAP_MAXIMUM_TAG = 4095,HEAP_PSEUDO_TAG_FLAG = 32768,HEAP_TAG_SHIFT = 16,};
enum MACRO_HEAP_SETTABLE {HEAP_SETTABLE_USER_VALUE = 0x100,HEAP_SETTABLE_USER_FLAG1 = 0x200,HEAP_SETTABLE_USER_FLAG2 = 0x400,HEAP_SETTABLE_USER_FLAG3 = 0x800,HEAP_SETTABLE_USER_FLAGS = 0xE00,HEAP_CLASS_0 = 0x0,HEAP_CLASS_1 = 0x1000,HEAP_CLASS_2 = 0x2000,HEAP_CLASS_3 = 0x3000,HEAP_CLASS_4 = 0x4000,HEAP_CLASS_5 = 0x5000,HEAP_CLASS_6 = 0x6000,HEAP_CLASS_7 = 0x7000,HEAP_CLASS_8 = 0x8000,HEAP_CLASS_MASK = 0xF000,HEAP_FLAG_PAGE_ALLOCS = 0x1000000,HEAP_PROTECTION_ENABLED = 0x2000000,HEAP_BREAK_WHEN_OUT_OF_VM = 0x4000000,HEAP_NO_ALIGNMENT = 0x8000000,HEAP_CAPTURE_STACK_BACKTRACES = 0x8000000,HEAP_SKIP_VALIDATION_CHECKS = 0x10000000,HEAP_VALIDATE_ALL_ENABLED = 0x20000000,HEAP_VALIDATE_PARAMETERS_ENABLED = 0x40000000,HEAP_LOCK_USER_ALLOCATED = 0x80000000,HEAP_CREATE_VALID_MASK = 0x7F0FF,};
enum MACRO_HFF : __int64 {HFF_INVALID = 0,HFC_INVALID = 0,HGLYPH_INVALID = 4294967295,};
enum MACRO_HFILE {HFILE_ERROR = -1,};
enum MACRO_HIST {HIST_NO_OF_BUCKETS = 24,};
enum MACRO_HOOK {HOOK_BITBLT = 0x1,HOOK_STRETCHBLT = 0x2,HOOK_PLGBLT = 0x4,HOOK_TEXTOUT = 0x8,HOOK_PAINT = 0x10,HOOK_STROKEPATH = 0x20,HOOK_FILLPATH = 0x40,HOOK_STROKEANDFILLPATH = 0x80,HOOK_LINETO = 0x100,HOOK_COPYBITS = 0x400,HOOK_MOVEPANNING = 0x800,HOOK_SYNCHRONIZE = 0x1000,HOOK_STRETCHBLTROP = 0x2000,HOOK_SYNCHRONIZEACCESS = 0x4000,HOOK_TRANSPARENTBLT = 0x8000,HOOK_ALPHABLEND = 0x10000,HOOK_GRADIENTFILL = 0x20000,HOOK_FLAGS = 0x3B5EF,};
enum MACRO_HORZSIZE {HORZSIZE = 4,};
enum MACRO_HS {HS_BDIAGONAL = 3,HS_CROSS = 4,HS_DIAGCROSS = 5,HS_FDIAGONAL = 2,HS_HORIZONTAL = 0,HS_VERTICAL = 1,HS_API_MAX = 12,};
enum MACRO_HS_DDI {HS_DDI_MAX = 6,};
enum MACRO_HT {HT_PATSIZE_2x2 = 0,HT_PATSIZE_2x2_M = 1,HT_PATSIZE_4x4 = 2,HT_PATSIZE_4x4_M = 3,HT_PATSIZE_6x6 = 4,HT_PATSIZE_6x6_M = 5,HT_PATSIZE_8x8 = 6,HT_PATSIZE_8x8_M = 7,HT_PATSIZE_10x10 = 8,HT_PATSIZE_10x10_M = 9,HT_PATSIZE_12x12 = 10,HT_PATSIZE_12x12_M = 11,HT_PATSIZE_14x14 = 12,HT_PATSIZE_14x14_M = 13,HT_PATSIZE_16x16 = 14,HT_PATSIZE_16x16_M = 15,HT_PATSIZE_SUPERCELL = 16,HT_PATSIZE_SUPERCELL_M = 17,HT_PATSIZE_USER = 18,HT_PATSIZE_MAX_INDEX = 18,HT_PATSIZE_DEFAULT = 17,HT_USERPAT_CX_MIN = 4,HT_USERPAT_CX_MAX = 256,HT_USERPAT_CY_MIN = 4,HT_USERPAT_CY_MAX = 256,HT_FORMAT_1BPP = 0,HT_FORMAT_4BPP = 2,HT_FORMAT_4BPP_IRGB = 3,HT_FORMAT_8BPP = 4,HT_FORMAT_16BPP = 5,HT_FORMAT_24BPP = 6,HT_FORMAT_32BPP = 7,HT_FLAG_SQUARE_DEVICE_PEL = 1,HT_FLAG_HAS_BLACK_DYE = 2,HT_FLAG_ADDITIVE_PRIMS = 4,HT_FLAG_USE_8BPP_BITMASK = 8,HT_FLAG_INK_HIGH_ABSORPTION = 16,HT_FLAG_INK_ABSORPTION_INDICES = 96,HT_FLAG_DO_DEVCLR_XFORM = 128,HT_FLAG_OUTPUT_CMY = 256,HT_FLAG_PRINT_DRAFT_MODE = 512,HT_FLAG_INVERT_8BPP_BITMASK_IDX = 1024,HT_FLAG_8BPP_CMY332_MASK = -16777216,HT_FLAG_INK_ABSORPTION_IDX0 = 0,HT_FLAG_INK_ABSORPTION_IDX1 = 32,HT_FLAG_INK_ABSORPTION_IDX2 = 64,HT_FLAG_INK_ABSORPTION_IDX3 = 96,HT_FLAG_HIGHEST_INK_ABSORPTION = 112,HT_FLAG_HIGHER_INK_ABSORPTION = 80,HT_FLAG_HIGH_INK_ABSORPTION = 48,HT_FLAG_NORMAL_INK_ABSORPTION = 0,HT_FLAG_LOW_INK_ABSORPTION = 32,HT_FLAG_LOWER_INK_ABSORPTION = 64,HT_FLAG_LOWEST_INK_ABSORPTION = 96,HT_BITMASKPALRGB = 809650002,};
enum MACRO_HV {HV_MMU_USE_HYPERCALL_FOR_ADDRESS_SWITCH = 0x1,HV_MMU_USE_HYPERCALL_FOR_LOCAL_FLUSH = 0x2,HV_MMU_USE_HYPERCALL_FOR_REMOTE_FLUSH = 0x4,HV_APIC_ENLIGHTENED = 0x10,HV_KE_USE_HYPERCALL_FOR_LONG_SPIN_WAIT = 0x40,};
enum MACRO_ICM {ICM_ON = 2,ICM_OFF = 1,ICM_QUERY = 3,};
enum MACRO_IGRF {IGRF_RGB_256BYTES = 0x0,IGRF_RGB_256WORDS = 0x1,};
enum MACRO_ILLUMINANT {ILLUMINANT_DEVICE_DEFAULT = 0,ILLUMINANT_A = 1,ILLUMINANT_B = 2,ILLUMINANT_C = 3,ILLUMINANT_D50 = 4,ILLUMINANT_D55 = 5,ILLUMINANT_D65 = 6,ILLUMINANT_D75 = 7,ILLUMINANT_F2 = 8,ILLUMINANT_MAX_INDEX = 8,ILLUMINANT_TUNGSTEN = 1,ILLUMINANT_DAYLIGHT = 3,ILLUMINANT_FLUORESCENT = 8,ILLUMINANT_NTSC = 3,};
enum MACRO_IMAGE {IMAGE_SIZEOF_FILE_HEADER = 20,IMAGE_FILE_RELOCS_STRIPPED = 1,IMAGE_FILE_EXECUTABLE_IMAGE = 2,IMAGE_FILE_LINE_NUMS_STRIPPED = 4,IMAGE_FILE_LOCAL_SYMS_STRIPPED = 8,IMAGE_FILE_AGGRESIVE_WS_TRIM = 16,IMAGE_FILE_LARGE_ADDRESS_AWARE = 32,IMAGE_FILE_BYTES_REVERSED_LO = 128,IMAGE_FILE_32BIT_MACHINE = 256,IMAGE_FILE_DEBUG_STRIPPED = 512,IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 1024,IMAGE_FILE_NET_RUN_FROM_SWAP = 2048,IMAGE_FILE_SYSTEM = 4096,IMAGE_FILE_DLL = 8192,IMAGE_FILE_UP_SYSTEM_ONLY = 16384,IMAGE_FILE_BYTES_REVERSED_HI = 32768,IMAGE_FILE_MACHINE_UNKNOWN = 0,IMAGE_FILE_MACHINE_AM33 = 467,IMAGE_FILE_MACHINE_AMD64 = 34404,IMAGE_FILE_MACHINE_ARM = 448,IMAGE_FILE_MACHINE_ARMNT = 452,IMAGE_FILE_MACHINE_EBC = 3772,IMAGE_FILE_MACHINE_I386 = 332,IMAGE_FILE_MACHINE_IA64 = 512,IMAGE_FILE_MACHINE_M32R = 36929,IMAGE_FILE_MACHINE_MIPS16 = 614,IMAGE_FILE_MACHINE_MIPSFPU = 870,IMAGE_FILE_MACHINE_MIPSFPU16 = 1126,IMAGE_FILE_MACHINE_POWERPC = 496,IMAGE_FILE_MACHINE_POWERPCFP = 497,IMAGE_FILE_MACHINE_R4000 = 358,IMAGE_FILE_MACHINE_SH3 = 418,IMAGE_FILE_MACHINE_SH3E = 420,IMAGE_FILE_MACHINE_SH3DSP = 419,IMAGE_FILE_MACHINE_SH4 = 422,IMAGE_FILE_MACHINE_SH5 = 424,IMAGE_FILE_MACHINE_THUMB = 450,IMAGE_FILE_MACHINE_WCEMIPSV2 = 361,IMAGE_FILE_MACHINE_R3000 = 354,IMAGE_FILE_MACHINE_R10000 = 360,IMAGE_FILE_MACHINE_ALPHA = 388,IMAGE_FILE_MACHINE_ALPHA64 = 644,IMAGE_FILE_MACHINE_AXP64 = 644,IMAGE_FILE_MACHINE_CEE = 49390,IMAGE_FILE_MACHINE_TRICORE = 1312,IMAGE_FILE_MACHINE_CEF = 3311,IMAGE_FILE_MACHINE_ARM64 = 43620,IMAGE_FILE_EXPORT_DIRECTORY = 0,IMAGE_FILE_IMPORT_DIRECTORY = 1,IMAGE_FILE_RESOURCE_DIRECTORY = 2,IMAGE_FILE_EXCEPTION_DIRECTORY = 3,IMAGE_FILE_SECURITY_DIRECTORY = 4,IMAGE_FILE_BASE_RELOCATION_TABLE = 5,IMAGE_FILE_DEBUG_DIRECTORY = 6,IMAGE_FILE_DESCRIPTION_STRING = 7,IMAGE_FILE_MACHINE_VALUE = 8,IMAGE_FILE_THREAD_LOCAL_STORAGE = 9,IMAGE_FILE_CALLBACK_DIRECTORY = 10,IMAGE_DOS_SIGNATURE = 23117,IMAGE_OS2_SIGNATURE = 17742,IMAGE_OS2_SIGNATURE_LE = 17740,IMAGE_VXD_SIGNATURE = 17740,IMAGE_NT_SIGNATURE = 17744,IMAGE_NT_OPTIONAL_HDR32_MAGIC = 267,IMAGE_NT_OPTIONAL_HDR64_MAGIC = 523,IMAGE_NT_OPTIONAL_HDR_MAGIC = 267,IMAGE_ROM_OPTIONAL_HDR_MAGIC = 263,IMAGE_SEPARATE_DEBUG_SIGNATURE = 18756,IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16,IMAGE_SIZEOF_ROM_OPTIONAL_HEADER = 56,IMAGE_SIZEOF_STD_OPTIONAL_HEADER = 28,IMAGE_SIZEOF_NT_OPTIONAL_HEADER = 224,IMAGE_SIZEOF_SHORT_NAME = 8,IMAGE_SIZEOF_SECTION_HEADER = 40,IMAGE_SIZEOF_SYMBOL = 18,IMAGE_SIZEOF_AUX_SYMBOL = 18,IMAGE_SIZEOF_RELOCATION = 10,IMAGE_SIZEOF_BASE_RELOCATION = 8,IMAGE_SIZEOF_LINENUMBER = 6,IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60,};
enum MACRO_IMAGE_DEBUG {IMAGE_DEBUG_MISC_EXENAME = 1,};
enum MACRO_IMAGE_FILE {IMAGE_FILE_MACHINE_NATIVE = 332,};
enum MACRO_IMAGE_ORDINAL : __int64 {IMAGE_ORDINAL_FLAG64 = 0x8000000000000000,IMAGE_ORDINAL_FLAG32 = 0xFFFFFFFF80000000,IMAGE_ORDINAL_FLAG = 0xFFFFFFFF80000000,};
enum MACRO_IMAGE_SCN {IMAGE_SCN_TYPE_NOLOAD = 0x2,};
enum MACRO_IMAGE_SUBSYSTEM {IMAGE_SUBSYSTEM_UNKNOWN = 0,IMAGE_SUBSYSTEM_NATIVE = 1,IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,IMAGE_SUBSYSTEM_OS2_CUI = 5,IMAGE_SUBSYSTEM_POSIX_CUI = 7,IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,IMAGE_SUBSYSTEM_EFI_ROM = 13,IMAGE_SUBSYSTEM_XBOX = 14,IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 64,IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 128,IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 256,IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 512,IMAGE_DLLCHARACTERISTICS_NO_SEH = 1024,IMAGE_DLLCHARACTERISTICS_NO_BIND = 2048,IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 8192,IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 32768,IMAGE_DIRECTORY_ENTRY_EXPORT = 0,IMAGE_DIRECTORY_ENTRY_IMPORT = 1,IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,IMAGE_DIRECTORY_ENTRY_SECURITY = 4,IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,IMAGE_DIRECTORY_ENTRY_DEBUG = 6,IMAGE_DIRECTORY_ENTRY_COPYRIGHT = 7,IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,IMAGE_DIRECTORY_ENTRY_TLS = 9,IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,IMAGE_DIRECTORY_ENTRY_IAT = 12,IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,IMAGE_SCN_TYPE_REG = 0,IMAGE_SCN_TYPE_DSECT = 1,IMAGE_SCN_TYPE_GROUP = 4,IMAGE_SCN_TYPE_NO_PAD = 8,IMAGE_SCN_CNT_CODE = 32,IMAGE_SCN_CNT_INITIALIZED_DATA = 64,IMAGE_SCN_CNT_UNINITIALIZED_DATA = 128,IMAGE_SCN_LNK_OTHER = 256,IMAGE_SCN_LNK_INFO = 512,IMAGE_SCN_LNK_REMOVE = 2048,IMAGE_SCN_LNK_COMDAT = 4096,IMAGE_SCN_MEM_FARDATA = 32768,IMAGE_SCN_MEM_PURGEABLE = 131072,IMAGE_SCN_MEM_16BIT = 131072,IMAGE_SCN_MEM_LOCKED = 262144,IMAGE_SCN_MEM_PRELOAD = 524288,IMAGE_SCN_ALIGN_1BYTES = 1048576,IMAGE_SCN_ALIGN_2BYTES = 2097152,IMAGE_SCN_ALIGN_4BYTES = 3145728,IMAGE_SCN_ALIGN_8BYTES = 4194304,IMAGE_SCN_ALIGN_16BYTES = 5242880,IMAGE_SCN_ALIGN_32BYTES = 6291456,IMAGE_SCN_ALIGN_64BYTES = 7340032,IMAGE_SCN_LNK_NRELOC_OVFL = 16777216,IMAGE_SCN_MEM_DISCARDABLE = 33554432,IMAGE_SCN_MEM_NOT_CACHED = 67108864,IMAGE_SCN_MEM_NOT_PAGED = 134217728,IMAGE_SCN_MEM_SHARED = 268435456,IMAGE_SCN_MEM_EXECUTE = 536870912,IMAGE_SCN_MEM_READ = 1073741824,IMAGE_SCN_MEM_WRITE = -2147483648,IMAGE_SYM_UNDEFINED = 0,IMAGE_SYM_ABSOLUTE = -1,IMAGE_SYM_DEBUG = -2,IMAGE_SYM_TYPE_NULL = 0,IMAGE_SYM_TYPE_VOID = 1,IMAGE_SYM_TYPE_CHAR = 2,IMAGE_SYM_TYPE_SHORT = 3,IMAGE_SYM_TYPE_INT = 4,IMAGE_SYM_TYPE_LONG = 5,IMAGE_SYM_TYPE_FLOAT = 6,IMAGE_SYM_TYPE_DOUBLE = 7,IMAGE_SYM_TYPE_STRUCT = 8,IMAGE_SYM_TYPE_UNION = 9,IMAGE_SYM_TYPE_ENUM = 10,IMAGE_SYM_TYPE_MOE = 11,IMAGE_SYM_TYPE_BYTE = 12,IMAGE_SYM_TYPE_WORD = 13,IMAGE_SYM_TYPE_UINT = 14,IMAGE_SYM_TYPE_DWORD = 15,IMAGE_SYM_TYPE_PCODE = 32768,IMAGE_SYM_DTYPE_NULL = 0,IMAGE_SYM_DTYPE_POINTER = 1,IMAGE_SYM_DTYPE_FUNCTION = 2,IMAGE_SYM_DTYPE_ARRAY = 3,IMAGE_SYM_CLASS_END_OF_FUNCTION = -1,IMAGE_SYM_CLASS_NULL = 0,IMAGE_SYM_CLASS_AUTOMATIC = 1,IMAGE_SYM_CLASS_EXTERNAL = 2,IMAGE_SYM_CLASS_STATIC = 3,IMAGE_SYM_CLASS_REGISTER = 4,IMAGE_SYM_CLASS_EXTERNAL_DEF = 5,IMAGE_SYM_CLASS_LABEL = 6,IMAGE_SYM_CLASS_UNDEFINED_LABEL = 7,IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 8,IMAGE_SYM_CLASS_ARGUMENT = 9,IMAGE_SYM_CLASS_STRUCT_TAG = 10,IMAGE_SYM_CLASS_MEMBER_OF_UNION = 11,IMAGE_SYM_CLASS_UNION_TAG = 12,IMAGE_SYM_CLASS_TYPE_DEFINITION = 13,IMAGE_SYM_CLASS_UNDEFINED_STATIC = 14,IMAGE_SYM_CLASS_ENUM_TAG = 15,IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 16,IMAGE_SYM_CLASS_REGISTER_PARAM = 17,IMAGE_SYM_CLASS_BIT_FIELD = 18,IMAGE_SYM_CLASS_FAR_EXTERNAL = 68,IMAGE_SYM_CLASS_BLOCK = 100,IMAGE_SYM_CLASS_FUNCTION = 101,IMAGE_SYM_CLASS_END_OF_STRUCT = 102,IMAGE_SYM_CLASS_FILE = 103,IMAGE_SYM_CLASS_SECTION = 104,IMAGE_SYM_CLASS_WEAK_EXTERNAL = 105,IMAGE_COMDAT_SELECT_NODUPLICATES = 1,IMAGE_COMDAT_SELECT_ANY = 2,IMAGE_COMDAT_SELECT_SAME_SIZE = 3,IMAGE_COMDAT_SELECT_EXACT_MATCH = 4,IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5,IMAGE_COMDAT_SELECT_LARGEST = 6,IMAGE_COMDAT_SELECT_NEWEST = 7,IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1,IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2,IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3,IMAGE_REL_I386_ABSOLUTE = 0,IMAGE_REL_I386_DIR16 = 1,IMAGE_REL_I386_REL16 = 2,IMAGE_REL_I386_DIR32 = 6,IMAGE_REL_I386_DIR32NB = 7,IMAGE_REL_I386_SEG12 = 9,IMAGE_REL_I386_SECTION = 10,IMAGE_REL_I386_SECREL = 11,IMAGE_REL_I386_REL32 = 20,IMAGE_REL_MIPS_ABSOLUTE = 0,IMAGE_REL_MIPS_REFHALF = 1,IMAGE_REL_MIPS_REFWORD = 2,IMAGE_REL_MIPS_JMPADDR = 3,IMAGE_REL_MIPS_REFHI = 4,IMAGE_REL_MIPS_REFLO = 5,IMAGE_REL_MIPS_GPREL = 6,IMAGE_REL_MIPS_LITERAL = 7,IMAGE_REL_MIPS_SECTION = 10,IMAGE_REL_MIPS_SECREL = 11,IMAGE_REL_MIPS_SECRELLO = 12,IMAGE_REL_MIPS_SECRELHI = 13,IMAGE_REL_MIPS_REFWORDNB = 34,IMAGE_REL_MIPS_PAIR = 35,IMAGE_REL_ALPHA_ABSOLUTE = 0,IMAGE_REL_ALPHA_REFLONG = 1,IMAGE_REL_ALPHA_REFQUAD = 2,IMAGE_REL_ALPHA_GPREL32 = 3,IMAGE_REL_ALPHA_LITERAL = 4,IMAGE_REL_ALPHA_LITUSE = 5,IMAGE_REL_ALPHA_GPDISP = 6,IMAGE_REL_ALPHA_BRADDR = 7,IMAGE_REL_ALPHA_HINT = 8,IMAGE_REL_ALPHA_INLINE_REFLONG = 9,IMAGE_REL_ALPHA_REFHI = 10,IMAGE_REL_ALPHA_REFLO = 11,IMAGE_REL_ALPHA_PAIR = 12,IMAGE_REL_ALPHA_MATCH = 13,IMAGE_REL_ALPHA_SECTION = 14,IMAGE_REL_ALPHA_SECREL = 15,IMAGE_REL_ALPHA_REFLONGNB = 16,IMAGE_REL_ALPHA_SECRELLO = 17,IMAGE_REL_ALPHA_SECRELHI = 18,IMAGE_REL_PPC_ABSOLUTE = 0,IMAGE_REL_PPC_ADDR64 = 1,IMAGE_REL_PPC_ADDR32 = 2,IMAGE_REL_PPC_ADDR24 = 3,IMAGE_REL_PPC_ADDR16 = 4,IMAGE_REL_PPC_ADDR14 = 5,IMAGE_REL_PPC_REL24 = 6,IMAGE_REL_PPC_REL14 = 7,IMAGE_REL_PPC_TOCREL16 = 8,IMAGE_REL_PPC_TOCREL14 = 9,IMAGE_REL_PPC_ADDR32NB = 10,IMAGE_REL_PPC_SECREL = 11,IMAGE_REL_PPC_SECTION = 12,IMAGE_REL_PPC_IFGLUE = 13,IMAGE_REL_PPC_IMGLUE = 14,IMAGE_REL_PPC_SECREL16 = 15,IMAGE_REL_PPC_REFHI = 16,IMAGE_REL_PPC_REFLO = 17,IMAGE_REL_PPC_PAIR = 18,IMAGE_REL_PPC_TYPEMASK = 255,IMAGE_REL_PPC_NEG = 256,IMAGE_REL_PPC_BRTAKEN = 512,IMAGE_REL_PPC_BRNTAKEN = 1024,IMAGE_REL_PPC_TOCDEFN = 2048,IMAGE_REL_BASED_ABSOLUTE = 0,IMAGE_REL_BASED_HIGH = 1,IMAGE_REL_BASED_LOW = 2,IMAGE_REL_BASED_HIGHLOW = 3,IMAGE_REL_BASED_HIGHADJ = 4,IMAGE_REL_BASED_MIPS_JMPADDR = 5,IMAGE_REL_BASED_MIPS_JMPADDR16 = 9,IMAGE_REL_BASED_IA64_IMM64 = 9,IMAGE_REL_BASED_DIR64 = 10,IMAGE_ARCHIVE_START_SIZE = 8,IMAGE_RESOURCE_NAME_IS_STRING = -2147483648,IMAGE_RESOURCE_DATA_IS_DIRECTORY = -2147483648,IMAGE_DEBUG_TYPE_UNKNOWN = 0,IMAGE_DEBUG_TYPE_COFF = 1,IMAGE_DEBUG_TYPE_CODEVIEW = 2,IMAGE_DEBUG_TYPE_FPO = 3,IMAGE_DEBUG_TYPE_MISC = 4,IMAGE_DEBUG_TYPE_EXCEPTION = 5,IMAGE_DEBUG_TYPE_FIXUP = 6,IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7,IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8,};
enum MACRO_INDEX {INDEX_DrvEnablePDEV = 0,INDEX_DrvCompletePDEV = 1,INDEX_DrvDisablePDEV = 2,INDEX_DrvEnableSurface = 3,INDEX_DrvDisableSurface = 4,INDEX_DrvAssertMode = 5,INDEX_DrvOffset = 6,INDEX_DrvResetPDEV = 7,INDEX_DrvDisableDriver = 8,INDEX_DrvUnknown1 = 9,INDEX_DrvCreateDeviceBitmap = 10,INDEX_DrvDeleteDeviceBitmap = 11,INDEX_DrvRealizeBrush = 12,INDEX_DrvDitherColor = 13,INDEX_DrvStrokePath = 14,INDEX_DrvFillPath = 15,INDEX_DrvStrokeAndFillPath = 16,INDEX_DrvPaint = 17,INDEX_DrvBitBlt = 18,INDEX_DrvCopyBits = 19,INDEX_DrvStretchBlt = 20,INDEX_DrvUnknown2 = 21,INDEX_DrvSetPalette = 22,INDEX_DrvTextOut = 23,INDEX_DrvEscape = 24,INDEX_DrvDrawEscape = 25,INDEX_DrvQueryFont = 26,INDEX_DrvQueryFontTree = 27,INDEX_DrvQueryFontData = 28,INDEX_DrvSetPointerShape = 29,INDEX_DrvMovePointer = 30,INDEX_DrvLineTo = 31,INDEX_DrvSendPage = 32,INDEX_DrvStartPage = 33,INDEX_DrvEndDoc = 34,INDEX_DrvStartDoc = 35,INDEX_DrvUnknown3 = 36,INDEX_DrvGetGlyphMode = 37,INDEX_DrvSynchronize = 38,INDEX_DrvUnknown4 = 39,INDEX_DrvSaveScreenBits = 40,INDEX_DrvGetModes = 41,INDEX_DrvFree = 42,INDEX_DrvDestroyFont = 43,INDEX_DrvQueryFontCaps = 44,INDEX_DrvLoadFontFile = 45,INDEX_DrvUnloadFontFile = 46,INDEX_DrvFontManagement = 47,INDEX_DrvQueryTrueTypeTable = 48,INDEX_DrvQueryTrueTypeOutline = 49,INDEX_DrvGetTrueTypeFile = 50,INDEX_DrvQueryFontFile = 51,INDEX_DrvMovePanning = 52,INDEX_DrvQueryAdvanceWidths = 53,INDEX_DrvSetPixelFormat = 54,INDEX_DrvDescribePixelFormat = 55,INDEX_DrvSwapBuffers = 56,INDEX_DrvStartBanding = 57,INDEX_DrvNextBand = 58,INDEX_DrvGetDirectDrawInfo = 59,INDEX_DrvEnableDirectDraw = 60,INDEX_DrvDisableDirectDraw = 61,INDEX_DrvQuerySpoolType = 62,INDEX_DrvUnknown5 = 63,INDEX_DrvIcmCreateColorTransform = 64,INDEX_DrvIcmDeleteColorTransform = 65,INDEX_DrvIcmCheckBitmapBits = 66,INDEX_DrvIcmSetDeviceGammaRamp = 67,INDEX_DrvGradientFill = 68,INDEX_DrvStretchBltROP = 69,INDEX_DrvPlgBlt = 70,INDEX_DrvAlphaBlend = 71,INDEX_DrvSynthesizeFont = 72,INDEX_DrvGetSynthesizedFontFiles = 73,INDEX_DrvTransparentBlt = 74,INDEX_DrvQueryPerBandInfo = 75,INDEX_DrvQueryDeviceSupport = 76,INDEX_DrvReserved1 = 77,INDEX_DrvReserved2 = 78,INDEX_DrvReserved3 = 79,INDEX_DrvReserved4 = 80,INDEX_DrvReserved5 = 81,INDEX_DrvReserved6 = 82,INDEX_DrvReserved7 = 83,INDEX_DrvReserved8 = 84,INDEX_DrvDeriveSurface = 85,INDEX_DrvQueryGlyphAttrs = 86,INDEX_DrvNotify = 87,INDEX_DrvSynchronizeSurface = 88,INDEX_DrvResetDevice = 89,INDEX_DrvReserved9 = 90,INDEX_DrvReserved10 = 91,INDEX_DrvReserved11 = 92,INDEX_DrvRenderHint = 93,INDEX_DrvCreateDeviceBitmapEx = 94,INDEX_DrvDeleteDeviceBitmapEx = 95,INDEX_DrvAssociateSharedSurface = 96,INDEX_DrvSynchronizeRedirectionBitmaps = 97,INDEX_DrvAccumulateD3DDirtyRect = 98,INDEX_DrvStartDxInterop = 99,INDEX_DrvEndDxInterop = 100,INDEX_DrvLockDisplayArea = 101,INDEX_DrvUnlockDisplayArea = 102,INDEX_LAST = 103,};
enum MACRO_INHERIT_ACE {OBJECT_INHERIT_ACE = 0x1,CONTAINER_INHERIT_ACE = 0x2,NO_PROPAGATE_INHERIT_ACE = 0x4,INHERIT_ONLY_ACE = 0x8,INHERITED_ACE = 0x10,};
enum MACRO_INVALID : __int64 {INVALID_FILE_ATTRIBUTES = 4294967295,};
enum MACRO_INVALID_ACTIVATION {INVALID_ACTIVATION_CONTEXT = -1,};
enum MACRO_IO {IO_COMPLETION_QUERY_STATE = 0x1,IO_COMPLETION_MODIFY_STATE = 0x2,};
enum MACRO_IOCTL {IOCTL_VOLUME_BASE = 86,};
enum MACRO_IOCTL_TAPE {IOCTL_TAPE_ERASE = 2080768,IOCTL_TAPE_PREPARE = 2048004,IOCTL_TAPE_WRITE_MARKS = 2080776,IOCTL_TAPE_GET_POSITION = 2048012,IOCTL_TAPE_SET_POSITION = 2048016,IOCTL_TAPE_GET_DRIVE_PARAMS = 2048020,IOCTL_TAPE_SET_DRIVE_PARAMS = 2080792,IOCTL_TAPE_GET_MEDIA_PARAMS = 2048028,IOCTL_TAPE_SET_MEDIA_PARAMS = 2048032,IOCTL_TAPE_GET_STATUS = 2048036,IOCTL_TAPE_CREATE_PARTITION = 2080808,};
enum MACRO_IO_ATTACH {IO_ATTACH_DEVICE_API = 0x80000000,};
enum MACRO_IO_REPARSE {IO_REPARSE_TAG_RESERVED_ZERO = 0,IO_REPARSE_TAG_RESERVED_ONE = 1,IO_REPARSE_TAG_RESERVED_RANGE = 1,IO_REPARSE_TAG_VALID_VALUES = -536805377,IO_REPARSE_TAG_SYMBOLIC_LINK = 0,IO_REPARSE_TAG_MOUNT_POINT = -1610612733,IO_REPARSE_TAG_SYMLINK = -1610612724,};
enum MACRO_IS {IS_TEXT_UNICODE_ASCII16 = 1,IS_TEXT_UNICODE_REVERSE_ASCII16 = 16,IS_TEXT_UNICODE_STATISTICS = 2,IS_TEXT_UNICODE_REVERSE_STATISTICS = 32,IS_TEXT_UNICODE_CONTROLS = 4,IS_TEXT_UNICODE_REVERSE_CONTROLS = 64,IS_TEXT_UNICODE_SIGNATURE = 8,IS_TEXT_UNICODE_REVERSE_SIGNATURE = 128,IS_TEXT_UNICODE_ILLEGAL_CHARS = 256,IS_TEXT_UNICODE_ODD_LENGTH = 512,IS_TEXT_UNICODE_DBCS_LEADBYTE = 1024,IS_TEXT_UNICODE_NULL_BYTES = 4096,IS_TEXT_UNICODE_UNICODE_MASK = 15,IS_TEXT_UNICODE_REVERSE_MASK = 240,IS_TEXT_UNICODE_NOT_UNICODE_MASK = 3840,IS_TEXT_UNICODE_NOT_ASCII_MASK = 61440,};
enum MACRO_JOB {JOB_OBJECT_LIMIT_WORKINGSET = 0x1,JOB_OBJECT_LIMIT_PROCESS_TIME = 0x2,JOB_OBJECT_LIMIT_JOB_TIME = 0x4,JOB_OBJECT_LIMIT_ACTIVE_PROCESS = 0x8,JOB_OBJECT_LIMIT_AFFINITY = 0x10,JOB_OBJECT_LIMIT_PRIORITY_CLASS = 0x20,JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME = 0x40,JOB_OBJECT_LIMIT_SCHEDULING_CLASS = 0x80,JOB_OBJECT_LIMIT_PROCESS_MEMORY = 0x100,JOB_OBJECT_LIMIT_JOB_MEMORY = 0x200,JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION = 0x400,JOB_OBJECT_LIMIT_BREAKAWAY_OK = 0x800,JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK = 0x1000,JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE = 0x2000,JOB_OBJECT_UILIMIT_HANDLES = 0x1,JOB_OBJECT_UILIMIT_READCLIPBOARD = 0x2,JOB_OBJECT_UILIMIT_WRITECLIPBOARD = 0x4,JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS = 0x8,JOB_OBJECT_UILIMIT_DISPLAYSETTINGS = 0x10,JOB_OBJECT_UILIMIT_GLOBALATOMS = 0x20,JOB_OBJECT_UILIMIT_DESKTOP = 0x40,JOB_OBJECT_UILIMIT_EXITWINDOWS = 0x80,JOB_OBJECT_SECURITY_NO_ADMIN = 0x1,JOB_OBJECT_SECURITY_RESTRICTED_TOKEN = 0x2,JOB_OBJECT_SECURITY_ONLY_TOKEN = 0x4,JOB_OBJECT_SECURITY_FILTER_TOKENS = 0x8,JOB_OBJECT_TERMINATE_AT_END_OF_JOB = 0x0,JOB_OBJECT_POST_AT_END_OF_JOB = 0x1,JOB_OBJECT_MSG_END_OF_JOB_TIME = 0x1,JOB_OBJECT_MSG_END_OF_PROCESS_TIME = 0x2,JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT = 0x3,JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO = 0x4,JOB_OBJECT_MSG_NEW_PROCESS = 0x6,JOB_OBJECT_MSG_EXIT_PROCESS = 0x7,JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS = 0x8,JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT = 0x9,JOB_OBJECT_MSG_JOB_MEMORY_LIMIT = 0xA,JOB_OBJECT_ASSIGN_PROCESS = 0x1,JOB_OBJECT_SET_ATTRIBUTES = 0x2,JOB_OBJECT_QUERY = 0x4,JOB_OBJECT_TERMINATE = 0x8,JOB_OBJECT_SET_SECURITY_ATTRIBUTES = 0x10,JOB_OBJECT_ALL_ACCESS = 0x1F001F,};
enum MACRO_JOIN {JOIN_ROUND = 0,JOIN_BEVEL = 1,JOIN_MITER = 2,};
enum MACRO_KERNEL {KERNEL_USER_SHARED_DATA = 0x7FFE0000,};
enum MACRO_KEY {KEY_QUERY_VALUE = 1,KEY_SET_VALUE = 2,KEY_CREATE_SUB_KEY = 4,KEY_ENUMERATE_SUB_KEYS = 8,KEY_NOTIFY = 16,KEY_CREATE_LINK = 32,KEY_WOW64_64KEY = 256,KEY_WOW64_32KEY = 512,KEY_WOW64_RES = 768,KEY_WRITE = 131078,KEY_EXECUTE = 131097,KEY_READ = 131097,KEY_ALL_ACCESS = 983103,};
enum MACRO_KEYEDEVENT {KEYEDEVENT_WAIT = 0x1,KEYEDEVENT_WAKE = 0x2,KEYEDEVENT_ALL_ACCESS = 0xF0003,};
enum MACRO_KF {KF_V86_VIS = 0x1,KF_RDTSC = 0x2,KF_CR4 = 0x4,KF_CMOV = 0x8,KF_GLOBAL_PAGE = 0x10,KF_LARGE_PAGE = 0x20,KF_MTRR = 0x40,KF_CMPXCHG8B = 0x80,KF_MMX = 0x100,KF_WORKING_PTE = 0x200,KF_PAT = 0x400,KF_FXSR = 0x800,KF_FAST_SYSCALL = 0x1000,KF_XMMI = 0x2000,KF_3DNOW = 0x4000,KF_AMDK6MTRR = 0x8000,KF_XMMI64 = 0x10000,KF_DTS = 0x20000,KF_BRANCH = 0x20000,KF_SSE3 = 0x80000,KF_CMPXCHG16B = 0x100000,KF_XSTATE = 0x800000,KF_NX_BIT = 0x20000000,KF_NX_DISABLED = 0x40000000,KF_NX_ENABLED = 0x80000000,KF_XSAVEOPT_BIT = 0xF,KF_XSTATE_BIT = 0x17,KF_RDWRFSGSBASE_BIT = 0x1C,};
enum MACRO_KGDT {KGDT_BASE_LOW = 0x2,KGDT_BASE_MID = 0x4,KGDT_BASE_HI = 0x7,KGDT_LIMIT_HI = 0x6,KGDT_LIMIT_LOW = 0x0,};
enum MACRO_KI {KI_USER_SHARED_DATA_PHYSICAL = 0x41000,};
enum MACRO_KINTERRUPT {KINTERRUPT_INTERRUPT_LIST_HEAD = 0x4,KINTERRUPT_SERVICE_ROUTINE = 0xC,KINTERRUPT_SERVICE_CONTEXT = 0x10,KINTERRUPT_TICK_COUNT = 0x18,KINTERRUPT_ACTUAL_LOCK = 0x1C,KINTERRUPT_DISPATCH_ADDRESS = 0x20,KINTERRUPT_VECTOR = 0x24,KINTERRUPT_IRQL = 0x28,KINTERRUPT_SYNCHRONIZE_IRQL = 0x29,KINTERRUPT_DISPATCH_COUNT = 0x38,KINTERRUPT_DISPATCH_CODE = 0x3C,};
enum MACRO_KI_EXCEPTION {KI_EXCEPTION_INTERNAL = 0x10000000,KI_EXCEPTION_ACCESS_VIOLATION = 0x10000004,};
enum MACRO_KOBJECT {KOBJECT_TYPE_MASK = 0x7F,KOBJECT_LOCK_BIT = 0x80,};
enum MACRO_KPCR {KPCR_EXCEPTION_LIST = 0x0,KPCR_INITIAL_STACK = 0x4,KPCR_STACK_LIMIT = 0x8,KPCR_PERF_GLOBAL_GROUP_MASK = 0x8,KPCR_CONTEXT_SWITCHES = 0x10,KPCR_SET_MEMBER_COPY = 0x14,KPCR_TEB = 0x18,KPCR_SELF = 0x1C,KPCR_PRCB = 0x20,KPCR_IRQL = 0x24,KPCR_IRR = 0x28,KPCR_IRR_ACTIVE = 0x2C,KPCR_IDR = 0x30,KPCR_KD_VERSION_BLOCK = 0x34,KPCR_IDT = 0x38,KPCR_GDT = 0x3C,KPCR_TSS = 0x40,KPCR_STALL_SCALE_FACTOR = 0x4C,KPCR_SET_MEMBER = 0x48,KPCR_NUMBER = 0x51,KPCR_VDM_ALERT = 0x54,KPCR_PRCB_DATA = 0x120,KPCR_CURRENT_THREAD = 0x124,KPCR_PRCB_NEXT_THREAD = 0x128,KPCR_PRCB_IDLE_THREAD = 0x12C,KPCR_PROCESSOR_NUMBER = 0x130,KPCR_PRCB_SET_MEMBER = 0x134,KPCR_PRCB_CPU_TYPE = 0x138,KPCR_PRCB_PRCB_LOCK = 0xA7C,KPCR_NPX_THREAD = 0x640,KPCR_DR6 = 0x428,KPCR_DR7 = 0x42C,KPCR_PRCB_INTERRUPT_COUNT = 0x644,KPCR_PRCB_KERNEL_TIME = 0x648,KPCR_PRCB_USER_TIME = 0x64C,KPCR_PRCB_DPC_TIME = 0x650,KPCR_PRCB_DEBUG_DPC_TIME = 0x654,KPCR_PRCB_INTERRUPT_TIME = 0x658,KPCR_PRCB_ADJUST_DPC_THRESHOLD = 0x65C,KPCR_PRCB_SKIP_TICK = 0x664,KPCR_SYSTEM_CALLS = 0x6B8,KPCR_PRCB_DPC_QUEUE_DEPTH = 0xA4C,KPCR_PRCB_DPC_COUNT = 0xA50,KPCR_PRCB_DPC_STACK = 0xA68,KPCR_PRCB_MAXIMUM_DPC_QUEUE_DEPTH = 0xA6C,KPCR_PRCB_DPC_REQUEST_RATE = 0xA70,KPCR_PRCB_DPC_INTERRUPT_REQUESTED = 0xA78,KPCR_PRCB_DPC_ROUTINE_ACTIVE = 0xA7A,KPCR_PRCB_DPC_LAST_COUNT = 0xA80,KPCR_PRCB_TIMER_REQUEST = 0xA88,KPCR_PRCB_QUANTUM_END = 0xAA1,KPCR_PRCB_IDLE_SCHEDULE = 0xAA3,KPCR_PRCB_DEFERRED_READY_LIST_HEAD = 0xC10,KPCR_PRCB_POWER_STATE_IDLE_FUNCTION = 0xEC0,};
enum MACRO_KPRCB {KPRCB_DR0 = 0x2F8,KPRCB_DR1 = 0x2FC,KPRCB_DR2 = 0x300,KPRCB_DR3 = 0x304,KPRCB_DR6 = 0x308,KPRCB_DR7 = 0x30C,KPRCB_TIMER_HAND = 0x964,KPRCB_TIMER_REQUEST = 0x968,};
enum MACRO_KPROCESS {KPROCESS_DIRECTORY_TABLE_BASE = 0x18,KPROCESS_LDT_DESCRIPTOR0 = 0x20,KPROCESS_LDT_DESCRIPTOR1 = 0x24,KPROCESS_INT21_DESCRIPTOR0 = 0x28,KPROCESS_INT21_DESCRIPTOR1 = 0x2C,KPROCESS_IOPM_OFFSET = 0x30,KPROCESS_ACTIVE_PROCESSORS = 0x34,};
enum MACRO_KSEG0 {KSEG0_BASE_PAE = 0xE0000000,};
enum MACRO_KTHREAD {KTHREAD_DEBUG_ACTIVE = 0x3,KTHREAD_INITIAL_STACK = 0x18,KTHREAD_STACK_LIMIT = 0x1C,KTHREAD_TEB = 0x74,KTHREAD_KERNEL_STACK = 0x20,KTHREAD_ALERTED = 0x5E,KTHREAD_APCSTATE_PROCESS = 0x38,KTHREAD_PENDING_USER_APC = 0x3E,KTHREAD_PENDING_KERNEL_APC = 0x3D,KTHREAD_CONTEXT_SWITCHES = 0x48,KTHREAD_STATE_ = 0x4C,KTHREAD_NPX_STATE = 0x4D,KTHREAD_WAIT_IRQL = 0x4E,KTHREAD_NEXT_PROCESSOR = 0x40,KTHREAD_WAIT_REASON = 0x5A,KTHREAD_PRIORITY = 0x5B,KTHREAD_SWAP_BUSY = 0x5D,KTHREAD_SERVICE_TABLE = 0x118,KTHREAD_PREVIOUS_MODE = 0xD7,KTHREAD_COMBINED_APC_DISABLE = 0x70,KTHREAD_SPECIAL_APC_DISABLE = 0x72,KTHREAD_LARGE_STACK = 0x107,KTHREAD_TRAP_FRAME = 0x110,KTHREAD_CALLBACK_STACK = 0x114,KTHREAD_APC_STATE_INDEX = 0x11C,KTHREAD_STACK_BASE = 0x158,KTHREAD_QUANTUM = 0x15D,KTHREAD_KERNEL_TIME = 0x160,KTHREAD_USER_TIME = 0x18C,};
enum MACRO_KTRAP {KTRAP_FRAME_DEBUGEBP = 0x0,KTRAP_FRAME_DEBUGEIP = 0x4,KTRAP_FRAME_DEBUGARGMARK = 0x8,KTRAP_FRAME_DEBUGPOINTER = 0xC,KTRAP_FRAME_TEMPCS = 0x10,KTRAP_FRAME_TEMPESP = 0x14,KTRAP_FRAME_DR0 = 0x18,KTRAP_FRAME_DR1 = 0x1C,KTRAP_FRAME_DR2 = 0x20,KTRAP_FRAME_DR3 = 0x24,KTRAP_FRAME_DR6 = 0x28,KTRAP_FRAME_DR7 = 0x2C,KTRAP_FRAME_GS = 0x30,KTRAP_FRAME_RESERVED1 = 0x32,KTRAP_FRAME_ES = 0x34,KTRAP_FRAME_RESERVED2 = 0x36,KTRAP_FRAME_DS = 0x38,KTRAP_FRAME_RESERVED3 = 0x3A,KTRAP_FRAME_EDX = 0x3C,KTRAP_FRAME_ECX = 0x40,KTRAP_FRAME_EAX = 0x44,KTRAP_FRAME_PREVIOUS_MODE = 0x48,KTRAP_FRAME_EXCEPTION_LIST = 0x4C,KTRAP_FRAME_FS = 0x50,KTRAP_FRAME_RESERVED4 = 0x52,KTRAP_FRAME_EDI = 0x54,KTRAP_FRAME_ESI = 0x58,KTRAP_FRAME_EBX = 0x5C,KTRAP_FRAME_EBP = 0x60,KTRAP_FRAME_ERROR_CODE = 0x64,KTRAP_FRAME_EIP = 0x68,KTRAP_FRAME_CS = 0x6C,KTRAP_FRAME_EFLAGS = 0x70,KTRAP_FRAME_ESP = 0x74,KTRAP_FRAME_SS = 0x78,KTRAP_FRAME_RESERVED5 = 0x7A,KTRAP_FRAME_V86_ES = 0x7C,KTRAP_FRAME_RESERVED6 = 0x7E,KTRAP_FRAME_V86_DS = 0x80,KTRAP_FRAME_RESERVED7 = 0x82,KTRAP_FRAME_V86_FS = 0x84,KTRAP_FRAME_RESERVED8 = 0x86,KTRAP_FRAME_V86_GS = 0x88,KTRAP_FRAME_RESERVED9 = 0x8A,KTRAP_FRAME_SIZE = 0x8C,KTRAP_FRAME_LENGTH = 0x8C,KTRAP_FRAME_ALIGN = 0x4,};
enum MACRO_KTSS {KTSS_ESP0 = 0x4,KTSS_CR3 = 0x1C,KTSS_EIP = 0x20,KTSS_EFLAGS = 0x24,KTSS_EAX = 0x28,KTSS_ECX = 0x2C,KTSS_EDX = 0x30,KTSS_EBX = 0x34,KTSS_ESP = 0x38,KTSS_EBP = 0x3C,KTSS_ESI = 0x40,KTSS_EDI = 0x44,KTSS_ES = 0x48,KTSS_CS = 0x4C,KTSS_SS = 0x50,KTSS_DS = 0x54,KTSS_FS = 0x58,KTSS_GS = 0x5C,KTSS_LDT = 0x60,KTSS_IOMAPBASE = 0x66,KTSS_IO_MAPS = 0x68,};
enum MACRO_KUSER {KUSER_SHARED_PROCESSOR_FEATURES = 0x7FFE0274,KUSER_SHARED_SYSCALL = 0x7FFE0300,KUSER_SHARED_SYSCALL_RET = 0x7FFE0304,};
enum MACRO_LA {LA_GEOMETRIC = 0x1,LA_ALTERNATE = 0x2,LA_STARTGAP = 0x4,LA_STYLED = 0x8,};
enum MACRO_LANG {LANG_NEUTRAL = 0x0,LANG_INVARIANT = 0x7F,LANG_AFRIKAANS = 0x36,LANG_ALBANIAN = 0x1C,LANG_ALSATIAN = 0x84,LANG_AMHARIC = 0x5E,LANG_ARABIC = 0x1,LANG_ARMENIAN = 0x2B,LANG_ASSAMESE = 0x4D,LANG_AZERI = 0x2C,LANG_AZERBAIJANI = 0x2C,LANG_BANGLA = 0x45,LANG_BASHKIR = 0x6D,LANG_BASQUE = 0x2D,LANG_BELARUSIAN = 0x23,LANG_BENGALI = 0x45,LANG_BOSNIAN = 0x1A,LANG_BOSNIAN_NEUTRAL = 0x781A,LANG_BRETON = 0x7E,LANG_BULGARIAN = 0x2,LANG_CATALAN = 0x3,LANG_CENTRAL_KURDISH = 0x92,LANG_CHEROKEE = 0x5C,LANG_CHINESE = 0x4,LANG_CHINESE_SIMPLIFIED = 0x4,LANG_CHINESE_TRADITIONAL = 0x7C04,LANG_CORSICAN = 0x83,LANG_CROATIAN = 0x1A,LANG_CZECH = 0x5,LANG_DANISH = 0x6,LANG_DARI = 0x8C,LANG_DIVEHI = 0x65,LANG_DUTCH = 0x13,LANG_ENGLISH = 0x9,LANG_ESTONIAN = 0x25,LANG_FAEROESE = 0x38,LANG_FARSI = 0x29,LANG_FILIPINO = 0x64,LANG_FINNISH = 0xB,LANG_FRENCH = 0xC,LANG_FRISIAN = 0x62,LANG_FULAH = 0x67,LANG_GALICIAN = 0x56,LANG_GEORGIAN = 0x37,LANG_GERMAN = 0x7,LANG_GREEK = 0x8,LANG_GREENLANDIC = 0x6F,LANG_GUJARATI = 0x47,LANG_HAUSA = 0x68,LANG_HAWAIIAN = 0x75,LANG_HEBREW = 0xD,LANG_HINDI = 0x39,LANG_HUNGARIAN = 0xE,LANG_ICELANDIC = 0xF,LANG_IGBO = 0x70,LANG_INDONESIAN = 0x21,LANG_INUKTITUT = 0x5D,LANG_IRISH = 0x3C,LANG_ITALIAN = 0x10,LANG_JAPANESE = 0x11,LANG_KANNADA = 0x4B,LANG_KASHMIRI = 0x60,LANG_KAZAK = 0x3F,LANG_KHMER = 0x53,LANG_KICHE = 0x86,LANG_KINYARWANDA = 0x87,LANG_KONKANI = 0x57,LANG_KOREAN = 0x12,LANG_KYRGYZ = 0x40,LANG_LAO = 0x54,LANG_LATVIAN = 0x26,LANG_LITHUANIAN = 0x27,LANG_LOWER_SORBIAN = 0x2E,LANG_LUXEMBOURGISH = 0x6E,LANG_MACEDONIAN = 0x2F,LANG_MALAY = 0x3E,LANG_MALAYALAM = 0x4C,LANG_MALTESE = 0x3A,LANG_MANIPURI = 0x58,LANG_MAORI = 0x81,LANG_MAPUDUNGUN = 0x7A,LANG_MARATHI = 0x4E,LANG_MOHAWK = 0x7C,LANG_MONGOLIAN = 0x50,LANG_NEPALI = 0x61,LANG_NORWEGIAN = 0x14,LANG_OCCITAN = 0x82,LANG_ODIA = 0x48,LANG_ORIYA = 0x48,LANG_PASHTO = 0x63,LANG_PERSIAN = 0x29,LANG_POLISH = 0x15,LANG_PORTUGUESE = 0x16,LANG_PULAR = 0x67,LANG_PUNJABI = 0x46,LANG_QUECHUA = 0x6B,LANG_ROMANIAN = 0x18,LANG_ROMANSH = 0x17,LANG_RUSSIAN = 0x19,LANG_SAKHA = 0x85,LANG_SAMI = 0x3B,LANG_SANSKRIT = 0x4F,LANG_SCOTTISH_GAELIC = 0x91,LANG_SERBIAN = 0x1A,LANG_SERBIAN_NEUTRAL = 0x7C1A,LANG_SINDHI = 0x59,LANG_SINHALESE = 0x5B,LANG_SLOVAK = 0x1B,LANG_SLOVENIAN = 0x24,LANG_SOTHO = 0x6C,LANG_SPANISH = 0xA,LANG_SWAHILI = 0x41,LANG_SWEDISH = 0x1D,LANG_SYRIAC = 0x5A,LANG_TAJIK = 0x28,LANG_TAMAZIGHT = 0x5F,LANG_TAMIL = 0x49,LANG_TATAR = 0x44,LANG_TELUGU = 0x4A,LANG_THAI = 0x1E,LANG_TIBETAN = 0x51,LANG_TIGRIGNA = 0x73,LANG_TIGRINYA = 0x73,LANG_TSWANA = 0x32,LANG_TURKISH = 0x1F,LANG_TURKMEN = 0x42,LANG_UIGHUR = 0x80,LANG_UKRAINIAN = 0x22,LANG_UPPER_SORBIAN = 0x2E,LANG_URDU = 0x20,LANG_UZBEK = 0x43,LANG_VALENCIAN = 0x3,LANG_VIETNAMESE = 0x2A,LANG_WELSH = 0x52,LANG_WOLOF = 0x88,LANG_XHOSA = 0x34,LANG_YAKUT = 0x85,LANG_YI = 0x78,LANG_YORUBA = 0x6A,LANG_ZULU = 0x35,};
enum MACRO_LANG_ESPERANTO {LANG_ESPERANTO = 0x8F,LANG_WALON = 0x90,LANG_CORNISH = 0x92,LANG_MALAGASY = 0x8D,LANG_GAELIC = 0x94,LANG_SAAMI = 0x3B,LANG_SUTU = 0x30,LANG_TSONGA = 0x31,LANG_VENDA = 0x33,LANG_MANX_GAELIC = 0x94,};
enum MACRO_LANG_SYSTEM {LANG_SYSTEM_DEFAULT = 2048,LANG_USER_DEFAULT = 1024,};
enum MACRO_LAYOUT {LAYOUT_LTR = 0,LAYOUT_RTL = 1,LAYOUT_BTT = 2,LAYOUT_VBH = 4,LAYOUT_ORIENTATIONMASK = 7,LAYOUT_BITMAPORIENTATIONPRESERVED = 8,};
enum MACRO_LC {LC_NONE = 0,LC_POLYLINE = 2,LC_MARKER = 4,LC_POLYMARKER = 8,LC_WIDE = 16,LC_STYLED = 32,LC_WIDESTYLED = 64,LC_INTERIORS = 128,};
enum MACRO_LCPRI {LCPRI_FORCECONFIG = 0x0,LCPRI_BOOTCONFIG = 0x1,LCPRI_DESIRED = 0x2000,LCPRI_NORMAL = 0x3000,LCPRI_LASTBESTCONFIG = 0x3FFF,LCPRI_SUBOPTIMAL = 0x5000,LCPRI_LASTSOFTCONFIG = 0x7FFF,LCPRI_RESTART = 0x8000,LCPRI_REBOOT = 0x9000,LCPRI_POWEROFF = 0xA000,LCPRI_HARDRECONFIG = 0xC000,LCPRI_HARDWIRED = 0xE000,LCPRI_IMPOSSIBLE = 0xF000,LCPRI_DISABLED = 0xFFFF,};
enum MACRO_LCS {LCS_CALIBRATED_RGB = 0,LCS_DEVICE_RGB = 1,LCS_DEVICE_CMYK = 2,LCS_GM_BUSINESS = 1,LCS_GM_GRAPHICS = 2,LCS_GM_IMAGES = 4,LCS_GM_ABS_COLORIMETRIC = 8,LCS_SIGNATURE = 1347637059,LCS_sRGB = 1934772034,LCS_WINDOWS_COLOR_SPACE = 1466527264,};
enum MACRO_LDR {LDR_COR_OWNS_UNMAP = 0x800000,};
enum MACRO_LDRP {LDRP_STATIC_LINK = 0x2,LDRP_IMAGE_DLL = 0x4,LDRP_LOAD_IN_PROGRESS = 0x1000,LDRP_UNLOAD_IN_PROGRESS = 0x2000,LDRP_ENTRY_PROCESSED = 0x4000,LDRP_ENTRY_INSERTED = 0x8000,LDRP_CURRENT_LOAD = 0x10000,LDRP_FAILED_BUILTIN_LOAD = 0x20000,LDRP_DONT_CALL_FOR_THREADS = 0x40000,LDRP_PROCESS_ATTACH_CALLED = 0x80000,LDRP_DEBUG_SYMBOLS_LOADED = 0x100000,LDRP_IMAGE_NOT_AT_BASE = 0x200000,LDRP_COR_IMAGE = 0x400000,};
enum MACRO_LDRP_SYSTEM {LDRP_SYSTEM_MAPPED = 0x1000000,LDRP_IMAGE_VERIFYING = 0x2000000,LDRP_DRIVER_DEPENDENT_DLL = 0x4000000,LDRP_ENTRY_NATIVE = 0x8000000,LDRP_REDIRECTED = 0x10000000,LDRP_NON_PAGED_DEBUG_INFO = 0x20000000,LDRP_MM_LOADED = 0x40000000,LDRP_COMPAT_DATABASE_PROCESSED = 0x80000000,};
enum MACRO_LDR_IGNORE {LDR_IGNORE_CODE_AUTHZ_LEVEL = 0x1000,LDR_ADDREF_DLL_PIN = 0x1,LDR_LOCK_LOADER_LOCK_FLAG_RAISE_ON_ERRORS = 0x1,LDR_LOCK_LOADER_LOCK_FLAG_TRY_ONLY = 0x2,LDR_UNLOCK_LOADER_LOCK_FLAG_RAISE_ON_ERRORS = 0x1,LDR_GET_DLL_HANDLE_EX_UNCHANGED_REFCOUNT = 0x1,LDR_GET_DLL_HANDLE_EX_PIN = 0x2,LDR_LOCK_LOADER_LOCK_DISPOSITION_INVALID = 0x0,LDR_LOCK_LOADER_LOCK_DISPOSITION_LOCK_ACQUIRED = 0x1,LDR_LOCK_LOADER_LOCK_DISPOSITION_LOCK_NOT_ACQUIRED = 0x2,};
enum MACRO_LEGAL {DR6_LEGAL = 0xE00F,DR7_LEGAL = 0xFFFF0155,};
enum MACRO_LF {LF_FACESIZE = 32,LF_FULLFACESIZE = 64,};
enum MACRO_LINECAPS {LINECAPS = 30,};
enum MACRO_LOCALE {LOCALE_NAME_MAX_LENGTH = 85,};
enum MACRO_LOCALE_SYSTEM {LOCALE_SYSTEM_DEFAULT = 2048,LOCALE_USER_DEFAULT = 1024,LOCALE_CUSTOM_DEFAULT = 3072,LOCALE_CUSTOM_UNSPECIFIED = 4096,LOCALE_CUSTOM_UI_DEFAULT = 5120,LOCALE_NEUTRAL = 0,LOCALE_INVARIANT = 127,};
enum MACRO_LOGPIXELSX {LOGPIXELSX = 88,};
enum MACRO_LOGPIXELSY {LOGPIXELSY = 90,};
enum MACRO_LOW {LOW_PRIORITY = 0,LOW_REALTIME_PRIORITY = 16,};
enum MACRO_LPCP {LPCP_CONNECTION_PORT = 0x1,LPCP_UNCONNECTED_PORT = 0x2,LPCP_COMMUNICATION_PORT = 0x3,LPCP_CLIENT_PORT = 0x4,LPCP_PORT_TYPE_MASK = 0xF,LPCP_PORT_DELETED = 0x10000000,LPCP_WAITABLE_PORT = 0x20000000,LPCP_NAME_DELETED = 0x40000000,LPCP_SECURITY_DYNAMIC = 0x80000000,};
enum MACRO_LPD {LPD_DOUBLEBUFFER = 1,LPD_STEREO = 2,LPD_SUPPORT_GDI = 16,LPD_SUPPORT_OPENGL = 32,LPD_SHARE_DEPTH = 64,LPD_SHARE_STENCIL = 128,LPD_SHARE_ACCUM = 256,LPD_SWAP_EXCHANGE = 512,LPD_SWAP_COPY = 1024,LPD_TRANSPARENT = 4096,LPD_TYPE_RGBA = 0,LPD_TYPE_COLORINDEX = 1,};
enum MACRO_MAILSLOT : __int64 {MAILSLOT_NO_MESSAGE = 4294967295,MAILSLOT_WAIT_FOREVER = 4294967295,};
enum MACRO_MAP {MAP_PROCESS = 1,MAP_SYSTEM = 2,};
enum MACRO_MASK {OSVERSION_MASK = 0xFFFF0000,SPVERSION_MASK = 0xFF00,SUBVERSION_MASK = 0xFF,};
enum MACRO_MAX {FILENAME_MAX = 260,FOPEN_MAX = 20,};
enum MACRO_MAXBYTE {MAXBYTE = 0xFF,};
enum MACRO_MAXCHAR {MAXCHAR = 0x7F,MINSHORT = 0x8000,};
enum MACRO_MAXCHARSETS {MAXCHARSETS = 16,};
enum MACRO_MAXDWORD {MAXDWORD = 0xFFFFFFFF,};
enum MACRO_MAXIMUM {MAXIMUM_PROCESSORS = 32,};
enum MACRO_MAXIMUM_ALLOWED {MAXIMUM_ALLOWED = 0x2000000,};
enum MACRO_MAXIMUM_HARDERROR {MAXIMUM_HARDERROR_PARAMETERS = 5,};
enum MACRO_MAXIMUM_IDTVECTOR {MAXIMUM_IDTVECTOR = 0xFF,};
enum MACRO_MAXIMUM_LEADBYTES {MAXIMUM_LEADBYTES = 12,};
enum MACRO_MAXIMUM_NUMA {MAXIMUM_NUMA_NODES = 16,};
enum MACRO_MAXIMUM_REPARSE {MAXIMUM_REPARSE_DATA_BUFFER_SIZE = 16384,};
enum MACRO_MAXIMUM_SUPPORTED {MAXIMUM_SUPPORTED_EXTENSION = 512,};
enum MACRO_MAXLONG {MAXLONG = 0x7FFFFFFF,};
enum MACRO_MAXLONGLONG : __int64 {MAXLONGLONG = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_MAXSHORT {MAXSHORT = 0x7FFF,MINLONG = 0x80000000,};
enum MACRO_MAXSTRETCHBLTMODE {MAXSTRETCHBLTMODE = 4,};
enum MACRO_MAXUCHAR {MAXUCHAR = 0xFF,};
enum MACRO_MAXUINT : __int64 {MAXUINT = 4294967295,};
enum MACRO_MAXULONG {MAXULONG = 0xFFFFFFFF,};
enum MACRO_MAXUSHORT {MAXUSHORT = 0xFFFF,};
enum MACRO_MAXWORD {MAXWORD = 0xFFFF,};
enum MACRO_MAX_AUTOFLIP {MAX_AUTOFLIP_BUFFERS = 10,};
enum MACRO_MAX_BUS {MAX_BUS_NAME = 24,};
enum MACRO_MAX_DDDEVICEID {MAX_DDDEVICEID_STRING = 512,};
enum MACRO_MAX_LCPRI {MAX_LCPRI = 0xFFFF,};
enum MACRO_MAX_PATH {MAX_PATH = 260,};
enum MACRO_MAX_QUANTUM {MAX_QUANTUM = 0x7F,};
enum MACRO_MAX_WOW64 {MAX_WOW64_SHARED_ENTRIES = 16,};
enum MACRO_MEM {MEM_COMMIT = 0x1000,MEM_RESERVE = 0x2000,MEM_DECOMMIT = 0x4000,MEM_RELEASE = 0x8000,MEM_FREE = 0x10000,MEM_PRIVATE = 0x20000,MEM_MAPPED = 0x40000,MEM_RESET = 0x80000,MEM_TOP_DOWN = 0x100000,MEM_WRITE_WATCH = 0x200000,MEM_PHYSICAL = 0x400000,MEM_4MB_PAGES = 0x80000000,};
enum MACRO_MEMORY {MEMORY_ALLOCATION_ALIGNMENT = 8,};
enum MACRO_MEMORY_PRIORITY {MEMORY_PRIORITY_BACKGROUND = 0,MEMORY_PRIORITY_UNKNOWN = 1,MEMORY_PRIORITY_FOREGROUND = 2,};
enum MACRO_MEM_EXECUTE {MEM_EXECUTE_OPTION_DISABLE = 0x1,MEM_EXECUTE_OPTION_ENABLE = 0x2,MEM_EXECUTE_OPTION_DISABLE_THUNK_EMULATION = 0x4,MEM_EXECUTE_OPTION_PERMANENT = 0x8,MEM_EXECUTE_OPTION_EXECUTE_DISPATCH_ENABLE = 0x10,MEM_EXECUTE_OPTION_IMAGE_DISPATCH_ENABLE = 0x20,MEM_EXECUTE_OPTION_VALID_FLAGS = 0x3F,};
enum MACRO_MERGECOPY {MERGECOPY = 0xC000CA,};
enum MACRO_MERGEPAINT {MERGEPAINT = 0xBB0226,};
enum MACRO_MESSAGE {MESSAGE_RESOURCE_UNICODE = 1,};
enum MACRO_META {META_SETBKCOLOR = 0x201,META_SETBKMODE = 0x102,META_SETMAPMODE = 0x103,META_SETROP2 = 0x104,META_SETRELABS = 0x105,META_SETPOLYFILLMODE = 0x106,META_SETSTRETCHBLTMODE = 0x107,META_SETTEXTCHAREXTRA = 0x108,META_SETTEXTCOLOR = 0x209,META_SETTEXTJUSTIFICATION = 0x20A,META_SETWINDOWORG = 0x20B,META_SETWINDOWEXT = 0x20C,META_SETVIEWPORTORG = 0x20D,META_SETVIEWPORTEXT = 0x20E,META_OFFSETWINDOWORG = 0x20F,META_SCALEWINDOWEXT = 0x410,META_OFFSETVIEWPORTORG = 0x211,META_SCALEVIEWPORTEXT = 0x412,META_LINETO = 0x213,META_MOVETO = 0x214,META_EXCLUDECLIPRECT = 0x415,META_INTERSECTCLIPRECT = 0x416,META_ARC = 0x817,META_ELLIPSE = 0x418,META_FLOODFILL = 0x419,META_PIE = 0x81A,META_RECTANGLE = 0x41B,META_ROUNDRECT = 0x61C,META_PATBLT = 0x61D,META_SAVEDC = 0x1E,META_SETPIXEL = 0x41F,META_OFFSETCLIPRGN = 0x220,META_TEXTOUT = 0x521,META_BITBLT = 0x922,META_STRETCHBLT = 0xB23,META_POLYGON = 0x324,META_POLYLINE = 0x325,META_ESCAPE = 0x626,META_RESTOREDC = 0x127,META_FILLREGION = 0x228,META_FRAMEREGION = 0x429,META_INVERTREGION = 0x12A,META_PAINTREGION = 0x12B,META_SELECTCLIPREGION = 0x12C,META_SELECTOBJECT = 0x12D,META_SETTEXTALIGN = 0x12E,META_CHORD = 0x830,META_SETMAPPERFLAGS = 0x231,META_EXTTEXTOUT = 0xA32,META_SETDIBTODEV = 0xD33,META_SELECTPALETTE = 0x234,META_REALIZEPALETTE = 0x35,META_ANIMATEPALETTE = 0x436,META_SETPALENTRIES = 0x37,META_POLYPOLYGON = 0x538,META_RESIZEPALETTE = 0x139,META_DIBBITBLT = 0x940,META_DIBSTRETCHBLT = 0xB41,META_DIBCREATEPATTERNBRUSH = 0x142,META_STRETCHDIB = 0xF43,META_EXTFLOODFILL = 0x548,META_DELETEOBJECT = 0x1F0,META_CREATEPALETTE = 0xF7,META_CREATEPATTERNBRUSH = 0x1F9,META_CREATEPENINDIRECT = 0x2FA,META_CREATEFONTINDIRECT = 0x2FB,META_CREATEBRUSHINDIRECT = 0x2FC,META_CREATEREGION = 0x6FF,META_DRAWTEXT = 0x62F,META_RESETDC = 0x14C,META_STARTDOC = 0x14D,META_STARTPAGE = 0x4F,META_ENDPAGE = 0x50,META_ABORTDOC = 0x52,META_ENDDOC = 0x5E,META_CREATEBRUSH = 0xF8,META_CREATEBITMAPINDIRECT = 0x2FD,META_CREATEBITMAP = 0x6FE,};
enum MACRO_METHOD {METHOD_BUFFERED = 0,METHOD_IN_DIRECT = 1,METHOD_OUT_DIRECT = 2,METHOD_NEITHER = 3,};
enum MACRO_MFCOMMENT {MFCOMMENT = 15,GETPENWIDTH = 16,};
enum MACRO_MI {MI_HIGHEST_USER_ADDRESS = 0x7FFEFFFF,};
enum MACRO_MIN {MIN_UCSCHAR = 0,MAX_UCSCHAR = 1114111,};
enum MACRO_MINCHAR {MINCHAR = 0x80,};
enum MACRO_MINGW64 {MINGW64_VERSION_MAJOR = 1,MINGW64_VERSION_MINOR = 0,};
enum MACRO_MM {MM_ALLOCATION_GRANULARITY = 0x10000,MM_ALLOCATION_GRANULARITY_SHIFT = 0x10,MM_PAGE_FRAME_NUMBER_SIZE = 0x14,};
enum MACRO_MMPFNUSE {MMPFNUSE_PROCESSPRIVATE = 0,MMPFNUSE_FILE = 1,MMPFNUSE_PAGEFILEMAPPED = 2,MMPFNUSE_PAGETABLE = 3,MMPFNUSE_PAGEDPOOL = 4,MMPFNUSE_NONPAGEDPOOL = 5,MMPFNUSE_SYSTEMPTE = 6,MMPFNUSE_SESSIONPRIVATE = 7,MMPFNUSE_METAFILE = 8,MMPFNUSE_AWEPAGE = 9,MMPFNUSE_DRIVERLOCKPAGE = 10,MMPFNUSE_KERNELSTACK = 11,};
enum MACRO_MM_ANISOTROPIC {MM_ANISOTROPIC = 8,MM_HIENGLISH = 5,MM_HIMETRIC = 3,MM_ISOTROPIC = 7,MM_LOENGLISH = 4,MM_LOMETRIC = 2,MM_TEXT = 1,MM_TWIPS = 6,MM_MAX_FIXEDSCALE = 6,MM_MIN = 1,MM_MAX = 8,};
enum MACRO_MM_MAX {MM_MAX_NUMAXES = 16,MM_MAX_AXES_NAMELEN = 16,};
enum MACRO_MM_SHARED {MM_SHARED_USER_DATA_VA = 0x7FFE0000,};
enum MACRO_MONO {MONO_FONT = 8,};
enum MACRO_MOUSETRAILS {MOUSETRAILS = 39,};
enum MACRO_MS {MS_NOTSYSTEMMEMORY = 0x1,MS_SHAREDACCESS = 0x2,MS_CDDDEVICEBITMAP = 0x4,};
enum MACRO_MUTANT {MUTANT_INCREMENT = 1,};
enum MACRO_MWT {MWT_IDENTITY = 1,MWT_LEFTMULTIPLY = 2,MWT_RIGHTMULTIPLY = 3,MWT_MIN = 1,MWT_MAX = 3,};
enum MACRO_N {N_BTMASK = 0xF,N_TMASK = 0x30,N_TMASK1 = 0xC0,N_TMASK2 = 0xF0,N_BTSHFT = 0x4,N_TSHIFT = 0x2,};
enum MACRO_NEWFRAME {NEWFRAME = 1,ABORTDOC = 2,};
enum MACRO_NEXTBAND {NEXTBAND = 3,SETCOLORTABLE = 4,};
enum MACRO_NLS {NLS_VALID_LOCALE_MASK = 0xFFFFF,};
enum MACRO_NO {NO_ERROR = 0,};
enum MACRO_NOTSRCCOPY {NOTSRCCOPY = 0x330008,};
enum MACRO_NOTSRCERASE {NOTSRCERASE = 0x1100A6,};
enum MACRO_NOT_FOUND {WSASERVICE_NOT_FOUND = 10108,WSATYPE_NOT_FOUND = 10109,};
enum MACRO_NPX {NPX_FRAME_LENGTH = 0x210,};
enum MACRO_NPX_STATE {NPX_STATE_NOT_LOADED = 0xA,NPX_STATE_LOADED = 0x0,};
enum MACRO_NTDDI {NTDDI_WIN2K = 0x5000000,NTDDI_WIN2KSP1 = 0x5000100,NTDDI_WIN2KSP2 = 0x5000200,NTDDI_WIN2KSP3 = 0x5000300,NTDDI_WIN2KSP4 = 0x5000400,NTDDI_WINXP = 0x5010000,NTDDI_WINXPSP1 = 0x5010100,NTDDI_WINXPSP2 = 0x5010200,NTDDI_WINXPSP3 = 0x5010300,NTDDI_WINXPSP4 = 0x5010400,NTDDI_WS03 = 0x5020000,NTDDI_WS03SP1 = 0x5020100,NTDDI_WS03SP2 = 0x5020200,NTDDI_WS03SP3 = 0x5020300,NTDDI_WS03SP4 = 0x5020400,NTDDI_WIN6 = 0x6000000,NTDDI_WIN6SP1 = 0x6000100,NTDDI_WIN6SP2 = 0x6000200,NTDDI_WIN6SP3 = 0x6000300,NTDDI_WIN6SP4 = 0x6000400,NTDDI_LONGHORN = 0x6000000,NTDDI_VISTA = 0x6000000,NTDDI_VISTASP1 = 0x6000100,NTDDI_VISTASP2 = 0x6000200,NTDDI_VISTASP3 = 0x6000300,NTDDI_VISTASP4 = 0x6000400,NTDDI_WS08 = 0x6000100,NTDDI_WS08SP2 = 0x6000200,NTDDI_WS08SP3 = 0x6000300,NTDDI_WS08SP4 = 0x6000400,NTDDI_WIN7 = 0x6010000,NTDDI_WIN8 = 0x6020000,NTDDI_WINBLUE = 0x6030000,NTDDI_WINTHRESHOLD = 0xA000000,NTDDI_WIN10 = 0xA000000,NTDDI_WIN10_TH2 = 0xA000001,NTDDI_WIN10_RS1 = 0xA000002,NTDDI_WIN10_RS2 = 0xA000003,};
enum MACRO_NTM {NTM_NONNEGATIVE_AC = 0x10000,NTM_PS_OPENTYPE = 0x20000,NTM_TT_OPENTYPE = 0x40000,NTM_MULTIPLEMASTER = 0x80000,NTM_TYPE1 = 0x100000,NTM_DSIG = 0x200000,};
enum MACRO_NTM_ITALIC {NTM_ITALIC = 1,NTM_BOLD = 32,NTM_REGULAR = 64,};
enum MACRO_NULL {NULL = 0,_IOREAD = 1,_IOWRT = 2,};
enum MACRO_NULLREGION {NULLREGION = 1,SIMPLEREGION = 2,};
enum MACRO_NUM {NUM_DISCHARGE_POLICIES = 4,};
enum MACRO_NUMBER {NUMBER_SERVICE_TABLES = 2,};
enum MACRO_NUMBER_HASH {NUMBER_HASH_BUCKETS = 37,};
enum MACRO_NUMCOLORS {NUMCOLORS = 24,};
enum MACRO_NUMFONTS {NUMFONTS = 22,};
enum MACRO_NUMMARKERS {NUMMARKERS = 20,ASPECTX = 40,};
enum MACRO_NUMPENS {NUMPENS = 18,};
enum MACRO_NUMRESERVED {NUMRESERVED = 106,};
enum MACRO_NUM_CM {NUM_CM_PROB_V1 = 0x25,NUM_CM_PROB_V2 = 0x32,NUM_CM_PROB_V3 = 0x33,NUM_CM_PROB_V4 = 0x34,NUM_CM_PROB_V5 = 0x35,NUM_CM_PROB = 0x35,};
enum MACRO_OBJ {OBJ_INHERIT = 0x2,OBJ_PERMANENT = 0x10,OBJ_EXCLUSIVE = 0x20,OBJ_CASE_INSENSITIVE = 0x40,OBJ_OPENIF = 0x80,OBJ_OPENLINK = 0x100,OBJ_KERNEL_HANDLE = 0x200,OBJ_FORCE_ACCESS_CHECK = 0x400,OBJ_VALID_ATTRIBUTES = 0x7F2,OBJ_HANDLE_TAGBITS = 0x3,};
enum MACRO_OBJ_BRUSH {OBJ_BRUSH = 2,OBJ_PEN = 1,OBJ_PAL = 5,OBJ_FONT = 6,OBJ_BITMAP = 7,OBJ_EXTPEN = 11,OBJ_REGION = 8,OBJ_DC = 3,OBJ_MEMDC = 10,OBJ_METAFILE = 9,OBJ_METADC = 4,OBJ_ENHMETAFILE = 13,OBJ_ENHMETADC = 12,OBJ_COLORSPACE = 14,};
enum MACRO_OBJ_NAME {OBJ_NAME_PATH_SEPARATOR = 92,};
enum MACRO_OC {OC_BANK_CLIP = 1,};
enum MACRO_OPAQUE {OPAQUE = 2,};
enum MACRO_OPENCHANNEL {OPENCHANNEL = 4110,};
enum MACRO_OPENGL {OPENGL_CMD = 4352,OPENGL_GETINFO = 4353,};
enum MACRO_OR {OR_INVALID_OXID = 1910,OR_INVALID_OID = 1911,OR_INVALID_SET = 1912,};
enum MACRO_OUT {OUT_DEFAULT_PRECIS = 0,OUT_STRING_PRECIS = 1,OUT_CHARACTER_PRECIS = 2,OUT_STROKE_PRECIS = 3,OUT_TT_PRECIS = 4,OUT_DEVICE_PRECIS = 5,OUT_RASTER_PRECIS = 6,OUT_TT_ONLY_PRECIS = 7,OUT_OUTLINE_PRECIS = 8,OUT_SCREEN_OUTLINE_PRECIS = 9,OUT_PS_ONLY_PRECIS = 10,};
enum MACRO_PAGE {PAGE_NOACCESS = 0x1,PAGE_READONLY = 0x2,PAGE_READWRITE = 0x4,PAGE_WRITECOPY = 0x8,PAGE_EXECUTE = 0x10,PAGE_EXECUTE_READ = 0x20,PAGE_EXECUTE_READWRITE = 0x40,PAGE_EXECUTE_WRITECOPY = 0x80,PAGE_GUARD = 0x100,PAGE_NOCACHE = 0x200,PAGE_WRITECOMBINE = 0x400,};
enum MACRO_PAGE_SIZE {PAGE_SIZE = 0x1000,PAGE_SHIFT = 0xC,};
enum MACRO_PAL {PAL_INDEXED = 0x1,PAL_BITFIELDS = 0x2,PAL_RGB = 0x4,PAL_BGR = 0x8,PAL_CMYK = 0x10,};
enum MACRO_PAN {PAN_FAMILYTYPE_INDEX = 0,PAN_SERIFSTYLE_INDEX = 1,PAN_WEIGHT_INDEX = 2,PAN_PROPORTION_INDEX = 3,PAN_CONTRAST_INDEX = 4,PAN_STROKEVARIATION_INDEX = 5,PAN_ARMSTYLE_INDEX = 6,PAN_LETTERFORM_INDEX = 7,PAN_MIDLINE_INDEX = 8,PAN_XHEIGHT_INDEX = 9,PAN_CULTURE_LATIN = 0,PAN_ANY = 0,PAN_NO_FIT = 1,PAN_FAMILY_TEXT_DISPLAY = 2,PAN_FAMILY_SCRIPT = 3,PAN_FAMILY_DECORATIVE = 4,PAN_FAMILY_PICTORIAL = 5,PAN_SERIF_COVE = 2,PAN_SERIF_OBTUSE_COVE = 3,PAN_SERIF_SQUARE_COVE = 4,PAN_SERIF_OBTUSE_SQUARE_COVE = 5,PAN_SERIF_SQUARE = 6,PAN_SERIF_THIN = 7,PAN_SERIF_BONE = 8,PAN_SERIF_EXAGGERATED = 9,PAN_SERIF_TRIANGLE = 10,PAN_SERIF_NORMAL_SANS = 11,PAN_SERIF_OBTUSE_SANS = 12,PAN_SERIF_PERP_SANS = 13,PAN_SERIF_FLARED = 14,PAN_SERIF_ROUNDED = 15,PAN_WEIGHT_VERY_LIGHT = 2,PAN_WEIGHT_LIGHT = 3,PAN_WEIGHT_THIN = 4,PAN_WEIGHT_BOOK = 5,PAN_WEIGHT_MEDIUM = 6,PAN_WEIGHT_DEMI = 7,PAN_WEIGHT_BOLD = 8,PAN_WEIGHT_HEAVY = 9,PAN_WEIGHT_BLACK = 10,PAN_WEIGHT_NORD = 11,PAN_PROP_OLD_STYLE = 2,PAN_PROP_MODERN = 3,PAN_PROP_EVEN_WIDTH = 4,PAN_PROP_EXPANDED = 5,PAN_PROP_CONDENSED = 6,PAN_PROP_VERY_EXPANDED = 7,PAN_PROP_VERY_CONDENSED = 8,PAN_PROP_MONOSPACED = 9,PAN_CONTRAST_NONE = 2,PAN_CONTRAST_VERY_LOW = 3,PAN_CONTRAST_LOW = 4,PAN_CONTRAST_MEDIUM_LOW = 5,PAN_CONTRAST_MEDIUM = 6,PAN_CONTRAST_MEDIUM_HIGH = 7,PAN_CONTRAST_HIGH = 8,PAN_CONTRAST_VERY_HIGH = 9,PAN_STROKE_GRADUAL_DIAG = 2,PAN_STROKE_GRADUAL_TRAN = 3,PAN_STROKE_GRADUAL_VERT = 4,PAN_STROKE_GRADUAL_HORZ = 5,PAN_STROKE_RAPID_VERT = 6,PAN_STROKE_RAPID_HORZ = 7,PAN_STROKE_INSTANT_VERT = 8,PAN_STRAIGHT_ARMS_HORZ = 2,PAN_STRAIGHT_ARMS_WEDGE = 3,PAN_STRAIGHT_ARMS_VERT = 4,PAN_STRAIGHT_ARMS_SINGLE_SERIF = 5,PAN_STRAIGHT_ARMS_DOUBLE_SERIF = 6,PAN_BENT_ARMS_HORZ = 7,PAN_BENT_ARMS_WEDGE = 8,PAN_BENT_ARMS_VERT = 9,PAN_BENT_ARMS_SINGLE_SERIF = 10,PAN_BENT_ARMS_DOUBLE_SERIF = 11,PAN_LETT_NORMAL_CONTACT = 2,PAN_LETT_NORMAL_WEIGHTED = 3,PAN_LETT_NORMAL_BOXED = 4,PAN_LETT_NORMAL_FLATTENED = 5,PAN_LETT_NORMAL_ROUNDED = 6,PAN_LETT_NORMAL_OFF_CENTER = 7,PAN_LETT_NORMAL_SQUARE = 8,PAN_LETT_OBLIQUE_CONTACT = 9,PAN_LETT_OBLIQUE_WEIGHTED = 10,PAN_LETT_OBLIQUE_BOXED = 11,PAN_LETT_OBLIQUE_FLATTENED = 12,PAN_LETT_OBLIQUE_ROUNDED = 13,PAN_LETT_OBLIQUE_OFF_CENTER = 14,PAN_LETT_OBLIQUE_SQUARE = 15,PAN_MIDLINE_STANDARD_TRIMMED = 2,PAN_MIDLINE_STANDARD_POINTED = 3,PAN_MIDLINE_STANDARD_SERIFED = 4,PAN_MIDLINE_HIGH_TRIMMED = 5,PAN_MIDLINE_HIGH_POINTED = 6,PAN_MIDLINE_HIGH_SERIFED = 7,PAN_MIDLINE_CONSTANT_TRIMMED = 8,PAN_MIDLINE_CONSTANT_POINTED = 9,PAN_MIDLINE_CONSTANT_SERIFED = 10,PAN_MIDLINE_LOW_TRIMMED = 11,PAN_MIDLINE_LOW_POINTED = 12,PAN_MIDLINE_LOW_SERIFED = 13,PAN_XHEIGHT_CONSTANT_SMALL = 2,PAN_XHEIGHT_CONSTANT_STD = 3,PAN_XHEIGHT_CONSTANT_LARGE = 4,PAN_XHEIGHT_DUCKING_SMALL = 5,PAN_XHEIGHT_DUCKING_STD = 6,PAN_XHEIGHT_DUCKING_LARGE = 7,};
enum MACRO_PANOSE {PANOSE_COUNT = 10,};
enum MACRO_PARTITION {PARTITION_ENTRY_UNUSED = 0,PARTITION_FAT_12 = 1,PARTITION_XENIX_1 = 2,PARTITION_XENIX_2 = 3,PARTITION_FAT_16 = 4,PARTITION_EXTENDED = 5,PARTITION_HUGE = 6,PARTITION_IFS = 7,PARTITION_FAT32 = 11,PARTITION_FAT32_XINT13 = 12,PARTITION_XINT13 = 14,PARTITION_XINT13_EXTENDED = 15,PARTITION_PREP = 65,PARTITION_LDM = 66,PARTITION_UNIX = 99,PARTITION_NTFT = 128,};
enum MACRO_PASSTHROUGH {PASSTHROUGH = 19,};
enum MACRO_PATCOPY {PATCOPY = 0xF00021,};
enum MACRO_PATH {BEGIN_PATH = 4096,CLIP_TO_PATH = 4097,END_PATH = 4098,};
enum MACRO_PATINVERT {PATINVERT = 0x5A0049,};
enum MACRO_PATPAINT {PATPAINT = 0xFB0A09,};
enum MACRO_PC {PC_NONE = 0,PC_POLYGON = 1,PC_POLYPOLYGON = 256,PC_PATHS = 512,PC_RECTANGLE = 2,PC_WINDPOLYGON = 4,PC_SCANLINE = 8,PC_TRAPEZOID = 4,PC_WIDE = 16,PC_STYLED = 32,PC_WIDESTYLED = 64,PC_INTERIORS = 128,};
enum MACRO_PC_EXPLICIT {PC_EXPLICIT = 2,PC_NOCOLLAPSE = 4,PC_RESERVED = 1,};
enum MACRO_PD {PD_BEGINSUBPATH = 0x1,PD_ENDSUBPATH = 0x2,PD_RESETSTYLE = 0x4,PD_CLOSEFIGURE = 0x8,PD_BEZIERS = 0x10,};
enum MACRO_PDEVICESIZE {PDEVICESIZE = 26,CLIPCAPS = 36,};
enum MACRO_PEB {PEB_KERNEL_CALLBACK_TABLE = 0x2C,};
enum MACRO_PEN {BLACK_PEN = 7,NULL_PEN = 8,WHITE_PEN = 6,};
enum MACRO_PF {PF_FLOATING_POINT_PRECISION_ERRATA = 0,PF_FLOATING_POINT_EMULATED = 1,PF_COMPARE_EXCHANGE_DOUBLE = 2,PF_MMX_INSTRUCTIONS_AVAILABLE = 3,PF_PPC_MOVEMEM_64BIT_OK = 4,PF_ALPHA_BYTE_INSTRUCTIONS = 5,PF_XMMI_INSTRUCTIONS_AVAILABLE = 6,PF_3DNOW_INSTRUCTIONS_AVAILABLE = 7,PF_RDTSC_INSTRUCTION_AVAILABLE = 8,PF_PAE_ENABLED = 9,PF_XMMI64_INSTRUCTIONS_AVAILABLE = 10,PF_SSE_DAZ_MODE_AVAILABLE = 11,PF_NX_ENABLED = 12,PF_SSE3_INSTRUCTIONS_AVAILABLE = 13,PF_COMPARE_EXCHANGE128 = 14,PF_COMPARE64_EXCHANGE128 = 15,PF_CHANNELS_ENABLED = 16,PF_XSAVE_ENABLED = 17,PF_ARM_VFP_32_REGISTERS_AVAILABLE = 18,PF_ARM_NEON_INSTRUCTIONS_AVAILABLE = 19,PF_SECOND_LEVEL_ADDRESS_TRANSLATION = 20,PF_VIRT_FIRMWARE_ENABLED = 21,PF_RDWRFSGSBASE_AVAILABLE = 22,PF_FASTFAIL_AVAILABLE = 23,PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE = 24,PF_ARM_64BIT_LOADSTORE_ATOMIC = 25,PF_ARM_EXTERNAL_CACHE_AVAILABLE = 26,PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE = 27,PF_RDRAND_INSTRUCTION_AVAILABLE = 28,PF_ARM_V8_INSTRUCTIONS_AVAILABLE = 29,PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE = 30,PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE = 31,};
enum MACRO_PFD {PFD_TYPE_RGBA = 0,PFD_TYPE_COLORINDEX = 1,PFD_MAIN_PLANE = 0,PFD_OVERLAY_PLANE = 1,PFD_UNDERLAY_PLANE = -1,PFD_DOUBLEBUFFER = 1,PFD_STEREO = 2,PFD_DRAW_TO_WINDOW = 4,PFD_DRAW_TO_BITMAP = 8,PFD_SUPPORT_GDI = 16,PFD_SUPPORT_OPENGL = 32,PFD_GENERIC_FORMAT = 64,PFD_NEED_PALETTE = 128,PFD_NEED_SYSTEM_PALETTE = 256,PFD_SWAP_EXCHANGE = 512,PFD_SWAP_COPY = 1024,PFD_SWAP_LAYER_BUFFERS = 2048,PFD_GENERIC_ACCELERATED = 4096,PFD_DEPTH_DONTCARE = 536870912,PFD_DOUBLEBUFFER_DONTCARE = 1073741824,PFD_STEREO_DONTCARE = -2147483648,};
enum MACRO_PHYSICALHEIGHT {PHYSICALHEIGHT = 111,};
enum MACRO_PHYSICALOFFSETX {PHYSICALOFFSETX = 112,};
enum MACRO_PHYSICALOFFSETY {PHYSICALOFFSETY = 113,};
enum MACRO_PHYSICALWIDTH {PHYSICALWIDTH = 110,};
enum MACRO_PITCH {DEFAULT_PITCH = 0,FIXED_PITCH = 1,VARIABLE_PITCH = 2,};
enum MACRO_PLANES {PLANES = 14,NUMBRUSHES = 16,};
enum MACRO_PNP {PNP_PROPERTY_UI_NUMBER = 0,PNP_PROPERTY_PHYSICAL_DEVICE_OBJECT_NAME = 1,PNP_PROPERTY_BUSTYPEGUID = 2,PNP_PROPERTY_LEGACYBUSTYPE = 3,PNP_PROPERTY_BUSNUMBER = 4,PNP_PROPERTY_POWER_DATA = 5,PNP_PROPERTY_REMOVAL_POLICY = 6,PNP_PROPERTY_REMOVAL_POLICY_OVERRIDE = 7,PNP_PROPERTY_ADDRESS = 8,PNP_PROPERTY_ENUMERATOR_NAME = 9,PNP_PROPERTY_REMOVAL_POLICY_HARDWARE_DEFAULT = 10,PNP_PROPERTY_INSTALL_STATE = 11,PNP_PROPERTY_LOCATION_PATHS = 12,PNP_PROPERTY_CONTAINERID = 13,PNP_GET_PARENT_DEVICE = 1,PNP_GET_CHILD_DEVICE = 2,PNP_GET_SIBLING_DEVICE = 3,PNP_GET_DEVICE_STATUS = 0,PNP_SET_DEVICE_STATUS = 1,PNP_CLEAR_DEVICE_STATUS = 2,PNP_EJECT_RELATIONS = 0,PNP_REMOVAL_RELATIONS = 1,PNP_POWER_RELATIONS = 2,PNP_BUS_RELATIONS = 3,};
enum MACRO_PO {PO_THROTTLE_NONE = 0,PO_THROTTLE_CONSTANT = 1,PO_THROTTLE_DEGRADE = 2,PO_THROTTLE_ADAPTIVE = 3,PO_THROTTLE_MAXIMUM = 4,};
enum MACRO_POLICY {POLICY_AUDIT_SUBCATEGORY_COUNT = 56,};
enum MACRO_POLYFILL {POLYFILL_LAST = 2,};
enum MACRO_POLYGONALCAPS {POLYGONALCAPS = 32,};
enum MACRO_PORT {PORT_CONNECT = 0x1,PORT_ALL_ACCESS = 0x1F0001,};
enum MACRO_PORT_MAXIMUM {PORT_MAXIMUM_MESSAGE_LENGTH = 256,};
enum MACRO_POSTSCRIPT {POSTSCRIPT_DATA = 37,POSTSCRIPT_IGNORE = 38,};
enum MACRO_POSTSCRIPT_PASSTHROUGH {POSTSCRIPT_PASSTHROUGH = 4115,};
enum MACRO_POWER {POWER_ACTION_QUERY_ALLOWED = 0x1,POWER_ACTION_UI_ALLOWED = 0x2,POWER_ACTION_OVERRIDE_APPS = 0x4,POWER_ACTION_LIGHTEST_FIRST = 0x10000000,POWER_ACTION_LOCK_CONSOLE = 0x20000000,POWER_ACTION_DISABLE_WAKES = 0x40000000,POWER_ACTION_CRITICAL = 0x80000000,POWER_LEVEL_USER_NOTIFY_TEXT = 0x1,POWER_LEVEL_USER_NOTIFY_SOUND = 0x2,POWER_LEVEL_USER_NOTIFY_EXEC = 0x4,POWER_USER_NOTIFY_BUTTON = 0x8,POWER_USER_NOTIFY_SHUTDOWN = 0x10,POWER_FORCE_TRIGGER_RESET = 0x80000000,};
enum MACRO_PO_BEZIERS {PO_BEZIERS = 0x1,PO_ELLIPSE = 0x2,PO_ALL_INTEGERS = 0x4,PO_ENUM_AS_INTEGERS = 0x8,PO_WIDENED = 0x10,};
enum MACRO_PPC {PPC_DEFAULT = 0x0,PPC_UNDEFINED = 0x1,PPC_RGB_ORDER_VERTICAL_STRIPES = 0x2,PPC_BGR_ORDER_VERTICAL_STRIPES = 0x3,PPC_RGB_ORDER_HORIZONTAL_STRIPES = 0x4,PPC_BGR_ORDER_HORIZONTAL_STRIPES = 0x5,};
enum MACRO_PPG {PPG_DEFAULT = 0,PPG_SRGB = 1,};
enum MACRO_PR {PR_JOBSTATUS = 0,};
enum MACRO_PRAGMA {PRAGMA_DEPRECATED_DDK = 0,};
enum MACRO_PRIMARY {PRIMARY_VECTOR_BASE = 0x30,};
enum MACRO_PRIMARY_ORDER {PRIMARY_ORDER_ABC = 0,PRIMARY_ORDER_ACB = 1,PRIMARY_ORDER_BAC = 2,PRIMARY_ORDER_BCA = 3,PRIMARY_ORDER_CBA = 4,PRIMARY_ORDER_CAB = 5,};
enum MACRO_PRIORITY {HIGH_PRIORITY = 31,MAXIMUM_PRIORITY = 32,};
enum MACRO_PRIVILEGE {PRIVILEGE_SET_ALL_NECESSARY = 1,};
enum MACRO_PROCESS {PROCESS_TERMINATE = 1,PROCESS_CREATE_THREAD = 2,PROCESS_SET_SESSIONID = 4,PROCESS_VM_OPERATION = 8,PROCESS_VM_READ = 16,PROCESS_VM_WRITE = 32,PROCESS_CREATE_PROCESS = 128,PROCESS_SET_QUOTA = 256,PROCESS_SET_INFORMATION = 512,PROCESS_QUERY_INFORMATION = 1024,PROCESS_SUSPEND_RESUME = 2048,PROCESS_QUERY_LIMITED_INFORMATION = 4096,PROCESS_DUP_HANDLE = 64,};
enum MACRO_PROCESSOR {PROCESSOR_INTEL_386 = 386,PROCESSOR_INTEL_486 = 486,PROCESSOR_INTEL_PENTIUM = 586,PROCESSOR_MIPS_R4000 = 4000,PROCESSOR_ALPHA_21064 = 21064,PROCESSOR_INTEL_IA64 = 2200,PROCESSOR_PPC_601 = 601,PROCESSOR_PPC_603 = 603,PROCESSOR_PPC_604 = 604,PROCESSOR_PPC_620 = 620,PROCESSOR_INTEL_860 = 860,PROCESSOR_AMD_X8664 = 8664,PROCESSOR_MIPS_R2000 = 2000,PROCESSOR_MIPS_R3000 = 3000,PROCESSOR_HITACHI_SH3 = 10003,PROCESSOR_HITACHI_SH3E = 10004,PROCESSOR_HITACHI_SH4 = 10005,PROCESSOR_MOTOROLA_821 = 821,PROCESSOR_SHx_SH3 = 103,PROCESSOR_SHx_SH4 = 104,PROCESSOR_STRONGARM = 2577,PROCESSOR_ARM720 = 1824,PROCESSOR_ARM820 = 2080,PROCESSOR_ARM920 = 2336,PROCESSOR_ARM_7TDMI = 70001,PROCESSOR_ARCHITECTURE_INTEL = 0,PROCESSOR_ARCHITECTURE_MIPS = 1,PROCESSOR_ARCHITECTURE_ALPHA = 2,PROCESSOR_ARCHITECTURE_PPC = 3,PROCESSOR_ARCHITECTURE_SHX = 4,PROCESSOR_ARCHITECTURE_ARM = 5,PROCESSOR_ARCHITECTURE_IA64 = 6,PROCESSOR_ARCHITECTURE_ALPHA64 = 7,PROCESSOR_ARCHITECTURE_MSIL = 8,PROCESSOR_ARCHITECTURE_AMD64 = 9,PROCESSOR_ARCHITECTURE_UNKNOWN = 65535,};
enum MACRO_PROCESSOR_FEATURE {PROCESSOR_FEATURE_MAX = 64,};
enum MACRO_PROCESSOR_FEATURE_FXSR {PROCESSOR_FEATURE_FXSR = 0x7FFE0278,};
enum MACRO_PROCESS_CREATE {PROCESS_CREATE_FLAGS_BREAKAWAY = 0x1,PROCESS_CREATE_FLAGS_NO_DEBUG_INHERIT = 0x2,PROCESS_CREATE_FLAGS_INHERIT_HANDLES = 0x4,PROCESS_CREATE_FLAGS_OVERRIDE_ADDRESS_SPACE = 0x8,PROCESS_CREATE_FLAGS_LARGE_PAGES = 0x10,PROCESS_CREATE_FLAGS_ALL_LARGE_PAGE_FLAGS = 0x10,PROCESS_CREATE_FLAGS_LEGAL_MASK = 0x1F,PROCESS_PRIORITY_CLASS_INVALID = 0x0,PROCESS_PRIORITY_CLASS_IDLE = 0x1,PROCESS_PRIORITY_CLASS_NORMAL = 0x2,PROCESS_PRIORITY_CLASS_HIGH = 0x3,PROCESS_PRIORITY_CLASS_REALTIME = 0x4,PROCESS_PRIORITY_CLASS_BELOW_NORMAL = 0x5,PROCESS_PRIORITY_CLASS_ABOVE_NORMAL = 0x6,PROCESS_PRIORITY_IDLE = 0x3,PROCESS_PRIORITY_NORMAL = 0x8,PROCESS_PRIORITY_NORMAL_FOREGROUND = 0x9,};
enum MACRO_PROCESS_SET {PROCESS_SET_LIMITED_INFORMATION = 0x2000,};
enum MACRO_PRODUCT {PRODUCT_UNDEFINED = 0x0,PRODUCT_ULTIMATE = 0x1,PRODUCT_HOME_BASIC = 0x2,PRODUCT_HOME_PREMIUM = 0x3,PRODUCT_ENTERPRISE = 0x4,PRODUCT_HOME_BASIC_N = 0x5,PRODUCT_BUSINESS = 0x6,PRODUCT_STANDARD_SERVER = 0x7,PRODUCT_DATACENTER_SERVER = 0x8,PRODUCT_SMALLBUSINESS_SERVER = 0x9,PRODUCT_ENTERPRISE_SERVER = 0xA,PRODUCT_STARTER = 0xB,PRODUCT_DATACENTER_SERVER_CORE = 0xC,PRODUCT_STANDARD_SERVER_CORE = 0xD,PRODUCT_ENTERPRISE_SERVER_CORE = 0xE,PRODUCT_ENTERPRISE_SERVER_IA64 = 0xF,PRODUCT_BUSINESS_N = 0x10,PRODUCT_WEB_SERVER = 0x11,PRODUCT_CLUSTER_SERVER = 0x12,PRODUCT_HOME_SERVER = 0x13,PRODUCT_STORAGE_EXPRESS_SERVER = 0x14,PRODUCT_STORAGE_STANDARD_SERVER = 0x15,PRODUCT_STORAGE_WORKGROUP_SERVER = 0x16,PRODUCT_STORAGE_ENTERPRISE_SERVER = 0x17,PRODUCT_SERVER_FOR_SMALLBUSINESS = 0x18,PRODUCT_SMALLBUSINESS_SERVER_PREMIUM = 0x19,PRODUCT_HOME_PREMIUM_N = 0x1A,PRODUCT_ENTERPRISE_N = 0x1B,PRODUCT_ULTIMATE_N = 0x1C,PRODUCT_WEB_SERVER_CORE = 0x1D,PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT = 0x1E,PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY = 0x1F,PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING = 0x20,PRODUCT_SERVER_FOUNDATION = 0x21,PRODUCT_HOME_PREMIUM_SERVER = 0x22,PRODUCT_SERVER_FOR_SMALLBUSINESS_V = 0x23,PRODUCT_STANDARD_SERVER_V = 0x24,PRODUCT_DATACENTER_SERVER_V = 0x25,PRODUCT_ENTERPRISE_SERVER_V = 0x26,PRODUCT_DATACENTER_SERVER_CORE_V = 0x27,PRODUCT_STANDARD_SERVER_CORE_V = 0x28,PRODUCT_ENTERPRISE_SERVER_CORE_V = 0x29,PRODUCT_HYPERV = 0x2A,PRODUCT_STORAGE_EXPRESS_SERVER_CORE = 0x2B,PRODUCT_STORAGE_STANDARD_SERVER_CORE = 0x2C,PRODUCT_STORAGE_WORKGROUP_SERVER_CORE = 0x2D,PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE = 0x2E,PRODUCT_STARTER_N = 0x2F,PRODUCT_PROFESSIONAL = 0x30,PRODUCT_PROFESSIONAL_N = 0x31,PRODUCT_SB_SOLUTION_SERVER = 0x32,PRODUCT_SERVER_FOR_SB_SOLUTIONS = 0x33,PRODUCT_STANDARD_SERVER_SOLUTIONS = 0x34,PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE = 0x35,PRODUCT_SB_SOLUTION_SERVER_EM = 0x36,PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM = 0x37,PRODUCT_SOLUTION_EMBEDDEDSERVER = 0x38,PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE = 0x39,PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT = 0x3B,PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL = 0x3C,PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC = 0x3D,PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC = 0x3E,PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE = 0x3F,PRODUCT_CLUSTER_SERVER_V = 0x40,PRODUCT_EMBEDDED = 0x41,PRODUCT_STARTER_E = 0x42,PRODUCT_HOME_BASIC_E = 0x43,PRODUCT_HOME_PREMIUM_E = 0x44,PRODUCT_PROFESSIONAL_E = 0x45,PRODUCT_ENTERPRISE_E = 0x46,PRODUCT_ULTIMATE_E = 0x47,PRODUCT_ENTERPRISE_EVALUATION = 0x48,PRODUCT_MULTIPOINT_STANDARD_SERVER = 0x4C,PRODUCT_MULTIPOINT_PREMIUM_SERVER = 0x4D,PRODUCT_STANDARD_EVALUATION_SERVER = 0x4F,PRODUCT_DATACENTER_EVALUATION_SERVER = 0x50,PRODUCT_ENTERPRISE_N_EVALUATION = 0x54,PRODUCT_EMBEDDED_AUTOMOTIVE = 0x55,PRODUCT_EMBEDDED_INDUSTRY_A = 0x56,PRODUCT_THINPC = 0x57,PRODUCT_EMBEDDED_A = 0x58,PRODUCT_EMBEDDED_INDUSTRY = 0x59,PRODUCT_EMBEDDED_E = 0x5A,PRODUCT_EMBEDDED_INDUSTRY_E = 0x5B,PRODUCT_EMBEDDED_INDUSTRY_A_E = 0x5C,PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER = 0x5F,PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER = 0x60,PRODUCT_CORE_ARM = 0x61,PRODUCT_CORE_N = 0x62,PRODUCT_CORE_COUNTRYSPECIFIC = 0x63,PRODUCT_CORE_SINGLELANGUAGE = 0x64,PRODUCT_CORE = 0x65,PRODUCT_PROFESSIONAL_WMC = 0x67,PRODUCT_ENTERPRISE_S_N_EVALUATION = 0x82,PRODUCT_UNLICENSED = 0xABCDABCD,};
enum MACRO_PROFILE {PROFILE_CONTROL = 0x1,PROFILE_ALL_ACCESS = 0xF0001,};
enum MACRO_PS {PS_GEOMETRIC = 65536,PS_COSMETIC = 0,PS_ALTERNATE = 8,PS_SOLID = 0,PS_DASH = 1,PS_DOT = 2,PS_DASHDOT = 3,PS_DASHDOTDOT = 4,PS_NULL = 5,PS_USERSTYLE = 7,PS_INSIDEFRAME = 6,PS_ENDCAP_ROUND = 0,PS_ENDCAP_SQUARE = 256,PS_ENDCAP_FLAT = 512,PS_JOIN_BEVEL = 4096,PS_JOIN_MITER = 8192,PS_JOIN_ROUND = 0,PS_JOIN_MASK = 61440,PS_STYLE_MASK = 15,PS_ENDCAP_MASK = 3840,PS_TYPE_MASK = 983040,};
enum MACRO_PSP {PSP_DEFAULT_QUANTUMS = 0x0,PSP_VARIABLE_QUANTUMS = 0x4,PSP_FIXED_QUANTUMS = 0x8,PSP_LONG_QUANTUMS = 0x10,PSP_SHORT_QUANTUMS = 0x20,};
enum MACRO_PT {PT_MOVETO = 6,PT_LINETO = 2,PT_BEZIERTO = 4,PT_CLOSEFIGURE = 1,};
enum MACRO_PTR {MAXUHALF_PTR = 65535,MAXHALF_PTR = 32767,MINHALF_PTR = -32768,};
enum MACRO_QAW {QAW_GETWIDTHS = 0,QAW_GETEASYWIDTHS = 1,};
enum MACRO_QC {QC_OUTLINES = 0x1,QC_1BIT = 0x2,QC_4BIT = 0x4,QC_FONTDRIVERCAPS = 0x7,};
enum MACRO_QDC {QDC_ALL_PATHS = 0x1,};
enum MACRO_QDI {QDI_SETDIBITS = 1,QDI_GETDIBITS = 2,QDI_DIBTOSCREEN = 4,QDI_STRETCHDIB = 8,};
enum MACRO_QDS {QDS_CHECKJPEGFORMAT = 0x0,QDS_CHECKPNGFORMAT = 0x1,};
enum MACRO_QFD {QFD_GLYPHANDBITMAP = 1,QFD_GLYPHANDOUTLINE = 2,QFD_MAXEXTENTS = 3,QFD_TT_GLYPHANDBITMAP = 4,QFD_TT_GRAY1_BITMAP = 5,QFD_TT_GRAY2_BITMAP = 6,QFD_TT_GRAY4_BITMAP = 8,QFD_TT_GRAY8_BITMAP = 9,QFD_TT_MONO_BITMAP = 5,};
enum MACRO_QFF {QFF_DESCRIPTION = 0x1,QFF_NUMFACES = 0x2,};
enum MACRO_QFT {QFT_UNICODE = 0,QFT_LIGATURES = 1,QFT_KERNPAIRS = 2,QFT_GLYPHSET = 3,};
enum MACRO_QSA {QSA_MMX = 0x100,QSA_SSE = 0x2000,QSA_3DNOW = 0x4000,QSA_SSE1 = 0x2000,QSA_SSE2 = 0x10000,QSA_SSE3 = 0x80000,};
enum MACRO_QUALITY {DEFAULT_QUALITY = 0,DRAFT_QUALITY = 1,PROOF_QUALITY = 2,NONANTIALIASED_QUALITY = 3,ANTIALIASED_QUALITY = 4,CLEARTYPE_QUALITY = 5,CLEARTYPE_NATURAL_QUALITY = 6,};
enum MACRO_QUANTUM_DECREMENT {WAIT_QUANTUM_DECREMENT = 1,CLOCK_QUANTUM_DECREMENT = 3,};
enum MACRO_QUERYDIBSUPPORT {QUERYDIBSUPPORT = 3073,};
enum MACRO_QUERY_STATE {EVENT_QUERY_STATE = 0x1,SEMAPHORE_QUERY_STATE = 0x1,};
enum MACRO_R2 {R2_BLACK = 1,R2_COPYPEN = 13,R2_MASKNOTPEN = 3,R2_MASKPEN = 9,R2_MASKPENNOT = 5,R2_MERGENOTPEN = 12,R2_MERGEPEN = 15,R2_MERGEPENNOT = 14,R2_NOP = 11,R2_NOT = 6,R2_NOTCOPYPEN = 4,R2_NOTMASKPEN = 8,R2_NOTMERGEPEN = 2,R2_NOTXORPEN = 10,R2_WHITE = 16,R2_XORPEN = 7,};
enum MACRO_RASTERCAPS {RASTERCAPS = 38,};
enum MACRO_RB {RB_DITHERCOLOR = 0x80000000,};
enum MACRO_RC {RC_BANDING = 2,RC_BITBLT = 1,RC_BITMAP64 = 8,RC_DI_BITMAP = 128,RC_DIBTODEV = 512,RC_FLOODFILL = 4096,RC_GDI20_OUTPUT = 16,RC_PALETTE = 256,RC_SCALING = 4,RC_STRETCHBLT = 2048,RC_STRETCHDIB = 8192,RC_DEVBITS = 32768,RC_OP_DX_OUTPUT = 16384,};
enum MACRO_RC_BIGFONT {RC_BIGFONT = 1024,RC_GDI20_STATE = 32,RC_NONE = 0,RC_SAVEBITMAP = 64,};
enum MACRO_RDH {RDH_RECTANGLES = 1,};
enum MACRO_READ {READ_CONTROL = 0x20000,};
enum MACRO_REFERENCE {REFERENCE_WHITE_MIN = 6000,REFERENCE_WHITE_MAX = 10000,REFERENCE_BLACK_MIN = 0,REFERENCE_BLACK_MAX = 4000,};
enum MACRO_REG {REG_STANDARD_FORMAT = 1,REG_LATEST_FORMAT = 2,REG_NO_COMPRESSION = 4,};
enum MACRO_REG_WHOLE {REG_WHOLE_HIVE_VOLATILE = 1,REG_REFRESH_HIVE = 2,REG_NO_LAZY_FLUSH = 4,REG_FORCE_RESTORE = 8,REG_OPTION_RESERVED = 0,REG_OPTION_NON_VOLATILE = 0,REG_OPTION_VOLATILE = 1,REG_OPTION_CREATE_LINK = 2,REG_OPTION_BACKUP_RESTORE = 4,REG_OPTION_OPEN_LINK = 8,REG_LEGAL_OPTION = 15,};
enum MACRO_RESOURCE {RESOURCE_TYPE_LEVEL = 0,RESOURCE_NAME_LEVEL = 1,RESOURCE_LANGUAGE_LEVEL = 2,RESOURCE_DATA_LEVEL = 3,};
enum MACRO_REVISION {MIN_ACL_REVISION = 2,MAX_ACL_REVISION = 4,SECURITY_DESCRIPTOR_REVISION = 1,};
enum MACRO_RGB {RGB_GAMMA_MIN = 2500,RGB_GAMMA_MAX = 65000,};
enum MACRO_RGN {RGN_AND = 1,RGN_COPY = 5,RGN_DIFF = 4,RGN_OR = 2,RGN_XOR = 3,};
enum MACRO_ROP {ROP_HAS_SOURCE = 0x1,ROP_HAS_PATTERN = 0x2,ROP_HAS_SOURCEPATTERN = 0x3,};
enum MACRO_RPC {RPC_S_INVALID_STRING_BINDING = 1700,RPC_S_WRONG_KIND_OF_BINDING = 1701,RPC_S_INVALID_BINDING = 1702,RPC_S_PROTSEQ_NOT_SUPPORTED = 1703,RPC_S_INVALID_RPC_PROTSEQ = 1704,RPC_S_INVALID_STRING_UUID = 1705,RPC_S_INVALID_ENDPOINT_FORMAT = 1706,RPC_S_INVALID_NET_ADDR = 1707,RPC_S_NO_ENDPOINT_FOUND = 1708,RPC_S_INVALID_TIMEOUT = 1709,RPC_S_OBJECT_NOT_FOUND = 1710,RPC_S_ALREADY_REGISTERED = 1711,RPC_S_TYPE_ALREADY_REGISTERED = 1712,RPC_S_ALREADY_LISTENING = 1713,RPC_S_NO_PROTSEQS_REGISTERED = 1714,RPC_S_NOT_LISTENING = 1715,RPC_S_UNKNOWN_MGR_TYPE = 1716,RPC_S_UNKNOWN_IF = 1717,RPC_S_NO_BINDINGS = 1718,RPC_S_NO_PROTSEQS = 1719,RPC_S_CANT_CREATE_ENDPOINT = 1720,RPC_S_OUT_OF_RESOURCES = 1721,RPC_S_SERVER_UNAVAILABLE = 1722,RPC_S_SERVER_TOO_BUSY = 1723,RPC_S_INVALID_NETWORK_OPTIONS = 1724,RPC_S_NO_CALL_ACTIVE = 1725,RPC_S_CALL_FAILED = 1726,RPC_S_CALL_FAILED_DNE = 1727,RPC_S_PROTOCOL_ERROR = 1728,RPC_S_UNSUPPORTED_TRANS_SYN = 1730,RPC_S_UNSUPPORTED_TYPE = 1732,RPC_S_INVALID_TAG = 1733,RPC_S_INVALID_BOUND = 1734,RPC_S_NO_ENTRY_NAME = 1735,RPC_S_INVALID_NAME_SYNTAX = 1736,RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737,RPC_S_UUID_NO_ADDRESS = 1739,RPC_S_DUPLICATE_ENDPOINT = 1740,RPC_S_UNKNOWN_AUTHN_TYPE = 1741,RPC_S_MAX_CALLS_TOO_SMALL = 1742,RPC_S_STRING_TOO_LONG = 1743,RPC_S_PROTSEQ_NOT_FOUND = 1744,RPC_S_PROCNUM_OUT_OF_RANGE = 1745,RPC_S_BINDING_HAS_NO_AUTH = 1746,RPC_S_UNKNOWN_AUTHN_SERVICE = 1747,RPC_S_UNKNOWN_AUTHN_LEVEL = 1748,RPC_S_INVALID_AUTH_IDENTITY = 1749,RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750,};
enum MACRO_RPC_S {RPC_S_NOTHING_TO_EXPORT = 1754,RPC_S_INCOMPLETE_NAME = 1755,RPC_S_INVALID_VERS_OPTION = 1756,RPC_S_NO_MORE_MEMBERS = 1757,RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758,RPC_S_INTERFACE_NOT_FOUND = 1759,RPC_S_ENTRY_ALREADY_EXISTS = 1760,RPC_S_ENTRY_NOT_FOUND = 1761,RPC_S_NAME_SERVICE_UNAVAILABLE = 1762,RPC_S_INVALID_NAF_ID = 1763,RPC_S_CANNOT_SUPPORT = 1764,RPC_S_NO_CONTEXT_AVAILABLE = 1765,RPC_S_INTERNAL_ERROR = 1766,RPC_S_ZERO_DIVIDE = 1767,RPC_S_ADDRESS_ERROR = 1768,RPC_S_FP_DIV_ZERO = 1769,RPC_S_FP_UNDERFLOW = 1770,RPC_S_FP_OVERFLOW = 1771,RPC_X_NO_MORE_ENTRIES = 1772,RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 1773,RPC_X_SS_CHAR_TRANS_SHORT_FILE = 1774,RPC_X_SS_IN_NULL_CONTEXT = 1775,RPC_X_SS_CONTEXT_DAMAGED = 1777,RPC_X_SS_HANDLES_MISMATCH = 1778,RPC_X_SS_CANNOT_GET_CALL_HANDLE = 1779,RPC_X_NULL_REF_POINTER = 1780,RPC_X_ENUM_VALUE_OUT_OF_RANGE = 1781,RPC_X_BYTE_COUNT_TOO_SMALL = 1782,RPC_X_BAD_STUB_DATA = 1783,};
enum MACRO_RPC_S_CALL {RPC_S_CALL_IN_PROGRESS = 1791,};
enum MACRO_RPC_S_ENTRY {RPC_S_ENTRY_TYPE_MISMATCH = 1922,RPC_S_NOT_ALL_OBJS_EXPORTED = 1923,RPC_S_INTERFACE_NOT_EXPORTED = 1924,RPC_S_PROFILE_NOT_ADDED = 1925,RPC_S_PRF_ELT_NOT_ADDED = 1926,RPC_S_PRF_ELT_NOT_REMOVED = 1927,RPC_S_GRP_ELT_NOT_ADDED = 1928,RPC_S_GRP_ELT_NOT_REMOVED = 1929,};
enum MACRO_RPC_S_INVALID {RPC_S_INVALID_OBJECT = 1900,};
enum MACRO_RPC_S_NO {RPC_S_NO_MORE_BINDINGS = 1806,};
enum MACRO_RPC_S_NO_INTERFACES {RPC_S_NO_INTERFACES = 1817,RPC_S_CALL_CANCELLED = 1818,RPC_S_BINDING_INCOMPLETE = 1819,RPC_S_COMM_FAILURE = 1820,RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821,RPC_S_NO_PRINC_NAME = 1822,RPC_S_NOT_RPC_ERROR = 1823,RPC_S_UUID_LOCAL_ONLY = 1824,RPC_S_SEC_PKG_ERROR = 1825,RPC_S_NOT_CANCELLED = 1826,RPC_X_INVALID_ES_ACTION = 1827,RPC_X_WRONG_ES_VERSION = 1828,RPC_X_WRONG_STUB_VERSION = 1829,RPC_X_INVALID_PIPE_OBJECT = 1830,RPC_X_WRONG_PIPE_ORDER = 1831,RPC_X_WRONG_PIPE_VERSION = 1832,RPC_S_GROUP_MEMBER_NOT_FOUND = 1898,};
enum MACRO_RPC_S_SEND {RPC_S_SEND_INCOMPLETE = 1913,RPC_S_INVALID_ASYNC_HANDLE = 1914,RPC_S_INVALID_ASYNC_CALL = 1915,RPC_X_PIPE_CLOSED = 1916,RPC_X_PIPE_DISCIPLINE_ERROR = 1917,RPC_X_PIPE_EMPTY = 1918,};
enum MACRO_RTL {RTL_CRITSECT_TYPE = 0,RTL_RESOURCE_TYPE = 1,};
enum MACRO_RTL_ACQUIRE {RTL_ACQUIRE_PRIVILEGE_IMPERSONATE = 1,RTL_ACQUIRE_PRIVILEGE_PROCESS = 2,};
enum MACRO_RTL_CRITICAL {RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO = 0x1000000,};
enum MACRO_RTL_DEBUG {RTL_DEBUG_QUERY_MODULES = 0x1,RTL_DEBUG_QUERY_BACKTRACES = 0x2,RTL_DEBUG_QUERY_HEAPS = 0x4,RTL_DEBUG_QUERY_HEAP_TAGS = 0x8,RTL_DEBUG_QUERY_HEAP_BLOCKS = 0x10,RTL_DEBUG_QUERY_LOCKS = 0x20,RTL_HANDLE_VALID = 0x1,RTL_ATOM_IS_PINNED = 0x1,};
enum MACRO_RTL_DUPLICATE {RTL_DUPLICATE_UNICODE_STRING_NULL_TERMINATE = 1,RTL_DUPLICATE_UNICODE_STRING_ALLOCATE_NULL_STRING = 2,RTL_FIND_CHAR_IN_UNICODE_STRING_START_AT_END = 1,RTL_FIND_CHAR_IN_UNICODE_STRING_COMPLEMENT_CHAR_SET = 2,RTL_FIND_CHAR_IN_UNICODE_STRING_CASE_INSENSITIVE = 4,RTL_IMAGE_NT_HEADER_EX_FLAG_NO_RANGE_CHECK = 1,RTL_DOS_APPLY_FILE_REDIRECTION_USTR_FLAG_RESPECT_DOT_LOCAL = 1,};
enum MACRO_RTL_FLS {RTL_FLS_MAXIMUM_AVAILABLE = 128,RTL_RESOURCE_FLAG_LONG_TERM = 1,};
enum MACRO_RTL_HOTPATCH : __int64 {RTL_HOTPATCH_SUPPORTED_FLAG = 0x1,RTL_HOTPATCH_SWAP_OBJECT_NAMES = 0x8000000,RTL_HOTPATCH_SYNC_RENAME_FILES = 0x10000000,RTL_HOTPATCH_PATCH_USER_MODE = 0x20000000,RTL_HOTPATCH_REMAP_SYSTEM_DLL = 0x40000000,RTL_HOTPATCH_PATCH_KERNEL_MODE = 0x80000000,};
enum MACRO_RTL_MAXIMUM {RTL_MAXIMUM_ATOM_LENGTH = 255,RTL_USER_PROCESS_PARAMETERS_NORMALIZED = 1,RTL_USER_PROCESS_PARAMETERS_PROFILE_USER = 2,RTL_USER_PROCESS_PARAMETERS_PROFILE_KERNEL = 4,RTL_USER_PROCESS_PARAMETERS_PROFILE_SERVER = 8,RTL_USER_PROCESS_PARAMETERS_UNKNOWN = 16,RTL_USER_PROCESS_PARAMETERS_RESERVE_1MB = 32,RTL_USER_PROCESS_PARAMETERS_RESERVE_16MB = 64,RTL_USER_PROCESS_PARAMETERS_CASE_SENSITIVE = 128,RTL_USER_PROCESS_PARAMETERS_DISABLE_HEAP_CHECKS = 256,RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_1 = 512,RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_2 = 1024,RTL_USER_PROCESS_PARAMETERS_PRIVATE_DLL_PATH = 4096,RTL_USER_PROCESS_PARAMETERS_LOCAL_DLL_PATH = 8192,RTL_USER_PROCESS_PARAMETERS_IMAGE_KEY_MISSING = 16384,RTL_USER_PROCESS_PARAMETERS_NX = 131072,RTL_MAX_DRIVE_LETTERS = 32,RTL_DRIVE_LETTER_VALID = 1,};
enum MACRO_RTL_REGISTRY {RTL_REGISTRY_ABSOLUTE = 0,RTL_REGISTRY_SERVICES = 1,RTL_REGISTRY_CONTROL = 2,RTL_REGISTRY_WINDOWS_NT = 3,RTL_REGISTRY_DEVICEMAP = 4,RTL_REGISTRY_USER = 5,RTL_REGISTRY_MAXIMUM = 6,RTL_REGISTRY_HANDLE = 1073741824,RTL_REGISTRY_OPTIONAL = -2147483648,RTL_QUERY_REGISTRY_SUBKEY = 1,RTL_QUERY_REGISTRY_TOPKEY = 2,RTL_QUERY_REGISTRY_REQUIRED = 4,RTL_QUERY_REGISTRY_NOVALUE = 8,RTL_QUERY_REGISTRY_NOEXPAND = 16,RTL_QUERY_REGISTRY_DIRECT = 32,RTL_QUERY_REGISTRY_DELETE = 64,};
enum MACRO_RTL_RUN {RTL_RUN_ONCE_CHECK_ONLY = 0x1,RTL_RUN_ONCE_ASYNC = 0x2,RTL_RUN_ONCE_INIT_FAILED = 0x4,RTL_CONDITION_VARIABLE_LOCKMODE_SHARED = 0x1,};
enum MACRO_RTL_SEM {RTL_SEM_FAILCRITICALERRORS = 16,RTL_SEM_NOGPFAULTERRORBOX = 32,RTL_SEM_NOALIGNMENTFAULTEXCEPT = 64,RTL_RANGE_LIST_ADD_IF_CONFLICT = 1,RTL_RANGE_LIST_ADD_SHARED = 2,RTL_RANGE_SHARED = 1,RTL_RANGE_CONFLICT = 2,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_RELEASE_ON_DEACTIVATION = 1,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_NO_DEACTIVATE = 2,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_ON_FREE_LIST = 4,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_HEAP_ALLOCATED = 8,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_NOT_REALLY_ACTIVATED = 16,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_ACTIVATED = 32,RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_DEACTIVATED = 64,RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_FORMAT_WHISTLER = 1,RTL_ACTIVATE_ACTIVATION_CONTEXT_EX_FLAG_RELEASE_ON_STACK_DEALLOCATION = 1,RTL_DEACTIVATE_ACTIVATION_CONTEXT_FLAG_FORCE_EARLY_DEACTIVATION = 1,RTL_QUERY_ACTIVATION_CONTEXT_FLAG_USE_ACTIVE_ACTIVATION_CONTEXT = 1,RTL_QUERY_ACTIVATION_CONTEXT_FLAG_IS_HMODULE = 2,RTL_QUERY_ACTIVATION_CONTEXT_FLAG_IS_ADDRESS = 4,RTL_QUERY_ACTIVATION_CONTEXT_FLAG_NO_ADDREF = -2147483648,};
enum MACRO_RTL_STACK {RTL_STACK_WALKING_MODE_FRAMES_TO_SKIP_SHIFT = 8,RTL_SKIP_BUFFER_COPY = 1,RTL_UNCHANGED_UNK_PATH = 1,RTL_CONVERTED_UNC_PATH = 2,RTL_CONVERTED_NT_PATH = 3,RTL_UNCHANGED_DOS_PATH = 4,};
enum MACRO_ResourceHasDisabledPriorityBoost {ResourceHasDisabledPriorityBoost = 0x8,};
enum MACRO_SB {SB_NONE = 0x0,SB_CONST_ALPHA = 0x1,SB_PIXEL_ALPHA = 0x2,SB_PREMULT_ALPHA = 0x4,SB_GRAD_RECT = 0x10,SB_GRAD_TRI = 0x20,};
enum MACRO_SCALINGFACTORX {SCALINGFACTORX = 114,};
enum MACRO_SCALINGFACTORY {SCALINGFACTORY = 115,};
enum MACRO_SCARD {SCARD_S_SUCCESS = 0,};
enum MACRO_SCHED {SCHED_E_SERVICE_NOT_LOCALSYSTEM = 6200,};
enum MACRO_SE {SE_GROUP_MANDATORY = 0x1,SE_GROUP_ENABLED_BY_DEFAULT = 0x2,SE_GROUP_ENABLED = 0x4,SE_GROUP_OWNER = 0x8,SE_GROUP_USE_FOR_DENY_ONLY = 0x10,SE_GROUP_INTEGRITY = 0x20,SE_GROUP_INTEGRITY_ENABLED = 0x40,SE_GROUP_LOGON_ID = 0xC0000000,SE_GROUP_RESOURCE = 0x20000000,SE_GROUP_VALID_ATTRIBUTES = 0xE000007F,};
enum MACRO_SEC {SEC_NO_CHANGE = 0x400000,SEC_FILE = 0x800000,SEC_IMAGE = 0x1000000,SEC_VLM = 0x2000000,SEC_RESERVE = 0x4000000,SEC_COMMIT = 0x8000000,SEC_NOCACHE = 0x10000000,SEC_WRITECOMBINE = 0x40000000,SEC_LARGE_PAGES = 0x80000000,SEC_IMAGE_NO_EXECUTE = 0x11000000,};
enum MACRO_SECTION {SECTION_MAP_EXECUTE_EXPLICIT = 0x20,SECTION_EXTEND_SIZE = 0x10,SECTION_MAP_READ = 0x4,SECTION_MAP_WRITE = 0x2,SECTION_QUERY = 0x1,SECTION_MAP_EXECUTE = 0x8,SECTION_ALL_ACCESS = 0xF001F,};
enum MACRO_SECURITY {SECURITY_DESCRIPTOR_REVISION1 = 1,};
enum MACRO_SECURITY_DYNAMIC {SECURITY_DYNAMIC_TRACKING = 1,SECURITY_STATIC_TRACKING = 0,};
enum MACRO_SECURITY_INFORMATION {OWNER_SECURITY_INFORMATION = 0x1,GROUP_SECURITY_INFORMATION = 0x2,DACL_SECURITY_INFORMATION = 0x4,SACL_SECURITY_INFORMATION = 0x8,LABEL_SECURITY_INFORMATION = 0x10,PROTECTED_DACL_SECURITY_INFORMATION = 0x80000000,PROTECTED_SACL_SECURITY_INFORMATION = 0x40000000,UNPROTECTED_DACL_SECURITY_INFORMATION = 0x20000000,UNPROTECTED_SACL_SECURITY_INFORMATION = 0x10000000,};
enum MACRO_SECURITY_MANDATORY {SECURITY_MANDATORY_UNTRUSTED_RID = 0x0,SECURITY_MANDATORY_LOW_RID = 0x1000,SECURITY_MANDATORY_MEDIUM_RID = 0x2000,SECURITY_MANDATORY_HIGH_RID = 0x3000,SECURITY_MANDATORY_SYSTEM_RID = 0x4000,SECURITY_MANDATORY_PROTECTED_PROCESS_RID = 0x5000,SECURITY_MANDATORY_MAXIMUM_USER_RID = 0x4000,};
enum MACRO_SECURITY_NULL {SECURITY_NULL_RID = 0x0,SECURITY_WORLD_RID = 0x0,SECURITY_LOCAL_RID = 0x0,SECURITY_LOCAL_LOGON_RID = 0x1,SECURITY_CREATOR_OWNER_RID = 0x0,SECURITY_CREATOR_GROUP_RID = 0x1,SECURITY_CREATOR_OWNER_SERVER_RID = 0x2,SECURITY_CREATOR_GROUP_SERVER_RID = 0x3,SECURITY_CREATOR_OWNER_RIGHTS_RID = 0x4,SECURITY_DIALUP_RID = 0x1,SECURITY_NETWORK_RID = 0x2,SECURITY_BATCH_RID = 0x3,SECURITY_INTERACTIVE_RID = 0x4,SECURITY_LOGON_IDS_RID = 0x5,SECURITY_LOGON_IDS_RID_COUNT = 0x3,SECURITY_SERVICE_RID = 0x6,SECURITY_ANONYMOUS_LOGON_RID = 0x7,SECURITY_PROXY_RID = 0x8,SECURITY_ENTERPRISE_CONTROLLERS_RID = 0x9,SECURITY_SERVER_LOGON_RID = 0x9,SECURITY_PRINCIPAL_SELF_RID = 0xA,SECURITY_AUTHENTICATED_USER_RID = 0xB,SECURITY_RESTRICTED_CODE_RID = 0xC,SECURITY_TERMINAL_SERVER_RID = 0xD,SECURITY_REMOTE_LOGON_RID = 0xE,SECURITY_THIS_ORGANIZATION_RID = 0xF,SECURITY_IUSER_RID = 0x11,SECURITY_LOCAL_SYSTEM_RID = 0x12,SECURITY_LOCAL_SERVICE_RID = 0x13,SECURITY_NETWORK_SERVICE_RID = 0x14,SECURITY_NT_NON_UNIQUE = 0x15,SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = 0x3,SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = 0x16,SECURITY_BUILTIN_DOMAIN_RID = 0x20,SECURITY_WRITE_RESTRICTED_CODE_RID = 0x21,SECURITY_PACKAGE_BASE_RID = 0x40,SECURITY_PACKAGE_RID_COUNT = 0x2,SECURITY_PACKAGE_NTLM_RID = 0xA,SECURITY_PACKAGE_SCHANNEL_RID = 0xE,SECURITY_PACKAGE_DIGEST_RID = 0x15,SECURITY_CRED_TYPE_BASE_RID = 0x41,SECURITY_CRED_TYPE_RID_COUNT = 0x2,SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = 0x1,SECURITY_MIN_BASE_RID = 0x50,SECURITY_SERVICE_ID_BASE_RID = 0x50,SECURITY_SERVICE_ID_RID_COUNT = 0x6,SECURITY_RESERVED_ID_BASE_RID = 0x51,SECURITY_APPPOOL_ID_BASE_RID = 0x52,SECURITY_APPPOOL_ID_RID_COUNT = 0x6,SECURITY_VIRTUALSERVER_ID_BASE_RID = 0x53,SECURITY_VIRTUALSERVER_ID_RID_COUNT = 0x6,SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = 0x54,SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = 0x6,SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = 0x55,SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = 0x6,SECURITY_WMIHOST_ID_BASE_RID = 0x56,SECURITY_WMIHOST_ID_RID_COUNT = 0x6,SECURITY_TASK_ID_BASE_RID = 0x57,SECURITY_NFS_ID_BASE_RID = 0x58,SECURITY_COM_ID_BASE_RID = 0x59,SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = 0x6,SECURITY_MAX_BASE_RID = 0x6F,SECURITY_MAX_ALWAYS_FILTERED = 0x3E7,SECURITY_MIN_NEVER_FILTERED = 0x3E8,SECURITY_OTHER_ORGANIZATION_RID = 0x3E8,SECURITY_WINDOWSMOBILE_ID_BASE_RID = 0x70,};
enum MACRO_SEC_BASED {SEC_BASED = 0x200000,};
enum MACRO_SEEK {SEEK_CUR = 1,SEEK_END = 2,SEEK_SET = 0,};
enum MACRO_SELECTPAPERSOURCE {SELECTPAPERSOURCE = 18,};
enum MACRO_SEM {SEM_FAILCRITICALERRORS = 0x1,SEM_NOGPFAULTERRORBOX = 0x2,SEM_NOALIGNMENTFAULTEXCEPT = 0x4,SEM_NOOPENFILEERRORBOX = 0x8000,};
enum MACRO_SERIAL {SERIAL_LSRMST_ESCAPE = 0,SERIAL_LSRMST_LSR_DATA = 1,SERIAL_LSRMST_LSR_NODATA = 2,SERIAL_LSRMST_MST = 3,};
enum MACRO_SERVICE {SERVICE_KERNEL_DRIVER = 1,SERVICE_FILE_SYSTEM_DRIVER = 2,SERVICE_ADAPTER = 4,SERVICE_RECOGNIZER_DRIVER = 8,SERVICE_DRIVER = 11,SERVICE_WIN32_OWN_PROCESS = 16,SERVICE_WIN32_SHARE_PROCESS = 32,SERVICE_WIN32 = 48,SERVICE_INTERACTIVE_PROCESS = 256,SERVICE_TYPE_ALL = 319,SERVICE_BOOT_START = 0,SERVICE_SYSTEM_START = 1,SERVICE_AUTO_START = 2,SERVICE_DEMAND_START = 3,SERVICE_DISABLED = 4,SERVICE_ERROR_IGNORE = 0,SERVICE_ERROR_NORMAL = 1,SERVICE_ERROR_SEVERE = 2,SERVICE_ERROR_CRITICAL = 3,};
enum MACRO_SERVICE_DESCRIPTOR {SERVICE_DESCRIPTOR_BASE = 0x0,SERVICE_DESCRIPTOR_COUNT = 0x4,SERVICE_DESCRIPTOR_LIMIT = 0x8,SERVICE_DESCRIPTOR_NUMBER = 0xC,SERVICE_DESCRIPTOR_LENGTH = 0x10,};
enum MACRO_SERVICE_INDEX {NTOS_SERVICE_INDEX = 0,WIN32K_SERVICE_INDEX = 1,};
enum MACRO_SERVICE_TABLE {SERVICE_TABLE_SHIFT = 8,SERVICE_TABLE_MASK = 16,SERVICE_NUMBER_MASK = 4095,SERVICE_TABLE_TEST = 16,};
enum MACRO_SET {SET_ARC_DIRECTION = 4102,SET_BACKGROUND_COLOR = 4103,SET_POLY_MODE = 4104,SET_SCREEN_ANGLE = 4105,SET_SPREAD = 4106,};
enum MACRO_SETABORTPROC {SETABORTPROC = 9,};
enum MACRO_SETALLJUSTVALUES {SETALLJUSTVALUES = 771,};
enum MACRO_SETCHARSET {SETCHARSET = 772,STRETCHBLT = 2048,};
enum MACRO_SETCOPYCOUNT {SETCOPYCOUNT = 17,};
enum MACRO_SETKERNTRACK {SETKERNTRACK = 770,};
enum MACRO_SETLINECAP {SETLINECAP = 21,};
enum MACRO_SETLINEJOIN {SETLINEJOIN = 22,};
enum MACRO_SETMITERLIMIT {SETMITERLIMIT = 23,};
enum MACRO_SET_CLIP {SET_CLIP_BOX = 4108,SET_BOUNDS = 4109,SET_MIRROR_MODE = 4110,};
enum MACRO_SEVERITY {SEVERITY_SUCCESS = 0,SEVERITY_ERROR = 1,};
enum MACRO_SE_MIN {SE_MIN_WELL_KNOWN_PRIVILEGE = 2,SE_CREATE_TOKEN_PRIVILEGE = 2,SE_ASSIGNPRIMARYTOKEN_PRIVILEGE = 3,SE_LOCK_MEMORY_PRIVILEGE = 4,SE_INCREASE_QUOTA_PRIVILEGE = 5,SE_UNSOLICITED_INPUT_PRIVILEGE = 6,SE_MACHINE_ACCOUNT_PRIVILEGE = 6,SE_TCB_PRIVILEGE = 7,SE_SECURITY_PRIVILEGE = 8,SE_TAKE_OWNERSHIP_PRIVILEGE = 9,SE_LOAD_DRIVER_PRIVILEGE = 10,SE_SYSTEM_PROFILE_PRIVILEGE = 11,SE_SYSTEMTIME_PRIVILEGE = 12,SE_PROF_SINGLE_PROCESS_PRIVILEGE = 13,SE_INC_BASE_PRIORITY_PRIVILEGE = 14,SE_CREATE_PAGEFILE_PRIVILEGE = 15,SE_CREATE_PERMANENT_PRIVILEGE = 16,SE_BACKUP_PRIVILEGE = 17,SE_RESTORE_PRIVILEGE = 18,SE_SHUTDOWN_PRIVILEGE = 19,SE_DEBUG_PRIVILEGE = 20,SE_AUDIT_PRIVILEGE = 21,SE_SYSTEM_ENVIRONMENT_PRIVILEGE = 22,SE_CHANGE_NOTIFY_PRIVILEGE = 23,SE_REMOTE_SHUTDOWN_PRIVILEGE = 24,SE_UNDOCK_PRIVILEGE = 25,SE_SYNC_AGENT_PRIVILEGE = 26,SE_ENABLE_DELEGATION_PRIVILEGE = 27,SE_MANAGE_VOLUME_PRIVILEGE = 28,SE_IMPERSONATE_PRIVILEGE = 29,SE_CREATE_GLOBAL_PRIVILEGE = 30,SE_MAX_WELL_KNOWN_PRIVILEGE = 30,};
enum MACRO_SE_OWNER {SE_OWNER_DEFAULTED = 0x1,SE_GROUP_DEFAULTED = 0x2,SE_DACL_PRESENT = 0x4,SE_DACL_DEFAULTED = 0x8,SE_SACL_PRESENT = 0x10,SE_SACL_DEFAULTED = 0x20,SE_DACL_UNTRUSTED = 0x40,SE_SERVER_SECURITY = 0x80,SE_DACL_AUTO_INHERIT_REQ = 0x100,SE_SACL_AUTO_INHERIT_REQ = 0x200,SE_DACL_AUTO_INHERITED = 0x400,SE_SACL_AUTO_INHERITED = 0x800,SE_DACL_PROTECTED = 0x1000,SE_SACL_PROTECTED = 0x2000,SE_RM_CONTROL_VALID = 0x4000,SE_SELF_RELATIVE = 0x8000,};
enum MACRO_SE_PRIVILEGE {SE_PRIVILEGE_ENABLED_BY_DEFAULT = 0x1,SE_PRIVILEGE_ENABLED = 0x2,SE_PRIVILEGE_REMOVED = 0x4,SE_PRIVILEGE_USED_FOR_ACCESS = 0x80000000,SE_PRIVILEGE_VALID_ATTRIBUTES = 0x80000007,};
enum MACRO_SE_SECURITY {SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE = 0x1,SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE = 0x2,SE_SECURITY_DESCRIPTOR_VALID_FLAGS = 0x3,};
enum MACRO_SGI {SGI_EXTRASPACE = 0,};
enum MACRO_SHADEBLENDCAPS {SHADEBLENDCAPS = 120,};
enum MACRO_SID {SID_REVISION = 1,SID_MAX_SUB_AUTHORITIES = 15,SID_RECOMMENDED_SUB_AUTHORITIES = 1,SID_HASH_SIZE = 32,};
enum MACRO_SIGNATURE {ENHMETA_SIGNATURE = 1179469088,EPS_SIGNATURE = 1179865157,};
enum MACRO_SIZE {SIZE_OF_80387_REGISTERS = 80,};
enum MACRO_SIZEOF {SIZEOF_RFPO_DATA = 16,};
enum MACRO_SIZEOF_EXCEPTION {SIZEOF_EXCEPTION_RECORD = 0x14,};
enum MACRO_SIZEOF_FX {SIZEOF_FX_SAVE_AREA = 528,};
enum MACRO_SIZEPALETTE {SIZEPALETTE = 104,};
enum MACRO_SO {SO_FLAG_DEFAULT_PLACEMENT = 0x1,SO_HORIZONTAL = 0x2,SO_VERTICAL = 0x4,SO_REVERSED = 0x8,SO_ZERO_BEARINGS = 0x10,SO_CHAR_INC_EQUAL_BM_BASE = 0x20,SO_MAXEXT_EQUAL_BM_SIDE = 0x40,SO_DO_NOT_SUBSTITUTE_DEVICE_FONT = 0x80,SO_GLYPHINDEX_TEXTOUT = 0x100,SO_ESC_NOT_ORIENT = 0x200,SO_DXDY = 0x400,SO_CHARACTER_EXTRA = 0x800,SO_BREAK_EXTRA = 0x1000,};
enum MACRO_SORT {SORT_DEFAULT = 0x0,SORT_INVARIANT_MATH = 0x1,SORT_JAPANESE_XJIS = 0x0,SORT_JAPANESE_UNICODE = 0x1,SORT_JAPANESE_RADICALSTROKE = 0x4,SORT_CHINESE_BIG5 = 0x0,SORT_CHINESE_PRCP = 0x0,SORT_CHINESE_UNICODE = 0x1,SORT_CHINESE_PRC = 0x2,SORT_CHINESE_BOPOMOFO = 0x3,SORT_CHINESE_RADICALSTROKE = 0x4,SORT_KOREAN_KSC = 0x0,SORT_KOREAN_UNICODE = 0x1,SORT_GERMAN_PHONE_BOOK = 0x1,SORT_HUNGARIAN_DEFAULT = 0x0,SORT_HUNGARIAN_TECHNICAL = 0x1,SORT_GEORGIAN_TRADITIONAL = 0x0,SORT_GEORGIAN_MODERN = 0x1,};
enum MACRO_SP {SP_ERROR = -1,SP_OUTOFDISK = -4,SP_OUTOFMEMORY = -5,SP_USERABORT = -3,SP_APPABORT = -2,};
enum MACRO_SPECIFIC {SPECIFIC_RIGHTS_ALL = 0xFFFF,};
enum MACRO_SPS {SPS_ERROR = 0x0,SPS_DECLINE = 0x1,SPS_ACCEPT_NOEXCLUDE = 0x2,SPS_ACCEPT_EXCLUDE = 0x3,SPS_ACCEPT_SYNCHRONOUS = 0x4,SPS_CHANGE = 0x1,SPS_ASYNCCHANGE = 0x2,SPS_ANIMATESTART = 0x4,SPS_ANIMATEUPDATE = 0x8,SPS_ALPHA = 0x10,SPS_RESERVED = 0x20,SPS_RESERVED1 = 0x40,SPS_FLAGSMASK = 0xFF,SPS_LENGTHMASK = 0xF00,SPS_FREQMASK = 0xFF000,};
enum MACRO_SP_NOTREPORTED {SP_NOTREPORTED = 0x4000,};
enum MACRO_SRCAND {SRCAND = 0x8800C6,};
enum MACRO_SRCCOPY {SRCCOPY = 0xCC0020,};
enum MACRO_SRCERASE {SRCERASE = 0x440328,};
enum MACRO_SRCINVERT {SRCINVERT = 0x660046,};
enum MACRO_SRCPAINT {SRCPAINT = 0xEE0086,};
enum MACRO_SS {SS_SAVE = 0x0,SS_RESTORE = 0x1,SS_FREE = 0x2,};
enum MACRO_SSDT {SSDT_MAX_ENTRIES = 2,};
enum MACRO_STAMP {STAMP_DESIGNVECTOR = 0x8007664,STAMP_AXESLIST = 0x8006C61,};
enum MACRO_STANDARD {STANDARD_RIGHTS_REQUIRED = 0xF0000,STANDARD_RIGHTS_READ = 0x20000,STANDARD_RIGHTS_WRITE = 0x20000,STANDARD_RIGHTS_EXECUTE = 0x20000,STANDARD_RIGHTS_ALL = 0x1F0000,};
enum MACRO_STARTDOC {STARTDOC = 10,};
enum MACRO_STATE {MUTANT_QUERY_STATE = 0x1,TIMER_QUERY_STATE = 0x1,TIMER_MODIFY_STATE = 0x2,};
enum MACRO_STATUS {STATUS_SEVERITY_SUCCESS = 0x0,STATUS_SEVERITY_INFORMATIONAL = 0x1,STATUS_SEVERITY_WARNING = 0x2,STATUS_SEVERITY_ERROR = 0x3,};
enum MACRO_STOCK {STOCK_LAST = 19,};
enum MACRO_STRETCH {STRETCH_ANDSCANS = 1,STRETCH_DELETESCANS = 3,STRETCH_HALFTONE = 4,STRETCH_ORSCANS = 2,};
enum MACRO_STRICT {STRICT = 1,WINVER = 1282,};
enum MACRO_STYPE {STYPE_BITMAP = 0,STYPE_DEVICE = 1,STYPE_DEVBITMAP = 3,};
enum MACRO_SUBLANG {SUBLANG_NEUTRAL = 0x0,SUBLANG_DEFAULT = 0x1,SUBLANG_SYS_DEFAULT = 0x2,SUBLANG_CUSTOM_DEFAULT = 0x3,SUBLANG_CUSTOM_UNSPECIFIED = 0x4,SUBLANG_UI_CUSTOM_DEFAULT = 0x5,SUBLANG_AFRIKAANS_SOUTH_AFRICA = 0x1,SUBLANG_ALBANIAN_ALBANIA = 0x1,SUBLANG_ALSATIAN_FRANCE = 0x1,SUBLANG_AMHARIC_ETHIOPIA = 0x1,SUBLANG_ARABIC_SAUDI_ARABIA = 0x1,SUBLANG_ARABIC_IRAQ = 0x2,SUBLANG_ARABIC_EGYPT = 0x3,SUBLANG_ARABIC_LIBYA = 0x4,SUBLANG_ARABIC_ALGERIA = 0x5,SUBLANG_ARABIC_MOROCCO = 0x6,SUBLANG_ARABIC_TUNISIA = 0x7,SUBLANG_ARABIC_OMAN = 0x8,SUBLANG_ARABIC_YEMEN = 0x9,SUBLANG_ARABIC_SYRIA = 0xA,SUBLANG_ARABIC_JORDAN = 0xB,SUBLANG_ARABIC_LEBANON = 0xC,SUBLANG_ARABIC_KUWAIT = 0xD,SUBLANG_ARABIC_UAE = 0xE,SUBLANG_ARABIC_BAHRAIN = 0xF,SUBLANG_ARABIC_QATAR = 0x10,SUBLANG_ARMENIAN_ARMENIA = 0x1,SUBLANG_ASSAMESE_INDIA = 0x1,SUBLANG_AZERI_LATIN = 0x1,SUBLANG_AZERI_CYRILLIC = 0x2,SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN = 0x1,SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC = 0x2,SUBLANG_BANGLA_INDIA = 0x1,SUBLANG_BANGLA_BANGLADESH = 0x2,SUBLANG_BASHKIR_RUSSIA = 0x1,SUBLANG_BASQUE_BASQUE = 0x1,SUBLANG_BELARUSIAN_BELARUS = 0x1,SUBLANG_BENGALI_INDIA = 0x1,SUBLANG_BENGALI_BANGLADESH = 0x2,SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN = 0x5,SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x8,SUBLANG_BRETON_FRANCE = 0x1,SUBLANG_BULGARIAN_BULGARIA = 0x1,SUBLANG_CATALAN_CATALAN = 0x1,SUBLANG_CENTRAL_KURDISH_IRAQ = 0x1,SUBLANG_CHEROKEE_CHEROKEE = 0x1,SUBLANG_CHINESE_TRADITIONAL = 0x1,SUBLANG_CHINESE_SIMPLIFIED = 0x2,SUBLANG_CHINESE_HONGKONG = 0x3,SUBLANG_CHINESE_SINGAPORE = 0x4,SUBLANG_CHINESE_MACAU = 0x5,SUBLANG_CORSICAN_FRANCE = 0x1,SUBLANG_CZECH_CZECH_REPUBLIC = 0x1,SUBLANG_CROATIAN_CROATIA = 0x1,SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN = 0x4,SUBLANG_DANISH_DENMARK = 0x1,SUBLANG_DARI_AFGHANISTAN = 0x1,SUBLANG_DIVEHI_MALDIVES = 0x1,SUBLANG_DUTCH = 0x1,SUBLANG_DUTCH_BELGIAN = 0x2,SUBLANG_ENGLISH_US = 0x1,SUBLANG_ENGLISH_UK = 0x2,SUBLANG_ENGLISH_AUS = 0x3,SUBLANG_ENGLISH_CAN = 0x4,SUBLANG_ENGLISH_NZ = 0x5,SUBLANG_ENGLISH_EIRE = 0x6,SUBLANG_ENGLISH_SOUTH_AFRICA = 0x7,SUBLANG_ENGLISH_JAMAICA = 0x8,SUBLANG_ENGLISH_CARIBBEAN = 0x9,SUBLANG_ENGLISH_BELIZE = 0xA,SUBLANG_ENGLISH_TRINIDAD = 0xB,SUBLANG_ENGLISH_ZIMBABWE = 0xC,SUBLANG_ENGLISH_PHILIPPINES = 0xD,SUBLANG_ENGLISH_INDIA = 0x10,SUBLANG_ENGLISH_MALAYSIA = 0x11,SUBLANG_ENGLISH_SINGAPORE = 0x12,SUBLANG_ESTONIAN_ESTONIA = 0x1,SUBLANG_FAEROESE_FAROE_ISLANDS = 0x1,SUBLANG_FILIPINO_PHILIPPINES = 0x1,SUBLANG_FINNISH_FINLAND = 0x1,SUBLANG_FRENCH = 0x1,SUBLANG_FRENCH_BELGIAN = 0x2,SUBLANG_FRENCH_CANADIAN = 0x3,SUBLANG_FRENCH_SWISS = 0x4,SUBLANG_FRENCH_LUXEMBOURG = 0x5,SUBLANG_FRENCH_MONACO = 0x6,SUBLANG_FRISIAN_NETHERLANDS = 0x1,SUBLANG_FULAH_SENEGAL = 0x2,SUBLANG_GALICIAN_GALICIAN = 0x1,SUBLANG_GEORGIAN_GEORGIA = 0x1,SUBLANG_GERMAN = 0x1,SUBLANG_GERMAN_SWISS = 0x2,SUBLANG_GERMAN_AUSTRIAN = 0x3,SUBLANG_GERMAN_LUXEMBOURG = 0x4,SUBLANG_GERMAN_LIECHTENSTEIN = 0x5,SUBLANG_GREEK_GREECE = 0x1,SUBLANG_GREENLANDIC_GREENLAND = 0x1,SUBLANG_GUJARATI_INDIA = 0x1,SUBLANG_HAUSA_NIGERIA_LATIN = 0x1,SUBLANG_HAWAIIAN_US = 0x1,SUBLANG_HEBREW_ISRAEL = 0x1,SUBLANG_HINDI_INDIA = 0x1,SUBLANG_HUNGARIAN_HUNGARY = 0x1,SUBLANG_ICELANDIC_ICELAND = 0x1,SUBLANG_IGBO_NIGERIA = 0x1,SUBLANG_INDONESIAN_INDONESIA = 0x1,SUBLANG_INUKTITUT_CANADA = 0x1,SUBLANG_INUKTITUT_CANADA_LATIN = 0x2,SUBLANG_IRISH_IRELAND = 0x2,SUBLANG_ITALIAN = 0x1,SUBLANG_ITALIAN_SWISS = 0x2,SUBLANG_JAPANESE_JAPAN = 0x1,SUBLANG_KANNADA_INDIA = 0x1,SUBLANG_KASHMIRI_SASIA = 0x2,SUBLANG_KASHMIRI_INDIA = 0x2,SUBLANG_KAZAK_KAZAKHSTAN = 0x1,SUBLANG_KHMER_CAMBODIA = 0x1,SUBLANG_KICHE_GUATEMALA = 0x1,SUBLANG_KINYARWANDA_RWANDA = 0x1,SUBLANG_KONKANI_INDIA = 0x1,SUBLANG_KOREAN = 0x1,SUBLANG_KYRGYZ_KYRGYZSTAN = 0x1,SUBLANG_LAO_LAO = 0x1,SUBLANG_LATVIAN_LATVIA = 0x1,SUBLANG_LITHUANIAN = 0x1,SUBLANG_LOWER_SORBIAN_GERMANY = 0x2,SUBLANG_LUXEMBOURGISH_LUXEMBOURG = 0x1,SUBLANG_MACEDONIAN_MACEDONIA = 0x1,SUBLANG_MALAY_MALAYSIA = 0x1,SUBLANG_MALAY_BRUNEI_DARUSSALAM = 0x2,SUBLANG_MALAYALAM_INDIA = 0x1,SUBLANG_MALTESE_MALTA = 0x1,SUBLANG_MAORI_NEW_ZEALAND = 0x1,SUBLANG_MAPUDUNGUN_CHILE = 0x1,SUBLANG_MARATHI_INDIA = 0x1,SUBLANG_MOHAWK_MOHAWK = 0x1,SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA = 0x1,SUBLANG_MONGOLIAN_PRC = 0x2,SUBLANG_NEPALI_INDIA = 0x2,SUBLANG_NEPALI_NEPAL = 0x1,SUBLANG_NORWEGIAN_BOKMAL = 0x1,SUBLANG_NORWEGIAN_NYNORSK = 0x2,SUBLANG_OCCITAN_FRANCE = 0x1,SUBLANG_ODIA_INDIA = 0x1,SUBLANG_ORIYA_INDIA = 0x1,SUBLANG_PASHTO_AFGHANISTAN = 0x1,SUBLANG_PERSIAN_IRAN = 0x1,SUBLANG_POLISH_POLAND = 0x1,SUBLANG_PORTUGUESE = 0x2,SUBLANG_PORTUGUESE_BRAZILIAN = 0x1,SUBLANG_PULAR_SENEGAL = 0x2,SUBLANG_PUNJABI_INDIA = 0x1,SUBLANG_PUNJABI_PAKISTAN = 0x2,SUBLANG_QUECHUA_BOLIVIA = 0x1,SUBLANG_QUECHUA_ECUADOR = 0x2,SUBLANG_QUECHUA_PERU = 0x3,SUBLANG_ROMANIAN_ROMANIA = 0x1,SUBLANG_ROMANSH_SWITZERLAND = 0x1,SUBLANG_RUSSIAN_RUSSIA = 0x1,SUBLANG_SAKHA_RUSSIA = 0x1,SUBLANG_SAMI_NORTHERN_NORWAY = 0x1,SUBLANG_SAMI_NORTHERN_SWEDEN = 0x2,SUBLANG_SAMI_NORTHERN_FINLAND = 0x3,SUBLANG_SAMI_LULE_NORWAY = 0x4,SUBLANG_SAMI_LULE_SWEDEN = 0x5,SUBLANG_SAMI_SOUTHERN_NORWAY = 0x6,SUBLANG_SAMI_SOUTHERN_SWEDEN = 0x7,SUBLANG_SAMI_SKOLT_FINLAND = 0x8,SUBLANG_SAMI_INARI_FINLAND = 0x9,SUBLANG_SANSKRIT_INDIA = 0x1,SUBLANG_SCOTTISH_GAELIC = 0x1,SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN = 0x6,SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x7,SUBLANG_SERBIAN_MONTENEGRO_LATIN = 0xB,SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC = 0xC,SUBLANG_SERBIAN_SERBIA_LATIN = 0x9,SUBLANG_SERBIAN_SERBIA_CYRILLIC = 0xA,SUBLANG_SERBIAN_CROATIA = 0x1,SUBLANG_SERBIAN_LATIN = 0x2,SUBLANG_SERBIAN_CYRILLIC = 0x3,SUBLANG_SINDHI_INDIA = 0x1,SUBLANG_SINDHI_PAKISTAN = 0x2,SUBLANG_SINDHI_AFGHANISTAN = 0x2,SUBLANG_SINHALESE_SRI_LANKA = 0x1,SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA = 0x1,SUBLANG_SLOVAK_SLOVAKIA = 0x1,SUBLANG_SLOVENIAN_SLOVENIA = 0x1,SUBLANG_SPANISH = 0x1,SUBLANG_SPANISH_MEXICAN = 0x2,SUBLANG_SPANISH_MODERN = 0x3,SUBLANG_SPANISH_GUATEMALA = 0x4,SUBLANG_SPANISH_COSTA_RICA = 0x5,SUBLANG_SPANISH_PANAMA = 0x6,SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 0x7,SUBLANG_SPANISH_VENEZUELA = 0x8,SUBLANG_SPANISH_COLOMBIA = 0x9,SUBLANG_SPANISH_PERU = 0xA,SUBLANG_SPANISH_ARGENTINA = 0xB,SUBLANG_SPANISH_ECUADOR = 0xC,SUBLANG_SPANISH_CHILE = 0xD,SUBLANG_SPANISH_URUGUAY = 0xE,SUBLANG_SPANISH_PARAGUAY = 0xF,SUBLANG_SPANISH_BOLIVIA = 0x10,SUBLANG_SPANISH_EL_SALVADOR = 0x11,SUBLANG_SPANISH_HONDURAS = 0x12,SUBLANG_SPANISH_NICARAGUA = 0x13,SUBLANG_SPANISH_PUERTO_RICO = 0x14,SUBLANG_SPANISH_US = 0x15,SUBLANG_SWAHILI_KENYA = 0x1,SUBLANG_SWEDISH = 0x1,SUBLANG_SWEDISH_FINLAND = 0x2,SUBLANG_SYRIAC_SYRIA = 0x1,SUBLANG_TAJIK_TAJIKISTAN = 0x1,SUBLANG_TAMAZIGHT_ALGERIA_LATIN = 0x2,SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH = 0x4,SUBLANG_TAMIL_INDIA = 0x1,SUBLANG_TAMIL_SRI_LANKA = 0x2,SUBLANG_TATAR_RUSSIA = 0x1,SUBLANG_TELUGU_INDIA = 0x1,SUBLANG_THAI_THAILAND = 0x1,SUBLANG_TIBETAN_PRC = 0x1,SUBLANG_TIGRIGNA_ERITREA = 0x2,SUBLANG_TIGRINYA_ERITREA = 0x2,SUBLANG_TIGRINYA_ETHIOPIA = 0x1,SUBLANG_TSWANA_BOTSWANA = 0x2,SUBLANG_TSWANA_SOUTH_AFRICA = 0x1,SUBLANG_TURKISH_TURKEY = 0x1,SUBLANG_TURKMEN_TURKMENISTAN = 0x1,SUBLANG_UIGHUR_PRC = 0x1,SUBLANG_UKRAINIAN_UKRAINE = 0x1,SUBLANG_UPPER_SORBIAN_GERMANY = 0x1,SUBLANG_URDU_PAKISTAN = 0x1,SUBLANG_URDU_INDIA = 0x2,SUBLANG_UZBEK_LATIN = 0x1,SUBLANG_UZBEK_CYRILLIC = 0x2,SUBLANG_VALENCIAN_VALENCIA = 0x2,SUBLANG_VIETNAMESE_VIETNAM = 0x1,SUBLANG_WELSH_UNITED_KINGDOM = 0x1,SUBLANG_WOLOF_SENEGAL = 0x1,SUBLANG_XHOSA_SOUTH_AFRICA = 0x1,SUBLANG_YAKUT_RUSSIA = 0x1,SUBLANG_YI_PRC = 0x1,SUBLANG_YORUBA_NIGERIA = 0x1,SUBLANG_ZULU_SOUTH_AFRICA = 0x1,};
enum MACRO_SUBLANG_PORTUGUESE {SUBLANG_PORTUGUESE_PORTUGAL = 0x2,};
enum MACRO_SYMBOLIC {SYMBOLIC_LINK_QUERY = 0x1,SYMBOLIC_LINK_ALL_ACCESS = 0xF0001,};
enum MACRO_SYMLINK {SYMLINK_FLAG_RELATIVE = 1,};
enum MACRO_SYNCHRONIZE {SYNCHRONIZE = 0x100000,};
enum MACRO_SYS {SYS_OPEN = 20,};
enum MACRO_SYSPAL {SYSPAL_ERROR = 0,SYSPAL_STATIC = 1,SYSPAL_NOSTATIC = 2,SYSPAL_NOSTATIC256 = 3,};
enum MACRO_SYSRGN {SYSRGN = 4,};
enum MACRO_SYSTEM {SYSTEM_CACHE_ALIGNMENT_SIZE = 64,};
enum MACRO_SYSTEM_AUDIT {SYSTEM_AUDIT_ACE_TYPE = 0x2,SYSTEM_ALARM_ACE_TYPE = 0x3,};
enum MACRO_SYSTEM_AUDIT_CALLBACK {SYSTEM_AUDIT_CALLBACK_ACE_TYPE = 0xD,SYSTEM_ALARM_CALLBACK_ACE_TYPE = 0xE,SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE = 0xF,SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE = 0x10,};
enum MACRO_SYSTEM_AUDIT_OBJECT {SYSTEM_AUDIT_OBJECT_ACE_TYPE = 0x7,SYSTEM_ALARM_OBJECT_ACE_TYPE = 0x8,};
enum MACRO_SYSTEM_MANDATORY {SYSTEM_MANDATORY_LABEL_NO_WRITE_UP = 0x1,SYSTEM_MANDATORY_LABEL_NO_READ_UP = 0x2,SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP = 0x4,SYSTEM_MANDATORY_LABEL_VALID_MASK = 0x7,};
enum MACRO_TA {TA_BASELINE = 24,TA_BOTTOM = 8,TA_TOP = 0,TA_CENTER = 6,TA_LEFT = 0,TA_RIGHT = 2,TA_RTLREADING = 256,TA_NOUPDATECP = 0,TA_UPDATECP = 1,TA_MASK = 287,};
enum MACRO_TABLE {TABLE_NUMBER_BITS = 1,TABLE_OFFSET_BITS = 12,};
enum MACRO_TAPE {TAPE_ABSOLUTE_POSITION = 0,TAPE_LOGICAL_POSITION = 1,TAPE_PSEUDO_LOGICAL_POSITION = 2,TAPE_REWIND = 0,TAPE_ABSOLUTE_BLOCK = 1,TAPE_LOGICAL_BLOCK = 2,TAPE_PSEUDO_LOGICAL_BLOCK = 3,TAPE_SPACE_END_OF_DATA = 4,TAPE_SPACE_RELATIVE_BLOCKS = 5,TAPE_SPACE_FILEMARKS = 6,TAPE_SPACE_SEQUENTIAL_FMKS = 7,TAPE_SPACE_SETMARKS = 8,TAPE_SPACE_SEQUENTIAL_SMKS = 9,TAPE_DRIVE_FIXED = 1,TAPE_DRIVE_SELECT = 2,TAPE_DRIVE_INITIATOR = 4,TAPE_DRIVE_ERASE_SHORT = 16,TAPE_DRIVE_ERASE_LONG = 32,TAPE_DRIVE_ERASE_BOP_ONLY = 64,TAPE_DRIVE_ERASE_IMMEDIATE = 128,TAPE_DRIVE_TAPE_CAPACITY = 256,TAPE_DRIVE_TAPE_REMAINING = 512,TAPE_DRIVE_FIXED_BLOCK = 1024,TAPE_DRIVE_VARIABLE_BLOCK = 2048,TAPE_DRIVE_WRITE_PROTECT = 4096,TAPE_DRIVE_EOT_WZ_SIZE = 8192,TAPE_DRIVE_ECC = 65536,TAPE_DRIVE_COMPRESSION = 131072,TAPE_DRIVE_PADDING = 262144,TAPE_DRIVE_REPORT_SMKS = 524288,TAPE_DRIVE_GET_ABSOLUTE_BLK = 1048576,TAPE_DRIVE_GET_LOGICAL_BLK = 2097152,TAPE_DRIVE_SET_EOT_WZ_SIZE = 4194304,TAPE_DRIVE_EJECT_MEDIA = 16777216,TAPE_DRIVE_CLEAN_REQUESTS = 33554432,TAPE_DRIVE_SET_CMP_BOP_ONLY = 67108864,TAPE_DRIVE_RESERVED_BIT = -2147483648,TAPE_DRIVE_LOAD_UNLOAD = -2147483647,TAPE_DRIVE_TENSION = -2147483646,TAPE_DRIVE_LOCK_UNLOCK = -2147483644,TAPE_DRIVE_REWIND_IMMEDIATE = -2147483640,TAPE_DRIVE_SET_BLOCK_SIZE = -2147483632,TAPE_DRIVE_LOAD_UNLD_IMMED = -2147483616,TAPE_DRIVE_TENSION_IMMED = -2147483584,TAPE_DRIVE_LOCK_UNLK_IMMED = -2147483520,TAPE_DRIVE_SET_ECC = -2147483392,TAPE_DRIVE_SET_COMPRESSION = -2147483136,TAPE_DRIVE_SET_PADDING = -2147482624,TAPE_DRIVE_SET_REPORT_SMKS = -2147481600,TAPE_DRIVE_ABSOLUTE_BLK = -2147479552,TAPE_DRIVE_ABS_BLK_IMMED = -2147475456,TAPE_DRIVE_LOGICAL_BLK = -2147467264,TAPE_DRIVE_LOG_BLK_IMMED = -2147450880,TAPE_DRIVE_END_OF_DATA = -2147418112,TAPE_DRIVE_RELATIVE_BLKS = -2147352576,TAPE_DRIVE_FILEMARKS = -2147221504,TAPE_DRIVE_SEQUENTIAL_FMKS = -2146959360,TAPE_DRIVE_SETMARKS = -2146435072,TAPE_DRIVE_SEQUENTIAL_SMKS = -2145386496,TAPE_DRIVE_REVERSE_POSITION = -2143289344,TAPE_DRIVE_SPACE_IMMEDIATE = -2139095040,TAPE_DRIVE_WRITE_SETMARKS = -2130706432,TAPE_DRIVE_WRITE_FILEMARKS = -2113929216,TAPE_DRIVE_WRITE_SHORT_FMKS = -2080374784,TAPE_DRIVE_WRITE_LONG_FMKS = -2013265920,TAPE_DRIVE_WRITE_MARK_IMMED = -1879048192,TAPE_DRIVE_FORMAT = -1610612736,TAPE_DRIVE_FORMAT_IMMEDIATE = -1073741824,TAPE_DRIVE_HIGH_FEATURES = -2147483648,TAPE_FIXED_PARTITIONS = 0,TAPE_INITIATOR_PARTITIONS = 2,TAPE_SELECT_PARTITIONS = 1,TAPE_FILEMARKS = 1,TAPE_LONG_FILEMARKS = 3,TAPE_SETMARKS = 0,TAPE_SHORT_FILEMARKS = 2,TAPE_ERASE_LONG = 1,TAPE_ERASE_SHORT = 0,TAPE_LOAD = 0,TAPE_UNLOAD = 1,TAPE_TENSION = 2,TAPE_LOCK = 3,TAPE_UNLOCK = 4,TAPE_FORMAT = 5,};
enum MACRO_TC {TC_OP_CHARACTER = 1,TC_OP_STROKE = 2,TC_CP_STROKE = 4,TC_CR_90 = 8,TC_CR_ANY = 16,TC_SF_X_YINDEP = 32,TC_SA_DOUBLE = 64,TC_SA_INTEGER = 128,TC_SA_CONTIN = 256,TC_EA_DOUBLE = 512,TC_IA_ABLE = 1024,TC_UA_ABLE = 2048,TC_SO_ABLE = 4096,TC_RA_ABLE = 8192,TC_VA_ABLE = 16384,TC_RESERVED = 32768,TC_SCROLLBLT = 65536,};
enum MACRO_TCI {TCI_SRCCHARSET = 1,TCI_SRCCODEPAGE = 2,TCI_SRCFONTSIG = 3,TCI_SRCLOCALE = 4096,};
enum MACRO_TC_RECTANGLES {TC_RECTANGLES = 0,TC_PATHOBJ = 2,};
enum MACRO_TEB {TEB_EXCEPTION_LIST = 0x0,TEB_STACK_BASE = 0x4,TEB_STACK_LIMIT = 0x8,TEB_FIBER_DATA = 0x10,TEB_SELF = 0x18,TEB_PEB = 0x30,TEB_EXCEPTION_CODE = 0x1A4,TEB_ACTIVATION_CONTEXT_STACK_POINTER = 0x1A8,TEB_GL_TABLE = 0xBE8,TEB_DEALLOCATION_STACK = 0xE0C,TEB_GDI_BATCH_COUNT = 0xF70,TEB_GUARANTEED_STACK_BYTES = 0xF78,TEB_FLS_DATA = 0xFB4,};
enum MACRO_TEXTCAPS {TEXTCAPS = 34,};
enum MACRO_THREAD {THREAD_TERMINATE = 1,THREAD_SUSPEND_RESUME = 2,THREAD_GET_CONTEXT = 8,THREAD_SET_CONTEXT = 16,THREAD_SET_INFORMATION = 32,THREAD_QUERY_INFORMATION = 64,THREAD_SET_THREAD_TOKEN = 128,THREAD_IMPERSONATE = 256,THREAD_DIRECT_IMPERSONATION = 512,THREAD_QUERY_LIMITED_INFORMATION = 2048,};
enum MACRO_THREAD_ALERT {THREAD_ALERT_INCREMENT = 2,};
enum MACRO_THREAD_BASE {THREAD_BASE_PRIORITY_LOWRT = 15,THREAD_BASE_PRIORITY_MAX = 2,THREAD_BASE_PRIORITY_MIN = -2,THREAD_BASE_PRIORITY_IDLE = -15,};
enum MACRO_THREAD_RESUME {THREAD_RESUME = 0x1000,};
enum MACRO_TIME {TIME_ZONE_ID_UNKNOWN = 0,TIME_ZONE_ID_STANDARD = 1,TIME_ZONE_ID_DAYLIGHT = 2,};
enum MACRO_TLS {TLS_EXPANSION_SLOTS = 1024,};
enum MACRO_TMP {TMP_MAX = 32767,};
enum MACRO_TMPF {TMPF_FIXED_PITCH = 1,TMPF_VECTOR = 2,TMPF_TRUETYPE = 4,TMPF_DEVICE = 8,};
enum MACRO_TOKEN {TOKEN_ASSIGN_PRIMARY = 0x1,TOKEN_DUPLICATE = 0x2,TOKEN_IMPERSONATE = 0x4,TOKEN_QUERY = 0x8,TOKEN_QUERY_SOURCE = 0x10,TOKEN_ADJUST_PRIVILEGES = 0x20,TOKEN_ADJUST_GROUPS = 0x40,TOKEN_ADJUST_DEFAULT = 0x80,TOKEN_ADJUST_SESSIONID = 0x100,TOKEN_ALL_ACCESS_P = 0xF00FF,TOKEN_ALL_ACCESS = 0xF01FF,TOKEN_READ = 0x20008,TOKEN_WRITE = 0x200E0,TOKEN_EXECUTE = 0x20000,TOKEN_MANDATORY_POLICY_OFF = 0x0,TOKEN_MANDATORY_POLICY_NO_WRITE_UP = 0x1,TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN = 0x2,TOKEN_MANDATORY_POLICY_VALID_MASK = 0x3,};
enum MACRO_TOKEN_SOURCE {TOKEN_SOURCE_LENGTH = 8,};
enum MACRO_TRANSFORM {TRANSFORM_CTM = 4107,};
enum MACRO_TRANSPARENT {TRANSPARENT = 1,};
enum MACRO_TT {TT_AVAILABLE = 1,TT_ENABLED = 2,};
enum MACRO_TTO {TTO_METRICS_ONLY = 0x1,TTO_QUBICS = 0x2,TTO_UNHINTED = 0x4,};
enum MACRO_TT_POLYGON {TT_POLYGON_TYPE = 24,TT_PRIM_LINE = 1,TT_PRIM_QSPLINE = 2,TT_PRIM_CSPLINE = 3,};
enum MACRO_UCSCHAR {UCSCHAR_INVALID_CHARACTER = 0xFFFFFFFF,};
enum MACRO_UNICODE {UNICODE_STRING_MAX_BYTES = 65534,UNICODE_STRING_MAX_CHARS = 32767,};
enum MACRO_USE {USE___UUIDOF = 0,};
enum MACRO_USER {USER_SHARED_DATA = 0x7FFE0000,};
enum MACRO_USER_SHARED {USER_SHARED_DATA_INTERRUPT_TIME = 0x8,USER_SHARED_DATA_SYSTEM_TIME = 0x14,USER_SHARED_DATA_PROCESSOR_FEATURES = 0x274,USER_SHARED_DATA_TICK_COUNT = 0x320,};
enum MACRO_VALID {VALID_INHERIT_FLAGS = 0x1F,};
enum MACRO_VALID_NTFT {VALID_NTFT = 0xC0,};
enum MACRO_VER {VER_WORKSTATION_NT = 0x40000000,VER_SERVER_NT = 0x80000000,VER_SUITE_SMALLBUSINESS = 0x1,VER_SUITE_ENTERPRISE = 0x2,VER_SUITE_BACKOFFICE = 0x4,VER_SUITE_COMMUNICATIONS = 0x8,VER_SUITE_TERMINAL = 0x10,VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x20,VER_SUITE_EMBEDDEDNT = 0x40,VER_SUITE_DATACENTER = 0x80,VER_SUITE_SINGLEUSERTS = 0x100,VER_SUITE_PERSONAL = 0x200,VER_SUITE_BLADE = 0x400,VER_SUITE_EMBEDDED_RESTRICTED = 0x800,VER_SUITE_SECURITY_APPLIANCE = 0x1000,VER_SUITE_STORAGE_SERVER = 0x2000,VER_SUITE_COMPUTE_SERVER = 0x4000,VER_SUITE_WH_SERVER = 0x8000,};
enum MACRO_VERTRES {VERTRES = 10,};
enum MACRO_VERTSIZE {VERTSIZE = 6,HORZRES = 8,};
enum MACRO_VER_CONDITION {VER_CONDITION_MASK = 7,VER_NUM_BITS_PER_CONDITION_MASK = 3,};
enum MACRO_VER_MINORVERSION {VER_MINORVERSION = 0x1,VER_MAJORVERSION = 0x2,VER_BUILDNUMBER = 0x4,VER_PLATFORMID = 0x8,VER_SERVICEPACKMINOR = 0x10,VER_SERVICEPACKMAJOR = 0x20,VER_SUITENAME = 0x40,VER_PRODUCT_TYPE = 0x80,VER_EQUAL = 0x1,VER_GREATER = 0x2,VER_GREATER_EQUAL = 0x3,VER_LESS = 0x4,VER_LESS_EQUAL = 0x5,VER_AND = 0x6,VER_OR = 0x7,VER_PLATFORM_WIN32s = 0x0,VER_PLATFORM_WIN32_WINDOWS = 0x1,VER_PLATFORM_WIN32_NT = 0x2,VER_NT_WORKSTATION = 0x1,VER_NT_DOMAIN_CONTROLLER = 0x2,VER_NT_SERVER = 0x3,};
enum MACRO_VIDMEM {VIDMEM_ISLINEAR = 0x1,VIDMEM_ISRECTANGULAR = 0x2,VIDMEM_ISHEAP = 0x4,VIDMEM_ISNONLOCAL = 0x8,VIDMEM_ISWC = 0x10,VIDMEM_HEAPDISABLED = 0x20,};
enum MACRO_VOLUME {VOLUME_IS_DIRTY = 0x1,VOLUME_UPGRADE_SCHEDULED = 0x2,VOLUME_SESSION_OPEN = 0x4,};
enum MACRO_VREFRESH {VREFRESH = 116,};
enum MACRO_VTA {VTA_BASELINE = 24,VTA_CENTER = 6,VTA_LEFT = 8,VTA_RIGHT = 0,VTA_BOTTOM = 2,VTA_TOP = 0,};
enum MACRO_WAIT {WAIT_TIMEOUT = 258,};
enum MACRO_WARNING {WARNING_IPSEC_MM_POLICY_PRUNED = 13024,WARNING_IPSEC_QM_POLICY_PRUNED = 13025,};
enum MACRO_WEOF {WEOF = 0xFFFF,};
enum MACRO_WGL {WGL_FONT_LINES = 0,WGL_FONT_POLYGONS = 1,};
enum MACRO_WGL_SWAP {WGL_SWAP_MAIN_PLANE = 1,WGL_SWAP_OVERLAY1 = 2,WGL_SWAP_OVERLAY2 = 4,WGL_SWAP_OVERLAY3 = 8,WGL_SWAP_OVERLAY4 = 16,WGL_SWAP_OVERLAY5 = 32,WGL_SWAP_OVERLAY6 = 64,WGL_SWAP_OVERLAY7 = 128,WGL_SWAP_OVERLAY8 = 256,WGL_SWAP_OVERLAY9 = 512,WGL_SWAP_OVERLAY10 = 1024,WGL_SWAP_OVERLAY11 = 2048,WGL_SWAP_OVERLAY12 = 4096,WGL_SWAP_OVERLAY13 = 8192,WGL_SWAP_OVERLAY14 = 16384,WGL_SWAP_OVERLAY15 = 32768,WGL_SWAP_UNDERLAY1 = 65536,WGL_SWAP_UNDERLAY2 = 131072,WGL_SWAP_UNDERLAY3 = 262144,WGL_SWAP_UNDERLAY4 = 524288,WGL_SWAP_UNDERLAY5 = 1048576,WGL_SWAP_UNDERLAY6 = 2097152,WGL_SWAP_UNDERLAY7 = 4194304,WGL_SWAP_UNDERLAY8 = 8388608,WGL_SWAP_UNDERLAY9 = 16777216,WGL_SWAP_UNDERLAY10 = 33554432,WGL_SWAP_UNDERLAY11 = 67108864,WGL_SWAP_UNDERLAY12 = 134217728,WGL_SWAP_UNDERLAY13 = 268435456,WGL_SWAP_UNDERLAY14 = 536870912,WGL_SWAP_UNDERLAY15 = 1073741824,};
enum MACRO_WGL_SWAPMULTIPLE {WGL_SWAPMULTIPLE_MAX = 16,};
enum MACRO_WHITENESS {WHITENESS = 0xFF0062,};
enum MACRO_WINDDI {WINDDI_MAXSETPALETTECOLORS = 256,WINDDI_MAXSETPALETTECOLORINDEX = 255,};
enum MACRO_WINDDI_MAX {WINDDI_MAX_BROADCAST_CONTEXT = 64,};
enum MACRO_WMIREG {WMIREG_FLAG_TRACE_PROVIDER = 0x10000,WMIREG_FLAG_TRACE_NOTIFY_MASK = 0xF00000,WMIREG_NOTIFY_DISK_IO = 0x100000,WMIREG_NOTIFY_TDI_IO = 0x200000,};
enum MACRO_WNDOBJ {WNDOBJ_SETUP = 4354,};
enum MACRO_WO {WO_RGN_CLIENT_DELTA = 0x1,WO_RGN_CLIENT = 0x2,WO_RGN_SURFACE_DELTA = 0x4,WO_RGN_SURFACE = 0x8,WO_RGN_UPDATE_ALL = 0x10,WO_RGN_WINDOW = 0x20,WO_DRAW_NOTIFY = 0x40,WO_SPRITE_NOTIFY = 0x80,WO_RGN_DESKTOP_COORD = 0x100,WO_RGN_SPRITE = 0x200,};
enum MACRO_WOC {WOC_RGN_CLIENT_DELTA = 0x1,WOC_RGN_CLIENT = 0x2,WOC_RGN_SURFACE_DELTA = 0x4,WOC_RGN_SURFACE = 0x8,WOC_CHANGED = 0x10,WOC_DELETE = 0x20,WOC_DRAWN = 0x40,WOC_SPRITE_OVERLAP = 0x80,WOC_SPRITE_NO_OVERLAP = 0x100,WOC_RGN_SPRITE = 0x200,};
enum MACRO_WRITE {WRITE_WATCH_FLAG_RESET = 0x1,};
enum MACRO_WRITE_DAC {WRITE_DAC = 0x40000,WRITE_OWNER = 0x80000,};
enum MACRO_WSA {WSA_E_NO_MORE = 10110,WSA_E_CANCELLED = 10111,};
enum MACRO_WSABASEERR {WSABASEERR = 10000,};
enum MACRO_WSAEACCES {WSAEACCES = 10013,};
enum MACRO_WSAEADDRINUSE {WSAEADDRINUSE = 10048,};
enum MACRO_WSAEADDRNOTAVAIL {WSAEADDRNOTAVAIL = 10049,};
enum MACRO_WSAEAFNOSUPPORT {WSAEAFNOSUPPORT = 10047,};
enum MACRO_WSAEALREADY {WSAEALREADY = 10037,};
enum MACRO_WSAEBADF {WSAEBADF = 10009,};
enum MACRO_WSAECANCELLED {WSAECANCELLED = 10103,};
enum MACRO_WSAECONNABORTED {WSAECONNABORTED = 10053,};
enum MACRO_WSAECONNREFUSED {WSAECONNREFUSED = 10061,};
enum MACRO_WSAECONNRESET {WSAECONNRESET = 10054,};
enum MACRO_WSAEDESTADDRREQ {WSAEDESTADDRREQ = 10039,};
enum MACRO_WSAEDISCON {WSAEDISCON = 10101,};
enum MACRO_WSAEDQUOT {WSAEDQUOT = 10069,};
enum MACRO_WSAEFAULT {WSAEFAULT = 10014,};
enum MACRO_WSAEHOSTDOWN {WSAEHOSTDOWN = 10064,};
enum MACRO_WSAEHOSTUNREACH {WSAEHOSTUNREACH = 10065,};
enum MACRO_WSAEINPROGRESS {WSAEINPROGRESS = 10036,};
enum MACRO_WSAEINTR {WSAEINTR = 10004,};
enum MACRO_WSAEINVAL {WSAEINVAL = 10022,};
enum MACRO_WSAEINVALIDPROCTABLE {WSAEINVALIDPROCTABLE = 10104,};
enum MACRO_WSAEINVALIDPROVIDER {WSAEINVALIDPROVIDER = 10105,};
enum MACRO_WSAEISCONN {WSAEISCONN = 10056,};
enum MACRO_WSAELOOP {WSAELOOP = 10062,};
enum MACRO_WSAEMFILE {WSAEMFILE = 10024,};
enum MACRO_WSAEMSGSIZE {WSAEMSGSIZE = 10040,};
enum MACRO_WSAENAMETOOLONG {WSAENAMETOOLONG = 10063,};
enum MACRO_WSAENETDOWN {WSAENETDOWN = 10050,};
enum MACRO_WSAENETRESET {WSAENETRESET = 10052,};
enum MACRO_WSAENETUNREACH {WSAENETUNREACH = 10051,};
enum MACRO_WSAENOBUFS {WSAENOBUFS = 10055,};
enum MACRO_WSAENOMORE {WSAENOMORE = 10102,};
enum MACRO_WSAENOPROTOOPT {WSAENOPROTOOPT = 10042,};
enum MACRO_WSAENOTCONN {WSAENOTCONN = 10057,};
enum MACRO_WSAENOTEMPTY {WSAENOTEMPTY = 10066,};
enum MACRO_WSAENOTSOCK {WSAENOTSOCK = 10038,};
enum MACRO_WSAEOPNOTSUPP {WSAEOPNOTSUPP = 10045,};
enum MACRO_WSAEPFNOSUPPORT {WSAEPFNOSUPPORT = 10046,};
enum MACRO_WSAEPROCLIM {WSAEPROCLIM = 10067,};
enum MACRO_WSAEPROTONOSUPPORT {WSAEPROTONOSUPPORT = 10043,};
enum MACRO_WSAEPROTOTYPE {WSAEPROTOTYPE = 10041,};
enum MACRO_WSAEPROVIDERFAILEDINIT {WSAEPROVIDERFAILEDINIT = 10106,};
enum MACRO_WSAEREFUSED {WSAEREFUSED = 10112,};
enum MACRO_WSAEREMOTE {WSAEREMOTE = 10071,};
enum MACRO_WSAESHUTDOWN {WSAESHUTDOWN = 10058,};
enum MACRO_WSAESOCKTNOSUPPORT {WSAESOCKTNOSUPPORT = 10044,};
enum MACRO_WSAESTALE {WSAESTALE = 10070,};
enum MACRO_WSAETIMEDOUT {WSAETIMEDOUT = 10060,};
enum MACRO_WSAETOOMANYREFS {WSAETOOMANYREFS = 10059,};
enum MACRO_WSAEUSERS {WSAEUSERS = 10068,};
enum MACRO_WSAEWOULDBLOCK {WSAEWOULDBLOCK = 10035,};
enum MACRO_WSAHOST {WSAHOST_NOT_FOUND = 11001,};
enum MACRO_WSANO {WSANO_RECOVERY = 11003,WSANO_DATA = 11004,};
enum MACRO_WSANOTINITIALISED {WSANOTINITIALISED = 10093,};
enum MACRO_WSASYSCALLFAILURE {WSASYSCALLFAILURE = 10107,};
enum MACRO_WSASYSNOTREADY {WSASYSNOTREADY = 10091,};
enum MACRO_WSATRY {WSATRY_AGAIN = 11002,};
enum MACRO_WSAVERNOTSUPPORTED {WSAVERNOTSUPPORTED = 10092,};
enum MACRO_WSA_QOS {WSA_QOS_RECEIVERS = 11005,WSA_QOS_SENDERS = 11006,WSA_QOS_NO_SENDERS = 11007,WSA_QOS_NO_RECEIVERS = 11008,WSA_QOS_REQUEST_CONFIRMED = 11009,WSA_QOS_ADMISSION_FAILURE = 11010,WSA_QOS_POLICY_FAILURE = 11011,WSA_QOS_BAD_STYLE = 11012,WSA_QOS_BAD_OBJECT = 11013,WSA_QOS_TRAFFIC_CTRL_ERROR = 11014,WSA_QOS_GENERIC_ERROR = 11015,WSA_QOS_ESERVICETYPE = 11016,WSA_QOS_EFLOWSPEC = 11017,WSA_QOS_EPROVSPECBUF = 11018,WSA_QOS_EFILTERSTYLE = 11019,WSA_QOS_EFILTERTYPE = 11020,WSA_QOS_EFILTERCOUNT = 11021,WSA_QOS_EOBJLENGTH = 11022,WSA_QOS_EFLOWCOUNT = 11023,WSA_QOS_EUNKNOWNPSOBJ = 11024,WSA_QOS_EPOLICYOBJ = 11025,WSA_QOS_EFLOWDESC = 11026,WSA_QOS_EPSFLOWSPEC = 11027,WSA_QOS_EPSFILTERSPEC = 11028,WSA_QOS_ESDMODEOBJ = 11029,WSA_QOS_ESHAPERATEOBJ = 11030,WSA_QOS_RESERVED_PETYPE = 11031,};
enum MACRO_WT {WT_EXECUTEDEFAULT = 0x0,WT_EXECUTEINIOTHREAD = 0x1,WT_EXECUTEINUITHREAD = 0x2,WT_EXECUTEINWAITTHREAD = 0x4,WT_EXECUTEONLYONCE = 0x8,WT_EXECUTELONGFUNCTION = 0x10,WT_EXECUTEINTIMERTHREAD = 0x20,WT_EXECUTEINPERSISTENTIOTHREAD = 0x40,WT_EXECUTEINPERSISTENTTHREAD = 0x80,WT_TRANSFER_IMPERSONATION = 0x100,};
enum MACRO_XF {XF_LTOL = 0,XF_INV_LTOL = 1,XF_LTOFX = 2,XF_INV_FXTOL = 3,};
enum MACRO_XO {XO_TRIVIAL = 0x1,XO_TABLE = 0x2,XO_TO_MONO = 0x4,XO_FROM_CMYK = 0x8,XO_DEVICE_ICM = 0x10,XO_HOST_ICM = 0x20,};
enum MACRO_XO_SRCPALETTE {XO_SRCPALETTE = 1,XO_DESTPALETTE = 2,XO_DESTDCPALETTE = 3,XO_SRCBITFIELDS = 4,XO_DESTBITFIELDS = 5,};
enum MACRO__ALPHA {_ALPHA = 0x103,};
enum MACRO__ARGMAX {_ARGMAX = 100,};
enum MACRO__CRT {_CRT_PACKING = 8,};
enum MACRO__EM {_EM_INVALID = 0x10,_EM_DENORMAL = 0x80000,_EM_ZERODIVIDE = 0x8,_EM_OVERFLOW = 0x4,_EM_UNDERFLOW = 0x2,_EM_INEXACT = 0x1,};
enum MACRO__FACDD {_FACDD = 0x876,};
enum MACRO__FPCLASS {_FPCLASS_SNAN = 0x1,_FPCLASS_QNAN = 0x2,_FPCLASS_NINF = 0x4,_FPCLASS_NN = 0x8,_FPCLASS_ND = 0x10,_FPCLASS_NZ = 0x20,_FPCLASS_PZ = 0x40,_FPCLASS_PD = 0x80,_FPCLASS_PN = 0x100,_FPCLASS_PINF = 0x200,};
enum MACRO__FPE {_FPE_INVALID = 0x81,_FPE_DENORMAL = 0x82,_FPE_ZERODIVIDE = 0x83,_FPE_OVERFLOW = 0x84,_FPE_UNDERFLOW = 0x85,_FPE_INEXACT = 0x86,_FPE_UNEMULATED = 0x87,_FPE_SQRTNEG = 0x88,_FPE_STACKOVERFLOW = 0x8A,_FPE_STACKUNDERFLOW = 0x8B,_FPE_EXPLICITGEN = 0x8C,};
enum MACRO__IC {_IC_AFFINE = 0x40000,_IC_PROJECTIVE = 0x0,};
enum MACRO__INTEGRAL {_INTEGRAL_MAX_BITS = 64,};
enum MACRO__IOB {_IOB_ENTRIES = 20,};
enum MACRO__IOFBF {_IOFBF = 0x0,_IOLBF = 0x40,};
enum MACRO__IONBF {_IONBF = 0x4,_IOMYBUF = 0x8,_IOEOF = 0x10,_IOERR = 0x20,_IOSTRG = 0x40,_IORW = 0x80,_USERBUF = 0x100,};
enum MACRO__JBLEN {_JBLEN = 16,};
enum MACRO__MCW {_MCW_EM = 0x8001F,_MCW_IC = 0x40000,_MCW_RC = 0x300,_MCW_PC = 0x30000,_MCW_DN = 0x3000000,};
enum MACRO__NLSCMPERROR {_NLSCMPERROR = 2147483647,};
enum MACRO__NSTREAM {_NSTREAM_ = 512,};
enum MACRO__PC {_PC_24 = 0x20000,_PC_53 = 0x10000,_PC_64 = 0x0,};
enum MACRO__RC {_RC_CHOP = 0x300,_RC_UP = 0x200,_RC_DOWN = 0x100,_RC_NEAR = 0x0,};
enum MACRO__SAL {_SAL_VERSION = 20,};
enum MACRO__SECURECRT {_SECURECRT_FILL_BUFFER_PATTERN = 0xFD,};
enum MACRO__SW {_SW_UNEMULATED = 0x40,_SW_SQRTNEG = 0x80,_SW_STACKOVERFLOW = 0x200,_SW_STACKUNDERFLOW = 0x400,};
enum MACRO__SYS {_SYS_OPEN = 20,};
enum MACRO__TWO {_TWO_DIGIT_EXPONENT = 0x1,};
enum MACRO__UPPER {_UPPER = 0x1,_LOWER = 0x2,_DIGIT = 0x4,_SPACE = 0x8,_PUNCT = 0x10,_CONTROL = 0x20,_BLANK = 0x40,_HEX = 0x80,_LEADBYTE = 0x8000,};
enum MACRO__USE {_USE_DECLSPECS_FOR_SAL = 0,_USE_ATTRIBUTES_FOR_SAL = 1,};
enum MACRO__WIN32 {_WIN32_WINNT_NT4 = 0x400,_WIN32_WINNT_WIN2K = 0x500,_WIN32_WINNT_WINXP = 0x501,_WIN32_WINNT_WS03 = 0x502,_WIN32_WINNT_WIN6 = 0x600,_WIN32_WINNT_VISTA = 0x600,_WIN32_WINNT_WS08 = 0x600,_WIN32_WINNT_LONGHORN = 0x600,_WIN32_WINNT_WIN7 = 0x601,_WIN32_WINNT_WIN8 = 0x602,_WIN32_WINNT_WINBLUE = 0x603,_WIN32_WINNT_WINTHRESHOLD = 0xA00,_WIN32_WINNT_WIN10 = 0xA00,_WIN32_IE_IE20 = 0x200,_WIN32_IE_IE30 = 0x300,_WIN32_IE_IE302 = 0x302,_WIN32_IE_IE40 = 0x400,_WIN32_IE_IE401 = 0x401,_WIN32_IE_IE50 = 0x500,_WIN32_IE_IE501 = 0x501,_WIN32_IE_IE55 = 0x550,_WIN32_IE_IE60 = 0x600,_WIN32_IE_IE60SP1 = 0x601,_WIN32_IE_IE60SP2 = 0x603,_WIN32_IE_IE70 = 0x700,_WIN32_IE_IE80 = 0x800,_WIN32_IE_IE90 = 0x900,_WIN32_IE_IE100 = 0xA00,_WIN32_IE_IE110 = 0xA00,_WIN32_IE_NT4 = 0x200,_WIN32_IE_NT4SP1 = 0x200,_WIN32_IE_NT4SP2 = 0x200,_WIN32_IE_NT4SP3 = 0x302,_WIN32_IE_NT4SP4 = 0x401,_WIN32_IE_NT4SP5 = 0x401,_WIN32_IE_NT4SP6 = 0x500,_WIN32_IE_WIN98 = 0x401,_WIN32_IE_WIN98SE = 0x500,_WIN32_IE_WINME = 0x550,_WIN32_IE_WIN2K = 0x501,_WIN32_IE_WIN2KSP1 = 0x501,_WIN32_IE_WIN2KSP2 = 0x501,_WIN32_IE_WIN2KSP3 = 0x501,_WIN32_IE_WIN2KSP4 = 0x501,_WIN32_IE_XP = 0x600,_WIN32_IE_XPSP1 = 0x601,_WIN32_IE_XPSP2 = 0x603,_WIN32_IE_WS03 = 0x602,_WIN32_IE_WS03SP1 = 0x603,_WIN32_IE_WIN6 = 0x700,_WIN32_IE_LONGHORN = 0x700,_WIN32_IE_WIN7 = 0x800,_WIN32_IE_WIN8 = 0xA00,_WIN32_IE_WINBLUE = 0xA00,_WIN32_IE_WINTHRESHOLD = 0xA00,_WIN32_IE_WIN10 = 0xA00,};
enum MACRO__WIN32_IE {_WIN32_IE = 2560,};
enum MACRO___GOT {__GOT_SECURE_LIB__ = 200411,};
enum MACRO___MINGW {__MINGW_USE_UNDERSCORE_PREFIX = 1,};
enum MACRO___MINGW32 {__MINGW32_MAJOR_VERSION = 3,__MINGW32_MINOR_VERSION = 11,};
enum MACRO___MINGW64 {__MINGW64_VERSION_MAJOR = 1,__MINGW64_VERSION_MINOR = 1,};
enum MACRO___MINGW_FPCLASS {__MINGW_FPCLASS_DEFINED = 1,};
enum MACRO___MINGW_HAVE {__MINGW_HAVE_ANSI_C99_PRINTF = 1,__MINGW_HAVE_WIDE_C99_PRINTF = 1,__MINGW_HAVE_ANSI_C99_SCANF = 1,__MINGW_HAVE_WIDE_C99_SCANF = 1,};
enum MACRO___MSVCRT {__MSVCRT_VERSION__ = 0x700,};
enum MACRO___STDC {__STDC_WANT_SECURE_LIB__ = 1,};
enum MACRO___STDC_SECURE {__STDC_SECURE_LIB__ = 200411,};
enum MACRO___USE {__USE_MINGW_OUTPUT_FORMAT_EMU = 1,};
typedef struct _MAILSLOT_CREATE_PARAMETERS MAILSLOT_CREATE_PARAMETERS;
typedef enum _MANDATORY_LEVEL MANDATORY_LEVEL;
typedef struct _MAT2 MAT2;
typedef enum _MEDIA_TYPE MEDIA_TYPE;
typedef struct _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;
typedef struct _MEMORY_FRAME_INFORMATION MEMORY_FRAME_INFORMATION;
typedef enum _MEMORY_INFORMATION_CLASS MEMORY_INFORMATION_CLASS;
typedef struct $A7B80FA0FB433B10BA587CFD95D0DEA0 MEMORY_SECTION_NAME;
typedef struct _MEMORY_WORKING_SET_LIST MEMORY_WORKING_SET_LIST;
typedef struct _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;
typedef struct _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;
typedef struct tagMETAFILEPICT METAFILEPICT;
typedef struct tagMETAHEADER METAHEADER;
typedef struct tagMETARECORD METARECORD;
typedef int (__stdcall *MFENUMPROC)(HDC hdc, HANDLETABLE *lpht, METARECORD *lpMR, int nObj, LPARAM param);
typedef ULONG MIX;
typedef enum _MI_VAD_TYPE MI_VAD_TYPE;
typedef enum _MMLISTS MMLISTS;
typedef struct _MMPTE MMPDE;
typedef struct _MMPFN_IDENTITY MMPFN_IDENTITY;
typedef struct _MMPTE MMPTE;
typedef struct _MMPTE_HARDWARE MMPTE_HARDWARE;
typedef struct _MMPTE_LIST MMPTE_LIST;
typedef struct _MMPTE_PROTOTYPE MMPTE_PROTOTYPE;
typedef struct _MMPTE_SOFTWARE MMPTE_SOFTWARE;
typedef struct _MMPTE_SUBSECTION MMPTE_SUBSECTION;
typedef struct _MMPTE_TRANSITION MMPTE_TRANSITION;
typedef enum _MODE MODE;
typedef struct $49CD7323AA35D3C00204BB7AA8563FFA MOVE_FILE_DATA;
typedef struct _MUTANT_BASIC_INFORMATION MUTANT_BASIC_INFORMATION;
typedef enum _MUTANT_INFORMATION_CLASS MUTANT_INFORMATION_CLASS;
typedef struct _MUTANT_OWNER_INFORMATION MUTANT_OWNER_INFORMATION;
typedef struct _NAMED_PIPE_CREATE_PARAMETERS NAMED_PIPE_CREATE_PARAMETERS;
typedef int (__stdcall *NEARPROC)();
typedef NEWTEXTMETRICA NEWTEXTMETRIC;
typedef struct tagNEWTEXTMETRICA NEWTEXTMETRICA;
typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;
typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;
typedef struct tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;
typedef struct tagNEWTEXTMETRICW NEWTEXTMETRICW;
typedef struct _NLSTABLEINFO NLSTABLEINFO;
typedef struct _NLS_FILE_HEADER NLS_FILE_HEADER;
typedef struct _devicemodeW *NPDEVMODEW;
typedef struct tagEXTLOGPEN *NPEXTLOGPEN;
typedef struct tagLOGPALETTE *NPLOGPALETTE;
typedef struct tagPOINT *NPPOINT;
typedef struct tagRECT *NPRECT;
typedef CHAR *NPSTR;
typedef struct $E5676767DC1847DF2F580E5BAA957339 NTFS_EXTENDED_VOLUME_DATA;
typedef struct $50092E5B8D5585E25A36D2D7AA7D11CF NTFS_FILE_RECORD_INPUT_BUFFER;
typedef struct $69F844921B1DE9364EE161E0CBB12E4A NTFS_FILE_RECORD_OUTPUT_BUFFER;
typedef struct _NTFS_STATISTICS NTFS_STATISTICS;
typedef struct $DCD76CF5A248684E95EEC87F56AA655C NTFS_VOLUME_DATA_BUFFER;
typedef int NTSTATUS;
typedef enum _NT_PRODUCT_TYPE NT_PRODUCT_TYPE;
typedef struct _NT_TIB NT_TIB;
typedef struct _NT_TIB32 NT_TIB32;
typedef struct _NT_TIB64 NT_TIB64;
typedef struct _NUMA_NODE_RELATIONSHIP NUMA_NODE_RELATIONSHIP;
typedef WCHAR *NWPSTR;
typedef struct _OBJECTID OBJECTID;
typedef struct _OBJECT_ALL_TYPES_INFORMATION OBJECT_ALL_TYPES_INFORMATION;
typedef struct _OBJECT_ATTRIBUTES OBJECT_ATTRIBUTES;
typedef struct _OBJECT_BASIC_INFORMATION OBJECT_BASIC_INFORMATION;
typedef struct _OBJECT_DIRECTORY_INFORMATION OBJECT_DIRECTORY_INFORMATION;
typedef struct _OBJECT_HANDLE_ATTRIBUTE_INFORMATION OBJECT_HANDLE_ATTRIBUTE_INFORMATION;
typedef enum _OBJECT_INFORMATION_CLASS OBJECT_INFORMATION_CLASS;
typedef struct _OBJECT_NAME_INFORMATION OBJECT_NAME_INFORMATION;
typedef struct _OBJECT_TYPE_INFORMATION OBJECT_TYPE_INFORMATION;
typedef struct _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;
typedef struct _OB_DUMP_CONTROL OB_DUMP_CONTROL;
typedef STRING OEM_STRING;
typedef int (__stdcall *OLDFONTENUMPROCA)(const LOGFONTA *, const TEXTMETRICA *, DWORD, LPARAM);
typedef int (__stdcall *OLDFONTENUMPROCW)(const LOGFONTW *, const TEXTMETRICW *, DWORD, LPARAM);
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef struct _OSVERSIONINFOA OSVERSIONINFOA;
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW OSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOW OSVERSIONINFOW;
typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;
typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;
typedef struct _ABC *PABC;
typedef struct _ABCFLOAT *PABCFLOAT;
typedef struct _ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE *PACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE *PACCESS_ALLOWED_OBJECT_ACE;
typedef struct _ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_ACE *PACCESS_DENIED_CALLBACK_ACE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE *PACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _ACCESS_DENIED_OBJECT_ACE *PACCESS_DENIED_OBJECT_ACE;
typedef DWORD *PACCESS_MASK;
typedef struct _ACCESS_REASONS *PACCESS_REASONS;
typedef PVOID PACCESS_TOKEN;
typedef struct _ACE *PACE;
typedef struct _ACE_HEADER *PACE_HEADER;
typedef struct _ACL *PACL;
typedef struct _ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;
typedef struct _ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;
typedef PVOID PACTIVATION_CONTEXT;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION *PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_DATA *PACTIVATION_CONTEXT_DATA;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX *PACTIVATION_CONTEXT_QUERY_INDEX;
typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
typedef struct _ACTIVATION_CONTEXT_STACK *PACTIVATION_CONTEXT_STACK;
typedef struct _ACTIVATION_CONTEXT_STACK_FRAMELIST *PACTIVATION_CONTEXT_STACK_FRAMELIST;
typedef struct _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;
typedef struct _PAGEDIR_INFORMATION PAGEDIR_INFORMATION;
typedef struct tagPALETTEENTRY PALETTEENTRY;
typedef struct _PALOBJ PALOBJ;
typedef struct _ALT_RESOURCE_MODULE *PALT_RESOURCE_MODULE;
typedef struct tagPANOSE PANOSE;
typedef PSTRING PANSI_STRING;
typedef struct _STRING32 *PANSI_STRING32;
typedef struct _STRING64 *PANSI_STRING64;
typedef struct _APPHELP_CACHE_SERVICE_LOOKUP *PAPPHELP_CACHE_SERVICE_LOOKUP;
typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;
typedef struct _PARTITION_INFORMATION_EX PARTITION_INFORMATION_EX;
typedef struct _PARTITION_INFORMATION_GPT PARTITION_INFORMATION_GPT;
typedef struct _PARTITION_INFORMATION_MBR PARTITION_INFORMATION_MBR;
typedef enum _PARTITION_STYLE PARTITION_STYLE;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION *PASSEMBLY_FILE_DETAILED_INFORMATION;
typedef struct _PATHDATA PATHDATA;
typedef struct _PATHOBJ PATHOBJ;
typedef struct _ATOM_BASIC_INFORMATION *PATOM_BASIC_INFORMATION;
typedef struct _ATOM_TABLE_INFORMATION *PATOM_TABLE_INFORMATION;
typedef LOGBRUSH PATTERN;
typedef enum _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;
typedef PAXESLISTA PAXESLIST;
typedef struct _AXESLISTA *PAXESLISTA;
typedef struct _AXESLISTW *PAXESLISTW;
typedef PAXISINFOA PAXISINFO;
typedef struct _AXISINFOA *PAXISINFOA;
typedef struct _AXISINFOW *PAXISINFOW;
typedef WORD *PBAD_TRACK_NUMBER;
typedef struct $E031005FF5EB1AE848321EA608394D98 *PBATTERY_REPORTING_SCALE;
typedef struct _BIN_COUNT *PBIN_COUNT;
typedef struct _BIN_RANGE *PBIN_RANGE;
typedef struct _BIN_RESULTS *PBIN_RESULTS;
typedef struct tagBITMAP *PBITMAP;
typedef struct tagBITMAPCOREHEADER *PBITMAPCOREHEADER;
typedef struct _BITMAPCOREINFO *PBITMAPCOREINFO;
typedef struct tagBITMAPFILEHEADER *PBITMAPFILEHEADER;
typedef struct tagBITMAPINFO *PBITMAPINFO;
typedef struct tagBITMAPINFOHEADER *PBITMAPINFOHEADER;
typedef struct $22BDD2D628B0B561C5A9CA42290FE551 *PBITMAPV4HEADER;
typedef struct $2B6042393D1A02E0AE9B16B44F784AC7 *PBITMAPV5HEADER;
typedef struct _BLENDFUNCTION *PBLENDFUNCTION;
typedef struct _BLENDOBJ *PBLENDOBJ;
typedef WINBOOL *PBOOL;
typedef unsigned __int8 *PBOOLEAN;
typedef struct _BOOT_ENTRY *PBOOT_ENTRY;
typedef struct _BOOT_OPTIONS *PBOOT_OPTIONS;
typedef enum _BUS_DATA_TYPE *PBUS_DATA_TYPE;
typedef BYTE *PBYTE;
typedef struct _CACHE_DESCRIPTOR *PCACHE_DESCRIPTOR;
typedef struct _CACHE_RELATIONSHIP *PCACHE_RELATIONSHIP;
typedef const ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef const ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef const ACTIVATION_CONTEXT_QUERY_INDEX *PCACTIVATION_CONTEXT_QUERY_INDEX;
typedef PSTRING PCANSI_STRING;
typedef const ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;
typedef const CHAR *PCCH;
typedef CHAR *PCH;
typedef CHAR *PCHAR;
typedef struct tagCHARSETINFO *PCHARSETINFO;
typedef const IMAGE_DELAYLOAD_DESCRIPTOR *PCIMAGE_DELAYLOAD_DESCRIPTOR;
typedef struct _CLIENT_DIED_MSG *PCLIENT_DIED_MSG;
typedef struct _CLIENT_ID *PCLIENT_ID;
typedef struct _CLIENT_ID32 *PCLIENT_ID32;
typedef struct _CLIENT_ID64 *PCLIENT_ID64;
typedef struct _CLIPLINE *PCLIPLINE;
typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA *PCM_DISK_GEOMETRY_DEVICE_DATA;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR *PCM_FULL_RESOURCE_DESCRIPTOR;
typedef struct _CM_INT13_DRIVE_PARAMETER *PCM_INT13_DRIVE_PARAMETER;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *PCM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PARTIAL_RESOURCE_LIST *PCM_PARTIAL_RESOURCE_LIST;
typedef struct _CM_RESOURCE_LIST *PCM_RESOURCE_LIST;
typedef struct _CM_ROM_BLOCK *PCM_ROM_BLOCK;
typedef const CHAR *PCNZCH;
typedef PCNZCH PCNZTCH;
typedef const WCHAR *PCNZWCH;
typedef const STRING *PCOEM_STRING;
typedef struct tagCOLORADJUSTMENT *PCOLORADJUSTMENT;
typedef struct _COLORINFO *PCOLORINFO;
typedef enum $5FB4B89D89D7F3E9E930012D26E1CC5E *PCOMPARTMENT_ID;
typedef struct _COMPATIBILITY_CONTEXT_ELEMENT *PCOMPATIBILITY_CONTEXT_ELEMENT;
typedef struct _COMPRESSED_DATA_INFO *PCOMPRESSED_DATA_INFO;
typedef CONTEXT *PCONTEXT;
typedef struct _CPTABLEINFO *PCPTABLEINFO;
typedef struct $65CC0CAF86DD981EE7F163A568277E42 *PCREATE_DISK;
typedef struct $77920709E0A698A97D5A3C5EADC77423 *PCREATE_DISK_GPT;
typedef struct $8E6D798953B4C2C52A2B1F6527ADC626 *PCREATE_DISK_MBR;
typedef CSHORT *PCSHORT;
typedef PVOID PCSR_API_MESSAGE;
typedef struct _CSR_CAPTURE_BUFFER *PCSR_CAPTURE_BUFFER;
typedef const CHAR *PCSTR;
typedef struct _CSTRING *PCSTRING;
typedef const char *PCSZ;
typedef LPCCH PCTCH;
typedef const struct _TEB_ACTIVE_FRAME *PCTEB_ACTIVE_FRAME;
typedef const struct _TEB_ACTIVE_FRAME_CONTEXT *PCTEB_ACTIVE_FRAME_CONTEXT;
typedef const struct _TEB_ACTIVE_FRAME_CONTEXT_EX *PCTEB_ACTIVE_FRAME_CONTEXT_EX;
typedef const struct _TEB_ACTIVE_FRAME_EX *PCTEB_ACTIVE_FRAME_EX;
typedef LPCSTR PCTSTR;
typedef const UCSCHAR *PCUCSCHAR;
typedef const UCSCHAR *PCUCSSTR;
typedef const UNICODE_STRING *PCUNICODE_STRING;
typedef PCNZCH PCUNZTCH;
typedef const WCHAR *PCUNZWCH;
typedef struct _CURDIR *PCURDIR;
typedef LPCSTR PCUTSTR;
typedef const UCSCHAR *PCUUCSCHAR;
typedef const UCSCHAR *PCUUCSSTR;
typedef const WCHAR *PCUWCHAR;
typedef const WCHAR *PCUWSTR;
typedef PCZZSTR PCUZZTSTR;
typedef const WCHAR *PCUZZWSTR;
typedef const WCHAR *PCWCH;
typedef const WCHAR *PCWCHAR;
typedef const WCHAR *PCWSTR;
typedef const PSTR *PCZPSTR;
typedef const PWSTR *PCZPWSTR;
typedef const CHAR *PCZZSTR;
typedef PCZZSTR PCZZTSTR;
typedef const WCHAR *PCZZWSTR;
typedef struct _DBGKM_CREATE_PROCESS *PDBGKM_CREATE_PROCESS;
typedef struct _DBGKM_CREATE_THREAD *PDBGKM_CREATE_THREAD;
typedef struct _DBGKM_EXCEPTION *PDBGKM_EXCEPTION;
typedef struct _DBGKM_EXIT_PROCESS *PDBGKM_EXIT_PROCESS;
typedef struct _DBGKM_EXIT_THREAD *PDBGKM_EXIT_THREAD;
typedef struct _DBGKM_LOAD_DLL *PDBGKM_LOAD_DLL;
typedef struct _DBGKM_MSG *PDBGKM_MSG;
typedef struct _DBGKM_UNLOAD_DLL *PDBGKM_UNLOAD_DLL;
typedef struct _DBGUI_WAIT_STATE_CHANGE *PDBGUI_WAIT_STATE_CHANGE;
typedef enum _DBG_STATE *PDBG_STATE;
typedef struct _DDNTCORECAPS *PDDNTCORECAPS;
typedef struct _DD_ADDATTACHEDSURFACEDATA *PDD_ADDATTACHEDSURFACEDATA;
typedef DWORD (__stdcall *PDD_ALPHABLT)(PDD_BLTDATA);
typedef struct _DD_ATTACHLIST *PDD_ATTACHLIST;
typedef struct _DD_BEGINMOCOMPFRAMEDATA *PDD_BEGINMOCOMPFRAMEDATA;
typedef struct _DD_BLTDATA *PDD_BLTDATA;
typedef struct DD_CALLBACKS *PDD_CALLBACKS;
typedef DWORD (__stdcall *PDD_CANCREATESURFACE)(PDD_CANCREATESURFACEDATA);
typedef struct _DD_CANCREATESURFACEDATA *PDD_CANCREATESURFACEDATA;
typedef struct _DD_CANCREATEVPORTDATA *PDD_CANCREATEVPORTDATA;
typedef DWORD (__stdcall *PDD_COLORCB_COLORCONTROL)(PDD_COLORCONTROLDATA);
typedef struct _DD_COLORCONTROLCALLBACKS *PDD_COLORCONTROLCALLBACKS;
typedef struct _DD_COLORCONTROLDATA *PDD_COLORCONTROLDATA;
typedef struct _DD_CREATEMOCOMPDATA *PDD_CREATEMOCOMPDATA;
typedef DWORD (__stdcall *PDD_CREATEPALETTE)(PDD_CREATEPALETTEDATA);
typedef struct _DD_CREATEPALETTEDATA *PDD_CREATEPALETTEDATA;
typedef DWORD (__stdcall *PDD_CREATESURFACE)(PDD_CREATESURFACEDATA);
typedef struct _DD_CREATESURFACEDATA *PDD_CREATESURFACEDATA;
typedef DWORD (__stdcall *PDD_CREATESURFACEEX)(PDD_CREATESURFACEEXDATA);
typedef struct _DD_CREATESURFACEEXDATA *PDD_CREATESURFACEEXDATA;
typedef struct _DD_CREATEVPORTDATA *PDD_CREATEVPORTDATA;
typedef struct _DD_D3DBUFCALLBACKS *PDD_D3DBUFCALLBACKS;
typedef DWORD (__stdcall *PDD_DESTROYDDLOCAL)(PDD_DESTROYDDLOCALDATA);
typedef struct _DD_DESTROYDDLOCALDATA *PDD_DESTROYDDLOCALDATA;
typedef DWORD (__stdcall *PDD_DESTROYDRIVER)(PDD_DESTROYDRIVERDATA);
typedef struct _DD_DESTROYDRIVERDATA *PDD_DESTROYDRIVERDATA;
typedef struct _DD_DESTROYMOCOMPDATA *PDD_DESTROYMOCOMPDATA;
typedef struct _DD_DESTROYPALETTEDATA *PDD_DESTROYPALETTEDATA;
typedef struct _DD_DESTROYSURFACEDATA *PDD_DESTROYSURFACEDATA;
typedef struct _DD_DESTROYVPORTDATA *PDD_DESTROYVPORTDATA;
typedef struct _DD_DIRECTDRAW_GLOBAL *PDD_DIRECTDRAW_GLOBAL;
typedef struct _DD_DIRECTDRAW_LOCAL *PDD_DIRECTDRAW_LOCAL;
typedef struct _DD_DRVSETCOLORKEYDATA *PDD_DRVSETCOLORKEYDATA;
typedef struct _DD_ENDMOCOMPFRAMEDATA *PDD_ENDMOCOMPFRAMEDATA;
typedef struct _DD_FLIPDATA *PDD_FLIPDATA;
typedef DWORD (__stdcall *PDD_FLIPTOGDISURFACE)(PDD_FLIPTOGDISURFACEDATA);
typedef struct _DD_FLIPTOGDISURFACEDATA *PDD_FLIPTOGDISURFACEDATA;
typedef struct _DD_FLIPVPORTDATA *PDD_FLIPVPORTDATA;
typedef DWORD (__stdcall *PDD_FREEDRIVERMEMORY)(PDD_FREEDRIVERMEMORYDATA);
typedef struct _DD_FREEDRIVERMEMORYDATA *PDD_FREEDRIVERMEMORYDATA;
typedef DWORD (__stdcall *PDD_GETAVAILDRIVERMEMORY)(PDD_GETAVAILDRIVERMEMORYDATA);
typedef struct _DD_GETAVAILDRIVERMEMORYDATA *PDD_GETAVAILDRIVERMEMORYDATA;
typedef struct _DD_GETBLTSTATUSDATA *PDD_GETBLTSTATUSDATA;
typedef DWORD (__stdcall *PDD_GETDRIVERINFO)(PDD_GETDRIVERINFODATA);
typedef struct _DD_GETDRIVERINFODATA *PDD_GETDRIVERINFODATA;
typedef DWORD (__stdcall *PDD_GETDRIVERSTATE)(PDD_GETDRIVERSTATEDATA);
typedef struct _DD_GETDRIVERSTATEDATA *PDD_GETDRIVERSTATEDATA;
typedef struct _DD_GETFLIPSTATUSDATA *PDD_GETFLIPSTATUSDATA;
typedef struct _DD_GETHEAPALIGNMENTDATA *PDD_GETHEAPALIGNMENTDATA;
typedef struct _DD_GETINTERNALMOCOMPDATA *PDD_GETINTERNALMOCOMPDATA;
typedef struct _DD_GETMOCOMPCOMPBUFFDATA *PDD_GETMOCOMPCOMPBUFFDATA;
typedef struct _DD_GETMOCOMPFORMATSDATA *PDD_GETMOCOMPFORMATSDATA;
typedef struct _DD_GETMOCOMPGUIDSDATA *PDD_GETMOCOMPGUIDSDATA;
typedef DWORD (__stdcall *PDD_GETSCANLINE)(PDD_GETSCANLINEDATA);
typedef struct _DD_GETSCANLINEDATA *PDD_GETSCANLINEDATA;
typedef struct _DD_GETVPORTBANDWIDTHDATA *PDD_GETVPORTBANDWIDTHDATA;
typedef struct _DD_GETVPORTCONNECTDATA *PDD_GETVPORTCONNECTDATA;
typedef struct _DD_GETVPORTFIELDDATA *PDD_GETVPORTFIELDDATA;
typedef struct _DD_GETVPORTFLIPSTATUSDATA *PDD_GETVPORTFLIPSTATUSDATA;
typedef struct _DD_GETVPORTINPUTFORMATDATA *PDD_GETVPORTINPUTFORMATDATA;
typedef struct _DD_GETVPORTLINEDATA *PDD_GETVPORTLINEDATA;
typedef struct _DD_GETVPORTOUTPUTFORMATDATA *PDD_GETVPORTOUTPUTFORMATDATA;
typedef struct _DD_GETVPORTSIGNALDATA *PDD_GETVPORTSIGNALDATA;
typedef struct _DD_HALINFO *PDD_HALINFO;
typedef struct _DD_HALINFO_V4 *PDD_HALINFO_V4;
typedef struct DD_KERNELCALLBACKS *PDD_KERNELCALLBACKS;
typedef DWORD (__stdcall *PDD_KERNELCB_SYNCSURFACE)(PDD_SYNCSURFACEDATA);
typedef DWORD (__stdcall *PDD_KERNELCB_SYNCVIDEOPORT)(PDD_SYNCVIDEOPORTDATA);
typedef struct _DD_LOCKDATA *PDD_LOCKDATA;
typedef DWORD (__stdcall *PDD_MAPMEMORY)(PDD_MAPMEMORYDATA);
typedef struct _DD_MAPMEMORYDATA *PDD_MAPMEMORYDATA;
typedef struct _DD_MISCELLANEOUS2CALLBACKS *PDD_MISCELLANEOUS2CALLBACKS;
typedef struct _DD_MISCELLANEOUSCALLBACKS *PDD_MISCELLANEOUSCALLBACKS;
typedef DWORD (__stdcall *PDD_MOCOMPCB_BEGINFRAME)(PDD_BEGINMOCOMPFRAMEDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_CREATE)(PDD_CREATEMOCOMPDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_DESTROY)(PDD_DESTROYMOCOMPDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_ENDFRAME)(PDD_ENDMOCOMPFRAMEDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_GETCOMPBUFFINFO)(PDD_GETMOCOMPCOMPBUFFDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_GETFORMATS)(PDD_GETMOCOMPFORMATSDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_GETGUIDS)(PDD_GETMOCOMPGUIDSDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_GETINTERNALINFO)(PDD_GETINTERNALMOCOMPDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_QUERYSTATUS)(PDD_QUERYMOCOMPSTATUSDATA);
typedef DWORD (__stdcall *PDD_MOCOMPCB_RENDER)(PDD_RENDERMOCOMPDATA);
typedef struct _DD_MORECAPS *PDD_MORECAPS;
typedef struct _DD_MORESURFACECAPS *PDD_MORESURFACECAPS;
typedef struct DD_MOTIONCOMPCALLBACKS *PDD_MOTIONCOMPCALLBACKS;
typedef struct $65DC3C988CA5686F8A6752C3BA087B10 *PDD_MOTIONCOMP_LOCAL;
typedef struct _DD_NONLOCALVIDMEMCAPS *PDD_NONLOCALVIDMEMCAPS;
typedef struct _DD_NTCALLBACKS *PDD_NTCALLBACKS;
typedef DWORD (__stdcall *PDD_PALCB_DESTROYPALETTE)(PDD_DESTROYPALETTEDATA);
typedef DWORD (__stdcall *PDD_PALCB_SETENTRIES)(PDD_SETENTRIESDATA);
typedef struct DD_PALETTECALLBACKS *PDD_PALETTECALLBACKS;
typedef struct _DD_PALETTE_GLOBAL *PDD_PALETTE_GLOBAL;
typedef struct _DD_QUERYMOCOMPSTATUSDATA *PDD_QUERYMOCOMPSTATUSDATA;
typedef struct _DD_RENDERMOCOMPDATA *PDD_RENDERMOCOMPDATA;
typedef struct _DD_SETCLIPLISTDATA *PDD_SETCLIPLISTDATA;
typedef DWORD (__stdcall *PDD_SETCOLORKEY)(PDD_DRVSETCOLORKEYDATA);
typedef struct _DD_SETCOLORKEYDATA *PDD_SETCOLORKEYDATA;
typedef struct _DD_SETENTRIESDATA *PDD_SETENTRIESDATA;
typedef DWORD (__stdcall *PDD_SETEXCLUSIVEMODE)(PDD_SETEXCLUSIVEMODEDATA);
typedef struct _DD_SETEXCLUSIVEMODEDATA *PDD_SETEXCLUSIVEMODEDATA;
typedef DWORD (__stdcall *PDD_SETMODE)(PDD_SETMODEDATA);
typedef struct _DD_SETMODEDATA *PDD_SETMODEDATA;
typedef struct _DD_SETOVERLAYPOSITIONDATA *PDD_SETOVERLAYPOSITIONDATA;
typedef struct _DD_SETPALETTEDATA *PDD_SETPALETTEDATA;
typedef struct _DD_STEREOMODE *PDD_STEREOMODE;
typedef struct DD_SURFACECALLBACKS *PDD_SURFACECALLBACKS;
typedef struct _DD_SURFACE_GLOBAL *PDD_SURFACE_GLOBAL;
typedef struct _DD_SURFACE_INT *PDD_SURFACE_INT;
typedef struct _DD_SURFACE_LOCAL *PDD_SURFACE_LOCAL;
typedef struct _DD_SURFACE_MORE *PDD_SURFACE_MORE;
typedef DWORD (__stdcall *PDD_SURFCB_ADDATTACHEDSURFACE)(PDD_ADDATTACHEDSURFACEDATA);
typedef DWORD (__stdcall *PDD_SURFCB_BLT)(PDD_BLTDATA);
typedef DWORD (__stdcall *PDD_SURFCB_DESTROYSURFACE)(PDD_DESTROYSURFACEDATA);
typedef DWORD (__stdcall *PDD_SURFCB_FLIP)(PDD_FLIPDATA);
typedef DWORD (__stdcall *PDD_SURFCB_GETBLTSTATUS)(PDD_GETBLTSTATUSDATA);
typedef DWORD (__stdcall *PDD_SURFCB_GETFLIPSTATUS)(PDD_GETFLIPSTATUSDATA);
typedef DWORD (__stdcall *PDD_SURFCB_LOCK)(PDD_LOCKDATA);
typedef DWORD (__stdcall *PDD_SURFCB_SETCLIPLIST)(PDD_SETCLIPLISTDATA);
typedef DWORD (__stdcall *PDD_SURFCB_SETCOLORKEY)(PDD_SETCOLORKEYDATA);
typedef DWORD (__stdcall *PDD_SURFCB_SETOVERLAYPOSITION)(PDD_SETOVERLAYPOSITIONDATA);
typedef DWORD (__stdcall *PDD_SURFCB_SETPALETTE)(PDD_SETPALETTEDATA);
typedef DWORD (__stdcall *PDD_SURFCB_UNLOCK)(PDD_UNLOCKDATA);
typedef DWORD (__stdcall *PDD_SURFCB_UPDATEOVERLAY)(PDD_UPDATEOVERLAYDATA);
typedef struct _DD_SYNCSURFACEDATA *PDD_SYNCSURFACEDATA;
typedef struct _DD_SYNCVIDEOPORTDATA *PDD_SYNCVIDEOPORTDATA;
typedef struct _DD_UNLOCKDATA *PDD_UNLOCKDATA;
typedef struct _DD_UPDATENONLOCALHEAPDATA *PDD_UPDATENONLOCALHEAPDATA;
typedef struct _DD_UPDATEOVERLAYDATA *PDD_UPDATEOVERLAYDATA;
typedef struct _DD_UPDATEVPORTDATA *PDD_UPDATEVPORTDATA;
typedef struct DD_VIDEOPORTCALLBACKS *PDD_VIDEOPORTCALLBACKS;
typedef struct _DD_VIDEOPORT_LOCAL *PDD_VIDEOPORT_LOCAL;
typedef DWORD (__stdcall *PDD_VPORTCB_CANCREATEVIDEOPORT)(PDD_CANCREATEVPORTDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_COLORCONTROL)(PDD_VPORTCOLORDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_CREATEVIDEOPORT)(PDD_CREATEVPORTDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_DESTROYVPORT)(PDD_DESTROYVPORTDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_FLIP)(PDD_FLIPVPORTDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETBANDWIDTH)(PDD_GETVPORTBANDWIDTHDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETFIELD)(PDD_GETVPORTFIELDDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETFLIPSTATUS)(PDD_GETVPORTFLIPSTATUSDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETINPUTFORMATS)(PDD_GETVPORTINPUTFORMATDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETLINE)(PDD_GETVPORTLINEDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETOUTPUTFORMATS)(PDD_GETVPORTOUTPUTFORMATDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETSIGNALSTATUS)(PDD_GETVPORTSIGNALDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_GETVPORTCONNECT)(PDD_GETVPORTCONNECTDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_UPDATE)(PDD_UPDATEVPORTDATA);
typedef DWORD (__stdcall *PDD_VPORTCB_WAITFORSYNC)(PDD_WAITFORVPORTSYNCDATA);
typedef struct _DD_VPORTCOLORDATA *PDD_VPORTCOLORDATA;
typedef DWORD (__stdcall *PDD_WAITFORVERTICALBLANK)(PDD_WAITFORVERTICALBLANKDATA);
typedef struct _DD_WAITFORVERTICALBLANKDATA *PDD_WAITFORVERTICALBLANKDATA;
typedef struct _DD_WAITFORVPORTSYNCDATA *PDD_WAITFORVPORTSYNCDATA;
typedef enum _DEBUGOBJECTINFOCLASS *PDEBUGOBJECTINFOCLASS;
typedef struct _DEBUG_OBJECT_KILL_PROCESS_ON_EXIT_INFORMATION *PDEBUG_OBJECT_KILL_PROCESS_ON_EXIT_INFORMATION;
typedef struct _DESCRIPTOR_TABLE_ENTRY *PDESCRIPTOR_TABLE_ENTRY;
typedef struct _DESIGNVECTOR *PDESIGNVECTOR;
typedef struct _DEVHTADJDATA *PDEVHTADJDATA;
typedef struct _DEVHTINFO *PDEVHTINFO;
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;
typedef struct _DEVINFO *PDEVINFO;
typedef DEVMODEA *PDEVMODE;
typedef struct _devicemodeA *PDEVMODEA;
typedef struct _devicemodeW *PDEVMODEW;
typedef struct tagDIBSECTION *PDIBSECTION;
typedef struct DiskQuotaUserInformation *PDISKQUOTA_USER_INFORMATION;
typedef struct _DISK_CACHE_INFORMATION *PDISK_CACHE_INFORMATION;
typedef struct _DISK_DETECTION_INFO *PDISK_DETECTION_INFO;
typedef struct _DISK_EXTENT *PDISK_EXTENT;
typedef struct _DISK_EX_INT13_INFO *PDISK_EX_INT13_INFO;
typedef struct _DISK_GEOMETRY *PDISK_GEOMETRY;
typedef struct _DISK_GEOMETRY_EX *PDISK_GEOMETRY_EX;
typedef struct _DISK_GROW_PARTITION *PDISK_GROW_PARTITION;
typedef struct _DISK_HISTOGRAM *PDISK_HISTOGRAM;
typedef struct _DISK_INT13_INFO *PDISK_INT13_INFO;
typedef struct _DISK_LOGGING *PDISK_LOGGING;
typedef struct _DISK_PARTITION_INFO *PDISK_PARTITION_INFO;
typedef struct _DISK_PERFORMANCE *PDISK_PERFORMANCE;
typedef struct _DISK_RECORD *PDISK_RECORD;
typedef DISPLAY_DEVICEA *PDISPLAY_DEVICE;
typedef struct _DISPLAY_DEVICEA *PDISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;
typedef BOOLEAN (__stdcall *PDLL_INIT_ROUTINE)(PVOID DllHandle, ULONG Reason, PCONTEXT Context);
typedef struct _DRH_APIBITMAPDATA *PDRH_APIBITMAPDATA;
typedef struct _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;
typedef struct _DRIVE_LAYOUT_INFORMATION_EX *PDRIVE_LAYOUT_INFORMATION_EX;
typedef struct _DRIVE_LAYOUT_INFORMATION_GPT *PDRIVE_LAYOUT_INFORMATION_GPT;
typedef struct _DRIVE_LAYOUT_INFORMATION_MBR *PDRIVE_LAYOUT_INFORMATION_MBR;
typedef struct tagDRVENABLEDATA *PDRVENABLEDATA;
typedef struct _DRVFN *PDRVFN;
typedef DWORD *PDWORD;
typedef unsigned int *PDWORD32;
typedef unsigned __int64 *PDWORD64;
typedef ULONGLONG *PDWORDLONG;
typedef ULONG_PTR *PDWORD_PTR;
typedef struct _PEB PEB;
typedef struct _PEB_FREE_BLOCK PEB_FREE_BLOCK;
typedef struct _PEB_LDR_DATA PEB_LDR_DATA;
typedef struct _EFI_DRIVER_ENTRY *PEFI_DRIVER_ENTRY;
typedef struct tagPELARRAY PELARRAY;
typedef struct $A4A1DF623BA0FBABE6621202D771B918 *PEMFINFO;
typedef struct tagEMR *PEMR;
typedef struct tagABORTPATH *PEMRABORTPATH;
typedef struct tagEMRALPHABLEND *PEMRALPHABLEND;
typedef struct tagEMRANGLEARC *PEMRANGLEARC;
typedef struct tagEMRARC *PEMRARC;
typedef struct tagEMRARC *PEMRARCTO;
typedef struct tagABORTPATH *PEMRBEGINPATH;
typedef struct tagEMRBITBLT *PEMRBITBLT;
typedef struct tagEMRARC *PEMRCHORD;
typedef struct tagABORTPATH *PEMRCLOSEFIGURE;
typedef struct tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;
typedef struct tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;
typedef struct tagEMRCREATECOLORSPACEW *PEMRCREATECOLORSPACEW;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;
typedef struct tagEMRCREATEPALETTE *PEMRCREATEPALETTE;
typedef struct tagEMRCREATEPEN *PEMRCREATEPEN;
typedef struct tagEMRSETCOLORSPACE *PEMRDELETECOLORSPACE;
typedef struct tagEMRSELECTOBJECT *PEMRDELETEOBJECT;
typedef struct tagEMRELLIPSE *PEMRELLIPSE;
typedef struct tagABORTPATH *PEMRENDPATH;
typedef struct tagEMREOF *PEMREOF;
typedef struct tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;
typedef struct tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;
typedef struct tagEMREXTCREATEPEN *PEMREXTCREATEPEN;
typedef struct tagEMREXTFLOODFILL *PEMREXTFLOODFILL;
typedef struct tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;
typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;
typedef struct tagEMRFILLPATH *PEMRFILLPATH;
typedef struct tagEMRFILLRGN *PEMRFILLRGN;
typedef struct tagABORTPATH *PEMRFLATTENPATH;
typedef struct tagEMRFORMAT *PEMRFORMAT;
typedef struct tagEMRFRAMERGN *PEMRFRAMERGN;
typedef struct tagEMRGDICOMMENT *PEMRGDICOMMENT;
typedef struct tagEMRGLSBOUNDEDRECORD *PEMRGLSBOUNDEDRECORD;
typedef struct tagEMRGLSRECORD *PEMRGLSRECORD;
typedef struct tagEMRGRADIENTFILL *PEMRGRADIENTFILL;
typedef struct tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;
typedef struct tagEMRINVERTRGN *PEMRINVERTRGN;
typedef struct tagEMRLINETO *PEMRLINETO;
typedef struct tagEMRMASKBLT *PEMRMASKBLT;
typedef struct tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;
typedef struct tagEMRLINETO *PEMRMOVETOEX;
typedef struct tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;
typedef struct tagEMRINVERTRGN *PEMRPAINTRGN;
typedef struct tagEMRARC *PEMRPIE;
typedef struct tagEMRPIXELFORMAT *PEMRPIXELFORMAT;
typedef struct tagEMRPLGBLT *PEMRPLGBLT;
typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIER;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYDRAW *PEMRPOLYDRAW;
typedef struct tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;
typedef struct tagEMRPOLYLINE *PEMRPOLYGON;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYGON16;
typedef struct tagEMRPOLYLINE *PEMRPOLYLINE;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINE16;
typedef struct tagEMRPOLYLINE *PEMRPOLYLINETO;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINETO16;
typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;
typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;
typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;
typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;
typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;
typedef struct tagABORTPATH *PEMRREALIZEPALETTE;
typedef struct tagEMRELLIPSE *PEMRRECTANGLE;
typedef struct tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;
typedef struct tagEMRRESTOREDC *PEMRRESTOREDC;
typedef struct tagEMRROUNDRECT *PEMRROUNDRECT;
typedef struct tagABORTPATH *PEMRSAVEDC;
typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;
typedef struct tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;
typedef struct tagEMRSETCOLORSPACE *PEMRSELECTCOLORSPACE;
typedef struct tagEMRSELECTOBJECT *PEMRSELECTOBJECT;
typedef struct tagEMRSELECTPALETTE *PEMRSELECTPALETTE;
typedef struct tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;
typedef struct tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETBKMODE;
typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;
typedef struct tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;
typedef struct tagEMRSETCOLORSPACE *PEMRSETCOLORSPACE;
typedef struct tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETICMMODE;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETLAYOUT;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;
typedef struct tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;
typedef struct tagABORTPATH *PEMRSETMETARGN;
typedef struct tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;
typedef struct tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;
typedef struct tagEMRSETPIXELV *PEMRSETPIXELV;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETROP2;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;
typedef struct tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;
typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;
typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;
typedef struct tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;
typedef struct tagEMRSTRETCHBLT *PEMRSTRETCHBLT;
typedef struct tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;
typedef struct tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;
typedef struct tagEMRFILLPATH *PEMRSTROKEPATH;
typedef struct tagEMRTEXT *PEMRTEXT;
typedef struct tagABORTPATH *PEMRWIDENPATH;
typedef struct _ENG_TIME_FIELDS *PENG_TIME_FIELDS;
typedef struct tagENHMETAHEADER *PENHMETAHEADER;
typedef PENUMLOGFONTEXDVA PENUMLOGFONTEXDV;
typedef struct tagENUMLOGFONTEXDVA *PENUMLOGFONTEXDVA;
typedef struct tagENUMLOGFONTEXDVW *PENUMLOGFONTEXDVW;
typedef PENUMTEXTMETRICA PENUMTEXTMETRIC;
typedef struct _ENUMTEXTMETRICA *PENUMTEXTMETRICA;
typedef struct _ENUMTEXTMETRICW *PENUMTEXTMETRICW;
typedef struct _PERBANDINFO PERBANDINFO;
typedef struct _PERF_BIN PERF_BIN;
typedef struct _ENG_EVENT *PEVENT;
typedef struct _EVENTLOGRECORD *PEVENTLOGRECORD;
typedef struct _EVENT_BASIC_INFORMATION *PEVENT_BASIC_INFORMATION;
typedef struct _EVENT_TRACE_HEADER *PEVENT_TRACE_HEADER;
typedef struct _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;
typedef struct _EXCEPTION_RECORD *PEXCEPTION_RECORD;
typedef struct _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;
typedef struct _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;
typedef struct _EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;
typedef EXCEPTION_ROUTINE *PEXCEPTION_ROUTINE;
typedef DWORD *PEXECUTION_STATE;
typedef struct _EXFAT_STATISTICS *PEXFAT_STATISTICS;
typedef EXTLOGFONTA *PEXTLOGFONT;
typedef struct tagEXTLOGFONTA *PEXTLOGFONTA;
typedef struct tagEXTLOGFONTW *PEXTLOGFONTW;
typedef struct tagEXTLOGPEN *PEXTLOGPEN;
typedef struct _FAT_STATISTICS *PFAT_STATISTICS;
typedef struct _FD_DEVICEMETRICS *PFD_DEVICEMETRICS;
typedef struct _FD_GLYPHATTR *PFD_GLYPHATTR;
typedef struct _FD_GLYPHSET *PFD_GLYPHSET;
typedef struct _FD_XFORM *PFD_XFORM;
typedef struct _FIBER *PFIBER;
typedef struct _FILEOFFSET_INFORMATION *PFILEOFFSET_INFORMATION;
typedef struct _FILESYSTEM_STATISTICS *PFILESYSTEM_STATISTICS;
typedef struct _FILETIME *PFILETIME;
typedef struct _FILE_ACCESS_INFORMATION *PFILE_ACCESS_INFORMATION;
typedef struct _FILE_ALLOCATION_INFORMATION *PFILE_ALLOCATION_INFORMATION;
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION *PFILE_ATTRIBUTE_TAG_INFORMATION;
typedef struct _FILE_BASIC_INFORMATION *PFILE_BASIC_INFORMATION;
typedef struct _FILE_BOTH_DIR_INFORMATION *PFILE_BOTH_DIR_INFORMATION;
typedef struct _FILE_COMPLETION_INFORMATION *PFILE_COMPLETION_INFORMATION;
typedef struct _FILE_COMPRESSION_INFORMATION *PFILE_COMPRESSION_INFORMATION;
typedef struct _FILE_DIRECTORY_INFORMATION *PFILE_DIRECTORY_INFORMATION;
typedef struct _FILE_DISPOSITION_INFORMATION *PFILE_DISPOSITION_INFORMATION;
typedef struct _FILE_EA_INFORMATION *PFILE_EA_INFORMATION;
typedef struct _FILE_END_OF_FILE_INFORMATION *PFILE_END_OF_FILE_INFORMATION;
typedef struct _FILE_FS_ATTRIBUTE_INFORMATION *PFILE_FS_ATTRIBUTE_INFORMATION;
typedef struct _FILE_FS_DEVICE_INFORMATION *PFILE_FS_DEVICE_INFORMATION;
typedef struct _FILE_FS_FULL_SIZE_INFORMATION *PFILE_FS_FULL_SIZE_INFORMATION;
typedef struct _FILE_FS_LABEL_INFORMATION *PFILE_FS_LABEL_INFORMATION;
typedef struct _FILE_FS_SIZE_INFORMATION *PFILE_FS_SIZE_INFORMATION;
typedef struct _FILE_FS_VOLUME_INFORMATION *PFILE_FS_VOLUME_INFORMATION;
typedef struct _FILE_FULL_DIR_INFORMATION *PFILE_FULL_DIR_INFORMATION;
typedef struct _FILE_FULL_EA_INFORMATION *PFILE_FULL_EA_INFORMATION;
typedef enum _FILE_INFORMATION_CLASS *PFILE_INFORMATION_CLASS;
typedef struct _FILE_INTERNAL_INFORMATION *PFILE_INTERNAL_INFORMATION;
typedef struct _FILE_IO_COMPLETION_INFORMATION *PFILE_IO_COMPLETION_INFORMATION;
typedef struct _FILE_LINK_INFORMATION *PFILE_LINK_INFORMATION;
typedef struct _FILE_MAILSLOT_QUERY_INFORMATION *PFILE_MAILSLOT_QUERY_INFORMATION;
typedef struct _FILE_MAILSLOT_SET_INFORMATION *PFILE_MAILSLOT_SET_INFORMATION;
typedef struct _FILE_NAME_INFORMATION *PFILE_NAME_INFORMATION;
typedef struct _FILE_NETWORK_OPEN_INFORMATION *PFILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;
typedef struct _FILE_PATH *PFILE_PATH;
typedef struct _FILE_PIPE_INFORMATION *PFILE_PIPE_INFORMATION;
typedef struct _FILE_PIPE_LOCAL_INFORMATION *PFILE_PIPE_LOCAL_INFORMATION;
typedef struct _FILE_PIPE_PEEK_BUFFER *PFILE_PIPE_PEEK_BUFFER;
typedef struct _FILE_PIPE_REMOTE_INFORMATION *PFILE_PIPE_REMOTE_INFORMATION;
typedef struct _FILE_PIPE_WAIT_FOR_BUFFER *PFILE_PIPE_WAIT_FOR_BUFFER;
typedef struct _FILE_POSITION_INFORMATION *PFILE_POSITION_INFORMATION;
typedef struct _FILE_QUOTA_INFORMATION *PFILE_QUOTA_INFORMATION;
typedef struct _FILE_RENAME_INFORMATION *PFILE_RENAME_INFORMATION;
typedef union _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;
typedef struct _FILE_STANDARD_INFORMATION *PFILE_STANDARD_INFORMATION;
typedef struct _FILE_STREAM_INFORMATION *PFILE_STREAM_INFORMATION;
typedef struct _FILE_TRACKING_INFORMATION *PFILE_TRACKING_INFORMATION;
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION *PFILE_VALID_DATA_LENGTH_INFORMATION;
typedef FIX *PFIX;
typedef FLOAT *PFLOAT;
typedef FLOAT128 *PFLOAT128;
typedef struct _FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;
typedef struct _FLOATOBJ *PFLOATOBJ;
typedef struct tagFLOATOBJ_XFORM *PFLOATOBJ_XFORM;
typedef union _FLOAT_LONG *PFLOAT_LONG;
typedef LONG_PTR (__stdcall *PFN)();
typedef NTSTATUS (__cdecl *PFNFTH)(struct _SYSTEM_FIRMWARE_TABLE_INFORMATION *FirmwareTableInformation);
typedef FN_DrvAccumulateD3DDirtyRect *PFN_DrvAccumulateD3DDirtyRect;
typedef FN_DrvAlphaBlend *PFN_DrvAlphaBlend;
typedef FN_DrvAssertMode *PFN_DrvAssertMode;
typedef FN_DrvAssociateSharedSurface *PFN_DrvAssociateSharedSurface;
typedef FN_DrvBitBlt *PFN_DrvBitBlt;
typedef FN_DrvCompletePDEV *PFN_DrvCompletePDEV;
typedef FN_DrvCopyBits *PFN_DrvCopyBits;
typedef FN_DrvCreateDeviceBitmap *PFN_DrvCreateDeviceBitmap;
typedef FN_DrvCreateDeviceBitmapEx *PFN_DrvCreateDeviceBitmapEx;
typedef FN_DrvDeleteDeviceBitmap *PFN_DrvDeleteDeviceBitmap;
typedef FN_DrvDeleteDeviceBitmapEx *PFN_DrvDeleteDeviceBitmapEx;
typedef FN_DrvDeriveSurface *PFN_DrvDeriveSurface;
typedef FN_DrvDescribePixelFormat *PFN_DrvDescribePixelFormat;
typedef FN_DrvDestroyFont *PFN_DrvDestroyFont;
typedef FN_DrvDisableDirectDraw *PFN_DrvDisableDirectDraw;
typedef FN_DrvDisableDriver *PFN_DrvDisableDriver;
typedef FN_DrvDisablePDEV *PFN_DrvDisablePDEV;
typedef FN_DrvDisableSurface *PFN_DrvDisableSurface;
typedef FN_DrvDitherColor *PFN_DrvDitherColor;
typedef FN_DrvDrawEscape *PFN_DrvDrawEscape;
typedef FN_DrvEnableDirectDraw *PFN_DrvEnableDirectDraw;
typedef FN_DrvEnableDriver *PFN_DrvEnableDriver;
typedef FN_DrvEnablePDEV *PFN_DrvEnablePDEV;
typedef FN_DrvEnableSurface *PFN_DrvEnableSurface;
typedef FN_DrvEndDoc *PFN_DrvEndDoc;
typedef FN_DrvEndDxInterop *PFN_DrvEndDxInterop;
typedef FN_DrvEscape *PFN_DrvEscape;
typedef FN_DrvFillPath *PFN_DrvFillPath;
typedef FN_DrvFontManagement *PFN_DrvFontManagement;
typedef FN_DrvFree *PFN_DrvFree;
typedef FN_DrvGetDirectDrawInfo *PFN_DrvGetDirectDrawInfo;
typedef FN_DrvGetGlyphMode *PFN_DrvGetGlyphMode;
typedef FN_DrvGetModes *PFN_DrvGetModes;
typedef FN_DrvGetTrueTypeFile *PFN_DrvGetTrueTypeFile;
typedef FN_DrvGradientFill *PFN_DrvGradientFill;
typedef FN_DrvIcmCheckBitmapBits *PFN_DrvIcmCheckBitmapBits;
typedef FN_DrvIcmCreateColorTransform *PFN_DrvIcmCreateColorTransform;
typedef FN_DrvIcmDeleteColorTransform *PFN_DrvIcmDeleteColorTransform;
typedef FN_DrvIcmSetDeviceGammaRamp *PFN_DrvIcmSetDeviceGammaRamp;
typedef FN_DrvLineTo *PFN_DrvLineTo;
typedef FN_DrvLoadFontFile *PFN_DrvLoadFontFile;
typedef FN_DrvLockDisplayArea *PFN_DrvLockDisplayArea;
typedef FN_DrvMovePanning *PFN_DrvMovePanning;
typedef FN_DrvMovePointer *PFN_DrvMovePointer;
typedef FN_DrvNextBand *PFN_DrvNextBand;
typedef FN_DrvNotify *PFN_DrvNotify;
typedef FN_DrvOffset *PFN_DrvOffset;
typedef FN_DrvPaint *PFN_DrvPaint;
typedef FN_DrvPlgBlt *PFN_DrvPlgBlt;
typedef FN_DrvQueryAdvanceWidths *PFN_DrvQueryAdvanceWidths;
typedef FN_DrvQueryDeviceSupport *PFN_DrvQueryDeviceSupport;
typedef FN_DrvQueryDriverInfo *PFN_DrvQueryDriverInfo;
typedef FN_DrvQueryFont *PFN_DrvQueryFont;
typedef FN_DrvQueryFontCaps *PFN_DrvQueryFontCaps;
typedef FN_DrvQueryFontData *PFN_DrvQueryFontData;
typedef FN_DrvQueryFontFile *PFN_DrvQueryFontFile;
typedef FN_DrvQueryFontTree *PFN_DrvQueryFontTree;
typedef FN_DrvQueryGlyphAttrs *PFN_DrvQueryGlyphAttrs;
typedef FN_DrvQueryPerBandInfo *PFN_DrvQueryPerBandInfo;
typedef FN_DrvQuerySpoolType *PFN_DrvQuerySpoolType;
typedef FN_DrvQueryTrueTypeOutline *PFN_DrvQueryTrueTypeOutline;
typedef FN_DrvQueryTrueTypeSection *PFN_DrvQueryTrueTypeSection;
typedef FN_DrvQueryTrueTypeTable *PFN_DrvQueryTrueTypeTable;
typedef FN_DrvRealizeBrush *PFN_DrvRealizeBrush;
typedef FN_DrvRenderHint *PFN_DrvRenderHint;
typedef FN_DrvResetDevice *PFN_DrvResetDevice;
typedef FN_DrvResetPDEV *PFN_DrvResetPDEV;
typedef FN_DrvSaveScreenBits *PFN_DrvSaveScreenBits;
typedef FN_DrvSendPage *PFN_DrvSendPage;
typedef FN_DrvSetPalette *PFN_DrvSetPalette;
typedef FN_DrvSetPixelFormat *PFN_DrvSetPixelFormat;
typedef FN_DrvSetPointerShape *PFN_DrvSetPointerShape;
typedef FN_DrvStartBanding *PFN_DrvStartBanding;
typedef FN_DrvStartDoc *PFN_DrvStartDoc;
typedef FN_DrvStartDxInterop *PFN_DrvStartDxInterop;
typedef FN_DrvStartPage *PFN_DrvStartPage;
typedef FN_DrvStretchBlt *PFN_DrvStretchBlt;
typedef FN_DrvStretchBltROP *PFN_DrvStretchBltROP;
typedef FN_DrvStrokeAndFillPath *PFN_DrvStrokeAndFillPath;
typedef FN_DrvStrokePath *PFN_DrvStrokePath;
typedef FN_DrvSwapBuffers *PFN_DrvSwapBuffers;
typedef FN_DrvSynchronize *PFN_DrvSynchronize;
typedef FN_DrvSynchronizeRedirectionBitmaps *PFN_DrvSynchronizeRedirectionBitmaps;
typedef FN_DrvSynchronizeSurface *PFN_DrvSynchronizeSurface;
typedef FN_DrvTextOut *PFN_DrvTextOut;
typedef FN_DrvTransparentBlt *PFN_DrvTransparentBlt;
typedef FN_DrvUnloadFontFile *PFN_DrvUnloadFontFile;
typedef FN_DrvUnlockDisplayArea *PFN_DrvUnlockDisplayArea;
typedef FN_EngCombineRgn *PFN_EngCombineRgn;
typedef FN_EngCopyRgn *PFN_EngCopyRgn;
typedef FN_EngCreateRectRgn *PFN_EngCreateRectRgn;
typedef FN_EngDeleteRgn *PFN_EngDeleteRgn;
typedef FN_EngIntersectRgn *PFN_EngIntersectRgn;
typedef FN_EngSubtractRgn *PFN_EngSubtractRgn;
typedef FN_EngUnionRgn *PFN_EngUnionRgn;
typedef FN_EngXorRgn *PFN_EngXorRgn;
typedef struct _FONTINFO *PFONTINFO;
typedef struct tagFONTSIGNATURE *PFONTSIGNATURE;
typedef struct _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;
typedef struct _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;
typedef struct _FPO_DATA *PFPO_DATA;
typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER *PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER *PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
typedef enum _FSINFOCLASS *PFS_INFORMATION_CLASS;
typedef struct _GAMMARAMP *PGAMMARAMP;
typedef struct _GDIINFO *PGDIINFO;
typedef struct _GDI_TEB_BATCH *PGDI_TEB_BATCH;
typedef struct _GENERATE_NAME_CONTEXT *PGENERATE_NAME_CONTEXT;
typedef struct _GENERIC_MAPPING *PGENERIC_MAPPING;
typedef struct _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;
typedef struct _GLYPHPOS *PGLYPHPOS;
typedef struct tagGLYPHSET *PGLYPHSET;
typedef struct _GRADIENT_RECT *PGRADIENT_RECT;
typedef struct _GRADIENT_TRIANGLE *PGRADIENT_TRIANGLE;
typedef struct _GROUP_AFFINITY *PGROUP_AFFINITY;
typedef struct _GROUP_RELATIONSHIP *PGROUP_RELATIONSHIP;
typedef __int16 *PHALF_PTR;
typedef void **PHANDLE;
typedef struct tagHANDLETABLE *PHANDLETABLE;
typedef struct _HARDERROR_MSG *PHARDERROR_MSG;
typedef enum _HARDERROR_RESPONSE *PHARDERROR_RESPONSE;
typedef enum _HARDERROR_RESPONSE_OPTION *PHARDERROR_RESPONSE_OPTION;
typedef struct _HARDWARE_PTE_X86 *PHARDWARE_PTE_X86;
typedef NTSTATUS (__stdcall *PHEAP_ENUMERATION_ROUTINE)(PVOID HeapHandle, PVOID UserParam);
typedef struct _HEAP_LOCK *PHEAP_LOCK;
typedef HGLYPH *PHGLYPH;
typedef struct _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;
typedef HKEY *PHKEY;
typedef LARGE_INTEGER PHYSICAL_ADDRESS;
typedef struct _IFIEXTRA *PIFIEXTRA;
typedef struct _IFIMETRICS *PIFIMETRICS;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;
typedef union _IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;
typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF *PIMAGE_AUX_SYMBOL_TOKEN_DEF;
typedef struct _IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;
typedef struct _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;
typedef struct IMAGE_COR20_HEADER *PIMAGE_COR20_HEADER;
typedef struct _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;
typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR *PIMAGE_DELAYLOAD_DESCRIPTOR;
typedef struct _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;
typedef struct _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;
typedef struct _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_LINENUMBER *PIMAGE_LINENUMBER;
typedef PIMAGE_LOAD_CONFIG_DIRECTORY32 PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY32 *PIMAGE_LOAD_CONFIG_DIRECTORY32;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY64 *PIMAGE_LOAD_CONFIG_DIRECTORY64;
typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;
typedef struct _IMAGE_NT_HEADERS32 *PIMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;
typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;
typedef struct _IMAGE_OPTIONAL_HEADER32 *PIMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;
typedef struct _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;
typedef struct _IMAGE_RELOCATION *PIMAGE_RELOCATION;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _IMAGE_SYMBOL *PIMAGE_SYMBOL;
typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;
typedef struct _IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;
typedef struct _IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;
typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(PVOID DllHandle, DWORD Reason, PVOID Reserved);
typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;
typedef struct _IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;
typedef struct _IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;
typedef struct _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;
typedef struct in6_addr *PIN6_ADDR;
typedef struct _INITIAL_PEB *PINITIAL_PEB;
typedef struct _INITIAL_TEB *PINITIAL_TEB;
typedef int *PINT;
typedef signed __int16 *PINT16;
typedef int *PINT32;
typedef __int64 *PINT64;
typedef signed __int8 *PINT8;
typedef enum _INTERFACE_TYPE *PINTERFACE_TYPE;
typedef int *PINT_PTR;
typedef struct in_addr *PIN_ADDR;
typedef void (__stdcall *PIO_APC_ROUTINE)(PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG Reserved);
typedef struct _IO_COMPLETION_BASIC_INFORMATION *PIO_COMPLETION_BASIC_INFORMATION;
typedef struct _IO_COUNTERS *PIO_COUNTERS;
typedef struct _IO_ERROR_LOG_MESSAGE *PIO_ERROR_LOG_MESSAGE;
typedef struct _IO_ERROR_LOG_PACKET *PIO_ERROR_LOG_PACKET;
typedef struct _IO_STATUS_BLOCK *PIO_STATUS_BLOCK;
typedef struct _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;
typedef struct _SID *PISID;
typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST *PJOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS *PJOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_JOBSET_INFORMATION *PJOBOBJECT_JOBSET_INFORMATION;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _JOB_SET_ARRAY *PJOB_SET_ARRAY;
typedef KAFFINITY *PKAFFINITY;
typedef struct _KD_SYMBOLS_INFO *PKD_SYMBOLS_INFO;
typedef struct _KERNEL_USER_TIMES *PKERNEL_USER_TIMES;
typedef struct _KEY_BASIC_INFORMATION *PKEY_BASIC_INFORMATION;
typedef struct _KEY_CONTROL_FLAGS_INFORMATION *PKEY_CONTROL_FLAGS_INFORMATION;
typedef struct _KEY_FULL_INFORMATION *PKEY_FULL_INFORMATION;
typedef struct _KEY_HANDLE_TAGS_INFORMATION *PKEY_HANDLE_TAGS_INFORMATION;
typedef struct _KEY_NAME_INFORMATION *PKEY_NAME_INFORMATION;
typedef struct _KEY_NODE_INFORMATION *PKEY_NODE_INFORMATION;
typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION *PKEY_SET_VIRTUALIZATION_INFORMATION;
typedef struct _KEY_USER_FLAGS_INFORMATION *PKEY_USER_FLAGS_INFORMATION;
typedef struct _KEY_VALUE_BASIC_INFORMATION *PKEY_VALUE_BASIC_INFORMATION;
typedef struct _KEY_VALUE_ENTRY *PKEY_VALUE_ENTRY;
typedef struct _KEY_VALUE_FULL_INFORMATION *PKEY_VALUE_FULL_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION *PKEY_VALUE_PARTIAL_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
typedef struct _KEY_VIRTUALIZATION_INFORMATION *PKEY_VIRTUALIZATION_INFORMATION;
typedef struct _KEY_WOW64_FLAGS_INFORMATION *PKEY_WOW64_FLAGS_INFORMATION;
typedef struct _KEY_WRITE_TIME_INFORMATION *PKEY_WRITE_TIME_INFORMATION;
typedef void (__stdcall *PKNORMAL_ROUTINE)(PVOID NormalContext, PVOID SystemArgument1, PVOID SystemArgument2);
typedef enum _KPROCESS_STATE *PKPROCESS_STATE;
typedef struct _KSYSTEM_TIME *PKSYSTEM_TIME;
typedef enum _KTHREAD_STATE *PKTHREAD_STATE;
typedef struct _KUSER_SHARED_DATA *PKUSER_SHARED_DATA;
typedef union _LARGE_INTEGER *PLARGE_INTEGER;
typedef enum _LATENCY_TIME *PLATENCY_TIME;
typedef struct tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;
typedef DWORD *PLCID;
typedef void (__stdcall *PLDR_CALLBACK)(PVOID CallbackContext, PCHAR Name);
typedef struct _LDR_DATA_TABLE_ENTRY *PLDR_DATA_TABLE_ENTRY;
typedef void (__stdcall *PLDR_DLL_LOADED_NOTIFICATION_CALLBACK)(BOOLEAN Type, struct _LDR_DLL_LOADED_NOTIFICATION_DATA *Data);
typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA *PLDR_DLL_LOADED_NOTIFICATION_DATA;
typedef struct _LDR_DLL_LOADED_NOTIFICATION_ENTRY *PLDR_DLL_LOADED_NOTIFICATION_ENTRY;
typedef LDR_ENUM_CALLBACK *PLDR_ENUM_CALLBACK;
typedef struct _LDR_ENUM_RESOURCE_INFO *PLDR_ENUM_RESOURCE_INFO;
typedef LDR_MANIFEST_PROBER_ROUTINE *PLDR_MANIFEST_PROBER_ROUTINE;
typedef struct _LDR_RESOURCE_INFO *PLDR_RESOURCE_INFO;
typedef struct _LDT_ENTRY *PLDT_ENTRY;
typedef struct _LIGATURE *PLIGATURE;
typedef struct _LINEATTRS *PLINEATTRS;
typedef struct _LIST_ENTRY *PLIST_ENTRY;
typedef struct LIST_ENTRY32 *PLIST_ENTRY32;
typedef struct LIST_ENTRY64 *PLIST_ENTRY64;
typedef struct _LOAD_IMPORTS *PLOAD_IMPORTS;
typedef struct tagLOCALESIGNATURE *PLOCALESIGNATURE;
typedef struct tagLOGBRUSH *PLOGBRUSH;
typedef struct tagLOGBRUSH32 *PLOGBRUSH32;
typedef LOGFONTA *PLOGFONT;
typedef struct tagLOGFONTA *PLOGFONTA;
typedef struct tagLOGFONTW *PLOGFONTW;
typedef struct tagLOGPALETTE *PLOGPALETTE;
typedef struct tagLOGPEN *PLOGPEN;
typedef LONG *PLONG;
typedef int *PLONG32;
typedef __int64 *PLONG64;
typedef __int64 *PLONGLONG;
typedef int *PLONG_PTR;
typedef enum _PLUGPLAY_BUS_CLASS PLUGPLAY_BUS_CLASS;
typedef struct _PLUGPLAY_BUS_INSTANCE PLUGPLAY_BUS_INSTANCE;
typedef struct _PLUGPLAY_BUS_TYPE PLUGPLAY_BUS_TYPE;
typedef enum _PLUGPLAY_CONTROL_CLASS PLUGPLAY_CONTROL_CLASS;
typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA PLUGPLAY_CONTROL_DEPTH_DATA;
typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
typedef struct _PLUGPLAY_CONTROL_ENUMERATE_DEVICE_DATA PLUGPLAY_CONTROL_ENUMERATE_DEVICE_DATA;
typedef struct _PLUGPLAY_CONTROL_INTERFACE_DEVICE_LIST_DATA PLUGPLAY_CONTROL_INTERFACE_DEVICE_LIST_DATA;
typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA PLUGPLAY_CONTROL_PROPERTY_DATA;
typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
typedef struct _PLUGPLAY_CONTROL_RESET_DEVICE_DATA PLUGPLAY_CONTROL_RESET_DEVICE_DATA;
typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
typedef struct _PLUGPLAY_CONTOL_STATUS_DATA PLUGPLAY_CONTROL_STATUS_DATA;
typedef struct _PLUGPLAY_EVENT_BLOCK PLUGPLAY_EVENT_BLOCK;
typedef enum _PLUGPLAY_EVENT_CATEGORY PLUGPLAY_EVENT_CATEGORY;
typedef enum _PLUGPLAY_VIRTUAL_BUS_TYPE PLUGPLAY_VIRTUAL_BUS_TYPE;
typedef struct _LUID *PLUID;
typedef struct _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
typedef struct _MAILSLOT_CREATE_PARAMETERS *PMAILSLOT_CREATE_PARAMETERS;
typedef enum _MANDATORY_LEVEL *PMANDATORY_LEVEL;
typedef enum _MEDIA_TYPE *PMEDIA_TYPE;
typedef struct _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;
typedef struct _MEMORY_FRAME_INFORMATION *PMEMORY_FRAME_INFORMATION;
typedef struct $A7B80FA0FB433B10BA587CFD95D0DEA0 *PMEMORY_SECTION_NAME;
typedef struct _MEMORY_WORKING_SET_LIST *PMEMORY_WORKING_SET_LIST;
typedef struct _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;
typedef struct _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;
typedef struct tagMETAHEADER *PMETAHEADER;
typedef struct tagMETARECORD *PMETARECORD;
typedef enum _MI_VAD_TYPE *PMI_VAD_TYPE;
typedef struct _MMPTE *PMMPDE;
typedef struct _MMPFN_IDENTITY *PMMPFN_IDENTITY;
typedef struct _MMPTE *PMMPTE;
typedef struct _MMPTE_HARDWARE *PMMPTE_HARDWARE;
typedef struct $49CD7323AA35D3C00204BB7AA8563FFA *PMOVE_FILE_DATA;
typedef struct _MUTANT_BASIC_INFORMATION *PMUTANT_BASIC_INFORMATION;
typedef struct _MUTANT_OWNER_INFORMATION *PMUTANT_OWNER_INFORMATION;
typedef struct _NAMED_PIPE_CREATE_PARAMETERS *PNAMED_PIPE_CREATE_PARAMETERS;
typedef NEWTEXTMETRICA *PNEWTEXTMETRIC;
typedef struct tagNEWTEXTMETRICA *PNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICW *PNEWTEXTMETRICW;
typedef struct _NLSTABLEINFO *PNLSTABLEINFO;
typedef struct _NLS_FILE_HEADER *PNLS_FILE_HEADER;
typedef enum _PNP_DEVNODE_STATE PNP_DEVNODE_STATE;
typedef enum _PNP_VETO_TYPE PNP_VETO_TYPE;
typedef struct $E5676767DC1847DF2F580E5BAA957339 *PNTFS_EXTENDED_VOLUME_DATA;
typedef struct $50092E5B8D5585E25A36D2D7AA7D11CF *PNTFS_FILE_RECORD_INPUT_BUFFER;
typedef struct $69F844921B1DE9364EE161E0CBB12E4A *PNTFS_FILE_RECORD_OUTPUT_BUFFER;
typedef struct _NTFS_STATISTICS *PNTFS_STATISTICS;
typedef struct $DCD76CF5A248684E95EEC87F56AA655C *PNTFS_VOLUME_DATA_BUFFER;
typedef int *PNTSTATUS;
typedef enum _NT_PRODUCT_TYPE *PNT_PRODUCT_TYPE;
typedef struct _NT_TIB *PNT_TIB;
typedef struct _NT_TIB32 *PNT_TIB32;
typedef struct _NT_TIB64 *PNT_TIB64;
typedef struct _NUMA_NODE_RELATIONSHIP *PNUMA_NODE_RELATIONSHIP;
typedef CHAR *PNZCH;
typedef PNZCH PNZTCH;
typedef WCHAR *PNZWCH;
typedef struct _OBJECT_ALL_TYPES_INFORMATION *POBJECT_ALL_TYPES_INFORMATION;
typedef struct _OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;
typedef struct _OBJECT_BASIC_INFORMATION *POBJECT_BASIC_INFORMATION;
typedef struct _OBJECT_DIRECTORY_INFORMATION *POBJECT_DIRECTORY_INFORMATION;
typedef struct _OBJECT_HANDLE_ATTRIBUTE_INFORMATION *POBJECT_HANDLE_ATTRIBUTE_INFORMATION;
typedef struct _OBJECT_NAME_INFORMATION *POBJECT_NAME_INFORMATION;
typedef struct _OBJECT_TYPE_INFORMATION *POBJECT_TYPE_INFORMATION;
typedef struct _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;
typedef struct _OB_DUMP_CONTROL *POB_DUMP_CONTROL;
typedef PSTRING POEM_STRING;
typedef struct tagPOINT POINT;
typedef struct _POINTE POINTE;
typedef unsigned int POINTER_64_INT;
typedef struct _POINTFIX POINTFIX;
typedef struct _POINTFLOAT POINTFLOAT;
typedef struct tagPOINTFX POINTFX;
typedef struct _POINTL POINTL;
typedef struct _POINTQF POINTQF;
typedef struct tagPOINTS POINTS;
typedef POLYTEXTA POLYTEXT;
typedef struct _POLYTEXTA POLYTEXTA;
typedef struct _POLYTEXTW POLYTEXTW;
typedef struct _POOLED_USAGE_AND_LIMITS POOLED_USAGE_AND_LIMITS;
typedef enum _POOL_TYPE POOL_TYPE;
typedef enum _PORT_INFORMATION_CLASS PORT_INFORMATION_CLASS;
typedef struct _PORT_MESSAGE PORT_MESSAGE;
typedef struct _PORT_VIEW PORT_VIEW;
typedef OSVERSIONINFOA *POSVERSIONINFO;
typedef struct _OSVERSIONINFOA *POSVERSIONINFOA;
typedef OSVERSIONINFOEXA *POSVERSIONINFOEX;
typedef struct _OSVERSIONINFOEXA *POSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW *POSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOW *POSVERSIONINFOW;
typedef OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;
typedef struct _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;
typedef enum $0FC989869F227A36D749990E523E5F04 POWER_ACTION;
typedef struct _POWER_ACTION_POLICY POWER_ACTION_POLICY;
typedef enum _POWER_INFORMATION_LEVEL POWER_INFORMATION_LEVEL;
typedef struct _PAGEDIR_INFORMATION *PPAGEDIR_INFORMATION;
typedef struct tagPALETTEENTRY *PPALETTEENTRY;
typedef struct _PARTITION_INFORMATION *PPARTITION_INFORMATION;
typedef struct _PATHDATA *PPATHDATA;
typedef LOGBRUSH *PPATTERN;
typedef struct _PEB *PPEB;
typedef void (__stdcall *PPEBLOCKROUTINE)(PVOID PebLock);
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;
typedef struct _PEB_LDR_DATA *PPEB_LDR_DATA;
typedef struct tagPELARRAY *PPELARRAY;
typedef struct _PERBANDINFO *PPERBANDINFO;
typedef struct _PERF_BIN *PPERF_BIN;
typedef LARGE_INTEGER *PPHYSICAL_ADDRESS;
typedef struct tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;
typedef enum _PLUGPLAY_BUS_CLASS *PPLUGPLAY_BUS_CLASS;
typedef struct _PLUGPLAY_BUS_INSTANCE *PPLUGPLAY_BUS_INSTANCE;
typedef struct _PLUGPLAY_BUS_TYPE *PPLUGPLAY_BUS_TYPE;
typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA *PPLUGPLAY_CONTROL_DEPTH_DATA;
typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA *PPLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
typedef struct _PLUGPLAY_CONTROL_ENUMERATE_DEVICE_DATA *PPLUGPLAY_CONTROL_ENUMERATE_DEVICE_DATA;
typedef struct _PLUGPLAY_CONTROL_INTERFACE_DEVICE_LIST_DATA *PPLUGPLAY_CONTROL_INTERFACE_DEVICE_LIST_DATA;
typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA *PPLUGPLAY_CONTROL_PROPERTY_DATA;
typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA *PPLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
typedef struct _PLUGPLAY_CONTROL_RESET_DEVICE_DATA *PPLUGPLAY_CONTROL_RESET_DEVICE_DATA;
typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA *PPLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
typedef struct _PLUGPLAY_CONTOL_STATUS_DATA *PPLUGPLAY_CONTROL_STATUS_DATA;
typedef struct _PLUGPLAY_EVENT_BLOCK *PPLUGPLAY_EVENT_BLOCK;
typedef enum _PLUGPLAY_VIRTUAL_BUS_TYPE *PPLUGPLAY_VIRTUAL_BUS_TYPE;
typedef PVOID PPMemoryAllocator;
typedef enum _PNP_VETO_TYPE *PPNP_VETO_TYPE;
typedef struct tagPOINT *PPOINT;
typedef struct _POINTE *PPOINTE;
typedef struct _POINTFIX *PPOINTFIX;
typedef struct _POINTFLOAT *PPOINTFLOAT;
typedef struct _POINTL *PPOINTL;
typedef struct _POINTQF *PPOINTQF;
typedef struct tagPOINTS *PPOINTS;
typedef POLYTEXTA *PPOLYTEXT;
typedef struct _POLYTEXTA *PPOLYTEXTA;
typedef struct _POLYTEXTW *PPOLYTEXTW;
typedef struct _POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;
typedef struct _PORT_MESSAGE *PPORT_MESSAGE;
typedef struct _PORT_VIEW *PPORT_VIEW;
typedef NTSTATUS (__stdcall *PPOST_PROCESS_INIT_ROUTINE)();
typedef enum $0FC989869F227A36D749990E523E5F04 *PPOWER_ACTION;
typedef struct _POWER_ACTION_POLICY *PPOWER_ACTION_POLICY;
typedef struct _PREFIX_TABLE *PPREFIX_TABLE;
typedef struct _PREFIX_TABLE_ENTRY *PPREFIX_TABLE_ENTRY;
typedef struct _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;
typedef struct _PRIVILEGE_SET *PPRIVILEGE_SET;
typedef struct _PROCESSOR_GROUP_INFO *PPROCESSOR_GROUP_INFO;
typedef struct _PROCESSOR_NUMBER *PPROCESSOR_NUMBER;
typedef struct _PROCESSOR_POWER_INFORMATION *PPROCESSOR_POWER_INFORMATION;
typedef struct _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESSOR_RELATIONSHIP *PPROCESSOR_RELATIONSHIP;
typedef struct _PROCESS_ACCESS_TOKEN *PPROCESS_ACCESS_TOKEN;
typedef struct _PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;
typedef struct _PROCESS_DEVICEMAP_INFORMATION *PPROCESS_DEVICEMAP_INFORMATION;
typedef struct _PROCESS_FOREGROUND_BACKGROUND *PPROCESS_FOREGROUND_BACKGROUND;
typedef struct _PROCESS_PRIORITY_CLASS *PPROCESS_PRIORITY_CLASS;
typedef struct _PROCESS_SESSION_INFORMATION *PPROCESS_SESSION_INFORMATION;
typedef enum _PROFILE_STATUS *PPROFILE_STATUS;
typedef PTRDIFF *PPTRDIFF;
typedef enum _PP_NPAGED_LOOKASIDE_NUMBER PP_NPAGED_LOOKASIDE_NUMBER;
typedef struct _QUOTA_LIMITS *PQUOTA_LIMITS;
typedef struct _QUOTA_LIMITS_EX *PQUOTA_LIMITS_EX;
typedef union _RATE_QUOTA_LIMIT *PRATE_QUOTA_LIMIT;
typedef struct _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;
typedef struct tagRECT *PRECT;
typedef struct _RECTFX *PRECTFX;
typedef struct _RECTL *PRECTL;
typedef struct _PREFIX_TABLE PREFIX_TABLE;
typedef struct _PREFIX_TABLE_ENTRY PREFIX_TABLE_ENTRY;
typedef struct _REMOTE_PORT_VIEW *PREMOTE_PORT_VIEW;
typedef struct _REPARSE_DATA_BUFFER *PREPARSE_DATA_BUFFER;
typedef struct _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;
typedef struct _REPARSE_POINT_INFORMATION *PREPARSE_POINT_INFORMATION;
typedef struct RETRIEVAL_POINTERS_BUFFER *PRETRIEVAL_POINTERS_BUFFER;
typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;
typedef struct _RGNDATA *PRGNDATA;
typedef struct _RGNDATAHEADER *PRGNDATAHEADER;
typedef struct _PRIVILEGE_SET PRIVILEGE_SET;
typedef struct _LIST_ENTRY *PRLIST_ENTRY;
typedef int (__stdcall *PROC)();
typedef enum _PROCESSINFOCLASS PROCESSINFOCLASS;
typedef enum _PROCESSOR_CACHE_TYPE PROCESSOR_CACHE_TYPE;
typedef struct _PROCESSOR_GROUP_INFO PROCESSOR_GROUP_INFO;
typedef struct _PROCESSOR_NUMBER PROCESSOR_NUMBER;
typedef struct _PROCESSOR_POWER_INFORMATION PROCESSOR_POWER_INFORMATION;
typedef struct _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESSOR_RELATIONSHIP PROCESSOR_RELATIONSHIP;
typedef struct _PROCESS_ACCESS_TOKEN PROCESS_ACCESS_TOKEN;
typedef struct _PROCESS_BASIC_INFORMATION PROCESS_BASIC_INFORMATION;
typedef struct _PROCESS_DEVICEMAP_INFORMATION PROCESS_DEVICEMAP_INFORMATION;
typedef struct _PROCESS_FOREGROUND_BACKGROUND PROCESS_FOREGROUND_BACKGROUND;
typedef struct _PROCESS_PRIORITY_CLASS PROCESS_PRIORITY_CLASS;
typedef struct _PROCESS_SESSION_INFORMATION PROCESS_SESSION_INFORMATION;
typedef enum _PROFILE_STATUS PROFILE_STATUS;
typedef PVOID PROPID;
typedef PVOID PROPVARIANT;
typedef struct _RTLP_CURDIR_REF *PRTLP_CURDIR_REF;
typedef RTLP_UNHANDLED_EXCEPTION_FILTER *PRTLP_UNHANDLED_EXCEPTION_FILTER;
typedef struct _RTL_ACQUIRE_STATE *PRTL_ACQUIRE_STATE;
typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *PRTL_ACTIVATION_CONTEXT_STACK_FRAME;
typedef PVOID (__stdcall *PRTL_ALLOCATE_STRING_ROUTINE)(SIZE_T NumberOfBytes);
typedef USHORT *PRTL_ATOM;
typedef struct _RTL_ATOM_TABLE *PRTL_ATOM_TABLE;
typedef struct _RTL_ATOM_TABLE_ENTRY *PRTL_ATOM_TABLE_ENTRY;
typedef RTL_AVL_ALLOCATE_ROUTINE *PRTL_AVL_ALLOCATE_ROUTINE;
typedef RTL_AVL_COMPARE_ROUTINE *PRTL_AVL_COMPARE_ROUTINE;
typedef RTL_AVL_FREE_ROUTINE *PRTL_AVL_FREE_ROUTINE;
typedef RTL_AVL_MATCH_FUNCTION *PRTL_AVL_MATCH_FUNCTION;
typedef struct _RTL_AVL_TABLE *PRTL_AVL_TABLE;
typedef struct _RTL_BALANCED_LINKS *PRTL_BALANCED_LINKS;
typedef void (__stdcall *PRTL_BASE_PROCESS_START_ROUTINE)(PTHREAD_START_ROUTINE StartAddress, PVOID Parameter);
typedef struct _RTL_BITMAP *PRTL_BITMAP;
typedef struct _RTL_BITMAP_RUN *PRTL_BITMAP_RUN;
typedef struct _RTL_BSD_DATA *PRTL_BSD_DATA;
typedef struct _RTL_BSD_DATA_ERROR_INFO *PRTL_BSD_DATA_ERROR_INFO;
typedef struct _RTL_BSD_DATA_POWER_TRANSITION *PRTL_BSD_DATA_POWER_TRANSITION;
typedef struct _RTL_BSD_ITEM *PRTL_BSD_ITEM;
typedef enum _RTL_BSD_ITEM_TYPE *PRTL_BSD_ITEM_TYPE;
typedef struct _RTL_BSD_POWER_BUTTON_PRESS_INFO *PRTL_BSD_POWER_BUTTON_PRESS_INFO;
typedef struct _RTL_BUFFER *PRTL_BUFFER;
typedef PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME;
typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
typedef struct _RTL_CONDITION_VARIABLE *PRTL_CONDITION_VARIABLE;
typedef BOOLEAN (__stdcall *PRTL_CONFLICT_RANGE_CALLBACK)(PVOID Context, struct _RTL_RANGE *Range);
typedef struct _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;
typedef struct _RTL_DEBUG_INFORMATION *PRTL_DEBUG_INFORMATION;
typedef struct _RTL_DRIVE_LETTER_CURDIR *PRTL_DRIVE_LETTER_CURDIR;
typedef NTSTATUS (__stdcall *PRTL_EXIT_POOL_THREAD)(NTSTATUS ExitStatus);
typedef struct _RTL_FLS_DATA *PRTL_FLS_DATA;
typedef void (__stdcall *PRTL_FREE_STRING_ROUTINE)(PVOID Buffer);
typedef RTL_GENERIC_ALLOCATE_ROUTINE *PRTL_GENERIC_ALLOCATE_ROUTINE;
typedef RTL_GENERIC_COMPARE_ROUTINE *PRTL_GENERIC_COMPARE_ROUTINE;
typedef RTL_GENERIC_FREE_ROUTINE *PRTL_GENERIC_FREE_ROUTINE;
typedef struct _RTL_GENERIC_TABLE *PRTL_GENERIC_TABLE;
typedef struct _RTL_HANDLE_TABLE *PRTL_HANDLE_TABLE;
typedef struct _RTL_HANDLE_TABLE_ENTRY *PRTL_HANDLE_TABLE_ENTRY;
typedef struct _RTL_HEAP_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME *PRTL_HEAP_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME;
typedef NTSTATUS (__stdcall *PRTL_HEAP_COMMIT_ROUTINE)(PVOID Base, PVOID *CommitAddress, PSIZE_T CommitSize);
typedef struct _RTL_HEAP_ENTRY *PRTL_HEAP_ENTRY;
typedef struct _RTL_HEAP_INFORMATION *PRTL_HEAP_INFORMATION;
typedef struct _RTL_HEAP_PARAMETERS *PRTL_HEAP_PARAMETERS;
typedef struct _RTL_HEAP_TAG *PRTL_HEAP_TAG;
typedef struct _RTL_HEAP_TAG_INFO *PRTL_HEAP_TAG_INFO;
typedef struct _RTL_HEAP_USAGE *PRTL_HEAP_USAGE;
typedef struct _RTL_HEAP_USAGE_ENTRY *PRTL_HEAP_USAGE_ENTRY;
typedef struct _RTL_HEAP_WALK_ENTRY *PRTL_HEAP_WALK_ENTRY;
typedef struct _RTL_MEMORY_STREAM *PRTL_MEMORY_STREAM;
typedef void (__stdcall *PRTL_MEMORY_STREAM_FINAL_RELEASE_ROUTINE)(PRTL_MEMORY_STREAM Stream);
typedef struct _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;
typedef struct _RTL_PATCH_HEADER *PRTL_PATCH_HEADER;
typedef struct _RTL_PERTHREAD_CURDIR *PRTL_PERTHREAD_CURDIR;
typedef struct _RTL_PROCESS_BACKTRACES *PRTL_PROCESS_BACKTRACES;
typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION *PRTL_PROCESS_BACKTRACE_INFORMATION;
typedef struct _RTL_PROCESS_HEAPS *PRTL_PROCESS_HEAPS;
typedef struct _RTL_PROCESS_LOCKS *PRTL_PROCESS_LOCKS;
typedef struct _RTL_PROCESS_LOCK_INFORMATION *PRTL_PROCESS_LOCK_INFORMATION;
typedef struct _RTL_PROCESS_MODULES *PRTL_PROCESS_MODULES;
typedef struct _RTL_PROCESS_MODULE_INFORMATION *PRTL_PROCESS_MODULE_INFORMATION;
typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX *PRTL_PROCESS_MODULE_INFORMATION_EX;
typedef struct _RTL_PROCESS_VERIFIER_OPTIONS *PRTL_PROCESS_VERIFIER_OPTIONS;
typedef NTSTATUS (__stdcall *PRTL_QUERY_REGISTRY_ROUTINE)(PWSTR ValueName, ULONG ValueType, PVOID ValueData, ULONG ValueLength, PVOID Context, PVOID EntryContext);
typedef struct _RTL_QUERY_REGISTRY_TABLE *PRTL_QUERY_REGISTRY_TABLE;
typedef struct _RTL_RANGE *PRTL_RANGE;
typedef struct _RTL_RANGE_LIST *PRTL_RANGE_LIST;
typedef struct _RANGE_LIST_ITERATOR *PRTL_RANGE_LIST_ITERATOR;
typedef PVOID (__stdcall *PRTL_REALLOCATE_STRING_ROUTINE)(SIZE_T NumberOfBytes, PVOID Buffer);
typedef struct _RTL_RELATIVE_NAME_U *PRTL_RELATIVE_NAME_U;
typedef struct _RTL_RESOURCE *PRTL_RESOURCE;
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_RESOURCE_DEBUG;
typedef union _RTL_RUN_ONCE *PRTL_RUN_ONCE;
typedef RTL_RUN_ONCE_INIT_FN *PRTL_RUN_ONCE_INIT_FN;
typedef NTSTATUS (__stdcall *PRTL_SECURE_MEMORY_CACHE_CALLBACK)(PVOID Address, SIZE_T Length);
typedef struct _RTL_SPLAY_LINKS *PRTL_SPLAY_LINKS;
typedef struct _RTL_SRWLOCK *PRTL_SRWLOCK;
typedef struct _RTL_STACK_TRACE_ENTRY *PRTL_STACK_TRACE_ENTRY;
typedef NTSTATUS (__stdcall *PRTL_START_POOL_THREAD)(PTHREAD_START_ROUTINE Function, PVOID Parameter, PHANDLE ThreadHandle);
typedef struct _RTL_TIME_ZONE_INFORMATION *PRTL_TIME_ZONE_INFORMATION;
typedef struct _RTL_TRACE_BLOCK *PRTL_TRACE_BLOCK;
typedef struct _RTL_TRACE_DATABASE *PRTL_TRACE_DATABASE;
typedef struct _RTL_TRACE_ENUMERATE *PRTL_TRACE_ENUMERATE;
typedef struct _RTL_TRACE_SEGMENT *PRTL_TRACE_SEGMENT;
typedef enum _RTL_UMSCTX_FLAGS *PRTL_UMSCTX_FLAGS;
typedef struct _RTL_UMS_CONTEXT *PRTL_UMS_CONTEXT;
typedef enum _RTL_UMS_SCHEDULER_REASON *PRTL_UMS_SCHEDULER_REASON;
typedef struct _RTL_UNICODE_STRING_BUFFER *PRTL_UNICODE_STRING_BUFFER;
typedef struct _RTL_UNLOAD_EVENT_TRACE *PRTL_UNLOAD_EVENT_TRACE;
typedef struct _RTL_USER_PROCESS_INFORMATION *PRTL_USER_PROCESS_INFORMATION;
typedef struct _RTL_USER_PROCESS_PARAMETERS *PRTL_USER_PROCESS_PARAMETERS;
typedef struct _RUN *PRUN;
typedef struct _RXACT_CONTEXT *PRXACT_CONTEXT;
typedef struct _RXACT_DATA *PRXACT_DATA;
typedef struct _SECTION_BASIC_INFORMATION *PSECTION_BASIC_INFORMATION;
typedef struct _SECTION_IMAGE_INFORMATION *PSECTION_IMAGE_INFORMATION;
typedef struct _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
typedef PVOID PSECURITY_DESCRIPTOR;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;
typedef DWORD *PSECURITY_INFORMATION;
typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;
typedef struct _SEMAPHORE_BASIC_INFORMATION *PSEMAPHORE_BASIC_INFORMATION;
typedef PVOID PSERIALIZEDPROPERTYVALUE;
typedef struct _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;
typedef struct _SE_ACCESS_REQUEST *PSE_ACCESS_REQUEST;
typedef struct _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;
typedef struct _SE_SECURITY_DESCRIPTOR *PSE_SECURITY_DESCRIPTOR;
typedef SHORT *PSHORT;
typedef PVOID PSID;
typedef struct _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
typedef struct _SID_AND_ATTRIBUTES_HASH *PSID_AND_ATTRIBUTES_HASH;
typedef ULONG_PTR *PSID_HASH_ENTRY;
typedef struct _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
typedef struct _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;
typedef struct tagSIZE *PSIZE;
typedef SIZE *PSIZEL;
typedef ULONG_PTR *PSIZE_T;
typedef SINGLE_LIST_ENTRY *PSLIST_ENTRY32;
typedef union _SLIST_HEADER *PSLIST_HEADER;
typedef SLIST_HEADER *PSLIST_HEADER32;
typedef LONG_PTR *PSSIZE_T;
typedef struct _STACK_TRACE_DATABASE *PSTACK_TRACE_DATABASE;
typedef struct $060D6FD956D3EBF205D64C3CA4764571 *PSTARTING_LCN_INPUT_BUFFER;
typedef struct $80E50DFA284ED4BC838B08AAD8EA99BA *PSTARTING_VCN_INPUT_BUFFER;
typedef CHAR *PSTR;
typedef struct _STRING *PSTRING;
typedef struct _STRING32 *PSTRING32;
typedef struct _STRING64 *PSTRING64;
typedef struct _SYSDBG_BUS_DATA *PSYSDBG_BUS_DATA;
typedef struct _SYSDBG_CONTROL_SPACE *PSYSDBG_CONTROL_SPACE;
typedef struct _SYSDBG_IO_SPACE *PSYSDBG_IO_SPACE;
typedef struct _SYSDBG_MSR *PSYSDBG_MSR;
typedef struct _SYSDBG_PHYSICAL *PSYSDBG_PHYSICAL;
typedef struct _SYSDBG_TRIAGE_DUMP *PSYSDBG_TRIAGE_DUMP;
typedef struct _SYSDBG_VIRTUAL *PSYSDBG_VIRTUAL;
typedef struct _SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;
typedef struct _SYSTEM_ALARM_CALLBACK_ACE *PSYSTEM_ALARM_CALLBACK_ACE;
typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_ALARM_OBJECT_ACE *PSYSTEM_ALARM_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE *PSYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE *PSYSTEM_AUDIT_OBJECT_ACE;
typedef struct _SYSTEM_BASIC_INFORMATION *PSYSTEM_BASIC_INFORMATION;
typedef struct _SYSTEM_BATTERY_STATE *PSYSTEM_BATTERY_STATE;
typedef struct _SYSTEM_CALL_COUNT_INFORMATION *PSYSTEM_CALL_COUNT_INFORMATION;
typedef struct _SYSTEM_CALL_TIME_INFORMATION *PSYSTEM_CALL_TIME_INFORMATION;
typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION *PSYSTEM_CONTEXT_SWITCH_INFORMATION;
typedef struct _SYSTEM_CRASH_STATE_INFORMATION *PSYSTEM_CRASH_STATE_INFORMATION;
typedef struct _SYSTEM_DEVICE_INFORMATION *PSYSTEM_DEVICE_INFORMATION;
typedef struct _SYSTEM_DOCK_INFORMATION *PSYSTEM_DOCK_INFORMATION;
typedef enum _SYSTEM_DOCK_STATE *PSYSTEM_DOCK_STATE;
typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION *PSYSTEM_DPC_BEHAVIOR_INFORMATION;
typedef struct _SYSTEM_EXCEPTION_INFORMATION *PSYSTEM_EXCEPTION_INFORMATION;
typedef struct _SYSTEM_FILECACHE_INFORMATION *PSYSTEM_FILECACHE_INFORMATION;
typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION *PSYSTEM_FIRMWARE_TABLE_ACTION;
typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER *PSYSTEM_FIRMWARE_TABLE_HANDLER;
typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION *PSYSTEM_FIRMWARE_TABLE_INFORMATION;
typedef struct _SYSTEM_FLAGS_INFORMATION *PSYSTEM_FLAGS_INFORMATION;
typedef struct _SYSTEM_GDI_DRIVER_INFORMATION *PSYSTEM_GDI_DRIVER_INFORMATION;
typedef struct _SYSTEM_HANDLE_INFORMATION *PSYSTEM_HANDLE_INFORMATION;
typedef struct _SYSTEM_HANDLE_INFORMATION_EX *PSYSTEM_HANDLE_INFORMATION_EX;
typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO *PSYSTEM_HANDLE_TABLE_ENTRY_INFO;
typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
typedef struct _SYSTEM_HOTPATCH_CODE_INFORMATION *PSYSTEM_HOTPATCH_CODE_INFORMATION;
typedef struct _SYSTEM_INTERRUPT_INFORMATION *PSYSTEM_INTERRUPT_INFORMATION;
typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION *PSYSTEM_KERNEL_DEBUGGER_INFORMATION;
typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION *PSYSTEM_LEGACY_DRIVER_INFORMATION;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
typedef struct _SYSTEM_LOOKASIDE_INFORMATION *PSYSTEM_LOOKASIDE_INFORMATION;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE *PSYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_MEMORY_INFO *PSYSTEM_MEMORY_INFO;
typedef struct _SYSTEM_MEMORY_INFORMATION *PSYSTEM_MEMORY_INFORMATION;
typedef struct _SYSTEM_MEMORY_LIST_INFORMATION *PSYSTEM_MEMORY_LIST_INFORMATION;
typedef struct _SYSTEM_NUMA_INFORMATION *PSYSTEM_NUMA_INFORMATION;
typedef struct _SYSTEM_OBJECTTYPE_INFORMATION *PSYSTEM_OBJECTTYPE_INFORMATION;
typedef struct _SYSTEM_OBJECT_INFORMATION *PSYSTEM_OBJECT_INFORMATION;
typedef struct _SYSTEM_PAGEFILE_INFORMATION *PSYSTEM_PAGEFILE_INFORMATION;
typedef struct _SYSTEM_PERFORMANCE_INFORMATION *PSYSTEM_PERFORMANCE_INFORMATION;
typedef struct _SYSTEM_PLUGPLAY_BUS_INFORMATION *PSYSTEM_PLUGPLAY_BUS_INFORMATION;
typedef struct _SYSTEM_POOLTAG *PSYSTEM_POOLTAG;
typedef struct _SYSTEM_POOLTAG_INFORMATION *PSYSTEM_POOLTAG_INFORMATION;
typedef struct _SYSTEM_POOL_ENTRY *PSYSTEM_POOL_ENTRY;
typedef struct _SYSTEM_POOL_INFORMATION *PSYSTEM_POOL_INFORMATION;
typedef struct _SYSTEM_POWER_CAPABILITIES *PSYSTEM_POWER_CAPABILITIES;
typedef struct _SYSTEM_POWER_INFORMATION *PSYSTEM_POWER_INFORMATION;
typedef struct _SYSTEM_POWER_INFORMATION_NATIVE *PSYSTEM_POWER_INFORMATION_NATIVE;
typedef struct _SYSTEM_POWER_LEVEL *PSYSTEM_POWER_LEVEL;
typedef struct _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;
typedef struct _SYSTEM_PROCESSOR_INFORMATION *PSYSTEM_PROCESSOR_INFORMATION;
typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
typedef struct _SYSTEM_PROCESS_INFORMATION *PSYSTEM_PROCESS_INFORMATION;
typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION;
typedef struct _SYSTEM_REF_TRACE_INFORMATION *PSYSTEM_REF_TRACE_INFORMATION;
typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION *PSYSTEM_REGISTRY_QUOTA_INFORMATION;
typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION *PSYSTEM_SESSION_PROCESS_INFORMATION;
typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION *PSYSTEM_SET_TIME_ADJUST_INFORMATION;
typedef struct _SYSTEM_THREAD_INFORMATION *PSYSTEM_THREAD_INFORMATION;
typedef struct _SYSTEM_TIMEOFDAY_INFORMATION *PSYSTEM_TIMEOFDAY_INFORMATION;
typedef struct _SYSTEM_VDM_INSTEMUL_INFO *PSYSTEM_VDM_INSTEMUL_INFO;
typedef struct _SYSTEM_VERIFIER_INFORMATION *PSYSTEM_VERIFIER_INFORMATION;
typedef char *PSZ;
typedef struct _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;
typedef struct _TAPE_ERASE *PTAPE_ERASE;
typedef struct _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_GET_POSITION *PTAPE_GET_POSITION;
typedef struct _TAPE_PREPARE *PTAPE_PREPARE;
typedef struct _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_POSITION *PTAPE_SET_POSITION;
typedef struct _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;
typedef unsigned __int8 *PTBYTE;
typedef LPCH PTCH;
typedef char *PTCHAR;
typedef struct _TEB *PTEB;
typedef struct _TEB_ACTIVE_FRAME *PTEB_ACTIVE_FRAME;
typedef struct _TEB_ACTIVE_FRAME_CONTEXT *PTEB_ACTIVE_FRAME_CONTEXT;
typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX *PTEB_ACTIVE_FRAME_CONTEXT_EX;
typedef struct _TEB_ACTIVE_FRAME_EX *PTEB_ACTIVE_FRAME_EX;
typedef TEXTMETRICA *PTEXTMETRIC;
typedef struct tagTEXTMETRICA *PTEXTMETRICA;
typedef struct tagTEXTMETRICW *PTEXTMETRICW;
typedef struct _THREAD_BASIC_INFORMATION *PTHREAD_BASIC_INFORMATION;
typedef ULONG (__stdcall *PTHREAD_START_ROUTINE)(PVOID Parameter);
typedef void (__stdcall *PTIMER_APC_ROUTINE)(PVOID TimerContext, ULONG TimerLowValue, LONG TimerHighValue);
typedef struct _TIMER_BASIC_INFORMATION *PTIMER_BASIC_INFORMATION;
typedef struct _TIME_FIELDS *PTIME_FIELDS;
typedef struct _TOKEN_ACCESS_INFORMATION *PTOKEN_ACCESS_INFORMATION;
typedef struct _TOKEN_AUDIT_POLICY *PTOKEN_AUDIT_POLICY;
typedef struct _TOKEN_CONTROL *PTOKEN_CONTROL;
typedef struct _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;
typedef struct _TOKEN_ELEVATION *PTOKEN_ELEVATION;
typedef enum _TOKEN_ELEVATION_TYPE *PTOKEN_ELEVATION_TYPE;
typedef struct _TOKEN_GROUPS *PTOKEN_GROUPS;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;
typedef enum _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;
typedef struct _TOKEN_LINKED_TOKEN *PTOKEN_LINKED_TOKEN;
typedef struct _TOKEN_MANDATORY_LABEL *PTOKEN_MANDATORY_LABEL;
typedef struct _TOKEN_MANDATORY_POLICY *PTOKEN_MANDATORY_POLICY;
typedef struct _TOKEN_ORIGIN *PTOKEN_ORIGIN;
typedef struct _TOKEN_OWNER *PTOKEN_OWNER;
typedef struct _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;
typedef struct _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;
typedef struct _TOKEN_SOURCE *PTOKEN_SOURCE;
typedef struct _TOKEN_STATISTICS *PTOKEN_STATISTICS;
typedef enum _TOKEN_TYPE *PTOKEN_TYPE;
typedef struct _TOKEN_USER *PTOKEN_USER;
typedef struct _TP_CALLBACK_ENVIRON_V3 *PTP_CALLBACK_ENVIRON;
typedef struct _TP_CALLBACK_INSTANCE *PTP_CALLBACK_INSTANCE;
typedef struct _TP_CLEANUP_GROUP *PTP_CLEANUP_GROUP;
typedef void (__stdcall *PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(PVOID ObjectContext, PVOID CleanupContext);
typedef struct _TP_POOL *PTP_POOL;
typedef void (__stdcall *PTP_SIMPLE_CALLBACK)(PTP_CALLBACK_INSTANCE Instance, PVOID Context);
typedef DWORD *PTP_VERSION;
typedef struct _TP_WORK *PTP_WORK;
typedef void (__stdcall *PTP_WORK_CALLBACK)(PTP_CALLBACK_INSTANCE Instance, PVOID Context, PTP_WORK Work);
typedef LONG PTRDIFF;
typedef struct _TRIVERTEX *PTRIVERTEX;
typedef LPSTR PTSTR;
typedef UCHAR *PUCHAR;
typedef unsigned int *PUCSCHAR;
typedef unsigned int *PUCSSTR;
typedef unsigned __int16 *PUHALF_PTR;
typedef unsigned int *PUINT;
typedef unsigned __int16 *PUINT16;
typedef unsigned int *PUINT32;
typedef unsigned __int64 *PUINT64;
typedef unsigned __int8 *PUINT8;
typedef unsigned int *PUINT_PTR;
typedef union _ULARGE_INTEGER *PULARGE_INTEGER;
typedef ULONG *PULONG;
typedef unsigned int *PULONG32;
typedef unsigned __int64 *PULONG64;
typedef unsigned __int64 *PULONGLONG;
typedef unsigned int *PULONG_PTR;
typedef struct _UNICODE_PREFIX_TABLE *PUNICODE_PREFIX_TABLE;
typedef struct _UNICODE_PREFIX_TABLE_ENTRY *PUNICODE_PREFIX_TABLE_ENTRY;
typedef struct _UNICODE_STRING *PUNICODE_STRING;
typedef struct _STRING32 *PUNICODE_STRING32;
typedef struct _STRING64 *PUNICODE_STRING64;
typedef struct _UNIQUE_PROCESS_INFORMATION *PUNIQUE_PROCESS_INFORMATION;
typedef PNZCH PUNZTCH;
typedef WCHAR *PUNZWCH;
typedef USHORT *PUSHORT;
typedef LPSTR PUTSTR;
typedef UCSCHAR *PUUCSCHAR;
typedef UCSCHAR *PUUCSSTR;
typedef WCHAR *PUWSTR;
typedef PZZSTR PUZZTSTR;
typedef WCHAR *PUZZWSTR;
typedef struct _VdmIcaUserData *PVDMICAUSERDATA;
typedef struct _VdmVirtualIca *PVDMVIRTUALICA;
typedef struct _VDM_INITIALIZE_DATA *PVDM_INITIALIZE_DATA;
typedef LONG (__stdcall *PVECTORED_EXCEPTION_HANDLER)(struct _EXCEPTION_POINTERS *ExceptionInfo);
typedef struct _VERIFY_INFORMATION *PVERIFY_INFORMATION;
typedef enum _VF_FAILURE_CLASS *PVF_FAILURE_CLASS;
typedef enum _VF_OBJECT_TYPE PVF_OBJECT_TYPE;
typedef struct _VIDEOMEMORY *PVIDEOMEMORY;
typedef struct _VM_COUNTERS *PVM_COUNTERS;
typedef struct _VM_COUNTERS_EX *PVM_COUNTERS_EX;
typedef void *PVOID;
typedef void *__ptr64 PVOID64;
typedef struct $D890D4C8B96B04D8C981ECF31CD55F01 *PVOLUME_BITMAP_BUFFER;
typedef struct _VOLUME_DISK_EXTENTS *PVOLUME_DISK_EXTENTS;
typedef WCHAR *PWCH;
typedef WCHAR *PWCHAR;
typedef struct tagWCRANGE *PWCRANGE;
typedef struct _WCRUN *PWCRUN;
typedef struct _WGLSWAP *PWGLSWAP;
typedef struct _WNDOBJ *PWNDOBJ;
typedef WORD *PWORD;
typedef WCHAR *PWSTR;
typedef struct _XFORM *PXFORM;
typedef struct _XFORML *PXFORML;
typedef PCSTR *PZPCSTR;
typedef PCWSTR *PZPCWSTR;
typedef PSTR *PZPSTR;
typedef PZPSTR PZPTSTR;
typedef PWSTR *PZPWSTR;
typedef CHAR *PZZSTR;
typedef PZZSTR PZZTSTR;
typedef WCHAR *PZZWSTR;
typedef struct _QUOTA_LIMITS QUOTA_LIMITS;
typedef struct _QUOTA_LIMITS_EX QUOTA_LIMITS_EX;
typedef struct _RASTERIZER_STATUS RASTERIZER_STATUS;
typedef union _RATE_QUOTA_LIMIT RATE_QUOTA_LIMIT;
typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;
typedef struct tagRECT RECT;
typedef struct _RECTFX RECTFX;
typedef struct _RECTL RECTL;
typedef struct _REMOTE_PORT_VIEW REMOTE_PORT_VIEW;
typedef struct _REPARSE_DATA_BUFFER REPARSE_DATA_BUFFER;
typedef struct _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;
typedef struct _REPARSE_POINT_INFORMATION REPARSE_POINT_INFORMATION;
struct RETRIEVAL_POINTERS_BUFFER {DWORD ExtentCount;LARGE_INTEGER StartingVcn;struct RETRIEVAL_POINTERS_BUFFER::$1BE95960A89AEFDDC7C143B6A7C3CEB0 Extents[1];};
struct RETRIEVAL_POINTERS_BUFFER::$1BE95960A89AEFDDC7C143B6A7C3CEB0 {LARGE_INTEGER NextVcn;LARGE_INTEGER Lcn;};
typedef struct tagRGBQUAD RGBQUAD;
typedef struct tagRGBTRIPLE RGBTRIPLE;
typedef struct _RGNDATA RGNDATA;
typedef struct _RGNDATAHEADER RGNDATAHEADER;
typedef ULONG ROP4;
typedef struct _RTLP_CURDIR_REF RTLP_CURDIR_REF;
typedef ULONG (__stdcall *RTLP_UNHANDLED_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *ExceptionInfo);
typedef struct _RTL_ACQUIRE_STATE RTL_ACQUIRE_STATE;
typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME RTL_ACTIVATION_CONTEXT_STACK_FRAME;
typedef USHORT RTL_ATOM;
typedef struct _RTL_ATOM_TABLE RTL_ATOM_TABLE;
typedef struct _RTL_ATOM_TABLE_ENTRY RTL_ATOM_TABLE_ENTRY;
typedef PVOID __stdcall RTL_AVL_ALLOCATE_ROUTINE(struct _RTL_AVL_TABLE *Table, CLONG ByteSize);
typedef RTL_GENERIC_COMPARE_RESULTS __stdcall RTL_AVL_COMPARE_ROUTINE(struct _RTL_AVL_TABLE *Table, PVOID FirstStruct, PVOID SecondStruct);
typedef void __stdcall RTL_AVL_FREE_ROUTINE(struct _RTL_AVL_TABLE *Table, PVOID Buffer);
typedef NTSTATUS __stdcall RTL_AVL_MATCH_FUNCTION(struct _RTL_AVL_TABLE *Table, PVOID UserData, PVOID MatchData);
typedef struct _RTL_AVL_TABLE RTL_AVL_TABLE;
typedef struct _RTL_BALANCED_LINKS RTL_BALANCED_LINKS;
typedef struct _RTL_BITMAP RTL_BITMAP;
typedef struct _RTL_BITMAP_RUN RTL_BITMAP_RUN;
typedef struct _RTL_BSD_DATA RTL_BSD_DATA;
typedef struct _RTL_BSD_DATA_ERROR_INFO RTL_BSD_DATA_ERROR_INFO;
typedef struct _RTL_BSD_DATA_POWER_TRANSITION RTL_BSD_DATA_POWER_TRANSITION;
typedef struct _RTL_BSD_ITEM RTL_BSD_ITEM;
typedef enum _RTL_BSD_ITEM_TYPE RTL_BSD_ITEM_TYPE;
typedef struct _RTL_BSD_POWER_BUTTON_PRESS_INFO RTL_BSD_POWER_BUTTON_PRESS_INFO;
typedef struct _RTL_BUFFER RTL_BUFFER;
typedef RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME;
typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
typedef struct _RTL_CONDITION_VARIABLE RTL_CONDITION_VARIABLE;
typedef struct _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;
typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;
typedef struct _RTL_DEBUG_INFORMATION RTL_DEBUG_INFORMATION;
typedef struct _RTL_DRIVE_LETTER_CURDIR RTL_DRIVE_LETTER_CURDIR;
typedef struct _RTL_FLS_DATA RTL_FLS_DATA;
typedef PVOID __stdcall RTL_GENERIC_ALLOCATE_ROUTINE(struct _RTL_GENERIC_TABLE *Table, CLONG ByteSize);
typedef enum _RTL_GENERIC_COMPARE_RESULTS RTL_GENERIC_COMPARE_RESULTS;
typedef RTL_GENERIC_COMPARE_RESULTS __stdcall RTL_GENERIC_COMPARE_ROUTINE(struct _RTL_GENERIC_TABLE *Table, PVOID FirstStruct, PVOID SecondStruct);
typedef void __stdcall RTL_GENERIC_FREE_ROUTINE(struct _RTL_GENERIC_TABLE *Table, PVOID Buffer);
typedef struct _RTL_GENERIC_TABLE RTL_GENERIC_TABLE;
typedef struct _RTL_HANDLE_TABLE RTL_HANDLE_TABLE;
typedef struct _RTL_HANDLE_TABLE_ENTRY RTL_HANDLE_TABLE_ENTRY;
typedef struct _RTL_HEAP_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME RTL_HEAP_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME;
typedef struct _RTL_HEAP_ENTRY RTL_HEAP_ENTRY;
typedef struct _RTL_HEAP_INFORMATION RTL_HEAP_INFORMATION;
typedef struct _RTL_HEAP_PARAMETERS RTL_HEAP_PARAMETERS;
typedef struct _RTL_HEAP_TAG RTL_HEAP_TAG;
typedef struct _RTL_HEAP_TAG_INFO RTL_HEAP_TAG_INFO;
typedef struct _RTL_HEAP_USAGE RTL_HEAP_USAGE;
typedef struct _RTL_HEAP_USAGE_ENTRY RTL_HEAP_USAGE_ENTRY;
typedef struct _RTL_HEAP_WALK_ENTRY RTL_HEAP_WALK_ENTRY;
typedef struct _RTL_MEMORY_STREAM RTL_MEMORY_STREAM;
typedef struct _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;
typedef struct _OSVERSIONINFOW RTL_OSVERSIONINFOW;
typedef struct _RTL_PATCH_HEADER RTL_PATCH_HEADER;
typedef enum _RTL_PATH_TYPE RTL_PATH_TYPE;
typedef struct _RTL_PERTHREAD_CURDIR RTL_PERTHREAD_CURDIR;
typedef struct _RTL_PROCESS_BACKTRACES RTL_PROCESS_BACKTRACES;
typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION RTL_PROCESS_BACKTRACE_INFORMATION;
typedef struct _RTL_PROCESS_HEAPS RTL_PROCESS_HEAPS;
typedef struct _RTL_PROCESS_LOCKS RTL_PROCESS_LOCKS;
typedef struct _RTL_PROCESS_LOCK_INFORMATION RTL_PROCESS_LOCK_INFORMATION;
typedef struct _RTL_PROCESS_MODULES RTL_PROCESS_MODULES;
typedef struct _RTL_PROCESS_MODULE_INFORMATION RTL_PROCESS_MODULE_INFORMATION;
typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX RTL_PROCESS_MODULE_INFORMATION_EX;
typedef struct _RTL_PROCESS_VERIFIER_OPTIONS RTL_PROCESS_VERIFIER_OPTIONS;
typedef struct _RTL_QUERY_REGISTRY_TABLE RTL_QUERY_REGISTRY_TABLE;
typedef struct _RTL_RANGE RTL_RANGE;
typedef struct _RTL_RANGE_LIST RTL_RANGE_LIST;
typedef struct _RANGE_LIST_ITERATOR RTL_RANGE_LIST_ITERATOR;
typedef struct _RTL_RELATIVE_NAME_U RTL_RELATIVE_NAME_U;
typedef struct _RTL_RESOURCE RTL_RESOURCE;
typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_RESOURCE_DEBUG;
typedef union _RTL_RUN_ONCE RTL_RUN_ONCE;
typedef DWORD __stdcall RTL_RUN_ONCE_INIT_FN(PRTL_RUN_ONCE, PVOID, PVOID *);
typedef struct _RTL_SPLAY_LINKS RTL_SPLAY_LINKS;
typedef struct _RTL_SRWLOCK RTL_SRWLOCK;
typedef struct _RTL_STACK_TRACE_ENTRY RTL_STACK_TRACE_ENTRY;
typedef struct _RTL_TIME_ZONE_INFORMATION RTL_TIME_ZONE_INFORMATION;
typedef struct _RTL_TRACE_BLOCK RTL_TRACE_BLOCK;
typedef struct _RTL_TRACE_DATABASE RTL_TRACE_DATABASE;
typedef struct _RTL_TRACE_ENUMERATE RTL_TRACE_ENUMERATE;
typedef ULONG (__stdcall *RTL_TRACE_HASH_FUNCTION)(ULONG Count, PVOID *Trace);
typedef struct _RTL_TRACE_SEGMENT RTL_TRACE_SEGMENT;
typedef enum _RTL_UMSCTX_FLAGS RTL_UMSCTX_FLAGS;
typedef struct _RTL_UMS_CONTEXT RTL_UMS_CONTEXT;
typedef enum _RTL_UMS_SCHEDULER_REASON RTL_UMS_SCHEDULER_REASON;
typedef struct _RTL_UNICODE_STRING_BUFFER RTL_UNICODE_STRING_BUFFER;
typedef struct _RTL_UNLOAD_EVENT_TRACE RTL_UNLOAD_EVENT_TRACE;
typedef struct _RTL_USER_PROCESS_INFORMATION RTL_USER_PROCESS_INFORMATION;
typedef struct _RTL_USER_PROCESS_PARAMETERS RTL_USER_PROCESS_PARAMETERS;
typedef struct _RUN RUN;
typedef struct _RXACT_CONTEXT RXACT_CONTEXT;
typedef struct _RXACT_DATA RXACT_DATA;
enum ReplacesCorHdrNumericDefines {COMIMAGE_FLAGS_ILONLY = 0x1,COMIMAGE_FLAGS_32BITREQUIRED = 0x2,COMIMAGE_FLAGS_IL_LIBRARY = 0x4,COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x8,COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x10,COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,COMIMAGE_FLAGS_32BITPREFERRED = 0x20000,COR_VERSION_MAJOR_V2 = 0x2,COR_VERSION_MAJOR = 0x2,COR_VERSION_MINOR = 0x0,COR_DELETED_NAME_LENGTH = 0x8,COR_VTABLEGAP_NAME_LENGTH = 0x8,NATIVE_TYPE_MAX_CB = 0x1,COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,IMAGE_COR_MIH_METHODRVA = 0x1,IMAGE_COR_MIH_EHRVA = 0x2,IMAGE_COR_MIH_BASICBLOCK = 0x8,COR_VTABLE_32BIT = 0x1,COR_VTABLE_64BIT = 0x2,COR_VTABLE_FROM_UNMANAGED = 0x4,COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 0x8,COR_VTABLE_CALL_MOST_DERIVED = 0x10,IMAGE_COR_EATJ_THUNK_SIZE = 0x20,MAX_CLASS_NAME = 0x400,MAX_PACKAGE_NAME = 0x400,};
typedef struct _SECTION_BASIC_INFORMATION SECTION_BASIC_INFORMATION;
typedef struct _SECTION_IMAGE_INFORMATION SECTION_IMAGE_INFORMATION;
typedef enum _SECTION_INFORMATION_CLASS SECTION_INFORMATION_CLASS;
typedef enum _SECTION_INHERIT SECTION_INHERIT;
typedef struct _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;
typedef WORD SECURITY_DESCRIPTOR_CONTROL;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef DWORD SECURITY_INFORMATION;
typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;
typedef struct _SEMAPHORE_BASIC_INFORMATION SEMAPHORE_BASIC_INFORMATION;
typedef enum _SEMAPHORE_INFORMATION_CLASS SEMAPHORE_INFORMATION_CLASS;
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;
typedef struct _SE_ACCESS_REQUEST SE_ACCESS_REQUEST;
typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;
typedef struct _SE_SECURITY_DESCRIPTOR SE_SECURITY_DESCRIPTOR;
typedef int SHANDLE_PTR;
typedef __int16 SHORT;
typedef enum _SHUTDOWN_ACTION SHUTDOWN_ACTION;
typedef struct _SID SID;
typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];
typedef struct _SID_AND_ATTRIBUTES_HASH SID_AND_ATTRIBUTES_HASH;
typedef ULONG_PTR SID_HASH_ENTRY;
typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;
typedef struct tagSIZE SIZE;
typedef SIZE SIZEL;
typedef ULONG_PTR SIZE_T;
typedef SINGLE_LIST_ENTRY SLIST_ENTRY32;
typedef union _SLIST_HEADER SLIST_HEADER;
typedef SLIST_HEADER SLIST_HEADER32;
typedef int (__cdecl *SORTCOMP)(const void *pv1, const void *pv2);
typedef HANDLE *SPHANDLE;
typedef LONG_PTR SSIZE_T;
typedef struct _STACK_TRACE_DATABASE STACK_TRACE_DATABASE;
typedef struct $060D6FD956D3EBF205D64C3CA4764571 STARTING_LCN_INPUT_BUFFER;
typedef struct $80E50DFA284ED4BC838B08AAD8EA99BA STARTING_VCN_INPUT_BUFFER;
typedef struct _STRING STRING;
typedef struct _STRING32 STRING32;
typedef struct _STRING64 STRING64;
typedef struct _STROBJ STROBJ;
typedef struct _SURFOBJ SURFOBJ;
typedef struct _SYSDBG_BUS_DATA SYSDBG_BUS_DATA;
typedef enum _SYSDBG_COMMAND SYSDBG_COMMAND;
typedef struct _SYSDBG_CONTROL_SPACE SYSDBG_CONTROL_SPACE;
typedef struct _SYSDBG_IO_SPACE SYSDBG_IO_SPACE;
typedef struct _SYSDBG_MSR SYSDBG_MSR;
typedef struct _SYSDBG_PHYSICAL SYSDBG_PHYSICAL;
typedef struct _SYSDBG_TRIAGE_DUMP SYSDBG_TRIAGE_DUMP;
typedef struct _SYSDBG_VIRTUAL SYSDBG_VIRTUAL;
typedef struct _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;
typedef struct _SYSTEM_ALARM_CALLBACK_ACE SYSTEM_ALARM_CALLBACK_ACE;
typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_ALARM_OBJECT_ACE SYSTEM_ALARM_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE SYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE SYSTEM_AUDIT_OBJECT_ACE;
typedef struct _SYSTEM_BASIC_INFORMATION SYSTEM_BASIC_INFORMATION;
typedef struct _SYSTEM_BATTERY_STATE SYSTEM_BATTERY_STATE;
typedef struct _SYSTEM_CALL_COUNT_INFORMATION SYSTEM_CALL_COUNT_INFORMATION;
typedef struct _SYSTEM_CALL_TIME_INFORMATION SYSTEM_CALL_TIME_INFORMATION;
typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION SYSTEM_CONTEXT_SWITCH_INFORMATION;
typedef struct _SYSTEM_CRASH_STATE_INFORMATION SYSTEM_CRASH_STATE_INFORMATION;
typedef struct _SYSTEM_DEVICE_INFORMATION SYSTEM_DEVICE_INFORMATION;
typedef struct _SYSTEM_DOCK_INFORMATION SYSTEM_DOCK_INFORMATION;
typedef enum _SYSTEM_DOCK_STATE SYSTEM_DOCK_STATE;
typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION SYSTEM_DPC_BEHAVIOR_INFORMATION;
typedef struct _SYSTEM_EXCEPTION_INFORMATION SYSTEM_EXCEPTION_INFORMATION;
typedef struct _SYSTEM_FILECACHE_INFORMATION SYSTEM_FILECACHE_INFORMATION;
typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION SYSTEM_FIRMWARE_TABLE_ACTION;
typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER SYSTEM_FIRMWARE_TABLE_HANDLER;
typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION SYSTEM_FIRMWARE_TABLE_INFORMATION;
typedef struct _SYSTEM_FLAGS_INFORMATION SYSTEM_FLAGS_INFORMATION;
typedef struct _SYSTEM_GDI_DRIVER_INFORMATION SYSTEM_GDI_DRIVER_INFORMATION;
typedef struct _SYSTEM_HANDLE_INFORMATION SYSTEM_HANDLE_INFORMATION;
typedef struct _SYSTEM_HANDLE_INFORMATION_EX SYSTEM_HANDLE_INFORMATION_EX;
typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO SYSTEM_HANDLE_TABLE_ENTRY_INFO;
typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
typedef struct _SYSTEM_HOTPATCH_CODE_INFORMATION SYSTEM_HOTPATCH_CODE_INFORMATION;
typedef enum _SYSTEM_INFORMATION_CLASS SYSTEM_INFORMATION_CLASS;
typedef struct _SYSTEM_INTERRUPT_INFORMATION SYSTEM_INTERRUPT_INFORMATION;
typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION SYSTEM_KERNEL_DEBUGGER_INFORMATION;
typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION SYSTEM_LEGACY_DRIVER_INFORMATION;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
typedef struct _SYSTEM_LOOKASIDE_INFORMATION SYSTEM_LOOKASIDE_INFORMATION;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE SYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_MEMORY_INFO SYSTEM_MEMORY_INFO;
typedef struct _SYSTEM_MEMORY_INFORMATION SYSTEM_MEMORY_INFORMATION;
typedef struct _SYSTEM_MEMORY_LIST_INFORMATION SYSTEM_MEMORY_LIST_INFORMATION;
typedef struct _SYSTEM_NUMA_INFORMATION SYSTEM_NUMA_INFORMATION;
typedef struct _SYSTEM_OBJECTTYPE_INFORMATION SYSTEM_OBJECTTYPE_INFORMATION;
typedef struct _SYSTEM_OBJECT_INFORMATION SYSTEM_OBJECT_INFORMATION;
typedef struct _SYSTEM_PAGEFILE_INFORMATION SYSTEM_PAGEFILE_INFORMATION;
typedef struct _SYSTEM_PERFORMANCE_INFORMATION SYSTEM_PERFORMANCE_INFORMATION;
typedef struct _SYSTEM_PLUGPLAY_BUS_INFORMATION SYSTEM_PLUGPLAY_BUS_INFORMATION;
typedef struct _SYSTEM_POOLTAG SYSTEM_POOLTAG;
typedef struct _SYSTEM_POOLTAG_INFORMATION SYSTEM_POOLTAG_INFORMATION;
typedef struct _SYSTEM_POOL_ENTRY SYSTEM_POOL_ENTRY;
typedef struct _SYSTEM_POOL_INFORMATION SYSTEM_POOL_INFORMATION;
typedef struct _SYSTEM_POWER_CAPABILITIES SYSTEM_POWER_CAPABILITIES;
typedef struct _SYSTEM_POWER_INFORMATION SYSTEM_POWER_INFORMATION;
typedef struct _SYSTEM_POWER_INFORMATION_NATIVE SYSTEM_POWER_INFORMATION_NATIVE;
typedef struct _SYSTEM_POWER_LEVEL SYSTEM_POWER_LEVEL;
typedef struct _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
typedef struct _SYSTEM_PROCESSOR_INFORMATION SYSTEM_PROCESSOR_INFORMATION;
typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
typedef struct _SYSTEM_PROCESS_INFORMATION SYSTEM_PROCESS_INFORMATION;
typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
typedef struct _SYSTEM_REF_TRACE_INFORMATION SYSTEM_REF_TRACE_INFORMATION;
typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION SYSTEM_REGISTRY_QUOTA_INFORMATION;
typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION SYSTEM_SESSION_PROCESS_INFORMATION;
typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION SYSTEM_SET_TIME_ADJUST_INFORMATION;
typedef struct _SYSTEM_THREAD_INFORMATION SYSTEM_THREAD_INFORMATION;
typedef struct _SYSTEM_TIMEOFDAY_INFORMATION SYSTEM_TIMEOFDAY_INFORMATION;
typedef struct _SYSTEM_VDM_INSTEMUL_INFO SYSTEM_VDM_INSTEMUL_INFO;
typedef struct _SYSTEM_VERIFIER_INFORMATION SYSTEM_VERIFIER_INFORMATION;
typedef enum _TABLE_SEARCH_RESULT TABLE_SEARCH_RESULT;
typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;
typedef struct _TAPE_ERASE TAPE_ERASE;
typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;
typedef struct _TAPE_PREPARE TAPE_PREPARE;
typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;
typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;
typedef unsigned __int8 TBYTE;
typedef char TCHAR;
typedef struct _TEB TEB;
typedef struct _TEB_ACTIVE_FRAME TEB_ACTIVE_FRAME;
typedef struct _TEB_ACTIVE_FRAME_CONTEXT TEB_ACTIVE_FRAME_CONTEXT;
typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX TEB_ACTIVE_FRAME_CONTEXT_EX;
typedef struct _TEB_ACTIVE_FRAME_EX TEB_ACTIVE_FRAME_EX;
typedef TEXTMETRICA TEXTMETRIC;
typedef struct tagTEXTMETRICA TEXTMETRICA;
typedef struct tagTEXTMETRICW TEXTMETRICW;
typedef enum _THREADINFOCLASS THREADINFOCLASS;
typedef struct _THREAD_BASIC_INFORMATION THREAD_BASIC_INFORMATION;
typedef struct _TIMER_BASIC_INFORMATION TIMER_BASIC_INFORMATION;
typedef enum _TIMER_INFORMATION_CLASS TIMER_INFORMATION_CLASS;
typedef enum _TIMER_TYPE TIMER_TYPE;
typedef struct _TIME_FIELDS TIME_FIELDS;
typedef struct _TOKEN_ACCESS_INFORMATION TOKEN_ACCESS_INFORMATION;
typedef struct _TOKEN_AUDIT_POLICY TOKEN_AUDIT_POLICY;
typedef struct _TOKEN_CONTROL TOKEN_CONTROL;
typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;
typedef struct _TOKEN_ELEVATION TOKEN_ELEVATION;
typedef enum _TOKEN_ELEVATION_TYPE TOKEN_ELEVATION_TYPE;
typedef struct _TOKEN_GROUPS TOKEN_GROUPS;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
typedef struct _TOKEN_LINKED_TOKEN TOKEN_LINKED_TOKEN;
typedef struct _TOKEN_MANDATORY_LABEL TOKEN_MANDATORY_LABEL;
typedef struct _TOKEN_MANDATORY_POLICY TOKEN_MANDATORY_POLICY;
typedef struct _TOKEN_ORIGIN TOKEN_ORIGIN;
typedef struct _TOKEN_OWNER TOKEN_OWNER;
typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;
typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;
typedef struct _TOKEN_SOURCE TOKEN_SOURCE;
typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;
typedef enum _TOKEN_TYPE TOKEN_TYPE;
typedef struct _TOKEN_USER TOKEN_USER;
typedef struct _TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON;
typedef struct _TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON_V3;
typedef struct _TP_CALLBACK_INSTANCE TP_CALLBACK_INSTANCE;
typedef enum _TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY;
typedef struct _TP_CLEANUP_GROUP TP_CLEANUP_GROUP;
typedef struct _TP_POOL TP_POOL;
typedef DWORD TP_VERSION;
typedef struct _TP_WORK TP_WORK;
typedef struct _TRIVERTEX TRIVERTEX;
typedef struct tagTTPOLYCURVE TTPOLYCURVE;
typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;
typedef struct _TYPE1_FONT TYPE1_FONT;
typedef unsigned __int8 UCHAR;
typedef unsigned int UCSCHAR;
typedef unsigned __int16 UHALF_PTR;
typedef unsigned int UINT;
typedef unsigned __int16 UINT16;
typedef unsigned int UINT32;
typedef unsigned __int64 UINT64;
typedef unsigned __int8 UINT8;
typedef unsigned int UINT_PTR;
typedef union _ULARGE_INTEGER ULARGE_INTEGER;
typedef unsigned int ULONG;
typedef unsigned int ULONG32;
typedef unsigned __int64 ULONG64;
typedef unsigned __int64 ULONGLONG;
typedef unsigned int ULONG_PTR;
typedef struct _UNICODE_PREFIX_TABLE UNICODE_PREFIX_TABLE;
typedef struct _UNICODE_PREFIX_TABLE_ENTRY UNICODE_PREFIX_TABLE_ENTRY;
typedef struct _UNICODE_STRING UNICODE_STRING;
typedef struct _STRING32 UNICODE_STRING32;
typedef struct _STRING64 UNICODE_STRING64;
typedef struct _UNIQUE_PROCESS_INFORMATION UNIQUE_PROCESS_INFORMATION;
typedef unsigned __int16 USHORT;
typedef LONGLONG USN;
typedef struct _VdmIcaUserData VDMICAUSERDATA;
typedef enum _VDMSERVICECLASS VDMSERVICECLASS;
typedef struct _VdmVirtualIca VDMVIRTUALICA;
typedef struct _VDM_INITIALIZE_DATA VDM_INITIALIZE_DATA;
typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;
typedef enum _VF_FAILURE_CLASS VF_FAILURE_CLASS;
typedef enum _VF_OBJECT_TYPE VF_OBJECT_TYPE;
typedef struct _VIDEOMEMORY VIDEOMEMORY;
typedef struct _VIDEOMEMORYINFO VIDEOMEMORYINFO;
typedef struct _VM_COUNTERS VM_COUNTERS;
typedef struct _VM_COUNTERS_EX VM_COUNTERS_EX;
typedef struct $D890D4C8B96B04D8C981ECF31CD55F01 VOLUME_BITMAP_BUFFER;
typedef struct _VOLUME_DISK_EXTENTS VOLUME_DISK_EXTENTS;
typedef void (__stdcall *WAITORTIMERCALLBACKFUNC)(PVOID, BOOLEAN);
typedef enum _WAIT_TYPE WAIT_TYPE;
typedef wchar_t WCHAR;
typedef struct tagWCRANGE WCRANGE;
typedef struct _WCRUN WCRUN;
typedef enum _WELL_KNOWN_SID_TYPE WELL_KNOWN_SID_TYPE;
typedef struct _WGLSWAP WGLSWAP;
typedef int WINBOOL;
typedef struct _WNDOBJ WNDOBJ;
typedef void (__stdcall *WNDOBJCHANGEPROC)(WNDOBJ *pwo, FLONG fl);
typedef unsigned __int16 WORD;
typedef void (__stdcall *WORKERCALLBACKFUNC)(PVOID);
typedef UINT_PTR WPARAM;
typedef struct _XFORM XFORM;
typedef struct _XFORML XFORML;
typedef struct _XFORMOBJ XFORMOBJ;
typedef struct _XLATEOBJ XLATEOBJ;
struct _ABC {int abcA;UINT abcB;int abcC;};
struct _ABCFLOAT {FLOAT abcfA;FLOAT abcfB;FLOAT abcfC;};
struct _ACCESS_ALLOWED_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _ACCESS_ALLOWED_CALLBACK_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _ACCESS_ALLOWED_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _ACCESS_DENIED_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _ACCESS_DENIED_CALLBACK_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _ACCESS_DENIED_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _ACCESS_REASONS {ACCESS_REASON Data[32];};
enum _ACCESS_REASON_TYPE {AccessReasonNone = 0x0,AccessReasonAllowedAce = 0x10000,AccessReasonDeniedAce = 0x20000,AccessReasonAllowedParentAce = 0x30000,AccessReasonDeniedParentAce = 0x40000,AccessReasonMissingPrivilege = 0x100000,AccessReasonFromPrivilege = 0x200000,AccessReasonIntegrityLevel = 0x300000,AccessReasonOwnership = 0x400000,AccessReasonNullDacl = 0x500000,AccessReasonEmptyDacl = 0x600000,AccessReasonNoSD = 0x700000,AccessReasonNoGrant = 0x800000,};
struct _ACE {ACE_HEADER Header;ACCESS_MASK AccessMask;};
struct _ACE_HEADER {BYTE AceType;BYTE AceFlags;WORD AceSize;};
struct _ACL {BYTE AclRevision;BYTE Sbz1;WORD AclSize;WORD AceCount;WORD Sbz2;};
enum _ACL_INFORMATION_CLASS {AclRevisionInformation = 0x1,AclSizeInformation = 0x2,};
struct _ACL_REVISION_INFORMATION {DWORD AclRevision;};
struct _ACL_SIZE_INFORMATION {DWORD AceCount;DWORD AclBytesInUse;DWORD AclBytesFree;};
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {DWORD ulFlags;DWORD ulEncodedAssemblyIdentityLength;DWORD ulManifestPathType;DWORD ulManifestPathLength;LARGE_INTEGER liManifestLastWriteTime;DWORD ulPolicyPathType;DWORD ulPolicyPathLength;LARGE_INTEGER liPolicyLastWriteTime;DWORD ulMetadataSatelliteRosterIndex;DWORD ulManifestVersionMajor;DWORD ulManifestVersionMinor;DWORD ulPolicyVersionMajor;DWORD ulPolicyVersionMinor;DWORD ulAssemblyDirectoryNameLength;PCWSTR lpAssemblyEncodedAssemblyIdentity;PCWSTR lpAssemblyManifestPath;PCWSTR lpAssemblyPolicyPath;PCWSTR lpAssemblyDirectoryName;DWORD ulFileCount;};
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {DWORD ElementCount;COMPATIBILITY_CONTEXT_ELEMENT Elements[];};
struct _ACTIVATION_CONTEXT_DATA {ULONG Magic;ULONG HeaderSize;ULONG FormatVersion;ULONG TotalSize;ULONG DefaultTocOffset;ULONG ExtendedTocOffset;ULONG AssemblyRosterOffset;ULONG Flags;};
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {DWORD dwFlags;DWORD ulFormatVersion;DWORD ulAssemblyCount;DWORD ulRootManifestPathType;DWORD ulRootManifestPathChars;DWORD ulRootConfigurationPathType;DWORD ulRootConfigurationPathChars;DWORD ulAppDirPathType;DWORD ulAppDirPathChars;PCWSTR lpRootManifestPath;PCWSTR lpRootConfigurationPath;PCWSTR lpAppDirPath;};
enum _ACTIVATION_CONTEXT_INFO_CLASS {ActivationContextBasicInformation = 0x1,ActivationContextDetailedInformation = 0x2,AssemblyDetailedInformationInActivationContext = 0x3,FileInformationInAssemblyOfAssemblyInActivationContext = 0x4,RunlevelInformationInActivationContext = 0x5,CompatibilityInformationInActivationContext = 0x6,ActivationContextManifestResourceName = 0x7,MaxActivationContextInfoClass = 0x8,AssemblyDetailedInformationInActivationContxt = 0x3,FileInformationInAssemblyOfAssemblyInActivationContxt = 0x4,};
struct _ACTIVATION_CONTEXT_QUERY_INDEX {DWORD ulAssemblyIndex;DWORD ulFileIndexInAssembly;};
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {DWORD ulFlags;ACTCTX_REQUESTED_RUN_LEVEL RunLevel;DWORD UiAccess;};
struct _ACTIVATION_CONTEXT_STACK {struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;LIST_ENTRY FrameListCache;ULONG Flags;ULONG NextCookieSequenceNumber;ULONG StackId;};
struct _ACTIVATION_CONTEXT_STACK_FRAMELIST {ULONG Magic;ULONG FramesInUse;LIST_ENTRY Links;ULONG Flags;ULONG NotFramesInUse;RTL_HEAP_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME Frames[32];};
enum _ADJUST_REASON {AdjustNone = 0x0,AdjustUnwait = 0x1,AdjustBoost = 0x2,};
struct _ADMINISTRATOR_POWER_POLICY {SYSTEM_POWER_STATE MinSleep;SYSTEM_POWER_STATE MaxSleep;DWORD MinVideoTimeout;DWORD MaxVideoTimeout;DWORD MinSpindownTimeout;DWORD MaxSpindownTimeout;};
enum _ALTERNATIVE_ARCHITECTURE_TYPE {StandardDesign = 0x0,NEC98x86 = 0x1,EndAlternatives = 0x2,};
struct _ALT_RESOURCE_MODULE {LANGID LangId;PVOID ModuleBase;PVOID ModuleManifest;PVOID AlternateModule;HANDLE AlternateFileHandle;ULONG ModuleCheckSum;ULONG ErrorCode;};
enum _APPCOMPAT_FLAGS {GetShortPathNameNT4 = 0x1,GetDiskFreeSpace2GB = 0x8,FTMFromCurrentAPI = 0x20,DisallowCOMBindingNotifications = 0x40,Ole32ValidatePointers = 0x80,DisableCicero = 0x100,Ole32EnableAsyncDocFile = 0x200,EnableLegacyExceptionHandlinginOLE = 0x400,DisableAdvanceRPCClientHardening = 0x800,DisableMaybeNULLSizeisConsistencycheck = 0x1000,DisableAdvancedRPCrangeCheck = 0x4000,EnableLegacyExceptionHandlingInRPC = 0x8000,EnableLegacyNTFSFlagsForDocfileOpens = 0x10000,DisableNDRIIDConsistencyCheck = 0x20000,UserDisableForwarderPatch = 0x40000,DisableNewWMPAINTDispatchInOLE = 0x100000,DoNotAddToCache = 0x80000000,};
enum _APPCOMPAT_USERFLAGS {DisableAnimation = 0x1,DisableKeyboardCues = 0x2,No50StylebitsInSetWindowLong = 0x4,DisableDrawPatternRect = 0x8,MSShellDialog = 0x10,NoDDETerminateDuringDestroy = 0x20,GiveupForeground = 0x40,AlwaysActiveMenus = 0x80,NoMouseHideInEdit = 0x100,NoGdiBatching = 0x200,FontSubstitution = 0x400,No50StylebitsInCreateWindow = 0x800,NoCustomPaperSizes = 0x1000,AllTheDdeHacks = 0x2000,UseDefaultCharset = 0x4000,NoCharDeadKey = 0x8000,NoTryExceptForWindowProc = 0x10000,NoInitInsertReplaceFlags = 0x20000,NoDdeSync = 0x40000,NoGhost = 0x80000,NoDdeAsyncReg = 0x100000,StrictLLHook = 0x200000,NoShadow = 0x400000,NoTimerCallbackProtection = 0x1000000,HighDpiAware = 0x2000000,OpenGLEmfAware = 0x4000000,EnableTransparantBltMirror = 0x8000000,NoPaddedBorder = 0x10000000,ForceLegacyResizeCM = 0x20000000,HardwareAudioMixer = 0x40000000,DisableSWCursorOnMoveSize = 0x80000000,};
enum _APPCOMPAT_USERFLAGS_HIGHPART {DisableWindowArrangement = 0x1,ReorderWaveForCommunications = 0x2,NoGdiHwAcceleration = 0x4,};
enum _APPHELPCACHESERVICECLASS {ApphelpCacheServiceLookup = 0x0,ApphelpCacheServiceRemove = 0x1,ApphelpCacheServiceUpdate = 0x2,ApphelpCacheServiceFlush = 0x3,ApphelpCacheServiceDump = 0x4,ApphelpDBGReadRegistry = 0x100,ApphelpDBGWriteRegistry = 0x101,};
struct _APPHELP_CACHE_SERVICE_LOOKUP {UNICODE_STRING ImageName;HANDLE ImageHandle;};
struct _ASSEMBLY_FILE_DETAILED_INFORMATION {DWORD ulFlags;DWORD ulFilenameLength;DWORD ulPathLength;PCWSTR lpFileName;PCWSTR lpFilePath;};
struct _ATOM_BASIC_INFORMATION {USHORT UsageCount;USHORT Flags;USHORT NameLength;WCHAR Name[1];};
enum _ATOM_INFORMATION_CLASS {AtomBasicInformation = 0x0,AtomTableInformation = 0x1,};
struct _ATOM_TABLE_INFORMATION {ULONG NumberOfAtoms;USHORT Atoms[1];};
enum _AUDIT_EVENT_TYPE {AuditEventObjectAccess = 0x0,AuditEventDirectoryServiceAccess = 0x1,};
struct _AXESLISTA {DWORD axlReserved;DWORD axlNumAxes;AXISINFOA axlAxisInfo[16];};
struct _AXESLISTW {DWORD axlReserved;DWORD axlNumAxes;AXISINFOW axlAxisInfo[16];};
struct _AXISINFOA {LONG axMinValue;LONG axMaxValue;BYTE axAxisName[16];};
struct _AXISINFOW {LONG axMinValue;LONG axMaxValue;WCHAR axAxisName[16];};
struct _BIN_COUNT {BIN_RANGE BinRange;DWORD BinCount;};
struct _BIN_RANGE {LARGE_INTEGER StartValue;LARGE_INTEGER Length;};
struct _BIN_RESULTS {DWORD NumberOfBins;BIN_COUNT BinCounts[1];};
enum _BIN_TYPES {RequestSize = 0x0,RequestLocation = 0x1,};
struct _BITMAPCOREINFO {BITMAPCOREHEADER bmciHeader;RGBTRIPLE bmciColors[1];};
struct _BLENDFUNCTION {BYTE BlendOp;BYTE BlendFlags;BYTE SourceConstantAlpha;BYTE AlphaFormat;};
struct _BLENDOBJ {BLENDFUNCTION BlendFunction;};
struct _BOOT_ENTRY {ULONG Version;ULONG Length;ULONG Id;ULONG Attributes;ULONG FriendlyNameOffset;ULONG BootFilePathOffset;ULONG OsOptionsLength;CHAR OsOptions[1];};
struct _BOOT_OPTIONS {ULONG Version;ULONG Length;ULONG Timeout;ULONG CurrentBootEntryId;ULONG NextBootEntryId;WCHAR HeadlessRedirection[1];};
struct _BRUSHOBJ {ULONG iSolidColor;PVOID pvRbrush;FLONG flColorType;};
enum _BUS_DATA_TYPE {ConfigurationSpaceUndefined = 0xFFFFFFFF,Cmos = 0x0,EisaConfiguration = 0x1,Pos = 0x2,CbusConfiguration = 0x3,PCIConfiguration = 0x4,VMEConfiguration = 0x5,NuBusConfiguration = 0x6,PCMCIAConfiguration = 0x7,MPIConfiguration = 0x8,MPSAConfiguration = 0x9,PNPISAConfiguration = 0xA,SgiInternalConfiguration = 0xB,MaximumBusDataType = 0xC,};
struct _CACHE_DESCRIPTOR {UCHAR Level;UCHAR Associativity;USHORT LineSize;ULONG Size;PROCESSOR_CACHE_TYPE Type;};
struct _CACHE_RELATIONSHIP {UCHAR Level;UCHAR Associativity;USHORT LineSize;ULONG CacheSize;PROCESSOR_CACHE_TYPE Type;UCHAR Reserved[20];GROUP_AFFINITY GroupMask;};
struct _CIECHROMA {LDECI4 x;LDECI4 y;LDECI4 Y;};
struct _CLIENT_DIED_MSG {PORT_MESSAGE h;LARGE_INTEGER CreateTime;};
struct _CLIENT_ID {HANDLE UniqueProcess;HANDLE UniqueThread;};
struct _CLIENT_ID32 {ULONG UniqueProcess;ULONG UniqueThread;};
struct _CLIENT_ID64 {ULONG64 UniqueProcess;ULONG64 UniqueThread;};
struct _CLIPLINE {POINTFIX ptfxA;POINTFIX ptfxB;LONG lStyleState;ULONG c;RUN arun[1];};
struct _CLIPOBJ {ULONG iUniq;RECTL rclBounds;BYTE iDComplexity;BYTE iFComplexity;BYTE iMode;BYTE fjOptions;};
struct _CM_DISK_GEOMETRY_DEVICE_DATA {ULONG BytesPerSector;ULONG NumberOfCylinders;ULONG SectorsPerTrack;ULONG NumberOfHeads;};
enum _CM_ERROR_CONTROL_TYPE {IgnoreError = 0x0,NormalError = 0x1,SevereError = 0x2,CriticalError = 0x3,};
struct _CM_FULL_RESOURCE_DESCRIPTOR {INTERFACE_TYPE InterfaceType;ULONG BusNumber;CM_PARTIAL_RESOURCE_LIST PartialResourceList;};
struct _CM_INT13_DRIVE_PARAMETER {USHORT DriveSelect;ULONG MaxCylinders;USHORT SectorsPerTrack;USHORT MaxHeads;USHORT NumberDrives;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR {UCHAR Type;UCHAR ShareDisposition;USHORT Flags;union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F u;};
union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$4320D89A9BBD0A464899BC45363B6444::$DE3CCB929DB832FEAC38EBA7195AFD95 {struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$D155ACCA6E988C466DB4311FB52073D0 Raw;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$BB7094CF39B58C60385FAAA7DFEE1197 Translated;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$BB7094CF39B58C60385FAAA7DFEE1197 {ULONG Level;ULONG Vector;KAFFINITY Affinity;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$D155ACCA6E988C466DB4311FB52073D0 {USHORT Reserved;USHORT MessageCount;ULONG Vector;KAFFINITY Affinity;};
union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F {struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 Generic;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 Port;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BB7094CF39B58C60385FAAA7DFEE1197 Interrupt;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$4320D89A9BBD0A464899BC45363B6444 MessageInterrupt;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 Memory;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$1F3D6AF14FC8FA95287DDF447D6BE47F Dma;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$D2EE30319AFD96435F4334D8E12C7935 BusNumber;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$6BF00F84A5C727E3B25245E9FBDFB278 DeviceSpecificData;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$EB36DC85652755C8EC8C69A205B736DB Memory40;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$08205AB7C2167E8C9C2BF0274334A928 Memory48;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$05881B79B3CAFBFC2EAF6FE4C8FAB51F Memory64;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$05881B79B3CAFBFC2EAF6FE4C8FAB51F {PHYSICAL_ADDRESS Start;ULONG Length64;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$08205AB7C2167E8C9C2BF0274334A928 {PHYSICAL_ADDRESS Start;ULONG Length48;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$1F3D6AF14FC8FA95287DDF447D6BE47F {ULONG Channel;ULONG Port;ULONG Reserved1;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$4320D89A9BBD0A464899BC45363B6444 {union {struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$D155ACCA6E988C466DB4311FB52073D0 Raw;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$BB7094CF39B58C60385FAAA7DFEE1197 Translated;};};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$6BF00F84A5C727E3B25245E9FBDFB278 {ULONG DataSize;ULONG Reserved1;ULONG Reserved2;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$812F79A5FC2BE6FE62CE9F41854F4845 {ULONG Data[3];};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BB7094CF39B58C60385FAAA7DFEE1197 {ULONG Level;ULONG Vector;KAFFINITY Affinity;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 {PHYSICAL_ADDRESS Start;ULONG Length;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$D2EE30319AFD96435F4334D8E12C7935 {ULONG Start;ULONG Length;ULONG Reserved;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$EB36DC85652755C8EC8C69A205B736DB {PHYSICAL_ADDRESS Start;ULONG Length40;};
struct _CM_PARTIAL_RESOURCE_LIST {USHORT Version;USHORT Revision;ULONG Count;CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];};
struct _CM_RESOURCE_LIST {ULONG Count;CM_FULL_RESOURCE_DESCRIPTOR List[1];};
struct _CM_ROM_BLOCK {ULONG Address;ULONG Size;};
enum _CM_SERVICE_LOAD_TYPE {BootLoad = 0x0,SystemLoad = 0x1,AutoLoad = 0x2,DemandLoad = 0x3,DisableLoad = 0x4,};
enum _CM_SERVICE_NODE_TYPE {DriverType = 0x1,FileSystemType = 0x2,Win32ServiceOwnProcess = 0x10,Win32ServiceShareProcess = 0x20,AdapterType = 0x4,RecognizerType = 0x8,};
enum _CM_SHARE_DISPOSITION {CmResourceShareUndetermined = 0x0,CmResourceShareDeviceExclusive = 0x1,CmResourceShareDriverExclusive = 0x2,CmResourceShareShared = 0x3,};
struct _COLORINFO {CIECHROMA Red;CIECHROMA Green;CIECHROMA Blue;CIECHROMA Cyan;CIECHROMA Magenta;CIECHROMA Yellow;CIECHROMA AlignmentWhite;LDECI4 RedGamma;LDECI4 GreenGamma;LDECI4 BlueGamma;LDECI4 MagentaInCyanDye;LDECI4 YellowInCyanDye;LDECI4 CyanInMagentaDye;LDECI4 YellowInMagentaDye;LDECI4 CyanInYellowDye;LDECI4 MagentaInYellowDye;};
struct _COMPATIBILITY_CONTEXT_ELEMENT {GUID Id;ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;};
struct _COMPRESSED_DATA_INFO {USHORT CompressionFormatAndEngine;UCHAR CompressionUnitShift;UCHAR ChunkShift;UCHAR ClusterShift;UCHAR Reserved;USHORT NumberOfChunks;ULONG CompressedChunkSizes[1];};
struct _CONTEXT {DWORD ContextFlags;DWORD Dr0;DWORD Dr1;DWORD Dr2;DWORD Dr3;DWORD Dr6;DWORD Dr7;FLOATING_SAVE_AREA FloatSave;DWORD SegGs;DWORD SegFs;DWORD SegEs;DWORD SegDs;DWORD Edi;DWORD Esi;DWORD Ebx;DWORD Edx;DWORD Ecx;DWORD Eax;DWORD Ebp;DWORD Eip;DWORD SegCs;DWORD EFlags;DWORD Esp;DWORD SegSs;BYTE ExtendedRegisters[512];};
struct _CPTABLEINFO {USHORT CodePage;USHORT MaximumCharacterSize;USHORT DefaultChar;USHORT UniDefaultChar;USHORT TransDefaultChar;USHORT TransUniDefaultChar;USHORT DBCSCodePage;UCHAR LeadByte[12];PUSHORT MultiByteTable;PVOID WideCharTable;PUSHORT DBCSRanges;PUSHORT DBCSOffsets;};
struct _CSR_CAPTURE_BUFFER {ULONG Size;struct _CSR_CAPTURE_BUFFER *PreviousCaptureBuffer;ULONG PointerCount;PVOID BufferEnd;ULONG_PTR PointerOffsetsArray[1];};
struct _CSTRING {USHORT Length;USHORT MaximumLength;const CHAR *Buffer;};
struct _CURDIR {UNICODE_STRING DosPath;HANDLE Handle;};
enum _D3DANTIALIASMODE {D3DANTIALIAS_NONE = 0x0,D3DANTIALIAS_SORTDEPENDENT = 0x1,D3DANTIALIAS_SORTINDEPENDENT = 0x2,D3DANTIALIAS_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DBRANCH {DWORD dwMask;DWORD dwValue;BOOL bNegate;DWORD dwOffset;};
struct _D3DCLIPSTATUS {DWORD dwFlags;DWORD dwStatus;float minx;float maxx;float miny;float maxy;float minz;float maxz;};
struct _D3DCOLORVALUE {union {D3DVALUE r;D3DVALUE dvR;};union {D3DVALUE g;D3DVALUE dvG;};union {D3DVALUE b;D3DVALUE dvB;};union {D3DVALUE a;D3DVALUE dvA;};};
union _D3DCOLORVALUE::$1870E08CD1297AF1183F2104CF0E68BB {D3DVALUE g;D3DVALUE dvG;};
union _D3DCOLORVALUE::$5FBE30F4B5EDEA02F5A8FF631684CD5C {D3DVALUE a;D3DVALUE dvA;};
union _D3DCOLORVALUE::$79F58B462609A8478E0156545A48EE38 {D3DVALUE r;D3DVALUE dvR;};
union _D3DCOLORVALUE::$89D0C02BD3EDF7E42F4E64602AB90C16 {D3DVALUE b;D3DVALUE dvB;};
enum _D3DDDIFORMAT {D3DDDIFMT_UNKNOWN = 0x0,D3DDDIFMT_R8G8B8 = 0x14,D3DDDIFMT_A8R8G8B8 = 0x15,D3DDDIFMT_X8R8G8B8 = 0x16,D3DDDIFMT_R5G6B5 = 0x17,D3DDDIFMT_X1R5G5B5 = 0x18,D3DDDIFMT_A1R5G5B5 = 0x19,D3DDDIFMT_A4R4G4B4 = 0x1A,D3DDDIFMT_R3G3B2 = 0x1B,D3DDDIFMT_A8 = 0x1C,D3DDDIFMT_A8R3G3B2 = 0x1D,D3DDDIFMT_X4R4G4B4 = 0x1E,D3DDDIFMT_A2B10G10R10 = 0x1F,D3DDDIFMT_A8B8G8R8 = 0x20,D3DDDIFMT_X8B8G8R8 = 0x21,D3DDDIFMT_G16R16 = 0x22,D3DDDIFMT_A2R10G10B10 = 0x23,D3DDDIFMT_A16B16G16R16 = 0x24,D3DDDIFMT_A8P8 = 0x28,D3DDDIFMT_P8 = 0x29,D3DDDIFMT_L8 = 0x32,D3DDDIFMT_A8L8 = 0x33,D3DDDIFMT_A4L4 = 0x34,D3DDDIFMT_V8U8 = 0x3C,D3DDDIFMT_L6V5U5 = 0x3D,D3DDDIFMT_X8L8V8U8 = 0x3E,D3DDDIFMT_Q8W8V8U8 = 0x3F,D3DDDIFMT_V16U16 = 0x40,D3DDDIFMT_W11V11U10 = 0x41,D3DDDIFMT_A2W10V10U10 = 0x43,D3DDDIFMT_D16_LOCKABLE = 0x46,D3DDDIFMT_D32 = 0x47,D3DDDIFMT_S1D15 = 0x48,D3DDDIFMT_D15S1 = 0x49,D3DDDIFMT_S8D24 = 0x4A,D3DDDIFMT_D24S8 = 0x4B,D3DDDIFMT_X8D24 = 0x4C,D3DDDIFMT_D24X8 = 0x4D,D3DDDIFMT_X4S4D24 = 0x4E,D3DDDIFMT_D24X4S4 = 0x4F,D3DDDIFMT_D16 = 0x50,D3DDDIFMT_L16 = 0x51,D3DDDIFMT_D32F_LOCKABLE = 0x52,D3DDDIFMT_D24FS8 = 0x53,D3DDDIFMT_D32_LOCKABLE = 0x54,D3DDDIFMT_S8_LOCKABLE = 0x55,D3DDDIFMT_G8R8 = 0x5B,D3DDDIFMT_R8 = 0x5C,D3DDDIFMT_VERTEXDATA = 0x64,D3DDDIFMT_INDEX16 = 0x65,D3DDDIFMT_INDEX32 = 0x66,D3DDDIFMT_Q16W16V16U16 = 0x6E,D3DDDIFMT_R16F = 0x6F,D3DDDIFMT_G16R16F = 0x70,D3DDDIFMT_A16B16G16R16F = 0x71,D3DDDIFMT_R32F = 0x72,D3DDDIFMT_G32R32F = 0x73,D3DDDIFMT_A32B32G32R32F = 0x74,D3DDDIFMT_CxV8U8 = 0x75,D3DDDIFMT_A1 = 0x76,D3DDDIFMT_A2B10G10R10_XR_BIAS = 0x77,D3DDDIFMT_DXVACOMPBUFFER_BASE = 0x96,D3DDDIFMT_PICTUREPARAMSDATA = 0x96,D3DDDIFMT_MACROBLOCKDATA = 0x97,D3DDDIFMT_RESIDUALDIFFERENCEDATA = 0x98,D3DDDIFMT_DEBLOCKINGDATA = 0x99,D3DDDIFMT_INVERSEQUANTIZATIONDATA = 0x9A,D3DDDIFMT_SLICECONTROLDATA = 0x9B,D3DDDIFMT_BITSTREAMDATA = 0x9C,D3DDDIFMT_MOTIONVECTORBUFFER = 0x9D,D3DDDIFMT_FILMGRAINBUFFER = 0x9E,D3DDDIFMT_DXVA_RESERVED9 = 0x9F,D3DDDIFMT_DXVA_RESERVED10 = 0xA0,D3DDDIFMT_DXVA_RESERVED11 = 0xA1,D3DDDIFMT_DXVA_RESERVED12 = 0xA2,D3DDDIFMT_DXVA_RESERVED13 = 0xA3,D3DDDIFMT_DXVA_RESERVED14 = 0xA4,D3DDDIFMT_DXVA_RESERVED15 = 0xA5,D3DDDIFMT_DXVA_RESERVED16 = 0xA6,D3DDDIFMT_DXVA_RESERVED17 = 0xA7,D3DDDIFMT_DXVA_RESERVED18 = 0xA8,D3DDDIFMT_DXVA_RESERVED19 = 0xA9,D3DDDIFMT_DXVA_RESERVED20 = 0xAA,D3DDDIFMT_DXVA_RESERVED21 = 0xAB,D3DDDIFMT_DXVA_RESERVED22 = 0xAC,D3DDDIFMT_DXVA_RESERVED23 = 0xAD,D3DDDIFMT_DXVA_RESERVED24 = 0xAE,D3DDDIFMT_DXVA_RESERVED25 = 0xAF,D3DDDIFMT_DXVA_RESERVED26 = 0xB0,D3DDDIFMT_DXVA_RESERVED27 = 0xB1,D3DDDIFMT_DXVA_RESERVED28 = 0xB2,D3DDDIFMT_DXVA_RESERVED29 = 0xB3,D3DDDIFMT_DXVA_RESERVED30 = 0xB4,D3DDDIFMT_DXVA_RESERVED31 = 0xB5,D3DDDIFMT_DXVACOMPBUFFER_MAX = 0xB5,D3DDDIFMT_BINARYBUFFER = 0xC7,D3DDDIFMT_DXT1 = 0x31545844,D3DDDIFMT_DXT2 = 0x32545844,D3DDDIFMT_DXT3 = 0x33545844,D3DDDIFMT_DXT4 = 0x34545844,D3DDDIFMT_DXT5 = 0x35545844,D3DDDIFMT_G8R8_G8B8 = 0x42475247,D3DDDIFMT_MULTI2_ARGB8 = 0x3154454D,D3DDDIFMT_R8G8_B8G8 = 0x47424752,D3DDDIFMT_UYVY = 0x59565955,D3DDDIFMT_YUY2 = 0x32595559,D3DDDIFMT_FORCE_UINT = 0x7FFFFFFF,};
struct _D3DDEVINFO_TEXTUREMANAGER {BOOL bThrashing;DWORD dwApproxBytesDownloaded;DWORD dwNumEvicts;DWORD dwNumVidCreates;DWORD dwNumTexturesUsed;DWORD dwNumUsedTexInVid;DWORD dwWorkingSet;DWORD dwWorkingSetBytes;DWORD dwTotalManaged;DWORD dwTotalBytes;DWORD dwLastPri;};
struct _D3DDEVINFO_TEXTURING {DWORD dwNumLoads;DWORD dwApproxBytesLoaded;DWORD dwNumPreLoads;DWORD dwNumSet;DWORD dwNumCreates;DWORD dwNumDestroys;DWORD dwNumSetPriorities;DWORD dwNumSetLODs;DWORD dwNumLocks;DWORD dwNumGetDCs;};
struct _D3DDP_PTRSTRIDE {void *lpvData;DWORD dwStride;};
struct _D3DDRAWPRIMITIVESTRIDEDDATA {D3DDP_PTRSTRIDE position;D3DDP_PTRSTRIDE normal;D3DDP_PTRSTRIDE diffuse;D3DDP_PTRSTRIDE specular;D3DDP_PTRSTRIDE textureCoords[8];};
struct _D3DDeviceDesc {DWORD dwSize;DWORD dwFlags;D3DCOLORMODEL dcmColorModel;DWORD dwDevCaps;D3DTRANSFORMCAPS dtcTransformCaps;BOOL bClipping;D3DLIGHTINGCAPS dlcLightingCaps;D3DPRIMCAPS dpcLineCaps;D3DPRIMCAPS dpcTriCaps;DWORD dwDeviceRenderBitDepth;DWORD dwDeviceZBufferBitDepth;DWORD dwMaxBufferSize;DWORD dwMaxVertexCount;DWORD dwMinTextureWidth;DWORD dwMinTextureHeight;DWORD dwMaxTextureWidth;DWORD dwMaxTextureHeight;DWORD dwMinStippleWidth;DWORD dwMaxStippleWidth;DWORD dwMinStippleHeight;DWORD dwMaxStippleHeight;DWORD dwMaxTextureRepeat;DWORD dwMaxTextureAspectRatio;DWORD dwMaxAnisotropy;D3DVALUE dvGuardBandLeft;D3DVALUE dvGuardBandTop;D3DVALUE dvGuardBandRight;D3DVALUE dvGuardBandBottom;D3DVALUE dvExtentsAdjust;DWORD dwStencilCaps;DWORD dwFVFCaps;DWORD dwTextureOpCaps;WORD wMaxTextureBlendStages;WORD wMaxSimultaneousTextures;};
struct _D3DDeviceDesc1 {DWORD dwSize;DWORD dwFlags;D3DCOLORMODEL dcmColorModel;DWORD dwDevCaps;D3DTRANSFORMCAPS dtcTransformCaps;BOOL bClipping;D3DLIGHTINGCAPS dlcLightingCaps;D3DPRIMCAPS dpcLineCaps;D3DPRIMCAPS dpcTriCaps;DWORD dwDeviceRenderBitDepth;DWORD dwDeviceZBufferBitDepth;DWORD dwMaxBufferSize;DWORD dwMaxVertexCount;};
struct _D3DDeviceDesc2 {DWORD dwSize;DWORD dwFlags;D3DCOLORMODEL dcmColorModel;DWORD dwDevCaps;D3DTRANSFORMCAPS dtcTransformCaps;BOOL bClipping;D3DLIGHTINGCAPS dlcLightingCaps;D3DPRIMCAPS dpcLineCaps;D3DPRIMCAPS dpcTriCaps;DWORD dwDeviceRenderBitDepth;DWORD dwDeviceZBufferBitDepth;DWORD dwMaxBufferSize;DWORD dwMaxVertexCount;DWORD dwMinTextureWidth;DWORD dwMinTextureHeight;DWORD dwMaxTextureWidth;DWORD dwMaxTextureHeight;DWORD dwMinStippleWidth;DWORD dwMaxStippleWidth;DWORD dwMinStippleHeight;DWORD dwMaxStippleHeight;};
struct _D3DDeviceDesc7 {DWORD dwDevCaps;D3DPRIMCAPS dpcLineCaps;D3DPRIMCAPS dpcTriCaps;DWORD dwDeviceRenderBitDepth;DWORD dwDeviceZBufferBitDepth;DWORD dwMinTextureWidth;DWORD dwMinTextureHeight;DWORD dwMaxTextureWidth;DWORD dwMaxTextureHeight;DWORD dwMaxTextureRepeat;DWORD dwMaxTextureAspectRatio;DWORD dwMaxAnisotropy;D3DVALUE dvGuardBandLeft;D3DVALUE dvGuardBandTop;D3DVALUE dvGuardBandRight;D3DVALUE dvGuardBandBottom;D3DVALUE dvExtentsAdjust;DWORD dwStencilCaps;DWORD dwFVFCaps;DWORD dwTextureOpCaps;WORD wMaxTextureBlendStages;WORD wMaxSimultaneousTextures;DWORD dwMaxActiveLights;D3DVALUE dvMaxVertexW;GUID deviceGUID;WORD wMaxUserClipPlanes;WORD wMaxVertexBlendMatrices;DWORD dwVertexProcessingCaps;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;DWORD dwReserved4;};
struct _D3DEXECUTEDATA {DWORD dwSize;DWORD dwVertexOffset;DWORD dwVertexCount;DWORD dwInstructionOffset;DWORD dwInstructionLength;DWORD dwHVertexOffset;D3DSTATUS dsStatus;};
struct _D3DExecuteBufferDesc {DWORD dwSize;DWORD dwFlags;DWORD dwCaps;DWORD dwBufferSize;LPVOID lpData;};
struct _D3DFINDDEVICERESULT {DWORD dwSize;GUID guid;D3DDEVICEDESC ddHwDesc;D3DDEVICEDESC ddSwDesc;};
struct _D3DFINDDEVICERESULT1 {DWORD dwSize;GUID guid;D3DDEVICEDESC1 ddHwDesc;D3DDEVICEDESC1 ddSwDesc;};
struct _D3DFINDDEVICERESULT2 {DWORD dwSize;GUID guid;D3DDEVICEDESC2 ddHwDesc;D3DDEVICEDESC2 ddSwDesc;};
struct _D3DFINDDEVICESEARCH {DWORD dwSize;DWORD dwFlags;BOOL bHardware;D3DCOLORMODEL dcmColorModel;GUID guid;DWORD dwCaps;D3DPRIMCAPS dpcPrimCaps;};
enum _D3DFOGMODE {D3DFOG_NONE = 0x0,D3DFOG_EXP = 0x1,D3DFOG_EXP2 = 0x2,D3DFOG_LINEAR = 0x3,D3DFOG_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DHVERTEX {DWORD dwFlags;union {D3DVALUE hx;D3DVALUE dvHX;};union {D3DVALUE hy;D3DVALUE dvHY;};union {D3DVALUE hz;D3DVALUE dvHZ;};};
union _D3DHVERTEX::$422DE5A9C9FEBBB756750EDCDEE4D165 {D3DVALUE hz;D3DVALUE dvHZ;};
union _D3DHVERTEX::$81DEDA9DF6ACB3C44C422FDD657F648D {D3DVALUE hx;D3DVALUE dvHX;};
union _D3DHVERTEX::$D02C4950DEF26FBAA94C7BFFD90117CD {D3DVALUE hy;D3DVALUE dvHY;};
struct _D3DINSTRUCTION {BYTE bOpcode;BYTE bSize;WORD wCount;};
struct _D3DKMT_CREATEDCFROMMEMORY {void *pMemory;D3DDDIFORMAT Format;UINT Width;UINT Height;UINT Pitch;HDC hDeviceDc;PALETTEENTRY *pColorTable;HDC hDc;HANDLE hBitmap;};
struct _D3DKMT_DESTROYDCFROMMEMORY {HDC hDc;HANDLE hBitmap;};
struct _D3DLIGHT {DWORD dwSize;D3DLIGHTTYPE dltType;D3DCOLORVALUE dcvColor;D3DVECTOR dvPosition;D3DVECTOR dvDirection;D3DVALUE dvRange;D3DVALUE dvFalloff;D3DVALUE dvAttenuation0;D3DVALUE dvAttenuation1;D3DVALUE dvAttenuation2;D3DVALUE dvTheta;D3DVALUE dvPhi;};
struct _D3DLIGHT2 {DWORD dwSize;D3DLIGHTTYPE dltType;D3DCOLORVALUE dcvColor;D3DVECTOR dvPosition;D3DVECTOR dvDirection;D3DVALUE dvRange;D3DVALUE dvFalloff;D3DVALUE dvAttenuation0;D3DVALUE dvAttenuation1;D3DVALUE dvAttenuation2;D3DVALUE dvTheta;D3DVALUE dvPhi;DWORD dwFlags;};
struct _D3DLIGHT7 {D3DLIGHTTYPE dltType;D3DCOLORVALUE dcvDiffuse;D3DCOLORVALUE dcvSpecular;D3DCOLORVALUE dcvAmbient;D3DVECTOR dvPosition;D3DVECTOR dvDirection;D3DVALUE dvRange;D3DVALUE dvFalloff;D3DVALUE dvAttenuation0;D3DVALUE dvAttenuation1;D3DVALUE dvAttenuation2;D3DVALUE dvTheta;D3DVALUE dvPhi;};
struct _D3DLIGHTDATA {DWORD dwSize;D3DLIGHTINGELEMENT *lpIn;DWORD dwInSize;D3DTLVERTEX *lpOut;DWORD dwOutSize;};
struct _D3DLIGHTINGCAPS {DWORD dwSize;DWORD dwCaps;DWORD dwLightingModel;DWORD dwNumLights;};
struct _D3DLIGHTINGELEMENT {D3DVECTOR dvPosition;D3DVECTOR dvNormal;};
struct _D3DLINE {union {WORD v1;WORD wV1;};union {WORD v2;WORD wV2;};};
union _D3DLINE::$5E81141D7147E4DA50A203FBA8012470 {WORD v2;WORD wV2;};
union _D3DLINE::$C167AD525C2A16158535093655B0BE27 {WORD v1;WORD wV1;};
struct _D3DLINEPATTERN {WORD wRepeatFactor;WORD wLinePattern;};
struct _D3DLVERTEX {union {D3DVALUE x;D3DVALUE dvX;};union {D3DVALUE y;D3DVALUE dvY;};union {D3DVALUE z;D3DVALUE dvZ;};DWORD dwReserved;union {D3DCOLOR color;D3DCOLOR dcColor;};union {D3DCOLOR specular;D3DCOLOR dcSpecular;};union {D3DVALUE tu;D3DVALUE dvTU;};union {D3DVALUE tv;D3DVALUE dvTV;};};
union _D3DLVERTEX::$2970DA2ECFB38188FCB670891BDDBDFA {D3DVALUE y;D3DVALUE dvY;};
union _D3DLVERTEX::$30594A6BB70EFF251680D22A869004B0 {D3DCOLOR specular;D3DCOLOR dcSpecular;};
union _D3DLVERTEX::$34D6BCDD47B44126D7A203197E7A8282 {D3DCOLOR color;D3DCOLOR dcColor;};
union _D3DLVERTEX::$3781A3F6A2280FF9BE972B852E87FD21 {D3DVALUE z;D3DVALUE dvZ;};
union _D3DLVERTEX::$681612F8DC6DDCA79CBEF9228C3A67A0 {D3DVALUE x;D3DVALUE dvX;};
union _D3DLVERTEX::$7013070F7992C3CB148910863AB1E659 {D3DVALUE tv;D3DVALUE dvTV;};
union _D3DLVERTEX::$F5EA273054A07BEACA92D8100BBF37A6 {D3DVALUE tu;D3DVALUE dvTU;};
struct _D3DMATERIAL {DWORD dwSize;union {D3DCOLORVALUE diffuse;D3DCOLORVALUE dcvDiffuse;};union {D3DCOLORVALUE ambient;D3DCOLORVALUE dcvAmbient;};union {D3DCOLORVALUE specular;D3DCOLORVALUE dcvSpecular;};union {D3DCOLORVALUE emissive;D3DCOLORVALUE dcvEmissive;};union {D3DVALUE power;D3DVALUE dvPower;};D3DTEXTUREHANDLE hTexture;DWORD dwRampSize;};
struct _D3DMATERIAL7 {union {D3DCOLORVALUE diffuse;D3DCOLORVALUE dcvDiffuse;};union {D3DCOLORVALUE ambient;D3DCOLORVALUE dcvAmbient;};union {D3DCOLORVALUE specular;D3DCOLORVALUE dcvSpecular;};union {D3DCOLORVALUE emissive;D3DCOLORVALUE dcvEmissive;};union {D3DVALUE power;D3DVALUE dvPower;};};
union _D3DMATERIAL7::$0E29CCD1ABCFA56B0343B217BB93547E {D3DVALUE power;D3DVALUE dvPower;};
union _D3DMATERIAL7::$48A7D73869B8DD97079A7DB0052C867A {D3DCOLORVALUE specular;D3DCOLORVALUE dcvSpecular;};
union _D3DMATERIAL7::$4E89CE7B3871A99DAB3B73BC63770FCE {D3DCOLORVALUE emissive;D3DCOLORVALUE dcvEmissive;};
union _D3DMATERIAL7::$B545799AB1B094EA7448ADA6B118C0D5 {D3DCOLORVALUE ambient;D3DCOLORVALUE dcvAmbient;};
union _D3DMATERIAL7::$F37024B6A2A7DA8F8161E452127F778F {D3DCOLORVALUE diffuse;D3DCOLORVALUE dcvDiffuse;};
union _D3DMATERIAL::$0E29CCD1ABCFA56B0343B217BB93547E {D3DVALUE power;D3DVALUE dvPower;};
union _D3DMATERIAL::$48A7D73869B8DD97079A7DB0052C867A {D3DCOLORVALUE specular;D3DCOLORVALUE dcvSpecular;};
union _D3DMATERIAL::$4E89CE7B3871A99DAB3B73BC63770FCE {D3DCOLORVALUE emissive;D3DCOLORVALUE dcvEmissive;};
union _D3DMATERIAL::$B545799AB1B094EA7448ADA6B118C0D5 {D3DCOLORVALUE ambient;D3DCOLORVALUE dcvAmbient;};
union _D3DMATERIAL::$F37024B6A2A7DA8F8161E452127F778F {D3DCOLORVALUE diffuse;D3DCOLORVALUE dcvDiffuse;};
enum _D3DMATERIALCOLORSOURCE {D3DMCS_MATERIAL = 0x0,D3DMCS_COLOR1 = 0x1,D3DMCS_COLOR2 = 0x2,D3DMCS_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DMATRIX {D3DVALUE _11;D3DVALUE _12;D3DVALUE _13;D3DVALUE _14;D3DVALUE _21;D3DVALUE _22;D3DVALUE _23;D3DVALUE _24;D3DVALUE _31;D3DVALUE _32;D3DVALUE _33;D3DVALUE _34;D3DVALUE _41;D3DVALUE _42;D3DVALUE _43;D3DVALUE _44;};
struct _D3DMATRIXLOAD {D3DMATRIXHANDLE hDestMatrix;D3DMATRIXHANDLE hSrcMatrix;};
struct _D3DMATRIXMULTIPLY {D3DMATRIXHANDLE hDestMatrix;D3DMATRIXHANDLE hSrcMatrix1;D3DMATRIXHANDLE hSrcMatrix2;};
struct _D3DNTHALDeviceDesc_V1 {DWORD dwSize;DWORD dwFlags;D3DCOLORMODEL dcmColorModel;DWORD dwDevCaps;D3DTRANSFORMCAPS dtcTransformCaps;BOOL bClipping;D3DLIGHTINGCAPS dlcLightingCaps;D3DPRIMCAPS dpcLineCaps;D3DPRIMCAPS dpcTriCaps;DWORD dwDeviceRenderBitDepth;DWORD dwDeviceZBufferBitDepth;DWORD dwMaxBufferSize;DWORD dwMaxVertexCount;};
struct _D3DNTHAL_CALLBACKS {DWORD dwSize;LPD3DNTHAL_CONTEXTCREATECB ContextCreate;LPD3DNTHAL_CONTEXTDESTROYCB ContextDestroy;LPD3DNTHAL_CONTEXTDESTROYALLCB ContextDestroyAll;LPD3DNTHAL_SCENECAPTURECB SceneCapture;LPVOID dwReserved10;LPVOID dwReserved11;LPVOID dwReserved22;LPVOID dwReserved23;ULONG_PTR dwReserved;LPD3DNTHAL_TEXTURECREATECB TextureCreate;LPD3DNTHAL_TEXTUREDESTROYCB TextureDestroy;LPD3DNTHAL_TEXTURESWAPCB TextureSwap;LPD3DNTHAL_TEXTUREGETSURFCB TextureGetSurf;LPVOID dwReserved12;LPVOID dwReserved13;LPVOID dwReserved14;LPVOID dwReserved15;LPVOID dwReserved16;LPVOID dwReserved17;LPVOID dwReserved18;LPVOID dwReserved19;LPVOID dwReserved20;LPVOID dwReserved21;LPVOID dwReserved24;ULONG_PTR dwReserved0;ULONG_PTR dwReserved1;ULONG_PTR dwReserved2;ULONG_PTR dwReserved3;ULONG_PTR dwReserved4;ULONG_PTR dwReserved5;ULONG_PTR dwReserved6;ULONG_PTR dwReserved7;ULONG_PTR dwReserved8;ULONG_PTR dwReserved9;};
struct _D3DNTHAL_CALLBACKS2 {DWORD dwSize;DWORD dwFlags;LPD3DNTHAL_SETRENDERTARGETCB SetRenderTarget;LPVOID dwReserved1;LPVOID dwReserved2;LPVOID dwReserved3;LPVOID dwReserved4;};
struct _D3DNTHAL_CALLBACKS3 {DWORD dwSize;DWORD dwFlags;LPD3DNTHAL_CLEAR2CB Clear2;LPVOID lpvReserved;LPD3DNTHAL_VALIDATETEXTURESTAGESTATECB ValidateTextureStageState;LPD3DNTHAL_DRAWPRIMITIVES2CB DrawPrimitives2;};
struct _D3DNTHAL_CLEAR2DATA {ULONG_PTR dwhContext;DWORD dwFlags;DWORD dwFillColor;D3DVALUE dvFillDepth;DWORD dwFillStencil;LPD3DRECT lpRects;DWORD dwNumRects;HRESULT ddrval;};
struct _D3DNTHAL_CONTEXTCREATEDATA {union {PDD_DIRECTDRAW_GLOBAL lpDDGbl;PDD_DIRECTDRAW_LOCAL lpDDLcl;};union {PDD_SURFACE_LOCAL lpDDS;PDD_SURFACE_LOCAL lpDDSLcl;};union {PDD_SURFACE_LOCAL lpDDSZ;PDD_SURFACE_LOCAL lpDDSZLcl;};DWORD dwPID;ULONG_PTR dwhContext;HRESULT ddrval;};
union _D3DNTHAL_CONTEXTCREATEDATA::$7306C4885F53B6B53241EB9996CEFDB0 {PDD_SURFACE_LOCAL lpDDS;PDD_SURFACE_LOCAL lpDDSLcl;};
union _D3DNTHAL_CONTEXTCREATEDATA::$A8B4623C3229555B56CAEDFBFEF613EE {PDD_SURFACE_LOCAL lpDDSZ;PDD_SURFACE_LOCAL lpDDSZLcl;};
union _D3DNTHAL_CONTEXTCREATEDATA::$DDCF36927E9BFFDD33D690AC93DE791F {PDD_DIRECTDRAW_GLOBAL lpDDGbl;PDD_DIRECTDRAW_LOCAL lpDDLcl;};
struct _D3DNTHAL_CONTEXTDESTROYALLDATA {DWORD dwPID;HRESULT ddrval;};
struct _D3DNTHAL_CONTEXTDESTROYDATA {ULONG_PTR dwhContext;HRESULT ddrval;};
struct _D3DNTHAL_DRAWPRIMITIVES2DATA {ULONG_PTR dwhContext;DWORD dwFlags;DWORD dwVertexType;PDD_SURFACE_LOCAL lpDDCommands;DWORD dwCommandOffset;DWORD dwCommandLength;union {PDD_SURFACE_LOCAL lpDDVertex;LPVOID lpVertices;};DWORD dwVertexOffset;DWORD dwVertexLength;DWORD dwReqVertexBufSize;DWORD dwReqCommandBufSize;LPDWORD lpdwRStates;union {DWORD dwVertexSize;HRESULT ddrval;};DWORD dwErrorOffset;};
union _D3DNTHAL_DRAWPRIMITIVES2DATA::$4A40E7D6792F856550440E087D486853 {PDD_SURFACE_LOCAL lpDDVertex;LPVOID lpVertices;};
union _D3DNTHAL_DRAWPRIMITIVES2DATA::$DD26F1CDDCEF09909ADB7370566018B7 {DWORD dwVertexSize;HRESULT ddrval;};
struct _D3DNTHAL_GLOBALDRIVERDATA {DWORD dwSize;D3DNTHALDEVICEDESC_V1 hwCaps;DWORD dwNumVertices;DWORD dwNumClipVertices;DWORD dwNumTextureFormats;LPDDSURFACEDESC lpTextureFormats;};
struct _D3DNTHAL_SCENECAPTUREDATA {ULONG_PTR dwhContext;DWORD dwFlag;HRESULT ddrval;};
struct _D3DNTHAL_SETRENDERTARGETDATA {ULONG_PTR dwhContext;PDD_SURFACE_LOCAL lpDDS;PDD_SURFACE_LOCAL lpDDSZ;HRESULT ddrval;};
struct _D3DNTHAL_TEXTURECREATEDATA {ULONG_PTR dwhContext;HANDLE hDDS;ULONG_PTR dwHandle;HRESULT ddrval;};
struct _D3DNTHAL_TEXTUREDESTROYDATA {ULONG_PTR dwhContext;ULONG_PTR dwHandle;HRESULT ddrval;};
struct _D3DNTHAL_TEXTUREGETSURFDATA {ULONG_PTR dwhContext;HANDLE hDDS;ULONG_PTR dwHandle;HRESULT ddrval;};
struct _D3DNTHAL_TEXTURESWAPDATA {ULONG_PTR dwhContext;ULONG_PTR dwHandle1;ULONG_PTR dwHandle2;HRESULT ddrval;};
struct _D3DNTHAL_VALIDATETEXTURESTAGESTATEDATA {ULONG_PTR dwhContext;DWORD dwFlags;ULONG_PTR dwReserved;DWORD dwNumPasses;HRESULT ddrval;};
enum _D3DOPCODE {D3DOP_POINT = 0x1,D3DOP_LINE = 0x2,D3DOP_TRIANGLE = 0x3,D3DOP_MATRIXLOAD = 0x4,D3DOP_MATRIXMULTIPLY = 0x5,D3DOP_STATETRANSFORM = 0x6,D3DOP_STATELIGHT = 0x7,D3DOP_STATERENDER = 0x8,D3DOP_PROCESSVERTICES = 0x9,D3DOP_TEXTURELOAD = 0xA,D3DOP_EXIT = 0xB,D3DOP_BRANCHFORWARD = 0xC,D3DOP_SPAN = 0xD,D3DOP_SETSTATUS = 0xE,D3DOP_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DPICKRECORD {BYTE bOpcode;BYTE bPad;DWORD dwOffset;D3DVALUE dvZ;};
struct _D3DPOINT {WORD wCount;WORD wFirst;};
struct _D3DPROCESSVERTICES {DWORD dwFlags;WORD wStart;WORD wDest;DWORD dwCount;DWORD dwReserved;};
struct _D3DPrimCaps {DWORD dwSize;DWORD dwMiscCaps;DWORD dwRasterCaps;DWORD dwZCmpCaps;DWORD dwSrcBlendCaps;DWORD dwDestBlendCaps;DWORD dwAlphaCmpCaps;DWORD dwShadeCaps;DWORD dwTextureCaps;DWORD dwTextureFilterCaps;DWORD dwTextureBlendCaps;DWORD dwTextureAddressCaps;DWORD dwStippleWidth;DWORD dwStippleHeight;};
struct _D3DRECT {union {LONG x1;LONG lX1;};union {LONG y1;LONG lY1;};union {LONG x2;LONG lX2;};union {LONG y2;LONG lY2;};};
union _D3DRECT::$5C92D98B6486E2D73C75D371A41BD7BA {LONG x2;LONG lX2;};
union _D3DRECT::$5FA8995385DC59DE62F772EF39CB3CD0 {LONG y1;LONG lY1;};
union _D3DRECT::$A06CC334F0A72C7C08028D8694B5ECC1 {LONG y2;LONG lY2;};
union _D3DRECT::$AB8E8EA9B71D458E94A6241D094F864D {LONG x1;LONG lX1;};
struct _D3DSPAN {WORD wCount;WORD wFirst;};
struct _D3DSTATE {union {D3DTRANSFORMSTATETYPE dtstTransformStateType;D3DLIGHTSTATETYPE dlstLightStateType;D3DRENDERSTATETYPE drstRenderStateType;};union {DWORD dwArg[1];D3DVALUE dvArg[1];};};
union _D3DSTATE::$6E126D7179C3BD6696EBA355AAC6A589 {DWORD dwArg[1];D3DVALUE dvArg[1];};
union _D3DSTATE::$F2EA3FEE0507817BD9C946BFDA84F9EF {D3DTRANSFORMSTATETYPE dtstTransformStateType;D3DLIGHTSTATETYPE dlstLightStateType;D3DRENDERSTATETYPE drstRenderStateType;};
enum _D3DSTATEBLOCKTYPE {D3DSBT_ALL = 0x1,D3DSBT_PIXELSTATE = 0x2,D3DSBT_VERTEXSTATE = 0x3,D3DSBT_FORCE_DWORD = 0xFFFFFFFF,};
struct _D3DSTATUS {DWORD dwFlags;DWORD dwStatus;D3DRECT drExtent;};
enum _D3DSTENCILOP {D3DSTENCILOP_KEEP = 0x1,D3DSTENCILOP_ZERO = 0x2,D3DSTENCILOP_REPLACE = 0x3,D3DSTENCILOP_INCRSAT = 0x4,D3DSTENCILOP_DECRSAT = 0x5,D3DSTENCILOP_INVERT = 0x6,D3DSTENCILOP_INCR = 0x7,D3DSTENCILOP_DECR = 0x8,D3DSTENCILOP_FORCE_DWORD = 0x7FFFFFFF,};
enum _D3DTEXTUREADDRESS {D3DTADDRESS_WRAP = 0x1,D3DTADDRESS_MIRROR = 0x2,D3DTADDRESS_CLAMP = 0x3,D3DTADDRESS_BORDER = 0x4,D3DTADDRESS_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DTEXTURELOAD {D3DTEXTUREHANDLE hDestTexture;D3DTEXTUREHANDLE hSrcTexture;};
enum _D3DTEXTUREMAGFILTER {D3DTFG_POINT = 0x1,D3DTFG_LINEAR = 0x2,D3DTFG_FLATCUBIC = 0x3,D3DTFG_GAUSSIANCUBIC = 0x4,D3DTFG_ANISOTROPIC = 0x5,D3DTFG_FORCE_DWORD = 0x7FFFFFFF,};
enum _D3DTEXTUREMINFILTER {D3DTFN_POINT = 0x1,D3DTFN_LINEAR = 0x2,D3DTFN_ANISOTROPIC = 0x3,D3DTFN_FORCE_DWORD = 0x7FFFFFFF,};
enum _D3DTEXTUREMIPFILTER {D3DTFP_NONE = 0x1,D3DTFP_POINT = 0x2,D3DTFP_LINEAR = 0x3,D3DTFP_FORCE_DWORD = 0x7FFFFFFF,};
enum _D3DTEXTUREOP {D3DTOP_DISABLE = 0x1,D3DTOP_SELECTARG1 = 0x2,D3DTOP_SELECTARG2 = 0x3,D3DTOP_MODULATE = 0x4,D3DTOP_MODULATE2X = 0x5,D3DTOP_MODULATE4X = 0x6,D3DTOP_ADD = 0x7,D3DTOP_ADDSIGNED = 0x8,D3DTOP_ADDSIGNED2X = 0x9,D3DTOP_SUBTRACT = 0xA,D3DTOP_ADDSMOOTH = 0xB,D3DTOP_BLENDDIFFUSEALPHA = 0xC,D3DTOP_BLENDTEXTUREALPHA = 0xD,D3DTOP_BLENDFACTORALPHA = 0xE,D3DTOP_BLENDTEXTUREALPHAPM = 0xF,D3DTOP_BLENDCURRENTALPHA = 0x10,D3DTOP_PREMODULATE = 0x11,D3DTOP_MODULATEALPHA_ADDCOLOR = 0x12,D3DTOP_MODULATECOLOR_ADDALPHA = 0x13,D3DTOP_MODULATEINVALPHA_ADDCOLOR = 0x14,D3DTOP_MODULATEINVCOLOR_ADDALPHA = 0x15,D3DTOP_BUMPENVMAP = 0x16,D3DTOP_BUMPENVMAPLUMINANCE = 0x17,D3DTOP_DOTPRODUCT3 = 0x18,D3DTOP_FORCE_DWORD = 0x7FFFFFFF,};
enum _D3DTEXTURESTAGESTATETYPE {D3DTSS_COLOROP = 0x1,D3DTSS_COLORARG1 = 0x2,D3DTSS_COLORARG2 = 0x3,D3DTSS_ALPHAOP = 0x4,D3DTSS_ALPHAARG1 = 0x5,D3DTSS_ALPHAARG2 = 0x6,D3DTSS_BUMPENVMAT00 = 0x7,D3DTSS_BUMPENVMAT01 = 0x8,D3DTSS_BUMPENVMAT10 = 0x9,D3DTSS_BUMPENVMAT11 = 0xA,D3DTSS_TEXCOORDINDEX = 0xB,D3DTSS_ADDRESS = 0xC,D3DTSS_ADDRESSU = 0xD,D3DTSS_ADDRESSV = 0xE,D3DTSS_BORDERCOLOR = 0xF,D3DTSS_MAGFILTER = 0x10,D3DTSS_MINFILTER = 0x11,D3DTSS_MIPFILTER = 0x12,D3DTSS_MIPMAPLODBIAS = 0x13,D3DTSS_MAXMIPLEVEL = 0x14,D3DTSS_MAXANISOTROPY = 0x15,D3DTSS_BUMPENVLSCALE = 0x16,D3DTSS_BUMPENVLOFFSET = 0x17,D3DTSS_TEXTURETRANSFORMFLAGS = 0x18,D3DTSS_FORCE_DWORD = 0x7FFFFFFF,};
enum _D3DTEXTURETRANSFORMFLAGS {D3DTTFF_DISABLE = 0x0,D3DTTFF_COUNT1 = 0x1,D3DTTFF_COUNT2 = 0x2,D3DTTFF_COUNT3 = 0x3,D3DTTFF_COUNT4 = 0x4,D3DTTFF_PROJECTED = 0x100,D3DTTFF_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DTLVERTEX {union {D3DVALUE sx;D3DVALUE dvSX;};union {D3DVALUE sy;D3DVALUE dvSY;};union {D3DVALUE sz;D3DVALUE dvSZ;};union {D3DVALUE rhw;D3DVALUE dvRHW;};union {D3DCOLOR color;D3DCOLOR dcColor;};union {D3DCOLOR specular;D3DCOLOR dcSpecular;};union {D3DVALUE tu;D3DVALUE dvTU;};union {D3DVALUE tv;D3DVALUE dvTV;};};
union _D3DTLVERTEX::$0F2CDCA047003D8EC75118693930E691 {D3DVALUE sx;D3DVALUE dvSX;};
union _D3DTLVERTEX::$30594A6BB70EFF251680D22A869004B0 {D3DCOLOR specular;D3DCOLOR dcSpecular;};
union _D3DTLVERTEX::$34D6BCDD47B44126D7A203197E7A8282 {D3DCOLOR color;D3DCOLOR dcColor;};
union _D3DTLVERTEX::$6CA934479C1F92723C45B62B9DC7F703 {D3DVALUE sy;D3DVALUE dvSY;};
union _D3DTLVERTEX::$7013070F7992C3CB148910863AB1E659 {D3DVALUE tv;D3DVALUE dvTV;};
union _D3DTLVERTEX::$BDFC1E337EC7BF58E4386644A37C7111 {D3DVALUE sz;D3DVALUE dvSZ;};
union _D3DTLVERTEX::$ED3D3C9797719C595EAD57A73B2054F3 {D3DVALUE rhw;D3DVALUE dvRHW;};
union _D3DTLVERTEX::$F5EA273054A07BEACA92D8100BBF37A6 {D3DVALUE tu;D3DVALUE dvTU;};
struct _D3DTRANSFORMCAPS {DWORD dwSize;DWORD dwCaps;};
struct _D3DTRANSFORMDATA {DWORD dwSize;void *lpIn;DWORD dwInSize;void *lpOut;DWORD dwOutSize;D3DHVERTEX *lpHOut;DWORD dwClip;DWORD dwClipIntersection;DWORD dwClipUnion;D3DRECT drExtent;};
enum _D3DTRANSFORMSTATETYPE {D3DTRANSFORMSTATE_WORLD = 0x1,D3DTRANSFORMSTATE_VIEW = 0x2,D3DTRANSFORMSTATE_PROJECTION = 0x3,D3DTRANSFORMSTATE_WORLD1 = 0x4,D3DTRANSFORMSTATE_WORLD2 = 0x5,D3DTRANSFORMSTATE_WORLD3 = 0x6,D3DTRANSFORMSTATE_TEXTURE0 = 0x10,D3DTRANSFORMSTATE_TEXTURE1 = 0x11,D3DTRANSFORMSTATE_TEXTURE2 = 0x12,D3DTRANSFORMSTATE_TEXTURE3 = 0x13,D3DTRANSFORMSTATE_TEXTURE4 = 0x14,D3DTRANSFORMSTATE_TEXTURE5 = 0x15,D3DTRANSFORMSTATE_TEXTURE6 = 0x16,D3DTRANSFORMSTATE_TEXTURE7 = 0x17,D3DTRANSFORMSTATE_FORCE_DWORD = 0x7FFFFFFF,};
struct _D3DTRIANGLE {union {WORD v1;WORD wV1;};union {WORD v2;WORD wV2;};union {WORD v3;WORD wV3;};WORD wFlags;};
union _D3DTRIANGLE::$5E81141D7147E4DA50A203FBA8012470 {WORD v2;WORD wV2;};
union _D3DTRIANGLE::$B37211E5FB9C3E78EB744E72121563AA {WORD v3;WORD wV3;};
union _D3DTRIANGLE::$C167AD525C2A16158535093655B0BE27 {WORD v1;WORD wV1;};
struct _D3DVECTOR {union {D3DVALUE x;D3DVALUE dvX;};union {D3DVALUE y;D3DVALUE dvY;};union {D3DVALUE z;D3DVALUE dvZ;};};
union _D3DVECTOR::$2970DA2ECFB38188FCB670891BDDBDFA {D3DVALUE y;D3DVALUE dvY;};
union _D3DVECTOR::$3781A3F6A2280FF9BE972B852E87FD21 {D3DVALUE z;D3DVALUE dvZ;};
union _D3DVECTOR::$681612F8DC6DDCA79CBEF9228C3A67A0 {D3DVALUE x;D3DVALUE dvX;};
struct _D3DVERTEX {union {D3DVALUE x;D3DVALUE dvX;};union {D3DVALUE y;D3DVALUE dvY;};union {D3DVALUE z;D3DVALUE dvZ;};union {D3DVALUE nx;D3DVALUE dvNX;};union {D3DVALUE ny;D3DVALUE dvNY;};union {D3DVALUE nz;D3DVALUE dvNZ;};union {D3DVALUE tu;D3DVALUE dvTU;};union {D3DVALUE tv;D3DVALUE dvTV;};};
union _D3DVERTEX::$2970DA2ECFB38188FCB670891BDDBDFA {D3DVALUE y;D3DVALUE dvY;};
union _D3DVERTEX::$3781A3F6A2280FF9BE972B852E87FD21 {D3DVALUE z;D3DVALUE dvZ;};
union _D3DVERTEX::$3782FED7D702BF3DE1FC57BD6CFA9C0A {D3DVALUE ny;D3DVALUE dvNY;};
union _D3DVERTEX::$681612F8DC6DDCA79CBEF9228C3A67A0 {D3DVALUE x;D3DVALUE dvX;};
union _D3DVERTEX::$7013070F7992C3CB148910863AB1E659 {D3DVALUE tv;D3DVALUE dvTV;};
union _D3DVERTEX::$83AC1A1E23B9ECFE234B7286E62DB631 {D3DVALUE nx;D3DVALUE dvNX;};
union _D3DVERTEX::$D6B931185C6B831ED9D2BDE28EC5A699 {D3DVALUE nz;D3DVALUE dvNZ;};
union _D3DVERTEX::$F5EA273054A07BEACA92D8100BBF37A6 {D3DVALUE tu;D3DVALUE dvTU;};
enum _D3DVERTEXBLENDFLAGS {D3DVBLEND_DISABLE = 0x0,D3DVBLEND_1WEIGHT = 0x1,D3DVBLEND_2WEIGHTS = 0x2,D3DVBLEND_3WEIGHTS = 0x3,};
struct _D3DVERTEXBUFFERDESC {DWORD dwSize;DWORD dwCaps;DWORD dwFVF;DWORD dwNumVertices;};
struct _D3DVIEWPORT {DWORD dwSize;DWORD dwX;DWORD dwY;DWORD dwWidth;DWORD dwHeight;D3DVALUE dvScaleX;D3DVALUE dvScaleY;D3DVALUE dvMaxX;D3DVALUE dvMaxY;D3DVALUE dvMinZ;D3DVALUE dvMaxZ;};
struct _D3DVIEWPORT2 {DWORD dwSize;DWORD dwX;DWORD dwY;DWORD dwWidth;DWORD dwHeight;D3DVALUE dvClipX;D3DVALUE dvClipY;D3DVALUE dvClipWidth;D3DVALUE dvClipHeight;D3DVALUE dvMinZ;D3DVALUE dvMaxZ;};
struct _D3DVIEWPORT7 {DWORD dwX;DWORD dwY;DWORD dwWidth;DWORD dwHeight;D3DVALUE dvMinZ;D3DVALUE dvMaxZ;};
enum _D3DZBUFFERTYPE {D3DZB_FALSE = 0x0,D3DZB_TRUE = 0x1,D3DZB_USEW = 0x2,D3DZB_FORCE_DWORD = 0x7FFFFFFF,};
enum _DBGKM_APINUMBER {DbgKmExceptionApi = 0x0,DbgKmCreateThreadApi = 0x1,DbgKmCreateProcessApi = 0x2,DbgKmExitThreadApi = 0x3,DbgKmExitProcessApi = 0x4,DbgKmLoadDllApi = 0x5,DbgKmUnloadDllApi = 0x6,DbgKmErrorReportApi = 0x7,DbgKmMaxApiNumber = 0x8,};
struct _DBGKM_CREATE_PROCESS {ULONG SubSystemKey;HANDLE FileHandle;PVOID BaseOfImage;ULONG DebugInfoFileOffset;ULONG DebugInfoSize;DBGKM_CREATE_THREAD InitialThread;};
struct _DBGKM_CREATE_THREAD {ULONG SubSystemKey;PVOID StartAddress;};
struct _DBGKM_EXCEPTION {EXCEPTION_RECORD ExceptionRecord;ULONG FirstChance;};
struct _DBGKM_EXIT_PROCESS {NTSTATUS ExitStatus;};
struct _DBGKM_EXIT_THREAD {NTSTATUS ExitStatus;};
struct _DBGKM_LOAD_DLL {HANDLE FileHandle;PVOID BaseOfDll;ULONG DebugInfoFileOffset;ULONG DebugInfoSize;PVOID NamePointer;};
struct _DBGKM_MSG {PORT_MESSAGE h;DBGKM_APINUMBER ApiNumber;NTSTATUS ReturnedStatus;union {DBGKM_EXCEPTION Exception;DBGKM_CREATE_THREAD CreateThread;DBGKM_CREATE_PROCESS CreateProcess;DBGKM_EXIT_THREAD ExitThread;DBGKM_EXIT_PROCESS ExitProcess;DBGKM_LOAD_DLL LoadDll;DBGKM_UNLOAD_DLL UnloadDll;};};
union _DBGKM_MSG::$AAF45AABCC08A62BCE1FAFA6CAB68268 {DBGKM_EXCEPTION Exception;DBGKM_CREATE_THREAD CreateThread;DBGKM_CREATE_PROCESS CreateProcess;DBGKM_EXIT_THREAD ExitThread;DBGKM_EXIT_PROCESS ExitProcess;DBGKM_LOAD_DLL LoadDll;DBGKM_UNLOAD_DLL UnloadDll;};
struct _DBGKM_UNLOAD_DLL {PVOID BaseAddress;};
struct _DBGUI_WAIT_STATE_CHANGE {DBG_STATE NewState;CLIENT_ID AppClientId;union _DBGUI_WAIT_STATE_CHANGE::$7B525817AFA2661E3136047E8B79FC2F StateInfo;};
union _DBGUI_WAIT_STATE_CHANGE::$7B525817AFA2661E3136047E8B79FC2F {struct _DBGUI_WAIT_STATE_CHANGE::$7B525817AFA2661E3136047E8B79FC2F::$F432A022D93E18F903FB314033D75B18 CreateThread;struct _DBGUI_WAIT_STATE_CHANGE::$7B525817AFA2661E3136047E8B79FC2F::$B47132100211041866D15A29E0C7BC03 CreateProcessInfo;DBGKM_EXIT_THREAD ExitThread;DBGKM_EXIT_PROCESS ExitProcess;DBGKM_EXCEPTION Exception;DBGKM_LOAD_DLL LoadDll;DBGKM_UNLOAD_DLL UnloadDll;};
struct _DBGUI_WAIT_STATE_CHANGE::$7B525817AFA2661E3136047E8B79FC2F::$B47132100211041866D15A29E0C7BC03 {HANDLE HandleToProcess;HANDLE HandleToThread;DBGKM_CREATE_PROCESS NewProcess;};
struct _DBGUI_WAIT_STATE_CHANGE::$7B525817AFA2661E3136047E8B79FC2F::$F432A022D93E18F903FB314033D75B18 {HANDLE HandleToThread;DBGKM_CREATE_THREAD NewThread;};
enum _DBG_STATE {DbgIdle = 0x0,DbgReplyPending = 0x1,DbgCreateThreadStateChange = 0x2,DbgCreateProcessStateChange = 0x3,DbgExitThreadStateChange = 0x4,DbgExitProcessStateChange = 0x5,DbgExceptionStateChange = 0x6,DbgBreakpointStateChange = 0x7,DbgSingleStepStateChange = 0x8,DbgLoadDllStateChange = 0x9,DbgUnloadDllStateChange = 0xA,};
struct _DDARGB {BYTE blue;BYTE green;BYTE red;BYTE alpha;};
struct _DDBLTBATCH {LPRECT lprDest;LPDIRECTDRAWSURFACE lpDDSSrc;LPRECT lprSrc;DWORD dwFlags;LPDDBLTFX lpDDBltFx;};
struct _DDBLTFX {DWORD dwSize;DWORD dwDDFX;DWORD dwROP;DWORD dwDDROP;DWORD dwRotationAngle;DWORD dwZBufferOpCode;DWORD dwZBufferLow;DWORD dwZBufferHigh;DWORD dwZBufferBaseDest;DWORD dwZDestConstBitDepth;union {DWORD dwZDestConst;LPDIRECTDRAWSURFACE lpDDSZBufferDest;};DWORD dwZSrcConstBitDepth;union {DWORD dwZSrcConst;LPDIRECTDRAWSURFACE lpDDSZBufferSrc;};DWORD dwAlphaEdgeBlendBitDepth;DWORD dwAlphaEdgeBlend;DWORD dwReserved;DWORD dwAlphaDestConstBitDepth;union {DWORD dwAlphaDestConst;LPDIRECTDRAWSURFACE lpDDSAlphaDest;};DWORD dwAlphaSrcConstBitDepth;union {DWORD dwAlphaSrcConst;LPDIRECTDRAWSURFACE lpDDSAlphaSrc;};union {DWORD dwFillColor;DWORD dwFillDepth;DWORD dwFillPixel;LPDIRECTDRAWSURFACE lpDDSPattern;};DDCOLORKEY ddckDestColorkey;DDCOLORKEY ddckSrcColorkey;};
union _DDBLTFX::$3639C047B3E88B857708792B1F3FEC83 {DWORD dwAlphaDestConst;LPDIRECTDRAWSURFACE lpDDSAlphaDest;};
union _DDBLTFX::$4C109671A06E28B8127C40041AB5795C {DWORD dwFillColor;DWORD dwFillDepth;DWORD dwFillPixel;LPDIRECTDRAWSURFACE lpDDSPattern;};
union _DDBLTFX::$702C52B3655764E63C007A6B73D01C19 {DWORD dwZSrcConst;LPDIRECTDRAWSURFACE lpDDSZBufferSrc;};
union _DDBLTFX::$C0828DA952883A43DEF8D462ACC90C87 {DWORD dwAlphaSrcConst;LPDIRECTDRAWSURFACE lpDDSAlphaSrc;};
union _DDBLTFX::$EA6EC20695B0AA8ECF92A441DE55A935 {DWORD dwZDestConst;LPDIRECTDRAWSURFACE lpDDSZBufferDest;};
struct _DDCAPS_DX1 {DWORD dwSize;DWORD dwCaps;DWORD dwCaps2;DWORD dwCKeyCaps;DWORD dwFXCaps;DWORD dwFXAlphaCaps;DWORD dwPalCaps;DWORD dwSVCaps;DWORD dwAlphaBltConstBitDepths;DWORD dwAlphaBltPixelBitDepths;DWORD dwAlphaBltSurfaceBitDepths;DWORD dwAlphaOverlayConstBitDepths;DWORD dwAlphaOverlayPixelBitDepths;DWORD dwAlphaOverlaySurfaceBitDepths;DWORD dwZBufferBitDepths;DWORD dwVidMemTotal;DWORD dwVidMemFree;DWORD dwMaxVisibleOverlays;DWORD dwCurrVisibleOverlays;DWORD dwNumFourCCCodes;DWORD dwAlignBoundarySrc;DWORD dwAlignSizeSrc;DWORD dwAlignBoundaryDest;DWORD dwAlignSizeDest;DWORD dwAlignStrideAlign;DWORD dwRops[8];DDSCAPS ddsCaps;DWORD dwMinOverlayStretch;DWORD dwMaxOverlayStretch;DWORD dwMinLiveVideoStretch;DWORD dwMaxLiveVideoStretch;DWORD dwMinHwCodecStretch;DWORD dwMaxHwCodecStretch;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;};
struct _DDCAPS_DX3 {DWORD dwSize;DWORD dwCaps;DWORD dwCaps2;DWORD dwCKeyCaps;DWORD dwFXCaps;DWORD dwFXAlphaCaps;DWORD dwPalCaps;DWORD dwSVCaps;DWORD dwAlphaBltConstBitDepths;DWORD dwAlphaBltPixelBitDepths;DWORD dwAlphaBltSurfaceBitDepths;DWORD dwAlphaOverlayConstBitDepths;DWORD dwAlphaOverlayPixelBitDepths;DWORD dwAlphaOverlaySurfaceBitDepths;DWORD dwZBufferBitDepths;DWORD dwVidMemTotal;DWORD dwVidMemFree;DWORD dwMaxVisibleOverlays;DWORD dwCurrVisibleOverlays;DWORD dwNumFourCCCodes;DWORD dwAlignBoundarySrc;DWORD dwAlignSizeSrc;DWORD dwAlignBoundaryDest;DWORD dwAlignSizeDest;DWORD dwAlignStrideAlign;DWORD dwRops[8];DDSCAPS ddsCaps;DWORD dwMinOverlayStretch;DWORD dwMaxOverlayStretch;DWORD dwMinLiveVideoStretch;DWORD dwMaxLiveVideoStretch;DWORD dwMinHwCodecStretch;DWORD dwMaxHwCodecStretch;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;DWORD dwSVBCaps;DWORD dwSVBCKeyCaps;DWORD dwSVBFXCaps;DWORD dwSVBRops[8];DWORD dwVSBCaps;DWORD dwVSBCKeyCaps;DWORD dwVSBFXCaps;DWORD dwVSBRops[8];DWORD dwSSBCaps;DWORD dwSSBCKeyCaps;DWORD dwSSBFXCaps;DWORD dwSSBRops[8];DWORD dwReserved4;DWORD dwReserved5;DWORD dwReserved6;};
struct _DDCAPS_DX5 {DWORD dwSize;DWORD dwCaps;DWORD dwCaps2;DWORD dwCKeyCaps;DWORD dwFXCaps;DWORD dwFXAlphaCaps;DWORD dwPalCaps;DWORD dwSVCaps;DWORD dwAlphaBltConstBitDepths;DWORD dwAlphaBltPixelBitDepths;DWORD dwAlphaBltSurfaceBitDepths;DWORD dwAlphaOverlayConstBitDepths;DWORD dwAlphaOverlayPixelBitDepths;DWORD dwAlphaOverlaySurfaceBitDepths;DWORD dwZBufferBitDepths;DWORD dwVidMemTotal;DWORD dwVidMemFree;DWORD dwMaxVisibleOverlays;DWORD dwCurrVisibleOverlays;DWORD dwNumFourCCCodes;DWORD dwAlignBoundarySrc;DWORD dwAlignSizeSrc;DWORD dwAlignBoundaryDest;DWORD dwAlignSizeDest;DWORD dwAlignStrideAlign;DWORD dwRops[8];DDSCAPS ddsCaps;DWORD dwMinOverlayStretch;DWORD dwMaxOverlayStretch;DWORD dwMinLiveVideoStretch;DWORD dwMaxLiveVideoStretch;DWORD dwMinHwCodecStretch;DWORD dwMaxHwCodecStretch;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;DWORD dwSVBCaps;DWORD dwSVBCKeyCaps;DWORD dwSVBFXCaps;DWORD dwSVBRops[8];DWORD dwVSBCaps;DWORD dwVSBCKeyCaps;DWORD dwVSBFXCaps;DWORD dwVSBRops[8];DWORD dwSSBCaps;DWORD dwSSBCKeyCaps;DWORD dwSSBFXCaps;DWORD dwSSBRops[8];DWORD dwMaxVideoPorts;DWORD dwCurrVideoPorts;DWORD dwSVBCaps2;DWORD dwNLVBCaps;DWORD dwNLVBCaps2;DWORD dwNLVBCKeyCaps;DWORD dwNLVBFXCaps;DWORD dwNLVBRops[8];};
struct _DDCAPS_DX6 {DWORD dwSize;DWORD dwCaps;DWORD dwCaps2;DWORD dwCKeyCaps;DWORD dwFXCaps;DWORD dwFXAlphaCaps;DWORD dwPalCaps;DWORD dwSVCaps;DWORD dwAlphaBltConstBitDepths;DWORD dwAlphaBltPixelBitDepths;DWORD dwAlphaBltSurfaceBitDepths;DWORD dwAlphaOverlayConstBitDepths;DWORD dwAlphaOverlayPixelBitDepths;DWORD dwAlphaOverlaySurfaceBitDepths;DWORD dwZBufferBitDepths;DWORD dwVidMemTotal;DWORD dwVidMemFree;DWORD dwMaxVisibleOverlays;DWORD dwCurrVisibleOverlays;DWORD dwNumFourCCCodes;DWORD dwAlignBoundarySrc;DWORD dwAlignSizeSrc;DWORD dwAlignBoundaryDest;DWORD dwAlignSizeDest;DWORD dwAlignStrideAlign;DWORD dwRops[8];DDSCAPS ddsOldCaps;DWORD dwMinOverlayStretch;DWORD dwMaxOverlayStretch;DWORD dwMinLiveVideoStretch;DWORD dwMaxLiveVideoStretch;DWORD dwMinHwCodecStretch;DWORD dwMaxHwCodecStretch;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;DWORD dwSVBCaps;DWORD dwSVBCKeyCaps;DWORD dwSVBFXCaps;DWORD dwSVBRops[8];DWORD dwVSBCaps;DWORD dwVSBCKeyCaps;DWORD dwVSBFXCaps;DWORD dwVSBRops[8];DWORD dwSSBCaps;DWORD dwSSBCKeyCaps;DWORD dwSSBFXCaps;DWORD dwSSBRops[8];DWORD dwMaxVideoPorts;DWORD dwCurrVideoPorts;DWORD dwSVBCaps2;DWORD dwNLVBCaps;DWORD dwNLVBCaps2;DWORD dwNLVBCKeyCaps;DWORD dwNLVBFXCaps;DWORD dwNLVBRops[8];DDSCAPS2 ddsCaps;};
struct _DDCAPS_DX7 {DWORD dwSize;DWORD dwCaps;DWORD dwCaps2;DWORD dwCKeyCaps;DWORD dwFXCaps;DWORD dwFXAlphaCaps;DWORD dwPalCaps;DWORD dwSVCaps;DWORD dwAlphaBltConstBitDepths;DWORD dwAlphaBltPixelBitDepths;DWORD dwAlphaBltSurfaceBitDepths;DWORD dwAlphaOverlayConstBitDepths;DWORD dwAlphaOverlayPixelBitDepths;DWORD dwAlphaOverlaySurfaceBitDepths;DWORD dwZBufferBitDepths;DWORD dwVidMemTotal;DWORD dwVidMemFree;DWORD dwMaxVisibleOverlays;DWORD dwCurrVisibleOverlays;DWORD dwNumFourCCCodes;DWORD dwAlignBoundarySrc;DWORD dwAlignSizeSrc;DWORD dwAlignBoundaryDest;DWORD dwAlignSizeDest;DWORD dwAlignStrideAlign;DWORD dwRops[8];DDSCAPS ddsOldCaps;DWORD dwMinOverlayStretch;DWORD dwMaxOverlayStretch;DWORD dwMinLiveVideoStretch;DWORD dwMaxLiveVideoStretch;DWORD dwMinHwCodecStretch;DWORD dwMaxHwCodecStretch;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;DWORD dwSVBCaps;DWORD dwSVBCKeyCaps;DWORD dwSVBFXCaps;DWORD dwSVBRops[8];DWORD dwVSBCaps;DWORD dwVSBCKeyCaps;DWORD dwVSBFXCaps;DWORD dwVSBRops[8];DWORD dwSSBCaps;DWORD dwSSBCKeyCaps;DWORD dwSSBFXCaps;DWORD dwSSBRops[8];DWORD dwMaxVideoPorts;DWORD dwCurrVideoPorts;DWORD dwSVBCaps2;DWORD dwNLVBCaps;DWORD dwNLVBCaps2;DWORD dwNLVBCKeyCaps;DWORD dwNLVBFXCaps;DWORD dwNLVBRops[8];DDSCAPS2 ddsCaps;};
struct _DDCOLORCONTROL {DWORD dwSize;DWORD dwFlags;LONG lBrightness;LONG lContrast;LONG lHue;LONG lSaturation;LONG lSharpness;LONG lGamma;LONG lColorEnable;DWORD dwReserved1;};
struct _DDCOLORKEY {DWORD dwColorSpaceLowValue;DWORD dwColorSpaceHighValue;};
struct _DDCOMPBUFFERINFO {DWORD dwSize;DWORD dwNumCompBuffers;DWORD dwWidthToCreate;DWORD dwHeightToCreate;DWORD dwBytesToAllocate;DDSCAPS2 ddCompCaps;DDPIXELFORMAT ddPixelFormat;};
struct _DDGAMMARAMP {WORD red[256];WORD green[256];WORD blue[256];};
struct _DDMOCOMPBUFFERINFO {DWORD dwSize;PDD_SURFACE_LOCAL lpCompSurface;DWORD dwDataOffset;DWORD dwDataSize;LPVOID lpPrivate;};
struct _DDNTCORECAPS {DWORD dwSize;DWORD dwCaps;DWORD dwCaps2;DWORD dwCKeyCaps;DWORD dwFXCaps;DWORD dwFXAlphaCaps;DWORD dwPalCaps;DWORD dwSVCaps;DWORD dwAlphaBltConstBitDepths;DWORD dwAlphaBltPixelBitDepths;DWORD dwAlphaBltSurfaceBitDepths;DWORD dwAlphaOverlayConstBitDepths;DWORD dwAlphaOverlayPixelBitDepths;DWORD dwAlphaOverlaySurfaceBitDepths;DWORD dwZBufferBitDepths;DWORD dwVidMemTotal;DWORD dwVidMemFree;DWORD dwMaxVisibleOverlays;DWORD dwCurrVisibleOverlays;DWORD dwNumFourCCCodes;DWORD dwAlignBoundarySrc;DWORD dwAlignSizeSrc;DWORD dwAlignBoundaryDest;DWORD dwAlignSizeDest;DWORD dwAlignStrideAlign;DWORD dwRops[8];DDSCAPS ddsCaps;DWORD dwMinOverlayStretch;DWORD dwMaxOverlayStretch;DWORD dwMinLiveVideoStretch;DWORD dwMaxLiveVideoStretch;DWORD dwMinHwCodecStretch;DWORD dwMaxHwCodecStretch;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;DWORD dwSVBCaps;DWORD dwSVBCKeyCaps;DWORD dwSVBFXCaps;DWORD dwSVBRops[8];DWORD dwVSBCaps;DWORD dwVSBCKeyCaps;DWORD dwVSBFXCaps;DWORD dwVSBRops[8];DWORD dwSSBCaps;DWORD dwSSBCKeyCaps;DWORD dwSSBFXCaps;DWORD dwSSBRops[8];DWORD dwMaxVideoPorts;DWORD dwCurrVideoPorts;DWORD dwSVBCaps2;};
struct _DDOPTSURFACEDESC {DWORD dwSize;DWORD dwFlags;DDSCAPS2 ddSCaps;DDOSCAPS ddOSCaps;GUID guid;DWORD dwCompressionRatio;};
struct _DDOSCAPS {DWORD dwCaps;};
struct _DDOVERLAYFX {DWORD dwSize;DWORD dwAlphaEdgeBlendBitDepth;DWORD dwAlphaEdgeBlend;DWORD dwReserved;DWORD dwAlphaDestConstBitDepth;union {DWORD dwAlphaDestConst;LPDIRECTDRAWSURFACE lpDDSAlphaDest;};DWORD dwAlphaSrcConstBitDepth;union {DWORD dwAlphaSrcConst;LPDIRECTDRAWSURFACE lpDDSAlphaSrc;};DDCOLORKEY dckDestColorkey;DDCOLORKEY dckSrcColorkey;DWORD dwDDFX;DWORD dwFlags;};
union _DDOVERLAYFX::$3639C047B3E88B857708792B1F3FEC83 {DWORD dwAlphaDestConst;LPDIRECTDRAWSURFACE lpDDSAlphaDest;};
union _DDOVERLAYFX::$C0828DA952883A43DEF8D462ACC90C87 {DWORD dwAlphaSrcConst;LPDIRECTDRAWSURFACE lpDDSAlphaSrc;};
struct _DDPIXELFORMAT {DWORD dwSize;DWORD dwFlags;DWORD dwFourCC;union {DWORD dwRGBBitCount;DWORD dwYUVBitCount;DWORD dwZBufferBitDepth;DWORD dwAlphaBitDepth;DWORD dwLuminanceBitCount;DWORD dwBumpBitCount;DWORD dwPrivateFormatBitCount;};union {DWORD dwRBitMask;DWORD dwYBitMask;DWORD dwStencilBitDepth;DWORD dwLuminanceBitMask;DWORD dwBumpDuBitMask;DWORD dwOperations;};union {DWORD dwGBitMask;DWORD dwUBitMask;DWORD dwZBitMask;DWORD dwBumpDvBitMask;struct _DDPIXELFORMAT::$4689F3D0B997E93FAF3E67A693E85360::$A78036EB239B85FA27F661E6E98FFEA9 MultiSampleCaps;};union {DWORD dwBBitMask;DWORD dwVBitMask;DWORD dwStencilBitMask;DWORD dwBumpLuminanceBitMask;};union {DWORD dwRGBAlphaBitMask;DWORD dwYUVAlphaBitMask;DWORD dwLuminanceAlphaBitMask;DWORD dwRGBZBitMask;DWORD dwYUVZBitMask;};};
union _DDPIXELFORMAT::$23DF69239FC04D9BE22118E1AD8451FB {DWORD dwRGBAlphaBitMask;DWORD dwYUVAlphaBitMask;DWORD dwLuminanceAlphaBitMask;DWORD dwRGBZBitMask;DWORD dwYUVZBitMask;};
union _DDPIXELFORMAT::$4689F3D0B997E93FAF3E67A693E85360 {DWORD dwGBitMask;DWORD dwUBitMask;DWORD dwZBitMask;DWORD dwBumpDvBitMask;struct _DDPIXELFORMAT::$4689F3D0B997E93FAF3E67A693E85360::$A78036EB239B85FA27F661E6E98FFEA9 MultiSampleCaps;};
struct _DDPIXELFORMAT::$4689F3D0B997E93FAF3E67A693E85360::$A78036EB239B85FA27F661E6E98FFEA9 {WORD wFlipMSTypes;WORD wBltMSTypes;};
union _DDPIXELFORMAT::$4C86B66084EB9B6F3AE81991D3FADB38 {DWORD dwBBitMask;DWORD dwVBitMask;DWORD dwStencilBitMask;DWORD dwBumpLuminanceBitMask;};
union _DDPIXELFORMAT::$6A86D2BA2D533C5D3D5AB1F1491969D5 {DWORD dwRBitMask;DWORD dwYBitMask;DWORD dwStencilBitDepth;DWORD dwLuminanceBitMask;DWORD dwBumpDuBitMask;DWORD dwOperations;};
union _DDPIXELFORMAT::$F1D3FB4D78950D0942225445130999CB {DWORD dwRGBBitCount;DWORD dwYUVBitCount;DWORD dwZBufferBitDepth;DWORD dwAlphaBitDepth;DWORD dwLuminanceBitCount;DWORD dwBumpBitCount;DWORD dwPrivateFormatBitCount;};
struct _DDRGBA {BYTE red;BYTE green;BYTE blue;BYTE alpha;};
struct _DDSCAPS {DWORD dwCaps;};
struct _DDSCAPS2 {DWORD dwCaps;DWORD dwCaps2;DWORD dwCaps3;union {DWORD dwCaps4;DWORD dwVolumeDepth;};};
union _DDSCAPS2::$19AC68468C4510B3DC631A4E89752068 {DWORD dwCaps4;DWORD dwVolumeDepth;};
struct _DDSCAPSEX {DWORD dwCaps2;DWORD dwCaps3;union {DWORD dwCaps4;DWORD dwVolumeDepth;};};
union _DDSCAPSEX::$19AC68468C4510B3DC631A4E89752068 {DWORD dwCaps4;DWORD dwVolumeDepth;};
struct _DDSURFACEDESC {DWORD dwSize;DWORD dwFlags;DWORD dwHeight;DWORD dwWidth;union {LONG lPitch;DWORD dwLinearSize;};DWORD dwBackBufferCount;union {DWORD dwMipMapCount;DWORD dwZBufferBitDepth;DWORD dwRefreshRate;};DWORD dwAlphaBitDepth;DWORD dwReserved;LPVOID lpSurface;DDCOLORKEY ddckCKDestOverlay;DDCOLORKEY ddckCKDestBlt;DDCOLORKEY ddckCKSrcOverlay;DDCOLORKEY ddckCKSrcBlt;DDPIXELFORMAT ddpfPixelFormat;DDSCAPS ddsCaps;};
struct _DDSURFACEDESC2 {DWORD dwSize;DWORD dwFlags;DWORD dwHeight;DWORD dwWidth;union {LONG lPitch;DWORD dwLinearSize;};union {DWORD dwBackBufferCount;DWORD dwDepth;};union {DWORD dwMipMapCount;DWORD dwRefreshRate;DWORD dwSrcVBHandle;};DWORD dwAlphaBitDepth;DWORD dwReserved;LPVOID lpSurface;union {DDCOLORKEY ddckCKDestOverlay;DWORD dwEmptyFaceColor;};DDCOLORKEY ddckCKDestBlt;DDCOLORKEY ddckCKSrcOverlay;DDCOLORKEY ddckCKSrcBlt;union {DDPIXELFORMAT ddpfPixelFormat;DWORD dwFVF;};DDSCAPS2 ddsCaps;DWORD dwTextureStage;};
union _DDSURFACEDESC2::$091DBF7D405BE25E65B16620C008128B {LONG lPitch;DWORD dwLinearSize;};
union _DDSURFACEDESC2::$5B12F1D1A21F9ED7C15CB39448B5A42D {DDCOLORKEY ddckCKDestOverlay;DWORD dwEmptyFaceColor;};
union _DDSURFACEDESC2::$640C42AFF919FFD3058B9E962436B842 {DDPIXELFORMAT ddpfPixelFormat;DWORD dwFVF;};
union _DDSURFACEDESC2::$E56E877DD0D4D3B03846BC7047D947ED {DWORD dwBackBufferCount;DWORD dwDepth;};
union _DDSURFACEDESC2::$F25F5019EA70F6B9B11866A0D418A260 {DWORD dwMipMapCount;DWORD dwRefreshRate;DWORD dwSrcVBHandle;};
union _DDSURFACEDESC::$091DBF7D405BE25E65B16620C008128B {LONG lPitch;DWORD dwLinearSize;};
union _DDSURFACEDESC::$9AB659F8D6A45F8C7834A76B9C40973B {DWORD dwMipMapCount;DWORD dwZBufferBitDepth;DWORD dwRefreshRate;};
struct _DDVIDEOPORTBANDWIDTH {DWORD dwSize;DWORD dwOverlay;DWORD dwColorkey;DWORD dwYInterpolate;DWORD dwYInterpAndColorkey;ULONG_PTR dwReserved1;ULONG_PTR dwReserved2;};
struct _DDVIDEOPORTCAPS {DWORD dwSize;DWORD dwFlags;DWORD dwMaxWidth;DWORD dwMaxVBIWidth;DWORD dwMaxHeight;DWORD dwVideoPortID;DWORD dwCaps;DWORD dwFX;DWORD dwNumAutoFlipSurfaces;DWORD dwAlignVideoPortBoundary;DWORD dwAlignVideoPortPrescaleWidth;DWORD dwAlignVideoPortCropBoundary;DWORD dwAlignVideoPortCropWidth;DWORD dwPreshrinkXStep;DWORD dwPreshrinkYStep;DWORD dwNumVBIAutoFlipSurfaces;DWORD dwNumPreferredAutoflip;WORD wNumFilterTapsX;WORD wNumFilterTapsY;};
struct _DDVIDEOPORTCONNECT {DWORD dwSize;DWORD dwPortWidth;GUID guidTypeID;DWORD dwFlags;ULONG_PTR dwReserved1;};
struct _DDVIDEOPORTDESC {DWORD dwSize;DWORD dwFieldWidth;DWORD dwVBIWidth;DWORD dwFieldHeight;DWORD dwMicrosecondsPerField;DWORD dwMaxPixelsPerSecond;DWORD dwVideoPortID;DWORD dwReserved1;DDVIDEOPORTCONNECT VideoPortType;ULONG_PTR dwReserved2;ULONG_PTR dwReserved3;};
struct _DDVIDEOPORTINFO {DWORD dwSize;DWORD dwOriginX;DWORD dwOriginY;DWORD dwVPFlags;RECT rCrop;DWORD dwPrescaleWidth;DWORD dwPrescaleHeight;LPDDPIXELFORMAT lpddpfInputFormat;LPDDPIXELFORMAT lpddpfVBIInputFormat;LPDDPIXELFORMAT lpddpfVBIOutputFormat;DWORD dwVBIHeight;ULONG_PTR dwReserved1;ULONG_PTR dwReserved2;};
struct _DDVIDEOPORTNOTIFY {LARGE_INTEGER ApproximateTimeStamp;LONG lField;UINT dwSurfaceIndex;LONG lDone;};
struct _DDVIDEOPORTSTATUS {DWORD dwSize;BOOL bInUse;DWORD dwFlags;DWORD dwReserved1;DDVIDEOPORTCONNECT VideoPortType;ULONG_PTR dwReserved2;ULONG_PTR dwReserved3;};
struct _DD_ADDATTACHEDSURFACEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;PDD_SURFACE_LOCAL lpSurfAttached;HRESULT ddRVal;PVOID AddAttachedSurface;};
struct _DD_ATTACHLIST {PDD_ATTACHLIST lpLink;PDD_SURFACE_LOCAL lpAttached;};
struct _DD_BEGINMOCOMPFRAMEDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_MOTIONCOMP_LOCAL lpMoComp;PDD_SURFACE_LOCAL lpDestSurface;DWORD dwInputDataSize;LPVOID lpInputData;DWORD dwOutputDataSize;LPVOID lpOutputData;HRESULT ddRVal;};
struct _DD_BLTDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDDestSurface;RECTL rDest;PDD_SURFACE_LOCAL lpDDSrcSurface;RECTL rSrc;DWORD dwFlags;DWORD dwROPFlags;DDBLTFX bltFX;HRESULT ddRVal;PVOID Blt;BOOL IsClipped;RECTL rOrigDest;RECTL rOrigSrc;DWORD dwRectCnt;LPRECT prDestRects;DWORD dwAFlags;DDARGB ddargbScaleFactors;};
struct _DD_CANCREATESURFACEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DDSURFACEDESC *lpDDSurfaceDesc;DWORD bIsDifferentPixelFormat;HRESULT ddRVal;PVOID CanCreateSurface;};
struct _DD_CANCREATEVPORTDATA {PDD_DIRECTDRAW_LOCAL lpDD;LPDDVIDEOPORTDESC lpDDVideoPortDesc;HRESULT ddRVal;PVOID CanCreateVideoPort;};
struct _DD_CLIPPER_GLOBAL {ULONG_PTR dwReserved1;};
struct _DD_CLIPPER_LOCAL {ULONG_PTR dwReserved1;};
struct _DD_COLORCONTROLCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_COLORCB_COLORCONTROL ColorControl;};
struct _DD_COLORCONTROLDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;LPDDCOLORCONTROL lpColorData;DWORD dwFlags;HRESULT ddRVal;PVOID ColorControl;};
struct _DD_CREATEMOCOMPDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_MOTIONCOMP_LOCAL lpMoComp;GUID *lpGuid;DWORD dwUncompWidth;DWORD dwUncompHeight;DDPIXELFORMAT ddUncompPixelFormat;LPVOID lpData;DWORD dwDataSize;HRESULT ddRVal;};
struct _DD_CREATEPALETTEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_PALETTE_GLOBAL lpDDPalette;LPPALETTEENTRY lpColorTable;HRESULT ddRVal;PVOID CreatePalette;BOOL is_excl;};
struct _DD_CREATESURFACEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DDSURFACEDESC *lpDDSurfaceDesc;PDD_SURFACE_LOCAL *lplpSList;DWORD dwSCnt;HRESULT ddRVal;PVOID CreateSurface;};
struct _DD_CREATESURFACEEXDATA {DWORD dwFlags;PDD_DIRECTDRAW_LOCAL lpDDLcl;PDD_SURFACE_LOCAL lpDDSLcl;HRESULT ddRVal;};
struct _DD_CREATEVPORTDATA {PDD_DIRECTDRAW_LOCAL lpDD;LPDDVIDEOPORTDESC lpDDVideoPortDesc;PDD_VIDEOPORT_LOCAL lpVideoPort;HRESULT ddRVal;PVOID CreateVideoPort;};
struct _DD_D3DBUFCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_CANCREATESURFACE CanCreateD3DBuffer;PDD_CREATESURFACE CreateD3DBuffer;PDD_SURFCB_DESTROYSURFACE DestroyD3DBuffer;PDD_SURFCB_LOCK LockD3DBuffer;PDD_SURFCB_UNLOCK UnlockD3DBuffer;};
struct _DD_DESTROYDDLOCALDATA {DWORD dwFlags;PDD_DIRECTDRAW_LOCAL pDDLcl;HRESULT ddRVal;};
struct _DD_DESTROYMOCOMPDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_MOTIONCOMP_LOCAL lpMoComp;HRESULT ddRVal;};
struct _DD_DESTROYPALETTEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_PALETTE_GLOBAL lpDDPalette;HRESULT ddRVal;PVOID DestroyPalette;};
struct _DD_DESTROYSURFACEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;HRESULT ddRVal;PVOID DestroySurface;};
struct _DD_DESTROYVPORTDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;HRESULT ddRVal;PVOID DestroyVideoPort;};
struct _DD_DIRECTDRAW_GLOBAL {PVOID dhpdev;ULONG_PTR dwReserved1;ULONG_PTR dwReserved2;LPDDVIDEOPORTCAPS lpDDVideoPortCaps;};
struct _DD_DIRECTDRAW_LOCAL {PDD_DIRECTDRAW_GLOBAL lpGbl;};
struct _DD_DRVSETCOLORKEYDATA {PDD_SURFACE_LOCAL lpDDSurface;DWORD dwFlags;DDCOLORKEY ckNew;HRESULT ddRVal;PVOID SetColorKey;};
struct _DD_ENDMOCOMPFRAMEDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_MOTIONCOMP_LOCAL lpMoComp;LPVOID lpInputData;DWORD dwInputDataSize;HRESULT ddRVal;};
struct _DD_FLIPDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpSurfCurr;PDD_SURFACE_LOCAL lpSurfTarg;DWORD dwFlags;HRESULT ddRVal;PVOID Flip;PDD_SURFACE_LOCAL lpSurfCurrLeft;PDD_SURFACE_LOCAL lpSurfTargLeft;};
struct _DD_FLIPTOGDISURFACEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD dwToGDI;DWORD dwReserved;HRESULT ddRVal;PVOID FlipToGDISurface;};
struct _DD_FLIPVPORTDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;PDD_SURFACE_LOCAL lpSurfCurr;PDD_SURFACE_LOCAL lpSurfTarg;HRESULT ddRVal;PVOID FlipVideoPort;};
struct _DD_FREEDRIVERMEMORYDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;HRESULT ddRVal;PVOID FreeDriverMemory;};
struct _DD_GETAVAILDRIVERMEMORYDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DDSCAPS DDSCaps;DWORD dwTotal;DWORD dwFree;HRESULT ddRVal;PVOID GetAvailDriverMemory;};
struct _DD_GETBLTSTATUSDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;DWORD dwFlags;HRESULT ddRVal;PVOID GetBltStatus;};
struct _DD_GETDRIVERINFODATA {PVOID dhpdev;DWORD dwSize;DWORD dwFlags;GUID guidInfo;DWORD dwExpectedSize;PVOID lpvData;DWORD dwActualSize;HRESULT ddRVal;};
struct _DD_GETDRIVERSTATEDATA {DWORD dwFlags;union {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD_PTR dwhContext;};LPDWORD lpdwStates;DWORD dwLength;HRESULT ddRVal;};
union _DD_GETDRIVERSTATEDATA::$ABF7C201B03F35578F4E1B252F89AF54 {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD_PTR dwhContext;};
struct _DD_GETFLIPSTATUSDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;DWORD dwFlags;HRESULT ddRVal;PVOID GetFlipStatus;};
struct _DD_GETHEAPALIGNMENTDATA;
struct _DD_GETINTERNALMOCOMPDATA {PDD_DIRECTDRAW_LOCAL lpDD;GUID *lpGuid;DWORD dwWidth;DWORD dwHeight;DDPIXELFORMAT ddPixelFormat;DWORD dwScratchMemAlloc;HRESULT ddRVal;};
struct _DD_GETMOCOMPCOMPBUFFDATA {PDD_DIRECTDRAW_LOCAL lpDD;GUID *lpGuid;DWORD dwWidth;DWORD dwHeight;DDPIXELFORMAT ddPixelFormat;DWORD dwNumTypesCompBuffs;LPDDCOMPBUFFERINFO lpCompBuffInfo;HRESULT ddRVal;};
struct _DD_GETMOCOMPFORMATSDATA {PDD_DIRECTDRAW_LOCAL lpDD;GUID *lpGuid;DWORD dwNumFormats;LPDDPIXELFORMAT lpFormats;HRESULT ddRVal;};
struct _DD_GETMOCOMPGUIDSDATA {PDD_DIRECTDRAW_LOCAL lpDD;DWORD dwNumGuids;GUID *lpGuids;HRESULT ddRVal;};
struct _DD_GETSCANLINEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD dwScanLine;HRESULT ddRVal;PVOID GetScanLine;};
struct _DD_GETVPORTBANDWIDTHDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;LPDDPIXELFORMAT lpddpfFormat;DWORD dwWidth;DWORD dwHeight;DWORD dwFlags;LPDDVIDEOPORTBANDWIDTH lpBandwidth;HRESULT ddRVal;PVOID GetVideoPortBandwidth;};
struct _DD_GETVPORTCONNECTDATA {PDD_DIRECTDRAW_LOCAL lpDD;DWORD dwPortId;LPDDVIDEOPORTCONNECT lpConnect;DWORD dwNumEntries;HRESULT ddRVal;PVOID GetVideoPortConnectInfo;};
struct _DD_GETVPORTFIELDDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;BOOL bField;HRESULT ddRVal;PVOID GetVideoPortField;};
struct _DD_GETVPORTFLIPSTATUSDATA {PDD_DIRECTDRAW_LOCAL lpDD;FLATPTR fpSurface;HRESULT ddRVal;PVOID GetVideoPortFlipStatus;};
struct _DD_GETVPORTINPUTFORMATDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwFlags;LPDDPIXELFORMAT lpddpfFormat;DWORD dwNumFormats;HRESULT ddRVal;PVOID GetVideoPortInputFormats;};
struct _DD_GETVPORTLINEDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwLine;HRESULT ddRVal;PVOID GetVideoPortLine;};
struct _DD_GETVPORTOUTPUTFORMATDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwFlags;LPDDPIXELFORMAT lpddpfInputFormat;LPDDPIXELFORMAT lpddpfOutputFormats;DWORD dwNumFormats;HRESULT ddRVal;PVOID GetVideoPortInputFormats;};
struct _DD_GETVPORTSIGNALDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwStatus;HRESULT ddRVal;PVOID GetVideoSignalStatus;};
struct _DD_HALINFO {DWORD dwSize;VIDEOMEMORYINFO vmiData;DDNTCORECAPS ddCaps;PDD_GETDRIVERINFO GetDriverInfo;DWORD dwFlags;PVOID lpD3DGlobalDriverData;PVOID lpD3DHALCallbacks;PDD_D3DBUFCALLBACKS lpD3DBufCallbacks;};
struct _DD_HALINFO_V4 {DWORD dwSize;VIDEOMEMORYINFO vmiData;DDNTCORECAPS ddCaps;PDD_GETDRIVERINFO GetDriverInfo;DWORD dwFlags;};
struct _DD_LOCKDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;DWORD bHasRect;RECTL rArea;LPVOID lpSurfData;HRESULT ddRVal;PVOID Lock;DWORD dwFlags;FLATPTR fpProcess;};
struct _DD_MAPMEMORYDATA {PDD_DIRECTDRAW_GLOBAL lpDD;BOOL bMap;HANDLE hProcess;FLATPTR fpProcess;HRESULT ddRVal;};
struct _DD_MISCELLANEOUS2CALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_ALPHABLT AlphaBlt;PDD_CREATESURFACEEX CreateSurfaceEx;PDD_GETDRIVERSTATE GetDriverState;PDD_DESTROYDDLOCAL DestroyDDLocal;};
struct _DD_MISCELLANEOUSCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_GETAVAILDRIVERMEMORY GetAvailDriverMemory;};
struct _DD_MORECAPS {DWORD dwSize;DWORD dwAlphaCaps;DWORD dwSVBAlphaCaps;DWORD dwVSBAlphaCaps;DWORD dwSSBAlphaCaps;DWORD dwFilterCaps;DWORD dwSVBFilterCaps;DWORD dwVSBFilterCaps;DWORD dwSSBFilterCaps;};
struct _DD_MORESURFACECAPS {DWORD dwSize;DDSCAPSEX ddsCapsMore;struct _DD_MORESURFACECAPS::tagNTExtendedHeapRestrictions ddsExtendedHeapRestrictions[1];};
struct _DD_MORESURFACECAPS::tagNTExtendedHeapRestrictions {DDSCAPSEX ddsCapsEx;DDSCAPSEX ddsCapsExAlt;};
struct _DD_NONLOCALVIDMEMCAPS {DWORD dwSize;DWORD dwNLVBCaps;DWORD dwNLVBCaps2;DWORD dwNLVBCKeyCaps;DWORD dwNLVBFXCaps;DWORD dwNLVBRops[8];};
struct _DD_NTCALLBACKS {DWORD dwSize;DWORD dwFlags;PDD_FREEDRIVERMEMORY FreeDriverMemory;PDD_SETEXCLUSIVEMODE SetExclusiveMode;PDD_FLIPTOGDISURFACE FlipToGDISurface;};
struct _DD_PALETTE_GLOBAL {ULONG_PTR Reserved1;};
struct _DD_PALETTE_LOCAL {ULONG dwReserved0;ULONG_PTR dwReserved1;};
struct _DD_QUERYMOCOMPSTATUSDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_MOTIONCOMP_LOCAL lpMoComp;PDD_SURFACE_LOCAL lpSurface;DWORD dwFlags;HRESULT ddRVal;};
struct _DD_RENDERMOCOMPDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_MOTIONCOMP_LOCAL lpMoComp;DWORD dwNumBuffers;LPDDMOCOMPBUFFERINFO lpBufferInfo;DWORD dwFunction;LPVOID lpInputData;DWORD dwInputDataSize;LPVOID lpOutputData;DWORD dwOutputDataSize;HRESULT ddRVal;};
struct _DD_SETCLIPLISTDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;HRESULT ddRVal;PVOID SetClipList;};
struct _DD_SETCOLORKEYDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;DWORD dwFlags;DDCOLORKEY ckNew;HRESULT ddRVal;PVOID SetColorKey;};
struct _DD_SETENTRIESDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_PALETTE_GLOBAL lpDDPalette;DWORD dwBase;DWORD dwNumEntries;LPPALETTEENTRY lpEntries;HRESULT ddRVal;PVOID SetEntries;};
struct _DD_SETEXCLUSIVEMODEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD dwEnterExcl;DWORD dwReserved;HRESULT ddRVal;PVOID SetExclusiveMode;};
struct _DD_SETOVERLAYPOSITIONDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSrcSurface;PDD_SURFACE_LOCAL lpDDDestSurface;LONG lXPos;LONG lYPos;HRESULT ddRVal;PVOID SetOverlayPosition;};
struct _DD_SETPALETTEDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;PDD_PALETTE_GLOBAL lpDDPalette;HRESULT ddRVal;PVOID SetPalette;BOOL Attach;};
struct _DD_STEREOMODE {DWORD dwSize;DWORD dwHeight;DWORD dwWidth;DWORD dwBpp;DWORD dwRefreshRate;BOOL bSupported;};
struct _DD_SURFACE_GLOBAL {union {DWORD dwBlockSizeY;LONG lSlicePitch;};union {PVIDEOMEMORY lpVidMemHeap;DWORD dwBlockSizeX;DWORD dwUserMemSize;};FLATPTR fpVidMem;union {LONG lPitch;DWORD dwLinearSize;};LONG yHint;LONG xHint;DWORD wHeight;DWORD wWidth;ULONG_PTR dwReserved1;DDPIXELFORMAT ddpfSurface;FLATPTR fpHeapOffset;HANDLE hCreatorProcess;};
union _DD_SURFACE_GLOBAL::$091DBF7D405BE25E65B16620C008128B {LONG lPitch;DWORD dwLinearSize;};
union _DD_SURFACE_GLOBAL::$3C18C932179FDAE4423F29A1ADEAE546 {PVIDEOMEMORY lpVidMemHeap;DWORD dwBlockSizeX;DWORD dwUserMemSize;};
union _DD_SURFACE_GLOBAL::$7A21B59C32CFF5CA15CB97B965C92E66 {DWORD dwBlockSizeY;LONG lSlicePitch;};
struct _DD_SURFACE_INT {PDD_SURFACE_LOCAL lpLcl;};
struct _DD_SURFACE_LOCAL {PDD_SURFACE_GLOBAL lpGbl;DWORD dwFlags;DDSCAPS ddsCaps;ULONG_PTR dwReserved1;union {DDCOLORKEY ddckCKSrcOverlay;DDCOLORKEY ddckCKSrcBlt;};union {DDCOLORKEY ddckCKDestOverlay;DDCOLORKEY ddckCKDestBlt;};PDD_SURFACE_MORE lpSurfMore;PDD_ATTACHLIST lpAttachList;PDD_ATTACHLIST lpAttachListFrom;RECT rcOverlaySrc;};
union _DD_SURFACE_LOCAL::$8CE80F6FCD2F01A44D21440F2D83D305 {DDCOLORKEY ddckCKSrcOverlay;DDCOLORKEY ddckCKSrcBlt;};
union _DD_SURFACE_LOCAL::$E7EC937F2BC99723904DDC13F7AE4E6E {DDCOLORKEY ddckCKDestOverlay;DDCOLORKEY ddckCKDestBlt;};
struct _DD_SURFACE_MORE {DWORD dwMipMapCount;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwOverlayFlags;DDSCAPSEX ddsCapsEx;DWORD dwSurfaceHandle;};
struct _DD_SYNCSURFACEDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;DWORD dwSurfaceOffset;ULONG_PTR fpLockPtr;LONG lPitch;DWORD dwOverlayOffset;ULONG dwDriverReserved1;ULONG dwDriverReserved2;ULONG dwDriverReserved3;ULONG dwDriverReserved4;HRESULT ddRVal;};
struct _DD_SYNCVIDEOPORTDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwOriginOffset;DWORD dwHeight;DWORD dwVBIHeight;ULONG dwDriverReserved1;ULONG dwDriverReserved2;ULONG dwDriverReserved3;HRESULT ddRVal;};
struct _DD_UNLOCKDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDSurface;HRESULT ddRVal;PVOID Unlock;};
struct _DD_UPDATENONLOCALHEAPDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD dwHeap;FLATPTR fpGARTLin;FLATPTR fpGARTDev;ULONG_PTR ulPolicyMaxBytes;HRESULT ddRVal;void *UpdateNonLocalHeap;};
struct _DD_UPDATEOVERLAYDATA {PDD_DIRECTDRAW_GLOBAL lpDD;PDD_SURFACE_LOCAL lpDDDestSurface;RECTL rDest;PDD_SURFACE_LOCAL lpDDSrcSurface;RECTL rSrc;DWORD dwFlags;DDOVERLAYFX overlayFX;HRESULT ddRVal;PVOID UpdateOverlay;};
struct _DD_UPDATEVPORTDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;PDD_SURFACE_INT *lplpDDSurface;PDD_SURFACE_INT *lplpDDVBISurface;LPDDVIDEOPORTINFO lpVideoInfo;DWORD dwFlags;DWORD dwNumAutoflip;DWORD dwNumVBIAutoflip;HRESULT ddRVal;PVOID UpdateVideoPort;};
struct _DD_VIDEOPORT_LOCAL {PDD_DIRECTDRAW_LOCAL lpDD;DDVIDEOPORTDESC ddvpDesc;DDVIDEOPORTINFO ddvpInfo;PDD_SURFACE_INT lpSurface;PDD_SURFACE_INT lpVBISurface;DWORD dwNumAutoflip;DWORD dwNumVBIAutoflip;ULONG_PTR dwReserved1;ULONG_PTR dwReserved2;ULONG_PTR dwReserved3;};
struct _DD_VPORTCOLORDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwFlags;LPDDCOLORCONTROL lpColorData;HRESULT ddRVal;PVOID ColorControl;};
struct _DD_WAITFORVERTICALBLANKDATA {PDD_DIRECTDRAW_GLOBAL lpDD;DWORD dwFlags;DWORD bIsInVB;DWORD hEvent;HRESULT ddRVal;PVOID WaitForVerticalBlank;};
struct _DD_WAITFORVPORTSYNCDATA {PDD_DIRECTDRAW_LOCAL lpDD;PDD_VIDEOPORT_LOCAL lpVideoPort;DWORD dwFlags;DWORD dwLine;DWORD dwTimeOut;HRESULT ddRVal;PVOID UpdateVideoPort;};
enum _DEBUGOBJECTINFOCLASS {DebugObjectUnusedInformation = 0x0,DebugObjectKillProcessOnExitInformation = 0x1,};
struct _DEBUG_OBJECT_KILL_PROCESS_ON_EXIT_INFORMATION {ULONG KillProcessOnExit;};
struct _DESCRIPTOR_TABLE_ENTRY {ULONG Selector;LDT_ENTRY Descriptor;};
struct _DESIGNVECTOR {DWORD dvReserved;DWORD dvNumAxes;LONG dvValues[16];};
enum _DETECTION_TYPE {DetectNone = 0x0,DetectInt13 = 0x1,DetectExInt13 = 0x2,};
struct _DEVHTADJDATA {DWORD DeviceFlags;DWORD DeviceXDPI;DWORD DeviceYDPI;PDEVHTINFO pDefHTInfo;PDEVHTINFO pAdjHTInfo;};
struct _DEVHTINFO {DWORD HTFlags;DWORD HTPatternSize;DWORD DevPelsDPI;COLORINFO ColorInfo;};
enum _DEVICE_POWER_STATE {PowerDeviceUnspecified = 0x0,PowerDeviceD0 = 0x1,PowerDeviceD1 = 0x2,PowerDeviceD2 = 0x3,PowerDeviceD3 = 0x4,PowerDeviceMaximum = 0x5,};
struct _DEVINFO {FLONG flGraphicsCaps;LOGFONTW lfDefaultFont;LOGFONTW lfAnsiVarFont;LOGFONTW lfAnsiFixFont;ULONG cFonts;ULONG iDitherFormat;USHORT cxDither;USHORT cyDither;HPALETTE hpalDefault;FLONG flGraphicsCaps2;};
struct _DISK_CACHE_INFORMATION {BOOLEAN ParametersSavable;BOOLEAN ReadCacheEnabled;BOOLEAN WriteCacheEnabled;DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;WORD DisablePrefetchTransferLength;BOOLEAN PrefetchScalar;union {struct _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D::$B2B02F0A7FAA2EF9E06FFE2893D08AB3 ScalarPrefetch;struct _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D::$99025D9F8BC16C326FB237046D6F6F6F BlockPrefetch;};};
union _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D {struct _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D::$B2B02F0A7FAA2EF9E06FFE2893D08AB3 ScalarPrefetch;struct _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D::$99025D9F8BC16C326FB237046D6F6F6F BlockPrefetch;};
struct _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D::$99025D9F8BC16C326FB237046D6F6F6F {WORD Minimum;WORD Maximum;};
struct _DISK_CACHE_INFORMATION::$0AD8AF95EFD10BD5272FB6EC04FE066D::$B2B02F0A7FAA2EF9E06FFE2893D08AB3 {WORD Minimum;WORD Maximum;WORD MaximumBlocks;};
struct _DISK_DETECTION_INFO {DWORD SizeOfDetectInfo;DETECTION_TYPE DetectionType;union {struct {DISK_INT13_INFO Int13;DISK_EX_INT13_INFO ExInt13;};};};
union _DISK_DETECTION_INFO::$2344D2D0A84D08BC25A5ABEA77F9F68C {struct {DISK_INT13_INFO Int13;DISK_EX_INT13_INFO ExInt13;};};
struct _DISK_DETECTION_INFO::$2344D2D0A84D08BC25A5ABEA77F9F68C::$C6895C4B5C301AAC9475EDA00CD39D51 {DISK_INT13_INFO Int13;DISK_EX_INT13_INFO ExInt13;};
struct _DISK_EXTENT {DWORD DiskNumber;LARGE_INTEGER StartingOffset;LARGE_INTEGER ExtentLength;};
struct _DISK_EX_INT13_INFO {WORD ExBufferSize;WORD ExFlags;DWORD ExCylinders;DWORD ExHeads;DWORD ExSectorsPerTrack;DWORD64 ExSectorsPerDrive;WORD ExSectorSize;WORD ExReserved;};
struct _DISK_GEOMETRY {LARGE_INTEGER Cylinders;MEDIA_TYPE MediaType;DWORD TracksPerCylinder;DWORD SectorsPerTrack;DWORD BytesPerSector;};
struct _DISK_GEOMETRY_EX {DISK_GEOMETRY Geometry;LARGE_INTEGER DiskSize;BYTE Data[1];};
struct _DISK_GROW_PARTITION {DWORD PartitionNumber;LARGE_INTEGER BytesToGrow;};
struct _DISK_HISTOGRAM {LARGE_INTEGER DiskSize;LARGE_INTEGER Start;LARGE_INTEGER End;LARGE_INTEGER Average;LARGE_INTEGER AverageRead;LARGE_INTEGER AverageWrite;DWORD Granularity;DWORD Size;DWORD ReadCount;DWORD WriteCount;PHISTOGRAM_BUCKET Histogram;};
struct _DISK_INT13_INFO {WORD DriveSelect;DWORD MaxCylinders;WORD SectorsPerTrack;WORD MaxHeads;WORD NumberDrives;};
struct _DISK_LOGGING {BYTE Function;PVOID BufferAddress;DWORD BufferSize;};
struct _DISK_PARTITION_INFO {DWORD SizeOfPartitionInfo;PARTITION_STYLE PartitionStyle;union {struct _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A::$8E6D798953B4C2C52A2B1F6527ADC626 Mbr;struct _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A::$BE6FFFE6B14D10E80BF326EA5B53821A Gpt;};};
union _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A {struct _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A::$8E6D798953B4C2C52A2B1F6527ADC626 Mbr;struct _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A::$BE6FFFE6B14D10E80BF326EA5B53821A Gpt;};
struct _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A::$8E6D798953B4C2C52A2B1F6527ADC626 {DWORD Signature;};
struct _DISK_PARTITION_INFO::$6B403D6F10C00C26C683389AEFB7B92A::$BE6FFFE6B14D10E80BF326EA5B53821A {GUID DiskId;};
struct _DISK_PERFORMANCE {LARGE_INTEGER BytesRead;LARGE_INTEGER BytesWritten;LARGE_INTEGER ReadTime;LARGE_INTEGER WriteTime;LARGE_INTEGER IdleTime;DWORD ReadCount;DWORD WriteCount;DWORD QueueDepth;DWORD SplitCount;LARGE_INTEGER QueryTime;DWORD StorageDeviceNumber;WCHAR StorageManagerName[8];};
struct _DISK_RECORD {LARGE_INTEGER ByteOffset;LARGE_INTEGER StartTime;LARGE_INTEGER EndTime;PVOID VirtualAddress;DWORD NumberOfBytes;BYTE DeviceNumber;BOOLEAN ReadRequest;};
struct _DISPLAY_DEVICEA {DWORD cb;CHAR DeviceName[32];CHAR DeviceString[128];DWORD StateFlags;CHAR DeviceID[128];CHAR DeviceKey[128];};
struct _DISPLAY_DEVICEW {DWORD cb;WCHAR DeviceName[32];WCHAR DeviceString[128];DWORD StateFlags;WCHAR DeviceID[128];WCHAR DeviceKey[128];};
struct _DOCINFOA {int cbSize;LPCSTR lpszDocName;LPCSTR lpszOutput;LPCSTR lpszDatatype;DWORD fwType;};
struct _DOCINFOW {int cbSize;LPCWSTR lpszDocName;LPCWSTR lpszOutput;LPCWSTR lpszDatatype;DWORD fwType;};
struct _DRH_APIBITMAPDATA {SURFOBJ *pso;BOOL b;};
struct _DRIVEROBJ {PVOID pvObj;FREEOBJPROC pFreeProc;HDEV hdev;DHPDEV dhpdev;};
struct _DRIVE_LAYOUT_INFORMATION {DWORD PartitionCount;DWORD Signature;PARTITION_INFORMATION PartitionEntry[1];};
struct _DRIVE_LAYOUT_INFORMATION_EX {DWORD PartitionStyle;DWORD PartitionCount;union {DRIVE_LAYOUT_INFORMATION_MBR Mbr;DRIVE_LAYOUT_INFORMATION_GPT Gpt;};PARTITION_INFORMATION_EX PartitionEntry[1];};
union _DRIVE_LAYOUT_INFORMATION_EX::$E2E3D8483D032B54611BEB6ADCC46344 {DRIVE_LAYOUT_INFORMATION_MBR Mbr;DRIVE_LAYOUT_INFORMATION_GPT Gpt;};
struct _DRIVE_LAYOUT_INFORMATION_GPT {GUID DiskId;LARGE_INTEGER StartingUsableOffset;LARGE_INTEGER UsableLength;ULONG MaxPartitionCount;};
struct _DRIVE_LAYOUT_INFORMATION_MBR {ULONG Signature;};
struct _DRVFN {ULONG iFunc;PFN pfn;};
struct _EFI_DRIVER_ENTRY {ULONG Version;ULONG Length;ULONG Id;ULONG Attributes;ULONG FriendlyNameOffset;ULONG DriverFilePathOffset;};
struct _ENGSAFESEMAPHORE {HSEMAPHORE hsem;LONG lCount;};
enum _ENG_DEVICE_ATTRIBUTE {QDA_RESERVED = 0x0,QDA_ACCELERATION_LEVEL = 0x1,};
enum _ENG_SYSTEM_ATTRIBUTE {EngProcessorFeature = 0x1,EngNumberOfProcessors = 0x2,EngOptimumAvailableUserMemory = 0x3,EngOptimumAvailableSystemMemory = 0x4,};
struct _ENG_TIME_FIELDS {USHORT usYear;USHORT usMonth;USHORT usDay;USHORT usHour;USHORT usMinute;USHORT usSecond;USHORT usMilliseconds;USHORT usWeekday;};
struct _ENUMRECTS {ULONG c;RECTL arcl[1];};
struct _ENUMTEXTMETRICA {NEWTEXTMETRICEXA etmNewTextMetricEx;AXESLISTA etmAxesList;};
struct _ENUMTEXTMETRICW {NEWTEXTMETRICEXW etmNewTextMetricEx;AXESLISTW etmAxesList;};
struct _EVENTLOGRECORD {DWORD Length;DWORD Reserved;DWORD RecordNumber;DWORD TimeGenerated;DWORD TimeWritten;DWORD EventID;WORD EventType;WORD NumStrings;WORD EventCategory;WORD ReservedFlags;DWORD ClosingRecordNumber;DWORD StringOffset;DWORD UserSidLength;DWORD UserSidOffset;DWORD DataLength;DWORD DataOffset;};
struct _EVENT_BASIC_INFORMATION {EVENT_TYPE EventType;LONG EventState;};
enum _EVENT_INFORMATION_CLASS {EventBasicInformation = 0x0,};
enum _EVENT_TYPE {NotificationEvent = 0x0,SynchronizationEvent = 0x1,};
enum _EXCEPTION_DISPOSITION {ExceptionContinueExecution = 0x0,ExceptionContinueSearch = 0x1,ExceptionNestedException = 0x2,ExceptionCollidedUnwind = 0x3,};
struct _EXCEPTION_POINTERS {PEXCEPTION_RECORD ExceptionRecord;PCONTEXT ContextRecord;};
struct _EXCEPTION_RECORD {DWORD ExceptionCode;DWORD ExceptionFlags;struct _EXCEPTION_RECORD *ExceptionRecord;PVOID ExceptionAddress;DWORD NumberParameters;ULONG_PTR ExceptionInformation[15];};
struct _EXCEPTION_RECORD32 {DWORD ExceptionCode;DWORD ExceptionFlags;DWORD ExceptionRecord;DWORD ExceptionAddress;DWORD NumberParameters;DWORD ExceptionInformation[15];};
struct _EXCEPTION_RECORD64 {DWORD ExceptionCode;DWORD ExceptionFlags;DWORD64 ExceptionRecord;DWORD64 ExceptionAddress;DWORD NumberParameters;DWORD __unusedAlignment;DWORD64 ExceptionInformation[15];};
struct _EXCEPTION_REGISTRATION_RECORD {struct _EXCEPTION_REGISTRATION_RECORD *Next;PEXCEPTION_ROUTINE Handler;};
struct _EXFAT_STATISTICS {ULONG CreateHits;ULONG SuccessfulCreates;ULONG FailedCreates;ULONG NonCachedReads;ULONG NonCachedReadBytes;ULONG NonCachedWrites;ULONG NonCachedWriteBytes;ULONG NonCachedDiskReads;ULONG NonCachedDiskWrites;};
struct _FAT_STATISTICS {ULONG CreateHits;ULONG SuccessfulCreates;ULONG FailedCreates;ULONG NonCachedReads;ULONG NonCachedReadBytes;ULONG NonCachedWrites;ULONG NonCachedWriteBytes;ULONG NonCachedDiskReads;ULONG NonCachedDiskWrites;};
struct _FD_DEVICEMETRICS {FLONG flRealizedType;POINTE pteBase;POINTE pteSide;LONG lD;FIX fxMaxAscender;FIX fxMaxDescender;POINTL ptlUnderline1;POINTL ptlStrikeout;POINTL ptlULThickness;POINTL ptlSOThickness;ULONG cxMax;ULONG cyMax;ULONG cjGlyphMax;FD_XFORM fdxQuantized;LONG lNonLinearExtLeading;LONG lNonLinearIntLeading;LONG lNonLinearMaxCharWidth;LONG lNonLinearAvgCharWidth;LONG lMinA;LONG lMinC;LONG lMinD;LONG alReserved[1];};
struct _FD_GLYPHATTR {ULONG cjThis;ULONG cGlyphs;ULONG iMode;BYTE aGlyphAttr[1];};
struct _FD_GLYPHSET {ULONG cjThis;FLONG flAccel;ULONG cGlyphsSupported;ULONG cRuns;WCRUN awcrun[1];};
struct _FD_KERNINGPAIR {WCHAR wcFirst;WCHAR wcSecond;FWORD fwdKern;};
struct _FD_LIGATURE {ULONG culThis;ULONG ulType;ULONG cLigatures;LIGATURE alig[1];};
struct _FD_XFORM {FLOATL eXX;FLOATL eXY;FLOATL eYX;FLOATL eYY;};
struct _FIBER {PVOID FiberData;struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;PVOID StackBase;PVOID StackLimit;PVOID DeallocationStack;CONTEXT FiberContext;PVOID Wx86Tib;struct _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;PVOID FlsData;ULONG GuaranteedStackBytes;ULONG TebFlags;};
struct _FILEOFFSET_INFORMATION {unsigned __int64 DontUse : 9;unsigned __int64 Offset : 48;unsigned __int64 Reserved : 7;};
struct _FILESYSTEM_STATISTICS {USHORT FileSystemType;USHORT Version;ULONG SizeOfCompleteStructure;ULONG UserFileReads;ULONG UserFileReadBytes;ULONG UserDiskReads;ULONG UserFileWrites;ULONG UserFileWriteBytes;ULONG UserDiskWrites;ULONG MetaDataReads;ULONG MetaDataReadBytes;ULONG MetaDataDiskReads;ULONG MetaDataWrites;ULONG MetaDataWriteBytes;ULONG MetaDataDiskWrites;};
struct _FILETIME {DWORD dwLowDateTime;DWORD dwHighDateTime;};
struct _FILE_ACCESS_INFORMATION {ACCESS_MASK AccessFlags;};
struct _FILE_ALLOCATION_INFORMATION {LARGE_INTEGER AllocationSize;};
struct _FILE_ATTRIBUTE_TAG_INFORMATION {ULONG FileAttributes;ULONG ReparseTag;};
struct _FILE_BASIC_INFORMATION {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;ULONG FileAttributes;};
struct _FILE_BOTH_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;CCHAR ShortNameLength;WCHAR ShortName[12];WCHAR FileName[1];};
struct _FILE_COMPLETION_INFORMATION {HANDLE Port;PVOID Key;};
struct _FILE_COMPRESSION_INFORMATION {LARGE_INTEGER CompressedFileSize;USHORT CompressionFormat;UCHAR CompressionUnitShift;UCHAR ChunkShift;UCHAR ClusterShift;UCHAR Reserved[3];};
struct _FILE_DIRECTORY_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;WCHAR FileName[1];};
struct _FILE_DISPOSITION_INFORMATION {BOOLEAN DeleteFile;};
struct _FILE_EA_INFORMATION {ULONG EaSize;};
struct _FILE_END_OF_FILE_INFORMATION {LARGE_INTEGER EndOfFile;};
struct _FILE_FS_ATTRIBUTE_INFORMATION {ULONG FileSystemAttributes;ULONG MaximumComponentNameLength;ULONG FileSystemNameLength;WCHAR FileSystemName[1];};
struct _FILE_FS_DEVICE_INFORMATION {DWORD DeviceType;ULONG Characteristics;};
struct _FILE_FS_FULL_SIZE_INFORMATION {LARGE_INTEGER TotalAllocationUnits;LARGE_INTEGER CallerAvailableAllocationUnits;LARGE_INTEGER ActualAvailableAllocationUnits;ULONG SectorsPerAllocationUnit;ULONG BytesPerSector;};
struct _FILE_FS_LABEL_INFORMATION {ULONG VolumeLabelLength;WCHAR VolumeLabel[1];};
struct _FILE_FS_SIZE_INFORMATION {LARGE_INTEGER TotalAllocationUnits;LARGE_INTEGER AvailableAllocationUnits;ULONG SectorsPerAllocationUnit;ULONG BytesPerSector;};
struct _FILE_FS_VOLUME_INFORMATION {LARGE_INTEGER VolumeCreationTime;ULONG VolumeSerialNumber;ULONG VolumeLabelLength;BOOLEAN SupportsObjects;WCHAR VolumeLabel[1];};
struct _FILE_FULL_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;WCHAR FileName[1];};
struct _FILE_FULL_EA_INFORMATION {ULONG NextEntryOffset;UCHAR Flags;UCHAR EaNameLength;USHORT EaValueLength;CHAR EaName[1];};
enum _FILE_INFORMATION_CLASS {FileDirectoryInformation = 0x1,FileFullDirectoryInformation = 0x2,FileBothDirectoryInformation = 0x3,FileBasicInformation = 0x4,FileStandardInformation = 0x5,FileInternalInformation = 0x6,FileEaInformation = 0x7,FileAccessInformation = 0x8,FileNameInformation = 0x9,FileRenameInformation = 0xA,FileLinkInformation = 0xB,FileNamesInformation = 0xC,FileDispositionInformation = 0xD,FilePositionInformation = 0xE,FileFullEaInformation = 0xF,FileModeInformation = 0x10,FileAlignmentInformation = 0x11,FileAllInformation = 0x12,FileAllocationInformation = 0x13,FileEndOfFileInformation = 0x14,FileAlternateNameInformation = 0x15,FileStreamInformation = 0x16,FilePipeInformation = 0x17,FilePipeLocalInformation = 0x18,FilePipeRemoteInformation = 0x19,FileMailslotQueryInformation = 0x1A,FileMailslotSetInformation = 0x1B,FileCompressionInformation = 0x1C,FileObjectIdInformation = 0x1D,FileCompletionInformation = 0x1E,FileMoveClusterInformation = 0x1F,FileQuotaInformation = 0x20,FileReparsePointInformation = 0x21,FileNetworkOpenInformation = 0x22,FileAttributeTagInformation = 0x23,FileTrackingInformation = 0x24,FileIdBothDirectoryInformation = 0x25,FileIdFullDirectoryInformation = 0x26,FileValidDataLengthInformation = 0x27,FileShortNameInformation = 0x28,FileIoCompletionNotificationInformation = 0x29,FileIoStatusBlockRangeInformation = 0x2A,FileIoPriorityHintInformation = 0x2B,FileSfioReserveInformation = 0x2C,FileSfioVolumeInformation = 0x2D,FileHardLinkInformation = 0x2E,FileProcessIdsUsingFileInformation = 0x2F,FileNormalizedNameInformation = 0x30,FileNetworkPhysicalNameInformation = 0x31,FileIdGlobalTxDirectoryInformation = 0x32,FileIsRemoteDeviceInformation = 0x33,FileUnusedInformation = 0x34,FileNumaNodeInformation = 0x35,FileStandardLinkInformation = 0x36,FileRemoteProtocolInformation = 0x37,FileMaximumInformation = 0x38,};
struct _FILE_INTERNAL_INFORMATION {LARGE_INTEGER IndexNumber;};
struct _FILE_IO_COMPLETION_INFORMATION {PVOID KeyContext;PVOID ApcContext;IO_STATUS_BLOCK IoStatusBlock;};
struct _FILE_LINK_INFORMATION {BOOLEAN ReplaceIfExists;HANDLE RootDirectory;ULONG FileNameLength;WCHAR FileName[1];};
struct _FILE_MAILSLOT_QUERY_INFORMATION {ULONG MaximumMessageSize;ULONG MailslotQuota;ULONG NextMessageSize;ULONG MessagesAvailable;LARGE_INTEGER ReadTimeout;};
struct _FILE_MAILSLOT_SET_INFORMATION {PLARGE_INTEGER ReadTimeout;};
struct _FILE_NAME_INFORMATION {ULONG FileNameLength;WCHAR FileName[1];};
struct _FILE_NETWORK_OPEN_INFORMATION {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONG FileAttributes;};
struct _FILE_NOTIFY_INFORMATION {DWORD NextEntryOffset;DWORD Action;DWORD FileNameLength;WCHAR FileName[1];};
struct _FILE_PATH {ULONG Version;ULONG Length;ULONG Type;CHAR FilePath[1];};
struct _FILE_PIPE_INFORMATION {ULONG ReadMode;ULONG CompletionMode;};
struct _FILE_PIPE_LOCAL_INFORMATION {ULONG NamedPipeType;ULONG NamedPipeConfiguration;ULONG MaximumInstances;ULONG CurrentInstances;ULONG InboundQuota;ULONG ReadDataAvailable;ULONG OutboundQuota;ULONG WriteQuotaAvailable;ULONG NamedPipeState;ULONG NamedPipeEnd;};
struct _FILE_PIPE_PEEK_BUFFER {ULONG NamedPipeState;ULONG ReadDataAvailable;ULONG NumberOfMessages;ULONG MessageLength;CHAR Data[1];};
struct _FILE_PIPE_REMOTE_INFORMATION {LARGE_INTEGER CollectDataTime;ULONG MaximumCollectionCount;};
struct _FILE_PIPE_WAIT_FOR_BUFFER {LARGE_INTEGER Timeout;ULONG NameLength;BOOLEAN TimeoutSpecified;WCHAR Name[1];};
struct _FILE_POSITION_INFORMATION {LARGE_INTEGER CurrentByteOffset;};
struct _FILE_QUOTA_INFORMATION {ULONG NextEntryOffset;ULONG SidLength;LARGE_INTEGER ChangeTime;LARGE_INTEGER QuotaUsed;LARGE_INTEGER QuotaThreshold;LARGE_INTEGER QuotaLimit;SID Sid;};
struct _FILE_RENAME_INFORMATION {BOOLEAN ReplaceIfExists;HANDLE RootDirectory;ULONG FileNameLength;WCHAR FileName[1];};
union _FILE_SEGMENT_ELEMENT {PVOID64 Buffer;ULONGLONG Alignment;};
struct _FILE_STANDARD_INFORMATION {LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONG NumberOfLinks;BOOLEAN DeletePending;BOOLEAN Directory;};
struct _FILE_STREAM_INFORMATION {ULONG NextEntryOffset;ULONG StreamNameLength;LARGE_INTEGER StreamSize;LARGE_INTEGER StreamAllocationSize;WCHAR StreamName[1];};
struct _FILE_TRACKING_INFORMATION {HANDLE DestinationFile;ULONG ObjectInformationLength;CHAR ObjectInformation[1];};
struct _FILE_VALID_DATA_LENGTH_INFORMATION {LARGE_INTEGER ValidDataLength;};
struct _FIXED {WORD fract;__int16 value;};
struct _FLOAT128 {__int64 LowPart;__int64 HighPart;};
struct _FLOATING_SAVE_AREA {DWORD ControlWord;DWORD StatusWord;DWORD TagWord;DWORD ErrorOffset;DWORD ErrorSelector;DWORD DataOffset;DWORD DataSelector;BYTE RegisterArea[80];DWORD Cr0NpxState;};
struct _FLOATOBJ {ULONG ul1;ULONG ul2;};
union _FLOAT_LONG {FLOATL e;LONG l;};
struct _FONTDIFF {BYTE jReserved1;BYTE jReserved2;BYTE jReserved3;BYTE bWeight;USHORT usWinWeight;FSHORT fsSelection;FWORD fwdAveCharWidth;FWORD fwdMaxCharInc;POINTL ptlCaret;};
struct _FONTINFO {ULONG cjThis;FLONG flCaps;ULONG cGlyphsSupported;ULONG cjMaxGlyph1;ULONG cjMaxGlyph4;ULONG cjMaxGlyph8;ULONG cjMaxGlyph32;};
struct _FONTOBJ {ULONG iUniq;ULONG iFace;ULONG cxMax;FLONG flFontType;ULONG_PTR iTTUniq;ULONG_PTR iFile;SIZE sizLogResPpi;ULONG ulStyleSize;PVOID pvConsumer;PVOID pvProducer;};
struct _FONTSIM {PTRDIFF dpBold;PTRDIFF dpItalic;PTRDIFF dpBoldItalic;};
struct _FORMAT_EX_PARAMETERS {MEDIA_TYPE MediaType;DWORD StartCylinderNumber;DWORD EndCylinderNumber;DWORD StartHeadNumber;DWORD EndHeadNumber;WORD FormatGapLength;WORD SectorsPerTrack;WORD SectorNumber[1];};
struct _FORMAT_PARAMETERS {MEDIA_TYPE MediaType;DWORD StartCylinderNumber;DWORD EndCylinderNumber;DWORD StartHeadNumber;DWORD EndHeadNumber;};
struct _FPO_DATA {DWORD ulOffStart;DWORD cbProcSize;DWORD cdwLocals;WORD cdwParams;unsigned __int16 cbProlog : 8;unsigned __int16 cbRegs : 3;unsigned __int16 fHasSEH : 1;unsigned __int16 fUseBP : 1;unsigned __int16 reserved : 1;unsigned __int16 cbFrame : 2;};
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER {WORD ChecksumAlgorithm;WORD Reserved;DWORD Flags;DWORD ChecksumChunkSizeInBytes;DWORD ClusterSizeInBytes;};
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER {WORD ChecksumAlgorithm;WORD Reserved;DWORD Flags;};
enum _FSINFOCLASS {FileFsVolumeInformation = 0x1,FileFsLabelInformation = 0x2,FileFsSizeInformation = 0x3,FileFsDeviceInformation = 0x4,FileFsAttributeInformation = 0x5,FileFsControlInformation = 0x6,FileFsFullSizeInformation = 0x7,FileFsObjectIdInformation = 0x8,FileFsDriverPathInformation = 0x9,FileFsMaximumInformation = 0xA,};
struct _GAMMARAMP {WORD Red[256];WORD Green[256];WORD Blue[256];};
struct _GDIINFO {ULONG ulVersion;ULONG ulTechnology;ULONG ulHorzSize;ULONG ulVertSize;ULONG ulHorzRes;ULONG ulVertRes;ULONG cBitsPixel;ULONG cPlanes;ULONG ulNumColors;ULONG flRaster;ULONG ulLogPixelsX;ULONG ulLogPixelsY;ULONG flTextCaps;ULONG ulDACRed;ULONG ulDACGreen;ULONG ulDACBlue;ULONG ulAspectX;ULONG ulAspectY;ULONG ulAspectXY;LONG xStyleStep;LONG yStyleStep;LONG denStyleStep;POINTL ptlPhysOffset;SIZEL szlPhysSize;ULONG ulNumPalReg;COLORINFO ciDevice;ULONG ulDevicePelsDPI;ULONG ulPrimaryOrder;ULONG ulHTPatternSize;ULONG ulHTOutputFormat;ULONG flHTFlags;ULONG ulVRefresh;ULONG ulBltAlignment;ULONG ulPanningHorzRes;ULONG ulPanningVertRes;ULONG xPanningAlignment;ULONG yPanningAlignment;ULONG cxHTPat;ULONG cyHTPat;LPBYTE pHTPatA;LPBYTE pHTPatB;LPBYTE pHTPatC;ULONG flShadeBlend;ULONG ulPhysicalPixelCharacteristics;ULONG ulPhysicalPixelGamma;};
struct _GDI_TEB_BATCH {ULONG Offset;HANDLE HDC;ULONG Buffer[310];};
struct _GENERATE_NAME_CONTEXT {USHORT Checksum;BOOLEAN CheckSumInserted;UCHAR NameLength;WCHAR NameBuffer[8];ULONG ExtensionLength;WCHAR ExtensionBuffer[4];ULONG LastIndexValue;};
struct _GENERIC_MAPPING {ACCESS_MASK GenericRead;ACCESS_MASK GenericWrite;ACCESS_MASK GenericExecute;ACCESS_MASK GenericAll;};
struct _GLYPHBITS {POINTL ptlOrigin;SIZEL sizlBitmap;BYTE aj[1];};
struct _GLYPHDATA {GLYPHDEF gdf;HGLYPH hg;FIX fxD;FIX fxA;FIX fxAB;FIX fxInkTop;FIX fxInkBottom;RECTL rclInk;POINTQF ptqD;};
union _GLYPHDEF {GLYPHBITS *pgb;PATHOBJ *ppo;};
struct _GLYPHMETRICS {UINT gmBlackBoxX;UINT gmBlackBoxY;POINT gmptGlyphOrigin;__int16 gmCellIncX;__int16 gmCellIncY;};
struct _GLYPHMETRICSFLOAT {FLOAT gmfBlackBoxX;FLOAT gmfBlackBoxY;POINTFLOAT gmfptGlyphOrigin;FLOAT gmfCellIncX;FLOAT gmfCellIncY;};
struct _GLYPHPOS {HGLYPH hg;GLYPHDEF *pgdf;POINTL ptl;};
struct _GRADIENT_RECT {ULONG UpperLeft;ULONG LowerRight;};
struct _GRADIENT_TRIANGLE {ULONG Vertex1;ULONG Vertex2;ULONG Vertex3;};
struct _GROUP_AFFINITY {KAFFINITY Mask;WORD Group;WORD Reserved[3];};
struct _GROUP_RELATIONSHIP {USHORT MaximumGroupCount;USHORT ActiveGroupCount;UCHAR Reserved[20];PROCESSOR_GROUP_INFO GroupInfo[1];};
struct _GUID {unsigned int Data1;unsigned __int16 Data2;unsigned __int16 Data3;unsigned __int8 Data4[8];};
struct _HARDERROR_MSG {PORT_MESSAGE h;NTSTATUS Status;LARGE_INTEGER ErrorTime;ULONG ValidResponseOptions;ULONG Response;ULONG NumberOfParameters;ULONG UnicodeStringParameterMask;ULONG_PTR Parameters[5];};
enum _HARDERROR_RESPONSE {ResponseReturnToCaller = 0x0,ResponseNotHandled = 0x1,ResponseAbort = 0x2,ResponseCancel = 0x3,ResponseIgnore = 0x4,ResponseNo = 0x5,ResponseOk = 0x6,ResponseRetry = 0x7,ResponseYes = 0x8,ResponseTryAgain = 0x9,ResponseContinue = 0xA,};
enum _HARDERROR_RESPONSE_OPTION {OptionAbortRetryIgnore = 0x0,OptionOk = 0x1,OptionOkCancel = 0x2,OptionRetryCancel = 0x3,OptionYesNo = 0x4,OptionYesNoCancel = 0x5,OptionShutdownSystem = 0x6,OptionOkNoWait = 0x7,OptionCancelTryContinue = 0x8,};
struct _HARDWARE_PTE_X86 {unsigned __int32 Valid : 1;unsigned __int32 Write : 1;unsigned __int32 Owner : 1;unsigned __int32 WriteThrough : 1;unsigned __int32 CacheDisable : 1;unsigned __int32 Accessed : 1;unsigned __int32 Dirty : 1;unsigned __int32 LargePage : 1;unsigned __int32 Global : 1;unsigned __int32 CopyOnWrite : 1;unsigned __int32 Prototype : 1;unsigned __int32 reserved : 1;unsigned __int32 PageFrameNumber : 20;};
enum _HEAP_INFORMATION_CLASS {HeapCompatibilityInformation = 0x0,HeapEnableTerminationOnCorruption = 0x1,};
struct _HEAP_LOCK {union {RTL_CRITICAL_SECTION CriticalSection;UCHAR Padding[104];};};
union _HEAP_LOCK::$B28EA8A1412CDC7114CE8449707C0F1B {RTL_CRITICAL_SECTION CriticalSection;UCHAR Padding[104];};
struct _HISTOGRAM_BUCKET {DWORD Reads;DWORD Writes;};
struct _IFIEXTRA {ULONG ulIdentifier;PTRDIFF dpFontSig;ULONG cig;PTRDIFF dpDesignVector;PTRDIFF dpAxesInfoW;ULONG aulReserved[1];};
struct _IFIMETRICS {ULONG cjThis;ULONG cjIfiExtra;PTRDIFF dpwszFamilyName;PTRDIFF dpwszStyleName;PTRDIFF dpwszFaceName;PTRDIFF dpwszUniqueName;PTRDIFF dpFontSim;LONG lEmbedId;LONG lItalicAngle;LONG lCharBias;PTRDIFF dpCharSets;BYTE jWinCharSet;BYTE jWinPitchAndFamily;USHORT usWinWeight;ULONG flInfo;USHORT fsSelection;USHORT fsType;FWORD fwdUnitsPerEm;FWORD fwdLowestPPEm;FWORD fwdWinAscender;FWORD fwdWinDescender;FWORD fwdMacAscender;FWORD fwdMacDescender;FWORD fwdMacLineGap;FWORD fwdTypoAscender;FWORD fwdTypoDescender;FWORD fwdTypoLineGap;FWORD fwdAveCharWidth;FWORD fwdMaxCharInc;FWORD fwdCapHeight;FWORD fwdXHeight;FWORD fwdSubscriptXSize;FWORD fwdSubscriptYSize;FWORD fwdSubscriptXOffset;FWORD fwdSubscriptYOffset;FWORD fwdSuperscriptXSize;FWORD fwdSuperscriptYSize;FWORD fwdSuperscriptXOffset;FWORD fwdSuperscriptYOffset;FWORD fwdUnderscoreSize;FWORD fwdUnderscorePosition;FWORD fwdStrikeoutSize;FWORD fwdStrikeoutPosition;BYTE chFirstChar;BYTE chLastChar;BYTE chDefaultChar;BYTE chBreakChar;WCHAR wcFirstChar;WCHAR wcLastChar;WCHAR wcDefaultChar;WCHAR wcBreakChar;POINTL ptlBaseline;POINTL ptlAspect;POINTL ptlCaret;RECTL rclFontBox;BYTE achVendId[4];ULONG cKerningPairs;ULONG ulPanoseCulture;PANOSE panose;};
struct _IMAGE_ARCHIVE_MEMBER_HEADER {BYTE Name[16];BYTE Date[12];BYTE UserID[6];BYTE GroupID[6];BYTE Mode[8];BYTE Size[10];BYTE EndHeader[2];};
union _IMAGE_AUX_SYMBOL {struct _IMAGE_AUX_SYMBOL::$23DFC5686F0E6924815C955A999B653C Sym;struct _IMAGE_AUX_SYMBOL::$C84595816809DB9D1AC5ADB82092AE34 File;struct _IMAGE_AUX_SYMBOL::$F4BC192F8B60C11ADB0053F96E5F77A4 Section;IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;struct _IMAGE_AUX_SYMBOL::$FEDB120BF2FA97029F6AC33869057230 CRC;};
struct _IMAGE_AUX_SYMBOL::$23DFC5686F0E6924815C955A999B653C {DWORD TagIndex;union _IMAGE_AUX_SYMBOL::$23DFC5686F0E6924815C955A999B653C::$7BA673E1ED5771089D188D89EB9BDF46 Misc;union _IMAGE_AUX_SYMBOL::$23DFC5686F0E6924815C955A999B653C::$16A1A8FB0340C07B06C110366CF85D46 FcnAry;WORD TvIndex;};
union _IMAGE_AUX_SYMBOL::$23DFC5686F0E6924815C955A999B653C::$16A1A8FB0340C07B06C110366CF85D46 {struct _IMAGE_AUX_SYMBOL::$::$16A1A8FB0340C07B06C110366CF85D46::$D7CED02C5EE110FFB81CA02005CB2264 Function;struct _IMAGE_AUX_SYMBOL::$::$16A1A8FB0340C07B06C110366CF85D46::$A6589E1685AD051AED20409BF2544643 Array;};
union _IMAGE_AUX_SYMBOL::$23DFC5686F0E6924815C955A999B653C::$7BA673E1ED5771089D188D89EB9BDF46 {struct _IMAGE_AUX_SYMBOL::$::$7BA673E1ED5771089D188D89EB9BDF46::$3C0209E125597A11F89742EEA0270158 LnSz;DWORD TotalSize;};
struct _IMAGE_AUX_SYMBOL::$::$16A1A8FB0340C07B06C110366CF85D46::$A6589E1685AD051AED20409BF2544643 {WORD Dimension[4];};
struct _IMAGE_AUX_SYMBOL::$::$16A1A8FB0340C07B06C110366CF85D46::$D7CED02C5EE110FFB81CA02005CB2264 {DWORD PointerToLinenumber;DWORD PointerToNextFunction;};
struct _IMAGE_AUX_SYMBOL::$::$7BA673E1ED5771089D188D89EB9BDF46::$3C0209E125597A11F89742EEA0270158 {WORD Linenumber;WORD Size;};
struct _IMAGE_AUX_SYMBOL::$C84595816809DB9D1AC5ADB82092AE34 {BYTE Name[18];};
struct _IMAGE_AUX_SYMBOL::$F4BC192F8B60C11ADB0053F96E5F77A4 {DWORD Length;WORD NumberOfRelocations;WORD NumberOfLinenumbers;DWORD CheckSum;SHORT Number;BYTE Selection;BYTE bReserved;SHORT HighNumber;};
struct _IMAGE_AUX_SYMBOL::$FEDB120BF2FA97029F6AC33869057230 {DWORD crc;BYTE rgbReserved[14];};
struct _IMAGE_BASE_RELOCATION {DWORD VirtualAddress;DWORD SizeOfBlock;};
struct _IMAGE_BOUND_FORWARDER_REF {DWORD TimeDateStamp;WORD OffsetModuleName;WORD Reserved;};
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {DWORD TimeDateStamp;WORD OffsetModuleName;WORD NumberOfModuleForwarderRefs;};
struct _IMAGE_COFF_SYMBOLS_HEADER {DWORD NumberOfSymbols;DWORD LvaToFirstSymbol;DWORD NumberOfLinenumbers;DWORD LvaToFirstLinenumber;DWORD RvaToFirstByteOfCode;DWORD RvaToLastByteOfCode;DWORD RvaToFirstByteOfData;DWORD RvaToLastByteOfData;};
struct _IMAGE_DATA_DIRECTORY {DWORD VirtualAddress;DWORD Size;};
struct _IMAGE_DEBUG_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD Type;DWORD SizeOfData;DWORD AddressOfRawData;DWORD PointerToRawData;};
struct _IMAGE_DEBUG_MISC {DWORD DataType;DWORD Length;BOOLEAN Unicode;BYTE Reserved[3];BYTE Data[1];};
struct _IMAGE_DELAYLOAD_DESCRIPTOR {union _IMAGE_DELAYLOAD_DESCRIPTOR::$BCEE83058E71DF1B4C0C0F71A1EAA95D Attributes;DWORD DllNameRVA;DWORD ModuleHandleRVA;DWORD ImportAddressTableRVA;DWORD ImportNameTableRVA;DWORD BoundImportAddressTableRVA;DWORD UnloadInformationTableRVA;DWORD TimeDateStamp;};
union _IMAGE_DELAYLOAD_DESCRIPTOR::$BCEE83058E71DF1B4C0C0F71A1EAA95D {DWORD AllAttributes;struct {unsigned __int32 RvaBased : 1;unsigned __int32 ReservedAttributes : 31;};};
struct _IMAGE_DELAYLOAD_DESCRIPTOR::$BCEE83058E71DF1B4C0C0F71A1EAA95D::$CDB9B99D549B790D4C735D013865E181 {unsigned __int32 RvaBased : 1;unsigned __int32 ReservedAttributes : 31;};
struct _IMAGE_DOS_HEADER {WORD e_magic;WORD e_cblp;WORD e_cp;WORD e_crlc;WORD e_cparhdr;WORD e_minalloc;WORD e_maxalloc;WORD e_ss;WORD e_sp;WORD e_csum;WORD e_ip;WORD e_cs;WORD e_lfarlc;WORD e_ovno;WORD e_res[4];WORD e_oemid;WORD e_oeminfo;WORD e_res2[10];LONG e_lfanew;};
struct _IMAGE_EXPORT_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD Name;DWORD Base;DWORD NumberOfFunctions;DWORD NumberOfNames;DWORD AddressOfFunctions;DWORD AddressOfNames;DWORD AddressOfNameOrdinals;};
struct _IMAGE_FILE_HEADER {WORD Machine;WORD NumberOfSections;DWORD TimeDateStamp;DWORD PointerToSymbolTable;DWORD NumberOfSymbols;WORD SizeOfOptionalHeader;WORD Characteristics;};
struct _IMAGE_FUNCTION_ENTRY {DWORD StartingAddress;DWORD EndingAddress;DWORD EndOfPrologue;};
struct _IMAGE_IMPORT_BY_NAME {WORD Hint;BYTE Name[1];};
struct _IMAGE_IMPORT_DESCRIPTOR {union {DWORD Characteristics;DWORD OriginalFirstThunk;};DWORD TimeDateStamp;DWORD ForwarderChain;DWORD Name;DWORD FirstThunk;};
union _IMAGE_IMPORT_DESCRIPTOR::$6AD513163D7E1ED317197F815B889A38 {DWORD Characteristics;DWORD OriginalFirstThunk;};
struct _IMAGE_LINENUMBER {union _IMAGE_LINENUMBER::$323A99206959B5083BD9C46482D6FCE5 Type;WORD Linenumber;};
union _IMAGE_LINENUMBER::$323A99206959B5083BD9C46482D6FCE5 {DWORD SymbolTableIndex;DWORD VirtualAddress;};
struct _IMAGE_LOAD_CONFIG_DIRECTORY32 {DWORD Size;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD GlobalFlagsClear;DWORD GlobalFlagsSet;DWORD CriticalSectionDefaultTimeout;DWORD DeCommitFreeBlockThreshold;DWORD DeCommitTotalFreeThreshold;DWORD LockPrefixTable;DWORD MaximumAllocationSize;DWORD VirtualMemoryThreshold;DWORD ProcessHeapFlags;DWORD ProcessAffinityMask;WORD CSDVersion;WORD Reserved1;DWORD EditList;DWORD SecurityCookie;DWORD SEHandlerTable;DWORD SEHandlerCount;};
struct _IMAGE_LOAD_CONFIG_DIRECTORY64 {DWORD Size;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD GlobalFlagsClear;DWORD GlobalFlagsSet;DWORD CriticalSectionDefaultTimeout;ULONGLONG DeCommitFreeBlockThreshold;ULONGLONG DeCommitTotalFreeThreshold;ULONGLONG LockPrefixTable;ULONGLONG MaximumAllocationSize;ULONGLONG VirtualMemoryThreshold;ULONGLONG ProcessAffinityMask;DWORD ProcessHeapFlags;WORD CSDVersion;WORD Reserved1;ULONGLONG EditList;ULONGLONG SecurityCookie;ULONGLONG SEHandlerTable;ULONGLONG SEHandlerCount;};
struct _IMAGE_NT_HEADERS32 {DWORD Signature;IMAGE_FILE_HEADER FileHeader;IMAGE_OPTIONAL_HEADER32 OptionalHeader;};
struct _IMAGE_NT_HEADERS64 {DWORD Signature;IMAGE_FILE_HEADER FileHeader;IMAGE_OPTIONAL_HEADER64 OptionalHeader;};
struct _IMAGE_OPTIONAL_HEADER32 {WORD Magic;BYTE MajorLinkerVersion;BYTE MinorLinkerVersion;DWORD SizeOfCode;DWORD SizeOfInitializedData;DWORD SizeOfUninitializedData;DWORD AddressOfEntryPoint;DWORD BaseOfCode;DWORD BaseOfData;DWORD ImageBase;DWORD SectionAlignment;DWORD FileAlignment;WORD MajorOperatingSystemVersion;WORD MinorOperatingSystemVersion;WORD MajorImageVersion;WORD MinorImageVersion;WORD MajorSubsystemVersion;WORD MinorSubsystemVersion;DWORD Win32VersionValue;DWORD SizeOfImage;DWORD SizeOfHeaders;DWORD CheckSum;WORD Subsystem;WORD DllCharacteristics;DWORD SizeOfStackReserve;DWORD SizeOfStackCommit;DWORD SizeOfHeapReserve;DWORD SizeOfHeapCommit;DWORD LoaderFlags;DWORD NumberOfRvaAndSizes;IMAGE_DATA_DIRECTORY DataDirectory[16];};
struct _IMAGE_OPTIONAL_HEADER64 {WORD Magic;BYTE MajorLinkerVersion;BYTE MinorLinkerVersion;DWORD SizeOfCode;DWORD SizeOfInitializedData;DWORD SizeOfUninitializedData;DWORD AddressOfEntryPoint;DWORD BaseOfCode;ULONGLONG ImageBase;DWORD SectionAlignment;DWORD FileAlignment;WORD MajorOperatingSystemVersion;WORD MinorOperatingSystemVersion;WORD MajorImageVersion;WORD MinorImageVersion;WORD MajorSubsystemVersion;WORD MinorSubsystemVersion;DWORD Win32VersionValue;DWORD SizeOfImage;DWORD SizeOfHeaders;DWORD CheckSum;WORD Subsystem;WORD DllCharacteristics;ULONGLONG SizeOfStackReserve;ULONGLONG SizeOfStackCommit;ULONGLONG SizeOfHeapReserve;ULONGLONG SizeOfHeapCommit;DWORD LoaderFlags;DWORD NumberOfRvaAndSizes;IMAGE_DATA_DIRECTORY DataDirectory[16];};
struct _IMAGE_OS2_HEADER {WORD ne_magic;CHAR ne_ver;CHAR ne_rev;WORD ne_enttab;WORD ne_cbenttab;LONG ne_crc;WORD ne_flags;WORD ne_autodata;WORD ne_heap;WORD ne_stack;LONG ne_csip;LONG ne_sssp;WORD ne_cseg;WORD ne_cmod;WORD ne_cbnrestab;WORD ne_segtab;WORD ne_rsrctab;WORD ne_restab;WORD ne_modtab;WORD ne_imptab;LONG ne_nrestab;WORD ne_cmovent;WORD ne_align;WORD ne_cres;BYTE ne_exetyp;BYTE ne_flagsothers;WORD ne_pretthunks;WORD ne_psegrefbytes;WORD ne_swaparea;WORD ne_expver;};
struct _IMAGE_RELOCATION {union {DWORD VirtualAddress;DWORD RelocCount;};DWORD SymbolTableIndex;WORD Type;};
union _IMAGE_RELOCATION::$1E7C1E46FA531EE3105A5918E7864FED {DWORD VirtualAddress;DWORD RelocCount;};
struct _IMAGE_RESOURCE_DATA_ENTRY {DWORD OffsetToData;DWORD Size;DWORD CodePage;DWORD Reserved;};
struct _IMAGE_RESOURCE_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;WORD NumberOfNamedEntries;WORD NumberOfIdEntries;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {union {struct {unsigned __int32 NameOffset : 31;unsigned __int32 NameIsString : 1;};DWORD Name;WORD Id;};union {DWORD OffsetToData;struct {unsigned __int32 OffsetToDirectory : 31;unsigned __int32 DataIsDirectory : 1;};};};
union _IMAGE_RESOURCE_DIRECTORY_ENTRY::$4D142E9F5D1D48D13A38B419BC687841 {struct {unsigned __int32 NameOffset : 31;unsigned __int32 NameIsString : 1;};DWORD Name;WORD Id;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY::$4D142E9F5D1D48D13A38B419BC687841::$6E35CCFC02D81E31BD4C6BEDD77CB20A {unsigned __int32 NameOffset : 31;unsigned __int32 NameIsString : 1;};
union _IMAGE_RESOURCE_DIRECTORY_ENTRY::$A1259A08F2B533F259DA4993E2C51E29 {DWORD OffsetToData;struct {unsigned __int32 OffsetToDirectory : 31;unsigned __int32 DataIsDirectory : 1;};};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY::$A1259A08F2B533F259DA4993E2C51E29::$B2E03ED94C06E2E681F8D03FF7FF5CB3 {unsigned __int32 OffsetToDirectory : 31;unsigned __int32 DataIsDirectory : 1;};
struct _IMAGE_RESOURCE_DIRECTORY_STRING {WORD Length;CHAR NameString[1];};
struct _IMAGE_RESOURCE_DIR_STRING_U {WORD Length;WCHAR NameString[1];};
struct _IMAGE_ROM_HEADERS {IMAGE_FILE_HEADER FileHeader;IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;};
struct _IMAGE_ROM_OPTIONAL_HEADER {WORD Magic;BYTE MajorLinkerVersion;BYTE MinorLinkerVersion;DWORD SizeOfCode;DWORD SizeOfInitializedData;DWORD SizeOfUninitializedData;DWORD AddressOfEntryPoint;DWORD BaseOfCode;DWORD BaseOfData;DWORD BaseOfBss;DWORD GprMask;DWORD CprMask[4];DWORD GpValue;};
struct _IMAGE_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress;DWORD EndAddress;DWORD UnwindInfoAddress;};
struct _IMAGE_SECTION_HEADER {BYTE Name[8];union _IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C Misc;DWORD VirtualAddress;DWORD SizeOfRawData;DWORD PointerToRawData;DWORD PointerToRelocations;DWORD PointerToLinenumbers;WORD NumberOfRelocations;WORD NumberOfLinenumbers;DWORD Characteristics;};
union _IMAGE_SECTION_HEADER::$39DFBA39B6D121CDFC1ACE66C995549C {DWORD PhysicalAddress;DWORD VirtualSize;};
struct _IMAGE_SEPARATE_DEBUG_HEADER {WORD Signature;WORD Flags;WORD Machine;WORD Characteristics;DWORD TimeDateStamp;DWORD CheckSum;DWORD ImageBase;DWORD SizeOfImage;DWORD NumberOfSections;DWORD ExportedNamesSize;DWORD DebugDirectorySize;DWORD SectionAlignment;DWORD Reserved[2];};
struct _IMAGE_SYMBOL {union _IMAGE_SYMBOL::$D31D1BC08928B4879C9F93D88486FFF4 N;DWORD Value;SHORT SectionNumber;WORD Type;BYTE StorageClass;BYTE NumberOfAuxSymbols;};
union _IMAGE_SYMBOL::$D31D1BC08928B4879C9F93D88486FFF4 {BYTE ShortName[8];struct _IMAGE_SYMBOL::$D31D1BC08928B4879C9F93D88486FFF4::$DE8E098676ACAC74F2956A2D7B83DF3B Name;PBYTE LongName[2];};
struct _IMAGE_SYMBOL::$D31D1BC08928B4879C9F93D88486FFF4::$DE8E098676ACAC74F2956A2D7B83DF3B {DWORD Short;DWORD Long;};
struct _IMAGE_THUNK_DATA32 {union _IMAGE_THUNK_DATA32::$A667AA66621C320A48F8EE5C4EA8143D u1;};
union _IMAGE_THUNK_DATA32::$A667AA66621C320A48F8EE5C4EA8143D {DWORD ForwarderString;DWORD Function;DWORD Ordinal;DWORD AddressOfData;};
struct _IMAGE_THUNK_DATA64 {union _IMAGE_THUNK_DATA64::$F155400DC8E777EDFF51409B49416578 u1;};
union _IMAGE_THUNK_DATA64::$F155400DC8E777EDFF51409B49416578 {ULONGLONG ForwarderString;ULONGLONG Function;ULONGLONG Ordinal;ULONGLONG AddressOfData;};
struct _IMAGE_TLS_DIRECTORY32 {DWORD StartAddressOfRawData;DWORD EndAddressOfRawData;DWORD AddressOfIndex;DWORD AddressOfCallBacks;DWORD SizeOfZeroFill;DWORD Characteristics;};
struct _IMAGE_TLS_DIRECTORY64 {ULONGLONG StartAddressOfRawData;ULONGLONG EndAddressOfRawData;ULONGLONG AddressOfIndex;ULONGLONG AddressOfCallBacks;DWORD SizeOfZeroFill;DWORD Characteristics;};
struct _IMAGE_VXD_HEADER {WORD e32_magic;BYTE e32_border;BYTE e32_worder;DWORD e32_level;WORD e32_cpu;WORD e32_os;DWORD e32_ver;DWORD e32_mflags;DWORD e32_mpages;DWORD e32_startobj;DWORD e32_eip;DWORD e32_stackobj;DWORD e32_esp;DWORD e32_pagesize;DWORD e32_lastpagesize;DWORD e32_fixupsize;DWORD e32_fixupsum;DWORD e32_ldrsize;DWORD e32_ldrsum;DWORD e32_objtab;DWORD e32_objcnt;DWORD e32_objmap;DWORD e32_itermap;DWORD e32_rsrctab;DWORD e32_rsrccnt;DWORD e32_restab;DWORD e32_enttab;DWORD e32_dirtab;DWORD e32_dircnt;DWORD e32_fpagetab;DWORD e32_frectab;DWORD e32_impmod;DWORD e32_impmodcnt;DWORD e32_impproc;DWORD e32_pagesum;DWORD e32_datapage;DWORD e32_preload;DWORD e32_nrestab;DWORD e32_cbnrestab;DWORD e32_nressum;DWORD e32_autodata;DWORD e32_debuginfo;DWORD e32_debuglen;DWORD e32_instpreload;DWORD e32_instdemand;DWORD e32_heapsize;BYTE e32_res3[12];DWORD e32_winresoff;DWORD e32_winreslen;WORD e32_devid;WORD e32_ddkver;};
struct _INITIAL_PEB {BOOLEAN InheritedAddressSpace;BOOLEAN ReadImageFileExecOptions;BOOLEAN BeingDebugged;union {BOOLEAN BitField;struct {unsigned __int8 ImageUsesLargePages : 1;unsigned __int8 IsProtectedProcess : 1;unsigned __int8 IsLegacyProcess : 1;unsigned __int8 SpareBits : 5;};};HANDLE Mutant;};
union _INITIAL_PEB::$93BF36C64740FD846377F704F41B618E {BOOLEAN BitField;struct {unsigned __int8 ImageUsesLargePages : 1;unsigned __int8 IsProtectedProcess : 1;unsigned __int8 IsLegacyProcess : 1;unsigned __int8 SpareBits : 5;};};
struct _INITIAL_PEB::$93BF36C64740FD846377F704F41B618E::$D7400ED981BC5D1E4082A085931018D6 {unsigned __int8 ImageUsesLargePages : 1;unsigned __int8 IsProtectedProcess : 1;unsigned __int8 IsLegacyProcess : 1;unsigned __int8 SpareBits : 5;};
struct _INITIAL_TEB {PVOID PreviousStackBase;PVOID PreviousStackLimit;PVOID StackBase;PVOID StackLimit;PVOID AllocatedStackBase;};
enum _INTERFACE_TYPE {InterfaceTypeUndefined = 0xFFFFFFFF,Internal = 0x0,Isa = 0x1,Eisa = 0x2,MicroChannel = 0x3,TurboChannel = 0x4,PCIBus = 0x5,VMEBus = 0x6,NuBus = 0x7,PCMCIABus = 0x8,CBus = 0x9,MPIBus = 0xA,MPSABus = 0xB,ProcessorInternal = 0xC,InternalPowerBus = 0xD,PNPISABus = 0xE,PNPBus = 0xF,MaximumInterfaceType = 0x10,};
struct _IO_COMPLETION_BASIC_INFORMATION {LONG Depth;};
enum _IO_COMPLETION_INFORMATION_CLASS {IoCompletionBasicInformation = 0x0,};
struct _IO_COUNTERS {ULONGLONG ReadOperationCount;ULONGLONG WriteOperationCount;ULONGLONG OtherOperationCount;ULONGLONG ReadTransferCount;ULONGLONG WriteTransferCount;ULONGLONG OtherTransferCount;};
struct _IO_ERROR_LOG_MESSAGE {USHORT Type;USHORT Size;USHORT DriverNameLength;LARGE_INTEGER TimeStamp;ULONG DriverNameOffset;IO_ERROR_LOG_PACKET EntryData;};
struct _IO_ERROR_LOG_PACKET {UCHAR MajorFunctionCode;UCHAR RetryCount;USHORT DumpDataSize;USHORT NumberOfStrings;USHORT StringOffset;USHORT EventCategory;NTSTATUS ErrorCode;ULONG UniqueErrorValue;NTSTATUS FinalStatus;ULONG SequenceNumber;ULONG IoControlCode;LARGE_INTEGER DeviceOffset;ULONG DumpData[1];};
struct _IO_STATUS_BLOCK {union {NTSTATUS Status;PVOID Pointer;};ULONG_PTR Information;};
union _IO_STATUS_BLOCK::$77CEE0AF02806C16F943E6B3BF8ECA77 {NTSTATUS Status;PVOID Pointer;};
enum _JOBOBJECTINFOCLASS {JobObjectBasicAccountingInformation = 0x1,JobObjectBasicLimitInformation = 0x2,JobObjectBasicProcessIdList = 0x3,JobObjectBasicUIRestrictions = 0x4,JobObjectSecurityLimitInformation = 0x5,JobObjectEndOfJobTimeInformation = 0x6,JobObjectAssociateCompletionPortInformation = 0x7,JobObjectBasicAndIoAccountingInformation = 0x8,JobObjectExtendedLimitInformation = 0x9,JobObjectJobSetInformation = 0xA,JobObjectGroupInformation = 0xB,MaxJobObjectInfoClass = 0xC,};
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {PVOID CompletionKey;HANDLE CompletionPort;};
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {LARGE_INTEGER TotalUserTime;LARGE_INTEGER TotalKernelTime;LARGE_INTEGER ThisPeriodTotalUserTime;LARGE_INTEGER ThisPeriodTotalKernelTime;DWORD TotalPageFaultCount;DWORD TotalProcesses;DWORD ActiveProcesses;DWORD TotalTerminatedProcesses;};
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;IO_COUNTERS IoInfo;};
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {LARGE_INTEGER PerProcessUserTimeLimit;LARGE_INTEGER PerJobUserTimeLimit;DWORD LimitFlags;SIZE_T MinimumWorkingSetSize;SIZE_T MaximumWorkingSetSize;DWORD ActiveProcessLimit;ULONG_PTR Affinity;DWORD PriorityClass;DWORD SchedulingClass;};
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {DWORD NumberOfAssignedProcesses;DWORD NumberOfProcessIdsInList;ULONG_PTR ProcessIdList[1];};
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {DWORD UIRestrictionsClass;};
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {DWORD EndOfJobTimeAction;};
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;IO_COUNTERS IoInfo;SIZE_T ProcessMemoryLimit;SIZE_T JobMemoryLimit;SIZE_T PeakProcessMemoryUsed;SIZE_T PeakJobMemoryUsed;};
struct _JOBOBJECT_JOBSET_INFORMATION {DWORD MemberLevel;};
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {DWORD SecurityLimitFlags;HANDLE JobToken;PTOKEN_GROUPS SidsToDisable;PTOKEN_PRIVILEGES PrivilegesToDelete;PTOKEN_GROUPS RestrictedSids;};
struct _JOB_SET_ARRAY {HANDLE JobHandle;DWORD MemberLevel;DWORD Flags;};
typedef struct __JUMP_BUFFER _JUMP_BUFFER;
enum _KCONTINUE_STATUS {ContinueError = 0x0,ContinueSuccess = 0x1,ContinueProcessorReselected = 0x2,ContinueNextProcessor = 0x3,};
struct _KD_SYMBOLS_INFO {PVOID BaseOfDll;ULONG_PTR ProcessId;ULONG CheckSum;ULONG SizeOfImage;};
struct _KERNEL_USER_TIMES {LARGE_INTEGER CreateTime;LARGE_INTEGER ExitTime;LARGE_INTEGER KernelTime;LARGE_INTEGER UserTime;};
struct _KEY_BASIC_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG NameLength;WCHAR Name[1];};
struct _KEY_CONTROL_FLAGS_INFORMATION {ULONG ControlFlags;};
struct _KEY_FULL_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG ClassOffset;ULONG ClassLength;ULONG SubKeys;ULONG MaxNameLen;ULONG MaxClassLen;ULONG Values;ULONG MaxValueNameLen;ULONG MaxValueDataLen;WCHAR Class[1];};
struct _KEY_HANDLE_TAGS_INFORMATION {ULONG HandleTags;};
enum _KEY_INFORMATION_CLASS {KeyBasicInformation = 0x0,KeyNodeInformation = 0x1,KeyFullInformation = 0x2,KeyNameInformation = 0x3,KeyCachedInformation = 0x4,KeyFlagsInformation = 0x5,KeyVirtualizationInformation = 0x6,KeyHandleTagsInformation = 0x7,MaxKeyInfoClass = 0x8,};
struct _KEY_NAME_INFORMATION {ULONG NameLength;WCHAR Name[1];};
struct _KEY_NODE_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG ClassOffset;ULONG ClassLength;ULONG NameLength;WCHAR Name[1];};
enum _KEY_SET_INFORMATION_CLASS {KeyWriteTimeInformation = 0x0,KeyWow64FlagsInformation = 0x1,KeyControlFlagsInformation = 0x2,KeySetVirtualizationInformation = 0x3,KeySetDebugInformation = 0x4,KeySetHandleTagsInformation = 0x5,MaxKeySetInfoClass = 0x6,};
struct _KEY_SET_VIRTUALIZATION_INFORMATION {unsigned __int32 VirtualTarget : 1;unsigned __int32 VirtualStore : 1;unsigned __int32 VirtualSource : 1;unsigned __int32 Reserved : 29;};
struct _KEY_USER_FLAGS_INFORMATION {ULONG UserFlags;};
struct _KEY_VALUE_BASIC_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG NameLength;WCHAR Name[1];};
struct _KEY_VALUE_ENTRY {PUNICODE_STRING ValueName;ULONG DataLength;ULONG DataOffset;ULONG Type;};
struct _KEY_VALUE_FULL_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG DataOffset;ULONG DataLength;ULONG NameLength;WCHAR Name[1];};
enum _KEY_VALUE_INFORMATION_CLASS {KeyValueBasicInformation = 0x0,KeyValueFullInformation = 0x1,KeyValuePartialInformation = 0x2,KeyValueFullInformationAlign64 = 0x3,KeyValuePartialInformationAlign64 = 0x4,MaxKeyValueInfoClass = 0x5,};
struct _KEY_VALUE_PARTIAL_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG DataLength;UCHAR Data[1];};
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 {ULONG Type;ULONG DataLength;UCHAR Data[1];};
struct _KEY_VIRTUALIZATION_INFORMATION {unsigned __int32 VirtualizationCandidate : 1;unsigned __int32 VirtualizationEnabled : 1;unsigned __int32 VirtualTarget : 1;unsigned __int32 VirtualStore : 1;unsigned __int32 VirtualSource : 1;unsigned __int32 Reserved : 27;};
struct _KEY_WOW64_FLAGS_INFORMATION {ULONG UserFlags;};
struct _KEY_WRITE_TIME_INFORMATION {LARGE_INTEGER LastWriteTime;};
enum _KOBJECTS {EventNotificationObject = 0x0,EventSynchronizationObject = 0x1,MutantObject = 0x2,ProcessObject = 0x3,QueueObject = 0x4,SemaphoreObject = 0x5,ThreadObject = 0x6,GateObject = 0x7,TimerNotificationObject = 0x8,TimerSynchronizationObject = 0x9,Spare2Object = 0xA,Spare3Object = 0xB,Spare4Object = 0xC,Spare5Object = 0xD,Spare6Object = 0xE,Spare7Object = 0xF,Spare8Object = 0x10,Spare9Object = 0x11,ApcObject = 0x12,DpcObject = 0x13,DeviceQueueObject = 0x14,EventPairObject = 0x15,InterruptObject = 0x16,ProfileObject = 0x17,ThreadedDpcObject = 0x18,MaximumKernelObject = 0x19,};
enum _KPROCESS_STATE {ProcessInMemory = 0x0,ProcessOutOfMemory = 0x1,ProcessInTransition = 0x2,ProcessInSwap = 0x3,ProcessOutSwap = 0x4,};
enum _KPROFILE_SOURCE {ProfileTime = 0x0,ProfileAlignmentFixup = 0x1,ProfileTotalIssues = 0x2,ProfilePipelineDry = 0x3,ProfileLoadInstructions = 0x4,ProfilePipelineFrozen = 0x5,ProfileBranchInstructions = 0x6,ProfileTotalNonissues = 0x7,ProfileDcacheMisses = 0x8,ProfileIcacheMisses = 0x9,ProfileCacheMisses = 0xA,ProfileBranchMispredictions = 0xB,ProfileStoreInstructions = 0xC,ProfileFpInstructions = 0xD,ProfileIntegerInstructions = 0xE,Profile2Issue = 0xF,Profile3Issue = 0x10,Profile4Issue = 0x11,ProfileSpecialInstructions = 0x12,ProfileTotalCycles = 0x13,ProfileIcacheIssues = 0x14,ProfileDcacheAccesses = 0x15,ProfileMemoryBarrierCycles = 0x16,ProfileLoadLinkedIssues = 0x17,ProfileMaximum = 0x18,};
struct _KSYSTEM_TIME {ULONG LowPart;LONG High1Time;LONG High2Time;};
enum _KTHREAD_STATE {Initialized = 0x0,Ready = 0x1,Running = 0x2,Standby = 0x3,Terminated = 0x4,Waiting = 0x5,Transition = 0x6,DeferredReady = 0x7,GateWait = 0x8,};
struct _KUSER_SHARED_DATA {ULONG TickCountLowDeprecated;ULONG TickCountMultiplier;volatile KSYSTEM_TIME InterruptTime;volatile KSYSTEM_TIME SystemTime;volatile KSYSTEM_TIME TimeZoneBias;USHORT ImageNumberLow;USHORT ImageNumberHigh;WCHAR NtSystemRoot[260];ULONG MaxStackTraceDepth;ULONG CryptoExponent;ULONG TimeZoneId;ULONG LargePageMinimum;ULONG Reserved2[7];NT_PRODUCT_TYPE NtProductType;BOOLEAN ProductTypeIsValid;ULONG NtMajorVersion;ULONG NtMinorVersion;BOOLEAN ProcessorFeatures[64];ULONG Reserved1;ULONG Reserved3;volatile ULONG TimeSlip;ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;LARGE_INTEGER SystemExpirationDate;ULONG SuiteMask;BOOLEAN KdDebuggerEnabled;UCHAR NXSupportPolicy;volatile ULONG ActiveConsoleId;volatile ULONG DismountCount;ULONG ComPlusPackage;ULONG LastSystemRITEventTickCount;ULONG NumberOfPhysicalPages;BOOLEAN SafeBootMode;ULONG TraceLogging;ULONG Fill0;ULONGLONG TestRetInstruction;ULONG SystemCall;ULONG SystemCallReturn;ULONGLONG SystemCallPad[3];union {volatile KSYSTEM_TIME TickCount;volatile ULONG64 TickCountQuad;};ULONG Cookie;LONGLONG ConsoleSessionForegroundProcessId;ULONG Wow64SharedInformation[16];USHORT UserModeGlobalLogger[8];ULONG HeapTracingPid[2];ULONG CritSecTracingPid[2];union {ULONG SharedDataFlags;struct {unsigned __int32 DbgErrorPortPresent : 1;unsigned __int32 DbgElevationEnabled : 1;unsigned __int32 DbgVirtEnabled : 1;unsigned __int32 DbgInstallerDetectEnabled : 1;unsigned __int32 SpareBits : 28;};};ULONG ImageFileExecutionOptions;KAFFINITY ActiveProcessorAffinity;};
union _KUSER_SHARED_DATA::$3E1AFDE9BDEF1F1FA6D4A887C557AEC6 {ULONG SharedDataFlags;struct {unsigned __int32 DbgErrorPortPresent : 1;unsigned __int32 DbgElevationEnabled : 1;unsigned __int32 DbgVirtEnabled : 1;unsigned __int32 DbgInstallerDetectEnabled : 1;unsigned __int32 SpareBits : 28;};};
struct _KUSER_SHARED_DATA::$3E1AFDE9BDEF1F1FA6D4A887C557AEC6::$2FB59617C660083086FA63EF620C28E5 {unsigned __int32 DbgErrorPortPresent : 1;unsigned __int32 DbgElevationEnabled : 1;unsigned __int32 DbgVirtEnabled : 1;unsigned __int32 DbgInstallerDetectEnabled : 1;unsigned __int32 SpareBits : 28;};
union _KUSER_SHARED_DATA::$ADB7E8017FF04436E010ECE62AC7A499 {volatile KSYSTEM_TIME TickCount;volatile ULONG64 TickCountQuad;};
enum _KWAIT_REASON {Executive = 0x0,FreePage = 0x1,PageIn = 0x2,PoolAllocation = 0x3,DelayExecution = 0x4,Suspended = 0x5,UserRequest = 0x6,WrExecutive = 0x7,WrFreePage = 0x8,WrPageIn = 0x9,WrPoolAllocation = 0xA,WrDelayExecution = 0xB,WrSuspended = 0xC,WrUserRequest = 0xD,WrEventPair = 0xE,WrQueue = 0xF,WrLpcReceive = 0x10,WrLpcReply = 0x11,WrVirtualMemory = 0x12,WrPageOut = 0x13,WrRendezvous = 0x14,Spare2 = 0x15,WrGuardedMutex = 0x16,Spare4 = 0x17,Spare5 = 0x18,Spare6 = 0x19,WrKernel = 0x1A,WrResource = 0x1B,WrPushLock = 0x1C,WrMutex = 0x1D,WrQuantumEnd = 0x1E,WrDispatchInt = 0x1F,WrPreempted = 0x20,WrYieldExecution = 0x21,MaximumWaitReason = 0x22,};
union _LARGE_INTEGER {struct {DWORD LowPart;LONG HighPart;};struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;LONGLONG QuadPart;};
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E {DWORD LowPart;LONG HighPart;};
enum _LATENCY_TIME {LT_DONT_CARE = 0x0,LT_LOWEST_LATENCY = 0x1,};
struct _LDR_DATA_TABLE_ENTRY {LIST_ENTRY InLoadOrderLinks;LIST_ENTRY InMemoryOrderLinks;LIST_ENTRY InInitializationOrderLinks;PVOID DllBase;PVOID EntryPoint;ULONG SizeOfImage;UNICODE_STRING FullDllName;UNICODE_STRING BaseDllName;ULONG Flags;USHORT LoadCount;USHORT TlsIndex;union {LIST_ENTRY HashLinks;struct {PVOID SectionPointer;ULONG CheckSum;};};union {ULONG TimeDateStamp;PVOID LoadedImports;};PACTIVATION_CONTEXT EntryPointActivationContext;PVOID PatchInformation;};
union _LDR_DATA_TABLE_ENTRY::$19143798D080CB6C9735A6833255DBC0 {LIST_ENTRY HashLinks;struct {PVOID SectionPointer;ULONG CheckSum;};};
struct _LDR_DATA_TABLE_ENTRY::$19143798D080CB6C9735A6833255DBC0::$EFDC81265E6C305F8B37FF4D994BC2FD {PVOID SectionPointer;ULONG CheckSum;};
union _LDR_DATA_TABLE_ENTRY::$69464404498E78DD60B6A1AAF96613AD {ULONG TimeDateStamp;PVOID LoadedImports;};
struct _LDR_DLL_LOADED_NOTIFICATION_DATA {ULONG Flags;PUNICODE_STRING FullDllName;PUNICODE_STRING BaseDllName;PVOID DllBase;ULONG SizeOfImage;};
struct _LDR_DLL_LOADED_NOTIFICATION_ENTRY {LIST_ENTRY NotificationListEntry;PLDR_DLL_LOADED_NOTIFICATION_CALLBACK Callback;};
struct _LDR_ENUM_RESOURCE_INFO {ULONG_PTR Type;ULONG_PTR Name;ULONG_PTR Language;PVOID Data;SIZE_T Size;ULONG_PTR Reserved;};
struct _LDR_RESOURCE_INFO {ULONG_PTR Type;ULONG_PTR Name;ULONG_PTR Language;};
struct _LDT_ENTRY {WORD LimitLow;WORD BaseLow;union _LDT_ENTRY::$95C81B8F3DD6C8D0A2F7AF8EEE24F097 HighWord;};
union _LDT_ENTRY::$95C81B8F3DD6C8D0A2F7AF8EEE24F097 {struct _LDT_ENTRY::$95C81B8F3DD6C8D0A2F7AF8EEE24F097::$81408237330B83BB46845513C42A27AE Bytes;struct _LDT_ENTRY::$95C81B8F3DD6C8D0A2F7AF8EEE24F097::$A3BAC9569453E46653D4C53B8339026E Bits;};
struct _LDT_ENTRY::$95C81B8F3DD6C8D0A2F7AF8EEE24F097::$81408237330B83BB46845513C42A27AE {BYTE BaseMid;BYTE Flags1;BYTE Flags2;BYTE BaseHi;};
struct _LDT_ENTRY::$95C81B8F3DD6C8D0A2F7AF8EEE24F097::$A3BAC9569453E46653D4C53B8339026E {unsigned __int32 BaseMid : 8;unsigned __int32 Type : 5;unsigned __int32 Dpl : 2;unsigned __int32 Pres : 1;unsigned __int32 LimitHi : 4;unsigned __int32 Sys : 1;unsigned __int32 Reserved_0 : 1;unsigned __int32 Default_Big : 1;unsigned __int32 Granularity : 1;unsigned __int32 BaseHi : 8;};
struct _LIGATURE {ULONG culSize;LPWSTR pwsz;ULONG chglyph;HGLYPH ahglyph[1];};
struct _LINEATTRS {FLONG fl;ULONG iJoin;ULONG iEndCap;FLOAT_LONG elWidth;FLOATL eMiterLimit;ULONG cstyle;PFLOAT_LONG pstyle;FLOAT_LONG elStyleState;};
struct _LIST_ENTRY {struct _LIST_ENTRY *Flink;struct _LIST_ENTRY *Blink;};
struct _LOAD_IMPORTS {SIZE_T Count;PLDR_DATA_TABLE_ENTRY Entry[1];};
enum _LOGICAL_PROCESSOR_RELATIONSHIP {RelationProcessorCore = 0x0,RelationNumaNode = 0x1,RelationCache = 0x2,RelationProcessorPackage = 0x3,RelationGroup = 0x4,RelationAll = 0xFFFF,};
struct _LPCP_CONNECTION_MESSAGE {UCHAR Data[44];};
struct _LPCP_MESSAGE {UCHAR Data[20];PORT_MESSAGE Request;};
enum _LPC_TYPE {LPC_NEW_MESSAGE = 0x0,LPC_REQUEST = 0x1,LPC_REPLY = 0x2,LPC_DATAGRAM = 0x3,LPC_LOST_REPLY = 0x4,LPC_PORT_CLOSED = 0x5,LPC_CLIENT_DIED = 0x6,LPC_EXCEPTION = 0x7,LPC_DEBUG_EVENT = 0x8,LPC_ERROR_EVENT = 0x9,LPC_CONNECTION_REQUEST = 0xA,LPC_CONNECTION_REFUSED = 0xB,LPC_MAXIMUM = 0xC,};
struct _LUID {DWORD LowPart;LONG HighPart;};
struct _LUID_AND_ATTRIBUTES {LUID Luid;DWORD Attributes;};
struct _MAILSLOT_CREATE_PARAMETERS {ULONG MailslotQuota;ULONG MaximumMessageSize;LARGE_INTEGER ReadTimeout;BOOLEAN TimeoutSpecified;};
enum _MANDATORY_LEVEL {MandatoryLevelUntrusted = 0x0,MandatoryLevelLow = 0x1,MandatoryLevelMedium = 0x2,MandatoryLevelHigh = 0x3,MandatoryLevelSystem = 0x4,MandatoryLevelSecureProcess = 0x5,MandatoryLevelCount = 0x6,};
struct _MAT2 {FIXED eM11;FIXED eM12;FIXED eM21;FIXED eM22;};
enum _MEDIA_TYPE {Unknown = 0x0,F5_1Pt2_512 = 0x1,F3_1Pt44_512 = 0x2,F3_2Pt88_512 = 0x3,F3_20Pt8_512 = 0x4,F3_720_512 = 0x5,F5_360_512 = 0x6,F5_320_512 = 0x7,F5_320_1024 = 0x8,F5_180_512 = 0x9,F5_160_512 = 0xA,RemovableMedia = 0xB,FixedMedia = 0xC,F3_120M_512 = 0xD,F3_640_512 = 0xE,F5_640_512 = 0xF,F5_720_512 = 0x10,F3_1Pt2_512 = 0x11,F3_1Pt23_1024 = 0x12,F5_1Pt23_1024 = 0x13,F3_128Mb_512 = 0x14,F3_230Mb_512 = 0x15,F8_256_128 = 0x16,F3_200Mb_512 = 0x17,F3_240M_512 = 0x18,F3_32M_512 = 0x19,};
struct _MEMORY_BASIC_INFORMATION {PVOID BaseAddress;PVOID AllocationBase;DWORD AllocationProtect;SIZE_T RegionSize;DWORD State;DWORD Protect;DWORD Type;};
struct _MEMORY_FRAME_INFORMATION {unsigned __int64 UseDescription : 4;unsigned __int64 ListDescription : 3;unsigned __int64 Reserved0 : 1;unsigned __int64 Pinned : 1;unsigned __int64 DontUse : 48;unsigned __int64 Priority : 3;unsigned __int64 Reserved : 4;};
enum _MEMORY_INFORMATION_CLASS {MemoryBasicInformation = 0x0,MemoryWorkingSetList = 0x1,MemorySectionName = 0x2,MemoryBasicVlmInformation = 0x3,MemoryWorkingSetExList = 0x4,};
struct _MEMORY_WORKING_SET_LIST {ULONG NumberOfPages;ULONG WorkingSetList[1];};
struct _MESSAGE_RESOURCE_BLOCK {DWORD LowId;DWORD HighId;DWORD OffsetToEntries;};
struct _MESSAGE_RESOURCE_DATA {DWORD NumberOfBlocks;MESSAGE_RESOURCE_BLOCK Blocks[1];};
struct _MESSAGE_RESOURCE_ENTRY {WORD Length;WORD Flags;BYTE Text[1];};
enum _MI_VAD_TYPE {VadNone = 0x0,VadDevicePhysicalMemory = 0x1,VadImageMap = 0x2,VadAwe = 0x3,VadWriteWatch = 0x4,VadLargePages = 0x5,VadRotatePhysical = 0x6,VadLargePageSection = 0x7,};
enum _MMLISTS {ZeroedPageList = 0x0,FreePageList = 0x1,StandbyPageList = 0x2,ModifiedPageList = 0x3,ModifiedNoWritePageList = 0x4,BadPageList = 0x5,ActiveAndValid = 0x6,TransitionPage = 0x7,};
struct _MMPFN_IDENTITY {union _MMPFN_IDENTITY::$7E9C9911A1532CB44D008F15FB218A50 u1;SIZE_T PageFrameIndex;union _MMPFN_IDENTITY::$4E3589583348DD4E00BCE2D563EB1E64 u2;};
union _MMPFN_IDENTITY::$4E3589583348DD4E00BCE2D563EB1E64 {struct _MMPFN_IDENTITY::$4E3589583348DD4E00BCE2D563EB1E64::$FD3D659631B3E42464BBB725BC2E4075 e1;PVOID FileObject;PVOID UniqueFileObjectKey;PVOID ProtoPteAddress;PVOID VirtualAddress;};
struct _MMPFN_IDENTITY::$4E3589583348DD4E00BCE2D563EB1E64::$FD3D659631B3E42464BBB725BC2E4075 {unsigned __int32 Image : 1;unsigned __int32 Mismatch : 1;};
union _MMPFN_IDENTITY::$7E9C9911A1532CB44D008F15FB218A50 {MEMORY_FRAME_INFORMATION e1;FILEOFFSET_INFORMATION e2;PAGEDIR_INFORMATION e3;UNIQUE_PROCESS_INFORMATION e4;};
struct _MMPTE {union _MMPTE::$54DBC1C15A9CD545E1C37091266C6841 u;};
union _MMPTE::$54DBC1C15A9CD545E1C37091266C6841 {ULONG_PTR Long;HARDWARE_PTE_X86 Flush;MMPTE_HARDWARE Hard;MMPTE_PROTOTYPE Proto;MMPTE_SOFTWARE Soft;MMPTE_TRANSITION Trans;MMPTE_SUBSECTION Subsect;MMPTE_LIST List;};
struct _MMPTE_HARDWARE {unsigned __int32 Valid : 1;unsigned __int32 Write : 1;unsigned __int32 Owner : 1;unsigned __int32 WriteThrough : 1;unsigned __int32 CacheDisable : 1;unsigned __int32 Accessed : 1;unsigned __int32 Dirty : 1;unsigned __int32 LargePage : 1;unsigned __int32 Global : 1;unsigned __int32 CopyOnWrite : 1;unsigned __int32 Prototype : 1;unsigned __int32 reserved : 1;unsigned __int32 PageFrameNumber : 20;};
struct _MMPTE_LIST {unsigned __int32 Valid : 1;unsigned __int32 OneEntry : 1;unsigned __int32 filler0 : 8;unsigned __int32 Prototype : 1;unsigned __int32 filler1 : 1;unsigned __int32 NextEntry : 20;};
struct _MMPTE_PROTOTYPE {unsigned __int32 Valid : 1;unsigned __int32 ProtoAddressLow : 7;unsigned __int32 ReadOnly : 1;unsigned __int32 WhichPool : 1;unsigned __int32 Prototype : 1;unsigned __int32 ProtoAddressHigh : 21;};
struct _MMPTE_SOFTWARE {unsigned __int32 Valid : 1;unsigned __int32 PageFileLow : 4;unsigned __int32 Protection : 5;unsigned __int32 Prototype : 1;unsigned __int32 Transition : 1;unsigned __int32 PageFileHigh : 20;};
struct _MMPTE_SUBSECTION {unsigned __int32 Valid : 1;unsigned __int32 SubsectionAddressLow : 4;unsigned __int32 Protection : 5;unsigned __int32 Prototype : 1;unsigned __int32 SubsectionAddressHigh : 20;unsigned __int32 WhichPool : 1;};
struct _MMPTE_TRANSITION {unsigned __int32 Valid : 1;unsigned __int32 Write : 1;unsigned __int32 Owner : 1;unsigned __int32 WriteThrough : 1;unsigned __int32 CacheDisable : 1;unsigned __int32 Protection : 5;unsigned __int32 Prototype : 1;unsigned __int32 Transition : 1;unsigned __int32 PageFrameNumber : 20;};
enum _MODE {KernelMode = 0x0,UserMode = 0x1,MaximumMode = 0x2,};
struct _MUTANT_BASIC_INFORMATION {LONG CurrentCount;BOOLEAN OwnedByCaller;BOOLEAN AbandonedState;};
enum _MUTANT_INFORMATION_CLASS {MutantBasicInformation = 0x0,MutantOwnerInformation = 0x1,};
struct _MUTANT_OWNER_INFORMATION {CLIENT_ID ClientId;};
struct _NAMED_PIPE_CREATE_PARAMETERS {ULONG NamedPipeType;ULONG ReadMode;ULONG CompletionMode;ULONG MaximumInstances;ULONG InboundQuota;ULONG OutboundQuota;LARGE_INTEGER DefaultTimeout;BOOLEAN TimeoutSpecified;};
struct _NLSTABLEINFO {CPTABLEINFO OemTableInfo;CPTABLEINFO AnsiTableInfo;PUSHORT UpperCaseTable;PUSHORT LowerCaseTable;};
struct _NLS_FILE_HEADER {USHORT HeaderSize;USHORT CodePage;USHORT MaximumCharacterSize;USHORT DefaultChar;USHORT UniDefaultChar;USHORT TransDefaultChar;USHORT TransUniDefaultChar;UCHAR LeadByte[12];};
struct _NTFS_STATISTICS {ULONG LogFileFullExceptions;ULONG OtherExceptions;ULONG MftReads;ULONG MftReadBytes;ULONG MftWrites;ULONG MftWriteBytes;struct _NTFS_STATISTICS::$9384ABB0CC0EC9C0951E51F8FDAAF22F MftWritesUserLevel;USHORT MftWritesFlushForLogFileFull;USHORT MftWritesLazyWriter;USHORT MftWritesUserRequest;ULONG Mft2Writes;ULONG Mft2WriteBytes;struct _NTFS_STATISTICS::$9384ABB0CC0EC9C0951E51F8FDAAF22F Mft2WritesUserLevel;USHORT Mft2WritesFlushForLogFileFull;USHORT Mft2WritesLazyWriter;USHORT Mft2WritesUserRequest;ULONG RootIndexReads;ULONG RootIndexReadBytes;ULONG RootIndexWrites;ULONG RootIndexWriteBytes;ULONG BitmapReads;ULONG BitmapReadBytes;ULONG BitmapWrites;ULONG BitmapWriteBytes;USHORT BitmapWritesFlushForLogFileFull;USHORT BitmapWritesLazyWriter;USHORT BitmapWritesUserRequest;struct _NTFS_STATISTICS::$C26E01C8818FDA238FF8A90EE27DD2F8 BitmapWritesUserLevel;ULONG MftBitmapReads;ULONG MftBitmapReadBytes;ULONG MftBitmapWrites;ULONG MftBitmapWriteBytes;USHORT MftBitmapWritesFlushForLogFileFull;USHORT MftBitmapWritesLazyWriter;USHORT MftBitmapWritesUserRequest;struct _NTFS_STATISTICS::$9384ABB0CC0EC9C0951E51F8FDAAF22F MftBitmapWritesUserLevel;ULONG UserIndexReads;ULONG UserIndexReadBytes;ULONG UserIndexWrites;ULONG UserIndexWriteBytes;ULONG LogFileReads;ULONG LogFileReadBytes;ULONG LogFileWrites;ULONG LogFileWriteBytes;struct _NTFS_STATISTICS::$7571E070C889D08DB25D48A45EE92D71 Allocate;};
struct _NTFS_STATISTICS::$7571E070C889D08DB25D48A45EE92D71 {ULONG Calls;ULONG Clusters;ULONG Hints;ULONG RunsReturned;ULONG HintsHonored;ULONG HintsClusters;ULONG Cache;ULONG CacheClusters;ULONG CacheMiss;ULONG CacheMissClusters;};
struct _NTFS_STATISTICS::$9384ABB0CC0EC9C0951E51F8FDAAF22F {USHORT Write;USHORT Create;USHORT SetInfo;USHORT Flush;};
struct _NTFS_STATISTICS::$C26E01C8818FDA238FF8A90EE27DD2F8 {USHORT Write;USHORT Create;USHORT SetInfo;};
enum _NT_PRODUCT_TYPE {NtProductWinNt = 0x1,NtProductLanManNt = 0x2,NtProductServer = 0x3,};
struct _NT_TIB {struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;PVOID StackBase;PVOID StackLimit;PVOID SubSystemTib;union {PVOID FiberData;DWORD Version;};PVOID ArbitraryUserPointer;struct _NT_TIB *Self;};
struct _NT_TIB32 {DWORD ExceptionList;DWORD StackBase;DWORD StackLimit;DWORD SubSystemTib;union {DWORD FiberData;DWORD Version;};DWORD ArbitraryUserPointer;DWORD Self;};
union _NT_TIB32::$6105CEC04866A055CE5CBAD3B96FF6B2 {DWORD FiberData;DWORD Version;};
struct _NT_TIB64 {DWORD64 ExceptionList;DWORD64 StackBase;DWORD64 StackLimit;DWORD64 SubSystemTib;union {DWORD64 FiberData;DWORD Version;};DWORD64 ArbitraryUserPointer;DWORD64 Self;};
union _NT_TIB64::$1E27901D73CC769BB707041ECE344787 {DWORD64 FiberData;DWORD Version;};
union _NT_TIB::$0349ADB4452EC09BEC08E2292695FBBA {PVOID FiberData;DWORD Version;};
struct _NUMA_NODE_RELATIONSHIP {ULONG NodeNumber;UCHAR Reserved[20];GROUP_AFFINITY GroupMask;};
struct _OBJECTID {GUID Lineage;DWORD Uniquifier;};
struct _OBJECT_ALL_TYPES_INFORMATION {ULONG NumberOfTypes;};
struct _OBJECT_ATTRIBUTES {ULONG Length;HANDLE RootDirectory;PUNICODE_STRING ObjectName;ULONG Attributes;PVOID SecurityDescriptor;PVOID SecurityQualityOfService;};
struct _OBJECT_BASIC_INFORMATION {ULONG Attributes;ACCESS_MASK GrantedAccess;ULONG HandleCount;ULONG PointerCount;ULONG PagedPoolUsage;ULONG NonPagedPoolUsage;ULONG Reserved[3];ULONG NameInformationLength;ULONG TypeInformationLength;ULONG SecurityDescriptorLength;LARGE_INTEGER CreateTime;};
struct _OBJECT_DIRECTORY_INFORMATION {UNICODE_STRING Name;UNICODE_STRING TypeName;};
struct _OBJECT_HANDLE_ATTRIBUTE_INFORMATION {BOOLEAN Inherit;BOOLEAN ProtectFromClose;};
enum _OBJECT_INFORMATION_CLASS {ObjectBasicInformation = 0x0,ObjectNameInformation = 0x1,ObjectTypeInformation = 0x2,ObjectTypesInformation = 0x3,ObjectHandleFlagInformation = 0x4,ObjectSessionInformation = 0x5,MaxObjectInfoClass = 0x6,};
struct _OBJECT_NAME_INFORMATION {UNICODE_STRING Name;};
struct _OBJECT_TYPE_INFORMATION {UNICODE_STRING TypeName;ULONG TotalNumberOfObjects;ULONG TotalNumberOfHandles;ULONG TotalPagedPoolUsage;ULONG TotalNonPagedPoolUsage;ULONG TotalNamePoolUsage;ULONG TotalHandleTableUsage;ULONG HighWaterNumberOfObjects;ULONG HighWaterNumberOfHandles;ULONG HighWaterPagedPoolUsage;ULONG HighWaterNonPagedPoolUsage;ULONG HighWaterNamePoolUsage;ULONG HighWaterHandleTableUsage;ULONG InvalidAttributes;GENERIC_MAPPING GenericMapping;ULONG ValidAccessMask;BOOLEAN SecurityRequired;BOOLEAN MaintainHandleCount;ULONG PoolType;ULONG DefaultPagedPoolCharge;ULONG DefaultNonPagedPoolCharge;};
struct _OBJECT_TYPE_LIST {WORD Level;WORD Sbz;GUID *ObjectType;};
struct _OB_DUMP_CONTROL {PVOID Stream;ULONG Detail;};
struct _OSVERSIONINFOA {DWORD dwOSVersionInfoSize;DWORD dwMajorVersion;DWORD dwMinorVersion;DWORD dwBuildNumber;DWORD dwPlatformId;CHAR szCSDVersion[128];};
struct _OSVERSIONINFOEXA {DWORD dwOSVersionInfoSize;DWORD dwMajorVersion;DWORD dwMinorVersion;DWORD dwBuildNumber;DWORD dwPlatformId;CHAR szCSDVersion[128];WORD wServicePackMajor;WORD wServicePackMinor;WORD wSuiteMask;BYTE wProductType;BYTE wReserved;};
struct _OSVERSIONINFOEXW {DWORD dwOSVersionInfoSize;DWORD dwMajorVersion;DWORD dwMinorVersion;DWORD dwBuildNumber;DWORD dwPlatformId;WCHAR szCSDVersion[128];WORD wServicePackMajor;WORD wServicePackMinor;WORD wSuiteMask;BYTE wProductType;BYTE wReserved;};
struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize;DWORD dwMajorVersion;DWORD dwMinorVersion;DWORD dwBuildNumber;DWORD dwPlatformId;WCHAR szCSDVersion[128];};
struct _OUTLINETEXTMETRICA {UINT otmSize;TEXTMETRICA otmTextMetrics;BYTE otmFiller;PANOSE otmPanoseNumber;UINT otmfsSelection;UINT otmfsType;int otmsCharSlopeRise;int otmsCharSlopeRun;int otmItalicAngle;UINT otmEMSquare;int otmAscent;int otmDescent;UINT otmLineGap;UINT otmsCapEmHeight;UINT otmsXHeight;RECT otmrcFontBox;int otmMacAscent;int otmMacDescent;UINT otmMacLineGap;UINT otmusMinimumPPEM;POINT otmptSubscriptSize;POINT otmptSubscriptOffset;POINT otmptSuperscriptSize;POINT otmptSuperscriptOffset;UINT otmsStrikeoutSize;int otmsStrikeoutPosition;int otmsUnderscoreSize;int otmsUnderscorePosition;PSTR otmpFamilyName;PSTR otmpFaceName;PSTR otmpStyleName;PSTR otmpFullName;};
struct _OUTLINETEXTMETRICW {UINT otmSize;TEXTMETRICW otmTextMetrics;BYTE otmFiller;PANOSE otmPanoseNumber;UINT otmfsSelection;UINT otmfsType;int otmsCharSlopeRise;int otmsCharSlopeRun;int otmItalicAngle;UINT otmEMSquare;int otmAscent;int otmDescent;UINT otmLineGap;UINT otmsCapEmHeight;UINT otmsXHeight;RECT otmrcFontBox;int otmMacAscent;int otmMacDescent;UINT otmMacLineGap;UINT otmusMinimumPPEM;POINT otmptSubscriptSize;POINT otmptSubscriptOffset;POINT otmptSuperscriptSize;POINT otmptSuperscriptOffset;UINT otmsStrikeoutSize;int otmsStrikeoutPosition;int otmsUnderscoreSize;int otmsUnderscorePosition;PSTR otmpFamilyName;PSTR otmpFaceName;PSTR otmpStyleName;PSTR otmpFullName;};
struct _PAGEDIR_INFORMATION {unsigned __int64 DontUse : 9;unsigned __int64 PageDirectoryBase : 48;unsigned __int64 Reserved : 7;};
struct _PALOBJ {ULONG ulReserved;};
struct _PARTITION_INFORMATION {LARGE_INTEGER StartingOffset;LARGE_INTEGER PartitionLength;DWORD HiddenSectors;DWORD PartitionNumber;BYTE PartitionType;BOOLEAN BootIndicator;BOOLEAN RecognizedPartition;BOOLEAN RewritePartition;};
struct _PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle;LARGE_INTEGER StartingOffset;LARGE_INTEGER PartitionLength;DWORD PartitionNumber;BOOLEAN RewritePartition;union {PARTITION_INFORMATION_MBR Mbr;PARTITION_INFORMATION_GPT Gpt;};};
union _PARTITION_INFORMATION_EX::$41520227951B374488E85ABED149FDD2 {PARTITION_INFORMATION_MBR Mbr;PARTITION_INFORMATION_GPT Gpt;};
struct _PARTITION_INFORMATION_GPT {GUID PartitionType;GUID PartitionId;DWORD64 Attributes;WCHAR Name[36];};
struct _PARTITION_INFORMATION_MBR {BYTE PartitionType;BOOLEAN BootIndicator;BOOLEAN RecognizedPartition;DWORD HiddenSectors;};
enum _PARTITION_STYLE {PARTITION_STYLE_MBR = 0x0,PARTITION_STYLE_GPT = 0x1,PARTITION_STYLE_RAW = 0x2,};
struct _PATHDATA {FLONG flags;ULONG count;POINTFIX *pptfx;};
struct _PATHOBJ {FLONG fl;ULONG cCurves;};
struct _PEB {BOOLEAN InheritedAddressSpace;BOOLEAN ReadImageFileExecOptions;BOOLEAN BeingDebugged;union {BOOLEAN BitField;struct {unsigned __int8 ImageUsesLargePages : 1;unsigned __int8 IsProtectedProcess : 1;unsigned __int8 IsLegacyProcess : 1;unsigned __int8 IsImageDynamicallyRelocated : 1;unsigned __int8 SkipPatchingUser32Forwarders : 1;unsigned __int8 SpareBits : 3;};};HANDLE Mutant;PVOID ImageBaseAddress;PPEB_LDR_DATA Ldr;struct _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;PVOID SubSystemData;PVOID ProcessHeap;struct _RTL_CRITICAL_SECTION *FastPebLock;PVOID AltThunkSListPtr;PVOID IFEOKey;union {ULONG CrossProcessFlags;struct {unsigned __int32 ProcessInJob : 1;unsigned __int32 ProcessInitializing : 1;unsigned __int32 ProcessUsingVEH : 1;unsigned __int32 ProcessUsingVCH : 1;unsigned __int32 ReservedBits0 : 28;};};union {PVOID KernelCallbackTable;PVOID UserSharedInfoPtr;};ULONG SystemReserved[1];ULONG SpareUlong;PPEB_FREE_BLOCK FreeList;ULONG TlsExpansionCounter;PVOID TlsBitmap;ULONG TlsBitmapBits[2];PVOID ReadOnlySharedMemoryBase;PVOID HotpatchInformation;PVOID *ReadOnlyStaticServerData;PVOID AnsiCodePageData;PVOID OemCodePageData;PVOID UnicodeCaseTableData;ULONG NumberOfProcessors;ULONG NtGlobalFlag;LARGE_INTEGER CriticalSectionTimeout;ULONG_PTR HeapSegmentReserve;ULONG_PTR HeapSegmentCommit;ULONG_PTR HeapDeCommitTotalFreeThreshold;ULONG_PTR HeapDeCommitFreeBlockThreshold;ULONG NumberOfHeaps;ULONG MaximumNumberOfHeaps;PVOID *ProcessHeaps;PVOID GdiSharedHandleTable;PVOID ProcessStarterHelper;ULONG GdiDCAttributeList;struct _RTL_CRITICAL_SECTION *LoaderLock;ULONG OSMajorVersion;ULONG OSMinorVersion;USHORT OSBuildNumber;USHORT OSCSDVersion;ULONG OSPlatformId;ULONG ImageSubsystem;ULONG ImageSubsystemMajorVersion;ULONG ImageSubsystemMinorVersion;ULONG_PTR ImageProcessAffinityMask;ULONG GdiHandleBuffer[34];PPOST_PROCESS_INIT_ROUTINE PostProcessInitRoutine;PVOID TlsExpansionBitmap;ULONG TlsExpansionBitmapBits[32];ULONG SessionId;ULARGE_INTEGER AppCompatFlags;ULARGE_INTEGER AppCompatFlagsUser;PVOID pShimData;PVOID AppCompatInfo;UNICODE_STRING CSDVersion;struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;ULONG_PTR MinimumStackCommit;PVOID *FlsCallback;LIST_ENTRY FlsListHead;PVOID FlsBitmap;ULONG FlsBitmapBits[4];ULONG FlsHighIndex;PVOID WerRegistrationData;PVOID WerShipAssertPtr;};
union _PEB::$53BFDF25AC1486622A5316A4EF26851E {ULONG CrossProcessFlags;struct {unsigned __int32 ProcessInJob : 1;unsigned __int32 ProcessInitializing : 1;unsigned __int32 ProcessUsingVEH : 1;unsigned __int32 ProcessUsingVCH : 1;unsigned __int32 ReservedBits0 : 28;};};
struct _PEB::$53BFDF25AC1486622A5316A4EF26851E::$91908E46E5FCDFB3FCB6ED58580BB4F9 {unsigned __int32 ProcessInJob : 1;unsigned __int32 ProcessInitializing : 1;unsigned __int32 ProcessUsingVEH : 1;unsigned __int32 ProcessUsingVCH : 1;unsigned __int32 ReservedBits0 : 28;};
union _PEB::$98531C30369844289F048F50DA9C11E6 {BOOLEAN BitField;struct {unsigned __int8 ImageUsesLargePages : 1;unsigned __int8 IsProtectedProcess : 1;unsigned __int8 IsLegacyProcess : 1;unsigned __int8 IsImageDynamicallyRelocated : 1;unsigned __int8 SkipPatchingUser32Forwarders : 1;unsigned __int8 SpareBits : 3;};};
struct _PEB::$98531C30369844289F048F50DA9C11E6::$FD42647A95697634BDFB73B2D6521EB2 {unsigned __int8 ImageUsesLargePages : 1;unsigned __int8 IsProtectedProcess : 1;unsigned __int8 IsLegacyProcess : 1;unsigned __int8 IsImageDynamicallyRelocated : 1;unsigned __int8 SkipPatchingUser32Forwarders : 1;unsigned __int8 SpareBits : 3;};
union _PEB::$C441D3DC9486BA1297D17299B5FCA3C3 {PVOID KernelCallbackTable;PVOID UserSharedInfoPtr;};
struct _PEB_FREE_BLOCK {struct _PEB_FREE_BLOCK *Next;ULONG Size;};
struct _PEB_LDR_DATA {ULONG Length;BOOLEAN Initialized;PVOID SsHandle;LIST_ENTRY InLoadOrderModuleList;LIST_ENTRY InMemoryOrderModuleList;LIST_ENTRY InInitializationOrderModuleList;PVOID EntryInProgress;UCHAR ShutdownInProgress;PVOID ShutdownThreadId;};
struct _PERBANDINFO {BOOL bRepeatThisBand;SIZEL szlBand;ULONG ulHorzRes;ULONG ulVertRes;};
struct _PERF_BIN {DWORD NumberOfBins;DWORD TypeOfBin;BIN_RANGE BinsRanges[1];};
enum _PLUGPLAY_BUS_CLASS {SystemBus = 0x0,PlugPlayVirtualBus = 0x1,MaxPlugPlayBusClass = 0x2,};
struct _PLUGPLAY_BUS_INSTANCE {PLUGPLAY_BUS_TYPE BusType;ULONG BusNumber;WCHAR BusName[24];};
struct _PLUGPLAY_BUS_TYPE {PLUGPLAY_BUS_CLASS BusClass;union {INTERFACE_TYPE SystemBusType;PLUGPLAY_VIRTUAL_BUS_TYPE PlugPlayVirtualBusType;};};
union _PLUGPLAY_BUS_TYPE::$0CABEDB6CD02F109216107042109F7C4 {INTERFACE_TYPE SystemBusType;PLUGPLAY_VIRTUAL_BUS_TYPE PlugPlayVirtualBusType;};
struct _PLUGPLAY_CONTOL_STATUS_DATA {UNICODE_STRING DeviceInstance;ULONG Operation;ULONG DeviceStatus;ULONG DeviceProblem;};
enum _PLUGPLAY_CONTROL_CLASS {PlugPlayControlEnumerateDevice = 0x0,PlugPlayControlRegisterNewDevice = 0x1,PlugPlayControlDeregisterDevice = 0x2,PlugPlayControlInitializeDevice = 0x3,PlugPlayControlStartDevice = 0x4,PlugPlayControlUnlockDevice = 0x5,PlugPlayControlQueryAndRemoveDevice = 0x6,PlugPlayControlUserResponse = 0x7,PlugPlayControlGenerateLegacyDevice = 0x8,PlugPlayControlGetInterfaceDeviceList = 0x9,PlugPlayControlProperty = 0xA,PlugPlayControlDeviceClassAssociation = 0xB,PlugPlayControlGetRelatedDevice = 0xC,PlugPlayControlGetInterfaceDeviceAlias = 0xD,PlugPlayControlDeviceStatus = 0xE,PlugPlayControlGetDeviceDepth = 0xF,PlugPlayControlQueryDeviceRelations = 0x10,PlugPlayControlTargetDeviceRelation = 0x11,PlugPlayControlQueryConflictList = 0x12,PlugPlayControlRetrieveDock = 0x13,PlugPlayControlResetDevice = 0x14,PlugPlayControlHaltDevice = 0x15,PlugPlayControlGetBlockedDriverList = 0x16,MaxPlugPlayControl = 0x17,};
struct _PLUGPLAY_CONTROL_DEPTH_DATA {UNICODE_STRING DeviceInstance;ULONG Depth;};
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA {UNICODE_STRING DeviceInstance;ULONG Relations;ULONG BufferSize;PWCHAR Buffer;};
struct _PLUGPLAY_CONTROL_ENUMERATE_DEVICE_DATA {UNICODE_STRING DeviceInstance;ULONG Flags;};
struct _PLUGPLAY_CONTROL_INTERFACE_DEVICE_LIST_DATA {UNICODE_STRING DeviceInstance;LPGUID FilterGuid;ULONG Flags;PVOID Buffer;ULONG BufferSize;};
struct _PLUGPLAY_CONTROL_PROPERTY_DATA {UNICODE_STRING DeviceInstance;ULONG Property;PVOID Buffer;ULONG BufferSize;};
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA {UNICODE_STRING TargetDeviceInstance;ULONG Relation;PWCHAR RelatedDeviceInstance;ULONG RelatedDeviceInstanceLength;};
struct _PLUGPLAY_CONTROL_RESET_DEVICE_DATA {UNICODE_STRING DeviceInstance;};
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA {ULONG DeviceInstanceLength;PWSTR DeviceInstance;};
struct _PLUGPLAY_EVENT_BLOCK {GUID EventGuid;PLUGPLAY_EVENT_CATEGORY EventCategory;PULONG Result;ULONG Flags;ULONG TotalSize;PVOID DeviceObject;union {struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$551BF5EFCB5BEE0485F2EFA8E6902C50 DeviceClass;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$F888164DEFB383FAD4EBD80422FD96EF TargetDevice;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$9A6569D9A3BDCCC5E2DFEABE7DCD9DB5 InstallDevice;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$FAF6A24888F4ABE650EDAAE12EA46C31 CustomNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$1738C577CC08C6FAF9431B15E975FEF2 ProfileNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$473784CC197E8132F0309143C88A75AD PowerNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$59EE7120FB7DECFE6F10D4263FBBF409 VetoNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$927E4DF8E9307102A5DA9C6B5416A1A6 BlockedDriverNotification;};};
union _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F {struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$551BF5EFCB5BEE0485F2EFA8E6902C50 DeviceClass;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$F888164DEFB383FAD4EBD80422FD96EF TargetDevice;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$9A6569D9A3BDCCC5E2DFEABE7DCD9DB5 InstallDevice;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$FAF6A24888F4ABE650EDAAE12EA46C31 CustomNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$1738C577CC08C6FAF9431B15E975FEF2 ProfileNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$473784CC197E8132F0309143C88A75AD PowerNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$59EE7120FB7DECFE6F10D4263FBBF409 VetoNotification;struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$927E4DF8E9307102A5DA9C6B5416A1A6 BlockedDriverNotification;};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$1738C577CC08C6FAF9431B15E975FEF2 {PVOID Notification;};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$473784CC197E8132F0309143C88A75AD {ULONG NotificationCode;ULONG NotificationData;};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$551BF5EFCB5BEE0485F2EFA8E6902C50 {GUID ClassGuid;WCHAR SymbolicLinkName[1];};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$59EE7120FB7DECFE6F10D4263FBBF409 {PNP_VETO_TYPE VetoType;WCHAR DeviceIdVetoNameBuffer[1];};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$927E4DF8E9307102A5DA9C6B5416A1A6 {GUID BlockedDriverGuid;};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$9A6569D9A3BDCCC5E2DFEABE7DCD9DB5 {WCHAR DeviceId[1];};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$F888164DEFB383FAD4EBD80422FD96EF {WCHAR DeviceIds[1];};
struct _PLUGPLAY_EVENT_BLOCK::$EFD3A9F07ED8066D032B8EF433D6FA7F::$FAF6A24888F4ABE650EDAAE12EA46C31 {PVOID NotificationStructure;WCHAR DeviceIds[1];};
enum _PLUGPLAY_EVENT_CATEGORY {HardwareProfileChangeEvent = 0x0,TargetDeviceChangeEvent = 0x1,DeviceClassChangeEvent = 0x2,CustomDeviceEvent = 0x3,DeviceInstallEvent = 0x4,DeviceArrivalEvent = 0x5,PowerEvent = 0x6,VetoEvent = 0x7,BlockedDriverEvent = 0x8,MaxPlugEventCategory = 0x9,};
enum _PLUGPLAY_VIRTUAL_BUS_TYPE {Root = 0x0,MaxPlugPlayVirtualBusType = 0x1,};
enum _PNP_DEVNODE_STATE {DeviceNodeUnspecified = 0x300,DeviceNodeUninitialized = 0x301,DeviceNodeInitialized = 0x302,DeviceNodeDriversAdded = 0x303,DeviceNodeResourcesAssigned = 0x304,DeviceNodeStartPending = 0x305,DeviceNodeStartCompletion = 0x306,DeviceNodeStartPostWork = 0x307,DeviceNodeStarted = 0x308,DeviceNodeQueryStopped = 0x309,DeviceNodeStopped = 0x30A,DeviceNodeRestartCompletion = 0x30B,DeviceNodeEnumeratePending = 0x30C,DeviceNodeEnumerateCompletion = 0x30D,DeviceNodeAwaitingQueuedDeletion = 0x30E,DeviceNodeAwaitingQueuedRemoval = 0x30F,DeviceNodeQueryRemoved = 0x310,DeviceNodeRemovePendingCloses = 0x311,DeviceNodeRemoved = 0x312,DeviceNodeDeletePendingCloses = 0x313,DeviceNodeDeleted = 0x314,MaxDeviceNodeState = 0x315,};
enum _PNP_VETO_TYPE {PNP_VetoTypeUnknown = 0x0,PNP_VetoLegacyDevice = 0x1,PNP_VetoPendingClose = 0x2,PNP_VetoWindowsApp = 0x3,PNP_VetoWindowsService = 0x4,PNP_VetoOutstandingOpen = 0x5,PNP_VetoDevice = 0x6,PNP_VetoDriver = 0x7,PNP_VetoIllegalDeviceRequest = 0x8,PNP_VetoInsufficientPower = 0x9,PNP_VetoNonDisableable = 0xA,PNP_VetoLegacyDriver = 0xB,};
struct _POINTE {FLOATL x;FLOATL y;};
struct _POINTFIX {FIX x;FIX y;};
struct _POINTFLOAT {FLOAT x;FLOAT y;};
struct _POINTL {LONG x;LONG y;};
struct _POINTQF {LARGE_INTEGER x;LARGE_INTEGER y;};
struct _POLYTEXTA {int x;int y;UINT n;LPCSTR lpstr;UINT uiFlags;RECT rcl;int *pdx;};
struct _POLYTEXTW {int x;int y;UINT n;LPCWSTR lpstr;UINT uiFlags;RECT rcl;int *pdx;};
struct _POOLED_USAGE_AND_LIMITS {SIZE_T PeakPagedPoolUsage;SIZE_T PagedPoolUsage;SIZE_T PagedPoolLimit;SIZE_T PeakNonPagedPoolUsage;SIZE_T NonPagedPoolUsage;SIZE_T NonPagedPoolLimit;SIZE_T PeakPagefileUsage;SIZE_T PagefileUsage;SIZE_T PagefileLimit;};
enum _POOL_TYPE {NonPagedPool = 0x0,PagedPool = 0x1,NonPagedPoolMustSucceed = 0x2,DontUseThisType = 0x3,NonPagedPoolCacheAligned = 0x4,PagedPoolCacheAligned = 0x5,NonPagedPoolCacheAlignedMustS = 0x6,MaxPoolType = 0x7,NonPagedPoolSession = 0x20,PagedPoolSession = 0x21,NonPagedPoolMustSucceedSession = 0x22,DontUseThisTypeSession = 0x23,NonPagedPoolCacheAlignedSession = 0x24,PagedPoolCacheAlignedSession = 0x25,NonPagedPoolCacheAlignedMustSSession = 0x26,};
enum _PORT_INFORMATION_CLASS {PortNoInformation = 0x0,};
struct _PORT_MESSAGE {union _PORT_MESSAGE::$4EBEB1676D792DDF3923F32E76E5BE5B u1;union _PORT_MESSAGE::$06AD8C8F9C754E7AB89541C43F1D35F6 u2;union {CLIENT_ID ClientId;double DoNotUseThisField;};ULONG MessageId;union {SIZE_T ClientViewSize;ULONG CallbackId;};};
union _PORT_MESSAGE::$06AD8C8F9C754E7AB89541C43F1D35F6 {struct _PORT_MESSAGE::$06AD8C8F9C754E7AB89541C43F1D35F6::$F0E1DFBA26AABCCA630D04E70B9C03C0 s2;ULONG ZeroInit;};
struct _PORT_MESSAGE::$06AD8C8F9C754E7AB89541C43F1D35F6::$F0E1DFBA26AABCCA630D04E70B9C03C0 {CSHORT Type;CSHORT DataInfoOffset;};
union _PORT_MESSAGE::$4EBEB1676D792DDF3923F32E76E5BE5B {struct _PORT_MESSAGE::$4EBEB1676D792DDF3923F32E76E5BE5B::$6C8CBE65BF7A4262EFF6621133D95761 s1;ULONG Length;};
struct _PORT_MESSAGE::$4EBEB1676D792DDF3923F32E76E5BE5B::$6C8CBE65BF7A4262EFF6621133D95761 {CSHORT DataLength;CSHORT TotalLength;};
union _PORT_MESSAGE::$5030C19556D5270C6F132044C7107DDB {SIZE_T ClientViewSize;ULONG CallbackId;};
union _PORT_MESSAGE::$C6BC508B531A81D74C33985719C23F49 {CLIENT_ID ClientId;double DoNotUseThisField;};
struct _PORT_VIEW {ULONG Length;HANDLE SectionHandle;ULONG SectionOffset;SIZE_T ViewSize;PVOID ViewBase;PVOID ViewRemoteBase;};
typedef $0FC989869F227A36D749990E523E5F04 _POWER_ACTION;
struct _POWER_ACTION_POLICY {POWER_ACTION Action;DWORD Flags;DWORD EventCode;};
enum _POWER_INFORMATION_LEVEL {SystemPowerPolicyAc = 0x0,SystemPowerPolicyDc = 0x1,VerifySystemPolicyAc = 0x2,VerifySystemPolicyDc = 0x3,SystemPowerCapabilities = 0x4,SystemBatteryState = 0x5,SystemPowerStateHandler = 0x6,ProcessorStateHandler = 0x7,SystemPowerPolicyCurrent = 0x8,AdministratorPowerPolicy = 0x9,SystemReserveHiberFile = 0xA,ProcessorInformation = 0xB,SystemPowerInformation = 0xC,ProcessorStateHandler2 = 0xD,LastWakeTime = 0xE,LastSleepTime = 0xF,SystemExecutionState = 0x10,SystemPowerStateNotifyHandler = 0x11,ProcessorPowerPolicyAc = 0x12,ProcessorPowerPolicyDc = 0x13,VerifyProcessorPowerPolicyAc = 0x14,VerifyProcessorPowerPolicyDc = 0x15,ProcessorPowerPolicyCurrent = 0x16,SystemPowerStateLogging = 0x17,SystemPowerLoggingEntry = 0x18,SetPowerSettingValue = 0x19,NotifyUserPowerSetting = 0x1A,PowerInformationLevelUnused0 = 0x1B,PowerInformationLevelUnused1 = 0x1C,SystemVideoState = 0x1D,TraceApplicationPowerMessage = 0x1E,TraceApplicationPowerMessageEnd = 0x1F,ProcessorPerfStates = 0x20,ProcessorIdleStates = 0x21,ProcessorCap = 0x22,SystemWakeSource = 0x23,SystemHiberFileInformation = 0x24,TraceServicePowerMessage = 0x25,ProcessorLoad = 0x26,PowerShutdownNotification = 0x27,MonitorCapabilities = 0x28,SessionPowerInit = 0x29,SessionDisplayState = 0x2A,PowerRequestCreate = 0x2B,PowerRequestAction = 0x2C,GetPowerRequestList = 0x2D,ProcessorInformationEx = 0x2E,NotifyUserModeLegacyPowerEvent = 0x2F,GroupPark = 0x30,ProcessorIdleDomains = 0x31,WakeTimerList = 0x32,SystemHiberFileSize = 0x33,PowerInformationLevelMaximum = 0x34,};
enum _PP_NPAGED_LOOKASIDE_NUMBER {LookasideSmallIrpList = 0x0,LookasideLargeIrpList = 0x1,LookasideMdlList = 0x2,LookasideCreateInfoList = 0x3,LookasideNameBufferList = 0x4,LookasideTwilightList = 0x5,LookasideCompletionList = 0x6,LookasideMaximumList = 0x7,};
struct _PREFIX_TABLE {CSHORT NodeTypeCode;CSHORT NameLength;PPREFIX_TABLE_ENTRY NextPrefixTree;};
struct _PREFIX_TABLE_ENTRY {CSHORT NodeTypeCode;CSHORT NameLength;struct _PREFIX_TABLE_ENTRY *NextPrefixTree;RTL_SPLAY_LINKS Links;PSTRING Prefix;};
struct _PREVENT_MEDIA_REMOVAL {BOOLEAN PreventMediaRemoval;};
struct _PRIVILEGE_SET {DWORD PrivilegeCount;DWORD Control;LUID_AND_ATTRIBUTES Privilege[1];};
enum _PROCESSINFOCLASS {ProcessBasicInformation = 0x0,ProcessQuotaLimits = 0x1,ProcessIoCounters = 0x2,ProcessVmCounters = 0x3,ProcessTimes = 0x4,ProcessBasePriority = 0x5,ProcessRaisePriority = 0x6,ProcessDebugPort = 0x7,ProcessExceptionPort = 0x8,ProcessAccessToken = 0x9,ProcessLdtInformation = 0xA,ProcessLdtSize = 0xB,ProcessDefaultHardErrorMode = 0xC,ProcessIoPortHandlers = 0xD,ProcessPooledUsageAndLimits = 0xE,ProcessWorkingSetWatch = 0xF,ProcessUserModeIOPL = 0x10,ProcessEnableAlignmentFaultFixup = 0x11,ProcessPriorityClass = 0x12,ProcessWx86Information = 0x13,ProcessHandleCount = 0x14,ProcessAffinityMask = 0x15,ProcessPriorityBoost = 0x16,ProcessDeviceMap = 0x17,ProcessSessionInformation = 0x18,ProcessForegroundInformation = 0x19,ProcessWow64Information = 0x1A,ProcessImageFileName = 0x1B,ProcessLUIDDeviceMapsEnabled = 0x1C,ProcessBreakOnTermination = 0x1D,ProcessDebugObjectHandle = 0x1E,ProcessDebugFlags = 0x1F,ProcessHandleTracing = 0x20,ProcessIoPriority = 0x21,ProcessExecuteFlags = 0x22,ProcessTlsInformation = 0x23,ProcessCookie = 0x24,ProcessImageInformation = 0x25,ProcessCycleTime = 0x26,ProcessPagePriority = 0x27,ProcessInstrumentationCallback = 0x28,ProcessThreadStackAllocation = 0x29,ProcessWorkingSetWatchEx = 0x2A,ProcessImageFileNameWin32 = 0x2B,ProcessImageFileMapping = 0x2C,ProcessAffinityUpdateMode = 0x2D,ProcessMemoryAllocationMode = 0x2E,MaxProcessInfoClass = 0x2F,};
enum _PROCESSOR_CACHE_TYPE {CacheUnified = 0x0,CacheInstruction = 0x1,CacheData = 0x2,CacheTrace = 0x3,};
struct _PROCESSOR_GROUP_INFO {UCHAR MaximumProcessorCount;UCHAR ActiveProcessorCount;UCHAR Reserved[38];KAFFINITY ActiveProcessorMask;};
struct _PROCESSOR_NUMBER {WORD Group;BYTE Number;BYTE Reserved;};
struct _PROCESSOR_POWER_INFORMATION {ULONG Number;ULONG MaxMhz;ULONG CurrentMhz;ULONG MhzLimit;ULONG MaxIdleState;ULONG CurrentIdleState;};
struct _PROCESSOR_POWER_POLICY {DWORD Revision;BYTE DynamicThrottle;BYTE Spare[3];unsigned __int32 DisableCStates : 1;unsigned __int32 Reserved : 31;DWORD PolicyCount;PROCESSOR_POWER_POLICY_INFO Policy[3];};
struct _PROCESSOR_POWER_POLICY_INFO {DWORD TimeCheck;DWORD DemoteLimit;DWORD PromoteLimit;BYTE DemotePercent;BYTE PromotePercent;BYTE Spare[2];unsigned __int32 AllowDemotion : 1;unsigned __int32 AllowPromotion : 1;unsigned __int32 Reserved : 30;};
struct _PROCESSOR_RELATIONSHIP {UCHAR Flags;UCHAR Reserved[21];USHORT GroupCount;GROUP_AFFINITY GroupMask[1];};
struct _PROCESS_ACCESS_TOKEN {HANDLE Token;HANDLE Thread;};
struct _PROCESS_BASIC_INFORMATION {NTSTATUS ExitStatus;PPEB PebBaseAddress;ULONG_PTR AffinityMask;KPRIORITY BasePriority;ULONG_PTR UniqueProcessId;ULONG_PTR InheritedFromUniqueProcessId;};
struct _PROCESS_DEVICEMAP_INFORMATION {union {struct _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762::$94C088134ED8F25DD6CC04D6DA40A0AF Set;struct _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762::$9B7144FD41D26DD547F4C3FA36F343DB Query;};};
union _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762 {struct _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762::$94C088134ED8F25DD6CC04D6DA40A0AF Set;struct _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762::$9B7144FD41D26DD547F4C3FA36F343DB Query;};
struct _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762::$94C088134ED8F25DD6CC04D6DA40A0AF {HANDLE DirectoryHandle;};
struct _PROCESS_DEVICEMAP_INFORMATION::$2315F45B6FDDBBFF951CC6233B0B9762::$9B7144FD41D26DD547F4C3FA36F343DB {ULONG DriveMap;UCHAR DriveType[32];};
struct _PROCESS_FOREGROUND_BACKGROUND {BOOLEAN Foreground;};
struct _PROCESS_PRIORITY_CLASS {BOOLEAN Foreground;UCHAR PriorityClass;};
struct _PROCESS_SESSION_INFORMATION {ULONG SessionId;};
enum _PROFILE_STATUS {DOCK_NOTDOCKDEVICE = 0x0,DOCK_QUIESCENT = 0x1,DOCK_ARRIVING = 0x2,DOCK_DEPARTING = 0x3,DOCK_EJECTIRP_COMPLETED = 0x4,};
struct _QUOTA_LIMITS {SIZE_T PagedPoolLimit;SIZE_T NonPagedPoolLimit;SIZE_T MinimumWorkingSetSize;SIZE_T MaximumWorkingSetSize;SIZE_T PagefileLimit;LARGE_INTEGER TimeLimit;};
struct _QUOTA_LIMITS_EX {SIZE_T PagedPoolLimit;SIZE_T NonPagedPoolLimit;SIZE_T MinimumWorkingSetSize;SIZE_T MaximumWorkingSetSize;SIZE_T PagefileLimit;LARGE_INTEGER TimeLimit;SIZE_T Reserved1;SIZE_T Reserved2;SIZE_T Reserved3;SIZE_T Reserved4;DWORD Flags;RATE_QUOTA_LIMIT CpuRateLimit;};
struct _RANGE_LIST_ITERATOR {PLIST_ENTRY RangeListHead;PLIST_ENTRY MergedHead;PVOID Current;ULONG Stamp;};
struct _RASTERIZER_STATUS {__int16 nSize;__int16 wFlags;__int16 nLanguageID;};
union _RATE_QUOTA_LIMIT {DWORD RateData;struct {unsigned __int32 RatePercent : 7;unsigned __int32 Reserved0 : 25;};};
struct _RATE_QUOTA_LIMIT::$79FA692AF2D868318B7516C685A0638E {unsigned __int32 RatePercent : 7;unsigned __int32 Reserved0 : 25;};
struct _REASSIGN_BLOCKS {WORD Reserved;WORD Count;DWORD BlockNumber[1];};
struct _RECTFX {FIX xLeft;FIX yTop;FIX xRight;FIX yBottom;};
struct _RECTL {LONG left;LONG top;LONG right;LONG bottom;};
struct _REMOTE_PORT_VIEW {ULONG Length;SIZE_T ViewSize;PVOID ViewBase;};
struct _REPARSE_DATA_BUFFER {ULONG ReparseTag;USHORT ReparseDataLength;USHORT Reserved;union {struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$27183FC11B178907B5D2BB34AFACE7F1 SymbolicLinkReparseBuffer;struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$538BBEAAFB526DA55D87E8D9C61BE453 MountPointReparseBuffer;struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;};};
union _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8 {struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$27183FC11B178907B5D2BB34AFACE7F1 SymbolicLinkReparseBuffer;struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$538BBEAAFB526DA55D87E8D9C61BE453 MountPointReparseBuffer;struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;};
struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$27183FC11B178907B5D2BB34AFACE7F1 {USHORT SubstituteNameOffset;USHORT SubstituteNameLength;USHORT PrintNameOffset;USHORT PrintNameLength;ULONG Flags;WCHAR PathBuffer[1];};
struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$538BBEAAFB526DA55D87E8D9C61BE453 {USHORT SubstituteNameOffset;USHORT SubstituteNameLength;USHORT PrintNameOffset;USHORT PrintNameLength;WCHAR PathBuffer[1];};
struct _REPARSE_DATA_BUFFER::$EDE85F431271D6DB35F60DFE09C35EC8::$E4726FB01B43180CB4D608E8FC40A3CF {UCHAR DataBuffer[1];};
struct _REPARSE_GUID_DATA_BUFFER {DWORD ReparseTag;WORD ReparseDataLength;WORD Reserved;GUID ReparseGuid;struct _REPARSE_GUID_DATA_BUFFER::$7E560C326EB38963D80E6D6A0DCA12F5 GenericReparseBuffer;};
struct _REPARSE_GUID_DATA_BUFFER::$7E560C326EB38963D80E6D6A0DCA12F5 {BYTE DataBuffer[1];};
struct _REPARSE_POINT_INFORMATION {WORD ReparseDataLength;WORD UnparsedNameLength;};
struct _RGNDATA {RGNDATAHEADER rdh;char Buffer[1];};
struct _RGNDATAHEADER {DWORD dwSize;DWORD iType;DWORD nCount;DWORD nRgnSize;RECT rcBound;};
struct _RTLP_CURDIR_REF {LONG RefCount;HANDLE Handle;};
struct _RTL_ACQUIRE_STATE {HANDLE Token;HANDLE OldImpersonationToken;PTOKEN_PRIVILEGES OldPrivileges;PTOKEN_PRIVILEGES NewPrivileges;ULONG Flags;UCHAR OldPrivBuffer[1024];};
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME {struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *Previous;PACTIVATION_CONTEXT ActivationContext;ULONG Flags;};
struct _RTL_ATOM_TABLE {ULONG Signature;union {RTL_CRITICAL_SECTION CriticalSection;};union {RTL_HANDLE_TABLE RtlHandleTable;};ULONG NumberOfBuckets;PRTL_ATOM_TABLE_ENTRY Buckets[1];};
union _RTL_ATOM_TABLE::$42FE5EE613AA42458EE4C91225ABCF88 {RTL_CRITICAL_SECTION CriticalSection;};
union _RTL_ATOM_TABLE::$5F09788D4D2E346E764188107C3964C1 {RTL_HANDLE_TABLE RtlHandleTable;};
struct _RTL_ATOM_TABLE_ENTRY {struct _RTL_ATOM_TABLE_ENTRY *HashLink;USHORT HandleIndex;USHORT Atom;USHORT ReferenceCount;UCHAR Flags;UCHAR NameLength;WCHAR Name[1];};
struct _RTL_AVL_TABLE {RTL_BALANCED_LINKS BalancedRoot;PVOID OrderedPointer;ULONG WhichOrderedElement;ULONG NumberGenericTableElements;ULONG DepthOfTree;PRTL_BALANCED_LINKS RestartKey;ULONG DeleteCount;PRTL_AVL_COMPARE_ROUTINE CompareRoutine;PRTL_AVL_ALLOCATE_ROUTINE AllocateRoutine;PRTL_AVL_FREE_ROUTINE FreeRoutine;PVOID TableContext;};
struct _RTL_BALANCED_LINKS {struct _RTL_BALANCED_LINKS *Parent;struct _RTL_BALANCED_LINKS *LeftChild;struct _RTL_BALANCED_LINKS *RightChild;CHAR Balance;UCHAR Reserved[3];};
struct _RTL_BITMAP {ULONG SizeOfBitMap;PULONG Buffer;};
struct _RTL_BITMAP_RUN {ULONG StartingIndex;ULONG NumberOfBits;};
struct _RTL_BSD_DATA {ULONG Version;ULONG ProductType;BOOLEAN AabEnabled;UCHAR AabTimeout;BOOLEAN LastBootSucceeded;BOOLEAN LastBootShutdown;BOOLEAN SleepInProgress;RTL_BSD_DATA_POWER_TRANSITION PowerTransition;UCHAR BootAttemptCount;UCHAR LastBootCheckpoint;UCHAR Checksum;ULONG LastBootId;ULONG LastSuccessfulShutdownBootId;ULONG LastReportedAbnormalShutdownBootId;RTL_BSD_DATA_ERROR_INFO ErrorInfo;RTL_BSD_POWER_BUTTON_PRESS_INFO PowerButtonPressInfo;};
struct _RTL_BSD_DATA_ERROR_INFO {ULONG BootId;ULONG RepeatCount;ULONG OtherErrorCount;ULONG Code;ULONG OtherErrorCount2;};
struct _RTL_BSD_DATA_POWER_TRANSITION {LARGE_INTEGER PowerButtonTimestamp;struct _RTL_BSD_DATA_POWER_TRANSITION::$0381322111C1487957709002A7F8A54F Flags;UCHAR ConnectedStandbyScenarioInstanceId;UCHAR ConnectedStandbyEntryReason;UCHAR ConnectedStandbyExitReason;USHORT SystemSleepTransitionCount;LARGE_INTEGER LastReferenceTime;ULONG LastReferenceTimeChecksum;ULONG LastUpdateBootId;};
struct _RTL_BSD_DATA_POWER_TRANSITION::$0381322111C1487957709002A7F8A54F {unsigned __int8 SystemRunning : 1;unsigned __int8 ConnectedStandbyInProgress : 1;unsigned __int8 UserShutdownInProgress : 1;unsigned __int8 SystemShutdownInProgress : 1;unsigned __int8 SleepInProgress : 4;};
struct _RTL_BSD_ITEM {RTL_BSD_ITEM_TYPE Type;PVOID DataBuffer;ULONG DataLength;};
enum _RTL_BSD_ITEM_TYPE {RtlBsdItemVersionNumber = 0x0,RtlBsdItemProductType = 0x1,RtlBsdItemAabEnabled = 0x2,RtlBsdItemAabTimeout = 0x3,RtlBsdItemBootGood = 0x4,RtlBsdItemBootShutdown = 0x5,RtlBsdSleepInProgress = 0x6,RtlBsdPowerTransition = 0x7,RtlBsdItemBootAttemptCount = 0x8,RtlBsdItemBootCheckpoint = 0x9,RtlBsdItemBootId = 0xA,RtlBsdItemShutdownBootId = 0xB,RtlBsdItemReportedAbnormalShutdownBootId = 0xC,RtlBsdItemErrorInfo = 0xD,RtlBsdItemPowerButtonPressInfo = 0xE,RtlBsdItemChecksum = 0xF,RtlBsdItemMax = 0x10,};
struct _RTL_BSD_POWER_BUTTON_PRESS_INFO {LARGE_INTEGER LastPressTime;ULONG CumulativePressCount;USHORT LastPressBootId;UCHAR LastPowerWatchdogStage;struct _RTL_BSD_POWER_BUTTON_PRESS_INFO::$5F178C06A32BEE6AE1DD4C2DD6763262 Flags;LARGE_INTEGER LastReleaseTime;ULONG CumulativeReleaseCount;USHORT LastReleaseBootId;USHORT ErrorCount;UCHAR CurrentConnectedStandbyPhase;ULONG TransitionLatestCheckpointId;ULONG TransitionLatestCheckpointType;ULONG TransitionLatestCheckpointSequenceNumber;};
struct _RTL_BSD_POWER_BUTTON_PRESS_INFO::$5F178C06A32BEE6AE1DD4C2DD6763262 {unsigned __int8 WatchdogArmed : 1;unsigned __int8 ShutdownInProgress : 1;};
struct _RTL_BUFFER {PUCHAR Buffer;PUCHAR StaticBuffer;SIZE_T Size;SIZE_T StaticSize;SIZE_T ReservedForAllocatedSize;PVOID ReservedForIMalloc;};
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC {SIZE_T Size;ULONG Format;RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;};
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED {SIZE_T Size;ULONG Format;RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;PVOID Extra1;PVOID Extra2;PVOID Extra3;PVOID Extra4;};
struct _RTL_CONDITION_VARIABLE {PVOID Ptr;};
struct _RTL_CRITICAL_SECTION {PRTL_CRITICAL_SECTION_DEBUG DebugInfo;LONG LockCount;LONG RecursionCount;HANDLE OwningThread;HANDLE LockSemaphore;ULONG_PTR SpinCount;};
struct _RTL_CRITICAL_SECTION_DEBUG {WORD Type;WORD CreatorBackTraceIndex;struct _RTL_CRITICAL_SECTION *CriticalSection;LIST_ENTRY ProcessLocksList;DWORD EntryCount;DWORD ContentionCount;DWORD Flags;WORD CreatorBackTraceIndexHigh;WORD SpareWORD;};
struct _RTL_DEBUG_INFORMATION {HANDLE SectionHandleClient;PVOID ViewBaseClient;PVOID ViewBaseTarget;ULONG ViewBaseDelta;HANDLE EventPairClient;PVOID EventPairTarget;HANDLE TargetProcessId;HANDLE TargetThreadHandle;ULONG Flags;ULONG OffsetFree;ULONG CommitSize;ULONG ViewSize;union {PRTL_PROCESS_MODULES Modules;PRTL_PROCESS_MODULE_INFORMATION_EX ModulesEx;};PRTL_PROCESS_BACKTRACES BackTraces;PRTL_PROCESS_HEAPS Heaps;PRTL_PROCESS_LOCKS Locks;HANDLE SpecificHeap;HANDLE TargetProcessHandle;RTL_PROCESS_VERIFIER_OPTIONS VerifierOptions;HANDLE ProcessHeap;HANDLE CriticalSectionHandle;HANDLE CriticalSectionOwnerThread;PVOID Reserved[4];};
union _RTL_DEBUG_INFORMATION::$B68A689771D4A9439ADE7B52288B75CA {PRTL_PROCESS_MODULES Modules;PRTL_PROCESS_MODULE_INFORMATION_EX ModulesEx;};
struct _RTL_DRIVE_LETTER_CURDIR {USHORT Flags;USHORT Length;ULONG TimeStamp;UNICODE_STRING DosPath;};
struct _RTL_FLS_DATA {LIST_ENTRY ListEntry;PVOID Data[128];};
enum _RTL_GENERIC_COMPARE_RESULTS {GenericLessThan = 0x0,GenericGreaterThan = 0x1,GenericEqual = 0x2,};
struct _RTL_GENERIC_TABLE {PRTL_SPLAY_LINKS TableRoot;LIST_ENTRY InsertOrderList;PLIST_ENTRY OrderedPointer;ULONG WhichOrderedElement;ULONG NumberGenericTableElements;PRTL_GENERIC_COMPARE_ROUTINE CompareRoutine;PRTL_GENERIC_ALLOCATE_ROUTINE AllocateRoutine;PRTL_GENERIC_FREE_ROUTINE FreeRoutine;PVOID TableContext;};
struct _RTL_HANDLE_TABLE {ULONG MaximumNumberOfHandles;ULONG SizeOfHandleTableEntry;ULONG Reserved[2];PRTL_HANDLE_TABLE_ENTRY FreeHandles;PRTL_HANDLE_TABLE_ENTRY CommittedHandles;PRTL_HANDLE_TABLE_ENTRY UnCommittedHandles;PRTL_HANDLE_TABLE_ENTRY MaxReservedHandles;};
struct _RTL_HANDLE_TABLE_ENTRY {union {ULONG Flags;struct _RTL_HANDLE_TABLE_ENTRY *NextFree;};};
union _RTL_HANDLE_TABLE_ENTRY::$58C19DF9ECF1DA849A58C6701AC6C3EA {ULONG Flags;struct _RTL_HANDLE_TABLE_ENTRY *NextFree;};
struct _RTL_HEAP_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME {RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;ULONG_PTR Cookie;PVOID ActivationStackBackTrace[8];};
struct _RTL_HEAP_ENTRY {SIZE_T Size;USHORT Flags;USHORT AllocatorBackTraceIndex;union _RTL_HEAP_ENTRY::$A7E3B8C9E41812BD997F97BFE9356C4A u;};
union _RTL_HEAP_ENTRY::$A7E3B8C9E41812BD997F97BFE9356C4A {struct _RTL_HEAP_ENTRY::$A7E3B8C9E41812BD997F97BFE9356C4A::$A575A6E33326D8F23D64E42A3D591800 s1;struct _RTL_HEAP_ENTRY::$A7E3B8C9E41812BD997F97BFE9356C4A::$74FE4D82D084E3F48EF3F8553B520B18 s2;};
struct _RTL_HEAP_ENTRY::$A7E3B8C9E41812BD997F97BFE9356C4A::$74FE4D82D084E3F48EF3F8553B520B18 {SIZE_T CommittedSize;PVOID FirstBlock;};
struct _RTL_HEAP_ENTRY::$A7E3B8C9E41812BD997F97BFE9356C4A::$A575A6E33326D8F23D64E42A3D591800 {SIZE_T Settable;ULONG Tag;};
struct _RTL_HEAP_INFORMATION {PVOID BaseAddress;ULONG Flags;USHORT EntryOverhead;USHORT CreatorBackTraceIndex;SIZE_T BytesAllocated;SIZE_T BytesCommitted;ULONG NumberOfTags;ULONG NumberOfEntries;ULONG NumberOfPseudoTags;ULONG PseudoTagGranularity;ULONG Reserved[5];PRTL_HEAP_TAG Tags;PRTL_HEAP_ENTRY Entries;};
struct _RTL_HEAP_PARAMETERS {ULONG Length;SIZE_T SegmentReserve;SIZE_T SegmentCommit;SIZE_T DeCommitFreeBlockThreshold;SIZE_T DeCommitTotalFreeThreshold;SIZE_T MaximumAllocationSize;SIZE_T VirtualMemoryThreshold;SIZE_T InitialCommit;SIZE_T InitialReserve;PRTL_HEAP_COMMIT_ROUTINE CommitRoutine;SIZE_T Reserved[2];};
struct _RTL_HEAP_TAG {ULONG NumberOfAllocations;ULONG NumberOfFrees;SIZE_T BytesAllocated;USHORT TagIndex;USHORT CreatorBackTraceIndex;WCHAR TagName[24];};
struct _RTL_HEAP_TAG_INFO {ULONG NumberOfAllocations;ULONG NumberOfFrees;SIZE_T BytesAllocated;};
struct _RTL_HEAP_USAGE {ULONG Length;SIZE_T BytesAllocated;SIZE_T BytesCommitted;SIZE_T BytesReserved;SIZE_T BytesReservedMaximum;PRTL_HEAP_USAGE_ENTRY Entries;PRTL_HEAP_USAGE_ENTRY AddedEntries;PRTL_HEAP_USAGE_ENTRY RemovedEntries;ULONG_PTR Reserved[8];};
struct _RTL_HEAP_USAGE_ENTRY {struct _RTL_HEAP_USAGE_ENTRY *Next;PVOID Address;SIZE_T Size;USHORT AllocatorBackTraceIndex;USHORT TagIndex;};
struct _RTL_HEAP_WALK_ENTRY {PVOID DataAddress;SIZE_T DataSize;UCHAR OverheadBytes;UCHAR SegmentIndex;USHORT Flags;union {struct _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531::$3AE1BFD2E7621A9FEB898DEEC7BEC1E2 Block;struct _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531::$49D8B82C20406101E26B5C4916751D89 Segment;};};
union _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531 {struct _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531::$3AE1BFD2E7621A9FEB898DEEC7BEC1E2 Block;struct _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531::$49D8B82C20406101E26B5C4916751D89 Segment;};
struct _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531::$3AE1BFD2E7621A9FEB898DEEC7BEC1E2 {SIZE_T Settable;USHORT TagIndex;USHORT AllocatorBackTraceIndex;ULONG Reserved[2];};
struct _RTL_HEAP_WALK_ENTRY::$BC3A5747466B9318CCE8937E01027531::$49D8B82C20406101E26B5C4916751D89 {ULONG_PTR CommittedSize;ULONG_PTR UnCommittedSize;PVOID FirstEntry;PVOID LastEntry;};
struct _RTL_MEMORY_STREAM {struct IStreamVtbl *Vtbl;LONG RefCount;ULONG Unk1;PVOID Current;PVOID Start;PVOID End;PRTL_MEMORY_STREAM_FINAL_RELEASE_ROUTINE FinalRelease;HANDLE ProcessHandle;};
struct _RTL_PATCH_HEADER {LIST_ENTRY PatchList;PVOID PatchImageBase;struct _RTL_PATCH_HEADER *NextPath;ULONG PatchFlags;LONG PatchRefCount;struct _HOTPATCH_HEADER *HotpatchHeader;UNICODE_STRING TargetDllName;PVOID TargetDllBase;PLDR_DATA_TABLE_ENTRY TargetLdrDataTableEntry;PLDR_DATA_TABLE_ENTRY PatchLdrDataTableEntry;struct _SYSTEM_HOTPATCH_CODE_INFORMATION *CodeInfo;};
enum _RTL_PATH_TYPE {RtlPathTypeUnknown = 0x0,RtlPathTypeUncAbsolute = 0x1,RtlPathTypeDriveAbsolute = 0x2,RtlPathTypeDriveRelative = 0x3,RtlPathTypeRooted = 0x4,RtlPathTypeRelative = 0x5,RtlPathTypeLocalDevice = 0x6,RtlPathTypeRootLocalDevice = 0x7,};
struct _RTL_PERTHREAD_CURDIR {PRTL_DRIVE_LETTER_CURDIR CurrentDirectories;PUNICODE_STRING ImageName;PVOID Environment;};
struct _RTL_PROCESS_BACKTRACES {ULONG CommittedMemory;ULONG ReservedMemory;ULONG NumberOfBackTraceLookups;ULONG NumberOfBackTraces;RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];};
struct _RTL_PROCESS_BACKTRACE_INFORMATION {PVOID SymbolicBackTrace;ULONG TraceCount;USHORT Index;USHORT Depth;PVOID BackTrace[16];};
struct _RTL_PROCESS_HEAPS {ULONG NumberOfHeaps;RTL_HEAP_INFORMATION Heaps[1];};
struct _RTL_PROCESS_LOCKS {ULONG NumberOfLocks;RTL_PROCESS_LOCK_INFORMATION Locks[1];};
struct _RTL_PROCESS_LOCK_INFORMATION {PVOID Address;USHORT Type;USHORT CreatorBackTraceIndex;ULONG OwnerThreadId;ULONG ActiveCount;ULONG ContentionCount;ULONG EntryCount;ULONG RecursionCount;ULONG NumberOfSharedWaiters;ULONG NumberOfExclusiveWaiters;};
struct _RTL_PROCESS_MODULES {ULONG NumberOfModules;RTL_PROCESS_MODULE_INFORMATION Modules[1];};
struct _RTL_PROCESS_MODULE_INFORMATION {ULONG Section;PVOID MappedBase;PVOID ImageBase;ULONG ImageSize;ULONG Flags;USHORT LoadOrderIndex;USHORT InitOrderIndex;USHORT LoadCount;USHORT OffsetToFileName;CHAR FullPathName[256];};
struct _RTL_PROCESS_MODULE_INFORMATION_EX {ULONG NextOffset;RTL_PROCESS_MODULE_INFORMATION BaseInfo;ULONG ImageCheckSum;ULONG TimeDateStamp;PVOID DefaultBase;};
struct _RTL_PROCESS_VERIFIER_OPTIONS {ULONG SizeStruct;ULONG Option;UCHAR OptionData[1];};
struct _RTL_QUERY_REGISTRY_TABLE {PRTL_QUERY_REGISTRY_ROUTINE QueryRoutine;ULONG Flags;PCWSTR Name;PVOID EntryContext;ULONG DefaultType;PVOID DefaultData;ULONG DefaultLength;};
struct _RTL_RANGE {ULONGLONG Start;ULONGLONG End;PVOID UserData;PVOID Owner;UCHAR Attributes;UCHAR Flags;};
struct _RTL_RANGE_LIST {LIST_ENTRY ListHead;ULONG Flags;ULONG Count;ULONG Stamp;};
struct _RTL_RELATIVE_NAME_U {UNICODE_STRING RelativeName;HANDLE ContainingDirectory;PRTLP_CURDIR_REF CurDirRef;};
struct _RTL_RESOURCE {RTL_CRITICAL_SECTION Lock;HANDLE SharedSemaphore;ULONG SharedWaiters;HANDLE ExclusiveSemaphore;ULONG ExclusiveWaiters;LONG NumberActive;HANDLE OwningThread;ULONG TimeoutBoost;PVOID DebugInfo;};
union _RTL_RUN_ONCE {PVOID Ptr;};
struct _RTL_SPLAY_LINKS {struct _RTL_SPLAY_LINKS *Parent;struct _RTL_SPLAY_LINKS *LeftChild;struct _RTL_SPLAY_LINKS *RightChild;};
struct _RTL_SRWLOCK {PVOID Ptr;};
struct _RTL_STACK_TRACE_ENTRY {struct _RTL_STACK_TRACE_ENTRY *HashChain;ULONG TraceCount;USHORT Index;USHORT Depth;PVOID BackTrace[32];};
struct _RTL_TIME_ZONE_INFORMATION {LONG Bias;WCHAR StandardName[32];TIME_FIELDS StandardDate;LONG StandardBias;WCHAR DaylightName[32];TIME_FIELDS DaylightDate;LONG DaylightBias;};
struct _RTL_TRACE_BLOCK {ULONG Magic;ULONG Count;ULONG Size;ULONG UserCount;ULONG UserSize;PVOID UserContext;struct _RTL_TRACE_BLOCK *Next;PVOID *Trace;};
struct _RTL_TRACE_DATABASE {ULONG Magic;ULONG Flags;ULONG Tag;struct _RTL_TRACE_SEGMENT *SegmentList;SIZE_T MaximumSize;SIZE_T CurrentSize;PVOID Owner;RTL_CRITICAL_SECTION Lock;ULONG NoOfBuckets;struct _RTL_TRACE_BLOCK **Buckets;RTL_TRACE_HASH_FUNCTION HashFunction;SIZE_T NoOfTraces;SIZE_T NoOfHits;ULONG HashCounter[16];};
struct _RTL_TRACE_ENUMERATE {struct _RTL_TRACE_DATABASE *Database;ULONG Index;struct _RTL_TRACE_BLOCK *Block;};
struct _RTL_TRACE_SEGMENT {ULONG Magic;struct _RTL_TRACE_DATABASE *Database;struct _RTL_TRACE_SEGMENT *NextSegment;SIZE_T TotalSize;PCHAR SegmentStart;PCHAR SegmentEnd;PCHAR SegmentFree;};
enum _RTL_UMSCTX_FLAGS {UMSCTX_SCHEDULED_THREAD_BIT = 0x0,UMSCTX_SUSPENDED_BIT = 0x1,UMSCTX_VOLATILE_CONTEXT_BIT = 0x2,UMSCTX_TERMINATED_BIT = 0x3,UMSCTX_DEBUG_ACTIVE_BIT = 0x4,UMSCTX_RUNNING_ON_SELF_THREAD_BIT = 0x5,UMSCTX_DENY_RUNNING_ON_SELF_THREAD_BIT = 0x6,};
struct __declspec(align(16)) _RTL_UMS_CONTEXT {SINGLE_LIST_ENTRY Link;CONTEXT Context;PVOID Teb;PVOID UserContext;union {struct {unsigned __int32 ScheduledThread : 1;unsigned __int32 Suspended : 1;unsigned __int32 VolatileContext : 1;unsigned __int32 Terminated : 1;unsigned __int32 DebugActive : 1;unsigned __int32 RunningOnSelfThread : 1;unsigned __int32 DenyRunningOnSelfThread : 1;};LONG Flags;};union {struct {unsigned __int64 KernelUpdateLock : 2;unsigned __int64 PrimaryClientID : 62;};ULONG64 ContextLock;};struct _RTL_UMS_CONTEXT *PrimaryUmsContext;ULONG SwitchCount;ULONG KernelYieldCount;ULONG MixedYieldCount;ULONG YieldCount;};
union _RTL_UMS_CONTEXT::$634CE9EE8CCAAEC10843388AA6EEDCFF {struct {unsigned __int32 ScheduledThread : 1;unsigned __int32 Suspended : 1;unsigned __int32 VolatileContext : 1;unsigned __int32 Terminated : 1;unsigned __int32 DebugActive : 1;unsigned __int32 RunningOnSelfThread : 1;unsigned __int32 DenyRunningOnSelfThread : 1;};LONG Flags;};
struct _RTL_UMS_CONTEXT::$634CE9EE8CCAAEC10843388AA6EEDCFF::$EE958A3EEEF3B432DBF345C9EA16AB2C {unsigned __int32 ScheduledThread : 1;unsigned __int32 Suspended : 1;unsigned __int32 VolatileContext : 1;unsigned __int32 Terminated : 1;unsigned __int32 DebugActive : 1;unsigned __int32 RunningOnSelfThread : 1;unsigned __int32 DenyRunningOnSelfThread : 1;};
union _RTL_UMS_CONTEXT::$C4668BFCABDC85080F57DB8F8F905929 {struct {unsigned __int64 KernelUpdateLock : 2;unsigned __int64 PrimaryClientID : 62;};ULONG64 ContextLock;};
struct _RTL_UMS_CONTEXT::$C4668BFCABDC85080F57DB8F8F905929::$F0BB6DED5B863CB5C1D5B6781ED3F5BA {unsigned __int64 KernelUpdateLock : 2;unsigned __int64 PrimaryClientID : 62;};
enum _RTL_UMS_SCHEDULER_REASON {UmsSchedulerStartup = 0x0,UmsSchedulerThreadBlocked = 0x1,UmsSchedulerThreadYield = 0x2,};
struct _RTL_UNICODE_STRING_BUFFER {UNICODE_STRING String;RTL_BUFFER ByteBuffer;WCHAR MinimumStaticBufferForTerminalNul;};
struct _RTL_UNLOAD_EVENT_TRACE {PVOID BaseAddress;ULONG SizeOfImage;ULONG Sequence;ULONG TimeDateStamp;ULONG CheckSum;WCHAR ImageName[32];};
struct _RTL_USER_PROCESS_INFORMATION {ULONG Size;HANDLE ProcessHandle;HANDLE ThreadHandle;CLIENT_ID ClientId;SECTION_IMAGE_INFORMATION ImageInformation;};
struct _RTL_USER_PROCESS_PARAMETERS {ULONG MaximumLength;ULONG Length;ULONG Flags;ULONG DebugFlags;HANDLE ConsoleHandle;ULONG ConsoleFlags;HANDLE StandardInput;HANDLE StandardOutput;HANDLE StandardError;CURDIR CurrentDirectory;UNICODE_STRING DllPath;UNICODE_STRING ImagePathName;UNICODE_STRING CommandLine;PWSTR Environment;ULONG StartingX;ULONG StartingY;ULONG CountX;ULONG CountY;ULONG CountCharsX;ULONG CountCharsY;ULONG FillAttribute;ULONG WindowFlags;ULONG ShowWindowFlags;UNICODE_STRING WindowTitle;UNICODE_STRING DesktopInfo;UNICODE_STRING ShellInfo;UNICODE_STRING RuntimeData;RTL_DRIVE_LETTER_CURDIR CurrentDirectories[32];SIZE_T EnvironmentSize;SIZE_T EnvironmentVersion;};
struct _RUN {LONG iStart;LONG iStop;};
struct _RXACT_CONTEXT {HANDLE RootDirectory;HANDLE KeyHandle;BOOLEAN CanUseHandles;PRXACT_DATA Data;};
struct _RXACT_DATA {ULONG ActionCount;ULONG BufferSize;ULONG CurrentSize;};
struct _SECTION_BASIC_INFORMATION {PVOID BaseAddress;ULONG Attributes;LARGE_INTEGER Size;};
struct _SECTION_IMAGE_INFORMATION {PVOID TransferAddress;ULONG ZeroBits;SIZE_T MaximumStackSize;SIZE_T CommittedStackSize;ULONG SubSystemType;union {struct {USHORT SubSystemMinorVersion;USHORT SubSystemMajorVersion;};ULONG SubSystemVersion;};ULONG GpValue;USHORT ImageCharacteristics;USHORT DllCharacteristics;USHORT Machine;BOOLEAN ImageContainsCode;union {struct {unsigned __int8 ComPlusNativeReady : 1;unsigned __int8 ComPlusILOnly : 1;unsigned __int8 ImageDynamicallyRelocated : 1;unsigned __int8 ImageMappedFlat : 1;unsigned __int8 Reserved : 4;};UCHAR ImageFlags;};ULONG LoaderFlags;ULONG ImageFileSize;ULONG CheckSum;};
union _SECTION_IMAGE_INFORMATION::$0CB8CD0E95083F95172885F4BB2B0ACF {struct {unsigned __int8 ComPlusNativeReady : 1;unsigned __int8 ComPlusILOnly : 1;unsigned __int8 ImageDynamicallyRelocated : 1;unsigned __int8 ImageMappedFlat : 1;unsigned __int8 Reserved : 4;};UCHAR ImageFlags;};
struct _SECTION_IMAGE_INFORMATION::$0CB8CD0E95083F95172885F4BB2B0ACF::$C74EF4F31E4F94C2FE0AAEEBEE8A57AD {unsigned __int8 ComPlusNativeReady : 1;unsigned __int8 ComPlusILOnly : 1;unsigned __int8 ImageDynamicallyRelocated : 1;unsigned __int8 ImageMappedFlat : 1;unsigned __int8 Reserved : 4;};
union _SECTION_IMAGE_INFORMATION::$C2282D2C27F460652C52CD6D2B7ADFF5 {struct {USHORT SubSystemMinorVersion;USHORT SubSystemMajorVersion;};ULONG SubSystemVersion;};
struct _SECTION_IMAGE_INFORMATION::$C2282D2C27F460652C52CD6D2B7ADFF5::$E71F3A69EE115FBAEDC5A4567A0EFF84 {USHORT SubSystemMinorVersion;USHORT SubSystemMajorVersion;};
enum _SECTION_INFORMATION_CLASS {SectionBasicInformation = 0x0,SectionImageInformation = 0x1,};
enum _SECTION_INHERIT {ViewShare = 0x1,ViewUnmap = 0x2,};
struct _SECURITY_ATTRIBUTES {DWORD nLength;LPVOID lpSecurityDescriptor;BOOL bInheritHandle;};
struct _SECURITY_DESCRIPTOR {BYTE Revision;BYTE Sbz1;SECURITY_DESCRIPTOR_CONTROL Control;PSID Owner;PSID Group;PACL Sacl;PACL Dacl;};
struct _SECURITY_DESCRIPTOR_RELATIVE {BYTE Revision;BYTE Sbz1;SECURITY_DESCRIPTOR_CONTROL Control;DWORD Owner;DWORD Group;DWORD Sacl;DWORD Dacl;};
enum _SECURITY_IMPERSONATION_LEVEL {SecurityAnonymous = 0x0,SecurityIdentification = 0x1,SecurityImpersonation = 0x2,SecurityDelegation = 0x3,};
struct _SECURITY_QUALITY_OF_SERVICE {DWORD Length;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;BOOLEAN EffectiveOnly;};
struct _SEMAPHORE_BASIC_INFORMATION {LONG CurrentCount;LONG MaximumCount;};
enum _SEMAPHORE_INFORMATION_CLASS {SemaphoreBasicInformation = 0x0,};
struct _SET_PARTITION_INFORMATION {BYTE PartitionType;};
struct _SE_ACCESS_REQUEST {DWORD Size;PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor;ACCESS_MASK DesiredAccess;ACCESS_MASK PreviouslyGrantedAccess;PSID PrincipalSelfSid;PGENERIC_MAPPING GenericMapping;DWORD ObjectTypeListCount;POBJECT_TYPE_LIST ObjectTypeList;};
struct _SE_IMPERSONATION_STATE {PACCESS_TOKEN Token;BOOLEAN CopyOnOpen;BOOLEAN EffectiveOnly;SECURITY_IMPERSONATION_LEVEL Level;};
struct _SE_SECURITY_DESCRIPTOR {DWORD Size;DWORD Flags;PSECURITY_DESCRIPTOR SecurityDescriptor;};
enum _SHUTDOWN_ACTION {ShutdownNoReboot = 0x0,ShutdownReboot = 0x1,ShutdownPowerOff = 0x2,};
struct _SID {BYTE Revision;BYTE SubAuthorityCount;SID_IDENTIFIER_AUTHORITY IdentifierAuthority;DWORD SubAuthority[1];};
struct _SID_AND_ATTRIBUTES {PSID Sid;DWORD Attributes;};
struct _SID_AND_ATTRIBUTES_HASH {DWORD SidCount;PSID_AND_ATTRIBUTES SidAttr;SID_HASH_ENTRY Hash[32];};
struct _SID_IDENTIFIER_AUTHORITY {BYTE Value[6];};
enum _SID_NAME_USE {SidTypeUser = 0x1,SidTypeGroup = 0x2,SidTypeDomain = 0x3,SidTypeAlias = 0x4,SidTypeWellKnownGroup = 0x5,SidTypeDeletedAccount = 0x6,SidTypeInvalid = 0x7,SidTypeUnknown = 0x8,SidTypeComputer = 0x9,SidTypeLabel = 0xA,};
struct _SINGLE_LIST_ENTRY {struct _SINGLE_LIST_ENTRY *Next;};
union _SLIST_HEADER {ULONGLONG Alignment;struct {SINGLE_LIST_ENTRY Next;WORD Depth;WORD Sequence;};};
struct _SLIST_HEADER::$83AF6D9DC8E3B10431D79B304957BA23 {SINGLE_LIST_ENTRY Next;WORD Depth;WORD Sequence;};
struct _STACK_TRACE_DATABASE {RTL_CRITICAL_SECTION CriticalSection;};
struct _STRING {USHORT Length;USHORT MaximumLength;PCHAR Buffer;};
struct _STRING32 {USHORT Length;USHORT MaximumLength;ULONG Buffer;};
struct _STRING64 {USHORT Length;USHORT MaximumLength;ULONGLONG Buffer;};
struct _STROBJ {ULONG cGlyphs;FLONG flAccel;ULONG ulCharInc;RECTL rclBkGround;GLYPHPOS *pgp;LPWSTR pwszOrg;};
struct _SURFOBJ {DHSURF dhsurf;HSURF hsurf;DHPDEV dhpdev;HDEV hdev;SIZEL sizlBitmap;ULONG cjBits;PVOID pvBits;PVOID pvScan0;LONG lDelta;ULONG iUniq;ULONG iBitmapFormat;USHORT iType;USHORT fjBitmap;};
struct _SYSDBG_BUS_DATA {ULONG Address;PVOID Buffer;ULONG Request;BUS_DATA_TYPE BusDataType;ULONG BusNumber;ULONG SlotNumber;};
enum _SYSDBG_COMMAND {SysDbgQueryModuleInformation = 0x0,SysDbgQueryTraceInformation = 0x1,SysDbgSetTracepoint = 0x2,SysDbgSetSpecialCall = 0x3,SysDbgClearSpecialCalls = 0x4,SysDbgQuerySpecialCalls = 0x5,SysDbgBreakPoint = 0x6,SysDbgQueryVersion = 0x7,SysDbgReadVirtual = 0x8,SysDbgWriteVirtual = 0x9,SysDbgReadPhysical = 0xA,SysDbgWritePhysical = 0xB,SysDbgReadControlSpace = 0xC,SysDbgWriteControlSpace = 0xD,SysDbgReadIoSpace = 0xE,SysDbgWriteIoSpace = 0xF,SysDbgReadMsr = 0x10,SysDbgWriteMsr = 0x11,SysDbgReadBusData = 0x12,SysDbgWriteBusData = 0x13,SysDbgCheckLowMemory = 0x14,SysDbgEnableKernelDebugger = 0x15,SysDbgDisableKernelDebugger = 0x16,SysDbgGetAutoKdEnable = 0x17,SysDbgSetAutoKdEnable = 0x18,SysDbgGetPrintBufferSize = 0x19,SysDbgSetPrintBufferSize = 0x1A,SysDbgGetKdUmExceptionEnable = 0x1B,SysDbgSetKdUmExceptionEnable = 0x1C,SysDbgGetTriageDump = 0x1D,SysDbgGetKdBlockEnable = 0x1E,SysDbgSetKdBlockEnable = 0x1F,SysDbgRegisterForUmBreakInfo = 0x20,SysDbgGetUmBreakPid = 0x21,SysDbgClearUmBreakPid = 0x22,SysDbgGetUmAttachPid = 0x23,SysDbgClearUmAttachPid = 0x24,};
struct _SYSDBG_CONTROL_SPACE {ULONGLONG Address;PVOID Buffer;ULONG Request;ULONG Processor;};
struct _SYSDBG_IO_SPACE {ULONGLONG Address;PVOID Buffer;ULONG Request;INTERFACE_TYPE InterfaceType;ULONG BusNumber;ULONG AddressSpace;};
struct _SYSDBG_MSR {ULONG Address;ULONGLONG Data;};
struct _SYSDBG_PHYSICAL {PHYSICAL_ADDRESS Address;PVOID Buffer;ULONG Request;};
struct _SYSDBG_TRIAGE_DUMP {ULONG Flags;ULONG BugCheckCode;ULONG_PTR BugCheckParam1;ULONG_PTR BugCheckParam2;ULONG_PTR BugCheckParam3;ULONG_PTR BugCheckParam4;ULONG ProcessHandles;ULONG ThreadHandles;PHANDLE Handles;};
struct _SYSDBG_VIRTUAL {PVOID Address;PVOID Buffer;ULONG Request;};
struct _SYSTEM_ALARM_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _SYSTEM_ALARM_CALLBACK_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _SYSTEM_ALARM_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _SYSTEM_AUDIT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _SYSTEM_AUDIT_CALLBACK_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _SYSTEM_AUDIT_OBJECT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD Flags;GUID ObjectType;GUID InheritedObjectType;DWORD SidStart;};
struct _SYSTEM_BASIC_INFORMATION {ULONG Reserved;ULONG TimerResolution;ULONG PageSize;ULONG NumberOfPhysicalPages;ULONG LowestPhysicalPageNumber;ULONG HighestPhysicalPageNumber;ULONG AllocationGranularity;ULONG_PTR MinimumUserModeAddress;ULONG_PTR MaximumUserModeAddress;ULONG_PTR ActiveProcessorsAffinityMask;CCHAR NumberOfProcessors;};
struct _SYSTEM_BATTERY_STATE {BOOLEAN AcOnLine;BOOLEAN BatteryPresent;BOOLEAN Charging;BOOLEAN Discharging;BOOLEAN Spare1[4];DWORD MaxCapacity;DWORD RemainingCapacity;DWORD Rate;DWORD EstimatedTime;DWORD DefaultAlert1;DWORD DefaultAlert2;};
struct _SYSTEM_CALL_COUNT_INFORMATION {ULONG Length;ULONG NumberOfTables;};
struct _SYSTEM_CALL_TIME_INFORMATION {ULONG Length;ULONG TotalCalls;LARGE_INTEGER TimeOfCalls[1];};
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION {ULONG ContextSwitches;ULONG FindAny;ULONG FindLast;ULONG FindIdeal;ULONG IdleAny;ULONG IdleCurrent;ULONG IdleLast;ULONG IdleIdeal;ULONG PreemptAny;ULONG PreemptCurrent;ULONG PreemptLast;ULONG SwitchToIdle;};
struct _SYSTEM_CRASH_STATE_INFORMATION {ULONG ValidCrashDump;};
struct _SYSTEM_DEVICE_INFORMATION {ULONG NumberOfDisks;ULONG NumberOfFloppies;ULONG NumberOfCdRoms;ULONG NumberOfTapes;ULONG NumberOfSerialPorts;ULONG NumberOfParallelPorts;};
struct _SYSTEM_DOCK_INFORMATION {SYSTEM_DOCK_STATE DockState;INTERFACE_TYPE DeviceBusType;ULONG DeviceBusNumber;ULONG SlotNumber;};
enum _SYSTEM_DOCK_STATE {SystemDockStateUnknown = 0x0,SystemUndocked = 0x1,SystemDocked = 0x2,};
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION {ULONG Spare;ULONG DpcQueueDepth;ULONG MinimumDpcRate;ULONG AdjustDpcThreshold;ULONG IdealDpcRate;};
struct _SYSTEM_EXCEPTION_INFORMATION {ULONG AlignmentFixupCount;ULONG ExceptionDispatchCount;ULONG FloatingEmulationCount;ULONG ByteWordEmulationCount;};
struct _SYSTEM_FILECACHE_INFORMATION {SIZE_T CurrentSize;SIZE_T PeakSize;ULONG PageFaultCount;SIZE_T MinimumWorkingSet;SIZE_T MaximumWorkingSet;SIZE_T CurrentSizeIncludingTransitionInPages;SIZE_T PeakSizeIncludingTransitionInPages;ULONG TransitionRePurposeCount;ULONG Flags;};
enum _SYSTEM_FIRMWARE_TABLE_ACTION {SystemFirmwareTable_Enumerate = 0x0,SystemFirmwareTable_Get = 0x1,};
struct _SYSTEM_FIRMWARE_TABLE_HANDLER {ULONG ProviderSignature;BOOLEAN Register;PFNFTH FirmwareTableHandler;PVOID DriverObject;};
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION {ULONG ProviderSignature;SYSTEM_FIRMWARE_TABLE_ACTION Action;ULONG TableID;ULONG TableBufferLength;UCHAR TableBuffer[1];};
struct _SYSTEM_FLAGS_INFORMATION {ULONG Flags;};
struct _SYSTEM_GDI_DRIVER_INFORMATION {UNICODE_STRING DriverName;PVOID ImageAddress;PVOID SectionPointer;PVOID EntryPoint;PIMAGE_EXPORT_DIRECTORY ExportSectionPointer;ULONG ImageLength;};
struct _SYSTEM_HANDLE_INFORMATION {ULONG NumberOfHandles;SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];};
struct _SYSTEM_HANDLE_INFORMATION_EX {ULONG_PTR Count;ULONG_PTR Reserved;SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handle[1];};
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO {USHORT UniqueProcessId;USHORT CreatorBackTraceIndex;UCHAR ObjectTypeIndex;UCHAR HandleAttributes;USHORT HandleValue;PVOID Object;ULONG GrantedAccess;};
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX {PVOID Object;ULONG_PTR UniqueProcessId;ULONG_PTR HandleValue;ULONG GrantedAccess;USHORT CreatorBackTraceIndex;USHORT ObjectTypeIndex;ULONG HandleAttributes;ULONG Reserved;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION {ULONG Flags;ULONG InfoSize;union {struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$E949FD73BA96FDE6B10B5067CA5C0DBB CodeInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$3981122E42C2F2E2EC9910D6242E0034 KernelInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$608016A2101AA90EE748C3568D7A8E9E UserModeInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$5662001212F8EA2455AAFE5CEC341477 InjectionInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$1AC32459D8DB952E7032F480840B7E79 RenameInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$59A80C0097CD515B7578EA1CDFAF035F AtomicSwap;};};
union _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B {struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$E949FD73BA96FDE6B10B5067CA5C0DBB CodeInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$3981122E42C2F2E2EC9910D6242E0034 KernelInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$608016A2101AA90EE748C3568D7A8E9E UserModeInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$5662001212F8EA2455AAFE5CEC341477 InjectionInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$1AC32459D8DB952E7032F480840B7E79 RenameInfo;struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$59A80C0097CD515B7578EA1CDFAF035F AtomicSwap;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$1AC32459D8DB952E7032F480840B7E79 {HANDLE FileHandle1;PIO_STATUS_BLOCK IoStatusBlock1;PVOID RenameInformation1;PVOID RenameInformationLength1;HANDLE FileHandle2;PIO_STATUS_BLOCK IoStatusBlock2;PVOID RenameInformation2;PVOID RenameInformationLength2;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$3981122E42C2F2E2EC9910D6242E0034 {USHORT NameOffset;USHORT NameLength;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$5662001212F8EA2455AAFE5CEC341477 {USHORT NameOffset;USHORT NameLength;USHORT TargetNameOffset;USHORT TargetNameLength;UCHAR PatchingFinished;NTSTATUS ReturnCode;HANDLE TargetProcess;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$59A80C0097CD515B7578EA1CDFAF035F {HANDLE ParentDirectory;HANDLE ObjectHandle1;HANDLE ObjectHandle2;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$608016A2101AA90EE748C3568D7A8E9E {USHORT NameOffset;USHORT NameLength;USHORT TargetNameOffset;USHORT TargetNameLength;UCHAR PatchingFinished;};
struct _SYSTEM_HOTPATCH_CODE_INFORMATION::$CCCDF2E2330832FC23CFE6D51E07566B::$E949FD73BA96FDE6B10B5067CA5C0DBB {ULONG Foo;};
enum _SYSTEM_INFORMATION_CLASS {SystemBasicInformation = 0x0,SystemProcessorInformation = 0x1,SystemPerformanceInformation = 0x2,SystemTimeOfDayInformation = 0x3,SystemPathInformation = 0x4,SystemProcessInformation = 0x5,SystemCallCountInformation = 0x6,SystemDeviceInformation = 0x7,SystemProcessorPerformanceInformation = 0x8,SystemFlagsInformation = 0x9,SystemCallTimeInformation = 0xA,SystemModuleInformation = 0xB,SystemLocksInformation = 0xC,SystemStackTraceInformation = 0xD,SystemPagedPoolInformation = 0xE,SystemNonPagedPoolInformation = 0xF,SystemHandleInformation = 0x10,SystemObjectInformation = 0x11,SystemPageFileInformation = 0x12,SystemVdmInstemulInformation = 0x13,SystemVdmBopInformation = 0x14,SystemFileCacheInformation = 0x15,SystemPoolTagInformation = 0x16,SystemInterruptInformation = 0x17,SystemDpcBehaviorInformation = 0x18,SystemFullMemoryInformation = 0x19,SystemLoadGdiDriverInformation = 0x1A,SystemUnloadGdiDriverInformation = 0x1B,SystemTimeAdjustmentInformation = 0x1C,SystemSummaryMemoryInformation = 0x1D,SystemMirrorMemoryInformation = 0x1E,SystemPerformanceTraceInformation = 0x1F,SystemObsolete0 = 0x20,SystemExceptionInformation = 0x21,SystemCrashDumpStateInformation = 0x22,SystemKernelDebuggerInformation = 0x23,SystemContextSwitchInformation = 0x24,SystemRegistryQuotaInformation = 0x25,SystemExtendServiceTableInformation = 0x26,SystemPrioritySeperation = 0x27,SystemPlugPlayBusInformation = 0x28,SystemDockInformation = 0x29,SystemPowerInformationNative = 0x2A,SystemProcessorSpeedInformation = 0x2B,SystemCurrentTimeZoneInformation = 0x2C,SystemLookasideInformation = 0x2D,SystemTimeSlipNotification = 0x2E,SystemSessionCreate = 0x2F,SystemSessionDetach = 0x30,SystemSessionInformation = 0x31,SystemRangeStartInformation = 0x32,SystemVerifierInformation = 0x33,SystemAddVerifier = 0x34,SystemSessionProcessesInformation = 0x35,SystemLoadGdiDriverInSystemSpaceInformation = 0x36,SystemNumaProcessorMap = 0x37,SystemPrefetcherInformation = 0x38,SystemExtendedProcessInformation = 0x39,SystemRecommendedSharedDataAlignment = 0x3A,SystemComPlusPackage = 0x3B,SystemNumaAvailableMemory = 0x3C,SystemProcessorPowerInformation = 0x3D,SystemEmulationBasicInformation = 0x3E,SystemEmulationProcessorInformation = 0x3F,SystemExtendedHandleInformation = 0x40,SystemLostDelayedWriteInformation = 0x41,SystemBigPoolInformation = 0x42,SystemSessionPoolTagInformation = 0x43,SystemSessionMappedViewInformation = 0x44,SystemHotpatchInformation = 0x45,SystemObjectSecurityMode = 0x46,SystemWatchDogTimerHandler = 0x47,SystemWatchDogTimerInformation = 0x48,SystemLogicalProcessorInformation = 0x49,SystemWow64SharedInformationObsolete = 0x4A,SystemRegisterFirmwareTableInformationHandler = 0x4B,SystemFirmwareTableInformation = 0x4C,SystemModuleInformationEx = 0x4D,SystemVerifierTriageInformation = 0x4E,SystemSuperfetchInformation = 0x4F,SystemMemoryListInformation = 0x50,SystemFileCacheInformationEx = 0x51,SystemThreadPriorityClientIdInformation = 0x52,SystemProcessorIdleCycleTimeInformation = 0x53,SystemVerifierCancellationInformation = 0x54,SystemProcessorPowerInformationEx = 0x55,SystemRefTraceInformation = 0x56,SystemSpecialPoolInformation = 0x57,SystemProcessIdInformation = 0x58,SystemErrorPortInformation = 0x59,SystemBootEnvironmentInformation = 0x5A,SystemHypervisorInformation = 0x5B,SystemVerifierInformationEx = 0x5C,SystemTimeZoneInformation = 0x5D,SystemImageFileExecutionOptionsInformation = 0x5E,SystemCoverageInformation = 0x5F,SystemPrefetchPathInformation = 0x60,SystemVerifierFaultsInformation = 0x61,MaxSystemInfoClass = 0x62,};
struct _SYSTEM_INTERRUPT_INFORMATION {ULONG ContextSwitches;ULONG DpcCount;ULONG DpcRate;ULONG TimeIncrement;ULONG DpcBypassCount;ULONG ApcBypassCount;};
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION {BOOLEAN KernelDebuggerEnabled;BOOLEAN KernelDebuggerNotPresent;};
struct _SYSTEM_LEGACY_DRIVER_INFORMATION {PNP_VETO_TYPE VetoType;UNICODE_STRING VetoDriver;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {ULONG_PTR ProcessorMask;LOGICAL_PROCESSOR_RELATIONSHIP Relationship;union {struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088::$196EE06A2DB656739DF343240CCA5A2C ProcessorCore;struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088::$AB3E8D6F5DDFCC0505F425518AD8237E NumaNode;CACHE_DESCRIPTOR Cache;ULONGLONG Reserved[2];};};
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088 {struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088::$196EE06A2DB656739DF343240CCA5A2C ProcessorCore;struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088::$AB3E8D6F5DDFCC0505F425518AD8237E NumaNode;CACHE_DESCRIPTOR Cache;ULONGLONG Reserved[2];};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088::$196EE06A2DB656739DF343240CCA5A2C {UCHAR Flags;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::$9AE09388705FAA889F2B471E64FEF088::$AB3E8D6F5DDFCC0505F425518AD8237E {ULONG NodeNumber;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {LOGICAL_PROCESSOR_RELATIONSHIP Relationship;ULONG Size;union {PROCESSOR_RELATIONSHIP Processor;NUMA_NODE_RELATIONSHIP NumaNode;CACHE_RELATIONSHIP Cache;GROUP_RELATIONSHIP Group;};};
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX::$293D76B56AB4224063B0E84352A448B8 {PROCESSOR_RELATIONSHIP Processor;NUMA_NODE_RELATIONSHIP NumaNode;CACHE_RELATIONSHIP Cache;GROUP_RELATIONSHIP Group;};
struct _SYSTEM_LOOKASIDE_INFORMATION {USHORT CurrentDepth;USHORT MaximumDepth;ULONG TotalAllocates;ULONG AllocateMisses;ULONG TotalFrees;ULONG FreeMisses;ULONG Type;ULONG Tag;ULONG Size;};
struct _SYSTEM_MANDATORY_LABEL_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _SYSTEM_MEMORY_INFO {PUCHAR StringOffset;USHORT ValidCount;USHORT TransitionCount;USHORT ModifiedCount;USHORT PageTableCount;};
struct _SYSTEM_MEMORY_INFORMATION {ULONG InfoSize;ULONG StringStart;SYSTEM_MEMORY_INFO Memory[1];};
struct _SYSTEM_MEMORY_LIST_INFORMATION {SIZE_T ZeroPageCount;SIZE_T FreePageCount;SIZE_T ModifiedPageCount;SIZE_T ModifiedNoWritePageCount;SIZE_T BadPageCount;SIZE_T PageCountByPriority[8];SIZE_T RepurposedPagesByPriority[8];SIZE_T ModifiedPageCountPageFile;};
struct _SYSTEM_NUMA_INFORMATION {ULONG HighestNodeNumber;ULONG Reserved;union {ULONGLONG ActiveProcessorsAffinityMask[16];ULONGLONG AvailableMemory[16];};};
union _SYSTEM_NUMA_INFORMATION::$D6793D44CF56DCD5D083B6A930B05B0C {ULONGLONG ActiveProcessorsAffinityMask[16];ULONGLONG AvailableMemory[16];};
struct _SYSTEM_OBJECTTYPE_INFORMATION {ULONG NextEntryOffset;ULONG NumberOfObjects;ULONG NumberOfHandles;ULONG TypeIndex;ULONG InvalidAttributes;GENERIC_MAPPING GenericMapping;ULONG ValidAccessMask;ULONG PoolType;BOOLEAN SecurityRequired;BOOLEAN WaitableObject;UNICODE_STRING TypeName;};
struct _SYSTEM_OBJECT_INFORMATION {ULONG NextEntryOffset;PVOID Object;HANDLE CreatorUniqueProcess;USHORT CreatorBackTraceIndex;USHORT Flags;LONG PointerCount;LONG HandleCount;ULONG PagedPoolCharge;ULONG NonPagedPoolCharge;HANDLE ExclusiveProcessId;PVOID SecurityDescriptor;OBJECT_NAME_INFORMATION NameInfo;};
struct _SYSTEM_PAGEFILE_INFORMATION {ULONG NextEntryOffset;ULONG TotalSize;ULONG TotalInUse;ULONG PeakUsage;UNICODE_STRING PageFileName;};
struct _SYSTEM_PERFORMANCE_INFORMATION {LARGE_INTEGER IdleProcessTime;LARGE_INTEGER IoReadTransferCount;LARGE_INTEGER IoWriteTransferCount;LARGE_INTEGER IoOtherTransferCount;ULONG IoReadOperationCount;ULONG IoWriteOperationCount;ULONG IoOtherOperationCount;ULONG AvailablePages;ULONG CommittedPages;ULONG CommitLimit;ULONG PeakCommitment;ULONG PageFaultCount;ULONG CopyOnWriteCount;ULONG TransitionCount;ULONG CacheTransitionCount;ULONG DemandZeroCount;ULONG PageReadCount;ULONG PageReadIoCount;ULONG CacheReadCount;ULONG CacheIoCount;ULONG DirtyPagesWriteCount;ULONG DirtyWriteIoCount;ULONG MappedPagesWriteCount;ULONG MappedWriteIoCount;ULONG PagedPoolPages;ULONG NonPagedPoolPages;ULONG PagedPoolAllocs;ULONG PagedPoolFrees;ULONG NonPagedPoolAllocs;ULONG NonPagedPoolFrees;ULONG FreeSystemPtes;ULONG ResidentSystemCodePage;ULONG TotalSystemDriverPages;ULONG TotalSystemCodePages;ULONG NonPagedPoolLookasideHits;ULONG PagedPoolLookasideHits;ULONG Spare3Count;ULONG ResidentSystemCachePage;ULONG ResidentPagedPoolPage;ULONG ResidentSystemDriverPage;ULONG CcFastReadNoWait;ULONG CcFastReadWait;ULONG CcFastReadResourceMiss;ULONG CcFastReadNotPossible;ULONG CcFastMdlReadNoWait;ULONG CcFastMdlReadWait;ULONG CcFastMdlReadResourceMiss;ULONG CcFastMdlReadNotPossible;ULONG CcMapDataNoWait;ULONG CcMapDataWait;ULONG CcMapDataNoWaitMiss;ULONG CcMapDataWaitMiss;ULONG CcPinMappedDataCount;ULONG CcPinReadNoWait;ULONG CcPinReadWait;ULONG CcPinReadNoWaitMiss;ULONG CcPinReadWaitMiss;ULONG CcCopyReadNoWait;ULONG CcCopyReadWait;ULONG CcCopyReadNoWaitMiss;ULONG CcCopyReadWaitMiss;ULONG CcMdlReadNoWait;ULONG CcMdlReadWait;ULONG CcMdlReadNoWaitMiss;ULONG CcMdlReadWaitMiss;ULONG CcReadAheadIos;ULONG CcLazyWriteIos;ULONG CcLazyWritePages;ULONG CcDataFlushes;ULONG CcDataPages;ULONG ContextSwitches;ULONG FirstLevelTbFills;ULONG SecondLevelTbFills;ULONG SystemCalls;};
struct _SYSTEM_PLUGPLAY_BUS_INFORMATION {ULONG BusCount;PLUGPLAY_BUS_INSTANCE BusInstance[1];};
struct _SYSTEM_POOLTAG {union {UCHAR Tag[4];ULONG TagUlong;};ULONG PagedAllocs;ULONG PagedFrees;SIZE_T PagedUsed;ULONG NonPagedAllocs;ULONG NonPagedFrees;SIZE_T NonPagedUsed;};
union _SYSTEM_POOLTAG::$2533C71825FFE680E12F318455D741EA {UCHAR Tag[4];ULONG TagUlong;};
struct _SYSTEM_POOLTAG_INFORMATION {ULONG Count;SYSTEM_POOLTAG TagInfo[1];};
struct _SYSTEM_POOL_ENTRY {BOOLEAN Allocated;BOOLEAN Spare0;USHORT AllocatorBackTraceIndex;ULONG Size;union {UCHAR Tag[4];ULONG TagUlong;PVOID ProcessChargedQuota;};};
union _SYSTEM_POOL_ENTRY::$27CCD1E08BC3C471EBBAAAE246DC550A {UCHAR Tag[4];ULONG TagUlong;PVOID ProcessChargedQuota;};
struct _SYSTEM_POOL_INFORMATION {SIZE_T TotalSize;PVOID FirstEntry;USHORT EntryOverhead;BOOLEAN PoolTagPresent;BOOLEAN Spare0;ULONG NumberOfEntries;SYSTEM_POOL_ENTRY Entries[1];};
struct _SYSTEM_POWER_CAPABILITIES {BOOLEAN PowerButtonPresent;BOOLEAN SleepButtonPresent;BOOLEAN LidPresent;BOOLEAN SystemS1;BOOLEAN SystemS2;BOOLEAN SystemS3;BOOLEAN SystemS4;BOOLEAN SystemS5;BOOLEAN HiberFilePresent;BOOLEAN FullWake;BOOLEAN VideoDimPresent;BOOLEAN ApmPresent;BOOLEAN UpsPresent;BOOLEAN ThermalControl;BOOLEAN ProcessorThrottle;BYTE ProcessorMinThrottle;BYTE ProcessorMaxThrottle;BOOLEAN FastSystemS4;BYTE spare2[3];BOOLEAN DiskSpinDown;BYTE spare3[8];BOOLEAN SystemBatteriesPresent;BOOLEAN BatteriesAreShortTerm;BATTERY_REPORTING_SCALE BatteryScale[3];SYSTEM_POWER_STATE AcOnLineWake;SYSTEM_POWER_STATE SoftLidWake;SYSTEM_POWER_STATE RtcWake;SYSTEM_POWER_STATE MinDeviceWakeState;SYSTEM_POWER_STATE DefaultLowLatencyWake;};
struct _SYSTEM_POWER_INFORMATION {ULONG MaxIdlenessAllowed;ULONG Idleness;ULONG TimeRemaining;UCHAR CoolingMode;};
struct _SYSTEM_POWER_INFORMATION_NATIVE {BOOLEAN SystemSuspendSupported;BOOLEAN SystemHibernateSupported;BOOLEAN ResumeTimerSupportsSuspend;BOOLEAN ResumeTimerSupportsHibernate;BOOLEAN LidSupported;BOOLEAN TurboSettingSupported;BOOLEAN TurboMode;BOOLEAN SystemAcOrDc;BOOLEAN PowerDownDisabled;LARGE_INTEGER SpindownDrives;};
struct _SYSTEM_POWER_LEVEL {BOOLEAN Enable;BYTE Spare[3];DWORD BatteryLevel;POWER_ACTION_POLICY PowerPolicy;SYSTEM_POWER_STATE MinSystemState;};
struct _SYSTEM_POWER_POLICY {DWORD Revision;POWER_ACTION_POLICY PowerButton;POWER_ACTION_POLICY SleepButton;POWER_ACTION_POLICY LidClose;SYSTEM_POWER_STATE LidOpenWake;DWORD Reserved;POWER_ACTION_POLICY Idle;DWORD IdleTimeout;BYTE IdleSensitivity;BYTE DynamicThrottle;BYTE Spare2[2];SYSTEM_POWER_STATE MinSleep;SYSTEM_POWER_STATE MaxSleep;SYSTEM_POWER_STATE ReducedLatencySleep;DWORD WinLogonFlags;DWORD Spare3;DWORD DozeS4Timeout;DWORD BroadcastCapacityResolution;SYSTEM_POWER_LEVEL DischargePolicy[4];DWORD VideoTimeout;BOOLEAN VideoDimDisplay;DWORD VideoReserved[3];DWORD SpindownTimeout;BOOLEAN OptimizeForPower;BYTE FanThrottleTolerance;BYTE ForcedThrottle;BYTE MinThrottle;POWER_ACTION_POLICY OverThrottled;};
enum _SYSTEM_POWER_STATE {PowerSystemUnspecified = 0x0,PowerSystemWorking = 0x1,PowerSystemSleeping1 = 0x2,PowerSystemSleeping2 = 0x3,PowerSystemSleeping3 = 0x4,PowerSystemHibernate = 0x5,PowerSystemShutdown = 0x6,PowerSystemMaximum = 0x7,};
struct _SYSTEM_PROCESSOR_INFORMATION {USHORT ProcessorArchitecture;USHORT ProcessorLevel;USHORT ProcessorRevision;USHORT Reserved;ULONG ProcessorFeatureBits;};
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION {LARGE_INTEGER IdleTime;LARGE_INTEGER KernelTime;LARGE_INTEGER UserTime;LARGE_INTEGER DpcTime;LARGE_INTEGER InterruptTime;ULONG InterruptCount;};
struct _SYSTEM_PROCESS_INFORMATION {ULONG NextEntryOffset;ULONG NumberOfThreads;LARGE_INTEGER WorkingSetPrivateSize;ULONG HardFaultCount;ULONG NumberOfThreadsHighWatermark;ULONGLONG CycleTime;LARGE_INTEGER CreateTime;LARGE_INTEGER UserTime;LARGE_INTEGER KernelTime;UNICODE_STRING ImageName;KPRIORITY BasePriority;HANDLE UniqueProcessId;HANDLE InheritedFromUniqueProcessId;ULONG HandleCount;ULONG SessionId;ULONG_PTR PageDirectoryBase;SIZE_T PeakVirtualSize;SIZE_T VirtualSize;ULONG PageFaultCount;SIZE_T PeakWorkingSetSize;SIZE_T WorkingSetSize;SIZE_T QuotaPeakPagedPoolUsage;SIZE_T QuotaPagedPoolUsage;SIZE_T QuotaPeakNonPagedPoolUsage;SIZE_T QuotaNonPagedPoolUsage;SIZE_T PagefileUsage;SIZE_T PeakPagefileUsage;SIZE_T PrivatePageCount;LARGE_INTEGER ReadOperationCount;LARGE_INTEGER WriteOperationCount;LARGE_INTEGER OtherOperationCount;LARGE_INTEGER ReadTransferCount;LARGE_INTEGER WriteTransferCount;LARGE_INTEGER OtherTransferCount;};
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION {ULONG TimeAdjustment;ULONG TimeIncrement;BOOLEAN Enable;};
struct _SYSTEM_REF_TRACE_INFORMATION {UCHAR TraceEnable;UCHAR TracePermanent;UNICODE_STRING TraceProcessName;UNICODE_STRING TracePoolTags;};
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION {ULONG RegistryQuotaAllowed;ULONG RegistryQuotaUsed;SIZE_T PagedPoolSize;};
struct _SYSTEM_SESSION_PROCESS_INFORMATION {ULONG SessionId;ULONG SizeOfBuf;PVOID Buffer;};
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION {ULONG TimeAdjustment;BOOLEAN Enable;};
struct _SYSTEM_THREAD_INFORMATION {LARGE_INTEGER KernelTime;LARGE_INTEGER UserTime;LARGE_INTEGER CreateTime;ULONG WaitTime;PVOID StartAddress;CLIENT_ID ClientId;KPRIORITY Priority;LONG BasePriority;ULONG ContextSwitches;ULONG ThreadState;ULONG WaitReason;ULONG PadPadAlignment;};
struct _SYSTEM_TIMEOFDAY_INFORMATION {LARGE_INTEGER BootTime;LARGE_INTEGER CurrentTime;LARGE_INTEGER TimeZoneBias;ULONG TimeZoneId;ULONG Reserved;ULONGLONG BootTimeBias;ULONGLONG SleepTimeBias;};
struct _SYSTEM_VDM_INSTEMUL_INFO {ULONG SegmentNotPresent;ULONG VdmOpcode0F;ULONG OpcodeESPrefix;ULONG OpcodeCSPrefix;ULONG OpcodeSSPrefix;ULONG OpcodeDSPrefix;ULONG OpcodeFSPrefix;ULONG OpcodeGSPrefix;ULONG OpcodeOPER32Prefix;ULONG OpcodeADDR32Prefix;ULONG OpcodeINSB;ULONG OpcodeINSW;ULONG OpcodeOUTSB;ULONG OpcodeOUTSW;ULONG OpcodePUSHF;ULONG OpcodePOPF;ULONG OpcodeINTnn;ULONG OpcodeINTO;ULONG OpcodeIRET;ULONG OpcodeINBimm;ULONG OpcodeINWimm;ULONG OpcodeOUTBimm;ULONG OpcodeOUTWimm;ULONG OpcodeINB;ULONG OpcodeINW;ULONG OpcodeOUTB;ULONG OpcodeOUTW;ULONG OpcodeLOCKPrefix;ULONG OpcodeREPNEPrefix;ULONG OpcodeREPPrefix;ULONG OpcodeHLT;ULONG OpcodeCLI;ULONG OpcodeSTI;ULONG BopCount;};
struct _SYSTEM_VERIFIER_INFORMATION {ULONG NextEntryOffset;ULONG Level;UNICODE_STRING DriverName;ULONG RaiseIrqls;ULONG AcquireSpinLocks;ULONG SynchronizeExecutions;ULONG AllocationsAttempted;ULONG AllocationsSucceeded;ULONG AllocationsSucceededSpecialPool;ULONG AllocationsWithNoTag;ULONG TrimRequests;ULONG Trims;ULONG AllocationsFailed;ULONG AllocationsFailedDeliberately;ULONG Loads;ULONG Unloads;ULONG UnTrackedPool;ULONG CurrentPagedPoolAllocations;ULONG CurrentNonPagedPoolAllocations;ULONG PeakPagedPoolAllocations;ULONG PeakNonPagedPoolAllocations;SIZE_T PagedPoolUsageInBytes;SIZE_T NonPagedPoolUsageInBytes;SIZE_T PeakPagedPoolUsageInBytes;SIZE_T PeakNonPagedPoolUsageInBytes;};
enum _TABLE_SEARCH_RESULT {TableEmptyTree = 0x0,TableFoundNode = 0x1,TableInsertAsLeft = 0x2,TableInsertAsRight = 0x3,};
struct _TAPE_CREATE_PARTITION {DWORD Method;DWORD Count;DWORD Size;};
struct _TAPE_ERASE {DWORD Type;BOOLEAN Immediate;};
struct _TAPE_GET_DRIVE_PARAMETERS {BOOLEAN ECC;BOOLEAN Compression;BOOLEAN DataPadding;BOOLEAN ReportSetmarks;DWORD DefaultBlockSize;DWORD MaximumBlockSize;DWORD MinimumBlockSize;DWORD MaximumPartitionCount;DWORD FeaturesLow;DWORD FeaturesHigh;DWORD EOTWarningZoneSize;};
struct _TAPE_GET_MEDIA_PARAMETERS {LARGE_INTEGER Capacity;LARGE_INTEGER Remaining;DWORD BlockSize;DWORD PartitionCount;BOOLEAN WriteProtected;};
struct _TAPE_GET_POSITION {DWORD Type;DWORD Partition;LARGE_INTEGER Offset;};
struct _TAPE_PREPARE {DWORD Operation;BOOLEAN Immediate;};
struct _TAPE_SET_DRIVE_PARAMETERS {BOOLEAN ECC;BOOLEAN Compression;BOOLEAN DataPadding;BOOLEAN ReportSetmarks;DWORD EOTWarningZoneSize;};
struct _TAPE_SET_MEDIA_PARAMETERS {DWORD BlockSize;};
struct _TAPE_SET_POSITION {DWORD Method;DWORD Partition;LARGE_INTEGER Offset;BOOLEAN Immediate;};
struct _TAPE_WRITE_MARKS {DWORD Type;DWORD Count;BOOLEAN Immediate;};
struct _TEB {NT_TIB NtTib;PVOID EnvironmentPointer;CLIENT_ID ClientId;PVOID ActiveRpcHandle;PVOID ThreadLocalStoragePointer;PPEB ProcessEnvironmentBlock;ULONG LastErrorValue;ULONG CountOfOwnedCriticalSections;PVOID CsrClientThread;PVOID Win32ThreadInfo;ULONG User32Reserved[26];ULONG UserReserved[5];PVOID WOW32Reserved;LCID CurrentLocale;ULONG FpSoftwareStatusRegister;PVOID SystemReserved1[54];LONG ExceptionCode;PACTIVATION_CONTEXT_STACK ActivationContextStackPointer;UCHAR SpareBytes[36];ULONG TxFsContext;GDI_TEB_BATCH GdiTebBatch;CLIENT_ID RealClientId;PVOID GdiCachedProcessHandle;ULONG GdiClientPID;ULONG GdiClientTID;PVOID GdiThreadLocalInfo;SIZE_T Win32ClientInfo[62];PVOID glDispatchTable[233];SIZE_T glReserved1[29];PVOID glReserved2;PVOID glSectionInfo;PVOID glSection;PVOID glTable;PVOID glCurrentRC;PVOID glContext;ULONG LastStatusValue;UNICODE_STRING StaticUnicodeString;WCHAR StaticUnicodeBuffer[261];PVOID DeallocationStack;PVOID TlsSlots[64];LIST_ENTRY TlsLinks;PVOID Vdm;PVOID ReservedForNtRpc;PVOID DbgSsReserved[2];ULONG HardErrorMode;PVOID Instrumentation[9];GUID ActivityId;PVOID SubProcessTag;PVOID PerflibData;PVOID EtwTraceData;PVOID WinSockData;ULONG GdiBatchCount;union {PROCESSOR_NUMBER CurrentIdealProcessor;ULONG32 IdealProcessorValue;struct {UCHAR ReservedPad0;UCHAR ReservedPad1;UCHAR ReservedPad2;UCHAR IdealProcessor;};};ULONG GuaranteedStackBytes;PVOID ReservedForPerf;PVOID ReservedForOle;ULONG WaitingOnLoaderLock;PVOID SavedPriorityState;ULONG_PTR ReservedForCodeCoverage;ULONG_PTR ThreadPoolData;PVOID *TlsExpansionSlots;ULONG ImpersonationLocale;ULONG IsImpersonating;PVOID NlsCache;PVOID pShimData;USHORT HeapVirtualAffinity;USHORT LowFragHeapDataSlot;HANDLE CurrentTransactionHandle;PTEB_ACTIVE_FRAME ActiveFrame;PVOID FlsData;PVOID PreferredLanguages;PVOID UserPrefLanguages;PVOID MergedPrefLanguages;ULONG MuiImpersonation;union {USHORT CrossTebFlags;struct {unsigned __int16 SpareCrossTebBits : 16;};};union {USHORT SameTebFlags;struct {unsigned __int16 DbgSafeThunkCall : 1;unsigned __int16 DbgInDebugPrint : 1;unsigned __int16 DbgHasFiberData : 1;unsigned __int16 DbgSkipThreadAttach : 1;unsigned __int16 DbgWerInShipAssertCode : 1;unsigned __int16 DbgIssuedInitialBp : 1;unsigned __int16 DbgClonedThread : 1;unsigned __int16 SpareSameTebBits : 9;};};PVOID TxnScopeEnterCallback;PVOID TxnScopeExitCallback;PVOID TxnScopeContext;ULONG LockCount;ULONG SpareUlong0;PVOID ResourceRetValue;PVOID ReservedForWdf;};
union _TEB::$0FDF4FE4DD32259F40449DF85BAB2799 {USHORT CrossTebFlags;struct {unsigned __int16 SpareCrossTebBits : 16;};};
struct _TEB::$0FDF4FE4DD32259F40449DF85BAB2799::$88D35C6E749BA8930BA8A8A22D5F60D0 {unsigned __int16 SpareCrossTebBits : 16;};
union _TEB::$1EB9E4FB166D21BAAE5FA7D2555AB8E0 {PROCESSOR_NUMBER CurrentIdealProcessor;ULONG32 IdealProcessorValue;struct {UCHAR ReservedPad0;UCHAR ReservedPad1;UCHAR ReservedPad2;UCHAR IdealProcessor;};};
struct _TEB::$1EB9E4FB166D21BAAE5FA7D2555AB8E0::$0EF4705CD26F837283D1B4C1F01D38F0 {UCHAR ReservedPad0;UCHAR ReservedPad1;UCHAR ReservedPad2;UCHAR IdealProcessor;};
union _TEB::$E9B013633FFB9CEFBD2E432AC0EFFA1A {USHORT SameTebFlags;struct {unsigned __int16 DbgSafeThunkCall : 1;unsigned __int16 DbgInDebugPrint : 1;unsigned __int16 DbgHasFiberData : 1;unsigned __int16 DbgSkipThreadAttach : 1;unsigned __int16 DbgWerInShipAssertCode : 1;unsigned __int16 DbgIssuedInitialBp : 1;unsigned __int16 DbgClonedThread : 1;unsigned __int16 SpareSameTebBits : 9;};};
struct _TEB::$E9B013633FFB9CEFBD2E432AC0EFFA1A::$9011CA5882D7692DCA03F839D1FCEA69 {unsigned __int16 DbgSafeThunkCall : 1;unsigned __int16 DbgInDebugPrint : 1;unsigned __int16 DbgHasFiberData : 1;unsigned __int16 DbgSkipThreadAttach : 1;unsigned __int16 DbgWerInShipAssertCode : 1;unsigned __int16 DbgIssuedInitialBp : 1;unsigned __int16 DbgClonedThread : 1;unsigned __int16 SpareSameTebBits : 9;};
struct _TEB_ACTIVE_FRAME {ULONG Flags;struct _TEB_ACTIVE_FRAME *Previous;PCTEB_ACTIVE_FRAME_CONTEXT Context;};
struct _TEB_ACTIVE_FRAME_CONTEXT {ULONG Flags;LPSTR FrameName;};
struct _TEB_ACTIVE_FRAME_CONTEXT_EX {TEB_ACTIVE_FRAME_CONTEXT BasicContext;PCSTR SourceLocation;};
struct _TEB_ACTIVE_FRAME_EX {TEB_ACTIVE_FRAME BasicFrame;PVOID ExtensionIdentifier;};
enum _THREADINFOCLASS {ThreadBasicInformation = 0x0,ThreadTimes = 0x1,ThreadPriority = 0x2,ThreadBasePriority = 0x3,ThreadAffinityMask = 0x4,ThreadImpersonationToken = 0x5,ThreadDescriptorTableEntry = 0x6,ThreadEnableAlignmentFaultFixup = 0x7,ThreadEventPair_Reusable = 0x8,ThreadQuerySetWin32StartAddress = 0x9,ThreadZeroTlsCell = 0xA,ThreadPerformanceCount = 0xB,ThreadAmILastThread = 0xC,ThreadIdealProcessor = 0xD,ThreadPriorityBoost = 0xE,ThreadSetTlsArrayAddress = 0xF,ThreadIsIoPending = 0x10,ThreadHideFromDebugger = 0x11,ThreadBreakOnTermination = 0x12,ThreadSwitchLegacyState = 0x13,ThreadIsTerminated = 0x14,ThreadLastSystemCall = 0x15,ThreadIoPriority = 0x16,ThreadCycleTime = 0x17,ThreadPagePriority = 0x18,ThreadActualBasePriority = 0x19,ThreadTebInformation = 0x1A,ThreadCSwitchMon = 0x1B,MaxThreadInfoClass = 0x1C,};
struct _THREAD_BASIC_INFORMATION {NTSTATUS ExitStatus;PVOID TebBaseAddress;CLIENT_ID ClientId;KAFFINITY AffinityMask;KPRIORITY Priority;KPRIORITY BasePriority;};
struct _TIMER_BASIC_INFORMATION {LARGE_INTEGER TimeRemaining;BOOLEAN SignalState;};
enum _TIMER_INFORMATION_CLASS {TimerBasicInformation = 0x0,};
enum _TIMER_TYPE {NotificationTimer = 0x0,SynchronizationTimer = 0x1,};
struct _TIME_FIELDS {CSHORT Year;CSHORT Month;CSHORT Day;CSHORT Hour;CSHORT Minute;CSHORT Second;CSHORT Milliseconds;CSHORT Weekday;};
struct _TOKEN_ACCESS_INFORMATION {struct _SID_AND_ATTRIBUTES_HASH *SidHash;struct _SID_AND_ATTRIBUTES_HASH *RestrictedSidHash;struct _TOKEN_PRIVILEGES *Privileges;LUID AuthenticationId;TOKEN_TYPE TokenType;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;TOKEN_MANDATORY_POLICY MandatoryPolicy;ULONG Flags;};
struct _TOKEN_AUDIT_POLICY {BYTE PerUserPolicy[29];};
struct _TOKEN_CONTROL {LUID TokenId;LUID AuthenticationId;LUID ModifiedId;TOKEN_SOURCE TokenSource;};
struct _TOKEN_DEFAULT_DACL {PACL DefaultDacl;};
struct _TOKEN_ELEVATION {DWORD TokenIsElevated;};
enum _TOKEN_ELEVATION_TYPE {TokenElevationTypeDefault = 0x1,TokenElevationTypeFull = 0x2,TokenElevationTypeLimited = 0x3,};
struct _TOKEN_GROUPS {DWORD GroupCount;SID_AND_ATTRIBUTES Groups[1];};
struct _TOKEN_GROUPS_AND_PRIVILEGES {DWORD SidCount;DWORD SidLength;PSID_AND_ATTRIBUTES Sids;DWORD RestrictedSidCount;DWORD RestrictedSidLength;PSID_AND_ATTRIBUTES RestrictedSids;DWORD PrivilegeCount;DWORD PrivilegeLength;PLUID_AND_ATTRIBUTES Privileges;LUID AuthenticationId;};
enum _TOKEN_INFORMATION_CLASS {TokenUser = 0x1,TokenGroups = 0x2,TokenPrivileges = 0x3,TokenOwner = 0x4,TokenPrimaryGroup = 0x5,TokenDefaultDacl = 0x6,TokenSource = 0x7,TokenType = 0x8,TokenImpersonationLevel = 0x9,TokenStatistics = 0xA,TokenRestrictedSids = 0xB,TokenSessionId = 0xC,TokenGroupsAndPrivileges = 0xD,TokenSessionReference = 0xE,TokenSandBoxInert = 0xF,TokenAuditPolicy = 0x10,TokenOrigin = 0x11,TokenElevationType = 0x12,TokenLinkedToken = 0x13,TokenElevation = 0x14,TokenHasRestrictions = 0x15,TokenAccessInformation = 0x16,TokenVirtualizationAllowed = 0x17,TokenVirtualizationEnabled = 0x18,TokenIntegrityLevel = 0x19,TokenUIAccess = 0x1A,TokenMandatoryPolicy = 0x1B,TokenLogonSid = 0x1C,TokenIsAppContainer = 0x1D,TokenCapabilities = 0x1E,TokenAppContainerSid = 0x1F,TokenAppContainerNumber = 0x20,TokenUserClaimAttributes = 0x21,TokenDeviceClaimAttributes = 0x22,TokenRestrictedUserClaimAttributes = 0x23,TokenRestrictedDeviceClaimAttributes = 0x24,TokenDeviceGroups = 0x25,TokenRestrictedDeviceGroups = 0x26,TokenSecurityAttributes = 0x27,TokenIsRestricted = 0x28,MaxTokenInfoClass = 0x29,};
struct _TOKEN_LINKED_TOKEN {HANDLE LinkedToken;};
struct _TOKEN_MANDATORY_LABEL {SID_AND_ATTRIBUTES Label;};
struct _TOKEN_MANDATORY_POLICY {ULONG Policy;};
struct _TOKEN_ORIGIN {LUID OriginatingLogonSession;};
struct _TOKEN_OWNER {PSID Owner;};
struct _TOKEN_PRIMARY_GROUP {PSID PrimaryGroup;};
struct _TOKEN_PRIVILEGES {DWORD PrivilegeCount;LUID_AND_ATTRIBUTES Privileges[1];};
struct _TOKEN_SOURCE {CHAR SourceName[8];LUID SourceIdentifier;};
struct _TOKEN_STATISTICS {LUID TokenId;LUID AuthenticationId;LARGE_INTEGER ExpirationTime;TOKEN_TYPE TokenType;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;DWORD DynamicCharged;DWORD DynamicAvailable;DWORD GroupCount;DWORD PrivilegeCount;LUID ModifiedId;};
enum _TOKEN_TYPE {TokenPrimary = 0x1,TokenImpersonation = 0x2,};
struct _TOKEN_USER {SID_AND_ATTRIBUTES User;};
struct _TP_CALLBACK_ENVIRON_V3 {TP_VERSION Version;PTP_POOL Pool;PTP_CLEANUP_GROUP CleanupGroup;PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback;PVOID RaceDll;struct _ACTIVATION_CONTEXT *ActivationContext;PTP_SIMPLE_CALLBACK FinalizationCallback;union _TP_CALLBACK_ENVIRON_V3::$C072F2C95B582BA204B92B78505015C5 u;TP_CALLBACK_PRIORITY CallbackPriority;DWORD Size;};
union _TP_CALLBACK_ENVIRON_V3::$C072F2C95B582BA204B92B78505015C5 {DWORD Flags;struct _TP_CALLBACK_ENVIRON_V3::$C072F2C95B582BA204B92B78505015C5::$8C32E5D3ED1763EA38B94549972C5F20 s;};
struct _TP_CALLBACK_ENVIRON_V3::$C072F2C95B582BA204B92B78505015C5::$8C32E5D3ED1763EA38B94549972C5F20 {unsigned __int32 LongFunction : 1;unsigned __int32 Persistent : 1;unsigned __int32 Private : 30;};
struct _TP_CALLBACK_INSTANCE;
enum _TP_CALLBACK_PRIORITY {TP_CALLBACK_PRIORITY_HIGH = 0x0,TP_CALLBACK_PRIORITY_NORMAL = 0x1,TP_CALLBACK_PRIORITY_LOW = 0x2,TP_CALLBACK_PRIORITY_INVALID = 0x3,TP_CALLBACK_PRIORITY_COUNT = 0x3,};
struct _TP_CLEANUP_GROUP;
struct _TP_POOL;
struct _TP_WORK;
struct _TRIVERTEX {LONG x;LONG y;COLOR16 Red;COLOR16 Green;COLOR16 Blue;COLOR16 Alpha;};
struct _TYPE1_FONT {HANDLE hPFM;HANDLE hPFB;ULONG ulIdentifier;};
union _ULARGE_INTEGER {struct {DWORD LowPart;DWORD HighPart;};struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC u;ULONGLONG QuadPart;};
struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC {DWORD LowPart;DWORD HighPart;};
struct _UNICODE_PREFIX_TABLE {CSHORT NodeTypeCode;CSHORT NameLength;PUNICODE_PREFIX_TABLE_ENTRY NextPrefixTree;PUNICODE_PREFIX_TABLE_ENTRY LastNextEntry;};
struct _UNICODE_PREFIX_TABLE_ENTRY {CSHORT NodeTypeCode;CSHORT NameLength;struct _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;struct _UNICODE_PREFIX_TABLE_ENTRY *CaseMatch;RTL_SPLAY_LINKS Links;PUNICODE_STRING Prefix;};
struct _UNICODE_STRING {USHORT Length;USHORT MaximumLength;PWSTR Buffer;};
struct _UNIQUE_PROCESS_INFORMATION {unsigned __int64 DontUse : 9;unsigned __int64 UniqueProcessKey : 48;unsigned __int64 Reserved : 7;};
enum _VDMSERVICECLASS {VdmStartExecution = 0x0,VdmQueueInterrupt = 0x1,VdmDelayInterrupt = 0x2,VdmInitialize = 0x3,VdmFeatures = 0x4,VdmSetInt21Handler = 0x5,VdmQueryDir = 0x6,VdmPrinterDirectIoOpen = 0x7,VdmPrinterDirectIoClose = 0x8,VdmPrinterInitialize = 0x9,VdmSetLdtEntries = 0xA,VdmSetProcessLdtInfo = 0xB,VdmAdlibEmulation = 0xC,VdmPMCliControl = 0xD,VdmQueryVdmProcess = 0xE,};
struct _VDM_INITIALIZE_DATA {PVOID TrapcHandler;PVDMICAUSERDATA IcaUserData;};
struct _VERIFY_INFORMATION {LARGE_INTEGER StartingOffset;DWORD Length;};
enum _VF_FAILURE_CLASS {VFFAILURE_FAIL_IN_FIELD = 0x0,VFFAILURE_FAIL_LOGO = 0x1,VFFAILURE_FAIL_UNDER_DEBUGGER = 0x2,};
enum _VF_OBJECT_TYPE {VFOBJTYPE_DRIVER = 0x0,VFOBJTYPE_DEVICE = 0x1,VFOBJTYPE_SYSTEM_BIOS = 0x2,};
struct _VIDEOMEMORY {DWORD dwFlags;FLATPTR fpStart;union {FLATPTR fpEnd;DWORD dwWidth;};DDSCAPS ddsCaps;DDSCAPS ddsCapsAlt;union {struct _VMEMHEAP *lpHeap;DWORD dwHeight;};};
union _VIDEOMEMORY::$9185259A75FBB280E946CF1BC6C2CB4D {struct _VMEMHEAP *lpHeap;DWORD dwHeight;};
union _VIDEOMEMORY::$F643F706E5FAED7B713649E0BB2B511C {FLATPTR fpEnd;DWORD dwWidth;};
struct _VIDEOMEMORYINFO {FLATPTR fpPrimary;DWORD dwFlags;DWORD dwDisplayWidth;DWORD dwDisplayHeight;LONG lDisplayPitch;DDPIXELFORMAT ddpfDisplay;DWORD dwOffscreenAlign;DWORD dwOverlayAlign;DWORD dwTextureAlign;DWORD dwZBufferAlign;DWORD dwAlphaAlign;PVOID pvPrimary;};
struct _VM_COUNTERS {SIZE_T PeakVirtualSize;SIZE_T VirtualSize;ULONG PageFaultCount;SIZE_T PeakWorkingSetSize;SIZE_T WorkingSetSize;SIZE_T QuotaPeakPagedPoolUsage;SIZE_T QuotaPagedPoolUsage;SIZE_T QuotaPeakNonPagedPoolUsage;SIZE_T QuotaNonPagedPoolUsage;SIZE_T PagefileUsage;SIZE_T PeakPagefileUsage;};
struct _VM_COUNTERS_EX {SIZE_T PeakVirtualSize;SIZE_T VirtualSize;ULONG PageFaultCount;SIZE_T PeakWorkingSetSize;SIZE_T WorkingSetSize;SIZE_T QuotaPeakPagedPoolUsage;SIZE_T QuotaPagedPoolUsage;SIZE_T QuotaPeakNonPagedPoolUsage;SIZE_T QuotaNonPagedPoolUsage;SIZE_T PagefileUsage;SIZE_T PeakPagefileUsage;SIZE_T PrivateUsage;};
struct _VOLUME_DISK_EXTENTS {DWORD NumberOfDiskExtents;DISK_EXTENT Extents[1];};
struct _VdmIcaUserData {PVOID pIcaLock;PVDMVIRTUALICA pIcaMaster;PVDMVIRTUALICA pIcaSlave;PULONG pDelayIrq;PULONG pUndelayIrq;PULONG pDelayIret;PULONG pIretHooked;PULONG pAddrIretBopTable;PHANDLE phWowIdleEvent;PLARGE_INTEGER pIcaTimeout;PHANDLE phMainThreadSuspended;};
struct _VdmVirtualIca {LONG ica_count[8];LONG ica_int_line;LONG ica_cpu_int;USHORT ica_base;USHORT ica_hipiri;USHORT ica_mode;UCHAR ica_master;UCHAR ica_irr;UCHAR ica_isr;UCHAR ica_imr;UCHAR ica_ssr;};
enum _WAIT_TYPE {WaitAll = 0x0,WaitAny = 0x1,};
struct _WCRUN {WCHAR wcLow;USHORT cGlyphs;HGLYPH *phg;};
enum _WELL_KNOWN_SID_TYPE {WinNullSid = 0x0,WinWorldSid = 0x1,WinLocalSid = 0x2,WinCreatorOwnerSid = 0x3,WinCreatorGroupSid = 0x4,WinCreatorOwnerServerSid = 0x5,WinCreatorGroupServerSid = 0x6,WinNtAuthoritySid = 0x7,WinDialupSid = 0x8,WinNetworkSid = 0x9,WinBatchSid = 0xA,WinInteractiveSid = 0xB,WinServiceSid = 0xC,WinAnonymousSid = 0xD,WinProxySid = 0xE,WinEnterpriseControllersSid = 0xF,WinSelfSid = 0x10,WinAuthenticatedUserSid = 0x11,WinRestrictedCodeSid = 0x12,WinTerminalServerSid = 0x13,WinRemoteLogonIdSid = 0x14,WinLogonIdsSid = 0x15,WinLocalSystemSid = 0x16,WinLocalServiceSid = 0x17,WinNetworkServiceSid = 0x18,WinBuiltinDomainSid = 0x19,WinBuiltinAdministratorsSid = 0x1A,WinBuiltinUsersSid = 0x1B,WinBuiltinGuestsSid = 0x1C,WinBuiltinPowerUsersSid = 0x1D,WinBuiltinAccountOperatorsSid = 0x1E,WinBuiltinSystemOperatorsSid = 0x1F,WinBuiltinPrintOperatorsSid = 0x20,WinBuiltinBackupOperatorsSid = 0x21,WinBuiltinReplicatorSid = 0x22,WinBuiltinPreWindows2000CompatibleAccessSid = 0x23,WinBuiltinRemoteDesktopUsersSid = 0x24,WinBuiltinNetworkConfigurationOperatorsSid = 0x25,WinAccountAdministratorSid = 0x26,WinAccountGuestSid = 0x27,WinAccountKrbtgtSid = 0x28,WinAccountDomainAdminsSid = 0x29,WinAccountDomainUsersSid = 0x2A,WinAccountDomainGuestsSid = 0x2B,WinAccountComputersSid = 0x2C,WinAccountControllersSid = 0x2D,WinAccountCertAdminsSid = 0x2E,WinAccountSchemaAdminsSid = 0x2F,WinAccountEnterpriseAdminsSid = 0x30,WinAccountPolicyAdminsSid = 0x31,WinAccountRasAndIasServersSid = 0x32,WinNTLMAuthenticationSid = 0x33,WinDigestAuthenticationSid = 0x34,WinSChannelAuthenticationSid = 0x35,WinThisOrganizationSid = 0x36,WinOtherOrganizationSid = 0x37,WinBuiltinIncomingForestTrustBuildersSid = 0x38,WinBuiltinPerfMonitoringUsersSid = 0x39,WinBuiltinPerfLoggingUsersSid = 0x3A,WinBuiltinAuthorizationAccessSid = 0x3B,WinBuiltinTerminalServerLicenseServersSid = 0x3C,WinBuiltinDCOMUsersSid = 0x3D,WinBuiltinIUsersSid = 0x3E,WinIUserSid = 0x3F,WinBuiltinCryptoOperatorsSid = 0x40,WinUntrustedLabelSid = 0x41,WinLowLabelSid = 0x42,WinMediumLabelSid = 0x43,WinHighLabelSid = 0x44,WinSystemLabelSid = 0x45,WinWriteRestrictedCodeSid = 0x46,WinCreatorOwnerRightsSid = 0x47,WinCacheablePrincipalsGroupSid = 0x48,WinNonCacheablePrincipalsGroupSid = 0x49,WinEnterpriseReadonlyControllersSid = 0x4A,WinAccountReadonlyControllersSid = 0x4B,WinBuiltinEventLogReadersGroup = 0x4C,WinNewEnterpriseReadonlyControllersSid = 0x4D,WinBuiltinCertSvcDComAccessGroup = 0x4E,WinMediumPlusLabelSid = 0x4F,WinLocalLogonSid = 0x50,WinConsoleLogonSid = 0x51,WinThisOrganizationCertificateSid = 0x52,WinApplicationPackageAuthoritySid = 0x53,WinBuiltinAnyPackageSid = 0x54,WinCapabilityInternetClientSid = 0x55,WinCapabilityInternetClientServerSid = 0x56,WinCapabilityPrivateNetworkClientServerSid = 0x57,WinCapabilityPicturesLibrarySid = 0x58,WinCapabilityVideosLibrarySid = 0x59,WinCapabilityMusicLibrarySid = 0x5A,WinCapabilityDocumentsLibrarySid = 0x5B,WinCapabilitySharedUserCertificatesSid = 0x5C,WinCapabilityEnterpriseAuthenticationSid = 0x5D,WinCapabilityRemovableStorageSid = 0x5E,WinBuiltinRDSRemoteAccessServersSid = 0x5F,WinBuiltinRDSEndpointServersSid = 0x60,WinBuiltinRDSManagementServersSid = 0x61,WinUserModeDriversSid = 0x62,WinBuiltinHyperVAdminsSid = 0x63,WinAccountCloneableControllersSid = 0x64,WinBuiltinAccessControlAssistanceOperatorsSid = 0x65,WinBuiltinRemoteManagementUsersSid = 0x66,WinAuthenticationAuthorityAssertedSid = 0x67,WinAuthenticationServiceAssertedSid = 0x68,WinLocalAccountSid = 0x69,WinLocalAccountAndAdministratorSid = 0x6A,WinAccountProtectedUsersSid = 0x6B,};
struct _WGLSWAP {HDC hdc;UINT uiFlags;};
struct _WNDOBJ {CLIPOBJ coClient;PVOID pvConsumer;RECTL rclClient;SURFOBJ *psoOwner;};
struct _XFORM {FLOAT eM11;FLOAT eM12;FLOAT eM21;FLOAT eM22;FLOAT eDx;FLOAT eDy;};
struct _XFORML {FLOATL eM11;FLOATL eM12;FLOATL eM21;FLOATL eM22;FLOATL eDx;FLOATL eDy;};
struct _XFORMOBJ {ULONG ulReserved;};
struct _XLATEOBJ {ULONG iUniq;FLONG flXlate;USHORT iSrcType;USHORT iDstType;ULONG cEntries;ULONG *pulXlate;};
struct __JUMP_BUFFER {unsigned int Ebp;unsigned int Ebx;unsigned int Edi;unsigned int Esi;unsigned int Esp;unsigned int Eip;unsigned int Registration;unsigned int TryLevel;unsigned int Cookie;unsigned int UnwindFunc;unsigned int UnwindData[6];};
struct __lc_time_data;
typedef int __time32_t;
typedef __int64 __time64_t;
struct _devicemodeA {BYTE dmDeviceName[32];WORD dmSpecVersion;WORD dmDriverVersion;WORD dmSize;WORD dmDriverExtra;DWORD dmFields;union {struct {__int16 dmOrientation;__int16 dmPaperSize;__int16 dmPaperLength;__int16 dmPaperWidth;__int16 dmScale;__int16 dmCopies;__int16 dmDefaultSource;__int16 dmPrintQuality;};struct {POINTL dmPosition;DWORD dmDisplayOrientation;DWORD dmDisplayFixedOutput;};};__int16 dmColor;__int16 dmDuplex;__int16 dmYResolution;__int16 dmTTOption;__int16 dmCollate;BYTE dmFormName[32];WORD dmLogPixels;DWORD dmBitsPerPel;DWORD dmPelsWidth;DWORD dmPelsHeight;union {DWORD dmDisplayFlags;DWORD dmNup;};DWORD dmDisplayFrequency;DWORD dmICMMethod;DWORD dmICMIntent;DWORD dmMediaType;DWORD dmDitherType;DWORD dmReserved1;DWORD dmReserved2;DWORD dmPanningWidth;DWORD dmPanningHeight;};
union _devicemodeA::$4FBEBCCE69364E072421C9DF045BB77C {DWORD dmDisplayFlags;DWORD dmNup;};
union _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7 {struct {__int16 dmOrientation;__int16 dmPaperSize;__int16 dmPaperLength;__int16 dmPaperWidth;__int16 dmScale;__int16 dmCopies;__int16 dmDefaultSource;__int16 dmPrintQuality;};struct {POINTL dmPosition;DWORD dmDisplayOrientation;DWORD dmDisplayFixedOutput;};};
struct _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7::$604F2BC6924E02F5722A52FC79BC44F9 {POINTL dmPosition;DWORD dmDisplayOrientation;DWORD dmDisplayFixedOutput;};
struct _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7::$A4EE175A7532F35C00DA5CAD042934DF {__int16 dmOrientation;__int16 dmPaperSize;__int16 dmPaperLength;__int16 dmPaperWidth;__int16 dmScale;__int16 dmCopies;__int16 dmDefaultSource;__int16 dmPrintQuality;};
struct _devicemodeW {WCHAR dmDeviceName[32];WORD dmSpecVersion;WORD dmDriverVersion;WORD dmSize;WORD dmDriverExtra;DWORD dmFields;union {struct {__int16 dmOrientation;__int16 dmPaperSize;__int16 dmPaperLength;__int16 dmPaperWidth;__int16 dmScale;__int16 dmCopies;__int16 dmDefaultSource;__int16 dmPrintQuality;};struct {POINTL dmPosition;DWORD dmDisplayOrientation;DWORD dmDisplayFixedOutput;};};__int16 dmColor;__int16 dmDuplex;__int16 dmYResolution;__int16 dmTTOption;__int16 dmCollate;WCHAR dmFormName[32];WORD dmLogPixels;DWORD dmBitsPerPel;DWORD dmPelsWidth;DWORD dmPelsHeight;union {DWORD dmDisplayFlags;DWORD dmNup;};DWORD dmDisplayFrequency;DWORD dmICMMethod;DWORD dmICMIntent;DWORD dmMediaType;DWORD dmDitherType;DWORD dmReserved1;DWORD dmReserved2;DWORD dmPanningWidth;DWORD dmPanningHeight;};
union _devicemodeW::$4FBEBCCE69364E072421C9DF045BB77C {DWORD dmDisplayFlags;DWORD dmNup;};
union _devicemodeW::$5A39A2C3BB0B1D2D5888DFEE2BA0B23C {struct {__int16 dmOrientation;__int16 dmPaperSize;__int16 dmPaperLength;__int16 dmPaperWidth;__int16 dmScale;__int16 dmCopies;__int16 dmDefaultSource;__int16 dmPrintQuality;};struct {POINTL dmPosition;DWORD dmDisplayOrientation;DWORD dmDisplayFixedOutput;};};
struct _devicemodeW::$5A39A2C3BB0B1D2D5888DFEE2BA0B23C::$604F2BC6924E02F5722A52FC79BC44F9 {POINTL dmPosition;DWORD dmDisplayOrientation;DWORD dmDisplayFixedOutput;};
struct _devicemodeW::$5A39A2C3BB0B1D2D5888DFEE2BA0B23C::$A4EE175A7532F35C00DA5CAD042934DF {__int16 dmOrientation;__int16 dmPaperSize;__int16 dmPaperLength;__int16 dmPaperWidth;__int16 dmScale;__int16 dmCopies;__int16 dmDefaultSource;__int16 dmPrintQuality;};
struct _iobuf {char *_ptr;int _cnt;char *_base;int _flag;int _file;int _charbuf;int _bufsiz;char *_tmpfname;};
typedef struct localeinfo_struct *_locale_t;
typedef struct localeinfo_struct _locale_tstruct;
typedef __int64 _off64_t;
typedef int _off_t;
typedef int errcode;
typedef int errno_t;
typedef __int64 fpos_t;
struct in6_addr {union in6_addr::$6F0816B860EA11CA8E788AEE35731DB2 u;};
union in6_addr::$6F0816B860EA11CA8E788AEE35731DB2 {UCHAR Byte[16];USHORT Word[8];};
struct in_addr {union in_addr::$4F64C6817212FE4AF89030399F21EE2D S_un;};
union in_addr::$4F64C6817212FE4AF89030399F21EE2D {struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$F085A1F6735C7CEA9C650424FAF692B1 S_un_b;struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$B9D7529FFD1842B2B059BD2E926FB2C5 S_un_w;ULONG S_addr;};
struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$B9D7529FFD1842B2B059BD2E926FB2C5 {USHORT s_w1;USHORT s_w2;};
struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$F085A1F6735C7CEA9C650424FAF692B1 {UCHAR s_b1;UCHAR s_b2;UCHAR s_b3;UCHAR s_b4;};
typedef int intptr_t;
typedef int jmp_buf[16];
struct localeinfo_struct {pthreadlocinfo locinfo;pthreadmbcinfo mbcinfo;};
typedef __int64 off64_t;
typedef int off_t;
typedef struct threadlocaleinfostruct *pthreadlocinfo;
typedef struct threadmbcinfostruct *pthreadmbcinfo;
typedef int ptrdiff_t;
typedef unsigned int size_t;
struct tagABORTPATH {EMR emr;};
struct tagBITMAP {LONG bmType;LONG bmWidth;LONG bmHeight;LONG bmWidthBytes;WORD bmPlanes;WORD bmBitsPixel;LPVOID bmBits;};
struct tagBITMAPCOREHEADER {DWORD bcSize;WORD bcWidth;WORD bcHeight;WORD bcPlanes;WORD bcBitCount;};
struct tagBITMAPFILEHEADER {WORD bfType;DWORD bfSize;WORD bfReserved1;WORD bfReserved2;DWORD bfOffBits;};
struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader;RGBQUAD bmiColors[1];};
struct tagBITMAPINFOHEADER {DWORD biSize;LONG biWidth;LONG biHeight;WORD biPlanes;WORD biBitCount;DWORD biCompression;DWORD biSizeImage;LONG biXPelsPerMeter;LONG biYPelsPerMeter;DWORD biClrUsed;DWORD biClrImportant;};
struct tagCDDDXGK_REDIRBITMAPPRESENTINFO {UINT NumDirtyRects;PRECT DirtyRect;UINT NumContexts;HANDLE hContext[65];};
struct tagCHARSETINFO {UINT ciCharset;UINT ciACP;FONTSIGNATURE fs;};
struct tagCIEXYZ {FXPT2DOT30 ciexyzX;FXPT2DOT30 ciexyzY;FXPT2DOT30 ciexyzZ;};
struct tagCIEXYZTRIPLE {CIEXYZ ciexyzRed;CIEXYZ ciexyzGreen;CIEXYZ ciexyzBlue;};
struct tagCOLORADJUSTMENT {WORD caSize;WORD caFlags;WORD caIlluminantIndex;WORD caRedGamma;WORD caGreenGamma;WORD caBlueGamma;WORD caReferenceBlack;WORD caReferenceWhite;SHORT caContrast;SHORT caBrightness;SHORT caColorfulness;SHORT caRedGreenTint;};
struct tagDDDEVICEIDENTIFIER {char szDriver[512];char szDescription[512];LARGE_INTEGER liDriverVersion;DWORD dwVendorId;DWORD dwDeviceId;DWORD dwSubSysId;DWORD dwRevision;GUID guidDeviceIdentifier;};
struct tagDDDEVICEIDENTIFIER2 {char szDriver[512];char szDescription[512];LARGE_INTEGER liDriverVersion;DWORD dwVendorId;DWORD dwDeviceId;DWORD dwSubSysId;DWORD dwRevision;GUID guidDeviceIdentifier;DWORD dwWHQLLevel;};
struct tagDIBSECTION {BITMAP dsBm;BITMAPINFOHEADER dsBmih;DWORD dsBitfields[3];HANDLE dshSection;DWORD dsOffset;};
struct tagDRVENABLEDATA {ULONG iDriverVersion;ULONG c;DRVFN *pdrvfn;};
struct tagEMR {DWORD iType;DWORD nSize;};
struct tagEMRALPHABLEND {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG cxSrc;LONG cySrc;};
struct tagEMRANGLEARC {EMR emr;POINTL ptlCenter;DWORD nRadius;FLOAT eStartAngle;FLOAT eSweepAngle;};
struct tagEMRARC {EMR emr;RECTL rclBox;POINTL ptlStart;POINTL ptlEnd;};
struct tagEMRBITBLT {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;};
struct tagEMRCREATEBRUSHINDIRECT {EMR emr;DWORD ihBrush;LOGBRUSH32 lb;};
struct tagEMRCREATECOLORSPACE {EMR emr;DWORD ihCS;LOGCOLORSPACEA lcs;};
struct tagEMRCREATECOLORSPACEW {EMR emr;DWORD ihCS;LOGCOLORSPACEW lcs;DWORD dwFlags;DWORD cbData;BYTE Data[1];};
struct tagEMRCREATEDIBPATTERNBRUSHPT {EMR emr;DWORD ihBrush;DWORD iUsage;DWORD offBmi;DWORD cbBmi;DWORD offBits;DWORD cbBits;};
struct tagEMRCREATEMONOBRUSH {EMR emr;DWORD ihBrush;DWORD iUsage;DWORD offBmi;DWORD cbBmi;DWORD offBits;DWORD cbBits;};
struct tagEMRCREATEPALETTE {EMR emr;DWORD ihPal;LOGPALETTE lgpl;};
struct tagEMRCREATEPEN {EMR emr;DWORD ihPen;LOGPEN lopn;};
struct tagEMRELLIPSE {EMR emr;RECTL rclBox;};
struct tagEMREOF {EMR emr;DWORD nPalEntries;DWORD offPalEntries;DWORD nSizeLast;};
struct tagEMREXCLUDECLIPRECT {EMR emr;RECTL rclClip;};
struct tagEMREXTCREATEFONTINDIRECTW {EMR emr;DWORD ihFont;EXTLOGFONTW elfw;};
struct tagEMREXTCREATEPEN {EMR emr;DWORD ihPen;DWORD offBmi;DWORD cbBmi;DWORD offBits;DWORD cbBits;EXTLOGPEN elp;};
struct tagEMREXTFLOODFILL {EMR emr;POINTL ptlStart;COLORREF crColor;DWORD iMode;};
struct tagEMREXTSELECTCLIPRGN {EMR emr;DWORD cbRgnData;DWORD iMode;BYTE RgnData[1];};
struct tagEMREXTTEXTOUTA {EMR emr;RECTL rclBounds;DWORD iGraphicsMode;FLOAT exScale;FLOAT eyScale;EMRTEXT emrtext;};
struct tagEMRFILLPATH {EMR emr;RECTL rclBounds;};
struct tagEMRFILLRGN {EMR emr;RECTL rclBounds;DWORD cbRgnData;DWORD ihBrush;BYTE RgnData[1];};
struct tagEMRFORMAT {DWORD dSignature;DWORD nVersion;DWORD cbData;DWORD offData;};
struct tagEMRFRAMERGN {EMR emr;RECTL rclBounds;DWORD cbRgnData;DWORD ihBrush;SIZEL szlStroke;BYTE RgnData[1];};
struct tagEMRGDICOMMENT {EMR emr;DWORD cbData;BYTE Data[1];};
struct tagEMRGLSBOUNDEDRECORD {EMR emr;RECTL rclBounds;DWORD cbData;BYTE Data[1];};
struct tagEMRGLSRECORD {EMR emr;DWORD cbData;BYTE Data[1];};
struct tagEMRGRADIENTFILL {EMR emr;RECTL rclBounds;DWORD nVer;DWORD nTri;ULONG ulMode;TRIVERTEX Ver[1];};
struct tagEMRINVERTRGN {EMR emr;RECTL rclBounds;DWORD cbRgnData;BYTE RgnData[1];};
struct tagEMRLINETO {EMR emr;POINTL ptl;};
struct tagEMRMASKBLT {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG xMask;LONG yMask;DWORD iUsageMask;DWORD offBmiMask;DWORD cbBmiMask;DWORD offBitsMask;DWORD cbBitsMask;};
struct tagEMRMODIFYWORLDTRANSFORM {EMR emr;XFORM xform;DWORD iMode;};
struct tagEMROFFSETCLIPRGN {EMR emr;POINTL ptlOffset;};
struct tagEMRPIXELFORMAT {EMR emr;PIXELFORMATDESCRIPTOR pfd;};
struct tagEMRPLGBLT {EMR emr;RECTL rclBounds;POINTL aptlDest[3];LONG xSrc;LONG ySrc;LONG cxSrc;LONG cySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG xMask;LONG yMask;DWORD iUsageMask;DWORD offBmiMask;DWORD cbBmiMask;DWORD offBitsMask;DWORD cbBitsMask;};
struct tagEMRPOLYDRAW {EMR emr;RECTL rclBounds;DWORD cptl;POINTL aptl[1];BYTE abTypes[1];};
struct tagEMRPOLYDRAW16 {EMR emr;RECTL rclBounds;DWORD cpts;POINTS apts[1];BYTE abTypes[1];};
struct tagEMRPOLYLINE {EMR emr;RECTL rclBounds;DWORD cptl;POINTL aptl[1];};
struct tagEMRPOLYLINE16 {EMR emr;RECTL rclBounds;DWORD cpts;POINTS apts[1];};
struct tagEMRPOLYPOLYLINE {EMR emr;RECTL rclBounds;DWORD nPolys;DWORD cptl;DWORD aPolyCounts[1];POINTL aptl[1];};
struct tagEMRPOLYPOLYLINE16 {EMR emr;RECTL rclBounds;DWORD nPolys;DWORD cpts;DWORD aPolyCounts[1];POINTS apts[1];};
struct tagEMRPOLYTEXTOUTA {EMR emr;RECTL rclBounds;DWORD iGraphicsMode;FLOAT exScale;FLOAT eyScale;LONG cStrings;EMRTEXT aemrtext[1];};
struct tagEMRRESIZEPALETTE {EMR emr;DWORD ihPal;DWORD cEntries;};
struct tagEMRRESTOREDC {EMR emr;LONG iRelative;};
struct tagEMRROUNDRECT {EMR emr;RECTL rclBox;SIZEL szlCorner;};
struct tagEMRSCALEVIEWPORTEXTEX {EMR emr;LONG xNum;LONG xDenom;LONG yNum;LONG yDenom;};
struct tagEMRSELECTCLIPPATH {EMR emr;DWORD iMode;};
struct tagEMRSELECTOBJECT {EMR emr;DWORD ihObject;};
struct tagEMRSELECTPALETTE {EMR emr;DWORD ihPal;};
struct tagEMRSETARCDIRECTION {EMR emr;DWORD iArcDirection;};
struct tagEMRSETCOLORADJUSTMENT {EMR emr;COLORADJUSTMENT ColorAdjustment;};
struct tagEMRSETCOLORSPACE {EMR emr;DWORD ihCS;};
struct tagEMRSETDIBITSTODEVICE {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG xSrc;LONG ySrc;LONG cxSrc;LONG cySrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;DWORD iUsageSrc;DWORD iStartScan;DWORD cScans;};
struct tagEMRSETMAPPERFLAGS {EMR emr;DWORD dwFlags;};
struct tagEMRSETMITERLIMIT {EMR emr;FLOAT eMiterLimit;};
struct tagEMRSETPALETTEENTRIES {EMR emr;DWORD ihPal;DWORD iStart;DWORD cEntries;PALETTEENTRY aPalEntries[1];};
struct tagEMRSETPIXELV {EMR emr;POINTL ptlPixel;COLORREF crColor;};
struct tagEMRSETTEXTCOLOR {EMR emr;COLORREF crColor;};
struct tagEMRSETVIEWPORTEXTEX {EMR emr;SIZEL szlExtent;};
struct tagEMRSETVIEWPORTORGEX {EMR emr;POINTL ptlOrigin;};
struct tagEMRSETWORLDTRANSFORM {EMR emr;XFORM xform;};
struct tagEMRSTRETCHBLT {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG cxSrc;LONG cySrc;};
struct tagEMRSTRETCHDIBITS {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG xSrc;LONG ySrc;LONG cxSrc;LONG cySrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;DWORD iUsageSrc;DWORD dwRop;LONG cxDest;LONG cyDest;};
struct tagEMRTEXT {POINTL ptlReference;DWORD nChars;DWORD offString;DWORD fOptions;RECTL rcl;DWORD offDx;};
struct tagENHMETAHEADER {DWORD iType;DWORD nSize;RECTL rclBounds;RECTL rclFrame;DWORD dSignature;DWORD nVersion;DWORD nBytes;DWORD nRecords;WORD nHandles;WORD sReserved;DWORD nDescription;DWORD offDescription;DWORD nPalEntries;SIZEL szlDevice;SIZEL szlMillimeters;DWORD cbPixelFormat;DWORD offPixelFormat;DWORD bOpenGL;SIZEL szlMicrometers;};
struct tagENHMETARECORD {DWORD iType;DWORD nSize;DWORD dParm[1];};
struct tagENUMLOGFONTA {LOGFONTA elfLogFont;BYTE elfFullName[64];BYTE elfStyle[32];};
struct tagENUMLOGFONTEXA {LOGFONTA elfLogFont;BYTE elfFullName[64];BYTE elfStyle[32];BYTE elfScript[32];};
struct tagENUMLOGFONTEXDVA {ENUMLOGFONTEXA elfEnumLogfontEx;DESIGNVECTOR elfDesignVector;};
struct tagENUMLOGFONTEXDVW {ENUMLOGFONTEXW elfEnumLogfontEx;DESIGNVECTOR elfDesignVector;};
struct tagENUMLOGFONTEXW {LOGFONTW elfLogFont;WCHAR elfFullName[64];WCHAR elfStyle[32];WCHAR elfScript[32];};
struct tagENUMLOGFONTW {LOGFONTW elfLogFont;WCHAR elfFullName[64];WCHAR elfStyle[32];};
struct tagEXTLOGFONTA {LOGFONTA elfLogFont;BYTE elfFullName[64];BYTE elfStyle[32];DWORD elfVersion;DWORD elfStyleSize;DWORD elfMatch;DWORD elfReserved;BYTE elfVendorId[4];DWORD elfCulture;PANOSE elfPanose;};
struct tagEXTLOGFONTW {LOGFONTW elfLogFont;WCHAR elfFullName[64];WCHAR elfStyle[32];DWORD elfVersion;DWORD elfStyleSize;DWORD elfMatch;DWORD elfReserved;BYTE elfVendorId[4];DWORD elfCulture;PANOSE elfPanose;};
struct tagEXTLOGPEN {DWORD elpPenStyle;DWORD elpWidth;UINT elpBrushStyle;COLORREF elpColor;ULONG_PTR elpHatch;DWORD elpNumEntries;DWORD elpStyleEntry[1];};
struct tagFLOATOBJ_XFORM {FLOATOBJ eM11;FLOATOBJ eM12;FLOATOBJ eM21;FLOATOBJ eM22;FLOATOBJ eDx;FLOATOBJ eDy;};
struct tagFONTSIGNATURE {DWORD fsUsb[4];DWORD fsCsb[2];};
struct tagGCP_RESULTSA {DWORD lStructSize;LPSTR lpOutString;UINT *lpOrder;INT *lpDx;INT *lpCaretPos;LPSTR lpClass;LPWSTR lpGlyphs;UINT nGlyphs;UINT nMaxFit;};
struct tagGCP_RESULTSW {DWORD lStructSize;LPWSTR lpOutString;UINT *lpOrder;INT *lpDx;INT *lpCaretPos;LPWSTR lpClass;LPWSTR lpGlyphs;UINT nGlyphs;UINT nMaxFit;};
struct tagGLYPHSET {DWORD cbThis;DWORD flAccel;DWORD cGlyphsSupported;DWORD cRanges;WCRANGE ranges[1];};
struct tagHANDLETABLE {HGDIOBJ objectHandle[1];};
struct tagKERNINGPAIR {WORD wFirst;WORD wSecond;int iKernAmount;};
struct tagLAYERPLANEDESCRIPTOR {WORD nSize;WORD nVersion;DWORD dwFlags;BYTE iPixelType;BYTE cColorBits;BYTE cRedBits;BYTE cRedShift;BYTE cGreenBits;BYTE cGreenShift;BYTE cBlueBits;BYTE cBlueShift;BYTE cAlphaBits;BYTE cAlphaShift;BYTE cAccumBits;BYTE cAccumRedBits;BYTE cAccumGreenBits;BYTE cAccumBlueBits;BYTE cAccumAlphaBits;BYTE cDepthBits;BYTE cStencilBits;BYTE cAuxBuffers;BYTE iLayerPlane;BYTE bReserved;COLORREF crTransparent;};
struct tagLC_ID {unsigned __int16 wLanguage;unsigned __int16 wCountry;unsigned __int16 wCodePage;};
struct tagLOCALESIGNATURE {DWORD lsUsb[4];DWORD lsCsbDefault[2];DWORD lsCsbSupported[2];};
struct tagLOGBRUSH {UINT lbStyle;COLORREF lbColor;ULONG_PTR lbHatch;};
struct tagLOGBRUSH32 {UINT lbStyle;COLORREF lbColor;ULONG lbHatch;};
struct tagLOGCOLORSPACEA {DWORD lcsSignature;DWORD lcsVersion;DWORD lcsSize;LCSCSTYPE lcsCSType;LCSGAMUTMATCH lcsIntent;CIEXYZTRIPLE lcsEndpoints;DWORD lcsGammaRed;DWORD lcsGammaGreen;DWORD lcsGammaBlue;CHAR lcsFilename[260];};
struct tagLOGCOLORSPACEW {DWORD lcsSignature;DWORD lcsVersion;DWORD lcsSize;LCSCSTYPE lcsCSType;LCSGAMUTMATCH lcsIntent;CIEXYZTRIPLE lcsEndpoints;DWORD lcsGammaRed;DWORD lcsGammaGreen;DWORD lcsGammaBlue;WCHAR lcsFilename[260];};
struct tagLOGFONTA {LONG lfHeight;LONG lfWidth;LONG lfEscapement;LONG lfOrientation;LONG lfWeight;BYTE lfItalic;BYTE lfUnderline;BYTE lfStrikeOut;BYTE lfCharSet;BYTE lfOutPrecision;BYTE lfClipPrecision;BYTE lfQuality;BYTE lfPitchAndFamily;CHAR lfFaceName[32];};
struct tagLOGFONTW {LONG lfHeight;LONG lfWidth;LONG lfEscapement;LONG lfOrientation;LONG lfWeight;BYTE lfItalic;BYTE lfUnderline;BYTE lfStrikeOut;BYTE lfCharSet;BYTE lfOutPrecision;BYTE lfClipPrecision;BYTE lfQuality;BYTE lfPitchAndFamily;WCHAR lfFaceName[32];};
struct tagLOGPALETTE {WORD palVersion;WORD palNumEntries;PALETTEENTRY palPalEntry[1];};
struct tagLOGPEN {UINT lopnStyle;POINT lopnWidth;COLORREF lopnColor;};
struct tagMETAFILEPICT {LONG mm;LONG xExt;LONG yExt;HMETAFILE hMF;};
struct tagMETAHEADER {WORD mtType;WORD mtHeaderSize;WORD mtVersion;DWORD mtSize;WORD mtNoObjects;DWORD mtMaxRecord;WORD mtNoParameters;};
struct tagMETARECORD {DWORD rdSize;WORD rdFunction;WORD rdParm[1];};
struct tagNEWTEXTMETRICA {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;DWORD ntmFlags;UINT ntmSizeEM;UINT ntmCellHeight;UINT ntmAvgWidth;};
struct tagNEWTEXTMETRICEXA {NEWTEXTMETRICA ntmTm;FONTSIGNATURE ntmFontSig;};
struct tagNEWTEXTMETRICEXW {NEWTEXTMETRICW ntmTm;FONTSIGNATURE ntmFontSig;};
struct tagNEWTEXTMETRICW {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;WCHAR tmFirstChar;WCHAR tmLastChar;WCHAR tmDefaultChar;WCHAR tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;DWORD ntmFlags;UINT ntmSizeEM;UINT ntmCellHeight;UINT ntmAvgWidth;};
struct tagPALETTEENTRY {BYTE peRed;BYTE peGreen;BYTE peBlue;BYTE peFlags;};
struct tagPANOSE {BYTE bFamilyType;BYTE bSerifStyle;BYTE bWeight;BYTE bProportion;BYTE bContrast;BYTE bStrokeVariation;BYTE bArmStyle;BYTE bLetterform;BYTE bMidline;BYTE bXHeight;};
struct tagPELARRAY {LONG paXCount;LONG paYCount;LONG paXExt;LONG paYExt;BYTE paRGBs;};
struct tagPIXELFORMATDESCRIPTOR {WORD nSize;WORD nVersion;DWORD dwFlags;BYTE iPixelType;BYTE cColorBits;BYTE cRedBits;BYTE cRedShift;BYTE cGreenBits;BYTE cGreenShift;BYTE cBlueBits;BYTE cBlueShift;BYTE cAlphaBits;BYTE cAlphaShift;BYTE cAccumBits;BYTE cAccumRedBits;BYTE cAccumGreenBits;BYTE cAccumBlueBits;BYTE cAccumAlphaBits;BYTE cDepthBits;BYTE cStencilBits;BYTE cAuxBuffers;BYTE iLayerType;BYTE bReserved;DWORD dwLayerMask;DWORD dwVisibleMask;DWORD dwDamageMask;};
struct tagPOINT {LONG x;LONG y;};
struct tagPOINTFX {FIXED x;FIXED y;};
struct tagPOINTS {SHORT x;SHORT y;};
struct tagRECT {LONG left;LONG top;LONG right;LONG bottom;};
struct tagRGBQUAD {BYTE rgbBlue;BYTE rgbGreen;BYTE rgbRed;BYTE rgbReserved;};
struct tagRGBTRIPLE {BYTE rgbtBlue;BYTE rgbtGreen;BYTE rgbtRed;};
struct tagSIZE {LONG cx;LONG cy;};
struct tagSTATSTG;
struct tagTEXTMETRICA {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;};
struct tagTEXTMETRICW {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;WCHAR tmFirstChar;WCHAR tmLastChar;WCHAR tmDefaultChar;WCHAR tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;};
struct tagTTPOLYCURVE {WORD wType;WORD cpfx;POINTFX apfx[1];};
struct tagTTPOLYGONHEADER {DWORD cb;DWORD dwType;POINTFX pfxStart;};
struct tagWCRANGE {WCHAR wcLow;USHORT cGlyphs;};
struct threadlocaleinfostruct {int refcount;unsigned int lc_codepage;unsigned int lc_collate_cp;unsigned int lc_handle[6];LC_ID lc_id[6];struct threadlocaleinfostruct::$F0551D0CB09E7A078CAEF7CAC43D74C7 lc_category[6];int lc_clike;int mb_cur_max;int *lconv_intl_refcount;int *lconv_num_refcount;int *lconv_mon_refcount;struct lconv *lconv;int *ctype1_refcount;unsigned __int16 *ctype1;const unsigned __int16 *pctype;const unsigned __int8 *pclmap;const unsigned __int8 *pcumap;struct __lc_time_data *lc_time_curr;};
struct threadlocaleinfostruct::$F0551D0CB09E7A078CAEF7CAC43D74C7 {char *locale;wchar_t *wlocale;int *refcount;int *wrefcount;};
typedef struct threadlocaleinfostruct threadlocinfo;
struct threadmbcinfostruct;
typedef __time64_t time_t;
typedef unsigned int uintptr_t;
typedef char *va_list;
typedef unsigned __int16 wchar_t;
typedef unsigned __int16 wctype_t;
typedef unsigned __int16 wint_t;

LONG __fastcall InterlockedCompareExchange(volatile LONG *Destination, LONG Exchange, LONG Comperand);
LONG __fastcall InterlockedDecrement(volatile LONG *lpAddend);
LONG __fastcall InterlockedExchange(volatile LONG *Target, LONG Value);
LONG __fastcall InterlockedExchangeAdd(volatile LONG *Addend, LONG Value);
LONG __fastcall InterlockedIncrement(volatile LONG *lpAddend);
PSINGLE_LIST_ENTRY __fastcall InterlockedPushListSList(PSLIST_HEADER ListHead, PSINGLE_LIST_ENTRY List, PSINGLE_LIST_ENTRY ListEnd, ULONG Count);
PRTL_ACTIVATION_CONTEXT_STACK_FRAME __fastcall RtlActivateActivationContextUnsafeFast(PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED Frame, PVOID Context);
PRTL_ACTIVATION_CONTEXT_STACK_FRAME __fastcall RtlDeactivateActivationContextUnsafeFast(PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED Frame);
PSINGLE_LIST_ENTRY __fastcall RtlInterlockedPushListSList(PSLIST_HEADER SListHead, PSINGLE_LIST_ENTRY List, PSINGLE_LIST_ENTRY ListEnd, ULONG Count);
ULONG __fastcall RtlUlongByteSwap(ULONG Source);
ULONGLONG __fastcall RtlUlonglongByteSwap(ULONGLONG Source);
USHORT __fastcall RtlUshortByteSwap(USHORT Source);
MACRO_NEWFRAME ABORTDOC;
MACRO_ABSOLUTE ABSOLUTE;
MACRO_ACCESS ACCESS_ALLOWED_ACE_TYPE;
MACRO_ACCESS_MAX ACCESS_ALLOWED_CALLBACK_ACE_TYPE;
MACRO_ACCESS_MAX ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_ALLOWED_COMPOUND_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_ALLOWED_OBJECT_ACE_TYPE;
MACRO_ACCESS ACCESS_DENIED_ACE_TYPE;
MACRO_ACCESS_MAX ACCESS_DENIED_CALLBACK_ACE_TYPE;
MACRO_ACCESS_MAX ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_DENIED_OBJECT_ACE_TYPE;
MACRO_ACCESS_OBJECT ACCESS_MAX_LEVEL;
MACRO_ACCESS_MAX ACCESS_MAX_MS_ACE_TYPE;
MACRO_ACCESS_MAX ACCESS_MAX_MS_OBJECT_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_MAX_MS_V2_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_MAX_MS_V3_ACE_TYPE;
MACRO_ACCESS_MAX ACCESS_MAX_MS_V4_ACE_TYPE;
MACRO_ACE_TYPE ACCESS_MAX_MS_V5_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_MIN_MS_ACE_TYPE;
MACRO_ACCESS_MIN ACCESS_MIN_MS_OBJECT_ACE_TYPE;
MACRO_ACCESS_OBJECT ACCESS_OBJECT_GUID;
MACRO_ACCESS_OBJECT ACCESS_PROPERTY_GUID;
MACRO_ACCESS_OBJECT ACCESS_PROPERTY_SET_GUID;
MACRO_ACCESS_REASON ACCESS_REASON_DATA_MASK;
MACRO_ACCESS_REASON ACCESS_REASON_TYPE_MASK;
MACRO_ACCESS_SYSTEM ACCESS_SYSTEM_SECURITY;
MACRO_ACE ACE_INHERITED_OBJECT_TYPE_PRESENT;
MACRO_ACE ACE_OBJECT_TYPE_PRESENT;
MACRO_ACL ACL_REVISION;
MACRO_ACL ACL_REVISION1;
MACRO_ACL ACL_REVISION2;
MACRO_ACL ACL_REVISION3;
MACRO_ACL ACL_REVISION4;
MACRO_ACL ACL_REVISION_DS;
$8166B8857E7CD08BCB1E0D6C8F56BCBA ACTCTX_RUN_LEVEL_AS_INVOKER;
$8166B8857E7CD08BCB1E0D6C8F56BCBA ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE;
$8166B8857E7CD08BCB1E0D6C8F56BCBA ACTCTX_RUN_LEVEL_NUMBERS;
$8166B8857E7CD08BCB1E0D6C8F56BCBA ACTCTX_RUN_LEVEL_REQUIRE_ADMIN;
$8166B8857E7CD08BCB1E0D6C8F56BCBA ACTCTX_RUN_LEVEL_UNSPECIFIED;
$15254BC33B7AD9AC47C3F32E846C6A31 ACTCX_COMPATIBILITY_ELEMENT_TYPE_OS;
$15254BC33B7AD9AC47C3F32E846C6A31 ACTCX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN;
MACRO_ACTIVATION_CONTEXT ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF;
MACRO_ACTIVATION_CONTEXT ACTIVATION_CONTEXT_PATH_TYPE_NONE;
MACRO_ACTIVATION_CONTEXT ACTIVATION_CONTEXT_PATH_TYPE_URL;
MACRO_ACTIVATION_CONTEXT ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION;
MACRO_ACTIVATION_CONTEXT ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE;
MACRO_ACTIVATION ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION;
MACRO_AC AC_SRC_ALPHA;
MACRO_AC AC_SRC_OVER;
MACRO_ADDRESS ADDRESS_TAG_BIT;
MACRO_AD AD_CLOCKWISE;
MACRO_AD AD_COUNTERCLOCKWISE;
MACRO_ALL ALL_PROCESSOR_GROUPS;
MACRO_ALTERNATE ALTERNATE;
MACRO_CHARSET ANSI_CHARSET;
MACRO_ANSI_FIXED ANSI_FIXED_FONT;
MACRO_ANSI ANSI_NULL;
MACRO_ANSI_FIXED ANSI_VAR_FONT;
MACRO_QUALITY ANTIALIASED_QUALITY;
MACRO_ANYSIZE ANYSIZE_ARRAY;
MACRO_APPLICATION APPLICATION_ERROR_MASK;
MACRO_APPMODEL APPMODEL_ERROR_NO_APPLICATION;
MACRO_APPMODEL APPMODEL_ERROR_NO_PACKAGE;
MACRO_APPMODEL APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT;
MACRO_APPMODEL APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT;
MACRO_CHARSET ARABIC_CHARSET;
MACRO_NUMMARKERS ASPECTX;
MACRO_ASPECTXY ASPECTXY;
MACRO_ASPECTY ASPECTY;
MACRO_ASPECT ASPECT_FILTERING;
MACRO_AT AT_ROUND_TO_PAGE;
MACRO_AUDIT AUDIT_ALLOW_NO_PRIVILEGE;
INT __stdcall AbortDoc(HDC hdc);
BOOL __stdcall AbortPath(HDC hdc);
_ACCESS_REASON_TYPE AccessReasonAllowedAce;
_ACCESS_REASON_TYPE AccessReasonAllowedParentAce;
_ACCESS_REASON_TYPE AccessReasonDeniedAce;
_ACCESS_REASON_TYPE AccessReasonDeniedParentAce;
_ACCESS_REASON_TYPE AccessReasonEmptyDacl;
_ACCESS_REASON_TYPE AccessReasonFromPrivilege;
_ACCESS_REASON_TYPE AccessReasonIntegrityLevel;
_ACCESS_REASON_TYPE AccessReasonMissingPrivilege;
_ACCESS_REASON_TYPE AccessReasonNoGrant;
_ACCESS_REASON_TYPE AccessReasonNoSD;
_ACCESS_REASON_TYPE AccessReasonNone;
_ACCESS_REASON_TYPE AccessReasonNullDacl;
_ACCESS_REASON_TYPE AccessReasonOwnership;
_ACL_INFORMATION_CLASS AclRevisionInformation;
_ACL_INFORMATION_CLASS AclSizeInformation;
_ACTIVATION_CONTEXT_INFO_CLASS ActivationContextBasicInformation;
_ACTIVATION_CONTEXT_INFO_CLASS ActivationContextDetailedInformation;
_ACTIVATION_CONTEXT_INFO_CLASS ActivationContextManifestResourceName;
_MMLISTS ActiveAndValid;
_CM_SERVICE_NODE_TYPE AdapterType;
HANDLE __stdcall AddFontMemResourceEx(PVOID pvFileView, DWORD cjSize, PVOID pvResrved, DWORD *pNumFonts);
int __stdcall AddFontResourceA(LPCSTR pszFilename);
INT __stdcall AddFontResourceExA(LPCSTR pszFilename, DWORD fl, PVOID pvReserved);
INT __stdcall AddFontResourceExW(LPCWSTR pszFilename, DWORD fl, PVOID pvReserved);
int __stdcall AddFontResourceW(LPCWSTR pszFilename);
_ADJUST_REASON AdjustBoost;
_ADJUST_REASON AdjustNone;
_ADJUST_REASON AdjustUnwait;
_POWER_INFORMATION_LEVEL AdministratorPowerPolicy;
_APPCOMPAT_USERFLAGS AllTheDdeHacks;
BOOL __stdcall AlphaBlend(HDC, int, int, int, int, HDC, int, int, int, int, BLENDFUNCTION);
_APPCOMPAT_USERFLAGS AlwaysActiveMenus;
BOOL __stdcall AngleArc(HDC hdc, INT x, INT y, DWORD dwRadius, FLOAT eStartAngle, FLOAT eSweepAngle);
BOOL __stdcall AnimatePalette(HPALETTE hPal, UINT iStartIndex, UINT cEntries, const PALETTEENTRY *ppe);
_KOBJECTS ApcObject;
_APPHELPCACHESERVICECLASS ApphelpCacheServiceDump;
_APPHELPCACHESERVICECLASS ApphelpCacheServiceFlush;
_APPHELPCACHESERVICECLASS ApphelpCacheServiceLookup;
_APPHELPCACHESERVICECLASS ApphelpCacheServiceRemove;
_APPHELPCACHESERVICECLASS ApphelpCacheServiceUpdate;
_APPHELPCACHESERVICECLASS ApphelpDBGReadRegistry;
_APPHELPCACHESERVICECLASS ApphelpDBGWriteRegistry;
BOOL __stdcall Arc(HDC hdc, INT xLeft, INT yTop, INT xRight, INT yBottom, INT xStartArc, INT yStartArc, INT xEndArc, INT yEndArc);
BOOL __stdcall ArcTo(HDC hdc, INT xLeft, INT yTop, INT xRight, INT yBottom, INT xRadial1, INT yRadial1, INT xRadial2, INT yRadial2);
_ACTIVATION_CONTEXT_INFO_CLASS AssemblyDetailedInformationInActivationContext;
_ACTIVATION_CONTEXT_INFO_CLASS AssemblyDetailedInformationInActivationContxt;
_ATOM_INFORMATION_CLASS AtomBasicInformation;
_ATOM_INFORMATION_CLASS AtomTableInformation;
_AUDIT_EVENT_TYPE AuditEventDirectoryServiceAccess;
_AUDIT_EVENT_TYPE AuditEventObjectAccess;
_CM_SERVICE_LOAD_TYPE AutoLoad;
MACRO_CHARSET BALTIC_CHARSET;
MACRO_BANDINFO BANDINFO;
MACRO_PATH BEGIN_PATH;
MACRO_BITSPIXEL BITSPIXEL;
MACRO_BITS BITS_PER_ENTRY;
MACRO_BI BI_BITFIELDS;
MACRO_BI BI_JPEG;
MACRO_BI BI_PNG;
MACRO_BI BI_RGB;
MACRO_BI BI_RLE4;
MACRO_BI BI_RLE8;
MACRO_BKMODE BKMODE_LAST;
MACRO_BLACKNESS BLACKNESS;
MACRO_BLACKONWHITE BLACKONWHITE;
MACRO_BRUSH BLACK_BRUSH;
MACRO_PEN BLACK_PEN;
MACRO_BLTALIGNMENT BLTALIGNMENT;
MACRO_BMF BMF_16BPP;
MACRO_BMF BMF_1BPP;
MACRO_BMF BMF_24BPP;
MACRO_BMF BMF_32BPP;
MACRO_BMF BMF_4BPP;
MACRO_BMF BMF_4RLE;
MACRO_BMF BMF_8BPP;
MACRO_BMF BMF_8RLE;
MACRO_BMF_TOPDOWN BMF_ACC_NOTIFY;
MACRO_BMF_TOPDOWN BMF_DONTCACHE;
MACRO_BMF BMF_JPEG;
MACRO_BMF_TOPDOWN BMF_KMSECTION;
MACRO_BMF_TOPDOWN BMF_NOTSYSMEM;
MACRO_BMF_TOPDOWN BMF_NOZEROINIT;
MACRO_BMF BMF_PNG;
MACRO_BMF_TOPDOWN BMF_RESERVED;
MACRO_BMF_TOPDOWN BMF_RMT_ENTER;
MACRO_BMF_TOPDOWN BMF_TEMP_ALPHA;
MACRO_BMF_TOPDOWN BMF_TOPDOWN;
MACRO_BMF_TOPDOWN BMF_UMPDMEM;
MACRO_BMF_TOPDOWN BMF_USERMEM;
MACRO_BMF_TOPDOWN BMF_WINDOW_BLT;
MACRO_BREAKPOINT BREAKPOINT_BREAK;
MACRO_BREAKPOINT BREAKPOINT_COMMAND_STRING;
MACRO_BREAKPOINT BREAKPOINT_LOAD_SYMBOLS;
MACRO_BREAKPOINT BREAKPOINT_PRINT;
MACRO_BREAKPOINT BREAKPOINT_PROMPT;
MACRO_BREAKPOINT BREAKPOINT_UNLOAD_SYMBOLS;
HANDLE __stdcall BRUSHOBJ_hGetColorTransform(BRUSHOBJ *pbo);
PVOID __stdcall BRUSHOBJ_pvAllocRbrush(BRUSHOBJ *pbo, ULONG cj);
PVOID __stdcall BRUSHOBJ_pvGetRbrush(BRUSHOBJ *pbo);
ULONG __stdcall BRUSHOBJ_ulGetBrushColor(BRUSHOBJ *pbo);
MACRO_BR BR_CMYKCOLOR;
MACRO_BR BR_DEVICE_ICM;
MACRO_BR BR_HOST_ICM;
MACRO_BR BR_ORIGCOLOR;
MACRO_BS BS_DIBPATTERN;
MACRO_BS BS_DIBPATTERN8X8;
MACRO_BS BS_DIBPATTERNPT;
MACRO_BS BS_HATCHED;
MACRO_BS BS_HOLLOW;
MACRO_BS BS_INDEXED;
MACRO_BS BS_MONOPATTERN;
MACRO_BS BS_NULL;
MACRO_BS BS_PATTERN;
MACRO_BS BS_PATTERN8X8;
MACRO_BS BS_SOLID;
MACRO_BUFSIZ BUFSIZ;
_MMLISTS BadPageList;
BOOL __stdcall BeginPath(HDC hdc);
BOOL __stdcall BitBlt(HDC hdcDest, INT xDest, INT yDest, INT cxDest, INT cyDest, HDC hdcSrc, INT xSrc, INT ySrc, DWORD dwRop);
_PLUGPLAY_EVENT_CATEGORY BlockedDriverEvent;
_CM_SERVICE_LOAD_TYPE BootLoad;
MACRO_CACHE CACHE_FULLY_ASSOCIATIVE;
MACRO_CALLBACK CALLBACK_ALL_ACCESS;
MACRO_CALLBACK CALLBACK_MODIFY_STATE;
MACRO_CAPTUREBLT CAPTUREBLT;
MACRO_CA CA_LOG_FILTER;
MACRO_CA CA_NEGATIVE;
MACRO_CBM CBM_INIT;
MACRO_CBSTACK CBSTACK_CALLBACK_STACK;
MACRO_CBSTACK CBSTACK_EBP;
MACRO_CBSTACK CBSTACK_RESULT;
MACRO_CBSTACK CBSTACK_RESULT_LENGTH;
MACRO_CBSTACK CBSTACK_STACK;
MACRO_CBSTACK CBSTACK_TRAP_FRAME;
_INTERFACE_TYPE CBus;
MACRO_CCHDEVICENAME CCHDEVICENAME;
MACRO_CCHFORMNAME CCHFORMNAME;
MACRO_CC CC_CHORD;
MACRO_CC CC_CIRCLES;
MACRO_CC CC_ELLIPSES;
MACRO_CC CC_INTERIORS;
MACRO_CC CC_NONE;
MACRO_CC CC_PIE;
MACRO_CC CC_ROUNDRECT;
MACRO_CC CC_STYLED;
MACRO_CC CC_WIDE;
MACRO_CC CC_WIDESTYLED;
MACRO_CDBEX CDBEX_DXINTEROP;
MACRO_CDBEX CDBEX_REDIRECTION;
MACRO_CD CD_ANY;
MACRO_CD CD_LEFTDOWN;
MACRO_CD CD_LEFTUP;
MACRO_CD CD_LEFTWARDS;
MACRO_CD CD_RIGHTDOWN;
MACRO_CD CD_RIGHTUP;
MACRO_CD CD_UPWARDS;
MACRO_CHARSET CELTIC_CHARSET;
MACRO_CHARSET CHINESEBIG5_CHARSET;
MACRO_QUALITY CLEARTYPE_NATURAL_QUALITY;
MACRO_QUALITY CLEARTYPE_QUALITY;
MACRO_PDEVICESIZE CLIPCAPS;
HANDLE __stdcall CLIPOBJ_GetRgn(CLIPOBJ *pco);
BOOL __stdcall CLIPOBJ_bEnum(CLIPOBJ *pco, ULONG cj, ULONG *pul);
ULONG __stdcall CLIPOBJ_cEnumStart(CLIPOBJ *pco, BOOL bAll, ULONG iType, ULONG iDirection, ULONG cLimit);
PATHOBJ *__stdcall CLIPOBJ_ppoGetPath(CLIPOBJ *pco);
MACRO_CLIP CLIP_CHARACTER_PRECIS;
MACRO_CLIP CLIP_DEFAULT_PRECIS;
MACRO_CLIP CLIP_DFA_DISABLE;
MACRO_CLIP CLIP_EMBEDDED;
MACRO_CLIP CLIP_LH_ANGLES;
MACRO_CLIP CLIP_MASK;
MACRO_CLIP CLIP_STROKE_PRECIS;
MACRO_PATH CLIP_TO_PATH;
MACRO_CLIP CLIP_TT_ALWAYS;
MACRO_QUANTUM_DECREMENT CLOCK_QUANTUM_DECREMENT;
MACRO_CLOSECHANNEL CLOSECHANNEL;
MACRO_CLR CLR_INVALID;
MACRO_CM_RESOURCE CM_BOOT_FLAG_ACCEPTED;
MACRO_CM_RESOURCE CM_BOOT_FLAG_MAX;
MACRO_CM_RESOURCE CM_BOOT_FLAG_SETUP;
MACRO_CM_RESOURCE CM_BOOT_FLAG_SMSS;
MACRO_CM_NONE CM_CMYK_COLOR;
MACRO_CM_NONE CM_DEVICE_ICM;
MACRO_CM_NONE CM_GAMMA_RAMP;
MACRO_CM_OUT CM_IN_GAMUT;
MACRO_CM_NONE CM_NONE;
MACRO_CM_OUT CM_OUT_OF_GAMUT;
MACRO_CM CM_PROB_BIOS_TABLE;
MACRO_CM CM_PROB_BOOT_CONFIG_CONFLICT;
MACRO_CM CM_PROB_CANT_SHARE_IRQ;
MACRO_CM CM_PROB_DEVICE_NOT_THERE;
MACRO_CM CM_PROB_DEVLOADER_FAILED;
MACRO_CM CM_PROB_DEVLOADER_NOT_FOUND;
MACRO_CM CM_PROB_DEVLOADER_NOT_READY;
MACRO_CM CM_PROB_DISABLED;
MACRO_CM CM_PROB_DISABLED_SERVICE;
MACRO_CM CM_PROB_DRIVER_BLOCKED;
MACRO_CM CM_PROB_DRIVER_FAILED_LOAD;
MACRO_CM CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD;
MACRO_CM CM_PROB_DRIVER_SERVICE_KEY_INVALID;
MACRO_CM CM_PROB_DUPLICATE_DEVICE;
MACRO_CM CM_PROB_ENTRY_IS_WRONG_TYPE;
MACRO_CM CM_PROB_FAILED_ADD;
MACRO_CM CM_PROB_FAILED_DRIVER_ENTRY;
MACRO_CM CM_PROB_FAILED_FILTER;
MACRO_CM CM_PROB_FAILED_INSTALL;
MACRO_CM CM_PROB_FAILED_POST_START;
MACRO_CM CM_PROB_FAILED_START;
MACRO_CM CM_PROB_HALTED;
MACRO_CM CM_PROB_HARDWARE_DISABLED;
MACRO_CM CM_PROB_HELD_FOR_EJECT;
MACRO_CM CM_PROB_INVALID_DATA;
MACRO_CM CM_PROB_IRQ_TRANSLATION_FAILED;
MACRO_CM CM_PROB_LACKED_ARBITRATOR;
MACRO_CM CM_PROB_LEGACY_SERVICE_NO_DEVICES;
MACRO_CM CM_PROB_LIAR;
MACRO_CM CM_PROB_MOVED;
MACRO_CM CM_PROB_NEED_RESTART;
MACRO_CM CM_PROB_NORMAL_CONFLICT;
MACRO_CM CM_PROB_NOT_CONFIGURED;
MACRO_CM CM_PROB_NOT_VERIFIED;
MACRO_CM CM_PROB_NO_SOFTCONFIG;
MACRO_CM CM_PROB_NO_VALID_LOG_CONF;
MACRO_CM CM_PROB_OUT_OF_MEMORY;
MACRO_CM CM_PROB_PARTIAL_LOG_CONF;
MACRO_CM CM_PROB_PHANTOM;
MACRO_CM CM_PROB_REENUMERATION;
MACRO_CM CM_PROB_REGISTRY;
MACRO_CM CM_PROB_REGISTRY_TOO_LARGE;
MACRO_CM CM_PROB_REINSTALL;
MACRO_CM CM_PROB_SETPROPERTIES_FAILED;
MACRO_CM CM_PROB_SYSTEM_SHUTDOWN;
MACRO_CM CM_PROB_TOO_EARLY;
MACRO_CM CM_PROB_TRANSLATION_FAILED;
MACRO_CM CM_PROB_UNKNOWN_RESOURCE;
MACRO_CM CM_PROB_UNSIGNED_DRIVER;
MACRO_CM CM_PROB_VXDLDR;
MACRO_CM CM_PROB_WAITING_ON_DEPENDENCY;
MACRO_CM CM_PROB_WILL_BE_REMOVED;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_16;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_32;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_8;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_8_AND_16;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_BUS_MASTER;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_TYPE_A;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_TYPE_B;
MACRO_CM_RESOURCE CM_RESOURCE_DMA_TYPE_F;
MACRO_CM_RESOURCE CM_RESOURCE_INTERRUPT_LATCHED;
MACRO_CM_RESOURCE CM_RESOURCE_INTERRUPT_LEVEL_SENSITIVE;
MACRO_CM_RESOURCE CM_RESOURCE_INTERRUPT_MESSAGE;
MACRO_CM_RESOURCE CM_RESOURCE_INTERRUPT_POLICY_INCLUDED;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_24;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_CACHEABLE;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_COMBINEDWRITE;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_PREFETCHABLE;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_READ_ONLY;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_READ_WRITE;
MACRO_CM_RESOURCE CM_RESOURCE_MEMORY_WRITE_ONLY;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_10_BIT_DECODE;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_12_BIT_DECODE;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_16_BIT_DECODE;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_IO;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_MEMORY;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_PASSIVE_DECODE;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_POSITIVE_DECODE;
MACRO_CM_RESOURCE CM_RESOURCE_PORT_WINDOW_DECODE;
MACRO_EMBEDED COLORMATCHTOTARGET_EMBEDED;
MACRO_COLORMGMTCAPS COLORMGMTCAPS;
MACRO_COLORONCOLOR COLORONCOLOR;
MACRO_COLORRES COLORRES;
MACRO_COLOR COLOR_ADJ_MAX;
MACRO_COLOR COLOR_ADJ_MIN;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_32BITPREFERRED;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_32BITREQUIRED;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_ILONLY;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_IL_LIBRARY;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_NATIVE_ENTRYPOINT;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_STRONGNAMESIGNED;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_TRACKDEBUGDATA;
MACRO_COMPLEXREGION COMPLEXREGION;
MACRO_COMPRESSION COMPRESSION_ENGINE_HIBER;
MACRO_COMPRESSION COMPRESSION_ENGINE_MAXIMUM;
MACRO_COMPRESSION COMPRESSION_ENGINE_STANDARD;
MACRO_COMPRESSION COMPRESSION_FORMAT_DEFAULT;
MACRO_COMPRESSION COMPRESSION_FORMAT_LZNT1;
MACRO_COMPRESSION COMPRESSION_FORMAT_NONE;
MACRO_INHERIT_ACE CONTAINER_INHERIT_ACE;
MACRO_CONTEXT_FLAGS CONTEXT_ALIGNED_SIZE;
MACRO_CONTEXT CONTEXT_ALL;
MACRO_CONTEXT CONTEXT_CONTROL;
MACRO_CONTEXT_DEBUGGER CONTEXT_DEBUGGER;
MACRO_CONTEXT CONTEXT_DEBUG_REGISTERS;
MACRO_CONTEXT_FLAGS CONTEXT_DR6;
MACRO_CONTEXT_FLAGS CONTEXT_EAX;
MACRO_CONTEXT_FLAGS CONTEXT_EBP;
MACRO_CONTEXT_FLAGS CONTEXT_EBX;
MACRO_CONTEXT_FLAGS CONTEXT_ECX;
MACRO_CONTEXT_FLAGS CONTEXT_EDI;
MACRO_CONTEXT_FLAGS CONTEXT_EDX;
MACRO_CONTEXT_FLAGS CONTEXT_EFLAGS;
MACRO_CONTEXT_FLAGS CONTEXT_EIP;
MACRO_CONTEXT_FLAGS CONTEXT_ESI;
MACRO_CONTEXT_FLAGS CONTEXT_ESP;
MACRO_CONTEXT CONTEXT_EXTENDED_REGISTERS;
MACRO_CONTEXT_FLAGS CONTEXT_FLAGS;
MACRO_CONTEXT CONTEXT_FLOATING_POINT;
MACRO_CONTEXT_FLAGS CONTEXT_FLOAT_SAVE;
MACRO_CONTEXT_FLAGS CONTEXT_FLOAT_SAVE_CONTROL_WORD;
MACRO_CONTEXT_FLAGS CONTEXT_FLOAT_SAVE_STATUS_WORD;
MACRO_CONTEXT_FLAGS CONTEXT_FLOAT_SAVE_TAG_WORD;
MACRO_CONTEXT_FLAGS CONTEXT_FRAME_LENGTH;
MACRO_CONTEXT CONTEXT_FULL;
MACRO_CONTEXT CONTEXT_INTEGER;
MACRO_CONTEXT_FLAGS CONTEXT_SEGCS;
MACRO_CONTEXT_FLAGS CONTEXT_SEGDS;
MACRO_CONTEXT_FLAGS CONTEXT_SEGES;
MACRO_CONTEXT_FLAGS CONTEXT_SEGFS;
MACRO_CONTEXT_FLAGS CONTEXT_SEGGS;
MACRO_CONTEXT CONTEXT_SEGMENTS;
MACRO_CONTEXT_FLAGS CONTEXT_SEGSS;
MACRO_CONTEXT CONTEXT_i386;
MACRO_CONTEXT CONTEXT_i486;
ReplacesCorHdrNumericDefines COR_DELETED_NAME_LENGTH;
ReplacesCorHdrNumericDefines COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE;
ReplacesCorHdrNumericDefines COR_VERSION_MAJOR;
ReplacesCorHdrNumericDefines COR_VERSION_MAJOR_V2;
ReplacesCorHdrNumericDefines COR_VERSION_MINOR;
ReplacesCorHdrNumericDefines COR_VTABLEGAP_NAME_LENGTH;
ReplacesCorHdrNumericDefines COR_VTABLE_32BIT;
ReplacesCorHdrNumericDefines COR_VTABLE_64BIT;
ReplacesCorHdrNumericDefines COR_VTABLE_CALL_MOST_DERIVED;
ReplacesCorHdrNumericDefines COR_VTABLE_FROM_UNMANAGED;
ReplacesCorHdrNumericDefines COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN;
MACRO_CP CP_NONE;
MACRO_CP CP_RECTANGLE;
MACRO_CP CP_REGION;
MACRO_CR0 CR0_AM;
MACRO_CR0 CR0_CD;
MACRO_CR0 CR0_EM;
MACRO_CR0 CR0_ET;
MACRO_CR0 CR0_MP;
MACRO_CR0 CR0_NE;
MACRO_CR0 CR0_NW;
MACRO_CR0 CR0_PE;
MACRO_CR0 CR0_PG;
MACRO_CR0 CR0_TS;
MACRO_CR0 CR0_WP;
MACRO_EMBEDED CREATECOLORSPACE_EMBEDED;
MACRO_CS_ENABLE CS_DELETE_TRANSFORM;
MACRO_CS_ENABLE CS_DISABLE;
MACRO_CS_ENABLE CS_ENABLE;
MACRO_CS CS_LOCK_BIT;
MACRO_CS CS_LOCK_BIT_V;
MACRO_CS CS_LOCK_WAITER_INC;
MACRO_CS CS_LOCK_WAITER_WOKEN;
MACRO_CT CT_RECTANGLES;
MACRO_CURVECAPS CURVECAPS;
_PROCESSOR_CACHE_TYPE CacheData;
_PROCESSOR_CACHE_TYPE CacheInstruction;
_PROCESSOR_CACHE_TYPE CacheTrace;
_PROCESSOR_CACHE_TYPE CacheUnified;
BOOL __stdcall CancelDC(HDC hdc);
_BUS_DATA_TYPE CbusConfiguration;
BOOL __stdcall CheckColorsInGamut(HDC hdc, LPVOID pRGBTriple, LPVOID pvBuffer, DWORD nCount);
int __stdcall ChoosePixelFormat(HDC hdc, const PIXELFORMATDESCRIPTOR *ppfd);
BOOL __stdcall Chord(HDC hdc, INT xLeft, INT yTop, INT xRight, INT yBottom, INT xRadial1, INT yRadial1, INT xRadial2, INT yRadial2);
HENHMETAFILE __stdcall CloseEnhMetaFile(HDC hdc);
BOOL __stdcall CloseFigure(HDC hdc);
HMETAFILE __stdcall CloseMetaFile(HDC hdc);
_CM_SHARE_DISPOSITION CmResourceShareDeviceExclusive;
_CM_SHARE_DISPOSITION CmResourceShareDriverExclusive;
_CM_SHARE_DISPOSITION CmResourceShareShared;
_CM_SHARE_DISPOSITION CmResourceShareUndetermined;
MACRO_CmResourceTypeBusNumber CmResourceTypeBusNumber;
MACRO_CmResourceTypeConfigData CmResourceTypeConfigData;
MACRO_CmResourceTypeDevicePrivate CmResourceTypeDevicePrivate;
MACRO_CmResourceTypeDeviceSpecific CmResourceTypeDeviceSpecific;
MACRO_CmResourceTypeMemory CmResourceTypeDma;
MACRO_CmResourceTypeNull CmResourceTypeInterrupt;
MACRO_CmResourceTypeMemory CmResourceTypeMemory;
MACRO_CmResourceTypeMemoryLarge CmResourceTypeMemoryLarge;
MACRO_CmResourceTypeMfCardConfig CmResourceTypeMfCardConfig;
MACRO_CmResourceTypeMemoryLarge CmResourceTypeNonArbitrated;
MACRO_CmResourceTypeNull CmResourceTypeNull;
MACRO_CmResourceTypePcCardConfig CmResourceTypePcCardConfig;
MACRO_CmResourceTypeNull CmResourceTypePort;
_BUS_DATA_TYPE Cmos;
BOOL __stdcall ColorMatchToTarget(HDC hdc, HDC hdcTarget, DWORD uAction);
int __stdcall CombineRgn(HRGN hrgnDest, HRGN hrgnSrc1, HRGN hrgnSrc2, int fnCombineMode);
BOOL __stdcall CombineTransform(LPXFORM pxformResult, const XFORM *pxform1, const XFORM *pxform2);
_ACTIVATION_CONTEXT_INFO_CLASS CompatibilityInformationInActivationContext;
_BUS_DATA_TYPE ConfigurationSpaceUndefined;
_KCONTINUE_STATUS ContinueError;
_KCONTINUE_STATUS ContinueNextProcessor;
_KCONTINUE_STATUS ContinueProcessorReselected;
_KCONTINUE_STATUS ContinueSuccess;
HENHMETAFILE __stdcall CopyEnhMetaFileA(HENHMETAFILE hemfSrc, LPCSTR pszFile);
HENHMETAFILE __stdcall CopyEnhMetaFileW(HENHMETAFILE hemfSrc, LPCWSTR pszFile);
HMETAFILE __stdcall CopyMetaFileA(HMETAFILE hmfSrc, LPCSTR pszFile);
HMETAFILE __stdcall CopyMetaFileW(HMETAFILE hmfSrc, LPCWSTR pszFile);
HBITMAP __stdcall CreateBitmap(INT cx, INT cy, UINT cPlanes, UINT cBitsPerPel, const void *pvBits);
HBITMAP __stdcall CreateBitmapIndirect(const BITMAP *pbm);
HBRUSH __stdcall CreateBrushIndirect(const LOGBRUSH *plb);
HCOLORSPACE __stdcall CreateColorSpaceA(LPLOGCOLORSPACEA pLogColorSpace);
HCOLORSPACE __stdcall CreateColorSpaceW(LPLOGCOLORSPACEW pLogColorSpace);
HBITMAP __stdcall CreateCompatibleBitmap(HDC hdc, INT cx, INT cy);
HDC __stdcall CreateCompatibleDC(HDC hdc);
HDC __stdcall CreateDCA(LPCSTR pszDriver, LPCSTR pszDevice, LPCSTR pszOutput, const DEVMODEA *pdmInit);
HDC __stdcall CreateDCW(LPCWSTR pszDriver, LPCWSTR pszDevice, LPCWSTR psz, const DEVMODEW *pdmInit);
HBRUSH __stdcall CreateDIBPatternBrush(HGLOBAL hglbDIBPacked, UINT uUsage);
HBRUSH __stdcall CreateDIBPatternBrushPt(const void *pvPackedDIB, UINT uUsage);
HBITMAP __stdcall CreateDIBSection(HDC hdc, const BITMAPINFO *pbmi, UINT usage, void **ppvBits, HANDLE hSection, DWORD offset);
HBITMAP __stdcall CreateDIBitmap(HDC hdc, const BITMAPINFOHEADER *pbmih, DWORD fdwInit, const void *pvInit, const BITMAPINFO *pbmi, UINT uUsage);
HBITMAP __stdcall CreateDiscardableBitmap(HDC, int, int);
HRGN __stdcall CreateEllipticRgn(int, int, int, int);
HRGN __stdcall CreateEllipticRgnIndirect(LPCRECT);
HDC __stdcall CreateEnhMetaFileA(HDC, LPCSTR, LPCRECT, LPCSTR);
HDC __stdcall CreateEnhMetaFileW(HDC, LPCWSTR, LPCRECT, LPCWSTR);
HFONT __stdcall CreateFontA(int, int, int, int, int, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, LPCSTR);
HFONT __stdcall CreateFontIndirectA(const LOGFONTA *);
HFONT __stdcall CreateFontIndirectExA(const ENUMLOGFONTEXDVA *);
HFONT __stdcall CreateFontIndirectExW(const ENUMLOGFONTEXDVW *);
HFONT __stdcall CreateFontIndirectW(const LOGFONTW *);
HFONT __stdcall CreateFontW(int, int, int, int, int, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, DWORD, LPCWSTR);
HPALETTE __stdcall CreateHalftonePalette(HDC);
HBRUSH __stdcall CreateHatchBrush(int, COLORREF);
HDC __stdcall CreateICA(LPCSTR, LPCSTR, LPCSTR, const DEVMODEA *);
HDC __stdcall CreateICW(LPCWSTR, LPCWSTR, LPCWSTR, const DEVMODEW *);
HDC __stdcall CreateMetaFileA(LPCSTR);
HDC __stdcall CreateMetaFileW(LPCWSTR);
HPALETTE __stdcall CreatePalette(const LOGPALETTE *);
HBRUSH __stdcall CreatePatternBrush(HBITMAP);
HPEN __stdcall CreatePen(int, int, COLORREF);
HPEN __stdcall CreatePenIndirect(const LOGPEN *);
HRGN __stdcall CreatePolyPolygonRgn(const POINT *pptl, const INT *pc, int cPoly, int iMode);
HRGN __stdcall CreatePolygonRgn(const POINT *pptl, int cPoint, int iMode);
HRGN __stdcall CreateRectRgn(int, int, int, int);
HRGN __stdcall CreateRectRgnIndirect(LPCRECT);
HRGN __stdcall CreateRoundRectRgn(int, int, int, int, int, int);
BOOL __stdcall CreateScalableFontResourceA(DWORD, LPCSTR, LPCSTR, LPCSTR);
BOOL __stdcall CreateScalableFontResourceW(DWORD, LPCWSTR, LPCWSTR, LPCWSTR);
HBRUSH __stdcall CreateSolidBrush(COLORREF);
_CM_ERROR_CONTROL_TYPE CriticalError;
PCSR_CAPTURE_BUFFER __stdcall CsrAllocateCaptureBuffer(ULONG ArgumentCount, ULONG BufferSize);
ULONG __stdcall CsrAllocateMessagePointer(PCSR_CAPTURE_BUFFER CaptureBuffer, ULONG MessageLength, PVOID *CapturedData);
void __stdcall CsrCaptureMessageBuffer(PCSR_CAPTURE_BUFFER CaptureBuffer, PVOID MessageBuffer, ULONG MessageLength, PVOID *CapturedData);
NTSTATUS __stdcall CsrCaptureMessageMultiUnicodeStringsInPlace(PCSR_CAPTURE_BUFFER *CaptureBuffer, ULONG StringsCount, PUNICODE_STRING *MessageStrings);
void __stdcall CsrCaptureMessageString(PCSR_CAPTURE_BUFFER CaptureBuffer, PCSTR String, ULONG StringLength, ULONG MaximumLength, PSTRING CapturedString);
PLARGE_INTEGER __stdcall CsrCaptureTimeout(ULONG Milliseconds, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall CsrClientCallServer(PCSR_API_MESSAGE ApiMessage, PCSR_CAPTURE_BUFFER CaptureBuffer, CSR_API_NUMBER ApiNumber, ULONG DataLength);
NTSTATUS __stdcall CsrClientConnectToServer(PWSTR ObjectDirectory, ULONG ServerId, PVOID ConnectionInfo, PULONG ConnectionInfoSize, PBOOLEAN ServerToServerCall);
void __stdcall CsrFreeCaptureBuffer(PCSR_CAPTURE_BUFFER CaptureBuffer);
HANDLE __stdcall CsrGetProcessId();
NTSTATUS __stdcall CsrIdentifyAlertableThread();
NTSTATUS __stdcall CsrNewThread();
void __stdcall CsrProbeForRead(PVOID Address, ULONG Length, ULONG Alignment);
void __stdcall CsrProbeForWrite(PVOID Address, ULONG Length, ULONG Alignment);
NTSTATUS __stdcall CsrSetPriorityClass(HANDLE Process, PULONG PriorityClass);
_PLUGPLAY_EVENT_CATEGORY CustomDeviceEvent;
_D3DANTIALIASMODE D3DANTIALIAS_FORCE_DWORD;
_D3DANTIALIASMODE D3DANTIALIAS_NONE;
_D3DANTIALIASMODE D3DANTIALIAS_SORTDEPENDENT;
_D3DANTIALIASMODE D3DANTIALIAS_SORTINDEPENDENT;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_BOTHINVSRCALPHA;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_BOTHSRCALPHA;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_DESTALPHA;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_DESTCOLOR;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_FORCE_DWORD;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_INVDESTALPHA;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_INVDESTCOLOR;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_INVSRCALPHA;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_INVSRCCOLOR;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_ONE;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_SRCALPHA;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_SRCALPHASAT;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_SRCCOLOR;
$17EF44A6FB7BC928DB45B319F6F500E7 D3DBLEND_ZERO;
MACRO_D3DCLEAR D3DCLEAR_STENCIL;
MACRO_D3DCLEAR D3DCLEAR_TARGET;
MACRO_D3DCLEAR D3DCLEAR_ZBUFFER;
MACRO_D3DCLIPPLANE0 D3DCLIPPLANE0;
MACRO_D3DCLIPPLANE0 D3DCLIPPLANE1;
MACRO_D3DCLIPPLANE0 D3DCLIPPLANE2;
MACRO_D3DCLIPPLANE0 D3DCLIPPLANE3;
MACRO_D3DCLIPPLANE0 D3DCLIPPLANE4;
MACRO_D3DCLIPPLANE0 D3DCLIPPLANE5;
MACRO_D3DCLIPSTATUS D3DCLIPSTATUS_EXTENTS2;
MACRO_D3DCLIPSTATUS D3DCLIPSTATUS_EXTENTS3;
MACRO_D3DCLIPSTATUS D3DCLIPSTATUS_STATUS;
MACRO_D3DCLIP D3DCLIP_BACK;
MACRO_D3DCLIP D3DCLIP_BOTTOM;
MACRO_D3DCLIP D3DCLIP_FRONT;
MACRO_D3DCLIP D3DCLIP_GEN0;
MACRO_D3DCLIP D3DCLIP_GEN1;
MACRO_D3DCLIP D3DCLIP_GEN2;
MACRO_D3DCLIP D3DCLIP_GEN3;
MACRO_D3DCLIP D3DCLIP_GEN4;
MACRO_D3DCLIP D3DCLIP_GEN5;
MACRO_D3DCLIP D3DCLIP_LEFT;
MACRO_D3DCLIP D3DCLIP_RIGHT;
MACRO_D3DCLIP D3DCLIP_TOP;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_ALWAYS;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_EQUAL;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_FORCE_DWORD;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_GREATER;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_GREATEREQUAL;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_LESS;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_LESSEQUAL;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_NEVER;
$AE792CEDDB98DFDAE2E961BC788E6FD8 D3DCMP_NOTEQUAL;
MACRO_D3DCOLOR D3DCOLOR_MONO;
MACRO_D3DCOLOR D3DCOLOR_RGB;
$899D83E501CAC73A794C253E28DF1C3C D3DCULL_CCW;
$899D83E501CAC73A794C253E28DF1C3C D3DCULL_CW;
$899D83E501CAC73A794C253E28DF1C3C D3DCULL_FORCE_DWORD;
$899D83E501CAC73A794C253E28DF1C3C D3DCULL_NONE;
_D3DDDIFORMAT D3DDDIFMT_A1;
_D3DDDIFORMAT D3DDDIFMT_A16B16G16R16;
_D3DDDIFORMAT D3DDDIFMT_A16B16G16R16F;
_D3DDDIFORMAT D3DDDIFMT_A1R5G5B5;
_D3DDDIFORMAT D3DDDIFMT_A2B10G10R10;
_D3DDDIFORMAT D3DDDIFMT_A2B10G10R10_XR_BIAS;
_D3DDDIFORMAT D3DDDIFMT_A2R10G10B10;
_D3DDDIFORMAT D3DDDIFMT_A2W10V10U10;
_D3DDDIFORMAT D3DDDIFMT_A32B32G32R32F;
_D3DDDIFORMAT D3DDDIFMT_A4L4;
_D3DDDIFORMAT D3DDDIFMT_A4R4G4B4;
_D3DDDIFORMAT D3DDDIFMT_A8;
_D3DDDIFORMAT D3DDDIFMT_A8B8G8R8;
_D3DDDIFORMAT D3DDDIFMT_A8L8;
_D3DDDIFORMAT D3DDDIFMT_A8P8;
_D3DDDIFORMAT D3DDDIFMT_A8R3G3B2;
_D3DDDIFORMAT D3DDDIFMT_A8R8G8B8;
_D3DDDIFORMAT D3DDDIFMT_BINARYBUFFER;
_D3DDDIFORMAT D3DDDIFMT_BITSTREAMDATA;
_D3DDDIFORMAT D3DDDIFMT_CxV8U8;
_D3DDDIFORMAT D3DDDIFMT_D15S1;
_D3DDDIFORMAT D3DDDIFMT_D16;
_D3DDDIFORMAT D3DDDIFMT_D16_LOCKABLE;
_D3DDDIFORMAT D3DDDIFMT_D24FS8;
_D3DDDIFORMAT D3DDDIFMT_D24S8;
_D3DDDIFORMAT D3DDDIFMT_D24X4S4;
_D3DDDIFORMAT D3DDDIFMT_D24X8;
_D3DDDIFORMAT D3DDDIFMT_D32;
_D3DDDIFORMAT D3DDDIFMT_D32F_LOCKABLE;
_D3DDDIFORMAT D3DDDIFMT_D32_LOCKABLE;
_D3DDDIFORMAT D3DDDIFMT_DEBLOCKINGDATA;
_D3DDDIFORMAT D3DDDIFMT_DXT1;
_D3DDDIFORMAT D3DDDIFMT_DXT2;
_D3DDDIFORMAT D3DDDIFMT_DXT3;
_D3DDDIFORMAT D3DDDIFMT_DXT4;
_D3DDDIFORMAT D3DDDIFMT_DXT5;
_D3DDDIFORMAT D3DDDIFMT_DXVACOMPBUFFER_BASE;
_D3DDDIFORMAT D3DDDIFMT_DXVACOMPBUFFER_MAX;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED10;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED11;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED12;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED13;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED14;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED15;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED16;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED17;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED18;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED19;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED20;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED21;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED22;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED23;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED24;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED25;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED26;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED27;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED28;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED29;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED30;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED31;
_D3DDDIFORMAT D3DDDIFMT_DXVA_RESERVED9;
_D3DDDIFORMAT D3DDDIFMT_FILMGRAINBUFFER;
_D3DDDIFORMAT D3DDDIFMT_FORCE_UINT;
_D3DDDIFORMAT D3DDDIFMT_G16R16;
_D3DDDIFORMAT D3DDDIFMT_G16R16F;
_D3DDDIFORMAT D3DDDIFMT_G32R32F;
_D3DDDIFORMAT D3DDDIFMT_G8R8;
_D3DDDIFORMAT D3DDDIFMT_G8R8_G8B8;
_D3DDDIFORMAT D3DDDIFMT_INDEX16;
_D3DDDIFORMAT D3DDDIFMT_INDEX32;
_D3DDDIFORMAT D3DDDIFMT_INVERSEQUANTIZATIONDATA;
_D3DDDIFORMAT D3DDDIFMT_L16;
_D3DDDIFORMAT D3DDDIFMT_L6V5U5;
_D3DDDIFORMAT D3DDDIFMT_L8;
_D3DDDIFORMAT D3DDDIFMT_MACROBLOCKDATA;
_D3DDDIFORMAT D3DDDIFMT_MOTIONVECTORBUFFER;
_D3DDDIFORMAT D3DDDIFMT_MULTI2_ARGB8;
_D3DDDIFORMAT D3DDDIFMT_P8;
_D3DDDIFORMAT D3DDDIFMT_PICTUREPARAMSDATA;
_D3DDDIFORMAT D3DDDIFMT_Q16W16V16U16;
_D3DDDIFORMAT D3DDDIFMT_Q8W8V8U8;
_D3DDDIFORMAT D3DDDIFMT_R16F;
_D3DDDIFORMAT D3DDDIFMT_R32F;
_D3DDDIFORMAT D3DDDIFMT_R3G3B2;
_D3DDDIFORMAT D3DDDIFMT_R5G6B5;
_D3DDDIFORMAT D3DDDIFMT_R8;
_D3DDDIFORMAT D3DDDIFMT_R8G8B8;
_D3DDDIFORMAT D3DDDIFMT_R8G8_B8G8;
_D3DDDIFORMAT D3DDDIFMT_RESIDUALDIFFERENCEDATA;
_D3DDDIFORMAT D3DDDIFMT_S1D15;
_D3DDDIFORMAT D3DDDIFMT_S8D24;
_D3DDDIFORMAT D3DDDIFMT_S8_LOCKABLE;
_D3DDDIFORMAT D3DDDIFMT_SLICECONTROLDATA;
_D3DDDIFORMAT D3DDDIFMT_UNKNOWN;
_D3DDDIFORMAT D3DDDIFMT_UYVY;
_D3DDDIFORMAT D3DDDIFMT_V16U16;
_D3DDDIFORMAT D3DDDIFMT_V8U8;
_D3DDDIFORMAT D3DDDIFMT_VERTEXDATA;
_D3DDDIFORMAT D3DDDIFMT_W11V11U10;
_D3DDDIFORMAT D3DDDIFMT_X1R5G5B5;
_D3DDDIFORMAT D3DDDIFMT_X4R4G4B4;
_D3DDDIFORMAT D3DDDIFMT_X4S4D24;
_D3DDDIFORMAT D3DDDIFMT_X8B8G8R8;
_D3DDDIFORMAT D3DDDIFMT_X8D24;
_D3DDDIFORMAT D3DDDIFMT_X8L8V8U8;
_D3DDDIFORMAT D3DDDIFMT_X8R8G8B8;
_D3DDDIFORMAT D3DDDIFMT_YUY2;
MACRO_D3DDD D3DDD_BCLIPPING;
MACRO_D3DDD D3DDD_COLORMODEL;
MACRO_D3DDD D3DDD_DEVCAPS;
MACRO_D3DDD D3DDD_DEVICERENDERBITDEPTH;
MACRO_D3DDD D3DDD_DEVICEZBUFFERBITDEPTH;
MACRO_D3DDD D3DDD_LIGHTINGCAPS;
MACRO_D3DDD D3DDD_LINECAPS;
MACRO_D3DDD D3DDD_MAXBUFFERSIZE;
MACRO_D3DDD D3DDD_MAXVERTEXCOUNT;
MACRO_D3DDD D3DDD_TRANSFORMCAPS;
MACRO_D3DDD D3DDD_TRICAPS;
MACRO_D3DDEBCAPS D3DDEBCAPS_MEM;
MACRO_D3DDEBCAPS D3DDEBCAPS_SYSTEMMEMORY;
MACRO_D3DDEBCAPS D3DDEBCAPS_VIDEOMEMORY;
MACRO_D3DDEB D3DDEB_BUFSIZE;
MACRO_D3DDEB D3DDEB_CAPS;
MACRO_D3DDEB D3DDEB_LPDATA;
MACRO_D3DDEVCAPS_HWTRANSFORMANDLIGHT D3DDEVCAPS_CANBLTSYSTONONLOCAL;
MACRO_D3DDEVCAPS_DRAWPRIMTLVERTEX D3DDEVCAPS_CANRENDERAFTERFLIP;
MACRO_D3DDEVCAPS_DRAWPRIMITIVES2 D3DDEVCAPS_DRAWPRIMITIVES2;
MACRO_D3DDEVCAPS_DRAWPRIMITIVES2 D3DDEVCAPS_DRAWPRIMITIVES2EX;
MACRO_D3DDEVCAPS_DRAWPRIMTLVERTEX D3DDEVCAPS_DRAWPRIMTLVERTEX;
MACRO_D3DDEVCAPS D3DDEVCAPS_EXECUTESYSTEMMEMORY;
MACRO_D3DDEVCAPS D3DDEVCAPS_EXECUTEVIDEOMEMORY;
MACRO_D3DDEVCAPS D3DDEVCAPS_FLOATTLVERTEX;
MACRO_D3DDEVCAPS_HWTRANSFORMANDLIGHT D3DDEVCAPS_HWRASTERIZATION;
MACRO_D3DDEVCAPS_HWTRANSFORMANDLIGHT D3DDEVCAPS_HWTRANSFORMANDLIGHT;
MACRO_D3DDEVCAPS_DRAWPRIMITIVES2 D3DDEVCAPS_SEPARATETEXTUREMEMORIES;
MACRO_D3DDEVCAPS D3DDEVCAPS_SORTDECREASINGZ;
MACRO_D3DDEVCAPS D3DDEVCAPS_SORTEXACT;
MACRO_D3DDEVCAPS D3DDEVCAPS_SORTINCREASINGZ;
MACRO_D3DDEVCAPS_DRAWPRIMTLVERTEX D3DDEVCAPS_TEXTURENONLOCALVIDMEM;
MACRO_D3DDEVCAPS D3DDEVCAPS_TEXTURESYSTEMMEMORY;
MACRO_D3DDEVCAPS D3DDEVCAPS_TEXTUREVIDEOMEMORY;
MACRO_D3DDEVCAPS D3DDEVCAPS_TLVERTEXSYSTEMMEMORY;
MACRO_D3DDEVCAPS D3DDEVCAPS_TLVERTEXVIDEOMEMORY;
MACRO_D3DDEVINFOID D3DDEVINFOID_D3DTEXTUREMANAGER;
MACRO_D3DDEVINFOID D3DDEVINFOID_TEXTUREMANAGER;
MACRO_D3DDEVINFOID D3DDEVINFOID_TEXTURING;
MACRO_D3DDP D3DDP_MAXTEXCOORD;
MACRO_D3DENUMRET D3DENUMRET_CANCEL;
MACRO_D3DENUMRET D3DENUMRET_OK;
MACRO_D3DEXECUTE D3DEXECUTE_CLIPPED;
MACRO_D3DEXECUTE D3DEXECUTE_UNCLIPPED;
MACRO_D3DFDS D3DFDS_ALPHACMPCAPS;
MACRO_D3DFDS D3DFDS_COLORMODEL;
MACRO_D3DFDS D3DFDS_DSTBLENDCAPS;
MACRO_D3DFDS D3DFDS_GUID;
MACRO_D3DFDS D3DFDS_HARDWARE;
MACRO_D3DFDS D3DFDS_LINES;
MACRO_D3DFDS D3DFDS_MISCCAPS;
MACRO_D3DFDS D3DFDS_RASTERCAPS;
MACRO_D3DFDS D3DFDS_SHADECAPS;
MACRO_D3DFDS D3DFDS_SRCBLENDCAPS;
MACRO_D3DFDS D3DFDS_TEXTUREADDRESSCAPS;
MACRO_D3DFDS D3DFDS_TEXTUREBLENDCAPS;
MACRO_D3DFDS D3DFDS_TEXTURECAPS;
MACRO_D3DFDS D3DFDS_TEXTUREFILTERCAPS;
MACRO_D3DFDS D3DFDS_TRIANGLES;
MACRO_D3DFDS D3DFDS_ZCMPCAPS;
$C893F2D74E3EE02796797F8957563B0E D3DFILL_FORCE_DWORD;
$C893F2D74E3EE02796797F8957563B0E D3DFILL_POINT;
$C893F2D74E3EE02796797F8957563B0E D3DFILL_SOLID;
$C893F2D74E3EE02796797F8957563B0E D3DFILL_WIREFRAME;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_FORCE_DWORD;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_LINEAR;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_LINEARMIPLINEAR;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_LINEARMIPNEAREST;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_MIPLINEAR;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_MIPNEAREST;
$6A410C70A48A9A8ED88D4BC63D96D381 D3DFILTER_NEAREST;
_D3DFOGMODE D3DFOG_EXP;
_D3DFOGMODE D3DFOG_EXP2;
_D3DFOGMODE D3DFOG_FORCE_DWORD;
_D3DFOGMODE D3DFOG_LINEAR;
_D3DFOGMODE D3DFOG_NONE;
MACRO_D3DFORMAT D3DFORMAT_MEMBEROFGROUP_ARGB;
MACRO_D3DFORMAT D3DFORMAT_OP_3DACCELERATION;
MACRO_D3DFORMAT D3DFORMAT_OP_AUTOGENMIPMAP;
MACRO_D3DFORMAT D3DFORMAT_OP_BUMPMAP;
MACRO_D3DFORMAT D3DFORMAT_OP_CONVERT_TO_ARGB;
MACRO_D3DFORMAT D3DFORMAT_OP_CUBETEXTURE;
MACRO_D3DFORMAT D3DFORMAT_OP_DISPLAYMODE;
MACRO_D3DFORMAT D3DFORMAT_OP_DMAP;
MACRO_D3DFORMAT D3DFORMAT_OP_NOALPHABLEND;
MACRO_D3DFORMAT D3DFORMAT_OP_NOFILTER;
MACRO_D3DFORMAT D3DFORMAT_OP_NOTEXCOORDWRAPNORMIP;
MACRO_D3DFORMAT D3DFORMAT_OP_OFFSCREENPLAIN;
MACRO_D3DFORMAT D3DFORMAT_OP_OFFSCREEN_RENDERTARGET;
MACRO_D3DFORMAT D3DFORMAT_OP_PIXELSIZE;
MACRO_D3DFORMAT D3DFORMAT_OP_SAME_FORMAT_RENDERTARGET;
MACRO_D3DFORMAT D3DFORMAT_OP_SAME_FORMAT_UP_TO_ALPHA_RENDERTARGET;
MACRO_D3DFORMAT D3DFORMAT_OP_SRGBREAD;
MACRO_D3DFORMAT D3DFORMAT_OP_SRGBWRITE;
MACRO_D3DFORMAT D3DFORMAT_OP_TEXTURE;
MACRO_D3DFORMAT D3DFORMAT_OP_VERTEXTEXTURE;
MACRO_D3DFORMAT D3DFORMAT_OP_VOLUMETEXTURE;
MACRO_D3DFORMAT D3DFORMAT_OP_ZSTENCIL;
MACRO_D3DFORMAT D3DFORMAT_OP_ZSTENCIL_WITH_ARBITRARY_COLOR_DEPTH;
MACRO_D3DFVFCAPS D3DFVFCAPS_DONOTSTRIPELEMENTS;
MACRO_D3DFVFCAPS D3DFVFCAPS_TEXCOORDCOUNTMASK;
MACRO_D3DFVF D3DFVF_DIFFUSE;
MACRO_D3DFVF D3DFVF_LVERTEX;
MACRO_D3DFVF D3DFVF_NORMAL;
MACRO_D3DFVF D3DFVF_POSITION_MASK;
MACRO_D3DFVF D3DFVF_RESERVED0;
MACRO_D3DFVF D3DFVF_RESERVED1;
MACRO_D3DFVF D3DFVF_RESERVED2;
MACRO_D3DFVF D3DFVF_SPECULAR;
MACRO_D3DFVF D3DFVF_TEX0;
MACRO_D3DFVF D3DFVF_TEX1;
MACRO_D3DFVF D3DFVF_TEX2;
MACRO_D3DFVF D3DFVF_TEX3;
MACRO_D3DFVF D3DFVF_TEX4;
MACRO_D3DFVF D3DFVF_TEX5;
MACRO_D3DFVF D3DFVF_TEX6;
MACRO_D3DFVF D3DFVF_TEX7;
MACRO_D3DFVF D3DFVF_TEX8;
MACRO_D3DFVF D3DFVF_TEXCOUNT_MASK;
MACRO_D3DFVF D3DFVF_TEXCOUNT_SHIFT;
MACRO_D3DFVF_TEXTUREFORMAT2 D3DFVF_TEXTUREFORMAT1;
MACRO_D3DFVF_TEXTUREFORMAT2 D3DFVF_TEXTUREFORMAT2;
MACRO_D3DFVF_TEXTUREFORMAT2 D3DFVF_TEXTUREFORMAT3;
MACRO_D3DFVF_TEXTUREFORMAT2 D3DFVF_TEXTUREFORMAT4;
MACRO_D3DFVF D3DFVF_TLVERTEX;
MACRO_D3DFVF D3DFVF_VERTEX;
MACRO_D3DFVF D3DFVF_XYZ;
MACRO_D3DFVF D3DFVF_XYZB1;
MACRO_D3DFVF D3DFVF_XYZB2;
MACRO_D3DFVF D3DFVF_XYZB3;
MACRO_D3DFVF D3DFVF_XYZB4;
MACRO_D3DFVF D3DFVF_XYZB5;
MACRO_D3DFVF D3DFVF_XYZRHW;
DWORD __stdcall D3DKMTCreateDCFromMemory(D3DKMT_CREATEDCFROMMEMORY *);
DWORD __stdcall D3DKMTDestroyDCFromMemory(const D3DKMT_DESTROYDCFROMMEMORY *);
MACRO_D3DLIGHTCAPS D3DLIGHTCAPS_DIRECTIONAL;
MACRO_D3DLIGHTCAPS D3DLIGHTCAPS_PARALLELPOINT;
MACRO_D3DLIGHTCAPS D3DLIGHTCAPS_POINT;
MACRO_D3DLIGHTCAPS D3DLIGHTCAPS_SPOT;
MACRO_D3DLIGHTINGMODEL D3DLIGHTINGMODEL_MONO;
MACRO_D3DLIGHTINGMODEL D3DLIGHTINGMODEL_RGB;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_AMBIENT;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_COLORMODEL;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_COLORVERTEX;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_FOGDENSITY;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_FOGEND;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_FOGMODE;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_FOGSTART;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_FORCE_DWORD;
$51EFE5BE8E1236F96F3F2D668AC77486 D3DLIGHTSTATE_MATERIAL;
MACRO_D3DLIGHT D3DLIGHT_ACTIVE;
MACRO_D3DLIGHT D3DLIGHT_ALL;
$68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHT_DIRECTIONAL;
$68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHT_FORCE_DWORD;
$68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHT_GLSPOT;
MACRO_D3DLIGHT D3DLIGHT_NO_SPECULAR;
$68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHT_PARALLELPOINT;
$68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHT_POINT;
$68B8926E498CEAACE36DA42D8FDA4ABC D3DLIGHT_SPOT;
MACRO_D3DMAXNUMPRIMITIVES D3DMAXNUMPRIMITIVES;
MACRO_D3DMAXNUMVERTICES D3DMAXNUMVERTICES;
MACRO_D3DMAXUSERCLIPPLANES D3DMAXUSERCLIPPLANES;
_D3DMATERIALCOLORSOURCE D3DMCS_COLOR1;
_D3DMATERIALCOLORSOURCE D3DMCS_COLOR2;
_D3DMATERIALCOLORSOURCE D3DMCS_FORCE_DWORD;
_D3DMATERIALCOLORSOURCE D3DMCS_MATERIAL;
_D3DOPCODE D3DOP_BRANCHFORWARD;
_D3DOPCODE D3DOP_EXIT;
_D3DOPCODE D3DOP_FORCE_DWORD;
_D3DOPCODE D3DOP_LINE;
_D3DOPCODE D3DOP_MATRIXLOAD;
_D3DOPCODE D3DOP_MATRIXMULTIPLY;
_D3DOPCODE D3DOP_POINT;
_D3DOPCODE D3DOP_PROCESSVERTICES;
_D3DOPCODE D3DOP_SETSTATUS;
_D3DOPCODE D3DOP_SPAN;
_D3DOPCODE D3DOP_STATELIGHT;
_D3DOPCODE D3DOP_STATERENDER;
_D3DOPCODE D3DOP_STATETRANSFORM;
_D3DOPCODE D3DOP_TEXTURELOAD;
_D3DOPCODE D3DOP_TRIANGLE;
MACRO_D3DPAL D3DPAL_FREE;
MACRO_D3DPAL D3DPAL_READONLY;
MACRO_D3DPAL D3DPAL_RESERVED;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_BOTHINVSRCALPHA;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_BOTHSRCALPHA;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_DESTALPHA;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_DESTCOLOR;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_INVDESTALPHA;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_INVDESTCOLOR;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_INVSRCALPHA;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_INVSRCCOLOR;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_ONE;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_SRCALPHA;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_SRCALPHASAT;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_SRCCOLOR;
MACRO_D3DPBLENDCAPS D3DPBLENDCAPS_ZERO;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_ALWAYS;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_EQUAL;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_GREATER;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_GREATEREQUAL;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_LESS;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_LESSEQUAL;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_NEVER;
MACRO_D3DPCMPCAPS D3DPCMPCAPS_NOTEQUAL;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_CONFORMANT;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_CULLCCW;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_CULLCW;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_CULLNONE;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_LINEPATTERNREP;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_MASKPLANES;
MACRO_D3DPMISCCAPS D3DPMISCCAPS_MASKZ;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_ANISOTROPY;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_ANTIALIASEDGES;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_ANTIALIASSORTINDEPENDENT;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_DITHER;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_FOGRANGE;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_FOGTABLE;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_FOGVERTEX;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_MIPMAPLODBIAS;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_PAT;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_ROP2;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_STIPPLE;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_SUBPIXEL;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_SUBPIXELX;
MACRO_D3DPRASTERCAPS_WBUFFER D3DPRASTERCAPS_TRANSLUCENTSORTINDEPENDENT;
MACRO_D3DPRASTERCAPS_WBUFFER D3DPRASTERCAPS_WBUFFER;
MACRO_D3DPRASTERCAPS_WBUFFER D3DPRASTERCAPS_WFOG;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_XOR;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_ZBIAS;
MACRO_D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT D3DPRASTERCAPS_ZBUFFERLESSHSR;
MACRO_D3DPRASTERCAPS_WBUFFER D3DPRASTERCAPS_ZFOG;
MACRO_D3DPRASTERCAPS D3DPRASTERCAPS_ZTEST;
MACRO_D3DPROCESSVERTICES D3DPROCESSVERTICES_COPY;
MACRO_D3DPROCESSVERTICES D3DPROCESSVERTICES_NOCOLOR;
MACRO_D3DPROCESSVERTICES D3DPROCESSVERTICES_OPMASK;
MACRO_D3DPROCESSVERTICES D3DPROCESSVERTICES_TRANSFORM;
MACRO_D3DPROCESSVERTICES D3DPROCESSVERTICES_TRANSFORMLIGHT;
MACRO_D3DPROCESSVERTICES D3DPROCESSVERTICES_UPDATEEXTENTS;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_ALPHAFLATBLEND;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_ALPHAFLATSTIPPLED;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_ALPHAGOURAUDBLEND;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_ALPHAPHONGBLEND;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_ALPHAPHONGSTIPPLED;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_COLORFLATMONO;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_COLORFLATRGB;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_COLORGOURAUDMONO;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_COLORGOURAUDRGB;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_COLORPHONGMONO;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_COLORPHONGRGB;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_FOGFLAT;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_FOGGOURAUD;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_FOGPHONG;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_SPECULARFLATMONO;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_SPECULARFLATRGB;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_SPECULARGOURAUDMONO;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_SPECULARGOURAUDRGB;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_SPECULARPHONGMONO;
MACRO_D3DPSHADECAPS D3DPSHADECAPS_SPECULARPHONGRGB;
MACRO_D3DPTADDRESSCAPS_BORDER D3DPTADDRESSCAPS_BORDER;
MACRO_D3DPTADDRESSCAPS D3DPTADDRESSCAPS_CLAMP;
MACRO_D3DPTADDRESSCAPS_BORDER D3DPTADDRESSCAPS_INDEPENDENTUV;
MACRO_D3DPTADDRESSCAPS D3DPTADDRESSCAPS_MIRROR;
MACRO_D3DPTADDRESSCAPS D3DPTADDRESSCAPS_WRAP;
MACRO_D3DPTBLENDCAPS_ADD D3DPTBLENDCAPS_ADD;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_COPY;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_DECAL;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_DECALALPHA;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_DECALMASK;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_MODULATE;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_MODULATEALPHA;
MACRO_D3DPTBLENDCAPS D3DPTBLENDCAPS_MODULATEMASK;
MACRO_D3DPTEXTURECAPS D3DPTEXTURECAPS_ALPHA;
MACRO_D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE D3DPTEXTURECAPS_ALPHAPALETTE;
MACRO_D3DPTEXTURECAPS D3DPTEXTURECAPS_BORDER;
MACRO_D3DPTEXTURECAPS_PROJECTED D3DPTEXTURECAPS_COLORKEYBLEND;
MACRO_D3DPTEXTURECAPS_PROJECTED D3DPTEXTURECAPS_CUBEMAP;
MACRO_D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE D3DPTEXTURECAPS_NONPOW2CONDITIONAL;
MACRO_D3DPTEXTURECAPS D3DPTEXTURECAPS_PERSPECTIVE;
MACRO_D3DPTEXTURECAPS D3DPTEXTURECAPS_POW2;
MACRO_D3DPTEXTURECAPS_PROJECTED D3DPTEXTURECAPS_PROJECTED;
MACRO_D3DPTEXTURECAPS D3DPTEXTURECAPS_SQUAREONLY;
MACRO_D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE;
MACRO_D3DPTEXTURECAPS D3DPTEXTURECAPS_TRANSPARENCY;
MACRO_D3DPTFILTERCAPS D3DPTFILTERCAPS_LINEAR;
MACRO_D3DPTFILTERCAPS D3DPTFILTERCAPS_LINEARMIPLINEAR;
MACRO_D3DPTFILTERCAPS D3DPTFILTERCAPS_LINEARMIPNEAREST;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MAGFAFLATCUBIC;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MAGFANISOTROPIC;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MAGFLINEAR;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MAGFPOINT;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MINFANISOTROPIC;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MINFLINEAR;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MINFPOINT;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MIPFLINEAR;
MACRO_D3DPTFILTERCAPS_MINFPOINT D3DPTFILTERCAPS_MIPFPOINT;
MACRO_D3DPTFILTERCAPS D3DPTFILTERCAPS_MIPLINEAR;
MACRO_D3DPTFILTERCAPS D3DPTFILTERCAPS_MIPNEAREST;
MACRO_D3DPTFILTERCAPS D3DPTFILTERCAPS_NEAREST;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_FORCE_DWORD;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_LINELIST;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_LINESTRIP;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_POINTLIST;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_TRIANGLEFAN;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_TRIANGLELIST;
$5C67042CE564A9B56E0B7EEFA6E66A61 D3DPT_TRIANGLESTRIP;
MACRO_D3DPV D3DPV_DONOTCOPYDATA;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ALPHABLENDENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ALPHAFUNC;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ALPHAREF;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ALPHATESTENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_AMBIENT;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_AMBIENTMATERIALSOURCE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ANISOTROPY;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ANTIALIAS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_BORDERCOLOR;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_CLIPPING;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_CLIPPLANEENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_COLORKEYBLENDENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_COLORKEYENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_COLORVERTEX;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_CULLMODE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_DESTBLEND;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_DIFFUSEMATERIALSOURCE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_DITHERENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_EDGEANTIALIAS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_EMISSIVEMATERIALSOURCE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_EXTENTS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FILLMODE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FLUSHBATCH;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGCOLOR;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGDENSITY;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGEND;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGSTART;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGTABLEDENSITY;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGTABLEEND;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGTABLEMODE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGTABLESTART;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FOGVERTEXMODE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_FORCE_DWORD;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_LASTPIXEL;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_LIGHTING;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_LINEPATTERN;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_LOCALVIEWER;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_MIPMAPLODBIAS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_MONOENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_NORMALIZENORMALS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_PLANEMASK;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_RANGEFOGENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ROP2;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_SHADEMODE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_SPECULARENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_SPECULARMATERIALSOURCE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_SRCBLEND;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILFAIL;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILFUNC;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILMASK;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILPASS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILREF;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILWRITEMASK;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STENCILZFAIL;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEDALPHA;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN00;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN01;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN02;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN03;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN04;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN05;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN06;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN07;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN08;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN09;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN10;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN11;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN12;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN13;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN14;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN15;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN16;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN17;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN18;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN19;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN20;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN21;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN22;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN23;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN24;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN25;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN26;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN27;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN28;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN29;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN30;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_STIPPLEPATTERN31;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_SUBPIXEL;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_SUBPIXELX;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREADDRESS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREADDRESSU;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREADDRESSV;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREFACTOR;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREHANDLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREMAG;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREMAPBLEND;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREMIN;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TEXTUREPERSPECTIVE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_TRANSLUCENTSORTINDEPENDENT;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_VERTEXBLEND;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP0;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP1;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP2;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP3;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP4;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP5;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP6;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAP7;
MACRO_D3DRENDERSTATE D3DRENDERSTATE_WRAPBIAS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAPU;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_WRAPV;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ZBIAS;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ZENABLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ZFUNC;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ZVISIBLE;
$70E6C21732097ECC602C3A9C35FA57C2 D3DRENDERSTATE_ZWRITEENABLE;
_D3DSTATEBLOCKTYPE D3DSBT_ALL;
_D3DSTATEBLOCKTYPE D3DSBT_FORCE_DWORD;
_D3DSTATEBLOCKTYPE D3DSBT_PIXELSTATE;
_D3DSTATEBLOCKTYPE D3DSBT_VERTEXSTATE;
MACRO_D3DSETSTATUS D3DSETSTATUS_ALL;
MACRO_D3DSETSTATUS D3DSETSTATUS_EXTENTS;
MACRO_D3DSETSTATUS D3DSETSTATUS_STATUS;
$2610B2A7A340CFFE968E020BBBA422F4 D3DSHADE_FLAT;
$2610B2A7A340CFFE968E020BBBA422F4 D3DSHADE_FORCE_DWORD;
$2610B2A7A340CFFE968E020BBBA422F4 D3DSHADE_GOURAUD;
$2610B2A7A340CFFE968E020BBBA422F4 D3DSHADE_PHONG;
MACRO_D3DSTATE D3DSTATE_OVERRIDE_BIAS;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONALL;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONBACK;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONBOTTOM;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONFRONT;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONGEN0;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONGEN1;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONGEN2;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONGEN3;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONGEN4;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONGEN5;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONLEFT;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONRIGHT;
MACRO_D3DSTATUS D3DSTATUS_CLIPINTERSECTIONTOP;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONALL;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONBACK;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONBOTTOM;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONFRONT;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONGEN0;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONGEN1;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONGEN2;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONGEN3;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONGEN4;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONGEN5;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONLEFT;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONRIGHT;
MACRO_D3DSTATUS D3DSTATUS_CLIPUNIONTOP;
MACRO_D3DSTATUS D3DSTATUS_DEFAULT;
MACRO_D3DSTATUS D3DSTATUS_ZNOTVISIBLE;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_DECR;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_DECRSAT;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_INCR;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_INCRSAT;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_INVERT;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_KEEP;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_REPLACE;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_TWOSIDED;
MACRO_D3DSTENCILCAPS D3DSTENCILCAPS_ZERO;
_D3DSTENCILOP D3DSTENCILOP_DECR;
_D3DSTENCILOP D3DSTENCILOP_DECRSAT;
_D3DSTENCILOP D3DSTENCILOP_FORCE_DWORD;
_D3DSTENCILOP D3DSTENCILOP_INCR;
_D3DSTENCILOP D3DSTENCILOP_INCRSAT;
_D3DSTENCILOP D3DSTENCILOP_INVERT;
_D3DSTENCILOP D3DSTENCILOP_KEEP;
_D3DSTENCILOP D3DSTENCILOP_REPLACE;
_D3DSTENCILOP D3DSTENCILOP_ZERO;
_D3DTEXTUREADDRESS D3DTADDRESS_BORDER;
_D3DTEXTUREADDRESS D3DTADDRESS_CLAMP;
_D3DTEXTUREADDRESS D3DTADDRESS_FORCE_DWORD;
_D3DTEXTUREADDRESS D3DTADDRESS_MIRROR;
_D3DTEXTUREADDRESS D3DTADDRESS_WRAP;
MACRO_D3DTA D3DTA_ALPHAREPLICATE;
MACRO_D3DTA D3DTA_COMPLEMENT;
MACRO_D3DTA D3DTA_CURRENT;
MACRO_D3DTA D3DTA_DIFFUSE;
MACRO_D3DTA D3DTA_SELECTMASK;
MACRO_D3DTA D3DTA_SPECULAR;
MACRO_D3DTA D3DTA_TEXTURE;
MACRO_D3DTA D3DTA_TFACTOR;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_ADD;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_COPY;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_DECAL;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_DECALALPHA;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_DECALMASK;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_FORCE_DWORD;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_MODULATE;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_MODULATEALPHA;
$6FCDE95E2C9B96CC3981C5612B34F5F0 D3DTBLEND_MODULATEMASK;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_ADD;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_ADDSIGNED;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_ADDSIGNED2X;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_ADDSMOOTH;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BLENDCURRENTALPHA;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BLENDDIFFUSEALPHA;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BLENDFACTORALPHA;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BLENDTEXTUREALPHA;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BLENDTEXTUREALPHAPM;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BUMPENVMAP;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_BUMPENVMAPLUMINANCE;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_DISABLE;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_DOTPRODUCT3;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATE;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATE2X;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATE4X;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_PREMODULATE;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_SELECTARG1;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_SELECTARG2;
MACRO_D3DTEXOPCAPS D3DTEXOPCAPS_SUBTRACT;
_D3DTEXTUREMAGFILTER D3DTFG_ANISOTROPIC;
_D3DTEXTUREMAGFILTER D3DTFG_FLATCUBIC;
_D3DTEXTUREMAGFILTER D3DTFG_FORCE_DWORD;
_D3DTEXTUREMAGFILTER D3DTFG_GAUSSIANCUBIC;
_D3DTEXTUREMAGFILTER D3DTFG_LINEAR;
_D3DTEXTUREMAGFILTER D3DTFG_POINT;
_D3DTEXTUREMINFILTER D3DTFN_ANISOTROPIC;
_D3DTEXTUREMINFILTER D3DTFN_FORCE_DWORD;
_D3DTEXTUREMINFILTER D3DTFN_LINEAR;
_D3DTEXTUREMINFILTER D3DTFN_POINT;
_D3DTEXTUREMIPFILTER D3DTFP_FORCE_DWORD;
_D3DTEXTUREMIPFILTER D3DTFP_LINEAR;
_D3DTEXTUREMIPFILTER D3DTFP_NONE;
_D3DTEXTUREMIPFILTER D3DTFP_POINT;
_D3DTEXTUREOP D3DTOP_ADD;
_D3DTEXTUREOP D3DTOP_ADDSIGNED;
_D3DTEXTUREOP D3DTOP_ADDSIGNED2X;
_D3DTEXTUREOP D3DTOP_ADDSMOOTH;
_D3DTEXTUREOP D3DTOP_BLENDCURRENTALPHA;
_D3DTEXTUREOP D3DTOP_BLENDDIFFUSEALPHA;
_D3DTEXTUREOP D3DTOP_BLENDFACTORALPHA;
_D3DTEXTUREOP D3DTOP_BLENDTEXTUREALPHA;
_D3DTEXTUREOP D3DTOP_BLENDTEXTUREALPHAPM;
_D3DTEXTUREOP D3DTOP_BUMPENVMAP;
_D3DTEXTUREOP D3DTOP_BUMPENVMAPLUMINANCE;
_D3DTEXTUREOP D3DTOP_DISABLE;
_D3DTEXTUREOP D3DTOP_DOTPRODUCT3;
_D3DTEXTUREOP D3DTOP_FORCE_DWORD;
_D3DTEXTUREOP D3DTOP_MODULATE;
_D3DTEXTUREOP D3DTOP_MODULATE2X;
_D3DTEXTUREOP D3DTOP_MODULATE4X;
_D3DTEXTUREOP D3DTOP_MODULATEALPHA_ADDCOLOR;
_D3DTEXTUREOP D3DTOP_MODULATECOLOR_ADDALPHA;
_D3DTEXTUREOP D3DTOP_MODULATEINVALPHA_ADDCOLOR;
_D3DTEXTUREOP D3DTOP_MODULATEINVCOLOR_ADDALPHA;
_D3DTEXTUREOP D3DTOP_PREMODULATE;
_D3DTEXTUREOP D3DTOP_SELECTARG1;
_D3DTEXTUREOP D3DTOP_SELECTARG2;
_D3DTEXTUREOP D3DTOP_SUBTRACT;
MACRO_D3DTRANSFORMCAPS D3DTRANSFORMCAPS_CLIP;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_FORCE_DWORD;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_PROJECTION;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE0;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE1;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE2;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE3;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE4;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE5;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE6;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_TEXTURE7;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_VIEW;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_WORLD;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_WORLD1;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_WORLD2;
_D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATE_WORLD3;
MACRO_D3DTRANSFORM D3DTRANSFORM_CLIPPED;
MACRO_D3DTRANSFORM D3DTRANSFORM_UNCLIPPED;
MACRO_D3DTRIFLAG D3DTRIFLAG_EDGEENABLE1;
MACRO_D3DTRIFLAG D3DTRIFLAG_EDGEENABLE2;
MACRO_D3DTRIFLAG D3DTRIFLAG_EDGEENABLE3;
MACRO_D3DTRIFLAG D3DTRIFLAG_EDGEENABLETRIANGLE;
MACRO_D3DTRIFLAG D3DTRIFLAG_EVEN;
MACRO_D3DTRIFLAG D3DTRIFLAG_ODD;
MACRO_D3DTRIFLAG D3DTRIFLAG_START;
_D3DTEXTURESTAGESTATETYPE D3DTSS_ADDRESS;
_D3DTEXTURESTAGESTATETYPE D3DTSS_ADDRESSU;
_D3DTEXTURESTAGESTATETYPE D3DTSS_ADDRESSV;
_D3DTEXTURESTAGESTATETYPE D3DTSS_ALPHAARG1;
_D3DTEXTURESTAGESTATETYPE D3DTSS_ALPHAARG2;
_D3DTEXTURESTAGESTATETYPE D3DTSS_ALPHAOP;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BORDERCOLOR;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BUMPENVLOFFSET;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BUMPENVLSCALE;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BUMPENVMAT00;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BUMPENVMAT01;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BUMPENVMAT10;
_D3DTEXTURESTAGESTATETYPE D3DTSS_BUMPENVMAT11;
_D3DTEXTURESTAGESTATETYPE D3DTSS_COLORARG1;
_D3DTEXTURESTAGESTATETYPE D3DTSS_COLORARG2;
_D3DTEXTURESTAGESTATETYPE D3DTSS_COLOROP;
_D3DTEXTURESTAGESTATETYPE D3DTSS_FORCE_DWORD;
_D3DTEXTURESTAGESTATETYPE D3DTSS_MAGFILTER;
_D3DTEXTURESTAGESTATETYPE D3DTSS_MAXANISOTROPY;
_D3DTEXTURESTAGESTATETYPE D3DTSS_MAXMIPLEVEL;
_D3DTEXTURESTAGESTATETYPE D3DTSS_MINFILTER;
_D3DTEXTURESTAGESTATETYPE D3DTSS_MIPFILTER;
_D3DTEXTURESTAGESTATETYPE D3DTSS_MIPMAPLODBIAS;
MACRO_D3DTSS D3DTSS_TCI_CAMERASPACENORMAL;
MACRO_D3DTSS D3DTSS_TCI_CAMERASPACEPOSITION;
MACRO_D3DTSS D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR;
MACRO_D3DTSS D3DTSS_TCI_PASSTHRU;
_D3DTEXTURESTAGESTATETYPE D3DTSS_TEXCOORDINDEX;
_D3DTEXTURESTAGESTATETYPE D3DTSS_TEXTURETRANSFORMFLAGS;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_COUNT1;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_COUNT2;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_COUNT3;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_COUNT4;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_DISABLE;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_FORCE_DWORD;
_D3DTEXTURETRANSFORMFLAGS D3DTTFF_PROJECTED;
MACRO_D3DVBCAPS D3DVBCAPS_DONOTCLIP;
MACRO_D3DVBCAPS D3DVBCAPS_OPTIMIZED;
MACRO_D3DVBCAPS D3DVBCAPS_SYSTEMMEMORY;
MACRO_D3DVBCAPS D3DVBCAPS_WRITEONLY;
_D3DVERTEXBLENDFLAGS D3DVBLEND_1WEIGHT;
_D3DVERTEXBLENDFLAGS D3DVBLEND_2WEIGHTS;
_D3DVERTEXBLENDFLAGS D3DVBLEND_3WEIGHTS;
_D3DVERTEXBLENDFLAGS D3DVBLEND_DISABLE;
MACRO_D3DVIS D3DVIS_INSIDE_BOTTOM;
MACRO_D3DVIS D3DVIS_INSIDE_FAR;
MACRO_D3DVIS D3DVIS_INSIDE_FRUSTUM;
MACRO_D3DVIS D3DVIS_INSIDE_LEFT;
MACRO_D3DVIS D3DVIS_INSIDE_NEAR;
MACRO_D3DVIS D3DVIS_INSIDE_RIGHT;
MACRO_D3DVIS D3DVIS_INSIDE_TOP;
MACRO_D3DVIS D3DVIS_INTERSECT_BOTTOM;
MACRO_D3DVIS D3DVIS_INTERSECT_FAR;
MACRO_D3DVIS D3DVIS_INTERSECT_FRUSTUM;
MACRO_D3DVIS D3DVIS_INTERSECT_LEFT;
MACRO_D3DVIS D3DVIS_INTERSECT_NEAR;
MACRO_D3DVIS D3DVIS_INTERSECT_RIGHT;
MACRO_D3DVIS D3DVIS_INTERSECT_TOP;
MACRO_D3DVIS D3DVIS_MASK_BOTTOM;
MACRO_D3DVIS D3DVIS_MASK_FAR;
MACRO_D3DVIS D3DVIS_MASK_FRUSTUM;
MACRO_D3DVIS D3DVIS_MASK_LEFT;
MACRO_D3DVIS D3DVIS_MASK_NEAR;
MACRO_D3DVIS D3DVIS_MASK_RIGHT;
MACRO_D3DVIS D3DVIS_MASK_TOP;
MACRO_D3DVIS D3DVIS_OUTSIDE_BOTTOM;
MACRO_D3DVIS D3DVIS_OUTSIDE_FAR;
MACRO_D3DVIS D3DVIS_OUTSIDE_FRUSTUM;
MACRO_D3DVIS D3DVIS_OUTSIDE_LEFT;
MACRO_D3DVIS D3DVIS_OUTSIDE_NEAR;
MACRO_D3DVIS D3DVIS_OUTSIDE_RIGHT;
MACRO_D3DVIS D3DVIS_OUTSIDE_TOP;
MACRO_D3DVOP D3DVOP_CLIP;
MACRO_D3DVOP D3DVOP_EXTENTS;
MACRO_D3DVOP D3DVOP_LIGHT;
MACRO_D3DVOP D3DVOP_TRANSFORM;
MACRO_D3DVTXPCAPS D3DVTXPCAPS_DIRECTIONALLIGHTS;
MACRO_D3DVTXPCAPS D3DVTXPCAPS_LOCALVIEWER;
MACRO_D3DVTXPCAPS D3DVTXPCAPS_MATERIALSOURCE7;
MACRO_D3DVTXPCAPS D3DVTXPCAPS_POSITIONALLIGHTS;
MACRO_D3DVTXPCAPS D3DVTXPCAPS_TEXGEN;
MACRO_D3DVTXPCAPS D3DVTXPCAPS_VERTEXFOG;
$B40D63E35646F4288D69365395F51DD5 D3DVT_FORCE_DWORD;
$B40D63E35646F4288D69365395F51DD5 D3DVT_LVERTEX;
$B40D63E35646F4288D69365395F51DD5 D3DVT_TLVERTEX;
$B40D63E35646F4288D69365395F51DD5 D3DVT_VERTEX;
MACRO_D3DWRAPCOORD D3DWRAPCOORD_0;
MACRO_D3DWRAPCOORD D3DWRAPCOORD_1;
MACRO_D3DWRAPCOORD D3DWRAPCOORD_2;
MACRO_D3DWRAPCOORD D3DWRAPCOORD_3;
MACRO_D3DWRAP D3DWRAP_U;
MACRO_D3DWRAP D3DWRAP_V;
_D3DZBUFFERTYPE D3DZB_FALSE;
_D3DZBUFFERTYPE D3DZB_FORCE_DWORD;
_D3DZBUFFERTYPE D3DZB_TRUE;
_D3DZBUFFERTYPE D3DZB_USEW;
MACRO_SECURITY_INFORMATION DACL_SECURITY_INFORMATION;
MACRO_DBGK DBGK_ALL_FLAGS;
MACRO_DBGK DBGK_KILL_PROCESS_ON_EXIT;
MACRO_DBG DBG_STATUS_BUGCHECK_FIRST;
MACRO_DBG DBG_STATUS_BUGCHECK_SECOND;
MACRO_DBG DBG_STATUS_CONTROL_C;
MACRO_DBG DBG_STATUS_DEBUG_CONTROL;
MACRO_DBG DBG_STATUS_FATAL;
MACRO_DBG DBG_STATUS_SYSRQ;
MACRO_DBG DBG_STATUS_WORKER;
MACRO_DIG DBL_DIG;
MACRO_DIG DBL_MANT_DIG;
MACRO_EXP DBL_MAX_10_EXP;
MACRO_EXP DBL_MAX_EXP;
MACRO_EXP DBL_MIN_10_EXP;
MACRO_EXP DBL_MIN_EXP;
MACRO_DCBA DCBA_FACEDOWNCENTER;
MACRO_DCBA DCBA_FACEDOWNLEFT;
MACRO_DCBA DCBA_FACEDOWNNONE;
MACRO_DCBA DCBA_FACEDOWNRIGHT;
MACRO_DCBA DCBA_FACEUPCENTER;
MACRO_DCBA DCBA_FACEUPLEFT;
MACRO_DCBA DCBA_FACEUPNONE;
MACRO_DCBA DCBA_FACEUPRIGHT;
MACRO_DCB DCB_ACCUMULATE;
MACRO_DCB DCB_DIRTY;
MACRO_DCB DCB_DISABLE;
MACRO_DCB DCB_ENABLE;
MACRO_DCB DCB_RESET;
MACRO_DCB DCB_SET;
MACRO_DCR DCR_DRIVER;
MACRO_DCR DCR_HALFTONE;
MACRO_DCR DCR_SOLID;
MACRO_DCTT DCTT_BITMAP;
MACRO_DCTT DCTT_DOWNLOAD;
MACRO_DCTT DCTT_DOWNLOAD_OUTLINE;
MACRO_DCTT DCTT_SUBDEV;
MACRO_DC_BINADJUST DC_BINADJUST;
MACRO_DC DC_BINNAMES;
MACRO_DC DC_BINS;
MACRO_DC_BRUSH DC_BRUSH;
MACRO_DC_TRIVIAL DC_COMPLEX;
MACRO_DC DC_COPIES;
MACRO_DC_DATATYPE DC_DATATYPE_PRODUCED;
MACRO_DC DC_DRIVER;
MACRO_DC DC_DUPLEX;
MACRO_DC_DATATYPE DC_EMF_COMPLIANT;
MACRO_DC DC_ENUMRESOLUTIONS;
MACRO_DC DC_EXTRA;
MACRO_DC DC_FIELDS;
MACRO_DC DC_FILEDEPENDENCIES;
MACRO_DC_BINADJUST DC_MANUFACTURER;
MACRO_DC DC_MAXEXTENT;
MACRO_DC DC_MINEXTENT;
MACRO_DC_BINADJUST DC_MODEL;
MACRO_DC DC_ORIENTATION;
MACRO_DC DC_PAPERNAMES;
MACRO_DC DC_PAPERS;
MACRO_DC DC_PAPERSIZE;
MACRO_DC_BRUSH DC_PEN;
MACRO_DC_TRIVIAL DC_RECT;
MACRO_DC DC_SIZE;
MACRO_DC_TRIVIAL DC_TRIVIAL;
MACRO_DC DC_TRUETYPE;
MACRO_DC DC_VERSION;
MACRO_DDABLT DDABLT_SRCOVERDEST;
MACRO_DDBD DDBD_1;
MACRO_DDBD DDBD_16;
MACRO_DDBD DDBD_2;
MACRO_DDBD DDBD_24;
MACRO_DDBD DDBD_32;
MACRO_DDBD DDBD_4;
MACRO_DDBD DDBD_8;
MACRO_DDBLTFAST DDBLTFAST_DESTCOLORKEY;
MACRO_DDBLTFAST DDBLTFAST_DONOTWAIT;
MACRO_DDBLTFAST DDBLTFAST_NOCOLORKEY;
MACRO_DDBLTFAST DDBLTFAST_SRCCOLORKEY;
MACRO_DDBLTFAST DDBLTFAST_WAIT;
MACRO_DDBLTFX DDBLTFX_ARITHSTRETCHY;
MACRO_DDBLTFX DDBLTFX_MIRRORLEFTRIGHT;
MACRO_DDBLTFX DDBLTFX_MIRRORUPDOWN;
MACRO_DDBLTFX DDBLTFX_NOTEARING;
MACRO_DDBLTFX DDBLTFX_ROTATE180;
MACRO_DDBLTFX DDBLTFX_ROTATE270;
MACRO_DDBLTFX DDBLTFX_ROTATE90;
MACRO_DDBLTFX DDBLTFX_ZBUFFERBASEDEST;
MACRO_DDBLTFX DDBLTFX_ZBUFFERRANGE;
MACRO_DDBLT_AFLAGS DDBLT_AFLAGS;
MACRO_DDBLT DDBLT_ALPHADEST;
MACRO_DDBLT DDBLT_ALPHADESTCONSTOVERRIDE;
MACRO_DDBLT DDBLT_ALPHADESTNEG;
MACRO_DDBLT DDBLT_ALPHADESTSURFACEOVERRIDE;
MACRO_DDBLT DDBLT_ALPHAEDGEBLEND;
MACRO_DDBLT DDBLT_ALPHASRC;
MACRO_DDBLT DDBLT_ALPHASRCCONSTOVERRIDE;
MACRO_DDBLT DDBLT_ALPHASRCNEG;
MACRO_DDBLT DDBLT_ALPHASRCSURFACEOVERRIDE;
MACRO_DDBLT DDBLT_ASYNC;
MACRO_DDBLT DDBLT_COLORFILL;
MACRO_DDBLT DDBLT_DDFX;
MACRO_DDBLT DDBLT_DDROPS;
MACRO_DDBLT DDBLT_DEPTHFILL;
MACRO_DDBLT DDBLT_DONOTWAIT;
MACRO_DDBLT DDBLT_EXTENDED_FLAGS;
MACRO_DDBLT DDBLT_EXTENDED_LINEAR_CONTENT;
MACRO_DDBLT DDBLT_KEYDEST;
MACRO_DDBLT DDBLT_KEYDESTOVERRIDE;
MACRO_DDBLT DDBLT_KEYSRC;
MACRO_DDBLT DDBLT_KEYSRCOVERRIDE;
MACRO_DDBLT DDBLT_LAST_PRESENTATION;
MACRO_DDBLT DDBLT_PRESENTATION;
MACRO_DDBLT DDBLT_ROP;
MACRO_DDBLT DDBLT_ROTATIONANGLE;
MACRO_DDBLT DDBLT_WAIT;
MACRO_DDBLT DDBLT_ZBUFFER;
MACRO_DDBLT DDBLT_ZBUFFERDESTCONSTOVERRIDE;
MACRO_DDBLT DDBLT_ZBUFFERDESTOVERRIDE;
MACRO_DDBLT DDBLT_ZBUFFERSRCCONSTOVERRIDE;
MACRO_DDBLT DDBLT_ZBUFFERSRCOVERRIDE;
MACRO_DDCAPS2 DDCAPS2_AUTOFLIPOVERLAY;
MACRO_DDCAPS2 DDCAPS2_CANAUTOGENMIPMAP;
MACRO_DDCAPS2 DDCAPS2_CANBOBHARDWARE;
MACRO_DDCAPS2 DDCAPS2_CANBOBINTERLEAVED;
MACRO_DDCAPS2 DDCAPS2_CANBOBNONINTERLEAVED;
MACRO_DDCAPS2 DDCAPS2_CANCALIBRATEGAMMA;
MACRO_DDCAPS2 DDCAPS2_CANDROPZ16BIT;
MACRO_DDCAPS2 DDCAPS2_CANFLIPODDEVEN;
MACRO_DDCAPS2 DDCAPS2_CANMANAGERESOURCE;
MACRO_DDCAPS2 DDCAPS2_CANMANAGETEXTURE;
MACRO_DDCAPS2 DDCAPS2_CANRENDERWINDOWED;
MACRO_DDCAPS2 DDCAPS2_CERTIFIED;
MACRO_DDCAPS2 DDCAPS2_COLORCONTROLOVERLAY;
MACRO_DDCAPS2 DDCAPS2_COLORCONTROLPRIMARY;
MACRO_DDCAPS2 DDCAPS2_COPYFOURCC;
MACRO_DDCAPS2 DDCAPS2_DYNAMICTEXTURES;
MACRO_DDCAPS2 DDCAPS2_FLIPINTERVAL;
MACRO_DDCAPS2 DDCAPS2_FLIPNOVSYNC;
MACRO_DDCAPS2 DDCAPS2_NO2DDURING3DSCENE;
MACRO_DDCAPS2 DDCAPS2_NONLOCALVIDMEM;
MACRO_DDCAPS2 DDCAPS2_NONLOCALVIDMEMCAPS;
MACRO_DDCAPS2 DDCAPS2_NOPAGELOCKREQUIRED;
MACRO_DDCAPS2 DDCAPS2_PRIMARYGAMMA;
MACRO_DDCAPS2 DDCAPS2_RESERVED1;
MACRO_DDCAPS2 DDCAPS2_STEREO;
MACRO_DDCAPS2 DDCAPS2_SYSTONONLOCAL_AS_SYSTOLOCAL;
MACRO_DDCAPS2 DDCAPS2_TEXMANINNONLOCALVIDMEM;
MACRO_DDCAPS2 DDCAPS2_VIDEOPORT;
MACRO_DDCAPS2 DDCAPS2_WIDESURFACES;
MACRO_DDCAPS_3D DDCAPS_3D;
MACRO_DDCAPS_3D DDCAPS_ALIGNBOUNDARYDEST;
MACRO_DDCAPS_3D DDCAPS_ALIGNBOUNDARYSRC;
MACRO_DDCAPS_3D DDCAPS_ALIGNSIZEDEST;
MACRO_DDCAPS_3D DDCAPS_ALIGNSIZESRC;
MACRO_DDCAPS_3D DDCAPS_ALIGNSTRIDE;
MACRO_DDCAPS_3D DDCAPS_ALPHA;
MACRO_DDCAPS_3D DDCAPS_BANKSWITCHED;
MACRO_DDCAPS_3D DDCAPS_BLT;
MACRO_DDCAPS_3D DDCAPS_BLTCOLORFILL;
MACRO_DDCAPS_3D DDCAPS_BLTDEPTHFILL;
MACRO_DDCAPS_3D DDCAPS_BLTFOURCC;
MACRO_DDCAPS_3D DDCAPS_BLTQUEUE;
MACRO_DDCAPS_3D DDCAPS_BLTSTRETCH;
MACRO_DDCAPS_3D DDCAPS_CANBLTSYSMEM;
MACRO_DDCAPS_3D DDCAPS_CANCLIP;
MACRO_DDCAPS_3D DDCAPS_CANCLIPSTRETCHED;
MACRO_DDCAPS_3D DDCAPS_COLORKEY;
MACRO_DDCAPS_3D DDCAPS_COLORKEYHWASSIST;
MACRO_DDCAPS_3D DDCAPS_GDI;
MACRO_DDCAPS_3D DDCAPS_NOHARDWARE;
MACRO_DDCAPS_3D DDCAPS_OVERLAY;
MACRO_DDCAPS_3D DDCAPS_OVERLAYCANTCLIP;
MACRO_DDCAPS_3D DDCAPS_OVERLAYFOURCC;
MACRO_DDCAPS_3D DDCAPS_OVERLAYSTRETCH;
MACRO_DDCAPS_3D DDCAPS_PALETTE;
MACRO_DDCAPS_3D DDCAPS_PALETTEVSYNC;
MACRO_DDCAPS_3D DDCAPS_READSCANLINE;
MACRO_DDCAPS_3D DDCAPS_RESERVED1;
MACRO_DDCAPS DDCAPS_STEREOVIEW;
MACRO_DDCAPS_3D DDCAPS_VBI;
MACRO_DDCAPS_3D DDCAPS_ZBLTS;
MACRO_DDCAPS_3D DDCAPS_ZOVERLAYS;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTBLT;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTBLTCLRSPACE;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTBLTCLRSPACEYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTBLTYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTOVERLAY;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTOVERLAYCLRSPACE;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTOVERLAYCLRSPACEYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTOVERLAYONEACTIVE;
MACRO_DDCKEYCAPS DDCKEYCAPS_DESTOVERLAYYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_NOCOSTOVERLAY;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCBLT;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCBLTCLRSPACE;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCBLTCLRSPACEYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCBLTYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCOVERLAY;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCOVERLAYCLRSPACE;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCOVERLAYCLRSPACEYUV;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCOVERLAYONEACTIVE;
MACRO_DDCKEYCAPS DDCKEYCAPS_SRCOVERLAYYUV;
MACRO_DDCKEY DDCKEY_COLORSPACE;
MACRO_DDCKEY DDCKEY_DESTBLT;
MACRO_DDCKEY DDCKEY_DESTOVERLAY;
MACRO_DDCKEY DDCKEY_SRCBLT;
MACRO_DDCKEY DDCKEY_SRCOVERLAY;
MACRO_DDCOLOR DDCOLOR_BRIGHTNESS;
MACRO_DDCOLOR DDCOLOR_COLORENABLE;
MACRO_DDCOLOR DDCOLOR_CONTRAST;
MACRO_DDCOLOR DDCOLOR_GAMMA;
MACRO_DDCOLOR DDCOLOR_HUE;
MACRO_DDCOLOR DDCOLOR_SATURATION;
MACRO_DDCOLOR DDCOLOR_SHARPNESS;
MACRO_DDCREATE DDCREATE_EMULATIONONLY;
MACRO_DDCREATE DDCREATE_HARDWAREONLY;
MACRO_DDEDM DDEDM_REFRESHRATES;
MACRO_DDEDM DDEDM_STANDARDVGAMODES;
MACRO_DDEM DDEM_MODEFAILED;
MACRO_DDEM DDEM_MODEPASSED;
MACRO_DDENUMOVERLAYZ DDENUMOVERLAYZ_BACKTOFRONT;
MACRO_DDENUMOVERLAYZ DDENUMOVERLAYZ_FRONTTOBACK;
MACRO_DDENUMRET DDENUMRET_CANCEL;
MACRO_DDENUMRET DDENUMRET_OK;
MACRO_DDENUMSURFACES DDENUMSURFACES_ALL;
MACRO_DDENUMSURFACES DDENUMSURFACES_CANBECREATED;
MACRO_DDENUMSURFACES DDENUMSURFACES_DOESEXIST;
MACRO_DDENUMSURFACES DDENUMSURFACES_MATCH;
MACRO_DDENUMSURFACES DDENUMSURFACES_NOMATCH;
MACRO_DDENUM DDENUM_ATTACHEDSECONDARYDEVICES;
MACRO_DDENUM DDENUM_DETACHEDSECONDARYDEVICES;
MACRO_DDENUM DDENUM_NONDISPLAYDEVICES;
MACRO_DDERR DDERR_ALREADYINITIALIZED;
MACRO_DDERR DDERR_BLTFASTCANTCLIP;
MACRO_DDERR DDERR_CANNOTATTACHSURFACE;
MACRO_DDERR DDERR_CANNOTDETACHSURFACE;
MACRO_DDERR DDERR_CANTCREATEDC;
MACRO_DDERR DDERR_CANTDUPLICATE;
MACRO_DDERR DDERR_CANTLOCKSURFACE;
MACRO_DDERR DDERR_CANTPAGELOCK;
MACRO_DDERR DDERR_CANTPAGEUNLOCK;
MACRO_DDERR DDERR_CLIPPERISUSINGHWND;
MACRO_DDERR DDERR_COLORKEYNOTSET;
MACRO_DDERR DDERR_CURRENTLYNOTAVAIL;
MACRO_DDERR DDERR_D3DNOTINITIALIZED;
MACRO_DDERR DDERR_DCALREADYCREATED;
MACRO_DDERR DDERR_DDSCAPSCOMPLEXREQUIRED;
MACRO_DDERR DDERR_DEVICEDOESNTOWNSURFACE;
MACRO_DDERR DDERR_DIRECTDRAWALREADYCREATED;
MACRO_DDERR DDERR_EXCEPTION;
MACRO_DDERR DDERR_EXCLUSIVEMODEALREADYSET;
MACRO_DDERR DDERR_EXPIRED;
MACRO_DDERR DDERR_GENERIC;
MACRO_DDERR DDERR_HEIGHTALIGN;
MACRO_DDERR DDERR_HWNDALREADYSET;
MACRO_DDERR DDERR_HWNDSUBCLASSED;
MACRO_DDERR DDERR_IMPLICITLYCREATED;
MACRO_DDERR DDERR_INCOMPATIBLEPRIMARY;
MACRO_DDERR DDERR_INVALIDCAPS;
MACRO_DDERR DDERR_INVALIDCLIPLIST;
MACRO_DDERR DDERR_INVALIDDIRECTDRAWGUID;
MACRO_DDERR DDERR_INVALIDMODE;
MACRO_DDERR DDERR_INVALIDOBJECT;
MACRO_DDERR DDERR_INVALIDPARAMS;
MACRO_DDERR DDERR_INVALIDPIXELFORMAT;
MACRO_DDERR DDERR_INVALIDPOSITION;
MACRO_DDERR DDERR_INVALIDRECT;
MACRO_DDERR DDERR_INVALIDSTREAM;
MACRO_DDERR DDERR_INVALIDSURFACETYPE;
MACRO_DDERR DDERR_LOCKEDSURFACES;
MACRO_DDERR DDERR_MOREDATA;
MACRO_DDERR DDERR_NEWMODE;
MACRO_DDERR DDERR_NO3D;
MACRO_DDERR DDERR_NOALPHAHW;
MACRO_DDERR DDERR_NOBLTHW;
MACRO_DDERR DDERR_NOCLIPLIST;
MACRO_DDERR DDERR_NOCLIPPERATTACHED;
MACRO_DDERR DDERR_NOCOLORCONVHW;
MACRO_DDERR DDERR_NOCOLORKEY;
MACRO_DDERR DDERR_NOCOLORKEYHW;
MACRO_DDERR DDERR_NOCOOPERATIVELEVELSET;
MACRO_DDERR DDERR_NODC;
MACRO_DDERR DDERR_NODDROPSHW;
MACRO_DDERR DDERR_NODIRECTDRAWHW;
MACRO_DDERR DDERR_NODIRECTDRAWSUPPORT;
MACRO_DDERR DDERR_NODRIVERSUPPORT;
MACRO_DDERR DDERR_NOEMULATION;
MACRO_DDERR DDERR_NOEXCLUSIVEMODE;
MACRO_DDERR DDERR_NOFLIPHW;
MACRO_DDERR DDERR_NOFOCUSWINDOW;
MACRO_DDERR DDERR_NOGDI;
MACRO_DDERR DDERR_NOHWND;
MACRO_DDERR DDERR_NOMIPMAPHW;
MACRO_DDERR DDERR_NOMIRRORHW;
MACRO_DDERR DDERR_NOMONITORINFORMATION;
MACRO_DDERR DDERR_NONONLOCALVIDMEM;
MACRO_DDERR DDERR_NOOPTIMIZEHW;
MACRO_DDERR DDERR_NOOVERLAYDEST;
MACRO_DDERR DDERR_NOOVERLAYHW;
MACRO_DDERR DDERR_NOPALETTEATTACHED;
MACRO_DDERR DDERR_NOPALETTEHW;
MACRO_DDERR DDERR_NORASTEROPHW;
MACRO_DDERR DDERR_NOROTATIONHW;
MACRO_DDERR DDERR_NOSTEREOHARDWARE;
MACRO_DDERR DDERR_NOSTRETCHHW;
MACRO_DDERR DDERR_NOSURFACELEFT;
MACRO_DDERR DDERR_NOT4BITCOLOR;
MACRO_DDERR DDERR_NOT4BITCOLORINDEX;
MACRO_DDERR DDERR_NOT8BITCOLOR;
MACRO_DDERR DDERR_NOTAOVERLAYSURFACE;
MACRO_DDERR DDERR_NOTEXTUREHW;
MACRO_DDERR DDERR_NOTFLIPPABLE;
MACRO_DDERR DDERR_NOTFOUND;
MACRO_DDERR DDERR_NOTINITIALIZED;
MACRO_DDERR DDERR_NOTLOADED;
MACRO_DDERR DDERR_NOTLOCKED;
MACRO_DDERR DDERR_NOTONMIPMAPSUBLEVEL;
MACRO_DDERR DDERR_NOTPAGELOCKED;
MACRO_DDERR DDERR_NOTPALETTIZED;
MACRO_DDERR DDERR_NOVSYNCHW;
MACRO_DDERR DDERR_NOZBUFFERHW;
MACRO_DDERR DDERR_NOZOVERLAYHW;
MACRO_DDERR DDERR_OUTOFCAPS;
MACRO_DDERR DDERR_OUTOFMEMORY;
MACRO_DDERR DDERR_OUTOFVIDEOMEMORY;
MACRO_DDERR DDERR_OVERLAPPINGRECTS;
MACRO_DDERR DDERR_OVERLAYCANTCLIP;
MACRO_DDERR DDERR_OVERLAYCOLORKEYONLYONEACTIVE;
MACRO_DDERR DDERR_OVERLAYNOTVISIBLE;
MACRO_DDERR DDERR_PALETTEBUSY;
MACRO_DDERR DDERR_PRIMARYSURFACEALREADYEXISTS;
MACRO_DDERR DDERR_REGIONTOOSMALL;
MACRO_DDERR DDERR_SURFACEALREADYATTACHED;
MACRO_DDERR DDERR_SURFACEALREADYDEPENDENT;
MACRO_DDERR DDERR_SURFACEBUSY;
MACRO_DDERR DDERR_SURFACEISOBSCURED;
MACRO_DDERR DDERR_SURFACELOST;
MACRO_DDERR DDERR_SURFACENOTATTACHED;
MACRO_DDERR DDERR_TESTFINISHED;
MACRO_DDERR DDERR_TOOBIGHEIGHT;
MACRO_DDERR DDERR_TOOBIGSIZE;
MACRO_DDERR DDERR_TOOBIGWIDTH;
MACRO_DDERR DDERR_UNSUPPORTED;
MACRO_DDERR DDERR_UNSUPPORTEDFORMAT;
MACRO_DDERR DDERR_UNSUPPORTEDMASK;
MACRO_DDERR DDERR_UNSUPPORTEDMODE;
MACRO_DDERR DDERR_VERTICALBLANKINPROGRESS;
MACRO_DDERR DDERR_VIDEONOTACTIVE;
MACRO_DDERR DDERR_WASSTILLDRAWING;
MACRO_DDERR DDERR_WRONGMODE;
MACRO_DDERR DDERR_XALIGN;
MACRO_DDFLIP DDFLIP_DONOTWAIT;
MACRO_DDFLIP DDFLIP_EVEN;
MACRO_DDFLIP DDFLIP_INTERVAL2;
MACRO_DDFLIP DDFLIP_INTERVAL3;
MACRO_DDFLIP DDFLIP_INTERVAL4;
MACRO_DDFLIP DDFLIP_NOVSYNC;
MACRO_DDFLIP DDFLIP_ODD;
MACRO_DDFLIP DDFLIP_STEREO;
MACRO_DDFLIP DDFLIP_WAIT;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_BLTALPHAEDGEBLEND;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_BLTALPHAPIXELS;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_BLTALPHAPIXELSNEG;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_BLTALPHASURFACES;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_BLTALPHASURFACESNEG;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_OVERLAYALPHAPIXELS;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_OVERLAYALPHASURFACES;
MACRO_DDFXALPHACAPS DDFXALPHACAPS_OVERLAYALPHASURFACESNEG;
MACRO_DDFXCAPS DDFXCAPS_BLTALPHA;
MACRO_DDFXCAPS DDFXCAPS_BLTARITHSTRETCHY;
MACRO_DDFXCAPS DDFXCAPS_BLTARITHSTRETCHYN;
MACRO_DDFXCAPS DDFXCAPS_BLTFILTER;
MACRO_DDFXCAPS DDFXCAPS_BLTMIRRORLEFTRIGHT;
MACRO_DDFXCAPS DDFXCAPS_BLTMIRRORUPDOWN;
MACRO_DDFXCAPS DDFXCAPS_BLTROTATION;
MACRO_DDFXCAPS DDFXCAPS_BLTROTATION90;
MACRO_DDFXCAPS DDFXCAPS_BLTSHRINKX;
MACRO_DDFXCAPS DDFXCAPS_BLTSHRINKXN;
MACRO_DDFXCAPS DDFXCAPS_BLTSHRINKY;
MACRO_DDFXCAPS DDFXCAPS_BLTSHRINKYN;
MACRO_DDFXCAPS DDFXCAPS_BLTSTRETCHX;
MACRO_DDFXCAPS DDFXCAPS_BLTSTRETCHXN;
MACRO_DDFXCAPS DDFXCAPS_BLTSTRETCHY;
MACRO_DDFXCAPS DDFXCAPS_BLTSTRETCHYN;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYALPHA;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYARITHSTRETCHY;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYARITHSTRETCHYN;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYDEINTERLACE;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYFILTER;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYMIRRORLEFTRIGHT;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYMIRRORUPDOWN;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSHRINKX;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSHRINKXN;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSHRINKY;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSHRINKYN;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSTRETCHX;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSTRETCHXN;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSTRETCHY;
MACRO_DDFXCAPS DDFXCAPS_OVERLAYSTRETCHYN;
MACRO_DDGBS DDGBS_CANBLT;
MACRO_DDGBS DDGBS_ISBLTDONE;
MACRO_DDGDI DDGDI_GETHOSTIDENTIFIER;
MACRO_DDGFS DDGFS_CANFLIP;
MACRO_DDGFS DDGFS_ISFLIPDONE;
MACRO_DDHALINFO DDHALINFO_GETDRIVERINFO2;
MACRO_DDHALINFO DDHALINFO_GETDRIVERINFOSET;
MACRO_DDHALINFO DDHALINFO_ISPRIMARYDISPLAY;
MACRO_DDHALINFO DDHALINFO_MODEXILLEGAL;
MACRO_DDHAL_CB32 DDHAL_CB32_CANCREATESURFACE;
MACRO_DDHAL_CB32 DDHAL_CB32_CREATEPALETTE;
MACRO_DDHAL_CB32 DDHAL_CB32_CREATESURFACE;
MACRO_DDHAL_CB32 DDHAL_CB32_DESTROYDRIVER;
MACRO_DDHAL_CB32 DDHAL_CB32_GETSCANLINE;
MACRO_DDHAL_CB32 DDHAL_CB32_MAPMEMORY;
MACRO_DDHAL_CB32 DDHAL_CB32_SETCOLORKEY;
MACRO_DDHAL_CB32 DDHAL_CB32_SETMODE;
MACRO_DDHAL_CB32 DDHAL_CB32_WAITFORVERTICALBLANK;
MACRO_DDHAL_COLOR DDHAL_COLOR_COLORCONTROL;
MACRO_DDHAL_CREATESURFACEEX DDHAL_CREATESURFACEEX_SWAPHANDLES;
MACRO_DDHAL_EXEBUFCB32 DDHAL_D3DBUFCB32_CANCREATED3DBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_D3DBUFCB32_CREATED3DBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_D3DBUFCB32_DESTROYD3DBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_D3DBUFCB32_LOCKD3DBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_D3DBUFCB32_UNLOCKD3DBUF;
MACRO_DDHAL_CREATESURFACEEX DDHAL_DRIVER_HANDLED;
MACRO_DDHAL_CREATESURFACEEX DDHAL_DRIVER_NOCKEYHW;
MACRO_DDHAL_CREATESURFACEEX DDHAL_DRIVER_NOTHANDLED;
MACRO_DDHAL_EXEBUFCB32 DDHAL_EXEBUFCB32_CANCREATEEXEBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_EXEBUFCB32_CREATEEXEBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_EXEBUFCB32_DESTROYEXEBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_EXEBUFCB32_LOCKEXEBUF;
MACRO_DDHAL_EXEBUFCB32 DDHAL_EXEBUFCB32_UNLOCKEXEBUF;
MACRO_DDHAL_CREATESURFACEEX DDHAL_KERNEL_SYNCSURFACEDATA;
MACRO_DDHAL_CREATESURFACEEX DDHAL_KERNEL_SYNCVIDEOPORTDATA;
MACRO_DDHAL_CB32 DDHAL_MISC2CB32_ALPHABLT;
MACRO_DDHAL_CB32 DDHAL_MISC2CB32_CREATESURFACEEX;
MACRO_DDHAL_CB32 DDHAL_MISC2CB32_DESTROYDDLOCAL;
MACRO_DDHAL_CB32 DDHAL_MISC2CB32_GETDRIVERSTATE;
MACRO_DDHAL_CB32 DDHAL_MISCCB32_GETAVAILDRIVERMEMORY;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_BEGINFRAME;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_CREATE;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_DESTROY;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_ENDFRAME;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_GETCOMPBUFFINFO;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_GETFORMATS;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_GETGUIDS;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_GETINTERNALINFO;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_QUERYSTATUS;
MACRO_DDHAL_MOCOMP32 DDHAL_MOCOMP32_RENDER;
MACRO_DDHAL_CB32 DDHAL_NTCB32_FLIPTOGDISURFACE;
MACRO_DDHAL_CB32 DDHAL_NTCB32_FREEDRIVERMEMORY;
MACRO_DDHAL_CB32 DDHAL_NTCB32_SETEXCLUSIVEMODE;
MACRO_DDHAL_CB32 DDHAL_PALCB32_DESTROYPALETTE;
MACRO_DDHAL_CB32 DDHAL_PALCB32_SETENTRIES;
MACRO_DDHAL_PLEASEALLOC DDHAL_PLEASEALLOC_BLOCKSIZE;
MACRO_DDHAL_PLEASEALLOC DDHAL_PLEASEALLOC_USERMEM;
MACRO_DDHAL_PRIVATECAP DDHAL_PRIVATECAP_ATOMICSURFACECREATION;
MACRO_DDHAL_PRIVATECAP DDHAL_PRIVATECAP_NOTIFYPRIMARYCREATION;
MACRO_DDHAL_PRIVATECAP DDHAL_PRIVATECAP_RESERVED1;
MACRO_DDHAL DDHAL_SURFCB32_ADDATTACHEDSURFACE;
MACRO_DDHAL DDHAL_SURFCB32_BLT;
MACRO_DDHAL DDHAL_SURFCB32_DESTROYSURFACE;
MACRO_DDHAL DDHAL_SURFCB32_FLIP;
MACRO_DDHAL DDHAL_SURFCB32_GETBLTSTATUS;
MACRO_DDHAL DDHAL_SURFCB32_GETFLIPSTATUS;
MACRO_DDHAL DDHAL_SURFCB32_LOCK;
MACRO_DDHAL DDHAL_SURFCB32_RESERVED4;
MACRO_DDHAL DDHAL_SURFCB32_SETCLIPLIST;
MACRO_DDHAL DDHAL_SURFCB32_SETCOLORKEY;
MACRO_DDHAL DDHAL_SURFCB32_SETOVERLAYPOSITION;
MACRO_DDHAL DDHAL_SURFCB32_SETPALETTE;
MACRO_DDHAL DDHAL_SURFCB32_UNLOCK;
MACRO_DDHAL DDHAL_SURFCB32_UPDATEOVERLAY;
MACRO_DDHAL_CB32 DDHAL_VPORT32_CANCREATEVIDEOPORT;
MACRO_DDHAL_CB32 DDHAL_VPORT32_COLORCONTROL;
MACRO_DDHAL_CB32 DDHAL_VPORT32_CREATEVIDEOPORT;
MACRO_DDHAL_CB32 DDHAL_VPORT32_DESTROY;
MACRO_DDHAL_CB32 DDHAL_VPORT32_FLIP;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETBANDWIDTH;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETCONNECT;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETFIELD;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETFLIPSTATUS;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETINPUTFORMATS;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETLINE;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETOUTPUTFORMATS;
MACRO_DDHAL_CB32 DDHAL_VPORT32_GETSIGNALSTATUS;
MACRO_DDHAL_CB32 DDHAL_VPORT32_UPDATE;
MACRO_DDHAL_CB32 DDHAL_VPORT32_WAITFORSYNC;
MACRO_DDI DDI_DRIVER_VERSION_NT4;
MACRO_DDI DDI_DRIVER_VERSION_NT5;
MACRO_DDI DDI_DRIVER_VERSION_NT5_01;
MACRO_DDI DDI_DRIVER_VERSION_NT5_01_SP1;
MACRO_DDI DDI_DRIVER_VERSION_SP3;
MACRO_FD DDI_ERROR;
MACRO_DDLOCK DDLOCK_DISCARDCONTENTS;
MACRO_DDLOCK DDLOCK_DONOTWAIT;
MACRO_DDLOCK DDLOCK_EVENT;
MACRO_DDLOCK DDLOCK_HASVOLUMETEXTUREBOXRECT;
MACRO_DDLOCK DDLOCK_NODIRTYUPDATE;
MACRO_DDLOCK DDLOCK_NOOVERWRITE;
MACRO_DDLOCK DDLOCK_NOSYSLOCK;
MACRO_DDLOCK DDLOCK_OKTOSWAP;
MACRO_DDLOCK DDLOCK_READONLY;
MACRO_DDLOCK DDLOCK_SURFACEMEMORYPTR;
MACRO_DDLOCK DDLOCK_WAIT;
MACRO_DDLOCK DDLOCK_WRITEONLY;
MACRO_DDMCQUERY DDMCQUERY_READ;
MACRO_DDOSDCAPS DDOSDCAPS_MONOLITHICMIPMAP;
MACRO_DDOSDCAPS DDOSDCAPS_OPTCOMPRESSED;
MACRO_DDOSDCAPS DDOSDCAPS_OPTREORDERED;
MACRO_DDOSDCAPS DDOSDCAPS_VALIDOSCAPS;
MACRO_DDOSDCAPS DDOSDCAPS_VALIDSCAPS;
MACRO_DDOSD DDOSD_ALL;
MACRO_DDOSD DDOSD_COMPRESSION_RATIO;
MACRO_DDOSD DDOSD_GUID;
MACRO_DDOSD DDOSD_OSCAPS;
MACRO_DDOSD DDOSD_SCAPS;
MACRO_DDOVERFX DDOVERFX_ARITHSTRETCHY;
MACRO_DDOVERFX DDOVERFX_DEINTERLACE;
MACRO_DDOVERFX DDOVERFX_MIRRORLEFTRIGHT;
MACRO_DDOVERFX DDOVERFX_MIRRORUPDOWN;
MACRO_DDOVERZ DDOVERZ_INSERTINBACKOF;
MACRO_DDOVERZ DDOVERZ_INSERTINFRONTOF;
MACRO_DDOVERZ DDOVERZ_MOVEBACKWARD;
MACRO_DDOVERZ DDOVERZ_MOVEFORWARD;
MACRO_DDOVERZ DDOVERZ_SENDTOBACK;
MACRO_DDOVERZ DDOVERZ_SENDTOFRONT;
MACRO_DDOVER DDOVER_ADDDIRTYRECT;
MACRO_DDOVER DDOVER_ALPHADEST;
MACRO_DDOVER DDOVER_ALPHADESTCONSTOVERRIDE;
MACRO_DDOVER DDOVER_ALPHADESTNEG;
MACRO_DDOVER DDOVER_ALPHADESTSURFACEOVERRIDE;
MACRO_DDOVER DDOVER_ALPHAEDGEBLEND;
MACRO_DDOVER DDOVER_ALPHASRC;
MACRO_DDOVER DDOVER_ALPHASRCCONSTOVERRIDE;
MACRO_DDOVER DDOVER_ALPHASRCNEG;
MACRO_DDOVER DDOVER_ALPHASRCSURFACEOVERRIDE;
MACRO_DDOVER DDOVER_ARGBSCALEFACTORS;
MACRO_DDOVER DDOVER_AUTOFLIP;
MACRO_DDOVER DDOVER_BOB;
MACRO_DDOVER DDOVER_BOBHARDWARE;
MACRO_DDOVER DDOVER_DDFX;
MACRO_DDOVER DDOVER_DEGRADEARGBSCALING;
MACRO_DDOVER DDOVER_HIDE;
MACRO_DDOVER DDOVER_INTERLEAVED;
MACRO_DDOVER DDOVER_KEYDEST;
MACRO_DDOVER DDOVER_KEYDESTOVERRIDE;
MACRO_DDOVER DDOVER_KEYSRC;
MACRO_DDOVER DDOVER_KEYSRCOVERRIDE;
MACRO_DDOVER DDOVER_OVERRIDEBOBWEAVE;
MACRO_DDOVER DDOVER_REFRESHALL;
MACRO_DDOVER DDOVER_REFRESHDIRTYRECTS;
MACRO_DDOVER DDOVER_SHOW;
MACRO_DDPCAPS DDPCAPS_1BIT;
MACRO_DDPCAPS DDPCAPS_2BIT;
MACRO_DDPCAPS DDPCAPS_4BIT;
MACRO_DDPCAPS DDPCAPS_8BIT;
MACRO_DDPCAPS DDPCAPS_8BITENTRIES;
MACRO_DDPCAPS DDPCAPS_ALLOW256;
MACRO_DDPCAPS DDPCAPS_ALPHA;
MACRO_DDPCAPS DDPCAPS_INITIALIZE;
MACRO_DDPCAPS DDPCAPS_PRIMARYSURFACE;
MACRO_DDPCAPS DDPCAPS_PRIMARYSURFACELEFT;
MACRO_DDPCAPS DDPCAPS_VSYNC;
MACRO_DDPF DDPF_ALPHA;
MACRO_DDPF DDPF_ALPHAPIXELS;
MACRO_DDPF DDPF_ALPHAPREMULT;
MACRO_DDPF DDPF_BUMPDUDV;
MACRO_DDPF DDPF_BUMPLUMINANCE;
MACRO_DDPF DDPF_COMPRESSED;
MACRO_DDPF_D3DFORMAT DDPF_D3DFORMAT;
MACRO_DDPF DDPF_FOURCC;
MACRO_DDPF DDPF_LUMINANCE;
MACRO_DDPF DDPF_PALETTEINDEXED1;
MACRO_DDPF DDPF_PALETTEINDEXED2;
MACRO_DDPF DDPF_PALETTEINDEXED4;
MACRO_DDPF DDPF_PALETTEINDEXED8;
MACRO_DDPF DDPF_PALETTEINDEXEDTO8;
MACRO_DDPF DDPF_RGB;
MACRO_DDPF DDPF_RGBTOYUV;
MACRO_DDPF DDPF_STENCILBUFFER;
MACRO_DDPF DDPF_YUV;
MACRO_DDPF DDPF_ZBUFFER;
MACRO_DDPF DDPF_ZPIXELS;
MACRO_DDRAWISURF DDRAWISURF_BACKBUFFER;
MACRO_DDRAWISURF DDRAWISURF_DRIVERMANAGED;
MACRO_DDRAWISURF DDRAWISURF_FRONTBUFFER;
MACRO_DDRAWISURF DDRAWISURF_HASCKEYSRCBLT;
MACRO_DDRAWISURF DDRAWISURF_HASOVERLAYDATA;
MACRO_DDRAWISURF DDRAWISURF_HASPIXELFORMAT;
MACRO_DDRAWISURF DDRAWISURF_INVALID;
MACRO_DDRAWIVPORT DDRAWIVPORT_COLORKEYANDINTERP;
MACRO_DDRAWIVPORT DDRAWIVPORT_ON;
MACRO_DDRAWIVPORT DDRAWIVPORT_SOFTWARE_AUTOFLIP;
MACRO_DDRAWI DDRAWI_GETCOLOR;
MACRO_DDRAWI DDRAWI_SETCOLOR;
MACRO_DDRAWI_VPORTSTART DDRAWI_VPORTGETCOLOR;
MACRO_DDRAWI_VPORTSTART DDRAWI_VPORTSETCOLOR;
MACRO_DDRAWI_VPORTSTART DDRAWI_VPORTSTART;
MACRO_DDRAWI_VPORTSTART DDRAWI_VPORTSTOP;
MACRO_DDRAWI_VPORTSTART DDRAWI_VPORTUPDATE;
MACRO_DDSCAPS2 DDSCAPS2_ADDITIONALPRIMARY;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_ALLFACES;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_NEGATIVEX;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_NEGATIVEY;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_NEGATIVEZ;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_POSITIVEX;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_POSITIVEY;
MACRO_DDSCAPS2 DDSCAPS2_CUBEMAP_POSITIVEZ;
MACRO_DDSCAPS2 DDSCAPS2_D3DTEXTUREMANAGE;
MACRO_DDSCAPS2 DDSCAPS2_DISCARDBACKBUFFER;
MACRO_DDSCAPS2 DDSCAPS2_DONOTPERSIST;
MACRO_DDSCAPS2 DDSCAPS2_ENABLEALPHACHANNEL;
MACRO_DDSCAPS2 DDSCAPS2_EXTENDEDFORMATPRIMARY;
MACRO_DDSCAPS2 DDSCAPS2_HARDWAREDEINTERLACE;
MACRO_DDSCAPS2 DDSCAPS2_HINTANTIALIASING;
MACRO_DDSCAPS2 DDSCAPS2_HINTDYNAMIC;
MACRO_DDSCAPS2 DDSCAPS2_HINTSTATIC;
MACRO_DDSCAPS2 DDSCAPS2_MIPMAPSUBLEVEL;
MACRO_DDSCAPS2 DDSCAPS2_NOTUSERLOCKABLE;
MACRO_DDSCAPS2 DDSCAPS2_NPATCHES;
MACRO_DDSCAPS2 DDSCAPS2_OPAQUE;
MACRO_DDSCAPS2 DDSCAPS2_POINTS;
MACRO_DDSCAPS2 DDSCAPS2_RESERVED1;
MACRO_DDSCAPS2 DDSCAPS2_RESERVED2;
MACRO_DDSCAPS2 DDSCAPS2_RESERVED3;
MACRO_DDSCAPS2 DDSCAPS2_RESERVED4;
MACRO_DDSCAPS2 DDSCAPS2_RTPATCHES;
MACRO_DDSCAPS2 DDSCAPS2_STEREOSURFACELEFT;
MACRO_DDSCAPS2 DDSCAPS2_TEXTUREMANAGE;
MACRO_DDSCAPS2 DDSCAPS2_VOLUME;
MACRO_DDSCAPS3 DDSCAPS3_AUTOGENMIPMAP;
MACRO_DDSCAPS3 DDSCAPS3_DMAP;
MACRO_DDSCAPS3 DDSCAPS3_LIGHTWEIGHTMIPMAP;
MACRO_DDSCAPS3 DDSCAPS3_MULTISAMPLE_MASK;
MACRO_DDSCAPS3 DDSCAPS3_MULTISAMPLE_QUALITY_MASK;
MACRO_DDSCAPS3 DDSCAPS3_MULTISAMPLE_QUALITY_SHIFT;
MACRO_DDSCAPS3 DDSCAPS3_RESERVED1;
MACRO_DDSCAPS3 DDSCAPS3_RESERVED2;
MACRO_DDSCAPS DDSCAPS_3DDEVICE;
MACRO_DDSCAPS DDSCAPS_ALLOCONLOAD;
MACRO_DDSCAPS DDSCAPS_ALPHA;
MACRO_DDSCAPS DDSCAPS_BACKBUFFER;
MACRO_DDSCAPS_EXECUTEBUFFER DDSCAPS_COMMANDBUFFER;
MACRO_DDSCAPS DDSCAPS_COMPLEX;
MACRO_DDSCAPS_EXECUTEBUFFER DDSCAPS_EXECUTEBUFFER;
MACRO_DDSCAPS DDSCAPS_FLIP;
MACRO_DDSCAPS DDSCAPS_FRONTBUFFER;
MACRO_DDSCAPS DDSCAPS_HWCODEC;
MACRO_DDSCAPS DDSCAPS_LIVEVIDEO;
MACRO_DDSCAPS DDSCAPS_LOCALVIDMEM;
MACRO_DDSCAPS DDSCAPS_MIPMAP;
MACRO_DDSCAPS DDSCAPS_MODEX;
MACRO_DDSCAPS DDSCAPS_NONLOCALVIDMEM;
MACRO_DDSCAPS DDSCAPS_OFFSCREENPLAIN;
MACRO_DDSCAPS DDSCAPS_OPTIMIZED;
MACRO_DDSCAPS DDSCAPS_OVERLAY;
MACRO_DDSCAPS DDSCAPS_OWNDC;
MACRO_DDSCAPS DDSCAPS_PALETTE;
MACRO_DDSCAPS DDSCAPS_PRIMARYSURFACE;
MACRO_DDSCAPS DDSCAPS_PRIMARYSURFACELEFT;
MACRO_DDSCAPS DDSCAPS_RESERVED1;
MACRO_DDSCAPS DDSCAPS_RESERVED2;
MACRO_DDSCAPS DDSCAPS_RESERVED3;
MACRO_DDSCAPS DDSCAPS_STANDARDVGAMODE;
MACRO_DDSCAPS DDSCAPS_SYSTEMMEMORY;
MACRO_DDSCAPS DDSCAPS_TEXTURE;
MACRO_DDSCAPS DDSCAPS_VIDEOMEMORY;
MACRO_DDSCAPS DDSCAPS_VIDEOPORT;
MACRO_DDSCAPS DDSCAPS_VISIBLE;
MACRO_DDSCAPS DDSCAPS_WRITEONLY;
MACRO_DDSCAPS DDSCAPS_ZBUFFER;
MACRO_DDSCL DDSCL_ALLOWMODEX;
MACRO_DDSCL DDSCL_ALLOWREBOOT;
MACRO_DDSCL DDSCL_CREATEDEVICEWINDOW;
MACRO_DDSCL DDSCL_EXCLUSIVE;
MACRO_DDSCL DDSCL_FPUPRESERVE;
MACRO_DDSCL DDSCL_FPUSETUP;
MACRO_DDSCL DDSCL_FULLSCREEN;
MACRO_DDSCL DDSCL_MULTITHREADED;
MACRO_DDSCL DDSCL_NORMAL;
MACRO_DDSCL DDSCL_NOWINDOWCHANGES;
MACRO_DDSCL DDSCL_SETDEVICEWINDOW;
MACRO_DDSCL DDSCL_SETFOCUSWINDOW;
MACRO_DDSDM DDSDM_STANDARDVGAMODE;
MACRO_DDSD DDSD_ALL;
MACRO_DDSD DDSD_ALPHABITDEPTH;
MACRO_DDSD DDSD_BACKBUFFERCOUNT;
MACRO_DDSD DDSD_CAPS;
MACRO_DDSD DDSD_CKDESTBLT;
MACRO_DDSD DDSD_CKDESTOVERLAY;
MACRO_DDSD DDSD_CKSRCBLT;
MACRO_DDSD DDSD_CKSRCOVERLAY;
MACRO_DDSD DDSD_DEPTH;
MACRO_DDSD DDSD_FVF;
MACRO_DDSD DDSD_HEIGHT;
MACRO_DDSD DDSD_LINEARSIZE;
MACRO_DDSD DDSD_LPSURFACE;
MACRO_DDSD DDSD_MIPMAPCOUNT;
MACRO_DDSD DDSD_PITCH;
MACRO_DDSD DDSD_PIXELFORMAT;
MACRO_DDSD DDSD_REFRESHRATE;
MACRO_DDSD DDSD_SRCVBHANDLE;
MACRO_DDSD DDSD_TEXTURESTAGE;
MACRO_DDSD DDSD_WIDTH;
MACRO_DDSD DDSD_ZBUFFERBITDEPTH;
MACRO_DDSGR DDSGR_CALIBRATE;
MACRO_DDSMT DDSMT_ISTESTREQUIRED;
MACRO_DDSPD DDSPD_IUNKNOWNPOINTER;
MACRO_DDSPD DDSPD_VOLATILE;
MACRO_DDSVCAPS DDSVCAPS_ENIGMA;
MACRO_DDSVCAPS DDSVCAPS_FLICKER;
MACRO_DDSVCAPS DDSVCAPS_REDBLUE;
MACRO_DDSVCAPS DDSVCAPS_RESERVED1;
MACRO_DDSVCAPS DDSVCAPS_RESERVED2;
MACRO_DDSVCAPS DDSVCAPS_RESERVED3;
MACRO_DDSVCAPS DDSVCAPS_RESERVED4;
MACRO_DDSVCAPS DDSVCAPS_SPLIT;
MACRO_DDSVCAPS DDSVCAPS_STEREOSEQUENTIAL;
MACRO_DDVPBCAPS DDVPBCAPS_DESTINATION;
MACRO_DDVPBCAPS DDVPBCAPS_SOURCE;
MACRO_DDVPB DDVPB_OVERLAY;
MACRO_DDVPB DDVPB_TYPE;
MACRO_DDVPB DDVPB_VIDEOPORT;
MACRO_DDVPCAPS DDVPCAPS_AUTOFLIP;
MACRO_DDVPCAPS DDVPCAPS_COLORCONTROL;
MACRO_DDVPCAPS DDVPCAPS_HARDWAREDEINTERLACE;
MACRO_DDVPCAPS DDVPCAPS_INTERLACED;
MACRO_DDVPCAPS DDVPCAPS_NONINTERLACED;
MACRO_DDVPCAPS DDVPCAPS_OVERSAMPLEDVBI;
MACRO_DDVPCAPS DDVPCAPS_READBACKFIELD;
MACRO_DDVPCAPS DDVPCAPS_READBACKLINE;
MACRO_DDVPCAPS DDVPCAPS_SHAREABLE;
MACRO_DDVPCAPS DDVPCAPS_SKIPEVENFIELDS;
MACRO_DDVPCAPS DDVPCAPS_SKIPODDFIELDS;
MACRO_DDVPCAPS DDVPCAPS_SYNCMASTER;
MACRO_DDVPCAPS DDVPCAPS_SYSTEMMEMORY;
MACRO_DDVPCAPS DDVPCAPS_VBIANDVIDEOINDEPENDENT;
MACRO_DDVPCAPS DDVPCAPS_VBISURFACE;
MACRO_DDVPCONNECT DDVPCONNECT_DISCARDSVREFDATA;
MACRO_DDVPCONNECT DDVPCONNECT_DOUBLECLOCK;
MACRO_DDVPCONNECT DDVPCONNECT_HALFLINE;
MACRO_DDVPCONNECT DDVPCONNECT_INTERLACED;
MACRO_DDVPCONNECT DDVPCONNECT_INVERTPOLARITY;
MACRO_DDVPCONNECT DDVPCONNECT_SHAREEVEN;
MACRO_DDVPCONNECT DDVPCONNECT_SHAREODD;
MACRO_DDVPCONNECT DDVPCONNECT_VACT;
MACRO_DDVPCREATE DDVPCREATE_VBIONLY;
MACRO_DDVPCREATE DDVPCREATE_VIDEOONLY;
MACRO_DDVPD DDVPD_ALIGN;
MACRO_DDVPD DDVPD_AUTOFLIP;
MACRO_DDVPD DDVPD_CAPS;
MACRO_DDVPD DDVPD_FILTERQUALITY;
MACRO_DDVPD DDVPD_FX;
MACRO_DDVPD DDVPD_HEIGHT;
MACRO_DDVPD DDVPD_ID;
MACRO_DDVPD DDVPD_PREFERREDAUTOFLIP;
MACRO_DDVPD DDVPD_WIDTH;
MACRO_DDVPFLIP DDVPFLIP_VBI;
MACRO_DDVPFLIP DDVPFLIP_VIDEO;
MACRO_DDVPFORMAT DDVPFORMAT_VBI;
MACRO_DDVPFORMAT DDVPFORMAT_VIDEO;
MACRO_DDVPFX DDVPFX_CROPTOPDATA;
MACRO_DDVPFX DDVPFX_CROPX;
MACRO_DDVPFX DDVPFX_CROPY;
MACRO_DDVPFX DDVPFX_IGNOREVBIXCROP;
MACRO_DDVPFX DDVPFX_INTERLEAVE;
MACRO_DDVPFX DDVPFX_MIRRORLEFTRIGHT;
MACRO_DDVPFX DDVPFX_MIRRORUPDOWN;
MACRO_DDVPFX DDVPFX_PRESHRINKX;
MACRO_DDVPFX DDVPFX_PRESHRINKXB;
MACRO_DDVPFX DDVPFX_PRESHRINKXS;
MACRO_DDVPFX DDVPFX_PRESHRINKY;
MACRO_DDVPFX DDVPFX_PRESHRINKYB;
MACRO_DDVPFX DDVPFX_PRESHRINKYS;
MACRO_DDVPFX DDVPFX_PRESTRETCHX;
MACRO_DDVPFX DDVPFX_PRESTRETCHXN;
MACRO_DDVPFX DDVPFX_PRESTRETCHY;
MACRO_DDVPFX DDVPFX_PRESTRETCHYN;
MACRO_DDVPFX DDVPFX_VBICONVERT;
MACRO_DDVPFX DDVPFX_VBINOINTERLEAVE;
MACRO_DDVPFX DDVPFX_VBINOSCALE;
MACRO_DDVPSQ DDVPSQ_NOSIGNAL;
MACRO_DDVPSQ DDVPSQ_SIGNALOK;
MACRO_DDVPSTATUS DDVPSTATUS_VBIONLY;
MACRO_DDVPSTATUS DDVPSTATUS_VIDEOONLY;
MACRO_DDVPTARGET DDVPTARGET_VBI;
MACRO_DDVPTARGET DDVPTARGET_VIDEO;
MACRO_DDVPWAIT DDVPWAIT_BEGIN;
MACRO_DDVPWAIT DDVPWAIT_END;
MACRO_DDVPWAIT DDVPWAIT_LINE;
MACRO_DDVP DDVP_AUTOFLIP;
MACRO_DDVP DDVP_CONVERT;
MACRO_DDVP DDVP_CROP;
MACRO_DDVP DDVP_HARDWAREDEINTERLACE;
MACRO_DDVP DDVP_IGNOREVBIXCROP;
MACRO_DDVP DDVP_INTERLEAVE;
MACRO_DDVP DDVP_MIRRORLEFTRIGHT;
MACRO_DDVP DDVP_MIRRORUPDOWN;
MACRO_DDVP DDVP_OVERRIDEBOBWEAVE;
MACRO_DDVP DDVP_PRESCALE;
MACRO_DDVP DDVP_SKIPEVENFIELDS;
MACRO_DDVP DDVP_SKIPODDFIELDS;
MACRO_DDVP DDVP_SYNCMASTER;
MACRO_DDVP DDVP_VBICONVERT;
MACRO_DDVP DDVP_VBINOINTERLEAVE;
MACRO_DDVP DDVP_VBINOSCALE;
MACRO_DDWAITVB DDWAITVB_BLOCKBEGIN;
MACRO_DDWAITVB DDWAITVB_BLOCKBEGINEVENT;
MACRO_DDWAITVB DDWAITVB_BLOCKEND;
MACRO_DDWAITVB_I DDWAITVB_I_TESTVB;
MACRO_DD DD_FALSE;
MACRO_DD DD_OK;
MACRO_DD_ROP DD_ROP_SPACE;
MACRO_DEBUG DEBUG_EVENT_INACTIVE;
MACRO_DEBUG DEBUG_EVENT_NOWAIT;
MACRO_DEBUG DEBUG_EVENT_PROTECT_FAILED;
MACRO_DEBUG DEBUG_EVENT_READ;
MACRO_DEBUG DEBUG_EVENT_RELEASE;
MACRO_DEBUG DEBUG_EVENT_SUSPEND;
MACRO_DEBUG DEBUG_OBJECT_ADD_REMOVE_PROCESS;
MACRO_DEBUG DEBUG_OBJECT_ALL_ACCESS;
MACRO_DEBUG DEBUG_OBJECT_SET_INFORMATION;
MACRO_DEBUG DEBUG_OBJECT_WAIT_STATE_CHANGE;
MACRO_CHARSET DEFAULT_CHARSET;
$5FB4B89D89D7F3E9E930012D26E1CC5E DEFAULT_COMPARTMENT_ID;
MACRO_FONT DEFAULT_GUI_FONT;
MACRO_DEFAULT DEFAULT_PALETTE;
MACRO_PITCH DEFAULT_PITCH;
MACRO_QUALITY DEFAULT_QUALITY;
MACRO_DELETE DELETE;
MACRO_DESKTOPHORZRES DESKTOPHORZRES;
MACRO_DESKTOPVERTRES DESKTOPVERTRES;
MACRO_DEVHTADJF DEVHTADJF_ADDITIVE_DEVICE;
MACRO_DEVHTADJF DEVHTADJF_COLOR_DEVICE;
MACRO_DEVICEDATA DEVICEDATA;
MACRO_FONT DEVICE_DEFAULT_FONT;
MACRO_FONTTYPE DEVICE_FONTTYPE;
MACRO_DIB DIB_PAL_COLORS;
MACRO_DIB DIB_RGB_COLORS;
MACRO_DIRECT3D DIRECT3D_VERSION;
MACRO_DIRECTDRAW DIRECTDRAW_VERSION;
MACRO_DIRECTORY DIRECTORY_ALL_ACCESS;
MACRO_DIRECTORY DIRECTORY_CREATE_OBJECT;
MACRO_DIRECTORY DIRECTORY_CREATE_SUBDIRECTORY;
MACRO_DIRECTORY DIRECTORY_QUERY;
MACRO_DIRECTORY DIRECTORY_TRAVERSE;
MACRO_DISCHARGE DISCHARGE_POLICY_CRITICAL;
MACRO_DISCHARGE DISCHARGE_POLICY_LOW;
MACRO_DISK DISK_BINNING;
MACRO_DISK DISK_LOGGING_DUMP;
MACRO_DISK DISK_LOGGING_START;
MACRO_DISK DISK_LOGGING_STOP;
MACRO_DISPLAY DISPLAY_DEVICE_ATTACHED_TO_DESKTOP;
MACRO_DISPLAY DISPLAY_DEVICE_DISCONNECT;
MACRO_DISPLAY DISPLAY_DEVICE_MIRRORING_DRIVER;
MACRO_DISPLAY DISPLAY_DEVICE_MODESPRUNED;
MACRO_DISPLAY DISPLAY_DEVICE_MULTI_DRIVER;
MACRO_DISPLAY DISPLAY_DEVICE_PRIMARY_DEVICE;
MACRO_DISPLAY DISPLAY_DEVICE_REMOTE;
MACRO_DISPLAY DISPLAY_DEVICE_REMOVABLE;
MACRO_DISPLAY DISPLAY_DEVICE_VGA_COMPATIBLE;
MACRO_DI DI_APPBANDING;
MACRO_DI DI_COMPAT;
MACRO_DI DI_DEFAULTSIZE;
MACRO_DI DI_IMAGE;
MACRO_DI DI_MASK;
MACRO_DI DI_NOMIRROR;
MACRO_DI DI_NORMAL;
MACRO_BRUSH DKGRAY_BRUSH;
MACRO_DLL DLL_PROCESS_ATTACH;
MACRO_DLL DLL_PROCESS_DETACH;
MACRO_DLL DLL_THREAD_ATTACH;
MACRO_DLL DLL_THREAD_DETACH;
MACRO_DMBIN DMBIN_AUTO;
MACRO_DMBIN DMBIN_CASSETTE;
MACRO_DMBIN DMBIN_ENVELOPE;
MACRO_DMBIN DMBIN_ENVMANUAL;
MACRO_DMBIN DMBIN_FIRST;
MACRO_DMBIN DMBIN_FORMSOURCE;
MACRO_DMBIN DMBIN_LARGECAPACITY;
MACRO_DMBIN DMBIN_LARGEFMT;
MACRO_DMBIN DMBIN_LAST;
MACRO_DMBIN DMBIN_LOWER;
MACRO_DMBIN DMBIN_MANUAL;
MACRO_DMBIN DMBIN_MIDDLE;
MACRO_DMBIN DMBIN_ONLYONE;
MACRO_DMBIN DMBIN_SMALLFMT;
MACRO_DMBIN DMBIN_TRACTOR;
MACRO_DMBIN DMBIN_UPPER;
MACRO_DMBIN DMBIN_USER;
MACRO_DMCOLLATE DMCOLLATE_FALSE;
MACRO_DMCOLLATE DMCOLLATE_TRUE;
MACRO_DMCOLOR DMCOLOR_COLOR;
MACRO_DMCOLOR DMCOLOR_MONOCHROME;
MACRO_DMDFO DMDFO_CENTER;
MACRO_DMDFO DMDFO_DEFAULT;
MACRO_DMDFO DMDFO_STRETCH;
MACRO_DMDISPLAYFLAGS DMDISPLAYFLAGS_TEXTMODE;
MACRO_DMDITHER DMDITHER_COARSE;
MACRO_DMDITHER DMDITHER_ERRORDIFFUSION;
MACRO_DMDITHER DMDITHER_FINE;
MACRO_DMDITHER DMDITHER_GRAYSCALE;
MACRO_DMDITHER DMDITHER_LINEART;
MACRO_DMDITHER DMDITHER_NONE;
MACRO_DMDITHER DMDITHER_RESERVED6;
MACRO_DMDITHER DMDITHER_RESERVED7;
MACRO_DMDITHER DMDITHER_RESERVED8;
MACRO_DMDITHER DMDITHER_RESERVED9;
MACRO_DMDITHER DMDITHER_USER;
MACRO_DMDO DMDO_180;
MACRO_DMDO DMDO_270;
MACRO_DMDO DMDO_90;
MACRO_DMDO DMDO_DEFAULT;
MACRO_DMDUP DMDUP_HORIZONTAL;
MACRO_DMDUP DMDUP_SIMPLEX;
MACRO_DMDUP DMDUP_VERTICAL;
MACRO_DMICMMETHOD DMICMMETHOD_DEVICE;
MACRO_DMICMMETHOD DMICMMETHOD_DRIVER;
MACRO_DMICMMETHOD DMICMMETHOD_NONE;
MACRO_DMICMMETHOD DMICMMETHOD_SYSTEM;
MACRO_DMICMMETHOD DMICMMETHOD_USER;
MACRO_DMICM DMICM_COLORMETRIC;
MACRO_DMICM DMICM_CONTRAST;
MACRO_DMICM DMICM_SATURATE;
MACRO_DMICM DMICM_USER;
MACRO_DMMEDIA DMMEDIA_GLOSSY;
MACRO_DMMEDIA DMMEDIA_STANDARD;
MACRO_DMMEDIA DMMEDIA_TRANSPARENCY;
MACRO_DMMEDIA DMMEDIA_USER;
MACRO_DMORIENT DMORIENT_LANDSCAPE;
MACRO_DMORIENT DMORIENT_PORTRAIT;
MACRO_DMPAPER DMPAPER_10X11;
MACRO_DMPAPER DMPAPER_10X14;
MACRO_DMPAPER DMPAPER_11X17;
MACRO_DMPAPER DMPAPER_15X11;
MACRO_DMPAPER DMPAPER_9X11;
MACRO_DMPAPER DMPAPER_A2;
MACRO_DMPAPER DMPAPER_A3;
MACRO_DMPAPER DMPAPER_A3_EXTRA;
MACRO_DMPAPER DMPAPER_A3_EXTRA_TRANSVERSE;
MACRO_DMPAPER DMPAPER_A3_TRANSVERSE;
MACRO_DMPAPER DMPAPER_A4;
MACRO_DMPAPER DMPAPER_A4SMALL;
MACRO_DMPAPER DMPAPER_A4_EXTRA;
MACRO_DMPAPER DMPAPER_A4_PLUS;
MACRO_DMPAPER DMPAPER_A4_TRANSVERSE;
MACRO_DMPAPER DMPAPER_A5;
MACRO_DMPAPER DMPAPER_A5_EXTRA;
MACRO_DMPAPER DMPAPER_A5_TRANSVERSE;
MACRO_DMPAPER DMPAPER_A_PLUS;
MACRO_DMPAPER DMPAPER_B4;
MACRO_DMPAPER DMPAPER_B5;
MACRO_DMPAPER DMPAPER_B5_EXTRA;
MACRO_DMPAPER DMPAPER_B5_TRANSVERSE;
MACRO_DMPAPER DMPAPER_B_PLUS;
MACRO_DMPAPER DMPAPER_CSHEET;
MACRO_DMPAPER DMPAPER_DSHEET;
MACRO_DMPAPER DMPAPER_ENV_10;
MACRO_DMPAPER DMPAPER_ENV_11;
MACRO_DMPAPER DMPAPER_ENV_12;
MACRO_DMPAPER DMPAPER_ENV_14;
MACRO_DMPAPER DMPAPER_ENV_9;
MACRO_DMPAPER DMPAPER_ENV_B4;
MACRO_DMPAPER DMPAPER_ENV_B5;
MACRO_DMPAPER DMPAPER_ENV_B6;
MACRO_DMPAPER DMPAPER_ENV_C3;
MACRO_DMPAPER DMPAPER_ENV_C4;
MACRO_DMPAPER DMPAPER_ENV_C5;
MACRO_DMPAPER DMPAPER_ENV_C6;
MACRO_DMPAPER DMPAPER_ENV_C65;
MACRO_DMPAPER DMPAPER_ENV_DL;
MACRO_DMPAPER DMPAPER_ENV_INVITE;
MACRO_DMPAPER DMPAPER_ENV_ITALY;
MACRO_DMPAPER DMPAPER_ENV_MONARCH;
MACRO_DMPAPER DMPAPER_ENV_PERSONAL;
MACRO_DMPAPER DMPAPER_ESHEET;
MACRO_DMPAPER DMPAPER_EXECUTIVE;
MACRO_DMPAPER DMPAPER_FANFOLD_LGL_GERMAN;
MACRO_DMPAPER DMPAPER_FANFOLD_STD_GERMAN;
MACRO_DMPAPER DMPAPER_FANFOLD_US;
MACRO_DMPAPER DMPAPER_FIRST;
MACRO_DMPAPER DMPAPER_FOLIO;
MACRO_DMPAPER DMPAPER_ISO_B4;
MACRO_DMPAPER DMPAPER_JAPANESE_POSTCARD;
MACRO_DMPAPER DMPAPER_LAST;
MACRO_DMPAPER DMPAPER_LEDGER;
MACRO_DMPAPER DMPAPER_LEGAL;
MACRO_DMPAPER DMPAPER_LEGAL_EXTRA;
MACRO_DMPAPER DMPAPER_LETTER;
MACRO_DMPAPER DMPAPER_LETTERSMALL;
MACRO_DMPAPER DMPAPER_LETTER_EXTRA;
MACRO_DMPAPER DMPAPER_LETTER_EXTRA_TRANSVERSE;
MACRO_DMPAPER DMPAPER_LETTER_PLUS;
MACRO_DMPAPER DMPAPER_LETTER_TRANSVERSE;
MACRO_DMPAPER DMPAPER_NOTE;
MACRO_DMPAPER DMPAPER_QUARTO;
MACRO_DMPAPER DMPAPER_RESERVED_48;
MACRO_DMPAPER DMPAPER_RESERVED_49;
MACRO_DMPAPER DMPAPER_STATEMENT;
MACRO_DMPAPER DMPAPER_TABLOID;
MACRO_DMPAPER DMPAPER_TABLOID_EXTRA;
MACRO_DMPAPER DMPAPER_USER;
MACRO_DMRES DMRES_DRAFT;
MACRO_DMRES DMRES_HIGH;
MACRO_DMRES DMRES_LOW;
MACRO_DMRES DMRES_MEDIUM;
MACRO_DMTT DMTT_BITMAP;
MACRO_DMTT DMTT_DOWNLOAD;
MACRO_DMTT DMTT_DOWNLOAD_OUTLINE;
MACRO_DMTT DMTT_SUBDEV;
MACRO_DM_SPECVERSION DM_BITSPERPEL;
MACRO_DM_SPECVERSION DM_COLLATE;
MACRO_DM_SPECVERSION DM_COLOR;
MACRO_DM_SPECVERSION DM_COPIES;
MACRO_DM DM_COPY;
MACRO_DM_DEFAULT DM_DEFAULT;
MACRO_DM_SPECVERSION DM_DEFAULTSOURCE;
MACRO_DM_SPECVERSION DM_DISPLAYFIXEDOUTPUT;
MACRO_DM_SPECVERSION DM_DISPLAYFLAGS;
MACRO_DM_SPECVERSION DM_DISPLAYFREQUENCY;
MACRO_DM_SPECVERSION DM_DISPLAYORIENTATION;
MACRO_DM_SPECVERSION DM_DITHERTYPE;
MACRO_DM_SPECVERSION DM_DUPLEX;
MACRO_DM_SPECVERSION DM_FORMNAME;
MACRO_DM_GRAYSCALE DM_GRAYSCALE;
MACRO_DM_SPECVERSION DM_ICMINTENT;
MACRO_DM_SPECVERSION DM_ICMMETHOD;
MACRO_DM_GRAYSCALE DM_INTERLACED;
MACRO_DM DM_IN_BUFFER;
MACRO_DM DM_IN_PROMPT;
MACRO_DM_SPECVERSION DM_LOGPIXELS;
MACRO_DM_SPECVERSION DM_MEDIATYPE;
MACRO_DM DM_MODIFY;
MACRO_DM_DEFAULT DM_MONOCHROME;
MACRO_DM_SPECVERSION DM_NUP;
MACRO_DM_SPECVERSION DM_ORIENTATION;
MACRO_DM DM_OUT_BUFFER;
MACRO_DM DM_OUT_DEFAULT;
MACRO_DM_SPECVERSION DM_PANNINGHEIGHT;
MACRO_DM_SPECVERSION DM_PANNINGWIDTH;
MACRO_DM_SPECVERSION DM_PAPERLENGTH;
MACRO_DM_SPECVERSION DM_PAPERSIZE;
MACRO_DM_SPECVERSION DM_PAPERWIDTH;
MACRO_DM_SPECVERSION DM_PELSHEIGHT;
MACRO_DM_SPECVERSION DM_PELSWIDTH;
MACRO_DM_SPECVERSION DM_POSITION;
MACRO_DM_SPECVERSION DM_PRINTQUALITY;
MACRO_DM DM_PROMPT;
MACRO_DM_SPECVERSION DM_SCALE;
MACRO_DM_SPECVERSION DM_SPECVERSION;
MACRO_DM_SPECVERSION DM_TTOPTION;
MACRO_DM DM_UPDATE;
MACRO_DM_SPECVERSION DM_YRESOLUTION;
MACRO_DNF DNF_ADDED;
MACRO_DNF DNF_ADD_FAILED;
MACRO_DNF DNF_ASSIGNING_RESOURCES;
MACRO_DNF DNF_BEEING_ENUMERATED;
MACRO_DNF DNF_BOOT_CONFIG_RESERVED;
MACRO_DNF DNF_DELETED;
MACRO_DNF DNF_DISABLED;
MACRO_DNF DNF_ENUMERATED;
MACRO_DNF DNF_HAL_NODE;
MACRO_DNF DNF_HAS_BOOT_CONFIG;
MACRO_DNF DNF_HAS_PROBLEM;
MACRO_DNF DNF_INSUFFICIENT_RESOURCES;
MACRO_DNF DNF_LEGACY_DRIVER;
MACRO_DNF DNF_LEGACY_RESOURCE_DEVICENODE;
MACRO_DNF DNF_LOCKED;
MACRO_DNF DNF_MADEUP;
MACRO_DNF DNF_NEED_ENUMERATION_ONLY;
MACRO_DNF DNF_NEED_RESTART;
MACRO_DNF DNF_NOT_CONFIGURED;
MACRO_DNF DNF_NO_RESOURCE_REQUIRED;
MACRO_DNF DNF_PROCESSED;
MACRO_DNF DNF_REINSTALL;
MACRO_DNF DNF_RESOURCE_ASSIGNED;
MACRO_DNF DNF_RESOURCE_REPORTED;
MACRO_DNF DNF_RESOURCE_REQUIREMENTS_NEED_FILTERED;
MACRO_DNF DNF_RESTART_OK;
MACRO_DNF DNF_STARTED;
MACRO_DNF DNF_START_FAILED;
MACRO_DNF DNF_START_REQUEST_PENDING;
MACRO_DNF DNF_STOPPED;
MACRO_DNF DNF_VISITED;
MACRO_DNF DNF_WILL_BE_REMOVED;
MACRO_DNS DNS_ERROR_AUTOZONE_ALREADY_EXISTS;
MACRO_DNS DNS_ERROR_AXFR;
MACRO_DNS DNS_ERROR_BAD_PACKET;
MACRO_DNS DNS_ERROR_CANNOT_FIND_ROOT_HINTS;
MACRO_DNS DNS_ERROR_CNAME_COLLISION;
MACRO_DNS DNS_ERROR_CNAME_LOOP;
MACRO_DNS DNS_ERROR_DATAFILE_OPEN_FAILURE;
MACRO_DNS DNS_ERROR_DATAFILE_PARSING;
MACRO_DNS DNS_ERROR_DP_ALREADY_ENLISTED;
MACRO_DNS DNS_ERROR_DP_ALREADY_EXISTS;
MACRO_DNS DNS_ERROR_DP_DOES_NOT_EXIST;
MACRO_DNS DNS_ERROR_DP_NOT_AVAILABLE;
MACRO_DNS DNS_ERROR_DP_NOT_ENLISTED;
MACRO_DNS DNS_ERROR_DS_UNAVAILABLE;
MACRO_DNS DNS_ERROR_DS_ZONE_ALREADY_EXISTS;
MACRO_DNS DNS_ERROR_FILE_WRITEBACK_FAILED;
MACRO_DNS DNS_ERROR_FORWARDER_ALREADY_EXISTS;
MACRO_DNS DNS_ERROR_INCONSISTENT_ROOT_HINTS;
MACRO_DNS DNS_ERROR_INVALID_DATAFILE_NAME;
MACRO_DNS DNS_ERROR_INVALID_IP_ADDRESS;
MACRO_DNS DNS_ERROR_INVALID_NAME;
MACRO_DNS DNS_ERROR_INVALID_NAME_CHAR;
MACRO_DNS DNS_ERROR_INVALID_PROPERTY;
MACRO_DNS DNS_ERROR_INVALID_TYPE;
MACRO_DNS DNS_ERROR_INVALID_ZONE_OPERATION;
MACRO_DNS DNS_ERROR_INVALID_ZONE_TYPE;
MACRO_DNS DNS_ERROR_NAME_DOES_NOT_EXIST;
MACRO_DNS DNS_ERROR_NAME_NOT_IN_ZONE;
MACRO_DNS DNS_ERROR_NBSTAT_INIT_FAILED;
MACRO_DNS DNS_ERROR_NEED_SECONDARY_ADDRESSES;
MACRO_DNS DNS_ERROR_NEED_WINS_SERVERS;
MACRO_DNS DNS_ERROR_NODE_CREATION_FAILED;
MACRO_DNS DNS_ERROR_NODE_IS_CNAME;
MACRO_DNS DNS_ERROR_NON_RFC_NAME;
MACRO_DNS DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER;
MACRO_DNS DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION;
MACRO_DNS DNS_ERROR_NOT_UNIQUE;
MACRO_DNS DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE;
MACRO_DNS DNS_ERROR_NO_CREATE_CACHE_DATA;
MACRO_DNS DNS_ERROR_NO_DNS_SERVERS;
MACRO_DNS DNS_ERROR_NO_PACKET;
MACRO_DNS DNS_ERROR_NO_TCPIP;
MACRO_DNS DNS_ERROR_NO_ZONE_INFO;
MACRO_DNS DNS_ERROR_NUMERIC_NAME;
MACRO_DNS DNS_ERROR_PRIMARY_REQUIRES_DATAFILE;
MACRO_DNS DNS_ERROR_RCODE;
MACRO_DNS DNS_ERROR_RCODE_BADKEY;
MACRO_DNS DNS_ERROR_RCODE_BADSIG;
MACRO_DNS DNS_ERROR_RCODE_BADTIME;
MACRO_DNS DNS_ERROR_RCODE_FORMAT_ERROR;
MACRO_DNS DNS_ERROR_RCODE_NAME_ERROR;
MACRO_DNS DNS_ERROR_RCODE_NOTAUTH;
MACRO_DNS DNS_ERROR_RCODE_NOTZONE;
MACRO_DNS DNS_ERROR_RCODE_NOT_IMPLEMENTED;
MACRO_DNS DNS_ERROR_RCODE_NXRRSET;
MACRO_DNS DNS_ERROR_RCODE_REFUSED;
MACRO_DNS DNS_ERROR_RCODE_SERVER_FAILURE;
MACRO_DNS DNS_ERROR_RCODE_YXDOMAIN;
MACRO_DNS DNS_ERROR_RCODE_YXRRSET;
MACRO_DNS DNS_ERROR_RECORD_ALREADY_EXISTS;
MACRO_DNS DNS_ERROR_RECORD_DOES_NOT_EXIST;
MACRO_DNS DNS_ERROR_RECORD_FORMAT;
MACRO_DNS DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT;
MACRO_DNS DNS_ERROR_RECORD_TIMED_OUT;
MACRO_DNS DNS_ERROR_SECONDARY_DATA;
MACRO_DNS DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP;
MACRO_DNS DNS_ERROR_SOA_DELETE_INVALID;
MACRO_DNS DNS_ERROR_TRY_AGAIN_LATER;
MACRO_DNS DNS_ERROR_UNKNOWN_RECORD_TYPE;
MACRO_DNS DNS_ERROR_UNSECURE_PACKET;
MACRO_DNS DNS_ERROR_WINS_INIT_FAILED;
MACRO_DNS DNS_ERROR_ZONE_ALREADY_EXISTS;
MACRO_DNS DNS_ERROR_ZONE_CONFIGURATION_ERROR;
MACRO_DNS DNS_ERROR_ZONE_CREATION_FAILED;
MACRO_DNS DNS_ERROR_ZONE_DOES_NOT_EXIST;
MACRO_DNS DNS_ERROR_ZONE_HAS_NO_NS_RECORDS;
MACRO_DNS DNS_ERROR_ZONE_HAS_NO_SOA_RECORD;
MACRO_DNS DNS_ERROR_ZONE_IS_SHUTDOWN;
MACRO_DNS DNS_ERROR_ZONE_LOCKED;
MACRO_DNS DNS_ERROR_ZONE_NOT_SECONDARY;
MACRO_DNS DNS_ERROR_ZONE_REQUIRES_MASTER_IP;
MACRO_DNS DNS_INFO_ADDED_LOCAL_WINS;
MACRO_DNS DNS_INFO_AXFR_COMPLETE;
MACRO_DNS DNS_INFO_NO_RECORDS;
MACRO_DNS DNS_REQUEST_PENDING;
MACRO_DNS DNS_STATUS_CONTINUE_NEEDED;
MACRO_DNS DNS_STATUS_DOTTED_NAME;
MACRO_DNS DNS_STATUS_FQDN;
MACRO_DNS DNS_STATUS_SINGLE_PART_NAME;
MACRO_DNS DNS_WARNING_DOMAIN_UNDELETED;
MACRO_DNS DNS_WARNING_PTR_CREATE_FAILED;
MACRO_DNUF DNUF_DONT_SHOW_IN_UI;
MACRO_DNUF DNUF_NOT_DISABLEABLE;
MACRO_DN_ACCELERATION DN_ACCELERATION_LEVEL;
MACRO_DN DN_APM_DRIVER;
MACRO_DN DN_APM_ENUMERATOR;
MACRO_DN DN_ARM_WAKEUP;
MACRO_DN_ACCELERATION DN_ASSOCIATE_WINDOW;
MACRO_DN DN_BAD_PARTIAL;
MACRO_DN DN_BOOT_LOG_PROB;
MACRO_DN DN_CHANGEABLE_FLAGS;
MACRO_DN DN_CHILD_WITH_INVALID_ID;
MACRO_DN_ACCELERATION DN_COMPOSITION_CHANGED;
MACRO_DN_ACCELERATION DN_DEVICE_ORIGIN;
MACRO_DN DN_DISABLEABLE;
MACRO_DN_ACCELERATION DN_DRAWING_BEGIN;
MACRO_DN_ACCELERATION DN_DRAWING_BEGIN_APIBITMAP;
MACRO_DN DN_DRIVER_BLOCKED;
MACRO_DN DN_DRIVER_LOADED;
MACRO_DN DN_ENUM_LOADED;
MACRO_DN DN_FILTERED;
MACRO_DN DN_HARDWARE_ENUM;
MACRO_DN DN_HAS_MARK;
MACRO_DN DN_HAS_PROBLEM;
MACRO_DN DN_LEGACY_DRIVER;
MACRO_DN DN_LIAR;
MACRO_DN DN_MANUAL;
MACRO_DN DN_MF_CHILD;
MACRO_DN DN_MF_PARENT;
MACRO_DN DN_MOVED;
MACRO_DN DN_NEEDS_LOCKING;
MACRO_DN DN_NEED_RESTART;
MACRO_DN DN_NEED_TO_ENUM;
MACRO_DN DN_NOT_FIRST_TIME;
MACRO_DN DN_NOT_FIRST_TIMEE;
MACRO_DN DN_NO_SHOW_IN_DM;
MACRO_DN DN_NT_DRIVER;
MACRO_DN DN_NT_ENUMERATOR;
MACRO_DN DN_PRIVATE_PROBLEM;
MACRO_DN DN_REBAL_CANDIDATE;
MACRO_DN DN_REMOVABLE;
MACRO_DN DN_ROOT_ENUMERATED;
MACRO_DN DN_SILENT_INSTALL;
MACRO_DN_ACCELERATION DN_SLEEP_MODE;
MACRO_DN DN_STARTED;
MACRO_DN DN_STOP_FREE_RES;
MACRO_DN_ACCELERATION DN_SURFOBJ_DESTRUCTION;
MACRO_DN DN_WILL_BE_REMOVED;
_PROFILE_STATUS DOCK_ARRIVING;
_PROFILE_STATUS DOCK_DEPARTING;
_PROFILE_STATUS DOCK_EJECTIRP_COMPLETED;
_PROFILE_STATUS DOCK_NOTDOCKDEVICE;
_PROFILE_STATUS DOCK_QUIESCENT;
MACRO_DOE DOE_DELETE_PENDING;
MACRO_DOE DOE_REMOVE_PENDING;
MACRO_DOE DOE_REMOVE_PROCESSED;
MACRO_DOE DOE_SIO_CANCELABLE;
MACRO_DOE DOE_SIO_DEFERRED;
MACRO_DOE DOE_SIO_NO_CANCEL;
MACRO_DOE DOE_SIO_NO_KEY;
MACRO_DOE DOE_SIO_WITH_KEY;
MACRO_DOE DOE_START_PENDING;
MACRO_DOE DOE_UNLOAD_PENDING;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_ACCOUNT_OPS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_ADMINS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_BACKUP_OPS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_CRYPTO_OPERATORS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_DCOM_USERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_GUESTS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_IUSERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_LOGGING_USERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_MONITORING_USERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_POWER_USERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_PREW2KCOMPACCESS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_PRINT_OPS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_RAS_SERVERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_REPLICATOR;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_SYSTEM_OPS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS;
MACRO_DOMAIN_USER DOMAIN_ALIAS_RID_USERS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_ADMINS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_CERT_ADMINS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_COMPUTERS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_CONTROLLERS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_ENTERPRISE_ADMINS;
MACRO_DOMAIN DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_GUESTS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_POLICY_ADMINS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_READONLY_CONTROLLERS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_SCHEMA_ADMINS;
MACRO_DOMAIN_USER DOMAIN_GROUP_RID_USERS;
MACRO_DOMAIN_USER DOMAIN_USER_RID_ADMIN;
MACRO_DOMAIN_USER DOMAIN_USER_RID_GUEST;
MACRO_DOMAIN_USER DOMAIN_USER_RID_KRBTGT;
MACRO_DOMAIN_USER DOMAIN_USER_RID_MAX;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_CALCULATE;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_CDROM;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_FIXED;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_RAMDISK;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_REMOTE;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_REMOVABLE;
MACRO_DOSDEVICE DOSDEVICE_DRIVE_UNKNOWN;
MACRO_DOWNLOADFACE DOWNLOADFACE;
MACRO_DOWNLOADHEADER DOWNLOADHEADER;
MACRO_DPFLTR DPFLTR_ERROR_LEVEL;
MACRO_DPFLTR DPFLTR_INFO_LEVEL;
MACRO_DPFLTR DPFLTR_MASK;
MACRO_DPFLTR DPFLTR_TRACE_LEVEL;
MACRO_DPFLTR DPFLTR_WARNING_LEVEL;
BOOL __stdcall DPtoLP(HDC hdc, LPPOINT lppt, int c);
MACRO_LEGAL DR6_LEGAL;
MACRO_DR7 DR7_ACTIVE;
MACRO_LEGAL DR7_LEGAL;
MACRO_DR7 DR7_OVERRIDE_MASK;
MACRO_DR7 DR7_OVERRIDE_V;
MACRO_DR7 DR7_RESERVED_MASK;
MACRO_DRAFTMODE DRAFTMODE;
MACRO_QUALITY DRAFT_QUALITY;
MACRO_DRAWPATTERNRECT DRAWPATTERNRECT;
MACRO_DRD DRD_ERROR;
MACRO_DRD DRD_SUCCESS;
MACRO_DRH DRH_APIBITMAP;
MACRO_DRIVERVERSION DRIVERVERSION;
MACRO_DRVQUERY DRVQUERY_USERMODE;
MACRO_DSS DSS_FLUSH_EVENT;
MACRO_DSS DSS_RESERVED;
MACRO_DSS DSS_RESERVED1;
MACRO_DSS DSS_TIMER_EVENT;
MACRO_DSTINVERT DSTINVERT;
MACRO_DT DT_CHARSTREAM;
MACRO_DT DT_DISPFILE;
MACRO_DT DT_METAFILE;
MACRO_DT DT_PLOTTER;
MACRO_DT DT_RASCAMERA;
MACRO_DT DT_RASDISPLAY;
MACRO_DT DT_RASPRINTER;
MACRO_DUPLICATE DUPLICATE_CLOSE_SOURCE;
MACRO_DUPLICATE DUPLICATE_SAME_ACCESS;
MACRO_DUPLICATE_SAME DUPLICATE_SAME_ATTRIBUTES;
void __stdcall DbgBreakPoint();
void __stdcall DbgBreakPointWithStatus(ULONG Status);
_DBG_STATE DbgBreakpointStateChange;
void __stdcall DbgCommandString(PCCH Name, PCCH Command);
_DBG_STATE DbgCreateProcessStateChange;
_DBG_STATE DbgCreateThreadStateChange;
_DBG_STATE DbgExceptionStateChange;
_DBG_STATE DbgExitProcessStateChange;
_DBG_STATE DbgExitThreadStateChange;
_DBG_STATE DbgIdle;
_DBGKM_APINUMBER DbgKmCreateProcessApi;
_DBGKM_APINUMBER DbgKmCreateThreadApi;
_DBGKM_APINUMBER DbgKmErrorReportApi;
_DBGKM_APINUMBER DbgKmExceptionApi;
_DBGKM_APINUMBER DbgKmExitProcessApi;
_DBGKM_APINUMBER DbgKmExitThreadApi;
_DBGKM_APINUMBER DbgKmLoadDllApi;
_DBGKM_APINUMBER DbgKmMaxApiNumber;
_DBGKM_APINUMBER DbgKmUnloadDllApi;
_DBG_STATE DbgLoadDllStateChange;
void __stdcall DbgLoadImageSymbols(PSTRING Name, PVOID Base, ULONG_PTR ProcessId);
ULONG __stdcall DbgPrompt(PCCH Prompt, PCH Response, ULONG MaximumResponseLength);
NTSTATUS __stdcall DbgQueryDebugFilterState(ULONG ComponentId, ULONG Level);
void DbgRaiseAssertionFailure(void);
_DBG_STATE DbgReplyPending;
NTSTATUS __stdcall DbgSetDebugFilterState(ULONG ComponentId, ULONG Level, BOOLEAN State);
_DBG_STATE DbgSingleStepStateChange;
NTSTATUS __stdcall DbgUiConnectToDbg();
NTSTATUS __stdcall DbgUiContinue(PCLIENT_ID ClientId, NTSTATUS ContinueStatus);
NTSTATUS __stdcall DbgUiConvertStateChangeStructure(PDBGUI_WAIT_STATE_CHANGE WaitStateChange, PVOID DebugEvent);
NTSTATUS __stdcall DbgUiDebugActiveProcess(HANDLE Process);
HANDLE __stdcall DbgUiGetThreadDebugObject();
NTSTATUS __stdcall DbgUiIssueRemoteBreakin(HANDLE Process);
void __stdcall DbgUiRemoteBreakin();
void __stdcall DbgUiSetThreadDebugObject(HANDLE DebugObject);
NTSTATUS __stdcall DbgUiStopDebugging(HANDLE Process);
NTSTATUS __stdcall DbgUiWaitStateChange(PDBGUI_WAIT_STATE_CHANGE DbgUiWaitStateCange, PLARGE_INTEGER TimeOut);
void __stdcall DbgUnLoadImageSymbols(PSTRING Name, PVOID Base, ULONG_PTR ProcessId);
_DBG_STATE DbgUnloadDllStateChange;
void __stdcall DbgUserBreakPoint();
_DEBUGOBJECTINFOCLASS DebugObjectKillProcessOnExitInformation;
_DEBUGOBJECTINFOCLASS DebugObjectUnusedInformation;
_KTHREAD_STATE DeferredReady;
_KWAIT_REASON DelayExecution;
BOOL __stdcall DeleteColorSpace(HCOLORSPACE);
BOOL __stdcall DeleteDC(HDC);
BOOL __stdcall DeleteEnhMetaFile(HENHMETAFILE);
BOOL __stdcall DeleteMetaFile(HMETAFILE);
BOOL __stdcall DeleteObject(HGDIOBJ);
_CM_SERVICE_LOAD_TYPE DemandLoad;
int __stdcall DescribePixelFormat(HDC hdc, int iPixelFormat, UINT nBytes, LPPIXELFORMATDESCRIPTOR ppfd);
_DETECTION_TYPE DetectExInt13;
_DETECTION_TYPE DetectInt13;
_DETECTION_TYPE DetectNone;
_PLUGPLAY_EVENT_CATEGORY DeviceArrivalEvent;
DWORD __stdcall DeviceCapabilitiesA(LPCSTR pDevice, LPCSTR pPort, WORD fwCapability, LPSTR pOutput, const DEVMODEA *pDevMode);
DWORD __stdcall DeviceCapabilitiesW(LPCWSTR pDevice, LPCWSTR pPort, WORD fwCapability, LPWSTR pOutput, const DEVMODEW *pDevMode);
_PLUGPLAY_EVENT_CATEGORY DeviceClassChangeEvent;
_PLUGPLAY_EVENT_CATEGORY DeviceInstallEvent;
_PNP_DEVNODE_STATE DeviceNodeAwaitingQueuedDeletion;
_PNP_DEVNODE_STATE DeviceNodeAwaitingQueuedRemoval;
_PNP_DEVNODE_STATE DeviceNodeDeletePendingCloses;
_PNP_DEVNODE_STATE DeviceNodeDeleted;
_PNP_DEVNODE_STATE DeviceNodeDriversAdded;
_PNP_DEVNODE_STATE DeviceNodeEnumerateCompletion;
_PNP_DEVNODE_STATE DeviceNodeEnumeratePending;
_PNP_DEVNODE_STATE DeviceNodeInitialized;
_PNP_DEVNODE_STATE DeviceNodeQueryRemoved;
_PNP_DEVNODE_STATE DeviceNodeQueryStopped;
_PNP_DEVNODE_STATE DeviceNodeRemovePendingCloses;
_PNP_DEVNODE_STATE DeviceNodeRemoved;
_PNP_DEVNODE_STATE DeviceNodeResourcesAssigned;
_PNP_DEVNODE_STATE DeviceNodeRestartCompletion;
_PNP_DEVNODE_STATE DeviceNodeStartCompletion;
_PNP_DEVNODE_STATE DeviceNodeStartPending;
_PNP_DEVNODE_STATE DeviceNodeStartPostWork;
_PNP_DEVNODE_STATE DeviceNodeStarted;
_PNP_DEVNODE_STATE DeviceNodeStopped;
_PNP_DEVNODE_STATE DeviceNodeUninitialized;
_PNP_DEVNODE_STATE DeviceNodeUnspecified;
_KOBJECTS DeviceQueueObject;
_APPCOMPAT_FLAGS DisableAdvanceRPCClientHardening;
_APPCOMPAT_FLAGS DisableAdvancedRPCrangeCheck;
_APPCOMPAT_USERFLAGS DisableAnimation;
_APPCOMPAT_FLAGS DisableCicero;
_APPCOMPAT_USERFLAGS DisableDrawPatternRect;
_APPCOMPAT_USERFLAGS DisableKeyboardCues;
_CM_SERVICE_LOAD_TYPE DisableLoad;
_APPCOMPAT_FLAGS DisableMaybeNULLSizeisConsistencycheck;
_APPCOMPAT_FLAGS DisableNDRIIDConsistencyCheck;
_APPCOMPAT_FLAGS DisableNewWMPAINTDispatchInOLE;
_APPCOMPAT_USERFLAGS DisableSWCursorOnMoveSize;
_APPCOMPAT_USERFLAGS_HIGHPART DisableWindowArrangement;
_APPCOMPAT_FLAGS DisallowCOMBindingNotifications;
_APPCOMPAT_FLAGS DoNotAddToCache;
_POOL_TYPE DontUseThisType;
_POOL_TYPE DontUseThisTypeSession;
_KOBJECTS DpcObject;
int __stdcall DrawEscape(HDC hdc, int iEscape, int cjIn, LPCSTR lpIn);
_CM_SERVICE_NODE_TYPE DriverType;
FN_DrvAccumulateD3DDirtyRect DrvAccumulateD3DDirtyRect;
FN_DrvAlphaBlend DrvAlphaBlend;
FN_DrvAssertMode DrvAssertMode;
FN_DrvAssociateSharedSurface DrvAssociateSharedSurface;
FN_DrvBitBlt DrvBitBlt;
FN_DrvCompletePDEV DrvCompletePDEV;
FN_DrvCopyBits DrvCopyBits;
FN_DrvCreateDeviceBitmap DrvCreateDeviceBitmap;
FN_DrvCreateDeviceBitmapEx DrvCreateDeviceBitmapEx;
FN_DrvDeleteDeviceBitmap DrvDeleteDeviceBitmap;
FN_DrvDeleteDeviceBitmapEx DrvDeleteDeviceBitmapEx;
FN_DrvDeriveSurface DrvDeriveSurface;
FN_DrvDescribePixelFormat DrvDescribePixelFormat;
FN_DrvDestroyFont DrvDestroyFont;
FN_DrvDisableDirectDraw DrvDisableDirectDraw;
FN_DrvDisableDriver DrvDisableDriver;
FN_DrvDisablePDEV DrvDisablePDEV;
FN_DrvDisableSurface DrvDisableSurface;
FN_DrvDitherColor DrvDitherColor;
FN_DrvDrawEscape DrvDrawEscape;
FN_DrvEnableDirectDraw DrvEnableDirectDraw;
FN_DrvEnableDriver DrvEnableDriver;
FN_DrvEnablePDEV DrvEnablePDEV;
FN_DrvEnableSurface DrvEnableSurface;
FN_DrvEndDoc DrvEndDoc;
FN_DrvEndDxInterop DrvEndDxInterop;
FN_DrvEscape DrvEscape;
FN_DrvFillPath DrvFillPath;
FN_DrvFontManagement DrvFontManagement;
FN_DrvFree DrvFree;
FN_DrvGetDirectDrawInfo DrvGetDirectDrawInfo;
FN_DrvGetGlyphMode DrvGetGlyphMode;
FN_DrvGetModes DrvGetModes;
FN_DrvGetTrueTypeFile DrvGetTrueTypeFile;
FN_DrvGradientFill DrvGradientFill;
FN_DrvIcmCheckBitmapBits DrvIcmCheckBitmapBits;
FN_DrvIcmCreateColorTransform DrvIcmCreateColorTransform;
FN_DrvIcmDeleteColorTransform DrvIcmDeleteColorTransform;
FN_DrvIcmSetDeviceGammaRamp DrvIcmSetDeviceGammaRamp;
FN_DrvLineTo DrvLineTo;
FN_DrvLoadFontFile DrvLoadFontFile;
FN_DrvLockDisplayArea DrvLockDisplayArea;
FN_DrvMovePanning DrvMovePanning;
FN_DrvMovePointer DrvMovePointer;
FN_DrvNextBand DrvNextBand;
FN_DrvNotify DrvNotify;
FN_DrvOffset DrvOffset;
FN_DrvPaint DrvPaint;
FN_DrvPlgBlt DrvPlgBlt;
FN_DrvQueryAdvanceWidths DrvQueryAdvanceWidths;
FN_DrvQueryDeviceSupport DrvQueryDeviceSupport;
FN_DrvQueryDriverInfo DrvQueryDriverInfo;
FN_DrvQueryFont DrvQueryFont;
FN_DrvQueryFontCaps DrvQueryFontCaps;
FN_DrvQueryFontData DrvQueryFontData;
FN_DrvQueryFontFile DrvQueryFontFile;
FN_DrvQueryFontTree DrvQueryFontTree;
FN_DrvQueryGlyphAttrs DrvQueryGlyphAttrs;
FN_DrvQueryPerBandInfo DrvQueryPerBandInfo;
FN_DrvQuerySpoolType DrvQuerySpoolType;
FN_DrvQueryTrueTypeOutline DrvQueryTrueTypeOutline;
FN_DrvQueryTrueTypeSection DrvQueryTrueTypeSection;
FN_DrvQueryTrueTypeTable DrvQueryTrueTypeTable;
FN_DrvRealizeBrush DrvRealizeBrush;
FN_DrvRenderHint DrvRenderHint;
FN_DrvResetDevice DrvResetDevice;
FN_DrvResetPDEV DrvResetPDEV;
FN_DrvSaveScreenBits DrvSaveScreenBits;
FN_DrvSendPage DrvSendPage;
FN_DrvSetPalette DrvSetPalette;
FN_DrvSetPixelFormat DrvSetPixelFormat;
FN_DrvSetPointerShape DrvSetPointerShape;
FN_DrvStartBanding DrvStartBanding;
FN_DrvStartDoc DrvStartDoc;
FN_DrvStartDxInterop DrvStartDxInterop;
FN_DrvStartPage DrvStartPage;
FN_DrvStretchBlt DrvStretchBlt;
FN_DrvStretchBltROP DrvStretchBltROP;
FN_DrvStrokeAndFillPath DrvStrokeAndFillPath;
FN_DrvStrokePath DrvStrokePath;
FN_DrvSwapBuffers DrvSwapBuffers;
FN_DrvSynchronize DrvSynchronize;
FN_DrvSynchronizeRedirectionBitmaps DrvSynchronizeRedirectionBitmaps;
FN_DrvSynchronizeSurface DrvSynchronizeSurface;
FN_DrvTextOut DrvTextOut;
FN_DrvTransparentBlt DrvTransparentBlt;
FN_DrvUnloadFontFile DrvUnloadFontFile;
FN_DrvUnlockDisplayArea DrvUnlockDisplayArea;
MACRO_E2BIG E2BIG;
MACRO_EACCES EACCES;
MACRO_EAGAIN EAGAIN;
MACRO_CHARSET EASTEUROPE_CHARSET;
MACRO_EBADF EBADF;
MACRO_EFAULT EBUSY;
MACRO_ECHILD ECHILD;
MACRO_ECS ECS_REDRAW;
MACRO_ECS ECS_TEARDOWN;
MACRO_EDEADLK EDEADLK;
MACRO_EDEADLOCK EDEADLOCK;
MACRO_EDOM EDOM;
MACRO_ED ED_ABORTDOC;
MACRO_EEXIST EEXIST;
MACRO_CHARSET EE_CHARSET;
MACRO_EFAULT EFAULT;
MACRO_EFBIG EFBIG;
MACRO_EFLAGS EFLAGS_USER_SANITIZE;
MACRO_EHN EHN_ERROR;
MACRO_EHN EHN_RESTORED;
MACRO_EILSEQ EILSEQ;
MACRO_ESRCH EINTR;
MACRO_EINVAL EINVAL;
MACRO_EIO EIO;
MACRO_EISDIR EISDIR;
MACRO_ELF ELF_CULTURE_LATIN;
MACRO_ELF ELF_VENDOR_SIZE;
MACRO_ELF ELF_VERSION;
MACRO_EMFILE EMFILE;
MACRO_EMLINK EMLINK;
MACRO_EMR EMR_ABORTPATH;
MACRO_EMR EMR_ALPHABLEND;
MACRO_EMR EMR_ALPHADIBBLEND;
MACRO_EMR EMR_ANGLEARC;
MACRO_EMR EMR_ARC;
MACRO_EMR EMR_ARCTO;
MACRO_EMR EMR_BEGINPATH;
MACRO_EMR EMR_BITBLT;
MACRO_EMR EMR_CHORD;
MACRO_EMR EMR_CLOSEFIGURE;
MACRO_EMR EMR_COLORCORRECTPALETTE;
MACRO_EMR EMR_COLORMATCHTOTARGETW;
MACRO_EMR EMR_CREATEBRUSHINDIRECT;
MACRO_EMR EMR_CREATECOLORSPACE;
MACRO_EMR EMR_CREATECOLORSPACEW;
MACRO_EMR EMR_CREATEDIBPATTERNBRUSHPT;
MACRO_EMR EMR_CREATEMONOBRUSH;
MACRO_EMR EMR_CREATEPALETTE;
MACRO_EMR EMR_CREATEPEN;
MACRO_EMR EMR_DELETECOLORSPACE;
MACRO_EMR EMR_DELETEOBJECT;
MACRO_EMR EMR_DRAWESCAPE;
MACRO_EMR EMR_ELLIPSE;
MACRO_EMR EMR_ENDPATH;
MACRO_EMR EMR_EOF;
MACRO_EMR EMR_EXCLUDECLIPRECT;
MACRO_EMR EMR_EXTCREATEFONTINDIRECTW;
MACRO_EMR EMR_EXTCREATEPEN;
MACRO_EMR EMR_EXTESCAPE;
MACRO_EMR EMR_EXTFLOODFILL;
MACRO_EMR EMR_EXTSELECTCLIPRGN;
MACRO_EMR EMR_EXTTEXTOUTA;
MACRO_EMR EMR_EXTTEXTOUTW;
MACRO_EMR EMR_FILLPATH;
MACRO_EMR EMR_FILLRGN;
MACRO_EMR EMR_FLATTENPATH;
MACRO_EMR EMR_FORCEUFIMAPPING;
MACRO_EMR EMR_FRAMERGN;
MACRO_EMR EMR_GDICOMMENT;
MACRO_EMR EMR_GLSBOUNDEDRECORD;
MACRO_EMR EMR_GLSRECORD;
MACRO_EMR EMR_GRADIENTFILL;
MACRO_EMR EMR_HEADER;
MACRO_EMR EMR_INTERSECTCLIPRECT;
MACRO_EMR EMR_INVERTRGN;
MACRO_EMR EMR_LINETO;
MACRO_EMR EMR_MASKBLT;
MACRO_EMR EMR_MAX;
MACRO_EMR EMR_MIN;
MACRO_EMR EMR_MODIFYWORLDTRANSFORM;
MACRO_EMR EMR_MOVETOEX;
MACRO_EMR EMR_NAMEDESCAPE;
MACRO_EMR EMR_OFFSETCLIPRGN;
MACRO_EMR EMR_PAINTRGN;
MACRO_EMR EMR_PIE;
MACRO_EMR EMR_PIXELFORMAT;
MACRO_EMR EMR_PLGBLT;
MACRO_EMR EMR_POLYBEZIER;
MACRO_EMR EMR_POLYBEZIER16;
MACRO_EMR EMR_POLYBEZIERTO;
MACRO_EMR EMR_POLYBEZIERTO16;
MACRO_EMR EMR_POLYDRAW;
MACRO_EMR EMR_POLYDRAW16;
MACRO_EMR EMR_POLYGON;
MACRO_EMR EMR_POLYGON16;
MACRO_EMR EMR_POLYLINE;
MACRO_EMR EMR_POLYLINE16;
MACRO_EMR EMR_POLYLINETO;
MACRO_EMR EMR_POLYLINETO16;
MACRO_EMR EMR_POLYPOLYGON;
MACRO_EMR EMR_POLYPOLYGON16;
MACRO_EMR EMR_POLYPOLYLINE;
MACRO_EMR EMR_POLYPOLYLINE16;
MACRO_EMR EMR_POLYTEXTOUTA;
MACRO_EMR EMR_POLYTEXTOUTW;
MACRO_EMR EMR_REALIZEPALETTE;
MACRO_EMR EMR_RECTANGLE;
MACRO_EMR EMR_RESERVED_117;
MACRO_EMR EMR_RESIZEPALETTE;
MACRO_EMR EMR_RESTOREDC;
MACRO_EMR EMR_ROUNDRECT;
MACRO_EMR EMR_SAVEDC;
MACRO_EMR EMR_SCALEVIEWPORTEXTEX;
MACRO_EMR EMR_SCALEWINDOWEXTEX;
MACRO_EMR EMR_SELECTCLIPPATH;
MACRO_EMR EMR_SELECTOBJECT;
MACRO_EMR EMR_SELECTPALETTE;
MACRO_EMR EMR_SETARCDIRECTION;
MACRO_EMR EMR_SETBKCOLOR;
MACRO_EMR EMR_SETBKMODE;
MACRO_EMR EMR_SETBRUSHORGEX;
MACRO_EMR EMR_SETCOLORADJUSTMENT;
MACRO_EMR EMR_SETCOLORSPACE;
MACRO_EMR EMR_SETDIBITSTODEVICE;
MACRO_EMR EMR_SETICMMODE;
MACRO_EMR EMR_SETICMPROFILEA;
MACRO_EMR EMR_SETICMPROFILEW;
MACRO_EMR EMR_SETLAYOUT;
MACRO_EMR EMR_SETLINKEDUFIS;
MACRO_EMR EMR_SETMAPMODE;
MACRO_EMR EMR_SETMAPPERFLAGS;
MACRO_EMR EMR_SETMETARGN;
MACRO_EMR EMR_SETMITERLIMIT;
MACRO_EMR EMR_SETPALETTEENTRIES;
MACRO_EMR EMR_SETPIXELV;
MACRO_EMR EMR_SETPOLYFILLMODE;
MACRO_EMR EMR_SETROP2;
MACRO_EMR EMR_SETSTRETCHBLTMODE;
MACRO_EMR EMR_SETTEXTALIGN;
MACRO_EMR EMR_SETTEXTCOLOR;
MACRO_EMR EMR_SETTEXTJUSTIFICATION;
MACRO_EMR EMR_SETVIEWPORTEXTEX;
MACRO_EMR EMR_SETVIEWPORTORGEX;
MACRO_EMR EMR_SETWINDOWEXTEX;
MACRO_EMR EMR_SETWINDOWORGEX;
MACRO_EMR EMR_SETWORLDTRANSFORM;
MACRO_EMR EMR_SMALLTEXTOUT;
MACRO_EMR EMR_STARTDOC;
MACRO_EMR EMR_STRETCHBLT;
MACRO_EMR EMR_STRETCHDIBITS;
MACRO_EMR EMR_STROKEANDFILLPATH;
MACRO_EMR EMR_STROKEPATH;
MACRO_EMR EMR_TRANSPARENTBLT;
MACRO_EMR EMR_TRANSPARENTDIB;
MACRO_EMR EMR_WIDENPATH;
MACRO_ENABLEDUPLEX ENABLEDUPLEX;
MACRO_ENABLEPAIRKERNING ENABLEPAIRKERNING;
MACRO_ENABLERELATIVEWIDTHS ENABLERELATIVEWIDTHS;
MACRO_ENAMETOOLONG ENAMETOOLONG;
MACRO_ENCAPSULATED ENCAPSULATED_POSTSCRIPT;
MACRO_ENDCAP ENDCAP_BUTT;
MACRO_ENDCAP ENDCAP_ROUND;
MACRO_ENDCAP ENDCAP_SQUARE;
MACRO_ENDDOC ENDDOC;
MACRO_PATH END_PATH;
MACRO_ENFILE ENFILE;
MACRO_ENG ENG_FNT_CACHE_READ_FAULT;
MACRO_ENG ENG_FNT_CACHE_WRITE_FAULT;
MACRO_SIGNATURE ENHMETA_SIGNATURE;
MACRO_ENHMETA ENHMETA_STOCK_OBJECT;
MACRO_ENODEV ENODEV;
MACRO_EPERM ENOENT;
MACRO_E2BIG ENOEXEC;
MACRO_ENOLCK ENOLCK;
MACRO_ENOMEM ENOMEM;
MACRO_ENOSPC ENOSPC;
MACRO_ENOSYS ENOSYS;
MACRO_ENOTDIR ENOTDIR;
MACRO_ENOTEMPTY ENOTEMPTY;
MACRO_ENOTTY ENOTTY;
MACRO_ENUMPAPERBINS ENUMPAPERBINS;
MACRO_ENUMPAPERMETRICS ENUMPAPERMETRICS;
MACRO_ENXIO ENXIO;
MACRO_EOF EOF;
MACRO_EPERM EPERM;
MACRO_EMLINK EPIPE;
MACRO_EPROCESS EPROCESS_VDM_OBJECTS;
MACRO_EPSPRINTING EPSPRINTING;
MACRO_SIGNATURE EPS_SIGNATURE;
MACRO_EPT_S EPT_S_CANT_CREATE;
MACRO_EPT EPT_S_CANT_PERFORM_OP;
MACRO_EPT EPT_S_INVALID_ENTRY;
MACRO_EPT EPT_S_NOT_REGISTERED;
MACRO_ERANGE ERANGE;
MACRO_EROFS EROFS;
MACRO_ERROR_0 ERROR;
MACRO_ERROR_NO ERROR_ABANDONED_WAIT_0;
MACRO_ERROR_NO ERROR_ABANDONED_WAIT_63;
MACRO_ERROR_NO ERROR_ABANDON_HIBERFILE;
MACRO_ERROR_NO ERROR_ACCESS_AUDIT_BY_POLICY;
MACRO_ERROR ERROR_ACCESS_DENIED;
MACRO_ERROR_NO ERROR_ACCESS_DISABLED_BY_POLICY;
MACRO_ERROR_NO ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY;
MACRO_ERROR_NO ERROR_ACCESS_DISABLED_WEBBLADE;
MACRO_ERROR_NO ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER;
MACRO_ERROR_NO ERROR_ACCOUNT_DISABLED;
MACRO_ERROR_NETLOGON ERROR_ACCOUNT_EXPIRED;
MACRO_ERROR_INVALID_TIME ERROR_ACCOUNT_LOCKED_OUT;
MACRO_ERROR_NO ERROR_ACCOUNT_RESTRICTION;
MACRO_ERROR_NO ERROR_ACPI_ERROR;
MACRO_ERROR_CTX ERROR_ACTIVATION_COUNT_EXCEEDED;
MACRO_ERROR_KM ERROR_ACTIVE_CONNECTIONS;
MACRO_ERROR ERROR_ADAP_HDW_ERR;
MACRO_ERROR_NO ERROR_ADDRESS_ALREADY_ASSOCIATED;
MACRO_ERROR_NO ERROR_ADDRESS_NOT_ASSOCIATED;
MACRO_ERROR_IPSEC_IKE ERROR_ADVANCED_INSTALLER_FAILED;
MACRO_ERROR_NO ERROR_ALERTED;
MACRO_ERROR_NO ERROR_ALIAS_EXISTS;
MACRO_ERROR_NO ERROR_ALLOCATE_BUCKET;
MACRO_ERROR_NO ERROR_ALLOTTED_SPACE_EXCEEDED;
MACRO_ERROR_KM ERROR_ALL_NODES_NOT_AVAILABLE;
MACRO_ERROR_KM ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED;
MACRO_ERROR ERROR_ALREADY_ASSIGNED;
MACRO_ERROR ERROR_ALREADY_EXISTS;
MACRO_ERROR_NO ERROR_ALREADY_FIBER;
MACRO_ERROR_NO ERROR_ALREADY_INITIALIZED;
MACRO_ERROR_NO ERROR_ALREADY_REGISTERED;
MACRO_ERROR_NO ERROR_ALREADY_RUNNING_LKG;
MACRO_ERROR_NO ERROR_ALREADY_THREAD;
MACRO_ERROR_INVALID_TIME ERROR_ALREADY_WAITING;
MACRO_ERROR_NO ERROR_ALREADY_WIN32;
MACRO_ERROR_IPSEC_IKE ERROR_AMBIGUOUS_SYSTEM_DEVICE;
MACRO_ERROR_NO ERROR_APPHELP_BLOCK;
MACRO_ERROR_IPSEC_IKE ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN;
MACRO_ERROR_NO ERROR_APP_INIT_FAILURE;
MACRO_ERROR_NO ERROR_APP_WRONG_OS;
MACRO_ERROR_NO ERROR_ARBITRATION_UNHANDLED;
MACRO_ERROR ERROR_ARENA_TRASHED;
MACRO_ERROR_NO ERROR_ARITHMETIC_OVERFLOW;
MACRO_ERROR_NO ERROR_ASSERTION_FAILURE;
MACRO_ERROR ERROR_ATOMIC_LOCKS_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_AUDIT_FAILED;
MACRO_ERROR_KM ERROR_AUTHENTICATION_FIREWALL_FAILED;
MACRO_ERROR_NO ERROR_AUTHIP_FAILURE;
MACRO_ERROR ERROR_AUTODATASEG_EXCEEDS_64k;
MACRO_ERROR_NO ERROR_BACKUP_CONTROLLER;
MACRO_ERROR_NO ERROR_BADDB;
MACRO_ERROR_NO ERROR_BADKEY;
MACRO_ERROR_NO ERROR_BADSTARTPOSITION;
MACRO_ERROR_NO ERROR_BAD_ACCESSOR_FLAGS;
MACRO_ERROR ERROR_BAD_ARGUMENTS;
MACRO_ERROR ERROR_BAD_COMMAND;
MACRO_ERROR_NO ERROR_BAD_COMPRESSION_BUFFER;
MACRO_ERROR_NO ERROR_BAD_CONFIGURATION;
MACRO_ERROR_NO ERROR_BAD_CURRENT_DIRECTORY;
MACRO_ERROR_NO ERROR_BAD_DESCRIPTOR_FORMAT;
MACRO_ERROR_NO ERROR_BAD_DEVICE;
MACRO_ERROR_NO ERROR_BAD_DEVICE_PATH;
MACRO_ERROR ERROR_BAD_DEV_TYPE;
MACRO_ERROR_NO ERROR_BAD_DLL_ENTRYPOINT;
MACRO_ERROR_KM ERROR_BAD_DRIVER;
MACRO_ERROR ERROR_BAD_DRIVER_LEVEL;
MACRO_ERROR ERROR_BAD_ENVIRONMENT;
MACRO_ERROR ERROR_BAD_EXE_FORMAT;
MACRO_ERROR ERROR_BAD_FILE_TYPE;
MACRO_ERROR ERROR_BAD_FORMAT;
MACRO_ERROR_NO ERROR_BAD_IMPERSONATION_LEVEL;
MACRO_ERROR_NO ERROR_BAD_INHERITANCE_ACL;
MACRO_ERROR ERROR_BAD_LENGTH;
MACRO_ERROR_NO ERROR_BAD_LOGON_SESSION_STATE;
MACRO_ERROR ERROR_BAD_NETPATH;
MACRO_ERROR ERROR_BAD_NET_NAME;
MACRO_ERROR ERROR_BAD_NET_RESP;
MACRO_ERROR ERROR_BAD_PATHNAME;
MACRO_ERROR ERROR_BAD_PIPE;
MACRO_ERROR_NO ERROR_BAD_PROFILE;
MACRO_ERROR_NO ERROR_BAD_PROVIDER;
MACRO_ERROR_NO ERROR_BAD_QUERY_SYNTAX;
MACRO_ERROR_KM ERROR_BAD_RECOVERY_POLICY;
MACRO_ERROR ERROR_BAD_REM_ADAP;
MACRO_ERROR_NO ERROR_BAD_SERVICE_ENTRYPOINT;
MACRO_ERROR ERROR_BAD_THREADID_ADDR;
MACRO_ERROR_NO ERROR_BAD_TOKEN_TYPE;
MACRO_ERROR ERROR_BAD_UNIT;
MACRO_ERROR_KM ERROR_BAD_USERNAME;
MACRO_ERROR_NO ERROR_BAD_USER_PROFILE;
MACRO_ERROR_NO ERROR_BAD_VALIDATION_CLASS;
MACRO_ERROR_NO ERROR_BEGINNING_OF_MEDIA;
MACRO_ERROR_NO ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT;
MACRO_ERROR_NO ERROR_BOOT_ALREADY_ACCEPTED;
MACRO_ERROR ERROR_BROKEN_PIPE;
MACRO_ERROR_NO ERROR_BUFFER_ALL_ZEROS;
MACRO_ERROR ERROR_BUFFER_OVERFLOW;
MACRO_ERROR ERROR_BUSY;
MACRO_ERROR ERROR_BUSY_DRIVE;
MACRO_ERROR_NO ERROR_BUS_RESET;
MACRO_ERROR_NO ERROR_CACHE_PAGE_LOCKED;
MACRO_ERROR_NO ERROR_CALLBACK_POP_STACK;
MACRO_ERROR_NO ERROR_CALLBACK_SUPPLIED_INVALID_DATA;
MACRO_ERROR ERROR_CALL_NOT_IMPLEMENTED;
MACRO_ERROR_NO ERROR_CANCELLED;
MACRO_ERROR ERROR_CANCEL_VIOLATION;
MACRO_ERROR_NO ERROR_CANNOT_COPY;
MACRO_ERROR_NO ERROR_CANNOT_DETECT_DRIVER_FAILURE;
MACRO_ERROR_NO ERROR_CANNOT_DETECT_PROCESS_ABORT;
MACRO_ERROR_NO ERROR_CANNOT_FIND_WND_CLASS;
MACRO_ERROR_NO ERROR_CANNOT_IMPERSONATE;
MACRO_ERROR_NO ERROR_CANNOT_LOAD_REGISTRY_FILE;
MACRO_ERROR ERROR_CANNOT_MAKE;
MACRO_ERROR_NO ERROR_CANNOT_OPEN_PROFILE;
MACRO_ERROR_IPSEC_IKE ERROR_CANNOT_SWITCH_RUNLEVEL;
MACRO_ERROR_NO ERROR_CANTFETCHBACKWARDS;
MACRO_ERROR_NO ERROR_CANTOPEN;
MACRO_ERROR_NO ERROR_CANTREAD;
MACRO_ERROR_NO ERROR_CANTSCROLLBACKWARDS;
MACRO_ERROR_NO ERROR_CANTWRITE;
MACRO_ERROR_NO ERROR_CANT_ACCESS_DOMAIN_INFO;
MACRO_ERROR_NO_SITENAME ERROR_CANT_ACCESS_FILE;
MACRO_ERROR_KM ERROR_CANT_DELETE_LAST_ITEM;
MACRO_ERROR_NO ERROR_CANT_DISABLE_MANDATORY;
MACRO_ERROR_NO ERROR_CANT_ENABLE_DENY_ONLY;
MACRO_ERROR_KM ERROR_CANT_EVICT_ACTIVE_NODE;
MACRO_ERROR_NO ERROR_CANT_OPEN_ANONYMOUS;
MACRO_ERROR_NO_SITENAME ERROR_CANT_RESOLVE_FILENAME;
MACRO_ERROR_NO ERROR_CAN_NOT_COMPLETE;
MACRO_ERROR_KM ERROR_CAN_NOT_DEL_LOCAL_WINS;
MACRO_ERROR_NO ERROR_CARDBUS_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_CHECKING_FILE_SYSTEM;
MACRO_ERROR ERROR_CHECKOUT_REQUIRED;
MACRO_ERROR_NO ERROR_CHILD_MUST_BE_VOLATILE;
MACRO_ERROR ERROR_CHILD_NOT_COMPLETE;
MACRO_ERROR_NO ERROR_CHILD_WINDOW_MENU;
MACRO_ERROR_NO ERROR_CIRCULAR_DEPENDENCY;
MACRO_ERROR_NO ERROR_CLASS_ALREADY_EXISTS;
MACRO_ERROR_NO ERROR_CLASS_DOES_NOT_EXIST;
MACRO_ERROR_NO ERROR_CLASS_HAS_WINDOWS;
MACRO_ERROR_KM ERROR_CLEANER_CARTRIDGE_INSTALLED;
MACRO_ERROR_KM ERROR_CLEANER_CARTRIDGE_SPENT;
MACRO_ERROR_KM ERROR_CLEANER_SLOT_NOT_SET;
MACRO_ERROR_KM ERROR_CLEANER_SLOT_SET;
MACRO_ERROR_NO ERROR_CLIENT_SERVER_PARAMETERS_INVALID;
MACRO_ERROR_NO ERROR_CLIPBOARD_NOT_OPEN;
MACRO_ERROR_KM ERROR_CLIPPING_NOT_SUPPORTED;
MACRO_ERROR_KM ERROR_CLUSCFG_ALREADY_COMMITTED;
MACRO_ERROR_KM ERROR_CLUSCFG_ROLLBACK_FAILED;
MACRO_ERROR_KM ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT;
MACRO_ERROR_KM ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTERLOG_CORRUPT;
MACRO_ERROR_KM ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE;
MACRO_ERROR_KM ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE;
MACRO_ERROR_KM ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE;
MACRO_ERROR_KM ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME;
MACRO_ERROR_KM ERROR_CLUSTER_DATABASE_SEQMISMATCH;
MACRO_ERROR_KM ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP;
MACRO_ERROR_KM ERROR_CLUSTER_GUM_NOT_LOCKER;
MACRO_ERROR_KM ERROR_CLUSTER_INCOMPATIBLE_VERSIONS;
MACRO_ERROR_KM ERROR_CLUSTER_INSTANCE_ID_MISMATCH;
MACRO_ERROR_KM ERROR_CLUSTER_INVALID_NETWORK;
MACRO_ERROR_KM ERROR_CLUSTER_INVALID_NETWORK_PROVIDER;
MACRO_ERROR_KM ERROR_CLUSTER_INVALID_NODE;
MACRO_ERROR_KM ERROR_CLUSTER_INVALID_REQUEST;
MACRO_ERROR_KM ERROR_CLUSTER_IPADDR_IN_USE;
MACRO_ERROR_KM ERROR_CLUSTER_JOIN_ABORTED;
MACRO_ERROR_KM ERROR_CLUSTER_JOIN_IN_PROGRESS;
MACRO_ERROR_KM ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS;
MACRO_ERROR_KM ERROR_CLUSTER_LAST_INTERNAL_NETWORK;
MACRO_ERROR_KM ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED;
MACRO_ERROR_KM ERROR_CLUSTER_MEMBERSHIP_HALT;
MACRO_ERROR_KM ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE;
MACRO_ERROR_KM ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME;
MACRO_ERROR_KM ERROR_CLUSTER_NETINTERFACE_EXISTS;
MACRO_ERROR_KM ERROR_CLUSTER_NETINTERFACE_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_ALREADY_ONLINE;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_EXISTS;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP;
MACRO_ERROR_KM ERROR_CLUSTER_NETWORK_NOT_INTERNAL;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_ALREADY_DOWN;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_ALREADY_MEMBER;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_ALREADY_UP;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_DOWN;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_EXISTS;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_NOT_MEMBER;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_NOT_PAUSED;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_NOT_READY;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_PAUSED;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_SHUTTING_DOWN;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_UNREACHABLE;
MACRO_ERROR_KM ERROR_CLUSTER_NODE_UP;
MACRO_ERROR_KM ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED;
MACRO_ERROR_KM ERROR_CLUSTER_NO_SECURITY_CONTEXT;
MACRO_ERROR_KM ERROR_CLUSTER_OLD_VERSION;
MACRO_ERROR_KM ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST;
MACRO_ERROR_KM ERROR_CLUSTER_PARAMETER_MISMATCH;
MACRO_ERROR_KM ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH;
MACRO_ERROR_KM ERROR_CLUSTER_QUORUMLOG_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_RESNAME_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND;
MACRO_ERROR_KM ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED;
MACRO_ERROR_KM ERROR_CLUSTER_SHUTTING_DOWN;
MACRO_ERROR_KM ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED;
MACRO_ERROR_KM ERROR_CLUSTER_WRONG_OS_VERSION;
MACRO_ERROR_KM ERROR_COLORSPACE_MISMATCH;
MACRO_ERROR_NO ERROR_COMMITMENT_LIMIT;
MACRO_ERROR_NO ERROR_COMMITMENT_MINIMUM;
MACRO_ERROR_NO ERROR_COMPRESSED_FILE_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_COMPRESSION_DISABLED;
MACRO_ERROR_IPSEC_IKE ERROR_COM_TASK_STOP_PENDING;
MACRO_ERROR_KM ERROR_CONNECTED_OTHER_PASSWORD;
MACRO_ERROR_KM ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT;
MACRO_ERROR_NO ERROR_CONNECTION_ABORTED;
MACRO_ERROR_NO ERROR_CONNECTION_ACTIVE;
MACRO_ERROR_NO ERROR_CONNECTION_COUNT_LIMIT;
MACRO_ERROR_NO ERROR_CONNECTION_INVALID;
MACRO_ERROR_NO ERROR_CONNECTION_REFUSED;
MACRO_ERROR_NO ERROR_CONNECTION_UNAVAIL;
MACRO_ERROR_KM ERROR_CONTEXT_EXPIRED;
MACRO_ERROR_NO ERROR_CONTINUE;
MACRO_ERROR_KM ERROR_CONTROLLING_IEPORT;
MACRO_ERROR_NO ERROR_CONTROL_C_EXIT;
MACRO_ERROR_NO ERROR_CONTROL_ID_NOT_FOUND;
MACRO_ERROR_NO ERROR_CONVERT_TO_LARGE;
MACRO_ERROR_KM ERROR_CORE_RESOURCE;
MACRO_ERROR_NO ERROR_CORRUPT_SYSTEM_FILE;
MACRO_ERROR_NO ERROR_COUNTER_TIMEOUT;
MACRO_ERROR_NO ERROR_CRASH_DUMP;
MACRO_ERROR ERROR_CRC;
MACRO_ERROR_NO ERROR_CREATE_FAILED;
MACRO_ERROR_NO ERROR_CSCSHARE_OFFLINE;
MACRO_ERROR_CTX ERROR_CTX_BAD_VIDEO_MODE;
MACRO_ERROR_CTX ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY;
MACRO_ERROR_CTX ERROR_CTX_CLIENT_LICENSE_IN_USE;
MACRO_ERROR_CTX ERROR_CTX_CLIENT_LICENSE_NOT_SET;
MACRO_ERROR_CTX ERROR_CTX_CLIENT_QUERY_TIMEOUT;
MACRO_ERROR_CTX ERROR_CTX_CLOSE_PENDING;
MACRO_ERROR_CTX ERROR_CTX_CONSOLE_CONNECT;
MACRO_ERROR_CTX ERROR_CTX_CONSOLE_DISCONNECT;
MACRO_ERROR_CTX ERROR_CTX_GRAPHICS_INVALID;
MACRO_ERROR_CTX ERROR_CTX_INVALID_MODEMNAME;
MACRO_ERROR_CTX ERROR_CTX_INVALID_PD;
MACRO_ERROR_CTX ERROR_CTX_INVALID_WD;
MACRO_ERROR_CTX ERROR_CTX_LICENSE_CLIENT_INVALID;
MACRO_ERROR_CTX ERROR_CTX_LICENSE_EXPIRED;
MACRO_ERROR_CTX ERROR_CTX_LICENSE_NOT_AVAILABLE;
MACRO_ERROR_CTX ERROR_CTX_LOGON_DISABLED;
MACRO_ERROR_CTX ERROR_CTX_MODEM_INF_NOT_FOUND;
MACRO_ERROR_CTX ERROR_CTX_MODEM_RESPONSE_BUSY;
MACRO_ERROR_CTX ERROR_CTX_MODEM_RESPONSE_ERROR;
MACRO_ERROR_CTX ERROR_CTX_MODEM_RESPONSE_NO_CARRIER;
MACRO_ERROR_CTX ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE;
MACRO_ERROR_CTX ERROR_CTX_MODEM_RESPONSE_TIMEOUT;
MACRO_ERROR_CTX ERROR_CTX_MODEM_RESPONSE_VOICE;
MACRO_ERROR_CTX ERROR_CTX_NOT_CONSOLE;
MACRO_ERROR_CTX ERROR_CTX_NO_OUTBUF;
MACRO_ERROR_CTX ERROR_CTX_PD_NOT_FOUND;
MACRO_ERROR_CTX ERROR_CTX_SERVICE_NAME_COLLISION;
MACRO_ERROR_CTX ERROR_CTX_SHADOW_DENIED;
MACRO_ERROR_CTX ERROR_CTX_SHADOW_DISABLED;
MACRO_ERROR_CTX ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE;
MACRO_ERROR_CTX ERROR_CTX_SHADOW_INVALID;
MACRO_ERROR_CTX ERROR_CTX_SHADOW_NOT_RUNNING;
MACRO_ERROR_CTX ERROR_CTX_TD_ERROR;
MACRO_ERROR_CTX ERROR_CTX_WD_NOT_FOUND;
MACRO_ERROR_CTX ERROR_CTX_WINSTATION_ACCESS_DENIED;
MACRO_ERROR_CTX ERROR_CTX_WINSTATION_ALREADY_EXISTS;
MACRO_ERROR_CTX ERROR_CTX_WINSTATION_BUSY;
MACRO_ERROR_CTX ERROR_CTX_WINSTATION_NAME_INVALID;
MACRO_ERROR_CTX ERROR_CTX_WINSTATION_NOT_FOUND;
MACRO_ERROR ERROR_CURRENT_DIRECTORY;
MACRO_ERROR_NO ERROR_CURRENT_DOMAIN_NOT_ALLOWED;
MACRO_ERROR_KM ERROR_DATABASE_BACKUP_CORRUPT;
MACRO_ERROR_NO ERROR_DATABASE_DOES_NOT_EXIST;
MACRO_ERROR_KM ERROR_DATABASE_FAILURE;
MACRO_ERROR_KM ERROR_DATABASE_FULL;
MACRO_ERROR_NO ERROR_DATATYPE_MISMATCH;
MACRO_ERROR_NO ERROR_DATA_CHECKSUM_ERROR;
MACRO_ERROR_NO ERROR_DATA_NOT_ACCEPTED;
MACRO_ERROR_NO ERROR_DBG_COMMAND_EXCEPTION;
MACRO_ERROR_NO ERROR_DBG_CONTINUE;
MACRO_ERROR_NO ERROR_DBG_CONTROL_BREAK;
MACRO_ERROR_NO ERROR_DBG_CONTROL_C;
MACRO_ERROR_NO ERROR_DBG_EXCEPTION_HANDLED;
MACRO_ERROR_NO ERROR_DBG_EXCEPTION_NOT_HANDLED;
MACRO_ERROR_NO ERROR_DBG_PRINTEXCEPTION_C;
MACRO_ERROR_NO ERROR_DBG_REPLY_LATER;
MACRO_ERROR_NO ERROR_DBG_RIPEXCEPTION;
MACRO_ERROR_NO ERROR_DBG_TERMINATE_PROCESS;
MACRO_ERROR_NO ERROR_DBG_TERMINATE_THREAD;
MACRO_ERROR_NO ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE;
MACRO_ERROR_NO ERROR_DC_NOT_FOUND;
MACRO_ERROR_NO ERROR_DDE_FAIL;
MACRO_ERROR_NO ERROR_DEBUGGER_INACTIVE;
MACRO_ERROR_NO ERROR_DEBUG_ATTACH_FAILED;
MACRO_ERROR_KM ERROR_DECRYPTION_FAILED;
MACRO_ERROR_NO ERROR_DELETE_PENDING;
MACRO_ERROR_IPSEC_IKE ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED;
MACRO_ERROR_KM ERROR_DELETING_ICM_XFORM;
MACRO_ERROR_KM ERROR_DEPENDENCY_ALREADY_EXISTS;
MACRO_ERROR_KM ERROR_DEPENDENCY_NOT_ALLOWED;
MACRO_ERROR_KM ERROR_DEPENDENCY_NOT_FOUND;
MACRO_ERROR_KM ERROR_DEPENDENT_RESOURCE_EXISTS;
MACRO_ERROR_NO ERROR_DEPENDENT_SERVICES_RUNNING;
MACRO_ERROR_IPSEC_IKE ERROR_DEPLOYMENT_BLOCKED_BY_POLICY;
MACRO_ERROR_NO ERROR_DESTINATION_ELEMENT_FULL;
MACRO_ERROR_NO ERROR_DESTROY_OBJECT_OF_OTHER_THREAD;
MACRO_ERROR_NO ERROR_DEVICE_ALREADY_REMEMBERED;
MACRO_ERROR_NO ERROR_DEVICE_DOOR_OPEN;
MACRO_ERROR_NO ERROR_DEVICE_ENUMERATION_ERROR;
MACRO_ERROR_NO ERROR_DEVICE_FEATURE_NOT_SUPPORTED;
MACRO_ERROR_KM ERROR_DEVICE_IN_USE;
MACRO_ERROR_KM ERROR_DEVICE_NOT_AVAILABLE;
MACRO_ERROR_NO ERROR_DEVICE_NOT_CONNECTED;
MACRO_ERROR_NO ERROR_DEVICE_NOT_PARTITIONED;
MACRO_ERROR_NO ERROR_DEVICE_NO_RESOURCES;
MACRO_ERROR_NO ERROR_DEVICE_REINITIALIZATION_NEEDED;
MACRO_ERROR_NO ERROR_DEVICE_REMOVED;
MACRO_ERROR_NO ERROR_DEVICE_REQUIRES_CLEANING;
MACRO_ERROR ERROR_DEVICE_SUPPORT_IN_PROGRESS;
MACRO_ERROR_NO ERROR_DEVICE_UNREACHABLE;
MACRO_ERROR ERROR_DEV_NOT_EXIST;
MACRO_ERROR_KM ERROR_DHCP_ADDRESS_CONFLICT;
MACRO_ERROR_NO ERROR_DIFFERENT_SERVICE_ACCOUNT;
MACRO_ERROR_NO ERROR_DIRECTORY;
MACRO_ERROR_NO ERROR_DIRECTORY_NOT_SUPPORTED;
MACRO_ERROR ERROR_DIRECT_ACCESS_HANDLE;
MACRO_ERROR_KM ERROR_DIR_EFS_DISALLOWED;
MACRO_ERROR ERROR_DIR_NOT_EMPTY;
MACRO_ERROR ERROR_DIR_NOT_ROOT;
MACRO_ERROR ERROR_DISCARDED;
MACRO_ERROR ERROR_DISK_CHANGE;
MACRO_ERROR_NO ERROR_DISK_CORRUPT;
MACRO_ERROR ERROR_DISK_FULL;
MACRO_ERROR_NO ERROR_DISK_OPERATION_FAILED;
MACRO_ERROR_NO ERROR_DISK_RECALIBRATE_FAILED;
MACRO_ERROR_NO ERROR_DISK_REPAIR_DISABLED;
MACRO_ERROR_NO ERROR_DISK_RESET_FAILED;
MACRO_ERROR_NO ERROR_DISK_RESOURCES_EXHAUSTED;
MACRO_ERROR_NO ERROR_DISK_TOO_FRAGMENTED;
MACRO_ERROR_NO ERROR_DLL_INIT_FAILED;
MACRO_ERROR_NO ERROR_DLL_INIT_FAILED_LOGOFF;
MACRO_ERROR_NO ERROR_DLL_MIGHT_BE_INCOMPATIBLE;
MACRO_ERROR_NO ERROR_DLL_MIGHT_BE_INSECURE;
MACRO_ERROR_NO ERROR_DLL_NOT_FOUND;
MACRO_ERROR_NO ERROR_DOMAIN_CONTROLLER_EXISTS;
MACRO_ERROR_INVALID_TIME ERROR_DOMAIN_CONTROLLER_NOT_FOUND;
MACRO_ERROR_NO ERROR_DOMAIN_CTRLR_CONFIG_ERROR;
MACRO_ERROR_NO ERROR_DOMAIN_EXISTS;
MACRO_ERROR_NO ERROR_DOMAIN_LIMIT_EXCEEDED;
MACRO_ERROR_NOLOGON ERROR_DOMAIN_TRUST_INCONSISTENT;
MACRO_ERROR_NO ERROR_DOWNGRADE_DETECTED;
MACRO_ERROR_NO ERROR_DRIVERS_LEAKING_LOCKED_PAGES;
MACRO_ERROR_NO ERROR_DRIVER_BLOCKED;
MACRO_ERROR_NO ERROR_DRIVER_CANCEL_TIMEOUT;
MACRO_ERROR_NO ERROR_DRIVER_DATABASE_ERROR;
MACRO_ERROR_NO ERROR_DRIVER_FAILED_PRIOR_UNLOAD;
MACRO_ERROR_NO ERROR_DRIVER_FAILED_SLEEP;
MACRO_ERROR ERROR_DRIVE_LOCKED;
MACRO_ERROR_KM ERROR_DRIVE_MEDIA_MISMATCH;
MACRO_ERROR_DS ERROR_DS_ADD_REPLICA_INHIBITED;
MACRO_ERROR_DS ERROR_DS_ADMIN_LIMIT_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_AFFECTS_MULTIPLE_DSAS;
MACRO_ERROR_DS ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER;
MACRO_ERROR_DS ERROR_DS_ALIASED_OBJ_MISSING;
MACRO_ERROR_DS ERROR_DS_ALIAS_DEREF_PROBLEM;
MACRO_ERROR_DS ERROR_DS_ALIAS_POINTS_TO_ALIAS;
MACRO_ERROR_DS ERROR_DS_ALIAS_PROBLEM;
MACRO_ERROR_DS ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS;
MACRO_ERROR_DS ERROR_DS_ATTRIBUTE_OWNED_BY_SAM;
MACRO_ERROR_DS ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED;
MACRO_ERROR_DS ERROR_DS_ATT_ALREADY_EXISTS;
MACRO_ERROR_DS ERROR_DS_ATT_IS_NOT_ON_OBJ;
MACRO_ERROR_DS ERROR_DS_ATT_NOT_DEF_FOR_CLASS;
MACRO_ERROR_DS ERROR_DS_ATT_NOT_DEF_IN_SCHEMA;
MACRO_ERROR_DS ERROR_DS_ATT_SCHEMA_REQ_ID;
MACRO_ERROR_DS ERROR_DS_ATT_SCHEMA_REQ_SYNTAX;
MACRO_ERROR_DS ERROR_DS_ATT_VAL_ALREADY_EXISTS;
MACRO_ERROR_DS ERROR_DS_AUTHORIZATION_FAILED;
MACRO_ERROR_DS ERROR_DS_AUTH_METHOD_NOT_SUPPORTED;
MACRO_ERROR_DS ERROR_DS_AUTH_UNKNOWN;
MACRO_ERROR_DS ERROR_DS_AUX_CLS_TEST_FAIL;
MACRO_ERROR_DS ERROR_DS_BACKLINK_WITHOUT_LINK;
MACRO_ERROR_DS ERROR_DS_BAD_ATT_SCHEMA_SYNTAX;
MACRO_ERROR_DS ERROR_DS_BAD_HIERARCHY_FILE;
MACRO_ERROR_DS ERROR_DS_BAD_INSTANCE_TYPE;
MACRO_ERROR_DS ERROR_DS_BAD_NAME_SYNTAX;
MACRO_ERROR_DS ERROR_DS_BAD_RDN_ATT_ID_SYNTAX;
MACRO_ERROR_DS ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED;
MACRO_ERROR_DS ERROR_DS_BUSY;
MACRO_ERROR_DS ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD;
MACRO_ERROR_DS ERROR_DS_CANT_ADD_ATT_VALUES;
MACRO_ERROR_DS ERROR_DS_CANT_ADD_SYSTEM_ONLY;
MACRO_ERROR_DS ERROR_DS_CANT_ADD_TO_GC;
MACRO_ERROR_DS ERROR_DS_CANT_CACHE_ATT;
MACRO_ERROR_DS ERROR_DS_CANT_CACHE_CLASS;
MACRO_ERROR_DS ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC;
MACRO_ERROR_DS ERROR_DS_CANT_CREATE_UNDER_SCHEMA;
MACRO_ERROR_DS ERROR_DS_CANT_DELETE;
MACRO_ERROR_DS ERROR_DS_CANT_DELETE_DSA_OBJ;
MACRO_ERROR_DS ERROR_DS_CANT_DEL_MASTER_CROSSREF;
MACRO_ERROR_DS ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC;
MACRO_ERROR_DS ERROR_DS_CANT_DEREF_ALIAS;
MACRO_ERROR_DS ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN;
MACRO_ERROR_DS ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF;
MACRO_ERROR_DS ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN;
MACRO_ERROR_DS ERROR_DS_CANT_FIND_DSA_OBJ;
MACRO_ERROR_DS ERROR_DS_CANT_FIND_EXPECTED_NC;
MACRO_ERROR_DS ERROR_DS_CANT_FIND_NC_IN_CACHE;
MACRO_ERROR_DS ERROR_DS_CANT_MIX_MASTER_AND_REPS;
MACRO_ERROR_DS ERROR_DS_CANT_MOD_OBJ_CLASS;
MACRO_ERROR_DS ERROR_DS_CANT_MOD_PRIMARYGROUPID;
MACRO_ERROR_DS ERROR_DS_CANT_MOD_SYSTEM_ONLY;
MACRO_ERROR_DS ERROR_DS_CANT_MOVE_ACCOUNT_GROUP;
MACRO_ERROR_DS ERROR_DS_CANT_MOVE_APP_BASIC_GROUP;
MACRO_ERROR_DS ERROR_DS_CANT_MOVE_APP_QUERY_GROUP;
MACRO_ERROR_DS ERROR_DS_CANT_MOVE_DELETED_OBJECT;
MACRO_ERROR_DS ERROR_DS_CANT_MOVE_RESOURCE_GROUP;
MACRO_ERROR_DS ERROR_DS_CANT_ON_NON_LEAF;
MACRO_ERROR_DS ERROR_DS_CANT_ON_RDN;
MACRO_ERROR_DS ERROR_DS_CANT_REMOVE_ATT_CACHE;
MACRO_ERROR_DS ERROR_DS_CANT_REMOVE_CLASS_CACHE;
MACRO_ERROR_DS ERROR_DS_CANT_REM_MISSING_ATT;
MACRO_ERROR_DS ERROR_DS_CANT_REM_MISSING_ATT_VAL;
MACRO_ERROR_DS ERROR_DS_CANT_REPLACE_HIDDEN_REC;
MACRO_ERROR_DS ERROR_DS_CANT_RETRIEVE_ATTS;
MACRO_ERROR_DS ERROR_DS_CANT_RETRIEVE_CHILD;
MACRO_ERROR_DS ERROR_DS_CANT_RETRIEVE_DN;
MACRO_ERROR_DS ERROR_DS_CANT_RETRIEVE_INSTANCE;
MACRO_ERROR_DS ERROR_DS_CANT_RETRIEVE_SD;
MACRO_ERROR_DS ERROR_DS_CANT_START;
MACRO_ERROR_DS ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ;
MACRO_ERROR_DS ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS;
MACRO_ERROR_DS ERROR_DS_CHILDREN_EXIST;
MACRO_ERROR_DS ERROR_DS_CLASS_MUST_BE_CONCRETE;
MACRO_ERROR_DS ERROR_DS_CLASS_NOT_DSA;
MACRO_ERROR_DS ERROR_DS_CLIENT_LOOP;
MACRO_ERROR_DS ERROR_DS_CODE_INCONSISTENCY;
MACRO_ERROR_DS ERROR_DS_COMPARE_FALSE;
MACRO_ERROR_DS ERROR_DS_COMPARE_TRUE;
MACRO_ERROR_DS ERROR_DS_CONFIDENTIALITY_REQUIRED;
MACRO_ERROR_DS ERROR_DS_CONFIG_PARAM_MISSING;
MACRO_ERROR_DS ERROR_DS_CONSTRAINT_VIOLATION;
MACRO_ERROR_DS ERROR_DS_CONSTRUCTED_ATT_MOD;
MACRO_ERROR_DS ERROR_DS_CONTROL_NOT_FOUND;
MACRO_ERROR_DS ERROR_DS_COULDNT_CONTACT_FSMO;
MACRO_ERROR_DS ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE;
MACRO_ERROR_DS ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE;
MACRO_ERROR_DS ERROR_DS_COULDNT_UPDATE_SPNS;
MACRO_ERROR_DS ERROR_DS_COUNTING_AB_INDICES_FAILED;
MACRO_ERROR_DS ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD;
MACRO_ERROR_DS ERROR_DS_CROSS_DOM_MOVE_ERROR;
MACRO_ERROR_DS ERROR_DS_CROSS_NC_DN_RENAME;
MACRO_ERROR_DS ERROR_DS_CROSS_REF_BUSY;
MACRO_ERROR_DS ERROR_DS_CROSS_REF_EXISTS;
MACRO_ERROR_DS ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE;
MACRO_ERROR_DS ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2;
MACRO_ERROR_DS ERROR_DS_DATABASE_ERROR;
MACRO_ERROR_DS ERROR_DS_DECODING_ERROR;
MACRO_ERROR_DS ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED;
MACRO_ERROR_DS ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST;
MACRO_ERROR_DS ERROR_DS_DIFFERENT_REPL_EPOCHS;
MACRO_ERROR_DS ERROR_DS_DOMAIN_RENAME_IN_PROGRESS;
MACRO_ERROR_DS ERROR_DS_DOMAIN_VERSION_TOO_HIGH;
MACRO_ERROR_DS ERROR_DS_DOMAIN_VERSION_TOO_LOW;
MACRO_ERROR_DS ERROR_DS_DRA_ABANDON_SYNC;
MACRO_ERROR_DS ERROR_DS_DRA_ACCESS_DENIED;
MACRO_ERROR_DS ERROR_DS_DRA_BAD_DN;
MACRO_ERROR_DS ERROR_DS_DRA_BAD_INSTANCE_TYPE;
MACRO_ERROR_DS ERROR_DS_DRA_BAD_NC;
MACRO_ERROR_DS ERROR_DS_DRA_BUSY;
MACRO_ERROR_DS ERROR_DS_DRA_CONNECTION_FAILED;
MACRO_ERROR_DS ERROR_DS_DRA_DB_ERROR;
MACRO_ERROR_DS ERROR_DS_DRA_DN_EXISTS;
MACRO_ERROR_DS ERROR_DS_DRA_EARLIER_SCHEMA_CONLICT;
MACRO_ERROR_DS ERROR_DS_DRA_EXTN_CONNECTION_FAILED;
MACRO_ERROR_DS ERROR_DS_DRA_GENERIC;
MACRO_ERROR_DS ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET;
MACRO_ERROR_DS ERROR_DS_DRA_INCONSISTENT_DIT;
MACRO_ERROR_DS ERROR_DS_DRA_INTERNAL_ERROR;
MACRO_ERROR_DS ERROR_DS_DRA_INVALID_PARAMETER;
MACRO_ERROR_DS ERROR_DS_DRA_MAIL_PROBLEM;
MACRO_ERROR_DS ERROR_DS_DRA_MISSING_PARENT;
MACRO_ERROR_DS ERROR_DS_DRA_NAME_COLLISION;
MACRO_ERROR_DS ERROR_DS_DRA_NOT_SUPPORTED;
MACRO_ERROR_DS ERROR_DS_DRA_NO_REPLICA;
MACRO_ERROR_DS ERROR_DS_DRA_OBJ_IS_REP_SOURCE;
MACRO_ERROR_DS ERROR_DS_DRA_OBJ_NC_MISMATCH;
MACRO_ERROR_DS ERROR_DS_DRA_OUT_OF_MEM;
MACRO_ERROR_DS ERROR_DS_DRA_PREEMPTED;
MACRO_ERROR_DS ERROR_DS_DRA_REF_ALREADY_EXISTS;
MACRO_ERROR_DS ERROR_DS_DRA_REF_NOT_FOUND;
MACRO_ERROR_DS ERROR_DS_DRA_REPL_PENDING;
MACRO_ERROR_DS ERROR_DS_DRA_RPC_CANCELLED;
MACRO_ERROR_DS ERROR_DS_DRA_SCHEMA_CONFLICT;
MACRO_ERROR_DS ERROR_DS_DRA_SCHEMA_INFO_SHIP;
MACRO_ERROR_DS ERROR_DS_DRA_SCHEMA_MISMATCH;
MACRO_ERROR_DS ERROR_DS_DRA_SHUTDOWN;
MACRO_ERROR_DS ERROR_DS_DRA_SINK_DISABLED;
MACRO_ERROR_DS ERROR_DS_DRA_SOURCE_DISABLED;
MACRO_ERROR_DS ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA;
MACRO_ERROR_DS ERROR_DS_DRA_SOURCE_REINSTALLED;
MACRO_ERROR_DS ERROR_DS_DRS_EXTENSIONS_CHANGED;
MACRO_ERROR_DS ERROR_DS_DSA_MUST_BE_INT_MASTER;
MACRO_ERROR_DS ERROR_DS_DST_DOMAIN_NOT_NATIVE;
MACRO_ERROR_DS ERROR_DS_DST_NC_MISMATCH;
MACRO_ERROR_DS ERROR_DS_DS_REQUIRED;
MACRO_ERROR_DS ERROR_DS_DUPLICATE_ID_FOUND;
MACRO_ERROR_DS ERROR_DS_DUP_LDAP_DISPLAY_NAME;
MACRO_ERROR_DS ERROR_DS_DUP_LINK_ID;
MACRO_ERROR_DS ERROR_DS_DUP_MAPI_ID;
MACRO_ERROR_DS ERROR_DS_DUP_MSDS_INTID;
MACRO_ERROR_DS ERROR_DS_DUP_OID;
MACRO_ERROR_DS ERROR_DS_DUP_RDN;
MACRO_ERROR_DS ERROR_DS_DUP_SCHEMA_ID_GUID;
MACRO_ERROR_DS ERROR_DS_ENCODING_ERROR;
MACRO_ERROR_DS ERROR_DS_EPOCH_MISMATCH;
MACRO_ERROR_DS ERROR_DS_EXISTING_AD_CHILD_NC;
MACRO_ERROR_DS ERROR_DS_EXISTS_IN_AUX_CLS;
MACRO_ERROR_DS ERROR_DS_EXISTS_IN_MAY_HAVE;
MACRO_ERROR_DS ERROR_DS_EXISTS_IN_MUST_HAVE;
MACRO_ERROR_DS ERROR_DS_EXISTS_IN_POSS_SUP;
MACRO_ERROR_DS ERROR_DS_EXISTS_IN_RDNATTID;
MACRO_ERROR_DS ERROR_DS_EXISTS_IN_SUB_CLS;
MACRO_ERROR_DS ERROR_DS_FILTER_UNKNOWN;
MACRO_ERROR_DS ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS;
MACRO_ERROR_DS ERROR_DS_FOREST_VERSION_TOO_HIGH;
MACRO_ERROR_DS ERROR_DS_FOREST_VERSION_TOO_LOW;
MACRO_ERROR_DS ERROR_DS_GCVERIFY_ERROR;
MACRO_ERROR_DS ERROR_DS_GC_NOT_AVAILABLE;
MACRO_ERROR_DS ERROR_DS_GC_REQUIRED;
MACRO_ERROR_DS ERROR_DS_GENERIC_ERROR;
MACRO_ERROR_DS ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER;
MACRO_ERROR_DS ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER;
MACRO_ERROR_DS ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER;
MACRO_ERROR_DS ERROR_DS_GOVERNSID_MISSING;
MACRO_ERROR_DS ERROR_DS_GROUP_CONVERSION_ERROR;
MACRO_ERROR_DS ERROR_DS_HAVE_PRIMARY_MEMBERS;
MACRO_ERROR_DS ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED;
MACRO_ERROR_DS ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD;
MACRO_ERROR_DS ERROR_DS_ILLEGAL_MOD_OPERATION;
MACRO_ERROR_DS ERROR_DS_ILLEGAL_SUPERIOR;
MACRO_ERROR_DS ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION;
MACRO_ERROR_DS ERROR_DS_INAPPROPRIATE_AUTH;
MACRO_ERROR_DS ERROR_DS_INAPPROPRIATE_MATCHING;
MACRO_ERROR_DS ERROR_DS_INCOMPATIBLE_CONTROLS_USED;
MACRO_ERROR_DS ERROR_DS_INCOMPATIBLE_VERSION;
MACRO_ERROR_DS ERROR_DS_INCORRECT_ROLE_OWNER;
MACRO_ERROR_DS ERROR_DS_INIT_FAILURE;
MACRO_ERROR_DS ERROR_DS_INIT_FAILURE_CONSOLE;
MACRO_ERROR_DS ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE;
MACRO_ERROR_DS ERROR_DS_INSTALL_NO_SRC_SCH_VERSION;
MACRO_ERROR_DS ERROR_DS_INSTALL_SCHEMA_MISMATCH;
MACRO_ERROR_DS ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT;
MACRO_ERROR_DS ERROR_DS_INSUFF_ACCESS_RIGHTS;
MACRO_ERROR_DS ERROR_DS_INTERNAL_FAILURE;
MACRO_ERROR_DS ERROR_DS_INVALID_ATTRIBUTE_SYNTAX;
MACRO_ERROR_DS ERROR_DS_INVALID_DMD;
MACRO_ERROR_DS ERROR_DS_INVALID_DN_SYNTAX;
MACRO_ERROR_DS ERROR_DS_INVALID_GROUP_TYPE;
MACRO_ERROR_DS ERROR_DS_INVALID_LDAP_DISPLAY_NAME;
MACRO_ERROR_DS ERROR_DS_INVALID_NAME_FOR_SPN;
MACRO_ERROR_DS ERROR_DS_INVALID_ROLE_OWNER;
MACRO_ERROR_DS ERROR_DS_INVALID_SCRIPT;
MACRO_ERROR_DS ERROR_DS_INVALID_SEARCH_FLAG;
MACRO_ERROR_DS ERROR_DS_IS_LEAF;
MACRO_ERROR_DS ERROR_DS_KEY_NOT_UNIQUE;
MACRO_ERROR_DS ERROR_DS_LINK_ID_NOT_AVAILABLE;
MACRO_ERROR_DS ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER;
MACRO_ERROR_DS ERROR_DS_LOCAL_ERROR;
MACRO_ERROR_DS ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY;
MACRO_ERROR_DS ERROR_DS_LOOKUP_FAILURE;
MACRO_ERROR_DS ERROR_DS_LOOP_DETECT;
MACRO_ERROR_DS ERROR_DS_LOW_DSA_VERSION;
MACRO_ERROR_DS ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4;
MACRO_ERROR_DS ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_MASTERDSA_REQUIRED;
MACRO_ERROR_DS ERROR_DS_MAX_OBJ_SIZE_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY;
MACRO_ERROR_DS ERROR_DS_MISSING_EXPECTED_ATT;
MACRO_ERROR_DS ERROR_DS_MISSING_FSMO_SETTINGS;
MACRO_ERROR_DS ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER;
MACRO_ERROR_DS ERROR_DS_MISSING_REQUIRED_ATT;
MACRO_ERROR_DS ERROR_DS_MISSING_SUPREF;
MACRO_ERROR_DS ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG;
MACRO_ERROR_DS ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE;
MACRO_ERROR_DS ERROR_DS_MODIFYDN_WRONG_GRANDPARENT;
MACRO_ERROR_DS ERROR_DS_MUST_BE_RUN_ON_DST_DC;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_DOMAIN_ONLY;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_NOT_FOUND;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_NOT_UNIQUE;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_NO_MAPPING;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_RESOLVING;
MACRO_ERROR_DS ERROR_DS_NAME_ERROR_TRUST_REFERRAL;
MACRO_ERROR_DS ERROR_DS_NAME_NOT_UNIQUE;
MACRO_ERROR_DS ERROR_DS_NAME_REFERENCE_INVALID;
MACRO_ERROR_DS ERROR_DS_NAME_TOO_LONG;
MACRO_ERROR_DS ERROR_DS_NAME_TOO_MANY_PARTS;
MACRO_ERROR_DS ERROR_DS_NAME_TYPE_UNKNOWN;
MACRO_ERROR_DS ERROR_DS_NAME_UNPARSEABLE;
MACRO_ERROR_DS ERROR_DS_NAME_VALUE_TOO_LONG;
MACRO_ERROR_DS ERROR_DS_NAMING_MASTER_GC;
MACRO_ERROR_DS ERROR_DS_NAMING_VIOLATION;
MACRO_ERROR_DS ERROR_DS_NCNAME_MISSING_CR_REF;
MACRO_ERROR_DS ERROR_DS_NCNAME_MUST_BE_NC;
MACRO_ERROR_DS ERROR_DS_NC_MUST_HAVE_NC_PARENT;
MACRO_ERROR_DS ERROR_DS_NC_STILL_HAS_DSAS;
MACRO_ERROR_DS ERROR_DS_NONEXISTENT_MAY_HAVE;
MACRO_ERROR_DS ERROR_DS_NONEXISTENT_MUST_HAVE;
MACRO_ERROR_DS ERROR_DS_NONEXISTENT_POSS_SUP;
MACRO_ERROR_DS ERROR_DS_NONSAFE_SCHEMA_CHANGE;
MACRO_ERROR_DS ERROR_DS_NON_BASE_SEARCH;
MACRO_ERROR_DS ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX;
MACRO_ERROR_DS ERROR_DS_NOT_AN_OBJECT;
MACRO_ERROR_DS ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC;
MACRO_ERROR_DS ERROR_DS_NOT_CLOSEST;
MACRO_ERROR_DS ERROR_DS_NOT_INSTALLED;
MACRO_ERROR_DS ERROR_DS_NOT_ON_BACKLINK;
MACRO_ERROR_DS ERROR_DS_NOT_SUPPORTED;
MACRO_ERROR_DS ERROR_DS_NOT_SUPPORTED_SORT_ORDER;
MACRO_ERROR_DS ERROR_DS_NO_ATTRIBUTE_OR_VALUE;
MACRO_ERROR_DS ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN;
MACRO_ERROR_DS ERROR_DS_NO_CHAINED_EVAL;
MACRO_ERROR_DS ERROR_DS_NO_CHAINING;
MACRO_ERROR_DS ERROR_DS_NO_CHECKPOINT_WITH_PDC;
MACRO_ERROR_DS ERROR_DS_NO_CROSSREF_FOR_NC;
MACRO_ERROR_DS ERROR_DS_NO_DELETED_NAME;
MACRO_ERROR_DS ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS;
MACRO_ERROR_DS ERROR_DS_NO_MORE_RIDS;
MACRO_ERROR_DS ERROR_DS_NO_MSDS_INTID;
MACRO_ERROR_DS ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN;
MACRO_ERROR_DS ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN;
MACRO_ERROR_DS ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC;
MACRO_ERROR_DS ERROR_DS_NO_PARENT_OBJECT;
MACRO_ERROR_DS ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION;
MACRO_ERROR_DS ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA;
MACRO_ERROR_DS ERROR_DS_NO_REF_DOMAIN;
MACRO_ERROR_DS ERROR_DS_NO_REQUESTED_ATTS_FOUND;
MACRO_ERROR_DS ERROR_DS_NO_RESULTS_RETURNED;
MACRO_ERROR_DS ERROR_DS_NO_RIDS_ALLOCATED;
MACRO_ERROR_DS ERROR_DS_NO_SUCH_OBJECT;
MACRO_ERROR_DS ERROR_DS_NO_TREE_DELETE_ABOVE_NC;
MACRO_ERROR_DS ERROR_DS_NTDSCRIPT_PROCESS_ERROR;
MACRO_ERROR_DS ERROR_DS_NTDSCRIPT_SYNTAX_ERROR;
MACRO_ERROR_DS ERROR_DS_OBJECT_BEING_REMOVED;
MACRO_ERROR_DS ERROR_DS_OBJECT_CLASS_REQUIRED;
MACRO_ERROR_DS ERROR_DS_OBJECT_RESULTS_TOO_LARGE;
MACRO_ERROR_DS ERROR_DS_OBJ_CLASS_NOT_DEFINED;
MACRO_ERROR_DS ERROR_DS_OBJ_CLASS_NOT_SUBCLASS;
MACRO_ERROR_DS ERROR_DS_OBJ_CLASS_VIOLATION;
MACRO_ERROR_DS ERROR_DS_OBJ_GUID_EXISTS;
MACRO_ERROR_DS ERROR_DS_OBJ_NOT_FOUND;
MACRO_ERROR_DS ERROR_DS_OBJ_STRING_NAME_EXISTS;
MACRO_ERROR_DS ERROR_DS_OBJ_TOO_LARGE;
MACRO_ERROR_DS ERROR_DS_OFFSET_RANGE_ERROR;
MACRO_ERROR_DS ERROR_DS_OPERATIONS_ERROR;
MACRO_ERROR_DS ERROR_DS_OUT_OF_SCOPE;
MACRO_ERROR_DS ERROR_DS_OUT_OF_VERSION_STORE;
MACRO_ERROR_DS ERROR_DS_PARAM_ERROR;
MACRO_ERROR_DS ERROR_DS_PARENT_IS_AN_ALIAS;
MACRO_ERROR_DS ERROR_DS_PDC_OPERATION_IN_PROGRESS;
MACRO_ERROR_DS ERROR_DS_PROTOCOL_ERROR;
MACRO_ERROR_DS ERROR_DS_RANGE_CONSTRAINT;
MACRO_ERROR_DS ERROR_DS_RDN_DOESNT_MATCH_SCHEMA;
MACRO_ERROR_DS ERROR_DS_RECALCSCHEMA_FAILED;
MACRO_ERROR_DS ERROR_DS_REFERRAL;
MACRO_ERROR_DS ERROR_DS_REFERRAL_LIMIT_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_REFUSING_FSMO_ROLES;
MACRO_ERROR_DS ERROR_DS_REMOTE_CROSSREF_OP_FAILED;
MACRO_ERROR_DS ERROR_DS_REPLICATOR_ONLY;
MACRO_ERROR_DS ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR;
MACRO_ERROR_DS ERROR_DS_RESERVED_LINK_ID;
MACRO_ERROR_DS ERROR_DS_RIDMGR_INIT_ERROR;
MACRO_ERROR_DS ERROR_DS_ROLE_NOT_VERIFIED;
MACRO_ERROR_DS ERROR_DS_ROOT_CANT_BE_SUBREF;
MACRO_ERROR_DS ERROR_DS_ROOT_MUST_BE_NC;
MACRO_ERROR_DS ERROR_DS_ROOT_REQUIRES_CLASS_TOP;
MACRO_ERROR_DS ERROR_DS_SAM_INIT_FAILURE;
MACRO_ERROR_DS ERROR_DS_SAM_INIT_FAILURE_CONSOLE;
MACRO_ERROR_DS ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY;
MACRO_ERROR_DS ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD;
MACRO_ERROR_DS ERROR_DS_SCHEMA_ALLOC_FAILED;
MACRO_ERROR_DS ERROR_DS_SCHEMA_NOT_LOADED;
MACRO_ERROR_DS ERROR_DS_SCHEMA_UPDATE_DISALLOWED;
MACRO_ERROR_DS ERROR_DS_SECURITY_CHECKING_ERROR;
MACRO_ERROR_DS ERROR_DS_SECURITY_ILLEGAL_MODIFY;
MACRO_ERROR_DS ERROR_DS_SEC_DESC_INVALID;
MACRO_ERROR_DS ERROR_DS_SEC_DESC_TOO_SHORT;
MACRO_ERROR_DS ERROR_DS_SEMANTIC_ATT_TEST;
MACRO_ERROR_DS ERROR_DS_SENSITIVE_GROUP_VIOLATION;
MACRO_ERROR_DS ERROR_DS_SERVER_DOWN;
MACRO_ERROR_DS ERROR_DS_SHUTTING_DOWN;
MACRO_ERROR_DS ERROR_DS_SINGLE_USER_MODE_FAILED;
MACRO_ERROR_DS ERROR_DS_SINGLE_VALUE_CONSTRAINT;
MACRO_ERROR_DS ERROR_DS_SIZELIMIT_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_SORT_CONTROL_MISSING;
MACRO_ERROR_DS ERROR_DS_SOURCE_AUDITING_NOT_ENABLED;
MACRO_ERROR_DS ERROR_DS_SOURCE_DOMAIN_IN_FOREST;
MACRO_ERROR_DS ERROR_DS_SRC_AND_DST_NC_IDENTICAL;
MACRO_ERROR_DS ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH;
MACRO_ERROR_DS ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER;
MACRO_ERROR_DS ERROR_DS_SRC_GUID_MISMATCH;
MACRO_ERROR_DS ERROR_DS_SRC_NAME_MISMATCH;
MACRO_ERROR_DS ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER;
MACRO_ERROR_DS ERROR_DS_SRC_SID_EXISTS_IN_FOREST;
MACRO_ERROR_DS ERROR_DS_STRING_SD_CONVERSION_FAILED;
MACRO_ERROR_DS ERROR_DS_STRONG_AUTH_REQUIRED;
MACRO_ERROR_DS ERROR_DS_SUBREF_MUST_HAVE_PARENT;
MACRO_ERROR_DS ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD;
MACRO_ERROR_DS ERROR_DS_SUB_CLS_TEST_FAIL;
MACRO_ERROR_DS ERROR_DS_SYNTAX_MISMATCH;
MACRO_ERROR_DS ERROR_DS_THREAD_LIMIT_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_TIMELIMIT_EXCEEDED;
MACRO_ERROR_DS ERROR_DS_TREE_DELETE_NOT_FINISHED;
MACRO_ERROR_DS ERROR_DS_UNABLE_TO_SURRENDER_ROLES;
MACRO_ERROR_DS ERROR_DS_UNAVAILABLE;
MACRO_ERROR_DS ERROR_DS_UNAVAILABLE_CRIT_EXTENSION;
MACRO_ERROR_DS ERROR_DS_UNICODEPWD_NOT_IN_QUOTES;
MACRO_ERROR_DS ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER;
MACRO_ERROR_DS ERROR_DS_UNKNOWN_ERROR;
MACRO_ERROR_DS ERROR_DS_UNKNOWN_OPERATION;
MACRO_ERROR_DS ERROR_DS_UNWILLING_TO_PERFORM;
MACRO_ERROR_DS ERROR_DS_USER_BUFFER_TO_SMALL;
MACRO_ERROR_NO ERROR_DS_VERSION_CHECK_FAILURE;
MACRO_ERROR_DS ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL;
MACRO_ERROR_DS ERROR_DS_WRONG_LINKED_ATT_SYNTAX;
MACRO_ERROR_DS ERROR_DS_WRONG_OM_OBJ_CLASS;
MACRO_ERROR_NO ERROR_DUPLICATE_PRIVILEGES;
MACRO_ERROR_NO ERROR_DUPLICATE_SERVICE_NAME;
MACRO_ERROR_KM ERROR_DUPLICATE_TAG;
MACRO_ERROR_NO ERROR_DUP_DOMAINNAME;
MACRO_ERROR ERROR_DUP_NAME;
MACRO_ERROR ERROR_DYNLINK_FROM_INVALID_RING;
MACRO_ERROR_NO ERROR_EAS_DIDNT_FIT;
MACRO_ERROR_NO ERROR_EAS_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_EA_ACCESS_DENIED;
MACRO_ERROR_NO ERROR_EA_FILE_CORRUPT;
MACRO_ERROR ERROR_EA_LIST_INCONSISTENT;
MACRO_ERROR_NO ERROR_EA_TABLE_FULL;
MACRO_ERROR_KM ERROR_EFS_ALG_BLOB_TOO_BIG;
MACRO_ERROR_KM ERROR_EFS_DISABLED;
MACRO_ERROR_KM ERROR_EFS_SERVER_NOT_TRUSTED;
MACRO_ERROR_KM ERROR_EFS_VERSION_NOT_SUPPORT;
MACRO_ERROR_NO ERROR_ELEVATION_REQUIRED;
MACRO_ERROR_KM ERROR_EMPTY;
MACRO_ERROR_KM ERROR_ENCRYPTION_FAILED;
MACRO_ERROR_NO ERROR_END_OF_MEDIA;
MACRO_ERROR ERROR_ENVVAR_NOT_FOUND;
MACRO_ERROR_NO ERROR_EOM_OVERFLOW;
MACRO_ERROR_NO ERROR_ERRORS_ENCOUNTERED;
MACRO_ERROR_NO ERROR_EVALUATION_EXPIRATION;
MACRO_ERROR_NO ERROR_EVENTLOG_CANT_START;
MACRO_ERROR_NO ERROR_EVENTLOG_FILE_CHANGED;
MACRO_ERROR_NO ERROR_EVENTLOG_FILE_CORRUPT;
MACRO_ERROR_NO ERROR_EVENT_DONE;
MACRO_ERROR_NO ERROR_EVENT_PENDING;
MACRO_ERROR_NO ERROR_EXCEPTION_IN_SERVICE;
MACRO_ERROR ERROR_EXCL_SEM_ALREADY_OWNED;
MACRO_ERROR ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY;
MACRO_ERROR ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY;
MACRO_ERROR ERROR_EXE_MACHINE_TYPE_MISMATCH;
MACRO_ERROR ERROR_EXE_MARKED_INVALID;
MACRO_ERROR_NO ERROR_EXTENDED_ERROR;
MACRO_ERROR_NO ERROR_EXTRANEOUS_INFORMATION;
MACRO_ERROR_NO ERROR_FAILED_DRIVER_ENTRY;
MACRO_ERROR_NO ERROR_FAILED_SERVICE_CONTROLLER_CONNECT;
MACRO_ERROR ERROR_FAIL_I24;
MACRO_ERROR_NO ERROR_FAIL_NOACTION_REBOOT;
MACRO_ERROR_NO ERROR_FAIL_RESTART;
MACRO_ERROR_NO ERROR_FAIL_SHUTDOWN;
MACRO_ERROR_NO ERROR_FATAL_APP_EXIT;
MACRO_ERROR ERROR_FCB_UNAVAILABLE;
MACRO_ERROR_NO ERROR_FILEMARK_DETECTED;
MACRO_ERROR ERROR_FILENAME_EXCED_RANGE;
MACRO_ERROR ERROR_FILE_CHECKED_OUT;
MACRO_ERROR_NO ERROR_FILE_CORRUPT;
MACRO_ERROR_KM ERROR_FILE_ENCRYPTED;
MACRO_ERROR ERROR_FILE_EXISTS;
MACRO_ERROR_NO ERROR_FILE_INVALID;
MACRO_ERROR_NO ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED;
MACRO_ERROR_KM ERROR_FILE_NOT_ENCRYPTED;
MACRO_ERROR ERROR_FILE_NOT_FOUND;
MACRO_ERROR_KM ERROR_FILE_OFFLINE;
MACRO_ERROR_KM ERROR_FILE_READ_ONLY;
MACRO_ERROR_NO ERROR_FILE_SYSTEM_LIMITATION;
MACRO_ERROR ERROR_FILE_TOO_LARGE;
MACRO_ERROR_NO ERROR_FIRMWARE_UPDATED;
MACRO_ERROR_NO ERROR_FLOAT_MULTIPLE_FAULTS;
MACRO_ERROR_NO ERROR_FLOAT_MULTIPLE_TRAPS;
MACRO_ERROR_NO ERROR_FLOPPY_BAD_REGISTERS;
MACRO_ERROR_NO ERROR_FLOPPY_ID_MARK_NOT_FOUND;
MACRO_ERROR_NO ERROR_FLOPPY_UNKNOWN_ERROR;
MACRO_ERROR_NO ERROR_FLOPPY_VOLUME;
MACRO_ERROR_NO ERROR_FLOPPY_WRONG_CYLINDER;
MACRO_ERROR ERROR_FORMS_AUTH_REQUIRED;
MACRO_ERROR_NO ERROR_FOUND_OUT_OF_SCOPE;
MACRO_ERROR_NO ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY;
MACRO_ERROR_NO ERROR_FS_DRIVER_REQUIRED;
MACRO_ERROR_NO ERROR_FT_DI_SCAN_REQUIRED;
MACRO_ERROR_NO ERROR_FT_READ_RECOVERY_FROM_BACKUP;
MACRO_ERROR_NO ERROR_FT_WRITE_FAILURE;
MACRO_ERROR_NO ERROR_FT_WRITE_RECOVERY;
MACRO_ERROR_NO ERROR_FULLSCREEN_MODE;
MACRO_ERROR_KM ERROR_FULL_BACKUP;
MACRO_ERROR_NO ERROR_FUNCTION_FAILED;
MACRO_ERROR_NO ERROR_FUNCTION_NOT_CALLED;
MACRO_ERROR_IPSEC_IKE ERROR_GENERIC_COMMAND_FAILED;
MACRO_ERROR_NO ERROR_GENERIC_NOT_MAPPED;
MACRO_ERROR ERROR_GEN_FAILURE;
MACRO_ERROR_NO ERROR_GLOBAL_ONLY_HOOK;
MACRO_ERROR_IPSEC_IKE ERROR_GPIO_CLIENT_INFORMATION_INVALID;
MACRO_ERROR_IPSEC_IKE ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE;
MACRO_ERROR_IPSEC_IKE ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED;
MACRO_ERROR_IPSEC_IKE ERROR_GPIO_INVALID_REGISTRATION_PACKET;
MACRO_ERROR_IPSEC_IKE ERROR_GPIO_OPERATION_DENIED;
MACRO_ERROR_IPSEC_IKE ERROR_GPIO_VERSION_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_GRACEFUL_DISCONNECT;
MACRO_ERROR_NO ERROR_GROUP_EXISTS;
MACRO_ERROR_KM ERROR_GROUP_NOT_AVAILABLE;
MACRO_ERROR_KM ERROR_GROUP_NOT_FOUND;
MACRO_ERROR_KM ERROR_GROUP_NOT_ONLINE;
MACRO_ERROR_NO ERROR_GUID_SUBSTITUTION_MADE;
MACRO_ERROR_NO ERROR_HANDLES_CLOSED;
MACRO_ERROR ERROR_HANDLE_DISK_FULL;
MACRO_ERROR ERROR_HANDLE_EOF;
MACRO_ERROR_IPSEC_IKE ERROR_HASH_NOT_PRESENT;
MACRO_ERROR_IPSEC_IKE ERROR_HASH_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_HIBERNATED;
MACRO_ERROR_NO ERROR_HIBERNATION_FAILURE;
MACRO_ERROR_NO ERROR_HOOK_NEEDS_HMOD;
MACRO_ERROR_NO ERROR_HOOK_NOT_INSTALLED;
MACRO_ERROR_NO ERROR_HOOK_TYPE_NOT_ALLOWED;
MACRO_ERROR_NO ERROR_HOST_DOWN;
MACRO_ERROR_KM ERROR_HOST_NODE_NOT_AVAILABLE;
MACRO_ERROR_KM ERROR_HOST_NODE_NOT_GROUP_OWNER;
MACRO_ERROR_KM ERROR_HOST_NODE_NOT_RESOURCE_OWNER;
MACRO_ERROR_NO ERROR_HOST_UNREACHABLE;
MACRO_ERROR_NO ERROR_HOTKEY_ALREADY_REGISTERED;
MACRO_ERROR_NO ERROR_HOTKEY_NOT_REGISTERED;
MACRO_ERROR_NO ERROR_HWNDS_HAVE_DIFF_PARENT;
MACRO_ERROR_KM ERROR_ICM_NOT_ENABLED;
MACRO_ERROR_NO ERROR_ILLEGAL_CHARACTER;
MACRO_ERROR_NO ERROR_ILLEGAL_DLL_RELOCATION;
MACRO_ERROR_NO ERROR_ILLEGAL_ELEMENT_ADDRESS;
MACRO_ERROR_NO ERROR_ILLEGAL_FLOAT_CONTEXT;
MACRO_ERROR_NO ERROR_ILL_FORMED_PASSWORD;
MACRO_ERROR_NO ERROR_IMAGE_MACHINE_TYPE_MISMATCH;
MACRO_ERROR_NO ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE;
MACRO_ERROR_NO ERROR_IMAGE_NOT_AT_BASE;
MACRO_ERROR_NO ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT;
MACRO_ERROR_NO ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING;
MACRO_ERROR_NO ERROR_INCORRECT_ADDRESS;
MACRO_ERROR_NO ERROR_INCORRECT_SIZE;
MACRO_ERROR_KM ERROR_INC_BACKUP;
MACRO_ERROR_NO ERROR_INDEX_ABSENT;
MACRO_ERROR_KM ERROR_INDIGENOUS_TYPE;
MACRO_ERROR ERROR_INFLOOP_IN_RELOC_CHAIN;
MACRO_ERROR_NO ERROR_INSTALL_ALREADY_RUNNING;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_CANCEL;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_DEREGISTRATION_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_FAILED;
MACRO_ERROR_NO ERROR_INSTALL_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_INVALID_PACKAGE;
MACRO_ERROR_NO ERROR_INSTALL_LANGUAGE_UNSUPPORTED;
MACRO_ERROR_NO ERROR_INSTALL_LOG_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_NETWORK_FAILURE;
MACRO_ERROR_NO ERROR_INSTALL_NOTUSED;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_OPEN_PACKAGE_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_OUT_OF_DISK_SPACE;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_PACKAGE_DOWNGRADE;
MACRO_ERROR_NO ERROR_INSTALL_PACKAGE_INVALID;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_PACKAGE_NOT_FOUND;
MACRO_ERROR_NO ERROR_INSTALL_PACKAGE_OPEN_FAILED;
MACRO_ERROR_NO ERROR_INSTALL_PACKAGE_REJECTED;
MACRO_ERROR_NO ERROR_INSTALL_PACKAGE_VERSION;
MACRO_ERROR_NO ERROR_INSTALL_PLATFORM_UNSUPPORTED;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_POLICY_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_PREREQUISITE_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_REGISTRATION_FAILURE;
MACRO_ERROR_NO ERROR_INSTALL_REMOTE_DISALLOWED;
MACRO_ERROR_NO ERROR_INSTALL_REMOTE_PROHIBITED;
MACRO_ERROR_IPSEC_IKE ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED;
MACRO_ERROR_NO ERROR_INSTALL_SERVICE_FAILURE;
MACRO_ERROR_NO ERROR_INSTALL_SERVICE_SAFEBOOT;
MACRO_ERROR_NO ERROR_INSTALL_SOURCE_ABSENT;
MACRO_ERROR_NO ERROR_INSTALL_SUSPEND;
MACRO_ERROR_NO ERROR_INSTALL_TEMP_UNWRITABLE;
MACRO_ERROR_NO ERROR_INSTALL_TRANSFORM_FAILURE;
MACRO_ERROR_NO ERROR_INSTALL_TRANSFORM_REJECTED;
MACRO_ERROR_NO ERROR_INSTALL_UI_FAILURE;
MACRO_ERROR_NO ERROR_INSTALL_USEREXIT;
MACRO_ERROR ERROR_INSUFFICIENT_BUFFER;
MACRO_ERROR_NO ERROR_INSUFFICIENT_LOGON_INFO;
MACRO_ERROR_NO ERROR_INSUFFICIENT_POWER;
MACRO_ERROR_NO ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE;
MACRO_ERROR_NO ERROR_INTERMIXED_KERNEL_EA_OPERATION;
MACRO_ERROR_NO ERROR_INTERNAL_DB_CORRUPTION;
MACRO_ERROR_NO ERROR_INTERNAL_DB_ERROR;
MACRO_ERROR_NO ERROR_INTERNAL_ERROR;
MACRO_ERROR_NO ERROR_INTERRUPT_STILL_CONNECTED;
MACRO_ERROR_NO ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED;
MACRO_ERROR_NO ERROR_INVALID_ACCEL_HANDLE;
MACRO_ERROR ERROR_INVALID_ACCESS;
MACRO_ERROR_NO ERROR_INVALID_ACCOUNT_NAME;
MACRO_ERROR_NO ERROR_INVALID_ACE_CONDITION;
MACRO_ERROR_NO ERROR_INVALID_ACL;
MACRO_ERROR_NO ERROR_INVALID_ADDRESS;
MACRO_ERROR ERROR_INVALID_AT_INTERRUPT_TIME;
MACRO_ERROR ERROR_INVALID_BLOCK;
MACRO_ERROR_NO ERROR_INVALID_BLOCK_LENGTH;
MACRO_ERROR_NO ERROR_INVALID_CAP;
MACRO_ERROR ERROR_INVALID_CATEGORY;
MACRO_ERROR_KM ERROR_INVALID_CLEANER;
MACRO_ERROR_KM ERROR_INVALID_CMM;
MACRO_ERROR_KM ERROR_INVALID_COLORINDEX;
MACRO_ERROR_KM ERROR_INVALID_COLORSPACE;
MACRO_ERROR_NO ERROR_INVALID_COMBOBOX_MESSAGE;
MACRO_ERROR_NO ERROR_INVALID_COMMAND_LINE;
MACRO_ERROR_NO ERROR_INVALID_COMPUTERNAME;
MACRO_ERROR_NO ERROR_INVALID_CURSOR_HANDLE;
MACRO_ERROR ERROR_INVALID_DATA;
MACRO_ERROR_NETLOGON ERROR_INVALID_DATATYPE;
MACRO_ERROR_NO ERROR_INVALID_DEVICE_OBJECT_PARAMETER;
MACRO_ERROR_NO ERROR_INVALID_DLL;
MACRO_ERROR_NO ERROR_INVALID_DOMAINNAME;
MACRO_ERROR_NO ERROR_INVALID_DOMAIN_ROLE;
MACRO_ERROR_NO ERROR_INVALID_DOMAIN_STATE;
MACRO_ERROR ERROR_INVALID_DRIVE;
MACRO_ERROR_KM ERROR_INVALID_DRIVE_OBJECT;
MACRO_ERROR_NO ERROR_INVALID_DWP_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_EA_HANDLE;
MACRO_ERROR ERROR_INVALID_EA_NAME;
MACRO_ERROR_NO ERROR_INVALID_EDIT_HEIGHT;
MACRO_ERROR_NETLOGON ERROR_INVALID_ENVIRONMENT;
MACRO_ERROR_NO ERROR_INVALID_EVENTNAME;
MACRO_ERROR ERROR_INVALID_EVENT_COUNT;
MACRO_ERROR_NO ERROR_INVALID_EXCEPTION_HANDLER;
MACRO_ERROR ERROR_INVALID_EXE_SIGNATURE;
MACRO_ERROR ERROR_INVALID_EXITROUTINE_RING;
MACRO_ERROR_NO ERROR_INVALID_FIELD;
MACRO_ERROR_NO ERROR_INVALID_FIELD_IN_PARAMETER_LIST;
MACRO_ERROR_NO ERROR_INVALID_FILTER_PROC;
MACRO_ERROR_NO ERROR_INVALID_FLAGS;
MACRO_ERROR ERROR_INVALID_FLAG_NUMBER;
MACRO_ERROR_INVALID_TIME ERROR_INVALID_FORM_NAME;
MACRO_ERROR_INVALID_TIME ERROR_INVALID_FORM_SIZE;
MACRO_ERROR ERROR_INVALID_FUNCTION;
MACRO_ERROR_NO ERROR_INVALID_GROUPNAME;
MACRO_ERROR_NO ERROR_INVALID_GROUP_ATTRIBUTES;
MACRO_ERROR_NO ERROR_INVALID_GW_COMMAND;
MACRO_ERROR ERROR_INVALID_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_HANDLE_STATE;
MACRO_ERROR_NO ERROR_INVALID_HOOK_FILTER;
MACRO_ERROR_NO ERROR_INVALID_HOOK_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_HW_PROFILE;
MACRO_ERROR_NO ERROR_INVALID_ICON_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_ID_AUTHORITY;
MACRO_ERROR_NO ERROR_INVALID_IMAGE_HASH;
MACRO_ERROR_NO ERROR_INVALID_IMPORT_OF_NON_DLL;
MACRO_ERROR_NO ERROR_INVALID_INDEX;
MACRO_ERROR_NO ERROR_INVALID_KERNEL_INFO_VERSION;
MACRO_ERROR_NO ERROR_INVALID_KEYBOARD_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_LB_MESSAGE;
MACRO_ERROR_NO ERROR_INVALID_LDT_DESCRIPTOR;
MACRO_ERROR_NO ERROR_INVALID_LDT_OFFSET;
MACRO_ERROR_NO ERROR_INVALID_LDT_SIZE;
MACRO_ERROR ERROR_INVALID_LEVEL;
MACRO_ERROR_KM ERROR_INVALID_LIBRARY;
MACRO_ERROR ERROR_INVALID_LIST_FORMAT;
MACRO_ERROR_NO ERROR_INVALID_LOCK_RANGE;
MACRO_ERROR_NO ERROR_INVALID_LOGON_HOURS;
MACRO_ERROR_NO ERROR_INVALID_LOGON_TYPE;
MACRO_ERROR_KM ERROR_INVALID_MEDIA;
MACRO_ERROR_KM ERROR_INVALID_MEDIA_POOL;
MACRO_ERROR_NO ERROR_INVALID_MEMBER;
MACRO_ERROR_NO ERROR_INVALID_MENU_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_MESSAGE;
MACRO_ERROR_NO ERROR_INVALID_MESSAGEDEST;
MACRO_ERROR_NO ERROR_INVALID_MESSAGENAME;
MACRO_ERROR ERROR_INVALID_MINALLOCSIZE;
MACRO_ERROR ERROR_INVALID_MODULETYPE;
MACRO_ERROR_NO ERROR_INVALID_MONITOR_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_MSGBOX_STYLE;
MACRO_ERROR ERROR_INVALID_NAME;
MACRO_ERROR_NO ERROR_INVALID_NETNAME;
MACRO_ERROR_KM ERROR_INVALID_OPERATION;
MACRO_ERROR_KM ERROR_INVALID_OPERATION_ON_QUORUM;
MACRO_ERROR_NO ERROR_INVALID_OPLOCK_PROTOCOL;
MACRO_ERROR ERROR_INVALID_ORDINAL;
MACRO_ERROR_NO ERROR_INVALID_OWNER;
MACRO_ERROR ERROR_INVALID_PARAMETER;
MACRO_ERROR ERROR_INVALID_PASSWORD;
MACRO_ERROR_NO ERROR_INVALID_PASSWORDNAME;
MACRO_ERROR_NO ERROR_INVALID_PATCH_XML;
MACRO_ERROR_NO ERROR_INVALID_PEP_INFO_VERSION;
MACRO_ERROR_KM ERROR_INVALID_PIXEL_FORMAT;
MACRO_ERROR_NO ERROR_INVALID_PLUGPLAY_DEVICE_PATH;
MACRO_ERROR_NO ERROR_INVALID_PRIMARY_GROUP;
MACRO_ERROR_NETLOGON ERROR_INVALID_PRINTER_COMMAND;
MACRO_ERROR_NETLOGON ERROR_INVALID_PRINTER_NAME;
MACRO_ERROR_INVALID_TIME ERROR_INVALID_PRINTER_STATE;
MACRO_ERROR_KM ERROR_INVALID_PRINT_MONITOR;
MACRO_ERROR_NETLOGON ERROR_INVALID_PRIORITY;
MACRO_ERROR_KM ERROR_INVALID_PROFILE;
MACRO_ERROR_KM ERROR_INVALID_REPARSE_DATA;
MACRO_ERROR_IPSEC_IKE ERROR_INVALID_RUNLEVEL_SETTING;
MACRO_ERROR_NO ERROR_INVALID_SCROLLBAR_RANGE;
MACRO_ERROR_NO ERROR_INVALID_SECURITY_DESCR;
MACRO_ERROR ERROR_INVALID_SEGDPL;
MACRO_ERROR ERROR_INVALID_SEGMENT_NUMBER;
MACRO_ERROR_NETLOGON ERROR_INVALID_SEPARATOR_FILE;
MACRO_ERROR_NO ERROR_INVALID_SERVER_STATE;
MACRO_ERROR_NO ERROR_INVALID_SERVICENAME;
MACRO_ERROR_NO ERROR_INVALID_SERVICE_ACCOUNT;
MACRO_ERROR_NO ERROR_INVALID_SERVICE_CONTROL;
MACRO_ERROR_NO ERROR_INVALID_SERVICE_LOCK;
MACRO_ERROR_NO ERROR_INVALID_SHARENAME;
MACRO_ERROR_NO ERROR_INVALID_SHOWWIN_COMMAND;
MACRO_ERROR_NO ERROR_INVALID_SID;
MACRO_ERROR ERROR_INVALID_SIGNAL_NUMBER;
MACRO_ERROR_NO ERROR_INVALID_SPI_VALUE;
MACRO_ERROR ERROR_INVALID_STACKSEG;
MACRO_ERROR_IPSEC_IKE ERROR_INVALID_STAGED_SIGNATURE;
MACRO_ERROR ERROR_INVALID_STARTING_CODESEG;
MACRO_ERROR_KM ERROR_INVALID_STATE;
MACRO_ERROR_NO ERROR_INVALID_SUB_AUTHORITY;
MACRO_ERROR_NO ERROR_INVALID_TABLE;
MACRO_ERROR ERROR_INVALID_TARGET_HANDLE;
MACRO_ERROR_NO ERROR_INVALID_TASK_INDEX;
MACRO_ERROR_NO ERROR_INVALID_TASK_NAME;
MACRO_ERROR_NO ERROR_INVALID_THREAD_ID;
MACRO_ERROR_INVALID_TIME ERROR_INVALID_TIME;
MACRO_ERROR_NO ERROR_INVALID_TOKEN;
MACRO_ERROR_KM ERROR_INVALID_TRANSFORM;
MACRO_ERROR_INVALID ERROR_INVALID_USER_BUFFER;
MACRO_ERROR_NO ERROR_INVALID_VARIANT;
MACRO_ERROR ERROR_INVALID_VERIFY_SWITCH;
MACRO_ERROR_NO ERROR_INVALID_WINDOW_HANDLE;
MACRO_ERROR_KM ERROR_INVALID_WINDOW_STYLE;
MACRO_ERROR_NO ERROR_INVALID_WORKSTATION;
MACRO_ERROR ERROR_IOPL_NOT_ENABLED;
MACRO_ERROR_NO ERROR_IO_DEVICE;
MACRO_ERROR_NO ERROR_IO_INCOMPLETE;
MACRO_ERROR_NO ERROR_IO_PENDING;
MACRO_ERROR_NO ERROR_IO_PRIVILEGE_FAILED;
MACRO_ERROR_IPSEC ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_ATTRIB_FAIL;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_AUTH_FAIL;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_BENIGN_REINIT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_CRL_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_DECRYPT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_DH_FAIL;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_DH_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_DROP_NO_RESPONSE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_ENCRYPT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_FAILQUERYSSP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_FAILSSPINIT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_GETSPIFAIL;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_AUTH_ALG;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_CERT_TYPE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_COOKIE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_FILTER;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_GROUP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_HASH;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_HASH_ALG;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_HASH_SIZE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_HEADER;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_KEY_USAGE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_PAYLOAD;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_POLICY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_SIG;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_SIGNATURE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_INVALID_SITUATION;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_KERBEROS_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_LOAD_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_LOAD_SOFT_SA;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_MM_ACQUIRE_DROP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_MM_DELAY_DROP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_MM_LIMIT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NEGOTIATION_DISABLED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NEGOTIATION_PENDING;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NEG_STATUS_END;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NOTCBPRIV;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NO_CERT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NO_MM_POLICY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NO_PEER_CERT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NO_POLICY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NO_PRIVATE_KEY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_NO_PUBLIC_KEY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_OUT_OF_MEMORY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PEER_CRL_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_POLICY_CHANGE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_POLICY_MATCH;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_CERT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_DELETE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_HASH;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_ID;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_KE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_NONCE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_PROP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_SA;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_SIG;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_TRANS;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_QM_ACQUIRE_DROP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_QM_DELAY_DROP;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_QUEUE_DROP_MM;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_RPC_DELETE;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_SA_DELETED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_SA_REAPED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_SECLOADFAIL;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_SRVACQFAIL;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_SRVQUERYCRED;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_TIMED_OUT;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_UNKNOWN_DOI;
MACRO_ERROR_IPSEC_IKE ERROR_IPSEC_IKE_UNSUPPORTED_ID;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_AUTH_EXISTS;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_AUTH_IN_USE;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_AUTH_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_AUTH_PENDING_DELETION;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_FILTER_EXISTS;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_FILTER_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_FILTER_PENDING_DELETION;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_POLICY_EXISTS;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_POLICY_IN_USE;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_POLICY_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_MM_POLICY_PENDING_DELETION;
MACRO_ERROR_IPSEC ERROR_IPSEC_QM_POLICY_EXISTS;
MACRO_ERROR_IPSEC ERROR_IPSEC_QM_POLICY_IN_USE;
MACRO_ERROR_IPSEC ERROR_IPSEC_QM_POLICY_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_QM_POLICY_PENDING_DELETION;
MACRO_ERROR_IPSEC ERROR_IPSEC_TRANSPORT_FILTER_EXISTS;
MACRO_ERROR_IPSEC ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION;
MACRO_ERROR_IPSEC ERROR_IPSEC_TUNNEL_FILTER_EXISTS;
MACRO_ERROR_IPSEC ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND;
MACRO_ERROR_IPSEC ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION;
MACRO_ERROR_NO ERROR_IP_ADDRESS_CONFLICT1;
MACRO_ERROR_NO ERROR_IP_ADDRESS_CONFLICT2;
MACRO_ERROR_NO ERROR_IRQ_BUSY;
MACRO_ERROR ERROR_IS_JOINED;
MACRO_ERROR ERROR_IS_JOIN_PATH;
MACRO_ERROR ERROR_IS_JOIN_TARGET;
MACRO_ERROR ERROR_IS_SUBSTED;
MACRO_ERROR ERROR_IS_SUBST_PATH;
MACRO_ERROR ERROR_IS_SUBST_TARGET;
MACRO_ERROR ERROR_ITERATED_DATA_EXCEEDS_64k;
MACRO_ERROR ERROR_JOIN_TO_JOIN;
MACRO_ERROR ERROR_JOIN_TO_SUBST;
MACRO_ERROR_NO ERROR_JOURNAL_DELETE_IN_PROGRESS;
MACRO_ERROR_NO ERROR_JOURNAL_ENTRY_DELETED;
MACRO_ERROR_NO ERROR_JOURNAL_HOOK_SET;
MACRO_ERROR_NO ERROR_JOURNAL_NOT_ACTIVE;
MACRO_ERROR_NO ERROR_KERNEL_APC;
MACRO_ERROR_NO ERROR_KEY_DELETED;
MACRO_ERROR_NO ERROR_KEY_HAS_CHILDREN;
MACRO_ERROR_KM ERROR_KM_DRIVER_BLOCKED;
MACRO_ERROR ERROR_LABEL_TOO_LONG;
MACRO_ERROR_NO ERROR_LAST_ADMIN;
MACRO_ERROR_NO ERROR_LB_WITHOUT_TABSTOPS;
MACRO_ERROR_KM ERROR_LIBRARY_FULL;
MACRO_ERROR_KM ERROR_LIBRARY_OFFLINE;
MACRO_ERROR_NO ERROR_LICENSE_QUOTA_EXCEEDED;
MACRO_ERROR_NO ERROR_LISTBOX_ID_NOT_FOUND;
MACRO_ERROR_NO ERROR_LM_CROSS_ENCRYPTION_REQUIRED;
MACRO_ERROR_NO ERROR_LOCAL_USER_SESSION_KEY;
MACRO_ERROR ERROR_LOCKED;
MACRO_ERROR ERROR_LOCK_FAILED;
MACRO_ERROR ERROR_LOCK_VIOLATION;
MACRO_ERROR_NO ERROR_LOGIN_TIME_RESTRICTION;
MACRO_ERROR_NO ERROR_LOGIN_WKSTA_RESTRICTION;
MACRO_ERROR_NO ERROR_LOGON_FAILURE;
MACRO_ERROR_NO ERROR_LOGON_NOT_GRANTED;
MACRO_ERROR_NO ERROR_LOGON_SERVER_CONFLICT;
MACRO_ERROR_NO ERROR_LOGON_SESSION_COLLISION;
MACRO_ERROR_NO ERROR_LOGON_SESSION_EXISTS;
MACRO_ERROR_NO ERROR_LOGON_TYPE_NOT_GRANTED;
MACRO_ERROR_NO ERROR_LOG_FILE_FULL;
MACRO_ERROR_NO ERROR_LOG_HARD_ERROR;
MACRO_ERROR_NO ERROR_LONGJUMP;
MACRO_ERROR_NO ERROR_LOST_WRITEBEHIND_DATA;
MACRO_ERROR_NO ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR;
MACRO_ERROR_NO ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED;
MACRO_ERROR_NO ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR;
MACRO_ERROR_NO ERROR_LUIDS_EXHAUSTED;
MACRO_ERROR_NO ERROR_MACHINE_LOCKED;
MACRO_ERROR_NO ERROR_MAGAZINE_NOT_PRESENT;
MACRO_ERROR_IPSEC_IKE ERROR_MALFORMED_SUBSTITUTION_STRING;
MACRO_ERROR_NO ERROR_MAPPED_ALIGNMENT;
MACRO_ERROR_NO ERROR_MARSHALL_OVERFLOW;
MACRO_ERROR_NO ERROR_MAX_SESSIONS_REACHED;
MACRO_ERROR ERROR_MAX_THRDS_REACHED;
MACRO_ERROR_NO ERROR_MCA_EXCEPTION;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_INTERNAL_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_INVALID_CAPABILITIES_STRING;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_INVALID_VCP_VERSION;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_MCCS_VERSION_MISMATCH;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION;
MACRO_ERROR_NO ERROR_MCA_OCCURED;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE;
MACRO_ERROR_IPSEC_IKE ERROR_MCA_UNSUPPORTED_MCCS_VERSION;
MACRO_ERROR_NO ERROR_MEDIA_CHANGED;
MACRO_ERROR_NO ERROR_MEDIA_CHECK;
MACRO_ERROR_KM ERROR_MEDIA_INCOMPATIBLE;
MACRO_ERROR_KM ERROR_MEDIA_NOT_AVAILABLE;
MACRO_ERROR_KM ERROR_MEDIA_OFFLINE;
MACRO_ERROR_KM ERROR_MEDIA_UNAVAILABLE;
MACRO_ERROR_KM ERROR_MEDIUM_NOT_ACCESSIBLE;
MACRO_ERROR_NO ERROR_MEMBERS_PRIMARY_GROUP;
MACRO_ERROR_NO ERROR_MEMBER_IN_ALIAS;
MACRO_ERROR_NO ERROR_MEMBER_IN_GROUP;
MACRO_ERROR_NO ERROR_MEMBER_NOT_IN_ALIAS;
MACRO_ERROR_NO ERROR_MEMBER_NOT_IN_GROUP;
MACRO_ERROR_NO ERROR_MEMORY_HARDWARE;
MACRO_ERROR_NO ERROR_MENU_ITEM_NOT_FOUND;
MACRO_ERROR_KM ERROR_MESSAGE_EXCEEDS_MAX_SIZE;
MACRO_ERROR_NO ERROR_MESSAGE_SYNC_ONLY;
MACRO_ERROR_KM ERROR_METAFILE_NOT_SUPPORTED;
MACRO_ERROR ERROR_META_EXPANSION_TOO_LONG;
MACRO_ERROR_NO ERROR_MISSING_SYSTEMFILE;
MACRO_ERROR ERROR_MOD_NOT_FOUND;
MACRO_ERROR ERROR_MORE_DATA;
MACRO_ERROR_NO ERROR_MORE_WRITES;
MACRO_ERROR_NO ERROR_MOUNT_POINT_NOT_RESOLVED;
MACRO_ERROR_NO ERROR_MP_PROCESSOR_MISMATCH;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_AUTOMERGE_ENABLED;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_DUPLICATE_ENTRY;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_DUPLICATE_MAP_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_FILEPATH_TOO_LONG;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INVALID_FILE_TYPE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INVALID_PRICONFIG;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INVALID_PRI_FILE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INVALID_QUALIFIER_OPERATOR;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INVALID_QUALIFIER_VALUE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_INVALID_RESOURCE_IDENTIFIER;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_MAP_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_NAMED_RESOURCE_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_NO_CANDIDATE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_RESOURCE_TYPE_MISMATCH;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_TOO_MANY_RESOURCES;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_UNKNOWN_QUALIFIER;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE;
MACRO_ERROR_IPSEC_IKE ERROR_MRM_UNSUPPORTED_PROFILE_TYPE;
MACRO_ERROR_NO ERROR_MR_MID_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_FILE_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_FILE_NOT_LOADED;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_INVALID_FILE;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_INVALID_LOCALE_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_INVALID_RC_CONFIG;
MACRO_ERROR_IPSEC_IKE ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME;
MACRO_ERROR_NO ERROR_MULTIPLE_FAULT_VIOLATION;
MACRO_ERROR_NO ERROR_MUTANT_LIMIT_EXCEEDED;
MACRO_ERROR_NO ERROR_MUTUAL_AUTH_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_NEEDS_REMEDIATION;
MACRO_ERROR ERROR_NEGATIVE_SEEK;
MACRO_ERROR ERROR_NESTING_NOT_ALLOWED;
MACRO_ERROR_NETLOGON ERROR_NETLOGON_NOT_STARTED;
MACRO_ERROR ERROR_NETNAME_DELETED;
MACRO_ERROR ERROR_NETWORK_ACCESS_DENIED;
MACRO_ERROR ERROR_NETWORK_BUSY;
MACRO_ERROR_KM ERROR_NETWORK_NOT_AVAILABLE;
MACRO_ERROR_NO ERROR_NETWORK_UNREACHABLE;
MACRO_ERROR_NO ERROR_NET_OPEN_FAILED;
MACRO_ERROR ERROR_NET_WRITE_FAULT;
MACRO_ERROR_NO ERROR_NOACCESS;
MACRO_ERROR_KM ERROR_NODE_CANNOT_BE_CLUSTERED;
MACRO_ERROR_KM ERROR_NODE_CANT_HOST_RESOURCE;
MACRO_ERROR_KM ERROR_NODE_NOT_AVAILABLE;
MACRO_ERROR_NO ERROR_NOINTERFACE;
MACRO_ERROR_NOLOGON ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT;
MACRO_ERROR_NOLOGON ERROR_NOLOGON_SERVER_TRUST_ACCOUNT;
MACRO_ERROR_NOLOGON ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT;
MACRO_ERROR_NO ERROR_NONE_MAPPED;
MACRO_ERROR_NO ERROR_NONPAGED_SYSTEM_RESOURCES;
MACRO_ERROR_NO ERROR_NON_ACCOUNT_SID;
MACRO_ERROR_NO ERROR_NON_DOMAIN_SID;
MACRO_ERROR_NO ERROR_NON_MDICHILD_WINDOW;
MACRO_ERROR_NO ERROR_NOTHING_TO_TERMINATE;
MACRO_ERROR_NO ERROR_NOTIFICATION_GUID_ALREADY_DEFINED;
MACRO_ERROR_NO ERROR_NOTIFY_CLEANUP;
MACRO_ERROR_NO ERROR_NOTIFY_ENUM_DIR;
MACRO_ERROR_NO ERROR_NOT_ALLOWED_ON_SYSTEM_FILE;
MACRO_ERROR_NO ERROR_NOT_ALL_ASSIGNED;
MACRO_ERROR_NO ERROR_NOT_AUTHENTICATED;
MACRO_ERROR_KM ERROR_NOT_A_REPARSE_POINT;
MACRO_ERROR_NO ERROR_NOT_CAPABLE;
MACRO_ERROR_NO ERROR_NOT_CHILD_WINDOW;
MACRO_ERROR_KM ERROR_NOT_CONNECTED;
MACRO_ERROR_NO ERROR_NOT_CONTAINER;
MACRO_ERROR ERROR_NOT_DOS_DISK;
MACRO_ERROR_KM ERROR_NOT_EMPTY;
MACRO_ERROR ERROR_NOT_ENOUGH_MEMORY;
MACRO_ERROR_NOLOGON ERROR_NOT_ENOUGH_QUOTA;
MACRO_ERROR_NO ERROR_NOT_ENOUGH_SERVER_MEMORY;
MACRO_ERROR_KM ERROR_NOT_EXPORT_FORMAT;
MACRO_ERROR_NO ERROR_NOT_FOUND;
MACRO_ERROR ERROR_NOT_JOINED;
MACRO_ERROR ERROR_NOT_LOCKED;
MACRO_ERROR_NO ERROR_NOT_LOGGED_ON;
MACRO_ERROR_NO ERROR_NOT_LOGON_PROCESS;
MACRO_ERROR_NO ERROR_NOT_OWNER;
MACRO_ERROR_KM ERROR_NOT_QUORUM_CAPABLE;
MACRO_ERROR_KM ERROR_NOT_QUORUM_CLASS;
MACRO_ERROR ERROR_NOT_READY;
MACRO_ERROR_NO ERROR_NOT_READ_FROM_COPY;
MACRO_ERROR_NO ERROR_NOT_REDUNDANT_STORAGE;
MACRO_ERROR_NO ERROR_NOT_REGISTRY_FILE;
MACRO_ERROR_NO ERROR_NOT_SAFEBOOT_SERVICE;
MACRO_ERROR_NO ERROR_NOT_SAFE_MODE_DRIVER;
MACRO_ERROR ERROR_NOT_SAME_DEVICE;
MACRO_ERROR ERROR_NOT_SUBSTED;
MACRO_ERROR ERROR_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_NOT_SUPPORTED_ON_SBS;
MACRO_ERROR_DS ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER;
MACRO_ERROR_NO ERROR_NOT_TINY_STREAM;
MACRO_ERROR_NO ERROR_NO_ACE_CONDITION;
MACRO_ERROR_NO ERROR_NO_ASSOCIATION;
MACRO_ERROR_KM ERROR_NO_BROWSER_SERVERS_FOUND;
MACRO_ERROR_NO ERROR_NO_CALLBACK_ACTIVE;
MACRO_ERROR ERROR_NO_CHILDREN;
MACRO_ERROR ERROR_NO_DATA;
MACRO_ERROR_NO ERROR_NO_DATA_DETECTED;
MACRO_ERROR_KM ERROR_NO_EFS;
MACRO_ERROR_NO ERROR_NO_EVENT_PAIR;
MACRO_ERROR_NO ERROR_NO_IMPERSONATION_TOKEN;
MACRO_ERROR_NO ERROR_NO_INHERITANCE;
MACRO_ERROR_NO ERROR_NO_LOGON_SERVERS;
MACRO_ERROR_NO ERROR_NO_LOG_SPACE;
MACRO_ERROR_NO ERROR_NO_MATCH;
MACRO_ERROR_NO ERROR_NO_MEDIA_IN_DRIVE;
MACRO_ERROR_NO ERROR_NO_MORE_DEVICES;
MACRO_ERROR ERROR_NO_MORE_FILES;
MACRO_ERROR_NO ERROR_NO_MORE_ITEMS;
MACRO_ERROR_NO ERROR_NO_MORE_MATCHES;
MACRO_ERROR ERROR_NO_MORE_SEARCH_HANDLES;
MACRO_ERROR_NO ERROR_NO_MORE_USER_HANDLES;
MACRO_ERROR_NO ERROR_NO_NETWORK;
MACRO_ERROR_NO ERROR_NO_NET_OR_BAD_PATH;
MACRO_ERROR_NO ERROR_NO_NVRAM_RESOURCES;
MACRO_ERROR_NO ERROR_NO_PAGEFILE;
MACRO_ERROR ERROR_NO_PROC_SLOTS;
MACRO_ERROR_DS ERROR_NO_PROMOTION_ACTIVE;
MACRO_ERROR_NO ERROR_NO_QUOTAS_FOR_ACCOUNT;
MACRO_ERROR_NO ERROR_NO_RANGES_PROCESSED;
MACRO_ERROR_KM ERROR_NO_RECOVERY_POLICY;
MACRO_ERROR_NO ERROR_NO_RECOVERY_PROGRAM;
MACRO_ERROR_NO ERROR_NO_SCROLLBARS;
MACRO_ERROR_NO ERROR_NO_SECURITY_ON_OBJECT;
MACRO_ERROR_NO ERROR_NO_SHUTDOWN_IN_PROGRESS;
MACRO_ERROR ERROR_NO_SIGNAL_SENT;
MACRO_ERROR_NO_SITENAME ERROR_NO_SITENAME;
MACRO_ERROR ERROR_NO_SPOOL_SPACE;
MACRO_ERROR_NO ERROR_NO_SUCH_ALIAS;
MACRO_ERROR_NO ERROR_NO_SUCH_DOMAIN;
MACRO_ERROR_NO ERROR_NO_SUCH_GROUP;
MACRO_ERROR_NO ERROR_NO_SUCH_LOGON_SESSION;
MACRO_ERROR_NO ERROR_NO_SUCH_MEMBER;
MACRO_ERROR_NO ERROR_NO_SUCH_PACKAGE;
MACRO_ERROR_NO ERROR_NO_SUCH_PRIVILEGE;
MACRO_ERROR_NO ERROR_NO_SUCH_SITE;
MACRO_ERROR_NO ERROR_NO_SUCH_USER;
MACRO_ERROR_KM ERROR_NO_SUPPORTING_DRIVES;
MACRO_ERROR_NO ERROR_NO_SYSTEM_MENU;
MACRO_ERROR_NO ERROR_NO_SYSTEM_RESOURCES;
MACRO_ERROR_NO ERROR_NO_TOKEN;
MACRO_ERROR_NO ERROR_NO_TRACKING_SERVICE;
MACRO_ERROR_INVALID ERROR_NO_TRUST_LSA_SECRET;
MACRO_ERROR_INVALID ERROR_NO_TRUST_SAM_ACCOUNT;
MACRO_ERROR_NO ERROR_NO_UNICODE_TRANSLATION;
MACRO_ERROR_KM ERROR_NO_USER_KEYS;
MACRO_ERROR_NO ERROR_NO_USER_SESSION_KEY;
MACRO_ERROR_NO ERROR_NO_VOLUME_ID;
MACRO_ERROR ERROR_NO_VOLUME_LABEL;
MACRO_ERROR_NO ERROR_NO_WILDCARD_CHARACTERS;
MACRO_ERROR_NO ERROR_NO_YIELD_PERFORMED;
MACRO_ERROR_NO ERROR_NT_CROSS_ENCRYPTION_REQUIRED;
MACRO_ERROR_NO ERROR_NULL_LM_PASSWORD;
MACRO_ERROR_KM ERROR_OBJECT_ALREADY_EXISTS;
MACRO_ERROR_KM ERROR_OBJECT_IN_LIST;
MACRO_ERROR_NO ERROR_OBJECT_NAME_EXISTS;
MACRO_ERROR_KM ERROR_OBJECT_NOT_FOUND;
MACRO_ERROR_NO ERROR_OFFSET_ALIGNMENT_VIOLATION;
MACRO_ERROR_NO ERROR_OLD_WIN_VERSION;
MACRO_ERROR_NO ERROR_ONLY_IF_CONNECTED;
MACRO_ERROR ERROR_OPEN_FAILED;
MACRO_ERROR_KM ERROR_OPEN_FILES;
MACRO_ERROR_NO ERROR_OPERATION_ABORTED;
MACRO_ERROR_NO ERROR_OPERATION_IN_PROGRESS;
MACRO_ERROR_NO ERROR_OPLOCK_BREAK_IN_PROGRESS;
MACRO_ERROR_NO ERROR_OPLOCK_NOT_GRANTED;
MACRO_ERROR ERROR_OUTOFMEMORY;
MACRO_ERROR ERROR_OUT_OF_PAPER;
MACRO_ERROR ERROR_OUT_OF_STRUCTURES;
MACRO_ERROR_NO ERROR_OVERRIDE_NOCHANGES;
MACRO_ERROR_IPSEC_IKE ERROR_PACKAGES_IN_USE;
MACRO_ERROR_IPSEC_IKE ERROR_PACKAGE_ALREADY_EXISTS;
MACRO_ERROR_IPSEC_IKE ERROR_PACKAGE_REPOSITORY_CORRUPTED;
MACRO_ERROR_IPSEC_IKE ERROR_PACKAGE_UPDATING;
MACRO_ERROR_NO ERROR_PAGED_SYSTEM_RESOURCES;
MACRO_ERROR_NO ERROR_PAGEFILE_CREATE_FAILED;
MACRO_ERROR_NO ERROR_PAGEFILE_QUOTA;
MACRO_ERROR_NO ERROR_PAGEFILE_QUOTA_EXCEEDED;
MACRO_ERROR_NO ERROR_PAGE_FAULT_COPY_ON_WRITE;
MACRO_ERROR_NO ERROR_PAGE_FAULT_DEMAND_ZERO;
MACRO_ERROR_NO ERROR_PAGE_FAULT_GUARD_PAGE;
MACRO_ERROR_NO ERROR_PAGE_FAULT_PAGING_FILE;
MACRO_ERROR_NO ERROR_PAGE_FAULT_TRANSITION;
MACRO_ERROR_NO ERROR_PARAMETER_QUOTA_EXCEEDED;
MACRO_ERROR_NO ERROR_PARTIAL_COPY;
MACRO_ERROR_NO ERROR_PARTITION_FAILURE;
MACRO_ERROR_NO ERROR_PASSWORD_EXPIRED;
MACRO_ERROR_INVALID_TIME ERROR_PASSWORD_MUST_CHANGE;
MACRO_ERROR_NO ERROR_PASSWORD_RESTRICTION;
MACRO_ERROR_NO ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT;
MACRO_ERROR_NO ERROR_PATCH_NO_SEQUENCE;
MACRO_ERROR_NO ERROR_PATCH_PACKAGE_INVALID;
MACRO_ERROR_NO ERROR_PATCH_PACKAGE_OPEN_FAILED;
MACRO_ERROR_NO ERROR_PATCH_PACKAGE_REJECTED;
MACRO_ERROR_NO ERROR_PATCH_PACKAGE_UNSUPPORTED;
MACRO_ERROR_NO ERROR_PATCH_REMOVAL_DISALLOWED;
MACRO_ERROR_NO ERROR_PATCH_REMOVAL_UNSUPPORTED;
MACRO_ERROR_NO ERROR_PATCH_TARGET_NOT_FOUND;
MACRO_ERROR ERROR_PATH_BUSY;
MACRO_ERROR ERROR_PATH_NOT_FOUND;
MACRO_ERROR_KM ERROR_PER_USER_TRUST_QUOTA_EXCEEDED;
MACRO_ERROR ERROR_PIPE_BUSY;
MACRO_ERROR_NO ERROR_PIPE_CONNECTED;
MACRO_ERROR_NO ERROR_PIPE_LISTENING;
MACRO_ERROR ERROR_PIPE_LOCAL;
MACRO_ERROR ERROR_PIPE_NOT_CONNECTED;
MACRO_ERROR_NO ERROR_PKINIT_FAILURE;
MACRO_ERROR_NO ERROR_PLUGPLAY_QUERY_VETOED;
MACRO_ERROR_NO ERROR_PNP_BAD_MPS_TABLE;
MACRO_ERROR_NO ERROR_PNP_INVALID_ID;
MACRO_ERROR_NO ERROR_PNP_IRQ_TRANSLATION_FAILED;
MACRO_ERROR_NO ERROR_PNP_REBOOT_REQUIRED;
MACRO_ERROR_NO ERROR_PNP_RESTART_ENUMERATION;
MACRO_ERROR_NO ERROR_PNP_TRANSLATION_FAILED;
MACRO_ERROR_NO ERROR_POINT_NOT_FOUND;
MACRO_ERROR_DS ERROR_POLICY_OBJECT_NOT_FOUND;
MACRO_ERROR_DS ERROR_POLICY_ONLY_IN_DS;
MACRO_ERROR_NO ERROR_POPUP_ALREADY_ACTIVE;
MACRO_ERROR_NO ERROR_PORT_NOT_SET;
MACRO_ERROR_NO ERROR_PORT_UNREACHABLE;
MACRO_ERROR_NO ERROR_POSSIBLE_DEADLOCK;
MACRO_ERROR_NO ERROR_POTENTIAL_FILE_FOUND;
MACRO_ERROR_NO ERROR_PREDEFINED_HANDLE;
MACRO_ERROR_NO ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED;
MACRO_ERROR_NETLOGON ERROR_PRINTER_ALREADY_EXISTS;
MACRO_ERROR_INVALID_TIME ERROR_PRINTER_DELETED;
MACRO_ERROR_NETLOGON ERROR_PRINTER_DRIVER_ALREADY_INSTALLED;
MACRO_ERROR_KM ERROR_PRINTER_DRIVER_BLOCKED;
MACRO_ERROR_KM ERROR_PRINTER_DRIVER_IN_USE;
MACRO_ERROR_KM ERROR_PRINTER_DRIVER_WARNED;
MACRO_ERROR_KM ERROR_PRINTER_HAS_JOBS_QUEUED;
MACRO_ERROR_KM ERROR_PRINTER_NOT_FOUND;
MACRO_ERROR ERROR_PRINTQ_FULL;
MACRO_ERROR ERROR_PRINT_CANCELLED;
MACRO_ERROR_KM ERROR_PRINT_MONITOR_ALREADY_INSTALLED;
MACRO_ERROR_KM ERROR_PRINT_MONITOR_IN_USE;
MACRO_ERROR_KM ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED;
MACRO_ERROR_NO ERROR_PRIVATE_DIALOG_INDEX;
MACRO_ERROR_NO ERROR_PRIVILEGE_NOT_HELD;
MACRO_ERROR_NO ERROR_PROCESS_ABORTED;
MACRO_ERROR_NO ERROR_PROCESS_IN_JOB;
MACRO_ERROR_NO ERROR_PROCESS_NOT_IN_JOB;
MACRO_ERROR ERROR_PROC_NOT_FOUND;
MACRO_ERROR_NO ERROR_PRODUCT_UNINSTALLED;
MACRO_ERROR_NO ERROR_PRODUCT_VERSION;
MACRO_ERROR_KM ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE;
MACRO_ERROR_KM ERROR_PROFILE_NOT_FOUND;
MACRO_ERROR_DS ERROR_PROMOTION_ACTIVE;
MACRO_ERROR_NO ERROR_PROTOCOL_UNREACHABLE;
MACRO_ERROR_NO ERROR_PWD_HISTORY_CONFLICT;
MACRO_ERROR_NO ERROR_PWD_TOO_RECENT;
MACRO_ERROR_NO ERROR_PWD_TOO_SHORT;
MACRO_ERROR_KM ERROR_QUORUMLOG_OPEN_FAILED;
MACRO_ERROR_KM ERROR_QUORUM_DISK_NOT_FOUND;
MACRO_ERROR_KM ERROR_QUORUM_OWNER_ALIVE;
MACRO_ERROR_KM ERROR_QUORUM_RESOURCE;
MACRO_ERROR_KM ERROR_QUORUM_RESOURCE_ONLINE_FAILED;
MACRO_ERROR_NO ERROR_QUOTA_LIST_INCONSISTENT;
MACRO_ERROR_NO ERROR_RANGE_LIST_CONFLICT;
MACRO_ERROR_NO ERROR_RANGE_NOT_FOUND;
MACRO_ERROR ERROR_READ_FAULT;
MACRO_ERROR_NO ERROR_RECEIVE_EXPEDITED;
MACRO_ERROR_NO ERROR_RECEIVE_PARTIAL;
MACRO_ERROR_NO ERROR_RECEIVE_PARTIAL_EXPEDITED;
MACRO_ERROR_NO ERROR_RECOVERY_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_RECOVERY_FILE_CORRUPT;
MACRO_ERROR_KM ERROR_REC_NON_EXISTENT;
MACRO_ERROR_NETLOGON ERROR_REDIRECTOR_HAS_OPEN_HANDLES;
MACRO_ERROR ERROR_REDIR_PAUSED;
MACRO_ERROR_NO ERROR_REGISTRY_CORRUPT;
MACRO_ERROR_NO ERROR_REGISTRY_HIVE_RECOVERED;
MACRO_ERROR_NO ERROR_REGISTRY_IO_FAILED;
MACRO_ERROR_NO ERROR_REGISTRY_QUOTA_LIMIT;
MACRO_ERROR_NO ERROR_REGISTRY_RECOVERED;
MACRO_ERROR_NO ERROR_REG_NAT_CONSUMPTION;
MACRO_ERROR ERROR_RELOC_CHAIN_XEEDS_SEGLIM;
MACRO_ERROR_KM ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED;
MACRO_ERROR_NO ERROR_REMOTE_SESSION_LIMIT_EXCEEDED;
MACRO_ERROR_KM ERROR_REMOTE_STORAGE_MEDIA_ERROR;
MACRO_ERROR_KM ERROR_REMOTE_STORAGE_NOT_ACTIVE;
MACRO_ERROR_IPSEC_IKE ERROR_REMOVE_FAILED;
MACRO_ERROR ERROR_REM_NOT_LIST;
MACRO_ERROR_NO ERROR_REPARSE;
MACRO_ERROR_KM ERROR_REPARSE_ATTRIBUTE_CONFLICT;
MACRO_ERROR_NO ERROR_REPARSE_OBJECT;
MACRO_ERROR_KM ERROR_REPARSE_TAG_INVALID;
MACRO_ERROR_KM ERROR_REPARSE_TAG_MISMATCH;
MACRO_ERROR_NO ERROR_REPLY_MESSAGE_MISMATCH;
MACRO_ERROR_NO ERROR_REQUEST_ABORTED;
MACRO_ERROR_NO ERROR_REQUEST_OUT_OF_SEQUENCE;
MACRO_ERROR_KM ERROR_REQUEST_PAUSED;
MACRO_ERROR_KM ERROR_REQUEST_REFUSED;
MACRO_ERROR_NO ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION;
MACRO_ERROR ERROR_REQ_NOT_ACCEP;
MACRO_ERROR_NO ERROR_RESIDENT_FILE_NOT_SUPPORTED;
MACRO_ERROR_IPSEC_IKE ERROR_RESILIENCY_FILE_CORRUPT;
MACRO_ERROR_KM ERROR_RESMON_CREATE_FAILED;
MACRO_ERROR_KM ERROR_RESMON_INVALID_STATE;
MACRO_ERROR_KM ERROR_RESMON_ONLINE_FAILED;
MACRO_ERROR_NOLOGON ERROR_RESOURCE_DATA_NOT_FOUND;
MACRO_ERROR_KM ERROR_RESOURCE_DISABLED;
MACRO_ERROR_IPSEC_IKE ERROR_RESOURCE_ENUM_USER_STOP;
MACRO_ERROR_KM ERROR_RESOURCE_FAILED;
MACRO_ERROR_NOLOGON ERROR_RESOURCE_LANG_NOT_FOUND;
MACRO_ERROR_NOLOGON ERROR_RESOURCE_NAME_NOT_FOUND;
MACRO_ERROR_KM ERROR_RESOURCE_NOT_AVAILABLE;
MACRO_ERROR_KM ERROR_RESOURCE_NOT_FOUND;
MACRO_ERROR_KM ERROR_RESOURCE_NOT_ONLINE;
MACRO_ERROR_KM ERROR_RESOURCE_NOT_PRESENT;
MACRO_ERROR_KM ERROR_RESOURCE_ONLINE;
MACRO_ERROR_KM ERROR_RESOURCE_PROPERTIES_STORED;
MACRO_ERROR_KM ERROR_RESOURCE_PROPERTY_UNCHANGEABLE;
MACRO_ERROR_NO ERROR_RESOURCE_REQUIREMENTS_CHANGED;
MACRO_ERROR_NOLOGON ERROR_RESOURCE_TYPE_NOT_FOUND;
MACRO_ERROR_NO ERROR_RESTART_APPLICATION;
MACRO_ERROR_NO ERROR_RESUME_HIBERNATION;
MACRO_ERROR_NO ERROR_RETRY;
MACRO_ERROR_NO ERROR_REVISION_MISMATCH;
MACRO_ERROR ERROR_RING2SEG_MUST_BE_MOVABLE;
MACRO_ERROR ERROR_RING2_STACK_IN_USE;
MACRO_ERROR_NO ERROR_RMODE_APP;
MACRO_ERROR_NO ERROR_ROWSNOTRELEASED;
MACRO_ERROR_KM ERROR_RPL_NOT_ALLOWED;
MACRO_ERROR_IPSEC_IKE ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT;
MACRO_ERROR_IPSEC_IKE ERROR_RUNLEVEL_SWITCH_IN_PROGRESS;
MACRO_ERROR_IPSEC_IKE ERROR_RUNLEVEL_SWITCH_TIMEOUT;
MACRO_ERROR_NO ERROR_RXACT_COMMITTED;
MACRO_ERROR_NO ERROR_RXACT_COMMIT_FAILURE;
MACRO_ERROR_NO ERROR_RXACT_COMMIT_NECESSARY;
MACRO_ERROR_NO ERROR_RXACT_INVALID_STATE;
MACRO_ERROR_NO ERROR_RXACT_STATE_CREATED;
MACRO_ERROR ERROR_SAME_DRIVE;
MACRO_ERROR_DS ERROR_SAM_INIT_FAILURE;
MACRO_ERROR_NO ERROR_SCOPE_NOT_FOUND;
MACRO_ERROR_NO ERROR_SCREEN_ALREADY_LOCKED;
MACRO_ERROR_NO ERROR_SCRUB_DATA_DISABLED;
MACRO_ERROR_IPSEC_IKE ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED;
MACRO_ERROR_NO ERROR_SECRET_TOO_LONG;
MACRO_ERROR ERROR_SECTOR_NOT_FOUND;
MACRO_ERROR_NO ERROR_SECURITY_STREAM_IS_INCONSISTENT;
MACRO_ERROR ERROR_SEEK;
MACRO_ERROR ERROR_SEEK_ON_DEVICE;
MACRO_ERROR_NO ERROR_SEGMENT_NOTIFICATION;
MACRO_ERROR ERROR_SEM_IS_SET;
MACRO_ERROR ERROR_SEM_NOT_FOUND;
MACRO_ERROR ERROR_SEM_OWNER_DIED;
MACRO_ERROR ERROR_SEM_TIMEOUT;
MACRO_ERROR ERROR_SEM_USER_LIMIT;
MACRO_ERROR_NO ERROR_SERIAL_NO_DEVICE;
MACRO_ERROR_NO ERROR_SERVER_DISABLED;
MACRO_ERROR_NOLOGON ERROR_SERVER_HAS_OPEN_HANDLES;
MACRO_ERROR_NO ERROR_SERVER_NOT_DISABLED;
MACRO_ERROR_NO ERROR_SERVER_SHUTDOWN_IN_PROGRESS;
MACRO_ERROR_NO ERROR_SERVER_SID_MISMATCH;
MACRO_ERROR_IPSEC_IKE ERROR_SERVICES_FAILED_AUTOSTART;
MACRO_ERROR_NO ERROR_SERVICE_ALREADY_RUNNING;
MACRO_ERROR_NO ERROR_SERVICE_CANNOT_ACCEPT_CTRL;
MACRO_ERROR_NO ERROR_SERVICE_DATABASE_LOCKED;
MACRO_ERROR_NO ERROR_SERVICE_DEPENDENCY_DELETED;
MACRO_ERROR_NO ERROR_SERVICE_DEPENDENCY_FAIL;
MACRO_ERROR_NO ERROR_SERVICE_DISABLED;
MACRO_ERROR_NO ERROR_SERVICE_DOES_NOT_EXIST;
MACRO_ERROR_NO ERROR_SERVICE_EXISTS;
MACRO_ERROR_NO ERROR_SERVICE_LOGON_FAILED;
MACRO_ERROR_NO ERROR_SERVICE_MARKED_FOR_DELETE;
MACRO_ERROR_NO ERROR_SERVICE_NEVER_STARTED;
MACRO_ERROR_NO ERROR_SERVICE_NOTIFICATION;
MACRO_ERROR_NO ERROR_SERVICE_NOT_ACTIVE;
MACRO_ERROR_NO ERROR_SERVICE_NOT_FOUND;
MACRO_ERROR_NO ERROR_SERVICE_NOT_IN_EXE;
MACRO_ERROR_NO ERROR_SERVICE_NO_THREAD;
MACRO_ERROR_NO ERROR_SERVICE_REQUEST_TIMEOUT;
MACRO_ERROR_NO ERROR_SERVICE_SPECIFIC_ERROR;
MACRO_ERROR_NO ERROR_SERVICE_START_HANG;
MACRO_ERROR_NO ERROR_SESSION_CREDENTIAL_CONFLICT;
MACRO_ERROR_NO ERROR_SETCOUNT_ON_BAD_LB;
MACRO_ERROR_NO ERROR_SETMARK_DETECTED;
MACRO_ERROR_NO ERROR_SET_NOT_FOUND;
MACRO_ERROR_NO ERROR_SET_POWER_STATE_FAILED;
MACRO_ERROR_NO ERROR_SET_POWER_STATE_VETOED;
MACRO_ERROR_SEVERITY ERROR_SEVERITY_ERROR;
MACRO_ERROR_SEVERITY ERROR_SEVERITY_INFORMATIONAL;
MACRO_ERROR_SEVERITY ERROR_SEVERITY_SUCCESS;
MACRO_ERROR_SEVERITY ERROR_SEVERITY_WARNING;
MACRO_ERROR_DS ERROR_SHARED_POLICY;
MACRO_ERROR ERROR_SHARING_BUFFER_EXCEEDED;
MACRO_ERROR ERROR_SHARING_PAUSED;
MACRO_ERROR ERROR_SHARING_VIOLATION;
MACRO_ERROR_NO ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME;
MACRO_ERROR_KM ERROR_SHUTDOWN_CLUSTER;
MACRO_ERROR_NO ERROR_SHUTDOWN_IN_PROGRESS;
MACRO_ERROR ERROR_SIGNAL_PENDING;
MACRO_ERROR ERROR_SIGNAL_REFUSED;
MACRO_ERROR_NO ERROR_SINGLE_INSTANCE_APP;
MACRO_ERROR_NO ERROR_SMARTCARD_SUBSYSTEM_FAILURE;
MACRO_ERROR_IPSEC_IKE ERROR_SMI_PRIMITIVE_INSTALLER_FAILED;
MACRO_ERROR_NO ERROR_SOME_NOT_MAPPED;
MACRO_ERROR_NO ERROR_SOURCE_ELEMENT_EMPTY;
MACRO_ERROR_NO ERROR_SPECIAL_ACCOUNT;
MACRO_ERROR_NO ERROR_SPECIAL_GROUP;
MACRO_ERROR_NO ERROR_SPECIAL_USER;
MACRO_ERROR_KM ERROR_SPL_NO_ADDJOB;
MACRO_ERROR_KM ERROR_SPL_NO_STARTDOC;
MACRO_ERROR_KM ERROR_SPOOL_FILE_NOT_FOUND;
MACRO_ERROR_NO ERROR_STACK_BUFFER_OVERRUN;
MACRO_ERROR_NO ERROR_STACK_OVERFLOW;
MACRO_ERROR_NO ERROR_STACK_OVERFLOW_READ;
MACRO_ERROR_KM ERROR_STATIC_INIT;
MACRO_ERROR_NO ERROR_STOPPED_ON_SYMLINK;
MACRO_ERROR ERROR_SUBST_TO_JOIN;
MACRO_ERROR ERROR_SUBST_TO_SUBST;
MACRO_ERROR ERROR_SUCCESS;
MACRO_ERROR_NO ERROR_SUCCESS_REBOOT_INITIATED;
MACRO_ERROR_KM ERROR_SUCCESS_REBOOT_REQUIRED;
MACRO_ERROR_KM ERROR_SUCCESS_RESTART_REQUIRED;
MACRO_ERROR_NO ERROR_SWAPERROR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_ACTIVATION_CONTEXT_DISABLED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_ASSEMBLY_MISSING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_ASSEMBLY_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_ASSEMBLY_NOT_LOCKED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_CANT_GEN_ACTCTX;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_COMPONENT_STORE_CORRUPT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_CORRUPTION;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_CORRUPT_ACTIVATION_STACK;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_ASSEMBLY_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_CLSID;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_DLL_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_IID;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_PROGID;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_TLBID;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_EARLY_DEACTIVATION;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_FILE_HASH_MISMATCH;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_FILE_HASH_MISSING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_IDENTITIES_DIFFERENT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_IDENTITY_PARSE_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_ACTCTXDATA_FORMAT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_DEACTIVATION;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_INVALID_XML_NAMESPACE_URI;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_KEY_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MANIFEST_FORMAT_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MANIFEST_PARSE_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MANIFEST_TOO_BIG;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_MULTIPLE_DEACTIVATION;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_POLICY_PARSE_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PROCESS_TERMINATION_REQUESTED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PROTECTION_CATALOG_NOT_VALID;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_PROTECTION_RECOVERY_FAILED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_RELEASE_ACTIVATION_CONTEXT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_SECTION_NOT_FOUND;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_SETTING_NOT_REGISTERED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_THREAD_QUERIES_DISABLED;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_UNKNOWN_ENCODING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_UNKNOWN_ENCODING_GROUP;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_UNTRANSLATABLE_HRESULT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_VERSION_CONFLICT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_WRONG_SECTION_TYPE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADCHARDATA;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADCHARINSTRING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADNAMECHAR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADPEREFINSUBSET;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADSTARTNAMECHAR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADXMLCASE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_BADXMLDECL;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_COMMENTSYNTAX;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_DUPLICATEATTRIBUTE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_EXPECTINGTAGEND;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INCOMPLETE_ENCODING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INTERNALERROR;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALIDATROOTLEVEL;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALIDENCODING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALIDSWITCH;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALID_DECIMAL;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALID_HEXIDECIMAL;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALID_STANDALONE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALID_UNICODE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_INVALID_VERSION;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MISSINGEQUALS;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MISSINGQUOTE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MISSINGROOT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MISSINGSEMICOLON;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MISSINGWHITESPACE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MISSING_PAREN;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MULTIPLEROOTS;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_MULTIPLE_COLONS;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_RESERVEDNAMESPACE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNBALANCEDPAREN;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDCDATA;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDCOMMENT;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDDECL;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDENDTAG;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDSTARTTAG;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDSTRING;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNCLOSEDTAG;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNEXPECTEDENDTAG;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNEXPECTEDEOF;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNEXPECTED_STANDALONE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK;
MACRO_ERROR_IPSEC_IKE ERROR_SXS_XML_E_XMLDECLSYNTAX;
MACRO_ERROR_NO ERROR_SYMLINK_CLASS_DISABLED;
MACRO_ERROR_NO ERROR_SYMLINK_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_SYNCHRONIZATION_REQUIRED;
MACRO_ERROR_NO ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED;
MACRO_ERROR_IPSEC_IKE ERROR_SYSTEM_DEVICE_NOT_FOUND;
MACRO_ERROR_NO ERROR_SYSTEM_HIVE_TOO_LARGE;
MACRO_ERROR_NO ERROR_SYSTEM_IMAGE_BAD_SIGNATURE;
MACRO_ERROR_IPSEC_IKE ERROR_SYSTEM_NEEDS_REMEDIATION;
MACRO_ERROR_NO ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION;
MACRO_ERROR_NO ERROR_SYSTEM_POWERSTATE_TRANSITION;
MACRO_ERROR_NO ERROR_SYSTEM_PROCESS_TERMINATED;
MACRO_ERROR_NO ERROR_SYSTEM_SHUTDOWN;
MACRO_ERROR ERROR_SYSTEM_TRACE;
MACRO_ERROR_KM ERROR_TAG_NOT_FOUND;
MACRO_ERROR_KM ERROR_TAG_NOT_PRESENT;
MACRO_ERROR ERROR_THREAD_1_INACTIVE;
MACRO_ERROR_NO ERROR_THREAD_ALREADY_IN_TASK;
MACRO_ERROR_NO ERROR_THREAD_NOT_IN_PROCESS;
MACRO_ERROR_NO ERROR_THREAD_WAS_SUSPENDED;
MACRO_ERROR_NO ERROR_TIMEOUT;
MACRO_ERROR_NO ERROR_TIMER_RESOLUTION_NOT_SET;
MACRO_ERROR_NO ERROR_TIMER_RESUME_IGNORED;
MACRO_ERROR_NO ERROR_TIME_SKEW;
MACRO_ERROR_NO ERROR_TLW_WITH_WSCHILD;
MACRO_ERROR_NO ERROR_TOKEN_ALREADY_IN_USE;
MACRO_ERROR ERROR_TOO_MANY_CMDS;
MACRO_ERROR_NO ERROR_TOO_MANY_CONTEXT_IDS;
MACRO_ERROR_NO ERROR_TOO_MANY_DESCRIPTORS;
MACRO_ERROR_NO ERROR_TOO_MANY_LINKS;
MACRO_ERROR_NO ERROR_TOO_MANY_LUIDS_REQUESTED;
MACRO_ERROR ERROR_TOO_MANY_MODULES;
MACRO_ERROR ERROR_TOO_MANY_MUXWAITERS;
MACRO_ERROR ERROR_TOO_MANY_NAMES;
MACRO_ERROR ERROR_TOO_MANY_OPEN_FILES;
MACRO_ERROR_NO ERROR_TOO_MANY_POSTS;
MACRO_ERROR_NO ERROR_TOO_MANY_SECRETS;
MACRO_ERROR ERROR_TOO_MANY_SEMAPHORES;
MACRO_ERROR ERROR_TOO_MANY_SEM_REQUESTS;
MACRO_ERROR ERROR_TOO_MANY_SESS;
MACRO_ERROR_NO ERROR_TOO_MANY_SIDS;
MACRO_ERROR ERROR_TOO_MANY_TCBS;
MACRO_ERROR_NO ERROR_TOO_MANY_THREADS;
MACRO_ERROR_KM ERROR_TRANSFORM_NOT_SUPPORTED;
MACRO_ERROR_NO ERROR_TRANSLATION_COMPLETE;
MACRO_ERROR_KM ERROR_TRANSPORT_FULL;
MACRO_ERROR_INVALID ERROR_TRUSTED_DOMAIN_FAILURE;
MACRO_ERROR_INVALID ERROR_TRUSTED_RELATIONSHIP_FAILURE;
MACRO_ERROR_INVALID ERROR_TRUST_FAILURE;
MACRO_ERROR_KM ERROR_UNABLE_TO_CLEAN;
MACRO_ERROR_KM ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA;
MACRO_ERROR_KM ERROR_UNABLE_TO_INVENTORY_DRIVE;
MACRO_ERROR_KM ERROR_UNABLE_TO_INVENTORY_SLOT;
MACRO_ERROR_KM ERROR_UNABLE_TO_INVENTORY_TRANSPORT;
MACRO_ERROR_KM ERROR_UNABLE_TO_LOAD_MEDIUM;
MACRO_ERROR_NO ERROR_UNABLE_TO_LOCK_MEDIA;
MACRO_ERROR_NO ERROR_UNABLE_TO_MOVE_REPLACEMENT;
MACRO_ERROR_NO ERROR_UNABLE_TO_MOVE_REPLACEMENT_2;
MACRO_ERROR_NO ERROR_UNABLE_TO_REMOVE_REPLACED;
MACRO_ERROR_NO ERROR_UNABLE_TO_UNLOAD_MEDIA;
MACRO_ERROR_NO ERROR_UNDEFINED_CHARACTER;
MACRO_ERROR_NO ERROR_UNDEFINED_SCOPE;
MACRO_ERROR_KM ERROR_UNEXPECTED_OMID;
MACRO_ERROR ERROR_UNEXP_NET_ERR;
MACRO_ERROR_NO ERROR_UNHANDLED_EXCEPTION;
MACRO_ERROR_NO ERROR_UNKNOWN_COMPONENT;
MACRO_ERROR_NO ERROR_UNKNOWN_FEATURE;
MACRO_ERROR_NO ERROR_UNKNOWN_PATCH;
MACRO_ERROR_NETLOGON ERROR_UNKNOWN_PORT;
MACRO_ERROR_NETLOGON ERROR_UNKNOWN_PRINTER_DRIVER;
MACRO_ERROR_NETLOGON ERROR_UNKNOWN_PRINTPROCESSOR;
MACRO_ERROR_KM ERROR_UNKNOWN_PRINT_MONITOR;
MACRO_ERROR_NO ERROR_UNKNOWN_PRODUCT;
MACRO_ERROR_NO ERROR_UNKNOWN_PROPERTY;
MACRO_ERROR_NO ERROR_UNKNOWN_REVISION;
MACRO_ERROR_IPSEC_IKE ERROR_UNMAPPED_SUBSTITUTION_STRING;
MACRO_ERROR_INVALID ERROR_UNRECOGNIZED_MEDIA;
MACRO_ERROR_NO ERROR_UNRECOGNIZED_VOLUME;
MACRO_ERROR_NO ERROR_UNSUPPORTED_COMPRESSION;
MACRO_ERROR_NO ERROR_UNSUPPORTED_TYPE;
MACRO_ERROR_NO ERROR_UNWIND_CONSOLIDATE;
MACRO_ERROR_NO ERROR_USER_APC;
MACRO_ERROR_KM ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED;
MACRO_ERROR_NO ERROR_USER_EXISTS;
MACRO_ERROR_NO ERROR_USER_MAPPED_FILE;
MACRO_ERROR_NO ERROR_USER_PROFILE_LOAD;
MACRO_ERROR_NO ERROR_VALIDATE_CONTINUE;
MACRO_ERROR ERROR_VC_DISCONNECTED;
MACRO_ERROR_NO ERROR_VDM_HARD_ERROR;
MACRO_ERROR_NO ERROR_VERSION_PARSE_ERROR;
MACRO_ERROR_NO ERROR_VOLSNAP_HIBERNATE_READY;
MACRO_ERROR_NO ERROR_VOLSNAP_PREPARE_HIBERNATE;
MACRO_ERROR_KM ERROR_VOLUME_CONTAINS_SYS_FILES;
MACRO_ERROR_NO ERROR_VOLUME_MOUNTED;
MACRO_ERROR_KM ERROR_VOLUME_NOT_SIS_ENABLED;
MACRO_ERROR_KM ERROR_VOLUME_NOT_SUPPORT_EFS;
MACRO_ERROR_NO ERROR_WAIT_1;
MACRO_ERROR_NO ERROR_WAIT_2;
MACRO_ERROR_NO ERROR_WAIT_3;
MACRO_ERROR_NO ERROR_WAIT_63;
MACRO_ERROR_NO ERROR_WAIT_FOR_OPLOCK;
MACRO_ERROR ERROR_WAIT_NO_CHILDREN;
MACRO_ERROR_NO ERROR_WAKE_SYSTEM;
MACRO_ERROR_NO ERROR_WAKE_SYSTEM_DEBUGGER;
MACRO_ERROR_NO ERROR_WAS_LOCKED;
MACRO_ERROR_NO ERROR_WAS_UNLOCKED;
MACRO_ERROR_NO ERROR_WINDOW_NOT_COMBOBOX;
MACRO_ERROR_NO ERROR_WINDOW_NOT_DIALOG;
MACRO_ERROR_NO ERROR_WINDOW_OF_OTHER_THREAD;
MACRO_ERROR_KM ERROR_WINS_INTERNAL;
MACRO_ERROR_KM ERROR_WMI_ALREADY_DISABLED;
MACRO_ERROR_KM ERROR_WMI_ALREADY_ENABLED;
MACRO_ERROR_KM ERROR_WMI_DP_FAILED;
MACRO_ERROR_KM ERROR_WMI_DP_NOT_FOUND;
MACRO_ERROR_KM ERROR_WMI_GUID_DISCONNECTED;
MACRO_ERROR_KM ERROR_WMI_GUID_NOT_FOUND;
MACRO_ERROR_KM ERROR_WMI_INSTANCE_NOT_FOUND;
MACRO_ERROR_KM ERROR_WMI_INVALID_MOF;
MACRO_ERROR_KM ERROR_WMI_INVALID_REGINFO;
MACRO_ERROR_KM ERROR_WMI_ITEMID_NOT_FOUND;
MACRO_ERROR_KM ERROR_WMI_READ_ONLY;
MACRO_ERROR_KM ERROR_WMI_SERVER_UNAVAILABLE;
MACRO_ERROR_KM ERROR_WMI_SET_FAILURE;
MACRO_ERROR_KM ERROR_WMI_TRY_AGAIN;
MACRO_ERROR_KM ERROR_WMI_UNRESOLVED_INSTANCE_REF;
MACRO_ERROR_NO ERROR_WORKING_SET_QUOTA;
MACRO_ERROR_NO ERROR_WOW_ASSERTION;
MACRO_ERROR ERROR_WRITE_FAULT;
MACRO_ERROR ERROR_WRITE_PROTECT;
MACRO_ERROR_NO ERROR_WRONG_COMPARTMENT;
MACRO_ERROR ERROR_WRONG_DISK;
MACRO_ERROR_KM ERROR_WRONG_EFS;
MACRO_ERROR_NO ERROR_WRONG_PASSWORD;
MACRO_ERROR_NO ERROR_WRONG_TARGET_NAME;
MACRO_ERROR_NO ERROR_XMLDSIG_ERROR;
MACRO_ERROR_IPSEC_IKE ERROR_XML_ENCODING_MISMATCH;
MACRO_ERROR_NO ERROR_XML_PARSE_ERROR;
MACRO_ESPIPE ESPIPE;
MACRO_ESRCH ESRCH;
MACRO_ES ES_CONTINUOUS;
MACRO_ES ES_DISPLAY_REQUIRED;
MACRO_ES ES_SYSTEM_REQUIRED;
MACRO_ES ES_USER_PRESENT;
MACRO_ETO ETO_CLIPPED;
MACRO_ETO ETO_GLYPH_INDEX;
MACRO_ETO ETO_GRAYED;
MACRO_ETO ETO_IGNORELANGUAGE;
MACRO_ETO ETO_NUMERICSLATIN;
MACRO_ETO ETO_NUMERICSLOCAL;
MACRO_ETO ETO_OPAQUE;
MACRO_ETO ETO_PDY;
MACRO_ETO ETO_REVERSE_INDEX_MAP;
MACRO_ETO ETO_RTLREADING;
MACRO_EVENTLOG EVENTLOG_AUDIT_FAILURE;
MACRO_EVENTLOG EVENTLOG_AUDIT_SUCCESS;
MACRO_EVENTLOG EVENTLOG_BACKWARDS_READ;
MACRO_EVENTLOG EVENTLOG_ERROR_TYPE;
MACRO_EVENTLOG EVENTLOG_FORWARDS_READ;
MACRO_EVENTLOG EVENTLOG_INFORMATION_TYPE;
MACRO_EVENTLOG EVENTLOG_SEEK_READ;
MACRO_EVENTLOG EVENTLOG_SEQUENTIAL_READ;
MACRO_EVENTLOG EVENTLOG_SUCCESS;
MACRO_EVENTLOG EVENTLOG_WARNING_TYPE;
MACRO_EVENT EVENT_PAIR_ALL_ACCESS;
MACRO_QUERY_STATE EVENT_QUERY_STATE;
MACRO_EWOULDBLOCK EWOULDBLOCK;
MACRO_EXCEPTION_DIVIDED EXCEPTION_ALIGNMENT_CHECK;
MACRO_EXCEPTION_DIVIDED EXCEPTION_BOUND_CHECK;
MACRO_EXCEPTION_READ EXCEPTION_COLLIDED_UNWIND;
MACRO_EXCEPTION EXCEPTION_CONTINUE_EXECUTION;
MACRO_EXCEPTION EXCEPTION_CONTINUE_SEARCH;
MACRO_EXCEPTION_DIVIDED EXCEPTION_DEBUG;
MACRO_EXCEPTION_DIVIDED EXCEPTION_DIVIDED_BY_ZERO;
MACRO_EXCEPTION_DIVIDED EXCEPTION_DOUBLE_FAULT;
MACRO_EXCEPTION_READ EXCEPTION_EXECUTE_FAULT;
MACRO_EXCEPTION EXCEPTION_EXECUTE_HANDLER;
MACRO_EXCEPTION_READ EXCEPTION_EXIT_UNWIND;
MACRO_EXCEPTION_DIVIDED EXCEPTION_GP_FAULT;
MACRO_EXCEPTION_DIVIDED EXCEPTION_INT3;
MACRO_EXCEPTION_DIVIDED EXCEPTION_INVALID_OPCODE;
MACRO_EXCEPTION_DIVIDED EXCEPTION_INVALID_TSS;
MACRO_EXCEPTION_READ EXCEPTION_MAXIMUM_PARAMETERS;
MACRO_EXCEPTION_READ EXCEPTION_NESTED_CALL;
MACRO_EXCEPTION_DIVIDED EXCEPTION_NMI;
MACRO_EXCEPTION_READ EXCEPTION_NONCONTINUABLE;
MACRO_EXCEPTION_DIVIDED EXCEPTION_NPX_ERROR;
MACRO_EXCEPTION_DIVIDED EXCEPTION_NPX_NOT_AVAILABLE;
MACRO_EXCEPTION_DIVIDED EXCEPTION_NPX_OVERRUN;
MACRO_EXCEPTION_READ EXCEPTION_READ_FAULT;
MACRO_EXCEPTION_RECORD EXCEPTION_RECORD_EXCEPTION_ADDRESS;
MACRO_EXCEPTION_RECORD EXCEPTION_RECORD_EXCEPTION_CODE;
MACRO_EXCEPTION_RECORD EXCEPTION_RECORD_EXCEPTION_FLAGS;
MACRO_EXCEPTION_RECORD EXCEPTION_RECORD_EXCEPTION_RECORD;
MACRO_EXCEPTION_RECORD_LENGTH EXCEPTION_RECORD_LENGTH;
MACRO_EXCEPTION_RECORD EXCEPTION_RECORD_NUMBER_PARAMETERS;
MACRO_EXCEPTION_DIVIDED EXCEPTION_RESERVED_TRAP;
MACRO_EXCEPTION_DIVIDED EXCEPTION_SEGMENT_NOT_PRESENT;
MACRO_EXCEPTION_DIVIDED EXCEPTION_STACK_FAULT;
MACRO_EXCEPTION_READ EXCEPTION_STACK_INVALID;
MACRO_EXCEPTION_READ EXCEPTION_TARGET_UNWIND;
MACRO_EXCEPTION_READ EXCEPTION_UNWIND;
MACRO_EXCEPTION_READ EXCEPTION_UNWINDING;
MACRO_EXCEPTION_READ EXCEPTION_WRITE_FAULT;
MACRO_EXDEV EXDEV;
MACRO_GETTRACKKERNTABLE EXTTEXTOUT;
MACRO_EXT EXT_DEVICE_CAPS;
MACRO_EX EX_PUSH_LOCK_FLAGS_EXCLUSIVE;
MACRO_EX EX_PUSH_LOCK_FLAGS_WAIT;
MACRO_EX EX_PUSH_LOCK_FLAGS_WAIT_V;
MACRO_EX EX_PUSH_LOCK_LOCK;
MACRO_EX EX_PUSH_LOCK_LOCK_V;
MACRO_EX EX_PUSH_LOCK_MULTIPLE_SHARED;
MACRO_EX EX_PUSH_LOCK_PTR_BITS;
MACRO_EX EX_PUSH_LOCK_SHARE_INC;
MACRO_EX EX_PUSH_LOCK_WAITING;
MACRO_EX EX_PUSH_LOCK_WAKING;
_INTERFACE_TYPE Eisa;
_BUS_DATA_TYPE EisaConfiguration;
BOOL __stdcall Ellipse(HDC, int, int, int, int);
_APPCOMPAT_FLAGS EnableLegacyExceptionHandlingInRPC;
_APPCOMPAT_FLAGS EnableLegacyExceptionHandlinginOLE;
_APPCOMPAT_FLAGS EnableLegacyNTFSFlagsForDocfileOpens;
_APPCOMPAT_USERFLAGS EnableTransparantBltMirror;
_ALTERNATIVE_ARCHITECTURE_TYPE EndAlternatives;
int __stdcall EndDoc(HDC);
int __stdcall EndPage(HDC);
BOOL __stdcall EndPath(HDC);
void __stdcall EngAcquireFastMutex(HFASTMUTEX hfm);
void __stdcall EngAcquireSemaphore(HSEMAPHORE hsem);
BOOL __stdcall EngAcquireSemaphoreNoWait(HSEMAPHORE hsem);
void __stdcall EngAcquireSemaphoreShared(HSEMAPHORE hsem);
PVOID __stdcall EngAllocMem(ULONG fl, ULONG cjMemSize, ULONG ulTag);
PVOID __stdcall EngAllocPrivateUserMem(PDD_SURFACE_LOCAL psl, SIZE_T cjMemSize, ULONG ulTag);
PVOID __stdcall EngAllocUserMem(SIZE_T cjMemSize, ULONG ulTag);
BOOL __stdcall EngAlphaBlend(SURFOBJ *psoDest, SURFOBJ *psoSrc, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclDest, RECTL *prclSrc, BLENDOBJ *pBlendObj);
BOOL __stdcall EngAssociateSurface(HSURF hsurf, HDEV hdev, FLONG flHooks);
BOOL __stdcall EngBitBlt(SURFOBJ *psoTrg, SURFOBJ *psoSrc, SURFOBJ *psoMask, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclTrg, POINTL *pptlSrc, POINTL *pptlMask, BRUSHOBJ *pbo, POINTL *pptlBrush, ROP4 rop4);
void __stdcall EngBugCheckEx(ULONG BugCheckCode, ULONG_PTR P1, ULONG_PTR P2, ULONG_PTR P3, ULONG_PTR P4);
ULONG __stdcall EngCTGetCurrentGamma(HDEV hdev);
void __stdcall EngCTGetGammaTable(ULONG ulGamma, const BYTE **pGammaTable, const BYTE **pInverseGammaTable);
BOOL __stdcall EngCheckAbort(SURFOBJ *pso);
void __stdcall EngClearEvent(PEVENT pEvent);
INT __stdcall EngCombineRgn(HANDLE hrgnTrg, HANDLE hrgnSrc1, HANDLE hrgnSrc2, INT iMode);
FD_GLYPHSET *__stdcall EngComputeGlyphSet(INT nCodePage, INT nFirstChar, INT cChars);
BOOL __stdcall EngControlSprites(WNDOBJ *pwo, FLONG fl);
BOOL __stdcall EngCopyBits(SURFOBJ *psoDest, SURFOBJ *psoSrc, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclDest, POINTL *pptlSrc);
INT __stdcall EngCopyRgn(HANDLE hrgnDst, HANDLE hrgnSrc);
HBITMAP __stdcall EngCreateBitmap(SIZEL sizl, LONG lWidth, ULONG iFormat, FLONG fl, PVOID pvBits);
CLIPOBJ *__stdcall EngCreateClip();
HBITMAP __stdcall EngCreateDeviceBitmap(DHSURF dhsurf, SIZEL sizl, ULONG iFormatCompat);
HSURF __stdcall EngCreateDeviceSurface(DHSURF dhsurf, SIZEL sizl, ULONG iFormatCompat);
HDRVOBJ __stdcall EngCreateDriverObj(PVOID pvObj, FREEOBJPROC pFreeObjProc, HDEV hdev);
BOOL __stdcall EngCreateEvent(PEVENT *ppEvent);
HFASTMUTEX __stdcall EngCreateFastMutex();
HPALETTE __stdcall EngCreatePalette(ULONG iMode, ULONG cColors, ULONG *pulColors, FLONG flRed, FLONG flGreen, FLONG flBlue);
PATHOBJ *__stdcall EngCreatePath();
HANDLE __stdcall EngCreateRectRgn(INT left, INT top, INT right, INT bottom);
HBITMAP __stdcall EngCreateRedirectionDeviceBitmap(DHSURF dhsurf, SIZEL sizl, ULONG iFormatCompat);
HSEMAPHORE __stdcall EngCreateSemaphore();
WNDOBJ *__stdcall EngCreateWnd(SURFOBJ *pso, HWND hwnd, WNDOBJCHANGEPROC pfn, FLONG fl, INT iPixelFormat);
void __stdcall EngDebugBreak();
void __stdcall EngDebugPrint(PCHAR StandardPrefix, PCHAR DebugMessage, va_list ap);
void __stdcall EngDeleteClip(CLIPOBJ *pco);
BOOL __stdcall EngDeleteDriverObj(HDRVOBJ hdo, BOOL bCallBack, BOOL bLocked);
BOOL __stdcall EngDeleteEvent(PEVENT pEvent);
void __stdcall EngDeleteFastMutex(HFASTMUTEX hfm);
BOOL __stdcall EngDeleteFile(LPWSTR pwszFileName);
BOOL __stdcall EngDeletePalette(HPALETTE hpal);
void __stdcall EngDeletePath(PATHOBJ *ppo);
void __stdcall EngDeleteRgn(HANDLE hrgn);
void __stdcall EngDeleteSafeSemaphore(ENGSAFESEMAPHORE *pssem);
void __stdcall EngDeleteSemaphore(HSEMAPHORE hsem);
BOOL __stdcall EngDeleteSurface(HSURF hsurf);
void __stdcall EngDeleteWnd(WNDOBJ *pwo);
DWORD __stdcall EngDeviceIoControl(HANDLE hDevice, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD cjInBufferSize, LPVOID lpOutBuffer, DWORD cjOutBufferSize, LPDWORD lpBytesReturned);
ULONG __stdcall EngDitherColor(HDEV hdev, ULONG iMode, ULONG rgb, ULONG *pul);
HRESULT __stdcall EngDxIoctl(ULONG ulIoctl, PVOID pBuffer, ULONG ulBufferSize);
BOOL __stdcall EngEnumForms(HANDLE hPrinter, DWORD Level, LPBYTE pForm, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
BOOL __stdcall EngEqualRgn(HANDLE hrgn1, HANDLE hrgn2);
BOOL __stdcall EngEraseSurface(SURFOBJ *pso, RECTL *prcl, ULONG iColor);
BOOL __stdcall EngFillPath(SURFOBJ *pso, PATHOBJ *ppo, CLIPOBJ *pco, BRUSHOBJ *pbo, POINTL *pptlBrushOrg, MIX mix, FLONG flOptions);
PVOID __stdcall EngFindImageProcAddress(HANDLE hModule, LPSTR lpProcName);
PVOID __stdcall EngFindResource(HANDLE h, INT iName, INT iType, PULONG pulSize);
PVOID __stdcall EngFntCacheAlloc(ULONG ulFastCheckSum, ULONG cjSize);
void __stdcall EngFntCacheFault(ULONG ulFastCheckSum, ULONG iFaultMode);
PVOID __stdcall EngFntCacheLookUp(ULONG FastCheckSum, ULONG *pulSize);
void __stdcall EngFreeMem(PVOID pv);
void __stdcall EngFreeModule(HANDLE h);
void __stdcall EngFreePrivateUserMem(PDD_SURFACE_LOCAL psl, PVOID pv);
void __stdcall EngFreeUserMem(PVOID pv);
void __stdcall EngGetCurrentCodePage(PUSHORT OemCodePage, PUSHORT AnsiCodePage);
HANDLE __stdcall EngGetCurrentProcessId();
HANDLE __stdcall EngGetCurrentThreadId();
LPWSTR __stdcall EngGetDriverName(HDEV hdev);
BOOL __stdcall EngGetFileChangeTime(HANDLE h, LARGE_INTEGER *pChangeTime);
BOOL __stdcall EngGetFilePath(HANDLE h, WCHAR (*pDest)[261]);
BOOL __stdcall EngGetForm(HANDLE hPrinter, LPWSTR pFormName, DWORD Level, LPBYTE pForm, DWORD cbBuf, LPDWORD pcbNeeded);
ULONG __stdcall EngGetLastError();
BOOL __stdcall EngGetPrinter(HANDLE hPrinter, DWORD dwLevel, LPBYTE pPrinter, DWORD cbBuf, LPDWORD pcbNeeded);
DWORD __stdcall EngGetPrinterData(HANDLE hPrinter, LPWSTR pValueName, LPDWORD pType, LPBYTE pData, DWORD cjSize, LPDWORD pcjNeeded);
LPWSTR __stdcall EngGetPrinterDataFileName(HDEV hdev);
BOOL __stdcall EngGetPrinterDriver(HANDLE hPrinter, LPWSTR pEnvironment, DWORD dwLevel, BYTE *lpbDrvInfo, DWORD cjBufSize, DWORD *pcjNeeded);
HANDLE __stdcall EngGetProcessHandle();
INT __stdcall EngGetRgnBox(HANDLE hrgn, LPRECT prcl);
DWORD __stdcall EngGetRgnData(HANDLE hrgn, DWORD nCount, LPRGNDATA lpRgnData);
BOOL __stdcall EngGetType1FontList(HDEV hdev, TYPE1_FONT *pType1Buffer, ULONG cjType1Buffer, PULONG pulLocalFonts, PULONG pulRemoteFonts, LARGE_INTEGER *pLastModified);
BOOL __stdcall EngGradientFill(SURFOBJ *psoDest, CLIPOBJ *pco, XLATEOBJ *pxlo, TRIVERTEX *pVertex, ULONG nVertex, PVOID pMesh, ULONG nMesh, RECTL *prclExtents, POINTL *pptlDitherOrg, ULONG ulMode);
ULONG __stdcall EngHangNotification(HDEV hDev, PVOID Reserved);
BOOL __stdcall EngInitializeSafeSemaphore(ENGSAFESEMAPHORE *pssem);
INT __stdcall EngIntersectRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
BOOL __stdcall EngIsSemaphoreOwned(HSEMAPHORE hsem);
BOOL __stdcall EngIsSemaphoreOwnedByCurrentThread(HSEMAPHORE hsem);
BOOL __stdcall EngIsSemaphoreSharedByCurrentThread(HSEMAPHORE hsem);
BOOL __stdcall EngLineTo(SURFOBJ *pso, CLIPOBJ *pco, BRUSHOBJ *pbo, LONG x1, LONG y1, LONG x2, LONG y2, RECTL *prclBounds, MIX mix);
HANDLE __stdcall EngLoadImage(LPWSTR pwszDriver);
HANDLE __stdcall EngLoadModule(LPWSTR pwsz);
HANDLE __stdcall EngLoadModuleForWrite(LPWSTR pwsz, ULONG cjSizeOfModule);
PDD_SURFACE_LOCAL __stdcall EngLockDirectDrawSurface(HANDLE hSurface);
DRIVEROBJ *__stdcall EngLockDriverObj(HDRVOBJ hdo);
SURFOBJ *__stdcall EngLockSurface(HSURF hsurf);
BOOL __stdcall EngLpkInstalled();
PEVENT __stdcall EngMapEvent(HDEV hDev, HANDLE hUserObject, PVOID Reserved1, PVOID Reserved2, PVOID Reserved3);
PVOID __stdcall EngMapFile(LPWSTR pwsz, ULONG cjSize, ULONG_PTR *piFile);
BOOL __stdcall EngMapFontFile(ULONG_PTR iFile, PULONG *ppjBuf, ULONG *pcjBuf);
BOOL __stdcall EngMapFontFileFD(ULONG_PTR iFile, PULONG *ppjBuf, ULONG *pcjBuf);
PVOID __stdcall EngMapModule(HANDLE h, PULONG pulSize);
BOOL __stdcall EngMarkBandingSurface(HSURF hsurf);
BOOL __stdcall EngModifySurface(HSURF hsurf, HDEV hdev, FLONG flHooks, FLONG flSurface, DHSURF dhsurf, PVOID pvScan0, LONG lDelta, PVOID pvReserved);
void __stdcall EngMovePointer(SURFOBJ *pso, LONG x, LONG y, RECTL *prcl);
INT __stdcall EngMulDiv(INT a, INT b, INT c);
void __stdcall EngMultiByteToUnicodeN(LPWSTR UnicodeString, ULONG MaxBytesInUnicodeString, PULONG BytesInUnicodeString, PCHAR MultiByteString, ULONG BytesInMultiByteString);
INT __stdcall EngMultiByteToWideChar(UINT CodePage, LPWSTR WideCharString, INT cjWideCharString, LPSTR MultiByteString, INT cjMultiByteString);
_ENG_SYSTEM_ATTRIBUTE EngNumberOfProcessors;
INT __stdcall EngOffsetRgn(HANDLE hrgn, INT x, INT y);
_ENG_SYSTEM_ATTRIBUTE EngOptimumAvailableSystemMemory;
_ENG_SYSTEM_ATTRIBUTE EngOptimumAvailableUserMemory;
BOOL __stdcall EngPaint(SURFOBJ *pso, CLIPOBJ *pco, BRUSHOBJ *pbo, POINTL *pptlBrushOrg, MIX mix);
BOOL __stdcall EngPlgBlt(SURFOBJ *psoTrg, SURFOBJ *psoSrc, SURFOBJ *psoMsk, CLIPOBJ *pco, XLATEOBJ *pxlo, COLORADJUSTMENT *pca, POINTL *pptlBrushOrg, POINTFIX *pptfx, RECTL *prcl, POINTL *pptl, ULONG iMode);
void __stdcall EngProbeForRead(PVOID Address, SIZE_T Length, ULONG Alignment);
void __stdcall EngProbeForReadAndWrite(PVOID Address, SIZE_T Length, ULONG Alignment);
_ENG_SYSTEM_ATTRIBUTE EngProcessorFeature;
BOOL __stdcall EngQueryDeviceAttribute(HDEV hdev, ENG_DEVICE_ATTRIBUTE devAttr, PVOID pvIn, ULONG cjInSize, PVOID pvOut, ULONG cjOutSize);
BOOL __stdcall EngQueryEMFInfo(HDEV hdev, EMFINFO *pEMFInfo);
LARGE_INTEGER __stdcall EngQueryFileTimeStamp(LPWSTR pwsz);
void __stdcall EngQueryLocalTime(PENG_TIME_FIELDS ptf);
ULONG __stdcall EngQueryPalette(HPALETTE hPal, ULONG *piMode, ULONG cColors, ULONG *pulColors);
void __stdcall EngQueryPerformanceCounter(LONGLONG *pPerformanceCount);
void __stdcall EngQueryPerformanceFrequency(LONGLONG *pFrequency);
BOOL __stdcall EngQuerySystemAttribute(ENG_SYSTEM_ATTRIBUTE CapNum, PDWORD pCapability);
LONG __stdcall EngReadStateEvent(PEVENT pEvent);
BOOL __stdcall EngRectInRgn(HANDLE hrgn, LPRECT prcl);
void __stdcall EngReleaseFastMutex(HFASTMUTEX hfm);
void __stdcall EngReleaseSemaphore(HSEMAPHORE hsem);
void __stdcall EngRenderHint(DHPDEV dhpdev, ULONG NotifyCode, SIZE_T Length, PVOID Data);
BOOL __stdcall EngRestoreFloatingPointState(PVOID pBuffer);
ULONG __stdcall EngSaveFloatingPointState(PVOID pBuffer, ULONG cjBufferSize);
HANDLE __stdcall EngSecureMem(PVOID Address, ULONG cjLength);
LONG __stdcall EngSetEvent(PEVENT pEvent);
void __stdcall EngSetLastError(ULONG iError);
ULONG __stdcall EngSetPointerShape(SURFOBJ *pso, SURFOBJ *psoMask, SURFOBJ *psoColor, XLATEOBJ *pxlo, LONG xHot, LONG yHot, LONG x, LONG y, RECTL *prcl, FLONG fl);
BOOL __stdcall EngSetPointerTag(HDEV hdev, SURFOBJ *psoMask, SURFOBJ *psoColor, XLATEOBJ *pxlo, FLONG fl);
DWORD __stdcall EngSetPrinterData(HANDLE hPrinter, LPWSTR pType, DWORD dwType, LPBYTE lpbPrinterData, DWORD cjPrinterData);
BOOL __stdcall EngSetRectRgn(HANDLE hrgn, INT left, INT top, INT right, INT bottom);
void __stdcall EngSort(PBYTE pjBuf, ULONG c, ULONG cjElem, SORTCOMP pfnComp);
BOOL __stdcall EngStretchBlt(SURFOBJ *psoDest, SURFOBJ *psoSrc, SURFOBJ *psoMask, CLIPOBJ *pco, XLATEOBJ *pxlo, COLORADJUSTMENT *pca, POINTL *pptlHTOrg, RECTL *prclDest, RECTL *prclSrc, POINTL *pptlMask, ULONG iMode);
BOOL __stdcall EngStretchBltROP(SURFOBJ *psoDest, SURFOBJ *psoSrc, SURFOBJ *psoMask, CLIPOBJ *pco, XLATEOBJ *pxlo, COLORADJUSTMENT *pca, POINTL *pptlHTOrg, RECTL *prclDest, RECTL *prclSrc, POINTL *pptlMask, ULONG iMode, BRUSHOBJ *pbo, DWORD rop4);
BOOL __stdcall EngStrokeAndFillPath(SURFOBJ *pso, PATHOBJ *ppo, CLIPOBJ *pco, XFORMOBJ *pxo, BRUSHOBJ *pboStroke, LINEATTRS *plineattrs, BRUSHOBJ *pboFill, POINTL *pptlBrushOrg, MIX mixFill, FLONG flOptions);
BOOL __stdcall EngStrokePath(SURFOBJ *pso, PATHOBJ *ppo, CLIPOBJ *pco, XFORMOBJ *pxo, BRUSHOBJ *pbo, POINTL *pptlBrushOrg, LINEATTRS *plineattrs, MIX mix);
INT __stdcall EngSubtractRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
BOOL __stdcall EngTextOut(SURFOBJ *pso, STROBJ *pstro, FONTOBJ *pfo, CLIPOBJ *pco, RECTL *prclExtra, RECTL *prclOpaque, BRUSHOBJ *pboFore, BRUSHOBJ *pboOpaque, POINTL *pptlOrg, MIX mix);
BOOL __stdcall EngTransparentBlt(SURFOBJ *psoDst, SURFOBJ *psoSrc, CLIPOBJ *pco, XLATEOBJ *pxlo, RECTL *prclDst, RECTL *prclSrc, ULONG iTransColor, ULONG ulReserved);
void __stdcall EngUnicodeToMultiByteN(PCHAR pchMultiByteString, ULONG cjMultiByteBuf, PULONG pcjMultiByteString, PWSTR pwszUnicodeString, ULONG cjUnicodeString);
INT __stdcall EngUnionRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
void __stdcall EngUnloadImage(HANDLE hModule);
BOOL __stdcall EngUnlockDirectDrawSurface(PDD_SURFACE_LOCAL pSurface);
BOOL __stdcall EngUnlockDriverObj(HDRVOBJ hdo);
void __stdcall EngUnlockSurface(SURFOBJ *pso);
BOOL __stdcall EngUnmapEvent(PEVENT pEvent);
BOOL __stdcall EngUnmapFile(ULONG_PTR iFile);
void __stdcall EngUnmapFontFile(ULONG_PTR iFile);
void __stdcall EngUnmapFontFileFD(ULONG_PTR iFile);
void __stdcall EngUnsecureMem(HANDLE hSecure);
BOOL __stdcall EngUpdateDeviceSurface(SURFOBJ *pso, CLIPOBJ **ppco);
BOOL __stdcall EngWaitForSingleObject(PEVENT pEvent, PLARGE_INTEGER pTimeOut);
INT __stdcall EngWideCharToMultiByte(UINT CodePage, LPWSTR pwszWideCharString, INT cjWideCharString, LPSTR pszMultiByteString, INT cjMultiByteString);
BOOL __stdcall EngWritePrinter(HANDLE hPrinter, LPVOID pvBuf, DWORD cjBuf, LPDWORD pcWritten);
INT __stdcall EngXorRgn(HANDLE hrgnResult, HANDLE hRgnA, HANDLE hRgnB);
BOOL __stdcall EnumEnhMetaFile(HDC, HENHMETAFILE, ENHMFENUMPROC, PVOID, LPCRECT);
int __stdcall EnumFontFamiliesA(HDC, LPCSTR, FONTENUMPROCA, LPARAM);
int __stdcall EnumFontFamiliesExA(HDC, PLOGFONTA, FONTENUMPROCA, LPARAM, DWORD);
int __stdcall EnumFontFamiliesExW(HDC, PLOGFONTW, FONTENUMPROCW, LPARAM, DWORD);
int __stdcall EnumFontFamiliesW(HDC, LPCWSTR, FONTENUMPROCW, LPARAM);
int __stdcall EnumFontsA(HDC, LPCSTR, FONTENUMPROCA, LPARAM);
int __stdcall EnumFontsW(HDC, LPCWSTR, FONTENUMPROCW, LPARAM);
int __stdcall EnumICMProfilesA(HDC, ICMENUMPROCA, LPARAM);
int __stdcall EnumICMProfilesW(HDC, ICMENUMPROCW, LPARAM);
BOOL __stdcall EnumMetaFile(HDC, HMETAFILE, MFENUMPROC, LPARAM);
int __stdcall EnumObjects(HDC, int, GOBJENUMPROC, LPARAM);
$A98B79572840FDA381AA9CDCE69D1BC8 EqualPriority;
BOOL __stdcall EqualRgn(HRGN, HRGN);
int __stdcall Escape(HDC hdc, int iEscape, int cjIn, LPCSTR pvIn, LPVOID pvOut);
_EVENT_INFORMATION_CLASS EventBasicInformation;
_KOBJECTS EventNotificationObject;
_KOBJECTS EventPairObject;
_KOBJECTS EventSynchronizationObject;
_EXCEPTION_DISPOSITION ExceptionCollidedUnwind;
_EXCEPTION_DISPOSITION ExceptionContinueExecution;
_EXCEPTION_DISPOSITION ExceptionContinueSearch;
_EXCEPTION_DISPOSITION ExceptionNestedException;
int __stdcall ExcludeClipRect(HDC, int, int, int, int);
int __stdcall ExcludeUpdateRgn(HDC, HWND);
_KWAIT_REASON Executive;
HPEN __stdcall ExtCreatePen(DWORD iPenStyle, DWORD cWidth, const LOGBRUSH *plbrush, DWORD cStyle, const DWORD *pstyle);
HRGN __stdcall ExtCreateRegion(const XFORM *lpx, DWORD nCount, const RGNDATA *lpData);
int __stdcall ExtEscape(HDC hdc, int iEscape, int cjInput, LPCSTR lpInData, int cjOutput, LPSTR lpOutData);
BOOL __stdcall ExtFloodFill(HDC, int, int, COLORREF, UINT);
int __stdcall ExtSelectClipRgn(HDC, HRGN, int);
BOOL __stdcall ExtTextOutA(HDC hdc, int x, int y, UINT options, const RECT *lprect, LPCSTR lpString, UINT c, const INT *lpDx);
BOOL __stdcall ExtTextOutW(HDC hdc, int x, int y, UINT options, const RECT *lprect, LPCWSTR lpString, UINT c, const INT *lpDx);
_MEDIA_TYPE F3_120M_512;
_MEDIA_TYPE F3_128Mb_512;
_MEDIA_TYPE F3_1Pt23_1024;
_MEDIA_TYPE F3_1Pt2_512;
_MEDIA_TYPE F3_1Pt44_512;
_MEDIA_TYPE F3_200Mb_512;
_MEDIA_TYPE F3_20Pt8_512;
_MEDIA_TYPE F3_230Mb_512;
_MEDIA_TYPE F3_240M_512;
_MEDIA_TYPE F3_2Pt88_512;
_MEDIA_TYPE F3_32M_512;
_MEDIA_TYPE F3_640_512;
_MEDIA_TYPE F3_720_512;
_MEDIA_TYPE F5_160_512;
_MEDIA_TYPE F5_180_512;
_MEDIA_TYPE F5_1Pt23_1024;
_MEDIA_TYPE F5_1Pt2_512;
_MEDIA_TYPE F5_320_1024;
_MEDIA_TYPE F5_320_512;
_MEDIA_TYPE F5_360_512;
_MEDIA_TYPE F5_640_512;
_MEDIA_TYPE F5_720_512;
_MEDIA_TYPE F8_256_128;
MACRO_FACILITY FACILITY_AAF;
MACRO_FACILITY_DEBUGGER FACILITY_ACPI_ERROR_CODE;
MACRO_FACILITY FACILITY_ACS;
MACRO_FACILITY FACILITY_BACKGROUNDCOPY;
MACRO_FACILITY FACILITY_CERT;
MACRO_FACILITY_DEBUGGER FACILITY_CLUSTER_ERROR_CODE;
MACRO_FACILITY FACILITY_COMMONLOG;
MACRO_FACILITY FACILITY_COMPLUS;
MACRO_FACILITY FACILITY_CONFIGURATION;
MACRO_FACILITY FACILITY_CONTROL;
MACRO_FACILITY_DEBUGGER FACILITY_DEBUGGER;
MACRO_FACILITY FACILITY_DIRECT3D11;
MACRO_FACILITY FACILITY_DIRECTORYSERVICE;
MACRO_FACILITY FACILITY_DISPATCH;
MACRO_FACILITY FACILITY_DPLAY;
MACRO_FACILITY_DEBUGGER FACILITY_FIREWIRE_ERROR_CODE;
MACRO_FACILITY FACILITY_FVE;
MACRO_FACILITY FACILITY_GRAPHICS;
MACRO_FACILITY_DEBUGGER FACILITY_HID_ERROR_CODE;
MACRO_FACILITY FACILITY_HTTP;
MACRO_FACILITY FACILITY_INTERNET;
MACRO_FACILITY_DEBUGGER FACILITY_IO_ERROR_CODE;
MACRO_FACILITY FACILITY_ITF;
MACRO_FACILITY FACILITY_MEDIASERVER;
MACRO_FACILITY FACILITY_METADIRECTORY;
MACRO_FACILITY FACILITY_MSMQ;
MACRO_FACILITY_NT FACILITY_NT_BIT;
MACRO_FACILITY FACILITY_NULL;
MACRO_FACILITY FACILITY_PLA;
MACRO_FACILITY FACILITY_RPC;
MACRO_FACILITY_DEBUGGER FACILITY_RPC_RUNTIME;
MACRO_FACILITY_DEBUGGER FACILITY_RPC_STUBS;
MACRO_FACILITY FACILITY_SCARD;
MACRO_FACILITY FACILITY_SECURITY;
MACRO_FACILITY FACILITY_SETUPAPI;
MACRO_FACILITY FACILITY_SHELL;
MACRO_FACILITY FACILITY_SSPI;
MACRO_FACILITY FACILITY_STATE_MANAGEMENT;
MACRO_FACILITY FACILITY_STORAGE;
MACRO_FACILITY FACILITY_SXS;
MACRO_FACILITY_DEBUGGER FACILITY_SXS_ERROR_CODE;
MACRO_FACILITY_DEBUGGER FACILITY_TERMINAL_SERVER;
MACRO_FACILITY FACILITY_TPM_SERVICES;
MACRO_FACILITY FACILITY_TPM_SOFTWARE;
MACRO_FACILITY FACILITY_UMI;
MACRO_FACILITY FACILITY_URT;
MACRO_FACILITY_DEBUGGER FACILITY_USB_ERROR_CODE;
MACRO_FACILITY FACILITY_USERMODE_FILTER_MANAGER;
MACRO_FACILITY FACILITY_WIN32;
MACRO_FACILITY FACILITY_WINDOWS;
MACRO_FACILITY FACILITY_WINDOWSUPDATE;
MACRO_FACILITY FACILITY_WINDOWS_CE;
MACRO_FACILITY FACILITY_WINDOWS_DEFENDER;
MACRO_ACCESS_ACE_FLAG FAILED_ACCESS_ACE_FLAG;
MACRO_BOOL FALSE;
MACRO_FC FC_COMPLEX;
MACRO_FC FC_RECT;
MACRO_FC FC_RECT4;
MACRO_FDM FDM_TYPE_BM_SIDE_CONST;
MACRO_FDM FDM_TYPE_CHAR_INC_EQUAL_BM_BASE;
MACRO_FDM FDM_TYPE_CONST_BEARINGS;
MACRO_FDM FDM_TYPE_MAXEXT_EQUAL_BM_SIDE;
MACRO_FDM FDM_TYPE_ZERO_BEARINGS;
MACRO_FD FD_ERROR;
MACRO_FD_NEGATIVE FD_NEGATIVE_FONT;
MACRO_FF FF_DECORATIVE;
MACRO_FF FF_DONTCARE;
MACRO_FF_SIGNATURE FF_IGNORED_SIGNATURE;
MACRO_FF FF_MODERN;
MACRO_FF FF_ROMAN;
MACRO_FF FF_SCRIPT;
MACRO_FF_SIGNATURE FF_SIGNATURE_VERIFIED;
MACRO_FF FF_SWISS;
MACRO_FIBER FIBER_ACTIVATION_CONTEXT_STACK;
MACRO_FIBER FIBER_CONTEXT;
MACRO_FIBER FIBER_CONTEXT_DR6;
MACRO_FIBER FIBER_CONTEXT_EAX;
MACRO_FIBER FIBER_CONTEXT_EBP;
MACRO_FIBER FIBER_CONTEXT_EBX;
MACRO_FIBER FIBER_CONTEXT_ECX;
MACRO_FIBER FIBER_CONTEXT_EDI;
MACRO_FIBER FIBER_CONTEXT_EDX;
MACRO_FIBER FIBER_CONTEXT_EIP;
MACRO_FIBER FIBER_CONTEXT_ESI;
MACRO_FIBER FIBER_CONTEXT_ESP;
MACRO_FIBER FIBER_CONTEXT_FLAGS;
MACRO_FIBER FIBER_CONTEXT_FLOAT_SAVE_CONTROL_WORD;
MACRO_FIBER FIBER_CONTEXT_FLOAT_SAVE_STATUS_WORD;
MACRO_FIBER FIBER_CONTEXT_FLOAT_SAVE_TAG_WORD;
MACRO_FIBER FIBER_DEALLOCATION_STACK;
MACRO_FIBER FIBER_EXCEPTION_LIST;
MACRO_FIBER FIBER_FLS_DATA;
MACRO_FIBER FIBER_GUARANTEED_STACK_BYTES;
MACRO_FIBER FIBER_PARAMETER;
MACRO_FIBER FIBER_STACK_BASE;
MACRO_FIBER FIBER_STACK_LIMIT;
MACRO_MAX FILENAME_MAX;
MACRO_FILESYSTEM FILESYSTEM_STATISTICS_TYPE_EXFAT;
MACRO_FILESYSTEM FILESYSTEM_STATISTICS_TYPE_FAT;
MACRO_FILESYSTEM FILESYSTEM_STATISTICS_TYPE_NTFS;
MACRO_FILE_ACTION FILE_ACTION_ADDED;
MACRO_FILE_ACTION FILE_ACTION_ADDED_STREAM;
MACRO_FILE_ACTION FILE_ACTION_ID_NOT_TUNNELLED;
MACRO_FILE_ACTION FILE_ACTION_MODIFIED;
MACRO_FILE_ACTION FILE_ACTION_MODIFIED_STREAM;
MACRO_FILE_ACTION FILE_ACTION_REMOVED;
MACRO_FILE_ACTION FILE_ACTION_REMOVED_BY_DELETE;
MACRO_FILE_ACTION FILE_ACTION_REMOVED_STREAM;
MACRO_FILE_ACTION FILE_ACTION_RENAMED_NEW_NAME;
MACRO_FILE_ACTION FILE_ACTION_RENAMED_OLD_NAME;
MACRO_FILE_ACTION FILE_ACTION_TUNNELLED_ID_COLLISION;
MACRO_FILE FILE_ADD_FILE;
MACRO_FILE FILE_ADD_SUBDIRECTORY;
MACRO_FILE_DEVICE FILE_ANY_ACCESS;
MACRO_FILE FILE_APPEND_DATA;
MACRO_FILE FILE_ATTRIBUTE_ARCHIVE;
MACRO_FILE FILE_ATTRIBUTE_COMPRESSED;
MACRO_FILE FILE_ATTRIBUTE_DEVICE;
MACRO_FILE FILE_ATTRIBUTE_DIRECTORY;
MACRO_FILE FILE_ATTRIBUTE_ENCRYPTED;
MACRO_FILE FILE_ATTRIBUTE_HIDDEN;
MACRO_FILE FILE_ATTRIBUTE_INTEGRITY_STREAM;
MACRO_FILE FILE_ATTRIBUTE_NORMAL;
MACRO_FILE FILE_ATTRIBUTE_NOT_CONTENT_INDEXED;
MACRO_FILE FILE_ATTRIBUTE_OFFLINE;
MACRO_FILE FILE_ATTRIBUTE_READONLY;
MACRO_FILE FILE_ATTRIBUTE_REPARSE_POINT;
MACRO_FILE FILE_ATTRIBUTE_SPARSE_FILE;
MACRO_FILE FILE_ATTRIBUTE_SYSTEM;
MACRO_FILE FILE_ATTRIBUTE_TEMPORARY;
MACRO_FILE FILE_ATTRIBUTE_VALID_FLAGS;
MACRO_FILE FILE_ATTRIBUTE_VALID_SET_FLAGS;
MACRO_FILE_SUPERSEDED FILE_AUTOGENERATED_DEVICE_NAME;
MACRO_FILE FILE_CASE_PRESERVED_NAMES;
MACRO_FILE FILE_CASE_SENSITIVE_SEARCH;
MACRO_FILE FILE_COMPLETE_IF_OPLOCKED;
MACRO_FILE FILE_COPY_STRUCTURED_STORAGE;
MACRO_FILE_SUPERSEDED FILE_CREATE;
MACRO_FILE_SUPERSEDED FILE_CREATED;
MACRO_FILE FILE_CREATE_PIPE_INSTANCE;
MACRO_FILE FILE_CREATE_TREE_CONNECTION;
MACRO_FILE_VOLUME FILE_DAX_VOLUME;
MACRO_FILE FILE_DELETE_CHILD;
MACRO_FILE FILE_DELETE_ON_CLOSE;
MACRO_FILE_DEVICE FILE_DEVICE_8042_PORT;
MACRO_FILE_DEVICE FILE_DEVICE_ACPI;
MACRO_FILE_DEVICE FILE_DEVICE_BATTERY;
MACRO_FILE_DEVICE FILE_DEVICE_BEEP;
MACRO_FILE_DEVICE FILE_DEVICE_BUS_EXTENDER;
MACRO_FILE_DEVICE FILE_DEVICE_CD_ROM;
MACRO_FILE_DEVICE FILE_DEVICE_CD_ROM_FILE_SYSTEM;
MACRO_FILE_DEVICE FILE_DEVICE_CHANGER;
MACRO_FILE_DEVICE FILE_DEVICE_CONTROLLER;
MACRO_FILE_DEVICE FILE_DEVICE_DATALINK;
MACRO_FILE_DEVICE FILE_DEVICE_DFS;
MACRO_FILE_DEVICE FILE_DEVICE_DFS_FILE_SYSTEM;
MACRO_FILE_DEVICE FILE_DEVICE_DFS_VOLUME;
MACRO_FILE_DEVICE FILE_DEVICE_DISK;
MACRO_FILE_DEVICE FILE_DEVICE_DISK_FILE_SYSTEM;
MACRO_FILE_DEVICE FILE_DEVICE_DVD;
MACRO_FILE_DEVICE FILE_DEVICE_FILE_SYSTEM;
MACRO_FILE_DEVICE FILE_DEVICE_FULLSCREEN_VIDEO;
MACRO_FILE_DEVICE FILE_DEVICE_INPORT_PORT;
MACRO_FILE_SUPERSEDED FILE_DEVICE_IS_MOUNTED;
MACRO_FILE_DEVICE FILE_DEVICE_KEYBOARD;
MACRO_FILE_DEVICE FILE_DEVICE_KS;
MACRO_FILE_DEVICE FILE_DEVICE_KSEC;
MACRO_FILE_DEVICE FILE_DEVICE_MAILSLOT;
MACRO_FILE_DEVICE FILE_DEVICE_MASS_STORAGE;
MACRO_FILE_DEVICE FILE_DEVICE_MIDI_IN;
MACRO_FILE_DEVICE FILE_DEVICE_MIDI_OUT;
MACRO_FILE_DEVICE FILE_DEVICE_MODEM;
MACRO_FILE_DEVICE FILE_DEVICE_MOUSE;
MACRO_FILE_DEVICE FILE_DEVICE_MULTI_UNC_PROVIDER;
MACRO_FILE_DEVICE FILE_DEVICE_NAMED_PIPE;
MACRO_FILE_DEVICE FILE_DEVICE_NETWORK;
MACRO_FILE_DEVICE FILE_DEVICE_NETWORK_BROWSER;
MACRO_FILE_DEVICE FILE_DEVICE_NETWORK_FILE_SYSTEM;
MACRO_FILE_DEVICE FILE_DEVICE_NETWORK_REDIRECTOR;
MACRO_FILE_DEVICE FILE_DEVICE_NULL;
MACRO_FILE_DEVICE FILE_DEVICE_PARALLEL_PORT;
MACRO_FILE_DEVICE FILE_DEVICE_PHYSICAL_NETCARD;
MACRO_FILE_DEVICE FILE_DEVICE_PRINTER;
MACRO_FILE_DEVICE FILE_DEVICE_SCANNER;
MACRO_FILE_DEVICE FILE_DEVICE_SCREEN;
MACRO_FILE_SUPERSEDED FILE_DEVICE_SECURE_OPEN;
MACRO_FILE_DEVICE FILE_DEVICE_SERENUM;
MACRO_FILE_DEVICE FILE_DEVICE_SERIAL_MOUSE_PORT;
MACRO_FILE_DEVICE FILE_DEVICE_SERIAL_PORT;
MACRO_FILE_DEVICE FILE_DEVICE_SMARTCARD;
MACRO_FILE_DEVICE FILE_DEVICE_SMB;
MACRO_FILE_DEVICE FILE_DEVICE_SOUND;
MACRO_FILE_DEVICE FILE_DEVICE_STREAMS;
MACRO_FILE_DEVICE FILE_DEVICE_TAPE;
MACRO_FILE_DEVICE FILE_DEVICE_TAPE_FILE_SYSTEM;
MACRO_FILE_DEVICE FILE_DEVICE_TERMSRV;
MACRO_FILE_DEVICE FILE_DEVICE_TRANSPORT;
MACRO_FILE_DEVICE FILE_DEVICE_UNKNOWN;
MACRO_FILE_DEVICE FILE_DEVICE_VDM;
MACRO_FILE_DEVICE FILE_DEVICE_VIDEO;
MACRO_FILE_DEVICE FILE_DEVICE_VIRTUAL_DISK;
MACRO_FILE_DEVICE FILE_DEVICE_WAVE_IN;
MACRO_FILE_DEVICE FILE_DEVICE_WAVE_OUT;
MACRO_FILE FILE_DIRECTORY_FILE;
MACRO_FILE_SUPERSEDED FILE_DOES_NOT_EXIST;
MACRO_FILE FILE_EXECUTE;
MACRO_FILE_SUPERSEDED FILE_EXISTS;
MACRO_FILE FILE_FILE_COMPRESSION;
MACRO_FILE_SUPERSEDED FILE_FLOPPY_DISKETTE;
MACRO_FILE FILE_LIST_DIRECTORY;
MACRO_FILE_SUPERSEDED FILE_MAXIMUM_DISPOSITION;
MACRO_FILE_VOLUME FILE_NAMED_STREAMS;
MACRO_FILE FILE_NON_DIRECTORY_FILE;
MACRO_FILE FILE_NOTIFY_CHANGE_ATTRIBUTES;
MACRO_FILE FILE_NOTIFY_CHANGE_CREATION;
MACRO_FILE FILE_NOTIFY_CHANGE_DIR_NAME;
MACRO_FILE FILE_NOTIFY_CHANGE_EA;
MACRO_FILE FILE_NOTIFY_CHANGE_FILE_NAME;
MACRO_FILE FILE_NOTIFY_CHANGE_LAST_ACCESS;
MACRO_FILE FILE_NOTIFY_CHANGE_LAST_WRITE;
MACRO_FILE FILE_NOTIFY_CHANGE_NAME;
MACRO_FILE FILE_NOTIFY_CHANGE_SECURITY;
MACRO_FILE FILE_NOTIFY_CHANGE_SIZE;
MACRO_FILE FILE_NOTIFY_CHANGE_STREAM_NAME;
MACRO_FILE FILE_NOTIFY_CHANGE_STREAM_SIZE;
MACRO_FILE FILE_NOTIFY_CHANGE_STREAM_WRITE;
MACRO_FILE FILE_NOTIFY_VALID_MASK;
MACRO_FILE FILE_NO_COMPRESSION;
MACRO_FILE FILE_NO_EA_KNOWLEDGE;
MACRO_FILE FILE_NO_INTERMEDIATE_BUFFERING;
MACRO_FILE_SUPERSEDED FILE_OPEN;
MACRO_FILE_SUPERSEDED FILE_OPENED;
MACRO_FILE FILE_OPEN_BY_FILE_ID;
MACRO_FILE FILE_OPEN_FOR_BACKUP_INTENT;
MACRO_FILE FILE_OPEN_FOR_FREE_SPACE_QUERY;
MACRO_FILE_SUPERSEDED FILE_OPEN_IF;
MACRO_FILE FILE_OPEN_NO_RECALL;
MACRO_FILE FILE_OPEN_REMOTE_INSTANCE;
MACRO_FILE FILE_OPEN_REPARSE_POINT;
MACRO_FILE_SUPERSEDED FILE_OVERWRITE;
MACRO_FILE_SUPERSEDED FILE_OVERWRITE_IF;
MACRO_FILE_SUPERSEDED FILE_OVERWRITTEN;
MACRO_FILE FILE_PERSISTENT_ACLS;
MACRO_FILE_SUPERSEDED FILE_PIPE_BYTE_STREAM_MODE;
MACRO_FILE_SUPERSEDED FILE_PIPE_BYTE_STREAM_TYPE;
MACRO_FILE_SUPERSEDED FILE_PIPE_CLIENT_END;
MACRO_FILE_SUPERSEDED FILE_PIPE_COMPLETE_OPERATION;
MACRO_FILE_SUPERSEDED FILE_PIPE_FULL_DUPLEX;
MACRO_FILE_SUPERSEDED FILE_PIPE_INBOUND;
MACRO_FILE_SUPERSEDED FILE_PIPE_MESSAGE_MODE;
MACRO_FILE_SUPERSEDED FILE_PIPE_MESSAGE_TYPE;
MACRO_FILE_SUPERSEDED FILE_PIPE_OUTBOUND;
MACRO_FILE_SUPERSEDED FILE_PIPE_QUEUE_OPERATION;
MACRO_FILE_SUPERSEDED FILE_PIPE_SERVER_END;
MACRO_FILE FILE_RANDOM_ACCESS;
MACRO_FILE_DEVICE FILE_READ_ACCESS;
MACRO_FILE FILE_READ_ATTRIBUTES;
MACRO_FILE FILE_READ_DATA;
MACRO_FILE FILE_READ_EA;
MACRO_FILE_SUPERSEDED FILE_READ_ONLY_DEVICE;
MACRO_FILE_VOLUME FILE_READ_ONLY_VOLUME;
MACRO_FILE FILE_READ_PROPERTIES;
MACRO_FILE_SUPERSEDED FILE_REMOTE_DEVICE;
MACRO_FILE_SUPERSEDED FILE_REMOVABLE_MEDIA;
MACRO_FILE FILE_RESERVE_OPFILTER;
MACRO_FILE FILE_SEQUENTIAL_ONLY;
MACRO_FILE_VOLUME FILE_SEQUENTIAL_WRITE_ONCE;
MACRO_FILE FILE_SHARE_DELETE;
MACRO_FILE FILE_SHARE_READ;
MACRO_FILE FILE_SHARE_VALID_FLAGS;
MACRO_FILE FILE_SHARE_WRITE;
MACRO_FILE_DEVICE FILE_SPECIAL_ACCESS;
MACRO_FILE FILE_STRUCTURED_STORAGE;
MACRO_FILE_SUPERSEDED FILE_SUPERSEDE;
MACRO_FILE_SUPERSEDED FILE_SUPERSEDED;
MACRO_FILE_VOLUME FILE_SUPPORTS_BLOCK_REFCOUNTING;
MACRO_FILE_VOLUME FILE_SUPPORTS_ENCRYPTION;
MACRO_FILE_VOLUME FILE_SUPPORTS_EXTENDED_ATTRIBUTES;
MACRO_FILE_VOLUME FILE_SUPPORTS_HARD_LINKS;
MACRO_FILE_VOLUME FILE_SUPPORTS_INTEGRITY_STREAMS;
MACRO_FILE_VOLUME FILE_SUPPORTS_OBJECT_IDS;
MACRO_FILE_VOLUME FILE_SUPPORTS_OPEN_BY_FILE_ID;
MACRO_FILE FILE_SUPPORTS_REMOTE_STORAGE;
MACRO_FILE FILE_SUPPORTS_REPARSE_POINTS;
MACRO_FILE FILE_SUPPORTS_SPARSE_FILES;
MACRO_FILE_VOLUME FILE_SUPPORTS_SPARSE_VDL;
MACRO_FILE_VOLUME FILE_SUPPORTS_TRANSACTIONS;
MACRO_FILE_VOLUME FILE_SUPPORTS_USN_JOURNAL;
MACRO_FILE FILE_SYNCHRONOUS_IO_ALERT;
MACRO_FILE FILE_SYNCHRONOUS_IO_NONALERT;
MACRO_FILE FILE_TRAVERSE;
MACRO_FILE FILE_UNICODE_ON_DISK;
MACRO_FILE FILE_VALID_MAILSLOT_OPTION_FLAGS;
MACRO_FILE FILE_VALID_OPTION_FLAGS;
MACRO_FILE FILE_VALID_PIPE_OPTION_FLAGS;
MACRO_FILE FILE_VALID_SET_FLAGS;
MACRO_FILE_SUPERSEDED FILE_VIRTUAL_VOLUME;
MACRO_FILE_VOLUME FILE_VOLUME_IS_COMPRESSED;
MACRO_FILE FILE_VOLUME_QUOTAS;
MACRO_FILE_DEVICE FILE_WRITE_ACCESS;
MACRO_FILE FILE_WRITE_ATTRIBUTES;
MACRO_FILE FILE_WRITE_DATA;
MACRO_FILE FILE_WRITE_EA;
MACRO_FILE_SUPERSEDED FILE_WRITE_ONCE_MEDIA;
MACRO_FILE FILE_WRITE_PROPERTIES;
MACRO_FILE FILE_WRITE_THROUGH;
MACRO_FIXED FIXED_NTVDMSTATE_LINEAR_PC_AT;
MACRO_PITCH FIXED_PITCH;
MACRO_FLG FLG_APPLICATION_VERIFIER;
MACRO_FLG FLG_DEBUG_INITIAL_COMMAND;
MACRO_FLG FLG_DEBUG_INITIAL_COMMAND_EX;
MACRO_FLG FLG_DISABLE_PAGE_KERNEL_STACKS;
MACRO_FLG FLG_DISABLE_STACK_EXTENSION;
MACRO_FLG FLG_ENABLE_CLOSE_EXCEPTIONS;
MACRO_FLG FLG_ENABLE_CSRDEBUG;
MACRO_FLG FLG_ENABLE_EXCEPTION_LOGGING;
MACRO_FLG FLG_ENABLE_HANDLE_TYPE_TAGGING;
MACRO_FLG FLG_ENABLE_KDEBUG_SYMBOL_LOAD;
MACRO_FLG FLG_ENABLE_SYSTEM_CRIT_BREAKS;
MACRO_FLG FLG_HEAP_DISABLE_COALESCING;
MACRO_FLG FLG_HEAP_ENABLE_FREE_CHECK;
MACRO_FLG FLG_HEAP_ENABLE_TAGGING;
MACRO_FLG FLG_HEAP_ENABLE_TAG_BY_DLL;
MACRO_FLG FLG_HEAP_ENABLE_TAIL_CHECK;
MACRO_FLG FLG_HEAP_PAGE_ALLOCS;
MACRO_FLG FLG_HEAP_VALIDATE_ALL;
MACRO_FLG FLG_HEAP_VALIDATE_PARAMETERS;
MACRO_FLG FLG_KERNEL_STACK_TRACE_DB;
MACRO_FLG FLG_MAINTAIN_OBJECT_TYPELIST;
MACRO_FLG FLG_POOL_ENABLE_TAGGING;
MACRO_FLG FLG_SHOW_LDR_SNAPS;
MACRO_FLG FLG_STOP_ON_EXCEPTION;
MACRO_FLG FLG_STOP_ON_HUNG_GUI;
MACRO_FLG FLG_USER_STACK_TRACE_DB;
MACRO_FLG FLG_VALID_BITS;
MACRO_FLI FLI_GLYPHS;
MACRO_FLI FLI_MASK;
void __stdcall FLOATOBJ_Add(PFLOATOBJ pf, PFLOATOBJ pf1);
void __stdcall FLOATOBJ_AddFloat(PFLOATOBJ pf, FLOATL f);
void __stdcall FLOATOBJ_AddLong(PFLOATOBJ pf, LONG l);
void __stdcall FLOATOBJ_Div(PFLOATOBJ pf, PFLOATOBJ pf1);
void __stdcall FLOATOBJ_DivFloat(PFLOATOBJ pf, FLOATL f);
void __stdcall FLOATOBJ_DivLong(PFLOATOBJ pf, LONG l);
BOOL __stdcall FLOATOBJ_Equal(PFLOATOBJ pf, PFLOATOBJ pf1);
BOOL __stdcall FLOATOBJ_EqualLong(PFLOATOBJ pf, LONG l);
LONG __stdcall FLOATOBJ_GetFloat(PFLOATOBJ pf);
LONG __stdcall FLOATOBJ_GetLong(PFLOATOBJ pf);
BOOL __stdcall FLOATOBJ_GreaterThan(PFLOATOBJ pf, PFLOATOBJ pf1);
BOOL __stdcall FLOATOBJ_GreaterThanLong(PFLOATOBJ pf, LONG l);
BOOL __stdcall FLOATOBJ_LessThan(PFLOATOBJ pf, PFLOATOBJ pf1);
BOOL __stdcall FLOATOBJ_LessThanLong(PFLOATOBJ pf, LONG l);
void __stdcall FLOATOBJ_Mul(PFLOATOBJ pf, PFLOATOBJ pf1);
void __stdcall FLOATOBJ_MulFloat(PFLOATOBJ pf, FLOATL f);
void __stdcall FLOATOBJ_MulLong(PFLOATOBJ pf, LONG l);
void __stdcall FLOATOBJ_Neg(PFLOATOBJ pf);
void __stdcall FLOATOBJ_SetFloat(PFLOATOBJ pf, FLOATL f);
void __stdcall FLOATOBJ_SetLong(PFLOATOBJ pf, LONG l);
void __stdcall FLOATOBJ_Sub(PFLOATOBJ pf, PFLOATOBJ pf1);
void __stdcall FLOATOBJ_SubFloat(PFLOATOBJ pf, FLOATL f);
void __stdcall FLOATOBJ_SubLong(PFLOATOBJ pf, LONG l);
MACRO_FLOODFILLBORDER FLOODFILLBORDER;
MACRO_FLOODFILLBORDER FLOODFILLSURFACE;
MACRO_AVAILABLE FLS_MAXIMUM_AVAILABLE;
MACRO_DIG FLT_DIG;
MACRO_FLT FLT_MANT_DIG;
MACRO_EXP FLT_MAX_10_EXP;
MACRO_EXP FLT_MAX_EXP;
MACRO_EXP FLT_MIN_10_EXP;
MACRO_EXP FLT_MIN_EXP;
MACRO_FLT FLT_RADIX;
MACRO_FLT_ROUNDS FLT_ROUNDS;
MACRO_FLUSHOUTPUT FLUSHOUTPUT;
MACRO_FL FL_NONPAGED_MEMORY;
MACRO_FL FL_NON_SESSION;
MACRO_FL FL_ZERO_MEMORY;
MACRO_FM_VERSION FM_EDITABLE_EMBED;
MACRO_FM_VERSION FM_INFO_16BPP;
MACRO_FM_VERSION FM_INFO_1BPP;
MACRO_FM_VERSION FM_INFO_24BPP;
MACRO_FM_VERSION FM_INFO_32BPP;
MACRO_FM_VERSION FM_INFO_4BPP;
MACRO_FM_VERSION FM_INFO_8BPP;
MACRO_FM_VERSION FM_INFO_90DEGREE_ROTATIONS;
MACRO_FM_VERSION FM_INFO_ANISOTROPIC_SCALING_ONLY;
MACRO_FM_VERSION FM_INFO_ARB_XFORMS;
MACRO_FM_VERSION FM_INFO_CONSTANT_WIDTH;
MACRO_FM_VERSION FM_INFO_DBCS_FIXED_PITCH;
MACRO_FM_VERSION FM_INFO_DO_NOT_ENUMERATE;
MACRO_FM_VERSION FM_INFO_DSIG;
MACRO_FM_VERSION FM_INFO_FAMILY_EQUIV;
MACRO_FM_VERSION FM_INFO_IGNORE_TC_RA_ABLE;
MACRO_FM_VERSION FM_INFO_INTEGER_WIDTH;
MACRO_FM_VERSION FM_INFO_INTEGRAL_SCALING;
MACRO_FM_VERSION FM_INFO_ISOTROPIC_SCALING_ONLY;
MACRO_FM_VERSION FM_INFO_NONNEGATIVE_AC;
MACRO_FM_VERSION FM_INFO_NOT_CONTIGUOUS;
MACRO_FM_VERSION FM_INFO_OPTICALLY_FIXED_PITCH;
MACRO_FM_VERSION FM_INFO_RETURNS_BITMAPS;
MACRO_FM_VERSION FM_INFO_RETURNS_OUTLINES;
MACRO_FM_VERSION FM_INFO_RETURNS_STROKES;
MACRO_FM_VERSION FM_INFO_RIGHT_HANDED;
MACRO_FM_VERSION FM_INFO_TECH_BITMAP;
MACRO_FM_VERSION FM_INFO_TECH_CFF;
MACRO_FM_VERSION FM_INFO_TECH_MM;
MACRO_FM_VERSION FM_INFO_TECH_OUTLINE_NOT_TRUETYPE;
MACRO_FM_VERSION FM_INFO_TECH_STROKE;
MACRO_FM_VERSION FM_INFO_TECH_TRUETYPE;
MACRO_FM_VERSION FM_INFO_TECH_TYPE1;
MACRO_FM_VERSION FM_NO_EMBEDDING;
MACRO_FM_PANOSE FM_PANOSE_CULTURE_LATIN;
MACRO_FM_VERSION FM_READONLY_EMBED;
MACRO_FM FM_SEL_BOLD;
MACRO_FM FM_SEL_ITALIC;
MACRO_FM FM_SEL_NEGATIVE;
MACRO_FM FM_SEL_OUTLINED;
MACRO_FM FM_SEL_REGULAR;
MACRO_FM FM_SEL_STRIKEOUT;
MACRO_FM FM_SEL_UNDERSCORE;
MACRO_FM_VERSION FM_TYPE_LICENSED;
MACRO_FM_VERSION FM_VERSION_NUMBER;
MACRO_FN FN_CR0_NPX_STATE;
MACRO_FONTMAPPER FONTMAPPER_MAX;
ULONG __stdcall FONTOBJ_cGetAllGlyphHandles(FONTOBJ *pfo, HGLYPH *phg);
ULONG __stdcall FONTOBJ_cGetGlyphs(FONTOBJ *pfo, ULONG iMode, ULONG cGlyph, HGLYPH *phg, PVOID *ppvGlyph);
PFD_GLYPHATTR __stdcall FONTOBJ_pQueryGlyphAttrs(FONTOBJ *pfo, ULONG iMode);
FD_GLYPHSET *__stdcall FONTOBJ_pfdg(FONTOBJ *pfo);
IFIMETRICS *__stdcall FONTOBJ_pifi(FONTOBJ *pfo);
PBYTE __stdcall FONTOBJ_pjOpenTypeTablePointer(FONTOBJ *pfo, ULONG ulTag, ULONG *pcjTable);
PVOID __stdcall FONTOBJ_pvTrueTypeFontFile(FONTOBJ *pfo, ULONG *pcjFile);
LPWSTR __stdcall FONTOBJ_pwszFontFilePaths(FONTOBJ *pfo, ULONG *pcwc);
XFORMOBJ *__stdcall FONTOBJ_pxoGetXform(FONTOBJ *pfo);
void __stdcall FONTOBJ_vGetInfo(FONTOBJ *pfo, ULONG cjSize, FONTINFO *pfi);
MACRO_MAX FOPEN_MAX;
MACRO_FOREST FOREST_USER_RID_MAX;
MACRO_FOURCC FOURCC_DXT1;
MACRO_FOURCC FOURCC_DXT2;
MACRO_FOURCC FOURCC_DXT3;
MACRO_FOURCC FOURCC_DXT4;
MACRO_FOURCC FOURCC_DXT5;
MACRO_FO_ATTR FO_ATTR_MODE_ROTATE;
MACRO_FO_DEVICE FO_CFF;
MACRO_FO_DEVICE FO_CLEARTYPENATURAL_X;
MACRO_FO_DEVICE FO_CLEARTYPE_X;
MACRO_FO_DEVICE FO_CLEARTYPE_Y;
MACRO_FO_DEVICE FO_DBCS_FONT;
MACRO_FO_DEVICE FO_DEVICE_FONT;
MACRO_FO_DEVICE FO_EM_HEIGHT;
MACRO_FO FO_FILE_OBJECT_HAS_EXTENSION;
MACRO_FO_HGLYPHS FO_GLYPHBITS;
MACRO_FO_DEVICE FO_GRAY16;
MACRO_FO_HGLYPHS FO_HGLYPHS;
MACRO_FO_DEVICE FO_MULTIPLEMASTER;
MACRO_FO_DEVICE FO_NOCLEARTYPE;
MACRO_FO_DEVICE FO_NOGRAY16;
MACRO_FO_DEVICE FO_NOHINTS;
MACRO_FO_DEVICE FO_NO_CHOICE;
MACRO_FO_DEVICE FO_OUTLINE_CAPABLE;
MACRO_FO_HGLYPHS FO_PATHOBJ;
MACRO_FO_DEVICE FO_POSTSCRIPT;
MACRO_FO_DEVICE FO_SIM_BOLD;
MACRO_FO_DEVICE FO_SIM_ITALIC;
MACRO_FO_DEVICE FO_TYPE_DEVICE;
MACRO_FO_DEVICE FO_TYPE_RASTER;
MACRO_FO_DEVICE FO_TYPE_TRUETYPE;
MACRO_FO_DEVICE FO_VERT_FACE;
MACRO_FP_ALTERNATEMODE FP_ALTERNATEMODE;
MACRO_FP FP_CONTROL_WORD;
MACRO_FP FP_DATA_OFFSET;
MACRO_FP FP_DATA_SELECTOR;
MACRO_FP FP_ERROR_OFFSET;
MACRO_FP FP_ERROR_SELECTOR;
MACRO_FP FP_STATUS_WORD;
MACRO_FP FP_TAG_WORD;
MACRO_FP_ALTERNATEMODE FP_WINDINGMODE;
MACRO_FRAME_EDITED FRAME_EDITED;
MACRO_FRAME FRAME_FPO;
MACRO_FRAME FRAME_NONFPO;
MACRO_FRAME FRAME_TRAP;
MACRO_FRAME FRAME_TSS;
MACRO_FRS FRS_ERR_AUTHENTICATION;
MACRO_FRS FRS_ERR_CHILD_TO_PARENT_COMM;
MACRO_FRS FRS_ERR_INSUFFICIENT_PRIV;
MACRO_FRS FRS_ERR_INTERNAL;
MACRO_FRS FRS_ERR_INTERNAL_API;
MACRO_FRS FRS_ERR_INVALID_API_SEQUENCE;
MACRO_FRS FRS_ERR_INVALID_SERVICE_PARAMETER;
MACRO_FRS FRS_ERR_PARENT_AUTHENTICATION;
MACRO_FRS FRS_ERR_PARENT_INSUFFICIENT_PRIV;
MACRO_FRS FRS_ERR_PARENT_TO_CHILD_COMM;
MACRO_FRS FRS_ERR_SERVICE_COMM;
MACRO_FRS FRS_ERR_STARTING_SERVICE;
MACRO_FRS FRS_ERR_STOPPING_SERVICE;
MACRO_FRS FRS_ERR_SYSVOL_DEMOTE;
MACRO_FRS FRS_ERR_SYSVOL_IS_BUSY;
MACRO_FRS FRS_ERR_SYSVOL_POPULATE;
MACRO_FRS FRS_ERR_SYSVOL_POPULATE_TIMEOUT;
MACRO_FR FR_NOT_ENUM;
MACRO_FR FR_PRIVATE;
MACRO_FSCTL FSCTL_FILESYSTEM_GET_STATISTICS;
MACRO_FSCTL FSCTL_GET_INTEGRITY_INFORMATION;
MACRO_FSCTL FSCTL_IS_VOLUME_DIRTY;
MACRO_FSCTL_MAILSLOT FSCTL_MAILSLOT_PEEK;
MACRO_FSCTL FSCTL_MARK_VOLUME_DIRTY;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_ASSIGN_EVENT;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_DISCONNECT;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_IMPERSONATE;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_INTERNAL_READ;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_INTERNAL_READ_OVFLOW;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_INTERNAL_TRANSCEIVE;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_INTERNAL_WRITE;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_LISTEN;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_PEEK;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_QUERY_CLIENT_PROCESS;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_QUERY_EVENT;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_SET_CLIENT_PROCESS;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_TRANSCEIVE;
MACRO_FSCTL_MAILSLOT FSCTL_PIPE_WAIT;
MACRO_FSCTL FSCTL_SET_INTEGRITY_INFORMATION;
MACRO_FS_LATIN1 FS_ARABIC;
MACRO_FS_LATIN1 FS_BALTIC;
MACRO_FS_LATIN1 FS_CHINESESIMP;
MACRO_FS_LATIN1 FS_CHINESETRAD;
MACRO_FS_LATIN1 FS_CYRILLIC;
MACRO_FS_LATIN1 FS_GREEK;
MACRO_FS_LATIN1 FS_HEBREW;
MACRO_FS_LATIN1 FS_JISJAPAN;
MACRO_FS_LATIN1 FS_JOHAB;
MACRO_FS_LATIN1 FS_LATIN1;
MACRO_FS_LATIN1 FS_LATIN2;
MACRO_FS FS_LFN_APIS;
MACRO_FS_LATIN1 FS_SYMBOL;
MACRO_FS_LATIN1 FS_THAI;
MACRO_FS_LATIN1 FS_TURKISH;
MACRO_FS_LATIN1 FS_VIETNAMESE;
MACRO_FS_LATIN1 FS_WANSUNG;
_APPCOMPAT_FLAGS FTMFromCurrentAPI;
MACRO_FW FW_BLACK;
MACRO_FW FW_BOLD;
MACRO_FW FW_DEMIBOLD;
MACRO_FW FW_DONTCARE;
MACRO_FW FW_EXTRABOLD;
MACRO_FW FW_EXTRALIGHT;
MACRO_FW FW_HEAVY;
MACRO_FW FW_LIGHT;
MACRO_FW FW_MEDIUM;
MACRO_FW FW_NORMAL;
MACRO_FW FW_REGULAR;
MACRO_FW FW_SEMIBOLD;
MACRO_FW FW_THIN;
MACRO_FW FW_ULTRABOLD;
MACRO_FW FW_ULTRALIGHT;
MACRO_FX FX_CONTROL_WORD;
MACRO_FX FX_DATA_OFFSET;
MACRO_FX FX_DATA_SELECTOR;
MACRO_FX FX_ERROR_OFFSET;
MACRO_FX FX_ERROR_OPCODE;
MACRO_FX FX_ERROR_SELECTOR;
MACRO_FX FX_MXCSR;
MACRO_FX FX_STATUS_WORD;
MACRO_FX FX_TAG_WORD;
_FILE_INFORMATION_CLASS FileAccessInformation;
_FILE_INFORMATION_CLASS FileAlignmentInformation;
_FILE_INFORMATION_CLASS FileAllInformation;
_FILE_INFORMATION_CLASS FileAllocationInformation;
_FILE_INFORMATION_CLASS FileAlternateNameInformation;
_FILE_INFORMATION_CLASS FileAttributeTagInformation;
_FILE_INFORMATION_CLASS FileBasicInformation;
_FILE_INFORMATION_CLASS FileBothDirectoryInformation;
_FILE_INFORMATION_CLASS FileCompletionInformation;
_FILE_INFORMATION_CLASS FileCompressionInformation;
_FILE_INFORMATION_CLASS FileDirectoryInformation;
_FILE_INFORMATION_CLASS FileDispositionInformation;
_FILE_INFORMATION_CLASS FileEaInformation;
_FILE_INFORMATION_CLASS FileEndOfFileInformation;
_FSINFOCLASS FileFsAttributeInformation;
_FSINFOCLASS FileFsControlInformation;
_FSINFOCLASS FileFsDeviceInformation;
_FSINFOCLASS FileFsDriverPathInformation;
_FSINFOCLASS FileFsFullSizeInformation;
_FSINFOCLASS FileFsLabelInformation;
_FSINFOCLASS FileFsMaximumInformation;
_FSINFOCLASS FileFsObjectIdInformation;
_FSINFOCLASS FileFsSizeInformation;
_FSINFOCLASS FileFsVolumeInformation;
_FILE_INFORMATION_CLASS FileFullDirectoryInformation;
_FILE_INFORMATION_CLASS FileFullEaInformation;
_FILE_INFORMATION_CLASS FileHardLinkInformation;
_FILE_INFORMATION_CLASS FileIdBothDirectoryInformation;
_FILE_INFORMATION_CLASS FileIdFullDirectoryInformation;
_FILE_INFORMATION_CLASS FileIdGlobalTxDirectoryInformation;
_ACTIVATION_CONTEXT_INFO_CLASS FileInformationInAssemblyOfAssemblyInActivationContext;
_ACTIVATION_CONTEXT_INFO_CLASS FileInformationInAssemblyOfAssemblyInActivationContxt;
_FILE_INFORMATION_CLASS FileInternalInformation;
_FILE_INFORMATION_CLASS FileIoCompletionNotificationInformation;
_FILE_INFORMATION_CLASS FileIoPriorityHintInformation;
_FILE_INFORMATION_CLASS FileIoStatusBlockRangeInformation;
_FILE_INFORMATION_CLASS FileIsRemoteDeviceInformation;
_FILE_INFORMATION_CLASS FileLinkInformation;
_FILE_INFORMATION_CLASS FileMailslotQueryInformation;
_FILE_INFORMATION_CLASS FileMailslotSetInformation;
_FILE_INFORMATION_CLASS FileMaximumInformation;
_FILE_INFORMATION_CLASS FileModeInformation;
_FILE_INFORMATION_CLASS FileMoveClusterInformation;
_FILE_INFORMATION_CLASS FileNameInformation;
_FILE_INFORMATION_CLASS FileNamesInformation;
_FILE_INFORMATION_CLASS FileNetworkOpenInformation;
_FILE_INFORMATION_CLASS FileNetworkPhysicalNameInformation;
_FILE_INFORMATION_CLASS FileNormalizedNameInformation;
_FILE_INFORMATION_CLASS FileNumaNodeInformation;
_FILE_INFORMATION_CLASS FileObjectIdInformation;
_FILE_INFORMATION_CLASS FilePipeInformation;
_FILE_INFORMATION_CLASS FilePipeLocalInformation;
_FILE_INFORMATION_CLASS FilePipeRemoteInformation;
_FILE_INFORMATION_CLASS FilePositionInformation;
_FILE_INFORMATION_CLASS FileProcessIdsUsingFileInformation;
_FILE_INFORMATION_CLASS FileQuotaInformation;
_FILE_INFORMATION_CLASS FileRemoteProtocolInformation;
_FILE_INFORMATION_CLASS FileRenameInformation;
_FILE_INFORMATION_CLASS FileReparsePointInformation;
_FILE_INFORMATION_CLASS FileSfioReserveInformation;
_FILE_INFORMATION_CLASS FileSfioVolumeInformation;
_FILE_INFORMATION_CLASS FileShortNameInformation;
_FILE_INFORMATION_CLASS FileStandardInformation;
_FILE_INFORMATION_CLASS FileStandardLinkInformation;
_FILE_INFORMATION_CLASS FileStreamInformation;
_CM_SERVICE_NODE_TYPE FileSystemType;
_FILE_INFORMATION_CLASS FileTrackingInformation;
_FILE_INFORMATION_CLASS FileUnusedInformation;
_FILE_INFORMATION_CLASS FileValidDataLengthInformation;
BOOL __stdcall FillPath(HDC);
int __stdcall FillRect(HDC, LPCRECT, HBRUSH);
int __stdcall FillRgn(HDC, HRGN, HBRUSH);
BOOL __stdcall FixBrushOrgEx(HDC, int, int, LPPOINT);
_MEDIA_TYPE FixedMedia;
BOOL __stdcall FlattenPath(HDC);
BOOL __stdcall FloodFill(HDC, int, int, COLORREF);
_APPCOMPAT_USERFLAGS FontSubstitution;
_APPCOMPAT_USERFLAGS ForceLegacyResizeCM;
BOOL __stdcall FrameRgn(HDC, HRGN, HBRUSH, int, int);
_KWAIT_REASON FreePage;
_MMLISTS FreePageList;
MACRO_CHARSET GB2312_CHARSET;
MACRO_GCAPS2 GCAPS2_ACC_DRIVER;
MACRO_GCAPS2 GCAPS2_ALPHACURSOR;
MACRO_GCAPS2 GCAPS2_CHANGEGAMMARAMP;
MACRO_GCAPS2 GCAPS2_CLEARTYPE;
MACRO_GCAPS2 GCAPS2_EXCLUDELAYERED;
MACRO_GCAPS2 GCAPS2_ICD_MULTIMON;
MACRO_GCAPS2 GCAPS2_INCLUDEAPIBITMAPS;
MACRO_GCAPS2 GCAPS2_JPEGSRC;
MACRO_GCAPS2 GCAPS2_MOUSETRAILS;
MACRO_GCAPS2 GCAPS2_PNGSRC;
MACRO_GCAPS2 GCAPS2_RESERVED1;
MACRO_GCAPS2 GCAPS2_SHOWHIDDENPOINTER;
MACRO_GCAPS2 GCAPS2_SYNCFLUSH;
MACRO_GCAPS2 GCAPS2_SYNCTIMER;
MACRO_GCAPS2 GCAPS2_xxxx;
MACRO_GCAPS GCAPS_ALTERNATEFILL;
MACRO_GCAPS GCAPS_ARBRUSHOPAQUE;
MACRO_GCAPS GCAPS_ARBRUSHTEXT;
MACRO_GCAPS GCAPS_ASYNCCHANGE;
MACRO_GCAPS GCAPS_ASYNCMOVE;
MACRO_GCAPS GCAPS_BEZIERS;
MACRO_GCAPS GCAPS_CMYKCOLOR;
MACRO_GCAPS GCAPS_COLOR_DITHER;
MACRO_GCAPS GCAPS_DIRECTDRAW;
MACRO_GCAPS GCAPS_DITHERONREALIZE;
MACRO_GCAPS GCAPS_DONTJOURNAL;
MACRO_GCAPS GCAPS_FONT_RASTERIZER;
MACRO_GCAPS GCAPS_FORCEDITHER;
MACRO_GCAPS GCAPS_GEOMETRICWIDE;
MACRO_GCAPS GCAPS_GRAY16;
MACRO_GCAPS GCAPS_HALFTONE;
MACRO_GCAPS GCAPS_HIGHRESTEXT;
MACRO_GCAPS GCAPS_HORIZSTRIKE;
MACRO_GCAPS GCAPS_ICM;
MACRO_GCAPS GCAPS_LAYERED;
MACRO_GCAPS GCAPS_MONO_DITHER;
MACRO_GCAPS GCAPS_NO64BITMEMACCESS;
MACRO_GCAPS GCAPS_NUP;
MACRO_GCAPS GCAPS_OPAQUERECT;
MACRO_GCAPS GCAPS_PALMANAGED;
MACRO_GCAPS GCAPS_PANNING;
MACRO_GCAPS GCAPS_SCREENPRECISION;
MACRO_GCAPS GCAPS_VECTORFONT;
MACRO_GCAPS GCAPS_VERTSTRIKE;
MACRO_GCAPS GCAPS_WINDINGFILL;
MACRO_GCPCLASS GCPCLASS_ARABIC;
MACRO_GCPCLASS GCPCLASS_HEBREW;
MACRO_GCPCLASS GCPCLASS_LATIN;
MACRO_GCPCLASS GCPCLASS_LATINNUMBER;
MACRO_GCPCLASS GCPCLASS_LATINNUMERICSEPARATOR;
MACRO_GCPCLASS GCPCLASS_LATINNUMERICTERMINATOR;
MACRO_GCPCLASS GCPCLASS_LOCALNUMBER;
MACRO_GCPCLASS GCPCLASS_NEUTRAL;
MACRO_GCPCLASS GCPCLASS_NUMERICSEPARATOR;
MACRO_GCPCLASS GCPCLASS_POSTBOUNDLTR;
MACRO_GCPCLASS GCPCLASS_POSTBOUNDRTL;
MACRO_GCPCLASS GCPCLASS_PREBOUNDLTR;
MACRO_GCPCLASS GCPCLASS_PREBOUNDRTL;
MACRO_GCPGLYPH GCPGLYPH_LINKAFTER;
MACRO_GCPGLYPH GCPGLYPH_LINKBEFORE;
MACRO_GCP GCP_CLASSIN;
MACRO_GCP GCP_DBCS;
MACRO_GCP GCP_DIACRITIC;
MACRO_GCP GCP_DISPLAYZWG;
MACRO_GCP GCP_ERROR;
MACRO_GCP GCP_GLYPHSHAPE;
MACRO_GCP GCP_JUSTIFY;
MACRO_GCP GCP_JUSTIFYIN;
MACRO_GCP GCP_KASHIDA;
MACRO_GCP GCP_LIGATE;
MACRO_GCP GCP_MAXEXTENT;
MACRO_GCP GCP_NEUTRALOVERRIDE;
MACRO_GCP GCP_NUMERICOVERRIDE;
MACRO_GCP GCP_NUMERICSLATIN;
MACRO_GCP GCP_NUMERICSLOCAL;
MACRO_GCP GCP_REORDER;
MACRO_GCP GCP_SYMSWAPOFF;
MACRO_GCP GCP_USEKERNING;
MACRO_GDICOMMENT GDICOMMENT_BEGINGROUP;
MACRO_GDICOMMENT GDICOMMENT_ENDGROUP;
MACRO_GDICOMMENT GDICOMMENT_IDENTIFIER;
MACRO_GDICOMMENT GDICOMMENT_MULTIFORMATS;
MACRO_GDICOMMENT GDICOMMENT_WINDOWS_METAFILE;
MACRO_GDI GDI_BATCH_BUFFER_SIZE;
MACRO_GDI_DRIVER GDI_DRIVER_VERSION;
MACRO_GDI_ERROR GDI_ERROR;
MACRO_GENERIC GENERIC_ALL;
MACRO_GENERIC GENERIC_EXECUTE;
MACRO_GENERIC GENERIC_READ;
MACRO_GENERIC GENERIC_WRITE;
MACRO_GETCOLORTABLE GETCOLORTABLE;
MACRO_GETDEVICEUNITS GETDEVICEUNITS;
MACRO_GETDEVICEUNITS GETEXTENDEDTEXTMETRICS;
MACRO_GETEXTENTTABLE GETEXTENTTABLE;
MACRO_GETFACENAME GETFACENAME;
MACRO_GETPAIRKERNTABLE GETPAIRKERNTABLE;
MACRO_MFCOMMENT GETPENWIDTH;
MACRO_GETPHYSPAGESIZE GETPHYSPAGESIZE;
MACRO_GETPRINTINGOFFSET GETPRINTINGOFFSET;
MACRO_GETSCALINGFACTOR GETSCALINGFACTOR;
MACRO_GETSETPAPERBINS GETSETPAPERBINS;
MACRO_GETSETPAPERMETRICS GETSETPAPERMETRICS;
MACRO_GETSETPRINTORIENT GETSETPRINTORIENT;
MACRO_GETSETSCREENPARAMS GETSETSCREENPARAMS;
MACRO_GETTECHNOLGY GETTECHNOLGY;
MACRO_GETTECHNOLOGY GETTECHNOLOGY;
MACRO_GETTRACKKERNTABLE GETTRACKKERNTABLE;
MACRO_GETVECTORBRUSHSIZE GETVECTORBRUSHSIZE;
MACRO_GETVECTORPENSIZE GETVECTORPENSIZE;
MACRO_GGI GGI_MARK_NONEXISTING_GLYPHS;
MACRO_GGO GGO_BEZIER;
MACRO_GGO GGO_BITMAP;
MACRO_GGO GGO_GLYPH_INDEX;
MACRO_GGO GGO_GRAY2_BITMAP;
MACRO_GGO GGO_GRAY4_BITMAP;
MACRO_GGO GGO_GRAY8_BITMAP;
MACRO_GGO GGO_METRICS;
MACRO_GGO GGO_NATIVE;
MACRO_GGO GGO_UNHINTED;
MACRO_GM GM_ADVANCED;
MACRO_GM GM_COMPATIBLE;
MACRO_GM GM_LAST;
MACRO_GRADIENT GRADIENT_FILL_OP_FLAG;
MACRO_GRADIENT GRADIENT_FILL_RECT_H;
MACRO_GRADIENT GRADIENT_FILL_RECT_V;
MACRO_GRADIENT GRADIENT_FILL_TRIANGLE;
MACRO_BRUSH GRAY_BRUSH;
MACRO_CHARSET GREEK_CHARSET;
MACRO_SECURITY_INFORMATION GROUP_SECURITY_INFORMATION;
MACRO_GS_UNICODE GS_16BIT_HANDLES;
MACRO_GS_UNICODE GS_8BIT_HANDLES;
MACRO_GS GS_8BIT_INDICES;
MACRO_GS_UNICODE GS_UNICODE_HANDLES;
MACRO_GX GX_GENERAL;
MACRO_GX GX_IDENTITY;
MACRO_GX GX_OFFSET;
MACRO_GX GX_SCALE;
_KOBJECTS GateObject;
_KTHREAD_STATE GateWait;
BOOL __stdcall GdiAlphaBlend(HDC, int, int, int, int, HDC, int, int, int, int, BLENDFUNCTION);
BOOL __stdcall GdiComment(HDC hdc, UINT nSize, const BYTE *lpData);
DEVMODEW *__stdcall GdiConvertToDevmodeW(const DEVMODEA *);
BOOL __stdcall GdiFlush();
DWORD __stdcall GdiGetBatchLimit();
LONG __stdcall GdiGetCharDimensions(HDC, LPTEXTMETRICW, LONG *);
DWORD __stdcall GdiGetCodePage(HDC);
BOOL __stdcall GdiGradientFill(HDC hdc, PTRIVERTEX pVertex, ULONG nVertex, PVOID pMesh, ULONG nCount, ULONG ulMode);
BOOL __stdcall GdiIsMetaFileDC(HDC);
DWORD __stdcall GdiSetBatchLimit(DWORD);
BOOL __stdcall GdiTransparentBlt(HDC, int, int, int, int, HDC, int, int, int, int, UINT);
_RTL_GENERIC_COMPARE_RESULTS GenericEqual;
_RTL_GENERIC_COMPARE_RESULTS GenericGreaterThan;
_RTL_GENERIC_COMPARE_RESULTS GenericLessThan;
int __stdcall GetArcDirection(HDC);
BOOL __stdcall GetAspectRatioFilterEx(HDC, LPSIZE);
LONG __stdcall GetBitmapBits(HBITMAP hbit, LONG cb, LPVOID lpvBits);
BOOL __stdcall GetBitmapDimensionEx(HBITMAP, LPSIZE);
COLORREF __stdcall GetBkColor(HDC);
int __stdcall GetBkMode(HDC);
UINT __stdcall GetBoundsRect(HDC, LPRECT, UINT);
BOOL __stdcall GetBrushOrgEx(HDC, LPPOINT);
BOOL __stdcall GetCharABCWidthsA(HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC);
BOOL __stdcall GetCharABCWidthsFloatA(HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC);
BOOL __stdcall GetCharABCWidthsFloatW(HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC);
BOOL __stdcall GetCharABCWidthsI(HDC hdc, UINT giFirst, UINT cgi, LPWORD pgi, LPABC pabc);
BOOL __stdcall GetCharABCWidthsW(HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC);
BOOL __stdcall GetCharWidth32A(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL __stdcall GetCharWidth32W(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL __stdcall GetCharWidthA(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL __stdcall GetCharWidthFloatA(HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer);
BOOL __stdcall GetCharWidthFloatW(HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer);
BOOL __stdcall GetCharWidthI(HDC hdc, UINT giFirst, UINT cgi, LPWORD pgi, LPINT piWidths);
BOOL __stdcall GetCharWidthW(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
DWORD __stdcall GetCharacterPlacementA(HDC hdc, LPCSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSA lpResults, DWORD dwFlags);
DWORD __stdcall GetCharacterPlacementW(HDC hdc, LPCWSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSW lpResults, DWORD dwFlags);
int __stdcall GetClipBox(HDC, LPRECT);
int __stdcall GetClipRgn(HDC, HRGN);
BOOL __stdcall GetColorAdjustment(HDC, LPCOLORADJUSTMENT);
HCOLORSPACE __stdcall GetColorSpace(HDC);
PVOID GetCurrentFiber(void);
HGDIOBJ __stdcall GetCurrentObject(HDC, UINT);
BOOL __stdcall GetCurrentPositionEx(HDC, LPPOINT);
HCURSOR __stdcall GetCursor();
COLORREF __stdcall GetDCBrushColor(HDC);
BOOL __stdcall GetDCOrgEx(HDC, LPPOINT);
COLORREF __stdcall GetDCPenColor(HDC);
UINT __stdcall GetDIBColorTable(HDC hdc, UINT iStart, UINT cEntries, RGBQUAD *prgbq);
int __stdcall GetDIBits(HDC hdc, HBITMAP hbm, UINT start, UINT cLines, LPVOID lpvBits, LPBITMAPINFO lpbmi, UINT usage);
int __stdcall GetDeviceCaps(HDC, int);
BOOL __stdcall GetDeviceGammaRamp(HDC hdc, LPVOID lpRamp);
_APPCOMPAT_FLAGS GetDiskFreeSpace2GB;
HENHMETAFILE __stdcall GetEnhMetaFileA(LPCSTR);
UINT __stdcall GetEnhMetaFileBits(HENHMETAFILE hEMF, UINT nSize, LPBYTE lpData);
UINT __stdcall GetEnhMetaFileDescriptionA(HENHMETAFILE hemf, UINT cchBuffer, LPSTR lpDescription);
UINT __stdcall GetEnhMetaFileDescriptionW(HENHMETAFILE hemf, UINT cchBuffer, LPWSTR lpDescription);
UINT __stdcall GetEnhMetaFileHeader(HENHMETAFILE hemf, UINT nSize, LPENHMETAHEADER lpEnhMetaHeader);
UINT __stdcall GetEnhMetaFilePaletteEntries(HENHMETAFILE hemf, UINT nNumEntries, LPPALETTEENTRY lpPaletteEntries);
UINT __stdcall GetEnhMetaFilePixelFormat(HENHMETAFILE hemf, UINT cbBuffer, PIXELFORMATDESCRIPTOR *ppfd);
HENHMETAFILE __stdcall GetEnhMetaFileW(LPCWSTR);
PVOID GetFiberData(void);
DWORD __stdcall GetFontData(HDC hdc, DWORD dwTable, DWORD dwOffset, PVOID pvBuffer, DWORD cjBuffer);
DWORD __stdcall GetFontLanguageInfo(HDC);
DWORD __stdcall GetFontUnicodeRanges(HDC, LPGLYPHSET);
DWORD __stdcall GetGlyphIndicesA(HDC hdc, LPCSTR lpstr, int c, LPWORD pgi, DWORD fl);
DWORD __stdcall GetGlyphIndicesW(HDC hdc, LPCWSTR lpstr, int c, LPWORD pgi, DWORD fl);
DWORD __stdcall GetGlyphOutlineA(HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, const MAT2 *lpmat2);
DWORD __stdcall GetGlyphOutlineW(HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, const MAT2 *lpmat2);
int __stdcall GetGraphicsMode(HDC);
BOOL __stdcall GetICMProfileA(HDC hdc, LPDWORD pBufSize, LPSTR pszFilename);
BOOL __stdcall GetICMProfileW(HDC hdc, LPDWORD pBufSize, LPWSTR pszFilename);
DWORD __stdcall GetKerningPairsA(HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair);
DWORD __stdcall GetKerningPairsW(HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair);
DWORD __stdcall GetLayout(HDC);
BOOL __stdcall GetLogColorSpaceA(HCOLORSPACE hColorSpace, LPLOGCOLORSPACEA lpBuffer, DWORD nSize);
BOOL __stdcall GetLogColorSpaceW(HCOLORSPACE hColorSpace, LPLOGCOLORSPACEW lpBuffer, DWORD nSize);
int __stdcall GetMapMode(HDC);
HMETAFILE __stdcall GetMetaFileA(LPCSTR);
UINT __stdcall GetMetaFileBitsEx(HMETAFILE hMF, UINT cbBuffer, LPVOID lpData);
HMETAFILE __stdcall GetMetaFileW(LPCWSTR);
int __stdcall GetMetaRgn(HDC, HRGN);
BOOL __stdcall GetMiterLimit(HDC, PFLOAT);
COLORREF __stdcall GetNearestColor(HDC, COLORREF);
UINT __stdcall GetNearestPaletteIndex(HPALETTE, COLORREF);
int __stdcall GetObjectA(HANDLE h, int c, LPVOID pv);
DWORD __stdcall GetObjectType(HGDIOBJ);
int __stdcall GetObjectW(HANDLE h, int c, LPVOID pv);
UINT __stdcall GetOutlineTextMetricsA(HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICA potm);
UINT __stdcall GetOutlineTextMetricsW(HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICW potm);
UINT __stdcall GetPaletteEntries(HPALETTE hpal, UINT iStart, UINT cEntries, LPPALETTEENTRY pPalEntries);
int __stdcall GetPath(HDC hdc, LPPOINT apt, LPBYTE aj, int cpt);
COLORREF __stdcall GetPixel(HDC, int, int);
int __stdcall GetPixelFormat(HDC);
int __stdcall GetPolyFillMode(HDC);
_POWER_INFORMATION_LEVEL GetPowerRequestList;
int __stdcall GetROP2(HDC);
int __stdcall GetRandomRgn(HDC, HRGN, INT);
BOOL __stdcall GetRasterizerCaps(LPRASTERIZER_STATUS lpraststat, UINT cjBytes);
DWORD __stdcall GetRegionData(HRGN hrgn, DWORD nCount, LPRGNDATA lpRgnData);
int __stdcall GetRgnBox(HRGN, LPRECT);
_APPCOMPAT_FLAGS GetShortPathNameNT4;
HGDIOBJ __stdcall GetStockObject(int);
int __stdcall GetStretchBltMode(HDC);
UINT __stdcall GetSystemPaletteEntries(HDC hdc, UINT iStart, UINT cEntries, LPPALETTEENTRY pPalEntries);
UINT __stdcall GetSystemPaletteUse(HDC);
UINT __stdcall GetTextAlign(HDC);
int __stdcall GetTextCharacterExtra(HDC);
int __stdcall GetTextCharset(HDC);
int __stdcall GetTextCharsetInfo(HDC, LPFONTSIGNATURE, DWORD);
COLORREF __stdcall GetTextColor(HDC);
BOOL __stdcall GetTextExtentExPointA(HDC hdc, LPCSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
BOOL __stdcall GetTextExtentExPointI(HDC hdc, LPWORD lpwszString, int cwchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
BOOL __stdcall GetTextExtentExPointW(HDC hdc, LPCWSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
BOOL __stdcall GetTextExtentPoint32A(HDC hdc, LPCSTR lpString, int c, LPSIZE psizl);
BOOL __stdcall GetTextExtentPoint32W(HDC hdc, LPCWSTR lpString, int c, LPSIZE psizl);
BOOL __stdcall GetTextExtentPointA(HDC hdc, LPCSTR lpString, int c, LPSIZE lpsz);
BOOL __stdcall GetTextExtentPointI(HDC hdc, LPWORD pgiIn, int cgi, LPSIZE psize);
BOOL __stdcall GetTextExtentPointW(HDC hdc, LPCWSTR lpString, int c, LPSIZE lpsz);
int __stdcall GetTextFaceA(HDC hdc, int c, LPSTR lpName);
int __stdcall GetTextFaceW(HDC hdc, int c, LPWSTR lpName);
BOOL __stdcall GetTextMetricsA(HDC, LPTEXTMETRICA);
BOOL __stdcall GetTextMetricsW(HDC, LPTEXTMETRICW);
BOOL __stdcall GetTransform(HDC, DWORD, XFORM *);
BOOL __stdcall GetViewportExtEx(HDC, LPSIZE);
BOOL __stdcall GetViewportOrgEx(HDC, LPPOINT);
UINT __stdcall GetWinMetaFileBits(HENHMETAFILE hemf, UINT cbData16, LPBYTE pData16, INT iMapMode, HDC hdcRef);
BOOL __stdcall GetWindowExtEx(HDC, LPSIZE);
BOOL __stdcall GetWindowOrgEx(HDC, LPPOINT);
BOOL __stdcall GetWorldTransform(HDC, LPXFORM);
_APPCOMPAT_USERFLAGS GiveupForeground;
BOOL __stdcall GradientFill(HDC hdc, PTRIVERTEX pVertex, ULONG nVertex, PVOID pMesh, ULONG nMesh, ULONG ulMode);
_POWER_INFORMATION_LEVEL GroupPark;
MACRO_COLORONCOLOR HALFTONE;
MACRO_CHARSET HANGEUL_CHARSET;
MACRO_CHARSET HANGUL_CHARSET;
MACRO_HARDERROR HARDERROR_OVERRIDE_ERRORMODE;
MACRO_HASH HASH_STRING_ALGORITHM_DEFAULT;
MACRO_HASH HASH_STRING_ALGORITHM_INVALID;
MACRO_HASH HASH_STRING_ALGORITHM_X65599;
MACRO_HEAP_SETTABLE HEAP_BREAK_WHEN_OUT_OF_VM;
MACRO_HEAP_SETTABLE HEAP_CAPTURE_STACK_BACKTRACES;
MACRO_HEAP_SETTABLE HEAP_CLASS_0;
MACRO_HEAP_SETTABLE HEAP_CLASS_1;
MACRO_HEAP_SETTABLE HEAP_CLASS_2;
MACRO_HEAP_SETTABLE HEAP_CLASS_3;
MACRO_HEAP_SETTABLE HEAP_CLASS_4;
MACRO_HEAP_SETTABLE HEAP_CLASS_5;
MACRO_HEAP_SETTABLE HEAP_CLASS_6;
MACRO_HEAP_SETTABLE HEAP_CLASS_7;
MACRO_HEAP_SETTABLE HEAP_CLASS_8;
MACRO_HEAP_SETTABLE HEAP_CLASS_MASK;
MACRO_HEAP HEAP_CREATE_ALIGN_16;
MACRO_HEAP HEAP_CREATE_ENABLE_EXECUTE;
MACRO_HEAP HEAP_CREATE_ENABLE_TRACING;
MACRO_HEAP_SETTABLE HEAP_CREATE_VALID_MASK;
MACRO_HEAP HEAP_DISABLE_COALESCE_ON_FREE;
MACRO_HEAP_SETTABLE HEAP_FLAG_PAGE_ALLOCS;
MACRO_HEAP HEAP_FREE_CHECKING_ENABLED;
MACRO_HEAP HEAP_GENERATE_EXCEPTIONS;
MACRO_HEAP HEAP_GROWABLE;
MACRO_HEAP_SETTABLE HEAP_LOCK_USER_ALLOCATED;
MACRO_HEAP HEAP_MAXIMUM_TAG;
MACRO_HEAP_SETTABLE HEAP_NO_ALIGNMENT;
MACRO_HEAP HEAP_NO_SERIALIZE;
MACRO_HEAP_SETTABLE HEAP_PROTECTION_ENABLED;
MACRO_HEAP HEAP_PSEUDO_TAG_FLAG;
MACRO_HEAP HEAP_REALLOC_IN_PLACE_ONLY;
MACRO_HEAP_SETTABLE HEAP_SETTABLE_USER_FLAG1;
MACRO_HEAP_SETTABLE HEAP_SETTABLE_USER_FLAG2;
MACRO_HEAP_SETTABLE HEAP_SETTABLE_USER_FLAG3;
MACRO_HEAP_SETTABLE HEAP_SETTABLE_USER_FLAGS;
MACRO_HEAP_SETTABLE HEAP_SETTABLE_USER_VALUE;
MACRO_HEAP_SETTABLE HEAP_SKIP_VALIDATION_CHECKS;
MACRO_HEAP HEAP_TAG_SHIFT;
MACRO_HEAP HEAP_TAIL_CHECKING_ENABLED;
MACRO_HEAP_SETTABLE HEAP_VALIDATE_ALL_ENABLED;
MACRO_HEAP_SETTABLE HEAP_VALIDATE_PARAMETERS_ENABLED;
MACRO_HEAP HEAP_ZERO_MEMORY;
MACRO_CHARSET HEBREW_CHARSET;
MACRO_HFF HFC_INVALID;
MACRO_HFF HFF_INVALID;
MACRO_HFILE HFILE_ERROR;
MACRO_GDI_ERROR HGDI_ERROR;
MACRO_HFF HGLYPH_INVALID;
MACRO_PRIORITY HIGH_PRIORITY;
MACRO_HIST HIST_NO_OF_BUCKETS;
MACRO_BRUSH HOLLOW_BRUSH;
MACRO_HOOK HOOK_ALPHABLEND;
MACRO_HOOK HOOK_BITBLT;
MACRO_HOOK HOOK_COPYBITS;
MACRO_HOOK HOOK_FILLPATH;
MACRO_HOOK HOOK_FLAGS;
MACRO_HOOK HOOK_GRADIENTFILL;
MACRO_HOOK HOOK_LINETO;
MACRO_HOOK HOOK_MOVEPANNING;
MACRO_HOOK HOOK_PAINT;
MACRO_HOOK HOOK_PLGBLT;
MACRO_HOOK HOOK_STRETCHBLT;
MACRO_HOOK HOOK_STRETCHBLTROP;
MACRO_HOOK HOOK_STROKEANDFILLPATH;
MACRO_HOOK HOOK_STROKEPATH;
MACRO_HOOK HOOK_SYNCHRONIZE;
MACRO_HOOK HOOK_SYNCHRONIZEACCESS;
MACRO_HOOK HOOK_TEXTOUT;
MACRO_HOOK HOOK_TRANSPARENTBLT;
MACRO_VERTSIZE HORZRES;
MACRO_HORZSIZE HORZSIZE;
MACRO_HS HS_API_MAX;
MACRO_HS HS_BDIAGONAL;
MACRO_HS HS_CROSS;
MACRO_HS_DDI HS_DDI_MAX;
MACRO_HS HS_DIAGCROSS;
MACRO_HS HS_FDIAGONAL;
MACRO_HS HS_HORIZONTAL;
MACRO_HS HS_VERTICAL;
LONG __stdcall HTUI_DeviceColorAdjustment(LPSTR pDeviceName, PDEVHTADJDATA pDevHTAdjData);
MACRO_HT HT_BITMASKPALRGB;
LONG __stdcall HT_ComputeRGBGammaTable(USHORT GammaTableEntries, USHORT GammaTableType, USHORT RedGamma, USHORT GreenGamma, USHORT BlueGamma, LPBYTE pGammaTable);
MACRO_HT HT_FLAG_8BPP_CMY332_MASK;
MACRO_HT HT_FLAG_ADDITIVE_PRIMS;
MACRO_HT HT_FLAG_DO_DEVCLR_XFORM;
MACRO_HT HT_FLAG_HAS_BLACK_DYE;
MACRO_HT HT_FLAG_HIGHER_INK_ABSORPTION;
MACRO_HT HT_FLAG_HIGHEST_INK_ABSORPTION;
MACRO_HT HT_FLAG_HIGH_INK_ABSORPTION;
MACRO_HT HT_FLAG_INK_ABSORPTION_IDX0;
MACRO_HT HT_FLAG_INK_ABSORPTION_IDX1;
MACRO_HT HT_FLAG_INK_ABSORPTION_IDX2;
MACRO_HT HT_FLAG_INK_ABSORPTION_IDX3;
MACRO_HT HT_FLAG_INK_ABSORPTION_INDICES;
MACRO_HT HT_FLAG_INK_HIGH_ABSORPTION;
MACRO_HT HT_FLAG_INVERT_8BPP_BITMASK_IDX;
MACRO_HT HT_FLAG_LOWER_INK_ABSORPTION;
MACRO_HT HT_FLAG_LOWEST_INK_ABSORPTION;
MACRO_HT HT_FLAG_LOW_INK_ABSORPTION;
MACRO_HT HT_FLAG_NORMAL_INK_ABSORPTION;
MACRO_HT HT_FLAG_OUTPUT_CMY;
MACRO_HT HT_FLAG_PRINT_DRAFT_MODE;
MACRO_HT HT_FLAG_SQUARE_DEVICE_PEL;
MACRO_HT HT_FLAG_USE_8BPP_BITMASK;
MACRO_HT HT_FORMAT_16BPP;
MACRO_HT HT_FORMAT_1BPP;
MACRO_HT HT_FORMAT_24BPP;
MACRO_HT HT_FORMAT_32BPP;
MACRO_HT HT_FORMAT_4BPP;
MACRO_HT HT_FORMAT_4BPP_IRGB;
MACRO_HT HT_FORMAT_8BPP;
LONG __stdcall HT_Get8BPPFormatPalette(LPPALETTEENTRY pPaletteEntry, USHORT RedGamma, USHORT GreenGamma, USHORT BlueGamma);
LONG __stdcall HT_Get8BPPMaskPalette(LPPALETTEENTRY pPaletteEntry, BOOL Use8BPPMaskPal, BYTE CMYMask, USHORT RedGamma, USHORT GreenGamma, USHORT BlueGamma);
MACRO_HT HT_PATSIZE_10x10;
MACRO_HT HT_PATSIZE_10x10_M;
MACRO_HT HT_PATSIZE_12x12;
MACRO_HT HT_PATSIZE_12x12_M;
MACRO_HT HT_PATSIZE_14x14;
MACRO_HT HT_PATSIZE_14x14_M;
MACRO_HT HT_PATSIZE_16x16;
MACRO_HT HT_PATSIZE_16x16_M;
MACRO_HT HT_PATSIZE_2x2;
MACRO_HT HT_PATSIZE_2x2_M;
MACRO_HT HT_PATSIZE_4x4;
MACRO_HT HT_PATSIZE_4x4_M;
MACRO_HT HT_PATSIZE_6x6;
MACRO_HT HT_PATSIZE_6x6_M;
MACRO_HT HT_PATSIZE_8x8;
MACRO_HT HT_PATSIZE_8x8_M;
MACRO_HT HT_PATSIZE_DEFAULT;
MACRO_HT HT_PATSIZE_MAX_INDEX;
MACRO_HT HT_PATSIZE_SUPERCELL;
MACRO_HT HT_PATSIZE_SUPERCELL_M;
MACRO_HT HT_PATSIZE_USER;
MACRO_HT HT_USERPAT_CX_MAX;
MACRO_HT HT_USERPAT_CX_MIN;
MACRO_HT HT_USERPAT_CY_MAX;
MACRO_HT HT_USERPAT_CY_MIN;
MACRO_HV HV_APIC_ENLIGHTENED;
MACRO_HV HV_KE_USE_HYPERCALL_FOR_LONG_SPIN_WAIT;
MACRO_HV HV_MMU_USE_HYPERCALL_FOR_ADDRESS_SWITCH;
MACRO_HV HV_MMU_USE_HYPERCALL_FOR_LOCAL_FLUSH;
MACRO_HV HV_MMU_USE_HYPERCALL_FOR_REMOTE_FLUSH;
_APPCOMPAT_USERFLAGS HardwareAudioMixer;
_PLUGPLAY_EVENT_CATEGORY HardwareProfileChangeEvent;
_HEAP_INFORMATION_CLASS HeapCompatibilityInformation;
_HEAP_INFORMATION_CLASS HeapEnableTerminationOnCorruption;
_APPCOMPAT_USERFLAGS HighDpiAware;
MACRO_ICM ICM_OFF;
MACRO_ICM ICM_ON;
MACRO_ICM ICM_QUERY;
MACRO_IGRF IGRF_RGB_256BYTES;
MACRO_IGRF IGRF_RGB_256WORDS;
MACRO_ILLUMINANT ILLUMINANT_A;
MACRO_ILLUMINANT ILLUMINANT_B;
MACRO_ILLUMINANT ILLUMINANT_C;
MACRO_ILLUMINANT ILLUMINANT_D50;
MACRO_ILLUMINANT ILLUMINANT_D55;
MACRO_ILLUMINANT ILLUMINANT_D65;
MACRO_ILLUMINANT ILLUMINANT_D75;
MACRO_ILLUMINANT ILLUMINANT_DAYLIGHT;
MACRO_ILLUMINANT ILLUMINANT_DEVICE_DEFAULT;
MACRO_ILLUMINANT ILLUMINANT_F2;
MACRO_ILLUMINANT ILLUMINANT_FLUORESCENT;
MACRO_ILLUMINANT ILLUMINANT_MAX_INDEX;
MACRO_ILLUMINANT ILLUMINANT_NTSC;
MACRO_ILLUMINANT ILLUMINANT_TUNGSTEN;
MACRO_IMAGE_SUBSYSTEM IMAGE_ARCHIVE_START_SIZE;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_ANY;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_ASSOCIATIVE;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_EXACT_MATCH;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_LARGEST;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_NEWEST;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_NODUPLICATES;
MACRO_IMAGE_SUBSYSTEM IMAGE_COMDAT_SELECT_SAME_SIZE;
ReplacesCorHdrNumericDefines IMAGE_COR_EATJ_THUNK_SIZE;
ReplacesCorHdrNumericDefines IMAGE_COR_MIH_BASICBLOCK;
ReplacesCorHdrNumericDefines IMAGE_COR_MIH_EHRVA;
ReplacesCorHdrNumericDefines IMAGE_COR_MIH_METHODRVA;
MACRO_IMAGE_DEBUG IMAGE_DEBUG_MISC_EXENAME;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_CODEVIEW;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_COFF;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_EXCEPTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_FIXUP;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_FPO;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_MISC;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_OMAP_FROM_SRC;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_OMAP_TO_SRC;
MACRO_IMAGE_SUBSYSTEM IMAGE_DEBUG_TYPE_UNKNOWN;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_BASERELOC;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_COPYRIGHT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_DEBUG;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_EXCEPTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_EXPORT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_GLOBALPTR;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_IAT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_IMPORT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_RESOURCE;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_SECURITY;
MACRO_IMAGE_SUBSYSTEM IMAGE_DIRECTORY_ENTRY_TLS;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_NO_BIND;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_NO_ISOLATION;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_NO_SEH;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_NX_COMPAT;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE;
MACRO_IMAGE_SUBSYSTEM IMAGE_DLLCHARACTERISTICS_WDM_DRIVER;
MACRO_IMAGE IMAGE_DOS_SIGNATURE;
MACRO_IMAGE IMAGE_FILE_32BIT_MACHINE;
MACRO_IMAGE IMAGE_FILE_AGGRESIVE_WS_TRIM;
MACRO_IMAGE IMAGE_FILE_BASE_RELOCATION_TABLE;
MACRO_IMAGE IMAGE_FILE_BYTES_REVERSED_HI;
MACRO_IMAGE IMAGE_FILE_BYTES_REVERSED_LO;
MACRO_IMAGE IMAGE_FILE_CALLBACK_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_DEBUG_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_DEBUG_STRIPPED;
MACRO_IMAGE IMAGE_FILE_DESCRIPTION_STRING;
MACRO_IMAGE IMAGE_FILE_DLL;
MACRO_IMAGE IMAGE_FILE_EXCEPTION_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_EXECUTABLE_IMAGE;
MACRO_IMAGE IMAGE_FILE_EXPORT_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_IMPORT_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_LARGE_ADDRESS_AWARE;
MACRO_IMAGE IMAGE_FILE_LINE_NUMS_STRIPPED;
MACRO_IMAGE IMAGE_FILE_LOCAL_SYMS_STRIPPED;
MACRO_IMAGE IMAGE_FILE_MACHINE_ALPHA;
MACRO_IMAGE IMAGE_FILE_MACHINE_ALPHA64;
MACRO_IMAGE IMAGE_FILE_MACHINE_AM33;
MACRO_IMAGE IMAGE_FILE_MACHINE_AMD64;
MACRO_IMAGE IMAGE_FILE_MACHINE_ARM;
MACRO_IMAGE IMAGE_FILE_MACHINE_ARM64;
MACRO_IMAGE IMAGE_FILE_MACHINE_ARMNT;
MACRO_IMAGE IMAGE_FILE_MACHINE_AXP64;
MACRO_IMAGE IMAGE_FILE_MACHINE_CEE;
MACRO_IMAGE IMAGE_FILE_MACHINE_CEF;
MACRO_IMAGE IMAGE_FILE_MACHINE_EBC;
MACRO_IMAGE IMAGE_FILE_MACHINE_I386;
MACRO_IMAGE IMAGE_FILE_MACHINE_IA64;
MACRO_IMAGE IMAGE_FILE_MACHINE_M32R;
MACRO_IMAGE IMAGE_FILE_MACHINE_MIPS16;
MACRO_IMAGE IMAGE_FILE_MACHINE_MIPSFPU;
MACRO_IMAGE IMAGE_FILE_MACHINE_MIPSFPU16;
MACRO_IMAGE_FILE IMAGE_FILE_MACHINE_NATIVE;
MACRO_IMAGE IMAGE_FILE_MACHINE_POWERPC;
MACRO_IMAGE IMAGE_FILE_MACHINE_POWERPCFP;
MACRO_IMAGE IMAGE_FILE_MACHINE_R10000;
MACRO_IMAGE IMAGE_FILE_MACHINE_R3000;
MACRO_IMAGE IMAGE_FILE_MACHINE_R4000;
MACRO_IMAGE IMAGE_FILE_MACHINE_SH3;
MACRO_IMAGE IMAGE_FILE_MACHINE_SH3DSP;
MACRO_IMAGE IMAGE_FILE_MACHINE_SH3E;
MACRO_IMAGE IMAGE_FILE_MACHINE_SH4;
MACRO_IMAGE IMAGE_FILE_MACHINE_SH5;
MACRO_IMAGE IMAGE_FILE_MACHINE_THUMB;
MACRO_IMAGE IMAGE_FILE_MACHINE_TRICORE;
MACRO_IMAGE IMAGE_FILE_MACHINE_UNKNOWN;
MACRO_IMAGE IMAGE_FILE_MACHINE_VALUE;
MACRO_IMAGE IMAGE_FILE_MACHINE_WCEMIPSV2;
MACRO_IMAGE IMAGE_FILE_NET_RUN_FROM_SWAP;
MACRO_IMAGE IMAGE_FILE_RELOCS_STRIPPED;
MACRO_IMAGE IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP;
MACRO_IMAGE IMAGE_FILE_RESOURCE_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_SECURITY_DIRECTORY;
MACRO_IMAGE IMAGE_FILE_SYSTEM;
MACRO_IMAGE IMAGE_FILE_THREAD_LOCAL_STORAGE;
MACRO_IMAGE IMAGE_FILE_UP_SYSTEM_ONLY;
MACRO_IMAGE IMAGE_NT_OPTIONAL_HDR32_MAGIC;
MACRO_IMAGE IMAGE_NT_OPTIONAL_HDR64_MAGIC;
MACRO_IMAGE IMAGE_NT_OPTIONAL_HDR_MAGIC;
MACRO_IMAGE IMAGE_NT_SIGNATURE;
MACRO_IMAGE IMAGE_NUMBEROF_DIRECTORY_ENTRIES;
MACRO_IMAGE_ORDINAL IMAGE_ORDINAL_FLAG;
MACRO_IMAGE_ORDINAL IMAGE_ORDINAL_FLAG32;
MACRO_IMAGE_ORDINAL IMAGE_ORDINAL_FLAG64;
MACRO_IMAGE IMAGE_OS2_SIGNATURE;
MACRO_IMAGE IMAGE_OS2_SIGNATURE_LE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_ABSOLUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_BRADDR;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_GPDISP;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_GPREL32;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_HINT;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_INLINE_REFLONG;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_LITERAL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_LITUSE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_MATCH;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_PAIR;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_REFHI;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_REFLO;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_REFLONG;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_REFLONGNB;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_REFQUAD;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_SECREL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_SECRELHI;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_SECRELLO;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_ALPHA_SECTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_ABSOLUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_DIR64;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_HIGH;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_HIGHADJ;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_HIGHLOW;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_IA64_IMM64;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_LOW;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_MIPS_JMPADDR;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_BASED_MIPS_JMPADDR16;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_ABSOLUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_DIR16;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_DIR32;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_DIR32NB;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_REL16;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_REL32;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_SECREL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_SECTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_I386_SEG12;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_ABSOLUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_GPREL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_JMPADDR;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_LITERAL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_PAIR;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_REFHALF;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_REFHI;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_REFLO;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_REFWORD;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_REFWORDNB;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_SECREL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_SECRELHI;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_SECRELLO;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_MIPS_SECTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ABSOLUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ADDR14;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ADDR16;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ADDR24;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ADDR32;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ADDR32NB;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_ADDR64;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_BRNTAKEN;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_BRTAKEN;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_IFGLUE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_IMGLUE;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_NEG;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_PAIR;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_REFHI;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_REFLO;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_REL14;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_REL24;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_SECREL;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_SECREL16;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_SECTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_TOCDEFN;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_TOCREL14;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_TOCREL16;
MACRO_IMAGE_SUBSYSTEM IMAGE_REL_PPC_TYPEMASK;
MACRO_IMAGE_SUBSYSTEM IMAGE_RESOURCE_DATA_IS_DIRECTORY;
MACRO_IMAGE_SUBSYSTEM IMAGE_RESOURCE_NAME_IS_STRING;
MACRO_IMAGE IMAGE_ROM_OPTIONAL_HDR_MAGIC;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_16BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_1BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_2BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_32BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_4BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_64BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_ALIGN_8BYTES;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_CNT_CODE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_CNT_INITIALIZED_DATA;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_CNT_UNINITIALIZED_DATA;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_LNK_COMDAT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_LNK_INFO;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_LNK_NRELOC_OVFL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_LNK_OTHER;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_LNK_REMOVE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_16BIT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_DISCARDABLE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_EXECUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_FARDATA;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_LOCKED;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_NOT_CACHED;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_NOT_PAGED;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_PRELOAD;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_PURGEABLE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_READ;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_SHARED;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_MEM_WRITE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_TYPE_DSECT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_TYPE_GROUP;
MACRO_IMAGE_SCN IMAGE_SCN_TYPE_NOLOAD;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_TYPE_NO_PAD;
MACRO_IMAGE_SUBSYSTEM IMAGE_SCN_TYPE_REG;
MACRO_IMAGE IMAGE_SEPARATE_DEBUG_SIGNATURE;
MACRO_IMAGE IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR;
MACRO_IMAGE IMAGE_SIZEOF_AUX_SYMBOL;
MACRO_IMAGE IMAGE_SIZEOF_BASE_RELOCATION;
MACRO_IMAGE IMAGE_SIZEOF_FILE_HEADER;
MACRO_IMAGE IMAGE_SIZEOF_LINENUMBER;
MACRO_IMAGE IMAGE_SIZEOF_NT_OPTIONAL_HEADER;
MACRO_IMAGE IMAGE_SIZEOF_RELOCATION;
MACRO_IMAGE IMAGE_SIZEOF_ROM_OPTIONAL_HEADER;
MACRO_IMAGE IMAGE_SIZEOF_SECTION_HEADER;
MACRO_IMAGE IMAGE_SIZEOF_SHORT_NAME;
MACRO_IMAGE IMAGE_SIZEOF_STD_OPTIONAL_HEADER;
MACRO_IMAGE IMAGE_SIZEOF_SYMBOL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_EFI_APPLICATION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_EFI_ROM;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_NATIVE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_NATIVE_WINDOWS;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_OS2_CUI;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_POSIX_CUI;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_UNKNOWN;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_WINDOWS_CE_GUI;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_WINDOWS_CUI;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_WINDOWS_GUI;
MACRO_IMAGE_SUBSYSTEM IMAGE_SUBSYSTEM_XBOX;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_ABSOLUTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_ARGUMENT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_AUTOMATIC;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_BIT_FIELD;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_BLOCK;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_END_OF_FUNCTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_END_OF_STRUCT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_ENUM_TAG;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_EXTERNAL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_EXTERNAL_DEF;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_FAR_EXTERNAL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_FILE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_FUNCTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_LABEL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_MEMBER_OF_ENUM;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_MEMBER_OF_STRUCT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_MEMBER_OF_UNION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_NULL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_REGISTER;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_REGISTER_PARAM;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_SECTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_STATIC;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_STRUCT_TAG;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_TYPE_DEFINITION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_UNDEFINED_LABEL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_UNDEFINED_STATIC;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_UNION_TAG;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_CLASS_WEAK_EXTERNAL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_DEBUG;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_DTYPE_ARRAY;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_DTYPE_FUNCTION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_DTYPE_NULL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_DTYPE_POINTER;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_BYTE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_CHAR;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_DOUBLE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_DWORD;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_ENUM;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_FLOAT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_INT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_LONG;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_MOE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_NULL;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_PCODE;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_SHORT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_STRUCT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_UINT;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_UNION;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_VOID;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_TYPE_WORD;
MACRO_IMAGE_SUBSYSTEM IMAGE_SYM_UNDEFINED;
MACRO_IMAGE IMAGE_VXD_SIGNATURE;
MACRO_IMAGE_SUBSYSTEM IMAGE_WEAK_EXTERN_SEARCH_ALIAS;
MACRO_IMAGE_SUBSYSTEM IMAGE_WEAK_EXTERN_SEARCH_LIBRARY;
MACRO_IMAGE_SUBSYSTEM IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY;
MACRO_INDEX INDEX_DrvAccumulateD3DDirtyRect;
MACRO_INDEX INDEX_DrvAlphaBlend;
MACRO_INDEX INDEX_DrvAssertMode;
MACRO_INDEX INDEX_DrvAssociateSharedSurface;
MACRO_INDEX INDEX_DrvBitBlt;
MACRO_INDEX INDEX_DrvCompletePDEV;
MACRO_INDEX INDEX_DrvCopyBits;
MACRO_INDEX INDEX_DrvCreateDeviceBitmap;
MACRO_INDEX INDEX_DrvCreateDeviceBitmapEx;
MACRO_INDEX INDEX_DrvDeleteDeviceBitmap;
MACRO_INDEX INDEX_DrvDeleteDeviceBitmapEx;
MACRO_INDEX INDEX_DrvDeriveSurface;
MACRO_INDEX INDEX_DrvDescribePixelFormat;
MACRO_INDEX INDEX_DrvDestroyFont;
MACRO_INDEX INDEX_DrvDisableDirectDraw;
MACRO_INDEX INDEX_DrvDisableDriver;
MACRO_INDEX INDEX_DrvDisablePDEV;
MACRO_INDEX INDEX_DrvDisableSurface;
MACRO_INDEX INDEX_DrvDitherColor;
MACRO_INDEX INDEX_DrvDrawEscape;
MACRO_INDEX INDEX_DrvEnableDirectDraw;
MACRO_INDEX INDEX_DrvEnablePDEV;
MACRO_INDEX INDEX_DrvEnableSurface;
MACRO_INDEX INDEX_DrvEndDoc;
MACRO_INDEX INDEX_DrvEndDxInterop;
MACRO_INDEX INDEX_DrvEscape;
MACRO_INDEX INDEX_DrvFillPath;
MACRO_INDEX INDEX_DrvFontManagement;
MACRO_INDEX INDEX_DrvFree;
MACRO_INDEX INDEX_DrvGetDirectDrawInfo;
MACRO_INDEX INDEX_DrvGetGlyphMode;
MACRO_INDEX INDEX_DrvGetModes;
MACRO_INDEX INDEX_DrvGetSynthesizedFontFiles;
MACRO_INDEX INDEX_DrvGetTrueTypeFile;
MACRO_INDEX INDEX_DrvGradientFill;
MACRO_INDEX INDEX_DrvIcmCheckBitmapBits;
MACRO_INDEX INDEX_DrvIcmCreateColorTransform;
MACRO_INDEX INDEX_DrvIcmDeleteColorTransform;
MACRO_INDEX INDEX_DrvIcmSetDeviceGammaRamp;
MACRO_INDEX INDEX_DrvLineTo;
MACRO_INDEX INDEX_DrvLoadFontFile;
MACRO_INDEX INDEX_DrvLockDisplayArea;
MACRO_INDEX INDEX_DrvMovePanning;
MACRO_INDEX INDEX_DrvMovePointer;
MACRO_INDEX INDEX_DrvNextBand;
MACRO_INDEX INDEX_DrvNotify;
MACRO_INDEX INDEX_DrvOffset;
MACRO_INDEX INDEX_DrvPaint;
MACRO_INDEX INDEX_DrvPlgBlt;
MACRO_INDEX INDEX_DrvQueryAdvanceWidths;
MACRO_INDEX INDEX_DrvQueryDeviceSupport;
MACRO_INDEX INDEX_DrvQueryFont;
MACRO_INDEX INDEX_DrvQueryFontCaps;
MACRO_INDEX INDEX_DrvQueryFontData;
MACRO_INDEX INDEX_DrvQueryFontFile;
MACRO_INDEX INDEX_DrvQueryFontTree;
MACRO_INDEX INDEX_DrvQueryGlyphAttrs;
MACRO_INDEX INDEX_DrvQueryPerBandInfo;
MACRO_INDEX INDEX_DrvQuerySpoolType;
MACRO_INDEX INDEX_DrvQueryTrueTypeOutline;
MACRO_INDEX INDEX_DrvQueryTrueTypeTable;
MACRO_INDEX INDEX_DrvRealizeBrush;
MACRO_INDEX INDEX_DrvRenderHint;
MACRO_INDEX INDEX_DrvReserved1;
MACRO_INDEX INDEX_DrvReserved10;
MACRO_INDEX INDEX_DrvReserved11;
MACRO_INDEX INDEX_DrvReserved2;
MACRO_INDEX INDEX_DrvReserved3;
MACRO_INDEX INDEX_DrvReserved4;
MACRO_INDEX INDEX_DrvReserved5;
MACRO_INDEX INDEX_DrvReserved6;
MACRO_INDEX INDEX_DrvReserved7;
MACRO_INDEX INDEX_DrvReserved8;
MACRO_INDEX INDEX_DrvReserved9;
MACRO_INDEX INDEX_DrvResetDevice;
MACRO_INDEX INDEX_DrvResetPDEV;
MACRO_INDEX INDEX_DrvSaveScreenBits;
MACRO_INDEX INDEX_DrvSendPage;
MACRO_INDEX INDEX_DrvSetPalette;
MACRO_INDEX INDEX_DrvSetPixelFormat;
MACRO_INDEX INDEX_DrvSetPointerShape;
MACRO_INDEX INDEX_DrvStartBanding;
MACRO_INDEX INDEX_DrvStartDoc;
MACRO_INDEX INDEX_DrvStartDxInterop;
MACRO_INDEX INDEX_DrvStartPage;
MACRO_INDEX INDEX_DrvStretchBlt;
MACRO_INDEX INDEX_DrvStretchBltROP;
MACRO_INDEX INDEX_DrvStrokeAndFillPath;
MACRO_INDEX INDEX_DrvStrokePath;
MACRO_INDEX INDEX_DrvSwapBuffers;
MACRO_INDEX INDEX_DrvSynchronize;
MACRO_INDEX INDEX_DrvSynchronizeRedirectionBitmaps;
MACRO_INDEX INDEX_DrvSynchronizeSurface;
MACRO_INDEX INDEX_DrvSynthesizeFont;
MACRO_INDEX INDEX_DrvTextOut;
MACRO_INDEX INDEX_DrvTransparentBlt;
MACRO_INDEX INDEX_DrvUnknown1;
MACRO_INDEX INDEX_DrvUnknown2;
MACRO_INDEX INDEX_DrvUnknown3;
MACRO_INDEX INDEX_DrvUnknown4;
MACRO_INDEX INDEX_DrvUnknown5;
MACRO_INDEX INDEX_DrvUnloadFontFile;
MACRO_INDEX INDEX_DrvUnlockDisplayArea;
MACRO_INDEX INDEX_LAST;
MACRO_INHERIT_ACE INHERITED_ACE;
MACRO_INHERIT_ACE INHERIT_ONLY_ACE;
MACRO_INVALID_ACTIVATION INVALID_ACTIVATION_CONTEXT;
MACRO_INVALID INVALID_FILE_ATTRIBUTES;
MACRO_IOCTL_TAPE IOCTL_TAPE_CREATE_PARTITION;
MACRO_IOCTL_TAPE IOCTL_TAPE_ERASE;
MACRO_IOCTL_TAPE IOCTL_TAPE_GET_DRIVE_PARAMS;
MACRO_IOCTL_TAPE IOCTL_TAPE_GET_MEDIA_PARAMS;
MACRO_IOCTL_TAPE IOCTL_TAPE_GET_POSITION;
MACRO_IOCTL_TAPE IOCTL_TAPE_GET_STATUS;
MACRO_IOCTL_TAPE IOCTL_TAPE_PREPARE;
MACRO_IOCTL_TAPE IOCTL_TAPE_SET_DRIVE_PARAMS;
MACRO_IOCTL_TAPE IOCTL_TAPE_SET_MEDIA_PARAMS;
MACRO_IOCTL_TAPE IOCTL_TAPE_SET_POSITION;
MACRO_IOCTL_TAPE IOCTL_TAPE_WRITE_MARKS;
MACRO_IOCTL IOCTL_VOLUME_BASE;
MACRO_IO_ATTACH IO_ATTACH_DEVICE_API;
MACRO_IO IO_COMPLETION_MODIFY_STATE;
MACRO_IO IO_COMPLETION_QUERY_STATE;
MACRO_IO_REPARSE IO_REPARSE_TAG_MOUNT_POINT;
MACRO_IO_REPARSE IO_REPARSE_TAG_RESERVED_ONE;
MACRO_IO_REPARSE IO_REPARSE_TAG_RESERVED_RANGE;
MACRO_IO_REPARSE IO_REPARSE_TAG_RESERVED_ZERO;
MACRO_IO_REPARSE IO_REPARSE_TAG_SYMBOLIC_LINK;
MACRO_IO_REPARSE IO_REPARSE_TAG_SYMLINK;
MACRO_IO_REPARSE IO_REPARSE_TAG_VALID_VALUES;
MACRO_CHARSET ISO10_CHARSET;
MACRO_CHARSET ISO3_CHARSET;
MACRO_CHARSET ISO4_CHARSET;
MACRO_IS IS_TEXT_UNICODE_ASCII16;
MACRO_IS IS_TEXT_UNICODE_CONTROLS;
MACRO_IS IS_TEXT_UNICODE_DBCS_LEADBYTE;
MACRO_IS IS_TEXT_UNICODE_ILLEGAL_CHARS;
MACRO_IS IS_TEXT_UNICODE_NOT_ASCII_MASK;
MACRO_IS IS_TEXT_UNICODE_NOT_UNICODE_MASK;
MACRO_IS IS_TEXT_UNICODE_NULL_BYTES;
MACRO_IS IS_TEXT_UNICODE_ODD_LENGTH;
MACRO_IS IS_TEXT_UNICODE_REVERSE_ASCII16;
MACRO_IS IS_TEXT_UNICODE_REVERSE_CONTROLS;
MACRO_IS IS_TEXT_UNICODE_REVERSE_MASK;
MACRO_IS IS_TEXT_UNICODE_REVERSE_SIGNATURE;
MACRO_IS IS_TEXT_UNICODE_REVERSE_STATISTICS;
MACRO_IS IS_TEXT_UNICODE_SIGNATURE;
MACRO_IS IS_TEXT_UNICODE_STATISTICS;
MACRO_IS IS_TEXT_UNICODE_UNICODE_MASK;
_CM_ERROR_CONTROL_TYPE IgnoreError;
void __stdcall InitializeListHead(PLIST_ENTRY ListHead);
_KTHREAD_STATE Initialized;
void __stdcall InsertHeadList(PLIST_ENTRY ListHead, PLIST_ENTRY Entry);
void __stdcall InsertTailList(PLIST_ENTRY ListHead, PLIST_ENTRY Entry);
_INTERFACE_TYPE InterfaceTypeUndefined;
_INTERFACE_TYPE Internal;
_INTERFACE_TYPE InternalPowerBus;
_KOBJECTS InterruptObject;
int __stdcall IntersectClipRect(HDC, int, int, int, int);
BOOL __stdcall InvertRgn(HDC, HRGN);
_IO_COMPLETION_INFORMATION_CLASS IoCompletionBasicInformation;
BOOLEAN __stdcall IsListEmpty(const LIST_ENTRY *ListHead);
_INTERFACE_TYPE Isa;
MACRO_JOB JOB_OBJECT_ALL_ACCESS;
MACRO_JOB JOB_OBJECT_ASSIGN_PROCESS;
MACRO_JOB JOB_OBJECT_LIMIT_ACTIVE_PROCESS;
MACRO_JOB JOB_OBJECT_LIMIT_AFFINITY;
MACRO_JOB JOB_OBJECT_LIMIT_BREAKAWAY_OK;
MACRO_JOB JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION;
MACRO_JOB JOB_OBJECT_LIMIT_JOB_MEMORY;
MACRO_JOB JOB_OBJECT_LIMIT_JOB_TIME;
MACRO_JOB JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE;
MACRO_JOB JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME;
MACRO_JOB JOB_OBJECT_LIMIT_PRIORITY_CLASS;
MACRO_JOB JOB_OBJECT_LIMIT_PROCESS_MEMORY;
MACRO_JOB JOB_OBJECT_LIMIT_PROCESS_TIME;
MACRO_JOB JOB_OBJECT_LIMIT_SCHEDULING_CLASS;
MACRO_JOB JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK;
MACRO_JOB JOB_OBJECT_LIMIT_WORKINGSET;
MACRO_JOB JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS;
MACRO_JOB JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT;
MACRO_JOB JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO;
MACRO_JOB JOB_OBJECT_MSG_END_OF_JOB_TIME;
MACRO_JOB JOB_OBJECT_MSG_END_OF_PROCESS_TIME;
MACRO_JOB JOB_OBJECT_MSG_EXIT_PROCESS;
MACRO_JOB JOB_OBJECT_MSG_JOB_MEMORY_LIMIT;
MACRO_JOB JOB_OBJECT_MSG_NEW_PROCESS;
MACRO_JOB JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT;
MACRO_JOB JOB_OBJECT_POST_AT_END_OF_JOB;
MACRO_JOB JOB_OBJECT_QUERY;
MACRO_JOB JOB_OBJECT_SECURITY_FILTER_TOKENS;
MACRO_JOB JOB_OBJECT_SECURITY_NO_ADMIN;
MACRO_JOB JOB_OBJECT_SECURITY_ONLY_TOKEN;
MACRO_JOB JOB_OBJECT_SECURITY_RESTRICTED_TOKEN;
MACRO_JOB JOB_OBJECT_SET_ATTRIBUTES;
MACRO_JOB JOB_OBJECT_SET_SECURITY_ATTRIBUTES;
MACRO_JOB JOB_OBJECT_TERMINATE;
MACRO_JOB JOB_OBJECT_TERMINATE_AT_END_OF_JOB;
MACRO_JOB JOB_OBJECT_UILIMIT_DESKTOP;
MACRO_JOB JOB_OBJECT_UILIMIT_DISPLAYSETTINGS;
MACRO_JOB JOB_OBJECT_UILIMIT_EXITWINDOWS;
MACRO_JOB JOB_OBJECT_UILIMIT_GLOBALATOMS;
MACRO_JOB JOB_OBJECT_UILIMIT_HANDLES;
MACRO_JOB JOB_OBJECT_UILIMIT_READCLIPBOARD;
MACRO_JOB JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS;
MACRO_JOB JOB_OBJECT_UILIMIT_WRITECLIPBOARD;
MACRO_CHARSET JOHAB_CHARSET;
MACRO_JOIN JOIN_BEVEL;
MACRO_JOIN JOIN_MITER;
MACRO_JOIN JOIN_ROUND;
_JOBOBJECTINFOCLASS JobObjectAssociateCompletionPortInformation;
_JOBOBJECTINFOCLASS JobObjectBasicAccountingInformation;
_JOBOBJECTINFOCLASS JobObjectBasicAndIoAccountingInformation;
_JOBOBJECTINFOCLASS JobObjectBasicLimitInformation;
_JOBOBJECTINFOCLASS JobObjectBasicProcessIdList;
_JOBOBJECTINFOCLASS JobObjectBasicUIRestrictions;
_JOBOBJECTINFOCLASS JobObjectEndOfJobTimeInformation;
_JOBOBJECTINFOCLASS JobObjectExtendedLimitInformation;
_JOBOBJECTINFOCLASS JobObjectGroupInformation;
_JOBOBJECTINFOCLASS JobObjectJobSetInformation;
_JOBOBJECTINFOCLASS JobObjectSecurityLimitInformation;
MACRO_KERNEL KERNEL_USER_SHARED_DATA;
MACRO_KEYEDEVENT KEYEDEVENT_ALL_ACCESS;
MACRO_KEYEDEVENT KEYEDEVENT_WAIT;
MACRO_KEYEDEVENT KEYEDEVENT_WAKE;
MACRO_KEY KEY_ALL_ACCESS;
MACRO_KEY KEY_CREATE_LINK;
MACRO_KEY KEY_CREATE_SUB_KEY;
MACRO_KEY KEY_ENUMERATE_SUB_KEYS;
MACRO_KEY KEY_EXECUTE;
MACRO_KEY KEY_NOTIFY;
MACRO_KEY KEY_QUERY_VALUE;
MACRO_KEY KEY_READ;
MACRO_KEY KEY_SET_VALUE;
MACRO_KEY KEY_WOW64_32KEY;
MACRO_KEY KEY_WOW64_64KEY;
MACRO_KEY KEY_WOW64_RES;
MACRO_KEY KEY_WRITE;
MACRO_KF KF_3DNOW;
MACRO_KF KF_AMDK6MTRR;
MACRO_KF KF_BRANCH;
MACRO_KF KF_CMOV;
MACRO_KF KF_CMPXCHG16B;
MACRO_KF KF_CMPXCHG8B;
MACRO_KF KF_CR4;
MACRO_KF KF_DTS;
MACRO_KF KF_FAST_SYSCALL;
MACRO_KF KF_FXSR;
MACRO_KF KF_GLOBAL_PAGE;
MACRO_KF KF_LARGE_PAGE;
MACRO_KF KF_MMX;
MACRO_KF KF_MTRR;
MACRO_KF KF_NX_BIT;
MACRO_KF KF_NX_DISABLED;
MACRO_KF KF_NX_ENABLED;
MACRO_KF KF_PAT;
MACRO_KF KF_RDTSC;
MACRO_KF KF_RDWRFSGSBASE_BIT;
MACRO_KF KF_SSE3;
MACRO_KF KF_V86_VIS;
MACRO_KF KF_WORKING_PTE;
MACRO_KF KF_XMMI;
MACRO_KF KF_XMMI64;
MACRO_KF KF_XSAVEOPT_BIT;
MACRO_KF KF_XSTATE;
MACRO_KF KF_XSTATE_BIT;
MACRO_KGDT KGDT_BASE_HI;
MACRO_KGDT KGDT_BASE_LOW;
MACRO_KGDT KGDT_BASE_MID;
MACRO_KGDT KGDT_LIMIT_HI;
MACRO_KGDT KGDT_LIMIT_LOW;
MACRO_KINTERRUPT KINTERRUPT_ACTUAL_LOCK;
MACRO_KINTERRUPT KINTERRUPT_DISPATCH_ADDRESS;
MACRO_KINTERRUPT KINTERRUPT_DISPATCH_CODE;
MACRO_KINTERRUPT KINTERRUPT_DISPATCH_COUNT;
MACRO_KINTERRUPT KINTERRUPT_INTERRUPT_LIST_HEAD;
MACRO_KINTERRUPT KINTERRUPT_IRQL;
MACRO_KINTERRUPT KINTERRUPT_SERVICE_CONTEXT;
MACRO_KINTERRUPT KINTERRUPT_SERVICE_ROUTINE;
MACRO_KINTERRUPT KINTERRUPT_SYNCHRONIZE_IRQL;
MACRO_KINTERRUPT KINTERRUPT_TICK_COUNT;
MACRO_KINTERRUPT KINTERRUPT_VECTOR;
MACRO_KI_EXCEPTION KI_EXCEPTION_ACCESS_VIOLATION;
MACRO_KI_EXCEPTION KI_EXCEPTION_INTERNAL;
MACRO_KI KI_USER_SHARED_DATA_PHYSICAL;
MACRO_KOBJECT KOBJECT_LOCK_BIT;
MACRO_KOBJECT KOBJECT_TYPE_MASK;
MACRO_CHARSET KOI8_CHARSET;
MACRO_KPCR KPCR_CONTEXT_SWITCHES;
MACRO_KPCR KPCR_CURRENT_THREAD;
MACRO_KPCR KPCR_DR6;
MACRO_KPCR KPCR_DR7;
MACRO_KPCR KPCR_EXCEPTION_LIST;
MACRO_KPCR KPCR_GDT;
MACRO_KPCR KPCR_IDR;
MACRO_KPCR KPCR_IDT;
MACRO_KPCR KPCR_INITIAL_STACK;
MACRO_KPCR KPCR_IRQL;
MACRO_KPCR KPCR_IRR;
MACRO_KPCR KPCR_IRR_ACTIVE;
MACRO_KPCR KPCR_KD_VERSION_BLOCK;
MACRO_KPCR KPCR_NPX_THREAD;
MACRO_KPCR KPCR_NUMBER;
MACRO_KPCR KPCR_PERF_GLOBAL_GROUP_MASK;
MACRO_KPCR KPCR_PRCB;
MACRO_KPCR KPCR_PRCB_ADJUST_DPC_THRESHOLD;
MACRO_KPCR KPCR_PRCB_CPU_TYPE;
MACRO_KPCR KPCR_PRCB_DATA;
MACRO_KPCR KPCR_PRCB_DEBUG_DPC_TIME;
MACRO_KPCR KPCR_PRCB_DEFERRED_READY_LIST_HEAD;
MACRO_KPCR KPCR_PRCB_DPC_COUNT;
MACRO_KPCR KPCR_PRCB_DPC_INTERRUPT_REQUESTED;
MACRO_KPCR KPCR_PRCB_DPC_LAST_COUNT;
MACRO_KPCR KPCR_PRCB_DPC_QUEUE_DEPTH;
MACRO_KPCR KPCR_PRCB_DPC_REQUEST_RATE;
MACRO_KPCR KPCR_PRCB_DPC_ROUTINE_ACTIVE;
MACRO_KPCR KPCR_PRCB_DPC_STACK;
MACRO_KPCR KPCR_PRCB_DPC_TIME;
MACRO_KPCR KPCR_PRCB_IDLE_SCHEDULE;
MACRO_KPCR KPCR_PRCB_IDLE_THREAD;
MACRO_KPCR KPCR_PRCB_INTERRUPT_COUNT;
MACRO_KPCR KPCR_PRCB_INTERRUPT_TIME;
MACRO_KPCR KPCR_PRCB_KERNEL_TIME;
MACRO_KPCR KPCR_PRCB_MAXIMUM_DPC_QUEUE_DEPTH;
MACRO_KPCR KPCR_PRCB_NEXT_THREAD;
MACRO_KPCR KPCR_PRCB_POWER_STATE_IDLE_FUNCTION;
MACRO_KPCR KPCR_PRCB_PRCB_LOCK;
MACRO_KPCR KPCR_PRCB_QUANTUM_END;
MACRO_KPCR KPCR_PRCB_SET_MEMBER;
MACRO_KPCR KPCR_PRCB_SKIP_TICK;
MACRO_KPCR KPCR_PRCB_TIMER_REQUEST;
MACRO_KPCR KPCR_PRCB_USER_TIME;
MACRO_KPCR KPCR_PROCESSOR_NUMBER;
MACRO_KPCR KPCR_SELF;
MACRO_KPCR KPCR_SET_MEMBER;
MACRO_KPCR KPCR_SET_MEMBER_COPY;
MACRO_KPCR KPCR_STACK_LIMIT;
MACRO_KPCR KPCR_STALL_SCALE_FACTOR;
MACRO_KPCR KPCR_SYSTEM_CALLS;
MACRO_KPCR KPCR_TEB;
MACRO_KPCR KPCR_TSS;
MACRO_KPCR KPCR_VDM_ALERT;
MACRO_KPRCB KPRCB_DR0;
MACRO_KPRCB KPRCB_DR1;
MACRO_KPRCB KPRCB_DR2;
MACRO_KPRCB KPRCB_DR3;
MACRO_KPRCB KPRCB_DR6;
MACRO_KPRCB KPRCB_DR7;
MACRO_KPRCB KPRCB_TIMER_HAND;
MACRO_KPRCB KPRCB_TIMER_REQUEST;
MACRO_KPROCESS KPROCESS_ACTIVE_PROCESSORS;
MACRO_KPROCESS KPROCESS_DIRECTORY_TABLE_BASE;
MACRO_KPROCESS KPROCESS_INT21_DESCRIPTOR0;
MACRO_KPROCESS KPROCESS_INT21_DESCRIPTOR1;
MACRO_KPROCESS KPROCESS_IOPM_OFFSET;
MACRO_KPROCESS KPROCESS_LDT_DESCRIPTOR0;
MACRO_KPROCESS KPROCESS_LDT_DESCRIPTOR1;
MACRO_KSEG0 KSEG0_BASE_PAE;
MACRO_KTHREAD KTHREAD_ALERTED;
MACRO_KTHREAD KTHREAD_APCSTATE_PROCESS;
MACRO_KTHREAD KTHREAD_APC_STATE_INDEX;
MACRO_KTHREAD KTHREAD_CALLBACK_STACK;
MACRO_KTHREAD KTHREAD_COMBINED_APC_DISABLE;
MACRO_KTHREAD KTHREAD_CONTEXT_SWITCHES;
MACRO_KTHREAD KTHREAD_DEBUG_ACTIVE;
MACRO_KTHREAD KTHREAD_INITIAL_STACK;
MACRO_KTHREAD KTHREAD_KERNEL_STACK;
MACRO_KTHREAD KTHREAD_KERNEL_TIME;
MACRO_KTHREAD KTHREAD_LARGE_STACK;
MACRO_KTHREAD KTHREAD_NEXT_PROCESSOR;
MACRO_KTHREAD KTHREAD_NPX_STATE;
MACRO_KTHREAD KTHREAD_PENDING_KERNEL_APC;
MACRO_KTHREAD KTHREAD_PENDING_USER_APC;
MACRO_KTHREAD KTHREAD_PREVIOUS_MODE;
MACRO_KTHREAD KTHREAD_PRIORITY;
MACRO_KTHREAD KTHREAD_QUANTUM;
MACRO_KTHREAD KTHREAD_SERVICE_TABLE;
MACRO_KTHREAD KTHREAD_SPECIAL_APC_DISABLE;
MACRO_KTHREAD KTHREAD_STACK_BASE;
MACRO_KTHREAD KTHREAD_STACK_LIMIT;
MACRO_KTHREAD KTHREAD_STATE_;
MACRO_KTHREAD KTHREAD_SWAP_BUSY;
MACRO_KTHREAD KTHREAD_TEB;
MACRO_KTHREAD KTHREAD_TRAP_FRAME;
MACRO_KTHREAD KTHREAD_USER_TIME;
MACRO_KTHREAD KTHREAD_WAIT_IRQL;
MACRO_KTHREAD KTHREAD_WAIT_REASON;
MACRO_KTRAP KTRAP_FRAME_ALIGN;
MACRO_KTRAP KTRAP_FRAME_CS;
MACRO_KTRAP KTRAP_FRAME_DEBUGARGMARK;
MACRO_KTRAP KTRAP_FRAME_DEBUGEBP;
MACRO_KTRAP KTRAP_FRAME_DEBUGEIP;
MACRO_KTRAP KTRAP_FRAME_DEBUGPOINTER;
MACRO_KTRAP KTRAP_FRAME_DR0;
MACRO_KTRAP KTRAP_FRAME_DR1;
MACRO_KTRAP KTRAP_FRAME_DR2;
MACRO_KTRAP KTRAP_FRAME_DR3;
MACRO_KTRAP KTRAP_FRAME_DR6;
MACRO_KTRAP KTRAP_FRAME_DR7;
MACRO_KTRAP KTRAP_FRAME_DS;
MACRO_KTRAP KTRAP_FRAME_EAX;
MACRO_KTRAP KTRAP_FRAME_EBP;
MACRO_KTRAP KTRAP_FRAME_EBX;
MACRO_KTRAP KTRAP_FRAME_ECX;
MACRO_KTRAP KTRAP_FRAME_EDI;
MACRO_KTRAP KTRAP_FRAME_EDX;
MACRO_KTRAP KTRAP_FRAME_EFLAGS;
MACRO_KTRAP KTRAP_FRAME_EIP;
MACRO_KTRAP KTRAP_FRAME_ERROR_CODE;
MACRO_KTRAP KTRAP_FRAME_ES;
MACRO_KTRAP KTRAP_FRAME_ESI;
MACRO_KTRAP KTRAP_FRAME_ESP;
MACRO_KTRAP KTRAP_FRAME_EXCEPTION_LIST;
MACRO_KTRAP KTRAP_FRAME_FS;
MACRO_KTRAP KTRAP_FRAME_GS;
MACRO_KTRAP KTRAP_FRAME_LENGTH;
MACRO_KTRAP KTRAP_FRAME_PREVIOUS_MODE;
MACRO_KTRAP KTRAP_FRAME_RESERVED1;
MACRO_KTRAP KTRAP_FRAME_RESERVED2;
MACRO_KTRAP KTRAP_FRAME_RESERVED3;
MACRO_KTRAP KTRAP_FRAME_RESERVED4;
MACRO_KTRAP KTRAP_FRAME_RESERVED5;
MACRO_KTRAP KTRAP_FRAME_RESERVED6;
MACRO_KTRAP KTRAP_FRAME_RESERVED7;
MACRO_KTRAP KTRAP_FRAME_RESERVED8;
MACRO_KTRAP KTRAP_FRAME_RESERVED9;
MACRO_KTRAP KTRAP_FRAME_SIZE;
MACRO_KTRAP KTRAP_FRAME_SS;
MACRO_KTRAP KTRAP_FRAME_TEMPCS;
MACRO_KTRAP KTRAP_FRAME_TEMPESP;
MACRO_KTRAP KTRAP_FRAME_V86_DS;
MACRO_KTRAP KTRAP_FRAME_V86_ES;
MACRO_KTRAP KTRAP_FRAME_V86_FS;
MACRO_KTRAP KTRAP_FRAME_V86_GS;
MACRO_KTSS KTSS_CR3;
MACRO_KTSS KTSS_CS;
MACRO_KTSS KTSS_DS;
MACRO_KTSS KTSS_EAX;
MACRO_KTSS KTSS_EBP;
MACRO_KTSS KTSS_EBX;
MACRO_KTSS KTSS_ECX;
MACRO_KTSS KTSS_EDI;
MACRO_KTSS KTSS_EDX;
MACRO_KTSS KTSS_EFLAGS;
MACRO_KTSS KTSS_EIP;
MACRO_KTSS KTSS_ES;
MACRO_KTSS KTSS_ESI;
MACRO_KTSS KTSS_ESP;
MACRO_KTSS KTSS_ESP0;
MACRO_KTSS KTSS_FS;
MACRO_KTSS KTSS_GS;
MACRO_KTSS KTSS_IOMAPBASE;
MACRO_KTSS KTSS_IO_MAPS;
MACRO_KTSS KTSS_LDT;
MACRO_KTSS KTSS_SS;
MACRO_KUSER KUSER_SHARED_PROCESSOR_FEATURES;
MACRO_KUSER KUSER_SHARED_SYSCALL;
MACRO_KUSER KUSER_SHARED_SYSCALL_RET;
$A98B79572840FDA381AA9CDCE69D1BC8 KeepPrefetchedData;
$A98B79572840FDA381AA9CDCE69D1BC8 KeepReadData;
_MODE KernelMode;
_KEY_INFORMATION_CLASS KeyBasicInformation;
_KEY_INFORMATION_CLASS KeyCachedInformation;
_KEY_SET_INFORMATION_CLASS KeyControlFlagsInformation;
_KEY_INFORMATION_CLASS KeyFlagsInformation;
_KEY_INFORMATION_CLASS KeyFullInformation;
_KEY_INFORMATION_CLASS KeyHandleTagsInformation;
_KEY_INFORMATION_CLASS KeyNameInformation;
_KEY_INFORMATION_CLASS KeyNodeInformation;
_KEY_SET_INFORMATION_CLASS KeySetDebugInformation;
_KEY_SET_INFORMATION_CLASS KeySetHandleTagsInformation;
_KEY_SET_INFORMATION_CLASS KeySetVirtualizationInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValueBasicInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValueFullInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValueFullInformationAlign64;
_KEY_VALUE_INFORMATION_CLASS KeyValuePartialInformation;
_KEY_VALUE_INFORMATION_CLASS KeyValuePartialInformationAlign64;
_KEY_INFORMATION_CLASS KeyVirtualizationInformation;
_KEY_SET_INFORMATION_CLASS KeyWow64FlagsInformation;
_KEY_SET_INFORMATION_CLASS KeyWriteTimeInformation;
void __stdcall KiRaiseUserExceptionDispatcher();
void __stdcall KiUserCallbackDispatcher(ULONG Index, PVOID Argument, ULONG ArgumentLength);
void __stdcall KiUserExceptionDispatcher(PEXCEPTION_RECORD ExceptionRecord, PCONTEXT Context);
MACRO_SECURITY_INFORMATION LABEL_SECURITY_INFORMATION;
MACRO_LANG LANG_AFRIKAANS;
MACRO_LANG LANG_ALBANIAN;
MACRO_LANG LANG_ALSATIAN;
MACRO_LANG LANG_AMHARIC;
MACRO_LANG LANG_ARABIC;
MACRO_LANG LANG_ARMENIAN;
MACRO_LANG LANG_ASSAMESE;
MACRO_LANG LANG_AZERBAIJANI;
MACRO_LANG LANG_AZERI;
MACRO_LANG LANG_BANGLA;
MACRO_LANG LANG_BASHKIR;
MACRO_LANG LANG_BASQUE;
MACRO_LANG LANG_BELARUSIAN;
MACRO_LANG LANG_BENGALI;
MACRO_LANG LANG_BOSNIAN;
MACRO_LANG LANG_BOSNIAN_NEUTRAL;
MACRO_LANG LANG_BRETON;
MACRO_LANG LANG_BULGARIAN;
MACRO_LANG LANG_CATALAN;
MACRO_LANG LANG_CENTRAL_KURDISH;
MACRO_LANG LANG_CHEROKEE;
MACRO_LANG LANG_CHINESE;
MACRO_LANG LANG_CHINESE_SIMPLIFIED;
MACRO_LANG LANG_CHINESE_TRADITIONAL;
MACRO_LANG_ESPERANTO LANG_CORNISH;
MACRO_LANG LANG_CORSICAN;
MACRO_LANG LANG_CROATIAN;
MACRO_LANG LANG_CZECH;
MACRO_LANG LANG_DANISH;
MACRO_LANG LANG_DARI;
MACRO_LANG LANG_DIVEHI;
MACRO_LANG LANG_DUTCH;
MACRO_LANG LANG_ENGLISH;
MACRO_LANG_ESPERANTO LANG_ESPERANTO;
MACRO_LANG LANG_ESTONIAN;
MACRO_LANG LANG_FAEROESE;
MACRO_LANG LANG_FARSI;
MACRO_LANG LANG_FILIPINO;
MACRO_LANG LANG_FINNISH;
MACRO_LANG LANG_FRENCH;
MACRO_LANG LANG_FRISIAN;
MACRO_LANG LANG_FULAH;
MACRO_LANG_ESPERANTO LANG_GAELIC;
MACRO_LANG LANG_GALICIAN;
MACRO_LANG LANG_GEORGIAN;
MACRO_LANG LANG_GERMAN;
MACRO_LANG LANG_GREEK;
MACRO_LANG LANG_GREENLANDIC;
MACRO_LANG LANG_GUJARATI;
MACRO_LANG LANG_HAUSA;
MACRO_LANG LANG_HAWAIIAN;
MACRO_LANG LANG_HEBREW;
MACRO_LANG LANG_HINDI;
MACRO_LANG LANG_HUNGARIAN;
MACRO_LANG LANG_ICELANDIC;
MACRO_LANG LANG_IGBO;
MACRO_LANG LANG_INDONESIAN;
MACRO_LANG LANG_INUKTITUT;
MACRO_LANG LANG_INVARIANT;
MACRO_LANG LANG_IRISH;
MACRO_LANG LANG_ITALIAN;
MACRO_LANG LANG_JAPANESE;
MACRO_LANG LANG_KANNADA;
MACRO_LANG LANG_KASHMIRI;
MACRO_LANG LANG_KAZAK;
MACRO_LANG LANG_KHMER;
MACRO_LANG LANG_KICHE;
MACRO_LANG LANG_KINYARWANDA;
MACRO_LANG LANG_KONKANI;
MACRO_LANG LANG_KOREAN;
MACRO_LANG LANG_KYRGYZ;
MACRO_LANG LANG_LAO;
MACRO_LANG LANG_LATVIAN;
MACRO_LANG LANG_LITHUANIAN;
MACRO_LANG LANG_LOWER_SORBIAN;
MACRO_LANG LANG_LUXEMBOURGISH;
MACRO_LANG LANG_MACEDONIAN;
MACRO_LANG_ESPERANTO LANG_MALAGASY;
MACRO_LANG LANG_MALAY;
MACRO_LANG LANG_MALAYALAM;
MACRO_LANG LANG_MALTESE;
MACRO_LANG LANG_MANIPURI;
MACRO_LANG_ESPERANTO LANG_MANX_GAELIC;
MACRO_LANG LANG_MAORI;
MACRO_LANG LANG_MAPUDUNGUN;
MACRO_LANG LANG_MARATHI;
MACRO_LANG LANG_MOHAWK;
MACRO_LANG LANG_MONGOLIAN;
MACRO_LANG LANG_NEPALI;
MACRO_LANG LANG_NEUTRAL;
MACRO_LANG LANG_NORWEGIAN;
MACRO_LANG LANG_OCCITAN;
MACRO_LANG LANG_ODIA;
MACRO_LANG LANG_ORIYA;
MACRO_LANG LANG_PASHTO;
MACRO_LANG LANG_PERSIAN;
MACRO_LANG LANG_POLISH;
MACRO_LANG LANG_PORTUGUESE;
MACRO_LANG LANG_PULAR;
MACRO_LANG LANG_PUNJABI;
MACRO_LANG LANG_QUECHUA;
MACRO_LANG LANG_ROMANIAN;
MACRO_LANG LANG_ROMANSH;
MACRO_LANG LANG_RUSSIAN;
MACRO_LANG_ESPERANTO LANG_SAAMI;
MACRO_LANG LANG_SAKHA;
MACRO_LANG LANG_SAMI;
MACRO_LANG LANG_SANSKRIT;
MACRO_LANG LANG_SCOTTISH_GAELIC;
MACRO_LANG LANG_SERBIAN;
MACRO_LANG LANG_SERBIAN_NEUTRAL;
MACRO_LANG LANG_SINDHI;
MACRO_LANG LANG_SINHALESE;
MACRO_LANG LANG_SLOVAK;
MACRO_LANG LANG_SLOVENIAN;
MACRO_LANG LANG_SOTHO;
MACRO_LANG LANG_SPANISH;
MACRO_LANG_ESPERANTO LANG_SUTU;
MACRO_LANG LANG_SWAHILI;
MACRO_LANG LANG_SWEDISH;
MACRO_LANG LANG_SYRIAC;
MACRO_LANG_SYSTEM LANG_SYSTEM_DEFAULT;
MACRO_LANG LANG_TAJIK;
MACRO_LANG LANG_TAMAZIGHT;
MACRO_LANG LANG_TAMIL;
MACRO_LANG LANG_TATAR;
MACRO_LANG LANG_TELUGU;
MACRO_LANG LANG_THAI;
MACRO_LANG LANG_TIBETAN;
MACRO_LANG LANG_TIGRIGNA;
MACRO_LANG LANG_TIGRINYA;
MACRO_LANG_ESPERANTO LANG_TSONGA;
MACRO_LANG LANG_TSWANA;
MACRO_LANG LANG_TURKISH;
MACRO_LANG LANG_TURKMEN;
MACRO_LANG LANG_UIGHUR;
MACRO_LANG LANG_UKRAINIAN;
MACRO_LANG LANG_UPPER_SORBIAN;
MACRO_LANG LANG_URDU;
MACRO_LANG_SYSTEM LANG_USER_DEFAULT;
MACRO_LANG LANG_UZBEK;
MACRO_LANG LANG_VALENCIAN;
MACRO_LANG_ESPERANTO LANG_VENDA;
MACRO_LANG LANG_VIETNAMESE;
MACRO_LANG_ESPERANTO LANG_WALON;
MACRO_LANG LANG_WELSH;
MACRO_LANG LANG_WOLOF;
MACRO_LANG LANG_XHOSA;
MACRO_LANG LANG_YAKUT;
MACRO_LANG LANG_YI;
MACRO_LANG LANG_YORUBA;
MACRO_LANG LANG_ZULU;
MACRO_LAYOUT LAYOUT_BITMAPORIENTATIONPRESERVED;
MACRO_LAYOUT LAYOUT_BTT;
MACRO_LAYOUT LAYOUT_LTR;
MACRO_LAYOUT LAYOUT_ORIENTATIONMASK;
MACRO_LAYOUT LAYOUT_RTL;
MACRO_LAYOUT LAYOUT_VBH;
MACRO_LA LA_ALTERNATE;
MACRO_LA LA_GEOMETRIC;
MACRO_LA LA_STARTGAP;
MACRO_LA LA_STYLED;
MACRO_LCPRI LCPRI_BOOTCONFIG;
MACRO_LCPRI LCPRI_DESIRED;
MACRO_LCPRI LCPRI_DISABLED;
MACRO_LCPRI LCPRI_FORCECONFIG;
MACRO_LCPRI LCPRI_HARDRECONFIG;
MACRO_LCPRI LCPRI_HARDWIRED;
MACRO_LCPRI LCPRI_IMPOSSIBLE;
MACRO_LCPRI LCPRI_LASTBESTCONFIG;
MACRO_LCPRI LCPRI_LASTSOFTCONFIG;
MACRO_LCPRI LCPRI_NORMAL;
MACRO_LCPRI LCPRI_POWEROFF;
MACRO_LCPRI LCPRI_REBOOT;
MACRO_LCPRI LCPRI_RESTART;
MACRO_LCPRI LCPRI_SUBOPTIMAL;
MACRO_LCS LCS_CALIBRATED_RGB;
MACRO_LCS LCS_DEVICE_CMYK;
MACRO_LCS LCS_DEVICE_RGB;
MACRO_LCS LCS_GM_ABS_COLORIMETRIC;
MACRO_LCS LCS_GM_BUSINESS;
MACRO_LCS LCS_GM_GRAPHICS;
MACRO_LCS LCS_GM_IMAGES;
MACRO_LCS LCS_SIGNATURE;
MACRO_LCS LCS_WINDOWS_COLOR_SPACE;
MACRO_LCS LCS_sRGB;
MACRO_LC LC_INTERIORS;
MACRO_LC LC_MARKER;
MACRO_LC LC_NONE;
MACRO_LC LC_POLYLINE;
MACRO_LC LC_POLYMARKER;
MACRO_LC LC_STYLED;
MACRO_LC LC_WIDE;
MACRO_LC LC_WIDESTYLED;
MACRO_DIG LDBL_DIG;
MACRO_DIG LDBL_MANT_DIG;
MACRO_EXP LDBL_MAX_10_EXP;
MACRO_EXP LDBL_MAX_EXP;
MACRO_EXP LDBL_MIN_10_EXP;
MACRO_EXP LDBL_MIN_EXP;
MACRO_LDRP_SYSTEM LDRP_COMPAT_DATABASE_PROCESSED;
MACRO_LDRP LDRP_COR_IMAGE;
MACRO_LDRP LDRP_CURRENT_LOAD;
MACRO_LDRP LDRP_DEBUG_SYMBOLS_LOADED;
MACRO_LDRP LDRP_DONT_CALL_FOR_THREADS;
MACRO_LDRP_SYSTEM LDRP_DRIVER_DEPENDENT_DLL;
MACRO_LDRP LDRP_ENTRY_INSERTED;
MACRO_LDRP_SYSTEM LDRP_ENTRY_NATIVE;
MACRO_LDRP LDRP_ENTRY_PROCESSED;
MACRO_LDRP LDRP_FAILED_BUILTIN_LOAD;
MACRO_LDRP LDRP_IMAGE_DLL;
MACRO_LDRP LDRP_IMAGE_NOT_AT_BASE;
MACRO_LDRP_SYSTEM LDRP_IMAGE_VERIFYING;
MACRO_LDRP LDRP_LOAD_IN_PROGRESS;
MACRO_LDRP_SYSTEM LDRP_MM_LOADED;
MACRO_LDRP_SYSTEM LDRP_NON_PAGED_DEBUG_INFO;
MACRO_LDRP LDRP_PROCESS_ATTACH_CALLED;
MACRO_LDRP_SYSTEM LDRP_REDIRECTED;
MACRO_LDRP LDRP_STATIC_LINK;
MACRO_LDRP_SYSTEM LDRP_SYSTEM_MAPPED;
MACRO_LDRP LDRP_UNLOAD_IN_PROGRESS;
MACRO_LDR_IGNORE LDR_ADDREF_DLL_PIN;
MACRO_LDR LDR_COR_OWNS_UNMAP;
MACRO_LDR_IGNORE LDR_GET_DLL_HANDLE_EX_PIN;
MACRO_LDR_IGNORE LDR_GET_DLL_HANDLE_EX_UNCHANGED_REFCOUNT;
MACRO_LDR_IGNORE LDR_IGNORE_CODE_AUTHZ_LEVEL;
MACRO_LDR_IGNORE LDR_LOCK_LOADER_LOCK_DISPOSITION_INVALID;
MACRO_LDR_IGNORE LDR_LOCK_LOADER_LOCK_DISPOSITION_LOCK_ACQUIRED;
MACRO_LDR_IGNORE LDR_LOCK_LOADER_LOCK_DISPOSITION_LOCK_NOT_ACQUIRED;
MACRO_LDR_IGNORE LDR_LOCK_LOADER_LOCK_FLAG_RAISE_ON_ERRORS;
MACRO_LDR_IGNORE LDR_LOCK_LOADER_LOCK_FLAG_TRY_ONLY;
MACRO_LDR_IGNORE LDR_UNLOCK_LOADER_LOCK_FLAG_RAISE_ON_ERRORS;
MACRO_LF LF_FACESIZE;
MACRO_LF LF_FULLFACESIZE;
MACRO_LINECAPS LINECAPS;
MACRO_LOCALE_SYSTEM LOCALE_CUSTOM_DEFAULT;
MACRO_LOCALE_SYSTEM LOCALE_CUSTOM_UI_DEFAULT;
MACRO_LOCALE_SYSTEM LOCALE_CUSTOM_UNSPECIFIED;
MACRO_LOCALE_SYSTEM LOCALE_INVARIANT;
MACRO_LOCALE LOCALE_NAME_MAX_LENGTH;
MACRO_LOCALE_SYSTEM LOCALE_NEUTRAL;
MACRO_LOCALE_SYSTEM LOCALE_SYSTEM_DEFAULT;
MACRO_LOCALE_SYSTEM LOCALE_USER_DEFAULT;
MACRO_LOGPIXELSX LOGPIXELSX;
MACRO_LOGPIXELSY LOGPIXELSY;
MACRO_LOW LOW_PRIORITY;
MACRO_LOW LOW_REALTIME_PRIORITY;
MACRO_LPCP LPCP_CLIENT_PORT;
MACRO_LPCP LPCP_COMMUNICATION_PORT;
MACRO_LPCP LPCP_CONNECTION_PORT;
MACRO_LPCP LPCP_NAME_DELETED;
MACRO_LPCP LPCP_PORT_DELETED;
MACRO_LPCP LPCP_PORT_TYPE_MASK;
MACRO_LPCP LPCP_SECURITY_DYNAMIC;
MACRO_LPCP LPCP_UNCONNECTED_PORT;
MACRO_LPCP LPCP_WAITABLE_PORT;
_LPC_TYPE LPC_CLIENT_DIED;
_LPC_TYPE LPC_CONNECTION_REFUSED;
_LPC_TYPE LPC_CONNECTION_REQUEST;
_LPC_TYPE LPC_DATAGRAM;
_LPC_TYPE LPC_DEBUG_EVENT;
_LPC_TYPE LPC_ERROR_EVENT;
_LPC_TYPE LPC_EXCEPTION;
_LPC_TYPE LPC_LOST_REPLY;
_LPC_TYPE LPC_MAXIMUM;
_LPC_TYPE LPC_NEW_MESSAGE;
_LPC_TYPE LPC_PORT_CLOSED;
_LPC_TYPE LPC_REPLY;
_LPC_TYPE LPC_REQUEST;
MACRO_LPD LPD_DOUBLEBUFFER;
MACRO_LPD LPD_SHARE_ACCUM;
MACRO_LPD LPD_SHARE_DEPTH;
MACRO_LPD LPD_SHARE_STENCIL;
MACRO_LPD LPD_STEREO;
MACRO_LPD LPD_SUPPORT_GDI;
MACRO_LPD LPD_SUPPORT_OPENGL;
MACRO_LPD LPD_SWAP_COPY;
MACRO_LPD LPD_SWAP_EXCHANGE;
MACRO_LPD LPD_TRANSPARENT;
MACRO_LPD LPD_TYPE_COLORINDEX;
MACRO_LPD LPD_TYPE_RGBA;
BOOL __stdcall LPtoDP(HDC hdc, LPPOINT lppt, int c);
MACRO_BRUSH LTGRAY_BRUSH;
_LATENCY_TIME LT_DONT_CARE;
_LATENCY_TIME LT_LOWEST_LATENCY;
_POWER_INFORMATION_LEVEL LastSleepTime;
_POWER_INFORMATION_LEVEL LastWakeTime;
NTSTATUS __stdcall LdrAccessOutOfProcessResource(PVOID Unknown, PVOID Image, PVOID Unknown1, PVOID Unknown2, PVOID Unknown3);
NTSTATUS __stdcall LdrAccessResource(PVOID BaseAddress, PIMAGE_RESOURCE_DATA_ENTRY ResourceDataEntry, PVOID *Resource, PULONG Size);
NTSTATUS __stdcall LdrAddRefDll(ULONG Flags, PVOID BaseAddress);
BOOLEAN __stdcall LdrAlternateResourcesEnabled();
NTSTATUS __stdcall LdrCreateOutOfProcessImage(ULONG Flags, HANDLE ProcessHandle, HANDLE DllHandle, PVOID Unknown3);
NTSTATUS __stdcall LdrDestroyOutOfProcessImage(PVOID Image);
NTSTATUS __stdcall LdrDisableThreadCalloutsForDll(PVOID BaseAddress);
NTSTATUS __stdcall LdrEnumResources(PVOID BaseAddress, PLDR_RESOURCE_INFO ResourceInfo, ULONG Level, ULONG *ResourceCount, LDR_ENUM_RESOURCE_INFO *Resources);
NTSTATUS __stdcall LdrEnumerateLoadedModules(BOOLEAN ReservedFlag, PLDR_ENUM_CALLBACK EnumProc, PVOID Context);
NTSTATUS __stdcall LdrFindCreateProcessManifest(ULONG Flags, PVOID Image, PVOID IdPath, ULONG IdPathLength, PVOID OutDataEntry);
NTSTATUS __stdcall LdrFindEntryForAddress(PVOID Address, PLDR_DATA_TABLE_ENTRY *Module);
NTSTATUS __stdcall LdrFindResourceDirectory_U(PVOID BaseAddress, PLDR_RESOURCE_INFO ResourceInfo, ULONG Level, PIMAGE_RESOURCE_DIRECTORY *ResourceDirectory);
NTSTATUS __stdcall LdrFindResource_U(PVOID BaseAddress, PLDR_RESOURCE_INFO ResourceInfo, ULONG Level, PIMAGE_RESOURCE_DATA_ENTRY *ResourceDataEntry);
BOOLEAN __stdcall LdrFlushAlternateResourceModules();
NTSTATUS __stdcall LdrGetDllHandle(PWSTR DllPath, PULONG DllCharacteristics, PUNICODE_STRING DllName, PVOID *DllHandle);
NTSTATUS __stdcall LdrGetDllHandleEx(ULONG Flags, PWSTR DllPath, PULONG DllCharacteristics, PUNICODE_STRING DllName, PVOID *DllHandle);
NTSTATUS __stdcall LdrGetProcedureAddress(PVOID BaseAddress, PANSI_STRING Name, ULONG Ordinal, PVOID *ProcedureAddress);
void __stdcall LdrInitializeThunk(ULONG Unknown1, ULONG Unknown2, ULONG Unknown3, ULONG Unknown4);
NTSTATUS __stdcall LdrLoadAlternateResourceModule(PVOID Module, PWSTR Buffer);
NTSTATUS __stdcall LdrLoadDll(PWSTR SearchPath, PULONG LoadFlags, PUNICODE_STRING Name, PVOID *BaseAddress);
NTSTATUS __stdcall LdrLockLoaderLock(ULONG Flags, PULONG Disposition, PULONG_PTR Cookie);
NTSTATUS __stdcall LdrOpenImageFileOptionsKey(PUNICODE_STRING SubKey, BOOLEAN Wow64, PHANDLE NewKeyHandle);
PIMAGE_BASE_RELOCATION __stdcall LdrProcessRelocationBlock(ULONG_PTR Address, ULONG Count, PUSHORT TypeOffset, LONG_PTR Delta);
PIMAGE_BASE_RELOCATION __stdcall LdrProcessRelocationBlockLongLong(ULONG_PTR Address, ULONG Count, PUSHORT TypeOffset, LONGLONG Delta);
NTSTATUS __stdcall LdrQueryImageFileExecutionOptions(PUNICODE_STRING SubKey, PCWSTR ValueName, ULONG ValueSize, PVOID Buffer, ULONG BufferSize, PULONG RetunedLength);
NTSTATUS __stdcall LdrQueryImageFileKeyOption(HANDLE KeyHandle, PCWSTR ValueName, ULONG Type, PVOID Buffer, ULONG BufferSize, PULONG ReturnedLength);
NTSTATUS __stdcall LdrQueryProcessModuleInformation(PRTL_PROCESS_MODULES ModuleInformation, ULONG Size, PULONG ReturnedSize);
ULONG __stdcall LdrRelocateImage(PVOID NewBase, PCCH LoaderName, ULONG Success, ULONG Conflict, ULONG Invalid);
ULONG __stdcall LdrRelocateImageWithBias(PVOID NewAddress, LONGLONG AdditionalBias, PCCH LoaderName, ULONG Success, ULONG Conflict, ULONG Invalid);
void __stdcall LdrSetDllManifestProber(PLDR_MANIFEST_PROBER_ROUTINE Routine);
NTSTATUS __stdcall LdrShutdownProcess();
NTSTATUS __stdcall LdrShutdownThread();
BOOLEAN __stdcall LdrUnloadAlternateResourceModule(PVOID BaseAddress);
NTSTATUS __stdcall LdrUnloadDll(PVOID BaseAddress);
NTSTATUS __stdcall LdrUnlockLoaderLock(ULONG Flags, ULONG Cookie);
NTSTATUS __stdcall LdrVerifyImageMatchesChecksum(HANDLE FileHandle, PLDR_CALLBACK Callback, PVOID CallbackContext, PUSHORT ImageCharacterstics);
BOOLEAN __stdcall LdrVerifyMappedImageMatchesChecksum(PVOID BaseAddress, SIZE_T NumberOfBytes, ULONG FileLength);
BOOL __stdcall LineDDA(int, int, int, int, LINEDDAPROC, LPARAM);
BOOL __stdcall LineTo(HDC, int, int);
_PP_NPAGED_LOOKASIDE_NUMBER LookasideCompletionList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideCreateInfoList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideLargeIrpList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideMaximumList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideMdlList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideNameBufferList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideSmallIrpList;
_PP_NPAGED_LOOKASIDE_NUMBER LookasideTwilightList;
MACRO_CHARSET MAC_CHARSET;
MACRO_MAILSLOT MAILSLOT_NO_MESSAGE;
MACRO_MAILSLOT MAILSLOT_WAIT_FOREVER;
MACRO_MAP MAP_PROCESS;
MACRO_MAP MAP_SYSTEM;
MACRO_MAXBYTE MAXBYTE;
MACRO_MAXCHAR MAXCHAR;
MACRO_MAXCHARSETS MAXCHARSETS;
MACRO_MAXDWORD MAXDWORD;
MACRO_PTR MAXHALF_PTR;
MACRO_MAXIMUM_ALLOWED MAXIMUM_ALLOWED;
MACRO_MAXIMUM_HARDERROR MAXIMUM_HARDERROR_PARAMETERS;
MACRO_MAXIMUM_IDTVECTOR MAXIMUM_IDTVECTOR;
MACRO_MAXIMUM_LEADBYTES MAXIMUM_LEADBYTES;
MACRO_MAXIMUM_NUMA MAXIMUM_NUMA_NODES;
MACRO_PRIORITY MAXIMUM_PRIORITY;
MACRO_MAXIMUM MAXIMUM_PROCESSORS;
MACRO_MAXIMUM_REPARSE MAXIMUM_REPARSE_DATA_BUFFER_SIZE;
MACRO_MAXIMUM_SUPPORTED MAXIMUM_SUPPORTED_EXTENSION;
MACRO_MAXLONG MAXLONG;
MACRO_MAXLONGLONG MAXLONGLONG;
MACRO_MAXSHORT MAXSHORT;
MACRO_MAXSTRETCHBLTMODE MAXSTRETCHBLTMODE;
MACRO_MAXUCHAR MAXUCHAR;
MACRO_PTR MAXUHALF_PTR;
MACRO_MAXUINT MAXUINT;
MACRO_MAXULONG MAXULONG;
MACRO_MAXUSHORT MAXUSHORT;
MACRO_MAXWORD MAXWORD;
MACRO_REVISION MAX_ACL_REVISION;
MACRO_MAX_AUTOFLIP MAX_AUTOFLIP_BUFFERS;
MACRO_MAX_BUS MAX_BUS_NAME;
ReplacesCorHdrNumericDefines MAX_CLASS_NAME;
MACRO_MAX_DDDEVICEID MAX_DDDEVICEID_STRING;
MACRO_MAX_LCPRI MAX_LCPRI;
ReplacesCorHdrNumericDefines MAX_PACKAGE_NAME;
MACRO_MAX_PATH MAX_PATH;
MACRO_MAX_QUANTUM MAX_QUANTUM;
MACRO_MIN MAX_UCSCHAR;
MACRO_MAX_WOW64 MAX_WOW64_SHARED_ENTRIES;
MACRO_MEMORY MEMORY_ALLOCATION_ALIGNMENT;
MACRO_MEMORY_PRIORITY MEMORY_PRIORITY_BACKGROUND;
MACRO_MEMORY_PRIORITY MEMORY_PRIORITY_FOREGROUND;
MACRO_MEMORY_PRIORITY MEMORY_PRIORITY_UNKNOWN;
MACRO_MEM MEM_4MB_PAGES;
MACRO_MEM MEM_COMMIT;
MACRO_MEM MEM_DECOMMIT;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_DISABLE;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_DISABLE_THUNK_EMULATION;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_ENABLE;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_EXECUTE_DISPATCH_ENABLE;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_IMAGE_DISPATCH_ENABLE;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_PERMANENT;
MACRO_MEM_EXECUTE MEM_EXECUTE_OPTION_VALID_FLAGS;
MACRO_MEM MEM_FREE;
MACRO_MEM MEM_MAPPED;
MACRO_MEM MEM_PHYSICAL;
MACRO_MEM MEM_PRIVATE;
MACRO_MEM MEM_RELEASE;
MACRO_MEM MEM_RESERVE;
MACRO_MEM MEM_RESET;
MACRO_MEM MEM_TOP_DOWN;
MACRO_MEM MEM_WRITE_WATCH;
MACRO_MERGECOPY MERGECOPY;
MACRO_MERGEPAINT MERGEPAINT;
MACRO_MESSAGE MESSAGE_RESOURCE_UNICODE;
MACRO_META META_ABORTDOC;
MACRO_META META_ANIMATEPALETTE;
MACRO_META META_ARC;
MACRO_META META_BITBLT;
MACRO_META META_CHORD;
MACRO_META META_CREATEBITMAP;
MACRO_META META_CREATEBITMAPINDIRECT;
MACRO_META META_CREATEBRUSH;
MACRO_META META_CREATEBRUSHINDIRECT;
MACRO_META META_CREATEFONTINDIRECT;
MACRO_META META_CREATEPALETTE;
MACRO_META META_CREATEPATTERNBRUSH;
MACRO_META META_CREATEPENINDIRECT;
MACRO_META META_CREATEREGION;
MACRO_META META_DELETEOBJECT;
MACRO_META META_DIBBITBLT;
MACRO_META META_DIBCREATEPATTERNBRUSH;
MACRO_META META_DIBSTRETCHBLT;
MACRO_META META_DRAWTEXT;
MACRO_META META_ELLIPSE;
MACRO_META META_ENDDOC;
MACRO_META META_ENDPAGE;
MACRO_META META_ESCAPE;
MACRO_META META_EXCLUDECLIPRECT;
MACRO_META META_EXTFLOODFILL;
MACRO_META META_EXTTEXTOUT;
MACRO_META META_FILLREGION;
MACRO_META META_FLOODFILL;
MACRO_META META_FRAMEREGION;
MACRO_META META_INTERSECTCLIPRECT;
MACRO_META META_INVERTREGION;
MACRO_META META_LINETO;
MACRO_META META_MOVETO;
MACRO_META META_OFFSETCLIPRGN;
MACRO_META META_OFFSETVIEWPORTORG;
MACRO_META META_OFFSETWINDOWORG;
MACRO_META META_PAINTREGION;
MACRO_META META_PATBLT;
MACRO_META META_PIE;
MACRO_META META_POLYGON;
MACRO_META META_POLYLINE;
MACRO_META META_POLYPOLYGON;
MACRO_META META_REALIZEPALETTE;
MACRO_META META_RECTANGLE;
MACRO_META META_RESETDC;
MACRO_META META_RESIZEPALETTE;
MACRO_META META_RESTOREDC;
MACRO_META META_ROUNDRECT;
MACRO_META META_SAVEDC;
MACRO_META META_SCALEVIEWPORTEXT;
MACRO_META META_SCALEWINDOWEXT;
MACRO_META META_SELECTCLIPREGION;
MACRO_META META_SELECTOBJECT;
MACRO_META META_SELECTPALETTE;
MACRO_META META_SETBKCOLOR;
MACRO_META META_SETBKMODE;
MACRO_META META_SETDIBTODEV;
MACRO_META META_SETMAPMODE;
MACRO_META META_SETMAPPERFLAGS;
MACRO_META META_SETPALENTRIES;
MACRO_META META_SETPIXEL;
MACRO_META META_SETPOLYFILLMODE;
MACRO_META META_SETRELABS;
MACRO_META META_SETROP2;
MACRO_META META_SETSTRETCHBLTMODE;
MACRO_META META_SETTEXTALIGN;
MACRO_META META_SETTEXTCHAREXTRA;
MACRO_META META_SETTEXTCOLOR;
MACRO_META META_SETTEXTJUSTIFICATION;
MACRO_META META_SETVIEWPORTEXT;
MACRO_META META_SETVIEWPORTORG;
MACRO_META META_SETWINDOWEXT;
MACRO_META META_SETWINDOWORG;
MACRO_META META_STARTDOC;
MACRO_META META_STARTPAGE;
MACRO_META META_STRETCHBLT;
MACRO_META META_STRETCHDIB;
MACRO_META META_TEXTOUT;
MACRO_METHOD METHOD_BUFFERED;
MACRO_METHOD METHOD_IN_DIRECT;
MACRO_METHOD METHOD_NEITHER;
MACRO_METHOD METHOD_OUT_DIRECT;
MACRO_MFCOMMENT MFCOMMENT;
MACRO_MINCHAR MINCHAR;
MACRO_MINGW64 MINGW64_VERSION_MAJOR;
MACRO_MINGW64 MINGW64_VERSION_MINOR;
MACRO_PTR MINHALF_PTR;
MACRO_MAXSHORT MINLONG;
MACRO_MAXCHAR MINSHORT;
MACRO_REVISION MIN_ACL_REVISION;
MACRO_MIN MIN_UCSCHAR;
MACRO_MI MI_HIGHEST_USER_ADDRESS;
MACRO_MMPFNUSE MMPFNUSE_AWEPAGE;
MACRO_MMPFNUSE MMPFNUSE_DRIVERLOCKPAGE;
MACRO_MMPFNUSE MMPFNUSE_FILE;
MACRO_MMPFNUSE MMPFNUSE_KERNELSTACK;
MACRO_MMPFNUSE MMPFNUSE_METAFILE;
MACRO_MMPFNUSE MMPFNUSE_NONPAGEDPOOL;
MACRO_MMPFNUSE MMPFNUSE_PAGEDPOOL;
MACRO_MMPFNUSE MMPFNUSE_PAGEFILEMAPPED;
MACRO_MMPFNUSE MMPFNUSE_PAGETABLE;
MACRO_MMPFNUSE MMPFNUSE_PROCESSPRIVATE;
MACRO_MMPFNUSE MMPFNUSE_SESSIONPRIVATE;
MACRO_MMPFNUSE MMPFNUSE_SYSTEMPTE;
MACRO_MM MM_ALLOCATION_GRANULARITY;
MACRO_MM MM_ALLOCATION_GRANULARITY_SHIFT;
MACRO_MM_ANISOTROPIC MM_ANISOTROPIC;
MACRO_MM_ANISOTROPIC MM_HIENGLISH;
MACRO_MM_ANISOTROPIC MM_HIMETRIC;
MACRO_MM_ANISOTROPIC MM_ISOTROPIC;
MACRO_MM_ANISOTROPIC MM_LOENGLISH;
MACRO_MM_ANISOTROPIC MM_LOMETRIC;
MACRO_MM_ANISOTROPIC MM_MAX;
MACRO_MM_MAX MM_MAX_AXES_NAMELEN;
MACRO_MM_ANISOTROPIC MM_MAX_FIXEDSCALE;
MACRO_MM_MAX MM_MAX_NUMAXES;
MACRO_MM_ANISOTROPIC MM_MIN;
MACRO_MM MM_PAGE_FRAME_NUMBER_SIZE;
MACRO_MM_SHARED MM_SHARED_USER_DATA_VA;
MACRO_MM_ANISOTROPIC MM_TEXT;
MACRO_MM_ANISOTROPIC MM_TWIPS;
MACRO_MONO MONO_FONT;
MACRO_MOUSETRAILS MOUSETRAILS;
_INTERFACE_TYPE MPIBus;
_BUS_DATA_TYPE MPIConfiguration;
_INTERFACE_TYPE MPSABus;
_BUS_DATA_TYPE MPSAConfiguration;
_APPCOMPAT_USERFLAGS MSShellDialog;
MACRO_MS MS_CDDDEVICEBITMAP;
MACRO_MS MS_NOTSYSTEMMEMORY;
MACRO_MS MS_SHAREDACCESS;
MACRO_MUTANT MUTANT_INCREMENT;
MACRO_STATE MUTANT_QUERY_STATE;
MACRO_MWT MWT_IDENTITY;
MACRO_MWT MWT_LEFTMULTIPLY;
MACRO_MWT MWT_MAX;
MACRO_MWT MWT_MIN;
MACRO_MWT MWT_RIGHTMULTIPLY;
_MANDATORY_LEVEL MandatoryLevelCount;
_MANDATORY_LEVEL MandatoryLevelHigh;
_MANDATORY_LEVEL MandatoryLevelLow;
_MANDATORY_LEVEL MandatoryLevelMedium;
_MANDATORY_LEVEL MandatoryLevelSecureProcess;
_MANDATORY_LEVEL MandatoryLevelSystem;
_MANDATORY_LEVEL MandatoryLevelUntrusted;
BOOL __stdcall MaskBlt(HDC, int, int, int, int, HDC, int, int, HBITMAP, int, int, DWORD);
_ACTIVATION_CONTEXT_INFO_CLASS MaxActivationContextInfoClass;
_PNP_DEVNODE_STATE MaxDeviceNodeState;
_JOBOBJECTINFOCLASS MaxJobObjectInfoClass;
_KEY_INFORMATION_CLASS MaxKeyInfoClass;
_KEY_SET_INFORMATION_CLASS MaxKeySetInfoClass;
_KEY_VALUE_INFORMATION_CLASS MaxKeyValueInfoClass;
_OBJECT_INFORMATION_CLASS MaxObjectInfoClass;
_PLUGPLAY_EVENT_CATEGORY MaxPlugEventCategory;
_PLUGPLAY_BUS_CLASS MaxPlugPlayBusClass;
_PLUGPLAY_CONTROL_CLASS MaxPlugPlayControl;
_PLUGPLAY_VIRTUAL_BUS_TYPE MaxPlugPlayVirtualBusType;
_POOL_TYPE MaxPoolType;
_PROCESSINFOCLASS MaxProcessInfoClass;
_SYSTEM_INFORMATION_CLASS MaxSystemInfoClass;
_THREADINFOCLASS MaxThreadInfoClass;
_TOKEN_INFORMATION_CLASS MaxTokenInfoClass;
_BUS_DATA_TYPE MaximumBusDataType;
_INTERFACE_TYPE MaximumInterfaceType;
_KOBJECTS MaximumKernelObject;
_MODE MaximumMode;
_KWAIT_REASON MaximumWaitReason;
void MemoryBarrier(void);
_MEMORY_INFORMATION_CLASS MemoryBasicInformation;
_MEMORY_INFORMATION_CLASS MemoryBasicVlmInformation;
_MEMORY_INFORMATION_CLASS MemorySectionName;
_MEMORY_INFORMATION_CLASS MemoryWorkingSetExList;
_MEMORY_INFORMATION_CLASS MemoryWorkingSetList;
_INTERFACE_TYPE MicroChannel;
_MMLISTS ModifiedNoWritePageList;
_MMLISTS ModifiedPageList;
BOOL __stdcall ModifyWorldTransform(HDC, const XFORM *, DWORD);
_POWER_INFORMATION_LEVEL MonitorCapabilities;
BOOL __stdcall MoveToEx(HDC, int, int, LPPOINT);
_MUTANT_INFORMATION_CLASS MutantBasicInformation;
_KOBJECTS MutantObject;
_MUTANT_INFORMATION_CLASS MutantOwnerInformation;
ReplacesCorHdrNumericDefines NATIVE_TYPE_MAX_CB;
_ALTERNATIVE_ARCHITECTURE_TYPE NEC98x86;
MACRO_NEWFRAME NEWFRAME;
MACRO_NEXTBAND NEXTBAND;
MACRO_NLS NLS_VALID_LOCALE_MASK;
MACRO_CAPTUREBLT NOMIRRORBITMAP;
MACRO_QUALITY NONANTIALIASED_QUALITY;
MACRO_NOTSRCCOPY NOTSRCCOPY;
MACRO_NOTSRCERASE NOTSRCERASE;
MACRO_NO NO_ERROR;
MACRO_INHERIT_ACE NO_PROPAGATE_INHERIT_ACE;
MACRO_NPX NPX_FRAME_LENGTH;
MACRO_NPX_STATE NPX_STATE_LOADED;
MACRO_NPX_STATE NPX_STATE_NOT_LOADED;
MACRO_NTDDI NTDDI_LONGHORN;
MACRO_NTDDI NTDDI_VISTA;
MACRO_NTDDI NTDDI_VISTASP1;
MACRO_NTDDI NTDDI_VISTASP2;
MACRO_NTDDI NTDDI_VISTASP3;
MACRO_NTDDI NTDDI_VISTASP4;
MACRO_NTDDI NTDDI_WIN10;
MACRO_NTDDI NTDDI_WIN10_RS1;
MACRO_NTDDI NTDDI_WIN10_RS2;
MACRO_NTDDI NTDDI_WIN10_TH2;
MACRO_NTDDI NTDDI_WIN2K;
MACRO_NTDDI NTDDI_WIN2KSP1;
MACRO_NTDDI NTDDI_WIN2KSP2;
MACRO_NTDDI NTDDI_WIN2KSP3;
MACRO_NTDDI NTDDI_WIN2KSP4;
MACRO_NTDDI NTDDI_WIN6;
MACRO_NTDDI NTDDI_WIN6SP1;
MACRO_NTDDI NTDDI_WIN6SP2;
MACRO_NTDDI NTDDI_WIN6SP3;
MACRO_NTDDI NTDDI_WIN6SP4;
MACRO_NTDDI NTDDI_WIN7;
MACRO_NTDDI NTDDI_WIN8;
MACRO_NTDDI NTDDI_WINBLUE;
MACRO_NTDDI NTDDI_WINTHRESHOLD;
MACRO_NTDDI NTDDI_WINXP;
MACRO_NTDDI NTDDI_WINXPSP1;
MACRO_NTDDI NTDDI_WINXPSP2;
MACRO_NTDDI NTDDI_WINXPSP3;
MACRO_NTDDI NTDDI_WINXPSP4;
MACRO_NTDDI NTDDI_WS03;
MACRO_NTDDI NTDDI_WS03SP1;
MACRO_NTDDI NTDDI_WS03SP2;
MACRO_NTDDI NTDDI_WS03SP3;
MACRO_NTDDI NTDDI_WS03SP4;
MACRO_NTDDI NTDDI_WS08;
MACRO_NTDDI NTDDI_WS08SP2;
MACRO_NTDDI NTDDI_WS08SP3;
MACRO_NTDDI NTDDI_WS08SP4;
MACRO_NTM_ITALIC NTM_BOLD;
MACRO_NTM NTM_DSIG;
MACRO_NTM_ITALIC NTM_ITALIC;
MACRO_NTM NTM_MULTIPLEMASTER;
MACRO_NTM NTM_NONNEGATIVE_AC;
MACRO_NTM NTM_PS_OPENTYPE;
MACRO_NTM_ITALIC NTM_REGULAR;
MACRO_NTM NTM_TT_OPENTYPE;
MACRO_NTM NTM_TYPE1;
MACRO_SERVICE_INDEX NTOS_SERVICE_INDEX;
MACRO_NULL NULL;
MACRO_NULLREGION NULLREGION;
MACRO_BRUSH NULL_BRUSH;
MACRO_PEN NULL_PEN;
MACRO_NUMBER_HASH NUMBER_HASH_BUCKETS;
MACRO_NUMBER NUMBER_SERVICE_TABLES;
MACRO_PLANES NUMBRUSHES;
MACRO_NUMCOLORS NUMCOLORS;
MACRO_NUMFONTS NUMFONTS;
MACRO_NUMMARKERS NUMMARKERS;
MACRO_NUMPENS NUMPENS;
MACRO_NUMRESERVED NUMRESERVED;
MACRO_NUM_CM NUM_CM_PROB;
MACRO_NUM_CM NUM_CM_PROB_V1;
MACRO_NUM_CM NUM_CM_PROB_V2;
MACRO_NUM_CM NUM_CM_PROB_V3;
MACRO_NUM_CM NUM_CM_PROB_V4;
MACRO_NUM_CM NUM_CM_PROB_V5;
MACRO_NUM NUM_DISCHARGE_POLICIES;
MACRO_N N_BTMASK;
MACRO_N N_BTSHFT;
MACRO_N N_TMASK;
MACRO_N N_TMASK1;
MACRO_N N_TMASK2;
MACRO_N N_TSHIFT;
_APPCOMPAT_USERFLAGS No50StylebitsInCreateWindow;
_APPCOMPAT_USERFLAGS No50StylebitsInSetWindowLong;
_APPCOMPAT_USERFLAGS NoCharDeadKey;
_APPCOMPAT_USERFLAGS NoCustomPaperSizes;
_APPCOMPAT_USERFLAGS NoDDETerminateDuringDestroy;
_APPCOMPAT_USERFLAGS NoDdeAsyncReg;
_APPCOMPAT_USERFLAGS NoDdeSync;
_APPCOMPAT_USERFLAGS NoGdiBatching;
_APPCOMPAT_USERFLAGS_HIGHPART NoGdiHwAcceleration;
_APPCOMPAT_USERFLAGS NoGhost;
_APPCOMPAT_USERFLAGS NoInitInsertReplaceFlags;
_APPCOMPAT_USERFLAGS NoMouseHideInEdit;
_APPCOMPAT_USERFLAGS NoPaddedBorder;
_APPCOMPAT_USERFLAGS NoShadow;
_APPCOMPAT_USERFLAGS NoTimerCallbackProtection;
_APPCOMPAT_USERFLAGS NoTryExceptForWindowProc;
_POOL_TYPE NonPagedPool;
_POOL_TYPE NonPagedPoolCacheAligned;
_POOL_TYPE NonPagedPoolCacheAlignedMustS;
_POOL_TYPE NonPagedPoolCacheAlignedMustSSession;
_POOL_TYPE NonPagedPoolCacheAlignedSession;
_POOL_TYPE NonPagedPoolMustSucceed;
_POOL_TYPE NonPagedPoolMustSucceedSession;
_POOL_TYPE NonPagedPoolSession;
_CM_ERROR_CONTROL_TYPE NormalError;
_EVENT_TYPE NotificationEvent;
_TIMER_TYPE NotificationTimer;
_POWER_INFORMATION_LEVEL NotifyUserModeLegacyPowerEvent;
_POWER_INFORMATION_LEVEL NotifyUserPowerSetting;
NTSTATUS __stdcall NtAcceptConnectPort(PHANDLE PortHandle, PVOID PortContext, PPORT_MESSAGE ConnectionRequest, BOOLEAN AcceptConnection, PPORT_VIEW ServerView, PREMOTE_PORT_VIEW ClientView);
NTSTATUS __stdcall NtAccessCheck(PSECURITY_DESCRIPTOR SecurityDescriptor, HANDLE ClientToken, ACCESS_MASK DesiredAccess, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, PULONG ReturnLength, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall NtAccessCheckAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, ACCESS_MASK DesiredAccess, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtAccessCheckByType(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, ACCESS_MASK DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, PULONG PrivilegeSetLength, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall NtAccessCheckByTypeAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, ACCESS_MASK DesiredAccess, AUDIT_EVENT_TYPE AuditType, ULONG Flags, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeLength, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtAccessCheckByTypeResultList(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, ACCESS_MASK DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, PULONG PrivilegeSetLength, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall NtAccessCheckByTypeResultListAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, ACCESS_MASK DesiredAccess, AUDIT_EVENT_TYPE AuditType, ULONG Flags, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccessList, PNTSTATUS AccessStatusList, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtAccessCheckByTypeResultListAndAuditAlarmByHandle(PUNICODE_STRING SubsystemName, PVOID HandleId, HANDLE ClientToken, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, ACCESS_MASK DesiredAccess, AUDIT_EVENT_TYPE AuditType, ULONG Flags, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccessList, PNTSTATUS AccessStatusList, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtAddAtom(PWSTR AtomName, ULONG AtomNameLength, PRTL_ATOM Atom);
NTSTATUS __stdcall NtAddBootEntry(PBOOT_ENTRY BootEntry, ULONG Id);
NTSTATUS __stdcall NtAddDriverEntry(PEFI_DRIVER_ENTRY BootEntry, ULONG Id);
NTSTATUS __stdcall NtAdjustGroupsToken(HANDLE TokenHandle, BOOLEAN ResetToDefault, PTOKEN_GROUPS NewState, ULONG BufferLength, PTOKEN_GROUPS PreviousState, PULONG ReturnLength);
NTSTATUS __stdcall NtAdjustPrivilegesToken(HANDLE TokenHandle, BOOLEAN DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, ULONG BufferLength, PTOKEN_PRIVILEGES PreviousState, PULONG ReturnLength);
NTSTATUS __stdcall NtAlertResumeThread(HANDLE ThreadHandle, PULONG SuspendCount);
NTSTATUS __stdcall NtAlertThread(HANDLE ThreadHandle);
NTSTATUS __stdcall NtAllocateLocallyUniqueId(LUID *LocallyUniqueId);
NTSTATUS __stdcall NtAllocateUserPhysicalPages(HANDLE ProcessHandle, PULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall NtAllocateUuids(PULARGE_INTEGER Time, PULONG Range, PULONG Sequence, PUCHAR Seed);
NTSTATUS __stdcall NtAllocateVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, ULONG_PTR ZeroBits, PSIZE_T RegionSize, ULONG AllocationType, ULONG Protect);
NTSTATUS __stdcall NtApphelpCacheControl(APPHELPCACHESERVICECLASS Service, PAPPHELP_CACHE_SERVICE_LOOKUP ServiceData);
NTSTATUS __stdcall NtAreMappedFilesTheSame(PVOID File1MappedAsAnImage, PVOID File2MappedAsFile);
NTSTATUS __stdcall NtAssignProcessToJobObject(HANDLE JobHandle, HANDLE ProcessHandle);
NTSTATUS __stdcall NtCallbackReturn(PVOID Result, ULONG ResultLength, NTSTATUS Status);
NTSTATUS __stdcall NtCancelDeviceWakeupRequest(HANDLE Device);
NTSTATUS __stdcall NtCancelIoFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock);
NTSTATUS __stdcall NtCancelTimer(HANDLE TimerHandle, PBOOLEAN CurrentState);
NTSTATUS __stdcall NtClearEvent(HANDLE EventHandle);
NTSTATUS __stdcall NtClose(HANDLE Handle);
NTSTATUS __stdcall NtCloseObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, BOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtCompactKeys(ULONG Count, PHANDLE KeyArray);
NTSTATUS __stdcall NtCompareTokens(HANDLE FirstTokenHandle, HANDLE SecondTokenHandle, PBOOLEAN Equal);
NTSTATUS __stdcall NtCompleteConnectPort(HANDLE PortHandle);
NTSTATUS __stdcall NtCompressKey(HANDLE Key);
NTSTATUS __stdcall NtConnectPort(PHANDLE PortHandle, PUNICODE_STRING PortName, PSECURITY_QUALITY_OF_SERVICE SecurityQos, PPORT_VIEW ClientView, PREMOTE_PORT_VIEW ServerView, PULONG MaxMessageLength, PVOID ConnectionInformation, PULONG ConnectionInformationLength);
NTSTATUS __stdcall NtContinue(PCONTEXT Context, BOOLEAN TestAlert);
NTSTATUS __stdcall NtCreateDebugObject(PHANDLE DebugHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG Flags);
NTSTATUS __stdcall NtCreateDirectoryObject(PHANDLE DirectoryHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtCreateEvent(PHANDLE EventHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, EVENT_TYPE EventType, BOOLEAN InitialState);
NTSTATUS __stdcall NtCreateEventPair(PHANDLE EventPairHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtCreateFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER AllocationSize, ULONG FileAttributes, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, PVOID EaBuffer, ULONG EaLength);
NTSTATUS __stdcall NtCreateIoCompletion(PHANDLE IoCompletionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG NumberOfConcurrentThreads);
NTSTATUS __stdcall NtCreateJobObject(PHANDLE JobHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtCreateJobSet(ULONG NumJob, PJOB_SET_ARRAY UserJobSet, ULONG Flags);
NTSTATUS __stdcall NtCreateKey(PHANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG TitleIndex, PUNICODE_STRING Class, ULONG CreateOptions, PULONG Disposition);
NTSTATUS __stdcall NtCreateKeyedEvent(PHANDLE OutHandle, ACCESS_MASK AccessMask, POBJECT_ATTRIBUTES ObjectAttributes, ULONG Flags);
NTSTATUS __stdcall NtCreateMailslotFile(PHANDLE MailSlotFileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG FileAttributes, ULONG ShareAccess, ULONG MaxMessageSize, PLARGE_INTEGER TimeOut);
NTSTATUS __stdcall NtCreateMutant(PHANDLE MutantHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, BOOLEAN InitialOwner);
NTSTATUS __stdcall NtCreateNamedPipeFile(PHANDLE NamedPipeFileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, ULONG WriteModeMessage, ULONG ReadModeMessage, ULONG NonBlocking, ULONG MaxInstances, ULONG InBufferSize, ULONG OutBufferSize, PLARGE_INTEGER DefaultTimeOut);
NTSTATUS __stdcall NtCreatePagingFile(PUNICODE_STRING FileName, PLARGE_INTEGER InitialSize, PLARGE_INTEGER MaxiumSize, ULONG Reserved);
NTSTATUS __stdcall NtCreatePort(PHANDLE PortHandle, POBJECT_ATTRIBUTES ObjectAttributes, ULONG MaxConnectionInfoLength, ULONG MaxMessageLength, ULONG MaxPoolUsage);
NTSTATUS __stdcall NtCreateProcess(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ParentProcess, BOOLEAN InheritObjectTable, HANDLE SectionHandle, HANDLE DebugPort, HANDLE ExceptionPort);
NTSTATUS __stdcall NtCreateProcessEx(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ParentProcess, ULONG Flags, HANDLE SectionHandle, HANDLE DebugPort, HANDLE ExceptionPort, BOOLEAN InJob);
NTSTATUS __stdcall NtCreateProfile(PHANDLE ProfileHandle, HANDLE ProcessHandle, PVOID ImageBase, SIZE_T ImageSize, ULONG Granularity, PVOID Buffer, ULONG ProfilingSize, KPROFILE_SOURCE Source, KAFFINITY ProcessorMask);
NTSTATUS __stdcall NtCreateProfileEx(PHANDLE ProfileHandle, HANDLE ProcessHandle, PVOID ImageBase, SIZE_T ImageSize, ULONG Granularity, PVOID Buffer, ULONG ProfilingSize, KPROFILE_SOURCE Source, USHORT GroupCount, PGROUP_AFFINITY Affinity);
NTSTATUS __stdcall NtCreateSection(PHANDLE SectionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PLARGE_INTEGER MaximumSize, ULONG SectionPageProtection, ULONG AllocationAttributes, HANDLE FileHandle);
NTSTATUS __stdcall NtCreateSemaphore(PHANDLE SemaphoreHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, LONG InitialCount, LONG MaximumCount);
NTSTATUS __stdcall NtCreateSymbolicLinkObject(PHANDLE SymbolicLinkHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PUNICODE_STRING Name);
NTSTATUS __stdcall NtCreateThread(PHANDLE ThreadHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ProcessHandle, PCLIENT_ID ClientId, PCONTEXT ThreadContext, PINITIAL_TEB UserStack, BOOLEAN CreateSuspended);
NTSTATUS __stdcall NtCreateTimer(PHANDLE TimerHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, TIMER_TYPE TimerType);
NTSTATUS __stdcall NtCreateToken(PHANDLE TokenHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, TOKEN_TYPE TokenType, PLUID AuthenticationId, PLARGE_INTEGER ExpirationTime, PTOKEN_USER TokenUser, PTOKEN_GROUPS TokenGroups, PTOKEN_PRIVILEGES TokenPrivileges, PTOKEN_OWNER TokenOwner, PTOKEN_PRIMARY_GROUP TokenPrimaryGroup, PTOKEN_DEFAULT_DACL TokenDefaultDacl, PTOKEN_SOURCE TokenSource);
NTSTATUS __stdcall NtCreateWaitablePort(PHANDLE PortHandle, POBJECT_ATTRIBUTES ObjectAttributes, ULONG MaxConnectInfoLength, ULONG MaxDataLength, ULONG NPMessageQueueSize);
struct _TEB *NtCurrentTeb(void);
NTSTATUS __stdcall NtDebugActiveProcess(HANDLE Process, HANDLE DebugObject);
NTSTATUS __stdcall NtDebugContinue(HANDLE DebugObject, PCLIENT_ID AppClientId, NTSTATUS ContinueStatus);
NTSTATUS __stdcall NtDelayExecution(BOOLEAN Alertable, LARGE_INTEGER *Interval);
NTSTATUS __stdcall NtDeleteAtom(RTL_ATOM Atom);
NTSTATUS __stdcall NtDeleteBootEntry(ULONG Id);
NTSTATUS __stdcall NtDeleteDriverEntry(ULONG Id);
NTSTATUS __stdcall NtDeleteFile(POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtDeleteKey(HANDLE KeyHandle);
NTSTATUS __stdcall NtDeleteObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, BOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtDeleteValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName);
NTSTATUS __stdcall NtDeviceIoControlFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG IoControlCode, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);
NTSTATUS __stdcall NtDisplayString(PUNICODE_STRING DisplayString);
NTSTATUS __stdcall NtDuplicateObject(HANDLE SourceProcessHandle, HANDLE SourceHandle, HANDLE TargetProcessHandle, PHANDLE TargetHandle, ACCESS_MASK DesiredAccess, ULONG HandleAttributes, ULONG Options);
NTSTATUS __stdcall NtDuplicateToken(HANDLE ExistingTokenHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, BOOLEAN EffectiveOnly, TOKEN_TYPE TokenType, PHANDLE NewTokenHandle);
NTSTATUS __stdcall NtEnumerateBootEntries(PVOID Buffer, PULONG BufferLength);
NTSTATUS __stdcall NtEnumerateDriverEntries(PVOID Buffer, PULONG BufferLength);
NTSTATUS __stdcall NtEnumerateKey(HANDLE KeyHandle, ULONG Index, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall NtEnumerateSystemEnvironmentValuesEx(ULONG InformationClass, PVOID Buffer, ULONG BufferLength);
NTSTATUS __stdcall NtEnumerateValueKey(HANDLE KeyHandle, ULONG Index, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall NtExtendSection(HANDLE SectionHandle, PLARGE_INTEGER NewMaximumSize);
NTSTATUS __stdcall NtFilterToken(HANDLE ExistingTokenHandle, ULONG Flags, PTOKEN_GROUPS SidsToDisable, PTOKEN_PRIVILEGES PrivilegesToDelete, PTOKEN_GROUPS RestrictedSids, PHANDLE NewTokenHandle);
NTSTATUS __stdcall NtFindAtom(PWSTR AtomName, ULONG AtomNameLength, PRTL_ATOM Atom);
NTSTATUS __stdcall NtFlushBuffersFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock);
NTSTATUS __stdcall NtFlushInstructionCache(HANDLE ProcessHandle, PVOID BaseAddress, SIZE_T NumberOfBytesToFlush);
NTSTATUS __stdcall NtFlushKey(HANDLE KeyHandle);
NTSTATUS __stdcall NtFlushVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T RegionSize, PIO_STATUS_BLOCK IoStatus);
NTSTATUS __stdcall NtFlushWriteBuffer();
NTSTATUS __stdcall NtFreeUserPhysicalPages(HANDLE ProcessHandle, PULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall NtFreeVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T RegionSize, ULONG FreeType);
NTSTATUS __stdcall NtFsControlFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG FsControlCode, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);
NTSTATUS __stdcall NtGetContextThread(HANDLE ThreadHandle, PCONTEXT Context);
ULONG __stdcall NtGetCurrentProcessorNumber();
NTSTATUS __stdcall NtGetDevicePowerState(HANDLE Device, PDEVICE_POWER_STATE PowerState);
NTSTATUS __stdcall NtGetPlugPlayEvent(ULONG Reserved1, ULONG Reserved2, PPLUGPLAY_EVENT_BLOCK Buffer, ULONG BufferSize);
ULONG __stdcall NtGetTickCount();
NTSTATUS __stdcall NtGetWriteWatch(HANDLE ProcessHandle, ULONG Flags, PVOID BaseAddress, SIZE_T RegionSize, PVOID *UserAddressArray, PULONG_PTR EntriesInUserAddressArray, PULONG Granularity);
NTSTATUS __stdcall NtImpersonateAnonymousToken(HANDLE Thread);
NTSTATUS __stdcall NtImpersonateClientOfPort(HANDLE PortHandle, PPORT_MESSAGE ClientMessage);
NTSTATUS __stdcall NtImpersonateThread(HANDLE ThreadHandle, HANDLE ThreadToImpersonate, PSECURITY_QUALITY_OF_SERVICE SecurityQualityOfService);
NTSTATUS __stdcall NtInitializeRegistry(USHORT Flag);
NTSTATUS __stdcall NtInitiatePowerAction(POWER_ACTION SystemAction, SYSTEM_POWER_STATE MinSystemState, ULONG Flags, BOOLEAN Asynchronous);
NTSTATUS __stdcall NtIsProcessInJob(HANDLE ProcessHandle, HANDLE JobHandle);
BOOLEAN __stdcall NtIsSystemResumeAutomatic();
NTSTATUS __stdcall NtListenPort(HANDLE PortHandle, PPORT_MESSAGE ConnectionRequest);
NTSTATUS __stdcall NtLoadDriver(PUNICODE_STRING DriverServiceName);
NTSTATUS __stdcall NtLoadKey(POBJECT_ATTRIBUTES KeyObjectAttributes, POBJECT_ATTRIBUTES FileObjectAttributes);
NTSTATUS __stdcall NtLoadKey2(POBJECT_ATTRIBUTES KeyObjectAttributes, POBJECT_ATTRIBUTES FileObjectAttributes, ULONG Flags);
NTSTATUS __stdcall NtLoadKeyEx(POBJECT_ATTRIBUTES TargetKey, POBJECT_ATTRIBUTES SourceFile, ULONG Flags, HANDLE TrustClassKey);
NTSTATUS __stdcall NtLockFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER ByteOffset, PLARGE_INTEGER Length, ULONG Key, BOOLEAN FailImmediatedly, BOOLEAN ExclusiveLock);
NTSTATUS __stdcall NtLockProductActivationKeys(PULONG pPrivateVer, PULONG pSafeMode);
NTSTATUS __stdcall NtLockRegistryKey(HANDLE KeyHandle);
NTSTATUS __stdcall NtLockVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T NumberOfBytesToLock, ULONG MapType);
NTSTATUS __stdcall NtMakePermanentObject(HANDLE Object);
NTSTATUS __stdcall NtMakeTemporaryObject(HANDLE Handle);
NTSTATUS __stdcall NtMapUserPhysicalPages(PVOID VirtualAddresses, ULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall NtMapUserPhysicalPagesScatter(PVOID *VirtualAddresses, ULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall NtMapViewOfSection(HANDLE SectionHandle, HANDLE ProcessHandle, PVOID *BaseAddress, ULONG_PTR ZeroBits, SIZE_T CommitSize, PLARGE_INTEGER SectionOffset, PSIZE_T ViewSize, SECTION_INHERIT InheritDisposition, ULONG AllocationType, ULONG AccessProtection);
NTSTATUS __stdcall NtModifyBootEntry(PBOOT_ENTRY BootEntry);
NTSTATUS __stdcall NtModifyDriverEntry(PEFI_DRIVER_ENTRY DriverEntry);
NTSTATUS __stdcall NtNotifyChangeDirectoryFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG BufferSize, ULONG CompletionFilter, BOOLEAN WatchTree);
NTSTATUS __stdcall NtNotifyChangeKey(HANDLE KeyHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG CompletionFilter, BOOLEAN Asynchroneous, PVOID ChangeBuffer, ULONG Length, BOOLEAN WatchSubtree);
NTSTATUS __stdcall NtNotifyChangeMultipleKeys(HANDLE MasterKeyHandle, ULONG Count, OBJECT_ATTRIBUTES SubordinateObjects[], HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG CompletionFilter, BOOLEAN WatchTree, PVOID Buffer, ULONG BufferSize, BOOLEAN Asynchronous);
NTSTATUS __stdcall NtOpenDirectoryObject(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenEvent(PHANDLE EventHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenEventPair(PHANDLE EventPairHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG ShareAccess, ULONG OpenOptions);
NTSTATUS __stdcall NtOpenIoCompletion(PHANDLE CompetionPort, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenJobObject(PHANDLE JobHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenKey(PHANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenKeyedEvent(PHANDLE OutHandle, ACCESS_MASK AccessMask, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenMutant(PHANDLE MutantHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, HANDLE ClientToken, ACCESS_MASK DesiredAccess, ACCESS_MASK GrantedAccess, PPRIVILEGE_SET Privileges, BOOLEAN ObjectCreation, BOOLEAN AccessGranted, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall NtOpenProcess(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID ClientId);
NTSTATUS __stdcall NtOpenProcessToken(HANDLE ProcessHandle, ACCESS_MASK DesiredAccess, PHANDLE TokenHandle);
NTSTATUS __stdcall NtOpenProcessTokenEx(HANDLE ProcessHandle, ACCESS_MASK DesiredAccess, ULONG HandleAttributes, PHANDLE TokenHandle);
NTSTATUS __stdcall NtOpenSection(PHANDLE SectionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenSemaphore(PHANDLE SemaphoreHandle, ACCESS_MASK DesiredAcces, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenSymbolicLinkObject(PHANDLE SymbolicLinkHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtOpenThread(PHANDLE ThreadHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID ClientId);
NTSTATUS __stdcall NtOpenThreadToken(HANDLE ThreadHandle, ACCESS_MASK DesiredAccess, BOOLEAN OpenAsSelf, PHANDLE TokenHandle);
NTSTATUS __stdcall NtOpenThreadTokenEx(HANDLE ThreadHandle, ACCESS_MASK DesiredAccess, BOOLEAN OpenAsSelf, ULONG HandleAttributes, PHANDLE TokenHandle);
NTSTATUS __stdcall NtOpenTimer(PHANDLE TimerHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall NtPlugPlayControl(PLUGPLAY_CONTROL_CLASS PlugPlayControlClass, PVOID Buffer, ULONG BufferSize);
NTSTATUS __stdcall NtPowerInformation(POWER_INFORMATION_LEVEL PowerInformationLevel, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);
NTSTATUS __stdcall NtPrivilegeCheck(HANDLE ClientToken, PPRIVILEGE_SET RequiredPrivileges, PBOOLEAN Result);
NTSTATUS __stdcall NtPrivilegeObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, HANDLE ClientToken, ACCESS_MASK DesiredAccess, PPRIVILEGE_SET Privileges, BOOLEAN AccessGranted);
NTSTATUS __stdcall NtPrivilegedServiceAuditAlarm(PUNICODE_STRING SubsystemName, PUNICODE_STRING ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, BOOLEAN AccessGranted);
_NT_PRODUCT_TYPE NtProductLanManNt;
_NT_PRODUCT_TYPE NtProductServer;
_NT_PRODUCT_TYPE NtProductWinNt;
NTSTATUS __stdcall NtProtectVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, SIZE_T *NumberOfBytesToProtect, ULONG NewAccessProtection, PULONG OldAccessProtection);
NTSTATUS __stdcall NtPulseEvent(HANDLE EventHandle, PLONG PulseCount);
NTSTATUS __stdcall NtQueryAttributesFile(POBJECT_ATTRIBUTES ObjectAttributes, PFILE_BASIC_INFORMATION FileInformation);
NTSTATUS __stdcall NtQueryBootEntryOrder(PULONG Ids, PULONG Count);
NTSTATUS __stdcall NtQueryBootOptions(PBOOT_OPTIONS BootOptions, PULONG BootOptionsLength);
NTSTATUS __stdcall NtQueryDebugFilterState(ULONG ComponentId, ULONG Level);
NTSTATUS __stdcall NtQueryDefaultLocale(BOOLEAN UserProfile, PLCID DefaultLocaleId);
NTSTATUS __stdcall NtQueryDefaultUILanguage(LANGID *LanguageId);
NTSTATUS __stdcall NtQueryDirectoryFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass, BOOLEAN ReturnSingleEntry, PUNICODE_STRING FileName, BOOLEAN RestartScan);
NTSTATUS __stdcall NtQueryDirectoryObject(HANDLE DirectoryHandle, PVOID Buffer, ULONG BufferLength, BOOLEAN ReturnSingleEntry, BOOLEAN RestartScan, PULONG Context, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryDriverEntryOrder(PULONG Ids, PULONG Count);
NTSTATUS __stdcall NtQueryEaFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, BOOLEAN ReturnSingleEntry, PVOID EaList, ULONG EaListLength, PULONG EaIndex, BOOLEAN RestartScan);
NTSTATUS __stdcall NtQueryEvent(HANDLE EventHandle, EVENT_INFORMATION_CLASS EventInformationClass, PVOID EventInformation, ULONG EventInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryFullAttributesFile(POBJECT_ATTRIBUTES ObjectAttributes, PFILE_NETWORK_OPEN_INFORMATION FileInformation);
NTSTATUS __stdcall NtQueryInformationAtom(RTL_ATOM Atom, ATOM_INFORMATION_CLASS AtomInformationClass, PVOID AtomInformation, ULONG AtomInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall NtQueryInformationJobObject(HANDLE JobHandle, JOBOBJECTINFOCLASS JobInformationClass, PVOID JobInformation, ULONG JobInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryInformationPort(HANDLE PortHandle, PORT_INFORMATION_CLASS PortInformationClass, PVOID PortInformation, ULONG PortInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryInformationThread(HANDLE ThreadHandle, THREADINFOCLASS ThreadInformationClass, PVOID ThreadInformation, ULONG ThreadInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryInformationToken(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, PVOID TokenInformation, ULONG TokenInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryInstallUILanguage(LANGID *LanguageId);
NTSTATUS __stdcall NtQueryIntervalProfile(KPROFILE_SOURCE ProfileSource, PULONG Interval);
NTSTATUS __stdcall NtQueryIoCompletion(HANDLE IoCompletionHandle, IO_COMPLETION_INFORMATION_CLASS IoCompletionInformationClass, PVOID IoCompletionInformation, ULONG IoCompletionInformationLength, PULONG ResultLength);
NTSTATUS __stdcall NtQueryKey(HANDLE KeyHandle, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall NtQueryMultipleValueKey(HANDLE KeyHandle, PKEY_VALUE_ENTRY ValueEntries, ULONG EntryCount, PVOID ValueBuffer, PULONG BufferLength, PULONG RequiredBufferLength);
NTSTATUS __stdcall NtQueryMutant(HANDLE MutantHandle, MUTANT_INFORMATION_CLASS MutantInformationClass, PVOID MutantInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall NtQueryObject(HANDLE Handle, OBJECT_INFORMATION_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG ObjectInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQueryOpenSubKeys(POBJECT_ATTRIBUTES TargetKey, PULONG HandleCount);
NTSTATUS __stdcall NtQueryOpenSubKeysEx(POBJECT_ATTRIBUTES TargetKey, ULONG BufferLength, PVOID Buffer, PULONG RequiredSize);
NTSTATUS __stdcall NtQueryPerformanceCounter(PLARGE_INTEGER Counter, PLARGE_INTEGER Frequency);
NTSTATUS __stdcall NtQueryPortInformationProcess();
NTSTATUS __stdcall NtQueryQuotaInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, BOOLEAN ReturnSingleEntry, PVOID SidList, ULONG SidListLength, PSID StartSid, BOOLEAN RestartScan);
NTSTATUS __stdcall NtQuerySection(HANDLE SectionHandle, SECTION_INFORMATION_CLASS SectionInformationClass, PVOID SectionInformation, SIZE_T Length, PSIZE_T ResultLength);
NTSTATUS __stdcall NtQuerySecurityObject(HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor, ULONG Length, PULONG LengthNeeded);
NTSTATUS __stdcall NtQuerySemaphore(HANDLE SemaphoreHandle, SEMAPHORE_INFORMATION_CLASS SemaphoreInformationClass, PVOID SemaphoreInformation, ULONG Length, PULONG ReturnLength);
NTSTATUS __stdcall NtQuerySymbolicLinkObject(HANDLE SymLinkObjHandle, PUNICODE_STRING LinkTarget, PULONG DataWritten);
NTSTATUS __stdcall NtQuerySystemEnvironmentValue(PUNICODE_STRING Name, PWSTR Value, ULONG Length, PULONG ReturnLength);
NTSTATUS __stdcall NtQuerySystemEnvironmentValueEx(PUNICODE_STRING VariableName, LPGUID VendorGuid, PVOID Value, PULONG ReturnLength, PULONG Attributes);
NTSTATUS __stdcall NtQuerySystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, ULONG SystemInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtQuerySystemTime(PLARGE_INTEGER CurrentTime);
NTSTATUS __stdcall NtQueryTimer(HANDLE TimerHandle, TIMER_INFORMATION_CLASS TimerInformationClass, PVOID TimerInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall NtQueryTimerResolution(PULONG MinimumResolution, PULONG MaximumResolution, PULONG ActualResolution);
NTSTATUS __stdcall NtQueryValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall NtQueryVirtualMemory(HANDLE ProcessHandle, PVOID Address, MEMORY_INFORMATION_CLASS VirtualMemoryInformationClass, PVOID VirtualMemoryInformation, SIZE_T Length, PSIZE_T ResultLength);
NTSTATUS __stdcall NtQueryVolumeInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FsInformation, ULONG Length, FS_INFORMATION_CLASS FsInformationClass);
NTSTATUS __stdcall NtQueueApcThread(HANDLE ThreadHandle, PKNORMAL_ROUTINE ApcRoutine, PVOID NormalContext, PVOID SystemArgument1, PVOID SystemArgument2);
NTSTATUS __stdcall NtRaiseException(PEXCEPTION_RECORD ExceptionRecord, PCONTEXT Context, BOOLEAN SearchFrames);
NTSTATUS __stdcall NtRaiseHardError(NTSTATUS ErrorStatus, ULONG NumberOfParameters, ULONG UnicodeStringParameterMask, PULONG_PTR Parameters, ULONG ValidResponseOptions, PULONG Response);
NTSTATUS __stdcall NtReadFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall NtReadFileScatter(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE UserApcRoutine, PVOID UserApcContext, PIO_STATUS_BLOCK UserIoStatusBlock, FILE_SEGMENT_ELEMENT BufferDescription[], ULONG BufferLength, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall NtReadRequestData(HANDLE PortHandle, PPORT_MESSAGE Message, ULONG Index, PVOID Buffer, ULONG BufferLength, PULONG ReturnLength);
NTSTATUS __stdcall NtReadVirtualMemory(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, SIZE_T NumberOfBytesToRead, PSIZE_T NumberOfBytesRead);
NTSTATUS __stdcall NtRegisterThreadTerminatePort(HANDLE TerminationPort);
NTSTATUS __stdcall NtReleaseKeyedEvent(HANDLE EventHandle, PVOID Key, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall NtReleaseMutant(HANDLE MutantHandle, PLONG ReleaseCount);
NTSTATUS __stdcall NtReleaseSemaphore(HANDLE SemaphoreHandle, LONG ReleaseCount, PLONG PreviousCount);
NTSTATUS __stdcall NtRemoveIoCompletion(HANDLE IoCompletionHandle, PVOID *CompletionKey, PVOID *CompletionContext, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall NtRemoveProcessDebug(HANDLE Process, HANDLE DebugObject);
NTSTATUS __stdcall NtRenameKey(HANDLE KeyHandle, PUNICODE_STRING NewName);
NTSTATUS __stdcall NtReplaceKey(POBJECT_ATTRIBUTES ObjectAttributes, HANDLE Key, POBJECT_ATTRIBUTES ReplacedObjectAttributes);
NTSTATUS __stdcall NtReplyPort(HANDLE PortHandle, PPORT_MESSAGE LpcReply);
NTSTATUS __stdcall NtReplyWaitReceivePort(HANDLE PortHandle, PVOID *PortContext, PPORT_MESSAGE ReplyMessage, PPORT_MESSAGE ReceiveMessage);
NTSTATUS __stdcall NtReplyWaitReceivePortEx(HANDLE PortHandle, PVOID *PortContext, PPORT_MESSAGE ReplyMessage, PPORT_MESSAGE ReceiveMessage, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall NtReplyWaitReplyPort(HANDLE PortHandle, PPORT_MESSAGE ReplyMessage);
NTSTATUS __stdcall NtRequestDeviceWakeup(HANDLE Device);
NTSTATUS __stdcall NtRequestPort(HANDLE PortHandle, PPORT_MESSAGE LpcMessage);
NTSTATUS __stdcall NtRequestWaitReplyPort(HANDLE PortHandle, PPORT_MESSAGE LpcReply, PPORT_MESSAGE LpcRequest);
NTSTATUS __stdcall NtRequestWakeupLatency(LATENCY_TIME latency);
NTSTATUS __stdcall NtResetEvent(HANDLE EventHandle, PLONG NumberOfWaitingThreads);
NTSTATUS __stdcall NtResetWriteWatch(HANDLE ProcessHandle, PVOID BaseAddress, SIZE_T RegionSize);
NTSTATUS __stdcall NtRestoreKey(HANDLE KeyHandle, HANDLE FileHandle, ULONG RestoreFlags);
NTSTATUS __stdcall NtResumeProcess(HANDLE ProcessHandle);
NTSTATUS __stdcall NtResumeThread(HANDLE ThreadHandle, PULONG SuspendCount);
NTSTATUS __stdcall NtSaveKey(HANDLE KeyHandle, HANDLE FileHandle);
NTSTATUS __stdcall NtSaveKeyEx(HANDLE KeyHandle, HANDLE FileHandle, ULONG Flags);
NTSTATUS __stdcall NtSaveMergedKeys(HANDLE HighPrecedenceKeyHandle, HANDLE LowPrecedenceKeyHandle, HANDLE FileHandle);
NTSTATUS __stdcall NtSecureConnectPort(PHANDLE PortHandle, PUNICODE_STRING PortName, PSECURITY_QUALITY_OF_SERVICE SecurityQos, PPORT_VIEW ClientView, PSID ServerSid, PREMOTE_PORT_VIEW ServerView, PULONG MaxMessageLength, PVOID ConnectionInformation, PULONG ConnectionInformationLength);
NTSTATUS __stdcall NtSetBootEntryOrder(PULONG Ids, PULONG Count);
NTSTATUS __stdcall NtSetBootOptions(PBOOT_OPTIONS BootOptions, ULONG FieldsToChange);
NTSTATUS __stdcall NtSetContextThread(HANDLE ThreadHandle, PCONTEXT Context);
NTSTATUS __stdcall NtSetDebugFilterState(ULONG ComponentId, ULONG Level, BOOLEAN State);
NTSTATUS __stdcall NtSetDefaultHardErrorPort(HANDLE PortHandle);
NTSTATUS __stdcall NtSetDefaultLocale(BOOLEAN UserProfile, LCID DefaultLocaleId);
NTSTATUS __stdcall NtSetDefaultUILanguage(LANGID LanguageId);
NTSTATUS __stdcall NtSetDriverEntryOrder(PULONG Ids, PULONG Count);
NTSTATUS __stdcall NtSetEaFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID EaBuffer, ULONG EaBufferSize);
NTSTATUS __stdcall NtSetEvent(HANDLE EventHandle, PLONG PreviousState);
NTSTATUS __stdcall NtSetEventBoostPriority(HANDLE EventHandle);
NTSTATUS __stdcall NtSetHighEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall NtSetHighWaitLowEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall NtSetInformationDebugObject(HANDLE DebugObject, DEBUGOBJECTINFOCLASS InformationClass, PVOID Information, ULONG InformationLength, PULONG ReturnLength);
NTSTATUS __stdcall NtSetInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall NtSetInformationJobObject(HANDLE JobHandle, JOBOBJECTINFOCLASS JobInformationClass, PVOID JobInformation, ULONG JobInformationLength);
NTSTATUS __stdcall NtSetInformationKey(HANDLE KeyHandle, KEY_SET_INFORMATION_CLASS KeySetInformationClass, PVOID KeySetInformation, ULONG KeySetInformationLength);
NTSTATUS __stdcall NtSetInformationObject(HANDLE ObjectHandle, OBJECT_INFORMATION_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG Length);
NTSTATUS __stdcall NtSetInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength);
NTSTATUS __stdcall NtSetInformationThread(HANDLE ThreadHandle, THREADINFOCLASS ThreadInformationClass, PVOID ThreadInformation, ULONG ThreadInformationLength);
NTSTATUS __stdcall NtSetInformationToken(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, PVOID TokenInformation, ULONG TokenInformationLength);
NTSTATUS __stdcall NtSetIntervalProfile(ULONG Interval, KPROFILE_SOURCE ClockSource);
NTSTATUS __stdcall NtSetIoCompletion(HANDLE IoCompletionPortHandle, PVOID CompletionKey, PVOID CompletionContext, NTSTATUS CompletionStatus, ULONG CompletionInformation);
NTSTATUS __stdcall NtSetLdtEntries(ULONG Selector1, LDT_ENTRY LdtEntry1, ULONG Selector2, LDT_ENTRY LdtEntry2);
NTSTATUS __stdcall NtSetLowEventPair(HANDLE EventPair);
NTSTATUS __stdcall NtSetLowWaitHighEventPair(HANDLE EventPair);
NTSTATUS __stdcall NtSetQuotaInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG BufferLength);
NTSTATUS __stdcall NtSetSecurityObject(HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor);
NTSTATUS __stdcall NtSetSystemEnvironmentValue(PUNICODE_STRING VariableName, PUNICODE_STRING Value);
NTSTATUS __stdcall NtSetSystemEnvironmentValueEx(PUNICODE_STRING VariableName, LPGUID VendorGuid, PVOID Value, PULONG ReturnLength, PULONG Attributes);
NTSTATUS __stdcall NtSetSystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, ULONG SystemInformationLength);
NTSTATUS __stdcall NtSetSystemPowerState(POWER_ACTION SystemAction, SYSTEM_POWER_STATE MinSystemState, ULONG Flags);
NTSTATUS __stdcall NtSetSystemTime(PLARGE_INTEGER SystemTime, PLARGE_INTEGER NewSystemTime);
NTSTATUS __stdcall NtSetThreadExecutionState(EXECUTION_STATE esFlags, EXECUTION_STATE *PreviousFlags);
NTSTATUS __stdcall NtSetTimer(HANDLE TimerHandle, PLARGE_INTEGER DueTime, PTIMER_APC_ROUTINE TimerApcRoutine, PVOID TimerContext, BOOLEAN WakeTimer, LONG Period, PBOOLEAN PreviousState);
NTSTATUS __stdcall NtSetTimerResolution(ULONG RequestedResolution, BOOLEAN SetOrUnset, PULONG ActualResolution);
NTSTATUS __stdcall NtSetUuidSeed(PUCHAR UuidSeed);
NTSTATUS __stdcall NtSetValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName, ULONG TitleIndex, ULONG Type, PVOID Data, ULONG DataSize);
NTSTATUS __stdcall NtSetVolumeInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FsInformation, ULONG Length, FS_INFORMATION_CLASS FsInformationClass);
NTSTATUS __stdcall NtShutdownSystem(SHUTDOWN_ACTION Action);
NTSTATUS __stdcall NtSignalAndWaitForSingleObject(HANDLE SignalObject, HANDLE WaitObject, BOOLEAN Alertable, PLARGE_INTEGER Time);
NTSTATUS __stdcall NtStartProfile(HANDLE ProfileHandle);
NTSTATUS __stdcall NtStopProfile(HANDLE ProfileHandle);
NTSTATUS __stdcall NtSuspendProcess(HANDLE ProcessHandle);
NTSTATUS __stdcall NtSuspendThread(HANDLE ThreadHandle, PULONG PreviousSuspendCount);
NTSTATUS __stdcall NtSystemDebugControl(SYSDBG_COMMAND ControlCode, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, PULONG ReturnLength);
NTSTATUS __stdcall NtTerminateJobObject(HANDLE JobHandle, NTSTATUS ExitStatus);
NTSTATUS __stdcall NtTerminateProcess(HANDLE ProcessHandle, NTSTATUS ExitStatus);
NTSTATUS __stdcall NtTerminateThread(HANDLE ThreadHandle, NTSTATUS ExitStatus);
NTSTATUS __stdcall NtTestAlert();
NTSTATUS __stdcall NtTraceEvent(ULONG TraceHandle, ULONG Flags, ULONG TraceHeaderLength, PEVENT_TRACE_HEADER TraceHeader);
NTSTATUS __stdcall NtTranslateFilePath(PFILE_PATH InputFilePath, ULONG OutputType, PFILE_PATH OutputFilePath, ULONG OutputFilePathLength);
NTSTATUS __stdcall NtUnloadDriver(PUNICODE_STRING DriverServiceName);
NTSTATUS __stdcall NtUnloadKey(POBJECT_ATTRIBUTES KeyObjectAttributes);
NTSTATUS __stdcall NtUnloadKey2(POBJECT_ATTRIBUTES TargetKey, ULONG Flags);
NTSTATUS __stdcall NtUnloadKeyEx(POBJECT_ATTRIBUTES TargetKey, HANDLE Event);
NTSTATUS __stdcall NtUnlockFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER ByteOffset, PLARGE_INTEGER Length, ULONG Key);
NTSTATUS __stdcall NtUnlockVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T NumberOfBytesToUnlock, ULONG MapType);
NTSTATUS __stdcall NtUnmapViewOfSection(HANDLE ProcessHandle, PVOID BaseAddress);
NTSTATUS __stdcall NtVdmControl(ULONG ControlCode, PVOID ControlData);
NTSTATUS __stdcall NtW32Call(ULONG RoutineIndex, PVOID Argument, ULONG ArgumentLength, PVOID *Result, PULONG ResultLength);
NTSTATUS __stdcall NtWaitForDebugEvent(HANDLE DebugObject, BOOLEAN Alertable, PLARGE_INTEGER Timeout, PDBGUI_WAIT_STATE_CHANGE StateChange);
NTSTATUS __stdcall NtWaitForKeyedEvent(HANDLE EventHandle, PVOID Key, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall NtWaitForMultipleObjects(ULONG Count, HANDLE Object[], WAIT_TYPE WaitType, BOOLEAN Alertable, PLARGE_INTEGER Time);
NTSTATUS __stdcall NtWaitForMultipleObjects32(ULONG ObjectCount, PLONG Handles, WAIT_TYPE WaitType, BOOLEAN Alertable, PLARGE_INTEGER TimeOut);
NTSTATUS __stdcall NtWaitForSingleObject(HANDLE Object, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall NtWaitHighEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall NtWaitLowEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall NtWriteFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall NtWriteFileGather(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, FILE_SEGMENT_ELEMENT BufferDescription[], ULONG BufferLength, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall NtWriteRequestData(HANDLE PortHandle, PPORT_MESSAGE Message, ULONG Index, PVOID Buffer, ULONG BufferLength, PULONG ReturnLength);
NTSTATUS __stdcall NtWriteVirtualMemory(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, SIZE_T NumberOfBytesToWrite, PSIZE_T NumberOfBytesWritten);
NTSTATUS __stdcall NtYieldExecution();
_INTERFACE_TYPE NuBus;
_BUS_DATA_TYPE NuBusConfiguration;
MACRO_INHERIT_ACE OBJECT_INHERIT_ACE;
MACRO_OBJ_BRUSH OBJ_BITMAP;
MACRO_OBJ_BRUSH OBJ_BRUSH;
MACRO_OBJ OBJ_CASE_INSENSITIVE;
MACRO_OBJ_BRUSH OBJ_COLORSPACE;
MACRO_OBJ_BRUSH OBJ_DC;
MACRO_OBJ_BRUSH OBJ_ENHMETADC;
MACRO_OBJ_BRUSH OBJ_ENHMETAFILE;
MACRO_OBJ OBJ_EXCLUSIVE;
MACRO_OBJ_BRUSH OBJ_EXTPEN;
MACRO_OBJ_BRUSH OBJ_FONT;
MACRO_OBJ OBJ_FORCE_ACCESS_CHECK;
MACRO_OBJ OBJ_HANDLE_TAGBITS;
MACRO_OBJ OBJ_INHERIT;
MACRO_OBJ OBJ_KERNEL_HANDLE;
MACRO_OBJ_BRUSH OBJ_MEMDC;
MACRO_OBJ_BRUSH OBJ_METADC;
MACRO_OBJ_BRUSH OBJ_METAFILE;
MACRO_OBJ_NAME OBJ_NAME_PATH_SEPARATOR;
MACRO_OBJ OBJ_OPENIF;
MACRO_OBJ OBJ_OPENLINK;
MACRO_OBJ_BRUSH OBJ_PAL;
MACRO_OBJ_BRUSH OBJ_PEN;
MACRO_OBJ OBJ_PERMANENT;
MACRO_OBJ_BRUSH OBJ_REGION;
MACRO_OBJ OBJ_VALID_ATTRIBUTES;
MACRO_OC OC_BANK_CLIP;
MACRO_CHARSET OEM_CHARSET;
MACRO_FONT OEM_FIXED_FONT;
MACRO_OPAQUE OPAQUE;
MACRO_OPENCHANNEL OPENCHANNEL;
MACRO_OPENGL OPENGL_CMD;
MACRO_OPENGL OPENGL_GETINFO;
MACRO_OR OR_INVALID_OID;
MACRO_OR OR_INVALID_OXID;
MACRO_OR OR_INVALID_SET;
MACRO_MASK OSVERSION_MASK;
MACRO_OUT OUT_CHARACTER_PRECIS;
MACRO_OUT OUT_DEFAULT_PRECIS;
MACRO_OUT OUT_DEVICE_PRECIS;
MACRO_OUT OUT_OUTLINE_PRECIS;
MACRO_OUT OUT_PS_ONLY_PRECIS;
MACRO_OUT OUT_RASTER_PRECIS;
MACRO_OUT OUT_SCREEN_OUTLINE_PRECIS;
MACRO_OUT OUT_STRING_PRECIS;
MACRO_OUT OUT_STROKE_PRECIS;
MACRO_OUT OUT_TT_ONLY_PRECIS;
MACRO_OUT OUT_TT_PRECIS;
MACRO_SECURITY_INFORMATION OWNER_SECURITY_INFORMATION;
_OBJECT_INFORMATION_CLASS ObjectBasicInformation;
_OBJECT_INFORMATION_CLASS ObjectHandleFlagInformation;
_OBJECT_INFORMATION_CLASS ObjectNameInformation;
_OBJECT_INFORMATION_CLASS ObjectSessionInformation;
_OBJECT_INFORMATION_CLASS ObjectTypeInformation;
_OBJECT_INFORMATION_CLASS ObjectTypesInformation;
int __stdcall OffsetClipRgn(HDC, int, int);
int __stdcall OffsetRgn(HRGN, int, int);
BOOL __stdcall OffsetViewportOrgEx(HDC, int, int, LPPOINT);
BOOL __stdcall OffsetWindowOrgEx(HDC, int, int, LPPOINT);
_APPCOMPAT_FLAGS Ole32EnableAsyncDocFile;
_APPCOMPAT_FLAGS Ole32ValidatePointers;
_APPCOMPAT_USERFLAGS OpenGLEmfAware;
_HARDERROR_RESPONSE_OPTION OptionAbortRetryIgnore;
_HARDERROR_RESPONSE_OPTION OptionCancelTryContinue;
_HARDERROR_RESPONSE_OPTION OptionOk;
_HARDERROR_RESPONSE_OPTION OptionOkCancel;
_HARDERROR_RESPONSE_OPTION OptionOkNoWait;
_HARDERROR_RESPONSE_OPTION OptionRetryCancel;
_HARDERROR_RESPONSE_OPTION OptionShutdownSystem;
_HARDERROR_RESPONSE_OPTION OptionYesNo;
_HARDERROR_RESPONSE_OPTION OptionYesNoCancel;
MACRO_PAGE PAGE_EXECUTE;
MACRO_PAGE PAGE_EXECUTE_READ;
MACRO_PAGE PAGE_EXECUTE_READWRITE;
MACRO_PAGE PAGE_EXECUTE_WRITECOPY;
MACRO_PAGE PAGE_GUARD;
MACRO_PAGE PAGE_NOACCESS;
MACRO_PAGE PAGE_NOCACHE;
MACRO_PAGE PAGE_READONLY;
MACRO_PAGE PAGE_READWRITE;
MACRO_PAGE_SIZE PAGE_SHIFT;
MACRO_PAGE_SIZE PAGE_SIZE;
MACRO_PAGE PAGE_WRITECOMBINE;
MACRO_PAGE PAGE_WRITECOPY;
ULONG __stdcall PALOBJ_cGetColors(PALOBJ *ppalo, ULONG iStart, ULONG cColors, ULONG *pulColors);
MACRO_PAL PAL_BGR;
MACRO_PAL PAL_BITFIELDS;
MACRO_PAL PAL_CMYK;
MACRO_PAL PAL_INDEXED;
MACRO_PAL PAL_RGB;
MACRO_PANOSE PANOSE_COUNT;
MACRO_PAN PAN_ANY;
MACRO_PAN PAN_ARMSTYLE_INDEX;
MACRO_PAN PAN_BENT_ARMS_DOUBLE_SERIF;
MACRO_PAN PAN_BENT_ARMS_HORZ;
MACRO_PAN PAN_BENT_ARMS_SINGLE_SERIF;
MACRO_PAN PAN_BENT_ARMS_VERT;
MACRO_PAN PAN_BENT_ARMS_WEDGE;
MACRO_PAN PAN_CONTRAST_HIGH;
MACRO_PAN PAN_CONTRAST_INDEX;
MACRO_PAN PAN_CONTRAST_LOW;
MACRO_PAN PAN_CONTRAST_MEDIUM;
MACRO_PAN PAN_CONTRAST_MEDIUM_HIGH;
MACRO_PAN PAN_CONTRAST_MEDIUM_LOW;
MACRO_PAN PAN_CONTRAST_NONE;
MACRO_PAN PAN_CONTRAST_VERY_HIGH;
MACRO_PAN PAN_CONTRAST_VERY_LOW;
MACRO_PAN PAN_CULTURE_LATIN;
MACRO_PAN PAN_FAMILYTYPE_INDEX;
MACRO_PAN PAN_FAMILY_DECORATIVE;
MACRO_PAN PAN_FAMILY_PICTORIAL;
MACRO_PAN PAN_FAMILY_SCRIPT;
MACRO_PAN PAN_FAMILY_TEXT_DISPLAY;
MACRO_PAN PAN_LETTERFORM_INDEX;
MACRO_PAN PAN_LETT_NORMAL_BOXED;
MACRO_PAN PAN_LETT_NORMAL_CONTACT;
MACRO_PAN PAN_LETT_NORMAL_FLATTENED;
MACRO_PAN PAN_LETT_NORMAL_OFF_CENTER;
MACRO_PAN PAN_LETT_NORMAL_ROUNDED;
MACRO_PAN PAN_LETT_NORMAL_SQUARE;
MACRO_PAN PAN_LETT_NORMAL_WEIGHTED;
MACRO_PAN PAN_LETT_OBLIQUE_BOXED;
MACRO_PAN PAN_LETT_OBLIQUE_CONTACT;
MACRO_PAN PAN_LETT_OBLIQUE_FLATTENED;
MACRO_PAN PAN_LETT_OBLIQUE_OFF_CENTER;
MACRO_PAN PAN_LETT_OBLIQUE_ROUNDED;
MACRO_PAN PAN_LETT_OBLIQUE_SQUARE;
MACRO_PAN PAN_LETT_OBLIQUE_WEIGHTED;
MACRO_PAN PAN_MIDLINE_CONSTANT_POINTED;
MACRO_PAN PAN_MIDLINE_CONSTANT_SERIFED;
MACRO_PAN PAN_MIDLINE_CONSTANT_TRIMMED;
MACRO_PAN PAN_MIDLINE_HIGH_POINTED;
MACRO_PAN PAN_MIDLINE_HIGH_SERIFED;
MACRO_PAN PAN_MIDLINE_HIGH_TRIMMED;
MACRO_PAN PAN_MIDLINE_INDEX;
MACRO_PAN PAN_MIDLINE_LOW_POINTED;
MACRO_PAN PAN_MIDLINE_LOW_SERIFED;
MACRO_PAN PAN_MIDLINE_LOW_TRIMMED;
MACRO_PAN PAN_MIDLINE_STANDARD_POINTED;
MACRO_PAN PAN_MIDLINE_STANDARD_SERIFED;
MACRO_PAN PAN_MIDLINE_STANDARD_TRIMMED;
MACRO_PAN PAN_NO_FIT;
MACRO_PAN PAN_PROPORTION_INDEX;
MACRO_PAN PAN_PROP_CONDENSED;
MACRO_PAN PAN_PROP_EVEN_WIDTH;
MACRO_PAN PAN_PROP_EXPANDED;
MACRO_PAN PAN_PROP_MODERN;
MACRO_PAN PAN_PROP_MONOSPACED;
MACRO_PAN PAN_PROP_OLD_STYLE;
MACRO_PAN PAN_PROP_VERY_CONDENSED;
MACRO_PAN PAN_PROP_VERY_EXPANDED;
MACRO_PAN PAN_SERIFSTYLE_INDEX;
MACRO_PAN PAN_SERIF_BONE;
MACRO_PAN PAN_SERIF_COVE;
MACRO_PAN PAN_SERIF_EXAGGERATED;
MACRO_PAN PAN_SERIF_FLARED;
MACRO_PAN PAN_SERIF_NORMAL_SANS;
MACRO_PAN PAN_SERIF_OBTUSE_COVE;
MACRO_PAN PAN_SERIF_OBTUSE_SANS;
MACRO_PAN PAN_SERIF_OBTUSE_SQUARE_COVE;
MACRO_PAN PAN_SERIF_PERP_SANS;
MACRO_PAN PAN_SERIF_ROUNDED;
MACRO_PAN PAN_SERIF_SQUARE;
MACRO_PAN PAN_SERIF_SQUARE_COVE;
MACRO_PAN PAN_SERIF_THIN;
MACRO_PAN PAN_SERIF_TRIANGLE;
MACRO_PAN PAN_STRAIGHT_ARMS_DOUBLE_SERIF;
MACRO_PAN PAN_STRAIGHT_ARMS_HORZ;
MACRO_PAN PAN_STRAIGHT_ARMS_SINGLE_SERIF;
MACRO_PAN PAN_STRAIGHT_ARMS_VERT;
MACRO_PAN PAN_STRAIGHT_ARMS_WEDGE;
MACRO_PAN PAN_STROKEVARIATION_INDEX;
MACRO_PAN PAN_STROKE_GRADUAL_DIAG;
MACRO_PAN PAN_STROKE_GRADUAL_HORZ;
MACRO_PAN PAN_STROKE_GRADUAL_TRAN;
MACRO_PAN PAN_STROKE_GRADUAL_VERT;
MACRO_PAN PAN_STROKE_INSTANT_VERT;
MACRO_PAN PAN_STROKE_RAPID_HORZ;
MACRO_PAN PAN_STROKE_RAPID_VERT;
MACRO_PAN PAN_WEIGHT_BLACK;
MACRO_PAN PAN_WEIGHT_BOLD;
MACRO_PAN PAN_WEIGHT_BOOK;
MACRO_PAN PAN_WEIGHT_DEMI;
MACRO_PAN PAN_WEIGHT_HEAVY;
MACRO_PAN PAN_WEIGHT_INDEX;
MACRO_PAN PAN_WEIGHT_LIGHT;
MACRO_PAN PAN_WEIGHT_MEDIUM;
MACRO_PAN PAN_WEIGHT_NORD;
MACRO_PAN PAN_WEIGHT_THIN;
MACRO_PAN PAN_WEIGHT_VERY_LIGHT;
MACRO_PAN PAN_XHEIGHT_CONSTANT_LARGE;
MACRO_PAN PAN_XHEIGHT_CONSTANT_SMALL;
MACRO_PAN PAN_XHEIGHT_CONSTANT_STD;
MACRO_PAN PAN_XHEIGHT_DUCKING_LARGE;
MACRO_PAN PAN_XHEIGHT_DUCKING_SMALL;
MACRO_PAN PAN_XHEIGHT_DUCKING_STD;
MACRO_PAN PAN_XHEIGHT_INDEX;
MACRO_PARTITION PARTITION_ENTRY_UNUSED;
MACRO_PARTITION PARTITION_EXTENDED;
MACRO_PARTITION PARTITION_FAT32;
MACRO_PARTITION PARTITION_FAT32_XINT13;
MACRO_PARTITION PARTITION_FAT_12;
MACRO_PARTITION PARTITION_FAT_16;
MACRO_PARTITION PARTITION_HUGE;
MACRO_PARTITION PARTITION_IFS;
MACRO_PARTITION PARTITION_LDM;
MACRO_PARTITION PARTITION_NTFT;
MACRO_PARTITION PARTITION_PREP;
_PARTITION_STYLE PARTITION_STYLE_GPT;
_PARTITION_STYLE PARTITION_STYLE_MBR;
_PARTITION_STYLE PARTITION_STYLE_RAW;
MACRO_PARTITION PARTITION_UNIX;
MACRO_PARTITION PARTITION_XENIX_1;
MACRO_PARTITION PARTITION_XENIX_2;
MACRO_PARTITION PARTITION_XINT13;
MACRO_PARTITION PARTITION_XINT13_EXTENDED;
MACRO_PASSTHROUGH PASSTHROUGH;
MACRO_PATCOPY PATCOPY;
BOOL __stdcall PATHOBJ_bCloseFigure(PATHOBJ *ppo);
BOOL __stdcall PATHOBJ_bEnum(PATHOBJ *ppo, PATHDATA *ppd);
BOOL __stdcall PATHOBJ_bEnumClipLines(PATHOBJ *ppo, ULONG cj, CLIPLINE *pcl);
BOOL __stdcall PATHOBJ_bMoveTo(PATHOBJ *ppo, POINTFIX ptfx);
BOOL __stdcall PATHOBJ_bPolyBezierTo(PATHOBJ *ppo, POINTFIX *pptfx, ULONG cptfx);
BOOL __stdcall PATHOBJ_bPolyLineTo(PATHOBJ *ppo, POINTFIX *pptfx, ULONG cptfx);
void __stdcall PATHOBJ_vEnumStart(PATHOBJ *ppo);
void __stdcall PATHOBJ_vEnumStartClipLines(PATHOBJ *ppo, CLIPOBJ *pco, SURFOBJ *pso, LINEATTRS *pla);
void __stdcall PATHOBJ_vGetBounds(PATHOBJ *ppo, PRECTFX prectfx);
MACRO_PATINVERT PATINVERT;
MACRO_PATPAINT PATPAINT;
_INTERFACE_TYPE PCIBus;
_BUS_DATA_TYPE PCIConfiguration;
_INTERFACE_TYPE PCMCIABus;
_BUS_DATA_TYPE PCMCIAConfiguration;
MACRO_PC_EXPLICIT PC_EXPLICIT;
MACRO_PC PC_INTERIORS;
MACRO_PC_EXPLICIT PC_NOCOLLAPSE;
MACRO_PC PC_NONE;
MACRO_PC PC_PATHS;
MACRO_PC PC_POLYGON;
MACRO_PC PC_POLYPOLYGON;
MACRO_PC PC_RECTANGLE;
MACRO_PC_EXPLICIT PC_RESERVED;
MACRO_PC PC_SCANLINE;
MACRO_PC PC_STYLED;
MACRO_PC PC_TRAPEZOID;
MACRO_PC PC_WIDE;
MACRO_PC PC_WIDESTYLED;
MACRO_PC PC_WINDPOLYGON;
MACRO_PDEVICESIZE PDEVICESIZE;
MACRO_PD PD_BEGINSUBPATH;
MACRO_PD PD_BEZIERS;
MACRO_PD PD_CLOSEFIGURE;
MACRO_PD PD_ENDSUBPATH;
MACRO_PD PD_RESETSTYLE;
MACRO_PEB PEB_KERNEL_CALLBACK_TABLE;
MACRO_PFD PFD_DEPTH_DONTCARE;
MACRO_PFD PFD_DOUBLEBUFFER;
MACRO_PFD PFD_DOUBLEBUFFER_DONTCARE;
MACRO_PFD PFD_DRAW_TO_BITMAP;
MACRO_PFD PFD_DRAW_TO_WINDOW;
MACRO_PFD PFD_GENERIC_ACCELERATED;
MACRO_PFD PFD_GENERIC_FORMAT;
MACRO_PFD PFD_MAIN_PLANE;
MACRO_PFD PFD_NEED_PALETTE;
MACRO_PFD PFD_NEED_SYSTEM_PALETTE;
MACRO_PFD PFD_OVERLAY_PLANE;
MACRO_PFD PFD_STEREO;
MACRO_PFD PFD_STEREO_DONTCARE;
MACRO_PFD PFD_SUPPORT_GDI;
MACRO_PFD PFD_SUPPORT_OPENGL;
MACRO_PFD PFD_SWAP_COPY;
MACRO_PFD PFD_SWAP_EXCHANGE;
MACRO_PFD PFD_SWAP_LAYER_BUFFERS;
MACRO_PFD PFD_TYPE_COLORINDEX;
MACRO_PFD PFD_TYPE_RGBA;
MACRO_PFD PFD_UNDERLAY_PLANE;
MACRO_PF PF_3DNOW_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ALPHA_BYTE_INSTRUCTIONS;
MACRO_PF PF_ARM_64BIT_LOADSTORE_ATOMIC;
MACRO_PF PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE;
MACRO_PF PF_ARM_EXTERNAL_CACHE_AVAILABLE;
MACRO_PF PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ARM_NEON_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ARM_V8_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_ARM_VFP_32_REGISTERS_AVAILABLE;
MACRO_PF PF_CHANNELS_ENABLED;
MACRO_PF PF_COMPARE64_EXCHANGE128;
MACRO_PF PF_COMPARE_EXCHANGE128;
MACRO_PF PF_COMPARE_EXCHANGE_DOUBLE;
MACRO_PF PF_FASTFAIL_AVAILABLE;
MACRO_PF PF_FLOATING_POINT_EMULATED;
MACRO_PF PF_FLOATING_POINT_PRECISION_ERRATA;
MACRO_PF PF_MMX_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_NX_ENABLED;
MACRO_PF PF_PAE_ENABLED;
MACRO_PF PF_PPC_MOVEMEM_64BIT_OK;
MACRO_PF PF_RDRAND_INSTRUCTION_AVAILABLE;
MACRO_PF PF_RDTSC_INSTRUCTION_AVAILABLE;
MACRO_PF PF_RDWRFSGSBASE_AVAILABLE;
MACRO_PF PF_SECOND_LEVEL_ADDRESS_TRANSLATION;
MACRO_PF PF_SSE3_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_SSE_DAZ_MODE_AVAILABLE;
MACRO_PF PF_VIRT_FIRMWARE_ENABLED;
MACRO_PF PF_XMMI64_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_XMMI_INSTRUCTIONS_AVAILABLE;
MACRO_PF PF_XSAVE_ENABLED;
MACRO_PHYSICALHEIGHT PHYSICALHEIGHT;
MACRO_PHYSICALOFFSETX PHYSICALOFFSETX;
MACRO_PHYSICALOFFSETY PHYSICALOFFSETY;
MACRO_PHYSICALWIDTH PHYSICALWIDTH;
MACRO_PLANES PLANES;
_INTERFACE_TYPE PNPBus;
_INTERFACE_TYPE PNPISABus;
_BUS_DATA_TYPE PNPISAConfiguration;
MACRO_PNP PNP_BUS_RELATIONS;
MACRO_PNP PNP_CLEAR_DEVICE_STATUS;
MACRO_PNP PNP_EJECT_RELATIONS;
MACRO_PNP PNP_GET_CHILD_DEVICE;
MACRO_PNP PNP_GET_DEVICE_STATUS;
MACRO_PNP PNP_GET_PARENT_DEVICE;
MACRO_PNP PNP_GET_SIBLING_DEVICE;
MACRO_PNP PNP_POWER_RELATIONS;
MACRO_PNP PNP_PROPERTY_ADDRESS;
MACRO_PNP PNP_PROPERTY_BUSNUMBER;
MACRO_PNP PNP_PROPERTY_BUSTYPEGUID;
MACRO_PNP PNP_PROPERTY_CONTAINERID;
MACRO_PNP PNP_PROPERTY_ENUMERATOR_NAME;
MACRO_PNP PNP_PROPERTY_INSTALL_STATE;
MACRO_PNP PNP_PROPERTY_LEGACYBUSTYPE;
MACRO_PNP PNP_PROPERTY_LOCATION_PATHS;
MACRO_PNP PNP_PROPERTY_PHYSICAL_DEVICE_OBJECT_NAME;
MACRO_PNP PNP_PROPERTY_POWER_DATA;
MACRO_PNP PNP_PROPERTY_REMOVAL_POLICY;
MACRO_PNP PNP_PROPERTY_REMOVAL_POLICY_HARDWARE_DEFAULT;
MACRO_PNP PNP_PROPERTY_REMOVAL_POLICY_OVERRIDE;
MACRO_PNP PNP_PROPERTY_UI_NUMBER;
MACRO_PNP PNP_REMOVAL_RELATIONS;
MACRO_PNP PNP_SET_DEVICE_STATUS;
_PNP_VETO_TYPE PNP_VetoDevice;
_PNP_VETO_TYPE PNP_VetoDriver;
_PNP_VETO_TYPE PNP_VetoIllegalDeviceRequest;
_PNP_VETO_TYPE PNP_VetoInsufficientPower;
_PNP_VETO_TYPE PNP_VetoLegacyDevice;
_PNP_VETO_TYPE PNP_VetoLegacyDriver;
_PNP_VETO_TYPE PNP_VetoNonDisableable;
_PNP_VETO_TYPE PNP_VetoOutstandingOpen;
_PNP_VETO_TYPE PNP_VetoPendingClose;
_PNP_VETO_TYPE PNP_VetoTypeUnknown;
_PNP_VETO_TYPE PNP_VetoWindowsApp;
_PNP_VETO_TYPE PNP_VetoWindowsService;
MACRO_POLICY POLICY_AUDIT_SUBCATEGORY_COUNT;
MACRO_POLYFILL POLYFILL_LAST;
MACRO_POLYGONALCAPS POLYGONALCAPS;
MACRO_PORT PORT_ALL_ACCESS;
MACRO_PORT PORT_CONNECT;
MACRO_PORT_MAXIMUM PORT_MAXIMUM_MESSAGE_LENGTH;
MACRO_POSTSCRIPT POSTSCRIPT_DATA;
MACRO_POSTSCRIPT POSTSCRIPT_IGNORE;
MACRO_POSTSCRIPT_PASSTHROUGH POSTSCRIPT_PASSTHROUGH;
MACRO_POWER POWER_ACTION_CRITICAL;
MACRO_POWER POWER_ACTION_DISABLE_WAKES;
MACRO_POWER POWER_ACTION_LIGHTEST_FIRST;
MACRO_POWER POWER_ACTION_LOCK_CONSOLE;
MACRO_POWER POWER_ACTION_OVERRIDE_APPS;
MACRO_POWER POWER_ACTION_QUERY_ALLOWED;
MACRO_POWER POWER_ACTION_UI_ALLOWED;
MACRO_POWER POWER_FORCE_TRIGGER_RESET;
MACRO_POWER POWER_LEVEL_USER_NOTIFY_EXEC;
MACRO_POWER POWER_LEVEL_USER_NOTIFY_SOUND;
MACRO_POWER POWER_LEVEL_USER_NOTIFY_TEXT;
MACRO_POWER POWER_USER_NOTIFY_BUTTON;
MACRO_POWER POWER_USER_NOTIFY_SHUTDOWN;
MACRO_PO_BEZIERS PO_ALL_INTEGERS;
MACRO_PO_BEZIERS PO_BEZIERS;
MACRO_PO_BEZIERS PO_ELLIPSE;
MACRO_PO_BEZIERS PO_ENUM_AS_INTEGERS;
MACRO_PO PO_THROTTLE_ADAPTIVE;
MACRO_PO PO_THROTTLE_CONSTANT;
MACRO_PO PO_THROTTLE_DEGRADE;
MACRO_PO PO_THROTTLE_MAXIMUM;
MACRO_PO PO_THROTTLE_NONE;
MACRO_PO_BEZIERS PO_WIDENED;
MACRO_PPC PPC_BGR_ORDER_HORIZONTAL_STRIPES;
MACRO_PPC PPC_BGR_ORDER_VERTICAL_STRIPES;
MACRO_PPC PPC_DEFAULT;
MACRO_PPC PPC_RGB_ORDER_HORIZONTAL_STRIPES;
MACRO_PPC PPC_RGB_ORDER_VERTICAL_STRIPES;
MACRO_PPC PPC_UNDEFINED;
MACRO_PPG PPG_DEFAULT;
MACRO_PPG PPG_SRGB;
MACRO_PRAGMA PRAGMA_DEPRECATED_DDK;
MACRO_PRIMARY_ORDER PRIMARY_ORDER_ABC;
MACRO_PRIMARY_ORDER PRIMARY_ORDER_ACB;
MACRO_PRIMARY_ORDER PRIMARY_ORDER_BAC;
MACRO_PRIMARY_ORDER PRIMARY_ORDER_BCA;
MACRO_PRIMARY_ORDER PRIMARY_ORDER_CAB;
MACRO_PRIMARY_ORDER PRIMARY_ORDER_CBA;
MACRO_PRIMARY PRIMARY_VECTOR_BASE;
MACRO_PRIVILEGE PRIVILEGE_SET_ALL_NECESSARY;
MACRO_PROCESSOR PROCESSOR_ALPHA_21064;
MACRO_PROCESSOR PROCESSOR_AMD_X8664;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_ALPHA;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_ALPHA64;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_AMD64;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_ARM;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_IA64;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_INTEL;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_MIPS;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_MSIL;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_PPC;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_SHX;
MACRO_PROCESSOR PROCESSOR_ARCHITECTURE_UNKNOWN;
MACRO_PROCESSOR PROCESSOR_ARM720;
MACRO_PROCESSOR PROCESSOR_ARM820;
MACRO_PROCESSOR PROCESSOR_ARM920;
MACRO_PROCESSOR PROCESSOR_ARM_7TDMI;
MACRO_PROCESSOR_FEATURE_FXSR PROCESSOR_FEATURE_FXSR;
MACRO_PROCESSOR_FEATURE PROCESSOR_FEATURE_MAX;
MACRO_PROCESSOR PROCESSOR_HITACHI_SH3;
MACRO_PROCESSOR PROCESSOR_HITACHI_SH3E;
MACRO_PROCESSOR PROCESSOR_HITACHI_SH4;
MACRO_PROCESSOR PROCESSOR_INTEL_386;
MACRO_PROCESSOR PROCESSOR_INTEL_486;
MACRO_PROCESSOR PROCESSOR_INTEL_860;
MACRO_PROCESSOR PROCESSOR_INTEL_IA64;
MACRO_PROCESSOR PROCESSOR_INTEL_PENTIUM;
MACRO_PROCESSOR PROCESSOR_MIPS_R2000;
MACRO_PROCESSOR PROCESSOR_MIPS_R3000;
MACRO_PROCESSOR PROCESSOR_MIPS_R4000;
MACRO_PROCESSOR PROCESSOR_MOTOROLA_821;
MACRO_PROCESSOR PROCESSOR_PPC_601;
MACRO_PROCESSOR PROCESSOR_PPC_603;
MACRO_PROCESSOR PROCESSOR_PPC_604;
MACRO_PROCESSOR PROCESSOR_PPC_620;
MACRO_PROCESSOR PROCESSOR_SHx_SH3;
MACRO_PROCESSOR PROCESSOR_SHx_SH4;
MACRO_PROCESSOR PROCESSOR_STRONGARM;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_ALL_LARGE_PAGE_FLAGS;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_BREAKAWAY;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_INHERIT_HANDLES;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_LARGE_PAGES;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_LEGAL_MASK;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_NO_DEBUG_INHERIT;
MACRO_PROCESS_CREATE PROCESS_CREATE_FLAGS_OVERRIDE_ADDRESS_SPACE;
MACRO_PROCESS PROCESS_CREATE_PROCESS;
MACRO_PROCESS PROCESS_CREATE_THREAD;
MACRO_PROCESS PROCESS_DUP_HANDLE;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_ABOVE_NORMAL;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_BELOW_NORMAL;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_HIGH;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_IDLE;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_INVALID;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_NORMAL;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_CLASS_REALTIME;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_IDLE;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_NORMAL;
MACRO_PROCESS_CREATE PROCESS_PRIORITY_NORMAL_FOREGROUND;
MACRO_PROCESS PROCESS_QUERY_INFORMATION;
MACRO_PROCESS PROCESS_QUERY_LIMITED_INFORMATION;
MACRO_PROCESS PROCESS_SET_INFORMATION;
MACRO_PROCESS_SET PROCESS_SET_LIMITED_INFORMATION;
MACRO_PROCESS PROCESS_SET_QUOTA;
MACRO_PROCESS PROCESS_SET_SESSIONID;
MACRO_PROCESS PROCESS_SUSPEND_RESUME;
MACRO_PROCESS PROCESS_TERMINATE;
MACRO_PROCESS PROCESS_VM_OPERATION;
MACRO_PROCESS PROCESS_VM_READ;
MACRO_PROCESS PROCESS_VM_WRITE;
MACRO_PRODUCT PRODUCT_BUSINESS;
MACRO_PRODUCT PRODUCT_BUSINESS_N;
MACRO_PRODUCT PRODUCT_CLUSTER_SERVER;
MACRO_PRODUCT PRODUCT_CLUSTER_SERVER_V;
MACRO_PRODUCT PRODUCT_CORE;
MACRO_PRODUCT PRODUCT_CORE_ARM;
MACRO_PRODUCT PRODUCT_CORE_COUNTRYSPECIFIC;
MACRO_PRODUCT PRODUCT_CORE_N;
MACRO_PRODUCT PRODUCT_CORE_SINGLELANGUAGE;
MACRO_PRODUCT PRODUCT_DATACENTER_EVALUATION_SERVER;
MACRO_PRODUCT PRODUCT_DATACENTER_SERVER;
MACRO_PRODUCT PRODUCT_DATACENTER_SERVER_CORE;
MACRO_PRODUCT PRODUCT_DATACENTER_SERVER_CORE_V;
MACRO_PRODUCT PRODUCT_DATACENTER_SERVER_V;
MACRO_PRODUCT PRODUCT_EMBEDDED;
MACRO_PRODUCT PRODUCT_EMBEDDED_A;
MACRO_PRODUCT PRODUCT_EMBEDDED_AUTOMOTIVE;
MACRO_PRODUCT PRODUCT_EMBEDDED_E;
MACRO_PRODUCT PRODUCT_EMBEDDED_INDUSTRY;
MACRO_PRODUCT PRODUCT_EMBEDDED_INDUSTRY_A;
MACRO_PRODUCT PRODUCT_EMBEDDED_INDUSTRY_A_E;
MACRO_PRODUCT PRODUCT_EMBEDDED_INDUSTRY_E;
MACRO_PRODUCT PRODUCT_ENTERPRISE;
MACRO_PRODUCT PRODUCT_ENTERPRISE_E;
MACRO_PRODUCT PRODUCT_ENTERPRISE_EVALUATION;
MACRO_PRODUCT PRODUCT_ENTERPRISE_N;
MACRO_PRODUCT PRODUCT_ENTERPRISE_N_EVALUATION;
MACRO_PRODUCT PRODUCT_ENTERPRISE_SERVER;
MACRO_PRODUCT PRODUCT_ENTERPRISE_SERVER_CORE;
MACRO_PRODUCT PRODUCT_ENTERPRISE_SERVER_CORE_V;
MACRO_PRODUCT PRODUCT_ENTERPRISE_SERVER_IA64;
MACRO_PRODUCT PRODUCT_ENTERPRISE_SERVER_V;
MACRO_PRODUCT PRODUCT_ENTERPRISE_S_N_EVALUATION;
MACRO_PRODUCT PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL;
MACRO_PRODUCT PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC;
MACRO_PRODUCT PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT;
MACRO_PRODUCT PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC;
MACRO_PRODUCT PRODUCT_HOME_BASIC;
MACRO_PRODUCT PRODUCT_HOME_BASIC_E;
MACRO_PRODUCT PRODUCT_HOME_BASIC_N;
MACRO_PRODUCT PRODUCT_HOME_PREMIUM;
MACRO_PRODUCT PRODUCT_HOME_PREMIUM_E;
MACRO_PRODUCT PRODUCT_HOME_PREMIUM_N;
MACRO_PRODUCT PRODUCT_HOME_PREMIUM_SERVER;
MACRO_PRODUCT PRODUCT_HOME_SERVER;
MACRO_PRODUCT PRODUCT_HYPERV;
MACRO_PRODUCT PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT;
MACRO_PRODUCT PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING;
MACRO_PRODUCT PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY;
MACRO_PRODUCT PRODUCT_MULTIPOINT_PREMIUM_SERVER;
MACRO_PRODUCT PRODUCT_MULTIPOINT_STANDARD_SERVER;
MACRO_PRODUCT PRODUCT_PROFESSIONAL;
MACRO_PRODUCT PRODUCT_PROFESSIONAL_E;
MACRO_PRODUCT PRODUCT_PROFESSIONAL_N;
MACRO_PRODUCT PRODUCT_PROFESSIONAL_WMC;
MACRO_PRODUCT PRODUCT_SB_SOLUTION_SERVER;
MACRO_PRODUCT PRODUCT_SB_SOLUTION_SERVER_EM;
MACRO_PRODUCT PRODUCT_SERVER_FOR_SB_SOLUTIONS;
MACRO_PRODUCT PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM;
MACRO_PRODUCT PRODUCT_SERVER_FOR_SMALLBUSINESS;
MACRO_PRODUCT PRODUCT_SERVER_FOR_SMALLBUSINESS_V;
MACRO_PRODUCT PRODUCT_SERVER_FOUNDATION;
MACRO_PRODUCT PRODUCT_SMALLBUSINESS_SERVER;
MACRO_PRODUCT PRODUCT_SMALLBUSINESS_SERVER_PREMIUM;
MACRO_PRODUCT PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE;
MACRO_PRODUCT PRODUCT_SOLUTION_EMBEDDEDSERVER;
MACRO_PRODUCT PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE;
MACRO_PRODUCT PRODUCT_STANDARD_EVALUATION_SERVER;
MACRO_PRODUCT PRODUCT_STANDARD_SERVER;
MACRO_PRODUCT PRODUCT_STANDARD_SERVER_CORE;
MACRO_PRODUCT PRODUCT_STANDARD_SERVER_CORE_V;
MACRO_PRODUCT PRODUCT_STANDARD_SERVER_SOLUTIONS;
MACRO_PRODUCT PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE;
MACRO_PRODUCT PRODUCT_STANDARD_SERVER_V;
MACRO_PRODUCT PRODUCT_STARTER;
MACRO_PRODUCT PRODUCT_STARTER_E;
MACRO_PRODUCT PRODUCT_STARTER_N;
MACRO_PRODUCT PRODUCT_STORAGE_ENTERPRISE_SERVER;
MACRO_PRODUCT PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE;
MACRO_PRODUCT PRODUCT_STORAGE_EXPRESS_SERVER;
MACRO_PRODUCT PRODUCT_STORAGE_EXPRESS_SERVER_CORE;
MACRO_PRODUCT PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER;
MACRO_PRODUCT PRODUCT_STORAGE_STANDARD_SERVER;
MACRO_PRODUCT PRODUCT_STORAGE_STANDARD_SERVER_CORE;
MACRO_PRODUCT PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER;
MACRO_PRODUCT PRODUCT_STORAGE_WORKGROUP_SERVER;
MACRO_PRODUCT PRODUCT_STORAGE_WORKGROUP_SERVER_CORE;
MACRO_PRODUCT PRODUCT_THINPC;
MACRO_PRODUCT PRODUCT_ULTIMATE;
MACRO_PRODUCT PRODUCT_ULTIMATE_E;
MACRO_PRODUCT PRODUCT_ULTIMATE_N;
MACRO_PRODUCT PRODUCT_UNDEFINED;
MACRO_PRODUCT PRODUCT_UNLICENSED;
MACRO_PRODUCT PRODUCT_WEB_SERVER;
MACRO_PRODUCT PRODUCT_WEB_SERVER_CORE;
MACRO_PROFILE PROFILE_ALL_ACCESS;
MACRO_PROFILE PROFILE_CONTROL;
MACRO_QUALITY PROOF_QUALITY;
MACRO_SECURITY_INFORMATION PROTECTED_DACL_SECURITY_INFORMATION;
MACRO_SECURITY_INFORMATION PROTECTED_SACL_SECURITY_INFORMATION;
MACRO_PR PR_JOBSTATUS;
MACRO_PSP PSP_DEFAULT_QUANTUMS;
MACRO_PSP PSP_FIXED_QUANTUMS;
MACRO_PSP PSP_LONG_QUANTUMS;
MACRO_PSP PSP_SHORT_QUANTUMS;
MACRO_PSP PSP_VARIABLE_QUANTUMS;
MACRO_PS PS_ALTERNATE;
MACRO_PS PS_COSMETIC;
MACRO_PS PS_DASH;
MACRO_PS PS_DASHDOT;
MACRO_PS PS_DASHDOTDOT;
MACRO_PS PS_DOT;
MACRO_PS PS_ENDCAP_FLAT;
MACRO_PS PS_ENDCAP_MASK;
MACRO_PS PS_ENDCAP_ROUND;
MACRO_PS PS_ENDCAP_SQUARE;
MACRO_PS PS_GEOMETRIC;
MACRO_PS PS_INSIDEFRAME;
MACRO_PS PS_JOIN_BEVEL;
MACRO_PS PS_JOIN_MASK;
MACRO_PS PS_JOIN_MITER;
MACRO_PS PS_JOIN_ROUND;
MACRO_PS PS_NULL;
MACRO_PS PS_SOLID;
MACRO_PS PS_STYLE_MASK;
MACRO_PS PS_TYPE_MASK;
MACRO_PS PS_USERSTYLE;
MACRO_PT PT_BEZIERTO;
MACRO_PT PT_CLOSEFIGURE;
MACRO_PT PT_LINETO;
MACRO_PT PT_MOVETO;
_KWAIT_REASON PageIn;
_POOL_TYPE PagedPool;
_POOL_TYPE PagedPoolCacheAligned;
_POOL_TYPE PagedPoolCacheAlignedSession;
_POOL_TYPE PagedPoolSession;
BOOL __stdcall PaintRgn(HDC, HRGN);
BOOL __stdcall PatBlt(HDC, int, int, int, int, DWORD);
HRGN __stdcall PathToRegion(HDC);
PPREFIX_TABLE_ENTRY __stdcall PfxFindPrefix(PPREFIX_TABLE PrefixTable, PSTRING FullName);
void __stdcall PfxInitialize(PPREFIX_TABLE PrefixTable);
BOOLEAN __stdcall PfxInsertPrefix(PPREFIX_TABLE PrefixTable, PSTRING Prefix, PPREFIX_TABLE_ENTRY PrefixTableEntry);
void __stdcall PfxRemovePrefix(PPREFIX_TABLE PrefixTable, PPREFIX_TABLE_ENTRY PrefixTableEntry);
BOOL __stdcall Pie(HDC, int, int, int, int, int, int, int, int);
BOOL __stdcall PlayEnhMetaFile(HDC, HENHMETAFILE, LPCRECT);
BOOL __stdcall PlayEnhMetaFileRecord(HDC hdc, LPHANDLETABLE pht, const ENHMETARECORD *pmr, UINT cht);
BOOL __stdcall PlayMetaFile(HDC, HMETAFILE);
BOOL __stdcall PlayMetaFileRecord(HDC hdc, LPHANDLETABLE lpHandleTable, LPMETARECORD lpMR, UINT noObjs);
BOOL __stdcall PlgBlt(HDC hdcDest, const POINT *lpPoint, HDC hdcSrc, int xSrc, int ySrc, int width, int height, HBITMAP hbmMask, int xMask, int yMask);
_PLUGPLAY_CONTROL_CLASS PlugPlayControlDeregisterDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlDeviceClassAssociation;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlDeviceStatus;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlEnumerateDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlGenerateLegacyDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlGetBlockedDriverList;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlGetDeviceDepth;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlGetInterfaceDeviceAlias;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlGetInterfaceDeviceList;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlGetRelatedDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlHaltDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlInitializeDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlProperty;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlQueryAndRemoveDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlQueryConflictList;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlQueryDeviceRelations;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlRegisterNewDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlResetDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlRetrieveDock;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlStartDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlTargetDeviceRelation;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlUnlockDevice;
_PLUGPLAY_CONTROL_CLASS PlugPlayControlUserResponse;
_PLUGPLAY_BUS_CLASS PlugPlayVirtualBus;
BOOL __stdcall PolyBezier(HDC hdc, const POINT *apt, DWORD cpt);
BOOL __stdcall PolyBezierTo(HDC hdc, const POINT *apt, DWORD cpt);
BOOL __stdcall PolyDraw(HDC hdc, const POINT *apt, const BYTE *aj, int cpt);
BOOL __stdcall PolyPolygon(HDC hdc, const POINT *apt, const INT *asz, int csz);
BOOL __stdcall PolyPolyline(HDC hdc, const POINT *apt, const DWORD *asz, DWORD csz);
BOOL __stdcall PolyTextOutA(HDC hdc, const POLYTEXTA *ppt, int nstrings);
BOOL __stdcall PolyTextOutW(HDC hdc, const POLYTEXTW *ppt, int nstrings);
BOOL __stdcall Polygon(HDC hdc, const POINT *apt, int cpt);
BOOL __stdcall Polyline(HDC hdc, const POINT *apt, int cpt);
BOOL __stdcall PolylineTo(HDC hdc, const POINT *apt, DWORD cpt);
_KWAIT_REASON PoolAllocation;
PSINGLE_LIST_ENTRY __stdcall PopEntryList(PSINGLE_LIST_ENTRY ListHead);
_PORT_INFORMATION_CLASS PortNoInformation;
_BUS_DATA_TYPE Pos;
$0FC989869F227A36D749990E523E5F04 PowerActionHibernate;
$0FC989869F227A36D749990E523E5F04 PowerActionNone;
$0FC989869F227A36D749990E523E5F04 PowerActionReserved;
$0FC989869F227A36D749990E523E5F04 PowerActionShutdown;
$0FC989869F227A36D749990E523E5F04 PowerActionShutdownOff;
$0FC989869F227A36D749990E523E5F04 PowerActionShutdownReset;
$0FC989869F227A36D749990E523E5F04 PowerActionSleep;
$0FC989869F227A36D749990E523E5F04 PowerActionWarmEject;
_DEVICE_POWER_STATE PowerDeviceD0;
_DEVICE_POWER_STATE PowerDeviceD1;
_DEVICE_POWER_STATE PowerDeviceD2;
_DEVICE_POWER_STATE PowerDeviceD3;
_DEVICE_POWER_STATE PowerDeviceMaximum;
_DEVICE_POWER_STATE PowerDeviceUnspecified;
_PLUGPLAY_EVENT_CATEGORY PowerEvent;
_POWER_INFORMATION_LEVEL PowerInformationLevelMaximum;
_POWER_INFORMATION_LEVEL PowerInformationLevelUnused0;
_POWER_INFORMATION_LEVEL PowerInformationLevelUnused1;
_POWER_INFORMATION_LEVEL PowerRequestAction;
_POWER_INFORMATION_LEVEL PowerRequestCreate;
_POWER_INFORMATION_LEVEL PowerShutdownNotification;
_SYSTEM_POWER_STATE PowerSystemHibernate;
_SYSTEM_POWER_STATE PowerSystemMaximum;
_SYSTEM_POWER_STATE PowerSystemShutdown;
_SYSTEM_POWER_STATE PowerSystemSleeping1;
_SYSTEM_POWER_STATE PowerSystemSleeping2;
_SYSTEM_POWER_STATE PowerSystemSleeping3;
_SYSTEM_POWER_STATE PowerSystemUnspecified;
_SYSTEM_POWER_STATE PowerSystemWorking;
void __stdcall ProbeForRead(const void *Address, SIZE_T Length, ULONG Alignment);
void __stdcall ProbeForWrite(PVOID Address, SIZE_T Length, ULONG Alignment);
_PROCESSINFOCLASS ProcessAccessToken;
_PROCESSINFOCLASS ProcessAffinityMask;
_PROCESSINFOCLASS ProcessAffinityUpdateMode;
_PROCESSINFOCLASS ProcessBasePriority;
_PROCESSINFOCLASS ProcessBasicInformation;
_PROCESSINFOCLASS ProcessBreakOnTermination;
_PROCESSINFOCLASS ProcessCookie;
_PROCESSINFOCLASS ProcessCycleTime;
_PROCESSINFOCLASS ProcessDebugFlags;
_PROCESSINFOCLASS ProcessDebugObjectHandle;
_PROCESSINFOCLASS ProcessDebugPort;
_PROCESSINFOCLASS ProcessDefaultHardErrorMode;
_PROCESSINFOCLASS ProcessDeviceMap;
_PROCESSINFOCLASS ProcessEnableAlignmentFaultFixup;
_PROCESSINFOCLASS ProcessExceptionPort;
_PROCESSINFOCLASS ProcessExecuteFlags;
_PROCESSINFOCLASS ProcessForegroundInformation;
_PROCESSINFOCLASS ProcessHandleCount;
_PROCESSINFOCLASS ProcessHandleTracing;
_PROCESSINFOCLASS ProcessImageFileMapping;
_PROCESSINFOCLASS ProcessImageFileName;
_PROCESSINFOCLASS ProcessImageFileNameWin32;
_PROCESSINFOCLASS ProcessImageInformation;
_KPROCESS_STATE ProcessInMemory;
_KPROCESS_STATE ProcessInSwap;
_KPROCESS_STATE ProcessInTransition;
_PROCESSINFOCLASS ProcessInstrumentationCallback;
_PROCESSINFOCLASS ProcessIoCounters;
_PROCESSINFOCLASS ProcessIoPortHandlers;
_PROCESSINFOCLASS ProcessIoPriority;
_PROCESSINFOCLASS ProcessLUIDDeviceMapsEnabled;
_PROCESSINFOCLASS ProcessLdtInformation;
_PROCESSINFOCLASS ProcessLdtSize;
_PROCESSINFOCLASS ProcessMemoryAllocationMode;
_KOBJECTS ProcessObject;
_KPROCESS_STATE ProcessOutOfMemory;
_KPROCESS_STATE ProcessOutSwap;
_PROCESSINFOCLASS ProcessPagePriority;
_PROCESSINFOCLASS ProcessPooledUsageAndLimits;
_PROCESSINFOCLASS ProcessPriorityBoost;
_PROCESSINFOCLASS ProcessPriorityClass;
_PROCESSINFOCLASS ProcessQuotaLimits;
_PROCESSINFOCLASS ProcessRaisePriority;
_PROCESSINFOCLASS ProcessSessionInformation;
_PROCESSINFOCLASS ProcessThreadStackAllocation;
_PROCESSINFOCLASS ProcessTimes;
_PROCESSINFOCLASS ProcessTlsInformation;
_PROCESSINFOCLASS ProcessUserModeIOPL;
_PROCESSINFOCLASS ProcessVmCounters;
_PROCESSINFOCLASS ProcessWorkingSetWatch;
_PROCESSINFOCLASS ProcessWorkingSetWatchEx;
_PROCESSINFOCLASS ProcessWow64Information;
_PROCESSINFOCLASS ProcessWx86Information;
_POWER_INFORMATION_LEVEL ProcessorCap;
_POWER_INFORMATION_LEVEL ProcessorIdleDomains;
_POWER_INFORMATION_LEVEL ProcessorIdleStates;
_POWER_INFORMATION_LEVEL ProcessorInformation;
_POWER_INFORMATION_LEVEL ProcessorInformationEx;
_INTERFACE_TYPE ProcessorInternal;
_POWER_INFORMATION_LEVEL ProcessorLoad;
_POWER_INFORMATION_LEVEL ProcessorPerfStates;
_POWER_INFORMATION_LEVEL ProcessorPowerPolicyAc;
_POWER_INFORMATION_LEVEL ProcessorPowerPolicyCurrent;
_POWER_INFORMATION_LEVEL ProcessorPowerPolicyDc;
_POWER_INFORMATION_LEVEL ProcessorStateHandler;
_POWER_INFORMATION_LEVEL ProcessorStateHandler2;
_KPROFILE_SOURCE Profile2Issue;
_KPROFILE_SOURCE Profile3Issue;
_KPROFILE_SOURCE Profile4Issue;
_KPROFILE_SOURCE ProfileAlignmentFixup;
_KPROFILE_SOURCE ProfileBranchInstructions;
_KPROFILE_SOURCE ProfileBranchMispredictions;
_KPROFILE_SOURCE ProfileCacheMisses;
_KPROFILE_SOURCE ProfileDcacheAccesses;
_KPROFILE_SOURCE ProfileDcacheMisses;
_KPROFILE_SOURCE ProfileFpInstructions;
_KPROFILE_SOURCE ProfileIcacheIssues;
_KPROFILE_SOURCE ProfileIcacheMisses;
_KPROFILE_SOURCE ProfileIntegerInstructions;
_KPROFILE_SOURCE ProfileLoadInstructions;
_KPROFILE_SOURCE ProfileLoadLinkedIssues;
_KPROFILE_SOURCE ProfileMaximum;
_KPROFILE_SOURCE ProfileMemoryBarrierCycles;
_KOBJECTS ProfileObject;
_KPROFILE_SOURCE ProfilePipelineDry;
_KPROFILE_SOURCE ProfilePipelineFrozen;
_KPROFILE_SOURCE ProfileSpecialInstructions;
_KPROFILE_SOURCE ProfileStoreInstructions;
_KPROFILE_SOURCE ProfileTime;
_KPROFILE_SOURCE ProfileTotalCycles;
_KPROFILE_SOURCE ProfileTotalIssues;
_KPROFILE_SOURCE ProfileTotalNonissues;
ULONG __stdcall PropertyLengthAsVariant(PSERIALIZEDPROPERTYVALUE pProp, ULONG cbProp, USHORT CodePage, BYTE bReserved);
BOOL __stdcall PtInRegion(HRGN, int, int);
BOOL __stdcall PtVisible(HDC, int, int);
void __stdcall PushEntryList(PSINGLE_LIST_ENTRY ListHead, PSINGLE_LIST_ENTRY Entry);
MACRO_QAW QAW_GETEASYWIDTHS;
MACRO_QAW QAW_GETWIDTHS;
MACRO_QC QC_1BIT;
MACRO_QC QC_4BIT;
MACRO_QC QC_FONTDRIVERCAPS;
MACRO_QC QC_OUTLINES;
_ENG_DEVICE_ATTRIBUTE QDA_ACCELERATION_LEVEL;
_ENG_DEVICE_ATTRIBUTE QDA_RESERVED;
MACRO_QDC QDC_ALL_PATHS;
MACRO_QDI QDI_DIBTOSCREEN;
MACRO_QDI QDI_GETDIBITS;
MACRO_QDI QDI_SETDIBITS;
MACRO_QDI QDI_STRETCHDIB;
MACRO_QDS QDS_CHECKJPEGFORMAT;
MACRO_QDS QDS_CHECKPNGFORMAT;
MACRO_QFD QFD_GLYPHANDBITMAP;
MACRO_QFD QFD_GLYPHANDOUTLINE;
MACRO_QFD QFD_MAXEXTENTS;
MACRO_QFD QFD_TT_GLYPHANDBITMAP;
MACRO_QFD QFD_TT_GRAY1_BITMAP;
MACRO_QFD QFD_TT_GRAY2_BITMAP;
MACRO_QFD QFD_TT_GRAY4_BITMAP;
MACRO_QFD QFD_TT_GRAY8_BITMAP;
MACRO_QFD QFD_TT_MONO_BITMAP;
MACRO_QFF QFF_DESCRIPTION;
MACRO_QFF QFF_NUMFACES;
MACRO_QFT QFT_GLYPHSET;
MACRO_QFT QFT_KERNPAIRS;
MACRO_QFT QFT_LIGATURES;
MACRO_QFT QFT_UNICODE;
MACRO_QSA QSA_3DNOW;
MACRO_QSA QSA_MMX;
MACRO_QSA QSA_SSE;
MACRO_QSA QSA_SSE1;
MACRO_QSA QSA_SSE2;
MACRO_QSA QSA_SSE3;
MACRO_QUERYDIBSUPPORT QUERYDIBSUPPORT;
MACRO_DRAFTMODE QUERYESCSUPPORT;
_KOBJECTS QueueObject;
MACRO_R2 R2_BLACK;
MACRO_R2 R2_COPYPEN;
MACRO_R2 R2_MASKNOTPEN;
MACRO_R2 R2_MASKPEN;
MACRO_R2 R2_MASKPENNOT;
MACRO_R2 R2_MERGENOTPEN;
MACRO_R2 R2_MERGEPEN;
MACRO_R2 R2_MERGEPENNOT;
MACRO_R2 R2_NOP;
MACRO_R2 R2_NOT;
MACRO_R2 R2_NOTCOPYPEN;
MACRO_R2 R2_NOTMASKPEN;
MACRO_R2 R2_NOTMERGEPEN;
MACRO_R2 R2_NOTXORPEN;
MACRO_R2 R2_WHITE;
MACRO_R2 R2_XORPEN;
MACRO_RASTERCAPS RASTERCAPS;
MACRO_FONTTYPE RASTER_FONTTYPE;
MACRO_RB RB_DITHERCOLOR;
MACRO_RC RC_BANDING;
MACRO_RC_BIGFONT RC_BIGFONT;
MACRO_RC RC_BITBLT;
MACRO_RC RC_BITMAP64;
MACRO_RC RC_DEVBITS;
MACRO_RC RC_DIBTODEV;
MACRO_RC RC_DI_BITMAP;
MACRO_RC RC_FLOODFILL;
MACRO_RC RC_GDI20_OUTPUT;
MACRO_RC_BIGFONT RC_GDI20_STATE;
MACRO_RC_BIGFONT RC_NONE;
MACRO_RC RC_OP_DX_OUTPUT;
MACRO_RC RC_PALETTE;
MACRO_RC_BIGFONT RC_SAVEBITMAP;
MACRO_RC RC_SCALING;
MACRO_RC RC_STRETCHBLT;
MACRO_RC RC_STRETCHDIB;
MACRO_RDH RDH_RECTANGLES;
MACRO_READ READ_CONTROL;
MACRO_REFERENCE REFERENCE_BLACK_MAX;
MACRO_REFERENCE REFERENCE_BLACK_MIN;
MACRO_REFERENCE REFERENCE_WHITE_MAX;
MACRO_REFERENCE REFERENCE_WHITE_MIN;
MACRO_REG_WHOLE REG_FORCE_RESTORE;
MACRO_REG REG_LATEST_FORMAT;
MACRO_REG_WHOLE REG_LEGAL_OPTION;
MACRO_REG REG_NO_COMPRESSION;
MACRO_REG_WHOLE REG_NO_LAZY_FLUSH;
MACRO_REG_WHOLE REG_OPTION_BACKUP_RESTORE;
MACRO_REG_WHOLE REG_OPTION_CREATE_LINK;
MACRO_REG_WHOLE REG_OPTION_NON_VOLATILE;
MACRO_REG_WHOLE REG_OPTION_OPEN_LINK;
MACRO_REG_WHOLE REG_OPTION_RESERVED;
MACRO_REG_WHOLE REG_OPTION_VOLATILE;
MACRO_REG_WHOLE REG_REFRESH_HIVE;
MACRO_REG REG_STANDARD_FORMAT;
MACRO_REG_WHOLE REG_WHOLE_HIVE_VOLATILE;
MACRO_ABSOLUTE RELATIVE;
MACRO_RESOURCE RESOURCE_DATA_LEVEL;
MACRO_RESOURCE RESOURCE_LANGUAGE_LEVEL;
MACRO_RESOURCE RESOURCE_NAME_LEVEL;
MACRO_RESOURCE RESOURCE_TYPE_LEVEL;
MACRO_CTM RESTORE_CTM;
MACRO_RGB RGB_GAMMA_MAX;
MACRO_RGB RGB_GAMMA_MIN;
MACRO_RGN RGN_AND;
MACRO_RGN RGN_COPY;
MACRO_RGN RGN_DIFF;
MACRO_RGN RGN_OR;
MACRO_RGN RGN_XOR;
MACRO_ROP ROP_HAS_PATTERN;
MACRO_ROP ROP_HAS_SOURCE;
MACRO_ROP ROP_HAS_SOURCEPATTERN;
MACRO_RPC_S RPC_S_ADDRESS_ERROR;
MACRO_RPC RPC_S_ALREADY_LISTENING;
MACRO_RPC RPC_S_ALREADY_REGISTERED;
MACRO_RPC RPC_S_BINDING_HAS_NO_AUTH;
MACRO_RPC_S_NO_INTERFACES RPC_S_BINDING_INCOMPLETE;
MACRO_RPC_S_NO_INTERFACES RPC_S_CALL_CANCELLED;
MACRO_RPC RPC_S_CALL_FAILED;
MACRO_RPC RPC_S_CALL_FAILED_DNE;
MACRO_RPC_S_CALL RPC_S_CALL_IN_PROGRESS;
MACRO_RPC_S RPC_S_CANNOT_SUPPORT;
MACRO_RPC RPC_S_CANT_CREATE_ENDPOINT;
MACRO_RPC_S_NO_INTERFACES RPC_S_COMM_FAILURE;
MACRO_RPC RPC_S_DUPLICATE_ENDPOINT;
MACRO_RPC_S RPC_S_ENTRY_ALREADY_EXISTS;
MACRO_RPC_S RPC_S_ENTRY_NOT_FOUND;
MACRO_RPC_S_ENTRY RPC_S_ENTRY_TYPE_MISMATCH;
MACRO_RPC_S RPC_S_FP_DIV_ZERO;
MACRO_RPC_S RPC_S_FP_OVERFLOW;
MACRO_RPC_S RPC_S_FP_UNDERFLOW;
MACRO_RPC_S_NO_INTERFACES RPC_S_GROUP_MEMBER_NOT_FOUND;
MACRO_RPC_S_ENTRY RPC_S_GRP_ELT_NOT_ADDED;
MACRO_RPC_S_ENTRY RPC_S_GRP_ELT_NOT_REMOVED;
MACRO_RPC_S RPC_S_INCOMPLETE_NAME;
MACRO_RPC_S_ENTRY RPC_S_INTERFACE_NOT_EXPORTED;
MACRO_RPC_S RPC_S_INTERFACE_NOT_FOUND;
MACRO_RPC_S RPC_S_INTERNAL_ERROR;
MACRO_RPC_S_SEND RPC_S_INVALID_ASYNC_CALL;
MACRO_RPC_S_SEND RPC_S_INVALID_ASYNC_HANDLE;
MACRO_RPC RPC_S_INVALID_AUTH_IDENTITY;
MACRO_RPC RPC_S_INVALID_BINDING;
MACRO_RPC RPC_S_INVALID_BOUND;
MACRO_RPC RPC_S_INVALID_ENDPOINT_FORMAT;
MACRO_RPC_S RPC_S_INVALID_NAF_ID;
MACRO_RPC RPC_S_INVALID_NAME_SYNTAX;
MACRO_RPC RPC_S_INVALID_NETWORK_OPTIONS;
MACRO_RPC RPC_S_INVALID_NET_ADDR;
MACRO_RPC_S_INVALID RPC_S_INVALID_OBJECT;
MACRO_RPC RPC_S_INVALID_RPC_PROTSEQ;
MACRO_RPC RPC_S_INVALID_STRING_BINDING;
MACRO_RPC RPC_S_INVALID_STRING_UUID;
MACRO_RPC RPC_S_INVALID_TAG;
MACRO_RPC RPC_S_INVALID_TIMEOUT;
MACRO_RPC_S RPC_S_INVALID_VERS_OPTION;
MACRO_RPC RPC_S_MAX_CALLS_TOO_SMALL;
MACRO_RPC_S RPC_S_NAME_SERVICE_UNAVAILABLE;
MACRO_RPC_S RPC_S_NOTHING_TO_EXPORT;
MACRO_RPC_S_ENTRY RPC_S_NOT_ALL_OBJS_EXPORTED;
MACRO_RPC_S RPC_S_NOT_ALL_OBJS_UNEXPORTED;
MACRO_RPC_S_NO_INTERFACES RPC_S_NOT_CANCELLED;
MACRO_RPC RPC_S_NOT_LISTENING;
MACRO_RPC_S_NO_INTERFACES RPC_S_NOT_RPC_ERROR;
MACRO_RPC RPC_S_NO_BINDINGS;
MACRO_RPC RPC_S_NO_CALL_ACTIVE;
MACRO_RPC_S RPC_S_NO_CONTEXT_AVAILABLE;
MACRO_RPC RPC_S_NO_ENDPOINT_FOUND;
MACRO_RPC RPC_S_NO_ENTRY_NAME;
MACRO_RPC_S_NO_INTERFACES RPC_S_NO_INTERFACES;
MACRO_RPC_S_NO RPC_S_NO_MORE_BINDINGS;
MACRO_RPC_S RPC_S_NO_MORE_MEMBERS;
MACRO_RPC_S_NO_INTERFACES RPC_S_NO_PRINC_NAME;
MACRO_RPC RPC_S_NO_PROTSEQS;
MACRO_RPC RPC_S_NO_PROTSEQS_REGISTERED;
MACRO_RPC RPC_S_OBJECT_NOT_FOUND;
MACRO_RPC RPC_S_OUT_OF_RESOURCES;
MACRO_RPC_S_ENTRY RPC_S_PRF_ELT_NOT_ADDED;
MACRO_RPC_S_ENTRY RPC_S_PRF_ELT_NOT_REMOVED;
MACRO_RPC RPC_S_PROCNUM_OUT_OF_RANGE;
MACRO_RPC_S_ENTRY RPC_S_PROFILE_NOT_ADDED;
MACRO_RPC RPC_S_PROTOCOL_ERROR;
MACRO_RPC RPC_S_PROTSEQ_NOT_FOUND;
MACRO_RPC RPC_S_PROTSEQ_NOT_SUPPORTED;
MACRO_RPC_S_NO_INTERFACES RPC_S_SEC_PKG_ERROR;
MACRO_RPC_S_SEND RPC_S_SEND_INCOMPLETE;
MACRO_RPC RPC_S_SERVER_TOO_BUSY;
MACRO_RPC RPC_S_SERVER_UNAVAILABLE;
MACRO_RPC RPC_S_STRING_TOO_LONG;
MACRO_RPC RPC_S_TYPE_ALREADY_REGISTERED;
MACRO_RPC RPC_S_UNKNOWN_AUTHN_LEVEL;
MACRO_RPC RPC_S_UNKNOWN_AUTHN_SERVICE;
MACRO_RPC RPC_S_UNKNOWN_AUTHN_TYPE;
MACRO_RPC RPC_S_UNKNOWN_AUTHZ_SERVICE;
MACRO_RPC RPC_S_UNKNOWN_IF;
MACRO_RPC RPC_S_UNKNOWN_MGR_TYPE;
MACRO_RPC_S_NO_INTERFACES RPC_S_UNSUPPORTED_AUTHN_LEVEL;
MACRO_RPC RPC_S_UNSUPPORTED_NAME_SYNTAX;
MACRO_RPC RPC_S_UNSUPPORTED_TRANS_SYN;
MACRO_RPC RPC_S_UNSUPPORTED_TYPE;
MACRO_RPC_S_NO_INTERFACES RPC_S_UUID_LOCAL_ONLY;
MACRO_RPC RPC_S_UUID_NO_ADDRESS;
MACRO_RPC RPC_S_WRONG_KIND_OF_BINDING;
MACRO_RPC_S RPC_S_ZERO_DIVIDE;
MACRO_RPC_S RPC_X_BAD_STUB_DATA;
MACRO_RPC_S RPC_X_BYTE_COUNT_TOO_SMALL;
MACRO_RPC_S RPC_X_ENUM_VALUE_OUT_OF_RANGE;
MACRO_RPC_S_NO_INTERFACES RPC_X_INVALID_ES_ACTION;
MACRO_RPC_S_NO_INTERFACES RPC_X_INVALID_PIPE_OBJECT;
MACRO_RPC_S RPC_X_NO_MORE_ENTRIES;
MACRO_RPC_S RPC_X_NULL_REF_POINTER;
MACRO_RPC_S_SEND RPC_X_PIPE_CLOSED;
MACRO_RPC_S_SEND RPC_X_PIPE_DISCIPLINE_ERROR;
MACRO_RPC_S_SEND RPC_X_PIPE_EMPTY;
MACRO_RPC_S RPC_X_SS_CANNOT_GET_CALL_HANDLE;
MACRO_RPC_S RPC_X_SS_CHAR_TRANS_OPEN_FAIL;
MACRO_RPC_S RPC_X_SS_CHAR_TRANS_SHORT_FILE;
MACRO_RPC_S RPC_X_SS_CONTEXT_DAMAGED;
MACRO_RPC_S RPC_X_SS_HANDLES_MISMATCH;
MACRO_RPC_S RPC_X_SS_IN_NULL_CONTEXT;
MACRO_RPC_S_NO_INTERFACES RPC_X_WRONG_ES_VERSION;
MACRO_RPC_S_NO_INTERFACES RPC_X_WRONG_PIPE_ORDER;
MACRO_RPC_S_NO_INTERFACES RPC_X_WRONG_PIPE_VERSION;
MACRO_RPC_S_NO_INTERFACES RPC_X_WRONG_STUB_VERSION;
MACRO_RTL_ACQUIRE RTL_ACQUIRE_PRIVILEGE_IMPERSONATE;
MACRO_RTL_ACQUIRE RTL_ACQUIRE_PRIVILEGE_PROCESS;
MACRO_RTL_SEM RTL_ACTIVATE_ACTIVATION_CONTEXT_EX_FLAG_RELEASE_ON_STACK_DEALLOCATION;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_ACTIVATED;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_DEACTIVATED;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_HEAP_ALLOCATED;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_NOT_REALLY_ACTIVATED;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_NO_DEACTIVATE;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_ON_FREE_LIST;
MACRO_RTL_SEM RTL_ACTIVATION_CONTEXT_STACK_FRAME_FLAG_RELEASE_ON_DEACTIVATION;
MACRO_RTL_DEBUG RTL_ATOM_IS_PINNED;
MACRO_RTL_SEM RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_FORMAT_WHISTLER;
MACRO_RTL_RUN RTL_CONDITION_VARIABLE_LOCKMODE_SHARED;
MACRO_RTL_STACK RTL_CONVERTED_NT_PATH;
MACRO_RTL_STACK RTL_CONVERTED_UNC_PATH;
MACRO_RTL_CRITICAL RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO;
MACRO_RTL RTL_CRITSECT_TYPE;
MACRO_RTL_SEM RTL_DEACTIVATE_ACTIVATION_CONTEXT_FLAG_FORCE_EARLY_DEACTIVATION;
MACRO_RTL_DEBUG RTL_DEBUG_QUERY_BACKTRACES;
MACRO_RTL_DEBUG RTL_DEBUG_QUERY_HEAPS;
MACRO_RTL_DEBUG RTL_DEBUG_QUERY_HEAP_BLOCKS;
MACRO_RTL_DEBUG RTL_DEBUG_QUERY_HEAP_TAGS;
MACRO_RTL_DEBUG RTL_DEBUG_QUERY_LOCKS;
MACRO_RTL_DEBUG RTL_DEBUG_QUERY_MODULES;
MACRO_RTL_DUPLICATE RTL_DOS_APPLY_FILE_REDIRECTION_USTR_FLAG_RESPECT_DOT_LOCAL;
MACRO_RTL_MAXIMUM RTL_DRIVE_LETTER_VALID;
MACRO_RTL_DUPLICATE RTL_DUPLICATE_UNICODE_STRING_ALLOCATE_NULL_STRING;
MACRO_RTL_DUPLICATE RTL_DUPLICATE_UNICODE_STRING_NULL_TERMINATE;
MACRO_RTL_DUPLICATE RTL_FIND_CHAR_IN_UNICODE_STRING_CASE_INSENSITIVE;
MACRO_RTL_DUPLICATE RTL_FIND_CHAR_IN_UNICODE_STRING_COMPLEMENT_CHAR_SET;
MACRO_RTL_DUPLICATE RTL_FIND_CHAR_IN_UNICODE_STRING_START_AT_END;
MACRO_RTL_FLS RTL_FLS_MAXIMUM_AVAILABLE;
MACRO_RTL_DEBUG RTL_HANDLE_VALID;
MACRO_RTL_HOTPATCH RTL_HOTPATCH_PATCH_KERNEL_MODE;
MACRO_RTL_HOTPATCH RTL_HOTPATCH_PATCH_USER_MODE;
MACRO_RTL_HOTPATCH RTL_HOTPATCH_REMAP_SYSTEM_DLL;
MACRO_RTL_HOTPATCH RTL_HOTPATCH_SUPPORTED_FLAG;
MACRO_RTL_HOTPATCH RTL_HOTPATCH_SWAP_OBJECT_NAMES;
MACRO_RTL_HOTPATCH RTL_HOTPATCH_SYNC_RENAME_FILES;
MACRO_RTL_DUPLICATE RTL_IMAGE_NT_HEADER_EX_FLAG_NO_RANGE_CHECK;
MACRO_RTL_MAXIMUM RTL_MAXIMUM_ATOM_LENGTH;
MACRO_RTL_MAXIMUM RTL_MAX_DRIVE_LETTERS;
MACRO_RTL_SEM RTL_QUERY_ACTIVATION_CONTEXT_FLAG_IS_ADDRESS;
MACRO_RTL_SEM RTL_QUERY_ACTIVATION_CONTEXT_FLAG_IS_HMODULE;
MACRO_RTL_SEM RTL_QUERY_ACTIVATION_CONTEXT_FLAG_NO_ADDREF;
MACRO_RTL_SEM RTL_QUERY_ACTIVATION_CONTEXT_FLAG_USE_ACTIVE_ACTIVATION_CONTEXT;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_DELETE;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_DIRECT;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_NOEXPAND;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_NOVALUE;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_REQUIRED;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_SUBKEY;
MACRO_RTL_REGISTRY RTL_QUERY_REGISTRY_TOPKEY;
MACRO_RTL_SEM RTL_RANGE_CONFLICT;
MACRO_RTL_SEM RTL_RANGE_LIST_ADD_IF_CONFLICT;
MACRO_RTL_SEM RTL_RANGE_LIST_ADD_SHARED;
MACRO_RTL_SEM RTL_RANGE_SHARED;
MACRO_RTL_REGISTRY RTL_REGISTRY_ABSOLUTE;
MACRO_RTL_REGISTRY RTL_REGISTRY_CONTROL;
MACRO_RTL_REGISTRY RTL_REGISTRY_DEVICEMAP;
MACRO_RTL_REGISTRY RTL_REGISTRY_HANDLE;
MACRO_RTL_REGISTRY RTL_REGISTRY_MAXIMUM;
MACRO_RTL_REGISTRY RTL_REGISTRY_OPTIONAL;
MACRO_RTL_REGISTRY RTL_REGISTRY_SERVICES;
MACRO_RTL_REGISTRY RTL_REGISTRY_USER;
MACRO_RTL_REGISTRY RTL_REGISTRY_WINDOWS_NT;
MACRO_RTL_FLS RTL_RESOURCE_FLAG_LONG_TERM;
MACRO_RTL RTL_RESOURCE_TYPE;
MACRO_RTL_RUN RTL_RUN_ONCE_ASYNC;
MACRO_RTL_RUN RTL_RUN_ONCE_CHECK_ONLY;
MACRO_RTL_RUN RTL_RUN_ONCE_INIT_FAILED;
MACRO_RTL_SEM RTL_SEM_FAILCRITICALERRORS;
MACRO_RTL_SEM RTL_SEM_NOALIGNMENTFAULTEXCEPT;
MACRO_RTL_SEM RTL_SEM_NOGPFAULTERRORBOX;
MACRO_RTL_STACK RTL_SKIP_BUFFER_COPY;
MACRO_RTL_STACK RTL_STACK_WALKING_MODE_FRAMES_TO_SKIP_SHIFT;
MACRO_RTL_STACK RTL_UNCHANGED_DOS_PATH;
MACRO_RTL_STACK RTL_UNCHANGED_UNK_PATH;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_CASE_SENSITIVE;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_DISABLE_HEAP_CHECKS;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_IMAGE_KEY_MISSING;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_LOCAL_DLL_PATH;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_NORMALIZED;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_NX;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_PRIVATE_DLL_PATH;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_1;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_2;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_PROFILE_KERNEL;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_PROFILE_SERVER;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_PROFILE_USER;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_RESERVE_16MB;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_RESERVE_1MB;
MACRO_RTL_MAXIMUM RTL_USER_PROCESS_PARAMETERS_UNKNOWN;
MACRO_CHARSET RUSSIAN_CHARSET;
_KTHREAD_STATE Ready;
UINT __stdcall RealizePalette(HDC);
_CM_SERVICE_NODE_TYPE RecognizerType;
BOOL __stdcall RectInRegion(HRGN, LPCRECT);
BOOL __stdcall RectVisible(HDC, LPCRECT);
BOOL __stdcall Rectangle(HDC, int, int, int, int);
_LOGICAL_PROCESSOR_RELATIONSHIP RelationAll;
_LOGICAL_PROCESSOR_RELATIONSHIP RelationCache;
_LOGICAL_PROCESSOR_RELATIONSHIP RelationGroup;
_LOGICAL_PROCESSOR_RELATIONSHIP RelationNumaNode;
_LOGICAL_PROCESSOR_RELATIONSHIP RelationProcessorCore;
_LOGICAL_PROCESSOR_RELATIONSHIP RelationProcessorPackage;
_MEDIA_TYPE RemovableMedia;
BOOLEAN __stdcall RemoveEntryList(PLIST_ENTRY Entry);
BOOL __stdcall RemoveFontMemResourceEx(HANDLE);
BOOL __stdcall RemoveFontResourceA(LPCSTR);
BOOL __stdcall RemoveFontResourceExA(LPCSTR, DWORD, PVOID);
BOOL __stdcall RemoveFontResourceExW(LPCWSTR, DWORD, PVOID);
BOOL __stdcall RemoveFontResourceW(LPCWSTR);
PLIST_ENTRY __stdcall RemoveHeadList(PLIST_ENTRY ListHead);
PLIST_ENTRY __stdcall RemoveTailList(PLIST_ENTRY ListHead);
_APPCOMPAT_USERFLAGS_HIGHPART ReorderWaveForCommunications;
_BIN_TYPES RequestLocation;
_BIN_TYPES RequestSize;
HDC __stdcall ResetDCA(HDC, const DEVMODEA *);
HDC __stdcall ResetDCW(HDC, const DEVMODEW *);
BOOL __stdcall ResizePalette(HPALETTE, UINT);
MACRO_ResourceHasDisabledPriorityBoost ResourceHasDisabledPriorityBoost;
_HARDERROR_RESPONSE ResponseAbort;
_HARDERROR_RESPONSE ResponseCancel;
_HARDERROR_RESPONSE ResponseContinue;
_HARDERROR_RESPONSE ResponseIgnore;
_HARDERROR_RESPONSE ResponseNo;
_HARDERROR_RESPONSE ResponseNotHandled;
_HARDERROR_RESPONSE ResponseOk;
_HARDERROR_RESPONSE ResponseRetry;
_HARDERROR_RESPONSE ResponseReturnToCaller;
_HARDERROR_RESPONSE ResponseTryAgain;
_HARDERROR_RESPONSE ResponseYes;
BOOL __stdcall RestoreDC(HDC, int);
_PLUGPLAY_VIRTUAL_BUS_TYPE Root;
BOOL __stdcall RoundRect(HDC, int, int, int, int, int, int);
NTSTATUS __stdcall RtlAbortRXact(PRXACT_CONTEXT Context);
NTSTATUS __stdcall RtlAbsoluteToSelfRelativeSD(PSECURITY_DESCRIPTOR AbsoluteSecurityDescriptor, PSECURITY_DESCRIPTOR SelfRelativeSecurityDescriptor, PULONG BufferLength);
void __stdcall RtlAcquirePebLock();
NTSTATUS __stdcall RtlAcquirePrivilege(PULONG Privilege, ULONG NumPriv, ULONG Flags, PVOID *ReturnedState);
BOOLEAN __stdcall RtlAcquireResourceExclusive(PRTL_RESOURCE Resource, BOOLEAN Wait);
BOOLEAN __stdcall RtlAcquireResourceShared(PRTL_RESOURCE Resource, BOOLEAN Wait);
NTSTATUS __stdcall RtlActivateActivationContext(ULONG Flags, HANDLE Handle, PULONG_PTR Cookie);
NTSTATUS __stdcall RtlActivateActivationContextEx(ULONG Flags, PTEB Teb, PVOID Context, PULONG_PTR Cookie);
NTSTATUS __stdcall RtlAddAccessAllowedAce(PACL Acl, ULONG Revision, ACCESS_MASK AccessMask, PSID Sid);
NTSTATUS __stdcall RtlAddAccessAllowedAceEx(PACL pAcl, ULONG dwAceRevision, ULONG AceFlags, ACCESS_MASK AccessMask, PSID pSid);
NTSTATUS __stdcall RtlAddAccessAllowedObjectAce(PACL pAcl, ULONG dwAceRevision, ULONG AceFlags, ACCESS_MASK AccessMask, GUID *ObjectTypeGuid, GUID *InheritedObjectTypeGuid, PSID pSid);
NTSTATUS __stdcall RtlAddAccessDeniedAce(PACL Acl, ULONG Revision, ACCESS_MASK AccessMask, PSID Sid);
NTSTATUS __stdcall RtlAddAccessDeniedAceEx(PACL Acl, ULONG Revision, ULONG Flags, ACCESS_MASK AccessMask, PSID Sid);
NTSTATUS __stdcall RtlAddAccessDeniedObjectAce(PACL pAcl, ULONG dwAceRevision, ULONG AceFlags, ACCESS_MASK AccessMask, GUID *ObjectTypeGuid, GUID *InheritedObjectTypeGuid, PSID pSid);
NTSTATUS __stdcall RtlAddAce(PACL Acl, ULONG AceRevision, ULONG StartingAceIndex, PVOID AceList, ULONG AceListLength);
NTSTATUS __stdcall RtlAddActionToRXact(PRXACT_CONTEXT Context, ULONG ActionType, PUNICODE_STRING KeyName, ULONG ValueType, PVOID ValueData, ULONG ValueDataSize);
NTSTATUS __stdcall RtlAddAtomToAtomTable(PRTL_ATOM_TABLE AtomTable, PWSTR AtomName, PRTL_ATOM Atom);
NTSTATUS __stdcall RtlAddAttributeActionToRXact(PRXACT_CONTEXT Context, ULONG ActionType, PUNICODE_STRING KeyName, HANDLE KeyHandle, PUNICODE_STRING ValueName, ULONG ValueType, PVOID ValueData, ULONG ValueDataSize);
NTSTATUS __stdcall RtlAddAuditAccessAce(PACL Acl, ULONG Revision, ACCESS_MASK AccessMask, PSID Sid, BOOLEAN Success, BOOLEAN Failure);
NTSTATUS __stdcall RtlAddAuditAccessAceEx(PACL Acl, ULONG Revision, ULONG Flags, ACCESS_MASK AccessMask, PSID Sid, BOOLEAN Success, BOOLEAN Failure);
NTSTATUS __stdcall RtlAddAuditAccessObjectAce(PACL Acl, ULONG Revision, ULONG Flags, ACCESS_MASK AccessMask, GUID *ObjectTypeGuid, GUID *InheritedObjectTypeGuid, PSID Sid, BOOLEAN Success, BOOLEAN Failure);
NTSTATUS __stdcall RtlAddMandatoryAce(PACL Acl, ULONG Revision, ULONG Flags, ULONG MandatoryFlags, UCHAR AceType, PSID LabelSid);
NTSTATUS __stdcall RtlAddRange(PRTL_RANGE_LIST RangeList, ULONGLONG Start, ULONGLONG End, UCHAR Attributes, ULONG Flags, PVOID UserData, PVOID Owner);
void __stdcall RtlAddRefActivationContext(PVOID Context);
ULONG __stdcall RtlAddRefMemoryStream(struct IStream *This);
PVOID __stdcall RtlAddVectoredContinueHandler(ULONG FirstHandler, PVECTORED_EXCEPTION_HANDLER VectoredHandler);
PVOID __stdcall RtlAddVectoredExceptionHandler(ULONG FirstHandler, PVECTORED_EXCEPTION_HANDLER VectoredHandler);
NTSTATUS __stdcall RtlAdjustPrivilege(ULONG Privilege, BOOLEAN NewValue, BOOLEAN ForThread, PBOOLEAN OldValue);
NTSTATUS __stdcall RtlAllocateActivationContextStack(PACTIVATION_CONTEXT_STACK *Stack);
NTSTATUS __stdcall RtlAllocateAndInitializeSid(PSID_IDENTIFIER_AUTHORITY IdentifierAuthority, UCHAR SubAuthorityCount, ULONG SubAuthority0, ULONG SubAuthority1, ULONG SubAuthority2, ULONG SubAuthority3, ULONG SubAuthority4, ULONG SubAuthority5, ULONG SubAuthority6, ULONG SubAuthority7, PSID *Sid);
PRTL_HANDLE_TABLE_ENTRY __stdcall RtlAllocateHandle(PRTL_HANDLE_TABLE HandleTable, PULONG Index);
PVOID __stdcall RtlAllocateHeap(PVOID HeapHandle, ULONG Flags, SIZE_T Size);
WCHAR __stdcall RtlAnsiCharToUnicodeChar(PUCHAR *SourceCharacter);
DWORD __stdcall RtlAnsiStringToUnicodeSize(const STRING *);
NTSTATUS __stdcall RtlAnsiStringToUnicodeString(PUNICODE_STRING DestinationString, PCANSI_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlAppendAsciizToString(PSTRING Destination, PCSZ Source);
NTSTATUS __stdcall RtlAppendStringToString(PSTRING Destination, const STRING *Source);
NTSTATUS __stdcall RtlAppendUnicodeStringToString(PUNICODE_STRING Destination, PCUNICODE_STRING Source);
NTSTATUS __stdcall RtlAppendUnicodeToString(PUNICODE_STRING Destination, PCWSTR Source);
void __stdcall RtlApplicationVerifierStop(ULONG_PTR Code, PCSTR Message, PVOID Value1, PCSTR Description1, PVOID Value2, PCSTR Description2, PVOID Value3, PCSTR Description3, PVOID Value4, PCSTR Description4);
NTSTATUS __stdcall RtlApplyRXact(PRXACT_CONTEXT Context);
NTSTATUS __stdcall RtlApplyRXactNoFlush(PRXACT_CONTEXT Context);
BOOLEAN __stdcall RtlAreAllAccessesGranted(ACCESS_MASK GrantedAccess, ACCESS_MASK DesiredAccess);
BOOLEAN __stdcall RtlAreAnyAccessesGranted(ACCESS_MASK GrantedAccess, ACCESS_MASK DesiredAccess);
BOOLEAN __stdcall RtlAreBitsClear(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG Length);
BOOLEAN __stdcall RtlAreBitsSet(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG Length);
void __stdcall RtlAssert(PVOID FailedAssertion, PVOID FileName, ULONG LineNumber, PCHAR Message);
_RTL_BSD_ITEM_TYPE RtlBsdItemAabEnabled;
_RTL_BSD_ITEM_TYPE RtlBsdItemAabTimeout;
_RTL_BSD_ITEM_TYPE RtlBsdItemBootAttemptCount;
_RTL_BSD_ITEM_TYPE RtlBsdItemBootCheckpoint;
_RTL_BSD_ITEM_TYPE RtlBsdItemBootGood;
_RTL_BSD_ITEM_TYPE RtlBsdItemBootId;
_RTL_BSD_ITEM_TYPE RtlBsdItemBootShutdown;
_RTL_BSD_ITEM_TYPE RtlBsdItemChecksum;
_RTL_BSD_ITEM_TYPE RtlBsdItemErrorInfo;
_RTL_BSD_ITEM_TYPE RtlBsdItemMax;
_RTL_BSD_ITEM_TYPE RtlBsdItemPowerButtonPressInfo;
_RTL_BSD_ITEM_TYPE RtlBsdItemProductType;
_RTL_BSD_ITEM_TYPE RtlBsdItemReportedAbnormalShutdownBootId;
_RTL_BSD_ITEM_TYPE RtlBsdItemShutdownBootId;
_RTL_BSD_ITEM_TYPE RtlBsdItemVersionNumber;
_RTL_BSD_ITEM_TYPE RtlBsdPowerTransition;
_RTL_BSD_ITEM_TYPE RtlBsdSleepInProgress;
void __stdcall RtlCaptureContext(PCONTEXT ContextRecord);
WORD __stdcall RtlCaptureStackBackTrace(DWORD FramesToSkip, DWORD FramesToCapture, PVOID *BackTrace, PDWORD BackTraceHash);
NTSTATUS __stdcall RtlCharToInteger(PCSZ String, ULONG Base, PULONG Value);
void __stdcall RtlCheckForOrphanedCriticalSections(HANDLE ThreadHandle);
NTSTATUS __stdcall RtlCheckRegistryKey(ULONG RelativeTo, PWSTR Path);
void __stdcall RtlClearAllBits(PRTL_BITMAP BitMapHeader);
void __stdcall RtlClearBit(PRTL_BITMAP BitMapHeader, ULONG BitNumber);
void __stdcall RtlClearBits(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG NumberToClear);
HRESULT __stdcall RtlCloneMemoryStream(struct IStream *This, struct IStream **ResultStream);
HRESULT __stdcall RtlCommitMemoryStream(struct IStream *This, ULONG CommitFlags);
ULONG __stdcall RtlCompactHeap(HANDLE Heap, ULONG Flags);
SIZE_T __stdcall RtlCompareMemory(const void *Source1, const void *Source2, SIZE_T Length);
SIZE_T __stdcall RtlCompareMemoryUlong(PVOID Source, SIZE_T Length, ULONG Pattern);
LONG __stdcall RtlCompareString(const STRING *String1, const STRING *String2, BOOLEAN CaseInSensitive);
LONG __stdcall RtlCompareUnicodeString(PCUNICODE_STRING String1, PCUNICODE_STRING String2, BOOLEAN CaseInsensitive);
NTSTATUS __stdcall RtlCompressBuffer(USHORT CompressionFormatAndEngine, PUCHAR UncompressedBuffer, ULONG UncompressedBufferSize, PUCHAR CompressedBuffer, ULONG CompressedBufferSize, ULONG UncompressedChunkSize, PULONG FinalCompressedSize, PVOID WorkSpace);
ULONG __stdcall RtlComputeCrc32(ULONG InitialCrc, PUCHAR Buffer, ULONG Length);
NTSTATUS __stdcall RtlComputeImportTableHash(HANDLE hFile, PCHAR Hash, ULONG ImportTableHashRevision);
NTSTATUS __stdcall RtlComputePrivatizedDllName_U(PUNICODE_STRING DllName, PUNICODE_STRING RealName, PUNICODE_STRING LocalName);
NTSTATUS __stdcall RtlConsoleMultiByteToUnicodeN(PWCHAR UnicodeString, ULONG UnicodeSize, PULONG ResultSize, PCSTR MbString, ULONG MbSize, PULONG Unknown);
void __stdcall RtlConvertExclusiveToShared(PRTL_RESOURCE Resource);
static LARGE_INTEGER __stdcall RtlConvertLongToLargeInteger(LONG SignedInteger);
BOOLEAN __stdcall RtlConvertPropertyToVariant(PSERIALIZEDPROPERTYVALUE prop, USHORT CodePage, PROPVARIANT *pvar, PPMemoryAllocator pma);
void __stdcall RtlConvertSharedToExclusive(PRTL_RESOURCE Resource);
NTSTATUS __stdcall RtlConvertSidToUnicodeString(PUNICODE_STRING UnicodeString, PSID Sid, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlConvertToAutoInheritSecurityObject(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, LPGUID ObjectType, BOOLEAN IsDirectoryObject, PGENERIC_MAPPING GenericMapping);
NTSTATUS __stdcall RtlConvertUiListToApiList(PUNICODE_STRING UiList, PUNICODE_STRING ApiList, BOOLEAN SpaceAsSeparator);
LARGE_INTEGER __stdcall RtlConvertUlongToLargeInteger(ULONG UnsignedInteger);
LUID __stdcall RtlConvertUlongToLuid(ULONG Ulong);
PSERIALIZEDPROPERTYVALUE __stdcall RtlConvertVariantToProperty(const PROPVARIANT *pvar, USHORT CodePage, PSERIALIZEDPROPERTYVALUE pprop, PULONG pcb, PROPID pid, BOOLEAN fReserved, PULONG pcIndirect);
void __stdcall RtlCopyLuid(PLUID DestinationLuid, PLUID SourceLuid);
void __stdcall RtlCopyLuidAndAttributesArray(ULONG Count, PLUID_AND_ATTRIBUTES Src, PLUID_AND_ATTRIBUTES Dest);
NTSTATUS __stdcall RtlCopyMappedMemory(PVOID Destination, const void *Source, SIZE_T Size);
HRESULT __stdcall RtlCopyMemoryStreamTo(struct IStream *This, struct IStream *Target, ULARGE_INTEGER Length, PULARGE_INTEGER BytesRead, PULARGE_INTEGER BytesWritten);
HRESULT __stdcall RtlCopyOutOfProcessMemoryStreamTo(struct IStream *This, struct IStream *Target, ULARGE_INTEGER Length, PULARGE_INTEGER BytesRead, PULARGE_INTEGER BytesWritten);
NTSTATUS __stdcall RtlCopyRangeList(PRTL_RANGE_LIST CopyRangeList, PRTL_RANGE_LIST RangeList);
NTSTATUS __stdcall RtlCopySecurityDescriptor(PSECURITY_DESCRIPTOR pSourceSecurityDescriptor, PSECURITY_DESCRIPTOR *pDestinationSecurityDescriptor);
NTSTATUS __stdcall RtlCopySid(ULONG DestinationSidLength, PSID DestinationSid, PSID SourceSid);
NTSTATUS __stdcall RtlCopySidAndAttributesArray(ULONG Count, PSID_AND_ATTRIBUTES Src, ULONG SidAreaSize, PSID_AND_ATTRIBUTES Dest, PSID SidArea, PSID *RemainingSidArea, PULONG RemainingSidAreaSize);
void __stdcall RtlCopyString(PSTRING DestinationString, const STRING *SourceString);
void __stdcall RtlCopyUnicodeString(PUNICODE_STRING DestinationString, PCUNICODE_STRING SourceString);
NTSTATUS __stdcall RtlCreateAcl(PACL Acl, ULONG AclSize, ULONG AclRevision);
NTSTATUS __stdcall RtlCreateActivationContext(ULONG Flags, PACTIVATION_CONTEXT_DATA ActivationContextData, ULONG ExtraBytes, PVOID NotificationRoutine, PVOID NotificationContext, PACTIVATION_CONTEXT *ActCtx);
NTSTATUS __stdcall RtlCreateAndSetSD(PVOID AceData, ULONG AceCount, PSID OwnerSid, PSID GroupSid, PSECURITY_DESCRIPTOR *NewDescriptor);
NTSTATUS __stdcall RtlCreateAtomTable(ULONG TableSize, PRTL_ATOM_TABLE *AtomTable);
NTSTATUS __stdcall RtlCreateBootStatusDataFile();
NTSTATUS __stdcall RtlCreateEnvironment(BOOLEAN Inherit, PWSTR *Environment);
PVOID __stdcall RtlCreateHeap(ULONG Flags, PVOID BaseAddress, SIZE_T SizeToReserve, SIZE_T SizeToCommit, PVOID Lock, PRTL_HEAP_PARAMETERS Parameters);
NTSTATUS __stdcall RtlCreateProcessParameters(PRTL_USER_PROCESS_PARAMETERS *ProcessParameters, PUNICODE_STRING ImagePathName, PUNICODE_STRING DllPath, PUNICODE_STRING CurrentDirectory, PUNICODE_STRING CommandLine, PWSTR Environment, PUNICODE_STRING WindowTitle, PUNICODE_STRING DesktopInfo, PUNICODE_STRING ShellInfo, PUNICODE_STRING RuntimeInfo);
PRTL_DEBUG_INFORMATION __stdcall RtlCreateQueryDebugBuffer(ULONG Size, BOOLEAN EventPair);
NTSTATUS __stdcall RtlCreateRegistryKey(ULONG RelativeTo, PWSTR Path);
NTSTATUS __stdcall RtlCreateSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, ULONG Revision);
NTSTATUS __stdcall RtlCreateSecurityDescriptorRelative(PISECURITY_DESCRIPTOR_RELATIVE SecurityDescriptor, ULONG Revision);
NTSTATUS __stdcall RtlCreateServiceSid(PUNICODE_STRING ServiceName, PSID ServiceSid, PULONG ServiceSidLength);
NTSTATUS __stdcall RtlCreateSystemVolumeInformationFolder(PCUNICODE_STRING VolumeRootPath);
ULONG __stdcall RtlCreateTagHeap(HANDLE HeapHandle, ULONG Flags, PWSTR TagName, PWSTR TagSubName);
NTSTATUS __stdcall RtlCreateTimer(HANDLE TimerQueue, PHANDLE phNewTimer, WAITORTIMERCALLBACKFUNC Callback, PVOID Parameter, ULONG DueTime, ULONG Period, ULONG Flags);
NTSTATUS __stdcall RtlCreateTimerQueue(PHANDLE TimerQueue);
BOOLEAN __stdcall RtlCreateUnicodeString(PUNICODE_STRING DestinationString, PCWSTR SourceString);
BOOLEAN __stdcall RtlCreateUnicodeStringFromAsciiz(PUNICODE_STRING Destination, PCSZ Source);
NTSTATUS __stdcall RtlCreateUserProcess(PUNICODE_STRING ImageFileName, ULONG Attributes, PRTL_USER_PROCESS_PARAMETERS ProcessParameters, PSECURITY_DESCRIPTOR ProcessSecutityDescriptor, PSECURITY_DESCRIPTOR ThreadSecurityDescriptor, HANDLE ParentProcess, BOOLEAN CurrentDirectory, HANDLE DebugPort, HANDLE ExceptionPort, PRTL_USER_PROCESS_INFORMATION ProcessInfo);
NTSTATUS __stdcall RtlCreateUserSecurityObject(PVOID AceData, ULONG AceCount, PSID OwnerSid, PSID GroupSid, BOOLEAN IsDirectoryObject, PGENERIC_MAPPING GenericMapping, PSECURITY_DESCRIPTOR *NewDescriptor);
NTSTATUS __stdcall RtlCreateUserThread(PVOID ThreadContext, HANDLE *OutThreadHandle, PVOID Reserved1, PVOID Reserved2, PVOID Reserved3, PVOID Reserved4, PVOID Reserved5, PVOID Reserved6, PVOID Reserved7, PVOID Reserved8);
NTSTATUS __stdcall RtlCustomCPToUnicodeN(PCPTABLEINFO CustomCP, PWCHAR UnicodeString, ULONG UnicodeSize, PULONG ResultSize, PCHAR CustomString, ULONG CustomSize);
BOOLEAN __stdcall RtlCutoverTimeToSystemTime(PTIME_FIELDS CutoverTimeFields, PLARGE_INTEGER SystemTime, PLARGE_INTEGER CurrentTime, BOOLEAN ThisYearsCutoverOnly);
PRTL_USER_PROCESS_PARAMETERS __stdcall RtlDeNormalizeProcessParams(PRTL_USER_PROCESS_PARAMETERS ProcessParameters);
NTSTATUS __stdcall RtlDeactivateActivationContext(ULONG dwFlags, ULONG_PTR ulCookie);
PVOID __stdcall RtlDebugCreateHeap(ULONG Flags, PVOID BaseAddress, SIZE_T SizeToReserve, SIZE_T SizeToCommit, PVOID Lock, PRTL_HEAP_PARAMETERS Parameters);
PVOID __stdcall RtlDecodePointer(PVOID Pointer);
PVOID __stdcall RtlDecodeSystemPointer(PVOID Pointer);
NTSTATUS __stdcall RtlDecompressBuffer(USHORT CompressionFormat, PUCHAR UncompressedBuffer, ULONG UncompressedBufferSize, PUCHAR CompressedBuffer, ULONG CompressedBufferSize, PULONG FinalUncompressedSize);
NTSTATUS __stdcall RtlDecompressFragment(USHORT format, PUCHAR uncompressed, ULONG uncompressed_size, PUCHAR compressed, ULONG compressed_size, ULONG offset, PULONG final_size, PVOID workspace);
NTSTATUS __stdcall RtlDefaultNpAcl(PACL *pAcl);
PRTL_SPLAY_LINKS __stdcall RtlDelete(PRTL_SPLAY_LINKS Links);
NTSTATUS __stdcall RtlDeleteAce(PACL Acl, ULONG AceIndex);
NTSTATUS __stdcall RtlDeleteAtomFromAtomTable(PRTL_ATOM_TABLE AtomTable, RTL_ATOM Atom);
NTSTATUS __stdcall RtlDeleteCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
BOOLEAN __stdcall RtlDeleteElementGenericTable(PRTL_GENERIC_TABLE Table, PVOID Buffer);
BOOLEAN __stdcall RtlDeleteElementGenericTableAvl(PRTL_AVL_TABLE Table, PVOID Buffer);
void __stdcall RtlDeleteNoSplay(PRTL_SPLAY_LINKS Links, PRTL_SPLAY_LINKS *Root);
NTSTATUS __stdcall RtlDeleteOwnersRanges(PRTL_RANGE_LIST RangeList, PVOID Owner);
NTSTATUS __stdcall RtlDeleteRange(PRTL_RANGE_LIST RangeList, ULONGLONG Start, ULONGLONG End, PVOID Owner);
NTSTATUS __stdcall RtlDeleteRegistryValue(ULONG RelativeTo, PCWSTR Path, PCWSTR ValueName);
void __stdcall RtlDeleteResource(PRTL_RESOURCE Resource);
NTSTATUS __stdcall RtlDeleteSecurityObject(PSECURITY_DESCRIPTOR *ObjectDescriptor);
NTSTATUS __stdcall RtlDeleteTimer(HANDLE TimerQueue, HANDLE Timer, HANDLE CompletionEvent);
NTSTATUS __stdcall RtlDeleteTimerQueue(HANDLE TimerQueue);
NTSTATUS __stdcall RtlDeleteTimerQueueEx(HANDLE TimerQueue, HANDLE CompletionEvent);
NTSTATUS __stdcall RtlDeregisterWait(HANDLE hWaitHandle);
NTSTATUS __stdcall RtlDeregisterWaitEx(HANDLE hWaitHandle, HANDLE hCompletionEvent);
NTSTATUS __stdcall RtlDestroyAtomTable(PRTL_ATOM_TABLE AtomTable);
void __stdcall RtlDestroyEnvironment(PWSTR Environment);
void __stdcall RtlDestroyHandleTable(PRTL_HANDLE_TABLE HandleTable);
HANDLE __stdcall RtlDestroyHeap(HANDLE Heap);
NTSTATUS __stdcall RtlDestroyProcessParameters(PRTL_USER_PROCESS_PARAMETERS ProcessParameters);
NTSTATUS __stdcall RtlDestroyQueryDebugBuffer(PRTL_DEBUG_INFORMATION DebugBuffer);
RTL_PATH_TYPE __stdcall RtlDetermineDosPathNameType_U(PCWSTR Path);
BOOLEAN __stdcall RtlDispatchException(PEXCEPTION_RECORD ExceptionRecord, PCONTEXT Context);
BOOLEAN __stdcall RtlDllShutdownInProgress();
NTSTATUS __stdcall RtlDnsHostNameToComputerName(PUNICODE_STRING ComputerName, PUNICODE_STRING DnsHostName, BOOLEAN AllocateComputerNameString);
BOOLEAN __stdcall RtlDoesFileExists_U(PCWSTR FileName);
NTSTATUS __stdcall RtlDosApplyFileIsolationRedirection_Ustr(ULONG Flags, PUNICODE_STRING OriginalName, PUNICODE_STRING Extension, PUNICODE_STRING StaticString, PUNICODE_STRING DynamicString, PUNICODE_STRING *NewName, PULONG NewFlags, PSIZE_T FileNameSize, PSIZE_T RequiredLength);
BOOLEAN __stdcall RtlDosPathNameToNtPathName_U(PCWSTR DosPathName, PUNICODE_STRING NtPathName, PCWSTR *NtFileNamePart, PRTL_RELATIVE_NAME_U DirectoryInfo);
BOOLEAN __stdcall RtlDosPathNameToRelativeNtPathName_U(PCWSTR DosName, PUNICODE_STRING NtName, PCWSTR *PartName, PRTL_RELATIVE_NAME_U RelativeName);
ULONG __stdcall RtlDosSearchPath_U(PCWSTR Path, PCWSTR FileName, PCWSTR Extension, ULONG BufferSize, PWSTR Buffer, PWSTR *PartName);
NTSTATUS __stdcall RtlDosSearchPath_Ustr(ULONG Flags, PUNICODE_STRING PathString, PUNICODE_STRING FileNameString, PUNICODE_STRING ExtensionString, PUNICODE_STRING CallerBuffer, PUNICODE_STRING DynamicString, PUNICODE_STRING *FullNameOut, PSIZE_T FilePartSize, PSIZE_T LengthNeeded);
WCHAR __stdcall RtlDowncaseUnicodeChar(WCHAR Source);
NTSTATUS __stdcall RtlDowncaseUnicodeString(PUNICODE_STRING UniDest, PCUNICODE_STRING UniSource, BOOLEAN AllocateDestinationString);
void __stdcall RtlDumpResource(PRTL_RESOURCE Resource);
NTSTATUS __stdcall RtlDuplicateUnicodeString(ULONG Flags, PCUNICODE_STRING SourceString, PUNICODE_STRING DestinationString);
NTSTATUS __stdcall RtlEmptyAtomTable(PRTL_ATOM_TABLE AtomTable, BOOLEAN DeletePinned);
PVOID __stdcall RtlEncodePointer(PVOID Pointer);
PVOID __stdcall RtlEncodeSystemPointer(PVOID Pointer);
static LARGE_INTEGER __stdcall RtlEnlargedIntegerMultiply(LONG Multiplicand, LONG Multiplier);
static ULONG __stdcall RtlEnlargedUnsignedDivide(ULARGE_INTEGER Dividend, ULONG Divisor, PULONG Remainder);
static LARGE_INTEGER __stdcall RtlEnlargedUnsignedMultiply(ULONG Multiplicand, ULONG Multiplier);
NTSTATUS __stdcall RtlEnsureBufferSize(ULONG Flags, PRTL_BUFFER Buffer, ULONG RequiredSize);
NTSTATUS __stdcall RtlEnterCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
NTSTATUS __stdcall RtlEnumProcessHeaps(PHEAP_ENUMERATION_ROUTINE HeapEnumerationRoutine, PVOID lParam);
PVOID __stdcall RtlEnumerateGenericTable(PRTL_GENERIC_TABLE Table, BOOLEAN Restart);
PVOID __stdcall RtlEnumerateGenericTableAvl(PRTL_AVL_TABLE Table, BOOLEAN Restart);
PVOID __stdcall RtlEnumerateGenericTableLikeADirectory(PRTL_AVL_TABLE Table, PRTL_AVL_MATCH_FUNCTION MatchFunction, PVOID MatchData, ULONG NextFlag, PVOID *RestartKey, PULONG DeleteCount, PVOID Buffer);
PVOID __stdcall RtlEnumerateGenericTableWithoutSplaying(PRTL_GENERIC_TABLE Table, PVOID *RestartKey);
PVOID __stdcall RtlEnumerateGenericTableWithoutSplayingAvl(PRTL_AVL_TABLE Table, PVOID *RestartKey);
BOOLEAN __stdcall RtlEqualComputerName(PUNICODE_STRING ComputerName1, PUNICODE_STRING ComputerName2);
BOOLEAN __stdcall RtlEqualDomainName(PUNICODE_STRING DomainName1, PUNICODE_STRING DomainName2);
BOOLEAN __stdcall RtlEqualLuid(PLUID Luid1, PLUID Luid2);
BOOLEAN __stdcall RtlEqualPrefixSid(PSID Sid1, PSID Sid2);
BOOLEAN __stdcall RtlEqualSid(PSID Sid1, PSID Sid2);
BOOLEAN __stdcall RtlEqualString(const STRING *String1, const STRING *String2, BOOLEAN CaseInSensitive);
BOOLEAN __stdcall RtlEqualUnicodeString(PCUNICODE_STRING String1, PCUNICODE_STRING String2, BOOLEAN CaseInsensitive);
void __stdcall RtlEraseUnicodeString(PUNICODE_STRING String);
void __stdcall RtlExitUserThread(NTSTATUS Status);
NTSTATUS __stdcall RtlExpandEnvironmentStrings_U(PWSTR Environment, PUNICODE_STRING Source, PUNICODE_STRING Destination, PULONG Length);
ULONG __stdcall RtlExtendHeap(HANDLE Heap, ULONG Flags, PVOID P, SIZE_T Size);
LARGE_INTEGER __stdcall RtlExtendedIntegerMultiply(LARGE_INTEGER Multiplicand, LONG Multiplier);
LARGE_INTEGER __stdcall RtlExtendedLargeIntegerDivide(LARGE_INTEGER Dividend, ULONG Divisor, PULONG Remainder);
LARGE_INTEGER __stdcall RtlExtendedMagicDivide(LARGE_INTEGER Dividend, LARGE_INTEGER MagicDivisor, CCHAR ShiftCount);
void __stdcall RtlFillMemory(PVOID Destination, SIZE_T Length, UCHAR Fill);
void __stdcall RtlFillMemoryUlong(PVOID Destination, SIZE_T Length, ULONG Fill);
void __stdcall RtlFillMemoryUlonglong(PVOID Destination, SIZE_T Length, ULONGLONG Pattern);
void __stdcall RtlFinalReleaseOutOfProcessMemoryStream(PRTL_MEMORY_STREAM Stream);
NTSTATUS __stdcall RtlFindActivationContextSectionGuid(ULONG flags, const GUID *extguid, ULONG section_kind, const GUID *guid, void *ptr);
NTSTATUS __stdcall RtlFindActivationContextSectionString(ULONG dwFlags, const GUID *ExtensionGuid, ULONG SectionType, const UNICODE_STRING *SectionName, PVOID ReturnedData);
NTSTATUS __stdcall RtlFindCharInUnicodeString(ULONG Flags, PCUNICODE_STRING SearchString, PCUNICODE_STRING MatchString, PUSHORT Position);
ULONG __stdcall RtlFindClearBits(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
ULONG __stdcall RtlFindClearBitsAndSet(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
ULONG __stdcall RtlFindClearRuns(PRTL_BITMAP BitMapHeader, PRTL_BITMAP_RUN RunArray, ULONG SizeOfRunArray, BOOLEAN LocateLongestRuns);
ULONG __stdcall RtlFindFirstRunClear(PRTL_BITMAP BitMapHeader, PULONG StartingIndex);
ULONG __stdcall RtlFindLastBackwardRunClear(PRTL_BITMAP BitMapHeader, ULONG FromIndex, PULONG StartingRunIndex);
CCHAR __stdcall RtlFindLeastSignificantBit(ULONGLONG Value);
ULONG __stdcall RtlFindLongestRunClear(PRTL_BITMAP BitMapHeader, PULONG StartingIndex);
NTSTATUS __stdcall RtlFindMessage(PVOID BaseAddress, ULONG Type, ULONG Language, ULONG MessageId, PMESSAGE_RESOURCE_ENTRY *MessageResourceEntry);
CCHAR __stdcall RtlFindMostSignificantBit(ULONGLONG Value);
ULONG __stdcall RtlFindNextForwardRunClear(PRTL_BITMAP BitMapHeader, ULONG FromIndex, PULONG StartingRunIndex);
ULONG __stdcall RtlFindNextForwardRunSet(PRTL_BITMAP BitMapHeader, ULONG FromIndex, PULONG StartingRunIndex);
NTSTATUS __stdcall RtlFindRange(PRTL_RANGE_LIST RangeList, ULONGLONG Minimum, ULONGLONG Maximum, ULONG Length, ULONG Alignment, ULONG Flags, UCHAR AttributeAvailableMask, PVOID Context, PRTL_CONFLICT_RANGE_CALLBACK Callback, PULONGLONG Start);
ULONG __stdcall RtlFindSetBits(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
ULONG __stdcall RtlFindSetBitsAndClear(PRTL_BITMAP BitMapHeader, ULONG NumberToFind, ULONG HintIndex);
PSINGLE_LIST_ENTRY __stdcall RtlFirstEntrySList(const SLIST_HEADER *ListHead);
BOOLEAN __stdcall RtlFirstFreeAce(PACL Acl, PACE *Ace);
BOOLEAN __stdcall RtlFlushSecureMemoryCache(PVOID MemoryCache, SIZE_T MemoryLength);
NTSTATUS __stdcall RtlFormatCurrentUserKeyPath(PUNICODE_STRING KeyPath);
NTSTATUS __stdcall RtlFormatMessage(PWSTR Message, ULONG MaxWidth, BOOLEAN IgnoreInserts, BOOLEAN ArgumentsAreAnsi, BOOLEAN ArgumentsAreAnArray, va_list *Arguments, PWSTR Buffer, ULONG BufferSize, PULONG ReturnLength);
void __stdcall RtlFreeActivationContextStack(PACTIVATION_CONTEXT_STACK Stack);
void __stdcall RtlFreeAnsiString(PANSI_STRING AnsiString);
void __stdcall RtlFreeBuffer(PRTL_BUFFER Buffer);
BOOLEAN __stdcall RtlFreeHandle(PRTL_HANDLE_TABLE HandleTable, PRTL_HANDLE_TABLE_ENTRY Handle);
BOOLEAN __stdcall RtlFreeHeap(HANDLE HeapHandle, ULONG Flags, PVOID P);
void __stdcall RtlFreeOemString(POEM_STRING OemString);
void __stdcall RtlFreeRangeList(PRTL_RANGE_LIST RangeList);
PVOID __stdcall RtlFreeSid(PSID Sid);
void __stdcall RtlFreeThreadActivationContextStack();
void __stdcall RtlFreeUnicodeString(PUNICODE_STRING UnicodeString);
void __stdcall RtlFreeUserThreadStack(HANDLE ProcessHandle, HANDLE ThreadHandle);
NTSTATUS __stdcall RtlGUIDFromString(PUNICODE_STRING GuidString, GUID *Guid);
void __stdcall RtlGenerate8dot3Name(PUNICODE_STRING Name, BOOLEAN AllowExtendedCharacters, PGENERATE_NAME_CONTEXT Context, PUNICODE_STRING Name8dot3);
NTSTATUS __stdcall RtlGetAce(PACL Acl, ULONG AceIndex, PVOID *Ace);
NTSTATUS __stdcall RtlGetActiveActivationContext(PVOID *Context);
void __stdcall RtlGetCallersAddress(PVOID *CallersAddress, PVOID *CallersCaller);
NTSTATUS __stdcall RtlGetCompressionWorkSpaceSize(USHORT CompressionFormatAndEngine, PULONG CompressBufferWorkSpaceSize, PULONG CompressFragmentWorkSpaceSize);
NTSTATUS __stdcall RtlGetControlSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PSECURITY_DESCRIPTOR_CONTROL Control, PULONG Revision);
ULONG __stdcall RtlGetCurrentDirectory_U(ULONG MaximumLength, PWSTR Buffer);
PPEB __stdcall RtlGetCurrentPeb();
ULONG __stdcall RtlGetCurrentProcessorNumber();
NTSTATUS __stdcall RtlGetDaclSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PBOOLEAN DaclPresent, PACL *Dacl, PBOOLEAN DaclDefaulted);
void __stdcall RtlGetDefaultCodePage(PUSHORT AnsiCodePage, PUSHORT OemCodePage);
PVOID __stdcall RtlGetElementGenericTable(PRTL_GENERIC_TABLE Table, ULONG I);
PVOID __stdcall RtlGetElementGenericTableAvl(PRTL_AVL_TABLE Table, ULONG I);
NTSTATUS __stdcall RtlGetFirstRange(PRTL_RANGE_LIST RangeList, PRTL_RANGE_LIST_ITERATOR Iterator, PRTL_RANGE *Range);
PTEB_ACTIVE_FRAME __stdcall RtlGetFrame();
ULONG __stdcall RtlGetFullPathName_U(PCWSTR FileName, ULONG Size, PWSTR Buffer, PWSTR *ShortName);
NTSTATUS __stdcall RtlGetFullPathName_UEx(PWSTR FileName, ULONG BufferLength, PWSTR Buffer, PWSTR *FilePart, RTL_PATH_TYPE *InputPathType);
NTSTATUS __stdcall RtlGetFullPathName_UstrEx(PUNICODE_STRING FileName, PUNICODE_STRING StaticString, PUNICODE_STRING DynamicString, PUNICODE_STRING *StringUsed, PSIZE_T FilePartSize, PBOOLEAN NameInvalid, RTL_PATH_TYPE *PathType, PSIZE_T LengthNeeded);
NTSTATUS __stdcall RtlGetGroupSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID *Group, PBOOLEAN GroupDefaulted);
NTSTATUS __stdcall RtlGetLastNtStatus();
ULONG __stdcall RtlGetLastWin32Error();
NTSTATUS __stdcall RtlGetLengthWithoutLastFullDosOrNtPathElement(ULONG Flags, PWCHAR Path, PULONG LengthOut);
NTSTATUS __stdcall RtlGetLengthWithoutTrailingPathSeperators(ULONG Flags, PCUNICODE_STRING PathString, PULONG Length);
ULONG __stdcall RtlGetLongestNtPathLength();
NTSTATUS __stdcall RtlGetNextRange(PRTL_RANGE_LIST_ITERATOR Iterator, PRTL_RANGE *Range, BOOLEAN MoveForwards);
ULONG __stdcall RtlGetNtGlobalFlags();
BOOLEAN __stdcall RtlGetNtProductType(PNT_PRODUCT_TYPE ProductType);
void __stdcall RtlGetNtVersionNumbers(PULONG pMajorVersion, PULONG pMinorVersion, PULONG pBuildNumber);
NTSTATUS __stdcall RtlGetOwnerSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID *Owner, PBOOLEAN OwnerDefaulted);
ULONG __stdcall RtlGetProcessHeaps(ULONG HeapCount, HANDLE *HeapArray);
NTSTATUS __stdcall RtlGetSaclSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PBOOLEAN SaclPresent, PACL *Sacl, PBOOLEAN SaclDefaulted);
BOOLEAN __stdcall RtlGetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl);
NTSTATUS __stdcall RtlGetSetBootStatusData(HANDLE FileHandle, BOOLEAN WriteMode, RTL_BSD_ITEM_TYPE DataClass, PVOID Buffer, ULONG BufferSize, PULONG ReturnLength);
ULONG __stdcall RtlGetThreadErrorMode();
BOOLEAN __stdcall RtlGetUserInfoHeap(PVOID HeapHandle, ULONG Flags, PVOID BaseAddress, PVOID *UserValue, PULONG UserFlags);
NTSTATUS __stdcall RtlGetVersion(PRTL_OSVERSIONINFOW lpVersionInformation);
NTSTATUS __stdcall RtlHashUnicodeString(const UNICODE_STRING *String, BOOLEAN CaseInSensitive, ULONG HashAlgorithm, PULONG HashValue);
PSID_IDENTIFIER_AUTHORITY __stdcall RtlIdentifierAuthoritySid(PSID Sid);
PVOID __stdcall RtlImageDirectoryEntryToData(PVOID BaseAddress, BOOLEAN MappedAsImage, USHORT Directory, PULONG Size);
PIMAGE_NT_HEADERS __stdcall RtlImageNtHeader(PVOID BaseAddress);
NTSTATUS __stdcall RtlImageNtHeaderEx(ULONG Flags, PVOID BaseAddress, ULONGLONG Size, PIMAGE_NT_HEADERS *NtHeader);
PIMAGE_SECTION_HEADER __stdcall RtlImageRvaToSection(PIMAGE_NT_HEADERS NtHeader, PVOID BaseAddress, ULONG Rva);
PVOID __stdcall RtlImageRvaToVa(PIMAGE_NT_HEADERS NtHeader, PVOID BaseAddress, ULONG Rva, PIMAGE_SECTION_HEADER *SectionHeader);
NTSTATUS __stdcall RtlImpersonateSelf(SECURITY_IMPERSONATION_LEVEL ImpersonationLevel);
void __stdcall RtlInitAnsiString(PANSI_STRING DestinationString, PCSZ SourceString);
NTSTATUS __stdcall RtlInitAnsiStringEx(PANSI_STRING DestinationString, PCSZ SourceString);
void __stdcall RtlInitBuffer(PRTL_BUFFER Buffer, PUCHAR Data, ULONG DataSize);
void __stdcall RtlInitCodePageTable(PUSHORT TableBase, PCPTABLEINFO CodePageTable);
void __stdcall RtlInitEmptyAnsiString(PANSI_STRING AnsiString, PCHAR Buffer, USHORT BufferSize);
void __stdcall RtlInitEmptyUnicodeString(PUNICODE_STRING UnicodeString, PWCHAR Buffer, USHORT BufferSize);
void __stdcall RtlInitMemoryStream(PRTL_MEMORY_STREAM Stream);
void __stdcall RtlInitNlsTables(PUSHORT AnsiTableBase, PUSHORT OemTableBase, PUSHORT CaseTableBase, PNLSTABLEINFO NlsTable);
void __stdcall RtlInitOutOfProcessMemoryStream(PRTL_MEMORY_STREAM Stream);
void __stdcall RtlInitString(PSTRING DestinationString, PCSZ SourceString);
void __stdcall RtlInitUnicodeString(PUNICODE_STRING DestinationString, PCWSTR SourceString);
NTSTATUS __stdcall RtlInitUnicodeStringEx(PUNICODE_STRING DestinationString, PCWSTR SourceString);
void __stdcall RtlInitializeBitMap(PRTL_BITMAP BitMapHeader, PULONG BitMapBuffer, ULONG SizeOfBitMap);
void __stdcall RtlInitializeContext(HANDLE ProcessHandle, PCONTEXT ThreadContext, PVOID ThreadStartParam, PTHREAD_START_ROUTINE ThreadStartAddress, PINITIAL_TEB InitialTeb);
NTSTATUS __stdcall RtlInitializeCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
NTSTATUS __stdcall RtlInitializeCriticalSectionAndSpinCount(PRTL_CRITICAL_SECTION CriticalSection, ULONG SpinCount);
void __stdcall RtlInitializeGenericTable(PRTL_GENERIC_TABLE Table, PRTL_GENERIC_COMPARE_ROUTINE CompareRoutine, PRTL_GENERIC_ALLOCATE_ROUTINE AllocateRoutine, PRTL_GENERIC_FREE_ROUTINE FreeRoutine, PVOID TableContext);
void __stdcall RtlInitializeGenericTableAvl(PRTL_AVL_TABLE Table, PRTL_AVL_COMPARE_ROUTINE CompareRoutine, PRTL_AVL_ALLOCATE_ROUTINE AllocateRoutine, PRTL_AVL_FREE_ROUTINE FreeRoutine, PVOID TableContext);
void __stdcall RtlInitializeHandleTable(ULONG TableSize, ULONG HandleSize, PRTL_HANDLE_TABLE HandleTable);
NTSTATUS __stdcall RtlInitializeRXact(HANDLE RootDirectory, BOOLEAN Commit, PRXACT_CONTEXT *OutContext);
void __stdcall RtlInitializeRangeList(PRTL_RANGE_LIST RangeList);
void __stdcall RtlInitializeResource(PRTL_RESOURCE Resource);
void __stdcall RtlInitializeSListHead(PSLIST_HEADER ListHead);
NTSTATUS __stdcall RtlInitializeSid(PSID Sid, PSID_IDENTIFIER_AUTHORITY IdentifierAuthority, UCHAR SubAuthorityCount);
PVOID __stdcall RtlInsertElementGenericTable(PRTL_GENERIC_TABLE Table, PVOID Buffer, CLONG BufferSize, PBOOLEAN NewElement);
PVOID __stdcall RtlInsertElementGenericTableAvl(PRTL_AVL_TABLE Table, PVOID Buffer, CLONG BufferSize, PBOOLEAN NewElement);
PVOID __stdcall RtlInsertElementGenericTableFull(PRTL_GENERIC_TABLE Table, PVOID Buffer, CLONG BufferSize, PBOOLEAN NewElement, PVOID NodeOrParent, TABLE_SEARCH_RESULT SearchResult);
PVOID __stdcall RtlInsertElementGenericTableFullAvl(PRTL_AVL_TABLE Table, PVOID Buffer, CLONG BufferSize, PBOOLEAN NewElement, PVOID NodeOrParent, TABLE_SEARCH_RESULT SearchResult);
NTSTATUS __stdcall RtlInt64ToUnicodeString(ULONGLONG Value, ULONG Base, PUNICODE_STRING String);
NTSTATUS __stdcall RtlIntegerToChar(ULONG Value, ULONG Base, ULONG Length, PCHAR String);
NTSTATUS __stdcall RtlIntegerToUnicode(ULONG Value, ULONG Base, ULONG Length, LPWSTR String);
NTSTATUS __stdcall RtlIntegerToUnicodeString(ULONG Value, ULONG Base, PUNICODE_STRING String);
PSINGLE_LIST_ENTRY __stdcall RtlInterlockedFlushSList(PSLIST_HEADER ListHead);
PSINGLE_LIST_ENTRY __stdcall RtlInterlockedPopEntrySList(PSLIST_HEADER ListHead);
PSINGLE_LIST_ENTRY __stdcall RtlInterlockedPushEntrySList(PSLIST_HEADER ListHead, PSINGLE_LIST_ENTRY ListEntry);
NTSTATUS __stdcall RtlInvertRangeList(PRTL_RANGE_LIST InvertedRangeList, PRTL_RANGE_LIST RangeList);
PSTR __stdcall RtlIpv4AddressToStringA(const struct in_addr *Addr, PCHAR S);
NTSTATUS __stdcall RtlIpv4AddressToStringExA(const struct in_addr *Address, USHORT Port, PCHAR AddressString, PULONG AddressStringLength);
NTSTATUS __stdcall RtlIpv4AddressToStringExW(const struct in_addr *Address, USHORT Port, PWCHAR AddressString, PULONG AddressStringLength);
PWSTR __stdcall RtlIpv4AddressToStringW(const struct in_addr *Addr, PWCHAR S);
NTSTATUS __stdcall RtlIpv4StringToAddressA(PCSTR String, BOOLEAN Strict, PCSTR *Terminator, struct in_addr *Addr);
NTSTATUS __stdcall RtlIpv4StringToAddressExA(PCSTR AddressString, BOOLEAN Strict, struct in_addr *Address, PUSHORT Port);
NTSTATUS __stdcall RtlIpv4StringToAddressExW(PCWSTR AddressString, BOOLEAN Strict, struct in_addr *Address, PUSHORT Port);
NTSTATUS __stdcall RtlIpv4StringToAddressW(PCWSTR String, BOOLEAN Strict, PCWSTR *Terminator, struct in_addr *Addr);
PSTR __stdcall RtlIpv6AddressToStringA(const struct in6_addr *Addr, PSTR S);
NTSTATUS __stdcall RtlIpv6AddressToStringExA(const struct in6_addr *Address, ULONG ScopeId, USHORT Port, PSTR AddressString, PULONG AddressStringLength);
NTSTATUS __stdcall RtlIpv6AddressToStringExW(const struct in6_addr *Address, ULONG ScopeId, USHORT Port, PWCHAR AddressString, PULONG AddressStringLength);
PWSTR __stdcall RtlIpv6AddressToStringW(const struct in6_addr *Addr, PWSTR S);
NTSTATUS __stdcall RtlIpv6StringToAddressA(PCSTR String, PCSTR *Terminator, struct in6_addr *Addr);
NTSTATUS __stdcall RtlIpv6StringToAddressExA(PCSTR AddressString, struct in6_addr *Address, PULONG ScopeId, PUSHORT Port);
NTSTATUS __stdcall RtlIpv6StringToAddressExW(PCWSTR AddressString, struct in6_addr *Address, PULONG ScopeId, PUSHORT Port);
NTSTATUS __stdcall RtlIpv6StringToAddressW(PCWSTR String, PCWSTR *Terminator, struct in6_addr *Addr);
BOOLEAN __stdcall RtlIsActivationContextActive(HANDLE handle);
ULONG __stdcall RtlIsCriticalSectionLocked(PRTL_CRITICAL_SECTION CriticalSection);
ULONG __stdcall RtlIsCriticalSectionLockedByThread(PRTL_CRITICAL_SECTION CriticalSection);
ULONG __stdcall RtlIsDosDeviceName_U(PCWSTR Name);
ULONG __stdcall RtlIsDosDeviceName_Ustr(PCUNICODE_STRING Name);
BOOLEAN __stdcall RtlIsGenericTableEmpty(PRTL_GENERIC_TABLE Table);
BOOLEAN __stdcall RtlIsGenericTableEmptyAvl(PRTL_AVL_TABLE Table);
BOOLEAN __stdcall RtlIsNameLegalDOS8Dot3(PCUNICODE_STRING Name, POEM_STRING OemName, PBOOLEAN NameContainsSpaces);
NTSTATUS __stdcall RtlIsRangeAvailable(PRTL_RANGE_LIST RangeList, ULONGLONG Start, ULONGLONG End, ULONG Flags, UCHAR AttributeAvailableMask, PVOID Context, PRTL_CONFLICT_RANGE_CALLBACK Callback, PBOOLEAN Available);
BOOLEAN __stdcall RtlIsTextUnicode(const void *Buffer, INT Size, INT *Flags);
BOOLEAN __stdcall RtlIsThreadWithinLoaderCallout();
BOOLEAN __stdcall RtlIsValidHandle(PRTL_HANDLE_TABLE HandleTable, PRTL_HANDLE_TABLE_ENTRY Handle);
BOOLEAN __stdcall RtlIsValidIndexHandle(PRTL_HANDLE_TABLE HandleTable, ULONG Index, PRTL_HANDLE_TABLE_ENTRY *Handle);
LARGE_INTEGER __stdcall RtlLargeIntegerAdd(LARGE_INTEGER Addend1, LARGE_INTEGER Addend2);
LARGE_INTEGER __stdcall RtlLargeIntegerArithmeticShift(LARGE_INTEGER LargeInteger, CCHAR ShiftCount);
LARGE_INTEGER __stdcall RtlLargeIntegerDivide(LARGE_INTEGER Dividend, LARGE_INTEGER Divisor, PLARGE_INTEGER Remainder);
LARGE_INTEGER __stdcall RtlLargeIntegerNegate(LARGE_INTEGER Subtrahend);
LARGE_INTEGER __stdcall RtlLargeIntegerShiftLeft(LARGE_INTEGER LargeInteger, CCHAR ShiftCount);
LARGE_INTEGER __stdcall RtlLargeIntegerShiftRight(LARGE_INTEGER LargeInteger, CCHAR ShiftCount);
LARGE_INTEGER __stdcall RtlLargeIntegerSubtract(LARGE_INTEGER Minuend, LARGE_INTEGER Subtrahend);
NTSTATUS __stdcall RtlLargeIntegerToChar(PLARGE_INTEGER Value, ULONG Base, ULONG Length, PCHAR String);
NTSTATUS __stdcall RtlLeaveCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
ULONG __stdcall RtlLengthRequiredSid(ULONG SubAuthorityCount);
ULONG __stdcall RtlLengthSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor);
ULONG __stdcall RtlLengthSid(PSID Sid);
NTSTATUS __stdcall RtlLocalTimeToSystemTime(PLARGE_INTEGER LocalTime, PLARGE_INTEGER SystemTime);
NTSTATUS __stdcall RtlLockBootStatusData(PHANDLE FileHandle);
BOOLEAN __stdcall RtlLockHeap(HANDLE Heap);
HRESULT __stdcall RtlLockMemoryStreamRegion(struct IStream *This, ULARGE_INTEGER Offset, ULARGE_INTEGER Length, ULONG LockType);
USHORT __stdcall RtlLogStackBackTrace();
NTSTATUS __stdcall RtlLookupAtomInAtomTable(PRTL_ATOM_TABLE AtomTable, PWSTR AtomName, PRTL_ATOM Atom);
PVOID __stdcall RtlLookupElementGenericTable(PRTL_GENERIC_TABLE Table, PVOID Buffer);
PVOID __stdcall RtlLookupElementGenericTableAvl(PRTL_AVL_TABLE Table, PVOID Buffer);
PVOID __stdcall RtlLookupElementGenericTableFull(PRTL_GENERIC_TABLE Table, PVOID Buffer, PVOID *NodeOrParent, TABLE_SEARCH_RESULT *SearchResult);
PVOID __stdcall RtlLookupElementGenericTableFullAvl(PRTL_AVL_TABLE Table, PVOID Buffer, PVOID *NodeOrParent, TABLE_SEARCH_RESULT *SearchResult);
PVOID __stdcall RtlLookupFirstMatchingElementGenericTableAvl(PRTL_AVL_TABLE Table, PVOID Buffer, PVOID *RestartKey);
NTSTATUS __stdcall RtlMakeSelfRelativeSD(PSECURITY_DESCRIPTOR AbsoluteSD, PSECURITY_DESCRIPTOR SelfRelativeSD, PULONG BufferLength);
void __stdcall RtlMapGenericMask(PACCESS_MASK AccessMask, PGENERIC_MAPPING GenericMapping);
NTSTATUS __stdcall RtlMapSecurityErrorToNtStatus(ULONG SecurityError);
NTSTATUS __stdcall RtlMergeRangeLists(PRTL_RANGE_LIST MergedRangeList, PRTL_RANGE_LIST RangeList1, PRTL_RANGE_LIST RangeList2, ULONG Flags);
void __stdcall RtlMoveMemory(PVOID Destination, const void *Source, SIZE_T Length);
NTSTATUS __stdcall RtlMultiAppendUnicodeStringBuffer(PRTL_UNICODE_STRING_BUFFER StringBuffer, ULONG NumberOfAddends, PCUNICODE_STRING Addends);
NTSTATUS __stdcall RtlMultiByteToUnicodeN(PWCH UnicodeString, ULONG MaxBytesInUnicodeString, PULONG BytesInUnicodeString, const CHAR *MultiByteString, ULONG BytesInMultiByteString);
NTSTATUS __stdcall RtlMultiByteToUnicodeSize(PULONG BytesInUnicodeString, const CHAR *MultiByteString, ULONG BytesInMultiByteString);
NTSTATUS __stdcall RtlMultipleAllocateHeap(HANDLE HeapHandle, ULONG Flags, SIZE_T Size, ULONG Count, PVOID *Array);
NTSTATUS __stdcall RtlMultipleFreeHeap(HANDLE HeapHandle, ULONG Flags, ULONG Count, PVOID *Array);
NTSTATUS __stdcall RtlNewInstanceSecurityObject(BOOLEAN ParentDescriptorChanged, BOOLEAN CreatorDescriptorChanged, PLUID OldClientTokenModifiedId, PLUID NewClientTokenModifiedId, PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, BOOLEAN IsDirectoryObject, HANDLE Token, PGENERIC_MAPPING GenericMapping);
NTSTATUS __stdcall RtlNewSecurityGrantedAccess(ACCESS_MASK DesiredAccess, PPRIVILEGE_SET Privileges, PULONG Length, HANDLE Token, PGENERIC_MAPPING GenericMapping, PACCESS_MASK RemainingDesiredAccess);
NTSTATUS __stdcall RtlNewSecurityObject(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, BOOLEAN IsDirectoryObject, HANDLE Token, PGENERIC_MAPPING GenericMapping);
NTSTATUS __stdcall RtlNewSecurityObjectEx(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, LPGUID ObjectType, BOOLEAN IsDirectoryObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping);
NTSTATUS __stdcall RtlNewSecurityObjectWithMultipleInheritance(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR *NewDescriptor, LPGUID *ObjectTypes, ULONG GuidCount, BOOLEAN IsDirectoryObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping);
PRTL_USER_PROCESS_PARAMETERS __stdcall RtlNormalizeProcessParams(PRTL_USER_PROCESS_PARAMETERS ProcessParameters);
NTSTATUS __stdcall RtlNtPathNameToDosPathName(ULONG Flags, PRTL_UNICODE_STRING_BUFFER Path, PULONG PathType, PULONG Unknown);
ULONG __stdcall RtlNtStatusToDosError(NTSTATUS Status);
ULONG __stdcall RtlNtStatusToDosErrorNoTeb(NTSTATUS Status);
ULONG __stdcall RtlNumberGenericTableElements(PRTL_GENERIC_TABLE Table);
ULONG __stdcall RtlNumberGenericTableElementsAvl(PRTL_AVL_TABLE Table);
ULONG __stdcall RtlNumberOfClearBits(PRTL_BITMAP BitMapHeader);
ULONG __stdcall RtlNumberOfSetBits(PRTL_BITMAP BitMapHeader);
UINT __stdcall RtlOemStringToUnicodeSize(const STRING *);
NTSTATUS __stdcall RtlOemStringToUnicodeString(PUNICODE_STRING DestinationString, PCOEM_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlOemToUnicodeN(PWCH UnicodeString, ULONG MaxBytesInUnicodeString, PULONG BytesInUnicodeString, PCCH OemString, ULONG BytesInOemString);
NTSTATUS __stdcall RtlOpenCurrentUser(ACCESS_MASK DesiredAccess, PHANDLE KeyHandle);
_RTL_PATH_TYPE RtlPathTypeDriveAbsolute;
_RTL_PATH_TYPE RtlPathTypeDriveRelative;
_RTL_PATH_TYPE RtlPathTypeLocalDevice;
_RTL_PATH_TYPE RtlPathTypeRelative;
_RTL_PATH_TYPE RtlPathTypeRootLocalDevice;
_RTL_PATH_TYPE RtlPathTypeRooted;
_RTL_PATH_TYPE RtlPathTypeUncAbsolute;
_RTL_PATH_TYPE RtlPathTypeUnknown;
PVOID __stdcall RtlPcToFileHeader(PVOID PcValue, PVOID *BaseOfImage);
NTSTATUS __stdcall RtlPinAtomInAtomTable(PRTL_ATOM_TABLE AtomTable, RTL_ATOM Atom);
void __stdcall RtlPopFrame(PTEB_ACTIVE_FRAME Frame);
BOOLEAN __stdcall RtlPrefixString(const STRING *String1, const STRING *String2, BOOLEAN CaseInsensitive);
BOOLEAN __stdcall RtlPrefixUnicodeString(PCUNICODE_STRING String1, PCUNICODE_STRING String2, BOOLEAN CaseInsensitive);
PVOID __stdcall RtlProtectHeap(PVOID HeapHandle, BOOLEAN Protect);
void __stdcall RtlPushFrame(PTEB_ACTIVE_FRAME Frame);
NTSTATUS __stdcall RtlQueryAtomInAtomTable(PRTL_ATOM_TABLE AtomTable, RTL_ATOM Atom, PULONG RefCount, PULONG PinCount, PWSTR AtomName, PULONG NameLength);
WORD __stdcall RtlQueryDepthSList(PSLIST_HEADER ListHead);
NTSTATUS __stdcall RtlQueryEnvironmentVariable_U(PWSTR Environment, PCUNICODE_STRING Name, PUNICODE_STRING Value);
NTSTATUS __stdcall RtlQueryHeapInformation(PVOID HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength, PSIZE_T ReturnLength);
NTSTATUS __stdcall RtlQueryInformationAcl(PACL Acl, PVOID Information, ULONG InformationLength, ACL_INFORMATION_CLASS InformationClass);
NTSTATUS __stdcall RtlQueryInformationActivationContext(DWORD dwFlags, PVOID Context, PVOID pvSubInstance, ULONG ulInfoClass, PVOID pvBuffer, SIZE_T cbBuffer, SIZE_T *pcbWrittenOrRequired);
NTSTATUS __stdcall RtlQueryInformationActiveActivationContext(ULONG ulInfoClass, PVOID pvBuffer, SIZE_T cbBuffer, SIZE_T *pcbWrittenOrRequired);
HRESULT __stdcall RtlQueryInterfaceMemoryStream(struct IStream *This, const IID *const RequestedIid, PVOID *ResultObject);
NTSTATUS __stdcall RtlQueryProcessDebugInformation(ULONG ProcessId, ULONG DebugInfoClassMask, PRTL_DEBUG_INFORMATION DebugBuffer);
NTSTATUS __stdcall RtlQueryRegistryValues(ULONG RelativeTo, PCWSTR Path, PRTL_QUERY_REGISTRY_TABLE QueryTable, PVOID Context, PVOID Environment);
NTSTATUS __stdcall RtlQuerySecurityObject(PSECURITY_DESCRIPTOR ObjectDescriptor, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ResultantDescriptor, ULONG DescriptorLength, PULONG ReturnLength);
PWSTR __stdcall RtlQueryTagHeap(PVOID HeapHandle, ULONG Flags, USHORT TagIndex, BOOLEAN ResetCounters, PRTL_HEAP_TAG_INFO HeapTagInfo);
NTSTATUS __stdcall RtlQueryTimeZoneInformation(PRTL_TIME_ZONE_INFORMATION TimeZoneInformation);
NTSTATUS __stdcall RtlQueueWorkItem(WORKERCALLBACKFUNC Function, PVOID Context, ULONG Flags);
void __stdcall RtlRaiseException(PEXCEPTION_RECORD ExceptionRecord);
void __stdcall __noreturn RtlRaiseStatus(NTSTATUS Status);
ULONG __stdcall RtlRandom(PULONG Seed);
ULONG __stdcall RtlRandomEx(PULONG Seed);
PVOID __stdcall RtlReAllocateHeap(HANDLE Heap, ULONG Flags, PVOID Ptr, SIZE_T Size);
HRESULT __stdcall RtlReadMemoryStream(struct IStream *This, PVOID Buffer, ULONG Length, PULONG BytesRead);
HRESULT __stdcall RtlReadOutOfProcessMemoryStream(struct IStream *This, PVOID Buffer, ULONG Length, PULONG BytesRead);
PRTL_SPLAY_LINKS __stdcall RtlRealPredecessor(PRTL_SPLAY_LINKS Links);
PRTL_SPLAY_LINKS __stdcall RtlRealSuccessor(PRTL_SPLAY_LINKS Links);
NTSTATUS __stdcall RtlRegisterSecureMemoryCacheCallback(PRTL_SECURE_MEMORY_CACHE_CALLBACK Callback);
NTSTATUS __stdcall RtlRegisterWait(PHANDLE phNewWaitObject, HANDLE hObject, WAITORTIMERCALLBACKFUNC Callback, PVOID pvContext, ULONG ulMilliseconds, ULONG ulFlags);
void __stdcall RtlReleaseActivationContext(HANDLE handle);
ULONG __stdcall RtlReleaseMemoryStream(struct IStream *This);
void __stdcall RtlReleasePebLock();
void __stdcall RtlReleasePrivilege(PVOID ReturnedState);
void __stdcall RtlReleaseRelativeName(PRTL_RELATIVE_NAME_U RelativeName);
void __stdcall RtlReleaseResource(PRTL_RESOURCE Resource);
NTSTATUS __stdcall RtlRemoteCall(HANDLE Process, HANDLE Thread, PVOID CallSite, ULONG ArgumentCount, PULONG Arguments, BOOLEAN PassContext, BOOLEAN AlreadySuspended);
ULONG __stdcall RtlRemoveVectoredContinueHandler(PVOID VectoredHandlerHandle);
ULONG __stdcall RtlRemoveVectoredExceptionHandler(PVOID VectoredHandlerHandle);
void __stdcall RtlResetRtlTranslations(PNLSTABLEINFO NlsTable);
void __stdcall RtlRestoreLastWin32Error(ULONG LastError);
HRESULT __stdcall RtlRevertMemoryStream(struct IStream *This);
void __stdcall RtlRunDecodeUnicodeString(UCHAR Hash, PUNICODE_STRING String);
void __stdcall RtlRunEncodeUnicodeString(PUCHAR Hash, PUNICODE_STRING String);
DWORD __stdcall RtlRunOnceComplete(PRTL_RUN_ONCE, DWORD, PVOID);
void __stdcall RtlSecondsSince1970ToTime(ULONG SecondsSince1970, PLARGE_INTEGER Time);
void __stdcall RtlSecondsSince1980ToTime(ULONG SecondsSince1980, PLARGE_INTEGER Time);
PVOID __stdcall RtlSecureZeroMemory(PVOID Buffer, SIZE_T Length);
HRESULT __stdcall RtlSeekMemoryStream(struct IStream *This, LARGE_INTEGER RelativeOffset, ULONG Origin, PULARGE_INTEGER ResultOffset);
NTSTATUS __stdcall RtlSelfRelativeToAbsoluteSD(PSECURITY_DESCRIPTOR SelfRelativeSecurityDescriptor, PSECURITY_DESCRIPTOR AbsoluteSecurityDescriptor, PULONG AbsoluteSecurityDescriptorSize, PACL Dacl, PULONG DaclSize, PACL Sacl, PULONG SaclSize, PSID Owner, PULONG OwnerSize, PSID PrimaryGroup, PULONG PrimaryGroupSize);
NTSTATUS __stdcall RtlSelfRelativeToAbsoluteSD2(PSECURITY_DESCRIPTOR SelfRelativeSD, PULONG BufferSize);
void __stdcall RtlSetAllBits(PRTL_BITMAP BitMapHeader);
NTSTATUS __stdcall RtlSetAttributesSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, SECURITY_DESCRIPTOR_CONTROL Control, PULONG Revision);
void __stdcall RtlSetBit(PRTL_BITMAP BitMapHeader, ULONG BitNumber);
void __stdcall RtlSetBits(PRTL_BITMAP BitMapHeader, ULONG StartingIndex, ULONG NumberToSet);
NTSTATUS __stdcall RtlSetControlSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest, SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet);
ULONG __stdcall RtlSetCriticalSectionSpinCount(PRTL_CRITICAL_SECTION CriticalSection, ULONG SpinCount);
NTSTATUS __stdcall RtlSetCurrentDirectory_U(PUNICODE_STRING name);
void __stdcall RtlSetCurrentEnvironment(PWSTR NewEnvironment, PWSTR *OldEnvironment);
NTSTATUS __stdcall RtlSetDaclSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, BOOLEAN DaclPresent, PACL Dacl, BOOLEAN DaclDefaulted);
NTSTATUS __stdcall RtlSetEnvironmentVariable(PWSTR *Environment, PUNICODE_STRING Name, PUNICODE_STRING Value);
NTSTATUS __stdcall RtlSetGroupSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID Group, BOOLEAN GroupDefaulted);
NTSTATUS __stdcall RtlSetHeapInformation(PVOID HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength);
NTSTATUS __stdcall RtlSetInformationAcl(PACL Acl, PVOID Information, ULONG InformationLength, ACL_INFORMATION_CLASS InformationClass);
NTSTATUS __stdcall RtlSetIoCompletionCallback(HANDLE FileHandle, PIO_APC_ROUTINE Callback, ULONG Flags);
void __stdcall RtlSetLastWin32Error(ULONG LastError);
void __stdcall RtlSetLastWin32ErrorAndNtStatusFromNtStatus(NTSTATUS Status);
HRESULT __stdcall RtlSetMemoryStreamSize(struct IStream *This, ULARGE_INTEGER NewSize);
NTSTATUS __stdcall RtlSetOwnerSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID Owner, BOOLEAN OwnerDefaulted);
NTSTATUS __stdcall RtlSetSaclSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor, BOOLEAN SaclPresent, PACL Sacl, BOOLEAN SaclDefaulted);
void __stdcall RtlSetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl);
NTSTATUS __stdcall RtlSetSecurityObject(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor, PGENERIC_MAPPING GenericMapping, HANDLE Token);
NTSTATUS __stdcall RtlSetSecurityObjectEx(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor, ULONG AutoInheritFlags, PGENERIC_MAPPING GenericMapping, HANDLE Token);
NTSTATUS __stdcall RtlSetThreadErrorMode(ULONG NewMode, PULONG OldMode);
NTSTATUS __stdcall RtlSetThreadPoolStartFunc(PRTL_START_POOL_THREAD StartPoolThread, PRTL_EXIT_POOL_THREAD ExitPoolThread);
NTSTATUS __stdcall RtlSetTimeZoneInformation(PRTL_TIME_ZONE_INFORMATION TimeZoneInformation);
void __stdcall RtlSetUnhandledExceptionFilter(PRTLP_UNHANDLED_EXCEPTION_FILTER TopLevelExceptionFilter);
BOOLEAN __stdcall RtlSetUserFlagsHeap(PVOID HeapHandle, ULONG Flags, PVOID BaseAddress, ULONG UserFlagsReset, ULONG UserFlagsSet);
BOOLEAN __stdcall RtlSetUserValueHeap(PVOID HeapHandle, ULONG Flags, PVOID BaseAddress, PVOID UserValue);
SIZE_T __stdcall RtlSizeHeap(PVOID HeapHandle, ULONG Flags, PVOID MemoryPointer);
PRTL_SPLAY_LINKS __stdcall RtlSplay(PRTL_SPLAY_LINKS Links);
NTSTATUS __stdcall RtlStartRXact(PRXACT_CONTEXT Context);
HRESULT __stdcall RtlStatMemoryStream(struct IStream *This, struct tagSTATSTG *Stats, ULONG Flags);
NTSTATUS __stdcall RtlStringFromGUID(const GUID *const Guid, PUNICODE_STRING GuidString);
PUCHAR __stdcall RtlSubAuthorityCountSid(PSID Sid);
PULONG __stdcall RtlSubAuthoritySid(PSID Sid, ULONG SubAuthority);
PRTL_SPLAY_LINKS __stdcall RtlSubtreePredecessor(PRTL_SPLAY_LINKS Links);
PRTL_SPLAY_LINKS __stdcall RtlSubtreeSuccessor(PRTL_SPLAY_LINKS Links);
NTSTATUS __stdcall RtlSystemTimeToLocalTime(PLARGE_INTEGER SystemTime, PLARGE_INTEGER LocalTime);
BOOLEAN __stdcall RtlTestBit(PRTL_BITMAP BitMapHeader, ULONG BitNumber);
BOOLEAN __stdcall RtlTimeFieldsToTime(PTIME_FIELDS TimeFields, PLARGE_INTEGER Time);
void __stdcall RtlTimeToElapsedTimeFields(PLARGE_INTEGER Time, PTIME_FIELDS TimeFields);
BOOLEAN __stdcall RtlTimeToSecondsSince1970(PLARGE_INTEGER Time, PULONG ElapsedSeconds);
BOOLEAN __stdcall RtlTimeToSecondsSince1980(PLARGE_INTEGER Time, PULONG SecondsSince1980);
void __stdcall RtlTimeToTimeFields(PLARGE_INTEGER Time, PTIME_FIELDS TimeFields);
BOOLEAN __stdcall RtlTraceDatabaseAdd(PRTL_TRACE_DATABASE Database, ULONG Count, PVOID *Trace, PRTL_TRACE_BLOCK *TraceBlock);
PRTL_TRACE_DATABASE __stdcall RtlTraceDatabaseCreate(ULONG Buckets, SIZE_T MaximumSize, ULONG Flags, ULONG Tag, RTL_TRACE_HASH_FUNCTION HashFunction);
BOOLEAN __stdcall RtlTraceDatabaseDestroy(PRTL_TRACE_DATABASE Database);
BOOLEAN __stdcall RtlTraceDatabaseEnumerate(PRTL_TRACE_DATABASE Database, PRTL_TRACE_ENUMERATE TraceEnumerate, PRTL_TRACE_BLOCK *TraceBlock);
BOOLEAN __stdcall RtlTraceDatabaseFind(PRTL_TRACE_DATABASE Database, ULONG Count, PVOID *Trace, PRTL_TRACE_BLOCK *TraceBlock);
BOOLEAN __stdcall RtlTraceDatabaseLock(PRTL_TRACE_DATABASE Database);
BOOLEAN __stdcall RtlTraceDatabaseUnlock(PRTL_TRACE_DATABASE Database);
BOOLEAN __stdcall RtlTraceDatabaseValidate(PRTL_TRACE_DATABASE Database);
BOOLEAN __stdcall RtlTryEnterCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
LONG __stdcall RtlUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo);
DWORD __stdcall RtlUnicodeStringToAnsiSize(const UNICODE_STRING *);
NTSTATUS __stdcall RtlUnicodeStringToAnsiString(PANSI_STRING DestinationString, PCUNICODE_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUnicodeStringToCountedOemString(POEM_STRING OemDest, PCUNICODE_STRING UniSource, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUnicodeStringToInteger(PCUNICODE_STRING String, ULONG Base, PULONG Value);
DWORD __stdcall RtlUnicodeStringToOemSize(const UNICODE_STRING *);
NTSTATUS __stdcall RtlUnicodeStringToOemString(POEM_STRING DestinationString, PCUNICODE_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUnicodeToCustomCPN(PCPTABLEINFO CustomCP, PCHAR CustomString, ULONG CustomSize, PULONG ResultSize, PWCHAR UnicodeString, ULONG UnicodeSize);
NTSTATUS __stdcall RtlUnicodeToMultiByteN(PCHAR MbString, ULONG MbSize, PULONG ResultSize, PCWCH UnicodeString, ULONG UnicodeSize);
NTSTATUS __stdcall RtlUnicodeToMultiByteSize(PULONG MbSize, PCWCH UnicodeString, ULONG UnicodeSize);
NTSTATUS __stdcall RtlUnicodeToOemN(PCHAR OemString, ULONG OemSize, PULONG ResultSize, PCWCH UnicodeString, ULONG UnicodeSize);
ULONG __stdcall RtlUniform(PULONG Seed);
NTSTATUS __stdcall RtlUnlockBootStatusData(HANDLE FileHandle);
BOOLEAN __stdcall RtlUnlockHeap(HANDLE Heap);
HRESULT __stdcall RtlUnlockMemoryStreamRegion(struct IStream *This, ULARGE_INTEGER Offset, ULARGE_INTEGER Length, ULONG LockType);
void __stdcall RtlUnwind(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue);
WCHAR __stdcall RtlUpcaseUnicodeChar(WCHAR Source);
NTSTATUS __stdcall RtlUpcaseUnicodeString(PUNICODE_STRING DestinationString, PCUNICODE_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUpcaseUnicodeStringToAnsiString(PANSI_STRING AnsiDest, PCUNICODE_STRING UniSource, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUpcaseUnicodeStringToCountedOemString(POEM_STRING DestinationString, PCUNICODE_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUpcaseUnicodeStringToOemString(POEM_STRING DestinationString, PCUNICODE_STRING SourceString, BOOLEAN AllocateDestinationString);
NTSTATUS __stdcall RtlUpcaseUnicodeToCustomCPN(PCPTABLEINFO CustomCP, PCHAR CustomString, ULONG CustomSize, PULONG ResultSize, PWCHAR UnicodeString, ULONG UnicodeSize);
NTSTATUS __stdcall RtlUpcaseUnicodeToMultiByteN(PCHAR MbString, ULONG MbSize, PULONG ResultSize, PCWCH UnicodeString, ULONG UnicodeSize);
NTSTATUS __stdcall RtlUpcaseUnicodeToOemN(PCHAR OemString, ULONG OemSize, PULONG ResultSize, PCWCH UnicodeString, ULONG UnicodeSize);
NTSTATUS __stdcall RtlUpdateTimer(HANDLE TimerQueue, HANDLE Timer, ULONG DueTime, ULONG Period);
CHAR __stdcall RtlUpperChar(CHAR Source);
void __stdcall RtlUpperString(PSTRING DestinationString, const STRING *SourceString);
NTSTATUS __stdcall RtlUsageHeap(HANDLE Heap, ULONG Flags, PRTL_HEAP_USAGE Usage);
BOOLEAN __stdcall RtlValidAcl(PACL Acl);
BOOLEAN __stdcall RtlValidRelativeSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptorInput, ULONG SecurityDescriptorLength, SECURITY_INFORMATION RequiredInformation);
BOOLEAN __stdcall RtlValidSecurityDescriptor(PSECURITY_DESCRIPTOR SecurityDescriptor);
BOOLEAN __stdcall RtlValidSid(PSID Sid);
BOOLEAN __stdcall RtlValidateHeap(HANDLE Heap, ULONG Flags, PVOID P);
BOOLEAN __stdcall RtlValidateProcessHeaps();
NTSTATUS __stdcall RtlValidateUnicodeString(ULONG Flags, PCUNICODE_STRING String);
NTSTATUS __stdcall RtlVerifyVersionInfo(PRTL_OSVERSIONINFOEXW VersionInfo, ULONG TypeMask, ULONGLONG ConditionMask);
ULONG __stdcall RtlWalkFrameChain(PVOID *Callers, ULONG Count, ULONG Flags);
NTSTATUS __stdcall RtlWalkHeap(HANDLE HeapHandle, PVOID HeapEntry);
NTSTATUS __stdcall RtlWow64EnableFsRedirection(BOOLEAN Wow64FsEnableRedirection);
NTSTATUS __stdcall RtlWow64EnableFsRedirectionEx(PVOID Wow64FsEnableRedirection, PVOID *OldFsRedirectionLevel);
HRESULT __stdcall RtlWriteMemoryStream(struct IStream *This, const void *Buffer, ULONG Length, PULONG BytesWritten);
NTSTATUS __stdcall RtlWriteRegistryValue(ULONG RelativeTo, PCWSTR Path, PCWSTR ValueName, ULONG ValueType, PVOID ValueData, ULONG ValueLength);
BOOLEAN __stdcall RtlZeroHeap(PVOID HeapHandle, ULONG Flags);
void __stdcall RtlZeroMemory(PVOID Destination, SIZE_T Length);
NTSTATUS __stdcall RtlZombifyActivationContext(PVOID Context);
NTSTATUS __stdcall RtlpApplyLengthFunction(ULONG Flags, ULONG Type, PVOID UnicodeStringOrUnicodeStringBuffer, PVOID LengthFunction);
NTSTATUS __stdcall RtlpEnsureBufferSize(ULONG Flags, PRTL_BUFFER Buffer, SIZE_T RequiredSize);
NTSTATUS __stdcall RtlpNtCreateKey(HANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG TitleIndex, PUNICODE_STRING Class, PULONG Disposition);
NTSTATUS __stdcall RtlpNtEnumerateSubKey(HANDLE KeyHandle, PUNICODE_STRING SubKeyName, ULONG Index, ULONG Unused);
NTSTATUS __stdcall RtlpNtMakeTemporaryKey(HANDLE KeyHandle);
NTSTATUS __stdcall RtlpNtOpenKey(HANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG Unused);
NTSTATUS __stdcall RtlpNtQueryValueKey(HANDLE KeyHandle, PULONG Type, PVOID Data, PULONG DataLength, ULONG Unused);
NTSTATUS __stdcall RtlpNtSetValueKey(HANDLE KeyHandle, ULONG Type, PVOID Data, ULONG DataLength);
void __stdcall RtlpUnWaitCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
NTSTATUS __stdcall RtlpWaitForCriticalSection(PRTL_CRITICAL_SECTION CriticalSection);
ULONG __stdcall RtlxAnsiStringToUnicodeSize(PCANSI_STRING AnsiString);
ULONG __stdcall RtlxOemStringToUnicodeSize(PCOEM_STRING OemString);
ULONG __stdcall RtlxUnicodeStringToAnsiSize(PCUNICODE_STRING UnicodeString);
ULONG __stdcall RtlxUnicodeStringToOemSize(PCUNICODE_STRING UnicodeString);
_ACTIVATION_CONTEXT_INFO_CLASS RunlevelInformationInActivationContext;
_KTHREAD_STATE Running;
MACRO_SECURITY_INFORMATION SACL_SECURITY_INFORMATION;
MACRO_CTM SAVE_CTM;
MACRO_SB SB_CONST_ALPHA;
MACRO_SB SB_GRAD_RECT;
MACRO_SB SB_GRAD_TRI;
MACRO_SB SB_NONE;
MACRO_SB SB_PIXEL_ALPHA;
MACRO_SB SB_PREMULT_ALPHA;
MACRO_SCALINGFACTORX SCALINGFACTORX;
MACRO_SCALINGFACTORY SCALINGFACTORY;
MACRO_SCARD SCARD_S_SUCCESS;
MACRO_SCHED SCHED_E_SERVICE_NOT_LOCALSYSTEM;
MACRO_SECTION SECTION_ALL_ACCESS;
MACRO_SECTION SECTION_EXTEND_SIZE;
MACRO_SECTION SECTION_MAP_EXECUTE;
MACRO_SECTION SECTION_MAP_EXECUTE_EXPLICIT;
MACRO_SECTION SECTION_MAP_READ;
MACRO_SECTION SECTION_MAP_WRITE;
MACRO_SECTION SECTION_QUERY;
MACRO_SECURITY_NULL SECURITY_ANONYMOUS_LOGON_RID;
MACRO_SECURITY_NULL SECURITY_APPPOOL_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_APPPOOL_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_AUTHENTICATED_USER_RID;
MACRO_SECURITY_NULL SECURITY_BATCH_RID;
MACRO_SECURITY_NULL SECURITY_BUILTIN_DOMAIN_RID;
MACRO_SECURITY_NULL SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_COM_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_CREATOR_GROUP_RID;
MACRO_SECURITY_NULL SECURITY_CREATOR_GROUP_SERVER_RID;
MACRO_SECURITY_NULL SECURITY_CREATOR_OWNER_RID;
MACRO_SECURITY_NULL SECURITY_CREATOR_OWNER_RIGHTS_RID;
MACRO_SECURITY_NULL SECURITY_CREATOR_OWNER_SERVER_RID;
MACRO_SECURITY_NULL SECURITY_CRED_TYPE_BASE_RID;
MACRO_SECURITY_NULL SECURITY_CRED_TYPE_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_CRED_TYPE_THIS_ORG_CERT_RID;
MACRO_REVISION SECURITY_DESCRIPTOR_REVISION;
MACRO_SECURITY SECURITY_DESCRIPTOR_REVISION1;
MACRO_SECURITY_NULL SECURITY_DIALUP_RID;
MACRO_SECURITY_DYNAMIC SECURITY_DYNAMIC_TRACKING;
MACRO_SECURITY_NULL SECURITY_ENTERPRISE_CONTROLLERS_RID;
MACRO_SECURITY_NULL SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID;
MACRO_SECURITY_NULL SECURITY_INTERACTIVE_RID;
MACRO_SECURITY_NULL SECURITY_IUSER_RID;
MACRO_SECURITY_NULL SECURITY_LOCAL_LOGON_RID;
MACRO_SECURITY_NULL SECURITY_LOCAL_RID;
MACRO_SECURITY_NULL SECURITY_LOCAL_SERVICE_RID;
MACRO_SECURITY_NULL SECURITY_LOCAL_SYSTEM_RID;
MACRO_SECURITY_NULL SECURITY_LOGON_IDS_RID;
MACRO_SECURITY_NULL SECURITY_LOGON_IDS_RID_COUNT;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_HIGH_RID;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_LOW_RID;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_MAXIMUM_USER_RID;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_MEDIUM_RID;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_PROTECTED_PROCESS_RID;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_SYSTEM_RID;
MACRO_SECURITY_MANDATORY SECURITY_MANDATORY_UNTRUSTED_RID;
MACRO_SECURITY_NULL SECURITY_MAX_ALWAYS_FILTERED;
MACRO_SECURITY_NULL SECURITY_MAX_BASE_RID;
MACRO_SECURITY_NULL SECURITY_MIN_BASE_RID;
MACRO_SECURITY_NULL SECURITY_MIN_NEVER_FILTERED;
MACRO_SECURITY_NULL SECURITY_NETWORK_RID;
MACRO_SECURITY_NULL SECURITY_NETWORK_SERVICE_RID;
MACRO_SECURITY_NULL SECURITY_NFS_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_NT_NON_UNIQUE;
MACRO_SECURITY_NULL SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT;
MACRO_SECURITY_NULL SECURITY_NULL_RID;
MACRO_SECURITY_NULL SECURITY_OTHER_ORGANIZATION_RID;
MACRO_SECURITY_NULL SECURITY_PACKAGE_BASE_RID;
MACRO_SECURITY_NULL SECURITY_PACKAGE_DIGEST_RID;
MACRO_SECURITY_NULL SECURITY_PACKAGE_NTLM_RID;
MACRO_SECURITY_NULL SECURITY_PACKAGE_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_PACKAGE_SCHANNEL_RID;
MACRO_SECURITY_NULL SECURITY_PRINCIPAL_SELF_RID;
MACRO_SECURITY_NULL SECURITY_PROXY_RID;
MACRO_SECURITY_NULL SECURITY_REMOTE_LOGON_RID;
MACRO_SECURITY_NULL SECURITY_RESERVED_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_RESTRICTED_CODE_RID;
MACRO_SECURITY_NULL SECURITY_SERVER_LOGON_RID;
MACRO_SECURITY_NULL SECURITY_SERVICE_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_SERVICE_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_SERVICE_RID;
MACRO_SECURITY_DYNAMIC SECURITY_STATIC_TRACKING;
MACRO_SECURITY_NULL SECURITY_TASK_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_TERMINAL_SERVER_RID;
MACRO_SECURITY_NULL SECURITY_THIS_ORGANIZATION_RID;
MACRO_SECURITY_NULL SECURITY_USERMODEDRIVERHOST_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_VIRTUALACCOUNT_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_VIRTUALSERVER_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_VIRTUALSERVER_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_WINDOWSMOBILE_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_WMIHOST_ID_BASE_RID;
MACRO_SECURITY_NULL SECURITY_WMIHOST_ID_RID_COUNT;
MACRO_SECURITY_NULL SECURITY_WORLD_RID;
MACRO_SECURITY_NULL SECURITY_WRITE_RESTRICTED_CODE_RID;
MACRO_SEC_BASED SEC_BASED;
MACRO_SEC SEC_COMMIT;
MACRO_SEC SEC_FILE;
MACRO_SEC SEC_IMAGE;
MACRO_SEC SEC_IMAGE_NO_EXECUTE;
MACRO_SEC SEC_LARGE_PAGES;
MACRO_SEC SEC_NOCACHE;
MACRO_SEC SEC_NO_CHANGE;
MACRO_SEC SEC_RESERVE;
MACRO_SEC SEC_VLM;
MACRO_SEC SEC_WRITECOMBINE;
MACRO_SEEK SEEK_CUR;
MACRO_SEEK SEEK_END;
MACRO_SEEK SEEK_SET;
MACRO_SELECTPAPERSOURCE SELECTPAPERSOURCE;
MACRO_QUERY_STATE SEMAPHORE_QUERY_STATE;
MACRO_SEM SEM_FAILCRITICALERRORS;
MACRO_SEM SEM_NOALIGNMENTFAULTEXCEPT;
MACRO_SEM SEM_NOGPFAULTERRORBOX;
MACRO_SEM SEM_NOOPENFILEERRORBOX;
MACRO_SERIAL SERIAL_LSRMST_ESCAPE;
MACRO_SERIAL SERIAL_LSRMST_LSR_DATA;
MACRO_SERIAL SERIAL_LSRMST_LSR_NODATA;
MACRO_SERIAL SERIAL_LSRMST_MST;
MACRO_SERVICE SERVICE_ADAPTER;
MACRO_SERVICE SERVICE_AUTO_START;
MACRO_SERVICE SERVICE_BOOT_START;
MACRO_SERVICE SERVICE_DEMAND_START;
MACRO_SERVICE_DESCRIPTOR SERVICE_DESCRIPTOR_BASE;
MACRO_SERVICE_DESCRIPTOR SERVICE_DESCRIPTOR_COUNT;
MACRO_SERVICE_DESCRIPTOR SERVICE_DESCRIPTOR_LENGTH;
MACRO_SERVICE_DESCRIPTOR SERVICE_DESCRIPTOR_LIMIT;
MACRO_SERVICE_DESCRIPTOR SERVICE_DESCRIPTOR_NUMBER;
MACRO_SERVICE SERVICE_DISABLED;
MACRO_SERVICE SERVICE_DRIVER;
MACRO_SERVICE SERVICE_ERROR_CRITICAL;
MACRO_SERVICE SERVICE_ERROR_IGNORE;
MACRO_SERVICE SERVICE_ERROR_NORMAL;
MACRO_SERVICE SERVICE_ERROR_SEVERE;
MACRO_SERVICE SERVICE_FILE_SYSTEM_DRIVER;
MACRO_SERVICE SERVICE_INTERACTIVE_PROCESS;
MACRO_SERVICE SERVICE_KERNEL_DRIVER;
MACRO_SERVICE_TABLE SERVICE_NUMBER_MASK;
MACRO_SERVICE SERVICE_RECOGNIZER_DRIVER;
MACRO_SERVICE SERVICE_SYSTEM_START;
MACRO_SERVICE_TABLE SERVICE_TABLE_MASK;
MACRO_SERVICE_TABLE SERVICE_TABLE_SHIFT;
MACRO_SERVICE_TABLE SERVICE_TABLE_TEST;
MACRO_SERVICE SERVICE_TYPE_ALL;
MACRO_SERVICE SERVICE_WIN32;
MACRO_SERVICE SERVICE_WIN32_OWN_PROCESS;
MACRO_SERVICE SERVICE_WIN32_SHARE_PROCESS;
MACRO_SETABORTPROC SETABORTPROC;
MACRO_SETALLJUSTVALUES SETALLJUSTVALUES;
MACRO_SETCHARSET SETCHARSET;
MACRO_NEXTBAND SETCOLORTABLE;
MACRO_SETCOPYCOUNT SETCOPYCOUNT;
MACRO_ENUMPAPERBINS SETDIBSCALING;
MACRO_EMBEDED SETICMPROFILE_EMBEDED;
MACRO_SETKERNTRACK SETKERNTRACK;
MACRO_SETLINECAP SETLINECAP;
MACRO_SETLINEJOIN SETLINEJOIN;
MACRO_SETMITERLIMIT SETMITERLIMIT;
MACRO_SET SET_ARC_DIRECTION;
MACRO_SET SET_BACKGROUND_COLOR;
MACRO_SET_CLIP SET_BOUNDS;
MACRO_SET_CLIP SET_CLIP_BOX;
MACRO_SET_CLIP SET_MIRROR_MODE;
MACRO_SET SET_POLY_MODE;
MACRO_SET SET_SCREEN_ANGLE;
MACRO_SET SET_SPREAD;
MACRO_SEVERITY SEVERITY_ERROR;
MACRO_SEVERITY SEVERITY_SUCCESS;
MACRO_SE_MIN SE_ASSIGNPRIMARYTOKEN_PRIVILEGE;
MACRO_SE_MIN SE_AUDIT_PRIVILEGE;
MACRO_SE_MIN SE_BACKUP_PRIVILEGE;
MACRO_SE_MIN SE_CHANGE_NOTIFY_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_GLOBAL_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_PAGEFILE_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_PERMANENT_PRIVILEGE;
MACRO_SE_MIN SE_CREATE_TOKEN_PRIVILEGE;
MACRO_SE_OWNER SE_DACL_AUTO_INHERITED;
MACRO_SE_OWNER SE_DACL_AUTO_INHERIT_REQ;
MACRO_SE_OWNER SE_DACL_DEFAULTED;
MACRO_SE_OWNER SE_DACL_PRESENT;
MACRO_SE_OWNER SE_DACL_PROTECTED;
MACRO_SE_OWNER SE_DACL_UNTRUSTED;
MACRO_SE_MIN SE_DEBUG_PRIVILEGE;
MACRO_SE_MIN SE_ENABLE_DELEGATION_PRIVILEGE;
MACRO_SE_OWNER SE_GROUP_DEFAULTED;
MACRO_SE SE_GROUP_ENABLED;
MACRO_SE SE_GROUP_ENABLED_BY_DEFAULT;
MACRO_SE SE_GROUP_INTEGRITY;
MACRO_SE SE_GROUP_INTEGRITY_ENABLED;
MACRO_SE SE_GROUP_LOGON_ID;
MACRO_SE SE_GROUP_MANDATORY;
MACRO_SE SE_GROUP_OWNER;
MACRO_SE SE_GROUP_RESOURCE;
MACRO_SE SE_GROUP_USE_FOR_DENY_ONLY;
MACRO_SE SE_GROUP_VALID_ATTRIBUTES;
MACRO_SE_MIN SE_IMPERSONATE_PRIVILEGE;
MACRO_SE_MIN SE_INCREASE_QUOTA_PRIVILEGE;
MACRO_SE_MIN SE_INC_BASE_PRIORITY_PRIVILEGE;
MACRO_SE_MIN SE_LOAD_DRIVER_PRIVILEGE;
MACRO_SE_MIN SE_LOCK_MEMORY_PRIVILEGE;
MACRO_SE_MIN SE_MACHINE_ACCOUNT_PRIVILEGE;
MACRO_SE_MIN SE_MANAGE_VOLUME_PRIVILEGE;
MACRO_SE_MIN SE_MAX_WELL_KNOWN_PRIVILEGE;
MACRO_SE_MIN SE_MIN_WELL_KNOWN_PRIVILEGE;
MACRO_SE_OWNER SE_OWNER_DEFAULTED;
MACRO_SE_PRIVILEGE SE_PRIVILEGE_ENABLED;
MACRO_SE_PRIVILEGE SE_PRIVILEGE_ENABLED_BY_DEFAULT;
MACRO_SE_PRIVILEGE SE_PRIVILEGE_REMOVED;
MACRO_SE_PRIVILEGE SE_PRIVILEGE_USED_FOR_ACCESS;
MACRO_SE_PRIVILEGE SE_PRIVILEGE_VALID_ATTRIBUTES;
MACRO_SE_MIN SE_PROF_SINGLE_PROCESS_PRIVILEGE;
MACRO_SE_MIN SE_REMOTE_SHUTDOWN_PRIVILEGE;
MACRO_SE_MIN SE_RESTORE_PRIVILEGE;
MACRO_SE_OWNER SE_RM_CONTROL_VALID;
MACRO_SE_OWNER SE_SACL_AUTO_INHERITED;
MACRO_SE_OWNER SE_SACL_AUTO_INHERIT_REQ;
MACRO_SE_OWNER SE_SACL_DEFAULTED;
MACRO_SE_OWNER SE_SACL_PRESENT;
MACRO_SE_OWNER SE_SACL_PROTECTED;
MACRO_SE_SECURITY SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE;
MACRO_SE_SECURITY SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE;
MACRO_SE_SECURITY SE_SECURITY_DESCRIPTOR_VALID_FLAGS;
MACRO_SE_MIN SE_SECURITY_PRIVILEGE;
MACRO_SE_OWNER SE_SELF_RELATIVE;
MACRO_SE_OWNER SE_SERVER_SECURITY;
MACRO_SE_MIN SE_SHUTDOWN_PRIVILEGE;
MACRO_SE_MIN SE_SYNC_AGENT_PRIVILEGE;
MACRO_SE_MIN SE_SYSTEMTIME_PRIVILEGE;
MACRO_SE_MIN SE_SYSTEM_ENVIRONMENT_PRIVILEGE;
MACRO_SE_MIN SE_SYSTEM_PROFILE_PRIVILEGE;
MACRO_SE_MIN SE_TAKE_OWNERSHIP_PRIVILEGE;
MACRO_SE_MIN SE_TCB_PRIVILEGE;
MACRO_SE_MIN SE_UNDOCK_PRIVILEGE;
MACRO_SE_MIN SE_UNSOLICITED_INPUT_PRIVILEGE;
MACRO_SGI SGI_EXTRASPACE;
MACRO_SHADEBLENDCAPS SHADEBLENDCAPS;
MACRO_CHARSET SHIFTJIS_CHARSET;
MACRO_SID SID_HASH_SIZE;
MACRO_SID SID_MAX_SUB_AUTHORITIES;
MACRO_SID SID_RECOMMENDED_SUB_AUTHORITIES;
MACRO_SID SID_REVISION;
MACRO_NULLREGION SIMPLEREGION;
MACRO_SIZEOF_EXCEPTION SIZEOF_EXCEPTION_RECORD;
MACRO_SIZEOF_FX SIZEOF_FX_SAVE_AREA;
MACRO_SIZEOF SIZEOF_RFPO_DATA;
MACRO_SIZEPALETTE SIZEPALETTE;
MACRO_SIZE SIZE_OF_80387_REGISTERS;
MACRO_SORT SORT_CHINESE_BIG5;
MACRO_SORT SORT_CHINESE_BOPOMOFO;
MACRO_SORT SORT_CHINESE_PRC;
MACRO_SORT SORT_CHINESE_PRCP;
MACRO_SORT SORT_CHINESE_RADICALSTROKE;
MACRO_SORT SORT_CHINESE_UNICODE;
MACRO_SORT SORT_DEFAULT;
MACRO_SORT SORT_GEORGIAN_MODERN;
MACRO_SORT SORT_GEORGIAN_TRADITIONAL;
MACRO_SORT SORT_GERMAN_PHONE_BOOK;
MACRO_SORT SORT_HUNGARIAN_DEFAULT;
MACRO_SORT SORT_HUNGARIAN_TECHNICAL;
MACRO_SORT SORT_INVARIANT_MATH;
MACRO_SORT SORT_JAPANESE_RADICALSTROKE;
MACRO_SORT SORT_JAPANESE_UNICODE;
MACRO_SORT SORT_JAPANESE_XJIS;
MACRO_SORT SORT_KOREAN_KSC;
MACRO_SORT SORT_KOREAN_UNICODE;
MACRO_SO SO_BREAK_EXTRA;
MACRO_SO SO_CHARACTER_EXTRA;
MACRO_SO SO_CHAR_INC_EQUAL_BM_BASE;
MACRO_SO SO_DO_NOT_SUBSTITUTE_DEVICE_FONT;
MACRO_SO SO_DXDY;
MACRO_SO SO_ESC_NOT_ORIENT;
MACRO_SO SO_FLAG_DEFAULT_PLACEMENT;
MACRO_SO SO_GLYPHINDEX_TEXTOUT;
MACRO_SO SO_HORIZONTAL;
MACRO_SO SO_MAXEXT_EQUAL_BM_SIDE;
MACRO_SO SO_REVERSED;
MACRO_SO SO_VERTICAL;
MACRO_SO SO_ZERO_BEARINGS;
MACRO_SPECIFIC SPECIFIC_RIGHTS_ALL;
MACRO_SPS SPS_ACCEPT_EXCLUDE;
MACRO_SPS SPS_ACCEPT_NOEXCLUDE;
MACRO_SPS SPS_ACCEPT_SYNCHRONOUS;
MACRO_SPS SPS_ALPHA;
MACRO_SPS SPS_ANIMATESTART;
MACRO_SPS SPS_ANIMATEUPDATE;
MACRO_SPS SPS_ASYNCCHANGE;
MACRO_SPS SPS_CHANGE;
MACRO_SPS SPS_DECLINE;
MACRO_SPS SPS_ERROR;
MACRO_SPS SPS_FLAGSMASK;
MACRO_SPS SPS_FREQMASK;
MACRO_SPS SPS_LENGTHMASK;
MACRO_SPS SPS_RESERVED;
MACRO_SPS SPS_RESERVED1;
MACRO_MASK SPVERSION_MASK;
MACRO_SP SP_APPABORT;
MACRO_SP SP_ERROR;
MACRO_SP_NOTREPORTED SP_NOTREPORTED;
MACRO_SP SP_OUTOFDISK;
MACRO_SP SP_OUTOFMEMORY;
MACRO_SP SP_USERABORT;
MACRO_SRCAND SRCAND;
MACRO_SRCCOPY SRCCOPY;
MACRO_SRCERASE SRCERASE;
MACRO_SRCINVERT SRCINVERT;
MACRO_SRCPAINT SRCPAINT;
MACRO_SSDT SSDT_MAX_ENTRIES;
MACRO_SS SS_FREE;
MACRO_SS SS_RESTORE;
MACRO_SS SS_SAVE;
MACRO_STAMP STAMP_AXESLIST;
MACRO_STAMP STAMP_DESIGNVECTOR;
MACRO_STANDARD STANDARD_RIGHTS_ALL;
MACRO_STANDARD STANDARD_RIGHTS_EXECUTE;
MACRO_STANDARD STANDARD_RIGHTS_READ;
MACRO_STANDARD STANDARD_RIGHTS_REQUIRED;
MACRO_STANDARD STANDARD_RIGHTS_WRITE;
MACRO_STARTDOC STARTDOC;
MACRO_STATUS STATUS_SEVERITY_ERROR;
MACRO_STATUS STATUS_SEVERITY_INFORMATIONAL;
MACRO_STATUS STATUS_SEVERITY_SUCCESS;
MACRO_STATUS STATUS_SEVERITY_WARNING;
MACRO_FILENO STDERR_FILENO;
MACRO_FILENO STDIN_FILENO;
MACRO_FILENO STDOUT_FILENO;
MACRO_STOCK STOCK_LAST;
MACRO_SETCHARSET STRETCHBLT;
MACRO_STRETCH STRETCH_ANDSCANS;
MACRO_STRETCH STRETCH_DELETESCANS;
MACRO_STRETCH STRETCH_HALFTONE;
MACRO_STRETCH STRETCH_ORSCANS;
MACRO_STRICT STRICT;
BOOL __stdcall STROBJ_bEnum(STROBJ *pstro, ULONG *pc, PGLYPHPOS *ppgpos);
BOOL __stdcall STROBJ_bEnumPositionsOnly(STROBJ *pstro, ULONG *pc, PGLYPHPOS *ppgpos);
BOOL __stdcall STROBJ_bGetAdvanceWidths(STROBJ *pso, ULONG iFirst, ULONG c, POINTQF *pptqD);
DWORD __stdcall STROBJ_dwGetCodePage(STROBJ *pstro);
FIX __stdcall STROBJ_fxBreakExtra(STROBJ *pstro);
FIX __stdcall STROBJ_fxCharacterExtra(STROBJ *pstro);
void __stdcall STROBJ_vEnumStart(STROBJ *pstro);
MACRO_EILSEQ STRUNCATE;
MACRO_STYPE STYPE_BITMAP;
MACRO_STYPE STYPE_DEVBITMAP;
MACRO_STYPE STYPE_DEVICE;
MACRO_SUBLANG SUBLANG_AFRIKAANS_SOUTH_AFRICA;
MACRO_SUBLANG SUBLANG_ALBANIAN_ALBANIA;
MACRO_SUBLANG SUBLANG_ALSATIAN_FRANCE;
MACRO_SUBLANG SUBLANG_AMHARIC_ETHIOPIA;
MACRO_SUBLANG SUBLANG_ARABIC_ALGERIA;
MACRO_SUBLANG SUBLANG_ARABIC_BAHRAIN;
MACRO_SUBLANG SUBLANG_ARABIC_EGYPT;
MACRO_SUBLANG SUBLANG_ARABIC_IRAQ;
MACRO_SUBLANG SUBLANG_ARABIC_JORDAN;
MACRO_SUBLANG SUBLANG_ARABIC_KUWAIT;
MACRO_SUBLANG SUBLANG_ARABIC_LEBANON;
MACRO_SUBLANG SUBLANG_ARABIC_LIBYA;
MACRO_SUBLANG SUBLANG_ARABIC_MOROCCO;
MACRO_SUBLANG SUBLANG_ARABIC_OMAN;
MACRO_SUBLANG SUBLANG_ARABIC_QATAR;
MACRO_SUBLANG SUBLANG_ARABIC_SAUDI_ARABIA;
MACRO_SUBLANG SUBLANG_ARABIC_SYRIA;
MACRO_SUBLANG SUBLANG_ARABIC_TUNISIA;
MACRO_SUBLANG SUBLANG_ARABIC_UAE;
MACRO_SUBLANG SUBLANG_ARABIC_YEMEN;
MACRO_SUBLANG SUBLANG_ARMENIAN_ARMENIA;
MACRO_SUBLANG SUBLANG_ASSAMESE_INDIA;
MACRO_SUBLANG SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC;
MACRO_SUBLANG SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN;
MACRO_SUBLANG SUBLANG_AZERI_CYRILLIC;
MACRO_SUBLANG SUBLANG_AZERI_LATIN;
MACRO_SUBLANG SUBLANG_BANGLA_BANGLADESH;
MACRO_SUBLANG SUBLANG_BANGLA_INDIA;
MACRO_SUBLANG SUBLANG_BASHKIR_RUSSIA;
MACRO_SUBLANG SUBLANG_BASQUE_BASQUE;
MACRO_SUBLANG SUBLANG_BELARUSIAN_BELARUS;
MACRO_SUBLANG SUBLANG_BENGALI_BANGLADESH;
MACRO_SUBLANG SUBLANG_BENGALI_INDIA;
MACRO_SUBLANG SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC;
MACRO_SUBLANG SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN;
MACRO_SUBLANG SUBLANG_BRETON_FRANCE;
MACRO_SUBLANG SUBLANG_BULGARIAN_BULGARIA;
MACRO_SUBLANG SUBLANG_CATALAN_CATALAN;
MACRO_SUBLANG SUBLANG_CENTRAL_KURDISH_IRAQ;
MACRO_SUBLANG SUBLANG_CHEROKEE_CHEROKEE;
MACRO_SUBLANG SUBLANG_CHINESE_HONGKONG;
MACRO_SUBLANG SUBLANG_CHINESE_MACAU;
MACRO_SUBLANG SUBLANG_CHINESE_SIMPLIFIED;
MACRO_SUBLANG SUBLANG_CHINESE_SINGAPORE;
MACRO_SUBLANG SUBLANG_CHINESE_TRADITIONAL;
MACRO_SUBLANG SUBLANG_CORSICAN_FRANCE;
MACRO_SUBLANG SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN;
MACRO_SUBLANG SUBLANG_CROATIAN_CROATIA;
MACRO_SUBLANG SUBLANG_CUSTOM_DEFAULT;
MACRO_SUBLANG SUBLANG_CUSTOM_UNSPECIFIED;
MACRO_SUBLANG SUBLANG_CZECH_CZECH_REPUBLIC;
MACRO_SUBLANG SUBLANG_DANISH_DENMARK;
MACRO_SUBLANG SUBLANG_DARI_AFGHANISTAN;
MACRO_SUBLANG SUBLANG_DEFAULT;
MACRO_SUBLANG SUBLANG_DIVEHI_MALDIVES;
MACRO_SUBLANG SUBLANG_DUTCH;
MACRO_SUBLANG SUBLANG_DUTCH_BELGIAN;
MACRO_SUBLANG SUBLANG_ENGLISH_AUS;
MACRO_SUBLANG SUBLANG_ENGLISH_BELIZE;
MACRO_SUBLANG SUBLANG_ENGLISH_CAN;
MACRO_SUBLANG SUBLANG_ENGLISH_CARIBBEAN;
MACRO_SUBLANG SUBLANG_ENGLISH_EIRE;
MACRO_SUBLANG SUBLANG_ENGLISH_INDIA;
MACRO_SUBLANG SUBLANG_ENGLISH_JAMAICA;
MACRO_SUBLANG SUBLANG_ENGLISH_MALAYSIA;
MACRO_SUBLANG SUBLANG_ENGLISH_NZ;
MACRO_SUBLANG SUBLANG_ENGLISH_PHILIPPINES;
MACRO_SUBLANG SUBLANG_ENGLISH_SINGAPORE;
MACRO_SUBLANG SUBLANG_ENGLISH_SOUTH_AFRICA;
MACRO_SUBLANG SUBLANG_ENGLISH_TRINIDAD;
MACRO_SUBLANG SUBLANG_ENGLISH_UK;
MACRO_SUBLANG SUBLANG_ENGLISH_US;
MACRO_SUBLANG SUBLANG_ENGLISH_ZIMBABWE;
MACRO_SUBLANG SUBLANG_ESTONIAN_ESTONIA;
MACRO_SUBLANG SUBLANG_FAEROESE_FAROE_ISLANDS;
MACRO_SUBLANG SUBLANG_FILIPINO_PHILIPPINES;
MACRO_SUBLANG SUBLANG_FINNISH_FINLAND;
MACRO_SUBLANG SUBLANG_FRENCH;
MACRO_SUBLANG SUBLANG_FRENCH_BELGIAN;
MACRO_SUBLANG SUBLANG_FRENCH_CANADIAN;
MACRO_SUBLANG SUBLANG_FRENCH_LUXEMBOURG;
MACRO_SUBLANG SUBLANG_FRENCH_MONACO;
MACRO_SUBLANG SUBLANG_FRENCH_SWISS;
MACRO_SUBLANG SUBLANG_FRISIAN_NETHERLANDS;
MACRO_SUBLANG SUBLANG_FULAH_SENEGAL;
MACRO_SUBLANG SUBLANG_GALICIAN_GALICIAN;
MACRO_SUBLANG SUBLANG_GEORGIAN_GEORGIA;
MACRO_SUBLANG SUBLANG_GERMAN;
MACRO_SUBLANG SUBLANG_GERMAN_AUSTRIAN;
MACRO_SUBLANG SUBLANG_GERMAN_LIECHTENSTEIN;
MACRO_SUBLANG SUBLANG_GERMAN_LUXEMBOURG;
MACRO_SUBLANG SUBLANG_GERMAN_SWISS;
MACRO_SUBLANG SUBLANG_GREEK_GREECE;
MACRO_SUBLANG SUBLANG_GREENLANDIC_GREENLAND;
MACRO_SUBLANG SUBLANG_GUJARATI_INDIA;
MACRO_SUBLANG SUBLANG_HAUSA_NIGERIA_LATIN;
MACRO_SUBLANG SUBLANG_HAWAIIAN_US;
MACRO_SUBLANG SUBLANG_HEBREW_ISRAEL;
MACRO_SUBLANG SUBLANG_HINDI_INDIA;
MACRO_SUBLANG SUBLANG_HUNGARIAN_HUNGARY;
MACRO_SUBLANG SUBLANG_ICELANDIC_ICELAND;
MACRO_SUBLANG SUBLANG_IGBO_NIGERIA;
MACRO_SUBLANG SUBLANG_INDONESIAN_INDONESIA;
MACRO_SUBLANG SUBLANG_INUKTITUT_CANADA;
MACRO_SUBLANG SUBLANG_INUKTITUT_CANADA_LATIN;
MACRO_SUBLANG SUBLANG_IRISH_IRELAND;
MACRO_SUBLANG SUBLANG_ITALIAN;
MACRO_SUBLANG SUBLANG_ITALIAN_SWISS;
MACRO_SUBLANG SUBLANG_JAPANESE_JAPAN;
MACRO_SUBLANG SUBLANG_KANNADA_INDIA;
MACRO_SUBLANG SUBLANG_KASHMIRI_INDIA;
MACRO_SUBLANG SUBLANG_KASHMIRI_SASIA;
MACRO_SUBLANG SUBLANG_KAZAK_KAZAKHSTAN;
MACRO_SUBLANG SUBLANG_KHMER_CAMBODIA;
MACRO_SUBLANG SUBLANG_KICHE_GUATEMALA;
MACRO_SUBLANG SUBLANG_KINYARWANDA_RWANDA;
MACRO_SUBLANG SUBLANG_KONKANI_INDIA;
MACRO_SUBLANG SUBLANG_KOREAN;
MACRO_SUBLANG SUBLANG_KYRGYZ_KYRGYZSTAN;
MACRO_SUBLANG SUBLANG_LAO_LAO;
MACRO_SUBLANG SUBLANG_LATVIAN_LATVIA;
MACRO_SUBLANG SUBLANG_LITHUANIAN;
MACRO_SUBLANG SUBLANG_LOWER_SORBIAN_GERMANY;
MACRO_SUBLANG SUBLANG_LUXEMBOURGISH_LUXEMBOURG;
MACRO_SUBLANG SUBLANG_MACEDONIAN_MACEDONIA;
MACRO_SUBLANG SUBLANG_MALAYALAM_INDIA;
MACRO_SUBLANG SUBLANG_MALAY_BRUNEI_DARUSSALAM;
MACRO_SUBLANG SUBLANG_MALAY_MALAYSIA;
MACRO_SUBLANG SUBLANG_MALTESE_MALTA;
MACRO_SUBLANG SUBLANG_MAORI_NEW_ZEALAND;
MACRO_SUBLANG SUBLANG_MAPUDUNGUN_CHILE;
MACRO_SUBLANG SUBLANG_MARATHI_INDIA;
MACRO_SUBLANG SUBLANG_MOHAWK_MOHAWK;
MACRO_SUBLANG SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA;
MACRO_SUBLANG SUBLANG_MONGOLIAN_PRC;
MACRO_SUBLANG SUBLANG_NEPALI_INDIA;
MACRO_SUBLANG SUBLANG_NEPALI_NEPAL;
MACRO_SUBLANG SUBLANG_NEUTRAL;
MACRO_SUBLANG SUBLANG_NORWEGIAN_BOKMAL;
MACRO_SUBLANG SUBLANG_NORWEGIAN_NYNORSK;
MACRO_SUBLANG SUBLANG_OCCITAN_FRANCE;
MACRO_SUBLANG SUBLANG_ODIA_INDIA;
MACRO_SUBLANG SUBLANG_ORIYA_INDIA;
MACRO_SUBLANG SUBLANG_PASHTO_AFGHANISTAN;
MACRO_SUBLANG SUBLANG_PERSIAN_IRAN;
MACRO_SUBLANG SUBLANG_POLISH_POLAND;
MACRO_SUBLANG SUBLANG_PORTUGUESE;
MACRO_SUBLANG SUBLANG_PORTUGUESE_BRAZILIAN;
MACRO_SUBLANG_PORTUGUESE SUBLANG_PORTUGUESE_PORTUGAL;
MACRO_SUBLANG SUBLANG_PULAR_SENEGAL;
MACRO_SUBLANG SUBLANG_PUNJABI_INDIA;
MACRO_SUBLANG SUBLANG_PUNJABI_PAKISTAN;
MACRO_SUBLANG SUBLANG_QUECHUA_BOLIVIA;
MACRO_SUBLANG SUBLANG_QUECHUA_ECUADOR;
MACRO_SUBLANG SUBLANG_QUECHUA_PERU;
MACRO_SUBLANG SUBLANG_ROMANIAN_ROMANIA;
MACRO_SUBLANG SUBLANG_ROMANSH_SWITZERLAND;
MACRO_SUBLANG SUBLANG_RUSSIAN_RUSSIA;
MACRO_SUBLANG SUBLANG_SAKHA_RUSSIA;
MACRO_SUBLANG SUBLANG_SAMI_INARI_FINLAND;
MACRO_SUBLANG SUBLANG_SAMI_LULE_NORWAY;
MACRO_SUBLANG SUBLANG_SAMI_LULE_SWEDEN;
MACRO_SUBLANG SUBLANG_SAMI_NORTHERN_FINLAND;
MACRO_SUBLANG SUBLANG_SAMI_NORTHERN_NORWAY;
MACRO_SUBLANG SUBLANG_SAMI_NORTHERN_SWEDEN;
MACRO_SUBLANG SUBLANG_SAMI_SKOLT_FINLAND;
MACRO_SUBLANG SUBLANG_SAMI_SOUTHERN_NORWAY;
MACRO_SUBLANG SUBLANG_SAMI_SOUTHERN_SWEDEN;
MACRO_SUBLANG SUBLANG_SANSKRIT_INDIA;
MACRO_SUBLANG SUBLANG_SCOTTISH_GAELIC;
MACRO_SUBLANG SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC;
MACRO_SUBLANG SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN;
MACRO_SUBLANG SUBLANG_SERBIAN_CROATIA;
MACRO_SUBLANG SUBLANG_SERBIAN_CYRILLIC;
MACRO_SUBLANG SUBLANG_SERBIAN_LATIN;
MACRO_SUBLANG SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC;
MACRO_SUBLANG SUBLANG_SERBIAN_MONTENEGRO_LATIN;
MACRO_SUBLANG SUBLANG_SERBIAN_SERBIA_CYRILLIC;
MACRO_SUBLANG SUBLANG_SERBIAN_SERBIA_LATIN;
MACRO_SUBLANG SUBLANG_SINDHI_AFGHANISTAN;
MACRO_SUBLANG SUBLANG_SINDHI_INDIA;
MACRO_SUBLANG SUBLANG_SINDHI_PAKISTAN;
MACRO_SUBLANG SUBLANG_SINHALESE_SRI_LANKA;
MACRO_SUBLANG SUBLANG_SLOVAK_SLOVAKIA;
MACRO_SUBLANG SUBLANG_SLOVENIAN_SLOVENIA;
MACRO_SUBLANG SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA;
MACRO_SUBLANG SUBLANG_SPANISH;
MACRO_SUBLANG SUBLANG_SPANISH_ARGENTINA;
MACRO_SUBLANG SUBLANG_SPANISH_BOLIVIA;
MACRO_SUBLANG SUBLANG_SPANISH_CHILE;
MACRO_SUBLANG SUBLANG_SPANISH_COLOMBIA;
MACRO_SUBLANG SUBLANG_SPANISH_COSTA_RICA;
MACRO_SUBLANG SUBLANG_SPANISH_DOMINICAN_REPUBLIC;
MACRO_SUBLANG SUBLANG_SPANISH_ECUADOR;
MACRO_SUBLANG SUBLANG_SPANISH_EL_SALVADOR;
MACRO_SUBLANG SUBLANG_SPANISH_GUATEMALA;
MACRO_SUBLANG SUBLANG_SPANISH_HONDURAS;
MACRO_SUBLANG SUBLANG_SPANISH_MEXICAN;
MACRO_SUBLANG SUBLANG_SPANISH_MODERN;
MACRO_SUBLANG SUBLANG_SPANISH_NICARAGUA;
MACRO_SUBLANG SUBLANG_SPANISH_PANAMA;
MACRO_SUBLANG SUBLANG_SPANISH_PARAGUAY;
MACRO_SUBLANG SUBLANG_SPANISH_PERU;
MACRO_SUBLANG SUBLANG_SPANISH_PUERTO_RICO;
MACRO_SUBLANG SUBLANG_SPANISH_URUGUAY;
MACRO_SUBLANG SUBLANG_SPANISH_US;
MACRO_SUBLANG SUBLANG_SPANISH_VENEZUELA;
MACRO_SUBLANG SUBLANG_SWAHILI_KENYA;
MACRO_SUBLANG SUBLANG_SWEDISH;
MACRO_SUBLANG SUBLANG_SWEDISH_FINLAND;
MACRO_SUBLANG SUBLANG_SYRIAC_SYRIA;
MACRO_SUBLANG SUBLANG_SYS_DEFAULT;
MACRO_SUBLANG SUBLANG_TAJIK_TAJIKISTAN;
MACRO_SUBLANG SUBLANG_TAMAZIGHT_ALGERIA_LATIN;
MACRO_SUBLANG SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH;
MACRO_SUBLANG SUBLANG_TAMIL_INDIA;
MACRO_SUBLANG SUBLANG_TAMIL_SRI_LANKA;
MACRO_SUBLANG SUBLANG_TATAR_RUSSIA;
MACRO_SUBLANG SUBLANG_TELUGU_INDIA;
MACRO_SUBLANG SUBLANG_THAI_THAILAND;
MACRO_SUBLANG SUBLANG_TIBETAN_PRC;
MACRO_SUBLANG SUBLANG_TIGRIGNA_ERITREA;
MACRO_SUBLANG SUBLANG_TIGRINYA_ERITREA;
MACRO_SUBLANG SUBLANG_TIGRINYA_ETHIOPIA;
MACRO_SUBLANG SUBLANG_TSWANA_BOTSWANA;
MACRO_SUBLANG SUBLANG_TSWANA_SOUTH_AFRICA;
MACRO_SUBLANG SUBLANG_TURKISH_TURKEY;
MACRO_SUBLANG SUBLANG_TURKMEN_TURKMENISTAN;
MACRO_SUBLANG SUBLANG_UIGHUR_PRC;
MACRO_SUBLANG SUBLANG_UI_CUSTOM_DEFAULT;
MACRO_SUBLANG SUBLANG_UKRAINIAN_UKRAINE;
MACRO_SUBLANG SUBLANG_UPPER_SORBIAN_GERMANY;
MACRO_SUBLANG SUBLANG_URDU_INDIA;
MACRO_SUBLANG SUBLANG_URDU_PAKISTAN;
MACRO_SUBLANG SUBLANG_UZBEK_CYRILLIC;
MACRO_SUBLANG SUBLANG_UZBEK_LATIN;
MACRO_SUBLANG SUBLANG_VALENCIAN_VALENCIA;
MACRO_SUBLANG SUBLANG_VIETNAMESE_VIETNAM;
MACRO_SUBLANG SUBLANG_WELSH_UNITED_KINGDOM;
MACRO_SUBLANG SUBLANG_WOLOF_SENEGAL;
MACRO_SUBLANG SUBLANG_XHOSA_SOUTH_AFRICA;
MACRO_SUBLANG SUBLANG_YAKUT_RUSSIA;
MACRO_SUBLANG SUBLANG_YI_PRC;
MACRO_SUBLANG SUBLANG_YORUBA_NIGERIA;
MACRO_SUBLANG SUBLANG_ZULU_SOUTH_AFRICA;
MACRO_MASK SUBVERSION_MASK;
MACRO_ACCESS_ACE_FLAG SUCCESSFUL_ACCESS_ACE_FLAG;
MACRO_SYMBOLIC SYMBOLIC_LINK_ALL_ACCESS;
MACRO_SYMBOLIC SYMBOLIC_LINK_QUERY;
MACRO_CHARSET SYMBOL_CHARSET;
MACRO_SYMLINK SYMLINK_FLAG_RELATIVE;
MACRO_SYNCHRONIZE SYNCHRONIZE;
MACRO_SYSPAL SYSPAL_ERROR;
MACRO_SYSPAL SYSPAL_NOSTATIC;
MACRO_SYSPAL SYSPAL_NOSTATIC256;
MACRO_SYSPAL SYSPAL_STATIC;
MACRO_SYSRGN SYSRGN;
MACRO_SYSTEM_AUDIT SYSTEM_ALARM_ACE_TYPE;
MACRO_SYSTEM_AUDIT_CALLBACK SYSTEM_ALARM_CALLBACK_ACE_TYPE;
MACRO_SYSTEM_AUDIT_CALLBACK SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE;
MACRO_SYSTEM_AUDIT_OBJECT SYSTEM_ALARM_OBJECT_ACE_TYPE;
MACRO_SYSTEM_AUDIT SYSTEM_AUDIT_ACE_TYPE;
MACRO_SYSTEM_AUDIT_CALLBACK SYSTEM_AUDIT_CALLBACK_ACE_TYPE;
MACRO_SYSTEM_AUDIT_CALLBACK SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE;
MACRO_SYSTEM_AUDIT_OBJECT SYSTEM_AUDIT_OBJECT_ACE_TYPE;
MACRO_SYSTEM SYSTEM_CACHE_ALIGNMENT_SIZE;
MACRO_FONT SYSTEM_FIXED_FONT;
MACRO_FONT SYSTEM_FONT;
MACRO_ACE_TYPE SYSTEM_MANDATORY_LABEL_ACE_TYPE;
MACRO_SYSTEM_MANDATORY SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP;
MACRO_SYSTEM_MANDATORY SYSTEM_MANDATORY_LABEL_NO_READ_UP;
MACRO_SYSTEM_MANDATORY SYSTEM_MANDATORY_LABEL_NO_WRITE_UP;
MACRO_SYSTEM_MANDATORY SYSTEM_MANDATORY_LABEL_VALID_MASK;
MACRO_SYS SYS_OPEN;
int __stdcall SaveDC(HDC);
BOOL __stdcall ScaleViewportExtEx(HDC, int, int, int, int, LPSIZE);
BOOL __stdcall ScaleWindowExtEx(HDC, int, int, int, int, LPSIZE);
_SECTION_INFORMATION_CLASS SectionBasicInformation;
_SECTION_INFORMATION_CLASS SectionImageInformation;
_SECURITY_IMPERSONATION_LEVEL SecurityAnonymous;
_SECURITY_IMPERSONATION_LEVEL SecurityDelegation;
_SECURITY_IMPERSONATION_LEVEL SecurityIdentification;
_SECURITY_IMPERSONATION_LEVEL SecurityImpersonation;
BOOL __stdcall SelectClipPath(HDC, int);
int __stdcall SelectClipRgn(HDC, HRGN);
HGDIOBJ __stdcall SelectObject(HDC, HGDIOBJ);
HPALETTE __stdcall SelectPalette(HDC, HPALETTE, BOOL);
_SEMAPHORE_INFORMATION_CLASS SemaphoreBasicInformation;
_KOBJECTS SemaphoreObject;
_POWER_INFORMATION_LEVEL SessionDisplayState;
_POWER_INFORMATION_LEVEL SessionPowerInit;
int __stdcall SetAbortProc(HDC, ABORTPROC);
int __stdcall SetArcDirection(HDC, int);
LONG __stdcall SetBitmapBits(HBITMAP hbm, DWORD cb, const void *pvBits);
BOOL __stdcall SetBitmapDimensionEx(HBITMAP, int, int, LPSIZE);
COLORREF __stdcall SetBkColor(HDC, COLORREF);
int __stdcall SetBkMode(HDC, int);
UINT __stdcall SetBoundsRect(HDC, LPCRECT, UINT);
BOOL __stdcall SetBrushOrgEx(HDC, int, int, LPPOINT);
BOOL __stdcall SetColorAdjustment(HDC, const COLORADJUSTMENT *);
HCOLORSPACE __stdcall SetColorSpace(HDC, HCOLORSPACE);
COLORREF __stdcall SetDCBrushColor(HDC, COLORREF);
COLORREF __stdcall SetDCPenColor(HDC, COLORREF);
UINT __stdcall SetDIBColorTable(HDC hdc, UINT iStart, UINT cEntries, const RGBQUAD *prgbq);
int __stdcall SetDIBits(HDC, HBITMAP, UINT, UINT, const void *, const BITMAPINFO *, UINT);
int __stdcall SetDIBitsToDevice(HDC, int, int, DWORD, DWORD, int, int, UINT, UINT, const void *, const BITMAPINFO *, UINT);
BOOL __stdcall SetDeviceGammaRamp(HDC hdc, LPVOID lpRamp);
HENHMETAFILE __stdcall SetEnhMetaFileBits(UINT nSize, const BYTE *pb);
int __stdcall SetGraphicsMode(HDC, int);
int __stdcall SetICMMode(HDC, int);
BOOL __stdcall SetICMProfileA(HDC, LPSTR);
BOOL __stdcall SetICMProfileW(HDC, LPWSTR);
DWORD __stdcall SetLayout(HDC, DWORD);
int __stdcall SetMapMode(HDC, int);
DWORD __stdcall SetMapperFlags(HDC, DWORD);
HMETAFILE __stdcall SetMetaFileBitsEx(UINT cbBuffer, const BYTE *lpData);
int __stdcall SetMetaRgn(HDC);
BOOL __stdcall SetMiterLimit(HDC, FLOAT, PFLOAT);
UINT __stdcall SetPaletteEntries(HPALETTE hpal, UINT iStart, UINT cEntries, const PALETTEENTRY *pPalEntries);
COLORREF __stdcall SetPixel(HDC, int, int, COLORREF);
BOOL __stdcall SetPixelFormat(HDC, int, const PIXELFORMATDESCRIPTOR *);
BOOL __stdcall SetPixelV(HDC, int, int, COLORREF);
int __stdcall SetPolyFillMode(HDC, int);
_POWER_INFORMATION_LEVEL SetPowerSettingValue;
int __stdcall SetROP2(HDC, int);
BOOL __stdcall SetRectRgn(HRGN, int, int, int, int);
INT __stdcall SetRelAbs(HDC, INT);
int __stdcall SetStretchBltMode(HDC, int);
UINT __stdcall SetSystemPaletteUse(HDC, UINT);
UINT __stdcall SetTextAlign(HDC, UINT);
int __stdcall SetTextCharacterExtra(HDC, int);
COLORREF __stdcall SetTextColor(HDC, COLORREF);
BOOL __stdcall SetTextJustification(HDC, int, int);
BOOL __stdcall SetViewportExtEx(HDC, int, int, LPSIZE);
BOOL __stdcall SetViewportOrgEx(HDC, int, int, LPPOINT);
HENHMETAFILE __stdcall SetWinMetaFileBits(UINT nSize, const BYTE *lpMeta16Data, HDC hdcRef, const METAFILEPICT *lpMFP);
BOOL __stdcall SetWindowExtEx(HDC, int, int, LPSIZE);
BOOL __stdcall SetWindowOrgEx(HDC, int, int, LPPOINT);
BOOL __stdcall SetWorldTransform(HDC, const XFORM *);
_CM_ERROR_CONTROL_TYPE SevereError;
_BUS_DATA_TYPE SgiInternalConfiguration;
_SHUTDOWN_ACTION ShutdownNoReboot;
_SHUTDOWN_ACTION ShutdownPowerOff;
_SHUTDOWN_ACTION ShutdownReboot;
_SID_NAME_USE SidTypeAlias;
_SID_NAME_USE SidTypeComputer;
_SID_NAME_USE SidTypeDeletedAccount;
_SID_NAME_USE SidTypeDomain;
_SID_NAME_USE SidTypeGroup;
_SID_NAME_USE SidTypeInvalid;
_SID_NAME_USE SidTypeLabel;
_SID_NAME_USE SidTypeUnknown;
_SID_NAME_USE SidTypeUser;
_SID_NAME_USE SidTypeWellKnownGroup;
_KWAIT_REASON Spare2;
_KOBJECTS Spare2Object;
_KOBJECTS Spare3Object;
_KWAIT_REASON Spare4;
_KOBJECTS Spare4Object;
_KWAIT_REASON Spare5;
_KOBJECTS Spare5Object;
_KWAIT_REASON Spare6;
_KOBJECTS Spare6Object;
_KOBJECTS Spare7Object;
_KOBJECTS Spare8Object;
_KOBJECTS Spare9Object;
_ALTERNATIVE_ARCHITECTURE_TYPE StandardDesign;
_KTHREAD_STATE Standby;
_MMLISTS StandbyPageList;
int __stdcall StartDocA(HDC, const DOCINFOA *);
int __stdcall StartDocW(HDC, const DOCINFOW *);
int __stdcall StartPage(HDC);
BOOL __stdcall StretchBlt(HDC, int, int, int, int, HDC, int, int, int, int, DWORD);
int __stdcall StretchDIBits(HDC, int, int, int, int, int, int, int, int, const void *, const BITMAPINFO *, UINT, DWORD);
_APPCOMPAT_USERFLAGS StrictLLHook;
BOOL __stdcall StrokeAndFillPath(HDC);
BOOL __stdcall StrokePath(HDC);
_KWAIT_REASON Suspended;
BOOL __stdcall SwapBuffers(HDC);
_EVENT_TYPE SynchronizationEvent;
_TIMER_TYPE SynchronizationTimer;
_SYSDBG_COMMAND SysDbgBreakPoint;
_SYSDBG_COMMAND SysDbgCheckLowMemory;
_SYSDBG_COMMAND SysDbgClearSpecialCalls;
_SYSDBG_COMMAND SysDbgClearUmAttachPid;
_SYSDBG_COMMAND SysDbgClearUmBreakPid;
_SYSDBG_COMMAND SysDbgDisableKernelDebugger;
_SYSDBG_COMMAND SysDbgEnableKernelDebugger;
_SYSDBG_COMMAND SysDbgGetAutoKdEnable;
_SYSDBG_COMMAND SysDbgGetKdBlockEnable;
_SYSDBG_COMMAND SysDbgGetKdUmExceptionEnable;
_SYSDBG_COMMAND SysDbgGetPrintBufferSize;
_SYSDBG_COMMAND SysDbgGetTriageDump;
_SYSDBG_COMMAND SysDbgGetUmAttachPid;
_SYSDBG_COMMAND SysDbgGetUmBreakPid;
_SYSDBG_COMMAND SysDbgQueryModuleInformation;
_SYSDBG_COMMAND SysDbgQuerySpecialCalls;
_SYSDBG_COMMAND SysDbgQueryTraceInformation;
_SYSDBG_COMMAND SysDbgQueryVersion;
_SYSDBG_COMMAND SysDbgReadBusData;
_SYSDBG_COMMAND SysDbgReadControlSpace;
_SYSDBG_COMMAND SysDbgReadIoSpace;
_SYSDBG_COMMAND SysDbgReadMsr;
_SYSDBG_COMMAND SysDbgReadPhysical;
_SYSDBG_COMMAND SysDbgReadVirtual;
_SYSDBG_COMMAND SysDbgRegisterForUmBreakInfo;
_SYSDBG_COMMAND SysDbgSetAutoKdEnable;
_SYSDBG_COMMAND SysDbgSetKdBlockEnable;
_SYSDBG_COMMAND SysDbgSetKdUmExceptionEnable;
_SYSDBG_COMMAND SysDbgSetPrintBufferSize;
_SYSDBG_COMMAND SysDbgSetSpecialCall;
_SYSDBG_COMMAND SysDbgSetTracepoint;
_SYSDBG_COMMAND SysDbgWriteBusData;
_SYSDBG_COMMAND SysDbgWriteControlSpace;
_SYSDBG_COMMAND SysDbgWriteIoSpace;
_SYSDBG_COMMAND SysDbgWriteMsr;
_SYSDBG_COMMAND SysDbgWritePhysical;
_SYSDBG_COMMAND SysDbgWriteVirtual;
_SYSTEM_INFORMATION_CLASS SystemAddVerifier;
_SYSTEM_INFORMATION_CLASS SystemBasicInformation;
_POWER_INFORMATION_LEVEL SystemBatteryState;
_SYSTEM_INFORMATION_CLASS SystemBigPoolInformation;
_SYSTEM_INFORMATION_CLASS SystemBootEnvironmentInformation;
_PLUGPLAY_BUS_CLASS SystemBus;
_SYSTEM_INFORMATION_CLASS SystemCallCountInformation;
_SYSTEM_INFORMATION_CLASS SystemCallTimeInformation;
_SYSTEM_INFORMATION_CLASS SystemComPlusPackage;
_SYSTEM_INFORMATION_CLASS SystemContextSwitchInformation;
_SYSTEM_INFORMATION_CLASS SystemCoverageInformation;
_SYSTEM_INFORMATION_CLASS SystemCrashDumpStateInformation;
_SYSTEM_INFORMATION_CLASS SystemCurrentTimeZoneInformation;
_SYSTEM_INFORMATION_CLASS SystemDeviceInformation;
_SYSTEM_INFORMATION_CLASS SystemDockInformation;
_SYSTEM_DOCK_STATE SystemDockStateUnknown;
_SYSTEM_DOCK_STATE SystemDocked;
_SYSTEM_INFORMATION_CLASS SystemDpcBehaviorInformation;
_SYSTEM_INFORMATION_CLASS SystemEmulationBasicInformation;
_SYSTEM_INFORMATION_CLASS SystemEmulationProcessorInformation;
_SYSTEM_INFORMATION_CLASS SystemErrorPortInformation;
_SYSTEM_INFORMATION_CLASS SystemExceptionInformation;
_POWER_INFORMATION_LEVEL SystemExecutionState;
_SYSTEM_INFORMATION_CLASS SystemExtendServiceTableInformation;
_SYSTEM_INFORMATION_CLASS SystemExtendedHandleInformation;
_SYSTEM_INFORMATION_CLASS SystemExtendedProcessInformation;
_SYSTEM_INFORMATION_CLASS SystemFileCacheInformation;
_SYSTEM_INFORMATION_CLASS SystemFileCacheInformationEx;
_SYSTEM_INFORMATION_CLASS SystemFirmwareTableInformation;
_SYSTEM_FIRMWARE_TABLE_ACTION SystemFirmwareTable_Enumerate;
_SYSTEM_FIRMWARE_TABLE_ACTION SystemFirmwareTable_Get;
_SYSTEM_INFORMATION_CLASS SystemFlagsInformation;
_SYSTEM_INFORMATION_CLASS SystemFullMemoryInformation;
_SYSTEM_INFORMATION_CLASS SystemHandleInformation;
_POWER_INFORMATION_LEVEL SystemHiberFileInformation;
_POWER_INFORMATION_LEVEL SystemHiberFileSize;
_SYSTEM_INFORMATION_CLASS SystemHotpatchInformation;
_SYSTEM_INFORMATION_CLASS SystemHypervisorInformation;
_SYSTEM_INFORMATION_CLASS SystemImageFileExecutionOptionsInformation;
_SYSTEM_INFORMATION_CLASS SystemInterruptInformation;
_SYSTEM_INFORMATION_CLASS SystemKernelDebuggerInformation;
_CM_SERVICE_LOAD_TYPE SystemLoad;
_SYSTEM_INFORMATION_CLASS SystemLoadGdiDriverInSystemSpaceInformation;
_SYSTEM_INFORMATION_CLASS SystemLoadGdiDriverInformation;
_SYSTEM_INFORMATION_CLASS SystemLocksInformation;
_SYSTEM_INFORMATION_CLASS SystemLogicalProcessorInformation;
_SYSTEM_INFORMATION_CLASS SystemLookasideInformation;
_SYSTEM_INFORMATION_CLASS SystemLostDelayedWriteInformation;
_SYSTEM_INFORMATION_CLASS SystemMemoryListInformation;
_SYSTEM_INFORMATION_CLASS SystemMirrorMemoryInformation;
_SYSTEM_INFORMATION_CLASS SystemModuleInformation;
_SYSTEM_INFORMATION_CLASS SystemModuleInformationEx;
_SYSTEM_INFORMATION_CLASS SystemNonPagedPoolInformation;
_SYSTEM_INFORMATION_CLASS SystemNumaAvailableMemory;
_SYSTEM_INFORMATION_CLASS SystemNumaProcessorMap;
_SYSTEM_INFORMATION_CLASS SystemObjectInformation;
_SYSTEM_INFORMATION_CLASS SystemObjectSecurityMode;
_SYSTEM_INFORMATION_CLASS SystemObsolete0;
_SYSTEM_INFORMATION_CLASS SystemPageFileInformation;
_SYSTEM_INFORMATION_CLASS SystemPagedPoolInformation;
_SYSTEM_INFORMATION_CLASS SystemPathInformation;
_SYSTEM_INFORMATION_CLASS SystemPerformanceInformation;
_SYSTEM_INFORMATION_CLASS SystemPerformanceTraceInformation;
_SYSTEM_INFORMATION_CLASS SystemPlugPlayBusInformation;
_SYSTEM_INFORMATION_CLASS SystemPoolTagInformation;
_POWER_INFORMATION_LEVEL SystemPowerCapabilities;
_POWER_INFORMATION_LEVEL SystemPowerInformation;
_SYSTEM_INFORMATION_CLASS SystemPowerInformationNative;
_POWER_INFORMATION_LEVEL SystemPowerLoggingEntry;
_POWER_INFORMATION_LEVEL SystemPowerPolicyAc;
_POWER_INFORMATION_LEVEL SystemPowerPolicyCurrent;
_POWER_INFORMATION_LEVEL SystemPowerPolicyDc;
_POWER_INFORMATION_LEVEL SystemPowerStateHandler;
_POWER_INFORMATION_LEVEL SystemPowerStateLogging;
_POWER_INFORMATION_LEVEL SystemPowerStateNotifyHandler;
_SYSTEM_INFORMATION_CLASS SystemPrefetchPathInformation;
_SYSTEM_INFORMATION_CLASS SystemPrefetcherInformation;
_SYSTEM_INFORMATION_CLASS SystemPrioritySeperation;
_SYSTEM_INFORMATION_CLASS SystemProcessIdInformation;
_SYSTEM_INFORMATION_CLASS SystemProcessInformation;
_SYSTEM_INFORMATION_CLASS SystemProcessorIdleCycleTimeInformation;
_SYSTEM_INFORMATION_CLASS SystemProcessorInformation;
_SYSTEM_INFORMATION_CLASS SystemProcessorPerformanceInformation;
_SYSTEM_INFORMATION_CLASS SystemProcessorPowerInformation;
_SYSTEM_INFORMATION_CLASS SystemProcessorPowerInformationEx;
_SYSTEM_INFORMATION_CLASS SystemProcessorSpeedInformation;
_SYSTEM_INFORMATION_CLASS SystemRangeStartInformation;
_SYSTEM_INFORMATION_CLASS SystemRecommendedSharedDataAlignment;
_SYSTEM_INFORMATION_CLASS SystemRefTraceInformation;
_SYSTEM_INFORMATION_CLASS SystemRegisterFirmwareTableInformationHandler;
_SYSTEM_INFORMATION_CLASS SystemRegistryQuotaInformation;
_POWER_INFORMATION_LEVEL SystemReserveHiberFile;
_SYSTEM_INFORMATION_CLASS SystemSessionCreate;
_SYSTEM_INFORMATION_CLASS SystemSessionDetach;
_SYSTEM_INFORMATION_CLASS SystemSessionInformation;
_SYSTEM_INFORMATION_CLASS SystemSessionMappedViewInformation;
_SYSTEM_INFORMATION_CLASS SystemSessionPoolTagInformation;
_SYSTEM_INFORMATION_CLASS SystemSessionProcessesInformation;
_SYSTEM_INFORMATION_CLASS SystemSpecialPoolInformation;
_SYSTEM_INFORMATION_CLASS SystemStackTraceInformation;
_SYSTEM_INFORMATION_CLASS SystemSummaryMemoryInformation;
_SYSTEM_INFORMATION_CLASS SystemSuperfetchInformation;
_SYSTEM_INFORMATION_CLASS SystemThreadPriorityClientIdInformation;
_SYSTEM_INFORMATION_CLASS SystemTimeAdjustmentInformation;
_SYSTEM_INFORMATION_CLASS SystemTimeOfDayInformation;
_SYSTEM_INFORMATION_CLASS SystemTimeSlipNotification;
_SYSTEM_INFORMATION_CLASS SystemTimeZoneInformation;
_SYSTEM_DOCK_STATE SystemUndocked;
_SYSTEM_INFORMATION_CLASS SystemUnloadGdiDriverInformation;
_SYSTEM_INFORMATION_CLASS SystemVdmBopInformation;
_SYSTEM_INFORMATION_CLASS SystemVdmInstemulInformation;
_SYSTEM_INFORMATION_CLASS SystemVerifierCancellationInformation;
_SYSTEM_INFORMATION_CLASS SystemVerifierFaultsInformation;
_SYSTEM_INFORMATION_CLASS SystemVerifierInformation;
_SYSTEM_INFORMATION_CLASS SystemVerifierInformationEx;
_SYSTEM_INFORMATION_CLASS SystemVerifierTriageInformation;
_POWER_INFORMATION_LEVEL SystemVideoState;
_POWER_INFORMATION_LEVEL SystemWakeSource;
_SYSTEM_INFORMATION_CLASS SystemWatchDogTimerHandler;
_SYSTEM_INFORMATION_CLASS SystemWatchDogTimerInformation;
_SYSTEM_INFORMATION_CLASS SystemWow64SharedInformationObsolete;
MACRO_TABLE TABLE_NUMBER_BITS;
MACRO_TABLE TABLE_OFFSET_BITS;
MACRO_TAPE TAPE_ABSOLUTE_BLOCK;
MACRO_TAPE TAPE_ABSOLUTE_POSITION;
MACRO_TAPE TAPE_DRIVE_ABSOLUTE_BLK;
MACRO_TAPE TAPE_DRIVE_ABS_BLK_IMMED;
MACRO_TAPE TAPE_DRIVE_CLEAN_REQUESTS;
MACRO_TAPE TAPE_DRIVE_COMPRESSION;
MACRO_TAPE TAPE_DRIVE_ECC;
MACRO_TAPE TAPE_DRIVE_EJECT_MEDIA;
MACRO_TAPE TAPE_DRIVE_END_OF_DATA;
MACRO_TAPE TAPE_DRIVE_EOT_WZ_SIZE;
MACRO_TAPE TAPE_DRIVE_ERASE_BOP_ONLY;
MACRO_TAPE TAPE_DRIVE_ERASE_IMMEDIATE;
MACRO_TAPE TAPE_DRIVE_ERASE_LONG;
MACRO_TAPE TAPE_DRIVE_ERASE_SHORT;
MACRO_TAPE TAPE_DRIVE_FILEMARKS;
MACRO_TAPE TAPE_DRIVE_FIXED;
MACRO_TAPE TAPE_DRIVE_FIXED_BLOCK;
MACRO_TAPE TAPE_DRIVE_FORMAT;
MACRO_TAPE TAPE_DRIVE_FORMAT_IMMEDIATE;
MACRO_TAPE TAPE_DRIVE_GET_ABSOLUTE_BLK;
MACRO_TAPE TAPE_DRIVE_GET_LOGICAL_BLK;
MACRO_TAPE TAPE_DRIVE_HIGH_FEATURES;
MACRO_TAPE TAPE_DRIVE_INITIATOR;
MACRO_TAPE TAPE_DRIVE_LOAD_UNLD_IMMED;
MACRO_TAPE TAPE_DRIVE_LOAD_UNLOAD;
MACRO_TAPE TAPE_DRIVE_LOCK_UNLK_IMMED;
MACRO_TAPE TAPE_DRIVE_LOCK_UNLOCK;
MACRO_TAPE TAPE_DRIVE_LOGICAL_BLK;
MACRO_TAPE TAPE_DRIVE_LOG_BLK_IMMED;
MACRO_TAPE TAPE_DRIVE_PADDING;
MACRO_TAPE TAPE_DRIVE_RELATIVE_BLKS;
MACRO_TAPE TAPE_DRIVE_REPORT_SMKS;
MACRO_TAPE TAPE_DRIVE_RESERVED_BIT;
MACRO_TAPE TAPE_DRIVE_REVERSE_POSITION;
MACRO_TAPE TAPE_DRIVE_REWIND_IMMEDIATE;
MACRO_TAPE TAPE_DRIVE_SELECT;
MACRO_TAPE TAPE_DRIVE_SEQUENTIAL_FMKS;
MACRO_TAPE TAPE_DRIVE_SEQUENTIAL_SMKS;
MACRO_TAPE TAPE_DRIVE_SETMARKS;
MACRO_TAPE TAPE_DRIVE_SET_BLOCK_SIZE;
MACRO_TAPE TAPE_DRIVE_SET_CMP_BOP_ONLY;
MACRO_TAPE TAPE_DRIVE_SET_COMPRESSION;
MACRO_TAPE TAPE_DRIVE_SET_ECC;
MACRO_TAPE TAPE_DRIVE_SET_EOT_WZ_SIZE;
MACRO_TAPE TAPE_DRIVE_SET_PADDING;
MACRO_TAPE TAPE_DRIVE_SET_REPORT_SMKS;
MACRO_TAPE TAPE_DRIVE_SPACE_IMMEDIATE;
MACRO_TAPE TAPE_DRIVE_TAPE_CAPACITY;
MACRO_TAPE TAPE_DRIVE_TAPE_REMAINING;
MACRO_TAPE TAPE_DRIVE_TENSION;
MACRO_TAPE TAPE_DRIVE_TENSION_IMMED;
MACRO_TAPE TAPE_DRIVE_VARIABLE_BLOCK;
MACRO_TAPE TAPE_DRIVE_WRITE_FILEMARKS;
MACRO_TAPE TAPE_DRIVE_WRITE_LONG_FMKS;
MACRO_TAPE TAPE_DRIVE_WRITE_MARK_IMMED;
MACRO_TAPE TAPE_DRIVE_WRITE_PROTECT;
MACRO_TAPE TAPE_DRIVE_WRITE_SETMARKS;
MACRO_TAPE TAPE_DRIVE_WRITE_SHORT_FMKS;
MACRO_TAPE TAPE_ERASE_LONG;
MACRO_TAPE TAPE_ERASE_SHORT;
MACRO_TAPE TAPE_FILEMARKS;
MACRO_TAPE TAPE_FIXED_PARTITIONS;
MACRO_TAPE TAPE_FORMAT;
MACRO_TAPE TAPE_INITIATOR_PARTITIONS;
MACRO_TAPE TAPE_LOAD;
MACRO_TAPE TAPE_LOCK;
MACRO_TAPE TAPE_LOGICAL_BLOCK;
MACRO_TAPE TAPE_LOGICAL_POSITION;
MACRO_TAPE TAPE_LONG_FILEMARKS;
MACRO_TAPE TAPE_PSEUDO_LOGICAL_BLOCK;
MACRO_TAPE TAPE_PSEUDO_LOGICAL_POSITION;
MACRO_TAPE TAPE_REWIND;
MACRO_TAPE TAPE_SELECT_PARTITIONS;
MACRO_TAPE TAPE_SETMARKS;
MACRO_TAPE TAPE_SHORT_FILEMARKS;
MACRO_TAPE TAPE_SPACE_END_OF_DATA;
MACRO_TAPE TAPE_SPACE_FILEMARKS;
MACRO_TAPE TAPE_SPACE_RELATIVE_BLOCKS;
MACRO_TAPE TAPE_SPACE_SEQUENTIAL_FMKS;
MACRO_TAPE TAPE_SPACE_SEQUENTIAL_SMKS;
MACRO_TAPE TAPE_SPACE_SETMARKS;
MACRO_TAPE TAPE_TENSION;
MACRO_TAPE TAPE_UNLOAD;
MACRO_TAPE TAPE_UNLOCK;
MACRO_TA TA_BASELINE;
MACRO_TA TA_BOTTOM;
MACRO_TA TA_CENTER;
MACRO_TA TA_LEFT;
MACRO_TA TA_MASK;
MACRO_TA TA_NOUPDATECP;
MACRO_TA TA_RIGHT;
MACRO_TA TA_RTLREADING;
MACRO_TA TA_TOP;
MACRO_TA TA_UPDATECP;
MACRO_TCI TCI_SRCCHARSET;
MACRO_TCI TCI_SRCCODEPAGE;
MACRO_TCI TCI_SRCFONTSIG;
MACRO_TCI TCI_SRCLOCALE;
MACRO_CHARSET TCVN_CHARSET;
MACRO_TC TC_CP_STROKE;
MACRO_TC TC_CR_90;
MACRO_TC TC_CR_ANY;
MACRO_TC TC_EA_DOUBLE;
MACRO_TC TC_IA_ABLE;
MACRO_TC TC_OP_CHARACTER;
MACRO_TC TC_OP_STROKE;
MACRO_TC_RECTANGLES TC_PATHOBJ;
MACRO_TC TC_RA_ABLE;
MACRO_TC_RECTANGLES TC_RECTANGLES;
MACRO_TC TC_RESERVED;
MACRO_TC TC_SA_CONTIN;
MACRO_TC TC_SA_DOUBLE;
MACRO_TC TC_SA_INTEGER;
MACRO_TC TC_SCROLLBLT;
MACRO_TC TC_SF_X_YINDEP;
MACRO_TC TC_SO_ABLE;
MACRO_TC TC_UA_ABLE;
MACRO_TC TC_VA_ABLE;
MACRO_TEB TEB_ACTIVATION_CONTEXT_STACK_POINTER;
MACRO_TEB TEB_DEALLOCATION_STACK;
MACRO_TEB TEB_EXCEPTION_CODE;
MACRO_TEB TEB_EXCEPTION_LIST;
MACRO_TEB TEB_FIBER_DATA;
MACRO_TEB TEB_FLS_DATA;
MACRO_TEB TEB_GDI_BATCH_COUNT;
MACRO_TEB TEB_GL_TABLE;
MACRO_TEB TEB_GUARANTEED_STACK_BYTES;
MACRO_TEB TEB_PEB;
MACRO_TEB TEB_SELF;
MACRO_TEB TEB_STACK_BASE;
MACRO_TEB TEB_STACK_LIMIT;
MACRO_DRIVERVERSION TECHNOLOGY;
MACRO_TEXTCAPS TEXTCAPS;
MACRO_CHARSET THAI_CHARSET;
MACRO_THREAD_ALERT THREAD_ALERT_INCREMENT;
MACRO_THREAD_BASE THREAD_BASE_PRIORITY_IDLE;
MACRO_THREAD_BASE THREAD_BASE_PRIORITY_LOWRT;
MACRO_THREAD_BASE THREAD_BASE_PRIORITY_MAX;
MACRO_THREAD_BASE THREAD_BASE_PRIORITY_MIN;
MACRO_THREAD THREAD_DIRECT_IMPERSONATION;
MACRO_THREAD THREAD_GET_CONTEXT;
MACRO_THREAD THREAD_IMPERSONATE;
MACRO_THREAD THREAD_QUERY_INFORMATION;
MACRO_THREAD THREAD_QUERY_LIMITED_INFORMATION;
MACRO_THREAD_RESUME THREAD_RESUME;
MACRO_THREAD THREAD_SET_CONTEXT;
MACRO_THREAD THREAD_SET_INFORMATION;
MACRO_THREAD THREAD_SET_THREAD_TOKEN;
MACRO_THREAD THREAD_SUSPEND_RESUME;
MACRO_THREAD THREAD_TERMINATE;
MACRO_STATE TIMER_MODIFY_STATE;
MACRO_STATE TIMER_QUERY_STATE;
MACRO_TIME TIME_ZONE_ID_DAYLIGHT;
MACRO_TIME TIME_ZONE_ID_STANDARD;
MACRO_TIME TIME_ZONE_ID_UNKNOWN;
MACRO_TLS TLS_EXPANSION_SLOTS;
MACRO_AVAILABLE TLS_MINIMUM_AVAILABLE;
MACRO_TMPF TMPF_DEVICE;
MACRO_TMPF TMPF_FIXED_PITCH;
MACRO_TMPF TMPF_TRUETYPE;
MACRO_TMPF TMPF_VECTOR;
MACRO_TMP TMP_MAX;
MACRO_TOKEN TOKEN_ADJUST_DEFAULT;
MACRO_TOKEN TOKEN_ADJUST_GROUPS;
MACRO_TOKEN TOKEN_ADJUST_PRIVILEGES;
MACRO_TOKEN TOKEN_ADJUST_SESSIONID;
MACRO_TOKEN TOKEN_ALL_ACCESS;
MACRO_TOKEN TOKEN_ALL_ACCESS_P;
MACRO_TOKEN TOKEN_ASSIGN_PRIMARY;
MACRO_TOKEN TOKEN_DUPLICATE;
MACRO_TOKEN TOKEN_EXECUTE;
MACRO_TOKEN TOKEN_IMPERSONATE;
MACRO_TOKEN TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN;
MACRO_TOKEN TOKEN_MANDATORY_POLICY_NO_WRITE_UP;
MACRO_TOKEN TOKEN_MANDATORY_POLICY_OFF;
MACRO_TOKEN TOKEN_MANDATORY_POLICY_VALID_MASK;
MACRO_TOKEN TOKEN_QUERY;
MACRO_TOKEN TOKEN_QUERY_SOURCE;
MACRO_TOKEN TOKEN_READ;
MACRO_TOKEN_SOURCE TOKEN_SOURCE_LENGTH;
MACRO_TOKEN TOKEN_WRITE;
_TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY_COUNT;
_TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY_HIGH;
_TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY_INVALID;
_TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY_LOW;
_TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY_NORMAL;
MACRO_TRANSFORM TRANSFORM_CTM;
MACRO_TRANSPARENT TRANSPARENT;
MACRO_BOOL TRUE;
MACRO_FONTTYPE TRUETYPE_FONTTYPE;
MACRO_TTO TTO_METRICS_ONLY;
MACRO_TTO TTO_QUBICS;
MACRO_TTO TTO_UNHINTED;
MACRO_TT TT_AVAILABLE;
MACRO_TT TT_ENABLED;
MACRO_TT_POLYGON TT_POLYGON_TYPE;
MACRO_TT_POLYGON TT_PRIM_CSPLINE;
MACRO_TT_POLYGON TT_PRIM_LINE;
MACRO_TT_POLYGON TT_PRIM_QSPLINE;
MACRO_CHARSET TURKISH_CHARSET;
_TABLE_SEARCH_RESULT TableEmptyTree;
_TABLE_SEARCH_RESULT TableFoundNode;
_TABLE_SEARCH_RESULT TableInsertAsLeft;
_TABLE_SEARCH_RESULT TableInsertAsRight;
_PLUGPLAY_EVENT_CATEGORY TargetDeviceChangeEvent;
_KTHREAD_STATE Terminated;
BOOL __stdcall TextOutA(HDC hdc, int x, int y, LPCSTR lpString, int c);
BOOL __stdcall TextOutW(HDC hdc, int x, int y, LPCWSTR lpString, int c);
_THREADINFOCLASS ThreadActualBasePriority;
_THREADINFOCLASS ThreadAffinityMask;
_THREADINFOCLASS ThreadAmILastThread;
_THREADINFOCLASS ThreadBasePriority;
_THREADINFOCLASS ThreadBasicInformation;
_THREADINFOCLASS ThreadBreakOnTermination;
_THREADINFOCLASS ThreadCSwitchMon;
_THREADINFOCLASS ThreadCycleTime;
_THREADINFOCLASS ThreadDescriptorTableEntry;
_THREADINFOCLASS ThreadEnableAlignmentFaultFixup;
_THREADINFOCLASS ThreadEventPair_Reusable;
_THREADINFOCLASS ThreadHideFromDebugger;
_THREADINFOCLASS ThreadIdealProcessor;
_THREADINFOCLASS ThreadImpersonationToken;
_THREADINFOCLASS ThreadIoPriority;
_THREADINFOCLASS ThreadIsIoPending;
_THREADINFOCLASS ThreadIsTerminated;
_THREADINFOCLASS ThreadLastSystemCall;
_KOBJECTS ThreadObject;
_THREADINFOCLASS ThreadPagePriority;
_THREADINFOCLASS ThreadPerformanceCount;
_THREADINFOCLASS ThreadPriority;
_THREADINFOCLASS ThreadPriorityBoost;
_THREADINFOCLASS ThreadQuerySetWin32StartAddress;
_THREADINFOCLASS ThreadSetTlsArrayAddress;
_THREADINFOCLASS ThreadSwitchLegacyState;
_THREADINFOCLASS ThreadTebInformation;
_THREADINFOCLASS ThreadTimes;
_THREADINFOCLASS ThreadZeroTlsCell;
_KOBJECTS ThreadedDpcObject;
_TIMER_INFORMATION_CLASS TimerBasicInformation;
_KOBJECTS TimerNotificationObject;
_KOBJECTS TimerSynchronizationObject;
_TOKEN_INFORMATION_CLASS TokenAccessInformation;
_TOKEN_INFORMATION_CLASS TokenAppContainerNumber;
_TOKEN_INFORMATION_CLASS TokenAppContainerSid;
_TOKEN_INFORMATION_CLASS TokenAuditPolicy;
_TOKEN_INFORMATION_CLASS TokenCapabilities;
_TOKEN_INFORMATION_CLASS TokenDefaultDacl;
_TOKEN_INFORMATION_CLASS TokenDeviceClaimAttributes;
_TOKEN_INFORMATION_CLASS TokenDeviceGroups;
_TOKEN_INFORMATION_CLASS TokenElevation;
_TOKEN_INFORMATION_CLASS TokenElevationType;
_TOKEN_ELEVATION_TYPE TokenElevationTypeDefault;
_TOKEN_ELEVATION_TYPE TokenElevationTypeFull;
_TOKEN_ELEVATION_TYPE TokenElevationTypeLimited;
_TOKEN_INFORMATION_CLASS TokenGroups;
_TOKEN_INFORMATION_CLASS TokenGroupsAndPrivileges;
_TOKEN_INFORMATION_CLASS TokenHasRestrictions;
_TOKEN_TYPE TokenImpersonation;
_TOKEN_INFORMATION_CLASS TokenImpersonationLevel;
_TOKEN_INFORMATION_CLASS TokenIntegrityLevel;
_TOKEN_INFORMATION_CLASS TokenIsAppContainer;
_TOKEN_INFORMATION_CLASS TokenIsRestricted;
_TOKEN_INFORMATION_CLASS TokenLinkedToken;
_TOKEN_INFORMATION_CLASS TokenLogonSid;
_TOKEN_INFORMATION_CLASS TokenMandatoryPolicy;
_TOKEN_INFORMATION_CLASS TokenOrigin;
_TOKEN_INFORMATION_CLASS TokenOwner;
_TOKEN_TYPE TokenPrimary;
_TOKEN_INFORMATION_CLASS TokenPrimaryGroup;
_TOKEN_INFORMATION_CLASS TokenPrivileges;
_TOKEN_INFORMATION_CLASS TokenRestrictedDeviceClaimAttributes;
_TOKEN_INFORMATION_CLASS TokenRestrictedDeviceGroups;
_TOKEN_INFORMATION_CLASS TokenRestrictedSids;
_TOKEN_INFORMATION_CLASS TokenRestrictedUserClaimAttributes;
_TOKEN_INFORMATION_CLASS TokenSandBoxInert;
_TOKEN_INFORMATION_CLASS TokenSecurityAttributes;
_TOKEN_INFORMATION_CLASS TokenSessionId;
_TOKEN_INFORMATION_CLASS TokenSessionReference;
_TOKEN_INFORMATION_CLASS TokenSource;
_TOKEN_INFORMATION_CLASS TokenStatistics;
_TOKEN_INFORMATION_CLASS TokenType;
_TOKEN_INFORMATION_CLASS TokenUIAccess;
_TOKEN_INFORMATION_CLASS TokenUser;
_TOKEN_INFORMATION_CLASS TokenUserClaimAttributes;
_TOKEN_INFORMATION_CLASS TokenVirtualizationAllowed;
_TOKEN_INFORMATION_CLASS TokenVirtualizationEnabled;
_POWER_INFORMATION_LEVEL TraceApplicationPowerMessage;
_POWER_INFORMATION_LEVEL TraceApplicationPowerMessageEnd;
_POWER_INFORMATION_LEVEL TraceServicePowerMessage;
_KTHREAD_STATE Transition;
_MMLISTS TransitionPage;
BOOL __stdcall TranslateCharsetInfo(PDWORD, LPCHARSETINFO, DWORD);
BOOL __stdcall TransparentBlt(HDC, int, int, int, int, HDC, int, int, int, int, UINT);
_INTERFACE_TYPE TurboChannel;
MACRO_UCSCHAR UCSCHAR_INVALID_CHARACTER;
_RTL_UMSCTX_FLAGS UMSCTX_DEBUG_ACTIVE_BIT;
_RTL_UMSCTX_FLAGS UMSCTX_DENY_RUNNING_ON_SELF_THREAD_BIT;
_RTL_UMSCTX_FLAGS UMSCTX_RUNNING_ON_SELF_THREAD_BIT;
_RTL_UMSCTX_FLAGS UMSCTX_SCHEDULED_THREAD_BIT;
_RTL_UMSCTX_FLAGS UMSCTX_SUSPENDED_BIT;
_RTL_UMSCTX_FLAGS UMSCTX_TERMINATED_BIT;
_RTL_UMSCTX_FLAGS UMSCTX_VOLATILE_CONTEXT_BIT;
MACRO_ANSI UNICODE_NULL;
MACRO_UNICODE UNICODE_STRING_MAX_BYTES;
MACRO_UNICODE UNICODE_STRING_MAX_CHARS;
MACRO_SECURITY_INFORMATION UNPROTECTED_DACL_SECURITY_INFORMATION;
MACRO_SECURITY_INFORMATION UNPROTECTED_SACL_SECURITY_INFORMATION;
$5FB4B89D89D7F3E9E930012D26E1CC5E UNSPECIFIED_COMPARTMENT_ID;
MACRO_USER USER_SHARED_DATA;
MACRO_USER_SHARED USER_SHARED_DATA_INTERRUPT_TIME;
MACRO_USER_SHARED USER_SHARED_DATA_PROCESSOR_FEATURES;
MACRO_USER_SHARED USER_SHARED_DATA_SYSTEM_TIME;
MACRO_USER_SHARED USER_SHARED_DATA_TICK_COUNT;
MACRO_USE USE___UUIDOF;
_RTL_UMS_SCHEDULER_REASON UmsSchedulerStartup;
_RTL_UMS_SCHEDULER_REASON UmsSchedulerThreadBlocked;
_RTL_UMS_SCHEDULER_REASON UmsSchedulerThreadYield;
_MEDIA_TYPE Unknown;
BOOL __stdcall UnrealizeObject(HGDIOBJ);
BOOL __stdcall UpdateColors(HDC);
BOOL __stdcall UpdateICMRegKeyA(DWORD, LPSTR, LPSTR, UINT);
BOOL __stdcall UpdateICMRegKeyW(DWORD, LPWSTR, LPWSTR, UINT);
_APPCOMPAT_USERFLAGS UseDefaultCharset;
_APPCOMPAT_FLAGS UserDisableForwarderPatch;
_MODE UserMode;
_KWAIT_REASON UserRequest;
MACRO_VALID VALID_INHERIT_FLAGS;
MACRO_VALID_NTFT VALID_NTFT;
MACRO_PITCH VARIABLE_PITCH;
MACRO_VERTRES VERTRES;
MACRO_VERTSIZE VERTSIZE;
MACRO_VER_MINORVERSION VER_AND;
MACRO_VER_MINORVERSION VER_BUILDNUMBER;
MACRO_VER_CONDITION VER_CONDITION_MASK;
MACRO_VER_MINORVERSION VER_EQUAL;
MACRO_VER_MINORVERSION VER_GREATER;
MACRO_VER_MINORVERSION VER_GREATER_EQUAL;
MACRO_VER_MINORVERSION VER_LESS;
MACRO_VER_MINORVERSION VER_LESS_EQUAL;
MACRO_VER_MINORVERSION VER_MAJORVERSION;
MACRO_VER_MINORVERSION VER_MINORVERSION;
MACRO_VER_MINORVERSION VER_NT_DOMAIN_CONTROLLER;
MACRO_VER_MINORVERSION VER_NT_SERVER;
MACRO_VER_MINORVERSION VER_NT_WORKSTATION;
MACRO_VER_CONDITION VER_NUM_BITS_PER_CONDITION_MASK;
MACRO_VER_MINORVERSION VER_OR;
MACRO_VER_MINORVERSION VER_PLATFORMID;
MACRO_VER_MINORVERSION VER_PLATFORM_WIN32_NT;
MACRO_VER_MINORVERSION VER_PLATFORM_WIN32_WINDOWS;
MACRO_VER_MINORVERSION VER_PLATFORM_WIN32s;
MACRO_VER_MINORVERSION VER_PRODUCT_TYPE;
MACRO_VER VER_SERVER_NT;
MACRO_VER_MINORVERSION VER_SERVICEPACKMAJOR;
MACRO_VER_MINORVERSION VER_SERVICEPACKMINOR;
MACRO_VER_MINORVERSION VER_SUITENAME;
MACRO_VER VER_SUITE_BACKOFFICE;
MACRO_VER VER_SUITE_BLADE;
MACRO_VER VER_SUITE_COMMUNICATIONS;
MACRO_VER VER_SUITE_COMPUTE_SERVER;
MACRO_VER VER_SUITE_DATACENTER;
MACRO_VER VER_SUITE_EMBEDDEDNT;
MACRO_VER VER_SUITE_EMBEDDED_RESTRICTED;
MACRO_VER VER_SUITE_ENTERPRISE;
MACRO_VER VER_SUITE_PERSONAL;
MACRO_VER VER_SUITE_SECURITY_APPLIANCE;
MACRO_VER VER_SUITE_SINGLEUSERTS;
MACRO_VER VER_SUITE_SMALLBUSINESS;
MACRO_VER VER_SUITE_SMALLBUSINESS_RESTRICTED;
MACRO_VER VER_SUITE_STORAGE_SERVER;
MACRO_VER VER_SUITE_TERMINAL;
MACRO_VER VER_SUITE_WH_SERVER;
MACRO_VER VER_WORKSTATION_NT;
_VF_FAILURE_CLASS VFFAILURE_FAIL_IN_FIELD;
_VF_FAILURE_CLASS VFFAILURE_FAIL_LOGO;
_VF_FAILURE_CLASS VFFAILURE_FAIL_UNDER_DEBUGGER;
_VF_OBJECT_TYPE VFOBJTYPE_DEVICE;
_VF_OBJECT_TYPE VFOBJTYPE_DRIVER;
_VF_OBJECT_TYPE VFOBJTYPE_SYSTEM_BIOS;
MACRO_VIDMEM VIDMEM_HEAPDISABLED;
MACRO_VIDMEM VIDMEM_ISHEAP;
MACRO_VIDMEM VIDMEM_ISLINEAR;
MACRO_VIDMEM VIDMEM_ISNONLOCAL;
MACRO_VIDMEM VIDMEM_ISRECTANGULAR;
MACRO_VIDMEM VIDMEM_ISWC;
MACRO_CHARSET VIETNAMESE_CHARSET;
MACRO_CHARSET VISCII_CHARSET;
_INTERFACE_TYPE VMEBus;
_BUS_DATA_TYPE VMEConfiguration;
MACRO_VOLUME VOLUME_IS_DIRTY;
MACRO_VOLUME VOLUME_SESSION_OPEN;
MACRO_VOLUME VOLUME_UPGRADE_SCHEDULED;
MACRO_VREFRESH VREFRESH;
MACRO_VTA VTA_BASELINE;
MACRO_VTA VTA_BOTTOM;
MACRO_VTA VTA_CENTER;
MACRO_VTA VTA_LEFT;
MACRO_VTA VTA_RIGHT;
MACRO_VTA VTA_TOP;
_MI_VAD_TYPE VadAwe;
_MI_VAD_TYPE VadDevicePhysicalMemory;
_MI_VAD_TYPE VadImageMap;
_MI_VAD_TYPE VadLargePageSection;
_MI_VAD_TYPE VadLargePages;
_MI_VAD_TYPE VadNone;
_MI_VAD_TYPE VadRotatePhysical;
_MI_VAD_TYPE VadWriteWatch;
_VDMSERVICECLASS VdmAdlibEmulation;
_VDMSERVICECLASS VdmDelayInterrupt;
_VDMSERVICECLASS VdmFeatures;
_VDMSERVICECLASS VdmInitialize;
_VDMSERVICECLASS VdmPMCliControl;
_VDMSERVICECLASS VdmPrinterDirectIoClose;
_VDMSERVICECLASS VdmPrinterDirectIoOpen;
_VDMSERVICECLASS VdmPrinterInitialize;
_VDMSERVICECLASS VdmQueryDir;
_VDMSERVICECLASS VdmQueryVdmProcess;
_VDMSERVICECLASS VdmQueueInterrupt;
_VDMSERVICECLASS VdmSetInt21Handler;
_VDMSERVICECLASS VdmSetLdtEntries;
_VDMSERVICECLASS VdmSetProcessLdtInfo;
_VDMSERVICECLASS VdmStartExecution;
ULONGLONG __stdcall VerSetConditionMask(ULONGLONG, DWORD, BYTE);
_POWER_INFORMATION_LEVEL VerifyProcessorPowerPolicyAc;
_POWER_INFORMATION_LEVEL VerifyProcessorPowerPolicyDc;
_POWER_INFORMATION_LEVEL VerifySystemPolicyAc;
_POWER_INFORMATION_LEVEL VerifySystemPolicyDc;
_PLUGPLAY_EVENT_CATEGORY VetoEvent;
_SECTION_INHERIT ViewShare;
_SECTION_INHERIT ViewUnmap;
MACRO_QUANTUM_DECREMENT WAIT_QUANTUM_DECREMENT;
MACRO_WAIT WAIT_TIMEOUT;
MACRO_WARNING WARNING_IPSEC_MM_POLICY_PRUNED;
MACRO_WARNING WARNING_IPSEC_QM_POLICY_PRUNED;
MACRO_WEOF WEOF;
MACRO_WGL WGL_FONT_LINES;
MACRO_WGL WGL_FONT_POLYGONS;
MACRO_WGL_SWAPMULTIPLE WGL_SWAPMULTIPLE_MAX;
MACRO_WGL_SWAP WGL_SWAP_MAIN_PLANE;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY1;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY10;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY11;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY12;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY13;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY14;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY15;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY2;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY3;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY4;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY5;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY6;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY7;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY8;
MACRO_WGL_SWAP WGL_SWAP_OVERLAY9;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY1;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY10;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY11;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY12;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY13;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY14;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY15;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY2;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY3;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY4;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY5;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY6;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY7;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY8;
MACRO_WGL_SWAP WGL_SWAP_UNDERLAY9;
MACRO_WHITENESS WHITENESS;
MACRO_BLACKONWHITE WHITEONBLACK;
MACRO_BRUSH WHITE_BRUSH;
MACRO_PEN WHITE_PEN;
MACRO_SERVICE_INDEX WIN32K_SERVICE_INDEX;
MACRO_WINDDI WINDDI_MAXSETPALETTECOLORINDEX;
MACRO_WINDDI WINDDI_MAXSETPALETTECOLORS;
MACRO_WINDDI_MAX WINDDI_MAX_BROADCAST_CONTEXT;
MACRO_ALTERNATE WINDING;
MACRO_STRICT WINVER;
MACRO_WMIREG WMIREG_FLAG_TRACE_NOTIFY_MASK;
MACRO_WMIREG WMIREG_FLAG_TRACE_PROVIDER;
MACRO_WMIREG WMIREG_NOTIFY_DISK_IO;
MACRO_WMIREG WMIREG_NOTIFY_TDI_IO;
MACRO_WNDOBJ WNDOBJ_SETUP;
BOOL __stdcall WNDOBJ_bEnum(WNDOBJ *pwo, ULONG cj, ULONG *pul);
ULONG __stdcall WNDOBJ_cEnumStart(WNDOBJ *pwo, ULONG iType, ULONG iDirection, ULONG cLimit);
void __stdcall WNDOBJ_vSetConsumer(WNDOBJ *pwo, PVOID pvConsumer);
MACRO_WOC WOC_CHANGED;
MACRO_WOC WOC_DELETE;
MACRO_WOC WOC_DRAWN;
MACRO_WOC WOC_RGN_CLIENT;
MACRO_WOC WOC_RGN_CLIENT_DELTA;
MACRO_WOC WOC_RGN_SPRITE;
MACRO_WOC WOC_RGN_SURFACE;
MACRO_WOC WOC_RGN_SURFACE_DELTA;
MACRO_WOC WOC_SPRITE_NO_OVERLAP;
MACRO_WOC WOC_SPRITE_OVERLAP;
MACRO_WO WO_DRAW_NOTIFY;
MACRO_WO WO_RGN_CLIENT;
MACRO_WO WO_RGN_CLIENT_DELTA;
MACRO_WO WO_RGN_DESKTOP_COORD;
MACRO_WO WO_RGN_SPRITE;
MACRO_WO WO_RGN_SURFACE;
MACRO_WO WO_RGN_SURFACE_DELTA;
MACRO_WO WO_RGN_UPDATE_ALL;
MACRO_WO WO_RGN_WINDOW;
MACRO_WO WO_SPRITE_NOTIFY;
MACRO_WRITE_DAC WRITE_DAC;
MACRO_WRITE_DAC WRITE_OWNER;
MACRO_WRITE WRITE_WATCH_FLAG_RESET;
MACRO_WSABASEERR WSABASEERR;
MACRO_WSAEACCES WSAEACCES;
MACRO_WSAEADDRINUSE WSAEADDRINUSE;
MACRO_WSAEADDRNOTAVAIL WSAEADDRNOTAVAIL;
MACRO_WSAEAFNOSUPPORT WSAEAFNOSUPPORT;
MACRO_WSAEALREADY WSAEALREADY;
MACRO_WSAEBADF WSAEBADF;
MACRO_WSAECANCELLED WSAECANCELLED;
MACRO_WSAECONNABORTED WSAECONNABORTED;
MACRO_WSAECONNREFUSED WSAECONNREFUSED;
MACRO_WSAECONNRESET WSAECONNRESET;
MACRO_WSAEDESTADDRREQ WSAEDESTADDRREQ;
MACRO_WSAEDISCON WSAEDISCON;
MACRO_WSAEDQUOT WSAEDQUOT;
MACRO_WSAEFAULT WSAEFAULT;
MACRO_WSAEHOSTDOWN WSAEHOSTDOWN;
MACRO_WSAEHOSTUNREACH WSAEHOSTUNREACH;
MACRO_WSAEINPROGRESS WSAEINPROGRESS;
MACRO_WSAEINTR WSAEINTR;
MACRO_WSAEINVAL WSAEINVAL;
MACRO_WSAEINVALIDPROCTABLE WSAEINVALIDPROCTABLE;
MACRO_WSAEINVALIDPROVIDER WSAEINVALIDPROVIDER;
MACRO_WSAEISCONN WSAEISCONN;
MACRO_WSAELOOP WSAELOOP;
MACRO_WSAEMFILE WSAEMFILE;
MACRO_WSAEMSGSIZE WSAEMSGSIZE;
MACRO_WSAENAMETOOLONG WSAENAMETOOLONG;
MACRO_WSAENETDOWN WSAENETDOWN;
MACRO_WSAENETRESET WSAENETRESET;
MACRO_WSAENETUNREACH WSAENETUNREACH;
MACRO_WSAENOBUFS WSAENOBUFS;
MACRO_WSAENOMORE WSAENOMORE;
MACRO_WSAENOPROTOOPT WSAENOPROTOOPT;
MACRO_WSAENOTCONN WSAENOTCONN;
MACRO_WSAENOTEMPTY WSAENOTEMPTY;
MACRO_WSAENOTSOCK WSAENOTSOCK;
MACRO_WSAEOPNOTSUPP WSAEOPNOTSUPP;
MACRO_WSAEPFNOSUPPORT WSAEPFNOSUPPORT;
MACRO_WSAEPROCLIM WSAEPROCLIM;
MACRO_WSAEPROTONOSUPPORT WSAEPROTONOSUPPORT;
MACRO_WSAEPROTOTYPE WSAEPROTOTYPE;
MACRO_WSAEPROVIDERFAILEDINIT WSAEPROVIDERFAILEDINIT;
MACRO_WSAEREFUSED WSAEREFUSED;
MACRO_WSAEREMOTE WSAEREMOTE;
MACRO_WSAESHUTDOWN WSAESHUTDOWN;
MACRO_WSAESOCKTNOSUPPORT WSAESOCKTNOSUPPORT;
MACRO_WSAESTALE WSAESTALE;
MACRO_WSAETIMEDOUT WSAETIMEDOUT;
MACRO_WSAETOOMANYREFS WSAETOOMANYREFS;
MACRO_WSAEUSERS WSAEUSERS;
MACRO_WSAEWOULDBLOCK WSAEWOULDBLOCK;
MACRO_WSAHOST WSAHOST_NOT_FOUND;
MACRO_WSANOTINITIALISED WSANOTINITIALISED;
MACRO_WSANO WSANO_DATA;
MACRO_WSANO WSANO_RECOVERY;
MACRO_NOT_FOUND WSASERVICE_NOT_FOUND;
MACRO_WSASYSCALLFAILURE WSASYSCALLFAILURE;
MACRO_WSASYSNOTREADY WSASYSNOTREADY;
MACRO_WSATRY WSATRY_AGAIN;
MACRO_NOT_FOUND WSATYPE_NOT_FOUND;
MACRO_WSAVERNOTSUPPORTED WSAVERNOTSUPPORTED;
MACRO_WSA WSA_E_CANCELLED;
MACRO_WSA WSA_E_NO_MORE;
MACRO_WSA_QOS WSA_QOS_ADMISSION_FAILURE;
MACRO_WSA_QOS WSA_QOS_BAD_OBJECT;
MACRO_WSA_QOS WSA_QOS_BAD_STYLE;
MACRO_WSA_QOS WSA_QOS_EFILTERCOUNT;
MACRO_WSA_QOS WSA_QOS_EFILTERSTYLE;
MACRO_WSA_QOS WSA_QOS_EFILTERTYPE;
MACRO_WSA_QOS WSA_QOS_EFLOWCOUNT;
MACRO_WSA_QOS WSA_QOS_EFLOWDESC;
MACRO_WSA_QOS WSA_QOS_EFLOWSPEC;
MACRO_WSA_QOS WSA_QOS_EOBJLENGTH;
MACRO_WSA_QOS WSA_QOS_EPOLICYOBJ;
MACRO_WSA_QOS WSA_QOS_EPROVSPECBUF;
MACRO_WSA_QOS WSA_QOS_EPSFILTERSPEC;
MACRO_WSA_QOS WSA_QOS_EPSFLOWSPEC;
MACRO_WSA_QOS WSA_QOS_ESDMODEOBJ;
MACRO_WSA_QOS WSA_QOS_ESERVICETYPE;
MACRO_WSA_QOS WSA_QOS_ESHAPERATEOBJ;
MACRO_WSA_QOS WSA_QOS_EUNKNOWNPSOBJ;
MACRO_WSA_QOS WSA_QOS_GENERIC_ERROR;
MACRO_WSA_QOS WSA_QOS_NO_RECEIVERS;
MACRO_WSA_QOS WSA_QOS_NO_SENDERS;
MACRO_WSA_QOS WSA_QOS_POLICY_FAILURE;
MACRO_WSA_QOS WSA_QOS_RECEIVERS;
MACRO_WSA_QOS WSA_QOS_REQUEST_CONFIRMED;
MACRO_WSA_QOS WSA_QOS_RESERVED_PETYPE;
MACRO_WSA_QOS WSA_QOS_SENDERS;
MACRO_WSA_QOS WSA_QOS_TRAFFIC_CTRL_ERROR;
MACRO_WT WT_EXECUTEDEFAULT;
MACRO_WT WT_EXECUTEINIOTHREAD;
MACRO_WT WT_EXECUTEINPERSISTENTIOTHREAD;
MACRO_WT WT_EXECUTEINPERSISTENTTHREAD;
MACRO_WT WT_EXECUTEINTIMERTHREAD;
MACRO_WT WT_EXECUTEINUITHREAD;
MACRO_WT WT_EXECUTEINWAITTHREAD;
MACRO_WT WT_EXECUTELONGFUNCTION;
MACRO_WT WT_EXECUTEONLYONCE;
MACRO_WT WT_TRANSFER_IMPERSONATION;
_WAIT_TYPE WaitAll;
_WAIT_TYPE WaitAny;
_KTHREAD_STATE Waiting;
_POWER_INFORMATION_LEVEL WakeTimerList;
BOOL __stdcall WidenPath(HDC);
_CM_SERVICE_NODE_TYPE Win32ServiceOwnProcess;
_CM_SERVICE_NODE_TYPE Win32ServiceShareProcess;
_WELL_KNOWN_SID_TYPE WinAccountAdministratorSid;
_WELL_KNOWN_SID_TYPE WinAccountCertAdminsSid;
_WELL_KNOWN_SID_TYPE WinAccountCloneableControllersSid;
_WELL_KNOWN_SID_TYPE WinAccountComputersSid;
_WELL_KNOWN_SID_TYPE WinAccountControllersSid;
_WELL_KNOWN_SID_TYPE WinAccountDomainAdminsSid;
_WELL_KNOWN_SID_TYPE WinAccountDomainGuestsSid;
_WELL_KNOWN_SID_TYPE WinAccountDomainUsersSid;
_WELL_KNOWN_SID_TYPE WinAccountEnterpriseAdminsSid;
_WELL_KNOWN_SID_TYPE WinAccountGuestSid;
_WELL_KNOWN_SID_TYPE WinAccountKrbtgtSid;
_WELL_KNOWN_SID_TYPE WinAccountPolicyAdminsSid;
_WELL_KNOWN_SID_TYPE WinAccountProtectedUsersSid;
_WELL_KNOWN_SID_TYPE WinAccountRasAndIasServersSid;
_WELL_KNOWN_SID_TYPE WinAccountReadonlyControllersSid;
_WELL_KNOWN_SID_TYPE WinAccountSchemaAdminsSid;
_WELL_KNOWN_SID_TYPE WinAnonymousSid;
_WELL_KNOWN_SID_TYPE WinApplicationPackageAuthoritySid;
_WELL_KNOWN_SID_TYPE WinAuthenticatedUserSid;
_WELL_KNOWN_SID_TYPE WinAuthenticationAuthorityAssertedSid;
_WELL_KNOWN_SID_TYPE WinAuthenticationServiceAssertedSid;
_WELL_KNOWN_SID_TYPE WinBatchSid;
_WELL_KNOWN_SID_TYPE WinBuiltinAccessControlAssistanceOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinAccountOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinAdministratorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinAnyPackageSid;
_WELL_KNOWN_SID_TYPE WinBuiltinAuthorizationAccessSid;
_WELL_KNOWN_SID_TYPE WinBuiltinBackupOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinCertSvcDComAccessGroup;
_WELL_KNOWN_SID_TYPE WinBuiltinCryptoOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinDCOMUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinDomainSid;
_WELL_KNOWN_SID_TYPE WinBuiltinEventLogReadersGroup;
_WELL_KNOWN_SID_TYPE WinBuiltinGuestsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinHyperVAdminsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinIUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinIncomingForestTrustBuildersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinNetworkConfigurationOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinPerfLoggingUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinPerfMonitoringUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinPowerUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinPreWindows2000CompatibleAccessSid;
_WELL_KNOWN_SID_TYPE WinBuiltinPrintOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinRDSEndpointServersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinRDSManagementServersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinRDSRemoteAccessServersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinRemoteDesktopUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinRemoteManagementUsersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinReplicatorSid;
_WELL_KNOWN_SID_TYPE WinBuiltinSystemOperatorsSid;
_WELL_KNOWN_SID_TYPE WinBuiltinTerminalServerLicenseServersSid;
_WELL_KNOWN_SID_TYPE WinBuiltinUsersSid;
_WELL_KNOWN_SID_TYPE WinCacheablePrincipalsGroupSid;
_WELL_KNOWN_SID_TYPE WinCapabilityDocumentsLibrarySid;
_WELL_KNOWN_SID_TYPE WinCapabilityEnterpriseAuthenticationSid;
_WELL_KNOWN_SID_TYPE WinCapabilityInternetClientServerSid;
_WELL_KNOWN_SID_TYPE WinCapabilityInternetClientSid;
_WELL_KNOWN_SID_TYPE WinCapabilityMusicLibrarySid;
_WELL_KNOWN_SID_TYPE WinCapabilityPicturesLibrarySid;
_WELL_KNOWN_SID_TYPE WinCapabilityPrivateNetworkClientServerSid;
_WELL_KNOWN_SID_TYPE WinCapabilityRemovableStorageSid;
_WELL_KNOWN_SID_TYPE WinCapabilitySharedUserCertificatesSid;
_WELL_KNOWN_SID_TYPE WinCapabilityVideosLibrarySid;
_WELL_KNOWN_SID_TYPE WinConsoleLogonSid;
_WELL_KNOWN_SID_TYPE WinCreatorGroupServerSid;
_WELL_KNOWN_SID_TYPE WinCreatorGroupSid;
_WELL_KNOWN_SID_TYPE WinCreatorOwnerRightsSid;
_WELL_KNOWN_SID_TYPE WinCreatorOwnerServerSid;
_WELL_KNOWN_SID_TYPE WinCreatorOwnerSid;
_WELL_KNOWN_SID_TYPE WinDialupSid;
_WELL_KNOWN_SID_TYPE WinDigestAuthenticationSid;
_WELL_KNOWN_SID_TYPE WinEnterpriseControllersSid;
_WELL_KNOWN_SID_TYPE WinEnterpriseReadonlyControllersSid;
_WELL_KNOWN_SID_TYPE WinHighLabelSid;
_WELL_KNOWN_SID_TYPE WinIUserSid;
_WELL_KNOWN_SID_TYPE WinInteractiveSid;
_WELL_KNOWN_SID_TYPE WinLocalAccountAndAdministratorSid;
_WELL_KNOWN_SID_TYPE WinLocalAccountSid;
_WELL_KNOWN_SID_TYPE WinLocalLogonSid;
_WELL_KNOWN_SID_TYPE WinLocalServiceSid;
_WELL_KNOWN_SID_TYPE WinLocalSid;
_WELL_KNOWN_SID_TYPE WinLocalSystemSid;
_WELL_KNOWN_SID_TYPE WinLogonIdsSid;
_WELL_KNOWN_SID_TYPE WinLowLabelSid;
_WELL_KNOWN_SID_TYPE WinMediumLabelSid;
_WELL_KNOWN_SID_TYPE WinMediumPlusLabelSid;
_WELL_KNOWN_SID_TYPE WinNTLMAuthenticationSid;
_WELL_KNOWN_SID_TYPE WinNetworkServiceSid;
_WELL_KNOWN_SID_TYPE WinNetworkSid;
_WELL_KNOWN_SID_TYPE WinNewEnterpriseReadonlyControllersSid;
_WELL_KNOWN_SID_TYPE WinNonCacheablePrincipalsGroupSid;
_WELL_KNOWN_SID_TYPE WinNtAuthoritySid;
_WELL_KNOWN_SID_TYPE WinNullSid;
_WELL_KNOWN_SID_TYPE WinOtherOrganizationSid;
_WELL_KNOWN_SID_TYPE WinProxySid;
_WELL_KNOWN_SID_TYPE WinRemoteLogonIdSid;
_WELL_KNOWN_SID_TYPE WinRestrictedCodeSid;
_WELL_KNOWN_SID_TYPE WinSChannelAuthenticationSid;
_WELL_KNOWN_SID_TYPE WinSelfSid;
_WELL_KNOWN_SID_TYPE WinServiceSid;
_WELL_KNOWN_SID_TYPE WinSystemLabelSid;
_WELL_KNOWN_SID_TYPE WinTerminalServerSid;
_WELL_KNOWN_SID_TYPE WinThisOrganizationCertificateSid;
_WELL_KNOWN_SID_TYPE WinThisOrganizationSid;
_WELL_KNOWN_SID_TYPE WinUntrustedLabelSid;
_WELL_KNOWN_SID_TYPE WinUserModeDriversSid;
_WELL_KNOWN_SID_TYPE WinWorldSid;
_WELL_KNOWN_SID_TYPE WinWriteRestrictedCodeSid;
_KWAIT_REASON WrDelayExecution;
_KWAIT_REASON WrDispatchInt;
_KWAIT_REASON WrEventPair;
_KWAIT_REASON WrExecutive;
_KWAIT_REASON WrFreePage;
_KWAIT_REASON WrGuardedMutex;
_KWAIT_REASON WrKernel;
_KWAIT_REASON WrLpcReceive;
_KWAIT_REASON WrLpcReply;
_KWAIT_REASON WrMutex;
_KWAIT_REASON WrPageIn;
_KWAIT_REASON WrPageOut;
_KWAIT_REASON WrPoolAllocation;
_KWAIT_REASON WrPreempted;
_KWAIT_REASON WrPushLock;
_KWAIT_REASON WrQuantumEnd;
_KWAIT_REASON WrQueue;
_KWAIT_REASON WrRendezvous;
_KWAIT_REASON WrResource;
_KWAIT_REASON WrSuspended;
_KWAIT_REASON WrUserRequest;
_KWAIT_REASON WrVirtualMemory;
_KWAIT_REASON WrYieldExecution;
BOOL __stdcall XFORMOBJ_bApplyXform(XFORMOBJ *pxo, ULONG iMode, ULONG cPoints, PVOID pvIn, PVOID pvOut);
HANDLE __stdcall XFORMOBJ_cmGetTransform(XFORMOBJ *pxo);
ULONG __stdcall XFORMOBJ_iGetFloatObjXform(XFORMOBJ *pxo, FLOATOBJ_XFORM *pxfo);
ULONG __stdcall XFORMOBJ_iGetXform(XFORMOBJ *pxo, XFORML *pxform);
MACRO_XF XF_INV_FXTOL;
MACRO_XF XF_INV_LTOL;
MACRO_XF XF_LTOFX;
MACRO_XF XF_LTOL;
ULONG __stdcall XLATEOBJ_cGetPalette(XLATEOBJ *pxlo, ULONG iPal, ULONG cPal, ULONG *pPal);
HANDLE __stdcall XLATEOBJ_hGetColorTransform(XLATEOBJ *pxlo);
ULONG __stdcall XLATEOBJ_iXlate(XLATEOBJ *pxlo, ULONG iColor);
ULONG *__stdcall XLATEOBJ_piVector(XLATEOBJ *pxlo);
MACRO_XO_SRCPALETTE XO_DESTBITFIELDS;
MACRO_XO_SRCPALETTE XO_DESTDCPALETTE;
MACRO_XO_SRCPALETTE XO_DESTPALETTE;
MACRO_XO XO_DEVICE_ICM;
MACRO_XO XO_FROM_CMYK;
MACRO_XO XO_HOST_ICM;
MACRO_XO_SRCPALETTE XO_SRCBITFIELDS;
MACRO_XO_SRCPALETTE XO_SRCPALETTE;
MACRO_XO XO_TABLE;
MACRO_XO XO_TO_MONO;
MACRO_XO XO_TRIVIAL;
_MMLISTS ZeroedPageList;
NTSTATUS __stdcall ZwAcceptConnectPort(PHANDLE PortHandle, PVOID PortContext, PPORT_MESSAGE ConnectionRequest, BOOLEAN AcceptConnection, PPORT_VIEW ServerView, PREMOTE_PORT_VIEW ClientView);
NTSTATUS __stdcall ZwAccessCheck(PSECURITY_DESCRIPTOR SecurityDescriptor, HANDLE ClientToken, ACCESS_MASK DesiredAccess, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, PULONG ReturnLength, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall ZwAccessCheckAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, ACCESS_MASK DesiredAccess, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwAccessCheckByType(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, ACCESS_MASK DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, PULONG PrivilegeSetLength, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall ZwAccessCheckByTypeAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, ACCESS_MASK DesiredAccess, AUDIT_EVENT_TYPE AuditType, ULONG Flags, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeLength, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwAccessCheckByTypeResultList(PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, ACCESS_MASK DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, PULONG PrivilegeSetLength, PACCESS_MASK GrantedAccess, PNTSTATUS AccessStatus);
NTSTATUS __stdcall ZwAccessCheckByTypeResultListAndAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, ACCESS_MASK DesiredAccess, AUDIT_EVENT_TYPE AuditType, ULONG Flags, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccessList, PNTSTATUS AccessStatusList, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwAccessCheckByTypeResultListAndAuditAlarmByHandle(PUNICODE_STRING SubsystemName, PVOID HandleId, HANDLE ClientToken, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, ACCESS_MASK DesiredAccess, AUDIT_EVENT_TYPE AuditType, ULONG Flags, POBJECT_TYPE_LIST ObjectTypeList, ULONG ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOLEAN ObjectCreation, PACCESS_MASK GrantedAccessList, PNTSTATUS AccessStatusList, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwAddAtom(PWSTR AtomName, ULONG AtomNameLength, PRTL_ATOM Atom);
NTSTATUS __stdcall ZwAddBootEntry(PUNICODE_STRING EntryName, PUNICODE_STRING EntryValue);
NTSTATUS __stdcall ZwAdjustGroupsToken(HANDLE TokenHandle, BOOLEAN ResetToDefault, PTOKEN_GROUPS NewState, ULONG BufferLength, PTOKEN_GROUPS PreviousState, PULONG ReturnLength);
NTSTATUS __stdcall ZwAdjustPrivilegesToken(HANDLE TokenHandle, BOOLEAN DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, ULONG BufferLength, PTOKEN_PRIVILEGES PreviousState, PULONG ReturnLength);
NTSTATUS __stdcall ZwAlertResumeThread(HANDLE ThreadHandle, PULONG SuspendCount);
NTSTATUS __stdcall ZwAlertThread(HANDLE ThreadHandle);
NTSTATUS __stdcall ZwAllocateLocallyUniqueId(LUID *LocallyUniqueId);
NTSTATUS __stdcall ZwAllocateUserPhysicalPages(HANDLE ProcessHandle, PULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall ZwAllocateUuids(PULARGE_INTEGER Time, PULONG Range, PULONG Sequence, PUCHAR Seed);
NTSTATUS __stdcall ZwAllocateVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, ULONG_PTR ZeroBits, PSIZE_T RegionSize, ULONG AllocationType, ULONG Protect);
NTSTATUS __stdcall ZwAreMappedFilesTheSame(PVOID File1MappedAsAnImage, PVOID File2MappedAsFile);
NTSTATUS __stdcall ZwAssignProcessToJobObject(HANDLE JobHandle, HANDLE ProcessHandle);
NTSTATUS __stdcall ZwCallbackReturn(PVOID Result, ULONG ResultLength, NTSTATUS Status);
NTSTATUS __stdcall ZwCancelDeviceWakeupRequest(HANDLE Device);
NTSTATUS __stdcall ZwCancelIoFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock);
NTSTATUS __stdcall ZwCancelTimer(HANDLE TimerHandle, PBOOLEAN CurrentState);
NTSTATUS __stdcall ZwClearEvent(HANDLE EventHandle);
NTSTATUS __stdcall ZwClose(HANDLE Handle);
NTSTATUS __stdcall ZwCloseObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, BOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwCompactKeys(ULONG Count, PHANDLE KeyArray);
NTSTATUS __stdcall ZwCompareTokens(HANDLE FirstTokenHandle, HANDLE SecondTokenHandle, PBOOLEAN Equal);
NTSTATUS __stdcall ZwCompleteConnectPort(HANDLE PortHandle);
NTSTATUS __stdcall ZwCompressKey(HANDLE Key);
NTSTATUS __stdcall ZwConnectPort(PHANDLE PortHandle, PUNICODE_STRING PortName, PSECURITY_QUALITY_OF_SERVICE SecurityQos, PPORT_VIEW ClientView, PREMOTE_PORT_VIEW ServerView, PULONG MaxMessageLength, PVOID ConnectionInformation, PULONG ConnectionInformationLength);
NTSTATUS __stdcall ZwContinue(PCONTEXT Context, BOOLEAN TestAlert);
NTSTATUS __stdcall ZwCreateDebugObject(PHANDLE DebugHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG Flags);
NTSTATUS __stdcall ZwCreateDirectoryObject(PHANDLE DirectoryHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwCreateEvent(PHANDLE EventHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, EVENT_TYPE EventType, BOOLEAN InitialState);
NTSTATUS __stdcall ZwCreateEventPair(PHANDLE EventPairHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwCreateFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER AllocationSize, ULONG FileAttributes, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, PVOID EaBuffer, ULONG EaLength);
NTSTATUS __stdcall ZwCreateIoCompletion(PHANDLE IoCompletionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG NumberOfConcurrentThreads);
NTSTATUS __stdcall ZwCreateJobObject(PHANDLE JobHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwCreateJobSet(ULONG NumJob, PJOB_SET_ARRAY UserJobSet, ULONG Flags);
NTSTATUS __stdcall ZwCreateKey(PHANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG TitleIndex, PUNICODE_STRING Class, ULONG CreateOptions, PULONG Disposition);
NTSTATUS __stdcall ZwCreateKeyedEvent(PHANDLE OutHandle, ACCESS_MASK AccessMask, POBJECT_ATTRIBUTES ObjectAttributes, ULONG Flags);
NTSTATUS __stdcall ZwCreateMailslotFile(PHANDLE MailSlotFileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG FileAttributes, ULONG ShareAccess, ULONG MaxMessageSize, PLARGE_INTEGER TimeOut);
NTSTATUS __stdcall ZwCreateMutant(PHANDLE MutantHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, BOOLEAN InitialOwner);
NTSTATUS __stdcall ZwCreateNamedPipeFile(PHANDLE NamedPipeFileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG ShareAccess, ULONG CreateDisposition, ULONG CreateOptions, ULONG WriteModeMessage, ULONG ReadModeMessage, ULONG NonBlocking, ULONG MaxInstances, ULONG InBufferSize, ULONG OutBufferSize, PLARGE_INTEGER DefaultTimeOut);
NTSTATUS __stdcall ZwCreatePagingFile(PUNICODE_STRING FileName, PLARGE_INTEGER InitialSize, PLARGE_INTEGER MaxiumSize, ULONG Reserved);
NTSTATUS __stdcall ZwCreatePort(PHANDLE PortHandle, POBJECT_ATTRIBUTES ObjectAttributes, ULONG MaxConnectionInfoLength, ULONG MaxMessageLength, ULONG MaxPoolUsage);
NTSTATUS __stdcall ZwCreateProcess(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ParentProcess, BOOLEAN InheritObjectTable, HANDLE SectionHandle, HANDLE DebugPort, HANDLE ExceptionPort);
NTSTATUS __stdcall ZwCreateProcessEx(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ParentProcess, ULONG Flags, HANDLE SectionHandle, HANDLE DebugPort, HANDLE ExceptionPort, BOOLEAN InJob);
NTSTATUS __stdcall ZwCreateProfile(PHANDLE ProfileHandle, HANDLE ProcessHandle, PVOID ImageBase, ULONG ImageSize, ULONG Granularity, PVOID Buffer, ULONG ProfilingSize, KPROFILE_SOURCE Source, KAFFINITY ProcessorMask);
NTSTATUS __stdcall ZwCreateSection(PHANDLE SectionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PLARGE_INTEGER MaximumSize, ULONG SectionPageProtection, ULONG AllocationAttributes, HANDLE FileHandle);
NTSTATUS __stdcall ZwCreateSemaphore(PHANDLE SemaphoreHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, LONG InitialCount, LONG MaximumCount);
NTSTATUS __stdcall ZwCreateSymbolicLinkObject(PHANDLE SymbolicLinkHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PUNICODE_STRING Name);
NTSTATUS __stdcall ZwCreateThread(PHANDLE ThreadHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, HANDLE ProcessHandle, PCLIENT_ID ClientId, PCONTEXT ThreadContext, PINITIAL_TEB UserStack, BOOLEAN CreateSuspended);
NTSTATUS __stdcall ZwCreateTimer(PHANDLE TimerHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, TIMER_TYPE TimerType);
NTSTATUS __stdcall ZwCreateToken(PHANDLE TokenHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, TOKEN_TYPE TokenType, PLUID AuthenticationId, PLARGE_INTEGER ExpirationTime, PTOKEN_USER TokenUser, PTOKEN_GROUPS TokenGroups, PTOKEN_PRIVILEGES TokenPrivileges, PTOKEN_OWNER TokenOwner, PTOKEN_PRIMARY_GROUP TokenPrimaryGroup, PTOKEN_DEFAULT_DACL TokenDefaultDacl, PTOKEN_SOURCE TokenSource);
NTSTATUS __stdcall ZwCreateWaitablePort(PHANDLE PortHandle, POBJECT_ATTRIBUTES ObjectAttributes, ULONG MaxConnectInfoLength, ULONG MaxDataLength, ULONG NPMessageQueueSize);
NTSTATUS __stdcall ZwDebugActiveProcess(HANDLE Process, HANDLE DebugObject);
NTSTATUS __stdcall ZwDebugContinue(HANDLE DebugObject, PCLIENT_ID AppClientId, NTSTATUS ContinueStatus);
NTSTATUS __stdcall ZwDelayExecution(BOOLEAN Alertable, LARGE_INTEGER *Interval);
NTSTATUS __stdcall ZwDeleteAtom(RTL_ATOM Atom);
NTSTATUS __stdcall ZwDeleteBootEntry(PUNICODE_STRING EntryName, PUNICODE_STRING EntryValue);
NTSTATUS __stdcall ZwDeleteFile(POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwDeleteKey(HANDLE KeyHandle);
NTSTATUS __stdcall ZwDeleteObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, BOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwDeleteValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName);
NTSTATUS __stdcall ZwDeviceIoControlFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG IoControlCode, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);
NTSTATUS __stdcall ZwDisplayString(PUNICODE_STRING DisplayString);
NTSTATUS __stdcall ZwDuplicateObject(HANDLE SourceProcessHandle, HANDLE SourceHandle, HANDLE TargetProcessHandle, PHANDLE TargetHandle, ACCESS_MASK DesiredAccess, ULONG HandleAttributes, ULONG Options);
NTSTATUS __stdcall ZwDuplicateToken(HANDLE ExistingTokenHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, BOOLEAN EffectiveOnly, TOKEN_TYPE TokenType, PHANDLE NewTokenHandle);
NTSTATUS __stdcall ZwEnumerateBootEntries(PVOID Buffer, PULONG BufferLength);
NTSTATUS __stdcall ZwEnumerateKey(HANDLE KeyHandle, ULONG Index, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwEnumerateSystemEnvironmentValuesEx(ULONG InformationClass, PVOID Buffer, ULONG BufferLength);
NTSTATUS __stdcall ZwEnumerateValueKey(HANDLE KeyHandle, ULONG Index, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwExtendSection(HANDLE SectionHandle, PLARGE_INTEGER NewMaximumSize);
NTSTATUS __stdcall ZwFilterToken(HANDLE ExistingTokenHandle, ULONG Flags, PTOKEN_GROUPS SidsToDisable, PTOKEN_PRIVILEGES PrivilegesToDelete, PTOKEN_GROUPS RestrictedSids, PHANDLE NewTokenHandle);
NTSTATUS __stdcall ZwFindAtom(PWSTR AtomName, ULONG AtomNameLength, PRTL_ATOM Atom);
NTSTATUS __stdcall ZwFlushBuffersFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock);
NTSTATUS __stdcall ZwFlushInstructionCache(HANDLE ProcessHandle, PVOID BaseAddress, ULONG NumberOfBytesToFlush);
NTSTATUS __stdcall ZwFlushKey(HANDLE KeyHandle);
NTSTATUS __stdcall ZwFlushVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T RegionSize, PIO_STATUS_BLOCK IoStatus);
NTSTATUS __stdcall ZwFlushWriteBuffer();
NTSTATUS __stdcall ZwFreeUserPhysicalPages(HANDLE ProcessHandle, PULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall ZwFreeVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T RegionSize, ULONG FreeType);
NTSTATUS __stdcall ZwFsControlFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG FsControlCode, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);
NTSTATUS __stdcall ZwGetContextThread(HANDLE ThreadHandle, PCONTEXT Context);
NTSTATUS __stdcall ZwGetDevicePowerState(HANDLE Device, PDEVICE_POWER_STATE PowerState);
NTSTATUS __stdcall ZwGetPlugPlayEvent(ULONG Reserved1, ULONG Reserved2, PPLUGPLAY_EVENT_BLOCK Buffer, ULONG BufferSize);
ULONG __stdcall ZwGetTickCount();
NTSTATUS __stdcall ZwGetWriteWatch(HANDLE ProcessHandle, ULONG Flags, PVOID BaseAddress, SIZE_T RegionSize, PVOID *UserAddressArray, PULONG_PTR EntriesInUserAddressArray, PULONG Granularity);
NTSTATUS __stdcall ZwImpersonateAnonymousToken(HANDLE Thread);
NTSTATUS __stdcall ZwImpersonateClientOfPort(HANDLE PortHandle, PPORT_MESSAGE ClientMessage);
NTSTATUS __stdcall ZwImpersonateThread(HANDLE ThreadHandle, HANDLE ThreadToImpersonate, PSECURITY_QUALITY_OF_SERVICE SecurityQualityOfService);
NTSTATUS __stdcall ZwInitializeRegistry(USHORT Flag);
NTSTATUS __stdcall ZwInitiatePowerAction(POWER_ACTION SystemAction, SYSTEM_POWER_STATE MinSystemState, ULONG Flags, BOOLEAN Asynchronous);
NTSTATUS __stdcall ZwIsProcessInJob(HANDLE ProcessHandle, HANDLE JobHandle);
BOOLEAN __stdcall ZwIsSystemResumeAutomatic();
NTSTATUS __stdcall ZwListenPort(HANDLE PortHandle, PPORT_MESSAGE ConnectionRequest);
NTSTATUS __stdcall ZwLoadDriver(PUNICODE_STRING DriverServiceName);
NTSTATUS __stdcall ZwLoadKey(POBJECT_ATTRIBUTES KeyObjectAttributes, POBJECT_ATTRIBUTES FileObjectAttributes);
NTSTATUS __stdcall ZwLoadKey2(POBJECT_ATTRIBUTES KeyObjectAttributes, POBJECT_ATTRIBUTES FileObjectAttributes, ULONG Flags);
NTSTATUS __stdcall ZwLockFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER ByteOffset, PLARGE_INTEGER Length, ULONG Key, BOOLEAN FailImmediatedly, BOOLEAN ExclusiveLock);
NTSTATUS __stdcall ZwLockProductActivationKeys(PULONG pPrivateVer, PULONG pSafeMode);
NTSTATUS __stdcall ZwLockRegistryKey(HANDLE KeyHandle);
NTSTATUS __stdcall ZwLockVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T NumberOfBytesToLock, ULONG MapType);
NTSTATUS __stdcall ZwMakePermanentObject(HANDLE Object);
NTSTATUS __stdcall ZwMakeTemporaryObject(HANDLE Handle);
NTSTATUS __stdcall ZwMapUserPhysicalPages(PVOID VirtualAddresses, ULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall ZwMapUserPhysicalPagesScatter(PVOID *VirtualAddresses, ULONG_PTR NumberOfPages, PULONG_PTR UserPfnArray);
NTSTATUS __stdcall ZwMapViewOfSection(HANDLE SectionHandle, HANDLE ProcessHandle, PVOID *BaseAddress, ULONG_PTR ZeroBits, SIZE_T CommitSize, PLARGE_INTEGER SectionOffset, PSIZE_T ViewSize, SECTION_INHERIT InheritDisposition, ULONG AllocationType, ULONG Win32Protect);
NTSTATUS __stdcall ZwModifyBootEntry(PBOOT_ENTRY BootEntry);
NTSTATUS __stdcall ZwNotifyChangeDirectoryFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG BufferSize, ULONG CompletionFilter, BOOLEAN WatchTree);
NTSTATUS __stdcall ZwNotifyChangeKey(HANDLE KeyHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG CompletionFilter, BOOLEAN Asynchroneous, PVOID ChangeBuffer, ULONG Length, BOOLEAN WatchSubtree);
NTSTATUS __stdcall ZwNotifyChangeMultipleKeys(HANDLE MasterKeyHandle, ULONG Count, OBJECT_ATTRIBUTES SubordinateObjects[], HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG CompletionFilter, BOOLEAN WatchTree, PVOID Buffer, ULONG BufferSize, BOOLEAN Asynchronous);
NTSTATUS __stdcall ZwOpenDirectoryObject(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenEvent(PHANDLE EventHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenEventPair(PHANDLE EventPairHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenFile(PHANDLE FileHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PIO_STATUS_BLOCK IoStatusBlock, ULONG ShareAccess, ULONG OpenOptions);
NTSTATUS __stdcall ZwOpenIoCompletion(PHANDLE CompetionPort, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenJobObject(PHANDLE JobHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenKey(PHANDLE KeyHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenKeyedEvent(PHANDLE OutHandle, ACCESS_MASK AccessMask, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenMutant(PHANDLE MutantHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, PUNICODE_STRING ObjectTypeName, PUNICODE_STRING ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, HANDLE ClientToken, ULONG DesiredAccess, ULONG GrantedAccess, PPRIVILEGE_SET Privileges, BOOLEAN ObjectCreation, BOOLEAN AccessGranted, PBOOLEAN GenerateOnClose);
NTSTATUS __stdcall ZwOpenProcess(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID ClientId);
NTSTATUS __stdcall ZwOpenProcessToken(HANDLE ProcessHandle, ACCESS_MASK DesiredAccess, PHANDLE TokenHandle);
NTSTATUS __stdcall ZwOpenProcessTokenEx(HANDLE ProcessHandle, ACCESS_MASK DesiredAccess, ULONG HandleAttributes, PHANDLE TokenHandle);
NTSTATUS __stdcall ZwOpenSection(PHANDLE SectionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenSemaphore(PHANDLE SemaphoreHandle, ACCESS_MASK DesiredAcces, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenSymbolicLinkObject(PHANDLE SymbolicLinkHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwOpenThread(PHANDLE ThreadHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, PCLIENT_ID ClientId);
NTSTATUS __stdcall ZwOpenThreadToken(HANDLE ThreadHandle, ACCESS_MASK DesiredAccess, BOOLEAN OpenAsSelf, PHANDLE TokenHandle);
NTSTATUS __stdcall ZwOpenThreadTokenEx(HANDLE ThreadHandle, ACCESS_MASK DesiredAccess, BOOLEAN OpenAsSelf, ULONG HandleAttributes, PHANDLE TokenHandle);
NTSTATUS __stdcall ZwOpenTimer(PHANDLE TimerHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes);
NTSTATUS __stdcall ZwPlugPlayControl(PLUGPLAY_CONTROL_CLASS PlugPlayControlClass, PVOID Buffer, ULONG BufferSize);
NTSTATUS __stdcall ZwPowerInformation(POWER_INFORMATION_LEVEL InformationLevel, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength);
NTSTATUS __stdcall ZwPrivilegeCheck(HANDLE ClientToken, PPRIVILEGE_SET RequiredPrivileges, PBOOLEAN Result);
NTSTATUS __stdcall ZwPrivilegeObjectAuditAlarm(PUNICODE_STRING SubsystemName, PVOID HandleId, HANDLE ClientToken, ULONG DesiredAccess, PPRIVILEGE_SET Privileges, BOOLEAN AccessGranted);
NTSTATUS __stdcall ZwPrivilegedServiceAuditAlarm(PUNICODE_STRING SubsystemName, PUNICODE_STRING ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, BOOLEAN AccessGranted);
NTSTATUS __stdcall ZwProtectVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, SIZE_T *NumberOfBytesToProtect, ULONG NewAccessProtection, PULONG OldAccessProtection);
NTSTATUS __stdcall ZwPulseEvent(HANDLE EventHandle, PLONG PulseCount);
NTSTATUS __stdcall ZwQueryAttributesFile(POBJECT_ATTRIBUTES ObjectAttributes, PFILE_BASIC_INFORMATION FileInformation);
NTSTATUS __stdcall ZwQueryBootEntryOrder(PULONG Ids, PULONG Count);
NTSTATUS __stdcall ZwQueryBootOptions(PBOOT_OPTIONS BootOptions, PULONG BootOptionsLength);
NTSTATUS __stdcall ZwQueryDebugFilterState(ULONG ComponentId, ULONG Level);
NTSTATUS __stdcall ZwQueryDefaultLocale(BOOLEAN UserProfile, PLCID DefaultLocaleId);
NTSTATUS __stdcall ZwQueryDefaultUILanguage(LANGID *LanguageId);
NTSTATUS __stdcall ZwQueryDirectoryFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass, BOOLEAN ReturnSingleEntry, PUNICODE_STRING FileName, BOOLEAN RestartScan);
NTSTATUS __stdcall ZwQueryDirectoryObject(HANDLE DirectoryHandle, PVOID Buffer, ULONG BufferLength, BOOLEAN ReturnSingleEntry, BOOLEAN RestartScan, PULONG Context, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryEaFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, BOOLEAN ReturnSingleEntry, PVOID EaList, ULONG EaListLength, PULONG EaIndex, BOOLEAN RestartScan);
NTSTATUS __stdcall ZwQueryEvent(HANDLE EventHandle, EVENT_INFORMATION_CLASS EventInformationClass, PVOID EventInformation, ULONG EventInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryFullAttributesFile(POBJECT_ATTRIBUTES ObjectAttributes, PFILE_NETWORK_OPEN_INFORMATION FileInformation);
NTSTATUS __stdcall ZwQueryInformationAtom(RTL_ATOM Atom, ATOM_INFORMATION_CLASS AtomInformationClass, PVOID AtomInformation, ULONG AtomInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall ZwQueryInformationJobObject(HANDLE JobHandle, JOBOBJECTINFOCLASS JobInformationClass, PVOID JobInformation, ULONG JobInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryInformationPort(HANDLE PortHandle, PORT_INFORMATION_CLASS PortInformationClass, PVOID PortInformation, ULONG PortInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryInformationThread(HANDLE ThreadHandle, THREADINFOCLASS ThreadInformationClass, PVOID ThreadInformation, ULONG ThreadInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryInformationToken(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, PVOID TokenInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwQueryInstallUILanguage(LANGID *LanguageId);
NTSTATUS __stdcall ZwQueryIntervalProfile(KPROFILE_SOURCE ProfileSource, PULONG Interval);
NTSTATUS __stdcall ZwQueryIoCompletion(HANDLE IoCompletionHandle, IO_COMPLETION_INFORMATION_CLASS IoCompletionInformationClass, PVOID IoCompletionInformation, ULONG IoCompletionInformationLength, PULONG ResultLength);
NTSTATUS __stdcall ZwQueryKey(HANDLE KeyHandle, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwQueryMultipleValueKey(HANDLE KeyHandle, PKEY_VALUE_ENTRY ValueList, ULONG NumberOfValues, PVOID Buffer, PULONG Length, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryMutant(HANDLE MutantHandle, MUTANT_INFORMATION_CLASS MutantInformationClass, PVOID MutantInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwQueryObject(HANDLE Handle, OBJECT_INFORMATION_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG ObjectInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQueryOpenSubKeys(POBJECT_ATTRIBUTES TargetKey, PULONG HandleCount);
NTSTATUS __stdcall ZwQueryPerformanceCounter(PLARGE_INTEGER Counter, PLARGE_INTEGER Frequency);
NTSTATUS __stdcall ZwQueryPortInformationProcess();
NTSTATUS __stdcall ZwQueryQuotaInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, BOOLEAN ReturnSingleEntry, PVOID SidList, ULONG SidListLength, PSID StartSid, BOOLEAN RestartScan);
NTSTATUS __stdcall ZwQuerySection(HANDLE SectionHandle, SECTION_INFORMATION_CLASS SectionInformationClass, PVOID SectionInformation, SIZE_T Length, PSIZE_T ResultLength);
NTSTATUS __stdcall ZwQuerySecurityObject(HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor, ULONG Length, PULONG LengthNeeded);
NTSTATUS __stdcall ZwQuerySemaphore(HANDLE SemaphoreHandle, SEMAPHORE_INFORMATION_CLASS SemaphoreInformationClass, PVOID SemaphoreInformation, ULONG Length, PULONG ReturnLength);
NTSTATUS __stdcall ZwQuerySymbolicLinkObject(HANDLE LinkHandle, PUNICODE_STRING LinkTarget, PULONG ReturnedLength);
NTSTATUS __stdcall ZwQuerySystemEnvironmentValue(PUNICODE_STRING Name, PWSTR Value, ULONG Length, PULONG ReturnLength);
NTSTATUS __stdcall ZwQuerySystemEnvironmentValueEx(PUNICODE_STRING VariableName, LPGUID VendorGuid, PVOID Value, PULONG ReturnLength, PULONG Attributes);
NTSTATUS __stdcall ZwQuerySystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, ULONG SystemInformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwQuerySystemTime(PLARGE_INTEGER CurrentTime);
NTSTATUS __stdcall ZwQueryTimer(HANDLE TimerHandle, TIMER_INFORMATION_CLASS TimerInformationClass, PVOID TimerInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwQueryTimerResolution(PULONG MinimumResolution, PULONG MaximumResolution, PULONG ActualResolution);
NTSTATUS __stdcall ZwQueryValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);
NTSTATUS __stdcall ZwQueryVirtualMemory(HANDLE ProcessHandle, PVOID Address, MEMORY_INFORMATION_CLASS VirtualMemoryInformationClass, PVOID VirtualMemoryInformation, SIZE_T Length, PSIZE_T ResultLength);
NTSTATUS __stdcall ZwQueryVolumeInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FsInformation, ULONG Length, FS_INFORMATION_CLASS FsInformationClass);
NTSTATUS __stdcall ZwQueueApcThread(HANDLE ThreadHandle, PKNORMAL_ROUTINE ApcRoutine, PVOID NormalContext, PVOID SystemArgument1, PVOID SystemArgument2);
NTSTATUS __stdcall ZwRaiseException(PEXCEPTION_RECORD ExceptionRecord, PCONTEXT Context, BOOLEAN SearchFrames);
NTSTATUS __stdcall ZwRaiseHardError(NTSTATUS ErrorStatus, ULONG NumberOfParameters, ULONG UnicodeStringParameterMask, PULONG_PTR Parameters, ULONG ValidResponseOptions, PULONG Response);
NTSTATUS __stdcall ZwReadFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall ZwReadFileScatter(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE UserApcRoutine, PVOID UserApcContext, PIO_STATUS_BLOCK UserIoStatusBlock, FILE_SEGMENT_ELEMENT BufferDescription[], ULONG BufferLength, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall ZwReadRequestData(HANDLE PortHandle, PPORT_MESSAGE Message, ULONG Index, PVOID Buffer, ULONG BufferLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwReadVirtualMemory(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, SIZE_T NumberOfBytesToRead, PSIZE_T NumberOfBytesRead);
NTSTATUS __stdcall ZwRegisterThreadTerminatePort(HANDLE TerminationPort);
NTSTATUS __stdcall ZwReleaseKeyedEvent(HANDLE EventHandle, PVOID Key, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall ZwReleaseMutant(HANDLE MutantHandle, PLONG ReleaseCount);
NTSTATUS __stdcall ZwReleaseSemaphore(HANDLE SemaphoreHandle, LONG ReleaseCount, PLONG PreviousCount);
NTSTATUS __stdcall ZwRemoveIoCompletion(HANDLE IoCompletionHandle, PVOID *CompletionKey, PVOID *CompletionContext, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall ZwRemoveProcessDebug(HANDLE Process, HANDLE DebugObject);
NTSTATUS __stdcall ZwRenameKey(HANDLE KeyHandle, PUNICODE_STRING NewName);
NTSTATUS __stdcall ZwReplaceKey(POBJECT_ATTRIBUTES ObjectAttributes, HANDLE Key, POBJECT_ATTRIBUTES ReplacedObjectAttributes);
NTSTATUS __stdcall ZwReplyPort(HANDLE PortHandle, PPORT_MESSAGE LpcReply);
NTSTATUS __stdcall ZwReplyWaitReceivePort(HANDLE PortHandle, PVOID *PortContext, PPORT_MESSAGE ReplyMessage, PPORT_MESSAGE ReceiveMessage);
NTSTATUS __stdcall ZwReplyWaitReceivePortEx(HANDLE PortHandle, PVOID *PortContext, PPORT_MESSAGE ReplyMessage, PPORT_MESSAGE ReceiveMessage, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall ZwReplyWaitReplyPort(HANDLE PortHandle, PPORT_MESSAGE ReplyMessage);
NTSTATUS __stdcall ZwRequestDeviceWakeup(HANDLE Device);
NTSTATUS __stdcall ZwRequestPort(HANDLE PortHandle, PPORT_MESSAGE LpcMessage);
NTSTATUS __stdcall ZwRequestWaitReplyPort(HANDLE PortHandle, PPORT_MESSAGE LpcReply, PPORT_MESSAGE LpcRequest);
NTSTATUS __stdcall ZwRequestWakeupLatency(LATENCY_TIME latency);
NTSTATUS __stdcall ZwResetEvent(HANDLE EventHandle, PLONG NumberOfWaitingThreads);
NTSTATUS __stdcall ZwResetWriteWatch(HANDLE ProcessHandle, PVOID BaseAddress, SIZE_T RegionSize);
NTSTATUS __stdcall ZwRestoreKey(HANDLE KeyHandle, HANDLE FileHandle, ULONG RestoreFlags);
NTSTATUS __stdcall ZwResumeProcess(HANDLE ProcessHandle);
NTSTATUS __stdcall ZwResumeThread(HANDLE ThreadHandle, PULONG SuspendCount);
NTSTATUS __stdcall ZwSaveKey(HANDLE KeyHandle, HANDLE FileHandle);
NTSTATUS __stdcall ZwSaveKeyEx(HANDLE KeyHandle, HANDLE FileHandle, ULONG Flags);
NTSTATUS __stdcall ZwSaveMergedKeys(HANDLE HighPrecedenceKeyHandle, HANDLE LowPrecedenceKeyHandle, HANDLE FileHandle);
NTSTATUS __stdcall ZwSecureConnectPort(PHANDLE PortHandle, PUNICODE_STRING PortName, PSECURITY_QUALITY_OF_SERVICE SecurityQos, PPORT_VIEW ClientView, PSID Sid, PREMOTE_PORT_VIEW ServerView, PULONG MaxMessageLength, PVOID ConnectionInformation, PULONG ConnectionInformationLength);
NTSTATUS __stdcall ZwSetBootEntryOrder(PULONG Ids, PULONG Count);
NTSTATUS __stdcall ZwSetBootOptions(PBOOT_OPTIONS BootOptions, ULONG FieldsToChange);
NTSTATUS __stdcall ZwSetContextThread(HANDLE ThreadHandle, PCONTEXT Context);
NTSTATUS __stdcall ZwSetDebugFilterState(ULONG ComponentId, ULONG Level, BOOLEAN State);
NTSTATUS __stdcall ZwSetDefaultHardErrorPort(HANDLE PortHandle);
NTSTATUS __stdcall ZwSetDefaultLocale(BOOLEAN UserProfile, LCID DefaultLocaleId);
NTSTATUS __stdcall ZwSetDefaultUILanguage(LANGID LanguageId);
NTSTATUS __stdcall ZwSetEaFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID EaBuffer, ULONG EaBufferSize);
NTSTATUS __stdcall ZwSetEvent(HANDLE EventHandle, PLONG PreviousState);
NTSTATUS __stdcall ZwSetEventBoostPriority(HANDLE EventHandle);
NTSTATUS __stdcall ZwSetHighEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall ZwSetHighWaitLowEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall ZwSetInformationDebugObject(HANDLE DebugObject, DEBUGOBJECTINFOCLASS InformationClass, PVOID Information, ULONG InformationLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwSetInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FileInformation, ULONG Length, FILE_INFORMATION_CLASS FileInformationClass);
NTSTATUS __stdcall ZwSetInformationJobObject(HANDLE JobHandle, JOBOBJECTINFOCLASS JobInformationClass, PVOID JobInformation, ULONG JobInformationLength);
NTSTATUS __stdcall ZwSetInformationKey(HANDLE KeyHandle, KEY_SET_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG KeyInformationLength);
NTSTATUS __stdcall ZwSetInformationObject(HANDLE ObjectHandle, OBJECT_INFORMATION_CLASS ObjectInformationClass, PVOID ObjectInformation, ULONG Length);
NTSTATUS __stdcall ZwSetInformationProcess(HANDLE ProcessHandle, PROCESSINFOCLASS ProcessInformationClass, PVOID ProcessInformation, ULONG ProcessInformationLength);
NTSTATUS __stdcall ZwSetInformationThread(HANDLE ThreadHandle, THREADINFOCLASS ThreadInformationClass, PVOID ThreadInformation, ULONG ThreadInformationLength);
NTSTATUS __stdcall ZwSetInformationToken(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, PVOID TokenInformation, ULONG TokenInformationLength);
NTSTATUS __stdcall ZwSetIntervalProfile(ULONG Interval, KPROFILE_SOURCE ClockSource);
NTSTATUS __stdcall ZwSetIoCompletion(HANDLE IoCompletionPortHandle, PVOID CompletionKey, PVOID CompletionContext, NTSTATUS CompletionStatus, ULONG CompletionInformation);
NTSTATUS __stdcall ZwSetLdtEntries(ULONG Selector1, LDT_ENTRY LdtEntry1, ULONG Selector2, LDT_ENTRY LdtEntry2);
NTSTATUS __stdcall ZwSetLowEventPair(HANDLE EventPair);
NTSTATUS __stdcall ZwSetLowWaitHighEventPair(HANDLE EventPair);
NTSTATUS __stdcall ZwSetQuotaInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG BufferLength);
NTSTATUS __stdcall ZwSetSecurityObject(HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor);
NTSTATUS __stdcall ZwSetSystemEnvironmentValue(PUNICODE_STRING VariableName, PUNICODE_STRING Value);
NTSTATUS __stdcall ZwSetSystemEnvironmentValueEx(PUNICODE_STRING VariableName, LPGUID VendorGuid, PVOID Value, PULONG ReturnLength, PULONG Attributes);
NTSTATUS __stdcall ZwSetSystemInformation(SYSTEM_INFORMATION_CLASS SystemInformationClass, PVOID SystemInformation, SIZE_T SystemInformationLength);
NTSTATUS __stdcall ZwSetSystemPowerState(POWER_ACTION SystemAction, SYSTEM_POWER_STATE MinSystemState, ULONG Flags);
NTSTATUS __stdcall ZwSetSystemTime(PLARGE_INTEGER SystemTime, PLARGE_INTEGER NewSystemTime);
NTSTATUS __stdcall ZwSetThreadExecutionState(EXECUTION_STATE esFlags, EXECUTION_STATE *PreviousFlags);
NTSTATUS __stdcall ZwSetTimer(HANDLE TimerHandle, PLARGE_INTEGER DueTime, PTIMER_APC_ROUTINE TimerApcRoutine, PVOID TimerContext, BOOLEAN WakeTimer, LONG Period, PBOOLEAN PreviousState);
NTSTATUS __stdcall ZwSetTimerResolution(ULONG RequestedResolution, BOOLEAN SetOrUnset, PULONG ActualResolution);
NTSTATUS __stdcall ZwSetUuidSeed(PUCHAR UuidSeed);
NTSTATUS __stdcall ZwSetValueKey(HANDLE KeyHandle, PUNICODE_STRING ValueName, ULONG TitleIndex, ULONG Type, PVOID Data, ULONG DataSize);
NTSTATUS __stdcall ZwSetVolumeInformationFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PVOID FsInformation, ULONG Length, FS_INFORMATION_CLASS FsInformationClass);
NTSTATUS __stdcall ZwShutdownSystem(SHUTDOWN_ACTION Action);
NTSTATUS __stdcall ZwSignalAndWaitForSingleObject(HANDLE SignalObject, HANDLE WaitObject, BOOLEAN Alertable, PLARGE_INTEGER Time);
NTSTATUS __stdcall ZwStartProfile(HANDLE ProfileHandle);
NTSTATUS __stdcall ZwStopProfile(HANDLE ProfileHandle);
NTSTATUS __stdcall ZwSuspendProcess(HANDLE ProcessHandle);
NTSTATUS __stdcall ZwSuspendThread(HANDLE ThreadHandle, PULONG PreviousSuspendCount);
NTSTATUS __stdcall ZwSystemDebugControl(SYSDBG_COMMAND ControlCode, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwTerminateJobObject(HANDLE JobHandle, NTSTATUS ExitStatus);
NTSTATUS __stdcall ZwTerminateProcess(HANDLE ProcessHandle, NTSTATUS ExitStatus);
NTSTATUS __stdcall ZwTerminateThread(HANDLE ThreadHandle, NTSTATUS ExitStatus);
NTSTATUS __stdcall ZwTestAlert();
NTSTATUS __stdcall ZwTraceEvent(ULONG TraceHandle, ULONG Flags, ULONG TraceHeaderLength, PEVENT_TRACE_HEADER TraceHeader);
NTSTATUS __stdcall ZwTranslateFilePath(PFILE_PATH InputFilePath, ULONG OutputType, PFILE_PATH OutputFilePath, ULONG OutputFilePathLength);
NTSTATUS __stdcall ZwUnloadDriver(PUNICODE_STRING DriverServiceName);
NTSTATUS __stdcall ZwUnloadKey(POBJECT_ATTRIBUTES KeyObjectAttributes);
NTSTATUS __stdcall ZwUnloadKeyEx(POBJECT_ATTRIBUTES TargetKey, HANDLE Event);
NTSTATUS __stdcall ZwUnlockFile(HANDLE FileHandle, PIO_STATUS_BLOCK IoStatusBlock, PLARGE_INTEGER ByteOffset, PLARGE_INTEGER Length, ULONG Key);
NTSTATUS __stdcall ZwUnlockVirtualMemory(HANDLE ProcessHandle, PVOID *BaseAddress, PSIZE_T NumberOfBytesToUnlock, ULONG MapType);
NTSTATUS __stdcall ZwUnmapViewOfSection(HANDLE ProcessHandle, PVOID BaseAddress);
NTSTATUS __stdcall ZwVdmControl(ULONG ControlCode, PVOID ControlData);
NTSTATUS __stdcall ZwW32Call(ULONG RoutineIndex, PVOID Argument, ULONG ArgumentLength, PVOID *Result, PULONG ResultLength);
NTSTATUS __stdcall ZwWaitForDebugEvent(HANDLE DebugObject, BOOLEAN Alertable, PLARGE_INTEGER Timeout, PDBGUI_WAIT_STATE_CHANGE StateChange);
NTSTATUS __stdcall ZwWaitForKeyedEvent(HANDLE EventHandle, PVOID Key, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall ZwWaitForMultipleObjects(ULONG Count, HANDLE Object[], WAIT_TYPE WaitType, BOOLEAN Alertable, PLARGE_INTEGER Time);
NTSTATUS __stdcall ZwWaitForSingleObject(HANDLE Handle, BOOLEAN Alertable, PLARGE_INTEGER Timeout);
NTSTATUS __stdcall ZwWaitHighEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall ZwWaitLowEventPair(HANDLE EventPairHandle);
NTSTATUS __stdcall ZwWriteFile(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, PVOID Buffer, ULONG Length, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall ZwWriteFileGather(HANDLE FileHandle, HANDLE Event, PIO_APC_ROUTINE ApcRoutine, PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, FILE_SEGMENT_ELEMENT BufferDescription[], ULONG BufferLength, PLARGE_INTEGER ByteOffset, PULONG Key);
NTSTATUS __stdcall ZwWriteRequestData(HANDLE PortHandle, PPORT_MESSAGE Message, ULONG Index, PVOID Buffer, ULONG BufferLength, PULONG ReturnLength);
NTSTATUS __stdcall ZwWriteVirtualMemory(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, SIZE_T NumberOfBytesToWrite, PSIZE_T NumberOfBytesWritten);
NTSTATUS __stdcall ZwYieldExecution();
MACRO__ALPHA _ALPHA;
MACRO__ARGMAX _ARGMAX;
void *AddressOfReturnAddress(void);
MACRO__UPPER _BLANK;
unsigned __int8 __stdcall BitScanForward(unsigned int *Index, unsigned int Mask);
unsigned __int8 __stdcall BitScanReverse(unsigned int *Index, unsigned int Mask);
MACRO__UPPER _CONTROL;
MACRO__CRT _CRT_PACKING;
MACRO__UPPER _DIGIT;
ULONG DbgPrint(PCSTR Format, ...);
ULONG DbgPrintEx(ULONG ComponentId, ULONG Level, PCSTR Format, ...);
ULONG DbgPrintReturnControlC(PCCH Format, ...);
MACRO__EM _EM_DENORMAL;
MACRO__EM _EM_INEXACT;
MACRO__EM _EM_INVALID;
MACRO__EM _EM_OVERFLOW;
MACRO__EM _EM_UNDERFLOW;
MACRO__EM _EM_ZERODIVIDE;
MACRO__FACDD _FACDD;
MACRO__FPCLASS _FPCLASS_ND;
MACRO__FPCLASS _FPCLASS_NINF;
MACRO__FPCLASS _FPCLASS_NN;
MACRO__FPCLASS _FPCLASS_NZ;
MACRO__FPCLASS _FPCLASS_PD;
MACRO__FPCLASS _FPCLASS_PINF;
MACRO__FPCLASS _FPCLASS_PN;
MACRO__FPCLASS _FPCLASS_PZ;
MACRO__FPCLASS _FPCLASS_QNAN;
MACRO__FPCLASS _FPCLASS_SNAN;
MACRO__FPE _FPE_DENORMAL;
MACRO__FPE _FPE_EXPLICITGEN;
MACRO__FPE _FPE_INEXACT;
MACRO__FPE _FPE_INVALID;
MACRO__FPE _FPE_OVERFLOW;
MACRO__FPE _FPE_SQRTNEG;
MACRO__FPE _FPE_STACKOVERFLOW;
MACRO__FPE _FPE_STACKUNDERFLOW;
MACRO__FPE _FPE_UNDERFLOW;
MACRO__FPE _FPE_UNEMULATED;
MACRO__FPE _FPE_ZERODIVIDE;
const GUID GUID_ColorControlCallbacks;
const GUID GUID_D3DCallbacks;
const GUID GUID_D3DCallbacks2;
const GUID GUID_D3DCallbacks3;
const GUID GUID_D3DCaps;
const GUID GUID_D3DExtendedCaps;
const GUID GUID_D3DParseUnknownCommandCallback;
const GUID GUID_DDMoreCaps;
const GUID GUID_DDMoreSurfaceCaps;
const GUID GUID_DDStereoMode;
const GUID GUID_DEVINTERFACE_COMPORT;
const GUID GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR;
const GUID GUID_GetHeapAlignment;
const GUID GUID_KernelCallbacks;
const GUID GUID_KernelCaps;
const GUID GUID_Miscellaneous2Callbacks;
const GUID GUID_MiscellaneousCallbacks;
const GUID GUID_MotionCompCallbacks;
const GUID GUID_NTCallbacks;
const GUID GUID_NTPrivateDriverCaps;
const GUID GUID_NonLocalVidMemCaps;
const GUID GUID_UpdateNonLocalHeap;
const GUID GUID_VPE2Callbacks;
const GUID GUID_VideoPortCallbacks;
const GUID GUID_VideoPortCaps;
const GUID GUID_ZPixelFormats;
MACRO__UPPER _HEX;
MACRO__IC _IC_AFFINE;
MACRO__IC IC_PROJECTIVE;
MACRO__INTEGRAL _INTEGRAL_MAX_BITS;
MACRO__IOB _IOB_ENTRIES;
MACRO__IONBF _IOEOF;
MACRO__IONBF _IOERR;
MACRO__IOFBF IOFBF;
MACRO__IOFBF _IOLBF;
MACRO__IONBF _IOMYBUF;
MACRO__IONBF _IONBF;
MACRO_NULL _IOREAD;
MACRO__IONBF _IORW;
MACRO__IONBF _IOSTRG;
MACRO_NULL _IOWRT;
PVOID __stdcall InlineInterlockedCompareExchangePointer(volatile PVOID *Destination, PVOID ExChange, PVOID Comperand);
PVOID __stdcall InlineInterlockedExchangePointer(volatile PVOID *Destination, PVOID Value);
LONG64 __stdcall InterlockedAdd64(volatile LONG64 *Target, LONG64 Value);
int __stdcall InterlockedAddLargeStatistic(volatile __int64 *Addend, int Value);
int __stdcall InterlockedAnd(volatile int *Value, int Mask);
__int16 __stdcall InterlockedAnd16(volatile __int16 *Value, __int16 Mask);
LONG64 __stdcall InterlockedAnd64(volatile LONG64 *Target, LONG64 Value);
char __stdcall InterlockedAnd8(volatile char *Value, char Mask);
__int16 __stdcall InterlockedCompareExchange16(volatile __int16 *Destination, __int16 Exchange, __int16 Comparand);
__int64 __stdcall InterlockedCompareExchange64(volatile __int64 *Destination, __int64 Exchange, __int64 Comparand);
char __stdcall InterlockedCompareExchange8(volatile char *Destination, char Exchange, char Comparand);
void *__stdcall InterlockedCompareExchangePointer(void *volatile *Destination, void *Exchange, void *Comparand);
__int16 __stdcall InterlockedDecrement16(volatile __int16 *Addend);
LONG64 __stdcall InterlockedDecrement64(volatile LONG64 *Target);
__int16 __stdcall InterlockedExchange16(volatile __int16 *Target, __int16 Value);
LONG64 __stdcall InterlockedExchange64(volatile LONG64 *Target, LONG64 Value);
char __stdcall InterlockedExchange8(volatile char *Target, char Value);
__int16 __stdcall InterlockedExchangeAdd16(volatile __int16 *Addend, __int16 Value);
LONG64 __stdcall InterlockedExchangeAdd64(volatile LONG64 *Target, LONG64 Value);
char __stdcall InterlockedExchangeAdd8(volatile char *Addend, char Value);
void *__stdcall InterlockedExchangePointer(void *volatile *Target, void *Value);
__int16 __stdcall InterlockedIncrement16(volatile __int16 *Addend);
LONG64 __stdcall InterlockedIncrement64(volatile LONG64 *Target);
int __stdcall InterlockedOr(volatile int *Value, int Mask);
__int16 __stdcall InterlockedOr16(volatile __int16 *Value, __int16 Mask);
LONG64 __stdcall InterlockedOr64(volatile LONG64 *Target, LONG64 Value);
char __stdcall InterlockedOr8(volatile char *Value, char Mask);
int __stdcall InterlockedXor(volatile int *Value, int Mask);
__int16 __stdcall InterlockedXor16(volatile __int16 *Value, __int16 Mask);
LONG64 __stdcall InterlockedXor64(volatile LONG64 *Target, LONG64 Value);
char __stdcall InterlockedXor8(volatile char *Value, char Mask);
MACRO__JBLEN _JBLEN;
MACRO__UPPER _LEADBYTE;
MACRO__UPPER _LOWER;
MACRO__MCW _MCW_DN;
MACRO__MCW _MCW_EM;
MACRO__MCW _MCW_IC;
MACRO__MCW _MCW_PC;
MACRO__MCW _MCW_RC;
MACRO__NLSCMPERROR _NLSCMPERROR;
MACRO__NSTREAM _NSTREAM_;
USHORT NlsAnsiCodePage;
BOOLEAN NlsMbCodePageTag;
BOOLEAN NlsMbOemCodePageTag;
MACRO__PC _PC_24;
MACRO__PC _PC_53;
MACRO__PC PC_64;
MACRO__UPPER _PUNCT;
MACRO__RC _RC_CHOP;
MACRO__RC _RC_DOWN;
MACRO__RC RC_NEAR;
MACRO__RC _RC_UP;
void ReadBarrier(void);
void ReadWriteBarrier(void);
void *ReturnAddress(void);
const PRTL_ALLOCATE_STRING_ROUTINE RtlAllocateStringRoutine;
const PRTL_FREE_STRING_ROUTINE RtlFreeStringRoutine;
const PRTL_REALLOCATE_STRING_ROUTINE RtlReallocateStringRoutine;
NTSTATUS __cdecl RtlSetProcessIsCritical(BOOLEAN NewValue, PBOOLEAN OldValue, BOOLEAN NeedBreaks);
NTSTATUS __cdecl RtlSetThreadIsCritical(BOOLEAN NewValue, PBOOLEAN OldValue, BOOLEAN NeedBreaks);
MACRO__SAL _SAL_VERSION;
MACRO__SECURECRT _SECURECRT_FILL_BUFFER_PATTERN;
MACRO__UPPER _SPACE;
MACRO__SW _SW_SQRTNEG;
MACRO__SW _SW_STACKOVERFLOW;
MACRO__SW _SW_STACKUNDERFLOW;
MACRO__SW _SW_UNEMULATED;
MACRO__SYS _SYS_OPEN;
MACRO__TWO _TWO_DIGIT_EXPONENT;
MACRO__UPPER _UPPER;
MACRO__IONBF _USERBUF;
MACRO__USE _USE_ATTRIBUTES_FOR_SAL;
MACRO__USE USE_DECLSPECS_FOR_SAL;
MACRO__WIN32_IE _WIN32_IE;
MACRO__WIN32 _WIN32_IE_IE100;
MACRO__WIN32 _WIN32_IE_IE110;
MACRO__WIN32 _WIN32_IE_IE20;
MACRO__WIN32 _WIN32_IE_IE30;
MACRO__WIN32 _WIN32_IE_IE302;
MACRO__WIN32 _WIN32_IE_IE40;
MACRO__WIN32 _WIN32_IE_IE401;
MACRO__WIN32 _WIN32_IE_IE50;
MACRO__WIN32 _WIN32_IE_IE501;
MACRO__WIN32 _WIN32_IE_IE55;
MACRO__WIN32 _WIN32_IE_IE60;
MACRO__WIN32 _WIN32_IE_IE60SP1;
MACRO__WIN32 _WIN32_IE_IE60SP2;
MACRO__WIN32 _WIN32_IE_IE70;
MACRO__WIN32 _WIN32_IE_IE80;
MACRO__WIN32 _WIN32_IE_IE90;
MACRO__WIN32 _WIN32_IE_LONGHORN;
MACRO__WIN32 _WIN32_IE_NT4;
MACRO__WIN32 _WIN32_IE_NT4SP1;
MACRO__WIN32 _WIN32_IE_NT4SP2;
MACRO__WIN32 _WIN32_IE_NT4SP3;
MACRO__WIN32 _WIN32_IE_NT4SP4;
MACRO__WIN32 _WIN32_IE_NT4SP5;
MACRO__WIN32 _WIN32_IE_NT4SP6;
MACRO__WIN32 _WIN32_IE_WIN10;
MACRO__WIN32 _WIN32_IE_WIN2K;
MACRO__WIN32 _WIN32_IE_WIN2KSP1;
MACRO__WIN32 _WIN32_IE_WIN2KSP2;
MACRO__WIN32 _WIN32_IE_WIN2KSP3;
MACRO__WIN32 _WIN32_IE_WIN2KSP4;
MACRO__WIN32 _WIN32_IE_WIN6;
MACRO__WIN32 _WIN32_IE_WIN7;
MACRO__WIN32 _WIN32_IE_WIN8;
MACRO__WIN32 _WIN32_IE_WIN98;
MACRO__WIN32 _WIN32_IE_WIN98SE;
MACRO__WIN32 _WIN32_IE_WINBLUE;
MACRO__WIN32 _WIN32_IE_WINME;
MACRO__WIN32 _WIN32_IE_WINTHRESHOLD;
MACRO__WIN32 _WIN32_IE_WS03;
MACRO__WIN32 _WIN32_IE_WS03SP1;
MACRO__WIN32 _WIN32_IE_XP;
MACRO__WIN32 _WIN32_IE_XPSP1;
MACRO__WIN32 _WIN32_IE_XPSP2;
MACRO__WIN32 _WIN32_WINNT_LONGHORN;
MACRO__WIN32 _WIN32_WINNT_NT4;
MACRO__WIN32 _WIN32_WINNT_VISTA;
MACRO__WIN32 _WIN32_WINNT_WIN10;
MACRO__WIN32 _WIN32_WINNT_WIN2K;
MACRO__WIN32 _WIN32_WINNT_WIN6;
MACRO__WIN32 _WIN32_WINNT_WIN7;
MACRO__WIN32 _WIN32_WINNT_WIN8;
MACRO__WIN32 _WIN32_WINNT_WINBLUE;
MACRO__WIN32 _WIN32_WINNT_WINTHRESHOLD;
MACRO__WIN32 _WIN32_WINNT_WINXP;
MACRO__WIN32 _WIN32_WINNT_WS03;
MACRO__WIN32 _WIN32_WINNT_WS08;
void WriteBarrier(void);
MACRO___GOT __GOT_SECURE_LIB__;
int __cdecl _InterlockedCompareExchange(volatile int *Destination, int Exchange, int Comparand);
int __cdecl _InterlockedDecrement(volatile int *Addend);
int __cdecl _InterlockedExchange(volatile int *Target, int Value);
int __cdecl _InterlockedExchangeAdd(volatile int *Addend, int Value);
int __cdecl _InterlockedIncrement(volatile int *Addend);
MACRO___MINGW32 __MINGW32_MAJOR_VERSION;
MACRO___MINGW32 __MINGW32_MINOR_VERSION;
MACRO___MINGW64 __MINGW64_VERSION_MAJOR;
MACRO___MINGW64 __MINGW64_VERSION_MINOR;
MACRO___MINGW_FPCLASS __MINGW_FPCLASS_DEFINED;
MACRO___MINGW_HAVE __MINGW_HAVE_ANSI_C99_PRINTF;
MACRO___MINGW_HAVE __MINGW_HAVE_ANSI_C99_SCANF;
MACRO___MINGW_HAVE __MINGW_HAVE_WIDE_C99_PRINTF;
MACRO___MINGW_HAVE __MINGW_HAVE_WIDE_C99_SCANF;
MACRO___MINGW __MINGW_USE_UNDERSCORE_PREFIX;
MACRO___MSVCRT __MSVCRT_VERSION__;
MACRO___STDC_SECURE __STDC_SECURE_LIB__;
MACRO___STDC __STDC_WANT_SECURE_LIB__;
MACRO___USE __USE_MINGW_OUTPUT_FORMAT_EMU;
unsigned int __cdecl ___readcr4();
void __cdecl __debugbreak();
int *__cdecl __fpecode();
int __globallocalestatus;
_locale_tstruct __initiallocalestructinfo;
struct threadlocaleinfostruct __initiallocinfo;
FILE *__cdecl __iob_func();
int __cdecl __isascii(int C);
int __cdecl __iscsym(int C);
int __cdecl __iscsymf(int C);
int __cdecl __iswcsym(wint_t C);
int __cdecl __iswcsymf(wint_t C);
int __locale_changed;
int *__mb_cur_max;
const unsigned __int8 __newclmap[];
const unsigned __int8 __newcumap[];
const unsigned __int16 *__cdecl __pctype_func();
pthreadlocinfo __ptlocinfo;
pthreadmbcinfo __ptmbcinfo;
const wctype_t *__cdecl __pwctype_func();
uintptr_t __cdecl __threadhandle();
unsigned int __cdecl __threadid();
int __cdecl __toascii(int C);
pthreadlocinfo __cdecl __updatetlocinfo();
pthreadmbcinfo __cdecl __updatetmbcinfo();
wchar_t *__cdecl __wcserror(const wchar_t *Str);
errno_t __cdecl __wcserror_s(wchar_t *Buffer, size_t SizeInWords, const wchar_t *ErrMsg);
int __cdecl _abnormal_termination();
__int64 __cdecl _abs64(__int64);
void __stdcall _addfsbyte(unsigned int, unsigned __int8);
void __stdcall _addfsdword(unsigned int, unsigned int);
void __stdcall _addfsword(unsigned int, unsigned __int16);
unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64);
unsigned int __cdecl _byteswap_ulong(unsigned int);
unsigned __int16 __cdecl _byteswap_ushort(unsigned __int16);
double __cdecl _chgsign(double);
unsigned int __cdecl _clearfp();
void __stdcall _code_seg(const char *);
unsigned int __cdecl _control87(unsigned int unNew, unsigned int unMask);
unsigned int __cdecl _controlfp(unsigned int unNew, unsigned int unMask);
double __cdecl _copysign(double, double);
void __stdcall _cpuid(int[4], int);
void __stdcall _cpuidex(int[4], int, int);
void __cdecl _disable();
__int64 __stdcall _emul(int, int);
unsigned __int64 __stdcall _emulu(unsigned int, unsigned int);
void __cdecl _enable();
int *__cdecl _errno();
EXCEPTION_DISPOSITION __cdecl _except_handler(struct _EXCEPTION_RECORD *ExceptionRecord, void *EstablisherFrame, struct _CONTEXT *ContextRecord, void *DispatcherContext);
unsigned int __cdecl _exception_code();
void *__cdecl _exception_info();
void __stdcall __noreturn _fastfail(unsigned int);
int __cdecl _fclose_nolock(FILE *File);
int __cdecl _fcloseall();
FILE *__cdecl _fdopen(int FileHandle, const char *Mode);
int __cdecl _fflush_nolock(FILE *File);
int __cdecl _fgetchar();
wint_t __cdecl _fgetwc_nolock(FILE *File);
wint_t __cdecl _fgetwchar();
int __cdecl _filbuf(FILE *File);
int __cdecl _fileno(FILE *File);
int __cdecl _finite(double);
int __cdecl _flsbuf(int Ch, FILE *File);
int __cdecl _flushall();
int __cdecl _fpclass(double);
void __cdecl _fpreset();
int __cdecl _fputchar(int Ch);
wint_t __cdecl _fputwc_nolock(wchar_t Ch, FILE *File);
wint_t __cdecl _fputwchar(wchar_t Ch);
size_t __cdecl _fread_nolock(void *DstBuf, size_t ElementSize, size_t Count, FILE *File);
int __cdecl _fseek_nolock(FILE *File, int Offset, int Origin);
int __cdecl _fseeki64(FILE *File, __int64 Offset, int Origin);
int __cdecl _fseeki64_nolock(FILE *File, __int64 Offset, int Origin);
FILE *__cdecl _fsopen(const char *Filename, const char *Mode, int ShFlag);
int __cdecl _ftell_nolock(FILE *File);
__int64 __cdecl _ftelli64(FILE *File);
__int64 __cdecl _ftelli64_nolock(FILE *File);
size_t __cdecl _fwrite_nolock(const void *DstBuf, size_t Size, size_t Count, FILE *File);
errno_t __cdecl _get_errno(int *Value);
unsigned int __cdecl _get_output_format();
int __cdecl _get_printf_count_output();
unsigned int _getcallerseflags(void);
int __cdecl _getmaxstdio();
int __cdecl _getw(FILE *File);
wchar_t *__cdecl _getws(wchar_t *String);
void _halt(void);
unsigned __int8 __stdcall _inbyte(unsigned __int16);
void __stdcall _inbytestring(unsigned __int16, unsigned __int8 *, unsigned int);
void __stdcall _incfsbyte(unsigned int);
void __stdcall _incfsdword(unsigned int);
void __stdcall _incfsword(unsigned int);
unsigned int __stdcall _indword(unsigned __int16);
void __stdcall _indwordstring(unsigned __int16, unsigned int *, unsigned int);
int __cdecl _inp(unsigned __int16);
unsigned int __cdecl _inpd(unsigned __int16);
unsigned __int16 __cdecl _inpw(unsigned __int16);
void _int2c(void);
void __stdcall _invlpg(void *);
void __stdcall _invlpg_fixed(void *Address);
unsigned __int16 __stdcall _inword(unsigned __int16);
void __stdcall _inwordstring(unsigned __int16, unsigned __int16 *, unsigned int);
FILE _iob[];
int __cdecl _isalnum_l(int C, _locale_t Locale);
int __cdecl _isalpha_l(int C, _locale_t Locale);
int __cdecl _iscntrl_l(int C, _locale_t Locale);
int __cdecl _isctype(int C, int Type);
int __cdecl _isctype_l(int C, int Type, _locale_t Locale);
int __cdecl _isdigit_l(int C, _locale_t Locale);
int __cdecl _isgraph_l(int C, _locale_t Locale);
int __cdecl _isleadbyte_l(int C, _locale_t Locale);
int __cdecl _islower_l(int C, _locale_t Locale);
int __cdecl _isnan(double);
int __cdecl _isprint_l(int C, _locale_t Locale);
int __cdecl _ispunct_l(int C, _locale_t Locale);
int __cdecl _isspace_l(int C, _locale_t Locale);
int __cdecl _isupper_l(int C, _locale_t Locale);
int __cdecl _iswalnum_l(wint_t C, _locale_t Locale);
int __cdecl _iswalpha_l(wint_t C, _locale_t Locale);
int __cdecl _iswcntrl_l(wint_t C, _locale_t Locale);
int __cdecl _iswcsym_l(wint_t C, _locale_t Locale);
int __cdecl _iswcsymf_l(wint_t C, _locale_t Locale);
int __cdecl _iswctype_l(wint_t C, wctype_t Type, _locale_t Locale);
int __cdecl _iswdigit_l(wint_t C, _locale_t Locale);
int __cdecl _iswgraph_l(wint_t C, _locale_t Locale);
int __cdecl _iswlower_l(wint_t C, _locale_t Locale);
int __cdecl _iswprint_l(wint_t C, _locale_t Locale);
int __cdecl _iswpunct_l(wint_t C, _locale_t Locale);
int __cdecl _iswspace_l(wint_t C, _locale_t Locale);
int __cdecl _iswupper_l(wint_t C, _locale_t Locale);
int __cdecl _iswxdigit_l(wint_t C, _locale_t Locale);
int __cdecl _isxdigit_l(int C, _locale_t Locale);
void __stdcall _lidt(void *);
unsigned __int64 __stdcall _ll_lshift(unsigned __int64, int);
__int64 __stdcall _ll_rshift(__int64, int);
void __cdecl _lock_file(FILE *File);
double __cdecl _logb(double);
unsigned int __cdecl _lrotl(unsigned int, int);
unsigned int __cdecl _lrotr(unsigned int, int);
unsigned int __stdcall _lzcnt(unsigned int);
unsigned __int16 __stdcall _lzcnt16(unsigned __int16);
void *__cdecl _memccpy(void *Dst, const void *Src, int Val, size_t MaxCount);
int __cdecl _memicmp(const void *Buf1, const void *Buf2, size_t Size);
int __cdecl _memicmp_l(const void *Buf1, const void *Buf2, size_t Size, _locale_t Locale);
void __stdcall _movsb(unsigned __int8 *, const unsigned __int8 *, size_t);
void __stdcall _movsd(unsigned int *, const unsigned int *, size_t);
void __stdcall _movsw(unsigned __int16 *, const unsigned __int16 *, size_t);
double __cdecl _nextafter(double, double);
void _nop(void);
void _nvreg_restore_fence(void);
void _nvreg_save_fence(void);
void __stdcall _outbyte(unsigned __int16, unsigned __int8);
void __stdcall _outbytestring(unsigned __int16, unsigned __int8 *, unsigned int);
void __stdcall _outdword(unsigned __int16, unsigned int);
void __stdcall _outdwordstring(unsigned __int16, unsigned int *, unsigned int);
int __cdecl _outp(unsigned __int16, int);
unsigned int __cdecl _outpd(unsigned __int16, unsigned int);
unsigned __int16 __cdecl _outpw(unsigned __int16, unsigned __int16);
void __stdcall _outword(unsigned __int16, unsigned __int16);
void __stdcall _outwordstring(unsigned __int16, unsigned __int16 *, unsigned int);
int __cdecl _pclose(FILE *File);
const unsigned __int16 *_pctype;
unsigned int __stdcall _popcnt(unsigned int);
unsigned __int16 __stdcall _popcnt16(unsigned __int16);
FILE *__cdecl _popen(const char *Command, const char *Mode);
int __cdecl _putw(int Word, FILE *File);
int __cdecl _putws(const wchar_t *Str);
const wctype_t *_pwctype;
unsigned __int64 _rdtsc(void);
unsigned __int64 __stdcall _rdtscp(unsigned int *);
unsigned int _readcr0(void);
unsigned int _readcr2(void);
unsigned int _readcr3(void);
unsigned int _readcr4(void);
unsigned int _readcr8(void);
unsigned int __stdcall _readdr(unsigned int);
unsigned int _readeflags(void);
unsigned __int8 __stdcall _readfsbyte(unsigned int);
unsigned int __stdcall _readfsdword(unsigned int);
unsigned __int16 __stdcall _readfsword(unsigned int);
unsigned __int64 __stdcall _readmsr(unsigned int);
unsigned __int64 __stdcall _readpmc(unsigned int);
int __cdecl _rmtmp();
unsigned int __cdecl _rotl(unsigned int Value, int Shift);
unsigned __int16 __cdecl _rotl16(unsigned __int16 Value, unsigned __int8 Shift);
unsigned __int64 __cdecl _rotl64(unsigned __int64 Value, int Shift);
unsigned __int8 __cdecl _rotl8(unsigned __int8 Value, unsigned __int8 Shift);
unsigned int __cdecl _rotr(unsigned int Value, int Shift);
unsigned __int16 __cdecl _rotr16(unsigned __int16 Value, unsigned __int8 Shift);
unsigned __int64 __cdecl _rotr64(unsigned __int64 Value, int Shift);
unsigned __int8 __cdecl _rotr8(unsigned __int8 Value, unsigned __int8 Shift);
double __cdecl _scalb(double, int);
int _scprintf(const char *Format, ...);
int _scwprintf(const wchar_t *Format, ...);
unsigned int __stdcall _segmentlimit(unsigned int);
errno_t __cdecl _set_errno(int Value);
unsigned int __cdecl _set_output_format(unsigned int Format);
int __cdecl _set_printf_count_output(int Value);
int __cdecl _setjmp(jmp_buf Buf);
int __cdecl _setmaxstdio(int Max);
void __stdcall _sidt(void *);
int _snprintf(char *Dest, size_t Count, const char *Format, ...);
int _snscanf(const char *Src, size_t MaxCount, const char *Format, ...);
int _snwprintf(wchar_t *Dest, size_t Count, const wchar_t *Format, ...);
int _snwscanf(const wchar_t *Src, size_t MaxCount, const wchar_t *Format, ...);
unsigned int __cdecl _statusfp();
void __stdcall _stosb(unsigned __int8 *, unsigned __int8, size_t);
void __stdcall _stosd(unsigned int *, unsigned int, size_t);
void __stdcall _stosw(unsigned __int16 *, unsigned __int16, size_t);
int __cdecl _strcmpi(const char *Str1, const char *Str2);
int __cdecl _strcoll_l(const char *Str1, const char *Str2, _locale_t Locale);
char *__cdecl _strdup(const char *Src);
char *__cdecl _strerror(const char *ErrMsg);
errno_t __cdecl _strerror_s(char *Buf, size_t SizeInBytes, const char *ErrMsg);
int __cdecl _stricmp(const char *Str1, const char *Str2);
int __cdecl _stricmp_l(const char *Str1, const char *Str2, _locale_t Locale);
int __cdecl _stricoll(const char *Str1, const char *Str2);
int __cdecl _stricoll_l(const char *Str1, const char *Str2, _locale_t Locale);
char *__cdecl _strlwr(char *String);
errno_t __cdecl _strlwr_s(char *Str, size_t Size);
errno_t __cdecl _strlwr_s_l(char *Str, size_t Size, _locale_t Locale);
int __cdecl _strncoll(const char *Str1, const char *Str2, size_t MaxCount);
int __cdecl _strncoll_l(const char *Str1, const char *Str2, size_t MaxCount, _locale_t Locale);
int __cdecl _strnicmp(const char *Str1, const char *Str2, size_t MaxCount);
int __cdecl _strnicmp_l(const char *Str1, const char *Str2, size_t MaxCount, _locale_t Locale);
int __cdecl _strnicoll(const char *Str1, const char *Str2, size_t MaxCount);
int __cdecl _strnicoll_l(const char *Str1, const char *Str2, size_t MaxCount, _locale_t Locale);
char *__cdecl _strnset(char *Str, int Val, size_t MaxCount);
errno_t __cdecl _strnset_s(char *Str, size_t Size, int Val, size_t MaxCount);
char *__cdecl _strrev(char *Str);
char *__cdecl _strset(char *Str, int Val);
errno_t __cdecl _strset_s(char *Dst, size_t DstSize, int Value);
char *__cdecl _strupr(char *String);
errno_t __cdecl _strupr_s(char *Str, size_t Size);
errno_t __cdecl _strupr_s_l(char *Str, size_t Size, _locale_t Locale);
size_t __cdecl _strxfrm_l(char *Dst, const char *Src, size_t MaxCount, _locale_t Locale);
void _svm_clgi(void);
void __stdcall _svm_invlpga(void *, int);
void __stdcall _svm_skinit(int);
void _svm_stgi(void);
void __stdcall _svm_vmload(size_t);
void __stdcall _svm_vmrun(size_t);
void __stdcall _svm_vmsave(size_t);
int _swprintf(wchar_t *Dest, const wchar_t *Format, ...);
int _swprintf_c(wchar_t *DstBuf, size_t SizeInWords, const wchar_t *Format, ...);
char *__cdecl _tempnam(const char *DirName, const char *FilePrefix);
int __cdecl _tolower(int C);
int __cdecl _tolower_l(int C, _locale_t Locale);
int __cdecl _toupper(int C);
int __cdecl _toupper_l(int C, _locale_t Locale);
wint_t __cdecl _towlower_l(wint_t C, _locale_t Locale);
wint_t __cdecl _towupper_l(wint_t C, _locale_t Locale);
void _ud2(void);
unsigned __int64 __stdcall _ull_rshift(unsigned __int64, int);
int __cdecl _ungetc_nolock(int Ch, FILE *File);
wint_t __cdecl _ungetwc_nolock(wint_t Ch, FILE *File);
int __cdecl _unlink(const char *Filename);
void __cdecl _unlock_file(FILE *File);
void _vmx_off(void);
void __stdcall _vmx_vmptrst(unsigned __int64 *);
int __cdecl _vscprintf(const char *Format, va_list ArgList);
int __cdecl _vscwprintf(const wchar_t *Format, va_list ArgList);
int __cdecl _vsnprintf(char *Dest, size_t Count, const char *Format, va_list Args);
int __cdecl _vsnwprintf(wchar_t *Dest, size_t Count, const wchar_t *Format, va_list Args);
int __cdecl _vswprintf(wchar_t *Dest, const wchar_t *Format, va_list Args);
int __cdecl _vswprintf_c(wchar_t *DstBuf, size_t SizeInWords, const wchar_t *Format, va_list ArgList);
void _wbinvd(void);
int __cdecl _wcscoll_l(const wchar_t *Str1, const wchar_t *Str2, _locale_t Locale);
wchar_t *__cdecl _wcsdup(const wchar_t *Str);
wchar_t *__cdecl _wcserror(int ErrNum);
errno_t __cdecl _wcserror_s(wchar_t *Buf, size_t SizeInWords, int ErrNum);
int __cdecl _wcsicmp(const wchar_t *Str1, const wchar_t *Str2);
int __cdecl _wcsicmp_l(const wchar_t *Str1, const wchar_t *Str2, _locale_t Locale);
int __cdecl _wcsicoll(const wchar_t *Str1, const wchar_t *Str2);
int __cdecl _wcsicoll_l(const wchar_t *Str1, const wchar_t *Str2, _locale_t Locale);
wchar_t *__cdecl _wcslwr(wchar_t *String);
errno_t __cdecl _wcslwr_s(wchar_t *Str, size_t SizeInWords);
errno_t __cdecl _wcslwr_s_l(wchar_t *Str, size_t SizeInWords, _locale_t Locale);
int __cdecl _wcsncoll(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount);
int __cdecl _wcsncoll_l(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount, _locale_t Locale);
int __cdecl _wcsnicmp(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount);
int __cdecl _wcsnicmp_l(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount, _locale_t Locale);
int __cdecl _wcsnicoll(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount);
int __cdecl _wcsnicoll_l(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount, _locale_t Locale);
wchar_t *__cdecl _wcsnset(wchar_t *Str, wchar_t Val, size_t MaxCount);
errno_t __cdecl _wcsnset_s(wchar_t *Dst, size_t DstSizeInWords, wchar_t Val, size_t MaxCount);
wchar_t *__cdecl _wcsrev(wchar_t *Str);
wchar_t *__cdecl _wcsset(wchar_t *Str, wchar_t Val);
errno_t __cdecl _wcsset_s(wchar_t *Str, size_t SizeInWords, wchar_t Val);
wchar_t *__cdecl _wcsupr(wchar_t *String);
errno_t __cdecl _wcsupr_s(wchar_t *Str, size_t Size);
errno_t __cdecl _wcsupr_s_l(wchar_t *Str, size_t Size, _locale_t Locale);
size_t __cdecl _wcsxfrm_l(wchar_t *Dst, const wchar_t *Src, size_t MaxCount, _locale_t Locale);
const unsigned __int16 _wctype[];
FILE *__cdecl _wfdopen(int FileHandle, const wchar_t *Mode);
FILE *__cdecl _wfopen(const wchar_t *Filename, const wchar_t *Mode);
FILE *__cdecl _wfreopen(const wchar_t *Filename, const wchar_t *Mode, FILE *OldFile);
FILE *__cdecl _wfsopen(const wchar_t *Filename, const wchar_t *Mode, int ShFlag);
void __cdecl _wperror(const wchar_t *ErrMsg);
FILE *__cdecl _wpopen(const wchar_t *Command, const wchar_t *Mode);
int __cdecl _wremove(const wchar_t *Filename);
void __stdcall _writecr0(unsigned int);
void __stdcall _writecr3(unsigned int);
void __stdcall _writecr4(unsigned int);
void __stdcall _writecr8(unsigned int);
void __stdcall _writedr(unsigned int, unsigned int);
void __stdcall _writeeflags(unsigned int);
void __stdcall _writefsbyte(unsigned int, unsigned __int8);
void __stdcall _writefsdword(unsigned int, unsigned int);
void __stdcall _writefsword(unsigned int, unsigned __int16);
void __stdcall _writemsr(unsigned int, unsigned __int64);
wchar_t *__cdecl _wtempnam(const wchar_t *Directory, const wchar_t *FilePrefix);
wchar_t *__cdecl _wtmpnam(wchar_t *Buffer);
unsigned __int8 __stdcall bittest(const int *, int);
unsigned __int8 __stdcall bittestandcomplement(int *, int);
unsigned __int8 __stdcall bittestandreset(int *, int);
unsigned __int8 __stdcall bittestandset(int *, int);
void __cdecl clearerr(FILE *File);
int __cdecl fclose(FILE *File);
int __cdecl fcloseall();
FILE *__cdecl fdopen(int FileHandle, const char *Format);
int __cdecl feof(FILE *File);
int __cdecl ferror(FILE *File);
int __cdecl fflush(FILE *File);
int __cdecl fgetc(FILE *File);
int __cdecl fgetchar();
int __cdecl fgetpos(FILE *File, fpos_t *Pos);
char *__cdecl fgets(char *Buf, int MaxCount, FILE *File);
wint_t __cdecl fgetwc(FILE *File);
wchar_t *__cdecl fgetws(wchar_t *Dst, int SizeInWords, FILE *File);
int __cdecl fileno(FILE *File);
int __cdecl flushall();
FILE *__cdecl fopen(const char *Filename, const char *Mode);
void __cdecl fpreset();
int fprintf(FILE *File, const char *Format, ...);
int __cdecl fputc(int Ch, FILE *File);
int __cdecl fputchar(int Ch);
int __cdecl fputs(const char *Str, FILE *File);
wint_t __cdecl fputwc(wchar_t Ch, FILE *File);
int __cdecl fputws(const wchar_t *Str, FILE *File);
size_t __cdecl fread(void *DstBuf, size_t ElementSize, size_t Count, FILE *File);
FILE *__cdecl freopen(const char *Filename, const char *Mode, FILE *File);
int fscanf(FILE *File, const char *Format, ...);
int __cdecl fseek(FILE *File, int Offset, int Origin);
int __cdecl fsetpos(FILE *File, const fpos_t *Pos);
int __cdecl ftell(FILE *File);
int fwprintf(FILE *File, const wchar_t *Format, ...);
size_t __cdecl fwrite(const void *Str, size_t Size, size_t Count, FILE *File);
int fwscanf(FILE *File, const wchar_t *Format, ...);
int __cdecl getc(FILE *File);
int __cdecl getchar();
char *__cdecl gets(char *Buffer);
int __cdecl getw(FILE *File);
wint_t __cdecl getwc(FILE *File);
wint_t __cdecl getwchar();
int __cdecl inp(unsigned __int16);
unsigned int __cdecl inpd(unsigned __int16);
unsigned __int16 __cdecl inpw(unsigned __int16);
unsigned __int8 __stdcall interlockedbittestandreset(volatile int *, int);
unsigned __int8 __stdcall interlockedbittestandset(volatile int *, int);
int __cdecl is_wctype(wint_t C, wctype_t Type);
int __cdecl isalnum(int C);
int __cdecl isalpha(int C);
int __cdecl isblank(int C);
int __cdecl iscntrl(int C);
int __cdecl isdigit(int C);
int __cdecl isgraph(int C);
int __cdecl isleadbyte(int C);
int __cdecl islower(int C);
int __cdecl isprint(int C);
int __cdecl ispunct(int C);
int __cdecl isspace(int C);
int __cdecl isupper(int C);
int __cdecl iswalnum(wint_t C);
int __cdecl iswalpha(wint_t C);
int __cdecl iswascii(wint_t C);
int __cdecl iswblank(wint_t C);
int __cdecl iswcntrl(wint_t C);
int __cdecl iswctype(wint_t C, wctype_t Type);
int __cdecl iswdigit(wint_t C);
int __cdecl iswgraph(wint_t C);
int __cdecl iswlower(wint_t C);
int __cdecl iswprint(wint_t C);
int __cdecl iswpunct(wint_t C);
int __cdecl iswspace(wint_t C);
int __cdecl iswupper(wint_t C);
int __cdecl iswxdigit(wint_t C);
int __cdecl isxdigit(int C);
void __cdecl __noreturn longjmp(jmp_buf Buf, int Value);
void m_empty(void);
void m_femms(void);
void __stdcall m_prefetch(void *);
void __stdcall m_prefetchw(const volatile void *);
void *__cdecl memccpy(void *Dst, const void *Src, int Val, size_t Size);
void *__cdecl memchr(const void *Buf, int Val, size_t MaxCount);
int __cdecl memcmp(const void *Buf1, const void *Buf2, size_t Size);
void *__cdecl memcpy(void *Dst, const void *Src, size_t MaxCount);
int __cdecl memicmp(const void *Buf1, const void *Buf2, size_t Size);
void *__cdecl memmove(void *Dst, const void *Src, size_t MaxCount);
void *__cdecl memset(void *Dst, int Val, size_t Size);
void mm_lfence(void);
void mm_mfence(void);
void mm_pause(void);
void mm_sfence(void);
void __cdecl __noreturn ms_longjmp(jmp_buf Buf, int Value);
int __cdecl outp(unsigned __int16, int);
unsigned int __cdecl outpd(unsigned __int16, unsigned int);
unsigned __int16 __cdecl outpw(unsigned __int16, unsigned __int16);
void __cdecl perror(const char *ErrMsg);
int printf(const char *Format, ...);
int __cdecl putc(int Ch, FILE *File);
int __cdecl putchar(int Ch);
int __cdecl puts(const char *Str);
int __cdecl putw(int Ch, FILE *File);
wint_t __cdecl putwc(wchar_t Ch, FILE *File);
wint_t __cdecl putwchar(wchar_t Ch);
int __cdecl remove(const char *Filename);
int __cdecl rename(const char *OldFilename, const char *NewFilename);
void __cdecl rewind(FILE *File);
int __cdecl rmtmp();
int scanf(const char *Format, ...);
void __cdecl setbuf(FILE *File, char *Buffer);
int __cdecl setvbuf(FILE *File, char *Buf, int Mode, size_t Size);
void __stdcall sgdt(void *);
int snprintf(char *s, size_t n, const char *format, ...);
int snwprintf(wchar_t *s, size_t n, const wchar_t *format, ...);
int sprintf(char *Dest, const char *Format, ...);
int sscanf(const char *Src, const char *Format, ...);
char *__cdecl strcat(char *Dest, const char *Source);
errno_t __cdecl strcat_s(char *Dst, size_t Size, const char *Src);
char *__cdecl strchr(const char *Str, int Val);
int __cdecl strcmp(const char *Str1, const char *Str2);
int __cdecl strcmpi(const char *Str1, const char *Str2);
int __cdecl strcoll(const char *Str1, const char *Str2);
char *__cdecl strcpy(char *Dest, const char *Source);
errno_t __cdecl strcpy_s(char *Dst, size_t Size, const char *Src);
size_t __cdecl strcspn(const char *Str, const char *Control);
char *__cdecl strdup(const char *Src);
char *__cdecl strerror(int);
int __cdecl stricmp(const char *Str1, const char *Str2);
size_t __cdecl strlen(const char *Str);
char *__cdecl strlwr(char *Str);
char *__cdecl strncat(char *Dest, const char *Source, size_t Count);
int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount);
char *__cdecl strncpy(char *Dest, const char *Source, size_t Count);
int __cdecl strnicmp(const char *Str1, const char *Str, size_t MaxCount);
size_t __cdecl strnlen(const char *Str, size_t MaxCount);
char *__cdecl strnset(char *Str, int Val, size_t MaxCount);
char *__cdecl strpbrk(const char *Str, const char *Control);
char *__cdecl strrchr(const char *Str, int Ch);
char *__cdecl strrev(char *Str);
char *__cdecl strset(char *Str, int Val);
size_t __cdecl strspn(const char *Str, const char *Control);
char *__cdecl strstr(const char *Str, const char *SubStr);
char *__cdecl strtok(char *Str, const char *Delim);
char *__cdecl strupr(char *Str);
char *__stdcall strupr_l(char *String, _locale_t Locale);
size_t __cdecl strxfrm(char *Dst, const char *Src, size_t MaxCount);
int swprintf(wchar_t *, const wchar_t *, ...);
int swscanf(const wchar_t *Src, const wchar_t *Format, ...);
char *__cdecl tempnam(const char *Directory, const char *FilePrefix);
FILE *__cdecl tmpfile();
char *__cdecl tmpnam(char *Buffer);
int __cdecl tolower(int C);
int __cdecl toupper(int C);
wint_t __cdecl towlower(wint_t C);
wint_t __cdecl towupper(wint_t C);
int __cdecl ungetc(int Ch, FILE *File);
wint_t __cdecl ungetwc(wint_t Ch, FILE *File);
int __cdecl unlink(const char *Filename);
int __cdecl vfprintf(FILE *File, const char *Format, va_list ArgList);
int __cdecl vfscanf(FILE *fp, const char *Format, va_list argp);
int __cdecl vfwprintf(FILE *File, const wchar_t *Format, va_list ArgList);
int __cdecl vfwscanf(FILE *, const wchar_t *, va_list);
int __cdecl vprintf(const char *Format, va_list ArgList);
int __cdecl vscanf(const char *Format, va_list argp);
int __cdecl vsnprintf(char *DstBuf, size_t MaxCount, const char *Format, va_list ArgList);
int __cdecl vsnwprintf(wchar_t *s, size_t n, const wchar_t *format, va_list arg);
int __cdecl vsprintf(char *Dest, const char *Format, va_list Args);
int __cdecl vsscanf(const char *Str, const char *Format, va_list argp);
int __cdecl vswprintf(wchar_t *, const wchar_t *, va_list);
int __cdecl vswscanf(const wchar_t *, const wchar_t *, va_list);
int __cdecl vwprintf(const wchar_t *Format, va_list ArgList);
int __cdecl vwscanf(const wchar_t *, va_list);
errno_t __cdecl wcsat_s(wchar_t *Dest, size_t SizeInWords, const wchar_t *Source);
wchar_t *__cdecl wcscat(wchar_t *Dest, const wchar_t *Source);
wchar_t *__cdecl wcschr(const wchar_t *Str, wchar_t Ch);
int __cdecl wcscmp(const wchar_t *Str1, const wchar_t *Str2);
int __cdecl wcscoll(const wchar_t *Str1, const wchar_t *Str2);
wchar_t *__cdecl wcscpy(wchar_t *Dest, const wchar_t *Source);
errno_t __cdecl wcscpy_s(wchar_t *Dest, size_t SizeInWords, const wchar_t *Source);
size_t __cdecl wcscspn(const wchar_t *Str, const wchar_t *Control);
wchar_t *__cdecl wcsdup(const wchar_t *Str);
int __cdecl wcsicmp(const wchar_t *Str1, const wchar_t *Str2);
int __cdecl wcsicoll(const wchar_t *Str1, const wchar_t *Str2);
size_t __cdecl wcslen(const wchar_t *Str);
wchar_t *__cdecl wcslwr(wchar_t *Str);
wchar_t *__stdcall wcslwr_l(wchar_t *String, _locale_t Locale);
wchar_t *__cdecl wcsncat(wchar_t *Dest, const wchar_t *Source, size_t Count);
int __cdecl wcsncmp(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount);
wchar_t *__cdecl wcsncpy(wchar_t *Dest, const wchar_t *Source, size_t Count);
errno_t __cdecl wcsncpy_s(wchar_t *Dst, size_t DstSizeInChars, const wchar_t *Src, size_t MaxCount);
int __cdecl wcsnicmp(const wchar_t *Str1, const wchar_t *Str2, size_t MaxCount);
size_t __cdecl wcsnlen(const wchar_t *Src, size_t MaxCount);
errno_t __cdecl wcsnlen_s(wchar_t **Src, size_t MaxCount);
wchar_t *__cdecl wcsnset(wchar_t *Str, wchar_t Val, size_t MaxCount);
wchar_t *__cdecl wcspbrk(const wchar_t *Str, const wchar_t *Control);
wchar_t *__cdecl wcsrchr(const wchar_t *Str, wchar_t Ch);
wchar_t *__cdecl wcsrev(wchar_t *Str);
wchar_t *__cdecl wcsset(wchar_t *Str, wchar_t Val);
size_t __cdecl wcsspn(const wchar_t *Str, const wchar_t *Control);
wchar_t *__cdecl wcsstr(const wchar_t *Str, const wchar_t *SubStr);
wchar_t *__cdecl wcstok(wchar_t *Str, const wchar_t *Delim);
wchar_t *__cdecl wcsupr(wchar_t *Str);
wchar_t *__stdcall wcsupr_l(wchar_t *String, _locale_t Locale);
size_t __cdecl wcsxfrm(wchar_t *Dst, const wchar_t *Src, size_t MaxCount);
int wprintf(const wchar_t *Format, ...);
int wscanf(const wchar_t *Format, ...);
char (*c_assert(void))[1];
char *__stdcall strlwr_l(char *String, _locale_t Locale);
ULONG __stdcall vDbgPrintEx(ULONG ComponentId, ULONG Level, PCCH Format, va_list ap);
ULONG __stdcall vDbgPrintExWithPrefix(PCCH Prefix, ULONG ComponentId, ULONG Level, PCCH Format, va_list ap);
BOOL __stdcall wglCopyContext(HGLRC, HGLRC, UINT);
HGLRC __stdcall wglCreateContext(HDC);
HGLRC __stdcall wglCreateLayerContext(HDC, int);
BOOL __stdcall wglDeleteContext(HGLRC);
BOOL __stdcall wglDescribeLayerPlane(HDC, int, int, UINT, LPLAYERPLANEDESCRIPTOR);
HGLRC __stdcall wglGetCurrentContext();
HDC __stdcall wglGetCurrentDC();
int __stdcall wglGetLayerPaletteEntries(HDC, int, int, int, COLORREF *);
PROC __stdcall wglGetProcAddress(LPCSTR);
BOOL __stdcall wglMakeCurrent(HDC, HGLRC);
BOOL __stdcall wglRealizeLayerPalette(HDC, int, BOOL);
int __stdcall wglSetLayerPaletteEntries(HDC, int, int, int, const COLORREF *);
BOOL __stdcall wglShareLists(HGLRC, HGLRC);
BOOL __stdcall wglSwapLayerBuffers(HDC, UINT);
DWORD __stdcall wglSwapMultipleBuffers(UINT, const WGLSWAP *);
BOOL __stdcall wglUseFontBitmapsA(HDC, DWORD, DWORD, DWORD);
BOOL __stdcall wglUseFontBitmapsW(HDC, DWORD, DWORD, DWORD);
BOOL __stdcall wglUseFontOutlinesA(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);
BOOL __stdcall wglUseFontOutlinesW(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);
