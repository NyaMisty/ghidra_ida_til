struct $7B3C5D519F2E4A5BE311CA6A6DE1B2A0 {int level;unsigned int flags;char fd;unsigned __int8 hold;int bsize;unsigned __int8 *buffer;unsigned __int8 *curp;unsigned int istemp;int token;};
struct $979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
struct $B8243ED19B76CA5D55F9F69ED1E7C09F {__int32 quot;__int32 rem;};
enum $C967B4BD5950CD7FE5A55F6326D513E0 {DOMAIN = 0x1,SING = 0x2,OVERFLOW = 0x3,UNDERFLOW = 0x4,TLOSS = 0x5,PLOSS = 0x6,STACKFAULT = 0x7,};
struct $DD2596440A2D8284D7D9C623DB5462ED {char ds_drive;char ds_pattern[13];char ds_reserved[7];char ds_attrib;int ds_time;int ds_date;__int32 ds_size;char ds_nameZ[13];};
struct $F537039E3C3D15C2CDBD1FBA107663C2 {char _d_reserved[30];struct dirent _d_dirent;char *_d_dirname;char _d_first;unsigned __int8 _d_magic;};
struct BYTEREGS {unsigned __int8 al;unsigned __int8 ah;unsigned __int8 bl;unsigned __int8 bh;unsigned __int8 cl;unsigned __int8 ch;unsigned __int8 dl;unsigned __int8 dh;};
enum CGA_COLORS {CGA_LIGHTGREEN = 0x1,CGA_LIGHTRED = 0x2,CGA_YELLOW = 0x3,CGA_LIGHTCYAN = 0x1,CGA_LIGHTMAGENTA = 0x2,CGA_WHITE = 0x3,CGA_GREEN = 0x1,CGA_RED = 0x2,CGA_BROWN = 0x3,CGA_CYAN = 0x1,CGA_MAGENTA = 0x2,CGA_LIGHTGRAY = 0x3,};
enum COLORS {BLACK = 0x0,BLUE = 0x1,GREEN = 0x2,CYAN = 0x3,RED = 0x4,MAGENTA = 0x5,BROWN = 0x6,LIGHTGRAY = 0x7,DARKGRAY = 0x8,LIGHTBLUE = 0x9,LIGHTGREEN = 0xA,LIGHTCYAN = 0xB,LIGHTRED = 0xC,LIGHTMAGENTA = 0xD,YELLOW = 0xE,WHITE = 0xF,};
struct COUNTRY {int co_date;char co_curr[5];char co_thsep[2];char co_desep[2];char co_dtsep[2];char co_tmsep[2];char co_currstyle;char co_digits;char co_time;__int32 co_case;char co_dasep[2];char co_fill[10];};
typedef struct $F537039E3C3D15C2CDBD1FBA107663C2 DIR;
struct DOSERROR {int de_exterror;char de_class;char de_action;char de_locus;};
enum EGA_COLORS {EGA_BLACK = 0x0,EGA_BLUE = 0x1,EGA_GREEN = 0x2,EGA_CYAN = 0x3,EGA_RED = 0x4,EGA_MAGENTA = 0x5,EGA_BROWN = 0x14,EGA_LIGHTGRAY = 0x7,EGA_DARKGRAY = 0x38,EGA_LIGHTBLUE = 0x39,EGA_LIGHTGREEN = 0x3A,EGA_LIGHTCYAN = 0x3B,EGA_LIGHTRED = 0x3C,EGA_LIGHTMAGENTA = 0x3D,EGA_YELLOW = 0x3E,EGA_WHITE = 0x3F,};
typedef struct $7B3C5D519F2E4A5BE311CA6A6DE1B2A0 FILE;
enum MACRO_BITSPERBYTE {BITSPERBYTE = 8,};
enum MACRO_BUFSIZ {BUFSIZ = 512,};
enum MACRO_CCERR {CCERR_CHOOSECOLORCODES = 0x5000,};
enum MACRO_CDERR {CDERR_DIALOGFAILURE = 0xFFFF,CDERR_GENERALCODES = 0x0,CDERR_STRUCTSIZE = 0x1,CDERR_INITIALIZATION = 0x2,CDERR_NOTEMPLATE = 0x3,CDERR_NOHINSTANCE = 0x4,CDERR_LOADSTRFAILURE = 0x5,CDERR_FINDRESFAILURE = 0x6,CDERR_LOADRESFAILURE = 0x7,CDERR_LOCKRESFAILURE = 0x8,CDERR_MEMALLOCFAILURE = 0x9,CDERR_MEMLOCKFAILURE = 0xA,CDERR_NOHOOK = 0xB,CDERR_REGISTERMSGFAIL = 0xC,};
enum MACRO_CFERR {CFERR_CHOOSEFONTCODES = 0x2000,CFERR_NOFONTS = 0x2001,CFERR_MAXLESSTHANMIN = 0x2002,};
enum MACRO_CHAR {CHAR_BIT = 8,CHAR_MAX = 127,CHAR_MIN = -128,};
enum MACRO_COLOR {COLOR_HUESCROLL = 700,COLOR_SATSCROLL = 701,COLOR_LUMSCROLL = 702,COLOR_HUE = 703,COLOR_SAT = 704,COLOR_LUM = 705,COLOR_RED = 706,COLOR_GREEN = 707,COLOR_BLUE = 708,COLOR_CURRENT = 709,COLOR_RAINBOW = 710,COLOR_SAVE = 711,COLOR_ADD = 712,COLOR_SOLID = 713,COLOR_TUNE = 714,COLOR_SCHEMES = 715,COLOR_ELEMENT = 716,COLOR_SAMPLES = 717,COLOR_PALETTE = 718,COLOR_MIX = 719,COLOR_BOX1 = 720,COLOR_CUSTOM1 = 721,COLOR_HUEACCEL = 723,COLOR_SATACCEL = 724,COLOR_LUMACCEL = 725,COLOR_REDACCEL = 726,COLOR_GREENACCEL = 727,COLOR_BLUEACCEL = 728,};
enum MACRO_DIG {DBL_DIG = 15,FLT_DIG = 6,LDBL_DIG = 19,DBL_MANT_DIG = 53,FLT_MANT_DIG = 24,LDBL_MANT_DIG = 64,};
enum MACRO_DIR {HORIZ_DIR = 0,VERT_DIR = 1,};
enum MACRO_DLG {DLG_COLOR = 10,};
enum MACRO_DMAXEXP {DMAXEXP = 308,};
enum MACRO_DMAXPOWTWO {DMAXPOWTWO = 0x3FF,};
enum MACRO_DMINEXP {DMINEXP = -307,};
enum MACRO_DSIGNIF {DSIGNIF = 53,};
enum MACRO_EM {EM_INVALID = 0x1,EM_DENORMAL = 0x2,EM_ZERODIVIDE = 0x4,EM_OVERFLOW = 0x8,EM_UNDERFLOW = 0x10,EM_INEXACT = 0x20,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_ERRNO {EZERO = 0,EINVFNC = 1,ENOFILE = 2,ENOPATH = 3,ECONTR = 7,EINVMEM = 9,EINVENV = 10,EINVFMT = 11,EINVACC = 12,EINVDAT = 13,EINVDRV = 15,ECURDIR = 16,ENOTSAM = 17,ENMFILE = 18,ENOENT = 2,EMFILE = 4,EACCES = 5,EBADF = 6,ENOMEM = 8,EFAULT = 14,ENODEV = 15,EINVAL = 19,E2BIG = 20,ENOEXEC = 21,EXDEV = 22,ENFILE = 23,ECHILD = 24,ENOTTY = 25,ETXTBSY = 26,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,ERANGE = 34,EEXIST = 35,EDEADLOCK = 36,EPERM = 37,ESRCH = 38,EINTR = 39,EIO = 40,ENXIO = 41,EAGAIN = 42,ENOTBLK = 43,EBUSY = 44,ENOTDIR = 45,EISDIR = 46,EUCLEAN = 47,};
enum MACRO_EXIT {EXIT_SUCCESS = 0,EXIT_FAILURE = 1,};
enum MACRO_EXP {DBL_MAX_EXP = 1024,FLT_MAX_EXP = 128,LDBL_MAX_EXP = 16384,DBL_MAX_10_EXP = 308,FLT_MAX_10_EXP = 38,LDBL_MAX_10_EXP = 4932,DBL_MIN_10_EXP = -307,FLT_MIN_10_EXP = -37,LDBL_MIN_10_EXP = -4931,DBL_MIN_EXP = -1021,FLT_MIN_EXP = -125,LDBL_MIN_EXP = -16381,};
enum MACRO_FA {FA_NORMAL = 0x0,FA_RDONLY = 0x1,FA_HIDDEN = 0x2,FA_SYSTEM = 0x4,FA_LABEL = 0x8,FA_DIREC = 0x10,FA_ARCH = 0x20,};
enum MACRO_FILENAME {FILENAME_MAX = 80,};
enum MACRO_FILEOPENORD {FILEOPENORD = 1536,};
enum MACRO_FINDDLGORD {FINDDLGORD = 1540,};
enum MACRO_FLT {FLT_RADIX = 2,FLT_ROUNDS = 1,FLT_GUARD = 1,FLT_NORMALIZE = 1,};
enum MACRO_FMAXEXP {FMAXEXP = 38,};
enum MACRO_FMAXPOWTWO {FMAXPOWTWO = 0x7F,};
enum MACRO_FMINEXP {FMINEXP = -37,};
enum MACRO_FNERR {FNERR_FILENAMECODES = 0x3000,FNERR_SUBCLASSFAILURE = 0x3001,FNERR_INVALIDFILENAME = 0x3002,FNERR_BUFFERTOOSMALL = 0x3003,};
enum MACRO_FONTDLGORD {FONTDLGORD = 1542,};
enum MACRO_FOPEN {FOPEN_MAX = 20,};
enum MACRO_FORMATDLGORD30 {FORMATDLGORD30 = 1544,};
enum MACRO_FORMATDLGORD31 {FORMATDLGORD31 = 1543,};
enum MACRO_FPE {FPE_INTOVFLOW = 126,FPE_INTDIV0 = 127,FPE_INVALID = 129,FPE_ZERODIVIDE = 131,FPE_OVERFLOW = 132,FPE_UNDERFLOW = 133,FPE_INEXACT = 134,FPE_STACKFAULT = 135,FPE_EXPLICITGEN = 140,};
enum MACRO_FRERR {FRERR_FINDREPLACECODES = 0x4000,FRERR_BUFFERLENGTHZERO = 0x4001,};
enum MACRO_FSIGNIF {FSIGNIF = 24,};
enum MACRO_HANDLE {HANDLE_MAX = 20,};
enum MACRO_HIBITI {HIBITI = 0x8000,HIBITL = 0x0,};
enum MACRO_HIBITS {HIBITS = 0x8000,};
enum MACRO_HIDDENBIT {HIDDENBIT = 1,};
enum MACRO_IC {IC_AFFINE = 0x1000,IC_PROJECTIVE = 0x0,};
enum MACRO_ILL {ILL_EXECUTION = 20,ILL_EXPLICITGEN = 21,};
enum MACRO_INT {INT_MIN = 0x8000,};
enum MACRO_L {L_ctermid = 5,L_tmpnam = 13,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,};
enum MACRO_LK {LK_UNLCK = 0,LK_LOCK = 1,LK_NBLCK = 2,LK_RLCK = 3,LK_NBRLCK = 4,};
enum MACRO_LONG {LONG_MIN = 0x0,};
enum MACRO_MAX {UCHAR_MAX = 255,SHRT_MAX = 32767,};
enum MACRO_MAXCOLORS {MAXCOLORS = 15,};
enum MACRO_MAXDIR {MAXDIR = 66,};
enum MACRO_MAXDRIVE {MAXDRIVE = 3,};
enum MACRO_MAXEXT {MAXEXT = 5,};
enum MACRO_MAXFILE {MAXFILE = 9,};
enum MACRO_MAXINT {MAXINT = 0x7FFF,};
enum MACRO_MAXLONG {MAXLONG = 0xFFFF,};
enum MACRO_MAXPATH {MAXPATH = 80,};
enum MACRO_MAXSHORT {MAXSHORT = 0x7FFF,};
enum MACRO_MB {MB_CUR_MAX = 1,};
enum MACRO_MCW {MCW_EM = 0x3F,};
enum MACRO_MCW_IC {MCW_IC = 0x1000,};
enum MACRO_MCW_PC {MCW_PC = 0x300,};
enum MACRO_MCW_RC {MCW_RC = 0xC00,};
enum MACRO_MODE {DOS_MODE = 0,OS2_MODE = 1,};
enum MACRO_MULTIFILEOPENORD {MULTIFILEOPENORD = 1537,};
enum MACRO_NFDS {NFDS = 20,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_NUM {NUM_BASIC_COLORS = 48,NUM_CUSTOM_COLORS = 16,};
enum MACRO_O {O_RDONLY = 1,O_WRONLY = 2,O_RDWR = 4,O_CREAT = 256,O_TRUNC = 512,O_EXCL = 1024,};
enum MACRO_O_APPEND {O_APPEND = 0x800,O_CHANGED = 0x1000,O_DEVICE = 0x2000,O_TEXT = 0x4000,O_BINARY = 0x8000,O_NOINHERIT = 0x80,O_DENYALL = 0x10,O_DENYWRITE = 0x20,O_DENYREAD = 0x30,O_DENYNONE = 0x40,};
enum MACRO_P {P_WAIT = 0,P_NOWAIT = 1,P_OVERLAY = 2,P_NOWAITO = 3,P_DETACH = 4,};
enum MACRO_PC {PC_24 = 0x0,PC_53 = 0x200,PC_64 = 0x300,};
enum MACRO_PDERR {PDERR_PRINTERCODES = 0x1000,PDERR_SETUPFAILURE = 0x1001,PDERR_PARSEFAILURE = 0x1002,PDERR_RETDEFFAILURE = 0x1003,PDERR_LOADDRVFAILURE = 0x1004,PDERR_GETDEVMODEFAIL = 0x1005,PDERR_INITFAILURE = 0x1006,PDERR_NODEVICES = 0x1007,PDERR_NODEFAULTPRN = 0x1008,PDERR_DNDMMISMATCH = 0x1009,PDERR_CREATEICFAILURE = 0x100A,PDERR_PRINTERNOTFOUND = 0x100B,PDERR_DEFAULTDIFFERENT = 0x100C,};
enum MACRO_PRINTDLGORD {PRINTDLGORD = 1538,};
enum MACRO_PRNSETUPDLGORD {PRNSETUPDLGORD = 1539,};
enum MACRO_RC {RC_CHOP = 0xC00,RC_UP = 0x800,RC_DOWN = 0x400,RC_NEAR = 0x0,};
enum MACRO_READ {_KEYBRD_READ = 0,_NKEYBRD_READ = 16,};
enum MACRO_READY {_KEYBRD_READY = 1,_NKEYBRD_READY = 17,};
enum MACRO_REPLACEDLGORD {REPLACEDLGORD = 1541,};
enum MACRO_S {S_IFMT = 0xF000,S_IFDIR = 0x4000,S_IFIFO = 0x1000,S_IFCHR = 0x2000,S_IFBLK = 0x3000,S_IFREG = 0x8000,S_IREAD = 0x100,S_IWRITE = 0x80,S_IEXEC = 0x40,};
enum MACRO_SCHAR {SCHAR_MAX = 127,SCHAR_MIN = -128,};
enum MACRO_SEEK {SEEK_CUR = 1,SEEK_END = 2,SEEK_SET = 0,};
enum MACRO_SEGV {SEGV_BOUND = 10,SEGV_EXPLICITGEN = 11,};
enum MACRO_SH {SH_COMPAT = 0x0,SH_DENYRW = 0x10,SH_DENYWR = 0x20,SH_DENYRD = 0x30,SH_DENYNONE = 0x40,SH_DENYNO = 0x40,};
enum MACRO_SHIFTSTATUS {_KEYBRD_SHIFTSTATUS = 2,_NKEYBRD_SHIFTSTATUS = 18,};
enum MACRO_SHRT {SHRT_MIN = 0x8000,};
enum MACRO_SIG {SIG_DFL = 0,SIG_IGN = 1,SIG_ERR = -1,};
enum MACRO_SIGNAL {SIGABRT = 22,SIGFPE = 8,SIGILL = 4,SIGINT = 2,SIGSEGV = 11,SIGTERM = 15,};
enum MACRO_SW {SW_INVALID = 0x1,SW_DENORMAL = 0x2,SW_ZERODIVIDE = 0x4,SW_OVERFLOW = 0x8,SW_UNDERFLOW = 0x10,SW_INEXACT = 0x20,};
enum MACRO_SYS {SYS_OPEN = 20,};
enum MACRO_TMP {TMP_MAX = 0xFFFF,RAND_MAX = 0x7FFF,};
enum MACRO_UINT {UINT_MAX = 0xFFFF,LONG_MAX = 0xFFFF,};
enum MACRO_ULONG {ULONG_MAX = 0xFFFF,MB_LEN_MAX = 0x1,};
enum MACRO_USER {USER_CHAR_SIZE = 0,};
enum MACRO_USHRT {USHRT_MAX = 0xFFFF,INT_MAX = 0x7FFF,};
enum MACRO_WAIT {WAIT_CHILD = 0,WAIT_GRANDCHILD = 1,};
enum MACRO_WILDCARDS {WILDCARDS = 0x1,EXTENSION = 0x2,FILENAME = 0x4,DIRECTORY = 0x8,DRIVE = 0x10,};
enum MACRO__A {_A_NORMAL = 0x0,_A_RDONLY = 0x1,_A_HIDDEN = 0x2,_A_SYSTEM = 0x4,_A_VOLID = 0x8,_A_SUBDIR = 0x10,_A_ARCH = 0x20,};
enum MACRO__BADNODE {_BADNODE = -2,};
enum MACRO__BADVALUE {_BADVALUE = -3,};
enum MACRO__COM {_COM_INIT = 0,_COM_SEND = 1,_COM_RECEIVE = 2,_COM_STATUS = 3,_COM_CHR7 = 2,_COM_CHR8 = 3,_COM_STOP1 = 0,_COM_STOP2 = 4,_COM_NOPARITY = 0,_COM_EVENPARITY = 24,_COM_ODDPARITY = 8,_COM_110 = 0,_COM_150 = 32,_COM_300 = 64,_COM_600 = 96,_COM_1200 = 128,_COM_2400 = 160,_COM_4800 = 192,_COM_9600 = 224,};
enum MACRO__DEXPLEN {_DEXPLEN = 11,};
enum MACRO__DISK {_DISK_RESET = 0,_DISK_STATUS = 1,_DISK_READ = 2,_DISK_WRITE = 3,_DISK_VERIFY = 4,_DISK_FORMAT = 5,};
enum MACRO__EXPBASE {_EXPBASE = 2,};
enum MACRO__F {_F_RDWR = 0x3,_F_READ = 0x1,_F_WRIT = 0x2,_F_BUF = 0x4,_F_LBUF = 0x8,_F_ERR = 0x10,_F_EOF = 0x20,_F_BIN = 0x40,_F_IN = 0x80,_F_OUT = 0x100,_F_TERM = 0x200,};
enum MACRO__FEXPLEN {_FEXPLEN = 8,};
enum MACRO__FREEENTRY {_FREEENTRY = 3,_USEDENTRY = 4,};
enum MACRO__HARDERR {_HARDERR_IGNORE = 0,_HARDERR_RETRY = 1,_HARDERR_ABORT = 2,_HARDERR_FAIL = 3,};
enum MACRO__HEAPCORRUPT {_HEAPCORRUPT = -1,};
enum MACRO__HEAPEMPTY {_HEAPEMPTY = 1,_HEAPOK = 2,};
enum MACRO__HEAPEND {_HEAPEND = 5,};
enum MACRO__IEEE {_IEEE = 1,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,};
enum MACRO__IS {_IS_SP = 1,_IS_DIG = 2,_IS_UPP = 4,_IS_LOW = 8,_IS_HEX = 16,_IS_CTL = 32,_IS_PUN = 64,};
enum MACRO__LENBASE {_LENBASE = 1,};
enum MACRO__MAX {_MAX_PATH = 80,_MAX_DRIVE = 3,_MAX_DIR = 66,_MAX_FNAME = 9,_MAX_EXT = 5,};
enum MACRO__NFILE {_NFILE_ = 20,};
enum MACRO__NOCURSOR {_NOCURSOR = 0,_SOLIDCURSOR = 1,_NORMALCURSOR = 2,BLINK = 128,};
enum MACRO__O {_O_RUNFLAGS = 0x700,_O_WRITABLE = 0x100,_O_EOF = 0x200,};
enum MACRO__PRINTER {_PRINTER_WRITE = 0,_PRINTER_INIT = 1,_PRINTER_STATUS = 2,};
enum MACRO__TIME {_TIME_GETCLOCK = 0,_TIME_SETCLOCK = 1,};
enum MACRO_chx1 {chx1 = 0x410,};
enum MACRO_chx10 {chx10 = 0x419,};
enum MACRO_chx11 {chx11 = 0x41A,};
enum MACRO_chx12 {chx12 = 0x41B,};
enum MACRO_chx13 {chx13 = 0x41C,};
enum MACRO_chx14 {chx14 = 0x41D,};
enum MACRO_chx15 {chx15 = 0x41E,};
enum MACRO_chx16 {chx16 = 0x41F,};
enum MACRO_chx2 {chx2 = 0x411,};
enum MACRO_chx3 {chx3 = 0x412,};
enum MACRO_chx4 {chx4 = 0x413,};
enum MACRO_chx5 {chx5 = 0x414,};
enum MACRO_chx6 {chx6 = 0x415,};
enum MACRO_chx7 {chx7 = 0x416,};
enum MACRO_chx8 {chx8 = 0x417,};
enum MACRO_chx9 {chx9 = 0x418,};
enum MACRO_cmb1 {cmb1 = 0x470,};
enum MACRO_cmb10 {cmb10 = 0x479,};
enum MACRO_cmb11 {cmb11 = 0x47A,};
enum MACRO_cmb12 {cmb12 = 0x47B,};
enum MACRO_cmb13 {cmb13 = 0x47C,};
enum MACRO_cmb14 {cmb14 = 0x47D,};
enum MACRO_cmb15 {cmb15 = 0x47E,};
enum MACRO_cmb16 {cmb16 = 0x47F,};
enum MACRO_cmb2 {cmb2 = 0x471,};
enum MACRO_cmb3 {cmb3 = 0x472,};
enum MACRO_cmb4 {cmb4 = 0x473,};
enum MACRO_cmb5 {cmb5 = 0x474,};
enum MACRO_cmb6 {cmb6 = 0x475,};
enum MACRO_cmb7 {cmb7 = 0x476,};
enum MACRO_cmb8 {cmb8 = 0x477,};
enum MACRO_cmb9 {cmb9 = 0x478,};
enum MACRO_ctlFirst {ctlFirst = 0x400,};
enum MACRO_ctlLast {ctlLast = 0x4FF,};
enum MACRO_edt1 {edt1 = 0x480,};
enum MACRO_edt10 {edt10 = 0x489,};
enum MACRO_edt11 {edt11 = 0x48A,};
enum MACRO_edt12 {edt12 = 0x48B,};
enum MACRO_edt13 {edt13 = 0x48C,};
enum MACRO_edt14 {edt14 = 0x48D,};
enum MACRO_edt15 {edt15 = 0x48E,};
enum MACRO_edt16 {edt16 = 0x48F,};
enum MACRO_edt2 {edt2 = 0x481,};
enum MACRO_edt3 {edt3 = 0x482,};
enum MACRO_edt4 {edt4 = 0x483,};
enum MACRO_edt5 {edt5 = 0x484,};
enum MACRO_edt6 {edt6 = 0x485,};
enum MACRO_edt7 {edt7 = 0x486,};
enum MACRO_edt8 {edt8 = 0x487,};
enum MACRO_edt9 {edt9 = 0x488,};
enum MACRO_frm1 {frm1 = 0x434,};
enum MACRO_frm2 {frm2 = 0x435,};
enum MACRO_frm3 {frm3 = 0x436,};
enum MACRO_frm4 {frm4 = 0x437,};
enum MACRO_grp1 {grp1 = 0x430,};
enum MACRO_grp2 {grp2 = 0x431,};
enum MACRO_grp3 {grp3 = 0x432,};
enum MACRO_grp4 {grp4 = 0x433,};
enum MACRO_ico1 {ico1 = 0x43C,};
enum MACRO_ico2 {ico2 = 0x43D,};
enum MACRO_ico3 {ico3 = 0x43E,};
enum MACRO_ico4 {ico4 = 0x43F,};
enum MACRO_lst1 {lst1 = 0x460,};
enum MACRO_lst10 {lst10 = 0x469,};
enum MACRO_lst11 {lst11 = 0x46A,};
enum MACRO_lst12 {lst12 = 0x46B,};
enum MACRO_lst13 {lst13 = 0x46C,};
enum MACRO_lst14 {lst14 = 0x46D,};
enum MACRO_lst15 {lst15 = 0x46E,};
enum MACRO_lst16 {lst16 = 0x46F,};
enum MACRO_lst2 {lst2 = 0x461,};
enum MACRO_lst3 {lst3 = 0x462,};
enum MACRO_lst4 {lst4 = 0x463,};
enum MACRO_lst5 {lst5 = 0x464,};
enum MACRO_lst6 {lst6 = 0x465,};
enum MACRO_lst7 {lst7 = 0x466,};
enum MACRO_lst8 {lst8 = 0x467,};
enum MACRO_lst9 {lst9 = 0x468,};
enum MACRO_psh1 {psh1 = 0x400,};
enum MACRO_psh10 {psh10 = 0x409,};
enum MACRO_psh11 {psh11 = 0x40A,};
enum MACRO_psh12 {psh12 = 0x40B,};
enum MACRO_psh13 {psh13 = 0x40C,};
enum MACRO_psh14 {psh14 = 0x40D,};
enum MACRO_psh15 {psh15 = 0x40E,};
enum MACRO_psh16 {psh16 = 0x40F,};
enum MACRO_psh2 {psh2 = 0x401,};
enum MACRO_psh3 {psh3 = 0x402,};
enum MACRO_psh4 {psh4 = 0x403,};
enum MACRO_psh5 {psh5 = 0x404,};
enum MACRO_psh6 {psh6 = 0x405,};
enum MACRO_psh7 {psh7 = 0x406,};
enum MACRO_psh8 {psh8 = 0x407,};
enum MACRO_psh9 {psh9 = 0x408,};
enum MACRO_pshHelp {pshHelp = 1038,};
enum MACRO_rad1 {rad1 = 0x420,};
enum MACRO_rad10 {rad10 = 0x429,};
enum MACRO_rad11 {rad11 = 0x42A,};
enum MACRO_rad12 {rad12 = 0x42B,};
enum MACRO_rad13 {rad13 = 0x42C,};
enum MACRO_rad14 {rad14 = 0x42D,};
enum MACRO_rad15 {rad15 = 0x42E,};
enum MACRO_rad16 {rad16 = 0x42F,};
enum MACRO_rad2 {rad2 = 0x421,};
enum MACRO_rad3 {rad3 = 0x422,};
enum MACRO_rad4 {rad4 = 0x423,};
enum MACRO_rad5 {rad5 = 0x424,};
enum MACRO_rad6 {rad6 = 0x425,};
enum MACRO_rad7 {rad7 = 0x426,};
enum MACRO_rad8 {rad8 = 0x427,};
enum MACRO_rad9 {rad9 = 0x428,};
enum MACRO_rct1 {rct1 = 0x438,};
enum MACRO_rct2 {rct2 = 0x439,};
enum MACRO_rct3 {rct3 = 0x43A,};
enum MACRO_rct4 {rct4 = 0x43B,};
enum MACRO_scr1 {scr1 = 0x490,};
enum MACRO_scr2 {scr2 = 0x491,};
enum MACRO_scr3 {scr3 = 0x492,};
enum MACRO_scr4 {scr4 = 0x493,};
enum MACRO_scr5 {scr5 = 0x494,};
enum MACRO_scr6 {scr6 = 0x495,};
enum MACRO_scr7 {scr7 = 0x496,};
enum MACRO_scr8 {scr8 = 0x497,};
enum MACRO_stc1 {stc1 = 0x440,};
enum MACRO_stc10 {stc10 = 0x449,};
enum MACRO_stc11 {stc11 = 0x44A,};
enum MACRO_stc12 {stc12 = 0x44B,};
enum MACRO_stc13 {stc13 = 0x44C,};
enum MACRO_stc14 {stc14 = 0x44D,};
enum MACRO_stc15 {stc15 = 0x44E,};
enum MACRO_stc16 {stc16 = 0x44F,};
enum MACRO_stc17 {stc17 = 0x450,};
enum MACRO_stc18 {stc18 = 0x451,};
enum MACRO_stc19 {stc19 = 0x452,};
enum MACRO_stc2 {stc2 = 0x441,};
enum MACRO_stc20 {stc20 = 0x453,};
enum MACRO_stc21 {stc21 = 0x454,};
enum MACRO_stc22 {stc22 = 0x455,};
enum MACRO_stc23 {stc23 = 0x456,};
enum MACRO_stc24 {stc24 = 0x457,};
enum MACRO_stc25 {stc25 = 0x458,};
enum MACRO_stc26 {stc26 = 0x459,};
enum MACRO_stc27 {stc27 = 0x45A,};
enum MACRO_stc28 {stc28 = 0x45B,};
enum MACRO_stc29 {stc29 = 0x45C,};
enum MACRO_stc3 {stc3 = 0x442,};
enum MACRO_stc30 {stc30 = 0x45D,};
enum MACRO_stc31 {stc31 = 0x45E,};
enum MACRO_stc32 {stc32 = 0x45F,};
enum MACRO_stc4 {stc4 = 0x443,};
enum MACRO_stc5 {stc5 = 0x444,};
enum MACRO_stc6 {stc6 = 0x445,};
enum MACRO_stc7 {stc7 = 0x446,};
enum MACRO_stc8 {stc8 = 0x447,};
enum MACRO_stc9 {stc9 = 0x448,};
struct REGPACK {unsigned int r_ax;unsigned int r_bx;unsigned int r_cx;unsigned int r_dx;unsigned int r_bp;unsigned int r_si;unsigned int r_di;unsigned int r_ds;unsigned int r_es;unsigned int r_flags;};
union REGS {struct WORDREGS x;struct BYTEREGS h;};
struct SREGS {unsigned int es;unsigned int cs;unsigned int ss;unsigned int ds;};
struct WORDREGS {unsigned int ax;unsigned int bx;unsigned int cx;unsigned int dx;unsigned int si;unsigned int di;unsigned int cflag;unsigned int flags;};
typedef void (__cdecl *_CatcherPTR)();
struct __jmp_buf {unsigned int j_sp;unsigned int j_ss;unsigned int j_flag;unsigned int j_cs;unsigned int j_ip;unsigned int j_bp;unsigned int j_di;unsigned int j_es;unsigned int j_si;unsigned int j_ds;};
struct _complexl {long double x;long double y;};
struct _exceptionl {int type;char *name;long double arg1;long double arg2;long double retval;};
typedef enum $C967B4BD5950CD7FE5A55F6326D513E0 _mexcep;
struct arccoordstype {int x;int y;int xstart;int ystart;int xend;int yend;};
typedef void (__cdecl *atexit_t)();
typedef __int32 clock_t;
struct complex {double x;double y;};
struct date {int da_year;char da_day;char da_mon;};
struct devhdr {__int32 dh_next;int dh_attr;unsigned int dh_strat;unsigned int dh_inter;char dh_name[8];};
struct dfree {unsigned int df_avail;unsigned int df_total;unsigned int df_bsec;unsigned int df_sclus;};
struct dirent {char d_name[13];};
struct diskfree_t {unsigned int total_clusters;unsigned int avail_clusters;unsigned int sectors_per_cluster;unsigned int bytes_per_sector;};
struct diskinfo_t {unsigned int drive;unsigned int head;unsigned int track;unsigned int sector;unsigned int nsectors;void far *buffer;};
typedef struct $979FA3DE6ECCF956231BFC297C4278E6 div_t;
typedef struct $DD2596440A2D8284D7D9C623DB5462ED dosSearchInfo;
struct dosdate_t {unsigned __int8 day;unsigned __int8 month;unsigned int year;unsigned __int8 dayofweek;};
struct dostime_t {unsigned __int8 hour;unsigned __int8 minute;unsigned __int8 second;unsigned __int8 hsecond;};
struct exception {int type;char *name;double arg1;double arg2;double retval;};
struct farheapinfo {void far *ptr;unsigned __int32 size;int in_use;};
struct fatinfo {char fi_sclus;char fi_fatid;unsigned int fi_nclus;int fi_bysec;};
struct fcb {char fcb_drive;char fcb_name[8];char fcb_ext[3];int fcb_curblk;int fcb_recsize;__int32 fcb_filsize;int fcb_date;char fcb_resv[10];char fcb_currec;__int32 fcb_random;};
struct ffblk {char ff_reserved[21];char ff_attrib;unsigned int ff_ftime;unsigned int ff_fdate;__int32 ff_fsize;char ff_name[13];};
enum fill_patterns {EMPTY_FILL = 0x0,SOLID_FILL = 0x1,LINE_FILL = 0x2,LTSLASH_FILL = 0x3,SLASH_FILL = 0x4,BKSLASH_FILL = 0x5,LTBKSLASH_FILL = 0x6,HATCH_FILL = 0x7,XHATCH_FILL = 0x8,INTERLEAVE_FILL = 0x9,WIDE_DOT_FILL = 0xA,CLOSE_DOT_FILL = 0xB,USER_FILL = 0xC,};
struct fillsettingstype {int pattern;int color;};
struct find_t {char reserved[21];char attrib;unsigned int wr_time;unsigned int wr_date;__int32 size;char name[13];};
enum font_names {DEFAULT_FONT = 0x0,TRIPLEX_FONT = 0x1,SMALL_FONT = 0x2,SANS_SERIF_FONT = 0x3,GOTHIC_FONT = 0x4,SCRIPT_FONT = 0x5,SIMPLEX_FONT = 0x6,TRIPLEX_SCR_FONT = 0x7,COMPLEX_FONT = 0x8,EUROPEAN_FONT = 0x9,BOLD_FONT = 0xA,};
typedef __int32 fpos_t;
struct ftime {unsigned __int16 ft_tsec : 5;unsigned __int16 ft_min : 6;unsigned __int16 ft_hour : 5;unsigned __int16 ft_day : 5;unsigned __int16 ft_month : 4;unsigned __int16 ft_year : 7;};
enum graphics_drivers {DETECT = 0x0,CGA = 0x1,MCGA = 0x2,EGA = 0x3,EGA64 = 0x4,EGAMONO = 0x5,IBM8514 = 0x6,HERCMONO = 0x7,ATT400 = 0x8,VGA = 0x9,PC3270 = 0xA,CURRENT_DRIVER = 0xFFFF,};
enum graphics_errors {grOk = 0x0,grNoInitGraph = 0xFFFF,grNotDetected = 0xFFFE,grFileNotFound = 0xFFFD,grInvalidDriver = 0xFFFC,grNoLoadMem = 0xFFFB,grNoScanMem = 0xFFFA,grNoFloodMem = 0xFFF9,grFontNotFound = 0xFFF8,grNoFontMem = 0xFFF7,grInvalidMode = 0xFFF6,grError = 0xFFF5,grIOerror = 0xFFF4,grInvalidFont = 0xFFF3,grInvalidFontNum = 0xFFF2,grInvalidVersion = 0xFFEE,};
enum graphics_modes {CGAC0 = 0x0,CGAC1 = 0x1,CGAC2 = 0x2,CGAC3 = 0x3,CGAHI = 0x4,MCGAC0 = 0x0,MCGAC1 = 0x1,MCGAC2 = 0x2,MCGAC3 = 0x3,MCGAMED = 0x4,MCGAHI = 0x5,EGALO = 0x0,EGAHI = 0x1,EGA64LO = 0x0,EGA64HI = 0x1,EGAMONOHI = 0x0,HERCMONOHI = 0x0,ATT400C0 = 0x0,ATT400C1 = 0x1,ATT400C2 = 0x2,ATT400C3 = 0x3,ATT400MED = 0x4,ATT400HI = 0x5,VGALO = 0x0,VGAMED = 0x1,VGAHI = 0x2,PC3270HI = 0x0,IBM8514LO = 0x0,IBM8514HI = 0x1,};
typedef struct __jmp_buf jmp_buf[1];
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;};
typedef struct $B8243ED19B76CA5D55F9F69ED1E7C09F ldiv_t;
enum line_styles {SOLID_LINE = 0x0,DOTTED_LINE = 0x1,CENTER_LINE = 0x2,DASHED_LINE = 0x3,USERBIT_LINE = 0x4,};
enum line_widths {NORM_WIDTH = 0x1,THICK_WIDTH = 0x3,};
struct linesettingstype {int linestyle;unsigned int upattern;int thickness;};
struct palettetype {unsigned __int8 size;signed __int8 colors[16];};
struct pointtype {int x;int y;};
typedef int ptrdiff_t;
enum putimage_ops {COPY_PUT = 0x0,XOR_PUT = 0x1,OR_PUT = 0x2,AND_PUT = 0x3,NOT_PUT = 0x4,};
typedef int sig_atomic_t;
typedef unsigned int size_t;
struct stat {int st_dev;int st_ino;int st_mode;int st_nlink;int st_uid;int st_gid;int st_rdev;__int32 st_size;__int32 st_atime;__int32 st_mtime;__int32 st_ctime;};
struct text_info {unsigned __int8 winleft;unsigned __int8 wintop;unsigned __int8 winright;unsigned __int8 winbottom;unsigned __int8 attribute;unsigned __int8 normattr;unsigned __int8 currmode;unsigned __int8 screenheight;unsigned __int8 screenwidth;unsigned __int8 curx;unsigned __int8 cury;};
enum text_just {LEFT_TEXT = 0x0,CENTER_TEXT = 0x1,RIGHT_TEXT = 0x2,BOTTOM_TEXT = 0x0,TOP_TEXT = 0x2,};
enum text_modes {LASTMODE = 0xFFFF,BW40 = 0x0,C40 = 0x1,BW80 = 0x2,C80 = 0x3,MONO = 0x7,C4350 = 0x40,};
struct textsettingstype {int font;int direction;int charsize;int horiz;int vert;};
struct time {unsigned __int8 ti_min;unsigned __int8 ti_hour;unsigned __int8 ti_hund;unsigned __int8 ti_sec;};
typedef __int32 time_t;
struct timeb {__int32 time;int millitm;int timezone;int dstflag;};
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;};
struct utimbuf {time_t actime;time_t modtime;};
typedef void *va_list;
struct viewporttype {int left;int top;int right;int bottom;int clip;};
typedef char wchar_t;
struct xfcb {char xfcb_flag;char xfcb_resv[5];char xfcb_attr;struct fcb xfcb_fcb;};

putimage_ops AND_PUT;
graphics_drivers ATT400;
graphics_modes ATT400C0;
graphics_modes ATT400C1;
graphics_modes ATT400C2;
graphics_modes ATT400C3;
graphics_modes ATT400HI;
graphics_modes ATT400MED;
MACRO_BITSPERBYTE BITSPERBYTE;
fill_patterns BKSLASH_FILL;
COLORS BLACK;
MACRO__NOCURSOR BLINK;
COLORS BLUE;
font_names BOLD_FONT;
text_just BOTTOM_TEXT;
COLORS BROWN;
MACRO_BUFSIZ BUFSIZ;
text_modes BW40;
text_modes BW80;
text_modes C40;
text_modes C4350;
text_modes C80;
MACRO_CCERR CCERR_CHOOSECOLORCODES;
MACRO_CDERR CDERR_DIALOGFAILURE;
MACRO_CDERR CDERR_FINDRESFAILURE;
MACRO_CDERR CDERR_GENERALCODES;
MACRO_CDERR CDERR_INITIALIZATION;
MACRO_CDERR CDERR_LOADRESFAILURE;
MACRO_CDERR CDERR_LOADSTRFAILURE;
MACRO_CDERR CDERR_LOCKRESFAILURE;
MACRO_CDERR CDERR_MEMALLOCFAILURE;
MACRO_CDERR CDERR_MEMLOCKFAILURE;
MACRO_CDERR CDERR_NOHINSTANCE;
MACRO_CDERR CDERR_NOHOOK;
MACRO_CDERR CDERR_NOTEMPLATE;
MACRO_CDERR CDERR_REGISTERMSGFAIL;
MACRO_CDERR CDERR_STRUCTSIZE;
line_styles CENTER_LINE;
text_just CENTER_TEXT;
MACRO_CFERR CFERR_CHOOSEFONTCODES;
MACRO_CFERR CFERR_MAXLESSTHANMIN;
MACRO_CFERR CFERR_NOFONTS;
graphics_drivers CGA;
graphics_modes CGAC0;
graphics_modes CGAC1;
graphics_modes CGAC2;
graphics_modes CGAC3;
graphics_modes CGAHI;
CGA_COLORS CGA_BROWN;
CGA_COLORS CGA_CYAN;
CGA_COLORS CGA_GREEN;
CGA_COLORS CGA_LIGHTCYAN;
CGA_COLORS CGA_LIGHTGRAY;
CGA_COLORS CGA_LIGHTGREEN;
CGA_COLORS CGA_LIGHTMAGENTA;
CGA_COLORS CGA_LIGHTRED;
CGA_COLORS CGA_MAGENTA;
CGA_COLORS CGA_RED;
CGA_COLORS CGA_WHITE;
CGA_COLORS CGA_YELLOW;
MACRO_CHAR CHAR_BIT;
MACRO_CHAR CHAR_MAX;
MACRO_CHAR CHAR_MIN;
fill_patterns CLOSE_DOT_FILL;
MACRO_COLOR COLOR_ADD;
MACRO_COLOR COLOR_BLUE;
MACRO_COLOR COLOR_BLUEACCEL;
MACRO_COLOR COLOR_BOX1;
MACRO_COLOR COLOR_CURRENT;
MACRO_COLOR COLOR_CUSTOM1;
MACRO_COLOR COLOR_ELEMENT;
MACRO_COLOR COLOR_GREEN;
MACRO_COLOR COLOR_GREENACCEL;
MACRO_COLOR COLOR_HUE;
MACRO_COLOR COLOR_HUEACCEL;
MACRO_COLOR COLOR_HUESCROLL;
MACRO_COLOR COLOR_LUM;
MACRO_COLOR COLOR_LUMACCEL;
MACRO_COLOR COLOR_LUMSCROLL;
MACRO_COLOR COLOR_MIX;
MACRO_COLOR COLOR_PALETTE;
MACRO_COLOR COLOR_RAINBOW;
MACRO_COLOR COLOR_RED;
MACRO_COLOR COLOR_REDACCEL;
MACRO_COLOR COLOR_SAMPLES;
MACRO_COLOR COLOR_SAT;
MACRO_COLOR COLOR_SATACCEL;
MACRO_COLOR COLOR_SATSCROLL;
MACRO_COLOR COLOR_SAVE;
MACRO_COLOR COLOR_SCHEMES;
MACRO_COLOR COLOR_SOLID;
MACRO_COLOR COLOR_TUNE;
font_names COMPLEX_FONT;
putimage_ops COPY_PUT;
graphics_drivers CURRENT_DRIVER;
COLORS CYAN;
COLORS DARKGRAY;
line_styles DASHED_LINE;
MACRO_DIG DBL_DIG;
MACRO_DIG DBL_MANT_DIG;
MACRO_EXP DBL_MAX_10_EXP;
MACRO_EXP DBL_MAX_EXP;
MACRO_EXP DBL_MIN_10_EXP;
MACRO_EXP DBL_MIN_EXP;
font_names DEFAULT_FONT;
graphics_drivers DETECT;
MACRO_WILDCARDS DIRECTORY;
MACRO_DLG DLG_COLOR;
MACRO_DMAXEXP DMAXEXP;
MACRO_DMAXPOWTWO DMAXPOWTWO;
MACRO_DMINEXP DMINEXP;
$C967B4BD5950CD7FE5A55F6326D513E0 DOMAIN;
MACRO_MODE DOS_MODE;
line_styles DOTTED_LINE;
MACRO_WILDCARDS DRIVE;
MACRO_DSIGNIF DSIGNIF;
MACRO_ERRNO E2BIG;
MACRO_ERRNO EACCES;
MACRO_ERRNO EAGAIN;
MACRO_ERRNO EBADF;
MACRO_ERRNO EBUSY;
MACRO_ERRNO ECHILD;
MACRO_ERRNO ECONTR;
MACRO_ERRNO ECURDIR;
MACRO_ERRNO EDEADLOCK;
MACRO_ERRNO EDOM;
MACRO_ERRNO EEXIST;
MACRO_ERRNO EFAULT;
MACRO_ERRNO EFBIG;
graphics_drivers EGA;
graphics_drivers EGA64;
graphics_modes EGA64HI;
graphics_modes EGA64LO;
graphics_modes EGAHI;
graphics_modes EGALO;
graphics_drivers EGAMONO;
graphics_modes EGAMONOHI;
EGA_COLORS EGA_BLACK;
EGA_COLORS EGA_BLUE;
EGA_COLORS EGA_BROWN;
EGA_COLORS EGA_CYAN;
EGA_COLORS EGA_DARKGRAY;
EGA_COLORS EGA_GREEN;
EGA_COLORS EGA_LIGHTBLUE;
EGA_COLORS EGA_LIGHTCYAN;
EGA_COLORS EGA_LIGHTGRAY;
EGA_COLORS EGA_LIGHTGREEN;
EGA_COLORS EGA_LIGHTMAGENTA;
EGA_COLORS EGA_LIGHTRED;
EGA_COLORS EGA_MAGENTA;
EGA_COLORS EGA_RED;
EGA_COLORS EGA_WHITE;
EGA_COLORS EGA_YELLOW;
MACRO_ERRNO EINTR;
MACRO_ERRNO EINVACC;
MACRO_ERRNO EINVAL;
MACRO_ERRNO EINVDAT;
MACRO_ERRNO EINVDRV;
MACRO_ERRNO EINVENV;
MACRO_ERRNO EINVFMT;
MACRO_ERRNO EINVFNC;
MACRO_ERRNO EINVMEM;
MACRO_ERRNO EIO;
MACRO_ERRNO EISDIR;
MACRO_ERRNO EMFILE;
MACRO_ERRNO EMLINK;
fill_patterns EMPTY_FILL;
MACRO_EM EM_DENORMAL;
MACRO_EM EM_INEXACT;
MACRO_EM EM_INVALID;
MACRO_EM EM_OVERFLOW;
MACRO_EM EM_UNDERFLOW;
MACRO_EM EM_ZERODIVIDE;
MACRO_ERRNO ENFILE;
MACRO_ERRNO ENMFILE;
MACRO_ERRNO ENODEV;
MACRO_ERRNO ENOENT;
MACRO_ERRNO ENOEXEC;
MACRO_ERRNO ENOFILE;
MACRO_ERRNO ENOMEM;
MACRO_ERRNO ENOPATH;
MACRO_ERRNO ENOSPC;
MACRO_ERRNO ENOTBLK;
MACRO_ERRNO ENOTDIR;
MACRO_ERRNO ENOTSAM;
MACRO_ERRNO ENOTTY;
MACRO_ERRNO ENXIO;
MACRO_EOF EOF;
MACRO_ERRNO EPERM;
MACRO_ERRNO EPIPE;
MACRO_ERRNO ERANGE;
MACRO_ERRNO EROFS;
MACRO_ERRNO ESPIPE;
MACRO_ERRNO ESRCH;
MACRO_ERRNO ETXTBSY;
MACRO_ERRNO EUCLEAN;
font_names EUROPEAN_FONT;
MACRO_ERRNO EXDEV;
MACRO_EXIT EXIT_FAILURE;
MACRO_EXIT EXIT_SUCCESS;
MACRO_WILDCARDS EXTENSION;
MACRO_ERRNO EZERO;
MACRO_FA FA_ARCH;
MACRO_FA FA_DIREC;
MACRO_FA FA_HIDDEN;
MACRO_FA FA_LABEL;
MACRO_FA FA_NORMAL;
MACRO_FA FA_RDONLY;
MACRO_FA FA_SYSTEM;
MACRO_WILDCARDS FILENAME;
MACRO_FILENAME FILENAME_MAX;
MACRO_FILEOPENORD FILEOPENORD;
MACRO_FINDDLGORD FINDDLGORD;
MACRO_DIG FLT_DIG;
MACRO_FLT FLT_GUARD;
MACRO_DIG FLT_MANT_DIG;
MACRO_EXP FLT_MAX_10_EXP;
MACRO_EXP FLT_MAX_EXP;
MACRO_EXP FLT_MIN_10_EXP;
MACRO_EXP FLT_MIN_EXP;
MACRO_FLT FLT_NORMALIZE;
MACRO_FLT FLT_RADIX;
MACRO_FLT FLT_ROUNDS;
MACRO_FMAXEXP FMAXEXP;
MACRO_FMAXPOWTWO FMAXPOWTWO;
MACRO_FMINEXP FMINEXP;
MACRO_FNERR FNERR_BUFFERTOOSMALL;
MACRO_FNERR FNERR_FILENAMECODES;
MACRO_FNERR FNERR_INVALIDFILENAME;
MACRO_FNERR FNERR_SUBCLASSFAILURE;
MACRO_FONTDLGORD FONTDLGORD;
MACRO_FOPEN FOPEN_MAX;
MACRO_FORMATDLGORD30 FORMATDLGORD30;
MACRO_FORMATDLGORD31 FORMATDLGORD31;
MACRO_FPE FPE_EXPLICITGEN;
MACRO_FPE FPE_INEXACT;
MACRO_FPE FPE_INTDIV0;
MACRO_FPE FPE_INTOVFLOW;
MACRO_FPE FPE_INVALID;
MACRO_FPE FPE_OVERFLOW;
MACRO_FPE FPE_STACKFAULT;
MACRO_FPE FPE_UNDERFLOW;
MACRO_FPE FPE_ZERODIVIDE;
MACRO_FRERR FRERR_BUFFERLENGTHZERO;
MACRO_FRERR FRERR_FINDREPLACECODES;
MACRO_FSIGNIF FSIGNIF;
font_names GOTHIC_FONT;
COLORS GREEN;
MACRO_HANDLE HANDLE_MAX;
fill_patterns HATCH_FILL;
graphics_drivers HERCMONO;
graphics_modes HERCMONOHI;
MACRO_HIBITI HIBITI;
MACRO_HIBITI HIBITL;
MACRO_HIBITS HIBITS;
MACRO_HIDDENBIT HIDDENBIT;
MACRO_DIR HORIZ_DIR;
graphics_drivers IBM8514;
graphics_modes IBM8514HI;
graphics_modes IBM8514LO;
MACRO_IC IC_AFFINE;
MACRO_IC IC_PROJECTIVE;
MACRO_ILL ILL_EXECUTION;
MACRO_ILL ILL_EXPLICITGEN;
fill_patterns INTERLEAVE_FILL;
MACRO_USHRT INT_MAX;
MACRO_INT INT_MIN;
text_modes LASTMODE;
MACRO_LC LC_ALL;
MACRO_LC LC_COLLATE;
MACRO_LC LC_CTYPE;
MACRO_LC LC_MONETARY;
MACRO_LC LC_NUMERIC;
MACRO_LC LC_TIME;
MACRO_DIG LDBL_DIG;
MACRO_DIG LDBL_MANT_DIG;
MACRO_EXP LDBL_MAX_10_EXP;
MACRO_EXP LDBL_MAX_EXP;
MACRO_EXP LDBL_MIN_10_EXP;
MACRO_EXP LDBL_MIN_EXP;
text_just LEFT_TEXT;
COLORS LIGHTBLUE;
COLORS LIGHTCYAN;
COLORS LIGHTGRAY;
COLORS LIGHTGREEN;
COLORS LIGHTMAGENTA;
COLORS LIGHTRED;
fill_patterns LINE_FILL;
MACRO_LK LK_LOCK;
MACRO_LK LK_NBLCK;
MACRO_LK LK_NBRLCK;
MACRO_LK LK_RLCK;
MACRO_LK LK_UNLCK;
MACRO_UINT LONG_MAX;
MACRO_LONG LONG_MIN;
fill_patterns LTBKSLASH_FILL;
fill_patterns LTSLASH_FILL;
MACRO_L L_ctermid;
MACRO_L L_tmpnam;
COLORS MAGENTA;
MACRO_MAXCOLORS MAXCOLORS;
MACRO_MAXDIR MAXDIR;
MACRO_MAXDRIVE MAXDRIVE;
MACRO_MAXEXT MAXEXT;
MACRO_MAXFILE MAXFILE;
MACRO_MAXINT MAXINT;
MACRO_MAXLONG MAXLONG;
MACRO_MAXPATH MAXPATH;
MACRO_MAXSHORT MAXSHORT;
MACRO_MB MB_CUR_MAX;
MACRO_ULONG MB_LEN_MAX;
graphics_drivers MCGA;
graphics_modes MCGAC0;
graphics_modes MCGAC1;
graphics_modes MCGAC2;
graphics_modes MCGAC3;
graphics_modes MCGAHI;
graphics_modes MCGAMED;
MACRO_MCW MCW_EM;
MACRO_MCW_IC MCW_IC;
MACRO_MCW_PC MCW_PC;
MACRO_MCW_RC MCW_RC;
text_modes MONO;
MACRO_MULTIFILEOPENORD MULTIFILEOPENORD;
MACRO_NFDS NFDS;
line_widths NORM_WIDTH;
putimage_ops NOT_PUT;
MACRO_NULL NULL;
MACRO_NUM NUM_BASIC_COLORS;
MACRO_NUM NUM_CUSTOM_COLORS;
putimage_ops OR_PUT;
MACRO_MODE OS2_MODE;
$C967B4BD5950CD7FE5A55F6326D513E0 OVERFLOW;
MACRO_O_APPEND O_APPEND;
MACRO_O_APPEND O_BINARY;
MACRO_O_APPEND O_CHANGED;
MACRO_O O_CREAT;
MACRO_O_APPEND O_DENYALL;
MACRO_O_APPEND O_DENYNONE;
MACRO_O_APPEND O_DENYREAD;
MACRO_O_APPEND O_DENYWRITE;
MACRO_O_APPEND O_DEVICE;
MACRO_O O_EXCL;
MACRO_O_APPEND O_NOINHERIT;
MACRO_O O_RDONLY;
MACRO_O O_RDWR;
MACRO_O_APPEND O_TEXT;
MACRO_O O_TRUNC;
MACRO_O O_WRONLY;
graphics_drivers PC3270;
graphics_modes PC3270HI;
MACRO_PC PC_24;
MACRO_PC PC_53;
MACRO_PC PC_64;
MACRO_PDERR PDERR_CREATEICFAILURE;
MACRO_PDERR PDERR_DEFAULTDIFFERENT;
MACRO_PDERR PDERR_DNDMMISMATCH;
MACRO_PDERR PDERR_GETDEVMODEFAIL;
MACRO_PDERR PDERR_INITFAILURE;
MACRO_PDERR PDERR_LOADDRVFAILURE;
MACRO_PDERR PDERR_NODEFAULTPRN;
MACRO_PDERR PDERR_NODEVICES;
MACRO_PDERR PDERR_PARSEFAILURE;
MACRO_PDERR PDERR_PRINTERCODES;
MACRO_PDERR PDERR_PRINTERNOTFOUND;
MACRO_PDERR PDERR_RETDEFFAILURE;
MACRO_PDERR PDERR_SETUPFAILURE;
$C967B4BD5950CD7FE5A55F6326D513E0 PLOSS;
MACRO_PRINTDLGORD PRINTDLGORD;
MACRO_PRNSETUPDLGORD PRNSETUPDLGORD;
MACRO_P P_DETACH;
MACRO_P P_NOWAIT;
MACRO_P P_NOWAITO;
MACRO_P P_OVERLAY;
MACRO_P P_WAIT;
MACRO_TMP RAND_MAX;
MACRO_RC RC_CHOP;
MACRO_RC RC_DOWN;
MACRO_RC RC_NEAR;
MACRO_RC RC_UP;
COLORS RED;
MACRO_REPLACEDLGORD REPLACEDLGORD;
text_just RIGHT_TEXT;
font_names SANS_SERIF_FONT;
MACRO_SCHAR SCHAR_MAX;
MACRO_SCHAR SCHAR_MIN;
font_names SCRIPT_FONT;
MACRO_SEEK SEEK_CUR;
MACRO_SEEK SEEK_END;
MACRO_SEEK SEEK_SET;
MACRO_SEGV SEGV_BOUND;
MACRO_SEGV SEGV_EXPLICITGEN;
MACRO_MAX SHRT_MAX;
MACRO_SHRT SHRT_MIN;
MACRO_SH SH_COMPAT;
MACRO_SH SH_DENYNO;
MACRO_SH SH_DENYNONE;
MACRO_SH SH_DENYRD;
MACRO_SH SH_DENYRW;
MACRO_SH SH_DENYWR;
MACRO_SIGNAL SIGABRT;
MACRO_SIGNAL SIGFPE;
MACRO_SIGNAL SIGILL;
MACRO_SIGNAL SIGINT;
MACRO_SIGNAL SIGSEGV;
MACRO_SIGNAL SIGTERM;
MACRO_SIG SIG_DFL;
MACRO_SIG SIG_ERR;
MACRO_SIG SIG_IGN;
font_names SIMPLEX_FONT;
$C967B4BD5950CD7FE5A55F6326D513E0 SING;
fill_patterns SLASH_FILL;
font_names SMALL_FONT;
fill_patterns SOLID_FILL;
line_styles SOLID_LINE;
$C967B4BD5950CD7FE5A55F6326D513E0 STACKFAULT;
MACRO_SW SW_DENORMAL;
MACRO_SW SW_INEXACT;
MACRO_SW SW_INVALID;
MACRO_SW SW_OVERFLOW;
MACRO_SW SW_UNDERFLOW;
MACRO_SW SW_ZERODIVIDE;
MACRO_SYS SYS_OPEN;
MACRO_S S_IEXEC;
MACRO_S S_IFBLK;
MACRO_S S_IFCHR;
MACRO_S S_IFDIR;
MACRO_S S_IFIFO;
MACRO_S S_IFMT;
MACRO_S S_IFREG;
MACRO_S S_IREAD;
MACRO_S S_IWRITE;
line_widths THICK_WIDTH;
$C967B4BD5950CD7FE5A55F6326D513E0 TLOSS;
MACRO_TMP TMP_MAX;
text_just TOP_TEXT;
font_names TRIPLEX_FONT;
font_names TRIPLEX_SCR_FONT;
MACRO_MAX UCHAR_MAX;
MACRO_UINT UINT_MAX;
MACRO_ULONG ULONG_MAX;
$C967B4BD5950CD7FE5A55F6326D513E0 UNDERFLOW;
line_styles USERBIT_LINE;
MACRO_USER USER_CHAR_SIZE;
fill_patterns USER_FILL;
MACRO_USHRT USHRT_MAX;
MACRO_DIR VERT_DIR;
graphics_drivers VGA;
graphics_modes VGAHI;
graphics_modes VGALO;
graphics_modes VGAMED;
MACRO_WAIT WAIT_CHILD;
MACRO_WAIT WAIT_GRANDCHILD;
COLORS WHITE;
fill_patterns WIDE_DOT_FILL;
MACRO_WILDCARDS WILDCARDS;
fill_patterns XHATCH_FILL;
putimage_ops XOR_PUT;
COLORS YELLOW;
void __cdecl ATT_driver();
int ATT_driver_far[];
MACRO__A _A_ARCH;
MACRO__A _A_HIDDEN;
MACRO__A A_NORMAL;
MACRO__A _A_RDONLY;
MACRO__A _A_SUBDIR;
MACRO__A _A_SYSTEM;
MACRO__A _A_VOLID;
MACRO__BADNODE _BADNODE;
MACRO__BADVALUE _BADVALUE;
void __cdecl CGA_driver();
int CGA_driver_far[];
MACRO__COM COM_110;
MACRO__COM _COM_1200;
MACRO__COM _COM_150;
MACRO__COM _COM_2400;
MACRO__COM _COM_300;
MACRO__COM _COM_4800;
MACRO__COM _COM_600;
MACRO__COM _COM_9600;
MACRO__COM _COM_CHR7;
MACRO__COM _COM_CHR8;
MACRO__COM _COM_EVENPARITY;
MACRO__COM COM_INIT;
MACRO__COM COM_NOPARITY;
MACRO__COM _COM_ODDPARITY;
MACRO__COM _COM_RECEIVE;
MACRO__COM _COM_SEND;
MACRO__COM _COM_STATUS;
MACRO__COM COM_STOP1;
MACRO__COM _COM_STOP2;
MACRO__DEXPLEN _DEXPLEN;
MACRO__DISK _DISK_FORMAT;
MACRO__DISK _DISK_READ;
MACRO__DISK DISK_RESET;
MACRO__DISK _DISK_STATUS;
MACRO__DISK _DISK_VERIFY;
MACRO__DISK _DISK_WRITE;
void __cdecl EGAVGA_driver();
int EGAVGA_driver_far[];
MACRO__EXPBASE _EXPBASE;
MACRO__FEXPLEN _FEXPLEN;
MACRO__FREEENTRY _FREEENTRY;
MACRO__F _F_BIN;
MACRO__F _F_BUF;
MACRO__F _F_EOF;
MACRO__F _F_ERR;
MACRO__F _F_IN;
MACRO__F _F_LBUF;
MACRO__F _F_OUT;
MACRO__F _F_RDWR;
MACRO__F _F_READ;
MACRO__F _F_TERM;
MACRO__F _F_WRIT;
MACRO__HARDERR _HARDERR_ABORT;
MACRO__HARDERR _HARDERR_FAIL;
MACRO__HARDERR HARDERR_IGNORE;
MACRO__HARDERR _HARDERR_RETRY;
MACRO__HEAPCORRUPT _HEAPCORRUPT;
MACRO__HEAPEMPTY _HEAPEMPTY;
MACRO__HEAPEND _HEAPEND;
MACRO__HEAPEMPTY _HEAPOK;
void __cdecl Herc_driver();
int Herc_driver_far[];
void __cdecl IBM8514_driver();
int IBM8514_driver_far[];
MACRO__IEEE _IEEE;
MACRO__IOFBF IOFBF;
MACRO__IOFBF _IOLBF;
MACRO__IOFBF _IONBF;
MACRO__IS _IS_CTL;
MACRO__IS _IS_DIG;
MACRO__IS _IS_HEX;
MACRO__IS _IS_LOW;
MACRO__IS _IS_PUN;
MACRO__IS _IS_SP;
MACRO__IS _IS_UPP;
MACRO_READ KEYBRD_READ;
MACRO_READY _KEYBRD_READY;
MACRO_SHIFTSTATUS _KEYBRD_SHIFTSTATUS;
MACRO__LENBASE _LENBASE;
MACRO__MAX _MAX_DIR;
MACRO__MAX _MAX_DRIVE;
MACRO__MAX _MAX_EXT;
MACRO__MAX _MAX_FNAME;
MACRO__MAX _MAX_PATH;
MACRO__NFILE _NFILE_;
MACRO_READ _NKEYBRD_READ;
MACRO_READY _NKEYBRD_READY;
MACRO_SHIFTSTATUS _NKEYBRD_SHIFTSTATUS;
MACRO__NOCURSOR NOCURSOR;
MACRO__NOCURSOR _NORMALCURSOR;
MACRO__O _O_EOF;
MACRO__O _O_RUNFLAGS;
MACRO__O _O_WRITABLE;
void __cdecl PC3270_driver();
int PC3270_driver_far[];
MACRO__PRINTER _PRINTER_INIT;
MACRO__PRINTER _PRINTER_STATUS;
MACRO__PRINTER PRINTER_WRITE;
MACRO__NOCURSOR _SOLIDCURSOR;
MACRO__TIME TIME_GETCLOCK;
MACRO__TIME _TIME_SETCLOCK;
MACRO__FREEENTRY _USEDENTRY;
const int _8087;
void __cdecl _InitEasyWin();
int __cdecl __far _OvrInitEms(unsigned int emsHandle, unsigned int emsFirst, unsigned int emsPages);
int __cdecl __far _OvrInitExt(unsigned __int32 extStart, unsigned __int32 extLength);
int __cdecl __abs__(int);
void *__cdecl __alloca__(size_t size);
void __cdecl __assertfail(char *msg, char *cond, char *file, int line);
void __cdecl __cli__();
void __emit__(unsigned __int8 byte, ...);
double __cdecl __fabs__(double x);
unsigned __int8 __cdecl __inportb__(unsigned int portid);
unsigned int __cdecl __inportw__(unsigned int portid);
void __cdecl __int__(int interruptnum);
void *__cdecl __memchr__(const void *s, int c, size_t n);
int __cdecl __memcmp__(const void *s1, const void *s2, size_t n);
void *__cdecl __memcpy__(void *dest, const void *src, size_t n);
void *__cdecl __memset__(void *s, int c, size_t n);
unsigned __int8 __cdecl __outportb__(unsigned int portid, unsigned __int8 value);
unsigned int __cdecl __outportw__(unsigned int portid, unsigned int value);
unsigned int __cdecl __rotl__(unsigned int value, int count);
unsigned int __cdecl __rotr__(unsigned int value, int count);
void __cdecl __sti__();
char *__cdecl __stpcpy__(char *dest, const char *src);
char *__cdecl __strcat__(char *dest, const char *src);
char *__cdecl __strchr__(const char *s, int c);
int __cdecl __strcmp__(const char *s1, const char *s2);
char *__cdecl __strcpy__(char *dest, const char *src);
size_t __cdecl __strlen__(const char *s);
char *__cdecl __strncat__(char *dest, const char *src, size_t maxlen);
int __cdecl __strncmp__(const char *s1, const char *s2, size_t maxlen);
char *__cdecl __strncpy__(char *dest, const char *src, size_t maxlen);
char *__cdecl __strnset__(char *s, int ch, size_t n);
char *__cdecl __strrchr__(const char *s, int c);
char *__cdecl __strset__(char *s, int ch);
int _argc;
char **_argv;
long double __cdecl _atold(const char *s);
unsigned int __cdecl _bios_disk(unsigned int cmd, struct diskinfo_t *dinfo);
unsigned int __cdecl _bios_equiplist();
unsigned int __cdecl _bios_keybrd(unsigned int cmd);
unsigned int __cdecl _bios_memsize();
unsigned int __cdecl _bios_printer(unsigned int cmd, unsigned int port, unsigned int abyte);
unsigned int __cdecl _bios_serialcom(unsigned int cmd, unsigned int port, unsigned int abyte);
unsigned int __cdecl _bios_timeofday(unsigned int cmd, __int32 *timeval);
void __cdecl _c_exit();
void __cdecl _cexit();
void __cdecl _chain_intr(void (__interrupt far *target)());
int __cdecl _chdrive(int drive);
int _chmod(const char *pathname, int func, ...);
unsigned int __cdecl _clear87();
int __cdecl _close(int handle);
unsigned int __cdecl _control87(unsigned int newcw, unsigned int mask);
int __cdecl _creat(const char *path, int attribute);
char _ctype[];
unsigned int _default87;
unsigned int __cdecl _dos_allocmem(unsigned int size, unsigned int *segp);
unsigned int __cdecl _dos_close(int fd);
unsigned int __cdecl _dos_commit(int fd);
unsigned int __cdecl _dos_creat(const char *pathP, unsigned int attr, int *fd);
unsigned int __cdecl _dos_creatnew(const char *pathP, unsigned int attr, int *fd);
unsigned int __cdecl _dos_findfirst(const char *path, unsigned int attrib, struct find_t *finfo);
unsigned int __cdecl _dos_findnext(struct find_t *finfo);
unsigned int __cdecl _dos_freemem(unsigned int segx);
void __cdecl _dos_getdate(struct dosdate_t *datep);
unsigned int __cdecl _dos_getdiskfree(unsigned int drive, struct diskfree_t *dtable);
void __cdecl _dos_getdrive(unsigned int *drive);
unsigned int __cdecl _dos_getfileattr(const char *filename, unsigned int *attrib);
unsigned int __cdecl _dos_getftime(int fd, unsigned int *date, unsigned int *time);
void __cdecl _dos_gettime(struct dostime_t *timep);
void (__cdecl __interrupt far *__cdecl _dos_getvect(unsigned int interruptno))();
void __cdecl _dos_keep(unsigned __int8 status, unsigned int size);
unsigned int __cdecl _dos_open(const char *pathP, unsigned int oflag, int *fd);
unsigned int __cdecl _dos_read(int fd, void far *buf, unsigned int len, unsigned int *nread);
unsigned int __cdecl _dos_setblock(unsigned int size, unsigned int segx, unsigned int *maxp);
unsigned int __cdecl _dos_setdate(struct dosdate_t *datep);
void __cdecl _dos_setdrive(unsigned int drive, unsigned int *ndrives);
unsigned int __cdecl _dos_setfileattr(const char *filename, unsigned int attrib);
unsigned int __cdecl _dos_setftime(int fd, unsigned int date, unsigned int time);
unsigned int __cdecl _dos_settime(struct dostime_t *timep);
void __cdecl _dos_setvect(unsigned int interruptno, void (__interrupt far *isr)());
unsigned int __cdecl _dos_write(int fd, const void far *buf, unsigned int len, unsigned int *nread);
int _doserrno;
void __cdecl _exit(int status);
int __cdecl _fgetc(FILE *stream);
void far *__cdecl __far _fmemccpy(void far *dest, const void far *src, int c, size_t n);
void far *__cdecl __far _fmemchr(const void far *s, int c, size_t n);
int __cdecl __far _fmemcmp(const void far *s1, const void far *s2, size_t n);
void far *__cdecl __far _fmemcpy(void far *dest, const void far *src, size_t n);
int __cdecl __far _fmemicmp(const void far *s1, const void far *s2, size_t n);
void far *__cdecl __far _fmemmove(void far *dest, const void far *src, size_t n);
void far *__cdecl __far _fmemset(void far *s, int c, size_t n);
int _fmode;
void __cdecl __far _fmovmem(const void far *src, void far *dest, unsigned int length);
int __cdecl _fnsplit(const char *path, char *drive, char *dir, char *name, char *ext);
void __cdecl _fpreset();
unsigned int _fpstklen;
int __cdecl _fputc(char c, FILE *stream);
void __cdecl __far _fsetmem(void far *dest, unsigned int length, char value);
FILE *__cdecl _fsopen(const char *path, const char *mode, int shflag);
char far *__cdecl __far _fstrcat(char far *dest, const char far *src);
char far *__cdecl __far _fstrchr(const char far *s, int c);
int __cdecl __far _fstrcmp(const char far *s1, const char far *s2);
char far *__cdecl __far _fstrcpy(char far *dest, const char far *src);
size_t __cdecl __far _fstrcspn(const char far *s1, const char far *s2);
char far *__cdecl __far _fstrdup(const char far *s);
int __cdecl __far _fstricmp(const char far *s1, const char far *s2);
size_t __cdecl __far _fstrlen(const char far *s);
char far *__cdecl __far _fstrlwr(char far *s);
char far *__cdecl __far _fstrncat(char far *dest, const char far *src, size_t maxlen);
int __cdecl __far _fstrncmp(const char far *s1, const char far *s2, size_t maxlen);
char far *__cdecl __far _fstrncpy(char far *dest, const char far *src, size_t maxlen);
int __cdecl __far _fstrnicmp(const char far *s1, const char far *s2, size_t maxlen);
char far *__cdecl __far _fstrnset(char far *s, int ch, size_t n);
char far *__cdecl __far _fstrpbrk(const char far *s1, const char far *s2);
char far *__cdecl __far _fstrrchr(const char far *s, int c);
char far *__cdecl __far _fstrrev(char far *s);
char far *__cdecl __far _fstrset(char far *s, int ch);
size_t __cdecl __far _fstrspn(const char far *s1, const char far *s2);
char far *__cdecl __far _fstrstr(const char far *s1, const char far *s2);
char far *__cdecl __far _fstrtok(char far *s1, const char far *s2);
char far *__cdecl __far _fstrupr(char far *s);
int __cdecl _ftolower(int ch);
int __cdecl _ftoupper(int ch);
char *__cdecl _fullpath(char *buf, const char *path, size_t maxlen);
char *__cdecl _getdcwd(int drive, char *buf, int len);
int __cdecl _getdrive();
void __cdecl __far _graphfreemem(void far *ptr, unsigned int size);
void far *__cdecl __far _graphgetmem(unsigned int size);
void __cdecl _harderr(void (__cdecl __far far *fptr)());
void __cdecl _hardresume(int axret);
void __cdecl _hardretn(int retn);
unsigned int _heaplen;
double _huge_dble;
float _huge_flt;
long double _huge_ldble;
unsigned __int32 __cdecl _lrotl(unsigned __int32 val, int count);
unsigned __int32 __cdecl _lrotr(unsigned __int32 val, int count);
void __cdecl _makepath(char *path, const char *drive, const char *dir, const char *name, const char *ext);
int __cdecl _matherrl(struct _exceptionl *e);
unsigned int _nfile;
int __cdecl _open(const char *path, int oflags);
unsigned __int8 _osmajor;
unsigned __int8 _osminor;
unsigned int _osversion;
unsigned int _ovrbuffer;
unsigned int _psp;
int __cdecl _read(int handle, void *buf, unsigned int len);
unsigned int __cdecl _rotl(unsigned int value, int count);
unsigned int __cdecl _rotr(unsigned int value, int count);
void __cdecl _searchenv(const char *file, const char *varname, char *pathname);
void __cdecl _searchstr(const char *file, const char *ipath, char *pathname);
void __cdecl _setcursortype(int cur_t);
void __cdecl _splitpath(const char *path, char *drive, char *dir, char *name, char *ext);
unsigned int __cdecl _status87();
unsigned int _stklen;
char *__cdecl _stpcpy(char *dest, const char *src);
char *__cdecl _strdate(char *datestr);
FILE _streams[];
char *__cdecl _strerror(const char *s);
char *__cdecl _strtime(char *timestr);
long double __cdecl _strtold(const char *s, char **endptr);
long double _tiny_ldble;
unsigned int _version;
int __cdecl _write(int handle, const void *buf, unsigned int len);
int _wscroll;
void __cdecl abort();
int __cdecl abs(int x);
int __cdecl absread(int drive, int nsects, __int32 lsect, void *buffer);
int __cdecl abswrite(int drive, int nsects, __int32 lsect, void *buffer);
int __cdecl access(const char *path, int amode);
double __cdecl acos(double x);
long double __cdecl acosl(long double x);
void *__cdecl alloca(size_t size);
int __cdecl allocmem(unsigned int size, unsigned int *segp);
void __cdecl __far arc(int x, int y, int stangle, int endangle, int radius);
char *__cdecl asctime(const struct tm *tblock);
double __cdecl asin(double x);
long double __cdecl asinl(long double x);
double __cdecl atan(double x);
double __cdecl atan2(double y, double x);
long double __cdecl atan2l(long double x, long double y);
long double __cdecl atanl(long double x);
int __cdecl atexit(void (__cdecl *func)());
double __cdecl atof(const char *s);
int __cdecl atoi(const char *s);
__int32 __cdecl atol(const char *s);
void __cdecl __far bar(int left, int top, int right, int bottom);
void __cdecl __far bar3d(int left, int top, int right, int bottom, int depth, int topflag);
int __cdecl bdos(int dosfun, unsigned int dosdx, unsigned int dosal);
int __cdecl bdosptr(int dosfun, void *argument, unsigned int dosal);
int __cdecl bioscom(int cmd, char abyte, int port);
int __cdecl biosdisk(int cmd, int drive, int head, int track, int sector, int nsects, void *buffer);
int __cdecl biosequip();
int __cdecl bioskey(int cmd);
int __cdecl biosmemory();
int __cdecl biosprint(int cmd, int abyte, int port);
__int32 __cdecl biostime(int cmd, __int32 newtime);
int __cdecl brk(void *addr);
void *__cdecl bsearch(const void *key, const void *base, size_t nelem, size_t width, int (__cdecl *fcmp)(const void *, const void *));
void *__cdecl calloc(size_t nitems, size_t size);
double __cdecl ceil(double x);
long double __cdecl ceill(long double x);
char *__cdecl cgets(char *str);
int __cdecl chdir(const char *path);
int __cdecl chmod(const char *path, int amode);
int __cdecl chsize(int handle, __int32 size);
void __cdecl __far circle(int x, int y, int radius);
void __cdecl __far cleardevice();
void __cdecl clearerr(FILE *stream);
void __cdecl __far clearviewport();
clock_t __cdecl clock();
int __cdecl close(int handle);
int __cdecl closedir(DIR *dir);
void __cdecl __far closegraph();
void __cdecl clreol();
void __cdecl clrscr();
unsigned int __cdecl coreleft();
double __cdecl cos(double x);
double __cdecl cosh(double x);
long double __cdecl coshl(long double x);
long double __cdecl cosl(long double x);
struct COUNTRY *__cdecl country(int xcode, struct COUNTRY *cp);
int cprintf(const char *format, ...);
int __cdecl cputs(const char *str);
int __cdecl creat(const char *path, int amode);
int __cdecl creatnew(const char *path, int mode);
int __cdecl creattemp(char *path, int amode);
int cscanf(const char *format, ...);
char *__cdecl ctime(const time_t *time);
void __cdecl ctrlbrk(int (__cdecl *handler)());
int daylight;
void __cdecl delay(unsigned int milliseconds);
void __cdecl delline();
void __cdecl __far detectgraph(int far *graphdriver, int far *graphmode);
double __cdecl difftime(time_t time2, time_t time1);
int directvideo;
void __cdecl disable();
div_t __cdecl div(int numer, int denom);
int __cdecl dosexterr(struct DOSERROR *eblkp);
__int32 __cdecl dostounix(struct date *d, struct time *t);
void __cdecl __far drawpoly(int numpoints, const int far *polypoints);
int __cdecl dup(int handle);
int __cdecl dup2(int oldhandle, int newhandle);
char *__cdecl ecvt(double value, int ndig, int *dec, int *sign);
void __cdecl __far ellipse(int x, int y, int stangle, int endangle, int xradius, int yradius);
void __cdecl enable();
char **environ;
int __cdecl eof(int handle);
int errno;
int execl(char *path, char *arg0, ...);
int execle(char *path, char *arg0, ...);
int execlp(char *path, char *arg0, ...);
int execlpe(char *path, char *arg0, ...);
int __cdecl execv(char *path, char *argv[]);
int __cdecl execve(char *path, char *argv[], char **env);
int __cdecl execvp(char *path, char *argv[]);
int __cdecl execvpe(char *path, char *argv[], char **env);
void __cdecl exit(int status);
double __cdecl exp(double x);
long double __cdecl expl(long double x);
double __cdecl fabs(double x);
long double __cdecl fabsl(long double x);
void far *__cdecl farcalloc(unsigned __int32 nunits, unsigned __int32 unitsz);
unsigned __int32 __cdecl farcoreleft();
void __cdecl farfree(void far *block);
int __cdecl farheapcheck();
int __cdecl farheapcheckfree(unsigned int fillvalue);
int __cdecl farheapchecknode(void far *node);
int __cdecl farheapfillfree(unsigned int fillvalue);
int __cdecl farheapwalk(struct farheapinfo *hi);
void far *__cdecl farmalloc(unsigned __int32 nbytes);
void far *__cdecl farrealloc(void far *oldblock, unsigned __int32 nbytes);
int __cdecl fclose(FILE *stream);
int __cdecl fcloseall();
char *__cdecl fcvt(double value, int ndig, int *dec, int *sign);
FILE *__cdecl fdopen(int handle, char *type);
int __cdecl feof(FILE *fp);
int __cdecl ferror(FILE *fp);
int __cdecl fflush(FILE *stream);
int __cdecl fgetc(FILE *stream);
int __cdecl fgetchar();
int __cdecl fgetpos(FILE *stream, fpos_t *pos);
char *__cdecl fgets(char *s, int n, FILE *stream);
__int32 __cdecl filelength(int handle);
void __cdecl __far fillellipse(int x, int y, int xradius, int yradius);
void __cdecl __far fillpoly(int numpoints, const int far *polypoints);
int __cdecl findfirst(const char *path, struct ffblk *ffblk, int attrib);
int __cdecl findnext(struct ffblk *ffblk);
void __cdecl __far floodfill(int x, int y, int border);
double __cdecl floor(double x);
long double __cdecl floorl(long double x);
int __cdecl flushall();
double __cdecl fmod(double x, double y);
long double __cdecl fmodl(long double x, long double y);
void __cdecl fnmerge(char *path, const char *drive, const char *dir, const char *name, const char *ext);
int __cdecl fnsplit(const char *path, char *drive, char *dir, char *name, char *ext);
FILE *__cdecl fopen(const char *path, const char *mode);
int fprintf(FILE *stream, const char *format, ...);
int __cdecl fputc(int c, FILE *stream);
int __cdecl fputchar(int c);
int __cdecl fputs(const char *s, FILE *stream);
size_t __cdecl fread(void *ptr, size_t size, size_t n, FILE *stream);
void __cdecl free(void *block);
int __cdecl freemem(unsigned int segx);
FILE *__cdecl freopen(const char *path, const char *mode, FILE *stream);
double __cdecl frexp(double x, int *exponent);
long double __cdecl frexpl(long double x, int *exponent);
int fscanf(FILE *stream, const char *format, ...);
int __cdecl fseek(FILE *stream, __int32 offset, int whence);
int __cdecl fsetpos(FILE *stream, const fpos_t *pos);
int __cdecl fstat(int handle, struct stat *statbuf);
__int32 __cdecl ftell(FILE *stream);
void __cdecl ftime(struct timeb *);
size_t __cdecl fwrite(const void *ptr, size_t size, size_t n, FILE *stream);
char *__cdecl gcvt(double value, int ndec, char *buf);
void __cdecl __far getarccoords(struct arccoordstype far *arccoords);
void __cdecl __far getaspectratio(int far *xasp, int far *yasp);
int __cdecl __far getbkcolor();
int __cdecl getc(FILE *fp);
int __cdecl getcbrk();
int __cdecl getch();
int __cdecl getchar();
int __cdecl getche();
int __cdecl __far getcolor();
int __cdecl getcurdir(int drive, char *directory);
char *__cdecl getcwd(char *buf, int buflen);
void __cdecl getdate(struct date *datep);
struct palettetype far *__cdecl __far getdefaultpalette();
void __cdecl getdfree(unsigned __int8 drive, struct dfree *dtable);
int __cdecl getdisk();
char *__cdecl __far getdrivername();
char far *__cdecl getdta();
char *__cdecl getenv(const char *name);
void __cdecl getfat(unsigned __int8 drive, struct fatinfo *dtable);
void __cdecl getfatd(struct fatinfo *dtable);
void __cdecl __far getfillpattern(char far *pattern);
void __cdecl __far getfillsettings(struct fillsettingstype far *fillinfo);
int __cdecl getftime(int handle, struct ftime *ftimep);
int __cdecl __far getgraphmode();
void __cdecl __far getimage(int left, int top, int right, int bottom, void far *bitmap);
void __cdecl __far getlinesettings(struct linesettingstype far *lineinfo);
int __cdecl __far getmaxcolor();
int __cdecl __far getmaxmode();
int __cdecl __far getmaxx();
int __cdecl __far getmaxy();
char *__cdecl __far getmodename(int mode_number);
void __cdecl __far getmoderange(int graphdriver, int far *lomode, int far *himode);
void __cdecl __far getpalette(struct palettetype far *palette);
int __cdecl __far getpalettesize();
char *__cdecl getpass(const char *prompt);
unsigned int __cdecl __far getpixel(int x, int y);
unsigned int __cdecl getpsp();
char *__cdecl gets(char *s);
int __cdecl getswitchar();
int __cdecl gettext(int left, int top, int right, int bottom, void *destin);
void __cdecl gettextinfo(struct text_info *r);
void __cdecl __far gettextsettings(struct textsettingstype far *texttypeinfo);
void __cdecl gettime(struct time *timep);
void (__cdecl __interrupt far *__cdecl getvect(int interruptno))();
int __cdecl getverify();
void __cdecl __far getviewsettings(struct viewporttype far *viewport);
int __cdecl getw(FILE *stream);
int __cdecl __far getx();
int __cdecl __far gety();
struct tm *__cdecl gmtime(const time_t *timer);
void __cdecl gothic_font();
int gothic_font_far[];
void __cdecl gotoxy(int x, int y);
void __cdecl __far graphdefaults();
char *__cdecl __far grapherrormsg(int errorcode);
int __cdecl __far graphresult();
void __cdecl harderr(int (__cdecl *handler)());
void __cdecl hardresume(int axret);
void __cdecl hardretn(int retn);
int __cdecl heapcheck();
int __cdecl heapcheckfree(unsigned int fillvalue);
int __cdecl heapchecknode(void *node);
int __cdecl heapfillfree(unsigned int fillvalue);
int __cdecl heapwalk(struct farheapinfo *hi);
void __cdecl highvideo();
double __cdecl hypot(double x, double y);
long double __cdecl hypotl(long double x, long double y);
unsigned int __cdecl __far imagesize(int left, int top, int right, int bottom);
void __cdecl __far initgraph(int far *graphdriver, int far *graphmode, const char far *pathtodriver);
int __cdecl inp(unsigned int portid);
unsigned int __cdecl inport(unsigned int portid);
unsigned __int8 __cdecl inportb(unsigned int portid);
unsigned int __cdecl inpw(unsigned int portid);
void __cdecl insline();
int __cdecl __far installuserdriver(const char far *name, int (__far *detect)(void));
int __cdecl __far installuserfont(const char far *name);
int __cdecl int86(int intno, union REGS *inregs, union REGS *outregs);
int __cdecl int86x(int intno, union REGS *inregs, union REGS *outregs, struct SREGS *segregs);
int __cdecl intdos(union REGS *inregs, union REGS *outregs);
int __cdecl intdosx(union REGS *inregs, union REGS *outregs, struct SREGS *segregs);
void __cdecl intr(int intno, struct REGPACK *preg);
int ioctl(int handle, int func, ...);
int __cdecl isalnum(int c);
int __cdecl isalpha(int c);
int __cdecl isascii(int c);
int __cdecl isatty(int handle);
int __cdecl iscntrl(int c);
int __cdecl isdigit(int c);
int __cdecl isgraph(int c);
int __cdecl islower(int c);
int __cdecl isprint(int c);
int __cdecl ispunct(int c);
int __cdecl isspace(int c);
int __cdecl isupper(int c);
int __cdecl isxdigit(int c);
char *__cdecl itoa(int value, char *string, int radix);
int __cdecl kbhit();
void __cdecl keep(unsigned __int8 status, unsigned int size);
__int32 __cdecl labs(__int32 x);
double __cdecl ldexp(double x, int exponent);
long double __cdecl ldexpl(long double x, int exponent);
ldiv_t __cdecl ldiv(__int32 numer, __int32 denom);
void *__cdecl lfind(const void *key, const void *base, size_t *num, size_t width, int (__cdecl *fcmp)(const void *, const void *));
void __cdecl __far line(int x1, int y1, int x2, int y2);
void __cdecl __far linerel(int dx, int dy);
void __cdecl __far lineto(int x, int y);
struct lconv *__cdecl localeconv();
struct tm *__cdecl localtime(const time_t *timer);
int __cdecl lock(int handle, __int32 offset, __int32 length);
int __cdecl locking(int handle, int mode, __int32 length);
double __cdecl log(double x);
double __cdecl log10(double x);
long double __cdecl log10l(long double x);
long double __cdecl logl(long double x);
void __cdecl longjmp(jmp_buf jmpb, int retval);
void __cdecl lowvideo();
void *__cdecl lsearch(const void *key, void *base, size_t *num, size_t width, int (__cdecl *fcmp)(const void *, const void *));
__int32 __cdecl lseek(int handle, __int32 offset, int fromwhere);
char *__cdecl ltoa(__int32 value, char *string, int radix);
void *__cdecl malloc(size_t size);
int __cdecl matherr(struct exception *e);
int __cdecl mblen(const char *s, size_t n);
size_t __cdecl mbstowcs(wchar_t *pwcs, const char *s, size_t n);
int __cdecl mbtowc(wchar_t *pwc, const char *s, size_t n);
void *__cdecl memccpy(void *dest, const void *src, int c, size_t n);
void *__cdecl memchr(const void *s, int c, size_t n);
int __cdecl memcmp(const void *s1, const void *s2, size_t n);
void *__cdecl memcpy(void *dest, const void *src, size_t n);
int __cdecl memicmp(const void *s1, const void *s2, size_t n);
void *__cdecl memmove(void *dest, const void *src, size_t n);
void *__cdecl memset(void *s, int c, size_t n);
int __cdecl mkdir(const char *path);
char *__cdecl mktemp(char *template);
time_t __cdecl mktime(struct tm *timeptr);
double __cdecl modf(double x, double *ipart);
long double __cdecl modfl(long double x, long double *ipart);
void __cdecl movedata(unsigned int srcseg, unsigned int srcoff, unsigned int dstseg, unsigned int dstoff, size_t n);
void __cdecl __far moverel(int dx, int dy);
int __cdecl movetext(int left, int top, int right, int bottom, int destleft, int desttop);
void __cdecl __far moveto(int x, int y);
void __cdecl movmem(const void *src, void *dest, unsigned int length);
void __cdecl normvideo();
void __cdecl nosound();
int open(const char *path, int access, ...);
DIR *__cdecl opendir(char *dirname);
int __cdecl outp(unsigned int portid, int value);
void __cdecl outport(unsigned int portid, unsigned int value);
void __cdecl outportb(unsigned int portid, unsigned __int8 value);
unsigned int __cdecl outpw(unsigned int portid, unsigned int value);
void __cdecl __far outtext(const char far *textstring);
void __cdecl __far outtextxy(int x, int y, const char far *textstring);
char *__cdecl parsfnm(const char *cmdline, struct fcb *fcb, int opt);
int __cdecl peek(unsigned int segment, unsigned int offset);
char __cdecl peekb(unsigned int segment, unsigned int offset);
void __cdecl perror(const char *s);
void __cdecl __far pieslice(int x, int y, int stangle, int endangle, int radius);
void __cdecl poke(unsigned int segment, unsigned int offset, int value);
void __cdecl pokeb(unsigned int segment, unsigned int offset, char value);
double __cdecl poly(double x, int degree, double *coeffs);
long double __cdecl polyl(long double x, int degree, long double *coeffs);
double __cdecl pow(double x, double y);
double __cdecl pow10(int p);
long double __cdecl pow10l(int p);
long double __cdecl powl(long double x, long double y);
int printf(const char *format, ...);
int __cdecl putc(const int c, FILE *fp);
int __cdecl putch(int c);
int __cdecl putchar(const int c);
int __cdecl putenv(const char *name);
void __cdecl __far putimage(int left, int top, const void far *bitmap, int op);
void __cdecl __far putpixel(int x, int y, int color);
int __cdecl puts(const char *s);
int __cdecl puttext(int left, int top, int right, int bottom, void *source);
int __cdecl putw(int w, FILE *stream);
void __cdecl qsort(void *base, size_t nelem, size_t width, int (__cdecl *fcmp)(const void *, const void *));
int __cdecl raise(int sig);
int __cdecl rand();
int __cdecl randbrd(struct fcb *fcb, int rcnt);
int __cdecl randbwr(struct fcb *fcb, int rcnt);
int __cdecl read(int handle, void *buf, unsigned int len);
struct dirent *__cdecl readdir(DIR *dir);
void *__cdecl realloc(void *block, size_t size);
void __cdecl __far rectangle(int left, int top, int right, int bottom);
int __cdecl registerbgidriver(void (*driver)(void));
int __cdecl registerbgifont(void (*font)(void));
int __cdecl __far registerfarbgidriver(void far *driver);
int __cdecl __far registerfarbgifont(void far *font);
int __cdecl remove(const char *path);
int __cdecl rename(const char *oldname, const char *newname);
void __cdecl __far restorecrtmode();
void __cdecl rewind(FILE *stream);
void __cdecl rewinddir(DIR *dir);
int __cdecl rmdir(const char *path);
int __cdecl rmtmp();
void __cdecl sansserif_font();
int sansserif_font_far[];
void *__cdecl sbrk(int incr);
int scanf(const char *format, ...);
char *__cdecl searchpath(const char *file);
void __cdecl __far sector(int X, int Y, int StAngle, int EndAngle, int XRadius, int YRadius);
void __cdecl segread(struct SREGS *segp);
void __cdecl __far setactivepage(int page);
void __cdecl __far setallpalette(const struct palettetype far *palette);
void __cdecl __far setaspectratio(int xasp, int yasp);
void __cdecl __far setbkcolor(int color);
int __cdecl setblock(unsigned int segx, unsigned int newsize);
void __cdecl setbuf(FILE *stream, char *buf);
int __cdecl setcbrk(int cbrkvalue);
void __cdecl __far setcolor(int color);
void __cdecl setdate(struct date *datep);
int __cdecl setdisk(int drive);
void __cdecl setdta(char far *dta);
void __cdecl __far setfillpattern(const char far *upattern, int color);
void __cdecl __far setfillstyle(int pattern, int color);
int __cdecl setftime(int handle, struct ftime *ftimep);
unsigned int __cdecl __far setgraphbufsize(unsigned int bufsize);
void __cdecl __far setgraphmode(int mode);
int __cdecl setjmp(jmp_buf jmpb);
void __cdecl __far setlinestyle(int linestyle, unsigned int upattern, int thickness);
char *__cdecl setlocale(int category, const char *locale);
void __cdecl setmem(void *dest, unsigned int length, char value);
int __cdecl setmode(int handle, int amode);
void __cdecl __far setpalette(int colornum, int color);
void __cdecl __far setrgbpalette(int colornum, int red, int green, int blue);
void __cdecl setswitchar(char ch);
void __cdecl __far settextjustify(int horiz, int vert);
void __cdecl __far settextstyle(int font, int direction, int charsize);
void __cdecl settime(struct time *timep);
void __cdecl __far setusercharsize(int multx, int divx, int multy, int divy);
int __cdecl setvbuf(FILE *stream, char *buf, int type, size_t size);
void __cdecl setvect(int interruptno, void (__interrupt far *isr)());
void __cdecl setverify(int value);
void __cdecl __far setviewport(int left, int top, int right, int bottom, int clip);
void __cdecl __far setvisualpage(int page);
void __cdecl __far setwritemode(int mode);
void (__cdecl *__cdecl signal(int sig, void (__cdecl *func)()))(int);
double __cdecl sin(double x);
double __cdecl sinh(double x);
long double __cdecl sinhl(long double x);
long double __cdecl sinl(long double x);
void __cdecl sleep(unsigned int seconds);
void __cdecl small_font();
int small_font_far[];
int sopen(const char *path, int access, int shflag, ...);
void __cdecl sound(unsigned int frequency);
int spawnl(int mode, char *path, char *arg0, ...);
int spawnle(int mode, char *path, char *arg0, ...);
int spawnlp(int mode, char *path, char *arg0, ...);
int spawnlpe(int mode, char *path, char *arg0, ...);
int __cdecl spawnv(int mode, char *path, char *argv[]);
int __cdecl spawnve(int mode, char *path, char *argv[], char **env);
int __cdecl spawnvp(int mode, char *path, char *argv[]);
int __cdecl spawnvpe(int mode, char *path, char *argv[], char **env);
int sprintf(char *buffer, const char *format, ...);
double __cdecl sqrt(double x);
long double __cdecl sqrtl(long double x);
void __cdecl srand(unsigned int seed);
int sscanf(const char *buffer, const char *format, ...);
size_t __cdecl stackavail();
int __cdecl stat(const char *path, struct stat *statbuf);
int __cdecl stime(time_t *tp);
char *__cdecl stpcpy(char *dest, const char *src);
char *__cdecl strcat(char *dest, const char *src);
char *__cdecl strchr(const char *s, int c);
int __cdecl strcmp(const char *s1, const char *s2);
int __cdecl strcoll(const char *s1, const char *s2);
char *__cdecl strcpy(char *dest, const char *src);
size_t __cdecl strcspn(const char *s1, const char *s2);
char *__cdecl strdup(const char *s);
char *__cdecl strerror(int errnum);
size_t __cdecl strftime(char *s, size_t maxsize, const char *fmt, const struct tm *t);
int __cdecl stricmp(const char *s1, const char *s2);
size_t __cdecl strlen(const char *s);
char *__cdecl strlwr(char *s);
char *__cdecl strncat(char *dest, const char *src, size_t maxlen);
int __cdecl strncmp(const char *s1, const char *s2, size_t maxlen);
char *__cdecl strncpy(char *dest, const char *src, size_t maxlen);
int __cdecl strnicmp(const char *s1, const char *s2, size_t maxlen);
char *__cdecl strnset(char *s, int ch, size_t n);
char *__cdecl strpbrk(const char *s1, const char *s2);
char *__cdecl strrchr(const char *s, int c);
char *__cdecl strrev(char *s);
char *__cdecl strset(char *s, int ch);
size_t __cdecl strspn(const char *s1, const char *s2);
char *__cdecl strstr(const char *s1, const char *s2);
double __cdecl strtod(const char *s, char **endptr);
char *__cdecl strtok(char *s1, const char *s2);
__int32 __cdecl strtol(const char *s, char **endptr, int radix);
unsigned __int32 __cdecl strtoul(const char *s, char **endptr, int radix);
char *__cdecl strupr(char *s);
size_t __cdecl strxfrm(char *s1, const char *s2, size_t n);
void __cdecl swab(char *from, char *to, int nbytes);
char *sys_errlist[];
int sys_nerr;
int __cdecl system(const char *command);
double __cdecl tan(double x);
double __cdecl tanh(double x);
long double __cdecl tanhl(long double x);
long double __cdecl tanl(long double x);
__int32 __cdecl tell(int handle);
char *__cdecl tempnam(char *dir, char *pfx);
void __cdecl textattr(int newattr);
void __cdecl textbackground(int newcolor);
void __cdecl textcolor(int newcolor);
int __cdecl __far textheight(const char far *textstring);
void __cdecl textmode(int newmode);
int __cdecl __far textwidth(const char far *textstring);
time_t __cdecl time(time_t *timer);
__int32 timezone;
FILE *__cdecl tmpfile();
char *__cdecl tmpnam(char *s);
int __cdecl tolower(int ch);
int __cdecl toupper(int ch);
void __cdecl triplex_font();
int triplex_font_far[];
char *const tzname[2];
void __cdecl tzset();
char *__cdecl ultoa(unsigned __int32 value, char *string, int radix);
unsigned int __cdecl umask(unsigned int cmask);
int __cdecl ungetc(int c, FILE *stream);
int __cdecl ungetch(int ch);
void __cdecl unixtodos(__int32 time, struct date *d, struct time *t);
int __cdecl unlink(const char *path);
int __cdecl unlock(int handle, __int32 offset, __int32 length);
int __cdecl utime(char *path, struct utimbuf *times);
int __cdecl vfprintf(FILE *stream, const char *format, void *arglist);
int __cdecl vfscanf(FILE *stream, const char *format, void *arglist);
int __cdecl vprintf(const char *format, void *arglist);
int __cdecl vscanf(const char *format, void *arglist);
int __cdecl vsprintf(char *buffer, const char *format, void *arglist);
int __cdecl vsscanf(const char *buffer, const char *format, void *arglist);
size_t __cdecl wcstombs(char *s, const wchar_t *pwcs, size_t n);
int __cdecl wctomb(char *s, wchar_t wc);
int __cdecl wherex();
int __cdecl wherey();
void __cdecl window(int left, int top, int right, int bottom);
int __cdecl write(int handle, const void *buf, unsigned int len);
MACRO_chx1 chx1;
MACRO_chx10 chx10;
MACRO_chx11 chx11;
MACRO_chx12 chx12;
MACRO_chx13 chx13;
MACRO_chx14 chx14;
MACRO_chx15 chx15;
MACRO_chx16 chx16;
MACRO_chx2 chx2;
MACRO_chx3 chx3;
MACRO_chx4 chx4;
MACRO_chx5 chx5;
MACRO_chx6 chx6;
MACRO_chx7 chx7;
MACRO_chx8 chx8;
MACRO_chx9 chx9;
MACRO_cmb1 cmb1;
MACRO_cmb10 cmb10;
MACRO_cmb11 cmb11;
MACRO_cmb12 cmb12;
MACRO_cmb13 cmb13;
MACRO_cmb14 cmb14;
MACRO_cmb15 cmb15;
MACRO_cmb16 cmb16;
MACRO_cmb2 cmb2;
MACRO_cmb3 cmb3;
MACRO_cmb4 cmb4;
MACRO_cmb5 cmb5;
MACRO_cmb6 cmb6;
MACRO_cmb7 cmb7;
MACRO_cmb8 cmb8;
MACRO_cmb9 cmb9;
MACRO_ctlFirst ctlFirst;
MACRO_ctlLast ctlLast;
MACRO_edt1 edt1;
MACRO_edt10 edt10;
MACRO_edt11 edt11;
MACRO_edt12 edt12;
MACRO_edt13 edt13;
MACRO_edt14 edt14;
MACRO_edt15 edt15;
MACRO_edt16 edt16;
MACRO_edt2 edt2;
MACRO_edt3 edt3;
MACRO_edt4 edt4;
MACRO_edt5 edt5;
MACRO_edt6 edt6;
MACRO_edt7 edt7;
MACRO_edt8 edt8;
MACRO_edt9 edt9;
MACRO_frm1 frm1;
MACRO_frm2 frm2;
MACRO_frm3 frm3;
MACRO_frm4 frm4;
graphics_errors grError;
graphics_errors grFileNotFound;
graphics_errors grFontNotFound;
graphics_errors grIOerror;
graphics_errors grInvalidDriver;
graphics_errors grInvalidFont;
graphics_errors grInvalidFontNum;
graphics_errors grInvalidMode;
graphics_errors grInvalidVersion;
graphics_errors grNoFloodMem;
graphics_errors grNoFontMem;
graphics_errors grNoInitGraph;
graphics_errors grNoLoadMem;
graphics_errors grNoScanMem;
graphics_errors grNotDetected;
graphics_errors grOk;
MACRO_grp1 grp1;
MACRO_grp2 grp2;
MACRO_grp3 grp3;
MACRO_grp4 grp4;
MACRO_ico1 ico1;
MACRO_ico2 ico2;
MACRO_ico3 ico3;
MACRO_ico4 ico4;
MACRO_lst1 lst1;
MACRO_lst10 lst10;
MACRO_lst11 lst11;
MACRO_lst12 lst12;
MACRO_lst13 lst13;
MACRO_lst14 lst14;
MACRO_lst15 lst15;
MACRO_lst16 lst16;
MACRO_lst2 lst2;
MACRO_lst3 lst3;
MACRO_lst4 lst4;
MACRO_lst5 lst5;
MACRO_lst6 lst6;
MACRO_lst7 lst7;
MACRO_lst8 lst8;
MACRO_lst9 lst9;
MACRO_psh1 psh1;
MACRO_psh10 psh10;
MACRO_psh11 psh11;
MACRO_psh12 psh12;
MACRO_psh13 psh13;
MACRO_psh14 psh14;
MACRO_psh15 psh15;
MACRO_psh16 psh16;
MACRO_psh2 psh2;
MACRO_psh3 psh3;
MACRO_psh4 psh4;
MACRO_psh5 psh5;
MACRO_psh6 psh6;
MACRO_psh7 psh7;
MACRO_psh8 psh8;
MACRO_psh9 psh9;
MACRO_pshHelp pshHelp;
MACRO_rad1 rad1;
MACRO_rad10 rad10;
MACRO_rad11 rad11;
MACRO_rad12 rad12;
MACRO_rad13 rad13;
MACRO_rad14 rad14;
MACRO_rad15 rad15;
MACRO_rad16 rad16;
MACRO_rad2 rad2;
MACRO_rad3 rad3;
MACRO_rad4 rad4;
MACRO_rad5 rad5;
MACRO_rad6 rad6;
MACRO_rad7 rad7;
MACRO_rad8 rad8;
MACRO_rad9 rad9;
MACRO_rct1 rct1;
MACRO_rct2 rct2;
MACRO_rct3 rct3;
MACRO_rct4 rct4;
MACRO_scr1 scr1;
MACRO_scr2 scr2;
MACRO_scr3 scr3;
MACRO_scr4 scr4;
MACRO_scr5 scr5;
MACRO_scr6 scr6;
MACRO_scr7 scr7;
MACRO_scr8 scr8;
MACRO_stc1 stc1;
MACRO_stc10 stc10;
MACRO_stc11 stc11;
MACRO_stc12 stc12;
MACRO_stc13 stc13;
MACRO_stc14 stc14;
MACRO_stc15 stc15;
MACRO_stc16 stc16;
MACRO_stc17 stc17;
MACRO_stc18 stc18;
MACRO_stc19 stc19;
MACRO_stc2 stc2;
MACRO_stc20 stc20;
MACRO_stc21 stc21;
MACRO_stc22 stc22;
MACRO_stc23 stc23;
MACRO_stc24 stc24;
MACRO_stc25 stc25;
MACRO_stc26 stc26;
MACRO_stc27 stc27;
MACRO_stc28 stc28;
MACRO_stc29 stc29;
MACRO_stc3 stc3;
MACRO_stc30 stc30;
MACRO_stc31 stc31;
MACRO_stc32 stc32;
MACRO_stc4 stc4;
MACRO_stc5 stc5;
MACRO_stc6 stc6;
MACRO_stc7 stc7;
MACRO_stc8 stc8;
MACRO_stc9 stc9;
