enum $003F63A829E52477BDB4080710A1139D {preorder = 0x0,postorder = 0x1,endorder = 0x2,leaf = 0x3,};
struct $00580D67DBBDE0DF5EC3B468D69A2E22 {Elf64_Word l_name;Elf64_Word l_time_stamp;Elf64_Word l_checksum;Elf64_Word l_version;Elf64_Word l_flags;};
enum $018E9FE7519BCFF29BB9A1C135EDF766 {AFORK = 0x1,ASU = 0x2,ACORE = 0x8,AXSIG = 0x10,};
enum $02A365252B64D961A2FD63CDBE345E8F {NET_IPV4_CONF_FORWARDING = 0x1,NET_IPV4_CONF_MC_FORWARDING = 0x2,NET_IPV4_CONF_PROXY_ARP = 0x3,NET_IPV4_CONF_ACCEPT_REDIRECTS = 0x4,NET_IPV4_CONF_SECURE_REDIRECTS = 0x5,NET_IPV4_CONF_SEND_REDIRECTS = 0x6,NET_IPV4_CONF_SHARED_MEDIA = 0x7,NET_IPV4_CONF_RP_FILTER = 0x8,NET_IPV4_CONF_ACCEPT_SOURCE_ROUTE = 0x9,NET_IPV4_CONF_BOOTP_RELAY = 0xA,NET_IPV4_CONF_LOG_MARTIANS = 0xB,NET_IPV4_CONF_TAG = 0xC,NET_IPV4_CONF_ARPFILTER = 0xD,NET_IPV4_CONF_MEDIUM_ID = 0xE,NET_IPV4_CONF_NOXFRM = 0xF,NET_IPV4_CONF_NOPOLICY = 0x10,NET_IPV4_CONF_FORCE_IGMP_VERSION = 0x11,NET_IPV4_CONF_ARP_ANNOUNCE = 0x12,NET_IPV4_CONF_ARP_IGNORE = 0x13,NET_IPV4_CONF_PROMOTE_SECONDARIES = 0x14,NET_IPV4_CONF_ARP_ACCEPT = 0x15,NET_IPV4_CONF_ARP_NOTIFY = 0x16,};
enum $0450D7A3E1ABBCDA32B8138634189C78 {TCP_NO_QUEUE = 0x0,TCP_RECV_QUEUE = 0x1,TCP_SEND_QUEUE = 0x2,TCP_QUEUES_NR = 0x3,};
enum $05A50ECB05B65953CE4DB9E3BEF9FCBB {NET_LLC2_TIMEOUT = 0x1,};
enum $05E3195081394CB44D0F2D41FD41A42E {ILL_ILLOPC = 0x1,ILL_ILLOPN = 0x2,ILL_ILLADR = 0x3,ILL_ILLTRP = 0x4,ILL_PRVOPC = 0x5,ILL_PRVREG = 0x6,ILL_COPROC = 0x7,ILL_BADSTK = 0x8,};
struct $06CAB5296C39900A9CE51DBF4F560AD6 {int val[2];};
enum $0820D168B3B596C7A12A3578F6930236 {NET_IPX_PPROP_BROADCASTING = 0x1,NET_IPX_FORWARDING = 0x2,};
enum $08676B761D46AC0E8736B97FA3DBC486 {PTHREAD_RWLOCK_PREFER_READER_NP = 0x0,PTHREAD_RWLOCK_PREFER_WRITER_NP = 0x1,PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 0x2,PTHREAD_RWLOCK_DEFAULT_NP = 0x0,};
enum $09C3FFA026BC908AACE27D0C95B171E0 {DEV_PARPORT_SPINTIME = 0x1,DEV_PARPORT_BASE_ADDR = 0x2,DEV_PARPORT_IRQ = 0x3,DEV_PARPORT_DMA = 0x4,DEV_PARPORT_MODES = 0x5,DEV_PARPORT_DEVICES = 0x6,DEV_PARPORT_AUTOPROBE = 0x10,};
enum $0D28A6D9277963163067C053D6D791C2 {PTHREAD_CANCEL_DEFERRED = 0x0,PTHREAD_CANCEL_ASYNCHRONOUS = 0x1,};
enum $0DDACC7DC443E071E9807358C2A97208 {AIO_CANCELED = 0x0,AIO_NOTCANCELED = 0x1,AIO_ALLDONE = 0x2,};
struct $0F2B39C4889BFBA0BBC9C66D38A1F5D3 {Elf32_Word sh_name;Elf32_Word sh_type;Elf32_Word sh_flags;Elf32_Addr sh_addr;Elf32_Off sh_offset;Elf32_Word sh_size;Elf32_Word sh_link;Elf32_Word sh_info;Elf32_Word sh_addralign;Elf32_Word sh_entsize;};
enum $0FA339A064E61FF434A56DA3EE04706A {TCP_ESTABLISHED = 0x1,TCP_SYN_SENT = 0x2,TCP_SYN_RECV = 0x3,TCP_FIN_WAIT1 = 0x4,TCP_FIN_WAIT2 = 0x5,TCP_TIME_WAIT = 0x6,TCP_CLOSE = 0x7,TCP_CLOSE_WAIT = 0x8,TCP_LAST_ACK = 0x9,TCP_LISTEN = 0xA,TCP_CLOSING = 0xB,};
struct $0FC95954E9672604C2E419500968ACC1 {__cpu_mask __bits[32];};
enum $11FBD184975FE0D255859931E1E2B0D1 {NET_X25_RESTART_REQUEST_TIMEOUT = 0x1,NET_X25_CALL_REQUEST_TIMEOUT = 0x2,NET_X25_RESET_REQUEST_TIMEOUT = 0x3,NET_X25_CLEAR_REQUEST_TIMEOUT = 0x4,NET_X25_ACK_HOLD_BACK_TIMEOUT = 0x5,NET_X25_FORWARD = 0x6,};
struct $12883A0710B467FBB4742064A9BE69DF {Elf32_Word vda_name;Elf32_Word vda_next;};
struct $13745364EEA695BC65B7D4AAC1B24515 {td_thr_events_t eventmask;td_event_e eventnum;void *eventdata;};
struct $15A7CADFA0C3B6AF2858DE2248F61F64 {__off64_t __pos;__mbstate_t __state;};
struct $160641F2D897670075418D2E6B733231 {unsigned __int8 e_ident[16];Elf32_Half e_type;Elf32_Half e_machine;Elf32_Word e_version;Elf32_Addr e_entry;Elf32_Off e_phoff;Elf32_Off e_shoff;Elf32_Word e_flags;Elf32_Half e_ehsize;Elf32_Half e_phentsize;Elf32_Half e_phnum;Elf32_Half e_shentsize;Elf32_Half e_shnum;Elf32_Half e_shstrndx;};
enum $16B0B93CB8DD7194C50FFF250111CAE4 {PTHREAD_CREATE_JOINABLE = 0x0,PTHREAD_CREATE_DETACHED = 0x1,};
struct $1A16B277A945B8F62DE8883A2D91AFD9 {int __count;union $1A16B277A945B8F62DE8883A2D91AFD9::$0740F39446D5E828B16B7363880DB674 __value;};
union $1A16B277A945B8F62DE8883A2D91AFD9::$0740F39446D5E828B16B7363880DB674 {wint_t __wch;char __wchb[4];};
union $1C4035FDEAFFF0FCE26E66A96F6BBEB4 {struct $1C4035FDEAFFF0FCE26E66A96F6BBEB4::$20EFCB5FAA72B851457C6BAA266EC02E __data;char __size[48];__int64 __align;};
struct $1C4035FDEAFFF0FCE26E66A96F6BBEB4::$20EFCB5FAA72B851457C6BAA266EC02E {int __lock;unsigned int __futex;unsigned __int64 __total_seq;unsigned __int64 __wakeup_seq;unsigned __int64 __woken_seq;void *__mutex;unsigned int __nwaiters;unsigned int __broadcast_seq;};
enum $1DAB2066660C93B51247B976141F21A3 {NET_DECNET_CONF_LOOPBACK = 0xFFFFFFFE,NET_DECNET_CONF_DDCMP = 0xFFFFFFFD,NET_DECNET_CONF_PPP = 0xFFFFFFFC,NET_DECNET_CONF_X25 = 0xFFFFFFFB,NET_DECNET_CONF_GRE = 0xFFFFFFFA,NET_DECNET_CONF_ETHER = 0xFFFFFFF9,};
enum $1DEA5F99BA550E134F90C8CF2EF07191 {MM_NOTOK = 0xFFFFFFFF,MM_OK = 0x0,MM_NOMSG = 0x1,MM_NOCON = 0x4,};
enum $1DF047069AF03344AD1E8E838FC376B2 {FS_NRINODE = 0x1,FS_STATINODE = 0x2,FS_MAXINODE = 0x3,FS_NRDQUOT = 0x4,FS_MAXDQUOT = 0x5,FS_NRFILE = 0x6,FS_MAXFILE = 0x7,FS_DENTRY = 0x8,FS_NRSUPER = 0x9,FS_MAXSUPER = 0xA,FS_OVERFLOWUID = 0xB,FS_OVERFLOWGID = 0xC,FS_LEASES = 0xD,FS_DIR_NOTIFY = 0xE,FS_LEASE_TIME = 0xF,FS_DQSTATS = 0x10,FS_XFS = 0x11,FS_AIO_NR = 0x12,FS_AIO_MAX_NR = 0x13,FS_INOTIFY = 0x14,FS_OCFS2 = 0x3DC,};
enum $1EF468414A5E42A89158CD4431479D07 {PA_INT = 0x0,PA_CHAR = 0x1,PA_WCHAR = 0x2,PA_STRING = 0x3,PA_WSTRING = 0x4,PA_POINTER = 0x5,PA_FLOAT = 0x6,PA_DOUBLE = 0x7,PA_LAST = 0x8,};
enum $25942044E42384ABB7F0CC7F690A0C02 {WRDE_DOOFFS = 0x1,WRDE_APPEND = 0x2,WRDE_NOCMD = 0x4,WRDE_REUSE = 0x8,WRDE_SHOWERR = 0x10,WRDE_UNDEF = 0x20,__WRDE_FLAGS = 0x3F,};
struct $276527E852EBD04F842021527F4FA45F {int __allocated;int __used;struct __spawn_action *__actions;int __pad[16];};
enum $281072E49EAE8AB5625F274A9284616B {NET_AX25_IP_DEFAULT_MODE = 0x1,NET_AX25_DEFAULT_MODE = 0x2,NET_AX25_BACKOFF_TYPE = 0x3,NET_AX25_CONNECT_MODE = 0x4,NET_AX25_STANDARD_WINDOW = 0x5,NET_AX25_EXTENDED_WINDOW = 0x6,NET_AX25_T1_TIMEOUT = 0x7,NET_AX25_T2_TIMEOUT = 0x8,NET_AX25_T3_TIMEOUT = 0x9,NET_AX25_IDLE_TIMEOUT = 0xA,NET_AX25_N2 = 0xB,NET_AX25_PACLEN = 0xC,NET_AX25_PROTOCOL = 0xD,NET_AX25_DAMA_SLAVE_TIMEOUT = 0xE,};
enum $2821E9517F8C64C49B1CDFF94CA4D135 {_CS_PATH = 0x0,_CS_V6_WIDTH_RESTRICTED_ENVS = 0x1,_CS_GNU_LIBC_VERSION = 0x2,_CS_GNU_LIBPTHREAD_VERSION = 0x3,_CS_V5_WIDTH_RESTRICTED_ENVS = 0x4,_CS_V7_WIDTH_RESTRICTED_ENVS = 0x5,_CS_LFS_CFLAGS = 0x3E8,_CS_LFS_LDFLAGS = 0x3E9,_CS_LFS_LIBS = 0x3EA,_CS_LFS_LINTFLAGS = 0x3EB,_CS_LFS64_CFLAGS = 0x3EC,_CS_LFS64_LDFLAGS = 0x3ED,_CS_LFS64_LIBS = 0x3EE,_CS_LFS64_LINTFLAGS = 0x3EF,_CS_XBS5_ILP32_OFF32_CFLAGS = 0x44C,_CS_XBS5_ILP32_OFF32_LDFLAGS = 0x44D,_CS_XBS5_ILP32_OFF32_LIBS = 0x44E,_CS_XBS5_ILP32_OFF32_LINTFLAGS = 0x44F,_CS_XBS5_ILP32_OFFBIG_CFLAGS = 0x450,_CS_XBS5_ILP32_OFFBIG_LDFLAGS = 0x451,_CS_XBS5_ILP32_OFFBIG_LIBS = 0x452,_CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 0x453,_CS_XBS5_LP64_OFF64_CFLAGS = 0x454,_CS_XBS5_LP64_OFF64_LDFLAGS = 0x455,_CS_XBS5_LP64_OFF64_LIBS = 0x456,_CS_XBS5_LP64_OFF64_LINTFLAGS = 0x457,_CS_XBS5_LPBIG_OFFBIG_CFLAGS = 0x458,_CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 0x459,_CS_XBS5_LPBIG_OFFBIG_LIBS = 0x45A,_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 0x45B,_CS_POSIX_V6_ILP32_OFF32_CFLAGS = 0x45C,_CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 0x45D,_CS_POSIX_V6_ILP32_OFF32_LIBS = 0x45E,_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = 0x45F,_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 0x460,_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 0x461,_CS_POSIX_V6_ILP32_OFFBIG_LIBS = 0x462,_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = 0x463,_CS_POSIX_V6_LP64_OFF64_CFLAGS = 0x464,_CS_POSIX_V6_LP64_OFF64_LDFLAGS = 0x465,_CS_POSIX_V6_LP64_OFF64_LIBS = 0x466,_CS_POSIX_V6_LP64_OFF64_LINTFLAGS = 0x467,_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 0x468,_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 0x469,_CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 0x46A,_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = 0x46B,_CS_POSIX_V7_ILP32_OFF32_CFLAGS = 0x46C,_CS_POSIX_V7_ILP32_OFF32_LDFLAGS = 0x46D,_CS_POSIX_V7_ILP32_OFF32_LIBS = 0x46E,_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = 0x46F,_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = 0x470,_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = 0x471,_CS_POSIX_V7_ILP32_OFFBIG_LIBS = 0x472,_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = 0x473,_CS_POSIX_V7_LP64_OFF64_CFLAGS = 0x474,_CS_POSIX_V7_LP64_OFF64_LDFLAGS = 0x475,_CS_POSIX_V7_LP64_OFF64_LIBS = 0x476,_CS_POSIX_V7_LP64_OFF64_LINTFLAGS = 0x477,_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = 0x478,_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = 0x479,_CS_POSIX_V7_LPBIG_OFFBIG_LIBS = 0x47A,_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = 0x47B,_CS_V6_ENV = 0x47C,_CS_V7_ENV = 0x47D,};
enum $28CA9876FFADE53F315F57AC53AC1E49 {NET_IPV4_ROUTE_FLUSH = 0x1,NET_IPV4_ROUTE_MIN_DELAY = 0x2,NET_IPV4_ROUTE_MAX_DELAY = 0x3,NET_IPV4_ROUTE_GC_THRESH = 0x4,NET_IPV4_ROUTE_MAX_SIZE = 0x5,NET_IPV4_ROUTE_GC_MIN_INTERVAL = 0x6,NET_IPV4_ROUTE_GC_TIMEOUT = 0x7,NET_IPV4_ROUTE_GC_INTERVAL = 0x8,NET_IPV4_ROUTE_REDIRECT_LOAD = 0x9,NET_IPV4_ROUTE_REDIRECT_NUMBER = 0xA,NET_IPV4_ROUTE_REDIRECT_SILENCE = 0xB,NET_IPV4_ROUTE_ERROR_COST = 0xC,NET_IPV4_ROUTE_ERROR_BURST = 0xD,NET_IPV4_ROUTE_GC_ELASTICITY = 0xE,NET_IPV4_ROUTE_MTU_EXPIRES = 0xF,NET_IPV4_ROUTE_MIN_PMTU = 0x10,NET_IPV4_ROUTE_MIN_ADVMSS = 0x11,NET_IPV4_ROUTE_SECRET_INTERVAL = 0x12,NET_IPV4_ROUTE_GC_MIN_INTERVAL_MS = 0x13,};
enum $292475A2E0A8DABD769C5D6A9D9CC8D5 {NET_IPV6_ROUTE_FLUSH = 0x1,NET_IPV6_ROUTE_GC_THRESH = 0x2,NET_IPV6_ROUTE_MAX_SIZE = 0x3,NET_IPV6_ROUTE_GC_MIN_INTERVAL = 0x4,NET_IPV6_ROUTE_GC_TIMEOUT = 0x5,NET_IPV6_ROUTE_GC_INTERVAL = 0x6,NET_IPV6_ROUTE_GC_ELASTICITY = 0x7,NET_IPV6_ROUTE_MTU_EXPIRES = 0x8,NET_IPV6_ROUTE_MIN_ADVMSS = 0x9,NET_IPV6_ROUTE_GC_MIN_INTERVAL_MS = 0xA,};
enum $2BE422EB4B7233E8C58D6E03ADE8CB89 {_IEEE_ = 0xFFFFFFFF,_SVID_ = 0x0,_XOPEN_ = 0x1,_POSIX_ = 0x2,_ISOC_ = 0x3,};
enum $2D9ECEA6C47E3C7C9ECCF7148E10CC7F {DEV_PARPORT_DEVICES_ACTIVE = 0xFFFFFFFD,};
enum $2EA190A087F83F88A23D8B31FFFB0F26 {ABDAY_1 = 0x20000,ABDAY_2 = 0x20001,ABDAY_3 = 0x20002,ABDAY_4 = 0x20003,ABDAY_5 = 0x20004,ABDAY_6 = 0x20005,ABDAY_7 = 0x20006,DAY_1 = 0x20007,DAY_2 = 0x20008,DAY_3 = 0x20009,DAY_4 = 0x2000A,DAY_5 = 0x2000B,DAY_6 = 0x2000C,DAY_7 = 0x2000D,ABMON_1 = 0x2000E,ABMON_2 = 0x2000F,ABMON_3 = 0x20010,ABMON_4 = 0x20011,ABMON_5 = 0x20012,ABMON_6 = 0x20013,ABMON_7 = 0x20014,ABMON_8 = 0x20015,ABMON_9 = 0x20016,ABMON_10 = 0x20017,ABMON_11 = 0x20018,ABMON_12 = 0x20019,MON_1 = 0x2001A,MON_2 = 0x2001B,MON_3 = 0x2001C,MON_4 = 0x2001D,MON_5 = 0x2001E,MON_6 = 0x2001F,MON_7 = 0x20020,MON_8 = 0x20021,MON_9 = 0x20022,MON_10 = 0x20023,MON_11 = 0x20024,MON_12 = 0x20025,AM_STR = 0x20026,PM_STR = 0x20027,D_T_FMT = 0x20028,D_FMT = 0x20029,T_FMT = 0x2002A,T_FMT_AMPM = 0x2002B,ERA = 0x2002C,__ERA_YEAR = 0x2002D,ERA_D_FMT = 0x2002E,ALT_DIGITS = 0x2002F,ERA_D_T_FMT = 0x20030,ERA_T_FMT = 0x20031,_NL_TIME_ERA_NUM_ENTRIES = 0x20032,_NL_TIME_ERA_ENTRIES = 0x20033,_NL_WABDAY_1 = 0x20034,_NL_WABDAY_2 = 0x20035,_NL_WABDAY_3 = 0x20036,_NL_WABDAY_4 = 0x20037,_NL_WABDAY_5 = 0x20038,_NL_WABDAY_6 = 0x20039,_NL_WABDAY_7 = 0x2003A,_NL_WDAY_1 = 0x2003B,_NL_WDAY_2 = 0x2003C,_NL_WDAY_3 = 0x2003D,_NL_WDAY_4 = 0x2003E,_NL_WDAY_5 = 0x2003F,_NL_WDAY_6 = 0x20040,_NL_WDAY_7 = 0x20041,_NL_WABMON_1 = 0x20042,_NL_WABMON_2 = 0x20043,_NL_WABMON_3 = 0x20044,_NL_WABMON_4 = 0x20045,_NL_WABMON_5 = 0x20046,_NL_WABMON_6 = 0x20047,_NL_WABMON_7 = 0x20048,_NL_WABMON_8 = 0x20049,_NL_WABMON_9 = 0x2004A,_NL_WABMON_10 = 0x2004B,_NL_WABMON_11 = 0x2004C,_NL_WABMON_12 = 0x2004D,_NL_WMON_1 = 0x2004E,_NL_WMON_2 = 0x2004F,_NL_WMON_3 = 0x20050,_NL_WMON_4 = 0x20051,_NL_WMON_5 = 0x20052,_NL_WMON_6 = 0x20053,_NL_WMON_7 = 0x20054,_NL_WMON_8 = 0x20055,_NL_WMON_9 = 0x20056,_NL_WMON_10 = 0x20057,_NL_WMON_11 = 0x20058,_NL_WMON_12 = 0x20059,_NL_WAM_STR = 0x2005A,_NL_WPM_STR = 0x2005B,_NL_WD_T_FMT = 0x2005C,_NL_WD_FMT = 0x2005D,_NL_WT_FMT = 0x2005E,_NL_WT_FMT_AMPM = 0x2005F,_NL_WERA_YEAR = 0x20060,_NL_WERA_D_FMT = 0x20061,_NL_WALT_DIGITS = 0x20062,_NL_WERA_D_T_FMT = 0x20063,_NL_WERA_T_FMT = 0x20064,_NL_TIME_WEEK_NDAYS = 0x20065,_NL_TIME_WEEK_1STDAY = 0x20066,_NL_TIME_WEEK_1STWEEK = 0x20067,_NL_TIME_FIRST_WEEKDAY = 0x20068,_NL_TIME_FIRST_WORKDAY = 0x20069,_NL_TIME_CAL_DIRECTION = 0x2006A,_NL_TIME_TIMEZONE = 0x2006B,_DATE_FMT = 0x2006C,_NL_W_DATE_FMT = 0x2006D,_NL_TIME_CODESET = 0x2006E,_NL_NUM_LC_TIME = 0x2006F,_NL_COLLATE_NRULES = 0x30000,_NL_COLLATE_RULESETS = 0x30001,_NL_COLLATE_TABLEMB = 0x30002,_NL_COLLATE_WEIGHTMB = 0x30003,_NL_COLLATE_EXTRAMB = 0x30004,_NL_COLLATE_INDIRECTMB = 0x30005,_NL_COLLATE_GAP1 = 0x30006,_NL_COLLATE_GAP2 = 0x30007,_NL_COLLATE_GAP3 = 0x30008,_NL_COLLATE_TABLEWC = 0x30009,_NL_COLLATE_WEIGHTWC = 0x3000A,_NL_COLLATE_EXTRAWC = 0x3000B,_NL_COLLATE_INDIRECTWC = 0x3000C,_NL_COLLATE_SYMB_HASH_SIZEMB = 0x3000D,_NL_COLLATE_SYMB_TABLEMB = 0x3000E,_NL_COLLATE_SYMB_EXTRAMB = 0x3000F,_NL_COLLATE_COLLSEQMB = 0x30010,_NL_COLLATE_COLLSEQWC = 0x30011,_NL_COLLATE_CODESET = 0x30012,_NL_NUM_LC_COLLATE = 0x30013,_NL_CTYPE_CLASS = 0x0,_NL_CTYPE_TOUPPER = 0x1,_NL_CTYPE_GAP1 = 0x2,_NL_CTYPE_TOLOWER = 0x3,_NL_CTYPE_GAP2 = 0x4,_NL_CTYPE_CLASS32 = 0x5,_NL_CTYPE_GAP3 = 0x6,_NL_CTYPE_GAP4 = 0x7,_NL_CTYPE_GAP5 = 0x8,_NL_CTYPE_GAP6 = 0x9,_NL_CTYPE_CLASS_NAMES = 0xA,_NL_CTYPE_MAP_NAMES = 0xB,_NL_CTYPE_WIDTH = 0xC,_NL_CTYPE_MB_CUR_MAX = 0xD,_NL_CTYPE_CODESET_NAME = 0xE,CODESET = 0xE,_NL_CTYPE_TOUPPER32 = 0xF,_NL_CTYPE_TOLOWER32 = 0x10,_NL_CTYPE_CLASS_OFFSET = 0x11,_NL_CTYPE_MAP_OFFSET = 0x12,_NL_CTYPE_INDIGITS_MB_LEN = 0x13,_NL_CTYPE_INDIGITS0_MB = 0x14,_NL_CTYPE_INDIGITS1_MB = 0x15,_NL_CTYPE_INDIGITS2_MB = 0x16,_NL_CTYPE_INDIGITS3_MB = 0x17,_NL_CTYPE_INDIGITS4_MB = 0x18,_NL_CTYPE_INDIGITS5_MB = 0x19,_NL_CTYPE_INDIGITS6_MB = 0x1A,_NL_CTYPE_INDIGITS7_MB = 0x1B,_NL_CTYPE_INDIGITS8_MB = 0x1C,_NL_CTYPE_INDIGITS9_MB = 0x1D,_NL_CTYPE_INDIGITS_WC_LEN = 0x1E,_NL_CTYPE_INDIGITS0_WC = 0x1F,_NL_CTYPE_INDIGITS1_WC = 0x20,_NL_CTYPE_INDIGITS2_WC = 0x21,_NL_CTYPE_INDIGITS3_WC = 0x22,_NL_CTYPE_INDIGITS4_WC = 0x23,_NL_CTYPE_INDIGITS5_WC = 0x24,_NL_CTYPE_INDIGITS6_WC = 0x25,_NL_CTYPE_INDIGITS7_WC = 0x26,_NL_CTYPE_INDIGITS8_WC = 0x27,_NL_CTYPE_INDIGITS9_WC = 0x28,_NL_CTYPE_OUTDIGIT0_MB = 0x29,_NL_CTYPE_OUTDIGIT1_MB = 0x2A,_NL_CTYPE_OUTDIGIT2_MB = 0x2B,_NL_CTYPE_OUTDIGIT3_MB = 0x2C,_NL_CTYPE_OUTDIGIT4_MB = 0x2D,_NL_CTYPE_OUTDIGIT5_MB = 0x2E,_NL_CTYPE_OUTDIGIT6_MB = 0x2F,_NL_CTYPE_OUTDIGIT7_MB = 0x30,_NL_CTYPE_OUTDIGIT8_MB = 0x31,_NL_CTYPE_OUTDIGIT9_MB = 0x32,_NL_CTYPE_OUTDIGIT0_WC = 0x33,_NL_CTYPE_OUTDIGIT1_WC = 0x34,_NL_CTYPE_OUTDIGIT2_WC = 0x35,_NL_CTYPE_OUTDIGIT3_WC = 0x36,_NL_CTYPE_OUTDIGIT4_WC = 0x37,_NL_CTYPE_OUTDIGIT5_WC = 0x38,_NL_CTYPE_OUTDIGIT6_WC = 0x39,_NL_CTYPE_OUTDIGIT7_WC = 0x3A,_NL_CTYPE_OUTDIGIT8_WC = 0x3B,_NL_CTYPE_OUTDIGIT9_WC = 0x3C,_NL_CTYPE_TRANSLIT_TAB_SIZE = 0x3D,_NL_CTYPE_TRANSLIT_FROM_IDX = 0x3E,_NL_CTYPE_TRANSLIT_FROM_TBL = 0x3F,_NL_CTYPE_TRANSLIT_TO_IDX = 0x40,_NL_CTYPE_TRANSLIT_TO_TBL = 0x41,_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN = 0x42,_NL_CTYPE_TRANSLIT_DEFAULT_MISSING = 0x43,_NL_CTYPE_TRANSLIT_IGNORE_LEN = 0x44,_NL_CTYPE_TRANSLIT_IGNORE = 0x45,_NL_CTYPE_MAP_TO_NONASCII = 0x46,_NL_CTYPE_NONASCII_CASE = 0x47,_NL_CTYPE_EXTRA_MAP_1 = 0x48,_NL_CTYPE_EXTRA_MAP_2 = 0x49,_NL_CTYPE_EXTRA_MAP_3 = 0x4A,_NL_CTYPE_EXTRA_MAP_4 = 0x4B,_NL_CTYPE_EXTRA_MAP_5 = 0x4C,_NL_CTYPE_EXTRA_MAP_6 = 0x4D,_NL_CTYPE_EXTRA_MAP_7 = 0x4E,_NL_CTYPE_EXTRA_MAP_8 = 0x4F,_NL_CTYPE_EXTRA_MAP_9 = 0x50,_NL_CTYPE_EXTRA_MAP_10 = 0x51,_NL_CTYPE_EXTRA_MAP_11 = 0x52,_NL_CTYPE_EXTRA_MAP_12 = 0x53,_NL_CTYPE_EXTRA_MAP_13 = 0x54,_NL_CTYPE_EXTRA_MAP_14 = 0x55,_NL_NUM_LC_CTYPE = 0x56,__INT_CURR_SYMBOL = 0x40000,__CURRENCY_SYMBOL = 0x40001,__MON_DECIMAL_POINT = 0x40002,__MON_THOUSANDS_SEP = 0x40003,__MON_GROUPING = 0x40004,__POSITIVE_SIGN = 0x40005,__NEGATIVE_SIGN = 0x40006,__INT_FRAC_DIGITS = 0x40007,__FRAC_DIGITS = 0x40008,__P_CS_PRECEDES = 0x40009,__P_SEP_BY_SPACE = 0x4000A,__N_CS_PRECEDES = 0x4000B,__N_SEP_BY_SPACE = 0x4000C,__P_SIGN_POSN = 0x4000D,__N_SIGN_POSN = 0x4000E,_NL_MONETARY_CRNCYSTR = 0x4000F,__INT_P_CS_PRECEDES = 0x40010,__INT_P_SEP_BY_SPACE = 0x40011,__INT_N_CS_PRECEDES = 0x40012,__INT_N_SEP_BY_SPACE = 0x40013,__INT_P_SIGN_POSN = 0x40014,__INT_N_SIGN_POSN = 0x40015,_NL_MONETARY_DUO_INT_CURR_SYMBOL = 0x40016,_NL_MONETARY_DUO_CURRENCY_SYMBOL = 0x40017,_NL_MONETARY_DUO_INT_FRAC_DIGITS = 0x40018,_NL_MONETARY_DUO_FRAC_DIGITS = 0x40019,_NL_MONETARY_DUO_P_CS_PRECEDES = 0x4001A,_NL_MONETARY_DUO_P_SEP_BY_SPACE = 0x4001B,_NL_MONETARY_DUO_N_CS_PRECEDES = 0x4001C,_NL_MONETARY_DUO_N_SEP_BY_SPACE = 0x4001D,_NL_MONETARY_DUO_INT_P_CS_PRECEDES = 0x4001E,_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE = 0x4001F,_NL_MONETARY_DUO_INT_N_CS_PRECEDES = 0x40020,_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE = 0x40021,_NL_MONETARY_DUO_P_SIGN_POSN = 0x40022,_NL_MONETARY_DUO_N_SIGN_POSN = 0x40023,_NL_MONETARY_DUO_INT_P_SIGN_POSN = 0x40024,_NL_MONETARY_DUO_INT_N_SIGN_POSN = 0x40025,_NL_MONETARY_UNO_VALID_FROM = 0x40026,_NL_MONETARY_UNO_VALID_TO = 0x40027,_NL_MONETARY_DUO_VALID_FROM = 0x40028,_NL_MONETARY_DUO_VALID_TO = 0x40029,_NL_MONETARY_CONVERSION_RATE = 0x4002A,_NL_MONETARY_DECIMAL_POINT_WC = 0x4002B,_NL_MONETARY_THOUSANDS_SEP_WC = 0x4002C,_NL_MONETARY_CODESET = 0x4002D,_NL_NUM_LC_MONETARY = 0x4002E,__DECIMAL_POINT = 0x10000,RADIXCHAR = 0x10000,__THOUSANDS_SEP = 0x10001,THOUSEP = 0x10001,__GROUPING = 0x10002,_NL_NUMERIC_DECIMAL_POINT_WC = 0x10003,_NL_NUMERIC_THOUSANDS_SEP_WC = 0x10004,_NL_NUMERIC_CODESET = 0x10005,_NL_NUM_LC_NUMERIC = 0x10006,__YESEXPR = 0x50000,__NOEXPR = 0x50001,__YESSTR = 0x50002,__NOSTR = 0x50003,_NL_MESSAGES_CODESET = 0x50004,_NL_NUM_LC_MESSAGES = 0x50005,_NL_PAPER_HEIGHT = 0x70000,_NL_PAPER_WIDTH = 0x70001,_NL_PAPER_CODESET = 0x70002,_NL_NUM_LC_PAPER = 0x70003,_NL_NAME_NAME_FMT = 0x80000,_NL_NAME_NAME_GEN = 0x80001,_NL_NAME_NAME_MR = 0x80002,_NL_NAME_NAME_MRS = 0x80003,_NL_NAME_NAME_MISS = 0x80004,_NL_NAME_NAME_MS = 0x80005,_NL_NAME_CODESET = 0x80006,_NL_NUM_LC_NAME = 0x80007,_NL_ADDRESS_POSTAL_FMT = 0x90000,_NL_ADDRESS_COUNTRY_NAME = 0x90001,_NL_ADDRESS_COUNTRY_POST = 0x90002,_NL_ADDRESS_COUNTRY_AB2 = 0x90003,_NL_ADDRESS_COUNTRY_AB3 = 0x90004,_NL_ADDRESS_COUNTRY_CAR = 0x90005,_NL_ADDRESS_COUNTRY_NUM = 0x90006,_NL_ADDRESS_COUNTRY_ISBN = 0x90007,_NL_ADDRESS_LANG_NAME = 0x90008,_NL_ADDRESS_LANG_AB = 0x90009,_NL_ADDRESS_LANG_TERM = 0x9000A,_NL_ADDRESS_LANG_LIB = 0x9000B,_NL_ADDRESS_CODESET = 0x9000C,_NL_NUM_LC_ADDRESS = 0x9000D,_NL_TELEPHONE_TEL_INT_FMT = 0xA0000,_NL_TELEPHONE_TEL_DOM_FMT = 0xA0001,_NL_TELEPHONE_INT_SELECT = 0xA0002,_NL_TELEPHONE_INT_PREFIX = 0xA0003,_NL_TELEPHONE_CODESET = 0xA0004,_NL_NUM_LC_TELEPHONE = 0xA0005,_NL_MEASUREMENT_MEASUREMENT = 0xB0000,_NL_MEASUREMENT_CODESET = 0xB0001,_NL_NUM_LC_MEASUREMENT = 0xB0002,_NL_IDENTIFICATION_TITLE = 0xC0000,_NL_IDENTIFICATION_SOURCE = 0xC0001,_NL_IDENTIFICATION_ADDRESS = 0xC0002,_NL_IDENTIFICATION_CONTACT = 0xC0003,_NL_IDENTIFICATION_EMAIL = 0xC0004,_NL_IDENTIFICATION_TEL = 0xC0005,_NL_IDENTIFICATION_FAX = 0xC0006,_NL_IDENTIFICATION_LANGUAGE = 0xC0007,_NL_IDENTIFICATION_TERRITORY = 0xC0008,_NL_IDENTIFICATION_AUDIENCE = 0xC0009,_NL_IDENTIFICATION_APPLICATION = 0xC000A,_NL_IDENTIFICATION_ABBREVIATION = 0xC000B,_NL_IDENTIFICATION_REVISION = 0xC000C,_NL_IDENTIFICATION_DATE = 0xC000D,_NL_IDENTIFICATION_CATEGORY = 0xC000E,_NL_IDENTIFICATION_CODESET = 0xC000F,_NL_NUM_LC_IDENTIFICATION = 0xC0010,_NL_NUM = 0xC0011,};
struct $2EA2B750C06C2344CAE427A9270EC33C {char ax25_call[7];};
struct $2FC37C12F50461D7B99376C23209E757 {Elf64_Half si_boundto;Elf64_Half si_flags;};
enum $3167F93E33C5EBD9DFF0553630CBED55 {NET_SCTP_RTO_INITIAL = 0x1,NET_SCTP_RTO_MIN = 0x2,NET_SCTP_RTO_MAX = 0x3,NET_SCTP_RTO_ALPHA = 0x4,NET_SCTP_RTO_BETA = 0x5,NET_SCTP_VALID_COOKIE_LIFE = 0x6,NET_SCTP_ASSOCIATION_MAX_RETRANS = 0x7,NET_SCTP_PATH_MAX_RETRANS = 0x8,NET_SCTP_MAX_INIT_RETRANSMITS = 0x9,NET_SCTP_HB_INTERVAL = 0xA,NET_SCTP_PRESERVE_ENABLE = 0xB,NET_SCTP_MAX_BURST = 0xC,NET_SCTP_ADDIP_ENABLE = 0xD,NET_SCTP_PRSCTP_ENABLE = 0xE,NET_SCTP_SNDBUF_POLICY = 0xF,NET_SCTP_SACK_TIMEOUT = 0x10,NET_SCTP_RCVBUF_POLICY = 0x11,};
struct $31DC1A9A30C8BE83503485AFF4563DAB {unsigned __int8 e_ident[16];Elf64_Half e_type;Elf64_Half e_machine;Elf64_Word e_version;Elf64_Addr e_entry;Elf64_Off e_phoff;Elf64_Off e_shoff;Elf64_Word e_flags;Elf64_Half e_ehsize;Elf64_Half e_phentsize;Elf64_Half e_phnum;Elf64_Half e_shentsize;Elf64_Half e_shnum;Elf64_Half e_shstrndx;};
enum $34F88896D34DF08B0014D0487AAD5030 {XATTR_CREATE = 0x1,XATTR_REPLACE = 0x2,};
enum $35BD8FE83593BDB9A18DE40E9AAD5356 {FE_INEXACT = 0x2000000,FE_DIVBYZERO = 0x4000000,FE_UNDERFLOW = 0x8000000,FE_OVERFLOW = 0x10000000,FE_INVALID = 0x20000000,};
enum $37DCB93EF8D95414A7671406898CD704 {NET_NF_CONNTRACK_MAX = 0x1,NET_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT = 0x2,NET_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV = 0x3,NET_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED = 0x4,NET_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT = 0x5,NET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT = 0x6,NET_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK = 0x7,NET_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT = 0x8,NET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE = 0x9,NET_NF_CONNTRACK_UDP_TIMEOUT = 0xA,NET_NF_CONNTRACK_UDP_TIMEOUT_STREAM = 0xB,NET_NF_CONNTRACK_ICMP_TIMEOUT = 0xC,NET_NF_CONNTRACK_GENERIC_TIMEOUT = 0xD,NET_NF_CONNTRACK_BUCKETS = 0xE,NET_NF_CONNTRACK_LOG_INVALID = 0xF,NET_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS = 0x10,NET_NF_CONNTRACK_TCP_LOOSE = 0x11,NET_NF_CONNTRACK_TCP_BE_LIBERAL = 0x12,NET_NF_CONNTRACK_TCP_MAX_RETRANS = 0x13,NET_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED = 0x14,NET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT = 0x15,NET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED = 0x16,NET_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED = 0x17,NET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT = 0x18,NET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD = 0x19,NET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT = 0x1A,NET_NF_CONNTRACK_COUNT = 0x1B,NET_NF_CONNTRACK_ICMPV6_TIMEOUT = 0x1C,NET_NF_CONNTRACK_FRAG6_TIMEOUT = 0x1D,NET_NF_CONNTRACK_FRAG6_LOW_THRESH = 0x1E,NET_NF_CONNTRACK_FRAG6_HIGH_THRESH = 0x1F,NET_NF_CONNTRACK_CHECKSUM = 0x20,};
enum $387260238D821795496CF8EA8057DA7E {LIO_READ = 0x0,LIO_WRITE = 0x1,LIO_NOP = 0x2,};
enum $38ABBF04E8C64EAD46767C993E61F2A9 {NET_NETROM_DEFAULT_PATH_QUALITY = 0x1,NET_NETROM_OBSOLESCENCE_COUNT_INITIALISER = 0x2,NET_NETROM_NETWORK_TTL_INITIALISER = 0x3,NET_NETROM_TRANSPORT_TIMEOUT = 0x4,NET_NETROM_TRANSPORT_MAXIMUM_TRIES = 0x5,NET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY = 0x6,NET_NETROM_TRANSPORT_BUSY_DELAY = 0x7,NET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE = 0x8,NET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT = 0x9,NET_NETROM_ROUTING_CONTROL = 0xA,NET_NETROM_LINK_FAILS_COUNT = 0xB,NET_NETROM_RESET = 0xC,};
struct $3DC7B7400B12314EE6EFE34533277AB7 {u_char vers;u_char type;u_char answer;u_char pad;u_int32_t id_num;struct osockaddr addr;};
enum $3EACBFB1F6A69D9CA6E99CE3BA7C8589 {res_goahead = 0x0,res_nextns = 0x1,res_modified = 0x2,res_done = 0x3,res_error = 0x4,};
struct $44840292B0FD4432816E14C2BB6B9957 {unsigned int __val[32];};
struct $4489EB38A238A95680D8722B994EE839 {Elf64_Xword m_value;Elf64_Xword m_info;Elf64_Xword m_poffset;Elf64_Half m_repeat;Elf64_Half m_stride;};
enum $4495C0A634E380314992BEF5C5E51096 {__GCONV_OK = 0x0,__GCONV_NOCONV = 0x1,__GCONV_NODB = 0x2,__GCONV_NOMEM = 0x3,__GCONV_EMPTY_INPUT = 0x4,__GCONV_FULL_OUTPUT = 0x5,__GCONV_ILLEGAL_INPUT = 0x6,__GCONV_INCOMPLETE_INPUT = 0x7,__GCONV_ILLEGAL_DESCRIPTOR = 0x8,__GCONV_INTERNAL_ERROR = 0x9,};
struct $45BD469DC424D3F368EE6E10DDB8D8EE {Elf32_Word l_name;Elf32_Word l_time_stamp;Elf32_Word l_checksum;Elf32_Word l_version;Elf32_Word l_flags;};
struct $4664B325D7B1C568276997F8FB024EC2 {Elf64_Addr r_offset;Elf64_Xword r_info;Elf64_Sxword r_addend;};
struct $4788A0C65CEF1424AE2DE816674E1913 {Elf32_Word p_type;Elf32_Off p_offset;Elf32_Addr p_vaddr;Elf32_Addr p_paddr;Elf32_Word p_filesz;Elf32_Word p_memsz;Elf32_Word p_flags;Elf32_Word p_align;};
struct $4A95AE72B42809ABC82C81692FF3751C {gregset_t gregs;fpregset_t fpregs;vrregset_t vrregs;};
enum $4BAC799F52E32CD0F3E53C897EB09913 {DEV_PARPORT_DEVICE_TIMESLICE = 0x1,};
enum $4CA91DF92A766E005510E94BCB31B8F2 {WRDE_NOSPACE = 0x1,WRDE_BADCHAR = 0x2,WRDE_BADVAL = 0x3,WRDE_CMDSUB = 0x4,WRDE_SYNTAX = 0x5,};
enum $4CCF5BD0F314D9FB3C73290162533A92 {SS_ONSTACK = 0x1,SS_DISABLE = 0x2,};
struct $4D0B2EE74E9FAFCBF56BDC59F25A7FDB {unsigned int dlci;};
enum $4E8858D30CCE92E14DA3F4BDDBD8423C {DEV_CDROM = 0x1,DEV_HWMON = 0x2,DEV_PARPORT = 0x3,DEV_RAID = 0x4,DEV_MAC_HID = 0x5,DEV_SCSI = 0x6,DEV_IPMI = 0x7,};
enum $4F32633B20D052A718581B0478F5AE19 {IPPROTO_HOPOPTS = 0x0,IPPROTO_ROUTING = 0x2B,IPPROTO_FRAGMENT = 0x2C,IPPROTO_ICMPV6 = 0x3A,IPPROTO_NONE = 0x3B,IPPROTO_DSTOPTS = 0x3C,IPPROTO_MH = 0x87,};
enum $51BDFC43F8CE98845B5B58BAECF68DA1 {PTHREAD_PROCESS_PRIVATE = 0x0,PTHREAD_PROCESS_SHARED = 0x1,};
enum $5354C40EB6E537E32623CE28BE16F40A {IF_LINK_MODE_DEFAULT = 0x0,IF_LINK_MODE_DORMANT = 0x1,};
struct $53901533A28EEBC402C56245C1C7891C {struct _ftsent *fts_cur;struct _ftsent *fts_child;struct _ftsent **fts_array;dev_t fts_dev;char *fts_path;int fts_rfd;int fts_pathlen;int fts_nitems;int (*fts_compar)(const void *, const void *);int fts_options;};
enum $5A0D34CF8B2C4ADAC358A58CA181ACC9 {NET_UNIX_DESTROY_DELAY = 0x1,NET_UNIX_DELETE_DELAY = 0x2,NET_UNIX_MAX_DGRAM_QLEN = 0x3,};
enum $5B88FF43CF3917E52CA9C384AA321172 {IPPROTO_IP = 0x0,IPPROTO_ICMP = 0x1,IPPROTO_IGMP = 0x2,IPPROTO_IPIP = 0x4,IPPROTO_TCP = 0x6,IPPROTO_EGP = 0x8,IPPROTO_PUP = 0xC,IPPROTO_UDP = 0x11,IPPROTO_IDP = 0x16,IPPROTO_TP = 0x1D,IPPROTO_DCCP = 0x21,IPPROTO_IPV6 = 0x29,IPPROTO_RSVP = 0x2E,IPPROTO_GRE = 0x2F,IPPROTO_ESP = 0x32,IPPROTO_AH = 0x33,IPPROTO_MTP = 0x5C,IPPROTO_BEETPH = 0x5E,IPPROTO_ENCAP = 0x62,IPPROTO_PIM = 0x67,IPPROTO_COMP = 0x6C,IPPROTO_SCTP = 0x84,IPPROTO_UDPLITE = 0x88,IPPROTO_RAW = 0xFF,IPPROTO_MAX = 0x100,};
enum $5B9AA13A32EABFD11651F8FFEC9136E0 {_SC_ARG_MAX = 0x0,_SC_CHILD_MAX = 0x1,_SC_CLK_TCK = 0x2,_SC_NGROUPS_MAX = 0x3,_SC_OPEN_MAX = 0x4,_SC_STREAM_MAX = 0x5,_SC_TZNAME_MAX = 0x6,_SC_JOB_CONTROL = 0x7,_SC_SAVED_IDS = 0x8,_SC_REALTIME_SIGNALS = 0x9,_SC_PRIORITY_SCHEDULING = 0xA,_SC_TIMERS = 0xB,_SC_ASYNCHRONOUS_IO = 0xC,_SC_PRIORITIZED_IO = 0xD,_SC_SYNCHRONIZED_IO = 0xE,_SC_FSYNC = 0xF,_SC_MAPPED_FILES = 0x10,_SC_MEMLOCK = 0x11,_SC_MEMLOCK_RANGE = 0x12,_SC_MEMORY_PROTECTION = 0x13,_SC_MESSAGE_PASSING = 0x14,_SC_SEMAPHORES = 0x15,_SC_SHARED_MEMORY_OBJECTS = 0x16,_SC_AIO_LISTIO_MAX = 0x17,_SC_AIO_MAX = 0x18,_SC_AIO_PRIO_DELTA_MAX = 0x19,_SC_DELAYTIMER_MAX = 0x1A,_SC_MQ_OPEN_MAX = 0x1B,_SC_MQ_PRIO_MAX = 0x1C,_SC_VERSION = 0x1D,_SC_PAGESIZE = 0x1E,_SC_RTSIG_MAX = 0x1F,_SC_SEM_NSEMS_MAX = 0x20,_SC_SEM_VALUE_MAX = 0x21,_SC_SIGQUEUE_MAX = 0x22,_SC_TIMER_MAX = 0x23,_SC_BC_BASE_MAX = 0x24,_SC_BC_DIM_MAX = 0x25,_SC_BC_SCALE_MAX = 0x26,_SC_BC_STRING_MAX = 0x27,_SC_COLL_WEIGHTS_MAX = 0x28,_SC_EQUIV_CLASS_MAX = 0x29,_SC_EXPR_NEST_MAX = 0x2A,_SC_LINE_MAX = 0x2B,_SC_RE_DUP_MAX = 0x2C,_SC_CHARCLASS_NAME_MAX = 0x2D,_SC_2_VERSION = 0x2E,_SC_2_C_BIND = 0x2F,_SC_2_C_DEV = 0x30,_SC_2_FORT_DEV = 0x31,_SC_2_FORT_RUN = 0x32,_SC_2_SW_DEV = 0x33,_SC_2_LOCALEDEF = 0x34,_SC_PII = 0x35,_SC_PII_XTI = 0x36,_SC_PII_SOCKET = 0x37,_SC_PII_INTERNET = 0x38,_SC_PII_OSI = 0x39,_SC_POLL = 0x3A,_SC_SELECT = 0x3B,_SC_UIO_MAXIOV = 0x3C,_SC_IOV_MAX = 0x3C,_SC_PII_INTERNET_STREAM = 0x3D,_SC_PII_INTERNET_DGRAM = 0x3E,_SC_PII_OSI_COTS = 0x3F,_SC_PII_OSI_CLTS = 0x40,_SC_PII_OSI_M = 0x41,_SC_T_IOV_MAX = 0x42,_SC_THREADS = 0x43,_SC_THREAD_SAFE_FUNCTIONS = 0x44,_SC_GETGR_R_SIZE_MAX = 0x45,_SC_GETPW_R_SIZE_MAX = 0x46,_SC_LOGIN_NAME_MAX = 0x47,_SC_TTY_NAME_MAX = 0x48,_SC_THREAD_DESTRUCTOR_ITERATIONS = 0x49,_SC_THREAD_KEYS_MAX = 0x4A,_SC_THREAD_STACK_MIN = 0x4B,_SC_THREAD_THREADS_MAX = 0x4C,_SC_THREAD_ATTR_STACKADDR = 0x4D,_SC_THREAD_ATTR_STACKSIZE = 0x4E,_SC_THREAD_PRIORITY_SCHEDULING = 0x4F,_SC_THREAD_PRIO_INHERIT = 0x50,_SC_THREAD_PRIO_PROTECT = 0x51,_SC_THREAD_PROCESS_SHARED = 0x52,_SC_NPROCESSORS_CONF = 0x53,_SC_NPROCESSORS_ONLN = 0x54,_SC_PHYS_PAGES = 0x55,_SC_AVPHYS_PAGES = 0x56,_SC_ATEXIT_MAX = 0x57,_SC_PASS_MAX = 0x58,_SC_XOPEN_VERSION = 0x59,_SC_XOPEN_XCU_VERSION = 0x5A,_SC_XOPEN_UNIX = 0x5B,_SC_XOPEN_CRYPT = 0x5C,_SC_XOPEN_ENH_I18N = 0x5D,_SC_XOPEN_SHM = 0x5E,_SC_2_CHAR_TERM = 0x5F,_SC_2_C_VERSION = 0x60,_SC_2_UPE = 0x61,_SC_XOPEN_XPG2 = 0x62,_SC_XOPEN_XPG3 = 0x63,_SC_XOPEN_XPG4 = 0x64,_SC_CHAR_BIT = 0x65,_SC_CHAR_MAX = 0x66,_SC_CHAR_MIN = 0x67,_SC_INT_MAX = 0x68,_SC_INT_MIN = 0x69,_SC_LONG_BIT = 0x6A,_SC_WORD_BIT = 0x6B,_SC_MB_LEN_MAX = 0x6C,_SC_NZERO = 0x6D,_SC_SSIZE_MAX = 0x6E,_SC_SCHAR_MAX = 0x6F,_SC_SCHAR_MIN = 0x70,_SC_SHRT_MAX = 0x71,_SC_SHRT_MIN = 0x72,_SC_UCHAR_MAX = 0x73,_SC_UINT_MAX = 0x74,_SC_ULONG_MAX = 0x75,_SC_USHRT_MAX = 0x76,_SC_NL_ARGMAX = 0x77,_SC_NL_LANGMAX = 0x78,_SC_NL_MSGMAX = 0x79,_SC_NL_NMAX = 0x7A,_SC_NL_SETMAX = 0x7B,_SC_NL_TEXTMAX = 0x7C,_SC_XBS5_ILP32_OFF32 = 0x7D,_SC_XBS5_ILP32_OFFBIG = 0x7E,_SC_XBS5_LP64_OFF64 = 0x7F,_SC_XBS5_LPBIG_OFFBIG = 0x80,_SC_XOPEN_LEGACY = 0x81,_SC_XOPEN_REALTIME = 0x82,_SC_XOPEN_REALTIME_THREADS = 0x83,_SC_ADVISORY_INFO = 0x84,_SC_BARRIERS = 0x85,_SC_BASE = 0x86,_SC_C_LANG_SUPPORT = 0x87,_SC_C_LANG_SUPPORT_R = 0x88,_SC_CLOCK_SELECTION = 0x89,_SC_CPUTIME = 0x8A,_SC_THREAD_CPUTIME = 0x8B,_SC_DEVICE_IO = 0x8C,_SC_DEVICE_SPECIFIC = 0x8D,_SC_DEVICE_SPECIFIC_R = 0x8E,_SC_FD_MGMT = 0x8F,_SC_FIFO = 0x90,_SC_PIPE = 0x91,_SC_FILE_ATTRIBUTES = 0x92,_SC_FILE_LOCKING = 0x93,_SC_FILE_SYSTEM = 0x94,_SC_MONOTONIC_CLOCK = 0x95,_SC_MULTI_PROCESS = 0x96,_SC_SINGLE_PROCESS = 0x97,_SC_NETWORKING = 0x98,_SC_READER_WRITER_LOCKS = 0x99,_SC_SPIN_LOCKS = 0x9A,_SC_REGEXP = 0x9B,_SC_REGEX_VERSION = 0x9C,_SC_SHELL = 0x9D,_SC_SIGNALS = 0x9E,_SC_SPAWN = 0x9F,_SC_SPORADIC_SERVER = 0xA0,_SC_THREAD_SPORADIC_SERVER = 0xA1,_SC_SYSTEM_DATABASE = 0xA2,_SC_SYSTEM_DATABASE_R = 0xA3,_SC_TIMEOUTS = 0xA4,_SC_TYPED_MEMORY_OBJECTS = 0xA5,_SC_USER_GROUPS = 0xA6,_SC_USER_GROUPS_R = 0xA7,_SC_2_PBS = 0xA8,_SC_2_PBS_ACCOUNTING = 0xA9,_SC_2_PBS_LOCATE = 0xAA,_SC_2_PBS_MESSAGE = 0xAB,_SC_2_PBS_TRACK = 0xAC,_SC_SYMLOOP_MAX = 0xAD,_SC_STREAMS = 0xAE,_SC_2_PBS_CHECKPOINT = 0xAF,_SC_V6_ILP32_OFF32 = 0xB0,_SC_V6_ILP32_OFFBIG = 0xB1,_SC_V6_LP64_OFF64 = 0xB2,_SC_V6_LPBIG_OFFBIG = 0xB3,_SC_HOST_NAME_MAX = 0xB4,_SC_TRACE = 0xB5,_SC_TRACE_EVENT_FILTER = 0xB6,_SC_TRACE_INHERIT = 0xB7,_SC_TRACE_LOG = 0xB8,_SC_LEVEL1_ICACHE_SIZE = 0xB9,_SC_LEVEL1_ICACHE_ASSOC = 0xBA,_SC_LEVEL1_ICACHE_LINESIZE = 0xBB,_SC_LEVEL1_DCACHE_SIZE = 0xBC,_SC_LEVEL1_DCACHE_ASSOC = 0xBD,_SC_LEVEL1_DCACHE_LINESIZE = 0xBE,_SC_LEVEL2_CACHE_SIZE = 0xBF,_SC_LEVEL2_CACHE_ASSOC = 0xC0,_SC_LEVEL2_CACHE_LINESIZE = 0xC1,_SC_LEVEL3_CACHE_SIZE = 0xC2,_SC_LEVEL3_CACHE_ASSOC = 0xC3,_SC_LEVEL3_CACHE_LINESIZE = 0xC4,_SC_LEVEL4_CACHE_SIZE = 0xC5,_SC_LEVEL4_CACHE_ASSOC = 0xC6,_SC_LEVEL4_CACHE_LINESIZE = 0xC7,_SC_IPV6 = 0xEB,_SC_RAW_SOCKETS = 0xEC,_SC_V7_ILP32_OFF32 = 0xED,_SC_V7_ILP32_OFFBIG = 0xEE,_SC_V7_LP64_OFF64 = 0xEF,_SC_V7_LPBIG_OFFBIG = 0xF0,_SC_SS_REPL_MAX = 0xF1,_SC_TRACE_EVENT_NAME_MAX = 0xF2,_SC_TRACE_NAME_MAX = 0xF3,_SC_TRACE_SYS_MAX = 0xF4,_SC_TRACE_USER_EVENT_MAX = 0xF5,_SC_XOPEN_STREAMS = 0xF6,_SC_THREAD_ROBUST_PRIO_INHERIT = 0xF7,_SC_THREAD_ROBUST_PRIO_PROTECT = 0xF8,};
enum $5DC38A7C59C0EB4905B0CA747B22AD1B {IPPORT_ECHO = 0x7,IPPORT_DISCARD = 0x9,IPPORT_SYSTAT = 0xB,IPPORT_DAYTIME = 0xD,IPPORT_NETSTAT = 0xF,IPPORT_FTP = 0x15,IPPORT_TELNET = 0x17,IPPORT_SMTP = 0x19,IPPORT_TIMESERVER = 0x25,IPPORT_NAMESERVER = 0x2A,IPPORT_WHOIS = 0x2B,IPPORT_MTP = 0x39,IPPORT_TFTP = 0x45,IPPORT_RJE = 0x4D,IPPORT_FINGER = 0x4F,IPPORT_TTYLINK = 0x57,IPPORT_SUPDUP = 0x5F,IPPORT_EXECSERVER = 0x200,IPPORT_LOGINSERVER = 0x201,IPPORT_CMDSERVER = 0x202,IPPORT_EFSSERVER = 0x208,IPPORT_BIFFUDP = 0x200,IPPORT_WHOSERVER = 0x201,IPPORT_ROUTESERVER = 0x208,IPPORT_RESERVED = 0x400,IPPORT_USERRESERVED = 0x1388,};
enum $5E65BB40F6ADE64B38A28A13261FB94F {DEV_PARPORT_DEFAULT = 0xFFFFFFFD,};
enum $5E73109BBAA167E4C78A8EE8CF9AEA71 {NET_IPV4_NF_CONNTRACK_MAX = 0x1,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT = 0x2,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV = 0x3,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED = 0x4,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT = 0x5,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT = 0x6,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK = 0x7,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT = 0x8,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE = 0x9,NET_IPV4_NF_CONNTRACK_UDP_TIMEOUT = 0xA,NET_IPV4_NF_CONNTRACK_UDP_TIMEOUT_STREAM = 0xB,NET_IPV4_NF_CONNTRACK_ICMP_TIMEOUT = 0xC,NET_IPV4_NF_CONNTRACK_GENERIC_TIMEOUT = 0xD,NET_IPV4_NF_CONNTRACK_BUCKETS = 0xE,NET_IPV4_NF_CONNTRACK_LOG_INVALID = 0xF,NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS = 0x10,NET_IPV4_NF_CONNTRACK_TCP_LOOSE = 0x11,NET_IPV4_NF_CONNTRACK_TCP_BE_LIBERAL = 0x12,NET_IPV4_NF_CONNTRACK_TCP_MAX_RETRANS = 0x13,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED = 0x14,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT = 0x15,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED = 0x16,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED = 0x17,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT = 0x18,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD = 0x19,NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT = 0x1A,NET_IPV4_NF_CONNTRACK_COUNT = 0x1B,NET_IPV4_NF_CONNTRACK_CHECKSUM = 0x1C,};
enum $5FCFC9B82C4ACD98A29891A49C87C3CA {DEV_SCSI_LOGGING_LEVEL = 0x1,};
struct $6105F69743B5F4DC3D2725A2474E8E7A {struct $6105F69743B5F4DC3D2725A2474E8E7A::$226E8492299A9657BCCDB2FD50B1B3D8 __cancel_jmp_buf[1];void *__pad[4];};
struct $6105F69743B5F4DC3D2725A2474E8E7A::$226E8492299A9657BCCDB2FD50B1B3D8 {__jmp_buf __cancel_jmp_buf;int __mask_was_saved;};
struct $61B607A2274ED5109A268B0B2173104D {Elf64_Word p_type;Elf64_Word p_flags;Elf64_Off p_offset;Elf64_Addr p_vaddr;Elf64_Addr p_paddr;Elf64_Xword p_filesz;Elf64_Xword p_memsz;Elf64_Xword p_align;};
enum $62FD4908D73688A13019301FFF23EFDD {BUS_ADRALN = 0x1,BUS_ADRERR = 0x2,BUS_OBJERR = 0x3,BUS_MCEERR_AR = 0x4,BUS_MCEERR_AO = 0x5,};
enum $65CF98EECFB69F691B0631C04FBFD9D4 {TD_ALL_EVENTS = 0x0,TD_EVENT_NONE = 0x0,TD_READY = 0x1,TD_SLEEP = 0x2,TD_SWITCHTO = 0x3,TD_SWITCHFROM = 0x4,TD_LOCK_TRY = 0x5,TD_CATCHSIG = 0x6,TD_IDLE = 0x7,TD_CREATE = 0x8,TD_DEATH = 0x9,TD_PREEMPT = 0xA,TD_PRI_INHERIT = 0xB,TD_REAP = 0xC,TD_CONCURRENCY = 0xD,TD_TIMEOUT = 0xE,TD_MIN_EVENT_NUM = 0x1,TD_MAX_EVENT_NUM = 0xE,TD_EVENTS_ENABLE = 0x1F,};
enum $663422C0DB0E896B583B433C91E546EA {NET_BRIDGE_NF_CALL_ARPTABLES = 0x1,NET_BRIDGE_NF_CALL_IPTABLES = 0x2,NET_BRIDGE_NF_CALL_IP6TABLES = 0x3,NET_BRIDGE_NF_FILTER_VLAN_TAGGED = 0x4,NET_BRIDGE_NF_FILTER_PPPOE_TAGGED = 0x5,};
enum $67C416E26EEE13F3D7C2627C9615BC9D {FE_TONEAREST = 0x0,FE_TOWARDZERO = 0x1,FE_UPWARD = 0x2,FE_DOWNWARD = 0x3,};
enum $699D2B6448FB7BE3D7A3A7D1978CAEFE {UL_GETFSIZE = 0x1,UL_SETFSIZE = 0x2,__UL_GETMAXBRK = 0x3,__UL_GETOPENMAX = 0x4,};
struct $6B1E97362D63C40B98094F056DF5AEF5 {Elf32_Word st_name;Elf32_Addr st_value;Elf32_Word st_size;unsigned __int8 st_info;unsigned __int8 st_other;Elf32_Section st_shndx;};
enum $6BE3B5AAB700BFBA3A432F0BBF114207 {FP_NAN = 0x0,FP_INFINITE = 0x1,FP_ZERO = 0x2,FP_SUBNORMAL = 0x3,FP_NORMAL = 0x4,};
struct $6C157D281FCCF3AD18E5920BAFADC6E6 {Elf64_Word sh_name;Elf64_Word sh_type;Elf64_Xword sh_flags;Elf64_Addr sh_addr;Elf64_Off sh_offset;Elf64_Xword sh_size;Elf64_Word sh_link;Elf64_Word sh_info;Elf64_Xword sh_addralign;Elf64_Xword sh_entsize;};
enum $6DE0D61D61F97D6E17ED7D70441829F1 {NET_TR_RIF_TIMEOUT = 0x1,};
union $6DF3DE276417BF858702C9AB9AD460CB {struct $6DF3DE276417BF858702C9AB9AD460CB::$C80D1A5D569DC2D014AF103056E679B8 gt_header;struct $6DF3DE276417BF858702C9AB9AD460CB::$471377A4EE616195936A53166C2E8985 gt_entry;};
struct $6DF3DE276417BF858702C9AB9AD460CB::$471377A4EE616195936A53166C2E8985 {Elf32_Word gt_g_value;Elf32_Word gt_bytes;};
struct $6DF3DE276417BF858702C9AB9AD460CB::$C80D1A5D569DC2D014AF103056E679B8 {Elf32_Word gt_current_g_value;Elf32_Word gt_unused;};
struct $6ECA53571B8FCC125A3088582131FB6E {__fd_mask __fds_bits[32];};
enum $6F917803B5EDAFFE6558D2A0AFE2718B {POLL_IN = 0x1,POLL_OUT = 0x2,POLL_MSG = 0x3,POLL_ERR = 0x4,POLL_PRI = 0x5,POLL_HUP = 0x6,};
enum $71A73B801C2053AED88DB4CC6B3B0947 {EPOLL_CLOEXEC = 0x80000,};
enum $7202B384F533C206A15D8D7EB6DEAA65 {SCM_RIGHTS = 0x1,};
struct $7257EFC214C83636CC1C8B1684490891 {char *next_in;unsigned int avail_in;unsigned int total_in_lo32;unsigned int total_in_hi32;char *next_out;unsigned int avail_out;unsigned int total_out_lo32;unsigned int total_out_hi32;void *state;void *(*bzalloc)(void *, int, int);void (*bzfree)(void *, void *);void *opaque;};
enum $725A2A4D7FFB0E5E03896294E294905E {CTL_KERN = 0x1,CTL_VM = 0x2,CTL_NET = 0x3,CTL_PROC = 0x4,CTL_FS = 0x5,CTL_DEBUG = 0x6,CTL_DEV = 0x7,CTL_BUS = 0x8,CTL_ABI = 0x9,CTL_CPU = 0xA,CTL_ARLAN = 0xFE,CTL_S390DBF = 0x162D,CTL_SUNRPC = 0x1C51,CTL_PM = 0x26AB,CTL_FRV = 0x26AA,};
enum $730196AC61DA5EA630CA6661CED053E5 {PROF_USHORT = 0x0,PROF_UINT = 0x1,PROF_FAST = 0x2,};
enum $730D229031040DFC4AD08BF6392E9798 {IN_CLOEXEC = 0x80000,IN_NONBLOCK = 0x800,};
struct $73FDACF34BD773846371F264A3DF2411 {unsigned int dlci;char master[16];};
struct $75FD820D0CE6C215ACE04A8FAA270A6D {Elf64_Half vd_version;Elf64_Half vd_flags;Elf64_Half vd_ndx;Elf64_Half vd_cnt;Elf64_Word vd_hash;Elf64_Word vd_aux;Elf64_Word vd_next;};
enum $77AA6B3C94CF91510975FAEAA78CF27F {NET_ROSE_RESTART_REQUEST_TIMEOUT = 0x1,NET_ROSE_CALL_REQUEST_TIMEOUT = 0x2,NET_ROSE_RESET_REQUEST_TIMEOUT = 0x3,NET_ROSE_CLEAR_REQUEST_TIMEOUT = 0x4,NET_ROSE_ACK_HOLD_BACK_TIMEOUT = 0x5,NET_ROSE_ROUTING_CONTROL = 0x6,NET_ROSE_LINK_FAIL_TIMEOUT = 0x7,NET_ROSE_MAX_VCS = 0x8,NET_ROSE_WINDOW_SIZE = 0x9,NET_ROSE_NO_ACTIVITY_TIMEOUT = 0xA,};
enum $7AB5A752696E25D059A83A920E9EDD46 {DEV_MAC_HID_KEYBOARD_SENDS_LINUX_KEYCODES = 0x1,DEV_MAC_HID_KEYBOARD_LOCK_KEYCODES = 0x2,DEV_MAC_HID_MOUSE_BUTTON_EMULATION = 0x3,DEV_MAC_HID_MOUSE_BUTTON2_KEYCODE = 0x4,DEV_MAC_HID_MOUSE_BUTTON3_KEYCODE = 0x5,DEV_MAC_HID_ADB_MOUSE_SENDS_KEYCODES = 0x6,};
enum $7ABD65A78F7D2F9673D05828F7FBDF1E {MNT_FORCE = 0x1,MNT_DETACH = 0x2,MNT_EXPIRE = 0x4,UMOUNT_NOFOLLOW = 0x8,};
enum $7B4937F8288E0A2632DB0D8517829904 {NET_LLC_STATION_ACK_TIMEOUT = 0x1,};
union $7B6D3CF7C92E6402FF2DDB4E46F022F4 {char __size[8];int __align;};
enum $7BA0AAB70F107C573DDBF8D470C03EEA {ST_RDONLY = 0x1,ST_NOSUID = 0x2,};
enum $7C6A1E1ACDF4A97E77CE90783425BCA4 {CLD_EXITED = 0x1,CLD_KILLED = 0x2,CLD_DUMPED = 0x3,CLD_TRAPPED = 0x4,CLD_STOPPED = 0x5,CLD_CONTINUED = 0x6,};
enum $7D8899B18D60224BD7DC00379072D77E {CTL_BUS_ISA = 0x1,};
enum $7E268016F40A063312945FF1D605C66E {PTHREAD_MUTEX_TIMED_NP = 0x0,PTHREAD_MUTEX_RECURSIVE_NP = 0x1,PTHREAD_MUTEX_ERRORCHECK_NP = 0x2,PTHREAD_MUTEX_ADAPTIVE_NP = 0x3,PTHREAD_MUTEX_NORMAL = 0x0,PTHREAD_MUTEX_RECURSIVE = 0x1,PTHREAD_MUTEX_ERRORCHECK = 0x2,PTHREAD_MUTEX_DEFAULT = 0x0,};
enum $7E6CC9AB302A52DC230FBF2181C351A3 {NET_LLC2 = 0x1,NET_LLC_STATION = 0x2,};
struct $7F1527F4980126EB9203A44DB3E05AC8 {u_char vers;u_char type;u_char answer;u_char pad;u_int32_t id_num;struct osockaddr addr;struct osockaddr ctl_addr;int32_t pid;char l_name[12];char r_name[12];char r_tty[16];};
enum $806899048DC823723887265795521570 {NET_IRDA_DISCOVERY = 0x1,NET_IRDA_DEVNAME = 0x2,NET_IRDA_DEBUG = 0x3,NET_IRDA_FAST_POLL = 0x4,NET_IRDA_DISCOVERY_SLOTS = 0x5,NET_IRDA_DISCOVERY_TIMEOUT = 0x6,NET_IRDA_SLOT_TIMEOUT = 0x7,NET_IRDA_MAX_BAUD_RATE = 0x8,NET_IRDA_MIN_TX_TURN_TIME = 0x9,NET_IRDA_MAX_TX_DATA_SIZE = 0xA,NET_IRDA_MAX_TX_WINDOW = 0xB,NET_IRDA_MAX_NOREPLY_TIME = 0xC,NET_IRDA_WARN_NOREPLY_TIME = 0xD,NET_IRDA_LAP_KEEPALIVE_TIME = 0xE,};
enum $807353C2561437682B85CDC20D8F25D2 {RANDOM_POOLSIZE = 0x1,RANDOM_ENTROPY_COUNT = 0x2,RANDOM_READ_THRESH = 0x3,RANDOM_WRITE_THRESH = 0x4,RANDOM_BOOT_ID = 0x5,RANDOM_UUID = 0x6,};
enum $80863383835932AA27788F4BC43FF174 {NET_IPV4_FORWARD = 0x8,NET_IPV4_DYNADDR = 0x9,NET_IPV4_CONF = 0x10,NET_IPV4_NEIGH = 0x11,NET_IPV4_ROUTE = 0x12,NET_IPV4_FIB_HASH = 0x13,NET_IPV4_NETFILTER = 0x14,NET_IPV4_TCP_TIMESTAMPS = 0x21,NET_IPV4_TCP_WINDOW_SCALING = 0x22,NET_IPV4_TCP_SACK = 0x23,NET_IPV4_TCP_RETRANS_COLLAPSE = 0x24,NET_IPV4_DEFAULT_TTL = 0x25,NET_IPV4_AUTOCONFIG = 0x26,NET_IPV4_NO_PMTU_DISC = 0x27,NET_IPV4_TCP_SYN_RETRIES = 0x28,NET_IPV4_IPFRAG_HIGH_THRESH = 0x29,NET_IPV4_IPFRAG_LOW_THRESH = 0x2A,NET_IPV4_IPFRAG_TIME = 0x2B,NET_IPV4_TCP_MAX_KA_PROBES = 0x2C,NET_IPV4_TCP_KEEPALIVE_TIME = 0x2D,NET_IPV4_TCP_KEEPALIVE_PROBES = 0x2E,NET_IPV4_TCP_RETRIES1 = 0x2F,NET_IPV4_TCP_RETRIES2 = 0x30,NET_IPV4_TCP_FIN_TIMEOUT = 0x31,NET_IPV4_IP_MASQ_DEBUG = 0x32,NET_TCP_SYNCOOKIES = 0x33,NET_TCP_STDURG = 0x34,NET_TCP_RFC1337 = 0x35,NET_TCP_SYN_TAILDROP = 0x36,NET_TCP_MAX_SYN_BACKLOG = 0x37,NET_IPV4_LOCAL_PORT_RANGE = 0x38,NET_IPV4_ICMP_ECHO_IGNORE_ALL = 0x39,NET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS = 0x3A,NET_IPV4_ICMP_SOURCEQUENCH_RATE = 0x3B,NET_IPV4_ICMP_DESTUNREACH_RATE = 0x3C,NET_IPV4_ICMP_TIMEEXCEED_RATE = 0x3D,NET_IPV4_ICMP_PARAMPROB_RATE = 0x3E,NET_IPV4_ICMP_ECHOREPLY_RATE = 0x3F,NET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES = 0x40,NET_IPV4_IGMP_MAX_MEMBERSHIPS = 0x41,NET_TCP_TW_RECYCLE = 0x42,NET_IPV4_ALWAYS_DEFRAG = 0x43,NET_IPV4_TCP_KEEPALIVE_INTVL = 0x44,NET_IPV4_INET_PEER_THRESHOLD = 0x45,NET_IPV4_INET_PEER_MINTTL = 0x46,NET_IPV4_INET_PEER_MAXTTL = 0x47,NET_IPV4_INET_PEER_GC_MINTIME = 0x48,NET_IPV4_INET_PEER_GC_MAXTIME = 0x49,NET_TCP_ORPHAN_RETRIES = 0x4A,NET_TCP_ABORT_ON_OVERFLOW = 0x4B,NET_TCP_SYNACK_RETRIES = 0x4C,NET_TCP_MAX_ORPHANS = 0x4D,NET_TCP_MAX_TW_BUCKETS = 0x4E,NET_TCP_FACK = 0x4F,NET_TCP_REORDERING = 0x50,NET_TCP_ECN = 0x51,NET_TCP_DSACK = 0x52,NET_TCP_MEM = 0x53,NET_TCP_WMEM = 0x54,NET_TCP_RMEM = 0x55,NET_TCP_APP_WIN = 0x56,NET_TCP_ADV_WIN_SCALE = 0x57,NET_IPV4_NONLOCAL_BIND = 0x58,NET_IPV4_ICMP_RATELIMIT = 0x59,NET_IPV4_ICMP_RATEMASK = 0x5A,NET_TCP_TW_REUSE = 0x5B,NET_TCP_FRTO = 0x5C,NET_TCP_LOW_LATENCY = 0x5D,NET_IPV4_IPFRAG_SECRET_INTERVAL = 0x5E,NET_IPV4_IGMP_MAX_MSF = 0x60,NET_TCP_NO_METRICS_SAVE = 0x61,NET_TCP_DEFAULT_WIN_SCALE = 0x69,NET_TCP_MODERATE_RCVBUF = 0x6A,NET_TCP_TSO_WIN_DIVISOR = 0x6B,NET_TCP_BIC_BETA = 0x6C,NET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR = 0x6D,NET_TCP_CONG_CONTROL = 0x6E,NET_TCP_ABC = 0x6F,NET_IPV4_IPFRAG_MAX_DIST = 0x70,NET_TCP_MTU_PROBING = 0x71,NET_TCP_BASE_MSS = 0x72,NET_IPV4_TCP_WORKAROUND_SIGNED_WINDOWS = 0x73,NET_TCP_DMA_COPYBREAK = 0x74,NET_TCP_SLOW_START_AFTER_IDLE = 0x75,NET_CIPSOV4_CACHE_ENABLE = 0x76,NET_CIPSOV4_CACHE_BUCKET_SIZE = 0x77,NET_CIPSOV4_RBM_OPTFMT = 0x78,NET_CIPSOV4_RBM_STRICTVALID = 0x79,NET_TCP_AVAIL_CONG_CONTROL = 0x7A,NET_TCP_ALLOWED_CONG_CONTROL = 0x7B,NET_TCP_MAX_SSTHRESH = 0x7C,NET_TCP_FRTO_RESPONSE = 0x7D,};
enum $8121F3393B56EF45A4608DC145F43305 {DEV_CDROM_INFO = 0x1,DEV_CDROM_AUTOCLOSE = 0x2,DEV_CDROM_AUTOEJECT = 0x3,DEV_CDROM_DEBUG = 0x4,DEV_CDROM_LOCK = 0x5,DEV_CDROM_CHECK_MEDIA = 0x6,};
enum $830CFE13F870B9281FC8505551EB61DA {MS_RDONLY = 0x1,MS_NOSUID = 0x2,MS_NODEV = 0x4,MS_NOEXEC = 0x8,MS_SYNCHRONOUS = 0x10,MS_REMOUNT = 0x20,MS_MANDLOCK = 0x40,MS_DIRSYNC = 0x80,MS_NOATIME = 0x400,MS_NODIRATIME = 0x800,MS_BIND = 0x1000,MS_MOVE = 0x2000,MS_REC = 0x4000,MS_SILENT = 0x8000,MS_POSIXACL = 0x10000,MS_UNBINDABLE = 0x20000,MS_PRIVATE = 0x40000,MS_SLAVE = 0x80000,MS_SHARED = 0x100000,MS_RELATIME = 0x200000,MS_KERNMOUNT = 0x400000,MS_I_VERSION = 0x800000,MS_STRICTATIME = 0x1000000,MS_ACTIVE = 0x40000000,MS_NOUSER = 0x80000000,};
enum $86DEB66C19F24B8F0BC3CEFDC19B8707 {VM_UNUSED1 = 0x1,VM_UNUSED2 = 0x2,VM_UNUSED3 = 0x3,VM_UNUSED4 = 0x4,VM_OVERCOMMIT_MEMORY = 0x5,VM_UNUSED5 = 0x6,VM_UNUSED7 = 0x7,VM_UNUSED8 = 0x8,VM_UNUSED9 = 0x9,VM_PAGE_CLUSTER = 0xA,VM_DIRTY_BACKGROUND = 0xB,VM_DIRTY_RATIO = 0xC,VM_DIRTY_WB_CS = 0xD,VM_DIRTY_EXPIRE_CS = 0xE,VM_NR_PDFLUSH_THREADS = 0xF,VM_OVERCOMMIT_RATIO = 0x10,VM_PAGEBUF = 0x11,VM_HUGETLB_PAGES = 0x12,VM_SWAPPINESS = 0x13,VM_LOWMEM_RESERVE_RATIO = 0x14,VM_MIN_FREE_KBYTES = 0x15,VM_MAX_MAP_COUNT = 0x16,VM_LAPTOP_MODE = 0x17,VM_BLOCK_DUMP = 0x18,VM_HUGETLB_GROUP = 0x19,VM_VFS_CACHE_PRESSURE = 0x1A,VM_LEGACY_VA_LAYOUT = 0x1B,VM_SWAP_TOKEN_TIMEOUT = 0x1C,VM_DROP_PAGECACHE = 0x1D,VM_PERCPU_PAGELIST_FRACTION = 0x1E,VM_ZONE_RECLAIM_MODE = 0x1F,VM_MIN_UNMAPPED = 0x20,VM_PANIC_ON_OOM = 0x21,VM_VDSO_ENABLED = 0x22,VM_MIN_SLAB = 0x23,};
enum $875DC6519C1A1D10FD23227495805A2A {PER_LINUX = 0x0,PER_LINUX_32BIT = 0x800000,PER_SVR4 = 0x4100001,PER_SVR3 = 0x5000002,PER_SCOSVR3 = 0x7000003,PER_OSR5 = 0x6000003,PER_WYSEV386 = 0x5000004,PER_ISCR4 = 0x4000005,PER_BSD = 0x6,PER_SUNOS = 0x4000006,PER_XENIX = 0x5000007,PER_LINUX32 = 0x8,PER_LINUX32_3GB = 0x8000008,PER_IRIX32 = 0x4000009,PER_IRIXN32 = 0x400000A,PER_IRIX64 = 0x400000B,PER_RISCOS = 0xC,PER_SOLARIS = 0x400000D,PER_UW7 = 0x410000E,PER_OSF4 = 0xF,PER_HPUX = 0x10,PER_MASK = 0xFF,};
struct $880211171E610BEC08A41169F91F4D60 {unsigned __int8 cmd;char nr_args;char nr_returns;unsigned __int8 data[30];};
enum $8823E4385667F399442D029ECC89BADC {MM_HARD = 0x1,MM_SOFT = 0x2,MM_FIRM = 0x4,MM_APPL = 0x8,MM_UTIL = 0x10,MM_OPSYS = 0x20,MM_RECOVER = 0x40,MM_NRECOV = 0x80,MM_PRINT = 0x100,MM_CONSOLE = 0x200,};
enum $891529C55A3D7F6C466AE0BA608A35EA {P_ALL = 0x0,P_PID = 0x1,P_PGID = 0x2,};
enum $89FB60EA18EC68E58342D0F505790FD5 {TD_THR_ANY_TYPE = 0x0,TD_THR_USER = 0x1,TD_THR_SYSTEM = 0x2,};
struct $8A4D2DD0535D3740C9D9302B62B9E8F3 {Elf32_Word n_namesz;Elf32_Word n_descsz;Elf32_Word n_type;};
struct $8AF8D50F7459E989F83B822632060AA0 {unsigned __int8 kind;unsigned __int8 size;Elf32_Section section;Elf32_Word info;};
enum $8B8F331936A9C3786664C6159BA2308F {REG_ENOSYS = 0xFFFFFFFF,REG_NOERROR = 0x0,REG_NOMATCH = 0x1,REG_BADPAT = 0x2,REG_ECOLLATE = 0x3,REG_ECTYPE = 0x4,REG_EESCAPE = 0x5,REG_ESUBREG = 0x6,REG_EBRACK = 0x7,REG_EPAREN = 0x8,REG_EBRACE = 0x9,REG_BADBR = 0xA,REG_ERANGE = 0xB,REG_ESPACE = 0xC,REG_BADRPT = 0xD,REG_EEND = 0xE,REG_ESIZE = 0xF,REG_ERPAREN = 0x10,};
enum $8CDE7E6A1AF55BBB9FBF3C663AC88F59 {__ISwupper = 0x0,__ISwlower = 0x1,__ISwalpha = 0x2,__ISwdigit = 0x3,__ISwxdigit = 0x4,__ISwspace = 0x5,__ISwprint = 0x6,__ISwgraph = 0x7,__ISwblank = 0x8,__ISwcntrl = 0x9,__ISwpunct = 0xA,__ISwalnum = 0xB,_ISwupper = 0x1,_ISwlower = 0x2,_ISwalpha = 0x4,_ISwdigit = 0x8,_ISwxdigit = 0x10,_ISwspace = 0x20,_ISwprint = 0x40,_ISwgraph = 0x80,_ISwblank = 0x100,_ISwcntrl = 0x200,_ISwpunct = 0x400,_ISwalnum = 0x800,};
enum $8DB803BC5513738C8EA3309052018F73 {NET_DECNET_NODE_TYPE = 0x1,NET_DECNET_NODE_ADDRESS = 0x2,NET_DECNET_NODE_NAME = 0x3,NET_DECNET_DEFAULT_DEVICE = 0x4,NET_DECNET_TIME_WAIT = 0x5,NET_DECNET_DN_COUNT = 0x6,NET_DECNET_DI_COUNT = 0x7,NET_DECNET_DR_COUNT = 0x8,NET_DECNET_DST_GC_INTERVAL = 0x9,NET_DECNET_CONF = 0xA,NET_DECNET_NO_FC_MAX_CWND = 0xB,NET_DECNET_MEM = 0xC,NET_DECNET_RMEM = 0xD,NET_DECNET_WMEM = 0xE,NET_DECNET_DEBUG_LEVEL = 0xFF,};
enum $8DD5D767F670E8258E61E02344E157E6 {NET_NEIGH_MCAST_SOLICIT = 0x1,NET_NEIGH_UCAST_SOLICIT = 0x2,NET_NEIGH_APP_SOLICIT = 0x3,NET_NEIGH_RETRANS_TIME = 0x4,NET_NEIGH_REACHABLE_TIME = 0x5,NET_NEIGH_DELAY_PROBE_TIME = 0x6,NET_NEIGH_GC_STALE_TIME = 0x7,NET_NEIGH_UNRES_QLEN = 0x8,NET_NEIGH_PROXY_QLEN = 0x9,NET_NEIGH_ANYCAST_DELAY = 0xA,NET_NEIGH_PROXY_DELAY = 0xB,NET_NEIGH_LOCKTIME = 0xC,NET_NEIGH_GC_INTERVAL = 0xD,NET_NEIGH_GC_THRESH1 = 0xE,NET_NEIGH_GC_THRESH2 = 0xF,NET_NEIGH_GC_THRESH3 = 0x10,NET_NEIGH_RETRANS_TIME_MS = 0x11,NET_NEIGH_REACHABLE_TIME_MS = 0x12,};
struct $8E3F17DF06268256B33C950219C36638 {Elf64_Sxword d_tag;union $8E3F17DF06268256B33C950219C36638::$933121F4FA1889599F702E16603DBB9F d_un;};
union $8E3F17DF06268256B33C950219C36638::$933121F4FA1889599F702E16603DBB9F {Elf64_Xword d_val;Elf64_Addr d_ptr;};
enum $9051D8B3F8B003A45CF2C181583131A8 {SEGV_MAPERR = 0x1,SEGV_ACCERR = 0x2,};
enum $921B804C5CB7E03958A5E43A5656BF3D {DEV_IPMI_POWEROFF_POWERCYCLE = 0x1,};
struct $9339EAE8E1B03FBFE9037CE1CB7A5274 {Elf32_Half version;unsigned __int8 isa_level;unsigned __int8 isa_rev;unsigned __int8 gpr_size;unsigned __int8 cpr1_size;unsigned __int8 cpr2_size;unsigned __int8 fp_abi;Elf32_Word isa_ext;Elf32_Word ases;Elf32_Word flags1;Elf32_Word flags2;};
enum $94296112375BC73CC9F9E22731646721 {NET_CORE = 0x1,NET_ETHER = 0x2,NET_802 = 0x3,NET_UNIX = 0x4,NET_IPV4 = 0x5,NET_IPX = 0x6,NET_ATALK = 0x7,NET_NETROM = 0x8,NET_AX25 = 0x9,NET_BRIDGE = 0xA,NET_ROSE = 0xB,NET_IPV6 = 0xC,NET_X25 = 0xD,NET_TR = 0xE,NET_DECNET = 0xF,NET_ECONET = 0x10,NET_SCTP = 0x11,NET_LLC = 0x12,NET_NETFILTER = 0x13,NET_DCCP = 0x14,NET_IRDA = 0x19C,};
struct $96852D299A3BC18B35313C48EFA48634 {unsigned int clock_rate;unsigned int clock_type;unsigned __int16 loopback;unsigned int slot_map;};
struct $9722585E737591D9DBBFC1CA80083F53 {int __val[2];};
struct $979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
enum $9C31C63761D5D352F3EF8F6380D9A3A0 {NET_IPV6_CONF = 0x10,NET_IPV6_NEIGH = 0x11,NET_IPV6_ROUTE = 0x12,NET_IPV6_ICMP = 0x13,NET_IPV6_BINDV6ONLY = 0x14,NET_IPV6_IP6FRAG_HIGH_THRESH = 0x15,NET_IPV6_IP6FRAG_LOW_THRESH = 0x16,NET_IPV6_IP6FRAG_TIME = 0x17,NET_IPV6_IP6FRAG_SECRET_INTERVAL = 0x18,NET_IPV6_MLD_MAX_MSF = 0x19,};
enum $9CD73F9531C3235FCD002958ECF24B00 {MM_NOSEV = 0x0,MM_HALT = 0x1,MM_ERROR = 0x2,MM_WARNING = 0x3,MM_INFO = 0x4,};
struct $9D4C19DBF70DA60826A3BCA6F2F847F6 {__size_t gl_pathc;char **gl_pathv;__size_t gl_offs;int gl_flags;void (*gl_closedir)(void *);void *(*gl_readdir)(void *);void *(*gl_opendir)(const char *);int (*gl_lstat)(const char *, void *);int (*gl_stat)(const char *, void *);};
struct $9E389EF8DB18C75445DC45CE7C2FFB9B {Elf32_Sword d_tag;union $9E389EF8DB18C75445DC45CE7C2FFB9B::$2798575F521600C1E26DD161E22996D8 d_un;};
union $9E389EF8DB18C75445DC45CE7C2FFB9B::$2798575F521600C1E26DD161E22996D8 {Elf32_Word d_val;Elf32_Addr d_ptr;};
struct $9E637E3D30D4EE6DC2F7DCF094554036 {__off_t __pos;__mbstate_t __state;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$002955E8B5DE3B92E30DFEF7AB65BFE2 {__pid_t si_pid;__uid_t si_uid;sigval_t si_sigval;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$353EAF26536A4016665766004ADC0BD6 {__pid_t si_pid;__uid_t si_uid;int si_status;__clock_t si_utime;__clock_t si_stime;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$4B29161E04CAD4BCDD788B201A5E8E5E {void *_call_addr;int _syscall;unsigned int _arch;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$534EC22A0813C1325C3E7D3262B5A8D3 {int si_band;int si_fd;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$5653F2BCC1F73C61D2CE0A4503D71747 {void *si_addr;__int16 si_addr_lsb;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$DDF278A5B88F81FEC3CBEE828E282CB3 {__pid_t si_pid;__uid_t si_uid;};
struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$F43D85AC31CEBD8CC07B08111ABDF065 {int si_tid;int si_overrun;sigval_t si_sigval;};
union $::__pthread_mutex_s::$0BE44AECE8C30C3ABE12FDB11D0C67FE {struct $::__pthread_mutex_s::$0BE44AECE8C30C3ABE12FDB11D0C67FE::$C8E94AFE4B154C8BA903815D3D8DE6A1 __elision_data;__pthread_slist_t __list;};
struct $::__pthread_mutex_s::$0BE44AECE8C30C3ABE12FDB11D0C67FE::$C8E94AFE4B154C8BA903815D3D8DE6A1 {__int16 __espins;__int16 __elision;};
struct $A0565235DB0A025ED98270EC8F0003BF {Elf32_Half vd_version;Elf32_Half vd_flags;Elf32_Half vd_ndx;Elf32_Half vd_cnt;Elf32_Word vd_hash;Elf32_Word vd_aux;Elf32_Word vd_next;};
enum $A286418E2F38AC97C4911D6D871DF1E8 {Val_GNU_MIPS_ABI_FP_ANY = 0x0,Val_GNU_MIPS_ABI_FP_DOUBLE = 0x1,Val_GNU_MIPS_ABI_FP_SINGLE = 0x2,Val_GNU_MIPS_ABI_FP_SOFT = 0x3,Val_GNU_MIPS_ABI_FP_OLD_64 = 0x4,Val_GNU_MIPS_ABI_FP_XX = 0x5,Val_GNU_MIPS_ABI_FP_64 = 0x6,Val_GNU_MIPS_ABI_FP_64A = 0x7,Val_GNU_MIPS_ABI_FP_MAX = 0x7,};
enum $A2F04AFED0D759E95510362442EAC31A {NET_IPV6_ICMP_RATELIMIT = 0x1,};
struct $A313ED2DE25BE046A874D492CFBD731F {Elf64_Addr r_offset;Elf64_Xword r_info;};
struct $A46BFD4B6B8C284ED478D587B5722CAB {Elf64_Word vna_hash;Elf64_Half vna_flags;Elf64_Half vna_other;Elf64_Word vna_name;Elf64_Word vna_next;};
enum $A4FC3F986F398A5CBEAD24293CBFE469 {_PC_LINK_MAX = 0x0,_PC_MAX_CANON = 0x1,_PC_MAX_INPUT = 0x2,_PC_NAME_MAX = 0x3,_PC_PATH_MAX = 0x4,_PC_PIPE_BUF = 0x5,_PC_CHOWN_RESTRICTED = 0x6,_PC_NO_TRUNC = 0x7,_PC_VDISABLE = 0x8,_PC_SYNC_IO = 0x9,_PC_ASYNC_IO = 0xA,_PC_PRIO_IO = 0xB,_PC_SOCK_MAXBUF = 0xC,_PC_FILESIZEBITS = 0xD,_PC_REC_INCR_XFER_SIZE = 0xE,_PC_REC_MAX_XFER_SIZE = 0xF,_PC_REC_MIN_XFER_SIZE = 0x10,_PC_REC_XFER_ALIGN = 0x11,_PC_ALLOC_SIZE_MIN = 0x12,_PC_SYMLINK_MAX = 0x13,_PC_2_SYMLINKS = 0x14,};
struct $A6F5D22C47870C9C34E13B26D36736E1 {unsigned __int32 id : 16;unsigned __int32 qr : 1;unsigned __int32 opcode : 4;unsigned __int32 aa : 1;unsigned __int32 tc : 1;unsigned __int32 rd : 1;unsigned __int32 ra : 1;unsigned __int32 unused : 1;unsigned __int32 ad : 1;unsigned __int32 cd : 1;unsigned __int32 rcode : 4;unsigned __int32 qdcount : 16;unsigned __int32 ancount : 16;unsigned __int32 nscount : 16;unsigned __int32 arcount : 16;};
enum $A98D0825AA235C940E5A466593BCCCF2 {GMON_TAG_TIME_HIST = 0x0,GMON_TAG_CG_ARC = 0x1,GMON_TAG_BB_COUNT = 0x2,};
struct $AAECD496E21460385AB9540869BF9C78 {Elf32_Addr r_offset;Elf32_Word r_info;Elf32_Sword r_addend;};
struct $AC1F0727205AA235F31FA7E4FBAB6931 {__int64 quot;__int64 rem;};
enum $ACFC05DFBD69156C0388855EBEA4D33B {NET_DECNET_CONF_DEV_PRIORITY = 0x1,NET_DECNET_CONF_DEV_T1 = 0x2,NET_DECNET_CONF_DEV_T2 = 0x3,NET_DECNET_CONF_DEV_T3 = 0x4,NET_DECNET_CONF_DEV_FORWARDING = 0x5,NET_DECNET_CONF_DEV_BLKSIZE = 0x6,NET_DECNET_CONF_DEV_STATE = 0x7,};
enum $AE3329FEB427F74B2DA967177CE854FD {NET_ATALK_AARP_EXPIRY_TIME = 0x1,NET_ATALK_AARP_TICK_TIME = 0x2,NET_ATALK_AARP_RETRANSMIT_LIMIT = 0x3,NET_ATALK_AARP_RESOLVE_TIME = 0x4,};
enum $B017515FC8405800518D7337EC8ACF8A {FS_DQ_LOOKUPS = 0x1,FS_DQ_DROPS = 0x2,FS_DQ_READS = 0x3,FS_DQ_WRITES = 0x4,FS_DQ_CACHE_HITS = 0x5,FS_DQ_ALLOCATED = 0x6,FS_DQ_FREE = 0x7,FS_DQ_SYNCS = 0x8,FS_DQ_WARNINGS = 0x9,};
enum $B1BBC3EB11550C1AA81C57463DE5079D {NET_DCCP_DEFAULT = 0x1,};
struct $B2D9AD79CDE183526F23B15AA0F08AFD {GDBM_FILE file;int dirfd;datum _dbm_memory;char *_dbm_fetch_val;gdbm_error _dbm_errno;};
enum $B34E6FF94D606ADE7B24EB7AB8A02C61 {SHUT_RD = 0x0,SHUT_WR = 0x1,SHUT_RDWR = 0x2,};
struct $B4C695B0250A38B82AFFE65B8304A51A {__int16 __flags;pid_t __pgrp;sigset_t __sd;sigset_t __ss;struct sched_param __sp;int __policy;int __pad[16];};
enum $B66645BB19D3E41D07C841CC99076606 {TD_OK = 0x0,TD_ERR = 0x1,TD_NOTHR = 0x2,TD_NOSV = 0x3,TD_NOLWP = 0x4,TD_BADPH = 0x5,TD_BADTH = 0x6,TD_BADSH = 0x7,TD_BADTA = 0x8,TD_BADKEY = 0x9,TD_NOMSG = 0xA,TD_NOFPREGS = 0xB,TD_NOLIBTHREAD = 0xC,TD_NOEVENT = 0xD,TD_NOCAPAB = 0xE,TD_DBERR = 0xF,TD_NOAPLIC = 0x10,TD_NOTSD = 0x11,TD_MALLOC = 0x12,TD_PARTIALREG = 0x13,TD_NOXREGS = 0x14,TD_TLSDEFER = 0x15,TD_NOTALLOC = 0x15,TD_VERSION = 0x16,TD_NOTLS = 0x17,};
struct $BAC7E67B0C2C05C40DFF67087D59816E {unsigned int t391;unsigned int t392;unsigned int n391;unsigned int n392;unsigned int n393;unsigned __int16 lmi;unsigned __int16 dce;};
struct $BC4B0D515307F8380CCAE7BF44CFA97C {Elf32_Word ri_gprmask;Elf32_Word ri_cprmask[4];Elf32_Sword ri_gp_value;};
enum $BCBBA9AC94D25DC3586E84CD32717A4D {IF_OPER_UNKNOWN = 0x0,IF_OPER_NOTPRESENT = 0x1,IF_OPER_DOWN = 0x2,IF_OPER_LOWERLAYERDOWN = 0x3,IF_OPER_TESTING = 0x4,IF_OPER_DORMANT = 0x5,IF_OPER_UP = 0x6,};
enum $BCDA133813398945F6840621756ADB21 {NET_PROTO_CONF_ALL = 0xFFFFFFFE,NET_PROTO_CONF_DEFAULT = 0xFFFFFFFD,};
struct $BD619B2F7AFF7BA6F06506AA27210664 {regoff_t rm_so;regoff_t rm_eo;};
enum $BFC3F34F6952027A5BE2BDFB69B3FD82 {ABI_DEFHANDLER_COFF = 0x1,ABI_DEFHANDLER_ELF = 0x2,ABI_DEFHANDLER_LCALL7 = 0x3,ABI_DEFHANDLER_LIBCSO = 0x4,ABI_TRACE = 0x5,ABI_FAKE_UTSNAME = 0x6,};
enum $C24571D27ADEE20044434E1DF48F13D7 {PTHREAD_INHERIT_SCHED = 0x0,PTHREAD_EXPLICIT_SCHED = 0x1,};
enum $C3545A95CE9507BE79C6B153CD400777 {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_CTRUNC = 0x8,MSG_PROXY = 0x10,MSG_TRUNC = 0x20,MSG_DONTWAIT = 0x40,MSG_EOR = 0x80,MSG_WAITALL = 0x100,MSG_FIN = 0x200,MSG_SYN = 0x400,MSG_CONFIRM = 0x800,MSG_RST = 0x1000,MSG_ERRQUEUE = 0x2000,MSG_NOSIGNAL = 0x4000,MSG_MORE = 0x8000,MSG_WAITFORONE = 0x10000,MSG_FASTOPEN = 0x20000000,MSG_CMSG_CLOEXEC = 0x40000000,};
enum $C41CDAA8564673A221AD080C882502C2 {NET_LLC2_ACK_TIMEOUT = 0x1,NET_LLC2_P_TIMEOUT = 0x2,NET_LLC2_REJ_TIMEOUT = 0x3,NET_LLC2_BUSY_TIMEOUT = 0x4,};
enum $C4D2990799738055A4FAFA16DB7CE68F {DT_UNKNOWN = 0x0,DT_FIFO = 0x1,DT_CHR = 0x2,DT_DIR = 0x4,DT_BLK = 0x6,DT_REG = 0x8,DT_LNK = 0xA,DT_SOCK = 0xC,DT_WHT = 0xE,};
enum $C63F81BF27515BE59861789B83243C14 {KERN_OSTYPE = 0x1,KERN_OSRELEASE = 0x2,KERN_OSREV = 0x3,KERN_VERSION = 0x4,KERN_SECUREMASK = 0x5,KERN_PROF = 0x6,KERN_NODENAME = 0x7,KERN_DOMAINNAME = 0x8,KERN_PANIC = 0xF,KERN_REALROOTDEV = 0x10,KERN_SPARC_REBOOT = 0x15,KERN_CTLALTDEL = 0x16,KERN_PRINTK = 0x17,KERN_NAMETRANS = 0x18,KERN_PPC_HTABRECLAIM = 0x19,KERN_PPC_ZEROPAGED = 0x1A,KERN_PPC_POWERSAVE_NAP = 0x1B,KERN_MODPROBE = 0x1C,KERN_SG_BIG_BUFF = 0x1D,KERN_ACCT = 0x1E,KERN_PPC_L2CR = 0x1F,KERN_RTSIGNR = 0x20,KERN_RTSIGMAX = 0x21,KERN_SHMMAX = 0x22,KERN_MSGMAX = 0x23,KERN_MSGMNB = 0x24,KERN_MSGPOOL = 0x25,KERN_SYSRQ = 0x26,KERN_MAX_THREADS = 0x27,KERN_RANDOM = 0x28,KERN_SHMALL = 0x29,KERN_MSGMNI = 0x2A,KERN_SEM = 0x2B,KERN_SPARC_STOP_A = 0x2C,KERN_SHMMNI = 0x2D,KERN_OVERFLOWUID = 0x2E,KERN_OVERFLOWGID = 0x2F,KERN_SHMPATH = 0x30,KERN_HOTPLUG = 0x31,KERN_IEEE_EMULATION_WARNINGS = 0x32,KERN_S390_USER_DEBUG_LOGGING = 0x33,KERN_CORE_USES_PID = 0x34,KERN_TAINTED = 0x35,KERN_CADPID = 0x36,KERN_PIDMAX = 0x37,KERN_CORE_PATTERN = 0x38,KERN_PANIC_ON_OOPS = 0x39,KERN_HPPA_PWRSW = 0x3A,KERN_HPPA_UNALIGNED = 0x3B,KERN_PRINTK_RATELIMIT = 0x3C,KERN_PRINTK_RATELIMIT_BURST = 0x3D,KERN_PTY = 0x3E,KERN_NGROUPS_MAX = 0x3F,KERN_SPARC_SCONS_PWROFF = 0x40,KERN_HZ_TIMER = 0x41,KERN_UNKNOWN_NMI_PANIC = 0x42,KERN_BOOTLOADER_TYPE = 0x43,KERN_RANDOMIZE = 0x44,KERN_SETUID_DUMPABLE = 0x45,KERN_SPIN_RETRY = 0x46,KERN_ACPI_VIDEO_FLAGS = 0x47,KERN_IA64_UNALIGNED = 0x48,KERN_COMPAT_LOG = 0x49,KERN_MAX_LOCK_DEPTH = 0x4A,KERN_NMI_WATCHDOG = 0x4B,KERN_PANIC_ON_NMI = 0x4C,KERN_PANIC_ON_WARN = 0x4D,};
enum $C68DBFABEFD6F7DD662F0678857B890B {DEV_PARPORT_DEFAULT_TIMESLICE = 0x1,DEV_PARPORT_DEFAULT_SPINTIME = 0x2,};
struct $C772EEB8BDF2D9B03BC2113DCD14FF9B {Elf32_Addr r_offset;Elf32_Word r_info;};
enum $C8C7928264C653DC751C42DB42AAB11F {FTW_F = 0x0,FTW_D = 0x1,FTW_DNR = 0x2,FTW_NS = 0x3,FTW_SL = 0x4,};
struct $CA18D99C52BF47BA3661A7BE783B3F23 {Elf64_Word n_namesz;Elf64_Word n_descsz;Elf64_Word n_type;};
enum $CCC31958CF2403C4DC26E468BC116719 {SI_ASYNCNL = 0xFFFFFFC4,SI_TKILL = 0xFFFFFFFA,SI_SIGIO = 0xFFFFFFFB,SI_ASYNCIO = 0xFFFFFFFC,SI_MESGQ = 0xFFFFFFFD,SI_TIMER = 0xFFFFFFFE,SI_QUEUE = 0xFFFFFFFF,SI_USER = 0x0,SI_KERNEL = 0x80,};
struct $CE845F89F9878C873199BB4116C12DE5 {Elf32_Xword m_value;Elf32_Word m_info;Elf32_Word m_poffset;Elf32_Half m_repeat;Elf32_Half m_stride;};
enum $CF08557F06B5A10A95294072015EB5DD {NET_CORE_WMEM_MAX = 0x1,NET_CORE_RMEM_MAX = 0x2,NET_CORE_WMEM_DEFAULT = 0x3,NET_CORE_RMEM_DEFAULT = 0x4,NET_CORE_MAX_BACKLOG = 0x6,NET_CORE_FASTROUTE = 0x7,NET_CORE_MSG_COST = 0x8,NET_CORE_MSG_BURST = 0x9,NET_CORE_OPTMEM_MAX = 0xA,NET_CORE_HOT_LIST_LENGTH = 0xB,NET_CORE_DIVERT_VERSION = 0xC,NET_CORE_NO_CONG_THRESH = 0xD,NET_CORE_NO_CONG = 0xE,NET_CORE_LO_CONG = 0xF,NET_CORE_MOD_CONG = 0x10,NET_CORE_DEV_WEIGHT = 0x11,NET_CORE_SOMAXCONN = 0x12,NET_CORE_BUDGET = 0x13,NET_CORE_AEVENT_ETIME = 0x14,NET_CORE_AEVENT_RSEQTH = 0x15,NET_CORE_WARNINGS = 0x16,};
enum $D0804338FED1974BA189E0DED05FD517 {PTHREAD_PRIO_NONE = 0x0,PTHREAD_PRIO_INHERIT = 0x1,PTHREAD_PRIO_PROTECT = 0x2,};
union $D1779CA5851A61401DD36BCDAF347214 {char __size[20];int __align;};
union $D1D0F511BF997F52624AFB2B0CE27B40 {char __size[4];int __align;};
struct $D30E1CD2E9753287075FA3466243327C {Elf32_Word hwp_flags1;Elf32_Word hwp_flags2;};
union $D36E22DA4C7BB4337B5F0B148FE5AAF7 {struct $D36E22DA4C7BB4337B5F0B148FE5AAF7::$02425A0DB84445E5CE38B90EAFA89D41 __data;char __size[32];int __align;};
struct $D36E22DA4C7BB4337B5F0B148FE5AAF7::$02425A0DB84445E5CE38B90EAFA89D41 {int __lock;unsigned int __nr_readers;unsigned int __readers_wakeup;unsigned int __writer_wakeup;unsigned int __nr_readers_queued;unsigned int __nr_writers_queued;unsigned __int8 __rwelision;unsigned __int8 __pad2;unsigned __int8 __shared;unsigned __int8 __flags;int __writer;};
struct $D379431B13F78A36F2202C5AA386190E {char *dptr;int dsize;};
enum $D4AB9A46DE65367CC0FF11AD6E77796A {TD_THR_ANY_STATE = 0x0,TD_THR_UNKNOWN = 0x1,TD_THR_STOPPED = 0x2,TD_THR_RUN = 0x3,TD_THR_ACTIVE = 0x4,TD_THR_ZOMBIE = 0x5,TD_THR_SLEEP = 0x6,TD_THR_STOPPED_ASLEEP = 0x7,};
enum $D53D1E8297F8C721782D459039395DFD {NET_IPV6_FORWARDING = 0x1,NET_IPV6_HOP_LIMIT = 0x2,NET_IPV6_MTU = 0x3,NET_IPV6_ACCEPT_RA = 0x4,NET_IPV6_ACCEPT_REDIRECTS = 0x5,NET_IPV6_AUTOCONF = 0x6,NET_IPV6_DAD_TRANSMITS = 0x7,NET_IPV6_RTR_SOLICITS = 0x8,NET_IPV6_RTR_SOLICIT_INTERVAL = 0x9,NET_IPV6_RTR_SOLICIT_DELAY = 0xA,NET_IPV6_USE_TEMPADDR = 0xB,NET_IPV6_TEMP_VALID_LFT = 0xC,NET_IPV6_TEMP_PREFERED_LFT = 0xD,NET_IPV6_REGEN_MAX_RETRY = 0xE,NET_IPV6_MAX_DESYNC_FACTOR = 0xF,NET_IPV6_MAX_ADDRESSES = 0x10,NET_IPV6_FORCE_MLD_VERSION = 0x11,NET_IPV6_ACCEPT_RA_DEFRTR = 0x12,NET_IPV6_ACCEPT_RA_PINFO = 0x13,NET_IPV6_ACCEPT_RA_RTR_PREF = 0x14,NET_IPV6_RTR_PROBE_INTERVAL = 0x15,NET_IPV6_ACCEPT_RA_RT_INFO_MAX_PLEN = 0x16,NET_IPV6_PROXY_NDP = 0x17,NET_IPV6_ACCEPT_SOURCE_ROUTE = 0x19,NET_IPV6_ACCEPT_RA_FROM_LOCAL = 0x1A,__NET_IPV6_MAX = 0x1B,};
enum $D690D5C64A428DDCADD2EDBBEBC4BFE4 {DEV_RAID_SPEED_LIMIT_MIN = 0x1,DEV_RAID_SPEED_LIMIT_MAX = 0x2,};
struct $D758E79311354DDC9AF0CC7E7C22CD10 {Elf64_Word vda_name;Elf64_Word vda_next;};
enum $D8F03A40183C1F0DFE13800B3B9FB0ED {FSETLOCKING_QUERY = 0x0,FSETLOCKING_INTERNAL = 0x1,FSETLOCKING_BYCALLER = 0x2,};
struct $DB0EFD4055EE50FF77A024DEFEA8EE37 {Elf64_Word st_name;unsigned __int8 st_info;unsigned __int8 st_other;Elf64_Section st_shndx;Elf64_Addr st_value;Elf64_Xword st_size;};
struct $DBDB4AF8E469679C3A4CD785AB502395 {Elf64_Half vn_version;Elf64_Half vn_cnt;Elf64_Word vn_file;Elf64_Word vn_aux;Elf64_Word vn_next;};
enum $DC2797625D574A9AF0B4A811E544652D {PTHREAD_CANCEL_ENABLE = 0x0,PTHREAD_CANCEL_DISABLE = 0x1,};
struct $DDB9E5FBB16C40A976BC405025678C57 {Elf32_Half vn_version;Elf32_Half vn_cnt;Elf32_Word vn_file;Elf32_Word vn_aux;Elf32_Word vn_next;};
struct $DDCDC210EB5C272B20D7EC2419D0EE6A {unsigned int u[4];};
struct $DE2D2D600621BF6A9A3C6AB05D887D2A {unsigned int interval;unsigned int timeout;};
enum $E027FAAD9E62D0114E3908730A75FC8D {FPE_INTDIV = 0x1,FPE_INTOVF = 0x2,FPE_FLTDIV = 0x3,FPE_FLTOVF = 0x4,FPE_FLTUND = 0x5,FPE_FLTRES = 0x6,FPE_FLTINV = 0x7,FPE_FLTSUB = 0x8,};
enum $E0BCD9FA8FAD627D1AF071660FC89943 {INOTIFY_MAX_USER_INSTANCES = 0x1,INOTIFY_MAX_USER_WATCHES = 0x2,INOTIFY_MAX_QUEUED_EVENTS = 0x3,};
struct $E1260AB78985DBC228459590506E4C92 {size_t we_wordc;char **we_wordv;size_t we_offs;};
enum $E12B6EC3796E924F65D7BDA27D4A9CE5 {PTHREAD_SCOPE_SYSTEM = 0x0,PTHREAD_SCOPE_PROCESS = 0x1,};
enum $E1B461D6ADC649FA7943809455C6C6EE {NOTIFY_BPT = 0x0,NOTIFY_AUTOBPT = 0x1,NOTIFY_SYSCALL = 0x2,};
enum $E36C8D2C56B42191E3816E8650763980 {LIO_WAIT = 0x0,LIO_NOWAIT = 0x1,};
enum $E385CDEA8CFF6E4370ACEA6C55A0E665 {PTY_MAX = 0x1,PTY_NR = 0x2,};
enum $E43C5BF1FEA8E01BEC6CBB1DEAE54A6D {_ISupper = 0x1,_ISlower = 0x2,_ISalpha = 0x4,_ISdigit = 0x8,_ISxdigit = 0x10,_ISspace = 0x20,_ISprint = 0x40,_ISgraph = 0x80,_ISblank = 0x100,_IScntrl = 0x200,_ISpunct = 0x400,_ISalnum = 0x800,};
struct $E4EAFD57B978876015000738005B25CD {__u32 u[4];};
struct $E6E886A30EEC292ED01E9A730B5036F1 {int si_signo;int si_errno;int si_code;union $E6E886A30EEC292ED01E9A730B5036F1::$F67FAD32AF2806A4CB75FE1BBD6699A2 _sifields;};
union $E6E886A30EEC292ED01E9A730B5036F1::$F67FAD32AF2806A4CB75FE1BBD6699A2 {int _pad[29];struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$DDF278A5B88F81FEC3CBEE828E282CB3 _kill;struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$F43D85AC31CEBD8CC07B08111ABDF065 _timer;struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$002955E8B5DE3B92E30DFEF7AB65BFE2 _rt;struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$353EAF26536A4016665766004ADC0BD6 _sigchld;struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$5653F2BCC1F73C61D2CE0A4503D71747 _sigfault;struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$534EC22A0813C1325C3E7D3262B5A8D3 _sigpoll;struct $::$F67FAD32AF2806A4CB75FE1BBD6699A2::$4B29161E04CAD4BCDD788B201A5E8E5E _sigsys;};
struct $E714B4690DCD4CE2097239CD07373860 {Elf32_Word vna_hash;Elf32_Half vna_flags;Elf32_Half vna_other;Elf32_Word vna_name;Elf32_Word vna_next;};
struct $E8B6B3D679DDF9A2A9F1E31A29349D07 {uint64_t a_type;union $E8B6B3D679DDF9A2A9F1E31A29349D07::$E20C8C1B4A7C82F1CEEE602013DD1F57 a_un;};
union $E8B6B3D679DDF9A2A9F1E31A29349D07::$E20C8C1B4A7C82F1CEEE602013DD1F57 {uint64_t a_val;};
struct $EDB85F966E4A638CA0FF7E75C4B94ACF {char rose_addr[5];};
enum $EDBA1914F16BC538415B0E0A3A3FD3BB {FIND = 0x0,ENTER = 0x1,};
struct $EEC12600E3B3BC42C851475B8200B3A2 {unsigned int clock_rate;unsigned int clock_type;unsigned __int16 loopback;};
enum $F1F648DD099C1B085CB728875CF977ED {ADDR_NO_RANDOMIZE = 0x40000,MMAP_PAGE_ZERO = 0x100000,ADDR_COMPAT_LAYOUT = 0x200000,READ_IMPLIES_EXEC = 0x400000,ADDR_LIMIT_32BIT = 0x800000,SHORT_INODE = 0x1000000,WHOLE_SECONDS = 0x2000000,STICKY_TIMEOUTS = 0x4000000,ADDR_LIMIT_3GB = 0x8000000,};
struct $F1F9335C32D188513BC2595A34A539C6 {unsigned __int16 encoding;unsigned __int16 parity;};
union $F802AEB59326FE5752476AC56FC6EFE2 {char __size[16];int __align;};
union $F85E194B51CBDC38F209555F4162D10C {struct $F85E194B51CBDC38F209555F4162D10C::__pthread_mutex_s __data;char __size[24];int __align;};
struct $F85E194B51CBDC38F209555F4162D10C::__pthread_mutex_s {int __lock;unsigned int __count;int __owner;int __kind;unsigned int __nusers;union {struct $::__pthread_mutex_s::$0BE44AECE8C30C3ABE12FDB11D0C67FE::$C8E94AFE4B154C8BA903815D3D8DE6A1 __elision_data;__pthread_slist_t __list;};};
struct $F9E7774477A9727B3397D0BE30B022B2 {uint32_t a_type;union $F9E7774477A9727B3397D0BE30B022B2::$9A662A763779714768031DA711D3415F a_un;};
union $F9E7774477A9727B3397D0BE30B022B2::$9A662A763779714768031DA711D3415F {uint32_t a_val;};
struct $FB68FDDBB52DBDF02F327E3198820E09 {unsigned int fds_bits[32];};
enum $FCD655E0C39E155367D8B8505F7FCFE1 {BUS_ISA_MEM_BASE = 0x1,BUS_ISA_PORT_BASE = 0x2,BUS_ISA_PORT_SHIFT = 0x3,};
enum $FCDACB232C33C8C505189913D48887B6 {PTHREAD_MUTEX_STALLED = 0x0,PTHREAD_MUTEX_STALLED_NP = 0x0,PTHREAD_MUTEX_ROBUST = 0x1,PTHREAD_MUTEX_ROBUST_NP = 0x1,};
struct $FE43560485AD2DF497423A9D2646B91A {Elf32_Half si_boundto;Elf32_Half si_flags;};
enum $FE790CD3BD14997723CBFB5A61519AED {SIGEV_SIGNAL = 0x0,SIGEV_NONE = 0x1,SIGEV_THREAD = 0x2,SIGEV_THREAD_ID = 0x4,};
enum $FFC92A797DFCEB24C85E964A8CC23C17 {__GCONV_IS_LAST = 0x1,__GCONV_IGNORE_ERRORS = 0x2,__GCONV_SWAP = 0x4,__GCONV_TRANSLIT = 0x8,};
typedef enum $EDBA1914F16BC538415B0E0A3A3FD3BB ACTION;
struct AUTH {struct opaque_auth ah_cred;struct opaque_auth ah_verf;union des_block ah_key;struct AUTH::auth_ops *ah_ops;caddr_t ah_private;};
struct AUTH::auth_ops {void (*ah_nextverf)(AUTH *);int (*ah_marshal)(AUTH *, XDR *);int (*ah_validate)(AUTH *, struct opaque_auth *);int (*ah_refresh)(AUTH *);void (*ah_destroy)(AUTH *);};
typedef void BZFILE;
typedef unsigned __int8 Byte;
typedef Byte Bytef;
struct CLIENT {AUTH *cl_auth;struct CLIENT::clnt_ops *cl_ops;caddr_t cl_private;};
struct CLIENT::clnt_ops {enum clnt_stat (*cl_call)(CLIENT *, u_long, xdrproc_t, caddr_t, xdrproc_t, caddr_t, struct timeval);void (*cl_abort)(void);void (*cl_geterr)(CLIENT *, struct rpc_err *);bool_t (*cl_freeres)(CLIENT *, xdrproc_t, caddr_t);void (*cl_destroy)(CLIENT *);bool_t (*cl_control)(CLIENT *, int, char *);};
typedef struct $7F1527F4980126EB9203A44DB3E05AC8 CTL_MSG;
typedef struct $3DC7B7400B12314EE6EFE34533277AB7 CTL_RESPONSE;
typedef struct $B2D9AD79CDE183526F23B15AA0F08AFD DBM;
typedef struct __dirstream DIR;
typedef struct entry ENTRY;
enum EPOLL_EVENTS : unsigned __int32 {EPOLLIN = 0x1,EPOLLPRI = 0x2,EPOLLOUT = 0x4,EPOLLRDNORM = 0x40,EPOLLRDBAND = 0x80,EPOLLWRNORM = 0x100,EPOLLWRBAND = 0x200,EPOLLMSG = 0x400,EPOLLERR = 0x8,EPOLLHUP = 0x10,EPOLLRDHUP = 0x2000,EPOLLWAKEUP = 0x20000000,EPOLLONESHOT = 0x40000000,EPOLLET = 0x80000000,};
typedef uint32_t Elf32_Addr;
typedef Elf32_Addr Elf32_Conflict;
typedef struct $9E389EF8DB18C75445DC45CE7C2FFB9B Elf32_Dyn;
typedef struct $160641F2D897670075418D2E6B733231 Elf32_Ehdr;
typedef uint16_t Elf32_Half;
typedef struct $45BD469DC424D3F368EE6E10DDB8D8EE Elf32_Lib;
typedef struct $CE845F89F9878C873199BB4116C12DE5 Elf32_Move;
typedef struct $8A4D2DD0535D3740C9D9302B62B9E8F3 Elf32_Nhdr;
typedef uint32_t Elf32_Off;
typedef struct $4788A0C65CEF1424AE2DE816674E1913 Elf32_Phdr;
typedef struct $BC4B0D515307F8380CCAE7BF44CFA97C Elf32_RegInfo;
typedef struct $C772EEB8BDF2D9B03BC2113DCD14FF9B Elf32_Rel;
typedef struct $AAECD496E21460385AB9540869BF9C78 Elf32_Rela;
typedef uint16_t Elf32_Section;
typedef struct $0F2B39C4889BFBA0BBC9C66D38A1F5D3 Elf32_Shdr;
typedef int32_t Elf32_Sword;
typedef int64_t Elf32_Sxword;
typedef struct $6B1E97362D63C40B98094F056DF5AEF5 Elf32_Sym;
typedef struct $FE43560485AD2DF497423A9D2646B91A Elf32_Syminfo;
typedef struct $12883A0710B467FBB4742064A9BE69DF Elf32_Verdaux;
typedef struct $A0565235DB0A025ED98270EC8F0003BF Elf32_Verdef;
typedef struct $E714B4690DCD4CE2097239CD07373860 Elf32_Vernaux;
typedef struct $DDB9E5FBB16C40A976BC405025678C57 Elf32_Verneed;
typedef Elf32_Half Elf32_Versym;
typedef uint32_t Elf32_Word;
typedef uint64_t Elf32_Xword;
typedef struct $F9E7774477A9727B3397D0BE30B022B2 Elf32_auxv_t;
typedef union $6DF3DE276417BF858702C9AB9AD460CB Elf32_gptab;
typedef uint64_t Elf64_Addr;
typedef struct $8E3F17DF06268256B33C950219C36638 Elf64_Dyn;
typedef struct $31DC1A9A30C8BE83503485AFF4563DAB Elf64_Ehdr;
typedef uint16_t Elf64_Half;
typedef struct $00580D67DBBDE0DF5EC3B468D69A2E22 Elf64_Lib;
typedef struct $4489EB38A238A95680D8722B994EE839 Elf64_Move;
typedef struct $CA18D99C52BF47BA3661A7BE783B3F23 Elf64_Nhdr;
typedef uint64_t Elf64_Off;
typedef struct $61B607A2274ED5109A268B0B2173104D Elf64_Phdr;
typedef struct $A313ED2DE25BE046A874D492CFBD731F Elf64_Rel;
typedef struct $4664B325D7B1C568276997F8FB024EC2 Elf64_Rela;
typedef uint16_t Elf64_Section;
typedef struct $6C157D281FCCF3AD18E5920BAFADC6E6 Elf64_Shdr;
typedef int32_t Elf64_Sword;
typedef int64_t Elf64_Sxword;
typedef struct $DB0EFD4055EE50FF77A024DEFEA8EE37 Elf64_Sym;
typedef struct $2FC37C12F50461D7B99376C23209E757 Elf64_Syminfo;
typedef struct $D758E79311354DDC9AF0CC7E7C22CD10 Elf64_Verdaux;
typedef struct $75FD820D0CE6C215ACE04A8FAA270A6D Elf64_Verdef;
typedef struct $A46BFD4B6B8C284ED478D587B5722CAB Elf64_Vernaux;
typedef struct $DBDB4AF8E469679C3A4CD785AB502395 Elf64_Verneed;
typedef Elf64_Half Elf64_Versym;
typedef uint32_t Elf64_Word;
typedef uint64_t Elf64_Xword;
typedef struct $E8B6B3D679DDF9A2A9F1E31A29349D07 Elf64_auxv_t;
typedef struct $9339EAE8E1B03FBFE9037CE1CB7A5274 Elf_MIPS_ABIFlags_v0;
typedef struct $8AF8D50F7459E989F83B822632060AA0 Elf_Options;
typedef struct $D30E1CD2E9753287075FA3466243327C Elf_Options_Hw;
typedef uint32_t Elf_Symndx;
typedef struct _IO_FILE FILE;
typedef struct $53901533A28EEBC402C56245C1C7891C FTS;
typedef struct _ftsent FTSENT;
typedef struct gdbm_file_info *GDBM_FILE;
typedef enum $A98D0825AA235C940E5A466593BCCCF2 GMON_Record_Tag;
typedef struct $A6F5D22C47870C9C34E13B26D36736E1 HEADER;
struct La_ppc32_regs {uint32_t lr_reg[8];double lr_fp[8];uint32_t lr_vreg[12][4];uint32_t lr_r1;uint32_t lr_lr;};
struct La_ppc32_retval {uint32_t lrv_r3;uint32_t lrv_r4;double lrv_fp[8];uint32_t lrv_v2[4];};
enum MACRO_ABORT {ABORT = 238,};
enum MACRO_AC {AC = 0x10,};
enum MACRO_ACCESSPERMS {ACCESSPERMS = 511,};
enum MACRO_ACCOUNTING {ACCOUNTING = 9,};
enum MACRO_ACCT {ACCT_COMM = 16,ACCT_BYTEORDER = 128,};
enum MACRO_ADDRSTRLEN {INET_ADDRSTRLEN = 16,INET6_ADDRSTRLEN = 46,};
enum MACRO_ADJ {ADJ_OFFSET = 0x1,ADJ_FREQUENCY = 0x2,ADJ_MAXERROR = 0x4,ADJ_ESTERROR = 0x8,ADJ_STATUS = 0x10,ADJ_TIMECONST = 0x20,ADJ_TAI = 0x80,ADJ_MICRO = 0x1000,ADJ_NANO = 0x2000,ADJ_TICK = 0x4000,ADJ_OFFSET_SINGLESHOT = 0x8001,ADJ_OFFSET_SS_READ = 0xA001,};
enum MACRO_AF {AF_UNSPEC = 0,AF_LOCAL = 1,AF_UNIX = 1,AF_FILE = 1,AF_INET = 2,AF_AX25 = 3,AF_IPX = 4,AF_APPLETALK = 5,AF_NETROM = 6,AF_BRIDGE = 7,AF_ATMPVC = 8,AF_X25 = 9,AF_INET6 = 10,AF_ROSE = 11,AF_DECnet = 12,AF_NETBEUI = 13,AF_SECURITY = 14,AF_KEY = 15,AF_NETLINK = 16,AF_ROUTE = 16,AF_PACKET = 17,AF_ASH = 18,AF_ECONET = 19,AF_ATMSVC = 20,AF_RDS = 21,AF_SNA = 22,AF_IRDA = 23,AF_PPPOX = 24,AF_WANPIPE = 25,AF_LLC = 26,AF_CAN = 29,AF_TIPC = 30,AF_BLUETOOTH = 31,AF_IUCV = 32,AF_RXRPC = 33,AF_ISDN = 34,AF_PHONET = 35,AF_IEEE802154 = 36,AF_CAIF = 37,AF_ALG = 38,AF_NFC = 39,AF_VSOCK = 40,AF_MAX = 41,};
enum MACRO_AFMT {AFMT_QUERY = 0x0,AFMT_MU_LAW = 0x1,AFMT_A_LAW = 0x2,AFMT_IMA_ADPCM = 0x4,AFMT_U8 = 0x8,AFMT_S16_LE = 0x10,AFMT_S16_BE = 0x20,AFMT_S8 = 0x40,AFMT_U16_LE = 0x80,AFMT_U16_BE = 0x100,AFMT_MPEG = 0x200,AFMT_AC3 = 0x400,};
enum MACRO_AHZ {AHZ = 100,};
enum MACRO_AI {AI_PASSIVE = 0x1,AI_CANONNAME = 0x2,AI_NUMERICHOST = 0x4,AI_V4MAPPED = 0x8,AI_ALL = 0x10,AI_ADDRCONFIG = 0x20,AI_NUMERICSERV = 0x400,};
enum MACRO_ALLPERMS {ALLPERMS = 4095,};
enum MACRO_ANNOUNCE {ANNOUNCE = 3,};
enum MACRO_ANYADDR {ANYADDR = 0,};
enum MACRO_ANYMARK {ANYMARK = 0x1,LASTMARK = 0x2,};
enum MACRO_AO {AO = 245,};
enum MACRO_APF {APF_NORMAL = 0,APF_NETWORK = 1,APF_CPUINTENS = 2,};
enum MACRO_ARCDENSITY {ARCDENSITY = 3,};
enum MACRO_AREGTYPE {AREGTYPE = 0,LNKTYPE = 49,};
enum MACRO_ARGP {ARGP_ERR_UNKNOWN = 7,ARGP_KEY_ARG = 0,ARGP_KEY_ARGS = 16777222,ARGP_KEY_END = 16777217,ARGP_KEY_NO_ARGS = 16777218,ARGP_KEY_INIT = 16777219,ARGP_KEY_FINI = 16777223,ARGP_KEY_SUCCESS = 16777220,ARGP_KEY_ERROR = 16777221,ARGP_KEY_HELP_PRE_DOC = 33554433,ARGP_KEY_HELP_POST_DOC = 33554434,ARGP_KEY_HELP_HEADER = 33554435,ARGP_KEY_HELP_EXTRA = 33554436,ARGP_KEY_HELP_DUP_ARGS_NOTE = 33554437,ARGP_KEY_HELP_ARGS_DOC = 33554438,ARGP_PARSE_ARGV0 = 1,ARGP_NO_ERRS = 2,ARGP_NO_ARGS = 4,ARGP_IN_ORDER = 8,ARGP_NO_HELP = 16,ARGP_NO_EXIT = 32,ARGP_LONG_ONLY = 64,ARGP_SILENT = 50,ARGP_HELP_USAGE = 1,ARGP_HELP_SHORT_USAGE = 2,ARGP_HELP_SEE = 4,ARGP_HELP_LONG = 8,ARGP_HELP_PRE_DOC = 16,ARGP_HELP_POST_DOC = 32,ARGP_HELP_DOC = 48,ARGP_HELP_BUG_ADDR = 64,ARGP_HELP_LONG_ONLY = 128,ARGP_HELP_EXIT_ERR = 256,ARGP_HELP_EXIT_OK = 512,ARGP_HELP_STD_ERR = 260,ARGP_HELP_STD_USAGE = 262,ARGP_HELP_STD_HELP = 634,};
enum MACRO_ARM_EXIDX {PT_ARM_EXIDX = 1879048193,SHT_ARM_EXIDX = 1879048193,};
enum MACRO_ARPD {ARPD_UPDATE = 0x1,ARPD_LOOKUP = 0x2,ARPD_FLUSH = 0x3,};
enum MACRO_ARPHRD {ARPHRD_NETROM = 0,ARPHRD_ETHER = 1,ARPHRD_EETHER = 2,ARPHRD_AX25 = 3,ARPHRD_PRONET = 4,ARPHRD_CHAOS = 5,ARPHRD_IEEE802 = 6,ARPHRD_ARCNET = 7,ARPHRD_APPLETLK = 8,ARPHRD_DLCI = 15,ARPHRD_ATM = 19,ARPHRD_METRICOM = 23,ARPHRD_IEEE1394 = 24,ARPHRD_EUI64 = 27,ARPHRD_INFINIBAND = 32,ARPHRD_SLIP = 256,ARPHRD_CSLIP = 257,ARPHRD_SLIP6 = 258,ARPHRD_CSLIP6 = 259,ARPHRD_RSRVD = 260,ARPHRD_ADAPT = 264,ARPHRD_ROSE = 270,ARPHRD_X25 = 271,ARPHRD_HWX25 = 272,ARPHRD_PPP = 512,ARPHRD_CISCO = 513,ARPHRD_HDLC = 513,ARPHRD_LAPB = 516,ARPHRD_DDCMP = 517,ARPHRD_RAWHDLC = 518,ARPHRD_TUNNEL = 768,ARPHRD_TUNNEL6 = 769,ARPHRD_FRAD = 770,ARPHRD_SKIP = 771,ARPHRD_LOOPBACK = 772,ARPHRD_LOCALTLK = 773,ARPHRD_FDDI = 774,ARPHRD_BIF = 775,ARPHRD_SIT = 776,ARPHRD_IPDDP = 777,ARPHRD_IPGRE = 778,ARPHRD_PIMREG = 779,ARPHRD_HIPPI = 780,ARPHRD_ASH = 781,ARPHRD_ECONET = 782,ARPHRD_IRDA = 783,ARPHRD_FCPP = 784,ARPHRD_FCAL = 785,ARPHRD_FCPL = 786,ARPHRD_FCFABRIC = 787,ARPHRD_IEEE802_TR = 800,ARPHRD_IEEE80211 = 801,ARPHRD_IEEE80211_PRISM = 802,ARPHRD_IEEE80211_RADIOTAP = 803,ARPHRD_IEEE802154 = 804,ARPHRD_IEEE802154_PHY = 805,ARPHRD_VOID = 65535,ARPHRD_NONE = 65534,};
enum MACRO_ARPOP {ARPOP_REQUEST = 1,ARPOP_REPLY = 2,ARPOP_RREQUEST = 3,ARPOP_RREPLY = 4,ARPOP_InREQUEST = 8,ARPOP_InREPLY = 9,ARPOP_NAK = 10,};
enum MACRO_ASH {ASH_CHANNEL_ANY = 0,ASH_CHANNEL_CONTROL = 1,ASH_CHANNEL_REALTIME = 2,};
enum MACRO_AT {AT_NULL = 0,AT_IGNORE = 1,AT_EXECFD = 2,AT_PHDR = 3,AT_PHENT = 4,AT_PHNUM = 5,AT_PAGESZ = 6,AT_BASE = 7,AT_FLAGS = 8,AT_ENTRY = 9,AT_NOTELF = 10,AT_UID = 11,AT_EUID = 12,AT_GID = 13,AT_EGID = 14,AT_CLKTCK = 17,AT_PLATFORM = 15,AT_HWCAP = 16,AT_FPUCW = 18,AT_DCACHEBSIZE = 19,AT_ICACHEBSIZE = 20,AT_UCACHEBSIZE = 21,AT_IGNOREPPC = 22,AT_SECURE = 23,AT_BASE_PLATFORM = 24,AT_RANDOM = 25,AT_HWCAP2 = 26,AT_EXECFN = 31,AT_SYSINFO = 32,AT_SYSINFO_EHDR = 33,AT_L1I_CACHESHAPE = 34,AT_L1D_CACHESHAPE = 35,AT_L2_CACHESHAPE = 36,AT_L3_CACHESHAPE = 37,};
enum MACRO_ATADDR {ATADDR_ANYNET = 0,ATADDR_ANYNODE = 0,ATADDR_ANYPORT = 0,ATADDR_BCAST = 255,};
enum MACRO_ATF {ATF_COM = 0x2,ATF_PERM = 0x4,ATF_PUBL = 0x8,ATF_USETRAILERS = 0x10,ATF_NETMASK = 0x20,ATF_DONTPUB = 0x40,ATF_MAGIC = 0x80,};
enum MACRO_ATPORT {ATPORT_FIRST = 1,ATPORT_RESERVED = 128,ATPORT_LAST = 254,};
enum MACRO_AT_FDCWD {AT_FDCWD = -100,AT_SYMLINK_NOFOLLOW = 256,AT_REMOVEDIR = 512,AT_SYMLINK_FOLLOW = 1024,AT_EACCESS = 512,};
enum MACRO_AUTH {AUTH_WHO_CLIENT = 0,AUTH_WHO_SERVER = 1,AUTH_WHO_MASK = 1,AUTH_HOW_ONE_WAY = 0,AUTH_HOW_MUTUAL = 2,AUTH_HOW_MASK = 2,};
enum MACRO_AUTHTYPE {AUTHTYPE_NULL = 0,AUTHTYPE_KERBEROS_V4 = 1,AUTHTYPE_KERBEROS_V5 = 2,AUTHTYPE_SPX = 3,AUTHTYPE_MINK = 4,AUTHTYPE_CNT = 5,AUTHTYPE_TEST = 99,};
enum MACRO_AUTH_NONE {AUTH_NONE = 0,AUTH_NULL = 0,AUTH_SYS = 1,AUTH_UNIX = 1,AUTH_SHORT = 2,AUTH_DES = 3,AUTH_DH = 3,AUTH_KERB = 4,};
enum MACRO_AX25 {AX25_WINDOW = 1,AX25_T1 = 2,AX25_T2 = 5,AX25_T3 = 4,AX25_N2 = 3,AX25_BACKOFF = 6,AX25_EXTSEQ = 7,AX25_PIDINCL = 8,AX25_IDLE = 9,AX25_PACLEN = 10,AX25_IPMAXQUEUE = 11,AX25_IAMDIGI = 12,AX25_KILL = 99,};
enum MACRO_AX25_NOUID {AX25_NOUID_DEFAULT = 0,AX25_NOUID_BLOCK = 1,AX25_SET_RT_IPMODE = 2,AX25_DIGI_INBAND = 1,AX25_DIGI_XBAND = 2,AX25_MAX_DIGIS = 8,AX25_VALUES_IPDEFMODE = 0,AX25_VALUES_AXDEFMODE = 1,AX25_VALUES_NETROM = 2,AX25_VALUES_TEXT = 3,AX25_VALUES_BACKOFF = 4,AX25_VALUES_CONMODE = 5,AX25_VALUES_WINDOW = 6,AX25_VALUES_EWINDOW = 7,AX25_VALUES_T1 = 8,AX25_VALUES_T2 = 9,AX25_VALUES_T3 = 10,AX25_VALUES_N2 = 11,AX25_VALUES_DIGI = 12,AX25_VALUES_IDLE = 13,AX25_VALUES_PACLEN = 14,AX25_VALUES_IPMAXQUEUE = 15,AX25_MAX_VALUES = 20,};
enum MACRO_AYT {AYT = 246,};
enum MACRO_B0 {B0 = 0x0,B50 = 0x1,B75 = 0x2,};
enum MACRO_B1000000 {B1000000 = 0x17,};
enum MACRO_B110 {B110 = 0x3,B134 = 0x4,};
enum MACRO_B115200 {B115200 = 0x11,};
enum MACRO_B1152000 {B1152000 = 0x18,};
enum MACRO_B1200 {B1200 = 0x9,};
enum MACRO_B150 {B150 = 0x5,};
enum MACRO_B1500000 {B1500000 = 0x19,};
enum MACRO_B1800 {B1800 = 0xA,};
enum MACRO_B19200 {B19200 = 0xE,};
enum MACRO_B200 {B200 = 0x6,};
enum MACRO_B2000000 {B2000000 = 0x1A,};
enum MACRO_B230400 {B230400 = 0x12,};
enum MACRO_B2400 {B2400 = 0xB,};
enum MACRO_B2500000 {B2500000 = 0x1B,};
enum MACRO_B300 {B300 = 0x7,B600 = 0x8,};
enum MACRO_B3000000 {B3000000 = 0x1C,};
enum MACRO_B3500000 {B3500000 = 0x1D,};
enum MACRO_B38400 {B38400 = 0xF,};
enum MACRO_B4000000 {B4000000 = 0x1E,};
enum MACRO_B460800 {B460800 = 0x13,};
enum MACRO_B4800 {B4800 = 0xC,};
enum MACRO_B500000 {B500000 = 0x14,};
enum MACRO_B57600 {B57600 = 0x10,};
enum MACRO_B576000 {B576000 = 0x15,};
enum MACRO_B921600 {B921600 = 0x16,};
enum MACRO_B9600 {B9600 = 0xD,};
enum MACRO_BADADDR {BADADDR = 7,BADCTLADDR = 8,};
enum MACRO_BADVERSION {BADVERSION = 6,};
enum MACRO_BC {BC_BASE_MAX = 99,BC_DIM_MAX = 2048,BC_SCALE_MAX = 99,BC_STRING_MAX = 1000,};
enum MACRO_BLK {BLK_EOR = 0x80,BLK_EOF = 0x40,BLK_ERRORS = 0x20,BLK_RESTART = 0x10,BLK_BYTECOUNT = 0x2,};
enum MACRO_BLKFLSBUF {BLKFLSBUF = 0x20001261,};
enum MACRO_BLKFRAGET {BLKFRAGET = 0x20001265,};
enum MACRO_BLKFRASET {BLKFRASET = 0x20001264,};
enum MACRO_BLKGETSIZE {BLKGETSIZE = 0x20001260,};
enum MACRO_BLKRAGET {BLKRAGET = 0x20001263,};
enum MACRO_BLKRASET {BLKRASET = 0x20001262,};
enum MACRO_BLKROGET {BLKROGET = 0x2000125E,};
enum MACRO_BLKROSET {BLKROSET = 0x2000125D,};
enum MACRO_BLKRRPART {BLKRRPART = 0x2000125F,};
enum MACRO_BLKSECTGET {BLKSECTGET = 0x20001267,};
enum MACRO_BLKSECTSET {BLKSECTSET = 0x20001266,};
enum MACRO_BLKSSZGET {BLKSSZGET = 0x20001268,};
enum MACRO_BLKTYPE {BLKTYPE = 52,};
enum MACRO_BLOCK {BLOCK_SIZE = 1024,BLOCK_SIZE_BITS = 10,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_BOOLCOUNT {BOOLCOUNT = 44,};
enum MACRO_BOOLWRITE {BOOLWRITE = 37,};
enum MACRO_BREAK {BREAK = 243,};
enum MACRO_BS0 {BS0 = 0x0,BS1 = 0x8000,VTDLY = 0x10000,};
enum MACRO_BSD {BSD_CURRENT_VERSION = 1,BSD_MIN_BITS = 9,BSD_MAX_BITS = 15,};
enum MACRO_BSD_COMPRESS {CI_BSD_COMPRESS = 21,CILEN_BSD_COMPRESS = 3,};
enum MACRO_BT {BT_UISHIFT = 5,BT_NBIPUI = 32,BT_UIMASK = 31,};
enum MACRO_BYTE {BYTE_ORDER = 4321,};
enum MACRO_BYTES {BYTES_PER_XDR_UNIT = 4,};
enum MACRO_BZ {BZ_RUN = 0,BZ_FLUSH = 1,BZ_FINISH = 2,BZ_OK = 0,BZ_RUN_OK = 1,BZ_FLUSH_OK = 2,BZ_FINISH_OK = 3,BZ_STREAM_END = 4,BZ_SEQUENCE_ERROR = -1,BZ_PARAM_ERROR = -2,BZ_MEM_ERROR = -3,BZ_DATA_ERROR = -4,BZ_DATA_ERROR_MAGIC = -5,BZ_IO_ERROR = -6,BZ_UNEXPECTED_EOF = -7,BZ_OUTBUFF_FULL = -8,BZ_CONFIG_ERROR = -9,BZ_MAX_UNUSED = 5000,};
enum MACRO_C {C_IRUSR = 0x100,C_IWUSR = 0x80,C_IXUSR = 0x40,C_IRGRP = 0x20,C_IWGRP = 0x10,C_IXGRP = 0x8,C_IROTH = 0x4,C_IWOTH = 0x2,C_IXOTH = 0x1,C_ISUID = 0x800,C_ISGID = 0x400,C_ISVTX = 0x200,C_ISBLK = 0x6000,C_ISCHR = 0x2000,C_ISDIR = 0x4000,C_ISFIFO = 0x1000,C_ISSOCK = 0xC000,C_ISLNK = 0xA000,C_ISCTG = 0x9000,C_ISREG = 0x8000,};
enum MACRO_CANBSIZ {CANBSIZ = 255,MAXPATHLEN = 4096,};
enum MACRO_CBAUD {CBAUD = 0xFF,};
enum MACRO_CBRK {CBRK = 0,CRPRNT = 18,};
enum MACRO_CCP {CCP_CONFREQ = 1,CCP_CONFACK = 2,CCP_TERMREQ = 5,CCP_TERMACK = 6,CCP_RESETREQ = 14,CCP_RESETACK = 15,CCP_MAX_OPTION_LENGTH = 32,CCP_HDRLEN = 4,CCP_OPT_MINLEN = 2,};
enum MACRO_CDISCARD {CDISCARD = 15,};
enum MACRO_CEOF {CEOF = 4,};
enum MACRO_CEOL {CEOL = 0,CERASE = 127,};
enum MACRO_CEOT {CEOT = 4,};
enum MACRO_CFLUSH {CFLUSH = 15,};
enum MACRO_CHAR {CHAR_BIT = 8,};
enum MACRO_CHAR_MIN {CHAR_MIN = -128,CHAR_MAX = 127,};
enum MACRO_CHRTYPE {CHRTYPE = 51,};
enum MACRO_CI {CI_DEFLATE = 26,CI_DEFLATE_DRAFT = 24,};
enum MACRO_CILEN {CILEN_DEFLATE = 4,};
enum MACRO_CILEN_PREDICTOR {CILEN_PREDICTOR_1 = 2,};
enum MACRO_CILEN_PREDICTOR_2 {CILEN_PREDICTOR_2 = 2,};
enum MACRO_CINTR {CINTR = 3,};
enum MACRO_CI_PREDICTOR {CI_PREDICTOR_1 = 1,};
enum MACRO_CI_PREDICTOR_2 {CI_PREDICTOR_2 = 2,};
enum MACRO_CLGET {CLGET_SERVER_ADDR = 3,CLGET_FD = 6,CLGET_SVC_ADDR = 7,};
enum MACRO_CLGET_RETRY {CLGET_RETRY_TIMEOUT = 5,};
enum MACRO_CLNEXT {CLNEXT = 22,};
enum MACRO_CLOCK {CLOCK_REALTIME = 0,CLOCK_MONOTONIC = 1,CLOCK_PROCESS_CPUTIME_ID = 2,CLOCK_THREAD_CPUTIME_ID = 3,CLOCK_MONOTONIC_RAW = 4,CLOCK_REALTIME_COARSE = 5,CLOCK_MONOTONIC_COARSE = 6,CLOCK_BOOTTIME = 7,CLOCK_REALTIME_ALARM = 8,CLOCK_BOOTTIME_ALARM = 9,CLOCK_TAI = 11,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000000,};
enum MACRO_CLOCK_DEFAULT {CLOCK_DEFAULT = 0,CLOCK_EXT = 1,CLOCK_INT = 2,CLOCK_TXINT = 3,CLOCK_TXFROMRX = 4,};
enum MACRO_CLOEXEC {F_DUPFD_CLOEXEC = 1030,FD_CLOEXEC = 1,};
enum MACRO_CLSET {CLSET_FD_CLOSE = 8,CLSET_FD_NCLOSE = 9,};
enum MACRO_CLSET_SVC {CLSET_SVC_ADDR = 16,CLSET_PUSH_TIMOD = 17,CLSET_POP_TIMOD = 18,CLSET_RETRY_TIMEOUT = 4,};
enum MACRO_CMAP {GIO_CMAP = 0x4B70,PIO_CMAP = 0x4B71,};
enum MACRO_CMIN {CMIN = 1,CQUIT = 28,};
enum MACRO_COLL {COLL_WEIGHTS_MAX = 255,EXPR_NEST_MAX = 32,LINE_MAX = 2048,CHARCLASS_NAME_MAX = 2048,RE_DUP_MAX = 32767,};
enum MACRO_CONSOLES {MIN_NR_CONSOLES = 1,MAX_NR_CONSOLES = 63,MAX_NR_USER_CONSOLES = 63,};
enum MACRO_CONTINUE {CONTINUE = 3,TRANSIENT = 4,};
enum MACRO_CONTTYPE {CONTTYPE = 55,};
enum MACRO_CPF {CPF_NONE = 0x0,CPF_FIRST = 0x1,CPF_LAST = 0x2,};
enum MACRO_CR0 {CR0 = 0x0,CR1 = 0x1000,CR2 = 0x2000,};
enum MACRO_CR3 {CR3 = 0x3000,FFDLY = 0x4000,};
enum MACRO_CREPRINT {CREPRINT = 18,};
enum MACRO_CS5 {CS5 = 0x0,CS6 = 0x100,CS7 = 0x200,};
enum MACRO_CS8 {CS8 = 0x300,CSTOPB = 0x400,CREAD = 0x800,PARENB = 0x1000,PARODD = 0x2000,HUPCL = 0x4000,CLOCAL = 0x8000,CMSPAR = 0x40000000,CRTSCTS = 0x80000000,};
enum MACRO_CSIZE {CSIZE = 0x300,};
enum MACRO_CSTART {CSTART = 17,};
enum MACRO_CSTATUS {CSTATUS = 0,CKILL = 21,};
enum MACRO_CSTOP {CSTOP = 19,};
enum MACRO_CSUSP {CSUSP = 26,};
enum MACRO_CTIME {CTIME = 0,CDSUSP = 25,};
enum MACRO_CTL {CTL_BANK_SELECT = 0x0,CTL_MODWHEEL = 0x1,CTL_BREATH = 0x2,CTL_FOOT = 0x4,CTL_PORTAMENTO_TIME = 0x5,CTL_DATA_ENTRY = 0x6,CTL_MAIN_VOLUME = 0x7,CTL_BALANCE = 0x8,CTL_PAN = 0xA,CTL_EXPRESSION = 0xB,CTL_GENERAL_PURPOSE1 = 0x10,CTL_GENERAL_PURPOSE2 = 0x11,CTL_GENERAL_PURPOSE3 = 0x12,CTL_GENERAL_PURPOSE4 = 0x13,CTL_DAMPER_PEDAL = 0x40,CTL_SUSTAIN = 0x40,CTL_HOLD = 0x40,CTL_PORTAMENTO = 0x41,CTL_SOSTENUTO = 0x42,CTL_SOFT_PEDAL = 0x43,CTL_HOLD2 = 0x45,CTL_GENERAL_PURPOSE5 = 0x50,CTL_GENERAL_PURPOSE6 = 0x51,CTL_GENERAL_PURPOSE7 = 0x52,CTL_GENERAL_PURPOSE8 = 0x53,CTL_EXT_EFF_DEPTH = 0x5B,CTL_TREMOLO_DEPTH = 0x5C,CTL_CHORUS_DEPTH = 0x5D,CTL_DETUNE_DEPTH = 0x5E,CTL_CELESTE_DEPTH = 0x5E,CTL_PHASER_DEPTH = 0x5F,CTL_DATA_INCREMENT = 0x60,CTL_DATA_DECREMENT = 0x61,CTL_NONREG_PARM_NUM_LSB = 0x62,CTL_NONREG_PARM_NUM_MSB = 0x63,CTL_REGIST_PARM_NUM_LSB = 0x64,CTL_REGIST_PARM_NUM_MSB = 0x65,};
enum MACRO_CTL_MAXNAME {CTL_MAXNAME = 10,};
enum MACRO_CTRL {CTRL_PITCH_BENDER = 255,CTRL_PITCH_BENDER_RANGE = 254,CTRL_EXPRESSION = 253,CTRL_MAIN_VOLUME = 252,};
enum MACRO_CWERASE {CWERASE = 23,};
enum MACRO_DATA {DATA = 0x3,ACK = 0x4,};
enum MACRO_DBM {DBM_INSERT = 0,DBM_REPLACE = 1,};
enum MACRO_DDP {DDP_MAXSZ = 587,DDP_MAXHOPS = 15,};
enum MACRO_DEFFILEMODE {DEFFILEMODE = 438,};
enum MACRO_DEFLATE {DEFLATE_MIN_SIZE = 9,DEFLATE_MAX_SIZE = 15,DEFLATE_METHOD_VAL = 8,DEFLATE_CHK_SEQUENCE = 0,};
enum MACRO_DELAYTIMER {DELAYTIMER_MAX = 2147483647,TTY_NAME_MAX = 32,LOGIN_NAME_MAX = 256,HOST_NAME_MAX = 64,MQ_PRIO_MAX = 32768,SEM_VALUE_MAX = 2147483647,SSIZE_MAX = 2147483647,};
enum MACRO_DELETE {DELETE = 2,};
enum MACRO_DES {DES_MAXDATA = 8192,DES_DIRMASK = 1,DES_ENCRYPT = 0,DES_DECRYPT = 1,DES_DEVMASK = 2,DES_HW = 0,DES_SW = 2,};
enum MACRO_DESERR {DESERR_NONE = 0,DESERR_NOHWDEVICE = 1,DESERR_HWERROR = 2,DESERR_BADPARAM = 3,};
enum MACRO_DESTRUCTOR_ITERATIONS {_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4,PTHREAD_DESTRUCTOR_ITERATIONS = 4,};
enum MACRO_DES_MAXLEN {DES_MAXLEN = 65536,DES_QUICKLEN = 16,};
enum MACRO_DEV {DEV_BSIZE = 512,};
enum MACRO_DF {DF_ORIGIN = 0x1,DF_SYMBOLIC = 0x2,DF_TEXTREL = 0x4,DF_BIND_NOW = 0x8,DF_STATIC_TLS = 0x10,DF_1_NOW = 0x1,DF_1_GLOBAL = 0x2,DF_1_GROUP = 0x4,DF_1_NODELETE = 0x8,DF_1_LOADFLTR = 0x10,DF_1_INITFIRST = 0x20,DF_1_NOOPEN = 0x40,DF_1_ORIGIN = 0x80,DF_1_DIRECT = 0x100,DF_1_TRANS = 0x200,DF_1_INTERPOSE = 0x400,DF_1_NODEFLIB = 0x800,DF_1_NODUMP = 0x1000,DF_1_CONFALT = 0x2000,DF_1_ENDFILTEE = 0x4000,DF_1_DISPRELDNE = 0x8000,DF_1_DISPRELPND = 0x10000,DF_1_NODIRECT = 0x20000,DF_1_IGNMULDEF = 0x40000,DF_1_NOKSYMS = 0x80000,DF_1_NOHDR = 0x100000,DF_1_EDITED = 0x200000,DF_1_NORELOC = 0x400000,DF_1_SYMINTPOSE = 0x800000,DF_1_GLOBAUDIT = 0x1000000,DF_1_SINGLETON = 0x2000000,};
enum MACRO_DF_P1 {DF_P1_LAZYLOAD = 0x1,DF_P1_GROUPPERM = 0x2,};
enum MACRO_DIRTYPE {DIRTYPE = 53,};
enum MACRO_DM {DM = 242,};
enum MACRO_DO {DO = 253,};
enum MACRO_DOMAIN {DOMAIN = 1,SING = 2,};
enum MACRO_DONT {DONT = 254,};
enum MACRO_DSP {DSP_CAP_REVISION = 0xFF,DSP_CAP_DUPLEX = 0x100,DSP_CAP_REALTIME = 0x200,DSP_CAP_BATCH = 0x400,DSP_CAP_COPROC = 0x800,DSP_CAP_TRIGGER = 0x1000,DSP_CAP_MMAP = 0x2000,DSP_CAP_MULTI = 0x4000,DSP_CAP_BIND = 0x8000,};
enum MACRO_DSP_BIND {DSP_BIND_QUERY = 0x0,DSP_BIND_FRONT = 0x1,DSP_BIND_SURR = 0x2,DSP_BIND_CENTER_LFE = 0x4,DSP_BIND_HANDSET = 0x8,DSP_BIND_MIC = 0x10,DSP_BIND_MODEM1 = 0x20,DSP_BIND_MODEM2 = 0x40,DSP_BIND_I2S = 0x80,DSP_BIND_SPDIF = 0x100,};
enum MACRO_DT {DT_NULL = 0,DT_NEEDED = 1,DT_PLTRELSZ = 2,DT_PLTGOT = 3,DT_HASH = 4,DT_STRTAB = 5,DT_SYMTAB = 6,DT_RELA = 7,DT_RELASZ = 8,DT_RELAENT = 9,DT_STRSZ = 10,DT_SYMENT = 11,DT_INIT = 12,DT_FINI = 13,DT_SONAME = 14,DT_RPATH = 15,DT_SYMBOLIC = 16,DT_REL = 17,DT_RELSZ = 18,DT_RELENT = 19,DT_PLTREL = 20,DT_DEBUG = 21,DT_TEXTREL = 22,DT_JMPREL = 23,DT_BIND_NOW = 24,DT_INIT_ARRAY = 25,DT_FINI_ARRAY = 26,DT_INIT_ARRAYSZ = 27,DT_FINI_ARRAYSZ = 28,DT_RUNPATH = 29,DT_FLAGS = 30,DT_ENCODING = 32,DT_PREINIT_ARRAY = 32,DT_PREINIT_ARRAYSZ = 33,DT_NUM = 34,DT_LOOS = 1610612749,DT_HIOS = 1879044096,DT_LOPROC = 1879048192,DT_HIPROC = 2147483647,DT_VALRNGLO = 1879047424,DT_GNU_PRELINKED = 1879047669,DT_GNU_CONFLICTSZ = 1879047670,DT_GNU_LIBLISTSZ = 1879047671,DT_CHECKSUM = 1879047672,DT_PLTPADSZ = 1879047673,DT_MOVEENT = 1879047674,DT_MOVESZ = 1879047675,DT_FEATURE_1 = 1879047676,DT_POSFLAG_1 = 1879047677,DT_SYMINSZ = 1879047678,DT_SYMINENT = 1879047679,DT_VALRNGHI = 1879047679,DT_VALNUM = 12,DT_ADDRRNGLO = 1879047680,DT_GNU_HASH = 1879047925,DT_TLSDESC_PLT = 1879047926,DT_TLSDESC_GOT = 1879047927,DT_GNU_CONFLICT = 1879047928,DT_GNU_LIBLIST = 1879047929,DT_CONFIG = 1879047930,DT_DEPAUDIT = 1879047931,DT_AUDIT = 1879047932,DT_PLTPAD = 1879047933,DT_MOVETAB = 1879047934,DT_SYMINFO = 1879047935,DT_ADDRRNGHI = 1879047935,DT_ADDRNUM = 11,DT_VERSYM = 1879048176,DT_RELACOUNT = 1879048185,DT_RELCOUNT = 1879048186,DT_FLAGS_1 = 1879048187,DT_VERDEF = 1879048188,DT_VERDEFNUM = 1879048189,DT_VERNEED = 1879048190,DT_VERNEEDNUM = 1879048191,DT_VERSIONTAGNUM = 16,DT_AUXILIARY = 2147483645,DT_FILTER = 2147483647,DT_EXTRANUM = 3,};
enum MACRO_DTF {DTF_1_PARINIT = 0x1,DTF_1_CONFEXP = 0x2,};
enum MACRO_DT_ALPHA {DT_ALPHA_PLTRO = 1879048192,DT_ALPHA_NUM = 1,};
enum MACRO_DT_IA {DT_IA_64_PLT_RESERVE = 1879048192,DT_IA_64_NUM = 1,};
enum MACRO_DT_MIPS {DT_MIPS_RLD_VERSION = 0x70000001,DT_MIPS_TIME_STAMP = 0x70000002,DT_MIPS_ICHECKSUM = 0x70000003,DT_MIPS_IVERSION = 0x70000004,DT_MIPS_FLAGS = 0x70000005,DT_MIPS_BASE_ADDRESS = 0x70000006,DT_MIPS_MSYM = 0x70000007,DT_MIPS_CONFLICT = 0x70000008,DT_MIPS_LIBLIST = 0x70000009,DT_MIPS_LOCAL_GOTNO = 0x7000000A,DT_MIPS_CONFLICTNO = 0x7000000B,DT_MIPS_LIBLISTNO = 0x70000010,DT_MIPS_SYMTABNO = 0x70000011,DT_MIPS_UNREFEXTNO = 0x70000012,DT_MIPS_GOTSYM = 0x70000013,DT_MIPS_HIPAGENO = 0x70000014,DT_MIPS_RLD_MAP = 0x70000016,DT_MIPS_DELTA_CLASS = 0x70000017,DT_MIPS_DELTA_CLASS_NO = 0x70000018,DT_MIPS_DELTA_INSTANCE = 0x70000019,DT_MIPS_DELTA_INSTANCE_NO = 0x7000001A,DT_MIPS_DELTA_RELOC = 0x7000001B,DT_MIPS_DELTA_RELOC_NO = 0x7000001C,DT_MIPS_DELTA_SYM = 0x7000001D,DT_MIPS_DELTA_SYM_NO = 0x7000001E,DT_MIPS_DELTA_CLASSSYM = 0x70000020,DT_MIPS_DELTA_CLASSSYM_NO = 0x70000021,DT_MIPS_CXX_FLAGS = 0x70000022,DT_MIPS_PIXIE_INIT = 0x70000023,DT_MIPS_SYMBOL_LIB = 0x70000024,DT_MIPS_LOCALPAGE_GOTIDX = 0x70000025,DT_MIPS_LOCAL_GOTIDX = 0x70000026,DT_MIPS_HIDDEN_GOTIDX = 0x70000027,DT_MIPS_PROTECTED_GOTIDX = 0x70000028,DT_MIPS_OPTIONS = 0x70000029,DT_MIPS_INTERFACE = 0x7000002A,DT_MIPS_DYNSTR_ALIGN = 0x7000002B,DT_MIPS_INTERFACE_SIZE = 0x7000002C,DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 0x7000002D,DT_MIPS_PERF_SUFFIX = 0x7000002E,DT_MIPS_COMPACT_SIZE = 0x7000002F,DT_MIPS_GP_VALUE = 0x70000030,DT_MIPS_AUX_DYNAMIC = 0x70000031,DT_MIPS_PLTGOT = 0x70000032,DT_MIPS_RWPLT = 0x70000034,DT_MIPS_NUM = 0x35,};
enum MACRO_DT_NIOS2 {DT_NIOS2_GP = 0x70000002,};
enum MACRO_DT_PPC {DT_PPC_GOT = 1879048192,DT_PPC_NUM = 1,};
enum MACRO_DT_PPC64 {DT_PPC64_GLINK = 1879048192,DT_PPC64_OPD = 1879048193,DT_PPC64_OPDSZ = 1879048194,DT_PPC64_OPT = 1879048195,DT_PPC64_NUM = 4,};
enum MACRO_DT_SPARC {DT_SPARC_REGISTER = 0x70000001,DT_SPARC_NUM = 0x2,};
enum MACRO_E {E_MIPS_ARCH_1 = 0,E_MIPS_ARCH_2 = 268435456,E_MIPS_ARCH_3 = 536870912,E_MIPS_ARCH_4 = 805306368,E_MIPS_ARCH_5 = 1073741824,E_MIPS_ARCH_32 = 1342177280,E_MIPS_ARCH_64 = 1610612736,};
enum MACRO_EAI {EAI_BADFLAGS = -1,EAI_NONAME = -2,EAI_AGAIN = -3,EAI_FAIL = -4,EAI_FAMILY = -6,EAI_SOCKTYPE = -7,EAI_SERVICE = -8,EAI_MEMORY = -10,EAI_SYSTEM = -11,EAI_OVERFLOW = -12,};
enum MACRO_EBADID {EBADID = 5,};
enum MACRO_EC {EC = 247,};
enum MACRO_ECHO {ECHO = 0x8,};
enum MACRO_ECHOCTL {ECHOCTL = 0x40,};
enum MACRO_ECHOE {ECHOE = 0x2,ECHOK = 0x4,ECHONL = 0x10,NOFLSH = 0x80000000,};
enum MACRO_ECHOKE {ECHOKE = 0x1,FLUSHO = 0x800000,PENDIN = 0x20000000,};
enum MACRO_ECHOPRT {ECHOPRT = 0x20,};
enum MACRO_ECTYPE {ECTYPE_PACKET_RECEIVED = 0,ECTYPE_TRANSMIT_STATUS = 16,ECTYPE_TRANSMIT_OK = 1,ECTYPE_TRANSMIT_NOT_LISTENING = 2,ECTYPE_TRANSMIT_NET_ERROR = 3,ECTYPE_TRANSMIT_NO_CLOCK = 4,ECTYPE_TRANSMIT_LINE_JAMMED = 5,ECTYPE_TRANSMIT_NOT_PRESENT = 6,};
enum MACRO_EDEADLOCK {EDEADLOCK = 58,};
enum MACRO_EEXISTS {EEXISTS = 6,};
enum MACRO_EF {EF_CPU32 = 0x810000,};
enum MACRO_EFA {EFA_PARISC_1_0 = 0x20B,EFA_PARISC_1_1 = 0x210,EFA_PARISC_2_0 = 0x214,};
enum MACRO_EF_ALPHA {EF_ALPHA_32BIT = 1,EF_ALPHA_CANRELAX = 2,};
enum MACRO_EF_ARM {EF_ARM_RELEXEC = 0x1,EF_ARM_HASENTRY = 0x2,EF_ARM_INTERWORK = 0x4,EF_ARM_APCS_26 = 0x8,EF_ARM_APCS_FLOAT = 0x10,EF_ARM_PIC = 0x20,EF_ARM_ALIGN8 = 0x40,EF_ARM_NEW_ABI = 0x80,EF_ARM_OLD_ABI = 0x100,EF_ARM_SOFT_FLOAT = 0x200,EF_ARM_VFP_FLOAT = 0x400,EF_ARM_MAVERICK_FLOAT = 0x800,EF_ARM_ABI_FLOAT_SOFT = 0x200,EF_ARM_ABI_FLOAT_HARD = 0x400,EF_ARM_SYMSARESORTED = 0x4,EF_ARM_DYNSYMSUSESEGIDX = 0x8,EF_ARM_MAPSYMSFIRST = 0x10,EF_ARM_EABIMASK = 0xFF000000,EF_ARM_BE8 = 0x800000,EF_ARM_LE8 = 0x400000,EF_ARM_EABI_UNKNOWN = 0x0,EF_ARM_EABI_VER1 = 0x1000000,EF_ARM_EABI_VER2 = 0x2000000,EF_ARM_EABI_VER3 = 0x3000000,EF_ARM_EABI_VER4 = 0x4000000,EF_ARM_EABI_VER5 = 0x5000000,};
enum MACRO_EF_IA {EF_IA_64_MASKOS = 0xF,EF_IA_64_ABI64 = 0x10,EF_IA_64_ARCH = 0xFF000000,};
enum MACRO_EF_MIPS {EF_MIPS_NOREORDER = 1,EF_MIPS_PIC = 2,EF_MIPS_CPIC = 4,EF_MIPS_XGOT = 8,EF_MIPS_64BIT_WHIRL = 16,EF_MIPS_ABI2 = 32,EF_MIPS_ABI_ON32 = 64,EF_MIPS_FP64 = 512,EF_MIPS_NAN2008 = 1024,EF_MIPS_ARCH = -268435456,EF_MIPS_ARCH_1 = 0,EF_MIPS_ARCH_2 = 268435456,EF_MIPS_ARCH_3 = 536870912,EF_MIPS_ARCH_4 = 805306368,EF_MIPS_ARCH_5 = 1073741824,EF_MIPS_ARCH_32 = 1342177280,EF_MIPS_ARCH_64 = 1610612736,EF_MIPS_ARCH_32R2 = 1879048192,EF_MIPS_ARCH_64R2 = -2147483648,};
enum MACRO_EF_PARISC {EF_PARISC_TRAPNIL = 0x10000,EF_PARISC_EXT = 0x20000,EF_PARISC_LSB = 0x40000,EF_PARISC_WIDE = 0x80000,EF_PARISC_NO_KABP = 0x100000,EF_PARISC_LAZYSWAP = 0x400000,EF_PARISC_ARCH = 0xFFFF,};
enum MACRO_EF_PPC {EF_PPC_EMB = 0x80000000,EF_PPC_RELOCATABLE = 0x10000,EF_PPC_RELOCATABLE_LIB = 0x8000,};
enum MACRO_EF_PPC64 {EF_PPC64_ABI = 3,};
enum MACRO_EF_S390 {EF_S390_HIGH_GPRS = 0x1,};
enum MACRO_EF_SH {EF_SH_MACH_MASK = 0x1F,EF_SH_UNKNOWN = 0x0,EF_SH1 = 0x1,EF_SH2 = 0x2,EF_SH3 = 0x3,EF_SH_DSP = 0x4,EF_SH3_DSP = 0x5,EF_SH4AL_DSP = 0x6,EF_SH3E = 0x8,EF_SH4 = 0x9,EF_SH2E = 0xB,EF_SH4A = 0xC,EF_SH2A = 0xD,EF_SH4_NOFPU = 0x10,EF_SH4A_NOFPU = 0x11,EF_SH4_NOMMU_NOFPU = 0x12,EF_SH2A_NOFPU = 0x13,EF_SH3_NOMMU = 0x14,EF_SH2A_SH4_NOFPU = 0x15,EF_SH2A_SH3_NOFPU = 0x16,EF_SH2A_SH4 = 0x17,EF_SH2A_SH3E = 0x18,};
enum MACRO_EF_SPARCV9 {EF_SPARCV9_MM = 3,EF_SPARCV9_TSO = 0,EF_SPARCV9_PSO = 1,EF_SPARCV9_RMO = 2,EF_SPARC_LEDATA = 8388608,EF_SPARC_EXT_MASK = 16776960,EF_SPARC_32PLUS = 256,EF_SPARC_SUN_US1 = 512,EF_SPARC_HAL_R1 = 1024,EF_SPARC_SUN_US3 = 2048,};
enum MACRO_EI {EI_NIDENT = 16,EI_MAG0 = 0,};
enum MACRO_EI_ABIVERSION {EI_ABIVERSION = 8,EI_PAD = 9,};
enum MACRO_EI_CLASS {EI_CLASS = 4,};
enum MACRO_EI_DATA {EI_DATA = 5,};
enum MACRO_EI_MAG1 {EI_MAG1 = 1,};
enum MACRO_EI_MAG2 {EI_MAG2 = 2,};
enum MACRO_EI_MAG3 {EI_MAG3 = 3,};
enum MACRO_EI_VERSION {EI_VERSION = 6,EI_OSABI = 7,};
enum MACRO_EL {EL = 248,};
enum MACRO_ELF {ELF_NOTE_PAGESIZE_HINT = 1,};
enum MACRO_ELFCLASSNONE {ELFCLASSNONE = 0,ELFCLASS32 = 1,ELFCLASS64 = 2,};
enum MACRO_ELFCLASSNUM {ELFCLASSNUM = 3,};
enum MACRO_ELFDATANONE {ELFDATANONE = 0,ELFDATA2LSB = 1,ELFDATA2MSB = 2,};
enum MACRO_ELFDATANUM {ELFDATANUM = 3,};
enum MACRO_ELFMAG0 {ELFMAG0 = 0x7F,};
enum MACRO_ELFMAG1 {ELFMAG1 = 69,};
enum MACRO_ELFMAG2 {ELFMAG2 = 76,};
enum MACRO_ELFMAG3 {ELFMAG3 = 70,};
enum MACRO_ELFOSABI {ELFOSABI_NONE = 0,ELFOSABI_SYSV = 0,ELFOSABI_HPUX = 1,ELFOSABI_NETBSD = 2,ELFOSABI_GNU = 3,ELFOSABI_LINUX = 3,ELFOSABI_SOLARIS = 6,ELFOSABI_AIX = 7,ELFOSABI_IRIX = 8,ELFOSABI_FREEBSD = 9,ELFOSABI_TRU64 = 10,ELFOSABI_MODESTO = 11,ELFOSABI_OPENBSD = 12,ELFOSABI_ARM_AEABI = 64,ELFOSABI_ARM = 97,ELFOSABI_STANDALONE = 255,};
enum MACRO_ELF_NGREG {ELF_NGREG = 48,ELF_NFPREG = 33,ELF_NVRREG = 33,ELF_PRARGSZ = 80,};
enum MACRO_ELF_NOTE {ELF_NOTE_ABI = 1,ELF_NOTE_OS_LINUX = 0,ELF_NOTE_OS_GNU = 1,ELF_NOTE_OS_SOLARIS2 = 2,ELF_NOTE_OS_FREEBSD = 3,};
enum MACRO_EM {EM_NONE = 0,EM_M32 = 1,EM_SPARC = 2,EM_386 = 3,EM_68K = 4,EM_88K = 5,EM_860 = 7,EM_MIPS = 8,EM_S370 = 9,EM_MIPS_RS3_LE = 10,EM_PARISC = 15,EM_VPP500 = 17,EM_SPARC32PLUS = 18,EM_960 = 19,EM_PPC = 20,EM_PPC64 = 21,EM_S390 = 22,EM_V800 = 36,EM_FR20 = 37,EM_RH32 = 38,EM_RCE = 39,EM_ARM = 40,EM_FAKE_ALPHA = 41,EM_SH = 42,EM_SPARCV9 = 43,EM_TRICORE = 44,EM_ARC = 45,EM_H8_300 = 46,EM_H8_300H = 47,EM_H8S = 48,EM_H8_500 = 49,EM_IA_64 = 50,EM_MIPS_X = 51,EM_COLDFIRE = 52,EM_68HC12 = 53,EM_MMA = 54,EM_PCP = 55,EM_NCPU = 56,EM_NDR1 = 57,EM_STARCORE = 58,EM_ME16 = 59,EM_ST100 = 60,EM_TINYJ = 61,EM_X86_64 = 62,EM_PDSP = 63,EM_FX66 = 66,EM_ST9PLUS = 67,EM_ST7 = 68,EM_68HC16 = 69,EM_68HC11 = 70,EM_68HC08 = 71,EM_68HC05 = 72,EM_SVX = 73,EM_ST19 = 74,EM_VAX = 75,EM_CRIS = 76,EM_JAVELIN = 77,EM_FIREPATH = 78,EM_ZSP = 79,EM_MMIX = 80,EM_HUANY = 81,EM_PRISM = 82,EM_AVR = 83,EM_FR30 = 84,EM_D10V = 85,EM_D30V = 86,EM_V850 = 87,EM_M32R = 88,EM_MN10300 = 89,EM_MN10200 = 90,EM_PJ = 91,EM_OPENRISC = 92,EM_ARC_A5 = 93,EM_XTENSA = 94,EM_ALTERA_NIOS2 = 113,EM_AARCH64 = 183,EM_TILEPRO = 188,EM_MICROBLAZE = 189,EM_TILEGX = 191,EM_NUM = 192,EM_ALPHA = 36902,};
enum MACRO_EMPTY {EMPTY = 0,};
enum MACRO_ENCODING {ENCODING_DEFAULT = 0,ENCODING_NRZ = 1,ENCODING_NRZI = 2,ENCODING_FM_MARK = 3,ENCODING_FM_SPACE = 4,ENCODING_MANCHESTER = 5,};
enum MACRO_ENCRYPT {ENCRYPT_IS = 0,ENCRYPT_SUPPORT = 1,ENCRYPT_REPLY = 2,ENCRYPT_START = 3,ENCRYPT_END = 4,ENCRYPT_REQSTART = 5,ENCRYPT_REQEND = 6,ENCRYPT_ENC_KEYID = 7,ENCRYPT_DEC_KEYID = 8,ENCRYPT_CNT = 9,};
enum MACRO_ENCTYPE {ENCTYPE_ANY = 0,ENCTYPE_DES_CFB64 = 1,ENCTYPE_DES_OFB64 = 2,ENCTYPE_CNT = 3,};
enum MACRO_ENDIAN {__LITTLE_ENDIAN = 1234,__BIG_ENDIAN = 4321,__PDP_ENDIAN = 3412,};
enum MACRO_ENOSPACE {ENOSPACE = 3,EBADOP = 4,};
enum MACRO_ENOTSUP {ENOTSUP = 95,};
enum MACRO_ENOUSER {ENOUSER = 7,};
enum MACRO_ENV {ENV_ESC = 2,ENV_USERVAR = 3,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_EOR {EOR = 239,};
enum MACRO_EPOLL {EPOLL_CTL_ADD = 1,EPOLL_CTL_DEL = 2,EPOLL_CTL_MOD = 3,};
enum MACRO_ERRNO {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EAGAIN = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,ENOTBLK = 15,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,EINVAL = 22,ENFILE = 23,EMFILE = 24,ENOTTY = 25,ETXTBSY = 26,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,ERANGE = 34,EDEADLK = 35,ENAMETOOLONG = 36,ENOLCK = 37,ENOSYS = 38,ENOTEMPTY = 39,ELOOP = 40,EWOULDBLOCK = 11,ENOMSG = 42,EIDRM = 43,ECHRNG = 44,EL2NSYNC = 45,EL3HLT = 46,EL3RST = 47,ELNRNG = 48,EUNATCH = 49,ENOCSI = 50,EL2HLT = 51,EBADE = 52,EBADR = 53,EXFULL = 54,ENOANO = 55,EBADRQC = 56,EBADSLT = 57,EBFONT = 59,ENOSTR = 60,ENODATA = 61,ETIME = 62,ENOSR = 63,ENONET = 64,ENOPKG = 65,EREMOTE = 66,ENOLINK = 67,EADV = 68,ESRMNT = 69,ECOMM = 70,EPROTO = 71,EMULTIHOP = 72,EDOTDOT = 73,EBADMSG = 74,EOVERFLOW = 75,ENOTUNIQ = 76,EBADFD = 77,EREMCHG = 78,ELIBACC = 79,ELIBBAD = 80,ELIBSCN = 81,ELIBMAX = 82,ELIBEXEC = 83,EILSEQ = 84,ERESTART = 85,ESTRPIPE = 86,EUSERS = 87,ENOTSOCK = 88,EDESTADDRREQ = 89,EMSGSIZE = 90,EPROTOTYPE = 91,ENOPROTOOPT = 92,EPROTONOSUPPORT = 93,ESOCKTNOSUPPORT = 94,EOPNOTSUPP = 95,EPFNOSUPPORT = 96,EAFNOSUPPORT = 97,EADDRINUSE = 98,EADDRNOTAVAIL = 99,ENETDOWN = 100,ENETUNREACH = 101,ENETRESET = 102,ECONNABORTED = 103,ECONNRESET = 104,ENOBUFS = 105,EISCONN = 106,ENOTCONN = 107,ESHUTDOWN = 108,ETOOMANYREFS = 109,ETIMEDOUT = 110,ECONNREFUSED = 111,EHOSTDOWN = 112,EHOSTUNREACH = 113,EALREADY = 114,EINPROGRESS = 115,ESTALE = 116,EUCLEAN = 117,ENOTNAM = 118,ENAVAIL = 119,EISNAM = 120,EREMOTEIO = 121,EDQUOT = 122,ENOMEDIUM = 123,EMEDIUMTYPE = 124,ECANCELED = 125,ENOKEY = 126,EKEYEXPIRED = 127,EKEYREVOKED = 128,EKEYREJECTED = 129,EOWNERDEAD = 130,ENOTRECOVERABLE = 131,ERFKILL = 132,EHWPOISON = 133,};
enum MACRO_ERROR {ERROR = 5,};
enum MACRO_ERROR_TABLE {ERROR_TABLE_BASE_ss = 748800,};
enum MACRO_ET {ET_NONE = 0,ET_REL = 1,ET_EXEC = 2,ET_DYN = 3,ET_CORE = 4,ET_NUM = 5,ET_LOOS = 65024,ET_HIOS = 65279,ET_LOPROC = 65280,ET_HIPROC = 65535,};
enum MACRO_ETH {ETH_ALEN = 6,ETH_HLEN = 14,ETH_ZLEN = 60,ETH_DATA_LEN = 1500,ETH_FRAME_LEN = 1514,ETH_FCS_LEN = 4,ETH_P_LOOP = 96,ETH_P_PUP = 512,ETH_P_PUPAT = 513,ETH_P_IP = 2048,ETH_P_X25 = 2053,ETH_P_ARP = 2054,ETH_P_BPQ = 2303,ETH_P_IEEEPUP = 2560,ETH_P_IEEEPUPAT = 2561,ETH_P_BATMAN = 17157,ETH_P_DEC = 24576,ETH_P_DNA_DL = 24577,ETH_P_DNA_RC = 24578,ETH_P_DNA_RT = 24579,ETH_P_LAT = 24580,ETH_P_DIAG = 24581,ETH_P_CUST = 24582,ETH_P_SCA = 24583,ETH_P_TEB = 25944,ETH_P_RARP = 32821,ETH_P_ATALK = 32923,ETH_P_AARP = 33011,ETH_P_8021Q = 33024,ETH_P_IPX = 33079,ETH_P_IPV6 = 34525,ETH_P_PAUSE = 34824,ETH_P_SLOW = 34825,ETH_P_WCCP = 34878,ETH_P_MPLS_UC = 34887,ETH_P_MPLS_MC = 34888,ETH_P_ATMMPOA = 34892,ETH_P_PPP_DISC = 34915,ETH_P_PPP_SES = 34916,ETH_P_LINK_CTL = 34924,ETH_P_ATMFATE = 34948,ETH_P_PAE = 34958,ETH_P_AOE = 34978,ETH_P_8021AD = 34984,ETH_P_802_EX1 = 34997,ETH_P_TIPC = 35018,ETH_P_8021AH = 35047,ETH_P_MVRP = 35061,ETH_P_1588 = 35063,ETH_P_PRP = 35067,ETH_P_FCOE = 35078,ETH_P_TDLS = 35085,ETH_P_FIP = 35092,ETH_P_80221 = 35095,ETH_P_LOOPBACK = 36864,ETH_P_QINQ1 = 37120,ETH_P_QINQ2 = 37376,ETH_P_QINQ3 = 37632,ETH_P_EDSA = 56026,ETH_P_AF_IUCV = 64507,ETH_P_802_3_MIN = 1536,ETH_P_802_3 = 1,ETH_P_AX25 = 2,ETH_P_ALL = 3,ETH_P_802_2 = 4,ETH_P_SNAP = 5,ETH_P_DDCMP = 6,ETH_P_WAN_PPP = 7,ETH_P_PPP_MP = 8,ETH_P_LOCALTALK = 9,ETH_P_CAN = 12,ETH_P_CANFD = 13,ETH_P_PPPTALK = 16,ETH_P_TR_802_2 = 17,ETH_P_MOBITEX = 21,ETH_P_CONTROL = 22,ETH_P_IRDA = 23,ETH_P_ECONET = 24,ETH_P_HDLC = 25,ETH_P_ARCNET = 26,ETH_P_DSA = 27,ETH_P_TRAILER = 28,ETH_P_PHONET = 245,ETH_P_IEEE802154 = 246,ETH_P_CAIF = 247,ETH_P_XDSA = 248,};
enum MACRO_ETHER {ETHER_ADDR_LEN = 6,ETHER_TYPE_LEN = 2,ETHER_CRC_LEN = 4,ETHER_HDR_LEN = 14,ETHER_MIN_LEN = 64,ETHER_MAX_LEN = 1518,};
enum MACRO_ETHERMIN {ETHERMIN = 46,};
enum MACRO_ETHERMTU {ETHERMTU = 1500,};
enum MACRO_ETHERTYPE {ETHERTYPE_PUP = 0x200,ETHERTYPE_SPRITE = 0x500,ETHERTYPE_IP = 0x800,ETHERTYPE_ARP = 0x806,ETHERTYPE_REVARP = 0x8035,ETHERTYPE_AT = 0x809B,ETHERTYPE_AARP = 0x80F3,ETHERTYPE_VLAN = 0x8100,ETHERTYPE_IPX = 0x8137,ETHERTYPE_IPV6 = 0x86DD,ETHERTYPE_LOOPBACK = 0x9000,};
enum MACRO_ETHERTYPE_TRAIL {ETHERTYPE_TRAIL = 0x1000,ETHERTYPE_NTRAILER = 0x10,};
enum MACRO_ETHER_H {_NETINET_ETHER_H = 1,__NETINET_IF_ETHER_H = 1,_NETINET_ICMP6_H = 1,};
enum MACRO_EUNDEF {EUNDEF = 0,ENOTFOUND = 1,EACCESS = 2,};
enum MACRO_EV {EV_NONE = 0,EV_CURRENT = 1,EV_NUM = 2,};
enum MACRO_EV_SEQ {EV_SEQ_LOCAL = 0x80,EV_TIMING = 0x81,EV_CHN_COMMON = 0x92,EV_CHN_VOICE = 0x93,EV_SYSEX = 0x94,};
enum MACRO_EX {EX_OK = 0,EX__BASE = 64,EX_USAGE = 64,EX_DATAERR = 65,EX_NOINPUT = 66,EX_NOUSER = 67,EX_NOHOST = 68,EX_UNAVAILABLE = 69,EX_SOFTWARE = 70,EX_OSERR = 71,EX_OSFILE = 72,EX_CANTCREAT = 73,EX_IOERR = 74,EX_TEMPFAIL = 75,EX_PROTOCOL = 76,EX_NOPERM = 77,EX_CONFIG = 78,EX__MAX = 78,};
enum MACRO_EXEC {EXEC_PAGESIZE = 4096,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_EXPIRE {EXPIRE_TIME = 180,GARBAGE_TIME = 240,};
enum MACRO_EXTA {EXTA = 14,};
enum MACRO_EXTB {EXTB = 15,CBAUDEX = 16,};
enum MACRO_EXTENDED {EXTENDED_SAP = 0xAA,};
enum MACRO_E_OK {E_OK = 0,E_SYSTEM_ERROR = -1,E_BAD_ARGUMENT = -2,E_POSTED = -3,E_CONNECTED = -4,E_BAD_STATE = -5,E_NO_ROOM = -6,E_NOT_POSTED = -7,E_UNKNOWN_COMMAND = -8,E_NO_MATCH = -9,E_NOT_SELECTABLE = -10,E_NOT_CONNECTED = -11,E_REQUEST_DENIED = -12,E_INVALID_FIELD = -13,E_CURRENT = -14,};
enum MACRO_E_TABSZ {E_TABSZ = 256,};
enum MACRO_F {F_GETLK = 5,F_SETLK = 6,F_SETLKW = 7,F_GETLK64 = 12,F_SETLK64 = 13,F_SETLKW64 = 14,};
enum MACRO_FAILED {FAILED = 2,};
enum MACRO_FAPPEND {FAPPEND = 1024,FFSYNC = 1052672,};
enum MACRO_FASYNC {FASYNC = 8192,};
enum MACRO_FD {FD_SETSIZE = 1024,};
enum MACRO_FDDI {FDDI_K_ALEN = 6,FDDI_K_8022_HLEN = 16,FDDI_K_SNAP_HLEN = 21,FDDI_K_8022_ZLEN = 16,FDDI_K_SNAP_ZLEN = 21,FDDI_K_8022_DLEN = 4475,FDDI_K_SNAP_DLEN = 4470,FDDI_K_LLC_ZLEN = 13,FDDI_K_LLC_LEN = 4491,FDDI_K_OUI_LEN = 3,FDDI_FC_K_VOID = 0,FDDI_FC_K_NON_RESTRICTED_TOKEN = 128,FDDI_FC_K_RESTRICTED_TOKEN = 192,FDDI_FC_K_SMT_MIN = 65,FDDI_FC_K_SMT_MAX = 79,FDDI_FC_K_MAC_MIN = 193,FDDI_FC_K_MAC_MAX = 207,FDDI_FC_K_ASYNC_LLC_MIN = 80,FDDI_FC_K_ASYNC_LLC_DEF = 84,FDDI_FC_K_ASYNC_LLC_MAX = 95,FDDI_FC_K_SYNC_LLC_MIN = 208,FDDI_FC_K_SYNC_LLC_MAX = 215,FDDI_FC_K_IMPLEMENTOR_MIN = 96,FDDI_FC_K_IMPLEMENTOR_MAX = 111,FDDI_FC_K_RESERVED_MIN = 112,FDDI_FC_K_RESERVED_MAX = 127,FDDI_EXTENDED_SAP = 170,FDDI_UI_CMD = 3,};
enum MACRO_FF0 {FF0 = 0x0,FF1 = 0x4000,BSDLY = 0x8000,};
enum MACRO_FIFOTYPE {FIFOTYPE = 54,};
enum MACRO_FILENO {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_FIOCLEX {FIOCLEX = 536897025,};
enum MACRO_FIOGETOWN {FIOGETOWN = 0x8903,};
enum MACRO_FIONCLEX {FIONCLEX = 536897026,};
enum MACRO_FIOSETOWN {FIOSETOWN = 0x8901,};
enum MACRO_FLUSHR {FLUSHR = 0x1,FLUSHW = 0x2,};
enum MACRO_FLUSHRW {FLUSHRW = 0x3,};
enum MACRO_FM {FM_PATCH = 0xFD01,OPL3_PATCH = 0xFD03,};
enum MACRO_FMNAMESZ {FMNAMESZ = 8,};
enum MACRO_FM_TYPE {FM_TYPE_ADLIB = 0x0,FM_TYPE_OPL3 = 0x1,};
enum MACRO_FNDELAY {FNDELAY = 2048,};
enum MACRO_FNM {FNM_PATHNAME = 1,FNM_NOESCAPE = 2,FNM_PERIOD = 4,FNM_NOMATCH = 1,};
enum MACRO_FNONBLOCK {FNONBLOCK = 2048,};
enum MACRO_FONT {GIO_FONT = 0x4B60,PIO_FONT = 0x4B61,};
enum MACRO_FONTX {GIO_FONTX = 0x4B6B,PIO_FONTX = 0x4B6C,};
enum MACRO_FOPEN {FOPEN_MAX = 16,};
enum MACRO_FORM {FORM_N = 1,FORM_T = 2,FORM_C = 3,};
enum MACRO_FP {FP_ILOGB0 = -2147483647,FP_ILOGBNAN = 2147483647,FP_FAST_FMA = 1,FP_FAST_FMAF = 1,};
enum MACRO_FTS {FTS_COMFOLLOW = 0x1,FTS_LOGICAL = 0x2,FTS_NOCHDIR = 0x4,FTS_NOSTAT = 0x8,FTS_PHYSICAL = 0x10,FTS_SEEDOT = 0x20,FTS_XDEV = 0x40,FTS_WHITEOUT = 0x80,FTS_OPTIONMASK = 0xFF,FTS_NAMEONLY = 0x100,FTS_STOP = 0x200,FTS_ROOTPARENTLEVEL = 0xFFFFFFFF,FTS_ROOTLEVEL = 0x0,FTS_D = 0x1,FTS_DC = 0x2,FTS_DEFAULT = 0x3,FTS_DNR = 0x4,FTS_DOT = 0x5,FTS_DP = 0x6,FTS_ERR = 0x7,FTS_F = 0x8,FTS_INIT = 0x9,FTS_NS = 0xA,FTS_NSOK = 0xB,FTS_SL = 0xC,FTS_SLNONE = 0xD,FTS_W = 0xE,FTS_DONTCHDIR = 0x1,FTS_SYMFOLLOW = 0x2,FTS_AGAIN = 0x1,FTS_FOLLOW = 0x2,FTS_NOINSTR = 0x3,FTS_SKIP = 0x4,};
enum MACRO_F_DUPFD {F_DUPFD = 0,F_GETFD = 1,F_SETFD = 2,F_GETFL = 3,F_SETFL = 4,};
enum MACRO_F_RDLCK {F_RDLCK = 0,F_WRLCK = 1,F_UNLCK = 2,F_EXLCK = 4,F_SHLCK = 8,};
enum MACRO_F_SETOWN {F_SETOWN = 8,F_GETOWN = 9,};
enum MACRO_F_ULOCK {F_ULOCK = 0,F_LOCK = 1,F_TLOCK = 2,F_TEST = 3,};
enum MACRO_GA {GA = 249,};
enum MACRO_GDBM {GDBM_READER = 0,GDBM_WRITER = 1,GDBM_WRCREAT = 2,GDBM_NEWDB = 3,GDBM_OPENMASK = 7,GDBM_FAST = 16,GDBM_SYNC = 32,GDBM_NOLOCK = 64,GDBM_NOMMAP = 128,GDBM_CLOEXEC = 256,GDBM_INSERT = 0,GDBM_REPLACE = 1,GDBM_SETCACHESIZE = 1,GDBM_FASTMODE = 2,GDBM_SETSYNCMODE = 3,GDBM_SETCENTFREE = 4,GDBM_SETCOALESCEBLKS = 5,GDBM_SETMAXMAPSIZE = 6,GDBM_SETMMAP = 7,GDBM_CACHESIZE = 1,GDBM_SYNCMODE = 3,GDBM_CENTFREE = 4,GDBM_COALESCEBLKS = 5,GDBM_GETFLAGS = 8,GDBM_GETMMAP = 9,GDBM_GETCACHESIZE = 10,GDBM_GETSYNCMODE = 11,GDBM_GETCENTFREE = 12,GDBM_GETCOALESCEBLKS = 13,GDBM_GETMAXMAPSIZE = 14,GDBM_GETDBNAME = 15,GDBM_VERSION_MAJOR = 1,GDBM_VERSION_MINOR = 11,GDBM_VERSION_PATCH = 0,GDBM_DUMP_FMT_BINARY = 0,GDBM_DUMP_FMT_ASCII = 1,GDBM_META_MASK_MODE = 1,GDBM_META_MASK_OWNER = 2,GDBM_NO_ERROR = 0,GDBM_MALLOC_ERROR = 1,GDBM_BLOCK_SIZE_ERROR = 2,GDBM_FILE_OPEN_ERROR = 3,GDBM_FILE_WRITE_ERROR = 4,GDBM_FILE_SEEK_ERROR = 5,GDBM_FILE_READ_ERROR = 6,GDBM_BAD_MAGIC_NUMBER = 7,GDBM_EMPTY_DATABASE = 8,GDBM_CANT_BE_READER = 9,GDBM_CANT_BE_WRITER = 10,GDBM_READER_CANT_DELETE = 11,GDBM_READER_CANT_STORE = 12,GDBM_READER_CANT_REORGANIZE = 13,GDBM_UNKNOWN_UPDATE = 14,GDBM_ITEM_NOT_FOUND = 15,GDBM_REORGANIZE_FAILED = 16,GDBM_CANNOT_REPLACE = 17,GDBM_ILLEGAL_DATA = 18,GDBM_OPT_ALREADY_SET = 19,GDBM_OPT_ILLEGAL = 20,GDBM_BYTE_SWAPPED = 21,GDBM_BAD_FILE_OFFSET = 22,GDBM_BAD_OPEN_FLAGS = 23,GDBM_FILE_STAT_ERROR = 24,GDBM_FILE_EOF = 25,GDBM_NO_DBNAME = 26,GDBM_ERR_FILE_OWNER = 27,GDBM_ERR_FILE_MODE = 28,};
enum MACRO_GENERIC {GENERIC_HDLC_VERSION = 4,};
enum MACRO_GETALL {GETALL = 13,};
enum MACRO_GETNCNT {GETNCNT = 14,};
enum MACRO_GETPID {GETPID = 11,};
enum MACRO_GETVAL {GETVAL = 12,};
enum MACRO_GETZCNT {GETZCNT = 15,SETVAL = 16,};
enum MACRO_GLOB {GLOB_ERR = 1,GLOB_MARK = 2,GLOB_NOSORT = 4,GLOB_DOOFFS = 8,GLOB_NOCHECK = 16,GLOB_APPEND = 32,GLOB_NOESCAPE = 64,GLOB_PERIOD = 128,GLOB_MAGCHAR = 256,GLOB_ALTDIRFUNC = 512,GLOB_BRACE = 1024,GLOB_NOMAGIC = 2048,GLOB_TILDE = 4096,GLOB_ONLYDIR = 8192,GLOB_TILDE_CHECK = 16384,};
enum MACRO_GLOB_NOSPACE {GLOB_NOSPACE = 1,GLOB_ABORTED = 2,GLOB_NOMATCH = 3,GLOB_NOSYS = 4,};
enum MACRO_GMON {GMON_PROF_ON = 0,GMON_PROF_BUSY = 1,GMON_PROF_ERROR = 2,GMON_PROF_OFF = 3,};
enum MACRO_GMON_VERSION {GMON_VERSION = 1,GMON_SHOBJ_VERSION = 131071,};
enum MACRO_GPROF {GPROF_STATE = 0,GPROF_COUNT = 1,GPROF_FROMS = 2,GPROF_TOS = 3,GPROF_GMONPARAM = 4,};
enum MACRO_GRP {GRP_COMDAT = 0x1,};
enum MACRO_H {_STDINT_H = 1,_FEATURES_H = 1,};
enum MACRO_HASHFRACTION {HASHFRACTION = 2,};
enum MACRO_HFIXEDSZ {HFIXEDSZ = 12,};
enum MACRO_HISTFRACTION {HISTFRACTION = 2,};
enum MACRO_HOPCNT {HOPCNT_INFINITY = 16,};
enum MACRO_HOST {HOST_NOT_FOUND = 1,};
enum MACRO_HT : __int64 {HT_3BIT_CAP_MASK = 0xE0,HT_CAPTYPE_SLAVE = 0x0,HT_CAPTYPE_HOST = 0x20,HT_5BIT_CAP_MASK = 0xF8,HT_CAPTYPE_IRQ = 0x80,HT_CAPTYPE_REMAPPING_40 = 0xA0,HT_CAPTYPE_REMAPPING_64 = 0xA2,HT_CAPTYPE_UNITID_CLUMP = 0x90,HT_CAPTYPE_EXTCONF = 0x98,HT_CAPTYPE_MSI_MAPPING = 0xA8,HT_MSI_FLAGS = 0x2,HT_MSI_FLAGS_ENABLE = 0x1,HT_MSI_FLAGS_FIXED = 0x2,HT_MSI_FIXED_ADDR = 0xFEE00000,HT_MSI_ADDR_LO = 0x4,HT_MSI_ADDR_LO_MASK = 0xFFFFFFFFFFF00000,HT_MSI_ADDR_HI = 0x8,HT_CAPTYPE_DIRECT_ROUTE = 0xB0,HT_CAPTYPE_VCSET = 0xB8,HT_CAPTYPE_ERROR_RETRY = 0xC0,HT_CAPTYPE_GEN3 = 0xD0,HT_CAPTYPE_PM = 0xE0,HT_CAP_SIZEOF_LONG = 0x1C,HT_CAP_SIZEOF_SHORT = 0x18,};
enum MACRO_HZ {HZ = 100,};
enum MACRO_I {I_NREAD = 21249,I_PUSH = 21250,I_POP = 21251,I_LOOK = 21252,I_FLUSH = 21253,I_SRDOPT = 21254,I_GRDOPT = 21255,I_STR = 21256,I_SETSIG = 21257,I_GETSIG = 21258,I_FIND = 21259,I_LINK = 21260,I_UNLINK = 21261,I_PEEK = 21263,I_FDINSERT = 21264,I_SENDFD = 21265,I_RECVFD = 21262,I_SWROPT = 21267,I_GWROPT = 21268,I_LIST = 21269,I_PLINK = 21270,I_PUNLINK = 21271,I_FLUSHBAND = 21276,I_CKBAND = 21277,I_GETBAND = 21278,I_ATMARK = 21279,I_SETCLTIME = 21280,I_GETCLTIME = 21281,I_CANPUT = 21282,};
enum MACRO_IAC {IAC = 255,};
enum MACRO_ICMP {ICMP_ECHOREPLY = 0,ICMP_DEST_UNREACH = 3,ICMP_SOURCE_QUENCH = 4,ICMP_REDIRECT = 5,ICMP_ECHO = 8,ICMP_TIME_EXCEEDED = 11,ICMP_PARAMETERPROB = 12,ICMP_TIMESTAMP = 13,ICMP_TIMESTAMPREPLY = 14,ICMP_INFO_REQUEST = 15,ICMP_INFO_REPLY = 16,ICMP_ADDRESS = 17,ICMP_ADDRESSREPLY = 18,};
enum MACRO_ICMP6 {ICMP6_FILTER = 1,ICMP6_FILTER_BLOCK = 1,ICMP6_FILTER_PASS = 2,ICMP6_FILTER_BLOCKOTHERS = 3,ICMP6_FILTER_PASSONLY = 4,ICMP6_DST_UNREACH = 1,ICMP6_PACKET_TOO_BIG = 2,ICMP6_TIME_EXCEEDED = 3,ICMP6_PARAM_PROB = 4,ICMP6_INFOMSG_MASK = 128,ICMP6_ECHO_REQUEST = 128,ICMP6_ECHO_REPLY = 129,};
enum MACRO_ICMP6_DST {ICMP6_DST_UNREACH_NOROUTE = 0,ICMP6_DST_UNREACH_ADMIN = 1,ICMP6_DST_UNREACH_BEYONDSCOPE = 2,ICMP6_DST_UNREACH_ADDR = 3,ICMP6_DST_UNREACH_NOPORT = 4,ICMP6_TIME_EXCEED_TRANSIT = 0,ICMP6_TIME_EXCEED_REASSEMBLY = 1,ICMP6_PARAMPROB_HEADER = 0,ICMP6_PARAMPROB_NEXTHEADER = 1,ICMP6_PARAMPROB_OPTION = 2,};
enum MACRO_ICMP6_ROUTER {ICMP6_ROUTER_RENUMBERING = 138,ICMP6_RR_FLAGS_TEST = 128,ICMP6_RR_FLAGS_REQRESULT = 64,ICMP6_RR_FLAGS_FORCEAPPLY = 32,ICMP6_RR_FLAGS_SPECSITE = 16,ICMP6_RR_FLAGS_PREVDONE = 8,};
enum MACRO_ICMP6_RR {ICMP6_RR_PCOUSE_RAFLAGS_ONLINK = 0x20,ICMP6_RR_PCOUSE_RAFLAGS_AUTO = 0x10,ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME = 0x80000000,ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME = 0x40000000,ICMP6_RR_RESULT_FLAGS_OOB = 0x2,ICMP6_RR_RESULT_FLAGS_FORBIDDEN = 0x1,};
enum MACRO_ICMP_NET {ICMP_NET_UNREACH = 0,ICMP_HOST_UNREACH = 1,ICMP_PROT_UNREACH = 2,ICMP_PORT_UNREACH = 3,ICMP_FRAG_NEEDED = 4,ICMP_SR_FAILED = 5,ICMP_NET_UNKNOWN = 6,ICMP_HOST_UNKNOWN = 7,ICMP_HOST_ISOLATED = 8,ICMP_NET_ANO = 9,ICMP_HOST_ANO = 10,ICMP_NET_UNR_TOS = 11,ICMP_HOST_UNR_TOS = 12,ICMP_PKT_FILTERED = 13,ICMP_PREC_VIOLATION = 14,ICMP_PREC_CUTOFF = 15,};
enum MACRO_ICMP_REDIR {ICMP_REDIR_NET = 0,ICMP_REDIR_HOST = 1,ICMP_REDIR_NETTOS = 2,ICMP_REDIR_HOSTTOS = 3,ICMP_EXC_TTL = 0,ICMP_EXC_FRAGTIME = 1,ICMP_MINLEN = 8,ICMP_MASKLEN = 12,ICMP_UNREACH = 3,ICMP_SOURCEQUENCH = 4,ICMP_ROUTERADVERT = 9,ICMP_ROUTERSOLICIT = 10,ICMP_TIMXCEED = 11,ICMP_PARAMPROB = 12,ICMP_TSTAMP = 13,ICMP_TSTAMPREPLY = 14,ICMP_IREQ = 15,ICMP_IREQREPLY = 16,ICMP_MASKREQ = 17,ICMP_MASKREPLY = 18,ICMP_MAXTYPE = 18,ICMP_UNREACH_NET = 0,ICMP_UNREACH_HOST = 1,ICMP_UNREACH_PROTOCOL = 2,ICMP_UNREACH_PORT = 3,ICMP_UNREACH_NEEDFRAG = 4,ICMP_UNREACH_SRCFAIL = 5,ICMP_UNREACH_NET_UNKNOWN = 6,ICMP_UNREACH_HOST_UNKNOWN = 7,ICMP_UNREACH_ISOLATED = 8,ICMP_UNREACH_NET_PROHIB = 9,ICMP_UNREACH_HOST_PROHIB = 10,ICMP_UNREACH_TOSNET = 11,ICMP_UNREACH_TOSHOST = 12,ICMP_UNREACH_FILTER_PROHIB = 13,ICMP_UNREACH_HOST_PRECEDENCE = 14,ICMP_UNREACH_PRECEDENCE_CUTOFF = 15,ICMP_REDIRECT_NET = 0,ICMP_REDIRECT_HOST = 1,ICMP_REDIRECT_TOSNET = 2,ICMP_REDIRECT_TOSHOST = 3,ICMP_TIMXCEED_INTRANS = 0,ICMP_TIMXCEED_REASS = 1,ICMP_PARAMPROB_OPTABSENT = 1,};
enum MACRO_IEEE754 {IEEE754_FLOAT_BIAS = 0x7F,IEEE754_DOUBLE_BIAS = 0x3FF,};
enum MACRO_IEXTEN {IEXTEN = 0x400,EXTPROC = 0x10000000,};
enum MACRO_IF {IF_GET_IFACE = 0x1,IF_GET_PROTO = 0x2,IF_IFACE_V35 = 0x1000,IF_IFACE_V24 = 0x1001,IF_IFACE_X21 = 0x1002,IF_IFACE_T1 = 0x1003,IF_IFACE_E1 = 0x1004,IF_IFACE_SYNC_SERIAL = 0x1005,IF_IFACE_X21D = 0x1006,IF_PROTO_HDLC = 0x2000,IF_PROTO_PPP = 0x2001,IF_PROTO_CISCO = 0x2002,IF_PROTO_FR = 0x2003,IF_PROTO_FR_ADD_PVC = 0x2004,IF_PROTO_FR_DEL_PVC = 0x2005,IF_PROTO_X25 = 0x2006,IF_PROTO_HDLC_ETH = 0x2007,IF_PROTO_FR_ADD_ETH_PVC = 0x2008,IF_PROTO_FR_DEL_ETH_PVC = 0x2009,IF_PROTO_FR_PVC = 0x200A,IF_PROTO_FR_ETH_PVC = 0x200B,IF_PROTO_RAW = 0x200C,};
enum MACRO_IFHWADDRLEN {IFHWADDRLEN = 6,};
enum MACRO_IFNAMSIZ {IFNAMSIZ = 16,IFALIASZ = 256,};
enum MACRO_IGMP {IGMP_MINLEN = 8,IGMP_MEMBERSHIP_QUERY = 17,IGMP_V1_MEMBERSHIP_REPORT = 18,IGMP_V2_MEMBERSHIP_REPORT = 22,IGMP_V2_LEAVE_GROUP = 23,IGMP_DVMRP = 19,IGMP_PIM = 20,IGMP_TRACE = 21,IGMP_MTRACE_RESP = 30,IGMP_MTRACE = 31,IGMP_MAX_HOST_REPORT_DELAY = 10,IGMP_TIMER_SCALE = 10,IGMP_DELAYING_MEMBER = 1,IGMP_IDLE_MEMBER = 2,IGMP_LAZY_MEMBER = 3,IGMP_SLEEPING_MEMBER = 4,IGMP_AWAKENING_MEMBER = 5,IGMP_v1_ROUTER = 1,IGMP_v2_ROUTER = 2,IGMP_HOST_MEMBERSHIP_QUERY = 17,IGMP_HOST_MEMBERSHIP_REPORT = 18,IGMP_HOST_NEW_MEMBERSHIP_REPORT = 22,IGMP_HOST_LEAVE_MESSAGE = 23,};
enum MACRO_IGNBRK {IGNBRK = 0x1,BRKINT = 0x2,IGNPAR = 0x4,PARMRK = 0x8,INPCK = 0x10,ISTRIP = 0x20,INLCR = 0x40,IGNCR = 0x80,ICRNL = 0x100,IXON = 0x200,IXOFF = 0x400,IXANY = 0x800,IUCLC = 0x1000,IMAXBEL = 0x2000,IUTF8 = 0x4000,};
enum MACRO_IIF {IIF_BGRACE = 1,IIF_IGRACE = 2,IIF_FLAGS = 4,IIF_ALL = 7,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,};
enum MACRO_INADDR : __int64 {INADDR_ANY = 0x0,INADDR_BROADCAST = 0xFFFFFFFF,INADDR_NONE = 0xFFFFFFFF,};
enum MACRO_INADDR_LOOPBACK : __int64 {INADDR_LOOPBACK = 0x7F000001,INADDR_UNSPEC_GROUP = 0xE0000000,INADDR_ALLHOSTS_GROUP = 0xE0000001,INADDR_ALLRTRS_GROUP = 0xE0000002,INADDR_MAX_LOCAL_GROUP = 0xE00000FF,};
enum MACRO_INDIR {INDIR_MASK = 192,};
enum MACRO_INFINITY {INFINITY = 0x7FFFFFFF,};
enum MACRO_INT : __int64 {INT_LEAST8_MIN = -128,INT_LEAST16_MIN = -32768,INT_LEAST32_MIN = -2147483648,INT_LEAST64_MIN = -9223372036854775808,INT_LEAST8_MAX = 127,INT_LEAST16_MAX = 32767,INT_LEAST32_MAX = 2147483647,INT_LEAST64_MAX = 9223372036854775807,};
enum MACRO_INT16SZ {INT16SZ = 2,};
enum MACRO_INT32SZ {INT32SZ = 4,};
enum MACRO_INT8SZ {INT8SZ = 1,INADDRSZ = 4,IN6ADDRSZ = 16,};
enum MACRO_INTMAX : __int64 {INTMAX_MIN = -9223372036854775808,INTMAX_MAX = 9223372036854775807,};
enum MACRO_INTPTR {INTPTR_MIN = -2147483648,INTPTR_MAX = 2147483647,};
enum MACRO_INT_FAST8 : __int64 {INT_FAST8_MIN = -128,INT_FAST16_MIN = -2147483648,INT_FAST32_MIN = -2147483648,INT_FAST64_MIN = -9223372036854775808,INT_FAST8_MAX = 127,INT_FAST16_MAX = 2147483647,INT_FAST32_MAX = 2147483647,INT_FAST64_MAX = 9223372036854775807,};
enum MACRO_IN_ACCESS {IN_ACCESS = 0x1,IN_MODIFY = 0x2,IN_ATTRIB = 0x4,IN_CLOSE_WRITE = 0x8,IN_CLOSE_NOWRITE = 0x10,IN_CLOSE = 0x18,IN_OPEN = 0x20,IN_MOVED_FROM = 0x40,IN_MOVED_TO = 0x80,IN_MOVE = 0xC0,IN_CREATE = 0x100,IN_DELETE = 0x200,IN_DELETE_SELF = 0x400,IN_MOVE_SELF = 0x800,IN_UNMOUNT = 0x2000,IN_Q_OVERFLOW = 0x4000,IN_IGNORED = 0x8000,IN_ONLYDIR = 0x1000000,IN_DONT_FOLLOW = 0x2000000,IN_EXCL_UNLINK = 0x4000000,IN_MASK_ADD = 0x20000000,IN_ISDIR = 0x40000000,IN_ONESHOT = 0x80000000,IN_ALL_EVENTS = 0xFFF,};
enum MACRO_IN_LOOPBACKNET {IN_LOOPBACKNET = 127,};
enum MACRO_IO {_LFS_ASYNCHRONOUS_IO = 1,_POSIX_PRIORITIZED_IO = 200809,_LFS64_ASYNCHRONOUS_IO = 1,};
enum MACRO_IOC : __int64 {IOC_IN = 2147483648,IOC_OUT = 1073741824,IOC_INOUT = 3221225472,};
enum MACRO_IOCSIZE {IOCSIZE_MASK = 536805376,IOCSIZE_SHIFT = 16,};
enum MACRO_IP {IP_OPTIONS = 4,IP_HDRINCL = 3,IP_TOS = 1,IP_TTL = 2,IP_RECVOPTS = 6,IP_RETOPTS = 7,IP_MULTICAST_IF = 32,IP_MULTICAST_TTL = 33,IP_MULTICAST_LOOP = 34,IP_ADD_MEMBERSHIP = 35,IP_DROP_MEMBERSHIP = 36,IP_UNBLOCK_SOURCE = 37,IP_BLOCK_SOURCE = 38,IP_ADD_SOURCE_MEMBERSHIP = 39,IP_DROP_SOURCE_MEMBERSHIP = 40,IP_MSFILTER = 41,};
enum MACRO_IP6 {IP6_ALERT_MLD = 0x0,IP6_ALERT_RSVP = 0x1,IP6_ALERT_AN = 0x2,};
enum MACRO_IP6F {IP6F_OFF_MASK = 0xFFF8,IP6F_RESERVED_MASK = 0x6,IP6F_MORE_FRAG = 0x1,};
enum MACRO_IP6OPT {IP6OPT_TYPE_SKIP = 0x0,IP6OPT_TYPE_DISCARD = 0x40,IP6OPT_TYPE_FORCEICMP = 0x80,IP6OPT_TYPE_ICMP = 0xC0,IP6OPT_TYPE_MUTABLE = 0x20,IP6OPT_PAD1 = 0x0,IP6OPT_PADN = 0x1,IP6OPT_JUMBO = 0xC2,IP6OPT_NSAP_ADDR = 0xC3,IP6OPT_TUNNEL_LIMIT = 0x4,IP6OPT_ROUTER_ALERT = 0x5,IP6OPT_JUMBO_LEN = 0x6,};
enum MACRO_IPC {IPC_CREAT = 0x200,IPC_EXCL = 0x400,IPC_NOWAIT = 0x800,IPC_RMID = 0x0,IPC_SET = 0x1,IPC_STAT = 0x2,IPC_PRIVATE = 0x0,};
enum MACRO_IPDEFTTL {IPDEFTTL = 64,};
enum MACRO_IPFRAGTTL {IPFRAGTTL = 60,};
enum MACRO_IPOPT {IPOPT_COPY = 0x80,IPOPT_CLASS_MASK = 0x60,IPOPT_NUMBER_MASK = 0x1F,IPOPT_CONTROL = 0x0,IPOPT_RESERVED1 = 0x20,IPOPT_DEBMEAS = 0x40,IPOPT_MEASUREMENT = 0x40,IPOPT_RESERVED2 = 0x60,IPOPT_EOL = 0x0,IPOPT_END = 0x0,IPOPT_NOP = 0x1,IPOPT_NOOP = 0x1,IPOPT_RR = 0x7,IPOPT_TS = 0x44,IPOPT_TIMESTAMP = 0x44,IPOPT_SECURITY = 0x82,IPOPT_SEC = 0x82,IPOPT_LSRR = 0x83,IPOPT_SATID = 0x88,IPOPT_SID = 0x88,IPOPT_SSRR = 0x89,IPOPT_RA = 0x94,IPOPT_OPTVAL = 0x0,IPOPT_OLEN = 0x1,IPOPT_OFFSET = 0x2,IPOPT_MINOFF = 0x4,};
enum MACRO_IPOPT_TS {IPOPT_TS_TSONLY = 0,IPOPT_TS_TSANDADDR = 1,IPOPT_TS_PRESPEC = 3,IPOPT_SECUR_UNCLASS = 0,IPOPT_SECUR_CONFID = 61749,IPOPT_SECUR_EFTO = 30874,IPOPT_SECUR_MMMM = 48205,IPOPT_SECUR_RESTR = 44819,IPOPT_SECUR_SECRET = 55176,IPOPT_SECUR_TOPSECRET = 27589,};
enum MACRO_IPTOS {IPTOS_ECN_MASK = 0x3,IPTOS_ECN_NOT_ECT = 0x0,IPTOS_ECN_ECT1 = 0x1,IPTOS_ECN_ECT0 = 0x2,IPTOS_ECN_CE = 0x3,IPTOS_DSCP_MASK = 0xFC,IPTOS_DSCP_AF11 = 0x28,IPTOS_DSCP_AF12 = 0x30,IPTOS_DSCP_AF13 = 0x38,IPTOS_DSCP_AF21 = 0x48,IPTOS_DSCP_AF22 = 0x50,IPTOS_DSCP_AF23 = 0x58,IPTOS_DSCP_AF31 = 0x68,IPTOS_DSCP_AF32 = 0x70,IPTOS_DSCP_AF33 = 0x78,IPTOS_DSCP_AF41 = 0x88,IPTOS_DSCP_AF42 = 0x90,IPTOS_DSCP_AF43 = 0x98,IPTOS_DSCP_EF = 0xB8,IPTOS_CLASS_MASK = 0xE0,IPTOS_CLASS_CS0 = 0x0,IPTOS_CLASS_CS1 = 0x20,IPTOS_CLASS_CS2 = 0x40,IPTOS_CLASS_CS3 = 0x60,IPTOS_CLASS_CS4 = 0x80,IPTOS_CLASS_CS5 = 0xA0,IPTOS_CLASS_CS6 = 0xC0,IPTOS_CLASS_CS7 = 0xE0,IPTOS_CLASS_DEFAULT = 0x0,IPTOS_TOS_MASK = 0x1E,IPTOS_LOWDELAY = 0x10,IPTOS_THROUGHPUT = 0x8,IPTOS_RELIABILITY = 0x4,IPTOS_LOWCOST = 0x2,IPTOS_MINCOST = 0x2,IPTOS_PREC_MASK = 0xE0,IPTOS_PREC_NETCONTROL = 0xE0,IPTOS_PREC_INTERNETCONTROL = 0xC0,IPTOS_PREC_CRITIC_ECP = 0xA0,IPTOS_PREC_FLASHOVERRIDE = 0x80,IPTOS_PREC_FLASH = 0x60,IPTOS_PREC_IMMEDIATE = 0x40,IPTOS_PREC_PRIORITY = 0x20,IPTOS_PREC_ROUTINE = 0x0,};
enum MACRO_IPTTLDEC {IPTTLDEC = 1,};
enum MACRO_IPV6 {IPV6_ADDRFORM = 1,IPV6_2292PKTINFO = 2,IPV6_2292HOPOPTS = 3,IPV6_2292DSTOPTS = 4,IPV6_2292RTHDR = 5,IPV6_2292PKTOPTIONS = 6,IPV6_CHECKSUM = 7,IPV6_2292HOPLIMIT = 8,IPV6_NEXTHOP = 9,IPV6_AUTHHDR = 10,IPV6_UNICAST_HOPS = 16,IPV6_MULTICAST_IF = 17,IPV6_MULTICAST_HOPS = 18,IPV6_MULTICAST_LOOP = 19,IPV6_JOIN_GROUP = 20,IPV6_LEAVE_GROUP = 21,IPV6_ROUTER_ALERT = 22,IPV6_MTU_DISCOVER = 23,IPV6_MTU = 24,IPV6_RECVERR = 25,IPV6_V6ONLY = 26,IPV6_JOIN_ANYCAST = 27,IPV6_LEAVE_ANYCAST = 28,IPV6_IPSEC_POLICY = 34,IPV6_XFRM_POLICY = 35,IPV6_RECVPKTINFO = 49,IPV6_PKTINFO = 50,IPV6_RECVHOPLIMIT = 51,IPV6_HOPLIMIT = 52,IPV6_RECVHOPOPTS = 53,IPV6_HOPOPTS = 54,IPV6_RTHDRDSTOPTS = 55,IPV6_RECVRTHDR = 56,IPV6_RTHDR = 57,IPV6_RECVDSTOPTS = 58,IPV6_DSTOPTS = 59,IPV6_RECVTCLASS = 66,IPV6_TCLASS = 67,IPV6_ADD_MEMBERSHIP = 20,IPV6_DROP_MEMBERSHIP = 21,IPV6_RXHOPOPTS = 54,IPV6_RXDSTOPTS = 59,IPV6_PMTUDISC_DONT = 0,IPV6_PMTUDISC_WANT = 1,IPV6_PMTUDISC_DO = 2,IPV6_PMTUDISC_PROBE = 3,IPV6_PMTUDISC_INTERFACE = 4,IPV6_PMTUDISC_OMIT = 5,};
enum MACRO_IPV6_RTHDR {IPV6_RTHDR_LOOSE = 0,IPV6_RTHDR_STRICT = 1,IPV6_RTHDR_TYPE_0 = 0,};
enum MACRO_IPVERSION {IPVERSION = 4,};
enum MACRO_IPX {IPX_TYPE = 1,IPX_NODE_LEN = 6,IPX_MTU = 576,IPX_DLTITF = 0,IPX_CRTITF = 1,IPX_FRAME_NONE = 0,IPX_FRAME_SNAP = 1,IPX_FRAME_8022 = 2,IPX_FRAME_ETHERII = 3,IPX_FRAME_8023 = 4,IPX_FRAME_TR_8022 = 5,IPX_SPECIAL_NONE = 0,IPX_PRIMARY = 1,IPX_INTERNAL = 2,IPX_ROUTE_NO_ROUTER = 0,IPX_RT_SNAP = 8,IPX_RT_8022 = 4,IPX_RT_BLUEBOOK = 2,IPX_RT_ROUTED = 1,};
enum MACRO_IP_0 {IP = 244,};
enum MACRO_IP_DEFAULT {IP_DEFAULT_MULTICAST_TTL = 1,IP_DEFAULT_MULTICAST_LOOP = 1,IP_MAX_MEMBERSHIPS = 20,};
enum MACRO_IP_MAXPACKET {IP_MAXPACKET = 65535,};
enum MACRO_IP_MSS {IP_MSS = 576,};
enum MACRO_IP_MULTICAST {IP_MULTICAST_ALL = 49,IP_UNICAST_IF = 50,};
enum MACRO_IP_RF {IP_RF = 0x8000,IP_DF = 0x4000,IP_MF = 0x2000,IP_OFFMASK = 0x1FFF,};
enum MACRO_IP_ROUTER {IP_ROUTER_ALERT = 5,IP_PKTINFO = 8,IP_PKTOPTIONS = 9,IP_PMTUDISC = 10,IP_MTU_DISCOVER = 10,IP_RECVERR = 11,IP_RECVTTL = 12,IP_RECVTOS = 13,IP_MTU = 14,IP_FREEBIND = 15,IP_IPSEC_POLICY = 16,IP_XFRM_POLICY = 17,IP_PASSSEC = 18,IP_TRANSPARENT = 19,IP_ORIGDSTADDR = 20,IP_RECVORIGDSTADDR = 20,IP_MINTTL = 21,IP_NODEFRAG = 22,IP_PMTUDISC_DONT = 0,IP_PMTUDISC_WANT = 1,IP_PMTUDISC_DO = 2,IP_PMTUDISC_PROBE = 3,IP_PMTUDISC_INTERFACE = 4,IP_PMTUDISC_OMIT = 5,};
enum MACRO_ISIG {ISIG = 0x80,ICANON = 0x100,XCASE = 0x4000,};
enum MACRO_IW {IW_PRIV_TYPE_MASK = 0x7000,IW_PRIV_TYPE_NONE = 0x0,IW_PRIV_TYPE_BYTE = 0x1000,IW_PRIV_TYPE_CHAR = 0x2000,IW_PRIV_TYPE_INT = 0x4000,IW_PRIV_TYPE_FLOAT = 0x5000,IW_PRIV_TYPE_ADDR = 0x6000,IW_PRIV_SIZE_FIXED = 0x800,IW_PRIV_SIZE_MASK = 0x7FF,IW_MAX_FREQUENCIES = 0x20,IW_MAX_BITRATES = 0x20,IW_MAX_TXPOWER = 0x8,IW_MAX_SPY = 0x8,IW_MAX_AP = 0x40,IW_ESSID_MAX_SIZE = 0x20,IW_MODE_AUTO = 0x0,IW_MODE_ADHOC = 0x1,IW_MODE_INFRA = 0x2,IW_MODE_MASTER = 0x3,IW_MODE_REPEAT = 0x4,IW_MODE_SECOND = 0x5,IW_MODE_MONITOR = 0x6,IW_MODE_MESH = 0x7,IW_QUAL_QUAL_UPDATED = 0x1,IW_QUAL_LEVEL_UPDATED = 0x2,IW_QUAL_NOISE_UPDATED = 0x4,IW_QUAL_ALL_UPDATED = 0x7,IW_QUAL_DBM = 0x8,IW_QUAL_QUAL_INVALID = 0x10,IW_QUAL_LEVEL_INVALID = 0x20,IW_QUAL_NOISE_INVALID = 0x40,IW_QUAL_RCPI = 0x80,IW_QUAL_ALL_INVALID = 0x70,IW_FREQ_AUTO = 0x0,IW_FREQ_FIXED = 0x1,IW_MAX_ENCODING_SIZES = 0x8,IW_ENCODING_TOKEN_MAX = 0x40,IW_ENCODE_INDEX = 0xFF,IW_ENCODE_FLAGS = 0xFF00,IW_ENCODE_MODE = 0xF000,IW_ENCODE_DISABLED = 0x8000,IW_ENCODE_ENABLED = 0x0,IW_ENCODE_RESTRICTED = 0x4000,IW_ENCODE_OPEN = 0x2000,IW_ENCODE_NOKEY = 0x800,IW_ENCODE_TEMP = 0x400,IW_POWER_ON = 0x0,IW_POWER_TYPE = 0xF000,IW_POWER_PERIOD = 0x1000,IW_POWER_TIMEOUT = 0x2000,IW_POWER_MODE = 0xF00,IW_POWER_UNICAST_R = 0x100,IW_POWER_MULTICAST_R = 0x200,IW_POWER_ALL_R = 0x300,IW_POWER_FORCE_S = 0x400,IW_POWER_REPEATER = 0x800,IW_POWER_MODIFIER = 0xF,IW_POWER_MIN = 0x1,IW_POWER_MAX = 0x2,IW_POWER_RELATIVE = 0x4,IW_TXPOW_TYPE = 0xFF,IW_TXPOW_DBM = 0x0,IW_TXPOW_MWATT = 0x1,IW_TXPOW_RELATIVE = 0x2,IW_TXPOW_RANGE = 0x1000,IW_RETRY_ON = 0x0,IW_RETRY_TYPE = 0xF000,IW_RETRY_LIMIT = 0x1000,IW_RETRY_LIFETIME = 0x2000,IW_RETRY_MODIFIER = 0xFF,IW_RETRY_MIN = 0x1,IW_RETRY_MAX = 0x2,IW_RETRY_RELATIVE = 0x4,IW_RETRY_SHORT = 0x10,IW_RETRY_LONG = 0x20,IW_SCAN_DEFAULT = 0x0,IW_SCAN_ALL_ESSID = 0x1,IW_SCAN_THIS_ESSID = 0x2,IW_SCAN_ALL_FREQ = 0x4,IW_SCAN_THIS_FREQ = 0x8,IW_SCAN_ALL_MODE = 0x10,IW_SCAN_THIS_MODE = 0x20,IW_SCAN_ALL_RATE = 0x40,IW_SCAN_THIS_RATE = 0x80,IW_SCAN_TYPE_ACTIVE = 0x0,IW_SCAN_TYPE_PASSIVE = 0x1,IW_SCAN_MAX_DATA = 0x1000,IW_SCAN_CAPA_NONE = 0x0,IW_SCAN_CAPA_ESSID = 0x1,IW_SCAN_CAPA_BSSID = 0x2,IW_SCAN_CAPA_CHANNEL = 0x4,IW_SCAN_CAPA_MODE = 0x8,IW_SCAN_CAPA_RATE = 0x10,IW_SCAN_CAPA_TYPE = 0x20,IW_SCAN_CAPA_TIME = 0x40,IW_CUSTOM_MAX = 0x100,IW_GENERIC_IE_MAX = 0x400,IW_MLME_DEAUTH = 0x0,IW_MLME_DISASSOC = 0x1,IW_MLME_AUTH = 0x2,IW_MLME_ASSOC = 0x3,IW_AUTH_INDEX = 0xFFF,IW_AUTH_FLAGS = 0xF000,IW_AUTH_WPA_VERSION = 0x0,IW_AUTH_CIPHER_PAIRWISE = 0x1,IW_AUTH_CIPHER_GROUP = 0x2,IW_AUTH_KEY_MGMT = 0x3,IW_AUTH_TKIP_COUNTERMEASURES = 0x4,IW_AUTH_DROP_UNENCRYPTED = 0x5,IW_AUTH_80211_AUTH_ALG = 0x6,IW_AUTH_WPA_ENABLED = 0x7,IW_AUTH_RX_UNENCRYPTED_EAPOL = 0x8,IW_AUTH_ROAMING_CONTROL = 0x9,IW_AUTH_PRIVACY_INVOKED = 0xA,IW_AUTH_CIPHER_GROUP_MGMT = 0xB,IW_AUTH_MFP = 0xC,IW_AUTH_WPA_VERSION_DISABLED = 0x1,IW_AUTH_WPA_VERSION_WPA = 0x2,IW_AUTH_WPA_VERSION_WPA2 = 0x4,IW_AUTH_CIPHER_NONE = 0x1,IW_AUTH_CIPHER_WEP40 = 0x2,IW_AUTH_CIPHER_TKIP = 0x4,IW_AUTH_CIPHER_CCMP = 0x8,IW_AUTH_CIPHER_WEP104 = 0x10,IW_AUTH_CIPHER_AES_CMAC = 0x20,IW_AUTH_KEY_MGMT_802_1X = 0x1,IW_AUTH_KEY_MGMT_PSK = 0x2,IW_AUTH_ALG_OPEN_SYSTEM = 0x1,IW_AUTH_ALG_SHARED_KEY = 0x2,IW_AUTH_ALG_LEAP = 0x4,IW_AUTH_ROAMING_ENABLE = 0x0,IW_AUTH_ROAMING_DISABLE = 0x1,IW_AUTH_MFP_DISABLED = 0x0,IW_AUTH_MFP_OPTIONAL = 0x1,IW_AUTH_MFP_REQUIRED = 0x2,IW_ENCODE_SEQ_MAX_SIZE = 0x8,IW_ENCODE_ALG_NONE = 0x0,IW_ENCODE_ALG_WEP = 0x1,IW_ENCODE_ALG_TKIP = 0x2,IW_ENCODE_ALG_CCMP = 0x3,IW_ENCODE_ALG_PMK = 0x4,IW_ENCODE_ALG_AES_CMAC = 0x5,IW_ENCODE_EXT_TX_SEQ_VALID = 0x1,IW_ENCODE_EXT_RX_SEQ_VALID = 0x2,IW_ENCODE_EXT_GROUP_KEY = 0x4,IW_ENCODE_EXT_SET_TX_KEY = 0x8,IW_MICFAILURE_KEY_ID = 0x3,IW_MICFAILURE_GROUP = 0x4,IW_MICFAILURE_PAIRWISE = 0x8,IW_MICFAILURE_STAKEY = 0x10,IW_MICFAILURE_COUNT = 0x60,IW_ENC_CAPA_WPA = 0x1,IW_ENC_CAPA_WPA2 = 0x2,IW_ENC_CAPA_CIPHER_TKIP = 0x4,IW_ENC_CAPA_CIPHER_CCMP = 0x8,IW_ENC_CAPA_4WAY_HANDSHAKE = 0x10,IW_EVENT_CAPA_K_0 = 0x4000050,IW_EVENT_CAPA_K_1 = 0x400,IW_PMKSA_ADD = 0x1,IW_PMKSA_REMOVE = 0x2,IW_PMKSA_FLUSH = 0x3,IW_PMKID_LEN = 0x10,IW_PMKID_CAND_PREAUTH = 0x1,IW_EV_LCP_PK_LEN = 0x4,IW_EV_CHAR_PK_LEN = 0x14,IW_EV_POINT_PK_LEN = 0x8,};
enum MACRO_IWEVASSOCREQIE {IWEVASSOCREQIE = 0x8C07,};
enum MACRO_IWEVASSOCRESPIE {IWEVASSOCRESPIE = 0x8C08,};
enum MACRO_IWEVCUSTOM {IWEVCUSTOM = 0x8C02,};
enum MACRO_IWEVEXPIRED {IWEVEXPIRED = 0x8C04,};
enum MACRO_IWEVFIRST {IWEVFIRST = 0x8C00,};
enum MACRO_IWEVGENIE {IWEVGENIE = 0x8C05,};
enum MACRO_IWEVMICHAELMICFAILURE {IWEVMICHAELMICFAILURE = 0x8C06,};
enum MACRO_IWEVPMKIDCAND {IWEVPMKIDCAND = 0x8C09,};
enum MACRO_IWEVQUAL {IWEVQUAL = 0x8C01,};
enum MACRO_IWEVREGISTERED {IWEVREGISTERED = 0x8C03,};
enum MACRO_IWEVTXDROP {IWEVTXDROP = 0x8C00,};
enum MACRO_K {K_RAW = 0x0,K_XLATE = 0x1,K_MEDIUMRAW = 0x2,K_UNICODE = 0x3,K_OFF = 0x4,};
enum MACRO_KB {KB_84 = 0x1,KB_101 = 0x2,KB_OTHER = 0x3,};
enum MACRO_KD {KD_TEXT = 0x0,KD_GRAPHICS = 0x1,KD_TEXT0 = 0x2,KD_TEXT1 = 0x3,};
enum MACRO_KDADDIO {KDADDIO = 0x4B34,};
enum MACRO_KDDELIO {KDDELIO = 0x4B35,};
enum MACRO_KDDISABIO {KDDISABIO = 0x4B37,};
enum MACRO_KDENABIO {KDENABIO = 0x4B36,};
enum MACRO_KDFONTOP {KDFONTOP = 0x4B72,};
enum MACRO_KDGETKEYCODE {KDGETKEYCODE = 0x4B4C,};
enum MACRO_KDGETLED {KDGETLED = 0x4B31,};
enum MACRO_KDGETMODE {KDGETMODE = 0x4B3B,};
enum MACRO_KDGKBDIACR {KDGKBDIACR = 0x4B4A,};
enum MACRO_KDGKBDIACRUC {KDGKBDIACRUC = 0x4BFA,};
enum MACRO_KDGKBENT {KDGKBENT = 0x4B46,};
enum MACRO_KDGKBLED {KDGKBLED = 0x4B64,};
enum MACRO_KDGKBMETA {KDGKBMETA = 0x4B62,};
enum MACRO_KDGKBMODE {KDGKBMODE = 0x4B44,};
enum MACRO_KDGKBSENT {KDGKBSENT = 0x4B48,};
enum MACRO_KDGKBTYPE {KDGKBTYPE = 0x4B33,};
enum MACRO_KDKBDREP {KDKBDREP = 0x4B52,};
enum MACRO_KDMAPDISP {KDMAPDISP = 0x4B3C,};
enum MACRO_KDMKTONE {KDMKTONE = 0x4B30,};
enum MACRO_KDSETKEYCODE {KDSETKEYCODE = 0x4B4D,};
enum MACRO_KDSETLED {KDSETLED = 0x4B32,};
enum MACRO_KDSETMODE {KDSETMODE = 0x4B3A,};
enum MACRO_KDSIGACCEPT {KDSIGACCEPT = 0x4B4E,};
enum MACRO_KDSKBDIACR {KDSKBDIACR = 0x4B4B,};
enum MACRO_KDSKBDIACRUC {KDSKBDIACRUC = 0x4BFB,};
enum MACRO_KDSKBENT {KDSKBENT = 0x4B47,};
enum MACRO_KDSKBLED {KDSKBLED = 0x4B65,};
enum MACRO_KDSKBMETA {KDSKBMETA = 0x4B63,};
enum MACRO_KDSKBMODE {KDSKBMODE = 0x4B45,};
enum MACRO_KDSKBSENT {KDSKBSENT = 0x4B49,};
enum MACRO_KDUNMAPDISP {KDUNMAPDISP = 0x4B3D,};
enum MACRO_KD_FONT {KD_FONT_OP_SET = 0,KD_FONT_OP_GET = 1,KD_FONT_OP_SET_DEFAULT = 2,KD_FONT_OP_COPY = 3,KD_FONT_FLAG_DONT_RECALC = 1,};
enum MACRO_KEY {KEY_PROG = 100029,KEY_VERS = 1,KEY_SET = 1,KEY_ENCRYPT = 2,KEY_DECRYPT = 3,KEY_GEN = 4,KEY_GETCRED = 5,KEY_VERS2 = 2,KEY_ENCRYPT_PK = 6,KEY_DECRYPT_PK = 7,KEY_NET_PUT = 8,KEY_NET_GET = 9,KEY_GET_CONV = 10,};
enum MACRO_KEYBYTES {KEYBYTES = 24,};
enum MACRO_KEYCHECKSUMSIZE {KEYCHECKSUMSIZE = 16,};
enum MACRO_KIOCSOUND {KIOCSOUND = 0x4B2F,};
enum MACRO_K_METABIT {K_METABIT = 0x3,K_ESCPREFIX = 0x4,};
enum MACRO_K_NORMTAB {K_NORMTAB = 0x0,K_SHIFTTAB = 0x1,K_ALTTAB = 0x2,K_ALTSHIFTTAB = 0x3,};
enum MACRO_K_SCROLLLOCK {K_SCROLLLOCK = 0x1,K_NUMLOCK = 0x2,K_CAPSLOCK = 0x4,};
enum MACRO_L {L_tmpnam = 20,};
enum MACRO_LARGEFILE {_LFS_LARGEFILE = 1,_LFS64_LARGEFILE = 1,};
enum MACRO_LC {LC_CTYPE = 0,LC_NUMERIC = 1,LC_TIME = 2,LC_COLLATE = 3,LC_MONETARY = 4,LC_MESSAGES = 5,LC_ALL = 6,LC_PAPER = 7,LC_NAME = 8,LC_ADDRESS = 9,LC_TELEPHONE = 10,LC_MEASUREMENT = 11,LC_IDENTIFICATION = 12,LC_CTYPE_MASK = 1,LC_NUMERIC_MASK = 2,LC_TIME_MASK = 4,LC_COLLATE_MASK = 8,LC_MONETARY_MASK = 16,LC_MESSAGES_MASK = 32,LC_PAPER_MASK = 128,LC_NAME_MASK = 256,LC_ADDRESS_MASK = 512,LC_TELEPHONE_MASK = 1024,LC_MEASUREMENT_MASK = 2048,LC_IDENTIFICATION_MASK = 4096,LC_ALL_MASK = 8127,LC_GLOBAL_LOCALE = -1,};
enum MACRO_LEAVE {LEAVE_INVITE = 0,};
enum MACRO_LED {LED_SCR = 0x1,LED_NUM = 0x2,LED_CAP = 0x4,};
enum MACRO_LFLOW {LFLOW_OFF = 0,LFLOW_ON = 1,LFLOW_RESTART_ANY = 2,LFLOW_RESTART_XON = 3,};
enum MACRO_LITTLE {LITTLE_ENDIAN = 1234,BIG_ENDIAN = 4321,PDP_ENDIAN = 3412,};
enum MACRO_LITUSE {LITUSE_ALPHA_ADDR = 0,LITUSE_ALPHA_BASE = 1,LITUSE_ALPHA_BYTOFF = 2,LITUSE_ALPHA_JSR = 3,LITUSE_ALPHA_TLS_GD = 4,LITUSE_ALPHA_TLS_LDM = 5,};
enum MACRO_LL {LL_NONE = 0,LL_EXACT_MATCH = 1,LL_IGNORE_INT_VER = 2,LL_REQUIRE_MINOR = 4,LL_EXPORTS = 8,LL_DELAY_LOAD = 16,LL_DELTA = 32,};
enum MACRO_LLC {LLC_FRAME = 0x40,};
enum MACRO_LLONG : __int64 {LLONG_MIN = -9223372036854775808,};
enum MACRO_LM {LM_MODE = 1,LM_FORWARDMASK = 2,LM_SLC = 3,};
enum MACRO_LMI {LMI_DEFAULT = 0,LMI_NONE = 1,LMI_ANSI = 2,LMI_CCITT = 3,LMI_CISCO = 4,};
enum MACRO_LOCALDOMAINPARTS {LOCALDOMAINPARTS = 2,};
enum MACRO_LOCK {LOCK_SH = 1,LOCK_EX = 2,LOCK_NB = 4,LOCK_UN = 8,};
enum MACRO_LOCL {LOCL_STARTAUDIO = 1,};
enum MACRO_LOG {LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,LOG_PRIMASK = 7,LOG_KERN = 0,LOG_USER = 8,LOG_MAIL = 16,LOG_DAEMON = 24,LOG_AUTH = 32,LOG_SYSLOG = 40,LOG_LPR = 48,LOG_NEWS = 56,LOG_UUCP = 64,LOG_CRON = 72,LOG_AUTHPRIV = 80,LOG_FTP = 88,LOG_LOCAL0 = 128,LOG_LOCAL1 = 136,LOG_LOCAL2 = 144,LOG_LOCAL3 = 152,LOG_LOCAL4 = 160,LOG_LOCAL5 = 168,LOG_LOCAL6 = 176,LOG_LOCAL7 = 184,LOG_NFACILITIES = 24,LOG_FACMASK = 1016,LOG_PID = 1,LOG_CONS = 2,LOG_ODELAY = 4,LOG_NDELAY = 8,LOG_NOWAIT = 16,LOG_PERROR = 32,};
enum MACRO_LONG {LONG_MIN = -2147483648,};
enum MACRO_LOOK {LOOK_UP = 1,};
enum MACRO_L_SET {L_SET = 0,L_INCR = 1,L_XTND = 2,};
enum MACRO_L_ctermid {L_ctermid = 9,};
enum MACRO_M {M_MXFAST = 1,M_NLBLKS = 2,M_GRAIN = 3,M_KEEP = 4,M_TRIM_THRESHOLD = -1,M_TOP_PAD = -2,M_MMAP_THRESHOLD = -3,M_MMAP_MAX = -4,M_CHECK_ACTION = -5,M_PERTURB = -6,M_ARENA_TEST = -7,M_ARENA_MAX = -8,};
enum MACRO_MACHINE {MACHINE_UNKNOWN = 3,};
enum MACRO_MADV {MADV_NORMAL = 0,MADV_RANDOM = 1,MADV_SEQUENTIAL = 2,MADV_WILLNEED = 3,MADV_DONTNEED = 4,MADV_REMOVE = 9,MADV_DONTFORK = 10,MADV_DOFORK = 11,MADV_MERGEABLE = 12,MADV_UNMERGEABLE = 13,MADV_HUGEPAGE = 14,MADV_NOHUGEPAGE = 15,MADV_DONTDUMP = 16,MADV_DODUMP = 17,MADV_HWPOISON = 100,};
enum MACRO_MAGIC {_IO_MAGIC = 0xFBAD0000,_OLD_STDIO_MAGIC = 0xFABC0000,};
enum MACRO_MAP {MAP_GROWSDOWN = 0x100,MAP_DENYWRITE = 0x800,MAP_EXECUTABLE = 0x1000,MAP_LOCKED = 0x80,MAP_NORESERVE = 0x40,MAP_POPULATE = 0x8000,MAP_NONBLOCK = 0x10000,MAP_STACK = 0x20000,MAP_HUGETLB = 0x40000,};
enum MACRO_MAP_FAILED {MAP_FAILED = -1,};
enum MACRO_MAP_SHARED {MAP_SHARED = 0x1,MAP_PRIVATE = 0x2,MAP_TYPE = 0xF,MAP_FIXED = 0x10,MAP_FILE = 0x0,MAP_ANONYMOUS = 0x20,MAP_ANON = 0x20,MAP_HUGE_SHIFT = 0x1A,MAP_HUGE_MASK = 0x3F,};
enum MACRO_MATH {MATH_ERRNO = 1,MATH_ERREXCEPT = 2,};
enum MACRO_MAX : __int64 {INT8_MAX = 127,INT16_MAX = 32767,INT32_MAX = 2147483647,INT64_MAX = 9223372036854775807,UINT8_MAX = 255,UINT16_MAX = 65535,UINT32_MAX = -1,UINT64_MAX = -1,};
enum MACRO_MAXCDNAME {MAXCDNAME = 255,};
enum MACRO_MAXDFLSRCH {MAXDFLSRCH = 3,};
enum MACRO_MAXDNSRCH {MAXDNSRCH = 6,};
enum MACRO_MAXGIDS {MAXGIDS = 16,};
enum MACRO_MAXHOSTNAMELEN {MAXHOSTNAMELEN = 64,};
enum MACRO_MAXLABEL {MAXLABEL = 63,};
enum MACRO_MAXNAMLEN {MAXNAMLEN = 255,};
enum MACRO_MAXNETNAMELEN {MAXNETNAMELEN = 255,};
enum MACRO_MAXNS {MAXNS = 3,};
enum MACRO_MAXPACKETSIZE {MAXPACKETSIZE = 512,};
enum MACRO_MAXQUOTAS {MAXQUOTAS = 2,};
enum MACRO_MAXRESOLVSORT {MAXRESOLVSORT = 10,};
enum MACRO_MAXSYMLINKS {MAXSYMLINKS = 20,NOFILE = 256,NCARGS = 131072,};
enum MACRO_MAXTC {MAXTC = 6,};
enum MACRO_MAXTTL {MAXTTL = 255,};
enum MACRO_MAX_ADDR {MAX_ADDR_LEN = 7,};
enum MACRO_MAX_AUTH {MAX_AUTH_BYTES = 400,};
enum MACRO_MAX_CANON {MAX_CANON = 255,MAX_INPUT = 255,};
enum MACRO_MAX_IPOPTLEN {MAX_IPOPTLEN = 40,};
enum MACRO_MAX_IQ {MAX_IQ_TIME = 604800,MAX_DQ_TIME = 604800,};
enum MACRO_MAX_LIFE {MAX_LIFE = 60,};
enum MACRO_MAX_MACHINE {MAX_MACHINE_NAME = 255,};
enum MACRO_MAX_MEM {MAX_MEM_LEVEL = 9,MAX_WBITS = 15,};
enum MACRO_MAX_NETOBJ {MAX_NETOBJ_SZ = 1024,};
enum MACRO_MB {MB_LEN_MAX = 16,};
enum MACRO_MCAST {MCAST_JOIN_GROUP = 42,MCAST_BLOCK_SOURCE = 43,MCAST_UNBLOCK_SOURCE = 44,MCAST_LEAVE_GROUP = 45,MCAST_JOIN_SOURCE_GROUP = 46,MCAST_LEAVE_SOURCE_GROUP = 47,MCAST_MSFILTER = 48,};
enum MACRO_MCAST_EXCLUDE {MCAST_EXCLUDE = 0,MCAST_INCLUDE = 1,};
enum MACRO_MCL {MCL_CURRENT = 0x2000,MCL_FUTURE = 0x4000,};
enum MACRO_MIDI {MIDI_TYPE_MPU401 = 0x401,};
enum MACRO_MIDI_CAP {MIDI_CAP_MPU401 = 1,};
enum MACRO_MIDI_NOTEOFF {MIDI_NOTEOFF = 0x80,MIDI_NOTEON = 0x90,MIDI_KEY_PRESSURE = 0xA0,MIDI_CTL_CHANGE = 0xB0,MIDI_PGM_CHANGE = 0xC0,MIDI_CHN_PRESSURE = 0xD0,MIDI_PITCH_BEND = 0xE0,MIDI_SYSTEM_PREFIX = 0xF0,};
enum MACRO_MIN : __int64 {INT8_MIN = -128,INT16_MIN = -32768,INT32_MIN = -2147483648,INT64_MIN = -9223372036854775808,};
enum MACRO_MINARCS {MINARCS = 50,MAXARCS = 1048576,};
enum MACRO_MINSIGSTKSZ {MINSIGSTKSZ = 4096,SIGSTKSZ = 16384,};
enum MACRO_MIPS {MIPS_AFL_REG_NONE = 0x0,MIPS_AFL_REG_32 = 0x1,MIPS_AFL_REG_64 = 0x2,MIPS_AFL_REG_128 = 0x3,MIPS_AFL_ASE_DSP = 0x1,MIPS_AFL_ASE_DSPR2 = 0x2,MIPS_AFL_ASE_EVA = 0x4,MIPS_AFL_ASE_MCU = 0x8,MIPS_AFL_ASE_MDMX = 0x10,MIPS_AFL_ASE_MIPS3D = 0x20,MIPS_AFL_ASE_MT = 0x40,MIPS_AFL_ASE_SMARTMIPS = 0x80,MIPS_AFL_ASE_VIRT = 0x100,MIPS_AFL_ASE_MSA = 0x200,MIPS_AFL_ASE_MIPS16 = 0x400,MIPS_AFL_ASE_MICROMIPS = 0x800,MIPS_AFL_ASE_XPA = 0x1000,MIPS_AFL_ASE_MASK = 0x1FFF,MIPS_AFL_EXT_XLR = 0x1,MIPS_AFL_EXT_OCTEON2 = 0x2,MIPS_AFL_EXT_OCTEONP = 0x3,MIPS_AFL_EXT_LOONGSON_3A = 0x4,MIPS_AFL_EXT_OCTEON = 0x5,MIPS_AFL_EXT_5900 = 0x6,MIPS_AFL_EXT_4650 = 0x7,MIPS_AFL_EXT_4010 = 0x8,MIPS_AFL_EXT_4100 = 0x9,MIPS_AFL_EXT_3900 = 0xA,MIPS_AFL_EXT_10000 = 0xB,MIPS_AFL_EXT_SB1 = 0xC,MIPS_AFL_EXT_4111 = 0xD,MIPS_AFL_EXT_4120 = 0xE,MIPS_AFL_EXT_5400 = 0xF,MIPS_AFL_EXT_5500 = 0x10,MIPS_AFL_EXT_LOONGSON_2E = 0x11,MIPS_AFL_EXT_LOONGSON_2F = 0x12,MIPS_AFL_FLAGS1_ODDSPREG = 0x1,};
enum MACRO_MLD {MLD_LISTENER_QUERY = 130,MLD_LISTENER_REPORT = 131,MLD_LISTENER_REDUCTION = 132,};
enum MACRO_MM {MM_NULLLBL = 0,MM_NULLSEV = 0,MM_NULLTXT = 0,MM_NULLACT = 0,MM_NULLTAG = 0,};
enum MACRO_MOD {MOD_OFFSET = 1,MOD_FREQUENCY = 2,MOD_MAXERROR = 4,MOD_ESTERROR = 8,MOD_STATUS = 16,MOD_TIMECONST = 32,MOD_CLKB = 16384,MOD_CLKA = 32769,MOD_TAI = 128,MOD_MICRO = 4096,MOD_NANO = 8192,};
enum MACRO_MODE {MODE_S = 1,MODE_B = 2,MODE_C = 3,};
enum MACRO_MODE_EDIT {MODE_EDIT = 0x1,MODE_TRAPSIG = 0x2,MODE_ACK = 0x4,MODE_SOFT_TAB = 0x8,MODE_LIT_ECHO = 0x10,MODE_MASK = 0x1F,MODE_FLOW = 0x100,MODE_ECHO = 0x200,MODE_INBIN = 0x400,MODE_OUTBIN = 0x800,MODE_FORCE = 0x1000,};
enum MACRO_MORECTL {MORECTL = 1,MOREDATA = 2,};
enum MACRO_MPPE {CI_MPPE = 18,CILEN_MPPE = 6,};
enum MACRO_MS {MS_ASYNC = 1,MS_SYNC = 4,MS_INVALIDATE = 2,};
enum MACRO_MSG {MSG_HIPRI = 0x1,MSG_ANY = 0x2,MSG_BAND = 0x4,};
enum MACRO_MSG_NOERROR {MSG_NOERROR = 0x1000,MSG_STAT = 0xB,MSG_INFO = 0xC,};
enum MACRO_MS_MGC {MS_MGC_VAL = 0xC0ED0000,MS_MGC_MSK = 0xFFFF0000,};
enum MACRO_MT {MT_ISUNKNOWN = 0x1,MT_ISQIC02 = 0x2,MT_ISWT5150 = 0x3,MT_ISARCHIVE_5945L2 = 0x4,MT_ISCMSJ500 = 0x5,MT_ISTDC3610 = 0x6,MT_ISARCHIVE_VP60I = 0x7,MT_ISARCHIVE_2150L = 0x8,MT_ISARCHIVE_2060L = 0x9,MT_ISARCHIVESC499 = 0xA,MT_ISQIC02_ALL_FEATURES = 0xF,MT_ISWT5099EEN24 = 0x11,MT_ISTEAC_MT2ST = 0x12,MT_ISEVEREX_FT40A = 0x32,MT_ISDDS1 = 0x51,MT_ISDDS2 = 0x52,MT_ISSCSI1 = 0x71,MT_ISSCSI2 = 0x72,MT_ISFTAPE_UNKNOWN = 0x800000,MT_ISFTAPE_FLAG = 0x800000,MT_ST_BLKSIZE_SHIFT = 0x0,MT_ST_BLKSIZE_MASK = 0xFFFFFF,MT_ST_DENSITY_SHIFT = 0x18,MT_ST_DENSITY_MASK = 0xFF000000,MT_ST_SOFTERR_SHIFT = 0x0,MT_ST_SOFTERR_MASK = 0xFFFF,MT_ST_OPTIONS = 0xF0000000,MT_ST_BOOLEANS = 0x10000000,MT_ST_SETBOOLEANS = 0x30000000,MT_ST_CLEARBOOLEANS = 0x40000000,MT_ST_WRITE_THRESHOLD = 0x20000000,MT_ST_DEF_BLKSIZE = 0x50000000,MT_ST_DEF_OPTIONS = 0x60000000,MT_ST_BUFFER_WRITES = 0x1,MT_ST_ASYNC_WRITES = 0x2,MT_ST_READ_AHEAD = 0x4,MT_ST_DEBUGGING = 0x8,MT_ST_TWO_FM = 0x10,MT_ST_FAST_MTEOM = 0x20,MT_ST_AUTO_LOCK = 0x40,MT_ST_DEF_WRITES = 0x80,MT_ST_CAN_BSR = 0x100,MT_ST_NO_BLKLIMS = 0x200,MT_ST_CAN_PARTITIONS = 0x400,MT_ST_SCSI2LOGICAL = 0x800,MT_ST_CLEAR_DEFAULT = 0xFFFFF,MT_ST_DEF_DENSITY = 0x60100000,MT_ST_DEF_COMPRESSION = 0x60200000,MT_ST_DEF_DRVBUFFER = 0x60300000,MT_ST_HPLOADER_OFFSET = 0x2710,};
enum MACRO_MTBSFM {MTBSFM = 10,};
enum MACRO_MTBSS {MTBSS = 26,};
enum MACRO_MTEOM {MTEOM = 12,};
enum MACRO_MTERASE {MTERASE = 13,};
enum MACRO_MTFSFM {MTFSFM = 11,};
enum MACRO_MTFSR {MTFSR = 3,MTBSR = 4,};
enum MACRO_MTFSS {MTFSS = 25,};
enum MACRO_MTLOAD {MTLOAD = 30,};
enum MACRO_MTLOCK {MTLOCK = 28,};
enum MACRO_MTMKPART {MTMKPART = 34,};
enum MACRO_MTOFFL {MTOFFL = 7,MTNOP = 8,};
enum MACRO_MTRAS1 {MTRAS1 = 14,};
enum MACRO_MTRAS2 {MTRAS2 = 15,MTRAS3 = 16,};
enum MACRO_MTRESET {MTRESET = 0,MTFSF = 1,MTBSF = 2,};
enum MACRO_MTRETEN {MTRETEN = 9,};
enum MACRO_MTREW {MTREW = 6,};
enum MACRO_MTSEEK {MTSEEK = 22,};
enum MACRO_MTSETBLK {MTSETBLK = 20,};
enum MACRO_MTSETDENSITY {MTSETDENSITY = 21,};
enum MACRO_MTSETDRVBUFFER {MTSETDRVBUFFER = 24,};
enum MACRO_MTSETPART {MTSETPART = 33,};
enum MACRO_MTTELL {MTTELL = 23,};
enum MACRO_MTUNLOAD {MTUNLOAD = 31,MTCOMPRESSION = 32,};
enum MACRO_MTUNLOCK {MTUNLOCK = 29,};
enum MACRO_MTWEOF {MTWEOF = 5,};
enum MACRO_MTWSM {MTWSM = 27,};
enum MACRO_N {N_TTY = 0,N_SLIP = 1,N_MOUSE = 2,N_PPP = 3,N_STRIP = 4,N_AX25 = 5,N_X25 = 6,N_6PACK = 7,N_MASC = 8,N_R3964 = 9,N_PROFIBUS_FDL = 10,N_IRDA = 11,N_SMSBLOCK = 12,N_HDLC = 13,N_SYNC_PPP = 14,N_HCI = 15,};
enum MACRO_NAME {NAME_MAX = 255,PATH_MAX = 4096,};
enum MACRO_NAMESERVER {NAMESERVER_PORT = 53,};
enum MACRO_NAME_SIZE {NAME_SIZE = 12,TTY_SIZE = 16,};
enum MACRO_NBBY {NBBY = 8,NGROUPS = 65536,};
enum MACRO_NCC {NCC = 10,};
enum MACRO_NCCS {NCCS = 32,};
enum MACRO_NCURSES {NCURSES_ETI_H_incl = 1,};
enum MACRO_NCURSES_DLL {NCURSES_DLL_H_incl = 1,};
enum MACRO_NCURSES_TERM {NCURSES_TERM_H_incl = 1,NCURSES_XNAMES = 1,};
enum MACRO_NCURSES_TERMCAP {NCURSES_TERMCAP_H_incl = 1,};
enum MACRO_ND {ND_ROUTER_SOLICIT = 133,ND_ROUTER_ADVERT = 134,ND_NEIGHBOR_SOLICIT = 135,ND_NEIGHBOR_ADVERT = 136,ND_REDIRECT = 137,ND_RA_FLAG_MANAGED = 128,ND_RA_FLAG_OTHER = 64,ND_RA_FLAG_HOME_AGENT = 32,ND_NA_FLAG_ROUTER = -2147483648,ND_NA_FLAG_SOLICITED = 1073741824,ND_NA_FLAG_OVERRIDE = 536870912,ND_OPT_SOURCE_LINKADDR = 1,ND_OPT_TARGET_LINKADDR = 2,ND_OPT_PREFIX_INFORMATION = 3,ND_OPT_REDIRECTED_HEADER = 4,ND_OPT_MTU = 5,ND_OPT_RTR_ADV_INTERVAL = 7,ND_OPT_HOME_AGENT_INFO = 8,ND_OPT_PI_FLAG_ONLINK = 128,ND_OPT_PI_FLAG_AUTO = 64,ND_OPT_PI_FLAG_RADDR = 32,};
enum MACRO_NETDB {NETDB_INTERNAL = -1,NETDB_SUCCESS = 0,};
enum MACRO_NETROM {NETROM_T1 = 1,NETROM_T2 = 2,NETROM_N2 = 3,NETROM_PACLEN = 5,NETROM_T4 = 6,NETROM_IDLE = 7,NETROM_KILL = 99,NETROM_NEIGH = 0,NETROM_NODE = 1,};
enum MACRO_NEW {NEW_ENV_VAR = 0,NEW_ENV_VALUE = 1,};
enum MACRO_NFS {NFS_PROGRAM = 100003,NFS_PORT = 2049,NFS_MAXDATA = 8192,NFS_MAXPATHLEN = 1024,NFS_MAXNAMLEN = 255,NFS_MAXGROUPS = 16,NFS_FHSIZE = 32,NFS_COOKIESIZE = 4,NFS_FIFO_DEV = -1,};
enum MACRO_NFSMODE {NFSMODE_FMT = 0xF000,NFSMODE_DIR = 0x4000,NFSMODE_CHR = 0x2000,NFSMODE_BLK = 0x6000,NFSMODE_REG = 0x8000,NFSMODE_LNK = 0xA000,NFSMODE_SOCK = 0xC000,NFSMODE_FIFO = 0x1000,};
enum MACRO_NFS_MNT {NFS_MNT_PROGRAM = 100005,NFS_MNT_VERSION = 1,NFS_MNT3_VERSION = 3,};
enum MACRO_NGREG {NGREG = 48,};
enum MACRO_NGROUPS {NGROUPS_MAX = 65536,ARG_MAX = 131072,LINK_MAX = 127,};
enum MACRO_NGRPS {NGRPS = 16,};
enum MACRO_NI {NI_MAXHOST = 1025,NI_MAXSERV = 32,NI_NUMERICHOST = 1,NI_NUMERICSERV = 2,NI_NOFQDN = 4,NI_NAMEREQD = 8,NI_DGRAM = 16,};
enum MACRO_NL {NL_SETD = 1,NL_CAT_LOCALE = 1,};
enum MACRO_NL0 {NL0 = 0x0,NL1 = 0x100,NL2 = 0x200,};
enum MACRO_NL3 {NL3 = 0x300,TABDLY = 0xC00,};
enum MACRO_NO {NO_RECOVERY = 3,NO_DATA = 4,};
enum MACRO_NODEV {NODEV = -1,};
enum MACRO_NOGROUP {NOGROUP = -1,};
enum MACRO_NOP {NOP = 241,};
enum MACRO_NOT {NOT_HERE = 1,};
enum MACRO_NO_ADDRESS {NO_ADDRESS = 4,};
enum MACRO_NR {NR_OPEN = 1024,};
enum MACRO_NR_DQHASH {NR_DQHASH = 43,NR_DQUOTS = 256,};
enum MACRO_NR_ICMP {NR_ICMP_TYPES = 18,};
enum MACRO_NR_ICMP_UNREACH {NR_ICMP_UNREACH = 15,};
enum MACRO_NS {NS_PACKETSZ = 512,NS_MAXDNAME = 1025,NS_MAXMSG = 65535,NS_MAXCDNAME = 255,NS_MAXLABEL = 63,NS_HFIXEDSZ = 12,NS_QFIXEDSZ = 4,NS_RRFIXEDSZ = 10,NS_INT32SZ = 4,NS_INT16SZ = 2,NS_INT8SZ = 1,NS_INADDRSZ = 4,NS_IN6ADDRSZ = 16,NS_CMPRSFLGS = 192,NS_DEFAULTPORT = 53,NS_TSIG_FUDGE = 300,NS_TSIG_TCP_COUNT = 100,NS_TSIG_ERROR_NO_TSIG = -10,NS_TSIG_ERROR_NO_SPACE = -11,NS_TSIG_ERROR_FORMERR = -12,NS_KEY_TYPEMASK = 49152,NS_KEY_TYPE_AUTH_CONF = 0,NS_KEY_TYPE_CONF_ONLY = 32768,NS_KEY_TYPE_AUTH_ONLY = 16384,NS_KEY_TYPE_NO_KEY = 49152,NS_KEY_NO_AUTH = 32768,NS_KEY_NO_CONF = 16384,NS_KEY_RESERVED2 = 8192,NS_KEY_EXTENDED_FLAGS = 4096,NS_KEY_RESERVED4 = 2048,NS_KEY_RESERVED5 = 1024,NS_KEY_NAME_TYPE = 768,NS_KEY_NAME_USER = 0,NS_KEY_NAME_ENTITY = 512,NS_KEY_NAME_ZONE = 256,NS_KEY_NAME_RESERVED = 768,NS_KEY_RESERVED8 = 128,NS_KEY_RESERVED9 = 64,NS_KEY_RESERVED10 = 32,NS_KEY_RESERVED11 = 16,NS_KEY_SIGNATORYMASK = 15,NS_KEY_RESERVED_BITMASK = 11504,NS_KEY_RESERVED_BITMASK2 = 65535,NS_ALG_MD5RSA = 1,NS_ALG_DH = 2,NS_ALG_DSA = 3,NS_ALG_DSS = 3,NS_ALG_EXPIRE_ONLY = 253,NS_ALG_PRIVATE_OID = 254,NS_KEY_PROT_TLS = 1,NS_KEY_PROT_EMAIL = 2,NS_KEY_PROT_DNSSEC = 3,NS_KEY_PROT_IPSEC = 4,NS_KEY_PROT_ANY = 255,NS_MD5RSA_MIN_BITS = 512,NS_MD5RSA_MAX_BITS = 4096,NS_MD5RSA_MAX_BYTES = 8195,NS_MD5RSA_MAX_BASE64 = 10928,NS_MD5RSA_MIN_SIZE = 64,NS_MD5RSA_MAX_SIZE = 512,NS_DSA_SIG_SIZE = 41,NS_DSA_MIN_SIZE = 213,NS_DSA_MAX_BYTES = 405,NS_SIG_TYPE = 0,NS_SIG_ALG = 2,NS_SIG_LABELS = 3,NS_SIG_OTTL = 4,NS_SIG_EXPIR = 8,NS_SIG_SIGNED = 12,NS_SIG_FOOT = 16,NS_SIG_SIGNER = 18,NS_NXT_BITS = 8,NS_NXT_MAX = 127,NS_OPT_DNSSEC_OK = 32768,NS_OPT_NSID = 3,};
enum MACRO_NSIG {NSIG = 65,};
enum MACRO_NSLC {NSLC = 18,};
enum MACRO_NSS {NSS_BUFLEN_GROUP = 1024,};
enum MACRO_NSS_BUFLEN {NSS_BUFLEN_PASSWD = 1024,};
enum MACRO_NT {NT_PRSTATUS = 1,NT_FPREGSET = 2,NT_PRPSINFO = 3,NT_PRXREG = 4,NT_TASKSTRUCT = 4,NT_PLATFORM = 5,NT_AUXV = 6,NT_GWINDOWS = 7,NT_ASRS = 8,NT_PSTATUS = 10,NT_PSINFO = 13,NT_PRCRED = 14,NT_UTSNAME = 15,NT_LWPSTATUS = 16,NT_LWPSINFO = 17,NT_PRFPXREG = 20,NT_SIGINFO = 1397311305,NT_FILE = 1179208773,NT_PRXFPREG = 1189489535,NT_PPC_VMX = 256,NT_PPC_SPE = 257,NT_PPC_VSX = 258,NT_386_TLS = 512,NT_386_IOPERM = 513,NT_X86_XSTATE = 514,NT_S390_HIGH_GPRS = 768,NT_S390_TIMER = 769,NT_S390_TODCMP = 770,NT_S390_TODPREG = 771,NT_S390_CTRS = 772,NT_S390_PREFIX = 773,NT_S390_LAST_BREAK = 774,NT_S390_SYSTEM_CALL = 775,NT_S390_TDB = 776,NT_ARM_VFP = 1024,NT_ARM_TLS = 1025,NT_ARM_HW_BREAK = 1026,NT_ARM_HW_WATCH = 1027,NT_VERSION = 1,};
enum MACRO_NTELOPTS {NTELOPTS = 40,};
enum MACRO_NTP {NTP_API = 4,};
enum MACRO_NT_GNU {NT_GNU_ABI_TAG = 1,};
enum MACRO_NT_GNU_HWCAP {NT_GNU_HWCAP = 2,NT_GNU_BUILD_ID = 3,NT_GNU_GOLD_VERSION = 4,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_NULLPROC {NULLPROC = 0,UDPMSGSIZE = 8800,};
enum MACRO_NULL_xdrproc {NULL_xdrproc_t = 0,};
enum MACRO_NUMCOUNT {NUMCOUNT = 39,};
enum MACRO_NUMWRITE {NUMWRITE = 33,STRWRITE = 394,};
enum MACRO_O {O_ACCMODE = 0x3,O_RDONLY = 0x0,O_WRONLY = 0x1,O_RDWR = 0x2,O_CREAT = 0x40,O_EXCL = 0x80,O_NOCTTY = 0x100,O_TRUNC = 0x200,O_APPEND = 0x400,O_NONBLOCK = 0x800,O_NDELAY = 0x800,O_SYNC = 0x101000,O_FSYNC = 0x101000,O_ASYNC = 0x2000,};
enum MACRO_ODK {ODK_NULL = 0,ODK_REGINFO = 1,ODK_EXCEPTIONS = 2,ODK_PAD = 3,ODK_HWPATCH = 4,ODK_FILL = 5,ODK_TAGS = 6,ODK_HWAND = 7,ODK_HWOR = 8,};
enum MACRO_OEX {OEX_FPU_MIN = 0x1F,OEX_FPU_MAX = 0x1F00,OEX_PAGE0 = 0x10000,OEX_SMM = 0x20000,OEX_FPDBUG = 0x40000,OEX_PRECISEFP = 0x40000,OEX_DISMISS = 0x80000,OEX_FPU_INVAL = 0x10,OEX_FPU_DIV0 = 0x8,OEX_FPU_OFLO = 0x4,OEX_FPU_UFLO = 0x2,OEX_FPU_INEX = 0x1,};
enum MACRO_OHW {OHW_R4KEOP = 0x1,OHW_R8KPFETCH = 0x2,OHW_R5KEOP = 0x4,OHW_R5KCVTL = 0x8,};
enum MACRO_OHWA0 {OHWA0_R4KEOP_CHECKED = 0x1,};
enum MACRO_OHWA1 {OHWA1_R4KEOP_CLEAN = 0x2,};
enum MACRO_OK {R_OK = 4,W_OK = 2,X_OK = 1,F_OK = 0,};
enum MACRO_OLD {OLD_ENV_VAR = 1,OLD_ENV_VALUE = 0,};
enum MACRO_OPAD {OPAD_PREFIX = 0x1,OPAD_POSTFIX = 0x2,OPAD_SYMBOL = 0x4,};
enum MACRO_OPOST {OPOST = 0x1,ONLCR = 0x2,OLCUC = 0x4,OCRNL = 0x8,ONOCR = 0x10,ONLRET = 0x20,OFILL = 0x40,OFDEL = 0x80,NLDLY = 0x300,};
enum MACRO_OPTION {OPTION_ARG_OPTIONAL = 0x1,OPTION_HIDDEN = 0x2,OPTION_ALIAS = 0x4,OPTION_DOC = 0x8,OPTION_NO_USAGE = 0x10,};
enum MACRO_ORDER {__BYTE_ORDER = 4321,__FLOAT_WORD_ORDER = 4321,};
enum MACRO_OVERFLOW {OVERFLOW = 3,UNDERFLOW = 4,};
enum MACRO_O_DIRECTORY {O_DIRECTORY = 16384,O_NOFOLLOW = 32768,O_CLOEXEC = 524288,O_DSYNC = 4096,O_RSYNC = 1052672,};
enum MACRO_PA {PA_FLAG_MASK = 0xFF00,PA_FLAG_LONG_LONG = 0x100,PA_FLAG_LONG_DOUBLE = 0x100,PA_FLAG_LONG = 0x200,PA_FLAG_SHORT = 0x400,PA_FLAG_PTR = 0x800,};
enum MACRO_PACKET {PACKET_HOST = 0,PACKET_BROADCAST = 1,PACKET_MULTICAST = 2,PACKET_OTHERHOST = 3,PACKET_OUTGOING = 4,PACKET_LOOPBACK = 5,PACKET_FASTROUTE = 6,PACKET_ADD_MEMBERSHIP = 1,PACKET_DROP_MEMBERSHIP = 2,PACKET_RECV_OUTPUT = 3,PACKET_RX_RING = 5,PACKET_STATISTICS = 6,PACKET_MR_MULTICAST = 0,PACKET_MR_PROMISC = 1,PACKET_MR_ALLMULTI = 2,};
enum MACRO_PACKETSZ {PACKETSZ = 512,MAXDNAME = 1025,};
enum MACRO_PARITY {PARITY_DEFAULT = 0,PARITY_NONE = 1,PARITY_CRC16_PR0 = 2,PARITY_CRC16_PR1 = 3,PARITY_CRC16_PR0_CCITT = 4,PARITY_CRC16_PR1_CCITT = 5,PARITY_CRC32_PR0_CCITT = 6,PARITY_CRC32_PR1_CCITT = 7,};
enum MACRO_PATCH {WAVE_PATCH = 0xFD04,GUS_PATCH = 0xFD04,WAVEFRONT_PATCH = 0xFD06,};
enum MACRO_PCI {PCI_STD_HEADER_SIZEOF = 64,PCI_VENDOR_ID = 0,PCI_DEVICE_ID = 2,PCI_COMMAND = 4,PCI_COMMAND_IO = 1,PCI_COMMAND_MEMORY = 2,PCI_COMMAND_MASTER = 4,PCI_COMMAND_SPECIAL = 8,PCI_COMMAND_INVALIDATE = 16,PCI_COMMAND_VGA_PALETTE = 32,PCI_COMMAND_PARITY = 64,PCI_COMMAND_WAIT = 128,PCI_COMMAND_SERR = 256,PCI_COMMAND_FAST_BACK = 512,PCI_COMMAND_INTX_DISABLE = 1024,PCI_STATUS = 6,PCI_STATUS_INTERRUPT = 8,PCI_STATUS_CAP_LIST = 16,PCI_STATUS_66MHZ = 32,PCI_STATUS_UDF = 64,PCI_STATUS_FAST_BACK = 128,PCI_STATUS_PARITY = 256,PCI_STATUS_DEVSEL_MASK = 1536,PCI_STATUS_DEVSEL_FAST = 0,PCI_STATUS_DEVSEL_MEDIUM = 512,PCI_STATUS_DEVSEL_SLOW = 1024,PCI_STATUS_SIG_TARGET_ABORT = 2048,PCI_STATUS_REC_TARGET_ABORT = 4096,PCI_STATUS_REC_MASTER_ABORT = 8192,PCI_STATUS_SIG_SYSTEM_ERROR = 16384,PCI_STATUS_DETECTED_PARITY = 32768,PCI_CLASS_REVISION = 8,PCI_REVISION_ID = 8,PCI_CLASS_PROG = 9,PCI_CLASS_DEVICE = 10,PCI_CACHE_LINE_SIZE = 12,PCI_LATENCY_TIMER = 13,PCI_HEADER_TYPE = 14,PCI_HEADER_TYPE_NORMAL = 0,PCI_HEADER_TYPE_BRIDGE = 1,PCI_HEADER_TYPE_CARDBUS = 2,PCI_BIST = 15,PCI_BIST_CODE_MASK = 15,PCI_BIST_START = 64,PCI_BIST_CAPABLE = 128,PCI_BASE_ADDRESS_0 = 16,PCI_BASE_ADDRESS_1 = 20,PCI_BASE_ADDRESS_2 = 24,PCI_BASE_ADDRESS_3 = 28,PCI_BASE_ADDRESS_4 = 32,PCI_BASE_ADDRESS_5 = 36,PCI_BASE_ADDRESS_SPACE = 1,PCI_BASE_ADDRESS_SPACE_IO = 1,PCI_BASE_ADDRESS_SPACE_MEMORY = 0,PCI_BASE_ADDRESS_MEM_TYPE_MASK = 6,PCI_BASE_ADDRESS_MEM_TYPE_32 = 0,PCI_BASE_ADDRESS_MEM_TYPE_1M = 2,PCI_BASE_ADDRESS_MEM_TYPE_64 = 4,PCI_BASE_ADDRESS_MEM_PREFETCH = 8,PCI_BASE_ADDRESS_MEM_MASK = -16,PCI_BASE_ADDRESS_IO_MASK = -4,PCI_CARDBUS_CIS = 40,PCI_SUBSYSTEM_VENDOR_ID = 44,PCI_SUBSYSTEM_ID = 46,PCI_ROM_ADDRESS = 48,PCI_ROM_ADDRESS_ENABLE = 1,PCI_ROM_ADDRESS_MASK = -2048,PCI_CAPABILITY_LIST = 52,PCI_INTERRUPT_LINE = 60,PCI_INTERRUPT_PIN = 61,PCI_MIN_GNT = 62,PCI_MAX_LAT = 63,PCI_PRIMARY_BUS = 24,PCI_SECONDARY_BUS = 25,PCI_SUBORDINATE_BUS = 26,PCI_SEC_LATENCY_TIMER = 27,PCI_IO_BASE = 28,PCI_IO_LIMIT = 29,PCI_IO_RANGE_TYPE_MASK = 15,PCI_IO_RANGE_TYPE_16 = 0,PCI_IO_RANGE_TYPE_32 = 1,PCI_IO_RANGE_MASK = -16,PCI_IO_1K_RANGE_MASK = -4,PCI_SEC_STATUS = 30,PCI_MEMORY_BASE = 32,PCI_MEMORY_LIMIT = 34,PCI_MEMORY_RANGE_TYPE_MASK = 15,PCI_MEMORY_RANGE_MASK = -16,PCI_PREF_MEMORY_BASE = 36,PCI_PREF_MEMORY_LIMIT = 38,PCI_PREF_RANGE_TYPE_MASK = 15,PCI_PREF_RANGE_TYPE_32 = 0,PCI_PREF_RANGE_TYPE_64 = 1,PCI_PREF_RANGE_MASK = -16,PCI_PREF_BASE_UPPER32 = 40,PCI_PREF_LIMIT_UPPER32 = 44,PCI_IO_BASE_UPPER16 = 48,PCI_IO_LIMIT_UPPER16 = 50,PCI_ROM_ADDRESS1 = 56,PCI_BRIDGE_CONTROL = 62,PCI_BRIDGE_CTL_PARITY = 1,PCI_BRIDGE_CTL_SERR = 2,PCI_BRIDGE_CTL_ISA = 4,PCI_BRIDGE_CTL_VGA = 8,PCI_BRIDGE_CTL_MASTER_ABORT = 32,PCI_BRIDGE_CTL_BUS_RESET = 64,PCI_BRIDGE_CTL_FAST_BACK = 128,PCI_CB_CAPABILITY_LIST = 20,PCI_CB_SEC_STATUS = 22,PCI_CB_PRIMARY_BUS = 24,PCI_CB_CARD_BUS = 25,PCI_CB_SUBORDINATE_BUS = 26,PCI_CB_LATENCY_TIMER = 27,PCI_CB_MEMORY_BASE_0 = 28,PCI_CB_MEMORY_LIMIT_0 = 32,PCI_CB_MEMORY_BASE_1 = 36,PCI_CB_MEMORY_LIMIT_1 = 40,PCI_CB_IO_BASE_0 = 44,PCI_CB_IO_BASE_0_HI = 46,PCI_CB_IO_LIMIT_0 = 48,PCI_CB_IO_LIMIT_0_HI = 50,PCI_CB_IO_BASE_1 = 52,PCI_CB_IO_BASE_1_HI = 54,PCI_CB_IO_LIMIT_1 = 56,PCI_CB_IO_LIMIT_1_HI = 58,PCI_CB_IO_RANGE_MASK = -4,PCI_CB_BRIDGE_CONTROL = 62,PCI_CB_BRIDGE_CTL_PARITY = 1,PCI_CB_BRIDGE_CTL_SERR = 2,PCI_CB_BRIDGE_CTL_ISA = 4,PCI_CB_BRIDGE_CTL_VGA = 8,PCI_CB_BRIDGE_CTL_MASTER_ABORT = 32,PCI_CB_BRIDGE_CTL_CB_RESET = 64,PCI_CB_BRIDGE_CTL_16BIT_INT = 128,PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 = 256,PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 = 512,PCI_CB_BRIDGE_CTL_POST_WRITES = 1024,PCI_CB_SUBSYSTEM_VENDOR_ID = 64,PCI_CB_SUBSYSTEM_ID = 66,PCI_CB_LEGACY_MODE_BASE = 68,PCI_CAP_LIST_ID = 0,PCI_CAP_ID_PM = 1,PCI_CAP_ID_AGP = 2,PCI_CAP_ID_VPD = 3,PCI_CAP_ID_SLOTID = 4,PCI_CAP_ID_MSI = 5,PCI_CAP_ID_CHSWP = 6,PCI_CAP_ID_PCIX = 7,PCI_CAP_ID_HT = 8,PCI_CAP_ID_VNDR = 9,PCI_CAP_ID_DBG = 10,PCI_CAP_ID_CCRC = 11,PCI_CAP_ID_SHPC = 12,PCI_CAP_ID_SSVID = 13,PCI_CAP_ID_AGP3 = 14,PCI_CAP_ID_SECDEV = 15,PCI_CAP_ID_EXP = 16,PCI_CAP_ID_MSIX = 17,PCI_CAP_ID_SATA = 18,PCI_CAP_ID_AF = 19,PCI_CAP_ID_MAX = 19,PCI_CAP_LIST_NEXT = 1,PCI_CAP_FLAGS = 2,PCI_CAP_SIZEOF = 4,PCI_PM_PMC = 2,PCI_PM_CAP_VER_MASK = 7,PCI_PM_CAP_PME_CLOCK = 8,PCI_PM_CAP_RESERVED = 16,PCI_PM_CAP_DSI = 32,PCI_PM_CAP_AUX_POWER = 448,PCI_PM_CAP_D1 = 512,PCI_PM_CAP_D2 = 1024,PCI_PM_CAP_PME = 2048,PCI_PM_CAP_PME_MASK = 63488,PCI_PM_CAP_PME_D0 = 2048,PCI_PM_CAP_PME_D1 = 4096,PCI_PM_CAP_PME_D2 = 8192,PCI_PM_CAP_PME_D3 = 16384,PCI_PM_CAP_PME_D3cold = 32768,PCI_PM_CAP_PME_SHIFT = 11,PCI_PM_CTRL = 4,PCI_PM_CTRL_STATE_MASK = 3,PCI_PM_CTRL_NO_SOFT_RESET = 8,PCI_PM_CTRL_PME_ENABLE = 256,PCI_PM_CTRL_DATA_SEL_MASK = 7680,PCI_PM_CTRL_DATA_SCALE_MASK = 24576,PCI_PM_CTRL_PME_STATUS = 32768,PCI_PM_PPB_EXTENSIONS = 6,PCI_PM_PPB_B2_B3 = 64,PCI_PM_BPCC_ENABLE = 128,PCI_PM_DATA_REGISTER = 7,PCI_PM_SIZEOF = 8,PCI_AGP_VERSION = 2,PCI_AGP_RFU = 3,PCI_AGP_STATUS = 4,PCI_AGP_STATUS_RQ_MASK = -16777216,PCI_AGP_STATUS_SBA = 512,PCI_AGP_STATUS_64BIT = 32,PCI_AGP_STATUS_FW = 16,PCI_AGP_STATUS_RATE4 = 4,PCI_AGP_STATUS_RATE2 = 2,PCI_AGP_STATUS_RATE1 = 1,PCI_AGP_COMMAND = 8,PCI_AGP_COMMAND_RQ_MASK = -16777216,PCI_AGP_COMMAND_SBA = 512,PCI_AGP_COMMAND_AGP = 256,PCI_AGP_COMMAND_64BIT = 32,PCI_AGP_COMMAND_FW = 16,PCI_AGP_COMMAND_RATE4 = 4,PCI_AGP_COMMAND_RATE2 = 2,PCI_AGP_COMMAND_RATE1 = 1,PCI_AGP_SIZEOF = 12,PCI_VPD_ADDR = 2,PCI_VPD_ADDR_MASK = 32767,PCI_VPD_ADDR_F = 32768,PCI_VPD_DATA = 4,PCI_CAP_VPD_SIZEOF = 8,PCI_SID_ESR = 2,PCI_SID_ESR_NSLOTS = 31,PCI_SID_ESR_FIC = 32,PCI_SID_CHASSIS_NR = 3,PCI_MSI_FLAGS = 2,PCI_MSI_FLAGS_ENABLE = 1,PCI_MSI_FLAGS_QMASK = 14,PCI_MSI_FLAGS_QSIZE = 112,PCI_MSI_FLAGS_64BIT = 128,PCI_MSI_FLAGS_MASKBIT = 256,PCI_MSI_RFU = 3,PCI_MSI_ADDRESS_LO = 4,PCI_MSI_ADDRESS_HI = 8,PCI_MSI_DATA_32 = 8,PCI_MSI_MASK_32 = 12,PCI_MSI_PENDING_32 = 16,PCI_MSI_DATA_64 = 12,PCI_MSI_MASK_64 = 16,PCI_MSI_PENDING_64 = 20,PCI_MSIX_FLAGS = 2,PCI_MSIX_FLAGS_QSIZE = 2047,PCI_MSIX_FLAGS_MASKALL = 16384,PCI_MSIX_FLAGS_ENABLE = 32768,PCI_MSIX_TABLE = 4,PCI_MSIX_TABLE_BIR = 7,PCI_MSIX_TABLE_OFFSET = -8,PCI_MSIX_PBA = 8,PCI_MSIX_PBA_BIR = 7,PCI_MSIX_PBA_OFFSET = -8,PCI_CAP_MSIX_SIZEOF = 12,PCI_MSIX_ENTRY_SIZE = 16,PCI_MSIX_ENTRY_LOWER_ADDR = 0,PCI_MSIX_ENTRY_UPPER_ADDR = 4,PCI_MSIX_ENTRY_DATA = 8,PCI_MSIX_ENTRY_VECTOR_CTRL = 12,PCI_MSIX_ENTRY_CTRL_MASKBIT = 1,PCI_CHSWP_CSR = 2,PCI_CHSWP_DHA = 1,PCI_CHSWP_EIM = 2,PCI_CHSWP_PIE = 4,PCI_CHSWP_LOO = 8,PCI_CHSWP_PI = 48,PCI_CHSWP_EXT = 64,PCI_CHSWP_INS = 128,PCI_AF_LENGTH = 2,PCI_AF_CAP = 3,PCI_AF_CAP_TP = 1,PCI_AF_CAP_FLR = 2,PCI_AF_CTRL = 4,PCI_AF_CTRL_FLR = 1,PCI_AF_STATUS = 5,PCI_AF_STATUS_TP = 1,PCI_CAP_AF_SIZEOF = 6,PCI_X_CMD = 2,PCI_X_CMD_DPERR_E = 1,PCI_X_CMD_ERO = 2,PCI_X_CMD_READ_512 = 0,PCI_X_CMD_READ_1K = 4,PCI_X_CMD_READ_2K = 8,PCI_X_CMD_READ_4K = 12,PCI_X_CMD_MAX_READ = 12,PCI_X_CMD_SPLIT_1 = 0,PCI_X_CMD_SPLIT_2 = 16,PCI_X_CMD_SPLIT_3 = 32,PCI_X_CMD_SPLIT_4 = 48,PCI_X_CMD_SPLIT_8 = 64,PCI_X_CMD_SPLIT_12 = 80,PCI_X_CMD_SPLIT_16 = 96,PCI_X_CMD_SPLIT_32 = 112,PCI_X_CMD_MAX_SPLIT = 112,PCI_X_STATUS = 4,PCI_X_STATUS_DEVFN = 255,PCI_X_STATUS_BUS = 65280,PCI_X_STATUS_64BIT = 65536,PCI_X_STATUS_133MHZ = 131072,PCI_X_STATUS_SPL_DISC = 262144,PCI_X_STATUS_UNX_SPL = 524288,PCI_X_STATUS_COMPLEX = 1048576,PCI_X_STATUS_MAX_READ = 6291456,PCI_X_STATUS_MAX_SPLIT = 58720256,PCI_X_STATUS_MAX_CUM = 469762048,PCI_X_STATUS_SPL_ERR = 536870912,PCI_X_STATUS_266MHZ = 1073741824,PCI_X_STATUS_533MHZ = -2147483648,PCI_X_ECC_CSR = 8,PCI_CAP_PCIX_SIZEOF_V0 = 8,PCI_CAP_PCIX_SIZEOF_V1 = 24,PCI_CAP_PCIX_SIZEOF_V2 = 24,PCI_X_BRIDGE_SSTATUS = 2,PCI_X_SSTATUS_64BIT = 1,PCI_X_SSTATUS_133MHZ = 2,PCI_X_SSTATUS_FREQ = 960,PCI_X_SSTATUS_VERS = 12288,PCI_X_SSTATUS_V1 = 4096,PCI_X_SSTATUS_V2 = 8192,PCI_X_SSTATUS_266MHZ = 16384,PCI_X_SSTATUS_533MHZ = 32768,PCI_X_BRIDGE_STATUS = 4,PCI_SSVID_VENDOR_ID = 4,PCI_SSVID_DEVICE_ID = 6,PCI_EXP_FLAGS = 2,PCI_EXP_FLAGS_VERS = 15,PCI_EXP_FLAGS_TYPE = 240,PCI_EXP_TYPE_ENDPOINT = 0,PCI_EXP_TYPE_LEG_END = 1,PCI_EXP_TYPE_ROOT_PORT = 4,PCI_EXP_TYPE_UPSTREAM = 5,PCI_EXP_TYPE_DOWNSTREAM = 6,PCI_EXP_TYPE_PCI_BRIDGE = 7,PCI_EXP_TYPE_PCIE_BRIDGE = 8,PCI_EXP_TYPE_RC_END = 9,PCI_EXP_TYPE_RC_EC = 10,PCI_EXP_FLAGS_SLOT = 256,PCI_EXP_FLAGS_IRQ = 15872,PCI_EXP_DEVCAP = 4,PCI_EXP_DEVCAP_PAYLOAD = 7,PCI_EXP_DEVCAP_PHANTOM = 24,PCI_EXP_DEVCAP_EXT_TAG = 32,PCI_EXP_DEVCAP_L0S = 448,PCI_EXP_DEVCAP_L1 = 3584,PCI_EXP_DEVCAP_ATN_BUT = 4096,PCI_EXP_DEVCAP_ATN_IND = 8192,PCI_EXP_DEVCAP_PWR_IND = 16384,PCI_EXP_DEVCAP_RBER = 32768,PCI_EXP_DEVCAP_PWR_VAL = 66846720,PCI_EXP_DEVCAP_PWR_SCL = 201326592,PCI_EXP_DEVCAP_FLR = 268435456,PCI_EXP_DEVCTL = 8,PCI_EXP_DEVCTL_CERE = 1,PCI_EXP_DEVCTL_NFERE = 2,PCI_EXP_DEVCTL_FERE = 4,PCI_EXP_DEVCTL_URRE = 8,PCI_EXP_DEVCTL_RELAX_EN = 16,PCI_EXP_DEVCTL_PAYLOAD = 224,PCI_EXP_DEVCTL_EXT_TAG = 256,PCI_EXP_DEVCTL_PHANTOM = 512,PCI_EXP_DEVCTL_AUX_PME = 1024,PCI_EXP_DEVCTL_NOSNOOP_EN = 2048,PCI_EXP_DEVCTL_READRQ = 28672,PCI_EXP_DEVCTL_BCR_FLR = 32768,PCI_EXP_DEVSTA = 10,PCI_EXP_DEVSTA_CED = 1,PCI_EXP_DEVSTA_NFED = 2,PCI_EXP_DEVSTA_FED = 4,PCI_EXP_DEVSTA_URD = 8,PCI_EXP_DEVSTA_AUXPD = 16,PCI_EXP_DEVSTA_TRPND = 32,PCI_EXP_LNKCAP = 12,PCI_EXP_LNKCAP_SLS = 15,PCI_EXP_LNKCAP_SLS_2_5GB = 1,PCI_EXP_LNKCAP_SLS_5_0GB = 2,PCI_EXP_LNKCAP_MLW = 1008,PCI_EXP_LNKCAP_ASPMS = 3072,PCI_EXP_LNKCAP_L0SEL = 28672,PCI_EXP_LNKCAP_L1EL = 229376,PCI_EXP_LNKCAP_CLKPM = 262144,PCI_EXP_LNKCAP_SDERC = 524288,PCI_EXP_LNKCAP_DLLLARC = 1048576,PCI_EXP_LNKCAP_LBNC = 2097152,PCI_EXP_LNKCAP_PN = -16777216,PCI_EXP_LNKCTL = 16,PCI_EXP_LNKCTL_ASPMC = 3,PCI_EXP_LNKCTL_ASPM_L0S = 1,PCI_EXP_LNKCTL_ASPM_L1 = 2,PCI_EXP_LNKCTL_RCB = 8,PCI_EXP_LNKCTL_LD = 16,PCI_EXP_LNKCTL_RL = 32,PCI_EXP_LNKCTL_CCC = 64,PCI_EXP_LNKCTL_ES = 128,PCI_EXP_LNKCTL_CLKREQ_EN = 256,PCI_EXP_LNKCTL_HAWD = 512,PCI_EXP_LNKCTL_LBMIE = 1024,PCI_EXP_LNKCTL_LABIE = 2048,PCI_EXP_LNKSTA = 18,PCI_EXP_LNKSTA_CLS = 15,PCI_EXP_LNKSTA_CLS_2_5GB = 1,PCI_EXP_LNKSTA_CLS_5_0GB = 2,PCI_EXP_LNKSTA_CLS_8_0GB = 3,PCI_EXP_LNKSTA_NLW = 1008,PCI_EXP_LNKSTA_NLW_X1 = 16,PCI_EXP_LNKSTA_NLW_X2 = 32,PCI_EXP_LNKSTA_NLW_X4 = 64,PCI_EXP_LNKSTA_NLW_X8 = 128,PCI_EXP_LNKSTA_NLW_SHIFT = 4,PCI_EXP_LNKSTA_LT = 2048,PCI_EXP_LNKSTA_SLC = 4096,PCI_EXP_LNKSTA_DLLLA = 8192,PCI_EXP_LNKSTA_LBMS = 16384,PCI_EXP_LNKSTA_LABS = 32768,PCI_CAP_EXP_ENDPOINT_SIZEOF_V1 = 20,PCI_EXP_SLTCAP = 20,PCI_EXP_SLTCAP_ABP = 1,PCI_EXP_SLTCAP_PCP = 2,PCI_EXP_SLTCAP_MRLSP = 4,PCI_EXP_SLTCAP_AIP = 8,PCI_EXP_SLTCAP_PIP = 16,PCI_EXP_SLTCAP_HPS = 32,PCI_EXP_SLTCAP_HPC = 64,PCI_EXP_SLTCAP_SPLV = 32640,PCI_EXP_SLTCAP_SPLS = 98304,PCI_EXP_SLTCAP_EIP = 131072,PCI_EXP_SLTCAP_NCCS = 262144,PCI_EXP_SLTCAP_PSN = -524288,PCI_EXP_SLTCTL = 24,PCI_EXP_SLTCTL_ABPE = 1,PCI_EXP_SLTCTL_PFDE = 2,PCI_EXP_SLTCTL_MRLSCE = 4,PCI_EXP_SLTCTL_PDCE = 8,PCI_EXP_SLTCTL_CCIE = 16,PCI_EXP_SLTCTL_HPIE = 32,PCI_EXP_SLTCTL_AIC = 192,PCI_EXP_SLTCTL_ATTN_IND_ON = 64,PCI_EXP_SLTCTL_ATTN_IND_BLINK = 128,PCI_EXP_SLTCTL_ATTN_IND_OFF = 192,PCI_EXP_SLTCTL_PIC = 768,PCI_EXP_SLTCTL_PWR_IND_ON = 256,PCI_EXP_SLTCTL_PWR_IND_BLINK = 512,PCI_EXP_SLTCTL_PWR_IND_OFF = 768,PCI_EXP_SLTCTL_PCC = 1024,PCI_EXP_SLTCTL_PWR_ON = 0,PCI_EXP_SLTCTL_PWR_OFF = 1024,PCI_EXP_SLTCTL_EIC = 2048,PCI_EXP_SLTCTL_DLLSCE = 4096,PCI_EXP_SLTSTA = 26,PCI_EXP_SLTSTA_ABP = 1,PCI_EXP_SLTSTA_PFD = 2,PCI_EXP_SLTSTA_MRLSC = 4,PCI_EXP_SLTSTA_PDC = 8,PCI_EXP_SLTSTA_CC = 16,PCI_EXP_SLTSTA_MRLSS = 32,PCI_EXP_SLTSTA_PDS = 64,PCI_EXP_SLTSTA_EIS = 128,PCI_EXP_SLTSTA_DLLSC = 256,PCI_EXP_RTCTL = 28,PCI_EXP_RTCTL_SECEE = 1,PCI_EXP_RTCTL_SENFEE = 2,PCI_EXP_RTCTL_SEFEE = 4,PCI_EXP_RTCTL_PMEIE = 8,PCI_EXP_RTCTL_CRSSVE = 16,PCI_EXP_RTCAP = 30,PCI_EXP_RTCAP_CRSVIS = 1,PCI_EXP_RTSTA = 32,PCI_EXP_RTSTA_PME = 65536,PCI_EXP_RTSTA_PENDING = 131072,PCI_EXP_DEVCAP2 = 36,PCI_EXP_DEVCAP2_ARI = 32,PCI_EXP_DEVCAP2_LTR = 2048,PCI_EXP_DEVCAP2_OBFF_MASK = 786432,PCI_EXP_DEVCAP2_OBFF_MSG = 262144,PCI_EXP_DEVCAP2_OBFF_WAKE = 524288,PCI_EXP_DEVCTL2 = 40,PCI_EXP_DEVCTL2_COMP_TIMEOUT = 15,PCI_EXP_DEVCTL2_ARI = 32,PCI_EXP_DEVCTL2_IDO_REQ_EN = 256,PCI_EXP_DEVCTL2_IDO_CMP_EN = 512,PCI_EXP_DEVCTL2_LTR_EN = 1024,PCI_EXP_DEVCTL2_OBFF_MSGA_EN = 8192,PCI_EXP_DEVCTL2_OBFF_MSGB_EN = 16384,PCI_EXP_DEVCTL2_OBFF_WAKE_EN = 24576,PCI_EXP_DEVSTA2 = 42,PCI_CAP_EXP_ENDPOINT_SIZEOF_V2 = 44,PCI_EXP_LNKCAP2 = 44,PCI_EXP_LNKCAP2_SLS_2_5GB = 2,PCI_EXP_LNKCAP2_SLS_5_0GB = 4,PCI_EXP_LNKCAP2_SLS_8_0GB = 8,PCI_EXP_LNKCAP2_CROSSLINK = 256,PCI_EXP_LNKCTL2 = 48,PCI_EXP_LNKSTA2 = 50,PCI_EXP_SLTCAP2 = 52,PCI_EXP_SLTCTL2 = 56,PCI_EXP_SLTSTA2 = 58,PCI_EXT_CAP_ID_ERR = 1,PCI_EXT_CAP_ID_VC = 2,PCI_EXT_CAP_ID_DSN = 3,PCI_EXT_CAP_ID_PWR = 4,PCI_EXT_CAP_ID_RCLD = 5,PCI_EXT_CAP_ID_RCILC = 6,PCI_EXT_CAP_ID_RCEC = 7,PCI_EXT_CAP_ID_MFVC = 8,PCI_EXT_CAP_ID_VC9 = 9,PCI_EXT_CAP_ID_RCRB = 10,PCI_EXT_CAP_ID_VNDR = 11,PCI_EXT_CAP_ID_CAC = 12,PCI_EXT_CAP_ID_ACS = 13,PCI_EXT_CAP_ID_ARI = 14,PCI_EXT_CAP_ID_ATS = 15,PCI_EXT_CAP_ID_SRIOV = 16,PCI_EXT_CAP_ID_MRIOV = 17,PCI_EXT_CAP_ID_MCAST = 18,PCI_EXT_CAP_ID_PRI = 19,PCI_EXT_CAP_ID_AMD_XXX = 20,PCI_EXT_CAP_ID_REBAR = 21,PCI_EXT_CAP_ID_DPA = 22,PCI_EXT_CAP_ID_TPH = 23,PCI_EXT_CAP_ID_LTR = 24,PCI_EXT_CAP_ID_SECPCI = 25,PCI_EXT_CAP_ID_PMUX = 26,PCI_EXT_CAP_ID_PASID = 27,PCI_EXT_CAP_ID_MAX = 27,PCI_EXT_CAP_DSN_SIZEOF = 12,PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF = 40,PCI_ERR_UNCOR_STATUS = 4,PCI_ERR_UNC_UND = 1,PCI_ERR_UNC_DLP = 16,PCI_ERR_UNC_SURPDN = 32,PCI_ERR_UNC_POISON_TLP = 4096,PCI_ERR_UNC_FCP = 8192,PCI_ERR_UNC_COMP_TIME = 16384,PCI_ERR_UNC_COMP_ABORT = 32768,PCI_ERR_UNC_UNX_COMP = 65536,PCI_ERR_UNC_RX_OVER = 131072,PCI_ERR_UNC_MALF_TLP = 262144,PCI_ERR_UNC_ECRC = 524288,PCI_ERR_UNC_UNSUP = 1048576,PCI_ERR_UNC_ACSV = 2097152,PCI_ERR_UNC_INTN = 4194304,PCI_ERR_UNC_MCBTLP = 8388608,PCI_ERR_UNC_ATOMEG = 16777216,PCI_ERR_UNC_TLPPRE = 33554432,PCI_ERR_UNCOR_MASK = 8,PCI_ERR_UNCOR_SEVER = 12,PCI_ERR_COR_STATUS = 16,PCI_ERR_COR_RCVR = 1,PCI_ERR_COR_BAD_TLP = 64,PCI_ERR_COR_BAD_DLLP = 128,PCI_ERR_COR_REP_ROLL = 256,PCI_ERR_COR_REP_TIMER = 4096,PCI_ERR_COR_ADV_NFAT = 8192,PCI_ERR_COR_INTERNAL = 16384,PCI_ERR_COR_LOG_OVER = 32768,PCI_ERR_COR_MASK = 20,PCI_ERR_CAP = 24,PCI_ERR_CAP_ECRC_GENC = 32,PCI_ERR_CAP_ECRC_GENE = 64,PCI_ERR_CAP_ECRC_CHKC = 128,PCI_ERR_CAP_ECRC_CHKE = 256,PCI_ERR_HEADER_LOG = 28,PCI_ERR_ROOT_COMMAND = 44,PCI_ERR_ROOT_CMD_COR_EN = 1,PCI_ERR_ROOT_CMD_NONFATAL_EN = 2,PCI_ERR_ROOT_CMD_FATAL_EN = 4,PCI_ERR_ROOT_STATUS = 48,PCI_ERR_ROOT_COR_RCV = 1,PCI_ERR_ROOT_MULTI_COR_RCV = 2,PCI_ERR_ROOT_UNCOR_RCV = 4,PCI_ERR_ROOT_MULTI_UNCOR_RCV = 8,PCI_ERR_ROOT_FIRST_FATAL = 16,PCI_ERR_ROOT_NONFATAL_RCV = 32,PCI_ERR_ROOT_FATAL_RCV = 64,PCI_ERR_ROOT_ERR_SRC = 52,PCI_VC_PORT_CAP1 = 4,PCI_VC_CAP1_EVCC = 7,PCI_VC_CAP1_LPEVCC = 112,PCI_VC_CAP1_ARB_SIZE = 3072,PCI_VC_PORT_CAP2 = 8,PCI_VC_CAP2_32_PHASE = 2,PCI_VC_CAP2_64_PHASE = 4,PCI_VC_CAP2_128_PHASE = 8,PCI_VC_CAP2_ARB_OFF = -16777216,PCI_VC_PORT_CTRL = 12,PCI_VC_PORT_CTRL_LOAD_TABLE = 1,PCI_VC_PORT_STATUS = 14,PCI_VC_PORT_STATUS_TABLE = 1,PCI_VC_RES_CAP = 16,PCI_VC_RES_CAP_32_PHASE = 2,PCI_VC_RES_CAP_64_PHASE = 4,PCI_VC_RES_CAP_128_PHASE = 8,PCI_VC_RES_CAP_128_PHASE_TB = 16,PCI_VC_RES_CAP_256_PHASE = 32,PCI_VC_RES_CAP_ARB_OFF = -16777216,PCI_VC_RES_CTRL = 20,PCI_VC_RES_CTRL_LOAD_TABLE = 65536,PCI_VC_RES_CTRL_ARB_SELECT = 917504,PCI_VC_RES_CTRL_ID = 117440512,PCI_VC_RES_CTRL_ENABLE = -2147483648,PCI_VC_RES_STATUS = 26,PCI_VC_RES_STATUS_TABLE = 1,PCI_VC_RES_STATUS_NEGO = 2,PCI_CAP_VC_BASE_SIZEOF = 16,PCI_CAP_VC_PER_VC_SIZEOF = 12,PCI_PWR_DSR = 4,PCI_PWR_DATA = 8,PCI_PWR_CAP = 12,PCI_EXT_CAP_PWR_SIZEOF = 16,PCI_VNDR_HEADER = 4,};
enum MACRO_PCIIOC {PCIIOC_BASE = 1346586880,PCIIOC_CONTROLLER = 1346586880,PCIIOC_MMAP_IS_IO = 1346586881,PCIIOC_MMAP_IS_MEM = 1346586882,PCIIOC_WRITE_COMBINE = 1346586883,};
enum MACRO_PCI_ARI {PCI_ARI_CAP = 0x4,PCI_ARI_CAP_MFVC = 0x1,PCI_ARI_CAP_ACS = 0x2,PCI_ARI_CTRL = 0x6,PCI_ARI_CTRL_MFVC = 0x1,PCI_ARI_CTRL_ACS = 0x2,PCI_EXT_CAP_ARI_SIZEOF = 0x8,PCI_ATS_CAP = 0x4,PCI_ATS_MAX_QDEP = 0x20,PCI_ATS_CTRL = 0x6,PCI_ATS_CTRL_ENABLE = 0x8000,PCI_ATS_MIN_STU = 0xC,PCI_EXT_CAP_ATS_SIZEOF = 0x8,PCI_PRI_CTRL = 0x4,PCI_PRI_CTRL_ENABLE = 0x1,PCI_PRI_CTRL_RESET = 0x2,PCI_PRI_STATUS = 0x6,PCI_PRI_STATUS_RF = 0x1,PCI_PRI_STATUS_UPRGI = 0x2,PCI_PRI_STATUS_STOPPED = 0x100,PCI_PRI_MAX_REQ = 0x8,PCI_PRI_ALLOC_REQ = 0xC,PCI_EXT_CAP_PRI_SIZEOF = 0x10,PCI_PASID_CAP = 0x4,PCI_PASID_CAP_EXEC = 0x2,PCI_PASID_CAP_PRIV = 0x4,PCI_PASID_CTRL = 0x6,PCI_PASID_CTRL_ENABLE = 0x1,PCI_PASID_CTRL_EXEC = 0x2,PCI_PASID_CTRL_PRIV = 0x4,PCI_EXT_CAP_PASID_SIZEOF = 0x8,PCI_SRIOV_CAP = 0x4,PCI_SRIOV_CAP_VFM = 0x1,PCI_SRIOV_CTRL = 0x8,PCI_SRIOV_CTRL_VFE = 0x1,PCI_SRIOV_CTRL_VFM = 0x2,PCI_SRIOV_CTRL_INTR = 0x4,PCI_SRIOV_CTRL_MSE = 0x8,PCI_SRIOV_CTRL_ARI = 0x10,PCI_SRIOV_STATUS = 0xA,PCI_SRIOV_STATUS_VFM = 0x1,PCI_SRIOV_INITIAL_VF = 0xC,PCI_SRIOV_TOTAL_VF = 0xE,PCI_SRIOV_NUM_VF = 0x10,PCI_SRIOV_FUNC_LINK = 0x12,PCI_SRIOV_VF_OFFSET = 0x14,PCI_SRIOV_VF_STRIDE = 0x16,PCI_SRIOV_VF_DID = 0x1A,PCI_SRIOV_SUP_PGSIZE = 0x1C,PCI_SRIOV_SYS_PGSIZE = 0x20,PCI_SRIOV_BAR = 0x24,PCI_SRIOV_NUM_BARS = 0x6,PCI_SRIOV_VFM = 0x3C,PCI_SRIOV_VFM_UA = 0x0,PCI_SRIOV_VFM_MI = 0x1,PCI_SRIOV_VFM_MO = 0x2,PCI_SRIOV_VFM_AV = 0x3,PCI_EXT_CAP_SRIOV_SIZEOF = 0x40,PCI_LTR_MAX_SNOOP_LAT = 0x4,PCI_LTR_MAX_NOSNOOP_LAT = 0x6,PCI_LTR_VALUE_MASK = 0x3FF,PCI_LTR_SCALE_MASK = 0x1C00,PCI_LTR_SCALE_SHIFT = 0xA,PCI_EXT_CAP_LTR_SIZEOF = 0x8,PCI_ACS_CAP = 0x4,PCI_ACS_SV = 0x1,PCI_ACS_TB = 0x2,PCI_ACS_RR = 0x4,PCI_ACS_CR = 0x8,PCI_ACS_UF = 0x10,PCI_ACS_EC = 0x20,PCI_ACS_DT = 0x40,PCI_ACS_EGRESS_BITS = 0x5,PCI_ACS_CTRL = 0x6,PCI_ACS_EGRESS_CTL_V = 0x8,PCI_VSEC_HDR = 0x4,PCI_VSEC_HDR_LEN_SHIFT = 0x14,PCI_SATA_REGS = 0x4,PCI_SATA_REGS_MASK = 0xF,PCI_SATA_REGS_INLINE = 0xF,PCI_SATA_SIZEOF_SHORT = 0x8,PCI_SATA_SIZEOF_LONG = 0x10,PCI_REBAR_CTRL = 0x8,PCI_REBAR_CTRL_NBAR_MASK = 0xE0,PCI_REBAR_CTRL_NBAR_SHIFT = 0x5,PCI_DPA_CAP = 0x4,PCI_DPA_CAP_SUBSTATE_MASK = 0x1F,PCI_DPA_BASE_SIZEOF = 0x10,PCI_TPH_CAP = 0x4,PCI_TPH_CAP_LOC_MASK = 0x600,PCI_TPH_LOC_NONE = 0x0,PCI_TPH_LOC_CAP = 0x200,PCI_TPH_LOC_MSIX = 0x400,PCI_TPH_CAP_ST_MASK = 0x7FF0000,PCI_TPH_CAP_ST_SHIFT = 0x10,PCI_TPH_BASE_SIZEOF = 0xC,};
enum MACRO_PCM {PCM_ENABLE_INPUT = 0x1,PCM_ENABLE_OUTPUT = 0x2,};
enum MACRO_PERMISSION {PERMISSION_DENIED = 4,};
enum MACRO_PF {PF_X = 1,PF_W = 2,PF_R = 4,PF_MASKOS = 267386880,PF_MASKPROC = -268435456,};
enum MACRO_PF_ARM {PF_ARM_SB = 0x10000000,PF_ARM_PI = 0x20000000,PF_ARM_ABS = 0x40000000,};
enum MACRO_PF_IA {PF_IA_64_NORECOV = 0x80000000,};
enum MACRO_PF_MIPS {PF_MIPS_LOCAL = 0x10000000,};
enum MACRO_PF_PARISC {PF_PARISC_SBP = 0x8000000,PF_HP_PAGE_SIZE = 0x100000,PF_HP_FAR_SHARED = 0x200000,PF_HP_NEAR_SHARED = 0x400000,PF_HP_CODE = 0x1000000,PF_HP_MODIFY = 0x2000000,PF_HP_LAZYSWAP = 0x4000000,PF_HP_SBP = 0x8000000,};
enum MACRO_PF_UNSPEC {PF_UNSPEC = 0,PF_LOCAL = 1,PF_UNIX = 1,PF_FILE = 1,PF_INET = 2,PF_AX25 = 3,PF_IPX = 4,PF_APPLETALK = 5,PF_NETROM = 6,PF_BRIDGE = 7,PF_ATMPVC = 8,PF_X25 = 9,PF_INET6 = 10,PF_ROSE = 11,PF_DECnet = 12,PF_NETBEUI = 13,PF_SECURITY = 14,PF_KEY = 15,PF_NETLINK = 16,PF_ROUTE = 16,PF_PACKET = 17,PF_ASH = 18,PF_ECONET = 19,PF_ATMSVC = 20,PF_RDS = 21,PF_SNA = 22,PF_IRDA = 23,PF_PPPOX = 24,PF_WANPIPE = 25,PF_LLC = 26,PF_CAN = 29,PF_TIPC = 30,PF_BLUETOOTH = 31,PF_IUCV = 32,PF_RXRPC = 33,PF_ISDN = 34,PF_PHONET = 35,PF_IEEE802154 = 36,PF_CAIF = 37,PF_ALG = 38,PF_NFC = 39,PF_VSOCK = 40,PF_MAX = 41,};
enum MACRO_PIO {PIO_FONTRESET = 0x4B6D,};
enum MACRO_PIO_UNIMAPCLR {PIO_UNIMAPCLR = 0x4B68,};
enum MACRO_PIPE {PIPE_BUF = 4096,};
enum MACRO_PLOSS {PLOSS = 6,};
enum MACRO_PMAPPORT {PMAPPORT = 111,};
enum MACRO_PMAPPROC {PMAPPROC_NULL = 0,PMAPPROC_SET = 1,PMAPPROC_UNSET = 2,PMAPPROC_GETPORT = 3,PMAPPROC_DUMP = 4,PMAPPROC_CALLIT = 5,};
enum MACRO_PMAPPROG {PMAPPROG = 100000,};
enum MACRO_PMAPVERS {PMAPVERS = 2,};
enum MACRO_PMAPVERS_PROTO {PMAPVERS_PROTO = 2,PMAPVERS_ORIG = 1,};
enum MACRO_PN {PN_XNUM = 0xFFFF,};
enum MACRO_POLLERR {POLLERR = 0x8,POLLHUP = 0x10,POLLNVAL = 0x20,};
enum MACRO_POLLIN {POLLIN = 0x1,POLLPRI = 0x2,POLLOUT = 0x4,POLLRDNORM = 0x40,POLLRDBAND = 0x80,POLLWRNORM = 0x100,POLLWRBAND = 0x200,};
enum MACRO_POSIX {POSIX_FADV_NORMAL = 0,POSIX_FADV_RANDOM = 1,POSIX_FADV_SEQUENTIAL = 2,POSIX_FADV_WILLNEED = 3,POSIX_FADV_DONTNEED = 4,POSIX_FADV_NOREUSE = 5,};
enum MACRO_POSIX_MADV {POSIX_MADV_NORMAL = 0,POSIX_MADV_RANDOM = 1,POSIX_MADV_SEQUENTIAL = 2,POSIX_MADV_WILLNEED = 3,POSIX_MADV_DONTNEED = 4,};
enum MACRO_POSIX_SPAWN {POSIX_SPAWN_RESETIDS = 0x1,POSIX_SPAWN_SETPGROUP = 0x2,POSIX_SPAWN_SETSIGDEF = 0x4,POSIX_SPAWN_SETSIGMASK = 0x8,POSIX_SPAWN_SETSCHEDPARAM = 0x10,POSIX_SPAWN_SETSCHEDULER = 0x20,};
enum MACRO_PPC {PPC_PTRACE_PEEKTEXT_3264 = 0x95,PPC_PTRACE_PEEKDATA_3264 = 0x94,PPC_PTRACE_POKETEXT_3264 = 0x93,PPC_PTRACE_POKEDATA_3264 = 0x92,PPC_PTRACE_PEEKUSR_3264 = 0x91,PPC_PTRACE_POKEUSR_3264 = 0x90,};
enum MACRO_PPC64 {PPC64_OPT_TLS = 1,PPC64_OPT_MULTI_TOC = 2,};
enum MACRO_PPC_PTRACE {PPC_PTRACE_GETHWDBGINFO = 0x89,PPC_PTRACE_SETHWDEBUG = 0x88,PPC_PTRACE_DELHWDEBUG = 0x87,PPC_DEBUG_FEATURE_INSN_BP_RANGE = 0x1,PPC_DEBUG_FEATURE_INSN_BP_MASK = 0x2,PPC_DEBUG_FEATURE_DATA_BP_RANGE = 0x4,PPC_DEBUG_FEATURE_DATA_BP_MASK = 0x8,PPC_DEBUG_FEATURE_DATA_BP_DAWR = 0x10,PPC_BREAKPOINT_TRIGGER_EXECUTE = 0x1,PPC_BREAKPOINT_TRIGGER_READ = 0x2,PPC_BREAKPOINT_TRIGGER_WRITE = 0x4,PPC_BREAKPOINT_TRIGGER_RW = 0x6,PPC_BREAKPOINT_MODE_EXACT = 0x0,PPC_BREAKPOINT_MODE_RANGE_INCLUSIVE = 0x1,PPC_BREAKPOINT_MODE_RANGE_EXCLUSIVE = 0x2,PPC_BREAKPOINT_MODE_MASK = 0x3,PPC_BREAKPOINT_CONDITION_MODE = 0x3,PPC_BREAKPOINT_CONDITION_NONE = 0x0,PPC_BREAKPOINT_CONDITION_AND = 0x1,PPC_BREAKPOINT_CONDITION_EXACT = 0x1,PPC_BREAKPOINT_CONDITION_OR = 0x2,PPC_BREAKPOINT_CONDITION_AND_OR = 0x3,PPC_BREAKPOINT_CONDITION_BE_ALL = 0xFF0000,PPC_BREAKPOINT_CONDITION_BE_SHIFT = 0x10,};
enum MACRO_PPP {PPP_HDRLEN = 4,PPP_FCSLEN = 2,PPP_MRU = 1500,PPP_ALLSTATIONS = 255,PPP_UI = 3,PPP_FLAG = 126,PPP_ESCAPE = 125,PPP_TRANS = 32,PPP_IP = 33,PPP_AT = 41,PPP_IPX = 43,PPP_VJC_COMP = 45,PPP_VJC_UNCOMP = 47,PPP_MP = 61,PPP_IPV6 = 87,PPP_COMPFRAG = 251,PPP_COMP = 253,PPP_MPLS_UC = 641,PPP_MPLS_MC = 643,PPP_IPCP = 32801,PPP_ATCP = 32809,PPP_IPXCP = 32811,PPP_IPV6CP = 32855,PPP_CCPFRAG = 33019,PPP_CCP = 33021,PPP_MPLSCP = 33021,PPP_LCP = 49185,PPP_PAP = 49187,PPP_LQR = 49189,PPP_CHAP = 49699,PPP_CBCP = 49193,PPP_INITFCS = 65535,PPP_GOODFCS = 61624,};
enum MACRO_PR : __int64 {PR_SET_PDEATHSIG = 1,PR_GET_PDEATHSIG = 2,PR_GET_DUMPABLE = 3,PR_SET_DUMPABLE = 4,PR_GET_UNALIGN = 5,PR_SET_UNALIGN = 6,PR_UNALIGN_NOPRINT = 1,PR_UNALIGN_SIGBUS = 2,PR_GET_KEEPCAPS = 7,PR_SET_KEEPCAPS = 8,PR_GET_FPEMU = 9,PR_SET_FPEMU = 10,PR_FPEMU_NOPRINT = 1,PR_FPEMU_SIGFPE = 2,PR_GET_FPEXC = 11,PR_SET_FPEXC = 12,PR_FP_EXC_SW_ENABLE = 128,PR_FP_EXC_DIV = 65536,PR_FP_EXC_OVF = 131072,PR_FP_EXC_UND = 262144,PR_FP_EXC_RES = 524288,PR_FP_EXC_INV = 1048576,PR_FP_EXC_DISABLED = 0,PR_FP_EXC_NONRECOV = 1,PR_FP_EXC_ASYNC = 2,PR_FP_EXC_PRECISE = 3,PR_GET_TIMING = 13,PR_SET_TIMING = 14,PR_TIMING_STATISTICAL = 0,PR_TIMING_TIMESTAMP = 1,PR_SET_NAME = 15,PR_GET_NAME = 16,PR_GET_ENDIAN = 19,PR_SET_ENDIAN = 20,PR_ENDIAN_BIG = 0,PR_ENDIAN_LITTLE = 1,PR_ENDIAN_PPC_LITTLE = 2,PR_GET_SECCOMP = 21,PR_SET_SECCOMP = 22,PR_CAPBSET_READ = 23,PR_CAPBSET_DROP = 24,PR_GET_TSC = 25,PR_SET_TSC = 26,PR_TSC_ENABLE = 1,PR_TSC_SIGSEGV = 2,PR_GET_SECUREBITS = 27,PR_SET_SECUREBITS = 28,PR_SET_TIMERSLACK = 29,PR_GET_TIMERSLACK = 30,PR_TASK_PERF_EVENTS_DISABLE = 31,PR_TASK_PERF_EVENTS_ENABLE = 32,PR_MCE_KILL = 33,PR_MCE_KILL_CLEAR = 0,PR_MCE_KILL_SET = 1,PR_MCE_KILL_LATE = 0,PR_MCE_KILL_EARLY = 1,PR_MCE_KILL_DEFAULT = 2,PR_MCE_KILL_GET = 34,PR_SET_MM = 35,PR_SET_MM_START_CODE = 1,PR_SET_MM_END_CODE = 2,PR_SET_MM_START_DATA = 3,PR_SET_MM_END_DATA = 4,PR_SET_MM_START_STACK = 5,PR_SET_MM_START_BRK = 6,PR_SET_MM_BRK = 7,PR_SET_MM_ARG_START = 8,PR_SET_MM_ARG_END = 9,PR_SET_MM_ENV_START = 10,PR_SET_MM_ENV_END = 11,PR_SET_MM_AUXV = 12,PR_SET_MM_EXE_FILE = 13,PR_SET_MM_MAP = 14,PR_SET_MM_MAP_SIZE = 15,PR_SET_PTRACER = 1499557217,PR_SET_PTRACER_ANY = 4294967295,PR_SET_CHILD_SUBREAPER = 36,PR_GET_CHILD_SUBREAPER = 37,PR_SET_NO_NEW_PRIVS = 38,PR_GET_NO_NEW_PRIVS = 39,PR_GET_TID_ADDRESS = 40,PR_SET_THP_DISABLE = 41,PR_GET_THP_DISABLE = 42,PR_MPX_ENABLE_MANAGEMENT = 43,PR_MPX_DISABLE_MANAGEMENT = 44,};
enum MACRO_PRELIM {PRELIM = 1,COMPLETE = 2,};
enum MACRO_PRIO {PRIO_MIN = -20,PRIO_MAX = 20,};
enum MACRO_PROCESS {INIT_PROCESS = 5,LOGIN_PROCESS = 6,USER_PROCESS = 7,DEAD_PROCESS = 8,};
enum MACRO_PROG {CLGET_PROG = 14,CLSET_PROG = 15,};
enum MACRO_PROOT {PROOT = 3,HEXKEYBYTES = 48,KEYSIZE = 192,};
enum MACRO_PROT {PROT_SAO = 0x10,};
enum MACRO_PROT_READ {PROT_READ = 0x1,PROT_WRITE = 0x2,PROT_EXEC = 0x4,PROT_NONE = 0x0,PROT_GROWSDOWN = 0x1000000,PROT_GROWSUP = 0x2000000,};
enum MACRO_PT {PT_NULL = 0,PT_LOAD = 1,PT_DYNAMIC = 2,PT_INTERP = 3,PT_NOTE = 4,PT_SHLIB = 5,PT_PHDR = 6,PT_TLS = 7,PT_NUM = 8,PT_LOOS = 1610612736,PT_GNU_EH_FRAME = 1685382480,PT_GNU_STACK = 1685382481,PT_GNU_RELRO = 1685382482,PT_LOSUNW = 1879048186,PT_SUNWBSS = 1879048186,PT_SUNWSTACK = 1879048187,PT_HISUNW = 1879048191,PT_HIOS = 1879048191,PT_LOPROC = 1879048192,PT_HIPROC = 2147483647,};
enum MACRO_PTHREAD {PTHREAD_KEYS_MAX = 1024,};
enum MACRO_PTHREAD_CANCELED {PTHREAD_CANCELED = -1,PTHREAD_ONCE_INIT = 0,PTHREAD_BARRIER_SERIAL_THREAD = -1,};
enum MACRO_PTHREAD_STACK {PTHREAD_STACK_MIN = 131072,};
enum MACRO_PTRACE {PTRACE_GETVRREGS = 0x12,PTRACE_SETVRREGS = 0x13,PTRACE_GETEVRREGS = 0x14,PTRACE_SETEVRREGS = 0x15,PTRACE_GETVSRREGS = 0x1B,PTRACE_SETVSRREGS = 0x1C,PTRACE_GET_DEBUGREG = 0x19,PTRACE_SET_DEBUGREG = 0x1A,PTRACE_GETREGS = 0xC,PTRACE_SETREGS = 0xD,PTRACE_GETFPREGS = 0xE,PTRACE_SETFPREGS = 0xF,PTRACE_GETREGS64 = 0x16,PTRACE_SETREGS64 = 0x17,};
enum MACRO_PTRACE_SINGLEBLOCK {PTRACE_SINGLEBLOCK = 0x100,};
enum MACRO_PTRDIFF {PTRDIFF_MIN = -2147483648,PTRDIFF_MAX = 2147483647,};
enum MACRO_PT_HP {PT_HP_TLS = 0x60000000,PT_HP_CORE_NONE = 0x60000001,PT_HP_CORE_VERSION = 0x60000002,PT_HP_CORE_KERNEL = 0x60000003,PT_HP_CORE_COMM = 0x60000004,PT_HP_CORE_PROC = 0x60000005,PT_HP_CORE_LOADABLE = 0x60000006,PT_HP_CORE_STACK = 0x60000007,PT_HP_CORE_SHM = 0x60000008,PT_HP_CORE_MMF = 0x60000009,PT_HP_PARALLEL = 0x60000010,PT_HP_FASTBIND = 0x60000011,PT_HP_OPT_ANNOT = 0x60000012,PT_HP_HSL_ANNOT = 0x60000013,PT_HP_STACK = 0x60000014,PT_PARISC_ARCHEXT = 0x70000000,PT_PARISC_UNWIND = 0x70000001,};
enum MACRO_PT_IA {PT_IA_64_ARCHEXT = 1879048192,PT_IA_64_UNWIND = 1879048193,PT_IA_64_HP_OPT_ANOT = 1610612754,PT_IA_64_HP_HSL_ANOT = 1610612755,PT_IA_64_HP_STACK = 1610612756,};
enum MACRO_PT_MIPS {PT_MIPS_REGINFO = 0x70000000,PT_MIPS_RTPROC = 0x70000001,PT_MIPS_OPTIONS = 0x70000002,PT_MIPS_ABIFLAGS = 0x70000003,};
enum MACRO_PT_R0 {PT_R0 = 0,PT_R1 = 1,PT_R2 = 2,PT_R3 = 3,PT_R4 = 4,PT_R5 = 5,PT_R6 = 6,PT_R7 = 7,PT_R8 = 8,PT_R9 = 9,PT_R10 = 10,PT_R11 = 11,PT_R12 = 12,PT_R13 = 13,PT_R14 = 14,PT_R15 = 15,PT_R16 = 16,PT_R17 = 17,PT_R18 = 18,PT_R19 = 19,PT_R20 = 20,PT_R21 = 21,PT_R22 = 22,PT_R23 = 23,PT_R24 = 24,PT_R25 = 25,PT_R26 = 26,PT_R27 = 27,PT_R28 = 28,PT_R29 = 29,PT_R30 = 30,PT_R31 = 31,PT_NIP = 32,PT_MSR = 33,PT_ORIG_R3 = 34,PT_CTR = 35,PT_LNK = 36,PT_XER = 37,PT_CCR = 38,PT_MQ = 39,PT_TRAP = 40,PT_DAR = 41,PT_DSISR = 42,PT_RESULT = 43,PT_DSCR = 44,PT_REGS_COUNT = 44,PT_FPR0 = 48,PT_FPR31 = 110,PT_FPSCR = 113,};
enum MACRO_Q {Q_SYNC = 0x800001,Q_QUOTAON = 0x800002,Q_QUOTAOFF = 0x800003,Q_GETFMT = 0x800004,Q_GETINFO = 0x800005,Q_SETINFO = 0x800006,Q_GETQUOTA = 0x800007,Q_SETQUOTA = 0x800008,};
enum MACRO_QFIXEDSZ {QFIXEDSZ = 4,RRFIXEDSZ = 10,};
enum MACRO_QIF {QIF_BLIMITS = 1,QIF_SPACE = 2,QIF_ILIMITS = 4,QIF_INODES = 8,QIF_BTIME = 16,QIF_ITIME = 32,QIF_LIMITS = 5,QIF_USAGE = 10,QIF_TIMES = 48,QIF_ALL = 63,};
enum MACRO_R {R_68K_NONE = 0,R_68K_32 = 1,R_68K_16 = 2,R_68K_8 = 3,R_68K_PC32 = 4,R_68K_PC16 = 5,R_68K_PC8 = 6,R_68K_GOT32 = 7,R_68K_GOT16 = 8,R_68K_GOT8 = 9,R_68K_GOT32O = 10,R_68K_GOT16O = 11,R_68K_GOT8O = 12,R_68K_PLT32 = 13,R_68K_PLT16 = 14,R_68K_PLT8 = 15,R_68K_PLT32O = 16,R_68K_PLT16O = 17,R_68K_PLT8O = 18,R_68K_COPY = 19,R_68K_GLOB_DAT = 20,R_68K_JMP_SLOT = 21,R_68K_RELATIVE = 22,R_68K_TLS_GD32 = 25,R_68K_TLS_GD16 = 26,R_68K_TLS_GD8 = 27,R_68K_TLS_LDM32 = 28,R_68K_TLS_LDM16 = 29,R_68K_TLS_LDM8 = 30,R_68K_TLS_LDO32 = 31,R_68K_TLS_LDO16 = 32,R_68K_TLS_LDO8 = 33,R_68K_TLS_IE32 = 34,R_68K_TLS_IE16 = 35,R_68K_TLS_IE8 = 36,R_68K_TLS_LE32 = 37,R_68K_TLS_LE16 = 38,R_68K_TLS_LE8 = 39,R_68K_TLS_DTPMOD32 = 40,R_68K_TLS_DTPREL32 = 41,R_68K_TLS_TPREL32 = 42,R_68K_NUM = 43,R_386_NONE = 0,R_386_32 = 1,R_386_PC32 = 2,R_386_GOT32 = 3,R_386_PLT32 = 4,R_386_COPY = 5,R_386_GLOB_DAT = 6,R_386_JMP_SLOT = 7,R_386_RELATIVE = 8,R_386_GOTOFF = 9,R_386_GOTPC = 10,R_386_32PLT = 11,R_386_TLS_TPOFF = 14,R_386_TLS_IE = 15,R_386_TLS_GOTIE = 16,R_386_TLS_LE = 17,R_386_TLS_GD = 18,R_386_TLS_LDM = 19,R_386_16 = 20,R_386_PC16 = 21,R_386_8 = 22,R_386_PC8 = 23,R_386_TLS_GD_32 = 24,R_386_TLS_GD_PUSH = 25,R_386_TLS_GD_CALL = 26,R_386_TLS_GD_POP = 27,R_386_TLS_LDM_32 = 28,R_386_TLS_LDM_PUSH = 29,R_386_TLS_LDM_CALL = 30,R_386_TLS_LDM_POP = 31,R_386_TLS_LDO_32 = 32,R_386_TLS_IE_32 = 33,R_386_TLS_LE_32 = 34,R_386_TLS_DTPMOD32 = 35,R_386_TLS_DTPOFF32 = 36,R_386_TLS_TPOFF32 = 37,R_386_SIZE32 = 38,R_386_TLS_GOTDESC = 39,R_386_TLS_DESC_CALL = 40,R_386_TLS_DESC = 41,R_386_IRELATIVE = 42,R_386_NUM = 43,};
enum MACRO_RAND {RAND_MAX = 2147483647,};
enum MACRO_RAW {RAW_MAJOR = 162,RAW_SETBIND = 536914944,RAW_GETBIND = 536914945,};
enum MACRO_RB {RB_AUTOBOOT = 0x1234567,RB_HALT_SYSTEM = 0xCDEF0123,RB_ENABLE_CAD = 0x89ABCDEF,RB_DISABLE_CAD = 0x0,RB_POWER_OFF = 0x4321FEDC,RB_SW_SUSPEND = 0xD000FCE2,RB_KEXEC = 0x45584543,};
enum MACRO_REC {REC_ESC = -1,REC_EOR = 1,REC_EOF = 2,};
enum MACRO_REG {REG_EXTENDED = 1,REG_ICASE = 2,REG_NEWLINE = 4,REG_NOSUB = 8,REG_NOTBOL = 1,REG_NOTEOL = 2,REG_STARTEND = 4,};
enum MACRO_RES {RES_TIMEOUT = 5,};
enum MACRO_RES_F {RES_F_VC = 0x1,RES_F_CONN = 0x2,RES_F_EDNS0ERR = 0x4,RES_EXHAUSTIVE = 0x1,RES_INIT = 0x1,RES_DEBUG = 0x2,RES_AAONLY = 0x4,RES_USEVC = 0x8,RES_PRIMARY = 0x10,RES_IGNTC = 0x20,RES_RECURSE = 0x40,RES_DEFNAMES = 0x80,RES_STAYOPEN = 0x100,RES_DNSRCH = 0x200,RES_INSECURE1 = 0x400,RES_INSECURE2 = 0x800,RES_NOALIASES = 0x1000,RES_USE_INET6 = 0x2000,RES_ROTATE = 0x4000,RES_NOCHECKNAME = 0x8000,RES_KEEPTSIG = 0x10000,RES_BLAST = 0x20000,RES_USEBSTRING = 0x40000,RES_NOIP6DOTINT = 0x80000,RES_USE_EDNS0 = 0x100000,RES_SNGLKUP = 0x200000,RES_SNGLKUPREOP = 0x400000,RES_USE_DNSSEC = 0x800000,RES_NOTLDQUERY = 0x1000000,RES_DEFAULT = 0x802C0,RES_PRF_STATS = 0x1,RES_PRF_UPDATE = 0x2,RES_PRF_CLASS = 0x4,RES_PRF_CMD = 0x8,RES_PRF_QUES = 0x10,RES_PRF_ANS = 0x20,RES_PRF_AUTH = 0x40,RES_PRF_ADD = 0x80,RES_PRF_HEAD1 = 0x100,RES_PRF_HEAD2 = 0x200,RES_PRF_TTLID = 0x400,RES_PRF_HEADX = 0x800,RES_PRF_QUERY = 0x1000,RES_PRF_REPLY = 0x2000,RES_PRF_INIT = 0x4000,};
enum MACRO_RES_MAXNDOTS {RES_MAXNDOTS = 15,RES_MAXRETRANS = 30,RES_MAXRETRY = 5,RES_DFLRETRY = 2,RES_MAXTIME = 65535,};
enum MACRO_RHF {RHF_NONE = 0,RHF_QUICKSTART = 1,RHF_NOTPOT = 2,RHF_NO_LIBRARY_REPLACEMENT = 4,RHF_NO_MOVE = 8,RHF_SGI_ONLY = 16,RHF_GUARANTEE_INIT = 32,RHF_DELTA_C_PLUS_PLUS = 64,RHF_GUARANTEE_START_INIT = 128,RHF_PIXIE = 256,RHF_DEFAULT_DELAY_LOAD = 512,RHF_REQUICKSTART = 1024,RHF_REQUICKSTARTED = 2048,RHF_CORD = 4096,RHF_NO_UNRES_UNDEF = 8192,RHF_RLD_ORDER_SAFE = 16384,};
enum MACRO_RING {RING_WAIT = 30,};
enum MACRO_RIPCMD {RIPCMD_REQUEST = 1,RIPCMD_RESPONSE = 2,RIPCMD_TRACEON = 3,RIPCMD_TRACEOFF = 4,RIPCMD_MAX = 5,};
enum MACRO_RIPVERSION {RIPVERSION = 1,};
enum MACRO_RLIM : __int64 {RLIM_INFINITY = 4294967295,RLIM_SAVED_MAX = 4294967295,RLIM_SAVED_CUR = 4294967295,};
enum MACRO_RNORM {RNORM = 0x0,RMSGD = 0x1,RMSGN = 0x2,RPROTDAT = 0x4,RPROTDIS = 0x8,RPROTNORM = 0x10,};
enum MACRO_ROSE {ROSE_MTU = 251,ROSE_MAX_DIGIS = 6,ROSE_DEFER = 1,ROSE_T1 = 2,ROSE_T2 = 3,ROSE_T3 = 4,ROSE_IDLE = 5,ROSE_QBITINCL = 6,ROSE_HOLDBACK = 7,};
enum MACRO_ROSE_DTE {ROSE_DTE_ORIGINATED = 0x0,ROSE_NUMBER_BUSY = 0x1,ROSE_INVALID_FACILITY = 0x3,ROSE_NETWORK_CONGESTION = 0x5,ROSE_OUT_OF_ORDER = 0x9,ROSE_ACCESS_BARRED = 0xB,ROSE_NOT_OBTAINABLE = 0xD,ROSE_REMOTE_PROCEDURE = 0x11,ROSE_LOCAL_PROCEDURE = 0x13,ROSE_SHIP_ABSENT = 0x39,};
enum MACRO_RPC {RPC_MSG_VERSION = 2,RPC_SERVICE_PORT = 2048,};
enum MACRO_RPCSMALLMSGSIZE {RPCSMALLMSGSIZE = 400,};
enum MACRO_RPCTEST {RPCTEST_PROGRAM = 1,RPCTEST_VERSION = 1,RPCTEST_NULL_PROC = 2,RPCTEST_NULL_BATCH_PROC = 3,};
enum MACRO_RPC_ANYSOCK {RPC_ANYSOCK = -1,};
enum MACRO_RPM {RPM_PCO_ADD = 1,RPM_PCO_CHANGE = 2,RPM_PCO_SETGLOBAL = 3,};
enum MACRO_RRQ {RRQ = 0x1,WRQ = 0x2,};
enum MACRO_RS {RS_HIPRI = 0x1,};
enum MACRO_RT {RT_CLASS_UNSPEC = 0,RT_CLASS_DEFAULT = 253,RT_CLASS_MAIN = 254,RT_CLASS_LOCAL = 255,RT_CLASS_MAX = 255,};
enum MACRO_RTCF {RTCF_VALVE = 0x200000,RTCF_MASQ = 0x400000,RTCF_NAT = 0x800000,RTCF_DOREDIRECT = 0x1000000,RTCF_LOG = 0x2000000,RTCF_DIRECTSRC = 0x4000000,};
enum MACRO_RTF {RTF_UP = 0x1,RTF_GATEWAY = 0x2,RTF_HOST = 0x4,RTF_REINSTATE = 0x8,RTF_DYNAMIC = 0x10,RTF_MODIFIED = 0x20,RTF_MTU = 0x40,RTF_MSS = 0x40,RTF_WINDOW = 0x80,RTF_IRTT = 0x100,RTF_REJECT = 0x200,RTF_STATIC = 0x400,RTF_XRESOLVE = 0x800,RTF_NOFORWARD = 0x1000,RTF_THROW = 0x2000,RTF_NOPMTUDISC = 0x4000,RTF_DEFAULT = 0x10000,RTF_ALLONLINK = 0x20000,RTF_ADDRCONF = 0x40000,RTF_LINKRT = 0x100000,RTF_NONEXTHOP = 0x200000,RTF_CACHE = 0x1000000,RTF_FLOW = 0x2000000,RTF_POLICY = 0x4000000,};
enum MACRO_RTF_LOCAL {RTF_LOCAL = 0x80000000,RTF_INTERFACE = 0x40000000,RTF_MULTICAST = 0x20000000,RTF_BROADCAST = 0x10000000,RTF_NAT = 0x8000000,RTF_ADDRCLASSMASK = 0xF8000000,};
enum MACRO_RTLD {RTLD_LAZY = 0x1,RTLD_NOW = 0x2,RTLD_BINDING_MASK = 0x3,RTLD_NOLOAD = 0x4,RTLD_DEEPBIND = 0x8,RTLD_GLOBAL = 0x100,RTLD_LOCAL = 0x0,RTLD_NODELETE = 0x1000,};
enum MACRO_RTMSG {RTMSG_NEWDEVICE = 0x11,RTMSG_DELDEVICE = 0x12,RTMSG_NEWROUTE = 0x21,RTMSG_DELROUTE = 0x22,RTMSG_NEWRULE = 0x31,RTMSG_DELRULE = 0x32,RTMSG_CONTROL = 0x40,RTMSG_AR_FAILED = 0x51,};
enum MACRO_RTSIG {RTSIG_MAX = 32,};
enum MACRO_RUN {RUN_LVL = 1,};
enum MACRO_R_390 {R_390_NONE = 0,R_390_8 = 1,R_390_12 = 2,R_390_16 = 3,R_390_32 = 4,R_390_PC32 = 5,R_390_GOT12 = 6,R_390_GOT32 = 7,R_390_PLT32 = 8,R_390_COPY = 9,R_390_GLOB_DAT = 10,R_390_JMP_SLOT = 11,R_390_RELATIVE = 12,R_390_GOTOFF32 = 13,R_390_GOTPC = 14,R_390_GOT16 = 15,R_390_PC16 = 16,R_390_PC16DBL = 17,R_390_PLT16DBL = 18,R_390_PC32DBL = 19,R_390_PLT32DBL = 20,R_390_GOTPCDBL = 21,R_390_64 = 22,R_390_PC64 = 23,R_390_GOT64 = 24,R_390_PLT64 = 25,R_390_GOTENT = 26,R_390_GOTOFF16 = 27,R_390_GOTOFF64 = 28,R_390_GOTPLT12 = 29,R_390_GOTPLT16 = 30,R_390_GOTPLT32 = 31,R_390_GOTPLT64 = 32,R_390_GOTPLTENT = 33,R_390_PLTOFF16 = 34,R_390_PLTOFF32 = 35,R_390_PLTOFF64 = 36,R_390_TLS_LOAD = 37,R_390_TLS_GDCALL = 38,R_390_TLS_LDCALL = 39,R_390_TLS_GD32 = 40,R_390_TLS_GD64 = 41,R_390_TLS_GOTIE12 = 42,R_390_TLS_GOTIE32 = 43,R_390_TLS_GOTIE64 = 44,R_390_TLS_LDM32 = 45,R_390_TLS_LDM64 = 46,R_390_TLS_IE32 = 47,R_390_TLS_IE64 = 48,R_390_TLS_IEENT = 49,R_390_TLS_LE32 = 50,R_390_TLS_LE64 = 51,R_390_TLS_LDO32 = 52,R_390_TLS_LDO64 = 53,R_390_TLS_DTPMOD = 54,R_390_TLS_DTPOFF = 55,R_390_TLS_TPOFF = 56,R_390_20 = 57,R_390_GOT20 = 58,R_390_GOTPLT20 = 59,R_390_TLS_GOTIE20 = 60,R_390_IRELATIVE = 61,R_390_NUM = 62,R_CRIS_NONE = 0,R_CRIS_8 = 1,R_CRIS_16 = 2,R_CRIS_32 = 3,R_CRIS_8_PCREL = 4,R_CRIS_16_PCREL = 5,R_CRIS_32_PCREL = 6,R_CRIS_GNU_VTINHERIT = 7,R_CRIS_GNU_VTENTRY = 8,R_CRIS_COPY = 9,R_CRIS_GLOB_DAT = 10,R_CRIS_JUMP_SLOT = 11,R_CRIS_RELATIVE = 12,R_CRIS_16_GOT = 13,R_CRIS_32_GOT = 14,R_CRIS_16_GOTPLT = 15,R_CRIS_32_GOTPLT = 16,R_CRIS_32_GOTREL = 17,R_CRIS_32_PLT_GOTREL = 18,R_CRIS_32_PLT_PCREL = 19,R_CRIS_NUM = 20,R_X86_64_NONE = 0,R_X86_64_64 = 1,R_X86_64_PC32 = 2,R_X86_64_GOT32 = 3,R_X86_64_PLT32 = 4,R_X86_64_COPY = 5,R_X86_64_GLOB_DAT = 6,R_X86_64_JUMP_SLOT = 7,R_X86_64_RELATIVE = 8,R_X86_64_GOTPCREL = 9,R_X86_64_32 = 10,R_X86_64_32S = 11,R_X86_64_16 = 12,R_X86_64_PC16 = 13,R_X86_64_8 = 14,R_X86_64_PC8 = 15,R_X86_64_DTPMOD64 = 16,R_X86_64_DTPOFF64 = 17,R_X86_64_TPOFF64 = 18,R_X86_64_TLSGD = 19,R_X86_64_TLSLD = 20,R_X86_64_DTPOFF32 = 21,R_X86_64_GOTTPOFF = 22,R_X86_64_TPOFF32 = 23,R_X86_64_PC64 = 24,R_X86_64_GOTOFF64 = 25,R_X86_64_GOTPC32 = 26,R_X86_64_GOT64 = 27,R_X86_64_GOTPCREL64 = 28,R_X86_64_GOTPC64 = 29,R_X86_64_GOTPLT64 = 30,R_X86_64_PLTOFF64 = 31,R_X86_64_SIZE32 = 32,R_X86_64_SIZE64 = 33,R_X86_64_GOTPC32_TLSDESC = 34,R_X86_64_TLSDESC_CALL = 35,R_X86_64_TLSDESC = 36,R_X86_64_IRELATIVE = 37,R_X86_64_RELATIVE64 = 38,R_X86_64_NUM = 39,R_MN10300_NONE = 0,R_MN10300_32 = 1,R_MN10300_16 = 2,R_MN10300_8 = 3,R_MN10300_PCREL32 = 4,R_MN10300_PCREL16 = 5,R_MN10300_PCREL8 = 6,R_MN10300_GNU_VTINHERIT = 7,R_MN10300_GNU_VTENTRY = 8,R_MN10300_24 = 9,R_MN10300_GOTPC32 = 10,R_MN10300_GOTPC16 = 11,R_MN10300_GOTOFF32 = 12,R_MN10300_GOTOFF24 = 13,R_MN10300_GOTOFF16 = 14,R_MN10300_PLT32 = 15,R_MN10300_PLT16 = 16,R_MN10300_GOT32 = 17,R_MN10300_GOT24 = 18,R_MN10300_GOT16 = 19,R_MN10300_COPY = 20,R_MN10300_GLOB_DAT = 21,R_MN10300_JMP_SLOT = 22,R_MN10300_RELATIVE = 23,R_MN10300_TLS_GD = 24,R_MN10300_TLS_LD = 25,R_MN10300_TLS_LDO = 26,R_MN10300_TLS_GOTIE = 27,R_MN10300_TLS_IE = 28,R_MN10300_TLS_LE = 29,R_MN10300_TLS_DTPMOD = 30,R_MN10300_TLS_DTPOFF = 31,R_MN10300_TLS_TPOFF = 32,R_MN10300_SYM_DIFF = 33,R_MN10300_ALIGN = 34,R_MN10300_NUM = 35,R_M32R_NONE = 0,R_M32R_16 = 1,R_M32R_32 = 2,R_M32R_24 = 3,R_M32R_10_PCREL = 4,R_M32R_18_PCREL = 5,R_M32R_26_PCREL = 6,R_M32R_HI16_ULO = 7,R_M32R_HI16_SLO = 8,R_M32R_LO16 = 9,R_M32R_SDA16 = 10,R_M32R_GNU_VTINHERIT = 11,R_M32R_GNU_VTENTRY = 12,R_M32R_16_RELA = 33,R_M32R_32_RELA = 34,R_M32R_24_RELA = 35,R_M32R_10_PCREL_RELA = 36,R_M32R_18_PCREL_RELA = 37,R_M32R_26_PCREL_RELA = 38,R_M32R_HI16_ULO_RELA = 39,R_M32R_HI16_SLO_RELA = 40,R_M32R_LO16_RELA = 41,R_M32R_SDA16_RELA = 42,R_M32R_RELA_GNU_VTINHERIT = 43,R_M32R_RELA_GNU_VTENTRY = 44,R_M32R_REL32 = 45,R_M32R_GOT24 = 48,R_M32R_26_PLTREL = 49,R_M32R_COPY = 50,R_M32R_GLOB_DAT = 51,R_M32R_JMP_SLOT = 52,R_M32R_RELATIVE = 53,R_M32R_GOTOFF = 54,R_M32R_GOTPC24 = 55,R_M32R_GOT16_HI_ULO = 56,R_M32R_GOT16_HI_SLO = 57,R_M32R_GOT16_LO = 58,R_M32R_GOTPC_HI_ULO = 59,R_M32R_GOTPC_HI_SLO = 60,R_M32R_GOTPC_LO = 61,R_M32R_GOTOFF_HI_ULO = 62,R_M32R_GOTOFF_HI_SLO = 63,R_M32R_GOTOFF_LO = 64,R_M32R_NUM = 256,R_MICROBLAZE_NONE = 0,R_MICROBLAZE_32 = 1,R_MICROBLAZE_32_PCREL = 2,R_MICROBLAZE_64_PCREL = 3,R_MICROBLAZE_32_PCREL_LO = 4,R_MICROBLAZE_64 = 5,R_MICROBLAZE_32_LO = 6,R_MICROBLAZE_SRO32 = 7,R_MICROBLAZE_SRW32 = 8,R_MICROBLAZE_64_NONE = 9,R_MICROBLAZE_32_SYM_OP_SYM = 10,R_MICROBLAZE_GNU_VTINHERIT = 11,R_MICROBLAZE_GNU_VTENTRY = 12,R_MICROBLAZE_GOTPC_64 = 13,R_MICROBLAZE_GOT_64 = 14,R_MICROBLAZE_PLT_64 = 15,R_MICROBLAZE_REL = 16,R_MICROBLAZE_JUMP_SLOT = 17,R_MICROBLAZE_GLOB_DAT = 18,R_MICROBLAZE_GOTOFF_64 = 19,R_MICROBLAZE_GOTOFF_32 = 20,R_MICROBLAZE_COPY = 21,R_MICROBLAZE_TLS = 22,R_MICROBLAZE_TLSGD = 23,R_MICROBLAZE_TLSLD = 24,R_MICROBLAZE_TLSDTPMOD32 = 25,R_MICROBLAZE_TLSDTPREL32 = 26,R_MICROBLAZE_TLSDTPREL64 = 27,R_MICROBLAZE_TLSGOTTPREL32 = 28,R_MICROBLAZE_TLSTPREL32 = 29,};
enum MACRO_R_AARCH64 {R_AARCH64_NONE = 0,R_AARCH64_P32_ABS32 = 1,R_AARCH64_P32_COPY = 180,R_AARCH64_P32_GLOB_DAT = 181,R_AARCH64_P32_JUMP_SLOT = 182,R_AARCH64_P32_RELATIVE = 183,R_AARCH64_P32_TLS_DTPMOD = 184,R_AARCH64_P32_TLS_DTPREL = 185,R_AARCH64_P32_TLS_TPREL = 186,R_AARCH64_P32_TLSDESC = 187,R_AARCH64_P32_IRELATIVE = 188,R_AARCH64_ABS64 = 257,R_AARCH64_ABS32 = 258,R_AARCH64_ABS16 = 259,R_AARCH64_PREL64 = 260,R_AARCH64_PREL32 = 261,R_AARCH64_PREL16 = 262,R_AARCH64_MOVW_UABS_G0 = 263,R_AARCH64_MOVW_UABS_G0_NC = 264,R_AARCH64_MOVW_UABS_G1 = 265,R_AARCH64_MOVW_UABS_G1_NC = 266,R_AARCH64_MOVW_UABS_G2 = 267,R_AARCH64_MOVW_UABS_G2_NC = 268,R_AARCH64_MOVW_UABS_G3 = 269,R_AARCH64_MOVW_SABS_G0 = 270,R_AARCH64_MOVW_SABS_G1 = 271,R_AARCH64_MOVW_SABS_G2 = 272,R_AARCH64_LD_PREL_LO19 = 273,R_AARCH64_ADR_PREL_LO21 = 274,R_AARCH64_ADR_PREL_PG_HI21 = 275,R_AARCH64_ADR_PREL_PG_HI21_NC = 276,R_AARCH64_ADD_ABS_LO12_NC = 277,R_AARCH64_LDST8_ABS_LO12_NC = 278,R_AARCH64_TSTBR14 = 279,R_AARCH64_CONDBR19 = 280,R_AARCH64_JUMP26 = 282,R_AARCH64_CALL26 = 283,R_AARCH64_LDST16_ABS_LO12_NC = 284,R_AARCH64_LDST32_ABS_LO12_NC = 285,R_AARCH64_LDST64_ABS_LO12_NC = 286,R_AARCH64_MOVW_PREL_G0 = 287,R_AARCH64_MOVW_PREL_G0_NC = 288,R_AARCH64_MOVW_PREL_G1 = 289,R_AARCH64_MOVW_PREL_G1_NC = 290,R_AARCH64_MOVW_PREL_G2 = 291,R_AARCH64_MOVW_PREL_G2_NC = 292,R_AARCH64_MOVW_PREL_G3 = 293,R_AARCH64_LDST128_ABS_LO12_NC = 299,R_AARCH64_MOVW_GOTOFF_G0 = 300,R_AARCH64_MOVW_GOTOFF_G0_NC = 301,R_AARCH64_MOVW_GOTOFF_G1 = 302,R_AARCH64_MOVW_GOTOFF_G1_NC = 303,R_AARCH64_MOVW_GOTOFF_G2 = 304,R_AARCH64_MOVW_GOTOFF_G2_NC = 305,R_AARCH64_MOVW_GOTOFF_G3 = 306,R_AARCH64_GOTREL64 = 307,R_AARCH64_GOTREL32 = 308,R_AARCH64_GOT_LD_PREL19 = 309,R_AARCH64_LD64_GOTOFF_LO15 = 310,R_AARCH64_ADR_GOT_PAGE = 311,R_AARCH64_LD64_GOT_LO12_NC = 312,R_AARCH64_LD64_GOTPAGE_LO15 = 313,R_AARCH64_TLSGD_ADR_PREL21 = 512,R_AARCH64_TLSGD_ADR_PAGE21 = 513,R_AARCH64_TLSGD_ADD_LO12_NC = 514,R_AARCH64_TLSGD_MOVW_G1 = 515,R_AARCH64_TLSGD_MOVW_G0_NC = 516,R_AARCH64_TLSLD_ADR_PREL21 = 517,R_AARCH64_TLSLD_ADR_PAGE21 = 518,R_AARCH64_TLSLD_ADD_LO12_NC = 519,R_AARCH64_TLSLD_MOVW_G1 = 520,R_AARCH64_TLSLD_MOVW_G0_NC = 521,R_AARCH64_TLSLD_LD_PREL19 = 522,R_AARCH64_TLSLD_MOVW_DTPREL_G2 = 523,R_AARCH64_TLSLD_MOVW_DTPREL_G1 = 524,R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC = 525,R_AARCH64_TLSLD_MOVW_DTPREL_G0 = 526,R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC = 527,R_AARCH64_TLSLD_ADD_DTPREL_HI12 = 528,R_AARCH64_TLSLD_ADD_DTPREL_LO12 = 529,R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC = 530,R_AARCH64_TLSLD_LDST8_DTPREL_LO12 = 531,R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC = 532,R_AARCH64_TLSLD_LDST16_DTPREL_LO12 = 533,R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC = 534,R_AARCH64_TLSLD_LDST32_DTPREL_LO12 = 535,R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC = 536,R_AARCH64_TLSLD_LDST64_DTPREL_LO12 = 537,R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC = 538,R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 = 539,R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC = 540,R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 = 541,R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC = 542,R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 = 543,R_AARCH64_TLSLE_MOVW_TPREL_G2 = 544,R_AARCH64_TLSLE_MOVW_TPREL_G1 = 545,R_AARCH64_TLSLE_MOVW_TPREL_G1_NC = 546,R_AARCH64_TLSLE_MOVW_TPREL_G0 = 547,R_AARCH64_TLSLE_MOVW_TPREL_G0_NC = 548,R_AARCH64_TLSLE_ADD_TPREL_HI12 = 549,R_AARCH64_TLSLE_ADD_TPREL_LO12 = 550,R_AARCH64_TLSLE_ADD_TPREL_LO12_NC = 551,R_AARCH64_TLSLE_LDST8_TPREL_LO12 = 552,R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC = 553,R_AARCH64_TLSLE_LDST16_TPREL_LO12 = 554,R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC = 555,R_AARCH64_TLSLE_LDST32_TPREL_LO12 = 556,R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC = 557,R_AARCH64_TLSLE_LDST64_TPREL_LO12 = 558,R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC = 559,R_AARCH64_TLSDESC_LD_PREL19 = 560,R_AARCH64_TLSDESC_ADR_PREL21 = 561,R_AARCH64_TLSDESC_ADR_PAGE21 = 562,R_AARCH64_TLSDESC_LD64_LO12 = 563,R_AARCH64_TLSDESC_ADD_LO12 = 564,R_AARCH64_TLSDESC_OFF_G1 = 565,R_AARCH64_TLSDESC_OFF_G0_NC = 566,R_AARCH64_TLSDESC_LDR = 567,R_AARCH64_TLSDESC_ADD = 568,R_AARCH64_TLSDESC_CALL = 569,R_AARCH64_TLSLE_LDST128_TPREL_LO12 = 570,R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC = 571,R_AARCH64_TLSLD_LDST128_DTPREL_LO12 = 572,R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC = 573,R_AARCH64_COPY = 1024,R_AARCH64_GLOB_DAT = 1025,R_AARCH64_JUMP_SLOT = 1026,R_AARCH64_RELATIVE = 1027,R_AARCH64_TLS_DTPMOD = 1028,R_AARCH64_TLS_DTPREL = 1029,R_AARCH64_TLS_TPREL = 1030,R_AARCH64_TLSDESC = 1031,R_AARCH64_IRELATIVE = 1032,R_ARM_NONE = 0,R_ARM_PC24 = 1,R_ARM_ABS32 = 2,R_ARM_REL32 = 3,R_ARM_PC13 = 4,R_ARM_ABS16 = 5,R_ARM_ABS12 = 6,R_ARM_THM_ABS5 = 7,R_ARM_ABS8 = 8,R_ARM_SBREL32 = 9,R_ARM_THM_PC22 = 10,R_ARM_THM_PC8 = 11,R_ARM_AMP_VCALL9 = 12,R_ARM_SWI24 = 13,R_ARM_TLS_DESC = 13,R_ARM_THM_SWI8 = 14,R_ARM_XPC25 = 15,R_ARM_THM_XPC22 = 16,R_ARM_TLS_DTPMOD32 = 17,R_ARM_TLS_DTPOFF32 = 18,R_ARM_TLS_TPOFF32 = 19,R_ARM_COPY = 20,R_ARM_GLOB_DAT = 21,R_ARM_JUMP_SLOT = 22,R_ARM_RELATIVE = 23,R_ARM_GOTOFF = 24,R_ARM_GOTPC = 25,R_ARM_GOT32 = 26,R_ARM_PLT32 = 27,R_ARM_CALL = 28,R_ARM_JUMP24 = 29,R_ARM_THM_JUMP24 = 30,R_ARM_BASE_ABS = 31,R_ARM_ALU_PCREL_7_0 = 32,R_ARM_ALU_PCREL_15_8 = 33,R_ARM_ALU_PCREL_23_15 = 34,R_ARM_LDR_SBREL_11_0 = 35,R_ARM_ALU_SBREL_19_12 = 36,R_ARM_ALU_SBREL_27_20 = 37,R_ARM_TARGET1 = 38,R_ARM_SBREL31 = 39,R_ARM_V4BX = 40,R_ARM_TARGET2 = 41,R_ARM_PREL31 = 42,R_ARM_MOVW_ABS_NC = 43,R_ARM_MOVT_ABS = 44,R_ARM_MOVW_PREL_NC = 45,R_ARM_MOVT_PREL = 46,R_ARM_THM_MOVW_ABS_NC = 47,R_ARM_THM_MOVT_ABS = 48,R_ARM_THM_MOVW_PREL_NC = 49,R_ARM_THM_MOVT_PREL = 50,R_ARM_THM_JUMP19 = 51,R_ARM_THM_JUMP6 = 52,R_ARM_THM_ALU_PREL_11_0 = 53,R_ARM_THM_PC12 = 54,R_ARM_ABS32_NOI = 55,R_ARM_REL32_NOI = 56,R_ARM_ALU_PC_G0_NC = 57,R_ARM_ALU_PC_G0 = 58,R_ARM_ALU_PC_G1_NC = 59,R_ARM_ALU_PC_G1 = 60,R_ARM_ALU_PC_G2 = 61,R_ARM_LDR_PC_G1 = 62,R_ARM_LDR_PC_G2 = 63,R_ARM_LDRS_PC_G0 = 64,R_ARM_LDRS_PC_G1 = 65,R_ARM_LDRS_PC_G2 = 66,R_ARM_LDC_PC_G0 = 67,R_ARM_LDC_PC_G1 = 68,R_ARM_LDC_PC_G2 = 69,R_ARM_ALU_SB_G0_NC = 70,R_ARM_ALU_SB_G0 = 71,R_ARM_ALU_SB_G1_NC = 72,R_ARM_ALU_SB_G1 = 73,R_ARM_ALU_SB_G2 = 74,R_ARM_LDR_SB_G0 = 75,R_ARM_LDR_SB_G1 = 76,R_ARM_LDR_SB_G2 = 77,R_ARM_LDRS_SB_G0 = 78,R_ARM_LDRS_SB_G1 = 79,R_ARM_LDRS_SB_G2 = 80,R_ARM_LDC_SB_G0 = 81,R_ARM_LDC_SB_G1 = 82,R_ARM_LDC_SB_G2 = 83,R_ARM_MOVW_BREL_NC = 84,R_ARM_MOVT_BREL = 85,R_ARM_MOVW_BREL = 86,R_ARM_THM_MOVW_BREL_NC = 87,R_ARM_THM_MOVT_BREL = 88,R_ARM_THM_MOVW_BREL = 89,R_ARM_TLS_GOTDESC = 90,R_ARM_TLS_CALL = 91,R_ARM_TLS_DESCSEQ = 92,R_ARM_THM_TLS_CALL = 93,R_ARM_PLT32_ABS = 94,R_ARM_GOT_ABS = 95,R_ARM_GOT_PREL = 96,R_ARM_GOT_BREL12 = 97,R_ARM_GOTOFF12 = 98,R_ARM_GOTRELAX = 99,R_ARM_GNU_VTENTRY = 100,R_ARM_GNU_VTINHERIT = 101,R_ARM_THM_PC11 = 102,R_ARM_THM_PC9 = 103,R_ARM_TLS_GD32 = 104,R_ARM_TLS_LDM32 = 105,R_ARM_TLS_LDO32 = 106,R_ARM_TLS_IE32 = 107,R_ARM_TLS_LE32 = 108,R_ARM_TLS_LDO12 = 109,R_ARM_TLS_LE12 = 110,R_ARM_TLS_IE12GP = 111,R_ARM_ME_TOO = 128,R_ARM_THM_TLS_DESCSEQ = 129,R_ARM_THM_TLS_DESCSEQ16 = 129,R_ARM_THM_TLS_DESCSEQ32 = 130,R_ARM_THM_GOT_BREL12 = 131,R_ARM_IRELATIVE = 160,R_ARM_RXPC25 = 249,R_ARM_RSBREL32 = 250,R_ARM_THM_RPC22 = 251,R_ARM_RREL32 = 252,R_ARM_RABS22 = 253,R_ARM_RPC24 = 254,R_ARM_RBASE = 255,R_ARM_NUM = 256,};
enum MACRO_R_ALPHA {R_ALPHA_NONE = 0,R_ALPHA_REFLONG = 1,R_ALPHA_REFQUAD = 2,R_ALPHA_GPREL32 = 3,R_ALPHA_LITERAL = 4,R_ALPHA_LITUSE = 5,R_ALPHA_GPDISP = 6,R_ALPHA_BRADDR = 7,R_ALPHA_HINT = 8,R_ALPHA_SREL16 = 9,R_ALPHA_SREL32 = 10,R_ALPHA_SREL64 = 11,R_ALPHA_GPRELHIGH = 17,R_ALPHA_GPRELLOW = 18,R_ALPHA_GPREL16 = 19,R_ALPHA_COPY = 24,R_ALPHA_GLOB_DAT = 25,R_ALPHA_JMP_SLOT = 26,R_ALPHA_RELATIVE = 27,R_ALPHA_TLS_GD_HI = 28,R_ALPHA_TLSGD = 29,R_ALPHA_TLS_LDM = 30,R_ALPHA_DTPMOD64 = 31,R_ALPHA_GOTDTPREL = 32,R_ALPHA_DTPREL64 = 33,R_ALPHA_DTPRELHI = 34,R_ALPHA_DTPRELLO = 35,R_ALPHA_DTPREL16 = 36,R_ALPHA_GOTTPREL = 37,R_ALPHA_TPREL64 = 38,R_ALPHA_TPRELHI = 39,R_ALPHA_TPRELLO = 40,R_ALPHA_TPREL16 = 41,R_ALPHA_NUM = 46,};
enum MACRO_R_IA64 {R_IA64_NONE = 0x0,R_IA64_IMM14 = 0x21,R_IA64_IMM22 = 0x22,R_IA64_IMM64 = 0x23,R_IA64_DIR32MSB = 0x24,R_IA64_DIR32LSB = 0x25,R_IA64_DIR64MSB = 0x26,R_IA64_DIR64LSB = 0x27,R_IA64_GPREL22 = 0x2A,R_IA64_GPREL64I = 0x2B,R_IA64_GPREL32MSB = 0x2C,R_IA64_GPREL32LSB = 0x2D,R_IA64_GPREL64MSB = 0x2E,R_IA64_GPREL64LSB = 0x2F,R_IA64_LTOFF22 = 0x32,R_IA64_LTOFF64I = 0x33,R_IA64_PLTOFF22 = 0x3A,R_IA64_PLTOFF64I = 0x3B,R_IA64_PLTOFF64MSB = 0x3E,R_IA64_PLTOFF64LSB = 0x3F,R_IA64_FPTR64I = 0x43,R_IA64_FPTR32MSB = 0x44,R_IA64_FPTR32LSB = 0x45,R_IA64_FPTR64MSB = 0x46,R_IA64_FPTR64LSB = 0x47,R_IA64_PCREL60B = 0x48,R_IA64_PCREL21B = 0x49,R_IA64_PCREL21M = 0x4A,R_IA64_PCREL21F = 0x4B,R_IA64_PCREL32MSB = 0x4C,R_IA64_PCREL32LSB = 0x4D,R_IA64_PCREL64MSB = 0x4E,R_IA64_PCREL64LSB = 0x4F,R_IA64_LTOFF_FPTR22 = 0x52,R_IA64_LTOFF_FPTR64I = 0x53,R_IA64_LTOFF_FPTR32MSB = 0x54,R_IA64_LTOFF_FPTR32LSB = 0x55,R_IA64_LTOFF_FPTR64MSB = 0x56,R_IA64_LTOFF_FPTR64LSB = 0x57,R_IA64_SEGREL32MSB = 0x5C,R_IA64_SEGREL32LSB = 0x5D,R_IA64_SEGREL64MSB = 0x5E,R_IA64_SEGREL64LSB = 0x5F,R_IA64_SECREL32MSB = 0x64,R_IA64_SECREL32LSB = 0x65,R_IA64_SECREL64MSB = 0x66,R_IA64_SECREL64LSB = 0x67,R_IA64_REL32MSB = 0x6C,R_IA64_REL32LSB = 0x6D,R_IA64_REL64MSB = 0x6E,R_IA64_REL64LSB = 0x6F,R_IA64_LTV32MSB = 0x74,R_IA64_LTV32LSB = 0x75,R_IA64_LTV64MSB = 0x76,R_IA64_LTV64LSB = 0x77,R_IA64_PCREL21BI = 0x79,R_IA64_PCREL22 = 0x7A,R_IA64_PCREL64I = 0x7B,R_IA64_IPLTMSB = 0x80,R_IA64_IPLTLSB = 0x81,R_IA64_COPY = 0x84,R_IA64_SUB = 0x85,R_IA64_LTOFF22X = 0x86,R_IA64_LDXMOV = 0x87,R_IA64_TPREL14 = 0x91,R_IA64_TPREL22 = 0x92,R_IA64_TPREL64I = 0x93,R_IA64_TPREL64MSB = 0x96,R_IA64_TPREL64LSB = 0x97,R_IA64_LTOFF_TPREL22 = 0x9A,R_IA64_DTPMOD64MSB = 0xA6,R_IA64_DTPMOD64LSB = 0xA7,R_IA64_LTOFF_DTPMOD22 = 0xAA,R_IA64_DTPREL14 = 0xB1,R_IA64_DTPREL22 = 0xB2,R_IA64_DTPREL64I = 0xB3,R_IA64_DTPREL32MSB = 0xB4,R_IA64_DTPREL32LSB = 0xB5,R_IA64_DTPREL64MSB = 0xB6,R_IA64_DTPREL64LSB = 0xB7,R_IA64_LTOFF_DTPREL22 = 0xBA,};
enum MACRO_R_MIPS {R_MIPS_NONE = 0,R_MIPS_16 = 1,R_MIPS_32 = 2,R_MIPS_REL32 = 3,R_MIPS_26 = 4,R_MIPS_HI16 = 5,R_MIPS_LO16 = 6,R_MIPS_GPREL16 = 7,R_MIPS_LITERAL = 8,R_MIPS_GOT16 = 9,R_MIPS_PC16 = 10,R_MIPS_CALL16 = 11,R_MIPS_GPREL32 = 12,R_MIPS_SHIFT5 = 16,R_MIPS_SHIFT6 = 17,R_MIPS_64 = 18,R_MIPS_GOT_DISP = 19,R_MIPS_GOT_PAGE = 20,R_MIPS_GOT_OFST = 21,R_MIPS_GOT_HI16 = 22,R_MIPS_GOT_LO16 = 23,R_MIPS_SUB = 24,R_MIPS_INSERT_A = 25,R_MIPS_INSERT_B = 26,R_MIPS_DELETE = 27,R_MIPS_HIGHER = 28,R_MIPS_HIGHEST = 29,R_MIPS_CALL_HI16 = 30,R_MIPS_CALL_LO16 = 31,R_MIPS_SCN_DISP = 32,R_MIPS_REL16 = 33,R_MIPS_ADD_IMMEDIATE = 34,R_MIPS_PJUMP = 35,R_MIPS_RELGOT = 36,R_MIPS_JALR = 37,R_MIPS_TLS_DTPMOD32 = 38,R_MIPS_TLS_DTPREL32 = 39,R_MIPS_TLS_DTPMOD64 = 40,R_MIPS_TLS_DTPREL64 = 41,R_MIPS_TLS_GD = 42,R_MIPS_TLS_LDM = 43,R_MIPS_TLS_DTPREL_HI16 = 44,R_MIPS_TLS_DTPREL_LO16 = 45,R_MIPS_TLS_GOTTPREL = 46,R_MIPS_TLS_TPREL32 = 47,R_MIPS_TLS_TPREL64 = 48,R_MIPS_TLS_TPREL_HI16 = 49,R_MIPS_TLS_TPREL_LO16 = 50,R_MIPS_GLOB_DAT = 51,R_MIPS_COPY = 126,R_MIPS_JUMP_SLOT = 127,R_MIPS_NUM = 128,};
enum MACRO_R_NIOS2 {R_NIOS2_NONE = 0,R_NIOS2_S16 = 1,R_NIOS2_U16 = 2,R_NIOS2_PCREL16 = 3,R_NIOS2_CALL26 = 4,R_NIOS2_IMM5 = 5,R_NIOS2_CACHE_OPX = 6,R_NIOS2_IMM6 = 7,R_NIOS2_IMM8 = 8,R_NIOS2_HI16 = 9,R_NIOS2_LO16 = 10,R_NIOS2_HIADJ16 = 11,R_NIOS2_BFD_RELOC_32 = 12,R_NIOS2_BFD_RELOC_16 = 13,R_NIOS2_BFD_RELOC_8 = 14,R_NIOS2_GPREL = 15,R_NIOS2_GNU_VTINHERIT = 16,R_NIOS2_GNU_VTENTRY = 17,R_NIOS2_UJMP = 18,R_NIOS2_CJMP = 19,R_NIOS2_CALLR = 20,R_NIOS2_ALIGN = 21,R_NIOS2_GOT16 = 22,R_NIOS2_CALL16 = 23,R_NIOS2_GOTOFF_LO = 24,R_NIOS2_GOTOFF_HA = 25,R_NIOS2_PCREL_LO = 26,R_NIOS2_PCREL_HA = 27,R_NIOS2_TLS_GD16 = 28,R_NIOS2_TLS_LDM16 = 29,R_NIOS2_TLS_LDO16 = 30,R_NIOS2_TLS_IE16 = 31,R_NIOS2_TLS_LE16 = 32,R_NIOS2_TLS_DTPMOD = 33,R_NIOS2_TLS_DTPREL = 34,R_NIOS2_TLS_TPREL = 35,R_NIOS2_COPY = 36,R_NIOS2_GLOB_DAT = 37,R_NIOS2_JUMP_SLOT = 38,R_NIOS2_RELATIVE = 39,R_NIOS2_GOTOFF = 40,R_NIOS2_CALL26_NOAT = 41,R_NIOS2_GOT_LO = 42,R_NIOS2_GOT_HA = 43,R_NIOS2_CALL_LO = 44,R_NIOS2_CALL_HA = 45,R_TILEPRO_NONE = 0,R_TILEPRO_32 = 1,R_TILEPRO_16 = 2,R_TILEPRO_8 = 3,R_TILEPRO_32_PCREL = 4,R_TILEPRO_16_PCREL = 5,R_TILEPRO_8_PCREL = 6,R_TILEPRO_LO16 = 7,R_TILEPRO_HI16 = 8,R_TILEPRO_HA16 = 9,R_TILEPRO_COPY = 10,R_TILEPRO_GLOB_DAT = 11,R_TILEPRO_JMP_SLOT = 12,R_TILEPRO_RELATIVE = 13,R_TILEPRO_BROFF_X1 = 14,R_TILEPRO_JOFFLONG_X1 = 15,R_TILEPRO_JOFFLONG_X1_PLT = 16,R_TILEPRO_IMM8_X0 = 17,R_TILEPRO_IMM8_Y0 = 18,R_TILEPRO_IMM8_X1 = 19,R_TILEPRO_IMM8_Y1 = 20,R_TILEPRO_MT_IMM15_X1 = 21,R_TILEPRO_MF_IMM15_X1 = 22,R_TILEPRO_IMM16_X0 = 23,R_TILEPRO_IMM16_X1 = 24,R_TILEPRO_IMM16_X0_LO = 25,R_TILEPRO_IMM16_X1_LO = 26,R_TILEPRO_IMM16_X0_HI = 27,R_TILEPRO_IMM16_X1_HI = 28,R_TILEPRO_IMM16_X0_HA = 29,R_TILEPRO_IMM16_X1_HA = 30,R_TILEPRO_IMM16_X0_PCREL = 31,R_TILEPRO_IMM16_X1_PCREL = 32,R_TILEPRO_IMM16_X0_LO_PCREL = 33,R_TILEPRO_IMM16_X1_LO_PCREL = 34,R_TILEPRO_IMM16_X0_HI_PCREL = 35,R_TILEPRO_IMM16_X1_HI_PCREL = 36,R_TILEPRO_IMM16_X0_HA_PCREL = 37,R_TILEPRO_IMM16_X1_HA_PCREL = 38,R_TILEPRO_IMM16_X0_GOT = 39,R_TILEPRO_IMM16_X1_GOT = 40,R_TILEPRO_IMM16_X0_GOT_LO = 41,R_TILEPRO_IMM16_X1_GOT_LO = 42,R_TILEPRO_IMM16_X0_GOT_HI = 43,R_TILEPRO_IMM16_X1_GOT_HI = 44,R_TILEPRO_IMM16_X0_GOT_HA = 45,R_TILEPRO_IMM16_X1_GOT_HA = 46,R_TILEPRO_MMSTART_X0 = 47,R_TILEPRO_MMEND_X0 = 48,R_TILEPRO_MMSTART_X1 = 49,R_TILEPRO_MMEND_X1 = 50,R_TILEPRO_SHAMT_X0 = 51,R_TILEPRO_SHAMT_X1 = 52,R_TILEPRO_SHAMT_Y0 = 53,R_TILEPRO_SHAMT_Y1 = 54,R_TILEPRO_DEST_IMM8_X1 = 55,R_TILEPRO_TLS_GD_CALL = 60,R_TILEPRO_IMM8_X0_TLS_GD_ADD = 61,R_TILEPRO_IMM8_X1_TLS_GD_ADD = 62,R_TILEPRO_IMM8_Y0_TLS_GD_ADD = 63,R_TILEPRO_IMM8_Y1_TLS_GD_ADD = 64,R_TILEPRO_TLS_IE_LOAD = 65,R_TILEPRO_IMM16_X0_TLS_GD = 66,R_TILEPRO_IMM16_X1_TLS_GD = 67,R_TILEPRO_IMM16_X0_TLS_GD_LO = 68,R_TILEPRO_IMM16_X1_TLS_GD_LO = 69,R_TILEPRO_IMM16_X0_TLS_GD_HI = 70,R_TILEPRO_IMM16_X1_TLS_GD_HI = 71,R_TILEPRO_IMM16_X0_TLS_GD_HA = 72,R_TILEPRO_IMM16_X1_TLS_GD_HA = 73,R_TILEPRO_IMM16_X0_TLS_IE = 74,R_TILEPRO_IMM16_X1_TLS_IE = 75,R_TILEPRO_IMM16_X0_TLS_IE_LO = 76,R_TILEPRO_IMM16_X1_TLS_IE_LO = 77,R_TILEPRO_IMM16_X0_TLS_IE_HI = 78,R_TILEPRO_IMM16_X1_TLS_IE_HI = 79,R_TILEPRO_IMM16_X0_TLS_IE_HA = 80,R_TILEPRO_IMM16_X1_TLS_IE_HA = 81,R_TILEPRO_TLS_DTPMOD32 = 82,R_TILEPRO_TLS_DTPOFF32 = 83,R_TILEPRO_TLS_TPOFF32 = 84,R_TILEPRO_IMM16_X0_TLS_LE = 85,R_TILEPRO_IMM16_X1_TLS_LE = 86,R_TILEPRO_IMM16_X0_TLS_LE_LO = 87,R_TILEPRO_IMM16_X1_TLS_LE_LO = 88,R_TILEPRO_IMM16_X0_TLS_LE_HI = 89,R_TILEPRO_IMM16_X1_TLS_LE_HI = 90,R_TILEPRO_IMM16_X0_TLS_LE_HA = 91,R_TILEPRO_IMM16_X1_TLS_LE_HA = 92,R_TILEPRO_GNU_VTINHERIT = 128,R_TILEPRO_GNU_VTENTRY = 129,R_TILEPRO_NUM = 130,R_TILEGX_NONE = 0,R_TILEGX_64 = 1,R_TILEGX_32 = 2,R_TILEGX_16 = 3,R_TILEGX_8 = 4,R_TILEGX_64_PCREL = 5,R_TILEGX_32_PCREL = 6,R_TILEGX_16_PCREL = 7,R_TILEGX_8_PCREL = 8,R_TILEGX_HW0 = 9,R_TILEGX_HW1 = 10,R_TILEGX_HW2 = 11,R_TILEGX_HW3 = 12,R_TILEGX_HW0_LAST = 13,R_TILEGX_HW1_LAST = 14,R_TILEGX_HW2_LAST = 15,R_TILEGX_COPY = 16,R_TILEGX_GLOB_DAT = 17,R_TILEGX_JMP_SLOT = 18,R_TILEGX_RELATIVE = 19,R_TILEGX_BROFF_X1 = 20,R_TILEGX_JUMPOFF_X1 = 21,R_TILEGX_JUMPOFF_X1_PLT = 22,R_TILEGX_IMM8_X0 = 23,R_TILEGX_IMM8_Y0 = 24,R_TILEGX_IMM8_X1 = 25,R_TILEGX_IMM8_Y1 = 26,R_TILEGX_DEST_IMM8_X1 = 27,R_TILEGX_MT_IMM14_X1 = 28,R_TILEGX_MF_IMM14_X1 = 29,R_TILEGX_MMSTART_X0 = 30,R_TILEGX_MMEND_X0 = 31,R_TILEGX_SHAMT_X0 = 32,R_TILEGX_SHAMT_X1 = 33,R_TILEGX_SHAMT_Y0 = 34,R_TILEGX_SHAMT_Y1 = 35,R_TILEGX_IMM16_X0_HW0 = 36,R_TILEGX_IMM16_X1_HW0 = 37,R_TILEGX_IMM16_X0_HW1 = 38,R_TILEGX_IMM16_X1_HW1 = 39,R_TILEGX_IMM16_X0_HW2 = 40,R_TILEGX_IMM16_X1_HW2 = 41,R_TILEGX_IMM16_X0_HW3 = 42,R_TILEGX_IMM16_X1_HW3 = 43,R_TILEGX_IMM16_X0_HW0_LAST = 44,R_TILEGX_IMM16_X1_HW0_LAST = 45,R_TILEGX_IMM16_X0_HW1_LAST = 46,R_TILEGX_IMM16_X1_HW1_LAST = 47,R_TILEGX_IMM16_X0_HW2_LAST = 48,R_TILEGX_IMM16_X1_HW2_LAST = 49,R_TILEGX_IMM16_X0_HW0_PCREL = 50,R_TILEGX_IMM16_X1_HW0_PCREL = 51,R_TILEGX_IMM16_X0_HW1_PCREL = 52,R_TILEGX_IMM16_X1_HW1_PCREL = 53,R_TILEGX_IMM16_X0_HW2_PCREL = 54,R_TILEGX_IMM16_X1_HW2_PCREL = 55,R_TILEGX_IMM16_X0_HW3_PCREL = 56,R_TILEGX_IMM16_X1_HW3_PCREL = 57,R_TILEGX_IMM16_X0_HW0_LAST_PCREL = 58,R_TILEGX_IMM16_X1_HW0_LAST_PCREL = 59,R_TILEGX_IMM16_X0_HW1_LAST_PCREL = 60,R_TILEGX_IMM16_X1_HW1_LAST_PCREL = 61,R_TILEGX_IMM16_X0_HW2_LAST_PCREL = 62,R_TILEGX_IMM16_X1_HW2_LAST_PCREL = 63,R_TILEGX_IMM16_X0_HW0_GOT = 64,R_TILEGX_IMM16_X1_HW0_GOT = 65,R_TILEGX_IMM16_X0_HW0_PLT_PCREL = 66,R_TILEGX_IMM16_X1_HW0_PLT_PCREL = 67,R_TILEGX_IMM16_X0_HW1_PLT_PCREL = 68,R_TILEGX_IMM16_X1_HW1_PLT_PCREL = 69,R_TILEGX_IMM16_X0_HW2_PLT_PCREL = 70,R_TILEGX_IMM16_X1_HW2_PLT_PCREL = 71,R_TILEGX_IMM16_X0_HW0_LAST_GOT = 72,R_TILEGX_IMM16_X1_HW0_LAST_GOT = 73,R_TILEGX_IMM16_X0_HW1_LAST_GOT = 74,R_TILEGX_IMM16_X1_HW1_LAST_GOT = 75,R_TILEGX_IMM16_X0_HW3_PLT_PCREL = 76,R_TILEGX_IMM16_X1_HW3_PLT_PCREL = 77,R_TILEGX_IMM16_X0_HW0_TLS_GD = 78,R_TILEGX_IMM16_X1_HW0_TLS_GD = 79,R_TILEGX_IMM16_X0_HW0_TLS_LE = 80,R_TILEGX_IMM16_X1_HW0_TLS_LE = 81,R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE = 82,R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE = 83,R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE = 84,R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE = 85,R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD = 86,R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD = 87,R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD = 88,R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD = 89,R_TILEGX_IMM16_X0_HW0_TLS_IE = 92,R_TILEGX_IMM16_X1_HW0_TLS_IE = 93,R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL = 94,R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL = 95,R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL = 96,R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL = 97,R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL = 98,R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL = 99,R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE = 100,R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE = 101,R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE = 102,R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE = 103,R_TILEGX_TLS_DTPMOD64 = 106,R_TILEGX_TLS_DTPOFF64 = 107,R_TILEGX_TLS_TPOFF64 = 108,R_TILEGX_TLS_DTPMOD32 = 109,R_TILEGX_TLS_DTPOFF32 = 110,R_TILEGX_TLS_TPOFF32 = 111,R_TILEGX_TLS_GD_CALL = 112,R_TILEGX_IMM8_X0_TLS_GD_ADD = 113,R_TILEGX_IMM8_X1_TLS_GD_ADD = 114,R_TILEGX_IMM8_Y0_TLS_GD_ADD = 115,R_TILEGX_IMM8_Y1_TLS_GD_ADD = 116,R_TILEGX_TLS_IE_LOAD = 117,R_TILEGX_IMM8_X0_TLS_ADD = 118,R_TILEGX_IMM8_X1_TLS_ADD = 119,R_TILEGX_IMM8_Y0_TLS_ADD = 120,R_TILEGX_IMM8_Y1_TLS_ADD = 121,R_TILEGX_GNU_VTINHERIT = 128,R_TILEGX_GNU_VTENTRY = 129,R_TILEGX_NUM = 130,};
enum MACRO_R_PARISC {R_PARISC_NONE = 0,R_PARISC_DIR32 = 1,R_PARISC_DIR21L = 2,R_PARISC_DIR17R = 3,R_PARISC_DIR17F = 4,R_PARISC_DIR14R = 6,R_PARISC_PCREL32 = 9,R_PARISC_PCREL21L = 10,R_PARISC_PCREL17R = 11,R_PARISC_PCREL17F = 12,R_PARISC_PCREL14R = 14,R_PARISC_DPREL21L = 18,R_PARISC_DPREL14R = 22,R_PARISC_GPREL21L = 26,R_PARISC_GPREL14R = 30,R_PARISC_LTOFF21L = 34,R_PARISC_LTOFF14R = 38,R_PARISC_SECREL32 = 41,R_PARISC_SEGBASE = 48,R_PARISC_SEGREL32 = 49,R_PARISC_PLTOFF21L = 50,R_PARISC_PLTOFF14R = 54,R_PARISC_LTOFF_FPTR32 = 57,R_PARISC_LTOFF_FPTR21L = 58,R_PARISC_LTOFF_FPTR14R = 62,R_PARISC_FPTR64 = 64,R_PARISC_PLABEL32 = 65,R_PARISC_PLABEL21L = 66,R_PARISC_PLABEL14R = 70,R_PARISC_PCREL64 = 72,R_PARISC_PCREL22F = 74,R_PARISC_PCREL14WR = 75,R_PARISC_PCREL14DR = 76,R_PARISC_PCREL16F = 77,R_PARISC_PCREL16WF = 78,R_PARISC_PCREL16DF = 79,R_PARISC_DIR64 = 80,R_PARISC_DIR14WR = 83,R_PARISC_DIR14DR = 84,R_PARISC_DIR16F = 85,R_PARISC_DIR16WF = 86,R_PARISC_DIR16DF = 87,R_PARISC_GPREL64 = 88,R_PARISC_GPREL14WR = 91,R_PARISC_GPREL14DR = 92,R_PARISC_GPREL16F = 93,R_PARISC_GPREL16WF = 94,R_PARISC_GPREL16DF = 95,R_PARISC_LTOFF64 = 96,R_PARISC_LTOFF14WR = 99,R_PARISC_LTOFF14DR = 100,R_PARISC_LTOFF16F = 101,R_PARISC_LTOFF16WF = 102,R_PARISC_LTOFF16DF = 103,R_PARISC_SECREL64 = 104,R_PARISC_SEGREL64 = 112,R_PARISC_PLTOFF14WR = 115,R_PARISC_PLTOFF14DR = 116,R_PARISC_PLTOFF16F = 117,R_PARISC_PLTOFF16WF = 118,R_PARISC_PLTOFF16DF = 119,R_PARISC_LTOFF_FPTR64 = 120,R_PARISC_LTOFF_FPTR14WR = 123,R_PARISC_LTOFF_FPTR14DR = 124,R_PARISC_LTOFF_FPTR16F = 125,R_PARISC_LTOFF_FPTR16WF = 126,R_PARISC_LTOFF_FPTR16DF = 127,R_PARISC_LORESERVE = 128,R_PARISC_COPY = 128,R_PARISC_IPLT = 129,R_PARISC_EPLT = 130,R_PARISC_TPREL32 = 153,R_PARISC_TPREL21L = 154,R_PARISC_TPREL14R = 158,R_PARISC_LTOFF_TP21L = 162,R_PARISC_LTOFF_TP14R = 166,R_PARISC_LTOFF_TP14F = 167,R_PARISC_TPREL64 = 216,R_PARISC_TPREL14WR = 219,R_PARISC_TPREL14DR = 220,R_PARISC_TPREL16F = 221,R_PARISC_TPREL16WF = 222,R_PARISC_TPREL16DF = 223,R_PARISC_LTOFF_TP64 = 224,R_PARISC_LTOFF_TP14WR = 227,R_PARISC_LTOFF_TP14DR = 228,R_PARISC_LTOFF_TP16F = 229,R_PARISC_LTOFF_TP16WF = 230,R_PARISC_LTOFF_TP16DF = 231,R_PARISC_GNU_VTENTRY = 232,R_PARISC_GNU_VTINHERIT = 233,R_PARISC_TLS_GD21L = 234,R_PARISC_TLS_GD14R = 235,R_PARISC_TLS_GDCALL = 236,R_PARISC_TLS_LDM21L = 237,R_PARISC_TLS_LDM14R = 238,R_PARISC_TLS_LDMCALL = 239,R_PARISC_TLS_LDO21L = 240,R_PARISC_TLS_LDO14R = 241,R_PARISC_TLS_DTPMOD32 = 242,R_PARISC_TLS_DTPMOD64 = 243,R_PARISC_TLS_DTPOFF32 = 244,R_PARISC_TLS_DTPOFF64 = 245,R_PARISC_TLS_LE21L = 154,R_PARISC_TLS_LE14R = 158,R_PARISC_TLS_IE21L = 162,R_PARISC_TLS_IE14R = 166,R_PARISC_TLS_TPREL32 = 153,R_PARISC_TLS_TPREL64 = 216,R_PARISC_HIRESERVE = 255,};
enum MACRO_R_PPC {R_PPC_NONE = 0,R_PPC_ADDR32 = 1,R_PPC_ADDR24 = 2,R_PPC_ADDR16 = 3,R_PPC_ADDR16_LO = 4,R_PPC_ADDR16_HI = 5,R_PPC_ADDR16_HA = 6,R_PPC_ADDR14 = 7,R_PPC_ADDR14_BRTAKEN = 8,R_PPC_ADDR14_BRNTAKEN = 9,R_PPC_REL24 = 10,R_PPC_REL14 = 11,R_PPC_REL14_BRTAKEN = 12,R_PPC_REL14_BRNTAKEN = 13,R_PPC_GOT16 = 14,R_PPC_GOT16_LO = 15,R_PPC_GOT16_HI = 16,R_PPC_GOT16_HA = 17,R_PPC_PLTREL24 = 18,R_PPC_COPY = 19,R_PPC_GLOB_DAT = 20,R_PPC_JMP_SLOT = 21,R_PPC_RELATIVE = 22,R_PPC_LOCAL24PC = 23,R_PPC_UADDR32 = 24,R_PPC_UADDR16 = 25,R_PPC_REL32 = 26,R_PPC_PLT32 = 27,R_PPC_PLTREL32 = 28,R_PPC_PLT16_LO = 29,R_PPC_PLT16_HI = 30,R_PPC_PLT16_HA = 31,R_PPC_SDAREL16 = 32,R_PPC_SECTOFF = 33,R_PPC_SECTOFF_LO = 34,R_PPC_SECTOFF_HI = 35,R_PPC_SECTOFF_HA = 36,R_PPC_TLS = 67,R_PPC_DTPMOD32 = 68,R_PPC_TPREL16 = 69,R_PPC_TPREL16_LO = 70,R_PPC_TPREL16_HI = 71,R_PPC_TPREL16_HA = 72,R_PPC_TPREL32 = 73,R_PPC_DTPREL16 = 74,R_PPC_DTPREL16_LO = 75,R_PPC_DTPREL16_HI = 76,R_PPC_DTPREL16_HA = 77,R_PPC_DTPREL32 = 78,R_PPC_GOT_TLSGD16 = 79,R_PPC_GOT_TLSGD16_LO = 80,R_PPC_GOT_TLSGD16_HI = 81,R_PPC_GOT_TLSGD16_HA = 82,R_PPC_GOT_TLSLD16 = 83,R_PPC_GOT_TLSLD16_LO = 84,R_PPC_GOT_TLSLD16_HI = 85,R_PPC_GOT_TLSLD16_HA = 86,R_PPC_GOT_TPREL16 = 87,R_PPC_GOT_TPREL16_LO = 88,R_PPC_GOT_TPREL16_HI = 89,R_PPC_GOT_TPREL16_HA = 90,R_PPC_GOT_DTPREL16 = 91,R_PPC_GOT_DTPREL16_LO = 92,R_PPC_GOT_DTPREL16_HI = 93,R_PPC_GOT_DTPREL16_HA = 94,R_PPC_EMB_NADDR32 = 101,R_PPC_EMB_NADDR16 = 102,R_PPC_EMB_NADDR16_LO = 103,R_PPC_EMB_NADDR16_HI = 104,R_PPC_EMB_NADDR16_HA = 105,R_PPC_EMB_SDAI16 = 106,R_PPC_EMB_SDA2I16 = 107,R_PPC_EMB_SDA2REL = 108,R_PPC_EMB_SDA21 = 109,R_PPC_EMB_MRKREF = 110,R_PPC_EMB_RELSEC16 = 111,R_PPC_EMB_RELST_LO = 112,R_PPC_EMB_RELST_HI = 113,R_PPC_EMB_RELST_HA = 114,R_PPC_EMB_BIT_FLD = 115,R_PPC_EMB_RELSDA = 116,R_PPC_DIAB_SDA21_LO = 180,R_PPC_DIAB_SDA21_HI = 181,R_PPC_DIAB_SDA21_HA = 182,R_PPC_DIAB_RELSDA_LO = 183,R_PPC_DIAB_RELSDA_HI = 184,R_PPC_DIAB_RELSDA_HA = 185,R_PPC_IRELATIVE = 248,R_PPC_REL16 = 249,R_PPC_REL16_LO = 250,R_PPC_REL16_HI = 251,R_PPC_REL16_HA = 252,R_PPC_TOC16 = 255,};
enum MACRO_R_PPC64 {R_PPC64_NONE = 0,R_PPC64_ADDR32 = 1,R_PPC64_ADDR24 = 2,R_PPC64_ADDR16 = 3,R_PPC64_ADDR16_LO = 4,R_PPC64_ADDR16_HI = 5,R_PPC64_ADDR16_HA = 6,R_PPC64_ADDR14 = 7,R_PPC64_ADDR14_BRTAKEN = 8,R_PPC64_ADDR14_BRNTAKEN = 9,R_PPC64_REL24 = 10,R_PPC64_REL14 = 11,R_PPC64_REL14_BRTAKEN = 12,R_PPC64_REL14_BRNTAKEN = 13,R_PPC64_GOT16 = 14,R_PPC64_GOT16_LO = 15,R_PPC64_GOT16_HI = 16,R_PPC64_GOT16_HA = 17,R_PPC64_COPY = 19,R_PPC64_GLOB_DAT = 20,R_PPC64_JMP_SLOT = 21,R_PPC64_RELATIVE = 22,R_PPC64_UADDR32 = 24,R_PPC64_UADDR16 = 25,R_PPC64_REL32 = 26,R_PPC64_PLT32 = 27,R_PPC64_PLTREL32 = 28,R_PPC64_PLT16_LO = 29,R_PPC64_PLT16_HI = 30,R_PPC64_PLT16_HA = 31,R_PPC64_SECTOFF = 33,R_PPC64_SECTOFF_LO = 34,R_PPC64_SECTOFF_HI = 35,R_PPC64_SECTOFF_HA = 36,R_PPC64_ADDR30 = 37,R_PPC64_ADDR64 = 38,R_PPC64_ADDR16_HIGHER = 39,R_PPC64_ADDR16_HIGHERA = 40,R_PPC64_ADDR16_HIGHEST = 41,R_PPC64_ADDR16_HIGHESTA = 42,R_PPC64_UADDR64 = 43,R_PPC64_REL64 = 44,R_PPC64_PLT64 = 45,R_PPC64_PLTREL64 = 46,R_PPC64_TOC16 = 47,R_PPC64_TOC16_LO = 48,R_PPC64_TOC16_HI = 49,R_PPC64_TOC16_HA = 50,R_PPC64_TOC = 51,R_PPC64_PLTGOT16 = 52,R_PPC64_PLTGOT16_LO = 53,R_PPC64_PLTGOT16_HI = 54,R_PPC64_PLTGOT16_HA = 55,R_PPC64_ADDR16_DS = 56,R_PPC64_ADDR16_LO_DS = 57,R_PPC64_GOT16_DS = 58,R_PPC64_GOT16_LO_DS = 59,R_PPC64_PLT16_LO_DS = 60,R_PPC64_SECTOFF_DS = 61,R_PPC64_SECTOFF_LO_DS = 62,R_PPC64_TOC16_DS = 63,R_PPC64_TOC16_LO_DS = 64,R_PPC64_PLTGOT16_DS = 65,R_PPC64_PLTGOT16_LO_DS = 66,R_PPC64_TLS = 67,R_PPC64_DTPMOD64 = 68,R_PPC64_TPREL16 = 69,R_PPC64_TPREL16_LO = 70,R_PPC64_TPREL16_HI = 71,R_PPC64_TPREL16_HA = 72,R_PPC64_TPREL64 = 73,R_PPC64_DTPREL16 = 74,R_PPC64_DTPREL16_LO = 75,R_PPC64_DTPREL16_HI = 76,R_PPC64_DTPREL16_HA = 77,R_PPC64_DTPREL64 = 78,R_PPC64_GOT_TLSGD16 = 79,R_PPC64_GOT_TLSGD16_LO = 80,R_PPC64_GOT_TLSGD16_HI = 81,R_PPC64_GOT_TLSGD16_HA = 82,R_PPC64_GOT_TLSLD16 = 83,R_PPC64_GOT_TLSLD16_LO = 84,R_PPC64_GOT_TLSLD16_HI = 85,R_PPC64_GOT_TLSLD16_HA = 86,R_PPC64_GOT_TPREL16_DS = 87,R_PPC64_GOT_TPREL16_LO_DS = 88,R_PPC64_GOT_TPREL16_HI = 89,R_PPC64_GOT_TPREL16_HA = 90,R_PPC64_GOT_DTPREL16_DS = 91,R_PPC64_GOT_DTPREL16_LO_DS = 92,R_PPC64_GOT_DTPREL16_HI = 93,R_PPC64_GOT_DTPREL16_HA = 94,R_PPC64_TPREL16_DS = 95,R_PPC64_TPREL16_LO_DS = 96,R_PPC64_TPREL16_HIGHER = 97,R_PPC64_TPREL16_HIGHERA = 98,R_PPC64_TPREL16_HIGHEST = 99,R_PPC64_TPREL16_HIGHESTA = 100,R_PPC64_DTPREL16_DS = 101,R_PPC64_DTPREL16_LO_DS = 102,R_PPC64_DTPREL16_HIGHER = 103,R_PPC64_DTPREL16_HIGHERA = 104,R_PPC64_DTPREL16_HIGHEST = 105,R_PPC64_DTPREL16_HIGHESTA = 106,R_PPC64_TLSGD = 107,R_PPC64_TLSLD = 108,R_PPC64_TOCSAVE = 109,R_PPC64_ADDR16_HIGH = 110,R_PPC64_ADDR16_HIGHA = 111,R_PPC64_TPREL16_HIGH = 112,R_PPC64_TPREL16_HIGHA = 113,R_PPC64_DTPREL16_HIGH = 114,R_PPC64_DTPREL16_HIGHA = 115,R_PPC64_JMP_IREL = 247,R_PPC64_IRELATIVE = 248,R_PPC64_REL16 = 249,R_PPC64_REL16_LO = 250,R_PPC64_REL16_HI = 251,R_PPC64_REL16_HA = 252,};
enum MACRO_R_SH {R_SH_NONE = 0,R_SH_DIR32 = 1,R_SH_REL32 = 2,R_SH_DIR8WPN = 3,R_SH_IND12W = 4,R_SH_DIR8WPL = 5,R_SH_DIR8WPZ = 6,R_SH_DIR8BP = 7,R_SH_DIR8W = 8,R_SH_DIR8L = 9,R_SH_SWITCH16 = 25,R_SH_SWITCH32 = 26,R_SH_USES = 27,R_SH_COUNT = 28,R_SH_ALIGN = 29,R_SH_CODE = 30,R_SH_DATA = 31,R_SH_LABEL = 32,R_SH_SWITCH8 = 33,R_SH_GNU_VTINHERIT = 34,R_SH_GNU_VTENTRY = 35,R_SH_TLS_GD_32 = 144,R_SH_TLS_LD_32 = 145,R_SH_TLS_LDO_32 = 146,R_SH_TLS_IE_32 = 147,R_SH_TLS_LE_32 = 148,R_SH_TLS_DTPMOD32 = 149,R_SH_TLS_DTPOFF32 = 150,R_SH_TLS_TPOFF32 = 151,R_SH_GOT32 = 160,R_SH_PLT32 = 161,R_SH_COPY = 162,R_SH_GLOB_DAT = 163,R_SH_JMP_SLOT = 164,R_SH_RELATIVE = 165,R_SH_GOTOFF = 166,R_SH_GOTPC = 167,R_SH_NUM = 256,};
enum MACRO_R_SPARC {R_SPARC_NONE = 0,R_SPARC_8 = 1,R_SPARC_16 = 2,R_SPARC_32 = 3,R_SPARC_DISP8 = 4,R_SPARC_DISP16 = 5,R_SPARC_DISP32 = 6,R_SPARC_WDISP30 = 7,R_SPARC_WDISP22 = 8,R_SPARC_HI22 = 9,R_SPARC_22 = 10,R_SPARC_13 = 11,R_SPARC_LO10 = 12,R_SPARC_GOT10 = 13,R_SPARC_GOT13 = 14,R_SPARC_GOT22 = 15,R_SPARC_PC10 = 16,R_SPARC_PC22 = 17,R_SPARC_WPLT30 = 18,R_SPARC_COPY = 19,R_SPARC_GLOB_DAT = 20,R_SPARC_JMP_SLOT = 21,R_SPARC_RELATIVE = 22,R_SPARC_UA32 = 23,R_SPARC_PLT32 = 24,R_SPARC_HIPLT22 = 25,R_SPARC_LOPLT10 = 26,R_SPARC_PCPLT32 = 27,R_SPARC_PCPLT22 = 28,R_SPARC_PCPLT10 = 29,R_SPARC_10 = 30,R_SPARC_11 = 31,R_SPARC_64 = 32,R_SPARC_OLO10 = 33,R_SPARC_HH22 = 34,R_SPARC_HM10 = 35,R_SPARC_LM22 = 36,R_SPARC_PC_HH22 = 37,R_SPARC_PC_HM10 = 38,R_SPARC_PC_LM22 = 39,R_SPARC_WDISP16 = 40,R_SPARC_WDISP19 = 41,R_SPARC_GLOB_JMP = 42,R_SPARC_7 = 43,R_SPARC_5 = 44,R_SPARC_6 = 45,R_SPARC_DISP64 = 46,R_SPARC_PLT64 = 47,R_SPARC_HIX22 = 48,R_SPARC_LOX10 = 49,R_SPARC_H44 = 50,R_SPARC_M44 = 51,R_SPARC_L44 = 52,R_SPARC_REGISTER = 53,R_SPARC_UA64 = 54,R_SPARC_UA16 = 55,R_SPARC_TLS_GD_HI22 = 56,R_SPARC_TLS_GD_LO10 = 57,R_SPARC_TLS_GD_ADD = 58,R_SPARC_TLS_GD_CALL = 59,R_SPARC_TLS_LDM_HI22 = 60,R_SPARC_TLS_LDM_LO10 = 61,R_SPARC_TLS_LDM_ADD = 62,R_SPARC_TLS_LDM_CALL = 63,R_SPARC_TLS_LDO_HIX22 = 64,R_SPARC_TLS_LDO_LOX10 = 65,R_SPARC_TLS_LDO_ADD = 66,R_SPARC_TLS_IE_HI22 = 67,R_SPARC_TLS_IE_LO10 = 68,R_SPARC_TLS_IE_LD = 69,R_SPARC_TLS_IE_LDX = 70,R_SPARC_TLS_IE_ADD = 71,R_SPARC_TLS_LE_HIX22 = 72,R_SPARC_TLS_LE_LOX10 = 73,R_SPARC_TLS_DTPMOD32 = 74,R_SPARC_TLS_DTPMOD64 = 75,R_SPARC_TLS_DTPOFF32 = 76,R_SPARC_TLS_DTPOFF64 = 77,R_SPARC_TLS_TPOFF32 = 78,R_SPARC_TLS_TPOFF64 = 79,R_SPARC_GOTDATA_HIX22 = 80,R_SPARC_GOTDATA_LOX10 = 81,R_SPARC_GOTDATA_OP_HIX22 = 82,R_SPARC_GOTDATA_OP_LOX10 = 83,R_SPARC_GOTDATA_OP = 84,R_SPARC_H34 = 85,R_SPARC_SIZE32 = 86,R_SPARC_SIZE64 = 87,R_SPARC_WDISP10 = 88,R_SPARC_JMP_IREL = 248,R_SPARC_IRELATIVE = 249,R_SPARC_GNU_VTINHERIT = 250,R_SPARC_GNU_VTENTRY = 251,R_SPARC_REV32 = 252,R_SPARC_NUM = 253,};
enum MACRO_S {S_IFMT = 61440,S_IFDIR = 16384,S_IFCHR = 8192,S_IFBLK = 24576,S_IFREG = 32768,S_IFIFO = 4096,S_IFLNK = 40960,S_IFSOCK = 49152,S_ISUID = 2048,S_ISGID = 1024,S_ISVTX = 512,S_IRUSR = 256,S_IWUSR = 128,S_IXUSR = 64,S_IRWXU = 448,S_IRGRP = 32,S_IWGRP = 16,S_IXGRP = 8,S_IRWXG = 56,S_IROTH = 4,S_IWOTH = 2,S_IXOTH = 1,S_IRWXO = 7,};
enum MACRO_SA {SA_NOCLDSTOP = 1,SA_NOCLDWAIT = 2,SA_SIGINFO = 4,SA_ONSTACK = 134217728,SA_RESTART = 268435456,SA_NODEFER = 1073741824,SA_RESETHAND = -2147483648,SA_INTERRUPT = 536870912,SA_NOMASK = 1073741824,SA_ONESHOT = -2147483648,SA_STACK = 134217728,};
enum MACRO_SACK_PERMITTED {TCPOPT_SACK_PERMITTED = 4,TCPOLEN_SACK_PERMITTED = 2,};
enum MACRO_SAMPLE {SAMPLE_TYPE_BASIC = 0x10,SAMPLE_TYPE_GUS = 0x10,SAMPLE_TYPE_WAVEFRONT = 0x11,};
enum MACRO_SARMAG {SARMAG = 8,};
enum MACRO_SB {SB = 250,};
enum MACRO_SCHAR {SCHAR_MIN = -128,SCHAR_MAX = 127,};
enum MACRO_SCHED {SCHED_OTHER = 0,SCHED_FIFO = 1,SCHED_RR = 2,};
enum MACRO_SCM {SCM_TIMESTAMP = 29,};
enum MACRO_SCM_TIMESTAMPING {SCM_TIMESTAMPING = 37,};
enum MACRO_SCM_TIMESTAMPNS {SCM_TIMESTAMPNS = 35,};
enum MACRO_SCM_WIFI {SCM_WIFI_STATUS = 41,};
enum MACRO_SCRNMAP {GIO_SCRNMAP = 0x4B40,PIO_SCRNMAP = 0x4B41,};
enum MACRO_SE {SE = 240,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEGSIZE {SEGSIZE = 512,};
enum MACRO_SELFMAG {SELFMAG = 4,};
enum MACRO_SEM {SEM_UNDO = 0x1000,};
enum MACRO_SEM_STAT {SEM_STAT = 18,SEM_INFO = 19,};
enum MACRO_SEQ {SEQ_NOTEOFF = 0,SEQ_FMNOTEOFF = 0,SEQ_NOTEON = 1,SEQ_FMNOTEON = 1,SEQ_PGMCHANGE = 3,SEQ_FMPGMCHANGE = 3,SEQ_MIDIPUTC = 5,SEQ_DRUMON = 6,SEQ_DRUMOFF = 7,SEQ_AFTERTOUCH = 9,SEQ_CONTROLLER = 10,};
enum MACRO_SEQ_BALANCE {SEQ_BALANCE = 11,SEQ_VOLMODE = 12,};
enum MACRO_SEQ_FULLSIZE {SEQ_FULLSIZE = 0xFD,SEQ_PRIVATE = 0xFE,SEQ_EXTENDED = 0xFF,};
enum MACRO_SETALL {SETALL = 17,};
enum MACRO_SHF : __int64 {SHF_WRITE = 1,SHF_ALLOC = 2,SHF_EXECINSTR = 4,SHF_MERGE = 16,SHF_STRINGS = 32,SHF_INFO_LINK = 64,SHF_LINK_ORDER = 128,SHF_OS_NONCONFORMING = 256,SHF_GROUP = 512,SHF_TLS = 1024,SHF_MASKOS = 267386880,SHF_MASKPROC = -268435456,SHF_ORDERED = 1073741824,SHF_EXCLUDE = 2147483648,};
enum MACRO_SHF_ALPHA {SHF_ALPHA_GPREL = 0x10000000,};
enum MACRO_SHF_ARM {SHF_ARM_ENTRYSECT = 0x10000000,SHF_ARM_COMDEF = 0x80000000,};
enum MACRO_SHF_IA {SHF_IA_64_SHORT = 0x10000000,SHF_IA_64_NORECOV = 0x20000000,};
enum MACRO_SHF_MIPS {SHF_MIPS_GPREL = 0x10000000,SHF_MIPS_MERGE = 0x20000000,SHF_MIPS_ADDR = 0x40000000,SHF_MIPS_STRINGS = 0x80000000,SHF_MIPS_NOSTRIP = 0x8000000,SHF_MIPS_LOCAL = 0x4000000,SHF_MIPS_NAMES = 0x2000000,SHF_MIPS_NODUPE = 0x1000000,};
enum MACRO_SHF_PARISC {SHF_PARISC_SHORT = 0x20000000,SHF_PARISC_HUGE = 0x40000000,SHF_PARISC_SBP = 0x80000000,};
enum MACRO_SHM {SHM_R = 0x100,SHM_W = 0x80,SHM_RDONLY = 0x1000,SHM_RND = 0x2000,SHM_REMAP = 0x4000,SHM_EXEC = 0x8000,SHM_LOCK = 0xB,SHM_UNLOCK = 0xC,SHM_STAT = 0xD,SHM_INFO = 0xE,SHM_DEST = 0x200,SHM_LOCKED = 0x400,SHM_HUGETLB = 0x800,SHM_NORESERVE = 0x1000,};
enum MACRO_SHN {SHN_UNDEF = 0,SHN_LORESERVE = 65280,SHN_LOPROC = 65280,SHN_BEFORE = 65280,SHN_AFTER = 65281,SHN_HIPROC = 65311,SHN_LOOS = 65312,SHN_HIOS = 65343,SHN_ABS = 65521,SHN_COMMON = 65522,SHN_XINDEX = 65535,SHN_HIRESERVE = 65535,};
enum MACRO_SHN_MIPS {SHN_MIPS_ACOMMON = 0xFF00,SHN_MIPS_TEXT = 0xFF01,SHN_MIPS_DATA = 0xFF02,SHN_MIPS_SCOMMON = 0xFF03,SHN_MIPS_SUNDEFINED = 0xFF04,};
enum MACRO_SHN_PARISC {SHN_PARISC_ANSI_COMMON = 0xFF00,SHN_PARISC_HUGE_COMMON = 0xFF01,};
enum MACRO_SHRT {SHRT_MIN = -32768,SHRT_MAX = 32767,};
enum MACRO_SHT {SHT_NULL = 0,SHT_PROGBITS = 1,SHT_SYMTAB = 2,SHT_STRTAB = 3,SHT_RELA = 4,SHT_HASH = 5,SHT_DYNAMIC = 6,SHT_NOTE = 7,SHT_NOBITS = 8,SHT_REL = 9,SHT_SHLIB = 10,SHT_DYNSYM = 11,SHT_INIT_ARRAY = 14,SHT_FINI_ARRAY = 15,SHT_PREINIT_ARRAY = 16,SHT_GROUP = 17,SHT_SYMTAB_SHNDX = 18,SHT_NUM = 19,SHT_LOOS = 1610612736,SHT_GNU_ATTRIBUTES = 1879048181,SHT_GNU_HASH = 1879048182,SHT_GNU_LIBLIST = 1879048183,SHT_CHECKSUM = 1879048184,SHT_LOSUNW = 1879048186,SHT_SUNW_move = 1879048186,SHT_SUNW_COMDAT = 1879048187,SHT_SUNW_syminfo = 1879048188,SHT_GNU_verdef = 1879048189,SHT_GNU_verneed = 1879048190,SHT_GNU_versym = 1879048191,SHT_HISUNW = 1879048191,SHT_HIOS = 1879048191,SHT_LOPROC = 1879048192,SHT_HIPROC = 2147483647,SHT_LOUSER = -2147483648,SHT_HIUSER = -1879048193,};
enum MACRO_SHT_ALPHA {SHT_ALPHA_DEBUG = 0x70000001,SHT_ALPHA_REGINFO = 0x70000002,};
enum MACRO_SHT_ARM {SHT_ARM_PREEMPTMAP = 1879048194,SHT_ARM_ATTRIBUTES = 1879048195,};
enum MACRO_SHT_IA {SHT_IA_64_EXT = 1879048192,SHT_IA_64_UNWIND = 1879048193,};
enum MACRO_SHT_MIPS {SHT_MIPS_LIBLIST = 0x70000000,SHT_MIPS_MSYM = 0x70000001,SHT_MIPS_CONFLICT = 0x70000002,SHT_MIPS_GPTAB = 0x70000003,SHT_MIPS_UCODE = 0x70000004,SHT_MIPS_DEBUG = 0x70000005,SHT_MIPS_REGINFO = 0x70000006,SHT_MIPS_PACKAGE = 0x70000007,SHT_MIPS_PACKSYM = 0x70000008,SHT_MIPS_RELD = 0x70000009,SHT_MIPS_IFACE = 0x7000000B,SHT_MIPS_CONTENT = 0x7000000C,SHT_MIPS_OPTIONS = 0x7000000D,SHT_MIPS_SHDR = 0x70000010,SHT_MIPS_FDESC = 0x70000011,SHT_MIPS_EXTSYM = 0x70000012,SHT_MIPS_DENSE = 0x70000013,SHT_MIPS_PDESC = 0x70000014,SHT_MIPS_LOCSYM = 0x70000015,SHT_MIPS_AUXSYM = 0x70000016,SHT_MIPS_OPTSYM = 0x70000017,SHT_MIPS_LOCSTR = 0x70000018,SHT_MIPS_LINE = 0x70000019,SHT_MIPS_RFDESC = 0x7000001A,SHT_MIPS_DELTASYM = 0x7000001B,SHT_MIPS_DELTAINST = 0x7000001C,SHT_MIPS_DELTACLASS = 0x7000001D,SHT_MIPS_DWARF = 0x7000001E,SHT_MIPS_DELTADECL = 0x7000001F,SHT_MIPS_SYMBOL_LIB = 0x70000020,SHT_MIPS_EVENTS = 0x70000021,SHT_MIPS_TRANSLATE = 0x70000022,SHT_MIPS_PIXIE = 0x70000023,SHT_MIPS_XLATE = 0x70000024,SHT_MIPS_XLATE_DEBUG = 0x70000025,SHT_MIPS_WHIRL = 0x70000026,SHT_MIPS_EH_REGION = 0x70000027,SHT_MIPS_XLATE_OLD = 0x70000028,SHT_MIPS_PDR_EXCEPTION = 0x70000029,};
enum MACRO_SHT_PARISC {SHT_PARISC_EXT = 0x70000000,SHT_PARISC_UNWIND = 0x70000001,SHT_PARISC_DOC = 0x70000002,};
enum MACRO_SI {SI_LOAD_SHIFT = 16,};
enum MACRO_SIG {SIG_ATOMIC_MIN = -2147483648,SIG_ATOMIC_MAX = 2147483647,};
enum MACRO_SIGNAL {SIGHUP = 1,SIGINT = 2,SIGQUIT = 3,SIGILL = 4,SIGTRAP = 5,SIGABRT = 6,SIGIOT = 6,SIGBUS = 7,SIGFPE = 8,SIGKILL = 9,SIGUSR1 = 10,SIGSEGV = 11,SIGUSR2 = 12,SIGPIPE = 13,SIGALRM = 14,SIGTERM = 15,SIGSTKFLT = 16,SIGCHLD = 17,SIGCONT = 18,SIGSTOP = 19,SIGTSTP = 20,SIGTTIN = 21,SIGTTOU = 22,SIGURG = 23,SIGXCPU = 24,SIGXFSZ = 25,SIGVTALRM = 26,SIGPROF = 27,SIGWINCH = 28,SIGIO = 29,SIGPWR = 30,SIGSYS = 31,SIGUNUSED = 31,_NSIG = 65,__SIGRTMIN = 32,__SIGRTMAX = 64,};
enum MACRO_SIG_BLOCK {SIG_BLOCK = 0,SIG_UNBLOCK = 1,SIG_SETMASK = 2,};
enum MACRO_SIOC : __int64 {SIOC_OUT = 1073741824,SIOC_IN = 2147483648,SIOC_INOUT = 3221225472,};
enum MACRO_SIOCADDDLCI {SIOCADDDLCI = 0x8980,};
enum MACRO_SIOCADDMULTI {SIOCADDMULTI = 0x8931,};
enum MACRO_SIOCADDRT {SIOCADDRT = 0x890B,};
enum MACRO_SIOCAIPXITFCRT {SIOCAIPXITFCRT = 35296,};
enum MACRO_SIOCAIPXPRISLT {SIOCAIPXPRISLT = 35297,};
enum MACRO_SIOCATALKDIFADDR {SIOCATALKDIFADDR = 35296,};
enum MACRO_SIOCATMARK {SIOCATMARK = 0x8905,};
enum MACRO_SIOCAX25ADDFWD {SIOCAX25ADDFWD = 35306,};
enum MACRO_SIOCAX25ADDUID {SIOCAX25ADDUID = 35297,};
enum MACRO_SIOCAX25BPQADDR {SIOCAX25BPQADDR = 35300,};
enum MACRO_SIOCAX25CTLCON {SIOCAX25CTLCON = 35304,};
enum MACRO_SIOCAX25DELFWD {SIOCAX25DELFWD = 35307,};
enum MACRO_SIOCAX25DELUID {SIOCAX25DELUID = 35298,};
enum MACRO_SIOCAX25GETINFO {SIOCAX25GETINFO = 35305,};
enum MACRO_SIOCAX25GETPARMS {SIOCAX25GETPARMS = 35301,};
enum MACRO_SIOCAX25GETUID {SIOCAX25GETUID = 35296,};
enum MACRO_SIOCAX25NOUID {SIOCAX25NOUID = 35299,};
enum MACRO_SIOCAX25OPTRT {SIOCAX25OPTRT = 35303,};
enum MACRO_SIOCAX25SETPARMS {SIOCAX25SETPARMS = 35302,};
enum MACRO_SIOCDARP {SIOCDARP = 0x8953,};
enum MACRO_SIOCDELDLCI {SIOCDELDLCI = 0x8981,};
enum MACRO_SIOCDELMULTI {SIOCDELMULTI = 0x8932,};
enum MACRO_SIOCDELRT {SIOCDELRT = 0x890C,};
enum MACRO_SIOCDEVPRIVATE {SIOCDEVPRIVATE = 0x89F0,};
enum MACRO_SIOCDIFADDR {SIOCDIFADDR = 0x8936,};
enum MACRO_SIOCDRARP {SIOCDRARP = 0x8960,};
enum MACRO_SIOCGARP {SIOCGARP = 0x8954,};
enum MACRO_SIOCGIFADDR {SIOCGIFADDR = 0x8915,};
enum MACRO_SIOCGIFBR {SIOCGIFBR = 0x8940,};
enum MACRO_SIOCGIFBRDADDR {SIOCGIFBRDADDR = 0x8919,};
enum MACRO_SIOCGIFCONF {SIOCGIFCONF = 0x8912,};
enum MACRO_SIOCGIFCOUNT {SIOCGIFCOUNT = 0x8938,};
enum MACRO_SIOCGIFDSTADDR {SIOCGIFDSTADDR = 0x8917,};
enum MACRO_SIOCGIFENCAP {SIOCGIFENCAP = 0x8925,};
enum MACRO_SIOCGIFFLAGS {SIOCGIFFLAGS = 0x8913,};
enum MACRO_SIOCGIFHWADDR {SIOCGIFHWADDR = 0x8927,};
enum MACRO_SIOCGIFINDEX {SIOCGIFINDEX = 0x8933,};
enum MACRO_SIOCGIFMAP {SIOCGIFMAP = 0x8970,};
enum MACRO_SIOCGIFMEM {SIOCGIFMEM = 0x891F,};
enum MACRO_SIOCGIFMETRIC {SIOCGIFMETRIC = 0x891D,};
enum MACRO_SIOCGIFMTU {SIOCGIFMTU = 0x8921,};
enum MACRO_SIOCGIFNAME {SIOCGIFNAME = 0x8910,};
enum MACRO_SIOCGIFNETMASK {SIOCGIFNETMASK = 0x891B,};
enum MACRO_SIOCGIFPFLAGS {SIOCGIFPFLAGS = 0x8935,};
enum MACRO_SIOCGIFSLAVE {SIOCGIFSLAVE = 0x8929,};
enum MACRO_SIOCGIFTXQLEN {SIOCGIFTXQLEN = 0x8942,};
enum MACRO_SIOCGIWAP {SIOCGIWAP = 0x8B15,};
enum MACRO_SIOCGIWAPLIST {SIOCGIWAPLIST = 0x8B17,};
enum MACRO_SIOCGIWAUTH {SIOCGIWAUTH = 0x8B33,};
enum MACRO_SIOCGIWENCODE {SIOCGIWENCODE = 0x8B2B,};
enum MACRO_SIOCGIWENCODEEXT {SIOCGIWENCODEEXT = 0x8B35,};
enum MACRO_SIOCGIWESSID {SIOCGIWESSID = 0x8B1B,};
enum MACRO_SIOCGIWFRAG {SIOCGIWFRAG = 0x8B25,};
enum MACRO_SIOCGIWFREQ {SIOCGIWFREQ = 0x8B05,};
enum MACRO_SIOCGIWGENIE {SIOCGIWGENIE = 0x8B31,};
enum MACRO_SIOCGIWMODE {SIOCGIWMODE = 0x8B07,};
enum MACRO_SIOCGIWNAME {SIOCGIWNAME = 0x8B01,};
enum MACRO_SIOCGIWNICKN {SIOCGIWNICKN = 0x8B1D,};
enum MACRO_SIOCGIWNWID {SIOCGIWNWID = 0x8B03,};
enum MACRO_SIOCGIWPOWER {SIOCGIWPOWER = 0x8B2D,};
enum MACRO_SIOCGIWPRIV {SIOCGIWPRIV = 0x8B0D,};
enum MACRO_SIOCGIWRANGE {SIOCGIWRANGE = 0x8B0B,};
enum MACRO_SIOCGIWRATE {SIOCGIWRATE = 0x8B21,};
enum MACRO_SIOCGIWRETRY {SIOCGIWRETRY = 0x8B29,};
enum MACRO_SIOCGIWRTS {SIOCGIWRTS = 0x8B23,};
enum MACRO_SIOCGIWSCAN {SIOCGIWSCAN = 0x8B19,};
enum MACRO_SIOCGIWSENS {SIOCGIWSENS = 0x8B09,};
enum MACRO_SIOCGIWSPY {SIOCGIWSPY = 0x8B11,};
enum MACRO_SIOCGIWSTATS {SIOCGIWSTATS = 0x8B0F,};
enum MACRO_SIOCGIWTHRSPY {SIOCGIWTHRSPY = 0x8B13,};
enum MACRO_SIOCGIWTXPOW {SIOCGIWTXPOW = 0x8B27,};
enum MACRO_SIOCGPGRP {SIOCGPGRP = 0x8904,};
enum MACRO_SIOCGRARP {SIOCGRARP = 0x8961,};
enum MACRO_SIOCGSTAMP {SIOCGSTAMP = 0x8906,};
enum MACRO_SIOCGSTAMPNS {SIOCGSTAMPNS = 0x8907,};
enum MACRO_SIOCIPXCFGDATA {SIOCIPXCFGDATA = 35298,};
enum MACRO_SIOCIPXNCPCONN {SIOCIPXNCPCONN = 35299,};
enum MACRO_SIOCIWFIRST {SIOCIWFIRST = 0x8B00,};
enum MACRO_SIOCIWFIRSTPRIV {SIOCIWFIRSTPRIV = 0x8BE0,};
enum MACRO_SIOCIWLAST {SIOCIWLAST = 35839,};
enum MACRO_SIOCIWLASTPRIV {SIOCIWLASTPRIV = 0x8BFF,};
enum MACRO_SIOCNRCTLCON {SIOCNRCTLCON = 35300,};
enum MACRO_SIOCNRDECOBS {SIOCNRDECOBS = 35298,};
enum MACRO_SIOCNRGETPARMS {SIOCNRGETPARMS = 35296,};
enum MACRO_SIOCNRRTCTL {SIOCNRRTCTL = 35299,};
enum MACRO_SIOCNRSETPARMS {SIOCNRSETPARMS = 35297,};
enum MACRO_SIOCPROTOPRIVATE {SIOCPROTOPRIVATE = 0x89E0,};
enum MACRO_SIOCRSACCEPT {SIOCRSACCEPT = 35299,};
enum MACRO_SIOCRSCLRRT {SIOCRSCLRRT = 35300,};
enum MACRO_SIOCRSGCAUSE {SIOCRSGCAUSE = 35296,};
enum MACRO_SIOCRSGFACILITIES {SIOCRSGFACILITIES = 35302,};
enum MACRO_SIOCRSGL2CALL {SIOCRSGL2CALL = 35301,};
enum MACRO_SIOCRSL2CALL {SIOCRSL2CALL = 35298,};
enum MACRO_SIOCRSSCAUSE {SIOCRSSCAUSE = 35297,};
enum MACRO_SIOCRSSL2CALL {SIOCRSSL2CALL = 35298,};
enum MACRO_SIOCRTMSG {SIOCRTMSG = 0x890D,};
enum MACRO_SIOCSARP {SIOCSARP = 0x8955,};
enum MACRO_SIOCSIFADDR {SIOCSIFADDR = 0x8916,};
enum MACRO_SIOCSIFBR {SIOCSIFBR = 0x8941,};
enum MACRO_SIOCSIFBRDADDR {SIOCSIFBRDADDR = 0x891A,};
enum MACRO_SIOCSIFDSTADDR {SIOCSIFDSTADDR = 0x8918,};
enum MACRO_SIOCSIFENCAP {SIOCSIFENCAP = 0x8926,};
enum MACRO_SIOCSIFFLAGS {SIOCSIFFLAGS = 0x8914,};
enum MACRO_SIOCSIFHWADDR {SIOCSIFHWADDR = 0x8924,};
enum MACRO_SIOCSIFHWBROADCAST {SIOCSIFHWBROADCAST = 0x8937,};
enum MACRO_SIOCSIFLINK {SIOCSIFLINK = 0x8911,};
enum MACRO_SIOCSIFMAP {SIOCSIFMAP = 0x8971,};
enum MACRO_SIOCSIFMEM {SIOCSIFMEM = 0x8920,};
enum MACRO_SIOCSIFMETRIC {SIOCSIFMETRIC = 0x891E,};
enum MACRO_SIOCSIFMTU {SIOCSIFMTU = 0x8922,};
enum MACRO_SIOCSIFNAME {SIOCSIFNAME = 0x8923,};
enum MACRO_SIOCSIFNETMASK {SIOCSIFNETMASK = 0x891C,};
enum MACRO_SIOCSIFPFLAGS {SIOCSIFPFLAGS = 0x8934,};
enum MACRO_SIOCSIFSLAVE {SIOCSIFSLAVE = 0x8930,};
enum MACRO_SIOCSIFTXQLEN {SIOCSIFTXQLEN = 0x8943,};
enum MACRO_SIOCSIWAP {SIOCSIWAP = 0x8B14,};
enum MACRO_SIOCSIWAUTH {SIOCSIWAUTH = 0x8B32,};
enum MACRO_SIOCSIWCOMMIT {SIOCSIWCOMMIT = 0x8B00,};
enum MACRO_SIOCSIWENCODE {SIOCSIWENCODE = 0x8B2A,};
enum MACRO_SIOCSIWENCODEEXT {SIOCSIWENCODEEXT = 0x8B34,};
enum MACRO_SIOCSIWESSID {SIOCSIWESSID = 0x8B1A,};
enum MACRO_SIOCSIWFRAG {SIOCSIWFRAG = 0x8B24,};
enum MACRO_SIOCSIWFREQ {SIOCSIWFREQ = 0x8B04,};
enum MACRO_SIOCSIWGENIE {SIOCSIWGENIE = 0x8B30,};
enum MACRO_SIOCSIWMLME {SIOCSIWMLME = 0x8B16,};
enum MACRO_SIOCSIWMODE {SIOCSIWMODE = 0x8B06,};
enum MACRO_SIOCSIWNICKN {SIOCSIWNICKN = 0x8B1C,};
enum MACRO_SIOCSIWNWID {SIOCSIWNWID = 0x8B02,};
enum MACRO_SIOCSIWPMKSA {SIOCSIWPMKSA = 0x8B36,};
enum MACRO_SIOCSIWPOWER {SIOCSIWPOWER = 0x8B2C,};
enum MACRO_SIOCSIWPRIV {SIOCSIWPRIV = 0x8B0C,};
enum MACRO_SIOCSIWRANGE {SIOCSIWRANGE = 0x8B0A,};
enum MACRO_SIOCSIWRATE {SIOCSIWRATE = 0x8B20,};
enum MACRO_SIOCSIWRETRY {SIOCSIWRETRY = 0x8B28,};
enum MACRO_SIOCSIWRTS {SIOCSIWRTS = 0x8B22,};
enum MACRO_SIOCSIWSCAN {SIOCSIWSCAN = 0x8B18,};
enum MACRO_SIOCSIWSENS {SIOCSIWSENS = 0x8B08,};
enum MACRO_SIOCSIWSPY {SIOCSIWSPY = 0x8B10,};
enum MACRO_SIOCSIWSTATS {SIOCSIWSTATS = 0x8B0E,};
enum MACRO_SIOCSIWTHRSPY {SIOCSIWTHRSPY = 0x8B12,};
enum MACRO_SIOCSIWTXPOW {SIOCSIWTXPOW = 0x8B26,};
enum MACRO_SIOCSPGRP {SIOCSPGRP = 0x8902,};
enum MACRO_SIOCSRARP {SIOCSRARP = 0x8962,};
enum MACRO_SIOGIFINDEX {SIOGIFINDEX = 35123,};
enum MACRO_SIZE {SIZE_MAX = -1,};
enum MACRO_SLC {SLC_SYNCH = 1,SLC_BRK = 2,SLC_IP = 3,SLC_AO = 4,SLC_AYT = 5,SLC_EOR = 6,SLC_ABORT = 7,SLC_EOF = 8,SLC_SUSP = 9,SLC_EC = 10,SLC_EL = 11,SLC_EW = 12,SLC_RP = 13,SLC_LNEXT = 14,SLC_XON = 15,SLC_XOFF = 16,SLC_FORW1 = 17,SLC_FORW2 = 18,};
enum MACRO_SLC_NOSUPPORT {SLC_NOSUPPORT = 0,SLC_CANTCHANGE = 1,SLC_VARIABLE = 2,SLC_DEFAULT = 3,SLC_LEVELBITS = 3,SLC_FUNC = 0,SLC_FLAGS = 1,SLC_VALUE = 2,SLC_ACK = 128,SLC_FLUSHIN = 64,SLC_FLUSHOUT = 32,};
enum MACRO_SNDCARD {SNDCARD_ADLIB = 1,SNDCARD_SB = 2,SNDCARD_PAS = 3,SNDCARD_GUS = 4,SNDCARD_MPU401 = 5,SNDCARD_SB16 = 6,SNDCARD_SB16MIDI = 7,SNDCARD_UART6850 = 8,SNDCARD_GUS16 = 9,SNDCARD_MSS = 10,SNDCARD_PSS = 11,SNDCARD_SSCAPE = 12,SNDCARD_PSS_MPU = 13,SNDCARD_PSS_MSS = 14,SNDCARD_SSCAPE_MSS = 15,SNDCARD_TRXPRO = 16,SNDCARD_TRXPRO_SB = 17,SNDCARD_TRXPRO_MPU = 18,SNDCARD_MAD16 = 19,SNDCARD_MAD16_MPU = 20,SNDCARD_CS4232 = 21,SNDCARD_CS4232_MPU = 22,SNDCARD_MAUI = 23,SNDCARD_PSEUDO_MSS = 24,SNDCARD_GUSPNP = 25,SNDCARD_UART401 = 26,};
enum MACRO_SNDCTL {SNDCTL_SEQ_RESET = 536891648,SNDCTL_SEQ_SYNC = 536891649,SNDCTL_SEQ_PANIC = 536891665,SNDCTL_TMR_START = 536892418,SNDCTL_TMR_STOP = 536892419,SNDCTL_TMR_CONTINUE = 536892420,};
enum MACRO_SNDCTL_COPR {SNDCTL_COPR_RESET = 536888064,};
enum MACRO_SNDCTL_DSP {SNDCTL_DSP_RESET = 536891392,SNDCTL_DSP_SYNC = 536891393,SNDCTL_DSP_POST = 536891400,};
enum MACRO_SNDCTL_DSP_NONBLOCK {SNDCTL_DSP_NONBLOCK = 536891406,};
enum MACRO_SNDCTL_DSP_SETSYNCRO {SNDCTL_DSP_SETSYNCRO = 536891413,SNDCTL_DSP_SETDUPLEX = 536891414,};
enum MACRO_SNDZERO {SNDZERO = 0x1,};
enum MACRO_SO {SO_DEBUG = 1,SO_REUSEADDR = 2,SO_TYPE = 3,SO_ERROR = 4,SO_DONTROUTE = 5,SO_BROADCAST = 6,SO_SNDBUF = 7,SO_RCVBUF = 8,SO_SNDBUFFORCE = 32,SO_RCVBUFFORCE = 33,SO_KEEPALIVE = 9,SO_OOBINLINE = 10,SO_NO_CHECK = 11,SO_PRIORITY = 12,SO_LINGER = 13,SO_BSDCOMPAT = 14,SO_REUSEPORT = 15,SO_RCVLOWAT = 16,SO_SNDLOWAT = 17,SO_RCVTIMEO = 18,SO_SNDTIMEO = 19,SO_PASSCRED = 20,SO_PEERCRED = 21,SO_SECURITY_AUTHENTICATION = 22,SO_SECURITY_ENCRYPTION_TRANSPORT = 23,SO_SECURITY_ENCRYPTION_NETWORK = 24,SO_BINDTODEVICE = 25,SO_ATTACH_FILTER = 26,SO_DETACH_FILTER = 27,SO_GET_FILTER = 26,SO_PEERNAME = 28,SO_TIMESTAMP = 29,};
enum MACRO_SOL {SOL_RAW = 255,SOL_DECNET = 261,SOL_X25 = 262,SOL_PACKET = 263,SOL_ATM = 264,SOL_AAL = 265,SOL_IRDA = 266,};
enum MACRO_SOL_ATALK {SOL_ATALK = 258,};
enum MACRO_SOL_AX25 {SOL_AX25 = 257,};
enum MACRO_SOL_IP {SOL_IP = 0,};
enum MACRO_SOL_IPV6 {SOL_IPV6 = 41,SOL_ICMPV6 = 58,};
enum MACRO_SOL_IPX {SOL_IPX = 256,};
enum MACRO_SOL_NETROM {SOL_NETROM = 259,};
enum MACRO_SOL_ROSE {SOL_ROSE = 260,};
enum MACRO_SOL_SOCKET {SOL_SOCKET = 1,};
enum MACRO_SOL_TCP {SOL_TCP = 6,};
enum MACRO_SOL_UDP {SOL_UDP = 17,};
enum MACRO_SOMAXCONN {SOMAXCONN = 128,};
enum MACRO_SOUND {SOUND_VERSION = 0x30802,};
enum MACRO_SOUND_MIXER : __int64 {SOUND_MIXER_NRDEVICES = 25,SOUND_MIXER_VOLUME = 0,SOUND_MIXER_BASS = 1,SOUND_MIXER_TREBLE = 2,SOUND_MIXER_SYNTH = 3,SOUND_MIXER_PCM = 4,SOUND_MIXER_SPEAKER = 5,SOUND_MIXER_LINE = 6,SOUND_MIXER_MIC = 7,SOUND_MIXER_CD = 8,SOUND_MIXER_IMIX = 9,SOUND_MIXER_ALTPCM = 10,SOUND_MIXER_RECLEV = 11,SOUND_MIXER_IGAIN = 12,SOUND_MIXER_OGAIN = 13,SOUND_MIXER_LINE1 = 14,SOUND_MIXER_LINE2 = 15,SOUND_MIXER_LINE3 = 16,SOUND_MIXER_DIGITAL1 = 17,SOUND_MIXER_DIGITAL2 = 18,SOUND_MIXER_DIGITAL3 = 19,SOUND_MIXER_PHONEIN = 20,SOUND_MIXER_PHONEOUT = 21,SOUND_MIXER_VIDEO = 22,SOUND_MIXER_RADIO = 23,SOUND_MIXER_MONITOR = 24,SOUND_ONOFF_MIN = 28,SOUND_ONOFF_MAX = 30,SOUND_MIXER_NONE = 31,SOUND_MIXER_ENHANCE = 31,SOUND_MIXER_MUTE = 31,SOUND_MIXER_LOUD = 31,SOUND_MIXER_RECSRC = 255,SOUND_MIXER_DEVMASK = 254,SOUND_MIXER_RECMASK = 253,SOUND_MIXER_CAPS = 252,SOUND_CAP_EXCL_INPUT = 1,SOUND_MIXER_STEREODEVS = 251,SOUND_MIXER_OUTSRC = 250,SOUND_MIXER_OUTMASK = 249,SOUND_MASK_VOLUME = 1,SOUND_MASK_BASS = 2,SOUND_MASK_TREBLE = 4,SOUND_MASK_SYNTH = 8,SOUND_MASK_PCM = 16,SOUND_MASK_SPEAKER = 32,SOUND_MASK_LINE = 64,SOUND_MASK_MIC = 128,SOUND_MASK_CD = 256,SOUND_MASK_IMIX = 512,SOUND_MASK_ALTPCM = 1024,SOUND_MASK_RECLEV = 2048,SOUND_MASK_IGAIN = 4096,SOUND_MASK_OGAIN = 8192,SOUND_MASK_LINE1 = 16384,SOUND_MASK_LINE2 = 32768,SOUND_MASK_LINE3 = 65536,SOUND_MASK_DIGITAL1 = 131072,SOUND_MASK_DIGITAL2 = 262144,SOUND_MASK_DIGITAL3 = 524288,SOUND_MASK_PHONEIN = 1048576,SOUND_MASK_PHONEOUT = 2097152,SOUND_MASK_RADIO = 8388608,SOUND_MASK_VIDEO = 4194304,SOUND_MASK_MONITOR = 16777216,SOUND_MASK_MUTE = 2147483648,SOUND_MASK_ENHANCE = 2147483648,SOUND_MASK_LOUD = 2147483648,};
enum MACRO_SOUND_PCM {SOUND_PCM_POST = 536891400,SOUND_PCM_RESET = 536891392,SOUND_PCM_SYNC = 536891393,SOUND_PCM_NONBLOCK = 536891406,SOUND_PCM_SETSYNCRO = 536891413,};
enum MACRO_SO_ACCEPTCONN {SO_ACCEPTCONN = 30,SO_PEERSEC = 31,SO_PASSSEC = 34,SO_TIMESTAMPNS = 35,};
enum MACRO_SO_MARK {SO_MARK = 36,SO_TIMESTAMPING = 37,};
enum MACRO_SO_PEEK {SO_PEEK_OFF = 42,SO_NOFCS = 43,SO_LOCK_FILTER = 44,SO_SELECT_ERR_QUEUE = 45,SO_BUSY_POLL = 46,SO_MAX_PACING_RATE = 47,SO_BPF_EXTENSIONS = 48,SO_INCOMING_CPU = 49,SO_ATTACH_BPF = 50,SO_DETACH_BPF = 27,};
enum MACRO_SO_PROTOCOL {SO_PROTOCOL = 38,SO_DOMAIN = 39,SO_RXQ_OVFL = 40,SO_WIFI_STATUS = 41,};
enum MACRO_SPDIF {SPDIF_PRO = 0x1,SPDIF_N_AUD = 0x2,SPDIF_COPY = 0x4,SPDIF_PRE = 0x8,SPDIF_CC = 0x7F0,SPDIF_L = 0x800,SPDIF_DRS = 0x4000,SPDIF_V = 0x8000,};
enum MACRO_SS {SS_ET_SUBSYSTEM_ABORTED = 748800,SS_ET_VERSION_MISMATCH = 748801,SS_ET_NULL_INV = 748802,SS_ET_NO_INFO_DIR = 748803,SS_ET_COMMAND_NOT_FOUND = 748804,SS_ET_LINE_ABORTED = 748805,SS_ET_EOF = 748806,SS_ET_PERMISSION_DENIED = 748807,SS_ET_TABLE_NOT_FOUND = 748808,SS_ET_NO_HELP_FILE = 748809,SS_ET_ESCAPE_DISABLED = 748810,SS_ET_UNIMPLEMENTED = 748811,};
enum MACRO_SS_RQT {SS_RQT_TBL_V2 = 2,SS_RP_V1 = 1,SS_OPT_DONT_LIST = 1,SS_OPT_DONT_SUMMARIZE = 2,};
enum MACRO_STA {STA_PLL = 0x1,STA_PPSFREQ = 0x2,STA_PPSTIME = 0x4,STA_FLL = 0x8,STA_INS = 0x10,STA_DEL = 0x20,STA_UNSYNC = 0x40,STA_FREQHOLD = 0x80,STA_PPSSIGNAL = 0x100,STA_PPSJITTER = 0x200,STA_PPSWANDER = 0x400,STA_PPSERROR = 0x800,STA_CLOCKERR = 0x1000,STA_NANO = 0x2000,STA_MODE = 0x4000,STA_CLK = 0x8000,STA_RONLY = 0xFF00,};
enum MACRO_STB {STB_LOCAL = 0,STB_GLOBAL = 1,STB_WEAK = 2,STB_NUM = 3,STB_LOOS = 10,STB_GNU_UNIQUE = 10,STB_HIOS = 12,STB_LOPROC = 13,STB_HIPROC = 15,};
enum MACRO_STB_MIPS {STB_MIPS_SPLIT_COMMON = 13,};
enum MACRO_STN {STN_UNDEF = 0,};
enum MACRO_STO {STO_MIPS_DEFAULT = 0x0,STO_MIPS_INTERNAL = 0x1,STO_MIPS_HIDDEN = 0x2,STO_MIPS_PROTECTED = 0x3,STO_MIPS_PLT = 0x8,STO_MIPS_SC_ALIGN_UNUSED = 0xFF,};
enum MACRO_STO_ALPHA {STO_ALPHA_NOPV = 0x80,STO_ALPHA_STD_GPLOAD = 0x88,};
enum MACRO_STO_PPC64 {STO_PPC64_LOCAL_BIT = 5,STO_PPC64_LOCAL_MASK = 224,};
enum MACRO_STRCOUNT {STRCOUNT = 414,};
enum MACRO_STRU {STRU_F = 1,STRU_R = 2,STRU_P = 3,};
enum MACRO_STT {STT_NOTYPE = 0,STT_OBJECT = 1,STT_FUNC = 2,STT_SECTION = 3,STT_FILE = 4,STT_COMMON = 5,STT_TLS = 6,STT_NUM = 7,STT_LOOS = 10,STT_GNU_IFUNC = 10,STT_HIOS = 12,STT_LOPROC = 13,STT_HIPROC = 15,};
enum MACRO_STT_ARM {STT_ARM_TFUNC = 13,STT_ARM_16BIT = 15,};
enum MACRO_STT_PARISC {STT_PARISC_MILLICODE = 13,STT_HP_OPAQUE = 11,STT_HP_STUB = 12,};
enum MACRO_STT_SPARC {STT_SPARC_REGISTER = 13,};
enum MACRO_STV {STV_DEFAULT = 0,STV_INTERNAL = 1,STV_HIDDEN = 2,STV_PROTECTED = 3,};
enum MACRO_SUBCMDMASK {SUBCMDMASK = 0xFF,};
enum MACRO_SUBCMDSHIFT {SUBCMDSHIFT = 8,};
enum MACRO_SUPPLY {SUPPLY_INTERVAL = 30,};
enum MACRO_SUSP {SUSP = 237,};
enum MACRO_SWAP {SWAP_FLAG_PREFER = 0x8000,SWAP_FLAG_PRIO_MASK = 0x7FFF,SWAP_FLAG_PRIO_SHIFT = 0x0,SWAP_FLAG_DISCARD = 0x10000,};
enum MACRO_SYMINFO {SYMINFO_BT_SELF = 0xFFFF,SYMINFO_BT_PARENT = 0xFFFE,SYMINFO_BT_LOWRESERVE = 0xFF00,SYMINFO_FLG_DIRECT = 0x1,SYMINFO_FLG_PASSTHRU = 0x2,SYMINFO_FLG_COPY = 0x4,SYMINFO_FLG_LAZYLOAD = 0x8,SYMINFO_NONE = 0x0,SYMINFO_CURRENT = 0x1,SYMINFO_NUM = 0x2,};
enum MACRO_SYMTYPE {SYMTYPE = 50,};
enum MACRO_SYNCH {SYNCH = 242,};
enum MACRO_SYNTH {SYNTH_TYPE_FM = 0,SYNTH_TYPE_SAMPLE = 1,SYNTH_TYPE_MIDI = 2,};
enum MACRO_SYNTH_CAP {SYNTH_CAP_PERCMODE = 0x1,SYNTH_CAP_OPL3 = 0x2,SYNTH_CAP_INPUT = 0x4,};
enum MACRO_SYS {SYS__llseek = 140,SYS__newselect = 142,SYS__sysctl = 149,SYS_accept = 330,SYS_accept4 = 344,SYS_access = 33,SYS_acct = 51,SYS_add_key = 269,SYS_adjtimex = 124,SYS_afs_syscall = 137,SYS_alarm = 27,SYS_bdflush = 134,SYS_bind = 327,SYS_bpf = 361,SYS_break = 17,SYS_brk = 45,SYS_capget = 183,SYS_capset = 184,SYS_chdir = 12,SYS_chmod = 15,SYS_chown = 181,SYS_chroot = 61,SYS_clock_adjtime = 347,SYS_clock_getres = 247,SYS_clock_gettime = 246,SYS_clock_nanosleep = 248,SYS_clock_settime = 245,SYS_clone = 120,SYS_close = 6,SYS_connect = 328,SYS_creat = 8,SYS_create_module = 127,SYS_delete_module = 129,SYS_dup = 41,SYS_dup2 = 63,SYS_dup3 = 316,SYS_epoll_create = 236,SYS_epoll_create1 = 315,SYS_epoll_ctl = 237,SYS_epoll_pwait = 303,SYS_epoll_wait = 238,SYS_eventfd = 307,SYS_eventfd2 = 314,SYS_execve = 11,SYS_execveat = 362,SYS_exit = 1,SYS_exit_group = 234,SYS_faccessat = 298,SYS_fadvise64 = 233,SYS_fadvise64_64 = 254,SYS_fallocate = 309,SYS_fanotify_init = 323,SYS_fanotify_mark = 324,SYS_fchdir = 133,SYS_fchmod = 94,SYS_fchmodat = 297,SYS_fchown = 95,SYS_fchownat = 289,SYS_fcntl = 55,SYS_fcntl64 = 204,SYS_fdatasync = 148,SYS_fgetxattr = 214,SYS_finit_module = 353,SYS_flistxattr = 217,SYS_flock = 143,SYS_fork = 2,SYS_fremovexattr = 220,SYS_fsetxattr = 211,SYS_fstat = 108,SYS_fstat64 = 197,SYS_fstatat64 = 291,SYS_fstatfs = 100,SYS_fstatfs64 = 253,SYS_fsync = 118,SYS_ftime = 35,SYS_ftruncate = 93,SYS_ftruncate64 = 194,SYS_futex = 221,SYS_futimesat = 290,SYS_get_kernel_syms = 130,SYS_get_mempolicy = 260,SYS_get_robust_list = 299,SYS_getcpu = 302,SYS_getcwd = 182,SYS_getdents = 141,SYS_getdents64 = 202,SYS_getegid = 50,SYS_geteuid = 49,SYS_getgid = 47,SYS_getgroups = 80,SYS_getitimer = 105,SYS_getpeername = 332,SYS_getpgid = 132,SYS_getpgrp = 65,SYS_getpid = 20,SYS_getpmsg = 187,SYS_getppid = 64,SYS_getpriority = 96,SYS_getrandom = 359,SYS_getresgid = 170,SYS_getresuid = 165,SYS_getrlimit = 76,SYS_getrusage = 77,SYS_getsid = 147,SYS_getsockname = 331,SYS_getsockopt = 340,SYS_gettid = 207,SYS_gettimeofday = 78,SYS_getuid = 24,SYS_getxattr = 212,SYS_gtty = 32,SYS_idle = 112,SYS_init_module = 128,SYS_inotify_add_watch = 276,SYS_inotify_init = 275,SYS_inotify_init1 = 318,SYS_inotify_rm_watch = 277,SYS_io_cancel = 231,SYS_io_destroy = 228,SYS_io_getevents = 229,SYS_io_setup = 227,SYS_io_submit = 230,SYS_ioctl = 54,SYS_ioperm = 101,SYS_iopl = 110,SYS_ioprio_get = 274,SYS_ioprio_set = 273,SYS_ipc = 117,SYS_kcmp = 354,SYS_kexec_load = 268,SYS_keyctl = 271,SYS_kill = 37,SYS_lchown = 16,SYS_lgetxattr = 213,SYS_link = 9,SYS_linkat = 294,SYS_listen = 329,SYS_listxattr = 215,SYS_llistxattr = 216,SYS_lock = 53,SYS_lookup_dcookie = 235,SYS_lremovexattr = 219,SYS_lseek = 19,SYS_lsetxattr = 210,SYS_lstat = 107,SYS_lstat64 = 196,SYS_madvise = 205,SYS_mbind = 259,SYS_memfd_create = 360,SYS_migrate_pages = 258,SYS_mincore = 206,SYS_mkdir = 39,SYS_mkdirat = 287,SYS_mknod = 14,SYS_mknodat = 288,SYS_mlock = 150,SYS_mlockall = 152,SYS_mmap = 90,SYS_mmap2 = 192,SYS_modify_ldt = 123,SYS_mount = 21,SYS_move_pages = 301,SYS_mprotect = 125,SYS_mpx = 56,SYS_mq_getsetattr = 267,SYS_mq_notify = 266,SYS_mq_open = 262,SYS_mq_timedreceive = 265,SYS_mq_timedsend = 264,SYS_mq_unlink = 263,SYS_mremap = 163,SYS_msync = 144,SYS_multiplexer = 201,SYS_munlock = 151,SYS_munlockall = 153,SYS_munmap = 91,SYS_name_to_handle_at = 345,SYS_nanosleep = 162,SYS_nfsservctl = 168,SYS_nice = 34,SYS_oldfstat = 28,SYS_oldlstat = 84,SYS_oldolduname = 59,SYS_oldstat = 18,SYS_olduname = 109,SYS_open = 5,SYS_open_by_handle_at = 346,SYS_openat = 286,SYS_pause = 29,SYS_pciconfig_iobase = 200,SYS_pciconfig_read = 198,SYS_pciconfig_write = 199,SYS_perf_event_open = 319,SYS_personality = 136,SYS_pipe = 42,SYS_pipe2 = 317,SYS_pivot_root = 203,SYS_poll = 167,SYS_ppoll = 281,SYS_prctl = 171,SYS_pread64 = 179,SYS_preadv = 320,SYS_prlimit64 = 325,SYS_process_vm_readv = 351,SYS_process_vm_writev = 352,SYS_prof = 44,SYS_profil = 98,SYS_pselect6 = 280,SYS_ptrace = 26,SYS_putpmsg = 188,SYS_pwrite64 = 180,SYS_pwritev = 321,SYS_query_module = 166,SYS_quotactl = 131,SYS_read = 3,SYS_readahead = 191,SYS_readdir = 89,SYS_readlink = 85,SYS_readlinkat = 296,SYS_readv = 145,SYS_reboot = 88,SYS_recv = 336,SYS_recvfrom = 337,SYS_recvmmsg = 343,SYS_recvmsg = 342,SYS_remap_file_pages = 239,SYS_removexattr = 218,SYS_rename = 38,SYS_renameat = 293,SYS_renameat2 = 357,SYS_request_key = 270,SYS_restart_syscall = 0,SYS_rmdir = 40,SYS_rt_sigaction = 173,SYS_rt_sigpending = 175,SYS_rt_sigprocmask = 174,SYS_rt_sigqueueinfo = 177,SYS_rt_sigreturn = 172,SYS_rt_sigsuspend = 178,SYS_rt_sigtimedwait = 176,SYS_rt_tgsigqueueinfo = 322,SYS_rtas = 255,SYS_sched_get_priority_max = 159,SYS_sched_get_priority_min = 160,SYS_sched_getaffinity = 223,SYS_sched_getattr = 356,SYS_sched_getparam = 155,SYS_sched_getscheduler = 157,SYS_sched_rr_get_interval = 161,SYS_sched_setaffinity = 222,SYS_sched_setattr = 355,SYS_sched_setparam = 154,SYS_sched_setscheduler = 156,SYS_sched_yield = 158,SYS_seccomp = 358,SYS_select = 82,SYS_send = 334,SYS_sendfile = 186,SYS_sendfile64 = 226,SYS_sendmmsg = 349,SYS_sendmsg = 341,SYS_sendto = 335,SYS_set_mempolicy = 261,SYS_set_robust_list = 300,SYS_set_tid_address = 232,SYS_setdomainname = 121,SYS_setfsgid = 139,SYS_setfsuid = 138,SYS_setgid = 46,SYS_setgroups = 81,SYS_sethostname = 74,SYS_setitimer = 104,SYS_setns = 350,SYS_setpgid = 57,SYS_setpriority = 97,SYS_setregid = 71,SYS_setresgid = 169,SYS_setresuid = 164,SYS_setreuid = 70,SYS_setrlimit = 75,SYS_setsid = 66,SYS_setsockopt = 339,SYS_settimeofday = 79,SYS_setuid = 23,SYS_setxattr = 209,SYS_sgetmask = 68,SYS_shutdown = 338,SYS_sigaction = 67,SYS_sigaltstack = 185,SYS_signal = 48,SYS_signalfd = 305,SYS_signalfd4 = 313,SYS_sigpending = 73,SYS_sigprocmask = 126,SYS_sigreturn = 119,SYS_sigsuspend = 72,SYS_socket = 326,SYS_socketcall = 102,SYS_socketpair = 333,SYS_splice = 283,SYS_spu_create = 279,SYS_spu_run = 278,SYS_ssetmask = 69,SYS_stat = 106,SYS_stat64 = 195,SYS_statfs = 99,SYS_statfs64 = 252,SYS_stime = 25,SYS_stty = 31,SYS_subpage_prot = 310,SYS_swapcontext = 249,SYS_swapoff = 115,SYS_swapon = 87,SYS_symlink = 83,SYS_symlinkat = 295,SYS_sync = 36,SYS_sync_file_range2 = 308,SYS_syncfs = 348,SYS_sys_debug_setcontext = 256,SYS_sysfs = 135,SYS_sysinfo = 116,SYS_syslog = 103,SYS_tee = 284,SYS_tgkill = 250,SYS_time = 13,SYS_timer_create = 240,SYS_timer_delete = 244,SYS_timer_getoverrun = 243,SYS_timer_gettime = 242,SYS_timer_settime = 241,SYS_timerfd_create = 306,SYS_timerfd_gettime = 312,SYS_timerfd_settime = 311,SYS_times = 43,SYS_tkill = 208,SYS_truncate = 92,SYS_truncate64 = 193,SYS_tuxcall = 225,SYS_ugetrlimit = 190,SYS_ulimit = 58,SYS_umask = 60,SYS_umount = 22,SYS_umount2 = 52,SYS_uname = 122,SYS_unlink = 10,SYS_unlinkat = 292,SYS_unshare = 282,SYS_uselib = 86,SYS_ustat = 62,SYS_utime = 30,SYS_utimensat = 304,SYS_utimes = 251,SYS_vfork = 189,SYS_vhangup = 111,SYS_vm86 = 113,SYS_vmsplice = 285,SYS_wait4 = 114,SYS_waitid = 272,SYS_waitpid = 7,SYS_write = 4,SYS_writev = 146,};
enum MACRO_SYSEX {SYSEX_PATCH = 0xFD05,MAUI_PATCH = 0xFD06,};
enum MACRO_SYS_NMLN {SYS_NMLN = 65,};
enum MACRO_S_BLKSIZE {S_BLKSIZE = 512,};
enum MACRO_S_INPUT {S_INPUT = 0x1,S_HIPRI = 0x2,S_OUTPUT = 0x4,S_MSG = 0x8,S_ERROR = 0x10,S_HANGUP = 0x20,S_RDNORM = 0x40,S_WRNORM = 0x4,S_RDBAND = 0x80,S_WRBAND = 0x100,S_BANDURG = 0x200,};
enum MACRO_S_IREAD {S_IREAD = 256,S_IWRITE = 128,S_IEXEC = 64,};
enum MACRO_TAB0 {TAB0 = 0x0,TAB1 = 0x400,TAB2 = 0x800,};
enum MACRO_TAB3 {TAB3 = 0xC00,CRDLY = 0x3000,};
enum MACRO_TALK {TALK_VERSION = 1,};
enum MACRO_TCFLSH {TCFLSH = 536900639,};
enum MACRO_TCIFLUSH {TCIFLUSH = 0,TCOFLUSH = 1,TCIOFLUSH = 2,};
enum MACRO_TCION {TCION = 3,};
enum MACRO_TCOOFF {TCOOFF = 0,TCOON = 1,TCIOFF = 2,};
enum MACRO_TCP {TCP_NODELAY = 1,TCP_MAXSEG = 2,TCP_CORK = 3,TCP_KEEPIDLE = 4,TCP_KEEPINTVL = 5,TCP_KEEPCNT = 6,TCP_SYNCNT = 7,TCP_LINGER2 = 8,TCP_DEFER_ACCEPT = 9,TCP_WINDOW_CLAMP = 10,TCP_INFO = 11,TCP_QUICKACK = 12,TCP_CONGESTION = 13,TCP_MD5SIG = 14,TCP_COOKIE_TRANSACTIONS = 15,TCP_THIN_LINEAR_TIMEOUTS = 16,TCP_THIN_DUPACK = 17,TCP_USER_TIMEOUT = 18,TCP_REPAIR = 19,TCP_REPAIR_QUEUE = 20,TCP_QUEUE_SEQ = 21,TCP_REPAIR_OPTIONS = 22,TCP_FASTOPEN = 23,TCP_TIMESTAMP = 24,};
enum MACRO_TCPI {TCPI_OPT_TIMESTAMPS = 1,TCPI_OPT_SACK = 2,TCPI_OPT_WSCALE = 4,TCPI_OPT_ECN = 8,TCPI_OPT_ECN_SEEN = 16,TCPI_OPT_SYN_DATA = 32,};
enum MACRO_TCPOLEN {TCPOLEN_MAXSEG = 4,};
enum MACRO_TCPOLEN_TIMESTAMP {TCPOLEN_TIMESTAMP = 10,TCPOLEN_TSTAMP_APPA = 12,};
enum MACRO_TCPOPT {TCPOPT_EOL = 0,TCPOPT_NOP = 1,TCPOPT_MAXSEG = 2,};
enum MACRO_TCPOPT_SACK {TCPOPT_SACK = 5,TCPOPT_TIMESTAMP = 8,};
enum MACRO_TCPOPT_TSTAMP {TCPOPT_TSTAMP_HDR = 16844810,};
enum MACRO_TCP_MD5SIG {TCP_MD5SIG_MAXKEYLEN = 80,TCP_COOKIE_MIN = 8,TCP_COOKIE_MAX = 16,TCP_COOKIE_PAIR_SIZE = 32,TCP_COOKIE_IN_ALWAYS = 1,TCP_COOKIE_OUT_NEVER = 2,TCP_S_DATA_IN = 4,TCP_S_DATA_OUT = 8,TCP_MSS_DEFAULT = 536,TCP_MSS_DESIRED = 1220,};
enum MACRO_TCP_MSS {TCP_MSS = 512,TCP_MAXWIN = 65535,TCP_MAX_WINSHIFT = 14,};
enum MACRO_TCSANOW {TCSANOW = 0,TCSADRAIN = 1,TCSAFLUSH = 2,};
enum MACRO_TCSBRK {TCSBRK = 536900637,};
enum MACRO_TCSBRKP {TCSBRKP = 0x5425,};
enum MACRO_TCXONC {TCXONC = 536900638,};
enum MACRO_TD {TD_THR_ANY_USER_FLAGS = 0xFFFFFFFF,TD_THR_LOWEST_PRIORITY = 0xFFFFFFEC,TD_SIGNO_MASK = 0x0,TD_EVENTSIZE = 0x2,};
enum MACRO_TELCMD {TELCMD_FIRST = 236,TELCMD_LAST = 255,};
enum MACRO_TELOPT {TELOPT_BINARY = 0,TELOPT_ECHO = 1,TELOPT_RCP = 2,TELOPT_SGA = 3,TELOPT_NAMS = 4,TELOPT_STATUS = 5,TELOPT_TM = 6,TELOPT_RCTE = 7,TELOPT_NAOL = 8,TELOPT_NAOP = 9,TELOPT_NAOCRD = 10,TELOPT_NAOHTS = 11,TELOPT_NAOHTD = 12,TELOPT_NAOFFD = 13,TELOPT_NAOVTS = 14,TELOPT_NAOVTD = 15,TELOPT_NAOLFD = 16,TELOPT_XASCII = 17,TELOPT_LOGOUT = 18,TELOPT_BM = 19,TELOPT_DET = 20,TELOPT_SUPDUP = 21,TELOPT_SUPDUPOUTPUT = 22,TELOPT_SNDLOC = 23,TELOPT_TTYPE = 24,TELOPT_EOR = 25,TELOPT_TUID = 26,TELOPT_OUTMRK = 27,TELOPT_TTYLOC = 28,TELOPT_3270REGIME = 29,TELOPT_X3PAD = 30,TELOPT_NAWS = 31,TELOPT_TSPEED = 32,TELOPT_LFLOW = 33,TELOPT_LINEMODE = 34,TELOPT_XDISPLOC = 35,TELOPT_OLD_ENVIRON = 36,TELOPT_AUTHENTICATION = 37,TELOPT_ENCRYPT = 38,TELOPT_NEW_ENVIRON = 39,TELOPT_EXOPL = 255,};
enum MACRO_TELQUAL {TELQUAL_IS = 0,TELQUAL_SEND = 1,TELQUAL_INFO = 2,TELQUAL_REPLY = 2,TELQUAL_NAME = 3,};
enum MACRO_TERMIOS {TERMIOS = 1,NAMESIZE = 256,};
enum MACRO_TGEXEC {TGEXEC = 0x8,};
enum MACRO_TGREAD {TGREAD = 0x20,};
enum MACRO_TGWRITE {TGWRITE = 0x10,};
enum MACRO_TH {TH_FIN = 0x1,TH_SYN = 0x2,TH_RST = 0x4,TH_PUSH = 0x8,TH_ACK = 0x10,TH_URG = 0x20,};
enum MACRO_TIME {BOOT_TIME = 2,NEW_TIME = 3,OLD_TIME = 4,};
enum MACRO_TIMEOUT {CLSET_TIMEOUT = 1,CLGET_TIMEOUT = 2,};
enum MACRO_TIMER {TIMER_ABSTIME = 1,};
enum MACRO_TIMER_RATE {TIMER_RATE = 30,};
enum MACRO_TIME_H {_TIME_H = 1,_BITS_TIME_H = 1,};
enum MACRO_TIME_OK {TIME_OK = 0,TIME_INS = 1,TIME_DEL = 2,TIME_OOP = 3,TIME_WAIT = 4,TIME_ERROR = 5,TIME_BAD = 5,};
enum MACRO_TIOCCBRK {TIOCCBRK = 0x5428,};
enum MACRO_TIOCCONS {TIOCCONS = 0x541D,};
enum MACRO_TIOCEXCL {TIOCEXCL = 0x540C,};
enum MACRO_TIOCGETD {TIOCGETD = 0x5424,};
enum MACRO_TIOCGICOUNT {TIOCGICOUNT = 0x545D,};
enum MACRO_TIOCGLCKTRMIOS {TIOCGLCKTRMIOS = 0x5456,};
enum MACRO_TIOCGRS485 {TIOCGRS485 = 0x542E,};
enum MACRO_TIOCGSERIAL {TIOCGSERIAL = 0x541E,};
enum MACRO_TIOCGSID {TIOCGSID = 0x5429,};
enum MACRO_TIOCGSOFTCAR {TIOCGSOFTCAR = 0x5419,};
enum MACRO_TIOCLINUX {TIOCLINUX = 0x541C,};
enum MACRO_TIOCM {TIOCM_LE = 0x1,TIOCM_DTR = 0x2,TIOCM_RTS = 0x4,TIOCM_ST = 0x8,TIOCM_SR = 0x10,TIOCM_CTS = 0x20,TIOCM_CAR = 0x40,TIOCM_RNG = 0x80,TIOCM_DSR = 0x100,TIOCM_CD = 0x40,TIOCM_RI = 0x80,TIOCM_OUT1 = 0x2000,TIOCM_OUT2 = 0x4000,TIOCM_LOOP = 0x8000,};
enum MACRO_TIOCMBIC {TIOCMBIC = 0x5417,};
enum MACRO_TIOCMBIS {TIOCMBIS = 0x5416,};
enum MACRO_TIOCMGET {TIOCMGET = 0x5415,};
enum MACRO_TIOCMIWAIT {TIOCMIWAIT = 0x545C,};
enum MACRO_TIOCMSET {TIOCMSET = 0x5418,};
enum MACRO_TIOCNOTTY {TIOCNOTTY = 0x5422,};
enum MACRO_TIOCNXCL {TIOCNXCL = 0x540D,};
enum MACRO_TIOCPKT {TIOCPKT_DATA = 0,TIOCPKT_FLUSHREAD = 1,TIOCPKT_FLUSHWRITE = 2,TIOCPKT_STOP = 4,TIOCPKT_START = 8,TIOCPKT_NOSTOP = 16,TIOCPKT_DOSTOP = 32,};
enum MACRO_TIOCPKT_0 {TIOCPKT = 0x5420,};
enum MACRO_TIOCPKT_IOCTL {TIOCPKT_IOCTL = 64,};
enum MACRO_TIOCSBRK {TIOCSBRK = 0x5427,};
enum MACRO_TIOCSCTTY {TIOCSCTTY = 0x540E,};
enum MACRO_TIOCSER {TIOCSER_TEMT = 0x1,};
enum MACRO_TIOCSERCONFIG {TIOCSERCONFIG = 0x5453,};
enum MACRO_TIOCSERGETLSR {TIOCSERGETLSR = 0x5459,};
enum MACRO_TIOCSERGETMULTI {TIOCSERGETMULTI = 0x545A,};
enum MACRO_TIOCSERGSTRUCT {TIOCSERGSTRUCT = 0x5458,};
enum MACRO_TIOCSERGWILD {TIOCSERGWILD = 0x5454,};
enum MACRO_TIOCSERSETMULTI {TIOCSERSETMULTI = 0x545B,};
enum MACRO_TIOCSERSWILD {TIOCSERSWILD = 0x5455,};
enum MACRO_TIOCSETD {TIOCSETD = 0x5423,};
enum MACRO_TIOCSLCKTRMIOS {TIOCSLCKTRMIOS = 0x5457,};
enum MACRO_TIOCSRS485 {TIOCSRS485 = 0x542F,};
enum MACRO_TIOCSSERIAL {TIOCSSERIAL = 0x541F,};
enum MACRO_TIOCSSOFTCAR {TIOCSSOFTCAR = 0x541A,};
enum MACRO_TIOCSTART {TIOCSTART = 536900718,};
enum MACRO_TIOCSTI {TIOCSTI = 0x5412,};
enum MACRO_TIOCSTOP {TIOCSTOP = 536900719,};
enum MACRO_TIOCVHANGUP {TIOCVHANGUP = 0x5437,};
enum MACRO_TLOSS {TLOSS = 5,};
enum MACRO_TMAGLEN {TMAGLEN = 6,};
enum MACRO_TMP {TMP_MAX = 238328,FILENAME_MAX = 4096,};
enum MACRO_TMR {TMR_INTERNAL = 0x1,TMR_EXTERNAL = 0x2,TMR_MODE_MIDI = 0x10,TMR_MODE_FSK = 0x20,TMR_MODE_CLS = 0x40,TMR_MODE_SMPTE = 0x80,};
enum MACRO_TMR_WAIT {TMR_WAIT_REL = 1,TMR_WAIT_ABS = 2,TMR_STOP = 3,TMR_START = 4,TMR_CONTINUE = 5,TMR_TEMPO = 6,TMR_ECHO = 8,TMR_CLOCK = 9,TMR_SPP = 10,TMR_TIMESIG = 11,};
enum MACRO_TOEXEC {TOEXEC = 0x1,REGTYPE = 0x30,};
enum MACRO_TOREAD {TOREAD = 0x4,};
enum MACRO_TOSTOP {TOSTOP = 0x400000,};
enum MACRO_TOWRITE {TOWRITE = 0x2,};
enum MACRO_TR {TR_ALEN = 6,};
enum MACRO_TRY {TRY_AGAIN = 2,};
enum MACRO_TR_RII {TR_RII = 0x80,TR_RCF_DIR_BIT = 0x80,TR_RCF_LEN_MASK = 0x1F00,TR_RCF_BROADCAST = 0x8000,TR_RCF_LIMITED_BROADCAST = 0xC000,TR_RCF_FRAME2K = 0x20,TR_RCF_BROADCAST_MASK = 0xC000,TR_MAXRIFLEN = 0x12,};
enum MACRO_TSGID {TSGID = 0x400,};
enum MACRO_TSP {TSP_ANY = 0,TSP_ADJTIME = 1,TSP_ACK = 2,TSP_MASTERREQ = 3,TSP_MASTERACK = 4,TSP_SETTIME = 5,TSP_MASTERUP = 6,TSP_SLAVEUP = 7,TSP_ELECTION = 8,TSP_ACCEPT = 9,TSP_REFUSE = 10,TSP_CONFLICT = 11,TSP_RESOLVE = 12,TSP_QUIT = 13,TSP_DATE = 14,TSP_DATEREQ = 15,TSP_DATEACK = 16,TSP_TRACEON = 17,TSP_TRACEOFF = 18,TSP_MSITE = 19,TSP_MSITEREQ = 20,TSP_TEST = 21,TSP_SETDATE = 22,TSP_SETDATEREQ = 23,TSP_LOOP = 24,};
enum MACRO_TSPTYPENUMBER {TSPTYPENUMBER = 25,};
enum MACRO_TSPVERSION {TSPVERSION = 1,};
enum MACRO_TSUID {TSUID = 0x800,};
enum MACRO_TTY {TTY_ON = 0x1,TTY_SECURE = 0x2,};
enum MACRO_TTYDEF {TTYDEF_IFLAG = 11042,TTYDEF_OFLAG = 3075,TTYDEF_LFLAG = 1483,TTYDEF_CFLAG = 23040,TTYDEF_SPEED = 13,};
enum MACRO_TUEXEC {TUEXEC = 0x40,};
enum MACRO_TUREAD {TUREAD = 0x100,};
enum MACRO_TUWRITE {TUWRITE = 0x80,};
enum MACRO_TVERSLEN {TVERSLEN = 2,};
enum MACRO_TYPE {TYPE_A = 1,TYPE_E = 2,TYPE_I = 3,TYPE_L = 4,};
enum MACRO_UCHAR {UCHAR_MAX = 255,};
enum MACRO_UDP {UDP_CORK = 1,UDP_ENCAP = 100,UDP_NO_CHECK6_TX = 101,UDP_NO_CHECK6_RX = 102,UDP_ENCAP_ESPINUDP_NON_IKE = 1,UDP_ENCAP_ESPINUDP = 2,UDP_ENCAP_L2TPINUDP = 3,};
enum MACRO_UI {UI_CMD = 0x3,};
enum MACRO_UINT {UINT_LEAST8_MAX = 255,UINT_LEAST16_MAX = 65535,UINT_LEAST32_MAX = -1,UINT_LEAST64_MAX = -1,};
enum MACRO_UINTMAX {UINTMAX_MAX = -1,};
enum MACRO_UINTPTR {UINTPTR_MAX = -1,};
enum MACRO_UINT_FAST8 {UINT_FAST8_MAX = 255,UINT_FAST16_MAX = -1,UINT_FAST32_MAX = -1,UINT_FAST64_MAX = -1,};
enum MACRO_UIO {UIO_MAXIOV = 1024,};
enum MACRO_ULLONG {ULLONG_MAX = -1,};
enum MACRO_ULONG : __int64 {ULONG_MAX = -1,LLONG_MAX = 9223372036854775807,};
enum MACRO_UNI {UNI_DIRECT_BASE = 0xF000,UNI_DIRECT_MASK = 0x1FF,};
enum MACRO_UNIMAP {GIO_UNIMAP = 0x4B66,PIO_UNIMAP = 0x4B67,};
enum MACRO_UNISCRNMAP {GIO_UNISCRNMAP = 0x4B69,PIO_UNISCRNMAP = 0x4B6A,};
enum MACRO_UNKNOWN {UNKNOWN_REQUEST = 5,};
enum MACRO_USHRT {USHRT_MAX = 65535,INT_MAX = 2147483647,UINT_MAX = -1,LONG_MAX = 2147483647,};
enum MACRO_USRQUOTA {USRQUOTA = 0,GRPQUOTA = 1,};
enum MACRO_UT {UT_LINESIZE = 32,UT_NAMESIZE = 32,UT_HOSTSIZE = 256,};
enum MACRO_UTIME {UTIME_NOW = 1073741823,UTIME_OMIT = 1073741822,};
enum MACRO_UT_UNKNOWN {UT_UNKNOWN = 0,};
enum MACRO_VEOL {VEOL = 6,};
enum MACRO_VER {VER_DEF_NONE = 0,VER_DEF_CURRENT = 1,VER_DEF_NUM = 2,VER_FLG_BASE = 1,VER_FLG_WEAK = 2,VER_NDX_LOCAL = 0,VER_NDX_GLOBAL = 1,VER_NDX_LORESERVE = 65280,VER_NDX_ELIMINATE = 65281,VER_NEED_NONE = 0,VER_NEED_CURRENT = 1,VER_NEED_NUM = 2,};
enum MACRO_VERS {CLGET_VERS = 12,CLSET_VERS = 13,};
enum MACRO_VERSION {_POSIX_VERSION = 200809,__POSIX2_THIS_VERSION = 200809,_POSIX2_VERSION = 200809,};
enum MACRO_VINTR {VINTR = 0,VQUIT = 1,VERASE = 2,};
enum MACRO_VKILL {VKILL = 3,VEOF = 4,};
enum MACRO_VLNEXT {VLNEXT = 15,VDISCARD = 16,};
enum MACRO_VMIN {VMIN = 5,};
enum MACRO_VOL {VOL_METHOD_ADAGIO = 1,VOL_METHOD_LINEAR = 2,};
enum MACRO_VREPRINT {VREPRINT = 11,};
enum MACRO_VSTART {VSTART = 13,};
enum MACRO_VSTOP {VSTOP = 14,};
enum MACRO_VSUSP {VSUSP = 12,};
enum MACRO_VSWTC {VSWTC = 9,};
enum MACRO_VT {VT_OPENQRY = 0x5600,VT_GETMODE = 0x5601,VT_SETMODE = 0x5602,VT_AUTO = 0x0,VT_PROCESS = 0x1,VT_ACKACQ = 0x2,VT_GETSTATE = 0x5603,VT_SENDSIG = 0x5604,VT_RELDISP = 0x5605,VT_ACTIVATE = 0x5606,VT_WAITACTIVE = 0x5607,VT_DISALLOCATE = 0x5608,VT_RESIZE = 0x5609,VT_RESIZEX = 0x560A,VT_LOCKSWITCH = 0x560B,VT_UNLOCKSWITCH = 0x560C,VT_GETHIFONTMASK = 0x560D,VT_EVENT_SWITCH = 0x1,VT_EVENT_BLANK = 0x2,VT_EVENT_UNBLANK = 0x4,VT_EVENT_RESIZE = 0x8,VT_MAX_EVENT = 0xF,VT_WAITEVENT = 0x560E,VT_SETACTIVATE = 0x560F,};
enum MACRO_VT0 {VT0 = 0x0,VT1 = 0x10000,};
enum MACRO_VTIME {VTIME = 7,VEOL2 = 8,};
enum MACRO_VTIMES {VTIMES_UNITS_PER_SECOND = 60,};
enum MACRO_VWERASE {VWERASE = 10,};
enum MACRO_WAIT {WAIT_ANY = -1,WAIT_MYPGRP = 0,};
enum MACRO_WAITTIME {MIN_WAITTIME = 2,MAX_WAITTIME = 5,};
enum MACRO_WAVE {WAVE_16_BITS = 0x1,WAVE_UNSIGNED = 0x2,WAVE_LOOPING = 0x4,WAVE_BIDIR_LOOP = 0x8,WAVE_LOOP_BACK = 0x10,WAVE_SUSTAIN_ON = 0x20,WAVE_ENVELOPES = 0x40,WAVE_FAST_RELEASE = 0x80,WAVE_VIBRATO = 0x10000,WAVE_TREMOLO = 0x20000,WAVE_SCALE = 0x40000,WAVE_FRACTIONS = 0x80000,WAVE_ROM = 0x40000000,WAVE_MULAW = 0x20000000,};
enum MACRO_WCHAR {WCHAR_MIN = -2147483648,WCHAR_MAX = 2147483647,};
enum MACRO_WCOREFLAG {WCOREFLAG = 128,};
enum MACRO_WEOF {WEOF = 0xFFFFFFFF,};
enum MACRO_WILL {WILL = 251,};
enum MACRO_WINDOW {TCPOPT_WINDOW = 3,TCPOLEN_WINDOW = 3,};
enum MACRO_WINT {WINT_MIN = 0,WINT_MAX = -1,};
enum MACRO_WIRELESS {WIRELESS_EXT = 22,};
enum MACRO_WNOHANG {WNOHANG = 1,WUNTRACED = 2,};
enum MACRO_WONT {WONT = 252,};
enum MACRO_WSTOPPED {WSTOPPED = 2,WEXITED = 4,WCONTINUED = 8,WNOWAIT = 16777216,__WNOTHREAD = 536870912,__WALL = 1073741824,__WCLONE = -2147483648,};
enum MACRO_XATTR {XATTR_NAME_MAX = 255,XATTR_SIZE_MAX = 65536,XATTR_LIST_MAX = 65536,};
enum MACRO_XID {CLGET_XID = 10,CLSET_XID = 11,};
enum MACRO_XTABS {XTABS = 0xC00,};
enum MACRO_Z {Z_NO_FLUSH = 0,Z_PARTIAL_FLUSH = 1,Z_SYNC_FLUSH = 2,Z_FULL_FLUSH = 3,Z_FINISH = 4,Z_BLOCK = 5,Z_TREES = 6,Z_OK = 0,Z_STREAM_END = 1,Z_NEED_DICT = 2,Z_ERRNO = -1,Z_STREAM_ERROR = -2,Z_DATA_ERROR = -3,Z_MEM_ERROR = -4,Z_BUF_ERROR = -5,Z_VERSION_ERROR = -6,Z_NO_COMPRESSION = 0,Z_BEST_SPEED = 1,Z_BEST_COMPRESSION = 9,Z_DEFAULT_COMPRESSION = -1,Z_FILTERED = 1,Z_HUFFMAN_ONLY = 2,Z_RLE = 3,Z_FIXED = 4,Z_DEFAULT_STRATEGY = 0,Z_BINARY = 0,Z_TEXT = 1,Z_ASCII = 1,Z_UNKNOWN = 2,Z_DEFLATED = 8,Z_NULL = 0,};
enum MACRO_ZLIB {ZLIB_VERNUM = 0x1280,ZLIB_VER_MAJOR = 0x1,ZLIB_VER_MINOR = 0x2,ZLIB_VER_REVISION = 0x8,ZLIB_VER_SUBREVISION = 0x0,};
enum MACRO__ALIASES {_ALIASES_H = 1,_AR_H = 1,};
enum MACRO__ALLOCA {_ALLOCA_H = 1,_AIO_H = 1,};
enum MACRO__ARGZ {_ARGZ_H = 1,_STRING_H = 1,_ASSERT_H = 1,};
enum MACRO__ARPA {_ARPA_FTP_H = 1,};
enum MACRO__ARPA_INET {_ARPA_INET_H = 1,_ARPA_TELNET_H = 1,};
enum MACRO__ARPA_TFTP {_ARPA_TFTP_H = 1,};
enum MACRO__ATFILE {_ATFILE_SOURCE = 1,};
enum MACRO__BITS {_BITS_WCHAR_H = 1,};
enum MACRO__BITS_BYTESWAP {_BITS_BYTESWAP_H = 1,};
enum MACRO__BITS_LOCALE {_BITS_LOCALE_H = 1,};
enum MACRO__BITS_POSIX {_BITS_POSIX_OPT_H = 1,};
enum MACRO__BITS_POSIX1 {_BITS_POSIX1_LIM_H = 1,};
enum MACRO__BITS_POSIX2 {_BITS_POSIX2_LIM_H = 1,};
enum MACRO__BITS_SETJMP {_BITS_SETJMP_H = 1,};
enum MACRO__BITS_SIGTHREAD {_BITS_SIGTHREAD_H = 1,};
enum MACRO__BITS_SOCKADDR {_BITS_SOCKADDR_H = 1,};
enum MACRO__BITS_STAT {_BITS_STAT_H = 1,};
enum MACRO__BITS_TIMEX {_BITS_TIMEX_H = 1,};
enum MACRO__BYTESWAP {_BYTESWAP_H = 1,};
enum MACRO__CPIO {_CPIO_H = 1,};
enum MACRO__CRYPT {_CRYPT_H = 1,};
enum MACRO__CTYPE {_CTYPE_H = 1,_XLOCALE_H = 1,_GETOPT_H = 1,};
enum MACRO__DEFAULT {_DEFAULT_SOURCE = 1,};
enum MACRO__DIRENT {_DIRENT_H = 1,};
enum MACRO__DLFCN {_DLFCN_H = 1,};
enum MACRO__ELF {_ELF_H = 1,};
enum MACRO__ENDIAN {_ENDIAN_H = 1,};
enum MACRO__ENVZ {_ENVZ_H = 1,_ERR_H = 1,_ERROR_H = 1,};
enum MACRO__ERRNO {_ERRNO_H = 1,};
enum MACRO__EXECINFO {_EXECINFO_H = 1,_FCNTL_H = 1,};
enum MACRO__FE {_FE_INEXACT = 33554432,_FE_DIVBYZERO = 67108864,_FE_UNDERFLOW = 134217728,_FE_OVERFLOW = 268435456,_FE_INVALID = 536870912,_FE_TONEAREST = 0,_FE_TOWARDZERO = 1,_FE_UPWARD = 2,_FE_DOWNWARD = 3,};
enum MACRO__FENV {_FENV_H = 1,};
enum MACRO__FNMATCH {_FNMATCH_H = 1,};
enum MACRO__FP {_FP_NAN = 0,_FP_INFINITE = 1,_FP_ZERO = 2,_FP_SUBNORMAL = 3,_FP_NORMAL = 4,};
enum MACRO__FPU {_FPU_RC_NEAREST = 0x0,_FPU_RC_DOWN = 0x3,_FPU_RC_UP = 0x2,_FPU_RC_ZERO = 0x1,_FPU_MASK_NI = 0x4,_FPU_MASK_ZM = 0x10,_FPU_MASK_OM = 0x40,_FPU_MASK_UM = 0x20,_FPU_MASK_XM = 0x8,_FPU_MASK_IM = 0x80,_FPU_RESERVED = 0xFFFFFF00,_FPU_DEFAULT = 0x0,_FPU_IEEE = 0xF0,};
enum MACRO__FSTAB {_FSTAB_H = 1,_FTS_H = 1,};
enum MACRO__FTW {_FTW_H = 1,_SYS_STAT_H = 1,};
enum MACRO__G {_G_config_h = 1,};
enum MACRO__GCONV {_GCONV_H = 1,};
enum MACRO__GDBM {_GDBM_MIN_ERRNO = 0,_GDBM_MAX_ERRNO = 28,};
enum MACRO__GLOB {_GLOB_H = 1,};
enum MACRO__GNU {_GNU_VERSIONS_H = 1,_GNU_OBSTACK_INTERFACE_VERSION = 1,_GNU_REGEX_INTERFACE_VERSION = 1,_GNU_GLOB_INTERFACE_VERSION = 1,_GNU_GETOPT_INTERFACE_VERSION = 2,};
enum MACRO__GRP {_GRP_H = 1,};
enum MACRO__GUS {_GUS_NUMVOICES = 0x0,_GUS_VOICESAMPLE = 0x1,_GUS_VOICEON = 0x2,_GUS_VOICEOFF = 0x3,_GUS_VOICEMODE = 0x4,_GUS_VOICEBALA = 0x5,_GUS_VOICEFREQ = 0x6,_GUS_VOICEVOL = 0x7,_GUS_RAMPRANGE = 0x8,_GUS_RAMPRATE = 0x9,_GUS_RAMPMODE = 0xA,_GUS_RAMPON = 0xB,_GUS_RAMPOFF = 0xC,_GUS_VOICEFADE = 0xD,_GUS_VOLUME_SCALE = 0xE,_GUS_VOICEVOL2 = 0xF,_GUS_VOICE_POS = 0x10,};
enum MACRO__G_HAVE {_G_HAVE_MMAP = 1,_G_HAVE_MREMAP = 1,_G_IO_IO_FILE_VERSION = 131073,_G_HAVE_ST_BLKSIZE = 0,_G_BUFSIZ = 8192,};
enum MACRO__HAVE {_HAVE_UT_TYPE = 1,_HAVE_UT_PID = 1,_HAVE_UT_ID = 1,_HAVE_UT_TV = 1,_HAVE_UT_HOST = 1,};
enum MACRO__HAVE_STRUCT {_HAVE_STRUCT_TERMIOS_C_ISPEED = 1,_HAVE_STRUCT_TERMIOS_C_OSPEED = 1,};
enum MACRO__ICONV {_ICONV_H = 1,_IEEE754_H = 1,};
enum MACRO__IFADDRS {_IFADDRS_H = 1,_SYS_SOCKET_H = 1,_SYS_UIO_H = 1,_BITS_UIO_H = 1,};
enum MACRO__INTTYPES {_INTTYPES_H = 1,};
enum MACRO__IO {_IO_HAVE_ST_BLKSIZE = 0,_IO_BUFSIZ = 8192,_IO_UNIFIED_JUMPTABLES = 1,};
enum MACRO__IOC {_IOC_SIZEBITS = 13,_IOC_DIRBITS = 3,_IOC_NONE = 1,_IOC_READ = 2,_IOC_WRITE = 4,_IOC_NRBITS = 8,_IOC_TYPEBITS = 8,_IOC_NRMASK = 255,_IOC_TYPEMASK = 255,_IOC_SIZEMASK = 8191,_IOC_DIRMASK = 7,_IOC_NRSHIFT = 0,_IOC_TYPESHIFT = 8,_IOC_SIZESHIFT = 16,_IOC_DIRSHIFT = 29,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,BUFSIZ = 8192,};
enum MACRO__IOS {_IOS_INPUT = 1,_IOS_OUTPUT = 2,_IOS_ATEND = 4,_IOS_APPEND = 8,_IOS_TRUNC = 16,_IOS_NOCREATE = 32,_IOS_NOREPLACE = 64,_IOS_BIN = 128,};
enum MACRO__IO_MAGIC {_IO_MAGIC_MASK = 0xFFFF0000,_IO_USER_BUF = 0x1,_IO_UNBUFFERED = 0x2,_IO_NO_READS = 0x4,_IO_NO_WRITES = 0x8,_IO_EOF_SEEN = 0x10,_IO_ERR_SEEN = 0x20,_IO_DELETE_DONT_CLOSE = 0x40,_IO_LINKED = 0x80,_IO_IN_BACKUP = 0x100,_IO_LINE_BUF = 0x200,_IO_TIED_PUT_GET = 0x400,_IO_CURRENTLY_PUTTING = 0x800,_IO_IS_APPENDING = 0x1000,_IO_IS_FILEBUF = 0x2000,_IO_BAD_SEEN = 0x4000,_IO_USER_LOCK = 0x8000,_IO_FLAGS2_MMAP = 0x1,_IO_FLAGS2_NOTCANCEL = 0x2,_IO_FLAGS2_USER_WBUF = 0x8,_IO_SKIPWS = 0x1,_IO_LEFT = 0x2,_IO_RIGHT = 0x4,_IO_INTERNAL = 0x8,_IO_DEC = 0x10,_IO_OCT = 0x20,_IO_HEX = 0x40,_IO_SHOWBASE = 0x80,_IO_SHOWPOINT = 0x100,_IO_UPPERCASE = 0x200,_IO_SHOWPOS = 0x400,_IO_SCIENTIFIC = 0x800,_IO_FIXED = 0x1000,_IO_UNITBUF = 0x2000,_IO_STDIO = 0x4000,_IO_DONT_CLOSE = 0x8000,_IO_BOOLALPHA = 0x10000,};
enum MACRO__K {_K_SS_MAXSIZE = 128,};
enum MACRO__LANGINFO {_LANGINFO_H = 1,_NL_TYPES_H = 1,};
enum MACRO__LAST {_LAST_ERRNO = 516,};
enum MACRO__LFS64 {_LFS64_STDIO = 1,};
enum MACRO__LIBC {_LIBC_LIMITS_H_ = 1,};
enum MACRO__LIBGEN {_LIBGEN_H = 1,_LIBINTL_H = 1,};
enum MACRO__LIMITS {_LIMITS_H = 1,};
enum MACRO__LINK {_LINK_H = 1,};
enum MACRO__LINUX {_LINUX_QUOTA_VERSION = 2,};
enum MACRO__LOCALE {_LOCALE_H = 1,};
enum MACRO__MALLOC {_MALLOC_H = 1,};
enum MACRO__MATH {_MATH_H = 1,_MATH_H_MATHDEF = 1,};
enum MACRO__MCHECK {_MCHECK_H = 1,_MEMORY_H = 1,_MNTENT_H = 1,_MONETARY_H = 1,_MQUEUE_H = 1,};
enum MACRO__MKNOD {_MKNOD_VER_LINUX = 1,_MKNOD_VER_SVR4 = 2,_MKNOD_VER = 1,};
enum MACRO__NET {_NET_IF_ARP_H = 1,};
enum MACRO__NETASH {_NETASH_ASH_H = 1,};
enum MACRO__NETATALK {_NETATALK_AT_H = 1,};
enum MACRO__NETAX25 {_NETAX25_AX25_H = 1,};
enum MACRO__NETDB {_NETDB_H = 1,_NETINET_IN_H = 1,};
enum MACRO__NETECONET {_NETECONET_EC_H = 1,};
enum MACRO__NETINET {_NETINET_IF_FDDI_H = 1,};
enum MACRO__NETINET_IF {_NETINET_IF_TR_H = 1,};
enum MACRO__NETINET_IGMP {_NETINET_IGMP_H = 1,};
enum MACRO__NETINET_IN {_NETINET_IN_SYSTM_H = 1,__NETINET_IP_H = 1,};
enum MACRO__NETINET_IP6 {_NETINET_IP6_H = 1,};
enum MACRO__NETINET_TCP {_NETINET_TCP_H = 1,};
enum MACRO__NETROM {_NETROM_NETROM_H = 1,};
enum MACRO__NETROSE {_NETROSE_ROSE_H = 1,};
enum MACRO__NET_PPP {_NET_PPP_DEFS_H = 1,};
enum MACRO__NET_ROUTE {_NET_ROUTE_H = 1,};
enum MACRO__NSS {_NSS_H = 1,_OBSTACK_H = 1,_SYS_POLL_H = 1,};
enum MACRO__POSIX {_POSIX_SOURCE = 1,_POSIX_C_SOURCE = 200809,};
enum MACRO__POSIX2 {_POSIX2_BC_BASE_MAX = 99,_POSIX2_BC_DIM_MAX = 2048,_POSIX2_BC_SCALE_MAX = 99,_POSIX2_BC_STRING_MAX = 1000,_POSIX2_COLL_WEIGHTS_MAX = 2,_POSIX2_EXPR_NEST_MAX = 32,_POSIX2_LINE_MAX = 2048,_POSIX2_RE_DUP_MAX = 255,_POSIX2_CHARCLASS_NAME_MAX = 14,};
enum MACRO__POSIX2_C {_POSIX2_C_BIND = 200809,_POSIX2_C_DEV = 200809,_POSIX2_SW_DEV = 200809,_POSIX2_LOCALEDEF = 200809,};
enum MACRO__POSIX2_CHAR {_POSIX2_CHAR_TERM = 200809,};
enum MACRO__POSIX_AIO {_POSIX_AIO_LISTIO_MAX = 2,_POSIX_AIO_MAX = 1,_POSIX_ARG_MAX = 4096,_POSIX_CHILD_MAX = 25,_POSIX_DELAYTIMER_MAX = 32,_POSIX_HOST_NAME_MAX = 255,_POSIX_LINK_MAX = 8,_POSIX_LOGIN_NAME_MAX = 9,_POSIX_MAX_CANON = 255,_POSIX_MAX_INPUT = 255,_POSIX_MQ_OPEN_MAX = 8,_POSIX_MQ_PRIO_MAX = 32,_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 8,_POSIX_OPEN_MAX = 20,_POSIX_PATH_MAX = 256,_POSIX_PIPE_BUF = 512,_POSIX_RE_DUP_MAX = 255,_POSIX_RTSIG_MAX = 8,_POSIX_SEM_NSEMS_MAX = 256,_POSIX_SEM_VALUE_MAX = 32767,_POSIX_SIGQUEUE_MAX = 32,_POSIX_SSIZE_MAX = 32767,_POSIX_STREAM_MAX = 8,_POSIX_SYMLINK_MAX = 255,_POSIX_SYMLOOP_MAX = 8,_POSIX_TIMER_MAX = 32,_POSIX_TTY_NAME_MAX = 9,_POSIX_TZNAME_MAX = 6,_POSIX_CLOCKRES_MIN = 20000000,_POSIX_THREAD_KEYS_MAX = 128,};
enum MACRO__POSIX_JOB {_POSIX_JOB_CONTROL = 1,_POSIX_SAVED_IDS = 1,_POSIX_PRIORITY_SCHEDULING = 200809,_POSIX_SYNCHRONIZED_IO = 200809,_POSIX_FSYNC = 200809,_POSIX_MAPPED_FILES = 200809,_POSIX_MEMLOCK = 200809,_POSIX_MEMLOCK_RANGE = 200809,_POSIX_MEMORY_PROTECTION = 200809,_POSIX_CHOWN_RESTRICTED = 0,_POSIX_VDISABLE = 0,_POSIX_NO_TRUNC = 1,};
enum MACRO__POSIX_SHARED {_POSIX_SHARED_MEMORY_OBJECTS = 200809,_POSIX_CPUTIME = 0,_POSIX_THREAD_CPUTIME = 0,_POSIX_REGEXP = 1,_POSIX_READER_WRITER_LOCKS = 200809,_POSIX_SHELL = 1,_POSIX_TIMEOUTS = 200809,_POSIX_SPIN_LOCKS = 200809,_POSIX_SPAWN = 200809,_POSIX_TIMERS = 200809,_POSIX_BARRIERS = 200809,_POSIX_MESSAGE_PASSING = 200809,_POSIX_THREAD_PROCESS_SHARED = 200809,_POSIX_MONOTONIC_CLOCK = 0,_POSIX_CLOCK_SELECTION = 200809,_POSIX_ADVISORY_INFO = 200809,_POSIX_IPV6 = 200809,_POSIX_RAW_SOCKETS = 200809,};
enum MACRO__POSIX_SPORADIC {_POSIX_SPORADIC_SERVER = -1,_POSIX_THREAD_SPORADIC_SERVER = -1,_POSIX_TRACE = -1,_POSIX_TRACE_EVENT_FILTER = -1,_POSIX_TRACE_INHERIT = -1,_POSIX_TRACE_LOG = -1,_POSIX_TYPED_MEMORY_OBJECTS = -1,_POSIX_V7_ILP32_OFF32 = 1,_POSIX_V7_ILP32_OFFBIG = 1,_POSIX_V6_ILP32_OFF32 = 1,_POSIX_V6_ILP32_OFFBIG = 1,};
enum MACRO__POSIX_THREAD {_POSIX_THREAD_THREADS_MAX = 64,AIO_PRIO_DELTA_MAX = 20,};
enum MACRO__POSIX_THREADS {_POSIX_THREADS = 200809,_POSIX_REENTRANT_FUNCTIONS = 1,_POSIX_THREAD_SAFE_FUNCTIONS = 200809,_POSIX_THREAD_PRIORITY_SCHEDULING = 200809,_POSIX_THREAD_ATTR_STACKSIZE = 200809,_POSIX_THREAD_ATTR_STACKADDR = 200809,_POSIX_THREAD_PRIO_INHERIT = 200809,_POSIX_THREAD_PRIO_PROTECT = 200809,_POSIX_THREAD_ROBUST_PRIO_INHERIT = 200809,_POSIX_THREAD_ROBUST_PRIO_PROTECT = -1,_POSIX_SEMAPHORES = 200809,_POSIX_REALTIME_SIGNALS = 200809,_POSIX_ASYNCHRONOUS_IO = 200809,_POSIX_ASYNC_IO = 1,};
enum MACRO__PRINTF {_PRINTF_H = 1,};
enum MACRO__PROFIL {_PROFIL_H = 1,_SYS_PTRACE_H = 1,_SYS_QUOTA_H = 1,};
enum MACRO__PROTOCOLS {_PROTOCOLS_ROUTED_H = 1,};
enum MACRO__PROTOCOLS_TALKD {_PROTOCOLS_TALKD_H = 1,};
enum MACRO__PROTOCOLS_TIMED {_PROTOCOLS_TIMED_H = 1,};
enum MACRO__PTHREAD {_PTHREAD_H = 1,_SCHED_H = 1,};
enum MACRO__PTY {_PTY_H = 1,_TERMIOS_H = 1,};
enum MACRO__PWD {_PWD_H = 1,};
enum MACRO__RE {_RE_COMP_H = 1,_SEARCH_H = 1,_SEMAPHORE_H = 1,};
enum MACRO__REGEX {_REGEX_H = 1,};
enum MACRO__REGEXP {_REGEXP_H = 1,_SYS_PARAM_H = 1,};
enum MACRO__RPC {_RPC_NETDB_H = 1,};
enum MACRO__RPC_AUTH {_RPC_AUTH_H = 1,};
enum MACRO__RPC_AUTH_DES {_RPC_AUTH_DES_H = 1,_RPC_SVC_H = 1,};
enum MACRO__RPC_AUTH_UNIX {_RPC_AUTH_UNIX_H = 1,};
enum MACRO__RPC_CLNT {_RPC_CLNT_H = 1,_SYS_UN_H = 1,};
enum MACRO__RPC_MSG {_RPC_MSG_H = 1,};
enum MACRO__RPC_PMAP {_RPC_PMAP_CLNT_H = 1,_RPC_PMAP_PROT_H = 1,};
enum MACRO__RPC_PMAP_RMT {_RPC_PMAP_RMT_H = 1,};
enum MACRO__RPC_RPC {_RPC_RPC_H = 1,_RPC_TYPES_H = 1,};
enum MACRO__RPC_SVC {_RPC_SVC_AUTH_H = 1,};
enum MACRO__RPC_XDR {_RPC_XDR_H = 1,};
enum MACRO__SEM {_SEM_SEMUN_UNDEFINED = 1,};
enum MACRO__SETJMP {_SETJMP_H = 1,_SGTTY_H = 1,_SHADOW_H = 1,_SPAWN_H = 1,};
enum MACRO__SIGSET {_SIGSET_H_types = 1,};
enum MACRO__SIGSET_H {_SIGSET_H_fns = 1,};
enum MACRO__SIOC {_SIOC_NONE = 1,_SIOC_READ = 2,_SIOC_WRITE = 4,};
enum MACRO__SS {_SS_SIZE = 128,};
enum MACRO__STAT {_STAT_VER_LINUX_OLD = 1,_STAT_VER_KERNEL = 1,_STAT_VER_SVR4 = 2,_STAT_VER_LINUX = 3,_STAT_VER = 3,};
enum MACRO__STDC {_STDC_PREDEF_H = 1,};
enum MACRO__STDIO {_STDIO_H = 1,_BITS_TYPES_H = 1,_BITS_TYPESIZES_H = 1,};
enum MACRO__STDIO_EXT {_STDIO_EXT_H = 1,_STRINGS_H = 1,_STROPTS_H = 1,_BITS_XTITYPES_H = 1,_BITS_STROPTS_H = 1,};
enum MACRO__STDLIB {_STDLIB_H = 1,};
enum MACRO__STRUCT {_STRUCT_TIMEVAL = 1,};
enum MACRO__SYS {_SYS_CDEFS_H = 1,};
enum MACRO__SYSCALL {_SYSCALL_H = 1,};
enum MACRO__SYSEXITS {_SYSEXITS_H = 1,};
enum MACRO__SYS_ACCT {_SYS_ACCT_H = 1,};
enum MACRO__SYS_DIR {_SYS_DIR_H = 1,_SYS_EPOLL_H = 1,};
enum MACRO__SYS_FILE {_SYS_FILE_H = 1,_SYS_FSUID_H = 1,_SYS_GMON_H = 1,};
enum MACRO__SYS_GMON {_SYS_GMON_OUT_H = 1,};
enum MACRO__SYS_INOTIFY {_SYS_INOTIFY_H = 1,};
enum MACRO__SYS_IOCTL {_SYS_IOCTL_H = 1,};
enum MACRO__SYS_IPC {_SYS_IPC_H = 1,_BITS_IPCTYPES_H = 1,};
enum MACRO__SYS_KD {_SYS_KD_H = 1,};
enum MACRO__SYS_KDAEMON {_SYS_KDAEMON_H = 1,_SYS_KLOG_H = 1,_SYS_MMAN_H = 1,};
enum MACRO__SYS_MOUNT {_SYS_MOUNT_H = 1,};
enum MACRO__SYS_MTIO {_SYS_MTIO_H = 1,};
enum MACRO__SYS_PCI {_SYS_PCI_H = 1,};
enum MACRO__SYS_PERSONALITY {_SYS_PERSONALITY_H = 1,_SYS_PRCTL_H = 1,};
enum MACRO__SYS_RAW {_SYS_RAW_H = 1,};
enum MACRO__SYS_REBOOT {_SYS_REBOOT_H = 1,};
enum MACRO__SYS_SELECT {_SYS_SELECT_H = 1,};
enum MACRO__SYS_SEM {_SYS_SEM_H = 1,};
enum MACRO__SYS_SENDFILE {_SYS_SENDFILE_H = 1,_SYS_SHM_H = 1,};
enum MACRO__SYS_STATFS {_SYS_STATFS_H = 1,_SYS_STATVFS_H = 1,_SYS_SWAP_H = 1,};
enum MACRO__SYS_SYSCTL {_SYS_SYSCTL_H = 1,};
enum MACRO__SYS_SYSINFO {_SYS_SYSINFO_H = 1,};
enum MACRO__SYS_SYSLOG {_SYS_SYSLOG_H = 1,_BITS_SYSLOG_PATH_H = 1,};
enum MACRO__SYS_SYSMACROS {_SYS_SYSMACROS_H = 1,_BITS_PTHREADTYPES_H = 1,};
enum MACRO__SYS_TIMEB {_SYS_TIMEB_H = 1,_SYS_TIMES_H = 1,_SYS_TIMEX_H = 1,};
enum MACRO__SYS_TTYCHARS {_SYS_TTYCHARS_H = 1,};
enum MACRO__SYS_TYPES {_SYS_TYPES_H = 1,};
enum MACRO__SYS_UCONTEXT {_SYS_UCONTEXT_H = 1,};
enum MACRO__SYS_UTSNAME {_SYS_UTSNAME_H = 1,};
enum MACRO__SYS_VLIMIT {_SYS_VLIMIT_H = 1,};
enum MACRO__SYS_VTIMES {_SYS_VTIMES_H = 1,};
enum MACRO__SYS_WAIT {_SYS_WAIT_H = 1,_SYS_RESOURCE_H = 1,};
enum MACRO__SYS_XATTR {_SYS_XATTR_H = 1,};
enum MACRO__TAR {_TAR_H = 1,};
enum MACRO__THREAD {_THREAD_DB_H = 1,_SYS_PROCFS_H = 1,_SYS_USER_H = 1,};
enum MACRO__TTYENT {_TTYENT_H = 1,};
enum MACRO__UCONTEXT {_UCONTEXT_H = 1,_ULIMIT_H = 1,_UNISTD_H = 1,};
enum MACRO__UTIME {_UTIME_H = 1,_UTMPX_H = 1,};
enum MACRO__UTMP {_UTMP_H = 1,_SYS_TIME_H = 1,};
enum MACRO__UTSNAME {_UTSNAME_LENGTH = 65,_UTSNAME_DOMAIN_LENGTH = 65,_UTSNAME_SYSNAME_LENGTH = 65,_UTSNAME_NODENAME_LENGTH = 65,_UTSNAME_RELEASE_LENGTH = 65,_UTSNAME_VERSION_LENGTH = 65,_UTSNAME_MACHINE_LENGTH = 65,};
enum MACRO__VEOL {_VEOL = 6,};
enum MACRO__VINTR {_VINTR = 0,_VQUIT = 1,_VERASE = 2,};
enum MACRO__VKILL {_VKILL = 3,_VEOF = 4,};
enum MACRO__VMIN {_VMIN = 5,};
enum MACRO__VSWTC {_VSWTC = 9,};
enum MACRO__VTIME {_VTIME = 7,_VEOL2 = 8,};
enum MACRO__WCHAR {_WCHAR_H = 1,};
enum MACRO__WCTYPE {_WCTYPE_H = 1,};
enum MACRO__WORDEXP {_WORDEXP_H = 1,};
enum MACRO__XBS5 {_XBS5_ILP32_OFF32 = 1,_XBS5_ILP32_OFFBIG = 1,};
enum MACRO__XOPEN {_XOPEN_VERSION = 700,_XOPEN_XCU_VERSION = 4,_XOPEN_XPG2 = 1,_XOPEN_XPG3 = 1,_XOPEN_XPG4 = 1,_XOPEN_UNIX = 1,_XOPEN_CRYPT = 1,_XOPEN_ENH_I18N = 1,_XOPEN_LEGACY = 1,};
enum MACRO__XOPEN_REALTIME {_XOPEN_REALTIME = 1,_XOPEN_REALTIME_THREADS = 1,_XOPEN_SHM = 1,};
enum MACRO___ASSERT {__ASSERT_FUNCTION = 0,};
enum MACRO___BIND {__BIND = 19950621,};
enum MACRO___BIT {__BIT_TYPES_DEFINED__ = 1,};
enum MACRO___BITS {__BITS_PER_LONG = 32,};
enum MACRO___CPU {__CPU_SETSIZE = 1024,};
enum MACRO___DES {__DES_CRYPT_H__ = 1,};
enum MACRO___ELF {__ELF_NATIVE_CLASS = 32,};
enum MACRO___F {__F_SETOWN = 8,__F_GETOWN = 9,};
enum MACRO___FD {__FD_SETSIZE = 1024,};
enum MACRO___FILE_defined {__FILE_defined = 1,____FILE_defined = 1,};
enum MACRO___FMTMSG {__FMTMSG_H = 1,};
enum MACRO___F_SETSIG {__F_SETSIG = 10,__F_GETSIG = 11,__F_SETOWN_EX = 15,__F_GETOWN_EX = 16,};
enum MACRO___GLIBC {__GLIBC__ = 2,__GLIBC_MINOR__ = 21,};
enum MACRO___GLOB {__GLOB_FLAGS = 32511,};
enum MACRO___GNU {__GNU_LIBRARY__ = 6,};
enum MACRO___GNU_LIB {__GNU_LIB_NAMES_H = 1,_GNU_LIBC_VERSION_H = 1,__NET_ETHERNET_H = 1,};
enum MACRO___LC {__LC_CTYPE = 0,__LC_NUMERIC = 1,__LC_TIME = 2,__LC_COLLATE = 3,__LC_MONETARY = 4,__LC_MESSAGES = 5,__LC_ALL = 6,__LC_PAPER = 7,__LC_NAME = 8,__LC_ADDRESS = 9,__LC_TELEPHONE = 10,__LC_MEASUREMENT = 11,__LC_IDENTIFICATION = 12,};
enum MACRO___LONG {__LONG_DOUBLE_MATH_OPTIONAL = 1,};
enum MACRO___MATH {__MATH_DECLARE_LDOUBLE = 1,};
enum MACRO___MAX {__MAX_BAUD = 30,};
enum MACRO___NAMESER {__NAMESER = 19991006,};
enum MACRO___NETINET {__NETINET_IP_ICMP_H = 1,};
enum MACRO___NETINET_UDP {__NETINET_UDP_H = 1,};
enum MACRO___NETIPX {__NETIPX_IPX_H = 1,};
enum MACRO___NETPACKET {__NETPACKET_PACKET_H = 1,};
enum MACRO___NR {__NR_restart_syscall = 0,__NR_exit = 1,__NR_fork = 2,__NR_read = 3,__NR_write = 4,__NR_open = 5,__NR_close = 6,__NR_waitpid = 7,__NR_creat = 8,__NR_link = 9,__NR_unlink = 10,__NR_execve = 11,__NR_chdir = 12,__NR_time = 13,__NR_mknod = 14,__NR_chmod = 15,__NR_lchown = 16,__NR_break = 17,__NR_oldstat = 18,__NR_lseek = 19,__NR_getpid = 20,__NR_mount = 21,__NR_umount = 22,__NR_setuid = 23,__NR_getuid = 24,__NR_stime = 25,__NR_ptrace = 26,__NR_alarm = 27,__NR_oldfstat = 28,__NR_pause = 29,__NR_utime = 30,__NR_stty = 31,__NR_gtty = 32,__NR_access = 33,__NR_nice = 34,__NR_ftime = 35,__NR_sync = 36,__NR_kill = 37,__NR_rename = 38,__NR_mkdir = 39,__NR_rmdir = 40,__NR_dup = 41,__NR_pipe = 42,__NR_times = 43,__NR_prof = 44,__NR_brk = 45,__NR_setgid = 46,__NR_getgid = 47,__NR_signal = 48,__NR_geteuid = 49,__NR_getegid = 50,__NR_acct = 51,__NR_umount2 = 52,__NR_lock = 53,__NR_ioctl = 54,__NR_fcntl = 55,__NR_mpx = 56,__NR_setpgid = 57,__NR_ulimit = 58,__NR_oldolduname = 59,__NR_umask = 60,__NR_chroot = 61,__NR_ustat = 62,__NR_dup2 = 63,__NR_getppid = 64,__NR_getpgrp = 65,__NR_setsid = 66,__NR_sigaction = 67,__NR_sgetmask = 68,__NR_ssetmask = 69,__NR_setreuid = 70,__NR_setregid = 71,__NR_sigsuspend = 72,__NR_sigpending = 73,__NR_sethostname = 74,__NR_setrlimit = 75,__NR_getrlimit = 76,__NR_getrusage = 77,__NR_gettimeofday = 78,__NR_settimeofday = 79,__NR_getgroups = 80,__NR_setgroups = 81,__NR_select = 82,__NR_symlink = 83,__NR_oldlstat = 84,__NR_readlink = 85,__NR_uselib = 86,__NR_swapon = 87,__NR_reboot = 88,__NR_readdir = 89,__NR_mmap = 90,__NR_munmap = 91,__NR_truncate = 92,__NR_ftruncate = 93,__NR_fchmod = 94,__NR_fchown = 95,__NR_getpriority = 96,__NR_setpriority = 97,__NR_profil = 98,__NR_statfs = 99,__NR_fstatfs = 100,__NR_ioperm = 101,__NR_socketcall = 102,__NR_syslog = 103,__NR_setitimer = 104,__NR_getitimer = 105,__NR_stat = 106,__NR_lstat = 107,__NR_fstat = 108,__NR_olduname = 109,__NR_iopl = 110,__NR_vhangup = 111,__NR_idle = 112,__NR_vm86 = 113,__NR_wait4 = 114,__NR_swapoff = 115,__NR_sysinfo = 116,__NR_ipc = 117,__NR_fsync = 118,__NR_sigreturn = 119,__NR_clone = 120,__NR_setdomainname = 121,__NR_uname = 122,__NR_modify_ldt = 123,__NR_adjtimex = 124,__NR_mprotect = 125,__NR_sigprocmask = 126,__NR_create_module = 127,__NR_init_module = 128,__NR_delete_module = 129,__NR_get_kernel_syms = 130,__NR_quotactl = 131,__NR_getpgid = 132,__NR_fchdir = 133,__NR_bdflush = 134,__NR_sysfs = 135,__NR_personality = 136,__NR_afs_syscall = 137,__NR_setfsuid = 138,__NR_setfsgid = 139,__NR__llseek = 140,__NR_getdents = 141,__NR__newselect = 142,__NR_flock = 143,__NR_msync = 144,__NR_readv = 145,__NR_writev = 146,__NR_getsid = 147,__NR_fdatasync = 148,__NR__sysctl = 149,__NR_mlock = 150,__NR_munlock = 151,__NR_mlockall = 152,__NR_munlockall = 153,__NR_sched_setparam = 154,__NR_sched_getparam = 155,__NR_sched_setscheduler = 156,__NR_sched_getscheduler = 157,__NR_sched_yield = 158,__NR_sched_get_priority_max = 159,__NR_sched_get_priority_min = 160,__NR_sched_rr_get_interval = 161,__NR_nanosleep = 162,__NR_mremap = 163,__NR_setresuid = 164,__NR_getresuid = 165,__NR_query_module = 166,__NR_poll = 167,__NR_nfsservctl = 168,__NR_setresgid = 169,__NR_getresgid = 170,__NR_prctl = 171,__NR_rt_sigreturn = 172,__NR_rt_sigaction = 173,__NR_rt_sigprocmask = 174,__NR_rt_sigpending = 175,__NR_rt_sigtimedwait = 176,__NR_rt_sigqueueinfo = 177,__NR_rt_sigsuspend = 178,__NR_pread64 = 179,__NR_pwrite64 = 180,__NR_chown = 181,__NR_getcwd = 182,__NR_capget = 183,__NR_capset = 184,__NR_sigaltstack = 185,__NR_sendfile = 186,__NR_getpmsg = 187,__NR_putpmsg = 188,__NR_vfork = 189,__NR_ugetrlimit = 190,__NR_readahead = 191,__NR_mmap2 = 192,__NR_truncate64 = 193,__NR_ftruncate64 = 194,__NR_stat64 = 195,__NR_lstat64 = 196,__NR_fstat64 = 197,__NR_pciconfig_read = 198,__NR_pciconfig_write = 199,__NR_pciconfig_iobase = 200,__NR_multiplexer = 201,__NR_getdents64 = 202,__NR_pivot_root = 203,__NR_fcntl64 = 204,__NR_madvise = 205,__NR_mincore = 206,__NR_gettid = 207,__NR_tkill = 208,__NR_setxattr = 209,__NR_lsetxattr = 210,__NR_fsetxattr = 211,__NR_getxattr = 212,__NR_lgetxattr = 213,__NR_fgetxattr = 214,__NR_listxattr = 215,__NR_llistxattr = 216,__NR_flistxattr = 217,__NR_removexattr = 218,__NR_lremovexattr = 219,__NR_fremovexattr = 220,__NR_futex = 221,__NR_sched_setaffinity = 222,__NR_sched_getaffinity = 223,__NR_tuxcall = 225,__NR_sendfile64 = 226,__NR_io_setup = 227,__NR_io_destroy = 228,__NR_io_getevents = 229,__NR_io_submit = 230,__NR_io_cancel = 231,__NR_set_tid_address = 232,__NR_fadvise64 = 233,__NR_exit_group = 234,__NR_lookup_dcookie = 235,__NR_epoll_create = 236,__NR_epoll_ctl = 237,__NR_epoll_wait = 238,__NR_remap_file_pages = 239,__NR_timer_create = 240,__NR_timer_settime = 241,__NR_timer_gettime = 242,__NR_timer_getoverrun = 243,__NR_timer_delete = 244,__NR_clock_settime = 245,__NR_clock_gettime = 246,__NR_clock_getres = 247,__NR_clock_nanosleep = 248,__NR_swapcontext = 249,__NR_tgkill = 250,__NR_utimes = 251,__NR_statfs64 = 252,__NR_fstatfs64 = 253,__NR_fadvise64_64 = 254,__NR_rtas = 255,__NR_sys_debug_setcontext = 256,__NR_migrate_pages = 258,__NR_mbind = 259,__NR_get_mempolicy = 260,__NR_set_mempolicy = 261,__NR_mq_open = 262,__NR_mq_unlink = 263,__NR_mq_timedsend = 264,__NR_mq_timedreceive = 265,__NR_mq_notify = 266,__NR_mq_getsetattr = 267,__NR_kexec_load = 268,__NR_add_key = 269,__NR_request_key = 270,__NR_keyctl = 271,__NR_waitid = 272,__NR_ioprio_set = 273,__NR_ioprio_get = 274,__NR_inotify_init = 275,__NR_inotify_add_watch = 276,__NR_inotify_rm_watch = 277,__NR_spu_run = 278,__NR_spu_create = 279,__NR_pselect6 = 280,__NR_ppoll = 281,__NR_unshare = 282,__NR_splice = 283,__NR_tee = 284,__NR_vmsplice = 285,__NR_openat = 286,__NR_mkdirat = 287,__NR_mknodat = 288,__NR_fchownat = 289,__NR_futimesat = 290,__NR_fstatat64 = 291,__NR_unlinkat = 292,__NR_renameat = 293,__NR_linkat = 294,__NR_symlinkat = 295,__NR_readlinkat = 296,__NR_fchmodat = 297,__NR_faccessat = 298,__NR_get_robust_list = 299,__NR_set_robust_list = 300,__NR_move_pages = 301,__NR_getcpu = 302,__NR_epoll_pwait = 303,__NR_utimensat = 304,__NR_signalfd = 305,__NR_timerfd_create = 306,__NR_eventfd = 307,__NR_sync_file_range2 = 308,__NR_fallocate = 309,__NR_subpage_prot = 310,__NR_timerfd_settime = 311,__NR_timerfd_gettime = 312,__NR_signalfd4 = 313,__NR_eventfd2 = 314,__NR_epoll_create1 = 315,__NR_dup3 = 316,__NR_pipe2 = 317,__NR_inotify_init1 = 318,__NR_perf_event_open = 319,__NR_preadv = 320,__NR_pwritev = 321,__NR_rt_tgsigqueueinfo = 322,__NR_fanotify_init = 323,__NR_fanotify_mark = 324,__NR_prlimit64 = 325,__NR_socket = 326,__NR_bind = 327,__NR_connect = 328,__NR_listen = 329,__NR_accept = 330,__NR_getsockname = 331,__NR_getpeername = 332,__NR_socketpair = 333,__NR_send = 334,__NR_sendto = 335,__NR_recv = 336,__NR_recvfrom = 337,__NR_shutdown = 338,__NR_setsockopt = 339,__NR_getsockopt = 340,__NR_sendmsg = 341,__NR_recvmsg = 342,__NR_recvmmsg = 343,__NR_accept4 = 344,__NR_name_to_handle_at = 345,__NR_open_by_handle_at = 346,__NR_clock_adjtime = 347,__NR_syncfs = 348,__NR_sendmmsg = 349,__NR_setns = 350,__NR_process_vm_readv = 351,__NR_process_vm_writev = 352,__NR_finit_module = 353,__NR_kcmp = 354,__NR_sched_setattr = 355,__NR_sched_getattr = 356,__NR_renameat2 = 357,__NR_seccomp = 358,__NR_getrandom = 359,__NR_memfd_create = 360,__NR_bpf = 361,__NR_execveat = 362,};
enum MACRO___O {__O_DIRECTORY = 0x4000,__O_NOFOLLOW = 0x8000,__O_DIRECT = 0x20000,__O_LARGEFILE = 0x10000,};
enum MACRO___OPTION {__OPTION_EGLIBC_ADVANCED_INET6 = 1,__OPTION_EGLIBC_BACKTRACE = 1,__OPTION_EGLIBC_BIG_MACROS = 1,__OPTION_EGLIBC_BSD = 1,__OPTION_EGLIBC_CATGETS = 1,__OPTION_EGLIBC_CHARSETS = 1,__OPTION_EGLIBC_CRYPT = 1,__OPTION_EGLIBC_CRYPT_UFC = 1,__OPTION_EGLIBC_CXX_TESTS = 1,__OPTION_EGLIBC_DB_ALIASES = 1,__OPTION_EGLIBC_ENVZ = 1,__OPTION_EGLIBC_FCVT = 1,__OPTION_EGLIBC_FMTMSG = 1,__OPTION_EGLIBC_FSTAB = 1,__OPTION_EGLIBC_FTRAVERSE = 1,__OPTION_EGLIBC_GETLOGIN = 1,__OPTION_EGLIBC_IDN = 1,__OPTION_EGLIBC_INET = 1,__OPTION_EGLIBC_INET_ANL = 1,__OPTION_EGLIBC_LIBM = 1,__OPTION_EGLIBC_LOCALES = 1,__OPTION_EGLIBC_LOCALE_CODE = 1,__OPTION_EGLIBC_MEMUSAGE = 1,__OPTION_EGLIBC_MEMUSAGE_DEFAULT_BUFFER_SIZE = 32768,__OPTION_EGLIBC_NIS = 1,__OPTION_EGLIBC_NSSWITCH = 1,__OPTION_EGLIBC_RCMD = 1,__OPTION_EGLIBC_RTLD_DEBUG = 1,__OPTION_EGLIBC_SPAWN = 1,__OPTION_EGLIBC_STREAMS = 1,__OPTION_EGLIBC_SUNRPC = 1,__OPTION_EGLIBC_UTMP = 1,__OPTION_EGLIBC_UTMPX = 1,__OPTION_EGLIBC_WORDEXP = 1,__OPTION_POSIX_C_LANG_WIDE_CHAR = 1,__OPTION_POSIX_REGEXP = 1,__OPTION_POSIX_REGEXP_GLIBC = 1,__OPTION_POSIX_WIDE_CHAR_DEVICE_IO = 1,};
enum MACRO___O_CLOEXEC {__O_CLOEXEC = 0x80000,__O_NOATIME = 0x40000,__O_PATH = 0x200000,__O_DSYNC = 0x1000,__O_TMPFILE = 0x410000,};
enum MACRO___POSIX {__POSIX_FADV_DONTNEED = 4,__POSIX_FADV_NOREUSE = 5,};
enum MACRO___PTHREAD {__PTHREAD_RWLOCK_ELISION_EXTRA = 0,};
enum MACRO___RES {__RES = 19991006,};
enum MACRO___S {__S_IFMT = 0xF000,__S_IFDIR = 0x4000,__S_IFCHR = 0x2000,__S_IFBLK = 0x6000,__S_IFREG = 0x8000,__S_IFIFO = 0x1000,__S_IFLNK = 0xA000,__S_IFSOCK = 0xC000,__S_ISUID = 0x800,__S_ISGID = 0x400,__S_ISVTX = 0x200,__S_IREAD = 0x100,__S_IWRITE = 0x80,__S_IEXEC = 0x40,};
enum MACRO___SI {__SI_MAX_SIZE = 128,};
enum MACRO___SID {__SID = 21248,};
enum MACRO___SIGEV {__SIGEV_MAX_SIZE = 64,};
enum MACRO___SIZEOF {__SIZEOF_PTHREAD_ATTR_T = 36,__SIZEOF_PTHREAD_MUTEX_T = 24,__SIZEOF_PTHREAD_MUTEXATTR_T = 4,__SIZEOF_PTHREAD_COND_T = 48,__SIZEOF_PTHREAD_CONDATTR_T = 4,__SIZEOF_PTHREAD_RWLOCK_T = 32,__SIZEOF_PTHREAD_RWLOCKATTR_T = 8,__SIZEOF_PTHREAD_BARRIER_T = 20,__SIZEOF_PTHREAD_BARRIERATTR_T = 4,};
enum MACRO___SIZEOF_SEM {__SIZEOF_SEM_T = 16,};
enum MACRO___STDC {__STDC_IEC_559__ = 1,__STDC_IEC_559_COMPLEX__ = 1,__STDC_ISO_10646__ = 201103,__STDC_NO_THREADS__ = 1,};
enum MACRO___UNKNOWN {__UNKNOWN_10646_CHAR = 0xFFFD,};
enum MACRO___USE {__USE_POSIX_IMPLICITLY = 1,};
enum MACRO___USE_GNU {__USE_GNU_GETTEXT = 1,};
enum MACRO___USE_MISC {__USE_MISC = 1,__USE_ATFILE = 1,__USE_FORTIFY_LEVEL = 0,};
enum MACRO___USE_POSIX {__USE_POSIX = 1,__USE_POSIX2 = 1,__USE_POSIX199309 = 1,__USE_POSIX199506 = 1,__USE_XOPEN2K = 1,__USE_ISOC95 = 1,__USE_ISOC99 = 1,__USE_XOPEN2K8 = 1,};
enum MACRO___UT {__UT_LINESIZE = 32,__UT_NAMESIZE = 32,__UT_HOSTSIZE = 256,};
enum MACRO___W {__W_CONTINUED = 0xFFFF,};
enum MACRO___WCHAR {__WCHAR_MAX = 2147483647,__WCHAR_MIN = -2147483648,};
enum MACRO___WCOREFLAG {__WCOREFLAG = 0x80,};
enum MACRO___WORDSIZE {__WORDSIZE = 32,};
enum MACRO_____gwchar {____gwchar_t_defined = 1,};
enum MACRO_____mbstate {____mbstate_t_defined = 1,};
enum MACRO___defined {__defined_schedparam = 1,};
enum MACRO___dontcare {__dontcare__ = -1,};
enum MACRO___error {__error_t_defined = 1,};
enum MACRO___have {__have_pthread_attr_t = 1,};
enum MACRO___have_siginfo {__have_siginfo_t = 1,};
enum MACRO___have_sigval {__have_sigval_t = 1,__have_sigevent_t = 1,};
enum MACRO___iswxxx {__iswxxx_defined = 1,};
enum MACRO___mbstate {__mbstate_t_defined = 1,};
enum MACRO___timespec {__timespec_defined = 1,};
enum MACRO_acs {acs_chars_index = 146,};
enum MACRO_argument {no_argument = 0,required_argument = 1,optional_argument = 2,};
enum MACRO_defined {__clock_t_defined = 1,__time_t_defined = 1,__clockid_t_defined = 1,__timer_t_defined = 1,};
enum MACRO_math {math_errhandling = 3,};
enum MACRO_ss {ss_err_base = 748800,};
enum MACRO_t_defined {__ldiv_t_defined = 1,__lldiv_t_defined = 1,};
enum MACRO_xEOF {xEOF = 236,};
enum NPmode {NPMODE_PASS = 0x0,NPMODE_DROP = 0x1,NPMODE_ERROR = 0x2,NPMODE_QUEUE = 0x3,};
struct SVCXPRT {int xp_sock;u_short xp_port;const struct SVCXPRT::xp_ops *xp_ops;int xp_addrlen;struct sockaddr_in xp_raddr;struct opaque_auth xp_verf;caddr_t xp_p1;caddr_t xp_p2;char xp_pad[256];};
struct SVCXPRT::xp_ops {bool_t (*xp_recv)(SVCXPRT *xprt, struct rpc_msg *msg);enum xprt_stat (*xp_stat)(SVCXPRT *xprt);bool_t (*xp_getargs)(SVCXPRT *xprt, xdrproc_t xdr_args, caddr_t args_ptr);bool_t (*xp_reply)(SVCXPRT *xprt, struct rpc_msg *msg);bool_t (*xp_freeargs)(SVCXPRT *xprt, xdrproc_t xdr_args, caddr_t args_ptr);void (*xp_destroy)(SVCXPRT *xprt);};
typedef struct term TERMINAL;
typedef struct termtype TERMTYPE;
typedef enum $003F63A829E52477BDB4080710A1139D VISIT;
struct XDR {enum xdr_op x_op;struct XDR::xdr_ops *x_ops;caddr_t x_public;caddr_t x_private;caddr_t x_base;u_int x_handy;};
struct XDR::xdr_ops {bool_t (*x_getlong)(XDR *xdrs, int *lp);bool_t (*x_putlong)(XDR *xdrs, const int *lp);bool_t (*x_getbytes)(XDR *xdrs, caddr_t addr, u_int len);bool_t (*x_putbytes)(XDR *xdrs, const char *addr, u_int len);u_int (*x_getpostn)(const XDR *xdrs);bool_t (*x_setpostn)(XDR *xdrs, u_int pos);int32_t *(*x_inline)(XDR *xdrs, u_int len);void (*x_destroy)(XDR *xdrs);bool_t (*x_getint32)(XDR *xdrs, int32_t *ip);bool_t (*x_putint32)(XDR *xdrs, const int32_t *ip);};
struct _ENTRY;
typedef struct $15A7CADFA0C3B6AF2858DE2248F61F64 _G_fpos64_t;
typedef struct $9E637E3D30D4EE6DC2F7DCF094554036 _G_fpos_t;
struct _IO_FILE {int _flags;char *_IO_read_ptr;char *_IO_read_end;char *_IO_read_base;char *_IO_write_base;char *_IO_write_ptr;char *_IO_write_end;char *_IO_buf_base;char *_IO_buf_end;char *_IO_save_base;char *_IO_backup_base;char *_IO_save_end;struct _IO_marker *_markers;struct _IO_FILE *_chain;int _fileno;int _flags2;__off_t _old_offset;unsigned __int16 _cur_column;signed __int8 _vtable_offset;char _shortbuf[1];_IO_lock_t *_lock;__off64_t _offset;void *__pad1;void *__pad2;void *__pad3;void *__pad4;size_t __pad5;int _mode;char _unused2[40];};
struct _IO_FILE_plus;
struct _IO_jump_t;
typedef void _IO_lock_t;
struct _IO_marker {struct _IO_marker *_next;struct _IO_FILE *_sbuf;int _pos;};
typedef enum $2BE422EB4B7233E8C58D6E03ADE8CB89 _LIB_VERSION_TYPE;
typedef struct _IO_FILE __FILE;
typedef void (*__action_fn_t)(const void *nodep, VISIT value, int level);
struct __bb {int zero_word;const char *filename;int *counts;int ncounts;struct __bb *next;const unsigned int *addresses;};
typedef __u16 __be16;
typedef __u32 __be32;
typedef __u64 __be64;
typedef __quad_t __blkcnt64_t;
typedef int __blkcnt_t;
typedef int __blksize_t;
typedef unsigned int __builtin_offsetof;
typedef void *__builtin_va_list;
typedef char *__caddr_t;
typedef int __clock_t;
typedef int __clockid_t;
enum __codecvt_result {__codecvt_ok = 0x0,__codecvt_partial = 0x1,__codecvt_error = 0x2,__codecvt_noconv = 0x3,};
typedef int (*__compar_fn_t)(const void *, const void *);
typedef unsigned int __cpu_mask;
typedef int __daddr_t;
typedef __u_quad_t __dev_t;
struct __dirstream;
typedef void (*__dispatch_fn_t)(struct svc_req *, SVCXPRT *);
struct __exit_status {__int16 __e_termination;__int16 __e_exit;};
typedef int __fd_mask;
typedef __u_quad_t __fsblkcnt64_t;
typedef unsigned int __fsblkcnt_t;
typedef __u_quad_t __fsfilcnt64_t;
typedef unsigned int __fsfilcnt_t;
typedef struct $9722585E737591D9DBBFC1CA80083F53 __fsid_t;
typedef int __fsword_t;
typedef int (*__ftw_func_t)(const char *filename, const struct stat *status, int flag);
typedef wint_t (*__gconv_btowc_fct)(struct __gconv_step *, unsigned __int8);
typedef void (*__gconv_end_fct)(struct __gconv_step *);
typedef int (*__gconv_fct)(struct __gconv_step *, struct __gconv_step_data *, const unsigned __int8 **, const unsigned __int8 *, unsigned __int8 **, size_t *, int, int);
struct __gconv_info {size_t __nsteps;struct __gconv_step *__steps;struct __gconv_step_data __data[];};
typedef int (*__gconv_init_fct)(struct __gconv_step *);
struct __gconv_loaded_object;
struct __gconv_step {struct __gconv_loaded_object *__shlib_handle;const char *__modname;int __counter;char *__from_name;char *__to_name;__gconv_fct __fct;__gconv_btowc_fct __btowc_fct;__gconv_init_fct __init_fct;__gconv_end_fct __end_fct;int __min_needed_from;int __max_needed_from;int __min_needed_to;int __max_needed_to;int __stateful;void *__data;};
struct __gconv_step_data {unsigned __int8 *__outbuf;unsigned __int8 *__outbufend;int __flags;int __invocation_counter;int __internal_use;__mbstate_t *__statep;__mbstate_t __state;};
typedef struct __gconv_info *__gconv_t;
typedef unsigned int __gid_t;
typedef __builtin_va_list __gnuc_va_list;
typedef int __gwchar_t;
typedef unsigned int __id_t;
typedef __u_quad_t __ino64_t;
typedef unsigned int __ino_t;
typedef signed __int16 __int16_t;
typedef signed int __int32_t;
typedef signed __int64 __int64_t;
typedef signed __int8 __int8_t;
typedef int __intptr_t;
typedef int __io_close_fn(void *cookie);
typedef __ssize_t __io_read_fn(void *cookie, char *buf, size_t nbytes);
typedef int __io_seek_fn(void *cookie, __off64_t *pos, int w);
typedef __ssize_t __io_write_fn(void *cookie, const char *buf, size_t n);
typedef unsigned __int16 __ipc_pid_t;
enum __itimer_which {ITIMER_REAL = 0x0,ITIMER_VIRTUAL = 0x1,ITIMER_PROF = 0x2,};
typedef int __itimer_which_t;
typedef int __jmp_buf[112];
struct __jmp_buf_tag {__jmp_buf __jmpbuf;int __mask_was_saved;__sigset_t __saved_mask;};
typedef char *__kernel_caddr_t;
typedef __kernel_long_t __kernel_clock_t;
typedef int __kernel_clockid_t;
typedef int __kernel_daddr_t;
typedef struct $FB68FDDBB52DBDF02F327E3198820E09 __kernel_fd_set;
typedef struct $06CAB5296C39900A9CE51DBF4F560AD6 __kernel_fsid_t;
typedef unsigned __int16 __kernel_gid16_t;
typedef unsigned int __kernel_gid32_t;
typedef unsigned int __kernel_gid_t;
typedef __kernel_ulong_t __kernel_ino_t;
typedef __int16 __kernel_ipc_pid_t;
typedef int __kernel_key_t;
typedef __int64 __kernel_loff_t;
typedef int __kernel_long_t;
typedef unsigned int __kernel_mode_t;
typedef int __kernel_mqd_t;
typedef __kernel_long_t __kernel_off_t;
typedef unsigned int __kernel_old_dev_t;
typedef __kernel_gid_t __kernel_old_gid_t;
typedef __kernel_uid_t __kernel_old_uid_t;
typedef int __kernel_pid_t;
typedef int __kernel_ptrdiff_t;
typedef unsigned __int16 __kernel_sa_family_t;
typedef void (*__kernel_sighandler_t)(int);
typedef unsigned int __kernel_size_t;
struct __kernel_sockaddr_storage {__kernel_sa_family_t ss_family;char __data[126];};
typedef int __kernel_ssize_t;
typedef __kernel_long_t __kernel_suseconds_t;
typedef __kernel_long_t __kernel_time_t;
typedef int __kernel_timer_t;
typedef unsigned __int16 __kernel_uid16_t;
typedef unsigned int __kernel_uid32_t;
typedef unsigned int __kernel_uid_t;
typedef unsigned int __kernel_ulong_t;
typedef int __key_t;
typedef __u16 __le16;
typedef __u32 __le32;
typedef __u64 __le64;
struct __locale_struct {struct __locale_data *__locales[13];const unsigned __int16 *__ctype_b;const int *__ctype_tolower;const int *__ctype_toupper;const char *__names[13];};
typedef struct __locale_struct *__locale_t;
typedef __off64_t __loff_t;
typedef struct $1A16B277A945B8F62DE8883A2D91AFD9 __mbstate_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
enum __ns_cert_types {cert_t_pkix = 0x1,cert_t_spki = 0x2,cert_t_pgp = 0x3,cert_t_url = 0xFD,cert_t_oid = 0xFE,};
enum __ns_class {ns_c_invalid = 0x0,ns_c_in = 0x1,ns_c_2 = 0x2,ns_c_chaos = 0x3,ns_c_hs = 0x4,ns_c_none = 0xFE,ns_c_any = 0xFF,ns_c_max = 0x10000,};
enum __ns_flag {ns_f_qr = 0x0,ns_f_opcode = 0x1,ns_f_aa = 0x2,ns_f_tc = 0x3,ns_f_rd = 0x4,ns_f_ra = 0x5,ns_f_z = 0x6,ns_f_ad = 0x7,ns_f_cd = 0x8,ns_f_rcode = 0x9,ns_f_max = 0xA,};
enum __ns_key_types {ns_kt_rsa = 0x1,ns_kt_dh = 0x2,ns_kt_dsa = 0x3,ns_kt_private = 0xFE,};
struct __ns_msg {const u_char *_msg;const u_char *_eom;u_int16_t _id;u_int16_t _flags;u_int16_t _counts[4];const u_char *_sections[4];ns_sect _sect;int _rrnum;const u_char *_msg_ptr;};
enum __ns_opcode {ns_o_query = 0x0,ns_o_iquery = 0x1,ns_o_status = 0x2,ns_o_notify = 0x4,ns_o_update = 0x5,ns_o_max = 0x6,};
enum __ns_rcode {ns_r_noerror = 0x0,ns_r_formerr = 0x1,ns_r_servfail = 0x2,ns_r_nxdomain = 0x3,ns_r_notimpl = 0x4,ns_r_refused = 0x5,ns_r_yxdomain = 0x6,ns_r_yxrrset = 0x7,ns_r_nxrrset = 0x8,ns_r_notauth = 0x9,ns_r_notzone = 0xA,ns_r_max = 0xB,ns_r_badvers = 0x10,ns_r_badsig = 0x10,ns_r_badkey = 0x11,ns_r_badtime = 0x12,};
struct __ns_rr {char name[1025];u_int16_t type;u_int16_t rr_class;u_int32_t ttl;u_int16_t rdlength;const u_char *rdata;};
enum __ns_sect {ns_s_qd = 0x0,ns_s_zn = 0x0,ns_s_an = 0x1,ns_s_pr = 0x1,ns_s_ns = 0x2,ns_s_ud = 0x2,ns_s_ar = 0x3,ns_s_max = 0x4,};
enum __ns_type {ns_t_invalid = 0x0,ns_t_a = 0x1,ns_t_ns = 0x2,ns_t_md = 0x3,ns_t_mf = 0x4,ns_t_cname = 0x5,ns_t_soa = 0x6,ns_t_mb = 0x7,ns_t_mg = 0x8,ns_t_mr = 0x9,ns_t_null = 0xA,ns_t_wks = 0xB,ns_t_ptr = 0xC,ns_t_hinfo = 0xD,ns_t_minfo = 0xE,ns_t_mx = 0xF,ns_t_txt = 0x10,ns_t_rp = 0x11,ns_t_afsdb = 0x12,ns_t_x25 = 0x13,ns_t_isdn = 0x14,ns_t_rt = 0x15,ns_t_nsap = 0x16,ns_t_nsap_ptr = 0x17,ns_t_sig = 0x18,ns_t_key = 0x19,ns_t_px = 0x1A,ns_t_gpos = 0x1B,ns_t_aaaa = 0x1C,ns_t_loc = 0x1D,ns_t_nxt = 0x1E,ns_t_eid = 0x1F,ns_t_nimloc = 0x20,ns_t_srv = 0x21,ns_t_atma = 0x22,ns_t_naptr = 0x23,ns_t_kx = 0x24,ns_t_cert = 0x25,ns_t_a6 = 0x26,ns_t_dname = 0x27,ns_t_sink = 0x28,ns_t_opt = 0x29,ns_t_apl = 0x2A,ns_t_tkey = 0xF9,ns_t_tsig = 0xFA,ns_t_ixfr = 0xFB,ns_t_axfr = 0xFC,ns_t_mailb = 0xFD,ns_t_maila = 0xFE,ns_t_any = 0xFF,ns_t_zxfr = 0x100,ns_t_max = 0x10000,};
enum __ns_update_operation {ns_uop_delete = 0x0,ns_uop_add = 0x1,ns_uop_max = 0x2,};
typedef __quad_t __off64_t;
typedef int __off_t;
typedef int __pid_t;
enum __priority_which {PRIO_PROCESS = 0x0,PRIO_PGRP = 0x1,PRIO_USER = 0x2,};
typedef int __priority_which_t;
struct __pthread_cleanup_frame {void (*__cancel_routine)(void *);void *__cancel_arg;int __do_it;int __cancel_type;};
struct __pthread_internal_slist {struct __pthread_internal_slist *__next;};
typedef struct __pthread_internal_slist __pthread_slist_t;
typedef struct $6105F69743B5F4DC3D2725A2474E8E7A __pthread_unwind_buf_t;
enum __ptrace_eventcodes {PTRACE_EVENT_FORK = 0x1,PTRACE_EVENT_VFORK = 0x2,PTRACE_EVENT_CLONE = 0x3,PTRACE_EVENT_EXEC = 0x4,PTRACE_EVENT_VFORK_DONE = 0x5,PTRACE_EVENT_EXIT = 0x6,PTRACE_EVENT_SECCOMP = 0x7,};
enum __ptrace_flags : unsigned __int32 {PTRACE_SEIZE_DEVEL = 0x80000000,};
struct __ptrace_peeksiginfo_args {__uint64_t off;__uint32_t flags;__int32_t nr;};
enum __ptrace_peeksiginfo_flags {PTRACE_PEEKSIGINFO_SHARED = 0x1,};
enum __ptrace_request {PTRACE_TRACEME = 0x0,PTRACE_PEEKTEXT = 0x1,PTRACE_PEEKDATA = 0x2,PTRACE_PEEKUSER = 0x3,PTRACE_POKETEXT = 0x4,PTRACE_POKEDATA = 0x5,PTRACE_POKEUSER = 0x6,PTRACE_CONT = 0x7,PTRACE_KILL = 0x8,PTRACE_SINGLESTEP = 0x9,PTRACE_ATTACH = 0x10,PTRACE_DETACH = 0x11,PTRACE_SYSCALL = 0x18,PTRACE_SETOPTIONS = 0x4200,PTRACE_GETEVENTMSG = 0x4201,PTRACE_GETSIGINFO = 0x4202,PTRACE_SETSIGINFO = 0x4203,PTRACE_GETREGSET = 0x4204,PTRACE_SETREGSET = 0x4205,PTRACE_SEIZE = 0x4206,PTRACE_INTERRUPT = 0x4207,PTRACE_LISTEN = 0x4208,PTRACE_PEEKSIGINFO = 0x4209,};
enum __ptrace_setoptions {PTRACE_O_TRACESYSGOOD = 0x1,PTRACE_O_TRACEFORK = 0x2,PTRACE_O_TRACEVFORK = 0x4,PTRACE_O_TRACECLONE = 0x8,PTRACE_O_TRACEEXEC = 0x10,PTRACE_O_TRACEVFORKDONE = 0x20,PTRACE_O_TRACEEXIT = 0x40,PTRACE_O_TRACESECCOMP = 0x80,PTRACE_O_EXITKILL = 0x100000,PTRACE_O_MASK = 0x1000FF,};
typedef __quad_t *__qaddr_t;
typedef __int64 __quad_t;
struct __res_state {int retrans;int retry;u_long options;int nscount;struct sockaddr_in nsaddr_list[3];u_short id;char *dnsrch[7];char defdname[256];u_long pfcode;unsigned __int32 ndots : 4;unsigned __int32 nsort : 4;unsigned __int32 ipv6_unavail : 1;unsigned __int32 unused : 23;struct __res_state::$A41D3F045172AF5618492D381489FAF0 sort_list[10];res_send_qhook qhook;res_send_rhook rhook;int res_h_errno;int _vcsock;u_int _flags;union __res_state::$E19F19286CA79C25813C29B2F37D7904 _u;};
struct __res_state::$A41D3F045172AF5618492D381489FAF0 {struct in_addr addr;u_int32_t mask;};
union __res_state::$E19F19286CA79C25813C29B2F37D7904 {char pad[52];struct __res_state::$E19F19286CA79C25813C29B2F37D7904::$9F1FBFA3B280393606EA65BB64E9684F _ext;};
struct __res_state::$E19F19286CA79C25813C29B2F37D7904::$9F1FBFA3B280393606EA65BB64E9684F {u_int16_t nscount;u_int16_t nsmap[3];int nssocks[3];u_int16_t nscount6;u_int16_t nsinit;struct sockaddr_in6 *nsaddrs[3];unsigned int _initstamp[2];};
typedef __u_quad_t __rlim64_t;
typedef unsigned int __rlim_t;
enum __rlimit_resource {RLIMIT_CPU = 0x0,RLIMIT_FSIZE = 0x1,RLIMIT_DATA = 0x2,RLIMIT_STACK = 0x3,RLIMIT_CORE = 0x4,__RLIMIT_RSS = 0x5,RLIMIT_NOFILE = 0x7,__RLIMIT_OFILE = 0x7,RLIMIT_AS = 0x9,__RLIMIT_NPROC = 0x6,__RLIMIT_MEMLOCK = 0x8,__RLIMIT_LOCKS = 0xA,__RLIMIT_SIGPENDING = 0xB,__RLIMIT_MSGQUEUE = 0xC,__RLIMIT_NICE = 0xD,__RLIMIT_RTPRIO = 0xE,__RLIMIT_RTTIME = 0xF,__RLIMIT_NLIMITS = 0x10,__RLIM_NLIMITS = 0x10,};
typedef int __rlimit_resource_t;
enum __rusage_who {RUSAGE_SELF = 0x0,RUSAGE_CHILDREN = 0xFFFFFFFF,};
typedef int __rusage_who_t;
typedef signed __int16 __s16;
typedef signed int __s32;
typedef signed __int64 __s64;
typedef signed __int8 __s8;
struct __sched_param {int __sched_priority;};
typedef int __sig_atomic_t;
typedef void (*__sighandler_t)(int);
typedef struct $44840292B0FD4432816E14C2BB6B9957 __sigset_t;
typedef unsigned int __size_t;
enum __socket_type {SOCK_STREAM = 0x1,SOCK_DGRAM = 0x2,SOCK_RAW = 0x3,SOCK_RDM = 0x4,SOCK_SEQPACKET = 0x5,SOCK_DCCP = 0x6,SOCK_PACKET = 0xA,SOCK_CLOEXEC = 0x80000,SOCK_NONBLOCK = 0x800,};
typedef unsigned int __socklen_t;
typedef int __ssize_t;
typedef __u16 __sum16;
typedef int __suseconds_t;
typedef int __syscall_slong_t;
typedef unsigned int __syscall_ulong_t;
struct __sysctl_args {int *name;int nlen;void *oldval;size_t *oldlenp;void *newval;size_t newlen;unsigned int __unused[4];};
typedef int __t_scalar_t;
typedef unsigned int __t_uscalar_t;
typedef int __time_t;
typedef void *__timer_t;
typedef struct timezone *__timezone_ptr_t;
typedef unsigned __int16 __u16;
typedef unsigned int __u32;
typedef unsigned __int64 __u64;
typedef unsigned __int8 __u8;
typedef unsigned __int8 __u_char;
typedef unsigned int __u_int;
typedef unsigned int __u_long;
typedef unsigned __int64 __u_quad_t;
typedef unsigned __int16 __u_short;
typedef unsigned int __uid_t;
typedef unsigned __int16 __uint16_t;
typedef unsigned int __uint32_t;
typedef unsigned __int64 __uint64_t;
typedef unsigned __int8 __uint8_t;
typedef unsigned int __useconds_t;
typedef struct $E4EAFD57B978876015000738005B25CD __vector128;
enum __vlimit_resource {LIM_NORAISE = 0x0,LIM_CPU = 0x1,LIM_FSIZE = 0x2,LIM_DATA = 0x3,LIM_STACK = 0x4,LIM_CORE = 0x5,LIM_MAXRSS = 0x6,};
typedef __u32 __wsum;
struct _ftsent {struct _ftsent *fts_cycle;struct _ftsent *fts_parent;struct _ftsent *fts_link;int fts_number;void *fts_pointer;char *fts_accpath;char *fts_path;int fts_errno;int fts_symfd;u_short fts_pathlen;u_short fts_namelen;ino_t fts_ino;dev_t fts_dev;nlink_t fts_nlink;__int16 fts_level;u_short fts_info;u_short fts_flags;u_short fts_instr;struct stat *fts_statp;char fts_name[1];};
struct _libc_fpstate {double fpregs[32];double fpscr;unsigned int _pad[2];};
struct _libc_vrstate {unsigned int vrregs[32][4];unsigned int vrsave;unsigned int _pad[2];unsigned int vscr;};
struct _ns_flagdata {int mask;int shift;};
struct _obstack_chunk {char *limit;struct _obstack_chunk *prev;char contents[4];};
struct _old_mixer_info {char id[16];char name[32];};
struct _pthread_cleanup_buffer {void (*__routine)(void *);void *__arg;int __canceltype;struct _pthread_cleanup_buffer *__prev;};
struct _ss_request_entry {const char *const *command_names;void (*const function)(int, const char *const *, int, void *);const char *const info_string;int flags;};
struct _ss_request_table {int version;ss_request_entry *requests;};
struct _ss_rp_options {int version;void (*unknown)(int, const char *const *, int, void *);int allow_suspend;int catch_int;};
enum accept_stat {SUCCESS = 0x0,PROG_UNAVAIL = 0x1,PROG_MISMATCH = 0x2,PROC_UNAVAIL = 0x3,GARBAGE_ARGS = 0x4,SYSTEM_ERR = 0x5,};
struct accepted_reply {struct opaque_auth ar_verf;enum accept_stat ar_stat;union accepted_reply::$A74D47F576A9520EEBD40CEAFF1DA023 ru;};
union accepted_reply::$A74D47F576A9520EEBD40CEAFF1DA023 {struct accepted_reply::$A74D47F576A9520EEBD40CEAFF1DA023::$C081DE2363A7D6E022ACDA68492DBB3F AR_versions;struct accepted_reply::$A74D47F576A9520EEBD40CEAFF1DA023::$BFD7413E14FC21CAB05150D69A0647C0 AR_results;};
struct accepted_reply::$A74D47F576A9520EEBD40CEAFF1DA023::$BFD7413E14FC21CAB05150D69A0647C0 {caddr_t where;xdrproc_t proc;};
struct accepted_reply::$A74D47F576A9520EEBD40CEAFF1DA023::$C081DE2363A7D6E022ACDA68492DBB3F {u_long low;u_long high;};
struct acct {char ac_flag;u_int16_t ac_uid;u_int16_t ac_gid;u_int16_t ac_tty;u_int32_t ac_btime;comp_t ac_utime;comp_t ac_stime;comp_t ac_etime;comp_t ac_mem;comp_t ac_io;comp_t ac_rw;comp_t ac_minflt;comp_t ac_majflt;comp_t ac_swaps;u_int32_t ac_exitcode;char ac_comm[17];char ac_pad[10];};
struct acct_v3 {char ac_flag;char ac_version;u_int16_t ac_tty;u_int32_t ac_exitcode;u_int32_t ac_uid;u_int32_t ac_gid;u_int32_t ac_pid;u_int32_t ac_ppid;u_int32_t ac_btime;float ac_etime;comp_t ac_utime;comp_t ac_stime;comp_t ac_mem;comp_t ac_io;comp_t ac_rw;comp_t ac_minflt;comp_t ac_majflt;comp_t ac_swaps;char ac_comm[16];};
typedef unsigned int active_reg_t;
struct addrinfo {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;socklen_t ai_addrlen;struct sockaddr *ai_addr;char *ai_canonname;struct addrinfo *ai_next;};
struct aiocb {int aio_fildes;int aio_lio_opcode;int aio_reqprio;volatile void *aio_buf;size_t aio_nbytes;struct sigevent aio_sigevent;struct aiocb *__next_prio;int __abs_prio;int __policy;int __error_code;__ssize_t __return_value;__off_t aio_offset;char __pad[4];char __glibc_reserved[32];};
struct aliasent {char *alias_name;size_t alias_members_len;char **alias_members;int alias_local;};
typedef voidpf (*alloc_func)(voidpf opaque, uInt items, uInt size);
struct ar_hdr {char ar_name[16];char ar_date[12];char ar_uid[6];char ar_gid[6];char ar_mode[8];char ar_size[10];char ar_fmag[2];};
struct argp {const struct argp_option *options;argp_parser_t parser;const char *args_doc;const char *doc;const struct argp_child *children;char *(*help_filter)(int key, const char *text, void *input);const char *argp_domain;};
struct argp_child {const struct argp *argp;int flags;const char *header;int group;};
struct argp_option {const char *name;int key;const char *arg;int flags;const char *doc;int group;};
typedef error_t (*argp_parser_t)(int key, char *arg, struct argp_state *state);
struct argp_state {const struct argp *root_argp;int argc;char **argv;int next;unsigned int flags;unsigned int arg_num;int quoted;void *input;void **child_inputs;void *hook;char *name;FILE *err_stream;FILE *out_stream;void *pstate;};
struct arpd_request {unsigned __int16 req;u_int32_t ip;unsigned int dev;unsigned int stamp;unsigned int updated;unsigned __int8 ha[7];};
struct arphdr {unsigned __int16 ar_hrd;unsigned __int16 ar_pro;unsigned __int8 ar_hln;unsigned __int8 ar_pln;unsigned __int16 ar_op;};
struct arpreq {struct sockaddr arp_pa;struct sockaddr arp_ha;int arp_flags;struct sockaddr arp_netmask;char arp_dev[16];};
struct arpreq_old {struct sockaddr arp_pa;struct sockaddr arp_ha;int arp_flags;struct sockaddr arp_netmask;};
struct atalk_addr {__be16 s_net;__u8 s_node;};
struct atalk_netrange {__u8 nr_phase;__be16 nr_firstnet;__be16 nr_lastnet;};
struct audio_buf_info {int fragments;int fragstotal;int fragsize;int bytes;};
enum auth_stat {AUTH_OK = 0x0,AUTH_BADCRED = 0x1,AUTH_REJECTEDCRED = 0x2,AUTH_BADVERF = 0x3,AUTH_REJECTEDVERF = 0x4,AUTH_TOOWEAK = 0x5,AUTH_INVALIDRESP = 0x6,AUTH_FAILED = 0x7,};
struct authdes_cred {enum authdes_namekind adc_namekind;struct authdes_fullname adc_fullname;uint32_t adc_nickname;};
struct authdes_fullname {char *name;des_block key;uint32_t window;};
enum authdes_namekind {ADN_FULLNAME = 0x0,ADN_NICKNAME = 0x1,};
struct authdes_verf {union authdes_verf::$7A6CF749D39778C1B89693A36BA727C7 adv_time_u;uint32_t adv_int_u;};
union authdes_verf::$7A6CF749D39778C1B89693A36BA727C7 {struct rpc_timeval adv_ctime;des_block adv_xtime;};
struct authunix_parms {u_long aup_time;char *aup_machname;__uid_t aup_uid;__gid_t aup_gid;u_int aup_len;__gid_t *aup_gids;};
typedef struct $2EA2B750C06C2344CAE427A9270EC33C ax25_address;
struct ax25_bpqaddr_struct {char dev[16];ax25_address addr;};
struct ax25_ctl_struct {ax25_address port_addr;ax25_address source_addr;ax25_address dest_addr;unsigned int cmd;unsigned int arg;unsigned __int8 digi_count;ax25_address digi_addr[8];};
struct ax25_fwd_struct {ax25_address port_from;ax25_address port_to;};
struct ax25_info_struct {unsigned int n2;unsigned int n2count;unsigned int t1;unsigned int t1timer;unsigned int t2;unsigned int t2timer;unsigned int t3;unsigned int t3timer;unsigned int idle;unsigned int idletimer;unsigned int state;unsigned int rcv_q;unsigned int snd_q;};
struct ax25_parms_struct {ax25_address port_addr;unsigned __int16 values[20];};
struct ax25_route_opt_struct {ax25_address port_addr;ax25_address dest_addr;int cmd;int arg;};
struct ax25_routes_struct {ax25_address port_addr;ax25_address dest_addr;unsigned __int8 digi_count;ax25_address digi_addr[8];};
struct bandinfo {unsigned __int8 bi_pri;int bi_flag;};
typedef __blkcnt_t blkcnt_t;
typedef __blksize_t blksize_t;
typedef int bool_t;
struct buffmem_desc {unsigned int *buffer;int size;};
typedef struct $7257EFC214C83636CC1C8B1684490891 bz_stream;
typedef __caddr_t caddr_t;
struct call_body {u_long cb_rpcvers;u_long cb_prog;u_long cb_vers;u_long cb_proc;struct opaque_auth cb_cred;struct opaque_auth cb_verf;};
typedef unsigned __int8 cc_t;
typedef char charf;
typedef struct $DE2D2D600621BF6A9A3C6AB05D887D2A cisco_proto;
enum clnt_stat {RPC_SUCCESS = 0x0,RPC_CANTENCODEARGS = 0x1,RPC_CANTDECODERES = 0x2,RPC_CANTSEND = 0x3,RPC_CANTRECV = 0x4,RPC_TIMEDOUT = 0x5,RPC_VERSMISMATCH = 0x6,RPC_AUTHERROR = 0x7,RPC_PROGUNAVAIL = 0x8,RPC_PROGVERSMISMATCH = 0x9,RPC_PROCUNAVAIL = 0xA,RPC_CANTDECODEARGS = 0xB,RPC_SYSTEMERROR = 0xC,RPC_NOBROADCAST = 0x15,RPC_UNKNOWNHOST = 0xD,RPC_UNKNOWNPROTO = 0x11,RPC_UNKNOWNADDR = 0x13,RPC_RPCBFAILURE = 0xE,RPC_PROGNOTREGISTERED = 0xF,RPC_N2AXLATEFAILURE = 0x16,RPC_FAILED = 0x10,RPC_INTR = 0x12,RPC_TLIERROR = 0x14,RPC_UDERROR = 0x17,RPC_INPROGRESS = 0x18,RPC_STALERACHANDLE = 0x19,};
typedef __clock_t clock_t;
typedef __clockid_t clockid_t;
struct cmsghdr {size_t cmsg_len;int cmsg_level;int cmsg_type;};
typedef u_int16_t comp_t;
struct completion;
struct compstat {__u32 unc_bytes;__u32 unc_packets;__u32 comp_bytes;__u32 comp_packets;__u32 inc_bytes;__u32 inc_packets;__u32 in_count;__u32 bytes_out;double ratio;};
struct console_font {unsigned int width;unsigned int height;unsigned int charcount;unsigned __int8 *data;};
struct console_font_op {unsigned int op;unsigned int flags;unsigned int width;unsigned int height;unsigned int charcount;unsigned __int8 *data;};
struct consolefontdesc {unsigned __int16 charcount;unsigned __int16 charheight;char *chardata;};
struct copr_buffer {int command;int flags;int len;int offs;unsigned __int8 data[4000];};
struct copr_debug_buf {int command;int parm1;int parm2;int flags;int len;};
struct copr_msg {int len;unsigned __int8 data[4000];};
struct count_info {int bytes;int blocks;int ptr;};
typedef struct $0FC95954E9672604C2E419500968ACC1 cpu_set_t;
struct cryptkeyarg {netnamestr remotename;des_block deskey;};
struct cryptkeyarg2 {netnamestr remotename;netobj remotekey;des_block deskey;};
struct cryptkeyres {keystatus status;union cryptkeyres::$EF36972044157FC290EE2FE4EF835697 cryptkeyres_u;};
union cryptkeyres::$EF36972044157FC290EE2FE4EF835697 {des_block deskey;};
typedef __daddr_t daddr_t;
typedef struct $D379431B13F78A36F2202C5AA386190E datum;
union des_block {struct des_block::$8E96D37FBE99CA069DD91238980BB651 key;char c[8];};
struct des_block::$8E96D37FBE99CA069DD91238980BB651 {u_int32_t high;u_int32_t low;};
enum desdir {ENCRYPT = 0x0,DECRYPT = 0x1,};
enum desmode {CBC = 0x0,ECB = 0x1,};
struct desparams {u_char des_key[8];enum desdir des_dir;enum desmode des_mode;u_char des_ivec[8];unsigned int des_len;union desparams::$F38C3328E965CE3ADB16864418918AD0 UDES;};
union desparams::$F38C3328E965CE3ADB16864418918AD0 {u_char UDES_data[16];u_char *UDES_buf;};
typedef __dev_t dev_t;
struct dirent {__ino_t d_ino;__off_t d_off;unsigned __int16 d_reclen;unsigned __int8 d_type;char d_name[256];};
typedef struct $979FA3DE6ECCF956231BFC297C4278E6 div_t;
typedef double double_t;
struct dqblk {u_int64_t dqb_bhardlimit;u_int64_t dqb_bsoftlimit;u_int64_t dqb_curspace;u_int64_t dqb_ihardlimit;u_int64_t dqb_isoftlimit;u_int64_t dqb_curinodes;u_int64_t dqb_btime;u_int64_t dqb_itime;u_int32_t dqb_valid;};
struct dqinfo {u_int64_t dqi_bgrace;u_int64_t dqi_igrace;u_int32_t dqi_flags;u_int32_t dqi_valid;};
struct drand48_data {unsigned __int16 __x[3];unsigned __int16 __old_x[3];unsigned __int16 __c;unsigned __int16 __init;unsigned __int64 __a;};
struct ec_addr {unsigned __int8 station;unsigned __int8 net;};
typedef double elf_fpreg_t;
typedef elf_fpreg_t elf_fpregset_t[33];
typedef unsigned int elf_greg_t;
typedef elf_greg_t elf_gregset_t[48];
struct elf_prpsinfo {char pr_state;char pr_sname;char pr_zomb;char pr_nice;unsigned int pr_flag;__uid_t pr_uid;__gid_t pr_gid;__pid_t pr_pid;__pid_t pr_ppid;__pid_t pr_pgrp;__pid_t pr_sid;char pr_fname[16];char pr_psargs[80];};
struct elf_prstatus {struct elf_siginfo pr_info;__int16 pr_cursig;unsigned int pr_sigpend;unsigned int pr_sighold;__pid_t pr_pid;__pid_t pr_ppid;__pid_t pr_pgrp;__pid_t pr_sid;struct timeval pr_utime;struct timeval pr_stime;struct timeval pr_cutime;struct timeval pr_cstime;elf_gregset_t pr_reg;int pr_fpvalid;};
struct elf_siginfo {int si_signo;int si_code;int si_errno;};
typedef struct $DDCDC210EB5C272B20D7EC2419D0EE6A elf_vrreg_t;
typedef elf_vrreg_t elf_vrregset_t[33];
struct entry {char *key;void *data;};
typedef int enum_t;
union epoll_data {void *ptr;int fd;uint32_t u32;uint64_t u64;};
typedef union epoll_data epoll_data_t;
struct epoll_event {uint32_t events;epoll_data_t data;};
typedef int errcode_t;
typedef int error_t;
struct error_table {const char *const *msgs;int base;int n_msgs;};
struct et_list;
struct ether_addr {u_int8_t ether_addr_octet[6];};
struct ether_arp {struct arphdr ea_hdr;u_int8_t arp_sha[6];u_int8_t arp_spa[4];u_int8_t arp_tha[6];u_int8_t arp_tpa[4];};
struct ether_header {u_int8_t ether_dhost[6];u_int8_t ether_shost[6];u_int16_t ether_type;};
struct ethhdr {unsigned __int8 h_dest[6];unsigned __int8 h_source[6];__be16 h_proto;};
struct exception {int type;char *name;double arg1;double arg2;double retval;};
struct exit_status {__int16 e_termination;__int16 e_exit;};
typedef __u32 ext_accm[8];
typedef __fd_mask fd_mask;
typedef struct $6ECA53571B8FCC125A3088582131FB6E fd_set;
struct fddi_8022_1_hdr {__u8 dsap;__u8 ssap;__u8 ctrl;};
struct fddi_8022_2_hdr {__u8 dsap;__u8 ssap;__u8 ctrl_1;__u8 ctrl_2;};
struct fddi_header {u_int8_t fddi_fc;u_int8_t fddi_dhost[6];u_int8_t fddi_shost[6];};
struct fddi_snap_hdr {__u8 dsap;__u8 ssap;__u8 ctrl;__u8 oui[3];__be16 ethertype;};
struct fddihdr {__u8 fc;__u8 daddr[6];__u8 saddr[6];union fddihdr::$938C6FB260523AB5682B137AC0052733 hdr;};
union fddihdr::$938C6FB260523AB5682B137AC0052733 {struct fddi_8022_1_hdr llc_8022_1;struct fddi_8022_2_hdr llc_8022_2;struct fddi_snap_hdr llc_snap;};
typedef double fenv_t;
typedef unsigned int fexcept_t;
typedef float float_t;
struct flock {__int16 l_type;__int16 l_whence;__off_t l_start;__off_t l_len;__pid_t l_pid;};
typedef _G_fpos_t fpos_t;
typedef struct _libc_fpstate fpregset_t;
typedef unsigned int fpu_control_t;
typedef struct $BAC7E67B0C2C05C40DFF67087D59816E fr_proto;
typedef struct $4D0B2EE74E9FAFCBF56BDC59F25A7FDB fr_proto_pvc;
typedef struct $73FDACF34BD773846371F264A3DF2411 fr_proto_pvc_info;
typedef void (*free_func)(voidpf opaque, voidpf address);
typedef __fsblkcnt_t fsblkcnt_t;
typedef __fsfilcnt_t fsfilcnt_t;
typedef __fsid_t fsid_t;
struct fstab {char *fs_spec;char *fs_file;char *fs_vfstype;char *fs_mntops;const char *fs_type;int fs_freq;int fs_passno;};
struct full_sockaddr_ax25 {struct sockaddr_ax25 fsa_ax25;ax25_address fsa_digipeater[8];};
struct full_sockaddr_rose {sa_family_t srose_family;rose_address srose_addr;ax25_address srose_call;unsigned int srose_ndigis;ax25_address srose_digis[6];};
struct gaih_addrtuple {struct gaih_addrtuple *next;char *name;int family;uint32_t addr[4];uint32_t scopeid;};
typedef unsigned __int64 gdbm_count_t;
typedef int gdbm_error;
struct getcredres {keystatus status;union getcredres::$C5134A0BDA290BA80D31944F899AB902 getcredres_u;};
union getcredres::$C5134A0BDA290BA80D31944F899AB902 {unixcred cred;};
typedef __gid_t gid_t;
typedef struct $9D4C19DBF70DA60826A3BCA6F2F847F6 glob_t;
struct gmon_cg_arc_record {char from_pc[4];char self_pc[4];char count[4];};
struct gmon_hdr {char cookie[4];char version[4];char spare[12];};
struct gmon_hist_hdr {char low_pc[4];char high_pc[4];char hist_size[4];char prof_rate[4];char dimen[15];char dimen_abbrev;};
struct gmonparam {int state;u_short *kcount;u_long kcountsize;u_long *froms;u_long fromssize;struct tostruct *tos;u_long tossize;int tolimit;u_long lowpc;u_long highpc;u_long textsize;u_long hashfraction;int log_hashfraction;};
typedef unsigned int gregset_t[48];
struct group {char *gr_name;char *gr_passwd;__gid_t gr_gid;char **gr_mem;};
struct group_filter {uint32_t gf_interface;struct sockaddr_storage gf_group;uint32_t gf_fmode;uint32_t gf_numsrc;struct sockaddr_storage gf_slist[1];};
struct group_req {uint32_t gr_interface;struct sockaddr_storage gr_group;};
struct group_source_req {uint32_t gsr_interface;struct sockaddr_storage gsr_group;struct sockaddr_storage gsr_source;};
typedef struct gzFile_s *gzFile;
struct gzFile_s {unsigned int have;unsigned __int8 *next;off_t pos;};
typedef struct gz_header_s gz_header;
struct gz_header_s {int text;uLong time;int xflags;int os;Bytef *extra;uInt extra_len;uInt extra_max;Bytef *name;uInt name_max;Bytef *comment;uInt comm_max;int hcrc;int done;};
typedef gz_header *gz_headerp;
struct hostent {char *h_name;char **h_aliases;int h_addrtype;int h_length;char **h_addr_list;};
union ibm_extended_long_double {long double ld;union ieee754_double d[2];};
struct icmp {u_int8_t icmp_type;u_int8_t icmp_code;u_int16_t icmp_cksum;union icmp::$893B68B5BC55935E15A63F398B6517AD icmp_hun;union icmp::$EEC48C5976A17953B310258F40698883 icmp_dun;};
struct icmp6_filter {uint32_t icmp6_filt[8];};
struct icmp6_hdr {uint8_t icmp6_type;uint8_t icmp6_code;uint16_t icmp6_cksum;union icmp6_hdr::$85A0B7966B981BE593FDADBE0B8685D7 icmp6_dataun;};
union icmp6_hdr::$85A0B7966B981BE593FDADBE0B8685D7 {uint32_t icmp6_un_data32[1];uint16_t icmp6_un_data16[2];uint8_t icmp6_un_data8[4];};
struct icmp6_router_renum {struct icmp6_hdr rr_hdr;uint8_t rr_segnum;uint8_t rr_flags;uint16_t rr_maxdelay;uint32_t rr_reserved;};
union icmp::$893B68B5BC55935E15A63F398B6517AD {u_char ih_pptr;struct in_addr ih_gwaddr;struct icmp::$893B68B5BC55935E15A63F398B6517AD::ih_idseq ih_idseq;u_int32_t ih_void;struct icmp::$893B68B5BC55935E15A63F398B6517AD::ih_pmtu ih_pmtu;struct icmp::$893B68B5BC55935E15A63F398B6517AD::ih_rtradv ih_rtradv;};
struct icmp::$893B68B5BC55935E15A63F398B6517AD::ih_idseq {u_int16_t icd_id;u_int16_t icd_seq;};
struct icmp::$893B68B5BC55935E15A63F398B6517AD::ih_pmtu {u_int16_t ipm_void;u_int16_t ipm_nextmtu;};
struct icmp::$893B68B5BC55935E15A63F398B6517AD::ih_rtradv {u_int8_t irt_num_addrs;u_int8_t irt_wpa;u_int16_t irt_lifetime;};
union icmp::$EEC48C5976A17953B310258F40698883 {struct icmp::$EEC48C5976A17953B310258F40698883::$18EAF2C5161535AE6831887B3FEB9817 id_ts;struct icmp::$EEC48C5976A17953B310258F40698883::$E13592CBDF627F773A21D4C55E8BB1FD id_ip;struct icmp_ra_addr id_radv;u_int32_t id_mask;u_int8_t id_data[1];};
struct icmp::$EEC48C5976A17953B310258F40698883::$18EAF2C5161535AE6831887B3FEB9817 {u_int32_t its_otime;u_int32_t its_rtime;u_int32_t its_ttime;};
struct icmp::$EEC48C5976A17953B310258F40698883::$E13592CBDF627F773A21D4C55E8BB1FD {struct ip idi_ip;};
struct icmp_ra_addr {u_int32_t ira_addr;u_int32_t ira_preference;};
struct icmphdr {u_int8_t type;u_int8_t code;u_int16_t checksum;union icmphdr::$40FD5A55A9222B24AD56BB249C33F484 un;};
union icmphdr::$40FD5A55A9222B24AD56BB249C33F484 {struct icmphdr::$40FD5A55A9222B24AD56BB249C33F484::$6EE1EE5693408D5F1EEE7E152919407C echo;u_int32_t gateway;struct icmphdr::$40FD5A55A9222B24AD56BB249C33F484::$DF26D42CAE65C48DD1441B415631F0FA frag;};
struct icmphdr::$40FD5A55A9222B24AD56BB249C33F484::$6EE1EE5693408D5F1EEE7E152919407C {u_int16_t id;u_int16_t sequence;};
struct icmphdr::$40FD5A55A9222B24AD56BB249C33F484::$DF26D42CAE65C48DD1441B415631F0FA {u_int16_t __glibc_reserved;u_int16_t mtu;};
typedef void *iconv_t;
typedef __id_t id_t;
typedef enum $891529C55A3D7F6C466AE0BA608A35EA idtype_t;
union ieee754_double {double d;struct ieee754_double::$CBF7F4D8915BE00A0F60FC21BE3CC351 ieee;struct ieee754_double::$E39512DDC32B5079FBEDC8EF4C49FC11 ieee_nan;};
struct ieee754_double::$CBF7F4D8915BE00A0F60FC21BE3CC351 {unsigned __int32 negative : 1;unsigned __int32 exponent : 11;unsigned __int32 mantissa0 : 20;unsigned __int32 mantissa1 : 32;};
struct ieee754_double::$E39512DDC32B5079FBEDC8EF4C49FC11 {unsigned __int32 negative : 1;unsigned __int32 exponent : 11;unsigned __int32 quiet_nan : 1;unsigned __int32 mantissa0 : 19;unsigned __int32 mantissa1 : 32;};
union ieee754_float {float f;struct ieee754_float::$C49E6A3DB3FCA2697F6929A4A4A4C009 ieee;struct ieee754_float::$68810A44DAA7FA3DC9BBB2C1584DBD03 ieee_nan;};
struct ieee754_float::$68810A44DAA7FA3DC9BBB2C1584DBD03 {unsigned __int32 negative : 1;unsigned __int32 exponent : 8;unsigned __int32 quiet_nan : 1;unsigned __int32 mantissa : 22;};
struct ieee754_float::$C49E6A3DB3FCA2697F6929A4A4A4C009 {unsigned __int32 negative : 1;unsigned __int32 exponent : 8;unsigned __int32 mantissa : 23;};
struct if_settings {unsigned int type;unsigned int size;union if_settings::$26F75A7CF7D20622A142A8F9C6BB7EFD ifs_ifsu;};
union if_settings::$26F75A7CF7D20622A142A8F9C6BB7EFD {raw_hdlc_proto *raw_hdlc;cisco_proto *cisco;fr_proto *fr;fr_proto_pvc *fr_pvc;fr_proto_pvc_info *fr_pvc_info;sync_serial_settings *sync;te1_settings *te1;};
struct ifaddrs {struct ifaddrs *ifa_next;char *ifa_name;unsigned int ifa_flags;struct sockaddr *ifa_addr;struct sockaddr *ifa_netmask;union ifaddrs::$5A9FB6B4293E0982D0D9C18B84AAF77B ifa_ifu;void *ifa_data;};
union ifaddrs::$5A9FB6B4293E0982D0D9C18B84AAF77B {struct sockaddr *ifu_broadaddr;struct sockaddr *ifu_dstaddr;};
struct ifconf {int ifc_len;union ifconf::$FEA5AA0AF02382EAC1EF5698C9530A86 ifc_ifcu;};
union ifconf::$FEA5AA0AF02382EAC1EF5698C9530A86 {char *ifcu_buf;struct ifreq *ifcu_req;};
struct ifmap {unsigned int mem_start;unsigned int mem_end;unsigned __int16 base_addr;unsigned __int8 irq;unsigned __int8 dma;unsigned __int8 port;};
struct ifreq {union ifreq::$4AF2B49FDDB54BAFABDFAE063E6E4A98 ifr_ifrn;union ifreq::$E3B69D1AD22BDEC81E225954E969544B ifr_ifru;};
union ifreq::$4AF2B49FDDB54BAFABDFAE063E6E4A98 {char ifrn_name[16];};
union ifreq::$E3B69D1AD22BDEC81E225954E969544B {struct sockaddr ifru_addr;struct sockaddr ifru_dstaddr;struct sockaddr ifru_broadaddr;struct sockaddr ifru_netmask;struct sockaddr ifru_hwaddr;__int16 ifru_flags;int ifru_ivalue;int ifru_mtu;struct ifmap ifru_map;char ifru_slave[16];char ifru_newname[16];void *ifru_data;struct if_settings ifru_settings;};
struct igmp {u_int8_t igmp_type;u_int8_t igmp_code;u_int16_t igmp_cksum;struct in_addr igmp_group;};
typedef struct $AC1F0727205AA235F31FA7E4FBAB6931 imaxdiv_t;
struct in6_addr {union in6_addr::$B80A5568EDCB3DEA112C17957211D170 __in6_u;};
union in6_addr::$B80A5568EDCB3DEA112C17957211D170 {uint8_t __u6_addr8[16];uint16_t __u6_addr16[8];uint32_t __u6_addr32[4];};
struct in6_rtmsg {struct in6_addr rtmsg_dst;struct in6_addr rtmsg_src;struct in6_addr rtmsg_gateway;u_int32_t rtmsg_type;u_int16_t rtmsg_dst_len;u_int16_t rtmsg_src_len;u_int32_t rtmsg_metric;unsigned int rtmsg_info;u_int32_t rtmsg_flags;int rtmsg_ifindex;};
struct in_addr {in_addr_t s_addr;};
typedef uint32_t in_addr_t;
typedef unsigned int (*in_func)(void *, unsigned __int8 **);
struct in_pktinfo {int ipi_ifindex;struct in_addr ipi_spec_dst;struct in_addr ipi_addr;};
typedef uint16_t in_port_t;
typedef __ino_t ino_t;
struct inotify_event {int wd;uint32_t mask;uint32_t cookie;uint32_t len;char name[];};
typedef __int16 int16_t;
typedef int int32_t;
typedef __int64 int64_t;
typedef signed __int8 int8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef __int64 int_fast64_t;
typedef signed __int8 int_fast8_t;
typedef __int16 int_least16_t;
typedef int int_least32_t;
typedef __int64 int_least64_t;
typedef signed __int8 int_least8_t;
struct internal_state {int dummy;};
typedef int intf;
typedef __int64 intmax_t;
typedef int intptr_t;
struct iovec {void *iov_base;size_t iov_len;};
struct ip {unsigned __int32 ip_v : 4;unsigned __int32 ip_hl : 4;u_int8_t ip_tos;u_short ip_len;u_short ip_id;u_short ip_off;u_int8_t ip_ttl;u_int8_t ip_p;u_short ip_sum;struct in_addr ip_src;struct in_addr ip_dst;};
struct ip6_dest {uint8_t ip6d_nxt;uint8_t ip6d_len;};
struct ip6_ext {uint8_t ip6e_nxt;uint8_t ip6e_len;};
struct ip6_frag {uint8_t ip6f_nxt;uint8_t ip6f_reserved;uint16_t ip6f_offlg;uint32_t ip6f_ident;};
struct ip6_hbh {uint8_t ip6h_nxt;uint8_t ip6h_len;};
struct ip6_hdr {union ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314 ip6_ctlun;struct in6_addr ip6_src;struct in6_addr ip6_dst;};
union ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314 {struct ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314::ip6_hdrctl ip6_un1;uint8_t ip6_un2_vfc;};
struct ip6_hdr::$BD1196ABBEDCD1C568FFAAAAE6BA5314::ip6_hdrctl {uint32_t ip6_un1_flow;uint16_t ip6_un1_plen;uint8_t ip6_un1_nxt;uint8_t ip6_un1_hlim;};
struct ip6_opt {uint8_t ip6o_type;uint8_t ip6o_len;};
struct ip6_opt_jumbo {uint8_t ip6oj_type;uint8_t ip6oj_len;uint8_t ip6oj_jumbo_len[4];};
struct ip6_opt_nsap {uint8_t ip6on_type;uint8_t ip6on_len;uint8_t ip6on_src_nsap_len;uint8_t ip6on_dst_nsap_len;};
struct ip6_opt_router {uint8_t ip6or_type;uint8_t ip6or_len;uint8_t ip6or_value[2];};
struct ip6_opt_tunnel {uint8_t ip6ot_type;uint8_t ip6ot_len;uint8_t ip6ot_encap_limit;};
struct ip6_rthdr {uint8_t ip6r_nxt;uint8_t ip6r_len;uint8_t ip6r_type;uint8_t ip6r_segleft;};
struct ip6_rthdr0 {uint8_t ip6r0_nxt;uint8_t ip6r0_len;uint8_t ip6r0_type;uint8_t ip6r0_segleft;uint8_t ip6r0_reserved;uint8_t ip6r0_slmap[3];struct in6_addr ip6r0_addr[];};
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
struct ip_mreq_source {struct in_addr imr_multiaddr;struct in_addr imr_interface;struct in_addr imr_sourceaddr;};
struct ip_mreqn {struct in_addr imr_multiaddr;struct in_addr imr_address;int imr_ifindex;};
struct ip_msfilter {struct in_addr imsf_multiaddr;struct in_addr imsf_interface;uint32_t imsf_fmode;uint32_t imsf_numsrc;struct in_addr imsf_slist[1];};
struct ip_opts {struct in_addr ip_dst;char ip_opts[40];};
struct ip_timestamp {u_int8_t ipt_code;u_int8_t ipt_len;u_int8_t ipt_ptr;unsigned __int32 ipt_oflw : 4;unsigned __int32 ipt_flg : 4;u_int32_t data[9];};
struct ipc_perm {__key_t __key;__uid_t uid;__gid_t gid;__uid_t cuid;__gid_t cgid;__mode_t mode;__uint32_t __seq;__uint32_t __pad1;__uint64_t __glibc_reserved1;__uint64_t __glibc_reserved2;};
struct iphdr {unsigned __int32 version : 4;unsigned __int32 ihl : 4;u_int8_t tos;u_int16_t tot_len;u_int16_t id;u_int16_t frag_off;u_int8_t ttl;u_int8_t protocol;u_int16_t check;u_int32_t saddr;u_int32_t daddr;};
struct ipv6_mreq {struct in6_addr ipv6mr_multiaddr;unsigned int ipv6mr_interface;};
struct ipx_config_data {unsigned __int8 ipxcfg_auto_select_primary;unsigned __int8 ipxcfg_auto_create_interfaces;};
struct ipx_interface_definition {unsigned int ipx_network;unsigned __int8 ipx_device[16];unsigned __int8 ipx_dlink_type;unsigned __int8 ipx_special;unsigned __int8 ipx_node[6];};
struct ipx_route_def {unsigned int ipx_network;unsigned int ipx_router_network;unsigned __int8 ipx_router_node[6];unsigned __int8 ipx_device[16];unsigned __int16 ipx_flags;};
struct ipx_route_definition {unsigned int ipx_network;unsigned int ipx_router_network;unsigned __int8 ipx_router_node[6];};
struct itimerspec {struct timespec it_interval;struct timespec it_value;};
struct itimerval {struct timeval it_interval;struct timeval it_value;};
struct iw_discarded {__u32 nwid;__u32 code;__u32 fragment;__u32 retries;__u32 misc;};
struct iw_encode_ext {__u32 ext_flags;__u8 tx_seq[8];__u8 rx_seq[8];struct sockaddr addr;__u16 alg;__u16 key_len;__u8 key[];};
struct iw_event {__u16 len;__u16 cmd;union iwreq_data u;};
struct iw_freq {__s32 m;__s16 e;__u8 i;__u8 flags;};
struct iw_michaelmicfailure {__u32 flags;struct sockaddr src_addr;__u8 tsc[8];};
struct iw_missed {__u32 beacon;};
struct iw_mlme {__u16 cmd;__u16 reason_code;struct sockaddr addr;};
struct iw_param {__s32 value;__u8 fixed;__u8 disabled;__u16 flags;};
struct iw_pmkid_cand {__u32 flags;__u32 index;struct sockaddr bssid;};
struct iw_pmksa {__u32 cmd;struct sockaddr bssid;__u8 pmkid[16];};
struct iw_point {void *pointer;__u16 length;__u16 flags;};
struct iw_priv_args {__u32 cmd;__u16 set_args;__u16 get_args;char name[16];};
struct iw_quality {__u8 qual;__u8 level;__u8 noise;__u8 updated;};
struct iw_range {__u32 throughput;__u32 min_nwid;__u32 max_nwid;__u16 old_num_channels;__u8 old_num_frequency;__u8 scan_capa;__u32 event_capa[6];__s32 sensitivity;struct iw_quality max_qual;struct iw_quality avg_qual;__u8 num_bitrates;__s32 bitrate[32];__s32 min_rts;__s32 max_rts;__s32 min_frag;__s32 max_frag;__s32 min_pmp;__s32 max_pmp;__s32 min_pmt;__s32 max_pmt;__u16 pmp_flags;__u16 pmt_flags;__u16 pm_capa;__u16 encoding_size[8];__u8 num_encoding_sizes;__u8 max_encoding_tokens;__u8 encoding_login_index;__u16 txpower_capa;__u8 num_txpower;__s32 txpower[8];__u8 we_version_compiled;__u8 we_version_source;__u16 retry_capa;__u16 retry_flags;__u16 r_time_flags;__s32 min_retry;__s32 max_retry;__s32 min_r_time;__s32 max_r_time;__u16 num_channels;__u8 num_frequency;struct iw_freq freq[32];__u32 enc_capa;};
struct iw_scan_req {__u8 scan_type;__u8 essid_len;__u8 num_channels;__u8 flags;struct sockaddr bssid;__u8 essid[32];__u32 min_channel_time;__u32 max_channel_time;struct iw_freq channel_list[32];};
struct iw_statistics {__u16 status;struct iw_quality qual;struct iw_discarded discard;struct iw_missed miss;};
struct iw_thrspy {struct sockaddr addr;struct iw_quality qual;struct iw_quality low;struct iw_quality high;};
struct iwreq {union iwreq::$4AF2B49FDDB54BAFABDFAE063E6E4A98 ifr_ifrn;union iwreq_data u;};
union iwreq::$4AF2B49FDDB54BAFABDFAE063E6E4A98 {char ifrn_name[16];};
union iwreq_data {char name[16];struct iw_point essid;struct iw_param nwid;struct iw_freq freq;struct iw_param sens;struct iw_param bitrate;struct iw_param txpower;struct iw_param rts;struct iw_param frag;__u32 mode;struct iw_param retry;struct iw_point encoding;struct iw_param power;struct iw_quality qual;struct sockaddr ap_addr;struct sockaddr addr;struct iw_param param;struct iw_point data;};
typedef struct __jmp_buf_tag jmp_buf[1];
struct kbd_repeat {int delay;int period;};
struct kbdiacr {unsigned __int8 diacr;unsigned __int8 base;unsigned __int8 result;};
struct kbdiacrs {unsigned int kb_cnt;struct kbdiacr kbdiacr[256];};
struct kbdiacrsuc {unsigned int kb_cnt;struct kbdiacruc kbdiacruc[256];};
struct kbdiacruc {unsigned int diacr;unsigned int base;unsigned int result;};
struct kbentry {unsigned __int8 kb_table;unsigned __int8 kb_index;unsigned __int16 kb_value;};
struct kbkeycode {unsigned int scancode;unsigned int keycode;};
struct kbsentry {unsigned __int8 kb_func;unsigned __int8 kb_string[512];};
struct key_netstarg {keybuf st_priv_key;keybuf st_pub_key;netnamestr st_netname;};
struct key_netstres {keystatus status;union key_netstres::$2176196DCBB8522A9A1E300DB0535BE5 key_netstres_u;};
union key_netstres::$2176196DCBB8522A9A1E300DB0535BE5 {key_netstarg knet;};
typedef __key_t key_t;
typedef char keybuf[48];
enum keystatus {KEY_SUCCESS = 0x0,KEY_NOSECRET = 0x1,KEY_UNKNOWN = 0x2,KEY_SYSTEMERR = 0x3,};
struct lastlog {__time_t ll_time;char ll_line[32];char ll_host[256];};
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;char int_p_cs_precedes;char int_p_sep_by_space;char int_n_cs_precedes;char int_n_sep_by_space;char int_p_sign_posn;char int_n_sign_posn;};
typedef struct $979FA3DE6ECCF956231BFC297C4278E6 ldiv_t;
struct linger {int l_onoff;int l_linger;};
struct link_map {Elf32_Addr l_addr;char *l_name;Elf32_Dyn *l_ld;struct link_map *l_next;struct link_map *l_prev;};
typedef struct $AC1F0727205AA235F31FA7E4FBAB6931 lldiv_t;
typedef __locale_t locale_t;
typedef __loff_t loff_t;
struct ltchars {char t_suspc;char t_dsuspc;char t_rprntc;char t_flushc;char t_werasc;char t_lnextc;};
typedef __pid_t lwpid_t;
struct mallinfo {int arena;int ordblks;int smblks;int hblks;int hblkhd;int usmblks;int fsmblks;int uordblks;int fordblks;int keepcost;};
typedef __mbstate_t mbstate_t;
enum mcheck_status {MCHECK_DISABLED = 0xFFFFFFFF,MCHECK_OK = 0x0,MCHECK_FREE = 0x1,MCHECK_HEAD = 0x2,MCHECK_TAIL = 0x3,};
typedef struct $4A95AE72B42809ABC82C81692FF3751C mcontext_t;
struct midi_info {char name[30];int device;unsigned int capabilities;int dev_type;int dummies[18];};
struct mixer_info {char id[16];char name[32];int modify_counter;int fillers[10];};
typedef unsigned __int8 mixer_record[128];
struct mixer_vol_table {int num;char name[32];int levels[32];};
struct mld_hdr {struct icmp6_hdr mld_icmp6_hdr;struct in6_addr mld_addr;};
struct mntent {char *mnt_fsname;char *mnt_dir;char *mnt_type;char *mnt_opts;int mnt_freq;int mnt_passno;};
typedef __mode_t mode_t;
typedef struct $880211171E610BEC08A41169F91F4D60 mpu_command_rec;
struct mq_attr {__syscall_slong_t mq_flags;__syscall_slong_t mq_maxmsg;__syscall_slong_t mq_msgsize;__syscall_slong_t mq_curmsgs;__syscall_slong_t __pad[4];};
typedef int mqd_t;
enum msg_type {CALL = 0x0,REPLY = 0x1,};
struct msghdr {void *msg_name;socklen_t msg_namelen;struct iovec *msg_iov;size_t msg_iovlen;void *msg_control;size_t msg_controllen;int msg_flags;};
struct msginfo {int msgpool;int msgmap;int msgmax;int msgmnb;int msgmni;int msgssz;int msgtql;unsigned __int16 msgseg;};
typedef unsigned int msglen_t;
typedef unsigned int msgqnum_t;
struct msqid_ds {struct ipc_perm msg_perm;unsigned int __glibc_reserved1;__time_t msg_stime;unsigned int __glibc_reserved2;__time_t msg_rtime;unsigned int __glibc_reserved3;__time_t msg_ctime;unsigned int __msg_cbytes;msgqnum_t msg_qnum;msglen_t msg_qbytes;__pid_t msg_lspid;__pid_t msg_lrpid;unsigned int __glibc_reserved4;unsigned int __glibc_reserved5;};
struct mt_tape_info {int t_type;char *t_name;};
struct mtconfiginfo {int mt_type;int ifc_type;unsigned __int16 irqnr;unsigned __int16 dmanr;unsigned __int16 port;unsigned int debug;unsigned __int32 have_dens : 1;unsigned __int32 have_bsf : 1;unsigned __int32 have_fsr : 1;unsigned __int32 have_bsr : 1;unsigned __int32 have_eod : 1;unsigned __int32 have_seek : 1;unsigned __int32 have_tell : 1;unsigned __int32 have_ras1 : 1;unsigned __int32 have_ras2 : 1;unsigned __int32 have_ras3 : 1;unsigned __int32 have_qfa : 1;unsigned __int32 pad1 : 5;char reserved[10];};
struct mtget {int mt_type;int mt_resid;int mt_dsreg;int mt_gstat;int mt_erreg;__daddr_t mt_fileno;__daddr_t mt_blkno;};
struct mtop {__int16 mt_op;int mt_count;};
struct mtpos {int mt_blkno;};
typedef u_int32_t n_long;
typedef u_int16_t n_short;
typedef u_int32_t n_time;
struct nd_neighbor_advert {struct icmp6_hdr nd_na_hdr;struct in6_addr nd_na_target;};
struct nd_neighbor_solicit {struct icmp6_hdr nd_ns_hdr;struct in6_addr nd_ns_target;};
struct nd_opt_adv_interval {uint8_t nd_opt_adv_interval_type;uint8_t nd_opt_adv_interval_len;uint16_t nd_opt_adv_interval_reserved;uint32_t nd_opt_adv_interval_ival;};
struct nd_opt_hdr {uint8_t nd_opt_type;uint8_t nd_opt_len;};
struct nd_opt_home_agent_info {uint8_t nd_opt_home_agent_info_type;uint8_t nd_opt_home_agent_info_len;uint16_t nd_opt_home_agent_info_reserved;uint16_t nd_opt_home_agent_info_preference;uint16_t nd_opt_home_agent_info_lifetime;};
struct nd_opt_mtu {uint8_t nd_opt_mtu_type;uint8_t nd_opt_mtu_len;uint16_t nd_opt_mtu_reserved;uint32_t nd_opt_mtu_mtu;};
struct nd_opt_prefix_info {uint8_t nd_opt_pi_type;uint8_t nd_opt_pi_len;uint8_t nd_opt_pi_prefix_len;uint8_t nd_opt_pi_flags_reserved;uint32_t nd_opt_pi_valid_time;uint32_t nd_opt_pi_preferred_time;uint32_t nd_opt_pi_reserved2;struct in6_addr nd_opt_pi_prefix;};
struct nd_opt_rd_hdr {uint8_t nd_opt_rh_type;uint8_t nd_opt_rh_len;uint16_t nd_opt_rh_reserved1;uint32_t nd_opt_rh_reserved2;};
struct nd_redirect {struct icmp6_hdr nd_rd_hdr;struct in6_addr nd_rd_target;struct in6_addr nd_rd_dst;};
struct nd_router_advert {struct icmp6_hdr nd_ra_hdr;uint32_t nd_ra_reachable;uint32_t nd_ra_retransmit;};
struct nd_router_solicit {struct icmp6_hdr nd_rs_hdr;};
enum net_device_flags {IFF_UP = 0x1,IFF_BROADCAST = 0x2,IFF_DEBUG = 0x4,IFF_LOOPBACK = 0x8,IFF_POINTOPOINT = 0x10,IFF_NOTRAILERS = 0x20,IFF_RUNNING = 0x40,IFF_NOARP = 0x80,IFF_PROMISC = 0x100,IFF_ALLMULTI = 0x200,IFF_MASTER = 0x400,IFF_SLAVE = 0x800,IFF_MULTICAST = 0x1000,IFF_PORTSEL = 0x2000,IFF_AUTOMEDIA = 0x4000,IFF_DYNAMIC = 0x8000,IFF_LOWER_UP = 0x10000,IFF_DORMANT = 0x20000,IFF_ECHO = 0x40000,};
struct netent {char *n_name;char **n_aliases;int n_addrtype;uint32_t n_net;};
struct netinfo {struct sockaddr rip_dst;int rip_metric;};
typedef char *netnamestr;
struct netobj {u_int n_len;char *n_bytes;};
typedef unsigned int nfds_t;
enum nfs_ftype {NFNON = 0x0,NFREG = 0x1,NFDIR = 0x2,NFBLK = 0x3,NFCHR = 0x4,NFLNK = 0x5,NFSOCK = 0x6,NFBAD = 0x7,NFFIFO = 0x8,};
enum nfs_stat {NFS_OK = 0x0,NFSERR_PERM = 0x1,NFSERR_NOENT = 0x2,NFSERR_IO = 0x5,NFSERR_NXIO = 0x6,NFSERR_EAGAIN = 0xB,NFSERR_ACCES = 0xD,NFSERR_EXIST = 0x11,NFSERR_XDEV = 0x12,NFSERR_NODEV = 0x13,NFSERR_NOTDIR = 0x14,NFSERR_ISDIR = 0x15,NFSERR_INVAL = 0x16,NFSERR_FBIG = 0x1B,NFSERR_NOSPC = 0x1C,NFSERR_ROFS = 0x1E,NFSERR_MLINK = 0x1F,NFSERR_OPNOTSUPP = 0x2D,NFSERR_NAMETOOLONG = 0x3F,NFSERR_NOTEMPTY = 0x42,NFSERR_DQUOT = 0x45,NFSERR_STALE = 0x46,NFSERR_REMOTE = 0x47,NFSERR_WFLUSH = 0x63,NFSERR_BADHANDLE = 0x2711,NFSERR_NOT_SYNC = 0x2712,NFSERR_BAD_COOKIE = 0x2713,NFSERR_NOTSUPP = 0x2714,NFSERR_TOOSMALL = 0x2715,NFSERR_SERVERFAULT = 0x2716,NFSERR_BADTYPE = 0x2717,NFSERR_JUKEBOX = 0x2718,NFSERR_SAME = 0x2719,NFSERR_DENIED = 0x271A,NFSERR_EXPIRED = 0x271B,NFSERR_LOCKED = 0x271C,NFSERR_GRACE = 0x271D,NFSERR_FHEXPIRED = 0x271E,NFSERR_SHARE_DENIED = 0x271F,NFSERR_WRONGSEC = 0x2720,NFSERR_CLID_INUSE = 0x2721,NFSERR_RESOURCE = 0x2722,NFSERR_MOVED = 0x2723,NFSERR_NOFILEHANDLE = 0x2724,NFSERR_MINOR_VERS_MISMATCH = 0x2725,NFSERR_STALE_CLIENTID = 0x2726,NFSERR_STALE_STATEID = 0x2727,NFSERR_OLD_STATEID = 0x2728,NFSERR_BAD_STATEID = 0x2729,NFSERR_BAD_SEQID = 0x272A,NFSERR_NOT_SAME = 0x272B,NFSERR_LOCK_RANGE = 0x272C,NFSERR_SYMLINK = 0x272D,NFSERR_RESTOREFH = 0x272E,NFSERR_LEASE_MOVED = 0x272F,NFSERR_ATTRNOTSUPP = 0x2730,NFSERR_NO_GRACE = 0x2731,NFSERR_RECLAIM_BAD = 0x2732,NFSERR_RECLAIM_CONFLICT = 0x2733,NFSERR_BAD_XDR = 0x2734,NFSERR_LOCKS_HELD = 0x2735,NFSERR_OPENMODE = 0x2736,NFSERR_BADOWNER = 0x2737,NFSERR_BADCHAR = 0x2738,NFSERR_BADNAME = 0x2739,NFSERR_BAD_RANGE = 0x273A,NFSERR_LOCK_NOTSUPP = 0x273B,NFSERR_OP_ILLEGAL = 0x273C,NFSERR_DEADLOCK = 0x273D,NFSERR_FILE_OPEN = 0x273E,NFSERR_ADMIN_REVOKED = 0x273F,NFSERR_CB_PATH_DOWN = 0x2740,};
typedef void *nl_catd;
typedef int nl_item;
typedef __nlink_t nlink_t;
struct nr_ctl_struct {unsigned __int8 index;unsigned __int8 id;unsigned int cmd;unsigned int arg;};
struct nr_parms_struct {unsigned int quality;unsigned int obs_count;unsigned int ttl;unsigned int timeout;unsigned int ack_delay;unsigned int busy_delay;unsigned int tries;unsigned int window;unsigned int paclen;};
struct nr_route_struct {int type;ax25_address callsign;char device[16];unsigned int quality;char mnemonic[7];ax25_address neighbour;unsigned int obs_count;unsigned int ndigis;ax25_address digipeaters[8];};
typedef enum __ns_cert_types ns_cert_types;
typedef enum __ns_class ns_class;
typedef enum __ns_flag ns_flag;
typedef enum __ns_key_types ns_key_types;
typedef struct __ns_msg ns_msg;
typedef enum __ns_opcode ns_opcode;
typedef enum __ns_rcode ns_rcode;
typedef struct __ns_rr ns_rr;
typedef enum __ns_sect ns_sect;
struct ns_tcp_tsig_state {int counter;struct dst_key *key;void *ctx;unsigned __int8 sig[512];int siglen;};
struct ns_tsig_key {char name[1025];char alg[1025];unsigned __int8 *data;int len;};
typedef enum __ns_type ns_type;
typedef enum __ns_update_operation ns_update_operation;
enum nss_status {NSS_STATUS_TRYAGAIN = 0xFFFFFFFE,NSS_STATUS_UNAVAIL = 0xFFFFFFFF,NSS_STATUS_NOTFOUND = 0x0,NSS_STATUS_SUCCESS = 0x1,NSS_STATUS_RETURN = 0x2,};
struct ntptimeval {struct timeval time;int maxerror;int esterror;int tai;int __glibc_reserved1;int __glibc_reserved2;int __glibc_reserved3;int __glibc_reserved4;};
struct obstack {int chunk_size;struct _obstack_chunk *chunk;char *object_base;char *next_free;char *chunk_limit;union obstack::$EB32574EB45F4F0470D0F374CAEC173A temp;int alignment_mask;struct _obstack_chunk *(*chunkfun)(void *, int);void (*freefun)(void *, struct _obstack_chunk *);void *extra_arg;unsigned __int32 use_extra_arg : 1;unsigned __int32 maybe_empty_object : 1;unsigned __int32 alloc_failed : 1;};
union obstack::$EB32574EB45F4F0470D0F374CAEC173A {int tempint;void *tempptr;};
typedef __off_t off_t;
struct opaque_auth {enum_t oa_flavor;caddr_t oa_base;u_int oa_length;};
struct option {const char *name;int has_arg;int *flag;int val;};
struct osockaddr {unsigned __int16 sa_family;unsigned __int8 sa_data[14];};
typedef int (*out_func)(void *, unsigned __int8 *, unsigned int);
struct packet_mreq {int mr_ifindex;unsigned __int16 mr_type;unsigned __int16 mr_alen;unsigned __int8 mr_address[8];};
struct passwd {char *pw_name;char *pw_passwd;__uid_t pw_uid;__gid_t pw_gid;char *pw_gecos;char *pw_dir;char *pw_shell;};
struct patch_info {unsigned __int16 key;__int16 device_no;__int16 instr_no;unsigned int mode;int len;int loop_start;int loop_end;unsigned int base_freq;unsigned int base_note;unsigned int high_note;unsigned int low_note;int panning;int detuning;unsigned __int8 env_rate[6];unsigned __int8 env_offset[6];unsigned __int8 tremolo_sweep;unsigned __int8 tremolo_rate;unsigned __int8 tremolo_depth;unsigned __int8 vibrato_sweep;unsigned __int8 vibrato_rate;unsigned __int8 vibrato_depth;int scale_frequency;unsigned int scale_factor;int volume;int fractions;int reserved1;int spare[2];char data[1];};
typedef __pid_t pid_t;
struct pmap {unsigned int pm_prog;unsigned int pm_vers;unsigned int pm_prot;unsigned int pm_port;};
struct pmaplist {struct pmap pml_map;struct pmaplist *pml_next;};
struct pollfd {int fd;__int16 events;__int16 revents;};
typedef struct $276527E852EBD04F842021527F4FA45F posix_spawn_file_actions_t;
typedef struct $B4C695B0250A38B82AFFE65B8304A51A posix_spawnattr_t;
struct ppc_debug_info {__u32 version;__u32 num_instruction_bps;__u32 num_data_bps;__u32 num_condition_regs;__u32 data_bp_alignment;__u32 sizeof_condition;__u64 features;};
struct ppc_hw_breakpoint {__u32 version;__u32 trigger_type;__u32 addr_mode;__u32 condition_mode;__u64 addr;__u64 addr2;__u64 condition_value;};
struct ppp_comp_stats {struct compstat c;struct compstat d;};
struct ppp_idle {__kernel_time_t xmit_idle;__kernel_time_t recv_idle;};
struct ppp_stats {struct pppstat p;struct vjstat vj;};
struct pppstat {__u32 ppp_discards;__u32 ppp_ibytes;__u32 ppp_ioctects;__u32 ppp_ipackets;__u32 ppp_ierrors;__u32 ppp_ilqrs;__u32 ppp_obytes;__u32 ppp_ooctects;__u32 ppp_opackets;__u32 ppp_oerrors;__u32 ppp_olqrs;};
struct prctl_mm_map {__u64 start_code;__u64 end_code;__u64 start_data;__u64 end_data;__u64 start_brk;__u64 brk;__u64 start_stack;__u64 arg_start;__u64 arg_end;__u64 env_start;__u64 env_end;__u64 *auxv;__u32 auxv_size;__u32 exe_fd;};
typedef elf_fpregset_t prfpregset_t;
typedef elf_gregset_t prgregset_t;
typedef int printf_arginfo_function(const struct printf_info *info, size_t n, int *argtypes);
typedef int printf_arginfo_size_function(const struct printf_info *info, size_t n, int *argtypes, int *size);
typedef int printf_function(FILE *stream, const struct printf_info *info, const void *const *args);
struct printf_info {int prec;int width;wchar_t spec;unsigned __int32 is_long_double : 1;unsigned __int32 is_short : 1;unsigned __int32 is_long : 1;unsigned __int32 alt : 1;unsigned __int32 space : 1;unsigned __int32 left : 1;unsigned __int32 showsign : 1;unsigned __int32 group : 1;unsigned __int32 extra : 1;unsigned __int32 is_char : 1;unsigned __int32 wide : 1;unsigned __int32 i18n : 1;unsigned __int32 __pad : 4;unsigned __int16 user;wchar_t pad;};
typedef void printf_va_arg_function(void *mem, va_list *ap);
struct prof {void *pr_base;size_t pr_size;size_t pr_off;unsigned int pr_scale;};
struct protoent {char *p_name;char **p_aliases;int p_proto;};
typedef struct elf_prpsinfo prpsinfo_t;
typedef struct elf_prstatus prstatus_t;
struct ps_prochandle;
typedef void *psaddr_t;
struct pt_regs {unsigned int gpr[32];unsigned int nip;unsigned int msr;unsigned int orig_gpr3;unsigned int ctr;unsigned int link;unsigned int xer;unsigned int ccr;unsigned int mq;unsigned int trap;unsigned int dar;unsigned int dsisr;unsigned int result;};
union pthread_attr_t {char __size[36];int __align;};
typedef union $D1779CA5851A61401DD36BCDAF347214 pthread_barrier_t;
typedef union $D1D0F511BF997F52624AFB2B0CE27B40 pthread_barrierattr_t;
typedef union $1C4035FDEAFFF0FCE26E66A96F6BBEB4 pthread_cond_t;
typedef union $D1D0F511BF997F52624AFB2B0CE27B40 pthread_condattr_t;
typedef unsigned int pthread_key_t;
typedef union $F85E194B51CBDC38F209555F4162D10C pthread_mutex_t;
typedef union $D1D0F511BF997F52624AFB2B0CE27B40 pthread_mutexattr_t;
typedef int pthread_once_t;
typedef union $D36E22DA4C7BB4337B5F0B148FE5AAF7 pthread_rwlock_t;
typedef union $7B6D3CF7C92E6402FF2DDB4E46F022F4 pthread_rwlockattr_t;
typedef volatile int pthread_spinlock_t;
typedef unsigned int pthread_t;
typedef int ptrdiff_t;
typedef __quad_t quad_t;
struct r_debug {int r_version;struct link_map *r_map;Elf32_Addr r_brk;enum r_debug::$AF097615159EB3CBDA82C5A5C14EBA11 r_state;Elf32_Addr r_ldbase;};
enum r_debug::$AF097615159EB3CBDA82C5A5C14EBA11 {RT_CONSISTENT = 0x0,RT_ADD = 0x1,RT_DELETE = 0x2,};
struct random_data {int32_t *fptr;int32_t *rptr;int32_t *state;int rand_type;int rand_deg;int rand_sep;int32_t *end_ptr;};
struct raw_config_request {int raw_minor;uint64_t block_major;uint64_t block_minor;};
typedef struct $F1F9335C32D188513BC2595A34A539C6 raw_hdlc_proto;
struct rawarc {u_long raw_frompc;u_long raw_selfpc;int raw_count;};
struct re_pattern_buffer {unsigned __int8 *__buffer;unsigned int __allocated;unsigned int __used;reg_syntax_t __syntax;char *__fastmap;unsigned __int8 *__translate;size_t re_nsub;unsigned __int32 __can_be_null : 1;unsigned __int32 __regs_allocated : 2;unsigned __int32 __fastmap_accurate : 1;unsigned __int32 __no_sub : 1;unsigned __int32 __not_bol : 1;unsigned __int32 __not_eol : 1;unsigned __int32 __newline_anchor : 1;};
typedef enum $8B8F331936A9C3786664C6159BA2308F reg_errcode_t;
typedef unsigned int reg_syntax_t;
typedef struct re_pattern_buffer regex_t;
typedef int register_t;
typedef struct $BD619B2F7AFF7BA6F06506AA27210664 regmatch_t;
typedef int regoff_t;
enum reject_stat {RPC_MISMATCH = 0x0,AUTH_ERROR = 0x1,};
struct rejected_reply {enum reject_stat rj_stat;union rejected_reply::$D36433C375B856769A86CDA2CFADE497 ru;};
union rejected_reply::$D36433C375B856769A86CDA2CFADE497 {struct rejected_reply::$D36433C375B856769A86CDA2CFADE497::$C081DE2363A7D6E022ACDA68492DBB3F RJ_versions;enum auth_stat RJ_why;};
struct rejected_reply::$D36433C375B856769A86CDA2CFADE497::$C081DE2363A7D6E022ACDA68492DBB3F {u_long low;u_long high;};
struct remove_sample {int devno;int bankno;int instrno;};
struct reply_body {enum reply_stat rp_stat;union reply_body::$3176F759A4E4A0B30BE44C0FA3C218CC ru;};
union reply_body::$3176F759A4E4A0B30BE44C0FA3C218CC {struct accepted_reply RP_ar;struct rejected_reply RP_dr;};
enum reply_stat {MSG_ACCEPTED = 0x0,MSG_DENIED = 0x1,};
typedef res_sendhookact (*res_send_qhook)(struct sockaddr_in *const *ns, const u_char **query, int *querylen, u_char *ans, int anssiz, int *resplen);
typedef res_sendhookact (*res_send_rhook)(const struct sockaddr_in *ns, const u_char *query, int querylen, u_char *ans, int anssiz, int *resplen);
typedef enum $3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_sendhookact;
typedef struct __res_state *res_state;
struct res_sym {int number;char *name;char *humanname;};
typedef bool_t (*resultproc_t)(caddr_t resp, struct sockaddr_in *raddr);
struct rip {u_char rip_cmd;u_char rip_vers;u_char rip_res1[2];union rip::$AFFF135AAACB9FA320A59FAF8451ECA8 ripun;};
union rip::$AFFF135AAACB9FA320A59FAF8451ECA8 {struct netinfo ru_nets[1];char ru_tracefile[1];};
typedef __rlim_t rlim_t;
struct rlimit {rlim_t rlim_cur;rlim_t rlim_max;};
struct rmtcallargs {u_long prog;u_long vers;u_long proc;u_long arglen;caddr_t args_ptr;xdrproc_t xdr_args;};
struct rmtcallres {u_long *port_ptr;u_long resultslen;caddr_t results_ptr;xdrproc_t xdr_results;};
typedef struct $EDB85F966E4A638CA0FF7E75C4B94ACF rose_address;
struct rose_cause_struct {unsigned __int8 cause;unsigned __int8 diagnostic;};
struct rose_facilities_struct {rose_address source_addr;rose_address dest_addr;ax25_address source_call;ax25_address dest_call;unsigned __int8 source_ndigis;unsigned __int8 dest_ndigis;ax25_address source_digis[6];ax25_address dest_digis[6];unsigned int rand;rose_address fail_addr;ax25_address fail_call;};
struct rose_route_struct {rose_address address;unsigned __int16 mask;ax25_address neighbour;char device[16];unsigned __int8 ndigis;ax25_address digipeaters[8];};
struct rpc_createerr {enum clnt_stat cf_stat;struct rpc_err cf_error;};
struct rpc_err {enum clnt_stat re_status;union rpc_err::$20A10790E27E739F57AC739A9EB3B2A2 ru;};
union rpc_err::$20A10790E27E739F57AC739A9EB3B2A2 {int RE_errno;enum auth_stat RE_why;struct rpc_err::$20A10790E27E739F57AC739A9EB3B2A2::$C081DE2363A7D6E022ACDA68492DBB3F RE_vers;struct rpc_err::$20A10790E27E739F57AC739A9EB3B2A2::$BF7AC7AAFAE2A9D4F26CD1E6B816F6B2 RE_lb;};
struct rpc_err::$20A10790E27E739F57AC739A9EB3B2A2::$BF7AC7AAFAE2A9D4F26CD1E6B816F6B2 {int s1;int s2;};
struct rpc_err::$20A10790E27E739F57AC739A9EB3B2A2::$C081DE2363A7D6E022ACDA68492DBB3F {u_long low;u_long high;};
struct rpc_msg {u_long rm_xid;enum msg_type rm_direction;union rpc_msg::$7D774571B4FAB0E4BBD540829030FA52 ru;};
union rpc_msg::$7D774571B4FAB0E4BBD540829030FA52 {struct call_body RM_cmb;struct reply_body RM_rmb;};
struct rpc_timeval {uint32_t tv_sec;uint32_t tv_usec;};
struct rpcent {char *r_name;char **r_aliases;int r_number;};
typedef unsigned int rpcport_t;
typedef unsigned int rpcproc_t;
typedef unsigned int rpcprog_t;
typedef unsigned int rpcprot_t;
typedef unsigned int rpcvers_t;
struct rr_pco_match {uint8_t rpm_code;uint8_t rpm_len;uint8_t rpm_ordinal;uint8_t rpm_matchlen;uint8_t rpm_minlen;uint8_t rpm_maxlen;uint16_t rpm_reserved;struct in6_addr rpm_prefix;};
struct rr_pco_use {uint8_t rpu_uselen;uint8_t rpu_keeplen;uint8_t rpu_ramask;uint8_t rpu_raflags;uint32_t rpu_vltime;uint32_t rpu_pltime;uint32_t rpu_flags;struct in6_addr rpu_prefix;};
struct rr_result {uint16_t rrr_flags;uint8_t rrr_ordinal;uint8_t rrr_matchedlen;uint32_t rrr_ifid;struct in6_addr rrr_prefix;};
struct rtentry {unsigned int rt_pad1;struct sockaddr rt_dst;struct sockaddr rt_gateway;struct sockaddr rt_genmask;unsigned __int16 rt_flags;__int16 rt_pad2;unsigned int rt_pad3;unsigned __int8 rt_tos;unsigned __int8 rt_class;__int16 rt_pad4;__int16 rt_metric;char *rt_dev;unsigned int rt_mtu;unsigned int rt_window;unsigned __int16 rt_irtt;};
struct rusage {struct timeval ru_utime;struct timeval ru_stime;union {int ru_maxrss;__syscall_slong_t __ru_maxrss_word;};union {int ru_ixrss;__syscall_slong_t __ru_ixrss_word;};union {int ru_idrss;__syscall_slong_t __ru_idrss_word;};union {int ru_isrss;__syscall_slong_t __ru_isrss_word;};union {int ru_minflt;__syscall_slong_t __ru_minflt_word;};union {int ru_majflt;__syscall_slong_t __ru_majflt_word;};union {int ru_nswap;__syscall_slong_t __ru_nswap_word;};union {int ru_inblock;__syscall_slong_t __ru_inblock_word;};union {int ru_oublock;__syscall_slong_t __ru_oublock_word;};union {int ru_msgsnd;__syscall_slong_t __ru_msgsnd_word;};union {int ru_msgrcv;__syscall_slong_t __ru_msgrcv_word;};union {int ru_nsignals;__syscall_slong_t __ru_nsignals_word;};union {int ru_nvcsw;__syscall_slong_t __ru_nvcsw_word;};union {int ru_nivcsw;__syscall_slong_t __ru_nivcsw_word;};};
union rusage::$1A6DCBA38308221EE66F94832EAD0EFC {int ru_majflt;__syscall_slong_t __ru_majflt_word;};
union rusage::$2009CE88AB796E85DF5B4781DE0BF086 {int ru_inblock;__syscall_slong_t __ru_inblock_word;};
union rusage::$2A32D032BB8F3D17E478F5965F412679 {int ru_idrss;__syscall_slong_t __ru_idrss_word;};
union rusage::$451A099718869C217105AE512BEDF013 {int ru_nivcsw;__syscall_slong_t __ru_nivcsw_word;};
union rusage::$790F5442B41567BD568942E19F34AEEA {int ru_msgsnd;__syscall_slong_t __ru_msgsnd_word;};
union rusage::$9525CB3B568DAA1973DF0646000CDE65 {int ru_isrss;__syscall_slong_t __ru_isrss_word;};
union rusage::$BA9C0E6F199CA0C12054B886FB65A7F6 {int ru_msgrcv;__syscall_slong_t __ru_msgrcv_word;};
union rusage::$C12777ABDB8AE34FA065A622EFDF1506 {int ru_oublock;__syscall_slong_t __ru_oublock_word;};
union rusage::$C9888AEA89E0619756A7AD59B80C2820 {int ru_maxrss;__syscall_slong_t __ru_maxrss_word;};
union rusage::$D2820A554B3687518EC4E350960F7AD2 {int ru_minflt;__syscall_slong_t __ru_minflt_word;};
union rusage::$DD3BC0811A6B10C973E96E6D40FF9259 {int ru_ixrss;__syscall_slong_t __ru_ixrss_word;};
union rusage::$E4AC3A6D49EAECB11D8639A177A4C289 {int ru_nswap;__syscall_slong_t __ru_nswap_word;};
union rusage::$ECACCB923C6131C3A3D62150FFA7D837 {int ru_nvcsw;__syscall_slong_t __ru_nvcsw_word;};
union rusage::$FE1085892EC40DBA7EB0F56E600DD979 {int ru_nsignals;__syscall_slong_t __ru_nsignals_word;};
typedef int s_reg_t;
typedef unsigned __int16 sa_family_t;
typedef unsigned __int8 sbi_instr_data[32];
struct sbi_instrument {unsigned __int16 key;__int16 device;int channel;sbi_instr_data operators;};
struct sched_param {int __sched_priority;};
typedef char scrnmap_t;
typedef union $F802AEB59326FE5752476AC56FC6EFE2 sem_t;
struct sembuf {unsigned __int16 sem_num;__int16 sem_op;__int16 sem_flg;};
struct semid_ds {struct ipc_perm sem_perm;unsigned int __glibc_reserved1;__time_t sem_otime;unsigned int __glibc_reserved2;__time_t sem_ctime;unsigned int sem_nsems;unsigned int __glibc_reserved3;unsigned int __glibc_reserved4;};
struct seminfo {int semmap;int semmni;int semmns;int semmnu;int semmsl;int semopm;int semume;int semusz;int semvmx;int semaem;};
struct seq_event_rec {unsigned __int8 arr[8];};
struct servent {char *s_name;char **s_aliases;int s_port;char *s_proto;};
struct sgttyb {char sg_ispeed;char sg_ospeed;char sg_erase;char sg_kill;__int16 sg_flags;};
struct shm_info {int used_ids;unsigned int shm_tot;unsigned int shm_rss;unsigned int shm_swp;unsigned int swap_attempts;unsigned int swap_successes;};
typedef unsigned int shmatt_t;
struct shmid_ds {struct ipc_perm shm_perm;unsigned int __glibc_reserved1;__time_t shm_atime;unsigned int __glibc_reserved2;__time_t shm_dtime;unsigned int __glibc_reserved3;__time_t shm_ctime;unsigned int __glibc_reserved4;size_t shm_segsz;__pid_t shm_cpid;__pid_t shm_lpid;shmatt_t shm_nattch;unsigned int __glibc_reserved5;unsigned int __glibc_reserved6;};
struct shminfo {unsigned int shmmax;unsigned int shmmin;unsigned int shmmni;unsigned int shmseg;unsigned int shmall;unsigned int __glibc_reserved1;unsigned int __glibc_reserved2;unsigned int __glibc_reserved3;unsigned int __glibc_reserved4;};
struct short_hand_verf {struct opaque_auth new_cred;};
typedef __sig_atomic_t sig_atomic_t;
typedef __sighandler_t sig_t;
struct sigaction {union sigaction::$8A6CDC2F5AA8DF854CEC54DCAF095C68 __sigaction_handler;__sigset_t sa_mask;int sa_flags;void (*sa_restorer)(void);};
union sigaction::$8A6CDC2F5AA8DF854CEC54DCAF095C68 {__sighandler_t sa_handler;void (*sa_sigaction)(int, siginfo_t *, void *);};
struct sigaltstack {void *ss_sp;int ss_flags;size_t ss_size;};
struct sigcontext {unsigned int _unused[4];int signal;unsigned int handler;unsigned int oldmask;struct pt_regs *regs;};
struct sigevent {sigval_t sigev_value;int sigev_signo;int sigev_notify;union sigevent::$339277D09C531EE5F80222FC107B4C44 _sigev_un;};
union sigevent::$339277D09C531EE5F80222FC107B4C44 {int _pad[13];__pid_t _tid;struct sigevent::$339277D09C531EE5F80222FC107B4C44::$3CCB270D07DB4E43692019F23BF09086 _sigev_thread;};
struct sigevent::$339277D09C531EE5F80222FC107B4C44::$3CCB270D07DB4E43692019F23BF09086 {void (*_function)(sigval_t);pthread_attr_t *_attribute;};
typedef struct sigevent sigevent_t;
typedef struct $E6E886A30EEC292ED01E9A730B5036F1 siginfo_t;
typedef struct __jmp_buf_tag sigjmp_buf[1];
typedef __sigset_t sigset_t;
struct sigstack {void *ss_sp;int ss_onstack;};
union sigval {int sival_int;void *sival_ptr;};
typedef union sigval sigval_t;
typedef unsigned int size_t;
struct sockaddr {sa_family_t sa_family;char sa_data[14];};
struct sockaddr_ash {sa_family_t sash_family;int sash_ifindex;unsigned __int8 sash_channel;unsigned int sash_plen;unsigned __int8 sash_prefix[16];};
struct sockaddr_at {__kernel_sa_family_t sat_family;__u8 sat_port;struct atalk_addr sat_addr;char sat_zero[8];};
struct sockaddr_ax25 {sa_family_t sax25_family;ax25_address sax25_call;int sax25_ndigis;};
struct sockaddr_ec {sa_family_t sec_family;unsigned __int8 port;unsigned __int8 cb;unsigned __int8 type;struct ec_addr addr;unsigned int cookie;};
struct sockaddr_in {sa_family_t sin_family;in_port_t sin_port;struct in_addr sin_addr;unsigned __int8 sin_zero[8];};
struct sockaddr_in6 {sa_family_t sin6_family;in_port_t sin6_port;uint32_t sin6_flowinfo;struct in6_addr sin6_addr;uint32_t sin6_scope_id;};
struct sockaddr_ipx {sa_family_t sipx_family;u_int16_t sipx_port;u_int32_t sipx_network;unsigned __int8 sipx_node[6];u_int8_t sipx_type;unsigned __int8 sipx_zero;};
struct sockaddr_ll {unsigned __int16 sll_family;unsigned __int16 sll_protocol;int sll_ifindex;unsigned __int16 sll_hatype;unsigned __int8 sll_pkttype;unsigned __int8 sll_halen;unsigned __int8 sll_addr[8];};
struct sockaddr_pkt {sa_family_t spkt_family;unsigned __int8 spkt_device[14];unsigned __int16 spkt_protocol;};
struct sockaddr_rose {sa_family_t srose_family;rose_address srose_addr;ax25_address srose_call;int srose_ndigis;ax25_address srose_digi;};
struct sockaddr_storage {sa_family_t ss_family;unsigned int __ss_align;char __ss_padding[120];};
struct sockaddr_un {sa_family_t sun_family;char sun_path[108];};
typedef __socklen_t socklen_t;
struct sound_timer_info {char name[32];int caps;};
typedef unsigned int speed_t;
struct spwd {char *sp_namp;char *sp_pwdp;int sp_lstchg;int sp_min;int sp_max;int sp_warn;int sp_inact;int sp_expire;unsigned int sp_flag;};
typedef const struct _ss_request_entry ss_request_entry;
typedef const struct _ss_request_table ss_request_table;
typedef struct _ss_rp_options ss_rp_options;
typedef __ssize_t ssize_t;
typedef struct sigaltstack stack_t;
struct stat {__dev_t st_dev;unsigned __int16 __pad1;__ino_t st_ino;__mode_t st_mode;__nlink_t st_nlink;__uid_t st_uid;__gid_t st_gid;__dev_t st_rdev;unsigned __int16 __pad2;__off_t st_size;__blksize_t st_blksize;__blkcnt_t st_blocks;struct timespec st_atim;struct timespec st_mtim;struct timespec st_ctim;unsigned int __glibc_reserved4;unsigned int __glibc_reserved5;};
struct statfs {__fsword_t f_type;__fsword_t f_bsize;__fsblkcnt_t f_blocks;__fsblkcnt_t f_bfree;__fsblkcnt_t f_bavail;__fsfilcnt_t f_files;__fsfilcnt_t f_ffree;__fsid_t f_fsid;__fsword_t f_namelen;__fsword_t f_frsize;__fsword_t f_flags;__fsword_t f_spare[4];};
struct statvfs {unsigned int f_bsize;unsigned int f_frsize;__fsblkcnt_t f_blocks;__fsblkcnt_t f_bfree;__fsblkcnt_t f_bavail;__fsfilcnt_t f_files;__fsfilcnt_t f_ffree;__fsfilcnt_t f_favail;unsigned int f_fsid;int __f_unused;unsigned int f_flag;unsigned int f_namemax;int __f_spare[6];};
struct str_list {int sl_nmods;struct str_mlist *sl_modlist;};
struct str_mlist {char l_name[9];};
struct strbuf {int maxlen;int len;char *buf;};
struct strfdinsert {struct strbuf ctlbuf;struct strbuf databuf;t_uscalar_t flags;int fildes;int offset;};
struct strioctl {int ic_cmd;int ic_timout;int ic_len;char *ic_dp;};
struct strpeek {struct strbuf ctlbuf;struct strbuf databuf;t_uscalar_t flags;};
struct strrecvfd {int fd;uid_t uid;gid_t gid;char __fill[8];};
typedef __suseconds_t suseconds_t;
struct svc_req {rpcprog_t rq_prog;rpcvers_t rq_vers;rpcproc_t rq_proc;struct opaque_auth rq_cred;caddr_t rq_clntcred;SVCXPRT *rq_xprt;};
typedef struct $EEC12600E3B3BC42C851475B8200B3A2 sync_serial_settings;
struct synth_control {int devno;char data[4000];};
struct synth_info {char name[30];int device;int synth_type;int synth_subtype;int perc_mode;int nr_voices;int nr_drums;int instr_bank_size;unsigned int capabilities;int dummies[19];};
struct sysex_info {__int16 key;__int16 device_no;int len;unsigned __int8 data[1];};
struct sysinfo {__kernel_long_t uptime;__kernel_ulong_t loads[3];__kernel_ulong_t totalram;__kernel_ulong_t freeram;__kernel_ulong_t sharedram;__kernel_ulong_t bufferram;__kernel_ulong_t totalswap;__kernel_ulong_t freeswap;__u16 procs;__u16 pad;__kernel_ulong_t totalhigh;__kernel_ulong_t freehigh;__u32 mem_unit;char _f[8];};
typedef __t_scalar_t t_scalar_t;
typedef __t_uscalar_t t_uscalar_t;
typedef unsigned int tcflag_t;
struct tchars {char t_intrc;char t_quitc;char t_startc;char t_stopc;char t_eofc;char t_brkc;};
enum tcp_ca_state {TCP_CA_Open = 0x0,TCP_CA_Disorder = 0x1,TCP_CA_CWR = 0x2,TCP_CA_Recovery = 0x3,TCP_CA_Loss = 0x4,};
struct tcp_cookie_transactions {u_int16_t tcpct_flags;u_int8_t __tcpct_pad1;u_int8_t tcpct_cookie_desired;u_int16_t tcpct_s_data_desired;u_int16_t tcpct_used;u_int8_t tcpct_value[536];};
struct tcp_info {u_int8_t tcpi_state;u_int8_t tcpi_ca_state;u_int8_t tcpi_retransmits;u_int8_t tcpi_probes;u_int8_t tcpi_backoff;u_int8_t tcpi_options;unsigned __int8 tcpi_snd_wscale : 4;unsigned __int8 tcpi_rcv_wscale : 4;u_int32_t tcpi_rto;u_int32_t tcpi_ato;u_int32_t tcpi_snd_mss;u_int32_t tcpi_rcv_mss;u_int32_t tcpi_unacked;u_int32_t tcpi_sacked;u_int32_t tcpi_lost;u_int32_t tcpi_retrans;u_int32_t tcpi_fackets;u_int32_t tcpi_last_data_sent;u_int32_t tcpi_last_ack_sent;u_int32_t tcpi_last_data_recv;u_int32_t tcpi_last_ack_recv;u_int32_t tcpi_pmtu;u_int32_t tcpi_rcv_ssthresh;u_int32_t tcpi_rtt;u_int32_t tcpi_rttvar;u_int32_t tcpi_snd_ssthresh;u_int32_t tcpi_snd_cwnd;u_int32_t tcpi_advmss;u_int32_t tcpi_reordering;u_int32_t tcpi_rcv_rtt;u_int32_t tcpi_rcv_space;u_int32_t tcpi_total_retrans;};
struct tcp_md5sig {struct sockaddr_storage tcpm_addr;u_int16_t __tcpm_pad1;u_int16_t tcpm_keylen;u_int32_t __tcpm_pad2;u_int8_t tcpm_key[80];};
struct tcp_repair_opt {u_int32_t opt_code;u_int32_t opt_val;};
typedef u_int32_t tcp_seq;
struct tcphdr {union {struct {u_int16_t th_sport;u_int16_t th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned __int8 th_off : 4;unsigned __int8 th_x2 : 4;u_int8_t th_flags;u_int16_t th_win;u_int16_t th_sum;u_int16_t th_urp;};struct {u_int16_t source;u_int16_t dest;u_int32_t seq;u_int32_t ack_seq;unsigned __int16 doff : 4;unsigned __int16 res1 : 4;unsigned __int16 res2 : 2;unsigned __int16 urg : 1;unsigned __int16 ack : 1;unsigned __int16 psh : 1;unsigned __int16 rst : 1;unsigned __int16 syn : 1;unsigned __int16 fin : 1;u_int16_t window;u_int16_t check;u_int16_t urg_ptr;};};};
union tcphdr::$F18A8ED6C370F6CDF7FD02975A37E22C {struct {u_int16_t th_sport;u_int16_t th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned __int8 th_off : 4;unsigned __int8 th_x2 : 4;u_int8_t th_flags;u_int16_t th_win;u_int16_t th_sum;u_int16_t th_urp;};struct {u_int16_t source;u_int16_t dest;u_int32_t seq;u_int32_t ack_seq;unsigned __int16 doff : 4;unsigned __int16 res1 : 4;unsigned __int16 res2 : 2;unsigned __int16 urg : 1;unsigned __int16 ack : 1;unsigned __int16 psh : 1;unsigned __int16 rst : 1;unsigned __int16 syn : 1;unsigned __int16 fin : 1;u_int16_t window;u_int16_t check;u_int16_t urg_ptr;};};
struct tcphdr::$F18A8ED6C370F6CDF7FD02975A37E22C::$BB6E70BDB02C839AF1982D228937907A {u_int16_t th_sport;u_int16_t th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned __int8 th_off : 4;unsigned __int8 th_x2 : 4;u_int8_t th_flags;u_int16_t th_win;u_int16_t th_sum;u_int16_t th_urp;};
struct tcphdr::$F18A8ED6C370F6CDF7FD02975A37E22C::$F8FE6EE753467DF428F89FC0C773407C {u_int16_t source;u_int16_t dest;u_int32_t seq;u_int32_t ack_seq;unsigned __int16 doff : 4;unsigned __int16 res1 : 4;unsigned __int16 res2 : 2;unsigned __int16 urg : 1;unsigned __int16 ack : 1;unsigned __int16 psh : 1;unsigned __int16 rst : 1;unsigned __int16 syn : 1;unsigned __int16 fin : 1;u_int16_t window;u_int16_t check;u_int16_t urg_ptr;};
typedef enum $B66645BB19D3E41D07C841CC99076606 td_err_e;
typedef enum $65CF98EECFB69F691B0631C04FBFD9D4 td_event_e;
struct td_event_msg {td_event_e event;const td_thrhandle_t *th_p;union td_event_msg::$93B01EC8B2A37DE149D5B3F5BB1472F3 msg;};
union td_event_msg::$93B01EC8B2A37DE149D5B3F5BB1472F3 {uintptr_t data;};
typedef struct td_event_msg td_event_msg_t;
typedef struct $13745364EEA695BC65B7D4AAC1B24515 td_eventbuf_t;
typedef int td_key_iter_f(thread_key_t, void (*)(void *), void *);
struct td_notify {td_notify_e type;union td_notify::$143F0EF771439D241AFD6E8AB1506B64 u;};
union td_notify::$143F0EF771439D241AFD6E8AB1506B64 {psaddr_t bptaddr;int syscallno;};
typedef enum $E1B461D6ADC649FA7943809455C6C6EE td_notify_e;
typedef struct td_notify td_notify_t;
struct td_ta_stats {int nthreads;int r_concurrency;int nrunnable_num;int nrunnable_den;int a_concurrency_num;int a_concurrency_den;int nlwps_num;int nlwps_den;int nidle_num;int nidle_den;};
typedef struct td_ta_stats td_ta_stats_t;
struct td_thr_events {uint32_t event_bits[2];};
typedef struct td_thr_events td_thr_events_t;
typedef int td_thr_iter_f(const td_thrhandle_t *, void *);
typedef enum $D4AB9A46DE65367CC0FF11AD6E77796A td_thr_state_e;
typedef enum $89FB60EA18EC68E58342D0F505790FD5 td_thr_type_e;
struct td_thragent;
typedef struct td_thragent td_thragent_t;
struct td_thrhandle {td_thragent_t *th_ta_p;psaddr_t th_unique;};
typedef struct td_thrhandle td_thrhandle_t;
struct td_thrinfo {td_thragent_t *ti_ta_p;unsigned int ti_user_flags;thread_t ti_tid;char *ti_tls;psaddr_t ti_startfunc;psaddr_t ti_stkbase;int ti_stksize;psaddr_t ti_ro_area;int ti_ro_size;td_thr_state_e ti_state;unsigned __int8 ti_db_suspended;td_thr_type_e ti_type;intptr_t ti_pc;intptr_t ti_sp;__int16 ti_flags;int ti_pri;lwpid_t ti_lid;sigset_t ti_sigmask;unsigned __int8 ti_traceme;unsigned __int8 ti_preemptflag;unsigned __int8 ti_pirecflag;sigset_t ti_pending;td_thr_events_t ti_events;};
typedef struct td_thrinfo td_thrinfo_t;
typedef struct $96852D299A3BC18B35313C48EFA48634 te1_settings;
struct term {TERMTYPE type;__int16 Filedes;struct termios Ottyb;struct termios Nttyb;int _baudrate;char *_termname;};
struct termio {unsigned __int16 c_iflag;unsigned __int16 c_oflag;unsigned __int16 c_cflag;unsigned __int16 c_lflag;unsigned __int8 c_line;unsigned __int8 c_cc[10];};
struct termios {tcflag_t c_iflag;tcflag_t c_oflag;tcflag_t c_cflag;tcflag_t c_lflag;cc_t c_line;cc_t c_cc[32];speed_t c_ispeed;speed_t c_ospeed;};
struct termtype {char *term_names;char *str_table;char *Booleans;__int16 *Numbers;char **Strings;char *ext_str_table;char **ext_Names;unsigned __int16 num_Booleans;unsigned __int16 num_Numbers;unsigned __int16 num_Strings;unsigned __int16 ext_Booleans;unsigned __int16 ext_Numbers;unsigned __int16 ext_Strings;};
struct tftphdr {__int16 th_opcode;union tftphdr::$1274AFCA1A4F331486EAD4CD46EAD4D5 th_u1;};
union tftphdr::$1274AFCA1A4F331486EAD4CD46EAD4D5 {char tu_padding[3];struct tftphdr::$1274AFCA1A4F331486EAD4CD46EAD4D5::$4172AB5767F23D62E21800A3CF5D945D th_u2;char tu_stuff[];};
struct tftphdr::$1274AFCA1A4F331486EAD4CD46EAD4D5::$4172AB5767F23D62E21800A3CF5D945D {union tftphdr::$::$4172AB5767F23D62E21800A3CF5D945D::$45C12AF7FE255FC44175B22DB1DFFF77 th_u3;char tu_data[];};
union tftphdr::$::$4172AB5767F23D62E21800A3CF5D945D::$45C12AF7FE255FC44175B22DB1DFFF77 {unsigned __int16 tu_block;__int16 tu_code;};
typedef pthread_key_t thread_key_t;
typedef pthread_t thread_t;
typedef __time_t time_t;
struct timeb {time_t time;unsigned __int16 millitm;__int16 timezone;__int16 dstflag;};
typedef __timer_t timer_t;
struct timespec {__time_t tv_sec;__syscall_slong_t tv_nsec;};
struct timestamp {u_int8_t len;u_int8_t ptr;unsigned __int32 overflow : 4;unsigned __int32 flags : 4;u_int32_t data[9];};
struct timeval {__time_t tv_sec;__suseconds_t tv_usec;};
struct timex {unsigned int modes;__syscall_slong_t offset;__syscall_slong_t freq;__syscall_slong_t maxerror;__syscall_slong_t esterror;int status;__syscall_slong_t constant;__syscall_slong_t precision;__syscall_slong_t tolerance;struct timeval time;__syscall_slong_t tick;__syscall_slong_t ppsfreq;__syscall_slong_t jitter;int shift;__syscall_slong_t stabil;__syscall_slong_t jitcnt;__syscall_slong_t calcnt;__syscall_slong_t errcnt;__syscall_slong_t stbcnt;int tai;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;__int32 : 32;};
struct timezone {int tz_minuteswest;int tz_dsttime;};
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;int tm_gmtoff;const char *tm_zone;};
struct tms {clock_t tms_utime;clock_t tms_stime;clock_t tms_cutime;clock_t tms_cstime;};
struct tostruct {u_long selfpc;int count;u_long link;};
struct tr_statistics {unsigned int rx_packets;unsigned int tx_packets;unsigned int rx_bytes;unsigned int tx_bytes;unsigned int rx_errors;unsigned int tx_errors;unsigned int rx_dropped;unsigned int tx_dropped;unsigned int multicast;unsigned int transmit_collision;unsigned int line_errors;unsigned int internal_errors;unsigned int burst_errors;unsigned int A_C_errors;unsigned int abort_delimiters;unsigned int lost_frames;unsigned int recv_congest_count;unsigned int frame_copied_errors;unsigned int frequency_errors;unsigned int token_errors;unsigned int dummy1;};
struct trh_hdr {u_int8_t ac;u_int8_t fc;u_int8_t daddr[6];u_int8_t saddr[6];u_int16_t rcf;u_int16_t rseg[8];};
struct trllc {u_int8_t dsap;u_int8_t ssap;u_int8_t llc;u_int8_t protid[3];u_int16_t ethertype;};
struct trn_hdr {u_int8_t trn_ac;u_int8_t trn_fc;u_int8_t trn_dhost[6];u_int8_t trn_shost[6];u_int16_t trn_rcf;u_int16_t trn_rseg[8];};
struct tsp {u_char tsp_type;u_char tsp_vers;u_short tsp_seq;union tsp::$E78A65B7E52D74DB905DCAA7AEC02B40 tsp_u;char tsp_name[64];};
union tsp::$E78A65B7E52D74DB905DCAA7AEC02B40 {struct timeval tspu_time;char tspu_hopcnt;};
struct ttychars {char tc_erase;char tc_kill;char tc_intrc;char tc_quitc;char tc_startc;char tc_stopc;char tc_eofc;char tc_brkc;char tc_suspc;char tc_dsuspc;char tc_rprntc;char tc_flushc;char tc_werasc;char tc_lnextc;};
struct ttyent {char *ty_name;char *ty_getty;char *ty_type;int ty_status;char *ty_window;char *ty_comment;};
typedef unsigned int uInt;
typedef uInt uIntf;
typedef unsigned int uLong;
typedef uLong uLongf;
typedef __u_char u_char;
typedef __u_int u_int;
typedef unsigned __int16 u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned __int64 u_int64_t;
typedef unsigned __int8 u_int8_t;
typedef __u_long u_long;
typedef __u_quad_t u_quad_t;
typedef __u_short u_short;
struct ucontext {unsigned int uc_flags;struct ucontext *uc_link;stack_t uc_stack;int uc_pad[7];union ucontext::uc_regs_ptr uc_mcontext;sigset_t uc_sigmask;char uc_reg_space[1004];};
union ucontext::uc_regs_ptr {struct pt_regs *regs;mcontext_t *uc_regs;};
typedef struct ucontext ucontext_t;
struct udphdr {union {struct {u_int16_t uh_sport;u_int16_t uh_dport;u_int16_t uh_ulen;u_int16_t uh_sum;};struct {u_int16_t source;u_int16_t dest;u_int16_t len;u_int16_t check;};};};
union udphdr::$9F662CED3870A419262C454CE27B8CED {struct {u_int16_t uh_sport;u_int16_t uh_dport;u_int16_t uh_ulen;u_int16_t uh_sum;};struct {u_int16_t source;u_int16_t dest;u_int16_t len;u_int16_t check;};};
struct udphdr::$9F662CED3870A419262C454CE27B8CED::$346B34575063549A4BF113AB4816D5D6 {u_int16_t source;u_int16_t dest;u_int16_t len;u_int16_t check;};
struct udphdr::$9F662CED3870A419262C454CE27B8CED::$78A59D275B7775BCF5865B67E2BB304A {u_int16_t uh_sport;u_int16_t uh_dport;u_int16_t uh_ulen;u_int16_t uh_sum;};
typedef __uid_t uid_t;
typedef unsigned int uint;
typedef unsigned __int16 uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
typedef unsigned __int8 uint8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned __int64 uint_fast64_t;
typedef unsigned __int8 uint_fast8_t;
typedef unsigned __int16 uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned __int64 uint_least64_t;
typedef unsigned __int8 uint_least8_t;
typedef unsigned __int64 uintmax_t;
typedef unsigned int uintptr_t;
typedef unsigned int ulong;
struct unimapdesc {unsigned __int16 entry_ct;struct unipair *entries;};
struct unimapinit {unsigned __int16 advised_hashsize;unsigned __int16 advised_hashstep;unsigned __int16 advised_hashlevel;};
struct unipair {unsigned __int16 unicode;unsigned __int16 fontpos;};
struct unixcred {u_int uid;u_int gid;struct unixcred::$B86B6406BF4F2F34B5DC36D552B35DA0 gids;};
struct unixcred::$B86B6406BF4F2F34B5DC36D552B35DA0 {u_int gids_len;u_int *gids_val;};
typedef __useconds_t useconds_t;
struct user {struct pt_regs regs;size_t u_tsize;size_t u_dsize;size_t u_ssize;unsigned int start_code;unsigned int start_data;unsigned int start_stack;int signal;struct regs *u_ar0;unsigned int magic;char u_comm[32];};
typedef unsigned __int16 ushort;
struct utimbuf {__time_t actime;__time_t modtime;};
struct utmp {__int16 ut_type;pid_t ut_pid;char ut_line[32];char ut_id[4];char ut_user[32];char ut_host[256];struct exit_status ut_exit;int ut_session;struct timeval ut_tv;int32_t ut_addr_v6[4];char __glibc_reserved[20];};
struct utmpx {__int16 ut_type;__pid_t ut_pid;char ut_line[32];char ut_id[4];char ut_user[32];char ut_host[256];struct __exit_status ut_exit;int ut_session;struct timeval ut_tv;__int32_t ut_addr_v6[4];char __glibc_reserved[20];};
struct utsname {char sysname[65];char nodename[65];char release[65];char version[65];char machine[65];char __domainname[65];};
typedef __gnuc_va_list va_list;
struct vjstat {__u32 vjs_packets;__u32 vjs_compressed;__u32 vjs_searches;__u32 vjs_misses;__u32 vjs_uncompressedin;__u32 vjs_compressedin;__u32 vjs_errorin;__u32 vjs_tossed;};
typedef void *voidp;
typedef const void *voidpc;
typedef void *voidpf;
typedef struct _libc_vrstate vrregset_t;
struct vt_consize {unsigned __int16 v_rows;unsigned __int16 v_cols;unsigned __int16 v_vlin;unsigned __int16 v_clin;unsigned __int16 v_vcol;unsigned __int16 v_ccol;};
struct vt_event {unsigned int event;unsigned int oldev;unsigned int newev;unsigned int pad[4];};
struct vt_mode {char mode;char waitv;__int16 relsig;__int16 acqsig;__int16 frsig;};
struct vt_setactivate {unsigned int console;struct vt_mode mode;};
struct vt_sizes {unsigned __int16 v_rows;unsigned __int16 v_cols;unsigned __int16 v_scrollsize;};
struct vt_stat {unsigned __int16 v_active;unsigned __int16 v_signal;unsigned __int16 v_state;};
struct vtimes {int vm_utime;int vm_stime;unsigned int vm_idsrss;unsigned int vm_ixrss;int vm_maxrss;int vm_majflt;int vm_minflt;int vm_nswap;int vm_inblk;int vm_oublk;};
union wait {int w_status;struct wait::$6393148D88B811FA62685B0DD0539BD6 __wait_terminated;struct wait::$4836CF7B5F326A72D7B7FA2247F758B8 __wait_stopped;};
struct wait::$4836CF7B5F326A72D7B7FA2247F758B8 {unsigned __int32 : 16;unsigned __int32 __w_stopsig : 8;unsigned __int32 __w_stopval : 8;};
struct wait::$6393148D88B811FA62685B0DD0539BD6 {unsigned __int32 : 16;unsigned __int32 __w_retcode : 8;unsigned __int32 __w_coredump : 1;unsigned __int32 __w_termsig : 7;};
typedef int wchar_t;
typedef const __int32_t *wctrans_t;
typedef unsigned int wctype_t;
struct winsize {unsigned __int16 ws_row;unsigned __int16 ws_col;unsigned __int16 ws_xpixel;unsigned __int16 ws_ypixel;};
typedef unsigned int wint_t;
typedef struct $E1260AB78985DBC228459590506E4C92 wordexp_t;
struct xdr_discrim {int value;xdrproc_t proc;};
enum xdr_op {XDR_ENCODE = 0x0,XDR_DECODE = 0x1,XDR_FREE = 0x2,};
typedef bool_t (*xdrproc_t)(XDR *, void *, ...);
enum xprt_stat {XPRT_DIED = 0x0,XPRT_MOREREQS = 0x1,XPRT_IDLE = 0x2,};
typedef unsigned int z_crc_t;
typedef struct z_stream_s z_stream;
struct z_stream_s {Bytef *next_in;uInt avail_in;uLong total_in;Bytef *next_out;uInt avail_out;uLong total_out;char *msg;struct internal_state *state;alloc_func zalloc;free_func zfree;voidpf opaque;int data_type;uLong adler;uLong reserved;};
typedef z_stream *z_streamp;

$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_1;
$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_2;
$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_3;
$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_4;
$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_5;
$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_6;
$2EA190A087F83F88A23D8B31FFFB0F26 ABDAY_7;
$BFC3F34F6952027A5BE2BDFB69B3FD82 ABI_DEFHANDLER_COFF;
$BFC3F34F6952027A5BE2BDFB69B3FD82 ABI_DEFHANDLER_ELF;
$BFC3F34F6952027A5BE2BDFB69B3FD82 ABI_DEFHANDLER_LCALL7;
$BFC3F34F6952027A5BE2BDFB69B3FD82 ABI_DEFHANDLER_LIBCSO;
$BFC3F34F6952027A5BE2BDFB69B3FD82 ABI_FAKE_UTSNAME;
$BFC3F34F6952027A5BE2BDFB69B3FD82 ABI_TRACE;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_1;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_10;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_11;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_12;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_2;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_3;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_4;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_5;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_6;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_7;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_8;
$2EA190A087F83F88A23D8B31FFFB0F26 ABMON_9;
MACRO_ABORT ABORT;
MACRO_AC AC;
MACRO_ACCESSPERMS ACCESSPERMS;
MACRO_ACCOUNTING ACCOUNTING;
MACRO_ACCT ACCT_BYTEORDER;
MACRO_ACCT ACCT_COMM;
MACRO_DATA ACK;
$018E9FE7519BCFF29BB9A1C135EDF766 ACORE;
$F1F648DD099C1B085CB728875CF977ED ADDR_COMPAT_LAYOUT;
$F1F648DD099C1B085CB728875CF977ED ADDR_LIMIT_32BIT;
$F1F648DD099C1B085CB728875CF977ED ADDR_LIMIT_3GB;
$F1F648DD099C1B085CB728875CF977ED ADDR_NO_RANDOMIZE;
MACRO_ADJ ADJ_ESTERROR;
MACRO_ADJ ADJ_FREQUENCY;
MACRO_ADJ ADJ_MAXERROR;
MACRO_ADJ ADJ_MICRO;
MACRO_ADJ ADJ_NANO;
MACRO_ADJ ADJ_OFFSET;
MACRO_ADJ ADJ_OFFSET_SINGLESHOT;
MACRO_ADJ ADJ_OFFSET_SS_READ;
MACRO_ADJ ADJ_STATUS;
MACRO_ADJ ADJ_TAI;
MACRO_ADJ ADJ_TICK;
MACRO_ADJ ADJ_TIMECONST;
authdes_namekind ADN_FULLNAME;
authdes_namekind ADN_NICKNAME;
MACRO_AFMT AFMT_AC3;
MACRO_AFMT AFMT_A_LAW;
MACRO_AFMT AFMT_IMA_ADPCM;
MACRO_AFMT AFMT_MPEG;
MACRO_AFMT AFMT_MU_LAW;
MACRO_AFMT AFMT_QUERY;
MACRO_AFMT AFMT_S16_BE;
MACRO_AFMT AFMT_S16_LE;
MACRO_AFMT AFMT_S8;
MACRO_AFMT AFMT_U16_BE;
MACRO_AFMT AFMT_U16_LE;
MACRO_AFMT AFMT_U8;
$018E9FE7519BCFF29BB9A1C135EDF766 AFORK;
MACRO_AF AF_ALG;
MACRO_AF AF_APPLETALK;
MACRO_AF AF_ASH;
MACRO_AF AF_ATMPVC;
MACRO_AF AF_ATMSVC;
MACRO_AF AF_AX25;
MACRO_AF AF_BLUETOOTH;
MACRO_AF AF_BRIDGE;
MACRO_AF AF_CAIF;
MACRO_AF AF_CAN;
MACRO_AF AF_DECnet;
MACRO_AF AF_ECONET;
MACRO_AF AF_FILE;
MACRO_AF AF_IEEE802154;
MACRO_AF AF_INET;
MACRO_AF AF_INET6;
MACRO_AF AF_IPX;
MACRO_AF AF_IRDA;
MACRO_AF AF_ISDN;
MACRO_AF AF_IUCV;
MACRO_AF AF_KEY;
MACRO_AF AF_LLC;
MACRO_AF AF_LOCAL;
MACRO_AF AF_MAX;
MACRO_AF AF_NETBEUI;
MACRO_AF AF_NETLINK;
MACRO_AF AF_NETROM;
MACRO_AF AF_NFC;
MACRO_AF AF_PACKET;
MACRO_AF AF_PHONET;
MACRO_AF AF_PPPOX;
MACRO_AF AF_RDS;
MACRO_AF AF_ROSE;
MACRO_AF AF_ROUTE;
MACRO_AF AF_RXRPC;
MACRO_AF AF_SECURITY;
MACRO_AF AF_SNA;
MACRO_AF AF_TIPC;
MACRO_AF AF_UNIX;
MACRO_AF AF_UNSPEC;
MACRO_AF AF_VSOCK;
MACRO_AF AF_WANPIPE;
MACRO_AF AF_X25;
MACRO_AHZ AHZ;
$0DDACC7DC443E071E9807358C2A97208 AIO_ALLDONE;
$0DDACC7DC443E071E9807358C2A97208 AIO_CANCELED;
$0DDACC7DC443E071E9807358C2A97208 AIO_NOTCANCELED;
MACRO__POSIX_THREAD AIO_PRIO_DELTA_MAX;
MACRO_AI AI_ADDRCONFIG;
MACRO_AI AI_ALL;
MACRO_AI AI_CANONNAME;
MACRO_AI AI_NUMERICHOST;
MACRO_AI AI_NUMERICSERV;
MACRO_AI AI_PASSIVE;
MACRO_AI AI_V4MAPPED;
MACRO_ALLPERMS ALLPERMS;
$2EA190A087F83F88A23D8B31FFFB0F26 ALT_DIGITS;
$2EA190A087F83F88A23D8B31FFFB0F26 AM_STR;
MACRO_ANNOUNCE ANNOUNCE;
MACRO_ANYADDR ANYADDR;
MACRO_ANYMARK ANYMARK;
MACRO_AO AO;
MACRO_APF APF_CPUINTENS;
MACRO_APF APF_NETWORK;
MACRO_APF APF_NORMAL;
MACRO_ARCDENSITY ARCDENSITY;
MACRO_AREGTYPE AREGTYPE;
MACRO_ARGP ARGP_ERR_UNKNOWN;
MACRO_ARGP ARGP_HELP_BUG_ADDR;
MACRO_ARGP ARGP_HELP_DOC;
MACRO_ARGP ARGP_HELP_EXIT_ERR;
MACRO_ARGP ARGP_HELP_EXIT_OK;
MACRO_ARGP ARGP_HELP_LONG;
MACRO_ARGP ARGP_HELP_LONG_ONLY;
MACRO_ARGP ARGP_HELP_POST_DOC;
MACRO_ARGP ARGP_HELP_PRE_DOC;
MACRO_ARGP ARGP_HELP_SEE;
MACRO_ARGP ARGP_HELP_SHORT_USAGE;
MACRO_ARGP ARGP_HELP_STD_ERR;
MACRO_ARGP ARGP_HELP_STD_HELP;
MACRO_ARGP ARGP_HELP_STD_USAGE;
MACRO_ARGP ARGP_HELP_USAGE;
MACRO_ARGP ARGP_IN_ORDER;
MACRO_ARGP ARGP_KEY_ARG;
MACRO_ARGP ARGP_KEY_ARGS;
MACRO_ARGP ARGP_KEY_END;
MACRO_ARGP ARGP_KEY_ERROR;
MACRO_ARGP ARGP_KEY_FINI;
MACRO_ARGP ARGP_KEY_HELP_ARGS_DOC;
MACRO_ARGP ARGP_KEY_HELP_DUP_ARGS_NOTE;
MACRO_ARGP ARGP_KEY_HELP_EXTRA;
MACRO_ARGP ARGP_KEY_HELP_HEADER;
MACRO_ARGP ARGP_KEY_HELP_POST_DOC;
MACRO_ARGP ARGP_KEY_HELP_PRE_DOC;
MACRO_ARGP ARGP_KEY_INIT;
MACRO_ARGP ARGP_KEY_NO_ARGS;
MACRO_ARGP ARGP_KEY_SUCCESS;
MACRO_ARGP ARGP_LONG_ONLY;
MACRO_ARGP ARGP_NO_ARGS;
MACRO_ARGP ARGP_NO_ERRS;
MACRO_ARGP ARGP_NO_EXIT;
MACRO_ARGP ARGP_NO_HELP;
MACRO_ARGP ARGP_PARSE_ARGV0;
MACRO_ARGP ARGP_SILENT;
MACRO_NGROUPS ARG_MAX;
MACRO_ARPD ARPD_FLUSH;
MACRO_ARPD ARPD_LOOKUP;
MACRO_ARPD ARPD_UPDATE;
MACRO_ARPHRD ARPHRD_ADAPT;
MACRO_ARPHRD ARPHRD_APPLETLK;
MACRO_ARPHRD ARPHRD_ARCNET;
MACRO_ARPHRD ARPHRD_ASH;
MACRO_ARPHRD ARPHRD_ATM;
MACRO_ARPHRD ARPHRD_AX25;
MACRO_ARPHRD ARPHRD_BIF;
MACRO_ARPHRD ARPHRD_CHAOS;
MACRO_ARPHRD ARPHRD_CISCO;
MACRO_ARPHRD ARPHRD_CSLIP;
MACRO_ARPHRD ARPHRD_CSLIP6;
MACRO_ARPHRD ARPHRD_DDCMP;
MACRO_ARPHRD ARPHRD_DLCI;
MACRO_ARPHRD ARPHRD_ECONET;
MACRO_ARPHRD ARPHRD_EETHER;
MACRO_ARPHRD ARPHRD_ETHER;
MACRO_ARPHRD ARPHRD_EUI64;
MACRO_ARPHRD ARPHRD_FCAL;
MACRO_ARPHRD ARPHRD_FCFABRIC;
MACRO_ARPHRD ARPHRD_FCPL;
MACRO_ARPHRD ARPHRD_FCPP;
MACRO_ARPHRD ARPHRD_FDDI;
MACRO_ARPHRD ARPHRD_FRAD;
MACRO_ARPHRD ARPHRD_HDLC;
MACRO_ARPHRD ARPHRD_HIPPI;
MACRO_ARPHRD ARPHRD_HWX25;
MACRO_ARPHRD ARPHRD_IEEE1394;
MACRO_ARPHRD ARPHRD_IEEE802;
MACRO_ARPHRD ARPHRD_IEEE80211;
MACRO_ARPHRD ARPHRD_IEEE80211_PRISM;
MACRO_ARPHRD ARPHRD_IEEE80211_RADIOTAP;
MACRO_ARPHRD ARPHRD_IEEE802154;
MACRO_ARPHRD ARPHRD_IEEE802154_PHY;
MACRO_ARPHRD ARPHRD_IEEE802_TR;
MACRO_ARPHRD ARPHRD_INFINIBAND;
MACRO_ARPHRD ARPHRD_IPDDP;
MACRO_ARPHRD ARPHRD_IPGRE;
MACRO_ARPHRD ARPHRD_IRDA;
MACRO_ARPHRD ARPHRD_LAPB;
MACRO_ARPHRD ARPHRD_LOCALTLK;
MACRO_ARPHRD ARPHRD_LOOPBACK;
MACRO_ARPHRD ARPHRD_METRICOM;
MACRO_ARPHRD ARPHRD_NETROM;
MACRO_ARPHRD ARPHRD_NONE;
MACRO_ARPHRD ARPHRD_PIMREG;
MACRO_ARPHRD ARPHRD_PPP;
MACRO_ARPHRD ARPHRD_PRONET;
MACRO_ARPHRD ARPHRD_RAWHDLC;
MACRO_ARPHRD ARPHRD_ROSE;
MACRO_ARPHRD ARPHRD_RSRVD;
MACRO_ARPHRD ARPHRD_SIT;
MACRO_ARPHRD ARPHRD_SKIP;
MACRO_ARPHRD ARPHRD_SLIP;
MACRO_ARPHRD ARPHRD_SLIP6;
MACRO_ARPHRD ARPHRD_TUNNEL;
MACRO_ARPHRD ARPHRD_TUNNEL6;
MACRO_ARPHRD ARPHRD_VOID;
MACRO_ARPHRD ARPHRD_X25;
MACRO_ARPOP ARPOP_InREPLY;
MACRO_ARPOP ARPOP_InREQUEST;
MACRO_ARPOP ARPOP_NAK;
MACRO_ARPOP ARPOP_REPLY;
MACRO_ARPOP ARPOP_REQUEST;
MACRO_ARPOP ARPOP_RREPLY;
MACRO_ARPOP ARPOP_RREQUEST;
MACRO_ASH ASH_CHANNEL_ANY;
MACRO_ASH ASH_CHANNEL_CONTROL;
MACRO_ASH ASH_CHANNEL_REALTIME;
$018E9FE7519BCFF29BB9A1C135EDF766 ASU;
MACRO_ATADDR ATADDR_ANYNET;
MACRO_ATADDR ATADDR_ANYNODE;
MACRO_ATADDR ATADDR_ANYPORT;
MACRO_ATADDR ATADDR_BCAST;
MACRO_ATF ATF_COM;
MACRO_ATF ATF_DONTPUB;
MACRO_ATF ATF_MAGIC;
MACRO_ATF ATF_NETMASK;
MACRO_ATF ATF_PERM;
MACRO_ATF ATF_PUBL;
MACRO_ATF ATF_USETRAILERS;
MACRO_ATPORT ATPORT_FIRST;
MACRO_ATPORT ATPORT_LAST;
MACRO_ATPORT ATPORT_RESERVED;
MACRO_AT AT_BASE;
MACRO_AT AT_BASE_PLATFORM;
MACRO_AT AT_CLKTCK;
MACRO_AT AT_DCACHEBSIZE;
MACRO_AT_FDCWD AT_EACCESS;
MACRO_AT AT_EGID;
MACRO_AT AT_ENTRY;
MACRO_AT AT_EUID;
MACRO_AT AT_EXECFD;
MACRO_AT AT_EXECFN;
MACRO_AT_FDCWD AT_FDCWD;
MACRO_AT AT_FLAGS;
MACRO_AT AT_FPUCW;
MACRO_AT AT_GID;
MACRO_AT AT_HWCAP;
MACRO_AT AT_HWCAP2;
MACRO_AT AT_ICACHEBSIZE;
MACRO_AT AT_IGNORE;
MACRO_AT AT_IGNOREPPC;
MACRO_AT AT_L1D_CACHESHAPE;
MACRO_AT AT_L1I_CACHESHAPE;
MACRO_AT AT_L2_CACHESHAPE;
MACRO_AT AT_L3_CACHESHAPE;
MACRO_AT AT_NOTELF;
MACRO_AT AT_NULL;
MACRO_AT AT_PAGESZ;
MACRO_AT AT_PHDR;
MACRO_AT AT_PHENT;
MACRO_AT AT_PHNUM;
MACRO_AT AT_PLATFORM;
MACRO_AT AT_RANDOM;
MACRO_AT_FDCWD AT_REMOVEDIR;
MACRO_AT AT_SECURE;
MACRO_AT_FDCWD AT_SYMLINK_FOLLOW;
MACRO_AT_FDCWD AT_SYMLINK_NOFOLLOW;
MACRO_AT AT_SYSINFO;
MACRO_AT AT_SYSINFO_EHDR;
MACRO_AT AT_UCACHEBSIZE;
MACRO_AT AT_UID;
MACRO_AUTHTYPE AUTHTYPE_CNT;
MACRO_AUTHTYPE AUTHTYPE_KERBEROS_V4;
MACRO_AUTHTYPE AUTHTYPE_KERBEROS_V5;
MACRO_AUTHTYPE AUTHTYPE_MINK;
MACRO_AUTHTYPE AUTHTYPE_NULL;
MACRO_AUTHTYPE AUTHTYPE_SPX;
MACRO_AUTHTYPE AUTHTYPE_TEST;
auth_stat AUTH_BADCRED;
auth_stat AUTH_BADVERF;
MACRO_AUTH_NONE AUTH_DES;
MACRO_AUTH_NONE AUTH_DH;
reject_stat AUTH_ERROR;
auth_stat AUTH_FAILED;
MACRO_AUTH AUTH_HOW_MASK;
MACRO_AUTH AUTH_HOW_MUTUAL;
MACRO_AUTH AUTH_HOW_ONE_WAY;
auth_stat AUTH_INVALIDRESP;
MACRO_AUTH_NONE AUTH_KERB;
MACRO_AUTH_NONE AUTH_NONE;
MACRO_AUTH_NONE AUTH_NULL;
auth_stat AUTH_OK;
auth_stat AUTH_REJECTEDCRED;
auth_stat AUTH_REJECTEDVERF;
MACRO_AUTH_NONE AUTH_SHORT;
MACRO_AUTH_NONE AUTH_SYS;
auth_stat AUTH_TOOWEAK;
MACRO_AUTH_NONE AUTH_UNIX;
MACRO_AUTH AUTH_WHO_CLIENT;
MACRO_AUTH AUTH_WHO_MASK;
MACRO_AUTH AUTH_WHO_SERVER;
MACRO_AX25 AX25_BACKOFF;
MACRO_AX25_NOUID AX25_DIGI_INBAND;
MACRO_AX25_NOUID AX25_DIGI_XBAND;
MACRO_AX25 AX25_EXTSEQ;
MACRO_AX25 AX25_IAMDIGI;
MACRO_AX25 AX25_IDLE;
MACRO_AX25 AX25_IPMAXQUEUE;
MACRO_AX25 AX25_KILL;
MACRO_AX25_NOUID AX25_MAX_DIGIS;
MACRO_AX25_NOUID AX25_MAX_VALUES;
MACRO_AX25 AX25_N2;
MACRO_AX25_NOUID AX25_NOUID_BLOCK;
MACRO_AX25_NOUID AX25_NOUID_DEFAULT;
MACRO_AX25 AX25_PACLEN;
MACRO_AX25 AX25_PIDINCL;
MACRO_AX25_NOUID AX25_SET_RT_IPMODE;
MACRO_AX25 AX25_T1;
MACRO_AX25 AX25_T2;
MACRO_AX25 AX25_T3;
MACRO_AX25_NOUID AX25_VALUES_AXDEFMODE;
MACRO_AX25_NOUID AX25_VALUES_BACKOFF;
MACRO_AX25_NOUID AX25_VALUES_CONMODE;
MACRO_AX25_NOUID AX25_VALUES_DIGI;
MACRO_AX25_NOUID AX25_VALUES_EWINDOW;
MACRO_AX25_NOUID AX25_VALUES_IDLE;
MACRO_AX25_NOUID AX25_VALUES_IPDEFMODE;
MACRO_AX25_NOUID AX25_VALUES_IPMAXQUEUE;
MACRO_AX25_NOUID AX25_VALUES_N2;
MACRO_AX25_NOUID AX25_VALUES_NETROM;
MACRO_AX25_NOUID AX25_VALUES_PACLEN;
MACRO_AX25_NOUID AX25_VALUES_T1;
MACRO_AX25_NOUID AX25_VALUES_T2;
MACRO_AX25_NOUID AX25_VALUES_T3;
MACRO_AX25_NOUID AX25_VALUES_TEXT;
MACRO_AX25_NOUID AX25_VALUES_WINDOW;
MACRO_AX25 AX25_WINDOW;
$018E9FE7519BCFF29BB9A1C135EDF766 AXSIG;
MACRO_AYT AYT;
MACRO_B0 B0;
MACRO_B1000000 B1000000;
MACRO_B110 B110;
MACRO_B115200 B115200;
MACRO_B1152000 B1152000;
MACRO_B1200 B1200;
MACRO_B110 B134;
MACRO_B150 B150;
MACRO_B1500000 B1500000;
MACRO_B1800 B1800;
MACRO_B19200 B19200;
MACRO_B200 B200;
MACRO_B2000000 B2000000;
MACRO_B230400 B230400;
MACRO_B2400 B2400;
MACRO_B2500000 B2500000;
MACRO_B300 B300;
MACRO_B3000000 B3000000;
MACRO_B3500000 B3500000;
MACRO_B38400 B38400;
MACRO_B4000000 B4000000;
MACRO_B460800 B460800;
MACRO_B4800 B4800;
MACRO_B0 B50;
MACRO_B500000 B500000;
MACRO_B57600 B57600;
MACRO_B576000 B576000;
MACRO_B300 B600;
MACRO_B0 B75;
MACRO_B921600 B921600;
MACRO_B9600 B9600;
MACRO_BADADDR BADADDR;
MACRO_BADADDR BADCTLADDR;
MACRO_BADVERSION BADVERSION;
MACRO_BC BC_BASE_MAX;
MACRO_BC BC_DIM_MAX;
MACRO_BC BC_SCALE_MAX;
MACRO_BC BC_STRING_MAX;
MACRO_LITTLE BIG_ENDIAN;
MACRO_BLKFLSBUF BLKFLSBUF;
MACRO_BLKFRAGET BLKFRAGET;
MACRO_BLKFRASET BLKFRASET;
MACRO_BLKGETSIZE BLKGETSIZE;
MACRO_BLKRAGET BLKRAGET;
MACRO_BLKRASET BLKRASET;
MACRO_BLKROGET BLKROGET;
MACRO_BLKROSET BLKROSET;
MACRO_BLKRRPART BLKRRPART;
MACRO_BLKSECTGET BLKSECTGET;
MACRO_BLKSECTSET BLKSECTSET;
MACRO_BLKSSZGET BLKSSZGET;
MACRO_BLKTYPE BLKTYPE;
MACRO_BLK BLK_BYTECOUNT;
MACRO_BLK BLK_EOF;
MACRO_BLK BLK_EOR;
MACRO_BLK BLK_ERRORS;
MACRO_BLK BLK_RESTART;
MACRO_BLOCK BLOCK_SIZE;
MACRO_BLOCK BLOCK_SIZE_BITS;
MACRO_BOOLCOUNT BOOLCOUNT;
MACRO_BOOLWRITE BOOLWRITE;
MACRO_TIME BOOT_TIME;
MACRO_BREAK BREAK;
MACRO_IGNBRK BRKINT;
MACRO_BS0 BS0;
MACRO_BS0 BS1;
MACRO_FF0 BSDLY;
MACRO_BSD BSD_CURRENT_VERSION;
MACRO_BSD BSD_MAX_BITS;
MACRO_BSD BSD_MIN_BITS;
MACRO_BT BT_NBIPUI;
MACRO_BT BT_UIMASK;
MACRO_BT BT_UISHIFT;
MACRO__IOFBF BUFSIZ;
$62FD4908D73688A13019301FFF23EFDD BUS_ADRALN;
$62FD4908D73688A13019301FFF23EFDD BUS_ADRERR;
$FCD655E0C39E155367D8B8505F7FCFE1 BUS_ISA_MEM_BASE;
$FCD655E0C39E155367D8B8505F7FCFE1 BUS_ISA_PORT_BASE;
$FCD655E0C39E155367D8B8505F7FCFE1 BUS_ISA_PORT_SHIFT;
$62FD4908D73688A13019301FFF23EFDD BUS_MCEERR_AO;
$62FD4908D73688A13019301FFF23EFDD BUS_MCEERR_AR;
$62FD4908D73688A13019301FFF23EFDD BUS_OBJERR;
MACRO_BYTES BYTES_PER_XDR_UNIT;
MACRO_BYTE BYTE_ORDER;
MACRO_BZ BZ_CONFIG_ERROR;
MACRO_BZ BZ_DATA_ERROR;
MACRO_BZ BZ_DATA_ERROR_MAGIC;
MACRO_BZ BZ_FINISH;
MACRO_BZ BZ_FINISH_OK;
MACRO_BZ BZ_FLUSH;
MACRO_BZ BZ_FLUSH_OK;
MACRO_BZ BZ_IO_ERROR;
MACRO_BZ BZ_MAX_UNUSED;
MACRO_BZ BZ_MEM_ERROR;
MACRO_BZ BZ_OK;
MACRO_BZ BZ_OUTBUFF_FULL;
MACRO_BZ BZ_PARAM_ERROR;
MACRO_BZ BZ_RUN;
MACRO_BZ BZ_RUN_OK;
MACRO_BZ BZ_SEQUENCE_ERROR;
MACRO_BZ BZ_STREAM_END;
MACRO_BZ BZ_UNEXPECTED_EOF;
msg_type CALL;
MACRO_CANBSIZ CANBSIZ;
MACRO_CBAUD CBAUD;
MACRO_EXTB CBAUDEX;
desmode CBC;
MACRO_CBRK CBRK;
MACRO_CCP CCP_CONFACK;
MACRO_CCP CCP_CONFREQ;
MACRO_CCP CCP_HDRLEN;
MACRO_CCP CCP_MAX_OPTION_LENGTH;
MACRO_CCP CCP_OPT_MINLEN;
MACRO_CCP CCP_RESETACK;
MACRO_CCP CCP_RESETREQ;
MACRO_CCP CCP_TERMACK;
MACRO_CCP CCP_TERMREQ;
MACRO_CDISCARD CDISCARD;
MACRO_CTIME CDSUSP;
MACRO_CEOF CEOF;
MACRO_CEOL CEOL;
MACRO_CEOT CEOT;
MACRO_CEOL CERASE;
MACRO_CFLUSH CFLUSH;
MACRO_COLL CHARCLASS_NAME_MAX;
MACRO_CHAR CHAR_BIT;
MACRO_CHAR_MIN CHAR_MAX;
MACRO_CHAR_MIN CHAR_MIN;
MACRO_CHRTYPE CHRTYPE;
MACRO_BSD_COMPRESS CILEN_BSD_COMPRESS;
MACRO_CILEN CILEN_DEFLATE;
MACRO_MPPE CILEN_MPPE;
MACRO_CILEN_PREDICTOR CILEN_PREDICTOR_1;
MACRO_CILEN_PREDICTOR_2 CILEN_PREDICTOR_2;
MACRO_CINTR CINTR;
MACRO_BSD_COMPRESS CI_BSD_COMPRESS;
MACRO_CI CI_DEFLATE;
MACRO_CI CI_DEFLATE_DRAFT;
MACRO_MPPE CI_MPPE;
MACRO_CI_PREDICTOR CI_PREDICTOR_1;
MACRO_CI_PREDICTOR_2 CI_PREDICTOR_2;
MACRO_CSTATUS CKILL;
$7C6A1E1ACDF4A97E77CE90783425BCA4 CLD_CONTINUED;
$7C6A1E1ACDF4A97E77CE90783425BCA4 CLD_DUMPED;
$7C6A1E1ACDF4A97E77CE90783425BCA4 CLD_EXITED;
$7C6A1E1ACDF4A97E77CE90783425BCA4 CLD_KILLED;
$7C6A1E1ACDF4A97E77CE90783425BCA4 CLD_STOPPED;
$7C6A1E1ACDF4A97E77CE90783425BCA4 CLD_TRAPPED;
MACRO_CLGET CLGET_FD;
MACRO_PROG CLGET_PROG;
MACRO_CLGET_RETRY CLGET_RETRY_TIMEOUT;
MACRO_CLGET CLGET_SERVER_ADDR;
MACRO_CLGET CLGET_SVC_ADDR;
MACRO_TIMEOUT CLGET_TIMEOUT;
MACRO_VERS CLGET_VERS;
MACRO_XID CLGET_XID;
MACRO_CLNEXT CLNEXT;
MACRO_CS8 CLOCAL;
MACRO_CLOCKS CLOCKS_PER_SEC;
MACRO_CLOCK CLOCK_BOOTTIME;
MACRO_CLOCK CLOCK_BOOTTIME_ALARM;
MACRO_CLOCK_DEFAULT CLOCK_DEFAULT;
MACRO_CLOCK_DEFAULT CLOCK_EXT;
MACRO_CLOCK_DEFAULT CLOCK_INT;
MACRO_CLOCK CLOCK_MONOTONIC;
MACRO_CLOCK CLOCK_MONOTONIC_COARSE;
MACRO_CLOCK CLOCK_MONOTONIC_RAW;
MACRO_CLOCK CLOCK_PROCESS_CPUTIME_ID;
MACRO_CLOCK CLOCK_REALTIME;
MACRO_CLOCK CLOCK_REALTIME_ALARM;
MACRO_CLOCK CLOCK_REALTIME_COARSE;
MACRO_CLOCK CLOCK_TAI;
MACRO_CLOCK CLOCK_THREAD_CPUTIME_ID;
MACRO_CLOCK_DEFAULT CLOCK_TXFROMRX;
MACRO_CLOCK_DEFAULT CLOCK_TXINT;
MACRO_CLSET CLSET_FD_CLOSE;
MACRO_CLSET CLSET_FD_NCLOSE;
MACRO_CLSET_SVC CLSET_POP_TIMOD;
MACRO_PROG CLSET_PROG;
MACRO_CLSET_SVC CLSET_PUSH_TIMOD;
MACRO_CLSET_SVC CLSET_RETRY_TIMEOUT;
MACRO_CLSET_SVC CLSET_SVC_ADDR;
MACRO_TIMEOUT CLSET_TIMEOUT;
MACRO_VERS CLSET_VERS;
MACRO_XID CLSET_XID;
MACRO_CMIN CMIN;
MACRO_CS8 CMSPAR;
$2EA190A087F83F88A23D8B31FFFB0F26 CODESET;
MACRO_COLL COLL_WEIGHTS_MAX;
MACRO_PRELIM COMPLETE;
MACRO_CONTINUE CONTINUE;
MACRO_CONTTYPE CONTTYPE;
MACRO_CPF CPF_FIRST;
MACRO_CPF CPF_LAST;
MACRO_CPF CPF_NONE;
MACRO_CMIN CQUIT;
MACRO_CR0 CR0;
MACRO_CR0 CR1;
MACRO_CR0 CR2;
MACRO_CR3 CR3;
MACRO_TAB3 CRDLY;
MACRO_CS8 CREAD;
MACRO_CREPRINT CREPRINT;
MACRO_CBRK CRPRNT;
MACRO_CS8 CRTSCTS;
MACRO_CS5 CS5;
MACRO_CS5 CS6;
MACRO_CS5 CS7;
MACRO_CS8 CS8;
MACRO_CSIZE CSIZE;
MACRO_CSTART CSTART;
MACRO_CSTATUS CSTATUS;
MACRO_CSTOP CSTOP;
MACRO_CS8 CSTOPB;
MACRO_CSUSP CSUSP;
MACRO_CTIME CTIME;
$725A2A4D7FFB0E5E03896294E294905E CTL_ABI;
$725A2A4D7FFB0E5E03896294E294905E CTL_ARLAN;
MACRO_CTL CTL_BALANCE;
MACRO_CTL CTL_BANK_SELECT;
MACRO_CTL CTL_BREATH;
$725A2A4D7FFB0E5E03896294E294905E CTL_BUS;
$7D8899B18D60224BD7DC00379072D77E CTL_BUS_ISA;
MACRO_CTL CTL_CELESTE_DEPTH;
MACRO_CTL CTL_CHORUS_DEPTH;
$725A2A4D7FFB0E5E03896294E294905E CTL_CPU;
MACRO_CTL CTL_DAMPER_PEDAL;
MACRO_CTL CTL_DATA_DECREMENT;
MACRO_CTL CTL_DATA_ENTRY;
MACRO_CTL CTL_DATA_INCREMENT;
$725A2A4D7FFB0E5E03896294E294905E CTL_DEBUG;
MACRO_CTL CTL_DETUNE_DEPTH;
$725A2A4D7FFB0E5E03896294E294905E CTL_DEV;
MACRO_CTL CTL_EXPRESSION;
MACRO_CTL CTL_EXT_EFF_DEPTH;
MACRO_CTL CTL_FOOT;
$725A2A4D7FFB0E5E03896294E294905E CTL_FRV;
$725A2A4D7FFB0E5E03896294E294905E CTL_FS;
MACRO_CTL CTL_GENERAL_PURPOSE1;
MACRO_CTL CTL_GENERAL_PURPOSE2;
MACRO_CTL CTL_GENERAL_PURPOSE3;
MACRO_CTL CTL_GENERAL_PURPOSE4;
MACRO_CTL CTL_GENERAL_PURPOSE5;
MACRO_CTL CTL_GENERAL_PURPOSE6;
MACRO_CTL CTL_GENERAL_PURPOSE7;
MACRO_CTL CTL_GENERAL_PURPOSE8;
MACRO_CTL CTL_HOLD;
MACRO_CTL CTL_HOLD2;
$725A2A4D7FFB0E5E03896294E294905E CTL_KERN;
MACRO_CTL CTL_MAIN_VOLUME;
MACRO_CTL_MAXNAME CTL_MAXNAME;
MACRO_CTL CTL_MODWHEEL;
$725A2A4D7FFB0E5E03896294E294905E CTL_NET;
MACRO_CTL CTL_NONREG_PARM_NUM_LSB;
MACRO_CTL CTL_NONREG_PARM_NUM_MSB;
MACRO_CTL CTL_PAN;
MACRO_CTL CTL_PHASER_DEPTH;
$725A2A4D7FFB0E5E03896294E294905E CTL_PM;
MACRO_CTL CTL_PORTAMENTO;
MACRO_CTL CTL_PORTAMENTO_TIME;
$725A2A4D7FFB0E5E03896294E294905E CTL_PROC;
MACRO_CTL CTL_REGIST_PARM_NUM_LSB;
MACRO_CTL CTL_REGIST_PARM_NUM_MSB;
$725A2A4D7FFB0E5E03896294E294905E CTL_S390DBF;
MACRO_CTL CTL_SOFT_PEDAL;
MACRO_CTL CTL_SOSTENUTO;
$725A2A4D7FFB0E5E03896294E294905E CTL_SUNRPC;
MACRO_CTL CTL_SUSTAIN;
MACRO_CTL CTL_TREMOLO_DEPTH;
$725A2A4D7FFB0E5E03896294E294905E CTL_VM;
MACRO_CTRL CTRL_EXPRESSION;
MACRO_CTRL CTRL_MAIN_VOLUME;
MACRO_CTRL CTRL_PITCH_BENDER;
MACRO_CTRL CTRL_PITCH_BENDER_RANGE;
MACRO_CWERASE CWERASE;
MACRO_C C_IRGRP;
MACRO_C C_IROTH;
MACRO_C C_IRUSR;
MACRO_C C_ISBLK;
MACRO_C C_ISCHR;
MACRO_C C_ISCTG;
MACRO_C C_ISDIR;
MACRO_C C_ISFIFO;
MACRO_C C_ISGID;
MACRO_C C_ISLNK;
MACRO_C C_ISREG;
MACRO_C C_ISSOCK;
MACRO_C C_ISUID;
MACRO_C C_ISVTX;
MACRO_C C_IWGRP;
MACRO_C C_IWOTH;
MACRO_C C_IWUSR;
MACRO_C C_IXGRP;
MACRO_C C_IXOTH;
MACRO_C C_IXUSR;
MACRO_DATA DATA;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_1;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_2;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_3;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_4;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_5;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_6;
$2EA190A087F83F88A23D8B31FFFB0F26 DAY_7;
MACRO_DBM DBM_INSERT;
MACRO_DBM DBM_REPLACE;
MACRO_DDP DDP_MAXHOPS;
MACRO_DDP DDP_MAXSZ;
MACRO_PROCESS DEAD_PROCESS;
desdir DECRYPT;
MACRO_DEFFILEMODE DEFFILEMODE;
MACRO_DEFLATE DEFLATE_CHK_SEQUENCE;
MACRO_DEFLATE DEFLATE_MAX_SIZE;
MACRO_DEFLATE DEFLATE_METHOD_VAL;
MACRO_DEFLATE DEFLATE_MIN_SIZE;
MACRO_DELAYTIMER DELAYTIMER_MAX;
MACRO_DELETE DELETE;
MACRO_DESERR DESERR_BADPARAM;
MACRO_DESERR DESERR_HWERROR;
MACRO_DESERR DESERR_NOHWDEVICE;
MACRO_DESERR DESERR_NONE;
MACRO_DES DES_DECRYPT;
MACRO_DES DES_DEVMASK;
MACRO_DES DES_DIRMASK;
MACRO_DES DES_ENCRYPT;
MACRO_DES DES_HW;
MACRO_DES DES_MAXDATA;
MACRO_DES_MAXLEN DES_MAXLEN;
MACRO_DES_MAXLEN DES_QUICKLEN;
MACRO_DES DES_SW;
MACRO_DEV DEV_BSIZE;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_CDROM;
$8121F3393B56EF45A4608DC145F43305 DEV_CDROM_AUTOCLOSE;
$8121F3393B56EF45A4608DC145F43305 DEV_CDROM_AUTOEJECT;
$8121F3393B56EF45A4608DC145F43305 DEV_CDROM_CHECK_MEDIA;
$8121F3393B56EF45A4608DC145F43305 DEV_CDROM_DEBUG;
$8121F3393B56EF45A4608DC145F43305 DEV_CDROM_INFO;
$8121F3393B56EF45A4608DC145F43305 DEV_CDROM_LOCK;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_HWMON;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_IPMI;
$921B804C5CB7E03958A5E43A5656BF3D DEV_IPMI_POWEROFF_POWERCYCLE;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_MAC_HID;
$7AB5A752696E25D059A83A920E9EDD46 DEV_MAC_HID_ADB_MOUSE_SENDS_KEYCODES;
$7AB5A752696E25D059A83A920E9EDD46 DEV_MAC_HID_KEYBOARD_LOCK_KEYCODES;
$7AB5A752696E25D059A83A920E9EDD46 DEV_MAC_HID_KEYBOARD_SENDS_LINUX_KEYCODES;
$7AB5A752696E25D059A83A920E9EDD46 DEV_MAC_HID_MOUSE_BUTTON2_KEYCODE;
$7AB5A752696E25D059A83A920E9EDD46 DEV_MAC_HID_MOUSE_BUTTON3_KEYCODE;
$7AB5A752696E25D059A83A920E9EDD46 DEV_MAC_HID_MOUSE_BUTTON_EMULATION;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_PARPORT;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_AUTOPROBE;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_BASE_ADDR;
$5E65BB40F6ADE64B38A28A13261FB94F DEV_PARPORT_DEFAULT;
$C68DBFABEFD6F7DD662F0678857B890B DEV_PARPORT_DEFAULT_SPINTIME;
$C68DBFABEFD6F7DD662F0678857B890B DEV_PARPORT_DEFAULT_TIMESLICE;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_DEVICES;
$2D9ECEA6C47E3C7C9ECCF7148E10CC7F DEV_PARPORT_DEVICES_ACTIVE;
$4BAC799F52E32CD0F3E53C897EB09913 DEV_PARPORT_DEVICE_TIMESLICE;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_DMA;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_IRQ;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_MODES;
$09C3FFA026BC908AACE27D0C95B171E0 DEV_PARPORT_SPINTIME;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_RAID;
$D690D5C64A428DDCADD2EDBBEBC4BFE4 DEV_RAID_SPEED_LIMIT_MAX;
$D690D5C64A428DDCADD2EDBBEBC4BFE4 DEV_RAID_SPEED_LIMIT_MIN;
$4E8858D30CCE92E14DA3F4BDDBD8423C DEV_SCSI;
$5FCFC9B82C4ACD98A29891A49C87C3CA DEV_SCSI_LOGGING_LEVEL;
MACRO_DF DF_1_CONFALT;
MACRO_DF DF_1_DIRECT;
MACRO_DF DF_1_DISPRELDNE;
MACRO_DF DF_1_DISPRELPND;
MACRO_DF DF_1_EDITED;
MACRO_DF DF_1_ENDFILTEE;
MACRO_DF DF_1_GLOBAL;
MACRO_DF DF_1_GLOBAUDIT;
MACRO_DF DF_1_GROUP;
MACRO_DF DF_1_IGNMULDEF;
MACRO_DF DF_1_INITFIRST;
MACRO_DF DF_1_INTERPOSE;
MACRO_DF DF_1_LOADFLTR;
MACRO_DF DF_1_NODEFLIB;
MACRO_DF DF_1_NODELETE;
MACRO_DF DF_1_NODIRECT;
MACRO_DF DF_1_NODUMP;
MACRO_DF DF_1_NOHDR;
MACRO_DF DF_1_NOKSYMS;
MACRO_DF DF_1_NOOPEN;
MACRO_DF DF_1_NORELOC;
MACRO_DF DF_1_NOW;
MACRO_DF DF_1_ORIGIN;
MACRO_DF DF_1_SINGLETON;
MACRO_DF DF_1_SYMINTPOSE;
MACRO_DF DF_1_TRANS;
MACRO_DF DF_BIND_NOW;
MACRO_DF DF_ORIGIN;
MACRO_DF_P1 DF_P1_GROUPPERM;
MACRO_DF_P1 DF_P1_LAZYLOAD;
MACRO_DF DF_STATIC_TLS;
MACRO_DF DF_SYMBOLIC;
MACRO_DF DF_TEXTREL;
MACRO_DIRTYPE DIRTYPE;
MACRO_DM DM;
MACRO_DO DO;
MACRO_DOMAIN DOMAIN;
MACRO_DONT DONT;
MACRO_DSP_BIND DSP_BIND_CENTER_LFE;
MACRO_DSP_BIND DSP_BIND_FRONT;
MACRO_DSP_BIND DSP_BIND_HANDSET;
MACRO_DSP_BIND DSP_BIND_I2S;
MACRO_DSP_BIND DSP_BIND_MIC;
MACRO_DSP_BIND DSP_BIND_MODEM1;
MACRO_DSP_BIND DSP_BIND_MODEM2;
MACRO_DSP_BIND DSP_BIND_QUERY;
MACRO_DSP_BIND DSP_BIND_SPDIF;
MACRO_DSP_BIND DSP_BIND_SURR;
MACRO_DSP DSP_CAP_BATCH;
MACRO_DSP DSP_CAP_BIND;
MACRO_DSP DSP_CAP_COPROC;
MACRO_DSP DSP_CAP_DUPLEX;
MACRO_DSP DSP_CAP_MMAP;
MACRO_DSP DSP_CAP_MULTI;
MACRO_DSP DSP_CAP_REALTIME;
MACRO_DSP DSP_CAP_REVISION;
MACRO_DSP DSP_CAP_TRIGGER;
MACRO_DTF DTF_1_CONFEXP;
MACRO_DTF DTF_1_PARINIT;
MACRO_DT DT_ADDRNUM;
MACRO_DT DT_ADDRRNGHI;
MACRO_DT DT_ADDRRNGLO;
MACRO_DT_ALPHA DT_ALPHA_NUM;
MACRO_DT_ALPHA DT_ALPHA_PLTRO;
MACRO_DT DT_AUDIT;
MACRO_DT DT_AUXILIARY;
MACRO_DT DT_BIND_NOW;
$C4D2990799738055A4FAFA16DB7CE68F DT_BLK;
MACRO_DT DT_CHECKSUM;
$C4D2990799738055A4FAFA16DB7CE68F DT_CHR;
MACRO_DT DT_CONFIG;
MACRO_DT DT_DEBUG;
MACRO_DT DT_DEPAUDIT;
$C4D2990799738055A4FAFA16DB7CE68F DT_DIR;
MACRO_DT DT_ENCODING;
MACRO_DT DT_EXTRANUM;
MACRO_DT DT_FEATURE_1;
$C4D2990799738055A4FAFA16DB7CE68F DT_FIFO;
MACRO_DT DT_FILTER;
MACRO_DT DT_FINI;
MACRO_DT DT_FINI_ARRAY;
MACRO_DT DT_FINI_ARRAYSZ;
MACRO_DT DT_FLAGS;
MACRO_DT DT_FLAGS_1;
MACRO_DT DT_GNU_CONFLICT;
MACRO_DT DT_GNU_CONFLICTSZ;
MACRO_DT DT_GNU_HASH;
MACRO_DT DT_GNU_LIBLIST;
MACRO_DT DT_GNU_LIBLISTSZ;
MACRO_DT DT_GNU_PRELINKED;
MACRO_DT DT_HASH;
MACRO_DT DT_HIOS;
MACRO_DT DT_HIPROC;
MACRO_DT_IA DT_IA_64_NUM;
MACRO_DT_IA DT_IA_64_PLT_RESERVE;
MACRO_DT DT_INIT;
MACRO_DT DT_INIT_ARRAY;
MACRO_DT DT_INIT_ARRAYSZ;
MACRO_DT DT_JMPREL;
$C4D2990799738055A4FAFA16DB7CE68F DT_LNK;
MACRO_DT DT_LOOS;
MACRO_DT DT_LOPROC;
MACRO_DT_MIPS DT_MIPS_AUX_DYNAMIC;
MACRO_DT_MIPS DT_MIPS_BASE_ADDRESS;
MACRO_DT_MIPS DT_MIPS_COMPACT_SIZE;
MACRO_DT_MIPS DT_MIPS_CONFLICT;
MACRO_DT_MIPS DT_MIPS_CONFLICTNO;
MACRO_DT_MIPS DT_MIPS_CXX_FLAGS;
MACRO_DT_MIPS DT_MIPS_DELTA_CLASS;
MACRO_DT_MIPS DT_MIPS_DELTA_CLASSSYM;
MACRO_DT_MIPS DT_MIPS_DELTA_CLASSSYM_NO;
MACRO_DT_MIPS DT_MIPS_DELTA_CLASS_NO;
MACRO_DT_MIPS DT_MIPS_DELTA_INSTANCE;
MACRO_DT_MIPS DT_MIPS_DELTA_INSTANCE_NO;
MACRO_DT_MIPS DT_MIPS_DELTA_RELOC;
MACRO_DT_MIPS DT_MIPS_DELTA_RELOC_NO;
MACRO_DT_MIPS DT_MIPS_DELTA_SYM;
MACRO_DT_MIPS DT_MIPS_DELTA_SYM_NO;
MACRO_DT_MIPS DT_MIPS_DYNSTR_ALIGN;
MACRO_DT_MIPS DT_MIPS_FLAGS;
MACRO_DT_MIPS DT_MIPS_GOTSYM;
MACRO_DT_MIPS DT_MIPS_GP_VALUE;
MACRO_DT_MIPS DT_MIPS_HIDDEN_GOTIDX;
MACRO_DT_MIPS DT_MIPS_HIPAGENO;
MACRO_DT_MIPS DT_MIPS_ICHECKSUM;
MACRO_DT_MIPS DT_MIPS_INTERFACE;
MACRO_DT_MIPS DT_MIPS_INTERFACE_SIZE;
MACRO_DT_MIPS DT_MIPS_IVERSION;
MACRO_DT_MIPS DT_MIPS_LIBLIST;
MACRO_DT_MIPS DT_MIPS_LIBLISTNO;
MACRO_DT_MIPS DT_MIPS_LOCALPAGE_GOTIDX;
MACRO_DT_MIPS DT_MIPS_LOCAL_GOTIDX;
MACRO_DT_MIPS DT_MIPS_LOCAL_GOTNO;
MACRO_DT_MIPS DT_MIPS_MSYM;
MACRO_DT_MIPS DT_MIPS_NUM;
MACRO_DT_MIPS DT_MIPS_OPTIONS;
MACRO_DT_MIPS DT_MIPS_PERF_SUFFIX;
MACRO_DT_MIPS DT_MIPS_PIXIE_INIT;
MACRO_DT_MIPS DT_MIPS_PLTGOT;
MACRO_DT_MIPS DT_MIPS_PROTECTED_GOTIDX;
MACRO_DT_MIPS DT_MIPS_RLD_MAP;
MACRO_DT_MIPS DT_MIPS_RLD_TEXT_RESOLVE_ADDR;
MACRO_DT_MIPS DT_MIPS_RLD_VERSION;
MACRO_DT_MIPS DT_MIPS_RWPLT;
MACRO_DT_MIPS DT_MIPS_SYMBOL_LIB;
MACRO_DT_MIPS DT_MIPS_SYMTABNO;
MACRO_DT_MIPS DT_MIPS_TIME_STAMP;
MACRO_DT_MIPS DT_MIPS_UNREFEXTNO;
MACRO_DT DT_MOVEENT;
MACRO_DT DT_MOVESZ;
MACRO_DT DT_MOVETAB;
MACRO_DT DT_NEEDED;
MACRO_DT_NIOS2 DT_NIOS2_GP;
MACRO_DT DT_NULL;
MACRO_DT DT_NUM;
MACRO_DT DT_PLTGOT;
MACRO_DT DT_PLTPAD;
MACRO_DT DT_PLTPADSZ;
MACRO_DT DT_PLTREL;
MACRO_DT DT_PLTRELSZ;
MACRO_DT DT_POSFLAG_1;
MACRO_DT_PPC64 DT_PPC64_GLINK;
MACRO_DT_PPC64 DT_PPC64_NUM;
MACRO_DT_PPC64 DT_PPC64_OPD;
MACRO_DT_PPC64 DT_PPC64_OPDSZ;
MACRO_DT_PPC64 DT_PPC64_OPT;
MACRO_DT_PPC DT_PPC_GOT;
MACRO_DT_PPC DT_PPC_NUM;
MACRO_DT DT_PREINIT_ARRAY;
MACRO_DT DT_PREINIT_ARRAYSZ;
$C4D2990799738055A4FAFA16DB7CE68F DT_REG;
MACRO_DT DT_REL;
MACRO_DT DT_RELA;
MACRO_DT DT_RELACOUNT;
MACRO_DT DT_RELAENT;
MACRO_DT DT_RELASZ;
MACRO_DT DT_RELCOUNT;
MACRO_DT DT_RELENT;
MACRO_DT DT_RELSZ;
MACRO_DT DT_RPATH;
MACRO_DT DT_RUNPATH;
$C4D2990799738055A4FAFA16DB7CE68F DT_SOCK;
MACRO_DT DT_SONAME;
MACRO_DT_SPARC DT_SPARC_NUM;
MACRO_DT_SPARC DT_SPARC_REGISTER;
MACRO_DT DT_STRSZ;
MACRO_DT DT_STRTAB;
MACRO_DT DT_SYMBOLIC;
MACRO_DT DT_SYMENT;
MACRO_DT DT_SYMINENT;
MACRO_DT DT_SYMINFO;
MACRO_DT DT_SYMINSZ;
MACRO_DT DT_SYMTAB;
MACRO_DT DT_TEXTREL;
MACRO_DT DT_TLSDESC_GOT;
MACRO_DT DT_TLSDESC_PLT;
$C4D2990799738055A4FAFA16DB7CE68F DT_UNKNOWN;
MACRO_DT DT_VALNUM;
MACRO_DT DT_VALRNGHI;
MACRO_DT DT_VALRNGLO;
MACRO_DT DT_VERDEF;
MACRO_DT DT_VERDEFNUM;
MACRO_DT DT_VERNEED;
MACRO_DT DT_VERNEEDNUM;
MACRO_DT DT_VERSIONTAGNUM;
MACRO_DT DT_VERSYM;
$C4D2990799738055A4FAFA16DB7CE68F DT_WHT;
$2EA190A087F83F88A23D8B31FFFB0F26 D_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 D_T_FMT;
MACRO_ERRNO E2BIG;
MACRO_ERRNO EACCES;
MACRO_EUNDEF EACCESS;
MACRO_ERRNO EADDRINUSE;
MACRO_ERRNO EADDRNOTAVAIL;
MACRO_ERRNO EADV;
MACRO_ERRNO EAFNOSUPPORT;
MACRO_ERRNO EAGAIN;
MACRO_EAI EAI_AGAIN;
MACRO_EAI EAI_BADFLAGS;
MACRO_EAI EAI_FAIL;
MACRO_EAI EAI_FAMILY;
MACRO_EAI EAI_MEMORY;
MACRO_EAI EAI_NONAME;
MACRO_EAI EAI_OVERFLOW;
MACRO_EAI EAI_SERVICE;
MACRO_EAI EAI_SOCKTYPE;
MACRO_EAI EAI_SYSTEM;
MACRO_ERRNO EALREADY;
MACRO_ERRNO EBADE;
MACRO_ERRNO EBADF;
MACRO_ERRNO EBADFD;
MACRO_EBADID EBADID;
MACRO_ERRNO EBADMSG;
MACRO_ENOSPACE EBADOP;
MACRO_ERRNO EBADR;
MACRO_ERRNO EBADRQC;
MACRO_ERRNO EBADSLT;
MACRO_ERRNO EBFONT;
MACRO_ERRNO EBUSY;
MACRO_EC EC;
MACRO_ERRNO ECANCELED;
desmode ECB;
MACRO_ERRNO ECHILD;
MACRO_ECHO ECHO;
MACRO_ECHOCTL ECHOCTL;
MACRO_ECHOE ECHOE;
MACRO_ECHOE ECHOK;
MACRO_ECHOKE ECHOKE;
MACRO_ECHOE ECHONL;
MACRO_ECHOPRT ECHOPRT;
MACRO_ERRNO ECHRNG;
MACRO_ERRNO ECOMM;
MACRO_ERRNO ECONNABORTED;
MACRO_ERRNO ECONNREFUSED;
MACRO_ERRNO ECONNRESET;
MACRO_ECTYPE ECTYPE_PACKET_RECEIVED;
MACRO_ECTYPE ECTYPE_TRANSMIT_LINE_JAMMED;
MACRO_ECTYPE ECTYPE_TRANSMIT_NET_ERROR;
MACRO_ECTYPE ECTYPE_TRANSMIT_NOT_LISTENING;
MACRO_ECTYPE ECTYPE_TRANSMIT_NOT_PRESENT;
MACRO_ECTYPE ECTYPE_TRANSMIT_NO_CLOCK;
MACRO_ECTYPE ECTYPE_TRANSMIT_OK;
MACRO_ECTYPE ECTYPE_TRANSMIT_STATUS;
MACRO_ERRNO EDEADLK;
MACRO_EDEADLOCK EDEADLOCK;
MACRO_ERRNO EDESTADDRREQ;
MACRO_ERRNO EDOM;
MACRO_ERRNO EDOTDOT;
MACRO_ERRNO EDQUOT;
MACRO_ERRNO EEXIST;
MACRO_EEXISTS EEXISTS;
MACRO_ERRNO EFAULT;
MACRO_EFA EFA_PARISC_1_0;
MACRO_EFA EFA_PARISC_1_1;
MACRO_EFA EFA_PARISC_2_0;
MACRO_ERRNO EFBIG;
MACRO_EF_ALPHA EF_ALPHA_32BIT;
MACRO_EF_ALPHA EF_ALPHA_CANRELAX;
MACRO_EF_ARM EF_ARM_ABI_FLOAT_HARD;
MACRO_EF_ARM EF_ARM_ABI_FLOAT_SOFT;
MACRO_EF_ARM EF_ARM_ALIGN8;
MACRO_EF_ARM EF_ARM_APCS_26;
MACRO_EF_ARM EF_ARM_APCS_FLOAT;
MACRO_EF_ARM EF_ARM_BE8;
MACRO_EF_ARM EF_ARM_DYNSYMSUSESEGIDX;
MACRO_EF_ARM EF_ARM_EABIMASK;
MACRO_EF_ARM EF_ARM_EABI_UNKNOWN;
MACRO_EF_ARM EF_ARM_EABI_VER1;
MACRO_EF_ARM EF_ARM_EABI_VER2;
MACRO_EF_ARM EF_ARM_EABI_VER3;
MACRO_EF_ARM EF_ARM_EABI_VER4;
MACRO_EF_ARM EF_ARM_EABI_VER5;
MACRO_EF_ARM EF_ARM_HASENTRY;
MACRO_EF_ARM EF_ARM_INTERWORK;
MACRO_EF_ARM EF_ARM_LE8;
MACRO_EF_ARM EF_ARM_MAPSYMSFIRST;
MACRO_EF_ARM EF_ARM_MAVERICK_FLOAT;
MACRO_EF_ARM EF_ARM_NEW_ABI;
MACRO_EF_ARM EF_ARM_OLD_ABI;
MACRO_EF_ARM EF_ARM_PIC;
MACRO_EF_ARM EF_ARM_RELEXEC;
MACRO_EF_ARM EF_ARM_SOFT_FLOAT;
MACRO_EF_ARM EF_ARM_SYMSARESORTED;
MACRO_EF_ARM EF_ARM_VFP_FLOAT;
MACRO_EF EF_CPU32;
MACRO_EF_IA EF_IA_64_ABI64;
MACRO_EF_IA EF_IA_64_ARCH;
MACRO_EF_IA EF_IA_64_MASKOS;
MACRO_EF_MIPS EF_MIPS_64BIT_WHIRL;
MACRO_EF_MIPS EF_MIPS_ABI2;
MACRO_EF_MIPS EF_MIPS_ABI_ON32;
MACRO_EF_MIPS EF_MIPS_ARCH;
MACRO_EF_MIPS EF_MIPS_ARCH_1;
MACRO_EF_MIPS EF_MIPS_ARCH_2;
MACRO_EF_MIPS EF_MIPS_ARCH_3;
MACRO_EF_MIPS EF_MIPS_ARCH_32;
MACRO_EF_MIPS EF_MIPS_ARCH_32R2;
MACRO_EF_MIPS EF_MIPS_ARCH_4;
MACRO_EF_MIPS EF_MIPS_ARCH_5;
MACRO_EF_MIPS EF_MIPS_ARCH_64;
MACRO_EF_MIPS EF_MIPS_ARCH_64R2;
MACRO_EF_MIPS EF_MIPS_CPIC;
MACRO_EF_MIPS EF_MIPS_FP64;
MACRO_EF_MIPS EF_MIPS_NAN2008;
MACRO_EF_MIPS EF_MIPS_NOREORDER;
MACRO_EF_MIPS EF_MIPS_PIC;
MACRO_EF_MIPS EF_MIPS_XGOT;
MACRO_EF_PARISC EF_PARISC_ARCH;
MACRO_EF_PARISC EF_PARISC_EXT;
MACRO_EF_PARISC EF_PARISC_LAZYSWAP;
MACRO_EF_PARISC EF_PARISC_LSB;
MACRO_EF_PARISC EF_PARISC_NO_KABP;
MACRO_EF_PARISC EF_PARISC_TRAPNIL;
MACRO_EF_PARISC EF_PARISC_WIDE;
MACRO_EF_PPC64 EF_PPC64_ABI;
MACRO_EF_PPC EF_PPC_EMB;
MACRO_EF_PPC EF_PPC_RELOCATABLE;
MACRO_EF_PPC EF_PPC_RELOCATABLE_LIB;
MACRO_EF_S390 EF_S390_HIGH_GPRS;
MACRO_EF_SH EF_SH1;
MACRO_EF_SH EF_SH2;
MACRO_EF_SH EF_SH2A;
MACRO_EF_SH EF_SH2A_NOFPU;
MACRO_EF_SH EF_SH2A_SH3E;
MACRO_EF_SH EF_SH2A_SH3_NOFPU;
MACRO_EF_SH EF_SH2A_SH4;
MACRO_EF_SH EF_SH2A_SH4_NOFPU;
MACRO_EF_SH EF_SH2E;
MACRO_EF_SH EF_SH3;
MACRO_EF_SH EF_SH3E;
MACRO_EF_SH EF_SH3_DSP;
MACRO_EF_SH EF_SH3_NOMMU;
MACRO_EF_SH EF_SH4;
MACRO_EF_SH EF_SH4A;
MACRO_EF_SH EF_SH4AL_DSP;
MACRO_EF_SH EF_SH4A_NOFPU;
MACRO_EF_SH EF_SH4_NOFPU;
MACRO_EF_SH EF_SH4_NOMMU_NOFPU;
MACRO_EF_SH EF_SH_DSP;
MACRO_EF_SH EF_SH_MACH_MASK;
MACRO_EF_SH EF_SH_UNKNOWN;
MACRO_EF_SPARCV9 EF_SPARCV9_MM;
MACRO_EF_SPARCV9 EF_SPARCV9_PSO;
MACRO_EF_SPARCV9 EF_SPARCV9_RMO;
MACRO_EF_SPARCV9 EF_SPARCV9_TSO;
MACRO_EF_SPARCV9 EF_SPARC_32PLUS;
MACRO_EF_SPARCV9 EF_SPARC_EXT_MASK;
MACRO_EF_SPARCV9 EF_SPARC_HAL_R1;
MACRO_EF_SPARCV9 EF_SPARC_LEDATA;
MACRO_EF_SPARCV9 EF_SPARC_SUN_US1;
MACRO_EF_SPARCV9 EF_SPARC_SUN_US3;
MACRO_ERRNO EHOSTDOWN;
MACRO_ERRNO EHOSTUNREACH;
MACRO_ERRNO EHWPOISON;
MACRO_ERRNO EIDRM;
MACRO_ERRNO EILSEQ;
MACRO_ERRNO EINPROGRESS;
MACRO_ERRNO EINTR;
MACRO_ERRNO EINVAL;
MACRO_ERRNO EIO;
MACRO_ERRNO EISCONN;
MACRO_ERRNO EISDIR;
MACRO_ERRNO EISNAM;
MACRO_EI_ABIVERSION EI_ABIVERSION;
MACRO_EI_CLASS EI_CLASS;
MACRO_EI_DATA EI_DATA;
MACRO_EI EI_MAG0;
MACRO_EI_MAG1 EI_MAG1;
MACRO_EI_MAG2 EI_MAG2;
MACRO_EI_MAG3 EI_MAG3;
MACRO_EI EI_NIDENT;
MACRO_EI_VERSION EI_OSABI;
MACRO_EI_ABIVERSION EI_PAD;
MACRO_EI_VERSION EI_VERSION;
MACRO_ERRNO EKEYEXPIRED;
MACRO_ERRNO EKEYREJECTED;
MACRO_ERRNO EKEYREVOKED;
MACRO_EL EL;
MACRO_ERRNO EL2HLT;
MACRO_ERRNO EL2NSYNC;
MACRO_ERRNO EL3HLT;
MACRO_ERRNO EL3RST;
MACRO_ELFCLASSNONE ELFCLASS32;
MACRO_ELFCLASSNONE ELFCLASS64;
MACRO_ELFCLASSNONE ELFCLASSNONE;
MACRO_ELFCLASSNUM ELFCLASSNUM;
MACRO_ELFDATANONE ELFDATA2LSB;
MACRO_ELFDATANONE ELFDATA2MSB;
MACRO_ELFDATANONE ELFDATANONE;
MACRO_ELFDATANUM ELFDATANUM;
MACRO_ELFMAG0 ELFMAG0;
MACRO_ELFMAG1 ELFMAG1;
MACRO_ELFMAG2 ELFMAG2;
MACRO_ELFMAG3 ELFMAG3;
MACRO_ELFOSABI ELFOSABI_AIX;
MACRO_ELFOSABI ELFOSABI_ARM;
MACRO_ELFOSABI ELFOSABI_ARM_AEABI;
MACRO_ELFOSABI ELFOSABI_FREEBSD;
MACRO_ELFOSABI ELFOSABI_GNU;
MACRO_ELFOSABI ELFOSABI_HPUX;
MACRO_ELFOSABI ELFOSABI_IRIX;
MACRO_ELFOSABI ELFOSABI_LINUX;
MACRO_ELFOSABI ELFOSABI_MODESTO;
MACRO_ELFOSABI ELFOSABI_NETBSD;
MACRO_ELFOSABI ELFOSABI_NONE;
MACRO_ELFOSABI ELFOSABI_OPENBSD;
MACRO_ELFOSABI ELFOSABI_SOLARIS;
MACRO_ELFOSABI ELFOSABI_STANDALONE;
MACRO_ELFOSABI ELFOSABI_SYSV;
MACRO_ELFOSABI ELFOSABI_TRU64;
MACRO_ELF_NGREG ELF_NFPREG;
MACRO_ELF_NGREG ELF_NGREG;
MACRO_ELF_NOTE ELF_NOTE_ABI;
MACRO_ELF_NOTE ELF_NOTE_OS_FREEBSD;
MACRO_ELF_NOTE ELF_NOTE_OS_GNU;
MACRO_ELF_NOTE ELF_NOTE_OS_LINUX;
MACRO_ELF_NOTE ELF_NOTE_OS_SOLARIS2;
MACRO_ELF ELF_NOTE_PAGESIZE_HINT;
MACRO_ELF_NGREG ELF_NVRREG;
MACRO_ELF_NGREG ELF_PRARGSZ;
MACRO_ERRNO ELIBACC;
MACRO_ERRNO ELIBBAD;
MACRO_ERRNO ELIBEXEC;
MACRO_ERRNO ELIBMAX;
MACRO_ERRNO ELIBSCN;
MACRO_ERRNO ELNRNG;
MACRO_ERRNO ELOOP;
MACRO_ERRNO EMEDIUMTYPE;
MACRO_ERRNO EMFILE;
MACRO_ERRNO EMLINK;
MACRO_EMPTY EMPTY;
MACRO_ERRNO EMSGSIZE;
MACRO_ERRNO EMULTIHOP;
MACRO_EM EM_386;
MACRO_EM EM_68HC05;
MACRO_EM EM_68HC08;
MACRO_EM EM_68HC11;
MACRO_EM EM_68HC12;
MACRO_EM EM_68HC16;
MACRO_EM EM_68K;
MACRO_EM EM_860;
MACRO_EM EM_88K;
MACRO_EM EM_960;
MACRO_EM EM_AARCH64;
MACRO_EM EM_ALPHA;
MACRO_EM EM_ALTERA_NIOS2;
MACRO_EM EM_ARC;
MACRO_EM EM_ARC_A5;
MACRO_EM EM_ARM;
MACRO_EM EM_AVR;
MACRO_EM EM_COLDFIRE;
MACRO_EM EM_CRIS;
MACRO_EM EM_D10V;
MACRO_EM EM_D30V;
MACRO_EM EM_FAKE_ALPHA;
MACRO_EM EM_FIREPATH;
MACRO_EM EM_FR20;
MACRO_EM EM_FR30;
MACRO_EM EM_FX66;
MACRO_EM EM_H8S;
MACRO_EM EM_H8_300;
MACRO_EM EM_H8_300H;
MACRO_EM EM_H8_500;
MACRO_EM EM_HUANY;
MACRO_EM EM_IA_64;
MACRO_EM EM_JAVELIN;
MACRO_EM EM_M32;
MACRO_EM EM_M32R;
MACRO_EM EM_ME16;
MACRO_EM EM_MICROBLAZE;
MACRO_EM EM_MIPS;
MACRO_EM EM_MIPS_RS3_LE;
MACRO_EM EM_MIPS_X;
MACRO_EM EM_MMA;
MACRO_EM EM_MMIX;
MACRO_EM EM_MN10200;
MACRO_EM EM_MN10300;
MACRO_EM EM_NCPU;
MACRO_EM EM_NDR1;
MACRO_EM EM_NONE;
MACRO_EM EM_NUM;
MACRO_EM EM_OPENRISC;
MACRO_EM EM_PARISC;
MACRO_EM EM_PCP;
MACRO_EM EM_PDSP;
MACRO_EM EM_PJ;
MACRO_EM EM_PPC;
MACRO_EM EM_PPC64;
MACRO_EM EM_PRISM;
MACRO_EM EM_RCE;
MACRO_EM EM_RH32;
MACRO_EM EM_S370;
MACRO_EM EM_S390;
MACRO_EM EM_SH;
MACRO_EM EM_SPARC;
MACRO_EM EM_SPARC32PLUS;
MACRO_EM EM_SPARCV9;
MACRO_EM EM_ST100;
MACRO_EM EM_ST19;
MACRO_EM EM_ST7;
MACRO_EM EM_ST9PLUS;
MACRO_EM EM_STARCORE;
MACRO_EM EM_SVX;
MACRO_EM EM_TILEGX;
MACRO_EM EM_TILEPRO;
MACRO_EM EM_TINYJ;
MACRO_EM EM_TRICORE;
MACRO_EM EM_V800;
MACRO_EM EM_V850;
MACRO_EM EM_VAX;
MACRO_EM EM_VPP500;
MACRO_EM EM_X86_64;
MACRO_EM EM_XTENSA;
MACRO_EM EM_ZSP;
MACRO_ERRNO ENAMETOOLONG;
MACRO_ERRNO ENAVAIL;
MACRO_ENCODING ENCODING_DEFAULT;
MACRO_ENCODING ENCODING_FM_MARK;
MACRO_ENCODING ENCODING_FM_SPACE;
MACRO_ENCODING ENCODING_MANCHESTER;
MACRO_ENCODING ENCODING_NRZ;
MACRO_ENCODING ENCODING_NRZI;
desdir ENCRYPT;
MACRO_ENCRYPT ENCRYPT_CNT;
MACRO_ENCRYPT ENCRYPT_DEC_KEYID;
MACRO_ENCRYPT ENCRYPT_ENC_KEYID;
MACRO_ENCRYPT ENCRYPT_END;
MACRO_ENCRYPT ENCRYPT_IS;
MACRO_ENCRYPT ENCRYPT_REPLY;
MACRO_ENCRYPT ENCRYPT_REQEND;
MACRO_ENCRYPT ENCRYPT_REQSTART;
MACRO_ENCRYPT ENCRYPT_START;
MACRO_ENCRYPT ENCRYPT_SUPPORT;
MACRO_ENCTYPE ENCTYPE_ANY;
MACRO_ENCTYPE ENCTYPE_CNT;
MACRO_ENCTYPE ENCTYPE_DES_CFB64;
MACRO_ENCTYPE ENCTYPE_DES_OFB64;
MACRO_ERRNO ENETDOWN;
MACRO_ERRNO ENETRESET;
MACRO_ERRNO ENETUNREACH;
MACRO_ERRNO ENFILE;
MACRO_ERRNO ENOANO;
MACRO_ERRNO ENOBUFS;
MACRO_ERRNO ENOCSI;
MACRO_ERRNO ENODATA;
MACRO_ERRNO ENODEV;
MACRO_ERRNO ENOENT;
MACRO_ERRNO ENOEXEC;
MACRO_ERRNO ENOKEY;
MACRO_ERRNO ENOLCK;
MACRO_ERRNO ENOLINK;
MACRO_ERRNO ENOMEDIUM;
MACRO_ERRNO ENOMEM;
MACRO_ERRNO ENOMSG;
MACRO_ERRNO ENONET;
MACRO_ERRNO ENOPKG;
MACRO_ERRNO ENOPROTOOPT;
MACRO_ENOSPACE ENOSPACE;
MACRO_ERRNO ENOSPC;
MACRO_ERRNO ENOSR;
MACRO_ERRNO ENOSTR;
MACRO_ERRNO ENOSYS;
MACRO_ERRNO ENOTBLK;
MACRO_ERRNO ENOTCONN;
MACRO_ERRNO ENOTDIR;
MACRO_ERRNO ENOTEMPTY;
MACRO_EUNDEF ENOTFOUND;
MACRO_ERRNO ENOTNAM;
MACRO_ERRNO ENOTRECOVERABLE;
MACRO_ERRNO ENOTSOCK;
MACRO_ENOTSUP ENOTSUP;
MACRO_ERRNO ENOTTY;
MACRO_ERRNO ENOTUNIQ;
MACRO_ENOUSER ENOUSER;
$EDBA1914F16BC538415B0E0A3A3FD3BB ENTER;
MACRO_ENV ENV_ESC;
MACRO_ENV ENV_USERVAR;
MACRO_ERRNO ENXIO;
MACRO_EOF EOF;
MACRO_ERRNO EOPNOTSUPP;
MACRO_EOR EOR;
MACRO_ERRNO EOVERFLOW;
MACRO_ERRNO EOWNERDEAD;
MACRO_ERRNO EPERM;
MACRO_ERRNO EPFNOSUPPORT;
MACRO_ERRNO EPIPE;
EPOLL_EVENTS EPOLLERR;
EPOLL_EVENTS EPOLLET;
EPOLL_EVENTS EPOLLHUP;
EPOLL_EVENTS EPOLLIN;
EPOLL_EVENTS EPOLLMSG;
EPOLL_EVENTS EPOLLONESHOT;
EPOLL_EVENTS EPOLLOUT;
EPOLL_EVENTS EPOLLPRI;
EPOLL_EVENTS EPOLLRDBAND;
EPOLL_EVENTS EPOLLRDHUP;
EPOLL_EVENTS EPOLLRDNORM;
EPOLL_EVENTS EPOLLWAKEUP;
EPOLL_EVENTS EPOLLWRBAND;
EPOLL_EVENTS EPOLLWRNORM;
$71A73B801C2053AED88DB4CC6B3B0947 EPOLL_CLOEXEC;
MACRO_EPOLL EPOLL_CTL_ADD;
MACRO_EPOLL EPOLL_CTL_DEL;
MACRO_EPOLL EPOLL_CTL_MOD;
MACRO_ERRNO EPROTO;
MACRO_ERRNO EPROTONOSUPPORT;
MACRO_ERRNO EPROTOTYPE;
$2EA190A087F83F88A23D8B31FFFB0F26 ERA;
MACRO_ERRNO ERANGE;
$2EA190A087F83F88A23D8B31FFFB0F26 ERA_D_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 ERA_D_T_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 ERA_T_FMT;
MACRO_ERRNO EREMCHG;
MACRO_ERRNO EREMOTE;
MACRO_ERRNO EREMOTEIO;
MACRO_ERRNO ERESTART;
MACRO_ERRNO ERFKILL;
MACRO_ERRNO EROFS;
MACRO_ERROR ERROR;
MACRO_ERROR_TABLE ERROR_TABLE_BASE_ss;
MACRO_ERRNO ESHUTDOWN;
MACRO_ERRNO ESOCKTNOSUPPORT;
MACRO_ERRNO ESPIPE;
MACRO_ERRNO ESRCH;
MACRO_ERRNO ESRMNT;
MACRO_ERRNO ESTALE;
MACRO_ERRNO ESTRPIPE;
MACRO_ETHERMIN ETHERMIN;
MACRO_ETHERMTU ETHERMTU;
MACRO_ETHERTYPE ETHERTYPE_AARP;
MACRO_ETHERTYPE ETHERTYPE_ARP;
MACRO_ETHERTYPE ETHERTYPE_AT;
MACRO_ETHERTYPE ETHERTYPE_IP;
MACRO_ETHERTYPE ETHERTYPE_IPV6;
MACRO_ETHERTYPE ETHERTYPE_IPX;
MACRO_ETHERTYPE ETHERTYPE_LOOPBACK;
MACRO_ETHERTYPE_TRAIL ETHERTYPE_NTRAILER;
MACRO_ETHERTYPE ETHERTYPE_PUP;
MACRO_ETHERTYPE ETHERTYPE_REVARP;
MACRO_ETHERTYPE ETHERTYPE_SPRITE;
MACRO_ETHERTYPE_TRAIL ETHERTYPE_TRAIL;
MACRO_ETHERTYPE ETHERTYPE_VLAN;
MACRO_ETHER ETHER_ADDR_LEN;
MACRO_ETHER ETHER_CRC_LEN;
MACRO_ETHER ETHER_HDR_LEN;
MACRO_ETHER ETHER_MAX_LEN;
MACRO_ETHER ETHER_MIN_LEN;
MACRO_ETHER ETHER_TYPE_LEN;
MACRO_ETH ETH_ALEN;
MACRO_ETH ETH_DATA_LEN;
MACRO_ETH ETH_FCS_LEN;
MACRO_ETH ETH_FRAME_LEN;
MACRO_ETH ETH_HLEN;
MACRO_ETH ETH_P_1588;
MACRO_ETH ETH_P_8021AD;
MACRO_ETH ETH_P_8021AH;
MACRO_ETH ETH_P_8021Q;
MACRO_ETH ETH_P_80221;
MACRO_ETH ETH_P_802_2;
MACRO_ETH ETH_P_802_3;
MACRO_ETH ETH_P_802_3_MIN;
MACRO_ETH ETH_P_802_EX1;
MACRO_ETH ETH_P_AARP;
MACRO_ETH ETH_P_AF_IUCV;
MACRO_ETH ETH_P_ALL;
MACRO_ETH ETH_P_AOE;
MACRO_ETH ETH_P_ARCNET;
MACRO_ETH ETH_P_ARP;
MACRO_ETH ETH_P_ATALK;
MACRO_ETH ETH_P_ATMFATE;
MACRO_ETH ETH_P_ATMMPOA;
MACRO_ETH ETH_P_AX25;
MACRO_ETH ETH_P_BATMAN;
MACRO_ETH ETH_P_BPQ;
MACRO_ETH ETH_P_CAIF;
MACRO_ETH ETH_P_CAN;
MACRO_ETH ETH_P_CANFD;
MACRO_ETH ETH_P_CONTROL;
MACRO_ETH ETH_P_CUST;
MACRO_ETH ETH_P_DDCMP;
MACRO_ETH ETH_P_DEC;
MACRO_ETH ETH_P_DIAG;
MACRO_ETH ETH_P_DNA_DL;
MACRO_ETH ETH_P_DNA_RC;
MACRO_ETH ETH_P_DNA_RT;
MACRO_ETH ETH_P_DSA;
MACRO_ETH ETH_P_ECONET;
MACRO_ETH ETH_P_EDSA;
MACRO_ETH ETH_P_FCOE;
MACRO_ETH ETH_P_FIP;
MACRO_ETH ETH_P_HDLC;
MACRO_ETH ETH_P_IEEE802154;
MACRO_ETH ETH_P_IEEEPUP;
MACRO_ETH ETH_P_IEEEPUPAT;
MACRO_ETH ETH_P_IP;
MACRO_ETH ETH_P_IPV6;
MACRO_ETH ETH_P_IPX;
MACRO_ETH ETH_P_IRDA;
MACRO_ETH ETH_P_LAT;
MACRO_ETH ETH_P_LINK_CTL;
MACRO_ETH ETH_P_LOCALTALK;
MACRO_ETH ETH_P_LOOP;
MACRO_ETH ETH_P_LOOPBACK;
MACRO_ETH ETH_P_MOBITEX;
MACRO_ETH ETH_P_MPLS_MC;
MACRO_ETH ETH_P_MPLS_UC;
MACRO_ETH ETH_P_MVRP;
MACRO_ETH ETH_P_PAE;
MACRO_ETH ETH_P_PAUSE;
MACRO_ETH ETH_P_PHONET;
MACRO_ETH ETH_P_PPPTALK;
MACRO_ETH ETH_P_PPP_DISC;
MACRO_ETH ETH_P_PPP_MP;
MACRO_ETH ETH_P_PPP_SES;
MACRO_ETH ETH_P_PRP;
MACRO_ETH ETH_P_PUP;
MACRO_ETH ETH_P_PUPAT;
MACRO_ETH ETH_P_QINQ1;
MACRO_ETH ETH_P_QINQ2;
MACRO_ETH ETH_P_QINQ3;
MACRO_ETH ETH_P_RARP;
MACRO_ETH ETH_P_SCA;
MACRO_ETH ETH_P_SLOW;
MACRO_ETH ETH_P_SNAP;
MACRO_ETH ETH_P_TDLS;
MACRO_ETH ETH_P_TEB;
MACRO_ETH ETH_P_TIPC;
MACRO_ETH ETH_P_TRAILER;
MACRO_ETH ETH_P_TR_802_2;
MACRO_ETH ETH_P_WAN_PPP;
MACRO_ETH ETH_P_WCCP;
MACRO_ETH ETH_P_X25;
MACRO_ETH ETH_P_XDSA;
MACRO_ETH ETH_ZLEN;
MACRO_ERRNO ETIME;
MACRO_ERRNO ETIMEDOUT;
MACRO_ERRNO ETOOMANYREFS;
MACRO_ERRNO ETXTBSY;
MACRO_ET ET_CORE;
MACRO_ET ET_DYN;
MACRO_ET ET_EXEC;
MACRO_ET ET_HIOS;
MACRO_ET ET_HIPROC;
MACRO_ET ET_LOOS;
MACRO_ET ET_LOPROC;
MACRO_ET ET_NONE;
MACRO_ET ET_NUM;
MACRO_ET ET_REL;
MACRO_ERRNO EUCLEAN;
MACRO_ERRNO EUNATCH;
MACRO_EUNDEF EUNDEF;
MACRO_ERRNO EUSERS;
MACRO_EV_SEQ EV_CHN_COMMON;
MACRO_EV_SEQ EV_CHN_VOICE;
MACRO_EV EV_CURRENT;
MACRO_EV EV_NONE;
MACRO_EV EV_NUM;
MACRO_EV_SEQ EV_SEQ_LOCAL;
MACRO_EV_SEQ EV_SYSEX;
MACRO_EV_SEQ EV_TIMING;
MACRO_ERRNO EWOULDBLOCK;
MACRO_ERRNO EXDEV;
MACRO_EXEC EXEC_PAGESIZE;
MACRO_ERRNO EXFULL;
MACRO_EXIT EXIT_FAILURE;
MACRO_EXIT EXIT_SUCCESS;
MACRO_EXPIRE EXPIRE_TIME;
MACRO_COLL EXPR_NEST_MAX;
MACRO_EXTA EXTA;
MACRO_EXTB EXTB;
MACRO_EXTENDED EXTENDED_SAP;
MACRO_IEXTEN EXTPROC;
MACRO_EX EX_CANTCREAT;
MACRO_EX EX_CONFIG;
MACRO_EX EX_DATAERR;
MACRO_EX EX_IOERR;
MACRO_EX EX_NOHOST;
MACRO_EX EX_NOINPUT;
MACRO_EX EX_NOPERM;
MACRO_EX EX_NOUSER;
MACRO_EX EX_OK;
MACRO_EX EX_OSERR;
MACRO_EX EX_OSFILE;
MACRO_EX EX_PROTOCOL;
MACRO_EX EX_SOFTWARE;
MACRO_EX EX_TEMPFAIL;
MACRO_EX EX_UNAVAILABLE;
MACRO_EX EX_USAGE;
MACRO_EX EX__BASE;
MACRO_EX EX__MAX;
MACRO_E_OK E_BAD_ARGUMENT;
MACRO_E_OK E_BAD_STATE;
MACRO_E_OK E_CONNECTED;
MACRO_E_OK E_CURRENT;
MACRO_E_OK E_INVALID_FIELD;
MACRO_E E_MIPS_ARCH_1;
MACRO_E E_MIPS_ARCH_2;
MACRO_E E_MIPS_ARCH_3;
MACRO_E E_MIPS_ARCH_32;
MACRO_E E_MIPS_ARCH_4;
MACRO_E E_MIPS_ARCH_5;
MACRO_E E_MIPS_ARCH_64;
MACRO_E_OK E_NOT_CONNECTED;
MACRO_E_OK E_NOT_POSTED;
MACRO_E_OK E_NOT_SELECTABLE;
MACRO_E_OK E_NO_MATCH;
MACRO_E_OK E_NO_ROOM;
MACRO_E_OK E_OK;
MACRO_E_OK E_POSTED;
MACRO_E_OK E_REQUEST_DENIED;
MACRO_E_OK E_SYSTEM_ERROR;
MACRO_E_TABSZ E_TABSZ;
MACRO_E_OK E_UNKNOWN_COMMAND;
MACRO_FAILED FAILED;
MACRO_BOOL FALSE;
MACRO_FAPPEND FAPPEND;
MACRO_FASYNC FASYNC;
MACRO_FDDI FDDI_EXTENDED_SAP;
MACRO_FDDI FDDI_FC_K_ASYNC_LLC_DEF;
MACRO_FDDI FDDI_FC_K_ASYNC_LLC_MAX;
MACRO_FDDI FDDI_FC_K_ASYNC_LLC_MIN;
MACRO_FDDI FDDI_FC_K_IMPLEMENTOR_MAX;
MACRO_FDDI FDDI_FC_K_IMPLEMENTOR_MIN;
MACRO_FDDI FDDI_FC_K_MAC_MAX;
MACRO_FDDI FDDI_FC_K_MAC_MIN;
MACRO_FDDI FDDI_FC_K_NON_RESTRICTED_TOKEN;
MACRO_FDDI FDDI_FC_K_RESERVED_MAX;
MACRO_FDDI FDDI_FC_K_RESERVED_MIN;
MACRO_FDDI FDDI_FC_K_RESTRICTED_TOKEN;
MACRO_FDDI FDDI_FC_K_SMT_MAX;
MACRO_FDDI FDDI_FC_K_SMT_MIN;
MACRO_FDDI FDDI_FC_K_SYNC_LLC_MAX;
MACRO_FDDI FDDI_FC_K_SYNC_LLC_MIN;
MACRO_FDDI FDDI_FC_K_VOID;
MACRO_FDDI FDDI_K_8022_DLEN;
MACRO_FDDI FDDI_K_8022_HLEN;
MACRO_FDDI FDDI_K_8022_ZLEN;
MACRO_FDDI FDDI_K_ALEN;
MACRO_FDDI FDDI_K_LLC_LEN;
MACRO_FDDI FDDI_K_LLC_ZLEN;
MACRO_FDDI FDDI_K_OUI_LEN;
MACRO_FDDI FDDI_K_SNAP_DLEN;
MACRO_FDDI FDDI_K_SNAP_HLEN;
MACRO_FDDI FDDI_K_SNAP_ZLEN;
MACRO_FDDI FDDI_UI_CMD;
MACRO_CLOEXEC FD_CLOEXEC;
MACRO_FD FD_SETSIZE;
$35BD8FE83593BDB9A18DE40E9AAD5356 FE_DIVBYZERO;
$67C416E26EEE13F3D7C2627C9615BC9D FE_DOWNWARD;
$35BD8FE83593BDB9A18DE40E9AAD5356 FE_INEXACT;
$35BD8FE83593BDB9A18DE40E9AAD5356 FE_INVALID;
$35BD8FE83593BDB9A18DE40E9AAD5356 FE_OVERFLOW;
$67C416E26EEE13F3D7C2627C9615BC9D FE_TONEAREST;
$67C416E26EEE13F3D7C2627C9615BC9D FE_TOWARDZERO;
$35BD8FE83593BDB9A18DE40E9AAD5356 FE_UNDERFLOW;
$67C416E26EEE13F3D7C2627C9615BC9D FE_UPWARD;
MACRO_FF0 FF0;
MACRO_FF0 FF1;
MACRO_CR3 FFDLY;
MACRO_FAPPEND FFSYNC;
MACRO_FIFOTYPE FIFOTYPE;
MACRO_TMP FILENAME_MAX;
$EDBA1914F16BC538415B0E0A3A3FD3BB FIND;
MACRO_FIOCLEX FIOCLEX;
MACRO_FIOGETOWN FIOGETOWN;
MACRO_FIONCLEX FIONCLEX;
MACRO_FIOSETOWN FIOSETOWN;
MACRO_ECHOKE FLUSHO;
MACRO_FLUSHR FLUSHR;
MACRO_FLUSHRW FLUSHRW;
MACRO_FLUSHR FLUSHW;
MACRO_FMNAMESZ FMNAMESZ;
MACRO_FM FM_PATCH;
MACRO_FM_TYPE FM_TYPE_ADLIB;
MACRO_FM_TYPE FM_TYPE_OPL3;
MACRO_FNDELAY FNDELAY;
MACRO_FNM FNM_NOESCAPE;
MACRO_FNM FNM_NOMATCH;
MACRO_FNM FNM_PATHNAME;
MACRO_FNM FNM_PERIOD;
MACRO_FNONBLOCK FNONBLOCK;
MACRO_FOPEN FOPEN_MAX;
MACRO_FORM FORM_C;
MACRO_FORM FORM_N;
MACRO_FORM FORM_T;
$E027FAAD9E62D0114E3908730A75FC8D FPE_FLTDIV;
$E027FAAD9E62D0114E3908730A75FC8D FPE_FLTINV;
$E027FAAD9E62D0114E3908730A75FC8D FPE_FLTOVF;
$E027FAAD9E62D0114E3908730A75FC8D FPE_FLTRES;
$E027FAAD9E62D0114E3908730A75FC8D FPE_FLTSUB;
$E027FAAD9E62D0114E3908730A75FC8D FPE_FLTUND;
$E027FAAD9E62D0114E3908730A75FC8D FPE_INTDIV;
$E027FAAD9E62D0114E3908730A75FC8D FPE_INTOVF;
MACRO_FP FP_FAST_FMA;
MACRO_FP FP_FAST_FMAF;
MACRO_FP FP_ILOGB0;
MACRO_FP FP_ILOGBNAN;
$6BE3B5AAB700BFBA3A432F0BBF114207 FP_INFINITE;
$6BE3B5AAB700BFBA3A432F0BBF114207 FP_NAN;
$6BE3B5AAB700BFBA3A432F0BBF114207 FP_NORMAL;
$6BE3B5AAB700BFBA3A432F0BBF114207 FP_SUBNORMAL;
$6BE3B5AAB700BFBA3A432F0BBF114207 FP_ZERO;
$D8F03A40183C1F0DFE13800B3B9FB0ED FSETLOCKING_BYCALLER;
$D8F03A40183C1F0DFE13800B3B9FB0ED FSETLOCKING_INTERNAL;
$D8F03A40183C1F0DFE13800B3B9FB0ED FSETLOCKING_QUERY;
$1DF047069AF03344AD1E8E838FC376B2 FS_AIO_MAX_NR;
$1DF047069AF03344AD1E8E838FC376B2 FS_AIO_NR;
$1DF047069AF03344AD1E8E838FC376B2 FS_DENTRY;
$1DF047069AF03344AD1E8E838FC376B2 FS_DIR_NOTIFY;
$1DF047069AF03344AD1E8E838FC376B2 FS_DQSTATS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_ALLOCATED;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_CACHE_HITS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_DROPS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_FREE;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_LOOKUPS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_READS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_SYNCS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_WARNINGS;
$B017515FC8405800518D7337EC8ACF8A FS_DQ_WRITES;
$1DF047069AF03344AD1E8E838FC376B2 FS_INOTIFY;
$1DF047069AF03344AD1E8E838FC376B2 FS_LEASES;
$1DF047069AF03344AD1E8E838FC376B2 FS_LEASE_TIME;
$1DF047069AF03344AD1E8E838FC376B2 FS_MAXDQUOT;
$1DF047069AF03344AD1E8E838FC376B2 FS_MAXFILE;
$1DF047069AF03344AD1E8E838FC376B2 FS_MAXINODE;
$1DF047069AF03344AD1E8E838FC376B2 FS_MAXSUPER;
$1DF047069AF03344AD1E8E838FC376B2 FS_NRDQUOT;
$1DF047069AF03344AD1E8E838FC376B2 FS_NRFILE;
$1DF047069AF03344AD1E8E838FC376B2 FS_NRINODE;
$1DF047069AF03344AD1E8E838FC376B2 FS_NRSUPER;
$1DF047069AF03344AD1E8E838FC376B2 FS_OCFS2;
$1DF047069AF03344AD1E8E838FC376B2 FS_OVERFLOWGID;
$1DF047069AF03344AD1E8E838FC376B2 FS_OVERFLOWUID;
$1DF047069AF03344AD1E8E838FC376B2 FS_STATINODE;
$1DF047069AF03344AD1E8E838FC376B2 FS_XFS;
MACRO_FTS FTS_AGAIN;
MACRO_FTS FTS_COMFOLLOW;
MACRO_FTS FTS_D;
MACRO_FTS FTS_DC;
MACRO_FTS FTS_DEFAULT;
MACRO_FTS FTS_DNR;
MACRO_FTS FTS_DONTCHDIR;
MACRO_FTS FTS_DOT;
MACRO_FTS FTS_DP;
MACRO_FTS FTS_ERR;
MACRO_FTS FTS_F;
MACRO_FTS FTS_FOLLOW;
MACRO_FTS FTS_INIT;
MACRO_FTS FTS_LOGICAL;
MACRO_FTS FTS_NAMEONLY;
MACRO_FTS FTS_NOCHDIR;
MACRO_FTS FTS_NOINSTR;
MACRO_FTS FTS_NOSTAT;
MACRO_FTS FTS_NS;
MACRO_FTS FTS_NSOK;
MACRO_FTS FTS_OPTIONMASK;
MACRO_FTS FTS_PHYSICAL;
MACRO_FTS FTS_ROOTLEVEL;
MACRO_FTS FTS_ROOTPARENTLEVEL;
MACRO_FTS FTS_SEEDOT;
MACRO_FTS FTS_SKIP;
MACRO_FTS FTS_SL;
MACRO_FTS FTS_SLNONE;
MACRO_FTS FTS_STOP;
MACRO_FTS FTS_SYMFOLLOW;
MACRO_FTS FTS_W;
MACRO_FTS FTS_WHITEOUT;
MACRO_FTS FTS_XDEV;
$C8C7928264C653DC751C42DB42AAB11F FTW_D;
$C8C7928264C653DC751C42DB42AAB11F FTW_DNR;
$C8C7928264C653DC751C42DB42AAB11F FTW_F;
$C8C7928264C653DC751C42DB42AAB11F FTW_NS;
$C8C7928264C653DC751C42DB42AAB11F FTW_SL;
MACRO_F_DUPFD F_DUPFD;
MACRO_CLOEXEC F_DUPFD_CLOEXEC;
MACRO_F_RDLCK F_EXLCK;
MACRO_F_DUPFD F_GETFD;
MACRO_F_DUPFD F_GETFL;
MACRO_F F_GETLK;
MACRO_F F_GETLK64;
MACRO_F_SETOWN F_GETOWN;
MACRO_F_ULOCK F_LOCK;
MACRO_OK F_OK;
MACRO_F_RDLCK F_RDLCK;
MACRO_F_DUPFD F_SETFD;
MACRO_F_DUPFD F_SETFL;
MACRO_F F_SETLK;
MACRO_F F_SETLK64;
MACRO_F F_SETLKW;
MACRO_F F_SETLKW64;
MACRO_F_SETOWN F_SETOWN;
MACRO_F_RDLCK F_SHLCK;
MACRO_F_ULOCK F_TEST;
MACRO_F_ULOCK F_TLOCK;
MACRO_F_ULOCK F_ULOCK;
MACRO_F_RDLCK F_UNLCK;
MACRO_F_RDLCK F_WRLCK;
MACRO_GA GA;
accept_stat GARBAGE_ARGS;
MACRO_EXPIRE GARBAGE_TIME;
MACRO_GDBM GDBM_BAD_FILE_OFFSET;
MACRO_GDBM GDBM_BAD_MAGIC_NUMBER;
MACRO_GDBM GDBM_BAD_OPEN_FLAGS;
MACRO_GDBM GDBM_BLOCK_SIZE_ERROR;
MACRO_GDBM GDBM_BYTE_SWAPPED;
MACRO_GDBM GDBM_CACHESIZE;
MACRO_GDBM GDBM_CANNOT_REPLACE;
MACRO_GDBM GDBM_CANT_BE_READER;
MACRO_GDBM GDBM_CANT_BE_WRITER;
MACRO_GDBM GDBM_CENTFREE;
MACRO_GDBM GDBM_CLOEXEC;
MACRO_GDBM GDBM_COALESCEBLKS;
MACRO_GDBM GDBM_DUMP_FMT_ASCII;
MACRO_GDBM GDBM_DUMP_FMT_BINARY;
MACRO_GDBM GDBM_EMPTY_DATABASE;
MACRO_GDBM GDBM_ERR_FILE_MODE;
MACRO_GDBM GDBM_ERR_FILE_OWNER;
MACRO_GDBM GDBM_FAST;
MACRO_GDBM GDBM_FASTMODE;
MACRO_GDBM GDBM_FILE_EOF;
MACRO_GDBM GDBM_FILE_OPEN_ERROR;
MACRO_GDBM GDBM_FILE_READ_ERROR;
MACRO_GDBM GDBM_FILE_SEEK_ERROR;
MACRO_GDBM GDBM_FILE_STAT_ERROR;
MACRO_GDBM GDBM_FILE_WRITE_ERROR;
MACRO_GDBM GDBM_GETCACHESIZE;
MACRO_GDBM GDBM_GETCENTFREE;
MACRO_GDBM GDBM_GETCOALESCEBLKS;
MACRO_GDBM GDBM_GETDBNAME;
MACRO_GDBM GDBM_GETFLAGS;
MACRO_GDBM GDBM_GETMAXMAPSIZE;
MACRO_GDBM GDBM_GETMMAP;
MACRO_GDBM GDBM_GETSYNCMODE;
MACRO_GDBM GDBM_ILLEGAL_DATA;
MACRO_GDBM GDBM_INSERT;
MACRO_GDBM GDBM_ITEM_NOT_FOUND;
MACRO_GDBM GDBM_MALLOC_ERROR;
MACRO_GDBM GDBM_META_MASK_MODE;
MACRO_GDBM GDBM_META_MASK_OWNER;
MACRO_GDBM GDBM_NEWDB;
MACRO_GDBM GDBM_NOLOCK;
MACRO_GDBM GDBM_NOMMAP;
MACRO_GDBM GDBM_NO_DBNAME;
MACRO_GDBM GDBM_NO_ERROR;
MACRO_GDBM GDBM_OPENMASK;
MACRO_GDBM GDBM_OPT_ALREADY_SET;
MACRO_GDBM GDBM_OPT_ILLEGAL;
MACRO_GDBM GDBM_READER;
MACRO_GDBM GDBM_READER_CANT_DELETE;
MACRO_GDBM GDBM_READER_CANT_REORGANIZE;
MACRO_GDBM GDBM_READER_CANT_STORE;
MACRO_GDBM GDBM_REORGANIZE_FAILED;
MACRO_GDBM GDBM_REPLACE;
MACRO_GDBM GDBM_SETCACHESIZE;
MACRO_GDBM GDBM_SETCENTFREE;
MACRO_GDBM GDBM_SETCOALESCEBLKS;
MACRO_GDBM GDBM_SETMAXMAPSIZE;
MACRO_GDBM GDBM_SETMMAP;
MACRO_GDBM GDBM_SETSYNCMODE;
MACRO_GDBM GDBM_SYNC;
MACRO_GDBM GDBM_SYNCMODE;
MACRO_GDBM GDBM_UNKNOWN_UPDATE;
MACRO_GDBM GDBM_VERSION_MAJOR;
MACRO_GDBM GDBM_VERSION_MINOR;
MACRO_GDBM GDBM_VERSION_PATCH;
MACRO_GDBM GDBM_WRCREAT;
MACRO_GDBM GDBM_WRITER;
MACRO_GENERIC GENERIC_HDLC_VERSION;
MACRO_GETALL GETALL;
MACRO_GETNCNT GETNCNT;
MACRO_GETPID GETPID;
MACRO_GETVAL GETVAL;
MACRO_GETZCNT GETZCNT;
MACRO_CMAP GIO_CMAP;
MACRO_FONT GIO_FONT;
MACRO_FONTX GIO_FONTX;
MACRO_SCRNMAP GIO_SCRNMAP;
MACRO_UNIMAP GIO_UNIMAP;
MACRO_UNISCRNMAP GIO_UNISCRNMAP;
MACRO_GLOB_NOSPACE GLOB_ABORTED;
MACRO_GLOB GLOB_ALTDIRFUNC;
MACRO_GLOB GLOB_APPEND;
MACRO_GLOB GLOB_BRACE;
MACRO_GLOB GLOB_DOOFFS;
MACRO_GLOB GLOB_ERR;
MACRO_GLOB GLOB_MAGCHAR;
MACRO_GLOB GLOB_MARK;
MACRO_GLOB GLOB_NOCHECK;
MACRO_GLOB GLOB_NOESCAPE;
MACRO_GLOB GLOB_NOMAGIC;
MACRO_GLOB_NOSPACE GLOB_NOMATCH;
MACRO_GLOB GLOB_NOSORT;
MACRO_GLOB_NOSPACE GLOB_NOSPACE;
MACRO_GLOB_NOSPACE GLOB_NOSYS;
MACRO_GLOB GLOB_ONLYDIR;
MACRO_GLOB GLOB_PERIOD;
MACRO_GLOB GLOB_TILDE;
MACRO_GLOB GLOB_TILDE_CHECK;
MACRO_GMON GMON_PROF_BUSY;
MACRO_GMON GMON_PROF_ERROR;
MACRO_GMON GMON_PROF_OFF;
MACRO_GMON GMON_PROF_ON;
MACRO_GMON_VERSION GMON_SHOBJ_VERSION;
$A98D0825AA235C940E5A466593BCCCF2 GMON_TAG_BB_COUNT;
$A98D0825AA235C940E5A466593BCCCF2 GMON_TAG_CG_ARC;
$A98D0825AA235C940E5A466593BCCCF2 GMON_TAG_TIME_HIST;
MACRO_GMON_VERSION GMON_VERSION;
MACRO_GPROF GPROF_COUNT;
MACRO_GPROF GPROF_FROMS;
MACRO_GPROF GPROF_GMONPARAM;
MACRO_GPROF GPROF_STATE;
MACRO_GPROF GPROF_TOS;
MACRO_USRQUOTA GRPQUOTA;
MACRO_GRP GRP_COMDAT;
MACRO_PATCH GUS_PATCH;
MACRO_HASHFRACTION HASHFRACTION;
MACRO_PROOT HEXKEYBYTES;
MACRO_HFIXEDSZ HFIXEDSZ;
MACRO_HISTFRACTION HISTFRACTION;
MACRO_HOPCNT HOPCNT_INFINITY;
MACRO_DELAYTIMER HOST_NAME_MAX;
MACRO_HOST HOST_NOT_FOUND;
MACRO_HT HT_3BIT_CAP_MASK;
MACRO_HT HT_5BIT_CAP_MASK;
MACRO_HT HT_CAPTYPE_DIRECT_ROUTE;
MACRO_HT HT_CAPTYPE_ERROR_RETRY;
MACRO_HT HT_CAPTYPE_EXTCONF;
MACRO_HT HT_CAPTYPE_GEN3;
MACRO_HT HT_CAPTYPE_HOST;
MACRO_HT HT_CAPTYPE_IRQ;
MACRO_HT HT_CAPTYPE_MSI_MAPPING;
MACRO_HT HT_CAPTYPE_PM;
MACRO_HT HT_CAPTYPE_REMAPPING_40;
MACRO_HT HT_CAPTYPE_REMAPPING_64;
MACRO_HT HT_CAPTYPE_SLAVE;
MACRO_HT HT_CAPTYPE_UNITID_CLUMP;
MACRO_HT HT_CAPTYPE_VCSET;
MACRO_HT HT_CAP_SIZEOF_LONG;
MACRO_HT HT_CAP_SIZEOF_SHORT;
MACRO_HT HT_MSI_ADDR_HI;
MACRO_HT HT_MSI_ADDR_LO;
MACRO_HT HT_MSI_ADDR_LO_MASK;
MACRO_HT HT_MSI_FIXED_ADDR;
MACRO_HT HT_MSI_FLAGS;
MACRO_HT HT_MSI_FLAGS_ENABLE;
MACRO_HT HT_MSI_FLAGS_FIXED;
MACRO_CS8 HUPCL;
MACRO_HZ HZ;
MACRO_IAC IAC;
MACRO_ISIG ICANON;
MACRO_ICMP6 ICMP6_DST_UNREACH;
MACRO_ICMP6_DST ICMP6_DST_UNREACH_ADDR;
MACRO_ICMP6_DST ICMP6_DST_UNREACH_ADMIN;
MACRO_ICMP6_DST ICMP6_DST_UNREACH_BEYONDSCOPE;
MACRO_ICMP6_DST ICMP6_DST_UNREACH_NOPORT;
MACRO_ICMP6_DST ICMP6_DST_UNREACH_NOROUTE;
MACRO_ICMP6 ICMP6_ECHO_REPLY;
MACRO_ICMP6 ICMP6_ECHO_REQUEST;
MACRO_ICMP6 ICMP6_FILTER;
MACRO_ICMP6 ICMP6_FILTER_BLOCK;
MACRO_ICMP6 ICMP6_FILTER_BLOCKOTHERS;
MACRO_ICMP6 ICMP6_FILTER_PASS;
MACRO_ICMP6 ICMP6_FILTER_PASSONLY;
MACRO_ICMP6 ICMP6_INFOMSG_MASK;
MACRO_ICMP6 ICMP6_PACKET_TOO_BIG;
MACRO_ICMP6_DST ICMP6_PARAMPROB_HEADER;
MACRO_ICMP6_DST ICMP6_PARAMPROB_NEXTHEADER;
MACRO_ICMP6_DST ICMP6_PARAMPROB_OPTION;
MACRO_ICMP6 ICMP6_PARAM_PROB;
MACRO_ICMP6_ROUTER ICMP6_ROUTER_RENUMBERING;
MACRO_ICMP6_ROUTER ICMP6_RR_FLAGS_FORCEAPPLY;
MACRO_ICMP6_ROUTER ICMP6_RR_FLAGS_PREVDONE;
MACRO_ICMP6_ROUTER ICMP6_RR_FLAGS_REQRESULT;
MACRO_ICMP6_ROUTER ICMP6_RR_FLAGS_SPECSITE;
MACRO_ICMP6_ROUTER ICMP6_RR_FLAGS_TEST;
MACRO_ICMP6_RR ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME;
MACRO_ICMP6_RR ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME;
MACRO_ICMP6_RR ICMP6_RR_PCOUSE_RAFLAGS_AUTO;
MACRO_ICMP6_RR ICMP6_RR_PCOUSE_RAFLAGS_ONLINK;
MACRO_ICMP6_RR ICMP6_RR_RESULT_FLAGS_FORBIDDEN;
MACRO_ICMP6_RR ICMP6_RR_RESULT_FLAGS_OOB;
MACRO_ICMP6 ICMP6_TIME_EXCEEDED;
MACRO_ICMP6_DST ICMP6_TIME_EXCEED_REASSEMBLY;
MACRO_ICMP6_DST ICMP6_TIME_EXCEED_TRANSIT;
MACRO_ICMP ICMP_ADDRESS;
MACRO_ICMP ICMP_ADDRESSREPLY;
MACRO_ICMP ICMP_DEST_UNREACH;
MACRO_ICMP ICMP_ECHO;
MACRO_ICMP ICMP_ECHOREPLY;
MACRO_ICMP_REDIR ICMP_EXC_FRAGTIME;
MACRO_ICMP_REDIR ICMP_EXC_TTL;
MACRO_ICMP_NET ICMP_FRAG_NEEDED;
MACRO_ICMP_NET ICMP_HOST_ANO;
MACRO_ICMP_NET ICMP_HOST_ISOLATED;
MACRO_ICMP_NET ICMP_HOST_UNKNOWN;
MACRO_ICMP_NET ICMP_HOST_UNREACH;
MACRO_ICMP_NET ICMP_HOST_UNR_TOS;
MACRO_ICMP ICMP_INFO_REPLY;
MACRO_ICMP ICMP_INFO_REQUEST;
MACRO_ICMP_REDIR ICMP_IREQ;
MACRO_ICMP_REDIR ICMP_IREQREPLY;
MACRO_ICMP_REDIR ICMP_MASKLEN;
MACRO_ICMP_REDIR ICMP_MASKREPLY;
MACRO_ICMP_REDIR ICMP_MASKREQ;
MACRO_ICMP_REDIR ICMP_MAXTYPE;
MACRO_ICMP_REDIR ICMP_MINLEN;
MACRO_ICMP_NET ICMP_NET_ANO;
MACRO_ICMP_NET ICMP_NET_UNKNOWN;
MACRO_ICMP_NET ICMP_NET_UNREACH;
MACRO_ICMP_NET ICMP_NET_UNR_TOS;
MACRO_ICMP ICMP_PARAMETERPROB;
MACRO_ICMP_REDIR ICMP_PARAMPROB;
MACRO_ICMP_REDIR ICMP_PARAMPROB_OPTABSENT;
MACRO_ICMP_NET ICMP_PKT_FILTERED;
MACRO_ICMP_NET ICMP_PORT_UNREACH;
MACRO_ICMP_NET ICMP_PREC_CUTOFF;
MACRO_ICMP_NET ICMP_PREC_VIOLATION;
MACRO_ICMP_NET ICMP_PROT_UNREACH;
MACRO_ICMP ICMP_REDIRECT;
MACRO_ICMP_REDIR ICMP_REDIRECT_HOST;
MACRO_ICMP_REDIR ICMP_REDIRECT_NET;
MACRO_ICMP_REDIR ICMP_REDIRECT_TOSHOST;
MACRO_ICMP_REDIR ICMP_REDIRECT_TOSNET;
MACRO_ICMP_REDIR ICMP_REDIR_HOST;
MACRO_ICMP_REDIR ICMP_REDIR_HOSTTOS;
MACRO_ICMP_REDIR ICMP_REDIR_NET;
MACRO_ICMP_REDIR ICMP_REDIR_NETTOS;
MACRO_ICMP_REDIR ICMP_ROUTERADVERT;
MACRO_ICMP_REDIR ICMP_ROUTERSOLICIT;
MACRO_ICMP_REDIR ICMP_SOURCEQUENCH;
MACRO_ICMP ICMP_SOURCE_QUENCH;
MACRO_ICMP_NET ICMP_SR_FAILED;
MACRO_ICMP ICMP_TIMESTAMP;
MACRO_ICMP ICMP_TIMESTAMPREPLY;
MACRO_ICMP ICMP_TIME_EXCEEDED;
MACRO_ICMP_REDIR ICMP_TIMXCEED;
MACRO_ICMP_REDIR ICMP_TIMXCEED_INTRANS;
MACRO_ICMP_REDIR ICMP_TIMXCEED_REASS;
MACRO_ICMP_REDIR ICMP_TSTAMP;
MACRO_ICMP_REDIR ICMP_TSTAMPREPLY;
MACRO_ICMP_REDIR ICMP_UNREACH;
MACRO_ICMP_REDIR ICMP_UNREACH_FILTER_PROHIB;
MACRO_ICMP_REDIR ICMP_UNREACH_HOST;
MACRO_ICMP_REDIR ICMP_UNREACH_HOST_PRECEDENCE;
MACRO_ICMP_REDIR ICMP_UNREACH_HOST_PROHIB;
MACRO_ICMP_REDIR ICMP_UNREACH_HOST_UNKNOWN;
MACRO_ICMP_REDIR ICMP_UNREACH_ISOLATED;
MACRO_ICMP_REDIR ICMP_UNREACH_NEEDFRAG;
MACRO_ICMP_REDIR ICMP_UNREACH_NET;
MACRO_ICMP_REDIR ICMP_UNREACH_NET_PROHIB;
MACRO_ICMP_REDIR ICMP_UNREACH_NET_UNKNOWN;
MACRO_ICMP_REDIR ICMP_UNREACH_PORT;
MACRO_ICMP_REDIR ICMP_UNREACH_PRECEDENCE_CUTOFF;
MACRO_ICMP_REDIR ICMP_UNREACH_PROTOCOL;
MACRO_ICMP_REDIR ICMP_UNREACH_SRCFAIL;
MACRO_ICMP_REDIR ICMP_UNREACH_TOSHOST;
MACRO_ICMP_REDIR ICMP_UNREACH_TOSNET;
MACRO_IGNBRK ICRNL;
MACRO_IEEE754 IEEE754_DOUBLE_BIAS;
MACRO_IEEE754 IEEE754_FLOAT_BIAS;
MACRO_IEXTEN IEXTEN;
MACRO_IFNAMSIZ IFALIASZ;
net_device_flags IFF_ALLMULTI;
net_device_flags IFF_AUTOMEDIA;
net_device_flags IFF_BROADCAST;
net_device_flags IFF_DEBUG;
net_device_flags IFF_DORMANT;
net_device_flags IFF_DYNAMIC;
net_device_flags IFF_ECHO;
net_device_flags IFF_LOOPBACK;
net_device_flags IFF_LOWER_UP;
net_device_flags IFF_MASTER;
net_device_flags IFF_MULTICAST;
net_device_flags IFF_NOARP;
net_device_flags IFF_NOTRAILERS;
net_device_flags IFF_POINTOPOINT;
net_device_flags IFF_PORTSEL;
net_device_flags IFF_PROMISC;
net_device_flags IFF_RUNNING;
net_device_flags IFF_SLAVE;
net_device_flags IFF_UP;
MACRO_IFHWADDRLEN IFHWADDRLEN;
MACRO_IFNAMSIZ IFNAMSIZ;
MACRO_IF IF_GET_IFACE;
MACRO_IF IF_GET_PROTO;
MACRO_IF IF_IFACE_E1;
MACRO_IF IF_IFACE_SYNC_SERIAL;
MACRO_IF IF_IFACE_T1;
MACRO_IF IF_IFACE_V24;
MACRO_IF IF_IFACE_V35;
MACRO_IF IF_IFACE_X21;
MACRO_IF IF_IFACE_X21D;
$5354C40EB6E537E32623CE28BE16F40A IF_LINK_MODE_DEFAULT;
$5354C40EB6E537E32623CE28BE16F40A IF_LINK_MODE_DORMANT;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_DORMANT;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_DOWN;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_LOWERLAYERDOWN;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_NOTPRESENT;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_TESTING;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_UNKNOWN;
$BCBBA9AC94D25DC3586E84CD32717A4D IF_OPER_UP;
MACRO_IF IF_PROTO_CISCO;
MACRO_IF IF_PROTO_FR;
MACRO_IF IF_PROTO_FR_ADD_ETH_PVC;
MACRO_IF IF_PROTO_FR_ADD_PVC;
MACRO_IF IF_PROTO_FR_DEL_ETH_PVC;
MACRO_IF IF_PROTO_FR_DEL_PVC;
MACRO_IF IF_PROTO_FR_ETH_PVC;
MACRO_IF IF_PROTO_FR_PVC;
MACRO_IF IF_PROTO_HDLC;
MACRO_IF IF_PROTO_HDLC_ETH;
MACRO_IF IF_PROTO_PPP;
MACRO_IF IF_PROTO_RAW;
MACRO_IF IF_PROTO_X25;
MACRO_IGMP IGMP_AWAKENING_MEMBER;
MACRO_IGMP IGMP_DELAYING_MEMBER;
MACRO_IGMP IGMP_DVMRP;
MACRO_IGMP IGMP_HOST_LEAVE_MESSAGE;
MACRO_IGMP IGMP_HOST_MEMBERSHIP_QUERY;
MACRO_IGMP IGMP_HOST_MEMBERSHIP_REPORT;
MACRO_IGMP IGMP_HOST_NEW_MEMBERSHIP_REPORT;
MACRO_IGMP IGMP_IDLE_MEMBER;
MACRO_IGMP IGMP_LAZY_MEMBER;
MACRO_IGMP IGMP_MAX_HOST_REPORT_DELAY;
MACRO_IGMP IGMP_MEMBERSHIP_QUERY;
MACRO_IGMP IGMP_MINLEN;
MACRO_IGMP IGMP_MTRACE;
MACRO_IGMP IGMP_MTRACE_RESP;
MACRO_IGMP IGMP_PIM;
MACRO_IGMP IGMP_SLEEPING_MEMBER;
MACRO_IGMP IGMP_TIMER_SCALE;
MACRO_IGMP IGMP_TRACE;
MACRO_IGMP IGMP_V1_MEMBERSHIP_REPORT;
MACRO_IGMP IGMP_V2_LEAVE_GROUP;
MACRO_IGMP IGMP_V2_MEMBERSHIP_REPORT;
MACRO_IGMP IGMP_v1_ROUTER;
MACRO_IGMP IGMP_v2_ROUTER;
MACRO_IGNBRK IGNBRK;
MACRO_IGNBRK IGNCR;
MACRO_IGNBRK IGNPAR;
MACRO_IIF IIF_ALL;
MACRO_IIF IIF_BGRACE;
MACRO_IIF IIF_FLAGS;
MACRO_IIF IIF_IGRACE;
$05E3195081394CB44D0F2D41FD41A42E ILL_BADSTK;
$05E3195081394CB44D0F2D41FD41A42E ILL_COPROC;
$05E3195081394CB44D0F2D41FD41A42E ILL_ILLADR;
$05E3195081394CB44D0F2D41FD41A42E ILL_ILLOPC;
$05E3195081394CB44D0F2D41FD41A42E ILL_ILLOPN;
$05E3195081394CB44D0F2D41FD41A42E ILL_ILLTRP;
$05E3195081394CB44D0F2D41FD41A42E ILL_PRVOPC;
$05E3195081394CB44D0F2D41FD41A42E ILL_PRVREG;
MACRO_IGNBRK IMAXBEL;
MACRO_INT8SZ IN6ADDRSZ;
MACRO_INT8SZ INADDRSZ;
MACRO_INADDR_LOOPBACK INADDR_ALLHOSTS_GROUP;
MACRO_INADDR_LOOPBACK INADDR_ALLRTRS_GROUP;
MACRO_INADDR INADDR_ANY;
MACRO_INADDR INADDR_BROADCAST;
MACRO_INADDR_LOOPBACK INADDR_LOOPBACK;
MACRO_INADDR_LOOPBACK INADDR_MAX_LOCAL_GROUP;
MACRO_INADDR INADDR_NONE;
MACRO_INADDR_LOOPBACK INADDR_UNSPEC_GROUP;
MACRO_INDIR INDIR_MASK;
MACRO_ADDRSTRLEN INET6_ADDRSTRLEN;
MACRO_ADDRSTRLEN INET_ADDRSTRLEN;
MACRO_INFINITY INFINITY;
MACRO_PROCESS INIT_PROCESS;
MACRO_IGNBRK INLCR;
$E0BCD9FA8FAD627D1AF071660FC89943 INOTIFY_MAX_QUEUED_EVENTS;
$E0BCD9FA8FAD627D1AF071660FC89943 INOTIFY_MAX_USER_INSTANCES;
$E0BCD9FA8FAD627D1AF071660FC89943 INOTIFY_MAX_USER_WATCHES;
MACRO_IGNBRK INPCK;
MACRO_INT16SZ INT16SZ;
MACRO_MAX INT16_MAX;
MACRO_MIN INT16_MIN;
MACRO_INT32SZ INT32SZ;
MACRO_MAX INT32_MAX;
MACRO_MIN INT32_MIN;
MACRO_MAX INT64_MAX;
MACRO_MIN INT64_MIN;
MACRO_INT8SZ INT8SZ;
MACRO_MAX INT8_MAX;
MACRO_MIN INT8_MIN;
MACRO_INTMAX INTMAX_MAX;
MACRO_INTMAX INTMAX_MIN;
MACRO_INTPTR INTPTR_MAX;
MACRO_INTPTR INTPTR_MIN;
MACRO_INT_FAST8 INT_FAST16_MAX;
MACRO_INT_FAST8 INT_FAST16_MIN;
MACRO_INT_FAST8 INT_FAST32_MAX;
MACRO_INT_FAST8 INT_FAST32_MIN;
MACRO_INT_FAST8 INT_FAST64_MAX;
MACRO_INT_FAST8 INT_FAST64_MIN;
MACRO_INT_FAST8 INT_FAST8_MAX;
MACRO_INT_FAST8 INT_FAST8_MIN;
MACRO_INT INT_LEAST16_MAX;
MACRO_INT INT_LEAST16_MIN;
MACRO_INT INT_LEAST32_MAX;
MACRO_INT INT_LEAST32_MIN;
MACRO_INT INT_LEAST64_MAX;
MACRO_INT INT_LEAST64_MIN;
MACRO_INT INT_LEAST8_MAX;
MACRO_INT INT_LEAST8_MIN;
MACRO_USHRT INT_MAX;
MACRO_IN_ACCESS IN_ACCESS;
MACRO_IN_ACCESS IN_ALL_EVENTS;
MACRO_IN_ACCESS IN_ATTRIB;
MACRO_IN IN_CLASSA_HOST;
MACRO_IN IN_CLASSA_MAX;
MACRO_IN IN_CLASSA_NET;
MACRO_IN IN_CLASSA_NSHIFT;
MACRO_IN IN_CLASSB_HOST;
MACRO_IN IN_CLASSB_MAX;
MACRO_IN IN_CLASSB_NET;
MACRO_IN IN_CLASSB_NSHIFT;
MACRO_IN IN_CLASSC_HOST;
MACRO_IN IN_CLASSC_NET;
MACRO_IN IN_CLASSC_NSHIFT;
$730D229031040DFC4AD08BF6392E9798 IN_CLOEXEC;
MACRO_IN_ACCESS IN_CLOSE;
MACRO_IN_ACCESS IN_CLOSE_NOWRITE;
MACRO_IN_ACCESS IN_CLOSE_WRITE;
MACRO_IN_ACCESS IN_CREATE;
MACRO_IN_ACCESS IN_DELETE;
MACRO_IN_ACCESS IN_DELETE_SELF;
MACRO_IN_ACCESS IN_DONT_FOLLOW;
MACRO_IN_ACCESS IN_EXCL_UNLINK;
MACRO_IN_ACCESS IN_IGNORED;
MACRO_IN_ACCESS IN_ISDIR;
MACRO_IN_LOOPBACKNET IN_LOOPBACKNET;
MACRO_IN_ACCESS IN_MASK_ADD;
MACRO_IN_ACCESS IN_MODIFY;
MACRO_IN_ACCESS IN_MOVE;
MACRO_IN_ACCESS IN_MOVED_FROM;
MACRO_IN_ACCESS IN_MOVED_TO;
MACRO_IN_ACCESS IN_MOVE_SELF;
$730D229031040DFC4AD08BF6392E9798 IN_NONBLOCK;
MACRO_IN_ACCESS IN_ONESHOT;
MACRO_IN_ACCESS IN_ONLYDIR;
MACRO_IN_ACCESS IN_OPEN;
MACRO_IN_ACCESS IN_Q_OVERFLOW;
MACRO_IN_ACCESS IN_UNMOUNT;
MACRO_IOCSIZE IOCSIZE_MASK;
MACRO_IOCSIZE IOCSIZE_SHIFT;
MACRO_IOC IOC_IN;
MACRO_IOC IOC_INOUT;
MACRO_IOC IOC_OUT;
MACRO_IP_0 IP;
MACRO_IP6F IP6F_MORE_FRAG;
MACRO_IP6F IP6F_OFF_MASK;
MACRO_IP6F IP6F_RESERVED_MASK;
MACRO_IP6OPT IP6OPT_JUMBO;
MACRO_IP6OPT IP6OPT_JUMBO_LEN;
MACRO_IP6OPT IP6OPT_NSAP_ADDR;
MACRO_IP6OPT IP6OPT_PAD1;
MACRO_IP6OPT IP6OPT_PADN;
MACRO_IP6OPT IP6OPT_ROUTER_ALERT;
MACRO_IP6OPT IP6OPT_TUNNEL_LIMIT;
MACRO_IP6OPT IP6OPT_TYPE_DISCARD;
MACRO_IP6OPT IP6OPT_TYPE_FORCEICMP;
MACRO_IP6OPT IP6OPT_TYPE_ICMP;
MACRO_IP6OPT IP6OPT_TYPE_MUTABLE;
MACRO_IP6OPT IP6OPT_TYPE_SKIP;
MACRO_IP6 IP6_ALERT_AN;
MACRO_IP6 IP6_ALERT_MLD;
MACRO_IP6 IP6_ALERT_RSVP;
MACRO_IPC IPC_CREAT;
MACRO_IPC IPC_EXCL;
MACRO_IPC IPC_NOWAIT;
MACRO_IPC IPC_PRIVATE;
MACRO_IPC IPC_RMID;
MACRO_IPC IPC_SET;
MACRO_IPC IPC_STAT;
MACRO_IPDEFTTL IPDEFTTL;
MACRO_IPFRAGTTL IPFRAGTTL;
MACRO_IPOPT IPOPT_CLASS_MASK;
MACRO_IPOPT IPOPT_CONTROL;
MACRO_IPOPT IPOPT_COPY;
MACRO_IPOPT IPOPT_DEBMEAS;
MACRO_IPOPT IPOPT_END;
MACRO_IPOPT IPOPT_EOL;
MACRO_IPOPT IPOPT_LSRR;
MACRO_IPOPT IPOPT_MEASUREMENT;
MACRO_IPOPT IPOPT_MINOFF;
MACRO_IPOPT IPOPT_NOOP;
MACRO_IPOPT IPOPT_NOP;
MACRO_IPOPT IPOPT_NUMBER_MASK;
MACRO_IPOPT IPOPT_OFFSET;
MACRO_IPOPT IPOPT_OLEN;
MACRO_IPOPT IPOPT_OPTVAL;
MACRO_IPOPT IPOPT_RA;
MACRO_IPOPT IPOPT_RESERVED1;
MACRO_IPOPT IPOPT_RESERVED2;
MACRO_IPOPT IPOPT_RR;
MACRO_IPOPT IPOPT_SATID;
MACRO_IPOPT IPOPT_SEC;
MACRO_IPOPT IPOPT_SECURITY;
MACRO_IPOPT_TS IPOPT_SECUR_CONFID;
MACRO_IPOPT_TS IPOPT_SECUR_EFTO;
MACRO_IPOPT_TS IPOPT_SECUR_MMMM;
MACRO_IPOPT_TS IPOPT_SECUR_RESTR;
MACRO_IPOPT_TS IPOPT_SECUR_SECRET;
MACRO_IPOPT_TS IPOPT_SECUR_TOPSECRET;
MACRO_IPOPT_TS IPOPT_SECUR_UNCLASS;
MACRO_IPOPT IPOPT_SID;
MACRO_IPOPT IPOPT_SSRR;
MACRO_IPOPT IPOPT_TIMESTAMP;
MACRO_IPOPT IPOPT_TS;
MACRO_IPOPT_TS IPOPT_TS_PRESPEC;
MACRO_IPOPT_TS IPOPT_TS_TSANDADDR;
MACRO_IPOPT_TS IPOPT_TS_TSONLY;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_BIFFUDP;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_CMDSERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_DAYTIME;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_DISCARD;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_ECHO;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_EFSSERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_EXECSERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_FINGER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_FTP;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_LOGINSERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_MTP;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_NAMESERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_NETSTAT;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_RESERVED;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_RJE;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_ROUTESERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_SMTP;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_SUPDUP;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_SYSTAT;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_TELNET;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_TFTP;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_TIMESERVER;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_TTYLINK;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_USERRESERVED;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_WHOIS;
$5DC38A7C59C0EB4905B0CA747B22AD1B IPPORT_WHOSERVER;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_AH;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_BEETPH;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_COMP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_DCCP;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_DSTOPTS;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_EGP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_ENCAP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_ESP;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_FRAGMENT;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_GRE;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_HOPOPTS;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_ICMP;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_ICMPV6;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_IDP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_IGMP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_IP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_IPIP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_IPV6;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_MAX;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_MH;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_MTP;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_NONE;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_PIM;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_PUP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_RAW;
$4F32633B20D052A718581B0478F5AE19 IPPROTO_ROUTING;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_RSVP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_SCTP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_TCP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_TP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_UDP;
$5B88FF43CF3917E52CA9C384AA321172 IPPROTO_UDPLITE;
MACRO_IPTOS IPTOS_CLASS_CS0;
MACRO_IPTOS IPTOS_CLASS_CS1;
MACRO_IPTOS IPTOS_CLASS_CS2;
MACRO_IPTOS IPTOS_CLASS_CS3;
MACRO_IPTOS IPTOS_CLASS_CS4;
MACRO_IPTOS IPTOS_CLASS_CS5;
MACRO_IPTOS IPTOS_CLASS_CS6;
MACRO_IPTOS IPTOS_CLASS_CS7;
MACRO_IPTOS IPTOS_CLASS_DEFAULT;
MACRO_IPTOS IPTOS_CLASS_MASK;
MACRO_IPTOS IPTOS_DSCP_AF11;
MACRO_IPTOS IPTOS_DSCP_AF12;
MACRO_IPTOS IPTOS_DSCP_AF13;
MACRO_IPTOS IPTOS_DSCP_AF21;
MACRO_IPTOS IPTOS_DSCP_AF22;
MACRO_IPTOS IPTOS_DSCP_AF23;
MACRO_IPTOS IPTOS_DSCP_AF31;
MACRO_IPTOS IPTOS_DSCP_AF32;
MACRO_IPTOS IPTOS_DSCP_AF33;
MACRO_IPTOS IPTOS_DSCP_AF41;
MACRO_IPTOS IPTOS_DSCP_AF42;
MACRO_IPTOS IPTOS_DSCP_AF43;
MACRO_IPTOS IPTOS_DSCP_EF;
MACRO_IPTOS IPTOS_DSCP_MASK;
MACRO_IPTOS IPTOS_ECN_CE;
MACRO_IPTOS IPTOS_ECN_ECT0;
MACRO_IPTOS IPTOS_ECN_ECT1;
MACRO_IPTOS IPTOS_ECN_MASK;
MACRO_IPTOS IPTOS_ECN_NOT_ECT;
MACRO_IPTOS IPTOS_LOWCOST;
MACRO_IPTOS IPTOS_LOWDELAY;
MACRO_IPTOS IPTOS_MINCOST;
MACRO_IPTOS IPTOS_PREC_CRITIC_ECP;
MACRO_IPTOS IPTOS_PREC_FLASH;
MACRO_IPTOS IPTOS_PREC_FLASHOVERRIDE;
MACRO_IPTOS IPTOS_PREC_IMMEDIATE;
MACRO_IPTOS IPTOS_PREC_INTERNETCONTROL;
MACRO_IPTOS IPTOS_PREC_MASK;
MACRO_IPTOS IPTOS_PREC_NETCONTROL;
MACRO_IPTOS IPTOS_PREC_PRIORITY;
MACRO_IPTOS IPTOS_PREC_ROUTINE;
MACRO_IPTOS IPTOS_RELIABILITY;
MACRO_IPTOS IPTOS_THROUGHPUT;
MACRO_IPTOS IPTOS_TOS_MASK;
MACRO_IPTTLDEC IPTTLDEC;
MACRO_IPV6 IPV6_2292DSTOPTS;
MACRO_IPV6 IPV6_2292HOPLIMIT;
MACRO_IPV6 IPV6_2292HOPOPTS;
MACRO_IPV6 IPV6_2292PKTINFO;
MACRO_IPV6 IPV6_2292PKTOPTIONS;
MACRO_IPV6 IPV6_2292RTHDR;
MACRO_IPV6 IPV6_ADDRFORM;
MACRO_IPV6 IPV6_ADD_MEMBERSHIP;
MACRO_IPV6 IPV6_AUTHHDR;
MACRO_IPV6 IPV6_CHECKSUM;
MACRO_IPV6 IPV6_DROP_MEMBERSHIP;
MACRO_IPV6 IPV6_DSTOPTS;
MACRO_IPV6 IPV6_HOPLIMIT;
MACRO_IPV6 IPV6_HOPOPTS;
MACRO_IPV6 IPV6_IPSEC_POLICY;
MACRO_IPV6 IPV6_JOIN_ANYCAST;
MACRO_IPV6 IPV6_JOIN_GROUP;
MACRO_IPV6 IPV6_LEAVE_ANYCAST;
MACRO_IPV6 IPV6_LEAVE_GROUP;
MACRO_IPV6 IPV6_MTU;
MACRO_IPV6 IPV6_MTU_DISCOVER;
MACRO_IPV6 IPV6_MULTICAST_HOPS;
MACRO_IPV6 IPV6_MULTICAST_IF;
MACRO_IPV6 IPV6_MULTICAST_LOOP;
MACRO_IPV6 IPV6_NEXTHOP;
MACRO_IPV6 IPV6_PKTINFO;
MACRO_IPV6 IPV6_PMTUDISC_DO;
MACRO_IPV6 IPV6_PMTUDISC_DONT;
MACRO_IPV6 IPV6_PMTUDISC_INTERFACE;
MACRO_IPV6 IPV6_PMTUDISC_OMIT;
MACRO_IPV6 IPV6_PMTUDISC_PROBE;
MACRO_IPV6 IPV6_PMTUDISC_WANT;
MACRO_IPV6 IPV6_RECVDSTOPTS;
MACRO_IPV6 IPV6_RECVERR;
MACRO_IPV6 IPV6_RECVHOPLIMIT;
MACRO_IPV6 IPV6_RECVHOPOPTS;
MACRO_IPV6 IPV6_RECVPKTINFO;
MACRO_IPV6 IPV6_RECVRTHDR;
MACRO_IPV6 IPV6_RECVTCLASS;
MACRO_IPV6 IPV6_ROUTER_ALERT;
MACRO_IPV6 IPV6_RTHDR;
MACRO_IPV6 IPV6_RTHDRDSTOPTS;
MACRO_IPV6_RTHDR IPV6_RTHDR_LOOSE;
MACRO_IPV6_RTHDR IPV6_RTHDR_STRICT;
MACRO_IPV6_RTHDR IPV6_RTHDR_TYPE_0;
MACRO_IPV6 IPV6_RXDSTOPTS;
MACRO_IPV6 IPV6_RXHOPOPTS;
MACRO_IPV6 IPV6_TCLASS;
MACRO_IPV6 IPV6_UNICAST_HOPS;
MACRO_IPV6 IPV6_V6ONLY;
MACRO_IPV6 IPV6_XFRM_POLICY;
MACRO_IPVERSION IPVERSION;
MACRO_IPX IPX_CRTITF;
MACRO_IPX IPX_DLTITF;
MACRO_IPX IPX_FRAME_8022;
MACRO_IPX IPX_FRAME_8023;
MACRO_IPX IPX_FRAME_ETHERII;
MACRO_IPX IPX_FRAME_NONE;
MACRO_IPX IPX_FRAME_SNAP;
MACRO_IPX IPX_FRAME_TR_8022;
MACRO_IPX IPX_INTERNAL;
MACRO_IPX IPX_MTU;
MACRO_IPX IPX_NODE_LEN;
MACRO_IPX IPX_PRIMARY;
MACRO_IPX IPX_ROUTE_NO_ROUTER;
MACRO_IPX IPX_RT_8022;
MACRO_IPX IPX_RT_BLUEBOOK;
MACRO_IPX IPX_RT_ROUTED;
MACRO_IPX IPX_RT_SNAP;
MACRO_IPX IPX_SPECIAL_NONE;
MACRO_IPX IPX_TYPE;
MACRO_IP IP_ADD_MEMBERSHIP;
MACRO_IP IP_ADD_SOURCE_MEMBERSHIP;
MACRO_IP IP_BLOCK_SOURCE;
MACRO_IP_DEFAULT IP_DEFAULT_MULTICAST_LOOP;
MACRO_IP_DEFAULT IP_DEFAULT_MULTICAST_TTL;
MACRO_IP_RF IP_DF;
MACRO_IP IP_DROP_MEMBERSHIP;
MACRO_IP IP_DROP_SOURCE_MEMBERSHIP;
MACRO_IP_ROUTER IP_FREEBIND;
MACRO_IP IP_HDRINCL;
MACRO_IP_ROUTER IP_IPSEC_POLICY;
MACRO_IP_MAXPACKET IP_MAXPACKET;
MACRO_IP_DEFAULT IP_MAX_MEMBERSHIPS;
MACRO_IP_RF IP_MF;
MACRO_IP_ROUTER IP_MINTTL;
MACRO_IP IP_MSFILTER;
MACRO_IP_MSS IP_MSS;
MACRO_IP_ROUTER IP_MTU;
MACRO_IP_ROUTER IP_MTU_DISCOVER;
MACRO_IP_MULTICAST IP_MULTICAST_ALL;
MACRO_IP IP_MULTICAST_IF;
MACRO_IP IP_MULTICAST_LOOP;
MACRO_IP IP_MULTICAST_TTL;
MACRO_IP_ROUTER IP_NODEFRAG;
MACRO_IP_RF IP_OFFMASK;
MACRO_IP IP_OPTIONS;
MACRO_IP_ROUTER IP_ORIGDSTADDR;
MACRO_IP_ROUTER IP_PASSSEC;
MACRO_IP_ROUTER IP_PKTINFO;
MACRO_IP_ROUTER IP_PKTOPTIONS;
MACRO_IP_ROUTER IP_PMTUDISC;
MACRO_IP_ROUTER IP_PMTUDISC_DO;
MACRO_IP_ROUTER IP_PMTUDISC_DONT;
MACRO_IP_ROUTER IP_PMTUDISC_INTERFACE;
MACRO_IP_ROUTER IP_PMTUDISC_OMIT;
MACRO_IP_ROUTER IP_PMTUDISC_PROBE;
MACRO_IP_ROUTER IP_PMTUDISC_WANT;
MACRO_IP_ROUTER IP_RECVERR;
MACRO_IP IP_RECVOPTS;
MACRO_IP_ROUTER IP_RECVORIGDSTADDR;
MACRO_IP_ROUTER IP_RECVTOS;
MACRO_IP_ROUTER IP_RECVTTL;
MACRO_IP IP_RETOPTS;
MACRO_IP_RF IP_RF;
MACRO_IP_ROUTER IP_ROUTER_ALERT;
MACRO_IP IP_TOS;
MACRO_IP_ROUTER IP_TRANSPARENT;
MACRO_IP IP_TTL;
MACRO_IP IP_UNBLOCK_SOURCE;
MACRO_IP_MULTICAST IP_UNICAST_IF;
MACRO_IP_ROUTER IP_XFRM_POLICY;
MACRO_ISIG ISIG;
MACRO_IGNBRK ISTRIP;
__itimer_which ITIMER_PROF;
__itimer_which ITIMER_REAL;
__itimer_which ITIMER_VIRTUAL;
MACRO_IGNBRK IUCLC;
MACRO_IGNBRK IUTF8;
MACRO_IWEVASSOCREQIE IWEVASSOCREQIE;
MACRO_IWEVASSOCRESPIE IWEVASSOCRESPIE;
MACRO_IWEVCUSTOM IWEVCUSTOM;
MACRO_IWEVEXPIRED IWEVEXPIRED;
MACRO_IWEVFIRST IWEVFIRST;
MACRO_IWEVGENIE IWEVGENIE;
MACRO_IWEVMICHAELMICFAILURE IWEVMICHAELMICFAILURE;
MACRO_IWEVPMKIDCAND IWEVPMKIDCAND;
MACRO_IWEVQUAL IWEVQUAL;
MACRO_IWEVREGISTERED IWEVREGISTERED;
MACRO_IWEVTXDROP IWEVTXDROP;
MACRO_IW IW_AUTH_80211_AUTH_ALG;
MACRO_IW IW_AUTH_ALG_LEAP;
MACRO_IW IW_AUTH_ALG_OPEN_SYSTEM;
MACRO_IW IW_AUTH_ALG_SHARED_KEY;
MACRO_IW IW_AUTH_CIPHER_AES_CMAC;
MACRO_IW IW_AUTH_CIPHER_CCMP;
MACRO_IW IW_AUTH_CIPHER_GROUP;
MACRO_IW IW_AUTH_CIPHER_GROUP_MGMT;
MACRO_IW IW_AUTH_CIPHER_NONE;
MACRO_IW IW_AUTH_CIPHER_PAIRWISE;
MACRO_IW IW_AUTH_CIPHER_TKIP;
MACRO_IW IW_AUTH_CIPHER_WEP104;
MACRO_IW IW_AUTH_CIPHER_WEP40;
MACRO_IW IW_AUTH_DROP_UNENCRYPTED;
MACRO_IW IW_AUTH_FLAGS;
MACRO_IW IW_AUTH_INDEX;
MACRO_IW IW_AUTH_KEY_MGMT;
MACRO_IW IW_AUTH_KEY_MGMT_802_1X;
MACRO_IW IW_AUTH_KEY_MGMT_PSK;
MACRO_IW IW_AUTH_MFP;
MACRO_IW IW_AUTH_MFP_DISABLED;
MACRO_IW IW_AUTH_MFP_OPTIONAL;
MACRO_IW IW_AUTH_MFP_REQUIRED;
MACRO_IW IW_AUTH_PRIVACY_INVOKED;
MACRO_IW IW_AUTH_ROAMING_CONTROL;
MACRO_IW IW_AUTH_ROAMING_DISABLE;
MACRO_IW IW_AUTH_ROAMING_ENABLE;
MACRO_IW IW_AUTH_RX_UNENCRYPTED_EAPOL;
MACRO_IW IW_AUTH_TKIP_COUNTERMEASURES;
MACRO_IW IW_AUTH_WPA_ENABLED;
MACRO_IW IW_AUTH_WPA_VERSION;
MACRO_IW IW_AUTH_WPA_VERSION_DISABLED;
MACRO_IW IW_AUTH_WPA_VERSION_WPA;
MACRO_IW IW_AUTH_WPA_VERSION_WPA2;
MACRO_IW IW_CUSTOM_MAX;
MACRO_IW IW_ENCODE_ALG_AES_CMAC;
MACRO_IW IW_ENCODE_ALG_CCMP;
MACRO_IW IW_ENCODE_ALG_NONE;
MACRO_IW IW_ENCODE_ALG_PMK;
MACRO_IW IW_ENCODE_ALG_TKIP;
MACRO_IW IW_ENCODE_ALG_WEP;
MACRO_IW IW_ENCODE_DISABLED;
MACRO_IW IW_ENCODE_ENABLED;
MACRO_IW IW_ENCODE_EXT_GROUP_KEY;
MACRO_IW IW_ENCODE_EXT_RX_SEQ_VALID;
MACRO_IW IW_ENCODE_EXT_SET_TX_KEY;
MACRO_IW IW_ENCODE_EXT_TX_SEQ_VALID;
MACRO_IW IW_ENCODE_FLAGS;
MACRO_IW IW_ENCODE_INDEX;
MACRO_IW IW_ENCODE_MODE;
MACRO_IW IW_ENCODE_NOKEY;
MACRO_IW IW_ENCODE_OPEN;
MACRO_IW IW_ENCODE_RESTRICTED;
MACRO_IW IW_ENCODE_SEQ_MAX_SIZE;
MACRO_IW IW_ENCODE_TEMP;
MACRO_IW IW_ENCODING_TOKEN_MAX;
MACRO_IW IW_ENC_CAPA_4WAY_HANDSHAKE;
MACRO_IW IW_ENC_CAPA_CIPHER_CCMP;
MACRO_IW IW_ENC_CAPA_CIPHER_TKIP;
MACRO_IW IW_ENC_CAPA_WPA;
MACRO_IW IW_ENC_CAPA_WPA2;
MACRO_IW IW_ESSID_MAX_SIZE;
MACRO_IW IW_EVENT_CAPA_K_0;
MACRO_IW IW_EVENT_CAPA_K_1;
MACRO_IW IW_EV_CHAR_PK_LEN;
MACRO_IW IW_EV_LCP_PK_LEN;
MACRO_IW IW_EV_POINT_PK_LEN;
MACRO_IW IW_FREQ_AUTO;
MACRO_IW IW_FREQ_FIXED;
MACRO_IW IW_GENERIC_IE_MAX;
MACRO_IW IW_MAX_AP;
MACRO_IW IW_MAX_BITRATES;
MACRO_IW IW_MAX_ENCODING_SIZES;
MACRO_IW IW_MAX_FREQUENCIES;
MACRO_IW IW_MAX_SPY;
MACRO_IW IW_MAX_TXPOWER;
MACRO_IW IW_MICFAILURE_COUNT;
MACRO_IW IW_MICFAILURE_GROUP;
MACRO_IW IW_MICFAILURE_KEY_ID;
MACRO_IW IW_MICFAILURE_PAIRWISE;
MACRO_IW IW_MICFAILURE_STAKEY;
MACRO_IW IW_MLME_ASSOC;
MACRO_IW IW_MLME_AUTH;
MACRO_IW IW_MLME_DEAUTH;
MACRO_IW IW_MLME_DISASSOC;
MACRO_IW IW_MODE_ADHOC;
MACRO_IW IW_MODE_AUTO;
MACRO_IW IW_MODE_INFRA;
MACRO_IW IW_MODE_MASTER;
MACRO_IW IW_MODE_MESH;
MACRO_IW IW_MODE_MONITOR;
MACRO_IW IW_MODE_REPEAT;
MACRO_IW IW_MODE_SECOND;
MACRO_IW IW_PMKID_CAND_PREAUTH;
MACRO_IW IW_PMKID_LEN;
MACRO_IW IW_PMKSA_ADD;
MACRO_IW IW_PMKSA_FLUSH;
MACRO_IW IW_PMKSA_REMOVE;
MACRO_IW IW_POWER_ALL_R;
MACRO_IW IW_POWER_FORCE_S;
MACRO_IW IW_POWER_MAX;
MACRO_IW IW_POWER_MIN;
MACRO_IW IW_POWER_MODE;
MACRO_IW IW_POWER_MODIFIER;
MACRO_IW IW_POWER_MULTICAST_R;
MACRO_IW IW_POWER_ON;
MACRO_IW IW_POWER_PERIOD;
MACRO_IW IW_POWER_RELATIVE;
MACRO_IW IW_POWER_REPEATER;
MACRO_IW IW_POWER_TIMEOUT;
MACRO_IW IW_POWER_TYPE;
MACRO_IW IW_POWER_UNICAST_R;
MACRO_IW IW_PRIV_SIZE_FIXED;
MACRO_IW IW_PRIV_SIZE_MASK;
MACRO_IW IW_PRIV_TYPE_ADDR;
MACRO_IW IW_PRIV_TYPE_BYTE;
MACRO_IW IW_PRIV_TYPE_CHAR;
MACRO_IW IW_PRIV_TYPE_FLOAT;
MACRO_IW IW_PRIV_TYPE_INT;
MACRO_IW IW_PRIV_TYPE_MASK;
MACRO_IW IW_PRIV_TYPE_NONE;
MACRO_IW IW_QUAL_ALL_INVALID;
MACRO_IW IW_QUAL_ALL_UPDATED;
MACRO_IW IW_QUAL_DBM;
MACRO_IW IW_QUAL_LEVEL_INVALID;
MACRO_IW IW_QUAL_LEVEL_UPDATED;
MACRO_IW IW_QUAL_NOISE_INVALID;
MACRO_IW IW_QUAL_NOISE_UPDATED;
MACRO_IW IW_QUAL_QUAL_INVALID;
MACRO_IW IW_QUAL_QUAL_UPDATED;
MACRO_IW IW_QUAL_RCPI;
MACRO_IW IW_RETRY_LIFETIME;
MACRO_IW IW_RETRY_LIMIT;
MACRO_IW IW_RETRY_LONG;
MACRO_IW IW_RETRY_MAX;
MACRO_IW IW_RETRY_MIN;
MACRO_IW IW_RETRY_MODIFIER;
MACRO_IW IW_RETRY_ON;
MACRO_IW IW_RETRY_RELATIVE;
MACRO_IW IW_RETRY_SHORT;
MACRO_IW IW_RETRY_TYPE;
MACRO_IW IW_SCAN_ALL_ESSID;
MACRO_IW IW_SCAN_ALL_FREQ;
MACRO_IW IW_SCAN_ALL_MODE;
MACRO_IW IW_SCAN_ALL_RATE;
MACRO_IW IW_SCAN_CAPA_BSSID;
MACRO_IW IW_SCAN_CAPA_CHANNEL;
MACRO_IW IW_SCAN_CAPA_ESSID;
MACRO_IW IW_SCAN_CAPA_MODE;
MACRO_IW IW_SCAN_CAPA_NONE;
MACRO_IW IW_SCAN_CAPA_RATE;
MACRO_IW IW_SCAN_CAPA_TIME;
MACRO_IW IW_SCAN_CAPA_TYPE;
MACRO_IW IW_SCAN_DEFAULT;
MACRO_IW IW_SCAN_MAX_DATA;
MACRO_IW IW_SCAN_THIS_ESSID;
MACRO_IW IW_SCAN_THIS_FREQ;
MACRO_IW IW_SCAN_THIS_MODE;
MACRO_IW IW_SCAN_THIS_RATE;
MACRO_IW IW_SCAN_TYPE_ACTIVE;
MACRO_IW IW_SCAN_TYPE_PASSIVE;
MACRO_IW IW_TXPOW_DBM;
MACRO_IW IW_TXPOW_MWATT;
MACRO_IW IW_TXPOW_RANGE;
MACRO_IW IW_TXPOW_RELATIVE;
MACRO_IW IW_TXPOW_TYPE;
MACRO_IGNBRK IXANY;
MACRO_IGNBRK IXOFF;
MACRO_IGNBRK IXON;
MACRO_I I_ATMARK;
MACRO_I I_CANPUT;
MACRO_I I_CKBAND;
MACRO_I I_FDINSERT;
MACRO_I I_FIND;
MACRO_I I_FLUSH;
MACRO_I I_FLUSHBAND;
MACRO_I I_GETBAND;
MACRO_I I_GETCLTIME;
MACRO_I I_GETSIG;
MACRO_I I_GRDOPT;
MACRO_I I_GWROPT;
MACRO_I I_LINK;
MACRO_I I_LIST;
MACRO_I I_LOOK;
MACRO_I I_NREAD;
MACRO_I I_PEEK;
MACRO_I I_PLINK;
MACRO_I I_POP;
MACRO_I I_PUNLINK;
MACRO_I I_PUSH;
MACRO_I I_RECVFD;
MACRO_I I_SENDFD;
MACRO_I I_SETCLTIME;
MACRO_I I_SETSIG;
MACRO_I I_SRDOPT;
MACRO_I I_STR;
MACRO_I I_SWROPT;
MACRO_I I_UNLINK;
MACRO_KB KB_101;
MACRO_KB KB_84;
MACRO_KB KB_OTHER;
MACRO_KDADDIO KDADDIO;
MACRO_KDDELIO KDDELIO;
MACRO_KDDISABIO KDDISABIO;
MACRO_KDENABIO KDENABIO;
MACRO_KDFONTOP KDFONTOP;
MACRO_KDGETKEYCODE KDGETKEYCODE;
MACRO_KDGETLED KDGETLED;
MACRO_KDGETMODE KDGETMODE;
MACRO_KDGKBDIACR KDGKBDIACR;
MACRO_KDGKBDIACRUC KDGKBDIACRUC;
MACRO_KDGKBENT KDGKBENT;
MACRO_KDGKBLED KDGKBLED;
MACRO_KDGKBMETA KDGKBMETA;
MACRO_KDGKBMODE KDGKBMODE;
MACRO_KDGKBSENT KDGKBSENT;
MACRO_KDGKBTYPE KDGKBTYPE;
MACRO_KDKBDREP KDKBDREP;
MACRO_KDMAPDISP KDMAPDISP;
MACRO_KDMKTONE KDMKTONE;
MACRO_KDSETKEYCODE KDSETKEYCODE;
MACRO_KDSETLED KDSETLED;
MACRO_KDSETMODE KDSETMODE;
MACRO_KDSIGACCEPT KDSIGACCEPT;
MACRO_KDSKBDIACR KDSKBDIACR;
MACRO_KDSKBDIACRUC KDSKBDIACRUC;
MACRO_KDSKBENT KDSKBENT;
MACRO_KDSKBLED KDSKBLED;
MACRO_KDSKBMETA KDSKBMETA;
MACRO_KDSKBMODE KDSKBMODE;
MACRO_KDSKBSENT KDSKBSENT;
MACRO_KDUNMAPDISP KDUNMAPDISP;
MACRO_KD_FONT KD_FONT_FLAG_DONT_RECALC;
MACRO_KD_FONT KD_FONT_OP_COPY;
MACRO_KD_FONT KD_FONT_OP_GET;
MACRO_KD_FONT KD_FONT_OP_SET;
MACRO_KD_FONT KD_FONT_OP_SET_DEFAULT;
MACRO_KD KD_GRAPHICS;
MACRO_KD KD_TEXT;
MACRO_KD KD_TEXT0;
MACRO_KD KD_TEXT1;
$C63F81BF27515BE59861789B83243C14 KERN_ACCT;
$C63F81BF27515BE59861789B83243C14 KERN_ACPI_VIDEO_FLAGS;
$C63F81BF27515BE59861789B83243C14 KERN_BOOTLOADER_TYPE;
$C63F81BF27515BE59861789B83243C14 KERN_CADPID;
$C63F81BF27515BE59861789B83243C14 KERN_COMPAT_LOG;
$C63F81BF27515BE59861789B83243C14 KERN_CORE_PATTERN;
$C63F81BF27515BE59861789B83243C14 KERN_CORE_USES_PID;
$C63F81BF27515BE59861789B83243C14 KERN_CTLALTDEL;
$C63F81BF27515BE59861789B83243C14 KERN_DOMAINNAME;
$C63F81BF27515BE59861789B83243C14 KERN_HOTPLUG;
$C63F81BF27515BE59861789B83243C14 KERN_HPPA_PWRSW;
$C63F81BF27515BE59861789B83243C14 KERN_HPPA_UNALIGNED;
$C63F81BF27515BE59861789B83243C14 KERN_HZ_TIMER;
$C63F81BF27515BE59861789B83243C14 KERN_IA64_UNALIGNED;
$C63F81BF27515BE59861789B83243C14 KERN_IEEE_EMULATION_WARNINGS;
$C63F81BF27515BE59861789B83243C14 KERN_MAX_LOCK_DEPTH;
$C63F81BF27515BE59861789B83243C14 KERN_MAX_THREADS;
$C63F81BF27515BE59861789B83243C14 KERN_MODPROBE;
$C63F81BF27515BE59861789B83243C14 KERN_MSGMAX;
$C63F81BF27515BE59861789B83243C14 KERN_MSGMNB;
$C63F81BF27515BE59861789B83243C14 KERN_MSGMNI;
$C63F81BF27515BE59861789B83243C14 KERN_MSGPOOL;
$C63F81BF27515BE59861789B83243C14 KERN_NAMETRANS;
$C63F81BF27515BE59861789B83243C14 KERN_NGROUPS_MAX;
$C63F81BF27515BE59861789B83243C14 KERN_NMI_WATCHDOG;
$C63F81BF27515BE59861789B83243C14 KERN_NODENAME;
$C63F81BF27515BE59861789B83243C14 KERN_OSRELEASE;
$C63F81BF27515BE59861789B83243C14 KERN_OSREV;
$C63F81BF27515BE59861789B83243C14 KERN_OSTYPE;
$C63F81BF27515BE59861789B83243C14 KERN_OVERFLOWGID;
$C63F81BF27515BE59861789B83243C14 KERN_OVERFLOWUID;
$C63F81BF27515BE59861789B83243C14 KERN_PANIC;
$C63F81BF27515BE59861789B83243C14 KERN_PANIC_ON_NMI;
$C63F81BF27515BE59861789B83243C14 KERN_PANIC_ON_OOPS;
$C63F81BF27515BE59861789B83243C14 KERN_PANIC_ON_WARN;
$C63F81BF27515BE59861789B83243C14 KERN_PIDMAX;
$C63F81BF27515BE59861789B83243C14 KERN_PPC_HTABRECLAIM;
$C63F81BF27515BE59861789B83243C14 KERN_PPC_L2CR;
$C63F81BF27515BE59861789B83243C14 KERN_PPC_POWERSAVE_NAP;
$C63F81BF27515BE59861789B83243C14 KERN_PPC_ZEROPAGED;
$C63F81BF27515BE59861789B83243C14 KERN_PRINTK;
$C63F81BF27515BE59861789B83243C14 KERN_PRINTK_RATELIMIT;
$C63F81BF27515BE59861789B83243C14 KERN_PRINTK_RATELIMIT_BURST;
$C63F81BF27515BE59861789B83243C14 KERN_PROF;
$C63F81BF27515BE59861789B83243C14 KERN_PTY;
$C63F81BF27515BE59861789B83243C14 KERN_RANDOM;
$C63F81BF27515BE59861789B83243C14 KERN_RANDOMIZE;
$C63F81BF27515BE59861789B83243C14 KERN_REALROOTDEV;
$C63F81BF27515BE59861789B83243C14 KERN_RTSIGMAX;
$C63F81BF27515BE59861789B83243C14 KERN_RTSIGNR;
$C63F81BF27515BE59861789B83243C14 KERN_S390_USER_DEBUG_LOGGING;
$C63F81BF27515BE59861789B83243C14 KERN_SECUREMASK;
$C63F81BF27515BE59861789B83243C14 KERN_SEM;
$C63F81BF27515BE59861789B83243C14 KERN_SETUID_DUMPABLE;
$C63F81BF27515BE59861789B83243C14 KERN_SG_BIG_BUFF;
$C63F81BF27515BE59861789B83243C14 KERN_SHMALL;
$C63F81BF27515BE59861789B83243C14 KERN_SHMMAX;
$C63F81BF27515BE59861789B83243C14 KERN_SHMMNI;
$C63F81BF27515BE59861789B83243C14 KERN_SHMPATH;
$C63F81BF27515BE59861789B83243C14 KERN_SPARC_REBOOT;
$C63F81BF27515BE59861789B83243C14 KERN_SPARC_SCONS_PWROFF;
$C63F81BF27515BE59861789B83243C14 KERN_SPARC_STOP_A;
$C63F81BF27515BE59861789B83243C14 KERN_SPIN_RETRY;
$C63F81BF27515BE59861789B83243C14 KERN_SYSRQ;
$C63F81BF27515BE59861789B83243C14 KERN_TAINTED;
$C63F81BF27515BE59861789B83243C14 KERN_UNKNOWN_NMI_PANIC;
$C63F81BF27515BE59861789B83243C14 KERN_VERSION;
MACRO_KEYBYTES KEYBYTES;
MACRO_KEYCHECKSUMSIZE KEYCHECKSUMSIZE;
MACRO_PROOT KEYSIZE;
MACRO_KEY KEY_DECRYPT;
MACRO_KEY KEY_DECRYPT_PK;
MACRO_KEY KEY_ENCRYPT;
MACRO_KEY KEY_ENCRYPT_PK;
MACRO_KEY KEY_GEN;
MACRO_KEY KEY_GETCRED;
MACRO_KEY KEY_GET_CONV;
MACRO_KEY KEY_NET_GET;
MACRO_KEY KEY_NET_PUT;
keystatus KEY_NOSECRET;
MACRO_KEY KEY_PROG;
MACRO_KEY KEY_SET;
keystatus KEY_SUCCESS;
keystatus KEY_SYSTEMERR;
keystatus KEY_UNKNOWN;
MACRO_KEY KEY_VERS;
MACRO_KEY KEY_VERS2;
MACRO_KIOCSOUND KIOCSOUND;
MACRO_K_NORMTAB K_ALTSHIFTTAB;
MACRO_K_NORMTAB K_ALTTAB;
MACRO_K_SCROLLLOCK K_CAPSLOCK;
MACRO_K_METABIT K_ESCPREFIX;
MACRO_K K_MEDIUMRAW;
MACRO_K_METABIT K_METABIT;
MACRO_K_NORMTAB K_NORMTAB;
MACRO_K_SCROLLLOCK K_NUMLOCK;
MACRO_K K_OFF;
MACRO_K K_RAW;
MACRO_K_SCROLLLOCK K_SCROLLLOCK;
MACRO_K_NORMTAB K_SHIFTTAB;
MACRO_K K_UNICODE;
MACRO_K K_XLATE;
MACRO_ANYMARK LASTMARK;
MACRO_LC LC_ADDRESS;
MACRO_LC LC_ADDRESS_MASK;
MACRO_LC LC_ALL;
MACRO_LC LC_ALL_MASK;
MACRO_LC LC_COLLATE;
MACRO_LC LC_COLLATE_MASK;
MACRO_LC LC_CTYPE;
MACRO_LC LC_CTYPE_MASK;
MACRO_LC LC_GLOBAL_LOCALE;
MACRO_LC LC_IDENTIFICATION;
MACRO_LC LC_IDENTIFICATION_MASK;
MACRO_LC LC_MEASUREMENT;
MACRO_LC LC_MEASUREMENT_MASK;
MACRO_LC LC_MESSAGES;
MACRO_LC LC_MESSAGES_MASK;
MACRO_LC LC_MONETARY;
MACRO_LC LC_MONETARY_MASK;
MACRO_LC LC_NAME;
MACRO_LC LC_NAME_MASK;
MACRO_LC LC_NUMERIC;
MACRO_LC LC_NUMERIC_MASK;
MACRO_LC LC_PAPER;
MACRO_LC LC_PAPER_MASK;
MACRO_LC LC_TELEPHONE;
MACRO_LC LC_TELEPHONE_MASK;
MACRO_LC LC_TIME;
MACRO_LC LC_TIME_MASK;
MACRO_LEAVE LEAVE_INVITE;
MACRO_LED LED_CAP;
MACRO_LED LED_NUM;
MACRO_LED LED_SCR;
MACRO_LFLOW LFLOW_OFF;
MACRO_LFLOW LFLOW_ON;
MACRO_LFLOW LFLOW_RESTART_ANY;
MACRO_LFLOW LFLOW_RESTART_XON;
__vlimit_resource LIM_CORE;
__vlimit_resource LIM_CPU;
__vlimit_resource LIM_DATA;
__vlimit_resource LIM_FSIZE;
__vlimit_resource LIM_MAXRSS;
__vlimit_resource LIM_NORAISE;
__vlimit_resource LIM_STACK;
MACRO_COLL LINE_MAX;
MACRO_NGROUPS LINK_MAX;
$387260238D821795496CF8EA8057DA7E LIO_NOP;
$E36C8D2C56B42191E3816E8650763980 LIO_NOWAIT;
$387260238D821795496CF8EA8057DA7E LIO_READ;
$E36C8D2C56B42191E3816E8650763980 LIO_WAIT;
$387260238D821795496CF8EA8057DA7E LIO_WRITE;
MACRO_LITTLE LITTLE_ENDIAN;
MACRO_LITUSE LITUSE_ALPHA_ADDR;
MACRO_LITUSE LITUSE_ALPHA_BASE;
MACRO_LITUSE LITUSE_ALPHA_BYTOFF;
MACRO_LITUSE LITUSE_ALPHA_JSR;
MACRO_LITUSE LITUSE_ALPHA_TLS_GD;
MACRO_LITUSE LITUSE_ALPHA_TLS_LDM;
MACRO_LLC LLC_FRAME;
MACRO_ULONG LLONG_MAX;
MACRO_LLONG LLONG_MIN;
MACRO_LL LL_DELAY_LOAD;
MACRO_LL LL_DELTA;
MACRO_LL LL_EXACT_MATCH;
MACRO_LL LL_EXPORTS;
MACRO_LL LL_IGNORE_INT_VER;
MACRO_LL LL_NONE;
MACRO_LL LL_REQUIRE_MINOR;
MACRO_LMI LMI_ANSI;
MACRO_LMI LMI_CCITT;
MACRO_LMI LMI_CISCO;
MACRO_LMI LMI_DEFAULT;
MACRO_LMI LMI_NONE;
MACRO_LM LM_FORWARDMASK;
MACRO_LM LM_MODE;
MACRO_LM LM_SLC;
MACRO_AREGTYPE LNKTYPE;
MACRO_LOCALDOMAINPARTS LOCALDOMAINPARTS;
MACRO_LOCK LOCK_EX;
MACRO_LOCK LOCK_NB;
MACRO_LOCK LOCK_SH;
MACRO_LOCK LOCK_UN;
MACRO_LOCL LOCL_STARTAUDIO;
MACRO_DELAYTIMER LOGIN_NAME_MAX;
MACRO_PROCESS LOGIN_PROCESS;
MACRO_LOG LOG_ALERT;
MACRO_LOG LOG_AUTH;
MACRO_LOG LOG_AUTHPRIV;
MACRO_LOG LOG_CONS;
MACRO_LOG LOG_CRIT;
MACRO_LOG LOG_CRON;
MACRO_LOG LOG_DAEMON;
MACRO_LOG LOG_DEBUG;
MACRO_LOG LOG_EMERG;
MACRO_LOG LOG_ERR;
MACRO_LOG LOG_FACMASK;
MACRO_LOG LOG_FTP;
MACRO_LOG LOG_INFO;
MACRO_LOG LOG_KERN;
MACRO_LOG LOG_LOCAL0;
MACRO_LOG LOG_LOCAL1;
MACRO_LOG LOG_LOCAL2;
MACRO_LOG LOG_LOCAL3;
MACRO_LOG LOG_LOCAL4;
MACRO_LOG LOG_LOCAL5;
MACRO_LOG LOG_LOCAL6;
MACRO_LOG LOG_LOCAL7;
MACRO_LOG LOG_LPR;
MACRO_LOG LOG_MAIL;
MACRO_LOG LOG_NDELAY;
MACRO_LOG LOG_NEWS;
MACRO_LOG LOG_NFACILITIES;
MACRO_LOG LOG_NOTICE;
MACRO_LOG LOG_NOWAIT;
MACRO_LOG LOG_ODELAY;
MACRO_LOG LOG_PERROR;
MACRO_LOG LOG_PID;
MACRO_LOG LOG_PRIMASK;
MACRO_LOG LOG_SYSLOG;
MACRO_LOG LOG_USER;
MACRO_LOG LOG_UUCP;
MACRO_LOG LOG_WARNING;
MACRO_USHRT LONG_MAX;
MACRO_LONG LONG_MIN;
MACRO_LOOK LOOK_UP;
MACRO_L_SET L_INCR;
MACRO_L_SET L_SET;
MACRO_L_SET L_XTND;
MACRO_L_ctermid L_ctermid;
MACRO_L L_tmpnam;
MACRO_MACHINE MACHINE_UNKNOWN;
MACRO_MADV MADV_DODUMP;
MACRO_MADV MADV_DOFORK;
MACRO_MADV MADV_DONTDUMP;
MACRO_MADV MADV_DONTFORK;
MACRO_MADV MADV_DONTNEED;
MACRO_MADV MADV_HUGEPAGE;
MACRO_MADV MADV_HWPOISON;
MACRO_MADV MADV_MERGEABLE;
MACRO_MADV MADV_NOHUGEPAGE;
MACRO_MADV MADV_NORMAL;
MACRO_MADV MADV_RANDOM;
MACRO_MADV MADV_REMOVE;
MACRO_MADV MADV_SEQUENTIAL;
MACRO_MADV MADV_UNMERGEABLE;
MACRO_MADV MADV_WILLNEED;
MACRO_MAP_SHARED MAP_ANON;
MACRO_MAP_SHARED MAP_ANONYMOUS;
MACRO_MAP MAP_DENYWRITE;
MACRO_MAP MAP_EXECUTABLE;
MACRO_MAP_FAILED MAP_FAILED;
MACRO_MAP_SHARED MAP_FILE;
MACRO_MAP_SHARED MAP_FIXED;
MACRO_MAP MAP_GROWSDOWN;
MACRO_MAP MAP_HUGETLB;
MACRO_MAP_SHARED MAP_HUGE_MASK;
MACRO_MAP_SHARED MAP_HUGE_SHIFT;
MACRO_MAP MAP_LOCKED;
MACRO_MAP MAP_NONBLOCK;
MACRO_MAP MAP_NORESERVE;
MACRO_MAP MAP_POPULATE;
MACRO_MAP_SHARED MAP_PRIVATE;
MACRO_MAP_SHARED MAP_SHARED;
MACRO_MAP MAP_STACK;
MACRO_MAP_SHARED MAP_TYPE;
MACRO_MATH MATH_ERREXCEPT;
MACRO_MATH MATH_ERRNO;
MACRO_SYSEX MAUI_PATCH;
MACRO_MINARCS MAXARCS;
MACRO_MAXCDNAME MAXCDNAME;
MACRO_MAXDFLSRCH MAXDFLSRCH;
MACRO_PACKETSZ MAXDNAME;
MACRO_MAXDNSRCH MAXDNSRCH;
MACRO_MAXGIDS MAXGIDS;
MACRO_MAXHOSTNAMELEN MAXHOSTNAMELEN;
MACRO_MAXLABEL MAXLABEL;
MACRO_MAXNAMLEN MAXNAMLEN;
MACRO_MAXNETNAMELEN MAXNETNAMELEN;
MACRO_MAXNS MAXNS;
MACRO_MAXPACKETSIZE MAXPACKETSIZE;
MACRO_CANBSIZ MAXPATHLEN;
MACRO_MAXQUOTAS MAXQUOTAS;
MACRO_MAXRESOLVSORT MAXRESOLVSORT;
MACRO_MAXSYMLINKS MAXSYMLINKS;
MACRO_MAXTC MAXTC;
MACRO_MAXTTL MAXTTL;
MACRO_MAX_ADDR MAX_ADDR_LEN;
MACRO_MAX_AUTH MAX_AUTH_BYTES;
MACRO_MAX_CANON MAX_CANON;
MACRO_MAX_IQ MAX_DQ_TIME;
MACRO_MAX_CANON MAX_INPUT;
MACRO_MAX_IPOPTLEN MAX_IPOPTLEN;
MACRO_MAX_IQ MAX_IQ_TIME;
MACRO_MAX_LIFE MAX_LIFE;
MACRO_MAX_MACHINE MAX_MACHINE_NAME;
MACRO_MAX_MEM MAX_MEM_LEVEL;
MACRO_MAX_NETOBJ MAX_NETOBJ_SZ;
MACRO_CONSOLES MAX_NR_CONSOLES;
MACRO_CONSOLES MAX_NR_USER_CONSOLES;
MACRO_WAITTIME MAX_WAITTIME;
MACRO_MAX_MEM MAX_WBITS;
MACRO_MB MB_LEN_MAX;
MACRO_MCAST MCAST_BLOCK_SOURCE;
MACRO_MCAST_EXCLUDE MCAST_EXCLUDE;
MACRO_MCAST_EXCLUDE MCAST_INCLUDE;
MACRO_MCAST MCAST_JOIN_GROUP;
MACRO_MCAST MCAST_JOIN_SOURCE_GROUP;
MACRO_MCAST MCAST_LEAVE_GROUP;
MACRO_MCAST MCAST_LEAVE_SOURCE_GROUP;
MACRO_MCAST MCAST_MSFILTER;
MACRO_MCAST MCAST_UNBLOCK_SOURCE;
mcheck_status MCHECK_DISABLED;
mcheck_status MCHECK_FREE;
mcheck_status MCHECK_HEAD;
mcheck_status MCHECK_OK;
mcheck_status MCHECK_TAIL;
MACRO_MCL MCL_CURRENT;
MACRO_MCL MCL_FUTURE;
MACRO_MIDI_CAP MIDI_CAP_MPU401;
MACRO_MIDI_NOTEOFF MIDI_CHN_PRESSURE;
MACRO_MIDI_NOTEOFF MIDI_CTL_CHANGE;
MACRO_MIDI_NOTEOFF MIDI_KEY_PRESSURE;
MACRO_MIDI_NOTEOFF MIDI_NOTEOFF;
MACRO_MIDI_NOTEOFF MIDI_NOTEON;
MACRO_MIDI_NOTEOFF MIDI_PGM_CHANGE;
MACRO_MIDI_NOTEOFF MIDI_PITCH_BEND;
MACRO_MIDI_NOTEOFF MIDI_SYSTEM_PREFIX;
MACRO_MIDI MIDI_TYPE_MPU401;
MACRO_MINARCS MINARCS;
MACRO_MINSIGSTKSZ MINSIGSTKSZ;
MACRO_CONSOLES MIN_NR_CONSOLES;
MACRO_WAITTIME MIN_WAITTIME;
MACRO_MIPS MIPS_AFL_ASE_DSP;
MACRO_MIPS MIPS_AFL_ASE_DSPR2;
MACRO_MIPS MIPS_AFL_ASE_EVA;
MACRO_MIPS MIPS_AFL_ASE_MASK;
MACRO_MIPS MIPS_AFL_ASE_MCU;
MACRO_MIPS MIPS_AFL_ASE_MDMX;
MACRO_MIPS MIPS_AFL_ASE_MICROMIPS;
MACRO_MIPS MIPS_AFL_ASE_MIPS16;
MACRO_MIPS MIPS_AFL_ASE_MIPS3D;
MACRO_MIPS MIPS_AFL_ASE_MSA;
MACRO_MIPS MIPS_AFL_ASE_MT;
MACRO_MIPS MIPS_AFL_ASE_SMARTMIPS;
MACRO_MIPS MIPS_AFL_ASE_VIRT;
MACRO_MIPS MIPS_AFL_ASE_XPA;
MACRO_MIPS MIPS_AFL_EXT_10000;
MACRO_MIPS MIPS_AFL_EXT_3900;
MACRO_MIPS MIPS_AFL_EXT_4010;
MACRO_MIPS MIPS_AFL_EXT_4100;
MACRO_MIPS MIPS_AFL_EXT_4111;
MACRO_MIPS MIPS_AFL_EXT_4120;
MACRO_MIPS MIPS_AFL_EXT_4650;
MACRO_MIPS MIPS_AFL_EXT_5400;
MACRO_MIPS MIPS_AFL_EXT_5500;
MACRO_MIPS MIPS_AFL_EXT_5900;
MACRO_MIPS MIPS_AFL_EXT_LOONGSON_2E;
MACRO_MIPS MIPS_AFL_EXT_LOONGSON_2F;
MACRO_MIPS MIPS_AFL_EXT_LOONGSON_3A;
MACRO_MIPS MIPS_AFL_EXT_OCTEON;
MACRO_MIPS MIPS_AFL_EXT_OCTEON2;
MACRO_MIPS MIPS_AFL_EXT_OCTEONP;
MACRO_MIPS MIPS_AFL_EXT_SB1;
MACRO_MIPS MIPS_AFL_EXT_XLR;
MACRO_MIPS MIPS_AFL_FLAGS1_ODDSPREG;
MACRO_MIPS MIPS_AFL_REG_128;
MACRO_MIPS MIPS_AFL_REG_32;
MACRO_MIPS MIPS_AFL_REG_64;
MACRO_MIPS MIPS_AFL_REG_NONE;
MACRO_MLD MLD_LISTENER_QUERY;
MACRO_MLD MLD_LISTENER_REDUCTION;
MACRO_MLD MLD_LISTENER_REPORT;
$F1F648DD099C1B085CB728875CF977ED MMAP_PAGE_ZERO;
$8823E4385667F399442D029ECC89BADC MM_APPL;
$8823E4385667F399442D029ECC89BADC MM_CONSOLE;
$9CD73F9531C3235FCD002958ECF24B00 MM_ERROR;
$8823E4385667F399442D029ECC89BADC MM_FIRM;
$9CD73F9531C3235FCD002958ECF24B00 MM_HALT;
$8823E4385667F399442D029ECC89BADC MM_HARD;
$9CD73F9531C3235FCD002958ECF24B00 MM_INFO;
$1DEA5F99BA550E134F90C8CF2EF07191 MM_NOCON;
$1DEA5F99BA550E134F90C8CF2EF07191 MM_NOMSG;
$9CD73F9531C3235FCD002958ECF24B00 MM_NOSEV;
$1DEA5F99BA550E134F90C8CF2EF07191 MM_NOTOK;
$8823E4385667F399442D029ECC89BADC MM_NRECOV;
MACRO_MM MM_NULLACT;
MACRO_MM MM_NULLLBL;
MACRO_MM MM_NULLSEV;
MACRO_MM MM_NULLTAG;
MACRO_MM MM_NULLTXT;
$1DEA5F99BA550E134F90C8CF2EF07191 MM_OK;
$8823E4385667F399442D029ECC89BADC MM_OPSYS;
$8823E4385667F399442D029ECC89BADC MM_PRINT;
$8823E4385667F399442D029ECC89BADC MM_RECOVER;
$8823E4385667F399442D029ECC89BADC MM_SOFT;
$8823E4385667F399442D029ECC89BADC MM_UTIL;
$9CD73F9531C3235FCD002958ECF24B00 MM_WARNING;
$7ABD65A78F7D2F9673D05828F7FBDF1E MNT_DETACH;
$7ABD65A78F7D2F9673D05828F7FBDF1E MNT_EXPIRE;
$7ABD65A78F7D2F9673D05828F7FBDF1E MNT_FORCE;
MACRO_MODE_EDIT MODE_ACK;
MACRO_MODE MODE_B;
MACRO_MODE MODE_C;
MACRO_MODE_EDIT MODE_ECHO;
MACRO_MODE_EDIT MODE_EDIT;
MACRO_MODE_EDIT MODE_FLOW;
MACRO_MODE_EDIT MODE_FORCE;
MACRO_MODE_EDIT MODE_INBIN;
MACRO_MODE_EDIT MODE_LIT_ECHO;
MACRO_MODE_EDIT MODE_MASK;
MACRO_MODE_EDIT MODE_OUTBIN;
MACRO_MODE MODE_S;
MACRO_MODE_EDIT MODE_SOFT_TAB;
MACRO_MODE_EDIT MODE_TRAPSIG;
MACRO_MOD MOD_CLKA;
MACRO_MOD MOD_CLKB;
MACRO_MOD MOD_ESTERROR;
MACRO_MOD MOD_FREQUENCY;
MACRO_MOD MOD_MAXERROR;
MACRO_MOD MOD_MICRO;
MACRO_MOD MOD_NANO;
MACRO_MOD MOD_OFFSET;
MACRO_MOD MOD_STATUS;
MACRO_MOD MOD_TAI;
MACRO_MOD MOD_TIMECONST;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_1;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_10;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_11;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_12;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_2;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_3;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_4;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_5;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_6;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_7;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_8;
$2EA190A087F83F88A23D8B31FFFB0F26 MON_9;
MACRO_MORECTL MORECTL;
MACRO_MORECTL MOREDATA;
MACRO_DELAYTIMER MQ_PRIO_MAX;
reply_stat MSG_ACCEPTED;
MACRO_MSG MSG_ANY;
MACRO_MSG MSG_BAND;
$C3545A95CE9507BE79C6B153CD400777 MSG_CMSG_CLOEXEC;
$C3545A95CE9507BE79C6B153CD400777 MSG_CONFIRM;
$C3545A95CE9507BE79C6B153CD400777 MSG_CTRUNC;
reply_stat MSG_DENIED;
$C3545A95CE9507BE79C6B153CD400777 MSG_DONTROUTE;
$C3545A95CE9507BE79C6B153CD400777 MSG_DONTWAIT;
$C3545A95CE9507BE79C6B153CD400777 MSG_EOR;
$C3545A95CE9507BE79C6B153CD400777 MSG_ERRQUEUE;
$C3545A95CE9507BE79C6B153CD400777 MSG_FASTOPEN;
$C3545A95CE9507BE79C6B153CD400777 MSG_FIN;
MACRO_MSG MSG_HIPRI;
MACRO_MSG_NOERROR MSG_INFO;
$C3545A95CE9507BE79C6B153CD400777 MSG_MORE;
MACRO_MSG_NOERROR MSG_NOERROR;
$C3545A95CE9507BE79C6B153CD400777 MSG_NOSIGNAL;
$C3545A95CE9507BE79C6B153CD400777 MSG_OOB;
$C3545A95CE9507BE79C6B153CD400777 MSG_PEEK;
$C3545A95CE9507BE79C6B153CD400777 MSG_PROXY;
$C3545A95CE9507BE79C6B153CD400777 MSG_RST;
MACRO_MSG_NOERROR MSG_STAT;
$C3545A95CE9507BE79C6B153CD400777 MSG_SYN;
$C3545A95CE9507BE79C6B153CD400777 MSG_TRUNC;
$C3545A95CE9507BE79C6B153CD400777 MSG_WAITALL;
$C3545A95CE9507BE79C6B153CD400777 MSG_WAITFORONE;
$830CFE13F870B9281FC8505551EB61DA MS_ACTIVE;
MACRO_MS MS_ASYNC;
$830CFE13F870B9281FC8505551EB61DA MS_BIND;
$830CFE13F870B9281FC8505551EB61DA MS_DIRSYNC;
MACRO_MS MS_INVALIDATE;
$830CFE13F870B9281FC8505551EB61DA MS_I_VERSION;
$830CFE13F870B9281FC8505551EB61DA MS_KERNMOUNT;
$830CFE13F870B9281FC8505551EB61DA MS_MANDLOCK;
MACRO_MS_MGC MS_MGC_MSK;
MACRO_MS_MGC MS_MGC_VAL;
$830CFE13F870B9281FC8505551EB61DA MS_MOVE;
$830CFE13F870B9281FC8505551EB61DA MS_NOATIME;
$830CFE13F870B9281FC8505551EB61DA MS_NODEV;
$830CFE13F870B9281FC8505551EB61DA MS_NODIRATIME;
$830CFE13F870B9281FC8505551EB61DA MS_NOEXEC;
$830CFE13F870B9281FC8505551EB61DA MS_NOSUID;
$830CFE13F870B9281FC8505551EB61DA MS_NOUSER;
$830CFE13F870B9281FC8505551EB61DA MS_POSIXACL;
$830CFE13F870B9281FC8505551EB61DA MS_PRIVATE;
$830CFE13F870B9281FC8505551EB61DA MS_RDONLY;
$830CFE13F870B9281FC8505551EB61DA MS_REC;
$830CFE13F870B9281FC8505551EB61DA MS_RELATIME;
$830CFE13F870B9281FC8505551EB61DA MS_REMOUNT;
$830CFE13F870B9281FC8505551EB61DA MS_SHARED;
$830CFE13F870B9281FC8505551EB61DA MS_SILENT;
$830CFE13F870B9281FC8505551EB61DA MS_SLAVE;
$830CFE13F870B9281FC8505551EB61DA MS_STRICTATIME;
MACRO_MS MS_SYNC;
$830CFE13F870B9281FC8505551EB61DA MS_SYNCHRONOUS;
$830CFE13F870B9281FC8505551EB61DA MS_UNBINDABLE;
MACRO_MTRESET MTBSF;
MACRO_MTBSFM MTBSFM;
MACRO_MTFSR MTBSR;
MACRO_MTBSS MTBSS;
MACRO_MTUNLOAD MTCOMPRESSION;
MACRO_MTEOM MTEOM;
MACRO_MTERASE MTERASE;
MACRO_MTRESET MTFSF;
MACRO_MTFSFM MTFSFM;
MACRO_MTFSR MTFSR;
MACRO_MTFSS MTFSS;
MACRO_MTLOAD MTLOAD;
MACRO_MTLOCK MTLOCK;
MACRO_MTMKPART MTMKPART;
MACRO_MTOFFL MTNOP;
MACRO_MTOFFL MTOFFL;
MACRO_MTRAS1 MTRAS1;
MACRO_MTRAS2 MTRAS2;
MACRO_MTRAS2 MTRAS3;
MACRO_MTRESET MTRESET;
MACRO_MTRETEN MTRETEN;
MACRO_MTREW MTREW;
MACRO_MTSEEK MTSEEK;
MACRO_MTSETBLK MTSETBLK;
MACRO_MTSETDENSITY MTSETDENSITY;
MACRO_MTSETDRVBUFFER MTSETDRVBUFFER;
MACRO_MTSETPART MTSETPART;
MACRO_MTTELL MTTELL;
MACRO_MTUNLOAD MTUNLOAD;
MACRO_MTUNLOCK MTUNLOCK;
MACRO_MTWEOF MTWEOF;
MACRO_MTWSM MTWSM;
MACRO_MT MT_ISARCHIVESC499;
MACRO_MT MT_ISARCHIVE_2060L;
MACRO_MT MT_ISARCHIVE_2150L;
MACRO_MT MT_ISARCHIVE_5945L2;
MACRO_MT MT_ISARCHIVE_VP60I;
MACRO_MT MT_ISCMSJ500;
MACRO_MT MT_ISDDS1;
MACRO_MT MT_ISDDS2;
MACRO_MT MT_ISEVEREX_FT40A;
MACRO_MT MT_ISFTAPE_FLAG;
MACRO_MT MT_ISFTAPE_UNKNOWN;
MACRO_MT MT_ISQIC02;
MACRO_MT MT_ISQIC02_ALL_FEATURES;
MACRO_MT MT_ISSCSI1;
MACRO_MT MT_ISSCSI2;
MACRO_MT MT_ISTDC3610;
MACRO_MT MT_ISTEAC_MT2ST;
MACRO_MT MT_ISUNKNOWN;
MACRO_MT MT_ISWT5099EEN24;
MACRO_MT MT_ISWT5150;
MACRO_MT MT_ST_ASYNC_WRITES;
MACRO_MT MT_ST_AUTO_LOCK;
MACRO_MT MT_ST_BLKSIZE_MASK;
MACRO_MT MT_ST_BLKSIZE_SHIFT;
MACRO_MT MT_ST_BOOLEANS;
MACRO_MT MT_ST_BUFFER_WRITES;
MACRO_MT MT_ST_CAN_BSR;
MACRO_MT MT_ST_CAN_PARTITIONS;
MACRO_MT MT_ST_CLEARBOOLEANS;
MACRO_MT MT_ST_CLEAR_DEFAULT;
MACRO_MT MT_ST_DEBUGGING;
MACRO_MT MT_ST_DEF_BLKSIZE;
MACRO_MT MT_ST_DEF_COMPRESSION;
MACRO_MT MT_ST_DEF_DENSITY;
MACRO_MT MT_ST_DEF_DRVBUFFER;
MACRO_MT MT_ST_DEF_OPTIONS;
MACRO_MT MT_ST_DEF_WRITES;
MACRO_MT MT_ST_DENSITY_MASK;
MACRO_MT MT_ST_DENSITY_SHIFT;
MACRO_MT MT_ST_FAST_MTEOM;
MACRO_MT MT_ST_HPLOADER_OFFSET;
MACRO_MT MT_ST_NO_BLKLIMS;
MACRO_MT MT_ST_OPTIONS;
MACRO_MT MT_ST_READ_AHEAD;
MACRO_MT MT_ST_SCSI2LOGICAL;
MACRO_MT MT_ST_SETBOOLEANS;
MACRO_MT MT_ST_SOFTERR_MASK;
MACRO_MT MT_ST_SOFTERR_SHIFT;
MACRO_MT MT_ST_TWO_FM;
MACRO_MT MT_ST_WRITE_THRESHOLD;
MACRO_M M_ARENA_MAX;
MACRO_M M_ARENA_TEST;
MACRO_M M_CHECK_ACTION;
MACRO_M M_GRAIN;
MACRO_M M_KEEP;
MACRO_M M_MMAP_MAX;
MACRO_M M_MMAP_THRESHOLD;
MACRO_M M_MXFAST;
MACRO_M M_NLBLKS;
MACRO_M M_PERTURB;
MACRO_M M_TOP_PAD;
MACRO_M M_TRIM_THRESHOLD;
MACRO_NAMESERVER NAMESERVER_PORT;
MACRO_TERMIOS NAMESIZE;
MACRO_NAME NAME_MAX;
MACRO_NAME_SIZE NAME_SIZE;
MACRO_NBBY NBBY;
MACRO_MAXSYMLINKS NCARGS;
MACRO_NCC NCC;
MACRO_NCCS NCCS;
MACRO_NCURSES_DLL NCURSES_DLL_H_incl;
MACRO_NCURSES NCURSES_ETI_H_incl;
MACRO_NCURSES_TERMCAP NCURSES_TERMCAP_H_incl;
MACRO_NCURSES_TERM NCURSES_TERM_H_incl;
MACRO_NCURSES_TERM NCURSES_XNAMES;
MACRO_ND ND_NA_FLAG_OVERRIDE;
MACRO_ND ND_NA_FLAG_ROUTER;
MACRO_ND ND_NA_FLAG_SOLICITED;
MACRO_ND ND_NEIGHBOR_ADVERT;
MACRO_ND ND_NEIGHBOR_SOLICIT;
MACRO_ND ND_OPT_HOME_AGENT_INFO;
MACRO_ND ND_OPT_MTU;
MACRO_ND ND_OPT_PI_FLAG_AUTO;
MACRO_ND ND_OPT_PI_FLAG_ONLINK;
MACRO_ND ND_OPT_PI_FLAG_RADDR;
MACRO_ND ND_OPT_PREFIX_INFORMATION;
MACRO_ND ND_OPT_REDIRECTED_HEADER;
MACRO_ND ND_OPT_RTR_ADV_INTERVAL;
MACRO_ND ND_OPT_SOURCE_LINKADDR;
MACRO_ND ND_OPT_TARGET_LINKADDR;
MACRO_ND ND_RA_FLAG_HOME_AGENT;
MACRO_ND ND_RA_FLAG_MANAGED;
MACRO_ND ND_RA_FLAG_OTHER;
MACRO_ND ND_REDIRECT;
MACRO_ND ND_ROUTER_ADVERT;
MACRO_ND ND_ROUTER_SOLICIT;
MACRO_NETDB NETDB_INTERNAL;
MACRO_NETDB NETDB_SUCCESS;
MACRO_NETROM NETROM_IDLE;
MACRO_NETROM NETROM_KILL;
MACRO_NETROM NETROM_N2;
MACRO_NETROM NETROM_NEIGH;
MACRO_NETROM NETROM_NODE;
MACRO_NETROM NETROM_PACLEN;
MACRO_NETROM NETROM_T1;
MACRO_NETROM NETROM_T2;
MACRO_NETROM NETROM_T4;
$94296112375BC73CC9F9E22731646721 NET_802;
$94296112375BC73CC9F9E22731646721 NET_ATALK;
$AE3329FEB427F74B2DA967177CE854FD NET_ATALK_AARP_EXPIRY_TIME;
$AE3329FEB427F74B2DA967177CE854FD NET_ATALK_AARP_RESOLVE_TIME;
$AE3329FEB427F74B2DA967177CE854FD NET_ATALK_AARP_RETRANSMIT_LIMIT;
$AE3329FEB427F74B2DA967177CE854FD NET_ATALK_AARP_TICK_TIME;
$94296112375BC73CC9F9E22731646721 NET_AX25;
$281072E49EAE8AB5625F274A9284616B NET_AX25_BACKOFF_TYPE;
$281072E49EAE8AB5625F274A9284616B NET_AX25_CONNECT_MODE;
$281072E49EAE8AB5625F274A9284616B NET_AX25_DAMA_SLAVE_TIMEOUT;
$281072E49EAE8AB5625F274A9284616B NET_AX25_DEFAULT_MODE;
$281072E49EAE8AB5625F274A9284616B NET_AX25_EXTENDED_WINDOW;
$281072E49EAE8AB5625F274A9284616B NET_AX25_IDLE_TIMEOUT;
$281072E49EAE8AB5625F274A9284616B NET_AX25_IP_DEFAULT_MODE;
$281072E49EAE8AB5625F274A9284616B NET_AX25_N2;
$281072E49EAE8AB5625F274A9284616B NET_AX25_PACLEN;
$281072E49EAE8AB5625F274A9284616B NET_AX25_PROTOCOL;
$281072E49EAE8AB5625F274A9284616B NET_AX25_STANDARD_WINDOW;
$281072E49EAE8AB5625F274A9284616B NET_AX25_T1_TIMEOUT;
$281072E49EAE8AB5625F274A9284616B NET_AX25_T2_TIMEOUT;
$281072E49EAE8AB5625F274A9284616B NET_AX25_T3_TIMEOUT;
$94296112375BC73CC9F9E22731646721 NET_BRIDGE;
$663422C0DB0E896B583B433C91E546EA NET_BRIDGE_NF_CALL_ARPTABLES;
$663422C0DB0E896B583B433C91E546EA NET_BRIDGE_NF_CALL_IP6TABLES;
$663422C0DB0E896B583B433C91E546EA NET_BRIDGE_NF_CALL_IPTABLES;
$663422C0DB0E896B583B433C91E546EA NET_BRIDGE_NF_FILTER_PPPOE_TAGGED;
$663422C0DB0E896B583B433C91E546EA NET_BRIDGE_NF_FILTER_VLAN_TAGGED;
$80863383835932AA27788F4BC43FF174 NET_CIPSOV4_CACHE_BUCKET_SIZE;
$80863383835932AA27788F4BC43FF174 NET_CIPSOV4_CACHE_ENABLE;
$80863383835932AA27788F4BC43FF174 NET_CIPSOV4_RBM_OPTFMT;
$80863383835932AA27788F4BC43FF174 NET_CIPSOV4_RBM_STRICTVALID;
$94296112375BC73CC9F9E22731646721 NET_CORE;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_AEVENT_ETIME;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_AEVENT_RSEQTH;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_BUDGET;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_DEV_WEIGHT;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_DIVERT_VERSION;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_FASTROUTE;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_HOT_LIST_LENGTH;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_LO_CONG;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_MAX_BACKLOG;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_MOD_CONG;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_MSG_BURST;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_MSG_COST;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_NO_CONG;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_NO_CONG_THRESH;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_OPTMEM_MAX;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_RMEM_DEFAULT;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_RMEM_MAX;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_SOMAXCONN;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_WARNINGS;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_WMEM_DEFAULT;
$CF08557F06B5A10A95294072015EB5DD NET_CORE_WMEM_MAX;
$94296112375BC73CC9F9E22731646721 NET_DCCP;
$B1BBC3EB11550C1AA81C57463DE5079D NET_DCCP_DEFAULT;
$94296112375BC73CC9F9E22731646721 NET_DECNET;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_CONF;
$1DAB2066660C93B51247B976141F21A3 NET_DECNET_CONF_DDCMP;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_BLKSIZE;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_FORWARDING;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_PRIORITY;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_STATE;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_T1;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_T2;
$ACFC05DFBD69156C0388855EBEA4D33B NET_DECNET_CONF_DEV_T3;
$1DAB2066660C93B51247B976141F21A3 NET_DECNET_CONF_ETHER;
$1DAB2066660C93B51247B976141F21A3 NET_DECNET_CONF_GRE;
$1DAB2066660C93B51247B976141F21A3 NET_DECNET_CONF_LOOPBACK;
$1DAB2066660C93B51247B976141F21A3 NET_DECNET_CONF_PPP;
$1DAB2066660C93B51247B976141F21A3 NET_DECNET_CONF_X25;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_DEBUG_LEVEL;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_DEFAULT_DEVICE;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_DI_COUNT;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_DN_COUNT;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_DR_COUNT;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_DST_GC_INTERVAL;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_MEM;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_NODE_ADDRESS;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_NODE_NAME;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_NODE_TYPE;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_NO_FC_MAX_CWND;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_RMEM;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_TIME_WAIT;
$8DB803BC5513738C8EA3309052018F73 NET_DECNET_WMEM;
$94296112375BC73CC9F9E22731646721 NET_ECONET;
$94296112375BC73CC9F9E22731646721 NET_ETHER;
$94296112375BC73CC9F9E22731646721 NET_IPV4;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ALWAYS_DEFRAG;
$80863383835932AA27788F4BC43FF174 NET_IPV4_AUTOCONFIG;
$80863383835932AA27788F4BC43FF174 NET_IPV4_CONF;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ACCEPT_REDIRECTS;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ACCEPT_SOURCE_ROUTE;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ARPFILTER;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ARP_ACCEPT;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ARP_ANNOUNCE;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ARP_IGNORE;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_ARP_NOTIFY;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_BOOTP_RELAY;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_FORCE_IGMP_VERSION;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_FORWARDING;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_LOG_MARTIANS;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_MC_FORWARDING;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_MEDIUM_ID;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_NOPOLICY;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_NOXFRM;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_PROMOTE_SECONDARIES;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_PROXY_ARP;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_RP_FILTER;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_SECURE_REDIRECTS;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_SEND_REDIRECTS;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_SHARED_MEDIA;
$02A365252B64D961A2FD63CDBE345E8F NET_IPV4_CONF_TAG;
$80863383835932AA27788F4BC43FF174 NET_IPV4_DEFAULT_TTL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_DYNADDR;
$80863383835932AA27788F4BC43FF174 NET_IPV4_FIB_HASH;
$80863383835932AA27788F4BC43FF174 NET_IPV4_FORWARD;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_DESTUNREACH_RATE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_ECHOREPLY_RATE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_ECHO_IGNORE_ALL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_PARAMPROB_RATE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_RATELIMIT;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_RATEMASK;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_SOURCEQUENCH_RATE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ICMP_TIMEEXCEED_RATE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IGMP_MAX_MEMBERSHIPS;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IGMP_MAX_MSF;
$80863383835932AA27788F4BC43FF174 NET_IPV4_INET_PEER_GC_MAXTIME;
$80863383835932AA27788F4BC43FF174 NET_IPV4_INET_PEER_GC_MINTIME;
$80863383835932AA27788F4BC43FF174 NET_IPV4_INET_PEER_MAXTTL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_INET_PEER_MINTTL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_INET_PEER_THRESHOLD;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IPFRAG_HIGH_THRESH;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IPFRAG_LOW_THRESH;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IPFRAG_MAX_DIST;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IPFRAG_SECRET_INTERVAL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IPFRAG_TIME;
$80863383835932AA27788F4BC43FF174 NET_IPV4_IP_MASQ_DEBUG;
$80863383835932AA27788F4BC43FF174 NET_IPV4_LOCAL_PORT_RANGE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_NEIGH;
$80863383835932AA27788F4BC43FF174 NET_IPV4_NETFILTER;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_BUCKETS;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_CHECKSUM;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_COUNT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_GENERIC_TIMEOUT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_ICMP_TIMEOUT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_LOG_INVALID;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_MAX;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_BE_LIBERAL;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_LOOSE;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_MAX_RETRANS;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_UDP_TIMEOUT;
$5E73109BBAA167E4C78A8EE8CF9AEA71 NET_IPV4_NF_CONNTRACK_UDP_TIMEOUT_STREAM;
$80863383835932AA27788F4BC43FF174 NET_IPV4_NONLOCAL_BIND;
$80863383835932AA27788F4BC43FF174 NET_IPV4_NO_PMTU_DISC;
$80863383835932AA27788F4BC43FF174 NET_IPV4_ROUTE;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_ERROR_BURST;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_ERROR_COST;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_FLUSH;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_GC_ELASTICITY;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_GC_INTERVAL;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_GC_MIN_INTERVAL;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_GC_MIN_INTERVAL_MS;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_GC_THRESH;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_GC_TIMEOUT;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_MAX_DELAY;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_MAX_SIZE;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_MIN_ADVMSS;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_MIN_DELAY;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_MIN_PMTU;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_MTU_EXPIRES;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_REDIRECT_LOAD;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_REDIRECT_NUMBER;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_REDIRECT_SILENCE;
$28CA9876FFADE53F315F57AC53AC1E49 NET_IPV4_ROUTE_SECRET_INTERVAL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_FIN_TIMEOUT;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_KEEPALIVE_INTVL;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_KEEPALIVE_PROBES;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_KEEPALIVE_TIME;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_MAX_KA_PROBES;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_RETRANS_COLLAPSE;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_RETRIES1;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_RETRIES2;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_SACK;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_SYN_RETRIES;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_TIMESTAMPS;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_WINDOW_SCALING;
$80863383835932AA27788F4BC43FF174 NET_IPV4_TCP_WORKAROUND_SIGNED_WINDOWS;
$94296112375BC73CC9F9E22731646721 NET_IPV6;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_RA;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_RA_DEFRTR;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_RA_FROM_LOCAL;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_RA_PINFO;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_RA_RTR_PREF;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_RA_RT_INFO_MAX_PLEN;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_REDIRECTS;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_ACCEPT_SOURCE_ROUTE;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_AUTOCONF;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_BINDV6ONLY;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_CONF;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_DAD_TRANSMITS;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_FORCE_MLD_VERSION;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_FORWARDING;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_HOP_LIMIT;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_ICMP;
$A2F04AFED0D759E95510362442EAC31A NET_IPV6_ICMP_RATELIMIT;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_IP6FRAG_HIGH_THRESH;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_IP6FRAG_LOW_THRESH;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_IP6FRAG_SECRET_INTERVAL;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_IP6FRAG_TIME;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_MAX_ADDRESSES;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_MAX_DESYNC_FACTOR;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_MLD_MAX_MSF;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_MTU;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_NEIGH;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_PROXY_NDP;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_REGEN_MAX_RETRY;
$9C31C63761D5D352F3EF8F6380D9A3A0 NET_IPV6_ROUTE;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_FLUSH;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_GC_ELASTICITY;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_GC_INTERVAL;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_GC_MIN_INTERVAL;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_GC_MIN_INTERVAL_MS;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_GC_THRESH;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_GC_TIMEOUT;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_MAX_SIZE;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_MIN_ADVMSS;
$292475A2E0A8DABD769C5D6A9D9CC8D5 NET_IPV6_ROUTE_MTU_EXPIRES;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_RTR_PROBE_INTERVAL;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_RTR_SOLICITS;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_RTR_SOLICIT_DELAY;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_RTR_SOLICIT_INTERVAL;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_TEMP_PREFERED_LFT;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_TEMP_VALID_LFT;
$D53D1E8297F8C721782D459039395DFD NET_IPV6_USE_TEMPADDR;
$94296112375BC73CC9F9E22731646721 NET_IPX;
$0820D168B3B596C7A12A3578F6930236 NET_IPX_FORWARDING;
$0820D168B3B596C7A12A3578F6930236 NET_IPX_PPROP_BROADCASTING;
$94296112375BC73CC9F9E22731646721 NET_IRDA;
$806899048DC823723887265795521570 NET_IRDA_DEBUG;
$806899048DC823723887265795521570 NET_IRDA_DEVNAME;
$806899048DC823723887265795521570 NET_IRDA_DISCOVERY;
$806899048DC823723887265795521570 NET_IRDA_DISCOVERY_SLOTS;
$806899048DC823723887265795521570 NET_IRDA_DISCOVERY_TIMEOUT;
$806899048DC823723887265795521570 NET_IRDA_FAST_POLL;
$806899048DC823723887265795521570 NET_IRDA_LAP_KEEPALIVE_TIME;
$806899048DC823723887265795521570 NET_IRDA_MAX_BAUD_RATE;
$806899048DC823723887265795521570 NET_IRDA_MAX_NOREPLY_TIME;
$806899048DC823723887265795521570 NET_IRDA_MAX_TX_DATA_SIZE;
$806899048DC823723887265795521570 NET_IRDA_MAX_TX_WINDOW;
$806899048DC823723887265795521570 NET_IRDA_MIN_TX_TURN_TIME;
$806899048DC823723887265795521570 NET_IRDA_SLOT_TIMEOUT;
$806899048DC823723887265795521570 NET_IRDA_WARN_NOREPLY_TIME;
$94296112375BC73CC9F9E22731646721 NET_LLC;
$7E6CC9AB302A52DC230FBF2181C351A3 NET_LLC2;
$C41CDAA8564673A221AD080C882502C2 NET_LLC2_ACK_TIMEOUT;
$C41CDAA8564673A221AD080C882502C2 NET_LLC2_BUSY_TIMEOUT;
$C41CDAA8564673A221AD080C882502C2 NET_LLC2_P_TIMEOUT;
$C41CDAA8564673A221AD080C882502C2 NET_LLC2_REJ_TIMEOUT;
$05A50ECB05B65953CE4DB9E3BEF9FCBB NET_LLC2_TIMEOUT;
$7E6CC9AB302A52DC230FBF2181C351A3 NET_LLC_STATION;
$7B4937F8288E0A2632DB0D8517829904 NET_LLC_STATION_ACK_TIMEOUT;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_ANYCAST_DELAY;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_APP_SOLICIT;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_DELAY_PROBE_TIME;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_GC_INTERVAL;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_GC_STALE_TIME;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_GC_THRESH1;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_GC_THRESH2;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_GC_THRESH3;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_LOCKTIME;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_MCAST_SOLICIT;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_PROXY_DELAY;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_PROXY_QLEN;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_REACHABLE_TIME;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_REACHABLE_TIME_MS;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_RETRANS_TIME;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_RETRANS_TIME_MS;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_UCAST_SOLICIT;
$8DD5D767F670E8258E61E02344E157E6 NET_NEIGH_UNRES_QLEN;
$94296112375BC73CC9F9E22731646721 NET_NETFILTER;
$94296112375BC73CC9F9E22731646721 NET_NETROM;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_DEFAULT_PATH_QUALITY;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_LINK_FAILS_COUNT;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_NETWORK_TTL_INITIALISER;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_OBSOLESCENCE_COUNT_INITIALISER;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_RESET;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_ROUTING_CONTROL;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_TRANSPORT_BUSY_DELAY;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_TRANSPORT_MAXIMUM_TRIES;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE;
$38ABBF04E8C64EAD46767C993E61F2A9 NET_NETROM_TRANSPORT_TIMEOUT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_BUCKETS;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_CHECKSUM;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_COUNT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_FRAG6_HIGH_THRESH;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_FRAG6_LOW_THRESH;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_FRAG6_TIMEOUT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_GENERIC_TIMEOUT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_ICMPV6_TIMEOUT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_ICMP_TIMEOUT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_LOG_INVALID;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_MAX;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_BE_LIBERAL;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_LOOSE;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_MAX_RETRANS;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_UDP_TIMEOUT;
$37DCB93EF8D95414A7671406898CD704 NET_NF_CONNTRACK_UDP_TIMEOUT_STREAM;
$BCDA133813398945F6840621756ADB21 NET_PROTO_CONF_ALL;
$BCDA133813398945F6840621756ADB21 NET_PROTO_CONF_DEFAULT;
$94296112375BC73CC9F9E22731646721 NET_ROSE;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_ACK_HOLD_BACK_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_CALL_REQUEST_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_CLEAR_REQUEST_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_LINK_FAIL_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_MAX_VCS;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_NO_ACTIVITY_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_RESET_REQUEST_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_RESTART_REQUEST_TIMEOUT;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_ROUTING_CONTROL;
$77AA6B3C94CF91510975FAEAA78CF27F NET_ROSE_WINDOW_SIZE;
$94296112375BC73CC9F9E22731646721 NET_SCTP;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_ADDIP_ENABLE;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_ASSOCIATION_MAX_RETRANS;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_HB_INTERVAL;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_MAX_BURST;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_MAX_INIT_RETRANSMITS;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_PATH_MAX_RETRANS;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_PRESERVE_ENABLE;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_PRSCTP_ENABLE;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_RCVBUF_POLICY;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_RTO_ALPHA;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_RTO_BETA;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_RTO_INITIAL;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_RTO_MAX;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_RTO_MIN;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_SACK_TIMEOUT;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_SNDBUF_POLICY;
$3167F93E33C5EBD9DFF0553630CBED55 NET_SCTP_VALID_COOKIE_LIFE;
$80863383835932AA27788F4BC43FF174 NET_TCP_ABC;
$80863383835932AA27788F4BC43FF174 NET_TCP_ABORT_ON_OVERFLOW;
$80863383835932AA27788F4BC43FF174 NET_TCP_ADV_WIN_SCALE;
$80863383835932AA27788F4BC43FF174 NET_TCP_ALLOWED_CONG_CONTROL;
$80863383835932AA27788F4BC43FF174 NET_TCP_APP_WIN;
$80863383835932AA27788F4BC43FF174 NET_TCP_AVAIL_CONG_CONTROL;
$80863383835932AA27788F4BC43FF174 NET_TCP_BASE_MSS;
$80863383835932AA27788F4BC43FF174 NET_TCP_BIC_BETA;
$80863383835932AA27788F4BC43FF174 NET_TCP_CONG_CONTROL;
$80863383835932AA27788F4BC43FF174 NET_TCP_DEFAULT_WIN_SCALE;
$80863383835932AA27788F4BC43FF174 NET_TCP_DMA_COPYBREAK;
$80863383835932AA27788F4BC43FF174 NET_TCP_DSACK;
$80863383835932AA27788F4BC43FF174 NET_TCP_ECN;
$80863383835932AA27788F4BC43FF174 NET_TCP_FACK;
$80863383835932AA27788F4BC43FF174 NET_TCP_FRTO;
$80863383835932AA27788F4BC43FF174 NET_TCP_FRTO_RESPONSE;
$80863383835932AA27788F4BC43FF174 NET_TCP_LOW_LATENCY;
$80863383835932AA27788F4BC43FF174 NET_TCP_MAX_ORPHANS;
$80863383835932AA27788F4BC43FF174 NET_TCP_MAX_SSTHRESH;
$80863383835932AA27788F4BC43FF174 NET_TCP_MAX_SYN_BACKLOG;
$80863383835932AA27788F4BC43FF174 NET_TCP_MAX_TW_BUCKETS;
$80863383835932AA27788F4BC43FF174 NET_TCP_MEM;
$80863383835932AA27788F4BC43FF174 NET_TCP_MODERATE_RCVBUF;
$80863383835932AA27788F4BC43FF174 NET_TCP_MTU_PROBING;
$80863383835932AA27788F4BC43FF174 NET_TCP_NO_METRICS_SAVE;
$80863383835932AA27788F4BC43FF174 NET_TCP_ORPHAN_RETRIES;
$80863383835932AA27788F4BC43FF174 NET_TCP_REORDERING;
$80863383835932AA27788F4BC43FF174 NET_TCP_RFC1337;
$80863383835932AA27788F4BC43FF174 NET_TCP_RMEM;
$80863383835932AA27788F4BC43FF174 NET_TCP_SLOW_START_AFTER_IDLE;
$80863383835932AA27788F4BC43FF174 NET_TCP_STDURG;
$80863383835932AA27788F4BC43FF174 NET_TCP_SYNACK_RETRIES;
$80863383835932AA27788F4BC43FF174 NET_TCP_SYNCOOKIES;
$80863383835932AA27788F4BC43FF174 NET_TCP_SYN_TAILDROP;
$80863383835932AA27788F4BC43FF174 NET_TCP_TSO_WIN_DIVISOR;
$80863383835932AA27788F4BC43FF174 NET_TCP_TW_RECYCLE;
$80863383835932AA27788F4BC43FF174 NET_TCP_TW_REUSE;
$80863383835932AA27788F4BC43FF174 NET_TCP_WMEM;
$94296112375BC73CC9F9E22731646721 NET_TR;
$6DE0D61D61F97D6E17ED7D70441829F1 NET_TR_RIF_TIMEOUT;
$94296112375BC73CC9F9E22731646721 NET_UNIX;
$5A0D34CF8B2C4ADAC358A58CA181ACC9 NET_UNIX_DELETE_DELAY;
$5A0D34CF8B2C4ADAC358A58CA181ACC9 NET_UNIX_DESTROY_DELAY;
$5A0D34CF8B2C4ADAC358A58CA181ACC9 NET_UNIX_MAX_DGRAM_QLEN;
$94296112375BC73CC9F9E22731646721 NET_X25;
$11FBD184975FE0D255859931E1E2B0D1 NET_X25_ACK_HOLD_BACK_TIMEOUT;
$11FBD184975FE0D255859931E1E2B0D1 NET_X25_CALL_REQUEST_TIMEOUT;
$11FBD184975FE0D255859931E1E2B0D1 NET_X25_CLEAR_REQUEST_TIMEOUT;
$11FBD184975FE0D255859931E1E2B0D1 NET_X25_FORWARD;
$11FBD184975FE0D255859931E1E2B0D1 NET_X25_RESET_REQUEST_TIMEOUT;
$11FBD184975FE0D255859931E1E2B0D1 NET_X25_RESTART_REQUEST_TIMEOUT;
MACRO_NEW NEW_ENV_VALUE;
MACRO_NEW NEW_ENV_VAR;
MACRO_TIME NEW_TIME;
nfs_ftype NFBAD;
nfs_ftype NFBLK;
nfs_ftype NFCHR;
nfs_ftype NFDIR;
nfs_ftype NFFIFO;
nfs_ftype NFLNK;
nfs_ftype NFNON;
nfs_ftype NFREG;
nfs_stat NFSERR_ACCES;
nfs_stat NFSERR_ADMIN_REVOKED;
nfs_stat NFSERR_ATTRNOTSUPP;
nfs_stat NFSERR_BADCHAR;
nfs_stat NFSERR_BADHANDLE;
nfs_stat NFSERR_BADNAME;
nfs_stat NFSERR_BADOWNER;
nfs_stat NFSERR_BADTYPE;
nfs_stat NFSERR_BAD_COOKIE;
nfs_stat NFSERR_BAD_RANGE;
nfs_stat NFSERR_BAD_SEQID;
nfs_stat NFSERR_BAD_STATEID;
nfs_stat NFSERR_BAD_XDR;
nfs_stat NFSERR_CB_PATH_DOWN;
nfs_stat NFSERR_CLID_INUSE;
nfs_stat NFSERR_DEADLOCK;
nfs_stat NFSERR_DENIED;
nfs_stat NFSERR_DQUOT;
nfs_stat NFSERR_EAGAIN;
nfs_stat NFSERR_EXIST;
nfs_stat NFSERR_EXPIRED;
nfs_stat NFSERR_FBIG;
nfs_stat NFSERR_FHEXPIRED;
nfs_stat NFSERR_FILE_OPEN;
nfs_stat NFSERR_GRACE;
nfs_stat NFSERR_INVAL;
nfs_stat NFSERR_IO;
nfs_stat NFSERR_ISDIR;
nfs_stat NFSERR_JUKEBOX;
nfs_stat NFSERR_LEASE_MOVED;
nfs_stat NFSERR_LOCKED;
nfs_stat NFSERR_LOCKS_HELD;
nfs_stat NFSERR_LOCK_NOTSUPP;
nfs_stat NFSERR_LOCK_RANGE;
nfs_stat NFSERR_MINOR_VERS_MISMATCH;
nfs_stat NFSERR_MLINK;
nfs_stat NFSERR_MOVED;
nfs_stat NFSERR_NAMETOOLONG;
nfs_stat NFSERR_NODEV;
nfs_stat NFSERR_NOENT;
nfs_stat NFSERR_NOFILEHANDLE;
nfs_stat NFSERR_NOSPC;
nfs_stat NFSERR_NOTDIR;
nfs_stat NFSERR_NOTEMPTY;
nfs_stat NFSERR_NOTSUPP;
nfs_stat NFSERR_NOT_SAME;
nfs_stat NFSERR_NOT_SYNC;
nfs_stat NFSERR_NO_GRACE;
nfs_stat NFSERR_NXIO;
nfs_stat NFSERR_OLD_STATEID;
nfs_stat NFSERR_OPENMODE;
nfs_stat NFSERR_OPNOTSUPP;
nfs_stat NFSERR_OP_ILLEGAL;
nfs_stat NFSERR_PERM;
nfs_stat NFSERR_RECLAIM_BAD;
nfs_stat NFSERR_RECLAIM_CONFLICT;
nfs_stat NFSERR_REMOTE;
nfs_stat NFSERR_RESOURCE;
nfs_stat NFSERR_RESTOREFH;
nfs_stat NFSERR_ROFS;
nfs_stat NFSERR_SAME;
nfs_stat NFSERR_SERVERFAULT;
nfs_stat NFSERR_SHARE_DENIED;
nfs_stat NFSERR_STALE;
nfs_stat NFSERR_STALE_CLIENTID;
nfs_stat NFSERR_STALE_STATEID;
nfs_stat NFSERR_SYMLINK;
nfs_stat NFSERR_TOOSMALL;
nfs_stat NFSERR_WFLUSH;
nfs_stat NFSERR_WRONGSEC;
nfs_stat NFSERR_XDEV;
MACRO_NFSMODE NFSMODE_BLK;
MACRO_NFSMODE NFSMODE_CHR;
MACRO_NFSMODE NFSMODE_DIR;
MACRO_NFSMODE NFSMODE_FIFO;
MACRO_NFSMODE NFSMODE_FMT;
MACRO_NFSMODE NFSMODE_LNK;
MACRO_NFSMODE NFSMODE_REG;
MACRO_NFSMODE NFSMODE_SOCK;
nfs_ftype NFSOCK;
MACRO_NFS NFS_COOKIESIZE;
MACRO_NFS NFS_FHSIZE;
MACRO_NFS NFS_FIFO_DEV;
MACRO_NFS NFS_MAXDATA;
MACRO_NFS NFS_MAXGROUPS;
MACRO_NFS NFS_MAXNAMLEN;
MACRO_NFS NFS_MAXPATHLEN;
MACRO_NFS_MNT NFS_MNT3_VERSION;
MACRO_NFS_MNT NFS_MNT_PROGRAM;
MACRO_NFS_MNT NFS_MNT_VERSION;
nfs_stat NFS_OK;
MACRO_NFS NFS_PORT;
MACRO_NFS NFS_PROGRAM;
MACRO_NGREG NGREG;
MACRO_NBBY NGROUPS;
MACRO_NGROUPS NGROUPS_MAX;
MACRO_NGRPS NGRPS;
MACRO_NI NI_DGRAM;
MACRO_NI NI_MAXHOST;
MACRO_NI NI_MAXSERV;
MACRO_NI NI_NAMEREQD;
MACRO_NI NI_NOFQDN;
MACRO_NI NI_NUMERICHOST;
MACRO_NI NI_NUMERICSERV;
MACRO_NL0 NL0;
MACRO_NL0 NL1;
MACRO_NL0 NL2;
MACRO_NL3 NL3;
MACRO_OPOST NLDLY;
MACRO_NL NL_CAT_LOCALE;
MACRO_NL NL_SETD;
MACRO_NODEV NODEV;
MACRO_MAXSYMLINKS NOFILE;
MACRO_ECHOE NOFLSH;
MACRO_NOGROUP NOGROUP;
MACRO_NOP NOP;
$E1B461D6ADC649FA7943809455C6C6EE NOTIFY_AUTOBPT;
$E1B461D6ADC649FA7943809455C6C6EE NOTIFY_BPT;
$E1B461D6ADC649FA7943809455C6C6EE NOTIFY_SYSCALL;
MACRO_NOT NOT_HERE;
MACRO_NO_ADDRESS NO_ADDRESS;
MACRO_NO NO_DATA;
MACRO_NO NO_RECOVERY;
NPmode NPMODE_DROP;
NPmode NPMODE_ERROR;
NPmode NPMODE_PASS;
NPmode NPMODE_QUEUE;
MACRO_NR_DQHASH NR_DQHASH;
MACRO_NR_DQHASH NR_DQUOTS;
MACRO_NR_ICMP NR_ICMP_TYPES;
MACRO_NR_ICMP_UNREACH NR_ICMP_UNREACH;
MACRO_NR NR_OPEN;
MACRO_NSIG NSIG;
MACRO_NSLC NSLC;
MACRO_NSS NSS_BUFLEN_GROUP;
MACRO_NSS_BUFLEN NSS_BUFLEN_PASSWD;
nss_status NSS_STATUS_NOTFOUND;
nss_status NSS_STATUS_RETURN;
nss_status NSS_STATUS_SUCCESS;
nss_status NSS_STATUS_TRYAGAIN;
nss_status NSS_STATUS_UNAVAIL;
MACRO_NS NS_ALG_DH;
MACRO_NS NS_ALG_DSA;
MACRO_NS NS_ALG_DSS;
MACRO_NS NS_ALG_EXPIRE_ONLY;
MACRO_NS NS_ALG_MD5RSA;
MACRO_NS NS_ALG_PRIVATE_OID;
MACRO_NS NS_CMPRSFLGS;
MACRO_NS NS_DEFAULTPORT;
MACRO_NS NS_DSA_MAX_BYTES;
MACRO_NS NS_DSA_MIN_SIZE;
MACRO_NS NS_DSA_SIG_SIZE;
MACRO_NS NS_HFIXEDSZ;
MACRO_NS NS_IN6ADDRSZ;
MACRO_NS NS_INADDRSZ;
MACRO_NS NS_INT16SZ;
MACRO_NS NS_INT32SZ;
MACRO_NS NS_INT8SZ;
MACRO_NS NS_KEY_EXTENDED_FLAGS;
MACRO_NS NS_KEY_NAME_ENTITY;
MACRO_NS NS_KEY_NAME_RESERVED;
MACRO_NS NS_KEY_NAME_TYPE;
MACRO_NS NS_KEY_NAME_USER;
MACRO_NS NS_KEY_NAME_ZONE;
MACRO_NS NS_KEY_NO_AUTH;
MACRO_NS NS_KEY_NO_CONF;
MACRO_NS NS_KEY_PROT_ANY;
MACRO_NS NS_KEY_PROT_DNSSEC;
MACRO_NS NS_KEY_PROT_EMAIL;
MACRO_NS NS_KEY_PROT_IPSEC;
MACRO_NS NS_KEY_PROT_TLS;
MACRO_NS NS_KEY_RESERVED10;
MACRO_NS NS_KEY_RESERVED11;
MACRO_NS NS_KEY_RESERVED2;
MACRO_NS NS_KEY_RESERVED4;
MACRO_NS NS_KEY_RESERVED5;
MACRO_NS NS_KEY_RESERVED8;
MACRO_NS NS_KEY_RESERVED9;
MACRO_NS NS_KEY_RESERVED_BITMASK;
MACRO_NS NS_KEY_RESERVED_BITMASK2;
MACRO_NS NS_KEY_SIGNATORYMASK;
MACRO_NS NS_KEY_TYPEMASK;
MACRO_NS NS_KEY_TYPE_AUTH_CONF;
MACRO_NS NS_KEY_TYPE_AUTH_ONLY;
MACRO_NS NS_KEY_TYPE_CONF_ONLY;
MACRO_NS NS_KEY_TYPE_NO_KEY;
MACRO_NS NS_MAXCDNAME;
MACRO_NS NS_MAXDNAME;
MACRO_NS NS_MAXLABEL;
MACRO_NS NS_MAXMSG;
MACRO_NS NS_MD5RSA_MAX_BASE64;
MACRO_NS NS_MD5RSA_MAX_BITS;
MACRO_NS NS_MD5RSA_MAX_BYTES;
MACRO_NS NS_MD5RSA_MAX_SIZE;
MACRO_NS NS_MD5RSA_MIN_BITS;
MACRO_NS NS_MD5RSA_MIN_SIZE;
MACRO_NS NS_NXT_BITS;
MACRO_NS NS_NXT_MAX;
MACRO_NS NS_OPT_DNSSEC_OK;
MACRO_NS NS_OPT_NSID;
MACRO_NS NS_PACKETSZ;
MACRO_NS NS_QFIXEDSZ;
MACRO_NS NS_RRFIXEDSZ;
MACRO_NS NS_SIG_ALG;
MACRO_NS NS_SIG_EXPIR;
MACRO_NS NS_SIG_FOOT;
MACRO_NS NS_SIG_LABELS;
MACRO_NS NS_SIG_OTTL;
MACRO_NS NS_SIG_SIGNED;
MACRO_NS NS_SIG_SIGNER;
MACRO_NS NS_SIG_TYPE;
MACRO_NS NS_TSIG_ERROR_FORMERR;
MACRO_NS NS_TSIG_ERROR_NO_SPACE;
MACRO_NS NS_TSIG_ERROR_NO_TSIG;
MACRO_NS NS_TSIG_FUDGE;
MACRO_NS NS_TSIG_TCP_COUNT;
MACRO_NTELOPTS NTELOPTS;
MACRO_NTP NTP_API;
MACRO_NT NT_386_IOPERM;
MACRO_NT NT_386_TLS;
MACRO_NT NT_ARM_HW_BREAK;
MACRO_NT NT_ARM_HW_WATCH;
MACRO_NT NT_ARM_TLS;
MACRO_NT NT_ARM_VFP;
MACRO_NT NT_ASRS;
MACRO_NT NT_AUXV;
MACRO_NT NT_FILE;
MACRO_NT NT_FPREGSET;
MACRO_NT_GNU NT_GNU_ABI_TAG;
MACRO_NT_GNU_HWCAP NT_GNU_BUILD_ID;
MACRO_NT_GNU_HWCAP NT_GNU_GOLD_VERSION;
MACRO_NT_GNU_HWCAP NT_GNU_HWCAP;
MACRO_NT NT_GWINDOWS;
MACRO_NT NT_LWPSINFO;
MACRO_NT NT_LWPSTATUS;
MACRO_NT NT_PLATFORM;
MACRO_NT NT_PPC_SPE;
MACRO_NT NT_PPC_VMX;
MACRO_NT NT_PPC_VSX;
MACRO_NT NT_PRCRED;
MACRO_NT NT_PRFPXREG;
MACRO_NT NT_PRPSINFO;
MACRO_NT NT_PRSTATUS;
MACRO_NT NT_PRXFPREG;
MACRO_NT NT_PRXREG;
MACRO_NT NT_PSINFO;
MACRO_NT NT_PSTATUS;
MACRO_NT NT_S390_CTRS;
MACRO_NT NT_S390_HIGH_GPRS;
MACRO_NT NT_S390_LAST_BREAK;
MACRO_NT NT_S390_PREFIX;
MACRO_NT NT_S390_SYSTEM_CALL;
MACRO_NT NT_S390_TDB;
MACRO_NT NT_S390_TIMER;
MACRO_NT NT_S390_TODCMP;
MACRO_NT NT_S390_TODPREG;
MACRO_NT NT_SIGINFO;
MACRO_NT NT_TASKSTRUCT;
MACRO_NT NT_UTSNAME;
MACRO_NT NT_VERSION;
MACRO_NT NT_X86_XSTATE;
MACRO_NULL NULL;
MACRO_NULLPROC NULLPROC;
MACRO_NULL_xdrproc NULL_xdrproc_t;
MACRO_NUMCOUNT NUMCOUNT;
MACRO_NUMWRITE NUMWRITE;
MACRO_N N_6PACK;
MACRO_N N_AX25;
MACRO_N N_HCI;
MACRO_N N_HDLC;
MACRO_N N_IRDA;
MACRO_N N_MASC;
MACRO_N N_MOUSE;
MACRO_N N_PPP;
MACRO_N N_PROFIBUS_FDL;
MACRO_N N_R3964;
MACRO_N N_SLIP;
MACRO_N N_SMSBLOCK;
MACRO_N N_STRIP;
MACRO_N N_SYNC_PPP;
MACRO_N N_TTY;
MACRO_N N_X25;
MACRO_OPOST OCRNL;
MACRO_ODK ODK_EXCEPTIONS;
MACRO_ODK ODK_FILL;
MACRO_ODK ODK_HWAND;
MACRO_ODK ODK_HWOR;
MACRO_ODK ODK_HWPATCH;
MACRO_ODK ODK_NULL;
MACRO_ODK ODK_PAD;
MACRO_ODK ODK_REGINFO;
MACRO_ODK ODK_TAGS;
MACRO_OEX OEX_DISMISS;
MACRO_OEX OEX_FPDBUG;
MACRO_OEX OEX_FPU_DIV0;
MACRO_OEX OEX_FPU_INEX;
MACRO_OEX OEX_FPU_INVAL;
MACRO_OEX OEX_FPU_MAX;
MACRO_OEX OEX_FPU_MIN;
MACRO_OEX OEX_FPU_OFLO;
MACRO_OEX OEX_FPU_UFLO;
MACRO_OEX OEX_PAGE0;
MACRO_OEX OEX_PRECISEFP;
MACRO_OEX OEX_SMM;
MACRO_OPOST OFDEL;
MACRO_OPOST OFILL;
MACRO_OHWA0 OHWA0_R4KEOP_CHECKED;
MACRO_OHWA1 OHWA1_R4KEOP_CLEAN;
MACRO_OHW OHW_R4KEOP;
MACRO_OHW OHW_R5KCVTL;
MACRO_OHW OHW_R5KEOP;
MACRO_OHW OHW_R8KPFETCH;
MACRO_OPOST OLCUC;
MACRO_OLD OLD_ENV_VALUE;
MACRO_OLD OLD_ENV_VAR;
MACRO_TIME OLD_TIME;
MACRO_OPOST ONLCR;
MACRO_OPOST ONLRET;
MACRO_OPOST ONOCR;
MACRO_OPAD OPAD_POSTFIX;
MACRO_OPAD OPAD_PREFIX;
MACRO_OPAD OPAD_SYMBOL;
MACRO_FM OPL3_PATCH;
MACRO_OPOST OPOST;
MACRO_OPTION OPTION_ALIAS;
MACRO_OPTION OPTION_ARG_OPTIONAL;
MACRO_OPTION OPTION_DOC;
MACRO_OPTION OPTION_HIDDEN;
MACRO_OPTION OPTION_NO_USAGE;
MACRO_OVERFLOW OVERFLOW;
MACRO_O O_ACCMODE;
MACRO_O O_APPEND;
MACRO_O O_ASYNC;
MACRO_O_DIRECTORY O_CLOEXEC;
MACRO_O O_CREAT;
MACRO_O_DIRECTORY O_DIRECTORY;
MACRO_O_DIRECTORY O_DSYNC;
MACRO_O O_EXCL;
MACRO_O O_FSYNC;
MACRO_O O_NDELAY;
MACRO_O O_NOCTTY;
MACRO_O_DIRECTORY O_NOFOLLOW;
MACRO_O O_NONBLOCK;
MACRO_O O_RDONLY;
MACRO_O O_RDWR;
MACRO_O_DIRECTORY O_RSYNC;
MACRO_O O_SYNC;
MACRO_O O_TRUNC;
MACRO_O O_WRONLY;
MACRO_PACKETSZ PACKETSZ;
MACRO_PACKET PACKET_ADD_MEMBERSHIP;
MACRO_PACKET PACKET_BROADCAST;
MACRO_PACKET PACKET_DROP_MEMBERSHIP;
MACRO_PACKET PACKET_FASTROUTE;
MACRO_PACKET PACKET_HOST;
MACRO_PACKET PACKET_LOOPBACK;
MACRO_PACKET PACKET_MR_ALLMULTI;
MACRO_PACKET PACKET_MR_MULTICAST;
MACRO_PACKET PACKET_MR_PROMISC;
MACRO_PACKET PACKET_MULTICAST;
MACRO_PACKET PACKET_OTHERHOST;
MACRO_PACKET PACKET_OUTGOING;
MACRO_PACKET PACKET_RECV_OUTPUT;
MACRO_PACKET PACKET_RX_RING;
MACRO_PACKET PACKET_STATISTICS;
MACRO_CS8 PARENB;
MACRO_PARITY PARITY_CRC16_PR0;
MACRO_PARITY PARITY_CRC16_PR0_CCITT;
MACRO_PARITY PARITY_CRC16_PR1;
MACRO_PARITY PARITY_CRC16_PR1_CCITT;
MACRO_PARITY PARITY_CRC32_PR0_CCITT;
MACRO_PARITY PARITY_CRC32_PR1_CCITT;
MACRO_PARITY PARITY_DEFAULT;
MACRO_PARITY PARITY_NONE;
MACRO_IGNBRK PARMRK;
MACRO_CS8 PARODD;
MACRO_NAME PATH_MAX;
$1EF468414A5E42A89158CD4431479D07 PA_CHAR;
$1EF468414A5E42A89158CD4431479D07 PA_DOUBLE;
MACRO_PA PA_FLAG_LONG;
MACRO_PA PA_FLAG_LONG_DOUBLE;
MACRO_PA PA_FLAG_LONG_LONG;
MACRO_PA PA_FLAG_MASK;
MACRO_PA PA_FLAG_PTR;
MACRO_PA PA_FLAG_SHORT;
$1EF468414A5E42A89158CD4431479D07 PA_FLOAT;
$1EF468414A5E42A89158CD4431479D07 PA_INT;
$1EF468414A5E42A89158CD4431479D07 PA_LAST;
$1EF468414A5E42A89158CD4431479D07 PA_POINTER;
$1EF468414A5E42A89158CD4431479D07 PA_STRING;
$1EF468414A5E42A89158CD4431479D07 PA_WCHAR;
$1EF468414A5E42A89158CD4431479D07 PA_WSTRING;
MACRO_PCIIOC PCIIOC_BASE;
MACRO_PCIIOC PCIIOC_CONTROLLER;
MACRO_PCIIOC PCIIOC_MMAP_IS_IO;
MACRO_PCIIOC PCIIOC_MMAP_IS_MEM;
MACRO_PCIIOC PCIIOC_WRITE_COMBINE;
MACRO_PCI_ARI PCI_ACS_CAP;
MACRO_PCI_ARI PCI_ACS_CR;
MACRO_PCI_ARI PCI_ACS_CTRL;
MACRO_PCI_ARI PCI_ACS_DT;
MACRO_PCI_ARI PCI_ACS_EC;
MACRO_PCI_ARI PCI_ACS_EGRESS_BITS;
MACRO_PCI_ARI PCI_ACS_EGRESS_CTL_V;
MACRO_PCI_ARI PCI_ACS_RR;
MACRO_PCI_ARI PCI_ACS_SV;
MACRO_PCI_ARI PCI_ACS_TB;
MACRO_PCI_ARI PCI_ACS_UF;
MACRO_PCI PCI_AF_CAP;
MACRO_PCI PCI_AF_CAP_FLR;
MACRO_PCI PCI_AF_CAP_TP;
MACRO_PCI PCI_AF_CTRL;
MACRO_PCI PCI_AF_CTRL_FLR;
MACRO_PCI PCI_AF_LENGTH;
MACRO_PCI PCI_AF_STATUS;
MACRO_PCI PCI_AF_STATUS_TP;
MACRO_PCI PCI_AGP_COMMAND;
MACRO_PCI PCI_AGP_COMMAND_64BIT;
MACRO_PCI PCI_AGP_COMMAND_AGP;
MACRO_PCI PCI_AGP_COMMAND_FW;
MACRO_PCI PCI_AGP_COMMAND_RATE1;
MACRO_PCI PCI_AGP_COMMAND_RATE2;
MACRO_PCI PCI_AGP_COMMAND_RATE4;
MACRO_PCI PCI_AGP_COMMAND_RQ_MASK;
MACRO_PCI PCI_AGP_COMMAND_SBA;
MACRO_PCI PCI_AGP_RFU;
MACRO_PCI PCI_AGP_SIZEOF;
MACRO_PCI PCI_AGP_STATUS;
MACRO_PCI PCI_AGP_STATUS_64BIT;
MACRO_PCI PCI_AGP_STATUS_FW;
MACRO_PCI PCI_AGP_STATUS_RATE1;
MACRO_PCI PCI_AGP_STATUS_RATE2;
MACRO_PCI PCI_AGP_STATUS_RATE4;
MACRO_PCI PCI_AGP_STATUS_RQ_MASK;
MACRO_PCI PCI_AGP_STATUS_SBA;
MACRO_PCI PCI_AGP_VERSION;
MACRO_PCI_ARI PCI_ARI_CAP;
MACRO_PCI_ARI PCI_ARI_CAP_ACS;
MACRO_PCI_ARI PCI_ARI_CAP_MFVC;
MACRO_PCI_ARI PCI_ARI_CTRL;
MACRO_PCI_ARI PCI_ARI_CTRL_ACS;
MACRO_PCI_ARI PCI_ARI_CTRL_MFVC;
MACRO_PCI_ARI PCI_ATS_CAP;
MACRO_PCI_ARI PCI_ATS_CTRL;
MACRO_PCI_ARI PCI_ATS_CTRL_ENABLE;
MACRO_PCI_ARI PCI_ATS_MAX_QDEP;
MACRO_PCI_ARI PCI_ATS_MIN_STU;
MACRO_PCI PCI_BASE_ADDRESS_0;
MACRO_PCI PCI_BASE_ADDRESS_1;
MACRO_PCI PCI_BASE_ADDRESS_2;
MACRO_PCI PCI_BASE_ADDRESS_3;
MACRO_PCI PCI_BASE_ADDRESS_4;
MACRO_PCI PCI_BASE_ADDRESS_5;
MACRO_PCI PCI_BASE_ADDRESS_IO_MASK;
MACRO_PCI PCI_BASE_ADDRESS_MEM_MASK;
MACRO_PCI PCI_BASE_ADDRESS_MEM_PREFETCH;
MACRO_PCI PCI_BASE_ADDRESS_MEM_TYPE_1M;
MACRO_PCI PCI_BASE_ADDRESS_MEM_TYPE_32;
MACRO_PCI PCI_BASE_ADDRESS_MEM_TYPE_64;
MACRO_PCI PCI_BASE_ADDRESS_MEM_TYPE_MASK;
MACRO_PCI PCI_BASE_ADDRESS_SPACE;
MACRO_PCI PCI_BASE_ADDRESS_SPACE_IO;
MACRO_PCI PCI_BASE_ADDRESS_SPACE_MEMORY;
MACRO_PCI PCI_BIST;
MACRO_PCI PCI_BIST_CAPABLE;
MACRO_PCI PCI_BIST_CODE_MASK;
MACRO_PCI PCI_BIST_START;
MACRO_PCI PCI_BRIDGE_CONTROL;
MACRO_PCI PCI_BRIDGE_CTL_BUS_RESET;
MACRO_PCI PCI_BRIDGE_CTL_FAST_BACK;
MACRO_PCI PCI_BRIDGE_CTL_ISA;
MACRO_PCI PCI_BRIDGE_CTL_MASTER_ABORT;
MACRO_PCI PCI_BRIDGE_CTL_PARITY;
MACRO_PCI PCI_BRIDGE_CTL_SERR;
MACRO_PCI PCI_BRIDGE_CTL_VGA;
MACRO_PCI PCI_CACHE_LINE_SIZE;
MACRO_PCI PCI_CAPABILITY_LIST;
MACRO_PCI PCI_CAP_AF_SIZEOF;
MACRO_PCI PCI_CAP_EXP_ENDPOINT_SIZEOF_V1;
MACRO_PCI PCI_CAP_EXP_ENDPOINT_SIZEOF_V2;
MACRO_PCI PCI_CAP_FLAGS;
MACRO_PCI PCI_CAP_ID_AF;
MACRO_PCI PCI_CAP_ID_AGP;
MACRO_PCI PCI_CAP_ID_AGP3;
MACRO_PCI PCI_CAP_ID_CCRC;
MACRO_PCI PCI_CAP_ID_CHSWP;
MACRO_PCI PCI_CAP_ID_DBG;
MACRO_PCI PCI_CAP_ID_EXP;
MACRO_PCI PCI_CAP_ID_HT;
MACRO_PCI PCI_CAP_ID_MAX;
MACRO_PCI PCI_CAP_ID_MSI;
MACRO_PCI PCI_CAP_ID_MSIX;
MACRO_PCI PCI_CAP_ID_PCIX;
MACRO_PCI PCI_CAP_ID_PM;
MACRO_PCI PCI_CAP_ID_SATA;
MACRO_PCI PCI_CAP_ID_SECDEV;
MACRO_PCI PCI_CAP_ID_SHPC;
MACRO_PCI PCI_CAP_ID_SLOTID;
MACRO_PCI PCI_CAP_ID_SSVID;
MACRO_PCI PCI_CAP_ID_VNDR;
MACRO_PCI PCI_CAP_ID_VPD;
MACRO_PCI PCI_CAP_LIST_ID;
MACRO_PCI PCI_CAP_LIST_NEXT;
MACRO_PCI PCI_CAP_MSIX_SIZEOF;
MACRO_PCI PCI_CAP_PCIX_SIZEOF_V0;
MACRO_PCI PCI_CAP_PCIX_SIZEOF_V1;
MACRO_PCI PCI_CAP_PCIX_SIZEOF_V2;
MACRO_PCI PCI_CAP_SIZEOF;
MACRO_PCI PCI_CAP_VC_BASE_SIZEOF;
MACRO_PCI PCI_CAP_VC_PER_VC_SIZEOF;
MACRO_PCI PCI_CAP_VPD_SIZEOF;
MACRO_PCI PCI_CARDBUS_CIS;
MACRO_PCI PCI_CB_BRIDGE_CONTROL;
MACRO_PCI PCI_CB_BRIDGE_CTL_16BIT_INT;
MACRO_PCI PCI_CB_BRIDGE_CTL_CB_RESET;
MACRO_PCI PCI_CB_BRIDGE_CTL_ISA;
MACRO_PCI PCI_CB_BRIDGE_CTL_MASTER_ABORT;
MACRO_PCI PCI_CB_BRIDGE_CTL_PARITY;
MACRO_PCI PCI_CB_BRIDGE_CTL_POST_WRITES;
MACRO_PCI PCI_CB_BRIDGE_CTL_PREFETCH_MEM0;
MACRO_PCI PCI_CB_BRIDGE_CTL_PREFETCH_MEM1;
MACRO_PCI PCI_CB_BRIDGE_CTL_SERR;
MACRO_PCI PCI_CB_BRIDGE_CTL_VGA;
MACRO_PCI PCI_CB_CAPABILITY_LIST;
MACRO_PCI PCI_CB_CARD_BUS;
MACRO_PCI PCI_CB_IO_BASE_0;
MACRO_PCI PCI_CB_IO_BASE_0_HI;
MACRO_PCI PCI_CB_IO_BASE_1;
MACRO_PCI PCI_CB_IO_BASE_1_HI;
MACRO_PCI PCI_CB_IO_LIMIT_0;
MACRO_PCI PCI_CB_IO_LIMIT_0_HI;
MACRO_PCI PCI_CB_IO_LIMIT_1;
MACRO_PCI PCI_CB_IO_LIMIT_1_HI;
MACRO_PCI PCI_CB_IO_RANGE_MASK;
MACRO_PCI PCI_CB_LATENCY_TIMER;
MACRO_PCI PCI_CB_LEGACY_MODE_BASE;
MACRO_PCI PCI_CB_MEMORY_BASE_0;
MACRO_PCI PCI_CB_MEMORY_BASE_1;
MACRO_PCI PCI_CB_MEMORY_LIMIT_0;
MACRO_PCI PCI_CB_MEMORY_LIMIT_1;
MACRO_PCI PCI_CB_PRIMARY_BUS;
MACRO_PCI PCI_CB_SEC_STATUS;
MACRO_PCI PCI_CB_SUBORDINATE_BUS;
MACRO_PCI PCI_CB_SUBSYSTEM_ID;
MACRO_PCI PCI_CB_SUBSYSTEM_VENDOR_ID;
MACRO_PCI PCI_CHSWP_CSR;
MACRO_PCI PCI_CHSWP_DHA;
MACRO_PCI PCI_CHSWP_EIM;
MACRO_PCI PCI_CHSWP_EXT;
MACRO_PCI PCI_CHSWP_INS;
MACRO_PCI PCI_CHSWP_LOO;
MACRO_PCI PCI_CHSWP_PI;
MACRO_PCI PCI_CHSWP_PIE;
MACRO_PCI PCI_CLASS_DEVICE;
MACRO_PCI PCI_CLASS_PROG;
MACRO_PCI PCI_CLASS_REVISION;
MACRO_PCI PCI_COMMAND;
MACRO_PCI PCI_COMMAND_FAST_BACK;
MACRO_PCI PCI_COMMAND_INTX_DISABLE;
MACRO_PCI PCI_COMMAND_INVALIDATE;
MACRO_PCI PCI_COMMAND_IO;
MACRO_PCI PCI_COMMAND_MASTER;
MACRO_PCI PCI_COMMAND_MEMORY;
MACRO_PCI PCI_COMMAND_PARITY;
MACRO_PCI PCI_COMMAND_SERR;
MACRO_PCI PCI_COMMAND_SPECIAL;
MACRO_PCI PCI_COMMAND_VGA_PALETTE;
MACRO_PCI PCI_COMMAND_WAIT;
MACRO_PCI PCI_DEVICE_ID;
MACRO_PCI_ARI PCI_DPA_BASE_SIZEOF;
MACRO_PCI_ARI PCI_DPA_CAP;
MACRO_PCI_ARI PCI_DPA_CAP_SUBSTATE_MASK;
MACRO_PCI PCI_ERR_CAP;
MACRO_PCI PCI_ERR_CAP_ECRC_CHKC;
MACRO_PCI PCI_ERR_CAP_ECRC_CHKE;
MACRO_PCI PCI_ERR_CAP_ECRC_GENC;
MACRO_PCI PCI_ERR_CAP_ECRC_GENE;
MACRO_PCI PCI_ERR_COR_ADV_NFAT;
MACRO_PCI PCI_ERR_COR_BAD_DLLP;
MACRO_PCI PCI_ERR_COR_BAD_TLP;
MACRO_PCI PCI_ERR_COR_INTERNAL;
MACRO_PCI PCI_ERR_COR_LOG_OVER;
MACRO_PCI PCI_ERR_COR_MASK;
MACRO_PCI PCI_ERR_COR_RCVR;
MACRO_PCI PCI_ERR_COR_REP_ROLL;
MACRO_PCI PCI_ERR_COR_REP_TIMER;
MACRO_PCI PCI_ERR_COR_STATUS;
MACRO_PCI PCI_ERR_HEADER_LOG;
MACRO_PCI PCI_ERR_ROOT_CMD_COR_EN;
MACRO_PCI PCI_ERR_ROOT_CMD_FATAL_EN;
MACRO_PCI PCI_ERR_ROOT_CMD_NONFATAL_EN;
MACRO_PCI PCI_ERR_ROOT_COMMAND;
MACRO_PCI PCI_ERR_ROOT_COR_RCV;
MACRO_PCI PCI_ERR_ROOT_ERR_SRC;
MACRO_PCI PCI_ERR_ROOT_FATAL_RCV;
MACRO_PCI PCI_ERR_ROOT_FIRST_FATAL;
MACRO_PCI PCI_ERR_ROOT_MULTI_COR_RCV;
MACRO_PCI PCI_ERR_ROOT_MULTI_UNCOR_RCV;
MACRO_PCI PCI_ERR_ROOT_NONFATAL_RCV;
MACRO_PCI PCI_ERR_ROOT_STATUS;
MACRO_PCI PCI_ERR_ROOT_UNCOR_RCV;
MACRO_PCI PCI_ERR_UNCOR_MASK;
MACRO_PCI PCI_ERR_UNCOR_SEVER;
MACRO_PCI PCI_ERR_UNCOR_STATUS;
MACRO_PCI PCI_ERR_UNC_ACSV;
MACRO_PCI PCI_ERR_UNC_ATOMEG;
MACRO_PCI PCI_ERR_UNC_COMP_ABORT;
MACRO_PCI PCI_ERR_UNC_COMP_TIME;
MACRO_PCI PCI_ERR_UNC_DLP;
MACRO_PCI PCI_ERR_UNC_ECRC;
MACRO_PCI PCI_ERR_UNC_FCP;
MACRO_PCI PCI_ERR_UNC_INTN;
MACRO_PCI PCI_ERR_UNC_MALF_TLP;
MACRO_PCI PCI_ERR_UNC_MCBTLP;
MACRO_PCI PCI_ERR_UNC_POISON_TLP;
MACRO_PCI PCI_ERR_UNC_RX_OVER;
MACRO_PCI PCI_ERR_UNC_SURPDN;
MACRO_PCI PCI_ERR_UNC_TLPPRE;
MACRO_PCI PCI_ERR_UNC_UND;
MACRO_PCI PCI_ERR_UNC_UNSUP;
MACRO_PCI PCI_ERR_UNC_UNX_COMP;
MACRO_PCI PCI_EXP_DEVCAP;
MACRO_PCI PCI_EXP_DEVCAP2;
MACRO_PCI PCI_EXP_DEVCAP2_ARI;
MACRO_PCI PCI_EXP_DEVCAP2_LTR;
MACRO_PCI PCI_EXP_DEVCAP2_OBFF_MASK;
MACRO_PCI PCI_EXP_DEVCAP2_OBFF_MSG;
MACRO_PCI PCI_EXP_DEVCAP2_OBFF_WAKE;
MACRO_PCI PCI_EXP_DEVCAP_ATN_BUT;
MACRO_PCI PCI_EXP_DEVCAP_ATN_IND;
MACRO_PCI PCI_EXP_DEVCAP_EXT_TAG;
MACRO_PCI PCI_EXP_DEVCAP_FLR;
MACRO_PCI PCI_EXP_DEVCAP_L0S;
MACRO_PCI PCI_EXP_DEVCAP_L1;
MACRO_PCI PCI_EXP_DEVCAP_PAYLOAD;
MACRO_PCI PCI_EXP_DEVCAP_PHANTOM;
MACRO_PCI PCI_EXP_DEVCAP_PWR_IND;
MACRO_PCI PCI_EXP_DEVCAP_PWR_SCL;
MACRO_PCI PCI_EXP_DEVCAP_PWR_VAL;
MACRO_PCI PCI_EXP_DEVCAP_RBER;
MACRO_PCI PCI_EXP_DEVCTL;
MACRO_PCI PCI_EXP_DEVCTL2;
MACRO_PCI PCI_EXP_DEVCTL2_ARI;
MACRO_PCI PCI_EXP_DEVCTL2_COMP_TIMEOUT;
MACRO_PCI PCI_EXP_DEVCTL2_IDO_CMP_EN;
MACRO_PCI PCI_EXP_DEVCTL2_IDO_REQ_EN;
MACRO_PCI PCI_EXP_DEVCTL2_LTR_EN;
MACRO_PCI PCI_EXP_DEVCTL2_OBFF_MSGA_EN;
MACRO_PCI PCI_EXP_DEVCTL2_OBFF_MSGB_EN;
MACRO_PCI PCI_EXP_DEVCTL2_OBFF_WAKE_EN;
MACRO_PCI PCI_EXP_DEVCTL_AUX_PME;
MACRO_PCI PCI_EXP_DEVCTL_BCR_FLR;
MACRO_PCI PCI_EXP_DEVCTL_CERE;
MACRO_PCI PCI_EXP_DEVCTL_EXT_TAG;
MACRO_PCI PCI_EXP_DEVCTL_FERE;
MACRO_PCI PCI_EXP_DEVCTL_NFERE;
MACRO_PCI PCI_EXP_DEVCTL_NOSNOOP_EN;
MACRO_PCI PCI_EXP_DEVCTL_PAYLOAD;
MACRO_PCI PCI_EXP_DEVCTL_PHANTOM;
MACRO_PCI PCI_EXP_DEVCTL_READRQ;
MACRO_PCI PCI_EXP_DEVCTL_RELAX_EN;
MACRO_PCI PCI_EXP_DEVCTL_URRE;
MACRO_PCI PCI_EXP_DEVSTA;
MACRO_PCI PCI_EXP_DEVSTA2;
MACRO_PCI PCI_EXP_DEVSTA_AUXPD;
MACRO_PCI PCI_EXP_DEVSTA_CED;
MACRO_PCI PCI_EXP_DEVSTA_FED;
MACRO_PCI PCI_EXP_DEVSTA_NFED;
MACRO_PCI PCI_EXP_DEVSTA_TRPND;
MACRO_PCI PCI_EXP_DEVSTA_URD;
MACRO_PCI PCI_EXP_FLAGS;
MACRO_PCI PCI_EXP_FLAGS_IRQ;
MACRO_PCI PCI_EXP_FLAGS_SLOT;
MACRO_PCI PCI_EXP_FLAGS_TYPE;
MACRO_PCI PCI_EXP_FLAGS_VERS;
MACRO_PCI PCI_EXP_LNKCAP;
MACRO_PCI PCI_EXP_LNKCAP2;
MACRO_PCI PCI_EXP_LNKCAP2_CROSSLINK;
MACRO_PCI PCI_EXP_LNKCAP2_SLS_2_5GB;
MACRO_PCI PCI_EXP_LNKCAP2_SLS_5_0GB;
MACRO_PCI PCI_EXP_LNKCAP2_SLS_8_0GB;
MACRO_PCI PCI_EXP_LNKCAP_ASPMS;
MACRO_PCI PCI_EXP_LNKCAP_CLKPM;
MACRO_PCI PCI_EXP_LNKCAP_DLLLARC;
MACRO_PCI PCI_EXP_LNKCAP_L0SEL;
MACRO_PCI PCI_EXP_LNKCAP_L1EL;
MACRO_PCI PCI_EXP_LNKCAP_LBNC;
MACRO_PCI PCI_EXP_LNKCAP_MLW;
MACRO_PCI PCI_EXP_LNKCAP_PN;
MACRO_PCI PCI_EXP_LNKCAP_SDERC;
MACRO_PCI PCI_EXP_LNKCAP_SLS;
MACRO_PCI PCI_EXP_LNKCAP_SLS_2_5GB;
MACRO_PCI PCI_EXP_LNKCAP_SLS_5_0GB;
MACRO_PCI PCI_EXP_LNKCTL;
MACRO_PCI PCI_EXP_LNKCTL2;
MACRO_PCI PCI_EXP_LNKCTL_ASPMC;
MACRO_PCI PCI_EXP_LNKCTL_ASPM_L0S;
MACRO_PCI PCI_EXP_LNKCTL_ASPM_L1;
MACRO_PCI PCI_EXP_LNKCTL_CCC;
MACRO_PCI PCI_EXP_LNKCTL_CLKREQ_EN;
MACRO_PCI PCI_EXP_LNKCTL_ES;
MACRO_PCI PCI_EXP_LNKCTL_HAWD;
MACRO_PCI PCI_EXP_LNKCTL_LABIE;
MACRO_PCI PCI_EXP_LNKCTL_LBMIE;
MACRO_PCI PCI_EXP_LNKCTL_LD;
MACRO_PCI PCI_EXP_LNKCTL_RCB;
MACRO_PCI PCI_EXP_LNKCTL_RL;
MACRO_PCI PCI_EXP_LNKSTA;
MACRO_PCI PCI_EXP_LNKSTA2;
MACRO_PCI PCI_EXP_LNKSTA_CLS;
MACRO_PCI PCI_EXP_LNKSTA_CLS_2_5GB;
MACRO_PCI PCI_EXP_LNKSTA_CLS_5_0GB;
MACRO_PCI PCI_EXP_LNKSTA_CLS_8_0GB;
MACRO_PCI PCI_EXP_LNKSTA_DLLLA;
MACRO_PCI PCI_EXP_LNKSTA_LABS;
MACRO_PCI PCI_EXP_LNKSTA_LBMS;
MACRO_PCI PCI_EXP_LNKSTA_LT;
MACRO_PCI PCI_EXP_LNKSTA_NLW;
MACRO_PCI PCI_EXP_LNKSTA_NLW_SHIFT;
MACRO_PCI PCI_EXP_LNKSTA_NLW_X1;
MACRO_PCI PCI_EXP_LNKSTA_NLW_X2;
MACRO_PCI PCI_EXP_LNKSTA_NLW_X4;
MACRO_PCI PCI_EXP_LNKSTA_NLW_X8;
MACRO_PCI PCI_EXP_LNKSTA_SLC;
MACRO_PCI PCI_EXP_RTCAP;
MACRO_PCI PCI_EXP_RTCAP_CRSVIS;
MACRO_PCI PCI_EXP_RTCTL;
MACRO_PCI PCI_EXP_RTCTL_CRSSVE;
MACRO_PCI PCI_EXP_RTCTL_PMEIE;
MACRO_PCI PCI_EXP_RTCTL_SECEE;
MACRO_PCI PCI_EXP_RTCTL_SEFEE;
MACRO_PCI PCI_EXP_RTCTL_SENFEE;
MACRO_PCI PCI_EXP_RTSTA;
MACRO_PCI PCI_EXP_RTSTA_PENDING;
MACRO_PCI PCI_EXP_RTSTA_PME;
MACRO_PCI PCI_EXP_SLTCAP;
MACRO_PCI PCI_EXP_SLTCAP2;
MACRO_PCI PCI_EXP_SLTCAP_ABP;
MACRO_PCI PCI_EXP_SLTCAP_AIP;
MACRO_PCI PCI_EXP_SLTCAP_EIP;
MACRO_PCI PCI_EXP_SLTCAP_HPC;
MACRO_PCI PCI_EXP_SLTCAP_HPS;
MACRO_PCI PCI_EXP_SLTCAP_MRLSP;
MACRO_PCI PCI_EXP_SLTCAP_NCCS;
MACRO_PCI PCI_EXP_SLTCAP_PCP;
MACRO_PCI PCI_EXP_SLTCAP_PIP;
MACRO_PCI PCI_EXP_SLTCAP_PSN;
MACRO_PCI PCI_EXP_SLTCAP_SPLS;
MACRO_PCI PCI_EXP_SLTCAP_SPLV;
MACRO_PCI PCI_EXP_SLTCTL;
MACRO_PCI PCI_EXP_SLTCTL2;
MACRO_PCI PCI_EXP_SLTCTL_ABPE;
MACRO_PCI PCI_EXP_SLTCTL_AIC;
MACRO_PCI PCI_EXP_SLTCTL_ATTN_IND_BLINK;
MACRO_PCI PCI_EXP_SLTCTL_ATTN_IND_OFF;
MACRO_PCI PCI_EXP_SLTCTL_ATTN_IND_ON;
MACRO_PCI PCI_EXP_SLTCTL_CCIE;
MACRO_PCI PCI_EXP_SLTCTL_DLLSCE;
MACRO_PCI PCI_EXP_SLTCTL_EIC;
MACRO_PCI PCI_EXP_SLTCTL_HPIE;
MACRO_PCI PCI_EXP_SLTCTL_MRLSCE;
MACRO_PCI PCI_EXP_SLTCTL_PCC;
MACRO_PCI PCI_EXP_SLTCTL_PDCE;
MACRO_PCI PCI_EXP_SLTCTL_PFDE;
MACRO_PCI PCI_EXP_SLTCTL_PIC;
MACRO_PCI PCI_EXP_SLTCTL_PWR_IND_BLINK;
MACRO_PCI PCI_EXP_SLTCTL_PWR_IND_OFF;
MACRO_PCI PCI_EXP_SLTCTL_PWR_IND_ON;
MACRO_PCI PCI_EXP_SLTCTL_PWR_OFF;
MACRO_PCI PCI_EXP_SLTCTL_PWR_ON;
MACRO_PCI PCI_EXP_SLTSTA;
MACRO_PCI PCI_EXP_SLTSTA2;
MACRO_PCI PCI_EXP_SLTSTA_ABP;
MACRO_PCI PCI_EXP_SLTSTA_CC;
MACRO_PCI PCI_EXP_SLTSTA_DLLSC;
MACRO_PCI PCI_EXP_SLTSTA_EIS;
MACRO_PCI PCI_EXP_SLTSTA_MRLSC;
MACRO_PCI PCI_EXP_SLTSTA_MRLSS;
MACRO_PCI PCI_EXP_SLTSTA_PDC;
MACRO_PCI PCI_EXP_SLTSTA_PDS;
MACRO_PCI PCI_EXP_SLTSTA_PFD;
MACRO_PCI PCI_EXP_TYPE_DOWNSTREAM;
MACRO_PCI PCI_EXP_TYPE_ENDPOINT;
MACRO_PCI PCI_EXP_TYPE_LEG_END;
MACRO_PCI PCI_EXP_TYPE_PCIE_BRIDGE;
MACRO_PCI PCI_EXP_TYPE_PCI_BRIDGE;
MACRO_PCI PCI_EXP_TYPE_RC_EC;
MACRO_PCI PCI_EXP_TYPE_RC_END;
MACRO_PCI PCI_EXP_TYPE_ROOT_PORT;
MACRO_PCI PCI_EXP_TYPE_UPSTREAM;
MACRO_PCI_ARI PCI_EXT_CAP_ARI_SIZEOF;
MACRO_PCI_ARI PCI_EXT_CAP_ATS_SIZEOF;
MACRO_PCI PCI_EXT_CAP_DSN_SIZEOF;
MACRO_PCI PCI_EXT_CAP_ID_ACS;
MACRO_PCI PCI_EXT_CAP_ID_AMD_XXX;
MACRO_PCI PCI_EXT_CAP_ID_ARI;
MACRO_PCI PCI_EXT_CAP_ID_ATS;
MACRO_PCI PCI_EXT_CAP_ID_CAC;
MACRO_PCI PCI_EXT_CAP_ID_DPA;
MACRO_PCI PCI_EXT_CAP_ID_DSN;
MACRO_PCI PCI_EXT_CAP_ID_ERR;
MACRO_PCI PCI_EXT_CAP_ID_LTR;
MACRO_PCI PCI_EXT_CAP_ID_MAX;
MACRO_PCI PCI_EXT_CAP_ID_MCAST;
MACRO_PCI PCI_EXT_CAP_ID_MFVC;
MACRO_PCI PCI_EXT_CAP_ID_MRIOV;
MACRO_PCI PCI_EXT_CAP_ID_PASID;
MACRO_PCI PCI_EXT_CAP_ID_PMUX;
MACRO_PCI PCI_EXT_CAP_ID_PRI;
MACRO_PCI PCI_EXT_CAP_ID_PWR;
MACRO_PCI PCI_EXT_CAP_ID_RCEC;
MACRO_PCI PCI_EXT_CAP_ID_RCILC;
MACRO_PCI PCI_EXT_CAP_ID_RCLD;
MACRO_PCI PCI_EXT_CAP_ID_RCRB;
MACRO_PCI PCI_EXT_CAP_ID_REBAR;
MACRO_PCI PCI_EXT_CAP_ID_SECPCI;
MACRO_PCI PCI_EXT_CAP_ID_SRIOV;
MACRO_PCI PCI_EXT_CAP_ID_TPH;
MACRO_PCI PCI_EXT_CAP_ID_VC;
MACRO_PCI PCI_EXT_CAP_ID_VC9;
MACRO_PCI PCI_EXT_CAP_ID_VNDR;
MACRO_PCI_ARI PCI_EXT_CAP_LTR_SIZEOF;
MACRO_PCI PCI_EXT_CAP_MCAST_ENDPOINT_SIZEOF;
MACRO_PCI_ARI PCI_EXT_CAP_PASID_SIZEOF;
MACRO_PCI_ARI PCI_EXT_CAP_PRI_SIZEOF;
MACRO_PCI PCI_EXT_CAP_PWR_SIZEOF;
MACRO_PCI_ARI PCI_EXT_CAP_SRIOV_SIZEOF;
MACRO_PCI PCI_HEADER_TYPE;
MACRO_PCI PCI_HEADER_TYPE_BRIDGE;
MACRO_PCI PCI_HEADER_TYPE_CARDBUS;
MACRO_PCI PCI_HEADER_TYPE_NORMAL;
MACRO_PCI PCI_INTERRUPT_LINE;
MACRO_PCI PCI_INTERRUPT_PIN;
MACRO_PCI PCI_IO_1K_RANGE_MASK;
MACRO_PCI PCI_IO_BASE;
MACRO_PCI PCI_IO_BASE_UPPER16;
MACRO_PCI PCI_IO_LIMIT;
MACRO_PCI PCI_IO_LIMIT_UPPER16;
MACRO_PCI PCI_IO_RANGE_MASK;
MACRO_PCI PCI_IO_RANGE_TYPE_16;
MACRO_PCI PCI_IO_RANGE_TYPE_32;
MACRO_PCI PCI_IO_RANGE_TYPE_MASK;
MACRO_PCI PCI_LATENCY_TIMER;
MACRO_PCI_ARI PCI_LTR_MAX_NOSNOOP_LAT;
MACRO_PCI_ARI PCI_LTR_MAX_SNOOP_LAT;
MACRO_PCI_ARI PCI_LTR_SCALE_MASK;
MACRO_PCI_ARI PCI_LTR_SCALE_SHIFT;
MACRO_PCI_ARI PCI_LTR_VALUE_MASK;
MACRO_PCI PCI_MAX_LAT;
MACRO_PCI PCI_MEMORY_BASE;
MACRO_PCI PCI_MEMORY_LIMIT;
MACRO_PCI PCI_MEMORY_RANGE_MASK;
MACRO_PCI PCI_MEMORY_RANGE_TYPE_MASK;
MACRO_PCI PCI_MIN_GNT;
MACRO_PCI PCI_MSIX_ENTRY_CTRL_MASKBIT;
MACRO_PCI PCI_MSIX_ENTRY_DATA;
MACRO_PCI PCI_MSIX_ENTRY_LOWER_ADDR;
MACRO_PCI PCI_MSIX_ENTRY_SIZE;
MACRO_PCI PCI_MSIX_ENTRY_UPPER_ADDR;
MACRO_PCI PCI_MSIX_ENTRY_VECTOR_CTRL;
MACRO_PCI PCI_MSIX_FLAGS;
MACRO_PCI PCI_MSIX_FLAGS_ENABLE;
MACRO_PCI PCI_MSIX_FLAGS_MASKALL;
MACRO_PCI PCI_MSIX_FLAGS_QSIZE;
MACRO_PCI PCI_MSIX_PBA;
MACRO_PCI PCI_MSIX_PBA_BIR;
MACRO_PCI PCI_MSIX_PBA_OFFSET;
MACRO_PCI PCI_MSIX_TABLE;
MACRO_PCI PCI_MSIX_TABLE_BIR;
MACRO_PCI PCI_MSIX_TABLE_OFFSET;
MACRO_PCI PCI_MSI_ADDRESS_HI;
MACRO_PCI PCI_MSI_ADDRESS_LO;
MACRO_PCI PCI_MSI_DATA_32;
MACRO_PCI PCI_MSI_DATA_64;
MACRO_PCI PCI_MSI_FLAGS;
MACRO_PCI PCI_MSI_FLAGS_64BIT;
MACRO_PCI PCI_MSI_FLAGS_ENABLE;
MACRO_PCI PCI_MSI_FLAGS_MASKBIT;
MACRO_PCI PCI_MSI_FLAGS_QMASK;
MACRO_PCI PCI_MSI_FLAGS_QSIZE;
MACRO_PCI PCI_MSI_MASK_32;
MACRO_PCI PCI_MSI_MASK_64;
MACRO_PCI PCI_MSI_PENDING_32;
MACRO_PCI PCI_MSI_PENDING_64;
MACRO_PCI PCI_MSI_RFU;
MACRO_PCI_ARI PCI_PASID_CAP;
MACRO_PCI_ARI PCI_PASID_CAP_EXEC;
MACRO_PCI_ARI PCI_PASID_CAP_PRIV;
MACRO_PCI_ARI PCI_PASID_CTRL;
MACRO_PCI_ARI PCI_PASID_CTRL_ENABLE;
MACRO_PCI_ARI PCI_PASID_CTRL_EXEC;
MACRO_PCI_ARI PCI_PASID_CTRL_PRIV;
MACRO_PCI PCI_PM_BPCC_ENABLE;
MACRO_PCI PCI_PM_CAP_AUX_POWER;
MACRO_PCI PCI_PM_CAP_D1;
MACRO_PCI PCI_PM_CAP_D2;
MACRO_PCI PCI_PM_CAP_DSI;
MACRO_PCI PCI_PM_CAP_PME;
MACRO_PCI PCI_PM_CAP_PME_CLOCK;
MACRO_PCI PCI_PM_CAP_PME_D0;
MACRO_PCI PCI_PM_CAP_PME_D1;
MACRO_PCI PCI_PM_CAP_PME_D2;
MACRO_PCI PCI_PM_CAP_PME_D3;
MACRO_PCI PCI_PM_CAP_PME_D3cold;
MACRO_PCI PCI_PM_CAP_PME_MASK;
MACRO_PCI PCI_PM_CAP_PME_SHIFT;
MACRO_PCI PCI_PM_CAP_RESERVED;
MACRO_PCI PCI_PM_CAP_VER_MASK;
MACRO_PCI PCI_PM_CTRL;
MACRO_PCI PCI_PM_CTRL_DATA_SCALE_MASK;
MACRO_PCI PCI_PM_CTRL_DATA_SEL_MASK;
MACRO_PCI PCI_PM_CTRL_NO_SOFT_RESET;
MACRO_PCI PCI_PM_CTRL_PME_ENABLE;
MACRO_PCI PCI_PM_CTRL_PME_STATUS;
MACRO_PCI PCI_PM_CTRL_STATE_MASK;
MACRO_PCI PCI_PM_DATA_REGISTER;
MACRO_PCI PCI_PM_PMC;
MACRO_PCI PCI_PM_PPB_B2_B3;
MACRO_PCI PCI_PM_PPB_EXTENSIONS;
MACRO_PCI PCI_PM_SIZEOF;
MACRO_PCI PCI_PREF_BASE_UPPER32;
MACRO_PCI PCI_PREF_LIMIT_UPPER32;
MACRO_PCI PCI_PREF_MEMORY_BASE;
MACRO_PCI PCI_PREF_MEMORY_LIMIT;
MACRO_PCI PCI_PREF_RANGE_MASK;
MACRO_PCI PCI_PREF_RANGE_TYPE_32;
MACRO_PCI PCI_PREF_RANGE_TYPE_64;
MACRO_PCI PCI_PREF_RANGE_TYPE_MASK;
MACRO_PCI PCI_PRIMARY_BUS;
MACRO_PCI_ARI PCI_PRI_ALLOC_REQ;
MACRO_PCI_ARI PCI_PRI_CTRL;
MACRO_PCI_ARI PCI_PRI_CTRL_ENABLE;
MACRO_PCI_ARI PCI_PRI_CTRL_RESET;
MACRO_PCI_ARI PCI_PRI_MAX_REQ;
MACRO_PCI_ARI PCI_PRI_STATUS;
MACRO_PCI_ARI PCI_PRI_STATUS_RF;
MACRO_PCI_ARI PCI_PRI_STATUS_STOPPED;
MACRO_PCI_ARI PCI_PRI_STATUS_UPRGI;
MACRO_PCI PCI_PWR_CAP;
MACRO_PCI PCI_PWR_DATA;
MACRO_PCI PCI_PWR_DSR;
MACRO_PCI_ARI PCI_REBAR_CTRL;
MACRO_PCI_ARI PCI_REBAR_CTRL_NBAR_MASK;
MACRO_PCI_ARI PCI_REBAR_CTRL_NBAR_SHIFT;
MACRO_PCI PCI_REVISION_ID;
MACRO_PCI PCI_ROM_ADDRESS;
MACRO_PCI PCI_ROM_ADDRESS1;
MACRO_PCI PCI_ROM_ADDRESS_ENABLE;
MACRO_PCI PCI_ROM_ADDRESS_MASK;
MACRO_PCI_ARI PCI_SATA_REGS;
MACRO_PCI_ARI PCI_SATA_REGS_INLINE;
MACRO_PCI_ARI PCI_SATA_REGS_MASK;
MACRO_PCI_ARI PCI_SATA_SIZEOF_LONG;
MACRO_PCI_ARI PCI_SATA_SIZEOF_SHORT;
MACRO_PCI PCI_SECONDARY_BUS;
MACRO_PCI PCI_SEC_LATENCY_TIMER;
MACRO_PCI PCI_SEC_STATUS;
MACRO_PCI PCI_SID_CHASSIS_NR;
MACRO_PCI PCI_SID_ESR;
MACRO_PCI PCI_SID_ESR_FIC;
MACRO_PCI PCI_SID_ESR_NSLOTS;
MACRO_PCI_ARI PCI_SRIOV_BAR;
MACRO_PCI_ARI PCI_SRIOV_CAP;
MACRO_PCI_ARI PCI_SRIOV_CAP_VFM;
MACRO_PCI_ARI PCI_SRIOV_CTRL;
MACRO_PCI_ARI PCI_SRIOV_CTRL_ARI;
MACRO_PCI_ARI PCI_SRIOV_CTRL_INTR;
MACRO_PCI_ARI PCI_SRIOV_CTRL_MSE;
MACRO_PCI_ARI PCI_SRIOV_CTRL_VFE;
MACRO_PCI_ARI PCI_SRIOV_CTRL_VFM;
MACRO_PCI_ARI PCI_SRIOV_FUNC_LINK;
MACRO_PCI_ARI PCI_SRIOV_INITIAL_VF;
MACRO_PCI_ARI PCI_SRIOV_NUM_BARS;
MACRO_PCI_ARI PCI_SRIOV_NUM_VF;
MACRO_PCI_ARI PCI_SRIOV_STATUS;
MACRO_PCI_ARI PCI_SRIOV_STATUS_VFM;
MACRO_PCI_ARI PCI_SRIOV_SUP_PGSIZE;
MACRO_PCI_ARI PCI_SRIOV_SYS_PGSIZE;
MACRO_PCI_ARI PCI_SRIOV_TOTAL_VF;
MACRO_PCI_ARI PCI_SRIOV_VFM;
MACRO_PCI_ARI PCI_SRIOV_VFM_AV;
MACRO_PCI_ARI PCI_SRIOV_VFM_MI;
MACRO_PCI_ARI PCI_SRIOV_VFM_MO;
MACRO_PCI_ARI PCI_SRIOV_VFM_UA;
MACRO_PCI_ARI PCI_SRIOV_VF_DID;
MACRO_PCI_ARI PCI_SRIOV_VF_OFFSET;
MACRO_PCI_ARI PCI_SRIOV_VF_STRIDE;
MACRO_PCI PCI_SSVID_DEVICE_ID;
MACRO_PCI PCI_SSVID_VENDOR_ID;
MACRO_PCI PCI_STATUS;
MACRO_PCI PCI_STATUS_66MHZ;
MACRO_PCI PCI_STATUS_CAP_LIST;
MACRO_PCI PCI_STATUS_DETECTED_PARITY;
MACRO_PCI PCI_STATUS_DEVSEL_FAST;
MACRO_PCI PCI_STATUS_DEVSEL_MASK;
MACRO_PCI PCI_STATUS_DEVSEL_MEDIUM;
MACRO_PCI PCI_STATUS_DEVSEL_SLOW;
MACRO_PCI PCI_STATUS_FAST_BACK;
MACRO_PCI PCI_STATUS_INTERRUPT;
MACRO_PCI PCI_STATUS_PARITY;
MACRO_PCI PCI_STATUS_REC_MASTER_ABORT;
MACRO_PCI PCI_STATUS_REC_TARGET_ABORT;
MACRO_PCI PCI_STATUS_SIG_SYSTEM_ERROR;
MACRO_PCI PCI_STATUS_SIG_TARGET_ABORT;
MACRO_PCI PCI_STATUS_UDF;
MACRO_PCI PCI_STD_HEADER_SIZEOF;
MACRO_PCI PCI_SUBORDINATE_BUS;
MACRO_PCI PCI_SUBSYSTEM_ID;
MACRO_PCI PCI_SUBSYSTEM_VENDOR_ID;
MACRO_PCI_ARI PCI_TPH_BASE_SIZEOF;
MACRO_PCI_ARI PCI_TPH_CAP;
MACRO_PCI_ARI PCI_TPH_CAP_LOC_MASK;
MACRO_PCI_ARI PCI_TPH_CAP_ST_MASK;
MACRO_PCI_ARI PCI_TPH_CAP_ST_SHIFT;
MACRO_PCI_ARI PCI_TPH_LOC_CAP;
MACRO_PCI_ARI PCI_TPH_LOC_MSIX;
MACRO_PCI_ARI PCI_TPH_LOC_NONE;
MACRO_PCI PCI_VC_CAP1_ARB_SIZE;
MACRO_PCI PCI_VC_CAP1_EVCC;
MACRO_PCI PCI_VC_CAP1_LPEVCC;
MACRO_PCI PCI_VC_CAP2_128_PHASE;
MACRO_PCI PCI_VC_CAP2_32_PHASE;
MACRO_PCI PCI_VC_CAP2_64_PHASE;
MACRO_PCI PCI_VC_CAP2_ARB_OFF;
MACRO_PCI PCI_VC_PORT_CAP1;
MACRO_PCI PCI_VC_PORT_CAP2;
MACRO_PCI PCI_VC_PORT_CTRL;
MACRO_PCI PCI_VC_PORT_CTRL_LOAD_TABLE;
MACRO_PCI PCI_VC_PORT_STATUS;
MACRO_PCI PCI_VC_PORT_STATUS_TABLE;
MACRO_PCI PCI_VC_RES_CAP;
MACRO_PCI PCI_VC_RES_CAP_128_PHASE;
MACRO_PCI PCI_VC_RES_CAP_128_PHASE_TB;
MACRO_PCI PCI_VC_RES_CAP_256_PHASE;
MACRO_PCI PCI_VC_RES_CAP_32_PHASE;
MACRO_PCI PCI_VC_RES_CAP_64_PHASE;
MACRO_PCI PCI_VC_RES_CAP_ARB_OFF;
MACRO_PCI PCI_VC_RES_CTRL;
MACRO_PCI PCI_VC_RES_CTRL_ARB_SELECT;
MACRO_PCI PCI_VC_RES_CTRL_ENABLE;
MACRO_PCI PCI_VC_RES_CTRL_ID;
MACRO_PCI PCI_VC_RES_CTRL_LOAD_TABLE;
MACRO_PCI PCI_VC_RES_STATUS;
MACRO_PCI PCI_VC_RES_STATUS_NEGO;
MACRO_PCI PCI_VC_RES_STATUS_TABLE;
MACRO_PCI PCI_VENDOR_ID;
MACRO_PCI PCI_VNDR_HEADER;
MACRO_PCI PCI_VPD_ADDR;
MACRO_PCI PCI_VPD_ADDR_F;
MACRO_PCI PCI_VPD_ADDR_MASK;
MACRO_PCI PCI_VPD_DATA;
MACRO_PCI_ARI PCI_VSEC_HDR;
MACRO_PCI_ARI PCI_VSEC_HDR_LEN_SHIFT;
MACRO_PCI PCI_X_BRIDGE_SSTATUS;
MACRO_PCI PCI_X_BRIDGE_STATUS;
MACRO_PCI PCI_X_CMD;
MACRO_PCI PCI_X_CMD_DPERR_E;
MACRO_PCI PCI_X_CMD_ERO;
MACRO_PCI PCI_X_CMD_MAX_READ;
MACRO_PCI PCI_X_CMD_MAX_SPLIT;
MACRO_PCI PCI_X_CMD_READ_1K;
MACRO_PCI PCI_X_CMD_READ_2K;
MACRO_PCI PCI_X_CMD_READ_4K;
MACRO_PCI PCI_X_CMD_READ_512;
MACRO_PCI PCI_X_CMD_SPLIT_1;
MACRO_PCI PCI_X_CMD_SPLIT_12;
MACRO_PCI PCI_X_CMD_SPLIT_16;
MACRO_PCI PCI_X_CMD_SPLIT_2;
MACRO_PCI PCI_X_CMD_SPLIT_3;
MACRO_PCI PCI_X_CMD_SPLIT_32;
MACRO_PCI PCI_X_CMD_SPLIT_4;
MACRO_PCI PCI_X_CMD_SPLIT_8;
MACRO_PCI PCI_X_ECC_CSR;
MACRO_PCI PCI_X_SSTATUS_133MHZ;
MACRO_PCI PCI_X_SSTATUS_266MHZ;
MACRO_PCI PCI_X_SSTATUS_533MHZ;
MACRO_PCI PCI_X_SSTATUS_64BIT;
MACRO_PCI PCI_X_SSTATUS_FREQ;
MACRO_PCI PCI_X_SSTATUS_V1;
MACRO_PCI PCI_X_SSTATUS_V2;
MACRO_PCI PCI_X_SSTATUS_VERS;
MACRO_PCI PCI_X_STATUS;
MACRO_PCI PCI_X_STATUS_133MHZ;
MACRO_PCI PCI_X_STATUS_266MHZ;
MACRO_PCI PCI_X_STATUS_533MHZ;
MACRO_PCI PCI_X_STATUS_64BIT;
MACRO_PCI PCI_X_STATUS_BUS;
MACRO_PCI PCI_X_STATUS_COMPLEX;
MACRO_PCI PCI_X_STATUS_DEVFN;
MACRO_PCI PCI_X_STATUS_MAX_CUM;
MACRO_PCI PCI_X_STATUS_MAX_READ;
MACRO_PCI PCI_X_STATUS_MAX_SPLIT;
MACRO_PCI PCI_X_STATUS_SPL_DISC;
MACRO_PCI PCI_X_STATUS_SPL_ERR;
MACRO_PCI PCI_X_STATUS_UNX_SPL;
MACRO_PCM PCM_ENABLE_INPUT;
MACRO_PCM PCM_ENABLE_OUTPUT;
MACRO_LITTLE PDP_ENDIAN;
MACRO_ECHOKE PENDIN;
MACRO_PERMISSION PERMISSION_DENIED;
$875DC6519C1A1D10FD23227495805A2A PER_BSD;
$875DC6519C1A1D10FD23227495805A2A PER_HPUX;
$875DC6519C1A1D10FD23227495805A2A PER_IRIX32;
$875DC6519C1A1D10FD23227495805A2A PER_IRIX64;
$875DC6519C1A1D10FD23227495805A2A PER_IRIXN32;
$875DC6519C1A1D10FD23227495805A2A PER_ISCR4;
$875DC6519C1A1D10FD23227495805A2A PER_LINUX;
$875DC6519C1A1D10FD23227495805A2A PER_LINUX32;
$875DC6519C1A1D10FD23227495805A2A PER_LINUX32_3GB;
$875DC6519C1A1D10FD23227495805A2A PER_LINUX_32BIT;
$875DC6519C1A1D10FD23227495805A2A PER_MASK;
$875DC6519C1A1D10FD23227495805A2A PER_OSF4;
$875DC6519C1A1D10FD23227495805A2A PER_OSR5;
$875DC6519C1A1D10FD23227495805A2A PER_RISCOS;
$875DC6519C1A1D10FD23227495805A2A PER_SCOSVR3;
$875DC6519C1A1D10FD23227495805A2A PER_SOLARIS;
$875DC6519C1A1D10FD23227495805A2A PER_SUNOS;
$875DC6519C1A1D10FD23227495805A2A PER_SVR3;
$875DC6519C1A1D10FD23227495805A2A PER_SVR4;
$875DC6519C1A1D10FD23227495805A2A PER_UW7;
$875DC6519C1A1D10FD23227495805A2A PER_WYSEV386;
$875DC6519C1A1D10FD23227495805A2A PER_XENIX;
MACRO_PF_UNSPEC PF_ALG;
MACRO_PF_UNSPEC PF_APPLETALK;
MACRO_PF_ARM PF_ARM_ABS;
MACRO_PF_ARM PF_ARM_PI;
MACRO_PF_ARM PF_ARM_SB;
MACRO_PF_UNSPEC PF_ASH;
MACRO_PF_UNSPEC PF_ATMPVC;
MACRO_PF_UNSPEC PF_ATMSVC;
MACRO_PF_UNSPEC PF_AX25;
MACRO_PF_UNSPEC PF_BLUETOOTH;
MACRO_PF_UNSPEC PF_BRIDGE;
MACRO_PF_UNSPEC PF_CAIF;
MACRO_PF_UNSPEC PF_CAN;
MACRO_PF_UNSPEC PF_DECnet;
MACRO_PF_UNSPEC PF_ECONET;
MACRO_PF_UNSPEC PF_FILE;
MACRO_PF_PARISC PF_HP_CODE;
MACRO_PF_PARISC PF_HP_FAR_SHARED;
MACRO_PF_PARISC PF_HP_LAZYSWAP;
MACRO_PF_PARISC PF_HP_MODIFY;
MACRO_PF_PARISC PF_HP_NEAR_SHARED;
MACRO_PF_PARISC PF_HP_PAGE_SIZE;
MACRO_PF_PARISC PF_HP_SBP;
MACRO_PF_IA PF_IA_64_NORECOV;
MACRO_PF_UNSPEC PF_IEEE802154;
MACRO_PF_UNSPEC PF_INET;
MACRO_PF_UNSPEC PF_INET6;
MACRO_PF_UNSPEC PF_IPX;
MACRO_PF_UNSPEC PF_IRDA;
MACRO_PF_UNSPEC PF_ISDN;
MACRO_PF_UNSPEC PF_IUCV;
MACRO_PF_UNSPEC PF_KEY;
MACRO_PF_UNSPEC PF_LLC;
MACRO_PF_UNSPEC PF_LOCAL;
MACRO_PF PF_MASKOS;
MACRO_PF PF_MASKPROC;
MACRO_PF_UNSPEC PF_MAX;
MACRO_PF_MIPS PF_MIPS_LOCAL;
MACRO_PF_UNSPEC PF_NETBEUI;
MACRO_PF_UNSPEC PF_NETLINK;
MACRO_PF_UNSPEC PF_NETROM;
MACRO_PF_UNSPEC PF_NFC;
MACRO_PF_UNSPEC PF_PACKET;
MACRO_PF_PARISC PF_PARISC_SBP;
MACRO_PF_UNSPEC PF_PHONET;
MACRO_PF_UNSPEC PF_PPPOX;
MACRO_PF PF_R;
MACRO_PF_UNSPEC PF_RDS;
MACRO_PF_UNSPEC PF_ROSE;
MACRO_PF_UNSPEC PF_ROUTE;
MACRO_PF_UNSPEC PF_RXRPC;
MACRO_PF_UNSPEC PF_SECURITY;
MACRO_PF_UNSPEC PF_SNA;
MACRO_PF_UNSPEC PF_TIPC;
MACRO_PF_UNSPEC PF_UNIX;
MACRO_PF_UNSPEC PF_UNSPEC;
MACRO_PF_UNSPEC PF_VSOCK;
MACRO_PF PF_W;
MACRO_PF_UNSPEC PF_WANPIPE;
MACRO_PF PF_X;
MACRO_PF_UNSPEC PF_X25;
MACRO_CMAP PIO_CMAP;
MACRO_FONT PIO_FONT;
MACRO_PIO PIO_FONTRESET;
MACRO_FONTX PIO_FONTX;
MACRO_SCRNMAP PIO_SCRNMAP;
MACRO_UNIMAP PIO_UNIMAP;
MACRO_PIO_UNIMAPCLR PIO_UNIMAPCLR;
MACRO_UNISCRNMAP PIO_UNISCRNMAP;
MACRO_PIPE PIPE_BUF;
MACRO_PLOSS PLOSS;
MACRO_PMAPPORT PMAPPORT;
MACRO_PMAPPROC PMAPPROC_CALLIT;
MACRO_PMAPPROC PMAPPROC_DUMP;
MACRO_PMAPPROC PMAPPROC_GETPORT;
MACRO_PMAPPROC PMAPPROC_NULL;
MACRO_PMAPPROC PMAPPROC_SET;
MACRO_PMAPPROC PMAPPROC_UNSET;
MACRO_PMAPPROG PMAPPROG;
MACRO_PMAPVERS PMAPVERS;
MACRO_PMAPVERS_PROTO PMAPVERS_ORIG;
MACRO_PMAPVERS_PROTO PMAPVERS_PROTO;
$2EA190A087F83F88A23D8B31FFFB0F26 PM_STR;
MACRO_PN PN_XNUM;
MACRO_POLLERR POLLERR;
MACRO_POLLERR POLLHUP;
MACRO_POLLIN POLLIN;
MACRO_POLLERR POLLNVAL;
MACRO_POLLIN POLLOUT;
MACRO_POLLIN POLLPRI;
MACRO_POLLIN POLLRDBAND;
MACRO_POLLIN POLLRDNORM;
MACRO_POLLIN POLLWRBAND;
MACRO_POLLIN POLLWRNORM;
$6F917803B5EDAFFE6558D2A0AFE2718B POLL_ERR;
$6F917803B5EDAFFE6558D2A0AFE2718B POLL_HUP;
$6F917803B5EDAFFE6558D2A0AFE2718B POLL_IN;
$6F917803B5EDAFFE6558D2A0AFE2718B POLL_MSG;
$6F917803B5EDAFFE6558D2A0AFE2718B POLL_OUT;
$6F917803B5EDAFFE6558D2A0AFE2718B POLL_PRI;
MACRO_POSIX POSIX_FADV_DONTNEED;
MACRO_POSIX POSIX_FADV_NOREUSE;
MACRO_POSIX POSIX_FADV_NORMAL;
MACRO_POSIX POSIX_FADV_RANDOM;
MACRO_POSIX POSIX_FADV_SEQUENTIAL;
MACRO_POSIX POSIX_FADV_WILLNEED;
MACRO_POSIX_MADV POSIX_MADV_DONTNEED;
MACRO_POSIX_MADV POSIX_MADV_NORMAL;
MACRO_POSIX_MADV POSIX_MADV_RANDOM;
MACRO_POSIX_MADV POSIX_MADV_SEQUENTIAL;
MACRO_POSIX_MADV POSIX_MADV_WILLNEED;
MACRO_POSIX_SPAWN POSIX_SPAWN_RESETIDS;
MACRO_POSIX_SPAWN POSIX_SPAWN_SETPGROUP;
MACRO_POSIX_SPAWN POSIX_SPAWN_SETSCHEDPARAM;
MACRO_POSIX_SPAWN POSIX_SPAWN_SETSCHEDULER;
MACRO_POSIX_SPAWN POSIX_SPAWN_SETSIGDEF;
MACRO_POSIX_SPAWN POSIX_SPAWN_SETSIGMASK;
MACRO_PPC64 PPC64_OPT_MULTI_TOC;
MACRO_PPC64 PPC64_OPT_TLS;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_AND;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_AND_OR;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_BE_ALL;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_BE_SHIFT;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_EXACT;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_MODE;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_NONE;
MACRO_PPC_PTRACE PPC_BREAKPOINT_CONDITION_OR;
MACRO_PPC_PTRACE PPC_BREAKPOINT_MODE_EXACT;
MACRO_PPC_PTRACE PPC_BREAKPOINT_MODE_MASK;
MACRO_PPC_PTRACE PPC_BREAKPOINT_MODE_RANGE_EXCLUSIVE;
MACRO_PPC_PTRACE PPC_BREAKPOINT_MODE_RANGE_INCLUSIVE;
MACRO_PPC_PTRACE PPC_BREAKPOINT_TRIGGER_EXECUTE;
MACRO_PPC_PTRACE PPC_BREAKPOINT_TRIGGER_READ;
MACRO_PPC_PTRACE PPC_BREAKPOINT_TRIGGER_RW;
MACRO_PPC_PTRACE PPC_BREAKPOINT_TRIGGER_WRITE;
MACRO_PPC_PTRACE PPC_DEBUG_FEATURE_DATA_BP_DAWR;
MACRO_PPC_PTRACE PPC_DEBUG_FEATURE_DATA_BP_MASK;
MACRO_PPC_PTRACE PPC_DEBUG_FEATURE_DATA_BP_RANGE;
MACRO_PPC_PTRACE PPC_DEBUG_FEATURE_INSN_BP_MASK;
MACRO_PPC_PTRACE PPC_DEBUG_FEATURE_INSN_BP_RANGE;
MACRO_PPC_PTRACE PPC_PTRACE_DELHWDEBUG;
MACRO_PPC_PTRACE PPC_PTRACE_GETHWDBGINFO;
MACRO_PPC PPC_PTRACE_PEEKDATA_3264;
MACRO_PPC PPC_PTRACE_PEEKTEXT_3264;
MACRO_PPC PPC_PTRACE_PEEKUSR_3264;
MACRO_PPC PPC_PTRACE_POKEDATA_3264;
MACRO_PPC PPC_PTRACE_POKETEXT_3264;
MACRO_PPC PPC_PTRACE_POKEUSR_3264;
MACRO_PPC_PTRACE PPC_PTRACE_SETHWDEBUG;
MACRO_PPP PPP_ALLSTATIONS;
MACRO_PPP PPP_AT;
MACRO_PPP PPP_ATCP;
MACRO_PPP PPP_CBCP;
MACRO_PPP PPP_CCP;
MACRO_PPP PPP_CCPFRAG;
MACRO_PPP PPP_CHAP;
MACRO_PPP PPP_COMP;
MACRO_PPP PPP_COMPFRAG;
MACRO_PPP PPP_ESCAPE;
MACRO_PPP PPP_FCSLEN;
MACRO_PPP PPP_FLAG;
MACRO_PPP PPP_GOODFCS;
MACRO_PPP PPP_HDRLEN;
MACRO_PPP PPP_INITFCS;
MACRO_PPP PPP_IP;
MACRO_PPP PPP_IPCP;
MACRO_PPP PPP_IPV6;
MACRO_PPP PPP_IPV6CP;
MACRO_PPP PPP_IPX;
MACRO_PPP PPP_IPXCP;
MACRO_PPP PPP_LCP;
MACRO_PPP PPP_LQR;
MACRO_PPP PPP_MP;
MACRO_PPP PPP_MPLSCP;
MACRO_PPP PPP_MPLS_MC;
MACRO_PPP PPP_MPLS_UC;
MACRO_PPP PPP_MRU;
MACRO_PPP PPP_PAP;
MACRO_PPP PPP_TRANS;
MACRO_PPP PPP_UI;
MACRO_PPP PPP_VJC_COMP;
MACRO_PPP PPP_VJC_UNCOMP;
MACRO_PRELIM PRELIM;
MACRO_PRIO PRIO_MAX;
MACRO_PRIO PRIO_MIN;
__priority_which PRIO_PGRP;
__priority_which PRIO_PROCESS;
__priority_which PRIO_USER;
accept_stat PROC_UNAVAIL;
$730196AC61DA5EA630CA6661CED053E5 PROF_FAST;
$730196AC61DA5EA630CA6661CED053E5 PROF_UINT;
$730196AC61DA5EA630CA6661CED053E5 PROF_USHORT;
accept_stat PROG_MISMATCH;
accept_stat PROG_UNAVAIL;
MACRO_PROOT PROOT;
MACRO_PROT_READ PROT_EXEC;
MACRO_PROT_READ PROT_GROWSDOWN;
MACRO_PROT_READ PROT_GROWSUP;
MACRO_PROT_READ PROT_NONE;
MACRO_PROT_READ PROT_READ;
MACRO_PROT PROT_SAO;
MACRO_PROT_READ PROT_WRITE;
MACRO_PR PR_CAPBSET_DROP;
MACRO_PR PR_CAPBSET_READ;
MACRO_PR PR_ENDIAN_BIG;
MACRO_PR PR_ENDIAN_LITTLE;
MACRO_PR PR_ENDIAN_PPC_LITTLE;
MACRO_PR PR_FPEMU_NOPRINT;
MACRO_PR PR_FPEMU_SIGFPE;
MACRO_PR PR_FP_EXC_ASYNC;
MACRO_PR PR_FP_EXC_DISABLED;
MACRO_PR PR_FP_EXC_DIV;
MACRO_PR PR_FP_EXC_INV;
MACRO_PR PR_FP_EXC_NONRECOV;
MACRO_PR PR_FP_EXC_OVF;
MACRO_PR PR_FP_EXC_PRECISE;
MACRO_PR PR_FP_EXC_RES;
MACRO_PR PR_FP_EXC_SW_ENABLE;
MACRO_PR PR_FP_EXC_UND;
MACRO_PR PR_GET_CHILD_SUBREAPER;
MACRO_PR PR_GET_DUMPABLE;
MACRO_PR PR_GET_ENDIAN;
MACRO_PR PR_GET_FPEMU;
MACRO_PR PR_GET_FPEXC;
MACRO_PR PR_GET_KEEPCAPS;
MACRO_PR PR_GET_NAME;
MACRO_PR PR_GET_NO_NEW_PRIVS;
MACRO_PR PR_GET_PDEATHSIG;
MACRO_PR PR_GET_SECCOMP;
MACRO_PR PR_GET_SECUREBITS;
MACRO_PR PR_GET_THP_DISABLE;
MACRO_PR PR_GET_TID_ADDRESS;
MACRO_PR PR_GET_TIMERSLACK;
MACRO_PR PR_GET_TIMING;
MACRO_PR PR_GET_TSC;
MACRO_PR PR_GET_UNALIGN;
MACRO_PR PR_MCE_KILL;
MACRO_PR PR_MCE_KILL_CLEAR;
MACRO_PR PR_MCE_KILL_DEFAULT;
MACRO_PR PR_MCE_KILL_EARLY;
MACRO_PR PR_MCE_KILL_GET;
MACRO_PR PR_MCE_KILL_LATE;
MACRO_PR PR_MCE_KILL_SET;
MACRO_PR PR_MPX_DISABLE_MANAGEMENT;
MACRO_PR PR_MPX_ENABLE_MANAGEMENT;
MACRO_PR PR_SET_CHILD_SUBREAPER;
MACRO_PR PR_SET_DUMPABLE;
MACRO_PR PR_SET_ENDIAN;
MACRO_PR PR_SET_FPEMU;
MACRO_PR PR_SET_FPEXC;
MACRO_PR PR_SET_KEEPCAPS;
MACRO_PR PR_SET_MM;
MACRO_PR PR_SET_MM_ARG_END;
MACRO_PR PR_SET_MM_ARG_START;
MACRO_PR PR_SET_MM_AUXV;
MACRO_PR PR_SET_MM_BRK;
MACRO_PR PR_SET_MM_END_CODE;
MACRO_PR PR_SET_MM_END_DATA;
MACRO_PR PR_SET_MM_ENV_END;
MACRO_PR PR_SET_MM_ENV_START;
MACRO_PR PR_SET_MM_EXE_FILE;
MACRO_PR PR_SET_MM_MAP;
MACRO_PR PR_SET_MM_MAP_SIZE;
MACRO_PR PR_SET_MM_START_BRK;
MACRO_PR PR_SET_MM_START_CODE;
MACRO_PR PR_SET_MM_START_DATA;
MACRO_PR PR_SET_MM_START_STACK;
MACRO_PR PR_SET_NAME;
MACRO_PR PR_SET_NO_NEW_PRIVS;
MACRO_PR PR_SET_PDEATHSIG;
MACRO_PR PR_SET_PTRACER;
MACRO_PR PR_SET_PTRACER_ANY;
MACRO_PR PR_SET_SECCOMP;
MACRO_PR PR_SET_SECUREBITS;
MACRO_PR PR_SET_THP_DISABLE;
MACRO_PR PR_SET_TIMERSLACK;
MACRO_PR PR_SET_TIMING;
MACRO_PR PR_SET_TSC;
MACRO_PR PR_SET_UNALIGN;
MACRO_PR PR_TASK_PERF_EVENTS_DISABLE;
MACRO_PR PR_TASK_PERF_EVENTS_ENABLE;
MACRO_PR PR_TIMING_STATISTICAL;
MACRO_PR PR_TIMING_TIMESTAMP;
MACRO_PR PR_TSC_ENABLE;
MACRO_PR PR_TSC_SIGSEGV;
MACRO_PR PR_UNALIGN_NOPRINT;
MACRO_PR PR_UNALIGN_SIGBUS;
MACRO_PTHREAD_CANCELED PTHREAD_BARRIER_SERIAL_THREAD;
MACRO_PTHREAD_CANCELED PTHREAD_CANCELED;
$0D28A6D9277963163067C053D6D791C2 PTHREAD_CANCEL_ASYNCHRONOUS;
$0D28A6D9277963163067C053D6D791C2 PTHREAD_CANCEL_DEFERRED;
$DC2797625D574A9AF0B4A811E544652D PTHREAD_CANCEL_DISABLE;
$DC2797625D574A9AF0B4A811E544652D PTHREAD_CANCEL_ENABLE;
$16B0B93CB8DD7194C50FFF250111CAE4 PTHREAD_CREATE_DETACHED;
$16B0B93CB8DD7194C50FFF250111CAE4 PTHREAD_CREATE_JOINABLE;
MACRO_DESTRUCTOR_ITERATIONS PTHREAD_DESTRUCTOR_ITERATIONS;
$C24571D27ADEE20044434E1DF48F13D7 PTHREAD_EXPLICIT_SCHED;
$C24571D27ADEE20044434E1DF48F13D7 PTHREAD_INHERIT_SCHED;
MACRO_PTHREAD PTHREAD_KEYS_MAX;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_ADAPTIVE_NP;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_DEFAULT;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_ERRORCHECK;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_ERRORCHECK_NP;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_NORMAL;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_RECURSIVE;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_RECURSIVE_NP;
$FCDACB232C33C8C505189913D48887B6 PTHREAD_MUTEX_ROBUST;
$FCDACB232C33C8C505189913D48887B6 PTHREAD_MUTEX_ROBUST_NP;
$FCDACB232C33C8C505189913D48887B6 PTHREAD_MUTEX_STALLED;
$FCDACB232C33C8C505189913D48887B6 PTHREAD_MUTEX_STALLED_NP;
$7E268016F40A063312945FF1D605C66E PTHREAD_MUTEX_TIMED_NP;
MACRO_PTHREAD_CANCELED PTHREAD_ONCE_INIT;
$D0804338FED1974BA189E0DED05FD517 PTHREAD_PRIO_INHERIT;
$D0804338FED1974BA189E0DED05FD517 PTHREAD_PRIO_NONE;
$D0804338FED1974BA189E0DED05FD517 PTHREAD_PRIO_PROTECT;
$51BDFC43F8CE98845B5B58BAECF68DA1 PTHREAD_PROCESS_PRIVATE;
$51BDFC43F8CE98845B5B58BAECF68DA1 PTHREAD_PROCESS_SHARED;
$08676B761D46AC0E8736B97FA3DBC486 PTHREAD_RWLOCK_DEFAULT_NP;
$08676B761D46AC0E8736B97FA3DBC486 PTHREAD_RWLOCK_PREFER_READER_NP;
$08676B761D46AC0E8736B97FA3DBC486 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP;
$08676B761D46AC0E8736B97FA3DBC486 PTHREAD_RWLOCK_PREFER_WRITER_NP;
$E12B6EC3796E924F65D7BDA27D4A9CE5 PTHREAD_SCOPE_PROCESS;
$E12B6EC3796E924F65D7BDA27D4A9CE5 PTHREAD_SCOPE_SYSTEM;
MACRO_PTHREAD_STACK PTHREAD_STACK_MIN;
__ptrace_request PTRACE_ATTACH;
__ptrace_request PTRACE_CONT;
__ptrace_request PTRACE_DETACH;
__ptrace_eventcodes PTRACE_EVENT_CLONE;
__ptrace_eventcodes PTRACE_EVENT_EXEC;
__ptrace_eventcodes PTRACE_EVENT_EXIT;
__ptrace_eventcodes PTRACE_EVENT_FORK;
__ptrace_eventcodes PTRACE_EVENT_SECCOMP;
__ptrace_eventcodes PTRACE_EVENT_VFORK;
__ptrace_eventcodes PTRACE_EVENT_VFORK_DONE;
__ptrace_request PTRACE_GETEVENTMSG;
MACRO_PTRACE PTRACE_GETEVRREGS;
MACRO_PTRACE PTRACE_GETFPREGS;
MACRO_PTRACE PTRACE_GETREGS;
MACRO_PTRACE PTRACE_GETREGS64;
__ptrace_request PTRACE_GETREGSET;
__ptrace_request PTRACE_GETSIGINFO;
MACRO_PTRACE PTRACE_GETVRREGS;
MACRO_PTRACE PTRACE_GETVSRREGS;
MACRO_PTRACE PTRACE_GET_DEBUGREG;
__ptrace_request PTRACE_INTERRUPT;
__ptrace_request PTRACE_KILL;
__ptrace_request PTRACE_LISTEN;
__ptrace_setoptions PTRACE_O_EXITKILL;
__ptrace_setoptions PTRACE_O_MASK;
__ptrace_setoptions PTRACE_O_TRACECLONE;
__ptrace_setoptions PTRACE_O_TRACEEXEC;
__ptrace_setoptions PTRACE_O_TRACEEXIT;
__ptrace_setoptions PTRACE_O_TRACEFORK;
__ptrace_setoptions PTRACE_O_TRACESECCOMP;
__ptrace_setoptions PTRACE_O_TRACESYSGOOD;
__ptrace_setoptions PTRACE_O_TRACEVFORK;
__ptrace_setoptions PTRACE_O_TRACEVFORKDONE;
__ptrace_request PTRACE_PEEKDATA;
__ptrace_request PTRACE_PEEKSIGINFO;
__ptrace_peeksiginfo_flags PTRACE_PEEKSIGINFO_SHARED;
__ptrace_request PTRACE_PEEKTEXT;
__ptrace_request PTRACE_PEEKUSER;
__ptrace_request PTRACE_POKEDATA;
__ptrace_request PTRACE_POKETEXT;
__ptrace_request PTRACE_POKEUSER;
__ptrace_request PTRACE_SEIZE;
__ptrace_flags PTRACE_SEIZE_DEVEL;
MACRO_PTRACE PTRACE_SETEVRREGS;
MACRO_PTRACE PTRACE_SETFPREGS;
__ptrace_request PTRACE_SETOPTIONS;
MACRO_PTRACE PTRACE_SETREGS;
MACRO_PTRACE PTRACE_SETREGS64;
__ptrace_request PTRACE_SETREGSET;
__ptrace_request PTRACE_SETSIGINFO;
MACRO_PTRACE PTRACE_SETVRREGS;
MACRO_PTRACE PTRACE_SETVSRREGS;
MACRO_PTRACE PTRACE_SET_DEBUGREG;
MACRO_PTRACE_SINGLEBLOCK PTRACE_SINGLEBLOCK;
__ptrace_request PTRACE_SINGLESTEP;
__ptrace_request PTRACE_SYSCALL;
__ptrace_request PTRACE_TRACEME;
MACRO_PTRDIFF PTRDIFF_MAX;
MACRO_PTRDIFF PTRDIFF_MIN;
$E385CDEA8CFF6E4370ACEA6C55A0E665 PTY_MAX;
$E385CDEA8CFF6E4370ACEA6C55A0E665 PTY_NR;
MACRO_ARM_EXIDX PT_ARM_EXIDX;
MACRO_PT_R0 PT_CCR;
MACRO_PT_R0 PT_CTR;
MACRO_PT_R0 PT_DAR;
MACRO_PT_R0 PT_DSCR;
MACRO_PT_R0 PT_DSISR;
MACRO_PT PT_DYNAMIC;
MACRO_PT_R0 PT_FPR0;
MACRO_PT_R0 PT_FPR31;
MACRO_PT_R0 PT_FPSCR;
MACRO_PT PT_GNU_EH_FRAME;
MACRO_PT PT_GNU_RELRO;
MACRO_PT PT_GNU_STACK;
MACRO_PT PT_HIOS;
MACRO_PT PT_HIPROC;
MACRO_PT PT_HISUNW;
MACRO_PT_HP PT_HP_CORE_COMM;
MACRO_PT_HP PT_HP_CORE_KERNEL;
MACRO_PT_HP PT_HP_CORE_LOADABLE;
MACRO_PT_HP PT_HP_CORE_MMF;
MACRO_PT_HP PT_HP_CORE_NONE;
MACRO_PT_HP PT_HP_CORE_PROC;
MACRO_PT_HP PT_HP_CORE_SHM;
MACRO_PT_HP PT_HP_CORE_STACK;
MACRO_PT_HP PT_HP_CORE_VERSION;
MACRO_PT_HP PT_HP_FASTBIND;
MACRO_PT_HP PT_HP_HSL_ANNOT;
MACRO_PT_HP PT_HP_OPT_ANNOT;
MACRO_PT_HP PT_HP_PARALLEL;
MACRO_PT_HP PT_HP_STACK;
MACRO_PT_HP PT_HP_TLS;
MACRO_PT_IA PT_IA_64_ARCHEXT;
MACRO_PT_IA PT_IA_64_HP_HSL_ANOT;
MACRO_PT_IA PT_IA_64_HP_OPT_ANOT;
MACRO_PT_IA PT_IA_64_HP_STACK;
MACRO_PT_IA PT_IA_64_UNWIND;
MACRO_PT PT_INTERP;
MACRO_PT_R0 PT_LNK;
MACRO_PT PT_LOAD;
MACRO_PT PT_LOOS;
MACRO_PT PT_LOPROC;
MACRO_PT PT_LOSUNW;
MACRO_PT_MIPS PT_MIPS_ABIFLAGS;
MACRO_PT_MIPS PT_MIPS_OPTIONS;
MACRO_PT_MIPS PT_MIPS_REGINFO;
MACRO_PT_MIPS PT_MIPS_RTPROC;
MACRO_PT_R0 PT_MQ;
MACRO_PT_R0 PT_MSR;
MACRO_PT_R0 PT_NIP;
MACRO_PT PT_NOTE;
MACRO_PT PT_NULL;
MACRO_PT PT_NUM;
MACRO_PT_R0 PT_ORIG_R3;
MACRO_PT_HP PT_PARISC_ARCHEXT;
MACRO_PT_HP PT_PARISC_UNWIND;
MACRO_PT PT_PHDR;
MACRO_PT_R0 PT_R0;
MACRO_PT_R0 PT_R1;
MACRO_PT_R0 PT_R10;
MACRO_PT_R0 PT_R11;
MACRO_PT_R0 PT_R12;
MACRO_PT_R0 PT_R13;
MACRO_PT_R0 PT_R14;
MACRO_PT_R0 PT_R15;
MACRO_PT_R0 PT_R16;
MACRO_PT_R0 PT_R17;
MACRO_PT_R0 PT_R18;
MACRO_PT_R0 PT_R19;
MACRO_PT_R0 PT_R2;
MACRO_PT_R0 PT_R20;
MACRO_PT_R0 PT_R21;
MACRO_PT_R0 PT_R22;
MACRO_PT_R0 PT_R23;
MACRO_PT_R0 PT_R24;
MACRO_PT_R0 PT_R25;
MACRO_PT_R0 PT_R26;
MACRO_PT_R0 PT_R27;
MACRO_PT_R0 PT_R28;
MACRO_PT_R0 PT_R29;
MACRO_PT_R0 PT_R3;
MACRO_PT_R0 PT_R30;
MACRO_PT_R0 PT_R31;
MACRO_PT_R0 PT_R4;
MACRO_PT_R0 PT_R5;
MACRO_PT_R0 PT_R6;
MACRO_PT_R0 PT_R7;
MACRO_PT_R0 PT_R8;
MACRO_PT_R0 PT_R9;
MACRO_PT_R0 PT_REGS_COUNT;
MACRO_PT_R0 PT_RESULT;
MACRO_PT PT_SHLIB;
MACRO_PT PT_SUNWBSS;
MACRO_PT PT_SUNWSTACK;
MACRO_PT PT_TLS;
MACRO_PT_R0 PT_TRAP;
MACRO_PT_R0 PT_XER;
$891529C55A3D7F6C466AE0BA608A35EA P_ALL;
$891529C55A3D7F6C466AE0BA608A35EA P_PGID;
$891529C55A3D7F6C466AE0BA608A35EA P_PID;
MACRO_QFIXEDSZ QFIXEDSZ;
MACRO_QIF QIF_ALL;
MACRO_QIF QIF_BLIMITS;
MACRO_QIF QIF_BTIME;
MACRO_QIF QIF_ILIMITS;
MACRO_QIF QIF_INODES;
MACRO_QIF QIF_ITIME;
MACRO_QIF QIF_LIMITS;
MACRO_QIF QIF_SPACE;
MACRO_QIF QIF_TIMES;
MACRO_QIF QIF_USAGE;
MACRO_Q Q_GETFMT;
MACRO_Q Q_GETINFO;
MACRO_Q Q_GETQUOTA;
MACRO_Q Q_QUOTAOFF;
MACRO_Q Q_QUOTAON;
MACRO_Q Q_SETINFO;
MACRO_Q Q_SETQUOTA;
MACRO_Q Q_SYNC;
$2EA190A087F83F88A23D8B31FFFB0F26 RADIXCHAR;
$807353C2561437682B85CDC20D8F25D2 RANDOM_BOOT_ID;
$807353C2561437682B85CDC20D8F25D2 RANDOM_ENTROPY_COUNT;
$807353C2561437682B85CDC20D8F25D2 RANDOM_POOLSIZE;
$807353C2561437682B85CDC20D8F25D2 RANDOM_READ_THRESH;
$807353C2561437682B85CDC20D8F25D2 RANDOM_UUID;
$807353C2561437682B85CDC20D8F25D2 RANDOM_WRITE_THRESH;
MACRO_RAND RAND_MAX;
MACRO_RAW RAW_GETBIND;
MACRO_RAW RAW_MAJOR;
MACRO_RAW RAW_SETBIND;
MACRO_RB RB_AUTOBOOT;
MACRO_RB RB_DISABLE_CAD;
MACRO_RB RB_ENABLE_CAD;
MACRO_RB RB_HALT_SYSTEM;
MACRO_RB RB_KEXEC;
MACRO_RB RB_POWER_OFF;
MACRO_RB RB_SW_SUSPEND;
$F1F648DD099C1B085CB728875CF977ED READ_IMPLIES_EXEC;
MACRO_REC REC_EOF;
MACRO_REC REC_EOR;
MACRO_REC REC_ESC;
MACRO_TOEXEC REGTYPE;
$8B8F331936A9C3786664C6159BA2308F REG_BADBR;
$8B8F331936A9C3786664C6159BA2308F REG_BADPAT;
$8B8F331936A9C3786664C6159BA2308F REG_BADRPT;
$8B8F331936A9C3786664C6159BA2308F REG_EBRACE;
$8B8F331936A9C3786664C6159BA2308F REG_EBRACK;
$8B8F331936A9C3786664C6159BA2308F REG_ECOLLATE;
$8B8F331936A9C3786664C6159BA2308F REG_ECTYPE;
$8B8F331936A9C3786664C6159BA2308F REG_EEND;
$8B8F331936A9C3786664C6159BA2308F REG_EESCAPE;
$8B8F331936A9C3786664C6159BA2308F REG_ENOSYS;
$8B8F331936A9C3786664C6159BA2308F REG_EPAREN;
$8B8F331936A9C3786664C6159BA2308F REG_ERANGE;
$8B8F331936A9C3786664C6159BA2308F REG_ERPAREN;
$8B8F331936A9C3786664C6159BA2308F REG_ESIZE;
$8B8F331936A9C3786664C6159BA2308F REG_ESPACE;
$8B8F331936A9C3786664C6159BA2308F REG_ESUBREG;
MACRO_REG REG_EXTENDED;
MACRO_REG REG_ICASE;
MACRO_REG REG_NEWLINE;
$8B8F331936A9C3786664C6159BA2308F REG_NOERROR;
$8B8F331936A9C3786664C6159BA2308F REG_NOMATCH;
MACRO_REG REG_NOSUB;
MACRO_REG REG_NOTBOL;
MACRO_REG REG_NOTEOL;
MACRO_REG REG_STARTEND;
msg_type REPLY;
MACRO_RES_F RES_AAONLY;
MACRO_RES_F RES_BLAST;
MACRO_RES_F RES_DEBUG;
MACRO_RES_F RES_DEFAULT;
MACRO_RES_F RES_DEFNAMES;
MACRO_RES_MAXNDOTS RES_DFLRETRY;
MACRO_RES_F RES_DNSRCH;
MACRO_RES_F RES_EXHAUSTIVE;
MACRO_RES_F RES_F_CONN;
MACRO_RES_F RES_F_EDNS0ERR;
MACRO_RES_F RES_F_VC;
MACRO_RES_F RES_IGNTC;
MACRO_RES_F RES_INIT;
MACRO_RES_F RES_INSECURE1;
MACRO_RES_F RES_INSECURE2;
MACRO_RES_F RES_KEEPTSIG;
MACRO_RES_MAXNDOTS RES_MAXNDOTS;
MACRO_RES_MAXNDOTS RES_MAXRETRANS;
MACRO_RES_MAXNDOTS RES_MAXRETRY;
MACRO_RES_MAXNDOTS RES_MAXTIME;
MACRO_RES_F RES_NOALIASES;
MACRO_RES_F RES_NOCHECKNAME;
MACRO_RES_F RES_NOIP6DOTINT;
MACRO_RES_F RES_NOTLDQUERY;
MACRO_RES_F RES_PRF_ADD;
MACRO_RES_F RES_PRF_ANS;
MACRO_RES_F RES_PRF_AUTH;
MACRO_RES_F RES_PRF_CLASS;
MACRO_RES_F RES_PRF_CMD;
MACRO_RES_F RES_PRF_HEAD1;
MACRO_RES_F RES_PRF_HEAD2;
MACRO_RES_F RES_PRF_HEADX;
MACRO_RES_F RES_PRF_INIT;
MACRO_RES_F RES_PRF_QUERY;
MACRO_RES_F RES_PRF_QUES;
MACRO_RES_F RES_PRF_REPLY;
MACRO_RES_F RES_PRF_STATS;
MACRO_RES_F RES_PRF_TTLID;
MACRO_RES_F RES_PRF_UPDATE;
MACRO_RES_F RES_PRIMARY;
MACRO_RES_F RES_RECURSE;
MACRO_RES_F RES_ROTATE;
MACRO_RES_F RES_SNGLKUP;
MACRO_RES_F RES_SNGLKUPREOP;
MACRO_RES_F RES_STAYOPEN;
MACRO_RES RES_TIMEOUT;
MACRO_RES_F RES_USEBSTRING;
MACRO_RES_F RES_USEVC;
MACRO_RES_F RES_USE_DNSSEC;
MACRO_RES_F RES_USE_EDNS0;
MACRO_RES_F RES_USE_INET6;
MACRO_COLL RE_DUP_MAX;
MACRO_RHF RHF_CORD;
MACRO_RHF RHF_DEFAULT_DELAY_LOAD;
MACRO_RHF RHF_DELTA_C_PLUS_PLUS;
MACRO_RHF RHF_GUARANTEE_INIT;
MACRO_RHF RHF_GUARANTEE_START_INIT;
MACRO_RHF RHF_NONE;
MACRO_RHF RHF_NOTPOT;
MACRO_RHF RHF_NO_LIBRARY_REPLACEMENT;
MACRO_RHF RHF_NO_MOVE;
MACRO_RHF RHF_NO_UNRES_UNDEF;
MACRO_RHF RHF_PIXIE;
MACRO_RHF RHF_QUICKSTART;
MACRO_RHF RHF_REQUICKSTART;
MACRO_RHF RHF_REQUICKSTARTED;
MACRO_RHF RHF_RLD_ORDER_SAFE;
MACRO_RHF RHF_SGI_ONLY;
MACRO_RING RING_WAIT;
MACRO_RIPCMD RIPCMD_MAX;
MACRO_RIPCMD RIPCMD_REQUEST;
MACRO_RIPCMD RIPCMD_RESPONSE;
MACRO_RIPCMD RIPCMD_TRACEOFF;
MACRO_RIPCMD RIPCMD_TRACEON;
MACRO_RIPVERSION RIPVERSION;
__rlimit_resource RLIMIT_AS;
__rlimit_resource RLIMIT_CORE;
__rlimit_resource RLIMIT_CPU;
__rlimit_resource RLIMIT_DATA;
__rlimit_resource RLIMIT_FSIZE;
__rlimit_resource RLIMIT_NOFILE;
__rlimit_resource RLIMIT_STACK;
MACRO_RLIM RLIM_INFINITY;
MACRO_RLIM RLIM_SAVED_CUR;
MACRO_RLIM RLIM_SAVED_MAX;
MACRO_RNORM RMSGD;
MACRO_RNORM RMSGN;
MACRO_RNORM RNORM;
MACRO_ROSE_DTE ROSE_ACCESS_BARRED;
MACRO_ROSE ROSE_DEFER;
MACRO_ROSE_DTE ROSE_DTE_ORIGINATED;
MACRO_ROSE ROSE_HOLDBACK;
MACRO_ROSE ROSE_IDLE;
MACRO_ROSE_DTE ROSE_INVALID_FACILITY;
MACRO_ROSE_DTE ROSE_LOCAL_PROCEDURE;
MACRO_ROSE ROSE_MAX_DIGIS;
MACRO_ROSE ROSE_MTU;
MACRO_ROSE_DTE ROSE_NETWORK_CONGESTION;
MACRO_ROSE_DTE ROSE_NOT_OBTAINABLE;
MACRO_ROSE_DTE ROSE_NUMBER_BUSY;
MACRO_ROSE_DTE ROSE_OUT_OF_ORDER;
MACRO_ROSE ROSE_QBITINCL;
MACRO_ROSE_DTE ROSE_REMOTE_PROCEDURE;
MACRO_ROSE_DTE ROSE_SHIP_ABSENT;
MACRO_ROSE ROSE_T1;
MACRO_ROSE ROSE_T2;
MACRO_ROSE ROSE_T3;
MACRO_RPCSMALLMSGSIZE RPCSMALLMSGSIZE;
MACRO_RPCTEST RPCTEST_NULL_BATCH_PROC;
MACRO_RPCTEST RPCTEST_NULL_PROC;
MACRO_RPCTEST RPCTEST_PROGRAM;
MACRO_RPCTEST RPCTEST_VERSION;
MACRO_RPC_ANYSOCK RPC_ANYSOCK;
clnt_stat RPC_AUTHERROR;
clnt_stat RPC_CANTDECODEARGS;
clnt_stat RPC_CANTDECODERES;
clnt_stat RPC_CANTENCODEARGS;
clnt_stat RPC_CANTRECV;
clnt_stat RPC_CANTSEND;
clnt_stat RPC_FAILED;
clnt_stat RPC_INPROGRESS;
clnt_stat RPC_INTR;
reject_stat RPC_MISMATCH;
MACRO_RPC RPC_MSG_VERSION;
clnt_stat RPC_N2AXLATEFAILURE;
clnt_stat RPC_NOBROADCAST;
clnt_stat RPC_PROCUNAVAIL;
clnt_stat RPC_PROGNOTREGISTERED;
clnt_stat RPC_PROGUNAVAIL;
clnt_stat RPC_PROGVERSMISMATCH;
clnt_stat RPC_RPCBFAILURE;
MACRO_RPC RPC_SERVICE_PORT;
clnt_stat RPC_STALERACHANDLE;
clnt_stat RPC_SUCCESS;
clnt_stat RPC_SYSTEMERROR;
clnt_stat RPC_TIMEDOUT;
clnt_stat RPC_TLIERROR;
clnt_stat RPC_UDERROR;
clnt_stat RPC_UNKNOWNADDR;
clnt_stat RPC_UNKNOWNHOST;
clnt_stat RPC_UNKNOWNPROTO;
clnt_stat RPC_VERSMISMATCH;
MACRO_RPM RPM_PCO_ADD;
MACRO_RPM RPM_PCO_CHANGE;
MACRO_RPM RPM_PCO_SETGLOBAL;
MACRO_RNORM RPROTDAT;
MACRO_RNORM RPROTDIS;
MACRO_RNORM RPROTNORM;
MACRO_QFIXEDSZ RRFIXEDSZ;
MACRO_RRQ RRQ;
MACRO_RS RS_HIPRI;
MACRO_RTCF RTCF_DIRECTSRC;
MACRO_RTCF RTCF_DOREDIRECT;
MACRO_RTCF RTCF_LOG;
MACRO_RTCF RTCF_MASQ;
MACRO_RTCF RTCF_NAT;
MACRO_RTCF RTCF_VALVE;
MACRO_RTF_LOCAL RTF_ADDRCLASSMASK;
MACRO_RTF RTF_ADDRCONF;
MACRO_RTF RTF_ALLONLINK;
MACRO_RTF_LOCAL RTF_BROADCAST;
MACRO_RTF RTF_CACHE;
MACRO_RTF RTF_DEFAULT;
MACRO_RTF RTF_DYNAMIC;
MACRO_RTF RTF_FLOW;
MACRO_RTF RTF_GATEWAY;
MACRO_RTF RTF_HOST;
MACRO_RTF_LOCAL RTF_INTERFACE;
MACRO_RTF RTF_IRTT;
MACRO_RTF RTF_LINKRT;
MACRO_RTF_LOCAL RTF_LOCAL;
MACRO_RTF RTF_MODIFIED;
MACRO_RTF RTF_MSS;
MACRO_RTF RTF_MTU;
MACRO_RTF_LOCAL RTF_MULTICAST;
MACRO_RTF_LOCAL RTF_NAT;
MACRO_RTF RTF_NOFORWARD;
MACRO_RTF RTF_NONEXTHOP;
MACRO_RTF RTF_NOPMTUDISC;
MACRO_RTF RTF_POLICY;
MACRO_RTF RTF_REINSTATE;
MACRO_RTF RTF_REJECT;
MACRO_RTF RTF_STATIC;
MACRO_RTF RTF_THROW;
MACRO_RTF RTF_UP;
MACRO_RTF RTF_WINDOW;
MACRO_RTF RTF_XRESOLVE;
MACRO_RTLD RTLD_BINDING_MASK;
MACRO_RTLD RTLD_DEEPBIND;
MACRO_RTLD RTLD_GLOBAL;
MACRO_RTLD RTLD_LAZY;
MACRO_RTLD RTLD_LOCAL;
MACRO_RTLD RTLD_NODELETE;
MACRO_RTLD RTLD_NOLOAD;
MACRO_RTLD RTLD_NOW;
MACRO_RTMSG RTMSG_AR_FAILED;
MACRO_RTMSG RTMSG_CONTROL;
MACRO_RTMSG RTMSG_DELDEVICE;
MACRO_RTMSG RTMSG_DELROUTE;
MACRO_RTMSG RTMSG_DELRULE;
MACRO_RTMSG RTMSG_NEWDEVICE;
MACRO_RTMSG RTMSG_NEWROUTE;
MACRO_RTMSG RTMSG_NEWRULE;
MACRO_RTSIG RTSIG_MAX;
r_debug::$AF097615159EB3CBDA82C5A5C14EBA11 RT_ADD;
MACRO_RT RT_CLASS_DEFAULT;
MACRO_RT RT_CLASS_LOCAL;
MACRO_RT RT_CLASS_MAIN;
MACRO_RT RT_CLASS_MAX;
MACRO_RT RT_CLASS_UNSPEC;
r_debug::$AF097615159EB3CBDA82C5A5C14EBA11 RT_CONSISTENT;
r_debug::$AF097615159EB3CBDA82C5A5C14EBA11 RT_DELETE;
MACRO_RUN RUN_LVL;
__rusage_who RUSAGE_CHILDREN;
__rusage_who RUSAGE_SELF;
MACRO_R R_386_16;
MACRO_R R_386_32;
MACRO_R R_386_32PLT;
MACRO_R R_386_8;
MACRO_R R_386_COPY;
MACRO_R R_386_GLOB_DAT;
MACRO_R R_386_GOT32;
MACRO_R R_386_GOTOFF;
MACRO_R R_386_GOTPC;
MACRO_R R_386_IRELATIVE;
MACRO_R R_386_JMP_SLOT;
MACRO_R R_386_NONE;
MACRO_R R_386_NUM;
MACRO_R R_386_PC16;
MACRO_R R_386_PC32;
MACRO_R R_386_PC8;
MACRO_R R_386_PLT32;
MACRO_R R_386_RELATIVE;
MACRO_R R_386_SIZE32;
MACRO_R R_386_TLS_DESC;
MACRO_R R_386_TLS_DESC_CALL;
MACRO_R R_386_TLS_DTPMOD32;
MACRO_R R_386_TLS_DTPOFF32;
MACRO_R R_386_TLS_GD;
MACRO_R R_386_TLS_GD_32;
MACRO_R R_386_TLS_GD_CALL;
MACRO_R R_386_TLS_GD_POP;
MACRO_R R_386_TLS_GD_PUSH;
MACRO_R R_386_TLS_GOTDESC;
MACRO_R R_386_TLS_GOTIE;
MACRO_R R_386_TLS_IE;
MACRO_R R_386_TLS_IE_32;
MACRO_R R_386_TLS_LDM;
MACRO_R R_386_TLS_LDM_32;
MACRO_R R_386_TLS_LDM_CALL;
MACRO_R R_386_TLS_LDM_POP;
MACRO_R R_386_TLS_LDM_PUSH;
MACRO_R R_386_TLS_LDO_32;
MACRO_R R_386_TLS_LE;
MACRO_R R_386_TLS_LE_32;
MACRO_R R_386_TLS_TPOFF;
MACRO_R R_386_TLS_TPOFF32;
MACRO_R_390 R_390_12;
MACRO_R_390 R_390_16;
MACRO_R_390 R_390_20;
MACRO_R_390 R_390_32;
MACRO_R_390 R_390_64;
MACRO_R_390 R_390_8;
MACRO_R_390 R_390_COPY;
MACRO_R_390 R_390_GLOB_DAT;
MACRO_R_390 R_390_GOT12;
MACRO_R_390 R_390_GOT16;
MACRO_R_390 R_390_GOT20;
MACRO_R_390 R_390_GOT32;
MACRO_R_390 R_390_GOT64;
MACRO_R_390 R_390_GOTENT;
MACRO_R_390 R_390_GOTOFF16;
MACRO_R_390 R_390_GOTOFF32;
MACRO_R_390 R_390_GOTOFF64;
MACRO_R_390 R_390_GOTPC;
MACRO_R_390 R_390_GOTPCDBL;
MACRO_R_390 R_390_GOTPLT12;
MACRO_R_390 R_390_GOTPLT16;
MACRO_R_390 R_390_GOTPLT20;
MACRO_R_390 R_390_GOTPLT32;
MACRO_R_390 R_390_GOTPLT64;
MACRO_R_390 R_390_GOTPLTENT;
MACRO_R_390 R_390_IRELATIVE;
MACRO_R_390 R_390_JMP_SLOT;
MACRO_R_390 R_390_NONE;
MACRO_R_390 R_390_NUM;
MACRO_R_390 R_390_PC16;
MACRO_R_390 R_390_PC16DBL;
MACRO_R_390 R_390_PC32;
MACRO_R_390 R_390_PC32DBL;
MACRO_R_390 R_390_PC64;
MACRO_R_390 R_390_PLT16DBL;
MACRO_R_390 R_390_PLT32;
MACRO_R_390 R_390_PLT32DBL;
MACRO_R_390 R_390_PLT64;
MACRO_R_390 R_390_PLTOFF16;
MACRO_R_390 R_390_PLTOFF32;
MACRO_R_390 R_390_PLTOFF64;
MACRO_R_390 R_390_RELATIVE;
MACRO_R_390 R_390_TLS_DTPMOD;
MACRO_R_390 R_390_TLS_DTPOFF;
MACRO_R_390 R_390_TLS_GD32;
MACRO_R_390 R_390_TLS_GD64;
MACRO_R_390 R_390_TLS_GDCALL;
MACRO_R_390 R_390_TLS_GOTIE12;
MACRO_R_390 R_390_TLS_GOTIE20;
MACRO_R_390 R_390_TLS_GOTIE32;
MACRO_R_390 R_390_TLS_GOTIE64;
MACRO_R_390 R_390_TLS_IE32;
MACRO_R_390 R_390_TLS_IE64;
MACRO_R_390 R_390_TLS_IEENT;
MACRO_R_390 R_390_TLS_LDCALL;
MACRO_R_390 R_390_TLS_LDM32;
MACRO_R_390 R_390_TLS_LDM64;
MACRO_R_390 R_390_TLS_LDO32;
MACRO_R_390 R_390_TLS_LDO64;
MACRO_R_390 R_390_TLS_LE32;
MACRO_R_390 R_390_TLS_LE64;
MACRO_R_390 R_390_TLS_LOAD;
MACRO_R_390 R_390_TLS_TPOFF;
MACRO_R R_68K_16;
MACRO_R R_68K_32;
MACRO_R R_68K_8;
MACRO_R R_68K_COPY;
MACRO_R R_68K_GLOB_DAT;
MACRO_R R_68K_GOT16;
MACRO_R R_68K_GOT16O;
MACRO_R R_68K_GOT32;
MACRO_R R_68K_GOT32O;
MACRO_R R_68K_GOT8;
MACRO_R R_68K_GOT8O;
MACRO_R R_68K_JMP_SLOT;
MACRO_R R_68K_NONE;
MACRO_R R_68K_NUM;
MACRO_R R_68K_PC16;
MACRO_R R_68K_PC32;
MACRO_R R_68K_PC8;
MACRO_R R_68K_PLT16;
MACRO_R R_68K_PLT16O;
MACRO_R R_68K_PLT32;
MACRO_R R_68K_PLT32O;
MACRO_R R_68K_PLT8;
MACRO_R R_68K_PLT8O;
MACRO_R R_68K_RELATIVE;
MACRO_R R_68K_TLS_DTPMOD32;
MACRO_R R_68K_TLS_DTPREL32;
MACRO_R R_68K_TLS_GD16;
MACRO_R R_68K_TLS_GD32;
MACRO_R R_68K_TLS_GD8;
MACRO_R R_68K_TLS_IE16;
MACRO_R R_68K_TLS_IE32;
MACRO_R R_68K_TLS_IE8;
MACRO_R R_68K_TLS_LDM16;
MACRO_R R_68K_TLS_LDM32;
MACRO_R R_68K_TLS_LDM8;
MACRO_R R_68K_TLS_LDO16;
MACRO_R R_68K_TLS_LDO32;
MACRO_R R_68K_TLS_LDO8;
MACRO_R R_68K_TLS_LE16;
MACRO_R R_68K_TLS_LE32;
MACRO_R R_68K_TLS_LE8;
MACRO_R R_68K_TLS_TPREL32;
MACRO_R_AARCH64 R_AARCH64_ABS16;
MACRO_R_AARCH64 R_AARCH64_ABS32;
MACRO_R_AARCH64 R_AARCH64_ABS64;
MACRO_R_AARCH64 R_AARCH64_ADD_ABS_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_ADR_GOT_PAGE;
MACRO_R_AARCH64 R_AARCH64_ADR_PREL_LO21;
MACRO_R_AARCH64 R_AARCH64_ADR_PREL_PG_HI21;
MACRO_R_AARCH64 R_AARCH64_ADR_PREL_PG_HI21_NC;
MACRO_R_AARCH64 R_AARCH64_CALL26;
MACRO_R_AARCH64 R_AARCH64_CONDBR19;
MACRO_R_AARCH64 R_AARCH64_COPY;
MACRO_R_AARCH64 R_AARCH64_GLOB_DAT;
MACRO_R_AARCH64 R_AARCH64_GOTREL32;
MACRO_R_AARCH64 R_AARCH64_GOTREL64;
MACRO_R_AARCH64 R_AARCH64_GOT_LD_PREL19;
MACRO_R_AARCH64 R_AARCH64_IRELATIVE;
MACRO_R_AARCH64 R_AARCH64_JUMP26;
MACRO_R_AARCH64 R_AARCH64_JUMP_SLOT;
MACRO_R_AARCH64 R_AARCH64_LD64_GOTOFF_LO15;
MACRO_R_AARCH64 R_AARCH64_LD64_GOTPAGE_LO15;
MACRO_R_AARCH64 R_AARCH64_LD64_GOT_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_LDST128_ABS_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_LDST16_ABS_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_LDST32_ABS_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_LDST64_ABS_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_LDST8_ABS_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_LD_PREL_LO19;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G0;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G0_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G1;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G1_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G2;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G2_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_GOTOFF_G3;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G0;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G0_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G1;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G1_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G2;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G2_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_PREL_G3;
MACRO_R_AARCH64 R_AARCH64_MOVW_SABS_G0;
MACRO_R_AARCH64 R_AARCH64_MOVW_SABS_G1;
MACRO_R_AARCH64 R_AARCH64_MOVW_SABS_G2;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G0;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G0_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G1;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G1_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G2;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G2_NC;
MACRO_R_AARCH64 R_AARCH64_MOVW_UABS_G3;
MACRO_R_AARCH64 R_AARCH64_NONE;
MACRO_R_AARCH64 R_AARCH64_P32_ABS32;
MACRO_R_AARCH64 R_AARCH64_P32_COPY;
MACRO_R_AARCH64 R_AARCH64_P32_GLOB_DAT;
MACRO_R_AARCH64 R_AARCH64_P32_IRELATIVE;
MACRO_R_AARCH64 R_AARCH64_P32_JUMP_SLOT;
MACRO_R_AARCH64 R_AARCH64_P32_RELATIVE;
MACRO_R_AARCH64 R_AARCH64_P32_TLSDESC;
MACRO_R_AARCH64 R_AARCH64_P32_TLS_DTPMOD;
MACRO_R_AARCH64 R_AARCH64_P32_TLS_DTPREL;
MACRO_R_AARCH64 R_AARCH64_P32_TLS_TPREL;
MACRO_R_AARCH64 R_AARCH64_PREL16;
MACRO_R_AARCH64 R_AARCH64_PREL32;
MACRO_R_AARCH64 R_AARCH64_PREL64;
MACRO_R_AARCH64 R_AARCH64_RELATIVE;
MACRO_R_AARCH64 R_AARCH64_TLSDESC;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_ADD;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_ADD_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_ADR_PAGE21;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_ADR_PREL21;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_CALL;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_LD64_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_LDR;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_LD_PREL19;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_OFF_G0_NC;
MACRO_R_AARCH64 R_AARCH64_TLSDESC_OFF_G1;
MACRO_R_AARCH64 R_AARCH64_TLSGD_ADD_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSGD_ADR_PAGE21;
MACRO_R_AARCH64 R_AARCH64_TLSGD_ADR_PREL21;
MACRO_R_AARCH64 R_AARCH64_TLSGD_MOVW_G0_NC;
MACRO_R_AARCH64 R_AARCH64_TLSGD_MOVW_G1;
MACRO_R_AARCH64 R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21;
MACRO_R_AARCH64 R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSIE_LD_GOTTPREL_PREL19;
MACRO_R_AARCH64 R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC;
MACRO_R_AARCH64 R_AARCH64_TLSIE_MOVW_GOTTPREL_G1;
MACRO_R_AARCH64 R_AARCH64_TLSLD_ADD_DTPREL_HI12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_ADD_DTPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_ADD_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_ADR_PAGE21;
MACRO_R_AARCH64 R_AARCH64_TLSLD_ADR_PREL21;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST128_DTPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST16_DTPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST32_DTPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST64_DTPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST8_DTPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_LD_PREL19;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_DTPREL_G0;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_DTPREL_G1;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_DTPREL_G2;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_G0_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLD_MOVW_G1;
MACRO_R_AARCH64 R_AARCH64_TLSLE_ADD_TPREL_HI12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_ADD_TPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_ADD_TPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST128_TPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST16_TPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST32_TPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST64_TPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST8_TPREL_LO12;
MACRO_R_AARCH64 R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_MOVW_TPREL_G0;
MACRO_R_AARCH64 R_AARCH64_TLSLE_MOVW_TPREL_G0_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_MOVW_TPREL_G1;
MACRO_R_AARCH64 R_AARCH64_TLSLE_MOVW_TPREL_G1_NC;
MACRO_R_AARCH64 R_AARCH64_TLSLE_MOVW_TPREL_G2;
MACRO_R_AARCH64 R_AARCH64_TLS_DTPMOD;
MACRO_R_AARCH64 R_AARCH64_TLS_DTPREL;
MACRO_R_AARCH64 R_AARCH64_TLS_TPREL;
MACRO_R_AARCH64 R_AARCH64_TSTBR14;
MACRO_R_ALPHA R_ALPHA_BRADDR;
MACRO_R_ALPHA R_ALPHA_COPY;
MACRO_R_ALPHA R_ALPHA_DTPMOD64;
MACRO_R_ALPHA R_ALPHA_DTPREL16;
MACRO_R_ALPHA R_ALPHA_DTPREL64;
MACRO_R_ALPHA R_ALPHA_DTPRELHI;
MACRO_R_ALPHA R_ALPHA_DTPRELLO;
MACRO_R_ALPHA R_ALPHA_GLOB_DAT;
MACRO_R_ALPHA R_ALPHA_GOTDTPREL;
MACRO_R_ALPHA R_ALPHA_GOTTPREL;
MACRO_R_ALPHA R_ALPHA_GPDISP;
MACRO_R_ALPHA R_ALPHA_GPREL16;
MACRO_R_ALPHA R_ALPHA_GPREL32;
MACRO_R_ALPHA R_ALPHA_GPRELHIGH;
MACRO_R_ALPHA R_ALPHA_GPRELLOW;
MACRO_R_ALPHA R_ALPHA_HINT;
MACRO_R_ALPHA R_ALPHA_JMP_SLOT;
MACRO_R_ALPHA R_ALPHA_LITERAL;
MACRO_R_ALPHA R_ALPHA_LITUSE;
MACRO_R_ALPHA R_ALPHA_NONE;
MACRO_R_ALPHA R_ALPHA_NUM;
MACRO_R_ALPHA R_ALPHA_REFLONG;
MACRO_R_ALPHA R_ALPHA_REFQUAD;
MACRO_R_ALPHA R_ALPHA_RELATIVE;
MACRO_R_ALPHA R_ALPHA_SREL16;
MACRO_R_ALPHA R_ALPHA_SREL32;
MACRO_R_ALPHA R_ALPHA_SREL64;
MACRO_R_ALPHA R_ALPHA_TLSGD;
MACRO_R_ALPHA R_ALPHA_TLS_GD_HI;
MACRO_R_ALPHA R_ALPHA_TLS_LDM;
MACRO_R_ALPHA R_ALPHA_TPREL16;
MACRO_R_ALPHA R_ALPHA_TPREL64;
MACRO_R_ALPHA R_ALPHA_TPRELHI;
MACRO_R_ALPHA R_ALPHA_TPRELLO;
MACRO_R_AARCH64 R_ARM_ABS12;
MACRO_R_AARCH64 R_ARM_ABS16;
MACRO_R_AARCH64 R_ARM_ABS32;
MACRO_R_AARCH64 R_ARM_ABS32_NOI;
MACRO_R_AARCH64 R_ARM_ABS8;
MACRO_R_AARCH64 R_ARM_ALU_PCREL_15_8;
MACRO_R_AARCH64 R_ARM_ALU_PCREL_23_15;
MACRO_R_AARCH64 R_ARM_ALU_PCREL_7_0;
MACRO_R_AARCH64 R_ARM_ALU_PC_G0;
MACRO_R_AARCH64 R_ARM_ALU_PC_G0_NC;
MACRO_R_AARCH64 R_ARM_ALU_PC_G1;
MACRO_R_AARCH64 R_ARM_ALU_PC_G1_NC;
MACRO_R_AARCH64 R_ARM_ALU_PC_G2;
MACRO_R_AARCH64 R_ARM_ALU_SBREL_19_12;
MACRO_R_AARCH64 R_ARM_ALU_SBREL_27_20;
MACRO_R_AARCH64 R_ARM_ALU_SB_G0;
MACRO_R_AARCH64 R_ARM_ALU_SB_G0_NC;
MACRO_R_AARCH64 R_ARM_ALU_SB_G1;
MACRO_R_AARCH64 R_ARM_ALU_SB_G1_NC;
MACRO_R_AARCH64 R_ARM_ALU_SB_G2;
MACRO_R_AARCH64 R_ARM_AMP_VCALL9;
MACRO_R_AARCH64 R_ARM_BASE_ABS;
MACRO_R_AARCH64 R_ARM_CALL;
MACRO_R_AARCH64 R_ARM_COPY;
MACRO_R_AARCH64 R_ARM_GLOB_DAT;
MACRO_R_AARCH64 R_ARM_GNU_VTENTRY;
MACRO_R_AARCH64 R_ARM_GNU_VTINHERIT;
MACRO_R_AARCH64 R_ARM_GOT32;
MACRO_R_AARCH64 R_ARM_GOTOFF;
MACRO_R_AARCH64 R_ARM_GOTOFF12;
MACRO_R_AARCH64 R_ARM_GOTPC;
MACRO_R_AARCH64 R_ARM_GOTRELAX;
MACRO_R_AARCH64 R_ARM_GOT_ABS;
MACRO_R_AARCH64 R_ARM_GOT_BREL12;
MACRO_R_AARCH64 R_ARM_GOT_PREL;
MACRO_R_AARCH64 R_ARM_IRELATIVE;
MACRO_R_AARCH64 R_ARM_JUMP24;
MACRO_R_AARCH64 R_ARM_JUMP_SLOT;
MACRO_R_AARCH64 R_ARM_LDC_PC_G0;
MACRO_R_AARCH64 R_ARM_LDC_PC_G1;
MACRO_R_AARCH64 R_ARM_LDC_PC_G2;
MACRO_R_AARCH64 R_ARM_LDC_SB_G0;
MACRO_R_AARCH64 R_ARM_LDC_SB_G1;
MACRO_R_AARCH64 R_ARM_LDC_SB_G2;
MACRO_R_AARCH64 R_ARM_LDRS_PC_G0;
MACRO_R_AARCH64 R_ARM_LDRS_PC_G1;
MACRO_R_AARCH64 R_ARM_LDRS_PC_G2;
MACRO_R_AARCH64 R_ARM_LDRS_SB_G0;
MACRO_R_AARCH64 R_ARM_LDRS_SB_G1;
MACRO_R_AARCH64 R_ARM_LDRS_SB_G2;
MACRO_R_AARCH64 R_ARM_LDR_PC_G1;
MACRO_R_AARCH64 R_ARM_LDR_PC_G2;
MACRO_R_AARCH64 R_ARM_LDR_SBREL_11_0;
MACRO_R_AARCH64 R_ARM_LDR_SB_G0;
MACRO_R_AARCH64 R_ARM_LDR_SB_G1;
MACRO_R_AARCH64 R_ARM_LDR_SB_G2;
MACRO_R_AARCH64 R_ARM_ME_TOO;
MACRO_R_AARCH64 R_ARM_MOVT_ABS;
MACRO_R_AARCH64 R_ARM_MOVT_BREL;
MACRO_R_AARCH64 R_ARM_MOVT_PREL;
MACRO_R_AARCH64 R_ARM_MOVW_ABS_NC;
MACRO_R_AARCH64 R_ARM_MOVW_BREL;
MACRO_R_AARCH64 R_ARM_MOVW_BREL_NC;
MACRO_R_AARCH64 R_ARM_MOVW_PREL_NC;
MACRO_R_AARCH64 R_ARM_NONE;
MACRO_R_AARCH64 R_ARM_NUM;
MACRO_R_AARCH64 R_ARM_PC13;
MACRO_R_AARCH64 R_ARM_PC24;
MACRO_R_AARCH64 R_ARM_PLT32;
MACRO_R_AARCH64 R_ARM_PLT32_ABS;
MACRO_R_AARCH64 R_ARM_PREL31;
MACRO_R_AARCH64 R_ARM_RABS22;
MACRO_R_AARCH64 R_ARM_RBASE;
MACRO_R_AARCH64 R_ARM_REL32;
MACRO_R_AARCH64 R_ARM_REL32_NOI;
MACRO_R_AARCH64 R_ARM_RELATIVE;
MACRO_R_AARCH64 R_ARM_RPC24;
MACRO_R_AARCH64 R_ARM_RREL32;
MACRO_R_AARCH64 R_ARM_RSBREL32;
MACRO_R_AARCH64 R_ARM_RXPC25;
MACRO_R_AARCH64 R_ARM_SBREL31;
MACRO_R_AARCH64 R_ARM_SBREL32;
MACRO_R_AARCH64 R_ARM_SWI24;
MACRO_R_AARCH64 R_ARM_TARGET1;
MACRO_R_AARCH64 R_ARM_TARGET2;
MACRO_R_AARCH64 R_ARM_THM_ABS5;
MACRO_R_AARCH64 R_ARM_THM_ALU_PREL_11_0;
MACRO_R_AARCH64 R_ARM_THM_GOT_BREL12;
MACRO_R_AARCH64 R_ARM_THM_JUMP19;
MACRO_R_AARCH64 R_ARM_THM_JUMP24;
MACRO_R_AARCH64 R_ARM_THM_JUMP6;
MACRO_R_AARCH64 R_ARM_THM_MOVT_ABS;
MACRO_R_AARCH64 R_ARM_THM_MOVT_BREL;
MACRO_R_AARCH64 R_ARM_THM_MOVT_PREL;
MACRO_R_AARCH64 R_ARM_THM_MOVW_ABS_NC;
MACRO_R_AARCH64 R_ARM_THM_MOVW_BREL;
MACRO_R_AARCH64 R_ARM_THM_MOVW_BREL_NC;
MACRO_R_AARCH64 R_ARM_THM_MOVW_PREL_NC;
MACRO_R_AARCH64 R_ARM_THM_PC11;
MACRO_R_AARCH64 R_ARM_THM_PC12;
MACRO_R_AARCH64 R_ARM_THM_PC22;
MACRO_R_AARCH64 R_ARM_THM_PC8;
MACRO_R_AARCH64 R_ARM_THM_PC9;
MACRO_R_AARCH64 R_ARM_THM_RPC22;
MACRO_R_AARCH64 R_ARM_THM_SWI8;
MACRO_R_AARCH64 R_ARM_THM_TLS_CALL;
MACRO_R_AARCH64 R_ARM_THM_TLS_DESCSEQ;
MACRO_R_AARCH64 R_ARM_THM_TLS_DESCSEQ16;
MACRO_R_AARCH64 R_ARM_THM_TLS_DESCSEQ32;
MACRO_R_AARCH64 R_ARM_THM_XPC22;
MACRO_R_AARCH64 R_ARM_TLS_CALL;
MACRO_R_AARCH64 R_ARM_TLS_DESC;
MACRO_R_AARCH64 R_ARM_TLS_DESCSEQ;
MACRO_R_AARCH64 R_ARM_TLS_DTPMOD32;
MACRO_R_AARCH64 R_ARM_TLS_DTPOFF32;
MACRO_R_AARCH64 R_ARM_TLS_GD32;
MACRO_R_AARCH64 R_ARM_TLS_GOTDESC;
MACRO_R_AARCH64 R_ARM_TLS_IE12GP;
MACRO_R_AARCH64 R_ARM_TLS_IE32;
MACRO_R_AARCH64 R_ARM_TLS_LDM32;
MACRO_R_AARCH64 R_ARM_TLS_LDO12;
MACRO_R_AARCH64 R_ARM_TLS_LDO32;
MACRO_R_AARCH64 R_ARM_TLS_LE12;
MACRO_R_AARCH64 R_ARM_TLS_LE32;
MACRO_R_AARCH64 R_ARM_TLS_TPOFF32;
MACRO_R_AARCH64 R_ARM_V4BX;
MACRO_R_AARCH64 R_ARM_XPC25;
MACRO_R_390 R_CRIS_16;
MACRO_R_390 R_CRIS_16_GOT;
MACRO_R_390 R_CRIS_16_GOTPLT;
MACRO_R_390 R_CRIS_16_PCREL;
MACRO_R_390 R_CRIS_32;
MACRO_R_390 R_CRIS_32_GOT;
MACRO_R_390 R_CRIS_32_GOTPLT;
MACRO_R_390 R_CRIS_32_GOTREL;
MACRO_R_390 R_CRIS_32_PCREL;
MACRO_R_390 R_CRIS_32_PLT_GOTREL;
MACRO_R_390 R_CRIS_32_PLT_PCREL;
MACRO_R_390 R_CRIS_8;
MACRO_R_390 R_CRIS_8_PCREL;
MACRO_R_390 R_CRIS_COPY;
MACRO_R_390 R_CRIS_GLOB_DAT;
MACRO_R_390 R_CRIS_GNU_VTENTRY;
MACRO_R_390 R_CRIS_GNU_VTINHERIT;
MACRO_R_390 R_CRIS_JUMP_SLOT;
MACRO_R_390 R_CRIS_NONE;
MACRO_R_390 R_CRIS_NUM;
MACRO_R_390 R_CRIS_RELATIVE;
MACRO_R_IA64 R_IA64_COPY;
MACRO_R_IA64 R_IA64_DIR32LSB;
MACRO_R_IA64 R_IA64_DIR32MSB;
MACRO_R_IA64 R_IA64_DIR64LSB;
MACRO_R_IA64 R_IA64_DIR64MSB;
MACRO_R_IA64 R_IA64_DTPMOD64LSB;
MACRO_R_IA64 R_IA64_DTPMOD64MSB;
MACRO_R_IA64 R_IA64_DTPREL14;
MACRO_R_IA64 R_IA64_DTPREL22;
MACRO_R_IA64 R_IA64_DTPREL32LSB;
MACRO_R_IA64 R_IA64_DTPREL32MSB;
MACRO_R_IA64 R_IA64_DTPREL64I;
MACRO_R_IA64 R_IA64_DTPREL64LSB;
MACRO_R_IA64 R_IA64_DTPREL64MSB;
MACRO_R_IA64 R_IA64_FPTR32LSB;
MACRO_R_IA64 R_IA64_FPTR32MSB;
MACRO_R_IA64 R_IA64_FPTR64I;
MACRO_R_IA64 R_IA64_FPTR64LSB;
MACRO_R_IA64 R_IA64_FPTR64MSB;
MACRO_R_IA64 R_IA64_GPREL22;
MACRO_R_IA64 R_IA64_GPREL32LSB;
MACRO_R_IA64 R_IA64_GPREL32MSB;
MACRO_R_IA64 R_IA64_GPREL64I;
MACRO_R_IA64 R_IA64_GPREL64LSB;
MACRO_R_IA64 R_IA64_GPREL64MSB;
MACRO_R_IA64 R_IA64_IMM14;
MACRO_R_IA64 R_IA64_IMM22;
MACRO_R_IA64 R_IA64_IMM64;
MACRO_R_IA64 R_IA64_IPLTLSB;
MACRO_R_IA64 R_IA64_IPLTMSB;
MACRO_R_IA64 R_IA64_LDXMOV;
MACRO_R_IA64 R_IA64_LTOFF22;
MACRO_R_IA64 R_IA64_LTOFF22X;
MACRO_R_IA64 R_IA64_LTOFF64I;
MACRO_R_IA64 R_IA64_LTOFF_DTPMOD22;
MACRO_R_IA64 R_IA64_LTOFF_DTPREL22;
MACRO_R_IA64 R_IA64_LTOFF_FPTR22;
MACRO_R_IA64 R_IA64_LTOFF_FPTR32LSB;
MACRO_R_IA64 R_IA64_LTOFF_FPTR32MSB;
MACRO_R_IA64 R_IA64_LTOFF_FPTR64I;
MACRO_R_IA64 R_IA64_LTOFF_FPTR64LSB;
MACRO_R_IA64 R_IA64_LTOFF_FPTR64MSB;
MACRO_R_IA64 R_IA64_LTOFF_TPREL22;
MACRO_R_IA64 R_IA64_LTV32LSB;
MACRO_R_IA64 R_IA64_LTV32MSB;
MACRO_R_IA64 R_IA64_LTV64LSB;
MACRO_R_IA64 R_IA64_LTV64MSB;
MACRO_R_IA64 R_IA64_NONE;
MACRO_R_IA64 R_IA64_PCREL21B;
MACRO_R_IA64 R_IA64_PCREL21BI;
MACRO_R_IA64 R_IA64_PCREL21F;
MACRO_R_IA64 R_IA64_PCREL21M;
MACRO_R_IA64 R_IA64_PCREL22;
MACRO_R_IA64 R_IA64_PCREL32LSB;
MACRO_R_IA64 R_IA64_PCREL32MSB;
MACRO_R_IA64 R_IA64_PCREL60B;
MACRO_R_IA64 R_IA64_PCREL64I;
MACRO_R_IA64 R_IA64_PCREL64LSB;
MACRO_R_IA64 R_IA64_PCREL64MSB;
MACRO_R_IA64 R_IA64_PLTOFF22;
MACRO_R_IA64 R_IA64_PLTOFF64I;
MACRO_R_IA64 R_IA64_PLTOFF64LSB;
MACRO_R_IA64 R_IA64_PLTOFF64MSB;
MACRO_R_IA64 R_IA64_REL32LSB;
MACRO_R_IA64 R_IA64_REL32MSB;
MACRO_R_IA64 R_IA64_REL64LSB;
MACRO_R_IA64 R_IA64_REL64MSB;
MACRO_R_IA64 R_IA64_SECREL32LSB;
MACRO_R_IA64 R_IA64_SECREL32MSB;
MACRO_R_IA64 R_IA64_SECREL64LSB;
MACRO_R_IA64 R_IA64_SECREL64MSB;
MACRO_R_IA64 R_IA64_SEGREL32LSB;
MACRO_R_IA64 R_IA64_SEGREL32MSB;
MACRO_R_IA64 R_IA64_SEGREL64LSB;
MACRO_R_IA64 R_IA64_SEGREL64MSB;
MACRO_R_IA64 R_IA64_SUB;
MACRO_R_IA64 R_IA64_TPREL14;
MACRO_R_IA64 R_IA64_TPREL22;
MACRO_R_IA64 R_IA64_TPREL64I;
MACRO_R_IA64 R_IA64_TPREL64LSB;
MACRO_R_IA64 R_IA64_TPREL64MSB;
MACRO_R_390 R_M32R_10_PCREL;
MACRO_R_390 R_M32R_10_PCREL_RELA;
MACRO_R_390 R_M32R_16;
MACRO_R_390 R_M32R_16_RELA;
MACRO_R_390 R_M32R_18_PCREL;
MACRO_R_390 R_M32R_18_PCREL_RELA;
MACRO_R_390 R_M32R_24;
MACRO_R_390 R_M32R_24_RELA;
MACRO_R_390 R_M32R_26_PCREL;
MACRO_R_390 R_M32R_26_PCREL_RELA;
MACRO_R_390 R_M32R_26_PLTREL;
MACRO_R_390 R_M32R_32;
MACRO_R_390 R_M32R_32_RELA;
MACRO_R_390 R_M32R_COPY;
MACRO_R_390 R_M32R_GLOB_DAT;
MACRO_R_390 R_M32R_GNU_VTENTRY;
MACRO_R_390 R_M32R_GNU_VTINHERIT;
MACRO_R_390 R_M32R_GOT16_HI_SLO;
MACRO_R_390 R_M32R_GOT16_HI_ULO;
MACRO_R_390 R_M32R_GOT16_LO;
MACRO_R_390 R_M32R_GOT24;
MACRO_R_390 R_M32R_GOTOFF;
MACRO_R_390 R_M32R_GOTOFF_HI_SLO;
MACRO_R_390 R_M32R_GOTOFF_HI_ULO;
MACRO_R_390 R_M32R_GOTOFF_LO;
MACRO_R_390 R_M32R_GOTPC24;
MACRO_R_390 R_M32R_GOTPC_HI_SLO;
MACRO_R_390 R_M32R_GOTPC_HI_ULO;
MACRO_R_390 R_M32R_GOTPC_LO;
MACRO_R_390 R_M32R_HI16_SLO;
MACRO_R_390 R_M32R_HI16_SLO_RELA;
MACRO_R_390 R_M32R_HI16_ULO;
MACRO_R_390 R_M32R_HI16_ULO_RELA;
MACRO_R_390 R_M32R_JMP_SLOT;
MACRO_R_390 R_M32R_LO16;
MACRO_R_390 R_M32R_LO16_RELA;
MACRO_R_390 R_M32R_NONE;
MACRO_R_390 R_M32R_NUM;
MACRO_R_390 R_M32R_REL32;
MACRO_R_390 R_M32R_RELATIVE;
MACRO_R_390 R_M32R_RELA_GNU_VTENTRY;
MACRO_R_390 R_M32R_RELA_GNU_VTINHERIT;
MACRO_R_390 R_M32R_SDA16;
MACRO_R_390 R_M32R_SDA16_RELA;
MACRO_R_390 R_MICROBLAZE_32;
MACRO_R_390 R_MICROBLAZE_32_LO;
MACRO_R_390 R_MICROBLAZE_32_PCREL;
MACRO_R_390 R_MICROBLAZE_32_PCREL_LO;
MACRO_R_390 R_MICROBLAZE_32_SYM_OP_SYM;
MACRO_R_390 R_MICROBLAZE_64;
MACRO_R_390 R_MICROBLAZE_64_NONE;
MACRO_R_390 R_MICROBLAZE_64_PCREL;
MACRO_R_390 R_MICROBLAZE_COPY;
MACRO_R_390 R_MICROBLAZE_GLOB_DAT;
MACRO_R_390 R_MICROBLAZE_GNU_VTENTRY;
MACRO_R_390 R_MICROBLAZE_GNU_VTINHERIT;
MACRO_R_390 R_MICROBLAZE_GOTOFF_32;
MACRO_R_390 R_MICROBLAZE_GOTOFF_64;
MACRO_R_390 R_MICROBLAZE_GOTPC_64;
MACRO_R_390 R_MICROBLAZE_GOT_64;
MACRO_R_390 R_MICROBLAZE_JUMP_SLOT;
MACRO_R_390 R_MICROBLAZE_NONE;
MACRO_R_390 R_MICROBLAZE_PLT_64;
MACRO_R_390 R_MICROBLAZE_REL;
MACRO_R_390 R_MICROBLAZE_SRO32;
MACRO_R_390 R_MICROBLAZE_SRW32;
MACRO_R_390 R_MICROBLAZE_TLS;
MACRO_R_390 R_MICROBLAZE_TLSDTPMOD32;
MACRO_R_390 R_MICROBLAZE_TLSDTPREL32;
MACRO_R_390 R_MICROBLAZE_TLSDTPREL64;
MACRO_R_390 R_MICROBLAZE_TLSGD;
MACRO_R_390 R_MICROBLAZE_TLSGOTTPREL32;
MACRO_R_390 R_MICROBLAZE_TLSLD;
MACRO_R_390 R_MICROBLAZE_TLSTPREL32;
MACRO_R_MIPS R_MIPS_16;
MACRO_R_MIPS R_MIPS_26;
MACRO_R_MIPS R_MIPS_32;
MACRO_R_MIPS R_MIPS_64;
MACRO_R_MIPS R_MIPS_ADD_IMMEDIATE;
MACRO_R_MIPS R_MIPS_CALL16;
MACRO_R_MIPS R_MIPS_CALL_HI16;
MACRO_R_MIPS R_MIPS_CALL_LO16;
MACRO_R_MIPS R_MIPS_COPY;
MACRO_R_MIPS R_MIPS_DELETE;
MACRO_R_MIPS R_MIPS_GLOB_DAT;
MACRO_R_MIPS R_MIPS_GOT16;
MACRO_R_MIPS R_MIPS_GOT_DISP;
MACRO_R_MIPS R_MIPS_GOT_HI16;
MACRO_R_MIPS R_MIPS_GOT_LO16;
MACRO_R_MIPS R_MIPS_GOT_OFST;
MACRO_R_MIPS R_MIPS_GOT_PAGE;
MACRO_R_MIPS R_MIPS_GPREL16;
MACRO_R_MIPS R_MIPS_GPREL32;
MACRO_R_MIPS R_MIPS_HI16;
MACRO_R_MIPS R_MIPS_HIGHER;
MACRO_R_MIPS R_MIPS_HIGHEST;
MACRO_R_MIPS R_MIPS_INSERT_A;
MACRO_R_MIPS R_MIPS_INSERT_B;
MACRO_R_MIPS R_MIPS_JALR;
MACRO_R_MIPS R_MIPS_JUMP_SLOT;
MACRO_R_MIPS R_MIPS_LITERAL;
MACRO_R_MIPS R_MIPS_LO16;
MACRO_R_MIPS R_MIPS_NONE;
MACRO_R_MIPS R_MIPS_NUM;
MACRO_R_MIPS R_MIPS_PC16;
MACRO_R_MIPS R_MIPS_PJUMP;
MACRO_R_MIPS R_MIPS_REL16;
MACRO_R_MIPS R_MIPS_REL32;
MACRO_R_MIPS R_MIPS_RELGOT;
MACRO_R_MIPS R_MIPS_SCN_DISP;
MACRO_R_MIPS R_MIPS_SHIFT5;
MACRO_R_MIPS R_MIPS_SHIFT6;
MACRO_R_MIPS R_MIPS_SUB;
MACRO_R_MIPS R_MIPS_TLS_DTPMOD32;
MACRO_R_MIPS R_MIPS_TLS_DTPMOD64;
MACRO_R_MIPS R_MIPS_TLS_DTPREL32;
MACRO_R_MIPS R_MIPS_TLS_DTPREL64;
MACRO_R_MIPS R_MIPS_TLS_DTPREL_HI16;
MACRO_R_MIPS R_MIPS_TLS_DTPREL_LO16;
MACRO_R_MIPS R_MIPS_TLS_GD;
MACRO_R_MIPS R_MIPS_TLS_GOTTPREL;
MACRO_R_MIPS R_MIPS_TLS_LDM;
MACRO_R_MIPS R_MIPS_TLS_TPREL32;
MACRO_R_MIPS R_MIPS_TLS_TPREL64;
MACRO_R_MIPS R_MIPS_TLS_TPREL_HI16;
MACRO_R_MIPS R_MIPS_TLS_TPREL_LO16;
MACRO_R_390 R_MN10300_16;
MACRO_R_390 R_MN10300_24;
MACRO_R_390 R_MN10300_32;
MACRO_R_390 R_MN10300_8;
MACRO_R_390 R_MN10300_ALIGN;
MACRO_R_390 R_MN10300_COPY;
MACRO_R_390 R_MN10300_GLOB_DAT;
MACRO_R_390 R_MN10300_GNU_VTENTRY;
MACRO_R_390 R_MN10300_GNU_VTINHERIT;
MACRO_R_390 R_MN10300_GOT16;
MACRO_R_390 R_MN10300_GOT24;
MACRO_R_390 R_MN10300_GOT32;
MACRO_R_390 R_MN10300_GOTOFF16;
MACRO_R_390 R_MN10300_GOTOFF24;
MACRO_R_390 R_MN10300_GOTOFF32;
MACRO_R_390 R_MN10300_GOTPC16;
MACRO_R_390 R_MN10300_GOTPC32;
MACRO_R_390 R_MN10300_JMP_SLOT;
MACRO_R_390 R_MN10300_NONE;
MACRO_R_390 R_MN10300_NUM;
MACRO_R_390 R_MN10300_PCREL16;
MACRO_R_390 R_MN10300_PCREL32;
MACRO_R_390 R_MN10300_PCREL8;
MACRO_R_390 R_MN10300_PLT16;
MACRO_R_390 R_MN10300_PLT32;
MACRO_R_390 R_MN10300_RELATIVE;
MACRO_R_390 R_MN10300_SYM_DIFF;
MACRO_R_390 R_MN10300_TLS_DTPMOD;
MACRO_R_390 R_MN10300_TLS_DTPOFF;
MACRO_R_390 R_MN10300_TLS_GD;
MACRO_R_390 R_MN10300_TLS_GOTIE;
MACRO_R_390 R_MN10300_TLS_IE;
MACRO_R_390 R_MN10300_TLS_LD;
MACRO_R_390 R_MN10300_TLS_LDO;
MACRO_R_390 R_MN10300_TLS_LE;
MACRO_R_390 R_MN10300_TLS_TPOFF;
MACRO_R_NIOS2 R_NIOS2_ALIGN;
MACRO_R_NIOS2 R_NIOS2_BFD_RELOC_16;
MACRO_R_NIOS2 R_NIOS2_BFD_RELOC_32;
MACRO_R_NIOS2 R_NIOS2_BFD_RELOC_8;
MACRO_R_NIOS2 R_NIOS2_CACHE_OPX;
MACRO_R_NIOS2 R_NIOS2_CALL16;
MACRO_R_NIOS2 R_NIOS2_CALL26;
MACRO_R_NIOS2 R_NIOS2_CALL26_NOAT;
MACRO_R_NIOS2 R_NIOS2_CALLR;
MACRO_R_NIOS2 R_NIOS2_CALL_HA;
MACRO_R_NIOS2 R_NIOS2_CALL_LO;
MACRO_R_NIOS2 R_NIOS2_CJMP;
MACRO_R_NIOS2 R_NIOS2_COPY;
MACRO_R_NIOS2 R_NIOS2_GLOB_DAT;
MACRO_R_NIOS2 R_NIOS2_GNU_VTENTRY;
MACRO_R_NIOS2 R_NIOS2_GNU_VTINHERIT;
MACRO_R_NIOS2 R_NIOS2_GOT16;
MACRO_R_NIOS2 R_NIOS2_GOTOFF;
MACRO_R_NIOS2 R_NIOS2_GOTOFF_HA;
MACRO_R_NIOS2 R_NIOS2_GOTOFF_LO;
MACRO_R_NIOS2 R_NIOS2_GOT_HA;
MACRO_R_NIOS2 R_NIOS2_GOT_LO;
MACRO_R_NIOS2 R_NIOS2_GPREL;
MACRO_R_NIOS2 R_NIOS2_HI16;
MACRO_R_NIOS2 R_NIOS2_HIADJ16;
MACRO_R_NIOS2 R_NIOS2_IMM5;
MACRO_R_NIOS2 R_NIOS2_IMM6;
MACRO_R_NIOS2 R_NIOS2_IMM8;
MACRO_R_NIOS2 R_NIOS2_JUMP_SLOT;
MACRO_R_NIOS2 R_NIOS2_LO16;
MACRO_R_NIOS2 R_NIOS2_NONE;
MACRO_R_NIOS2 R_NIOS2_PCREL16;
MACRO_R_NIOS2 R_NIOS2_PCREL_HA;
MACRO_R_NIOS2 R_NIOS2_PCREL_LO;
MACRO_R_NIOS2 R_NIOS2_RELATIVE;
MACRO_R_NIOS2 R_NIOS2_S16;
MACRO_R_NIOS2 R_NIOS2_TLS_DTPMOD;
MACRO_R_NIOS2 R_NIOS2_TLS_DTPREL;
MACRO_R_NIOS2 R_NIOS2_TLS_GD16;
MACRO_R_NIOS2 R_NIOS2_TLS_IE16;
MACRO_R_NIOS2 R_NIOS2_TLS_LDM16;
MACRO_R_NIOS2 R_NIOS2_TLS_LDO16;
MACRO_R_NIOS2 R_NIOS2_TLS_LE16;
MACRO_R_NIOS2 R_NIOS2_TLS_TPREL;
MACRO_R_NIOS2 R_NIOS2_U16;
MACRO_R_NIOS2 R_NIOS2_UJMP;
MACRO_OK R_OK;
MACRO_R_PARISC R_PARISC_COPY;
MACRO_R_PARISC R_PARISC_DIR14DR;
MACRO_R_PARISC R_PARISC_DIR14R;
MACRO_R_PARISC R_PARISC_DIR14WR;
MACRO_R_PARISC R_PARISC_DIR16DF;
MACRO_R_PARISC R_PARISC_DIR16F;
MACRO_R_PARISC R_PARISC_DIR16WF;
MACRO_R_PARISC R_PARISC_DIR17F;
MACRO_R_PARISC R_PARISC_DIR17R;
MACRO_R_PARISC R_PARISC_DIR21L;
MACRO_R_PARISC R_PARISC_DIR32;
MACRO_R_PARISC R_PARISC_DIR64;
MACRO_R_PARISC R_PARISC_DPREL14R;
MACRO_R_PARISC R_PARISC_DPREL21L;
MACRO_R_PARISC R_PARISC_EPLT;
MACRO_R_PARISC R_PARISC_FPTR64;
MACRO_R_PARISC R_PARISC_GNU_VTENTRY;
MACRO_R_PARISC R_PARISC_GNU_VTINHERIT;
MACRO_R_PARISC R_PARISC_GPREL14DR;
MACRO_R_PARISC R_PARISC_GPREL14R;
MACRO_R_PARISC R_PARISC_GPREL14WR;
MACRO_R_PARISC R_PARISC_GPREL16DF;
MACRO_R_PARISC R_PARISC_GPREL16F;
MACRO_R_PARISC R_PARISC_GPREL16WF;
MACRO_R_PARISC R_PARISC_GPREL21L;
MACRO_R_PARISC R_PARISC_GPREL64;
MACRO_R_PARISC R_PARISC_HIRESERVE;
MACRO_R_PARISC R_PARISC_IPLT;
MACRO_R_PARISC R_PARISC_LORESERVE;
MACRO_R_PARISC R_PARISC_LTOFF14DR;
MACRO_R_PARISC R_PARISC_LTOFF14R;
MACRO_R_PARISC R_PARISC_LTOFF14WR;
MACRO_R_PARISC R_PARISC_LTOFF16DF;
MACRO_R_PARISC R_PARISC_LTOFF16F;
MACRO_R_PARISC R_PARISC_LTOFF16WF;
MACRO_R_PARISC R_PARISC_LTOFF21L;
MACRO_R_PARISC R_PARISC_LTOFF64;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR14DR;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR14R;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR14WR;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR16DF;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR16F;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR16WF;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR21L;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR32;
MACRO_R_PARISC R_PARISC_LTOFF_FPTR64;
MACRO_R_PARISC R_PARISC_LTOFF_TP14DR;
MACRO_R_PARISC R_PARISC_LTOFF_TP14F;
MACRO_R_PARISC R_PARISC_LTOFF_TP14R;
MACRO_R_PARISC R_PARISC_LTOFF_TP14WR;
MACRO_R_PARISC R_PARISC_LTOFF_TP16DF;
MACRO_R_PARISC R_PARISC_LTOFF_TP16F;
MACRO_R_PARISC R_PARISC_LTOFF_TP16WF;
MACRO_R_PARISC R_PARISC_LTOFF_TP21L;
MACRO_R_PARISC R_PARISC_LTOFF_TP64;
MACRO_R_PARISC R_PARISC_NONE;
MACRO_R_PARISC R_PARISC_PCREL14DR;
MACRO_R_PARISC R_PARISC_PCREL14R;
MACRO_R_PARISC R_PARISC_PCREL14WR;
MACRO_R_PARISC R_PARISC_PCREL16DF;
MACRO_R_PARISC R_PARISC_PCREL16F;
MACRO_R_PARISC R_PARISC_PCREL16WF;
MACRO_R_PARISC R_PARISC_PCREL17F;
MACRO_R_PARISC R_PARISC_PCREL17R;
MACRO_R_PARISC R_PARISC_PCREL21L;
MACRO_R_PARISC R_PARISC_PCREL22F;
MACRO_R_PARISC R_PARISC_PCREL32;
MACRO_R_PARISC R_PARISC_PCREL64;
MACRO_R_PARISC R_PARISC_PLABEL14R;
MACRO_R_PARISC R_PARISC_PLABEL21L;
MACRO_R_PARISC R_PARISC_PLABEL32;
MACRO_R_PARISC R_PARISC_PLTOFF14DR;
MACRO_R_PARISC R_PARISC_PLTOFF14R;
MACRO_R_PARISC R_PARISC_PLTOFF14WR;
MACRO_R_PARISC R_PARISC_PLTOFF16DF;
MACRO_R_PARISC R_PARISC_PLTOFF16F;
MACRO_R_PARISC R_PARISC_PLTOFF16WF;
MACRO_R_PARISC R_PARISC_PLTOFF21L;
MACRO_R_PARISC R_PARISC_SECREL32;
MACRO_R_PARISC R_PARISC_SECREL64;
MACRO_R_PARISC R_PARISC_SEGBASE;
MACRO_R_PARISC R_PARISC_SEGREL32;
MACRO_R_PARISC R_PARISC_SEGREL64;
MACRO_R_PARISC R_PARISC_TLS_DTPMOD32;
MACRO_R_PARISC R_PARISC_TLS_DTPMOD64;
MACRO_R_PARISC R_PARISC_TLS_DTPOFF32;
MACRO_R_PARISC R_PARISC_TLS_DTPOFF64;
MACRO_R_PARISC R_PARISC_TLS_GD14R;
MACRO_R_PARISC R_PARISC_TLS_GD21L;
MACRO_R_PARISC R_PARISC_TLS_GDCALL;
MACRO_R_PARISC R_PARISC_TLS_IE14R;
MACRO_R_PARISC R_PARISC_TLS_IE21L;
MACRO_R_PARISC R_PARISC_TLS_LDM14R;
MACRO_R_PARISC R_PARISC_TLS_LDM21L;
MACRO_R_PARISC R_PARISC_TLS_LDMCALL;
MACRO_R_PARISC R_PARISC_TLS_LDO14R;
MACRO_R_PARISC R_PARISC_TLS_LDO21L;
MACRO_R_PARISC R_PARISC_TLS_LE14R;
MACRO_R_PARISC R_PARISC_TLS_LE21L;
MACRO_R_PARISC R_PARISC_TLS_TPREL32;
MACRO_R_PARISC R_PARISC_TLS_TPREL64;
MACRO_R_PARISC R_PARISC_TPREL14DR;
MACRO_R_PARISC R_PARISC_TPREL14R;
MACRO_R_PARISC R_PARISC_TPREL14WR;
MACRO_R_PARISC R_PARISC_TPREL16DF;
MACRO_R_PARISC R_PARISC_TPREL16F;
MACRO_R_PARISC R_PARISC_TPREL16WF;
MACRO_R_PARISC R_PARISC_TPREL21L;
MACRO_R_PARISC R_PARISC_TPREL32;
MACRO_R_PARISC R_PARISC_TPREL64;
MACRO_R_PPC64 R_PPC64_ADDR14;
MACRO_R_PPC64 R_PPC64_ADDR14_BRNTAKEN;
MACRO_R_PPC64 R_PPC64_ADDR14_BRTAKEN;
MACRO_R_PPC64 R_PPC64_ADDR16;
MACRO_R_PPC64 R_PPC64_ADDR16_DS;
MACRO_R_PPC64 R_PPC64_ADDR16_HA;
MACRO_R_PPC64 R_PPC64_ADDR16_HI;
MACRO_R_PPC64 R_PPC64_ADDR16_HIGH;
MACRO_R_PPC64 R_PPC64_ADDR16_HIGHA;
MACRO_R_PPC64 R_PPC64_ADDR16_HIGHER;
MACRO_R_PPC64 R_PPC64_ADDR16_HIGHERA;
MACRO_R_PPC64 R_PPC64_ADDR16_HIGHEST;
MACRO_R_PPC64 R_PPC64_ADDR16_HIGHESTA;
MACRO_R_PPC64 R_PPC64_ADDR16_LO;
MACRO_R_PPC64 R_PPC64_ADDR16_LO_DS;
MACRO_R_PPC64 R_PPC64_ADDR24;
MACRO_R_PPC64 R_PPC64_ADDR30;
MACRO_R_PPC64 R_PPC64_ADDR32;
MACRO_R_PPC64 R_PPC64_ADDR64;
MACRO_R_PPC64 R_PPC64_COPY;
MACRO_R_PPC64 R_PPC64_DTPMOD64;
MACRO_R_PPC64 R_PPC64_DTPREL16;
MACRO_R_PPC64 R_PPC64_DTPREL16_DS;
MACRO_R_PPC64 R_PPC64_DTPREL16_HA;
MACRO_R_PPC64 R_PPC64_DTPREL16_HI;
MACRO_R_PPC64 R_PPC64_DTPREL16_HIGH;
MACRO_R_PPC64 R_PPC64_DTPREL16_HIGHA;
MACRO_R_PPC64 R_PPC64_DTPREL16_HIGHER;
MACRO_R_PPC64 R_PPC64_DTPREL16_HIGHERA;
MACRO_R_PPC64 R_PPC64_DTPREL16_HIGHEST;
MACRO_R_PPC64 R_PPC64_DTPREL16_HIGHESTA;
MACRO_R_PPC64 R_PPC64_DTPREL16_LO;
MACRO_R_PPC64 R_PPC64_DTPREL16_LO_DS;
MACRO_R_PPC64 R_PPC64_DTPREL64;
MACRO_R_PPC64 R_PPC64_GLOB_DAT;
MACRO_R_PPC64 R_PPC64_GOT16;
MACRO_R_PPC64 R_PPC64_GOT16_DS;
MACRO_R_PPC64 R_PPC64_GOT16_HA;
MACRO_R_PPC64 R_PPC64_GOT16_HI;
MACRO_R_PPC64 R_PPC64_GOT16_LO;
MACRO_R_PPC64 R_PPC64_GOT16_LO_DS;
MACRO_R_PPC64 R_PPC64_GOT_DTPREL16_DS;
MACRO_R_PPC64 R_PPC64_GOT_DTPREL16_HA;
MACRO_R_PPC64 R_PPC64_GOT_DTPREL16_HI;
MACRO_R_PPC64 R_PPC64_GOT_DTPREL16_LO_DS;
MACRO_R_PPC64 R_PPC64_GOT_TLSGD16;
MACRO_R_PPC64 R_PPC64_GOT_TLSGD16_HA;
MACRO_R_PPC64 R_PPC64_GOT_TLSGD16_HI;
MACRO_R_PPC64 R_PPC64_GOT_TLSGD16_LO;
MACRO_R_PPC64 R_PPC64_GOT_TLSLD16;
MACRO_R_PPC64 R_PPC64_GOT_TLSLD16_HA;
MACRO_R_PPC64 R_PPC64_GOT_TLSLD16_HI;
MACRO_R_PPC64 R_PPC64_GOT_TLSLD16_LO;
MACRO_R_PPC64 R_PPC64_GOT_TPREL16_DS;
MACRO_R_PPC64 R_PPC64_GOT_TPREL16_HA;
MACRO_R_PPC64 R_PPC64_GOT_TPREL16_HI;
MACRO_R_PPC64 R_PPC64_GOT_TPREL16_LO_DS;
MACRO_R_PPC64 R_PPC64_IRELATIVE;
MACRO_R_PPC64 R_PPC64_JMP_IREL;
MACRO_R_PPC64 R_PPC64_JMP_SLOT;
MACRO_R_PPC64 R_PPC64_NONE;
MACRO_R_PPC64 R_PPC64_PLT16_HA;
MACRO_R_PPC64 R_PPC64_PLT16_HI;
MACRO_R_PPC64 R_PPC64_PLT16_LO;
MACRO_R_PPC64 R_PPC64_PLT16_LO_DS;
MACRO_R_PPC64 R_PPC64_PLT32;
MACRO_R_PPC64 R_PPC64_PLT64;
MACRO_R_PPC64 R_PPC64_PLTGOT16;
MACRO_R_PPC64 R_PPC64_PLTGOT16_DS;
MACRO_R_PPC64 R_PPC64_PLTGOT16_HA;
MACRO_R_PPC64 R_PPC64_PLTGOT16_HI;
MACRO_R_PPC64 R_PPC64_PLTGOT16_LO;
MACRO_R_PPC64 R_PPC64_PLTGOT16_LO_DS;
MACRO_R_PPC64 R_PPC64_PLTREL32;
MACRO_R_PPC64 R_PPC64_PLTREL64;
MACRO_R_PPC64 R_PPC64_REL14;
MACRO_R_PPC64 R_PPC64_REL14_BRNTAKEN;
MACRO_R_PPC64 R_PPC64_REL14_BRTAKEN;
MACRO_R_PPC64 R_PPC64_REL16;
MACRO_R_PPC64 R_PPC64_REL16_HA;
MACRO_R_PPC64 R_PPC64_REL16_HI;
MACRO_R_PPC64 R_PPC64_REL16_LO;
MACRO_R_PPC64 R_PPC64_REL24;
MACRO_R_PPC64 R_PPC64_REL32;
MACRO_R_PPC64 R_PPC64_REL64;
MACRO_R_PPC64 R_PPC64_RELATIVE;
MACRO_R_PPC64 R_PPC64_SECTOFF;
MACRO_R_PPC64 R_PPC64_SECTOFF_DS;
MACRO_R_PPC64 R_PPC64_SECTOFF_HA;
MACRO_R_PPC64 R_PPC64_SECTOFF_HI;
MACRO_R_PPC64 R_PPC64_SECTOFF_LO;
MACRO_R_PPC64 R_PPC64_SECTOFF_LO_DS;
MACRO_R_PPC64 R_PPC64_TLS;
MACRO_R_PPC64 R_PPC64_TLSGD;
MACRO_R_PPC64 R_PPC64_TLSLD;
MACRO_R_PPC64 R_PPC64_TOC;
MACRO_R_PPC64 R_PPC64_TOC16;
MACRO_R_PPC64 R_PPC64_TOC16_DS;
MACRO_R_PPC64 R_PPC64_TOC16_HA;
MACRO_R_PPC64 R_PPC64_TOC16_HI;
MACRO_R_PPC64 R_PPC64_TOC16_LO;
MACRO_R_PPC64 R_PPC64_TOC16_LO_DS;
MACRO_R_PPC64 R_PPC64_TOCSAVE;
MACRO_R_PPC64 R_PPC64_TPREL16;
MACRO_R_PPC64 R_PPC64_TPREL16_DS;
MACRO_R_PPC64 R_PPC64_TPREL16_HA;
MACRO_R_PPC64 R_PPC64_TPREL16_HI;
MACRO_R_PPC64 R_PPC64_TPREL16_HIGH;
MACRO_R_PPC64 R_PPC64_TPREL16_HIGHA;
MACRO_R_PPC64 R_PPC64_TPREL16_HIGHER;
MACRO_R_PPC64 R_PPC64_TPREL16_HIGHERA;
MACRO_R_PPC64 R_PPC64_TPREL16_HIGHEST;
MACRO_R_PPC64 R_PPC64_TPREL16_HIGHESTA;
MACRO_R_PPC64 R_PPC64_TPREL16_LO;
MACRO_R_PPC64 R_PPC64_TPREL16_LO_DS;
MACRO_R_PPC64 R_PPC64_TPREL64;
MACRO_R_PPC64 R_PPC64_UADDR16;
MACRO_R_PPC64 R_PPC64_UADDR32;
MACRO_R_PPC64 R_PPC64_UADDR64;
MACRO_R_PPC R_PPC_ADDR14;
MACRO_R_PPC R_PPC_ADDR14_BRNTAKEN;
MACRO_R_PPC R_PPC_ADDR14_BRTAKEN;
MACRO_R_PPC R_PPC_ADDR16;
MACRO_R_PPC R_PPC_ADDR16_HA;
MACRO_R_PPC R_PPC_ADDR16_HI;
MACRO_R_PPC R_PPC_ADDR16_LO;
MACRO_R_PPC R_PPC_ADDR24;
MACRO_R_PPC R_PPC_ADDR32;
MACRO_R_PPC R_PPC_COPY;
MACRO_R_PPC R_PPC_DIAB_RELSDA_HA;
MACRO_R_PPC R_PPC_DIAB_RELSDA_HI;
MACRO_R_PPC R_PPC_DIAB_RELSDA_LO;
MACRO_R_PPC R_PPC_DIAB_SDA21_HA;
MACRO_R_PPC R_PPC_DIAB_SDA21_HI;
MACRO_R_PPC R_PPC_DIAB_SDA21_LO;
MACRO_R_PPC R_PPC_DTPMOD32;
MACRO_R_PPC R_PPC_DTPREL16;
MACRO_R_PPC R_PPC_DTPREL16_HA;
MACRO_R_PPC R_PPC_DTPREL16_HI;
MACRO_R_PPC R_PPC_DTPREL16_LO;
MACRO_R_PPC R_PPC_DTPREL32;
MACRO_R_PPC R_PPC_EMB_BIT_FLD;
MACRO_R_PPC R_PPC_EMB_MRKREF;
MACRO_R_PPC R_PPC_EMB_NADDR16;
MACRO_R_PPC R_PPC_EMB_NADDR16_HA;
MACRO_R_PPC R_PPC_EMB_NADDR16_HI;
MACRO_R_PPC R_PPC_EMB_NADDR16_LO;
MACRO_R_PPC R_PPC_EMB_NADDR32;
MACRO_R_PPC R_PPC_EMB_RELSDA;
MACRO_R_PPC R_PPC_EMB_RELSEC16;
MACRO_R_PPC R_PPC_EMB_RELST_HA;
MACRO_R_PPC R_PPC_EMB_RELST_HI;
MACRO_R_PPC R_PPC_EMB_RELST_LO;
MACRO_R_PPC R_PPC_EMB_SDA21;
MACRO_R_PPC R_PPC_EMB_SDA2I16;
MACRO_R_PPC R_PPC_EMB_SDA2REL;
MACRO_R_PPC R_PPC_EMB_SDAI16;
MACRO_R_PPC R_PPC_GLOB_DAT;
MACRO_R_PPC R_PPC_GOT16;
MACRO_R_PPC R_PPC_GOT16_HA;
MACRO_R_PPC R_PPC_GOT16_HI;
MACRO_R_PPC R_PPC_GOT16_LO;
MACRO_R_PPC R_PPC_GOT_DTPREL16;
MACRO_R_PPC R_PPC_GOT_DTPREL16_HA;
MACRO_R_PPC R_PPC_GOT_DTPREL16_HI;
MACRO_R_PPC R_PPC_GOT_DTPREL16_LO;
MACRO_R_PPC R_PPC_GOT_TLSGD16;
MACRO_R_PPC R_PPC_GOT_TLSGD16_HA;
MACRO_R_PPC R_PPC_GOT_TLSGD16_HI;
MACRO_R_PPC R_PPC_GOT_TLSGD16_LO;
MACRO_R_PPC R_PPC_GOT_TLSLD16;
MACRO_R_PPC R_PPC_GOT_TLSLD16_HA;
MACRO_R_PPC R_PPC_GOT_TLSLD16_HI;
MACRO_R_PPC R_PPC_GOT_TLSLD16_LO;
MACRO_R_PPC R_PPC_GOT_TPREL16;
MACRO_R_PPC R_PPC_GOT_TPREL16_HA;
MACRO_R_PPC R_PPC_GOT_TPREL16_HI;
MACRO_R_PPC R_PPC_GOT_TPREL16_LO;
MACRO_R_PPC R_PPC_IRELATIVE;
MACRO_R_PPC R_PPC_JMP_SLOT;
MACRO_R_PPC R_PPC_LOCAL24PC;
MACRO_R_PPC R_PPC_NONE;
MACRO_R_PPC R_PPC_PLT16_HA;
MACRO_R_PPC R_PPC_PLT16_HI;
MACRO_R_PPC R_PPC_PLT16_LO;
MACRO_R_PPC R_PPC_PLT32;
MACRO_R_PPC R_PPC_PLTREL24;
MACRO_R_PPC R_PPC_PLTREL32;
MACRO_R_PPC R_PPC_REL14;
MACRO_R_PPC R_PPC_REL14_BRNTAKEN;
MACRO_R_PPC R_PPC_REL14_BRTAKEN;
MACRO_R_PPC R_PPC_REL16;
MACRO_R_PPC R_PPC_REL16_HA;
MACRO_R_PPC R_PPC_REL16_HI;
MACRO_R_PPC R_PPC_REL16_LO;
MACRO_R_PPC R_PPC_REL24;
MACRO_R_PPC R_PPC_REL32;
MACRO_R_PPC R_PPC_RELATIVE;
MACRO_R_PPC R_PPC_SDAREL16;
MACRO_R_PPC R_PPC_SECTOFF;
MACRO_R_PPC R_PPC_SECTOFF_HA;
MACRO_R_PPC R_PPC_SECTOFF_HI;
MACRO_R_PPC R_PPC_SECTOFF_LO;
MACRO_R_PPC R_PPC_TLS;
MACRO_R_PPC R_PPC_TOC16;
MACRO_R_PPC R_PPC_TPREL16;
MACRO_R_PPC R_PPC_TPREL16_HA;
MACRO_R_PPC R_PPC_TPREL16_HI;
MACRO_R_PPC R_PPC_TPREL16_LO;
MACRO_R_PPC R_PPC_TPREL32;
MACRO_R_PPC R_PPC_UADDR16;
MACRO_R_PPC R_PPC_UADDR32;
MACRO_R_SH R_SH_ALIGN;
MACRO_R_SH R_SH_CODE;
MACRO_R_SH R_SH_COPY;
MACRO_R_SH R_SH_COUNT;
MACRO_R_SH R_SH_DATA;
MACRO_R_SH R_SH_DIR32;
MACRO_R_SH R_SH_DIR8BP;
MACRO_R_SH R_SH_DIR8L;
MACRO_R_SH R_SH_DIR8W;
MACRO_R_SH R_SH_DIR8WPL;
MACRO_R_SH R_SH_DIR8WPN;
MACRO_R_SH R_SH_DIR8WPZ;
MACRO_R_SH R_SH_GLOB_DAT;
MACRO_R_SH R_SH_GNU_VTENTRY;
MACRO_R_SH R_SH_GNU_VTINHERIT;
MACRO_R_SH R_SH_GOT32;
MACRO_R_SH R_SH_GOTOFF;
MACRO_R_SH R_SH_GOTPC;
MACRO_R_SH R_SH_IND12W;
MACRO_R_SH R_SH_JMP_SLOT;
MACRO_R_SH R_SH_LABEL;
MACRO_R_SH R_SH_NONE;
MACRO_R_SH R_SH_NUM;
MACRO_R_SH R_SH_PLT32;
MACRO_R_SH R_SH_REL32;
MACRO_R_SH R_SH_RELATIVE;
MACRO_R_SH R_SH_SWITCH16;
MACRO_R_SH R_SH_SWITCH32;
MACRO_R_SH R_SH_SWITCH8;
MACRO_R_SH R_SH_TLS_DTPMOD32;
MACRO_R_SH R_SH_TLS_DTPOFF32;
MACRO_R_SH R_SH_TLS_GD_32;
MACRO_R_SH R_SH_TLS_IE_32;
MACRO_R_SH R_SH_TLS_LDO_32;
MACRO_R_SH R_SH_TLS_LD_32;
MACRO_R_SH R_SH_TLS_LE_32;
MACRO_R_SH R_SH_TLS_TPOFF32;
MACRO_R_SH R_SH_USES;
MACRO_R_SPARC R_SPARC_10;
MACRO_R_SPARC R_SPARC_11;
MACRO_R_SPARC R_SPARC_13;
MACRO_R_SPARC R_SPARC_16;
MACRO_R_SPARC R_SPARC_22;
MACRO_R_SPARC R_SPARC_32;
MACRO_R_SPARC R_SPARC_5;
MACRO_R_SPARC R_SPARC_6;
MACRO_R_SPARC R_SPARC_64;
MACRO_R_SPARC R_SPARC_7;
MACRO_R_SPARC R_SPARC_8;
MACRO_R_SPARC R_SPARC_COPY;
MACRO_R_SPARC R_SPARC_DISP16;
MACRO_R_SPARC R_SPARC_DISP32;
MACRO_R_SPARC R_SPARC_DISP64;
MACRO_R_SPARC R_SPARC_DISP8;
MACRO_R_SPARC R_SPARC_GLOB_DAT;
MACRO_R_SPARC R_SPARC_GLOB_JMP;
MACRO_R_SPARC R_SPARC_GNU_VTENTRY;
MACRO_R_SPARC R_SPARC_GNU_VTINHERIT;
MACRO_R_SPARC R_SPARC_GOT10;
MACRO_R_SPARC R_SPARC_GOT13;
MACRO_R_SPARC R_SPARC_GOT22;
MACRO_R_SPARC R_SPARC_GOTDATA_HIX22;
MACRO_R_SPARC R_SPARC_GOTDATA_LOX10;
MACRO_R_SPARC R_SPARC_GOTDATA_OP;
MACRO_R_SPARC R_SPARC_GOTDATA_OP_HIX22;
MACRO_R_SPARC R_SPARC_GOTDATA_OP_LOX10;
MACRO_R_SPARC R_SPARC_H34;
MACRO_R_SPARC R_SPARC_H44;
MACRO_R_SPARC R_SPARC_HH22;
MACRO_R_SPARC R_SPARC_HI22;
MACRO_R_SPARC R_SPARC_HIPLT22;
MACRO_R_SPARC R_SPARC_HIX22;
MACRO_R_SPARC R_SPARC_HM10;
MACRO_R_SPARC R_SPARC_IRELATIVE;
MACRO_R_SPARC R_SPARC_JMP_IREL;
MACRO_R_SPARC R_SPARC_JMP_SLOT;
MACRO_R_SPARC R_SPARC_L44;
MACRO_R_SPARC R_SPARC_LM22;
MACRO_R_SPARC R_SPARC_LO10;
MACRO_R_SPARC R_SPARC_LOPLT10;
MACRO_R_SPARC R_SPARC_LOX10;
MACRO_R_SPARC R_SPARC_M44;
MACRO_R_SPARC R_SPARC_NONE;
MACRO_R_SPARC R_SPARC_NUM;
MACRO_R_SPARC R_SPARC_OLO10;
MACRO_R_SPARC R_SPARC_PC10;
MACRO_R_SPARC R_SPARC_PC22;
MACRO_R_SPARC R_SPARC_PCPLT10;
MACRO_R_SPARC R_SPARC_PCPLT22;
MACRO_R_SPARC R_SPARC_PCPLT32;
MACRO_R_SPARC R_SPARC_PC_HH22;
MACRO_R_SPARC R_SPARC_PC_HM10;
MACRO_R_SPARC R_SPARC_PC_LM22;
MACRO_R_SPARC R_SPARC_PLT32;
MACRO_R_SPARC R_SPARC_PLT64;
MACRO_R_SPARC R_SPARC_REGISTER;
MACRO_R_SPARC R_SPARC_RELATIVE;
MACRO_R_SPARC R_SPARC_REV32;
MACRO_R_SPARC R_SPARC_SIZE32;
MACRO_R_SPARC R_SPARC_SIZE64;
MACRO_R_SPARC R_SPARC_TLS_DTPMOD32;
MACRO_R_SPARC R_SPARC_TLS_DTPMOD64;
MACRO_R_SPARC R_SPARC_TLS_DTPOFF32;
MACRO_R_SPARC R_SPARC_TLS_DTPOFF64;
MACRO_R_SPARC R_SPARC_TLS_GD_ADD;
MACRO_R_SPARC R_SPARC_TLS_GD_CALL;
MACRO_R_SPARC R_SPARC_TLS_GD_HI22;
MACRO_R_SPARC R_SPARC_TLS_GD_LO10;
MACRO_R_SPARC R_SPARC_TLS_IE_ADD;
MACRO_R_SPARC R_SPARC_TLS_IE_HI22;
MACRO_R_SPARC R_SPARC_TLS_IE_LD;
MACRO_R_SPARC R_SPARC_TLS_IE_LDX;
MACRO_R_SPARC R_SPARC_TLS_IE_LO10;
MACRO_R_SPARC R_SPARC_TLS_LDM_ADD;
MACRO_R_SPARC R_SPARC_TLS_LDM_CALL;
MACRO_R_SPARC R_SPARC_TLS_LDM_HI22;
MACRO_R_SPARC R_SPARC_TLS_LDM_LO10;
MACRO_R_SPARC R_SPARC_TLS_LDO_ADD;
MACRO_R_SPARC R_SPARC_TLS_LDO_HIX22;
MACRO_R_SPARC R_SPARC_TLS_LDO_LOX10;
MACRO_R_SPARC R_SPARC_TLS_LE_HIX22;
MACRO_R_SPARC R_SPARC_TLS_LE_LOX10;
MACRO_R_SPARC R_SPARC_TLS_TPOFF32;
MACRO_R_SPARC R_SPARC_TLS_TPOFF64;
MACRO_R_SPARC R_SPARC_UA16;
MACRO_R_SPARC R_SPARC_UA32;
MACRO_R_SPARC R_SPARC_UA64;
MACRO_R_SPARC R_SPARC_WDISP10;
MACRO_R_SPARC R_SPARC_WDISP16;
MACRO_R_SPARC R_SPARC_WDISP19;
MACRO_R_SPARC R_SPARC_WDISP22;
MACRO_R_SPARC R_SPARC_WDISP30;
MACRO_R_SPARC R_SPARC_WPLT30;
MACRO_R_NIOS2 R_TILEGX_16;
MACRO_R_NIOS2 R_TILEGX_16_PCREL;
MACRO_R_NIOS2 R_TILEGX_32;
MACRO_R_NIOS2 R_TILEGX_32_PCREL;
MACRO_R_NIOS2 R_TILEGX_64;
MACRO_R_NIOS2 R_TILEGX_64_PCREL;
MACRO_R_NIOS2 R_TILEGX_8;
MACRO_R_NIOS2 R_TILEGX_8_PCREL;
MACRO_R_NIOS2 R_TILEGX_BROFF_X1;
MACRO_R_NIOS2 R_TILEGX_COPY;
MACRO_R_NIOS2 R_TILEGX_DEST_IMM8_X1;
MACRO_R_NIOS2 R_TILEGX_GLOB_DAT;
MACRO_R_NIOS2 R_TILEGX_GNU_VTENTRY;
MACRO_R_NIOS2 R_TILEGX_GNU_VTINHERIT;
MACRO_R_NIOS2 R_TILEGX_HW0;
MACRO_R_NIOS2 R_TILEGX_HW0_LAST;
MACRO_R_NIOS2 R_TILEGX_HW1;
MACRO_R_NIOS2 R_TILEGX_HW1_LAST;
MACRO_R_NIOS2 R_TILEGX_HW2;
MACRO_R_NIOS2 R_TILEGX_HW2_LAST;
MACRO_R_NIOS2 R_TILEGX_HW3;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_GOT;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST_GOT;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_TLS_GD;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_TLS_IE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW0_TLS_LE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST_GOT;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW1_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW2;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW2_LAST;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW2_LAST_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW2_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW2_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW3;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW3_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X0_HW3_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_GOT;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST_GOT;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_TLS_GD;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_TLS_IE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW0_TLS_LE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST_GOT;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW1_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW2;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW2_LAST;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW2_LAST_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW2_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW2_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW3;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW3_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM16_X1_HW3_PLT_PCREL;
MACRO_R_NIOS2 R_TILEGX_IMM8_X0;
MACRO_R_NIOS2 R_TILEGX_IMM8_X0_TLS_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_X0_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_X1;
MACRO_R_NIOS2 R_TILEGX_IMM8_X1_TLS_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_X1_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_Y0;
MACRO_R_NIOS2 R_TILEGX_IMM8_Y0_TLS_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_Y0_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_Y1;
MACRO_R_NIOS2 R_TILEGX_IMM8_Y1_TLS_ADD;
MACRO_R_NIOS2 R_TILEGX_IMM8_Y1_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEGX_JMP_SLOT;
MACRO_R_NIOS2 R_TILEGX_JUMPOFF_X1;
MACRO_R_NIOS2 R_TILEGX_JUMPOFF_X1_PLT;
MACRO_R_NIOS2 R_TILEGX_MF_IMM14_X1;
MACRO_R_NIOS2 R_TILEGX_MMEND_X0;
MACRO_R_NIOS2 R_TILEGX_MMSTART_X0;
MACRO_R_NIOS2 R_TILEGX_MT_IMM14_X1;
MACRO_R_NIOS2 R_TILEGX_NONE;
MACRO_R_NIOS2 R_TILEGX_NUM;
MACRO_R_NIOS2 R_TILEGX_RELATIVE;
MACRO_R_NIOS2 R_TILEGX_SHAMT_X0;
MACRO_R_NIOS2 R_TILEGX_SHAMT_X1;
MACRO_R_NIOS2 R_TILEGX_SHAMT_Y0;
MACRO_R_NIOS2 R_TILEGX_SHAMT_Y1;
MACRO_R_NIOS2 R_TILEGX_TLS_DTPMOD32;
MACRO_R_NIOS2 R_TILEGX_TLS_DTPMOD64;
MACRO_R_NIOS2 R_TILEGX_TLS_DTPOFF32;
MACRO_R_NIOS2 R_TILEGX_TLS_DTPOFF64;
MACRO_R_NIOS2 R_TILEGX_TLS_GD_CALL;
MACRO_R_NIOS2 R_TILEGX_TLS_IE_LOAD;
MACRO_R_NIOS2 R_TILEGX_TLS_TPOFF32;
MACRO_R_NIOS2 R_TILEGX_TLS_TPOFF64;
MACRO_R_NIOS2 R_TILEPRO_16;
MACRO_R_NIOS2 R_TILEPRO_16_PCREL;
MACRO_R_NIOS2 R_TILEPRO_32;
MACRO_R_NIOS2 R_TILEPRO_32_PCREL;
MACRO_R_NIOS2 R_TILEPRO_8;
MACRO_R_NIOS2 R_TILEPRO_8_PCREL;
MACRO_R_NIOS2 R_TILEPRO_BROFF_X1;
MACRO_R_NIOS2 R_TILEPRO_COPY;
MACRO_R_NIOS2 R_TILEPRO_DEST_IMM8_X1;
MACRO_R_NIOS2 R_TILEPRO_GLOB_DAT;
MACRO_R_NIOS2 R_TILEPRO_GNU_VTENTRY;
MACRO_R_NIOS2 R_TILEPRO_GNU_VTINHERIT;
MACRO_R_NIOS2 R_TILEPRO_HA16;
MACRO_R_NIOS2 R_TILEPRO_HI16;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_GOT;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_GOT_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_GOT_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_GOT_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_HA_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_HI_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_LO_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_GD;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_GD_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_GD_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_GD_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_IE;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_IE_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_IE_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_IE_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_LE;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_LE_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_LE_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X0_TLS_LE_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_GOT;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_GOT_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_GOT_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_GOT_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_HA_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_HI_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_LO_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_PCREL;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_GD;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_GD_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_GD_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_GD_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_IE;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_IE_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_IE_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_IE_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_LE;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_LE_HA;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_LE_HI;
MACRO_R_NIOS2 R_TILEPRO_IMM16_X1_TLS_LE_LO;
MACRO_R_NIOS2 R_TILEPRO_IMM8_X0;
MACRO_R_NIOS2 R_TILEPRO_IMM8_X0_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEPRO_IMM8_X1;
MACRO_R_NIOS2 R_TILEPRO_IMM8_X1_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEPRO_IMM8_Y0;
MACRO_R_NIOS2 R_TILEPRO_IMM8_Y0_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEPRO_IMM8_Y1;
MACRO_R_NIOS2 R_TILEPRO_IMM8_Y1_TLS_GD_ADD;
MACRO_R_NIOS2 R_TILEPRO_JMP_SLOT;
MACRO_R_NIOS2 R_TILEPRO_JOFFLONG_X1;
MACRO_R_NIOS2 R_TILEPRO_JOFFLONG_X1_PLT;
MACRO_R_NIOS2 R_TILEPRO_LO16;
MACRO_R_NIOS2 R_TILEPRO_MF_IMM15_X1;
MACRO_R_NIOS2 R_TILEPRO_MMEND_X0;
MACRO_R_NIOS2 R_TILEPRO_MMEND_X1;
MACRO_R_NIOS2 R_TILEPRO_MMSTART_X0;
MACRO_R_NIOS2 R_TILEPRO_MMSTART_X1;
MACRO_R_NIOS2 R_TILEPRO_MT_IMM15_X1;
MACRO_R_NIOS2 R_TILEPRO_NONE;
MACRO_R_NIOS2 R_TILEPRO_NUM;
MACRO_R_NIOS2 R_TILEPRO_RELATIVE;
MACRO_R_NIOS2 R_TILEPRO_SHAMT_X0;
MACRO_R_NIOS2 R_TILEPRO_SHAMT_X1;
MACRO_R_NIOS2 R_TILEPRO_SHAMT_Y0;
MACRO_R_NIOS2 R_TILEPRO_SHAMT_Y1;
MACRO_R_NIOS2 R_TILEPRO_TLS_DTPMOD32;
MACRO_R_NIOS2 R_TILEPRO_TLS_DTPOFF32;
MACRO_R_NIOS2 R_TILEPRO_TLS_GD_CALL;
MACRO_R_NIOS2 R_TILEPRO_TLS_IE_LOAD;
MACRO_R_NIOS2 R_TILEPRO_TLS_TPOFF32;
MACRO_R_390 R_X86_64_16;
MACRO_R_390 R_X86_64_32;
MACRO_R_390 R_X86_64_32S;
MACRO_R_390 R_X86_64_64;
MACRO_R_390 R_X86_64_8;
MACRO_R_390 R_X86_64_COPY;
MACRO_R_390 R_X86_64_DTPMOD64;
MACRO_R_390 R_X86_64_DTPOFF32;
MACRO_R_390 R_X86_64_DTPOFF64;
MACRO_R_390 R_X86_64_GLOB_DAT;
MACRO_R_390 R_X86_64_GOT32;
MACRO_R_390 R_X86_64_GOT64;
MACRO_R_390 R_X86_64_GOTOFF64;
MACRO_R_390 R_X86_64_GOTPC32;
MACRO_R_390 R_X86_64_GOTPC32_TLSDESC;
MACRO_R_390 R_X86_64_GOTPC64;
MACRO_R_390 R_X86_64_GOTPCREL;
MACRO_R_390 R_X86_64_GOTPCREL64;
MACRO_R_390 R_X86_64_GOTPLT64;
MACRO_R_390 R_X86_64_GOTTPOFF;
MACRO_R_390 R_X86_64_IRELATIVE;
MACRO_R_390 R_X86_64_JUMP_SLOT;
MACRO_R_390 R_X86_64_NONE;
MACRO_R_390 R_X86_64_NUM;
MACRO_R_390 R_X86_64_PC16;
MACRO_R_390 R_X86_64_PC32;
MACRO_R_390 R_X86_64_PC64;
MACRO_R_390 R_X86_64_PC8;
MACRO_R_390 R_X86_64_PLT32;
MACRO_R_390 R_X86_64_PLTOFF64;
MACRO_R_390 R_X86_64_RELATIVE;
MACRO_R_390 R_X86_64_RELATIVE64;
MACRO_R_390 R_X86_64_SIZE32;
MACRO_R_390 R_X86_64_SIZE64;
MACRO_R_390 R_X86_64_TLSDESC;
MACRO_R_390 R_X86_64_TLSDESC_CALL;
MACRO_R_390 R_X86_64_TLSGD;
MACRO_R_390 R_X86_64_TLSLD;
MACRO_R_390 R_X86_64_TPOFF32;
MACRO_R_390 R_X86_64_TPOFF64;
MACRO_SAMPLE SAMPLE_TYPE_BASIC;
MACRO_SAMPLE SAMPLE_TYPE_GUS;
MACRO_SAMPLE SAMPLE_TYPE_WAVEFRONT;
MACRO_SARMAG SARMAG;
MACRO_SA SA_INTERRUPT;
MACRO_SA SA_NOCLDSTOP;
MACRO_SA SA_NOCLDWAIT;
MACRO_SA SA_NODEFER;
MACRO_SA SA_NOMASK;
MACRO_SA SA_ONESHOT;
MACRO_SA SA_ONSTACK;
MACRO_SA SA_RESETHAND;
MACRO_SA SA_RESTART;
MACRO_SA SA_SIGINFO;
MACRO_SA SA_STACK;
MACRO_SB SB;
MACRO_SCHAR SCHAR_MAX;
MACRO_SCHAR SCHAR_MIN;
MACRO_SCHED SCHED_FIFO;
MACRO_SCHED SCHED_OTHER;
MACRO_SCHED SCHED_RR;
$7202B384F533C206A15D8D7EB6DEAA65 SCM_RIGHTS;
MACRO_SCM SCM_TIMESTAMP;
MACRO_SCM_TIMESTAMPING SCM_TIMESTAMPING;
MACRO_SCM_TIMESTAMPNS SCM_TIMESTAMPNS;
MACRO_SCM_WIFI SCM_WIFI_STATUS;
MACRO_SE SE;
MACRO_SEEK SEEK_CUR;
MACRO_SEEK SEEK_END;
MACRO_SEEK SEEK_SET;
MACRO_SEGSIZE SEGSIZE;
$9051D8B3F8B003A45CF2C181583131A8 SEGV_ACCERR;
$9051D8B3F8B003A45CF2C181583131A8 SEGV_MAPERR;
MACRO_SELFMAG SELFMAG;
MACRO_SEM_STAT SEM_INFO;
MACRO_SEM_STAT SEM_STAT;
MACRO_SEM SEM_UNDO;
MACRO_DELAYTIMER SEM_VALUE_MAX;
MACRO_SEQ SEQ_AFTERTOUCH;
MACRO_SEQ_BALANCE SEQ_BALANCE;
MACRO_SEQ SEQ_CONTROLLER;
MACRO_SEQ SEQ_DRUMOFF;
MACRO_SEQ SEQ_DRUMON;
MACRO_SEQ_FULLSIZE SEQ_EXTENDED;
MACRO_SEQ SEQ_FMNOTEOFF;
MACRO_SEQ SEQ_FMNOTEON;
MACRO_SEQ SEQ_FMPGMCHANGE;
MACRO_SEQ_FULLSIZE SEQ_FULLSIZE;
MACRO_SEQ SEQ_MIDIPUTC;
MACRO_SEQ SEQ_NOTEOFF;
MACRO_SEQ SEQ_NOTEON;
MACRO_SEQ SEQ_PGMCHANGE;
MACRO_SEQ_FULLSIZE SEQ_PRIVATE;
MACRO_SEQ_BALANCE SEQ_VOLMODE;
MACRO_SETALL SETALL;
MACRO_GETZCNT SETVAL;
MACRO_SHF SHF_ALLOC;
MACRO_SHF_ALPHA SHF_ALPHA_GPREL;
MACRO_SHF_ARM SHF_ARM_COMDEF;
MACRO_SHF_ARM SHF_ARM_ENTRYSECT;
MACRO_SHF SHF_EXCLUDE;
MACRO_SHF SHF_EXECINSTR;
MACRO_SHF SHF_GROUP;
MACRO_SHF_IA SHF_IA_64_NORECOV;
MACRO_SHF_IA SHF_IA_64_SHORT;
MACRO_SHF SHF_INFO_LINK;
MACRO_SHF SHF_LINK_ORDER;
MACRO_SHF SHF_MASKOS;
MACRO_SHF SHF_MASKPROC;
MACRO_SHF SHF_MERGE;
MACRO_SHF_MIPS SHF_MIPS_ADDR;
MACRO_SHF_MIPS SHF_MIPS_GPREL;
MACRO_SHF_MIPS SHF_MIPS_LOCAL;
MACRO_SHF_MIPS SHF_MIPS_MERGE;
MACRO_SHF_MIPS SHF_MIPS_NAMES;
MACRO_SHF_MIPS SHF_MIPS_NODUPE;
MACRO_SHF_MIPS SHF_MIPS_NOSTRIP;
MACRO_SHF_MIPS SHF_MIPS_STRINGS;
MACRO_SHF SHF_ORDERED;
MACRO_SHF SHF_OS_NONCONFORMING;
MACRO_SHF_PARISC SHF_PARISC_HUGE;
MACRO_SHF_PARISC SHF_PARISC_SBP;
MACRO_SHF_PARISC SHF_PARISC_SHORT;
MACRO_SHF SHF_STRINGS;
MACRO_SHF SHF_TLS;
MACRO_SHF SHF_WRITE;
MACRO_SHM SHM_DEST;
MACRO_SHM SHM_EXEC;
MACRO_SHM SHM_HUGETLB;
MACRO_SHM SHM_INFO;
MACRO_SHM SHM_LOCK;
MACRO_SHM SHM_LOCKED;
MACRO_SHM SHM_NORESERVE;
MACRO_SHM SHM_R;
MACRO_SHM SHM_RDONLY;
MACRO_SHM SHM_REMAP;
MACRO_SHM SHM_RND;
MACRO_SHM SHM_STAT;
MACRO_SHM SHM_UNLOCK;
MACRO_SHM SHM_W;
MACRO_SHN SHN_ABS;
MACRO_SHN SHN_AFTER;
MACRO_SHN SHN_BEFORE;
MACRO_SHN SHN_COMMON;
MACRO_SHN SHN_HIOS;
MACRO_SHN SHN_HIPROC;
MACRO_SHN SHN_HIRESERVE;
MACRO_SHN SHN_LOOS;
MACRO_SHN SHN_LOPROC;
MACRO_SHN SHN_LORESERVE;
MACRO_SHN_MIPS SHN_MIPS_ACOMMON;
MACRO_SHN_MIPS SHN_MIPS_DATA;
MACRO_SHN_MIPS SHN_MIPS_SCOMMON;
MACRO_SHN_MIPS SHN_MIPS_SUNDEFINED;
MACRO_SHN_MIPS SHN_MIPS_TEXT;
MACRO_SHN_PARISC SHN_PARISC_ANSI_COMMON;
MACRO_SHN_PARISC SHN_PARISC_HUGE_COMMON;
MACRO_SHN SHN_UNDEF;
MACRO_SHN SHN_XINDEX;
$F1F648DD099C1B085CB728875CF977ED SHORT_INODE;
MACRO_SHRT SHRT_MAX;
MACRO_SHRT SHRT_MIN;
MACRO_SHT_ALPHA SHT_ALPHA_DEBUG;
MACRO_SHT_ALPHA SHT_ALPHA_REGINFO;
MACRO_SHT_ARM SHT_ARM_ATTRIBUTES;
MACRO_ARM_EXIDX SHT_ARM_EXIDX;
MACRO_SHT_ARM SHT_ARM_PREEMPTMAP;
MACRO_SHT SHT_CHECKSUM;
MACRO_SHT SHT_DYNAMIC;
MACRO_SHT SHT_DYNSYM;
MACRO_SHT SHT_FINI_ARRAY;
MACRO_SHT SHT_GNU_ATTRIBUTES;
MACRO_SHT SHT_GNU_HASH;
MACRO_SHT SHT_GNU_LIBLIST;
MACRO_SHT SHT_GNU_verdef;
MACRO_SHT SHT_GNU_verneed;
MACRO_SHT SHT_GNU_versym;
MACRO_SHT SHT_GROUP;
MACRO_SHT SHT_HASH;
MACRO_SHT SHT_HIOS;
MACRO_SHT SHT_HIPROC;
MACRO_SHT SHT_HISUNW;
MACRO_SHT SHT_HIUSER;
MACRO_SHT_IA SHT_IA_64_EXT;
MACRO_SHT_IA SHT_IA_64_UNWIND;
MACRO_SHT SHT_INIT_ARRAY;
MACRO_SHT SHT_LOOS;
MACRO_SHT SHT_LOPROC;
MACRO_SHT SHT_LOSUNW;
MACRO_SHT SHT_LOUSER;
MACRO_SHT_MIPS SHT_MIPS_AUXSYM;
MACRO_SHT_MIPS SHT_MIPS_CONFLICT;
MACRO_SHT_MIPS SHT_MIPS_CONTENT;
MACRO_SHT_MIPS SHT_MIPS_DEBUG;
MACRO_SHT_MIPS SHT_MIPS_DELTACLASS;
MACRO_SHT_MIPS SHT_MIPS_DELTADECL;
MACRO_SHT_MIPS SHT_MIPS_DELTAINST;
MACRO_SHT_MIPS SHT_MIPS_DELTASYM;
MACRO_SHT_MIPS SHT_MIPS_DENSE;
MACRO_SHT_MIPS SHT_MIPS_DWARF;
MACRO_SHT_MIPS SHT_MIPS_EH_REGION;
MACRO_SHT_MIPS SHT_MIPS_EVENTS;
MACRO_SHT_MIPS SHT_MIPS_EXTSYM;
MACRO_SHT_MIPS SHT_MIPS_FDESC;
MACRO_SHT_MIPS SHT_MIPS_GPTAB;
MACRO_SHT_MIPS SHT_MIPS_IFACE;
MACRO_SHT_MIPS SHT_MIPS_LIBLIST;
MACRO_SHT_MIPS SHT_MIPS_LINE;
MACRO_SHT_MIPS SHT_MIPS_LOCSTR;
MACRO_SHT_MIPS SHT_MIPS_LOCSYM;
MACRO_SHT_MIPS SHT_MIPS_MSYM;
MACRO_SHT_MIPS SHT_MIPS_OPTIONS;
MACRO_SHT_MIPS SHT_MIPS_OPTSYM;
MACRO_SHT_MIPS SHT_MIPS_PACKAGE;
MACRO_SHT_MIPS SHT_MIPS_PACKSYM;
MACRO_SHT_MIPS SHT_MIPS_PDESC;
MACRO_SHT_MIPS SHT_MIPS_PDR_EXCEPTION;
MACRO_SHT_MIPS SHT_MIPS_PIXIE;
MACRO_SHT_MIPS SHT_MIPS_REGINFO;
MACRO_SHT_MIPS SHT_MIPS_RELD;
MACRO_SHT_MIPS SHT_MIPS_RFDESC;
MACRO_SHT_MIPS SHT_MIPS_SHDR;
MACRO_SHT_MIPS SHT_MIPS_SYMBOL_LIB;
MACRO_SHT_MIPS SHT_MIPS_TRANSLATE;
MACRO_SHT_MIPS SHT_MIPS_UCODE;
MACRO_SHT_MIPS SHT_MIPS_WHIRL;
MACRO_SHT_MIPS SHT_MIPS_XLATE;
MACRO_SHT_MIPS SHT_MIPS_XLATE_DEBUG;
MACRO_SHT_MIPS SHT_MIPS_XLATE_OLD;
MACRO_SHT SHT_NOBITS;
MACRO_SHT SHT_NOTE;
MACRO_SHT SHT_NULL;
MACRO_SHT SHT_NUM;
MACRO_SHT_PARISC SHT_PARISC_DOC;
MACRO_SHT_PARISC SHT_PARISC_EXT;
MACRO_SHT_PARISC SHT_PARISC_UNWIND;
MACRO_SHT SHT_PREINIT_ARRAY;
MACRO_SHT SHT_PROGBITS;
MACRO_SHT SHT_REL;
MACRO_SHT SHT_RELA;
MACRO_SHT SHT_SHLIB;
MACRO_SHT SHT_STRTAB;
MACRO_SHT SHT_SUNW_COMDAT;
MACRO_SHT SHT_SUNW_move;
MACRO_SHT SHT_SUNW_syminfo;
MACRO_SHT SHT_SYMTAB;
MACRO_SHT SHT_SYMTAB_SHNDX;
$B34E6FF94D606ADE7B24EB7AB8A02C61 SHUT_RD;
$B34E6FF94D606ADE7B24EB7AB8A02C61 SHUT_RDWR;
$B34E6FF94D606ADE7B24EB7AB8A02C61 SHUT_WR;
MACRO_SIGNAL SIGABRT;
MACRO_SIGNAL SIGALRM;
MACRO_SIGNAL SIGBUS;
MACRO_SIGNAL SIGCHLD;
MACRO_SIGNAL SIGCONT;
$FE790CD3BD14997723CBFB5A61519AED SIGEV_NONE;
$FE790CD3BD14997723CBFB5A61519AED SIGEV_SIGNAL;
$FE790CD3BD14997723CBFB5A61519AED SIGEV_THREAD;
$FE790CD3BD14997723CBFB5A61519AED SIGEV_THREAD_ID;
MACRO_SIGNAL SIGFPE;
MACRO_SIGNAL SIGHUP;
MACRO_SIGNAL SIGILL;
MACRO_SIGNAL SIGINT;
MACRO_SIGNAL SIGIO;
MACRO_SIGNAL SIGIOT;
MACRO_SIGNAL SIGKILL;
MACRO_SIGNAL SIGPIPE;
MACRO_SIGNAL SIGPROF;
MACRO_SIGNAL SIGPWR;
MACRO_SIGNAL SIGQUIT;
MACRO_SIGNAL SIGSEGV;
MACRO_SIGNAL SIGSTKFLT;
MACRO_MINSIGSTKSZ SIGSTKSZ;
MACRO_SIGNAL SIGSTOP;
MACRO_SIGNAL SIGSYS;
MACRO_SIGNAL SIGTERM;
MACRO_SIGNAL SIGTRAP;
MACRO_SIGNAL SIGTSTP;
MACRO_SIGNAL SIGTTIN;
MACRO_SIGNAL SIGTTOU;
MACRO_SIGNAL SIGUNUSED;
MACRO_SIGNAL SIGURG;
MACRO_SIGNAL SIGUSR1;
MACRO_SIGNAL SIGUSR2;
MACRO_SIGNAL SIGVTALRM;
MACRO_SIGNAL SIGWINCH;
MACRO_SIGNAL SIGXCPU;
MACRO_SIGNAL SIGXFSZ;
MACRO_SIG SIG_ATOMIC_MAX;
MACRO_SIG SIG_ATOMIC_MIN;
MACRO_SIG_BLOCK SIG_BLOCK;
MACRO_SIG_BLOCK SIG_SETMASK;
MACRO_SIG_BLOCK SIG_UNBLOCK;
MACRO_DOMAIN SING;
MACRO_SIOCADDDLCI SIOCADDDLCI;
MACRO_SIOCADDMULTI SIOCADDMULTI;
MACRO_SIOCADDRT SIOCADDRT;
MACRO_SIOCAIPXITFCRT SIOCAIPXITFCRT;
MACRO_SIOCAIPXPRISLT SIOCAIPXPRISLT;
MACRO_SIOCATALKDIFADDR SIOCATALKDIFADDR;
MACRO_SIOCATMARK SIOCATMARK;
MACRO_SIOCAX25ADDFWD SIOCAX25ADDFWD;
MACRO_SIOCAX25ADDUID SIOCAX25ADDUID;
MACRO_SIOCAX25BPQADDR SIOCAX25BPQADDR;
MACRO_SIOCAX25CTLCON SIOCAX25CTLCON;
MACRO_SIOCAX25DELFWD SIOCAX25DELFWD;
MACRO_SIOCAX25DELUID SIOCAX25DELUID;
MACRO_SIOCAX25GETINFO SIOCAX25GETINFO;
MACRO_SIOCAX25GETPARMS SIOCAX25GETPARMS;
MACRO_SIOCAX25GETUID SIOCAX25GETUID;
MACRO_SIOCAX25NOUID SIOCAX25NOUID;
MACRO_SIOCAX25OPTRT SIOCAX25OPTRT;
MACRO_SIOCAX25SETPARMS SIOCAX25SETPARMS;
MACRO_SIOCDARP SIOCDARP;
MACRO_SIOCDELDLCI SIOCDELDLCI;
MACRO_SIOCDELMULTI SIOCDELMULTI;
MACRO_SIOCDELRT SIOCDELRT;
MACRO_SIOCDEVPRIVATE SIOCDEVPRIVATE;
MACRO_SIOCDIFADDR SIOCDIFADDR;
MACRO_SIOCDRARP SIOCDRARP;
MACRO_SIOCGARP SIOCGARP;
MACRO_SIOCGIFADDR SIOCGIFADDR;
MACRO_SIOCGIFBR SIOCGIFBR;
MACRO_SIOCGIFBRDADDR SIOCGIFBRDADDR;
MACRO_SIOCGIFCONF SIOCGIFCONF;
MACRO_SIOCGIFCOUNT SIOCGIFCOUNT;
MACRO_SIOCGIFDSTADDR SIOCGIFDSTADDR;
MACRO_SIOCGIFENCAP SIOCGIFENCAP;
MACRO_SIOCGIFFLAGS SIOCGIFFLAGS;
MACRO_SIOCGIFHWADDR SIOCGIFHWADDR;
MACRO_SIOCGIFINDEX SIOCGIFINDEX;
MACRO_SIOCGIFMAP SIOCGIFMAP;
MACRO_SIOCGIFMEM SIOCGIFMEM;
MACRO_SIOCGIFMETRIC SIOCGIFMETRIC;
MACRO_SIOCGIFMTU SIOCGIFMTU;
MACRO_SIOCGIFNAME SIOCGIFNAME;
MACRO_SIOCGIFNETMASK SIOCGIFNETMASK;
MACRO_SIOCGIFPFLAGS SIOCGIFPFLAGS;
MACRO_SIOCGIFSLAVE SIOCGIFSLAVE;
MACRO_SIOCGIFTXQLEN SIOCGIFTXQLEN;
MACRO_SIOCGIWAP SIOCGIWAP;
MACRO_SIOCGIWAPLIST SIOCGIWAPLIST;
MACRO_SIOCGIWAUTH SIOCGIWAUTH;
MACRO_SIOCGIWENCODE SIOCGIWENCODE;
MACRO_SIOCGIWENCODEEXT SIOCGIWENCODEEXT;
MACRO_SIOCGIWESSID SIOCGIWESSID;
MACRO_SIOCGIWFRAG SIOCGIWFRAG;
MACRO_SIOCGIWFREQ SIOCGIWFREQ;
MACRO_SIOCGIWGENIE SIOCGIWGENIE;
MACRO_SIOCGIWMODE SIOCGIWMODE;
MACRO_SIOCGIWNAME SIOCGIWNAME;
MACRO_SIOCGIWNICKN SIOCGIWNICKN;
MACRO_SIOCGIWNWID SIOCGIWNWID;
MACRO_SIOCGIWPOWER SIOCGIWPOWER;
MACRO_SIOCGIWPRIV SIOCGIWPRIV;
MACRO_SIOCGIWRANGE SIOCGIWRANGE;
MACRO_SIOCGIWRATE SIOCGIWRATE;
MACRO_SIOCGIWRETRY SIOCGIWRETRY;
MACRO_SIOCGIWRTS SIOCGIWRTS;
MACRO_SIOCGIWSCAN SIOCGIWSCAN;
MACRO_SIOCGIWSENS SIOCGIWSENS;
MACRO_SIOCGIWSPY SIOCGIWSPY;
MACRO_SIOCGIWSTATS SIOCGIWSTATS;
MACRO_SIOCGIWTHRSPY SIOCGIWTHRSPY;
MACRO_SIOCGIWTXPOW SIOCGIWTXPOW;
MACRO_SIOCGPGRP SIOCGPGRP;
MACRO_SIOCGRARP SIOCGRARP;
MACRO_SIOCGSTAMP SIOCGSTAMP;
MACRO_SIOCGSTAMPNS SIOCGSTAMPNS;
MACRO_SIOCIPXCFGDATA SIOCIPXCFGDATA;
MACRO_SIOCIPXNCPCONN SIOCIPXNCPCONN;
MACRO_SIOCIWFIRST SIOCIWFIRST;
MACRO_SIOCIWFIRSTPRIV SIOCIWFIRSTPRIV;
MACRO_SIOCIWLAST SIOCIWLAST;
MACRO_SIOCIWLASTPRIV SIOCIWLASTPRIV;
MACRO_SIOCNRCTLCON SIOCNRCTLCON;
MACRO_SIOCNRDECOBS SIOCNRDECOBS;
MACRO_SIOCNRGETPARMS SIOCNRGETPARMS;
MACRO_SIOCNRRTCTL SIOCNRRTCTL;
MACRO_SIOCNRSETPARMS SIOCNRSETPARMS;
MACRO_SIOCPROTOPRIVATE SIOCPROTOPRIVATE;
MACRO_SIOCRSACCEPT SIOCRSACCEPT;
MACRO_SIOCRSCLRRT SIOCRSCLRRT;
MACRO_SIOCRSGCAUSE SIOCRSGCAUSE;
MACRO_SIOCRSGFACILITIES SIOCRSGFACILITIES;
MACRO_SIOCRSGL2CALL SIOCRSGL2CALL;
MACRO_SIOCRSL2CALL SIOCRSL2CALL;
MACRO_SIOCRSSCAUSE SIOCRSSCAUSE;
MACRO_SIOCRSSL2CALL SIOCRSSL2CALL;
MACRO_SIOCRTMSG SIOCRTMSG;
MACRO_SIOCSARP SIOCSARP;
MACRO_SIOCSIFADDR SIOCSIFADDR;
MACRO_SIOCSIFBR SIOCSIFBR;
MACRO_SIOCSIFBRDADDR SIOCSIFBRDADDR;
MACRO_SIOCSIFDSTADDR SIOCSIFDSTADDR;
MACRO_SIOCSIFENCAP SIOCSIFENCAP;
MACRO_SIOCSIFFLAGS SIOCSIFFLAGS;
MACRO_SIOCSIFHWADDR SIOCSIFHWADDR;
MACRO_SIOCSIFHWBROADCAST SIOCSIFHWBROADCAST;
MACRO_SIOCSIFLINK SIOCSIFLINK;
MACRO_SIOCSIFMAP SIOCSIFMAP;
MACRO_SIOCSIFMEM SIOCSIFMEM;
MACRO_SIOCSIFMETRIC SIOCSIFMETRIC;
MACRO_SIOCSIFMTU SIOCSIFMTU;
MACRO_SIOCSIFNAME SIOCSIFNAME;
MACRO_SIOCSIFNETMASK SIOCSIFNETMASK;
MACRO_SIOCSIFPFLAGS SIOCSIFPFLAGS;
MACRO_SIOCSIFSLAVE SIOCSIFSLAVE;
MACRO_SIOCSIFTXQLEN SIOCSIFTXQLEN;
MACRO_SIOCSIWAP SIOCSIWAP;
MACRO_SIOCSIWAUTH SIOCSIWAUTH;
MACRO_SIOCSIWCOMMIT SIOCSIWCOMMIT;
MACRO_SIOCSIWENCODE SIOCSIWENCODE;
MACRO_SIOCSIWENCODEEXT SIOCSIWENCODEEXT;
MACRO_SIOCSIWESSID SIOCSIWESSID;
MACRO_SIOCSIWFRAG SIOCSIWFRAG;
MACRO_SIOCSIWFREQ SIOCSIWFREQ;
MACRO_SIOCSIWGENIE SIOCSIWGENIE;
MACRO_SIOCSIWMLME SIOCSIWMLME;
MACRO_SIOCSIWMODE SIOCSIWMODE;
MACRO_SIOCSIWNICKN SIOCSIWNICKN;
MACRO_SIOCSIWNWID SIOCSIWNWID;
MACRO_SIOCSIWPMKSA SIOCSIWPMKSA;
MACRO_SIOCSIWPOWER SIOCSIWPOWER;
MACRO_SIOCSIWPRIV SIOCSIWPRIV;
MACRO_SIOCSIWRANGE SIOCSIWRANGE;
MACRO_SIOCSIWRATE SIOCSIWRATE;
MACRO_SIOCSIWRETRY SIOCSIWRETRY;
MACRO_SIOCSIWRTS SIOCSIWRTS;
MACRO_SIOCSIWSCAN SIOCSIWSCAN;
MACRO_SIOCSIWSENS SIOCSIWSENS;
MACRO_SIOCSIWSPY SIOCSIWSPY;
MACRO_SIOCSIWSTATS SIOCSIWSTATS;
MACRO_SIOCSIWTHRSPY SIOCSIWTHRSPY;
MACRO_SIOCSIWTXPOW SIOCSIWTXPOW;
MACRO_SIOCSPGRP SIOCSPGRP;
MACRO_SIOCSRARP SIOCSRARP;
MACRO_SIOC SIOC_IN;
MACRO_SIOC SIOC_INOUT;
MACRO_SIOC SIOC_OUT;
MACRO_SIOGIFINDEX SIOGIFINDEX;
MACRO_SIZE SIZE_MAX;
$CCC31958CF2403C4DC26E468BC116719 SI_ASYNCIO;
$CCC31958CF2403C4DC26E468BC116719 SI_ASYNCNL;
$CCC31958CF2403C4DC26E468BC116719 SI_KERNEL;
MACRO_SI SI_LOAD_SHIFT;
$CCC31958CF2403C4DC26E468BC116719 SI_MESGQ;
$CCC31958CF2403C4DC26E468BC116719 SI_QUEUE;
$CCC31958CF2403C4DC26E468BC116719 SI_SIGIO;
$CCC31958CF2403C4DC26E468BC116719 SI_TIMER;
$CCC31958CF2403C4DC26E468BC116719 SI_TKILL;
$CCC31958CF2403C4DC26E468BC116719 SI_USER;
MACRO_SLC SLC_ABORT;
MACRO_SLC_NOSUPPORT SLC_ACK;
MACRO_SLC SLC_AO;
MACRO_SLC SLC_AYT;
MACRO_SLC SLC_BRK;
MACRO_SLC_NOSUPPORT SLC_CANTCHANGE;
MACRO_SLC_NOSUPPORT SLC_DEFAULT;
MACRO_SLC SLC_EC;
MACRO_SLC SLC_EL;
MACRO_SLC SLC_EOF;
MACRO_SLC SLC_EOR;
MACRO_SLC SLC_EW;
MACRO_SLC_NOSUPPORT SLC_FLAGS;
MACRO_SLC_NOSUPPORT SLC_FLUSHIN;
MACRO_SLC_NOSUPPORT SLC_FLUSHOUT;
MACRO_SLC SLC_FORW1;
MACRO_SLC SLC_FORW2;
MACRO_SLC_NOSUPPORT SLC_FUNC;
MACRO_SLC SLC_IP;
MACRO_SLC_NOSUPPORT SLC_LEVELBITS;
MACRO_SLC SLC_LNEXT;
MACRO_SLC_NOSUPPORT SLC_NOSUPPORT;
MACRO_SLC SLC_RP;
MACRO_SLC SLC_SUSP;
MACRO_SLC SLC_SYNCH;
MACRO_SLC_NOSUPPORT SLC_VALUE;
MACRO_SLC_NOSUPPORT SLC_VARIABLE;
MACRO_SLC SLC_XOFF;
MACRO_SLC SLC_XON;
MACRO_SNDCARD SNDCARD_ADLIB;
MACRO_SNDCARD SNDCARD_CS4232;
MACRO_SNDCARD SNDCARD_CS4232_MPU;
MACRO_SNDCARD SNDCARD_GUS;
MACRO_SNDCARD SNDCARD_GUS16;
MACRO_SNDCARD SNDCARD_GUSPNP;
MACRO_SNDCARD SNDCARD_MAD16;
MACRO_SNDCARD SNDCARD_MAD16_MPU;
MACRO_SNDCARD SNDCARD_MAUI;
MACRO_SNDCARD SNDCARD_MPU401;
MACRO_SNDCARD SNDCARD_MSS;
MACRO_SNDCARD SNDCARD_PAS;
MACRO_SNDCARD SNDCARD_PSEUDO_MSS;
MACRO_SNDCARD SNDCARD_PSS;
MACRO_SNDCARD SNDCARD_PSS_MPU;
MACRO_SNDCARD SNDCARD_PSS_MSS;
MACRO_SNDCARD SNDCARD_SB;
MACRO_SNDCARD SNDCARD_SB16;
MACRO_SNDCARD SNDCARD_SB16MIDI;
MACRO_SNDCARD SNDCARD_SSCAPE;
MACRO_SNDCARD SNDCARD_SSCAPE_MSS;
MACRO_SNDCARD SNDCARD_TRXPRO;
MACRO_SNDCARD SNDCARD_TRXPRO_MPU;
MACRO_SNDCARD SNDCARD_TRXPRO_SB;
MACRO_SNDCARD SNDCARD_UART401;
MACRO_SNDCARD SNDCARD_UART6850;
MACRO_SNDCTL_COPR SNDCTL_COPR_RESET;
MACRO_SNDCTL_DSP_NONBLOCK SNDCTL_DSP_NONBLOCK;
MACRO_SNDCTL_DSP SNDCTL_DSP_POST;
MACRO_SNDCTL_DSP SNDCTL_DSP_RESET;
MACRO_SNDCTL_DSP_SETSYNCRO SNDCTL_DSP_SETDUPLEX;
MACRO_SNDCTL_DSP_SETSYNCRO SNDCTL_DSP_SETSYNCRO;
MACRO_SNDCTL_DSP SNDCTL_DSP_SYNC;
MACRO_SNDCTL SNDCTL_SEQ_PANIC;
MACRO_SNDCTL SNDCTL_SEQ_RESET;
MACRO_SNDCTL SNDCTL_SEQ_SYNC;
MACRO_SNDCTL SNDCTL_TMR_CONTINUE;
MACRO_SNDCTL SNDCTL_TMR_START;
MACRO_SNDCTL SNDCTL_TMR_STOP;
MACRO_SNDZERO SNDZERO;
__socket_type SOCK_CLOEXEC;
__socket_type SOCK_DCCP;
__socket_type SOCK_DGRAM;
__socket_type SOCK_NONBLOCK;
__socket_type SOCK_PACKET;
__socket_type SOCK_RAW;
__socket_type SOCK_RDM;
__socket_type SOCK_SEQPACKET;
__socket_type SOCK_STREAM;
MACRO_SOL SOL_AAL;
MACRO_SOL_ATALK SOL_ATALK;
MACRO_SOL SOL_ATM;
MACRO_SOL_AX25 SOL_AX25;
MACRO_SOL SOL_DECNET;
MACRO_SOL_IPV6 SOL_ICMPV6;
MACRO_SOL_IP SOL_IP;
MACRO_SOL_IPV6 SOL_IPV6;
MACRO_SOL_IPX SOL_IPX;
MACRO_SOL SOL_IRDA;
MACRO_SOL_NETROM SOL_NETROM;
MACRO_SOL SOL_PACKET;
MACRO_SOL SOL_RAW;
MACRO_SOL_ROSE SOL_ROSE;
MACRO_SOL_SOCKET SOL_SOCKET;
MACRO_SOL_TCP SOL_TCP;
MACRO_SOL_UDP SOL_UDP;
MACRO_SOL SOL_X25;
MACRO_SOMAXCONN SOMAXCONN;
MACRO_SOUND_MIXER SOUND_CAP_EXCL_INPUT;
MACRO_SOUND_MIXER SOUND_MASK_ALTPCM;
MACRO_SOUND_MIXER SOUND_MASK_BASS;
MACRO_SOUND_MIXER SOUND_MASK_CD;
MACRO_SOUND_MIXER SOUND_MASK_DIGITAL1;
MACRO_SOUND_MIXER SOUND_MASK_DIGITAL2;
MACRO_SOUND_MIXER SOUND_MASK_DIGITAL3;
MACRO_SOUND_MIXER SOUND_MASK_ENHANCE;
MACRO_SOUND_MIXER SOUND_MASK_IGAIN;
MACRO_SOUND_MIXER SOUND_MASK_IMIX;
MACRO_SOUND_MIXER SOUND_MASK_LINE;
MACRO_SOUND_MIXER SOUND_MASK_LINE1;
MACRO_SOUND_MIXER SOUND_MASK_LINE2;
MACRO_SOUND_MIXER SOUND_MASK_LINE3;
MACRO_SOUND_MIXER SOUND_MASK_LOUD;
MACRO_SOUND_MIXER SOUND_MASK_MIC;
MACRO_SOUND_MIXER SOUND_MASK_MONITOR;
MACRO_SOUND_MIXER SOUND_MASK_MUTE;
MACRO_SOUND_MIXER SOUND_MASK_OGAIN;
MACRO_SOUND_MIXER SOUND_MASK_PCM;
MACRO_SOUND_MIXER SOUND_MASK_PHONEIN;
MACRO_SOUND_MIXER SOUND_MASK_PHONEOUT;
MACRO_SOUND_MIXER SOUND_MASK_RADIO;
MACRO_SOUND_MIXER SOUND_MASK_RECLEV;
MACRO_SOUND_MIXER SOUND_MASK_SPEAKER;
MACRO_SOUND_MIXER SOUND_MASK_SYNTH;
MACRO_SOUND_MIXER SOUND_MASK_TREBLE;
MACRO_SOUND_MIXER SOUND_MASK_VIDEO;
MACRO_SOUND_MIXER SOUND_MASK_VOLUME;
MACRO_SOUND_MIXER SOUND_MIXER_ALTPCM;
MACRO_SOUND_MIXER SOUND_MIXER_BASS;
MACRO_SOUND_MIXER SOUND_MIXER_CAPS;
MACRO_SOUND_MIXER SOUND_MIXER_CD;
MACRO_SOUND_MIXER SOUND_MIXER_DEVMASK;
MACRO_SOUND_MIXER SOUND_MIXER_DIGITAL1;
MACRO_SOUND_MIXER SOUND_MIXER_DIGITAL2;
MACRO_SOUND_MIXER SOUND_MIXER_DIGITAL3;
MACRO_SOUND_MIXER SOUND_MIXER_ENHANCE;
MACRO_SOUND_MIXER SOUND_MIXER_IGAIN;
MACRO_SOUND_MIXER SOUND_MIXER_IMIX;
MACRO_SOUND_MIXER SOUND_MIXER_LINE;
MACRO_SOUND_MIXER SOUND_MIXER_LINE1;
MACRO_SOUND_MIXER SOUND_MIXER_LINE2;
MACRO_SOUND_MIXER SOUND_MIXER_LINE3;
MACRO_SOUND_MIXER SOUND_MIXER_LOUD;
MACRO_SOUND_MIXER SOUND_MIXER_MIC;
MACRO_SOUND_MIXER SOUND_MIXER_MONITOR;
MACRO_SOUND_MIXER SOUND_MIXER_MUTE;
MACRO_SOUND_MIXER SOUND_MIXER_NONE;
MACRO_SOUND_MIXER SOUND_MIXER_NRDEVICES;
MACRO_SOUND_MIXER SOUND_MIXER_OGAIN;
MACRO_SOUND_MIXER SOUND_MIXER_OUTMASK;
MACRO_SOUND_MIXER SOUND_MIXER_OUTSRC;
MACRO_SOUND_MIXER SOUND_MIXER_PCM;
MACRO_SOUND_MIXER SOUND_MIXER_PHONEIN;
MACRO_SOUND_MIXER SOUND_MIXER_PHONEOUT;
MACRO_SOUND_MIXER SOUND_MIXER_RADIO;
MACRO_SOUND_MIXER SOUND_MIXER_RECLEV;
MACRO_SOUND_MIXER SOUND_MIXER_RECMASK;
MACRO_SOUND_MIXER SOUND_MIXER_RECSRC;
MACRO_SOUND_MIXER SOUND_MIXER_SPEAKER;
MACRO_SOUND_MIXER SOUND_MIXER_STEREODEVS;
MACRO_SOUND_MIXER SOUND_MIXER_SYNTH;
MACRO_SOUND_MIXER SOUND_MIXER_TREBLE;
MACRO_SOUND_MIXER SOUND_MIXER_VIDEO;
MACRO_SOUND_MIXER SOUND_MIXER_VOLUME;
MACRO_SOUND_MIXER SOUND_ONOFF_MAX;
MACRO_SOUND_MIXER SOUND_ONOFF_MIN;
MACRO_SOUND_PCM SOUND_PCM_NONBLOCK;
MACRO_SOUND_PCM SOUND_PCM_POST;
MACRO_SOUND_PCM SOUND_PCM_RESET;
MACRO_SOUND_PCM SOUND_PCM_SETSYNCRO;
MACRO_SOUND_PCM SOUND_PCM_SYNC;
MACRO_SOUND SOUND_VERSION;
MACRO_SO_ACCEPTCONN SO_ACCEPTCONN;
MACRO_SO_PEEK SO_ATTACH_BPF;
MACRO_SO SO_ATTACH_FILTER;
MACRO_SO SO_BINDTODEVICE;
MACRO_SO_PEEK SO_BPF_EXTENSIONS;
MACRO_SO SO_BROADCAST;
MACRO_SO SO_BSDCOMPAT;
MACRO_SO_PEEK SO_BUSY_POLL;
MACRO_SO SO_DEBUG;
MACRO_SO_PEEK SO_DETACH_BPF;
MACRO_SO SO_DETACH_FILTER;
MACRO_SO_PROTOCOL SO_DOMAIN;
MACRO_SO SO_DONTROUTE;
MACRO_SO SO_ERROR;
MACRO_SO SO_GET_FILTER;
MACRO_SO_PEEK SO_INCOMING_CPU;
MACRO_SO SO_KEEPALIVE;
MACRO_SO SO_LINGER;
MACRO_SO_PEEK SO_LOCK_FILTER;
MACRO_SO_MARK SO_MARK;
MACRO_SO_PEEK SO_MAX_PACING_RATE;
MACRO_SO_PEEK SO_NOFCS;
MACRO_SO SO_NO_CHECK;
MACRO_SO SO_OOBINLINE;
MACRO_SO SO_PASSCRED;
MACRO_SO_ACCEPTCONN SO_PASSSEC;
MACRO_SO_PEEK SO_PEEK_OFF;
MACRO_SO SO_PEERCRED;
MACRO_SO SO_PEERNAME;
MACRO_SO_ACCEPTCONN SO_PEERSEC;
MACRO_SO SO_PRIORITY;
MACRO_SO_PROTOCOL SO_PROTOCOL;
MACRO_SO SO_RCVBUF;
MACRO_SO SO_RCVBUFFORCE;
MACRO_SO SO_RCVLOWAT;
MACRO_SO SO_RCVTIMEO;
MACRO_SO SO_REUSEADDR;
MACRO_SO SO_REUSEPORT;
MACRO_SO_PROTOCOL SO_RXQ_OVFL;
MACRO_SO SO_SECURITY_AUTHENTICATION;
MACRO_SO SO_SECURITY_ENCRYPTION_NETWORK;
MACRO_SO SO_SECURITY_ENCRYPTION_TRANSPORT;
MACRO_SO_PEEK SO_SELECT_ERR_QUEUE;
MACRO_SO SO_SNDBUF;
MACRO_SO SO_SNDBUFFORCE;
MACRO_SO SO_SNDLOWAT;
MACRO_SO SO_SNDTIMEO;
MACRO_SO SO_TIMESTAMP;
MACRO_SO_MARK SO_TIMESTAMPING;
MACRO_SO_ACCEPTCONN SO_TIMESTAMPNS;
MACRO_SO SO_TYPE;
MACRO_SO_PROTOCOL SO_WIFI_STATUS;
MACRO_SPDIF SPDIF_CC;
MACRO_SPDIF SPDIF_COPY;
MACRO_SPDIF SPDIF_DRS;
MACRO_SPDIF SPDIF_L;
MACRO_SPDIF SPDIF_N_AUD;
MACRO_SPDIF SPDIF_PRE;
MACRO_SPDIF SPDIF_PRO;
MACRO_SPDIF SPDIF_V;
MACRO_DELAYTIMER SSIZE_MAX;
$4CCF5BD0F314D9FB3C73290162533A92 SS_DISABLE;
MACRO_SS SS_ET_COMMAND_NOT_FOUND;
MACRO_SS SS_ET_EOF;
MACRO_SS SS_ET_ESCAPE_DISABLED;
MACRO_SS SS_ET_LINE_ABORTED;
MACRO_SS SS_ET_NO_HELP_FILE;
MACRO_SS SS_ET_NO_INFO_DIR;
MACRO_SS SS_ET_NULL_INV;
MACRO_SS SS_ET_PERMISSION_DENIED;
MACRO_SS SS_ET_SUBSYSTEM_ABORTED;
MACRO_SS SS_ET_TABLE_NOT_FOUND;
MACRO_SS SS_ET_UNIMPLEMENTED;
MACRO_SS SS_ET_VERSION_MISMATCH;
$4CCF5BD0F314D9FB3C73290162533A92 SS_ONSTACK;
MACRO_SS_RQT SS_OPT_DONT_LIST;
MACRO_SS_RQT SS_OPT_DONT_SUMMARIZE;
MACRO_SS_RQT SS_RP_V1;
MACRO_SS_RQT SS_RQT_TBL_V2;
MACRO_STA STA_CLK;
MACRO_STA STA_CLOCKERR;
MACRO_STA STA_DEL;
MACRO_STA STA_FLL;
MACRO_STA STA_FREQHOLD;
MACRO_STA STA_INS;
MACRO_STA STA_MODE;
MACRO_STA STA_NANO;
MACRO_STA STA_PLL;
MACRO_STA STA_PPSERROR;
MACRO_STA STA_PPSFREQ;
MACRO_STA STA_PPSJITTER;
MACRO_STA STA_PPSSIGNAL;
MACRO_STA STA_PPSTIME;
MACRO_STA STA_PPSWANDER;
MACRO_STA STA_RONLY;
MACRO_STA STA_UNSYNC;
MACRO_STB STB_GLOBAL;
MACRO_STB STB_GNU_UNIQUE;
MACRO_STB STB_HIOS;
MACRO_STB STB_HIPROC;
MACRO_STB STB_LOCAL;
MACRO_STB STB_LOOS;
MACRO_STB STB_LOPROC;
MACRO_STB_MIPS STB_MIPS_SPLIT_COMMON;
MACRO_STB STB_NUM;
MACRO_STB STB_WEAK;
MACRO_FILENO STDERR_FILENO;
MACRO_FILENO STDIN_FILENO;
MACRO_FILENO STDOUT_FILENO;
$F1F648DD099C1B085CB728875CF977ED STICKY_TIMEOUTS;
MACRO_STN STN_UNDEF;
MACRO_STO_ALPHA STO_ALPHA_NOPV;
MACRO_STO_ALPHA STO_ALPHA_STD_GPLOAD;
MACRO_STO STO_MIPS_DEFAULT;
MACRO_STO STO_MIPS_HIDDEN;
MACRO_STO STO_MIPS_INTERNAL;
MACRO_STO STO_MIPS_PLT;
MACRO_STO STO_MIPS_PROTECTED;
MACRO_STO STO_MIPS_SC_ALIGN_UNUSED;
MACRO_STO_PPC64 STO_PPC64_LOCAL_BIT;
MACRO_STO_PPC64 STO_PPC64_LOCAL_MASK;
MACRO_STRCOUNT STRCOUNT;
MACRO_STRU STRU_F;
MACRO_STRU STRU_P;
MACRO_STRU STRU_R;
MACRO_NUMWRITE STRWRITE;
MACRO_STT_ARM STT_ARM_16BIT;
MACRO_STT_ARM STT_ARM_TFUNC;
MACRO_STT STT_COMMON;
MACRO_STT STT_FILE;
MACRO_STT STT_FUNC;
MACRO_STT STT_GNU_IFUNC;
MACRO_STT STT_HIOS;
MACRO_STT STT_HIPROC;
MACRO_STT_PARISC STT_HP_OPAQUE;
MACRO_STT_PARISC STT_HP_STUB;
MACRO_STT STT_LOOS;
MACRO_STT STT_LOPROC;
MACRO_STT STT_NOTYPE;
MACRO_STT STT_NUM;
MACRO_STT STT_OBJECT;
MACRO_STT_PARISC STT_PARISC_MILLICODE;
MACRO_STT STT_SECTION;
MACRO_STT_SPARC STT_SPARC_REGISTER;
MACRO_STT STT_TLS;
MACRO_STV STV_DEFAULT;
MACRO_STV STV_HIDDEN;
MACRO_STV STV_INTERNAL;
MACRO_STV STV_PROTECTED;
$7BA0AAB70F107C573DDBF8D470C03EEA ST_NOSUID;
$7BA0AAB70F107C573DDBF8D470C03EEA ST_RDONLY;
MACRO_SUBCMDMASK SUBCMDMASK;
MACRO_SUBCMDSHIFT SUBCMDSHIFT;
accept_stat SUCCESS;
MACRO_SUPPLY SUPPLY_INTERVAL;
MACRO_SUSP SUSP;
MACRO_SWAP SWAP_FLAG_DISCARD;
MACRO_SWAP SWAP_FLAG_PREFER;
MACRO_SWAP SWAP_FLAG_PRIO_MASK;
MACRO_SWAP SWAP_FLAG_PRIO_SHIFT;
MACRO_SYMINFO SYMINFO_BT_LOWRESERVE;
MACRO_SYMINFO SYMINFO_BT_PARENT;
MACRO_SYMINFO SYMINFO_BT_SELF;
MACRO_SYMINFO SYMINFO_CURRENT;
MACRO_SYMINFO SYMINFO_FLG_COPY;
MACRO_SYMINFO SYMINFO_FLG_DIRECT;
MACRO_SYMINFO SYMINFO_FLG_LAZYLOAD;
MACRO_SYMINFO SYMINFO_FLG_PASSTHRU;
MACRO_SYMINFO SYMINFO_NONE;
MACRO_SYMINFO SYMINFO_NUM;
MACRO_SYMTYPE SYMTYPE;
MACRO_SYNCH SYNCH;
MACRO_SYNTH_CAP SYNTH_CAP_INPUT;
MACRO_SYNTH_CAP SYNTH_CAP_OPL3;
MACRO_SYNTH_CAP SYNTH_CAP_PERCMODE;
MACRO_SYNTH SYNTH_TYPE_FM;
MACRO_SYNTH SYNTH_TYPE_MIDI;
MACRO_SYNTH SYNTH_TYPE_SAMPLE;
MACRO_SYSEX SYSEX_PATCH;
accept_stat SYSTEM_ERR;
MACRO_SYS_NMLN SYS_NMLN;
MACRO_SYS SYS__llseek;
MACRO_SYS SYS__newselect;
MACRO_SYS SYS__sysctl;
MACRO_SYS SYS_accept;
MACRO_SYS SYS_accept4;
MACRO_SYS SYS_access;
MACRO_SYS SYS_acct;
MACRO_SYS SYS_add_key;
MACRO_SYS SYS_adjtimex;
MACRO_SYS SYS_afs_syscall;
MACRO_SYS SYS_alarm;
MACRO_SYS SYS_bdflush;
MACRO_SYS SYS_bind;
MACRO_SYS SYS_bpf;
MACRO_SYS SYS_break;
MACRO_SYS SYS_brk;
MACRO_SYS SYS_capget;
MACRO_SYS SYS_capset;
MACRO_SYS SYS_chdir;
MACRO_SYS SYS_chmod;
MACRO_SYS SYS_chown;
MACRO_SYS SYS_chroot;
MACRO_SYS SYS_clock_adjtime;
MACRO_SYS SYS_clock_getres;
MACRO_SYS SYS_clock_gettime;
MACRO_SYS SYS_clock_nanosleep;
MACRO_SYS SYS_clock_settime;
MACRO_SYS SYS_clone;
MACRO_SYS SYS_close;
MACRO_SYS SYS_connect;
MACRO_SYS SYS_creat;
MACRO_SYS SYS_create_module;
MACRO_SYS SYS_delete_module;
MACRO_SYS SYS_dup;
MACRO_SYS SYS_dup2;
MACRO_SYS SYS_dup3;
MACRO_SYS SYS_epoll_create;
MACRO_SYS SYS_epoll_create1;
MACRO_SYS SYS_epoll_ctl;
MACRO_SYS SYS_epoll_pwait;
MACRO_SYS SYS_epoll_wait;
MACRO_SYS SYS_eventfd;
MACRO_SYS SYS_eventfd2;
MACRO_SYS SYS_execve;
MACRO_SYS SYS_execveat;
MACRO_SYS SYS_exit;
MACRO_SYS SYS_exit_group;
MACRO_SYS SYS_faccessat;
MACRO_SYS SYS_fadvise64;
MACRO_SYS SYS_fadvise64_64;
MACRO_SYS SYS_fallocate;
MACRO_SYS SYS_fanotify_init;
MACRO_SYS SYS_fanotify_mark;
MACRO_SYS SYS_fchdir;
MACRO_SYS SYS_fchmod;
MACRO_SYS SYS_fchmodat;
MACRO_SYS SYS_fchown;
MACRO_SYS SYS_fchownat;
MACRO_SYS SYS_fcntl;
MACRO_SYS SYS_fcntl64;
MACRO_SYS SYS_fdatasync;
MACRO_SYS SYS_fgetxattr;
MACRO_SYS SYS_finit_module;
MACRO_SYS SYS_flistxattr;
MACRO_SYS SYS_flock;
MACRO_SYS SYS_fork;
MACRO_SYS SYS_fremovexattr;
MACRO_SYS SYS_fsetxattr;
MACRO_SYS SYS_fstat;
MACRO_SYS SYS_fstat64;
MACRO_SYS SYS_fstatat64;
MACRO_SYS SYS_fstatfs;
MACRO_SYS SYS_fstatfs64;
MACRO_SYS SYS_fsync;
MACRO_SYS SYS_ftime;
MACRO_SYS SYS_ftruncate;
MACRO_SYS SYS_ftruncate64;
MACRO_SYS SYS_futex;
MACRO_SYS SYS_futimesat;
MACRO_SYS SYS_get_kernel_syms;
MACRO_SYS SYS_get_mempolicy;
MACRO_SYS SYS_get_robust_list;
MACRO_SYS SYS_getcpu;
MACRO_SYS SYS_getcwd;
MACRO_SYS SYS_getdents;
MACRO_SYS SYS_getdents64;
MACRO_SYS SYS_getegid;
MACRO_SYS SYS_geteuid;
MACRO_SYS SYS_getgid;
MACRO_SYS SYS_getgroups;
MACRO_SYS SYS_getitimer;
MACRO_SYS SYS_getpeername;
MACRO_SYS SYS_getpgid;
MACRO_SYS SYS_getpgrp;
MACRO_SYS SYS_getpid;
MACRO_SYS SYS_getpmsg;
MACRO_SYS SYS_getppid;
MACRO_SYS SYS_getpriority;
MACRO_SYS SYS_getrandom;
MACRO_SYS SYS_getresgid;
MACRO_SYS SYS_getresuid;
MACRO_SYS SYS_getrlimit;
MACRO_SYS SYS_getrusage;
MACRO_SYS SYS_getsid;
MACRO_SYS SYS_getsockname;
MACRO_SYS SYS_getsockopt;
MACRO_SYS SYS_gettid;
MACRO_SYS SYS_gettimeofday;
MACRO_SYS SYS_getuid;
MACRO_SYS SYS_getxattr;
MACRO_SYS SYS_gtty;
MACRO_SYS SYS_idle;
MACRO_SYS SYS_init_module;
MACRO_SYS SYS_inotify_add_watch;
MACRO_SYS SYS_inotify_init;
MACRO_SYS SYS_inotify_init1;
MACRO_SYS SYS_inotify_rm_watch;
MACRO_SYS SYS_io_cancel;
MACRO_SYS SYS_io_destroy;
MACRO_SYS SYS_io_getevents;
MACRO_SYS SYS_io_setup;
MACRO_SYS SYS_io_submit;
MACRO_SYS SYS_ioctl;
MACRO_SYS SYS_ioperm;
MACRO_SYS SYS_iopl;
MACRO_SYS SYS_ioprio_get;
MACRO_SYS SYS_ioprio_set;
MACRO_SYS SYS_ipc;
MACRO_SYS SYS_kcmp;
MACRO_SYS SYS_kexec_load;
MACRO_SYS SYS_keyctl;
MACRO_SYS SYS_kill;
MACRO_SYS SYS_lchown;
MACRO_SYS SYS_lgetxattr;
MACRO_SYS SYS_link;
MACRO_SYS SYS_linkat;
MACRO_SYS SYS_listen;
MACRO_SYS SYS_listxattr;
MACRO_SYS SYS_llistxattr;
MACRO_SYS SYS_lock;
MACRO_SYS SYS_lookup_dcookie;
MACRO_SYS SYS_lremovexattr;
MACRO_SYS SYS_lseek;
MACRO_SYS SYS_lsetxattr;
MACRO_SYS SYS_lstat;
MACRO_SYS SYS_lstat64;
MACRO_SYS SYS_madvise;
MACRO_SYS SYS_mbind;
MACRO_SYS SYS_memfd_create;
MACRO_SYS SYS_migrate_pages;
MACRO_SYS SYS_mincore;
MACRO_SYS SYS_mkdir;
MACRO_SYS SYS_mkdirat;
MACRO_SYS SYS_mknod;
MACRO_SYS SYS_mknodat;
MACRO_SYS SYS_mlock;
MACRO_SYS SYS_mlockall;
MACRO_SYS SYS_mmap;
MACRO_SYS SYS_mmap2;
MACRO_SYS SYS_modify_ldt;
MACRO_SYS SYS_mount;
MACRO_SYS SYS_move_pages;
MACRO_SYS SYS_mprotect;
MACRO_SYS SYS_mpx;
MACRO_SYS SYS_mq_getsetattr;
MACRO_SYS SYS_mq_notify;
MACRO_SYS SYS_mq_open;
MACRO_SYS SYS_mq_timedreceive;
MACRO_SYS SYS_mq_timedsend;
MACRO_SYS SYS_mq_unlink;
MACRO_SYS SYS_mremap;
MACRO_SYS SYS_msync;
MACRO_SYS SYS_multiplexer;
MACRO_SYS SYS_munlock;
MACRO_SYS SYS_munlockall;
MACRO_SYS SYS_munmap;
MACRO_SYS SYS_name_to_handle_at;
MACRO_SYS SYS_nanosleep;
MACRO_SYS SYS_nfsservctl;
MACRO_SYS SYS_nice;
MACRO_SYS SYS_oldfstat;
MACRO_SYS SYS_oldlstat;
MACRO_SYS SYS_oldolduname;
MACRO_SYS SYS_oldstat;
MACRO_SYS SYS_olduname;
MACRO_SYS SYS_open;
MACRO_SYS SYS_open_by_handle_at;
MACRO_SYS SYS_openat;
MACRO_SYS SYS_pause;
MACRO_SYS SYS_pciconfig_iobase;
MACRO_SYS SYS_pciconfig_read;
MACRO_SYS SYS_pciconfig_write;
MACRO_SYS SYS_perf_event_open;
MACRO_SYS SYS_personality;
MACRO_SYS SYS_pipe;
MACRO_SYS SYS_pipe2;
MACRO_SYS SYS_pivot_root;
MACRO_SYS SYS_poll;
MACRO_SYS SYS_ppoll;
MACRO_SYS SYS_prctl;
MACRO_SYS SYS_pread64;
MACRO_SYS SYS_preadv;
MACRO_SYS SYS_prlimit64;
MACRO_SYS SYS_process_vm_readv;
MACRO_SYS SYS_process_vm_writev;
MACRO_SYS SYS_prof;
MACRO_SYS SYS_profil;
MACRO_SYS SYS_pselect6;
MACRO_SYS SYS_ptrace;
MACRO_SYS SYS_putpmsg;
MACRO_SYS SYS_pwrite64;
MACRO_SYS SYS_pwritev;
MACRO_SYS SYS_query_module;
MACRO_SYS SYS_quotactl;
MACRO_SYS SYS_read;
MACRO_SYS SYS_readahead;
MACRO_SYS SYS_readdir;
MACRO_SYS SYS_readlink;
MACRO_SYS SYS_readlinkat;
MACRO_SYS SYS_readv;
MACRO_SYS SYS_reboot;
MACRO_SYS SYS_recv;
MACRO_SYS SYS_recvfrom;
MACRO_SYS SYS_recvmmsg;
MACRO_SYS SYS_recvmsg;
MACRO_SYS SYS_remap_file_pages;
MACRO_SYS SYS_removexattr;
MACRO_SYS SYS_rename;
MACRO_SYS SYS_renameat;
MACRO_SYS SYS_renameat2;
MACRO_SYS SYS_request_key;
MACRO_SYS SYS_restart_syscall;
MACRO_SYS SYS_rmdir;
MACRO_SYS SYS_rt_sigaction;
MACRO_SYS SYS_rt_sigpending;
MACRO_SYS SYS_rt_sigprocmask;
MACRO_SYS SYS_rt_sigqueueinfo;
MACRO_SYS SYS_rt_sigreturn;
MACRO_SYS SYS_rt_sigsuspend;
MACRO_SYS SYS_rt_sigtimedwait;
MACRO_SYS SYS_rt_tgsigqueueinfo;
MACRO_SYS SYS_rtas;
MACRO_SYS SYS_sched_get_priority_max;
MACRO_SYS SYS_sched_get_priority_min;
MACRO_SYS SYS_sched_getaffinity;
MACRO_SYS SYS_sched_getattr;
MACRO_SYS SYS_sched_getparam;
MACRO_SYS SYS_sched_getscheduler;
MACRO_SYS SYS_sched_rr_get_interval;
MACRO_SYS SYS_sched_setaffinity;
MACRO_SYS SYS_sched_setattr;
MACRO_SYS SYS_sched_setparam;
MACRO_SYS SYS_sched_setscheduler;
MACRO_SYS SYS_sched_yield;
MACRO_SYS SYS_seccomp;
MACRO_SYS SYS_select;
MACRO_SYS SYS_send;
MACRO_SYS SYS_sendfile;
MACRO_SYS SYS_sendfile64;
MACRO_SYS SYS_sendmmsg;
MACRO_SYS SYS_sendmsg;
MACRO_SYS SYS_sendto;
MACRO_SYS SYS_set_mempolicy;
MACRO_SYS SYS_set_robust_list;
MACRO_SYS SYS_set_tid_address;
MACRO_SYS SYS_setdomainname;
MACRO_SYS SYS_setfsgid;
MACRO_SYS SYS_setfsuid;
MACRO_SYS SYS_setgid;
MACRO_SYS SYS_setgroups;
MACRO_SYS SYS_sethostname;
MACRO_SYS SYS_setitimer;
MACRO_SYS SYS_setns;
MACRO_SYS SYS_setpgid;
MACRO_SYS SYS_setpriority;
MACRO_SYS SYS_setregid;
MACRO_SYS SYS_setresgid;
MACRO_SYS SYS_setresuid;
MACRO_SYS SYS_setreuid;
MACRO_SYS SYS_setrlimit;
MACRO_SYS SYS_setsid;
MACRO_SYS SYS_setsockopt;
MACRO_SYS SYS_settimeofday;
MACRO_SYS SYS_setuid;
MACRO_SYS SYS_setxattr;
MACRO_SYS SYS_sgetmask;
MACRO_SYS SYS_shutdown;
MACRO_SYS SYS_sigaction;
MACRO_SYS SYS_sigaltstack;
MACRO_SYS SYS_signal;
MACRO_SYS SYS_signalfd;
MACRO_SYS SYS_signalfd4;
MACRO_SYS SYS_sigpending;
MACRO_SYS SYS_sigprocmask;
MACRO_SYS SYS_sigreturn;
MACRO_SYS SYS_sigsuspend;
MACRO_SYS SYS_socket;
MACRO_SYS SYS_socketcall;
MACRO_SYS SYS_socketpair;
MACRO_SYS SYS_splice;
MACRO_SYS SYS_spu_create;
MACRO_SYS SYS_spu_run;
MACRO_SYS SYS_ssetmask;
MACRO_SYS SYS_stat;
MACRO_SYS SYS_stat64;
MACRO_SYS SYS_statfs;
MACRO_SYS SYS_statfs64;
MACRO_SYS SYS_stime;
MACRO_SYS SYS_stty;
MACRO_SYS SYS_subpage_prot;
MACRO_SYS SYS_swapcontext;
MACRO_SYS SYS_swapoff;
MACRO_SYS SYS_swapon;
MACRO_SYS SYS_symlink;
MACRO_SYS SYS_symlinkat;
MACRO_SYS SYS_sync;
MACRO_SYS SYS_sync_file_range2;
MACRO_SYS SYS_syncfs;
MACRO_SYS SYS_sys_debug_setcontext;
MACRO_SYS SYS_sysfs;
MACRO_SYS SYS_sysinfo;
MACRO_SYS SYS_syslog;
MACRO_SYS SYS_tee;
MACRO_SYS SYS_tgkill;
MACRO_SYS SYS_time;
MACRO_SYS SYS_timer_create;
MACRO_SYS SYS_timer_delete;
MACRO_SYS SYS_timer_getoverrun;
MACRO_SYS SYS_timer_gettime;
MACRO_SYS SYS_timer_settime;
MACRO_SYS SYS_timerfd_create;
MACRO_SYS SYS_timerfd_gettime;
MACRO_SYS SYS_timerfd_settime;
MACRO_SYS SYS_times;
MACRO_SYS SYS_tkill;
MACRO_SYS SYS_truncate;
MACRO_SYS SYS_truncate64;
MACRO_SYS SYS_tuxcall;
MACRO_SYS SYS_ugetrlimit;
MACRO_SYS SYS_ulimit;
MACRO_SYS SYS_umask;
MACRO_SYS SYS_umount;
MACRO_SYS SYS_umount2;
MACRO_SYS SYS_uname;
MACRO_SYS SYS_unlink;
MACRO_SYS SYS_unlinkat;
MACRO_SYS SYS_unshare;
MACRO_SYS SYS_uselib;
MACRO_SYS SYS_ustat;
MACRO_SYS SYS_utime;
MACRO_SYS SYS_utimensat;
MACRO_SYS SYS_utimes;
MACRO_SYS SYS_vfork;
MACRO_SYS SYS_vhangup;
MACRO_SYS SYS_vm86;
MACRO_SYS SYS_vmsplice;
MACRO_SYS SYS_wait4;
MACRO_SYS SYS_waitid;
MACRO_SYS SYS_waitpid;
MACRO_SYS SYS_write;
MACRO_SYS SYS_writev;
MACRO_S_INPUT S_BANDURG;
MACRO_S_BLKSIZE S_BLKSIZE;
MACRO_S_INPUT S_ERROR;
MACRO_S_INPUT S_HANGUP;
MACRO_S_INPUT S_HIPRI;
MACRO_S_IREAD S_IEXEC;
MACRO_S S_IFBLK;
MACRO_S S_IFCHR;
MACRO_S S_IFDIR;
MACRO_S S_IFIFO;
MACRO_S S_IFLNK;
MACRO_S S_IFMT;
MACRO_S S_IFREG;
MACRO_S S_IFSOCK;
MACRO_S_INPUT S_INPUT;
MACRO_S_IREAD S_IREAD;
MACRO_S S_IRGRP;
MACRO_S S_IROTH;
MACRO_S S_IRUSR;
MACRO_S S_IRWXG;
MACRO_S S_IRWXO;
MACRO_S S_IRWXU;
MACRO_S S_ISGID;
MACRO_S S_ISUID;
MACRO_S S_ISVTX;
MACRO_S S_IWGRP;
MACRO_S S_IWOTH;
MACRO_S_IREAD S_IWRITE;
MACRO_S S_IWUSR;
MACRO_S S_IXGRP;
MACRO_S S_IXOTH;
MACRO_S S_IXUSR;
MACRO_S_INPUT S_MSG;
MACRO_S_INPUT S_OUTPUT;
MACRO_S_INPUT S_RDBAND;
MACRO_S_INPUT S_RDNORM;
MACRO_S_INPUT S_WRBAND;
MACRO_S_INPUT S_WRNORM;
MACRO_TAB0 TAB0;
MACRO_TAB0 TAB1;
MACRO_TAB0 TAB2;
MACRO_TAB3 TAB3;
MACRO_NL3 TABDLY;
MACRO_TALK TALK_VERSION;
MACRO_TCFLSH TCFLSH;
MACRO_TCIFLUSH TCIFLUSH;
MACRO_TCOOFF TCIOFF;
MACRO_TCIFLUSH TCIOFLUSH;
MACRO_TCION TCION;
MACRO_TCIFLUSH TCOFLUSH;
MACRO_TCOOFF TCOOFF;
MACRO_TCOOFF TCOON;
MACRO_TCPI TCPI_OPT_ECN;
MACRO_TCPI TCPI_OPT_ECN_SEEN;
MACRO_TCPI TCPI_OPT_SACK;
MACRO_TCPI TCPI_OPT_SYN_DATA;
MACRO_TCPI TCPI_OPT_TIMESTAMPS;
MACRO_TCPI TCPI_OPT_WSCALE;
MACRO_TCPOLEN TCPOLEN_MAXSEG;
MACRO_SACK_PERMITTED TCPOLEN_SACK_PERMITTED;
MACRO_TCPOLEN_TIMESTAMP TCPOLEN_TIMESTAMP;
MACRO_TCPOLEN_TIMESTAMP TCPOLEN_TSTAMP_APPA;
MACRO_WINDOW TCPOLEN_WINDOW;
MACRO_TCPOPT TCPOPT_EOL;
MACRO_TCPOPT TCPOPT_MAXSEG;
MACRO_TCPOPT TCPOPT_NOP;
MACRO_TCPOPT_SACK TCPOPT_SACK;
MACRO_SACK_PERMITTED TCPOPT_SACK_PERMITTED;
MACRO_TCPOPT_SACK TCPOPT_TIMESTAMP;
MACRO_TCPOPT_TSTAMP TCPOPT_TSTAMP_HDR;
MACRO_WINDOW TCPOPT_WINDOW;
tcp_ca_state TCP_CA_CWR;
tcp_ca_state TCP_CA_Disorder;
tcp_ca_state TCP_CA_Loss;
tcp_ca_state TCP_CA_Open;
tcp_ca_state TCP_CA_Recovery;
$0FA339A064E61FF434A56DA3EE04706A TCP_CLOSE;
$0FA339A064E61FF434A56DA3EE04706A TCP_CLOSE_WAIT;
$0FA339A064E61FF434A56DA3EE04706A TCP_CLOSING;
MACRO_TCP TCP_CONGESTION;
MACRO_TCP_MD5SIG TCP_COOKIE_IN_ALWAYS;
MACRO_TCP_MD5SIG TCP_COOKIE_MAX;
MACRO_TCP_MD5SIG TCP_COOKIE_MIN;
MACRO_TCP_MD5SIG TCP_COOKIE_OUT_NEVER;
MACRO_TCP_MD5SIG TCP_COOKIE_PAIR_SIZE;
MACRO_TCP TCP_COOKIE_TRANSACTIONS;
MACRO_TCP TCP_CORK;
MACRO_TCP TCP_DEFER_ACCEPT;
$0FA339A064E61FF434A56DA3EE04706A TCP_ESTABLISHED;
MACRO_TCP TCP_FASTOPEN;
$0FA339A064E61FF434A56DA3EE04706A TCP_FIN_WAIT1;
$0FA339A064E61FF434A56DA3EE04706A TCP_FIN_WAIT2;
MACRO_TCP TCP_INFO;
MACRO_TCP TCP_KEEPCNT;
MACRO_TCP TCP_KEEPIDLE;
MACRO_TCP TCP_KEEPINTVL;
$0FA339A064E61FF434A56DA3EE04706A TCP_LAST_ACK;
MACRO_TCP TCP_LINGER2;
$0FA339A064E61FF434A56DA3EE04706A TCP_LISTEN;
MACRO_TCP TCP_MAXSEG;
MACRO_TCP_MSS TCP_MAXWIN;
MACRO_TCP_MSS TCP_MAX_WINSHIFT;
MACRO_TCP TCP_MD5SIG;
MACRO_TCP_MD5SIG TCP_MD5SIG_MAXKEYLEN;
MACRO_TCP_MSS TCP_MSS;
MACRO_TCP_MD5SIG TCP_MSS_DEFAULT;
MACRO_TCP_MD5SIG TCP_MSS_DESIRED;
MACRO_TCP TCP_NODELAY;
$0450D7A3E1ABBCDA32B8138634189C78 TCP_NO_QUEUE;
$0450D7A3E1ABBCDA32B8138634189C78 TCP_QUEUES_NR;
MACRO_TCP TCP_QUEUE_SEQ;
MACRO_TCP TCP_QUICKACK;
$0450D7A3E1ABBCDA32B8138634189C78 TCP_RECV_QUEUE;
MACRO_TCP TCP_REPAIR;
MACRO_TCP TCP_REPAIR_OPTIONS;
MACRO_TCP TCP_REPAIR_QUEUE;
$0450D7A3E1ABBCDA32B8138634189C78 TCP_SEND_QUEUE;
MACRO_TCP TCP_SYNCNT;
$0FA339A064E61FF434A56DA3EE04706A TCP_SYN_RECV;
$0FA339A064E61FF434A56DA3EE04706A TCP_SYN_SENT;
MACRO_TCP_MD5SIG TCP_S_DATA_IN;
MACRO_TCP_MD5SIG TCP_S_DATA_OUT;
MACRO_TCP TCP_THIN_DUPACK;
MACRO_TCP TCP_THIN_LINEAR_TIMEOUTS;
MACRO_TCP TCP_TIMESTAMP;
$0FA339A064E61FF434A56DA3EE04706A TCP_TIME_WAIT;
MACRO_TCP TCP_USER_TIMEOUT;
MACRO_TCP TCP_WINDOW_CLAMP;
MACRO_TCSANOW TCSADRAIN;
MACRO_TCSANOW TCSAFLUSH;
MACRO_TCSANOW TCSANOW;
MACRO_TCSBRK TCSBRK;
MACRO_TCSBRKP TCSBRKP;
MACRO_TCXONC TCXONC;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_ALL_EVENTS;
$B66645BB19D3E41D07C841CC99076606 TD_BADKEY;
$B66645BB19D3E41D07C841CC99076606 TD_BADPH;
$B66645BB19D3E41D07C841CC99076606 TD_BADSH;
$B66645BB19D3E41D07C841CC99076606 TD_BADTA;
$B66645BB19D3E41D07C841CC99076606 TD_BADTH;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_CATCHSIG;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_CONCURRENCY;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_CREATE;
$B66645BB19D3E41D07C841CC99076606 TD_DBERR;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_DEATH;
$B66645BB19D3E41D07C841CC99076606 TD_ERR;
MACRO_TD TD_EVENTSIZE;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_EVENTS_ENABLE;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_EVENT_NONE;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_IDLE;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_LOCK_TRY;
$B66645BB19D3E41D07C841CC99076606 TD_MALLOC;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_MAX_EVENT_NUM;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_MIN_EVENT_NUM;
$B66645BB19D3E41D07C841CC99076606 TD_NOAPLIC;
$B66645BB19D3E41D07C841CC99076606 TD_NOCAPAB;
$B66645BB19D3E41D07C841CC99076606 TD_NOEVENT;
$B66645BB19D3E41D07C841CC99076606 TD_NOFPREGS;
$B66645BB19D3E41D07C841CC99076606 TD_NOLIBTHREAD;
$B66645BB19D3E41D07C841CC99076606 TD_NOLWP;
$B66645BB19D3E41D07C841CC99076606 TD_NOMSG;
$B66645BB19D3E41D07C841CC99076606 TD_NOSV;
$B66645BB19D3E41D07C841CC99076606 TD_NOTALLOC;
$B66645BB19D3E41D07C841CC99076606 TD_NOTHR;
$B66645BB19D3E41D07C841CC99076606 TD_NOTLS;
$B66645BB19D3E41D07C841CC99076606 TD_NOTSD;
$B66645BB19D3E41D07C841CC99076606 TD_NOXREGS;
$B66645BB19D3E41D07C841CC99076606 TD_OK;
$B66645BB19D3E41D07C841CC99076606 TD_PARTIALREG;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_PREEMPT;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_PRI_INHERIT;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_READY;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_REAP;
MACRO_TD TD_SIGNO_MASK;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_SLEEP;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_SWITCHFROM;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_SWITCHTO;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_ACTIVE;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_ANY_STATE;
$89FB60EA18EC68E58342D0F505790FD5 TD_THR_ANY_TYPE;
MACRO_TD TD_THR_ANY_USER_FLAGS;
MACRO_TD TD_THR_LOWEST_PRIORITY;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_RUN;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_SLEEP;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_STOPPED;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_STOPPED_ASLEEP;
$89FB60EA18EC68E58342D0F505790FD5 TD_THR_SYSTEM;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_UNKNOWN;
$89FB60EA18EC68E58342D0F505790FD5 TD_THR_USER;
$D4AB9A46DE65367CC0FF11AD6E77796A TD_THR_ZOMBIE;
$65CF98EECFB69F691B0631C04FBFD9D4 TD_TIMEOUT;
$B66645BB19D3E41D07C841CC99076606 TD_TLSDEFER;
$B66645BB19D3E41D07C841CC99076606 TD_VERSION;
MACRO_TELCMD TELCMD_FIRST;
MACRO_TELCMD TELCMD_LAST;
MACRO_TELOPT TELOPT_3270REGIME;
MACRO_TELOPT TELOPT_AUTHENTICATION;
MACRO_TELOPT TELOPT_BINARY;
MACRO_TELOPT TELOPT_BM;
MACRO_TELOPT TELOPT_DET;
MACRO_TELOPT TELOPT_ECHO;
MACRO_TELOPT TELOPT_ENCRYPT;
MACRO_TELOPT TELOPT_EOR;
MACRO_TELOPT TELOPT_EXOPL;
MACRO_TELOPT TELOPT_LFLOW;
MACRO_TELOPT TELOPT_LINEMODE;
MACRO_TELOPT TELOPT_LOGOUT;
MACRO_TELOPT TELOPT_NAMS;
MACRO_TELOPT TELOPT_NAOCRD;
MACRO_TELOPT TELOPT_NAOFFD;
MACRO_TELOPT TELOPT_NAOHTD;
MACRO_TELOPT TELOPT_NAOHTS;
MACRO_TELOPT TELOPT_NAOL;
MACRO_TELOPT TELOPT_NAOLFD;
MACRO_TELOPT TELOPT_NAOP;
MACRO_TELOPT TELOPT_NAOVTD;
MACRO_TELOPT TELOPT_NAOVTS;
MACRO_TELOPT TELOPT_NAWS;
MACRO_TELOPT TELOPT_NEW_ENVIRON;
MACRO_TELOPT TELOPT_OLD_ENVIRON;
MACRO_TELOPT TELOPT_OUTMRK;
MACRO_TELOPT TELOPT_RCP;
MACRO_TELOPT TELOPT_RCTE;
MACRO_TELOPT TELOPT_SGA;
MACRO_TELOPT TELOPT_SNDLOC;
MACRO_TELOPT TELOPT_STATUS;
MACRO_TELOPT TELOPT_SUPDUP;
MACRO_TELOPT TELOPT_SUPDUPOUTPUT;
MACRO_TELOPT TELOPT_TM;
MACRO_TELOPT TELOPT_TSPEED;
MACRO_TELOPT TELOPT_TTYLOC;
MACRO_TELOPT TELOPT_TTYPE;
MACRO_TELOPT TELOPT_TUID;
MACRO_TELOPT TELOPT_X3PAD;
MACRO_TELOPT TELOPT_XASCII;
MACRO_TELOPT TELOPT_XDISPLOC;
MACRO_TELQUAL TELQUAL_INFO;
MACRO_TELQUAL TELQUAL_IS;
MACRO_TELQUAL TELQUAL_NAME;
MACRO_TELQUAL TELQUAL_REPLY;
MACRO_TELQUAL TELQUAL_SEND;
MACRO_TERMIOS TERMIOS;
MACRO_TGEXEC TGEXEC;
MACRO_TGREAD TGREAD;
MACRO_TGWRITE TGWRITE;
$2EA190A087F83F88A23D8B31FFFB0F26 THOUSEP;
MACRO_TH TH_ACK;
MACRO_TH TH_FIN;
MACRO_TH TH_PUSH;
MACRO_TH TH_RST;
MACRO_TH TH_SYN;
MACRO_TH TH_URG;
MACRO_TIMER TIMER_ABSTIME;
MACRO_TIMER_RATE TIMER_RATE;
MACRO_TIME_OK TIME_BAD;
MACRO_TIME_OK TIME_DEL;
MACRO_TIME_OK TIME_ERROR;
MACRO_TIME_OK TIME_INS;
MACRO_TIME_OK TIME_OK;
MACRO_TIME_OK TIME_OOP;
MACRO_TIME_OK TIME_WAIT;
MACRO_TIOCCBRK TIOCCBRK;
MACRO_TIOCCONS TIOCCONS;
MACRO_TIOCEXCL TIOCEXCL;
MACRO_TIOCGETD TIOCGETD;
MACRO_TIOCGICOUNT TIOCGICOUNT;
MACRO_TIOCGLCKTRMIOS TIOCGLCKTRMIOS;
MACRO_TIOCGRS485 TIOCGRS485;
MACRO_TIOCGSERIAL TIOCGSERIAL;
MACRO_TIOCGSID TIOCGSID;
MACRO_TIOCGSOFTCAR TIOCGSOFTCAR;
MACRO_TIOCLINUX TIOCLINUX;
MACRO_TIOCMBIC TIOCMBIC;
MACRO_TIOCMBIS TIOCMBIS;
MACRO_TIOCMGET TIOCMGET;
MACRO_TIOCMIWAIT TIOCMIWAIT;
MACRO_TIOCMSET TIOCMSET;
MACRO_TIOCM TIOCM_CAR;
MACRO_TIOCM TIOCM_CD;
MACRO_TIOCM TIOCM_CTS;
MACRO_TIOCM TIOCM_DSR;
MACRO_TIOCM TIOCM_DTR;
MACRO_TIOCM TIOCM_LE;
MACRO_TIOCM TIOCM_LOOP;
MACRO_TIOCM TIOCM_OUT1;
MACRO_TIOCM TIOCM_OUT2;
MACRO_TIOCM TIOCM_RI;
MACRO_TIOCM TIOCM_RNG;
MACRO_TIOCM TIOCM_RTS;
MACRO_TIOCM TIOCM_SR;
MACRO_TIOCM TIOCM_ST;
MACRO_TIOCNOTTY TIOCNOTTY;
MACRO_TIOCNXCL TIOCNXCL;
MACRO_TIOCPKT_0 TIOCPKT;
MACRO_TIOCPKT TIOCPKT_DATA;
MACRO_TIOCPKT TIOCPKT_DOSTOP;
MACRO_TIOCPKT TIOCPKT_FLUSHREAD;
MACRO_TIOCPKT TIOCPKT_FLUSHWRITE;
MACRO_TIOCPKT_IOCTL TIOCPKT_IOCTL;
MACRO_TIOCPKT TIOCPKT_NOSTOP;
MACRO_TIOCPKT TIOCPKT_START;
MACRO_TIOCPKT TIOCPKT_STOP;
MACRO_TIOCSBRK TIOCSBRK;
MACRO_TIOCSCTTY TIOCSCTTY;
MACRO_TIOCSERCONFIG TIOCSERCONFIG;
MACRO_TIOCSERGETLSR TIOCSERGETLSR;
MACRO_TIOCSERGETMULTI TIOCSERGETMULTI;
MACRO_TIOCSERGSTRUCT TIOCSERGSTRUCT;
MACRO_TIOCSERGWILD TIOCSERGWILD;
MACRO_TIOCSERSETMULTI TIOCSERSETMULTI;
MACRO_TIOCSERSWILD TIOCSERSWILD;
MACRO_TIOCSER TIOCSER_TEMT;
MACRO_TIOCSETD TIOCSETD;
MACRO_TIOCSLCKTRMIOS TIOCSLCKTRMIOS;
MACRO_TIOCSRS485 TIOCSRS485;
MACRO_TIOCSSERIAL TIOCSSERIAL;
MACRO_TIOCSSOFTCAR TIOCSSOFTCAR;
MACRO_TIOCSTART TIOCSTART;
MACRO_TIOCSTI TIOCSTI;
MACRO_TIOCSTOP TIOCSTOP;
MACRO_TIOCVHANGUP TIOCVHANGUP;
MACRO_TLOSS TLOSS;
MACRO_TMAGLEN TMAGLEN;
MACRO_TMP TMP_MAX;
MACRO_TMR_WAIT TMR_CLOCK;
MACRO_TMR_WAIT TMR_CONTINUE;
MACRO_TMR_WAIT TMR_ECHO;
MACRO_TMR TMR_EXTERNAL;
MACRO_TMR TMR_INTERNAL;
MACRO_TMR TMR_MODE_CLS;
MACRO_TMR TMR_MODE_FSK;
MACRO_TMR TMR_MODE_MIDI;
MACRO_TMR TMR_MODE_SMPTE;
MACRO_TMR_WAIT TMR_SPP;
MACRO_TMR_WAIT TMR_START;
MACRO_TMR_WAIT TMR_STOP;
MACRO_TMR_WAIT TMR_TEMPO;
MACRO_TMR_WAIT TMR_TIMESIG;
MACRO_TMR_WAIT TMR_WAIT_ABS;
MACRO_TMR_WAIT TMR_WAIT_REL;
MACRO_TOEXEC TOEXEC;
MACRO_TOREAD TOREAD;
MACRO_TOSTOP TOSTOP;
MACRO_TOWRITE TOWRITE;
MACRO_CONTINUE TRANSIENT;
MACRO_BOOL TRUE;
MACRO_TRY TRY_AGAIN;
MACRO_TR TR_ALEN;
MACRO_TR_RII TR_MAXRIFLEN;
MACRO_TR_RII TR_RCF_BROADCAST;
MACRO_TR_RII TR_RCF_BROADCAST_MASK;
MACRO_TR_RII TR_RCF_DIR_BIT;
MACRO_TR_RII TR_RCF_FRAME2K;
MACRO_TR_RII TR_RCF_LEN_MASK;
MACRO_TR_RII TR_RCF_LIMITED_BROADCAST;
MACRO_TR_RII TR_RII;
MACRO_TSGID TSGID;
MACRO_TSPTYPENUMBER TSPTYPENUMBER;
MACRO_TSPVERSION TSPVERSION;
MACRO_TSP TSP_ACCEPT;
MACRO_TSP TSP_ACK;
MACRO_TSP TSP_ADJTIME;
MACRO_TSP TSP_ANY;
MACRO_TSP TSP_CONFLICT;
MACRO_TSP TSP_DATE;
MACRO_TSP TSP_DATEACK;
MACRO_TSP TSP_DATEREQ;
MACRO_TSP TSP_ELECTION;
MACRO_TSP TSP_LOOP;
MACRO_TSP TSP_MASTERACK;
MACRO_TSP TSP_MASTERREQ;
MACRO_TSP TSP_MASTERUP;
MACRO_TSP TSP_MSITE;
MACRO_TSP TSP_MSITEREQ;
MACRO_TSP TSP_QUIT;
MACRO_TSP TSP_REFUSE;
MACRO_TSP TSP_RESOLVE;
MACRO_TSP TSP_SETDATE;
MACRO_TSP TSP_SETDATEREQ;
MACRO_TSP TSP_SETTIME;
MACRO_TSP TSP_SLAVEUP;
MACRO_TSP TSP_TEST;
MACRO_TSP TSP_TRACEOFF;
MACRO_TSP TSP_TRACEON;
MACRO_TSUID TSUID;
MACRO_TTYDEF TTYDEF_CFLAG;
MACRO_TTYDEF TTYDEF_IFLAG;
MACRO_TTYDEF TTYDEF_LFLAG;
MACRO_TTYDEF TTYDEF_OFLAG;
MACRO_TTYDEF TTYDEF_SPEED;
MACRO_DELAYTIMER TTY_NAME_MAX;
MACRO_TTY TTY_ON;
MACRO_TTY TTY_SECURE;
MACRO_NAME_SIZE TTY_SIZE;
MACRO_TUEXEC TUEXEC;
MACRO_TUREAD TUREAD;
MACRO_TUWRITE TUWRITE;
MACRO_TVERSLEN TVERSLEN;
MACRO_TYPE TYPE_A;
MACRO_TYPE TYPE_E;
MACRO_TYPE TYPE_I;
MACRO_TYPE TYPE_L;
$2EA190A087F83F88A23D8B31FFFB0F26 T_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 T_FMT_AMPM;
MACRO_UCHAR UCHAR_MAX;
MACRO_NULLPROC UDPMSGSIZE;
MACRO_UDP UDP_CORK;
MACRO_UDP UDP_ENCAP;
MACRO_UDP UDP_ENCAP_ESPINUDP;
MACRO_UDP UDP_ENCAP_ESPINUDP_NON_IKE;
MACRO_UDP UDP_ENCAP_L2TPINUDP;
MACRO_UDP UDP_NO_CHECK6_RX;
MACRO_UDP UDP_NO_CHECK6_TX;
MACRO_MAX UINT16_MAX;
MACRO_MAX UINT32_MAX;
MACRO_MAX UINT64_MAX;
MACRO_MAX UINT8_MAX;
MACRO_UINTMAX UINTMAX_MAX;
MACRO_UINTPTR UINTPTR_MAX;
MACRO_UINT_FAST8 UINT_FAST16_MAX;
MACRO_UINT_FAST8 UINT_FAST32_MAX;
MACRO_UINT_FAST8 UINT_FAST64_MAX;
MACRO_UINT_FAST8 UINT_FAST8_MAX;
MACRO_UINT UINT_LEAST16_MAX;
MACRO_UINT UINT_LEAST32_MAX;
MACRO_UINT UINT_LEAST64_MAX;
MACRO_UINT UINT_LEAST8_MAX;
MACRO_USHRT UINT_MAX;
MACRO_UIO UIO_MAXIOV;
MACRO_UI UI_CMD;
MACRO_ULLONG ULLONG_MAX;
MACRO_ULONG ULONG_MAX;
$699D2B6448FB7BE3D7A3A7D1978CAEFE UL_GETFSIZE;
$699D2B6448FB7BE3D7A3A7D1978CAEFE UL_SETFSIZE;
$7ABD65A78F7D2F9673D05828F7FBDF1E UMOUNT_NOFOLLOW;
MACRO_OVERFLOW UNDERFLOW;
MACRO_UNI UNI_DIRECT_BASE;
MACRO_UNI UNI_DIRECT_MASK;
MACRO_UNKNOWN UNKNOWN_REQUEST;
MACRO_PROCESS USER_PROCESS;
MACRO_USHRT USHRT_MAX;
MACRO_USRQUOTA USRQUOTA;
MACRO_UTIME UTIME_NOW;
MACRO_UTIME UTIME_OMIT;
MACRO_UT UT_HOSTSIZE;
MACRO_UT UT_LINESIZE;
MACRO_UT UT_NAMESIZE;
MACRO_UT_UNKNOWN UT_UNKNOWN;
MACRO_VLNEXT VDISCARD;
MACRO_VKILL VEOF;
MACRO_VEOL VEOL;
MACRO_VTIME VEOL2;
MACRO_VINTR VERASE;
MACRO_VER VER_DEF_CURRENT;
MACRO_VER VER_DEF_NONE;
MACRO_VER VER_DEF_NUM;
MACRO_VER VER_FLG_BASE;
MACRO_VER VER_FLG_WEAK;
MACRO_VER VER_NDX_ELIMINATE;
MACRO_VER VER_NDX_GLOBAL;
MACRO_VER VER_NDX_LOCAL;
MACRO_VER VER_NDX_LORESERVE;
MACRO_VER VER_NEED_CURRENT;
MACRO_VER VER_NEED_NONE;
MACRO_VER VER_NEED_NUM;
MACRO_VINTR VINTR;
MACRO_VKILL VKILL;
MACRO_VLNEXT VLNEXT;
MACRO_VMIN VMIN;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_BLOCK_DUMP;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_DIRTY_BACKGROUND;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_DIRTY_EXPIRE_CS;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_DIRTY_RATIO;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_DIRTY_WB_CS;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_DROP_PAGECACHE;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_HUGETLB_GROUP;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_HUGETLB_PAGES;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_LAPTOP_MODE;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_LEGACY_VA_LAYOUT;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_LOWMEM_RESERVE_RATIO;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_MAX_MAP_COUNT;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_MIN_FREE_KBYTES;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_MIN_SLAB;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_MIN_UNMAPPED;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_NR_PDFLUSH_THREADS;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_OVERCOMMIT_MEMORY;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_OVERCOMMIT_RATIO;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_PAGEBUF;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_PAGE_CLUSTER;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_PANIC_ON_OOM;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_PERCPU_PAGELIST_FRACTION;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_SWAPPINESS;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_SWAP_TOKEN_TIMEOUT;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED1;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED2;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED3;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED4;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED5;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED7;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED8;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_UNUSED9;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_VDSO_ENABLED;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_VFS_CACHE_PRESSURE;
$86DEB66C19F24B8F0BC3CEFDC19B8707 VM_ZONE_RECLAIM_MODE;
MACRO_VOL VOL_METHOD_ADAGIO;
MACRO_VOL VOL_METHOD_LINEAR;
MACRO_VINTR VQUIT;
MACRO_VREPRINT VREPRINT;
MACRO_VSTART VSTART;
MACRO_VSTOP VSTOP;
MACRO_VSUSP VSUSP;
MACRO_VSWTC VSWTC;
MACRO_VT0 VT0;
MACRO_VT0 VT1;
MACRO_BS0 VTDLY;
MACRO_VTIME VTIME;
MACRO_VTIMES VTIMES_UNITS_PER_SECOND;
MACRO_VT VT_ACKACQ;
MACRO_VT VT_ACTIVATE;
MACRO_VT VT_AUTO;
MACRO_VT VT_DISALLOCATE;
MACRO_VT VT_EVENT_BLANK;
MACRO_VT VT_EVENT_RESIZE;
MACRO_VT VT_EVENT_SWITCH;
MACRO_VT VT_EVENT_UNBLANK;
MACRO_VT VT_GETHIFONTMASK;
MACRO_VT VT_GETMODE;
MACRO_VT VT_GETSTATE;
MACRO_VT VT_LOCKSWITCH;
MACRO_VT VT_MAX_EVENT;
MACRO_VT VT_OPENQRY;
MACRO_VT VT_PROCESS;
MACRO_VT VT_RELDISP;
MACRO_VT VT_RESIZE;
MACRO_VT VT_RESIZEX;
MACRO_VT VT_SENDSIG;
MACRO_VT VT_SETACTIVATE;
MACRO_VT VT_SETMODE;
MACRO_VT VT_UNLOCKSWITCH;
MACRO_VT VT_WAITACTIVE;
MACRO_VT VT_WAITEVENT;
MACRO_VWERASE VWERASE;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_64;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_64A;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_ANY;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_DOUBLE;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_MAX;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_OLD_64;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_SINGLE;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_SOFT;
$A286418E2F38AC97C4911D6D871DF1E8 Val_GNU_MIPS_ABI_FP_XX;
MACRO_WAIT WAIT_ANY;
MACRO_WAIT WAIT_MYPGRP;
MACRO_PATCH WAVEFRONT_PATCH;
MACRO_WAVE WAVE_16_BITS;
MACRO_WAVE WAVE_BIDIR_LOOP;
MACRO_WAVE WAVE_ENVELOPES;
MACRO_WAVE WAVE_FAST_RELEASE;
MACRO_WAVE WAVE_FRACTIONS;
MACRO_WAVE WAVE_LOOPING;
MACRO_WAVE WAVE_LOOP_BACK;
MACRO_WAVE WAVE_MULAW;
MACRO_PATCH WAVE_PATCH;
MACRO_WAVE WAVE_ROM;
MACRO_WAVE WAVE_SCALE;
MACRO_WAVE WAVE_SUSTAIN_ON;
MACRO_WAVE WAVE_TREMOLO;
MACRO_WAVE WAVE_UNSIGNED;
MACRO_WAVE WAVE_VIBRATO;
MACRO_WCHAR WCHAR_MAX;
MACRO_WCHAR WCHAR_MIN;
MACRO_WSTOPPED WCONTINUED;
MACRO_WCOREFLAG WCOREFLAG;
MACRO_WEOF WEOF;
MACRO_WSTOPPED WEXITED;
$F1F648DD099C1B085CB728875CF977ED WHOLE_SECONDS;
MACRO_WILL WILL;
MACRO_WINT WINT_MAX;
MACRO_WINT WINT_MIN;
MACRO_WIRELESS WIRELESS_EXT;
MACRO_WNOHANG WNOHANG;
MACRO_WSTOPPED WNOWAIT;
MACRO_WONT WONT;
$25942044E42384ABB7F0CC7F690A0C02 WRDE_APPEND;
$4CA91DF92A766E005510E94BCB31B8F2 WRDE_BADCHAR;
$4CA91DF92A766E005510E94BCB31B8F2 WRDE_BADVAL;
$4CA91DF92A766E005510E94BCB31B8F2 WRDE_CMDSUB;
$25942044E42384ABB7F0CC7F690A0C02 WRDE_DOOFFS;
$25942044E42384ABB7F0CC7F690A0C02 WRDE_NOCMD;
$4CA91DF92A766E005510E94BCB31B8F2 WRDE_NOSPACE;
$25942044E42384ABB7F0CC7F690A0C02 WRDE_REUSE;
$25942044E42384ABB7F0CC7F690A0C02 WRDE_SHOWERR;
$4CA91DF92A766E005510E94BCB31B8F2 WRDE_SYNTAX;
$25942044E42384ABB7F0CC7F690A0C02 WRDE_UNDEF;
MACRO_RRQ WRQ;
MACRO_WSTOPPED WSTOPPED;
MACRO_WNOHANG WUNTRACED;
MACRO_OK W_OK;
$34F88896D34DF08B0014D0487AAD5030 XATTR_CREATE;
MACRO_XATTR XATTR_LIST_MAX;
MACRO_XATTR XATTR_NAME_MAX;
$34F88896D34DF08B0014D0487AAD5030 XATTR_REPLACE;
MACRO_XATTR XATTR_SIZE_MAX;
MACRO_ISIG XCASE;
xdr_op XDR_DECODE;
xdr_op XDR_ENCODE;
xdr_op XDR_FREE;
xprt_stat XPRT_DIED;
xprt_stat XPRT_IDLE;
xprt_stat XPRT_MOREREQS;
MACRO_XTABS XTABS;
MACRO_OK X_OK;
MACRO_ZLIB ZLIB_VERNUM;
MACRO_ZLIB ZLIB_VER_MAJOR;
MACRO_ZLIB ZLIB_VER_MINOR;
MACRO_ZLIB ZLIB_VER_REVISION;
MACRO_ZLIB ZLIB_VER_SUBREVISION;
MACRO_Z Z_ASCII;
MACRO_Z Z_BEST_COMPRESSION;
MACRO_Z Z_BEST_SPEED;
MACRO_Z Z_BINARY;
MACRO_Z Z_BLOCK;
MACRO_Z Z_BUF_ERROR;
MACRO_Z Z_DATA_ERROR;
MACRO_Z Z_DEFAULT_COMPRESSION;
MACRO_Z Z_DEFAULT_STRATEGY;
MACRO_Z Z_DEFLATED;
MACRO_Z Z_ERRNO;
MACRO_Z Z_FILTERED;
MACRO_Z Z_FINISH;
MACRO_Z Z_FIXED;
MACRO_Z Z_FULL_FLUSH;
MACRO_Z Z_HUFFMAN_ONLY;
MACRO_Z Z_MEM_ERROR;
MACRO_Z Z_NEED_DICT;
MACRO_Z Z_NO_COMPRESSION;
MACRO_Z Z_NO_FLUSH;
MACRO_Z Z_NULL;
MACRO_Z Z_OK;
MACRO_Z Z_PARTIAL_FLUSH;
MACRO_Z Z_RLE;
MACRO_Z Z_STREAM_END;
MACRO_Z Z_STREAM_ERROR;
MACRO_Z Z_SYNC_FLUSH;
MACRO_Z Z_TEXT;
MACRO_Z Z_TREES;
MACRO_Z Z_UNKNOWN;
MACRO_Z Z_VERSION_ERROR;
MACRO__ALLOCA _AIO_H;
MACRO__ALIASES _ALIASES_H;
MACRO__ALLOCA _ALLOCA_H;
MACRO__ARGZ _ARGZ_H;
MACRO__ARPA _ARPA_FTP_H;
MACRO__ARPA_INET _ARPA_INET_H;
MACRO__ARPA_INET _ARPA_TELNET_H;
MACRO__ARPA_TFTP _ARPA_TFTP_H;
MACRO__ALIASES _AR_H;
MACRO__ARGZ _ASSERT_H;
MACRO__ATFILE _ATFILE_SOURCE;
char *BC;
MACRO__BITS_BYTESWAP _BITS_BYTESWAP_H;
MACRO__SYS_IPC _BITS_IPCTYPES_H;
MACRO__BITS_LOCALE _BITS_LOCALE_H;
MACRO__BITS_POSIX1 _BITS_POSIX1_LIM_H;
MACRO__BITS_POSIX2 _BITS_POSIX2_LIM_H;
MACRO__BITS_POSIX _BITS_POSIX_OPT_H;
MACRO__SYS_SYSMACROS _BITS_PTHREADTYPES_H;
MACRO__BITS_SETJMP _BITS_SETJMP_H;
MACRO__BITS_SIGTHREAD _BITS_SIGTHREAD_H;
MACRO__BITS_SOCKADDR _BITS_SOCKADDR_H;
MACRO__BITS_STAT _BITS_STAT_H;
MACRO__STDIO_EXT _BITS_STROPTS_H;
MACRO__SYS_SYSLOG _BITS_SYSLOG_PATH_H;
MACRO__BITS_TIMEX _BITS_TIMEX_H;
MACRO_TIME_H _BITS_TIME_H;
MACRO__STDIO _BITS_TYPESIZES_H;
MACRO__STDIO _BITS_TYPES_H;
MACRO__IFADDRS _BITS_UIO_H;
MACRO__BITS _BITS_WCHAR_H;
MACRO__STDIO_EXT _BITS_XTITYPES_H;
MACRO__BYTESWAP _BYTESWAP_H;
int BZ2_bzBuffToBuffCompress(char *dest, unsigned int *destLen, char *source, unsigned int sourceLen, int blockSize100k, int verbosity, int workFactor);
int BZ2_bzBuffToBuffDecompress(char *dest, unsigned int *destLen, char *source, unsigned int sourceLen, int small, int verbosity);
int BZ2_bzCompress(bz_stream *strm, int action);
int BZ2_bzCompressEnd(bz_stream *strm);
int BZ2_bzCompressInit(bz_stream *strm, int blockSize100k, int verbosity, int workFactor);
int BZ2_bzDecompress(bz_stream *strm);
int BZ2_bzDecompressEnd(bz_stream *strm);
int BZ2_bzDecompressInit(bz_stream *strm, int verbosity, int small);
int BZ2_bzRead(int *bzerror, BZFILE *b, void *buf, int len);
void BZ2_bzReadClose(int *bzerror, BZFILE *b);
void BZ2_bzReadGetUnused(int *bzerror, BZFILE *b, void **unused, int *nUnused);
BZFILE *BZ2_bzReadOpen(int *bzerror, FILE *f, int verbosity, int small, void *unused, int nUnused);
void BZ2_bzWrite(int *bzerror, BZFILE *b, void *buf, int len);
void BZ2_bzWriteClose(int *bzerror, BZFILE *b, int abandon, unsigned int *nbytes_in, unsigned int *nbytes_out);
void BZ2_bzWriteClose64(int *bzerror, BZFILE *b, int abandon, unsigned int *nbytes_in_lo32, unsigned int *nbytes_in_hi32, unsigned int *nbytes_out_lo32, unsigned int *nbytes_out_hi32);
BZFILE *BZ2_bzWriteOpen(int *bzerror, FILE *f, int blockSize100k, int verbosity, int workFactor);
void BZ2_bzclose(BZFILE *b);
BZFILE *BZ2_bzdopen(int fd, const char *mode);
const char *BZ2_bzerror(BZFILE *b, int *errnum);
int BZ2_bzflush(BZFILE *b);
const char *BZ2_bzlibVersion(void);
BZFILE *BZ2_bzopen(const char *path, const char *mode);
int BZ2_bzread(BZFILE *b, void *buf, int len);
int BZ2_bzwrite(BZFILE *b, void *buf, int len);
MACRO__CPIO _CPIO_H;
MACRO__CRYPT _CRYPT_H;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_GNU_LIBC_VERSION;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_GNU_LIBPTHREAD_VERSION;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS64_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS64_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS64_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS64_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_LFS_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 CS_PATH;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFF32_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFF32_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFF32_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFFBIG_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LP64_OFF64_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LP64_OFF64_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LP64_OFF64_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LP64_OFF64_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LPBIG_OFFBIG_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFF32_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFF32_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFF32_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFFBIG_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LP64_OFF64_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LP64_OFF64_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LP64_OFF64_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LP64_OFF64_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LPBIG_OFFBIG_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_V5_WIDTH_RESTRICTED_ENVS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_V6_ENV;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_V6_WIDTH_RESTRICTED_ENVS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_V7_ENV;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_V7_WIDTH_RESTRICTED_ENVS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFF32_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFF32_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFF32_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFF32_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFFBIG_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFFBIG_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFFBIG_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_ILP32_OFFBIG_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LP64_OFF64_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LP64_OFF64_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LP64_OFF64_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LP64_OFF64_LINTFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LPBIG_OFFBIG_CFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LPBIG_OFFBIG_LDFLAGS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LPBIG_OFFBIG_LIBS;
$2821E9517F8C64C49B1CDFF94CA4D135 _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS;
MACRO__CTYPE _CTYPE_H;
$2EA190A087F83F88A23D8B31FFFB0F26 _DATE_FMT;
MACRO__DEFAULT _DEFAULT_SOURCE;
MACRO__DIRENT _DIRENT_H;
MACRO__DLFCN _DLFCN_H;
MACRO__ELF _ELF_H;
MACRO__ENDIAN _ENDIAN_H;
MACRO__ENVZ _ENVZ_H;
MACRO__ERRNO _ERRNO_H;
MACRO__ENVZ _ERROR_H;
MACRO__ENVZ _ERR_H;
MACRO__EXECINFO _EXECINFO_H;
MACRO__EXECINFO _FCNTL_H;
MACRO_H _FEATURES_H;
MACRO__FENV _FENV_H;
MACRO__FE _FE_DIVBYZERO;
MACRO__FE _FE_DOWNWARD;
MACRO__FE _FE_INEXACT;
MACRO__FE _FE_INVALID;
MACRO__FE _FE_OVERFLOW;
MACRO__FE FE_TONEAREST;
MACRO__FE _FE_TOWARDZERO;
MACRO__FE _FE_UNDERFLOW;
MACRO__FE _FE_UPWARD;
MACRO__FNMATCH _FNMATCH_H;
MACRO__FPU FPU_DEFAULT;
MACRO__FPU _FPU_IEEE;
MACRO__FPU _FPU_MASK_IM;
MACRO__FPU _FPU_MASK_NI;
MACRO__FPU _FPU_MASK_OM;
MACRO__FPU _FPU_MASK_UM;
MACRO__FPU _FPU_MASK_XM;
MACRO__FPU _FPU_MASK_ZM;
MACRO__FPU _FPU_RC_DOWN;
MACRO__FPU FPU_RC_NEAREST;
MACRO__FPU _FPU_RC_UP;
MACRO__FPU _FPU_RC_ZERO;
MACRO__FPU _FPU_RESERVED;
MACRO__FP _FP_INFINITE;
MACRO__FP FP_NAN;
MACRO__FP _FP_NORMAL;
MACRO__FP _FP_SUBNORMAL;
MACRO__FP _FP_ZERO;
MACRO__FSTAB _FSTAB_H;
MACRO__FSTAB _FTS_H;
MACRO__FTW _FTW_H;
MACRO__GCONV _GCONV_H;
MACRO__GDBM _GDBM_MAX_ERRNO;
MACRO__GDBM GDBM_MIN_ERRNO;
MACRO__CTYPE _GETOPT_H;
MACRO__GLOB _GLOB_H;
MACRO__GNU _GNU_GETOPT_INTERFACE_VERSION;
MACRO__GNU _GNU_GLOB_INTERFACE_VERSION;
MACRO___GNU_LIB _GNU_LIBC_VERSION_H;
MACRO__GNU _GNU_OBSTACK_INTERFACE_VERSION;
MACRO__GNU _GNU_REGEX_INTERFACE_VERSION;
MACRO__GNU _GNU_VERSIONS_H;
MACRO__GRP _GRP_H;
MACRO__GUS GUS_NUMVOICES;
MACRO__GUS _GUS_RAMPMODE;
MACRO__GUS _GUS_RAMPOFF;
MACRO__GUS _GUS_RAMPON;
MACRO__GUS _GUS_RAMPRANGE;
MACRO__GUS _GUS_RAMPRATE;
MACRO__GUS _GUS_VOICEBALA;
MACRO__GUS _GUS_VOICEFADE;
MACRO__GUS _GUS_VOICEFREQ;
MACRO__GUS _GUS_VOICEMODE;
MACRO__GUS _GUS_VOICEOFF;
MACRO__GUS _GUS_VOICEON;
MACRO__GUS _GUS_VOICESAMPLE;
MACRO__GUS _GUS_VOICEVOL;
MACRO__GUS _GUS_VOICEVOL2;
MACRO__GUS _GUS_VOICE_POS;
MACRO__GUS _GUS_VOLUME_SCALE;
MACRO__G_HAVE _G_BUFSIZ;
MACRO__G_HAVE _G_HAVE_MMAP;
MACRO__G_HAVE _G_HAVE_MREMAP;
MACRO__G_HAVE G_HAVE_ST_BLKSIZE;
MACRO__G_HAVE _G_IO_IO_FILE_VERSION;
MACRO__G _G_config_h;
MACRO__HAVE_STRUCT _HAVE_STRUCT_TERMIOS_C_ISPEED;
MACRO__HAVE_STRUCT _HAVE_STRUCT_TERMIOS_C_OSPEED;
MACRO__HAVE _HAVE_UT_HOST;
MACRO__HAVE _HAVE_UT_ID;
MACRO__HAVE _HAVE_UT_PID;
MACRO__HAVE _HAVE_UT_TV;
MACRO__HAVE _HAVE_UT_TYPE;
MACRO__ICONV _ICONV_H;
MACRO__ICONV _IEEE754_H;
$2BE422EB4B7233E8C58D6E03ADE8CB89 _IEEE_;
MACRO__IFADDRS _IFADDRS_H;
MACRO__INTTYPES _INTTYPES_H;
MACRO__IOC _IOC_DIRBITS;
MACRO__IOC _IOC_DIRMASK;
MACRO__IOC _IOC_DIRSHIFT;
MACRO__IOC _IOC_NONE;
MACRO__IOC _IOC_NRBITS;
MACRO__IOC _IOC_NRMASK;
MACRO__IOC IOC_NRSHIFT;
MACRO__IOC _IOC_READ;
MACRO__IOC _IOC_SIZEBITS;
MACRO__IOC _IOC_SIZEMASK;
MACRO__IOC _IOC_SIZESHIFT;
MACRO__IOC _IOC_TYPEBITS;
MACRO__IOC _IOC_TYPEMASK;
MACRO__IOC _IOC_TYPESHIFT;
MACRO__IOC _IOC_WRITE;
MACRO__IOFBF IOFBF;
MACRO__IOFBF _IOLBF;
MACRO__IOFBF _IONBF;
MACRO__IOS _IOS_APPEND;
MACRO__IOS _IOS_ATEND;
MACRO__IOS _IOS_BIN;
MACRO__IOS _IOS_INPUT;
MACRO__IOS _IOS_NOCREATE;
MACRO__IOS _IOS_NOREPLACE;
MACRO__IOS _IOS_OUTPUT;
MACRO__IOS _IOS_TRUNC;
MACRO__IO_MAGIC _IO_BAD_SEEN;
MACRO__IO_MAGIC _IO_BOOLALPHA;
MACRO__IO _IO_BUFSIZ;
MACRO__IO_MAGIC _IO_CURRENTLY_PUTTING;
MACRO__IO_MAGIC _IO_DEC;
MACRO__IO_MAGIC _IO_DELETE_DONT_CLOSE;
MACRO__IO_MAGIC _IO_DONT_CLOSE;
MACRO__IO_MAGIC _IO_EOF_SEEN;
MACRO__IO_MAGIC _IO_ERR_SEEN;
MACRO__IO_MAGIC _IO_FIXED;
MACRO__IO_MAGIC _IO_FLAGS2_MMAP;
MACRO__IO_MAGIC _IO_FLAGS2_NOTCANCEL;
MACRO__IO_MAGIC _IO_FLAGS2_USER_WBUF;
MACRO__IO IO_HAVE_ST_BLKSIZE;
MACRO__IO_MAGIC _IO_HEX;
MACRO__IO_MAGIC _IO_INTERNAL;
MACRO__IO_MAGIC _IO_IN_BACKUP;
MACRO__IO_MAGIC _IO_IS_APPENDING;
MACRO__IO_MAGIC _IO_IS_FILEBUF;
MACRO__IO_MAGIC _IO_LEFT;
MACRO__IO_MAGIC _IO_LINE_BUF;
MACRO__IO_MAGIC _IO_LINKED;
MACRO_MAGIC _IO_MAGIC;
MACRO__IO_MAGIC _IO_MAGIC_MASK;
MACRO__IO_MAGIC _IO_NO_READS;
MACRO__IO_MAGIC _IO_NO_WRITES;
MACRO__IO_MAGIC _IO_OCT;
MACRO__IO_MAGIC _IO_RIGHT;
MACRO__IO_MAGIC _IO_SCIENTIFIC;
MACRO__IO_MAGIC _IO_SHOWBASE;
MACRO__IO_MAGIC _IO_SHOWPOINT;
MACRO__IO_MAGIC _IO_SHOWPOS;
MACRO__IO_MAGIC _IO_SKIPWS;
MACRO__IO_MAGIC _IO_STDIO;
MACRO__IO_MAGIC _IO_TIED_PUT_GET;
MACRO__IO_MAGIC _IO_UNBUFFERED;
MACRO__IO _IO_UNIFIED_JUMPTABLES;
MACRO__IO_MAGIC _IO_UNITBUF;
MACRO__IO_MAGIC _IO_UPPERCASE;
MACRO__IO_MAGIC _IO_USER_BUF;
MACRO__IO_MAGIC _IO_USER_LOCK;
$2BE422EB4B7233E8C58D6E03ADE8CB89 _ISOC_;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISalnum;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISalpha;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISblank;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _IScntrl;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISdigit;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISgraph;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISlower;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISprint;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISpunct;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISspace;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISupper;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwalnum;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwalpha;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwblank;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwcntrl;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwdigit;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwgraph;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwlower;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwprint;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwpunct;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwspace;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwupper;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwxdigit;
$E43C5BF1FEA8E01BEC6CBB1DEAE54A6D _ISxdigit;
MACRO__K _K_SS_MAXSIZE;
MACRO__LANGINFO _LANGINFO_H;
MACRO__LAST _LAST_ERRNO;
MACRO_IO _LFS64_ASYNCHRONOUS_IO;
MACRO_LARGEFILE _LFS64_LARGEFILE;
MACRO__LFS64 _LFS64_STDIO;
MACRO_IO _LFS_ASYNCHRONOUS_IO;
MACRO_LARGEFILE _LFS_LARGEFILE;
MACRO__LIBC _LIBC_LIMITS_H_;
MACRO__LIBGEN _LIBGEN_H;
MACRO__LIBGEN _LIBINTL_H;
MACRO__LIMITS _LIMITS_H;
MACRO__LINK _LINK_H;
MACRO__LINUX _LINUX_QUOTA_VERSION;
MACRO__LOCALE _LOCALE_H;
MACRO__MALLOC _MALLOC_H;
MACRO__MATH _MATH_H;
MACRO__MATH _MATH_H_MATHDEF;
MACRO__MCHECK _MCHECK_H;
MACRO__MCHECK _MEMORY_H;
MACRO__MKNOD _MKNOD_VER;
MACRO__MKNOD _MKNOD_VER_LINUX;
MACRO__MKNOD _MKNOD_VER_SVR4;
MACRO__MCHECK _MNTENT_H;
MACRO__MCHECK _MONETARY_H;
MACRO__MCHECK _MQUEUE_H;
MACRO__NETASH _NETASH_ASH_H;
MACRO__NETATALK _NETATALK_AT_H;
MACRO__NETAX25 _NETAX25_AX25_H;
MACRO__NETDB _NETDB_H;
MACRO__NETECONET _NETECONET_EC_H;
MACRO_ETHER_H _NETINET_ETHER_H;
MACRO_ETHER_H _NETINET_ICMP6_H;
MACRO__NETINET _NETINET_IF_FDDI_H;
MACRO__NETINET_IF _NETINET_IF_TR_H;
MACRO__NETINET_IGMP _NETINET_IGMP_H;
MACRO__NETDB _NETINET_IN_H;
MACRO__NETINET_IN _NETINET_IN_SYSTM_H;
MACRO__NETINET_IP6 _NETINET_IP6_H;
MACRO__NETINET_TCP _NETINET_TCP_H;
MACRO__NETROM _NETROM_NETROM_H;
MACRO__NETROSE _NETROSE_ROSE_H;
MACRO__NET _NET_IF_ARP_H;
MACRO__NET_PPP _NET_PPP_DEFS_H;
MACRO__NET_ROUTE _NET_ROUTE_H;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_AB2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_AB3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_CAR;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_ISBN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_NAME;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_NUM;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_COUNTRY_POST;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_LANG_AB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_LANG_LIB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_LANG_NAME;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_LANG_TERM;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_ADDRESS_POSTAL_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_COLLSEQMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_COLLSEQWC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_EXTRAMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_EXTRAWC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_GAP1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_GAP2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_GAP3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_INDIRECTMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_INDIRECTWC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_NRULES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_RULESETS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_SYMB_EXTRAMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_SYMB_HASH_SIZEMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_SYMB_TABLEMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_TABLEMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_TABLEWC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_WEIGHTMB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_COLLATE_WEIGHTWC;
$2EA190A087F83F88A23D8B31FFFB0F26 NL_CTYPE_CLASS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_CLASS32;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_CLASS_NAMES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_CLASS_OFFSET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_CODESET_NAME;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_10;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_11;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_12;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_13;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_14;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_4;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_5;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_6;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_7;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_8;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_EXTRA_MAP_9;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_GAP1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_GAP2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_GAP3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_GAP4;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_GAP5;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_GAP6;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS0_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS0_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS1_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS1_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS2_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS2_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS3_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS3_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS4_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS4_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS5_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS5_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS6_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS6_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS7_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS7_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS8_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS8_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS9_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS9_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS_MB_LEN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_INDIGITS_WC_LEN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_MAP_NAMES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_MAP_OFFSET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_MAP_TO_NONASCII;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_MB_CUR_MAX;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_NONASCII_CASE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT0_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT0_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT1_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT1_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT2_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT2_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT3_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT3_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT4_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT4_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT5_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT5_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT6_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT6_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT7_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT7_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT8_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT8_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT9_MB;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_OUTDIGIT9_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TOLOWER;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TOLOWER32;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TOUPPER;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TOUPPER32;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_DEFAULT_MISSING;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_FROM_IDX;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_FROM_TBL;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_IGNORE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_IGNORE_LEN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_TAB_SIZE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_TO_IDX;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_TRANSLIT_TO_TBL;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_CTYPE_WIDTH;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_ABBREVIATION;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_ADDRESS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_APPLICATION;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_AUDIENCE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_CATEGORY;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_CONTACT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_DATE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_EMAIL;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_FAX;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_LANGUAGE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_REVISION;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_SOURCE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_TEL;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_TERRITORY;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_IDENTIFICATION_TITLE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MEASUREMENT_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MEASUREMENT_MEASUREMENT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MESSAGES_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_CONVERSION_RATE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_CRNCYSTR;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DECIMAL_POINT_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_CURRENCY_SYMBOL;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_FRAC_DIGITS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_CURR_SYMBOL;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_FRAC_DIGITS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_N_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_N_SIGN_POSN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_P_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_INT_P_SIGN_POSN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_N_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_N_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_N_SIGN_POSN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_P_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_P_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_P_SIGN_POSN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_VALID_FROM;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_DUO_VALID_TO;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_THOUSANDS_SEP_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_UNO_VALID_FROM;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_MONETARY_UNO_VALID_TO;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_NAME_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_NAME_GEN;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_NAME_MISS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_NAME_MR;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_NAME_MRS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NAME_NAME_MS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUMERIC_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUMERIC_DECIMAL_POINT_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUMERIC_THOUSANDS_SEP_WC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_ADDRESS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_COLLATE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_CTYPE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_IDENTIFICATION;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_MEASUREMENT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_MESSAGES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_MONETARY;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_NAME;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_NUMERIC;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_PAPER;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_TELEPHONE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_NUM_LC_TIME;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_PAPER_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_PAPER_HEIGHT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_PAPER_WIDTH;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TELEPHONE_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TELEPHONE_INT_PREFIX;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TELEPHONE_INT_SELECT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TELEPHONE_TEL_DOM_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TELEPHONE_TEL_INT_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_CAL_DIRECTION;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_CODESET;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_ERA_ENTRIES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_ERA_NUM_ENTRIES;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_FIRST_WEEKDAY;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_FIRST_WORKDAY;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_TIMEZONE;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_WEEK_1STDAY;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_WEEK_1STWEEK;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_TIME_WEEK_NDAYS;
MACRO__LANGINFO _NL_TYPES_H;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_4;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_5;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_6;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABDAY_7;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_10;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_11;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_12;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_4;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_5;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_6;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_7;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_8;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WABMON_9;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WALT_DIGITS;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WAM_STR;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_4;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_5;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_6;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WDAY_7;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WD_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WD_T_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WERA_D_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WERA_D_T_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WERA_T_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WERA_YEAR;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_1;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_10;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_11;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_12;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_2;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_3;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_4;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_5;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_6;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_7;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_8;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WMON_9;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WPM_STR;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WT_FMT;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_WT_FMT_AMPM;
$2EA190A087F83F88A23D8B31FFFB0F26 _NL_W_DATE_FMT;
MACRO_SIGNAL _NSIG;
MACRO__NSS _NSS_H;
MACRO__NSS _OBSTACK_H;
MACRO_MAGIC _OLD_STDIO_MAGIC;
char PC;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_2_SYMLINKS;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_ALLOC_SIZE_MIN;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_ASYNC_IO;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_CHOWN_RESTRICTED;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_FILESIZEBITS;
$A4FC3F986F398A5CBEAD24293CBFE469 PC_LINK_MAX;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_MAX_CANON;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_MAX_INPUT;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_NAME_MAX;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_NO_TRUNC;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_PATH_MAX;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_PIPE_BUF;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_PRIO_IO;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_REC_INCR_XFER_SIZE;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_REC_MAX_XFER_SIZE;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_REC_MIN_XFER_SIZE;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_REC_XFER_ALIGN;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_SOCK_MAXBUF;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_SYMLINK_MAX;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_SYNC_IO;
$A4FC3F986F398A5CBEAD24293CBFE469 _PC_VDISABLE;
MACRO__POSIX2 _POSIX2_BC_BASE_MAX;
MACRO__POSIX2 _POSIX2_BC_DIM_MAX;
MACRO__POSIX2 _POSIX2_BC_SCALE_MAX;
MACRO__POSIX2 _POSIX2_BC_STRING_MAX;
MACRO__POSIX2 _POSIX2_CHARCLASS_NAME_MAX;
MACRO__POSIX2_CHAR _POSIX2_CHAR_TERM;
MACRO__POSIX2 _POSIX2_COLL_WEIGHTS_MAX;
MACRO__POSIX2_C _POSIX2_C_BIND;
MACRO__POSIX2_C _POSIX2_C_DEV;
MACRO__POSIX2 _POSIX2_EXPR_NEST_MAX;
MACRO__POSIX2 _POSIX2_LINE_MAX;
MACRO__POSIX2_C _POSIX2_LOCALEDEF;
MACRO__POSIX2 _POSIX2_RE_DUP_MAX;
MACRO__POSIX2_C _POSIX2_SW_DEV;
MACRO_VERSION _POSIX2_VERSION;
$2BE422EB4B7233E8C58D6E03ADE8CB89 _POSIX_;
MACRO__POSIX_SHARED _POSIX_ADVISORY_INFO;
MACRO__POSIX_AIO _POSIX_AIO_LISTIO_MAX;
MACRO__POSIX_AIO _POSIX_AIO_MAX;
MACRO__POSIX_AIO _POSIX_ARG_MAX;
MACRO__POSIX_THREADS _POSIX_ASYNCHRONOUS_IO;
MACRO__POSIX_THREADS _POSIX_ASYNC_IO;
MACRO__POSIX_SHARED _POSIX_BARRIERS;
MACRO__POSIX_AIO _POSIX_CHILD_MAX;
MACRO__POSIX_JOB POSIX_CHOWN_RESTRICTED;
MACRO__POSIX_AIO _POSIX_CLOCKRES_MIN;
MACRO__POSIX_SHARED _POSIX_CLOCK_SELECTION;
MACRO__POSIX_SHARED POSIX_CPUTIME;
MACRO__POSIX _POSIX_C_SOURCE;
MACRO__POSIX_AIO _POSIX_DELAYTIMER_MAX;
MACRO__POSIX_JOB _POSIX_FSYNC;
MACRO__POSIX_AIO _POSIX_HOST_NAME_MAX;
MACRO__POSIX_SHARED _POSIX_IPV6;
MACRO__POSIX_JOB _POSIX_JOB_CONTROL;
MACRO__POSIX_AIO _POSIX_LINK_MAX;
MACRO__POSIX_AIO _POSIX_LOGIN_NAME_MAX;
MACRO__POSIX_JOB _POSIX_MAPPED_FILES;
MACRO__POSIX_AIO _POSIX_MAX_CANON;
MACRO__POSIX_AIO _POSIX_MAX_INPUT;
MACRO__POSIX_JOB _POSIX_MEMLOCK;
MACRO__POSIX_JOB _POSIX_MEMLOCK_RANGE;
MACRO__POSIX_JOB _POSIX_MEMORY_PROTECTION;
MACRO__POSIX_SHARED _POSIX_MESSAGE_PASSING;
MACRO__POSIX_SHARED POSIX_MONOTONIC_CLOCK;
MACRO__POSIX_AIO _POSIX_MQ_OPEN_MAX;
MACRO__POSIX_AIO _POSIX_MQ_PRIO_MAX;
MACRO__POSIX_AIO _POSIX_NAME_MAX;
MACRO__POSIX_AIO _POSIX_NGROUPS_MAX;
MACRO__POSIX_JOB _POSIX_NO_TRUNC;
MACRO__POSIX_AIO _POSIX_OPEN_MAX;
MACRO__POSIX_AIO _POSIX_PATH_MAX;
MACRO__POSIX_AIO _POSIX_PIPE_BUF;
MACRO_IO _POSIX_PRIORITIZED_IO;
MACRO__POSIX_JOB _POSIX_PRIORITY_SCHEDULING;
MACRO__POSIX_SHARED _POSIX_RAW_SOCKETS;
MACRO__POSIX_SHARED _POSIX_READER_WRITER_LOCKS;
MACRO__POSIX_THREADS _POSIX_REALTIME_SIGNALS;
MACRO__POSIX_THREADS _POSIX_REENTRANT_FUNCTIONS;
MACRO__POSIX_SHARED _POSIX_REGEXP;
MACRO__POSIX_AIO _POSIX_RE_DUP_MAX;
MACRO__POSIX_AIO _POSIX_RTSIG_MAX;
MACRO__POSIX_JOB _POSIX_SAVED_IDS;
MACRO__POSIX_THREADS _POSIX_SEMAPHORES;
MACRO__POSIX_AIO _POSIX_SEM_NSEMS_MAX;
MACRO__POSIX_AIO _POSIX_SEM_VALUE_MAX;
MACRO__POSIX_SHARED _POSIX_SHARED_MEMORY_OBJECTS;
MACRO__POSIX_SHARED _POSIX_SHELL;
MACRO__POSIX_AIO _POSIX_SIGQUEUE_MAX;
MACRO__POSIX _POSIX_SOURCE;
MACRO__POSIX_SHARED _POSIX_SPAWN;
MACRO__POSIX_SHARED _POSIX_SPIN_LOCKS;
MACRO__POSIX_SPORADIC _POSIX_SPORADIC_SERVER;
MACRO__POSIX_AIO _POSIX_SSIZE_MAX;
MACRO__POSIX_AIO _POSIX_STREAM_MAX;
MACRO__POSIX_AIO _POSIX_SYMLINK_MAX;
MACRO__POSIX_AIO _POSIX_SYMLOOP_MAX;
MACRO__POSIX_JOB _POSIX_SYNCHRONIZED_IO;
MACRO__POSIX_THREADS _POSIX_THREADS;
MACRO__POSIX_THREADS _POSIX_THREAD_ATTR_STACKADDR;
MACRO__POSIX_THREADS _POSIX_THREAD_ATTR_STACKSIZE;
MACRO__POSIX_SHARED POSIX_THREAD_CPUTIME;
MACRO_DESTRUCTOR_ITERATIONS _POSIX_THREAD_DESTRUCTOR_ITERATIONS;
MACRO__POSIX_AIO _POSIX_THREAD_KEYS_MAX;
MACRO__POSIX_THREADS _POSIX_THREAD_PRIORITY_SCHEDULING;
MACRO__POSIX_THREADS _POSIX_THREAD_PRIO_INHERIT;
MACRO__POSIX_THREADS _POSIX_THREAD_PRIO_PROTECT;
MACRO__POSIX_SHARED _POSIX_THREAD_PROCESS_SHARED;
MACRO__POSIX_THREADS _POSIX_THREAD_ROBUST_PRIO_INHERIT;
MACRO__POSIX_THREADS _POSIX_THREAD_ROBUST_PRIO_PROTECT;
MACRO__POSIX_THREADS _POSIX_THREAD_SAFE_FUNCTIONS;
MACRO__POSIX_SPORADIC _POSIX_THREAD_SPORADIC_SERVER;
MACRO__POSIX_THREAD _POSIX_THREAD_THREADS_MAX;
MACRO__POSIX_SHARED _POSIX_TIMEOUTS;
MACRO__POSIX_SHARED _POSIX_TIMERS;
MACRO__POSIX_AIO _POSIX_TIMER_MAX;
MACRO__POSIX_SPORADIC _POSIX_TRACE;
MACRO__POSIX_SPORADIC _POSIX_TRACE_EVENT_FILTER;
MACRO__POSIX_SPORADIC _POSIX_TRACE_INHERIT;
MACRO__POSIX_SPORADIC _POSIX_TRACE_LOG;
MACRO__POSIX_AIO _POSIX_TTY_NAME_MAX;
MACRO__POSIX_SPORADIC _POSIX_TYPED_MEMORY_OBJECTS;
MACRO__POSIX_AIO _POSIX_TZNAME_MAX;
MACRO__POSIX_SPORADIC _POSIX_V6_ILP32_OFF32;
MACRO__POSIX_SPORADIC _POSIX_V6_ILP32_OFFBIG;
MACRO__POSIX_SPORADIC _POSIX_V7_ILP32_OFF32;
MACRO__POSIX_SPORADIC _POSIX_V7_ILP32_OFFBIG;
MACRO__POSIX_JOB POSIX_VDISABLE;
MACRO_VERSION _POSIX_VERSION;
MACRO__PRINTF _PRINTF_H;
MACRO__PROFIL _PROFIL_H;
MACRO__PROTOCOLS _PROTOCOLS_ROUTED_H;
MACRO__PROTOCOLS_TALKD _PROTOCOLS_TALKD_H;
MACRO__PROTOCOLS_TIMED _PROTOCOLS_TIMED_H;
MACRO__PTHREAD _PTHREAD_H;
MACRO__PTY _PTY_H;
MACRO__PWD _PWD_H;
MACRO__REGEXP _REGEXP_H;
MACRO__REGEX _REGEX_H;
MACRO__RE _RE_COMP_H;
MACRO__RPC_AUTH_DES _RPC_AUTH_DES_H;
MACRO__RPC_AUTH _RPC_AUTH_H;
MACRO__RPC_AUTH_UNIX _RPC_AUTH_UNIX_H;
MACRO__RPC_CLNT _RPC_CLNT_H;
MACRO__RPC_MSG _RPC_MSG_H;
MACRO__RPC _RPC_NETDB_H;
MACRO__RPC_PMAP _RPC_PMAP_CLNT_H;
MACRO__RPC_PMAP _RPC_PMAP_PROT_H;
MACRO__RPC_PMAP_RMT _RPC_PMAP_RMT_H;
MACRO__RPC_RPC _RPC_RPC_H;
MACRO__RPC_SVC _RPC_SVC_AUTH_H;
MACRO__RPC_AUTH_DES _RPC_SVC_H;
MACRO__RPC_RPC _RPC_TYPES_H;
MACRO__RPC_XDR _RPC_XDR_H;
MACRO__PTHREAD _SCHED_H;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_CHAR_TERM;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_C_BIND;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_C_DEV;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_C_VERSION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_FORT_DEV;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_FORT_RUN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_LOCALEDEF;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_PBS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_PBS_ACCOUNTING;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_PBS_CHECKPOINT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_PBS_LOCATE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_PBS_MESSAGE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_PBS_TRACK;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_SW_DEV;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_UPE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_2_VERSION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_ADVISORY_INFO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_AIO_LISTIO_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_AIO_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_AIO_PRIO_DELTA_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 SC_ARG_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_ASYNCHRONOUS_IO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_ATEXIT_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_AVPHYS_PAGES;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_BARRIERS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_BASE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_BC_BASE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_BC_DIM_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_BC_SCALE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_BC_STRING_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CHARCLASS_NAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CHAR_BIT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CHAR_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CHAR_MIN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CHILD_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CLK_TCK;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CLOCK_SELECTION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_COLL_WEIGHTS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_CPUTIME;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_C_LANG_SUPPORT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_C_LANG_SUPPORT_R;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_DELAYTIMER_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_DEVICE_IO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_DEVICE_SPECIFIC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_DEVICE_SPECIFIC_R;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_EQUIV_CLASS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_EXPR_NEST_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_FD_MGMT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_FIFO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_FILE_ATTRIBUTES;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_FILE_LOCKING;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_FILE_SYSTEM;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_FSYNC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_GETGR_R_SIZE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_GETPW_R_SIZE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_HOST_NAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_INT_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_INT_MIN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_IOV_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_IPV6;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_JOB_CONTROL;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL1_DCACHE_ASSOC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL1_DCACHE_LINESIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL1_DCACHE_SIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL1_ICACHE_ASSOC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL1_ICACHE_LINESIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL1_ICACHE_SIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL2_CACHE_ASSOC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL2_CACHE_LINESIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL2_CACHE_SIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL3_CACHE_ASSOC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL3_CACHE_LINESIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL3_CACHE_SIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL4_CACHE_ASSOC;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL4_CACHE_LINESIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LEVEL4_CACHE_SIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LINE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LOGIN_NAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_LONG_BIT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MAPPED_FILES;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MB_LEN_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MEMLOCK;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MEMLOCK_RANGE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MEMORY_PROTECTION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MESSAGE_PASSING;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MONOTONIC_CLOCK;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MQ_OPEN_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MQ_PRIO_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_MULTI_PROCESS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NETWORKING;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NGROUPS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NL_ARGMAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NL_LANGMAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NL_MSGMAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NL_NMAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NL_SETMAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NL_TEXTMAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NPROCESSORS_CONF;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NPROCESSORS_ONLN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_NZERO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_OPEN_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PAGESIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PASS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PHYS_PAGES;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_INTERNET;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_INTERNET_DGRAM;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_INTERNET_STREAM;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_OSI;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_OSI_CLTS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_OSI_COTS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_OSI_M;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_SOCKET;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PII_XTI;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PIPE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_POLL;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PRIORITIZED_IO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_PRIORITY_SCHEDULING;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_RAW_SOCKETS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_READER_WRITER_LOCKS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_REALTIME_SIGNALS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_REGEXP;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_REGEX_VERSION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_RE_DUP_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_RTSIG_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SAVED_IDS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SCHAR_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SCHAR_MIN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SELECT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SEMAPHORES;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SEM_NSEMS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SEM_VALUE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SHARED_MEMORY_OBJECTS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SHELL;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SHRT_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SHRT_MIN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SIGNALS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SIGQUEUE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SINGLE_PROCESS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SPAWN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SPIN_LOCKS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SPORADIC_SERVER;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SSIZE_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SS_REPL_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_STREAMS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_STREAM_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SYMLOOP_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SYNCHRONIZED_IO;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SYSTEM_DATABASE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_SYSTEM_DATABASE_R;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREADS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_ATTR_STACKADDR;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_ATTR_STACKSIZE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_CPUTIME;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_DESTRUCTOR_ITERATIONS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_KEYS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_PRIORITY_SCHEDULING;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_PRIO_INHERIT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_PRIO_PROTECT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_PROCESS_SHARED;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_ROBUST_PRIO_INHERIT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_ROBUST_PRIO_PROTECT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_SAFE_FUNCTIONS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_SPORADIC_SERVER;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_STACK_MIN;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_THREAD_THREADS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TIMEOUTS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TIMERS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TIMER_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_EVENT_FILTER;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_EVENT_NAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_INHERIT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_LOG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_NAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_SYS_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TRACE_USER_EVENT_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TTY_NAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TYPED_MEMORY_OBJECTS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_TZNAME_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_T_IOV_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_UCHAR_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_UINT_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_UIO_MAXIOV;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_ULONG_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_USER_GROUPS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_USER_GROUPS_R;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_USHRT_MAX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V6_ILP32_OFF32;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V6_ILP32_OFFBIG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V6_LP64_OFF64;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V6_LPBIG_OFFBIG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V7_ILP32_OFF32;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V7_ILP32_OFFBIG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V7_LP64_OFF64;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_V7_LPBIG_OFFBIG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_VERSION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_WORD_BIT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XBS5_ILP32_OFF32;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XBS5_ILP32_OFFBIG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XBS5_LP64_OFF64;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XBS5_LPBIG_OFFBIG;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_CRYPT;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_ENH_I18N;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_LEGACY;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_REALTIME;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_REALTIME_THREADS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_SHM;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_STREAMS;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_UNIX;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_VERSION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_XCU_VERSION;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_XPG2;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_XPG3;
$5B9AA13A32EABFD11651F8FFEC9136E0 _SC_XOPEN_XPG4;
MACRO__RE _SEARCH_H;
MACRO__RE _SEMAPHORE_H;
MACRO__SEM _SEM_SEMUN_UNDEFINED;
MACRO__SETJMP _SETJMP_H;
MACRO__SETJMP _SGTTY_H;
MACRO__SETJMP _SHADOW_H;
MACRO__SIGSET_H _SIGSET_H_fns;
MACRO__SIGSET _SIGSET_H_types;
MACRO__SIOC _SIOC_NONE;
MACRO__SIOC _SIOC_READ;
MACRO__SIOC _SIOC_WRITE;
MACRO__SETJMP _SPAWN_H;
MACRO__SS _SS_SIZE;
MACRO__STAT _STAT_VER;
MACRO__STAT _STAT_VER_KERNEL;
MACRO__STAT _STAT_VER_LINUX;
MACRO__STAT _STAT_VER_LINUX_OLD;
MACRO__STAT _STAT_VER_SVR4;
MACRO__STDC _STDC_PREDEF_H;
MACRO_H _STDINT_H;
MACRO__STDIO_EXT _STDIO_EXT_H;
MACRO__STDIO _STDIO_H;
MACRO__STDLIB _STDLIB_H;
MACRO__STDIO_EXT _STRINGS_H;
MACRO__ARGZ _STRING_H;
MACRO__STDIO_EXT _STROPTS_H;
MACRO__STRUCT _STRUCT_TIMEVAL;
$2BE422EB4B7233E8C58D6E03ADE8CB89 SVID_;
MACRO__SYSCALL _SYSCALL_H;
MACRO__SYSEXITS _SYSEXITS_H;
MACRO__SYS_ACCT _SYS_ACCT_H;
MACRO__SYS _SYS_CDEFS_H;
MACRO__SYS_DIR _SYS_DIR_H;
MACRO__SYS_DIR _SYS_EPOLL_H;
MACRO__SYS_FILE _SYS_FILE_H;
MACRO__SYS_FILE _SYS_FSUID_H;
MACRO__SYS_FILE _SYS_GMON_H;
MACRO__SYS_GMON _SYS_GMON_OUT_H;
MACRO__SYS_INOTIFY _SYS_INOTIFY_H;
MACRO__SYS_IOCTL _SYS_IOCTL_H;
MACRO__SYS_IPC _SYS_IPC_H;
MACRO__SYS_KDAEMON _SYS_KDAEMON_H;
MACRO__SYS_KD _SYS_KD_H;
MACRO__SYS_KDAEMON _SYS_KLOG_H;
MACRO__SYS_KDAEMON _SYS_MMAN_H;
MACRO__SYS_MOUNT _SYS_MOUNT_H;
MACRO__SYS_MTIO _SYS_MTIO_H;
MACRO__REGEXP _SYS_PARAM_H;
MACRO__SYS_PCI _SYS_PCI_H;
MACRO__SYS_PERSONALITY _SYS_PERSONALITY_H;
MACRO__NSS _SYS_POLL_H;
MACRO__SYS_PERSONALITY _SYS_PRCTL_H;
MACRO__THREAD _SYS_PROCFS_H;
MACRO__PROFIL _SYS_PTRACE_H;
MACRO__PROFIL _SYS_QUOTA_H;
MACRO__SYS_RAW _SYS_RAW_H;
MACRO__SYS_REBOOT _SYS_REBOOT_H;
MACRO__SYS_WAIT _SYS_RESOURCE_H;
MACRO__SYS_SELECT _SYS_SELECT_H;
MACRO__SYS_SEM _SYS_SEM_H;
MACRO__SYS_SENDFILE _SYS_SENDFILE_H;
MACRO__SYS_SENDFILE _SYS_SHM_H;
MACRO__IFADDRS _SYS_SOCKET_H;
MACRO__SYS_STATFS _SYS_STATFS_H;
MACRO__SYS_STATFS _SYS_STATVFS_H;
MACRO__FTW _SYS_STAT_H;
MACRO__SYS_STATFS _SYS_SWAP_H;
MACRO__SYS_SYSCTL _SYS_SYSCTL_H;
MACRO__SYS_SYSINFO _SYS_SYSINFO_H;
MACRO__SYS_SYSLOG _SYS_SYSLOG_H;
MACRO__SYS_SYSMACROS _SYS_SYSMACROS_H;
MACRO__SYS_TIMEB _SYS_TIMEB_H;
MACRO__SYS_TIMEB _SYS_TIMES_H;
MACRO__SYS_TIMEB _SYS_TIMEX_H;
MACRO__UTMP _SYS_TIME_H;
MACRO__SYS_TTYCHARS _SYS_TTYCHARS_H;
MACRO__SYS_TYPES _SYS_TYPES_H;
MACRO__SYS_UCONTEXT _SYS_UCONTEXT_H;
MACRO__IFADDRS _SYS_UIO_H;
MACRO__RPC_CLNT _SYS_UN_H;
MACRO__THREAD _SYS_USER_H;
MACRO__SYS_UTSNAME _SYS_UTSNAME_H;
MACRO__SYS_VLIMIT _SYS_VLIMIT_H;
MACRO__SYS_VTIMES _SYS_VTIMES_H;
MACRO__SYS_WAIT _SYS_WAIT_H;
MACRO__SYS_XATTR _SYS_XATTR_H;
MACRO__TAR _TAR_H;
MACRO__PTY _TERMIOS_H;
MACRO__THREAD _THREAD_DB_H;
MACRO_TIME_H _TIME_H;
MACRO__TTYENT _TTYENT_H;
MACRO__UCONTEXT _UCONTEXT_H;
MACRO__UCONTEXT _ULIMIT_H;
MACRO__UCONTEXT _UNISTD_H;
char *UP;
MACRO__UTIME _UTIME_H;
MACRO__UTIME _UTMPX_H;
MACRO__UTMP _UTMP_H;
MACRO__UTSNAME _UTSNAME_DOMAIN_LENGTH;
MACRO__UTSNAME _UTSNAME_LENGTH;
MACRO__UTSNAME _UTSNAME_MACHINE_LENGTH;
MACRO__UTSNAME _UTSNAME_NODENAME_LENGTH;
MACRO__UTSNAME _UTSNAME_RELEASE_LENGTH;
MACRO__UTSNAME _UTSNAME_SYSNAME_LENGTH;
MACRO__UTSNAME _UTSNAME_VERSION_LENGTH;
MACRO__VKILL _VEOF;
MACRO__VEOL _VEOL;
MACRO__VTIME _VEOL2;
MACRO__VINTR _VERASE;
MACRO__VINTR VINTR;
MACRO__VKILL _VKILL;
MACRO__VMIN _VMIN;
MACRO__VINTR _VQUIT;
MACRO__VSWTC _VSWTC;
MACRO__VTIME _VTIME;
MACRO__WCHAR _WCHAR_H;
MACRO__WCTYPE _WCTYPE_H;
MACRO__WORDEXP _WORDEXP_H;
MACRO__XBS5 _XBS5_ILP32_OFF32;
MACRO__XBS5 _XBS5_ILP32_OFFBIG;
MACRO__CTYPE _XLOCALE_H;
$2BE422EB4B7233E8C58D6E03ADE8CB89 _XOPEN_;
MACRO__XOPEN _XOPEN_CRYPT;
MACRO__XOPEN _XOPEN_ENH_I18N;
MACRO__XOPEN _XOPEN_LEGACY;
MACRO__XOPEN_REALTIME _XOPEN_REALTIME;
MACRO__XOPEN_REALTIME _XOPEN_REALTIME_THREADS;
MACRO__XOPEN_REALTIME _XOPEN_SHM;
MACRO__XOPEN _XOPEN_UNIX;
MACRO__XOPEN _XOPEN_VERSION;
MACRO__XOPEN _XOPEN_XCU_VERSION;
MACRO__XOPEN _XOPEN_XPG2;
MACRO__XOPEN _XOPEN_XPG3;
MACRO__XOPEN _XOPEN_XPG4;
MACRO___ASSERT _ASSERT_FUNCTION;
MACRO_ENDIAN __BIG_ENDIAN;
MACRO___BIND __BIND;
MACRO___BITS __BITS_PER_LONG;
MACRO___BIT __BIT_TYPES_DEFINED__;
MACRO_ORDER __BYTE_ORDER;
MACRO___CPU __CPU_SETSIZE;
$2EA190A087F83F88A23D8B31FFFB0F26 __CURRENCY_SYMBOL;
$2EA190A087F83F88A23D8B31FFFB0F26 __DECIMAL_POINT;
MACRO___DES __DES_CRYPT_H__;
Elf32_Dyn _DYNAMIC[];
MACRO___ELF __ELF_NATIVE_CLASS;
$2EA190A087F83F88A23D8B31FFFB0F26 __ERA_YEAR;
void _Exit(int status);
MACRO___FD __FD_SETSIZE;
MACRO___FILE_defined __FILE_defined;
MACRO_ORDER __FLOAT_WORD_ORDER;
MACRO___FMTMSG __FMTMSG_H;
$2EA190A087F83F88A23D8B31FFFB0F26 __FRAC_DIGITS;
MACRO___F __F_GETOWN;
MACRO___F_SETSIG __F_GETOWN_EX;
MACRO___F_SETSIG __F_GETSIG;
MACRO___F __F_SETOWN;
MACRO___F_SETSIG __F_SETOWN_EX;
MACRO___F_SETSIG __F_SETSIG;
$4495C0A634E380314992BEF5C5E51096 __GCONV_EMPTY_INPUT;
$4495C0A634E380314992BEF5C5E51096 __GCONV_FULL_OUTPUT;
$FFC92A797DFCEB24C85E964A8CC23C17 __GCONV_IGNORE_ERRORS;
$4495C0A634E380314992BEF5C5E51096 __GCONV_ILLEGAL_DESCRIPTOR;
$4495C0A634E380314992BEF5C5E51096 __GCONV_ILLEGAL_INPUT;
$4495C0A634E380314992BEF5C5E51096 __GCONV_INCOMPLETE_INPUT;
$4495C0A634E380314992BEF5C5E51096 __GCONV_INTERNAL_ERROR;
$FFC92A797DFCEB24C85E964A8CC23C17 __GCONV_IS_LAST;
$4495C0A634E380314992BEF5C5E51096 __GCONV_NOCONV;
$4495C0A634E380314992BEF5C5E51096 __GCONV_NODB;
$4495C0A634E380314992BEF5C5E51096 __GCONV_NOMEM;
$4495C0A634E380314992BEF5C5E51096 _GCONV_OK;
$FFC92A797DFCEB24C85E964A8CC23C17 __GCONV_SWAP;
$FFC92A797DFCEB24C85E964A8CC23C17 __GCONV_TRANSLIT;
MACRO___GLIBC __GLIBC_MINOR__;
MACRO___GLIBC __GLIBC__;
MACRO___GLOB __GLOB_FLAGS;
MACRO___GNU __GNU_LIBRARY__;
MACRO___GNU_LIB __GNU_LIB_NAMES_H;
$2EA190A087F83F88A23D8B31FFFB0F26 __GROUPING;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_CURR_SYMBOL;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_FRAC_DIGITS;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_N_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_N_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_N_SIGN_POSN;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_P_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_P_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 __INT_P_SIGN_POSN;
struct _IO_FILE_plus _IO_2_1_stderr_;
struct _IO_FILE_plus _IO_2_1_stdin_;
struct _IO_FILE_plus _IO_2_1_stdout_;
int _IO_feof(_IO_FILE *fp);
int _IO_ferror(_IO_FILE *fp);
void _IO_flockfile(_IO_FILE *);
void _IO_free_backup_area(_IO_FILE *);
int _IO_ftrylockfile(_IO_FILE *);
void _IO_funlockfile(_IO_FILE *);
int _IO_getc(_IO_FILE *fp);
__ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
int _IO_peekc_locked(_IO_FILE *fp);
int _IO_putc(int c, _IO_FILE *fp);
__off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
__off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
size_t _IO_sgetn(_IO_FILE *, void *, size_t);
int _IO_vfprintf(_IO_FILE *, const char *, __gnuc_va_list);
int _IO_vfscanf(_IO_FILE *, const char *, __gnuc_va_list, int *);
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwalnum;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwalpha;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwblank;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwcntrl;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwdigit;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwgraph;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwlower;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwprint;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwpunct;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwspace;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 _ISwupper;
$8CDE7E6A1AF55BBB9FBF3C663AC88F59 __ISwxdigit;
MACRO___LC __LC_ADDRESS;
MACRO___LC __LC_ALL;
MACRO___LC __LC_COLLATE;
MACRO___LC _LC_CTYPE;
MACRO___LC __LC_IDENTIFICATION;
MACRO___LC __LC_MEASUREMENT;
MACRO___LC __LC_MESSAGES;
MACRO___LC __LC_MONETARY;
MACRO___LC __LC_NAME;
MACRO___LC __LC_NUMERIC;
MACRO___LC __LC_PAPER;
MACRO___LC __LC_TELEPHONE;
MACRO___LC __LC_TIME;
_LIB_VERSION_TYPE _LIB_VERSION;
MACRO_ENDIAN __LITTLE_ENDIAN;
MACRO___LONG __LONG_DOUBLE_MATH_OPTIONAL;
MACRO___MATH __MATH_DECLARE_LDOUBLE;
MACRO___MAX __MAX_BAUD;
$2EA190A087F83F88A23D8B31FFFB0F26 __MON_DECIMAL_POINT;
$2EA190A087F83F88A23D8B31FFFB0F26 __MON_GROUPING;
$2EA190A087F83F88A23D8B31FFFB0F26 __MON_THOUSANDS_SEP;
MACRO___NAMESER __NAMESER;
$2EA190A087F83F88A23D8B31FFFB0F26 __NEGATIVE_SIGN;
MACRO_ETHER_H __NETINET_IF_ETHER_H;
MACRO__NETINET_IN __NETINET_IP_H;
MACRO___NETINET __NETINET_IP_ICMP_H;
MACRO___NETINET_UDP __NETINET_UDP_H;
MACRO___NETIPX __NETIPX_IPX_H;
MACRO___NETPACKET __NETPACKET_PACKET_H;
MACRO___GNU_LIB __NET_ETHERNET_H;
$D53D1E8297F8C721782D459039395DFD __NET_IPV6_MAX;
$2EA190A087F83F88A23D8B31FFFB0F26 __NOEXPR;
$2EA190A087F83F88A23D8B31FFFB0F26 __NOSTR;
MACRO___NR __NR__llseek;
MACRO___NR __NR__newselect;
MACRO___NR __NR__sysctl;
MACRO___NR __NR_accept;
MACRO___NR __NR_accept4;
MACRO___NR __NR_access;
MACRO___NR __NR_acct;
MACRO___NR __NR_add_key;
MACRO___NR __NR_adjtimex;
MACRO___NR __NR_afs_syscall;
MACRO___NR __NR_alarm;
MACRO___NR __NR_bdflush;
MACRO___NR __NR_bind;
MACRO___NR __NR_bpf;
MACRO___NR __NR_break;
MACRO___NR __NR_brk;
MACRO___NR __NR_capget;
MACRO___NR __NR_capset;
MACRO___NR __NR_chdir;
MACRO___NR __NR_chmod;
MACRO___NR __NR_chown;
MACRO___NR __NR_chroot;
MACRO___NR __NR_clock_adjtime;
MACRO___NR __NR_clock_getres;
MACRO___NR __NR_clock_gettime;
MACRO___NR __NR_clock_nanosleep;
MACRO___NR __NR_clock_settime;
MACRO___NR __NR_clone;
MACRO___NR __NR_close;
MACRO___NR __NR_connect;
MACRO___NR __NR_creat;
MACRO___NR __NR_create_module;
MACRO___NR __NR_delete_module;
MACRO___NR __NR_dup;
MACRO___NR __NR_dup2;
MACRO___NR __NR_dup3;
MACRO___NR __NR_epoll_create;
MACRO___NR __NR_epoll_create1;
MACRO___NR __NR_epoll_ctl;
MACRO___NR __NR_epoll_pwait;
MACRO___NR __NR_epoll_wait;
MACRO___NR __NR_eventfd;
MACRO___NR __NR_eventfd2;
MACRO___NR __NR_execve;
MACRO___NR __NR_execveat;
MACRO___NR __NR_exit;
MACRO___NR __NR_exit_group;
MACRO___NR __NR_faccessat;
MACRO___NR __NR_fadvise64;
MACRO___NR __NR_fadvise64_64;
MACRO___NR __NR_fallocate;
MACRO___NR __NR_fanotify_init;
MACRO___NR __NR_fanotify_mark;
MACRO___NR __NR_fchdir;
MACRO___NR __NR_fchmod;
MACRO___NR __NR_fchmodat;
MACRO___NR __NR_fchown;
MACRO___NR __NR_fchownat;
MACRO___NR __NR_fcntl;
MACRO___NR __NR_fcntl64;
MACRO___NR __NR_fdatasync;
MACRO___NR __NR_fgetxattr;
MACRO___NR __NR_finit_module;
MACRO___NR __NR_flistxattr;
MACRO___NR __NR_flock;
MACRO___NR __NR_fork;
MACRO___NR __NR_fremovexattr;
MACRO___NR __NR_fsetxattr;
MACRO___NR __NR_fstat;
MACRO___NR __NR_fstat64;
MACRO___NR __NR_fstatat64;
MACRO___NR __NR_fstatfs;
MACRO___NR __NR_fstatfs64;
MACRO___NR __NR_fsync;
MACRO___NR __NR_ftime;
MACRO___NR __NR_ftruncate;
MACRO___NR __NR_ftruncate64;
MACRO___NR __NR_futex;
MACRO___NR __NR_futimesat;
MACRO___NR __NR_get_kernel_syms;
MACRO___NR __NR_get_mempolicy;
MACRO___NR __NR_get_robust_list;
MACRO___NR __NR_getcpu;
MACRO___NR __NR_getcwd;
MACRO___NR __NR_getdents;
MACRO___NR __NR_getdents64;
MACRO___NR __NR_getegid;
MACRO___NR __NR_geteuid;
MACRO___NR __NR_getgid;
MACRO___NR __NR_getgroups;
MACRO___NR __NR_getitimer;
MACRO___NR __NR_getpeername;
MACRO___NR __NR_getpgid;
MACRO___NR __NR_getpgrp;
MACRO___NR __NR_getpid;
MACRO___NR __NR_getpmsg;
MACRO___NR __NR_getppid;
MACRO___NR __NR_getpriority;
MACRO___NR __NR_getrandom;
MACRO___NR __NR_getresgid;
MACRO___NR __NR_getresuid;
MACRO___NR __NR_getrlimit;
MACRO___NR __NR_getrusage;
MACRO___NR __NR_getsid;
MACRO___NR __NR_getsockname;
MACRO___NR __NR_getsockopt;
MACRO___NR __NR_gettid;
MACRO___NR __NR_gettimeofday;
MACRO___NR __NR_getuid;
MACRO___NR __NR_getxattr;
MACRO___NR __NR_gtty;
MACRO___NR __NR_idle;
MACRO___NR __NR_init_module;
MACRO___NR __NR_inotify_add_watch;
MACRO___NR __NR_inotify_init;
MACRO___NR __NR_inotify_init1;
MACRO___NR __NR_inotify_rm_watch;
MACRO___NR __NR_io_cancel;
MACRO___NR __NR_io_destroy;
MACRO___NR __NR_io_getevents;
MACRO___NR __NR_io_setup;
MACRO___NR __NR_io_submit;
MACRO___NR __NR_ioctl;
MACRO___NR __NR_ioperm;
MACRO___NR __NR_iopl;
MACRO___NR __NR_ioprio_get;
MACRO___NR __NR_ioprio_set;
MACRO___NR __NR_ipc;
MACRO___NR __NR_kcmp;
MACRO___NR __NR_kexec_load;
MACRO___NR __NR_keyctl;
MACRO___NR __NR_kill;
MACRO___NR __NR_lchown;
MACRO___NR __NR_lgetxattr;
MACRO___NR __NR_link;
MACRO___NR __NR_linkat;
MACRO___NR __NR_listen;
MACRO___NR __NR_listxattr;
MACRO___NR __NR_llistxattr;
MACRO___NR __NR_lock;
MACRO___NR __NR_lookup_dcookie;
MACRO___NR __NR_lremovexattr;
MACRO___NR __NR_lseek;
MACRO___NR __NR_lsetxattr;
MACRO___NR __NR_lstat;
MACRO___NR __NR_lstat64;
MACRO___NR __NR_madvise;
MACRO___NR __NR_mbind;
MACRO___NR __NR_memfd_create;
MACRO___NR __NR_migrate_pages;
MACRO___NR __NR_mincore;
MACRO___NR __NR_mkdir;
MACRO___NR __NR_mkdirat;
MACRO___NR __NR_mknod;
MACRO___NR __NR_mknodat;
MACRO___NR __NR_mlock;
MACRO___NR __NR_mlockall;
MACRO___NR __NR_mmap;
MACRO___NR __NR_mmap2;
MACRO___NR __NR_modify_ldt;
MACRO___NR __NR_mount;
MACRO___NR __NR_move_pages;
MACRO___NR __NR_mprotect;
MACRO___NR __NR_mpx;
MACRO___NR __NR_mq_getsetattr;
MACRO___NR __NR_mq_notify;
MACRO___NR __NR_mq_open;
MACRO___NR __NR_mq_timedreceive;
MACRO___NR __NR_mq_timedsend;
MACRO___NR __NR_mq_unlink;
MACRO___NR __NR_mremap;
MACRO___NR __NR_msync;
MACRO___NR __NR_multiplexer;
MACRO___NR __NR_munlock;
MACRO___NR __NR_munlockall;
MACRO___NR __NR_munmap;
MACRO___NR __NR_name_to_handle_at;
MACRO___NR __NR_nanosleep;
MACRO___NR __NR_nfsservctl;
MACRO___NR __NR_nice;
MACRO___NR __NR_oldfstat;
MACRO___NR __NR_oldlstat;
MACRO___NR __NR_oldolduname;
MACRO___NR __NR_oldstat;
MACRO___NR __NR_olduname;
MACRO___NR __NR_open;
MACRO___NR __NR_open_by_handle_at;
MACRO___NR __NR_openat;
MACRO___NR __NR_pause;
MACRO___NR __NR_pciconfig_iobase;
MACRO___NR __NR_pciconfig_read;
MACRO___NR __NR_pciconfig_write;
MACRO___NR __NR_perf_event_open;
MACRO___NR __NR_personality;
MACRO___NR __NR_pipe;
MACRO___NR __NR_pipe2;
MACRO___NR __NR_pivot_root;
MACRO___NR __NR_poll;
MACRO___NR __NR_ppoll;
MACRO___NR __NR_prctl;
MACRO___NR __NR_pread64;
MACRO___NR __NR_preadv;
MACRO___NR __NR_prlimit64;
MACRO___NR __NR_process_vm_readv;
MACRO___NR __NR_process_vm_writev;
MACRO___NR __NR_prof;
MACRO___NR __NR_profil;
MACRO___NR __NR_pselect6;
MACRO___NR __NR_ptrace;
MACRO___NR __NR_putpmsg;
MACRO___NR __NR_pwrite64;
MACRO___NR __NR_pwritev;
MACRO___NR __NR_query_module;
MACRO___NR __NR_quotactl;
MACRO___NR __NR_read;
MACRO___NR __NR_readahead;
MACRO___NR __NR_readdir;
MACRO___NR __NR_readlink;
MACRO___NR __NR_readlinkat;
MACRO___NR __NR_readv;
MACRO___NR __NR_reboot;
MACRO___NR __NR_recv;
MACRO___NR __NR_recvfrom;
MACRO___NR __NR_recvmmsg;
MACRO___NR __NR_recvmsg;
MACRO___NR __NR_remap_file_pages;
MACRO___NR __NR_removexattr;
MACRO___NR __NR_rename;
MACRO___NR __NR_renameat;
MACRO___NR __NR_renameat2;
MACRO___NR __NR_request_key;
MACRO___NR _NR_restart_syscall;
MACRO___NR __NR_rmdir;
MACRO___NR __NR_rt_sigaction;
MACRO___NR __NR_rt_sigpending;
MACRO___NR __NR_rt_sigprocmask;
MACRO___NR __NR_rt_sigqueueinfo;
MACRO___NR __NR_rt_sigreturn;
MACRO___NR __NR_rt_sigsuspend;
MACRO___NR __NR_rt_sigtimedwait;
MACRO___NR __NR_rt_tgsigqueueinfo;
MACRO___NR __NR_rtas;
MACRO___NR __NR_sched_get_priority_max;
MACRO___NR __NR_sched_get_priority_min;
MACRO___NR __NR_sched_getaffinity;
MACRO___NR __NR_sched_getattr;
MACRO___NR __NR_sched_getparam;
MACRO___NR __NR_sched_getscheduler;
MACRO___NR __NR_sched_rr_get_interval;
MACRO___NR __NR_sched_setaffinity;
MACRO___NR __NR_sched_setattr;
MACRO___NR __NR_sched_setparam;
MACRO___NR __NR_sched_setscheduler;
MACRO___NR __NR_sched_yield;
MACRO___NR __NR_seccomp;
MACRO___NR __NR_select;
MACRO___NR __NR_send;
MACRO___NR __NR_sendfile;
MACRO___NR __NR_sendfile64;
MACRO___NR __NR_sendmmsg;
MACRO___NR __NR_sendmsg;
MACRO___NR __NR_sendto;
MACRO___NR __NR_set_mempolicy;
MACRO___NR __NR_set_robust_list;
MACRO___NR __NR_set_tid_address;
MACRO___NR __NR_setdomainname;
MACRO___NR __NR_setfsgid;
MACRO___NR __NR_setfsuid;
MACRO___NR __NR_setgid;
MACRO___NR __NR_setgroups;
MACRO___NR __NR_sethostname;
MACRO___NR __NR_setitimer;
MACRO___NR __NR_setns;
MACRO___NR __NR_setpgid;
MACRO___NR __NR_setpriority;
MACRO___NR __NR_setregid;
MACRO___NR __NR_setresgid;
MACRO___NR __NR_setresuid;
MACRO___NR __NR_setreuid;
MACRO___NR __NR_setrlimit;
MACRO___NR __NR_setsid;
MACRO___NR __NR_setsockopt;
MACRO___NR __NR_settimeofday;
MACRO___NR __NR_setuid;
MACRO___NR __NR_setxattr;
MACRO___NR __NR_sgetmask;
MACRO___NR __NR_shutdown;
MACRO___NR __NR_sigaction;
MACRO___NR __NR_sigaltstack;
MACRO___NR __NR_signal;
MACRO___NR __NR_signalfd;
MACRO___NR __NR_signalfd4;
MACRO___NR __NR_sigpending;
MACRO___NR __NR_sigprocmask;
MACRO___NR __NR_sigreturn;
MACRO___NR __NR_sigsuspend;
MACRO___NR __NR_socket;
MACRO___NR __NR_socketcall;
MACRO___NR __NR_socketpair;
MACRO___NR __NR_splice;
MACRO___NR __NR_spu_create;
MACRO___NR __NR_spu_run;
MACRO___NR __NR_ssetmask;
MACRO___NR __NR_stat;
MACRO___NR __NR_stat64;
MACRO___NR __NR_statfs;
MACRO___NR __NR_statfs64;
MACRO___NR __NR_stime;
MACRO___NR __NR_stty;
MACRO___NR __NR_subpage_prot;
MACRO___NR __NR_swapcontext;
MACRO___NR __NR_swapoff;
MACRO___NR __NR_swapon;
MACRO___NR __NR_symlink;
MACRO___NR __NR_symlinkat;
MACRO___NR __NR_sync;
MACRO___NR __NR_sync_file_range2;
MACRO___NR __NR_syncfs;
MACRO___NR __NR_sys_debug_setcontext;
MACRO___NR __NR_sysfs;
MACRO___NR __NR_sysinfo;
MACRO___NR __NR_syslog;
MACRO___NR __NR_tee;
MACRO___NR __NR_tgkill;
MACRO___NR __NR_time;
MACRO___NR __NR_timer_create;
MACRO___NR __NR_timer_delete;
MACRO___NR __NR_timer_getoverrun;
MACRO___NR __NR_timer_gettime;
MACRO___NR __NR_timer_settime;
MACRO___NR __NR_timerfd_create;
MACRO___NR __NR_timerfd_gettime;
MACRO___NR __NR_timerfd_settime;
MACRO___NR __NR_times;
MACRO___NR __NR_tkill;
MACRO___NR __NR_truncate;
MACRO___NR __NR_truncate64;
MACRO___NR __NR_tuxcall;
MACRO___NR __NR_ugetrlimit;
MACRO___NR __NR_ulimit;
MACRO___NR __NR_umask;
MACRO___NR __NR_umount;
MACRO___NR __NR_umount2;
MACRO___NR __NR_uname;
MACRO___NR __NR_unlink;
MACRO___NR __NR_unlinkat;
MACRO___NR __NR_unshare;
MACRO___NR __NR_uselib;
MACRO___NR __NR_ustat;
MACRO___NR __NR_utime;
MACRO___NR __NR_utimensat;
MACRO___NR __NR_utimes;
MACRO___NR __NR_vfork;
MACRO___NR __NR_vhangup;
MACRO___NR __NR_vm86;
MACRO___NR __NR_vmsplice;
MACRO___NR __NR_wait4;
MACRO___NR __NR_waitid;
MACRO___NR __NR_waitpid;
MACRO___NR __NR_write;
MACRO___NR __NR_writev;
$2EA190A087F83F88A23D8B31FFFB0F26 __N_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 __N_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 __N_SIGN_POSN;
MACRO___OPTION __OPTION_EGLIBC_ADVANCED_INET6;
MACRO___OPTION __OPTION_EGLIBC_BACKTRACE;
MACRO___OPTION __OPTION_EGLIBC_BIG_MACROS;
MACRO___OPTION __OPTION_EGLIBC_BSD;
MACRO___OPTION __OPTION_EGLIBC_CATGETS;
MACRO___OPTION __OPTION_EGLIBC_CHARSETS;
MACRO___OPTION __OPTION_EGLIBC_CRYPT;
MACRO___OPTION __OPTION_EGLIBC_CRYPT_UFC;
MACRO___OPTION __OPTION_EGLIBC_CXX_TESTS;
MACRO___OPTION __OPTION_EGLIBC_DB_ALIASES;
MACRO___OPTION __OPTION_EGLIBC_ENVZ;
MACRO___OPTION __OPTION_EGLIBC_FCVT;
MACRO___OPTION __OPTION_EGLIBC_FMTMSG;
MACRO___OPTION __OPTION_EGLIBC_FSTAB;
MACRO___OPTION __OPTION_EGLIBC_FTRAVERSE;
MACRO___OPTION __OPTION_EGLIBC_GETLOGIN;
MACRO___OPTION __OPTION_EGLIBC_IDN;
MACRO___OPTION __OPTION_EGLIBC_INET;
MACRO___OPTION __OPTION_EGLIBC_INET_ANL;
MACRO___OPTION __OPTION_EGLIBC_LIBM;
MACRO___OPTION __OPTION_EGLIBC_LOCALES;
MACRO___OPTION __OPTION_EGLIBC_LOCALE_CODE;
MACRO___OPTION __OPTION_EGLIBC_MEMUSAGE;
MACRO___OPTION __OPTION_EGLIBC_MEMUSAGE_DEFAULT_BUFFER_SIZE;
MACRO___OPTION __OPTION_EGLIBC_NIS;
MACRO___OPTION __OPTION_EGLIBC_NSSWITCH;
MACRO___OPTION __OPTION_EGLIBC_RCMD;
MACRO___OPTION __OPTION_EGLIBC_RTLD_DEBUG;
MACRO___OPTION __OPTION_EGLIBC_SPAWN;
MACRO___OPTION __OPTION_EGLIBC_STREAMS;
MACRO___OPTION __OPTION_EGLIBC_SUNRPC;
MACRO___OPTION __OPTION_EGLIBC_UTMP;
MACRO___OPTION __OPTION_EGLIBC_UTMPX;
MACRO___OPTION __OPTION_EGLIBC_WORDEXP;
MACRO___OPTION __OPTION_POSIX_C_LANG_WIDE_CHAR;
MACRO___OPTION __OPTION_POSIX_REGEXP;
MACRO___OPTION __OPTION_POSIX_REGEXP_GLIBC;
MACRO___OPTION __OPTION_POSIX_WIDE_CHAR_DEVICE_IO;
MACRO___O_CLOEXEC __O_CLOEXEC;
MACRO___O __O_DIRECT;
MACRO___O __O_DIRECTORY;
MACRO___O_CLOEXEC __O_DSYNC;
MACRO___O __O_LARGEFILE;
MACRO___O_CLOEXEC __O_NOATIME;
MACRO___O __O_NOFOLLOW;
MACRO___O_CLOEXEC __O_PATH;
MACRO___O_CLOEXEC __O_TMPFILE;
MACRO_ENDIAN __PDP_ENDIAN;
$2EA190A087F83F88A23D8B31FFFB0F26 __POSITIVE_SIGN;
MACRO_VERSION __POSIX2_THIS_VERSION;
MACRO___POSIX __POSIX_FADV_DONTNEED;
MACRO___POSIX __POSIX_FADV_NOREUSE;
MACRO___PTHREAD _PTHREAD_RWLOCK_ELISION_EXTRA;
$2EA190A087F83F88A23D8B31FFFB0F26 __P_CS_PRECEDES;
$2EA190A087F83F88A23D8B31FFFB0F26 __P_SEP_BY_SPACE;
$2EA190A087F83F88A23D8B31FFFB0F26 __P_SIGN_POSN;
MACRO___RES __RES;
__rlimit_resource __RLIMIT_LOCKS;
__rlimit_resource __RLIMIT_MEMLOCK;
__rlimit_resource __RLIMIT_MSGQUEUE;
__rlimit_resource __RLIMIT_NICE;
__rlimit_resource __RLIMIT_NLIMITS;
__rlimit_resource __RLIMIT_NPROC;
__rlimit_resource __RLIMIT_OFILE;
__rlimit_resource __RLIMIT_RSS;
__rlimit_resource __RLIMIT_RTPRIO;
__rlimit_resource __RLIMIT_RTTIME;
__rlimit_resource __RLIMIT_SIGPENDING;
__rlimit_resource __RLIM_NLIMITS;
MACRO___SID __SID;
MACRO___SIGEV __SIGEV_MAX_SIZE;
MACRO_SIGNAL __SIGRTMAX;
MACRO_SIGNAL __SIGRTMIN;
MACRO___SIZEOF __SIZEOF_PTHREAD_ATTR_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_BARRIERATTR_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_BARRIER_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_CONDATTR_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_COND_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_MUTEXATTR_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_MUTEX_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_RWLOCKATTR_T;
MACRO___SIZEOF __SIZEOF_PTHREAD_RWLOCK_T;
MACRO___SIZEOF_SEM __SIZEOF_SEM_T;
MACRO___SI __SI_MAX_SIZE;
MACRO___STDC __STDC_IEC_559_COMPLEX__;
MACRO___STDC __STDC_IEC_559__;
MACRO___STDC __STDC_ISO_10646__;
MACRO___STDC __STDC_NO_THREADS__;
MACRO___S __S_IEXEC;
MACRO___S __S_IFBLK;
MACRO___S __S_IFCHR;
MACRO___S __S_IFDIR;
MACRO___S __S_IFIFO;
MACRO___S __S_IFLNK;
MACRO___S __S_IFMT;
MACRO___S __S_IFREG;
MACRO___S __S_IFSOCK;
MACRO___S __S_IREAD;
MACRO___S __S_ISGID;
MACRO___S __S_ISUID;
MACRO___S __S_ISVTX;
MACRO___S __S_IWRITE;
$2EA190A087F83F88A23D8B31FFFB0F26 __THOUSANDS_SEP;
$699D2B6448FB7BE3D7A3A7D1978CAEFE __UL_GETMAXBRK;
$699D2B6448FB7BE3D7A3A7D1978CAEFE __UL_GETOPENMAX;
MACRO___UNKNOWN __UNKNOWN_10646_CHAR;
MACRO___USE_MISC __USE_ATFILE;
MACRO___USE_MISC _USE_FORTIFY_LEVEL;
MACRO___USE_GNU __USE_GNU_GETTEXT;
MACRO___USE_POSIX __USE_ISOC95;
MACRO___USE_POSIX __USE_ISOC99;
MACRO___USE_MISC __USE_MISC;
MACRO___USE_POSIX __USE_POSIX;
MACRO___USE_POSIX __USE_POSIX199309;
MACRO___USE_POSIX __USE_POSIX199506;
MACRO___USE_POSIX __USE_POSIX2;
MACRO___USE __USE_POSIX_IMPLICITLY;
MACRO___USE_POSIX __USE_XOPEN2K;
MACRO___USE_POSIX __USE_XOPEN2K8;
MACRO___UT __UT_HOSTSIZE;
MACRO___UT __UT_LINESIZE;
MACRO___UT __UT_NAMESIZE;
MACRO_WSTOPPED __WALL;
MACRO___WCHAR __WCHAR_MAX;
MACRO___WCHAR __WCHAR_MIN;
MACRO_WSTOPPED __WCLONE;
MACRO___WCOREFLAG __WCOREFLAG;
MACRO_WSTOPPED __WNOTHREAD;
MACRO___WORDSIZE __WORDSIZE;
$25942044E42384ABB7F0CC7F690A0C02 __WRDE_FLAGS;
MACRO___W __W_CONTINUED;
$2EA190A087F83F88A23D8B31FFFB0F26 __YESEXPR;
$2EA190A087F83F88A23D8B31FFFB0F26 __YESSTR;
MACRO___FILE_defined ____FILE_defined;
MACRO_____gwchar ____gwchar_t_defined;
MACRO_____mbstate ____mbstate_t_defined;
double __acos(double x);
float __acosf(float x);
double __acosh(double x);
float __acoshf(float x);
long double __acoshl(long double x);
long double __acosl(long double x);
int __adjtimex(struct timex *ntx);
void (*volatile __after_morecore_hook)(void);
void __argp_error(const struct argp_state *state, const char *fmt, ...);
void __argp_failure(const struct argp_state *state, int status, int errnum, const char *fmt, ...);
void __argp_help(const struct argp *argp, FILE *stream, unsigned int flags, char *name);
void *__argp_input(const struct argp *argp, const struct argp_state *state);
error_t __argp_parse(const struct argp *argp, int argc, char **argv, unsigned int flags, int *arg_index, void *input);
void __argp_state_help(const struct argp_state *state, FILE *stream, unsigned int flags);
void __argp_usage(const struct argp_state *state);
error_t __argz_add(char **argz, size_t *argz_len, const char *str);
error_t __argz_add_sep(char **argz, size_t *argz_len, const char *string, int delim);
error_t __argz_append(char **argz, size_t *argz_len, const char *buf, size_t buf_len);
size_t __argz_count(const char *argz, size_t len);
error_t __argz_create(char *const argv[], char **argz, size_t *len);
error_t __argz_create_sep(const char *string, int sep, char **argz, size_t *len);
void __argz_delete(char **argz, size_t *argz_len, char *entry);
void __argz_extract(const char *argz, size_t len, char **argv);
error_t __argz_insert(char **argz, size_t *argz_len, char *before, const char *entry);
char *__argz_next(const char *argz, size_t argz_len, const char *entry);
error_t __argz_replace(char **argz, size_t *argz_len, const char *str, const char *with, unsigned int *replace_count);
void __argz_stringify(char *argz, size_t len, int sep);
double __asin(double x);
float __asinf(float x);
double __asinh(double x);
float __asinhf(float x);
long double __asinhl(long double x);
long double __asinl(long double x);
void __assert(const char *assertion, const char *file, int line);
void __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function);
void __assert_perror_fail(int errnum, const char *file, unsigned int line, const char *function);
double __atan(double x);
double __atan2(double y, double x);
float __atan2f(float y, float x);
long double __atan2l(long double y, long double x);
float __atanf(float x);
double __atanh(double x);
float __atanhf(float x);
long double __atanhl(long double x);
long double __atanl(long double x);
int __b64_ntop(const u_char *, size_t, char *, size_t);
int __b64_pton(const char *, u_char *, size_t);
struct __bb *__bb_head;
static __u16 __be16_to_cpup(const __be16 *p);
static __u32 __be32_to_cpup(const __be32 *p);
static __u64 __be64_to_cpup(const __be64 *p);
static __uint64_t __bswap_64(__uint64_t bsx);
void __bzero(void *s, size_t n);
double __cbrt(double x);
float __cbrtf(float x);
long double __cbrtl(long double x);
double __ceil(double x);
float __ceilf(float x);
long double __ceill(long double x);
struct cmsghdr *__cmsg_nxthdr(struct msghdr *mhdr, struct cmsghdr *cmsg);
double __copysign(double x, double y);
float __copysignf(float x, float y);
long double __copysignl(long double x, long double y);
double __cos(double x);
float __cosf(float x);
double __cosh(double x);
float __coshf(float x);
long double __coshl(long double x);
long double __cosl(long double x);
static __be16 __cpu_to_be16p(const __u16 *p);
static __be32 __cpu_to_be32p(const __u32 *p);
static __be64 __cpu_to_be64p(const __u64 *p);
static __le16 __cpu_to_le16p(const __u16 *p);
static __le32 __cpu_to_le32p(const __u32 *p);
static __le64 __cpu_to_le64p(const __u64 *p);
const unsigned __int16 **__ctype_b_loc(void);
size_t __ctype_get_mb_cur_max(void);
const __int32_t **__ctype_tolower_loc(void);
const __int32_t **__ctype_toupper_loc(void);
int __daylight;
char *__dcgettext(const char *domainname, const char *msgid, int category);
void *__default_morecore(ptrdiff_t size);
char *__dgettext(const char *domainname, const char *msgid);
int __dn_comp(const char *, u_char *, int, u_char **, u_char **);
int __dn_count_labels(const char *);
int __dn_expand(const u_char *, const u_char *, const u_char *, char *, int);
int __dn_skipname(const u_char *, const u_char *);
double __drem(double x, double y);
float __dremf(float x, float y);
long double __dreml(long double x, long double y);
char **__environ;
double __erf(double);
double __erfc(double);
float __erfcf(float);
long double __erfcl(long double);
float __erff(float);
long double __erfl(long double);
int *__errno_location(void);
double __exp(double x);
double __exp2(double x);
float __exp2f(float x);
long double __exp2l(long double x);
float __expf(float x);
long double __expl(long double x);
double __expm1(double x);
float __expm1f(float x);
long double __expm1l(long double x);
double __fabs(double x);
float __fabsf(float x);
long double __fabsl(long double x);
size_t __fbufsize(FILE *fp);
double __fdim(double x, double y);
float __fdimf(float x, float y);
long double __fdiml(long double x, long double y);
const fenv_t __fe_dfl_env;
int __finite(double value);
int __finitef(float value);
int __finitel(long double value);
int __flbf(FILE *fp);
double __floor(double x);
float __floorf(float x);
long double __floorl(long double x);
double __fma(double x, double y, double z);
float __fmaf(float x, float y, float z);
long double __fmal(long double x, long double y, long double z);
double __fmax(double x, double y);
float __fmaxf(float x, float y);
long double __fmaxl(long double x, long double y);
double __fmin(double x, double y);
float __fminf(float x, float y);
long double __fminl(long double x, long double y);
double __fmod(double x, double y);
float __fmodf(float x, float y);
long double __fmodl(long double x, long double y);
void __fp_nquery(const u_char *, int, FILE *);
void __fp_query(const u_char *, FILE *);
void __fp_resstat(const res_state, FILE *);
int __fpclassify(double value);
int __fpclassifyf(float value);
int __fpclassifyl(long double value);
size_t __fpending(FILE *fp);
fpu_control_t __fpu_control;
void __fpurge(FILE *fp);
int __freadable(FILE *fp);
int __freading(FILE *fp);
void (*volatile __free_hook)(void *ptr, const void *);
double __frexp(double x, int *exponent);
float __frexpf(float x, int *exponent);
long double __frexpl(long double x, int *exponent);
int __fsetlocking(FILE *fp, int type);
static __u16 __fswab16(__u16 val);
static __u32 __fswab32(__u32 val);
static __u64 __fswab64(__u64 val);
static __u32 __fswahb32(__u32 val);
static __u32 __fswahw32(__u32 val);
int __fwritable(FILE *fp);
int __fwriting(FILE *fp);
int __fxstat(int ver, int fildes, struct stat *stat_buf);
int __fxstatat(int ver, int fildes, const char *filename, struct stat *stat_buf, int flag);
double __gamma(double);
float __gammaf(float);
long double __gammal(long double);
int __gconv_transliterate(struct __gconv_step *step, struct __gconv_step_data *step_data, const unsigned __int8 *inbufstart, const unsigned __int8 **inbufp, const unsigned __int8 *inbufend, unsigned __int8 **outbufstart, size_t *irreversible);
__ssize_t __getdelim(char **lineptr, size_t *n, int delimiter, FILE *stream);
int __getpagesize(void);
__pid_t __getpgid(__pid_t pid);
int *__h_errno_location(void);
const char *__hostalias(const char *);
double __hypot(double x, double y);
float __hypotf(float x, float y);
long double __hypotl(long double x, long double y);
int __ilogb(double x);
int __ilogbf(float x);
int __ilogbl(long double x);
int __ipc(int call, int first, int second, int third, void *ptr);
int __isinf(double value);
int __isinff(float value);
int __isinfl(long double value);
int __isnan(double value);
int __isnanf(float value);
int __isnanl(long double value);
int __isoc99_fscanf(FILE *stream, const char *format, ...);
int __isoc99_fwscanf(__FILE *stream, const wchar_t *format, ...);
int __isoc99_scanf(const char *format, ...);
int __isoc99_sscanf(const char *s, const char *format, ...);
int __isoc99_swscanf(const wchar_t *s, const wchar_t *format, ...);
int __isoc99_vfscanf(FILE *s, const char *format, __gnuc_va_list arg);
int __isoc99_vfwscanf(__FILE *s, const wchar_t *format, __gnuc_va_list arg);
int __isoc99_vscanf(const char *format, __gnuc_va_list arg);
int __isoc99_vsscanf(const char *s, const char *format, __gnuc_va_list arg);
int __isoc99_vswscanf(const wchar_t *s, const wchar_t *format, __gnuc_va_list arg);
int __isoc99_vwscanf(const wchar_t *format, __gnuc_va_list arg);
int __isoc99_wscanf(const wchar_t *format, ...);
double __j0(double);
float __j0f(float);
long double __j0l(long double);
double __j1(double);
float __j1f(float);
long double __j1l(long double);
double __jn(int, double);
float __jnf(int, float);
long double __jnl(int, long double);
double __ldexp(double x, int exponent);
float __ldexpf(float x, int exponent);
long double __ldexpl(long double x, int exponent);
static __u16 __le16_to_cpup(const __le16 *p);
static __u32 __le32_to_cpup(const __le32 *p);
static __u64 __le64_to_cpup(const __le64 *p);
double __lgamma(double);
double __lgamma_r(double, int *signgamp);
float __lgammaf(float);
float __lgammaf_r(float, int *signgamp);
long double __lgammal(long double);
long double __lgammal_r(long double, int *signgamp);
int __libc_current_sigrtmax(void);
int __libc_current_sigrtmin(void);
__int64 __llrint(double x);
__int64 __llrintf(float x);
__int64 __llrintl(long double x);
__int64 __llround(double x);
__int64 __llroundf(float x);
__int64 __llroundl(long double x);
int __loc_aton(const char *ascii, u_char *binary);
const char *__loc_ntoa(const u_char *binary, char *ascii);
double __log(double x);
double __log10(double x);
float __log10f(float x);
long double __log10l(long double x);
double __log1p(double x);
float __log1pf(float x);
long double __log1pl(long double x);
double __log2(double x);
float __log2f(float x);
long double __log2l(long double x);
double __logb(double x);
float __logbf(float x);
long double __logbl(long double x);
float __logf(float x);
long double __logl(long double x);
int __lrint(double x);
int __lrintf(float x);
int __lrintl(long double x);
int __lround(double x);
int __lroundf(float x);
int __lroundl(long double x);
int __lxstat(int ver, const char *filename, struct stat *stat_buf);
void __malloc_check_init(void);
void *(*volatile __malloc_hook)(size_t size, const void *);
void (*volatile __malloc_initialize_hook)(void);
size_t __mbrlen(const char *s, size_t n, mbstate_t *ps);
void *(*volatile __memalign_hook)(size_t alignment, size_t size, const void *);
double __modf(double x, double *iptr);
float __modff(float x, float *iptr);
long double __modfl(long double x, long double *iptr);
void __monstartup(u_long lowpc, u_long highpc);
void *(*__morecore)(ptrdiff_t size);
double __nan(const char *tagb);
float __nanf(const char *tagb);
long double __nanl(const char *tagb);
double __nearbyint(double x);
float __nearbyintf(float x);
long double __nearbyintl(long double x);
double __nextafter(double x, double y);
float __nextafterf(float x, float y);
long double __nextafterl(long double x, long double y);
double __nexttoward(double x, long double y);
float __nexttowardf(float x, long double y);
long double __nexttowardl(long double x, long double y);
int __nss_configure_lookup(const char *dbname, const char *string);
int __option_is_end(const struct argp_option *opt);
int __option_is_short(const struct argp_option *opt);
int __overflow(_IO_FILE *, int);
const u_char *__p_cdname(const u_char *, const u_char *, FILE *);
const u_char *__p_cdnname(const u_char *, const u_char *, int, FILE *);
const char *__p_class(int);
const u_char *__p_fqname(const u_char *, const u_char *, FILE *);
const u_char *__p_fqnname(const u_char *cp, const u_char *msg, int, char *, int);
const char *__p_option(u_long option);
void __p_query(const u_char *);
const char *__p_rcode(int);
char *__p_secstodate(u_long);
const char *__p_section(int section, int opcode);
const char *__p_time(u_int32_t);
const char *__p_type(int);
double __pow(double x, double y);
float __powf(float x, float y);
long double __powl(long double x, long double y);
void __pthread_register_cancel(__pthread_unwind_buf_t *buf);
void __pthread_unregister_cancel(__pthread_unwind_buf_t *buf);
void __pthread_unwind_next(__pthread_unwind_buf_t *buf);
void __putlong(u_int32_t, u_char *);
void __putshort(u_int16_t, u_char *);
void *(*volatile __realloc_hook)(void *ptr, size_t size, const void *);
double __remainder(double x, double y);
float __remainderf(float x, float y);
long double __remainderl(long double x, long double y);
double __remquo(double x, double y, int *quo);
float __remquof(float x, float y, int *quo);
long double __remquol(long double x, long double y, int *quo);
void __res_close(void);
int __res_dnok(const char *);
int __res_hnok(const char *);
const char *__res_hostalias(const res_state, const char *, char *, size_t);
int __res_init(void);
int __res_isourserver(const struct sockaddr_in *);
int __res_mailok(const char *);
int __res_mkquery(int, const char *, int, int, const u_char *, int, const u_char *, u_char *, int);
int __res_nameinquery(const char *, int, int, const u_char *, const u_char *);
void __res_nclose(res_state);
int __res_ninit(res_state);
int __res_nisourserver(const res_state, const struct sockaddr_in *);
int __res_nmkquery(res_state, int, const char *, int, int, const u_char *, int, const u_char *, u_char *, int);
void __res_npquery(const res_state, const u_char *, int, FILE *);
int __res_nquery(res_state, const char *, int, int, u_char *, int);
int __res_nquerydomain(res_state, const char *, const char *, int, int, u_char *, int);
int __res_nsearch(res_state, const char *, int, int, u_char *, int);
int __res_nsend(res_state, const u_char *, int, u_char *, int);
int __res_ownok(const char *);
int __res_queriesmatch(const u_char *, const u_char *, const u_char *, const u_char *);
int __res_query(const char *, int, int, u_char *, int);
int __res_querydomain(const char *, const char *, int, int, u_char *, int);
u_int __res_randomid(void);
int __res_search(const char *, int, int, u_char *, int);
int __res_send(const u_char *, int, u_char *, int);
struct __res_state *__res_state(void);
double __rint(double x);
float __rintf(float x);
long double __rintl(long double x);
double __round(double x);
float __roundf(float x);
long double __roundl(long double x);
struct rpc_createerr *__rpc_thread_createerr(void);
fd_set *__rpc_thread_svc_fdset(void);
int *__rpc_thread_svc_max_pollfd(void);
struct pollfd **__rpc_thread_svc_pollfd(void);
double __scalb(double x, double n);
float __scalbf(float x, float n);
long double __scalbl(long double x, long double n);
double __scalbln(double x, int n);
float __scalblnf(float x, int n);
long double __scalblnl(long double x, int n);
double __scalbn(double x, int n);
float __scalbnf(float x, int n);
long double __scalbnl(long double x, int n);
cpu_set_t *__sched_cpualloc(size_t count);
int __sched_cpucount(size_t setsize, const cpu_set_t *setp);
void __sched_cpufree(cpu_set_t *set);
int __sigaddset(__sigset_t *, int);
int __sigdelset(__sigset_t *, int);
int __sigismember(const __sigset_t *, int);
int __signbit(double value);
int __signbitf(float value);
int __signbitl(long double value);
double __significand(double x);
float __significandf(float x);
long double __significandl(long double x);
int __sigsetjmp(struct __jmp_buf_tag *env, int savemask);
double __sin(double x);
float __sinf(float x);
double __sinh(double x);
float __sinhf(float x);
long double __sinhl(long double x);
long double __sinl(long double x);
double __sqrt(double x);
float __sqrtf(float x);
long double __sqrtl(long double x);
char *__stpcpy(char *dest, const char *src);
char *__stpncpy(char *dest, const char *src, size_t n);
char *__strtok_r(char *s, const char *delim, char **save_ptr);
static __u16 __swab16p(const __u16 *p);
static void __swab16s(__u16 *p);
static __u32 __swab32p(const __u32 *p);
static void __swab32s(__u32 *p);
static __u64 __swab64p(const __u64 *p);
static void __swab64s(__u64 *p);
static __u32 __swahb32p(const __u32 *p);
static void __swahb32s(__u32 *p);
static __u32 __swahw32p(const __u32 *p);
static void __swahw32s(__u32 *p);
const char *__sym_ntop(const struct res_sym *, int, int *);
const char *__sym_ntos(const struct res_sym *, int, int *);
int __sym_ston(const struct res_sym *, const char *, int *);
__sighandler_t __sysv_signal(int sig, __sighandler_t handler);
double __tan(double x);
float __tanf(float x);
double __tanh(double x);
float __tanhf(float x);
long double __tanhl(long double x);
long double __tanl(long double x);
double __tgamma(double);
float __tgammaf(float);
long double __tgammal(long double);
int __timezone;
int __tolower_l(int c, __locale_t l);
int __toupper_l(int c, __locale_t l);
double __trunc(double x);
float __truncf(float x);
long double __truncl(long double x);
char *__tzname[2];
int __uflow(_IO_FILE *);
int __underflow(_IO_FILE *);
int __xmknod(int ver, const char *path, __mode_t mode, __dev_t *dev);
int __xmknodat(int ver, int fd, const char *path, __mode_t mode, __dev_t *dev);
char *__xpg_basename(char *path);
int __xpg_strerror_r(int errnum, char *buf, size_t buflen);
int __xstat(int ver, const char *filename, struct stat *stat_buf);
double __y0(double);
float __y0f(float);
long double __y0l(long double);
double __y1(double);
float __y1f(float);
long double __y1l(long double);
double __yn(int, double);
float __ynf(int, float);
long double __ynl(int, long double);
void *_argp_input(const struct argp *argp, const struct argp_state *state);
enum auth_stat _authenticate(struct svc_req *rqst, struct rpc_msg *msg);
MACRO_defined __clock_t_defined;
MACRO_defined __clockid_t_defined;
__codecvt_result __codecvt_error;
__codecvt_result __codecvt_noconv;
__codecvt_result _codecvt_ok;
__codecvt_result __codecvt_partial;
MACRO___defined __defined_schedparam;
MACRO___dontcare __dontcare__;
MACRO___error __error_t_defined;
void _exit(int status);
void _flushlbf(void);
MACRO___have __have_pthread_attr_t;
MACRO___have_sigval __have_sigevent_t;
MACRO___have_siginfo __have_siginfo_t;
MACRO___have_sigval __have_sigval_t;
MACRO___iswxxx __iswxxx_defined;
MACRO_t_defined __ldiv_t_defined;
MACRO_t_defined __lldiv_t_defined;
void _longjmp(struct __jmp_buf_tag env[1], int val);
MACRO___mbstate __mbstate_t_defined;
void _mcleanup(void);
const TERMTYPE *_nc_fallback(const char *);
char *_nc_first_name(const char *const);
int _nc_get_tty_mode(struct termios *buf);
int _nc_name_match(const char *const, const char *const, const char *const);
int _nc_read_entry(const char *const, char *const, TERMTYPE *const);
int _nc_read_file_entry(const char *const, TERMTYPE *);
int _nc_read_termtype(TERMTYPE *, char *, int);
int _nc_set_tty_mode(struct termios *buf);
const struct _ns_flagdata _ns_flagdata[];
struct opaque_auth _null_auth;
int _obstack_begin(struct obstack *, int, int, void *(*)(int), void (*)(void *));
int _obstack_begin_1(struct obstack *, int, int, void *(*)(void *, int), void (*)(void *, void *), void *);
int _obstack_memory_used(struct obstack *);
void _obstack_newchunk(struct obstack *, int);
int _option_is_end(const struct argp_option *opt);
int _option_is_short(const struct argp_option *opt);
struct r_debug _r_debug;
int _rpc_dtablesize(void);
void _seterr_reply(struct rpc_msg *msg, struct rpc_err *error);
int _setjmp(struct __jmp_buf_tag env[1]);
const char *const _sys_siglist[65];
MACRO_defined __time_t_defined;
MACRO_defined __timer_t_defined;
MACRO___timespec __timespec_defined;
int _tolower(int);
int _toupper(int);
int a64l(const char *s);
void abort(void);
int abs(int x);
int accept(int fd, struct sockaddr *addr, socklen_t *addr_len);
int access(const char *name, int type);
int acct(const char *name);
double acos(double x);
float acosf(float x);
double acosh(double x);
float acoshf(float x);
long double acoshl(long double x);
long double acosl(long double x);
errcode_t add_error_table(const struct error_table *et);
void add_to_error_table(struct et_list *new_table);
int addmntent(FILE *stream, const struct mntent *mnt);
int addseverity(int severity, const char *string);
int adjtime(const struct timeval *delta, struct timeval *olddelta);
int adjtimex(struct timex *ntx);
uLong adler32(uLong adler, const Bytef *buf, uInt len);
uLong adler32_combine(uLong, uLong, off_t);
int advance(const char *string, const char *expbuf);
int aio_cancel(int fildes, struct aiocb *aiocbp);
int aio_error(const struct aiocb *aiocbp);
int aio_fsync(int operation, struct aiocb *aiocbp);
int aio_read(struct aiocb *aiocbp);
__ssize_t aio_return(struct aiocb *aiocbp);
int aio_suspend(const struct aiocb *const list[], int nent, const struct timespec *timeout);
int aio_write(struct aiocb *aiocbp);
unsigned int alarm(unsigned int seconds);
void *alloca(size_t size);
int alphasort(const struct dirent **e1, const struct dirent **e2);
error_t argp_err_exit_status;
void argp_error(const struct argp_state *state, const char *fmt, ...);
void argp_failure(const struct argp_state *state, int status, int errnum, const char *fmt, ...);
void argp_help(const struct argp *argp, FILE *stream, unsigned int flags, char *name);
error_t argp_parse(const struct argp *argp, int argc, char **argv, unsigned int flags, int *arg_index, void *input);
const char *argp_program_bug_address;
const char *argp_program_version;
void (*argp_program_version_hook)(FILE *stream, struct argp_state *state);
void argp_state_help(const struct argp_state *state, FILE *stream, unsigned int flags);
void argp_usage(const struct argp_state *state);
error_t argz_add(char **argz, size_t *argz_len, const char *str);
error_t argz_add_sep(char **argz, size_t *argz_len, const char *string, int delim);
error_t argz_append(char **argz, size_t *argz_len, const char *buf, size_t buf_len);
size_t argz_count(const char *argz, size_t len);
error_t argz_create(char *const argv[], char **argz, size_t *len);
error_t argz_create_sep(const char *string, int sep, char **argz, size_t *len);
void argz_delete(char **argz, size_t *argz_len, char *entry);
void argz_extract(const char *argz, size_t len, char **argv);
error_t argz_insert(char **argz, size_t *argz_len, char *before, const char *entry);
char *argz_next(const char *argz, size_t argz_len, const char *entry);
error_t argz_replace(char **argz, size_t *argz_len, const char *str, const char *with, unsigned int *replace_count);
void argz_stringify(char *argz, size_t len, int sep);
char *asctime(const struct tm *tp);
char *asctime_r(const struct tm *tp, char *buf);
double asin(double x);
float asinf(float x);
double asinh(double x);
float asinhf(float x);
long double asinhl(long double x);
long double asinl(long double x);
double atan(double x);
double atan2(double y, double x);
float atan2f(float y, float x);
long double atan2l(long double y, long double x);
float atanf(float x);
double atanh(double x);
float atanhf(float x);
long double atanhl(long double x);
long double atanl(long double x);
int atexit(void (*func)(void));
double atof(const char *nptr);
int atoi(const char *nptr);
int atol(const char *nptr);
__int64 atoll(const char *nptr);
AUTH *authdes_create(const char *servername, u_int window, struct sockaddr *syncaddr, des_block *ckey);
int authdes_getucred(const struct authdes_cred *adc, uid_t *uid, gid_t *gid, __int16 *grouplen, gid_t *groups);
AUTH *authdes_pk_create(const char *, netobj *, u_int, struct sockaddr *, des_block *);
AUTH *authnone_create(void);
char *authtype_names[];
AUTH *authunix_create(char *machname, __uid_t uid, __gid_t gid, int len, __gid_t *aup_gids);
AUTH *authunix_create_default(void);
int backtrace(void **array, int size);
char **backtrace_symbols(void *const *array, int size);
void backtrace_symbols_fd(void *const *array, int size, int fd);
int bcmp(const void *s1, const void *s2, size_t n);
void bcopy(const void *src, void *dest, size_t n);
int bdflush(int func, int data);
int bind(int fd, const struct sockaddr *addr, socklen_t len);
char *bind_textdomain_codeset(const char *domainname, const char *codeset);
int bindresvport(int sockfd, struct sockaddr_in *sock_in);
int bindresvport6(int sockfd, struct sockaddr_in6 *sock_in);
char *bindtextdomain(const char *domainname, const char *dirname);
char *const boolcodes[];
char *const boolfnames[];
char *const boolnames[];
int brk(void *addr);
void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, __compar_fn_t compar);
wint_t btowc(int c);
void bzero(void *s, size_t n);
void *calloc(size_t nmemb, size_t size);
int callrpc(const char *host, const u_long prognum, const u_long versnum, const u_long procnum, const xdrproc_t inproc, const char *in, const xdrproc_t outproc, char *out);
int catclose(nl_catd catalog);
char *catgets(nl_catd catalog, int set, int number, const char *string);
nl_catd catopen(const char *cat_name, int flag);
int cbc_crypt(char *key, char *buf, unsigned int len, unsigned int mode, char *ivec);
double cbrt(double x);
float cbrtf(float x);
long double cbrtl(long double x);
double ceil(double x);
float ceilf(float x);
long double ceill(long double x);
speed_t cfgetispeed(const struct termios *termios_p);
speed_t cfgetospeed(const struct termios *termios_p);
void cfmakeraw(struct termios *termios_p);
void cfree(void *ptr);
int cfsetispeed(struct termios *termios_p, speed_t speed);
int cfsetospeed(struct termios *termios_p, speed_t speed);
int cfsetspeed(struct termios *termios_p, speed_t speed);
int chdir(const char *path);
int chmod(const char *file, __mode_t mode);
int chown(const char *file, __uid_t owner, __gid_t group);
int chroot(const char *path);
int clearenv(void);
void clearerr(FILE *stream);
void clearerr_unlocked(FILE *stream);
enum clnt_stat clnt_broadcast(const u_long prog, const u_long vers, const u_long proc, xdrproc_t xargs, caddr_t argsp, xdrproc_t xresults, caddr_t resultsp, resultproc_t eachresult);
CLIENT *clnt_create(const char *host, const u_long prog, const u_long vers, const char *prot);
void clnt_pcreateerror(const char *msg);
void clnt_perrno(enum clnt_stat num);
void clnt_perror(CLIENT *clnt, const char *msg);
char *clnt_spcreateerror(const char *msg);
char *clnt_sperrno(enum clnt_stat num);
char *clnt_sperror(CLIENT *clnt, const char *msg);
CLIENT *clntraw_create(const u_long prog, const u_long vers);
CLIENT *clnttcp_create(struct sockaddr_in *raddr, u_long prog, u_long version, int *sockp, u_int sendsz, u_int recvsz);
CLIENT *clntudp_bufcreate(struct sockaddr_in *raddr, u_long program, u_long version, struct timeval wait_resend, int *sockp, u_int sendsz, u_int recvsz);
CLIENT *clntudp_create(struct sockaddr_in *raddr, u_long program, u_long version, struct timeval wait_resend, int *sockp);
CLIENT *clntunix_create(struct sockaddr_un *raddr, u_long program, u_long version, int *sockp, u_int sendsz, u_int recvsz);
clock_t clock(void);
int clock_getcpuclockid(pid_t pid, clockid_t *clock_id);
int clock_getres(clockid_t clock_id, struct timespec *res);
int clock_gettime(clockid_t clock_id, struct timespec *tp);
int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *req, struct timespec *rem);
int clock_settime(clockid_t clock_id, const struct timespec *tp);
int close(int fd);
int closedir(DIR *dirp);
void closelog(void);
void com_err(const char *, int, const char *, ...);
void (*com_err_hook)(const char *, int, const char *, va_list);
void com_err_va(const char *whoami, errcode_t code, const char *fmt, va_list args);
const char *com_right(struct et_list *list, int code);
const char *com_right_r(struct et_list *list, int code, char *str, size_t len);
char *compile(char *instring, char *expbuf, const char *endbuf, int eof);
int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);
int compress2(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level);
uLong compressBound(uLong sourceLen);
size_t confstr(int name, char *buf, size_t len);
int connect(int fd, const struct sockaddr *addr, socklen_t len);
double copysign(double x, double y);
float copysignf(float x, float y);
long double copysignl(long double x, long double y);
double cos(double x);
float cosf(float x);
double cosh(double x);
float coshf(float x);
long double coshl(long double x);
long double cosl(long double x);
uLong crc32(uLong crc, const Bytef *buf, uInt len);
uLong crc32_combine(uLong, uLong, off_t);
int creat(const char *file, mode_t mode);
char *crypt(const char *key, const char *salt);
char *ctermid(char *s);
char *ctime(const time_t *timer);
char *ctime_r(const time_t *timer, char *buf);
TERMINAL *cur_term;
int daemon(int nochdir, int noclose);
int daylight;
void dbm_clearerr(DBM *dbf);
void dbm_close(DBM *dbf);
int dbm_delete(DBM *dbf, datum key);
int dbm_dirfno(DBM *dbf);
int dbm_error(DBM *dbf);
datum dbm_fetch(DBM *dbf, datum key);
datum dbm_firstkey(DBM *dbf);
datum dbm_nextkey(DBM *dbf);
DBM *dbm_open(char *file, int flags, int mode);
int dbm_pagfno(DBM *dbf);
int dbm_rdonly(DBM *dbf);
int dbm_store(DBM *dbf, datum key, datum content, int flags);
int dbmclose(void);
int dbminit(char *file);
char *dcgettext(const char *domainname, const char *msgid, int category);
char *dcngettext(const char *domainname, const char *msgid1, const char *msgid2, unsigned int n, int category);
int deflate(z_streamp strm, int flush);
uLong deflateBound(z_streamp strm, uLong sourceLen);
int deflateCopy(z_streamp dest, z_streamp source);
int deflateEnd(z_streamp strm);
int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size);
int deflateInit_(z_streamp strm, int level, const char *version, int stream_size);
int deflateParams(z_streamp strm, int level, int strategy);
int deflatePending(z_streamp strm, unsigned int *pending, int *bits);
int deflatePrime(z_streamp strm, int bits, int value);
int deflateReset(z_streamp strm);
int deflateResetKeep(z_streamp);
int deflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength);
int deflateSetHeader(z_streamp strm, gz_headerp head);
int deflateTune(z_streamp strm, int good_length, int max_lazy, int nice_length, int max_chain);
int del_curterm(TERMINAL *);
int delete(datum key);
void des_setparity(char *key);
char *dgettext(const char *domainname, const char *msgid);
double difftime(time_t time1, time_t time0);
int dirfd(DIR *dirp);
char *dirname(char *path);
div_t div(int numer, int denom);
int dlclose(void *handle);
char *dlerror(void);
void *dlopen(const char *file, int mode);
void *dlsym(void *handle, const char *name);
char *dngettext(const char *domainname, const char *msgid1, const char *msgid2, unsigned int n);
int dprintf(int fd, const char *fmt, ...);
double drand48(void);
int drand48_r(struct drand48_data *buffer, double *result);
double drem(double x, double y);
float dremf(float x, float y);
long double dreml(long double x, long double y);
int dup(int fd);
int dup2(int fd, int fd2);
__locale_t duplocale(__locale_t dataset);
int dysize(int year);
int ecb_crypt(char *key, char *buf, unsigned int len, unsigned int mode);
char *ecvt(double value, int ndigit, int *decpt, int *sign);
int ecvt_r(double value, int ndigit, int *decpt, int *sign, char *buf, size_t len);
void encrypt(char *glibc_block, int edflag);
char *encrypt_names[];
char *enctype_names[];
void endaliasent(void);
void endfsent(void);
void endgrent(void);
void endhostent(void);
int endmntent(FILE *stream);
void endnetent(void);
void endnetgrent(void);
void endprotoent(void);
void endpwent(void);
void endrpcent(void);
void endservent(void);
void endspent(void);
int endttyent(void);
void endusershell(void);
void endutent(void);
void endutxent(void);
error_t envz_add(char **envz, size_t *envz_len, const char *name, const char *value);
char *envz_entry(const char *envz, size_t envz_len, const char *name);
char *envz_get(const char *envz, size_t envz_len, const char *name);
error_t envz_merge(char **envz, size_t *envz_len, const char *envz2, size_t envz2_len, int override);
void envz_remove(char **envz, size_t *envz_len, const char *name);
void envz_strip(char **envz, size_t *envz_len);
int epoll_create(int size);
int epoll_create1(int flags);
int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);
int epoll_pwait(int epfd, struct epoll_event *events, int maxevents, int timeout, const __sigset_t *ss);
int epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout);
double erand48(unsigned __int16 xsubi[3]);
int erand48_r(unsigned __int16 xsubi[3], struct drand48_data *buffer, double *result);
double erf(double);
double erfc(double);
float erfcf(float);
long double erfcl(long double);
float erff(float);
long double erfl(long double);
void err(int status, const char *format, ...);
void error(int status, int errnum, const char *format, ...);
void error_at_line(int status, int errnum, const char *fname, unsigned int lineno, const char *format, ...);
const char *error_message(int);
unsigned int error_message_count;
int error_one_per_line;
void (*error_print_progname)(void);
void errx(int status, const char *format, ...);
int et_list_lock(void);
int et_list_unlock(void);
const struct error_table et_ss_error_table;
struct ether_addr *ether_aton(const char *asc);
struct ether_addr *ether_aton_r(const char *asc, struct ether_addr *addr);
int ether_hostton(const char *hostname, struct ether_addr *addr);
int ether_line(const char *line, struct ether_addr *addr, char *hostname);
char *ether_ntoa(const struct ether_addr *addr);
char *ether_ntoa_r(const struct ether_addr *addr, char *buf);
int ether_ntohost(char *hostname, const struct ether_addr *addr);
int execl(const char *path, const char *arg, ...);
int execle(const char *path, const char *arg, ...);
int execlp(const char *file, const char *arg, ...);
int execv(const char *path, char *const argv[]);
int execve(const char *path, char *const argv[], char *const envp[]);
int execvp(const char *file, char *const argv[]);
void exit(int status);
double exp(double x);
double exp2(double x);
float exp2f(float x);
long double exp2l(long double x);
float expf(float x);
long double expl(long double x);
double expm1(double x);
float expm1f(float x);
long double expm1l(long double x);
double fabs(double x);
float fabsf(float x);
long double fabsl(long double x);
int faccessat(int fd, const char *file, int type, int flag);
int fattach(int fildes, const char *path);
int fchdir(int fd);
int fchmod(int fd, __mode_t mode);
int fchmodat(int fd, const char *file, __mode_t mode, int flag);
int fchown(int fd, __uid_t owner, __gid_t group);
int fchownat(int fd, const char *file, __uid_t owner, __gid_t group, int flag);
int fclose(FILE *stream);
int fcntl(int fd, int cmd, ...);
char *fcvt(double value, int ndigit, int *decpt, int *sign);
int fcvt_r(double value, int ndigit, int *decpt, int *sign, char *buf, size_t len);
int fdatasync(int fildes);
int fdetach(const char *path);
double fdim(double x, double y);
float fdimf(float x, float y);
long double fdiml(long double x, long double y);
FILE *fdopen(int fd, const char *modes);
DIR *fdopendir(int fd);
int feclearexcept(int excepts);
int fegetenv(fenv_t *envp);
int fegetexceptflag(fexcept_t *flagp, int excepts);
int fegetround(void);
int feholdexcept(fenv_t *envp);
int feof(FILE *stream);
int feof_unlocked(FILE *stream);
int feraiseexcept(int excepts);
int ferror(FILE *stream);
int ferror_unlocked(FILE *stream);
int fesetenv(const fenv_t *envp);
int fesetexceptflag(const fexcept_t *flagp, int excepts);
int fesetround(int rounding_direction);
datum fetch(datum key);
int fetestexcept(int excepts);
int feupdateenv(const fenv_t *envp);
int fexecve(int fd, char *const argv[], char *const envp[]);
int fflush(FILE *stream);
int fflush_unlocked(FILE *stream);
int ffs(int i);
int fgetc(FILE *stream);
int fgetc_unlocked(FILE *stream);
struct group *fgetgrent(FILE *stream);
int fgetgrent_r(FILE *stream, struct group *resultbuf, char *buffer, size_t buflen, struct group **result);
int fgetpos(FILE *stream, fpos_t *pos);
struct passwd *fgetpwent(FILE *stream);
int fgetpwent_r(FILE *stream, struct passwd *resultbuf, char *buffer, size_t buflen, struct passwd **result);
char *fgets(char *s, int n, FILE *stream);
struct spwd *fgetspent(FILE *stream);
int fgetspent_r(FILE *stream, struct spwd *result_buf, char *buffer, size_t buflen, struct spwd **result);
wint_t fgetwc(__FILE *stream);
wchar_t *fgetws(wchar_t *ws, int n, __FILE *stream);
ssize_t fgetxattr(int fd, const char *name, void *value, size_t size);
int fileno(FILE *stream);
int fileno_unlocked(FILE *stream);
int finite(double value);
int finitef(float value);
int finitel(long double value);
datum firstkey(void);
ssize_t flistxattr(int fd, char *list, size_t size);
int flock(int fd, int operation);
void flockfile(FILE *stream);
double floor(double x);
float floorf(float x);
long double floorl(long double x);
double fma(double x, double y, double z);
float fmaf(float x, float y, float z);
long double fmal(long double x, long double y, long double z);
double fmax(double x, double y);
float fmaxf(float x, float y);
long double fmaxl(long double x, long double y);
FILE *fmemopen(void *s, size_t len, const char *modes);
double fmin(double x, double y);
float fminf(float x, float y);
long double fminl(long double x, long double y);
double fmod(double x, double y);
float fmodf(float x, float y);
long double fmodl(long double x, long double y);
int fmtmsg(int classification, const char *label, int severity, const char *text, const char *action, const char *tag);
int fnmatch(const char *pattern, const char *name, int flags);
FILE *fopen(const char *filename, const char *modes);
__pid_t fork(void);
int forkpty(int *amaster, char *name, const struct termios *termp, const struct winsize *winp);
int fpathconf(int fd, int name);
int fprintf(FILE *stream, const char *format, ...);
int fputc(int c, FILE *stream);
int fputc_unlocked(int c, FILE *stream);
int fputs(const char *s, FILE *stream);
wint_t fputwc(wchar_t wc, __FILE *stream);
int fputws(const wchar_t *ws, __FILE *stream);
size_t fread(void *ptr, size_t size, size_t n, FILE *stream);
size_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream);
void free(void *ptr);
void free_error_table(struct et_list *et);
void freeaddrinfo(struct addrinfo *ai);
void freeifaddrs(struct ifaddrs *ifa);
void freelocale(__locale_t dataset);
int fremovexattr(int fd, const char *name);
FILE *freopen(const char *filename, const char *modes, FILE *stream);
double frexp(double x, int *exponent);
float frexpf(float x, int *exponent);
long double frexpl(long double x, int *exponent);
int fscanf(FILE *stream, const char *format, ...);
int fseek(FILE *stream, int off, int whence);
int fseeko(FILE *stream, __off_t off, int whence);
int fsetpos(FILE *stream, const fpos_t *pos);
int fsetxattr(int fd, const char *name, const void *value, size_t size, int flags);
int fstat(int fd, struct stat *buf);
int fstatat(int fd, const char *file, struct stat *buf, int flag);
int fstatfs(int fildes, struct statfs *buf);
int fstatvfs(int fildes, struct statvfs *buf);
int fsync(int fd);
int ftell(FILE *stream);
__off_t ftello(FILE *stream);
int ftime(struct timeb *timebuf);
key_t ftok(const char *pathname, int proj_id);
int ftruncate(int fd, __off_t length);
int ftrylockfile(FILE *stream);
FTSENT *fts_children(FTS *, int);
int fts_close(FTS *);
FTS *fts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **));
FTSENT *fts_read(FTS *);
int fts_set(FTS *, FTSENT *, int);
int ftw(const char *dir, __ftw_func_t func, int descriptors);
void funlockfile(FILE *stream);
int futimens(int fd, const struct timespec times[2]);
int futimes(int fd, const struct timeval tvp[2]);
int fwide(__FILE *fp, int mode);
int fwprintf(__FILE *stream, const wchar_t *format, ...);
size_t fwrite(const void *ptr, size_t size, size_t n, FILE *s);
size_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream);
int fwscanf(__FILE *stream, const wchar_t *format, ...);
const char *gai_strerror(int ecode);
double gamma(double);
float gammaf(float);
long double gammal(long double);
char *gcvt(double value, int ndigit, char *buf);
void gdbm_close(GDBM_FILE);
int gdbm_count(GDBM_FILE dbf, gdbm_count_t *pcount);
int gdbm_delete(GDBM_FILE, datum);
int gdbm_dump(GDBM_FILE, const char *, int fmt, int open_flags, int mode);
int gdbm_dump_to_file(GDBM_FILE, FILE *, int fmt);
const char *const gdbm_errlist[];
gdbm_error gdbm_errno;
int gdbm_exists(GDBM_FILE, datum);
int gdbm_export(GDBM_FILE, const char *, int, int);
int gdbm_export_to_file(GDBM_FILE dbf, FILE *fp);
int gdbm_fdesc(GDBM_FILE);
datum gdbm_fetch(GDBM_FILE, datum);
datum gdbm_firstkey(GDBM_FILE);
int gdbm_import(GDBM_FILE, const char *, int);
int gdbm_import_from_file(GDBM_FILE dbf, FILE *fp, int flag);
int gdbm_load(GDBM_FILE *, const char *, int replace, int meta_flags, unsigned int *line);
int gdbm_load_from_file(GDBM_FILE *, FILE *, int replace, int meta_flags, unsigned int *line);
datum gdbm_nextkey(GDBM_FILE, datum);
GDBM_FILE gdbm_open(const char *, int, int, int, void (*)(const char *));
int gdbm_reorganize(GDBM_FILE);
int gdbm_setopt(GDBM_FILE, int, void *, int);
int gdbm_store(GDBM_FILE, datum, datum, int);
const char *gdbm_strerror(gdbm_error);
void gdbm_sync(GDBM_FILE);
const char *gdbm_version;
int gdbm_version_cmp(const int a[], const int b[]);
const int gdbm_version_number[3];
int get_avphys_pages(void);
const z_crc_t *get_crc_table(void);
void get_myaddress(struct sockaddr_in *);
int get_nprocs(void);
int get_nprocs_conf(void);
int get_phys_pages(void);
int getaddrinfo(const char *name, const char *service, const struct addrinfo *req, struct addrinfo **pai);
struct aliasent *getaliasbyname(const char *name);
int getaliasbyname_r(const char *name, struct aliasent *result_buf, char *buffer, size_t buflen, struct aliasent **result);
struct aliasent *getaliasent(void);
int getaliasent_r(struct aliasent *result_buf, char *buffer, size_t buflen, struct aliasent **result);
int getc(FILE *stream);
int getc_unlocked(FILE *stream);
int getchar(void);
int getchar_unlocked(void);
int getcontext(ucontext_t *ucp);
char *getcwd(char *buf, size_t size);
__ssize_t getdelim(char **lineptr, size_t *n, int delimiter, FILE *stream);
__ssize_t getdirentries(int fd, char *buf, size_t nbytes, __off_t *basep);
int getdomainname(char *name, size_t len);
int getdtablesize(void);
__gid_t getegid(void);
char *getenv(const char *name);
__uid_t geteuid(void);
struct fstab *getfsent(void);
struct fstab *getfsfile(const char *name);
struct fstab *getfsspec(const char *name);
__gid_t getgid(void);
struct group *getgrent(void);
struct group *getgrgid(__gid_t gid);
int getgrgid_r(__gid_t gid, struct group *resultbuf, char *buffer, size_t buflen, struct group **result);
struct group *getgrnam(const char *name);
int getgrnam_r(const char *name, struct group *resultbuf, char *buffer, size_t buflen, struct group **result);
int getgrouplist(const char *user, __gid_t group, __gid_t *groups, int *ngroups);
int getgroups(int size, __gid_t list[]);
struct hostent *gethostbyaddr(const void *addr, __socklen_t len, int type);
int gethostbyaddr_r(const void *addr, __socklen_t len, int type, struct hostent *result_buf, char *buf, size_t buflen, struct hostent **result, int *h_errnop);
struct hostent *gethostbyname(const char *name);
struct hostent *gethostbyname2(const char *name, int af);
int gethostbyname2_r(const char *name, int af, struct hostent *result_buf, char *buf, size_t buflen, struct hostent **result, int *h_errnop);
int gethostbyname_r(const char *name, struct hostent *result_buf, char *buf, size_t buflen, struct hostent **result, int *h_errnop);
struct hostent *gethostent(void);
int gethostent_r(struct hostent *result_buf, char *buf, size_t buflen, struct hostent **result, int *h_errnop);
int gethostid(void);
int gethostname(char *name, size_t len);
int getifaddrs(struct ifaddrs **ifap);
int getitimer(__itimer_which_t which, struct itimerval *value);
__ssize_t getline(char **lineptr, size_t *n, FILE *stream);
int getloadavg(double loadavg[], int nelem);
char *getlogin(void);
int getlogin_r(char *name, size_t name_len);
struct mntent *getmntent(FILE *stream);
struct mntent *getmntent_r(FILE *stream, struct mntent *result, char *buffer, int bufsize);
int getmsg(int fildes, struct strbuf *ctlptr, struct strbuf *dataptr, int *flagsp);
int getnameinfo(const struct sockaddr *sa, socklen_t salen, char *host, socklen_t hostlen, char *serv, socklen_t servlen, int flags);
struct netent *getnetbyaddr(uint32_t net, int type);
int getnetbyaddr_r(uint32_t net, int type, struct netent *result_buf, char *buf, size_t buflen, struct netent **result, int *h_errnop);
struct netent *getnetbyname(const char *name);
int getnetbyname_r(const char *name, struct netent *result_buf, char *buf, size_t buflen, struct netent **result, int *h_errnop);
struct netent *getnetent(void);
int getnetent_r(struct netent *result_buf, char *buf, size_t buflen, struct netent **result, int *h_errnop);
int getnetgrent(char **hostp, char **userp, char **domainp);
int getnetgrent_r(char **hostp, char **userp, char **domainp, char *buffer, size_t buflen);
int getnetname(char *);
int getopt(int argc, char *const *argv, const char *shortopts);
int getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind);
int getopt_long_only(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind);
int getpagesize(void);
char *getpass(const char *prompt);
int getpeername(int fd, struct sockaddr *addr, socklen_t *len);
__pid_t getpgid(__pid_t pid);
__pid_t getpgrp(void);
__pid_t getpid(void);
int getpmsg(int fildes, struct strbuf *ctlptr, struct strbuf *dataptr, int *bandp, int *flagsp);
__pid_t getppid(void);
int getpriority(__priority_which_t which, id_t who);
struct protoent *getprotobyname(const char *name);
int getprotobyname_r(const char *name, struct protoent *result_buf, char *buf, size_t buflen, struct protoent **result);
struct protoent *getprotobynumber(int proto);
int getprotobynumber_r(int proto, struct protoent *result_buf, char *buf, size_t buflen, struct protoent **result);
struct protoent *getprotoent(void);
int getprotoent_r(struct protoent *result_buf, char *buf, size_t buflen, struct protoent **result);
int getpublickey(const char *name, char *key);
struct passwd *getpwent(void);
int getpwent_r(struct passwd *resultbuf, char *buffer, size_t buflen, struct passwd **result);
struct passwd *getpwnam(const char *name);
int getpwnam_r(const char *name, struct passwd *resultbuf, char *buffer, size_t buflen, struct passwd **result);
struct passwd *getpwuid(__uid_t uid);
int getpwuid_r(__uid_t uid, struct passwd *resultbuf, char *buffer, size_t buflen, struct passwd **result);
int getrlimit(__rlimit_resource_t resource, struct rlimit *rlimits);
struct rpcent *getrpcbyname(const char *name);
int getrpcbyname_r(const char *name, struct rpcent *result_buf, char *buffer, size_t buflen, struct rpcent **result);
struct rpcent *getrpcbynumber(int number);
int getrpcbynumber_r(int number, struct rpcent *result_buf, char *buffer, size_t buflen, struct rpcent **result);
struct rpcent *getrpcent(void);
int getrpcent_r(struct rpcent *result_buf, char *buffer, size_t buflen, struct rpcent **result);
int getrpcport(const char *host, u_long prognum, u_long versnum, u_int proto);
int getrusage(__rusage_who_t who, struct rusage *usage);
char *gets(char *s);
int getsecretkey(const char *name, char *key, const char *passwd);
struct servent *getservbyname(const char *name, const char *proto);
int getservbyname_r(const char *name, const char *proto, struct servent *result_buf, char *buf, size_t buflen, struct servent **result);
struct servent *getservbyport(int port, const char *proto);
int getservbyport_r(int port, const char *proto, struct servent *result_buf, char *buf, size_t buflen, struct servent **result);
struct servent *getservent(void);
int getservent_r(struct servent *result_buf, char *buf, size_t buflen, struct servent **result);
__pid_t getsid(__pid_t pid);
int getsockname(int fd, struct sockaddr *addr, socklen_t *len);
int getsockopt(int fd, int level, int optname, void *optval, socklen_t *optlen);
struct spwd *getspent(void);
int getspent_r(struct spwd *result_buf, char *buffer, size_t buflen, struct spwd **result);
struct spwd *getspnam(const char *name);
int getspnam_r(const char *name, struct spwd *result_buf, char *buffer, size_t buflen, struct spwd **result);
int getsubopt(char **optionp, char *const *tokens, char **valuep);
char *gettext(const char *msgid);
int gettimeofday(struct timeval *tv, __timezone_ptr_t tz);
struct ttyent *getttyent(void);
struct ttyent *getttynam(const char *tty);
__uid_t getuid(void);
char *getusershell(void);
struct utmp *getutent(void);
int getutent_r(struct utmp *buffer, struct utmp **result);
struct utmp *getutid(const struct utmp *id);
int getutid_r(const struct utmp *id, struct utmp *buffer, struct utmp **result);
struct utmp *getutline(const struct utmp *line);
int getutline_r(const struct utmp *line, struct utmp *buffer, struct utmp **result);
struct utmpx *getutxent(void);
struct utmpx *getutxid(const struct utmpx *id);
struct utmpx *getutxline(const struct utmpx *line);
int getw(FILE *stream);
wint_t getwc(__FILE *stream);
wint_t getwchar(void);
char *getwd(char *buf);
ssize_t getxattr(const char *path, const char *name, void *value, size_t size);
int glob(const char *pattern, int flags, int (*errfunc)(const char *, int), glob_t *pglob);
void globfree(glob_t *pglob);
struct tm *gmtime(const time_t *timer);
struct tm *gmtime_r(const time_t *timer, struct tm *tp);
unsigned int gnu_dev_major(unsigned __int64 dev);
unsigned __int64 gnu_dev_makedev(unsigned int major, unsigned int minor);
unsigned int gnu_dev_minor(unsigned __int64 dev);
const char *gnu_get_libc_release(void);
const char *gnu_get_libc_version(void);
int gsignal(int sig);
int gtty(int fd, struct sgttyb *params);
int gzbuffer(gzFile file, unsigned int size);
void gzclearerr(gzFile file);
int gzclose(gzFile file);
int gzclose_r(gzFile file);
int gzclose_w(gzFile file);
int gzdirect(gzFile file);
gzFile gzdopen(int fd, const char *mode);
int gzeof(gzFile file);
const char *gzerror(gzFile file, int *errnum);
int gzflush(gzFile file, int flush);
int gzgetc(gzFile file);
int gzgetc_(gzFile file);
char *gzgets(gzFile file, char *buf, int len);
off_t gzoffset(gzFile);
gzFile gzopen(const char *, const char *);
int gzprintf(gzFile file, const char *format, ...);
int gzputc(gzFile file, int c);
int gzputs(gzFile file, const char *s);
int gzread(gzFile file, voidp buf, unsigned int len);
int gzrewind(gzFile file);
off_t gzseek(gzFile, off_t, int);
int gzsetparams(gzFile file, int level, int strategy);
off_t gztell(gzFile);
int gzungetc(int c, gzFile file);
int gzvprintf(gzFile file, const char *format, va_list va);
int gzwrite(gzFile file, voidpc buf, unsigned int len);
char *hasmntopt(const struct mntent *mnt, const char *opt);
int hcreate(size_t nel);
void hdestroy(void);
void herror(const char *str);
int host2netname(char *, const char *, const char *);
ENTRY *hsearch(ENTRY item, ACTION action);
const char *hstrerror(int err_num);
uint32_t htonl(uint32_t hostlong);
uint16_t htons(uint16_t hostshort);
double hypot(double x, double y);
float hypotf(float x, float y);
long double hypotl(long double x, long double y);
size_t iconv(iconv_t cd, char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft);
int iconv_close(iconv_t cd);
iconv_t iconv_open(const char *tocode, const char *fromcode);
int ilogb(double x);
int ilogbf(float x);
int ilogbl(long double x);
intmax_t imaxabs(intmax_t n);
imaxdiv_t imaxdiv(intmax_t numer, intmax_t denom);
const struct in6_addr in6addr_any;
const struct in6_addr in6addr_loopback;
char *index(const char *s, int c);
in_addr_t inet_addr(const char *cp);
int inet_aton(const char *cp, struct in_addr *inp);
in_addr_t inet_lnaof(struct in_addr in);
struct in_addr inet_makeaddr(in_addr_t net, in_addr_t host);
char *inet_net_ntop(int af, const void *cp, int bits, char *buf, size_t len);
int inet_net_pton(int af, const char *cp, void *buf, size_t len);
char *inet_neta(in_addr_t net, char *buf, size_t len);
in_addr_t inet_netof(struct in_addr in);
in_addr_t inet_network(const char *cp);
unsigned int inet_nsap_addr(const char *cp, unsigned __int8 *buf, int len);
char *inet_nsap_ntoa(int len, const unsigned __int8 *cp, char *buf);
char *inet_ntoa(struct in_addr in);
const char *inet_ntop(int af, const void *cp, char *buf, socklen_t len);
int inet_pton(int af, const char *cp, void *buf);
int inflate(z_streamp strm, int flush);
int inflateBack(z_streamp strm, in_func in, void *in_desc, out_func out, void *out_desc);
int inflateBackEnd(z_streamp strm);
int inflateBackInit_(z_streamp strm, int windowBits, unsigned __int8 *window, const char *version, int stream_size);
int inflateCopy(z_streamp dest, z_streamp source);
int inflateEnd(z_streamp strm);
int inflateGetDictionary(z_streamp strm, Bytef *dictionary, uInt *dictLength);
int inflateGetHeader(z_streamp strm, gz_headerp head);
int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size);
int inflateInit_(z_streamp strm, const char *version, int stream_size);
int inflateMark(z_streamp strm);
int inflatePrime(z_streamp strm, int bits, int value);
int inflateReset(z_streamp strm);
int inflateReset2(z_streamp strm, int windowBits);
int inflateResetKeep(z_streamp);
int inflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength);
int inflateSync(z_streamp strm);
int inflateSyncPoint(z_streamp);
int inflateUndermine(z_streamp, int);
int init_error_table(const char *const *msgs, int base, int count);
int initgroups(const char *user, __gid_t group);
void initialize_error_table_r(struct et_list **list, const char **messages, int num_errors, int base);
void initialize_ss_error_table(void);
void initialize_ss_error_table_r(struct et_list **list);
char *initstate(unsigned int seed, char *statebuf, size_t statelen);
int initstate_r(unsigned int seed, char *statebuf, size_t statelen, struct random_data *buf);
int innetgr(const char *netgroup, const char *host, const char *user, const char *domain);
int inotify_add_watch(int fd, const char *name, uint32_t mask);
int inotify_init(void);
int inotify_init1(int flags);
int inotify_rm_watch(int fd, int wd);
void insque(void *elem, void *prev);
int ioctl(int fd, unsigned int request, ...);
int iruserok(uint32_t raddr, int suser, const char *remuser, const char *locuser);
int iruserok_af(const void *raddr, int suser, const char *remuser, const char *locuser, sa_family_t af);
int isalnum(int);
int isalnum_l(int, __locale_t);
int isalpha(int);
int isalpha_l(int, __locale_t);
int isascii(int c);
int isastream(int fildes);
int isatty(int fd);
int isblank(int);
int isblank_l(int, __locale_t);
int iscntrl(int);
int iscntrl_l(int, __locale_t);
int isdigit(int);
int isdigit_l(int, __locale_t);
int isfdtype(int fd, int fdtype);
int isgraph(int);
int isgraph_l(int, __locale_t);
int isinf(double value);
int isinff(float value);
int isinfl(long double value);
int islower(int);
int islower_l(int, __locale_t);
int isnan(double value);
int isnanf(float value);
int isnanl(long double value);
int isprint(int);
int isprint_l(int, __locale_t);
int ispunct(int);
int ispunct_l(int, __locale_t);
int isspace(int);
int isspace_l(int, __locale_t);
int isupper(int);
int isupper_l(int, __locale_t);
int iswalnum(wint_t wc);
int iswalnum_l(wint_t wc, __locale_t locale);
int iswalpha(wint_t wc);
int iswalpha_l(wint_t wc, __locale_t locale);
int iswblank(wint_t wc);
int iswblank_l(wint_t wc, __locale_t locale);
int iswcntrl(wint_t wc);
int iswcntrl_l(wint_t wc, __locale_t locale);
int iswctype(wint_t wc, wctype_t desc);
int iswctype_l(wint_t wc, wctype_t desc, __locale_t locale);
int iswdigit(wint_t wc);
int iswdigit_l(wint_t wc, __locale_t locale);
int iswgraph(wint_t wc);
int iswgraph_l(wint_t wc, __locale_t locale);
int iswlower(wint_t wc);
int iswlower_l(wint_t wc, __locale_t locale);
int iswprint(wint_t wc);
int iswprint_l(wint_t wc, __locale_t locale);
int iswpunct(wint_t wc);
int iswpunct_l(wint_t wc, __locale_t locale);
int iswspace(wint_t wc);
int iswspace_l(wint_t wc, __locale_t locale);
int iswupper(wint_t wc);
int iswupper_l(wint_t wc, __locale_t locale);
int iswxdigit(wint_t wc);
int iswxdigit_l(wint_t wc, __locale_t locale);
int isxdigit(int);
int isxdigit_l(int, __locale_t);
double j0(double);
float j0f(float);
long double j0l(long double);
double j1(double);
float j1f(float);
long double j1l(long double);
double jn(int, double);
float jnf(int, float);
long double jnl(int, long double);
int jrand48(unsigned __int16 xsubi[3]);
int jrand48_r(unsigned __int16 xsubi[3], struct drand48_data *buffer, int *result);
cryptkeyres *key_decrypt_1(cryptkeyarg *, CLIENT *);
cryptkeyres *key_decrypt_1_svc(cryptkeyarg *, struct svc_req *);
cryptkeyres *key_decrypt_2(cryptkeyarg *, CLIENT *);
cryptkeyres *key_decrypt_2_svc(cryptkeyarg *, struct svc_req *);
cryptkeyres *key_decrypt_pk_2(cryptkeyarg2 *, CLIENT *);
cryptkeyres *key_decrypt_pk_2_svc(cryptkeyarg2 *, struct svc_req *);
int key_decryptsession(char *, des_block *);
int key_decryptsession_pk(char *, netobj *, des_block *);
cryptkeyres *key_encrypt_1(cryptkeyarg *, CLIENT *);
cryptkeyres *key_encrypt_1_svc(cryptkeyarg *, struct svc_req *);
cryptkeyres *key_encrypt_2(cryptkeyarg *, CLIENT *);
cryptkeyres *key_encrypt_2_svc(cryptkeyarg *, struct svc_req *);
cryptkeyres *key_encrypt_pk_2(cryptkeyarg2 *, CLIENT *);
cryptkeyres *key_encrypt_pk_2_svc(cryptkeyarg2 *, struct svc_req *);
int key_encryptsession(char *, des_block *);
int key_encryptsession_pk(char *, netobj *, des_block *);
des_block *key_gen_1(void *, CLIENT *);
des_block *key_gen_1_svc(void *, struct svc_req *);
des_block *key_gen_2(void *, CLIENT *);
des_block *key_gen_2_svc(void *, struct svc_req *);
int key_gendes(des_block *);
int key_get_conv(char *, des_block *);
cryptkeyres *key_get_conv_2(char *, CLIENT *);
cryptkeyres *key_get_conv_2_svc(char *, struct svc_req *);
getcredres *key_getcred_1(netnamestr *, CLIENT *);
getcredres *key_getcred_1_svc(netnamestr *, struct svc_req *);
getcredres *key_getcred_2(netnamestr *, CLIENT *);
getcredres *key_getcred_2_svc(netnamestr *, struct svc_req *);
key_netstres *key_net_get_2(void *, CLIENT *);
key_netstres *key_net_get_2_svc(void *, struct svc_req *);
keystatus *key_net_put_2(key_netstarg *, CLIENT *);
keystatus *key_net_put_2_svc(key_netstarg *, struct svc_req *);
int key_secretkey_is_set(void);
keystatus *key_set_1(char *, CLIENT *);
keystatus *key_set_1_svc(char *, struct svc_req *);
keystatus *key_set_2(char *, CLIENT *);
keystatus *key_set_2_svc(char *, struct svc_req *);
int key_setsecret(char *);
int kill(__pid_t pid, int sig);
int killpg(__pid_t pgrp, int sig);
int klogctl(int type, char *bufp, int len);
char *l64a(int n);
Elf32_Addr la_ppc32_gnu_pltenter(Elf32_Sym *sym, unsigned int ndx, uintptr_t *refcook, uintptr_t *defcook, La_ppc32_regs *regs, unsigned int *flags, const char *symname, int *framesizep);
unsigned int la_ppc32_gnu_pltexit(Elf32_Sym *sym, unsigned int ndx, uintptr_t *refcook, uintptr_t *defcook, const La_ppc32_regs *inregs, La_ppc32_retval *outregs, const char *symname);
int labs(int x);
int lchmod(const char *file, __mode_t mode);
int lchown(const char *file, __uid_t owner, __gid_t group);
int lckpwdf(void);
void lcong48(unsigned __int16 param[7]);
int lcong48_r(unsigned __int16 param[7], struct drand48_data *buffer);
double ldexp(double x, int exponent);
float ldexpf(float x, int exponent);
long double ldexpl(long double x, int exponent);
ldiv_t ldiv(int numer, int denom);
void *lfind(const void *key, const void *base, size_t *nmemb, size_t size, __compar_fn_t compar);
double lgamma(double);
double lgamma_r(double, int *signgamp);
float lgammaf(float);
float lgammaf_r(float, int *signgamp);
long double lgammal(long double);
long double lgammal_r(long double, int *signgamp);
ssize_t lgetxattr(const char *path, const char *name, void *value, size_t size);
int link(const char *from, const char *to);
int linkat(int fromfd, const char *from, int tofd, const char *to, int flags);
int lio_listio(int mode, struct aiocb *const list[], int nent, struct sigevent *sig);
int listen(int fd, int n);
ssize_t listxattr(const char *path, char *list, size_t size);
__int64 llabs(__int64 x);
lldiv_t lldiv(__int64 numer, __int64 denom);
ssize_t llistxattr(const char *path, char *list, size_t size);
__int64 llrint(double x);
__int64 llrintf(float x);
__int64 llrintl(long double x);
__int64 llround(double x);
__int64 llroundf(float x);
__int64 llroundl(long double x);
char *loc1;
char *loc2;
struct lconv *localeconv(void);
struct tm *localtime(const time_t *timer);
struct tm *localtime_r(const time_t *timer, struct tm *tp);
int lockf(int fd, int cmd, off_t len);
char *locs;
double log(double x);
double log10(double x);
float log10f(float x);
long double log10l(long double x);
double log1p(double x);
float log1pf(float x);
long double log1pl(long double x);
double log2(double x);
float log2f(float x);
long double log2l(long double x);
double logb(double x);
float logbf(float x);
long double logbl(long double x);
float logf(float x);
void login(const struct utmp *entry);
int login_tty(int fd);
long double logl(long double x);
int logout(const char *ut_line);
void logwtmp(const char *ut_line, const char *ut_name, const char *ut_host);
void longjmp(struct __jmp_buf_tag env[1], int val);
int lrand48(void);
int lrand48_r(struct drand48_data *buffer, int *result);
int lremovexattr(const char *path, const char *name);
int lrint(double x);
int lrintf(float x);
int lrintl(long double x);
int lround(double x);
int lroundf(float x);
int lroundl(long double x);
void *lsearch(const void *key, void *base, size_t *nmemb, size_t size, __compar_fn_t compar);
__off_t lseek(int fd, __off_t offset, int whence);
int lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags);
int lstat(const char *file, struct stat *buf);
int lutimes(const char *file, const struct timeval tvp[2]);
int madvise(void *addr, size_t len, int advice);
void makecontext(ucontext_t *ucp, void (*func)(void), int argc, ...);
struct mallinfo mallinfo(void);
void *malloc(size_t size);
void *malloc_get_state(void);
int malloc_info(int options, FILE *fp);
int malloc_set_state(void *ptr);
void malloc_stats(void);
int malloc_trim(size_t pad);
size_t malloc_usable_size(void *ptr);
int mallopt(int param, int val);
int matherr(struct exception *exc);
int mblen(const char *s, size_t n);
size_t mbrlen(const char *s, size_t n, mbstate_t *ps);
size_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p);
int mbsinit(const mbstate_t *ps);
size_t mbsnrtowcs(wchar_t *dst, const char **src, size_t nmc, size_t len, mbstate_t *ps);
size_t mbsrtowcs(wchar_t *dst, const char **src, size_t len, mbstate_t *ps);
size_t mbstowcs(wchar_t *pwcs, const char *s, size_t n);
int mbtowc(wchar_t *pwc, const char *s, size_t n);
int mcheck(void (*abortfunc)(enum mcheck_status));
void mcheck_check_all(void);
int mcheck_pedantic(void (*abortfunc)(enum mcheck_status));
void *memalign(size_t alignment, size_t size);
void *memccpy(void *dest, const void *src, int c, size_t n);
void *memchr(const void *s, int c, size_t n);
int memcmp(const void *s1, const void *s2, size_t n);
void *memcpy(void *dest, const void *src, size_t n);
void *memmove(void *dest, const void *src, size_t n);
void *memset(void *s, int c, size_t n);
int mincore(void *start, size_t len, unsigned __int8 *vec);
int mkdir(const char *path, __mode_t mode);
int mkdirat(int fd, const char *path, __mode_t mode);
char *mkdtemp(char *template);
int mkfifo(const char *path, __mode_t mode);
int mkfifoat(int fd, const char *path, __mode_t mode);
int mknod(const char *path, __mode_t mode, __dev_t dev);
int mknodat(int fd, const char *path, __mode_t mode, __dev_t dev);
int mkstemp(char *template);
int mkstemps(char *template, int suffixlen);
char *mktemp(char *template);
time_t mktime(struct tm *tp);
int mlock(const void *addr, size_t len);
int mlockall(int flags);
void *mmap(void *addr, size_t len, int prot, int flags, int fd, __off_t offset);
double modf(double x, double *iptr);
float modff(float x, float *iptr);
long double modfl(long double x, long double *iptr);
void monstartup(u_long lowpc, u_long highpc);
int mount(const char *special_file, const char *dir, const char *fstype, unsigned int rwflag, const void *data);
enum mcheck_status mprobe(void *ptr);
int mprotect(void *addr, size_t len, int prot);
int mq_close(mqd_t mqdes);
int mq_getattr(mqd_t mqdes, struct mq_attr *mqstat);
int mq_notify(mqd_t mqdes, const struct sigevent *notification);
mqd_t mq_open(const char *name, int oflag, ...);
ssize_t mq_receive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned int *msg_prio);
int mq_send(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned int msg_prio);
int mq_setattr(mqd_t mqdes, const struct mq_attr *mqstat, struct mq_attr *omqstat);
ssize_t mq_timedreceive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned int *msg_prio, const struct timespec *abs_timeout);
int mq_timedsend(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout);
int mq_unlink(const char *name);
int mrand48(void);
int mrand48_r(struct drand48_data *buffer, int *result);
int msgctl(int msqid, int cmd, struct msqid_ds *buf);
int msgget(key_t key, int msgflg);
ssize_t msgrcv(int msqid, void *msgp, size_t msgsz, int msgtyp, int msgflg);
int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg);
int msync(void *addr, size_t len, int flags);
void mtrace(void);
int munlock(const void *addr, size_t len);
int munlockall(void);
int munmap(void *addr, size_t len);
void muntrace(void);
double nan(const char *tagb);
float nanf(const char *tagb);
long double nanl(const char *tagb);
int nanosleep(const struct timespec *requested_time, struct timespec *remaining);
double nearbyint(double x);
float nearbyintf(float x);
long double nearbyintl(long double x);
int netname2host(const char *, char *, const int);
int netname2user(const char *, uid_t *, gid_t *, int *, gid_t *);
__locale_t newlocale(int category_mask, const char *locale, __locale_t base);
double nextafter(double x, double y);
float nextafterf(float x, float y);
long double nextafterl(long double x, long double y);
datum nextkey(datum key);
double nexttoward(double x, long double y);
float nexttowardf(float x, long double y);
long double nexttowardl(long double x, long double y);
char *ngettext(const char *msgid1, const char *msgid2, unsigned int n);
int nice(int inc);
char *nl_langinfo(nl_item item);
char *nl_langinfo_l(nl_item item, __locale_t l);
int nrand48(unsigned __int16 xsubi[3]);
int nrand48_r(unsigned __int16 xsubi[3], struct drand48_data *buffer, int *result);
u_int32_t ns_datetosecs(const char *, int *);
u_char *ns_find_tsig(u_char *, u_char *);
int ns_format_ttl(u_long, char *, size_t);
u_int ns_get16(const u_char *);
u_long ns_get32(const u_char *);
int ns_initparse(const u_char *, int, ns_msg *);
int ns_makecanon(const char *, char *, size_t);
int ns_msg_getflag(ns_msg, int);
int ns_name_compress(const char *, u_char *, size_t, const u_char **, const u_char **);
int ns_name_ntol(const u_char *, u_char *, size_t);
int ns_name_ntop(const u_char *, char *, size_t);
int ns_name_pack(const u_char *, u_char *, int, const u_char **, const u_char **);
int ns_name_pton(const char *, u_char *, size_t);
void ns_name_rollback(const u_char *, const u_char **, const u_char **);
int ns_name_skip(const u_char **, const u_char *);
int ns_name_uncompress(const u_char *, const u_char *, const u_char *, char *, size_t);
int ns_name_unpack(const u_char *, const u_char *, const u_char *, u_char *, size_t);
int ns_parse_ttl(const char *, u_long *);
int ns_parserr(ns_msg *, ns_sect, int, ns_rr *);
void ns_put16(u_int, u_char *);
void ns_put32(u_long, u_char *);
int ns_samedomain(const char *, const char *);
int ns_samename(const char *, const char *);
int ns_sign(u_char *, int *, int, int, void *, const u_char *, int, u_char *, int *, time_t);
int ns_sign2(u_char *, int *, int, int, void *, const u_char *, int, u_char *, int *, time_t, u_char **, u_char **);
int ns_sign_tcp(u_char *, int *, int, int, ns_tcp_tsig_state *, int);
int ns_sign_tcp2(u_char *, int *, int, int, ns_tcp_tsig_state *, int, u_char **, u_char **);
int ns_sign_tcp_init(void *, const u_char *, int, ns_tcp_tsig_state *);
int ns_skiprr(const u_char *, const u_char *, ns_sect, int);
int ns_sprintrr(const ns_msg *, const ns_rr *, const char *, const char *, char *, size_t);
int ns_sprintrrf(const u_char *, size_t, const char *, ns_class, ns_type, u_long, const u_char *, size_t, const char *, const char *, char *, size_t);
int ns_subdomain(const char *, const char *);
int ns_verify(u_char *, int *, void *, const u_char *, int, u_char *, int *, time_t *, int);
int ns_verify_tcp(u_char *, int *, ns_tcp_tsig_state *, int);
int ns_verify_tcp_init(void *, const u_char *, int, ns_tcp_tsig_state *);
uint32_t ntohl(uint32_t netlong);
uint16_t ntohs(uint16_t netshort);
int ntp_adjtime(struct timex *tntx);
int ntp_gettimex(struct ntptimeval *ntv);
char *const numcodes[];
char *const numfnames[];
char *const numnames[];
void (*obstack_alloc_failed_handler)(void);
int obstack_exit_failure;
void obstack_free(struct obstack *, void *);
int on_exit(void (*func)(int status, void *arg), void *arg);
int open(const char *file, int oflag, ...);
FILE *open_memstream(char **bufloc, size_t *sizeloc);
__FILE *open_wmemstream(wchar_t **bufloc, size_t *sizeloc);
int openat(int fd, const char *file, int oflag, ...);
DIR *opendir(const char *name);
void openlog(const char *ident, int option, int facility);
int openpty(int *amaster, int *aslave, char *name, const struct termios *termp, const struct winsize *winp);
char *optarg;
int opterr;
int optind;
int optopt;
__int16 ospeed;
size_t parse_printf_format(const char *fmt, size_t n, int *argtypes);
int pathconf(const char *path, int name);
int pause(void);
int pclose(FILE *stream);
void perror(const char *s);
int personality(unsigned int persona);
int pipe(int pipedes[2]);
struct pmaplist *pmap_getmaps(struct sockaddr_in *address);
u_short pmap_getport(struct sockaddr_in *address, const u_long program, const u_long version, u_int protocol);
enum clnt_stat pmap_rmtcall(struct sockaddr_in *addr, const u_long prog, const u_long vers, const u_long proc, xdrproc_t xdrargs, caddr_t argsp, xdrproc_t xdrres, caddr_t resp, struct timeval tout, u_long *port_ptr);
bool_t pmap_set(const u_long program, const u_long vers, int protocol, u_short port);
bool_t pmap_unset(const u_long program, const u_long vers);
int poll(struct pollfd *fds, nfds_t nfds, int timeout);
FILE *popen(const char *command, const char *modes);
int posix_fadvise(int fd, off_t offset, off_t len, int advise);
int posix_fallocate(int fd, off_t offset, off_t len);
int posix_madvise(void *addr, size_t len, int advice);
int posix_memalign(void **memptr, size_t alignment, size_t size);
int posix_spawn(pid_t *pid, const char *path, const posix_spawn_file_actions_t *file_actions, const posix_spawnattr_t *attrp, char *const argv[], char *const envp[]);
int posix_spawn_file_actions_addclose(posix_spawn_file_actions_t *file_actions, int fd);
int posix_spawn_file_actions_adddup2(posix_spawn_file_actions_t *file_actions, int fd, int newfd);
int posix_spawn_file_actions_addopen(posix_spawn_file_actions_t *file_actions, int fd, const char *path, int oflag, mode_t mode);
int posix_spawn_file_actions_destroy(posix_spawn_file_actions_t *file_actions);
int posix_spawn_file_actions_init(posix_spawn_file_actions_t *file_actions);
int posix_spawnattr_destroy(posix_spawnattr_t *attr);
int posix_spawnattr_getflags(const posix_spawnattr_t *attr, __int16 *flags);
int posix_spawnattr_getpgroup(const posix_spawnattr_t *attr, pid_t *pgroup);
int posix_spawnattr_getschedparam(const posix_spawnattr_t *attr, struct sched_param *schedparam);
int posix_spawnattr_getschedpolicy(const posix_spawnattr_t *attr, int *schedpolicy);
int posix_spawnattr_getsigdefault(const posix_spawnattr_t *attr, sigset_t *sigdefault);
int posix_spawnattr_getsigmask(const posix_spawnattr_t *attr, sigset_t *sigmask);
int posix_spawnattr_init(posix_spawnattr_t *attr);
int posix_spawnattr_setflags(posix_spawnattr_t *attr, __int16 flags);
int posix_spawnattr_setpgroup(posix_spawnattr_t *attr, pid_t pgroup);
int posix_spawnattr_setschedparam(posix_spawnattr_t *attr, const struct sched_param *schedparam);
int posix_spawnattr_setschedpolicy(posix_spawnattr_t *attr, int schedpolicy);
int posix_spawnattr_setsigdefault(posix_spawnattr_t *attr, const sigset_t *sigdefault);
int posix_spawnattr_setsigmask(posix_spawnattr_t *attr, const sigset_t *sigmask);
int posix_spawnp(pid_t *pid, const char *file, const posix_spawn_file_actions_t *file_actions, const posix_spawnattr_t *attrp, char *const argv[], char *const envp[]);
double pow(double x, double y);
float powf(float x, float y);
long double powl(long double x, long double y);
int prctl(int option, ...);
ssize_t pread(int fd, void *buf, size_t nbytes, __off_t offset);
ssize_t preadv(int fd, const struct iovec *iovec, int count, __off_t offset);
int printf(const char *format, ...);
int printf_size(FILE *fp, const struct printf_info *info, const void *const *args);
int printf_size_info(const struct printf_info *info, size_t n, int *argtypes);
int profil(unsigned __int16 *sample_buffer, size_t size, size_t offset, unsigned int scale);
int pselect(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, const struct timespec *timeout, const __sigset_t *sigmask);
void psiginfo(const siginfo_t *pinfo, const char *s);
void psignal(int sig, const char *s);
int pthread_atfork(void (*prepare)(void), void (*parent)(void), void (*child)(void));
int pthread_attr_destroy(pthread_attr_t *attr);
int pthread_attr_getdetachstate(const pthread_attr_t *attr, int *detachstate);
int pthread_attr_getguardsize(const pthread_attr_t *attr, size_t *guardsize);
int pthread_attr_getinheritsched(const pthread_attr_t *attr, int *inherit);
int pthread_attr_getschedparam(const pthread_attr_t *attr, struct sched_param *param);
int pthread_attr_getschedpolicy(const pthread_attr_t *attr, int *policy);
int pthread_attr_getscope(const pthread_attr_t *attr, int *scope);
int pthread_attr_getstack(const pthread_attr_t *attr, void **stackaddr, size_t *stacksize);
int pthread_attr_getstackaddr(const pthread_attr_t *attr, void **stackaddr);
int pthread_attr_getstacksize(const pthread_attr_t *attr, size_t *stacksize);
int pthread_attr_init(pthread_attr_t *attr);
int pthread_attr_setdetachstate(pthread_attr_t *attr, int detachstate);
int pthread_attr_setguardsize(pthread_attr_t *attr, size_t guardsize);
int pthread_attr_setinheritsched(pthread_attr_t *attr, int inherit);
int pthread_attr_setschedparam(pthread_attr_t *attr, const struct sched_param *param);
int pthread_attr_setschedpolicy(pthread_attr_t *attr, int policy);
int pthread_attr_setscope(pthread_attr_t *attr, int scope);
int pthread_attr_setstack(pthread_attr_t *attr, void *stackaddr, size_t stacksize);
int pthread_attr_setstackaddr(pthread_attr_t *attr, void *stackaddr);
int pthread_attr_setstacksize(pthread_attr_t *attr, size_t stacksize);
int pthread_barrier_destroy(pthread_barrier_t *barrier);
int pthread_barrier_init(pthread_barrier_t *barrier, const pthread_barrierattr_t *attr, unsigned int count);
int pthread_barrier_wait(pthread_barrier_t *barrier);
int pthread_barrierattr_destroy(pthread_barrierattr_t *attr);
int pthread_barrierattr_getpshared(const pthread_barrierattr_t *attr, int *pshared);
int pthread_barrierattr_init(pthread_barrierattr_t *attr);
int pthread_barrierattr_setpshared(pthread_barrierattr_t *attr, int pshared);
int pthread_cancel(pthread_t th);
int pthread_cond_broadcast(pthread_cond_t *cond);
int pthread_cond_destroy(pthread_cond_t *cond);
int pthread_cond_init(pthread_cond_t *cond, const pthread_condattr_t *cond_attr);
int pthread_cond_signal(pthread_cond_t *cond);
int pthread_cond_timedwait(pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime);
int pthread_cond_wait(pthread_cond_t *cond, pthread_mutex_t *mutex);
int pthread_condattr_destroy(pthread_condattr_t *attr);
int pthread_condattr_getclock(const pthread_condattr_t *attr, __clockid_t *clock_id);
int pthread_condattr_getpshared(const pthread_condattr_t *attr, int *pshared);
int pthread_condattr_init(pthread_condattr_t *attr);
int pthread_condattr_setclock(pthread_condattr_t *attr, __clockid_t clock_id);
int pthread_condattr_setpshared(pthread_condattr_t *attr, int pshared);
int pthread_create(pthread_t *newthread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
int pthread_detach(pthread_t th);
int pthread_equal(pthread_t thread1, pthread_t thread2);
void pthread_exit(void *retval);
int pthread_getcpuclockid(pthread_t thread_id, __clockid_t *clock_id);
int pthread_getschedparam(pthread_t target_thread, int *policy, struct sched_param *param);
void *pthread_getspecific(pthread_key_t key);
int pthread_join(pthread_t th, void **thread_return);
int pthread_key_create(pthread_key_t *key, void (*destr_function)(void *));
int pthread_key_delete(pthread_key_t key);
int pthread_kill(pthread_t threadid, int signo);
int pthread_mutex_consistent(pthread_mutex_t *mutex);
int pthread_mutex_destroy(pthread_mutex_t *mutex);
int pthread_mutex_getprioceiling(const pthread_mutex_t *mutex, int *prioceiling);
int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr);
int pthread_mutex_lock(pthread_mutex_t *mutex);
int pthread_mutex_setprioceiling(pthread_mutex_t *mutex, int prioceiling, int *old_ceiling);
int pthread_mutex_timedlock(pthread_mutex_t *mutex, const struct timespec *abstime);
int pthread_mutex_trylock(pthread_mutex_t *mutex);
int pthread_mutex_unlock(pthread_mutex_t *mutex);
int pthread_mutexattr_destroy(pthread_mutexattr_t *attr);
int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *attr, int *prioceiling);
int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *attr, int *protocol);
int pthread_mutexattr_getpshared(const pthread_mutexattr_t *attr, int *pshared);
int pthread_mutexattr_getrobust(const pthread_mutexattr_t *attr, int *robustness);
int pthread_mutexattr_gettype(const pthread_mutexattr_t *attr, int *kind);
int pthread_mutexattr_init(pthread_mutexattr_t *attr);
int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *attr, int prioceiling);
int pthread_mutexattr_setprotocol(pthread_mutexattr_t *attr, int protocol);
int pthread_mutexattr_setpshared(pthread_mutexattr_t *attr, int pshared);
int pthread_mutexattr_setrobust(pthread_mutexattr_t *attr, int robustness);
int pthread_mutexattr_settype(pthread_mutexattr_t *attr, int kind);
int pthread_once(pthread_once_t *once_control, void (*init_routine)(void));
int pthread_rwlock_destroy(pthread_rwlock_t *rwlock);
int pthread_rwlock_init(pthread_rwlock_t *rwlock, const pthread_rwlockattr_t *attr);
int pthread_rwlock_rdlock(pthread_rwlock_t *rwlock);
int pthread_rwlock_timedrdlock(pthread_rwlock_t *rwlock, const struct timespec *abstime);
int pthread_rwlock_timedwrlock(pthread_rwlock_t *rwlock, const struct timespec *abstime);
int pthread_rwlock_tryrdlock(pthread_rwlock_t *rwlock);
int pthread_rwlock_trywrlock(pthread_rwlock_t *rwlock);
int pthread_rwlock_unlock(pthread_rwlock_t *rwlock);
int pthread_rwlock_wrlock(pthread_rwlock_t *rwlock);
int pthread_rwlockattr_destroy(pthread_rwlockattr_t *attr);
int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *attr, int *pref);
int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *attr, int *pshared);
int pthread_rwlockattr_init(pthread_rwlockattr_t *attr);
int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *attr, int pref);
int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *attr, int pshared);
pthread_t pthread_self(void);
int pthread_setcancelstate(int state, int *oldstate);
int pthread_setcanceltype(int type, int *oldtype);
int pthread_setschedparam(pthread_t target_thread, int policy, const struct sched_param *param);
int pthread_setschedprio(pthread_t target_thread, int prio);
int pthread_setspecific(pthread_key_t key, const void *pointer);
int pthread_sigmask(int how, const __sigset_t *newmask, __sigset_t *oldmask);
int pthread_spin_destroy(pthread_spinlock_t *lock);
int pthread_spin_init(pthread_spinlock_t *lock, int pshared);
int pthread_spin_lock(pthread_spinlock_t *lock);
int pthread_spin_trylock(pthread_spinlock_t *lock);
int pthread_spin_unlock(pthread_spinlock_t *lock);
void pthread_testcancel(void);
int ptrace(enum __ptrace_request request, ...);
int putc(int c, FILE *stream);
int putc_unlocked(int c, FILE *stream);
int putchar(int c);
int putchar_unlocked(int c);
int putenv(char *string);
int putmsg(int fildes, const struct strbuf *ctlptr, const struct strbuf *dataptr, int flags);
int putp(const char *);
int putpmsg(int fildes, const struct strbuf *ctlptr, const struct strbuf *dataptr, int band, int flags);
int putpwent(const struct passwd *p, FILE *f);
int puts(const char *s);
int putspent(const struct spwd *p, FILE *stream);
struct utmp *pututline(const struct utmp *utmp_ptr);
struct utmpx *pututxline(const struct utmpx *utmpx);
int putw(int w, FILE *stream);
wint_t putwc(wchar_t wc, __FILE *stream);
wint_t putwchar(wchar_t wc);
void *pvalloc(size_t size);
ssize_t pwrite(int fd, const void *buf, size_t n, __off_t offset);
ssize_t pwritev(int fd, const struct iovec *iovec, int count, __off_t offset);
char *qecvt(long double value, int ndigit, int *decpt, int *sign);
int qecvt_r(long double value, int ndigit, int *decpt, int *sign, char *buf, size_t len);
char *qfcvt(long double value, int ndigit, int *decpt, int *sign);
int qfcvt_r(long double value, int ndigit, int *decpt, int *sign, char *buf, size_t len);
char *qgcvt(long double value, int ndigit, char *buf);
void qsort(void *base, size_t nmemb, size_t size, __compar_fn_t compar);
int quotactl(int cmd, const char *special, int id, caddr_t addr);
int raise(int sig);
int rand(void);
int rand_r(unsigned int *seed);
int random(void);
int random_r(struct random_data *buf, int32_t *result);
int rcmd(char **ahost, unsigned __int16 rport, const char *locuser, const char *remuser, const char *cmd, int *fd2p);
int rcmd_af(char **ahost, unsigned __int16 rport, const char *locuser, const char *remuser, const char *cmd, int *fd2p, sa_family_t af);
reg_syntax_t re_syntax_options;
ssize_t read(int fd, void *buf, size_t nbytes);
struct dirent *readdir(DIR *dirp);
int readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result);
ssize_t readlink(const char *path, char *buf, size_t len);
ssize_t readlinkat(int fd, const char *path, char *buf, size_t len);
ssize_t readv(int fd, const struct iovec *iovec, int count);
void *realloc(void *ptr, size_t size);
char *realpath(const char *name, char *resolved);
int reboot(int howto);
ssize_t recv(int fd, void *buf, size_t n, int flags);
ssize_t recvfrom(int fd, void *buf, size_t n, int flags, struct sockaddr *addr, socklen_t *addr_len);
ssize_t recvmsg(int fd, struct msghdr *message, int flags);
int regcomp(regex_t *preg, const char *pattern, int cflags);
size_t regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size);
int regexec(const regex_t *preg, const char *string, size_t nmatch, regmatch_t pmatch[], int eflags);
void regfree(regex_t *preg);
int register_printf_function(int spec, printf_function *func, printf_arginfo_function *arginfo);
int register_printf_modifier(const wchar_t *str);
int register_printf_specifier(int spec, printf_function *func, printf_arginfo_size_function *arginfo);
int register_printf_type(printf_va_arg_function *fct);
double remainder(double x, double y);
float remainderf(float x, float y);
long double remainderl(long double x, long double y);
int remove(const char *filename);
errcode_t remove_error_table(const struct error_table *et);
int removexattr(const char *path, const char *name);
void remque(void *elem);
double remquo(double x, double y, int *quo);
float remquof(float x, float y, int *quo);
long double remquol(long double x, long double y, int *quo);
int rename(const char *old, const char *new);
int renameat(int oldfd, const char *old, int newfd, const char *new);
void (*reset_com_err_hook(void))(const char *, int, const char *, va_list);
int restartterm(char *, int, int *);
int revoke(const char *file);
void rewind(FILE *stream);
void rewinddir(DIR *dirp);
int rexec(char **ahost, int rport, const char *name, const char *pass, const char *cmd, int *fd2p);
int rexec_af(char **ahost, int rport, const char *name, const char *pass, const char *cmd, int *fd2p, sa_family_t af);
char *rindex(const char *s, int c);
double rint(double x);
float rintf(float x);
long double rintl(long double x);
int rmdir(const char *path);
double round(double x);
float roundf(float x);
long double roundl(long double x);
struct rpc_createerr rpc_createerr;
int rpmatch(const char *response);
int rresvport(int *alport);
int rresvport_af(int *alport, sa_family_t af);
int rtime(struct sockaddr_in *addrp, struct rpc_timeval *timep, struct rpc_timeval *timeout);
int ruserok(const char *rhost, int suser, const char *remuser, const char *locuser);
int ruserok_af(const char *rhost, int suser, const char *remuser, const char *locuser, sa_family_t af);
void *sbrk(intptr_t delta);
double scalb(double x, double n);
float scalbf(float x, float n);
long double scalbl(long double x, long double n);
double scalbln(double x, int n);
float scalblnf(float x, int n);
long double scalblnl(long double x, int n);
double scalbn(double x, int n);
float scalbnf(float x, int n);
long double scalbnl(long double x, int n);
int scandir(const char *dir, struct dirent ***namelist, int (*selector)(const struct dirent *), int (*cmp)(const struct dirent **, const struct dirent **));
int scanf(const char *format, ...);
int sched_get_priority_max(int algorithm);
int sched_get_priority_min(int algorithm);
int sched_getparam(__pid_t pid, struct sched_param *param);
int sched_getscheduler(__pid_t pid);
int sched_rr_get_interval(__pid_t pid, struct timespec *t);
int sched_setparam(__pid_t pid, const struct sched_param *param);
int sched_setscheduler(__pid_t pid, int policy, const struct sched_param *param);
int sched_yield(void);
unsigned __int16 *seed48(unsigned __int16 seed16v[3]);
int seed48_r(unsigned __int16 seed16v[3], struct drand48_data *buffer);
void seekdir(DIR *dirp, int pos);
int select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout);
int sem_close(sem_t *sem);
int sem_destroy(sem_t *sem);
int sem_getvalue(sem_t *sem, int *sval);
int sem_init(sem_t *sem, int pshared, unsigned int value);
sem_t *sem_open(const char *name, int oflag, ...);
int sem_post(sem_t *sem);
int sem_timedwait(sem_t *sem, const struct timespec *abstime);
int sem_trywait(sem_t *sem);
int sem_unlink(const char *name);
int sem_wait(sem_t *sem);
int semctl(int semid, int semnum, int cmd, ...);
int semget(key_t key, int nsems, int semflg);
int semop(int semid, struct sembuf *sops, size_t nsops);
ssize_t send(int fd, const void *buf, size_t n, int flags);
ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count);
ssize_t sendmsg(int fd, const struct msghdr *message, int flags);
ssize_t sendto(int fd, const void *buf, size_t n, int flags, const struct sockaddr *addr, socklen_t addr_len);
void seqbuf_dump(void);
char *(*set_com_err_gettext(char *(*)(const char *)))(const char *);
void (*set_com_err_hook(void (*)(const char *, int, const char *, va_list)))(const char *, int, const char *, va_list);
TERMINAL *set_curterm(TERMINAL *);
void setaliasent(void);
void setbuf(FILE *stream, char *buf);
void setbuffer(FILE *stream, char *buf, size_t size);
int setcontext(const ucontext_t *ucp);
int setdomainname(const char *name, size_t len);
int setegid(__gid_t gid);
int setenv(const char *name, const char *value, int replace);
int seteuid(__uid_t uid);
int setfsent(void);
int setfsgid(__gid_t gid);
int setfsuid(__uid_t uid);
int setgid(__gid_t gid);
void setgrent(void);
int setgroups(size_t n, const __gid_t *groups);
void sethostent(int stay_open);
int sethostid(int id);
int sethostname(const char *name, size_t len);
int setitimer(__itimer_which_t which, const struct itimerval *new, struct itimerval *old);
int setjmp(jmp_buf env);
void setkey(const char *key);
void setlinebuf(FILE *stream);
char *setlocale(int category, const char *locale);
int setlogin(const char *name);
int setlogmask(int mask);
FILE *setmntent(const char *file, const char *mode);
void setnetent(int stay_open);
int setnetgrent(const char *netgroup);
int setpgid(__pid_t pid, __pid_t pgid);
int setpgrp(void);
int setpriority(__priority_which_t which, id_t who, int prio);
void setprotoent(int stay_open);
void setpwent(void);
int setregid(__gid_t rgid, __gid_t egid);
int setreuid(__uid_t ruid, __uid_t euid);
int setrlimit(__rlimit_resource_t resource, const struct rlimit *rlimits);
void setrpcent(int stayopen);
void setservent(int stay_open);
__pid_t setsid(void);
int setsockopt(int fd, int level, int optname, const void *optval, socklen_t optlen);
void setspent(void);
char *setstate(char *statebuf);
int setstate_r(char *statebuf, struct random_data *buf);
int settimeofday(const struct timeval *tv, const struct timezone *tz);
int setttyent(void);
int setuid(__uid_t uid);
int setupterm(char *, int, int *);
void setusershell(void);
void setutent(void);
void setutxent(void);
int setvbuf(FILE *stream, char *buf, int modes, size_t n);
int setxattr(const char *path, const char *name, const void *value, size_t size, int flags);
struct spwd *sgetspent(const char *string);
int sgetspent_r(const char *string, struct spwd *result_buf, char *buffer, size_t buflen, struct spwd **result);
int shm_open(const char *name, int oflag, mode_t mode);
int shm_unlink(const char *name);
void *shmat(int shmid, const void *shmaddr, int shmflg);
int shmctl(int shmid, int cmd, struct shmid_ds *buf);
int shmdt(const void *shmaddr);
int shmget(key_t key, size_t size, int shmflg);
int shutdown(int fd, int how);
int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);
int sigaddset(sigset_t *set, int signo);
int sigaltstack(const struct sigaltstack *ss, struct sigaltstack *oss);
int sigblock(int mask);
int sigdelset(sigset_t *set, int signo);
int sigemptyset(sigset_t *set);
int sigfillset(sigset_t *set);
int siggetmask(void);
int siginterrupt(int sig, int);
int sigismember(const sigset_t *set, int signo);
void siglongjmp(sigjmp_buf env, int val);
__sighandler_t signal(int sig, __sighandler_t handler);
int signgam;
double significand(double x);
float significandf(float x);
long double significandl(long double x);
int sigpending(sigset_t *set);
int sigprocmask(int how, const sigset_t *set, sigset_t *oset);
int sigqueue(__pid_t pid, int sig, const union sigval val);
int sigreturn(struct sigcontext *scp);
int sigsetmask(int mask);
int sigstack(struct sigstack *ss, struct sigstack *oss);
int sigsuspend(const sigset_t *set);
int sigtimedwait(const sigset_t *set, siginfo_t *info, const struct timespec *timeout);
int sigwait(const sigset_t *set, int *sig);
int sigwaitinfo(const sigset_t *set, siginfo_t *info);
double sin(double x);
float sinf(float x);
double sinh(double x);
float sinhf(float x);
long double sinhl(long double x);
long double sinl(long double x);
char *slc_names[];
unsigned int sleep(unsigned int seconds);
int snprintf(char *s, size_t maxlen, const char *format, ...);
int sockatmark(int fd);
int socket(int domain, int type, int protocol);
int socketpair(int domain, int type, int protocol, int fds[2]);
int sprintf(char *s, const char *format, ...);
int sprofil(struct prof *profp, int profcnt, struct timeval *tvp, unsigned int flags);
double sqrt(double x);
float sqrtf(float x);
long double sqrtl(long double x);
void srand(unsigned int seed);
void srand48(int seedval);
int srand48_r(int seedval, struct drand48_data *buffer);
void srandom(unsigned int seed);
int srandom_r(unsigned int seed, struct random_data *buf);
void ss_abort_subsystem(int sci_idx, int code);
void ss_add_request_table(int, ss_request_table *, int, int *);
int ss_create_invocation(const char *, const char *, void *, ss_request_table *, int *);
void ss_delete_invocation(int);
void ss_delete_request_table(int, ss_request_table *, int *);
void ss_error(int, int, const char *, ...);
int ss_execute_line(int, char *);
char *ss_get_prompt(int sci_idx);
void ss_get_readline(int sci_idx);
void ss_help(int, const char *const *, int, void *);
int ss_listen(int);
char *ss_name(int sci_idx);
void ss_perror(int, int, const char *);
void ss_quit(int argc, const char *const *argv, int sci_idx, void *infop);
char *ss_safe_getenv(const char *arg);
void ss_self_identify(int argc, const char *const *argv, int sci_idx, void *infop);
void ss_set_prompt(int sci_idx, char *new_prompt);
ss_request_table ss_std_requests;
void ss_subsystem_name(int argc, const char *const *argv, int sci_idx, void *infop);
void ss_subsystem_version(int argc, const char *const *argv, int sci_idx, void *infop);
void ss_unimplemented(int argc, const char *const *argv, int sci_idx, void *infop);
int sscanf(const char *s, const char *format, ...);
__sighandler_t ssignal(int sig, __sighandler_t handler);
int stat(const char *file, struct stat *buf);
int statfs(const char *file, struct statfs *buf);
int statvfs(const char *file, struct statvfs *buf);
struct _IO_FILE *stderr;
struct _IO_FILE *stdin;
struct _IO_FILE *stdout;
int step(const char *string, const char *expbuf);
int stime(const time_t *when);
int store(datum key, datum content);
char *stpcpy(char *dest, const char *src);
char *stpncpy(char *dest, const char *src, size_t n);
int strcasecmp(const char *s1, const char *s2);
char *strcat(char *dest, const char *src);
char *strchr(const char *s, int c);
int strcmp(const char *s1, const char *s2);
char *const strcodes[];
int strcoll(const char *s1, const char *s2);
int strcoll_l(const char *s1, const char *s2, __locale_t l);
char *strcpy(char *dest, const char *src);
size_t strcspn(const char *s, const char *reject);
char *strdup(const char *s);
char *strerror(int errnum);
char *strerror_l(int errnum, __locale_t l);
ssize_t strfmon(char *s, size_t maxsize, const char *format, ...);
ssize_t strfmon_l(char *s, size_t maxsize, __locale_t loc, const char *format, ...);
char *const strfnames[];
size_t strftime(char *s, size_t maxsize, const char *format, const struct tm *tp);
size_t strftime_l(char *s, size_t maxsize, const char *format, const struct tm *tp, __locale_t loc);
size_t strlen(const char *s);
char *const strnames[];
int strncasecmp(const char *s1, const char *s2, size_t n);
char *strncat(char *dest, const char *src, size_t n);
int strncmp(const char *s1, const char *s2, size_t n);
char *strncpy(char *dest, const char *src, size_t n);
char *strndup(const char *string, size_t n);
size_t strnlen(const char *string, size_t maxlen);
char *strpbrk(const char *s, const char *accept);
char *strrchr(const char *s, int c);
char *strsep(char **stringp, const char *delim);
char *strsignal(int sig);
size_t strspn(const char *s, const char *accept);
char *strstr(const char *haystack, const char *needle);
double strtod(const char *nptr, char **endptr);
float strtof(const char *nptr, char **endptr);
intmax_t strtoimax(const char *nptr, char **endptr, int base);
char *strtok(char *s, const char *delim);
char *strtok_r(char *s, const char *delim, char **save_ptr);
int strtol(const char *nptr, char **endptr, int base);
long double strtold(const char *nptr, char **endptr);
__int64 strtoll(const char *nptr, char **endptr, int base);
__int64 strtoq(const char *nptr, char **endptr, int base);
unsigned int strtoul(const char *nptr, char **endptr, int base);
unsigned __int64 strtoull(const char *nptr, char **endptr, int base);
uintmax_t strtoumax(const char *nptr, char **endptr, int base);
unsigned __int64 strtouq(const char *nptr, char **endptr, int base);
size_t strxfrm(char *dest, const char *src, size_t n);
size_t strxfrm_l(char *dest, const char *src, size_t n, __locale_t l);
int stty(int fd, const struct sgttyb *params);
void svc_exit(void);
fd_set svc_fdset;
void svc_getreq(int rdfds);
void svc_getreq_common(const int fd);
void svc_getreq_poll(struct pollfd *, const int);
void svc_getreqset(fd_set *readfds);
int svc_max_pollfd;
struct pollfd *svc_pollfd;
bool_t svc_register(SVCXPRT *xprt, rpcprog_t prog, rpcvers_t vers, __dispatch_fn_t dispatch, rpcprot_t protocol);
void svc_run(void);
bool_t svc_sendreply(SVCXPRT *xprt, xdrproc_t xdr_results, caddr_t xdr_location);
void svc_unregister(rpcprog_t prog, rpcvers_t vers);
void svcerr_auth(SVCXPRT *xprt, enum auth_stat why);
void svcerr_decode(SVCXPRT *xprt);
void svcerr_noproc(SVCXPRT *xprt);
void svcerr_noprog(SVCXPRT *xprt);
void svcerr_progvers(SVCXPRT *xprt, rpcvers_t low_vers, rpcvers_t high_vers);
void svcerr_systemerr(SVCXPRT *xprt);
void svcerr_weakauth(SVCXPRT *xprt);
SVCXPRT *svcfd_create(int sock, u_int sendsize, u_int recvsize);
SVCXPRT *svcraw_create(void);
SVCXPRT *svctcp_create(int sock, u_int sendsize, u_int recvsize);
SVCXPRT *svcudp_bufcreate(int sock, u_int sendsz, u_int recvsz);
SVCXPRT *svcudp_create(int sock);
SVCXPRT *svcunix_create(int sock, u_int sendsize, u_int recvsize, char *path);
int swapcontext(ucontext_t *oucp, const ucontext_t *ucp);
int swapoff(const char *path);
int swapon(const char *path, int flags);
int swprintf(wchar_t *s, size_t n, const wchar_t *format, ...);
int swscanf(const wchar_t *s, const wchar_t *format, ...);
int symlink(const char *from, const char *to);
int symlinkat(const char *from, int tofd, const char *to);
void sync(void);
const char *const sys_errlist[];
int sys_nerr;
const char *const sys_siglist[65];
int syscall(int sysno, ...);
int sysconf(int name);
int sysctl(int *name, int nlen, void *oldval, size_t *oldlenp, void *newval, size_t newlen);
int sysinfo(struct sysinfo *info);
void syslog(int pri, const char *fmt, ...);
int system(const char *command);
double tan(double x);
float tanf(float x);
double tanh(double x);
float tanhf(float x);
long double tanhl(long double x);
long double tanl(long double x);
int tcdrain(int fd);
int tcflow(int fd, int action);
int tcflush(int fd, int queue_selector);
int tcgetattr(int fd, struct termios *termios_p);
__pid_t tcgetpgrp(int fd);
__pid_t tcgetsid(int fd);
int tcsendbreak(int fd, int duration);
int tcsetattr(int fd, int optional_actions, const struct termios *termios_p);
int tcsetpgrp(int fd, __pid_t pgrp_id);
td_err_e td_init(void);
td_err_e td_log(void);
const char **td_symbol_list(void);
td_err_e td_ta_clear_event(const td_thragent_t *ta, td_thr_events_t *event);
td_err_e td_ta_delete(td_thragent_t *ta);
td_err_e td_ta_enable_stats(const td_thragent_t *ta, int enable);
td_err_e td_ta_event_addr(const td_thragent_t *ta, td_event_e event, td_notify_t *ptr);
td_err_e td_ta_event_getmsg(const td_thragent_t *ta, td_event_msg_t *msg);
td_err_e td_ta_get_nthreads(const td_thragent_t *ta, int *np);
td_err_e td_ta_get_ph(const td_thragent_t *ta, struct ps_prochandle **ph);
td_err_e td_ta_get_stats(const td_thragent_t *ta, td_ta_stats_t *statsp);
td_err_e td_ta_map_id2thr(const td_thragent_t *ta, pthread_t pt, td_thrhandle_t *th);
td_err_e td_ta_map_lwp2thr(const td_thragent_t *ta, lwpid_t lwpid, td_thrhandle_t *th);
td_err_e td_ta_new(struct ps_prochandle *ps, td_thragent_t **ta);
td_err_e td_ta_reset_stats(const td_thragent_t *ta);
td_err_e td_ta_set_event(const td_thragent_t *ta, td_thr_events_t *event);
td_err_e td_ta_setconcurrency(const td_thragent_t *ta, int level);
td_err_e td_ta_thr_iter(const td_thragent_t *ta, td_thr_iter_f *callback, void *cbdata_p, td_thr_state_e state, int ti_pri, sigset_t *ti_sigmask_p, unsigned int ti_user_flags);
td_err_e td_ta_tsd_iter(const td_thragent_t *ta, td_key_iter_f *ki, void *p);
td_err_e td_thr_clear_event(const td_thrhandle_t *th, td_thr_events_t *event);
td_err_e td_thr_dbresume(const td_thrhandle_t *th);
td_err_e td_thr_dbsuspend(const td_thrhandle_t *th);
td_err_e td_thr_event_enable(const td_thrhandle_t *th, int event);
td_err_e td_thr_event_getmsg(const td_thrhandle_t *th, td_event_msg_t *msg);
td_err_e td_thr_get_info(const td_thrhandle_t *th, td_thrinfo_t *infop);
td_err_e td_thr_getfpregs(const td_thrhandle_t *th, prfpregset_t *regset);
td_err_e td_thr_getgregs(const td_thrhandle_t *th, prgregset_t gregs);
td_err_e td_thr_getxregs(const td_thrhandle_t *th, void *xregs);
td_err_e td_thr_getxregsize(const td_thrhandle_t *th, int *sizep);
td_err_e td_thr_set_event(const td_thrhandle_t *th, td_thr_events_t *event);
td_err_e td_thr_setfpregs(const td_thrhandle_t *th, const prfpregset_t *fpregs);
td_err_e td_thr_setgregs(const td_thrhandle_t *th, prgregset_t gregs);
td_err_e td_thr_setprio(const td_thrhandle_t *th, int prio);
td_err_e td_thr_setsigpending(const td_thrhandle_t *th, unsigned __int8 n, const sigset_t *ss);
td_err_e td_thr_setxregs(const td_thrhandle_t *th, const void *addr);
td_err_e td_thr_sigsetmask(const td_thrhandle_t *th, const sigset_t *ss);
td_err_e td_thr_tls_get_addr(const td_thrhandle_t *th, psaddr_t map_address, size_t offset, psaddr_t *address);
td_err_e td_thr_tlsbase(const td_thrhandle_t *th, unsigned int modid, psaddr_t *base);
td_err_e td_thr_tsd(const td_thrhandle_t *th, const thread_key_t tk, void **data);
td_err_e td_thr_validate(const td_thrhandle_t *th);
void *tdelete(const void *key, void **rootp, __compar_fn_t compar);
char *telcmds[];
int telldir(DIR *dirp);
char *tempnam(const char *dir, const char *pfx);
char *textdomain(const char *domainname);
void *tfind(const void *key, void *const *rootp, __compar_fn_t compar);
double tgamma(double);
float tgammaf(float);
long double tgammal(long double);
int tgetent(char *, const char *);
int tgetflag(char *);
int tgetnum(char *);
char *tgetstr(char *, char **);
char *tgoto(const char *, int, int);
int tigetflag(char *);
int tigetnum(char *);
char *tigetstr(char *);
time_t time(time_t *timer);
time_t timegm(struct tm *tp);
time_t timelocal(struct tm *tp);
int timer_create(clockid_t clock_id, struct sigevent *evp, timer_t *timerid);
int timer_delete(timer_t timerid);
int timer_getoverrun(timer_t timerid);
int timer_gettime(timer_t timerid, struct itimerspec *value);
int timer_settime(timer_t timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue);
clock_t times(struct tms *buffer);
int timezone;
char *tiparm(const char *, ...);
FILE *tmpfile(void);
char *tmpnam(char *s);
char *tmpnam_r(char *s);
int toascii(int c);
int tolower(int c);
int tolower_l(int c, __locale_t l);
int toupper(int c);
int toupper_l(int c, __locale_t l);
wint_t towctrans(wint_t wc, wctrans_t desc);
wint_t towctrans_l(wint_t wc, wctrans_t desc, __locale_t locale);
wint_t towlower(wint_t wc);
wint_t towlower_l(wint_t wc, __locale_t locale);
wint_t towupper(wint_t wc);
wint_t towupper_l(wint_t wc, __locale_t locale);
char *tparm(char *, ...);
int tputs(const char *, int, int (*)(int));
double trunc(double x);
int truncate(const char *file, __off_t length);
float truncf(float x);
long double truncl(long double x);
void *tsearch(const void *key, void **rootp, __compar_fn_t compar);
char *ttyname(int fd);
int ttyname_r(int fd, char *buf, size_t buflen);
int ttyslot(void);
char ttytype[];
void twalk(const void *root, __action_fn_t action);
char *tzname[2];
void tzset(void);
__useconds_t ualarm(__useconds_t value, __useconds_t interval);
int ulckpwdf(void);
int ulimit(int cmd, ...);
__mode_t umask(__mode_t mask);
int umount(const char *special_file);
int umount2(const char *special_file, int flags);
int uname(struct utsname *name);
int uncompress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen);
int ungetc(int c, FILE *stream);
wint_t ungetwc(wint_t wc, __FILE *stream);
int unlink(const char *name);
int unlinkat(int fd, const char *name, int flag);
int unsetenv(const char *name);
void updwtmp(const char *wtmp_file, const struct utmp *utmp);
__locale_t uselocale(__locale_t dataset);
int user2netname(char *, const uid_t, const char *);
int usleep(__useconds_t useconds);
int utime(const char *file, const struct utimbuf *file_times);
int utimensat(int fd, const char *path, const struct timespec times[2], int flags);
int utimes(const char *file, const struct timeval tvp[2]);
int utmpname(const char *file);
void *valloc(size_t size);
int vdprintf(int fd, const char *fmt, __gnuc_va_list arg);
void verr(int status, const char *format, __gnuc_va_list);
void verrx(int status, const char *, __gnuc_va_list);
__pid_t vfork(void);
int vfprintf(FILE *s, const char *format, __gnuc_va_list arg);
int vfscanf(FILE *s, const char *format, __gnuc_va_list arg);
int vfwprintf(__FILE *s, const wchar_t *format, __gnuc_va_list arg);
int vfwscanf(__FILE *s, const wchar_t *format, __gnuc_va_list arg);
int vhangup(void);
int vlimit(enum __vlimit_resource resource, int value);
int vprintf(const char *format, __gnuc_va_list arg);
int vscanf(const char *format, __gnuc_va_list arg);
int vsnprintf(char *s, size_t maxlen, const char *format, __gnuc_va_list arg);
int vsprintf(char *s, const char *format, __gnuc_va_list arg);
int vsscanf(const char *s, const char *format, __gnuc_va_list arg);
int vswprintf(wchar_t *s, size_t n, const wchar_t *format, __gnuc_va_list arg);
int vswscanf(const wchar_t *s, const wchar_t *format, __gnuc_va_list arg);
void vsyslog(int pri, const char *fmt, __gnuc_va_list ap);
int vtimes(struct vtimes *current, struct vtimes *child);
void vwarn(const char *format, __gnuc_va_list);
void vwarnx(const char *format, __gnuc_va_list);
int vwprintf(const wchar_t *format, __gnuc_va_list arg);
int vwscanf(const wchar_t *format, __gnuc_va_list arg);
__pid_t wait(void *stat_loc);
__pid_t wait3(void *stat_loc, int options, struct rusage *usage);
__pid_t wait4(__pid_t pid, void *stat_loc, int options, struct rusage *usage);
int waitid(idtype_t idtype, __id_t id, siginfo_t *infop, int options);
__pid_t waitpid(__pid_t pid, int *stat_loc, int options);
void warn(const char *format, ...);
void warnx(const char *format, ...);
wchar_t *wcpcpy(wchar_t *dest, const wchar_t *src);
wchar_t *wcpncpy(wchar_t *dest, const wchar_t *src, size_t n);
size_t wcrtomb(char *s, wchar_t wc, mbstate_t *ps);
int wcscasecmp(const wchar_t *s1, const wchar_t *s2);
int wcscasecmp_l(const wchar_t *s1, const wchar_t *s2, __locale_t loc);
wchar_t *wcscat(wchar_t *dest, const wchar_t *src);
wchar_t *wcschr(const wchar_t *wcs, wchar_t wc);
int wcscmp(const wchar_t *s1, const wchar_t *s2);
int wcscoll(const wchar_t *s1, const wchar_t *s2);
int wcscoll_l(const wchar_t *s1, const wchar_t *s2, __locale_t loc);
wchar_t *wcscpy(wchar_t *dest, const wchar_t *src);
size_t wcscspn(const wchar_t *wcs, const wchar_t *reject);
wchar_t *wcsdup(const wchar_t *s);
size_t wcsftime(wchar_t *s, size_t maxsize, const wchar_t *format, const struct tm *tp);
size_t wcslen(const wchar_t *s);
int wcsncasecmp(const wchar_t *s1, const wchar_t *s2, size_t n);
int wcsncasecmp_l(const wchar_t *s1, const wchar_t *s2, size_t n, __locale_t loc);
wchar_t *wcsncat(wchar_t *dest, const wchar_t *src, size_t n);
int wcsncmp(const wchar_t *s1, const wchar_t *s2, size_t n);
wchar_t *wcsncpy(wchar_t *dest, const wchar_t *src, size_t n);
size_t wcsnlen(const wchar_t *s, size_t maxlen);
size_t wcsnrtombs(char *dst, const wchar_t **src, size_t nwc, size_t len, mbstate_t *ps);
wchar_t *wcspbrk(const wchar_t *wcs, const wchar_t *accept);
wchar_t *wcsrchr(const wchar_t *wcs, wchar_t wc);
size_t wcsrtombs(char *dst, const wchar_t **src, size_t len, mbstate_t *ps);
size_t wcsspn(const wchar_t *wcs, const wchar_t *accept);
wchar_t *wcsstr(const wchar_t *haystack, const wchar_t *needle);
double wcstod(const wchar_t *nptr, wchar_t **endptr);
float wcstof(const wchar_t *nptr, wchar_t **endptr);
intmax_t wcstoimax(const __gwchar_t *nptr, __gwchar_t **endptr, int base);
wchar_t *wcstok(wchar_t *s, const wchar_t *delim, wchar_t **ptr);
int wcstol(const wchar_t *nptr, wchar_t **endptr, int base);
long double wcstold(const wchar_t *nptr, wchar_t **endptr);
__int64 wcstoll(const wchar_t *nptr, wchar_t **endptr, int base);
size_t wcstombs(char *s, const wchar_t *pwcs, size_t n);
unsigned int wcstoul(const wchar_t *nptr, wchar_t **endptr, int base);
unsigned __int64 wcstoull(const wchar_t *nptr, wchar_t **endptr, int base);
uintmax_t wcstoumax(const __gwchar_t *nptr, __gwchar_t **endptr, int base);
size_t wcsxfrm(wchar_t *s1, const wchar_t *s2, size_t n);
size_t wcsxfrm_l(wchar_t *s1, const wchar_t *s2, size_t n, __locale_t loc);
int wctob(wint_t c);
int wctomb(char *s, wchar_t wchar);
wctrans_t wctrans(const char *property);
wctrans_t wctrans_l(const char *property, __locale_t locale);
wctype_t wctype(const char *property);
wctype_t wctype_l(const char *property, __locale_t locale);
wchar_t *wmemchr(const wchar_t *s, wchar_t c, size_t n);
int wmemcmp(const wchar_t *s1, const wchar_t *s2, size_t n);
wchar_t *wmemcpy(wchar_t *s1, const wchar_t *s2, size_t n);
wchar_t *wmemmove(wchar_t *s1, const wchar_t *s2, size_t n);
wchar_t *wmemset(wchar_t *s, wchar_t c, size_t n);
int wordexp(const char *words, wordexp_t *pwordexp, int flags);
void wordfree(wordexp_t *wordexp);
int wprintf(const wchar_t *format, ...);
ssize_t write(int fd, const void *buf, size_t n);
ssize_t writev(int fd, const struct iovec *iovec, int count);
int wscanf(const wchar_t *format, ...);
bool_t xdr_array(XDR *xdrs, caddr_t *addrp, u_int *sizep, u_int maxsize, u_int elsize, xdrproc_t elproc);
bool_t xdr_authunix_parms(XDR *xdrs, struct authunix_parms *p);
bool_t xdr_bool(XDR *xdrs, bool_t *bp);
bool_t xdr_bytes(XDR *xdrs, char **cpp, u_int *sizep, u_int maxsize);
bool_t xdr_callhdr(XDR *xdrs, struct rpc_msg *cmsg);
bool_t xdr_callmsg(XDR *xdrs, struct rpc_msg *cmsg);
bool_t xdr_char(XDR *xdrs, char *cp);
bool_t xdr_cryptkeyarg(XDR *, cryptkeyarg *);
bool_t xdr_cryptkeyarg2(XDR *, cryptkeyarg2 *);
bool_t xdr_cryptkeyres(XDR *, cryptkeyres *);
bool_t xdr_des_block(XDR *xdrs, des_block *blkp);
bool_t xdr_double(XDR *xdrs, double *dp);
bool_t xdr_enum(XDR *xdrs, enum_t *ep);
bool_t xdr_float(XDR *xdrs, float *fp);
void xdr_free(xdrproc_t proc, char *objp);
bool_t xdr_getcredres(XDR *, getcredres *);
bool_t xdr_hyper(XDR *xdrs, quad_t *llp);
bool_t xdr_int(XDR *xdrs, int *ip);
bool_t xdr_int16_t(XDR *xdrs, int16_t *ip);
bool_t xdr_int32_t(XDR *xdrs, int32_t *ip);
bool_t xdr_int64_t(XDR *xdrs, int64_t *ip);
bool_t xdr_int8_t(XDR *xdrs, int8_t *ip);
bool_t xdr_key_netstarg(XDR *, key_netstarg *);
bool_t xdr_key_netstres(XDR *, key_netstres *);
bool_t xdr_keybuf(XDR *, keybuf);
bool_t xdr_keystatus(XDR *, keystatus *);
bool_t xdr_long(XDR *xdrs, int *lp);
bool_t xdr_longlong_t(XDR *xdrs, quad_t *llp);
bool_t xdr_netnamestr(XDR *, netnamestr *);
bool_t xdr_netobj(XDR *xdrs, struct netobj *np);
bool_t xdr_opaque(XDR *xdrs, caddr_t cp, u_int cnt);
bool_t xdr_opaque_auth(XDR *, struct opaque_auth *);
bool_t xdr_pmap(XDR *xdrs, struct pmap *regs);
bool_t xdr_pmaplist(XDR *xdrs, struct pmaplist **rp);
bool_t xdr_pointer(XDR *xdrs, char **objpp, u_int obj_size, xdrproc_t xdr_obj);
bool_t xdr_quad_t(XDR *xdrs, quad_t *ip);
bool_t xdr_reference(XDR *xdrs, caddr_t *xpp, u_int size, xdrproc_t proc);
bool_t xdr_replymsg(XDR *xdrs, struct rpc_msg *rmsg);
bool_t xdr_rmtcall_args(XDR *xdrs, struct rmtcallargs *crp);
bool_t xdr_rmtcallres(XDR *xdrs, struct rmtcallres *crp);
bool_t xdr_short(XDR *xdrs, __int16 *sp);
u_long xdr_sizeof(xdrproc_t, void *);
bool_t xdr_string(XDR *xdrs, char **cpp, u_int maxsize);
bool_t xdr_u_char(XDR *xdrs, u_char *cp);
bool_t xdr_u_hyper(XDR *xdrs, u_quad_t *ullp);
bool_t xdr_u_int(XDR *xdrs, u_int *up);
bool_t xdr_u_long(XDR *xdrs, u_long *ulp);
bool_t xdr_u_longlong_t(XDR *xdrs, u_quad_t *ullp);
bool_t xdr_u_quad_t(XDR *xdrs, u_quad_t *up);
bool_t xdr_u_short(XDR *xdrs, u_short *usp);
bool_t xdr_uint16_t(XDR *xdrs, uint16_t *up);
bool_t xdr_uint32_t(XDR *xdrs, uint32_t *up);
bool_t xdr_uint64_t(XDR *xdrs, uint64_t *up);
bool_t xdr_uint8_t(XDR *xdrs, uint8_t *up);
bool_t xdr_union(XDR *xdrs, enum_t *dscmp, char *unp, const struct xdr_discrim *choices, xdrproc_t dfault);
bool_t xdr_unixcred(XDR *, unixcred *);
bool_t xdr_vector(XDR *xdrs, char *basep, u_int nelem, u_int elemsize, xdrproc_t xdr_elem);
bool_t xdr_void(void);
bool_t xdr_wrapstring(XDR *xdrs, char **cpp);
void xdrmem_create(XDR *xdrs, const caddr_t addr, u_int size, enum xdr_op xop);
void xdrrec_create(XDR *xdrs, u_int sendsize, u_int recvsize, caddr_t tcp_handle, int (*readit)(char *, char *, int), int (*writeit)(char *, char *, int));
bool_t xdrrec_endofrecord(XDR *xdrs, bool_t sendnow);
bool_t xdrrec_eof(XDR *xdrs);
bool_t xdrrec_skiprecord(XDR *xdrs);
void xdrstdio_create(XDR *xdrs, FILE *file, enum xdr_op xop);
void xprt_register(SVCXPRT *xprt);
void xprt_unregister(SVCXPRT *xprt);
double y0(double);
float y0f(float);
long double y0l(long double);
double y1(double);
float y1f(float);
long double y1l(long double);
double yn(int, double);
float ynf(int, float);
long double ynl(int, long double);
const char *zError(int);
uLong zlibCompileFlags(void);
const char *zlibVersion(void);
MACRO_acs acs_chars_index;
__ns_cert_types cert_t_oid;
__ns_cert_types cert_t_pgp;
__ns_cert_types cert_t_pkix;
__ns_cert_types cert_t_spki;
__ns_cert_types cert_t_url;
$003F63A829E52477BDB4080710A1139D endorder;
$003F63A829E52477BDB4080710A1139D leaf;
MACRO_math math_errhandling;
MACRO_argument no_argument;
__ns_class ns_c_2;
__ns_class ns_c_any;
__ns_class ns_c_chaos;
__ns_class ns_c_hs;
__ns_class ns_c_in;
__ns_class ns_c_invalid;
__ns_class ns_c_max;
__ns_class ns_c_none;
__ns_flag ns_f_aa;
__ns_flag ns_f_ad;
__ns_flag ns_f_cd;
__ns_flag ns_f_max;
__ns_flag ns_f_opcode;
__ns_flag ns_f_qr;
__ns_flag ns_f_ra;
__ns_flag ns_f_rcode;
__ns_flag ns_f_rd;
__ns_flag ns_f_tc;
__ns_flag ns_f_z;
__ns_key_types ns_kt_dh;
__ns_key_types ns_kt_dsa;
__ns_key_types ns_kt_private;
__ns_key_types ns_kt_rsa;
__ns_opcode ns_o_iquery;
__ns_opcode ns_o_max;
__ns_opcode ns_o_notify;
__ns_opcode ns_o_query;
__ns_opcode ns_o_status;
__ns_opcode ns_o_update;
__ns_rcode ns_r_badkey;
__ns_rcode ns_r_badsig;
__ns_rcode ns_r_badtime;
__ns_rcode ns_r_badvers;
__ns_rcode ns_r_formerr;
__ns_rcode ns_r_max;
__ns_rcode ns_r_noerror;
__ns_rcode ns_r_notauth;
__ns_rcode ns_r_notimpl;
__ns_rcode ns_r_notzone;
__ns_rcode ns_r_nxdomain;
__ns_rcode ns_r_nxrrset;
__ns_rcode ns_r_refused;
__ns_rcode ns_r_servfail;
__ns_rcode ns_r_yxdomain;
__ns_rcode ns_r_yxrrset;
__ns_sect ns_s_an;
__ns_sect ns_s_ar;
__ns_sect ns_s_max;
__ns_sect ns_s_ns;
__ns_sect ns_s_pr;
__ns_sect ns_s_qd;
__ns_sect ns_s_ud;
__ns_sect ns_s_zn;
__ns_type ns_t_a;
__ns_type ns_t_a6;
__ns_type ns_t_aaaa;
__ns_type ns_t_afsdb;
__ns_type ns_t_any;
__ns_type ns_t_apl;
__ns_type ns_t_atma;
__ns_type ns_t_axfr;
__ns_type ns_t_cert;
__ns_type ns_t_cname;
__ns_type ns_t_dname;
__ns_type ns_t_eid;
__ns_type ns_t_gpos;
__ns_type ns_t_hinfo;
__ns_type ns_t_invalid;
__ns_type ns_t_isdn;
__ns_type ns_t_ixfr;
__ns_type ns_t_key;
__ns_type ns_t_kx;
__ns_type ns_t_loc;
__ns_type ns_t_maila;
__ns_type ns_t_mailb;
__ns_type ns_t_max;
__ns_type ns_t_mb;
__ns_type ns_t_md;
__ns_type ns_t_mf;
__ns_type ns_t_mg;
__ns_type ns_t_minfo;
__ns_type ns_t_mr;
__ns_type ns_t_mx;
__ns_type ns_t_naptr;
__ns_type ns_t_nimloc;
__ns_type ns_t_ns;
__ns_type ns_t_nsap;
__ns_type ns_t_nsap_ptr;
__ns_type ns_t_null;
__ns_type ns_t_nxt;
__ns_type ns_t_opt;
__ns_type ns_t_ptr;
__ns_type ns_t_px;
__ns_type ns_t_rp;
__ns_type ns_t_rt;
__ns_type ns_t_sig;
__ns_type ns_t_sink;
__ns_type ns_t_soa;
__ns_type ns_t_srv;
__ns_type ns_t_tkey;
__ns_type ns_t_tsig;
__ns_type ns_t_txt;
__ns_type ns_t_wks;
__ns_type ns_t_x25;
__ns_type ns_t_zxfr;
__ns_update_operation ns_uop_add;
__ns_update_operation ns_uop_delete;
__ns_update_operation ns_uop_max;
MACRO_argument optional_argument;
$003F63A829E52477BDB4080710A1139D postorder;
$003F63A829E52477BDB4080710A1139D preorder;
MACRO_argument required_argument;
$3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_done;
$3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_error;
$3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_goahead;
$3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_modified;
$3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_nextns;
MACRO_ss ss_err_base;
MACRO_xEOF xEOF;
