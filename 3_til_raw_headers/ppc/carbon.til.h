struct $0001B0EE5CB471E2850D214488412138 {SInt32 year;SInt8 month;SInt8 day;SInt8 hour;SInt8 minute;double second;};
enum $0008B39AB15B7D6E65BF866F4CBA48D1 {kPreventOverlapOnSelector = 0x0,kPreventOverlapOffSelector = 0x1,};
enum $0028101ACFAB47A80EF54B0DA6A16708 {gestaltATalkVersion = 0x61746B76,};
enum $00479C61961A244562671FE5ED76F811 {badDragRefErr = 0xFFFFF8C6,badDragItemErr = 0xFFFFF8C5,badDragFlavorErr = 0xFFFFF8C4,duplicateFlavorErr = 0xFFFFF8C3,cantGetFlavorErr = 0xFFFFF8C2,duplicateHandlerErr = 0xFFFFF8C1,handlerNotFoundErr = 0xFFFFF8C0,dragNotAcceptedErr = 0xFFFFF8BF,unsupportedForPlatformErr = 0xFFFFF8BE,noSuitableDisplaysErr = 0xFFFFF8BD,badImageRgnErr = 0xFFFFF8BC,badImageErr = 0xFFFFF8BB,nonDragOriginatorErr = 0xFFFFF8BA,};
enum $0050975A0ADB8A5406CEF98DE6B1DFA8 {cKeystroke = 0x6B707273,pKeystrokeKey = 0x6B4D7367,pModifiers = 0x6B4D6F64,pKeyKind = 0x6B6B6E64,eModifiers = 0x654D6473,eOptionDown = 0x4B6F7074,eCommandDown = 0x4B636D64,eControlDown = 0x4B63746C,eShiftDown = 0x4B736674,eCapsLockDown = 0x4B636C6B,eKeyKind = 0x656B7374,eEscapeKey = 0x6B733500,eDeleteKey = 0x6B733300,eTabKey = 0x6B733000,eReturnKey = 0x6B732400,eClearKey = 0x6B734700,eEnterKey = 0x6B734C00,eUpArrowKey = 0x6B737E00,eDownArrowKey = 0x6B737D00,eLeftArrowKey = 0x6B737B00,eRightArrowKey = 0x6B737C00,eHelpKey = 0x6B737200,eHomeKey = 0x6B737300,ePageUpKey = 0x6B737400,ePageDownKey = 0x6B737900,eForwardDelKey = 0x6B737500,eEndKey = 0x6B737700,eF1Key = 0x6B737A00,eF2Key = 0x6B737800,eF3Key = 0x6B736300,eF4Key = 0x6B737600,eF5Key = 0x6B736000,eF6Key = 0x6B736100,eF7Key = 0x6B736200,eF8Key = 0x6B736400,eF9Key = 0x6B736500,eF10Key = 0x6B736D00,eF11Key = 0x6B736700,eF12Key = 0x6B736F00,eF13Key = 0x6B736900,eF14Key = 0x6B736B00,eF15Key = 0x6B737100,};
enum $005ED88BC290CA8EF610FA1F0A6593F8 {gestaltRBVAddr = 0x72627620,};
enum $00612D0A7A236F8C980B33E910F13A20 {kLastDomainConstant = 0xFFFF8005,};
struct $0077D5C34ADF0F1ACF745598F18E4EA6 {void *address;mach_msg_size_t count;__int32 deallocate : 8;unsigned __int32 copy : 8;unsigned __int32 disposition : 8;unsigned __int32 type : 8;};
enum $008155B23C6C847D4FC048674B3D561B {interlacedDevice = 0x2,hwMirroredDevice = 0x4,roundedDevice = 0x5,hasAuxMenuBar = 0x6,burstDevice = 0x7,ext32Device = 0x8,ramInit = 0xA,mainScreen = 0xB,allInit = 0xC,screenDevice = 0xD,noDriver = 0xE,screenActive = 0xF,hiliteBit = 0x7,pHiliteBit = 0x0,defQDColors = 0x7F,RGBDirect = 0x10,baseAddr32 = 0x4,};
enum $009AA9BCCC426E323765130C670B7B3B {kOpenCommand = 0x0,kCloseCommand = 0x1,kReadCommand = 0x2,kWriteCommand = 0x3,kControlCommand = 0x4,kStatusCommand = 0x5,kKillIOCommand = 0x6,kInitializeCommand = 0x7,kFinalizeCommand = 0x8,kReplaceCommand = 0x9,kSupersededCommand = 0xA,kSuspendCommand = 0xB,kResumeCommand = 0xC,};
enum $00A17738C60DB5C35B723D2BB0B9AA22 {AIFFID = 0x41494646,AIFCID = 0x41494643,FormatVersionID = 0x46564552,CommonID = 0x434F4D4D,FORMID = 0x464F524D,SoundDataID = 0x53534E44,MarkerID = 0x4D41524B,InstrumentID = 0x494E5354,MIDIDataID = 0x4D494449,AudioRecordingID = 0x41455344,ApplicationSpecificID = 0x4150504C,CommentID = 0x434F4D54,NameID = 0x4E414D45,AuthorID = 0x41555448,CopyrightID = 0x28632920,AnnotationID = 0x414E4E4F,};
enum $00B42A95E11545470801AB30BB910A1E {kNavAllKnownFiles = 0x0,kNavAllReadableFiles = 0x1,kNavAllFiles = 0x2,};
enum $00B8682EB436791A52B8F11CCB13C105 {onlyStyleRun = 0x0,leftStyleRun = 0x1,rightStyleRun = 0x2,middleStyleRun = 0x3,smOnlyStyleRun = 0x0,smLeftStyleRun = 0x1,smRightStyleRun = 0x2,smMiddleStyleRun = 0x3,};
enum $00B9CCC9BC8F3393DFED85A6B77B8031 {kMPAnyRemoteContext = 0x0,kMPOwningProcessRemoteContext = 0x1,kMPInterruptRemoteContext = 0x2,kMPAsyncInterruptRemoteContext = 0x3,};
enum $00C39BE5059D46486D41346DD71B38E0 {kPEFHashSlotSymCountShift = 0x12,kPEFHashSlotFirstKeyMask = 0x3FFFF,kPEFHashSlotMaxSymbolCount = 0x3FFF,kPEFHashSlotMaxKeyIndex = 0x3FFFF,};
enum $00E7B12B2CB11E62A35D034A4ADDBFB5 {cmOpenReadSpool = 0x1,cmOpenWriteSpool = 0x2,cmReadSpool = 0x3,cmWriteSpool = 0x4,cmCloseSpool = 0x5,};
enum $00EFCE7AABA1D73C5909A728385783D8 {pmSleepTimeoutChangedMask = 0x1,pmSleepEnableChangedMask = 0x2,pmHardDiskTimeoutChangedMask = 0x4,pmHardDiskSpindownChangedMask = 0x8,pmDimmingTimeoutChangedMask = 0x10,pmDimmingEnableChangedMask = 0x20,pmDiskModeAddressChangedMask = 0x40,pmProcessorCyclingChangedMask = 0x80,pmProcessorSpeedChangedMask = 0x100,pmWakeupTimerChangedMask = 0x200,pmStartupTimerChangedMask = 0x400,pmHardDiskPowerRemovedbyUserMask = 0x800,pmChargeStatusChangedMask = 0x1000,pmPowerLevelChangedMask = 0x2000,pmWakeOnNetActivityChangedMask = 0x4000,};
enum $010DFC30E1E3DCAF2BFF3CC2ACE21412 {kEventParamMouseLocation = 0x6D6C6F63,kEventParamWindowMouseLocation = 0x776D6F75,kEventParamMouseButton = 0x6D62746E,kEventParamClickCount = 0x63636E74,kEventParamMouseWheelAxis = 0x6D776178,kEventParamMouseWheelDelta = 0x6D77646C,kEventParamMouseDelta = 0x6D647461,kEventParamMouseChord = 0x63686F72,kEventParamTabletEventType = 0x74626C74,kEventParamMouseTrackingRef = 0x6D747266,typeMouseButton = 0x6D62746E,typeMouseWheelAxis = 0x6D776178,typeMouseTrackingRef = 0x6D747266,};
enum $01109142EB886E437B834F04B633E665 {dmOnlyActiveDisplays = 0x1,dmAllDisplays = 0x0,};
enum $01157C99D1B6F47C166272A091A64F0F {gestaltFirstSlotNumber = 0x736C7431,};
enum $0132FDD463E5469078503A1902792BC1 {initChanLeft = 0x2,initChanRight = 0x3,initNoInterp = 0x4,initNoDrop = 0x8,initMono = 0x80,initStereo = 0xC0,initMACE3 = 0x300,initMACE6 = 0x400,initPanMask = 0x3,initSRateMask = 0x30,initStereoMask = 0xC0,initCompMask = 0xFF00,};
enum $014BC53C145D472D41826F61624728DA {pSeeFiles = 0x70727672,pSeeFolders = 0x70727673,pMakeChanges = 0x70727677,};
enum $014FD5288BD4B84357AA142C73191259 {kUSBNoErr = 0x0,kUSBNoTran = 0x0,kUSBNoDelay = 0x0,kUSBPending = 0x1,};
enum $0178FDEBD121719EC674446BBBBE04D2 {kRegPropertyValueIsSavedToNVRAM = 0x20,kRegPropertyValueIsSavedToDisk = 0x40,};
enum $0197A3F738909BC58D37B8762CCC0075 {smScriptVersion = 0x0,smScriptMunged = 0x2,smScriptEnabled = 0x4,smScriptRight = 0x6,smScriptJust = 0x8,smScriptRedraw = 0xA,smScriptSysFond = 0xC,smScriptAppFond = 0xE,smScriptBundle = 0x10,smScriptNumber = 0x10,smScriptDate = 0x12,smScriptSort = 0x14,smScriptFlags = 0x16,smScriptToken = 0x18,smScriptEncoding = 0x1A,smScriptLang = 0x1C,};
enum $01A1E5D009AEC88F1CC26DDD0B50A346 {pApplicationFile = 0x61707066,};
enum $01A6E1A1AFE16BFC1376FB0F49340BF7 {kStoredWindowSystemTag = 0x6170706C,kStoredBasicWindowDescriptionID = 0x73626173,kStoredWindowPascalTitleID = 0x73323535,};
enum $01D64382B3DCFA5691813CCA7DC54A2B {kDelegatedSoundComponentSelectors = 0x100,};
enum $02036559715AB1A087744DDD541D50D3 {kSRNotAvailable = 0xFFFFEC14,kSRInternalError = 0xFFFFEC13,kSRComponentNotFound = 0xFFFFEC12,kSROutOfMemory = 0xFFFFEC11,kSRNotASpeechObject = 0xFFFFEC10,kSRBadParameter = 0xFFFFEC0F,kSRParamOutOfRange = 0xFFFFEC0E,kSRBadSelector = 0xFFFFEC0D,kSRBufferTooSmall = 0xFFFFEC0C,kSRNotARecSystem = 0xFFFFEC0B,kSRFeedbackNotAvail = 0xFFFFEC0A,kSRCantSetProperty = 0xFFFFEC09,kSRCantGetProperty = 0xFFFFEC08,kSRCantSetDuringRecognition = 0xFFFFEC07,kSRAlreadyListening = 0xFFFFEC06,kSRNotListeningState = 0xFFFFEC05,kSRModelMismatch = 0xFFFFEC04,kSRNoClientLanguageModel = 0xFFFFEC03,kSRNoPendingUtterances = 0xFFFFEC02,kSRRecognitionCanceled = 0xFFFFEC01,kSRRecognitionDone = 0xFFFFEC00,kSROtherRecAlreadyModal = 0xFFFFEBFF,kSRHasNoSubItems = 0xFFFFEBFE,kSRSubItemNotFound = 0xFFFFEBFD,kSRLanguageModelTooBig = 0xFFFFEBFC,kSRAlreadyReleased = 0xFFFFEBFB,kSRAlreadyFinished = 0xFFFFEBFA,kSRWordNotFound = 0xFFFFEBF9,kSRNotFinishedWithRejection = 0xFFFFEBF8,kSRExpansionTooDeep = 0xFFFFEBF7,kSRTooManyElements = 0xFFFFEBF6,kSRCantAdd = 0xFFFFEBF5,kSRSndInSourceDisconnected = 0xFFFFEBF4,kSRCantReadLanguageObject = 0xFFFFEBF3,kSRNotImplementedYet = 0xFFFFEBB1,};
enum $020AB1D9FFBBE4809F492F1D53DFA66F : unsigned __int32 {kATSULayoutOperationNone = 0x0,kATSULayoutOperationJustification = 0x1,kATSULayoutOperationMorph = 0x2,kATSULayoutOperationKerningAdjustment = 0x4,kATSULayoutOperationBaselineAdjustment = 0x8,kATSULayoutOperationTrackingAdjustment = 0x10,kATSULayoutOperationPostLayoutAdjustment = 0x20,kATSULayoutOperationAppleReserved = 0xFFFFFFC0,};
enum $022454788FE4172E8B085390B91F04A9 {kPEFPkDataOpcodeShift = 0x5,kPEFPkDataCount5Mask = 0x1F,kPEFPkDataMaxCount5 = 0x1F,kPEFPkDataVCountShift = 0x7,kPEFPkDataVCountMask = 0x7F,kPEFPkDataVCountEndMask = 0x80,};
enum $0229D504423B1860DCC3C74844540279 {kControlCollectionTagBounds = 0x626F756E,kControlCollectionTagValue = 0x76616C75,kControlCollectionTagMinimum = 0x6D696E20,kControlCollectionTagMaximum = 0x6D617820,kControlCollectionTagViewSize = 0x76696577,kControlCollectionTagVisibility = 0x76697369,kControlCollectionTagRefCon = 0x72656663,kControlCollectionTagTitle = 0x7469746C,kControlCollectionTagUnicodeTitle = 0x7574746C,kControlCollectionTagIDSignature = 0x69647369,kControlCollectionTagIDID = 0x69646964,kControlCollectionTagCommand = 0x636D6420,kControlCollectionTagVarCode = 0x76617263,};
enum $0261567807CA20E5152898467B58BA9C {kTXNShowStart = 0x0,kTXNShowEnd = 0x1,};
enum $026AB22D4B12751AF2F9642DA4E30E00 {kCFSocketAutomaticallyReenableReadCallBack = 0x1,kCFSocketAutomaticallyReenableAcceptCallBack = 0x2,kCFSocketAutomaticallyReenableDataCallBack = 0x3,kCFSocketAutomaticallyReenableWriteCallBack = 0x8,kCFSocketCloseOnInvalidate = 0x80,};
enum $027F4A71CC09F8C58025EDB6A6DB14FC : unsigned __int32 {cmDeviceStateDefault = 0x0,cmDeviceStateOffline = 0x1,cmDeviceStateBusy = 0x2,cmDeviceStateForceNotify = 0x80000000,cmDeviceStateDeviceRsvdBits = 0xFF0000,cmDeviceStateAppleRsvdBits = 0xFF00FFFF,};
enum $028187ACE32DAAA463A6E167F8C07F44 {kThemeScrollBarThumbNormal = 0x0,kThemeScrollBarThumbProportional = 0x1,};
enum $02BA74D5F373AE3510806004249404D3 {genericDocumentIconResource = 0xFFFFF060,genericStationeryIconResource = 0xFFFFF06F,genericEditionFileIconResource = 0xFFFFF06B,genericApplicationIconResource = 0xFFFFF064,genericDeskAccessoryIconResource = 0xFFFFF069,genericFolderIconResource = 0xFFFFF061,privateFolderIconResource = 0xFFFFF066,floppyIconResource = 0xFFFFF062,trashIconResource = 0xFFFFF067,genericRAMDiskIconResource = 0xFFFFF06C,genericCDROMIconResource = 0xFFFFF06D,desktopIconResource = 0xFFFFF068,openFolderIconResource = 0xFFFFF063,genericHardDiskIconResource = 0xFFFFF065,genericFileServerIconResource = 0xFFFFF07C,genericSuitcaseIconResource = 0xFFFFF07E,genericMoverObjectIconResource = 0xFFFFF07F,genericPreferencesIconResource = 0xFFFFF07D,genericQueryDocumentIconResource = 0xFFFFBF86,genericExtensionIconResource = 0xFFFFBFE1,systemFolderIconResource = 0xFFFFF071,appleMenuFolderIconResource = 0xFFFFF072,};
enum $02CAFC09A84EE96D576CA23379571E24 {kRegIterRoot = 0x2,kRegIterParents = 0x3,kRegIterChildren = 0x4,kRegIterSubTrees = 0x5,kRegIterDescendants = 0x5,kRegIterSibling = 0x6,kRegIterContinue = 0x1,};
enum $02D5866967F4E054F8180E988A02F698 {delimPad = 0xFFFFFFFE,tokenTilda = 0x2C,tokenCarat = 0x37,};
enum $02DFC17C15CF25E929830BB781289EB8 {kVersionOnePowerSource = 0x1,kVersionTwoPowerSource = 0x2,kCurrentPowerSourceVersion = 0x2,};
enum $0329F96F5C5E4070D6733ACD8BFCB1D0 {kTXNEnableDragAndDrop = 0x0,kTXNDisableDragAndDrop = 0x1,};
enum $032F0AE77CBBDD3683862C18808C2DD6 {pCanConnect = 0x63636F6E,pCanChangePassword = 0x63637077,pCanDoProgramLinking = 0x63696163,pIsOwner = 0x69736F77,pARADialIn = 0x61726164,pShouldCallBack = 0x63616C62,pCallBackNumber = 0x63626E6D,};
enum $0331AD19FD18A06439DAE02095370802 {pSharableContainer = 0x73637472,};
enum $0337B7701AE53305FA5B7C143A584A07 : unsigned __int32 {kNullCFragVersion = 0x0,kWildcardCFragVersion = 0xFFFFFFFF,};
enum $0344920DE12625A3741310F375392A96 {pmCourteous = 0x0,pmDithered = 0x1,pmTolerant = 0x2,pmAnimated = 0x4,pmExplicit = 0x8,pmWhite = 0x10,pmBlack = 0x20,pmInhibitG2 = 0x100,pmInhibitC2 = 0x200,pmInhibitG4 = 0x400,pmInhibitC4 = 0x800,pmInhibitG8 = 0x1000,pmInhibitC8 = 0x2000,pmNoUpdates = 0x8000,pmBkUpdates = 0xA000,pmFgUpdates = 0xC000,pmAllUpdates = 0xE000,};
enum $035F5948C48A376B07D93A69662C1FAB {cmInputUse = 0x696E7074,cmOutputUse = 0x6F757470,cmDisplayUse = 0x64706C79,cmProofUse = 0x70727566,};
enum $038B25DBC5D1BD231897EB39ED16781C {gestaltSoftwareVendorCode = 0x73726164,gestaltSoftwareVendorApple = 0x4170706C,gestaltSoftwareVendorLicensee = 0x4C636E73,};
enum $03A5EBED0B02080DE473E028393514BA {kTSMOutsideOfBody = 0x1,kTSMInsideOfBody = 0x2,kTSMInsideOfActiveInputArea = 0x3,};
enum $03A9CB41A6D002F0D99EF78E8A49E6DD {kAEInteractWithSelf = 0x0,kAEInteractWithLocal = 0x1,kAEInteractWithAll = 0x2,};
enum $03C7596D374A2A209ABB61D96A299AF7 {kPageInMemory = 0x0,kPageOnDisk = 0x1,kNotPaged = 0x2,};
enum $03CB65BAD41664AC8D7BA464E596F001 {kTXNBackgroundTypeRGB = 0x1,};
enum $04308B7CF96C01DC89E23685B761AAE3 {singleDevicesBit = 0x0,dontMatchSeedsBit = 0x1,allDevicesBit = 0x2,};
enum $04468D460BB7BF8AC2C41E5BC0104664 {kNavCBRecVersion = 0x1,};
enum $049B9A38AE5B96F09685535D57999B33 {kFBCsummarizationFailed = 0xFFFF88BB,};
enum $04B5C900BDA7F12AD041AA7581064C2D {cmParametricType0 = 0x0,cmParametricType1 = 0x1,cmParametricType2 = 0x2,cmParametricType3 = 0x3,cmParametricType4 = 0x4,};
enum $04BAE0520DAD878CF60A1C494EFF7B97 {kWindowSupportsDragHilite = 0x80,kWindowSupportsModifiedBit = 0x100,kWindowCanDrawInCurrentPort = 0x200,kWindowCanSetupProxyDragImage = 0x400,kWindowCanMeasureTitle = 0x800,kWindowWantsDisposeAtProcessDeath = 0x1000,kWindowSupportsGetGrowImageRegion = 0x2000,kWindowDefSupportsColorGrafPort = 0x40000002,};
enum $04E1D46E42CDE22B77EBB1D3D6307CC5 {kTXNLeftToRight = 0x0,kTXNRightToLeft = 0x1,};
enum $05053EB1D9EE56B0D52BE6E4EFB80401 : unsigned __int32 {I_SetSerialDTR = 0x5500,kOTSerialSetDTROff = 0x0,kOTSerialSetDTROn = 0x1,I_SetSerialBreak = 0x5501,kOTSerialSetBreakOn = 0xFFFFFFFF,kOTSerialSetBreakOff = 0x0,I_SetSerialXOffState = 0x5502,kOTSerialForceXOffTrue = 0x1,kOTSerialForceXOffFalse = 0x0,I_SetSerialXOn = 0x5503,kOTSerialSendXOnAlways = 0x1,kOTSerialSendXOnIfXOffTrue = 0x0,I_SetSerialXOff = 0x5504,kOTSerialSendXOffAlways = 0x1,kOTSerialSendXOffIfXOnTrue = 0x0,};
enum $054E6DB59A933D4AA3D0AC435B7BFEA9 {kDesignLevel1Selector = 0x0,kDesignLevel2Selector = 0x1,kDesignLevel3Selector = 0x2,kDesignLevel4Selector = 0x3,kDesignLevel5Selector = 0x4,};
enum $054FB9059324A3268B719DC8DD47A459 {kThemeArrowCursor = 0x0,kThemeCopyArrowCursor = 0x1,kThemeAliasArrowCursor = 0x2,kThemeContextualMenuArrowCursor = 0x3,kThemeIBeamCursor = 0x4,kThemeCrossCursor = 0x5,kThemePlusCursor = 0x6,kThemeWatchCursor = 0x7,kThemeClosedHandCursor = 0x8,kThemeOpenHandCursor = 0x9,kThemePointingHandCursor = 0xA,kThemeCountingUpHandCursor = 0xB,kThemeCountingDownHandCursor = 0xC,kThemeCountingUpAndDownHandCursor = 0xD,kThemeSpinningCursor = 0xE,kThemeResizeLeftCursor = 0xF,kThemeResizeRightCursor = 0x10,kThemeResizeLeftRightCursor = 0x11,kThemeNotAllowedCursor = 0x12,};
enum $0575E16F1A2D49BAD32039706322F417 {k68kInterruptLevelMask = 0x7,kInVBLTaskMask = 0x10,kInDeferredTaskMask = 0x20,kInSecondaryIntHandlerMask = 0x40,kInNestedInterruptMask = 0x80,};
enum $057B6098282E3FF245B967EB6CBCEF02 {kUTCUnderflowErr = 0xFFFFDD6E,kUTCOverflowErr = 0xFFFFDD6D,kIllegalClockValueErr = 0xFFFFDD6C,};
enum $057EFA912681033381B618845003773A : unsigned __int32 {kRegNoModifiers = 0x0,kRegUniversalModifierMask = 0xFFFF,kRegNameSpaceModifierMask = 0xFF0000,kRegModifierMask = 0xFF000000,};
struct $0586885F8AB871FEABB9BE424A5B7704 {CFIndex version;CFSetRetainCallBack retain;CFSetReleaseCallBack release;CFSetCopyDescriptionCallBack copyDescription;CFSetEqualCallBack equal;CFSetHashCallBack hash;};
enum $05B3876AF5F2B752225AA65737CFB20B {kOTSerialSwOverRunErr = 0x1,kOTSerialBreakOn = 0x8,kOTSerialParityErr = 0x10,kOTSerialOverrunErr = 0x20,kOTSerialFramingErr = 0x40,kOTSerialXOffSent = 0x10000,kOTSerialDTRNegated = 0x20000,kOTSerialCTLHold = 0x40000,kOTSerialXOffHold = 0x80000,kOTSerialOutputBreakOn = 0x1000000,};
enum $05B54B3173622B5172EB50B3EE42D417 {kTECPluginDispatchTableVersion1 = 0x10000,kTECPluginDispatchTableVersion1_1 = 0x10001,kTECPluginDispatchTableVersion1_2 = 0x10002,kTECPluginDispatchTableCurrentVersion = 0x10002,};
enum $060A717C032BDC1377FEBCDE0A3906C0 {kCanonicalCompositionOnSelector = 0x0,kCanonicalCompositionOffSelector = 0x1,kCompatibilityCompositionOnSelector = 0x2,kCompatibilityCompositionOffSelector = 0x3,kTranscodingCompositionOnSelector = 0x4,kTranscodingCompositionOffSelector = 0x5,};
enum $063AE8DE6193535A5488E81F06FA586D {scsiBusScansDevices = 0x80,scsiBusScansOnInit = 0x40,scsiBusLoadsROMDrivers = 0x20,};
enum $064537A60C27CDC16FC064DC103046D6 {kSRNoFeedbackNoListenModes = 0x0,kSRHasFeedbackHasListenModes = 0x1,kSRNoFeedbackHasListenModes = 0x2,};
enum $064A523EDE51834766DE5EDACE342332 {cmVideoCardGammaTableType = 0x0,cmVideoCardGammaFormulaType = 0x1,};
enum $064B2A1233C1F2D0014DB42922B03A9E {kNavAskSaveChangesSave = 0x1,kNavAskSaveChangesCancel = 0x2,kNavAskSaveChangesDontSave = 0x3,};
enum $068CD43048047099F49F40DC4FF47A37 {kAVDisplayHeadphoneRemove = 0x0,kAVDisplayHeadphoneInsert = 0x1,kAVDisplayPlainTalkRemove = 0x2,kAVDisplayPlainTalkInsert = 0x3,};
enum $06A7D89D3E5DF385EA1BBE3BD8E4D329 {T_UNINIT = 0x0,T_UNBND = 0x1,T_IDLE = 0x2,T_OUTCON = 0x3,T_INCON = 0x4,T_DATAXFER = 0x5,T_OUTREL = 0x6,T_INREL = 0x7,};
enum $06BA4544A28775A78FBF2BA446BEB3FC {kCreateFolder = 0x1,kDontCreateFolder = 0x0,};
enum $06D0183FCC4E9E14A161112D90EC2AA5 {kControlPushButtonDefaultTag = 0x64666C74,kControlPushButtonCancelTag = 0x636E636C,};
enum $06F89DD4CC9D15BAB2B4E894BF37673D : unsigned __int32 {cmColorSpaceSpaceMask = 0x3F,cmColorSpacePremulAlphaMask = 0x40,cmColorSpaceAlphaMask = 0x80,cmColorSpaceSpaceAndAlphaMask = 0xFF,cmColorSpacePackingMask = 0xFF00,cmColorSpaceEncodingMask = 0xF0000,cmColorSpaceReservedMask = 0xFFF00000,};
enum $0727C0C73D84B5A41817ECFAE9A395A4 {k32BitHeap = 0x1,kNewStyleHeap = 0x2,kNewDebugHeap = 0x4,};
enum $072CE19D48F12295ECADDF08F24A1AFB {kPEFRelocBySectDWithSkip = 0x0,kPEFRelocBySectC = 0x20,kPEFRelocBySectD = 0x21,kPEFRelocTVector12 = 0x22,kPEFRelocTVector8 = 0x23,kPEFRelocVTable8 = 0x24,kPEFRelocImportRun = 0x25,kPEFRelocSmByImport = 0x30,kPEFRelocSmSetSectC = 0x31,kPEFRelocSmSetSectD = 0x32,kPEFRelocSmBySection = 0x33,kPEFRelocIncrPosition = 0x40,kPEFRelocSmRepeat = 0x48,kPEFRelocSetPosition = 0x50,kPEFRelocLgByImport = 0x52,kPEFRelocLgRepeat = 0x58,kPEFRelocLgSetOrBySection = 0x5A,kPEFRelocUndefinedOpcode = 0xFF,};
enum $07801A5B3B251E2FE1A1830D91B5053F {EOLHook = 0x0,DRAWHook = 0x4,WIDTHHook = 0x8,HITTESTHook = 0xC,nWIDTHHook = 0x18,TextWidthHook = 0x1C,};
enum $0782C3CBA1BE74BEB5F8B1B1CDE3F35A {kWindowConstrainMayResize = 0x1,kWindowConstrainMoveRegardlessOfFit = 0x2,kWindowConstrainAllowPartial = 0x4,kWindowConstrainCalcOnly = 0x8,kWindowConstrainUseTransitionWindow = 0x10,kWindowConstrainStandardOptions = 0x2,};
enum $079726FA8E10B0382DEE75248E5ADB52 {gestaltMixedModeAttr = 0x6D697864,gestaltMixedModePowerPC = 0x0,gestaltPowerPCAware = 0x0,gestaltMixedModeCFM68K = 0x1,gestaltMixedModeCFM68KHasTrap = 0x2,gestaltMixedModeCFM68KHasState = 0x3,};
enum $079EB790AC217F7371A763DFE897D997 {kPMDestinationInvalid = 0x0,kPMDestinationPrinter = 0x1,kPMDestinationFile = 0x2,kPMDestinationFax = 0x3,kPMDestinationPreview = 0x4,};
enum $07F3003D98F1E28D35F5CE4E8E418ECE {kIOMapAnywhere = 0x1,kIOMapCacheMask = 0x300,kIOMapCacheShift = 0x8,kIOMapDefaultCache = 0x0,kIOMapInhibitCache = 0x100,kIOMapWriteThruCache = 0x200,kIOMapCopybackCache = 0x300,kIOMapUserOptionsMask = 0xFFF,kIOMapReadOnly = 0x1000,kIOMapStatic = 0x1000000,kIOMapReference = 0x2000000,};
enum $07F30EAFE9CC2F5CF34646E5224F6B53 {kInputMask = 0xFF,kOutputMask = 0xFF00,kOutputShift = 0x8,kActionMask = 0xFF0000,kSoundComponentBits = 0xFFFFFF,};
enum $08090D3ECE9494259327219C5C5C9A34 {kNavCtlShowDesktop = 0x0,kNavCtlSortBy = 0x1,kNavCtlSortOrder = 0x2,kNavCtlScrollHome = 0x3,kNavCtlScrollEnd = 0x4,kNavCtlPageUp = 0x5,kNavCtlPageDown = 0x6,kNavCtlGetLocation = 0x7,kNavCtlSetLocation = 0x8,kNavCtlGetSelection = 0x9,kNavCtlSetSelection = 0xA,kNavCtlShowSelection = 0xB,kNavCtlOpenSelection = 0xC,kNavCtlEjectVolume = 0xD,kNavCtlNewFolder = 0xE,kNavCtlCancel = 0xF,kNavCtlAccept = 0x10,kNavCtlIsPreviewShowing = 0x11,kNavCtlAddControl = 0x12,kNavCtlAddControlList = 0x13,kNavCtlGetFirstControlID = 0x14,kNavCtlSelectCustomType = 0x15,kNavCtlSelectAllType = 0x16,kNavCtlGetEditFileName = 0x17,kNavCtlSetEditFileName = 0x18,kNavCtlSelectEditFileName = 0x19,kNavCtlBrowserSelectAll = 0x1A,kNavCtlGotoParent = 0x1B,kNavCtlSetActionState = 0x1C,kNavCtlBrowserRedraw = 0x1D,kNavCtlTerminate = 0x1E,};
enum $080C0C2F86256FEB5785F804E4A6A94B {gestaltScriptCount = 0x73637223,};
enum $082ADC49CA1D03F5602AB2321C5AB672 {kMPQueueInfoVersion = 0x40001,kMPSemaphoreInfoVersion = 0x50001,kMPEventInfoVersion = 0x90001,kMPCriticalRegionInfoVersion = 0x60001,kMPNotificationInfoVersion = 0xC0001,kMPAddressSpaceInfoVersion = 0x80001,};
enum $082D8B3096A6A9502AD1DBEDAE80A461 {kWidePosOffsetBit = 0x8,kUseWidePositioning = 0x100,kMaximumBlocksIn4GB = 0x7FFFFF,};
enum $08A6066FA02C75BBF1F55D83348F25DD {gestaltControlStripAttr = 0x73646576,gestaltControlStripExists = 0x0,gestaltControlStripVersionFixed = 0x1,gestaltControlStripUserFont = 0x2,gestaltControlStripUserHotKey = 0x3,};
enum $08AC6AF10B1028D4DC5011F6592D0036 {coreFoundationUnknownErr = 0xFFFFECA0,};
enum $08CE12B7C999EE30820DED0789418417 {kDisplayGestaltDisplayCommunicationAttr = 0x636F6D6D,kDisplayGestaltForbidI2CMask = 0x1,kDisplayGestaltUseI2CPowerMask = 0x2,kDisplayGestaltCalibratorAttr = 0x63616C69,kDisplayGestaltBrightnessAffectsGammaMask = 0x1,kDisplayGestaltViewAngleAffectsGammaMask = 0x2,};
enum $090FD46DADED99452600AACF39205147 {mDownMask = 0x2,mUpMask = 0x4,keyDownMask = 0x8,keyUpMask = 0x10,autoKeyMask = 0x20,updateMask = 0x40,diskMask = 0x80,activMask = 0x100,highLevelEventMask = 0x400,osMask = 0x8000,everyEvent = 0xFFFF,};
enum $091F7672764E08BA49E41E543956B24C {kControlFocusNoPart = 0x0,kControlFocusNextPart = 0xFFFFFFFF,kControlFocusPrevPart = 0xFFFFFFFE,};
enum $092D5B86DE2298C2BBF52BB67574D92F {kATSOptionFlagsIterateByPrecedenceMask = 0x20,};
enum $093F6409D7EA36C75D181D4E80A8B0F5 {T_COTS = 0x1,T_COTS_ORD = 0x2,T_CLTS = 0x3,T_TRANS = 0x5,T_TRANS_ORD = 0x6,T_TRANS_CLTS = 0x7,};
enum $09554BD3FB767C91A90BD71C7C09A3EC {typeOSADialectInfo = 0x6469666F,keyOSADialectName = 0x646E616D,keyOSADialectCode = 0x64636F64,keyOSADialectLangCode = 0x646C6364,keyOSADialectScriptCode = 0x64736364,};
enum $097B151426666DC164614F9A5766ECD9 {typeKernelProcessID = 0x6B706964,typeMachPort = 0x706F7274,};
enum $099080FD8A57E1EFF6544B14BCC66A13 {kUnicodeUseFallbacksBit = 0x0,kUnicodeKeepInfoBit = 0x1,kUnicodeDirectionalityBits = 0x2,kUnicodeVerticalFormBit = 0x4,kUnicodeLooseMappingsBit = 0x5,kUnicodeStringUnterminatedBit = 0x6,kUnicodeTextRunBit = 0x7,kUnicodeKeepSameEncodingBit = 0x8,kUnicodeForceASCIIRangeBit = 0x9,kUnicodeNoHalfwidthCharsBit = 0xA,kUnicodeTextRunHeuristicsBit = 0xB,kUnicodeMapLineFeedToReturnBit = 0xC,};
enum $099753CE47ABF8F80701B03891665A44 {pInfoPanel = 0x70616E6C,};
enum $09A44E9A6AD8D0F1C197FC7AFB8D211E {kOld68kRTA = 0x0,kPowerPCRTA = 0x0,kCFM68kRTA = 0x10,};
enum $09BADE211816920B750DB196309E036A {kThemeTabNonFront = 0x0,kThemeTabNonFrontPressed = 0x1,kThemeTabNonFrontInactive = 0x2,kThemeTabFront = 0x3,kThemeTabFrontInactive = 0x4,kThemeTabNonFrontUnavailable = 0x5,kThemeTabFrontUnavailable = 0x6,};
enum $09C67811C86049E20C77348F14D9FE47 {errWSInternalError = 0xFFFEFEFF,errWSTransportError = 0xFFFEFEFE,errWSParseError = 0xFFFEFEFD,errWSTimeoutError = 0xFFFEFEFC,};
enum $09CBA27704EC81F2830914C0E8BB2491 {kTXNFontContinuousMask = 0x1,kTXNSizeContinuousMask = 0x2,kTXNStyleContinuousMask = 0x4,kTXNColorContinuousMask = 0x8,};
enum $0A01308231C846FB03E2661DD172448D {cmGeometryUnknown = 0x0,cmGeometry045or450 = 0x1,cmGeometry0dord0 = 0x2,};
enum $0A0625EF45469C099158DFA4C42FBA43 : unsigned __int32 {kOTPortIsDLPI = 0x1,kOTPortIsTPI = 0x2,kOTPortCanYield = 0x4,kOTPortCanArbitrate = 0x8,kOTPortIsTransitory = 0x10,kOTPortAutoConnects = 0x20,kOTPortIsSystemRegistered = 0x4000,kOTPortIsPrivate = 0x8000,kOTPortIsAlias = 0x80000000,};
enum $0A0DD2B7A2EE9AC4400C9911D0B12C93 {kHICommandShowHideFontPanel = 0x73686670,};
enum $0A275DD450337B7241BC0C3FDED98064 {gestaltTE6 = 0x6,};
enum $0A338F6E123203A5D1058BC421FC5D0B {ANYMARK = 0x1,LASTMARK = 0x2,};
enum $0A423D165B02998E3D5C7E472A99E7F5 {kAEISHTTPSearchArgs = 0x6B666F72,kAEISPostArgs = 0x706F7374,kAEISMethod = 0x6D657468,kAEISClientAddress = 0x61646472,kAEISUserName = 0x75736572,kAEISPassword = 0x70617373,kAEISFromUser = 0x66726D75,kAEISServerName = 0x73766E6D,kAEISServerPort = 0x73767074,kAEISScriptName = 0x73636E6D,kAEISContentType = 0x63747970,kAEISReferrer = 0x72656672,kAEISUserAgent = 0x41676E74,kAEISAction = 0x4B616374,kAEISActionPath = 0x4B617074,kAEISClientIP = 0x4B636970,kAEISFullRequest = 0x4B667271,};
enum $0A460A6E82C5C9197C39E6203E2D9451 {nullCmd = 0x0,quietCmd = 0x3,flushCmd = 0x4,reInitCmd = 0x5,waitCmd = 0xA,pauseCmd = 0xB,resumeCmd = 0xC,callBackCmd = 0xD,syncCmd = 0xE,availableCmd = 0x18,versionCmd = 0x19,volumeCmd = 0x2E,getVolumeCmd = 0x2F,clockComponentCmd = 0x32,getClockComponentCmd = 0x33,scheduledSoundCmd = 0x34,linkSoundComponentsCmd = 0x35,soundCmd = 0x50,bufferCmd = 0x51,rateMultiplierCmd = 0x56,getRateMultiplierCmd = 0x57,};
enum $0A4F3543AB28E6CD485E37048951B070 {kBSLNTag = 0x62736C6E,kBSLNCurrentVersion = 0x10000,kBSLNDistanceFormatNoMap = 0x0,kBSLNDistanceFormatWithMap = 0x1,kBSLNControlPointFormatNoMap = 0x2,kBSLNControlPointFormatWithMap = 0x3,};
enum $0A88CE6A6D9CB8403DF5704570E1EF2D {kDPMSSyncOn = 0x0,kDPMSSyncStandby = 0x1,kDPMSSyncSuspend = 0x2,kDPMSSyncOff = 0x7,};
enum $0AACAA3CFC1BB1F6D4A3521FBD9644B0 {scsiExecutionErrors = 0xFFFFE100,scsiNotExecutedErrors = 0xFFFFE130,scsiParameterErrors = 0xFFFFE140,};
enum $0ACE4948B5E85B528885E906C63FA43A {kControlDisclosureButtonClosed = 0x0,kControlDisclosureButtonDisclosed = 0x1,};
enum $0AF1A539848B03141012DCB98478665C {gestaltPowerPCProcessorFeatures = 0x70706366,gestaltPowerPCHasGraphicsInstructions = 0x0,gestaltPowerPCHasSTFIWXInstruction = 0x1,gestaltPowerPCHasSquareRootInstructions = 0x2,gestaltPowerPCHasDCBAInstruction = 0x3,gestaltPowerPCHasVectorInstructions = 0x4,gestaltPowerPCHasDataStreams = 0x5,};
enum $0AF62E8442B36053051B924312B6350D {kPageIsProtected = 0x1,kPageIsProtectedPrivileged = 0x2,kPageIsModified = 0x4,kPageIsReferenced = 0x8,kPageIsLockedResident = 0x10,kPageIsInMemory = 0x20,kPageIsShared = 0x40,kPageIsWriteThroughCached = 0x80,kPageIsCopyBackCached = 0x100,kPageIsHeldResident = 0x200,kPageIsLocked = 0x10,kPageIsResident = 0x20,};
enum $0B113C1C590DDD2E5076DA1B0F1E8C62 {kForceConfirmBit = 0x0,kForceConfirmMask = 0x1,};
enum $0B24756EC24F810A1B7D74328EADBE37 {LNK_ENET = 0x454E4554,LNK_TOKN = 0x544F4B4E,LNK_FDDI = 0x46444449,LNK_TPI = 0x4C545049,};
enum $0B2DC8BE1C9539CE1A7CE8EA5682C703 {vmMorePhysicalThanVirtualErr = 0xFFFFFD8C,vmKernelMMUInitErr = 0xFFFFFD8B,vmOffErr = 0xFFFFFD8A,vmMemLckdErr = 0xFFFFFD89,vmBadDriver = 0xFFFFFD88,vmNoVectorErr = 0xFFFFFD87,};
enum $0B3B6A734729003AB27B8128AFDDCEA8 {cmNativeMatchingPreferred = 0x1,cmTurnOffCache = 0x2,};
enum $0B9B56AD7CDDC864BCB9FEAA060D8B76 {kControlTriangleProc = 0x40,kControlTriangleLeftFacingProc = 0x41,kControlTriangleAutoToggleProc = 0x42,kControlTriangleLeftFacingAutoToggleProc = 0x43,};
struct $0BA82F063C392BF02AF0AA599B603A12 {unsigned int val[2];};
enum $0BB5C76A6C2489DC876B6609A9426F97 {kControlProgressBarProc = 0x50,kControlRelevanceBarProc = 0x51,};
enum $0BBA15E5C3F0B1A36F22585881080D95 {appearanceBadBrushIndexErr = 0xFFFF88A0,appearanceProcessRegisteredErr = 0xFFFF889F,appearanceProcessNotRegisteredErr = 0xFFFF889E,appearanceBadTextColorIndexErr = 0xFFFF889D,appearanceThemeHasNoAccents = 0xFFFF889C,appearanceBadCursorIndexErr = 0xFFFF889B,};
enum $0BCA79403C4958F26F03CA8ADAE133EC {kEventParamHICommand = 0x68636D64,typeHICommand = 0x68636D64,};
enum $0BD16A67C3FA704B1ECBF17B139DC22A {gestaltDictionaryMgrAttr = 0x64696374,gestaltDictionaryMgrPresent = 0x0,};
enum $0BD8C9BA5C51A518CA6C6B989871AE0B {kControlPictureProc = 0x130,kControlPictureNoTrackProc = 0x131,};
enum $0C046DFC744FB1EF9FC22D2F28D24A81 {extendedBlock = 0x4C43,extendedBlockLen = 0x20,};
enum $0C0483DCCEAF8DFD45718DA068D36856 {kIOAsyncReservedIndex = 0x0,kIOAsyncReservedCount = 0x1,kIOAsyncCalloutFuncIndex = 0x1,kIOAsyncCalloutRefconIndex = 0x2,kIOAsyncCalloutCount = 0x3,kIOMatchingCalloutFuncIndex = 0x1,kIOMatchingCalloutRefconIndex = 0x2,kIOMatchingCalloutCount = 0x3,kIOInterestCalloutFuncIndex = 0x1,kIOInterestCalloutRefconIndex = 0x2,kIOInterestCalloutServiceIndex = 0x3,kIOInterestCalloutCount = 0x4,};
enum $0C21C80CD25E8D0260D404EA3AC43DE1 {kMPMaxAllocSize = 0x40000000,};
enum $0C890B43DDBC424EFBF475442A4E679A {kWindowNoAttributes = 0x0,kWindowCloseBoxAttribute = 0x1,kWindowHorizontalZoomAttribute = 0x2,kWindowVerticalZoomAttribute = 0x4,kWindowFullZoomAttribute = 0x6,kWindowCollapseBoxAttribute = 0x8,kWindowResizableAttribute = 0x10,kWindowSideTitlebarAttribute = 0x20,kWindowToolbarButtonAttribute = 0x40,kWindowMetalAttribute = 0x100,kWindowNoUpdatesAttribute = 0x10000,kWindowNoActivatesAttribute = 0x20000,kWindowOpaqueForEventsAttribute = 0x40000,kWindowCompositingAttribute = 0x80000,kWindowNoShadowAttribute = 0x200000,kWindowHideOnSuspendAttribute = 0x1000000,kWindowStandardHandlerAttribute = 0x2000000,kWindowHideOnFullScreenAttribute = 0x4000000,kWindowInWindowMenuAttribute = 0x8000000,kWindowLiveResizeAttribute = 0x10000000,kWindowIgnoreClicksAttribute = 0x20000000,kWindowNoConstrainAttribute = 0x80000000,kWindowStandardDocumentAttributes = 0x1F,kWindowStandardFloatingAttributes = 0x9,};
enum $0CC70779DD9BFC51FAFF91E26389D20A {T_NOTOS = 0x0,T_LDELAY = 0x10,T_HITHRPT = 0x8,T_HIREL = 0x4,};
enum $0CC9C53CD562061450875E4821B07CA7 {gestaltTermMgrAttr = 0x7465726D,gestaltTermMgrPresent = 0x0,gestaltTermMgrErrorString = 0x2,};
enum $0CE592B5184B238B16AB67F4BE1A6C98 {kTextServiceClass = 0x74737663,kUpdateActiveInputArea = 0x75706474,kShowHideInputWindow = 0x73686977,kPos2Offset = 0x70327374,kOffset2Pos = 0x73743270,kUnicodeNotFromInputMethod = 0x756E696D,kGetSelectedText = 0x67747874,keyAETSMDocumentRefcon = 0x72656663,keyAEServerInstance = 0x73727669,keyAETheData = 0x6B646174,keyAEFixLength = 0x6669786C,keyAEUpdateRange = 0x75646E67,keyAECurrentPoint = 0x63706F73,keyAEBufferSize = 0x62756666,keyAEMoveView = 0x6D767677,keyAENextBody = 0x6E786264,keyAETSMScriptTag = 0x73636C67,keyAETSMTextFont = 0x6B747866,keyAETSMTextFMFont = 0x6B74786D,keyAETSMTextPointSize = 0x6B747073,keyAETSMEventRecord = 0x74657674,keyAETSMEventRef = 0x74657672,keyAETextServiceEncoding = 0x7473656E,keyAETextServiceMacEncoding = 0x746D656E,keyAETSMGlyphInfoArray = 0x74676961,typeTextRange = 0x7478726E,typeComponentInstance = 0x636D7069,typeOffsetArray = 0x6F666179,typeTextRangeArray = 0x74726179,typeLowLevelEventRecord = 0x65767472,typeGlyphInfoArray = 0x676C6961,typeEventRef = 0x65767266,typeText = 0x54455854,};
enum $0D00CBF57566D26CC7EAA4A4555D8C6B {gestaltResourceMgrBugFixesAttrs = 0x726D6267,gestaltRMForceSysHeapRolledIn = 0x0,gestaltRMFakeAppleMenuItemsRolledIn = 0x1,gestaltSanityCheckResourceFiles = 0x2,gestaltSupportsFSpResourceFileAlreadyOpenBit = 0x3,gestaltRMSupportsFSCalls = 0x4,gestaltRMTypeIndexOrderingReverse = 0x8,};
enum $0D1052CEC98F9244EC14C82F7E5CB6D7 {cmSpotFunctionUnknown = 0x0,cmSpotFunctionDefault = 0x1,cmSpotFunctionRound = 0x2,cmSpotFunctionDiamond = 0x3,cmSpotFunctionEllipse = 0x4,cmSpotFunctionLine = 0x5,cmSpotFunctionSquare = 0x6,cmSpotFunctionCross = 0x7,};
enum $0D1879BBBB447582643B9B4E96A59577 {gestaltVIA1Addr = 0x76696131,};
enum $0D3445E7CAF63059810E30EE741ACD78 {kDragBehaviorNone = 0x0,kDragBehaviorZoomBackAnimation = 0x1,};
enum $0D374811243B97B39193E78F7E2BA8D4 {pmBusyErr = 0xFFFFCD38,pmReplyTOErr = 0xFFFFCD37,pmSendStartErr = 0xFFFFCD36,pmSendEndErr = 0xFFFFCD35,pmRecvStartErr = 0xFFFFCD34,pmRecvEndErr = 0xFFFFCD33,};
enum $0D4AF509899D89B349F21D9B03E86EA4 {kDataBrowserViewSpecificFlagsOffset = 0x10,kDataBrowserViewSpecificFlagsMask = 0xFF0000,kDataBrowserViewSpecificPropertyFlags = 0xFF0000,};
enum $0D9886A02301B8A6DE3639311DF14704 {kThemeMetricCheckBoxGlyphHeight = 0x2,kThemeMetricRadioButtonGlyphHeight = 0x3,kThemeMetricDisclosureButtonSize = 0x11,kThemeMetricBestListHeaderHeight = 0x14,kThemeMetricSmallProgressBarThickness = 0x3A,kThemeMetricProgressBarThickness = 0x20,};
enum $0DE4FE36E4BB3BB57C46986B8C12D1CA {kControlKindPushButton = 0x70757368,kControlKindPushIconButton = 0x7069636E,kControlKindRadioButton = 0x7264696F,kControlKindCheckBox = 0x63626F78,};
enum $0DF6A2A4F897C901432374EC7E35B689 {cmBeginProfileSel = 0x0,cmContinueProfileSel = 0x1,cmEndProfileSel = 0x2,cmProfileIdentifierSel = 0x3,};
enum $0DF702257E408113D2F6E52712EF3648 {sampledSynth = 0x5,};
enum $0E23D599E11DBFBA963BDC553F57C6A0 {RNORM = 0x1,RMSGD = 0x2,RMSGN = 0x4,RFILL = 0x8,};
enum $0E422A2F8845AB6F0250A97DB9867B0F {kCFURLUnknownError = 0xFFFFFFF6,kCFURLUnknownSchemeError = 0xFFFFFFF5,kCFURLResourceNotFoundError = 0xFFFFFFF4,kCFURLResourceAccessViolationError = 0xFFFFFFF3,kCFURLRemoteHostUnavailableError = 0xFFFFFFF2,kCFURLImproperArgumentsError = 0xFFFFFFF1,kCFURLUnknownPropertyKeyError = 0xFFFFFFF0,kCFURLPropertyKeyUnavailableError = 0xFFFFFFEF,kCFURLTimeoutError = 0xFFFFFFEE,};
enum $0E640C4DDE8DBB6DD782A226C9210351 {kThemeGrowLeft = 0x1,kThemeGrowRight = 0x2,kThemeGrowUp = 0x4,kThemeGrowDown = 0x8,};
enum $0E6E686A91C8FC8FE2348130C5D81D38 {smSDMInitErr = 0xFFFFFEDE,smSRTInitErr = 0xFFFFFEDD,smPRAMInitErr = 0xFFFFFEDC,smPriInitErr = 0xFFFFFEDB,smEmptySlot = 0xFFFFFED4,smCRCFail = 0xFFFFFED3,smFormatErr = 0xFFFFFED2,smRevisionErr = 0xFFFFFED1,smNoDir = 0xFFFFFED0,smDisabledSlot = 0xFFFFFECF,smNosInfoArray = 0xFFFFFECE,};
enum $0E7B9C03955ED082648E8FAAA36FDDE5 {kEventUpdateActiveInputArea = 0x1,kEventUnicodeForKeyEvent = 0x2,kEventOffsetToPos = 0x3,kEventPosToOffset = 0x4,kEventShowHideBottomWindow = 0x5,kEventGetSelectedText = 0x6,};
enum $0E89879D61237E8E6722620A3B96311B {kFAServerApp = 0x73737276,kDoFolderActionEvent = 0x666F6C61,kFolderActionCode = 0x6163746E,kFolderOpenedEvent = 0x666F706E,kFolderClosedEvent = 0x66636C6F,kFolderWindowMovedEvent = 0x6673697A,kFolderItemsAddedEvent = 0x66676574,kFolderItemsRemovedEvent = 0x666C6F73,kItemList = 0x666C7374,kNewSizeParameter = 0x666E737A,kFASuiteCode = 0x6661636F,kFAAttachCommand = 0x61746661,kFARemoveCommand = 0x726D6661,kFAEditCommand = 0x65646661,kFAFileParam = 0x6661616C,kFAIndexParam = 0x696E6478,};
enum $0EB2814EA2665D683234383CB0B4CBBB {kFolderManagerUserRedirectionGlobalsCurrentVersion = 0x1,};
enum $0ED4E2625F0C5AC1DF0402E369412501 {gestaltOCEToolboxVersion = 0x6F636574,gestaltOCETB = 0x102,gestaltSFServer = 0x100,};
enum $0F056847C7D9D2AAEA687063E1798BB6 {kControlStaticTextTruncTag = 0x7472756E,};
enum $0F2ED4E17A111F5C22C46606F7BDBC4A {cHandleBreakpoint = 0x6272616B,};
enum $0F37A042B2E7B56B7C111603D97B657C {kDefaultCFragNameLen = 0x10,};
enum $0F6D8856BC3B794ED06CA81DC26BD570 {kLSUnknownType = 0x0,kLSUnknownCreator = 0x0,};
enum $0F96118CB397B5D99E97DDB1A09789D7 {kQDRegionToRectsMsgInit = 0x1,kQDRegionToRectsMsgParse = 0x2,kQDRegionToRectsMsgTerminate = 0x3,};
enum $0F9C744F102BDB9FC7DC88ACDF005FB0 : unsigned __int32 {keaStandardAddress = 0x0,keaMulticast = 0x1,keaBroadcast = 0x2,keaBadAddress = 0x3,keaRawPacketBit = 0x80000000,keaTimeStampBit = 0x40000000,};
enum $0FA8C27A3576B43468EA81A201B45E80 {kTileIconVariant = 0x74696C65,kRolloverIconVariant = 0x6F766572,kDropIconVariant = 0x64726F70,kOpenIconVariant = 0x6F70656E,kOpenDropIconVariant = 0x6F647270,};
struct $0FB16B1A38E2E40FBD3F3EF96804B817 {void *address;mach_msg_size_t size;__int32 deallocate : 8;unsigned __int32 copy : 8;unsigned __int32 pad1 : 8;unsigned __int32 type : 8;};
enum $0FD433CB07F46E26BBD802E526778CC4 {gestaltMiscAttr = 0x6D697363,gestaltScrollingThrottle = 0x0,gestaltSquareMenuBar = 0x2,};
enum $0FD93849657B1728D859F4D2CD9B52B7 {kControlScrollBarProc = 0x180,kControlScrollBarLiveProc = 0x182,};
enum $1008A7BE77D47E0DE7CCAA1367CF3738 {kLowerCaseNumbersSelector = 0x0,kUpperCaseNumbersSelector = 0x1,};
enum $1014588365877AFD25E859D84C4C8176 {invalidIconRefErr = 0xFFFFF5EC,noSuchIconErr = 0xFFFFF5EB,noIconDataAvailableErr = 0xFFFFF5EA,};
enum $10264D941E34CCA96EC0AD44D1D44723 {kSetClutAtSetEntries = 0x0,kSetClutAtVBL = 0x1,};
enum $10CA0AA7DA46E7950699BB60B139A379 {kATSFlatDataUstlVersion0 = 0x0,kATSFlatDataUstlVersion1 = 0x1,kATSFlatDataUstlVersion2 = 0x2,kATSFlatDataUstlCurrentVersion = 0x2,};
enum $10EBE52A38E753D20862EE3FC02E2BA2 {kHIToolbarNoAttributes = 0x0,kHIToolbarAutoSavesConfig = 0x1,kHIToolbarIsConfigurable = 0x2,kHIToolbarValidAttrs = 0x3,};
enum $10F4024D4EB0B6F4F7ACA1683C8FE2A6 {kPEFCodeSection = 0x0,kPEFUnpackedDataSection = 0x1,kPEFPackedDataSection = 0x2,kPEFConstantSection = 0x3,kPEFExecDataSection = 0x6,kPEFLoaderSection = 0x4,kPEFDebugSection = 0x5,kPEFExceptionSection = 0x7,kPEFTracebackSection = 0x8,};
enum $1104F0155BF283F3C3CF904C24C07400 {kIconServicesNormalUsageFlag = 0x0,};
enum $111F8E47955483A26B366F9302FAA868 {kAllATalkRoutersDown = 0x0,kLocalATalkRoutersDown = 0xFFFFFFFF,kARARouterDisconnected = 0xFFFFFFFE,};
enum $116385E0655E5E0F13F39815170102F6 {cmspInvalidImageFile = 0xFFFFEF84,cmspInvalidImageSpace = 0xFFFFEF83,cmspInvalidProfileEmbed = 0xFFFFEF82,cmspInvalidProfileSource = 0xFFFFEF81,cmspInvalidProfileDest = 0xFFFFEF80,cmspInvalidProfileProof = 0xFFFFEF7F,cmspInvalidProfileLink = 0xFFFFEF7E,};
enum $1199C9C0394ECBB14613B33AC10D9468 {kLocalesFolderType = 0xC46C6F63,kFindByContentPluginsFolderType = 0x66626370,};
enum $119F4E0EC5B07E288DE69B7EBF58E813 {kUnicodeMatchUnicodeBaseBit = 0x0,kUnicodeMatchUnicodeVariantBit = 0x1,kUnicodeMatchUnicodeFormatBit = 0x2,kUnicodeMatchOtherBaseBit = 0x3,kUnicodeMatchOtherVariantBit = 0x4,kUnicodeMatchOtherFormatBit = 0x5,};
enum $11E2B0BB54D4584721B233463E91C7E9 {kEventMouseDown = 0x1,kEventMouseUp = 0x2,kEventMouseMoved = 0x5,kEventMouseDragged = 0x6,kEventMouseEntered = 0x8,kEventMouseExited = 0x9,kEventMouseWheelMoved = 0xA,};
enum $11F239D662155182E8A6ED74AE3D52F8 {kControlKindEditUnicodeText = 0x65757478,};
enum $121E1AC3EB6A789387393DDCCEF5B35F {kGenericFolderIcon = 0x666C6472,kDropFolderIcon = 0x64626F78,kMountedFolderIcon = 0x6D6E7464,kOpenFolderIcon = 0x6F666C64,kOwnedFolderIcon = 0x6F776E64,kPrivateFolderIcon = 0x70727666,kSharedFolderIcon = 0x7368666C,};
enum $12300EE85CBDD78DB8ECB00FF56C5099 {kDisplayTimingInfoVersionZero = 0x1,kDisplayTimingInfoReservedCountVersionZero = 0x10,kDisplayModeEntryVersionZero = 0x0,kDisplayModeEntryVersionOne = 0x1,};
enum $124B04BDEFDD129AA1871A00FF0D0C6A {TSUCCESS = 0x0,TBADADDR = 0x1,TBADOPT = 0x2,TACCES = 0x3,TBADF = 0x4,TNOADDR = 0x5,TOUTSTATE = 0x6,TBADSEQ = 0x7,TSYSERR = 0x8,TLOOK = 0x9,TBADDATA = 0xA,TBUFOVFLW = 0xB,TFLOW = 0xC,TNODATA = 0xD,TNODIS = 0xE,TNOUDERR = 0xF,TBADFLAG = 0x10,TNOREL = 0x11,TNOTSUPPORT = 0x12,TSTATECHNG = 0x13,TNOSTRUCTYPE = 0x14,TBADNAME = 0x15,TBADQLEN = 0x16,TADDRBUSY = 0x17,TINDOUT = 0x18,TPROVMISMATCH = 0x19,TRESQLEN = 0x1A,TRESADDR = 0x1B,TQFULL = 0x1C,TPROTO = 0x1D,TBADSYNC = 0x1E,TCANCELED = 0x1F,TLASTXTIERROR = 0x1F,};
enum $1283A0DA6CAB0A3868EA56F9A3F42ADF {kControlSliderPointsDownOrRight = 0x0,kControlSliderPointsUpOrLeft = 0x1,kControlSliderDoesNotPoint = 0x2,};
enum $1284ADA2EABC91327A4013CC52F7A932 {kMacRomanDefaultVariant = 0x0,kMacRomanCurrencySignVariant = 0x1,kMacRomanEuroSignVariant = 0x2,};
enum $12C3139B97558B27659DDFAD3CF40167 {kOSAErrorExpectedType = 0x65727274,};
enum $12CF47F04AB5F306DFB24CFF4C04BCCC {pmSleepTimeoutChanged = 0x0,pmSleepEnableChanged = 0x1,pmHardDiskTimeoutChanged = 0x2,pmHardDiskSpindownChanged = 0x3,pmDimmingTimeoutChanged = 0x4,pmDimmingEnableChanged = 0x5,pmDiskModeAddressChanged = 0x6,pmProcessorCyclingChanged = 0x7,pmProcessorSpeedChanged = 0x8,pmWakeupTimerChanged = 0x9,pmStartupTimerChanged = 0xA,pmHardDiskPowerRemovedbyUser = 0xB,pmChargeStatusChanged = 0xC,pmPowerLevelChanged = 0xD,pmWakeOnNetActivityChanged = 0xE,};
enum $12D56C7F49369303C6B0C6C021D51378 {typeATSUFontID = 0x6D61676E,typeATSUSize = 0x66697864,typeFMFontFamily = 0x73686F72,typeFMFontStyle = 0x73686F72,typeFMFontSize = 0x73686F72,typeFontColor = 0x63524742,kEventParamATSUFontID = 0x61756964,kEventParamATSUFontSize = 0x6175737A,kEventParamFMFontFamily = 0x666D666D,kEventParamFMFontStyle = 0x666D7374,kEventParamFMFontSize = 0x666D737A,kEventParamFontColor = 0x66636C72,};
enum $12D5BA85182B008BFB0D2FEB1B2BF9EB {kLASpeechRoughClassMask = 0xF000,kLASpeechMediumClassMask = 0xFF00,kLASpeechStrictClassMask = 0xFFF0,kLASpeechKatsuyouMask = 0xF,};
enum $13070B149542CFE15D6D247C314A56D7 {kFMDefaultIterationScope = 0x0,kFMGlobalIterationScope = 0x1,kFMLocalIterationScope = 0x0,};
enum $13284D064FBF5B8A41AD44A0643E2FBE {kCMHelpItemNoHelp = 0x0,kCMHelpItemAppleGuide = 0x1,kCMHelpItemOtherHelp = 0x2,kCMHelpItemRemoveHelp = 0x3,};
enum $13397BB433CDB811F5BA4DD11FBCCF81 {kDataBrowserEditMsgUndo = 0x756E646F,kDataBrowserEditMsgRedo = 0x7265646F,kDataBrowserEditMsgCut = 0x63757420,kDataBrowserEditMsgCopy = 0x636F7079,kDataBrowserEditMsgPaste = 0x70617374,kDataBrowserEditMsgClear = 0x636C6561,kDataBrowserEditMsgSelectAll = 0x73616C6C,};
enum $13735D0E25C27A5FA55B2F9E58467942 {gestaltConnMgrAttr = 0x636F6E6E,gestaltConnMgrPresent = 0x0,gestaltConnMgrCMSearchFix = 0x1,gestaltConnMgrErrorString = 0x2,gestaltConnMgrMultiAsyncIO = 0x3,};
enum $1381B698354A99C3E10D94E51E14B61E {noMark = 0x0,};
enum $139AF04F239104A5F94C2A114AC47BFF {defaultComponentIdentical = 0x0,defaultComponentAnyFlags = 0x1,defaultComponentAnyManufacturer = 0x2,defaultComponentAnySubType = 0x4,defaultComponentAnyFlagsAnyManufacturer = 0x3,defaultComponentAnyFlagsAnyManufacturerAnySubType = 0x7,};
enum $13BCE040465F1573CAE3ABB1D506CDAB {atNone = 0x0,atVerticalCenter = 0x1,atTop = 0x2,atBottom = 0x3,atHorizontalCenter = 0x4,atAbsoluteCenter = 0x5,atCenterTop = 0x6,atCenterBottom = 0x7,atLeft = 0x8,atCenterLeft = 0x9,atTopLeft = 0xA,atBottomLeft = 0xB,atRight = 0xC,atCenterRight = 0xD,atTopRight = 0xE,atBottomRight = 0xF,};
enum $13F276F25186D13A1FC015FA02F79324 {tokenIntl = 0x4,tokenEmpty = 0xFFFFFFFF,};
enum $13F38FDE1E2B78F79E1D8FD54766EC4F {kThemeActiveDialogTextColor = 0x1,kThemeInactiveDialogTextColor = 0x2,kThemeActiveAlertTextColor = 0x3,kThemeInactiveAlertTextColor = 0x4,kThemeActiveModelessDialogTextColor = 0x5,kThemeInactiveModelessDialogTextColor = 0x6,kThemeActiveWindowHeaderTextColor = 0x7,kThemeInactiveWindowHeaderTextColor = 0x8,kThemeActivePlacardTextColor = 0x9,kThemeInactivePlacardTextColor = 0xA,kThemePressedPlacardTextColor = 0xB,kThemeActivePushButtonTextColor = 0xC,kThemeInactivePushButtonTextColor = 0xD,kThemePressedPushButtonTextColor = 0xE,kThemeActiveBevelButtonTextColor = 0xF,kThemeInactiveBevelButtonTextColor = 0x10,kThemePressedBevelButtonTextColor = 0x11,kThemeActivePopupButtonTextColor = 0x12,kThemeInactivePopupButtonTextColor = 0x13,kThemePressedPopupButtonTextColor = 0x14,kThemeIconLabelTextColor = 0x15,kThemeListViewTextColor = 0x16,};
enum $13FD81355811319D7551F83EBB349AD7 {kOSAErrorBriefMessage = 0x65727262,};
enum $140D223C46AA329EA03F6C982D1A00AD {scsiStatGood = 0x0,scsiStatCheckCondition = 0x2,scsiStatConditionMet = 0x4,scsiStatBusy = 0x8,scsiStatIntermediate = 0x10,scsiStatIntermedMet = 0x14,scsiStatResvConflict = 0x18,scsiStatTerminated = 0x22,scsiStatQFull = 0x28,};
enum $141B23B961AB000ED23D4AC400E18EFC {kHIComboBoxNoAttributes = 0x0,kHIComboBoxAutoCompletionAttribute = 0x1,kHIComboBoxAutoDisclosureAttribute = 0x2,kHIComboBoxAutoSortAttribute = 0x4,kHIComboBoxAutoSizeListAttribute = 0x8,kHIComboBoxStandardAttributes = 0xB,};
enum $141F51B9412041C449C4B6EF51C15BF7 {kDataBrowserItemsAdd = 0x0,kDataBrowserItemsAssign = 0x1,kDataBrowserItemsToggle = 0x2,kDataBrowserItemsRemove = 0x3,};
enum $141F72CF1B17A277A49BF921B8702916 {kLargeIconSize = 0x100,kLarge4BitIconSize = 0x200,kLarge8BitIconSize = 0x400,kSmallIconSize = 0x40,kSmall4BitIconSize = 0x80,kSmall8BitIconSize = 0x100,};
enum $14338A5B3D28FC26400B4BB31F21F442 {notBTree = 0xFFFFFE66,btNoSpace = 0xFFFFFE63,btDupRecErr = 0xFFFFFE62,btRecNotFnd = 0xFFFFFE61,btKeyLenErr = 0xFFFFFE60,btKeyAttrErr = 0xFFFFFE5F,unknownInsertModeErr = 0xFFFFB1E0,recordDataTooBigErr = 0xFFFFB1DF,invalidIndexErr = 0xFFFFB1DE,};
enum $145E67403CC27530E2BE7E59FF2C99D3 {kSizeOfTPrint = 0x78,};
enum $146929F84F574636EE9A576CD5732870 {kAnyProtocol = 0x0,kAnyAuthType = 0x0,};
enum $147E82B1B28920CD4B3E15BD59C82A4F {italicBit = 0x1,ulineBit = 0x2,outlineBit = 0x3,shadowBit = 0x4,condenseBit = 0x5,extendBit = 0x6,};
enum $149048929B1F560BCE434A0720B743F4 {kWindowModalityNone = 0x0,kWindowModalitySystemModal = 0x1,kWindowModalityAppModal = 0x2,kWindowModalityWindowModal = 0x3,};
enum $14904ED59AACBB5EDEEE60143C77F692 {GREATERTHAN = 0x0,LESSTHAN = 0x1,EQUALTO = 0x2,UNORDERED = 0x3,};
union $149468D43E4B0BB405DED2721C573480 {char __mbstate8[128];__int64 _mbstateL;};
enum $14A9DF255FA0CE5018F289A56E63A296 {tsmComponentNoErr = 0x0,tsmUnsupScriptLanguageErr = 0xFFFFF63C,tsmInputMethodNotFoundErr = 0xFFFFF63B,tsmNotAnAppErr = 0xFFFFF63A,tsmAlreadyRegisteredErr = 0xFFFFF639,tsmNeverRegisteredErr = 0xFFFFF638,tsmInvalidDocIDErr = 0xFFFFF637,tsmTSMDocBusyErr = 0xFFFFF636,tsmDocNotActiveErr = 0xFFFFF635,tsmNoOpenTSErr = 0xFFFFF634,tsmCantOpenComponentErr = 0xFFFFF633,tsmTextServiceNotFoundErr = 0xFFFFF632,tsmDocumentOpenErr = 0xFFFFF631,tsmUseInputWindowErr = 0xFFFFF630,tsmTSHasNoMenuErr = 0xFFFFF62F,tsmTSNotOpenErr = 0xFFFFF62E,tsmComponentAlreadyOpenErr = 0xFFFFF62D,tsmInputMethodIsOldErr = 0xFFFFF62C,tsmScriptHasNoIMErr = 0xFFFFF62B,tsmUnsupportedTypeErr = 0xFFFFF62A,tsmUnknownErr = 0xFFFFF629,tsmInvalidContext = 0xFFFFF628,tsmNoHandler = 0xFFFFF627,tsmNoMoreTokens = 0xFFFFF626,tsmNoStem = 0xFFFFF625,tsmDefaultIsNotInputMethodErr = 0xFFFFF624,tsmDocPropertyNotFoundErr = 0xFFFFF620,tsmDocPropertyBufferTooSmallErr = 0xFFFFF61F,tsmCantChangeForcedClassStateErr = 0xFFFFF61E,};
enum $14D42046BADA2A578DB7A6526353A20A {kRegisterD0 = 0x0,kRegisterD1 = 0x1,kRegisterD2 = 0x2,kRegisterD3 = 0x3,kRegisterD4 = 0x8,kRegisterD5 = 0x9,kRegisterD6 = 0xA,kRegisterD7 = 0xB,kRegisterA0 = 0x4,kRegisterA1 = 0x5,kRegisterA2 = 0x6,kRegisterA3 = 0x7,kRegisterA4 = 0xC,kRegisterA5 = 0xD,kRegisterA6 = 0xE,kCCRegisterCBit = 0x10,kCCRegisterVBit = 0x11,kCCRegisterZBit = 0x12,kCCRegisterNBit = 0x13,kCCRegisterXBit = 0x14,};
enum $15316E1F4A06DF5737D2E4A1C671F46F {picLParen = 0x0,picRParen = 0x1,clutType = 0x0,fixedType = 0x1,directType = 0x2,gdDevType = 0x0,};
enum $1547518B815DD28A608C2D2038905619 {kVideoBusTypeInvalid = 0x0,kVideoBusTypeI2C = 0x1,};
enum $15527A7957C35DDC42E8F9BAFCC21D16 {CDEFNFnd = 0x58,dsNotThe1 = 0x1F,dsBadStartupDisk = 0x2A,dsSystemFileErr = 0x2B,dsHD20Installed = 0xFFFFFFF4,mBarNFnd = 0xFFFFFF82,fsDSIntErr = 0xFFFFFF81,hMenuFindErr = 0xFFFFFF81,userBreak = 0xFFFFFE16,strUserBreak = 0xFFFFFE15,exUserBreak = 0xFFFFFE14,};
enum $159A2294D95B3B569822A5BAD5B2813B {kStartupFolderIconResource = 0xFFFFF073,kOwnedFolderIconResource = 0xFFFFF074,kDropFolderIconResource = 0xFFFFF075,kSharedFolderIconResource = 0xFFFFF076,kMountedFolderIconResource = 0xFFFFF077,kControlPanelFolderIconResource = 0xFFFFF078,kPrintMonitorFolderIconResource = 0xFFFFF079,kPreferencesFolderIconResource = 0xFFFFF07A,kExtensionsFolderIconResource = 0xFFFFF07B,kFontsFolderIconResource = 0xFFFFF080,kFullTrashIconResource = 0xFFFFF070,};
enum $15ABA46515E6848C2CDCE3F746CBE322 {gestaltFBCIndexingState = 0x66626369,gestaltFBCindexingSafe = 0x0,gestaltFBCindexingCritical = 0x1,};
enum $15B474B0157EF27E4DCE242BA0AE207F {kMacRomanStandardVariant = 0x0,kMacIcelandicStandardVariant = 0x0,kMacIcelandicTrueTypeVariant = 0x1,kJapaneseStandardVariant = 0x0,kJapaneseStdNoVerticalsVariant = 0x1,kJapaneseBasicVariant = 0x2,kJapanesePostScriptScrnVariant = 0x3,kJapanesePostScriptPrintVariant = 0x4,kJapaneseVertAtKuPlusTenVariant = 0x5,kHebrewStandardVariant = 0x0,kHebrewFigureSpaceVariant = 0x1,kUnicodeMaxDecomposedVariant = 0x2,kUnicodeNoComposedVariant = 0x3,kJapaneseNoOneByteKanaOption = 0x20,kJapaneseUseAsciiBackslashOption = 0x40,};
enum $15BAEF7D44DFEB3C1730DD79F1BB95FB {kEventKeyModifierNumLockBit = 0x10,kEventKeyModifierFnBit = 0x11,};
enum $15BFCB8F46334C75258FAB9C014D7B72 {kControlKindGroupBox = 0x67727062,kControlKindCheckGroupBox = 0x63677270,kControlKindPopupGroupBox = 0x70677270,};
struct $15CE29027F05B8BB8B125DB29B7163BF {mach_msg_header_t header;};
enum $15FBF4E6B0E48270A9D25DDC074F96E3 {kICNilProfileID = 0x0,};
enum $16086E8427C45387E1BF220C4C33A4B4 {sbSIGWord = 0x4552,sbMac = 0x1,};
enum $16646CFA796893B390DB9F42833E7426 {kDepthMode1 = 0x80,kDepthMode2 = 0x81,kDepthMode3 = 0x82,kDepthMode4 = 0x83,kDepthMode5 = 0x84,kDepthMode6 = 0x85,};
enum $168C2AAF3B0BCDA3A24984F7C6E746CC {kPLIncludeOfflineDevicesBit = 0x0,};
enum $1699EC0844F3EEA22797F03D827335E8 {DDP_OPT_CHECKSUM = 0x600,DDP_OPT_SRCADDR = 0x2101,ATP_OPT_REPLYCNT = 0x2110,ATP_OPT_DATALEN = 0x2111,ATP_OPT_RELTIMER = 0x2112,ATP_OPT_TRANID = 0x2113,PAP_OPT_OPENRETRY = 0x2120,};
enum $169DC22076385F7FE881D14DAF92F626 {errDataBrowserNotConfigured = 0xFFFFEC96,errDataBrowserItemNotFound = 0xFFFFEC95,errDataBrowserItemNotAdded = 0xFFFFEC91,errDataBrowserPropertyNotFound = 0xFFFFEC94,errDataBrowserInvalidPropertyPart = 0xFFFFEC93,errDataBrowserInvalidPropertyData = 0xFFFFEC92,errDataBrowserPropertyNotSupported = 0xFFFFEC8D,};
enum $169EEFEA975624D263180E82654D67B6 {kAEIDoMinimum = 0x0,kAEIDoWhose = 0x1,kAEIDoMarking = 0x4,kAEPassSubDescs = 0x8,kAEResolveNestedLists = 0x10,kAEHandleSimpleRanges = 0x20,kAEUseRelativeIterators = 0x40,};
enum $16B20E4CE70AE12732E3933813D00105 {kAF_ISDN = 0x2000,};
enum $16B8BA5CB40CC98C120C1A3F64C9506F {kUCCollateTypeHFSExtended = 0x1,};
enum $16BA785E33E9E6E069782B64703C2921 {kICAPBVersion = 0x10000,};
enum $16F26E6451236D05421FD27FE8FC2E5B {gestaltSCCWriteAddr = 0x73636377,};
enum $170F9D9AAA6AD57A7C24E3FE30E727F5 {kControlChasingArrowsAnimatingTag = 0x616E696D,};
enum $1717D318042FF44418DB68821BE4AE0D {kASStartLogEvent = 0x6C6F6731,kASStopLogEvent = 0x6C6F6730,kASCommentEvent = 0x636D6E74,};
enum $1774B657DAC30771F6310329C2BB35A8 {kAnyComponentType = 0x0,kAnyComponentSubType = 0x0,kAnyComponentManufacturer = 0x0,kAnyComponentFlagsMask = 0x0,};
enum $17A35A63C9C0BE283E9353162CC79176 {kThemeButtonOff = 0x0,kThemeButtonOn = 0x1,kThemeButtonMixed = 0x2,kThemeDisclosureRight = 0x0,kThemeDisclosureDown = 0x1,kThemeDisclosureLeft = 0x2,};
enum $17BB229EB49BAA6EA08A01C730C9DA63 {gestaltDialogMgrAttr = 0x646C6F67,gestaltDialogMgrPresent = 0x1,gestaltDialogMgrPresentBit = 0x0,gestaltDialogMgrHasAquaAlertBit = 0x2,gestaltDialogMgrPresentMask = 0x1,gestaltDialogMgrHasAquaAlertMask = 0x4,gestaltDialogMsgPresentMask = 0x1,};
enum $17DFC21A6F91FB3CB816F3AFA94C73CF {gestaltSafeOFAttr = 0x73616665,gestaltVMZerosPagesBit = 0x0,gestaltInitHeapZerosOutHeapsBit = 0x1,gestaltNewHandleReturnsZeroedMemoryBit = 0x2,gestaltNewPtrReturnsZeroedMemoryBit = 0x3,gestaltFileAllocationZeroedBlocksBit = 0x4,};
enum $17F86866EF9B16B2FD73FE5264668D40 {gestaltROMSize = 0x726F6D20,};
enum $17FF85B04FA3AE5026EB3F7F2EAD285F {ttNone = 0x0,ttDisabled = 0x1,ttOffline = 0x2,ttOpen = 0x3,ttLabel1 = 0x100,ttLabel2 = 0x200,ttLabel3 = 0x300,ttLabel4 = 0x400,ttLabel5 = 0x500,ttLabel6 = 0x600,ttLabel7 = 0x700,ttSelected = 0x4000,ttSelectedDisabled = 0x4001,ttSelectedOffline = 0x4002,ttSelectedOpen = 0x4003,};
enum $180C8C565A39754B138503F39E202172 {enumInfoWindowPanel = 0x69706E6C,enumGeneralPanel = 0x67706E6C,enumSharingPanel = 0x73706E6C,enumStatusNConfigPanel = 0x73636E6C,enumFontsPanel = 0x66706E6C,enumMemoryPanel = 0x6D706E6C,};
enum $1815B64D5222996852C553D2507504A4 {kBySmallIcon = 0x0,kByIconView = 0x1,kByNameView = 0x2,kByDateView = 0x3,kBySizeView = 0x4,kByKindView = 0x5,kByCommentView = 0x6,kByLabelView = 0x7,kByVersionView = 0x8,};
enum $18457EBC56E5AC6AD2CDCFA4666FD615 {kMenuPropertyPersistent = 0x1,};
enum $18462B8FB19D58F8C450A010FBE9BBC2 {eventAlreadyPostedErr = 0xFFFFD97C,eventTargetBusyErr = 0xFFFFD97B,eventClassInvalidErr = 0xFFFFD97A,eventClassIncorrectErr = 0xFFFFD978,eventHandlerAlreadyInstalledErr = 0xFFFFD976,eventInternalErr = 0xFFFFD974,eventKindIncorrectErr = 0xFFFFD973,eventParameterNotFoundErr = 0xFFFFD972,eventNotHandledErr = 0xFFFFD96E,eventLoopTimedOutErr = 0xFFFFD96D,eventLoopQuitErr = 0xFFFFD96C,eventNotInQueueErr = 0xFFFFD96B,eventHotKeyExistsErr = 0xFFFFD96A,eventHotKeyInvalidErr = 0xFFFFD969,};
enum $18589B68383B3C2762CD01864544A9B2 {kCGEventFilterMaskPermitLocalMouseEvents = 0x1,kCGEventFilterMaskPermitLocalKeyboardEvents = 0x2,kCGEventFilterMaskPermitSystemDefinedEvents = 0x4,};
enum $185FAFEAE0257163586A16EBC57852EC {scsiRequestInProgress = 0x1,scsiRequestAborted = 0xFFFFE102,scsiUnableToAbort = 0xFFFFE103,scsiNonZeroStatus = 0xFFFFE104,scsiUnused05 = 0xFFFFE105,scsiUnused06 = 0xFFFFE106,scsiUnused07 = 0xFFFFE107,scsiUnused08 = 0xFFFFE108,scsiUnableToTerminate = 0xFFFFE109,scsiSelectTimeout = 0xFFFFE10A,scsiCommandTimeout = 0xFFFFE10B,scsiIdentifyMessageRejected = 0xFFFFE10C,scsiMessageRejectReceived = 0xFFFFE10D,scsiSCSIBusReset = 0xFFFFE10E,scsiParityError = 0xFFFFE10F,scsiAutosenseFailed = 0xFFFFE110,scsiUnused11 = 0xFFFFE111,scsiDataRunError = 0xFFFFE112,scsiUnexpectedBusFree = 0xFFFFE113,scsiSequenceFailed = 0xFFFFE114,scsiWrongDirection = 0xFFFFE115,scsiUnused16 = 0xFFFFE116,scsiBDRsent = 0xFFFFE117,scsiTerminated = 0xFFFFE118,scsiNoNexus = 0xFFFFE119,scsiCDBReceived = 0xFFFFE11A,scsiTooManyBuses = 0xFFFFE130,scsiBusy = 0xFFFFE131,scsiProvideFail = 0xFFFFE132,scsiDeviceNotThere = 0xFFFFE133,scsiNoHBA = 0xFFFFE134,scsiDeviceConflict = 0xFFFFE135,scsiNoSuchXref = 0xFFFFE136,scsiQLinkInvalid = 0xFFFFE137,scsiPBLengthError = 0xFFFFE140,scsiFunctionNotAvailable = 0xFFFFE141,scsiRequestInvalid = 0xFFFFE142,scsiBusInvalid = 0xFFFFE143,scsiTIDInvalid = 0xFFFFE144,scsiLUNInvalid = 0xFFFFE145,scsiIDInvalid = 0xFFFFE146,scsiDataTypeInvalid = 0xFFFFE147,scsiTransferTypeInvalid = 0xFFFFE148,scsiCDBLengthInvalid = 0xFFFFE149,};
enum $1880502D74851D4963ADA8B4788C9227 {kOSANullScript = 0x0,};
enum $189C553E9DBE70D740DD8B4A774970DC {kTXNTextEditStyleFrameType = 0x1,kTXNPageFrameType = 0x2,kTXNMultipleFrameType = 0x3,};
enum $18BF411237F175ABCD4A1D90A0B1F6B7 {kSoundNotCompressed = 0x4E4F4E45,k8BitOffsetBinaryFormat = 0x72617720,k16BitBigEndianFormat = 0x74776F73,k16BitLittleEndianFormat = 0x736F7774,kFloat32Format = 0x666C3332,kFloat64Format = 0x666C3634,k24BitFormat = 0x696E3234,k32BitFormat = 0x696E3332,k32BitLittleEndianFormat = 0x32336E69,kMACE3Compression = 0x4D414333,kMACE6Compression = 0x4D414336,kCDXA4Compression = 0x63647834,kCDXA2Compression = 0x63647832,kIMACompression = 0x696D6134,kULawCompression = 0x756C6177,kALawCompression = 0x616C6177,kMicrosoftADPCMFormat = 0x6D730002,kDVIIntelIMAFormat = 0x6D730011,kMicrosoftGSMCompression = 0x6D730031,kDVAudioFormat = 0x64766361,kQDesignCompression = 0x51444D43,kQDesign2Compression = 0x51444D32,kQUALCOMMCompression = 0x51636C70,kOffsetBinary = 0x72617720,kTwosComplement = 0x74776F73,kLittleEndianFormat = 0x736F7774,kMPEGLayer3Format = 0x6D730055,kFullMPEGLay3Format = 0x2E6D7033,kVariableDurationDVAudioFormat = 0x76647661,kMPEG4AudioFormat = 0x6D703461,};
enum $18CEE750F48178E5EB6FE2F7AFF3FE50 {kICACommunicationErr = 0xFFFFD954,kICADeviceNotFoundErr = 0xFFFFD953,kICADeviceNotOpenErr = 0xFFFFD952,kICAFileCorruptedErr = 0xFFFFD951,kICAIOPendingErr = 0xFFFFD950,kICAInvalidObjectErr = 0xFFFFD94F,kICAInvalidPropertyErr = 0xFFFFD94E,kICAIndexOutOfRangeErr = 0xFFFFD94D,kICAPropertyTypeNotFoundErr = 0xFFFFD94C,};
enum $18F39A1BE291178CAFF63DBEEBB644E5 {kHFSRootParentID = 0x1,kHFSRootFolderID = 0x2,kHFSExtentsFileID = 0x3,kHFSCatalogFileID = 0x4,kHFSBadBlockFileID = 0x5,kHFSAllocationFileID = 0x6,kHFSStartupFileID = 0x7,kHFSAttributesFileID = 0x8,kHFSBogusExtentFileID = 0xF,kHFSFirstUserCatalogNodeID = 0x10,};
enum $191B4889AB7D77DFE0E42C2C59A17798 {kSOCKS5NoAcceptableMethod = 0xFF,};
enum $191BACAFE1C79A4AFD6F08B231C40E86 {kSystemFolderType = 0x6D616373,kDesktopFolderType = 0x6465736B,kSystemDesktopFolderType = 0x7364736B,kTrashFolderType = 0x74727368,kSystemTrashFolderType = 0x73747273,kWhereToEmptyTrashFolderType = 0x656D7074,kPrintMonitorDocsFolderType = 0x70726E74,kStartupFolderType = 0x73747274,kShutdownFolderType = 0x73686466,kAppleMenuFolderType = 0x616D6E75,kControlPanelFolderType = 0x6374726C,kSystemControlPanelFolderType = 0x7363746C,kExtensionFolderType = 0x6578746E,kFontsFolderType = 0x666F6E74,kPreferencesFolderType = 0x70726566,kSystemPreferencesFolderType = 0x73707266,kTemporaryFolderType = 0x74656D70,};
enum $1935162A0C8E71E1CEFD0799A4C004A5 {kPPPMinMRU = 0x0,kPPPMaxMRU = 0x1194,};
enum $1943A17EDBCC9198906C7F386D949F4C {kThemeLeftOutsideArrowPressed = 0x1,kThemeLeftInsideArrowPressed = 0x2,kThemeLeftTrackPressed = 0x4,kThemeThumbPressed = 0x8,kThemeRightTrackPressed = 0x10,kThemeRightInsideArrowPressed = 0x20,kThemeRightOutsideArrowPressed = 0x40,kThemeTopOutsideArrowPressed = 0x1,kThemeTopInsideArrowPressed = 0x2,kThemeTopTrackPressed = 0x4,kThemeBottomTrackPressed = 0x10,kThemeBottomInsideArrowPressed = 0x20,kThemeBottomOutsideArrowPressed = 0x40,};
enum $195233BA6B43F2E05C3CA87A20919B87 {gestaltQTVRMgrAttr = 0x71747672,gestaltQTVRMgrPresent = 0x0,gestaltQTVRObjMoviesPresent = 0x1,gestaltQTVRCylinderPanosPresent = 0x2,gestaltQTVRCubicPanosPresent = 0x3,};
enum $19698A76D39D64A57D7BC8CAFA69B25A {kTXNSystemDefaultEncoding = 0x0,kTXNMacOSEncoding = 0x1,kTXNUnicodeEncoding = 0x2,};
enum $19C4533A7EBC59A398AF5E04E7FF9495 {gestaltALMVers = 0x77616C6B,};
enum $19F606EC569F36C98DFA7B562134BF40 {kATSUInvalidTextLayoutErr = 0xFFFFDDAA,kATSUInvalidStyleErr = 0xFFFFDDA9,kATSUInvalidTextRangeErr = 0xFFFFDDA8,kATSUFontsMatched = 0xFFFFDDA7,kATSUFontsNotMatched = 0xFFFFDDA6,kATSUNoCorrespondingFontErr = 0xFFFFDDA5,kATSUInvalidFontErr = 0xFFFFDDA4,kATSUInvalidAttributeValueErr = 0xFFFFDDA3,kATSUInvalidAttributeSizeErr = 0xFFFFDDA2,kATSUInvalidAttributeTagErr = 0xFFFFDDA1,kATSUInvalidCacheErr = 0xFFFFDDA0,kATSUNotSetErr = 0xFFFFDD9F,kATSUNoStyleRunsAssignedErr = 0xFFFFDD9E,kATSUQuickDrawTextErr = 0xFFFFDD9D,kATSULowLevelErr = 0xFFFFDD9C,kATSUNoFontCmapAvailableErr = 0xFFFFDD9B,kATSUNoFontScalerAvailableErr = 0xFFFFDD9A,kATSUCoordinateOverflowErr = 0xFFFFDD99,kATSULineBreakInWord = 0xFFFFDD98,kATSUBusyObjectErr = 0xFFFFDD97,};
struct $1A25B42FDC2828404DF4CEBE66EB2055 {uint64_t v;};
enum $1A266AEDA19938EF9EF7FAF9095126EC {kControlStaticTextCFStringTag = 0x63667374,};
struct $1A30D2CE57D4B503672205761917D3EA {CFIndex version;void *info;const void *(__fastcall *retain)(const void *info);void (__fastcall *release)(const void *info);CFStringRef (__fastcall *copyDescription)(const void *info);Boolean (__fastcall *equal)(const void *info1, const void *info2);CFHashCode (__fastcall *hash)(const void *info);void (__fastcall *schedule)(void *info, CFRunLoopRef rl, CFStringRef mode);void (__fastcall *cancel)(void *info, CFRunLoopRef rl, CFStringRef mode);void (__fastcall *perform)(void *info);};
enum $1A642C56BCF2282BA059564BD9119EAF {smSystemScript = 0xFFFFFFFF,smCurrentScript = 0xFFFFFFFE,smAllScripts = 0xFFFFFFFD,};
enum $1A9E20E3BED0542206514FA351EE53E7 {fOnDesk = 0x1,fHasBundle = 0x2000,fInvisible = 0x4000,};
enum $1AAA229774981C393C31E6C763CD6B58 {kDragTrackingEnterHandler = 0x1,kDragTrackingEnterWindow = 0x2,kDragTrackingInWindow = 0x3,kDragTrackingLeaveWindow = 0x4,kDragTrackingLeaveHandler = 0x5,};
enum $1AAB9134B0FEB3A17896E87DAEB18E46 {kOTDisablePortEvent = 0x21000001,kStreamCloseEvent = 0x21000006,kBackgroundStreamEvent = 0x21000009,kIoctlRecvFdEvent = 0x2100000A,kOTTryShutdownEvent = 0x2100000B,kOTScheduleTerminationEvent = 0x2100000C,kOTEnablePortEvent = 0x2100000D,kOTNewPortRegisteredEvent = 0x2100000E,kOTPortOfflineEvent = 0x2100000F,kOTPortOnlineEvent = 0x21000010,kOTPortNetworkChangeEvent = 0x21000011,};
enum $1AAE3E3510C9F5BD7EB147428BE1E531 {kOSAsyncRefCount = 0x8,kOSAsyncRefSize = 0x20,};
enum $1AB4B7535077720DAF8421305745D283 {AF_8022 = 0x2008,};
enum $1AC1C93A58AB6CB66948DE5864455995 {kUnknownException = 0x0,kIllegalInstructionException = 0x1,kTrapException = 0x2,kAccessException = 0x3,kUnmappedMemoryException = 0x4,kExcludedMemoryException = 0x5,kReadOnlyMemoryException = 0x6,kUnresolvablePageFaultException = 0x7,kPrivilegeViolationException = 0x8,kTraceException = 0x9,kInstructionBreakpointException = 0xA,kDataBreakpointException = 0xB,kIntegerException = 0xC,kFloatingPointException = 0xD,kStackOverflowException = 0xE,kTaskTerminationException = 0xF,kTaskCreationException = 0x10,kDataAlignmentException = 0x11,};
enum $1AD10C15D14F9C5ED1DE9A95E22B348B {kInvalidPageAddress = 0xFFFFFFFF,};
enum $1AE43C0817ECDE8EDCB0D679B81B2F71 {kNoIdeographicAlternativesSelector = 0x0,kIdeographicAltOneSelector = 0x1,kIdeographicAltTwoSelector = 0x2,kIdeographicAltThreeSelector = 0x3,kIdeographicAltFourSelector = 0x4,kIdeographicAltFiveSelector = 0x5,};
enum $1AEF4FFF1B0BDC4525820A0C0C35D67B {cmInputClass = 0x73636E72,cmDisplayClass = 0x6D6E7472,cmOutputClass = 0x70727472,cmLinkClass = 0x6C696E6B,cmAbstractClass = 0x61627374,cmColorSpaceClass = 0x73706163,cmNamedColorClass = 0x6E6D636C,};
enum $1AF68A0469BD68229A914C40E4097790 {kEventAttributeNone = 0x0,kEventAttributeUserEvent = 0x1,};
enum $1AFA28F105031E15A5FF16F83B4927E2 {gestaltNativeCPUtype = 0x63707574,gestaltNativeCPUfamily = 0x63707566,gestaltCPU68000 = 0x0,gestaltCPU68010 = 0x1,gestaltCPU68020 = 0x2,gestaltCPU68030 = 0x3,gestaltCPU68040 = 0x4,gestaltCPU601 = 0x101,gestaltCPU603 = 0x103,gestaltCPU604 = 0x104,gestaltCPU603e = 0x106,gestaltCPU603ev = 0x107,gestaltCPU750 = 0x108,gestaltCPU604e = 0x109,gestaltCPU604ev = 0x10A,gestaltCPUG4 = 0x10C,gestaltCPUG47450 = 0x110,};
enum $1AFD37A731F3A62F7A5D2B51D317DBED {kWriteReference = 0x0,kReadReference = 0x1,kFetchReference = 0x2,writeReference = 0x0,readReference = 0x1,fetchReference = 0x2,};
enum $1B08C5D09AC661B5AD3D7F6539F3115E {gestaltTVAttr = 0x74762020,gestaltHasTVTuner = 0x0,gestaltHasSoundFader = 0x1,gestaltHasHWClosedCaptioning = 0x2,gestaltHasIRRemote = 0x3,gestaltHasVidDecoderScaler = 0x4,gestaltHasStereoDecoder = 0x5,gestaltHasSerialFader = 0x6,gestaltHasFMTuner = 0x7,gestaltHasSystemIRFunction = 0x8,gestaltIRDisabled = 0x9,gestaltINeedIRPowerOffConfirm = 0xA,gestaltHasZoomedVideo = 0xB,};
enum $1B10CBCE7686D62D2835035F832AC309 {pIsZoomedFull = 0x7A756D66,pIsPopup = 0x64727772,pIsPulledOpen = 0x70756C6C,pIsCollapsed = 0x77736864,};
enum $1B23EBE69E7C72E0D4B27DFF733651FE {diaeresisUprY = 0xD9,fraction = 0xDA,intlCurrency = 0xDB,leftSingGuillemet = 0xDC,rightSingGuillemet = 0xDD,fiLigature = 0xDE,flLigature = 0xDF,dblDagger = 0xE0,centeredDot = 0xE1,baseSingQuote = 0xE2,baseDblQuote = 0xE3,perThousand = 0xE4,circumflexUprA = 0xE5,circumflexUprE = 0xE6,acuteUprA = 0xE7,diaeresisUprE = 0xE8,graveUprE = 0xE9,acuteUprI = 0xEA,circumflexUprI = 0xEB,diaeresisUprI = 0xEC,graveUprI = 0xED,acuteUprO = 0xEE,circumflexUprO = 0xEF,appleLogo = 0xF0,graveUprO = 0xF1,acuteUprU = 0xF2,circumflexUprU = 0xF3,graveUprU = 0xF4,dotlessLwrI = 0xF5,circumflex = 0xF6,tilde = 0xF7,macron = 0xF8,breveMark = 0xF9,overDot = 0xFA,ringMark = 0xFB,cedilla = 0xFC,doubleAcute = 0xFD,ogonek = 0xFE,hachek = 0xFF,};
enum $1B2CB9C25C02CAF57191E8FF5A7BE1C5 {kDisplayModeListNotPreferredBit = 0x0,kDisplayModeListNotPreferredMask = 0x1,};
enum $1B4BF492561C2A580A46C8284175A37F {evtNotEnb = 0x1,};
enum $1B80657F589CD0139BCED0ED1C3B15F6 {kCFragGoesToEOF = 0x0,};
enum $1B8734131365C358C36B73443A3ED65E : unsigned __int32 {kNetbufDataIsOTData = 0xFFFFFFFE,};
enum $1BA3024EED16D569A5FE648C5844F21C : unsigned __int32 {kAENoDispatch = 0x0,kAEUseStandardDispatch = 0xFFFFFFFF,};
enum $1BA74565B9C3E48F3343788E90D97166 {gestaltEditionMgrAttr = 0x6564746E,gestaltEditionMgrPresent = 0x0,gestaltEditionMgrTranslationAware = 0x1,};
enum $1BAB9C9FCCFDB5C7C8E06BAD579F3645 {kThemeMenuItemPlain = 0x0,kThemeMenuItemHierarchical = 0x1,kThemeMenuItemScrollUpArrow = 0x2,kThemeMenuItemScrollDownArrow = 0x3,kThemeMenuItemAtTop = 0x100,kThemeMenuItemAtBottom = 0x200,kThemeMenuItemHierBackground = 0x400,kThemeMenuItemPopUpBackground = 0x800,kThemeMenuItemHasIcon = 0x8000,kThemeMenuItemNoBackground = 0x4000,};
enum $1BACD87E698DC78D58692B84D16F77B5 {kAppearanceEventClass = 0x61707072,kAEAppearanceChanged = 0x74686D65,kAESystemFontChanged = 0x73797366,kAESmallSystemFontChanged = 0x7373666E,kAEViewsFontChanged = 0x76666E74,};
enum $1BAEECA73EA76B074F4E040C244E5F29 {kThemeTrackActive = 0x0,kThemeTrackDisabled = 0x1,kThemeTrackNothingToScroll = 0x2,kThemeTrackInactive = 0x3,};
enum $1BD1B4027C56D480579CE3BF0A93BCF6 {kATSUFlattenOptionNoOptionsMask = 0x0,};
enum $1BD406C8032FCC49A6548FD0EF595396 {cmXYZData = 0x58595A20,cmLabData = 0x4C616220,cmLuvData = 0x4C757620,cmYCbCrData = 0x59436272,cmYxyData = 0x59787920,cmRGBData = 0x52474220,cmSRGBData = 0x73524742,cmGrayData = 0x47524159,cmHSVData = 0x48535620,cmHLSData = 0x484C5320,cmCMYKData = 0x434D594B,cmCMYData = 0x434D5920,cmMCH5Data = 0x4D434835,cmMCH6Data = 0x4D434836,cmMCH7Data = 0x4D434837,cmMCH8Data = 0x4D434838,cm3CLRData = 0x33434C52,cm4CLRData = 0x34434C52,cm5CLRData = 0x35434C52,cm6CLRData = 0x36434C52,cm7CLRData = 0x37434C52,cm8CLRData = 0x38434C52,cm9CLRData = 0x39434C52,cm10CLRData = 0x41434C52,cm11CLRData = 0x42434C52,cm12CLRData = 0x43434C52,cm13CLRData = 0x44434C52,cm14CLRData = 0x45434C52,cm15CLRData = 0x46434C52,cmNamedData = 0x4E414D45,};
struct $1BD489EEAC3D06D6AEAE66018ECFF0D5 {CFDictionaryRef attributes;CFArrayRef attributeOrder;Boolean isEmpty;char _reserved[3];};
enum $1BD52C00E239FD3836B0B5E2BBDE1F4D {kUsersFolderType = 0x75737273,kCurrentUserFolderType = 0x63757372,kCurrentUserRemoteFolderLocation = 0x72757366,kCurrentUserRemoteFolderType = 0x72757372,kSharedUserDataFolderType = 0x73646174,kVolumeSettingsFolderType = 0x76736664,};
enum $1BD762F989B1FFCFB7954C910005047B {INET_IP = 0x0,INET_TCP = 0x6,INET_UDP = 0x11,};
enum $1BDC573074FE939541AFD13DBE1EDBCA {kQDNoPalette = 0xFFFFF092,kQDNoColorHWCursorSupport = 0xFFFFF091,kQDCursorAlreadyRegistered = 0xFFFFF090,kQDCursorNotRegistered = 0xFFFFF08F,kQDCorruptPICTDataErr = 0xFFFFF08E,};
enum $1C0C3C8370802BC4721724909FD85E09 {kCurrentCapacityIsActualValue = 0x0,kCurrentCapacityIsPercentOfMax = 0x1,};
enum $1C119E9720855ADE2B421A854DBE867A : unsigned __int32 {kInvalidSource = 0xFFFFFFFF,kNoSource = 0x6E6F6E65,kCDSource = 0x63642020,kExtMicSource = 0x656D6963,kSoundInSource = 0x73696E6A,kRCAInSource = 0x69726361,kTVFMTunerSource = 0x7476666D,kDAVInSource = 0x69646176,kIntMicSource = 0x696D6963,kMediaBaySource = 0x6D626179,kModemSource = 0x6D6F646D,kPCCardSource = 0x70636D20,kZoomVideoSource = 0x7A767063,kDVDSource = 0x64766461,kMicrophoneArray = 0x6D696361,};
enum $1C3D2DD5A768BA81C607C90BD95B8F4F {gestaltVMBackingStoreFileRefNum = 0x766D6273,};
enum $1C664F0EF9BBB4E09C6518995E0C8ED9 {kATSUBackgroundColor = 0x0,kATSUBackgroundCallback = 0x1,};
enum $1C68911ED9CE8D5027C6DB73AEB29337 {kTextEncodingMultiRun = 0xFFF,kTextEncodingUnknown = 0xFFFF,};
enum $1CEF9B142B13ABBC75B2907DE3E60BFC {kTextEncodingUS_ASCII = 0x600,kTextEncodingJIS_X0201_76 = 0x620,kTextEncodingJIS_X0208_83 = 0x621,kTextEncodingJIS_X0208_90 = 0x622,kTextEncodingJIS_X0212_90 = 0x623,kTextEncodingJIS_C6226_78 = 0x624,kTextEncodingShiftJIS_X0213_00 = 0x628,kTextEncodingGB_2312_80 = 0x630,kTextEncodingGBK_95 = 0x631,kTextEncodingGB_18030_2000 = 0x632,kTextEncodingKSC_5601_87 = 0x640,kTextEncodingKSC_5601_92_Johab = 0x641,kTextEncodingCNS_11643_92_P1 = 0x651,kTextEncodingCNS_11643_92_P2 = 0x652,kTextEncodingCNS_11643_92_P3 = 0x653,};
enum $1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 {dsNoFPU = 0x5A,dsNoPatch = 0x62,dsBadPatch = 0x63,dsParityErr = 0x65,dsOldSystem = 0x66,ds32BitMode = 0x67,dsNeedToWriteBootBlocks = 0x68,dsNotEnoughRAMToBoot = 0x69,dsBufPtrTooLow = 0x6A,dsVMDeferredFuncTableFull = 0x70,dsVMBadBackingStore = 0x71,dsCantHoldSystemHeap = 0x72,dsSystemRequiresPowerPC = 0x74,dsGibblyMovedToDisabledFolder = 0x75,dsUnBootableSystem = 0x76,dsMustUseFCBAccessors = 0x77,dsMacOSROMVersionTooOld = 0x78,dsLostConnectionToNetworkDisk = 0x79,dsRAMDiskTooBig = 0x7A,dsWriteToSupervisorStackGuardPage = 0x80,dsReinsert = 0x1E,shutDownAlert = 0x2A,dsShutDownOrRestart = 0x4E20,dsSwitchOffOrRestart = 0x4E21,dsForcedQuit = 0x4E22,dsRemoveDisk = 0x4E23,dsDirtyDisk = 0x4E24,dsShutDownOrResume = 0x4E8D,dsSCSIWarn = 0x4E2A,dsMBSysError = 0x7210,dsMBFlpySysError = 0x7211,dsMBATASysError = 0x7212,dsMBATAPISysError = 0x7213,dsMBExternFlpySysError = 0x7214,dsPCCardATASysError = 0x7215,};
enum $1D3D71F858DDE7BAE181EB8DF6BBC90F {kMacVT100DefaultVariant = 0x0,kMacVT100CurrencySignVariant = 0x1,kMacVT100EuroSignVariant = 0x2,};
enum $1D514696CA69F7E01B0BE02B5477904F {kMenuItemDataAllData = 0x1FFFFF,};
enum $1D580E3239D7EF3A82580DF952031B2D {kControlKindHIComboBox = 0x63626278,};
enum $1D84147C46174B95198C6163E12965F0 {gestaltMPCallableAPIsAttr = 0x6D707363,gestaltMPFileManager = 0x0,gestaltMPDeviceManager = 0x1,gestaltMPTrapCalls = 0x2,};
enum $1D9D40DC7CF04F7690FB1C059703225E {kNSLDefaultNSLDlogOptions = 0x0,kNSLNoURLTEField = 0x1,kNSLAddServiceTypes = 0x2,kNSLClientHandlesRecents = 0x4,};
enum $1DC844FD22F2F6EF68EA2E0E036634AB {kICMapFixedLength = 0x16,};
enum $1DCC4328EC30B64C08758FAF988026B3 {kMenuContextMenuBar = 0x1,kMenuContextPullDown = 0x100,kMenuContextPopUp = 0x200,kMenuContextSubmenu = 0x400,kMenuContextMenuBarTracking = 0x10000,kMenuContextPopUpTracking = 0x20000,kMenuContextKeyMatching = 0x40000,kMenuContextMenuEnabling = 0x80000,kMenuContextCommandIDSearch = 0x100000,};
enum $1DDF1CFC370E605DD776B8BC1BE7D2BA {kKeyboardInputMethodClass = 0x696E706D,kInkInputMethodClass = 0x696E6B20,kCharacterPaletteInputMethodClass = 0x63706C74,};
enum $1DE605192E4D96AF3D660863867CF8CB {kRAProductClientOnly = 0x2,kRAProductOnePortServer = 0x3,kRAProductManyPortServer = 0x4,};
enum $1DF4ECF446FBC7CDA716088123AD9993 {kThemeArrowLeft = 0x0,kThemeArrowDown = 0x1,kThemeArrowRight = 0x2,kThemeArrowUp = 0x3,};
enum $1E298F583311C90DDF0D277D3D39BDAA {kSelectRegistryEntryIDInit = 0x0,kSelectRegistryEntryIDCompare = 0x1,kSelectRegistryEntryIDCopy = 0x2,kSelectRegistryEntryIDDispose = 0x3,kSelectRegistryCStrEntryCreate = 0x4,kSelectRegistryEntryDelete = 0x5,kSelectRegistryEntryCopy = 0x6,kSelectRegistryEntryIterateCreate = 0x7,kSelectRegistryEntryIterateDispose = 0x8,kSelectRegistryEntryIterateSet = 0x9,kSelectRegistryEntryIterate = 0xA,kSelectRegistryEntrySearch = 0xB,kSelectRegistryCStrEntryLookup = 0xC,kSelectRegistryEntryToPathSize = 0xD,kSelectRegistryCStrEntryToPath = 0xE,kSelectRegistryCStrEntryToName = 0xF,kSelectRegistryPropertyCreate = 0x10,kSelectRegistryPropertyDelete = 0x11,kSelectRegistryPropertyRename = 0x12,kSelectRegistryPropertyIterateCreate = 0x13,kSelectRegistryPropertyIterateDispose = 0x14,kSelectRegistryPropertyIterate = 0x15,kSelectRegistryPropertyGetSize = 0x16,kSelectRegistryPropertyGet = 0x17,kSelectRegistryPropertySet = 0x18,kSelectRegistryEntryGetMod = 0x19,kSelectRegistryEntrySetMod = 0x1A,kSelectRegistryPropertyGetMod = 0x1B,kSelectRegistryPropertySetMod = 0x1C,kSelectRegistryEntryMod = 0x1D,kSelectRegistryEntryPropertyMod = 0x1E,kSelectRegistryHighestSelector = 0x1E,};
enum $1E4F2DD210751C62CD68C057277C3FAF {kWindowMsgGetFeatures = 0x7,kWindowMsgGetRegion = 0x8,};
enum $1E6CF9CD824F060CB1174F5BABA19D02 {kAlertFlagsUseThemeBackground = 0x1,kAlertFlagsUseControlHierarchy = 0x2,kAlertFlagsAlertIsMovable = 0x4,kAlertFlagsUseThemeControls = 0x8,};
enum $1E916A04F6BB77BA94A65E757A40C9E2 {kScrapReservedFlavorType = 0x73726674,};
enum $1EC4B524827CB86342B5F4B756990840 {kPCIPowerOffAllowed = 0x1,};
enum $1EC71A138665501A7B98C6DE5D59F684 {kICAMessageConnect = 0x6F70656E,kICAMessageDisconnect = 0x636C6F73,kICAMessageReset = 0x72657365,kICAMessageCheckDevice = 0x63686B64,};
enum $1EF659AD20943A3AB2CCBDF5B021B8C6 {MediaBaySndEnMask = 0x1,PCISndEnMask = 0x2,ZVSndEnMask = 0x4,PCCardSndEnMask = 0x8,};
enum $1F001F3E5B2FA02809C79C36DE3DD07F {kConfigSupportsWakeOnNetBit = 0x0,kWakeOnNetAdminAccessesBit = 0x1,kWakeOnAllNetAccessesBit = 0x2,kUnmountServersBeforeSleepingBit = 0x3,kConfigSupportsWakeOnNetMask = 0x1,kWakeOnNetAdminAccessesMask = 0x2,kWakeOnAllNetAccessesMask = 0x4,kUnmountServersBeforeSleepingMask = 0x8,};
enum $1F1399ED5159CECEAB296D7B29DF3378 {kBlessedFolder = 0x626C7366,kRootFolder = 0x726F7466,};
enum $1F3EA5F5FED4D13282C5770DAB32F70B {kMenuNullGlyph = 0x0,kMenuTabRightGlyph = 0x2,kMenuTabLeftGlyph = 0x3,kMenuEnterGlyph = 0x4,kMenuShiftGlyph = 0x5,kMenuControlGlyph = 0x6,kMenuOptionGlyph = 0x7,kMenuSpaceGlyph = 0x9,kMenuDeleteRightGlyph = 0xA,kMenuReturnGlyph = 0xB,kMenuReturnR2LGlyph = 0xC,kMenuNonmarkingReturnGlyph = 0xD,kMenuPencilGlyph = 0xF,kMenuDownwardArrowDashedGlyph = 0x10,kMenuCommandGlyph = 0x11,kMenuCheckmarkGlyph = 0x12,kMenuDiamondGlyph = 0x13,kMenuAppleLogoFilledGlyph = 0x14,kMenuParagraphKoreanGlyph = 0x15,kMenuDeleteLeftGlyph = 0x17,kMenuLeftArrowDashedGlyph = 0x18,kMenuUpArrowDashedGlyph = 0x19,kMenuRightArrowDashedGlyph = 0x1A,kMenuEscapeGlyph = 0x1B,kMenuClearGlyph = 0x1C,kMenuLeftDoubleQuotesJapaneseGlyph = 0x1D,kMenuRightDoubleQuotesJapaneseGlyph = 0x1E,kMenuTrademarkJapaneseGlyph = 0x1F,kMenuBlankGlyph = 0x61,kMenuPageUpGlyph = 0x62,kMenuCapsLockGlyph = 0x63,kMenuLeftArrowGlyph = 0x64,kMenuRightArrowGlyph = 0x65,kMenuNorthwestArrowGlyph = 0x66,kMenuHelpGlyph = 0x67,kMenuUpArrowGlyph = 0x68,kMenuSoutheastArrowGlyph = 0x69,kMenuDownArrowGlyph = 0x6A,kMenuPageDownGlyph = 0x6B,kMenuAppleLogoOutlineGlyph = 0x6C,kMenuContextualMenuGlyph = 0x6D,kMenuPowerGlyph = 0x6E,kMenuF1Glyph = 0x6F,kMenuF2Glyph = 0x70,kMenuF3Glyph = 0x71,kMenuF4Glyph = 0x72,kMenuF5Glyph = 0x73,kMenuF6Glyph = 0x74,kMenuF7Glyph = 0x75,kMenuF8Glyph = 0x76,kMenuF9Glyph = 0x77,kMenuF10Glyph = 0x78,kMenuF11Glyph = 0x79,kMenuF12Glyph = 0x7A,kMenuF13Glyph = 0x87,kMenuF14Glyph = 0x88,kMenuF15Glyph = 0x89,kMenuControlISOGlyph = 0x8A,kMenuEjectGlyph = 0x8C,};
enum $1F40837085A2E419334DF3B97A64A211 {gestaltTimeMgrVersion = 0x746D6772,gestaltStandardTimeMgr = 0x1,gestaltRevisedTimeMgr = 0x2,gestaltExtendedTimeMgr = 0x3,gestaltNativeTimeMgr = 0x4,};
enum $1F6F3039D2CD4DB1DBCC03814E61789D {kControlTabSizeLarge = 0x0,kControlTabSizeSmall = 0x1,};
enum $1F8102E2220F6ECA6B2B71A76CC8491E {cmIlluminantUnknown = 0x0,cmIlluminantD50 = 0x1,cmIlluminantD65 = 0x2,cmIlluminantD93 = 0x3,cmIlluminantF2 = 0x4,cmIlluminantD55 = 0x5,cmIlluminantA = 0x6,cmIlluminantEquiPower = 0x7,cmIlluminantF8 = 0x8,};
enum $1F9B51F770852AD4761AFC863EC448E8 {kRangeSupportsSeperateSyncsBit = 0x0,kRangeSupportsSyncOnGreenBit = 0x1,kRangeSupportsCompositeSyncBit = 0x2,kRangeSupportsVSyncSerrationBit = 0x3,kRangeSupportsSeperateSyncsMask = 0x1,kRangeSupportsSyncOnGreenMask = 0x2,kRangeSupportsCompositeSyncMask = 0x4,kRangeSupportsVSyncSerrationMask = 0x8,};
enum $1F9EB33F4C1ABBE56BF54BEBEF518F44 {kATSFontFilterCurrentVersion = 0x0,};
enum $1FA84AA63BB1505AEEFF833A08DEC12A {gestaltMessageMgrVersion = 0x6D657373,};
enum $1FB0C3C05C839538DC046EE3FB85DDAE {kBTLeafNode = 0xFFFFFFFF,kBTIndexNode = 0x0,kBTHeaderNode = 0x1,kBTMapNode = 0x2,};
enum $1FB17526987ED6BB45FECECD371E831D {kStandardWindowDefinition = 0x0,kRoundWindowDefinition = 0x1,kFloatingWindowDefinition = 0x7C,};
enum $1FB596E3016F8878D271D095B89046E6 {kEventClassHIObject = 0x68696F62,kEventHIObjectConstruct = 0x1,kEventHIObjectInitialize = 0x2,kEventHIObjectDestruct = 0x3,kEventHIObjectIsEqual = 0x4,kEventHIObjectPrintDebugInfo = 0x5,};
enum $1FB62A46F5054554EEF201D6323FD728 {typeOSAGenericStorage = 0x73637074,};
enum $1FD5EEF819E5BA3589810A6219D202E9 {kPMLayoutLeftRightTopBottom = 0x1,kPMLayoutLeftRightBottomTop = 0x2,kPMLayoutRightLeftTopBottom = 0x3,kPMLayoutRightLeftBottomTop = 0x4,kPMLayoutTopBottomLeftRight = 0x5,kPMLayoutTopBottomRightLeft = 0x6,kPMLayoutBottomTopLeftRight = 0x7,kPMLayoutBottomTopRightLeft = 0x8,};
enum $1FDFCDB6B16318BF0B312BA6FA177D60 {kBTBadCloseMask = 0x1,kBTBigKeysMask = 0x2,kBTVariableIndexKeysMask = 0x4,};
enum $1FE4825E5554DB7C18E963222B630869 {kCreateFolderAtBoot = 0x2,kCreateFolderAtBootBit = 0x1,kFolderCreatedInvisible = 0x4,kFolderCreatedInvisibleBit = 0x2,kFolderCreatedNameLocked = 0x8,kFolderCreatedNameLockedBit = 0x3,kFolderCreatedAdminPrivs = 0x10,kFolderCreatedAdminPrivsBit = 0x4,};
enum $1FF93887DAB66F639B85849B1ED1B48F {k16LE555PixelFormat = 0x4C353535,k16LE5551PixelFormat = 0x35353531,k16BE565PixelFormat = 0x42353635,k16LE565PixelFormat = 0x4C353635,k24BGRPixelFormat = 0x32344247,k32BGRAPixelFormat = 0x42475241,k32ABGRPixelFormat = 0x41424752,k32RGBAPixelFormat = 0x52474241,kYUVSPixelFormat = 0x79757673,kYUVUPixelFormat = 0x79757675,kYVU9PixelFormat = 0x59565539,kYUV411PixelFormat = 0x59343131,kYVYU422PixelFormat = 0x59565955,kUYVY422PixelFormat = 0x55595659,kYUV211PixelFormat = 0x59323131,k2vuyPixelFormat = 0x32767579,};
enum $200FA646B4E4D0A70C1E98006203F395 {kCFSocketNoCallBack = 0x0,kCFSocketReadCallBack = 0x1,kCFSocketAcceptCallBack = 0x2,kCFSocketDataCallBack = 0x3,kCFSocketConnectCallBack = 0x4,kCFSocketWriteCallBack = 0x8,};
enum $2021B2FBC0CD9920FF956E8C358D708F {kDMModeListIncludeAllModesMask = 0x1,kDMModeListIncludeOfflineModesMask = 0x2,kDMModeListExcludeDriverModesMask = 0x4,kDMModeListExcludeDisplayModesMask = 0x8,kDMModeListExcludeCustomModesMask = 0x10,kDMModeListPreferStretchedModesMask = 0x20,kDMModeListPreferSafeModesMask = 0x40,};
enum $205EB6B580C8A817F87468F09A9C18A3 {gestaltDragMgrAttr = 0x64726167,gestaltDragMgrPresent = 0x0,gestaltDragMgrFloatingWind = 0x1,gestaltPPCDragLibPresent = 0x2,gestaltDragMgrHasImageSupport = 0x3,gestaltCanStartDragInFloatWindow = 0x4,gestaltSetDragImageUpdates = 0x5,};
enum $207839773C06FCA74F9210D8E7D5C2F5 {gestaltTEAttr = 0x74656174,gestaltTEHasGetHiliteRgn = 0x0,gestaltTESupportsInlineInput = 0x1,gestaltTESupportsTextObjects = 0x2,gestaltTEHasWhiteBackground = 0x3,};
enum $2083EC6813FE975E94F074380B998066 {gestaltInternalDisplay = 0x69647370,};
enum $209CC08F3C2FAA9E2F04173AF40A8D5B {registerComponentGlobal = 0x1,registerComponentNoDuplicates = 0x2,registerComponentAfterExisting = 0x4,registerComponentAliasesOnly = 0x8,};
enum $20AC36AB2CCF632E02EB72F57668FF65 {aspBadVersNum = 0xFFFFFBD6,aspBufTooSmall = 0xFFFFFBD5,aspNoMoreSess = 0xFFFFFBD4,aspNoServers = 0xFFFFFBD3,aspParamErr = 0xFFFFFBD2,aspServerBusy = 0xFFFFFBD1,aspSessClosed = 0xFFFFFBD0,aspSizeErr = 0xFFFFFBCF,aspTooMany = 0xFFFFFBCE,aspNoAck = 0xFFFFFBCD,};
enum $20C55E9D9BC8261515838E8F528E25E9 {modemOnMask = 0x1,ringWakeUpMask = 0x4,modemInstalledMask = 0x8,ringDetectMask = 0x10,modemOnHookMask = 0x20,};
enum $211077E282033C3248342175C2161A3D {kioFlAttribLockedBit = 0x0,kioFlAttribLockedMask = 0x1,kioFlAttribResOpenBit = 0x2,kioFlAttribResOpenMask = 0x4,kioFlAttribDataOpenBit = 0x3,kioFlAttribDataOpenMask = 0x8,kioFlAttribDirBit = 0x4,kioFlAttribDirMask = 0x10,ioDirFlg = 0x4,ioDirMask = 0x10,kioFlAttribCopyProtBit = 0x6,kioFlAttribCopyProtMask = 0x40,kioFlAttribFileOpenBit = 0x7,kioFlAttribFileOpenMask = 0x80,kioFlAttribInSharedBit = 0x2,kioFlAttribInSharedMask = 0x4,kioFlAttribMountedBit = 0x3,kioFlAttribMountedMask = 0x8,kioFlAttribSharePointBit = 0x5,kioFlAttribSharePointMask = 0x20,};
enum $212BB253F02C4220F0882F8A63BEEC33 {kATSUDirectDataAdvanceDeltaFixedArray = 0x0,kATSUDirectDataBaselineDeltaFixedArray = 0x1,kATSUDirectDataDeviceDeltaSInt16Array = 0x2,kATSUDirectDataStyleIndexUInt16Array = 0x3,kATSUDirectDataStyleSettingATSUStyleSettingRefArray = 0x4,kATSUDirectDataLayoutRecordATSLayoutRecordVersion1 = 0x64,kATSUDirectDataLayoutRecordATSLayoutRecordCurrent = 0x64,};
enum $2140534AFEBF1A2FEC4DC9038366C647 {internalScrapErr = 0xFFFFEC84,duplicateScrapFlavorErr = 0xFFFFEC83,badScrapRefErr = 0xFFFFEC82,processStateIncorrectErr = 0xFFFFEC81,scrapPromiseNotKeptErr = 0xFFFFEC80,noScrapPromiseKeeperErr = 0xFFFFEC7F,nilScrapFlavorDataErr = 0xFFFFEC7E,scrapFlavorFlagsMismatchErr = 0xFFFFEC7D,scrapFlavorSizeMismatchErr = 0xFFFFEC7C,illegalScrapFlavorFlagsErr = 0xFFFFEC7B,illegalScrapFlavorTypeErr = 0xFFFFEC7A,illegalScrapFlavorSizeErr = 0xFFFFEC79,scrapFlavorNotFoundErr = 0xFFFFFF9A,needClearScrapErr = 0xFFFFFF9C,};
enum $215E8D6413C3A88FB05DA22203D2FB0C : unsigned __int32 {kGetConnectionCount = 0xFFFFFFFF,kActivateConnection = 0x0,kDeactivateConnection = 0x200,};
enum $21887551E2C2149C40A0CA416A262838 {kControlSupportsGhosting = 0x1,kControlSupportsEmbedding = 0x2,kControlSupportsFocus = 0x4,kControlWantsIdle = 0x8,kControlWantsActivate = 0x10,kControlHandlesTracking = 0x20,kControlSupportsDataAccess = 0x40,kControlHasSpecialBackground = 0x80,kControlGetsFocusOnClick = 0x100,kControlSupportsCalcBestRect = 0x200,kControlSupportsLiveFeedback = 0x400,kControlHasRadioBehavior = 0x800,kControlSupportsDragAndDrop = 0x1000,kControlAutoToggles = 0x4000,kControlSupportsGetRegion = 0x20000,kControlSupportsFlattening = 0x80000,kControlSupportsSetCursor = 0x100000,kControlSupportsContextualMenus = 0x200000,kControlSupportsClickActivation = 0x400000,kControlIdlesWithTimer = 0x800000,};
enum $21EB103FEA65AD5ACD4D04DEAC5E7A5F {kTXNFlushDefault = 0x0,kTXNFlushLeft = 0x1,kTXNFlushRight = 0x2,kTXNCenter = 0x4,kTXNFullJust = 0x8,kTXNForceFullJust = 0x10,};
enum $220FDF38C1B64B46647C2B85268CE13F {kDialogFontNoFontStyle = 0x0,kDialogFontUseFontMask = 0x1,kDialogFontUseFaceMask = 0x2,kDialogFontUseSizeMask = 0x4,kDialogFontUseForeColorMask = 0x8,kDialogFontUseBackColorMask = 0x10,kDialogFontUseModeMask = 0x20,kDialogFontUseJustMask = 0x40,kDialogFontUseAllMask = 0xFF,kDialogFontAddFontSizeMask = 0x100,kDialogFontUseFontNameMask = 0x200,kDialogFontAddToMetaFontMask = 0x400,};
enum $2238A151C96BBBAFC0447AADEA294590 {ISDN_OPT_COMMTYPE = 0x200,ISDN_OPT_FRAMINGTYPE = 0x201,ISDN_OPT_56KADAPTATION = 0x202,};
enum $229E80E760A3609929A8A4D193AE679E {normalBit = 0x0,inverseBit = 0x1,redBit = 0x4,greenBit = 0x3,blueBit = 0x2,cyanBit = 0x8,magentaBit = 0x7,yellowBit = 0x6,blackBit = 0x5,};
enum $22A25750DF33AE2059B3CB8484455106 {kAEISGetURL = 0x6775726C,KAEISHandleCGI = 0x73646F63,};
enum $22B2FB9A5DF6718F0712D8A5DC528A5D {kQTSSUnknownErr = 0xFFFFE7FA,};
enum $22DED42BA502DE3B52239B4529430256 {kStdAlertDoNotDisposeSheet = 0x1,kStdAlertDoNotAnimateOnDefault = 0x2,kStdAlertDoNotAnimateOnCancel = 0x4,kStdAlertDoNotAnimateOnOther = 0x8,};
enum $22DFE30C8AA26A8A05AFBF04EC9C7E8F {kOSASelectStartRecording = 0x501,kOSASelectStopRecording = 0x502,};
enum $22F95B9C283C81B4EA82B2312E932770 {kLSUnknownKindID = 0x0,};
enum $230FAB241E03DBA374F1130343ACE814 {typeFinderWindow = 0x6677696E,typeFixedPoint = 0x66706E74,typeFixedRectangle = 0x66726374,typeGraphicLine = 0x676C696E,typeGraphicText = 0x63677478,typeGroupedGraphic = 0x63706963,typeInsertionLoc = 0x696E736C,typeIntlText = 0x69747874,typeIntlWritingCode = 0x696E746C,typeLongDateTime = 0x6C647420,typeISO8601DateTime = 0x69736F74,typeLongFixed = 0x6C667864,typeLongFixedPoint = 0x6C667074,typeLongFixedRectangle = 0x6C667263,typeLongPoint = 0x6C706E74,typeLongRectangle = 0x6C726374,typeMachineLoc = 0x6D4C6F63,typeOval = 0x636F766C,typeParamInfo = 0x706D696E,typePict = 0x50494354,};
enum $233C3126461803FA6BFC5187955B43CC {kUnicodeUseLatestMapping = 0xFFFFFFFF,kUnicodeUseHFSPlusMapping = 0x4,};
union $2345F6273F81C99369AD5C0E36D3FD0F {mach_msg_empty_send_t send;mach_msg_empty_rcv_t rcv;};
enum $23798AE6F72740BA6668BAE2DC24C64C {kImmediate = 0x0,kEndOfWord = 0x1,kEndOfSentence = 0x2,};
enum $2379AEEB213550793D5FB5357FEA0C82 {kControlPopupButtonMenuHandleTag = 0x6D68616E,kControlPopupButtonMenuRefTag = 0x6D68616E,kControlPopupButtonMenuIDTag = 0x6D6E6964,};
enum $23B5EE64110F5F99C914AFEFADC5E459 {cmBeginProfile = 0xDC,cmEndProfile = 0xDD,cmEnableMatching = 0xDE,cmDisableMatching = 0xDF,cmComment = 0xE0,};
enum $23E6868D7C3B5EC18926C5A79A5CA09B {kWindowDefProcPtr = 0x0,kWindowDefObjectClass = 0x1,kWindowDefProcID = 0x2,kWindowDefHIView = 0x3,};
enum $23FBD639A3946358B7E73F79FCB6920D {qtsBadSelectorErr = 0xFFFFEAE8,qtsBadStateErr = 0xFFFFEAE7,qtsBadDataErr = 0xFFFFEAE6,qtsUnsupportedDataTypeErr = 0xFFFFEAE5,qtsUnsupportedRateErr = 0xFFFFEAE4,qtsUnsupportedFeatureErr = 0xFFFFEAE3,qtsTooMuchDataErr = 0xFFFFEAE2,qtsUnknownValueErr = 0xFFFFEAE1,qtsTimeoutErr = 0xFFFFEAE0,qtsConnectionFailedErr = 0xFFFFEAD4,qtsAddressBusyErr = 0xFFFFEAD3,};
enum $241E13C6FB4469EC9263EF6689DE5B6F {errAECoercionFail = 0xFFFFF95C,errAEDescNotFound = 0xFFFFF95B,errAECorruptData = 0xFFFFF95A,errAEWrongDataType = 0xFFFFF959,errAENotAEDesc = 0xFFFFF958,errAEBadListItem = 0xFFFFF957,errAENewerVersion = 0xFFFFF956,errAENotAppleEvent = 0xFFFFF955,errAEEventNotHandled = 0xFFFFF954,errAEReplyNotValid = 0xFFFFF953,errAEUnknownSendMode = 0xFFFFF952,errAEWaitCanceled = 0xFFFFF951,errAETimeout = 0xFFFFF950,errAENoUserInteraction = 0xFFFFF94F,errAENotASpecialFunction = 0xFFFFF94E,errAEParamMissed = 0xFFFFF94D,errAEUnknownAddressType = 0xFFFFF94C,errAEHandlerNotFound = 0xFFFFF94B,errAEReplyNotArrived = 0xFFFFF94A,errAEIllegalIndex = 0xFFFFF949,errAEImpossibleRange = 0xFFFFF948,errAEWrongNumberArgs = 0xFFFFF947,errAEAccessorNotFound = 0xFFFFF945,errAENoSuchLogical = 0xFFFFF943,errAEBadTestKey = 0xFFFFF942,errAENotAnObjSpec = 0xFFFFF941,errAENoSuchObject = 0xFFFFF940,errAENegativeCount = 0xFFFFF93F,errAEEmptyListContainer = 0xFFFFF93E,errAEUnknownObjectType = 0xFFFFF93D,errAERecordingIsAlreadyOn = 0xFFFFF93C,errAEReceiveTerminate = 0xFFFFF93B,errAEReceiveEscapeCurrent = 0xFFFFF93A,errAEEventFiltered = 0xFFFFF939,errAEDuplicateHandler = 0xFFFFF938,errAEStreamBadNesting = 0xFFFFF937,errAEStreamAlreadyConverted = 0xFFFFF936,errAEDescIsNull = 0xFFFFF935,errAEBuildSyntaxError = 0xFFFFF934,errAEBufferTooSmall = 0xFFFFF933,};
enum $2424D6FB8BE50E8AA8C56E3FF31FB461 {gestaltHardwareVendorCode = 0x68726164,gestaltHardwareVendorApple = 0x4170706C,};
enum $2434F6B1EDF8F8883B5BA48259BC7F5A : unsigned __int32 {kMORXTag = 0x6D6F7278,kMORXCurrentVersion = 0x20000,kMORXCoverVertical = 0x80000000,kMORXCoverDescending = 0x40000000,kMORXCoverIgnoreVertical = 0x20000000,kMORXCoverTypeMask = 0xFF,};
struct $2456364F4C434692C771B64C57707454 {IOVirtualAddress address;IOByteCount length;};
enum $2458EF0392DC89200FBA82BF1A959AAA {kIM2ByteInputMode = 0x32627974,kIM1ByteInputMode = 0x31627974,kIMDirectInputMode = 0x64696E70,};
enum $245BDEE3290FDE5F323E0A417238E5B0 {kNilOptions = 0x0,};
enum $245F523005B30D9A0387709DF3735A23 {kControlTabImageContentTag = 0x636F6E74,};
enum $246EB169978D9DADD0725274EFA5F65F {nbpBuffOvr = 0xFFFFFC00,nbpNoConfirm = 0xFFFFFBFF,nbpConfDiff = 0xFFFFFBFE,nbpDuplicate = 0xFFFFFBFD,nbpNotFound = 0xFFFFFBFC,nbpNISErr = 0xFFFFFBFB,};
enum $24A1FC94C7293AD5C6BB41E78C51330A {kDCMReadOnlyDictionary = 0x0,kDCMReadWriteDictionary = 0x1,};
enum $24ABCDC08574C45925FBF9A9E8A8D07A {kDragStandardTranslucency = 0x0,kDragDarkTranslucency = 0x1,kDragDarkerTranslucency = 0x2,kDragOpaqueTranslucency = 0x3,};
enum $24C4D2618C8EA351116E5032FEAF8232 {CGGlyphMin = 0x0,CGGlyphMax = 0xFFFE,};
enum $24E85AFE8F5E565506A0E18FE1A6D558 {gestaltCTBVersion = 0x63746276,};
enum $2546C8C994797B80B830E66B94CC4353 {kTextEncodingShiftJIS = 0xA01,kTextEncodingKOI8_R = 0xA02,kTextEncodingBig5 = 0xA03,kTextEncodingMacRomanLatin1 = 0xA04,kTextEncodingHZ_GB_2312 = 0xA05,kTextEncodingBig5_HKSCS_1999 = 0xA06,};
enum $256542734A18D99DBB4DE67432107625 {systemCurLang = 0xFFFFFFFE,systemDefLang = 0xFFFFFFFD,currentCurLang = 0xFFFFFFFC,currentDefLang = 0xFFFFFFFB,scriptCurLang = 0xFFFFFFFA,scriptDefLang = 0xFFFFFFF9,};
enum $256948CB97E150255C1C0A8538FCF0C9 {kTSMDocumentPropertySupportGlyphInfo = 0x64706769,};
enum $25E5A8C57458CA4919911E5850D0E7C5 {kSRIdleRecognizer = 0x1,kSRSearchInProgress = 0x2,kSRSearchWaitForAllClients = 0x4,kSRMustCancelSearch = 0x8,kSRPendingSearch = 0x10,};
enum $26211C6CDB486A5990962440EC282570 {kAppleTalkEvent = 0x23010000,T_GETMYZONECOMPLETE = 0x23010001,T_GETLOCALZONESCOMPLETE = 0x23010002,T_GETZONELISTCOMPLETE = 0x23010003,T_GETATALKINFOCOMPLETE = 0x23010004,T_ATALKROUTERDOWNEVENT = 0x23010033,T_ATALKROUTERUPEVENT = 0x23010034,T_ATALKZONENAMECHANGEDEVENT = 0x23010035,T_ATALKCONNECTIVITYCHANGEDEVENT = 0x23010036,T_ATALKINTERNETAVAILABLEEVENT = 0x23010037,T_ATALKCABLERANGECHANGEDEVENT = 0x23010038,};
enum $26403436385C29F2F44CEC730D979A93 {kAEUseHTTPProxyAttr = 0x78757072,kAEHTTPProxyPortAttr = 0x78687470,kAEHTTPProxyHostAttr = 0x78687468,};
enum $264C6666AFAF7C7FABEA8336AC845B52 {kRsrcChainBelowSystemMap = 0x0,kRsrcChainBelowApplicationMap = 0x1,kRsrcChainAboveApplicationMap = 0x2,kRsrcChainAboveAllMaps = 0x4,};
enum $265C4BABE4FB38D9FC66B09DA6D1722C {kICAStartAtBeginning = 0x0,kICAEntireLength = 0xFFFFFFFF,};
enum $2683A4F623BA08708E5B49977FE1BC5D {kTXNSetFlushnessMask = 0x1,kTXNSetJustificationMask = 0x2,kTXNUseFontFallBackMask = 0x4,kTXNRotateTextMask = 0x8,kTXNUseVerticalTextMask = 0x10,kTXNDontUpdateBoxRectMask = 0x20,kTXNDontDrawTextMask = 0x40,kTXNUseCGContextRefMask = 0x80,kTXNImageWithQDMask = 0x100,kTXNDontWrapTextMask = 0x200,};
enum $268686FFA52D59FB9F0D669E634C304C {kernelIncompleteErr = 0xFFFFF69F,kernelCanceledErr = 0xFFFFF69E,kernelOptionsErr = 0xFFFFF69D,kernelPrivilegeErr = 0xFFFFF69C,kernelUnsupportedErr = 0xFFFFF69B,kernelObjectExistsErr = 0xFFFFF69A,kernelWritePermissionErr = 0xFFFFF699,kernelReadPermissionErr = 0xFFFFF698,kernelExecutePermissionErr = 0xFFFFF697,kernelDeletePermissionErr = 0xFFFFF696,kernelExecutionLevelErr = 0xFFFFF695,kernelAttributeErr = 0xFFFFF694,kernelAsyncSendLimitErr = 0xFFFFF693,kernelAsyncReceiveLimitErr = 0xFFFFF692,kernelTimeoutErr = 0xFFFFF691,kernelInUseErr = 0xFFFFF690,kernelTerminatedErr = 0xFFFFF68F,kernelExceptionErr = 0xFFFFF68E,kernelIDErr = 0xFFFFF68D,kernelAlreadyFreeErr = 0xFFFFF68B,kernelReturnValueErr = 0xFFFFF68A,kernelUnrecoverableErr = 0xFFFFF63D,};
enum $269049E339B2E8B3E92830648C8FA0A4 {kControlPopupArrowSizeNormal = 0x0,kControlPopupArrowSizeSmall = 0x1,};
enum $26BEC699B96B49D9E49DBC1A34B6767C {kWindowNoPosition = 0x0,kWindowDefaultPosition = 0x0,kWindowCenterMainScreen = 0x280A,kWindowAlertPositionMainScreen = 0x300A,kWindowStaggerMainScreen = 0x380A,kWindowCenterParentWindow = 0xA80A,kWindowAlertPositionParentWindow = 0xB00A,kWindowStaggerParentWindow = 0xB80A,kWindowCenterParentWindowScreen = 0x680A,kWindowAlertPositionParentWindowScreen = 0x700A,kWindowStaggerParentWindowScreen = 0x780A,};
enum $270C0A98B536B4A68E6700E34EE8E9A1 {gestaltSpeechRecognitionAttr = 0x73727461,gestaltDesktopSpeechRecognition = 0x1,gestaltTelephoneSpeechRecognition = 0x2,};
enum $270F00ADEF16EFD1F46CBA2D4CC44548 {fontBit = 0x0,faceBit = 0x1,sizeBit = 0x2,clrBit = 0x3,addSizeBit = 0x4,toggleBit = 0x5,};
enum $2722B88B58FE03DE138B496FCA485F63 {kThemeCheckBoxClassicX = 0x0,kThemeCheckBoxCheckMark = 0x1,};
enum $272B4F0FE83535531408DA43A2641E72 {kControlSeparatorLineProc = 0x90,};
enum $273248B6AF6D4788A422F6293FFF803A {chooserID = 0x1,};
enum $273EFE260B959759642A748515E1EC0F {gestaltQuickTimeConferencingInfo = 0x71746369,};
enum $2747613A23130B32448BD94584CA2B9C {OverallAct = 0x0,UsrActivity = 0x1,NetActivity = 0x2,HDActivity = 0x3,IdleActivity = 0x4,};
enum $276293BE77F71010DB824432FF46F21D {kFNDirectoryModifiedMessage = 0x1,};
enum $277752E1D5CD5492AEEBDA2EE4BCBEEE {kEventAppleEvent = 0x1,};
enum $278E437784B2C5AD265B88EC79C19A4D {gestaltUSBVersion = 0x75736276,};
enum $27D392CCE81887F17159165CB88AEF63 {kMacCyrillicDefaultVariant = 0x0,kMacCyrillicCurrSignStdVariant = 0x1,kMacCyrillicCurrSignUkrVariant = 0x2,kMacCyrillicEuroSignVariant = 0x3,};
enum $27E50C9195B9C08D203692ADBAAF43B1 {kMPTaskBlocked = 0x0,kMPTaskReady = 0x1,kMPTaskRunning = 0x2,};
enum $27ECC7B18BD5D19B215601640BDB9F73 {gestaltUSBAttr = 0x75736220,gestaltUSBPresent = 0x0,gestaltUSBHasIsoch = 0x1,};
enum $2806241C695CE64F638EBE1504CA6EC2 {dialogKind = 0x2,userKind = 0x8,kDialogWindowKind = 0x2,kApplicationWindowKind = 0x8,};
enum $28469C704570E78F5672067AEFAF4E88 {ATALK_IOC_FULLSELFSEND = 0x542F,ADSP_IOC_FORWARDRESET = 0x543C,};
enum $284DE2E2B03212944C4F3C2277B95975 {kATSFlattenedFontSpecifierRawNameData = 0x6E616D64,};
enum $2856EDCC204806654D5E6774772BEA3B {kNavNormalState = 0x0,kNavDontOpenState = 0x1,kNavDontSaveState = 0x2,kNavDontChooseState = 0x4,kNavDontNewFolderState = 0x10,};
struct $286297D7ED7D1E69C987DFC5B91154C6 {CFStringRef contentDescription;};
struct $2870BF0A11D62C2BAB99A23C79EFA86B {CFIndex version;CFBagRetainCallBack retain;CFBagReleaseCallBack release;CFBagCopyDescriptionCallBack copyDescription;CFBagEqualCallBack equal;CFBagHashCallBack hash;};
enum $2876A993FC47D423AF396C60D6012753 {kTXNTextensionFile = 0x7478746E,kTXNTextFile = 0x54455854,kTXNPictureFile = 0x50494354,kTXNMovieFile = 0x4D6F6F56,kTXNSoundFile = 0x7366696C,kTXNAIFFFile = 0x41494646,kTXNUnicodeTextFile = 0x75747874,};
enum $2877E13E31F106A97C9B5B2CF1A9AC10 {pOwner = 0x736F776E,pOwnerPrivileges = 0x6F776E72,pGroup = 0x73677270,pGroupPrivileges = 0x67707072,pGuestPrivileges = 0x67737470,pArePrivilegesInherited = 0x69707276,pExported = 0x73657870,pMounted = 0x736D6F75,pSharingProtection = 0x7370726F,pSharing = 0x73686172,pSharingWindow = 0x73776E64,};
enum $28931D4AEA6298DB1D3AC8A95D725E37 {smRoman = 0x0,smJapanese = 0x1,smTradChinese = 0x2,smKorean = 0x3,smArabic = 0x4,smHebrew = 0x5,smGreek = 0x6,smCyrillic = 0x7,smRSymbol = 0x8,smDevanagari = 0x9,smGurmukhi = 0xA,smGujarati = 0xB,smOriya = 0xC,smBengali = 0xD,smTamil = 0xE,smTelugu = 0xF,smKannada = 0x10,smMalayalam = 0x11,smSinhalese = 0x12,smBurmese = 0x13,smKhmer = 0x14,smThai = 0x15,smLao = 0x16,smGeorgian = 0x17,smArmenian = 0x18,smSimpChinese = 0x19,smTibetan = 0x1A,smMongolian = 0x1B,smEthiopic = 0x1C,smGeez = 0x1C,smCentralEuroRoman = 0x1D,smVietnamese = 0x1E,smExtArabic = 0x1F,smUninterp = 0x20,};
enum $289BFECE86E39479B22F4B214C93A57E {kKERNTag = 0x6B65726E,kKERNCurrentVersion = 0x10000,kKERNVertical = 0x8000,kKERNResetCrossStream = 0x8000,kKERNCrossStream = 0x4000,kKERNVariation = 0x2000,kKERNUnusedBits = 0x1F00,kKERNFormatMask = 0xFF,};
enum $28A98E62B77DF7F5CDA3C3FA5C6F699A {kPPPMaxIDLength = 0xFF,kPPPMaxPasswordLength = 0xFF,kPPPMaxDTEAddressLength = 0x7F,kPPPMaxCallInfoLength = 0xFF,};
enum $28BE9745FBFAC7613E1AD2B56AA356CB {kNoProcess = 0x0,kSystemProcess = 0x1,kCurrentProcess = 0x2,};
enum $28FB4D098DA8AF3937F4BD37519880CE {kDataBrowserItemAdded = 0x1,kDataBrowserItemRemoved = 0x2,kDataBrowserEditStarted = 0x3,kDataBrowserEditStopped = 0x4,kDataBrowserItemSelected = 0x5,kDataBrowserItemDeselected = 0x6,kDataBrowserItemDoubleClicked = 0x7,kDataBrowserContainerOpened = 0x8,kDataBrowserContainerClosing = 0x9,kDataBrowserContainerClosed = 0xA,kDataBrowserContainerSorting = 0xB,kDataBrowserContainerSorted = 0xC,kDataBrowserUserToggledContainer = 0x10,kDataBrowserTargetChanged = 0xF,kDataBrowserUserStateChanged = 0xD,kDataBrowserSelectionSetChanged = 0xE,};
enum $28FE91DF9121F7059ACEA23C62B6E760 {gestaltOpenFirmwareInfo = 0x6F706677,};
enum $291DE409B98F2FAEF8DBF3929DA1B9A7 {verFrBelgiumLux = 0x6,verBelgiumLux = 0x6,verArabia = 0x10,verYugoslavia = 0x19,verIndia = 0x21,verPakistan = 0x22,verRumania = 0x27,verGreekAncient = 0x28,verLapland = 0x2E,verFaeroeIsl = 0x2F,verGenericFE = 0x3A,verBelarus = 0x3D,verUkrania = 0x3E,verAlternateGr = 0x40,verSerbia = 0x41,verSlovenia = 0x42,verMacedonia = 0x43,verBrittany = 0x4D,verWales = 0x4F,verArmenia = 0x54,verGeorgia = 0x55,verAustriaGerman = 0x5C,verTibet = 0x69,};
enum $292A8589014EEBEA2BBD692E83CD6225 {kScheduledSoundDoScheduled = 0x1,kScheduledSoundDoCallBack = 0x2,kScheduledSoundExtendedHdr = 0x4,};
enum $29926AB924E42B27C90E0FDA4D67BBF6 {kAllTypographicFeaturesType = 0x0,kLigaturesType = 0x1,kCursiveConnectionType = 0x2,kLetterCaseType = 0x3,kVerticalSubstitutionType = 0x4,kLinguisticRearrangementType = 0x5,kNumberSpacingType = 0x6,kSmartSwashType = 0x8,kDiacriticsType = 0x9,kVerticalPositionType = 0xA,kFractionsType = 0xB,kOverlappingCharactersType = 0xD,kTypographicExtrasType = 0xE,kMathematicalExtrasType = 0xF,kOrnamentSetsType = 0x10,kCharacterAlternativesType = 0x11,kDesignComplexityType = 0x12,kStyleOptionsType = 0x13,kCharacterShapeType = 0x14,kNumberCaseType = 0x15,kTextSpacingType = 0x16,kTransliterationType = 0x17,kAnnotationType = 0x18,kKanaSpacingType = 0x19,kIdeographicSpacingType = 0x1A,kUnicodeDecompositionType = 0x1B,kRubyKanaType = 0x1C,kCJKSymbolAlternativesType = 0x1D,kIdeographicAlternativesType = 0x1E,kCJKVerticalRomanPlacementType = 0x1F,kItalicCJKRomanType = 0x20,kCJKRomanSpacingType = 0x67,kLastFeatureType = 0xFFFFFFFF,};
enum $29BD2EC3A2B216A66733D3791733D12E : unsigned __int32 {kNoTransform = 0x0,kUseAtoB = 0x1,kUseBtoA = 0x2,kUseBtoB = 0x3,kDeviceToPCS = 0x1,kPCSToDevice = 0x2,kPCSToPCS = 0x3,kUseProfileIntent = 0xFFFFFFFF,};
enum $29C789C36C453FE12340AEDF2D4ADAB2 {gestaltFontMgrAttr = 0x666F6E74,gestaltOutlineFonts = 0x0,};
enum $2A026A222F6C5D89289B1A56BA3719A9 {kOTGenericName = 0x0,};
enum $2A5C702EB051A5E9BD920DD6120C5BE3 {kDialectBundleResType = 0x4462646C,cConstant = 0x656E756D,cClassIdentifier = 0x70636C73,cObjectBeingExamined = 0x65786D6E,cList = 0x6C697374,cSmallReal = 0x73696E67,cReal = 0x646F7562,cRecord = 0x7265636F,cReference = 0x6F626A20,cUndefined = 0x756E6466,cMissingValue = 0x6D736E67,cSymbol = 0x73796D62,cLinkedList = 0x6C6C7374,cVector = 0x76656374,cEventIdentifier = 0x65766E74,cKeyIdentifier = 0x6B796964,cUserIdentifier = 0x75696420,cPreposition = 0x70726570,cKeyForm = 0x6B66726D,cScript = 0x73637074,cHandler = 0x68616E64,cProcedure = 0x70726F63,};
enum $2A7B9736BE1849E3C769D40762E3702E {afpBadDirIDType = 0xFFFFEC3C,afpCantMountMoreSrvre = 0xFFFFEC3B,afpAlreadyMounted = 0xFFFFEC3A,afpSameNodeErr = 0xFFFFEC39,};
enum $2AA34CC205287293993E11A04E1223E8 {kSoundConverterDidntFillBuffer = 0x1,kSoundConverterHasLeftOverData = 0x2,};
enum $2AB5D6A772B8172B4B991C3F25B47EF1 {verFrBelgium = 0x62,verUzbek = 0x63,verSingapore = 0x64,verNynorsk = 0x65,verAfrikaans = 0x66,verEsperanto = 0x67,verMarathi = 0x68,verTibetan = 0x69,verNepal = 0x6A,verGreenland = 0x6B,verIrelandEnglish = 0x6C,};
enum $2AD233D1A8169D23B7A929610FCC1D08 {dialogNoTimeoutErr = 0xFFFFE9F8,};
enum $2AD2746AAD449D8F818CFC8E4C18D9CF {kEventFontPanelClosed = 0x1,kEventFontSelection = 0x2,};
enum $2ADEDB255B0512C82B8BB6B7EC2F9A80 : unsigned __int32 {kDisplayModeIDCurrent = 0x0,kDisplayModeIDInvalid = 0xFFFFFFFF,kDisplayModeIDFindFirstResolution = 0xFFFFFFFE,kDisplayModeIDNoMoreResolutions = 0xFFFFFFFD,kDisplayModeIDFindFirstProgrammable = 0xFFFFFFFC,kDisplayModeIDBootProgrammable = 0xFFFFFFFB,kDisplayModeIDReservedBase = 0x80000000,};
enum $2AFA9741D4492F551C527940D8BE691A {couldNotResolveDataRef = 0xFFFFF830,badImageDescription = 0xFFFFF82F,badPublicMovieAtom = 0xFFFFF82E,cantFindHandler = 0xFFFFF82D,cantOpenHandler = 0xFFFFF82C,badComponentType = 0xFFFFF82B,noMediaHandler = 0xFFFFF82A,noDataHandler = 0xFFFFF829,invalidMedia = 0xFFFFF828,invalidTrack = 0xFFFFF827,invalidMovie = 0xFFFFF826,invalidSampleTable = 0xFFFFF825,invalidDataRef = 0xFFFFF824,invalidHandler = 0xFFFFF823,invalidDuration = 0xFFFFF822,invalidTime = 0xFFFFF821,cantPutPublicMovieAtom = 0xFFFFF820,badEditList = 0xFFFFF81F,mediaTypesDontMatch = 0xFFFFF81E,progressProcAborted = 0xFFFFF81D,movieToolboxUninitialized = 0xFFFFF81C,noRecordOfApp = 0xFFFFF81C,wfFileNotFound = 0xFFFFF81B,cantCreateSingleForkFile = 0xFFFFF81A,invalidEditState = 0xFFFFF819,nonMatchingEditState = 0xFFFFF818,staleEditState = 0xFFFFF817,userDataItemNotFound = 0xFFFFF816,maxSizeToGrowTooSmall = 0xFFFFF815,badTrackIndex = 0xFFFFF814,trackIDNotFound = 0xFFFFF813,trackNotInMovie = 0xFFFFF812,timeNotInTrack = 0xFFFFF811,timeNotInMedia = 0xFFFFF810,badEditIndex = 0xFFFFF80F,internalQuickTimeError = 0xFFFFF80E,cantEnableTrack = 0xFFFFF80D,invalidRect = 0xFFFFF80C,invalidSampleNum = 0xFFFFF80B,invalidChunkNum = 0xFFFFF80A,invalidSampleDescIndex = 0xFFFFF809,invalidChunkCache = 0xFFFFF808,invalidSampleDescription = 0xFFFFF807,dataNotOpenForRead = 0xFFFFF806,dataNotOpenForWrite = 0xFFFFF805,dataAlreadyOpenForWrite = 0xFFFFF804,dataAlreadyClosed = 0xFFFFF803,endOfDataReached = 0xFFFFF802,dataNoDataRef = 0xFFFFF801,noMovieFound = 0xFFFFF800,invalidDataRefContainer = 0xFFFFF7FF,badDataRefIndex = 0xFFFFF7FE,noDefaultDataRef = 0xFFFFF7FD,couldNotUseAnExistingSample = 0xFFFFF7FC,featureUnsupported = 0xFFFFF7FB,noVideoTrackInMovieErr = 0xFFFFF7FA,noSoundTrackInMovieErr = 0xFFFFF7F9,soundSupportNotAvailableErr = 0xFFFFF7F8,unsupportedAuxiliaryImportData = 0xFFFFF7F7,auxiliaryExportDataUnavailable = 0xFFFFF7F6,samplesAlreadyInMediaErr = 0xFFFFF7F5,noSourceTreeFoundErr = 0xFFFFF7F4,sourceNotFoundErr = 0xFFFFF7F3,movieTextNotFoundErr = 0xFFFFF7F2,missingRequiredParameterErr = 0xFFFFF7F1,invalidSpriteWorldPropertyErr = 0xFFFFF7F0,invalidSpritePropertyErr = 0xFFFFF7EF,gWorldsNotSameDepthAndSizeErr = 0xFFFFF7EE,invalidSpriteIndexErr = 0xFFFFF7ED,invalidImageIndexErr = 0xFFFFF7EC,invalidSpriteIDErr = 0xFFFFF7EB,};
enum $2B07577E37C77A79992F4495009860B8 {kPPPEvent = 0x230F0000,kPPPConnectCompleteEvent = 0x230F0001,kPPPSetScriptCompleteEvent = 0x230F0002,kPPPDisconnectCompleteEvent = 0x230F0003,kPPPDisconnectEvent = 0x230F0004,kPPPIPCPUpEvent = 0x230F0005,kPPPIPCPDownEvent = 0x230F0006,kPPPLCPUpEvent = 0x230F0007,kPPPLCPDownEvent = 0x230F0008,kPPPLowerLayerUpEvent = 0x230F0009,kPPPLowerLayerDownEvent = 0x230F000A,kPPPAuthenticationStartedEvent = 0x230F000B,kPPPAuthenticationFinishedEvent = 0x230F000C,kPPPDCEInitStartedEvent = 0x230F000D,kPPPDCEInitFinishedEvent = 0x230F000E,kPPPDCECallStartedEvent = 0x230F000F,kPPPDCECallFinishedEvent = 0x230F0010,};
enum $2B14D9DCB8FE26549588D1BE234D7547 {kFMUseGlobalScopeOption = 0x1,};
enum $2B19AFD6F09FF083E377A3C8585D38E2 {kSRDefaultSpeechSource = 0x0,kSRLiveDesktopSpeechSource = 0x646B6C76,kSRCanned22kHzSpeechSource = 0x63613232,};
enum $2B1F18C23A76AAF7D29CF15D55104ED0 {kMacJapaneseStandardVariant = 0x0,kMacJapaneseStdNoVerticalsVariant = 0x1,kMacJapaneseBasicVariant = 0x2,kMacJapanesePostScriptScrnVariant = 0x3,kMacJapanesePostScriptPrintVariant = 0x4,kMacJapaneseVertAtKuPlusTenVariant = 0x5,};
enum $2B635558B2017DCAD703B8CE85A88DC0 {kSRNotificationParam = 0x6E6F7469,kSRCallBackParam = 0x63616C6C,kSRSearchStatusParam = 0x73746174,kSRAutoFinishingParam = 0x6166696E,kSRForegroundOnly = 0x66676F6E,kSRBlockBackground = 0x626C6267,kSRBlockModally = 0x626C6D64,kSRWantsResultTextDrawn = 0x74786662,kSRWantsAutoFBGestures = 0x64666272,kSRSoundInVolume = 0x766F6C75,kSRReadAudioFSSpec = 0x61757264,kSRCancelOnSoundOut = 0x6361736F,kSRSpeedVsAccuracyParam = 0x73706564,};
enum $2B8FA9178F9716021BF160634EC4DACD {kMPTaskInfoVersion = 0x3,};
enum $2B948946B8DF86DAE9837629489BD9DD {kProcessorCacheModeDefault = 0x0,kProcessorCacheModeInhibited = 0x1,kProcessorCacheModeWriteThrough = 0x2,kProcessorCacheModeCopyBack = 0x3,};
enum $2B9B40918A5FC86D87CA80770F223D29 {kPEFRelocWithSkipMaxSkipCount = 0xFF,kPEFRelocWithSkipMaxRelocCount = 0x3F,};
enum $2BAF925D252C54092A9203465E07E5D1 {kTextEncodingDOSLatinUS = 0x400,kTextEncodingDOSGreek = 0x405,kTextEncodingDOSBalticRim = 0x406,kTextEncodingDOSLatin1 = 0x410,kTextEncodingDOSGreek1 = 0x411,kTextEncodingDOSLatin2 = 0x412,kTextEncodingDOSCyrillic = 0x413,kTextEncodingDOSTurkish = 0x414,kTextEncodingDOSPortuguese = 0x415,kTextEncodingDOSIcelandic = 0x416,kTextEncodingDOSHebrew = 0x417,kTextEncodingDOSCanadianFrench = 0x418,kTextEncodingDOSArabic = 0x419,kTextEncodingDOSNordic = 0x41A,kTextEncodingDOSRussian = 0x41B,kTextEncodingDOSGreek2 = 0x41C,kTextEncodingDOSThai = 0x41D,kTextEncodingDOSJapanese = 0x420,kTextEncodingDOSChineseSimplif = 0x421,kTextEncodingDOSKorean = 0x422,kTextEncodingDOSChineseTrad = 0x423,kTextEncodingWindowsLatin1 = 0x500,kTextEncodingWindowsANSI = 0x500,kTextEncodingWindowsLatin2 = 0x501,kTextEncodingWindowsCyrillic = 0x502,kTextEncodingWindowsGreek = 0x503,kTextEncodingWindowsLatin5 = 0x504,kTextEncodingWindowsHebrew = 0x505,kTextEncodingWindowsArabic = 0x506,kTextEncodingWindowsBalticRim = 0x507,kTextEncodingWindowsVietnamese = 0x508,kTextEncodingWindowsKoreanJohab = 0x510,};
enum $2BB7EB5F01DFBF52A43AE4F88416DCD3 {kSIGHUP = 0x1,kSIGURG = 0x10,kSIGPOLL = 0x1E,};
enum $2BFF417E1E5031DF99030C00EEE59E87 {kInjectionSubPSAdobe = 0x1,kInjectionSubPSAdobeEPS = 0x2,kInjectionSubBoundingBox = 0x3,kInjectionSubEndComments = 0x4,kInjectionSubOrientation = 0x5,kInjectionSubPages = 0x6,kInjectionSubPageOrder = 0x7,kInjectionSubBeginProlog = 0x8,kInjectionSubEndProlog = 0x9,kInjectionSubBeginSetup = 0xA,kInjectionSubEndSetup = 0xB,kInjectionSubBeginDefaults = 0xC,kInjectionSubEndDefaults = 0xD,kInjectionSubDocFonts = 0xE,kInjectionSubDocNeededFonts = 0xF,kInjectionSubDocSuppliedFonts = 0x10,kInjectionSubDocNeededRes = 0x11,kInjectionSubDocSuppliedRes = 0x12,kInjectionSubDocCustomColors = 0x13,kInjectionSubDocProcessColors = 0x14,kInjectionSubPlateColor = 0x15,kInjectionSubPageTrailer = 0x16,kInjectionSubTrailer = 0x17,kInjectionSubEOF = 0x18,kInjectionSubBeginFont = 0x19,kInjectionSubEndFont = 0x1A,kInjectionSubBeginResource = 0x1B,kInjectionSubEndResource = 0x1C,kInjectionSubPage = 0x1D,kInjectionSubBeginPageSetup = 0x1E,kInjectionSubEndPageSetup = 0x1F,};
enum $2C0E49CF04AC0912764A88C0F717855D {kSSpInternalErr = 0xFFFF897C,kSSpVersionErr = 0xFFFF897B,kSSpCantInstallErr = 0xFFFF897A,kSSpParallelUpVectorErr = 0xFFFF8979,kSSpScaleToZeroErr = 0xFFFF8978,};
enum $2C441A4C9DFE18B245ECF3A994B7DC2A {kHICommandOK = 0x6F6B2020,kHICommandCancel = 0x6E6F7421,kHICommandQuit = 0x71756974,kHICommandUndo = 0x756E646F,kHICommandRedo = 0x7265646F,kHICommandCut = 0x63757420,kHICommandCopy = 0x636F7079,kHICommandPaste = 0x70617374,kHICommandClear = 0x636C6561,kHICommandSelectAll = 0x73616C6C,kHICommandHide = 0x68696465,kHICommandHideOthers = 0x6869646F,kHICommandShowAll = 0x7368616C,kHICommandPreferences = 0x70726566,kHICommandZoomWindow = 0x7A6F6F6D,kHICommandMinimizeWindow = 0x6D696E69,kHICommandMinimizeAll = 0x6D696E61,kHICommandMaximizeWindow = 0x6D617869,kHICommandMaximizeAll = 0x6D617861,kHICommandArrangeInFront = 0x66726E74,kHICommandBringAllToFront = 0x62667274,kHICommandWindowListSeparator = 0x776C6476,kHICommandWindowListTerminator = 0x776C7374,kHICommandSelectWindow = 0x7377696E,kHICommandRotateWindowsForward = 0x726F7477,kHICommandRotateWindowsBackward = 0x726F7462,kHICommandRotateFloatingWindowsForward = 0x72746677,kHICommandRotateFloatingWindowsBackward = 0x72746662,kHICommandAbout = 0x61626F75,kHICommandNew = 0x6E657720,kHICommandOpen = 0x6F70656E,kHICommandClose = 0x636C6F73,kHICommandSave = 0x73617665,kHICommandSaveAs = 0x73766173,kHICommandRevert = 0x72767274,kHICommandPrint = 0x70726E74,kHICommandPageSetup = 0x70616765,kHICommandAppHelp = 0x61686C70,};
enum $2C738BB2E79274237638134EAD04BA3D {kMPAllocateClearMask = 0x1,kMPAllocateGloballyMask = 0x2,kMPAllocateResidentMask = 0x4,kMPAllocateNoGrowthMask = 0x10,kMPAllocateNoCreateMask = 0x20,};
enum $2C7B85F3FA308E82B6227DC0179B718C {kSuppressNumberBit = 0x0,kSuppressNumberMask = 0x1,kForceNumberBit = 0x1,kForceNumberMask = 0x2,kSuppressNameBit = 0x2,kSuppressNameMask = 0x4,};
enum $2C8F5E59CE94E2D56FBA915CC9A36563 {kToolbarCustomizeIcon = 0x74637573,kToolbarDeleteIcon = 0x7464656C,kToolbarFavoritesIcon = 0x74666176,kToolbarHomeIcon = 0x74686F6D,};
enum $2CE304E57CAFDF92251A2A037D806032 {kTXNIgnoreCaseMask = 0x1,kTXNEntireWordMask = 0x2,kTXNUseEncodingWordRulesMask = 0x80000000,};
enum $2CFF26A5DE00F216976732A12FFA4336 : unsigned __int32 {kPPPAsyncMapCharsNone = 0x0,kPPPAsyncMapCharsXOnXOff = 0xA0000,kPPPAsyncMapCharsAll = 0xFFFFFFFF,};
enum $2D19DE106AF6926C0AB3CDA57A3505A7 {sizeof_sfntVariationHeader = 0x10,};
enum $2D53C2E3A90C12ACB14D730A0953F9ED {kTextService = 0x74737663,kTSMVersion = 0x150,};
enum $2D922AD87A068D9EFD7A5424B461DF55 {kOSASelectSetResumeDispatchProc = 0x801,kOSASelectGetResumeDispatchProc = 0x802,kOSASelectExecuteEvent = 0x803,kOSASelectDoEvent = 0x804,kOSASelectMakeContext = 0x805,};
struct $2D96D59ABE3C8E91669C7813E262BD23 {CFIndex numberOfAttributes;CFXMLAttributeDeclarationInfo *attributes;};
enum $2D990118765E11A30155FC25478859F0 {kPEFAbsoluteExport = 0xFFFFFFFE,kPEFReexportedImport = 0xFFFFFFFD,};
enum $2D9BB5004B997CCA0AEB85E8F21E315F {kCFragLibUsageMapPrivatelyMask = 0x1,};
enum $2DA05D06990FCEC1EA5697B9BD8DA598 {chooserInitMsg = 0xB,newSelMsg = 0xC,fillListMsg = 0xD,getSelMsg = 0xE,selectMsg = 0xF,deselectMsg = 0x10,terminateMsg = 0x11,buttonMsg = 0x13,};
enum $2DDB486F41D721344AB6D11534B7313C {sizeof_sfntDescriptorHeader = 0x8,};
enum $2E21CDC9416351B60D3647421538B7E9 {notAQTVRMovieErr = 0xFFFF88B4,constraintReachedErr = 0xFFFF88B3,callNotSupportedByNodeErr = 0xFFFF88B2,selectorNotSupportedByNodeErr = 0xFFFF88B1,invalidNodeIDErr = 0xFFFF88B0,invalidViewStateErr = 0xFFFF88AF,timeNotInViewErr = 0xFFFF88AE,propertyNotSupportedByNodeErr = 0xFFFF88AD,settingNotSupportedByNodeErr = 0xFFFF88AC,limitReachedErr = 0xFFFF88AB,invalidNodeFormatErr = 0xFFFF88AA,invalidHotSpotIDErr = 0xFFFF88A9,noMemoryNodeFailedInitialize = 0xFFFF88A8,streamingNodeNotReadyErr = 0xFFFF88A7,qtvrLibraryLoadErr = 0xFFFF88A6,qtvrUninitialized = 0xFFFF88A5,};
enum $2E39A52188C948464A385AF817055394 {kFontRomanScript = 0x0,kFontJapaneseScript = 0x1,kFontTraditionalChineseScript = 0x2,kFontChineseScript = 0x2,kFontKoreanScript = 0x3,kFontArabicScript = 0x4,kFontHebrewScript = 0x5,kFontGreekScript = 0x6,kFontCyrillicScript = 0x7,kFontRussian = 0x7,kFontRSymbolScript = 0x8,kFontDevanagariScript = 0x9,kFontGurmukhiScript = 0xA,kFontGujaratiScript = 0xB,kFontOriyaScript = 0xC,kFontBengaliScript = 0xD,kFontTamilScript = 0xE,kFontTeluguScript = 0xF,kFontKannadaScript = 0x10,kFontMalayalamScript = 0x11,kFontSinhaleseScript = 0x12,kFontBurmeseScript = 0x13,kFontKhmerScript = 0x14,kFontThaiScript = 0x15,kFontLaotianScript = 0x16,kFontGeorgianScript = 0x17,kFontArmenianScript = 0x18,kFontSimpleChineseScript = 0x19,kFontTibetanScript = 0x1A,kFontMongolianScript = 0x1B,kFontGeezScript = 0x1C,kFontEthiopicScript = 0x1C,kFontAmharicScript = 0x1C,kFontSlavicScript = 0x1D,kFontEastEuropeanRomanScript = 0x1D,kFontVietnameseScript = 0x1E,kFontExtendedArabicScript = 0x1F,kFontSindhiScript = 0x1F,kFontUninterpretedScript = 0x20,};
enum $2E3D7232155086A9CD8F035352E02415 {kFSNodeLockedBit = 0x0,kFSNodeLockedMask = 0x1,kFSNodeResOpenBit = 0x2,kFSNodeResOpenMask = 0x4,kFSNodeDataOpenBit = 0x3,kFSNodeDataOpenMask = 0x8,kFSNodeIsDirectoryBit = 0x4,kFSNodeIsDirectoryMask = 0x10,kFSNodeCopyProtectBit = 0x6,kFSNodeCopyProtectMask = 0x40,kFSNodeForkOpenBit = 0x7,kFSNodeForkOpenMask = 0x80,kFSNodeHardLinkBit = 0x8,kFSNodeHardLinkMask = 0x100,};
enum $2E53312CD098273790C8819CDB1751E0 {kSpecialCase = 0xF,};
enum $2E6D08671535653AB0850E6118C81692 {kCFStreamErrorSOCKS4RequestFailed = 0x5B,kCFStreamErrorSOCKS4IdentdFailed = 0x5C,kCFStreamErrorSOCKS4IdConflict = 0x5D,};
enum $2E70F577918B25A15CE357A167451738 {overlayDITL = 0x0,appendDITLRight = 0x1,appendDITLBottom = 0x2,};
enum $2E759173088CD34CCF4479622CDEF5B8 {noErr = 0x0,};
enum $2E76A3EFE2DFCB8474F09D279EC9199C {kCCReminderTimerDisabled = 0x0,kCCIPIdleTimerDisabled = 0x0,};
enum $2EE0A3710DCEACD4D342AF2898BC3EA8 {kTECKeepInfoFixBit = 0x0,kTECFallbackTextLengthFixBit = 0x1,kTECTextRunBitClearFixBit = 0x2,kTECTextToUnicodeScanFixBit = 0x3,kTECAddForceASCIIChangesBit = 0x4,kTECPreferredEncodingFixBit = 0x5,kTECAddTextRunHeuristicsBit = 0x6,kTECAddFallbackInterruptBit = 0x7,};
enum $2EE66211F648EF83D95245ADB7E26EDD {kICAFileystemGenericFlat = 0x1,kICAFileystemGenericHierarchical = 0x2,kICAFileystemDCF = 0x3,};
enum $2EE6D656A6356132BC5631EBF7AA5929 {blackColor = 0x21,whiteColor = 0x1E,redColor = 0xCD,greenColor = 0x155,blueColor = 0x199,cyanColor = 0x111,magentaColor = 0x89,yellowColor = 0x45,};
enum $2EE7D5DAEFC0218485F45691B93ABFEC {kZIPMaxZoneLength = 0x20,};
enum $2EEF8E6407447DE8AF0EEF99D4107F62 {taDstDocNeedsResourceFork = 0x1,taDstIsAppTranslation = 0x2,};
enum $2EF80823EBAE833F9BEF95A642F863FC {kLoadCFrag = 0x1,};
enum $2EFEFBD1ED1EA7D6693939AAE8617090 {pSound = 0x736E6420,};
enum $2F393A44FA7D43EA46AB04A3E52C4581 {kUnicodeTextBreakClass = 0x7562726B,};
enum $2F4053154C1DA5B15268672C87042D1D {gestaltTextEditVersion = 0x74652020,gestaltTE1 = 0x1,gestaltTE2 = 0x2,gestaltTE3 = 0x3,gestaltTE4 = 0x4,gestaltTE5 = 0x5,};
enum $2F748C7048492C1CC10F7B84FA26101F {collectionItemLockedErr = 0xFFFFE98A,collectionItemNotFoundErr = 0xFFFFE989,collectionIndexRangeErr = 0xFFFFE988,collectionVersionErr = 0xFFFFE987,};
enum $2F77717C3467B00F30752604503E3172 {kHMHelpMenuID = 0xFFFFBF96,kHMAboutHelpItem = 0x1,kHMShowBalloonsItem = 0x3,};
enum $2FAD546653DFDD791220E09C8A430711 {kControlTabInfoTag = 0x74616269,};
enum $2FDE9989EF27A8A38A136C2CAF60C310 {cmElementTagNotFound = 0xFFFFEF98,cmIndexRangeErr = 0xFFFFEF97,cmCantDeleteElement = 0xFFFFEF96,cmFatalProfileErr = 0xFFFFEF95,cmInvalidProfile = 0xFFFFEF94,cmInvalidProfileLocation = 0xFFFFEF93,cmCantCopyModifiedV1Profile = 0xFFFFEF89,cmInvalidSearch = 0xFFFFEF92,cmSearchError = 0xFFFFEF91,cmErrIncompatibleProfile = 0xFFFFEF90,cmInvalidColorSpace = 0xFFFFEF8F,cmInvalidSrcMap = 0xFFFFEF8E,cmInvalidDstMap = 0xFFFFEF8D,cmNoGDevicesError = 0xFFFFEF8C,cmInvalidProfileComment = 0xFFFFEF8B,cmRangeOverFlow = 0xFFFFEF8A,cmNamedColorNotFound = 0xFFFFEF88,cmCantGamutCheckError = 0xFFFFEF87,};
enum $301BEF7BC6A7C60A6119F9876836D67F {kControlContentTextOnly = 0x0,kControlNoContent = 0x0,kControlContentIconSuiteRes = 0x1,kControlContentCIconRes = 0x2,kControlContentPictRes = 0x3,kControlContentICONRes = 0x4,kControlContentIconSuiteHandle = 0x81,kControlContentCIconHandle = 0x82,kControlContentPictHandle = 0x83,kControlContentIconRef = 0x84,kControlContentICON = 0x85,};
enum $30300197AA741E77EEFBF647F24E601C {keySRRecognizer = 0x6B726563,keySRSpeechResult = 0x6B737072,keySRSpeechStatus = 0x6B737374,};
enum $3047220F3D7A398B0972C14C1F499FC6 {kTextEncodingFullName = 0x0,kTextEncodingBaseName = 0x1,kTextEncodingVariantName = 0x2,kTextEncodingFormatName = 0x3,};
enum $305290A9B0793269B4735667ACD5875D {teWordSelect = 0x4,teWordDrag = 0x8,teFromFind = 0xC,teFromRecal = 0x10,};
enum $30710C4805EC8A4225361DA131BA6704 {pFileCreator = 0x66637274,pFileType = 0x61737479,pFileTypeOld = 0x66697470,pIsLocked = 0x61736C6B,pIsLockedOld = 0x69736C6B,pProductVersion = 0x76657232,};
enum $308CD85ED9DF3010B91D54912D981480 {kSoundCodecInfoFixedCompression = 0x1,kSoundCodecInfoVariableCompression = 0x2,kSoundCodecInfoHasRestrictedInputRates = 0x4,kSoundCodecInfoCanChangeOutputRate = 0x8,kSoundCodecInfoRequiresExternalFraming = 0x10,kSoundCodecInfoVariableDuration = 0x20,};
enum $309DD8F4158E7783E222B7593DB45679 {kHIDVersionIncompatibleErr = 0xFFFFC9AB,kHIDDeviceNotReady = 0xFFFFC9AA,};
enum $30A271533B16FBF92BD618DE28754DC0 {kAEHandleArray = 0x2,};
enum $30CD7FC0C2D09243D54684151A3B7CA6 {kHICommandFromMenu = 0x1,kHICommandFromControl = 0x2,kHICommandFromWindow = 0x4,};
enum $30F5F423D43A0BE5AE53DBB98D7F01BA {currSymLead = 0x10,currNegSym = 0x20,currTrailingZ = 0x40,currLeadingZ = 0x80,};
enum $311BC893892944B9DF7F45C6C8E9B8F8 {domCannot = 0x0,domNative = 0x1,domTranslateFirst = 0x2,domWildcard = 0x3,};
struct $312614BEBC9CD181F3FDC0EAC6892AB9 {int value;const char *name;};
enum $3167A38BDC0A4E18ED28D72748406697 {kNavMenuItemSpecVersion = 0x0,};
enum $318BA9FAC98AD053DE1DC371BC0A1F59 {kCapacityIsActual = 0x0,kCapacityIsPercentOfMax = 0x1,};
enum $318FEE3BE517F02C6247902680864AA2 {kAEDataArray = 0x0,kAEPackedArray = 0x1,kAEDescArray = 0x3,kAEKeyDescArray = 0x4,};
enum $31AE040C3D8CFBCED30F297D94D6D97F {cmReflectiveTransparentMask = 0x1,cmGlossyMatteMask = 0x2,};
enum $31B58F0C4171800B87307B79B51495FA {kEventLoopIdleTimerStarted = 0x1,kEventLoopIdleTimerIdling = 0x2,kEventLoopIdleTimerStopped = 0x3,};
enum $31BFEC093C72560E30DAC863EFC36065 {kNavDialogCreationOptionsVersion = 0x0,};
enum $31E6C359F8E649D61793711BB93492EB {kCFStreamStatusNotOpen = 0x0,kCFStreamStatusOpening = 0x1,kCFStreamStatusOpen = 0x2,kCFStreamStatusReading = 0x3,kCFStreamStatusWriting = 0x4,kCFStreamStatusAtEnd = 0x5,kCFStreamStatusClosed = 0x6,kCFStreamStatusError = 0x7,};
enum $3219DF91C5FEAFDCC71F04D022D7B8F5 {kCFStreamErrorSOCKS5BadResponseAddr = 0x1,kCFStreamErrorSOCKS5BadState = 0x2,kCFStreamErrorSOCKSUnknownClientVersion = 0x3,};
enum $321D8F37350CDFAA8B1036FD70E704C0 {kAlignNone = 0x0,kAlignVerticalCenter = 0x1,kAlignTop = 0x2,kAlignBottom = 0x3,kAlignHorizontalCenter = 0x4,kAlignAbsoluteCenter = 0x5,kAlignCenterTop = 0x6,kAlignCenterBottom = 0x7,kAlignLeft = 0x8,kAlignCenterLeft = 0x9,kAlignTopLeft = 0xA,kAlignBottomLeft = 0xB,kAlignRight = 0xC,kAlignCenterRight = 0xD,kAlignTopRight = 0xE,kAlignBottomRight = 0xF,};
enum $3232EB4724A143CE939A0F1C00AC752B {kOTAnyInetAddress = 0x0,};
enum $323AA7EF4BF72B6051E409ED4AFA698D {kSndInputReadAsyncSelect = 0x1,kSndInputReadSyncSelect = 0x2,kSndInputPauseRecordingSelect = 0x3,kSndInputResumeRecordingSelect = 0x4,kSndInputStopRecordingSelect = 0x5,kSndInputGetStatusSelect = 0x6,kSndInputGetDeviceInfoSelect = 0x7,kSndInputSetDeviceInfoSelect = 0x8,kSndInputInitHardwareSelect = 0x9,};
enum $32669029A1B18DE8C09CECEB1063E0B5 {kOSIZDontOpenResourceFile = 0xF,kOSIZdontAcceptRemoteEvents = 0xE,kOSIZOpenWithReadPermission = 0xD,kOSIZCodeInSharedLibraries = 0xB,};
enum $329F2D89AF7996FA5E7E2766126FBBE8 {kFontMicrosoftSymbolScript = 0x0,kFontMicrosoftStandardScript = 0x1,kFontMicrosoftUCS4Script = 0xA,};
enum $32B75A1AA46F1B1DD1726F04BCD4FBEB {kFirstDepthMode = 0x80,kSecondDepthMode = 0x81,kThirdDepthMode = 0x82,kFourthDepthMode = 0x83,kFifthDepthMode = 0x84,kSixthDepthMode = 0x85,};
enum $32C727D68F64E81892FE811EECA6C0F9 {resSysHeap = 0x40,resPurgeable = 0x20,resLocked = 0x10,resProtected = 0x8,resPreload = 0x4,resChanged = 0x2,mapReadOnly = 0x80,mapCompact = 0x40,mapChanged = 0x20,};
enum $32C729C88CE832800A236F2596111AC4 {stdSH = 0x0,extSH = 0xFF,cmpSH = 0xFE,};
enum $32DB5D6554B35DA6B92CAAF3073356B7 {T_ATALKBADROUTEREVENT = 0x23010046,T_ALLNODESTAKENEVENT = 0x23010047,T_FIXEDNODETAKENEVENT = 0x23010048,T_MPPCOMPATCFIGEVENT = 0x23010049,T_FIXEDNODEBADEVENT = 0x2301004A,};
enum $32E183A1C590C6AC9842FDC007C241A9 {kMPTaskPropagate = 0x0,kMPTaskResumeStep = 0x1,kMPTaskResumeBranch = 0x2,kMPTaskResumeMask = 0x0,kMPTaskPropagateMask = 0x1,kMPTaskResumeStepMask = 0x2,kMPTaskResumeBranchMask = 0x4,};
enum $32E9081972DAF83781E34712ABC3DF8E {kTXNRightTab = 0xFFFFFFFF,kTXNLeftTab = 0x0,kTXNCenterTab = 0x1,};
enum $3319A1FBB374FBE17A00D08E7017EFC7 {kControlGroupBoxTitleRectTag = 0x74726563,};
enum $3326E0CEB360AB4CAA9F1D7226F37565 {maxSize = 0x7FFFFFF0,};
enum $3334C0DF8E465B026500896357EA1158 {cmspFavorEmbeddedMask = 0x1,};
enum $333B154C3EB4D8DDCA6A976D4C3734A3 {kControlDialogItem = 0x4,kButtonDialogItem = 0x4,kCheckBoxDialogItem = 0x5,kRadioButtonDialogItem = 0x6,kResourceControlDialogItem = 0x7,kStaticTextDialogItem = 0x8,kEditTextDialogItem = 0x10,kIconDialogItem = 0x20,kPictureDialogItem = 0x40,kUserDialogItem = 0x0,kHelpDialogItem = 0x1,kItemDisableBit = 0x80,};
enum $333BEF332B2A04727AB3D8007BA446C6 {cdevGenErr = 0xFFFFFFFF,cdevMemErr = 0x0,cdevResErr = 0x1,cdevUnset = 0x3,};
enum $33435161B3FD09CFD0CE9FE8EDBDC65C {pAboutMacintosh = 0x61626278,pAppleMenuItemsFolder = 0x616D6E75,pControlPanelsFolder = 0x6374726C,pDesktop = 0x6465736B,pExtensionsFolder = 0x6578746E,pFinderPreferences = 0x70667270,pFontsFolder = 0x666F6E74,pFontsFolderPreAllegro = 0x66666E74,pLargestFreeBlock = 0x6D667265,pPreferencesFolder = 0x70726566,pShortCuts = 0x73637574,pShutdownFolder = 0x73686466,pStartupItemsFolder = 0x73747274,pSystemFolder = 0x6D616373,pTemporaryFolder = 0x74656D70,pViewPreferences = 0x70767770,pStartingUp = 0x6177616B,};
enum $33644192E5871B59FE3A3685CFA7F9CF {telGenericError = 0xFFFFFFFF,telNoErr = 0x0,telNoTools = 0x8,telBadTermErr = 0xFFFFD8EF,telBadDNErr = 0xFFFFD8EE,telBadCAErr = 0xFFFFD8ED,telBadHandErr = 0xFFFFD8EC,telBadProcErr = 0xFFFFD8EB,telCAUnavail = 0xFFFFD8EA,telNoMemErr = 0xFFFFD8E9,telNoOpenErr = 0xFFFFD8E8,telBadHTypeErr = 0xFFFFD8E6,telHTypeNotSupp = 0xFFFFD8E5,telBadLevelErr = 0xFFFFD8E4,telBadVTypeErr = 0xFFFFD8E3,telVTypeNotSupp = 0xFFFFD8E2,telBadAPattErr = 0xFFFFD8E1,telAPattNotSupp = 0xFFFFD8E0,telBadIndex = 0xFFFFD8DF,telIndexNotSupp = 0xFFFFD8DE,telBadStateErr = 0xFFFFD8DD,telStateNotSupp = 0xFFFFD8DC,telBadIntExt = 0xFFFFD8DB,telIntExtNotSupp = 0xFFFFD8DA,telBadDNDType = 0xFFFFD8D9,telDNDTypeNotSupp = 0xFFFFD8D8,telFeatNotSub = 0xFFFFD8D2,telFeatNotAvail = 0xFFFFD8D1,telFeatActive = 0xFFFFD8D0,telFeatNotSupp = 0xFFFFD8CF,telConfLimitErr = 0xFFFFD8C8,telConfNoLimit = 0xFFFFD8C7,telConfErr = 0xFFFFD8C6,telConfRej = 0xFFFFD8C5,telTransferErr = 0xFFFFD8C4,telTransferRej = 0xFFFFD8C3,telCBErr = 0xFFFFD8C2,telConfLimitExceeded = 0xFFFFD8C1,telBadDNType = 0xFFFFD8BE,telBadPageID = 0xFFFFD8BD,telBadIntercomID = 0xFFFFD8BC,telBadFeatureID = 0xFFFFD8BB,telBadFwdType = 0xFFFFD8BA,telBadPickupGroupID = 0xFFFFD8B9,telBadParkID = 0xFFFFD8B8,telBadSelect = 0xFFFFD8B7,telBadBearerType = 0xFFFFD8B6,telBadRate = 0xFFFFD8B5,telDNTypeNotSupp = 0xFFFFD8B4,telFwdTypeNotSupp = 0xFFFFD8B3,telBadDisplayMode = 0xFFFFD8B2,telDisplayModeNotSupp = 0xFFFFD8B1,telNoCallbackRef = 0xFFFFD8B0,telAlreadyOpen = 0xFFFFD8AA,telStillNeeded = 0xFFFFD8A9,telTermNotOpen = 0xFFFFD8A8,telCANotAcceptable = 0xFFFFD8A0,telCANotRejectable = 0xFFFFD89F,telCANotDeflectable = 0xFFFFD89E,telPBErr = 0xFFFFD896,telBadFunction = 0xFFFFD895,telNoSuchTool = 0xFFFFD88A,telUnknownErr = 0xFFFFD889,telNoCommFolder = 0xFFFFD886,telInitFailed = 0xFFFFD885,telBadCodeResource = 0xFFFFD884,telDeviceNotFound = 0xFFFFD883,telBadProcID = 0xFFFFD882,telValidateFailed = 0xFFFFD881,telAutoAnsNotOn = 0xFFFFD880,telDetAlreadyOn = 0xFFFFD87F,telBadSWErr = 0xFFFFD87E,telBadSampleRate = 0xFFFFD87D,telNotEnoughdspBW = 0xFFFFD87C,};
enum $336CC6651FCB0DCB616C524240E3BE5F {activeFlag = 0x1,btnState = 0x80,cmdKey = 0x100,shiftKey = 0x200,alphaLock = 0x400,optionKey = 0x800,controlKey = 0x1000,rightShiftKey = 0x2000,rightOptionKey = 0x4000,rightControlKey = 0x8000,};
enum $3396F92FAC0BE03A6A5A931576A5D5DF : unsigned __int32 {englishHighWord = 0x80000000,dutchHighWord = 0x40000000,germanHighWord = 0x20000000,swedishHighWord = 0x10000000,danishHighWord = 0x8000000,spanishHighWord = 0x4000000,portugueseHighWord = 0x2000000,italianHighWord = 0x1000000,frenchHighWord = 0x800000,romanHighWord = 0x400000,icelandicHighWord = 0x200000,hebrewHighWord = 0x100000,arabicHighWord = 0x80000,centeuroHighWord = 0x40000,croatianHighWord = 0x20000,turkishHighWord = 0x10000,romanianHighWord = 0x8000,greekHighWord = 0x4000,cyrillicHighWord = 0x2000,devanagariHighWord = 0x1000,gujuratiHighWord = 0x800,gurmukhiHighWord = 0x400,japaneseHighWord = 0x200,koreanHighWord = 0x100,kDefaultLanguagesHighWord = 0xFF800000,};
enum $3422B1CF3045E52D34E7CD5530D8F41B {kCertSearchShift = 0x0,kCertSearchSigningIgnored = 0x0,kCertSearchSigningAllowed = 0x1,kCertSearchSigningDisallowed = 0x2,kCertSearchSigningMask = 0x3,kCertSearchVerifyIgnored = 0x0,kCertSearchVerifyAllowed = 0x4,kCertSearchVerifyDisallowed = 0x8,kCertSearchVerifyMask = 0xC,kCertSearchEncryptIgnored = 0x0,kCertSearchEncryptAllowed = 0x10,kCertSearchEncryptDisallowed = 0x20,kCertSearchEncryptMask = 0x30,kCertSearchDecryptIgnored = 0x0,kCertSearchDecryptAllowed = 0x40,kCertSearchDecryptDisallowed = 0x80,kCertSearchDecryptMask = 0xC0,kCertSearchWrapIgnored = 0x0,kCertSearchWrapAllowed = 0x100,kCertSearchWrapDisallowed = 0x200,kCertSearchWrapMask = 0x300,kCertSearchUnwrapIgnored = 0x0,kCertSearchUnwrapAllowed = 0x400,kCertSearchUnwrapDisallowed = 0x800,kCertSearchUnwrapMask = 0xC00,kCertSearchPrivKeyRequired = 0x1000,kCertSearchAny = 0x0,};
enum $3440D64D16FB405A2CB84B328E064CCF {nameFontTableTag = 0x6E616D65,};
enum $3454BBA784CA790F10B34184CE0F44E5 {kAHTOCTypeUser = 0x0,kAHTOCTypeDeveloper = 0x1,};
enum $34692F00CBC093E53A6B2074F6D6B0FC {kEventControlGetSubviewForMouseEvent = 0x10,};
enum $349E66C84FB33302B10067F6FF0FEF67 {kOTOptionHeaderSize = 0x10,kOTBooleanOptionDataSize = 0x4,kOTBooleanOptionSize = 0x14,kOTOneByteOptionSize = 0x11,kOTTwoByteOptionSize = 0x12,kOTFourByteOptionSize = 0x14,};
enum $34B9BBB49DD1E66D12B76611DC925692 {kATSULineWidthTag = 0x1,kATSULineRotationTag = 0x2,kATSULineDirectionTag = 0x3,kATSULineJustificationFactorTag = 0x4,kATSULineFlushFactorTag = 0x5,kATSULineBaselineValuesTag = 0x6,kATSULineLayoutOptionsTag = 0x7,kATSULineAscentTag = 0x8,kATSULineDescentTag = 0x9,kATSULineLangRegionTag = 0xA,kATSULineTextLocatorTag = 0xB,kATSULineTruncationTag = 0xC,kATSULineFontFallbacksTag = 0xD,kATSULayoutOperationOverrideTag = 0xF,kATSUMaxLineTag = 0x10,kATSULineLanguageTag = 0xA,kATSUCGContextTag = 0x7FFF,kATSUQDBoldfaceTag = 0x100,kATSUQDItalicTag = 0x101,kATSUQDUnderlineTag = 0x102,kATSUQDCondensedTag = 0x103,kATSUQDExtendedTag = 0x104,kATSUFontTag = 0x105,kATSUSizeTag = 0x106,kATSUColorTag = 0x107,kATSULangRegionTag = 0x108,kATSUVerticalCharacterTag = 0x109,kATSUImposeWidthTag = 0x10A,kATSUBeforeWithStreamShiftTag = 0x10B,kATSUAfterWithStreamShiftTag = 0x10C,kATSUCrossStreamShiftTag = 0x10D,kATSUTrackingTag = 0x10E,kATSUHangingInhibitFactorTag = 0x10F,kATSUKerningInhibitFactorTag = 0x110,kATSUDecompositionFactorTag = 0x111,kATSUBaselineClassTag = 0x112,kATSUPriorityJustOverrideTag = 0x113,kATSUNoLigatureSplitTag = 0x114,kATSUNoCaretAngleTag = 0x115,kATSUSuppressCrossKerningTag = 0x116,kATSUNoOpticalAlignmentTag = 0x117,kATSUForceHangingTag = 0x118,kATSUNoSpecialJustificationTag = 0x119,kATSUStyleTextLocatorTag = 0x11A,kATSUStyleRenderingOptionsTag = 0x11B,kATSUAscentTag = 0x11C,kATSUDescentTag = 0x11D,kATSULeadingTag = 0x11E,kATSUGlyphSelectorTag = 0x11F,kATSURGBAlphaColorTag = 0x120,kATSUFontMatrixTag = 0x121,kATSUMaxStyleTag = 0x122,kATSULanguageTag = 0x108,kATSUMaxATSUITagValue = 0xFFFF,};
enum $34C391497873CBDA4D27A6E235EC390E {kControlBevelButtonContentTag = 0x636F6E74,kControlBevelButtonTransformTag = 0x7472616E,kControlBevelButtonTextAlignTag = 0x74616C69,kControlBevelButtonTextOffsetTag = 0x746F6666,kControlBevelButtonGraphicAlignTag = 0x67616C69,kControlBevelButtonGraphicOffsetTag = 0x676F6666,kControlBevelButtonTextPlaceTag = 0x74706C63,kControlBevelButtonMenuValueTag = 0x6D76616C,kControlBevelButtonMenuHandleTag = 0x6D686E64,kControlBevelButtonMenuRefTag = 0x6D686E64,kControlBevelButtonCenterPopupGlyphTag = 0x70676C63,};
enum $34C44FA1EB33A75D55D31AB7242818E7 {kOTISDNMaxPhoneSize = 0x20,kOTISDNMaxSubSize = 0x4,};
enum $350E73F968CE09982C591815BE446154 {kPMNoError = 0x0,kPMGeneralError = 0xFFFF876A,kPMOutOfScope = 0xFFFF8769,kPMInvalidParameter = 0xFFFFFFCE,kPMNoDefaultPrinter = 0xFFFF8768,kPMNotImplemented = 0xFFFF8767,kPMNoSuchEntry = 0xFFFF8766,kPMInvalidPrintSettings = 0xFFFF8765,kPMInvalidPageFormat = 0xFFFF8764,kPMValueOutOfRange = 0xFFFF8763,kPMLockIgnored = 0xFFFF8762,};
enum $352F0CC169D7C257D0C240A4BD1C1389 {kASHasOpenHandler = 0x68736F64,};
enum $3541876FE2AD3682576FC5B6A1C277E7 {kTXNFontContinuousBit = 0x0,kTXNSizeContinuousBit = 0x1,kTXNStyleContinuousBit = 0x2,kTXNColorContinuousBit = 0x3,};
enum $354762F32BABF820C20F799DF5C6EFDF {kControlTabDirectionNorth = 0x0,kControlTabDirectionSouth = 0x1,kControlTabDirectionEast = 0x2,kControlTabDirectionWest = 0x3,};
enum $3575D480F83BC5CD421A38F8979F08EF {gestaltQuickTimeVersion = 0x7174696D,gestaltQuickTime = 0x7174696D,};
enum $358F770087C90F7E302ADCD5D4CC4BB5 {kFNSInvalidReferenceErr = 0xFFFF8C74,kFNSBadReferenceVersionErr = 0xFFFF8C73,kFNSInvalidProfileErr = 0xFFFF8C72,kFNSBadProfileVersionErr = 0xFFFF8C71,kFNSDuplicateReferenceErr = 0xFFFF8C70,kFNSMismatchErr = 0xFFFF8C6F,kFNSInsufficientDataErr = 0xFFFF8C6E,kFNSBadFlattenedSizeErr = 0xFFFF8C6D,kFNSNameNotFoundErr = 0xFFFF8C6B,};
enum $35AB7496AFDF131FB91D3029C8F3C096 {kPowerManagementCommand = 0xD,};
enum $35ABA4C7EB65B9ACD7BBB244B5700913 {kControlDefProcPtr = 0x0,kControlDefObjectClass = 0x1,};
enum $35BCCCDE2A8528438318EFAE5BA8E17C {pTextStyles = 0x74787374,pTransferMode = 0x7070746D,pTranslation = 0x70747273,pUniformStyles = 0x7573746C,pUpdateOn = 0x70757064,pUserSelection = 0x7075736C,pVersion = 0x76657273,pVisible = 0x70766973,};
enum $35C3FD2F79E4FCCC5D88667BC8D9CB34 {AppleShareMediaType = 0x6166706D,};
enum $35DD4B6AA31C362F43B9F52BD9EF5C3D {kFirstMagicBusyFiletype = 0x627A7920,kLastMagicBusyFiletype = 0x627A793F,};
enum $35F3A8173F0AA0C26984333843D3183B {helpItem = 0x1,};
enum $360EFBF6D019B7E4E7D3247A6DC2D386 {kAEUseSocksAttr = 0x78736373,kAESocksProxyAttr = 0x78736F6B,kAESocksHostAttr = 0x78736873,kAESocksPortAttr = 0x78736870,kAESocksUserAttr = 0x78736875,kAESocksPasswordAttr = 0x78736877,};
enum $362283CE3903912DCE1BF0557EC54E0A {kThemeBrushSheetBackground = 0x32,};
enum $3633B4F0E54DDA8905FCDD25F24F41EE {kUCKeyTranslateNoDeadKeysBit = 0x0,};
enum $3646DE91A668EC8A7A6D8FC888A91811 {gestaltFindFolderAttr = 0x666F6C64,gestaltFindFolderPresent = 0x0,gestaltFolderDescSupport = 0x1,gestaltFolderMgrFollowsAliasesWhenResolving = 0x2,gestaltFolderMgrSupportsExtendedCalls = 0x3,gestaltFolderMgrSupportsDomains = 0x4,gestaltFolderMgrSupportsFSCalls = 0x5,};
enum $368D980834D25C124E108BF4CDCB0F22 {gestaltScreenCaptureMain = 0x70696331,gestaltScreenCaptureDir = 0x70696332,};
enum $36C9AA34640057AC0626DF422832AE95 {kTextEncodingDefaultFormat = 0x0,kUnicode16BitFormat = 0x0,kUnicodeUTF7Format = 0x1,kUnicodeUTF8Format = 0x2,kUnicode32BitFormat = 0x3,};
struct $371416558E2C84A8231FBC985E0B72DB {CFStreamErrorDomain domain;SInt32 error;};
enum $373DB765CCEA5ADDF41643121FA287A2 {kIORegistryIterateRecursively = 0x1,kIORegistryIterateParents = 0x2,};
enum $3794836E65DBB51FCFBD4A241932E17E : unsigned __int32 {kETypeStandard = 0x0,kETypeMulticast = 0x1,kETypeBroadcast = 0x2,kETRawPacketBit = 0x80000000,kETTimeStampBit = 0x40000000,};
enum $37A7B666E794B68B3B3F32E45577580D {gestaltDigitalSignatureVersion = 0x64736967,};
enum $37BB35479611D3806ACFE5BDAFE1A9BC {kMacFarsiStandardVariant = 0x0,kMacFarsiTrueTypeVariant = 0x1,};
enum $37CA61F817E3AEAC21F16EA5A9C92F13 {invalColReq = 0xFFFFFFFF,};
enum $37D3F017CE89DF4C910B7AFE8C81EA0A {bLimitFCBs = 0x1F,bLocalWList = 0x1E,bNoMiniFndr = 0x1D,bNoVNEdit = 0x1C,bNoLclSync = 0x1B,bTrshOffLine = 0x1A,bNoSwitchTo = 0x19,bNoDeskItems = 0x14,bNoBootBlks = 0x13,bAccessCntl = 0x12,bNoSysDir = 0x11,bHasExtFSVol = 0x10,bHasOpenDeny = 0xF,bHasCopyFile = 0xE,bHasMoveRename = 0xD,bHasDesktopMgr = 0xC,bHasShortName = 0xB,bHasFolderLock = 0xA,bHasPersonalAccessPrivileges = 0x9,bHasUserGroupList = 0x8,bHasCatSearch = 0x7,bHasFileIDs = 0x6,bHasBTreeMgr = 0x5,bHasBlankAccessPrivileges = 0x4,bSupportsAsyncRequests = 0x3,bSupportsTrashVolumeCache = 0x2,};
struct $3805DC96D7729D989786B86BA1DC19E6 {CFIndex version;const void *(__fastcall *retain)(CFAllocatorRef allocator, const void *ptr);void (__fastcall *release)(CFAllocatorRef allocator, const void *ptr);CFStringRef (__fastcall *copyDescription)(const void *ptr);CFComparisonResult (__fastcall *compare)(const void *ptr1, const void *ptr2, void *context);};
enum $38122B22BA272F31FAC18AA53F8ECC57 {kThemeDragSoundNone = 0x0,kThemeDragSoundMoveWindow = 0x776D6F76,kThemeDragSoundGrowWindow = 0x7767726F,kThemeDragSoundMoveUtilWindow = 0x756D6F76,kThemeDragSoundGrowUtilWindow = 0x7567726F,kThemeDragSoundMoveDialog = 0x646D6F76,kThemeDragSoundMoveAlert = 0x616D6F76,kThemeDragSoundMoveIcon = 0x696D6F76,kThemeDragSoundSliderThumb = 0x736C7468,kThemeDragSoundSliderGhost = 0x736C6768,kThemeDragSoundScrollBarThumb = 0x73627468,kThemeDragSoundScrollBarGhost = 0x73626768,kThemeDragSoundScrollBarArrowDecreasing = 0x73626164,kThemeDragSoundScrollBarArrowIncreasing = 0x73626169,kThemeDragSoundDragging = 0x64726167,};
enum $382ECCCE0EF7D7E03F54175CD0A27625 {cmReflective = 0x0,cmGlossy = 0x1,};
enum $3847F09FCD087D161C673033C30446EC {kDragHasLeftSenderWindow = 0x1,kDragInsideSenderApplication = 0x2,kDragInsideSenderWindow = 0x4,};
enum $386EDE6329DAB2239299F98F42FE6EAA {kCursorImageMajorVersion = 0x1,kCursorImageMinorVersion = 0x0,};
enum $387113DC9FF97F5E5D540DB5CB6BED11 {gestaltHelpMgrAttr = 0x68656C70,gestaltHelpMgrPresent = 0x0,gestaltHelpMgrExtensions = 0x1,gestaltAppleGuideIsDebug = 0x1E,gestaltAppleGuidePresent = 0x1F,};
enum $3873DF13CB08E61F19CE0A69CFF61EB8 {RS_HIPRI = 0x1,};
enum $387872D70D825AD7A54186238C3730A9 {kICAEventCancelTransaction = 0x65636E74,kICAEventObjectAdded = 0x656F6261,kICAEventObjectRemoved = 0x656F6272,kICAEventStoreAdded = 0x65737461,kICAEventStoreRemoved = 0x65737472,kICAEventDeviceAdded = 0x65646561,kICAEventDeviceRemoved = 0x65646572,kICAEventDevicePropChanged = 0x65647063,kICAEventObjectInfoChanged = 0x656F6963,kICAEventDeviceInfoChanged = 0x65646963,kICAEventRequestObjectTransfer = 0x65726F74,kICAEventStoreFull = 0x65737466,kICAEventDeviceReset = 0x65647672,kICAEventStorageInfoChanged = 0x65736963,kICAEventCaptureComplete = 0x65637063,kICAEventUnreportedStatus = 0x65757273,};
enum $388005F4F31217FC42F79FB8545CC0B2 {kDataBrowserUniversalPropertyFlagsMask = 0xFF,kDataBrowserPropertyIsMutable = 0x1,kDataBrowserDefaultPropertyFlags = 0x0,kDataBrowserUniversalPropertyFlags = 0xFF,kDataBrowserPropertyIsEditable = 0x1,};
enum $389472E42E6B4667E0DB660FBA08A4C9 {SNDZERO = 0x1,};
enum $38B6386C7BDC44667E322A0093038B01 {kTRAKTag = 0x7472616B,kTRAKCurrentVersion = 0x10000,kTRAKUniformFormat = 0x0,};
enum $38BE0C7E82A185D93C9819A4837F2FFA {kCMMOpen = 0xFFFFFFFF,kCMMClose = 0xFFFFFFFE,kCMMGetInfo = 0xFFFFFFFC,kNCMMInit = 0x6,kCMMMatchColors = 0x1,kCMMCheckColors = 0x2,kCMMValidateProfile = 0x8,kCMMMatchBitmap = 0x9,kCMMCheckBitmap = 0xA,kCMMConcatenateProfiles = 0x5,kCMMConcatInit = 0x7,kCMMNewLinkProfile = 0x10,kNCMMConcatInit = 0x12,kNCMMNewLinkProfile = 0x13,kCMMGetPS2ColorSpace = 0xB,kCMMGetPS2ColorRenderingIntent = 0xC,kCMMGetPS2ColorRendering = 0xD,kCMMGetPS2ColorRenderingVMSize = 0x11,kCMMFlattenProfile = 0xE,kCMMUnflattenProfile = 0xF,kCMMInit = 0x0,kCMMGetNamedColorInfo = 0x46,kCMMGetNamedColorValue = 0x47,kCMMGetIndNamedColorValue = 0x48,kCMMGetNamedColorIndex = 0x49,kCMMGetNamedColorName = 0x4A,kCMMMatchPixMap = 0x3,kCMMCheckPixMap = 0x4,};
struct $38F21E503577E91FC3176BE5FAB8D74D {CFIndex version;CFDictionaryRetainCallBack retain;CFDictionaryReleaseCallBack release;CFDictionaryCopyDescriptionCallBack copyDescription;CFDictionaryEqualCallBack equal;};
enum $38F42C5B37EE73E0BF51034C716FB1A4 {platformIRIXmips = 0x3E8,platformSunOSsparc = 0x44C,platformSunOSintel = 0x44D,platformLinuxppc = 0x4B0,platformLinuxintel = 0x4B1,platformAIXppc = 0x514,platformNeXTIntel = 0x578,platformNeXTppc = 0x579,platformNeXTsparc = 0x57A,platformNeXT68k = 0x57B,platformMacOSx86 = 0x5DC,};
enum $391EF62022B5F055B9F06E57B6F22A6C {kControlCollectionTagSubControls = 0x73756263,};
enum $39242B4B50EA0F39BEA57EF6B92DB50E {kLSUnknownErr = 0xFFFFD5C6,kLSNotAnApplicationErr = 0xFFFFD5C5,kLSNotInitializedErr = 0xFFFFD5C4,kLSDataUnavailableErr = 0xFFFFD5C3,kLSApplicationNotFoundErr = 0xFFFFD5C2,kLSUnknownTypeErr = 0xFFFFD5C1,kLSDataTooOldErr = 0xFFFFD5C0,kLSDataErr = 0xFFFFD5BF,kLSLaunchInProgressErr = 0xFFFFD5BE,kLSNotRegisteredErr = 0xFFFFD5BD,kLSAppDoesNotClaimTypeErr = 0xFFFFD5BC,kLSAppDoesNotSupportSchemeWarning = 0xFFFFD5BB,kLSServerCommunicationErr = 0xFFFFD5BA,kLSCannotSetInfoErr = 0xFFFFD5B9,};
enum $392D07C295136F2DD7CF43A05EE190F7 {errIANoErr = 0x0,errIAUnknownErr = 0xFFFFEAFC,errIAAllocationErr = 0xFFFFEAFB,errIAParamErr = 0xFFFFEAFA,errIANoMoreItems = 0xFFFFEAF9,errIABufferTooSmall = 0xFFFFEAF8,errIACanceled = 0xFFFFEAF7,errIAInvalidDocument = 0xFFFFEAF6,errIATextExtractionErr = 0xFFFFEAF5,errIAEndOfTextRun = 0xFFFFEAF4,};
enum $3933B8F48C98D0D93541C47984EA10F4 {kFontSelectionQDStyleVersionZero = 0x0,};
enum $396E5D5C35075BE4F59EA56CCB4944B5 {kAEMouseClass = 0x6D6F7573,kAEDown = 0x646F776E,kAEUp = 0x75702020,kAEMoved = 0x6D6F7665,kAEStoppedMoving = 0x73746F70,kAEWindowClass = 0x77696E64,kAEUpdate = 0x75706474,kAEActivate = 0x61637476,kAEDeactivate = 0x64616374,kAECommandClass = 0x636D6E64,kAEKeyClass = 0x6B657963,kAERawKey = 0x726B6579,kAEVirtualKey = 0x6B657963,kAENavigationKey = 0x6E617665,kAEAutoDown = 0x6175746F,kAEApplicationClass = 0x6170706C,kAESuspend = 0x73757370,kAEResume = 0x72736D65,kAEDiskEvent = 0x6469736B,kAENullEvent = 0x6E756C6C,kAEWakeUpEvent = 0x77616B65,kAEScrapEvent = 0x73637270,kAEHighLevel = 0x68696768,};
enum $3984900454BBB9C1D564DB71C5AFE31A {kDataBrowserSelectionAnchorUp = 0x0,kDataBrowserSelectionAnchorDown = 0x1,kDataBrowserSelectionAnchorLeft = 0x2,kDataBrowserSelectionAnchorRight = 0x3,};
enum $398D9D582B1C2F1C3FE9270172E85A51 {kDurationImmediate = 0x0,kDurationForever = 0x7FFFFFFF,kDurationMillisecond = 0x1,kDurationMicrosecond = 0xFFFFFFFF,};
enum $39BB08BE97442728A4F53B80076F6C3F {vLckdErr = 0xFFFFFFD2,fBsyErr = 0xFFFFFFD1,dupFNErr = 0xFFFFFFD0,opWrErr = 0xFFFFFFCF,rfNumErr = 0xFFFFFFCD,gfpErr = 0xFFFFFFCC,volOffLinErr = 0xFFFFFFCB,permErr = 0xFFFFFFCA,volOnLinErr = 0xFFFFFFC9,nsDrvErr = 0xFFFFFFC8,noMacDskErr = 0xFFFFFFC7,extFSErr = 0xFFFFFFC6,fsRnErr = 0xFFFFFFC5,badMDBErr = 0xFFFFFFC4,wrPermErr = 0xFFFFFFC3,dirNFErr = 0xFFFFFF88,tmwdoErr = 0xFFFFFF87,badMovErr = 0xFFFFFF86,wrgVolTypErr = 0xFFFFFF85,volGoneErr = 0xFFFFFF84,};
enum $39C62CED0EE16DDDF93A72B0BB6E772C {gestaltAddressingModeAttr = 0x61646472,gestalt32BitAddressing = 0x0,gestalt32BitSysZone = 0x1,gestalt32BitCapable = 0x2,};
enum $39F22650FBB10C65F25E01B87E0BA722 {gestaltVMAttr = 0x766D2020,gestaltVMPresent = 0x0,gestaltVMHasLockMemoryForOutput = 0x1,gestaltVMFilemappingOn = 0x3,gestaltVMHasPagingControl = 0x4,};
enum $39FE76983533385EB60014D19059B326 {kIdleKCEventMask = 0x1,kLockKCEventMask = 0x2,kUnlockKCEventMask = 0x4,kAddKCEventMask = 0x8,kDeleteKCEventMask = 0x10,kUpdateKCEventMask = 0x20,kPasswordChangedKCEventMask = 0x40,kSystemEventKCEventMask = 0x100,kDefaultChangedKCEventMask = 0x200,kDataAccessKCEventMask = 0x400,kEveryKCEventMask = 0xFFFF,};
enum $3A0529DF53FD0FCB1009E9B11B87DC72 {fatalDateTime = 0x8000,longDateFound = 0x1,leftOverChars = 0x2,sepNotIntlSep = 0x4,fieldOrderNotIntl = 0x8,extraneousStrings = 0x10,tooManySeps = 0x20,sepNotConsistent = 0x40,tokenErr = 0x8100,cantReadUtilities = 0x8200,dateTimeNotFound = 0x8400,dateTimeInvalid = 0x8800,};
enum $3A78DA32205E3F16325E1415CD307FF9 {kFontNoPlatform = 0xFFFFFFFF,kFontNoScript = 0xFFFFFFFF,kFontNoLanguage = 0xFFFFFFFF,kFontNoName = 0xFFFFFFFF,};
enum $3A7A8AC7CE50134FE71AC9280204F0F0 {kCollectionDontWantTag = 0x0,kCollectionDontWantId = 0x0,kCollectionDontWantSize = 0x0,kCollectionDontWantAttributes = 0x0,kCollectionDontWantIndex = 0x0,kCollectionDontWantData = 0x0,};
enum $3A81B91097E2FB5855C4E68A15E48C43 {kMenuTrackingModeMouse = 0x1,kMenuTrackingModeKeyboard = 0x2,};
enum $3AE31DEFEC789F421169512F9345A350 {UDP_CHECKSUM = 0x600,UDP_RX_ICMP = 0x2,};
enum $3AF7AF3D144C4B2285FED2463B608B9F {kOTNoError = 0x0,kOTOutOfMemoryErr = 0xFFFFF375,kOTNotFoundErr = 0xFFFFF37F,kOTDuplicateFoundErr = 0xFFFFF370,kOTBadAddressErr = 0xFFFFF3B2,kOTBadOptionErr = 0xFFFFF3B1,kOTAccessErr = 0xFFFFF3B0,kOTBadReferenceErr = 0xFFFFF3AF,kOTNoAddressErr = 0xFFFFF3AE,kOTOutStateErr = 0xFFFFF3AD,kOTBadSequenceErr = 0xFFFFF3AC,kOTSysErrorErr = 0xFFFFF3AB,kOTLookErr = 0xFFFFF3AA,kOTBadDataErr = 0xFFFFF3A9,kOTBufferOverflowErr = 0xFFFFF3A8,kOTFlowErr = 0xFFFFF3A7,kOTNoDataErr = 0xFFFFF3A6,kOTNoDisconnectErr = 0xFFFFF3A5,kOTNoUDErrErr = 0xFFFFF3A4,kOTBadFlagErr = 0xFFFFF3A3,kOTNoReleaseErr = 0xFFFFF3A2,kOTNotSupportedErr = 0xFFFFF3A1,kOTStateChangeErr = 0xFFFFF3A0,kOTNoStructureTypeErr = 0xFFFFF39F,kOTBadNameErr = 0xFFFFF39E,kOTBadQLenErr = 0xFFFFF39D,kOTAddressBusyErr = 0xFFFFF39C,kOTIndOutErr = 0xFFFFF39B,kOTProviderMismatchErr = 0xFFFFF39A,kOTResQLenErr = 0xFFFFF399,kOTResAddressErr = 0xFFFFF398,kOTQFullErr = 0xFFFFF397,kOTProtocolErr = 0xFFFFF396,kOTBadSyncErr = 0xFFFFF395,kOTCanceledErr = 0xFFFFF394,kEPERMErr = 0xFFFFF380,kENOENTErr = 0xFFFFF37F,kENORSRCErr = 0xFFFFF37E,kEINTRErr = 0xFFFFF37D,kEIOErr = 0xFFFFF37C,kENXIOErr = 0xFFFFF37B,kEBADFErr = 0xFFFFF378,kEAGAINErr = 0xFFFFF376,kENOMEMErr = 0xFFFFF375,kEACCESErr = 0xFFFFF374,kEFAULTErr = 0xFFFFF373,kEBUSYErr = 0xFFFFF371,kEEXISTErr = 0xFFFFF370,kENODEVErr = 0xFFFFF36E,kEINVALErr = 0xFFFFF36B,kENOTTYErr = 0xFFFFF368,kEPIPEErr = 0xFFFFF361,kERANGEErr = 0xFFFFF35F,kEWOULDBLOCKErr = 0xFFFFF35E,kEDEADLKErr = 0xFFFFF35E,kEALREADYErr = 0xFFFFF35C,kENOTSOCKErr = 0xFFFFF35B,kEDESTADDRREQErr = 0xFFFFF35A,kEMSGSIZEErr = 0xFFFFF359,kEPROTOTYPEErr = 0xFFFFF358,kENOPROTOOPTErr = 0xFFFFF357,kEPROTONOSUPPORTErr = 0xFFFFF356,kESOCKTNOSUPPORTErr = 0xFFFFF355,kEOPNOTSUPPErr = 0xFFFFF354,kEADDRINUSEErr = 0xFFFFF351,kEADDRNOTAVAILErr = 0xFFFFF350,kENETDOWNErr = 0xFFFFF34F,kENETUNREACHErr = 0xFFFFF34E,kENETRESETErr = 0xFFFFF34D,kECONNABORTEDErr = 0xFFFFF34C,kECONNRESETErr = 0xFFFFF34B,kENOBUFSErr = 0xFFFFF34A,kEISCONNErr = 0xFFFFF349,kENOTCONNErr = 0xFFFFF348,kESHUTDOWNErr = 0xFFFFF347,kETOOMANYREFSErr = 0xFFFFF346,kETIMEDOUTErr = 0xFFFFF345,kECONNREFUSEDErr = 0xFFFFF344,kEHOSTDOWNErr = 0xFFFFF341,kEHOSTUNREACHErr = 0xFFFFF340,kEPROTOErr = 0xFFFFF33B,kETIMEErr = 0xFFFFF33A,kENOSRErr = 0xFFFFF339,kEBADMSGErr = 0xFFFFF338,kECANCELErr = 0xFFFFF337,kENOSTRErr = 0xFFFFF336,kENODATAErr = 0xFFFFF335,kEINPROGRESSErr = 0xFFFFF334,kESRCHErr = 0xFFFFF333,kENOMSGErr = 0xFFFFF332,kOTClientNotInittedErr = 0xFFFFF331,kOTPortHasDiedErr = 0xFFFFF330,kOTPortWasEjectedErr = 0xFFFFF32F,kOTBadConfigurationErr = 0xFFFFF32E,kOTConfigurationChangedErr = 0xFFFFF32D,kOTUserRequestedErr = 0xFFFFF32C,kOTPortLostConnection = 0xFFFFF32B,};
enum $3B07715F5C571C1DFC3C2205604D835E {kNSLDuplicateSearchInProgress = 0x64,kNSLUserCanceled = 0xFFFFFF80,kNSLInvalidEnumeratorRef = 0x0,};
enum $3B0C431FD925B99390198B52ACDED39A {cmProfileError = 0xFFFFFF56,cmMethodError = 0xFFFFFF55,cmMethodNotFound = 0xFFFFFF51,cmProfileNotFound = 0xFFFFFF50,cmProfilesIdentical = 0xFFFFFF4F,cmCantConcatenateError = 0xFFFFFF4E,cmCantXYZ = 0xFFFFFF4D,cmCantDeleteProfile = 0xFFFFFF4C,cmUnsupportedDataType = 0xFFFFFF4B,cmNoCurrentProfile = 0xFFFFFF4A,};
enum $3B240B4C9ACC633426814EA91DA89F65 {startupFolderIconResource = 0xFFFFF073,ownedFolderIconResource = 0xFFFFF074,dropFolderIconResource = 0xFFFFF075,sharedFolderIconResource = 0xFFFFF076,mountedFolderIconResource = 0xFFFFF077,controlPanelFolderIconResource = 0xFFFFF078,printMonitorFolderIconResource = 0xFFFFF079,preferencesFolderIconResource = 0xFFFFF07A,extensionsFolderIconResource = 0xFFFFF07B,fontsFolderIconResource = 0xFFFFF080,fullTrashIconResource = 0xFFFFF070,};
enum $3B288B253B9DFA8790EBE30055BE38F5 {noScrapErr = 0xFFFFFF9C,noTypeErr = 0xFFFFFF9A,};
enum $3B4D0449E18B76301ADFB1B079EE1872 {kOSAScriptBestType = 0x62657374,};
enum $3B7BF87796B10E1D45F922741B5B9019 {gestaltTSMgrVersion = 0x74736D76,gestaltTSMgr15 = 0x150,gestaltTSMgr20 = 0x200,};
enum $3BB830724CD4649A590AE644D49AFE76 {langPortugese = 0x8,langMalta = 0x10,langYugoslavian = 0x12,langChinese = 0x13,langLettish = 0x1C,langLapponian = 0x1D,langLappish = 0x1D,langSaamisk = 0x1D,langFaeroese = 0x1E,langIrish = 0x23,langGalla = 0x57,langAfricaans = 0x8D,};
enum $3BC2EE64601F1052F4EDBF2AF7711574 {kWindowZoomTransitionEffect = 0x1,kWindowSheetTransitionEffect = 0x2,kWindowSlideTransitionEffect = 0x3,};
enum $3BC92C9A303E899A4770DA59EA957D4C {kTextEncodingNextStepLatin = 0xB01,kTextEncodingNextStepJapanese = 0xB02,};
enum $3BCCEDFEF26768869C92A0150CBC34C5 {kLADefaultEdge = 0x0,kLAFreeEdge = 0x1,kLAIncompleteEdge = 0x2,};
enum $3BFEFCA321A3DBCBB94A35EC1B8CD9AD {intEOLHook = 0x0,intDrawHook = 0x1,intWidthHook = 0x2,intHitTestHook = 0x3,intNWidthHook = 0x6,intTextWidthHook = 0x7,intInlineInputTSMTEPreUpdateHook = 0x8,intInlineInputTSMTEPostUpdateHook = 0x9,};
enum $3C05039853275FCDBB455D1E5929F654 {kOSAModeDispatchToDirectObject = 0x20000,};
enum $3C1A27CBA589CB9FBE2333B91A8E6B64 {kPEFFirstSectionHeaderOffset = 0x28,};
enum $3C6B1BBA03C3AA41986B663FAADA2669 {kThemeBrushPassiveAreaFill = 0x19,};
enum $3CACD39A2679D329B350058CB0EDFC3A {large1BitMask = 0x49434E23,large4BitData = 0x69636C34,large8BitData = 0x69636C38,small1BitMask = 0x69637323,small4BitData = 0x69637334,small8BitData = 0x69637338,mini1BitMask = 0x69636D23,mini4BitData = 0x69636D34,mini8BitData = 0x69636D38,};
enum $3CD2563CFB62263068C67E0D71BFDAE0 {kWindowMsgDragHilite = 0x9,kWindowMsgModified = 0xA,kWindowMsgDrawInCurrentPort = 0xB,kWindowMsgSetupProxyDragImage = 0xC,kWindowMsgStateChanged = 0xD,kWindowMsgMeasureTitle = 0xE,};
enum $3CDA55C16633994BB7893EA15E99B63E {kMaximumSmallFract = 0xFFFF,};
enum $3CDEA35590208308078B0E0954111046 {kPrinterFontStatus = 0x0,kPrinterScalingStatus = 0x1,};
struct $3CE6EFCC61EAE53AE9BFA212F91A7D13 {void *pad1;mach_msg_size_t pad2;unsigned __int32 pad3 : 24;unsigned __int32 type : 8;};
enum $3CE8173260C6942BDB9197E4D0449AFD {kControlTabLargeProc = 0x80,kControlTabSmallProc = 0x81,kControlTabLargeNorthProc = 0x80,kControlTabSmallNorthProc = 0x81,kControlTabLargeSouthProc = 0x82,kControlTabSmallSouthProc = 0x83,kControlTabLargeEastProc = 0x84,kControlTabSmallEastProc = 0x85,kControlTabLargeWestProc = 0x86,kControlTabSmallWestProc = 0x87,};
enum $3D62205FE7098ABDB366AD4A15978512 {unitTypeNoSelection = 0xFFFF,unitTypeSeconds = 0x0,};
enum $3D696DECA9FA19124BE1A2E91C1BEDF1 {gestaltTSMTEAttr = 0x746D5445,gestaltTSMTEPresent = 0x0,gestaltTSMTE = 0x0,};
enum $3D732BA231FE18957DC9FC4F2D6B5651 {kWindowLatentVisibleFloater = 0x1,kWindowLatentVisibleSuspend = 0x2,kWindowLatentVisibleFullScreen = 0x4,kWindowLatentVisibleAppHidden = 0x8,kWindowLatentVisibleCollapsedOwner = 0x10,kWindowLatentVisibleCollapsedGroup = 0x20,};
struct $3D973CA059C56EDCB53F204E75D22A4F {rune_t min;rune_t max;rune_t map;unsigned int *types;};
enum $3DDCFA97AABA040038DA604BDD893606 {kEventProcessCommand = 0x1,kEventCommandProcess = 0x1,kEventCommandUpdateStatus = 0x2,};
enum $3DE452E66A716C4ABD5564098B5C5FFF {kWordInitialSwashesOnSelector = 0x0,kWordInitialSwashesOffSelector = 0x1,kWordFinalSwashesOnSelector = 0x2,kWordFinalSwashesOffSelector = 0x3,kLineInitialSwashesOnSelector = 0x4,kLineInitialSwashesOffSelector = 0x5,kLineFinalSwashesOnSelector = 0x6,kLineFinalSwashesOffSelector = 0x7,kNonFinalSwashesOnSelector = 0x8,kNonFinalSwashesOffSelector = 0x9,};
enum $3DE48F1B8B4558A3E4C4407DF74445DD {cCoercion = 0x636F6563,cCoerceUpperCase = 0x74787570,cCoerceLowerCase = 0x74786C6F,cCoerceRemoveDiacriticals = 0x74786463,cCoerceRemovePunctuation = 0x74787063,cCoerceRemoveHyphens = 0x74786879,cCoerceOneByteToTwoByte = 0x74786578,cCoerceRemoveWhiteSpace = 0x74787773,cCoerceSmallKana = 0x7478736B,cCoerceZenkakuhankaku = 0x74787A65,cCoerceKataHiragana = 0x74786B68,cZone = 0x7A6F6E65,cMachine = 0x6D616368,cAddress = 0x61646472,cRunningAddress = 0x72616464,cStorage = 0x73746F72,};
enum $3E0346759DAE595B570609D7D5A8E50A {kMakeAndModelReservedCount = 0x4,};
enum $3E1951F246B8D5E3E54B256C93F25B26 {kThemeSavvyMenuResponse = 0x7473,};
enum $3E1B393E7127E545EEEAFC9F498E6159 {kOSADontUsePhac = 0x1,};
enum $3E2BE58BBF5757D630E33A246FE7EECE {kEventParamAccessibleObject = 0x616F626A,kEventParamAccessibleChild = 0x6163686C,kEventParamAccessibleAttributeName = 0x61746E6D,kEventParamAccessibleAttributeNames = 0x61746E73,kEventParamAccessibleAttributeValue = 0x6174766C,kEventParamAccessibleAttributeSettable = 0x61747374,kEventParamAccessibleActionName = 0x61636E6D,kEventParamAccessibleActionNames = 0x61636E73,kEventParamAccessibleActionDescription = 0x61636473,};
enum $3E3284370D0C448FD046A7A046297FF5 {kTXNDrawGrowIconMask = 0x1,kTXNShowWindowMask = 0x2,kTXNWantHScrollBarMask = 0x4,kTXNWantVScrollBarMask = 0x8,kTXNNoTSMEverMask = 0x10,kTXNReadOnlyMask = 0x20,kTXNNoKeyboardSyncMask = 0x40,kTXNNoSelectionMask = 0x80,kTXNSaveStylesAsSTYLResourceMask = 0x100,kOutputTextInUnicodeEncodingMask = 0x200,kTXNDoNotInstallDragProcsMask = 0x400,kTXNAlwaysWrapAtViewEdgeMask = 0x800,kTXNDontDrawCaretWhenInactiveMask = 0x1000,kTXNDontDrawSelectionWhenInactiveMask = 0x2000,kTXNSingleLineOnlyMask = 0x4000,kTXNDisableDragAndDropMask = 0x8000,kTXNUseQDforImagingMask = 0x10000,kTXNMonostyledTextMask = 0x20000,};
enum $3E3D04C9D977B5293139303451E801C2 {kUnicodeCollationClass = 0x75636F6C,};
enum $3EB10D16C5D8F69377D801135A5AE760 {kAEUTHasReturningParam = 0x1F,kAEUTOptional = 0xF,kAEUTlistOfItems = 0xE,kAEUTEnumerated = 0xD,kAEUTReadWrite = 0xC,kAEUTChangesState = 0xC,kAEUTTightBindingFunction = 0xC,kAEUTEnumsAreTypes = 0xB,kAEUTEnumListIsExclusive = 0xA,kAEUTReplyIsReference = 0x9,kAEUTDirectParamIsReference = 0x9,kAEUTParamIsReference = 0x9,kAEUTPropertyIsReference = 0x9,kAEUTNotDirectParamIsTarget = 0x8,kAEUTParamIsTarget = 0x8,kAEUTApostrophe = 0x3,kAEUTFeminine = 0x2,kAEUTMasculine = 0x1,kAEUTPlural = 0x0,};
enum $3EBCD04AD77EEB90A1EBB25049369DCE {keyDirectObject = 0x2D2D2D2D,keyErrorNumber = 0x6572726E,keyErrorString = 0x65727273,keyProcessSerialNumber = 0x70736E20,keyPreDispatch = 0x70686163,keySelectProc = 0x73656C68,keyAERecorderCount = 0x72656372,keyAEVersion = 0x76657273,};
enum $3EFCCE98ECB93F6AA06650061CCFF96A {kKLUSKeyboard = 0x0,};
enum $3EFE4C19626DB437FA44418D8FB8B277 {mmInternalError = 0xFFFFF622,};
enum $3F0AF70147DC6F1B5A856203A44F5269 {debuggingExecutionContextErr = 0xFFFFC9C8,debuggingDuplicateSignatureErr = 0xFFFFC9C7,debuggingDuplicateOptionErr = 0xFFFFC9C6,debuggingInvalidSignatureErr = 0xFFFFC9C5,debuggingInvalidOptionErr = 0xFFFFC9C4,debuggingInvalidNameErr = 0xFFFFC9C3,debuggingNoCallbackErr = 0xFFFFC9C2,debuggingNoMatchErr = 0xFFFFC9C1,};
enum $3F1EED89F0F6EF15ABDBABE74E4ECF37 {kControlDefProcType = 0x43444546,kControlTemplateResourceType = 0x434E544C,kControlColorTableResourceType = 0x63637462,kControlDefProcResourceType = 0x43444546,};
enum $3F2111A290AEC5EDA243AE5B9A0C4B61 {kJUSTOverridePriority = 0x8000,kJUSTOverrideLimits = 0x4000,kJUSTOverrideUnlimited = 0x2000,kJUSTUnlimited = 0x1000,kJUSTPriorityMask = 0x3,};
enum $3F276722A2E8F4E6CD71B44DCDB8D721 {kPowerPCCFragArch = 0x70777063,kMotorola68KCFragArch = 0x6D36386B,kAnyCFragArch = 0x3F3F3F3F,};
enum $3F2E022F9AD84251AFA3AB3732081C7E {kControlTabInfoVersionZero = 0x0,kControlTabInfoVersionOne = 0x1,};
enum $3F3BFDADD85C688EAAD4A702F4F832C9 {kFirstMemberNumber = 0x1,kIsrIsComplete = 0x0,kIsrIsNotComplete = 0xFFFFFFFF,kMemberNumberParent = 0xFFFFFFFE,};
enum $3F55E8EE78983D92DFC09B6D4C85924E {kControlKindDisclosureButton = 0x64697362,};
enum $3FA0017DA96B494CDFE03EEDC3A91F4F {gestaltHardwareAttr = 0x68647772,gestaltHasVIA1 = 0x0,gestaltHasVIA2 = 0x1,gestaltHasASC = 0x3,gestaltHasSCC = 0x4,gestaltHasSCSI = 0x7,gestaltHasSoftPowerOff = 0x13,gestaltHasSCSI961 = 0x15,gestaltHasSCSI962 = 0x16,gestaltHasUniversalROM = 0x18,gestaltHasEnhancedLtalk = 0x1E,};
enum $3FA718D968E33011B27F4C08AC9F7C45 {kUnicodeMatchUnicodeBaseMask = 0x1,kUnicodeMatchUnicodeVariantMask = 0x2,kUnicodeMatchUnicodeFormatMask = 0x4,kUnicodeMatchOtherBaseMask = 0x8,kUnicodeMatchOtherVariantMask = 0x10,kUnicodeMatchOtherFormatMask = 0x20,};
enum $3FAB78EBE2C8899FA6C264603ED64FE1 {kPMInvalidPrintSession = 0xFFFF8761,kPMInvalidPrinter = 0xFFFF8760,kPMObjectInUse = 0xFFFF875F,};
enum $3FB13912521DC7691276ED8083575A20 {kInsert = 0x0,kReplace = 0x1,kInsertOrReplace = 0x2,};
enum $3FC04BE97A77F0D1760C878BB18DD272 {gestaltProcessorType = 0x70726F63,gestalt68000 = 0x1,gestalt68010 = 0x2,gestalt68020 = 0x3,gestalt68030 = 0x4,gestalt68040 = 0x5,};
enum $3FFE5272E000773A6D604E13DB4AE83A {kOTISDNFramingTransparentSupported = 0x10,kOTISDNFramingHDLCSupported = 0x20,kOTISDNFramingV110Supported = 0x40,kOTISDNFramingV14ESupported = 0x80,};
enum $40189C745D9296067E8038D347E9C4EF {kControlKindEditText = 0x65747874,};
enum $405B2F81DE28464E009EF1DDDB2F771F {kOSAErrorNumber = 0x6572726E,};
enum $406356B116E6EE33714CA9B0AFBFEE45 {fsSBPartialName = 0x1,fsSBFullName = 0x2,fsSBFlAttrib = 0x4,fsSBFlFndrInfo = 0x8,fsSBFlLgLen = 0x20,fsSBFlPyLen = 0x40,fsSBFlRLgLen = 0x80,fsSBFlRPyLen = 0x100,fsSBFlCrDat = 0x200,fsSBFlMdDat = 0x400,fsSBFlBkDat = 0x800,fsSBFlXFndrInfo = 0x1000,fsSBFlParID = 0x2000,fsSBNegate = 0x4000,fsSBDrUsrWds = 0x8,fsSBDrNmFls = 0x10,fsSBDrCrDat = 0x200,fsSBDrMdDat = 0x400,fsSBDrBkDat = 0x800,fsSBDrFndrInfo = 0x1000,fsSBDrParID = 0x2000,};
enum $40721B19BE4698E15E7AEA565487D18D {gestaltAppleEventsAttr = 0x65766E74,gestaltAppleEventsPresent = 0x0,gestaltScriptingSupport = 0x1,gestaltOSLInSystem = 0x2,gestaltSupportsApplicationURL = 0x4,};
enum $40A4AD514222E8EC45F8250D13AFC8D6 {kNoThreadID = 0x0,kCurrentThreadID = 0x1,kApplicationThreadID = 0x2,};
enum $40AF04C40AACAF30666A505630353903 {sysBeepDisable = 0x0,sysBeepEnable = 0x1,sysBeepSynchronous = 0x2,};
enum $40B0784FE731EFFACEE252267C780939 {kOSAModeDisplayForHumans = 0x8,};
enum $40B1D294FCB105E6FD797FB89EF6F7A3 {kNullCharCode = 0x0,kHomeCharCode = 0x1,kEnterCharCode = 0x3,kEndCharCode = 0x4,kHelpCharCode = 0x5,kBellCharCode = 0x7,kBackspaceCharCode = 0x8,kTabCharCode = 0x9,kLineFeedCharCode = 0xA,kVerticalTabCharCode = 0xB,kPageUpCharCode = 0xB,kFormFeedCharCode = 0xC,kPageDownCharCode = 0xC,kReturnCharCode = 0xD,kFunctionKeyCharCode = 0x10,kCommandCharCode = 0x11,kCheckCharCode = 0x12,kDiamondCharCode = 0x13,kAppleLogoCharCode = 0x14,kEscapeCharCode = 0x1B,kClearCharCode = 0x1B,kLeftArrowCharCode = 0x1C,kRightArrowCharCode = 0x1D,kUpArrowCharCode = 0x1E,kDownArrowCharCode = 0x1F,kSpaceCharCode = 0x20,kDeleteCharCode = 0x7F,kBulletCharCode = 0xA5,kNonBreakingSpaceCharCode = 0xCA,};
enum $40B96B499DCCF69C397F5FB88F0808AE {asiZoneName = 0xFFFFFFFD,asiServerName = 0xFFFFFFFE,asiVolumeName = 0xFFFFFFFF,asiAliasName = 0x0,asiParentName = 0x1,};
enum $413A2BC94D39CB74B7E5B3B7179195D1 {kOTSerialFramingAsync = 0x1,kOTSerialFramingHDLC = 0x2,kOTSerialFramingSDLC = 0x4,kOTSerialFramingAsyncPackets = 0x8,kOTSerialFramingPPP = 0x10,};
enum $4148E1FAC6CC61D5192905369DA81B76 {kEventWindowActivated = 0x5,kEventWindowDeactivated = 0x6,kEventWindowGetClickActivation = 0x7,};
enum $414A25EE1BA90F2AE0DEAD2E7D064BD1 {kOTISDNDefaultCommType = 0xD,kOTISDNDefaultFramingType = 0x20,kOTISDNDefault56KAdaptation = 0x0,};
enum $414A6095526036E1990929D18BC3A3B4 {kThemeTextColorDialogActive = 0x1,kThemeTextColorDialogInactive = 0x2,kThemeTextColorAlertActive = 0x3,kThemeTextColorAlertInactive = 0x4,kThemeTextColorModelessDialogActive = 0x5,kThemeTextColorModelessDialogInactive = 0x6,kThemeTextColorWindowHeaderActive = 0x7,kThemeTextColorWindowHeaderInactive = 0x8,kThemeTextColorPlacardActive = 0x9,kThemeTextColorPlacardInactive = 0xA,kThemeTextColorPlacardPressed = 0xB,kThemeTextColorPushButtonActive = 0xC,kThemeTextColorPushButtonInactive = 0xD,kThemeTextColorPushButtonPressed = 0xE,kThemeTextColorBevelButtonActive = 0xF,kThemeTextColorBevelButtonInactive = 0x10,kThemeTextColorBevelButtonPressed = 0x11,kThemeTextColorPopupButtonActive = 0x12,kThemeTextColorPopupButtonInactive = 0x13,kThemeTextColorPopupButtonPressed = 0x14,kThemeTextColorIconLabel = 0x15,kThemeTextColorListView = 0x16,};
enum $414E4DB435B144DE24DD7D38B5A9654A {cmIterateFactoryDeviceProfiles = 0x1,cmIterateCustomDeviceProfiles = 0x2,cmIterateCurrentDeviceProfiles = 0x3,cmIterateAllDeviceProfiles = 0x4,cmIterateDeviceProfilesMask = 0xF,};
enum $41642B1A80C93242E65DBEA41BBE48D0 {kHMSupplyContent = 0x0,kHMDisposeContent = 0x1,};
enum $41659A7D57F89602ED705FB98A13FD1B {COM_ISDN = 0x4953444E,};
enum $41966F5C7E6284563950F7B08A418343 {kControlKindTabs = 0x74616273,};
enum $41F98988D9812F0839C76BF329F6FD25 {siCDQuality = 0x63642020,siBestQuality = 0x62657374,siBetterQuality = 0x62657472,siGoodQuality = 0x676F6F64,siNoneQuality = 0x6E6F6E65,};
enum $421180F91B2FAF08BA134F0377A7F955 {kNSpInitializationFailedErr = 0xFFFF8968,kNSpAlreadyInitializedErr = 0xFFFF8967,kNSpTopologyNotSupportedErr = 0xFFFF8966,kNSpPipeFullErr = 0xFFFF8964,kNSpHostFailedErr = 0xFFFF8963,kNSpProtocolNotAvailableErr = 0xFFFF8962,kNSpInvalidGameRefErr = 0xFFFF8961,kNSpInvalidParameterErr = 0xFFFF895F,kNSpOTNotPresentErr = 0xFFFF895E,kNSpOTVersionTooOldErr = 0xFFFF895D,kNSpMemAllocationErr = 0xFFFF895B,kNSpAlreadyAdvertisingErr = 0xFFFF895A,kNSpNotAdvertisingErr = 0xFFFF8958,kNSpInvalidAddressErr = 0xFFFF8957,kNSpFreeQExhaustedErr = 0xFFFF8956,kNSpRemovePlayerFailedErr = 0xFFFF8955,kNSpAddressInUseErr = 0xFFFF8954,kNSpFeatureNotImplementedErr = 0xFFFF8953,kNSpNameRequiredErr = 0xFFFF8952,kNSpInvalidPlayerIDErr = 0xFFFF8951,kNSpInvalidGroupIDErr = 0xFFFF8950,kNSpNoPlayersErr = 0xFFFF894F,kNSpNoGroupsErr = 0xFFFF894E,kNSpNoHostVolunteersErr = 0xFFFF894D,kNSpCreateGroupFailedErr = 0xFFFF894C,kNSpAddPlayerFailedErr = 0xFFFF894B,kNSpInvalidDefinitionErr = 0xFFFF894A,kNSpInvalidProtocolRefErr = 0xFFFF8949,kNSpInvalidProtocolListErr = 0xFFFF8948,kNSpTimeoutErr = 0xFFFF8947,kNSpGameTerminatedErr = 0xFFFF8946,kNSpConnectFailedErr = 0xFFFF8945,kNSpSendFailedErr = 0xFFFF8944,kNSpMessageTooBigErr = 0xFFFF8943,kNSpCantBlockErr = 0xFFFF8942,kNSpJoinFailedErr = 0xFFFF8941,};
enum $421AAECC2A305822C1138F7F55676B83 {pASIt = 0x69742020,pASMe = 0x6D652020,pASResult = 0x72736C74,pASSpace = 0x73706163,pASReturn = 0x72657420,pASTab = 0x74616220,pASPi = 0x70692020,pASParent = 0x70617265,kASInitializeEventCode = 0x696E6974,pASPrintLength = 0x70726C6E,pASPrintDepth = 0x70726470,pASTopLevelScript = 0x61736372,};
enum $422B151CF90F7CD02DBADD7DA727FB0A {kHFSPlusExtentKeyMaximumLength = 0xA,kHFSExtentKeyMaximumLength = 0xB,kHFSPlusCatalogKeyMaximumLength = 0x206,kHFSPlusCatalogKeyMinimumLength = 0x8,kHFSCatalogKeyMaximumLength = 0x27,kHFSCatalogKeyMinimumLength = 0x8,kHFSPlusCatalogMinNodeSize = 0x1000,kHFSPlusExtentMinNodeSize = 0x200,kHFSPlusAttrMinNodeSize = 0x1000,};
enum $4234293FB16065540C47012460DC8B09 : unsigned __int32 {kPartitionAUXIsValid = 0x1,kPartitionAUXIsAllocated = 0x2,kPartitionAUXIsInUse = 0x4,kPartitionAUXIsBootValid = 0x8,kPartitionAUXIsReadable = 0x10,kPartitionAUXIsWriteable = 0x20,kPartitionAUXIsBootCodePositionIndependent = 0x40,kPartitionIsWriteable = 0x20,kPartitionIsMountedAtStartup = 0x40000000,kPartitionIsStartup = 0x80000000,kPartitionIsChainCompatible = 0x100,kPartitionIsRealDeviceDriver = 0x200,kPartitionCanChainToNext = 0x400,};
enum $42552D18C26FCB9C38B35DBABEFDD876 {cmPerceptualMatch = 0x0,cmColorimetricMatch = 0x1,cmSaturationMatch = 0x2,};
enum $42757CFF77671F6FA20DC66BF38093F0 {kTiledOnScreen = 0x1,kCenterOnScreen = 0x2,kFitToScreen = 0x3,kFillScreen = 0x4,kUseBestGuess = 0x5,};
enum $42A44C027C51BF81ADE897BA007A09A5 {kASErrorEventCode = 0x65727220,kOSAErrorArgs = 0x65727261,keyAEErrorObject = 0x65726F62,pLength = 0x6C656E67,pReverse = 0x72767365,pRest = 0x72657374,pInherits = 0x6340235E,pProperties = 0x70414C4C,keyASUserRecordFields = 0x75737266,typeUserRecordFields = 0x6C697374,};
enum $42A49EA8AE7BAE129AB675773FAEF748 {hasWakeupTimer = 0x0,hasSharedModemPort = 0x1,hasProcessorCycling = 0x2,mustProcessorCycle = 0x3,hasReducedSpeed = 0x4,dynamicSpeedChange = 0x5,hasSCSIDiskMode = 0x6,canGetBatteryTime = 0x7,canWakeupOnRing = 0x8,hasDimmingSupport = 0x9,hasStartupTimer = 0xA,hasChargeNotification = 0xB,hasDimSuspendSupport = 0xC,hasWakeOnNetActivity = 0xD,hasWakeOnLid = 0xE,canPowerOffPCIBus = 0xF,hasDeepSleep = 0x10,hasSleep = 0x11,supportsServerModeAPIs = 0x12,supportsUPSIntegration = 0x13,hasAggressiveIdling = 0x14,supportsIdleQueue = 0x15,};
enum $42B09F80E01486087D98571E30A8416D {kDataBrowserPropertyEnclosingPart = 0x0,kDataBrowserPropertyContentPart = 0x2D2D2D2D,kDataBrowserPropertyDisclosurePart = 0x64697363,kDataBrowserPropertyTextPart = 0x74657874,kDataBrowserPropertyIconPart = 0x69636E72,kDataBrowserPropertySliderPart = 0x736C6472,kDataBrowserPropertyCheckboxPart = 0x63686278,kDataBrowserPropertyProgressBarPart = 0x70726F67,kDataBrowserPropertyRelevanceRankPart = 0x72616E6B,};
enum $42B71C273E21D8D840184BF711CC647F {kAEOpenApplication = 0x6F617070,kAEOpenDocuments = 0x6F646F63,kAEPrintDocuments = 0x70646F63,kAEQuitApplication = 0x71756974,kAEAnswer = 0x616E7372,kAEApplicationDied = 0x6F626974,kAEShowPreferences = 0x70726566,};
enum $42D675AA0ACD69CC352A07741DD35A8D {gestaltVMInfoType = 0x766D696E,gestaltVMInfoSizeStorageType = 0x0,gestaltVMInfoSizeType = 0x1,gestaltVMInfoSimpleType = 0x2,gestaltVMInfoNoneType = 0x3,};
enum $42F9EA3819B024B1D1B8153109622465 {kFolderManagerNotificationMessageUserLogIn = 0x6C6F672B,kFolderManagerNotificationMessagePreUserLogIn = 0x6C6F676A,kFolderManagerNotificationMessageUserLogOut = 0x6C6F672D,kFolderManagerNotificationMessagePostUserLogOut = 0x6C6F6770,kFolderManagerNotificationDiscardCachedData = 0x64636865,kFolderManagerNotificationMessageLoginStartup = 0x73747570,};
enum $42FB63263B63A280A710224707F66ACA {notCompressed = 0x0,fixedCompression = 0xFFFFFFFF,variableCompression = 0xFFFFFFFE,};
enum $42FC9E68B5392AD9F0841EBF8595CA0B {enumArrangement = 0x65617272,};
enum $4309713E7CE17E60053DEAC970626C85 {printerStatusOpCodeNotSupportedErr = 0xFFFF9D40,};
enum $433144C8085830837FB0668FFAE5F120 {kDataBrowserNoItem = 0x0,};
enum $433BAAB6F6072ECAF742813F30BF493E {kWindowIsOpaque = 0x4000,};
enum $434B0C413E7FD965EFAF48E26EC80844 {sizeof_sfntCMapSubHeader = 0x6,};
enum $436EDE9228D5BFEF31076222B78F56EF {scsiFamilyInternalError = 0xFFFFE157,scsiPluginInternalError = 0xFFFFE158,scsiVendorSpecificErrorBase = 0xFFFFE180,scsiVendorSpecificErrorCount = 0x10,};
enum $437595E0DE36215D0D7AF81898673E98 {kWindowDefinitionVersionOne = 0x1,kWindowDefinitionVersionTwo = 0x2,};
enum $43AA161B586515D7CE0F4F8B362A79BD {nmTypErr = 0xFFFFFED5,};
enum $43AF380ED1E5C6639BF29287A0048170 {kHFSFolderRecord = 0x100,kHFSFileRecord = 0x200,kHFSFolderThreadRecord = 0x300,kHFSFileThreadRecord = 0x400,kHFSPlusFolderRecord = 0x1,kHFSPlusFileRecord = 0x2,kHFSPlusFolderThreadRecord = 0x3,kHFSPlusFileThreadRecord = 0x4,};
enum $43C4E16483B81A987A34D7A3AF1437A8 {kOSACanGetSource = 0x67737263,};
enum $43C87C9E5F23A5D8F818117A1237CA8F {tfAntiAlias = 0x1,tfUnicode = 0x2,};
enum $43E2ECE001525094C7FF9FBF76AA9EF7 {pShowModificationDate = 0x73646174,pUseRelativeDate = 0x75726474,pDelayBeforeSpringing = 0x64656C61,pSpringOpenFolders = 0x73707267,pUseShortMenus = 0x75736D65,pUseWideGrid = 0x75737767,pLabel1 = 0x6C626C31,pLabel2 = 0x6C626C32,pLabel3 = 0x6C626C33,pLabel4 = 0x6C626C34,pLabel5 = 0x6C626C35,pLabel6 = 0x6C626C36,pLabel7 = 0x6C626C37,pDefaultIconViewIconSize = 0x6969737A,pDefaultButtonViewIconSize = 0x6269737A,pDefaultListViewIconSize = 0x6C69737A,pIconViewArrangement = 0x69617272,pButtonViewArrangement = 0x62617272,};
enum $44164D9870A8F4402475324CC51BA113 {kExtendedSoundSampleCountNotValid = 0x1,kExtendedSoundBufferSizeValid = 0x2,kExtendedSoundFrameSizesValid = 0x4,kExtendedSoundCommonFrameSizeValid = 0x8,kExtendedSoundExtensionsValid = 0x10,kExtendedSoundBufferFlagsValid = 0x20,};
enum $44192C9BACDA0C0DF9CC5EEAC16E636A {kHIImageViewImageTag = 0x696D6167,};
enum $443F782623DB2B1F37C04EC07D3BB201 {kDependentNotifyClassShowCursor = 0x73686372,kDependentNotifyClassDriverOverride = 0x6E647276,kDependentNotifyClassDisplayMgrOverride = 0x646D6772,kDependentNotifyClassProfileChanged = 0x70726F66,};
enum $44412BD0CE14AFC237A6D071851322F1 {kHFSPlusAttrInlineData = 0x10,kHFSPlusAttrForkData = 0x20,kHFSPlusAttrExtents = 0x30,};
enum $444A07D61DE1E75232BD6F04707296FB {kNextBody = 0x1,kPreviousBody = 0x2,};
enum $4454269B28C93200FE91CD356F71D6DB {kFSNodeInSharedBit = 0x2,kFSNodeInSharedMask = 0x4,kFSNodeIsMountedBit = 0x3,kFSNodeIsMountedMask = 0x8,kFSNodeIsSharePointBit = 0x5,kFSNodeIsSharePointMask = 0x20,};
enum $446545BD1D47A10087682B6E73E29B3E {kCFNotFound = 0xFFFFFFFF,};
enum $4467094E749B101C02626E92DBB121D8 {kDataBrowserNoView = 0x3F3F3F3F,kDataBrowserListView = 0x6C737476,kDataBrowserColumnView = 0x636C6D76,};
enum $4491697A76485B1F4A2D6907F88A4853 {kCursorComponentsVersion = 0x10001,};
enum $44B901B8F8719DB19D250ACE457E59CB {vmInvalidBackingFileIDErr = 0xFFFFFD80,vmMappingPrivilegesErr = 0xFFFFFD7F,vmBusyBackingFileErr = 0xFFFFFD7E,vmNoMoreBackingFilesErr = 0xFFFFFD7D,vmInvalidFileViewIDErr = 0xFFFFFD7C,vmFileViewAccessErr = 0xFFFFFD7B,vmNoMoreFileViewsErr = 0xFFFFFD7A,vmAddressNotInFileViewErr = 0xFFFFFD79,vmInvalidOwningProcessErr = 0xFFFFFD78,};
enum $44DE159E8FDABA3095939158288D7DD7 {typeFSVolumeRefNum = 0x766F6C6E,};
enum $44ECE7E4546325D743329C0612BB6567 {fsAtMark = 0x0,fsFromStart = 0x1,fsFromLEOF = 0x2,fsFromMark = 0x3,};
enum $44F391F6F759E67D2435F1C3F9758D28 {resourceInMemory = 0xFFFFFF44,writingPastEnd = 0xFFFFFF43,inputOutOfBounds = 0xFFFFFF42,resNotFound = 0xFFFFFF40,resFNotFound = 0xFFFFFF3F,addResFailed = 0xFFFFFF3E,addRefFailed = 0xFFFFFF3D,rmvResFailed = 0xFFFFFF3C,rmvRefFailed = 0xFFFFFF3B,resAttrErr = 0xFFFFFF3A,mapReadErr = 0xFFFFFF39,CantDecompress = 0xFFFFFF46,badExtResource = 0xFFFFFF47,noMemForPictPlaybackErr = 0xFFFFFF6F,rgnOverflowErr = 0xFFFFFF6D,rgnTooBigError = 0xFFFFFF6D,pixMapTooDeepErr = 0xFFFFFF6C,insufficientStackErr = 0xFFFFFF6B,nsStackErr = 0xFFFFFF6B,};
enum $451E07B0FB4153CF82FBE0341529E27D {kPEFRelocRunMaxRunLength = 0x200,};
enum $45538689ED341DD171B83D2362323BFF {kControlLabelPart = 0x1,kControlMenuPart = 0x2,kControlTrianglePart = 0x4,kControlEditTextPart = 0x5,kControlPicturePart = 0x6,kControlIconPart = 0x7,kControlClockPart = 0x8,kControlListBoxPart = 0x18,kControlListBoxDoubleClickPart = 0x19,kControlImageWellPart = 0x1A,kControlRadioGroupPart = 0x1B,kControlButtonPart = 0xA,kControlCheckBoxPart = 0xB,kControlRadioButtonPart = 0xB,kControlUpButtonPart = 0x14,kControlDownButtonPart = 0x15,kControlPageUpPart = 0x16,kControlPageDownPart = 0x17,kControlClockHourDayPart = 0x9,kControlClockMinuteMonthPart = 0xA,kControlClockSecondYearPart = 0xB,kControlClockAMPMPart = 0xC,kControlDataBrowserPart = 0x18,kControlDataBrowserDraggedPart = 0x19,};
enum $45555D332D172C4C482FD4E35899E61E {kThemeBrushBlack = 0xFFFFFFFF,kThemeBrushWhite = 0xFFFFFFFE,kThemeBrushPrimaryHighlightColor = 0xFFFFFFFD,kThemeBrushSecondaryHighlightColor = 0xFFFFFFFC,};
enum $45570CD5D26E95BFB2E244ED5C44CF65 {errAEBadKeyForm = 0xFFFFD8EE,errAECantHandleClass = 0xFFFFD8E6,errAECantSupplyType = 0xFFFFD8E7,errAECantUndo = 0xFFFFD8E1,errAEEventFailed = 0xFFFFD8F0,errAEIndexTooLarge = 0xFFFFD8E9,errAEInTransaction = 0xFFFFD8E5,errAELocalOnly = 0xFFFFD8E0,errAENoSuchTransaction = 0xFFFFD8E4,errAENotAnElement = 0xFFFFD8E8,errAENotASingleObject = 0xFFFFD8E2,errAENotModifiable = 0xFFFFD8ED,errAENoUserSelection = 0xFFFFD8E3,errAEPrivilegeError = 0xFFFFD8EC,errAEReadDenied = 0xFFFFD8EB,errAETypeError = 0xFFFFD8EF,errAEWriteDenied = 0xFFFFD8EA,errAENotAnEnumMember = 0xFFFFD8D9,errAECantPutThatThere = 0xFFFFD8D8,errAEPropertiesClash = 0xFFFFD8D7,};
enum $45AE1F4457D1DB3E7B8787AAB28B9175 {kFMIterationCompleted = 0xFFFFFC2C,kFMInvalidFontFamilyErr = 0xFFFFFC2B,kFMInvalidFontErr = 0xFFFFFC2A,kFMIterationScopeModifiedErr = 0xFFFFFC29,kFMFontTableAccessErr = 0xFFFFFC28,kFMFontContainerAccessErr = 0xFFFFFC27,};
enum $45BA2A04F99B30C6B89CA93EE87A61BC {cmUseDefaultChromaticAdaptation = 0x0,cmLinearChromaticAdaptation = 0x1,cmVonKriesChromaticAdaptation = 0x2,cmBradfordChromaticAdaptation = 0x3,};
enum $45E87FA214E235810FE8E2576C1084E9 {kATSFontContextUnspecified = 0x0,kATSFontContextGlobal = 0x1,kATSFontContextLocal = 0x2,};
enum $45EEDE7CF3F46250B5C08DEDD8FD6321 {kUCTextBreakLeadingEdgeMask = 0x1,kUCTextBreakGoBackwardsMask = 0x2,kUCTextBreakIterateMask = 0x4,};
struct $466E19AC50622C269D9BCEE6753F9E61 {mach_msg_header_t header;mach_msg_body_t body;};
enum $467AC374E671D5DC1F93B14CFB32E608 {dsBusError = 0x1,dsAddressErr = 0x2,dsIllInstErr = 0x3,dsZeroDivErr = 0x4,dsChkErr = 0x5,dsOvflowErr = 0x6,dsPrivErr = 0x7,dsTraceErr = 0x8,dsLineAErr = 0x9,dsLineFErr = 0xA,dsMiscErr = 0xB,dsCoreErr = 0xC,dsIrqErr = 0xD,dsIOCoreErr = 0xE,dsLoadErr = 0xF,dsFPErr = 0x10,dsNoPackErr = 0x11,dsNoPk1 = 0x12,dsNoPk2 = 0x13,};
enum $4693F9F93A5130D57E44F485B4108586 {kNoSoundComponentType = 0x2A2A2A2A,kSoundComponentType = 0x73696674,kSoundComponentPPCType = 0x6E696674,kRate8SubType = 0x72617462,kRate16SubType = 0x72617477,kConverterSubType = 0x636F6E76,kSndSourceSubType = 0x736F7572,kMixerType = 0x6D697872,kMixer8SubType = 0x6D697862,kMixer16SubType = 0x6D697877,kSoundInputDeviceType = 0x73696E70,kWaveInSubType = 0x77617669,kWaveInSnifferSubType = 0x7769736E,kSoundOutputDeviceType = 0x73646576,kClassicSubType = 0x636C6173,kASCSubType = 0x61736320,kDSPSubType = 0x64737020,kAwacsSubType = 0x61776163,kGCAwacsSubType = 0x61776763,kSingerSubType = 0x73696E67,kSinger2SubType = 0x736E6732,kWhitSubType = 0x77686974,kSoundBlasterSubType = 0x73626C73,kWaveOutSubType = 0x7761766F,kWaveOutSnifferSubType = 0x776F736E,kDirectSoundSubType = 0x64736E64,kDirectSoundSnifferSubType = 0x6473736E,kUNIXsdevSubType = 0x756E3178,kUSBSubType = 0x75736220,kBlueBoxSubType = 0x62736E64,kHALCustomComponentSubType = 0x68616C78,kSoundCompressor = 0x73636F6D,kSoundDecompressor = 0x73646563,kAudioComponentType = 0x6164696F,kAwacsPhoneSubType = 0x6870686E,kAudioVisionSpeakerSubType = 0x74656C63,kAudioVisionHeadphoneSubType = 0x74656C68,kPhilipsFaderSubType = 0x74766176,kSGSToneSubType = 0x73677330,kSoundEffectsType = 0x736E6678,kEqualizerSubType = 0x6571616C,kSSpLocalizationSubType = 0x736E6433,};
enum $46A2A573C774DA9024FD82319DA2BC8F {kUSBQueueFull = 0xFFFFE4DC,kUSBNotHandled = 0xFFFFE4B5,kUSBUnknownNotification = 0xFFFFE4DB,kUSBBadDispatchTable = 0xFFFFE4DA,};
enum $46BAE7990B826CE00FEEF5C7AF2651CA {kLAMorphemesArrayVersion = 0x0,};
enum $46C68B8BA799D7A0BE57EBC0FE77F361 : unsigned __int32 {badComponentInstance = 0x80008001,badComponentSelector = 0x80008002,};
enum $47105DBF39371DF274357F6B8BC491F0 : unsigned __int32 {kQDUseDefaultTextRendering = 0x0,kQDUseTrueTypeScalerGlyphs = 0x1,kQDUseCGTextRendering = 0x2,kQDUseCGTextMetrics = 0x4,kQDSupportedFlags = 0x7,kQDDontChangeFlags = 0xFFFFFFFF,};
enum $4711EE41DA53708115D3F7B861784186 {gestaltHasSingleWindowModeBit = 0x8,gestaltHasSingleWindowModeMask = 0x100,};
enum $472A7CD1D0C76B55E800ECB06062708D {kASSelectSetPropertyObsolete = 0x1101,kASSelectGetPropertyObsolete = 0x1102,kASSelectSetHandlerObsolete = 0x1103,kASSelectGetHandlerObsolete = 0x1104,kASSelectGetAppTerminologyObsolete = 0x1105,kASSelectSetProperty = 0x1106,kASSelectGetProperty = 0x1107,kASSelectSetHandler = 0x1108,kASSelectGetHandler = 0x1109,kASSelectGetAppTerminology = 0x110A,kASSelectGetSysTerminology = 0x110B,kASSelectGetPropertyNames = 0x110C,kASSelectGetHandlerNames = 0x110D,};
enum $473AF7B219905D5708353EC92305B31E {wContentColor = 0x0,wFrameColor = 0x1,wTextColor = 0x2,wHiliteColor = 0x3,wTitleBarColor = 0x4,};
enum $4751FF91CBFFD8E4EB08B26039E66CE2 {kFlavorTypeClippingName = 0x636C6E6D,kFlavorTypeClippingFilename = 0x636C666E,kFlavorTypeUnicodeClippingName = 0x75636C6E,kFlavorTypeUnicodeClippingFilename = 0x75636C66,kFlavorTypeDragToTrashOnly = 0x66647474,kFlavorTypeFinderNoTrackingBehavior = 0x666E7462,};
enum $476A79E339CADAF44B401C5F27E1C94E {kNoSwitchConfirmBit = 0x0,kDepthNotAvailableBit = 0x1,kShowModeBit = 0x3,kModeNotResizeBit = 0x4,kNeverShowModeBit = 0x5,};
enum $4785BED46BDF1370E4C94D4B99ABDE0E {kAVLPreOrder = 0x0,kAVLInOrder = 0x1,kAVLPostOrder = 0x2,};
enum $4798570608A7F7FE958EF2459E777922 {kModeValid = 0x0,kModeSafe = 0x1,kModeDefault = 0x2,kModeShowNow = 0x3,kModeNotResize = 0x4,kModeRequiresPan = 0x5,kModeInterlaced = 0x6,kModeShowNever = 0x7,kModeSimulscan = 0x8,kModeNotPreset = 0x9,kModeBuiltIn = 0xA,kModeStretched = 0xB,};
enum $4799877BDC226816D8F821BEBF9C9D4B {pInternetLocation = 0x696C6F63,};
enum $47C1F95274DC9AD738FB689AB738B6F6 {kGlyphCollectionGID = 0x0,kGlyphCollectionAdobeCNS1 = 0x1,kGlyphCollectionAdobeGB1 = 0x2,kGlyphCollectionAdobeJapan1 = 0x3,kGlyphCollectionAdobeJapan2 = 0x4,kGlyphCollectionAdobeKorea1 = 0x5,kGlyphCollectionUnspecified = 0xFF,};
enum $47FB2E451563E2721B05F1063C1FC96F {smBreakWord = 0x0,smBreakChar = 0x1,smBreakOverflow = 0x2,};
enum $480234505259C80FE1B6085A2FAC9295 {systemMethod = 0x0,popularMethod = 0x1,medianMethod = 0x2,};
enum $4837E4F5E103AEE6536AD81F4C693818 {gestaltAppleScriptAttr = 0x61736372,gestaltAppleScriptPresent = 0x0,gestaltAppleScriptPowerPCSupport = 0x1,};
enum $483E08ACD0405BD46DDCE6B6B744F2B4 {kReferenceCFrag = 0x1,kFindCFrag = 0x2,kPrivateCFragCopy = 0x5,};
enum $4857BB0EBE394D26BF22675E2909FC45 {keyASPrepositionHas = 0x68617320,keyAll = 0x6B79616C,keyOldFinderItems = 0x6673656C,};
enum $48581DA6325892AC46A0B2E89C776E96 {kDeleteAfterDownload = 0x1,kCreateCustomIcon = 0x2,kAddMetaDataToFinderComment = 0x4,kAdjustCreationDate = 0x8,kSetFileTypeAndCreator = 0x10,kEmbedColorSyncProfile = 0x20,kRotateImage = 0x40,};
enum $48B78193C35E36DF1C933C830E2DECA3 {cParagraph = 0x63706172,cPICT = 0x50494354,cPixel = 0x6370786C,cPixelMap = 0x63706978,cPolygon = 0x6370676E,cProperty = 0x70726F70,cQDPoint = 0x51447074,cQDRectangle = 0x71647274,cRectangle = 0x63726563,cRGBColor = 0x63524742,cRotation = 0x74726F74,cRoundedRectangle = 0x63727263,cRow = 0x63726F77,cSelection = 0x6373656C,cShortInteger = 0x73686F72,cTable = 0x6374626C,cText = 0x63747874,cTextFlow = 0x63666C6F,cTextStyles = 0x74737479,cType = 0x74797065,};
enum $48BA08BF30E215E23FF0B6EADE6025A6 {kComponentListNotPreferredBit = 0x0,kComponentListNotPreferredMask = 0x1,};
enum $48BE81039CC5A4D7C774B14681628245 {gestaltCRMAttr = 0x63726D20,gestaltCRMPresent = 0x0,gestaltCRMPersistentFix = 0x1,gestaltCRMToolRsrcCalls = 0x2,};
enum $48FCF695133F4A17937FCBE85DB9A30A {kFontIDNewYork = 0x2,kFontIDGeneva = 0x3,kFontIDMonaco = 0x4,kFontIDVenice = 0x5,kFontIDLondon = 0x6,kFontIDAthens = 0x7,kFontIDSanFrancisco = 0x8,kFontIDToronto = 0x9,kFontIDCairo = 0xB,kFontIDLosAngeles = 0xC,kFontIDTimes = 0x14,kFontIDHelvetica = 0x15,kFontIDCourier = 0x16,kFontIDSymbol = 0x17,kFontIDMobile = 0x18,};
enum $4900759CD0BA08EC42BDC9CE65129C99 {errTaskNotFound = 0xFFFFD5E4,};
enum $49143488410A29263F782CE6156468FD {keyDCMFieldTag = 0x66746167,keyDCMFieldType = 0x66747970,keyDCMMaxRecordSize = 0x6D72737A,keyDCMFieldAttributes = 0x66617472,keyDCMFieldDefaultData = 0x66646566,keyDCMFieldName = 0x666E616D,keyDCMFieldFindMethods = 0x66666E64,};
enum $4922A3B642EF896637B997AAA2138F60 {kKCAuthTypeNTLM = 0x6E746C6D,kKCAuthTypeMSN = 0x6D736E61,kKCAuthTypeDPA = 0x64706161,kKCAuthTypeRPA = 0x72706161,kKCAuthTypeHTTPDigest = 0x68747464,kKCAuthTypeDefault = 0x64666C74,};
enum $4928B9702A76B9632064A787AE53C3BE {kWindowMsgGetGrowImageRegion = 0x13,};
enum $495415BA3EC6C74152385F9CB15CDFEE {kControlWindowHeaderProc = 0x150,kControlWindowListViewHeaderProc = 0x151,};
enum $49693FA4B2A12A639DAC3849A1A69714 {kLargeIcon = 0x1,kLarge4BitIcon = 0x2,kLarge8BitIcon = 0x3,kSmallIcon = 0x4,kSmall4BitIcon = 0x5,kSmall8BitIcon = 0x6,kicnsIconFamily = 0xEF,};
enum $498EE02C2D796C9A480DA51105838450 {kFSInvalidVolumeRefNum = 0x0,};
enum $49947AA14AC084F2152F122C7EE618BB {gestaltFileMappingAttr = 0x666C6D70,gestaltFileMappingPresent = 0x0,gestaltFileMappingMultipleFilesFix = 0x1,};
enum $499F5B7FCCAB670DE4268B6CBC96C338 {gestaltPPCToolboxAttr = 0x70706320,gestaltPPCToolboxPresent = 0x0,gestaltPPCSupportsRealTime = 0x1000,gestaltPPCSupportsIncoming = 0x1,gestaltPPCSupportsOutGoing = 0x2,gestaltPPCSupportsTCP_IP = 0x4,gestaltPPCSupportsIncomingAppleTalk = 0x10,gestaltPPCSupportsIncomingTCP_IP = 0x20,gestaltPPCSupportsOutgoingAppleTalk = 0x100,gestaltPPCSupportsOutgoingTCP_IP = 0x200,};
enum $49C365EE74A1338043AC78BF2B5417CB : unsigned __int32 {kATSUFromTextBeginning = 0xFFFFFFFF,kATSUToTextEnd = 0xFFFFFFFF,};
enum $49EADD111A232CC035C3C1BFA08B757A {notTruncated = 0x0,truncated = 0x1,truncErr = 0xFFFFFFFF,smNotTruncated = 0x0,smTruncated = 0x1,smTruncErr = 0xFFFFFFFF,};
struct $4A2316DC67BD0C62945948CC39732FF5 {CFXMLEntityTypeCode entityType;CFStringRef replacementText;CFXMLExternalID entityID;CFStringRef notationName;};
enum $4A3502115BFC6012574730CBD59F3B68 {uppComponentFunctionImplementedProcInfo = 0x2F0,uppGetComponentVersionProcInfo = 0xF0,uppComponentSetTargetProcInfo = 0x3F0,uppCallComponentOpenProcInfo = 0x3F0,uppCallComponentCloseProcInfo = 0x3F0,uppCallComponentCanDoProcInfo = 0x2F0,uppCallComponentVersionProcInfo = 0xF0,uppCallComponentRegisterProcInfo = 0xF0,uppCallComponentTargetProcInfo = 0x3F0,uppCallComponentUnregisterProcInfo = 0xF0,uppCallComponentGetMPWorkFunctionProcInfo = 0xFF0,uppCallComponentGetPublicResourceProcInfo = 0x3BF0,};
enum $4A3C2C06B619E3C8A441AC20BACFFC2D {kNoVolume = 0x0,kFullVolume = 0x100,};
enum $4A3C9F22E33743BBEC9451442DF7703D {typeDCMFieldAttributes = 0x66617472,typeDCMFindMethod = 0x666D7468,};
enum $4A8F4196499C9C363E32C0009A60AAE4 {kTranslateGetFileTranslationList = 0x0,kTranslateIdentifyFile = 0x1,kTranslateTranslateFile = 0x2,kTranslateGetTranslatedFilename = 0x3,kTranslateGetScrapTranslationList = 0xA,kTranslateIdentifyScrap = 0xB,kTranslateTranslateScrap = 0xC,kTranslateGetScrapTranslationListConsideringData = 0xD,};
enum $4A98DBF1C09186E7BD6201301DF54DD1 : unsigned __int32 {gestaltAFPClient = 0x61667073,gestaltAFPClientVersionMask = 0xFFFF,gestaltAFPClient3_5 = 0x1,gestaltAFPClient3_6 = 0x2,gestaltAFPClient3_6_1 = 0x3,gestaltAFPClient3_6_2 = 0x4,gestaltAFPClient3_6_3 = 0x5,gestaltAFPClient3_7 = 0x6,gestaltAFPClient3_7_2 = 0x7,gestaltAFPClient3_8 = 0x8,gestaltAFPClient3_8_1 = 0x9,gestaltAFPClient3_8_3 = 0xA,gestaltAFPClient3_8_4 = 0xB,gestaltAFPClientAttributeMask = 0xFFFF0000,gestaltAFPClientCfgRsrc = 0x10,gestaltAFPClientSupportsIP = 0x1D,gestaltAFPClientVMUI = 0x1E,gestaltAFPClientMultiReq = 0x1F,};
enum $4AA72FB96FE40BDE945A00A3EE3D602E {fidNotFound = 0xFFFFFAEC,fidExists = 0xFFFFFAEB,notAFileErr = 0xFFFFFAEA,diffVolErr = 0xFFFFFAE9,catChangedErr = 0xFFFFFAE8,desktopDamagedErr = 0xFFFFFAE7,sameFileErr = 0xFFFFFAE6,badFidErr = 0xFFFFFAE5,notARemountErr = 0xFFFFFAE4,fileBoundsErr = 0xFFFFFAE3,fsDataTooBigErr = 0xFFFFFAE2,volVMBusyErr = 0xFFFFFAE1,badFCBErr = 0xFFFFFAD1,errFSUnknownCall = 0xFFFFFA88,errFSBadFSRef = 0xFFFFFA87,errFSBadForkName = 0xFFFFFA86,errFSBadBuffer = 0xFFFFFA85,errFSBadForkRef = 0xFFFFFA84,errFSBadInfoBitmap = 0xFFFFFA83,errFSMissingCatInfo = 0xFFFFFA82,errFSNotAFolder = 0xFFFFFA81,errFSForkNotFound = 0xFFFFFA7F,errFSNameTooLong = 0xFFFFFA7E,errFSMissingName = 0xFFFFFA7D,errFSBadPosMode = 0xFFFFFA7C,errFSBadAllocFlags = 0xFFFFFA7B,errFSNoMoreItems = 0xFFFFFA77,errFSBadItemCount = 0xFFFFFA76,errFSBadSearchParams = 0xFFFFFA75,errFSRefsDifferent = 0xFFFFFA74,errFSForkExists = 0xFFFFFA73,errFSBadIteratorFlags = 0xFFFFFA72,errFSIteratorNotFound = 0xFFFFFA71,errFSIteratorNotSupported = 0xFFFFFA70,errFSQuotaExceeded = 0xFFFFFA6F,envNotPresent = 0xFFFFEA84,envBadVers = 0xFFFFEA83,envVersTooBig = 0xFFFFEA82,fontDecError = 0xFFFFFFC0,fontNotDeclared = 0xFFFFFFBF,fontSubErr = 0xFFFFFFBE,fontNotOutlineErr = 0xFFFF8099,firstDskErr = 0xFFFFFFAC,lastDskErr = 0xFFFFFFC0,noDriveErr = 0xFFFFFFC0,offLinErr = 0xFFFFFFBF,noNybErr = 0xFFFFFFBE,};
enum $4AA8601BF244E69FA445DD388E2BEBE9 {kControlBevelButtonAlignTextSysDirection = 0x0,kControlBevelButtonAlignTextCenter = 0x1,kControlBevelButtonAlignTextFlushRight = 0xFFFFFFFF,kControlBevelButtonAlignTextFlushLeft = 0xFFFFFFFE,};
enum $4AC737C8C4F33FD6FC70855C4ED9EEDE {kTextEncodingMacRoman = 0x0,kTextEncodingMacJapanese = 0x1,kTextEncodingMacChineseTrad = 0x2,kTextEncodingMacKorean = 0x3,kTextEncodingMacArabic = 0x4,kTextEncodingMacHebrew = 0x5,kTextEncodingMacGreek = 0x6,kTextEncodingMacCyrillic = 0x7,kTextEncodingMacDevanagari = 0x9,kTextEncodingMacGurmukhi = 0xA,kTextEncodingMacGujarati = 0xB,kTextEncodingMacOriya = 0xC,kTextEncodingMacBengali = 0xD,kTextEncodingMacTamil = 0xE,kTextEncodingMacTelugu = 0xF,kTextEncodingMacKannada = 0x10,kTextEncodingMacMalayalam = 0x11,kTextEncodingMacSinhalese = 0x12,kTextEncodingMacBurmese = 0x13,kTextEncodingMacKhmer = 0x14,kTextEncodingMacThai = 0x15,kTextEncodingMacLaotian = 0x16,kTextEncodingMacGeorgian = 0x17,kTextEncodingMacArmenian = 0x18,kTextEncodingMacChineseSimp = 0x19,kTextEncodingMacTibetan = 0x1A,kTextEncodingMacMongolian = 0x1B,kTextEncodingMacEthiopic = 0x1C,kTextEncodingMacCentralEurRoman = 0x1D,kTextEncodingMacVietnamese = 0x1E,kTextEncodingMacExtArabic = 0x1F,kTextEncodingMacSymbol = 0x21,kTextEncodingMacDingbats = 0x22,kTextEncodingMacTurkish = 0x23,kTextEncodingMacCroatian = 0x24,kTextEncodingMacIcelandic = 0x25,kTextEncodingMacRomanian = 0x26,kTextEncodingMacCeltic = 0x27,kTextEncodingMacGaelic = 0x28,kTextEncodingMacKeyboardGlyphs = 0x29,};
enum $4B1D9FE243A502F122BF86EDB061F24B {kOwnerID2Name = 0x1,kGroupID2Name = 0x2,kOwnerName2ID = 0x3,kGroupName2ID = 0x4,kReturnNextUser = 0x1,kReturnNextGroup = 0x2,kReturnNextUG = 0x3,};
enum $4B389C4826154FDBD1C6714C55F0453D {kPEFRelocLgByImportMaxIndex = 0x3FFFFFF,};
enum $4B41472414EFC1CCE2461E1C29D7C408 {kNavUserActionNone = 0x0,kNavUserActionCancel = 0x1,kNavUserActionOpen = 0x2,kNavUserActionSaveAs = 0x3,kNavUserActionChoose = 0x4,kNavUserActionNewFolder = 0x5,kNavUserActionSaveChanges = 0x6,kNavUserActionDontSaveChanges = 0x7,kNavUserActionDiscardChanges = 0x8,kNavUserActionReviewDocuments = 0x9,kNavUserActionDiscardDocuments = 0xA,};
enum $4B4C721B5CEFB1666E7F6C9B2D1216F0 {kTXNUseInline = 0x0,kTXNUseBottomline = 0x1,};
enum $4B77551DBF5CBE16BE8D4A520F2BCBEC {kThemeBrushNotificationWindowBackground = 0x30,};
enum $4B8C153600DFDFD356D9225BB9018CE9 {kControlFontBigSystemFont = 0xFFFFFFFF,kControlFontSmallSystemFont = 0xFFFFFFFE,kControlFontSmallBoldSystemFont = 0xFFFFFFFD,kControlFontViewSystemFont = 0xFFFFFFFC,};
enum $4BA57DA2F2441E3EBAEEC6BB7BC51CFB {kASSelectInit = 0x1001,kASSelectSetSourceStyles = 0x1002,kASSelectGetSourceStyles = 0x1003,kASSelectGetSourceStyleNames = 0x1004,};
enum $4BB91A84A266B38EACF9B500C4711451 {kNoun = 0xFFFFFFFF,kVerb = 0xFFFFFFFE,kAdjective = 0xFFFFFFFD,kAdverb = 0xFFFFFFFC,};
enum $4BCD47A5D5A3A6220200E7A255E8F3F0 {commandMark = 0x11,checkMark = 0x12,diamondMark = 0x13,appleMark = 0x14,};
enum $4BEF1906BC064CB8B9E1D602C52EB035 {kUnicodeNoSubset = 0x0,kUnicodeCanonicalDecompVariant = 0x2,kUnicodeCanonicalCompVariant = 0x3,kUnicodeHFSPlusDecompVariant = 0x8,kUnicodeHFSPlusCompVariant = 0x9,};
enum $4BFCDFC26AEC67FAD48BE76FA2C43E56 {bHasDirectIO = 0x1,};
enum $4C0F13827EDA41278E21F09F284FA869 {kT8022HeaderLength = 0x3,kT8022SNAPHeaderLength = 0x8,kT8022FullPacketHeaderLength = 0x16,};
enum $4C2283AA9E392EBC23F2C0DD8DF3EC02 : unsigned __int32 {kFBCenglishHighWord = 0x80000000,kFBCdutchHighWord = 0x40000000,kFBCgermanHighWord = 0x20000000,kFBCswedishHighWord = 0x10000000,kFBCdanishHighWord = 0x8000000,kFBCspanishHighWord = 0x4000000,kFBCportugueseHighWord = 0x2000000,kFBCitalianHighWord = 0x1000000,kFBCfrenchHighWord = 0x800000,kFBCromanHighWord = 0x400000,kFBCicelandicHighWord = 0x200000,kFBChebrewHighWord = 0x100000,kFBCarabicHighWord = 0x80000,kFBCcenteuroHighWord = 0x40000,kFBCcroatianHighWord = 0x20000,kFBCturkishHighWord = 0x10000,kFBCromanianHighWord = 0x8000,kFBCgreekHighWord = 0x4000,kFBCcyrillicHighWord = 0x2000,kFBCdevanagariHighWord = 0x1000,kFBCgujuratiHighWord = 0x800,kFBCgurmukhiHighWord = 0x400,kFBCjapaneseHighWord = 0x200,kFBCkoreanHighWord = 0x100,kFBCdefaultLanguagesHighWord = 0xFF800000,};
enum $4C2508511D797139CA94931BE75A9AD2 {kThemeMenuSquareMenuBar = 0x1,};
enum $4C2C886140D11886D6CFE0784BC4BBA4 {gestaltSDPFindVersion = 0x64666E64,};
enum $4C94D49F19D2C7D3EC87E3F8D916F51F {kImportLibraryCFrag = 0x0,kApplicationCFrag = 0x1,kDropInAdditionCFrag = 0x2,kStubLibraryCFrag = 0x3,kWeakStubLibraryCFrag = 0x4,};
enum $4C9E4F7AE7982CBB82A9F92285104250 {kLinguisticRearrangementOnSelector = 0x0,kLinguisticRearrangementOffSelector = 0x1,};
enum $4CB29B8BCC8EF1B3F984C0BC3B0187A4 {kThemeTextColorDocumentWindowTitleActive = 0x17,kThemeTextColorDocumentWindowTitleInactive = 0x18,kThemeTextColorMovableModalWindowTitleActive = 0x19,kThemeTextColorMovableModalWindowTitleInactive = 0x1A,kThemeTextColorUtilityWindowTitleActive = 0x1B,kThemeTextColorUtilityWindowTitleInactive = 0x1C,kThemeTextColorPopupWindowTitleActive = 0x1D,kThemeTextColorPopupWindowTitleInactive = 0x1E,kThemeTextColorRootMenuActive = 0x1F,kThemeTextColorRootMenuSelected = 0x20,kThemeTextColorRootMenuDisabled = 0x21,kThemeTextColorMenuItemActive = 0x22,kThemeTextColorMenuItemSelected = 0x23,kThemeTextColorMenuItemDisabled = 0x24,kThemeTextColorPopupLabelActive = 0x25,kThemeTextColorPopupLabelInactive = 0x26,};
enum $4CEAC388984F1DBE70484D732F04BC4D {kDataBrowserPropertyFlagsOffset = 0x8,kDataBrowserPropertyFlagsMask = 0xFF00,kDataBrowserCheckboxTriState = 0x100,kDataBrowserDateTimeRelative = 0x100,kDataBrowserDateTimeDateOnly = 0x200,kDataBrowserDateTimeTimeOnly = 0x400,kDataBrowserDateTimeSecondsToo = 0x800,kDataBrowserSliderPlainThumb = 0x0,kDataBrowserSliderUpwardThumb = 0x100,kDataBrowserSliderDownwardThumb = 0x200,kDataBrowserDoNotTruncateText = 0x300,kDataBrowserTruncateTextAtEnd = 0x200,kDataBrowserTruncateTextMiddle = 0x0,kDataBrowserTruncateTextAtStart = 0x100,kDataBrowserPropertyModificationFlags = 0xFF00,kDataBrowserRelativeDateTime = 0x100,};
enum $4D0FC009E9231EE846A8066F42A53152 {kATSUStyleUnequal = 0x0,kATSUStyleContains = 0x1,kATSUStyleEquals = 0x2,kATSUStyleContainedBy = 0x3,};
enum $4D1499D9AB99878865DBB85B985DDBBB {kEventParamTabletPointRec = 0x74627263,kEventParamTabletProximityRec = 0x74627078,typeTabletPointRec = 0x74627263,typeTabletProximityRec = 0x74627078,kEventParamTabletPointerRec = 0x74627263,typeTabletPointerRec = 0x74627263,};
enum $4D21454FAD90E25BD2497F2FB4C4BB43 {drawCntl = 0x0,testCntl = 0x1,calcCRgns = 0x2,initCntl = 0x3,dispCntl = 0x4,posCntl = 0x5,thumbCntl = 0x6,dragCntl = 0x7,autoTrack = 0x8,calcCntlRgn = 0xA,calcThumbRgn = 0xB,drawThumbOutline = 0xC,kControlMsgDrawGhost = 0xD,kControlMsgCalcBestRect = 0xE,kControlMsgHandleTracking = 0xF,kControlMsgFocus = 0x10,kControlMsgKeyDown = 0x11,kControlMsgIdle = 0x12,kControlMsgGetFeatures = 0x13,kControlMsgSetData = 0x14,kControlMsgGetData = 0x15,kControlMsgActivate = 0x16,kControlMsgSetUpBackground = 0x17,kControlMsgCalcValueFromPos = 0x1A,kControlMsgTestNewMsgSupport = 0x1B,kControlMsgSubValueChanged = 0x19,kControlMsgSubControlAdded = 0x1C,kControlMsgSubControlRemoved = 0x1D,kControlMsgApplyTextColor = 0x1E,kControlMsgGetRegion = 0x1F,kControlMsgFlatten = 0x20,kControlMsgSetCursor = 0x21,kControlMsgDragEnter = 0x26,kControlMsgDragLeave = 0x27,kControlMsgDragWithin = 0x28,kControlMsgDragReceive = 0x29,kControlMsgDisplayDebugInfo = 0x2E,kControlMsgContextualMenuClick = 0x2F,kControlMsgGetClickActivation = 0x30,};
enum $4D57E139977BB0143BB8B19E8C425A45 {kHuge1BitMask = 0x69636823,kHuge4BitData = 0x69636834,kHuge8BitData = 0x69636838,kHuge32BitData = 0x69683332,kHuge8BitMask = 0x68386D6B,};
enum $4D69FABCE705531C69E170010556914A {kUnlockStateKCStatus = 0x1,kRdPermKCStatus = 0x2,kWrPermKCStatus = 0x4,};
enum $4D6B3D4521C7A855C65EE51F4F6020C7 {langBreton = 0x8E,langInuktitut = 0x8F,langScottishGaelic = 0x90,langManxGaelic = 0x91,langIrishGaelicScript = 0x92,langTongan = 0x93,langGreekPoly = 0x94,langGreenlandic = 0x95,langAzerbaijanRoman = 0x96,};
enum $4D855211B07F3B815F584907E9A07A07 {textParserBadParamErr = 0xFFFFEB9C,textParserObjectNotFoundErr = 0xFFFFEB9B,textParserBadTokenValueErr = 0xFFFFEB9A,textParserBadParserObjectErr = 0xFFFFEB99,textParserParamErr = 0xFFFFEB98,textParserNoMoreTextErr = 0xFFFFEB97,textParserBadTextLanguageErr = 0xFFFFEB96,textParserBadTextEncodingErr = 0xFFFFEB95,textParserNoSuchTokenFoundErr = 0xFFFFEB94,textParserNoMoreTokensErr = 0xFFFFEB93,};
enum $4D8B7D1349328D7C0B79EA781F2B24F6 {networkEvt = 0xA,driverEvt = 0xB,app1Evt = 0xC,app2Evt = 0xD,app3Evt = 0xE,app4Evt = 0xF,networkMask = 0x400,driverMask = 0x800,app1Mask = 0x1000,app2Mask = 0x2000,app3Mask = 0x4000,app4Mask = 0x8000,};
enum $4D8EB25094034425D6900250B0A6C0DE {laTooSmallBufferErr = 0xFFFFE4B8,laEnvironmentBusyErr = 0xFFFFE4B7,laEnvironmentNotFoundErr = 0xFFFFE4B6,laEnvironmentExistErr = 0xFFFFE4B5,laInvalidPathErr = 0xFFFFE4B4,laNoMoreMorphemeErr = 0xFFFFE4B3,laFailAnalysisErr = 0xFFFFE4B2,laTextOverFlowErr = 0xFFFFE4B1,laDictionaryNotOpenedErr = 0xFFFFE4B0,laDictionaryUnknownErr = 0xFFFFE4AF,laDictionaryTooManyErr = 0xFFFFE4AE,laPropertyValueErr = 0xFFFFE4AD,laPropertyUnknownErr = 0xFFFFE4AC,laPropertyIsReadOnlyErr = 0xFFFFE4AB,laPropertyNotFoundErr = 0xFFFFE4AA,laPropertyErr = 0xFFFFE4A9,laEngineNotFoundErr = 0xFFFFE4A8,};
enum $4D9F0F8E7F4280BB56310A3A74DA80D6 {kThemeStateInactive = 0x0,kThemeStateActive = 0x1,kThemeStatePressed = 0x2,kThemeStateRollover = 0x6,kThemeStateUnavailable = 0x7,kThemeStateUnavailableInactive = 0x8,};
enum $4DE595C756820CE39E98AC2FA7981434 {chargerConnMask = 0x1,hiChargeMask = 0x2,chargeOverFlowMask = 0x4,batteryDeadMask = 0x8,batteryLowMask = 0x10,connChangedMask = 0x20,};
enum $4E04791537D5F9896996412A34F9DF73 {cmGray8Space = 0x280A,cmGray16Space = 0xA,cmGray16LSpace = 0x400A,cmGrayA16Space = 0x208A,cmGrayA32Space = 0x8A,cmGrayA32LSpace = 0x408A,cmGrayA16PmulSpace = 0x20CA,cmGrayA32PmulSpace = 0xCA,cmGrayA32LPmulSpace = 0x40CA,cmRGB16Space = 0x501,cmRGB16LSpace = 0x4501,cmRGB565Space = 0x601,cmRGB565LSpace = 0x4601,cmRGB24Space = 0x2101,cmRGB32Space = 0x801,cmRGB48Space = 0x2901,cmRGB48LSpace = 0x6901,cmARGB32Space = 0x1881,cmARGB64Space = 0x3A81,cmARGB64LSpace = 0x7A81,cmRGBA32Space = 0x881,cmRGBA64Space = 0x2A81,cmRGBA64LSpace = 0x6A81,cmARGB32PmulSpace = 0x18C1,cmARGB64PmulSpace = 0x3AC1,cmARGB64LPmulSpace = 0x7AC1,cmRGBA32PmulSpace = 0x8C1,cmRGBA64PmulSpace = 0x2AC1,cmRGBA64LPmulSpace = 0x6AC1,cmCMYK32Space = 0x802,cmCMYK64Space = 0x2A02,cmCMYK64LSpace = 0x6A02,cmHSV32Space = 0xA03,cmHLS32Space = 0xA04,cmYXY32Space = 0xA05,cmXYZ24Space = 0x2106,cmXYZ32Space = 0xA06,cmXYZ48Space = 0x2906,cmXYZ48LSpace = 0x6906,cmLUV32Space = 0xA07,cmLAB24Space = 0x2108,cmLAB32Space = 0xA08,cmLAB48Space = 0x2908,cmLAB48LSpace = 0x6908,cmGamutResult1Space = 0xB0C,cmNamedIndexed32Space = 0x2710,cmNamedIndexed32LSpace = 0x6710,cmMCFive8Space = 0x2211,cmMCSix8Space = 0x2312,cmMCSeven8Space = 0x2413,cmMCEight8Space = 0x2514,};
enum $4E4645E55C66D8DB1573EB4D1E966AE6 {timingInvalid = 0x0,timingInvalid_SM_T24 = 0x8,timingApple_FixedRateLCD = 0x2A,timingApple_512x384_60hz = 0x82,timingApple_560x384_60hz = 0x87,timingApple_640x480_67hz = 0x8C,timingApple_640x400_67hz = 0x91,timingVESA_640x480_60hz = 0x96,timingVESA_640x480_72hz = 0x98,timingVESA_640x480_75hz = 0x9A,timingVESA_640x480_85hz = 0x9E,timingGTF_640x480_120hz = 0x9F,timingApple_640x870_75hz = 0xA0,timingApple_640x818_75hz = 0xA5,timingApple_832x624_75hz = 0xAA,timingVESA_800x600_56hz = 0xB4,timingVESA_800x600_60hz = 0xB6,timingVESA_800x600_72hz = 0xB8,timingVESA_800x600_75hz = 0xBA,timingVESA_800x600_85hz = 0xBC,timingVESA_1024x768_60hz = 0xBE,timingVESA_1024x768_70hz = 0xC8,timingVESA_1024x768_75hz = 0xCC,timingVESA_1024x768_85hz = 0xD0,timingApple_1024x768_75hz = 0xD2,timingApple_1152x870_75hz = 0xDC,timingAppleNTSC_ST = 0xE6,timingAppleNTSC_FF = 0xE8,timingAppleNTSC_STconv = 0xEA,timingAppleNTSC_FFconv = 0xEC,timingApplePAL_ST = 0xEE,timingApplePAL_FF = 0xF0,timingApplePAL_STconv = 0xF2,timingApplePAL_FFconv = 0xF4,timingVESA_1280x960_75hz = 0xFA,timingVESA_1280x960_60hz = 0xFC,timingVESA_1280x960_85hz = 0xFE,timingVESA_1280x1024_60hz = 0x104,timingVESA_1280x1024_75hz = 0x106,timingVESA_1280x1024_85hz = 0x10C,timingVESA_1600x1200_60hz = 0x118,timingVESA_1600x1200_65hz = 0x11A,timingVESA_1600x1200_70hz = 0x11C,timingVESA_1600x1200_75hz = 0x11E,timingVESA_1600x1200_80hz = 0x120,timingVESA_1600x1200_85hz = 0x121,timingVESA_1792x1344_60hz = 0x128,timingVESA_1792x1344_75hz = 0x12A,timingVESA_1856x1392_60hz = 0x12C,timingVESA_1856x1392_75hz = 0x12E,timingVESA_1920x1440_60hz = 0x130,timingVESA_1920x1440_75hz = 0x132,timingSMPTE240M_60hz = 0x190,timingFilmRate_48hz = 0x19A,timingSony_1600x1024_76hz = 0x1F4,timingSony_1920x1080_60hz = 0x1FE,timingSony_1920x1080_72hz = 0x208,timingSony_1920x1200_76hz = 0x21C,timingApple_0x0_0hz_Offline = 0x226,};
enum $4E867832F7DE3EB21C30DC1860412BF9 {kControlKindDataBrowser = 0x64617462,};
struct $4E997CC0510DF9B95FB93C0C312947A9 {CFIndex version;void *info;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;CFAllocatorCopyDescriptionCallBack copyDescription;CFAllocatorAllocateCallBack allocate;CFAllocatorReallocateCallBack reallocate;CFAllocatorDeallocateCallBack deallocate;CFAllocatorPreferredSizeCallBack preferredSize;};
enum $4ED70C7D73628320C0F101BFED5325F0 {iMemFullErr = 0xFFFFFF94,iIOAbort = 0xFFFFFFE5,};
enum $4EE0FB99968ADB58B01C3A33A60FE053 {REGS_SAVED_NONE = 0x0,REGS_SAVED_CALLER = 0x1,REGS_SAVED_ALL = 0x2,};
enum $4EF8D7CF48B7DFD5F16B44C05CF9D7D7 {dummyType = 0x0,vType = 0x1,ioQType = 0x2,drvQType = 0x3,evType = 0x4,fsQType = 0x5,sIQType = 0x6,dtQType = 0x7,nmType = 0x8,};
enum $4F3F40F32132DE8826BF7A2DCEE957A7 {kControlBevelButtonPlaceSysDirection = 0xFFFFFFFF,kControlBevelButtonPlaceNormally = 0x0,kControlBevelButtonPlaceToRightOfGraphic = 0x1,kControlBevelButtonPlaceToLeftOfGraphic = 0x2,kControlBevelButtonPlaceBelowGraphic = 0x3,kControlBevelButtonPlaceAboveGraphic = 0x4,};
enum $4F49AF3BBD589494C2FF3EBC57309D33 {gestaltGraphicsAttr = 0x67667861,gestaltGraphicsIsDebugging = 0x1,gestaltGraphicsIsLoaded = 0x2,gestaltGraphicsIsPowerPC = 0x4,};
enum $4F72F593DEA106F0BB77253235ACDF0F {kATSDeletedGlyphcode = 0xFFFF,};
enum $4F92175F36F5649FD79B54B82AEEA8C8 {pFile = 0x66696C65,pPartitionSpaceUsed = 0x70757364,pLocalAndRemoteEvents = 0x72657674,pHasScriptingTerminology = 0x68736372,};
enum $4F9DE1D8C3878AC3CF43F92DA393F421 {errRefNum = 0xFFFFFB00,errAborted = 0xFFFFFB01,errState = 0xFFFFFB02,errOpening = 0xFFFFFB03,errAttention = 0xFFFFFB04,errFwdReset = 0xFFFFFB05,errDSPQueueSize = 0xFFFFFB06,errOpenDenied = 0xFFFFFB07,};
enum $4F9EA06D3D2E52E352DA5662BE6E4BEA {kTXNDrawGrowIconBit = 0x0,kTXNShowWindowBit = 0x1,kTXNWantHScrollBarBit = 0x2,kTXNWantVScrollBarBit = 0x3,kTXNNoTSMEverBit = 0x4,kTXNReadOnlyBit = 0x5,kTXNNoKeyboardSyncBit = 0x6,kTXNNoSelectionBit = 0x7,kTXNSaveStylesAsSTYLResourceBit = 0x8,kOutputTextInUnicodeEncodingBit = 0x9,kTXNDoNotInstallDragProcsBit = 0xA,kTXNAlwaysWrapAtViewEdgeBit = 0xB,kTXNDontDrawCaretWhenInactiveBit = 0xC,kTXNDontDrawSelectionWhenInactiveBit = 0xD,kTXNSingleLineOnlyBit = 0xE,kTXNDisableDragAndDropBit = 0xF,kTXNUseQDforImagingBit = 0x10,kTXNMonostyledTextBit = 0x11,};
enum $4FBD46A7782F6749F1F35ACCB96A0A2C {timeCycle24 = 0x0,timeCycleZero = 0x1,timeCycle12 = 0xFF,zeroCycle = 0x1,longDay = 0x0,longWeek = 0x1,longMonth = 0x2,longYear = 0x3,supDay = 0x1,supWeek = 0x2,supMonth = 0x4,supYear = 0x8,dayLdingZ = 0x20,mntLdingZ = 0x40,century = 0x80,secLeadingZ = 0x20,minLeadingZ = 0x40,hrLeadingZ = 0x80,};
enum $4FBF380524D959B2717756BA70CE323B {batteryInstalled = 0x7,batteryCharging = 0x6,chargerConnected = 0x5,upsConnected = 0x4,upsIsPowerSource = 0x3,};
enum $4FC27F2E51BC75B25E30CDF10FF835EB {scsiBusMDP = 0x80,scsiBusWide32 = 0x40,scsiBusWide16 = 0x20,scsiBusSDTR = 0x10,scsiBusLinkedCDB = 0x8,scsiBusTagQ = 0x2,scsiBusSoftReset = 0x1,};
enum $4FD06A13F00F8A4D99EE10AF5B077DBF {kEventParamScrapRef = 0x73637270,kEventParamServiceCopyTypes = 0x73767364,kEventParamServicePasteTypes = 0x73767074,kEventParamServiceMessageName = 0x73766D67,kEventParamServiceUserData = 0x73767564,typeScrapRef = 0x73637270,typeCFMutableArrayRef = 0x63666D61,};
enum $502621A06FC891DA363F192D1D6A2A5D {kThemeSystemFont = 0x0,kThemeSmallSystemFont = 0x1,kThemeSmallEmphasizedSystemFont = 0x2,kThemeViewsFont = 0x3,kThemeEmphasizedSystemFont = 0x4,kThemeApplicationFont = 0x5,kThemeLabelFont = 0x6,kThemeMenuTitleFont = 0x64,kThemeMenuItemFont = 0x65,kThemeMenuItemMarkFont = 0x66,kThemeMenuItemCmdKeyFont = 0x67,kThemeWindowTitleFont = 0x68,kThemePushButtonFont = 0x69,kThemeUtilityWindowTitleFont = 0x6A,kThemeAlertHeaderFont = 0x6B,kThemeSystemFontDetail = 0x7,kThemeSystemFontDetailEmphasized = 0x8,kThemeCurrentPortFont = 0xC8,kThemeToolbarFont = 0x6C,};
enum $503AC35FC2DDADB880EE691A3232EBA1 {kControlBoundsChangeSizeChanged = 0x4,kControlBoundsChangePositionChanged = 0x8,};
enum $50537C6B232EF50E39DD12A58344A62A {kCFUserNotificationNoDefaultButtonFlag = 0x20,kCFUserNotificationUseRadioButtonsFlag = 0x40,};
enum $505C66D97284D85D49097DAD466A881D {enumDate = 0x656E6461,enumAnyDate = 0x616E7964,enumToday = 0x74646179,enumYesterday = 0x79646179,enumThisWeek = 0x7477656B,enumLastWeek = 0x6C77656B,enumThisMonth = 0x746D6F6E,enumLastMonth = 0x6C6D6F6E,enumThisYear = 0x74796572,enumLastYear = 0x6C796572,enumBeforeDate = 0x62666474,enumAfterDate = 0x61666474,enumBetweenDate = 0x62746474,enumOnDate = 0x6F6E6474,};
enum $505EF0908353B048DDED67EDD6F85392 {gestaltMachineIcon = 0x6D69636E,};
enum $508D87383CF80AAEFAAF4CC9D545101A {cmSRGB16ChannelEncoding = 0x10000,};
enum $508FDDC4ED57855463FA955101DA6E0E {kControlEditTextProc = 0x110,kControlEditTextPasswordProc = 0x112,};
enum $50B9C278AD2007AD3B2B39730AC3300A {kDataBrowserClientPropertyFlagsOffset = 0x18,kDataBrowserClientPropertyFlagsMask = 0xFF000000,};
enum $50CFE87F485DE565167C6F999D1C06C1 {kAESystemConfigNotice = 0x636E6667,kAEDisplayNotice = 0x6473706C,kAEDisplaySummary = 0x6473756D,keyDMConfigVersion = 0x646D6376,keyDMConfigFlags = 0x646D6366,keyDMConfigReserved = 0x646D6372,keyDisplayID = 0x646D6964,keyDisplayComponent = 0x646D6463,keyDisplayDevice = 0x646D6464,keyDisplayFlags = 0x646D6466,keyDisplayMode = 0x646D646D,keyDisplayModeReserved = 0x646D6D72,keyDisplayReserved = 0x646D6472,keyDisplayMirroredId = 0x646D6D69,keyDeviceFlags = 0x64646466,keyDeviceDepthMode = 0x6464646D,keyDeviceRect = 0x64646472,keyPixMapRect = 0x64706472,keyPixMapHResolution = 0x64706872,keyPixMapVResolution = 0x64707672,keyPixMapPixelType = 0x64707074,keyPixMapPixelSize = 0x64707073,keyPixMapCmpCount = 0x64706363,keyPixMapCmpSize = 0x64706373,keyPixMapAlignment = 0x64707061,keyPixMapResReserved = 0x64707272,keyPixMapReserved = 0x64707072,keyPixMapColorTableSeed = 0x64706374,keySummaryMenubar = 0x64736D62,keySummaryChanges = 0x64736368,keyDisplayOldConfig = 0x646F6C64,keyDisplayNewConfig = 0x646E6577,};
enum $50D70824F79995DCBA7FC4F3762196F8 {cmProfileIterateDataVersion1 = 0x10000,cmProfileIterateDataVersion2 = 0x20000,cmProfileIterateDataVersion3 = 0x30000,};
enum $50E32A545E4D8DDD3D907EA8F817D844 {kEventServiceCopy = 0x1,kEventServicePaste = 0x2,kEventServiceGetTypes = 0x3,kEventServicePerform = 0x4,};
enum $50EF704C2A23D9050B5389BEE69EACA0 {S_INPUT = 0x1,S_HIPRI = 0x2,S_OUTPUT = 0x4,S_MSG = 0x8,S_RDNORM = 0x10,S_RDBAND = 0x20,S_WRNORM = 0x40,S_WRBAND = 0x80,S_ERROR = 0x100,S_HANGUP = 0x200,S_BANDURG = 0x400,};
enum $50F824BEFD09A30944C35CDA595FB918 {gestaltUDFSupport = 0x6B756466,};
enum $5117BBEFCEB750B571E36F45E6810F71 {kControlKindDisclosureTriangle = 0x64697374,};
enum $5118A8CF0EC07F2E1B73029A50E74A1B {kMouseTrackingMouseDown = 0x1,kMouseTrackingMouseUp = 0x2,kMouseTrackingMouseExited = 0x3,kMouseTrackingMouseEntered = 0x4,kMouseTrackingMouseDragged = 0x5,kMouseTrackingKeyModifiersChanged = 0x6,kMouseTrackingUserCancelled = 0x7,kMouseTrackingTimedOut = 0x8,kMouseTrackingMouseMoved = 0x9,};
enum $5129782C25EAF8D948F254D1B3E5EB91 {gestaltGraphicsVersion = 0x67726678,gestaltCurrentGraphicsVersion = 0x10200,};
enum $513253074AF884203639B3D8DAF000AD {ioInProgress = 0x1,aRdCmd = 0x2,aWrCmd = 0x3,asyncTrpBit = 0xA,noQueueBit = 0x9,};
enum $513B405423945CF401E49CF53D13D9E3 {kSFNTLookupSimpleArray = 0x0,kSFNTLookupSegmentSingle = 0x2,kSFNTLookupSegmentArray = 0x4,kSFNTLookupSingleTable = 0x6,kSFNTLookupTrimmedArray = 0x8,};
enum $5159DF5F69DB4B07E5314ED3C5415015 {kAppearanceFolderIcon = 0x61707072,kAppleExtrasFolderIcon = 0x616578C4,kAppleMenuFolderIcon = 0x616D6E75,kApplicationsFolderIcon = 0x61707073,kApplicationSupportFolderIcon = 0x61737570,kAssistantsFolderIcon = 0x617374C4,kColorSyncFolderIcon = 0x70726F66,kContextualMenuItemsFolderIcon = 0x636D6E75,kControlPanelDisabledFolderIcon = 0x63747244,kControlPanelFolderIcon = 0x6374726C,kControlStripModulesFolderIcon = 0x736476C4,kDocumentsFolderIcon = 0x646F6373,kExtensionsDisabledFolderIcon = 0x65787444,kExtensionsFolderIcon = 0x6578746E,kFavoritesFolderIcon = 0x66617673,kFontsFolderIcon = 0x666F6E74,kHelpFolderIcon = 0xC4686C70,kInternetFolderIcon = 0x696E74C4,kInternetPlugInFolderIcon = 0xC46E6574,kInternetSearchSitesFolderIcon = 0x69737366,kLocalesFolderIcon = 0xC46C6F63,kMacOSReadMeFolderIcon = 0x6D6F72C4,kPublicFolderIcon = 0x70756266,kPreferencesFolderIcon = 0x707266C4,kPrinterDescriptionFolderIcon = 0x70706466,kPrinterDriverFolderIcon = 0xC4707264,kPrintMonitorFolderIcon = 0x70726E74,kRecentApplicationsFolderIcon = 0x72617070,kRecentDocumentsFolderIcon = 0x72646F63,kRecentServersFolderIcon = 0x72737276,kScriptingAdditionsFolderIcon = 0xC4736372,kSharedLibrariesFolderIcon = 0xC46C6962,kScriptsFolderIcon = 0x736372C4,kShutdownItemsDisabledFolderIcon = 0x73686444,kShutdownItemsFolderIcon = 0x73686466,kSpeakableItemsFolder = 0x73706B69,kStartupItemsDisabledFolderIcon = 0x73747244,kStartupItemsFolderIcon = 0x73747274,kSystemExtensionDisabledFolderIcon = 0x6D616344,kSystemFolderIcon = 0x6D616373,kTextEncodingsFolderIcon = 0xC4746578,kUsersFolderIcon = 0x757372C4,kUtilitiesFolderIcon = 0x757469C4,kVoicesFolderIcon = 0x66766F63,};
enum $515BD0BBDD63C2055DF3F71E9F8CBA14 {hmBalloonHelpVersion = 0x2,};
enum $517DF7D7B7B57B1F865576A9B7B7F75D {keyMiscellaneous = 0x666D7363,keySelection = 0x6673656C,keyWindow = 0x6B776E64,keyWhen = 0x7768656E,keyWhere = 0x77686572,keyModifiers = 0x6D6F6473,keyKey = 0x6B657920,keyKeyCode = 0x636F6465,keyKeyboard = 0x6B657962,keyDriveNumber = 0x64727623,keyErrorCode = 0x65727223,keyHighLevelClass = 0x68636C73,keyHighLevelID = 0x68696420,};
enum $519155122060752F49280D7213DD1AF2 {kMachineNameStrID = 0xFFFFBFF5,};
enum $51C352CB59F5C1A13FDB3E9C33B96FA7 {kPMCancel = 0x80,};
enum $51D9C7A66E27CF37B82E1BF57C19CF25 {kSourcePaused = 0x1,kPassThrough = 0x10000,kNoSoundComponentChain = 0x20000,};
enum $51F8A2E6CD8BB9F36607A6702D3290DE {typeUnicodeText = 0x75747874,typeStyledUnicodeText = 0x73757478,typeUTF8Text = 0x75746638,typeEncodedString = 0x656E6373,typeCString = 0x63737472,typePString = 0x70737472,};
struct $523A9F483328EA8C653B50B6796CEBEC {SInt32 years;SInt32 months;SInt32 days;SInt32 hours;SInt32 minutes;double seconds;};
enum $5292BA64F27CE32ECE955F30B7542EB2 {kKERNOrderedList = 0x0,kKERNStateTable = 0x1,kKERNSimpleArray = 0x2,kKERNIndexArray = 0x3,};
enum $5299BEEE17FE295435C76CB19C21F235 {firstPickerError = 0xFFFFF060,invalidPickerType = 0xFFFFF060,requiredFlagsDontMatch = 0xFFFFF05F,pickerResourceError = 0xFFFFF05E,cantLoadPicker = 0xFFFFF05D,cantCreatePickerWindow = 0xFFFFF05C,cantLoadPackage = 0xFFFFF05B,pickerCantLive = 0xFFFFF05A,colorSyncNotInstalled = 0xFFFFF059,badProfileError = 0xFFFFF058,noHelpForItem = 0xFFFFF057,};
enum $52A27DE3481A1000BD21C7D9934F172A : unsigned __int32 {kLSRolesNone = 0x1,kLSRolesViewer = 0x2,kLSRolesEditor = 0x4,kLSRolesAll = 0xFFFFFFFF,};
enum $53C7B439E08ADBF9B1339F9932DCF07D {kHMTETextResType = 0x54455854,kHMTEStyleResType = 0x7374796C,};
enum $53EB216AB947E6B330A0658EF1BB8D1F {kAEInfo = 0xB,kAEMain = 0x0,kAESharing = 0xD,};
enum $5442D69C038BA541BC61D9468B2235C9 {kNeuter = 0x0,kMale = 0x1,kFemale = 0x2,};
enum $546A77FD246E087CBC2C8129F176BD98 {kPEFCodeSymbol = 0x0,kPEFDataSymbol = 0x1,kPEFTVectorSymbol = 0x2,kPEFTOCSymbol = 0x3,kPEFGlueSymbol = 0x4,kPEFUndefinedSymbol = 0xF,kPEFWeakImportSymMask = 0x80,};
enum $547E4BED69470BA18FC2EB3CA6A3F2B6 {kHIToolbarDisplaySizeDefault = 0x0,kHIToolbarDisplaySizeNormal = 0x1,kHIToolbarDisplaySizeSmall = 0x2,};
enum $5495969828893CF768391088F16F6E16 {kMPTaskStateRegisters = 0x0,kMPTaskStateFPU = 0x1,kMPTaskStateVectors = 0x2,kMPTaskStateMachine = 0x3,kMPTaskState32BitMemoryException = 0x4,kMPTaskStateTaskInfo = 0x5,};
enum $54AA91CE5C09A4163B896338791100FA : unsigned __int32 {kOSAUseStandardDispatch = 0xFFFFFFFF,};
enum $54AD728990153724B0D67DC477F6B3CE {kControlRadioButtonUncheckedValue = 0x0,kControlRadioButtonCheckedValue = 0x1,kControlRadioButtonMixedValue = 0x2,};
enum $54D8896E57898845ADF65F1EA92174A9 {documentProc = 0x0,dBoxProc = 0x1,plainDBox = 0x2,altDBoxProc = 0x3,noGrowDocProc = 0x4,movableDBoxProc = 0x5,zoomDocProc = 0x8,zoomNoGrow = 0xC,floatProc = 0x7C1,floatGrowProc = 0x7C3,floatZoomProc = 0x7C5,floatZoomGrowProc = 0x7C7,floatSideProc = 0x7C9,floatSideGrowProc = 0x7CB,floatSideZoomProc = 0x7CD,floatSideZoomGrowProc = 0x7CF,};
enum $54F67C7F9189758AAD8AD4A7128F8CF9 {kThemeBackgroundTabPane = 0x1,kThemeBackgroundPlacard = 0x2,kThemeBackgroundWindowHeader = 0x3,kThemeBackgroundListViewWindowHeader = 0x4,kThemeBackgroundSecondaryGroupBox = 0x5,};
enum $55387A2B2635198D2569AD0E51F5A4F6 {kAESpeechDone = 0x73727364,kAESpeechDetected = 0x73726264,};
enum $5541CB586BC70AF128C91F5378A8BAA5 {gestaltOSTable = 0x6F737474,};
enum $5545023FF171D590173A11F14138FF32 {kATSULayoutOperationCallbackStatusHandled = 0x0,kATSULayoutOperationCallbackStatusContinue = 0x1,};
enum $557028A32F041634F58878CE1037A876 {kUseOptionalOutputDevice = 0xFFFFFFFF,};
enum $557610947C2F5853115DF338016A2D62 {kControlCheckBoxAutoToggleProc = 0x173,kControlRadioButtonAutoToggleProc = 0x174,};
enum $557D46922707209D59270A6EABB5D895 {kHICommandCustomizeToolbar = 0x74636667,kHICommandShowToolbar = 0x74627368,kHICommandHideToolbar = 0x74626864,};
enum $55921B6EEA64DFF10C90019A7B523E7B {kControlKindImageWell = 0x77656C6C,};
enum $55C3482291366F926B0FAB832E4E5FA1 {kThemeScrollBar = 0x0,kThemeSlider = 0x2,kThemeProgressBar = 0x3,kThemeIndeterminateBar = 0x4,};
enum $55C70B9EC1819C4D16EFD6E7BDEAA2CD {kAXValueCGPointType = 0x1,kAXValueCGSizeType = 0x2,kAXValueCGRectType = 0x3,kAXValueCFRangeType = 0x4,kAXValueIllegalType = 0x0,};
enum $55C8245C7CC0654B9BBFB650075527FF {kCollectionUser0Mask = 0x1,kCollectionUser1Mask = 0x2,kCollectionUser2Mask = 0x4,kCollectionUser3Mask = 0x8,kCollectionUser4Mask = 0x10,kCollectionUser5Mask = 0x20,kCollectionUser6Mask = 0x40,kCollectionUser7Mask = 0x80,kCollectionUser8Mask = 0x100,kCollectionUser9Mask = 0x200,kCollectionUser10Mask = 0x400,kCollectionUser11Mask = 0x800,kCollectionUser12Mask = 0x1000,kCollectionUser13Mask = 0x2000,kCollectionUser14Mask = 0x4000,kCollectionUser15Mask = 0x8000,kCollectionReserved0Mask = 0x10000,kCollectionReserved1Mask = 0x20000,kCollectionReserved2Mask = 0x40000,kCollectionReserved3Mask = 0x80000,kCollectionReserved4Mask = 0x100000,kCollectionReserved5Mask = 0x200000,kCollectionReserved6Mask = 0x400000,kCollectionReserved7Mask = 0x800000,kCollectionReserved8Mask = 0x1000000,kCollectionReserved9Mask = 0x2000000,kCollectionReserved10Mask = 0x4000000,kCollectionReserved11Mask = 0x8000000,kCollectionReserved12Mask = 0x10000000,kCollectionReserved13Mask = 0x20000000,kCollectionPersistenceMask = 0x40000000,kCollectionLockMask = 0x80000000,};
enum $55E5252D84E6F1A48D581BACE889D526 {T_LISTEN = 0x1,T_CONNECT = 0x2,T_DATA = 0x4,T_EXDATA = 0x8,T_DISCONNECT = 0x10,T_ERROR = 0x20,T_UDERR = 0x40,T_ORDREL = 0x80,T_GODATA = 0x100,T_GOEXDATA = 0x200,T_REQUEST = 0x400,T_REPLY = 0x800,T_PASSCON = 0x1000,T_RESET = 0x2000,kPRIVATEEVENT = 0x10000000,kCOMPLETEEVENT = 0x20000000,T_BINDCOMPLETE = 0x20000001,T_UNBINDCOMPLETE = 0x20000002,T_ACCEPTCOMPLETE = 0x20000003,T_REPLYCOMPLETE = 0x20000004,T_DISCONNECTCOMPLETE = 0x20000005,T_OPTMGMTCOMPLETE = 0x20000006,T_OPENCOMPLETE = 0x20000007,T_GETPROTADDRCOMPLETE = 0x20000008,T_RESOLVEADDRCOMPLETE = 0x20000009,T_GETINFOCOMPLETE = 0x2000000A,T_SYNCCOMPLETE = 0x2000000B,T_MEMORYRELEASED = 0x2000000C,T_REGNAMECOMPLETE = 0x2000000D,T_DELNAMECOMPLETE = 0x2000000E,T_LKUPNAMECOMPLETE = 0x2000000F,T_LKUPNAMERESULT = 0x20000010,kOTSyncIdleEvent = 0x20000011,kSTREAMEVENT = 0x21000000,kOTReservedEvent1 = 0x21000001,kGetmsgEvent = 0x21000002,kStreamReadEvent = 0x21000003,kStreamWriteEvent = 0x21000004,kStreamIoctlEvent = 0x21000005,kOTReservedEvent2 = 0x21000006,kStreamOpenEvent = 0x21000007,kPollEvent = 0x21000008,kOTReservedEvent3 = 0x21000009,kOTReservedEvent4 = 0x2100000A,kOTReservedEvent5 = 0x2100000B,kOTReservedEvent6 = 0x2100000C,kOTReservedEvent7 = 0x2100000D,kOTReservedEvent8 = 0x2100000E,kSIGNALEVENT = 0x22000000,kPROTOCOLEVENT = 0x23000000,kOTProviderIsDisconnected = 0x23000001,kOTProviderIsReconnected = 0x23000002,kOTProviderWillClose = 0x24000001,kOTProviderIsClosed = 0x24000002,kOTPortDisabled = 0x25000001,kOTPortEnabled = 0x25000002,kOTPortOffline = 0x25000003,kOTPortOnline = 0x25000004,kOTClosePortRequest = 0x25000005,kOTYieldPortRequest = 0x25000005,kOTNewPortRegistered = 0x25000006,kOTPortNetworkChange = 0x25000007,kOTConfigurationChanged = 0x26000001,kOTSystemSleep = 0x26000002,kOTSystemShutdown = 0x26000003,kOTSystemAwaken = 0x26000004,kOTSystemIdle = 0x26000005,kOTSystemSleepPrep = 0x26000006,kOTSystemShutdownPrep = 0x26000007,kOTSystemAwakenPrep = 0x26000008,kOTStackIsLoading = 0x27000001,kOTStackWasLoaded = 0x27000002,kOTStackIsUnloading = 0x27000003,};
enum $55EA60C468DD6DD8FB65849ABE31A4F2 {selectAllVariations = 0xFFFFFFFF,};
enum $55F28261BC9C155E9483B39873A3ED85 {smTransGana2 = 0x7,smTransHangul2 = 0x8,smTransJamo2 = 0x9,smTransBopomofo2 = 0xA,smTransLower = 0x4000,smTransUpper = 0x8000,smTransRuleBaseFormat = 0x1,smTransHangulFormat = 0x2,smTransPreDoubleByting = 0x1,smTransPreLowerCasing = 0x2,};
enum $56007F9F634BAFE38508477F4B032A09 {sizeof_sfntInstance = 0x4,};
enum $56340832CC9720EC5FAD8F1E364C9D7C {kFMTrueTypeFontTechnology = 0x74727565,kFMPostScriptFontTechnology = 0x74797031,};
enum $566D78D6447C4D565AE39524F2F22577 {kNoByteCode = 0x0,kOneByteCode = 0x1,kTwoByteCode = 0x2,kFourByteCode = 0x3,};
enum $567D0EB9EA3B0AE4681D73EF8630A1F4 {durationMicrosecond = 0xFFFFFFFF,durationMillisecond = 0x1,durationSecond = 0x3E8,durationMinute = 0xEA60,durationHour = 0x36EE80,durationDay = 0x5265C00,durationNoWait = 0x0,durationForever = 0x7FFFFFFF,};
enum $5686FBFFDCE4CE500E91018F9CEEB527 {pObject = 0x636F626A,};
struct $5694E020026D0F35B79D3FDB301355DE {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;};
enum $56A94F78B08640B182D772873D098169 {scsiDataBuffer = 0x0,scsiDataTIB = 0x1,scsiDataSG = 0x2,scsiDataIOTable = 0x3,};
enum $56D18C3D7DDE449E57B3393CBED9BF33 {gestaltVersion = 0x76657273,gestaltValueImplementedVers = 0x5,};
enum $56D75E7A780E35730F4E5F64B02F61C9 {kRenderCursorInHardware = 0x1,kRenderCursorInSoftware = 0x2,};
enum $56E9CEDBBB2FC1BC0A22E1060089C3F8 {kLSItemInfoIsPlainFile = 0x1,kLSItemInfoIsPackage = 0x2,kLSItemInfoIsApplication = 0x4,kLSItemInfoIsContainer = 0x8,kLSItemInfoIsAliasFile = 0x10,kLSItemInfoIsSymlink = 0x20,kLSItemInfoIsInvisible = 0x40,kLSItemInfoIsNativeApp = 0x80,kLSItemInfoIsClassicApp = 0x100,kLSItemInfoAppPrefersNative = 0x200,kLSItemInfoAppPrefersClassic = 0x400,kLSItemInfoAppIsScriptable = 0x800,kLSItemInfoIsVolume = 0x1000,kLSItemInfoExtensionIsHidden = 0x100000,};
enum $56EDAB68D3F8BADD4C371F358805869C {k8BitRawIn = 0x1,k8BitTwosIn = 0x2,k16BitIn = 0x4,kStereoIn = 0x8,k8BitRawOut = 0x100,k8BitTwosOut = 0x200,k16BitOut = 0x400,kStereoOut = 0x800,kReverse = 0x10000,kRateConvert = 0x20000,kCreateSoundSource = 0x40000,kVMAwareness = 0x200000,kHighQuality = 0x400000,kNonRealTime = 0x800000,};
enum $57207D5B7298A95A864C864EAD02CF47 {gestaltLowMemorySize = 0x6C6D656D,};
enum $5722F06485C779D53A7EC49A63E7A8E8 {kControlUserItemDrawProcTag = 0x75696470,kControlUserPaneDrawProcTag = 0x64726177,kControlUserPaneHitTestProcTag = 0x68697474,kControlUserPaneTrackingProcTag = 0x7472616B,kControlUserPaneIdleProcTag = 0x69646C65,kControlUserPaneKeyDownProcTag = 0x6B657964,kControlUserPaneActivateProcTag = 0x61637469,kControlUserPaneFocusProcTag = 0x666F6369,kControlUserPaneBackgroundProcTag = 0x6261636B,};
enum $572C64D4F4AC32D7D35B385D37F9C84F {kUnicodeFallbackSequencingMask = 0x3,kUnicodeFallbackInterruptSafeMask = 0x4,};
enum $57346C218FAFA837D961CDD545F6C271 {gestaltAppearanceAttr = 0x61707072,gestaltAppearanceExists = 0x0,gestaltAppearanceCompatMode = 0x1,};
enum $573CB53713C5E6F09A2A84961E8811D7 {T_BIND = 0x1,T_OPTMGMT = 0x2,T_CALL = 0x3,T_DIS = 0x4,T_UNITDATA = 0x5,T_UDERROR = 0x6,T_INFO = 0x7,T_REPLYDATA = 0x8,T_REQUESTDATA = 0x9,T_UNITREQUEST = 0xA,T_UNITREPLY = 0xB,};
enum $573F66D1E71256BA196F49F307880F86 {kKeyboardJIS = 0x4A495320,kKeyboardANSI = 0x414E5349,kKeyboardISO = 0x49534F20,kKeyboardUnknown = 0x3F3F3F3F,};
enum $57DFDAE423EEE50EA737E6138FA1E6EE {langEnglish = 0x0,langFrench = 0x1,langGerman = 0x2,langItalian = 0x3,langDutch = 0x4,langSwedish = 0x5,langSpanish = 0x6,langDanish = 0x7,langPortuguese = 0x8,langNorwegian = 0x9,langHebrew = 0xA,langJapanese = 0xB,langArabic = 0xC,langFinnish = 0xD,langGreek = 0xE,langIcelandic = 0xF,langMaltese = 0x10,langTurkish = 0x11,langCroatian = 0x12,langTradChinese = 0x13,langUrdu = 0x14,langHindi = 0x15,langThai = 0x16,langKorean = 0x17,};
enum $57F807D505FD9D00D599ACAA96088B36 {siCloseDriver = 0x636C6F73,siInitializeDriver = 0x696E6974,siPauseRecording = 0x70617573,siUserInterruptProc = 0x75736572,};
enum $58030CB495C0F1442001624CD349E98E {kBeginEndConfigureBit = 0x0,kMovedDisplayBit = 0x1,kSetMainDisplayBit = 0x2,kSetDisplayModeBit = 0x3,kAddDisplayBit = 0x4,kRemoveDisplayBit = 0x5,kNewDisplayBit = 0x6,kDisposeDisplayBit = 0x7,kEnabledDisplayBit = 0x8,kDisabledDisplayBit = 0x9,kMirrorDisplayBit = 0xA,kUnMirrorDisplayBit = 0xB,};
enum $583B095E0E1C4AF48753C9054C025119 {cmNoSpace = 0x0,cmRGBSpace = 0x1,cmCMYKSpace = 0x2,cmHSVSpace = 0x3,cmHLSSpace = 0x4,cmYXYSpace = 0x5,cmXYZSpace = 0x6,cmLUVSpace = 0x7,cmLABSpace = 0x8,cmReservedSpace1 = 0x9,cmGraySpace = 0xA,cmReservedSpace2 = 0xB,cmGamutResultSpace = 0xC,cmNamedIndexedSpace = 0x10,cmMCFiveSpace = 0x11,cmMCSixSpace = 0x12,cmMCSevenSpace = 0x13,cmMCEightSpace = 0x14,cmAlphaPmulSpace = 0x40,cmAlphaSpace = 0x80,cmRGBASpace = 0x81,cmGrayASpace = 0x8A,cmRGBAPmulSpace = 0xC1,cmGrayAPmulSpace = 0xCA,};
enum $583F57547226B43F6ABBCF73AF5E24D4 {kOSAScriptIsTypeCompiledScript = 0x63736372,};
enum $586082E93EF5CAA611F993CA38AE14BD {kUnicodeByteOrderMark = 0xFEFF,kUnicodeObjectReplacement = 0xFFFC,kUnicodeReplacementChar = 0xFFFD,kUnicodeSwappedByteOrderMark = 0xFFFE,kUnicodeNotAChar = 0xFFFF,};
enum $586A953CF3A83CBE50582D7005B902F5 {pOriginalItem = 0x6F726967,};
enum $588B556C9117B511479A044E550E7995 {kStoredWindowUnicodeTitleID = 0x75737472,kStoredWindowTitleCFStringID = 0x63667374,};
enum $58B7B25FE359A5DE8E99FA27EE656A12 {kPowerHandlerExistsForDeviceErr = 0xFFFFCD32,kPowerHandlerNotFoundForDeviceErr = 0xFFFFCD31,kPowerHandlerNotFoundForProcErr = 0xFFFFCD30,kPowerMgtMessageNotHandled = 0xFFFFCD2F,kPowerMgtRequestDenied = 0xFFFFCD2E,kCantReportProcessorTemperatureErr = 0xFFFFCD2B,kProcessorTempRoutineRequiresMPLib2 = 0xFFFFCD2A,kNoSuchPowerSource = 0xFFFFCD24,kBridgeSoftwareRunningCantSleep = 0xFFFFCD12,};
enum $58E0C696113622080B4B29DB39E7C665 {kFirstIOKitNotificationType = 0x64,kIOServicePublishNotificationType = 0x64,kIOServiceMatchedNotificationType = 0x65,kIOServiceTerminatedNotificationType = 0x66,kIOAsyncCompletionNotificationType = 0x96,kIOServiceMessageNotificationType = 0xA0,kLastIOKitNotificationType = 0xC7,};
struct $58E56D0A3AC374B00DC754288770DE5B {CFIndex version;CFDictionaryRetainCallBack retain;CFDictionaryReleaseCallBack release;CFDictionaryCopyDescriptionCallBack copyDescription;CFDictionaryEqualCallBack equal;CFDictionaryHashCallBack hash;};
enum $58EDEC0E60350C0E6D3F5EE2633005D2 {itlcShowIcon = 0x7,itlcDualCaret = 0x6,itlcSysDirection = 0xF,};
enum $58F4BDE45325186DCC73AD5CD6AD716B {kOTISDNFramingTransparent = 0x10,kOTISDNFramingHDLC = 0x20,kOTISDNFramingV110 = 0x40,kOTISDNFramingV14E = 0x80,};
enum $5914A31DC31FA0CD2EEE95C8FEE85367 {kPEFPkDataZero = 0x0,kPEFPkDataBlock = 0x1,kPEFPkDataRepeat = 0x2,kPEFPkDataRepeatBlock = 0x3,kPEFPkDataRepeatZero = 0x4,};
enum $59197BA14A203D17976E7D9CA314268A {gestaltAppleScriptVersion = 0x61736376,};
enum $5939D4AA02748FEE1C11BE209DA81508 {sizeof_sfntNameRecord = 0xC,};
enum $593B46DC079AF49552494FE1D647B04A {AF_ATALK_FAMILY = 0x100,AF_ATALK_DDP = 0x100,AF_ATALK_DDPNBP = 0x101,AF_ATALK_NBP = 0x102,AF_ATALK_MNODE = 0x103,};
enum $5946B9DECF101F624185137FE626359C {cVersion = 0x76657273,cWindow = 0x6377696E,cWord = 0x63776F72,enumArrows = 0x6172726F,enumJustification = 0x6A757374,enumKeyForm = 0x6B66726D,enumPosition = 0x706F7369,enumProtection = 0x7072746E,enumQuality = 0x7175616C,enumSaveOptions = 0x7361766F,enumStyle = 0x7374796C,enumTransferMode = 0x7472616E,formUniqueID = 0x49442020,kAEAbout = 0x61626F75,kAEAfter = 0x61667465,kAEAliasSelection = 0x73616C69,kAEAllCaps = 0x616C6370,kAEArrowAtEnd = 0x6172656E,kAEArrowAtStart = 0x61727374,kAEArrowBothEnds = 0x6172626F,};
struct $5987BA5557986D944C5839CBE3538D29 {CFStringRef dataString;};
enum $59BA3560193047842C5CB0E2058A9F5A {FMNAMESZ = 0x1F,};
enum $59C0EFCBD80CE07BA9A26CF33720D922 {kOTRawRcvOn = 0x0,kOTRawRcvOff = 0x1,kOTRawRcvOnWithTimeStamp = 0x2,};
enum $59D00A520F94BD460004101ABE91DE78 {afpAccessDenied = 0xFFFFEC78,afpAuthContinue = 0xFFFFEC77,afpBadUAM = 0xFFFFEC76,afpBadVersNum = 0xFFFFEC75,afpBitmapErr = 0xFFFFEC74,afpCantMove = 0xFFFFEC73,afpDenyConflict = 0xFFFFEC72,afpDirNotEmpty = 0xFFFFEC71,afpDiskFull = 0xFFFFEC70,afpEofError = 0xFFFFEC6F,afpFileBusy = 0xFFFFEC6E,afpFlatVol = 0xFFFFEC6D,afpItemNotFound = 0xFFFFEC6C,afpLockErr = 0xFFFFEC6B,afpMiscErr = 0xFFFFEC6A,afpNoMoreLocks = 0xFFFFEC69,afpNoServer = 0xFFFFEC68,afpObjectExists = 0xFFFFEC67,afpObjectNotFound = 0xFFFFEC66,afpParmErr = 0xFFFFEC65,afpRangeNotLocked = 0xFFFFEC64,afpRangeOverlap = 0xFFFFEC63,afpSessClosed = 0xFFFFEC62,afpUserNotAuth = 0xFFFFEC61,afpCallNotSupported = 0xFFFFEC60,afpObjectTypeErr = 0xFFFFEC5F,afpTooManyFilesOpen = 0xFFFFEC5E,afpServerGoingDown = 0xFFFFEC5D,afpCantRename = 0xFFFFEC5C,afpDirNotFound = 0xFFFFEC5B,afpIconTypeError = 0xFFFFEC5A,afpVolLocked = 0xFFFFEC59,afpObjectLocked = 0xFFFFEC58,afpContainsSharedErr = 0xFFFFEC57,afpIDNotFound = 0xFFFFEC56,afpIDExists = 0xFFFFEC55,afpDiffVolErr = 0xFFFFEC54,afpCatalogChanged = 0xFFFFEC53,afpSameObjectErr = 0xFFFFEC52,afpBadIDErr = 0xFFFFEC51,afpPwdSameErr = 0xFFFFEC50,afpPwdTooShortErr = 0xFFFFEC4F,afpPwdExpiredErr = 0xFFFFEC4E,afpInsideSharedErr = 0xFFFFEC4D,afpInsideTrashErr = 0xFFFFEC4C,afpPwdNeedsChangeErr = 0xFFFFEC4B,afpPwdPolicyErr = 0xFFFFEC4A,afpAlreadyLoggedInErr = 0xFFFFEC49,afpCallNotAllowed = 0xFFFFEC48,};
enum $5A21577F6C66B69F271DFC95BFD9B708 {gestaltALMAttr = 0x74726970,gestaltALMPresent = 0x0,gestaltALMHasSFGroup = 0x1,gestaltALMHasCFMSupport = 0x2,gestaltALMHasRescanNotifiers = 0x3,};
enum $5A6B7C783DA80C9FBE50067968D2CB2B {kCFStringEncodingMacJapanese = 0x1,kCFStringEncodingMacChineseTrad = 0x2,kCFStringEncodingMacKorean = 0x3,kCFStringEncodingMacArabic = 0x4,kCFStringEncodingMacHebrew = 0x5,kCFStringEncodingMacGreek = 0x6,kCFStringEncodingMacCyrillic = 0x7,kCFStringEncodingMacDevanagari = 0x9,kCFStringEncodingMacGurmukhi = 0xA,kCFStringEncodingMacGujarati = 0xB,kCFStringEncodingMacOriya = 0xC,kCFStringEncodingMacBengali = 0xD,kCFStringEncodingMacTamil = 0xE,kCFStringEncodingMacTelugu = 0xF,kCFStringEncodingMacKannada = 0x10,kCFStringEncodingMacMalayalam = 0x11,kCFStringEncodingMacSinhalese = 0x12,kCFStringEncodingMacBurmese = 0x13,kCFStringEncodingMacKhmer = 0x14,kCFStringEncodingMacThai = 0x15,kCFStringEncodingMacLaotian = 0x16,kCFStringEncodingMacGeorgian = 0x17,kCFStringEncodingMacArmenian = 0x18,kCFStringEncodingMacChineseSimp = 0x19,kCFStringEncodingMacTibetan = 0x1A,kCFStringEncodingMacMongolian = 0x1B,kCFStringEncodingMacEthiopic = 0x1C,kCFStringEncodingMacCentralEurRoman = 0x1D,kCFStringEncodingMacVietnamese = 0x1E,kCFStringEncodingMacExtArabic = 0x1F,kCFStringEncodingMacSymbol = 0x21,kCFStringEncodingMacDingbats = 0x22,kCFStringEncodingMacTurkish = 0x23,kCFStringEncodingMacCroatian = 0x24,kCFStringEncodingMacIcelandic = 0x25,kCFStringEncodingMacRomanian = 0x26,kCFStringEncodingMacCeltic = 0x27,kCFStringEncodingMacGaelic = 0x28,kCFStringEncodingMacFarsi = 0x8C,kCFStringEncodingMacUkrainian = 0x98,kCFStringEncodingMacInuit = 0xEC,kCFStringEncodingMacVT100 = 0xFC,kCFStringEncodingMacHFS = 0xFF,kCFStringEncodingISOLatin2 = 0x202,kCFStringEncodingISOLatin3 = 0x203,kCFStringEncodingISOLatin4 = 0x204,kCFStringEncodingISOLatinCyrillic = 0x205,kCFStringEncodingISOLatinArabic = 0x206,kCFStringEncodingISOLatinGreek = 0x207,kCFStringEncodingISOLatinHebrew = 0x208,kCFStringEncodingISOLatin5 = 0x209,kCFStringEncodingISOLatin6 = 0x20A,kCFStringEncodingISOLatinThai = 0x20B,kCFStringEncodingISOLatin7 = 0x20D,kCFStringEncodingISOLatin8 = 0x20E,kCFStringEncodingISOLatin9 = 0x20F,kCFStringEncodingDOSLatinUS = 0x400,kCFStringEncodingDOSGreek = 0x405,kCFStringEncodingDOSBalticRim = 0x406,kCFStringEncodingDOSLatin1 = 0x410,kCFStringEncodingDOSGreek1 = 0x411,kCFStringEncodingDOSLatin2 = 0x412,kCFStringEncodingDOSCyrillic = 0x413,kCFStringEncodingDOSTurkish = 0x414,kCFStringEncodingDOSPortuguese = 0x415,kCFStringEncodingDOSIcelandic = 0x416,kCFStringEncodingDOSHebrew = 0x417,kCFStringEncodingDOSCanadianFrench = 0x418,kCFStringEncodingDOSArabic = 0x419,kCFStringEncodingDOSNordic = 0x41A,kCFStringEncodingDOSRussian = 0x41B,kCFStringEncodingDOSGreek2 = 0x41C,kCFStringEncodingDOSThai = 0x41D,kCFStringEncodingDOSJapanese = 0x420,kCFStringEncodingDOSChineseSimplif = 0x421,kCFStringEncodingDOSKorean = 0x422,kCFStringEncodingDOSChineseTrad = 0x423,kCFStringEncodingWindowsLatin2 = 0x501,kCFStringEncodingWindowsCyrillic = 0x502,kCFStringEncodingWindowsGreek = 0x503,kCFStringEncodingWindowsLatin5 = 0x504,kCFStringEncodingWindowsHebrew = 0x505,kCFStringEncodingWindowsArabic = 0x506,kCFStringEncodingWindowsBalticRim = 0x507,kCFStringEncodingWindowsKoreanJohab = 0x510,kCFStringEncodingWindowsVietnamese = 0x508,kCFStringEncodingJIS_X0201_76 = 0x620,kCFStringEncodingJIS_X0208_83 = 0x621,kCFStringEncodingJIS_X0208_90 = 0x622,kCFStringEncodingJIS_X0212_90 = 0x623,kCFStringEncodingJIS_C6226_78 = 0x624,kCFStringEncodingShiftJIS_X0213_00 = 0x628,kCFStringEncodingGB_2312_80 = 0x630,kCFStringEncodingGBK_95 = 0x631,kCFStringEncodingGB_18030_2000 = 0x632,kCFStringEncodingKSC_5601_87 = 0x640,kCFStringEncodingKSC_5601_92_Johab = 0x641,kCFStringEncodingCNS_11643_92_P1 = 0x651,kCFStringEncodingCNS_11643_92_P2 = 0x652,kCFStringEncodingCNS_11643_92_P3 = 0x653,kCFStringEncodingISO_2022_JP = 0x820,kCFStringEncodingISO_2022_JP_2 = 0x821,kCFStringEncodingISO_2022_JP_1 = 0x822,kCFStringEncodingISO_2022_JP_3 = 0x823,kCFStringEncodingISO_2022_CN = 0x830,kCFStringEncodingISO_2022_CN_EXT = 0x831,kCFStringEncodingISO_2022_KR = 0x840,kCFStringEncodingEUC_JP = 0x920,kCFStringEncodingEUC_CN = 0x930,kCFStringEncodingEUC_TW = 0x931,kCFStringEncodingEUC_KR = 0x940,kCFStringEncodingShiftJIS = 0xA01,kCFStringEncodingKOI8_R = 0xA02,kCFStringEncodingBig5 = 0xA03,kCFStringEncodingMacRomanLatin1 = 0xA04,kCFStringEncodingHZ_GB_2312 = 0xA05,kCFStringEncodingBig5_HKSCS_1999 = 0xA06,kCFStringEncodingEBCDIC_US = 0xC01,kCFStringEncodingEBCDIC_CP037 = 0xC02,};
enum $5AD176125175F3E2E2A15B1B336FAFA7 {gestaltOCEToolboxAttr = 0x6F636575,gestaltOCETBPresent = 0x1,gestaltOCETBAvailable = 0x2,gestaltOCESFServerAvailable = 0x4,gestaltOCETBNativeGlueAvailable = 0x10,};
enum $5B004150561D8A57B6AEE998E4910F58 {kClassKCItemAttr = 0x636C6173,kCreationDateKCItemAttr = 0x63646174,kModDateKCItemAttr = 0x6D646174,kDescriptionKCItemAttr = 0x64657363,kCommentKCItemAttr = 0x69636D74,kCreatorKCItemAttr = 0x63727472,kTypeKCItemAttr = 0x74797065,kScriptCodeKCItemAttr = 0x73637270,kLabelKCItemAttr = 0x6C61626C,kInvisibleKCItemAttr = 0x696E7669,kNegativeKCItemAttr = 0x6E656761,kCustomIconKCItemAttr = 0x63757369,kAccountKCItemAttr = 0x61636374,kServiceKCItemAttr = 0x73766365,kGenericKCItemAttr = 0x67656E61,kSecurityDomainKCItemAttr = 0x73646D6E,kServerKCItemAttr = 0x73727672,kAuthTypeKCItemAttr = 0x61747970,kPortKCItemAttr = 0x706F7274,kPathKCItemAttr = 0x70617468,kVolumeKCItemAttr = 0x766C6D65,kAddressKCItemAttr = 0x61646472,kSignatureKCItemAttr = 0x73736967,kProtocolKCItemAttr = 0x7074636C,kSubjectKCItemAttr = 0x7375626A,kCommonNameKCItemAttr = 0x636E2020,kIssuerKCItemAttr = 0x69737375,kSerialNumberKCItemAttr = 0x736E6272,kEMailKCItemAttr = 0x6D61696C,kPublicKeyHashKCItemAttr = 0x68706B79,kIssuerURLKCItemAttr = 0x6975726C,kEncryptKCItemAttr = 0x656E6372,kDecryptKCItemAttr = 0x64656372,kSignKCItemAttr = 0x7369676E,kVerifyKCItemAttr = 0x76657269,kWrapKCItemAttr = 0x77726170,kUnwrapKCItemAttr = 0x756E7772,kStartDateKCItemAttr = 0x73646174,kEndDateKCItemAttr = 0x65646174,};
enum $5B1910A889F707C7A59779001A563B82 {keyProgramState = 0x64737073,};
struct $5B33AC6813B147F5BC976B9451A73CD9 {CFURLRef systemID;CFStringRef publicID;};
enum $5C007B835494126F6B1399E025572D4F : unsigned __int32 {kICAttrNoChange = 0xFFFFFFFF,kICAttrLockedMask = 0x1,kICAttrVolatileMask = 0x2,};
enum $5C3FBFE29997718F9B18EE904C66E071 {gestaltIntel = 0xA,};
enum $5CBE8BE576D101F7C329838514C3A8C4 {kSimpleBeepID = 0x1,};
enum $5CDB6810CF5FAA70771C826E258B46A2 {kAllModesValid = 0x0,kAllModesSafe = 0x1,kReportsTagging = 0x2,kHasDirectConnection = 0x3,kIsMonoDev = 0x4,kUncertainConnection = 0x5,kTaggingInfoNonStandard = 0x6,kReportsDDCConnection = 0x7,kHasDDCConnection = 0x8,kConnectionInactive = 0x9,kDependentConnection = 0xA,kBuiltInConnection = 0xB,kOverrideConnection = 0xC,kFastCheckForDDC = 0xD,kReportsHotPlugging = 0xE,};
enum $5CF8B23CE37CFEEDD0C9461CA916F0CA : unsigned __int32 {rate48khz = 0xBB800000,rate44khz = 0xAC440000,rate32khz = 0x7D000000,rate22050hz = 0x56220000,rate22khz = 0x56EE8BA3,rate16khz = 0x3E800000,rate11khz = 0x2B7745D1,rate11025hz = 0x2B110000,rate8khz = 0x1F400000,};
enum $5D023E2650DFF2AAEA250031F9EBD2F0 {kWindowSheetProc = 0x440,kWindowSheetAlertProc = 0x460,};
enum $5D0316CF9F1FFF40199710D526EBD44A {_MixedModeMagic = 0xAAFE,};
enum $5D09B8C385951126E1C753803A77238E {gestaltWindowMgrAttr = 0x77696E64,gestaltWindowMgrPresent = 0x1,gestaltWindowMgrPresentBit = 0x0,gestaltExtendedWindowAttributes = 0x1,gestaltExtendedWindowAttributesBit = 0x1,gestaltHasFloatingWindows = 0x2,gestaltHasFloatingWindowsBit = 0x2,gestaltHasWindowBuffering = 0x3,gestaltHasWindowBufferingBit = 0x3,gestaltWindowLiveResizeBit = 0x4,gestaltWindowMinimizeToDockBit = 0x5,gestaltHasWindowShadowsBit = 0x6,gestaltSheetsAreWindowModalBit = 0x7,gestaltFrontWindowMayBeHiddenBit = 0x8,gestaltWindowMgrPresentMask = 0x1,gestaltExtendedWindowAttributesMask = 0x2,gestaltHasFloatingWindowsMask = 0x4,gestaltHasWindowBufferingMask = 0x8,gestaltWindowLiveResizeMask = 0x10,gestaltWindowMinimizeToDockMask = 0x20,gestaltHasWindowShadowsMask = 0x40,gestaltSheetsAreWindowModalMask = 0x80,gestaltFrontWindowMayBeHiddenMask = 0x100,};
enum $5D1FAF069B8473FC4827B766B8EA0F01 {fTrash = 0xFFFFFFFD,fDesktop = 0xFFFFFFFE,fDisk = 0x0,};
enum $5D2ED6E9C3B52C2B530C241D43578F10 {badFolderDescErr = 0xFFFFEF52,duplicateFolderDescErr = 0xFFFFEF51,noMoreFolderDescErr = 0xFFFFEF50,invalidFolderTypeErr = 0xFFFFEF4F,duplicateRoutingErr = 0xFFFFEF4E,routingNotFoundErr = 0xFFFFEF4D,badRoutingSizeErr = 0xFFFFEF4C,};
enum $5D3A742C8FC338A631E8EA6076ACAFF5 {kUCKeyStateEntryTerminalFormat = 0x1,kUCKeyStateEntryRangeFormat = 0x2,};
enum $5D855D395EFFF84D244F4A9ACDB29E4B {keyUserNameAttr = 0x756E616D,keyUserPasswordAttr = 0x70617373,keyDisableAuthenticationAttr = 0x61757468,keyXMLDebuggingAttr = 0x78646267,kAERPCClass = 0x72706320,kAEXMLRPCScheme = 0x52504332,kAESOAPScheme = 0x534F4150,kAESharedScriptHandler = 0x77736370,keyRPCMethodName = 0x6D657468,keyRPCMethodParam = 0x7061726D,keyRPCMethodParamOrder = 0x2F6F7264,keyAEPOSTHeaderData = 0x70686564,keyAEReplyHeaderData = 0x72686564,keyAEXMLRequestData = 0x78726571,keyAEXMLReplyData = 0x78726570,keyAdditionalHTTPHeaders = 0x61686564,keySOAPAction = 0x73616374,keySOAPMethodNameSpace = 0x6D737063,keySOAPMethodNameSpaceURI = 0x6D737075,keySOAPSchemaVersion = 0x73736368,};
enum $5DBF6F33D58ED7259CE5B7E717FD55D8 {kMagicBusyCreationDate = 0x4F3AFDB0,};
enum $5DFB9E3518074F8A33D535E5D626C1CD {typeSMInt = 0x73686F72,typeShortInteger = 0x73686F72,typeInteger = 0x6C6F6E67,typeLongInteger = 0x6C6F6E67,typeMagnitude = 0x6D61676E,typeComp = 0x636F6D70,typeSMFloat = 0x73696E67,typeShortFloat = 0x73696E67,typeFloat = 0x646F7562,typeLongFloat = 0x646F7562,typeExtended = 0x65787465,};
enum $5E044D4409574662170B5B55BAB61AFC : unsigned __int32 {kATSUseGlyphAdvance = 0x7FFFFFFF,kATSUseLineHeight = 0x7FFFFFFF,kATSNoTracking = 0x80000000,};
enum $5E065B0830FFAFA0BDF10ED733D56970 {OPT_ADDMCAST = 0x1000,OPT_DELMCAST = 0x1001,OPT_RCVPACKETTYPE = 0x1002,OPT_RCVDESTADDR = 0x1003,OPT_SETRAWMODE = 0x1004,OPT_SETPROMISCUOUS = 0x1005,};
enum $5E07452A86FFEC6EE5E141FB0D749E73 {kICServicesTCPBit = 0x0,kICServicesUDPBit = 0x1,};
enum $5E12983D12B8563378D748834D343583 {kNavAskDiscardChanges = 0x1,kNavAskDiscardChangesCancel = 0x2,};
enum $5E49B783E0031968F4075D1CAB6B12F4 {scsiOddDisconnectUnsafeRead1 = 0x1,scsiOddDisconnectUnsafeWrite1 = 0x2,scsiBusErrorsUnsafe = 0x4,scsiRequiresHandshake = 0x8,scsiTargetDrivenSDTRSafe = 0x10,scsiOddCountForPhysicalUnsafe = 0x20,scsiAbortCmdFixed = 0x40,scsiMeshACKTimingFixed = 0x80,};
enum $5E583120C1958CE0FCEC92A32CF2C822 {gestaltProcClkSpeed = 0x70636C6B,};
enum $5E879841A9E7F0D0A6CE119A872ABAD5 {cWeekday = 0x776B6479,cSunday = 0x73756E20,cMonday = 0x6D6F6E20,cTuesday = 0x74756520,cWednesday = 0x77656420,cThursday = 0x74687520,cFriday = 0x66726920,cSaturday = 0x73617420,pASQuote = 0x71756F74,pASSeconds = 0x73656373,pASMinutes = 0x6D696E20,pASHours = 0x686F7572,pASDays = 0x64617973,pASWeeks = 0x7765656B,cWritingCodeInfo = 0x6369746C,pScriptCode = 0x70736364,pLangCode = 0x706C6364,kASMagicTellEvent = 0x74656C6C,kASMagicEndTellEvent = 0x74656E64,};
enum $5E8D5BBCBE57084F184AA3C5AA2B0A25 {kTXNSyncKeyboard = 0x0,kTXNNoSyncKeyboard = 0x1,};
enum $5EEED0D353A39A03877CDC08835CA1DF {gestaltRealtimeMgrAttr = 0x72746D72,gestaltRealtimeMgrPresent = 0x0,};
enum $5F17D6B16BF5E5426CD98887D311C186 : unsigned __int32 {kMORTTag = 0x6D6F7274,kMORTCurrentVersion = 0x10000,kMORTCoverVertical = 0x8000,kMORTCoverDescending = 0x4000,kMORTCoverIgnoreVertical = 0x2000,kMORTCoverTypeMask = 0xF,kMORTRearrangementType = 0x0,kMORTContextualType = 0x1,kMORTLigatureType = 0x2,kMORTSwashType = 0x4,kMORTInsertionType = 0x5,kMORTLigLastAction = 0x80000000,kMORTLigStoreLigature = 0x40000000,kMORTLigFormOffsetMask = 0x3FFFFFFF,kMORTLigFormOffsetShift = 0x2,kMORTraNoAction = 0x0,kMORTraxA = 0x1,kMORTraDx = 0x2,kMORTraDxA = 0x3,kMORTraxAB = 0x4,kMORTraxBA = 0x5,kMORTraCDx = 0x6,kMORTraDCx = 0x7,kMORTraCDxA = 0x8,kMORTraDCxA = 0x9,kMORTraDxAB = 0xA,kMORTraDxBA = 0xB,kMORTraCDxAB = 0xC,kMORTraCDxBA = 0xD,kMORTraDCxAB = 0xE,kMORTraDCxBA = 0xF,kMORTDoInsertionsBefore = 0x80,kMORTIsSplitVowelPiece = 0x40,kMORTInsertionsCountMask = 0x3F,kMORTCurrInsertKashidaLike = 0x2000,kMORTMarkInsertKashidaLike = 0x1000,kMORTCurrInsertBefore = 0x800,kMORTMarkInsertBefore = 0x400,kMORTMarkJustTableCountMask = 0x3F80,kMORTMarkJustTableCountShift = 0x7,kMORTCurrJustTableCountMask = 0x7F,kMORTCurrJustTableCountShift = 0x0,kMORTCurrInsertCountMask = 0x3E0,kMORTCurrInsertCountShift = 0x5,kMORTMarkInsertCountMask = 0x1F,kMORTMarkInsertCountShift = 0x0,};
enum $5F22999F1FF952D3B8F449271715EA14 {kICAFlagReadWriteAccess = 0x1,kICAFlagReadAccess = 0x2,};
enum $5F3136115A81A068579DEF3E718D6587 {typeAppleScript = 0x61736372,kAppleScriptSubtype = 0x61736372,typeASStorage = 0x61736372,};
enum $5F439C60E80CB6DF96FA7A92D6C0733B {kTXNDefaultFontSize = 0xC0000,};
enum $5F51C7D1384D4F622EF69256DA9D858C {kStopIfAnyNotificationProcReturnsErrorBit = 0x1F,};
enum $5F622440D8729435D1CAFC0C02811AC5 {kOSADebuggerCreateSession = 0x901,kOSADebuggerGetSessionState = 0x902,kOSADebuggerSessionStep = 0x903,kOSADebuggerDisposeSession = 0x904,kOSADebuggerGetStatementRanges = 0x905,kOSADebuggerGetBreakpoint = 0x910,kOSADebuggerSetBreakpoint = 0x911,kOSADebuggerGetDefaultBreakpoint = 0x912,kOSADebuggerGetCurrentCallFrame = 0x906,kOSADebuggerGetCallFrameState = 0x907,kOSADebuggerGetVariable = 0x908,kOSADebuggerSetVariable = 0x909,kOSADebuggerGetPreviousCallFrame = 0x90A,kOSADebuggerDisposeCallFrame = 0x90B,};
enum $5FA0F57FAA30BBD24B2E0A4CF9B9F780 {kCFStringNormalizationFormD = 0x0,kCFStringNormalizationFormKD = 0x1,kCFStringNormalizationFormC = 0x2,kCFStringNormalizationFormKC = 0x3,};
enum $5FB44CF07F68BD3527423DEEC4B29887 {kUCKeyLayoutHeaderFormat = 0x1002,kUCKeyLayoutFeatureInfoFormat = 0x2001,kUCKeyModifiersToTableNumFormat = 0x3001,kUCKeyToCharTableIndexFormat = 0x4001,kUCKeyStateRecordsIndexFormat = 0x5001,kUCKeyStateTerminatorsFormat = 0x6001,kUCKeySequenceDataIndexFormat = 0x7001,};
enum $5FBF2292B4426E8B639AB18E7CDFFCA8 {kCFragResourceSearchExtensionKind = 0x30EE,};
enum $5FCB68FB6C3A69079EB72FD926B6815C {enumViewBy = 0x76776279,enumGestalt = 0x6773656E,enumConflicts = 0x63666C63,enumExistingItems = 0x65787369,enumOlderItems = 0x6F6C6472,};
enum $5FCB8F8EF1345488B1E03E24B38967F0 {kWindowStateTitleChanged = 0x1,};
enum $5FD6BAAA5059E05790131049BFBFEB44 {kVCBFlagsIdleFlushBit = 0x3,kVCBFlagsIdleFlushMask = 0x8,kVCBFlagsHFSPlusAPIsBit = 0x4,kVCBFlagsHFSPlusAPIsMask = 0x10,kVCBFlagsHardwareGoneBit = 0x5,kVCBFlagsHardwareGoneMask = 0x20,kVCBFlagsVolumeDirtyBit = 0xF,kVCBFlagsVolumeDirtyMask = 0x8000,};
enum $5FEF9BA026EFF99749744A94C5E24D82 {kWindowGroupAttrSelectable = 0x1,kWindowGroupAttrPositionFixed = 0x2,kWindowGroupAttrZOrderFixed = 0x4,};
enum $5FFD12F4491DAEA7E62D9F260A1E602A {kControlKindScrollBar = 0x73626172,};
enum $60119CD306E3538FFA4E81381379D29C {noMaskFoundErr = 0xFFFFFC18,};
enum $604116210664E432BA444CDFDF57658A {kControlImageWellContentTag = 0x636F6E74,kControlImageWellTransformTag = 0x7472616E,kControlImageWellIsDragDestinationTag = 0x64726167,};
enum $604BF1E9AE18BD5CE075FB6A0E1604C8 {gestaltUnknownErr = 0xFFFFEA52,gestaltUndefSelectorErr = 0xFFFFEA51,gestaltDupSelectorErr = 0xFFFFEA50,gestaltLocationErr = 0xFFFFEA4F,};
enum $605D7267EE865C76A18AC27A563AC2E5 {gestaltCFMAttr = 0x63667267,gestaltCFMPresent = 0x0,gestaltCFMPresentMask = 0x1,gestaltCFM99Present = 0x2,gestaltCFM99PresentMask = 0x4,};
enum $60616C0D0F3219145D1406847C7D94FB {kHFSFileLockedBit = 0x0,kHFSFileLockedMask = 0x1,kHFSThreadExistsBit = 0x1,kHFSThreadExistsMask = 0x2,};
enum $606528EFF13203D2511371A2DD50FAF8 {kWindowDrawerOpening = 0x1,kWindowDrawerOpen = 0x2,kWindowDrawerClosing = 0x3,kWindowDrawerClosed = 0x4,};
enum $608D24230D798E9C7FC175C991F2732F {gestaltResourceMgrAttr = 0x72737263,gestaltPartialRsrcs = 0x0,gestaltHasResourceOverrides = 0x1,};
enum $60973075C263390C33B1068EA6231C6E {SCSINop = 0x0,SCSIExecIO = 0x1,SCSIBusInquiry = 0x3,SCSIReleaseQ = 0x4,SCSIAbortCommand = 0x10,SCSIResetBus = 0x11,SCSIResetDevice = 0x12,SCSITerminateIO = 0x13,};
enum $60ACDD7DE86606BA08F25F5FF8AB57E2 {kWindowGroupContentsReturnWindows = 0x1,kWindowGroupContentsRecurse = 0x2,kWindowGroupContentsVisible = 0x4,};
enum $60D6897C151FFE1204442698E89B3DD8 {kMacCroatianDefaultVariant = 0x0,kMacCroatianCurrencySignVariant = 0x1,kMacCroatianEuroSignVariant = 0x2,};
enum $60DE50F669CF54F17129F0EBFB986B62 {cmPerceptual = 0x0,cmRelativeColorimetric = 0x1,cmSaturation = 0x2,cmAbsoluteColorimetric = 0x3,};
enum $60F53D0F6BC6D4890204521089289574 {keyAEHiliteRange = 0x68726E67,keyAEPinRange = 0x706E7267,keyAEClauseOffsets = 0x636C6175,keyAEOffset = 0x6F667374,keyAEPoint = 0x67706F73,keyAELeftSide = 0x6B6C6566,keyAERegionClass = 0x72676E63,keyAEDragging = 0x626F6F6C,};
enum $6110530A6819BAAC4FDDABACFB6E8AA9 {kControlPopupButtonCheckCurrentTag = 0x6368636B,};
enum $6124E96ADDA1B0421A57CB4AF73D64C1 {modemOnBit = 0x0,ringWakeUpBit = 0x2,modemInstalledBit = 0x3,ringDetectBit = 0x4,modemOnHookBit = 0x5,};
enum $613DD93652B7475103CB74F7F32FC353 {kAtSpecifiedOrigin = 0x0,kDeepestColorScreen = 0x1,kCenterOnMainScreen = 0x2,};
enum $616FCF444F7B5BC9D4B1632A4F5BBB52 {gestaltColorMatchingVersion = 0x636D7463,gestaltColorSync10 = 0x100,gestaltColorSync11 = 0x110,gestaltColorSync104 = 0x104,gestaltColorSync105 = 0x105,gestaltColorSync20 = 0x200,gestaltColorSync21 = 0x210,gestaltColorSync211 = 0x211,gestaltColorSync212 = 0x212,gestaltColorSync213 = 0x213,gestaltColorSync25 = 0x250,gestaltColorSync26 = 0x260,gestaltColorSync261 = 0x261,gestaltColorSync30 = 0x300,};
enum $61754CE00A3B897AF15694E0984361BF {kFullNotify = 0x0,kFullDependencyNotify = 0x1,};
enum $61758FF10C8319CCF39299F61C4617E7 {kUserFolderIcon = 0x75666C64,kWorkgroupFolderIcon = 0x77666C64,kGuestUserIcon = 0x67757372,kUserIcon = 0x75736572,kOwnerIcon = 0x73757372,kGroupIcon = 0x67727570,};
enum $61822B9F17FF4C6D8E0FF7B2544F9B7D {developStage = 0x20,alphaStage = 0x40,betaStage = 0x60,finalStage = 0x80,};
enum $618C284D92BBAE51242A006B194DC48F {kBlessedBusErrorBait = 0x68F168F1,};
enum $61A9A470B06C5C6DDAF8DD73EBFF2B50 {kVolumeRootFolderType = 0x726F6F74,kChewableItemsFolderType = 0x666C6E74,kApplicationSupportFolderType = 0x61737570,kTextEncodingsFolderType = 0xC4746578,kStationeryFolderType = 0x6F647374,kOpenDocFolderType = 0x6F646F64,kOpenDocShellPlugInsFolderType = 0x6F647370,kEditorsFolderType = 0x6F646564,kOpenDocEditorsFolderType = 0xC46F6466,kOpenDocLibrariesFolderType = 0x6F646C62,kGenEditorsFolderType = 0xC4656469,kHelpFolderType = 0xC4686C70,kInternetPlugInFolderType = 0xC46E6574,kModemScriptsFolderType = 0xC46D6F64,kPrinterDescriptionFolderType = 0x70706466,kPrinterDriverFolderType = 0xC4707264,kScriptingAdditionsFolderType = 0xC4736372,kSharedLibrariesFolderType = 0xC46C6962,kVoicesFolderType = 0x66766F63,kControlStripModulesFolderType = 0x73646576,kAssistantsFolderType = 0x617374C4,kUtilitiesFolderType = 0x757469C4,kAppleExtrasFolderType = 0x616578C4,kContextualMenuItemsFolderType = 0x636D6E75,kMacOSReadMesFolderType = 0x6D6F72C4,kALMModulesFolderType = 0x77616C6B,kALMPreferencesFolderType = 0x74726970,kALMLocationsFolderType = 0x66616C6C,kColorSyncProfilesFolderType = 0x70726F66,kThemesFolderType = 0x74686D65,kFavoritesFolderType = 0x66617673,kInternetFolderType = 0x696E74C4,kAppearanceFolderType = 0x61707072,kSoundSetsFolderType = 0x736E6473,kDesktopPicturesFolderType = 0x647470C4,kInternetSearchSitesFolderType = 0x69737366,kFindSupportFolderType = 0x666E6473,kFindByContentFolderType = 0x66626366,kInstallerLogsFolderType = 0x696C6766,kScriptsFolderType = 0x736372C4,kFolderActionsFolderType = 0x66617366,kLauncherItemsFolderType = 0x6C61756E,kRecentApplicationsFolderType = 0x72617070,kRecentDocumentsFolderType = 0x72646F63,kRecentServersFolderType = 0x72737672,kSpeakableItemsFolderType = 0x73706B69,kKeychainFolderType = 0x6B63686E,kQuickTimeExtensionsFolderType = 0x71746578,kDisplayExtensionsFolderType = 0x6473706C,kMultiprocessingFolderType = 0x6D707866,kPrintingPlugInsFolderType = 0x70706C67,};
enum $61AB2AC05021A1B3757DF2A6CC4D0440 {kPMBorderSingleHairline = 0x1,kPMBorderDoubleHairline = 0x2,kPMBorderSingleThickline = 0x3,kPMBorderDoubleThickline = 0x4,};
enum $61AC551B776D003E6A3EA7DE4C146938 {gestaltKeyboardType = 0x6B626420,gestaltMacKbd = 0x1,gestaltMacAndPad = 0x2,gestaltMacPlusKbd = 0x3,gestaltExtADBKbd = 0x4,gestaltStdADBKbd = 0x5,gestaltPrtblADBKbd = 0x6,gestaltPrtblISOKbd = 0x7,gestaltStdISOADBKbd = 0x8,gestaltExtISOADBKbd = 0x9,gestaltADBKbdII = 0xA,gestaltADBISOKbdII = 0xB,gestaltPwrBookADBKbd = 0xC,gestaltPwrBookISOADBKbd = 0xD,gestaltAppleAdjustKeypad = 0xE,gestaltAppleAdjustADBKbd = 0xF,gestaltAppleAdjustISOKbd = 0x10,gestaltJapanAdjustADBKbd = 0x11,gestaltPwrBkExtISOKbd = 0x14,gestaltPwrBkExtJISKbd = 0x15,gestaltPwrBkExtADBKbd = 0x18,gestaltPS2Keyboard = 0x1B,gestaltPwrBkSubDomKbd = 0x1C,gestaltPwrBkSubISOKbd = 0x1D,gestaltPwrBkSubJISKbd = 0x1E,gestaltPwrBkEKDomKbd = 0xC3,gestaltPwrBkEKISOKbd = 0xC4,gestaltPwrBkEKJISKbd = 0xC5,gestaltUSBCosmoANSIKbd = 0xC6,gestaltUSBCosmoISOKbd = 0xC7,gestaltUSBCosmoJISKbd = 0xC8,gestaltPwrBk99JISKbd = 0xC9,gestaltUSBAndyANSIKbd = 0xCC,gestaltUSBAndyISOKbd = 0xCD,gestaltUSBAndyJISKbd = 0xCE,};
enum $61CA1453517DE4AADA13867E4C53BE4C {iuSystemScript = 0xFFFFFFFF,iuCurrentScript = 0xFFFFFFFE,};
enum $61EA92AFF5BB534B32B0D73E96A976AE {kHandleIsResourceMask = 0x20,kHandlePurgeableMask = 0x40,kHandleLockedMask = 0x80,};
enum $61FB212774D778BFFB784AF83BE32359 {AF_DNS = 0x2A,};
enum $621775189DBE97248B7FB782F8F10678 {paramErr = 0xFFFFFFCE,noHardwareErr = 0xFFFFFF38,notEnoughHardwareErr = 0xFFFFFF37,userCanceledErr = 0xFFFFFF80,qErr = 0xFFFFFFFF,vTypErr = 0xFFFFFFFE,corErr = 0xFFFFFFFD,unimpErr = 0xFFFFFFFC,SlpTypeErr = 0xFFFFFFFB,seNoDB = 0xFFFFFFF8,controlErr = 0xFFFFFFEF,statusErr = 0xFFFFFFEE,readErr = 0xFFFFFFED,writErr = 0xFFFFFFEC,badUnitErr = 0xFFFFFFEB,unitEmptyErr = 0xFFFFFFEA,openErr = 0xFFFFFFE9,closErr = 0xFFFFFFE8,dRemovErr = 0xFFFFFFE7,dInstErr = 0xFFFFFFE6,};
enum $622A2FC26D2D795B6F4576A21E651181 {kUnicodeFallbackSequencingBits = 0x0,};
enum $623B9655B59700781BABFF0C16AAACA2 {MORECTL = 0x1,MOREDATA = 0x2,};
enum $625A92765BF1C9729B70E81383B56753 {gestaltDesktopPicturesAttr = 0x646B7078,gestaltDesktopPicturesInstalled = 0x0,gestaltDesktopPicturesDisplayed = 0x1,};
enum $625FFD2690C28CD77AD226DF5BC4FF71 {kControlBevelButtonScaleIconTag = 0x7363616C,};
enum $62627BB3DAC5CE27402315E5E0D76925 {kHMNoContent = 0x6E6F6E65,kHMCFStringContent = 0x63667374,kHMCFStringLocalizedContent = 0x6366736C,kHMPascalStrContent = 0x70737472,kHMStringResContent = 0x73747223,kHMTEHandleContent = 0x74787468,kHMTextResContent = 0x74657874,kHMStrResContent = 0x73747220,};
enum $626F30637178466328D1E07D843DC68F {kNavTranslateInPlace = 0x0,kNavTranslateCopy = 0x1,};
enum $6272D81C4918127572EE4E585B7F7799 {kCertificateKCItemClass = 0x63657274,kAppleSharePasswordKCItemClass = 0x61736870,kInternetPasswordKCItemClass = 0x696E6574,kGenericPasswordKCItemClass = 0x67656E70,};
enum $62AF96A599EA1D1B2CD83BD481E510DC {memROZWarn = 0xFFFFFF9D,memROZError = 0xFFFFFF9D,memROZErr = 0xFFFFFF9D,memFullErr = 0xFFFFFF94,nilHandleErr = 0xFFFFFF93,memWZErr = 0xFFFFFF91,memPurErr = 0xFFFFFF90,memAdrErr = 0xFFFFFF92,memAZErr = 0xFFFFFF8F,memPCErr = 0xFFFFFF8E,memBCErr = 0xFFFFFF8D,memSCErr = 0xFFFFFF8C,memLockedErr = 0xFFFFFF8B,};
enum $62B1763F2865C6BE32843FE03E3791DB {errFinderIsBusy = 0xFFFFC464,errFinderWindowNotOpen = 0xFFFFC463,errFinderCannotPutAway = 0xFFFFC462,errFinderWindowMustBeIconView = 0xFFFFC461,errFinderWindowMustBeListView = 0xFFFFC460,errFinderCantMoveToDestination = 0xFFFFC45F,errFinderCantMoveSource = 0xFFFFC45E,errFinderCantOverwrite = 0xFFFFC45D,errFinderIncestuousMove = 0xFFFFC45C,errFinderCantMoveToAncestor = 0xFFFFC45B,errFinderCantUseTrashedItems = 0xFFFFC45A,errFinderItemAlreadyInDest = 0xFFFFC459,errFinderUnknownUser = 0xFFFFC458,errFinderSharePointsCantInherit = 0xFFFFC457,errFinderWindowWrongType = 0xFFFFC456,errFinderPropertyNowWindowBased = 0xFFFFC455,errFinderAppFolderProtected = 0xFFFFC454,errFinderSysFolderProtected = 0xFFFFC453,errFinderBoundsWrong = 0xFFFFC452,errAEValueOutOfRange = 0xFFFFC451,errFinderPropertyDoesNotApply = 0xFFFFC450,errFinderFileSharingMustBeOn = 0xFFFFC44F,errFinderMustBeActive = 0xFFFFC44E,errFinderVolumeNotFound = 0xFFFFC44D,errFinderLockedItemsInTrash = 0xFFFFC44C,errFinderOnlyLockedItemsInTrash = 0xFFFFC44B,errFinderProgramLinkingMustBeOn = 0xFFFFC44A,errFinderWindowMustBeButtonView = 0xFFFFC449,errFinderBadPackageContents = 0xFFFFC448,errFinderUnsupportedInsidePackages = 0xFFFFC447,errFinderCorruptOpenFolderList = 0xFFFFC446,errFinderNoInvisibleFiles = 0xFFFFC445,errFinderCantDeleteImmediately = 0xFFFFC444,errFinderLastReserved = 0xFFFFC3ED,};
enum $62E8311DB2A8435BC0C58DA72A78E09B {vendorUnique = 0xC0,};
enum $62FB1450663E54E00B4287F942880E62 {fontPanelShowErr = 0xFFFFDD50,fontPanelSelectionStyleErr = 0xFFFFDD4F,fontPanelFontSelectionQDStyleVersionErr = 0xFFFFDD4E,};
enum $62FCE714623391C3F3014841CB02C65B {kSRDefaultRejectionLevel = 0x32,};
enum $6325D61AD64522A99EDB6BBFCD09317C {descriptorFontTableTag = 0x66647363,};
enum $633A55105AF52592BCFB52C042759D6B {kASDefaultMinStackSize = 0x1000,kASDefaultPreferredStackSize = 0x4000,kASDefaultMaxStackSize = 0x4000,kASDefaultMinHeapSize = 0x1000,kASDefaultPreferredHeapSize = 0x4000,kASDefaultMaxHeapSize = 0x2000000,};
enum $63BAFD2A4E91C34DC1241D7E5C83233F {gestaltComponentMgr = 0x63706E74,gestaltComponentPlatform = 0x636F706C,};
enum $63EE4B871C60ECD68861B7BBEC76E91F {T_NEGOTIATE = 0x4,T_CHECK = 0x8,T_DEFAULT = 0x10,T_CURRENT = 0x80,};
enum $63F63E8FC76EE3F31792492E6B52F745 {kVolumeVirtualMemoryInfoVersion1 = 0x1,};
enum $6407CCE729840C404FE10EAF153BFCF9 {kHIToolbarDisplayModeDefault = 0x0,kHIToolbarDisplayModeIconAndLabel = 0x1,kHIToolbarDisplayModeIconOnly = 0x2,kHIToolbarDisplayModeLabelOnly = 0x3,};
enum $641ED87CCC4D6A5D6C8D4C3D6AF6C18C {cmScannerDeviceClass = 0x73636E72,cmCameraDeviceClass = 0x636D7261,cmDisplayDeviceClass = 0x6D6E7472,cmPrinterDeviceClass = 0x70727472,cmProofDeviceClass = 0x70727566,};
enum $643200B311F6AFFAE2694CDA18CB8ED2 {k8022BasicAddressLength = 0xA,k8022SNAPAddressLength = 0xF,};
enum $6435E6F5806752CCC7A28897D475E26C {gestaltDiskCacheSize = 0x6463737A,};
enum $64467868E4CA29D8A71BB59B7CFCAA59 : unsigned __int32 {kDragActionNothing = 0x0,kDragActionCopy = 0x1,kDragActionAlias = 0x2,kDragActionGeneric = 0x4,kDragActionPrivate = 0x8,kDragActionMove = 0x10,kDragActionDelete = 0x20,kDragActionAll = 0xFFFFFFFF,};
enum $6460A2EBADE2C0226985DD3467C57546 {kNSLMinSystemVersion = 0x900,kNSLMinOTVersion = 0x130,};
enum $646C6B955ABA286F846BF22A54160718 {kDragTrackingEnterControl = 0x2,kDragTrackingInControl = 0x3,kDragTrackingLeaveControl = 0x4,};
enum $6470E26E5846E576E7A0D1F542DED781 {kX86ISA = 0x2,};
enum $6487404EE3EFAE8B28531347FD5AE880 : unsigned __int32 {cmICCReservedFlagsMask = 0xFFFF,cmEmbeddedMask = 0x1,cmEmbeddedUseMask = 0x2,cmCMSReservedFlagsMask = 0xFFFF0000,cmQualityMask = 0x30000,cmInterpolationMask = 0x40000,cmGamutCheckingMask = 0x80000,};
enum $64899EFE6E8E2F43B289EE24CE3EDF69 {gestaltNuBusSlotCount = 0x6E756273,};
enum $64B0C79273F8AD0DB83F3607FB595699 {gestaltQTVRMgrVers = 0x71747676,};
enum $64D53222CC663C9A05C6D6F72FDB9AA5 {kMouseTrackingOptionsLocalClip = 0x0,kMouseTrackingOptionsGlobalClip = 0x1,kMouseTrackingOptionsStandard = 0x0,};
enum $6527073B2FC5BCF9E69491BE50F5FD3B {fsSBPartialNameBit = 0x0,fsSBFullNameBit = 0x1,fsSBFlAttribBit = 0x2,fsSBFlFndrInfoBit = 0x3,fsSBFlLgLenBit = 0x5,fsSBFlPyLenBit = 0x6,fsSBFlRLgLenBit = 0x7,fsSBFlRPyLenBit = 0x8,fsSBFlCrDatBit = 0x9,fsSBFlMdDatBit = 0xA,fsSBFlBkDatBit = 0xB,fsSBFlXFndrInfoBit = 0xC,fsSBFlParIDBit = 0xD,fsSBNegateBit = 0xE,fsSBDrUsrWdsBit = 0x3,fsSBDrNmFlsBit = 0x4,fsSBDrCrDatBit = 0x9,fsSBDrMdDatBit = 0xA,fsSBDrBkDatBit = 0xB,fsSBDrFndrInfoBit = 0xC,fsSBDrParIDBit = 0xD,};
enum $65285F62815E098F5A93B2954E7FA227 {kDragPseudoCreatorVolumeOrDirectory = 0x4D414353,kDragPseudoFileTypeVolume = 0x6469736B,kDragPseudoFileTypeDirectory = 0x666F6C64,};
enum $65343E7BE8168EBA7094311ED241AFA5 {kTXNWantMoviesMask = 0x1,kTXNWantSoundMask = 0x2,kTXNWantGraphicsMask = 0x4,kTXNAlwaysUseQuickDrawTextMask = 0x8,kTXNUseTemporaryMemoryMask = 0x10,};
enum $653F24D007B10175E4A82868F555F443 {gestaltGXVersion = 0x71646778,};
enum $655446770F0A5982A09EE9E18935E091 : unsigned __int32 {kSelectorLarge1Bit = 0x1,kSelectorLarge4Bit = 0x2,kSelectorLarge8Bit = 0x4,kSelectorLarge32Bit = 0x8,kSelectorLarge8BitMask = 0x10,kSelectorSmall1Bit = 0x100,kSelectorSmall4Bit = 0x200,kSelectorSmall8Bit = 0x400,kSelectorSmall32Bit = 0x800,kSelectorSmall8BitMask = 0x1000,kSelectorMini1Bit = 0x10000,kSelectorMini4Bit = 0x20000,kSelectorMini8Bit = 0x40000,kSelectorHuge1Bit = 0x1000000,kSelectorHuge4Bit = 0x2000000,kSelectorHuge8Bit = 0x4000000,kSelectorHuge32Bit = 0x8000000,kSelectorHuge8BitMask = 0x10000000,kSelectorAllLargeData = 0xFF,kSelectorAllSmallData = 0xFF00,kSelectorAllMiniData = 0xFF0000,kSelectorAllHugeData = 0xFF000000,kSelectorAll1BitData = 0x1010101,kSelectorAll4BitData = 0x2020202,kSelectorAll8BitData = 0x4040404,kSelectorAll32BitData = 0x8000808,kSelectorAllAvailableData = 0xFFFFFFFF,};
enum $65711321B8F395BEB12A6BE203B268B3 {cmapFontTableTag = 0x636D6170,};
enum $65A4E643D8AFCFAC94B280C63A54187E {cfragFirstReservedCode = 0xFFFFF4AF,cfragReservedCode_3 = 0xFFFFF4AF,cfragReservedCode_2 = 0xFFFFF4AE,cfragReservedCode_1 = 0xFFFFF4AD,};
enum $65BF52D48FE741677D607667E176A9EF {launchContinue = 0x4000,launchNoFileFlags = 0x800,launchUseMinimum = 0x400,launchDontSwitch = 0x200,launchAllow24Bit = 0x100,launchInhibitDaemon = 0x80,};
enum $65C1544CA1F4FC18AD9FCCF27F8D0FC5 {kOSANoDispatch = 0x0,};
enum $65C805F25D863A90F2F9C5C002B33087 {NoneType = 0x4E4F4E45,ACE2Type = 0x41434532,ACE8Type = 0x41434538,MACE3Type = 0x4D414333,MACE6Type = 0x4D414336,};
enum $65E129139CA9411A767B21CB6C41C1E6 {kAXErrorSuccess = 0x0,kAXErrorFailure = 0xFFFF9D90,kAXErrorIllegalArgument = 0xFFFF9D8F,kAXErrorInvalidUIElement = 0xFFFF9D8E,kAXErrorInvalidUIElementObserver = 0xFFFF9D8D,kAXErrorCannotComplete = 0xFFFF9D8C,kAXErrorAttributeUnsupported = 0xFFFF9D8B,kAXErrorActionUnsupported = 0xFFFF9D8A,kAXErrorNotificationUnsupported = 0xFFFF9D89,kAXErrorNotImplemented = 0xFFFF9D88,kAXErrorNotificationAlreadyRegistered = 0xFFFF9D87,kAXErrorNotificationNotRegistered = 0xFFFF9D86,kAXErrorAPIDisabled = 0xFFFF9D85,kAXErrorNoValue = 0xFFFF9D84,};
enum $65FF27308BEBB2E83C35FC5B5D224F9F {cString = 0x54455854,};
enum $661EE15A02C8CBEFD46092C92494158F {kAppleshareAutomountServerAliasesFolderType = 0x737276C4,kPreMacOS91ApplicationsFolderType = 0x8C707073,kPreMacOS91InstallerLogsFolderType = 0x946C6766,kPreMacOS91AssistantsFolderType = 0x8C7374C4,kPreMacOS91UtilitiesFolderType = 0x9F7469C4,kPreMacOS91AppleExtrasFolderType = 0x8C6578C4,kPreMacOS91MacOSReadMesFolderType = 0xB56F72C4,kPreMacOS91InternetFolderType = 0x946E74C4,kPreMacOS91AutomountedServersFolderType = 0xA77276C4,kPreMacOS91StationeryFolderType = 0xBF647374,};
enum $6645BADA46583C088E11FA5D6489D8C8 {gestaltCompressionMgr = 0x69636D70,};
enum $66515207F0D737806D7F37B84E062AAB {kDesktopIconResource = 0xFFFFF068,kOpenFolderIconResource = 0xFFFFF063,kGenericHardDiskIconResource = 0xFFFFF065,kGenericFileServerIconResource = 0xFFFFF07C,kGenericSuitcaseIconResource = 0xFFFFF07E,kGenericMoverObjectIconResource = 0xFFFFF07F,};
enum $6690C5A38BCBF3C8B1B2DBCC8D1D6A01 {kATSIterationCompleted = 0xFFFFFC2C,kATSInvalidFontFamilyAccess = 0xFFFFFC2B,kATSInvalidFontAccess = 0xFFFFFC2A,kATSIterationScopeModified = 0xFFFFFC29,kATSInvalidFontTableAccess = 0xFFFFFC28,kATSInvalidFontContainerAccess = 0xFFFFFC27,};
enum $66A53D26140882007EBC959392923366 {kCFCompareCaseInsensitive = 0x1,kCFCompareBackwards = 0x4,kCFCompareAnchored = 0x8,kCFCompareNonliteral = 0x10,kCFCompareLocalized = 0x20,kCFCompareNumerically = 0x40,};
enum $6709780A9A108E3FB6C67F5A0F4FCC0B {kPlatformDefaultGuiFontID = 0x1,};
enum $673220B32B406F0A3D4A8C22713F8BDC {kControlBevelButtonSmallBevel = 0x0,kControlBevelButtonNormalBevel = 0x1,kControlBevelButtonLargeBevel = 0x2,};
enum $6774B622D0AF93246EAABD7C3CA4BA25 {kHDQueuePostBit = 0x0,kHDQueuePostMask = 0x1,};
enum $6779799A31BDCCE02DD843853CB38533 {kNewSuspend = 0x1,kUsePremadeThread = 0x2,kCreateIfNeeded = 0x4,kFPUNotNeeded = 0x8,kExactMatchThread = 0x10,};
enum $679D6DF2EE456031915C2D7CDB26B523 {kTimingChangeRestrictedErr = 0xFFFFD54E,kVideoI2CReplyPendingErr = 0xFFFFD54D,kVideoI2CTransactionErr = 0xFFFFD54C,kVideoI2CBusyErr = 0xFFFFD54B,kVideoI2CTransactionTypeErr = 0xFFFFD54A,kVideoBufferSizeErr = 0xFFFFD549,};
enum $67A30B646349D7F6AF8B001F9CA432FD {kMacArabicStandardVariant = 0x0,kMacArabicTrueTypeVariant = 0x1,kMacArabicThuluthVariant = 0x2,kMacArabicAlBayanVariant = 0x3,};
enum $67C416E26EEE13F3D7C2627C9615BC9D {FE_TONEAREST = 0x0,FE_TOWARDZERO = 0x1,FE_UPWARD = 0x2,FE_DOWNWARD = 0x3,};
enum $67DBE5411CEBB7680F2ECFCDD5791791 {kEventParamDirectObject = 0x2D2D2D2D,};
enum $680711FA196A27FB133C002D33527151 {kUnicodeDefaultDirectionMask = 0x0,kUnicodeLeftToRightMask = 0x4,kUnicodeRightToLeftMask = 0x8,};
enum $681C0B2CB864701D4D2C7DE0BA4B2826 {gestaltCPUApollo = 0x111,gestaltCPU750FX = 0x120,};
enum $684092AFDB9764EBADD93A3116DB7884 {kHIToolbarItemNoAttributes = 0x0,kHIToolbarItemAllowDuplicates = 0x1,kHIToolbarItemCantBeRemoved = 0x2,kHIToolbarItemAnchoredLeft = 0x4,kHIToolbarItemIsSeparator = 0x8,kHIToolbarItemSendCmdToUserFocus = 0x10,kHIToolbarItemValidAttrs = 0x1F,kHIToolbarItemMutableAttrs = 0x6,};
enum $685DD54D7AFDD53802A475B416D12021 {kDataBrowserListViewMovableColumn = 0x20000,kDataBrowserListViewSortableColumn = 0x40000,kDataBrowserListViewSelectionColumn = 0x10000,kDataBrowserListViewDefaultColumnFlags = 0x60000,};
enum $689CEDFEE0CE2B8E5012D8B3D22FE2CF {I_NREAD = 0x4101,I_PUSH = 0x4102,I_POP = 0x4103,I_LOOK = 0x4104,I_FLUSH = 0x4105,I_SRDOPT = 0x4106,I_GRDOPT = 0x4107,I_STR = 0x4108,I_SETSIG = 0x4109,I_GETSIG = 0x410A,I_FIND = 0x410B,I_LINK = 0x410C,I_UNLINK = 0x410D,I_PEEK = 0x410F,I_FDINSERT = 0x4110,I_SENDFD = 0x4111,I_RECVFD = 0x4112,I_FLUSHBAND = 0x4113,I_SWROPT = 0x4114,I_GWROPT = 0x4115,I_LIST = 0x4116,I_ATMARK = 0x4117,I_CKBAND = 0x4118,I_GETBAND = 0x4119,I_CANPUT = 0x411A,I_SETCLTIME = 0x411B,I_GETCLTIME = 0x411C,I_PLINK = 0x411D,I_PUNLINK = 0x411E,I_GETMSG = 0x4128,I_PUTMSG = 0x4129,I_POLL = 0x412A,I_SETDELAY = 0x412B,I_GETDELAY = 0x412C,I_RUN_QUEUES = 0x412D,I_GETPMSG = 0x412E,I_PUTPMSG = 0x412F,I_AUTOPUSH = 0x4130,I_PIPE = 0x4131,I_HEAP_REPORT = 0x4132,I_FIFO = 0x4133,};
enum $68A481D5359342D14A31108F1A836A6F {fPositive = 0x0,fNegative = 0x1,fZero = 0x2,};
enum $68A8C66273EA3E59BC2134E876BEC9CC {kATSFontFormatUnspecified = 0x0,};
enum $68BF6022C044A554C82A650922375E31 {kDDPAddressLength = 0x8,kNBPAddressLength = 0x69,kAppleTalkAddressLength = 0x71,};
enum $68C2CB5636F1B33616F51F3605B640B4 {errOffsetInvalid = 0xFFFFF8F8,errOffsetIsOutsideOfView = 0xFFFFF8F7,errTopOfDocument = 0xFFFFF8EE,errTopOfBody = 0xFFFFF8ED,errEndOfDocument = 0xFFFFF8EC,errEndOfBody = 0xFFFFF8EB,};
enum $68CF2A8B43ADB4A85AC1F1543CFCA05B {sizeof_sfntDirectory = 0xC,};
enum $69242586042099447317D5F9AE97B47D {kBestQuality = 0x1,};
enum $692A988CB92B521BF0B2FBC160831A0D {kFSAliasInfoNone = 0x0,kFSAliasInfoVolumeCreateDate = 0x1,kFSAliasInfoTargetCreateDate = 0x2,kFSAliasInfoFinderInfo = 0x4,kFSAliasInfoIsDirectory = 0x8,kFSAliasInfoIDs = 0x10,kFSAliasInfoFSInfo = 0x20,kFSAliasInfoVolumeFlags = 0x40,};
enum $692E22D724EF9B6C4AC501DA1C5BD874 {kHMHelpID = 0xFFFFE9C0,kBalloonWDEFID = 0x7E,};
enum $692EF05CA8CD20D6E40A5A70B9F842CC {kControlBevelButtonMenuOnBottom = 0x0,kControlBevelButtonMenuOnRight = 0x4,};
enum $69521A467F76B425270CDAAC5D4FB8DC {typeIconFamily = 0x6966616D,typeIconAndMask = 0x49434E23,type8BitMask = 0x6C386D6B,type32BitIcon = 0x696C3332,type8BitIcon = 0x69636C38,type4BitIcon = 0x69636C34,typeSmallIconAndMask = 0x69637323,typeSmall8BitMask = 0x73386D6B,typeSmall32BitIcon = 0x69733332,typeSmall8BitIcon = 0x69637338,typeSmall4BitIcon = 0x69637334,typeRelativeTime = 0x7274696D,typeConceptualTime = 0x74696D63,};
enum $6952EC5BC368DB036D5D30E34FBBAB31 {kOSASupportsCompiling = 0x2,kOSASupportsGetSource = 0x4,kOSASupportsAECoercion = 0x8,kOSASupportsAESending = 0x10,kOSASupportsRecording = 0x20,kOSASupportsConvenience = 0x40,kOSASupportsDialects = 0x80,kOSASupportsEventHandling = 0x100,};
enum $695B2A0CBCE6688875F4EE9D43AF2E19 {kICAMessageCameraCaptureNewImage = 0x63636E69,kICAMessageCameraDeleteOne = 0x64656C31,kICAMessageCameraDeleteAll = 0x64656C61,kICAMessageCameraSyncClock = 0x73636C6B,kICAMessageCameraUploadData = 0x6C6F6164,};
enum $695C02ED6007F4B6DBB29555C47D7125 {gestaltQuadra605 = 0x5E,gestaltQuadra610 = 0x35,gestaltQuadra630 = 0x62,gestaltQuadra650 = 0x24,gestaltQuadra660AV = 0x3C,gestaltQuadra700 = 0x16,gestaltQuadra800 = 0x23,gestaltQuadra840AV = 0x4E,gestaltQuadra900 = 0x14,gestaltQuadra950 = 0x1A,};
enum $6964838E798607C0EDA840D77B701D15 {kAESpeechSuite = 0x73707263,};
enum $697CF46D174304B7DC4FBD999B39DD8A {kIOStateDone = 0x1,};
enum $698E987031BBDED5F385A991E8274B7E {DVMRP_INIT = 0x64,DVMRP_DONE = 0x65,DVMRP_ADD_VIF = 0x66,DVMRP_DEL_VIF = 0x67,DVMRP_ADD_LGRP = 0x68,DVMRP_DEL_LGRP = 0x69,DVMRP_ADD_MRT = 0x6A,DVMRP_DEL_MRT = 0x6B,};
enum $69A3BF2E803A4172C51973E11B183607 {eraMask = 0x1,yearMask = 0x2,monthMask = 0x4,dayMask = 0x8,hourMask = 0x10,minuteMask = 0x20,secondMask = 0x40,dayOfWeekMask = 0x80,dayOfYearMask = 0x100,weekOfYearMask = 0x200,pmMask = 0x400,dateStdMask = 0x7F,};
enum $69A5C7726B0EC32DA3F03241D36E48C8 {kEventTextInputUpdateActiveInputArea = 0x1,kEventTextInputUnicodeForKeyEvent = 0x2,kEventTextInputOffsetToPos = 0x3,kEventTextInputPosToOffset = 0x4,kEventTextInputShowHideBottomWindow = 0x5,kEventTextInputGetSelectedText = 0x6,kEventTextInputUnicodeText = 0x7,};
enum $69AC827A883561A4494FC46B11603DDB {kAnalogSignalLevel_0700_0300 = 0x0,kAnalogSignalLevel_0714_0286 = 0x1,kAnalogSignalLevel_1000_0400 = 0x2,kAnalogSignalLevel_0700_0000 = 0x3,};
enum $69B72E9C37C0D09B287064DE0C3BE45E {resSysRefBit = 0x7,resSysHeapBit = 0x6,resPurgeableBit = 0x5,resLockedBit = 0x4,resProtectedBit = 0x3,resPreloadBit = 0x2,resChangedBit = 0x1,mapReadOnlyBit = 0x7,mapCompactBit = 0x6,mapChangedBit = 0x5,};
enum $69D0409C2CBABAF8BCB4C6A59F9D93BD {kControlBevelButtonLastMenuTag = 0x6C6D6E75,kControlBevelButtonMenuDelayTag = 0x6D646C79,};
enum $69FAC9D66AAC9E0D33F55A00E8EC7EF3 {itlcDisableKeyScriptSyncMask = 0x8,};
enum $6A17DABD73E2AE9056ED74CF3A61AAD5 {langOriya = 0x47,langMalayalam = 0x48,langKannada = 0x49,langTamil = 0x4A,langTelugu = 0x4B,langSinhalese = 0x4C,langBurmese = 0x4D,langKhmer = 0x4E,langLao = 0x4F,langVietnamese = 0x50,langIndonesian = 0x51,langTagalog = 0x52,langMalayRoman = 0x53,langMalayArabic = 0x54,langAmharic = 0x55,langTigrinya = 0x56,langOromo = 0x57,langSomali = 0x58,langSwahili = 0x59,langKinyarwanda = 0x5A,langRuanda = 0x5A,langRundi = 0x5B,langNyanja = 0x5C,langChewa = 0x5C,langMalagasy = 0x5D,langEsperanto = 0x5E,};
enum $6A19E47AB2821AEC874AE98EFC97CC40 {tokenLeftCurly = 0x14,tokenRightCurly = 0x15,tokenLeftEnclose = 0x16,tokenRightEnclose = 0x17,tokenPlus = 0x18,tokenMinus = 0x19,tokenAsterisk = 0x1A,tokenDivide = 0x1B,tokenPlusMinus = 0x1C,tokenSlash = 0x1D,tokenBackSlash = 0x1E,tokenLess = 0x1F,tokenGreat = 0x20,tokenEqual = 0x21,tokenLessEqual2 = 0x22,tokenLessEqual1 = 0x23,tokenGreatEqual2 = 0x24,tokenGreatEqual1 = 0x25,token2Equal = 0x26,tokenColonEqual = 0x27,};
enum $6A3D362AE979A847958F56E617827AD1 {wrongApplicationPlatform = 0xFFFFFC95,appVersionTooOld = 0xFFFFFC94,notAppropriateForClassic = 0xFFFFFC93,};
enum $6A4954A1BE5ADC8049158B5469B507DA {gestaltSystemVersion = 0x73797376,};
enum $6A74AC2A147D6C4233831D43DB190A40 : unsigned __int32 {kMouseUpOutOfSlop = 0x80008000,};
enum $6A7C4B89B962AA65F49016E307E60447 {kAllTypeFeaturesOnSelector = 0x0,kAllTypeFeaturesOffSelector = 0x1,};
enum $6AD54FC033639F8C0F13DE021B9A7A6F {kEventControlInitialize = 0x3E8,kEventControlDispose = 0x3E9,kEventControlGetOptimalBounds = 0x3EB,kEventControlDefInitialize = 0x3E8,kEventControlDefDispose = 0x3E9,kEventControlHit = 0x1,kEventControlSimulateHit = 0x2,kEventControlHitTest = 0x3,kEventControlDraw = 0x4,kEventControlApplyBackground = 0x5,kEventControlApplyTextColor = 0x6,kEventControlSetFocusPart = 0x7,kEventControlGetFocusPart = 0x8,kEventControlActivate = 0x9,kEventControlDeactivate = 0xA,kEventControlSetCursor = 0xB,kEventControlContextualMenuClick = 0xC,kEventControlClick = 0xD,kEventControlGetNextFocusCandidate = 0xE,kEventControlGetAutoToggleValue = 0xF,kEventControlInterceptSubviewClick = 0x10,kEventControlGetClickActivation = 0x11,kEventControlDragEnter = 0x12,kEventControlDragWithin = 0x13,kEventControlDragLeave = 0x14,kEventControlDragReceive = 0x15,kEventControlTrack = 0x33,kEventControlGetScrollToHereStartPoint = 0x34,kEventControlGetIndicatorDragConstraint = 0x35,kEventControlIndicatorMoved = 0x36,kEventControlGhostingFinished = 0x37,kEventControlGetActionProcPart = 0x38,kEventControlGetPartRegion = 0x65,kEventControlGetPartBounds = 0x66,kEventControlSetData = 0x67,kEventControlGetData = 0x68,kEventControlGetSizeConstraints = 0x69,kEventControlValueFieldChanged = 0x97,kEventControlAddedSubControl = 0x98,kEventControlRemovingSubControl = 0x99,kEventControlBoundsChanged = 0x9A,kEventControlTitleChanged = 0x9E,kEventControlOwningWindowChanged = 0x9F,kEventControlHiliteChanged = 0xA0,kEventControlEnabledStateChanged = 0xA1,kEventControlArbitraryMessage = 0xC9,};
enum $6AFAE475820C24F181AED14A4625BE64 {ddpSktErr = 0xFFFFFFA5,ddpLenErr = 0xFFFFFFA4,noBridgeErr = 0xFFFFFFA3,lapProtErr = 0xFFFFFFA2,excessCollsns = 0xFFFFFFA1,portNotPwr = 0xFFFFFFA0,portInUse = 0xFFFFFF9F,portNotCf = 0xFFFFFF9E,};
enum $6B2FF56776789F7E8624C5F992925097 {gestaltStandardFileAttr = 0x73746466,gestaltStandardFile58 = 0x0,gestaltStandardFileTranslationAware = 0x1,gestaltStandardFileHasColorIcons = 0x2,gestaltStandardFileUseGenericIcons = 0x3,gestaltStandardFileHasDynamicVolumeAllocation = 0x4,};
enum $6B35D24B44D7890B9E9CA4C6440685EA {kControlEditTextCFStringTag = 0x63667374,kControlEditTextPasswordCFStringTag = 0x70776366,};
enum $6B48AC95129713EF0DD20DB41EA666C2 {kEventParamHIObjectInstance = 0x68696F69,typeHIObjectRef = 0x68696F62,};
struct $6BA994A3C40CEB8EB3C7E992F925E36D {SInt32 protocolFamily;SInt32 socketType;SInt32 protocol;CFDataRef address;};
enum $6BBF7C2D280978F663BDFB32A7C2B166 {kOSAErrorApp = 0x65726170,};
enum $6BC237FDE07B1BFC7DC2CCC36A99A63B {kSystemIconsCreator = 0x6D616373,};
enum $6BC4D5A370F805473F91F69C26443941 {gestaltSMPMailerVersion = 0x6D616C72,};
enum $6BDC65D0920A469384734B0C3C703D93 {kFontSelectionATSUIType = 0x6173746C,kFontSelectionQDType = 0x7173746C,};
enum $6BE12DC35D659BA31099DB54B871C3C4 {keyAESuiteID = 0x73756974,keyAEText = 0x6B747874,keyAETextColor = 0x70747863,keyAETextFont = 0x70747866,keyAETextPointSize = 0x70747073,keyAETextStyles = 0x74787374,keyAETextLineHeight = 0x6B746C68,keyAETextLineAscent = 0x6B746173,keyAETheText = 0x74687478,keyAETransferMode = 0x7070746D,keyAETranslation = 0x70747273,keyAETryAsStructGraf = 0x746F6F67,keyAEUniformStyles = 0x7573746C,keyAEUpdateOn = 0x70757064,keyAEUserTerm = 0x7574726D,keyAEWindow = 0x776E6477,keyAEWritingCode = 0x77726364,};
enum $6C0B6C2A1BC798C0618F0EB9EDD8B4E1 {kAFPTagTypeIP = 0x1,kAFPTagTypeIPPort = 0x2,kAFPTagTypeDDP = 0x3,kAFPTagTypeDNS = 0x4,};
enum $6C1AB020E0497AA6B9196D24AF50B1A5 {typeHIMenu = 0x6D6F626A,typeHIWindow = 0x776F626A,};
enum $6C2AFB039F310A1866F120B80E9E817C {iuSystemCurLang = 0xFFFFFFFE,iuSystemDefLang = 0xFFFFFFFD,iuCurrentCurLang = 0xFFFFFFFC,iuCurrentDefLang = 0xFFFFFFFB,iuScriptCurLang = 0xFFFFFFFA,iuScriptDefLang = 0xFFFFFFF9,};
enum $6C487229975B5749CBD06449A2E46080 {kRegMaxPropertyNameLength = 0x1F,};
enum $6C5A79F42EDD69BFB4ED4F28CD1828DD {kControlChasingArrowsProc = 0x70,};
enum $6CACACC7823B8B27C19318704F85B0AF {kInternetEventClass = 0x4755524C,kAEGetURL = 0x4755524C,kAEFetchURL = 0x4655524C,keyAEAttaching = 0x41746368,};
enum $6CB61DCA7E081BB09AA59DF59B160A01 {kCGFontIndexMax = 0xFFFE,kCGFontIndexInvalid = 0xFFFF,kCGGlyphMax = 0xFFFE,};
enum $6CC5363F1BB8E39591014EDE518FA77B {kUCCollateComposeInsensitiveMask = 0x2,kUCCollateWidthInsensitiveMask = 0x4,kUCCollateCaseInsensitiveMask = 0x8,kUCCollateDiacritInsensitiveMask = 0x10,kUCCollatePunctuationSignificantMask = 0x8000,kUCCollateDigitsOverrideMask = 0x10000,kUCCollateDigitsAsNumberMask = 0x20000,};
enum $6CCA4B57E9C87C1C3FE9832DE3278AA9 {kTXNDontDrawSelectionWhenInactive = 0x0,kTXNDrawSelectionWhenInactive = 0x1,};
enum $6D03E0D254C981FC0E976D6ABDBCB43D {kUnicodeFallbackDefaultOnly = 0x0,kUnicodeFallbackCustomOnly = 0x1,kUnicodeFallbackDefaultFirst = 0x2,kUnicodeFallbackCustomFirst = 0x3,};
enum $6D0E186233145241771508AFE8C2C7D5 {kIdleKCEvent = 0x0,kLockKCEvent = 0x1,kUnlockKCEvent = 0x2,kAddKCEvent = 0x3,kDeleteKCEvent = 0x4,kUpdateKCEvent = 0x5,kPasswordChangedKCEvent = 0x6,kSystemKCEvent = 0x8,kDefaultChangedKCEvent = 0x9,kDataAccessKCEvent = 0xA,kKeychainListChangedKCEvent = 0xB,};
enum $6D23F503DD0D1A39000F838441BA4416 {kBusTypeSCSI = 0x0,kBusTypeATA = 0x1,kBusTypePCMCIA = 0x2,kBusTypeMediaBay = 0x3,};
enum $6D28B462C09C501752E4C4FF7ED38830 {envCPUUnknown = 0x0,env68000 = 0x1,env68010 = 0x2,env68020 = 0x3,env68030 = 0x4,env68040 = 0x5,};
enum $6D2C7A5FE31392197FB79A2624E0D03A {numberFormattingNotANumberErr = 0xFFFFEBB0,numberFormattingOverflowInDestinationErr = 0xFFFFEBAF,numberFormattingBadNumberFormattingObjectErr = 0xFFFFEBAE,numberFormattingSpuriousCharErr = 0xFFFFEBAD,numberFormattingLiteralMissingErr = 0xFFFFEBAC,numberFormattingDelimiterMissingErr = 0xFFFFEBAB,numberFormattingEmptyFormatErr = 0xFFFFEBAA,numberFormattingBadFormatErr = 0xFFFFEBA9,numberFormattingBadOptionsErr = 0xFFFFEBA8,numberFormattingBadTokenErr = 0xFFFFEBA7,numberFormattingUnOrderedCurrencyRangeErr = 0xFFFFEBA6,numberFormattingBadCurrencyPositionErr = 0xFFFFEBA5,numberFormattingNotADigitErr = 0xFFFFEBA4,numberFormattingUnOrdredCurrencyRangeErr = 0xFFFFEBA6,numberFortmattingNotADigitErr = 0xFFFFEBA4,};
enum $6D31D2A0DAD3010F25406B835B73DF06 {kControlPopupArrowEastProc = 0xC0,kControlPopupArrowWestProc = 0xC1,kControlPopupArrowNorthProc = 0xC2,kControlPopupArrowSouthProc = 0xC3,kControlPopupArrowSmallEastProc = 0xC4,kControlPopupArrowSmallWestProc = 0xC5,kControlPopupArrowSmallNorthProc = 0xC6,kControlPopupArrowSmallSouthProc = 0xC7,};
enum $6D324C7D7A753D0D7A641D9C82F47D41 {resumeFlag = 0x1,};
enum $6D34F5F4B8D975C63270E1C248AF6853 {lOnlyOneBit = 0x7,lExtendDragBit = 0x6,lNoDisjointBit = 0x5,lNoExtendBit = 0x4,lNoRectBit = 0x3,lUseSenseBit = 0x2,lNoNilHiliteBit = 0x1,};
enum $6D50BC441DB9CEF01053298009CB274E {kDigiHubEventClass = 0x64687562,};
enum $6D5E702FDC11080DBA7E9DAA577B8FEE {gestaltOpenTptVersions = 0x6F747672,};
enum $6D648334E802817A93CD41CA53919B60 {kAppleTalkIcon = 0x61746C6B,kAppleTalkZoneIcon = 0x61747A6E,kAFPServerIcon = 0x61667073,kFTPServerIcon = 0x66747073,kHTTPServerIcon = 0x68747073,kGenericNetworkIcon = 0x676E6574,kIPFileServerIcon = 0x69737276,};
enum $6D9FD8B2BEC76B16F63C1EAB6C927E00 {LatestNR_PEFVersion = 0x1030000,};
enum $6DCB6EFD6E384A673675DFF760004FA6 {kCoreEventClass = 0x61657674,};
enum $6E2088F872BEE74DD7FCB1967619FCDE {gestaltATSUVersion = 0x75697376,gestaltOriginalATSUVersion = 0x10000,gestaltATSUUpdate1 = 0x20000,gestaltATSUUpdate2 = 0x30000,gestaltATSUUpdate3 = 0x40000,gestaltATSUUpdate4 = 0x50000,gestaltATSUUpdate5 = 0x60000,gestaltATSUUpdate6 = 0x70000,};
enum $6E24136140BD77919EE68EED8AB5C2B3 {eHRScrollbarOn = 0x0,eHRScrollbarOff = 0x1,eHRScrollbarAuto = 0x2,};
enum $6E476675947793D9A10C5086C379A863 {kICComponentVersion = 0x0,kICNumVersion = 0x1,};
enum $6E54D1147C1370CC117E7899140E4DED {kTextEncodingMacTradChinese = 0x2,kTextEncodingMacRSymbol = 0x8,kTextEncodingMacSimpChinese = 0x19,kTextEncodingMacGeez = 0x1C,kTextEncodingMacEastEurRoman = 0x1D,kTextEncodingMacUninterp = 0x20,};
enum $6E9815D99DC865AF741AB1A5A4872C50 {kMPIterationEndErr = 0xFFFF8DA5,kMPPrivilegedErr = 0xFFFF8DA4,kMPProcessCreatedErr = 0xFFFF8D98,kMPProcessTerminatedErr = 0xFFFF8D97,kMPTaskCreatedErr = 0xFFFF8D96,kMPTaskBlockedErr = 0xFFFF8D95,kMPTaskStoppedErr = 0xFFFF8D94,kMPBlueBlockingErr = 0xFFFF8D93,kMPDeletedErr = 0xFFFF8D91,kMPTimeoutErr = 0xFFFF8D90,kMPTaskAbortedErr = 0xFFFF8D8F,kMPInsufficientResourcesErr = 0xFFFF8D8E,kMPInvalidIDErr = 0xFFFF8D8D,};
enum $6EA2E4080572ACF28515A5F680662BB8 {kVariableLengthArray = 0x1,};
enum $6EC852A2D2600B803C8679AAFCB0BE5B : unsigned __int32 {scsiDirectionMask = 0xC0000000,scsiDirectionNone = 0xC0000000,scsiDirectionReserved = 0x0,scsiDirectionOut = 0x80000000,scsiDirectionIn = 0x40000000,scsiDisableAutosense = 0x20000000,scsiFlagReservedA = 0x10000000,scsiFlagReserved0 = 0x8000000,scsiCDBLinked = 0x4000000,scsiQEnable = 0x2000000,scsiCDBIsPointer = 0x1000000,scsiFlagReserved1 = 0x800000,scsiInitiateSyncData = 0x400000,scsiDisableSyncData = 0x200000,scsiSIMQHead = 0x100000,scsiSIMQFreeze = 0x80000,scsiSIMQNoFreeze = 0x40000,scsiDoDisconnect = 0x20000,scsiDontDisconnect = 0x10000,scsiDataReadyForDMA = 0x8000,scsiFlagReserved3 = 0x4000,scsiDataPhysical = 0x2000,scsiSensePhysical = 0x1000,scsiFlagReserved5 = 0x800,scsiFlagReserved6 = 0x400,scsiFlagReserved7 = 0x200,scsiFlagReserved8 = 0x100,};
enum $6EEF3DADD36213AAA19FC60753AD1D62 {gestaltSpeechRecognitionVersion = 0x73727462,};
enum $6F46896C17C23155BB80EB8172764E5A {kControlKindStaticText = 0x73747874,};
enum $6F64EBC7B9F5FDB97C1D4291F382CEB1 {gestaltFPUType = 0x66707520,gestaltNoFPU = 0x0,gestalt68881 = 0x1,gestalt68882 = 0x2,gestalt68040FPU = 0x3,};
enum $6F74D91E08344A644C0691D6CEFC96D4 {inDesk = 0x0,inNoWindow = 0x0,inMenuBar = 0x1,inSysWindow = 0x2,inContent = 0x3,inDrag = 0x4,inGrow = 0x5,inGoAway = 0x6,inZoomIn = 0x7,inZoomOut = 0x8,inCollapseBox = 0xB,inProxyIcon = 0xC,inToolbarButton = 0xD,inStructure = 0xF,};
enum $6FC22EB2853C6DFC420A02F0036DFE96 {teFUseTextServices = 0x4,};
enum $6FD91A7AFE268C49B994277A450A1D98 {cmICCProfileVersion4 = 0x4000000,cmICCProfileVersion2 = 0x2000000,cmICCProfileVersion21 = 0x2100000,cmCS2ProfileVersion = 0x2000000,cmCS1ProfileVersion = 0x100,};
enum $6FF5C06816C8C4E9D0FF921D54B24694 {kICMapBinaryMask = 0x1,kICMapResourceForkMask = 0x2,kICMapDataForkMask = 0x4,kICMapPostMask = 0x8,kICMapNotIncomingMask = 0x10,kICMapNotOutgoingMask = 0x20,};
enum $6FF67BC7D42FA1A92979F28C20948AA3 {kTXNAutoWrap = 0x0,kTXNNoAutoWrap = 0x1,};
enum $700918E380CED4B535F25069B938F55A {kControlIconRefProc = 0x144,kControlIconRefNoTrackProc = 0x145,};
enum $70523B5C87059BB39599CC19EB967F7C {kIP_OPTIONS = 0x1,kIP_TOS = 0x2,kIP_TTL = 0x3,kIP_REUSEADDR = 0x4,kIP_DONTROUTE = 0x10,kIP_BROADCAST = 0x20,kIP_REUSEPORT = 0x200,kIP_HDRINCL = 0x1002,kIP_RCVOPTS = 0x1005,kIP_RCVDSTADDR = 0x1007,kIP_MULTICAST_IF = 0x1010,kIP_MULTICAST_TTL = 0x1011,kIP_MULTICAST_LOOP = 0x1012,kIP_ADD_MEMBERSHIP = 0x1013,kIP_DROP_MEMBERSHIP = 0x1014,kIP_BROADCAST_IFNAME = 0x1015,kIP_RCVIFADDR = 0x1016,};
enum $70557CB90B31D8BB8CDA48B52213C956 {kEventParamWindowFeatures = 0x77667472,kEventParamWindowDefPart = 0x77647063,kEventParamCurrentBounds = 0x63726374,kEventParamOriginalBounds = 0x6F726374,kEventParamPreviousBounds = 0x70726374,kEventParamClickActivation = 0x636C6163,kEventParamWindowRegionCode = 0x77736870,kEventParamWindowDragHiliteFlag = 0x77646866,kEventParamWindowModifiedFlag = 0x776D6666,kEventParamWindowProxyGWorldPtr = 0x77706777,kEventParamWindowProxyImageRgn = 0x77706972,kEventParamWindowProxyOutlineRgn = 0x77706F72,kEventParamWindowStateChangedFlags = 0x77736366,kEventParamWindowTitleFullWidth = 0x77746677,kEventParamWindowTitleTextWidth = 0x77747477,kEventParamWindowGrowRect = 0x67726374,kEventParamAttributes = 0x61747472,kEventParamPreviousDockRect = 0x70647263,kEventParamCurrentDockRect = 0x63647263,typeWindowRegionCode = 0x77736870,typeWindowDefPartCode = 0x77647074,typeClickActivationResult = 0x636C6163,};
enum $706972E9E5B1FDDC3705995FE957DC06 {gestaltFloppyAttr = 0x666C7079,gestaltFloppyIsMFMOnly = 0x0,gestaltFloppyIsManualEject = 0x1,gestaltFloppyUsesDiskInPlace = 0x2,};
enum $70762D0B2261D3040494196417179487 {tsPreviousSelectMode = 0xFFFFFFFF,tsNormalSelectMode = 0x0,tsNextSelectMode = 0x1,};
enum $707F1AD2DF171DA86014C5BB0FA99D2A {gestaltSlotAttr = 0x736C6F74,gestaltSlotMgrExists = 0x0,gestaltNuBusPresent = 0x1,gestaltSESlotPresent = 0x2,gestaltSE30SlotPresent = 0x3,gestaltPortableSlotPresent = 0x4,};
enum $7085B25DBE53100CA61BFB5EC1F90FD2 {kControlLittleArrowsProc = 0x60,};
enum $708FD1D4D9C103B15DFAB8530761D95D {kLeftToRight = 0x0,kRightToLeft = 0x1,};
enum $70CFE721AE03AAFDC268885E3FF747E3 {kPMPortrait = 0x1,kPMLandscape = 0x2,kPMReversePortrait = 0x3,kPMReverseLandscape = 0x4,};
enum $70DA925F97250CF8703EC75C6BB49DAA {scsiVERSION = 0x2B,};
enum $70E04FFD63872778BF09F036AEB6E5D7 {teFind = 0x0,teHighlight = 0x1,teDraw = 0xFFFFFFFF,teCaret = 0xFFFFFFFE,};
enum $70F0A58E8ADB86B720B7CF0FDEA93CD3 {kCMUCTextServiceEvent = 0xE,};
enum $70FA12DE44E9FD5F06F800CAA0F374AC {kHFSSigWord = 0x4244,kHFSPlusSigWord = 0x482B,kHFSPlusVersion = 0x4,kHFSPlusMountVersion = 0x382E3130,};
enum $710C1B72A989A2D3DB14757D02AFA040 {gestaltDrawSprocketVersion = 0x64737076,};
struct $71210C31999B47ECFCA79A4496892A9D {mach_msg_bits_t msgh_bits;mach_msg_size_t msgh_size;mach_port_t msgh_remote_port;mach_port_t msgh_local_port;mach_msg_size_t msgh_reserved;mach_msg_id_t msgh_id;};
enum $712386A955D55ECCA8691C9DF9CD79AC {notEnoughMemoryErr = 0xFFFFFD94,notHeldErr = 0xFFFFFD93,cannotMakeContiguousErr = 0xFFFFFD92,notLockedErr = 0xFFFFFD91,interruptsMaskedErr = 0xFFFFFD90,cannotDeferErr = 0xFFFFFD8F,noMMUErr = 0xFFFFFD8E,};
enum $7156C40489E3788D0BB8FA7644ADC7FB {midiNoClientErr = 0xFFFFFF06,midiNoPortErr = 0xFFFFFF05,midiTooManyPortsErr = 0xFFFFFF04,midiTooManyConsErr = 0xFFFFFF03,midiVConnectErr = 0xFFFFFF02,midiVConnectMade = 0xFFFFFF01,midiVConnectRmvd = 0xFFFFFF00,midiNoConErr = 0xFFFFFEFF,midiWriteErr = 0xFFFFFEFE,midiNameLenErr = 0xFFFFFEFD,midiDupIDErr = 0xFFFFFEFC,midiInvalidCmdErr = 0xFFFFFEFB,};
enum $7185725E826BD251B3AB7A38FF404D56 {kSharingPrivsNotApplicableIcon = 0x73686E61,kSharingPrivsReadOnlyIcon = 0x7368726F,kSharingPrivsReadWriteIcon = 0x73687277,kSharingPrivsUnknownIcon = 0x7368756B,kSharingPrivsWritableIcon = 0x77726974,};
enum $7188CC058236FE27AACD0AFED9EAC98F {kControlIconTransformTag = 0x7472666D,kControlIconAlignmentTag = 0x616C676E,};
enum $7191047DEEBD9904D2E4FBD1FE3E7338 {kOSNotificationMessageID = 0x35,kOSAsyncCompleteMessageID = 0x39,kMaxAsyncArgs = 0x10,};
enum $719354E13EC6CF39D760F244FA3CE0A5 {kPMDevicePowerLevel_On = 0x0,kPMDevicePowerLevel_D1 = 0x1,kPMDevicePowerLevel_D2 = 0x2,kPMDevicePowerLevel_Off = 0x3,};
enum $719AA6A0FEC928B7F88346534552F52B {kAFPExtendedFlagsAlternateAddressMask = 0x1,};
enum $71C215B36FB45AD5F6C62241B86D72B3 {pCompletelyExpanded = 0x70657863,pContainerWindow = 0x63776E64,pEntireContents = 0x65637473,pExpandable = 0x70657861,pExpanded = 0x70657870,pPreviousView = 0x73766577,pView = 0x70766577,pIconSize = 0x6C766973,pKeepArranged = 0x61727267,pKeepArrangedBy = 0x61726279,};
enum $71C9229A7140DAC1D8127E2331DEB5F7 {kAEUserTerminology = 0x61657574,kAETerminologyExtension = 0x61657465,kAEScriptingSizeResource = 0x7363737A,kAEOSAXSizeResource = 0x6F73697A,};
enum $71CB72A305975FE50FDAB955C5C96550 {kReturnToParentWhenComplete = 0x1,kReturnToParentWhenNotComplete = 0x2,};
enum $71D4DD2438E3447408BF7A5B560BD43C {kControlKindLittleArrows = 0x6C617272,};
enum $71E191EDC33909E003A3BACB6AB04ABE {kFullWidthIdeographsSelector = 0x0,kProportionalIdeographsSelector = 0x1,kHalfWidthIdeographsSelector = 0x2,};
enum $71F99730D9D8C4617EEF8649D4C07A82 {kMenuNoIcon = 0x0,kMenuIconType = 0x1,kMenuShrinkIconType = 0x2,kMenuSmallIconType = 0x3,kMenuColorIconType = 0x4,kMenuIconSuiteType = 0x5,kMenuIconRefType = 0x6,kMenuCGImageRefType = 0x7,kMenuSystemIconSelectorType = 0x8,kMenuIconResourceType = 0x9,};
enum $720CB6D0B7D8CF744704B19C2BA63CFE {kFullWidthKanaSelector = 0x0,kProportionalKanaSelector = 0x1,};
enum $72119861EEB86AF27B9BC93E341B410D {kATSUDefaultFontFallbacks = 0x0,kATSULastResortOnlyFallback = 0x1,kATSUSequentialFallbacksPreferred = 0x2,kATSUSequentialFallbacksExclusive = 0x3,};
enum $723157224B6DF43B070D3643F7564BAB {kEventClassScrollable = 0x7363726C,};
enum $724A90AF96E58088A5967BA830BA97EE {kOSAModeAugmentContext = 0x4,};
enum $724FB908BC2960446F861BB7B96870DB {gestaltSoundAttr = 0x736E6420,gestaltStereoCapability = 0x0,gestaltStereoMixing = 0x1,gestaltSoundIOMgrPresent = 0x3,gestaltBuiltInSoundInput = 0x4,gestaltHasSoundInputDevice = 0x5,gestaltPlayAndRecord = 0x6,gestalt16BitSoundIO = 0x7,gestaltStereoInput = 0x8,gestaltLineLevelInput = 0x9,gestaltSndPlayDoubleBuffer = 0xA,gestaltMultiChannels = 0xB,gestalt16BitAudioSupport = 0xC,};
enum $7262407EE15A39DC59E63AC7CDE0FC1D {gestaltNotificationMgrAttr = 0x6E6D6772,gestaltNotificationPresent = 0x0,};
enum $72AA94340DD82734DB4A085B44863156 {kThemeNoSounds = 0x0,kThemeWindowSoundsMask = 0x1,kThemeMenuSoundsMask = 0x2,kThemeControlSoundsMask = 0x4,kThemeFinderSoundsMask = 0x8,};
enum $72AD8C66B2CFC07A6DF7E731F2188206 {gestaltBusClkSpeed = 0x62636C6B,};
enum $72E2D6F8CA917670CB54A93E150C7B00 {keyContextualMenuName = 0x706E616D,keyContextualMenuCommandID = 0x636D6364,keyContextualMenuSubmenu = 0x636D7362,keyContextualMenuAttributes = 0x636D6174,keyContextualMenuModifiers = 0x636D6D64,};
enum $7325705BC39DEB261114CDA8D4241685 {kTMTaskActive = 0x8000,};
enum $732C3EC3B03C84336B05BF6D4C2698DB {T_ROUTINE = 0x0,T_PRIORITY = 0x1,T_IMMEDIATE = 0x2,T_FLASH = 0x3,T_OVERRIDEFLASH = 0x4,T_CRITIC_ECP = 0x5,T_INETCONTROL = 0x6,T_NETCONTROL = 0x7,};
enum $733EE853FD49CE0FF2AF67A911946187 {cAEList = 0x6C697374,cApplication = 0x63617070,cArc = 0x63617263,cBoolean = 0x626F6F6C,cCell = 0x6363656C,cChar = 0x63686120,cColorTable = 0x636C7274,cColumn = 0x63636F6C,cDocument = 0x646F6375,cDrawingArea = 0x63647277,cEnumeration = 0x656E756D,cFile = 0x66696C65,cFixed = 0x66697864,cFixedPoint = 0x66706E74,cFixedRectangle = 0x66726374,cGraphicLine = 0x676C696E,cGraphicObject = 0x63676F62,cGraphicShape = 0x63677368,cGraphicText = 0x63677478,cGroupedGraphic = 0x63706963,};
enum $733F4640A5530DA4BFA5105798B35D62 {kFontNoPlatformCode = 0xFFFFFFFF,kFontNoScriptCode = 0xFFFFFFFF,kFontNoLanguageCode = 0xFFFFFFFF,};
enum $734D169094B446B1D8359E6ED26DB5FB {kOSAModeNeverInteract = 0x10,kOSAModeCanInteract = 0x20,kOSAModeAlwaysInteract = 0x30,kOSAModeDontReconnect = 0x80,};
enum $73832725CC1C67CCAEB910D4649CBB67 {kWindowGroupAttrSelectAsLayer = 0x1,kWindowGroupAttrMoveTogether = 0x2,kWindowGroupAttrLayerTogether = 0x4,kWindowGroupAttrSharedActivation = 0x8,kWindowGroupAttrHideOnCollapse = 0x10,};
enum $738DE379C7B868AAF3E553C20D98BD43 {keyAEAngle = 0x6B616E67,keyAEArcAngle = 0x70617263,};
enum $739AAC26CA94C46EF1FA6D6D777D115D {kAnyPanelType = 0x0,kAnyEngineType = 0x0,kAnyDeviceType = 0x0,kAnyPortType = 0x0,};
enum $73BC60A644A9BD44670368754AE9DDD8 {kOTSerialXOnOffInputHandshake = 0x1,kOTSerialXOnOffOutputHandshake = 0x2,kOTSerialCTSInputHandshake = 0x4,kOTSerialDTROutputHandshake = 0x8,};
enum $73F18261312DBE2173E1DFBBAE90E4FD {kNavDefaultNavDlogOptions = 0xE4,kNavNoTypePopup = 0x1,kNavDontAutoTranslate = 0x2,kNavDontAddTranslateItems = 0x4,kNavAllFilesInPopup = 0x10,kNavAllowStationery = 0x20,kNavAllowPreviews = 0x40,kNavAllowMultipleFiles = 0x80,kNavAllowInvisibleFiles = 0x100,kNavDontResolveAliases = 0x200,kNavSelectDefaultLocation = 0x400,kNavSelectAllReadableItem = 0x800,kNavSupportPackages = 0x1000,kNavAllowOpenPackages = 0x2000,kNavDontAddRecents = 0x4000,kNavDontUseCustomFrame = 0x8000,kNavDontConfirmReplacement = 0x10000,kNavPreserveSaveFileExtension = 0x20000,};
enum $740C8BBD2E7A5785DBD372E80878489A {gestaltPCXAttr = 0x70637867,gestaltPCXHas8and16BitFAT = 0x0,gestaltPCXHasProDOS = 0x1,gestaltPCXNewUI = 0x2,gestaltPCXUseICMapping = 0x3,};
enum $7411B45F00DD23CFB56499B7DA25AE62 {kPassSelector = 0x0,kDontPassSelector = 0x8,};
struct $7438D639DE8FA9B3E7B2175970876856 {CFURLRef sourceURL;CFStringEncoding encoding;};
enum $7442E677199E26E8274D4B6A56B2A7A9 {doFont = 0x1,doFace = 0x2,doSize = 0x4,doColor = 0x8,doAll = 0xF,addSize = 0x10,doToggle = 0x20,};
enum $746DC2D9D0091FA2A243991614BD149F {kCFStreamErrorSOCKSSubDomainNone = 0x0,kCFStreamErrorSOCKSSubDomainVersionCode = 0x1,kCFStreamErrorSOCKS4SubDomainResponse = 0x2,kCFStreamErrorSOCKS5SubDomainUserPass = 0x3,kCFStreamErrorSOCKS5SubDomainMethod = 0x4,kCFStreamErrorSOCKS5SubDomainResponse = 0x5,};
enum $7493DC379C4D203E0ABDB52409B2119D {shortDate = 0x0,longDate = 0x1,abbrevDate = 0x2,};
enum $749D63BB152876DCBC12FE10BAF9CA68 {smfDisableKeyScriptSync = 0x1B,};
enum $749E5E8AFAF7D01ED0449932E1B50099 {kThemeWidgetABox = 0x3,kThemeWidgetBBox = 0x4,kThemeWidgetBOffBox = 0x5,};
enum $74A4308FB02A5AACEA954F833DFB61C7 {volMountNoLoginMsgFlagBit = 0x0,volMountNoLoginMsgFlagMask = 0x1,volMountExtendedFlagsBit = 0x7,volMountExtendedFlagsMask = 0x80,volMountInteractBit = 0xF,volMountInteractMask = 0x8000,volMountChangedBit = 0xE,volMountChangedMask = 0x4000,volMountFSReservedMask = 0xFF,volMountSysReservedMask = 0xFF00,};
enum $74EF8192D4FF6DC67811AAC027542614 {kControlStaticTextStyleTag = 0x666F6E74,kControlStaticTextTextTag = 0x74657874,kControlStaticTextTextHeightTag = 0x74686569,};
enum $753EC103841FA900CB54716E4A5A6049 {gestaltSystemUpdateVersion = 0x73797375,};
enum $75562743232096033B3BF8D6002FFC9D {gestaltPopupAttr = 0x706F7021,gestaltPopupPresent = 0x0,};
enum $7561B293AA21EBD631CC29ADA5881722 {kTextEncodingISO_2022_JP = 0x820,kTextEncodingISO_2022_JP_2 = 0x821,kTextEncodingISO_2022_JP_1 = 0x822,kTextEncodingISO_2022_JP_3 = 0x823,kTextEncodingISO_2022_CN = 0x830,kTextEncodingISO_2022_CN_EXT = 0x831,kTextEncodingISO_2022_KR = 0x840,};
enum $75680E889D42E0B66BD944745319419E {keyAEKeyword = 0x6B797764,keyAELevel = 0x6C65766C,keyAELineArrow = 0x6172726F,keyAEName = 0x706E616D,keyAENewElementLoc = 0x706E656C,keyAEObject = 0x6B6F626A,keyAEObjectClass = 0x6B6F636C,keyAEOffStyles = 0x6F667374,keyAEOnStyles = 0x6F6E7374,keyAEParameters = 0x70726D73,keyAEParamFlags = 0x706D6667,keyAEPenColor = 0x7070636C,keyAEPenPattern = 0x70707061,keyAEPenWidth = 0x70707764,keyAEPixelDepth = 0x70647074,keyAEPixMapMinus = 0x6B706D6D,keyAEPMTable = 0x6B706D74,keyAEPointList = 0x70746C74,keyAEPointSize = 0x7074737A,keyAEPosition = 0x6B706F73,};
enum $7570CAE0C29D32DDB43FD282AA1D0397 {kDataBrowserCustomType = 0x3F3F3F3F,kDataBrowserIconType = 0x69636E72,kDataBrowserTextType = 0x74657874,kDataBrowserDateTimeType = 0x64617465,kDataBrowserSliderType = 0x736C6472,kDataBrowserCheckboxType = 0x63686278,kDataBrowserProgressBarType = 0x70726F67,kDataBrowserRelevanceRankType = 0x72616E6B,kDataBrowserPopupMenuType = 0x6D656E75,kDataBrowserIconAndTextType = 0x7469636E,};
enum $757D3DC85B973D94A0817EAA3470FB59 {gestaltThreadMgrAttr = 0x74686473,gestaltThreadMgrPresent = 0x0,gestaltSpecificMatchSupport = 0x1,gestaltThreadsLibraryPresent = 0x2,};
enum $759763EA81AA1096C94DF528D440B104 {kTECKeepInfoFixMask = 0x1,kTECFallbackTextLengthFixMask = 0x2,kTECTextRunBitClearFixMask = 0x4,kTECTextToUnicodeScanFixMask = 0x8,kTECAddForceASCIIChangesMask = 0x10,kTECPreferredEncodingFixMask = 0x20,kTECAddTextRunHeuristicsMask = 0x40,kTECAddFallbackInterruptMask = 0x80,};
enum $75A2EC19CCF65379A647532C2A2FC8D4 {scsiSIMQFrozen = 0x1,scsiAutosenseValid = 0x2,scsiBusNotFree = 0x4,};
enum $75CB5EC200FA265396EE7060A2FBE888 {typeAEList = 0x6C697374,typeAERecord = 0x7265636F,typeAppleEvent = 0x61657674,typeEventRecord = 0x65767263,typeTrue = 0x74727565,typeFalse = 0x66616C73,typeAlias = 0x616C6973,typeEnumerated = 0x656E756D,typeType = 0x74797065,typeAppParameters = 0x61707061,typeProperty = 0x70726F70,typeFSS = 0x66737320,typeFSRef = 0x66737266,typeFileURL = 0x6675726C,typeKeyword = 0x6B657977,typeSectionH = 0x73656374,typeWildCard = 0x2A2A2A2A,typeApplSignature = 0x7369676E,typeQDRectangle = 0x71647274,typeFixed = 0x66697864,typeProcessSerialNumber = 0x70736E20,typeApplicationURL = 0x6170726C,typeNull = 0x6E756C6C,};
enum $75F298804AFA0F791E6E27E3184CCE3F {hmHelpDisabled = 0xFFFFFCAE,hmBalloonAborted = 0xFFFFFCAB,hmSameAsLastBalloon = 0xFFFFFCAA,hmHelpManagerNotInited = 0xFFFFFCA9,hmSkippedBalloon = 0xFFFFFCA7,hmWrongVersion = 0xFFFFFCA6,hmUnknownHelpType = 0xFFFFFCA5,hmOperationUnsupported = 0xFFFFFCA3,hmNoBalloonUp = 0xFFFFFCA2,hmCloseViewActive = 0xFFFFFCA1,};
enum $76532C4263E817CCFB285DFE4A61DA3F {kIsCaseSensitive = 0x10,kIsNotDiacriticalSensitive = 0x20,};
enum $76597B0AEBADA5ED0B4E053F72BA1DDE {kMaxModuleNameLength = 0x1F,kMaxModuleNameSize = 0x20,kMaxProviderNameLength = 0x23,kMaxProviderNameSize = 0x24,kMaxSlotIDLength = 0x7,kMaxSlotIDSize = 0x8,kMaxResourceInfoLength = 0x1F,kMaxResourceInfoSize = 0x20,kMaxPortNameLength = 0x23,kMaxPortNameSize = 0x24,};
enum $766A84489E7C2A66DAB1AA7267D55A44 {kCurrentUserFolderLocation = 0x63757366,};
enum $766AF2F9A78A14DBDE9F72FE806423B3 {soundListRsrc = 0x736E6420,kSoundCodecInfoResourceType = 0x736E666F,};
enum $767A1521A394221B9B8A4E851CA7AF8B {kDefaultCMMSignature = 0x6170706C,};
enum $76869AB1A47FEAD4804D17388C0C3570 {scsiDeviceSensitive = 0x1,scsiDeviceNoOldCallAccess = 0x2,};
enum $768A538D1D035582BA0796618D0D60E0 {gestaltTSMTEVersion = 0x746D5456,gestaltTSMTE1 = 0x100,gestaltTSMTE15 = 0x150,gestaltTSMTE152 = 0x152,};
enum $768C2AF2BA4795B0EBD762573A709F14 {kPascalStackBased = 0x0,kCStackBased = 0x1,kRegisterBased = 0x2,kD0DispatchedPascalStackBased = 0x8,kD1DispatchedPascalStackBased = 0xC,kD0DispatchedCStackBased = 0x9,kStackDispatchedPascalStackBased = 0xE,kThinkCStackBased = 0x5,};
enum $76A3AB67DD166F1DF13EFDC956E05079 {kDataBrowserDragSelect = 0x1,kDataBrowserSelectOnlyOne = 0x2,kDataBrowserResetSelection = 0x4,kDataBrowserCmdTogglesSelection = 0x8,kDataBrowserNoDisjointSelection = 0x10,kDataBrowserAlwaysExtendSelection = 0x20,kDataBrowserNeverEmptySelectionSet = 0x40,};
enum $76AF4E52D030C8125ED390D9BED05CBF {kHMIllegalContentForMinimumState = 0xFFFFD51C,};
enum $771C443C24708D0294A19D33AC41EC9B {kOSAErrorRange = 0x65726E67,};
union $77272609D9A6BB912C7C0540469DE8CB {unsigned int word;struct $77272609D9A6BB912C7C0540469DE8CB::$B9E36A3E03C81543B20658C41A7D7AF5 bits;};
struct $77272609D9A6BB912C7C0540469DE8CB::$B9E36A3E03C81543B20658C41A7D7AF5 {unsigned __int32 pmc3select : 5;unsigned __int32 pmc4select : 5;unsigned __int32 reserved : 22;};
enum $774312103BEE5735EC77C58B53E981B1 {mdy = 0x0,dmy = 0x1,ymd = 0x2,myd = 0x3,dym = 0x4,ydm = 0x5,};
enum $7745403140024A222F16627FF91DF2DB {kOSASelectGetSource = 0x201,};
enum $776CEEEF1724069A8B62F050CF3D2C1F {kHIDSuccess = 0x0,kHIDInvalidRangePageErr = 0xFFFFC99D,kHIDReportIDZeroErr = 0xFFFFC99C,kHIDReportCountZeroErr = 0xFFFFC99B,kHIDReportSizeZeroErr = 0xFFFFC99A,kHIDUnmatchedDesignatorRangeErr = 0xFFFFC999,kHIDUnmatchedStringRangeErr = 0xFFFFC998,kHIDInvertedUsageRangeErr = 0xFFFFC997,kHIDUnmatchedUsageRangeErr = 0xFFFFC996,kHIDInvertedPhysicalRangeErr = 0xFFFFC995,kHIDInvertedLogicalRangeErr = 0xFFFFC994,kHIDBadLogicalMaximumErr = 0xFFFFC993,kHIDBadLogicalMinimumErr = 0xFFFFC992,kHIDUsagePageZeroErr = 0xFFFFC991,kHIDEndOfDescriptorErr = 0xFFFFC990,kHIDNotEnoughMemoryErr = 0xFFFFC98F,kHIDBadParameterErr = 0xFFFFC98E,kHIDNullPointerErr = 0xFFFFC98D,kHIDInvalidReportLengthErr = 0xFFFFC98C,kHIDInvalidReportTypeErr = 0xFFFFC98B,kHIDBadLogPhysValuesErr = 0xFFFFC98A,kHIDIncompatibleReportErr = 0xFFFFC989,kHIDInvalidPreparsedDataErr = 0xFFFFC988,kHIDNotValueArrayErr = 0xFFFFC987,kHIDUsageNotFoundErr = 0xFFFFC986,kHIDValueOutOfRangeErr = 0xFFFFC985,kHIDBufferTooSmallErr = 0xFFFFC984,kHIDNullStateErr = 0xFFFFC983,kHIDBaseError = 0xFFFFC982,};
enum $779BCE7593D9D557EDD3364C561936A0 {kFMDefaultActivationContext = 0x0,kFMGlobalActivationContext = 0x1,kFMLocalActivationContext = 0x0,};
enum $77E31E93792A1186CF38FAA1EB1500C2 {gestaltDITLExtAttr = 0x6469746C,gestaltDITLExtPresent = 0x0,gestaltDITLExtSupportsIctb = 0x1,};
enum $77E8F30AE2DD06250972687FE2BED1DB {kHMMinimumContentIndex = 0x0,kHMMaximumContentIndex = 0x1,};
enum $77FCC2469876502B8D0C375F966DDD4F {gestaltAppleTalkVersion = 0x61746C6B,};
enum $7807CBC478D0C000DE821F6EC9B7CB7A {kThemeBrushScrollBarDelimiterActive = 0x11,kThemeBrushScrollBarDelimiterInactive = 0x12,kThemeBrushFocusHighlight = 0x13,kThemeBrushPopupArrowActive = 0x14,kThemeBrushPopupArrowPressed = 0x15,kThemeBrushPopupArrowInactive = 0x16,kThemeBrushAppleGuideCoachmark = 0x17,kThemeBrushIconLabelBackgroundSelected = 0x18,kThemeBrushStaticAreaFill = 0x19,kThemeBrushActiveAreaFill = 0x1A,kThemeBrushButtonFrameActive = 0x1B,kThemeBrushButtonFrameInactive = 0x1C,kThemeBrushButtonFaceActive = 0x1D,kThemeBrushButtonFaceInactive = 0x1E,kThemeBrushButtonFacePressed = 0x1F,kThemeBrushButtonActiveDarkShadow = 0x20,kThemeBrushButtonActiveDarkHighlight = 0x21,kThemeBrushButtonActiveLightShadow = 0x22,kThemeBrushButtonActiveLightHighlight = 0x23,kThemeBrushButtonInactiveDarkShadow = 0x24,kThemeBrushButtonInactiveDarkHighlight = 0x25,kThemeBrushButtonInactiveLightShadow = 0x26,kThemeBrushButtonInactiveLightHighlight = 0x27,kThemeBrushButtonPressedDarkShadow = 0x28,kThemeBrushButtonPressedDarkHighlight = 0x29,kThemeBrushButtonPressedLightShadow = 0x2A,kThemeBrushButtonPressedLightHighlight = 0x2B,kThemeBrushBevelActiveLight = 0x2C,kThemeBrushBevelActiveDark = 0x2D,kThemeBrushBevelInactiveLight = 0x2E,kThemeBrushBevelInactiveDark = 0x2F,};
enum $7813A1B9FB112BFBB1C6DABB07050D7A {dNeedLockMask = 0x4000,dNeedTimeMask = 0x2000,dNeedGoodByeMask = 0x1000,dStatEnableMask = 0x800,dCtlEnableMask = 0x400,dWritEnableMask = 0x200,dReadEnableMask = 0x100,};
enum $7843CFC230C7B63097910348F257833D {noConstraint = 0x0,hAxisOnly = 0x1,vAxisOnly = 0x2,};
enum $785981E28C60F1F0C5688AF20BD056E0 {lDrawingModeOff = 0x8,lDoVAutoscroll = 0x2,lDoHAutoscroll = 0x1,};
enum $787A465243FFAF7ABF678BDECA87F49B {kControlClockLongDateTag = 0x64617465,kControlClockFontStyleTag = 0x666F6E74,kControlClockAnimatingTag = 0x616E696D,};
enum $7886B6974A8D74D900241E0716643BC9 {kHFSVolumeHardwareLockBit = 0x7,kHFSVolumeUnmountedBit = 0x8,kHFSVolumeSparedBlocksBit = 0x9,kHFSVolumeNoCacheRequiredBit = 0xA,kHFSBootVolumeInconsistentBit = 0xB,kHFSVolumeSoftwareLockBit = 0xF,kHFSVolumeHardwareLockMask = 0x80,kHFSVolumeUnmountedMask = 0x100,kHFSVolumeSparedBlocksMask = 0x200,kHFSVolumeNoCacheRequiredMask = 0x400,kHFSBootVolumeInconsistentMask = 0x800,kHFSVolumeSoftwareLockMask = 0x8000,kHFSMDBAttributesMask = 0x8380,};
enum $789C54EFC0F124BC54455F4C073E1DBE {kAllDHCPOptions = 0xFFFFFFFF,kDHCPLongOption = 0x7E,kDHCPLongOptionReq = 0x7F,};
union $78AF60B7EAAC2BB1C96EBCEF432CA4FF {unsigned int word;struct $78AF60B7EAAC2BB1C96EBCEF432CA4FF::$D1E6A8F728F5909FD3B9EE821FA47C9B bits;};
struct $78AF60B7EAAC2BB1C96EBCEF432CA4FF::$D1E6A8F728F5909FD3B9EE821FA47C9B {unsigned __int32 dis : 1;unsigned __int32 dp : 1;unsigned __int32 du : 1;unsigned __int32 dms : 1;unsigned __int32 dmr : 1;unsigned __int32 reserved3 : 1;unsigned __int32 reserved4 : 1;unsigned __int32 reserved5 : 2;unsigned __int32 reserved6 : 1;unsigned __int32 threshold : 6;unsigned __int32 reserved7 : 1;unsigned __int32 reserved8 : 1;unsigned __int32 reserved9 : 1;unsigned __int32 pmc1select : 7;unsigned __int32 pmc2select : 6;};
enum $78B60C2F36DA898C35B315A38A0318E7 {typeAEMorphemePartOfSpeechCode = 0x6C616D63,typeAEMorphemeTextRange = 0x6C616D74,};
enum $78C6DA2E6C17E9D1DFCB7A8F040ECACB {kUCCollateTypeSourceMask = 0xFF,kUCCollateTypeShiftBits = 0x18,};
enum $78F25B7C7BE015A64E6B2248E2CBAE7B {kATSOptionFlagsDoNotNotify = 0x100,kATSOptionFlagsIterationScopeMask = 0x7000,kATSOptionFlagsDefaultScope = 0x0,kATSOptionFlagsUnRestrictedScope = 0x1000,kATSOptionFlagsRestrictedScope = 0x2000,kATSOptionFlagsProcessSubdirectories = 0x40,};
enum $790FDDCBA8E3E00BF9FA16B94A65D3EF {enumWhere = 0x77686572,enumAllLocalDisks = 0x616C646B,enumAllRemoteDisks = 0x6172646B,enumAllDisks = 0x616C6C64,enumAllOpenFolders = 0x616F666F,};
enum $793398CD824A1C56C8D8B92136C3AB14 {kDragStandardDropLocationTrash = 0x74727368,kDragStandardDropLocationUnknown = 0x756E6B6E,};
enum $7934D37E72B4A6A37F437CBC10789FB5 {tokenNotEqual = 0x28,tokenLessGreat = 0x29,tokenExclamEqual = 0x2A,tokenExclam = 0x2B,tokenTilde = 0x2C,tokenComma = 0x2D,tokenPeriod = 0x2E,tokenLeft2Quote = 0x2F,tokenRight2Quote = 0x30,tokenLeft1Quote = 0x31,tokenRight1Quote = 0x32,token2Quote = 0x33,token1Quote = 0x34,tokenSemicolon = 0x35,tokenPercent = 0x36,tokenCaret = 0x37,tokenUnderline = 0x38,tokenAmpersand = 0x39,tokenAtSign = 0x3A,tokenBar = 0x3B,};
enum $793885400D2D98BEC625E2284EE63E4C {variationFontTableTag = 0x66766172,};
enum $79483284807DF82D019464C567C1430B : unsigned __int32 {kLSRequestExtension = 0x1,kLSRequestTypeCreator = 0x2,kLSRequestBasicFlagsOnly = 0x4,kLSRequestAppTypeFlags = 0x8,kLSRequestAllFlags = 0x10,kLSRequestIconAndKind = 0x20,kLSRequestExtensionFlagsOnly = 0x40,kLSRequestAllInfo = 0xFFFFFFFF,};
enum $79978CB633CD8174A3C3C502647E125A {gestaltFinderAttr = 0x666E6472,gestaltFinderDropEvent = 0x0,gestaltFinderMagicPlacement = 0x1,gestaltFinderCallsAEProcess = 0x2,gestaltOSLCompliantFinder = 0x3,gestaltFinderSupports4GBVolumes = 0x4,gestaltFinderHasClippings = 0x6,gestaltFinderFullDragManagerSupport = 0x7,gestaltFinderFloppyRootComments = 0x8,gestaltFinderLargeAndNotSavedFlavorsOK = 0x9,gestaltFinderUsesExtensibleFolderManager = 0xA,gestaltFinderUnderstandsRedirectedDesktopFolder = 0xB,};
enum $799CD7B761FFA04D296C7C37FD4E6AB0 {kCFXMLNodeTypeDocument = 0x1,kCFXMLNodeTypeElement = 0x2,kCFXMLNodeTypeAttribute = 0x3,kCFXMLNodeTypeProcessingInstruction = 0x4,kCFXMLNodeTypeComment = 0x5,kCFXMLNodeTypeText = 0x6,kCFXMLNodeTypeCDATASection = 0x7,kCFXMLNodeTypeDocumentFragment = 0x8,kCFXMLNodeTypeEntity = 0x9,kCFXMLNodeTypeEntityReference = 0xA,kCFXMLNodeTypeDocumentType = 0xB,kCFXMLNodeTypeWhitespace = 0xC,kCFXMLNodeTypeNotation = 0xD,kCFXMLNodeTypeElementTypeDeclaration = 0xE,kCFXMLNodeTypeAttributeListDeclaration = 0xF,};
enum $79A12DFC438751EBB0B5ADF757AED8F7 {kUnicodeUseFallbacksMask = 0x1,kUnicodeKeepInfoMask = 0x2,kUnicodeDirectionalityMask = 0xC,kUnicodeVerticalFormMask = 0x10,kUnicodeLooseMappingsMask = 0x20,kUnicodeStringUnterminatedMask = 0x40,kUnicodeTextRunMask = 0x80,kUnicodeKeepSameEncodingMask = 0x100,kUnicodeForceASCIIRangeMask = 0x200,kUnicodeNoHalfwidthCharsMask = 0x400,kUnicodeTextRunHeuristicsMask = 0x800,kUnicodeMapLineFeedToReturnMask = 0x1000,};
enum $79C5C04FB764DDCE2024DC8D5E919E44 {kThemePopupTabNormalPosition = 0x0,kThemePopupTabCenterOnWindow = 0x1,kThemePopupTabCenterOnOffset = 0x2,};
enum $7A00BDE3FF1F36B1D51A26B10393E8CD {smResrvErr = 0xFFFFFECD,smUnExBusErr = 0xFFFFFECC,smBLFieldBad = 0xFFFFFECB,smFHBlockRdErr = 0xFFFFFECA,smFHBlkDispErr = 0xFFFFFEC9,smDisposePErr = 0xFFFFFEC8,smNoBoardSRsrc = 0xFFFFFEC7,smGetPRErr = 0xFFFFFEC6,smNoBoardId = 0xFFFFFEC5,smInitStatVErr = 0xFFFFFEC4,smInitTblVErr = 0xFFFFFEC3,smNoJmpTbl = 0xFFFFFEC2,smReservedSlot = 0xFFFFFEC2,smBadBoardId = 0xFFFFFEC1,smBusErrTO = 0xFFFFFEC0,svTempDisable = 0xFFFF8000,svDisabled = 0xFFFF8080,smBadRefId = 0xFFFFFEB6,smBadsList = 0xFFFFFEB5,smReservedErr = 0xFFFFFEB4,smCodeRevErr = 0xFFFFFEB3,};
enum $7A07F109118309CD0FA163F65A88A5FF {kAHInternalErr = 0xFFFFD5DA,kAHInternetConfigPrefErr = 0xFFFFD5D9,};
enum $7A30D12CC1DCBFA65E2F8D75062A458B {gestaltColorPickerVersion = 0x63706B72,gestaltColorPicker = 0x63706B72,};
enum $7A34C91203280F1DB2AA550EB35C1000 {threadBadAppContextErr = 0xFFFFFD98,};
enum $7A6715927596429A14D394264CFAAABF {T_SUCCESS = 0x20,T_FAILURE = 0x40,T_PARTSUCCESS = 0x100,T_READONLY = 0x200,T_NOTSUPPORT = 0x400,};
enum $7ABC2998878633516ADEFA55C21F1171 {pleaseCacheBit = 0x4,pleaseCacheMask = 0x10,noCacheBit = 0x5,noCacheMask = 0x20,rdVerifyBit = 0x6,rdVerifyMask = 0x40,rdVerify = 0x40,forceReadBit = 0x6,forceReadMask = 0x40,newLineBit = 0x7,newLineMask = 0x80,newLineCharMask = 0xFF00,};
enum $7AF6B9DB2A991AF2ACA7FFFC68B603A4 {kNBPMaxNameLength = 0x20,kNBPMaxTypeLength = 0x20,kNBPMaxZoneLength = 0x20,kNBPSlushLength = 0x9,kNBPMaxEntityLength = 0x63,kNBPEntityBufferSize = 0x69,kNBPWildCard = 0x3D,kNBPImbeddedWildCard = 0xC5,kNBPDefaultZone = 0x2A,};
enum $7B7704856BCE95E06A4A5CC8319AE6F7 {kControlClockTimeProc = 0xF0,kControlClockTimeSecondsProc = 0xF1,kControlClockDateProc = 0xF2,kControlClockMonthYearProc = 0xF3,};
enum $7BB8D7F8775098D3B06D46DAD7FB5156 : unsigned __int32 {kATSStyleNoOptions = 0x0,kATSStyleNoHinting = 0x1,kATSStyleApplyAntiAliasing = 0x2,kATSStyleNoAntiAliasing = 0x4,kATSStyleAppleReserved = 0xFFFFFFF8,kATSStyleApplyHints = 0x0,};
enum $7BD84307E1464587D10DC2E68A3E642C {kSyncPositivePolarityBit = 0x0,kSyncPositivePolarityMask = 0x1,};
enum $7C26693F71BA1EC40F7CB0C262C87D25 {kControlEditUnicodeTextPostUpdateProcTag = 0x75707570,};
enum $7C3397D50CB4377F37C78B3C3B440826 {kSRListenKeyMode = 0x6C6B6D64,kSRListenKeyCombo = 0x6C6B6579,kSRListenKeyName = 0x6C6E616D,kSRKeyWord = 0x6B777264,kSRKeyExpected = 0x6B657870,};
enum $7C4C1002606730B1485F01412B662007 {cInternalFinderObject = 0x6F626A20,};
enum $7C59A514887DFA2EDA116E91B0748487 {kIMRomanInputMode = 0x726F6D6E,kIMPasswordInputMode = 0x70617377,kIMXingInputMode = 0x78696E67,kIMHuaInputMode = 0x6875616D,kIMPinyinInputMode = 0x70696E79,kIMQuweiInputMode = 0x71757765,kIMCangjieInputMode = 0x63676A69,kIMJianyiInputMode = 0x6A6E7969,kIMZhuyinInputMode = 0x7A687579,kIMB5CodeInputMode = 0x62356364,kIMKatakanaInputMode = 0x6B617461,kIMHiraganaInputMode = 0x68697261,};
enum $7C73306EF46C31DD2C31A0E8749AE802 {kARMMountVol = 0x1,kARMNoUI = 0x2,kARMMultVols = 0x8,kARMSearch = 0x100,kARMSearchMore = 0x200,kARMSearchRelFirst = 0x400,kARMTryFileIDFirst = 0x800,};
enum $7C7F83FAB1E6FC1A877D3998E36A90F5 {kJUSTTag = 0x6A757374,kJUSTCurrentVersion = 0x10000,kJUSTStandardFormat = 0x0,kJUSTnoGlyphcode = 0xFFFF,kJUSTpcDecompositionAction = 0x0,kJUSTpcUnconditionalAddAction = 0x1,kJUSTpcConditionalAddAction = 0x2,kJUSTpcGlyphStretchAction = 0x3,kJUSTpcDuctilityAction = 0x4,kJUSTpcGlyphRepeatAddAction = 0x5,};
enum $7D6ED94B512169AF3FF6F2EA932D25FF {pASWeekday = 0x776B6479,pASMonth = 0x6D6E7468,pASDay = 0x64617920,pASYear = 0x79656172,pASTime = 0x74696D65,pASDateString = 0x64737472,pASTimeString = 0x74737472,cMonth = 0x6D6E7468,cJanuary = 0x6A616E20,cFebruary = 0x66656220,cMarch = 0x6D617220,cApril = 0x61707220,cMay = 0x6D617920,cJune = 0x6A756E20,cJuly = 0x6A756C20,cAugust = 0x61756720,cSeptember = 0x73657020,cOctober = 0x6F637420,cNovember = 0x6E6F7620,cDecember = 0x64656320,};
enum $7D92B1AB7B10DFC8F045C2C7E2742C87 {gestaltSCSI = 0x73637369,gestaltAsyncSCSI = 0x0,gestaltAsyncSCSIINROM = 0x1,gestaltSCSISlotBoot = 0x2,gestaltSCSIPollSIH = 0x3,};
enum $7D9308131D91D95A30E40568EE251A70 {kMenuDefObjectClass = 0x1,};
enum $7DDBDC34E1008FF23F3F060DC51405F3 {kResFileNotOpened = 0xFFFFFFFF,kSystemResFile = 0x0,};
enum $7E1A3B94D0BAD75AD54E4CB773CF6DC2 {kWindowCanGrow = 0x1,kWindowCanZoom = 0x2,kWindowCanCollapse = 0x4,kWindowIsModal = 0x8,kWindowCanGetWindowRegion = 0x10,kWindowIsAlert = 0x20,kWindowHasTitleBar = 0x40,};
enum $7E21B1CF3F19F2BF300E63CEE434414D {kURLReplaceExistingFlag = 0x1,kURLBinHexFileFlag = 0x2,kURLExpandFileFlag = 0x4,kURLDisplayProgressFlag = 0x8,kURLDisplayAuthFlag = 0x10,kURLUploadFlag = 0x20,kURLIsDirectoryHintFlag = 0x40,kURLDoNotTryAnonymousFlag = 0x80,kURLDirectoryListingFlag = 0x100,kURLExpandAndVerifyFlag = 0x200,kURLNoAutoRedirectFlag = 0x400,kURLDebinhexOnlyFlag = 0x800,kURLDoNotDeleteOnErrorFlag = 0x1000,kURLResumeDownloadFlag = 0x2000,kURLReservedFlag = 0x80000000,};
enum $7E2F11CF5FE2901815F7E0534F356353 {kTXNQDFontNameAttribute = 0x666E746E,kTXNQDFontFamilyIDAttribute = 0x666F6E74,kTXNQDFontSizeAttribute = 0x73697A65,kTXNQDFontStyleAttribute = 0x66616365,kTXNQDFontColorAttribute = 0x6B6C6F72,kTXNTextEncodingAttribute = 0x656E6364,kTXNATSUIFontFeaturesAttribute = 0x61746665,kTXNATSUIFontVariationsAttribute = 0x61747661,kTXNURLAttribute = 0x75726C61,};
struct $7E41E804D45D4891723A0E2B97F120BE {CFIndex version;void *info;CFTreeRetainCallBack retain;CFTreeReleaseCallBack release;CFTreeCopyDescriptionCallBack copyDescription;};
enum $7E8F882485AD2725916D35C834C0611C {kDragFlavorTypeHFS = 0x68667320,kDragFlavorTypePromiseHFS = 0x70686673,flavorTypeHFS = 0x68667320,flavorTypePromiseHFS = 0x70686673,};
enum $7ECF5F8138411AC066723DCEDD10846E {kControlKindRoundButton = 0x726E6462,};
enum $7ED2349EFEDEE0ECFAF054662DAEA502 {kSTClassEndOfText = 0x0,kSTClassOutOfBounds = 0x1,kSTClassDeletedGlyph = 0x2,kSTClassEndOfLine = 0x3,kSTSetMark = 0x8000,kSTNoAdvance = 0x4000,kSTMarkEnd = 0x2000,kSTLigActionMask = 0x3FFF,kSTRearrVerbMask = 0xF,};
enum $7EE5EE0110DFEB94CBB6697375F9F14D {enumIconSize = 0x6973697A,enumSmallIconSize = 0x736D6963,enumMiniIconSize = 0x6D696963,enumLargeIconSize = 0x6C676963,};
enum $7EE95CE29FDBD5A336441C6CA0F81732 {kOSASelectCopyScript = 0x105,};
enum $7EFE748F73D51E04DBC89483D19288CC {gestaltMemoryMapAttr = 0x6D6D6170,gestaltMemoryMapSparse = 0x0,};
enum $7F06BC4141063ED90041B7609B4B5E52 {kOSAErrorOffendingObject = 0x65726F62,};
enum $7F09B7F01F29302D25E55490C59CA5E4 {kThemeWidgetCloseBox = 0x0,kThemeWidgetZoomBox = 0x1,kThemeWidgetCollapseBox = 0x2,kThemeWidgetDirtyCloseBox = 0x6,};
enum $7F1F56674A5E66FD352F305A075D5A6B {T_INFINITE = 0xFFFFFFFF,T_INVALID = 0xFFFFFFFE,};
enum $7F277889E2E7A30ED643C27E2A5A6A4D {pFileShareOn = 0x66736872,pFileShareStartingUp = 0x66737570,pProgramLinkingOn = 0x69616320,};
enum $7F2F0B6087FC00D8A38A524612DDBB16 {errOSASystemError = 0xFFFFF92A,errOSAInvalidID = 0xFFFFF929,errOSABadStorageType = 0xFFFFF928,errOSAScriptError = 0xFFFFF927,errOSABadSelector = 0xFFFFF926,errOSASourceNotAvailable = 0xFFFFF924,errOSANoSuchDialect = 0xFFFFF923,errOSADataFormatObsolete = 0xFFFFF922,errOSADataFormatTooNew = 0xFFFFF921,errOSACorruptData = 0xFFFFF95A,errOSARecordingIsAlreadyOn = 0xFFFFF93C,errOSAComponentMismatch = 0xFFFFF91F,errOSACantOpenComponent = 0xFFFFF91E,};
enum $7F353085EF1A752682C7DE54378BC6C7 {cmMatchAnyProfile = 0x0,cmMatchProfileCMMType = 0x1,cmMatchProfileClass = 0x2,cmMatchDataColorSpace = 0x4,cmMatchProfileConnectionSpace = 0x8,cmMatchManufacturer = 0x10,cmMatchModel = 0x20,cmMatchAttributes = 0x40,cmMatchProfileFlags = 0x80,};
enum $7F3BB0A99CFF2C52DDF51E80A1992606 {cmMagicNumber = 0x61637370,};
enum $7F3E7E1AB57D7076B1F8652C10AC5339 {kTaskLevel = 0x0,kSoftwareInterruptLevel = 0x1,kAcceptFunctionLevel = 0x2,kKernelLevel = 0x3,kSIHAcceptFunctionLevel = 0x4,kSecondaryInterruptLevel = 0x5,kHardwareInterruptLevel = 0x6,kMPTaskLevel = 0x7,};
enum $7F69674E4002FD69D5A14119D44D6814 {kFSVolFlagDefaultVolumeBit = 0x5,kFSVolFlagDefaultVolumeMask = 0x20,kFSVolFlagFilesOpenBit = 0x6,kFSVolFlagFilesOpenMask = 0x40,kFSVolFlagHardwareLockedBit = 0x7,kFSVolFlagHardwareLockedMask = 0x80,kFSVolFlagSoftwareLockedBit = 0xF,kFSVolFlagSoftwareLockedMask = 0x8000,};
enum $7F6C01ACAE3F92E9A7E5D535E29DF13A {kOTLastSlotNumber = 0xFF,kOTLastOtherNumber = 0xFF,};
enum $7F951BF6BEB28F03A35ACB1A0B90C112 {kThemeDataFileType = 0x74686D65,kThemePlatinumFileType = 0x706C746E,kThemeCustomThemesFileType = 0x7363656E,kThemeSoundTrackFileType = 0x74736E64,};
enum $7FBC4E428363D1B4B37E93E5FAB05B2E {COM_PPP = 0x50505043,};
enum $7FD87024E3DCFC1573C5E5192BC9C124 {smKeyForceKeyScriptBit = 0x7,smKeyForceKeyScriptMask = 0x80,};
enum $7FDCD2BD7BCB2EFF4F58B0A742373EEC {kControlKindUserPane = 0x7570616E,};
enum $7FE044E4D7F852F540B5F40A228EA05A {kWindowCenterOnMainScreen = 0x1,kWindowCenterOnParentWindow = 0x2,kWindowCenterOnParentWindowScreen = 0x3,kWindowCascadeOnMainScreen = 0x4,kWindowCascadeOnParentWindow = 0x5,kWindowCascadeOnParentWindowScreen = 0x6,kWindowCascadeStartAtParentWindowScreen = 0xA,kWindowAlertPositionOnMainScreen = 0x7,kWindowAlertPositionOnParentWindow = 0x8,kWindowAlertPositionOnParentWindowScreen = 0x9,};
enum $7FF46A4D5ACD435A7CB860BE80C6C9C7 {kMonospacedNumbersSelector = 0x0,kProportionalNumbersSelector = 0x1,kThirdWidthNumbersSelector = 0x2,kQuarterWidthNumbersSelector = 0x3,};
enum $80042E239329A5D53959B93C979DB8B4 {bSourceIsBattery = 0x0,bSourceIsAC = 0x1,bSourceCanBeCharged = 0x2,bSourceIsUPS = 0x3,bSourceProvidesWarnLevels = 0x4,kSourceIsBatteryMask = 0x1,kSourceIsACMask = 0x2,kSourceCanBeChargedMask = 0x4,kSourceIsUPSMask = 0x8,kSourceProvidesWarnLevelsMask = 0x10,};
enum $80128D3C2087FE5A4E23517C0A21654F {kOSASelectComponentSpecificStart = 0x1001,};
enum $8032B31145A0FC9C9DA9796AA6C13271 {kDMNotifyRequestConnectionProbe = 0x0,kDMNotifyInstalled = 0x1,kDMNotifyEvent = 0x2,kDMNotifyRemoved = 0x3,kDMNotifyPrep = 0x4,kDMNotifyExtendEvent = 0x5,kDMNotifyDependents = 0x6,kDMNotifySuspendConfigure = 0x7,kDMNotifyResumeConfigure = 0x8,kDMNotifyRequestDisplayProbe = 0x9,kDMNotifyDisplayWillSleep = 0xA,kDMNotifyDisplayDidWake = 0xB,kExtendedNotificationProc = 0x10000,};
enum $803E1314D48F0C9DF1694F5B75DC685E {pMapSIG = 0x504D,pdSigWord = 0x5453,oldPMSigWord = 0x5453,newPMSigWord = 0x504D,};
enum $8046F6F70CC0DCD3F106A36C30F5CF7F {kOSARecordedText = 0x72656364,};
enum $80668F95DBA0778FCF31CFD751986CD9 {audioAllChannels = 0x0,audioLeftChannel = 0x1,audioRightChannel = 0x2,audioUnmuted = 0x0,audioMuted = 0x1,audioDoesMono = 0x1,audioDoesStereo = 0x2,audioDoesIndependentChannels = 0x4,};
enum $8073354537A795364153FFC697AFF032 {kOpaqueAnyID = 0x0,kOpaqueProcessID = 0x1,kOpaqueTaskID = 0x2,kOpaqueTimerID = 0x3,kOpaqueQueueID = 0x4,kOpaqueSemaphoreID = 0x5,kOpaqueCriticalRegionID = 0x6,kOpaqueCpuID = 0x7,kOpaqueAddressSpaceID = 0x8,kOpaqueEventID = 0x9,kOpaqueCoherenceID = 0xA,kOpaqueAreaID = 0xB,kOpaqueNotificationID = 0xC,kOpaqueConsoleID = 0xD,};
enum $807EA60E1C06F003BF102B45DDCFC30D {gestaltWorldScriptIIVersion = 0x646F7562,gestaltWorldScriptIIAttr = 0x77736174,gestaltWSIICanPrintWithoutPrGeneralBit = 0x0,};
enum $80B4F5118EAF32C095389BC3F899CD14 {kAESetPosition = 0x706F736E,kAEShadow = 0x73686164,kAEShowClipboard = 0x7368636C,kAEShutDown = 0x73687574,kAESleep = 0x736C6570,kAESmallCaps = 0x736D6370,kAESpecialClassProperties = 0x63402321,kAEStrikethrough = 0x7374726B,kAESubscript = 0x73627363,kAESuperscript = 0x73707363,kAETableSuite = 0x74626C73,kAETextSuite = 0x54455854,kAETransactionTerminated = 0x7474726D,kAEUnderline = 0x756E646C,kAEUndo = 0x756E646F,kAEWholeWordEquals = 0x77776571,kAEYes = 0x79657320,kAEZoom = 0x7A6F6F6D,};
enum $80BF0C8917E75603579C42292AFC0073 {kMiddleC = 0x3C,};
enum $80CC905675FBBA9CE111FA805C6BD313 {kExportedFolderAliasType = 0x66616574,kDropFolderAliasType = 0x66616472,kSharedFolderAliasType = 0x66617368,kMountedFolderAliasType = 0x66616D6E,};
enum $81141EEFE9583A73AD3C515976D5098B {kDefaultColorPickerWidth = 0x17F,kDefaultColorPickerHeight = 0xEE,};
enum $81232266A46B1ABA0B298AF2456AB2BD {kDigiHubMusicCD = 0x61756364,kDigiHubPictureCD = 0x70696364,kDigiHubVideoDVD = 0x76647664,kDigiHubBlankCD = 0x62636420,kDigiHubBlankDVD = 0x62647664,};
enum $81302A1F099C3ECCAA87F34B5DD60C66 {kAEDefaultTimeout = 0xFFFFFFFF,kNoTimeOut = 0xFFFFFFFE,};
enum $813E721ECD42D7158D1EF8D108BFBDC0 {kUIOptionAutoShowMenuBar = 0x1,kUIOptionDisableAppleMenu = 0x4,kUIOptionDisableProcessSwitch = 0x8,kUIOptionDisableForceQuit = 0x10,kUIOptionDisableSessionTerminate = 0x20,};
enum $8142DF7A6534400A2BF230BB1AB937A2 {errUnknownAttributeTag = 0xFFFFEB88,errMarginWilllNotFit = 0xFFFFEB87,errNotInImagingMode = 0xFFFFEB86,errAlreadyInImagingMode = 0xFFFFEB85,errEngineNotFound = 0xFFFFEB84,errIteratorReachedEnd = 0xFFFFEB83,errInvalidRange = 0xFFFFEB82,errOffsetNotOnElementBounday = 0xFFFFEB81,errNoHiliteText = 0xFFFFEB80,errEmptyScrap = 0xFFFFEB7F,errReadOnlyText = 0xFFFFEB7E,errUnknownElement = 0xFFFFEB7D,errNonContiuousAttribute = 0xFFFFEB7C,errCannotUndo = 0xFFFFEB7B,};
enum $81BDDBC3CB749FA41EC75C154809AD67 {kExtendedSoundBufferIsDiscontinuous = 0x1,kExtendedSoundBufferIsFirstBuffer = 0x2,};
enum $81C0B8F23CE92E5B7999C2C145DAFF7E {kICAPropertyCameraIcon = 0x69636F6E,kICAPropertyCameraSupportedMessages = 0x6D736773,};
enum $820037641D413EFF51E5D2B7A9BCC18B {kATSUUseLineControlWidth = 0x7FFFFFFF,};
enum $820DEEF22928D497885345B768D6BD14 {kEventParamImageSize = 0x696D737A,kEventParamViewSize = 0x7677737A,kEventParamLineSize = 0x6C6E737A,kEventParamOrigin = 0x6F72676E,};
enum $82361ACA885129B3BA2FFBC30CE9C7D4 {kLocaleLanguageMask = 0x1,kLocaleLanguageVariantMask = 0x2,kLocaleScriptMask = 0x4,kLocaleScriptVariantMask = 0x8,kLocaleRegionMask = 0x10,kLocaleRegionVariantMask = 0x20,kLocaleAllPartsMask = 0x3F,};
enum $824E76B1FE6C75092249DDDDCF57A98C {kHMStringItem = 0x1,kHMPictItem = 0x2,kHMStringResItem = 0x3,kHMTEResItem = 0x6,kHMSTRResItem = 0x7,kHMSkipItem = 0x100,kHMCompareItem = 0x200,kHMNamedResourceItem = 0x400,kHMTrackCntlItem = 0x800,};
enum $82CE925440FCEA4E83EDF6CF10782885 {IO_CacheOff = 0x0,IO_WriteThrough = 0x1,IO_CopyBack = 0x2,};
enum $82D1E6E6D578224BE82D48C2B6E7DE65 {mouseMovedMessage = 0xFA,suspendResumeMessage = 0x1,};
enum $82E33A2D3493331142DC1D4D8D9C49C0 {cmSigPS2CRDVMSizeType = 0x7073766D,cmSigVideoCardGammaType = 0x76636774,cmSigMakeAndModelType = 0x6D6D6F64,cmSigNativeDisplayInfoType = 0x6E64696E,cmSigMultiLocalizedUniCodeType = 0x6D6C7563,};
enum $82F155B15B968A73FA8DECBA986E0AA4 {kControlScrollTextBoxDelayBeforeAutoScrollTag = 0x7374646C,kControlScrollTextBoxDelayBetweenAutoScrollTag = 0x7363646C,kControlScrollTextBoxAutoScrollAmountTag = 0x73616D74,kControlScrollTextBoxContentsTag = 0x74726573,kControlScrollTextBoxAnimatingTag = 0x616E696D,};
enum $82F4B6A591AFE85C9EE95AAC9B96B6B1 {kICEditPreferenceEventClass = 0x49434170,kICEditPreferenceEvent = 0x49434170,keyICEditPreferenceDestination = 0x64657374,};
enum $82F95A9D3CCA30323417F37FA7DDBA96 {kFontCopyrightName = 0x0,kFontFamilyName = 0x1,kFontStyleName = 0x2,kFontUniqueName = 0x3,kFontFullName = 0x4,kFontVersionName = 0x5,kFontPostscriptName = 0x6,kFontTrademarkName = 0x7,kFontManufacturerName = 0x8,kFontDesignerName = 0x9,kFontDescriptionName = 0xA,kFontVendorURLName = 0xB,kFontDesignerURLName = 0xC,kFontLicenseDescriptionName = 0xD,kFontLicenseInfoURLName = 0xE,kFontLastReservedName = 0xFF,};
enum $830CA3C3D53095EC29BE6C332A550248 {kOSASelectSetSendProc = 0x401,kOSASelectGetSendProc = 0x402,kOSASelectSetCreateProc = 0x403,kOSASelectGetCreateProc = 0x404,kOSASelectSetDefaultTarget = 0x405,};
enum $83281B6B5144BFD16530DD5F5AE151CC {kPEFImpSymClassShift = 0x18,kPEFImpSymNameOffsetMask = 0xFFFFFF,kPEFImpSymMaxNameOffset = 0xFFFFFF,};
enum $832B785CBB4345B41C4A2D03633C199E {pComment = 0x636F6D74,pContainer = 0x63746E72,pContentSpace = 0x64776E64,pCreationDateOld = 0x63727464,pCreationDate = 0x61736364,pDescription = 0x64736372,pDisk = 0x63646973,pFolderOld = 0x63666F6C,pFolder = 0x61736472,pIconBitmap = 0x69696D67,pInfoWindow = 0x69776E64,pKind = 0x6B696E64,pLabelIndex = 0x6C616269,pModificationDateOld = 0x6D6F6464,pModificationDate = 0x61736D6F,pPhysicalSize = 0x70687973,pPosition = 0x706F736E,pIsSelected = 0x6973736C,pSize = 0x7074737A,pWindow = 0x6377696E,pPreferencesWindow = 0x70776E64,};
enum $83412CBDED55ED4D3DEF71A75727F572 {kOTSerialDefaultBaudRate = 0x4B00,kOTSerialDefaultDataBits = 0x8,kOTSerialDefaultStopBits = 0xA,kOTSerialDefaultParity = 0x0,kOTSerialDefaultHandshake = 0x0,kOTSerialDefaultOnChar = 0x11,kOTSerialDefaultOffChar = 0x13,kOTSerialDefaultSndBufSize = 0x400,kOTSerialDefaultRcvBufSize = 0x400,kOTSerialDefaultSndLoWat = 0x60,kOTSerialDefaultRcvLoWat = 0x1,kOTSerialDefaultRcvTimeout = 0xA,};
enum $8382CA0DB8F0B276C78948A48C035AF2 {kDragRegionAndImage = 0x10,};
enum $8386C4860B0CA83E5418A333B1DE6AB8 {gestaltControlMgrVersion = 0x636D7672,};
enum $83A5F4214B1C3BE1FB2B3E43EB4B732D {kOnSystemDisk = 0xFFFF8000,kOnAppropriateDisk = 0xFFFF8001,kSystemDomain = 0xFFFF8002,kLocalDomain = 0xFFFF8003,kNetworkDomain = 0xFFFF8004,kUserDomain = 0xFFFF8005,kClassicDomain = 0xFFFF8006,};
enum $83A6A524D121D0E8667A9D630C0AC5E7 {errKCNotAvailable = 0xFFFF9D35,errKCReadOnly = 0xFFFF9D34,errKCAuthFailed = 0xFFFF9D33,errKCNoSuchKeychain = 0xFFFF9D32,errKCInvalidKeychain = 0xFFFF9D31,errKCDuplicateKeychain = 0xFFFF9D30,errKCDuplicateCallback = 0xFFFF9D2F,errKCInvalidCallback = 0xFFFF9D2E,errKCDuplicateItem = 0xFFFF9D2D,errKCItemNotFound = 0xFFFF9D2C,errKCBufferTooSmall = 0xFFFF9D2B,errKCDataTooLarge = 0xFFFF9D2A,errKCNoSuchAttr = 0xFFFF9D29,errKCInvalidItemRef = 0xFFFF9D28,errKCInvalidSearchRef = 0xFFFF9D27,errKCNoSuchClass = 0xFFFF9D26,errKCNoDefaultKeychain = 0xFFFF9D25,errKCInteractionNotAllowed = 0xFFFF9D24,errKCReadOnlyAttr = 0xFFFF9D23,errKCWrongKCVersion = 0xFFFF9D22,errKCKeySizeNotAllowed = 0xFFFF9D21,errKCNoStorageModule = 0xFFFF9D20,errKCNoCertificateModule = 0xFFFF9D1F,errKCNoPolicyModule = 0xFFFF9D1E,errKCInteractionRequired = 0xFFFF9D1D,errKCDataNotAvailable = 0xFFFF9D1C,errKCDataNotModifiable = 0xFFFF9D1B,errKCCreateChainFailed = 0xFFFF9D1A,};
enum $83D7C57A8841AEE511044DD0C1855C26 {kPlotIconRefNormalFlags = 0x0,kPlotIconRefNoImage = 0x2,kPlotIconRefNoMask = 0x4,};
enum $83F008354B376D0C29D1AC2F7C6FD071 {tokLeftQuote = 0x1,tokRightQuote = 0x2,tokLeadPlacer = 0x3,tokLeader = 0x4,tokNonLeader = 0x5,tokZeroLead = 0x6,tokPercent = 0x7,tokPlusSign = 0x8,tokMinusSign = 0x9,tokThousands = 0xA,tokReserved = 0xB,tokSeparator = 0xC,tokEscape = 0xD,tokDecPoint = 0xE,tokEPlus = 0xF,tokEMinus = 0x10,tokMaxSymbols = 0x1F,curNumberPartsVersion = 0x1,};
enum $841872D43E3361CF54E747C7CDB540F6 {gestaltIconUtilitiesAttr = 0x69636F6E,gestaltIconUtilitiesPresent = 0x0,gestaltIconUtilitiesHas48PixelIcons = 0x1,gestaltIconUtilitiesHas32BitIcons = 0x2,gestaltIconUtilitiesHas8BitDeepMasks = 0x3,gestaltIconUtilitiesHasIconServices = 0x4,};
enum $848E3E2A486FA7EF9737B7A0CD42FEBF {kWindowPropertyPersistent = 0x1,};
enum $84C242BEA25FE377EB24CF870780C809 {noSynthFound = 0xFFFFFF10,synthOpenFailed = 0xFFFFFF0F,synthNotReady = 0xFFFFFF0E,bufTooSmall = 0xFFFFFF0D,voiceNotFound = 0xFFFFFF0C,incompatibleVoice = 0xFFFFFF0B,badDictFormat = 0xFFFFFF0A,badInputText = 0xFFFFFF09,};
enum $850DD87FCC1947A9D2983865EC013DAE {typeTIFF = 0x54494646,typeVersion = 0x76657273,};
enum $850F2953EBB380887D87C7CFB8D8266F {kControlListBoxProc = 0x160,kControlListBoxAutoSizeProc = 0x161,};
enum $852FA2732105F71179FD6CFADCB4008B {smsfIntellCP = 0x0,smsfSingByte = 0x1,smsfNatCase = 0x2,smsfContext = 0x3,smsfNoForceFont = 0x4,smsfB0Digits = 0x5,smsfAutoInit = 0x6,smsfUnivExt = 0x7,smsfSynchUnstyledTE = 0x8,smsfForms = 0xD,smsfLigatures = 0xE,smsfReverse = 0xF,smfShowIcon = 0x1F,smfDualCaret = 0x1E,smfNameTagEnab = 0x1D,smfUseAssocFontInfo = 0x1C,};
enum $8551AF0110C28CBC9844E11402941E9B {kVideoDefaultBus = 0x0,};
enum $85560B147DEBC22071E1E89E34047D26 {kCGConfigureForAppOnly = 0x0,kCGConfigureForSession = 0x1,kCGConfigurePermanently = 0x2,};
enum $855942DB10E2DA9D86518A97FFE63D4D {kURLInvalidURLReferenceError = 0xFFFF87CE,kURLProgressAlreadyDisplayedError = 0xFFFF87CD,kURLDestinationExistsError = 0xFFFF87CC,kURLInvalidURLError = 0xFFFF87CB,kURLUnsupportedSchemeError = 0xFFFF87CA,kURLServerBusyError = 0xFFFF87C9,kURLAuthenticationError = 0xFFFF87C8,kURLPropertyNotYetKnownError = 0xFFFF87C7,kURLUnknownPropertyError = 0xFFFF87C6,kURLPropertyBufferTooSmallError = 0xFFFF87C5,kURLUnsettablePropertyError = 0xFFFF87C4,kURLInvalidCallError = 0xFFFF87C3,kURLFileEmptyError = 0xFFFF87C1,kURLExtensionFailureError = 0xFFFF87BF,kURLInvalidConfigurationError = 0xFFFF87BE,kURLAccessNotAvailableError = 0xFFFF87BD,kURL68kNotSupportedError = 0xFFFF87BC,};
enum $8559F285428DDA8BF9CDD5ADAA147F38 {kControlEditTextStyleTag = 0x666F6E74,kControlEditTextTextTag = 0x74657874,kControlEditTextTEHandleTag = 0x7468616E,kControlEditTextKeyFilterTag = 0x666C7472,kControlEditTextSelectionTag = 0x73656C65,kControlEditTextPasswordTag = 0x70617373,};
enum $856BD70CF8AA982C500197ECA40434F8 {kMediaModeOn = 0x0,kMediaModeStandBy = 0x1,kMediaModeSuspend = 0x2,kMediaModeOff = 0x3,};
enum $85773EF235C429F3A8FA1EA8B3C6BC5B {kControlNoVariant = 0x0,kControlUsesOwningWindowsFontVariant = 0x8,};
enum $85890810F2BB655200B2ED33F98F3194 {cInsertionLoc = 0x696E736C,cInsertionPoint = 0x63696E73,cIntlText = 0x69747874,cIntlWritingCode = 0x696E746C,cItem = 0x6369746D,cLine = 0x636C696E,cLongDateTime = 0x6C647420,cLongFixed = 0x6C667864,cLongFixedPoint = 0x6C667074,cLongFixedRectangle = 0x6C667263,cLongInteger = 0x6C6F6E67,cLongPoint = 0x6C706E74,cLongRectangle = 0x6C726374,cMachineLoc = 0x6D4C6F63,cMenu = 0x636D6E75,cMenuItem = 0x636D656E,cObject = 0x636F626A,cObjectSpecifier = 0x6F626A20,cOpenableObject = 0x636F6F62,cOval = 0x636F766C,};
enum $85891A6AD796625CB2196D0F7A27D9D5 {kRangeSupportsSignal_0700_0300_Bit = 0x0,kRangeSupportsSignal_0714_0286_Bit = 0x1,kRangeSupportsSignal_1000_0400_Bit = 0x2,kRangeSupportsSignal_0700_0000_Bit = 0x3,kRangeSupportsSignal_0700_0300_Mask = 0x1,kRangeSupportsSignal_0714_0286_Mask = 0x2,kRangeSupportsSignal_1000_0400_Mask = 0x4,kRangeSupportsSignal_0700_0000_Mask = 0x8,};
enum $8615805619EA996624DB6A9C3E7C14FE {kDigitalSignalBit = 0x0,kAnalogSetupExpectedBit = 0x1,kDigitalSignalMask = 0x1,kAnalogSetupExpectedMask = 0x2,};
enum $863063BC0345B3D471E4FB0ED742E641 {T_DNRSTRINGTOADDRCOMPLETE = 0x10000001,T_DNRADDRTONAMECOMPLETE = 0x10000002,T_DNRSYSINFOCOMPLETE = 0x10000003,T_DNRMAILEXCHANGECOMPLETE = 0x10000004,T_DNRQUERYCOMPLETE = 0x10000005,};
enum $8631E80C8238BE4B0F2610C78EA6C7E9 {keyTransactionIDAttr = 0x7472616E,keyReturnIDAttr = 0x72746964,keyEventClassAttr = 0x6576636C,keyEventIDAttr = 0x65766964,keyAddressAttr = 0x61646472,keyOptionalKeywordAttr = 0x6F70746B,keyTimeoutAttr = 0x74696D6F,keyInteractLevelAttr = 0x696E7465,keyEventSourceAttr = 0x65737263,keyMissedKeywordAttr = 0x6D697373,keyOriginalAddressAttr = 0x66726F6D,keyAcceptTimeoutAttr = 0x6163746D,};
enum $8632DA84C4140D504EF05FA055DE9E8E {kDialogFontUseThemeFontIDMask = 0x80,};
enum $863A608EACAC6449DCEA0C776649C1AF {kAEMacPowerMgtEvt = 0x706D6774,kAEMacToWake = 0x77616B65,kAEMacLowPowerSaveData = 0x706D7364,kAEMacEmergencySleep = 0x656D736C,kAEMacEmergencyShutdown = 0x656D7364,};
enum $8688B6C5374D289F1DCBFFC93281630C {kHMDefaultSide = 0x0,kHMOutsideTopScriptAligned = 0x1,kHMOutsideLeftCenterAligned = 0x2,kHMOutsideBottomScriptAligned = 0x3,kHMOutsideRightCenterAligned = 0x4,kHMOutsideTopLeftAligned = 0x5,kHMOutsideTopRightAligned = 0x6,kHMOutsideLeftTopAligned = 0x7,kHMOutsideLeftBottomAligned = 0x8,kHMOutsideBottomLeftAligned = 0x9,kHMOutsideBottomRightAligned = 0xA,kHMOutsideRightTopAligned = 0xB,kHMOutsideRightBottomAligned = 0xC,kHMOutsideTopCenterAligned = 0xD,kHMOutsideBottomCenterAligned = 0xE,kHMInsideRightCenterAligned = 0xF,kHMInsideLeftCenterAligned = 0x10,kHMInsideBottomCenterAligned = 0x11,kHMInsideTopCenterAligned = 0x12,kHMInsideTopLeftCorner = 0x13,kHMInsideTopRightCorner = 0x14,kHMInsideBottomLeftCorner = 0x15,kHMInsideBottomRightCorner = 0x16,kHMAbsoluteCenterAligned = 0x17,};
enum $86897ABA6C0BEAF6144B313F86E65B7B {kTXNWillDefaultToATSUIMask = 0x1,kTXNWillDefaultToCarbonEventMask = 0x2,};
enum $86A746AD87D369D2186D31CF69A39068 {cmPS2CRDVMSizeTag = 0x7073766D,cmVideoCardGammaTag = 0x76636774,cmMakeAndModelTag = 0x6D6D6F64,cmProfileDescriptionMLTag = 0x6473636D,cmNativeDisplayInfoTag = 0x6E64696E,};
enum $86AC15EDE48D1B59E56DE49EE0671D3E {kWindowSimpleProc = 0x450,kWindowSimpleFrameProc = 0x451,};
enum $86E654E38874DA3366BC2AF63E2DB26F {cmEmbeddedProfile = 0x0,cmEmbeddedUse = 0x1,};
enum $86F63DAABF6DB2E863810FA19E8D9842 {kDictionaryFileType = 0x64696374,kDCMDictionaryHeaderSignature = 0x64696374,kDCMDictionaryHeaderVersion = 0x2,};
enum $87034888FEEBFA11E40ECBA8F657CCD4 {pStartupDisk = 0x7364736B,pTrash = 0x74727368,};
enum $87114BC07A1414CF818DB358B27C322E {kThemeTextColorTabFrontActive = 0x27,kThemeTextColorTabNonFrontActive = 0x28,kThemeTextColorTabNonFrontPressed = 0x29,kThemeTextColorTabFrontInactive = 0x2A,kThemeTextColorTabNonFrontInactive = 0x2B,kThemeTextColorIconLabelSelected = 0x2C,kThemeTextColorBevelButtonStickyActive = 0x2D,kThemeTextColorBevelButtonStickyInactive = 0x2E,};
enum $8738D3FFE8B55997E686F91E519B8E41 {kDMGenErr = 0xFFFFE7B4,kDMMirroringOnAlready = 0xFFFFE7B3,kDMWrongNumberOfDisplays = 0xFFFFE7B2,kDMMirroringBlocked = 0xFFFFE7B1,kDMCantBlock = 0xFFFFE7B0,kDMMirroringNotOn = 0xFFFFE7AF,kSysSWTooOld = 0xFFFFE7AE,kDMSWNotInitializedErr = 0xFFFFE7AD,kDMDriverNotDisplayMgrAwareErr = 0xFFFFE7AC,kDMDisplayNotFoundErr = 0xFFFFE7AB,kDMNotFoundErr = 0xFFFFE7AB,kDMDisplayAlreadyInstalledErr = 0xFFFFE7AA,kDMMainDisplayCannotMoveErr = 0xFFFFE7A9,kDMNoDeviceTableclothErr = 0xFFFFE7A9,kDMFoundErr = 0xFFFFE7A8,};
enum $8752FB6330ACCE12E5E7EEA03607D07B {cursorDoesAnimate = 0x1,cursorDoesHardware = 0x2,cursorDoesUnreadableScreenBits = 0x4,};
enum $875507F65E102A0631FE04553264E060 {kComponentDebugOption = 0x0,};
enum $875CCFBF850F015C3E8DEE1BB74C59D6 {kControlKindSlider = 0x736C6472,};
enum $8777FFE304C8CB6EDACC2515759EB209 {kMPLowLevelDebugger = 0x0,kMPMidLevelDebugger = 0x10000000,kMPHighLevelDebugger = 0x20000000,};
enum $8781740746BC1014ED22560B5750DD07 {gestaltTSMgrAttr = 0x74736D61,gestaltTSMDisplayMgrAwareBit = 0x0,gestaltTSMdoesTSMTEBit = 0x1,};
enum $8794BA5983E2316F888D4CF4CAC4BE89 {kPublicThemeFontCount = 0x11,};
enum $87A3968495F4796D445394E537B1212F {cmDeviceDBNotFoundErr = 0xFFFFEF7D,cmDeviceAlreadyRegistered = 0xFFFFEF7C,cmDeviceNotRegistered = 0xFFFFEF7B,cmDeviceProfilesNotFound = 0xFFFFEF7A,cmInternalCFErr = 0xFFFFEF79,};
enum $87A5FEEFCB001713CA7CFFFC80C61561 {kPolicyKCStopOn = 0x0,kNoneKCStopOn = 0x1,kFirstPassKCStopOn = 0x2,kFirstFailKCStopOn = 0x3,};
enum $87CF7011E3DB2326401331F90512ED7A {kControlScrollBarShowsArrowsTag = 0x6172726F,};
enum $87D8FB4BC9CB92C35FD621E05ED44517 {smSingleByte = 0x0,smFirstByte = 0xFFFFFFFF,smLastByte = 0x1,smMiddleByte = 0x2,};
enum $87EA63B36AC6249615DF27E4F3509D83 {cAliasFile = 0x616C6961,cApplicationFile = 0x61707066,cControlPanelFile = 0x63636476,cDeskAccessoryFile = 0x64616669,cDocumentFile = 0x646F6366,cFontFile = 0x666E7466,cSoundFile = 0x736E6466,cClippingFile = 0x636C7066,cContainer = 0x63746E72,cDesktop = 0x6364736B,cSharableContainer = 0x73637472,cDisk = 0x63646973,cFolder = 0x63666F6C,cSuitcase = 0x73746373,cAccessorySuitcase = 0x64737574,cFontSuitcase = 0x66737574,cTrash = 0x63747273,cDesktopPrinter = 0x64736B70,cPackage = 0x7061636B,cContentSpace = 0x64776E64,cContainerWindow = 0x63776E64,cInfoWindow = 0x69776E64,cSharingWindow = 0x73776E64,cStatusWindow = 0x71776E64,cClippingWindow = 0x6C776E64,cPreferencesWindow = 0x70776E64,cDTPWindow = 0x64747077,cProcess = 0x70726373,cAccessoryProcess = 0x70636461,cApplicationProcess = 0x70636170,cGroup = 0x73677270,cUser = 0x63757365,cSharingPrivileges = 0x70726976,cPreferences = 0x63707266,cLabel = 0x636C626C,cSound = 0x736E6420,cAliasList = 0x616C7374,cSpecialFolders = 0x7370666C,cOnlineDisk = 0x636F6473,cOnlineLocalDisk = 0x636C6473,cOnlineRemoteDisk = 0x63726473,cEntireContents = 0x65637473,cIconFamily = 0x6966616D,};
enum $87F7EA96BAAC937C35B0963A9B455DA5 {gestaltQuickdrawVersion = 0x71642020,gestaltOriginalQD = 0x0,gestalt8BitQD = 0x100,gestalt32BitQD = 0x200,gestalt32BitQD11 = 0x201,gestalt32BitQD12 = 0x220,gestalt32BitQD13 = 0x230,gestaltAllegroQD = 0x250,gestaltMacOSXQD = 0x300,};
enum $882ADC82034244AFFE570DD57A3BB1C0 {kNoUserAuthentication = 0x1,kPassword = 0x2,kEncryptPassword = 0x3,kTwoWayEncryptPassword = 0x6,};
enum $882E335BD166895EB3BB07B177635657 {kShowDiacriticsSelector = 0x0,kHideDiacriticsSelector = 0x1,kDecomposeDiacriticsSelector = 0x2,};
enum $883B7585B4D93D2BF8A69055FD2A75BF {kGenericPreferencesIconResource = 0xFFFFF07D,kGenericQueryDocumentIconResource = 0xFFFFBF86,kGenericExtensionIconResource = 0xFFFFBFE1,kSystemFolderIconResource = 0xFFFFF071,kHelpIconResource = 0xFFFFB0D1,kAppleMenuFolderIconResource = 0xFFFFF072,};
enum $88425C513B59EF7EE89C4EC621E12535 {dataOffsetFlag = 0x8000,};
enum $886E89D0A2610C43CB4011F0A0CCBF89 {kEventAppearanceScrollBarVariantChanged = 0x1,};
enum $889CF0C98C34ACB09B24F9996D867BE6 {kASSourceStyleUncompiledText = 0x0,kASSourceStyleNormalText = 0x1,kASSourceStyleLanguageKeyword = 0x2,kASSourceStyleApplicationKeyword = 0x3,kASSourceStyleComment = 0x4,kASSourceStyleLiteral = 0x5,kASSourceStyleUserSymbol = 0x6,kASSourceStyleObjectSpecifier = 0x7,kASNumberOfSourceStyles = 0x8,};
enum $88BEC6B29D455DE2FE7FAF191D79E4FF {kFSVolInfoNone = 0x0,kFSVolInfoCreateDate = 0x1,kFSVolInfoModDate = 0x2,kFSVolInfoBackupDate = 0x4,kFSVolInfoCheckedDate = 0x8,kFSVolInfoFileCount = 0x10,kFSVolInfoDirCount = 0x20,kFSVolInfoSizes = 0x40,kFSVolInfoBlocks = 0x80,kFSVolInfoNextAlloc = 0x100,kFSVolInfoRsrcClump = 0x200,kFSVolInfoDataClump = 0x400,kFSVolInfoNextID = 0x800,kFSVolInfoFinderInfo = 0x1000,kFSVolInfoFlags = 0x2000,kFSVolInfoFSInfo = 0x4000,kFSVolInfoDriveInfo = 0x8000,kFSVolInfoGettableInfo = 0xFFFF,kFSVolInfoSettableInfo = 0x3004,};
enum $88D06B5103F7D4A3795441957757BCBC {kTopLeftTipPointsLeftVariant = 0x0,kTopLeftTipPointsUpVariant = 0x1,kTopRightTipPointsUpVariant = 0x2,kTopRightTipPointsRightVariant = 0x3,kBottomRightTipPointsRightVariant = 0x4,kBottomRightTipPointsDownVariant = 0x5,kBottomLeftTipPointsDownVariant = 0x6,kBottomLeftTipPointsLeftVariant = 0x7,kBalloonVariantCount = 0x8,};
enum $88D4A60280BA208200948E34A44DA716 {FLUSHR = 0x1,FLUSHW = 0x2,FLUSHRW = 0x3,};
enum $88D6673EE6C10CD745A9473DE49A9091 {kEventVolumeMounted = 0x1,kEventVolumeUnmounted = 0x2,};
enum $88F1EF59BE90745493EA492334412F77 {cmMacintosh = 0x4150504C,cmMicrosoft = 0x4D534654,cmSolaris = 0x53554E57,cmSiliconGraphics = 0x53474920,cmTaligent = 0x54474E54,};
enum $88F5D5C20FF5C6F36D3C544573ED36C3 {kPEFTag1 = 0x4A6F7921,kPEFTag2 = 0x70656666,kPEFVersion = 0x1,};
enum $89014B5696B23340C5C8539B64398289 {smWordSelectTable = 0x0,smWordWrapTable = 0x1,smNumberPartsTable = 0x2,smUnTokenTable = 0x3,smWhiteSpaceList = 0x4,iuWordSelectTable = 0x0,iuWordWrapTable = 0x1,iuNumberPartsTable = 0x2,iuUnTokenTable = 0x3,iuWhiteSpaceList = 0x4,};
enum $8935E574E8FDDCFD9BD79995C6776A3E {kICADevice = 0x69636476,kICADeviceCamera = 0x636D7261,kICADeviceScanner = 0x7363616E,kICADeviceMFP = 0x6D667020,kICAList = 0x6F626A6C,kICADirectory = 0x64697265,kICAFile = 0x66696C65,kICAFileImage = 0x696D6167,kICAFileMovie = 0x6D6F6F76,kICAFileAudio = 0x6175646F,kICAFileFirmware = 0x6669726D,kICAFileOther = 0x6F746865,};
enum $8941C85A19D58F13EE88B3C85341022C {kTextEncodingEUC_JP = 0x920,kTextEncodingEUC_CN = 0x930,kTextEncodingEUC_TW = 0x931,kTextEncodingEUC_KR = 0x940,};
enum $8961430EE50E903D26EF000ECD665712 {kLSAcceptDefault = 0x1,kLSAcceptAllowLoginUI = 0x2,};
enum $89B0F35B27E22E92B56CED74265435C2 {kWindowFloatSideProc = 0x431,kWindowFloatSideGrowProc = 0x433,kWindowFloatSideVertZoomProc = 0x435,kWindowFloatSideVertZoomGrowProc = 0x437,kWindowFloatSideHorizZoomProc = 0x439,kWindowFloatSideHorizZoomGrowProc = 0x43B,kWindowFloatSideFullZoomProc = 0x43D,kWindowFloatSideFullZoomGrowProc = 0x43F,};
enum $89B8FA63C039A7EADCBC5A9802394822 {kControlListBoxDoubleClickTag = 0x64626C63,kControlListBoxLDEFTag = 0x6C646566,};
enum $89D722DEA9D8228358FF65E641FB59D1 : unsigned __int32 {kT_UNSPEC = 0xFFFFFFFD,T_ALLOPT = 0x0,};
enum $89DE2EC7A1992B75EC4246BBCA95852F {popupTitleBold = 0x100,popupTitleItalic = 0x200,popupTitleUnderline = 0x400,popupTitleOutline = 0x800,popupTitleShadow = 0x1000,popupTitleCondense = 0x2000,popupTitleExtend = 0x4000,popupTitleNoStyle = 0x8000,};
enum $89EA878A7E1E4081D322E88840A43D15 {gestaltATAAttr = 0x61746120,gestaltATAPresent = 0x0,};
enum $8A0661E97C5E67754D33CB96D6D3190F {mBaseOffset = 0x1,mRowBytes = 0x2,mBounds = 0x3,mVersion = 0x4,mHRes = 0x5,mVRes = 0x6,mPixelType = 0x7,mPixelSize = 0x8,mCmpCount = 0x9,mCmpSize = 0xA,mPlaneBytes = 0xB,mVertRefRate = 0xE,mVidParams = 0x1,mTable = 0x2,mPageCnt = 0x3,mDevType = 0x4,oneBitMode = 0x80,twoBitMode = 0x81,fourBitMode = 0x82,eightBitMode = 0x83,};
enum $8A1EB3A3B3C276E8089B4252BD218943 {knoGroup = 0x0,};
enum $8A48E5F0B5A905E2E8AC21AF0255C67D {kScrapFlavorSizeUnknown = 0xFFFFFFFF,};
enum $8A8A02C72A64C957732091530636DE08 {kICAPropertyCameraBatteryLevel = 0x35303031,kICAPropertyCameraFunctionalMode = 0x35303032,kICAPropertyCameraImageSize = 0x35303033,kICAPropertyCameraCompressionSetting = 0x35303034,kICAPropertyCameraWhiteBalance = 0x35303035,kICAPropertyCameraRGBGain = 0x35303036,kICAPropertyCameraFNumber = 0x35303037,kICAPropertyCameraFocalLength = 0x35303038,kICAPropertyCameraFocusDistance = 0x35303039,kICAPropertyCameraFocusMode = 0x35303041,kICAPropertyCameraExposureMeteringMode = 0x35303042,kICAPropertyCameraFlashMode = 0x35303043,kICAPropertyCameraExposureTime = 0x35303044,kICAPropertyCameraExposureProgramMode = 0x35303045,kICAPropertyCameraExposureIndex = 0x35303046,kICAPropertyCameraExposureBiasCompensation = 0x35303130,kICAPropertyCameraDateTime = 0x35303131,kICAPropertyCameraCaptureDelay = 0x35303132,kICAPropertyCameraStillCaptureMode = 0x35303133,kICAPropertyCameraContrast = 0x35303134,kICAPropertyCameraSharpness = 0x35303135,kICAPropertyCameraDigitalZoom = 0x35303136,kICAPropertyCameraEffectMode = 0x35303137,kICAPropertyCameraBurstNumber = 0x35303138,kICAPropertyCameraBurstInterval = 0x35303139,kICAPropertyCameraTimelapseNumber = 0x35303141,kICAPropertyCameraTimelapseInterval = 0x35303142,kICAPropertyCameraFocusMeteringMode = 0x35303143,};
enum $8AA2EA001A060AA0EFE9BE9FA12820E3 {kOSASelectLoadExecute = 0x601,kOSASelectCompileExecute = 0x602,kOSASelectDoScript = 0x603,};
enum $8AA633FCFA1D9FD646CF7708E54681B7 {kCustomBadgeResourceType = 0x62616467,kCustomBadgeResourceID = 0xFFFFBFB9,kCustomBadgeResourceVersion = 0x0,};
enum $8ABDBD1C3DE96ED49E011A50928BF57C {kControlTabListResType = 0x74616223,kControlListDescResType = 0x6C646573,};
enum $8AC69FF40C1F0B169ED47B0063BA696F {kAppleManufacturer = 0x6170706C,kComponentResourceType = 0x74686E67,kComponentAliasResourceType = 0x74686761,};
enum $8ACF0ECEB182CD7FAB1E09D59A3D0BB7 {dsBadLibrary = 0x3F2,dsMixedModeFailure = 0x3F3,};
enum $8AD6E065E9DA41F10E5A63CBAFCB0C5E {kKERNLineStart = 0x1,kKERNLineEndKerning = 0x2,kKERNNoCrossKerning = 0x4,kKERNNotesRequested = 0x8,kKERNNoStakeNote = 0x1,kKERNCrossStreamResetNote = 0x2,kKERNNotApplied = 0x1,};
enum $8ADC5870EB51CA691E1E866FDFC9FCF5 {stdQLength = 0x80,};
enum $8AEA82399091E82695C5898D421125C7 {kInternetLocationHTTPIcon = 0x696C6874,kInternetLocationFTPIcon = 0x696C6674,kInternetLocationAppleShareIcon = 0x696C6166,kInternetLocationAppleTalkZoneIcon = 0x696C6174,kInternetLocationFileIcon = 0x696C6669,kInternetLocationMailIcon = 0x696C6D61,kInternetLocationNewsIcon = 0x696C6E77,kInternetLocationNSLNeighborhoodIcon = 0x696C6E73,kInternetLocationGenericIcon = 0x696C6765,};
enum $8AF6E7F2626BFF759844C59B98E0CF1A {os2FontTableTag = 0x4F532F32,};
enum $8B11D6C86727B3534EB41893F7C24CCB {bTakeActiveEvent = 0xF,bHandleAERecording = 0x10,bScriptMask = 0x7F00,bLanguageMask = 0xFF,bScriptLanguageMask = 0x7FFF,};
struct $8B195344230CD50436E2D36A83FD9340 {CFXMLEntityTypeCode entityType;};
enum $8B45090A886AD5148A7928FDD00332FF {cClosure = 0x636C7372,cRawData = 0x72646174,cStringClass = 0x54455854,cNumber = 0x6E6D6272,cListElement = 0x63656C6D,cListOrRecord = 0x6C722020,cListOrString = 0x6C732020,cListRecordOrString = 0x6C727320,cNumberOrString = 0x6E732020,cNumberOrDateTime = 0x6E642020,cNumberDateTimeOrString = 0x6E647320,cAliasOrString = 0x73662020,cSeconds = 0x73636E64,typeSound = 0x736E6420,enumBooleanValues = 0x626F6F76,kAETrue = 0x74727565,kAEFalse = 0x66616C73,enumMiscValues = 0x6D697363,kASCurrentApplication = 0x63757261,formUserPropertyID = 0x75737270,};
enum $8B51B4969E45D374F089FAAEE2CA2A71 {kNSLDefaultListSize = 0x100,};
enum $8B690A7B67366DF4B1A462659604196E {kPMPrinterIdle = 0x3,kPMPrinterProcessing = 0x4,kPMPrinterStopped = 0x5,};
enum $8B91A73B8AF2D8848CD6119272C14B0D {kUCTSNoKeysAddedToObjectErr = 0xFFFF9D02,kUCTSSearchListErr = 0xFFFF9D01,};
enum $8BB14BDDAB6147BB62B9A1E2594C2D60 {kPEFRelocSetPosMaxOffset = 0x3FFFFFF,};
enum $8BD9DAC327CF1DCBA313B67285FDB4D7 {kICAttrLockedBit = 0x0,kICAttrVolatileBit = 0x1,};
enum $8C0204C4F76E73A5AFA9F604EEA872E3 {keyASPrepositionAt = 0x61742020,keyASPrepositionIn = 0x696E2020,keyASPrepositionFrom = 0x66726F6D,keyASPrepositionFor = 0x666F7220,keyASPrepositionTo = 0x746F2020,keyASPrepositionThru = 0x74687275,keyASPrepositionThrough = 0x74686768,keyASPrepositionBy = 0x62792020,keyASPrepositionOn = 0x6F6E2020,keyASPrepositionInto = 0x696E746F,keyASPrepositionOnto = 0x6F6E746F,keyASPrepositionBetween = 0x6274776E,keyASPrepositionAgainst = 0x61677374,keyASPrepositionOutOf = 0x6F75746F,keyASPrepositionInsteadOf = 0x6973746F,keyASPrepositionAsideFrom = 0x61736466,keyASPrepositionAround = 0x61726E64,keyASPrepositionBeside = 0x62736964,keyASPrepositionBeneath = 0x626E7468,keyASPrepositionUnder = 0x756E6472,};
enum $8C048F35019ADD244B798C7B4217C80F {kATSCubicCurveType = 0x1,kATSQuadCurveType = 0x2,kATSOtherCurveType = 0x3,};
enum $8C1170B447897A737FD6FDFD0C134857 {kWindowActivationScopeNone = 0x0,kWindowActivationScopeIndependent = 0x1,kWindowActivationScopeAll = 0x2,};
enum $8C27ABDD7F778AF7A2CDE8078D8EB8C4 {icNoPerm = 0x0,icReadOnlyPerm = 0x1,icReadWritePerm = 0x2,};
enum $8C3160D5B07095881A649D5B5E6C135D {kAppleScriptBadgeIcon = 0x73637270,kLockedBadgeIcon = 0x6C626467,kMountedBadgeIcon = 0x6D626467,kSharedBadgeIcon = 0x73626467,kAliasBadgeIcon = 0x61626467,kAlertCautionBadgeIcon = 0x63626467,};
enum $8C536FC47949B59C62B0960E380C8D76 {kDragRegionBegin = 0x1,kDragRegionDraw = 0x2,kDragRegionHide = 0x3,kDragRegionIdle = 0x4,kDragRegionEnd = 0x5,};
enum $8C59FE90D052E75878F58D2827A116B7 {kComponentOpenSelect = 0xFFFFFFFF,kComponentCloseSelect = 0xFFFFFFFE,kComponentCanDoSelect = 0xFFFFFFFD,kComponentVersionSelect = 0xFFFFFFFC,kComponentRegisterSelect = 0xFFFFFFFB,kComponentTargetSelect = 0xFFFFFFFA,kComponentUnregisterSelect = 0xFFFFFFF9,kComponentGetMPWorkFunctionSelect = 0xFFFFFFF8,kComponentExecuteWiredActionSelect = 0xFFFFFFF7,kComponentGetPublicResourceSelect = 0xFFFFFFF6,};
enum $8C929CB31F1692EFBA7170B61C34113E {kAESocks4Protocol = 0x4,kAESocks5Protocol = 0x5,};
enum $8C998D00B82013AAED6948BEB3BEE9E4 {kDragControlEntireControl = 0x0,kDragControlIndicator = 0x1,};
enum $8CA7965A9B6D5E3A16AE5ABDCA34C355 {kEnetPacketHeaderLength = 0xE,kEnetTSDU = 0x5EA,kTokenRingTSDU = 0x116A,kFDDITSDU = 0x116A,k8022SAPLength = 0x1,k8022BasicHeaderLength = 0x3,k8022SNAPHeaderLength = 0x8,};
enum $8CB00DF1AD530EC59D0F6D0F494FA746 {kSoundAudioCodecPropertyWritableFlag = 0x1,};
enum $8CB336AC7D24269B64F74014C25E2CF5 {kCompiledCFragArch = 0x70777063,};
enum $8CB50D085181832D0B273A71794FB966 {kHRLookingForHTMLSource = 0x1,kHRLookingForImage = 0x2,kHRLookingForEmbedded = 0x3,kHRLookingForImageMap = 0x4,kHRLookingForFrame = 0x5,};
enum $8CD864434FB05746BCEE03D3C5FDB7FD {kModemOutOfMemory = 0xFFFFC950,kModemPreferencesMissing = 0xFFFFC94F,kModemScriptMissing = 0xFFFFC94E,};
enum $8D181163D962FD5671CB36663115CFDB : unsigned __int32 {cmProfileMajorVersionMask = 0xFF000000,cmCurrentProfileMajorVersion = 0x2000000,};
enum $8D26E145D92A22FB9DD469CC99D03694 : unsigned __int32 {kCFragResourceType = 0x63667267,kCFragResourceID = 0x0,kCFragLibraryFileType = 0x73686C62,kCFragAllFileTypes = 0xFFFFFFFF,};
enum $8D4D07E192BE4DF49363A655628BC0D2 {kDisableHorizontalSyncBit = 0x0,kDisableVerticalSyncBit = 0x1,kDisableCompositeSyncBit = 0x2,kEnableSyncOnBlue = 0x3,kEnableSyncOnGreen = 0x4,kEnableSyncOnRed = 0x5,kNoSeparateSyncControlBit = 0x6,kTriStateSyncBit = 0x7,kHorizontalSyncMask = 0x1,kVerticalSyncMask = 0x2,kCompositeSyncMask = 0x4,kDPMSSyncMask = 0x7,kTriStateSyncMask = 0x80,kSyncOnBlueMask = 0x8,kSyncOnGreenMask = 0x10,kSyncOnRedMask = 0x20,kSyncOnMask = 0x38,};
enum $8DB1486E3E31955C12E9662A69CEA64A {kOSAModeDontGetDataForArguments = 0x40000,};
enum $8DB35FE5B0E11FAC891D260488BB5F46 {kCFPropertyListImmutable = 0x0,kCFPropertyListMutableContainers = 0x1,kCFPropertyListMutableContainersAndLeaves = 0x2,};
enum $8DBAB3A5C4B415392B13308397874646 {gestaltMultipleUsersState = 0x6D666472,};
enum $8DC93DFE83BD80814859139A2424B481 {kScrapFlavorMaskNone = 0x0,kScrapFlavorMaskSenderOnly = 0x1,kScrapFlavorMaskTranslated = 0x2,};
enum $8DCD112996BD8C3055C5EE9961EE3635 {smVersion = 0x0,smMunged = 0x2,smEnabled = 0x4,smBidirect = 0x6,smFontForce = 0x8,smIntlForce = 0xA,smForced = 0xC,smDefault = 0xE,smPrint = 0x10,smSysScript = 0x12,smLastScript = 0x14,smKeyScript = 0x16,smSysRef = 0x18,smKeyCache = 0x1A,smKeySwap = 0x1C,smGenFlags = 0x1E,smOverride = 0x20,smCharPortion = 0x22,smDoubleByte = 0x24,smKCHRCache = 0x26,smRegionCode = 0x28,smKeyDisableState = 0x2A,};
enum $8DF4EA04B3357483FC84B171A0661DE7 {smChinese = 0x2,smRussian = 0x7,smLaotian = 0x16,smAmharic = 0x1C,smSlavic = 0x1D,smEastEurRoman = 0x1D,smSindhi = 0x1F,smKlingon = 0x20,};
enum $8E088D1161B66E8C5A08A9EA5FE8F516 {kAEGetPrivilegeSelection = 0x73707276,kAEGetSuiteInfo = 0x67747369,kAEGreaterThan = 0x3E202020,kAEGreaterThanEquals = 0x3E3D2020,kAEGrow = 0x67726F77,kAEHidden = 0x6869646E,kAEHiQuality = 0x68697175,kAEImageGraphic = 0x696D6772,kAEIsUniform = 0x6973756E,kAEItalic = 0x6974616C,kAELeftJustified = 0x6C656674,kAELessThan = 0x3C202020,kAELessThanEquals = 0x3C3D2020,kAELowercase = 0x6C6F7763,kAEMakeObjectsVisible = 0x6D766973,kAEMiscStandards = 0x6D697363,kAEModifiable = 0x6D6F6466,kAEMove = 0x6D6F7665,kAENo = 0x6E6F2020,kAENoArrow = 0x61726E6F,};
enum $8E14002F3191C763C5987D963EBC9A56 {sizeof_sfntVariationAxis = 0x14,};
enum $8E1B7E8AF3D33A9C350C55B9BFBFA7D7 {kThemeStateDisabled = 0x0,};
enum $8E378796D9B27A0F0F3B65CDE1C24332 {ctrlItem = 0x4,btnCtrl = 0x0,chkCtrl = 0x1,radCtrl = 0x2,resCtrl = 0x3,statText = 0x8,editText = 0x10,iconItem = 0x20,picItem = 0x40,userItem = 0x0,itemDisable = 0x80,};
enum $8E5C0A03518548F808E418C553F52984 {kOSAErrorPartialResult = 0x70746C72,};
enum $8EB5A1135014ED1FF1B9439CFC25801A {flavorSenderOnly = 0x1,flavorSenderTranslated = 0x2,flavorNotSaved = 0x4,flavorSystemTranslated = 0x100,flavorDataPromised = 0x200,};
enum $8EBEE474E50560E939E9ACC9FF50999A {kUserNameAndPasswordFlag = 0x1,};
enum $8ED5D4216805043E7385FEFB2F76D95D {kDDCForceReadBit = 0x0,kDDCForceReadMask = 0x1,};
enum $8ED842F5F25F9C1991A7C4338A0B924C {kM68kISA = 0x0,kPowerPCISA = 0x1,};
enum $8EE074B8B3EDE31FEBBC7836A18BD301 {kUCHighSurrogateRangeStart = 0xD800,kUCHighSurrogateRangeEnd = 0xDBFF,kUCLowSurrogateRangeStart = 0xDC00,kUCLowSurrogateRangeEnd = 0xDFFF,};
enum $8F019CD0598CF9A91DA4DC91CE31AB25 {kDataBrowserTableViewSelectionColumn = 0x10000,};
enum $8F4C411F93794C8B00BF3FF6BE5E8636 {typeLAMorphemeBundle = 0x7265636F,typeLAMorphemePath = 0x7265636F,typeLAMorpheme = 0x6C697374,typeLAHomograph = 0x6C697374,};
enum $8F60482D68E161FEEA31FAA7402CDD1A {kBig5_BasicVariant = 0x0,kBig5_StandardVariant = 0x1,kBig5_ETenVariant = 0x2,};
enum $8F6C2958AAF03F02C8D077C7133019FC {kThemeMetricDisclosureButtonHeight = 0x11,kThemeMetricRoundButtonSize = 0x12,kThemeMetricSmallCheckBoxHeight = 0x15,kThemeMetricDisclosureButtonWidth = 0x16,kThemeMetricSmallDisclosureButtonHeight = 0x17,kThemeMetricSmallDisclosureButtonWidth = 0x18,kThemeMetricPaneSplitterHeight = 0x1D,kThemeMetricSmallPushButtonHeight = 0x23,kThemeMetricSmallRadioButtonHeight = 0x24,kThemeMetricRelevanceIndicatorHeight = 0x25,kThemeMetricLargeRoundButtonSize = 0x28,kThemeMetricSmallHSliderHeight = 0x2B,kThemeMetricSmallHSliderTickHeight = 0x2C,kThemeMetricSmallVSliderWidth = 0x2F,kThemeMetricSmallVSliderTickWidth = 0x30,kThemeMetricSmallCheckBoxWidth = 0x33,kThemeMetricSmallRadioButtonWidth = 0x35,kThemeMetricSmallHSliderMinThumbWidth = 0x36,kThemeMetricSmallVSliderMinThumbHeight = 0x37,kThemeMetricSmallHSliderTickOffset = 0x38,kThemeMetricSmallVSliderTickOffset = 0x39,};
enum $8F7C34845D7056E9B3DC29E5DE2A79BE {DL_PROMISC_OFF = 0x0,};
enum $8F974BCF93D03EEF749003DE86765FBE {kTXNAutoIndentOff = 0x0,kTXNAutoIndentOn = 0x1,};
enum $8FF8A5014CABE0447E8D5FBC40A2CF05 {pNewElementLoc = 0x706E656C,pPenColor = 0x7070636C,pPenPattern = 0x70707061,pPenWidth = 0x70707764,pPixelDepth = 0x70647074,pPointList = 0x70746C74,pPointSize = 0x7074737A,pProtection = 0x7070726F,pRotation = 0x70726F74,pScale = 0x7073636C,pScript = 0x73637074,pScriptTag = 0x70736374,pSelected = 0x73656C63,pSelection = 0x73656C65,pStartAngle = 0x70616E67,pStartPoint = 0x70737470,pTextColor = 0x70747863,pTextFont = 0x70747866,pTextItemDelimiters = 0x7478646C,pTextPointSize = 0x70747073,};
enum $9017E3E1B2E0E25DAEC8E0E5E4FC1D73 {gestaltAVLTreeAttr = 0x74726565,gestaltAVLTreePresentBit = 0x0,gestaltAVLTreeSupportsHandleBasedTreeBit = 0x1,gestaltAVLTreeSupportsTreeLockingBit = 0x2,};
enum $9029BCBD8FCB6B6E7B04648E45C7EAD9 {kTXNSelectionOn = 0x1,kTXNSelectionOff = 0x0,};
enum $9030F68C3BF1A67F5647AD6B2AA70878 {sizeof_sfntCMapExtendedSubHeader = 0xC,};
enum $9041B80F0140AC680A00CFDA897799FA {kEventToolbarGetDefaultIdentifiers = 0x1,kEventToolbarGetAllowedIdentifiers = 0x2,kEventToolbarCreateItemWithIdentifier = 0x3,kEventToolbarCreateItemFromDrag = 0x4,};
enum $9042687E7B91F0D398CDB53579A9082B {goodbye = 0xFFFFFFFF,killCode = 0x1,accEvent = 0x40,accRun = 0x41,accCursor = 0x42,accMenu = 0x43,accUndo = 0x44,accCut = 0x46,accCopy = 0x47,accPaste = 0x48,accClear = 0x49,};
enum $907B2FE18A21FC05B47F55F7CEFEA32F {kDCMAllowListing = 0x0,kDCMProhibitListing = 0x1,};
enum $90A172B1F531D2E2A5877D8C8A064F8B {kControlDataBrowserIncludesFrameAndFocusTag = 0x62726472,kControlDataBrowserKeyFilterTag = 0x666C7472,kControlDataBrowserEditTextKeyFilterTag = 0x666C7472,kControlDataBrowserEditTextValidationProcTag = 0x76616C69,};
enum $90E05716757C219080C40353374456CF {kNoCJKSymbolAlternativesSelector = 0x0,kCJKSymbolAltOneSelector = 0x1,kCJKSymbolAltTwoSelector = 0x2,kCJKSymbolAltThreeSelector = 0x3,kCJKSymbolAltFourSelector = 0x4,kCJKSymbolAltFiveSelector = 0x5,};
enum $90E7AC47D02176A0B28F0DC0F29F1AE7 {gestaltExtToolboxTable = 0x78747474,};
enum $912A44DD26E5726366A36950911A19AD {kPPPConnectionStatusIdle = 0x1,kPPPConnectionStatusConnecting = 0x2,kPPPConnectionStatusConnected = 0x3,kPPPConnectionStatusDisconnecting = 0x4,};
enum $9138E2B321B6861D195ED2CAE01BC233 {errASCantConsiderAndIgnore = 0xFFFFF560,errASCantCompareMoreThan32k = 0xFFFFF55F,errASTerminologyNestingTooDeep = 0xFFFFF538,errASIllegalFormalParameter = 0xFFFFF537,errASParameterNotForEvent = 0xFFFFF536,errASNoResultReturned = 0xFFFFF535,errASInconsistentNames = 0xFFFFF524,};
enum $91A6E70BD202D81D606923A89D4F66AC {kbSCSIDisableAutosense = 0x1D,kbSCSIFlagReservedA = 0x1C,kbSCSIFlagReserved0 = 0x1B,kbSCSICDBLinked = 0x1A,kbSCSIQEnable = 0x19,kbSCSICDBIsPointer = 0x18,kbSCSIFlagReserved1 = 0x17,kbSCSIInitiateSyncData = 0x16,kbSCSIDisableSyncData = 0x15,kbSCSISIMQHead = 0x14,kbSCSISIMQFreeze = 0x13,kbSCSISIMQNoFreeze = 0x12,kbSCSIDoDisconnect = 0x11,kbSCSIDontDisconnect = 0x10,kbSCSIDataReadyForDMA = 0xF,kbSCSIFlagReserved3 = 0xE,kbSCSIDataPhysical = 0xD,kbSCSISensePhysical = 0xC,kbSCSIFlagReserved5 = 0xB,kbSCSIFlagReserved6 = 0xA,kbSCSIFlagReserved7 = 0x9,kbSCSIFlagReserved8 = 0x8,kbSCSIDataBufferValid = 0x7,kbSCSIStatusBufferValid = 0x6,kbSCSIMessageBufferValid = 0x5,kbSCSIFlagReserved9 = 0x4,};
enum $91C30D94231B4D4A2E98BF5DB11DD00B {kDataBrowserListViewAppendColumn = 0xFFFFFFFF,};
enum $91C73EDC2D04F9EDE8BC99C08FBDFDF3 {kFontEnglishLanguage = 0x0,kFontFrenchLanguage = 0x1,kFontGermanLanguage = 0x2,kFontItalianLanguage = 0x3,kFontDutchLanguage = 0x4,kFontSwedishLanguage = 0x5,kFontSpanishLanguage = 0x6,kFontDanishLanguage = 0x7,kFontPortugueseLanguage = 0x8,kFontNorwegianLanguage = 0x9,kFontHebrewLanguage = 0xA,kFontJapaneseLanguage = 0xB,kFontArabicLanguage = 0xC,kFontFinnishLanguage = 0xD,kFontGreekLanguage = 0xE,kFontIcelandicLanguage = 0xF,kFontMalteseLanguage = 0x10,kFontTurkishLanguage = 0x11,kFontCroatianLanguage = 0x12,kFontTradChineseLanguage = 0x13,kFontUrduLanguage = 0x14,kFontHindiLanguage = 0x15,kFontThaiLanguage = 0x16,kFontKoreanLanguage = 0x17,kFontLithuanianLanguage = 0x18,kFontPolishLanguage = 0x19,kFontHungarianLanguage = 0x1A,kFontEstonianLanguage = 0x1B,kFontLettishLanguage = 0x1C,kFontLatvianLanguage = 0x1C,kFontSaamiskLanguage = 0x1D,kFontLappishLanguage = 0x1D,kFontFaeroeseLanguage = 0x1E,kFontFarsiLanguage = 0x1F,kFontPersianLanguage = 0x1F,kFontRussianLanguage = 0x20,kFontSimpChineseLanguage = 0x21,kFontFlemishLanguage = 0x22,kFontIrishLanguage = 0x23,kFontAlbanianLanguage = 0x24,kFontRomanianLanguage = 0x25,kFontCzechLanguage = 0x26,kFontSlovakLanguage = 0x27,kFontSlovenianLanguage = 0x28,kFontYiddishLanguage = 0x29,kFontSerbianLanguage = 0x2A,kFontMacedonianLanguage = 0x2B,kFontBulgarianLanguage = 0x2C,kFontUkrainianLanguage = 0x2D,kFontByelorussianLanguage = 0x2E,kFontUzbekLanguage = 0x2F,kFontKazakhLanguage = 0x30,kFontAzerbaijaniLanguage = 0x31,kFontAzerbaijanArLanguage = 0x32,kFontArmenianLanguage = 0x33,kFontGeorgianLanguage = 0x34,kFontMoldavianLanguage = 0x35,kFontKirghizLanguage = 0x36,kFontTajikiLanguage = 0x37,kFontTurkmenLanguage = 0x38,kFontMongolianLanguage = 0x39,kFontMongolianCyrLanguage = 0x3A,kFontPashtoLanguage = 0x3B,kFontKurdishLanguage = 0x3C,kFontKashmiriLanguage = 0x3D,kFontSindhiLanguage = 0x3E,kFontTibetanLanguage = 0x3F,kFontNepaliLanguage = 0x40,kFontSanskritLanguage = 0x41,kFontMarathiLanguage = 0x42,kFontBengaliLanguage = 0x43,kFontAssameseLanguage = 0x44,kFontGujaratiLanguage = 0x45,kFontPunjabiLanguage = 0x46,kFontOriyaLanguage = 0x47,kFontMalayalamLanguage = 0x48,kFontKannadaLanguage = 0x49,kFontTamilLanguage = 0x4A,kFontTeluguLanguage = 0x4B,kFontSinhaleseLanguage = 0x4C,kFontBurmeseLanguage = 0x4D,kFontKhmerLanguage = 0x4E,kFontLaoLanguage = 0x4F,kFontVietnameseLanguage = 0x50,kFontIndonesianLanguage = 0x51,kFontTagalogLanguage = 0x52,kFontMalayRomanLanguage = 0x53,kFontMalayArabicLanguage = 0x54,kFontAmharicLanguage = 0x55,kFontTigrinyaLanguage = 0x56,kFontGallaLanguage = 0x57,kFontOromoLanguage = 0x57,kFontSomaliLanguage = 0x58,kFontSwahiliLanguage = 0x59,kFontRuandaLanguage = 0x5A,kFontRundiLanguage = 0x5B,kFontChewaLanguage = 0x5C,kFontMalagasyLanguage = 0x5D,kFontEsperantoLanguage = 0x5E,kFontWelshLanguage = 0x80,kFontBasqueLanguage = 0x81,kFontCatalanLanguage = 0x82,kFontLatinLanguage = 0x83,kFontQuechuaLanguage = 0x84,kFontGuaraniLanguage = 0x85,kFontAymaraLanguage = 0x86,kFontTatarLanguage = 0x87,kFontUighurLanguage = 0x88,kFontDzongkhaLanguage = 0x89,kFontJavaneseRomLanguage = 0x8A,kFontSundaneseRomLanguage = 0x8B,};
enum $91CF377221C1C24D604226932849A88E {MIOC_ISDN = 0x55,};
enum $91D115EF56F4291549374A70CAECFF06 {kPEFRelocSmRepeatMaxChunkCount = 0x10,kPEFRelocSmRepeatMaxRepeatCount = 0x100,};
enum $920BC98E694AE0E52BA97E93DF26E7E3 {kAECaseConsiderMask = 0x1,kAEDiacriticConsiderMask = 0x2,kAEWhiteSpaceConsiderMask = 0x4,kAEHyphensConsiderMask = 0x8,kAEExpansionConsiderMask = 0x10,kAEPunctuationConsiderMask = 0x20,kASConsiderRepliesConsiderMask = 0x40,kAECaseIgnoreMask = 0x10000,kAEDiacriticIgnoreMask = 0x20000,kAEWhiteSpaceIgnoreMask = 0x40000,kAEHyphensIgnoreMask = 0x80000,kAEExpansionIgnoreMask = 0x100000,kAEPunctuationIgnoreMask = 0x200000,kASConsiderRepliesIgnoreMask = 0x400000,enumConsidsAndIgnores = 0x63736967,};
enum $92108EE5D4A06272E3D80E73372ED602 {kEventWindowShowing = 0x16,kEventWindowHiding = 0x17,kEventWindowShown = 0x18,kEventWindowHidden = 0x19,kEventWindowCollapsing = 0x56,kEventWindowCollapsed = 0x43,kEventWindowExpanding = 0x57,kEventWindowExpanded = 0x46,kEventWindowZoomed = 0x4C,kEventWindowBoundsChanging = 0x1A,kEventWindowBoundsChanged = 0x1B,kEventWindowResizeStarted = 0x1C,kEventWindowResizeCompleted = 0x1D,kEventWindowDragStarted = 0x1E,kEventWindowDragCompleted = 0x1F,kEventWindowClosed = 0x49,};
enum $92118AD72459216503075DD7897E75F1 {kControlPropertyPersistent = 0x1,};
struct $922AD0D9D21636A1B071122A97A972B9 {UInt8 byte0;UInt8 byte1;UInt8 byte2;UInt8 byte3;UInt8 byte4;UInt8 byte5;UInt8 byte6;UInt8 byte7;UInt8 byte8;UInt8 byte9;UInt8 byte10;UInt8 byte11;UInt8 byte12;UInt8 byte13;UInt8 byte14;UInt8 byte15;};
enum $923562FE960B0C4EC891CAD0A3A98138 {typeAEHomographDicInfo = 0x6C616864,typeAEHomographWeight = 0x73686F72,typeAEHomographAccent = 0x6C616861,};
enum $924240654B70A2FED4660CE9A6C959E3 {kSRTEXTFormat = 0x54455854,kSRPhraseFormat = 0x6C6D7068,kSRPathFormat = 0x6C6D7074,kSRLanguageModelFormat = 0x6C6D666D,};
enum $92B135529D45047D85CB70718E397D9E {kControlKindChasingArrows = 0x63617272,};
enum $92D5118DB1ADD491E27FEF695945557E {kAnyPort = 0x0,};
enum $92DD97704218B475071CB80CC2960CE5 {kO_ASYNC = 0x1,kO_NDELAY = 0x4,kO_NONBLOCK = 0x4,};
enum $9319DF510CA58260D0708F9D22620C92 {sortsBefore = 0xFFFFFFFF,sortsEqual = 0x0,sortsAfter = 0x1,};
enum $93204D36A7DDC20941771C7D67F9215A {kDCMFindMethodExactMatch = 0x3D202020,kDCMFindMethodBeginningMatch = 0x62677774,kDCMFindMethodContainsMatch = 0x636F6E74,kDCMFindMethodEndingMatch = 0x656E6473,kDCMFindMethodForwardTrie = 0x66747269,kDCMFindMethodBackwardTrie = 0x62747269,};
enum $9342860DAE3C9357C7E4FC628E27D179 {kThemeAppearanceFileNameTag = 0x74686D65,kThemeSystemFontTag = 0x6C677366,kThemeSmallSystemFontTag = 0x736D7366,kThemeViewsFontTag = 0x76666E74,kThemeViewsFontSizeTag = 0x7666737A,kThemeDesktopPatternNameTag = 0x7061746E,kThemeDesktopPatternTag = 0x70617474,kThemeDesktopPictureNameTag = 0x64706E6D,kThemeDesktopPictureAliasTag = 0x6470616C,kThemeDesktopPictureAlignmentTag = 0x6470616E,kThemeHighlightColorNameTag = 0x68636E6D,kThemeExamplePictureIDTag = 0x65706963,kThemeSoundTrackNameTag = 0x736E6474,kThemeSoundMaskTag = 0x736D736B,kThemeUserDefinedTag = 0x75736572,kThemeSmoothFontEnabledTag = 0x736D6F6F,kThemeSmoothFontMinSizeTag = 0x736D6F73,};
enum $937CF0B31C993A7C490A0B8694636229 {kMenuStdMenuProc = 0x3F,kMenuStdMenuBarProc = 0x3F,};
enum $93802A88477C6E425A6017FFE38F7CEA {kDDCBlockSize = 0x80,};
enum $93A6E636FCE8515564883382C95B02F9 {kAECleanUp = 0x66636C75,kAEEject = 0x656A6374,kAEEmpty = 0x656D7074,kAEErase = 0x66657261,kAEGestalt = 0x6773746C,kAEPutAway = 0x70747779,kAERebuildDesktopDB = 0x72646462,kAESync = 0x66757064,kAEInterceptOpen = 0x666F706E,};
enum $93AB867CB5AC62BFF672005324A930B2 {kMaxYomiLengthInAppleJapaneseDictionary = 0x28,kMaxKanjiLengthInAppleJapaneseDictionary = 0x40,};
enum $93B255DBC051FC6778BD8F1C81833EA9 {kICAStorageFixedROM = 0x1,kICAStorageRemovableROM = 0x2,kICAStorageFixedRAM = 0x3,kICAStorageRemovableRAM = 0x4,};
enum $93B700BF50DC5C9A7651BC9ACEB992D6 {fsCurPerm = 0x0,fsRdPerm = 0x1,fsWrPerm = 0x2,fsRdWrPerm = 0x3,fsRdWrShPerm = 0x4,fsRdDenyPerm = 0x10,fsWrDenyPerm = 0x20,};
enum $93CBC8EAD05DC932B7962D410BF82A49 {gestaltSDPStandardDirectoryVersion = 0x73647672,};
enum $93D017B8421CDD051206D7BFD95F86AA {kFontCustom8BitScript = 0x0,kFontCustom816BitScript = 0x1,kFontCustom16BitScript = 0x2,};
enum $93F85DDA74284763EEF6D37EA8BAF3BF {kEventPriorityLow = 0x0,kEventPriorityStandard = 0x1,kEventPriorityHigh = 0x2,};
enum $940C891D24D2237AB243FEE913AC72B0 {keyIconAndMask = 0x49434E23,key32BitIcon = 0x696C3332,key8BitIcon = 0x69636C38,key4BitIcon = 0x69636C34,key8BitMask = 0x6C386D6B,keySmallIconAndMask = 0x69637323,keySmall8BitIcon = 0x69637338,keySmall4BitIcon = 0x69637334,keySmall32BitIcon = 0x69733332,keySmall8BitMask = 0x73386D6B,keyMini1BitMask = 0x69636D23,keyMini4BitIcon = 0x69636D34,keyMini8BitIcon = 0x69636D38,keyAEUsing = 0x7573696E,keyAEReplacing = 0x616C7270,keyAENoAutoRouting = 0x726F7574,keyLocalPositionList = 0x6D76706C,keyGlobalPositionList = 0x6D767067,keyRedirectedDocumentList = 0x6670646C,};
enum $940E309D60E2F84130D4FA4328D595A6 {curSysEnvVers = 0x2,};
enum $9468C09887B86EF1296548923B986A5A {propFont = 0x9000,prpFntH = 0x9001,prpFntW = 0x9002,prpFntHW = 0x9003,fixedFont = 0xB000,fxdFntH = 0xB001,fxdFntW = 0xB002,fxdFntHW = 0xB003,fontWid = 0xACB0,};
enum $9487F6633966F419E1CDD305F9D68872 {kISpInternalErr = 0xFFFF892C,kISpSystemListErr = 0xFFFF892B,kISpBufferToSmallErr = 0xFFFF892A,kISpElementInListErr = 0xFFFF8929,kISpElementNotInListErr = 0xFFFF8928,kISpSystemInactiveErr = 0xFFFF8927,kISpDeviceInactiveErr = 0xFFFF8926,kISpSystemActiveErr = 0xFFFF8925,kISpDeviceActiveErr = 0xFFFF8924,kISpListBusyErr = 0xFFFF8923,};
enum $9495D2AA7AE5C9731252AE97FFA9A303 {kFontNoNameCode = 0xFFFFFFFF,};
enum $94B2DCEEA8C33F8D445E175685EA6067 {kHMTopSide = 0x1,kHMLeftSide = 0x2,kHMBottomSide = 0x3,kHMRightSide = 0x4,kHMTopLeftCorner = 0x5,kHMTopRightCorner = 0x6,kHMLeftTopCorner = 0x7,kHMLeftBottomCorner = 0x8,kHMBottomLeftCorner = 0x9,kHMBottomRightCorner = 0xA,kHMRightTopCorner = 0xB,kHMRightBottomCorner = 0xC,};
union $94CB200B36B7778DB0012FD0C2F25E9C {mach_msg_port_descriptor_t port;mach_msg_ool_descriptor_t out_of_line;mach_msg_ool_ports_descriptor_t ool_ports;mach_msg_type_descriptor_t type;};
enum $9522E0BB64D8E66E17F5C0825D2DB833 {kFontUnicodePlatform = 0x0,kFontMacintoshPlatform = 0x1,kFontReservedPlatform = 0x2,kFontMicrosoftPlatform = 0x3,kFontCustomPlatform = 0x4,};
enum $9549DFB4F05D4F3CB5D742B4DAC80D5D {pScheme = 0x70757363,pHost = 0x484F5354,pPath = 0x46545063,pUserName = 0x5241756E,pUserPassword = 0x52417077,pDNSForm = 0x70444E53,pURL = 0x7055524C,pTextEncoding = 0x70747865,pFTPKind = 0x6B696E64,};
enum $955AB7EDEF7D16C0C208B264FC667289 {kStdOkItemIndex = 0x1,kStdCancelItemIndex = 0x2,ok = 0x1,cancel = 0x2,};
enum $956E0F8638627E2D7345301BF56E48D3 {kBadAdapterErr = 0xFFFFDCA6,kBadAttributeErr = 0xFFFFDCA5,kBadBaseErr = 0xFFFFDCA4,kBadEDCErr = 0xFFFFDCA3,kBadIRQErr = 0xFFFFDCA2,kBadOffsetErr = 0xFFFFDCA1,kBadPageErr = 0xFFFFDCA0,kBadSizeErr = 0xFFFFDC9F,kBadSocketErr = 0xFFFFDC9E,kBadTypeErr = 0xFFFFDC9D,kBadVccErr = 0xFFFFDC9C,kBadVppErr = 0xFFFFDC9B,kBadWindowErr = 0xFFFFDC9A,kBadArgLengthErr = 0xFFFFDC99,kBadArgsErr = 0xFFFFDC98,kBadHandleErr = 0xFFFFDC97,kBadCISErr = 0xFFFFDC96,kBadSpeedErr = 0xFFFFDC95,kReadFailureErr = 0xFFFFDC94,kWriteFailureErr = 0xFFFFDC93,kGeneralFailureErr = 0xFFFFDC92,kNoCardErr = 0xFFFFDC91,kUnsupportedFunctionErr = 0xFFFFDC90,kUnsupportedModeErr = 0xFFFFDC8F,kBusyErr = 0xFFFFDC8E,kWriteProtectedErr = 0xFFFFDC8D,kConfigurationLockedErr = 0xFFFFDC8C,kInUseErr = 0xFFFFDC8B,kNoMoreItemsErr = 0xFFFFDC8A,kOutOfResourceErr = 0xFFFFDC89,kNoCardSevicesSocketsErr = 0xFFFFDC88,kInvalidRegEntryErr = 0xFFFFDC87,kBadLinkErr = 0xFFFFDC86,kBadDeviceErr = 0xFFFFDC85,k16BitCardErr = 0xFFFFDC84,kCardBusCardErr = 0xFFFFDC83,kPassCallToChainErr = 0xFFFFDC82,kCantConfigureCardErr = 0xFFFFDC81,kPostCardEventErr = 0xFFFFDC80,kInvalidDeviceNumber = 0xFFFFDC7F,kUnsupportedVsErr = 0xFFFFDC7E,kInvalidCSClientErr = 0xFFFFDC7D,kBadTupleDataErr = 0xFFFFDC7C,kBadCustomIFIDErr = 0xFFFFDC7B,kNoIOWindowRequestedErr = 0xFFFFDC7A,kNoMoreTimerClientsErr = 0xFFFFDC79,kNoMoreInterruptSlotsErr = 0xFFFFDC78,kNoClientTableErr = 0xFFFFDC77,kUnsupportedCardErr = 0xFFFFDC76,kNoCardEnablersFoundErr = 0xFFFFDC75,kNoEnablerForCardErr = 0xFFFFDC74,kNoCompatibleNameErr = 0xFFFFDC73,kClientRequestDenied = 0xFFFFDC72,kNotReadyErr = 0xFFFFDC71,kTooManyIOWindowsErr = 0xFFFFDC70,kAlreadySavedStateErr = 0xFFFFDC6F,kAttemptDupCardEntryErr = 0xFFFFDC6E,kCardPowerOffErr = 0xFFFFDC6D,kNotZVCapableErr = 0xFFFFDC6C,kNoCardBusCISErr = 0xFFFFDC6B,};
enum $9575FFA8E3DAC97BD84F1D9E83768FA5 {kAllowDuplicatesBit = 0x0,};
enum $959DAF81EEB200E4342A71B8469831D4 {kPEFRelocLgBySectionSubopcode = 0x0,kPEFRelocLgSetSectCSubopcode = 0x1,kPEFRelocLgSetSectDSubopcode = 0x2,};
enum $95A1F1327F3EE648E3FA633C1AEC8373 {eScheme = 0x65736368,eurlHTTP = 0x68747470,eurlHTTPS = 0x68747073,eurlFTP = 0x66747020,eurlMail = 0x6D61696C,eurlFile = 0x66696C65,eurlGopher = 0x67706872,eurlTelnet = 0x746C6E74,eurlNews = 0x6E657773,eurlSNews = 0x736E7773,eurlNNTP = 0x6E6E7470,eurlMessage = 0x6D657373,eurlMailbox = 0x6D626F78,eurlMulti = 0x6D756C74,eurlLaunch = 0x6C61756E,eurlAFP = 0x61667020,eurlAT = 0x61742020,eurlEPPC = 0x65707063,eurlRTSP = 0x72747370,eurlIMAP = 0x696D6170,eurlNFS = 0x756E6673,eurlPOP = 0x75706F70,eurlLDAP = 0x756C6470,eurlUnknown = 0x75726C3F,};
enum $95D8D93D68D5D153918DCFEDDD3DEB20 {XTI_GENERIC = 0xFFFF,};
enum $95EFD4D51A3B5E408C8EC477B7BD51B4 {kControlBevelButtonSmallBevelProc = 0x20,kControlBevelButtonNormalBevelProc = 0x21,kControlBevelButtonLargeBevelProc = 0x22,};
enum $95EFE6911AF25FD881152CA16664B33E {kOSAModeDontDefine = 0x1,};
enum $95F736BC60C90921AA5D966537109656 {khmmString = 0x1,khmmPict = 0x2,khmmStringRes = 0x3,khmmTEHandle = 0x4,khmmPictHandle = 0x5,khmmTERes = 0x6,khmmSTRRes = 0x7,kHMEnabledItem = 0x0,};
enum $9625A4AF6F0BBBB079DE2A5A113907CC {gestaltGXPrintingMgrVersion = 0x706D6772,};
enum $964C99289588181971E931D0E1A353A8 {kControlKindProgressBar = 0x70726762,kControlKindRelevanceBar = 0x72656C62,};
enum $9657C3FBF034AB58AAB0F44DCC2E3033 {kLASpeechKatsuyouGokan = 0x1,kLASpeechKatsuyouMizen = 0x2,kLASpeechKatsuyouRenyou = 0x3,kLASpeechKatsuyouSyuushi = 0x4,kLASpeechKatsuyouRentai = 0x5,kLASpeechKatsuyouKatei = 0x6,kLASpeechKatsuyouMeirei = 0x7,};
enum $96691EE4B85C60D2D0BF2A1E0B20422F {hiObjectClassExistsErr = 0xFFFFA9C0,hiObjectClassHasInstancesErr = 0xFFFFA9BF,hiObjectClassHasSubclassesErr = 0xFFFFA9BE,hiObjectClassIsAbstractErr = 0xFFFFA9BD,};
enum $966AB2C321B4E122D1BAF7DBADBDD433 {kMouseTrackingMousePressed = 0x1,kMouseTrackingMouseReleased = 0x2,};
enum $966C5ADD57B1091738984EDEFE8DE88A {kThemeMenuBarNormal = 0x0,kThemeMenuBarSelected = 0x1,};
enum $96730ADD5097E5BE8670B00BD2A97A8E {kUTCDefaultOptions = 0x0,};
enum $9697D2C626758E212899500537321E1C {kNoMixing = 0x1,kNoSampleRateConversion = 0x2,kNoSampleSizeConversion = 0x4,kNoSampleFormatConversion = 0x8,kNoChannelConversion = 0x10,kNoDecompression = 0x20,kNoVolumeConversion = 0x40,kNoRealtimeProcessing = 0x80,kScheduledSource = 0x100,kNonInterleavedBuffer = 0x200,kNonPagingMixer = 0x400,kSoundConverterMixer = 0x800,kPagingMixer = 0x1000,kVMAwareMixer = 0x2000,kExtendedSoundData = 0x4000,};
enum $9698EBF4C30D4309F75EAA427624F2E9 {kOSASelectScriptingComponentName = 0x102,kOSASelectCompile = 0x103,kOSASelectCopyID = 0x104,};
enum $96B90020E937C539D931759D1E51925E {kMacHelpVersion = 0x3,};
enum $96F31A077DC0385199A543206D7CC662 {verNetherlandsComma = 0x1A,verBelgiumLuxPoint = 0x1B,verCanadaComma = 0x1C,verCanadaPoint = 0x1D,vervariantPortugal = 0x1E,vervariantNorway = 0x1F,vervariantDenmark = 0x20,};
enum $97079C061FDCAFEC42B8691A72886824 {smLayoutCache = 0xFFFFFECB,smOldVerbSupport = 0xFFFFFEC9,smSetKashidas = 0xFFFFFEDD,smSetKashProp = 0xFFFFFEE1,smScriptSysBase = 0xFFFFFEE7,smScriptAppBase = 0xFFFFFEE5,smScriptFntBase = 0xFFFFFEE3,smScriptLigatures = 0xFFFFFEF9,smScriptNumbers = 0xFFFFFEF5,};
enum $973DC6726FA38C189808978C839B0622 {kTextUnsupportedEncodingErr = 0xFFFFDDDE,kTextMalformedInputErr = 0xFFFFDDDD,kTextUndefinedElementErr = 0xFFFFDDDC,kTECMissingTableErr = 0xFFFFDDD7,kTECTableChecksumErr = 0xFFFFDDD6,kTECTableFormatErr = 0xFFFFDDD5,kTECCorruptConverterErr = 0xFFFFDDD4,kTECNoConversionPathErr = 0xFFFFDDD3,kTECBufferBelowMinimumSizeErr = 0xFFFFDDD2,kTECArrayFullErr = 0xFFFFDDD1,kTECBadTextRunErr = 0xFFFFDDD0,kTECPartialCharErr = 0xFFFFDDCF,kTECUnmappableElementErr = 0xFFFFDDCE,kTECIncompleteElementErr = 0xFFFFDDCD,kTECDirectionErr = 0xFFFFDDCC,kTECGlobalsUnavailableErr = 0xFFFFDDBE,kTECItemUnavailableErr = 0xFFFFDDBD,kTECUsedFallbacksStatus = 0xFFFFDDB1,kTECNeedFlushStatus = 0xFFFFDDB0,kTECOutputBufferFullStatus = 0xFFFFDDAF,unicodeChecksumErr = 0xFFFFDDBF,unicodeNoTableErr = 0xFFFFDDC0,unicodeVariantErr = 0xFFFFDDC1,unicodeFallbacksErr = 0xFFFFDDC2,unicodePartConvertErr = 0xFFFFDDC3,unicodeBufErr = 0xFFFFDDC4,unicodeCharErr = 0xFFFFDDC5,unicodeElementErr = 0xFFFFDDC6,unicodeNotFoundErr = 0xFFFFDDC7,unicodeTableFormatErr = 0xFFFFDDC8,unicodeDirectionErr = 0xFFFFDDC9,unicodeContextualErr = 0xFFFFDDCA,unicodeTextEncodingDataErr = 0xFFFFDDCB,};
enum $97517C217A2D488F90D1826959958036 {kThemeBrushMovableModalBackground = 0x31,kThemeBrushSheetBackgroundOpaque = 0x32,kThemeBrushDrawerBackground = 0x33,kThemeBrushToolbarBackground = 0x34,kThemeBrushSheetBackgroundTransparent = 0x35,kThemeBrushMenuBackground = 0x36,kThemeBrushMenuBackgroundSelected = 0x37,};
enum $978568078CED3B05E4406AB06B1A89BA {kATSUTruncateNone = 0x0,kATSUTruncateStart = 0x1,kATSUTruncateEnd = 0x2,kATSUTruncateMiddle = 0x3,kATSUTruncateSpecificationMask = 0x7,kATSUTruncFeatNoSquishing = 0x8,};
struct $979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
enum $97A5E9E57B6262E6DD21F6195F1E3198 {kGenericComponentVersion = 0x100,};
enum $97B8CC06DB56D826295C2E9C5BDC3C46 {kPEFRelocBasicOpcodeRange = 0x80,};
enum $97CDF0D76A1C71836305147E643188E5 {kAEAsk = 0x61736B20,kAEBefore = 0x6265666F,kAEBeginning = 0x62676E67,kAEBeginsWith = 0x62677774,kAEBeginTransaction = 0x62656769,kAEBold = 0x626F6C64,kAECaseSensEquals = 0x63736571,kAECentered = 0x63656E74,kAEChangeView = 0x76696577,kAEClone = 0x636C6F6E,kAEClose = 0x636C6F73,kAECondensed = 0x636F6E64,kAEContains = 0x636F6E74,kAECopy = 0x636F7079,kAECoreSuite = 0x636F7265,kAECountElements = 0x636E7465,kAECreateElement = 0x6372656C,kAECreatePublisher = 0x63707562,kAECut = 0x63757420,kAEDelete = 0x64656C6F,};
enum $97D06325C87197057B6C6609F6137F88 {kUnknownLanguage = 0xFFFF,kUnknownScript = 0xFFFF,kNeutralScript = 0xFFFF,};
enum $97E323B8835348E0386963CC27DECB57 {smCharFISGreek = 0x5,smCharFISRussian = 0x6,smPunctNormal = 0x0,smPunctNumber = 0x100,smPunctSymbol = 0x200,smPunctBlank = 0x300,smPunctRepeat = 0x400,smPunctGraphic = 0x500,smKanaSmall = 0x100,smKanaHardOK = 0x200,smKanaSoftOK = 0x300,smIdeographicLevel1 = 0x0,smIdeographicLevel2 = 0x100,smIdeographicUser = 0x200,smFISClassLvl1 = 0x0,smFISClassLvl2 = 0x100,smFISClassUser = 0x200,smJamoJaeum = 0x0,smJamoBogJaeum = 0x100,smJamoMoeum = 0x200,smJamoBogMoeum = 0x300,};
enum $97EAAB2DC87E029A1786561CE104A31A {cmAToB0Tag = 0x41324230,cmAToB1Tag = 0x41324231,cmAToB2Tag = 0x41324232,cmBlueColorantTag = 0x6258595A,cmBlueTRCTag = 0x62545243,cmBToA0Tag = 0x42324130,cmBToA1Tag = 0x42324131,cmBToA2Tag = 0x42324132,cmCalibrationDateTimeTag = 0x63616C74,cmChromaticAdaptationTag = 0x63686164,cmCharTargetTag = 0x74617267,cmCopyrightTag = 0x63707274,cmDeviceMfgDescTag = 0x646D6E64,cmDeviceModelDescTag = 0x646D6464,cmGamutTag = 0x67616D74,cmGrayTRCTag = 0x6B545243,cmGreenColorantTag = 0x6758595A,cmGreenTRCTag = 0x67545243,cmLuminanceTag = 0x6C756D69,cmMeasurementTag = 0x6D656173,cmMediaBlackPointTag = 0x626B7074,cmMediaWhitePointTag = 0x77747074,cmNamedColorTag = 0x6E636F6C,cmNamedColor2Tag = 0x6E636C32,cmPreview0Tag = 0x70726530,cmPreview1Tag = 0x70726531,cmPreview2Tag = 0x70726532,cmProfileDescriptionTag = 0x64657363,cmProfileSequenceDescTag = 0x70736571,cmPS2CRD0Tag = 0x70736430,cmPS2CRD1Tag = 0x70736431,cmPS2CRD2Tag = 0x70736432,cmPS2CRD3Tag = 0x70736433,cmPS2CSATag = 0x70733273,cmPS2RenderingIntentTag = 0x70733269,cmRedColorantTag = 0x7258595A,cmRedTRCTag = 0x72545243,cmScreeningDescTag = 0x73637264,cmScreeningTag = 0x7363726E,cmTechnologyTag = 0x74656368,cmUcrBgTag = 0x62666420,cmViewingConditionsDescTag = 0x76756564,cmViewingConditionsTag = 0x76696577,};
enum $97FA3A9004AF8E74324D08F4D09E2464 {kCodeCFragSymbol = 0x0,kDataCFragSymbol = 0x1,kTVectorCFragSymbol = 0x2,kTOCCFragSymbol = 0x3,kGlueCFragSymbol = 0x4,};
enum $9818B4C6914289C7D9E4B4D4E9FB00D9 {kStdCFStringAlertVersionOne = 0x1,};
enum $981D6C735318426982A7764AE9136690 {kRegCStrMaxEntryNameLength = 0x2F,};
enum $985F992E9650E084E30EB5752888702D {kNoRubyKanaSelector = 0x0,kRubyKanaSelector = 0x1,};
enum $9860EB58CFC43C50486F83ABFF047E76 {kEventMouseWheelAxisX = 0x0,kEventMouseWheelAxisY = 0x1,};
enum $98794EC7D3E7BEFB1903BB62D5ED1F82 {kEventLeaveInQueue = 0x0,kEventRemoveFromQueue = 0x1,};
enum $987F3077CF90D6656DFDECDEBE413CD2 {teFIdleWithEventLoopTimer = 0x7,};
enum $988A8C1A267C34BA9DB25A6B979CB700 {ATK_DDP = 0x44445020,ATK_AARP = 0x41415250,ATK_ATP = 0x41545020,ATK_ADSP = 0x41445350,ATK_ASP = 0x41535020,ATK_PAP = 0x50415020,ATK_NBP = 0x4E425020,ATK_ZIP = 0x5A495020,};
enum $98A64AF649328A112F24B4C33556BF9B {kControlRoundButtonNormalSize = 0x0,kControlRoundButtonLargeSize = 0x2,};
enum $98D2C25E106415488733AF0F895912D7 {k16BitNativeEndianFormat = 0x74776F73,k16BitNonNativeEndianFormat = 0x736F7774,};
enum $98DBF04966FA740EF2876A06F88D9229 {kOTInvalidPortRef = 0x0,};
enum $98F44587FA922B2B33F4DD5157786C45 {kUnknownType = 0x3F3F3F3F,};
enum $990406032484E996FEA6A6EAC9D23588 {pShowFolderSize = 0x7366737A,pShowComment = 0x73636F6D,pShowDate = 0x73646174,pShowCreationDate = 0x73636461,pShowKind = 0x736B6E64,pShowLabel = 0x736C626C,pShowSize = 0x7373697A,pShowVersion = 0x73767273,pSortDirection = 0x736F7264,pShowDiskInfo = 0x7364696E,pListViewIconSize = 0x6C766973,pGridIcons = 0x66677264,pStaggerIcons = 0x66737467,pViewFont = 0x76666E74,pViewFontSize = 0x7666737A,};
struct $99142FCF86D421E8D5EF29EB262E00FD {CFStringRef attributeName;CFStringRef typeString;CFStringRef defaultString;};
enum $9916EE4C0C3565C3D7B1F4265BD3FB17 {kAENoReply = 0x1,kAEQueueReply = 0x2,kAEWaitReply = 0x3,kAEDontReconnect = 0x80,kAEWantReceipt = 0x200,kAENeverInteract = 0x10,kAECanInteract = 0x20,kAEAlwaysInteract = 0x30,kAECanSwitchLayer = 0x40,kAEDontRecord = 0x1000,kAEDontExecute = 0x2000,kAEProcessNonReplyEvents = 0x8000,};
enum $993FB706767A0B941FF27E2962BA5F07 {kX86RTA = 0x20,};
enum $99450F035771F6CE140B230CECF79700 {kOSASuite = 0x61736372,};
enum $99545B1E379846D061E870254C0252C8 {errKBPS2KeyboardNotAvailable = 0xFFFF877E,errKBIlligalParameters = 0xFFFF877D,errKBFailSettingID = 0xFFFF877C,errKBFailSettingTranslationTable = 0xFFFF877B,errKBFailWritePreference = 0xFFFF877A,};
enum $996F6F5F46E934F8DE40B7A8C6153D54 {kPROPLDirectionClass = 0x0,kPROPRDirectionClass = 0x1,kPROPALDirectionClass = 0x2,kPROPENDirectionClass = 0x3,kPROPESDirectionClass = 0x4,kPROPETDirectionClass = 0x5,kPROPANDirectionClass = 0x6,kPROPCSDirectionClass = 0x7,kPROPPSDirectionClass = 0x8,kPROPSDirectionClass = 0x9,kPROPWSDirectionClass = 0xA,kPROPONDirectionClass = 0xB,kPROPSENDirectionClass = 0xC,kPROPLREDirectionClass = 0xD,kPROPLRODirectionClass = 0xE,kPROPRLEDirectionClass = 0xF,kPROPRLODirectionClass = 0x10,kPROPPDFDirectionClass = 0x11,kPROPNSMDirectionClass = 0x12,kPROPBNDirectionClass = 0x13,kPROPNumDirectionClasses = 0x14,};
enum $9976355B4BAE0B37695AC3E25DAC79BC {kISDNModuleID = 0x1C84,};
enum $9996B868B43146DBBA442E9E5BE1987A : unsigned __int32 {smMaskAll = 0xFFFFFFFF,smMaskAscii = 0x1,smMaskNative = 0x2,smMaskAscii1 = 0x4,smMaskAscii2 = 0x8,smMaskKana1 = 0x10,smMaskKana2 = 0x20,smMaskGana2 = 0x80,smMaskHangul2 = 0x100,smMaskJamo2 = 0x200,smMaskBopomofo2 = 0x400,};
enum $99AABAE3110A89687340939D494AE5DE {kRelativeFolder = 0x72656C66,kSpecialFolder = 0x73706366,};
enum $99D7C8D383A8DF342C5F6D07F4259C2A {scsiBusLVD = 0x400,scsiBusUltra3SCSI = 0x200,scsiBusUltra2SCSI = 0x100,scsiBusInternalExternalMask = 0xC0,scsiBusInternalExternalUnknown = 0x0,scsiBusInternalExternal = 0xC0,scsiBusInternal = 0x80,scsiBusExternal = 0x40,scsiBusCacheCoherentDMA = 0x20,scsiBusOldCallCapable = 0x10,scsiBusUltraSCSI = 0x8,scsiBusDifferential = 0x4,scsiBusFastSCSI = 0x2,scsiBusDMAavailable = 0x1,};
enum $99DF324053748CE0F00F82D255EBBBC6 {kDocumentWindowVariantCode = 0x0,kModalDialogVariantCode = 0x1,kPlainDialogVariantCode = 0x2,kShadowDialogVariantCode = 0x3,kMovableModalDialogVariantCode = 0x5,kAlertVariantCode = 0x7,kMovableAlertVariantCode = 0x9,kSideFloaterVariantCode = 0x8,};
enum $99EB5C80159B186F0BDE0ABCB540E8C8 {kListDefProcPtr = 0x0,kListDefUserProcType = 0x0,kListDefStandardTextType = 0x1,kListDefStandardIconType = 0x2,};
enum $9A0C9E1D742B38032A0F8F4BE34E2DFB {kOSASelectLoad = 0x1,kOSASelectStore = 0x2,kOSASelectExecute = 0x3,kOSASelectDisplay = 0x4,kOSASelectScriptError = 0x5,kOSASelectDispose = 0x6,kOSASelectSetScriptInfo = 0x7,kOSASelectGetScriptInfo = 0x8,kOSASelectSetActiveProc = 0x9,kOSASelectGetActiveProc = 0xA,};
enum $9A61B348F439F29C2BF67459C8C39C3A {kDriverTypeMacSCSI = 0x1,kDriverTypeMacATA = 0x701,kDriverTypeMacSCSIChained = 0xFFFF,kDriverTypeMacATAChained = 0xF8FF,};
enum $9A7075FD694CCF94FA4474891759A837 {kICAPropertyCameraStorageType = 0x73746F72,kICAPropertyCameraFilesystemType = 0x66737973,kICAPropertyCameraAccessCapability = 0x61636170,kICAPropertyCameraMaxCapacity = 0x6D617863,kICAPropertyCameraFreeSpaceInBytes = 0x66726573,kICAPropertyCameraFreeSpaceInImages = 0x66726569,kICAPropertyCameraStorageDescription = 0x73746F64,kICAPropertyCameraVolumeLabel = 0x766F6C6C,};
struct $9AA8814A56848052027B4042AE3CFED4 {mach_msg_header_t header;mach_msg_trailer_t trailer;};
enum $9ABB0B5B8FD05332BF62F1F9DF62AAA6 {kPROPTag = 0x70726F70,kPROPCurrentVersion = 0x30000,kPROPPairOffsetShift = 0x8,kPROPPairOffsetSign = 0x7,kPROPIsFloaterMask = 0x8000,kPROPCanHangLTMask = 0x4000,kPROPCanHangRBMask = 0x2000,kPROPUseRLPairMask = 0x1000,kPROPPairOffsetMask = 0xF00,kPROPRightConnectMask = 0x80,kPROPZeroReserved = 0x60,kPROPDirectionMask = 0x1F,};
enum $9AC1B299F7F9E86499C25AAF60B442F2 {kAlertDefaultOKText = 0xFFFFFFFF,kAlertDefaultCancelText = 0xFFFFFFFF,kAlertDefaultOtherText = 0xFFFFFFFF,};
enum $9ADC9738F66FE076CD9C8DC7AF3C3EB2 {kAEThemeSwitch = 0x74686D65,};
enum $9AE367475DB3252AE4C1C184F0EB9534 {kStopIcon = 0x0,kNoteIcon = 0x1,kCautionIcon = 0x2,stopIcon = 0x0,noteIcon = 0x1,cautionIcon = 0x2,};
enum $9B09BD6789C0F33E4B9503BF6C7ADAD0 {kZoomNoAcceleration = 0x0,kZoomAccelerate = 0x1,kZoomDecelerate = 0x2,};
enum $9B79396F90DD80CD6693EBE8A0134753 {kWindowMsgDraw = 0x0,kWindowMsgHitTest = 0x1,kWindowMsgCalculateShape = 0x2,kWindowMsgInitialize = 0x3,kWindowMsgCleanUp = 0x4,kWindowMsgDrawGrowOutline = 0x5,kWindowMsgDrawGrowBox = 0x6,};
enum $9B7F8905523572BBCA66130D46D4F0F8 {kLocalesBufferTooSmallErr = 0xFFFF8ACF,kLocalesTableFormatErr = 0xFFFF8ACE,kLocalesDefaultDisplayStatus = 0xFFFF8AB3,};
enum $9B86BFCED706955C57B1F8CD5BDFA33F {verUS = 0x0,verFrance = 0x1,verBritain = 0x2,verGermany = 0x3,verItaly = 0x4,verNetherlands = 0x5,verFlemish = 0x6,verSweden = 0x7,verSpain = 0x8,verDenmark = 0x9,verPortugal = 0xA,verFrCanada = 0xB,verNorway = 0xC,verIsrael = 0xD,verJapan = 0xE,verAustralia = 0xF,verArabic = 0x10,verFinland = 0x11,verFrSwiss = 0x12,verGrSwiss = 0x13,verGreece = 0x14,verIceland = 0x15,verMalta = 0x16,verCyprus = 0x17,verTurkey = 0x18,verYugoCroatian = 0x19,};
enum $9B8CAABD76EE1AB4E880563D1F3B16F3 {sizeof_sfntNameHeader = 0x6,};
enum $9BA9EB558F66ABC341BE2BDCA705E833 {gestaltFSMVersion = 0x66736D20,};
enum $9BB0101840D62E29588C75D4F7C73CAA {scsiUnused74 = 0xFFFFE14A,scsiUnused75 = 0xFFFFE14B,scsiBadDataLength = 0xFFFFE14C,scsiPartialPrepared = 0xFFFFE14D,scsiInvalidMsgType = 0xFFFFE14E,scsiUnused79 = 0xFFFFE14F,scsiBadConnID = 0xFFFFE150,scsiUnused81 = 0xFFFFE151,scsiIOInProgress = 0xFFFFE152,scsiTargetReserved = 0xFFFFE153,scsiUnused84 = 0xFFFFE154,scsiUnused85 = 0xFFFFE155,scsiBadConnType = 0xFFFFE156,scsiCannotLoadPlugin = 0xFFFFE157,};
enum $9BBCBC1C0D787D6D1674030B677C6181 {kThemeStatePressedUp = 0x2,kThemeStatePressedDown = 0x3,};
enum $9BBD331253536717B71472F1B96517D7 {kUCGenlCatOtherNotAssigned = 0x0,kUCGenlCatOtherControl = 0x1,kUCGenlCatOtherFormat = 0x2,kUCGenlCatOtherSurrogate = 0x3,kUCGenlCatOtherPrivateUse = 0x4,kUCGenlCatMarkNonSpacing = 0x5,kUCGenlCatMarkSpacingCombining = 0x6,kUCGenlCatMarkEnclosing = 0x7,kUCGenlCatNumberDecimalDigit = 0x8,kUCGenlCatNumberLetter = 0x9,kUCGenlCatNumberOther = 0xA,kUCGenlCatSeparatorSpace = 0xB,kUCGenlCatSeparatorLine = 0xC,kUCGenlCatSeparatorParagraph = 0xD,kUCGenlCatLetterUppercase = 0xE,kUCGenlCatLetterLowercase = 0xF,kUCGenlCatLetterTitlecase = 0x10,kUCGenlCatLetterModifier = 0x11,kUCGenlCatLetterOther = 0x12,kUCGenlCatPunctConnector = 0x14,kUCGenlCatPunctDash = 0x15,kUCGenlCatPunctOpen = 0x16,kUCGenlCatPunctClose = 0x17,kUCGenlCatPunctInitialQuote = 0x18,kUCGenlCatPunctFinalQuote = 0x19,kUCGenlCatPunctOther = 0x1A,kUCGenlCatSymbolMath = 0x1C,kUCGenlCatSymbolCurrency = 0x1D,kUCGenlCatSymbolModifier = 0x1E,kUCGenlCatSymbolOther = 0x1F,};
enum $9BC0C55189B3F7A1579AEB8612B3EFF0 {kCJKVerticalRomanCenteredSelector = 0x0,kCJKVerticalRomanHBaselineSelector = 0x1,};
enum $9BD3530F02F154804E5741B1D52E9AAA {kCFXMLParserValidateDocument = 0x1,kCFXMLParserSkipMetaData = 0x2,kCFXMLParserReplacePhysicalEntities = 0x4,kCFXMLParserSkipWhitespace = 0x8,kCFXMLParserResolveExternalEntities = 0x10,kCFXMLParserAddImpliedAttributes = 0x20,kCFXMLParserAllOptions = 0xFFFFFF,kCFXMLParserNoOptions = 0x0,};
enum $9C17A28C9B08FD6DF0F6D1C979D6C613 {kControlUserPaneProc = 0x100,};
enum $9C2EF1C50E8722B438622C8272BE41F6 {kEventWindowDrawerOpening = 0xDC,kEventWindowDrawerOpened = 0xDD,kEventWindowDrawerClosing = 0xDE,kEventWindowDrawerClosed = 0xDF,};
enum $9C3155642CC46C74C74EA627F07FAAAF {gestaltEasyAccessAttr = 0x65617379,gestaltEasyAccessOff = 0x0,gestaltEasyAccessOn = 0x1,gestaltEasyAccessSticky = 0x2,gestaltEasyAccessLocked = 0x3,};
enum $9C778FD5D6646D5373256D4EDF767D7C {kAEMenuClass = 0x6D656E75,kAEMenuSelect = 0x6D686974,kAEMouseDown = 0x6D64776E,kAEMouseDownInBack = 0x6D64626B,kAEKeyDown = 0x6B64776E,kAEResized = 0x7273697A,kAEPromise = 0x70726F6D,};
enum $9C790E81060248406BFA4828E164068F {dcmParamErr = 0xFFFFE444,dcmNotDictionaryErr = 0xFFFFE443,dcmBadDictionaryErr = 0xFFFFE442,dcmPermissionErr = 0xFFFFE441,dcmDictionaryNotOpenErr = 0xFFFFE440,dcmDictionaryBusyErr = 0xFFFFE43F,dcmBlockFullErr = 0xFFFFE43D,dcmNoRecordErr = 0xFFFFE43C,dcmDupRecordErr = 0xFFFFE43B,dcmNecessaryFieldErr = 0xFFFFE43A,dcmBadFieldInfoErr = 0xFFFFE439,dcmBadFieldTypeErr = 0xFFFFE438,dcmNoFieldErr = 0xFFFFE437,dcmBadKeyErr = 0xFFFFE435,dcmTooManyKeyErr = 0xFFFFE434,dcmBadDataSizeErr = 0xFFFFE433,dcmBadFindMethodErr = 0xFFFFE432,dcmBadPropertyErr = 0xFFFFE431,dcmProtectedErr = 0xFFFFE42F,dcmNoAccessMethodErr = 0xFFFFE42E,dcmBadFeatureErr = 0xFFFFE42C,dcmIterationCompleteErr = 0xFFFFE42A,dcmBufferOverflowErr = 0xFFFFE429,};
enum $9C7BC7FE896463D24B4FEE01A1D4AB7B {scsiTransferBlind = 0x0,scsiTransferPolled = 0x1,};
enum $9C8BA511D53802F27EA58D26B9BDFF85 {HDPwrQType = 0x4844,PMgrStateQType = 0x504D,};
enum $9CA407070494EAEF7BD0B0898672F852 {gestaltPCCard = 0x70636364,gestaltCardServicesPresent = 0x0,gestaltPCCardFamilyPresent = 0x1,gestaltPCCardHasPowerControl = 0x2,gestaltPCCardSupportsCardBus = 0x3,};
enum $9CB5D5D27B78DCCB39E5D5F1FB502F32 {siDeviceIsConnected = 0x1,siDeviceNotConnected = 0x0,siDontKnowIfConnected = 0xFFFFFFFF,siReadPermission = 0x0,siWritePermission = 0x1,};
enum $9CC66BF7975FE6367B2A237D6871AB84 {kAEStartRecording = 0x72656361,kAEStopRecording = 0x72656363,kAENotifyStartRecording = 0x72656331,kAENotifyStopRecording = 0x72656330,kAENotifyRecording = 0x72656372,};
enum $9CCC474BA24AF54592FD0A7872AC3E26 {kLocaleNameMask = 0x1,kLocaleOperationVariantNameMask = 0x2,kLocaleAndVariantNameMask = 0x3,};
enum $9CFFEA916CF5686EC7628B9DF170645C {kVideoNoTransactionType = 0x0,kVideoSimpleI2CType = 0x1,kVideoDDCciReplyType = 0x2,};
enum $9D18CCF58560B467D5C27AB5DF77EFA9 {ColorBankIsCustom = 0xFFFFFFFF,ColorBankIsExactAnd555 = 0x0,ColorBankIs555 = 0x1,};
enum $9D29BCEDC70E2DF1526AB6C7DAB26E1D {kWindowBoundsChangeUserDrag = 0x1,kWindowBoundsChangeUserResize = 0x2,kWindowBoundsChangeSizeChanged = 0x4,kWindowBoundsChangeOriginChanged = 0x8,kWindowBoundsChangeZoom = 0x10,};
struct $9D3E2F80E25C72F4B8A53879223C74B3 {CFXMLExternalID externalID;};
enum $9D5FD33A1680DC79DC9D4BE34B4CEDE9 {kClipboardIcon = 0x434C4950,kClippingUnknownTypeIcon = 0x636C7075,kClippingPictureTypeIcon = 0x636C7070,kClippingTextTypeIcon = 0x636C7074,kClippingSoundTypeIcon = 0x636C7073,kDesktopIcon = 0x6465736B,kFinderIcon = 0x464E4452,kFontSuitcaseIcon = 0x4646494C,kFullTrashIcon = 0x66747268,kGenericApplicationIcon = 0x4150504C,kGenericCDROMIcon = 0x63646472,kGenericControlPanelIcon = 0x41505043,kGenericControlStripModuleIcon = 0x73646576,kGenericComponentIcon = 0x74686E67,kGenericDeskAccessoryIcon = 0x41505044,kGenericDocumentIcon = 0x646F6375,kGenericEditionFileIcon = 0x65647466,kGenericExtensionIcon = 0x494E4954,kGenericFileServerIcon = 0x73727672,kGenericFontIcon = 0x6666696C,kGenericFontScalerIcon = 0x73636C72,kGenericFloppyIcon = 0x666C7079,kGenericHardDiskIcon = 0x6864736B,kGenericIDiskIcon = 0x6964736B,kGenericRemovableMediaIcon = 0x726D6F76,kGenericMoverObjectIcon = 0x6D6F7672,kGenericPCCardIcon = 0x70636D63,kGenericPreferencesIcon = 0x70726566,kGenericQueryDocumentIcon = 0x71657279,kGenericRAMDiskIcon = 0x72616D64,kGenericSharedLibaryIcon = 0x73686C62,kGenericStationeryIcon = 0x73646F63,kGenericSuitcaseIcon = 0x73756974,kGenericURLIcon = 0x6775726C,kGenericWORMIcon = 0x776F726D,kInternationalResourcesIcon = 0x6966696C,kKeyboardLayoutIcon = 0x6B66696C,kSoundFileIcon = 0x7366696C,kSystemSuitcaseIcon = 0x7A737973,kTrashIcon = 0x74727368,kTrueTypeFontIcon = 0x7466696C,kTrueTypeFlatFontIcon = 0x73666E74,kTrueTypeMultiFlatFontIcon = 0x74746366,kUserIDiskIcon = 0x7564736B,kUnknownFSObjectIcon = 0x756E6673,kInternationResourcesIcon = 0x6966696C,};
enum $9DAD23F7BB08B2345DA10465F39C7433 {kPPPCompressionDisabled = 0x0,kPPPProtoCompression = 0x1,kPPPAddrCompression = 0x2,};
enum $9DC0E7774076BF486BB7A24EDA065DFB {kEventWindowFocusAcquired = 0xC8,kEventWindowFocusRelinquish = 0xC9,kEventWindowFocusContent = 0xCA,kEventWindowFocusToolbar = 0xCB,};
enum $9DD6A811A66EE11358BE993ADD3DB46D {kNavDialogOptionsVersion = 0x0,};
enum $9DD924331E5675329146BF3F39BBABD5 {cmTrap = 0xABEE,};
enum $9DE13F8CF70FA4693536DE11AE096D94 {gestaltQDTextFeatures = 0x71647466,gestaltWSIISupport = 0x0,gestaltSbitFontSupport = 0x1,gestaltAntiAliasedTextAvailable = 0x2,gestaltOFA2available = 0x3,gestaltCreatesAliasFontRsrc = 0x4,gestaltNativeType1FontSupport = 0x5,gestaltCanUseCGTextRendering = 0x6,};
enum $9E194EEDFFE7344AEF455EECABB7E06D {kTXNNoAppleEventHandlersBit = 0x0,kTXNRestartAppleEventHandlersBit = 0x1,};
enum $9E2E66BD4B48EEC37129CFB2F830BF39 {pSmallIcon = 0x736D6963,pSmallButton = 0x736D6275,pLargeButton = 0x6C676275,pGrid = 0x67726964,};
enum $9E3D65463AE7379425752327921CBDC6 {gestaltShutdownAttributes = 0x73687574,gestaltShutdownHassdOnBootVolUnmount = 0x0,};
enum $9E5869D39EF3815427497605AD50A486 {kExtendedNotificationPB = 0x65787464,kMessageGetEventData = 0x6D676564,kEventClassPTPStandard = 0x50545073,kEventClassPTPVendor = 0x50545076,};
enum $9E94AA623DD3443F9FEF6C4204FE6D72 {kTECInfoCurrentFormat = 0x2,};
enum $9EE9DF6533CFCC3904819E8BEC2EBF07 {hmDefaultOptions = 0x0,hmUseSubIDBit = 0x0,hmAbsoluteCoordsBit = 0x1,hmSaveBitsNoWindowBit = 0x2,hmSaveBitsWindowBit = 0x3,hmMatchInTitleBit = 0x4,hmUseSubIDMask = 0x1,hmAbsoluteCoordsMask = 0x2,hmSaveBitsNoWindowMask = 0x4,hmSaveBitsWindowMask = 0x8,hmMatchInTitleMask = 0x10,};
enum $9EF1C8F32A001458479463B64424CA4C {kThemeSoundNone = 0x0,kThemeSoundMenuOpen = 0x6D6E756F,kThemeSoundMenuClose = 0x6D6E7563,kThemeSoundMenuItemHilite = 0x6D6E7569,kThemeSoundMenuItemRelease = 0x6D6E7573,kThemeSoundWindowClosePress = 0x77636C70,kThemeSoundWindowCloseEnter = 0x77636C65,kThemeSoundWindowCloseExit = 0x77636C78,kThemeSoundWindowCloseRelease = 0x77636C72,kThemeSoundWindowZoomPress = 0x777A6D70,kThemeSoundWindowZoomEnter = 0x777A6D65,kThemeSoundWindowZoomExit = 0x777A6D78,kThemeSoundWindowZoomRelease = 0x777A6D72,kThemeSoundWindowCollapsePress = 0x77636F70,kThemeSoundWindowCollapseEnter = 0x77636F65,kThemeSoundWindowCollapseExit = 0x77636F78,kThemeSoundWindowCollapseRelease = 0x77636F72,kThemeSoundWindowDragBoundary = 0x77646264,kThemeSoundUtilWinClosePress = 0x75636C70,kThemeSoundUtilWinCloseEnter = 0x75636C65,kThemeSoundUtilWinCloseExit = 0x75636C78,kThemeSoundUtilWinCloseRelease = 0x75636C72,kThemeSoundUtilWinZoomPress = 0x757A6D70,kThemeSoundUtilWinZoomEnter = 0x757A6D65,kThemeSoundUtilWinZoomExit = 0x757A6D78,kThemeSoundUtilWinZoomRelease = 0x757A6D72,kThemeSoundUtilWinCollapsePress = 0x75636F70,kThemeSoundUtilWinCollapseEnter = 0x75636F65,kThemeSoundUtilWinCollapseExit = 0x75636F78,kThemeSoundUtilWinCollapseRelease = 0x75636F72,kThemeSoundUtilWinDragBoundary = 0x75646264,kThemeSoundWindowOpen = 0x776F706E,kThemeSoundWindowClose = 0x77636C73,kThemeSoundWindowZoomIn = 0x777A6D69,kThemeSoundWindowZoomOut = 0x777A6D6F,kThemeSoundWindowCollapseUp = 0x77636F6C,kThemeSoundWindowCollapseDown = 0x77657870,kThemeSoundWindowActivate = 0x77616374,kThemeSoundUtilWindowOpen = 0x756F706E,kThemeSoundUtilWindowClose = 0x75636C73,kThemeSoundUtilWindowZoomIn = 0x757A6D69,kThemeSoundUtilWindowZoomOut = 0x757A6D6F,kThemeSoundUtilWindowCollapseUp = 0x75636F6C,kThemeSoundUtilWindowCollapseDown = 0x75657870,kThemeSoundUtilWindowActivate = 0x75616374,kThemeSoundDialogOpen = 0x646F706E,kThemeSoundDialogClose = 0x646C6763,kThemeSoundAlertOpen = 0x616F706E,kThemeSoundAlertClose = 0x616C7463,kThemeSoundPopupWindowOpen = 0x70776F70,kThemeSoundPopupWindowClose = 0x7077636C,kThemeSoundButtonPress = 0x62746E70,kThemeSoundButtonEnter = 0x62746E65,kThemeSoundButtonExit = 0x62746E78,kThemeSoundButtonRelease = 0x62746E72,kThemeSoundDefaultButtonPress = 0x64627470,kThemeSoundDefaultButtonEnter = 0x64627465,kThemeSoundDefaultButtonExit = 0x64627478,kThemeSoundDefaultButtonRelease = 0x64627472,kThemeSoundCancelButtonPress = 0x63627470,kThemeSoundCancelButtonEnter = 0x63627465,kThemeSoundCancelButtonExit = 0x63627478,kThemeSoundCancelButtonRelease = 0x63627472,kThemeSoundCheckboxPress = 0x63686B70,kThemeSoundCheckboxEnter = 0x63686B65,kThemeSoundCheckboxExit = 0x63686B78,kThemeSoundCheckboxRelease = 0x63686B72,kThemeSoundRadioPress = 0x72616470,kThemeSoundRadioEnter = 0x72616465,kThemeSoundRadioExit = 0x72616478,kThemeSoundRadioRelease = 0x72616472,kThemeSoundScrollArrowPress = 0x73626170,kThemeSoundScrollArrowEnter = 0x73626165,kThemeSoundScrollArrowExit = 0x73626178,kThemeSoundScrollArrowRelease = 0x73626172,kThemeSoundScrollEndOfTrack = 0x73627465,kThemeSoundScrollTrackPress = 0x73627470,kThemeSoundSliderEndOfTrack = 0x736C7465,kThemeSoundSliderTrackPress = 0x736C7470,kThemeSoundBalloonOpen = 0x626C6E6F,kThemeSoundBalloonClose = 0x626C6E63,kThemeSoundBevelPress = 0x62657670,kThemeSoundBevelEnter = 0x62657665,kThemeSoundBevelExit = 0x62657678,kThemeSoundBevelRelease = 0x62657672,kThemeSoundLittleArrowUpPress = 0x6C617570,kThemeSoundLittleArrowDnPress = 0x6C616470,kThemeSoundLittleArrowEnter = 0x6C617265,kThemeSoundLittleArrowExit = 0x6C617278,kThemeSoundLittleArrowUpRelease = 0x6C617572,kThemeSoundLittleArrowDnRelease = 0x6C616472,kThemeSoundPopupPress = 0x706F7070,kThemeSoundPopupEnter = 0x706F7065,kThemeSoundPopupExit = 0x706F7078,kThemeSoundPopupRelease = 0x706F7072,kThemeSoundDisclosurePress = 0x64736370,kThemeSoundDisclosureEnter = 0x64736365,kThemeSoundDisclosureExit = 0x64736378,kThemeSoundDisclosureRelease = 0x64736372,kThemeSoundTabPressed = 0x74616270,kThemeSoundTabEnter = 0x74616265,kThemeSoundTabExit = 0x74616278,kThemeSoundTabRelease = 0x74616272,kThemeSoundDragTargetHilite = 0x64746869,kThemeSoundDragTargetUnhilite = 0x64747568,kThemeSoundDragTargetDrop = 0x64746472,kThemeSoundEmptyTrash = 0x66747273,kThemeSoundSelectItem = 0x6673656C,kThemeSoundNewItem = 0x666E6577,kThemeSoundReceiveDrop = 0x66647270,kThemeSoundCopyDone = 0x66637064,kThemeSoundResolveAlias = 0x6672616C,kThemeSoundLaunchApp = 0x666C6170,kThemeSoundDiskInsert = 0x64736B69,kThemeSoundDiskEject = 0x64736B65,kThemeSoundFinderDragOnIcon = 0x66646F6E,kThemeSoundFinderDragOffIcon = 0x66646F66,};
enum $9EF982B180DBF6205ACBC018A9A95A53 {kUnicodeNoCompatibilityVariant = 0x1,kUnicodeNoCorporateVariant = 0x4,};
enum $9EFE2A97A0BC9065EC21821B1DDFD255 {kEventMenuBeginTracking = 0x1,kEventMenuEndTracking = 0x2,kEventMenuChangeTrackingMode = 0x3,kEventMenuOpening = 0x4,kEventMenuClosed = 0x5,kEventMenuTargetItem = 0x6,kEventMenuMatchKey = 0x7,kEventMenuEnableItems = 0x8,kEventMenuPopulate = 0x9,kEventMenuMeasureItemWidth = 0x64,kEventMenuMeasureItemHeight = 0x65,kEventMenuDrawItem = 0x66,kEventMenuDrawItemContent = 0x67,kEventMenuDispose = 0x3E9,};
enum $9F1EC888C51F8AAA6D7EFB86302E0371 {kHMDisabledItem = 0x1,kHMCheckedItem = 0x2,kHMOtherItem = 0x3,kHMRegularWindow = 0x0,kHMSaveBitsNoWindow = 0x1,kHMSaveBitsWindow = 0x2,};
enum $9F2087190D1C1BBD83C9567049473F6B {kKLKCHRuchrKind = 0x0,kKLKCHRKind = 0x1,kKLuchrKind = 0x2,};
enum $9F2F4149995F85BAB80FDCD0841F2E44 {fsSBNodeID = 0x8000,fsSBAttributeModDate = 0x10000,fsSBAccessDate = 0x20000,fsSBPermissions = 0x40000,fsSBNodeIDBit = 0xF,fsSBAttributeModDateBit = 0x10,fsSBAccessDateBit = 0x11,fsSBPermissionsBit = 0x12,};
enum $9F6648E2B1A7DDA3AD4AB82BD3C7C30B {kPSInjectionBeforeSubsection = 0x1,kPSInjectionAfterSubsection = 0x2,kPSInjectionReplaceSubsection = 0x3,};
enum $9F6AAFFFEB5A41D7FC7808DA543F4C33 {cscReset = 0x0,cscKillIO = 0x1,cscSetMode = 0x2,cscSetEntries = 0x3,cscSetGamma = 0x4,cscGrayPage = 0x5,cscGrayScreen = 0x5,cscSetGray = 0x6,cscSetInterrupt = 0x7,cscDirectSetEntries = 0x8,cscSetDefaultMode = 0x9,cscSwitchMode = 0xA,cscSetSync = 0xB,cscSavePreferredConfiguration = 0x10,cscSetHardwareCursor = 0x16,cscDrawHardwareCursor = 0x17,cscSetConvolution = 0x18,cscSetPowerState = 0x19,cscPrivateControlCall = 0x1A,cscSetMultiConnect = 0x1C,cscSetClutBehavior = 0x1D,cscSetDetailedTiming = 0x1F,cscDoCommunication = 0x21,cscProbeConnection = 0x22,cscUnusedCall = 0x7F,};
enum $9F707DA49AEE530950ED92E064F04046 {kPatchDriverSignature = 0x70744452,kSCSIDriverSignature = 0x10600,kATADriverSignature = 0x77696B69,kSCSICDDriverSignature = 0x43447672,kATAPIDriverSignature = 0x41545049,kDriveSetupHFSSignature = 0x44535531,};
enum $9F79A317D9E10083B2D179CB5DBEA5A2 {kTXNDontDrawCaretWhenInactive = 0x0,kTXNDrawCaretWhenInactive = 0x1,};
enum $9F8FC170A2058B1BE0534DB43DF06411 {kMulticastLength = 0x6,k48BitAddrLength = 0x6,k8022DLSAPLength = 0x2,k8022SNAPLength = 0x5,kEnetAddressLength = 0x8,kSNAPSAP = 0xAA,kIPXSAP = 0xFF,kMax8022SAP = 0xFE,k8022GlobalSAP = 0xFF,kMinDIXSAP = 0x5DD,kMaxDIXSAP = 0xFFFF,};
enum $9FBD3328C59425DFD910233A462ED743 {rcDBNull = 0xFFFFFCE0,rcDBValue = 0xFFFFFCDF,rcDBError = 0xFFFFFCDE,rcDBBadType = 0xFFFFFCDD,rcDBBreak = 0xFFFFFCDC,rcDBExec = 0xFFFFFCDB,rcDBBadSessID = 0xFFFFFCDA,rcDBBadSessNum = 0xFFFFFCD9,rcDBBadDDEV = 0xFFFFFCD8,rcDBAsyncNotSupp = 0xFFFFFCD7,rcDBBadAsyncPB = 0xFFFFFCD6,rcDBNoHandler = 0xFFFFFCD5,rcDBWrongVersion = 0xFFFFFCD4,rcDBPackNotInited = 0xFFFFFCD3,};
enum $9FC35BED961DFCDF161E924B65B75EC5 {gestaltCloseViewAttr = 0x42534461,gestaltCloseViewEnabled = 0x0,gestaltCloseViewDisplayMgrFriendly = 0x1,};
enum $9FDABC3362DC4967F6B93FF129090797 {kTextEncodingDefaultVariant = 0x0,};
enum $9FDF9E38B07031CED0044F6722EC10DE {kScrollWindowNoOptions = 0x0,kScrollWindowInvalidate = 0x1,kScrollWindowEraseToPortBackground = 0x2,};
enum $9FF31CBD7EB437B7B8C81BF77CD6AA85 {kOTUnknownBusPort = 0x0,kOTMotherboardBus = 0x1,kOTNuBus = 0x2,kOTPCIBus = 0x3,kOTGeoPort = 0x4,kOTPCCardBus = 0x5,kOTFireWireBus = 0x6,kOTLastBusIndex = 0xF,};
enum $A0046113F0A19D123123D9538FF827D3 {kControlEditTextKeyScriptBehaviorTag = 0x6B736372,kControlEditTextLockedTag = 0x6C6F636B,kControlEditTextFixedTextTag = 0x66747874,kControlEditTextValidationProcTag = 0x76616C69,kControlEditTextInlinePreUpdateProcTag = 0x70727570,kControlEditTextInlinePostUpdateProcTag = 0x706F7570,};
enum $A03BA9394223138179DA9F43844713EA {kSourceWasEnabled = 0x1,kSourceWasDisabled = 0x0,};
enum $A03C5318120AC81DFA293182B8EA7625 {kControlSizeNormal = 0x0,kControlSizeSmall = 0x1,kControlSizeLarge = 0x2,kControlSizeAuto = 0xFFFF,};
enum $A0509ECBB3972BBEF620EDFE2C89E5A2 {NoLooping = 0x0,ForwardLooping = 0x1,ForwardBackwardLooping = 0x2,};
enum $A055E1A96E49C2407A9DB537A42D59E2 {gestaltMacOSCompatibilityBoxAttr = 0x62626F78,gestaltMacOSCompatibilityBoxPresent = 0x0,gestaltMacOSCompatibilityBoxHasSerial = 0x1,gestaltMacOSCompatibilityBoxless = 0x2,};
enum $A05B9B2BBC343A6D19ADAB85FCC92B0A {tokenOK = 0x0,tokenOverflow = 0x1,stringOverflow = 0x2,badDelim = 0x3,badEnding = 0x4,crash = 0x5,};
enum $A090D39FCC75420A865A59B6557FCDFB {stateBlockSize = 0x40,leftOverBlockSize = 0x20,};
enum $A0D6B344A48F2EE2BA7AFA0B4B01B1A5 {MSG_HIPRI = 0x1,MSG_BAND = 0x2,MSG_ANY = 0x4,};
enum $A11DBB41E84C29C2A49D79FC156E77D3 {k1MonochromePixelFormat = 0x1,k2IndexedPixelFormat = 0x2,k4IndexedPixelFormat = 0x4,k8IndexedPixelFormat = 0x8,k16BE555PixelFormat = 0x10,k24RGBPixelFormat = 0x18,k32ARGBPixelFormat = 0x20,k1IndexedGrayPixelFormat = 0x21,k2IndexedGrayPixelFormat = 0x22,k4IndexedGrayPixelFormat = 0x24,k8IndexedGrayPixelFormat = 0x28,};
enum $A1206A7966BF2DC23E3CBB1EA0867DCF {fsRtParID = 0x1,fsRtDirID = 0x2,};
enum $A1207AD401E53CE9C32D61035A396B4E {cmFlare0 = 0x0,cmFlare100 = 0x1,};
enum $A12DDCD5796E6418940DAAAE75E2663D {kEventClassEPPC = 0x65707063,kEventHighLevelEvent = 0x1,};
enum $A15F04B6D842694AF73AABAFF4270A6D {I_OTISDNAlerting = 0x5564,I_OTISDNSuspend = 0x5565,I_OTISDNSuspendAcknowledge = 0x5566,I_OTISDNSuspendReject = 0x5567,I_OTISDNResume = 0x5568,I_OTISDNResumeAcknowledge = 0x5569,I_OTISDNResumeReject = 0x556A,I_OTISDNFaciltity = 0x556B,};
enum $A1884C724CA4FCF86861F543C5F2C238 {gestaltSplitOSAttr = 0x73706F73,gestaltSplitOSBootDriveIsNetworkVolume = 0x0,gestaltSplitOSAware = 0x1,gestaltSplitOSEnablerVolumeIsDifferentFromBootVolume = 0x2,gestaltSplitOSMachineNameSetToNetworkNameTemp = 0x3,gestaltSplitOSMachineNameStartupDiskIsNonPersistent = 0x5,};
enum $A1ADE14D7F3E06FD3B659145C73BD3EA : unsigned __int32 {gestaltUSBPrinterSharingVersion = 0x7A616B20,gestaltUSBPrinterSharingVersionMask = 0xFFFF,gestaltUSBPrinterSharingAttr = 0x7A616B20,gestaltUSBPrinterSharingAttrMask = 0xFFFF0000,gestaltUSBPrinterSharingAttrRunning = 0x80000000,gestaltUSBPrinterSharingAttrBooted = 0x40000000,};
enum $A1CAFDA6AC34EDD3819EB35758499781 {smcTypeMask = 0xF,smcReserved = 0xF0,smcClassMask = 0xF00,smcOrientationMask = 0x1000,smcRightMask = 0x2000,smcUpperMask = 0x4000,smcDoubleMask = 0x8000,};
enum $A1E1BAD5B418D85708692C2D8BF7B43D {kShiftUnicode = 0x21E7,kControlUnicode = 0x2303,kOptionUnicode = 0x2325,kCommandUnicode = 0x2318,kPencilUnicode = 0x270E,kCheckUnicode = 0x2713,kDiamondUnicode = 0x25C6,kBulletUnicode = 0x2022,kAppleLogoUnicode = 0xF8FF,};
enum $A1E4185638B11D7C5568B95D38AA76FC {sizeof_sfntCMapHeader = 0x4,};
enum $A1EECE411E39F46A7F222B2FC95ABC40 {kOSAErrorMessage = 0x65727273,};
enum $A20BE615049D5079A0A9F69830C0C3D0 {cFrameColor = 0x0,cBodyColor = 0x1,cTextColor = 0x2,cThumbColor = 0x3,kNumberCtlCTabEntries = 0x4,};
enum $A2243C704A69C41BEFBD9BE6528C27CE {fsmFFSNotFoundErr = 0xFFFFFE51,fsmBusyFFSErr = 0xFFFFFE50,fsmBadFFSNameErr = 0xFFFFFE4F,fsmBadFSDLenErr = 0xFFFFFE4E,fsmDuplicateFSIDErr = 0xFFFFFE4D,fsmBadFSDVersionErr = 0xFFFFFE4C,fsmNoAlternateStackErr = 0xFFFFFE4B,fsmUnknownFSMMessageErr = 0xFFFFFE4A,};
enum $A22F1918C9D75222E8974210EDBEA0CB {kInvalidGeneration = 0x0,kInvalidFontFamily = 0xFFFFFFFF,kInvalidFont = 0x0,};
enum $A261E92C82250443DCF4E199E1935CB2 {kCaretPosition = 0x1,kRawText = 0x2,kSelectedRawText = 0x3,kConvertedText = 0x4,kSelectedConvertedText = 0x5,kBlockFillText = 0x6,kOutlineText = 0x7,kSelectedText = 0x8,};
enum $A28164E73FCF99FD87F3421048BF47D5 {cmGrayResponse = 0x0,cmRedResponse = 0x1,cmGreenResponse = 0x2,cmBlueResponse = 0x3,cmCyanResponse = 0x4,cmMagentaResponse = 0x5,cmYellowResponse = 0x6,cmUcrResponse = 0x7,cmBgResponse = 0x8,cmOnePlusLastResponse = 0x9,};
enum $A281AF7B99A35340345E04E35C70D610 {pCapacity = 0x63617061,pEjectable = 0x6973656A,pFreeSpace = 0x66727370,pLocal = 0x69737276,pIsStartup = 0x69737464,};
enum $A287E71D1F69701BADB32338BADCC95C {kURLNullState = 0x0,kURLInitiatingState = 0x1,kURLLookingUpHostState = 0x2,kURLConnectingState = 0x3,kURLResourceFoundState = 0x4,kURLDownloadingState = 0x5,kURLDataAvailableState = 0x15,kURLTransactionCompleteState = 0x6,kURLErrorOccurredState = 0x7,kURLAbortingState = 0x8,kURLCompletedState = 0x9,kURLUploadingState = 0xA,};
struct $A28B60B4E296EA201CF19C8525D87881 {int nranges;_RuneEntry *ranges;};
enum $A2A3B97015A39488E2F6B427ADE8C31C {kUnknownConnect = 0x1,kPanelConnect = 0x2,kPanelTFTConnect = 0x2,kFixedModeCRTConnect = 0x3,kMultiModeCRT1Connect = 0x4,kMultiModeCRT2Connect = 0x5,kMultiModeCRT3Connect = 0x6,kMultiModeCRT4Connect = 0x7,kModelessConnect = 0x8,kFullPageConnect = 0x9,kVGAConnect = 0xA,kNTSCConnect = 0xB,kPALConnect = 0xC,kHRConnect = 0xD,kPanelFSTNConnect = 0xE,kMonoTwoPageConnect = 0xF,kColorTwoPageConnect = 0x10,kColor16Connect = 0x11,kColor19Connect = 0x12,kGenericCRT = 0x13,kGenericLCD = 0x14,kDDCConnect = 0x15,kNoConnect = 0x16,};
enum $A2A975C723B941E14B5EA3E71535DCCB {XTI_DEBUG = 0x1,XTI_LINGER = 0x80,XTI_RCVBUF = 0x1002,XTI_RCVLOWAT = 0x1004,XTI_SNDBUF = 0x1001,XTI_SNDLOWAT = 0x1003,XTI_PROTOTYPE = 0x1005,OPT_CHECKSUM = 0x600,OPT_RETRYCNT = 0x601,OPT_INTERVAL = 0x602,OPT_ENABLEEOM = 0x603,OPT_SELFSEND = 0x604,OPT_SERVERSTATUS = 0x605,OPT_ALERTENABLE = 0x606,OPT_KEEPALIVE = 0x8,};
enum $A2AFCD03DFE5A764B649D3293477A409 {cURL = 0x75726C20,cInternetAddress = 0x49504144,cHTML = 0x68746D6C,cFTPItem = 0x66747020,};
enum $A2BAA2F6D61B9C8D34EE372672643755 {kCFUserNotificationDefaultResponse = 0x0,kCFUserNotificationAlternateResponse = 0x1,kCFUserNotificationOtherResponse = 0x2,kCFUserNotificationCancelResponse = 0x3,};
enum $A2BAF8672D8DFE440D7AF0F2D0D6082C {bParentModDateChanges = 0xA,bAncestorModDateChanges = 0xB,};
enum $A2E4C1A1D328110650F1367AEE4801CC {kEventParamPostTarget = 0x70747267,typeEventTargetRef = 0x65747267,};
enum $A32D511474C1C75E3F967CEC227E7D2E {gestaltCollectionMgrVersion = 0x636C746E,};
enum $A3472286BEA89B0BEF16D6748432177E {keyASPrepositionOver = 0x6F766572,keyASPrepositionAbove = 0x61627665,keyASPrepositionBelow = 0x62656C77,keyASPrepositionApartFrom = 0x61707274,keyASPrepositionGiven = 0x6769766E,keyASPrepositionWith = 0x77697468,keyASPrepositionWithout = 0x776F7574,keyASPrepositionAbout = 0x61626F75,keyASPrepositionSince = 0x736E6365,keyASPrepositionUntil = 0x74696C6C,};
enum $A3569E236DE31A7BDE774BC6677BC801 {kTextEncodingMacHFS = 0xFF,};
enum $A3660B3B85150C165095F263FB2BF123 {fsUnixPriv = 0x1,};
enum $A398C4CE3AC240F3CE444D3FA673F898 {cmDefaultDeviceID = 0x0,cmDefaultProfileID = 0x0,};
enum $A3DCD35979526F9C17D6F74908408E41 {cmNoColorPacking = 0x0,cmWord5ColorPacking = 0x500,cmWord565ColorPacking = 0x600,cmLong8ColorPacking = 0x800,cmLong10ColorPacking = 0xA00,cmAlphaFirstPacking = 0x1000,cmOneBitDirectPacking = 0xB00,cmAlphaLastPacking = 0x0,cm8_8ColorPacking = 0x2800,cm16_8ColorPacking = 0x2000,cm24_8ColorPacking = 0x2100,cm32_8ColorPacking = 0x800,cm40_8ColorPacking = 0x2200,cm48_8ColorPacking = 0x2300,cm56_8ColorPacking = 0x2400,cm64_8ColorPacking = 0x2500,cm32_16ColorPacking = 0x2600,cm48_16ColorPacking = 0x2900,cm64_16ColorPacking = 0x2A00,cm32_32ColorPacking = 0x2700,cmLittleEndianPacking = 0x4000,cmReverseChannelPacking = 0x8000,};
enum $A41353A2A960F63EFC5E37A8D044C9EE {verIndiaHindi = 0x21,verPakistanUrdu = 0x22,verTurkishModified = 0x23,verItalianSwiss = 0x24,verInternational = 0x25,verRomania = 0x27,verGreecePoly = 0x28,verLithuania = 0x29,verPoland = 0x2A,verHungary = 0x2B,verEstonia = 0x2C,verLatvia = 0x2D,verSami = 0x2E,verFaroeIsl = 0x2F,verIran = 0x30,verRussia = 0x31,verIreland = 0x32,verKorea = 0x33,verChina = 0x34,verTaiwan = 0x35,verThailand = 0x36,verScriptGeneric = 0x37,verCzech = 0x38,verSlovak = 0x39,verFarEastGeneric = 0x3A,verMagyar = 0x3B,verBengali = 0x3C,verByeloRussian = 0x3D,};
enum $A42D8D8A1A3B72F923437330EA1FC81E {kDataBrowserLatestCallbacks = 0x0,};
enum $A439AC5A4ECE78E21E0C0F6EA5EFB5EF {kWindowIsCollapsedState = 0x1,};
enum $A45AA86CD6712345917C6FC73C0512FF {kNavReplyRecordVersion = 0x2,};
enum $A473548BCCF965826768B8BAE54D36CA {kRAInvalidParameter = 0xFFFFE444,kRAInvalidPort = 0xFFFFE443,kRAStartupFailed = 0xFFFFE442,kRAPortSetupFailed = 0xFFFFE441,kRAOutOfMemory = 0xFFFFE440,kRANotSupported = 0xFFFFE43F,kRAMissingResources = 0xFFFFE43E,kRAIncompatiblePrefs = 0xFFFFE43D,kRANotConnected = 0xFFFFE43C,kRAConnectionCanceled = 0xFFFFE43B,kRAUnknownUser = 0xFFFFE43A,kRAInvalidPassword = 0xFFFFE439,kRAInternalError = 0xFFFFE438,kRAInstallationDamaged = 0xFFFFE437,kRAPortBusy = 0xFFFFE436,kRAUnknownPortState = 0xFFFFE435,kRAInvalidPortState = 0xFFFFE434,kRAInvalidSerialProtocol = 0xFFFFE433,kRAUserLoginDisabled = 0xFFFFE432,kRAUserPwdChangeRequired = 0xFFFFE431,kRAUserPwdEntryRequired = 0xFFFFE430,kRAUserInteractionRequired = 0xFFFFE42F,kRAInitOpenTransportFailed = 0xFFFFE42E,kRARemoteAccessNotReady = 0xFFFFE42D,kRATCPIPInactive = 0xFFFFE42C,kRATCPIPNotConfigured = 0xFFFFE42B,kRANotPrimaryInterface = 0xFFFFE42A,kRAConfigurationDBInitErr = 0xFFFFE429,kRAPPPProtocolRejected = 0xFFFFE428,kRAPPPAuthenticationFailed = 0xFFFFE427,kRAPPPNegotiationFailed = 0xFFFFE426,kRAPPPUserDisconnected = 0xFFFFE425,kRAPPPPeerDisconnected = 0xFFFFE424,kRAPeerNotResponding = 0xFFFFE423,kRAATalkInactive = 0xFFFFE422,kRAExtAuthenticationFailed = 0xFFFFE421,kRANCPRejectedbyPeer = 0xFFFFE420,kRADuplicateIPAddr = 0xFFFFE41F,kRACallBackFailed = 0xFFFFE41E,kRANotEnabled = 0xFFFFE41D,};
enum $A477A9D9A30949C70593DE880651A9F5 {kAsyncMountInProgress = 0x1,kAsyncMountComplete = 0x2,kAsyncUnmountInProgress = 0x3,kAsyncUnmountComplete = 0x4,kAsyncEjectInProgress = 0x5,kAsyncEjectComplete = 0x6,};
enum $A489AFA699E8409A9DA117ABCD91F3DD {kTXNDefaultFontStyle = 0x0,};
enum $A4A20F53BAEA66D297DEB7A50859A964 {gestaltNameRegistryVersion = 0x6E726567,};
enum $A4B72ADD56086550BC5D44C7D492D62F : unsigned __int32 {AIFCVersion1 = 0xA2805140,};
enum $A4CF287AB5E9AB9AAF4B048273213B1E {kWindowTitleBarRgn = 0x0,kWindowTitleTextRgn = 0x1,kWindowCloseBoxRgn = 0x2,kWindowZoomBoxRgn = 0x3,kWindowDragRgn = 0x5,kWindowGrowRgn = 0x6,kWindowCollapseBoxRgn = 0x7,kWindowTitleProxyIconRgn = 0x8,kWindowStructureRgn = 0x20,kWindowContentRgn = 0x21,kWindowUpdateRgn = 0x22,kWindowOpaqueRgn = 0x23,kWindowGlobalPortRgn = 0x28,};
enum $A4E91F2DC25E93AFBF2E10355646699F {kWindowMovableModalGrowProc = 0x416,};
enum $A5002FD4C8AABFB231A48D70D9E11045 {smScriptNumDate = 0x1E,smScriptKeys = 0x20,smScriptIcon = 0x22,smScriptPrint = 0x24,smScriptTrap = 0x26,smScriptCreator = 0x28,smScriptFile = 0x2A,smScriptName = 0x2C,smScriptMonoFondSize = 0x4E,smScriptPrefFondSize = 0x50,smScriptSmallFondSize = 0x52,smScriptSysFondSize = 0x54,smScriptAppFondSize = 0x56,smScriptHelpFondSize = 0x58,smScriptValidStyles = 0x5A,smScriptAliasStyle = 0x5C,};
enum $A56F0ED265363007452A694F8A27B146 {gestaltColorMatchingAttr = 0x636D7461,gestaltHighLevelMatching = 0x0,gestaltColorMatchingLibLoaded = 0x1,};
enum $A573D5BFC6FE9379B4011F75D6601CED {FE_INEXACT = 0x2000000,FE_DIVBYZERO = 0x4000000,FE_UNDERFLOW = 0x8000000,FE_OVERFLOW = 0x10000000,FE_INVALID = 0x20000000,FE_ALL_EXCEPT = 0x3E000000,};
enum $A58116950EA4073DB331FAF46E8B017C {kControlRoundButtonContentTag = 0x636F6E74,kControlRoundButtonSizeTag = 0x73697A65,};
enum $A58F6CEAA65D72725BBA7C4ACD5EE387 {typeBoolean = 0x626F6F6C,typeChar = 0x54455854,};
enum $A591C5B630A911B2073EBB6F3C068066 {useFree = 0x0,useATalk = 0x1,useAsync = 0x2,useExtClk = 0x3,useMIDI = 0x4,};
enum $A5BD715C8EAA008A7A3794353BC5F23C {notInitErr = 0xFFFFFC7C,nameTypeErr = 0xFFFFFC7A,noPortErr = 0xFFFFFC79,noGlobalsErr = 0xFFFFFC78,localOnlyErr = 0xFFFFFC77,destPortErr = 0xFFFFFC76,sessTableErr = 0xFFFFFC75,noSessionErr = 0xFFFFFC74,badReqErr = 0xFFFFFC73,portNameExistsErr = 0xFFFFFC72,noUserNameErr = 0xFFFFFC71,userRejectErr = 0xFFFFFC70,noMachineNameErr = 0xFFFFFC6F,noToolboxNameErr = 0xFFFFFC6E,noResponseErr = 0xFFFFFC6D,portClosedErr = 0xFFFFFC6C,sessClosedErr = 0xFFFFFC6B,badPortNameErr = 0xFFFFFC69,noDefaultUserErr = 0xFFFFFC66,notLoggedInErr = 0xFFFFFC65,noUserRefErr = 0xFFFFFC64,networkErr = 0xFFFFFC63,noInformErr = 0xFFFFFC62,authFailErr = 0xFFFFFC61,noUserRecErr = 0xFFFFFC60,badServiceMethodErr = 0xFFFFFC5E,badLocNameErr = 0xFFFFFC5D,guestNotAllowedErr = 0xFFFFFC5C,};
enum $A5CD9B7305A68D7E3531C7FACDAC39C0 {kPEFWeakImportLibMask = 0x40,kPEFInitLibBeforeMask = 0x80,};
enum $A5E06333A0052231A19CEB93FA1BD8F6 {kPMQualityLowest = 0x0,kPMQualityInkSaver = 0x1,kPMQualityDraft = 0x4,kPMQualityNormal = 0x8,kPMQualityPhoto = 0xB,kPMQualityBest = 0xD,kPMQualityHighest = 0xF,};
enum $A5F7563972BA16BCEF7EEE452BF19E6A {kPMCurrentValue = 0x63757272,kPMDefaultValue = 0x64666C74,kPMMinimumValue = 0x6D696E76,kPMMaximumValue = 0x6D617876,kPMSourceProfile = 0x73726370,kPMMinRange = 0x6D6E7267,kPMMaxRange = 0x6D787267,kPMMinSquareResolution = 0x6D696E73,kPMMaxSquareResolution = 0x6D617873,kPMDefaultResolution = 0x64667472,};
enum $A61C89728A9A916804A244D6C069EC79 {kThemeTextColorNotification = 0x2F,};
enum $A63DD97E2CBDA8A7543A4F9AAF81D1AF {langWelsh = 0x80,langBasque = 0x81,langCatalan = 0x82,langLatin = 0x83,langQuechua = 0x84,langGuarani = 0x85,langAymara = 0x86,langTatar = 0x87,langUighur = 0x88,langDzongkha = 0x89,langJavaneseRom = 0x8A,langSundaneseRom = 0x8B,langGalician = 0x8C,langAfrikaans = 0x8D,};
enum $A6732141157575407A100CC495517723 {pushButProc = 0x0,checkBoxProc = 0x1,radioButProc = 0x2,scrollBarProc = 0x10,popupMenuProc = 0x3F0,};
enum $A698BEB7613B05D556DAD70D18AF6846 {singleDevices = 0x1,dontMatchSeeds = 0x2,allDevices = 0x4,};
enum $A6CEE37E00C2322A505ECE6E87375A30 {eStepOver = 0x0,eStepIn = 0x1,eStepOut = 0x2,eRun = 0x3,};
enum $A6D75AC4FC37CA558D2C957124FF6D19 {kTextServiceVersion2 = 0x74737632,};
enum $A6F094D8DDA1C0CFC8D47288B8EC0B6F {kAENormalPriority = 0x0,kAEHighPriority = 0x1,};
enum $A707B67DD1B6D7E3F7A8C5325299836D {kEventScrollableGetInfo = 0x1,kEventScrollableInfoChanged = 0x2,kEventScrollableScrollTo = 0xA,};
enum $A7575B3039476EA3F1C1D03F2499B38C {kNoOrnamentsSelector = 0x0,kDingbatsSelector = 0x1,kPiCharactersSelector = 0x2,kFleuronsSelector = 0x3,kDecorativeBordersSelector = 0x4,kInternationalSymbolsSelector = 0x5,kMathSymbolsSelector = 0x6,};
enum $A788D73B1051A86ACDAA839045FF5F42 {kReadyThreadState = 0x0,kStoppedThreadState = 0x1,kRunningThreadState = 0x2,};
enum $A78C45CE051B9B7F5C82C3A7C294B4F8 {cmEmbedWholeProfile = 0x0,cmEmbedProfileIdentifier = 0x1,};
enum $A79B12ECD40934D2D9020A046AFC4924 {kPEFExpSymClassShift = 0x18,kPEFExpSymNameOffsetMask = 0xFFFFFF,kPEFExpSymMaxNameOffset = 0xFFFFFF,};
enum $A7A218FD448AC71BBFC70788B7B8D695 {componentDllLoadErr = 0xFFFFF7D5,componentDllEntryNotFoundErr = 0xFFFFF7D4,qtmlDllLoadErr = 0xFFFFF7D3,qtmlDllEntryNotFoundErr = 0xFFFFF7D2,qtmlUninitialized = 0xFFFFF7D1,unsupportedOSErr = 0xFFFFF7D0,unsupportedProcessorErr = 0xFFFFF7CF,};
enum $A7B5BC809953040FA119957FBEBA5503 {defaultPhysicalEntryCount = 0x8,};
enum $A7BFDD498B1782EC1ED6019F4F7E6FA2 {kOSAComponentType = 0x6F736120,};
enum $A7FD918061FC0B9B4EFABC08C951B71D {kHRRendererHTML32Type = 0x68743332,};
enum $A822B52F4AFF6F9B7AD06D3233CA9C70 {kXLibTag1 = 0xF04D6163,kVLibTag2 = 0x564C6962,kBLibTag2 = 0x424C6962,kXLibVersion = 0x1,};
enum $A85653B800DC771F27C1826C67852DD8 {smfDisableKeyScriptSyncMask = 0x8000000,};
enum $A8752B692ECA73E53AB43DBD84FE39E0 {kLSLaunchDefaults = 0x1,kLSLaunchAndPrint = 0x2,kLSLaunchReserved2 = 0x4,kLSLaunchReserved3 = 0x8,kLSLaunchReserved4 = 0x10,kLSLaunchReserved5 = 0x20,kLSLaunchReserved6 = 0x40,kLSLaunchInhibitBGOnly = 0x80,kLSLaunchDontAddToRecents = 0x100,kLSLaunchDontSwitch = 0x200,kLSLaunchNoParams = 0x800,kLSLaunchAsync = 0x10000,kLSLaunchStartClassic = 0x20000,kLSLaunchInClassic = 0x40000,kLSLaunchNewInstance = 0x80000,kLSLaunchAndHide = 0x100000,kLSLaunchAndHideOthers = 0x200000,};
enum $A8AF2FAB2E0E9F474FB0D44479D2B73F : __int64 {kTXNDontCareTypeSize = 0xFFFFFFFF,kTXNDontCareTypeStyle = 0xFF,kTXNIncrementTypeSize = 0x1,kTXNDecrementTypeSize = 0x80000000,kTXNUseScriptDefaultValue = 0xFFFFFFFFFFFFFFFF,kTXNNoFontVariations = 0x7FFF,};
enum $A8BCE545C8D5AD6448F30DD80C46F428 {kControlBehaviorPushbutton = 0x0,kControlBehaviorToggles = 0x100,kControlBehaviorSticky = 0x200,kControlBehaviorSingleValueMenu = 0x0,kControlBehaviorMultiValueMenu = 0x4000,kControlBehaviorOffsetContents = 0x8000,};
enum $A8C358955E8CB025A08708108945A486 {activeFlagBit = 0x0,btnStateBit = 0x7,cmdKeyBit = 0x8,shiftKeyBit = 0x9,alphaLockBit = 0xA,optionKeyBit = 0xB,controlKeyBit = 0xC,rightShiftKeyBit = 0xD,rightOptionKeyBit = 0xE,rightControlKeyBit = 0xF,};
enum $A8C41429F117742B8DBC11655590541A {kEventWindowUpdate = 0x1,kEventWindowDrawContent = 0x2,};
enum $A8C97E4EDD9E089EB77DFE179D2C9A4B {internalComponentErr = 0xFFFFF7EA,notImplementedMusicOSErr = 0xFFFFF7E9,cantSendToSynthesizerOSErr = 0xFFFFF7E8,cantReceiveFromSynthesizerOSErr = 0xFFFFF7E7,illegalVoiceAllocationOSErr = 0xFFFFF7E6,illegalPartOSErr = 0xFFFFF7E5,illegalChannelOSErr = 0xFFFFF7E4,illegalKnobOSErr = 0xFFFFF7E3,illegalKnobValueOSErr = 0xFFFFF7E2,illegalInstrumentOSErr = 0xFFFFF7E1,illegalControllerOSErr = 0xFFFFF7E0,midiManagerAbsentOSErr = 0xFFFFF7DF,synthesizerNotRespondingOSErr = 0xFFFFF7DE,synthesizerOSErr = 0xFFFFF7DD,illegalNoteChannelOSErr = 0xFFFFF7DC,noteChannelNotAllocatedOSErr = 0xFFFFF7DB,tunePlayerFullOSErr = 0xFFFFF7DA,tuneParseOSErr = 0xFFFFF7D9,noExportProcAvailableErr = 0xFFFFF7D7,videoOutputInUseErr = 0xFFFFF7D6,};
enum $A9175135286E5424CB0D9B4E7B733C82 {envMac = 0xFFFFFFFF,envXL = 0xFFFFFFFE,envMachUnknown = 0x0,env512KE = 0x1,envMacPlus = 0x2,envSE = 0x3,envMacII = 0x4,envMacIIx = 0x5,envMacIIcx = 0x6,envSE30 = 0x7,envPortable = 0x8,envMacIIci = 0x9,envMacIIfx = 0xB,};
enum $A91E3FEAC91E637E3BBA7BCB4506DE6C {kThemeSmallTabHeight = 0x10,kThemeLargeTabHeight = 0x15,kThemeTabPaneOverlap = 0x3,kThemeSmallTabHeightMax = 0x13,kThemeLargeTabHeightMax = 0x18,};
enum $A92318ADF7676569A929FDB7AAC6B8D1 {gestaltDisplayMgrVers = 0x64706C76,};
enum $A94A498AA8C2F45809E2A0E4697DE315 : unsigned __int32 {kLSInvalidExtensionIndex = 0xFFFFFFFF,};
enum $A9758B604953F44B643EE3821B96EE8F {procNotFound = 0xFFFFFDA8,memFragErr = 0xFFFFFDA7,appModeErr = 0xFFFFFDA6,protocolErr = 0xFFFFFDA5,hardwareConfigErr = 0xFFFFFDA4,appMemFullErr = 0xFFFFFDA3,appIsDaemon = 0xFFFFFDA2,bufferIsSmall = 0xFFFFFDA1,noOutstandingHLE = 0xFFFFFDA0,connectionInvalid = 0xFFFFFD9F,noUserInteractionAllowed = 0xFFFFFD9E,};
enum $A97D6D10E3AD8AFA1EA71F908580BE17 {nonGlyphID = 0xFFFF,};
enum $A9AD3456580403ACF9C6B4A7048AB690 {T_SENDZERO = 0x1,T_XPG4_1 = 0x2,T_CAN_SUPPORT_MDATA = 0x10000000,T_CAN_RESOLVE_ADDR = 0x40000000,T_CAN_SUPPLY_MIB = 0x20000000,};
enum $A9B07CB4532F54CC01642EE6387674DE : unsigned __int32 {kCollectionNoAttributes = 0x0,kCollectionAllAttributes = 0xFFFFFFFF,kCollectionUserAttributes = 0xFFFF,kCollectionDefaultAttributes = 0x40000000,};
enum $A9E076DEE583C1136F8BAE9626348CDF {cmCurrentDeviceInfoVersion = 0x10000,cmCurrentProfileInfoVersion = 0x10000,};
enum $AA15C0661A2FB2FAB7CCA72E78633A86 {kCGEventSupressionStateSupressionInterval = 0x0,kCGEventSupressionStateRemoteMouseDrag = 0x1,kCGNumberOfEventSupressionStates = 0x2,};
enum $AA2D223BE897D71CB13B92929E16C3FC {kATSUseCaretOrigins = 0x0,kATSUseDeviceOrigins = 0x1,kATSUseFractionalOrigins = 0x2,kATSUseOriginFlags = 0x3,};
enum $AA30E8BB4D3B3F550C8E2D013F1C43C4 {COM_SERIAL = 0x5345524C,};
enum $AA736588CD12C216F3B9C339A41F6524 {kControlRadioGroupProc = 0x1A0,};
enum $AA74A62FE0901ABD321579DB5FA40B7E {kControlPictureHandleTag = 0x70696368,};
enum $AA894E32487E3862FBB3C0CE96496867 {dsNoPk3 = 0x14,dsNoPk4 = 0x15,dsNoPk5 = 0x16,dsNoPk6 = 0x17,dsNoPk7 = 0x18,dsMemFullErr = 0x19,dsBadLaunch = 0x1A,dsFSErr = 0x1B,dsStknHeap = 0x1C,negZcbFreeErr = 0x21,dsFinderErr = 0x29,dsBadSlotInt = 0x33,dsBadSANEOpcode = 0x51,dsBadPatchHeader = 0x53,menuPrgErr = 0x54,dsMBarNFnd = 0x55,dsHMenuFindErr = 0x56,dsWDEFNotFound = 0x57,dsCDEFNotFound = 0x58,dsMDEFNotFound = 0x59,};
enum $AA9496FE2FFCD5175696C6AE3700BEFE {kLSMinCatInfoBitmap = 0x180A,};
enum $AAA5C25531AE86BA2D3664E4224783FB {kCFPropertyListOpenStepFormat = 0x1,kCFPropertyListXMLFormat_v1_0 = 0x64,kCFPropertyListBinaryFormat_v1_0 = 0xC8,};
enum $AAAEA4B86AC2FAE96AFE5D76F8CF2D73 {kNextIOIsInput = 0x1,kNextIOIsOutput = 0x2,kMoreIOTransfers = 0x4,};
enum $AAB5F496A0B5E152CB221717E36939D8 {cMatchErr = 0xFFFFFF6A,cTempMemErr = 0xFFFFFF69,cNoMemErr = 0xFFFFFF68,cRangeErr = 0xFFFFFF67,cProtectErr = 0xFFFFFF66,cDevErr = 0xFFFFFF65,cResErr = 0xFFFFFF64,cDepthErr = 0xFFFFFF63,rgnTooBigErr = 0xFFFFFE0C,updPixMemErr = 0xFFFFFF83,pictInfoVersionErr = 0xFFFFD508,pictInfoIDErr = 0xFFFFD507,pictInfoVerbErr = 0xFFFFD506,cantLoadPickMethodErr = 0xFFFFD505,colorsRequestedErr = 0xFFFFD504,pictureDataErr = 0xFFFFD503,};
enum $AABBBA3E4FDD8D616C273C16D3835CF7 {tokenQuestion = 0x3C,tokenPi = 0x3D,tokenRoot = 0x3E,tokenSigma = 0x3F,tokenIntegral = 0x40,tokenMicro = 0x41,tokenCapPi = 0x42,tokenInfinity = 0x43,tokenColon = 0x44,tokenHash = 0x45,tokenDollar = 0x46,tokenNoBreakSpace = 0x47,tokenFraction = 0x48,tokenIntlCurrency = 0x49,tokenLeftSingGuillemet = 0x4A,tokenRightSingGuillemet = 0x4B,tokenPerThousand = 0x4C,tokenEllipsis = 0x4D,tokenCenterDot = 0x4E,tokenNil = 0x7F,};
enum $AAD11A300A0B38B67B0E576D475523C2 {kControlPopupButtonExtraHeightTag = 0x65786874,kControlPopupButtonOwnedMenuRefTag = 0x6F6D7266,};
enum $AAEC5B576D105B80EAA5E444CC880605 {kControlKindListBox = 0x6C626F78,};
enum $AB0BA9F9A7D6180DD29DC1F0E4564763 {systemFont = 0x0,applFont = 0x1,};
enum $AB598488D6FC6BB80324F33420DF9413 {scsiNoParityCheck = 0x2,scsiDisableSelectWAtn = 0x4,scsiSavePtrOnDisconnect = 0x8,scsiNoBucketIn = 0x10,scsiNoBucketOut = 0x20,scsiDisableWide = 0x40,scsiInitiateWide = 0x80,scsiRenegotiateSense = 0x100,scsiDisableDiscipline = 0x200,scsiIOFlagReserved0080 = 0x80,scsiIOFlagReserved8000 = 0x8000,};
enum $AB62DF2166012788AB80ABEDB86FD24F {kOSANullMode = 0x0,kOSAModeNull = 0x0,};
enum $AB88C37431EB6AD714E363592C093039 {sleepRequest = 0x1,sleepDemand = 0x2,sleepWakeUp = 0x3,sleepRevoke = 0x4,sleepUnlock = 0x4,sleepDeny = 0x5,sleepNow = 0x6,dozeDemand = 0x7,dozeWakeUp = 0x8,dozeRequest = 0x9,enterStandby = 0xA,enterRun = 0xB,suspendRequestMsg = 0xC,suspendDemandMsg = 0xD,suspendRevokeMsg = 0xE,suspendWakeUpMsg = 0xF,getPowerLevel = 0x10,setPowerLevel = 0x11,};
enum $AB8F6E438B0351C0F4A780897FB17068 {gestaltAliasMgrAttr = 0x616C6973,gestaltAliasMgrPresent = 0x0,gestaltAliasMgrSupportsRemoteAppletalk = 0x1,gestaltAliasMgrSupportsAOCEKeychain = 0x2,gestaltAliasMgrResolveAliasFileWithMountOptions = 0x3,gestaltAliasMgrFollowsAliasesWhenResolving = 0x4,gestaltAliasMgrSupportsExtendedCalls = 0x5,gestaltAliasMgrSupportsFSCalls = 0x6,gestaltAliasMgrPrefersPath = 0x7,};
enum $AB960C5C89CB2107B895E8C77F810A6A {kSTXHasLigAction = 0x2000,};
enum $AB97248B094B5D1A3A015060971774EE {kNSLSearchStateBufferFull = 0x1,kNSLSearchStateOnGoing = 0x2,kNSLSearchStateComplete = 0x3,kNSLSearchStateStalled = 0x4,kNSLWaitingForContinue = 0x5,};
enum $ABC1448E5B265A8451207B34E1682A6C {T_ADDR = 0x1,T_OPT = 0x2,T_UDATA = 0x4,T_ALL = 0xFFFF,};
enum $ABC7F536762CD4DBE3717CB53592D8F2 {romanSysFond = 0x3FFF,romanAppFond = 0x3,romanFlags = 0x7,smFondStart = 0x4000,smFondEnd = 0xC000,smUprHalfCharSet = 0x80,};
enum $AC0A2677D571DAA04AD1DD0469ED0A1D {kIMJaTypingMethodProperty = 0x6A747970,kIMJaTypingMethodRoman = 0x726F6D61,kIMJaTypingMethodKana = 0x6B616E61,};
enum $AC21F300A3738CBC6E9E73B3C38F575F {MUXID_ALL = 0xFFFFFFFF,};
enum $AC49BCB98774BA196F1D518C13C65C80 {eraField = 0x0,yearField = 0x1,monthField = 0x2,dayField = 0x3,hourField = 0x4,minuteField = 0x5,secondField = 0x6,dayOfWeekField = 0x7,dayOfYearField = 0x8,weekOfYearField = 0x9,pmField = 0xA,res1Field = 0xB,res2Field = 0xC,res3Field = 0xD,};
enum $ACBF80B47DF596401AE27985605ED1CD {RPROTNORM = 0x10,RPROTDIS = 0x20,RPROTDAT = 0x40,};
enum $ACDB03B0D9D598C0F761C4B16B3D1CB5 {kHFSMaxVolumeNameChars = 0x1B,kHFSMaxFileNameChars = 0x1F,kHFSPlusMaxFileNameChars = 0xFF,};
enum $ACDD1ACB921825D78706C486B32E5ACB {kOPBDTag = 0x6F706264,kOPBDCurrentVersion = 0x10000,kOPBDDistanceFormat = 0x0,kOPBDControlPointFormat = 0x1,};
enum $ACFE356A26329F34E52B08B2CA60B1FD {keyMenuID = 0x6D696420,keyMenuItem = 0x6D69746D,keyCloseAllWindows = 0x63617720,keyOriginalBounds = 0x6F626E64,keyNewBounds = 0x6E626E64,keyLocalWhere = 0x6C776872,};
enum $AD013BEAD863262C000A0195ED82B0E8 {eLenErr = 0xFFFFFFA4,eMultiErr = 0xFFFFFFA5,};
enum $AD2245E410F1AFE0166A0410156B5CA4 {kPPPConnectionStatusDialogsFlag = 0x1,kPPPConnectionRemindersFlag = 0x2,kPPPConnectionFlashingIconFlag = 0x4,kPPPOutPasswordDialogsFlag = 0x8,kPPPAllAlertsDisabledFlag = 0x0,kPPPAllAlertsEnabledFlag = 0xF,};
enum $AD2CE5B9F9B3F0DC238AE97EC382AC06 {kCFRunLoopEntry = 0x1,kCFRunLoopBeforeTimers = 0x2,kCFRunLoopBeforeSources = 0x4,kCFRunLoopBeforeWaiting = 0x20,kCFRunLoopAfterWaiting = 0x40,kCFRunLoopExit = 0x80,kCFRunLoopAllActivities = 0xFFFFFFF,};
enum $AD37DD8421B072CED9CE406226181BC2 {gestaltPortable2001ANSIKbd = 0xCA,gestaltPortable2001ISOKbd = 0xCB,gestaltPortable2001JISKbd = 0xCF,};
enum $AD43285D6E4DEFBA73FD65EE449C3B60 {kNoEndingProsody = 0x1,kNoSpeechInterrupt = 0x2,kPreflightThenPause = 0x4,};
enum $ADB2C9B915336A0E736BF36874077906 {kPEFHashLengthShift = 0x10,kPEFHashValueMask = 0xFFFF,kPEFHashMaxLength = 0xFFFF,};
enum $ADB5B3A58E0593C11830CCA26F955931 {sizeof_sfntCMapEncoding = 0x8,};
enum $ADBD11780E2D799B74D44FEA6B34E12D {kExtensionDisabledFolderType = 0x65787444,kControlPanelDisabledFolderType = 0x63747244,kSystemExtensionDisabledFolderType = 0x6D616344,kStartupItemsDisabledFolderType = 0x73747244,kShutdownItemsDisabledFolderType = 0x73686444,kApplicationsFolderType = 0x61707073,kDocumentsFolderType = 0x646F6373,};
enum $ADBD390F96C761DA0824B5D6C5C4F47B {kNSLServicesLookupDataEvent = 0x6,kNSLNeighborhoodLookupDataEvent = 0x7,kNSLNewDataEvent = 0x8,kNSLContinueLookupEvent = 0x9,};
enum $ADEC8C5645EDD0C0E96DA21C1B2F49B1 {kIPCPTCPHdrCompressionDisabled = 0x0,kIPCPTCPHdrCompressionEnabled = 0x1,};
enum $AE29ACD0F6C915704455DE6DCD523306 {kUnicodeDefaultDirection = 0x0,kUnicodeLeftToRight = 0x1,kUnicodeRightToLeft = 0x2,};
enum $AE358EC4F5D4E63B3FC7EA43B1CB40B6 {kPMUnlocked = 0x0,kPMLocked = 0x1,};
enum $AE6D121E4AB3DF728E9C7F00B24FD5F7 {kTextEncodingUnicodeDefault = 0x100,kTextEncodingUnicodeV1_1 = 0x101,kTextEncodingISO10646_1993 = 0x101,kTextEncodingUnicodeV2_0 = 0x103,kTextEncodingUnicodeV2_1 = 0x103,kTextEncodingUnicodeV3_0 = 0x104,kTextEncodingUnicodeV3_1 = 0x105,kTextEncodingUnicodeV3_2 = 0x106,};
enum $AE8BA71EA0C0B3C339B1CDEB90DFA22D {gestaltControlStripVersion = 0x63737672,};
enum $AE930DDFC6D071A9F1408C38F86A54B6 {kCollectionUser0Bit = 0x0,kCollectionUser1Bit = 0x1,kCollectionUser2Bit = 0x2,kCollectionUser3Bit = 0x3,kCollectionUser4Bit = 0x4,kCollectionUser5Bit = 0x5,kCollectionUser6Bit = 0x6,kCollectionUser7Bit = 0x7,kCollectionUser8Bit = 0x8,kCollectionUser9Bit = 0x9,kCollectionUser10Bit = 0xA,kCollectionUser11Bit = 0xB,kCollectionUser12Bit = 0xC,kCollectionUser13Bit = 0xD,kCollectionUser14Bit = 0xE,kCollectionUser15Bit = 0xF,kCollectionReserved0Bit = 0x10,kCollectionReserved1Bit = 0x11,kCollectionReserved2Bit = 0x12,kCollectionReserved3Bit = 0x13,kCollectionReserved4Bit = 0x14,kCollectionReserved5Bit = 0x15,kCollectionReserved6Bit = 0x16,kCollectionReserved7Bit = 0x17,kCollectionReserved8Bit = 0x18,kCollectionReserved9Bit = 0x19,kCollectionReserved10Bit = 0x1A,kCollectionReserved11Bit = 0x1B,kCollectionReserved12Bit = 0x1C,kCollectionReserved13Bit = 0x1D,kCollectionPersistenceBit = 0x1E,kCollectionLockBit = 0x1F,};
enum $AE9822AFDA0B8360AB38E9887A50ED9D {kIOMultipleRanges = 0x1,kIOLogicalRanges = 0x2,kIOMinimalLogicalMapping = 0x4,kIOShareMappingTables = 0x8,kIOIsInput = 0x10,kIOIsOutput = 0x20,kIOCoherentDataPath = 0x40,kIOTransferIsLogical = 0x80,kIOClientIsUserMode = 0x80,};
enum $AE9C3E3B6F184BCE31ADAF245998DA2B {enumSortDirection = 0x736F6472,enumSortDirectionNormal = 0x736E726D,enumSortDirectionReverse = 0x73727673,};
enum $AE9EC8A22604CE0CA203B0D894DED5F3 {kWindowEdgeDefault = 0x0,kWindowEdgeTop = 0x1,kWindowEdgeLeft = 0x2,kWindowEdgeBottom = 0x4,kWindowEdgeRight = 0x8,};
enum $AECD25402A370769DF4E520777842AB1 {kEventParamTextInputSendRefCon = 0x74737263,kEventParamTextInputSendComponentInstance = 0x74736369,kEventParamTextInputSendSLRec = 0x7473736C,kEventParamTextInputReplySLRec = 0x7472736C,kEventParamTextInputSendText = 0x74737478,kEventParamTextInputReplyText = 0x74727478,kEventParamTextInputSendUpdateRng = 0x74737570,kEventParamTextInputSendHiliteRng = 0x74736869,kEventParamTextInputSendClauseRng = 0x7473636C,kEventParamTextInputSendPinRng = 0x7473706E,kEventParamTextInputSendFixLen = 0x74736678,kEventParamTextInputSendLeadingEdge = 0x74736C65,kEventParamTextInputReplyLeadingEdge = 0x74726C65,kEventParamTextInputSendTextOffset = 0x7473746F,kEventParamTextInputReplyTextOffset = 0x7472746F,kEventParamTextInputReplyRegionClass = 0x74727267,kEventParamTextInputSendCurrentPoint = 0x74736370,kEventParamTextInputSendDraggingMode = 0x7473646D,kEventParamTextInputReplyPoint = 0x74727074,kEventParamTextInputReplyFont = 0x74726674,kEventParamTextInputReplyFMFont = 0x7472666D,kEventParamTextInputReplyPointSize = 0x7472707A,kEventParamTextInputReplyLineHeight = 0x74726C68,kEventParamTextInputReplyLineAscent = 0x74726C61,kEventParamTextInputReplyTextAngle = 0x74727461,kEventParamTextInputSendShowHide = 0x74737368,kEventParamTextInputReplyShowHide = 0x74727368,kEventParamTextInputSendKeyboardEvent = 0x74736B65,kEventParamTextInputSendTextServiceEncoding = 0x74737365,kEventParamTextInputSendTextServiceMacEncoding = 0x7473736D,kEventParamTextInputGlyphInfoArray = 0x676C7068,};
enum $AECFB0BDA5B2BE96B3114767EF219D1C {kAEDoObjectsExist = 0x646F6578,kAEDoScript = 0x646F7363,kAEDrag = 0x64726167,kAEDuplicateSelection = 0x73647570,kAEEditGraphic = 0x65646974,kAEEmptyTrash = 0x656D7074,kAEEnd = 0x656E6420,kAEEndsWith = 0x656E6473,kAEEndTransaction = 0x656E6474,kAEEquals = 0x3D202020,kAEExpanded = 0x70657870,kAEFast = 0x66617374,kAEFinderEvents = 0x464E4452,kAEFormulaProtect = 0x6670726F,kAEFullyJustified = 0x66756C6C,kAEGetClassInfo = 0x716F626A,kAEGetData = 0x67657464,kAEGetDataSize = 0x6473697A,kAEGetEventInfo = 0x67746569,kAEGetInfoSelection = 0x73696E66,};
enum $AEF51C7F4A5FBEA9C1BF05737DEB57B2 {kFolderInUserFolder = 0x20,kFolderInUserFolderBit = 0x5,kFolderTrackedByAlias = 0x40,kFolderTrackedByAliasBit = 0x6,kFolderInRemoteUserFolderIfAvailable = 0x80,kFolderInRemoteUserFolderIfAvailableBit = 0x7,kFolderNeverMatchedInIdentifyFolder = 0x100,kFolderNeverMatchedInIdentifyFolderBit = 0x8,kFolderMustStayOnSameVolume = 0x200,kFolderMustStayOnSameVolumeBit = 0x9,kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledMask = 0x400,kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledBit = 0xA,kFolderInLocalOrRemoteUserFolder = 0xA0,};
enum $AF19F49219DE0DDEBB831BA538354156 {kAEUnknownSource = 0x0,kAEDirectCall = 0x1,kAESameProcess = 0x2,kAELocalProcess = 0x3,kAERemoteProcess = 0x4,};
enum $AF33A9D2AF2A9CE9A01FECE2DB0620A5 {gestaltSysArchitecture = 0x73797361,gestalt68k = 0x1,gestaltPowerPC = 0x2,};
enum $AF3FA1F01AF3104F8B6DD0D054743583 {typeMeters = 0x6D657472,typeInches = 0x696E6368,typeFeet = 0x66656574,typeYards = 0x79617264,typeMiles = 0x6D696C65,typeKilometers = 0x6B6D7472,typeCentimeters = 0x636D7472,typeSquareMeters = 0x7371726D,typeSquareFeet = 0x73716674,typeSquareYards = 0x73717964,typeSquareMiles = 0x73716D69,typeSquareKilometers = 0x73716B6D,typeLiters = 0x6C697472,typeQuarts = 0x71727473,typeGallons = 0x67616C6E,typeCubicMeters = 0x636D6574,typeCubicFeet = 0x63666574,typeCubicInches = 0x6375696E,typeCubicCentimeter = 0x63636D74,typeCubicYards = 0x63797264,typeKilograms = 0x6B67726D,typeGrams = 0x6772616D,typeOunces = 0x6F7A7320,typePounds = 0x6C627320,typeDegreesC = 0x64656763,typeDegreesF = 0x64656766,typeDegreesK = 0x6465676B,};
enum $AF8A08269BC4FE226BE3394C79688285 {kThemePushButton = 0x0,kThemeCheckBox = 0x1,kThemeRadioButton = 0x2,kThemeBevelButton = 0x3,kThemeArrowButton = 0x4,kThemePopupButton = 0x5,kThemeDisclosureButton = 0x6,kThemeIncDecButton = 0x7,kThemeSmallBevelButton = 0x8,kThemeMediumBevelButton = 0x3,kThemeLargeBevelButton = 0x9,kThemeListHeaderButton = 0xA,kThemeRoundButton = 0xB,kThemeLargeRoundButton = 0xC,kThemeSmallCheckBox = 0xD,kThemeSmallRadioButton = 0xE,kThemeRoundedBevelButton = 0xF,kThemeNormalCheckBox = 0x1,kThemeNormalRadioButton = 0x2,};
enum $AFB34579D5BC8D4076068676B894D91A {minCountry = 0x0,maxCountry = 0x6B,};
enum $AFF80F91A29C3DB5EEA9ABEDB53A9D9B {kEventAppActivated = 0x1,kEventAppDeactivated = 0x2,kEventAppQuit = 0x3,kEventAppLaunchNotification = 0x4,kEventAppLaunched = 0x5,kEventAppTerminated = 0x6,kEventAppFrontSwitched = 0x7,kEventAppFocusMenuBar = 0x8,kEventAppFocusNextDocumentWindow = 0x9,kEventAppFocusNextFloatingWindow = 0xA,kEventAppFocusToolbar = 0xB,kEventAppGetDockTileMenu = 0x14,kEventAppHidden = 0x6B,kEventAppShown = 0x6C,kEventAppSystemUIModeChanged = 0x6D,};
enum $B05F74345C2BAC9C8E7ACD991E6A926C {dVMImmuneMask = 0x1,dOpenedMask = 0x20,dRAMBasedMask = 0x40,drvrActiveMask = 0x80,};
enum $B0997FC7FE24CA18BD367E175894AC6A {kControlIconResourceIDTag = 0x69726573,kControlIconContentTag = 0x636F6E74,};
enum $B09E962768348F57FD89EFB99D17EEC0 {kDCMJapaneseYomiType = 0x75747874,kDCMJapaneseHyokiType = 0x75747874,kDCMJapaneseHinshiType = 0x68696E73,kDCMJapaneseWeightType = 0x73686F72,kDCMJapanesePhoneticType = 0x75747874,kDCMJapaneseAccentType = 0x62797465,kDCMJapaneseOnKunReadingType = 0x75747874,kDCMJapaneseFukugouInfoType = 0x66756B75,};
enum $B09F953D3A89FA02794FDE8A08242BDD {kControlTriangleLastValueTag = 0x6C617374,};
enum $B0EC4D39231F5FAD36C403190F446329 {kControlDisclosureTrianglePointDefault = 0x0,kControlDisclosureTrianglePointRight = 0x1,kControlDisclosureTrianglePointLeft = 0x2,};
enum $B1318AEC6DDB22F080A547A9A181D628 {noHardware = 0xFFFFFF38,notEnoughHardware = 0xFFFFFF37,queueFull = 0xFFFFFF35,resProblem = 0xFFFFFF34,badChannel = 0xFFFFFF33,badFormat = 0xFFFFFF32,notEnoughBufferSpace = 0xFFFFFF31,badFileFormat = 0xFFFFFF30,channelBusy = 0xFFFFFF2F,buffersTooSmall = 0xFFFFFF2E,channelNotBusy = 0xFFFFFF2D,noMoreRealTime = 0xFFFFFF2C,siVBRCompressionNotSupported = 0xFFFFFF2B,siNoSoundInHardware = 0xFFFFFF24,siBadSoundInDevice = 0xFFFFFF23,siNoBufferSpecified = 0xFFFFFF22,siInvalidCompression = 0xFFFFFF21,siHardDriveTooSlow = 0xFFFFFF20,siInvalidSampleRate = 0xFFFFFF1F,siInvalidSampleSize = 0xFFFFFF1E,siDeviceBusyErr = 0xFFFFFF1D,siBadDeviceName = 0xFFFFFF1C,siBadRefNum = 0xFFFFFF1B,siInputDeviceErr = 0xFFFFFF1A,siUnknownInfoType = 0xFFFFFF19,siUnknownQuality = 0xFFFFFF18,};
enum $B142BA054C1D58A6EEC993FCA1E9F256 {kClippingCreator = 0x64726167,kClippingPictureType = 0x636C7070,kClippingTextType = 0x636C7074,kClippingSoundType = 0x636C7073,kClippingUnknownType = 0x636C7075,};
enum $B159C3B12B4BD035AE2664694CE961DD {kDataBrowserRevealOnly = 0x0,kDataBrowserRevealAndCenterInView = 0x1,kDataBrowserRevealWithoutSelecting = 0x2,};
enum $B17097DD22BB98816E8A4C03A243E59C {gestaltFXfrMgrAttr = 0x66786672,gestaltFXfrMgrPresent = 0x0,gestaltFXfrMgrMultiFile = 0x1,gestaltFXfrMgrErrorString = 0x2,gestaltFXfrMgrAsync = 0x3,};
enum $B1733533642260DAD84CA105FECA3053 {kUSBNotSent2Err = 0xFFFFE50B,kUSBNotSent1Err = 0xFFFFE50A,kUSBBufUnderRunErr = 0xFFFFE509,kUSBBufOvrRunErr = 0xFFFFE508,kUSBRes2Err = 0xFFFFE507,kUSBRes1Err = 0xFFFFE506,kUSBUnderRunErr = 0xFFFFE505,kUSBOverRunErr = 0xFFFFE504,kUSBWrongPIDErr = 0xFFFFE503,kUSBPIDCheckErr = 0xFFFFE502,kUSBNotRespondingErr = 0xFFFFE501,kUSBEndpointStallErr = 0xFFFFE500,kUSBDataToggleErr = 0xFFFFE4FF,kUSBBitstufErr = 0xFFFFE4FE,kUSBCRCErr = 0xFFFFE4FD,kUSBLinkErr = 0xFFFFE4FC,};
enum $B1CB9121F1F70C1A85A5AD6437DF1363 {kPEFRelocSmIndexMaxIndex = 0x1FF,};
enum $B1D71B0E9BAC2832B24A3FB8C10742FA {kPEFRelocIncrPositionMaxOffset = 0x1000,};
enum $B201BB116AD24F9C9AB4CB74B04834DF {kVideoReplyMicroSecDelayMask = 0x1,};
enum $B209258A5C3A49D7D514BDA0831064FE {cmOriginalProfileLocationSize = 0x48,cmCurrentProfileLocationSize = 0x102,};
enum $B21804CA2AED5729D4BD7EDF2BC8B1E0 {kFragmentIsPrepared = 0x0,kFragmentNeedsPreparing = 0x2,};
enum $B21D79D3E9BA096E697B331A2EBEA84F {formAbsolutePosition = 0x696E6478,formRelativePosition = 0x72656C65,formTest = 0x74657374,formRange = 0x72616E67,formPropertyID = 0x70726F70,formName = 0x6E616D65,typeObjectSpecifier = 0x6F626A20,typeObjectBeingExamined = 0x65786D6E,typeCurrentContainer = 0x63636E74,typeToken = 0x746F6B65,typeRelativeDescriptor = 0x72656C20,typeAbsoluteOrdinal = 0x6162736F,typeIndexDescriptor = 0x696E6465,typeRangeDescriptor = 0x72616E67,typeLogicalDescriptor = 0x6C6F6769,typeCompDescriptor = 0x636D7064,typeOSLTokenList = 0x6F73746C,};
enum $B23DF18DC82B0CC17A1F6E1D80800937 {kControlBevelButtonSmallBevelVariant = 0x0,kControlBevelButtonNormalBevelVariant = 0x1,kControlBevelButtonLargeBevelVariant = 0x2,kControlBevelButtonMenuOnRightVariant = 0x4,};
enum $B253124A915BC60B511BE73B9C082B86 {CMMInterfaceVersion = 0x1,};
enum $B279F8649030D335CB0658803ACB5579 {kNormalPositionSelector = 0x0,kSuperiorsSelector = 0x1,kInferiorsSelector = 0x2,kOrdinalsSelector = 0x3,};
enum $B28239822585B0E3C257692EB05E732D {kTXNTextInputCountBit = 0x0,kTXNRunCountBit = 0x1,};
enum $B2A152DDA10A63ACA07BBC2FBC77DDA2 {gestaltOpenTptRemoteAccessVersion = 0x6F747276,};
enum $B2CDBB1C1D240CDF461AB71150ACFB8C {gestaltAppearanceVersion = 0x61707672,};
enum $B2E849F5A1B65A14B55FBB22D6FF2738 {kURLInitiatedEvent = 0x1,kURLResourceFoundEvent = 0x4,kURLDownloadingEvent = 0x5,kURLAbortInitiatedEvent = 0x8,kURLCompletedEvent = 0x9,kURLErrorOccurredEvent = 0x7,kURLDataAvailableEvent = 0x15,kURLTransactionCompleteEvent = 0x6,kURLUploadingEvent = 0xA,kURLSystemEvent = 0x1D,kURLPercentEvent = 0x1E,kURLPeriodicEvent = 0x1F,kURLPropertyChangedEvent = 0x20,};
enum $B2EA2E8056A611C629E1C5A897AA627B {threadTooManyReqsErr = 0xFFFFFD97,threadNotFoundErr = 0xFFFFFD96,threadProtocolErr = 0xFFFFFD95,};
enum $B2FA36AA1DE8A5B6F988B810A662A10C {toggleUndefined = 0x0,toggleOK = 0x1,toggleBadField = 0x2,toggleBadDelta = 0x3,toggleBadChar = 0x4,toggleUnknown = 0x5,toggleBadNum = 0x6,toggleOutOfRange = 0x7,toggleErr3 = 0x7,toggleErr4 = 0x8,toggleErr5 = 0x9,};
enum $B3764518ECA98B78506B4DB11E9A651E {verUkraine = 0x3E,verGreeceAlt = 0x40,verSerbian = 0x41,verSlovenian = 0x42,verMacedonian = 0x43,verCroatia = 0x44,verGermanReformed = 0x46,verBrazil = 0x47,verBulgaria = 0x48,verCatalonia = 0x49,verMultilingual = 0x4A,verScottishGaelic = 0x4B,verManxGaelic = 0x4C,verBreton = 0x4D,verNunavut = 0x4E,verWelsh = 0x4F,verIrishGaelicScript = 0x51,verEngCanada = 0x52,verBhutan = 0x53,verArmenian = 0x54,verGeorgian = 0x55,verSpLatinAmerica = 0x56,verTonga = 0x58,verFrenchUniversal = 0x5B,verAustria = 0x5C,verGujarati = 0x5E,verPunjabi = 0x5F,verIndiaUrdu = 0x60,verVietnam = 0x61,};
enum $B38DAA97AB3DC4F221BEA87526E0576C {popupFixedWidth = 0x1,popupVariableWidth = 0x2,popupUseAddResMenu = 0x4,popupUseWFont = 0x8,};
enum $B39D68AABA4BCF2580DDCD53ED9F0BF1 {kSubstituteVerticalFormsOnSelector = 0x0,kSubstituteVerticalFormsOffSelector = 0x1,};
enum $B3A3B6B2A8D3A648DB50B6842B4B7FCD {kIODefaultMemoryType = 0x0,};
enum $B3D08237BA9B71381140D3D103C46D53 {kControlStructureMetaPart = 0xFFFFFFFF,kControlContentMetaPart = 0xFFFFFFFE,};
enum $B3D17BE356756F7E4E6670692217DF57 {kTSClassHonorUserSetting = 0x1,kTSClassForceSetting = 0x2,kTSClassForceToHonorUserSetting = 0x3,};
enum $B3F0A271C81EA1C19F7A231CFC4B8A7D {kDrawControlEntireControl = 0x0,kDrawControlIndicatorOnly = 0x81,};
enum $B41C50726236EFA73E2B66C1293A5B95 {gestaltQuickTimeConferencing = 0x6D746C6B,};
enum $B42CB41C68CA29ADE4CDF32801377E22 {kLCARTag = 0x6C636172,kLCARCurrentVersion = 0x10000,kLCARLinearFormat = 0x0,kLCARCtlPointFormat = 0x1,};
enum $B436F06F978714DDCBDAF1A1E26EE25E {lOnlyOne = 0xFFFFFF80,lExtendDrag = 0x40,lNoDisjoint = 0x20,lNoExtend = 0x10,lNoRect = 0x8,lUseSense = 0x4,lNoNilHilite = 0x2,};
enum $B448355BF5EDB617E62CAE84327D7C60 {kASAdd = 0x2B202020,kASSubtract = 0x2D202020,kASMultiply = 0x2A202020,kASDivide = 0x2F202020,kASQuotient = 0x64697620,kASRemainder = 0x6D6F6420,kASPower = 0x5E202020,kASEqual = 0x3D202020,kASNotEqual = 0xAD202020,kASGreaterThan = 0x3E202020,kASGreaterThanOrEqual = 0x3E3D2020,kASLessThan = 0x3C202020,kASLessThanOrEqual = 0x3C3D2020,kASComesBefore = 0x63626672,kASComesAfter = 0x63616672,kASConcatenate = 0x63636174,kASStartsWith = 0x62677774,kASEndsWith = 0x656E6473,kASContains = 0x636F6E74,};
enum $B449D3E7FDE7A6CD7CCD4326910441FD {kQuitBeforeNormalTimeMask = 0x1,kQuitAtNormalTimeMask = 0x2,kQuitBeforeFBAsQuitMask = 0x4,kQuitBeforeShellQuitsMask = 0x8,kQuitBeforeTerminatorAppQuitsMask = 0x10,kQuitNeverMask = 0x20,kQuitOptionsMask = 0x7F,kQuitNotQuitDuringInstallMask = 0x100,kQuitNotQuitDuringLogoutMask = 0x200,};
enum $B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 {kSystemFolderAliasType = 0x66617379,kAppleMenuFolderAliasType = 0x6661616D,kStartupFolderAliasType = 0x66617374,kPrintMonitorDocsFolderAliasType = 0x6661706E,kPreferencesFolderAliasType = 0x66617066,kControlPanelFolderAliasType = 0x66616374,kExtensionFolderAliasType = 0x66616578,};
enum $B47CEC7198169E487813C137020DFA92 {kNavSortAscending = 0x0,kNavSortDescending = 0x1,};
enum $B481BAA951BB64411EC953D25CF2DFC0 {smCharHorizontal = 0x0,smCharVertical = 0x1000,smCharLeft = 0x0,smCharRight = 0x2000,smCharLower = 0x0,smCharUpper = 0x4000,smChar1byte = 0x0,smChar2byte = 0x8000,};
enum $B4CB54202646D9CABBCB218767DDCA84 : unsigned __int32 {kOTNetbufIsRawMode = 0xFFFFFFFF,};
enum $B4D2A8BBF9D2420987B0C17DB1EACFCB {cmNormalMode = 0x0,cmDraftMode = 0x1,cmBestMode = 0x2,};
enum $B4EAC711D13277CD2E7F80A8425464A8 {kControlEntireControl = 0x0,};
enum $B4F7DCEEA5CE256D717FC74FF825119F {modeText = 0x54455854,modePhonemes = 0x50484F4E,modeNormal = 0x4E4F524D,modeLiteral = 0x4C54524C,};
enum $B509F1F8D43218F1AD269B23B4432585 {timingApple12 = 0x82,timingApple12x = 0x87,timingApple13 = 0x8C,timingApple13x = 0x91,timingAppleVGA = 0x96,timingApple15 = 0xA0,timingApple15x = 0xA5,timingApple16 = 0xAA,timingAppleSVGA = 0xB4,timingApple1Ka = 0xBE,timingApple1Kb = 0xC8,timingApple19 = 0xD2,timingApple21 = 0xDC,timingSony_1900x1200_74hz = 0x212,timingSony_1900x1200_76hz = 0x21C,};
enum $B51F70A03AE9DD615A38F3B5534C58E6 {kHMMenuResType = 0x686D6E75,kHMDialogResType = 0x68646C67,kHMWindListResType = 0x6877696E,kHMRectListResType = 0x68726374,kHMOverrideResType = 0x686F7672,kHMFinderApplResType = 0x68666472,};
enum $B53C769D156FA2F4822F71D37A0E5B3A {fFormatOK = 0x0,fBestGuess = 0x1,fOutOfSynch = 0x2,fSpuriousChars = 0x3,fMissingDelimiter = 0x4,fExtraDecimal = 0x5,fMissingLiteral = 0x6,fExtraExp = 0x7,fFormatOverflow = 0x8,fFormStrIsNAN = 0x9,fBadPartsTable = 0xA,fExtraPercent = 0xB,fExtraSeparator = 0xC,fEmptyFormatString = 0xD,};
enum $B55010A37A19B1A728F7DDED4CDA7068 {lInitMsg = 0x0,lDrawMsg = 0x1,lHiliteMsg = 0x2,lCloseMsg = 0x3,};
enum $B5635949CFD9EB04670D9FD88A13B13F {kAEZoomIn = 0x7,kAEZoomOut = 0x8,};
enum $B566F8798E33FBD972BEEAF4CA892CBE {langUzbek = 0x2F,langKazakh = 0x30,langAzerbaijani = 0x31,langAzerbaijanAr = 0x32,langArmenian = 0x33,langGeorgian = 0x34,langMoldavian = 0x35,langKirghiz = 0x36,langTajiki = 0x37,langTurkmen = 0x38,langMongolian = 0x39,langMongolianCyr = 0x3A,langPashto = 0x3B,langKurdish = 0x3C,langKashmiri = 0x3D,langSindhi = 0x3E,langTibetan = 0x3F,langNepali = 0x40,langSanskrit = 0x41,langMarathi = 0x42,langBengali = 0x43,langAssamese = 0x44,langGujarati = 0x45,langPunjabi = 0x46,};
enum $B5A3E1AB47302C6608CCEE6DDECC21E2 {gestaltScriptMgrVersion = 0x73637269,};
enum $B600E9A864675E8C9053A538BFB57665 {kMenuAttrExcludesMarkColumn = 0x1,kMenuAttrAutoDisable = 0x4,kMenuAttrUsePencilGlyph = 0x8,kMenuAttrHidden = 0x10,};
enum $B61EED6302ED2E3ED74E33E7CA2E0891 {kCFNetServiceFlagMoreComing = 0x1,kCFNetServiceFlagIsDomain = 0x2,kCFNetServiceFlagIsRegistrationDomain = 0x4,kCFNetServiceFlagRemove = 0x8,};
enum $B66336CDD3FB7BACAE93B982EED235B4 {keyAETarget = 0x74617267,keySubjectAttr = 0x7375626A,keyASReturning = 0x4B72746E,kASAppleScriptSuite = 0x61736372,kASScriptEditorSuite = 0x546F7953,kASTypeNamesSuite = 0x74706E6D,typeAETE = 0x61657465,typeAEUT = 0x61657574,kGetAETE = 0x67647465,kGetAEUT = 0x67647574,kUpdateAEUT = 0x75647574,kUpdateAETE = 0x75647465,kCleanUpAEUT = 0x63647574,kASComment = 0x636D6E74,kASLaunchEvent = 0x6E6F6F70,keyScszResource = 0x7363737A,typeScszResource = 0x7363737A,kASSubroutineEvent = 0x70736272,keyASSubroutineName = 0x736E616D,kASPrepositionalSubroutine = 0x70736272,keyASPositionalArgs = 0x70617267,};
enum $B67A831383104888CFCD9F4E48AE98A6 {kDataBrowserItemNoProperty = 0x0,kDataBrowserItemIsActiveProperty = 0x1,kDataBrowserItemIsSelectableProperty = 0x2,kDataBrowserItemIsEditableProperty = 0x3,kDataBrowserItemIsContainerProperty = 0x4,kDataBrowserContainerIsOpenableProperty = 0x5,kDataBrowserContainerIsClosableProperty = 0x6,kDataBrowserContainerIsSortableProperty = 0x7,kDataBrowserItemSelfIdentityProperty = 0x8,kDataBrowserContainerAliasIDProperty = 0x9,kDataBrowserColumnViewPreviewProperty = 0xA,kDataBrowserItemParentContainerProperty = 0xB,};
enum $B70B70D55F7ADAC1B4115BB8A43A6B45 {kProportionalTextSelector = 0x0,kMonospacedTextSelector = 0x1,kHalfWidthTextSelector = 0x2,};
enum $B721768BB4086C28613246DEC34FEA91 {icPrefNotFoundErr = 0xFFFFFD66,icPermErr = 0xFFFFFD65,icPrefDataErr = 0xFFFFFD64,icInternalErr = 0xFFFFFD63,icTruncatedErr = 0xFFFFFD62,icNoMoreWritersErr = 0xFFFFFD61,icNothingToOverrideErr = 0xFFFFFD60,icNoURLErr = 0xFFFFFD5F,icConfigNotFoundErr = 0xFFFFFD5E,icConfigInappropriateErr = 0xFFFFFD5D,icProfileNotFoundErr = 0xFFFFFD5C,icTooManyProfilesErr = 0xFFFFFD5B,};
enum $B7727C66ADD3E540317138C1987DAE67 {kControlPopupArrowOrientationEast = 0x0,kControlPopupArrowOrientationWest = 0x1,kControlPopupArrowOrientationNorth = 0x2,kControlPopupArrowOrientationSouth = 0x3,};
enum $B7760C77E936E3F934FF355D08A952D4 : unsigned __int32 {kFSIterateFlat = 0x0,kFSIterateSubtree = 0x1,kFSIterateDelete = 0x2,kFSIterateReserved = 0xFFFFFFFC,};
enum $B7C6122967B23758D95BCCA87E79F009 {kAEFinderSuite = 0x666E6472,};
enum $B7DE132A2BA91317C29AAD4D297C2D72 {kMPAllocateDefaultAligned = 0x0,kMPAllocate8ByteAligned = 0x3,kMPAllocate16ByteAligned = 0x4,kMPAllocate32ByteAligned = 0x5,kMPAllocate1024ByteAligned = 0xA,kMPAllocate4096ByteAligned = 0xC,kMPAllocateMaxAlignment = 0x10,kMPAllocateAltiVecAligned = 0x4,kMPAllocateVMXAligned = 0x4,kMPAllocateVMPageAligned = 0xFE,kMPAllocateInterlockAligned = 0xFF,};
enum $B7FA74924A945FA1E94D4CF6E4B238B2 {dVMImmuneBit = 0x0,dOpened = 0x5,dRAMBased = 0x6,drvrActive = 0x7,};
struct $B817C4E7F216D35F032A11C86EB37440 {int sig;char opaque[4];};
enum $B83D1FEB2E31ABE78CCF21872C2208F3 {kTXNNoAppleEventHandlersMask = 0x1,kTXNRestartAppleEventHandlersMask = 0x2,};
enum $B85C30449C4709C800E3FB33D11A2AD8 : unsigned __int32 {kTXNUseCurrentSelection = 0xFFFFFFFF,kTXNStartOffset = 0x0,kTXNEndOffset = 0x7FFFFFFF,};
enum $B869BD235059CF9C2F4A2917BBD36A1C {gestaltFSAttr = 0x66732020,gestaltFullExtFSDispatching = 0x0,gestaltHasFSSpecCalls = 0x1,gestaltHasFileSystemManager = 0x2,gestaltFSMDoesDynamicLoad = 0x3,gestaltFSSupports4GBVols = 0x4,gestaltFSSupports2TBVols = 0x5,gestaltHasExtendedDiskInit = 0x6,gestaltDTMgrSupportsFSM = 0x7,gestaltFSNoMFSVols = 0x8,gestaltFSSupportsHFSPlusVols = 0x9,gestaltFSIncompatibleDFA82 = 0xA,};
enum $B8B37CCD37A6AFDD54E0D5872B3D9030 {kThemeNameTag = 0x6E616D65,kThemeVariantNameTag = 0x7661726E,kThemeVariantBaseTintTag = 0x74696E74,kThemeHighlightColorTag = 0x68636F6C,kThemeScrollBarArrowStyleTag = 0x73626172,kThemeScrollBarThumbStyleTag = 0x73627468,kThemeSoundsEnabledTag = 0x736E6473,kThemeDblClickCollapseTag = 0x636F6C6C,};
enum $B8B72412DD9C077EAD980E1858612DEF {kJUSTKashidaPriority = 0x0,kJUSTSpacePriority = 0x1,kJUSTLetterPriority = 0x2,kJUSTNullPriority = 0x3,kJUSTPriorityCount = 0x4,};
enum $B8F573A0A399AB51D5ACD304AE3E4E90 {typeSRRecognizer = 0x74726563,typeSRSpeechResult = 0x74737072,};
enum $B909D5693024809AC6FC2A1B5A21A07C {kControlSupportsNewMessages = 0x206F6B20,};
enum $B935597C77A89990FD77BA3DC8605E57 {aeBuildSyntaxNoErr = 0x0,aeBuildSyntaxBadToken = 0x1,aeBuildSyntaxBadEOF = 0x2,aeBuildSyntaxNoEOF = 0x3,aeBuildSyntaxBadNegative = 0x4,aeBuildSyntaxMissingQuote = 0x5,aeBuildSyntaxBadHex = 0x6,aeBuildSyntaxOddHex = 0x7,aeBuildSyntaxNoCloseHex = 0x8,aeBuildSyntaxUncoercedHex = 0x9,aeBuildSyntaxNoCloseString = 0xA,aeBuildSyntaxBadDesc = 0xB,aeBuildSyntaxBadData = 0xC,aeBuildSyntaxNoCloseParen = 0xD,aeBuildSyntaxNoCloseBracket = 0xE,aeBuildSyntaxNoCloseBrace = 0xF,aeBuildSyntaxNoKey = 0x10,aeBuildSyntaxNoColon = 0x11,aeBuildSyntaxCoercedList = 0x12,aeBuildSyntaxUncoercedDoubleAt = 0x13,};
enum $B940DCEDFB2C8CDA57978662DE224A9D {kICNoUserInteractionBit = 0x0,};
enum $B95EEEF8D0A9C3F124CECCB9E5363575 : unsigned __int32 {kAlertWindowClass = 0x1,kMovableAlertWindowClass = 0x2,kModalWindowClass = 0x3,kMovableModalWindowClass = 0x4,kFloatingWindowClass = 0x5,kDocumentWindowClass = 0x6,kUtilityWindowClass = 0x8,kHelpWindowClass = 0xA,kSheetWindowClass = 0xB,kToolbarWindowClass = 0xC,kPlainWindowClass = 0xD,kOverlayWindowClass = 0xE,kSheetAlertWindowClass = 0xF,kAltPlainWindowClass = 0x10,kDrawerWindowClass = 0x14,kAllWindowClasses = 0xFFFFFFFF,};
enum $B966703BBC9E5742E5F9EA28D7FCBF87 {kColorPickerDialogIsMoveable = 0x1,kColorPickerDialogIsModal = 0x2,kColorPickerCanModifyPalette = 0x4,kColorPickerCanAnimatePalette = 0x8,kColorPickerAppIsColorSyncAware = 0x10,kColorPickerInSystemDialog = 0x20,kColorPickerInApplicationDialog = 0x40,kColorPickerInPickerDialog = 0x80,kColorPickerDetachedFromChoices = 0x100,kColorPickerCallColorProcLive = 0x200,};
enum $B977D08F08777D2B892DEF9A72E9752D {kCFXMLNodeCurrentVersion = 0x1,};
enum $B97F11227C25099F5B433CE2ADEE3443 {kConvolved = 0x0,kLiveVideoPassThru = 0x1,kConvolvedMask = 0x1,kLiveVideoPassThruMask = 0x2,};
enum $B99F3C110282DAEAA24760569BE1674D {kPPPScriptTypeModem = 0x1,kPPPScriptTypeConnect = 0x2,kPPPMaxScriptSize = 0x7D00,};
enum $B9ACAFBCCB361E49E4ECBC18669D7829 {cmPS7bit = 0x1,cmPS8bit = 0x2,};
enum $B9D4DC874B42BD130AE5A541E817862D {kTextToSpeechSynthType = 0x74747363,kTextToSpeechVoiceType = 0x74747664,kTextToSpeechVoiceFileType = 0x74747666,kTextToSpeechVoiceBundleType = 0x74747662,};
enum $B9DAAD4BA7354E79CAB0A08055592B37 {kThemeActiveDocumentWindowTitleTextColor = 0x17,kThemeInactiveDocumentWindowTitleTextColor = 0x18,kThemeActiveMovableModalWindowTitleTextColor = 0x19,kThemeInactiveMovableModalWindowTitleTextColor = 0x1A,kThemeActiveUtilityWindowTitleTextColor = 0x1B,kThemeInactiveUtilityWindowTitleTextColor = 0x1C,kThemeActivePopupWindowTitleColor = 0x1D,kThemeInactivePopupWindowTitleColor = 0x1E,kThemeActiveRootMenuTextColor = 0x1F,kThemeSelectedRootMenuTextColor = 0x20,kThemeDisabledRootMenuTextColor = 0x21,kThemeActiveMenuItemTextColor = 0x22,kThemeSelectedMenuItemTextColor = 0x23,kThemeDisabledMenuItemTextColor = 0x24,kThemeActivePopupLabelTextColor = 0x25,kThemeInactivePopupLabelTextColor = 0x26,};
enum $B9E02F82513BA51084C86DCF9CF08134 {kNavGenericSignature = 0x2A2A2A2A,};
enum $BA0C1BCD204F4A82DD1B7E254D8156BA {kCollateAttributesNotFoundErr = 0xFFFF8CC4,kCollateInvalidOptions = 0xFFFF8CC3,kCollateMissingUnicodeTableErr = 0xFFFF8CC2,kCollateUnicodeConvertFailedErr = 0xFFFF8CC1,kCollatePatternNotFoundErr = 0xFFFF8CC0,kCollateInvalidChar = 0xFFFF8CBF,kCollateBufferTooSmall = 0xFFFF8CBE,kCollateInvalidCollationRef = 0xFFFF8CBD,};
enum $BA4AF89C300243A236DEAC5502E7295F {digiUnimpErr = 0xFFFFF767,qtParamErr = 0xFFFFF766,matrixErr = 0xFFFFF765,notExactMatrixErr = 0xFFFFF764,noMoreKeyColorsErr = 0xFFFFF763,notExactSizeErr = 0xFFFFF762,badDepthErr = 0xFFFFF761,noDMAErr = 0xFFFFF760,badCallOrderErr = 0xFFFFF75F,};
enum $BA63FDC895DBB7DF67995D3C5B63C08B {kIconFamilyType = 0x69636E73,};
struct $BAA0E1D2BF5986DFAC16C10809EF9355 {mach_port_t name;mach_msg_size_t pad1;unsigned __int32 pad2 : 16;unsigned __int32 disposition : 8;unsigned __int32 type : 8;};
enum $BAA3A54DCC7C52193713794DB8FB4BA3 {kOSAFileType = 0x6F736173,};
enum $BAA3CA74092E56F981CAC47441F89B4C {kThemeThumbPlain = 0x0,kThemeThumbUpward = 0x1,kThemeThumbDownward = 0x2,};
enum $BAC058599A6DF9596C08256C682D581F {gestaltQDTextVersion = 0x71647478,gestaltOriginalQDText = 0x0,gestaltAllegroQDText = 0x100,gestaltMacOSXQDText = 0x200,};
enum $BB03D9652BCB610AAF5FD1488CF32103 {gestaltPhysicalRAMSize = 0x72616D20,};
enum $BB3B30B5984760ACC5796090BFBCB24E {cmNumHeaderElements = 0xA,};
enum $BB3EAA05806C0A6018E6C19C0342F448 {kATSOptionFlagsDefault = 0x0,kATSOptionFlagsComposeFontPostScriptName = 0x1,kATSOptionFlagsUseDataForkAsResourceFork = 0x100,kATSOptionFlagsUseResourceFork = 0x200,kATSOptionFlagsUseDataFork = 0x300,};
enum $BB440EAAD7503F74C2B1883E9931D923 {kPMPaperTypeUnknown = 0x0,kPMPaperTypePlain = 0x1,kPMPaperTypeCoated = 0x2,kPMPaperTypePremium = 0x3,kPMPaperTypeGlossy = 0x4,kPMPaperTypeTransparency = 0x5,kPMPaperTypeTShirt = 0x6,};
enum $BB60F59EEE6EB1D8D4E8636F11B239D4 {gestaltFindFolderRedirectionAttr = 0x666F6C65,};
enum $BB8B4E8D02D950EE9C21445C40861982 {kATSULeftToRightBaseDirection = 0x0,kATSURightToLeftBaseDirection = 0x1,};
enum $BB8D404D70406AFA2DF811675C440DD6 {keySOAPStructureMetaData = 0x2F736D64,keySOAPSMDNamespace = 0x73736E73,keySOAPSMDNamespaceURI = 0x73736E75,keySOAPSMDType = 0x73737470,};
enum $BB9E0A82C1EB964056B4CB66C6EE7F07 {typeReplyPortAttr = 0x72657070,};
enum $BBA02E4BA3E3C0C4F044C26556A22B28 {kOTCFMClass = 0x6F74616E,};
enum $BBCACBB5B04C0E2BA621A282154C9589 {cmpIsMissing = 0x20000000,cmpWantsRegisterMessage = 0x80000000,};
enum $BBD4B51CD1F8C4E1BDF16F03CBA05C13 {kNoCJKItalicRomanSelector = 0x0,kCJKItalicRomanSelector = 0x1,};
enum $BBD69851473C954C32311E783D141B65 {kThemeAdornmentNone = 0x0,kThemeAdornmentDefault = 0x1,kThemeAdornmentFocus = 0x4,kThemeAdornmentRightToLeft = 0x10,kThemeAdornmentDrawIndicatorOnly = 0x20,kThemeAdornmentHeaderButtonLeftNeighborSelected = 0x40,kThemeAdornmentHeaderButtonRightNeighborSelected = 0x80,kThemeAdornmentHeaderButtonSortUp = 0x100,kThemeAdornmentHeaderMenuButton = 0x200,kThemeAdornmentHeaderButtonNoShadow = 0x400,kThemeAdornmentHeaderButtonShadowOnly = 0x800,kThemeAdornmentNoShadow = 0x400,kThemeAdornmentShadowOnly = 0x800,kThemeAdornmentArrowLeftArrow = 0x40,kThemeAdornmentArrowDownArrow = 0x80,kThemeAdornmentArrowDoubleArrow = 0x100,kThemeAdornmentArrowUpArrow = 0x200,};
enum $BBEEC2DDBFA0E8055695BAE3A9649DA9 {kICATypeUInt16 = 0x75693136,kICATypeUInt32 = 0x75693332,kICATypeUInt64 = 0x75693634,kICATypeSInt16 = 0x73693136,kICATypeSInt32 = 0x73693332,kICATypeSInt64 = 0x73693634,kICATypeFixed = 0x73696E67,kICATypeBoolean = 0x626F6F6C,kICATypeString = 0x54455854,kICATypeData = 0x64617461,kICATypeThumbnail = 0x7468756D,};
enum $BBFB8D1E3896AABD7508EF3F327F995D {kAELogOut = 0x6C6F676F,kAEReallyLogOut = 0x726C676F,kAEShowRestartDialog = 0x72727374,kAEShowShutdownDialog = 0x7273646E,};
enum $BC1F616B739DE2CDCB7069176F2A8DF9 {kHierarchicalFontMenuOption = 0x1,};
enum $BC2AD7A9F2D3B0C1A8C63E28A58161AB {kControlNoPart = 0x0,kControlIndicatorPart = 0x81,kControlDisabledPart = 0xFE,kControlInactivePart = 0xFF,};
struct $BC7F95E68ADD91E8DBBA9E516D5899BB {CFIndex location;CFIndex length;};
enum $BC8EA190D8C1F3642D9BA1ED861A0D18 {kOSAScriptIsTypeScriptContext = 0x636E7478,};
enum $BC955F336BA51752C3ACB31811FD9C2A {kThemeTextColorBlack = 0xFFFFFFFF,kThemeTextColorWhite = 0xFFFFFFFE,};
enum $BCA8DD9AD937E0BFA4B6AF3F02BDD3FD {kThumbnail32BitData = 0x69743332,kThumbnail8BitMask = 0x74386D6B,};
enum $BCB2FAF3ABA424FFA3BC5A74027E8166 {gestaltFBCVersion = 0x66626376,gestaltFBCCurrentVersion = 0x11,gestaltOSXFBCCurrentVersion = 0x100,};
enum $BCB4FBF90956928C48B1C39A2D2FA32E {kAlertNoteIcon = 0x6E6F7465,kAlertCautionIcon = 0x63617574,kAlertStopIcon = 0x73746F70,};
enum $BD1359E02033B0EA164E279161AA9D4C {kResolutionHasMultipleDepthSizes = 0x0,};
enum $BD4BA3E8B73228415244CB489F2EDECA {kDSpNotInitializedErr = 0xFFFF8918,kDSpSystemSWTooOldErr = 0xFFFF8917,kDSpInvalidContextErr = 0xFFFF8916,kDSpInvalidAttributesErr = 0xFFFF8915,kDSpContextAlreadyReservedErr = 0xFFFF8914,kDSpContextNotReservedErr = 0xFFFF8913,kDSpContextNotFoundErr = 0xFFFF8912,kDSpFrameRateNotReadyErr = 0xFFFF8911,kDSpConfirmSwitchWarning = 0xFFFF8910,kDSpInternalErr = 0xFFFF890F,kDSpStereoContextErr = 0xFFFF890E,};
enum $BD4F9D75E48C9BFCE8055CE4DD2DAD8D {typeStatementRange = 0x73726E67,};
enum $BD6E4D485EC21FDE858B33FD333F62CA {kTextEncodingMacUnicode = 0x7E,};
enum $BD72C1BB3E139F41455EFC5A28916380 {_KeyboardDispatch = 0xAA7A,};
enum $BD9C2CA927C28E2222F798A469BC8256 {gestaltExtensionTableVersion = 0x6574626C,};
enum $BDB9CB8CBB41E9FA4560B945382E898E {kioACUserNoSeeFolderBit = 0x0,kioACUserNoSeeFolderMask = 0x1,kioACUserNoSeeFilesBit = 0x1,kioACUserNoSeeFilesMask = 0x2,kioACUserNoMakeChangesBit = 0x2,kioACUserNoMakeChangesMask = 0x4,kioACUserNotOwnerBit = 0x7,kioACUserNotOwnerMask = 0x80,};
enum $BDBF9CBBD4C8E0556BE68EECC2FEC46A {kSleepRequest = 0x1,kSleepDemand = 0x2,kSleepWakeUp = 0x3,kSleepRevoke = 0x4,kSleepUnlock = 0x4,kSleepDeny = 0x5,kSleepNow = 0x6,kDozeDemand = 0x7,kDozeWakeUp = 0x8,kDozeRequest = 0x9,kEnterStandby = 0xA,kEnterRun = 0xB,kSuspendRequest = 0xC,kSuspendDemand = 0xD,kSuspendRevoke = 0xE,kSuspendWakeUp = 0xF,kGetPowerLevel = 0x10,kSetPowerLevel = 0x11,kDeviceInitiatedWake = 0x12,kWakeToDoze = 0x13,kDozeToFullWakeUp = 0x14,kGetPowerInfo = 0x15,kGetWakeOnNetInfo = 0x16,kSuspendWakeToDoze = 0x17,kEnterIdle = 0x18,kStillIdle = 0x19,kExitIdle = 0x1A,};
enum $BDD49361200656C32D71296E4087EF49 {featureFontTableTag = 0x66656174,};
struct $BDE20794AF78CEA5F0C68175611F4183 {UniChar buffer[64];CFStringRef theString;const UniChar *directBuffer;CFRange rangeToBuffer;CFIndex bufferedRangeStart;CFIndex bufferedRangeEnd;};
enum $BE2EAAC144A3C76AB102FA4EBBA96742 {gestaltTeleMgrAttr = 0x74656C65,gestaltTeleMgrPresent = 0x0,gestaltTeleMgrPowerPCSupport = 0x1,gestaltTeleMgrSoundStreams = 0x2,gestaltTeleMgrAutoAnswer = 0x3,gestaltTeleMgrIndHandset = 0x4,gestaltTeleMgrSilenceDetect = 0x5,gestaltTeleMgrNewTELNewSupport = 0x6,};
enum $BE3F3FCE1FCCF723696C930071417B5A {kEventClassMouse = 0x6D6F7573,kEventClassKeyboard = 0x6B657962,kEventClassTextInput = 0x74657874,kEventClassApplication = 0x6170706C,kEventClassAppleEvent = 0x65707063,kEventClassMenu = 0x6D656E75,kEventClassWindow = 0x77696E64,kEventClassControl = 0x636E746C,kEventClassCommand = 0x636D6473,kEventClassTablet = 0x74626C74,kEventClassVolume = 0x766F6C20,kEventClassAppearance = 0x6170706D,kEventClassService = 0x73657276,kEventClassToolbar = 0x74626172,kEventClassToolbarItem = 0x74626974,kEventClassAccessibility = 0x61636365,};
struct $BEAFDCE0A32D482ACFF952D2E196CC9B {CFIndex version;CFArrayRetainCallBack retain;CFArrayReleaseCallBack release;CFArrayCopyDescriptionCallBack copyDescription;CFArrayEqualCallBack equal;};
enum $BEC795BD18AF3BF83FD38686D39A187D {kDataBrowserTableViewMinimalHilite = 0x0,kDataBrowserTableViewFillHilite = 0x1,};
enum $BED3F058E4821979968D24BE23920A42 {CS_MAX_PATH = 0x100,};
enum $BEE4F9FA55F124848F5583F92B764A21 : unsigned __int32 {kCallingConventionWidth = 0x4,kCallingConventionPhase = 0x0,kCallingConventionMask = 0xF,kResultSizeWidth = 0x2,kResultSizePhase = 0x4,kResultSizeMask = 0x30,kStackParameterWidth = 0x2,kStackParameterPhase = 0x6,kStackParameterMask = 0xFFFFFFC0,kRegisterResultLocationWidth = 0x5,kRegisterResultLocationPhase = 0x6,kRegisterParameterWidth = 0x5,kRegisterParameterPhase = 0xB,kRegisterParameterMask = 0x7FFFF800,kRegisterParameterSizePhase = 0x0,kRegisterParameterSizeWidth = 0x2,kRegisterParameterWhichPhase = 0x2,kRegisterParameterWhichWidth = 0x3,kDispatchedSelectorSizeWidth = 0x2,kDispatchedSelectorSizePhase = 0x6,kDispatchedParameterPhase = 0x8,kSpecialCaseSelectorWidth = 0x6,kSpecialCaseSelectorPhase = 0x4,kSpecialCaseSelectorMask = 0x3F0,};
enum $BEF7A8B9ADEDBF6667287C3200A729C9 {kATSItalicQDSkew = 0x4000,kATSBoldQDStretch = 0x18000,kATSRadiansFactor = 0x478,};
enum $BF40FF4EAF09DF7FBAAAD52C33F2F16B {kGetDebugOption = 0x1,kSetDebugOption = 0x2,};
enum $BF43AAD41ADCCAEC838DD520AED3D2CB {kControlScrollTextBoxProc = 0x1B0,kControlScrollTextBoxAutoScrollProc = 0x1B1,};
enum $BF5628ADA32D079BB88EF91E972405D8 {kControlSliderProc = 0x30,kControlSliderLiveFeedback = 0x1,kControlSliderHasTickMarks = 0x2,kControlSliderReverseDirection = 0x4,kControlSliderNonDirectional = 0x8,};
enum $BF7E268CC0731DCB307DE3733DFF40FD {kIODefaultCache = 0x0,kIOInhibitCache = 0x1,kIOWriteThruCache = 0x2,kIOCopybackCache = 0x3,};
enum $BF8A9F47DC4686BD0CD46F7ADD2DF367 {kICFileSpecHeaderSize = 0x6C,};
enum $BFBD6476C4F3EC8704A1A36F4B5ADDBB {kThemeActiveDialogBackgroundBrush = 0x1,kThemeInactiveDialogBackgroundBrush = 0x2,kThemeActiveAlertBackgroundBrush = 0x3,kThemeInactiveAlertBackgroundBrush = 0x4,kThemeActiveModelessDialogBackgroundBrush = 0x5,kThemeInactiveModelessDialogBackgroundBrush = 0x6,kThemeActiveUtilityWindowBackgroundBrush = 0x7,kThemeInactiveUtilityWindowBackgroundBrush = 0x8,kThemeListViewSortColumnBackgroundBrush = 0x9,kThemeListViewBackgroundBrush = 0xA,kThemeIconLabelBackgroundBrush = 0xB,kThemeListViewSeparatorBrush = 0xC,kThemeChasingArrowsBrush = 0xD,kThemeDragHiliteBrush = 0xE,kThemeDocumentWindowBackgroundBrush = 0xF,kThemeFinderWindowBackgroundBrush = 0x10,};
enum $BFF0F52F236F100676E043613305072D {kAlertStdAlertOKButton = 0x1,kAlertStdAlertCancelButton = 0x2,kAlertStdAlertOtherButton = 0x3,kAlertStdAlertHelpButton = 0x4,};
enum $C010A534DABF1676AB26CEC1CE344009 {gestaltALMHasSFLocation = 0x1,};
enum $C03B0B598CA42821952B51ED913C70BC {gestaltArbitorAttr = 0x61726220,gestaltSerialArbitrationExists = 0x0,};
enum $C03C4FEB0BB7F34A95A1C302FEAFF801 {kHIComboBoxListTag = 0x63626C73,kHIComboBoxListPixelWidthTag = 0x63626C77,kHIComboBoxListPixelHeightTag = 0x63626C68,kHIComboBoxNumVisibleItemsTag = 0x63626E69,};
enum $C04DE4353F6ADED9580C7CBD3260B454 {kThemeMediumScrollBar = 0x0,kThemeSmallScrollBar = 0x1,kThemeMediumSlider = 0x2,kThemeMediumProgressBar = 0x3,kThemeMediumIndeterminateBar = 0x4,kThemeRelevanceBar = 0x5,kThemeSmallSlider = 0x6,kThemeLargeProgressBar = 0x7,kThemeLargeIndeterminateBar = 0x8,};
enum $C057B879B4FEFB21DC60B7C8FD9ECCE6 {kPMPrintAllPages = 0xFFFFFFFF,};
struct $C0894F3B4E67424B98057A249AB96F23 {CFIndex version;CFXMLParserCreateXMLStructureCallBack createXMLStructure;CFXMLParserAddChildCallBack addChild;CFXMLParserEndXMLStructureCallBack endXMLStructure;CFXMLParserResolveExternalEntityCallBack resolveExternalEntity;CFXMLParserHandleErrorCallBack handleError;};
enum $C0A8131AFAC7E83F0975CE809AF59F6B {kDoNotActivateAndIgnoreClick = 0x0,kDoNotActivateAndHandleClick = 0x1,kActivateAndIgnoreClick = 0x2,kActivateAndHandleClick = 0x3,};
struct $C0B3C1360BA6A3735E000248733A6652 {CFIndex version;void *info;const void *(__fastcall *retain)(const void *info);void (__fastcall *release)(const void *info);CFStringRef (__fastcall *copyDescription)(const void *info);Boolean (__fastcall *equal)(const void *info1, const void *info2);CFHashCode (__fastcall *hash)(const void *info);mach_port_t (__fastcall *getPort)(void *info);void *(__fastcall *perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void *info);};
enum $C119EB671DE42B947DED0374D56DD6D0 {cmStdobsUnknown = 0x0,cmStdobs1931TwoDegrees = 0x1,cmStdobs1964TenDegrees = 0x2,};
enum $C1499C5887A10755D880662AE25D9DDA {kControlClockFlagStandard = 0x0,kControlClockNoFlags = 0x0,kControlClockFlagDisplayOnly = 0x1,kControlClockIsDisplayOnly = 0x1,kControlClockFlagLive = 0x2,kControlClockIsLive = 0x2,};
enum $C168103DFE2D3A1A0CF1945FBBE7F1AD {kTECSignature = 0x656E6376,kTECUnicodePluginSignature = 0x70756E69,kTECJapanesePluginSignature = 0x706A706E,kTECChinesePluginSignature = 0x707A686F,kTECKoreanPluginSignature = 0x706B6F72,};
union $C18A6CE957EEA4FD62416C6C10A8EE86 {unsigned int word;struct $C18A6CE957EEA4FD62416C6C10A8EE86::$5F68E65D1BB17161FB22A8235177FA61 bits;};
struct $C18A6CE957EEA4FD62416C6C10A8EE86::$5F68E65D1BB17161FB22A8235177FA61 {unsigned __int32 threshmult : 1;unsigned __int32 reserved : 31;};
enum $C195CC658465305661C31FBCC06C4B3E {kControlKindPopupButton = 0x706F7062,};
enum $C1C1720AC78930D425ADDA4620EF7BD1 {kEventParamNewScrollBarVariant = 0x6E736276,};
enum $C1F3710B46FD360EABEF2FDBE40F9F9F {kATSGenerationUnspecified = 0x0,kATSFontContainerRefUnspecified = 0x0,kATSFontFamilyRefUnspecified = 0x0,kATSFontRefUnspecified = 0x0,};
enum $C26E52BFBA74F5A09E6F62F9AB0B816D : unsigned __int32 {kAEDoNotIgnoreHandler = 0x0,kAEIgnoreAppPhacHandler = 0x1,kAEIgnoreAppEventHandler = 0x2,kAEIgnoreSysPhacHandler = 0x4,kAEIgnoreSysEventHandler = 0x8,kAEIngoreBuiltInEventHandler = 0x10,kAEDontDisposeOnResume = 0x80000000,};
enum $C2BA776CAA1D1E2810974D8A350054F8 {kEventParamKeyCode = 0x6B636F64,kEventParamKeyMacCharCodes = 0x6B636872,kEventParamKeyModifiers = 0x6B6D6F64,kEventParamKeyUnicodes = 0x6B756E69,kEventParamKeyboardType = 0x6B626474,typeEventHotKeyID = 0x686B6964,};
enum $C2D0643EA5871346057E089DB4E5F493 {kInternetLocationCreator = 0x64726167,kInternetLocationHTTP = 0x696C6874,kInternetLocationFTP = 0x696C6674,kInternetLocationFile = 0x696C6669,kInternetLocationMail = 0x696C6D61,kInternetLocationNNTP = 0x696C6E77,kInternetLocationAFP = 0x696C6166,kInternetLocationAppleTalk = 0x696C6174,kInternetLocationNSL = 0x696C6E73,kInternetLocationGeneric = 0x696C6765,};
enum $C2F8858A622177275FF16A5CF508B42D {kInjectionSectJob = 0x1,kInjectionSectCoverPage = 0x2,};
enum $C2FBF9E220041465BEC3CA26588029A3 {kMacHebrewStandardVariant = 0x0,kMacHebrewFigureSpaceVariant = 0x1,};
enum $C30766913F3308CF86D04909B2F57587 {langLithuanian = 0x18,langPolish = 0x19,langHungarian = 0x1A,langEstonian = 0x1B,langLatvian = 0x1C,langSami = 0x1D,langFaroese = 0x1E,langFarsi = 0x1F,langPersian = 0x1F,langRussian = 0x20,langSimpChinese = 0x21,langFlemish = 0x22,langIrishGaelic = 0x23,langAlbanian = 0x24,langRomanian = 0x25,langCzech = 0x26,langSlovak = 0x27,langSlovenian = 0x28,langYiddish = 0x29,langSerbian = 0x2A,langMacedonian = 0x2B,langBulgarian = 0x2C,langUkrainian = 0x2D,langByelorussian = 0x2E,langBelorussian = 0x2E,};
enum $C321A83340821592E5B37BF67CC91BE9 {gestaltDTPInfo = 0x64747078,};
enum $C32362BD09BEBB7F51476E936F570A0A {kScrapGetNamedScrap = 0x0,kScrapClearNamedScrap = 0x1,};
enum $C34DCDCC44ECF4FFFA7514A493E23E0E {kControlStaticTextProc = 0x120,};
enum $C35B1E7AFD5BC2C0F1BDBE6C23E5DDD5 {keyOSASourceEnd = 0x73726365,};
enum $C37232893D67838E67896D825E32AA97 {scsiMotherboardBus = 0x0,scsiNuBus = 0x1,scsiPDSBus = 0x3,scsiPCIBus = 0x4,scsiPCMCIABus = 0x5,scsiFireWireBridgeBus = 0x6,scsiUSBBus = 0x7,};
enum $C396DE1B833B61D74CD5F82A4ED4BE91 {gestaltCPU486 = 0x69343836,gestaltCPUPentium = 0x69353836,gestaltCPUPentiumPro = 0x69357072,gestaltCPUPentiumII = 0x69356969,gestaltCPUX86 = 0x69787878,};
struct $C3CAD31885235B474CF45E0CF3D6070F {CFIndex version;void *info;CFXMLParserRetainCallBack retain;CFXMLParserReleaseCallBack release;CFXMLParserCopyDescriptionCallBack copyDescription;};
enum $C3E3EECB036BCEBFF7DC9008299D1265 {kOSAModeDontStoreParent = 0x10000,};
enum $C3E9DE54B5A9911F95270161D24BCD0A {gestaltOpenTptNetworkSetupVersion = 0x6F746376,};
enum $C42C4A5D14F8AD8C1C2600D58AF728D5 {kPowerStateNeedsRefresh = 0x0,kPowerStateSleepAwareBit = 0x1,kPowerStateSleepForbiddenBit = 0x2,kPowerStateSleepCanPowerOffBit = 0x3,kPowerStateSleepNoDPMSBit = 0x4,kPowerStateSleepWaketoDozeBit = 0x5,kPowerStateNeedsRefreshMask = 0x1,kPowerStateSleepAwareMask = 0x2,kPowerStateSleepForbiddenMask = 0x4,kPowerStateSleepCanPowerOffMask = 0x8,kPowerStateSleepNoDPMSMask = 0x10,kPowerStateSleepWaketoDozeMask = 0x20,};
enum $C4386440AF8B237D2CD86F5B7B67A823 {kNavSortNameField = 0x0,kNavSortDateField = 0x1,};
enum $C473E0A86B985C630FB673E0C29D3E0C : unsigned __int32 {kNavCBEvent = 0x0,kNavCBCustomize = 0x1,kNavCBStart = 0x2,kNavCBTerminate = 0x3,kNavCBAdjustRect = 0x4,kNavCBNewLocation = 0x5,kNavCBShowDesktop = 0x6,kNavCBSelectEntry = 0x7,kNavCBPopupMenuSelect = 0x8,kNavCBAccept = 0x9,kNavCBCancel = 0xA,kNavCBAdjustPreview = 0xB,kNavCBUserAction = 0xC,kNavCBOpenSelection = 0x80000000,};
enum $C483040D5F4E84A956E70138E70C9A03 {enumPrefsWindowPanel = 0x70706C65,enumPrefsGeneralPanel = 0x70676E70,enumPrefsLabelPanel = 0x706C6270,enumPrefsIconViewPanel = 0x70697670,enumPrefsButtonViewPanel = 0x70627670,enumPrefsListViewPanel = 0x706C7670,};
enum $C49D04D050D2CE9AD394508901971E86 {kATSUNoSelector = 0xFFFF,};
enum $C4AB604CFAB6D398918B07A77C016E42 {kMaxInputLengthOfAppleJapaneseEngine = 0xC8,};
enum $C4DE14BECEB26BEEE4BB09B7D1A91662 {kTXNTypingAction = 0x0,kTXNCutAction = 0x1,kTXNPasteAction = 0x2,kTXNClearAction = 0x3,kTXNChangeFontAction = 0x4,kTXNChangeFontColorAction = 0x5,kTXNChangeFontSizeAction = 0x6,kTXNChangeStyleAction = 0x7,kTXNAlignLeftAction = 0x8,kTXNAlignCenterAction = 0x9,kTXNAlignRightAction = 0xA,kTXNDropAction = 0xB,kTXNMoveAction = 0xC,kTXNFontFeatureAction = 0xD,kTXNFontVariationAction = 0xE,kTXNUndoLastAction = 0x400,};
enum $C5158E5C8936F0DF706C0A4969EDE653 {kRequiredLigaturesOnSelector = 0x0,kRequiredLigaturesOffSelector = 0x1,kCommonLigaturesOnSelector = 0x2,kCommonLigaturesOffSelector = 0x3,kRareLigaturesOnSelector = 0x4,kRareLigaturesOffSelector = 0x5,kLogosOnSelector = 0x6,kLogosOffSelector = 0x7,kRebusPicturesOnSelector = 0x8,kRebusPicturesOffSelector = 0x9,kDiphthongLigaturesOnSelector = 0xA,kDiphthongLigaturesOffSelector = 0xB,kSquaredLigaturesOnSelector = 0xC,kSquaredLigaturesOffSelector = 0xD,kAbbrevSquaredLigaturesOnSelector = 0xE,kAbbrevSquaredLigaturesOffSelector = 0xF,kSymbolLigaturesOnSelector = 0x10,kSymbolLigaturesOffSelector = 0x11,};
enum $C5379AC028464AF0B84522D966250B53 {kControlKindRadioGroup = 0x72677270,};
enum $C571926E981B88626D3749AEC43B7953 {gestaltOSAttr = 0x6F732020,gestaltSysZoneGrowable = 0x0,gestaltLaunchCanReturn = 0x1,gestaltLaunchFullFileSpec = 0x2,gestaltLaunchControl = 0x3,gestaltTempMemSupport = 0x4,gestaltRealTempMemory = 0x5,gestaltTempMemTracked = 0x6,gestaltIPCSupport = 0x7,gestaltSysDebuggerSupport = 0x8,gestaltNativeProcessMgrBit = 0x13,gestaltAltivecRegistersSwappedCorrectlyBit = 0x14,};
enum $C5C6066649FD0B11099ACA028C872DF6 {kFBCnotAllFoldersSearchable = 0xFFFF88BB,};
enum $C605909FC33F552E6A3A1938E70FB6D2 {kThemeMenuTypePullDown = 0x0,kThemeMenuTypePopUp = 0x1,kThemeMenuTypeHierarchical = 0x2,kThemeMenuTypeInactive = 0x100,};
enum $C60A49EC3BD0B40FE93D5BEC81287912 : unsigned __int32 {kProcessDictionaryIncludeAllInformationMask = 0xFFFFFFFF,};
enum $C61609BB0F455BF0C49EDE98D48A29D1 {kCmdCompleteMsg = 0x0,kExtendedMsg = 0x1,kSaveDataPointerMsg = 0x2,kRestorePointersMsg = 0x3,kDisconnectMsg = 0x4,kInitiatorDetectedErrorMsg = 0x5,kAbortMsg = 0x6,kMsgRejectMsg = 0x7,kNoOperationMsg = 0x8,kMsgParityErrorMsg = 0x9,kLinkedCmdCompleteMsg = 0xA,kLinkedCmdCompleteWithFlagMsg = 0xB,kBusDeviceResetMsg = 0xC,kAbortTagMsg = 0xD,kClearQueueMsg = 0xE,kInitiateRecoveryMsg = 0xF,kReleaseRecoveryMsg = 0x10,kTerminateIOProcessMsg = 0x11,kSimpleQueueTag = 0x20,kHeadOfQueueTagMsg = 0x21,kOrderedQueueTagMsg = 0x22,kIgnoreWideResidueMsg = 0x23,};
enum $C625086FF7C44828098F3E200ADA2515 {initMsg = 0x1,okMsg = 0x2,cancelMsg = 0x3,hitMsg = 0x4,nulMsg = 0x5,updateMsg = 0x6,activateMsg = 0x7,deactivateMsg = 0x8,keyEvtMsg = 0x9,superMsg = 0xA,normalMsg = 0xB,startupMsg = 0xC,};
enum $C644B9C64E9925284C6353AB49BF15EA {kMacRomanianDefaultVariant = 0x0,kMacRomanianCurrencySignVariant = 0x1,kMacRomanianEuroSignVariant = 0x2,};
enum $C674DA6CF1E7540352485C5927AD2BA0 {keyAEMorphemePartOfSpeechCode = 0x6C616D63,keyAEMorphemeTextRange = 0x6C616D74,};
enum $C6AD7CD9C5A4902D841FE397EF11670D {kKCProtocolTypeFTP = 0x66747020,kKCProtocolTypeFTPAccount = 0x66747061,kKCProtocolTypeHTTP = 0x68747470,kKCProtocolTypeIRC = 0x69726320,kKCProtocolTypeNNTP = 0x6E6E7470,kKCProtocolTypePOP3 = 0x706F7033,kKCProtocolTypeSMTP = 0x736D7470,kKCProtocolTypeSOCKS = 0x736F7820,kKCProtocolTypeIMAP = 0x696D6170,kKCProtocolTypeLDAP = 0x6C646170,kKCProtocolTypeAppleTalk = 0x61746C6B,kKCProtocolTypeAFP = 0x61667020,kKCProtocolTypeTelnet = 0x74656C6E,};
enum $C6BFFF151462A91B7033E1DC3AE9C4D2 {T_MORE = 0x1,T_EXPEDITED = 0x2,T_ACKNOWLEDGED = 0x4,T_PARTIALDATA = 0x8,T_NORECEIPT = 0x10,T_TIMEDOUT = 0x20,};
enum $C6C67F321F1E8CED2BA4A3DAFC49FFF0 {gestaltOpenTpt = 0x6F74616E,gestaltOpenTptPresentMask = 0x1,gestaltOpenTptLoadedMask = 0x2,gestaltOpenTptAppleTalkPresentMask = 0x4,gestaltOpenTptAppleTalkLoadedMask = 0x8,gestaltOpenTptTCPPresentMask = 0x10,gestaltOpenTptTCPLoadedMask = 0x20,gestaltOpenTptIPXSPXPresentMask = 0x40,gestaltOpenTptIPXSPXLoadedMask = 0x80,gestaltOpenTptPresentBit = 0x0,gestaltOpenTptLoadedBit = 0x1,gestaltOpenTptAppleTalkPresentBit = 0x2,gestaltOpenTptAppleTalkLoadedBit = 0x3,gestaltOpenTptTCPPresentBit = 0x4,gestaltOpenTptTCPLoadedBit = 0x5,gestaltOpenTptIPXSPXPresentBit = 0x6,gestaltOpenTptIPXSPXLoadedBit = 0x7,};
enum $C6CD21D6EDA87596013683706B8E246E {eNotStarted = 0x0,eRunnable = 0x1,eRunning = 0x2,eStopped = 0x3,eTerminated = 0x4,};
enum $C6DBFE253CF1B7A209D6AE2E512780A4 {kEventClassFont = 0x666F6E74,};
enum $C6E2751603EF5DC81431696333BDC0D3 : unsigned __int32 {kioACAccessOwnerBit = 0x1F,kioACAccessOwnerMask = 0x80000000,kioACAccessBlankAccessBit = 0x1C,kioACAccessBlankAccessMask = 0x10000000,kioACAccessUserWriteBit = 0x1A,kioACAccessUserWriteMask = 0x4000000,kioACAccessUserReadBit = 0x19,kioACAccessUserReadMask = 0x2000000,kioACAccessUserSearchBit = 0x18,kioACAccessUserSearchMask = 0x1000000,kioACAccessEveryoneWriteBit = 0x12,kioACAccessEveryoneWriteMask = 0x40000,kioACAccessEveryoneReadBit = 0x11,kioACAccessEveryoneReadMask = 0x20000,kioACAccessEveryoneSearchBit = 0x10,kioACAccessEveryoneSearchMask = 0x10000,kioACAccessGroupWriteBit = 0xA,kioACAccessGroupWriteMask = 0x400,kioACAccessGroupReadBit = 0x9,kioACAccessGroupReadMask = 0x200,kioACAccessGroupSearchBit = 0x8,kioACAccessGroupSearchMask = 0x100,kioACAccessOwnerWriteBit = 0x2,kioACAccessOwnerWriteMask = 0x4,kioACAccessOwnerReadBit = 0x1,kioACAccessOwnerReadMask = 0x2,kioACAccessOwnerSearchBit = 0x0,kioACAccessOwnerSearchMask = 0x1,kfullPrivileges = 0x70007,kownerPrivileges = 0x7,};
enum $C6F2654782434640287B2F40D3E95A29 {kEventWindowDrawFrame = 0x3E8,kEventWindowDrawPart = 0x3E9,kEventWindowGetRegion = 0x3EA,kEventWindowHitTest = 0x3EB,kEventWindowInit = 0x3EC,kEventWindowDispose = 0x3ED,kEventWindowDragHilite = 0x3EE,kEventWindowModified = 0x3EF,kEventWindowSetupProxyDragImage = 0x3F0,kEventWindowStateChanged = 0x3F1,kEventWindowMeasureTitle = 0x3F2,kEventWindowDrawGrowBox = 0x3F3,kEventWindowGetGrowImageRegion = 0x3F4,kEventWindowPaint = 0x3F5,};
enum $C704602AAA1468B19E618412D15357F7 {kControlIconProc = 0x140,kControlIconNoTrackProc = 0x141,kControlIconSuiteProc = 0x142,kControlIconSuiteNoTrackProc = 0x143,};
enum $C71B12FB6EB95F7C4322DC4ACF50C8FA {kAppleLogoIcon = 0x6361706C,kAppleMenuIcon = 0x7361706C,kBackwardArrowIcon = 0x6261726F,kFavoriteItemsIcon = 0x66617672,kForwardArrowIcon = 0x6661726F,kGridIcon = 0x67726964,kHelpIcon = 0x68656C70,kKeepArrangedIcon = 0x61726E67,kLockedIcon = 0x6C6F636B,kNoFilesIcon = 0x6E66696C,kNoFolderIcon = 0x6E666C64,kNoWriteIcon = 0x6E777274,kProtectedApplicationFolderIcon = 0x70617070,kProtectedSystemFolderIcon = 0x70737973,kRecentItemsIcon = 0x72636E74,kShortcutIcon = 0x73687274,kSortAscendingIcon = 0x61736E64,kSortDescendingIcon = 0x64736E64,kUnlockedIcon = 0x756C636B,kConnectToIcon = 0x636E6374,kGenericWindowIcon = 0x6777696E,kQuestionMarkIcon = 0x71756573,kDeleteAliasIcon = 0x64616C69,kEjectMediaIcon = 0x656A6563,kBurningIcon = 0x6275726E,kRightContainerArrowIcon = 0x72636172,};
enum $C74DBA0D955B36FDC065BBDBE74F56F8 {typeWhoseDescriptor = 0x77686F73,formWhose = 0x77686F73,typeWhoseRange = 0x77726E67,keyAEWhoseRangeStart = 0x77737472,keyAEWhoseRangeStop = 0x77737470,keyAEIndex = 0x6B696478,keyAETest = 0x6B747374,};
enum $C7BB28FA531CF87C02AFBAC85C9F2A23 {scsiErrorBase = 0xFFFFE100,};
enum $C7BFCD36EB7E15BAB321A526F119910C {gestaltHasHFSPlusAPIs = 0xC,gestaltMustUseFCBAccessors = 0xD,gestaltFSUsesPOSIXPathsForConversion = 0xE,gestaltFSSupportsExclusiveLocks = 0xF,gestaltFSSupportsHardLinkDetection = 0x10,};
enum $C7E6F4478A7E82E709BE0FC86BF52DB9 {kControlKindScrollingTextBox = 0x73746278,};
enum $C7FAE4C9EC3931A7ABACE92D3701D5D9 {gestaltKeyboardsAttr = 0x6B626473,gestaltKBPS2Keyboards = 0x1,gestaltKBPS2SetIDToAny = 0x2,gestaltKBPS2SetTranslationTable = 0x4,};
enum $C813F1F26BE519358A0DF791508EEF60 {kProcDescriptorIsProcPtr = 0x0,kProcDescriptorIsIndex = 0x20,};
enum $C847B87D1C0CB21C7CB85F03621A671B {cmAsciiData = 0x0,cmBinaryData = 0x1,};
enum $C85304F10C6CF22C42466B17B9F5F272 : unsigned __int32 {kAEDebugPOSTHeader = 0x1,kAEDebugReplyHeader = 0x2,kAEDebugXMLRequest = 0x4,kAEDebugXMLResponse = 0x8,kAEDebugXMLDebugAll = 0xFFFFFFFF,};
enum $C856B631E5187AC38B95D1FC138137D7 {kMenuItemDataText = 0x1,kMenuItemDataMark = 0x2,kMenuItemDataCmdKey = 0x4,kMenuItemDataCmdKeyGlyph = 0x8,kMenuItemDataCmdKeyModifiers = 0x10,kMenuItemDataStyle = 0x20,kMenuItemDataEnabled = 0x40,kMenuItemDataIconEnabled = 0x80,kMenuItemDataIconID = 0x100,kMenuItemDataIconHandle = 0x200,kMenuItemDataCommandID = 0x400,kMenuItemDataTextEncoding = 0x800,kMenuItemDataSubmenuID = 0x1000,kMenuItemDataSubmenuHandle = 0x2000,kMenuItemDataFontID = 0x4000,kMenuItemDataRefcon = 0x8000,kMenuItemDataAttributes = 0x10000,kMenuItemDataCFString = 0x20000,kMenuItemDataProperties = 0x40000,kMenuItemDataIndent = 0x80000,kMenuItemDataCmdVirtualKey = 0x100000,kMenuItemDataAllDataVersionOne = 0xFFFFF,kMenuItemDataAllDataVersionTwo = 0x1FFFFF,};
enum $C85A45692EAD253C6A93DE56D894B052 {kWindowDefProcType = 0x57444546,};
enum $C87EE680BB108E7CD8AEE2A24F663647 {kDialogFlagsUseThemeBackground = 0x1,kDialogFlagsUseControlHierarchy = 0x2,kDialogFlagsHandleMovableModal = 0x4,kDialogFlagsUseThemeControls = 0x8,};
enum $C886933FA833F579BADE4B9335D656E1 {kSecOptionReserved = 0xFF,kCertUsageShift = 0x8,kCertUsageSigningAdd = 0x100,kCertUsageSigningAskAndAdd = 0x200,kCertUsageVerifyAdd = 0x400,kCertUsageVerifyAskAndAdd = 0x800,kCertUsageEncryptAdd = 0x1000,kCertUsageEncryptAskAndAdd = 0x2000,kCertUsageDecryptAdd = 0x4000,kCertUsageDecryptAskAndAdd = 0x8000,kCertUsageKeyExchAdd = 0x10000,kCertUsageKeyExchAskAndAdd = 0x20000,kCertUsageRootAdd = 0x40000,kCertUsageRootAskAndAdd = 0x80000,kCertUsageSSLAdd = 0x100000,kCertUsageSSLAskAndAdd = 0x200000,kCertUsageAllAdd = 0x7FFFFF00,};
enum $C89AAE020909AAE924D2F95C9B3695CF {modeReserved = 0x1000000,modeControlPanel = 0x80000,modeLaunchDontSwitch = 0x40000,modeDeskAccessory = 0x20000,modeMultiLaunch = 0x10000,modeNeedSuspendResume = 0x4000,modeCanBackground = 0x1000,modeDoesActivateOnFGSwitch = 0x800,modeOnlyBackground = 0x400,modeGetFrontClicks = 0x200,modeGetAppDiedMsg = 0x100,mode32BitCompatible = 0x80,modeHighLevelEventAware = 0x40,modeLocalAndRemoteHLEvents = 0x20,modeStationeryAware = 0x10,modeUseTextEditServices = 0x8,modeDisplayManagerAware = 0x4,};
enum $C8BF94CBC96913F7793D64CEB4892DBA {kFindFolderExtendedFlagsDoNotFollowAliasesBit = 0x0,kFindFolderExtendedFlagsDoNotUseUserFolderBit = 0x1,kFindFolderExtendedFlagsUseOtherUserRecord = 0x1000000,};
enum $C8DC99D3AEAB107DE97D040E2A07D5AF {kUnicodeDocument = 0x75646F63,kUnicodeTextService = 0x75747376,};
enum $C9196282FECEA653565233A7CD50F0CD {kNeedsInputWindow = 0x1,kHandlesUpdateRegion = 0x2,kHandlesGetRegion = 0x3,kHandlesPos2Offset = 0x4,kHandlesOffset2Pos = 0x5,kInPasswordMode = 0x6,kHandleMultipleHoles = 0x7,kDocumentIsReadOnly = 0x8,};
enum $C91F69A5AC168D617F97E57195353DD8 {kICAProperty = 0x70726F70,kICAPropertyImageWidth = 0x30313030,kICAPropertyImageHeight = 0x30313031,kICAPropertyImageBitDepth = 0x30313032,kICAPropertyImageDPI = 0x30313141,kICAPropertyImageExposureTime = 0x38323941,kICAPropertyImageFNumber = 0x38323944,kICAPropertyImageDateOriginal = 0x39303033,kICAPropertyImageDateDigitized = 0x39303034,kICAPropertyImageShutterSpeed = 0x39323031,kICAPropertyImageAperture = 0x39323032,kICAPropertyImageFlash = 0x39323039,kICAPropertyColorSpace = 0x41303031,kICAPropertyImageFilename = 0x6966696C,kICAPropertyImageSize = 0x6973697A,kICAPropertyImageData = 0x69646174,kICAPropertyImageThumbnail = 0x7468756D,kICAPropertyColorSyncProfile = 0x70726F66,};
enum $C93799A8625E76DD336C3BAE01FEEAD3 {kNavWrongDialogStateErr = 0xFFFFE9C2,kNavWrongDialogClassErr = 0xFFFFE9C1,kNavInvalidSystemConfigErr = 0xFFFFE9C0,kNavCustomControlMessageFailedErr = 0xFFFFE9BF,kNavInvalidCustomControlMessageErr = 0xFFFFE9BE,kNavMissingKindStringErr = 0xFFFFE9BD,};
enum $C942FFF88CB30AAF99EA8E1B74325729 {kHIViewZOrderAbove = 0x1,kHIViewZOrderBelow = 0x2,};
enum $C974BC6A0E76B887C6D75672F6DDE789 {kioFCBWriteBit = 0x8,kioFCBWriteMask = 0x100,kioFCBResourceBit = 0x9,kioFCBResourceMask = 0x200,kioFCBWriteLockedBit = 0xA,kioFCBWriteLockedMask = 0x400,kioFCBLargeFileBit = 0xB,kioFCBLargeFileMask = 0x800,kioFCBSharedWriteBit = 0xC,kioFCBSharedWriteMask = 0x1000,kioFCBFileLockedBit = 0xD,kioFCBFileLockedMask = 0x2000,kioFCBOwnClumpBit = 0xE,kioFCBOwnClumpMask = 0x4000,kioFCBModifiedBit = 0xF,kioFCBModifiedMask = 0x8000,};
enum $C98B22E8D4E004C8875CFAC75B2C8663 {teScrapSizeErr = 0xFFFFFE0B,hwParamErr = 0xFFFFFE0A,driverHardwareGoneErr = 0xFFFFFE09,};
enum $C9BC48A3711C61416D7290D1B22990B0 {kControlKindPicture = 0x70696374,};
enum $C9E08DFF4FB6D727B4644947C2D2ACCA {componentDoAutoVersion = 0x1,componentWantsUnregister = 0x2,componentAutoVersionIncludeFlags = 0x4,componentHasMultiplePlatforms = 0x8,componentLoadResident = 0x10,};
union $CA1DD0B65E3A4ADE6E56E85377B62761 {unsigned int word;struct $CA1DD0B65E3A4ADE6E56E85377B62761::$11E2CD1FADFFABB4487D57A9E7A620C8 bits;};
struct $CA1DD0B65E3A4ADE6E56E85377B62761::$11E2CD1FADFFABB4487D57A9E7A620C8 {unsigned __int32 ov : 1;unsigned __int32 cv : 31;};
enum $CA37B7C591AB80BE0B169161AB784E55 {normal = 0x0,bold = 0x1,italic = 0x2,underline = 0x4,outline = 0x8,shadow = 0x10,condense = 0x20,extend = 0x40,};
enum $CA988EB8750E57FF1CA47E5BC446B68A {kMacIcelandicStdDefaultVariant = 0x0,kMacIcelandicTTDefaultVariant = 0x1,kMacIcelandicStdCurrSignVariant = 0x2,kMacIcelandicTTCurrSignVariant = 0x3,kMacIcelandicStdEuroSignVariant = 0x4,kMacIcelandicTTEuroSignVariant = 0x5,};
enum $CAA0BEF6FEF2C4550E86ACD656E239BD {errItemAlreadyInTree = 0xFFFFFC40,errNotValidTree = 0xFFFFFC3F,errItemNotFoundInTree = 0xFFFFFC3E,errCanNotInsertWhileWalkProcInProgress = 0xFFFFFC3D,errTreeIsLocked = 0xFFFFFC3C,};
enum $CAADD9AD578FAEE431E87699F04E9130 {kEventTabletPoint = 0x1,kEventTabletProximity = 0x2,kEventTabletPointer = 0x1,};
enum $CADB6B4EFAC31664979932E8F8FDA79E {teBitClear = 0x0,teBitSet = 0x1,teBitTest = 0xFFFFFFFF,};
enum $CAE53EB5C966C28D50FCE6EEBCACB9E8 {menuPropertyInvalidErr = 0xFFFFEA1D,menuPropertyInvalid = 0xFFFFEA1D,menuPropertyNotFoundErr = 0xFFFFEA1C,menuNotFoundErr = 0xFFFFEA0C,menuUsesSystemDefErr = 0xFFFFEA0B,menuItemNotFoundErr = 0xFFFFEA0A,menuInvalidErr = 0xFFFFEA09,};
enum $CB6F75D93604AFC65B130E62229196BF {smCharPunct = 0x0,smCharAscii = 0x1,smCharEuro = 0x7,smCharExtAscii = 0x7,smCharKatakana = 0x2,smCharHiragana = 0x3,smCharIdeographic = 0x4,smCharTwoByteGreek = 0x5,smCharTwoByteRussian = 0x6,smCharBidirect = 0x8,smCharContextualLR = 0x9,smCharNonContextualLR = 0xA,smCharHangul = 0xC,smCharJamo = 0xD,smCharBopomofo = 0xE,smCharGanaKana = 0xF,smCharFISKana = 0x2,smCharFISGana = 0x3,smCharFISIdeo = 0x4,};
enum $CBAF5646069367B3450D2EB7E8DB23F4 {srcCopy = 0x0,srcOr = 0x1,srcXor = 0x2,srcBic = 0x3,notSrcCopy = 0x4,notSrcOr = 0x5,notSrcXor = 0x6,notSrcBic = 0x7,patCopy = 0x8,patOr = 0x9,patXor = 0xA,patBic = 0xB,notPatCopy = 0xC,notPatOr = 0xD,notPatXor = 0xE,notPatBic = 0xF,grayishTextOr = 0x31,hilitetransfermode = 0x32,hilite = 0x32,blend = 0x20,addPin = 0x21,addOver = 0x22,subPin = 0x23,addMax = 0x25,adMax = 0x25,subOver = 0x26,adMin = 0x27,ditherCopy = 0x40,transparent = 0x24,};
enum $CBB9F567B2EA89C4B4CEFD9F78D885C4 {gestaltStdNBPAttr = 0x6E6C7570,gestaltStdNBPPresent = 0x0,gestaltStdNBPSupportsAutoPosition = 0x1,};
enum $CBC82A2BC80BA266BEAA25EF92642488 {kDevicePCIPowerOffAllowed = 0x1,kDeviceSupportsPMIS = 0x2,kDeviceCanAssertPMEDuringSleep = 0x4,kDeviceUsesCommonLogicPower = 0x8,kDeviceDriverPresent = 0x10,kDeviceDriverSupportsPowerMgt = 0x20,};
enum $CBC837C0B2E1E9C22A794CBDD581037D {kAudioFormatAtomType = 0x66726D61,kAudioEndianAtomType = 0x656E6461,kAudioVBRAtomType = 0x76627261,kAudioTerminatorAtomType = 0x0,};
enum $CBE38FD281595659B759501A88BAAB2C {gestaltToolboxTable = 0x74627474,};
enum $CBE82BCFE2BC4E22E2710BE97242EA86 {rAliasType = 0x616C6973,};
enum $CBEAF8466AA846FE24FEC203F1FE884C {errMessageNotSupported = 0xFFFF888C,errDataNotSupported = 0xFFFF888B,errControlDoesntSupportFocus = 0xFFFF888A,errUnknownControl = 0xFFFF8888,errCouldntSetFocus = 0xFFFF8887,errNoRootControl = 0xFFFF8886,errRootAlreadyExists = 0xFFFF8885,errInvalidPartCode = 0xFFFF8884,errControlsAlreadyExist = 0xFFFF8883,errControlIsNotEmbedder = 0xFFFF8882,errDataSizeMismatch = 0xFFFF8881,errControlHiddenOrDisabled = 0xFFFF8880,errCantEmbedIntoSelf = 0xFFFF887E,errCantEmbedRoot = 0xFFFF887D,errItemNotControl = 0xFFFF887C,controlInvalidDataVersionErr = 0xFFFF887B,controlPropertyInvalid = 0xFFFFEA1D,controlPropertyNotFoundErr = 0xFFFFEA1C,controlHandleInvalidErr = 0xFFFF8879,};
enum $CC052733775226ECD6E2A883D62A4D31 {kIsOnDesk = 0x1,kColor = 0xE,kIsShared = 0x40,kHasNoINITs = 0x80,kHasBeenInited = 0x100,kHasCustomIcon = 0x400,kIsStationery = 0x800,kNameLocked = 0x1000,kHasBundle = 0x2000,kIsInvisible = 0x4000,kIsAlias = 0x8000,};
enum $CC091832F316327152ED0A035D8C4D44 {kDomainTopLevelFolderType = 0x64746F70,kDomainLibraryFolderType = 0x646C6962,kColorSyncFolderType = 0x73796E63,kColorSyncCMMFolderType = 0x63636D6D,kColorSyncScriptingFolderType = 0x63736372,kPrintersFolderType = 0x696D7072,kSpeechFolderType = 0x73706368,kCarbonLibraryFolderType = 0x63617262,kDocumentationFolderType = 0x696E666F,kDeveloperDocsFolderType = 0x64646F63,kDeveloperHelpFolderType = 0x64657668,kISSDownloadsFolderType = 0x69737364,kUserSpecificTmpFolderType = 0x75746D70,kCachedDataFolderType = 0x63616368,kFrameworksFolderType = 0x6672616D,kPrivateFrameworksFolderType = 0x7066726D,kClassicDesktopFolderType = 0x7364736B,kDeveloperFolderType = 0x64657666,kSystemSoundsFolderType = 0x73736E64,kComponentsFolderType = 0x636D7064,kQuickTimeComponentsFolderType = 0x77636D70,kCoreServicesFolderType = 0x63737276,kPictureDocumentsFolderType = 0x70646F63,kMovieDocumentsFolderType = 0x6D646F63,kMusicDocumentsFolderType = 0xB5646F63,kInternetSitesFolderType = 0x73697465,kPublicFolderType = 0x70756262,kAudioSupportFolderType = 0x6164696F,kAudioSoundsFolderType = 0x61736E64,kAudioSoundBanksFolderType = 0x62616E6B,kAudioAlertSoundsFolderType = 0x616C7274,kAudioPlugInsFolderType = 0x61706C67,kAudioComponentsFolderType = 0x61636D70,kKernelExtensionsFolderType = 0x6B657874,kDirectoryServicesFolderType = 0x64737276,kDirectoryServicesPlugInsFolderType = 0x64706C67,kInstallerReceiptsFolderType = 0x72637074,kFileSystemSupportFolderType = 0x66737973,kAppleShareSupportFolderType = 0x73686172,kAppleShareAuthenticationFolderType = 0x61757468,kMIDIDriversFolderType = 0x6D696469,kKeyboardLayoutsFolderType = 0x6B6C6179,kIndexFilesFolderType = 0x696E6478,kFindByContentIndexesFolderType = 0x66626378,kManagedItemsFolderType = 0x6D616E67,kBootTimeStartupItemsFolderType = 0x656D707A,};
enum $CC4616D3C4C384DC58C4C548B533D9C9 {chargerConnBit = 0x0,hiChargeBit = 0x1,chargeOverFlowBit = 0x2,batteryDeadBit = 0x3,batteryLowBit = 0x4,connChangedBit = 0x5,};
enum $CC51797E5043117C409E27369F7E30C5 {FLUSHBAND = 0x40,};
enum $CC65832C1B1F6D73C69B1C0A6DD944E4 {keyAERangeStart = 0x73746172,keyAERangeStop = 0x73746F70,keyDisposeTokenProc = 0x78746F6B,keyAECompareProc = 0x636D7072,keyAECountProc = 0x636F6E74,keyAEMarkTokenProc = 0x6D6B6964,keyAEMarkProc = 0x6D61726B,keyAEAdjustMarksProc = 0x61646A6D,keyAEGetErrDescProc = 0x696E6463,};
enum $CC84CECE87A3CF95A5FF698DDC1A7578 {kTXNTextData = 0x54455854,kTXNPictureData = 0x50494354,kTXNMovieData = 0x6D6F6F76,kTXNSoundData = 0x736E6420,kTXNUnicodeTextData = 0x75747874,};
enum $CC8FF8FB7FA524AF8281078FF9FAB432 {kFMDefaultOptions = 0x0,};
enum $CC9978C76DBE3D8709D041F5270AF685 {kEventParamCurrentMenuTrackingMode = 0x636D746D,kEventParamNewMenuTrackingMode = 0x6E6D746D,kEventParamMenuFirstOpen = 0x3173746F,kEventParamMenuItemIndex = 0x6974656D,kEventParamMenuCommand = 0x6D636D64,kEventParamEnableMenuForKeyEvent = 0x666F726B,kEventParamMenuEventOptions = 0x6D656F70,kEventParamMenuContext = 0x6D637478,kEventParamMenuItemBounds = 0x6D697462,kEventParamMenuMarkBounds = 0x6D6D6B62,kEventParamMenuIconBounds = 0x6D696362,kEventParamMenuTextBounds = 0x6D747862,kEventParamMenuTextBaseline = 0x6D74626C,kEventParamMenuCommandKeyBounds = 0x6D636D62,kEventParamMenuVirtualTop = 0x6D767274,kEventParamMenuVirtualBottom = 0x6D767262,kEventParamMenuDrawState = 0x6D647273,kEventParamMenuItemType = 0x6D697470,kEventParamMenuItemWidth = 0x6D697477,kEventParamMenuItemHeight = 0x6D697468,typeMenuItemIndex = 0x6D696478,typeMenuCommand = 0x6D636D64,typeMenuTrackingMode = 0x6D746D64,typeMenuEventOptions = 0x6D656F70,typeThemeMenuState = 0x746D6E73,typeThemeMenuItemType = 0x746D6974,};
enum $CCFF566BB3A84D88E47AAA584977BC3E {kControlKindSeparator = 0x73657061,};
enum $CD186B9C323FA891A7A575C512C8E555 {kNoAlternatesSelector = 0x0,};
enum $CD245178CB213C313AFEA4423394C154 {pixPurgeBit = 0x0,noNewDeviceBit = 0x1,useTempMemBit = 0x2,keepLocalBit = 0x3,useDistantHdwrMemBit = 0x4,useLocalHdwrMemBit = 0x5,pixelsPurgeableBit = 0x6,pixelsLockedBit = 0x7,mapPixBit = 0x10,newDepthBit = 0x11,alignPixBit = 0x12,newRowBytesBit = 0x13,reallocPixBit = 0x14,clipPixBit = 0x1C,stretchPixBit = 0x1D,ditherPixBit = 0x1E,gwFlagErrBit = 0x1F,};
enum $CD246261D28BE75CB7F8313BAD05F1B8 {kScrollBarsAlwaysActive = 0x1,kScrollBarsSyncWithFocus = 0x0,};
enum $CD356E0646F3F24B53970279273BB9C6 {typePixelMap = 0x63706978,typePixMapMinus = 0x74706D6D,typePolygon = 0x6370676E,typePropInfo = 0x70696E66,typePtr = 0x70747220,typeQDPoint = 0x51447074,typeQDRegion = 0x5172676E,typeRectangle = 0x63726563,typeRGB16 = 0x74723136,typeRGB96 = 0x74723936,typeRGBColor = 0x63524742,typeRotation = 0x74726F74,typeRoundedRectangle = 0x63727263,typeRow = 0x63726F77,typeScrapStyles = 0x7374796C,typeScript = 0x73637074,typeStyledText = 0x53545854,typeSuiteInfo = 0x7375696E,typeTable = 0x6374626C,typeTextStyles = 0x74737479,};
enum $CD6BE087EFB904FD3BA794FF8C2EBA55 {kLASpeechMeishi = 0x0,kLASpeechFutsuuMeishi = 0x0,kLASpeechJinmei = 0x100,kLASpeechJinmeiSei = 0x110,kLASpeechJinmeiMei = 0x120,kLASpeechChimei = 0x200,kLASpeechSetsubiChimei = 0x210,kLASpeechSoshikimei = 0x300,kLASpeechKoyuuMeishi = 0x400,kLASpeechSahenMeishi = 0x500,kLASpeechKeidouMeishi = 0x600,kLASpeechRentaishi = 0x1000,kLASpeechFukushi = 0x2000,kLASpeechSetsuzokushi = 0x3000,kLASpeechKandoushi = 0x4000,kLASpeechDoushi = 0x5000,kLASpeechGodanDoushi = 0x5000,kLASpeechKagyouGodan = 0x5000,kLASpeechSagyouGodan = 0x5010,kLASpeechTagyouGodan = 0x5020,kLASpeechNagyouGodan = 0x5030,kLASpeechMagyouGodan = 0x5040,kLASpeechRagyouGodan = 0x5050,kLASpeechWagyouGodan = 0x5060,kLASpeechGagyouGodan = 0x5070,kLASpeechBagyouGodan = 0x5080,kLASpeechIchidanDoushi = 0x5100,kLASpeechKahenDoushi = 0x5200,kLASpeechSahenDoushi = 0x5300,kLASpeechZahenDoushi = 0x5400,kLASpeechKeiyoushi = 0x6000,kLASpeechKeiyoudoushi = 0x7000,kLASpeechSettougo = 0x8000,kLASpeechSuujiSettougo = 0x8100,kLASpeechSetsubigo = 0x9000,kLASpeechJinmeiSetsubigo = 0x9100,kLASpeechChimeiSetsubigo = 0x9200,kLASpeechSoshikimeiSetsubigo = 0x9300,kLASpeechSuujiSetsubigo = 0x9400,kLASpeechMuhinshi = 0xA000,kLASpeechTankanji = 0xA000,kLASpeechKigou = 0xA100,kLASpeechKuten = 0xA110,kLASpeechTouten = 0xA120,kLASpeechSuushi = 0xA200,kLASpeechDokuritsugo = 0xA300,kLASpeechSeiku = 0xA400,kLASpeechJodoushi = 0xB000,kLASpeechJoshi = 0xC000,};
enum $CD763B96B3EBFB684C20C4674569FA82 {kUSBInternalReserved10 = 0xFFFFE4D9,kUSBInternalReserved9 = 0xFFFFE4D8,kUSBInternalReserved8 = 0xFFFFE4D7,kUSBInternalReserved7 = 0xFFFFE4D6,kUSBInternalReserved6 = 0xFFFFE4D5,kUSBInternalReserved5 = 0xFFFFE4D4,kUSBInternalReserved4 = 0xFFFFE4D3,kUSBInternalReserved3 = 0xFFFFE4D2,kUSBInternalReserved2 = 0xFFFFE4D1,kUSBInternalReserved1 = 0xFFFFE4D0,};
enum $CD96CBF9FAB54130F2F8CFD47EB21DE3 {kICComponentInterfaceVersion0 = 0x0,kICComponentInterfaceVersion1 = 0x10000,kICComponentInterfaceVersion2 = 0x20000,kICComponentInterfaceVersion3 = 0x30000,kICComponentInterfaceVersion4 = 0x40000,kICComponentInterfaceVersion = 0x40000,};
enum $CD98006DCD13EE796258013A3769AE4B {keyAEHomographDicInfo = 0x6C616864,keyAEHomographWeight = 0x6C616877,keyAEHomographAccent = 0x6C616861,};
enum $CDA55719D6FF9C563B002E087AC98490 {kQDParseRegionFromTop = 0x1,kQDParseRegionFromBottom = 0x2,kQDParseRegionFromLeft = 0x4,kQDParseRegionFromRight = 0x8,kQDParseRegionFromTopLeft = 0x5,kQDParseRegionFromBottomRight = 0xA,};
enum $CE00222D1B4C9409943A031D61C06589 {kALMInternalErr = 0xFFFF8A9F,kALMGroupNotFoundErr = 0xFFFF8AA0,kALMNoSuchModuleErr = 0xFFFF8AA1,kALMModuleCommunicationErr = 0xFFFF8AA2,kALMDuplicateModuleErr = 0xFFFF8AA3,kALMInstallationErr = 0xFFFF8AA4,kALMDeferSwitchErr = 0xFFFF8AA5,kALMRebootFlagsLevelErr = 0xFFFF8AA6,};
enum $CE34DA6674ED890926E3FF40734C9E00 {kFSAllocDefaultFlags = 0x0,kFSAllocAllOrNothingMask = 0x1,kFSAllocContiguousMask = 0x2,kFSAllocNoRoundUpMask = 0x4,kFSAllocReservedMask = 0xFFF8,};
enum $CE3C2C324EA67431ABD917A3727F2AB6 {kAENonmodifiable = 0x6E6D6F64,kAEOpen = 0x6F646F63,kAEOpenSelection = 0x736F7065,kAEOutline = 0x6F75746C,kAEPageSetup = 0x70677375,kAEPaste = 0x70617374,kAEPlain = 0x706C616E,kAEPrint = 0x70646F63,kAEPrintSelection = 0x73707269,kAEPrintWindow = 0x7077696E,kAEPutAwaySelection = 0x73707574,kAEQDAddOver = 0x6164646F,kAEQDAddPin = 0x61646470,kAEQDAdMax = 0x61646D78,kAEQDAdMin = 0x61646D6E,kAEQDBic = 0x62696320,kAEQDBlend = 0x626C6E64,kAEQDCopy = 0x63707920,kAEQDNotBic = 0x6E626963,kAEQDNotCopy = 0x6E637079,};
enum $CE3D87986B78C76B3FA7FCB924EF7677 {kOSAModeCantSwitchLayer = 0x40,};
enum $CE63137381CE1C14105FBF64756659BB {kT8022ModuleID = 0x1BBC,kEnetModuleID = 0x1BBD,kTokenRingModuleID = 0x1BBE,kFDDIModuleID = 0x1BBF,};
enum $CE8D1E361EC0C456100758B116FB6343 {kFMFontTechnologyFilterSelector = 0x1,kFMFontContainerFilterSelector = 0x2,kFMGenerationFilterSelector = 0x3,kFMFontFamilyCallbackFilterSelector = 0x4,kFMFontCallbackFilterSelector = 0x5,kFMFontDirectoryFilterSelector = 0x6,};
enum $CE90ACC5524712E199FEDD3F0CA947D6 {kControlFontStyleTag = 0x666F6E74,kControlKeyFilterTag = 0x666C7472,kControlKindTag = 0x6B696E64,kControlSizeTag = 0x73697A65,};
enum $CE91DBFBD3632086FE7273C2C92668C6 {siActiveChannels = 0x63686163,siActiveLevels = 0x6C6D6163,siAGCOnOff = 0x61676320,siAsync = 0x6173796E,siAVDisplayBehavior = 0x61766462,siChannelAvailable = 0x63686176,siCompressionAvailable = 0x636D6176,siCompressionFactor = 0x636D6661,siCompressionHeader = 0x636D6864,siCompressionNames = 0x636E616D,siCompressionParams = 0x65766177,siCompressionSampleRate = 0x63707274,siCompressionChannels = 0x63706374,siCompressionOutputSampleRate = 0x636F7274,siCompressionInputRateList = 0x6372746C,siCompressionType = 0x636F6D70,siCompressionConfiguration = 0x63636667,siContinuous = 0x636F6E74,siDecompressionParams = 0x77617665,siDecompressionConfiguration = 0x64636667,siDeviceBufferInfo = 0x6462696E,siDeviceConnected = 0x64636F6E,siDeviceIcon = 0x69636F6E,siDeviceName = 0x6E616D65,siEQSpectrumBands = 0x65717362,siEQSpectrumLevels = 0x65716C76,siEQSpectrumOnOff = 0x65716C6F,siEQSpectrumResolution = 0x65717273,siEQToneControlGain = 0x65717467,siEQToneControlOnOff = 0x65717463,siHardwareBalance = 0x6862616C,siHardwareBalanceSteps = 0x68626C73,siHardwareBass = 0x68626173,siHardwareBassSteps = 0x68627374,siHardwareBusy = 0x68776273,siHardwareFormat = 0x6877666D,siHardwareMute = 0x686D7574,siHardwareMuteNoPrefs = 0x686D6E70,siHardwareTreble = 0x68747262,siHardwareTrebleSteps = 0x68777473,siHardwareVolume = 0x68766F6C,siHardwareVolumeSteps = 0x68737470,siHeadphoneMute = 0x706D7574,siHeadphoneVolume = 0x70766F6C,siHeadphoneVolumeSteps = 0x68647374,siInputAvailable = 0x696E6176,siInputGain = 0x6761696E,siInputSource = 0x736F7572,siInputSourceNames = 0x736E616D,siLevelMeterOnOff = 0x6C6D6574,siModemGain = 0x6D676169,siMonitorAvailable = 0x6D6E6176,siMonitorSource = 0x6D6F6E73,siNumberChannels = 0x6368616E,siOptionsDialog = 0x6F707464,siOSTypeInputSource = 0x696E7074,siOSTypeInputAvailable = 0x696E6176,siOutputDeviceName = 0x6F6E616D,siPlayThruOnOff = 0x706C7468,siPostMixerSoundComponent = 0x70736D78,siPreMixerSoundComponent = 0x70726D78,siQuality = 0x7175616C,siRateMultiplier = 0x726D756C,siRecordingQuality = 0x7175616C,siSampleRate = 0x73726174,siSampleRateAvailable = 0x73726176,siSampleSize = 0x7373697A,siSampleSizeAvailable = 0x73736176,siSetupCDAudio = 0x73756364,siSetupModemAudio = 0x73756D64,siSlopeAndIntercept = 0x666C6170,siSoundClock = 0x73636C6B,siUseThisSoundClock = 0x73636C63,siSpeakerMute = 0x736D7574,siSpeakerVolume = 0x73766F6C,siSSpCPULoadLimit = 0x33646C6C,siSSpLocalization = 0x33646966,siSSpSpeakerSetup = 0x33647374,siStereoInputGain = 0x73676169,siSubwooferMute = 0x626D7574,siTerminalType = 0x74747970,siTwosComplementOnOff = 0x74776F73,siVendorProduct = 0x7670726F,siVolume = 0x766F6C75,siVoxRecordInfo = 0x766F7872,siVoxStopInfo = 0x766F7873,siWideStereo = 0x77696465,siSupportedExtendedFlags = 0x6578666C,siRateConverterRollOffSlope = 0x72636462,siOutputLatency = 0x6F6C7465,siHALAudioDeviceID = 0x686C6964,siHALAudioDeviceUniqueID = 0x68756964,siClientAcceptsVBR = 0x63766272,siSourceIsExhausted = 0x73726378,siMediaContextID = 0x75756964,siCompressionMaxPacketSize = 0x636D7870,siAudioCodecPropertyValue = 0x73707661,siAudioCodecPropertyInfo = 0x7370696E,};
enum $CECA00623C57FA40B8F68C8E8BB25390 {kThemeNoAdornment = 0x0,kThemeDefaultAdornment = 0x1,kThemeFocusAdornment = 0x4,kThemeRightToLeftAdornment = 0x10,kThemeDrawIndicatorOnly = 0x20,};
enum $CED1243A6D8675D23AA26E362B2F2329 {kContainerFolderAliasType = 0x66647270,kContainerTrashAliasType = 0x74727368,kContainerHardDiskAliasType = 0x6864736B,kContainerFloppyAliasType = 0x666C7079,kContainerServerAliasType = 0x73727672,kApplicationAliasType = 0x61647270,kContainerAliasType = 0x64726F70,kDesktopPrinterAliasType = 0x64747061,kContainerCDROMAliasType = 0x63646472,kApplicationCPAliasType = 0x61636470,kApplicationDAAliasType = 0x61646470,kPackageAliasType = 0x66706B61,kAppPackageAliasType = 0x66617061,};
enum $CEE4A9CECCF4CF2D116914FAB037EC65 {kDataBrowserLatestCustomCallbacks = 0x0,};
enum $CF24C7BFBB11BED3F33F616A9D6ADEC1 {kTXNWillDefaultToATSUIBit = 0x0,kTXNWillDefaultToCarbonEventBit = 0x1,};
enum $CF27797617E2017D26856567A7A44DE5 {handshakeDataLength = 0x8,maxCDBLength = 0x10,vendorIDLength = 0x10,};
enum $CF8B549FD94CFC9338EAE40825E972F5 {kCFXMLStatusParseNotBegun = 0xFFFFFFFE,kCFXMLStatusParseInProgress = 0xFFFFFFFF,kCFXMLStatusParseSuccessful = 0x0,kCFXMLErrorUnexpectedEOF = 0x1,kCFXMLErrorUnknownEncoding = 0x2,kCFXMLErrorEncodingConversionFailure = 0x3,kCFXMLErrorMalformedProcessingInstruction = 0x4,kCFXMLErrorMalformedDTD = 0x5,kCFXMLErrorMalformedName = 0x6,kCFXMLErrorMalformedCDSect = 0x7,kCFXMLErrorMalformedCloseTag = 0x8,kCFXMLErrorMalformedStartTag = 0x9,kCFXMLErrorMalformedDocument = 0xA,kCFXMLErrorElementlessDocument = 0xB,kCFXMLErrorMalformedComment = 0xC,kCFXMLErrorMalformedCharacterReference = 0xD,kCFXMLErrorMalformedParsedCharacterData = 0xE,kCFXMLErrorNoData = 0xF,};
enum $CF93AEDCED8B65A9628808F5C9A8D082 {kCFStreamEventNone = 0x0,kCFStreamEventOpenCompleted = 0x1,kCFStreamEventHasBytesAvailable = 0x2,kCFStreamEventCanAcceptBytes = 0x4,kCFStreamEventErrorOccurred = 0x8,kCFStreamEventEndEncountered = 0x10,};
enum $CFB5A45FF2E92B7653B560A71A67939B {cmTechnologyDigitalCamera = 0x6463616D,cmTechnologyFilmScanner = 0x6673636E,cmTechnologyReflectiveScanner = 0x7273636E,cmTechnologyInkJetPrinter = 0x696A6574,cmTechnologyThermalWaxPrinter = 0x74776178,cmTechnologyElectrophotographicPrinter = 0x6570686F,cmTechnologyElectrostaticPrinter = 0x65737461,cmTechnologyDyeSublimationPrinter = 0x64737562,cmTechnologyPhotographicPaperPrinter = 0x7270686F,cmTechnologyFilmWriter = 0x6670726E,cmTechnologyVideoMonitor = 0x7669646D,cmTechnologyVideoCamera = 0x76696463,cmTechnologyProjectionTelevision = 0x706A7476,cmTechnologyCRTDisplay = 0x43525420,cmTechnologyPMDisplay = 0x504D4420,cmTechnologyAMDisplay = 0x414D4420,cmTechnologyPhotoCD = 0x4B504344,cmTechnologyPhotoImageSetter = 0x696D6773,cmTechnologyGravure = 0x67726176,cmTechnologyOffsetLithography = 0x6F666673,cmTechnologySilkscreen = 0x73696C6B,cmTechnologyFlexography = 0x666C6578,};
enum $CFBE06119183323645EB11ACCC8A8CC2 {gestaltNuBusConnectors = 0x736C7463,};
enum $CFDF783D32EDE4E13172FEE3BADE512A {kTXNLineDirectionTag = 0x6C6E6472,kTXNJustificationTag = 0x6A757374,kTXNIOPrivilegesTag = 0x696F7076,kTXNSelectionStateTag = 0x736C7374,kTXNInlineStateTag = 0x696E7374,kTXNWordWrapStateTag = 0x77777273,kTXNKeyboardSyncStateTag = 0x6B627379,kTXNAutoIndentStateTag = 0x6175696E,kTXNTabSettingsTag = 0x74616273,kTXNRefConTag = 0x7266636E,kTXNMarginsTag = 0x6D617267,kTXNFlattenMoviesTag = 0x666C6174,kTXNDoFontSubstitution = 0x66537562,kTXNNoUserIOTag = 0x6E75696F,kTXNUseCarbonEvents = 0x63626362,kTXNDrawCaretWhenInactiveTag = 0x64637274,kTXNDrawSelectionWhenInactiveTag = 0x64736C6E,kTXNDisableDragAndDropTag = 0x64726167,kTXNSingleLevelUndoTag = 0x756E646F,kTXNVisibilityTag = 0x76697362,};
enum $CFE454D055F0E3CA239C6ED1313A356F {kMPCreateTaskSuspendedMask = 0x1,kMPCreateTaskTakesAllExceptionsMask = 0x2,kMPCreateTaskNotDebuggableMask = 0x4,kMPCreateTaskValidOptionsMask = 0x7,};
struct $D03EAABF4B73BA203F60C8CE80978D99 {char magic[8];char encoding[32];rune_t (__fastcall *sgetrune)(const char *, size_t, const char **);int (__fastcall *sputrune)(rune_t, char *, size_t, char **);rune_t invalid_rune;unsigned int runetype[256];rune_t maplower[256];rune_t mapupper[256];_RuneRange runetype_ext;_RuneRange maplower_ext;_RuneRange mapupper_ext;void *variable;int variable_len;};
enum $D0447A8F273E1BD8659CA9D9BA69FD9B {kIconServicesCatalogInfoMask = 0x8181E,};
enum $D045BEECDAAD810680745CAB3ED4EE0E {kControlImageWellProc = 0xB0,};
enum $D059E35DD7AB8AD47A6785A5C99147B0 {kNextWindowGroup = 0x1,kPreviousWindowGroup = 0x0,};
enum $D06F78857E63F0F4B6642EB25A063142 {nrLockedErr = 0xFFFFF618,nrNotEnoughMemoryErr = 0xFFFFF617,nrInvalidNodeErr = 0xFFFFF616,nrNotFoundErr = 0xFFFFF615,nrNotCreatedErr = 0xFFFFF614,nrNameErr = 0xFFFFF613,nrNotSlotDeviceErr = 0xFFFFF612,nrDataTruncatedErr = 0xFFFFF611,nrPowerErr = 0xFFFFF610,nrPowerSwitchAbortErr = 0xFFFFF60F,nrTypeMismatchErr = 0xFFFFF60E,nrNotModifiedErr = 0xFFFFF60D,nrOverrunErr = 0xFFFFF60C,nrResultCodeBase = 0xFFFFF60B,nrPathNotFound = 0xFFFFF60A,nrPathBufferTooSmall = 0xFFFFF609,nrInvalidEntryIterationOp = 0xFFFFF608,nrPropertyAlreadyExists = 0xFFFFF607,nrIterationDone = 0xFFFFF606,nrExitedIteratorScope = 0xFFFFF605,nrTransactionAborted = 0xFFFFF604,nrCallNotSupported = 0xFFFFF603,};
enum $D08EDC556034CEFEFD09614186522DCF {smCPUErr = 0xFFFFFEB2,smsPointerNil = 0xFFFFFEB1,smNilsBlockErr = 0xFFFFFEB0,smSlotOOBErr = 0xFFFFFEAF,smSelOOBErr = 0xFFFFFEAE,smNewPErr = 0xFFFFFEAD,smBlkMoveErr = 0xFFFFFEAC,smCkStatusErr = 0xFFFFFEAB,smGetDrvrNamErr = 0xFFFFFEAA,smDisDrvrNamErr = 0xFFFFFEA9,smNoMoresRsrcs = 0xFFFFFEA8,smsGetDrvrErr = 0xFFFFFEA7,smBadsPtrErr = 0xFFFFFEA6,smByteLanesErr = 0xFFFFFEA5,smOffsetErr = 0xFFFFFEA4,smNoGoodOpens = 0xFFFFFEA3,smSRTOvrFlErr = 0xFFFFFEA2,smRecNotFnd = 0xFFFFFEA1,};
enum $D093597E202C8828A1474E2AA4001B83 {kDCMCanUseFileDictionaryMask = 0x1,kDCMCanUseMemoryDictionaryMask = 0x2,kDCMCanStreamDictionaryMask = 0x4,kDCMCanHaveMultipleIndexMask = 0x8,kDCMCanModifyDictionaryMask = 0x10,kDCMCanCreateDictionaryMask = 0x20,kDCMCanAddDictionaryFieldMask = 0x40,kDCMCanUseTransactionMask = 0x80,};
enum $D099BBBF644965626627A4C08DED2C2A {smallDateBit = 0x1F,togChar12HourBit = 0x1E,togCharZCycleBit = 0x1D,togDelta12HourBit = 0x1C,genCdevRangeBit = 0x1B,validDateFields = 0xFFFFFFFF,maxDateField = 0xA,};
enum $D0BB73902856307AC287F05F0A49525F {kNoConstraint = 0x0,kVerticalConstraint = 0x1,kHorizontalConstraint = 0x2,};
enum $D0C07FC7AB2F6220C0F9DB6E03A88383 {kHFSCatalogNodeIDsReusedBit = 0xC,kHFSCatalogNodeIDsReusedMask = 0x1000,};
enum $D0CBFDEF499675431B87E20AD18DADFE {knoUser = 0x0,kadministratorUser = 0x1,};
enum $D0E71AFF48C555DFE6CA61D3E0580A2C {kWindowPlainDialogProc = 0x410,kWindowShadowDialogProc = 0x411,kWindowModalDialogProc = 0x412,kWindowMovableModalDialogProc = 0x413,kWindowAlertProc = 0x414,kWindowMovableAlertProc = 0x415,};
enum $D0F97DFE6874EFB6A111022B8B6745A6 {kControlUseThemeFontIDMask = 0x80,};
enum $D129F4DFEBA165F72EA98C618C3DD9EB {initDev = 0x0,hitDev = 0x1,closeDev = 0x2,nulDev = 0x3,updateDev = 0x4,activDev = 0x5,deactivDev = 0x6,keyEvtDev = 0x7,macDev = 0x8,undoDev = 0x9,cutDev = 0xA,copyDev = 0xB,pasteDev = 0xC,clearDev = 0xD,cursorDev = 0xE,};
enum $D156DE7AA4FFCAB5EDF3F7FE0CE7B7CB {gestaltTranslationAttr = 0x786C6174,gestaltTranslationMgrExists = 0x0,gestaltTranslationMgrHintOrder = 0x1,gestaltTranslationPPCAvail = 0x2,gestaltTranslationGetPathAPIAvail = 0x3,};
enum $D1694FAFDED606F5C1530A80708D1A68 {codecErr = 0xFFFFDD00,noCodecErr = 0xFFFFDCFF,codecUnimpErr = 0xFFFFDCFE,codecSizeErr = 0xFFFFDCFD,codecScreenBufErr = 0xFFFFDCFC,codecImageBufErr = 0xFFFFDCFB,codecSpoolErr = 0xFFFFDCFA,codecAbortErr = 0xFFFFDCF9,codecWouldOffscreenErr = 0xFFFFDCF8,codecBadDataErr = 0xFFFFDCF7,codecDataVersErr = 0xFFFFDCF6,codecExtensionNotFoundErr = 0xFFFFDCF5,scTypeNotFoundErr = 0xFFFFDCF5,codecConditionErr = 0xFFFFDCF4,codecOpenErr = 0xFFFFDCF3,codecCantWhenErr = 0xFFFFDCF2,codecCantQueueErr = 0xFFFFDCF1,codecNothingToBlitErr = 0xFFFFDCF0,codecNoMemoryPleaseWaitErr = 0xFFFFDCEF,codecDisabledErr = 0xFFFFDCEE,codecNeedToFlushChainErr = 0xFFFFDCED,lockPortBitsBadSurfaceErr = 0xFFFFDCEC,lockPortBitsWindowMovedErr = 0xFFFFDCEB,lockPortBitsWindowResizedErr = 0xFFFFDCEA,lockPortBitsWindowClippedErr = 0xFFFFDCE9,lockPortBitsBadPortErr = 0xFFFFDCE8,lockPortBitsSurfaceLostErr = 0xFFFFDCE7,codecParameterDialogConfirm = 0xFFFFDCE6,codecNeedAccessKeyErr = 0xFFFFDCE5,codecOffscreenFailedErr = 0xFFFFDCE4,codecDroppedFrameErr = 0xFFFFDCE3,directXObjectAlreadyExists = 0xFFFFDCE2,lockPortBitsWrongGDeviceErr = 0xFFFFDCE1,codecOffscreenFailedPleaseRetryErr = 0xFFFFDCE0,badCodecCharacterizationErr = 0xFFFFDCDF,noThumbnailFoundErr = 0xFFFFDCDE,};
enum $D1C043C4650AF0592A28ADF316D43F50 {gestaltQD3DViewer = 0x71337663,gestaltQD3DViewerPresent = 0x0,};
enum $D2262940032F2F8F2A8D8B3D30F60718 {kMenuDefProcPtr = 0x0,};
enum $D22742619E6631296935319C1155C38F {calGregorian = 0x0,calArabicCivil = 0x1,calArabicLunar = 0x2,calJapanese = 0x3,calJewish = 0x4,calCoptic = 0x5,calPersian = 0x6,};
enum $D2405CA58F11C270804A3FBA8A9B83F5 {kDMSModeReady = 0x0,kDMSModeNotReady = 0x1,kDMSModeFree = 0x2,};
enum $D28CEA8A385303390D1F3E8E0DD096FE {kControlGroupBoxTextTitleProc = 0xA0,kControlGroupBoxCheckBoxProc = 0xA1,kControlGroupBoxPopupButtonProc = 0xA2,kControlGroupBoxSecondaryTextTitleProc = 0xA4,kControlGroupBoxSecondaryCheckBoxProc = 0xA5,kControlGroupBoxSecondaryPopupButtonProc = 0xA6,};
enum $D2A1ED75D47C76C433F9E613B56E2F5D {kThemeWindowHasGrow = 0x1,kThemeWindowHasHorizontalZoom = 0x8,kThemeWindowHasVerticalZoom = 0x10,kThemeWindowHasFullZoom = 0x18,kThemeWindowHasCloseBox = 0x20,kThemeWindowHasCollapseBox = 0x40,kThemeWindowHasTitleText = 0x80,kThemeWindowIsCollapsed = 0x100,kThemeWindowHasDirty = 0x200,};
enum $D2ACCC07AF61088040A8D62007958697 {kTSMTEAutoScroll = 0x1,};
enum $D2C4D6124571D0244BE3D7978F72474F {gestaltQD3DVersion = 0x71337620,};
enum $D314D2498590FE4F43078F561CDEDDAA {T_GARBAGE = 0x2,};
enum $D320BD8CD41F75B4BC04A132F524DD4E {kSRFeedbackAndListeningModes = 0x6662776E,kSRRejectedWord = 0x72656A71,kSRCleanupOnClientExit = 0x636C7570,};
enum $D32E9F0C639282720C08815F1C495A7E {gestaltQD3D = 0x71643364,gestaltQD3DPresent = 0x0,};
enum $D33FE74D556288FA4AD083B75322C6E6 {cmpAliasNoFlags = 0x0,cmpAliasOnlyThisFile = 0x1,};
enum $D36424323E0EE10C44D6E80F29AE1D9E {pMinAppPartition = 0x6D707274,pAppPartition = 0x61707074,pSuggestedAppPartition = 0x73707274,pIsScriptable = 0x69736162,};
enum $D38B9FD5A40A4A198DD0B1587753352C {gestaltOpenTptRemoteAccess = 0x6F747261,gestaltOpenTptRemoteAccessPresent = 0x0,gestaltOpenTptRemoteAccessLoaded = 0x1,gestaltOpenTptRemoteAccessClientOnly = 0x2,gestaltOpenTptRemoteAccessPServer = 0x3,gestaltOpenTptRemoteAccessMPServer = 0x4,gestaltOpenTptPPPPresent = 0x5,gestaltOpenTptARAPPresent = 0x6,};
enum $D38D679BF52BCAE6627D32FEB4CF287D {kOTISDNNot56KAdaptation = 0x0,kOTISDN56KAdaptation = 0x1,};
enum $D38F9625C22D505DF9332ACBA3967637 {smNotInstalled = 0x0,smBadVerb = 0xFFFFFFFF,smBadScript = 0xFFFFFFFE,};
enum $D3B4ECB48BE05BA2AB340E2B30896DCC {kGenericDocumentIconResource = 0xFFFFF060,kGenericStationeryIconResource = 0xFFFFF06F,kGenericEditionFileIconResource = 0xFFFFF06B,kGenericApplicationIconResource = 0xFFFFF064,kGenericDeskAccessoryIconResource = 0xFFFFF069,kGenericFolderIconResource = 0xFFFFF061,kPrivateFolderIconResource = 0xFFFFF066,kFloppyIconResource = 0xFFFFF062,kTrashIconResource = 0xFFFFF067,kGenericRAMDiskIconResource = 0xFFFFF06C,kGenericCDROMIconResource = 0xFFFFF06D,};
enum $D3B585116FCFE62656CDA63EC8958D5F {kAVLIsTree = 0x0,kAVLIsLeftBranch = 0x1,kAVLIsRightBranch = 0x2,kAVLIsLeaf = 0x3,kAVLNullNode = 0x4,};
enum $D3BADAA375F549D12E9BB55F48025D04 {kDoNotRemoveWhenCurrentApplicationQuitsBit = 0x0,kDoNotRemoveWheCurrentApplicationQuitsBit = 0x0,};
enum $D3EF74AD8C95D96B6DEFC26D1A378D18 {kTXNQDFontNameAttributeSize = 0x100,kTXNQDFontFamilyIDAttributeSize = 0x2,kTXNQDFontSizeAttributeSize = 0x2,kTXNQDFontStyleAttributeSize = 0x1,kTXNQDFontColorAttributeSize = 0x6,kTXNTextEncodingAttributeSize = 0x4,kTXNFontSizeAttributeSize = 0x4,};
enum $D3F7C3D1F679EB9627E8FEF879800410 {errHMIllegalContentForMinimumState = 0xFFFFD51C,errHMIllegalContentForMaximumState = 0xFFFFD51B,};
enum $D3F9326D8E3B9149E2DE963C927C94B4 {k8BitAccess = 0x0,k16BitAccess = 0x1,k32BitAccess = 0x2,};
enum $D46779DF5EEDD0108B7FB173165B2E9A {kHIViewSendCommandToUserFocus = 0x1,};
enum $D47171718882B5F9DC2728A22C57CF62 {kControlEditTextInlineInputProc = 0x114,};
enum $D48D0142A15925E22F8E59B6251D2E88 {kHandleIsResourceBit = 0x5,kHandlePurgeableBit = 0x6,kHandleLockedBit = 0x7,};
enum $D497865AB20A3AD87EEE5277CBD67E69 {cannotFindAtomErr = 0xFFFFF7CB,notLeafAtomErr = 0xFFFFF7CA,atomsNotOfSameTypeErr = 0xFFFFF7C9,atomIndexInvalidErr = 0xFFFFF7C8,duplicateAtomTypeAndIDErr = 0xFFFFF7C7,invalidAtomErr = 0xFFFFF7C6,invalidAtomContainerErr = 0xFFFFF7C5,invalidAtomTypeErr = 0xFFFFF7C4,cannotBeLeafAtomErr = 0xFFFFF7C3,pathTooLongErr = 0xFFFFF7C2,emptyPathErr = 0xFFFFF7C1,noPathMappingErr = 0xFFFFF7C0,pathNotVerifiedErr = 0xFFFFF7BF,unknownFormatErr = 0xFFFFF7BE,wackBadFileErr = 0xFFFFF7BD,wackForkNotFoundErr = 0xFFFFF7BC,wackBadMetaDataErr = 0xFFFFF7BB,qfcbNotFoundErr = 0xFFFFF7BA,qfcbNotCreatedErr = 0xFFFFF7B9,AAPNotCreatedErr = 0xFFFFF7B8,AAPNotFoundErr = 0xFFFFF7B7,ASDBadHeaderErr = 0xFFFFF7B6,ASDBadForkErr = 0xFFFFF7B5,ASDEntryNotFoundErr = 0xFFFFF7B4,fileOffsetTooBigErr = 0xFFFFF7B3,notAllowedToSaveMovieErr = 0xFFFFF7B2,qtNetworkAlreadyAllocatedErr = 0xFFFFF7B1,urlDataHHTTPProtocolErr = 0xFFFFF7AF,urlDataHHTTPNoNetDriverErr = 0xFFFFF7AE,urlDataHHTTPURLErr = 0xFFFFF7AD,urlDataHHTTPRedirectErr = 0xFFFFF7AC,urlDataHFTPProtocolErr = 0xFFFFF7AB,urlDataHFTPShutdownErr = 0xFFFFF7AA,urlDataHFTPBadUserErr = 0xFFFFF7A9,urlDataHFTPBadPasswordErr = 0xFFFFF7A8,urlDataHFTPServerErr = 0xFFFFF7A7,urlDataHFTPDataConnectionErr = 0xFFFFF7A6,urlDataHFTPNoDirectoryErr = 0xFFFFF7A5,urlDataHFTPQuotaErr = 0xFFFFF7A4,urlDataHFTPPermissionsErr = 0xFFFFF7A3,urlDataHFTPFilenameErr = 0xFFFFF7A2,urlDataHFTPNoNetDriverErr = 0xFFFFF7A1,urlDataHFTPBadNameListErr = 0xFFFFF7A0,urlDataHFTPNeedPasswordErr = 0xFFFFF79F,urlDataHFTPNoPasswordErr = 0xFFFFF79E,urlDataHFTPServerDisconnectedErr = 0xFFFFF79D,urlDataHFTPURLErr = 0xFFFFF79C,notEnoughDataErr = 0xFFFFF79B,qtActionNotHandledErr = 0xFFFFF793,qtXMLParseErr = 0xFFFFF792,qtXMLApplicationErr = 0xFFFFF791,};
enum $D4C6990613B7A67F00619221BBE7346F {smLeftCaret = 0x0,smRightCaret = 0xFFFFFFFF,smHilite = 0x1,};
enum $D525064D2195CBAE0DC0459A440BA9D5 {errInvalidWindowPtr = 0xFFFFEA20,errInvalidWindowRef = 0xFFFFEA20,errUnsupportedWindowAttributesForClass = 0xFFFFEA1F,errWindowDoesNotHaveProxy = 0xFFFFEA1E,errInvalidWindowProperty = 0xFFFFEA1D,errWindowPropertyNotFound = 0xFFFFEA1C,errUnrecognizedWindowClass = 0xFFFFEA1B,errCorruptWindowDescription = 0xFFFFEA1A,errUserWantsToDragWindow = 0xFFFFEA19,errWindowsAlreadyInitialized = 0xFFFFEA18,errFloatingWindowsNotInitialized = 0xFFFFEA17,errWindowNotFound = 0xFFFFEA16,errWindowDoesNotFitOnscreen = 0xFFFFEA15,windowAttributeImmutableErr = 0xFFFFEA14,windowAttributesConflictErr = 0xFFFFEA13,windowManagerInternalErr = 0xFFFFEA12,windowWrongStateErr = 0xFFFFEA11,windowGroupInvalidErr = 0xFFFFEA10,windowAppModalStateAlreadyExistsErr = 0xFFFFEA0F,windowNoAppModalStateErr = 0xFFFFEA0E,errWindowDoesntSupportFocus = 0xFFFF8889,errWindowRegionCodeInvalid = 0xFFFF887F,};
enum $D5331B598A0545B69A6466FE4C0930A5 {kUIModeNormal = 0x0,kUIModeContentSuppressed = 0x1,kUIModeContentHidden = 0x2,kUIModeAllHidden = 0x3,};
enum $D53F4E0326D47106C0DD078926504FC1 {gestaltCarbonVersion = 0x63626F6E,};
enum $D558B779F28B4D6D9377E9E7B13E6DFD {smUnicodeScript = 0x7E,};
enum $D561C47CD9EF715DDD0BE45025D5F82A {gestaltContextualMenuAttr = 0x636D6E75,gestaltContextualMenuUnusedBit = 0x0,gestaltContextualMenuTrapAvailable = 0x1,gestaltContextualMenuHasAttributeAndModifierKeys = 0x2,gestaltContextualMenuHasUnicodeSupport = 0x3,};
enum $D58B658B3F17E3694A96E3003D90C049 {kControlCheckBoxUncheckedValue = 0x0,kControlCheckBoxCheckedValue = 0x1,kControlCheckBoxMixedValue = 0x2,};
enum $D599C79F6803F7A1B1417CB239EE94E8 {kOSAModeCompileIntoContext = 0x2,};
enum $D59D0075B60978DBF28067C2B33B5767 {kInitOTForApplicationMask = 0x1,kInitOTForExtensionMask = 0x2,};
enum $D5ACE8290025A0071DF5E74053B03F87 {kControlKindPopupArrow = 0x70617272,};
enum $D61A0E8D2A92D56697A38D00076C3049 {kReadExtensionTermsMask = 0x8000,};
struct $D6728100C84E3BC066EE122B7BC78D3A {CFIndex version;void *info;const void *(__fastcall *retain)(const void *info);void (__fastcall *release)(const void *info);CFStringRef (__fastcall *copyDescription)(const void *info);};
enum $D683092856536C5605C0B92641D0DE73 {kDeclROMtables = 0x6465636C,kDetailedTimingFormat = 0x61726261,};
enum $D6AB614F3AF5C18C600901167F1AD27C {kThemeArrow3pt = 0x0,kThemeArrow5pt = 0x1,kThemeArrow7pt = 0x2,kThemeArrow9pt = 0x3,};
enum $D6D4BA3902CD23D54BDAA7DB3C0C3062 {kECHO_TSDU = 0x249,};
enum $D6D88E7A02EE454A9B3A501D522859DA {kQDGrafVerbFrame = 0x0,kQDGrafVerbPaint = 0x1,kQDGrafVerbErase = 0x2,kQDGrafVerbInvert = 0x3,kQDGrafVerbFill = 0x4,};
enum $D766FF7AE3C582194CDC21050F5E362D {kTXNIgnoreCaseBit = 0x0,kTXNEntireWordBit = 0x1,kTXNUseEncodingWordRulesBit = 0x1F,};
enum $D771E2DC7B96948810CBFB0A85015BE4 : unsigned __int32 {kOTNetbufDataIsOTBufferStar = 0xFFFFFFFD,};
enum $D774227721971CB1F0BA79DAD7B23CAB {kPMDuplexBindingLeftRight = 0x1,kPMDuplexBindingTopDown = 0x2,};
enum $D77738F2B73D3DC04038A65DEB2377CC {kUCKeyActionDown = 0x0,kUCKeyActionUp = 0x1,kUCKeyActionAutoKey = 0x2,kUCKeyActionDisplay = 0x3,};
enum $D78175D5FA93BA5A5A41F540208FB306 {kSOAP1999Schema = 0x73733939,kSOAP2001Schema = 0x73733031,};
enum $D78788DC93622900A24DC67FC75E3116 {kCalibratorNamePrefix = 0x63616C69,};
enum $D7EBE5AA91B0115949F2AF743A0A78F8 {gestaltAUXVersion = 0x612F7578,};
enum $D804EF8D454909AD79436C88D7B25A2F {kEventWindowCursorChange = 0x28,};
enum $D8168BCDF265C9D7D866CEA49BB87D6F {kDataBrowserListViewLatestHeaderDesc = 0x0,};
enum $D83951028F190CA9FFA322BBE5CBF6BE {kControlPlacardProc = 0xE0,};
enum $D859578BB1594FD3B2AE404EFEB15DE3 {kControlTabContentRectTag = 0x72656374,kControlTabEnabledFlagTag = 0x656E6162,kControlTabFontStyleTag = 0x666F6E74,};
enum $D85BABC49EB0EF8F3F068D2D5D39C4F5 {abortErr = 0xFFFFFFE5,iIOAbortErr = 0xFFFFFFE5,notOpenErr = 0xFFFFFFE4,unitTblFullErr = 0xFFFFFFE3,dceExtErr = 0xFFFFFFE2,slotNumErr = 0xFFFFFE98,gcrOnMFMErr = 0xFFFFFE70,dirFulErr = 0xFFFFFFDF,dskFulErr = 0xFFFFFFDE,nsvErr = 0xFFFFFFDD,ioErr = 0xFFFFFFDC,bdNamErr = 0xFFFFFFDB,fnOpnErr = 0xFFFFFFDA,eofErr = 0xFFFFFFD9,posErr = 0xFFFFFFD8,mFulErr = 0xFFFFFFD7,tmfoErr = 0xFFFFFFD6,fnfErr = 0xFFFFFFD5,wPrErr = 0xFFFFFFD4,fLckdErr = 0xFFFFFFD3,};
enum $D86B4A99442F929B245A12B744B62FDA {cmMonitorDevice = 0x6D6E7472,cmScannerDevice = 0x73636E72,cmPrinterDevice = 0x70727472,};
enum $D8946AD33A41F7BE6C1D7463E63524E1 {typeSInt16 = 0x73686F72,typeSInt32 = 0x6C6F6E67,typeUInt32 = 0x6D61676E,typeSInt64 = 0x636F6D70,typeIEEE32BitFloatingPoint = 0x73696E67,typeIEEE64BitFloatingPoint = 0x646F7562,type128BitFloatingPoint = 0x6C64626C,typeDecimalStruct = 0x6465636D,};
enum $D89C96938957AB7478D137974DFD7A93 {kPSPageInjectAllPages = 0xFFFFFFFF,kPSInjectionMaxDictSize = 0x5,};
enum $D8B23B1819FAFCA3E6FBC8B6762B2B94 {kHyphenToMinusOnSelector = 0x0,kHyphenToMinusOffSelector = 0x1,kAsteriskToMultiplyOnSelector = 0x2,kAsteriskToMultiplyOffSelector = 0x3,kSlashToDivideOnSelector = 0x4,kSlashToDivideOffSelector = 0x5,kInequalityLigaturesOnSelector = 0x6,kInequalityLigaturesOffSelector = 0x7,kExponentsOnSelector = 0x8,kExponentsOffSelector = 0x9,};
enum $D8B39D5636DAC3B78F49C5DAC9CD0649 {kTXNScrollUnitsInPixels = 0x0,kTXNScrollUnitsInLines = 0x1,kTXNScrollUnitsInViewRects = 0x2,};
enum $D8B59257D46B843E4D79FD93318CAEFB {kMaxHostAddrs = 0xA,kMaxSysStringLen = 0x20,kMaxHostNameLen = 0xFF,};
enum $D939D7C67F3825A66EA4B76193F58EF4 {gestaltControlMgrAttr = 0x636E746C,gestaltControlMgrPresent = 0x1,gestaltControlMgrPresentBit = 0x0,gestaltControlMsgPresentMask = 0x1,};
enum $D953F58A6719EA7E444EEAFBAE044285 {kMenuNoModifiers = 0x0,kMenuShiftModifier = 0x1,kMenuOptionModifier = 0x2,kMenuControlModifier = 0x4,kMenuNoCommandModifier = 0x8,};
enum $D962FCC50FB9A2D2DD3C1587B0E3CC62 {kISTChipInterruptSource = 0x0,kISTOutputDMAInterruptSource = 0x1,kISTInputDMAInterruptSource = 0x2,kISTPropertyMemberCount = 0x3,};
enum $D96DFE59C46805AEB5E237BA4555A605 {kSRLanguageModelType = 0x6C6D6F62,kSRPathType = 0x70617468,kSRPhraseType = 0x70687261,kSRWordType = 0x776F7264,};
enum $D97DBD36E4E0A3A569753E53C7F063FA {kMPNoID = 0x0,};
enum $D9A7D5A353649F9F975455DA5D948859 {kICServicesTCPMask = 0x1,kICServicesUDPMask = 0x2,};
enum $D9D232B7625776F2E80DA3B859080520 {gestaltSpeechAttr = 0x74747363,gestaltSpeechMgrPresent = 0x0,gestaltSpeechHasPPCGlue = 0x1,};
enum $D9EC2DA240CDB088BA559E882EDCB0FE {kARARouterOnline = 0xFFFFFFFF,kATalkRouterOnline = 0x0,kLocalATalkRouterOnline = 0xFFFFFFFE,};
enum $D9F7BDAFA0352E288953D6A8506BE994 {cmNoProfileBase = 0x0,cmFileBasedProfile = 0x1,cmHandleBasedProfile = 0x2,cmPtrBasedProfile = 0x3,cmProcedureBasedProfile = 0x4,cmPathBasedProfile = 0x5,cmBufferBasedProfile = 0x6,};
enum $DA1EA7796FB9D778A4C98BCA59CDDC35 {kOSAModePreventGetSource = 0x1,};
enum $DA30B8415D5662220BAE183D9112A9F5 {gestaltLogicalRAMSize = 0x6C72616D,};
enum $DA3EEFA2DAFD7BC9709141F59077DB78 {gestaltPowerMgrAttr = 0x706F7772,gestaltPMgrExists = 0x0,gestaltPMgrCPUIdle = 0x1,gestaltPMgrSCC = 0x2,gestaltPMgrSound = 0x3,gestaltPMgrDispatchExists = 0x4,gestaltPMgrSupportsAVPowerStateAtSleepWake = 0x5,};
enum $DA59D2CD3DAE9524B7DBB217E5C9842F {kEventParamToolbar = 0x74626172,kEventParamToolbarItem = 0x74626974,kEventParamToolbarItemIdentifier = 0x74626969,kEventParamToolbarItemConfigData = 0x74626964,typeHIToolbarRef = 0x74626172,typeHIToolbarItemRef = 0x74626974,};
enum $DA8A54268EBDE1F1DFEEA7C59337BBFF {kUnresolvedCFragSymbolAddress = 0x0,};
enum $DAAD0F1087A6A9EE5F823A6D62416DB7 {gestaltSerialAttr = 0x73657220,gestaltHasGPIaToDCDa = 0x0,gestaltHasGPIaToRTxCa = 0x1,gestaltHasGPIbToDCDb = 0x2,gestaltHidePortA = 0x3,gestaltHidePortB = 0x4,gestaltPortADisabled = 0x5,gestaltPortBDisabled = 0x6,};
enum $DAE3A0A280223CFDAC56433B92870FC5 {kOSASelectCoerceFromDesc = 0x301,kOSASelectCoerceToDesc = 0x302,};
enum $DB0CF4C7BA47BD023315A1177BEA7492 {kThemeTabNorth = 0x0,kThemeTabSouth = 0x1,kThemeTabEast = 0x2,kThemeTabWest = 0x3,};
enum $DB2B3B8D34736BD2DFAC06A7CC353854 {kControlKindPlacard = 0x706C6163,};
enum $DB68FC52E7A0EE2448DC42C0E4CCE9EE {kICFileType = 0x49434170,kICCreator = 0x49434170,};
enum $DB76DB9A82AAC104AC2A50F15626D709 {kUseDefaultMinimumWakeTime = 0x0,kPowerSummaryVersion = 0x1,kDevicePowerInfoVersion = 0x1,};
enum $DB7CAFADFF05C3D5C938D70736B1920A {dsNoExtsMacsBug = 0xFFFFFFFF,dsNoExtsDisassembler = 0xFFFFFFFE,dsMacsBugInstalled = 0xFFFFFFF6,dsDisassemblerInstalled = 0xFFFFFFF5,dsExtensionsDisabled = 0xFFFFFFF3,dsGreeting = 0x28,dsSysErr = 0x7FFF,WDEFNFnd = 0x57,};
enum $DB9ED05A929C3E160D07F6ABD181A14D {kAEInternetSuite = 0x6775726C,kAEISWebStarSuite = 0x575757BD,};
enum $DBA047679F6933A588A9C46207FF8881 {CFNotificationSuspensionBehaviorDrop = 0x1,CFNotificationSuspensionBehaviorCoalesce = 0x2,CFNotificationSuspensionBehaviorHold = 0x3,CFNotificationSuspensionBehaviorDeliverImmediately = 0x4,};
enum $DBAAB33D7A133109C56ED856CBEE5281 {kControlEditUnicodeTextProc = 0x390,kControlEditUnicodeTextPasswordProc = 0x392,};
enum $DBB36D2F2B5AF5F44A3E332AC53C8396 {MPLibrary_MajorVersion = 0x2,MPLibrary_MinorVersion = 0x3,MPLibrary_Release = 0x1,MPLibrary_DevelopmentRevision = 0x1,};
enum $DBB42E5F83ACCD8890635A9CF5BCCFA2 {kAppleJapaneseDictionarySignature = 0x6A6C616E,};
enum $DBB64E65FEE201E21D21056A9FEF782F {kNSLURLDelimiter = 0x2C,};
enum $DC203EA5A821EEEC3174242FC0B9BB59 {kFBCvTwinExceptionErr = 0xFFFF88DC,kFBCnoIndexesFound = 0xFFFF88DB,kFBCallocFailed = 0xFFFF88DA,kFBCbadParam = 0xFFFF88D9,kFBCfileNotIndexed = 0xFFFF88D8,kFBCbadIndexFile = 0xFFFF88D7,kFBCcompactionFailed = 0xFFFF88D6,kFBCvalidationFailed = 0xFFFF88D5,kFBCindexingFailed = 0xFFFF88D4,kFBCcommitFailed = 0xFFFF88D3,kFBCdeletionFailed = 0xFFFF88D2,kFBCmoveFailed = 0xFFFF88D1,kFBCtokenizationFailed = 0xFFFF88D0,kFBCmergingFailed = 0xFFFF88CF,kFBCindexCreationFailed = 0xFFFF88CE,kFBCaccessorStoreFailed = 0xFFFF88CD,kFBCaddDocFailed = 0xFFFF88CC,kFBCflushFailed = 0xFFFF88CB,kFBCindexNotFound = 0xFFFF88CA,kFBCnoSearchSession = 0xFFFF88C9,kFBCindexingCanceled = 0xFFFF88C8,kFBCaccessCanceled = 0xFFFF88C7,kFBCindexFileDestroyed = 0xFFFF88C6,kFBCindexNotAvailable = 0xFFFF88C5,kFBCsearchFailed = 0xFFFF88C4,kFBCsomeFilesNotIndexed = 0xFFFF88C3,kFBCillegalSessionChange = 0xFFFF88C2,kFBCanalysisNotAvailable = 0xFFFF88C1,kFBCbadIndexFileVersion = 0xFFFF88C0,kFBCsummarizationCanceled = 0xFFFF88BF,kFBCindexDiskIOFailed = 0xFFFF88BE,kFBCbadSearchSession = 0xFFFF88BD,kFBCnoSuchHit = 0xFFFF88BC,};
enum $DC2C88FC384E44E5963C6FF1FE9B35A3 {typeAEText = 0x74545854,typeArc = 0x63617263,typeBest = 0x62657374,typeCell = 0x6363656C,typeClassInfo = 0x67636C69,typeColorTable = 0x636C7274,typeColumn = 0x63636F6C,typeDashStyle = 0x74646173,typeData = 0x74647461,typeDrawingArea = 0x63647277,typeElemInfo = 0x656C696E,typeEnumeration = 0x656E756D,typeEPS = 0x45505320,typeEventInfo = 0x6576696E,};
enum $DC30A4D242EEF8641FF89880B1C2C030 {kControlKindIcon = 0x69636F6E,};
enum $DC31969FA94C8C84691F2D5238C10307 {kUCCharPropTypeGenlCategory = 0x1,kUCCharPropTypeCombiningClass = 0x2,kUCCharPropTypeBidiCategory = 0x3,};
enum $DC395A9A531C6366FB43CFD85592BA96 {kCustomIconResource = 0xFFFFBFB9,};
enum $DC44859D6FB1393DCFE0EE3DF7C48461 {kCFCharacterSetControl = 0x1,kCFCharacterSetWhitespace = 0x2,kCFCharacterSetWhitespaceAndNewline = 0x3,kCFCharacterSetDecimalDigit = 0x4,kCFCharacterSetLetter = 0x5,kCFCharacterSetLowercaseLetter = 0x6,kCFCharacterSetUppercaseLetter = 0x7,kCFCharacterSetNonBase = 0x8,kCFCharacterSetDecomposable = 0x9,kCFCharacterSetAlphaNumeric = 0xA,kCFCharacterSetPunctuation = 0xB,kCFCharacterSetIllegal = 0xC,kCFCharacterSetCapitalizedLetter = 0xD,};
enum $DC4ED4ED21B8B91BFBD03085177AC1A4 {kTextEncodingISOLatin1 = 0x201,kTextEncodingISOLatin2 = 0x202,kTextEncodingISOLatin3 = 0x203,kTextEncodingISOLatin4 = 0x204,kTextEncodingISOLatinCyrillic = 0x205,kTextEncodingISOLatinArabic = 0x206,kTextEncodingISOLatinGreek = 0x207,kTextEncodingISOLatinHebrew = 0x208,kTextEncodingISOLatin5 = 0x209,kTextEncodingISOLatin6 = 0x20A,kTextEncodingISOLatin7 = 0x20D,kTextEncodingISOLatin8 = 0x20E,kTextEncodingISOLatin9 = 0x20F,};
enum $DC6DBA76B50924A6A0D6AFB8689D14A3 {kNavFileOrFolderVersion = 0x1,};
enum $DC8E164356299000BE99F8440912FDBE {cscGetMode = 0x2,cscGetEntries = 0x3,cscGetPageCnt = 0x4,cscGetPages = 0x4,cscGetPageBase = 0x5,cscGetBaseAddr = 0x5,cscGetGray = 0x6,cscGetInterrupt = 0x7,cscGetGamma = 0x8,cscGetDefaultMode = 0x9,cscGetCurMode = 0xA,cscGetSync = 0xB,cscGetConnection = 0xC,cscGetModeTiming = 0xD,cscGetModeBaseAddress = 0xE,cscGetScanProc = 0xF,cscGetPreferredConfiguration = 0x10,cscGetNextResolution = 0x11,cscGetVideoParameters = 0x12,cscGetGammaInfoList = 0x14,cscRetrieveGammaTable = 0x15,cscSupportsHardwareCursor = 0x16,cscGetHardwareCursorDrawState = 0x17,cscGetConvolution = 0x18,cscGetPowerState = 0x19,cscPrivateStatusCall = 0x1A,cscGetDDCBlock = 0x1B,cscGetMultiConnect = 0x1C,cscGetClutBehavior = 0x1D,cscGetTimingRanges = 0x1E,cscGetDetailedTiming = 0x1F,cscGetCommunicationInfo = 0x20,};
struct $DCAB87D1E815B688CA2F2CD7CE1C0D4A {uint32_t v;};
enum $DCAFB040F37F6DF2023604683B010173 {downloadStreamAction = 0x0,asciiDownloadStreamAction = 0x1,fontSizeQueryStreamAction = 0x2,encodingOnlyStreamAction = 0x3,prerequisiteQueryStreamAction = 0x4,prerequisiteItemStreamAction = 0x5,variationQueryStreamAction = 0x6,variationPSOperatorStreamAction = 0x7,};
enum $DCB906B251997110FE5CEAC595951954 {kioVAtrbDefaultVolumeBit = 0x5,kioVAtrbDefaultVolumeMask = 0x20,kioVAtrbFilesOpenBit = 0x6,kioVAtrbFilesOpenMask = 0x40,kioVAtrbHardwareLockedBit = 0x7,kioVAtrbHardwareLockedMask = 0x80,kioVAtrbSoftwareLockedBit = 0xF,kioVAtrbSoftwareLockedMask = 0x8000,};
enum $DCBDF5E61D65FCB68714A5CE2FEF8A8A {kIBCarbonRuntimeCantFindNibFile = 0xFFFFD530,kIBCarbonRuntimeObjectNotOfRequestedType = 0xFFFFD52F,kIBCarbonRuntimeCantFindObject = 0xFFFFD52E,};
enum $DCE09C5AC8576D753F0EFEA779280476 {kInteractiveServicesTag = 0x746D696E,kLocaleIDTag = 0x6C6F6365,kTextInputObjectTag = 0x74696F74,kLocaleObjectRefTag = 0x6C6F626A,kLocaleRefTag = 0x6C726566,kKeyboardInputMethodContextTag = 0x6B696E70,kKeyboardLocaleObjectRefTag = 0x6B696C6F,kHandwritingInputMethodContextTag = 0x68696E70,kHandwritingLocaleObjectRefTag = 0x68696C6F,kSpeechInputMethodContextTag = 0x73696E70,kSpeechLocaleObjectRefTag = 0x73696C6F,kPasswordModeTag = 0x7077646D,kRefconTag = 0x72656663,kUseFloatingWindowTag = 0x7573776D,kReadOnlyDocumentTag = 0x6973726F,kSupportsMultiInlineHolesTag = 0x6D696E6C,kProtocolVersionTag = 0x6E707274,kTSMContextCollectionTag = 0x74736D78,};
enum $DCE0C641D8A92AA284FFB93B28575CB0 {kCFSocketSuccess = 0x0,kCFSocketError = 0xFFFFFFFF,kCFSocketTimeout = 0xFFFFFFFE,};
enum $DD06FF921A71B59047FA528B9A71B464 {kControlKindWindowHeader = 0x77686564,};
enum $DD07E9CBF7DC990F99502C711D13040E {kFontUnicodeDefaultSemantics = 0x0,kFontUnicodeV1_1Semantics = 0x1,kFontISO10646_1993Semantics = 0x2,};
enum $DD0C2E88F927CAF8A544BAA681558B19 {kControlBehaviorCommandMenu = 0x2000,};
enum $DD1E55986C4B43D5A4A79B56B7B8A8F5 : unsigned __int32 {charCodeMask = 0xFF,keyCodeMask = 0xFF00,adbAddrMask = 0xFF0000,osEvtMessageMask = 0xFF000000,};
enum $DD9C78B339A6EB3A9D020FDE1DD7FFB8 {kXFer1PixelAtATime = 0x1,kXFerConvertPixelToRGB32 = 0x2,};
enum $DDA3263AAAFDC2735294AAEF0985DAE8 : unsigned __int32 {cexec68K = 0x1,truetypeStreamType = 0x1,type1StreamType = 0x2,type3StreamType = 0x4,type42StreamType = 0x8,type42GXStreamType = 0x10,portableStreamType = 0x20,flattenedStreamType = 0x40,cidType2StreamType = 0x80,cidType0StreamType = 0x100,type1CFFStreamType = 0x200,evenOddModifierStreamType = 0x8000,eexecBinaryModifierStreamType = 0x10000,unicodeMappingModifierStreamType = 0x20000,scalerSpecifcModifierMask = 0xF000,streamTypeModifierMask = 0xFFFFF000,};
enum $DDD6BB699887F3CA93AB9FA73DC33335 : unsigned __int32 {I_OTGetMiscellaneousEvents = 0x4F01,I_OTSetFramingType = 0x4F02,kOTGetFramingValue = 0xFFFFFFFF,I_OTSetRawMode = 0x4F03,kOTSetRecvMode = 0x1,kOTSendErrorPacket = 0x2,I_OTConnect = 0x4F04,I_OTDisconnect = 0x4F05,I_OTScript = 0x4F06,};
enum $DDF917F3B0CA77944968056AE5FF35BD {kCFNumberSInt8Type = 0x1,kCFNumberSInt16Type = 0x2,kCFNumberSInt32Type = 0x3,kCFNumberSInt64Type = 0x4,kCFNumberFloat32Type = 0x5,kCFNumberFloat64Type = 0x6,kCFNumberCharType = 0x7,kCFNumberShortType = 0x8,kCFNumberIntType = 0x9,kCFNumberLongType = 0xA,kCFNumberLongLongType = 0xB,kCFNumberFloatType = 0xC,kCFNumberDoubleType = 0xD,kCFNumberCFIndexType = 0xE,kCFNumberMaxType = 0xE,};
enum $DE11CF22842CA016DD958AB0BE6E822C {kEventAccessibleGetChildAtPoint = 0x1,kEventAccessibleGetFocusedChild = 0x2,kEventAccessibleGetAllAttributeNames = 0x15,kEventAccessibleGetNamedAttribute = 0x16,kEventAccessibleSetNamedAttribute = 0x17,kEventAccessibleIsNamedAttributeSettable = 0x18,kEventAccessibleGetAllActionNames = 0x29,kEventAccessiblePerformNamedAction = 0x2A,kEventAccessibleGetNamedActionDescription = 0x2C,};
enum $DE379690257587ECAC7F4D96D26BE482 {gestaltSMPSPSendLetterVersion = 0x7370736C,};
enum $DE490049644E7C6A8868423C628E99D7 {IPCP_OPT_GETREMOTEPROTOADDR = 0x7000,IPCP_OPT_GETLOCALPROTOADDR = 0x7001,IPCP_OPT_TCPHDRCOMPRESSION = 0x7002,LCP_OPT_PPPCOMPRESSION = 0x7003,LCP_OPT_MRU = 0x7004,LCP_OPT_RCACCMAP = 0x7005,LCP_OPT_TXACCMAP = 0x7006,SEC_OPT_OUTAUTHENTICATION = 0x7007,SEC_OPT_ID = 0x7008,SEC_OPT_PASSWORD = 0x7009,CC_OPT_REMINDERTIMER = 0x7010,CC_OPT_IPIDLETIMER = 0x7011,CC_OPT_DTEADDRESSTYPE = 0x7012,CC_OPT_DTEADDRESS = 0x7013,CC_OPT_CALLINFO = 0x7014,CC_OPT_GETMISCINFO = 0x7015,PPP_OPT_GETCURRENTSTATE = 0x7016,LCP_OPT_ECHO = 0x7017,CC_OPT_SERIALPORTNAME = 0x7200,};
enum $DE62915B67291E3256B97E4C153AA27B {kFNNoImplicitAllSubscription = 0x1,};
enum $DE71FC83DFA4AAA5CF23EF98F4B02EC1 : unsigned __int32 {INFTIM = 0xFFFFFFFF,};
enum $DE793C5A02651A8CABE2A50CB78A076F {cmPrtrDefaultScreens = 0x0,cmLinesPer = 0x1,};
enum $DEDA8AD17A1E5B434654D3C32189B1AC {gestaltMenuMgrAttr = 0x6D656E75,gestaltMenuMgrPresent = 0x1,gestaltMenuMgrPresentBit = 0x0,gestaltMenuMgrAquaLayoutBit = 0x1,gestaltMenuMgrMultipleItemsWithCommandIDBit = 0x2,gestaltMenuMgrRetainsIconRefBit = 0x3,gestaltMenuMgrSendsMenuBoundsToDefProcBit = 0x4,gestaltMenuMgrMoreThanFiveMenusDeepBit = 0x5,gestaltMenuMgrPresentMask = 0x1,gestaltMenuMgrAquaLayoutMask = 0x2,gestaltMenuMgrMultipleItemsWithCommandIDMask = 0x4,gestaltMenuMgrRetainsIconRefMask = 0x8,gestaltMenuMgrSendsMenuBoundsToDefProcMask = 0x10,gestaltMenuMgrMoreThanFiveMenusDeepMask = 0x20,};
enum $DF17D46BB949564AF4B8FE7FFE6FBEDB {kThemeDocumentWindow = 0x0,kThemeDialogWindow = 0x1,kThemeMovableDialogWindow = 0x2,kThemeAlertWindow = 0x3,kThemeMovableAlertWindow = 0x4,kThemePlainDialogWindow = 0x5,kThemeShadowDialogWindow = 0x6,kThemePopupWindow = 0x7,kThemeUtilityWindow = 0x8,kThemeUtilitySideWindow = 0x9,kThemeSheetWindow = 0xA,kThemeDrawerWindow = 0xB,};
enum $DF3840BAD951D87107829E074436D6FA {gestaltParityAttr = 0x70727479,gestaltHasParityCapability = 0x0,gestaltParityEnabled = 0x1,};
enum $DF454213E631F55E7BA85EB027413EDC {gestaltDBAccessMgrAttr = 0x64626163,gestaltDBAccessMgrPresent = 0x0,};
enum $DF48766BD90EE4BF10CF3C9100DADC5D {kSerialABModuleID = 0x1C20,};
enum $DF7FDD476B01DEB8DE8190F52012CAEC {kExtendedFlagsAreInvalid = 0x8000,kExtendedFlagHasCustomBadge = 0x100,kExtendedFlagHasRoutingInfo = 0x4,};
enum $DF8FA5B3A997B39986F1F23A9DBFDE94 {kTraditionalCharactersSelector = 0x0,kSimplifiedCharactersSelector = 0x1,kJIS1978CharactersSelector = 0x2,kJIS1983CharactersSelector = 0x3,kJIS1990CharactersSelector = 0x4,kTraditionalAltOneSelector = 0x5,kTraditionalAltTwoSelector = 0x6,kTraditionalAltThreeSelector = 0x7,kTraditionalAltFourSelector = 0x8,kTraditionalAltFiveSelector = 0x9,kExpertCharactersSelector = 0xA,};
enum $DF9842B890F18E9AD62ACC37119B3D4D {cfragFirstErrCode = 0xFFFFF510,cfragContextIDErr = 0xFFFFF510,cfragConnectionIDErr = 0xFFFFF50F,cfragNoSymbolErr = 0xFFFFF50E,cfragNoSectionErr = 0xFFFFF50D,cfragNoLibraryErr = 0xFFFFF50C,cfragDupRegistrationErr = 0xFFFFF50B,cfragFragmentFormatErr = 0xFFFFF50A,cfragUnresolvedErr = 0xFFFFF509,cfragNoPositionErr = 0xFFFFF508,cfragNoPrivateMemErr = 0xFFFFF507,cfragNoClientMemErr = 0xFFFFF506,cfragNoIDsErr = 0xFFFFF505,cfragInitOrderErr = 0xFFFFF504,cfragImportTooOldErr = 0xFFFFF503,cfragImportTooNewErr = 0xFFFFF502,cfragInitLoopErr = 0xFFFFF501,cfragInitAtBootErr = 0xFFFFF500,cfragLibConnErr = 0xFFFFF4FF,cfragCFMStartupErr = 0xFFFFF4FE,cfragCFMInternalErr = 0xFFFFF4FD,cfragFragmentCorruptErr = 0xFFFFF4FC,cfragInitFunctionErr = 0xFFFFF4FB,cfragNoApplicationErr = 0xFFFFF4FA,cfragArchitectureErr = 0xFFFFF4F9,cfragFragmentUsageErr = 0xFFFFF4F8,cfragFileSizeErr = 0xFFFFF4F7,cfragNotClosureErr = 0xFFFFF4F6,cfragNoRegistrationErr = 0xFFFFF4F5,cfragContainerIDErr = 0xFFFFF4F4,cfragClosureIDErr = 0xFFFFF4F3,cfragAbortClosureErr = 0xFFFFF4F2,cfragOutputLengthErr = 0xFFFFF4F1,cfragLastErrCode = 0xFFFFF4AD,};
enum $DFC8A0DF71728E1962CA9A861D3CDFE7 {pFormula = 0x70666F72,pGraphicObjects = 0x676F6273,pHasCloseBox = 0x68636C62,pHasTitleBar = 0x70746974,pID = 0x49442020,pIndex = 0x70696478,pInsertionLoc = 0x70696E73,pIsFloating = 0x6973666C,pIsFrontProcess = 0x70697366,pIsModal = 0x706D6F64,pIsModified = 0x696D6F64,pIsResizable = 0x7072737A,pIsStationeryPad = 0x70737064,pIsZoomable = 0x69737A6D,pIsZoomed = 0x707A756D,pItemNumber = 0x69746D6E,pJustification = 0x706A7374,pLineArrow = 0x6172726F,pMenuID = 0x6D6E6964,pName = 0x706E616D,};
enum $DFCAF5062B48968D284D5D5FB2AA5CF6 {MIOC_STREAMIO = 0x41,MIOC_TMOD = 0x61,MIOC_STRLOG = 0x62,MIOC_ND = 0x63,MIOC_ECHO = 0x64,MIOC_TLI = 0x65,MIOC_RESERVEDf = 0x66,MIOC_SAD = 0x67,MIOC_ARP = 0x68,MIOC_HAVOC = 0x48,MIOC_RESERVEDi = 0x69,MIOC_SIOC = 0x6A,MIOC_TCP = 0x6B,MIOC_DLPI = 0x6C,MIOC_SOCKETS = 0x6D,MIOC_IPX = 0x6F,MIOC_OT = 0x4F,MIOC_ATALK = 0x54,MIOC_SRL = 0x55,MIOC_RESERVEDp = 0x70,MIOC_RESERVEDr = 0x72,MIOC_RESERVEDs = 0x73,MIOC_CFIG = 0x7A,};
enum $DFDE7CB8727F27365C7BEDFDD0D6492F {chunky = 0x0,chunkyPlanar = 0x1,planar = 0x2,};
enum $DFEB5C7963D8582EC886BFBF0A9FB9A4 {kUCTextBreakCharMask = 0x1,kUCTextBreakClusterMask = 0x4,kUCTextBreakWordMask = 0x10,kUCTextBreakLineMask = 0x40,};
enum $E008CB1471F2CE238ECDD36D0ADBCA4C {hasInternalModem = 0x0,intModemRingDetect = 0x1,intModemOffHook = 0x2,intModemRingWakeEnb = 0x3,extModemSelected = 0x4,modemSetBit = 0xF,};
enum $E025492169204B653155AE115B56D39A {kEventParamControlPart = 0x63707274,kEventParamInitCollection = 0x69636F6C,kEventParamControlMessage = 0x636D7367,kEventParamControlParam = 0x6370726D,kEventParamControlResult = 0x6372736C,kEventParamControlRegion = 0x6372676E,kEventParamControlAction = 0x63617570,kEventParamControlIndicatorDragConstraint = 0x63696463,kEventParamControlIndicatorRegion = 0x6369726E,kEventParamControlIsGhosting = 0x63677374,kEventParamControlIndicatorOffset = 0x63696F66,kEventParamControlClickActivationResult = 0x63636172,kEventParamControlSubControl = 0x63737562,kEventParamControlOptimalBounds = 0x636F626E,kEventParamControlOptimalBaselineOffset = 0x636F626F,kEventParamControlDataTag = 0x63647467,kEventParamControlDataBuffer = 0x63646266,kEventParamControlDataBufferSize = 0x63646273,kEventParamControlDrawDepth = 0x63646470,kEventParamControlDrawInColor = 0x63646963,kEventParamControlFeatures = 0x63667472,kEventParamControlPartBounds = 0x63706264,kEventParamControlOriginalOwningWindow = 0x636F6F77,kEventParamControlCurrentOwningWindow = 0x63636F77,kEventParamControlFocusEverything = 0x63666576,kEventParamNextControl = 0x636E7863,kEventParamStartControl = 0x63737463,kEventParamControlSubview = 0x63737677,kEventParamControlPreviousPart = 0x636F7063,kEventParamControlCurrentPart = 0x636E7063,kEventParamControlInvalRgn = 0x63697672,kEventParamControlValue = 0x6376616C,typeControlActionUPP = 0x63617570,typeIndicatorDragConstraint = 0x63696463,typeControlPartCode = 0x63707274,};
enum $E04E99840462EB1CB4BA40C52941E43C {kUCCollateTypeMask = 0xFF000000,};
enum $E0795265D3905131547FB303070DA88F {kPEFProcessShare = 0x1,kPEFGlobalShare = 0x4,kPEFProtectedShare = 0x5,};
enum $E07ACE6A19E0DA6619F0F054184227EB {kSystemSoundNoError = 0x0,kSystemSoundUnspecifiedError = 0xFFFFFA24,};
enum $E07EAC005D8330B12DC1B5AF07AA6AD3 {kPPPNoOutAuthentication = 0x0,kPPPCHAPOrPAPOutAuthentication = 0x1,};
enum $E07F0B9492EB63C770F677CBEE4A3230 {gestaltATSUFeatures = 0x75697366,gestaltATSUTrackingFeature = 0x1,gestaltATSUMemoryFeature = 0x1,gestaltATSUFallbacksFeature = 0x1,gestaltATSUGlyphBoundsFeature = 0x1,gestaltATSULineControlFeature = 0x1,gestaltATSULayoutCreateAndCopyFeature = 0x1,gestaltATSULayoutCacheClearFeature = 0x1,gestaltATSUTextLocatorUsageFeature = 0x2,gestaltATSULowLevelOrigFeatures = 0x4,gestaltATSUFallbacksObjFeatures = 0x8,gestaltATSUIgnoreLeadingFeature = 0x8,gestaltATSUByCharacterClusterFeature = 0x10,gestaltATSUAscentDescentControlsFeature = 0x10,gestaltATSUHighlightInactiveTextFeature = 0x10,gestaltATSUPositionToCursorFeature = 0x10,gestaltATSUBatchBreakLinesFeature = 0x10,gestaltATSUTabSupportFeature = 0x10,gestaltATSUDirectAccess = 0x10,};
enum $E084DEBDB3F824C43007240F8D9BFEAB {kCFURLPOSIXPathStyle = 0x0,kCFURLHFSPathStyle = 0x1,kCFURLWindowsPathStyle = 0x2,};
enum $E086ECF2B6D3880038E4DC2A47A2B7FF : unsigned __int32 {kGammaTableIDFindFirst = 0xFFFFFFFE,kGammaTableIDNoMoreTables = 0xFFFFFFFD,kGammaTableIDSpecific = 0x0,};
enum $E0988D02CFB57E3F6C66996D8BF080D7 {TCP_NODELAY = 0x1,TCP_MAXSEG = 0x2,TCP_NOTIFY_THRESHOLD = 0x10,TCP_ABORT_THRESHOLD = 0x11,TCP_CONN_NOTIFY_THRESHOLD = 0x12,TCP_CONN_ABORT_THRESHOLD = 0x13,TCP_OOBINLINE = 0x14,TCP_URGENT_PTR_TYPE = 0x15,TCP_KEEPALIVE = 0x8,};
enum $E0A9F79CCAA62BC2F853851A20536E47 {kAEAND = 0x414E4420,kAEOR = 0x4F522020,kAENOT = 0x4E4F5420,kAEFirst = 0x66697273,kAELast = 0x6C617374,kAEMiddle = 0x6D696464,kAEAny = 0x616E7920,kAEAll = 0x616C6C20,kAENext = 0x6E657874,kAEPrevious = 0x70726576,keyAECompOperator = 0x72656C6F,keyAELogicalTerms = 0x7465726D,keyAELogicalOperator = 0x6C6F6763,keyAEObject1 = 0x6F626A31,keyAEObject2 = 0x6F626A32,keyAEDesiredClass = 0x77616E74,keyAEContainer = 0x66726F6D,keyAEKeyForm = 0x666F726D,keyAEKeyData = 0x73656C64,};
enum $E0B249A01E8422CE9D0FC370668E05FC {sixteenBitMode = 0x84,thirtyTwoBitMode = 0x85,firstVidMode = 0x80,secondVidMode = 0x81,thirdVidMode = 0x82,fourthVidMode = 0x83,fifthVidMode = 0x84,sixthVidMode = 0x85,spGammaDir = 0x40,spVidNamesDir = 0x41,};
enum $E0C7275C7EB7AFC308A8F1314C4ADA7E {wDraw = 0x0,wHit = 0x1,wCalcRgns = 0x2,wNew = 0x3,wDispose = 0x4,wGrow = 0x5,wDrawGIcon = 0x6,};
enum $E0D1826B5FFF107D16D7DACE7DE82934 {textMenuProc = 0x0,hMenuCmd = 0x1B,hierMenu = 0xFFFFFFFF,kInsertHierarchicalMenu = 0xFFFFFFFF,mctAllItems = 0xFFFFFF9E,mctLastIDIndic = 0xFFFFFF9D,};
struct $E0DB54FB1236B40874C7451A4BD28FF5 {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;};
enum $E0E732442DF152E3D499A96BA1B03EA9 {gestaltVIA2Addr = 0x76696132,};
enum $E1296932B263BB206AFB5C7E73591985 {kTXNLinkNotPressed = 0x0,kTXNLinkWasPressed = 0x1,kTXNLinkTracking = 0x3,};
enum $E159D078DC20CEBAFD00F9A979A0C0D5 {kMacRomanLatin1DefaultVariant = 0x0,kMacRomanLatin1StandardVariant = 0x2,kMacRomanLatin1TurkishVariant = 0x6,kMacRomanLatin1CroatianVariant = 0x8,kMacRomanLatin1IcelandicVariant = 0xB,kMacRomanLatin1RomanianVariant = 0xE,};
enum $E1799D4AC4A15830BF5702BDCDE8F83F {keyOSASourceStart = 0x73726373,};
enum $E18236C2AD651F98DC4CD3F8C7C1E0CB {soStatus = 0x73746174,soErrors = 0x6572726F,soInputMode = 0x696E7074,soCharacterMode = 0x63686172,soNumberMode = 0x6E6D6272,soRate = 0x72617465,soPitchBase = 0x70626173,soPitchMod = 0x706D6F64,soVolume = 0x766F6C6D,soSynthType = 0x76657273,soRecentSync = 0x73796E63,soPhonemeSymbols = 0x70687379,soCurrentVoice = 0x63766F78,soCommandDelimiter = 0x646C696D,soReset = 0x72736574,soCurrentA5 = 0x6D794135,soRefCon = 0x72656663,soTextDoneCallBack = 0x74646362,soSpeechDoneCallBack = 0x73646362,soSyncCallBack = 0x73796362,soErrorCallBack = 0x65726362,soPhonemeCallBack = 0x70686362,soWordCallBack = 0x77646362,soSynthExtension = 0x78746E64,soSoundOutput = 0x736E646F,};
enum $E1B29BD986AEEC879FFCDE3CDA8A3503 {gestaltOpenTptNetworkSetup = 0x6F746366,gestaltOpenTptNetworkSetupLegacyImport = 0x0,gestaltOpenTptNetworkSetupLegacyExport = 0x1,gestaltOpenTptNetworkSetupSupportsMultihoming = 0x2,};
enum $E1BB3F565B6E4423B7C30573E8BF11F8 {pWarnOnEmpty = 0x7761726E,};
enum $E1F01D9BFCAC5B47577EDFB51BFE472C {kFNSVersionDontCare = 0x0,kFNSCurSysInfoVersion = 0x1,};
enum $E1F60DEC850EF00D3218CCAE1CF8B45B {kUseCurrentISA = 0x0,kUseNativeISA = 0x4,};
enum $E1FD51DF0EA71DBDCE07BB6C7800A717 {cmDeviceInfoVersion1 = 0x10000,cmDeviceProfileInfoVersion1 = 0x10000,cmDeviceProfileInfoVersion2 = 0x20000,};
enum $E21D841B3521E7E175FBFC053452B0D1 {kControlKindBevelButton = 0x6265766C,};
enum $E253531303CE1933D82A4FF3A0E17EAD {kHIScrollViewOptionsVertScroll = 0x1,kHIScrollViewOptionsHorizScroll = 0x2,kHIScrollViewOptionsAllowGrow = 0x4,kHIScrollViewValidOptions = 0x7,};
enum $E25B7D2D36D2BB5B1EC37CF29297D638 {tokenUnknown = 0x0,tokenWhite = 0x1,tokenLeftLit = 0x2,tokenRightLit = 0x3,tokenAlpha = 0x4,tokenNumeric = 0x5,tokenNewLine = 0x6,tokenLeftComment = 0x7,tokenRightComment = 0x8,tokenLiteral = 0x9,tokenEscape = 0xA,tokenAltNum = 0xB,tokenRealNum = 0xC,tokenAltReal = 0xD,tokenReserve1 = 0xE,tokenReserve2 = 0xF,tokenLeftParen = 0x10,tokenRightParen = 0x11,tokenLeftBracket = 0x12,tokenRightBracket = 0x13,};
enum $E2655122710AC3F0D8848A935F04234F {kAEDatabaseSuite = 0x44415441,kAESort = 0x534F5254,};
enum $E27EEBAAA829E37A500AF84D546B2A71 {kRSCZero = 0x0,kRSCOne = 0x1,kRSCTwo = 0x2,kRSCThree = 0x3,kRSCFour = 0x4,kRSCFive = 0x5,kRSCSix = 0x6,kRSCSeven = 0x7,};
enum $E297A63258C8472CBBCF89A2453D4DEF {kATSUUnFlattenOptionNoOptionsMask = 0x0,};
enum $E2A6E2FAD86FF36FA588964594F6D072 {gestaltAdminFeaturesFlagsAttr = 0x66726564,gestaltFinderUsesSpecialOpenFoldersFile = 0x0,};
enum $E2AF9A586AE1FDF210CDF7E2BDD666EA {kLarge1BitMask = 0x49434E23,kLarge4BitData = 0x69636C34,kLarge8BitData = 0x69636C38,kLarge32BitData = 0x696C3332,kLarge8BitMask = 0x6C386D6B,kSmall1BitMask = 0x69637323,kSmall4BitData = 0x69637334,kSmall8BitData = 0x69637338,kSmall32BitData = 0x69733332,kSmall8BitMask = 0x73386D6B,kMini1BitMask = 0x69636D23,kMini4BitData = 0x69636D34,kMini8BitData = 0x69636D38,};
enum $E2D9E1F60BCF6091AA345214E7769BD1 {kAECase = 0x63617365,kAEDiacritic = 0x64696163,kAEWhiteSpace = 0x77686974,kAEHyphens = 0x68797068,kAEExpansion = 0x65787061,kAEPunctuation = 0x70756E63,kAEZenkakuHankaku = 0x7A6B686B,kAESmallKana = 0x736B6E61,kAEKataHiragana = 0x68696B61,kASConsiderReplies = 0x726D7465,enumConsiderations = 0x636F6E73,};
enum $E2DE6DFE4CD7A6ED4D0C1EB98293A878 {kCFUserNotificationStopAlertLevel = 0x0,kCFUserNotificationNoteAlertLevel = 0x1,kCFUserNotificationCautionAlertLevel = 0x2,kCFUserNotificationPlainAlertLevel = 0x3,};
enum $E301901955D36BDA8DDC587EF60E89B9 {gestaltQuickTimeStreamingVersion = 0x71747374,};
enum $E308B2701ABBDEDBE015D937CA3BD426 {kOTISDNUnallocatedNumber = 0x1,kOTISDNNoRouteToSpecifiedTransitNetwork = 0x2,kOTISDNNoRouteToDestination = 0x3,kOTISDNChannelUnacceptable = 0x6,kOTISDNNormal = 0x10,kOTISDNUserBusy = 0x11,kOTISDNNoUserResponding = 0x12,kOTISDNNoAnswerFromUser = 0x13,kOTISDNCallRejected = 0x15,kOTISDNNumberChanged = 0x16,kOTISDNNonSelectedUserClearing = 0x1A,kOTISDNDestinationOutOfOrder = 0x1B,kOTISDNInvalidNumberFormat = 0x1C,kOTISDNFacilityRejected = 0x1D,kOTISDNNormalUnspecified = 0x1F,kOTISDNNoCircuitChannelAvailable = 0x22,kOTISDNNetworkOutOfOrder = 0x29,kOTISDNSwitchingEquipmentCongestion = 0x2A,kOTISDNAccessInformationDiscarded = 0x2B,kOTISDNRequestedCircuitChannelNotAvailable = 0x2C,kOTISDNResourceUnavailableUnspecified = 0x2D,kOTISDNQualityOfServiceUnvailable = 0x31,kOTISDNRequestedFacilityNotSubscribed = 0x32,kOTISDNBearerCapabilityNotAuthorized = 0x39,kOTISDNBearerCapabilityNotPresentlyAvailable = 0x3A,kOTISDNCallRestricted = 0x3B,kOTISDNServiceOrOptionNotAvilableUnspecified = 0x3F,kOTISDNBearerCapabilityNotImplemented = 0x41,kOTISDNRequestedFacilityNotImplemented = 0x45,kOTISDNOnlyRestrictedDigitalBearer = 0x46,kOTISDNServiceOrOptionNotImplementedUnspecified = 0x4F,kOTISDNCallIdentityNotUsed = 0x53,kOTISDNCallIdentityInUse = 0x54,kOTISDNNoCallSuspended = 0x55,kOTISDNCallIdentityCleared = 0x56,kOTISDNIncompatibleDestination = 0x58,kOTISDNInvalidTransitNetworkSelection = 0x5B,kOTISDNInvalidMessageUnspecified = 0x5F,kOTISDNMandatoryInformationElementIsMissing = 0x60,kOTISDNMessageTypeNonExistentOrNotImplemented = 0x61,kOTISDNInterworkingUnspecified = 0x7F,};
enum $E30EBAE736DEE4CC0A60B7E570935BBF {kRoutineDescriptorVersion = 0x7,};
enum $E31D1D986D7A2398F5BE58D621867533 {kHalfWidthCJKRomanSelector = 0x0,kProportionalCJKRomanSelector = 0x1,kDefaultCJKRomanSelector = 0x2,kFullWidthCJKRomanSelector = 0x3,};
enum $E33B90F5223FE1AA0CFC0B12B0658722 {gestaltFSSupportsDirectIO = 0xB,};
enum $E33FA219C498FB6CFD9279BD281C22D7 {formAlias = 0x616C6973,formCreator = 0x66637274,};
enum $E355085ACC2DCA6671FF31ECC42E2874 {kCFStringEncodingMacRoman = 0x0,kCFStringEncodingWindowsLatin1 = 0x500,kCFStringEncodingISOLatin1 = 0x201,kCFStringEncodingNextStepLatin = 0xB01,kCFStringEncodingASCII = 0x600,kCFStringEncodingUnicode = 0x100,kCFStringEncodingUTF8 = 0x8000100,kCFStringEncodingNonLossyASCII = 0xBFF,};
enum $E3597A040103354F4772B471D57A3F5F {keyAEPropData = 0x70726474,keyAEProperties = 0x7170726F,keyAEProperty = 0x6B707270,keyAEPropFlags = 0x70726667,keyAEPropID = 0x70726F70,keyAEProtection = 0x7070726F,keyAERenderAs = 0x6B72656E,keyAERequestedType = 0x72747970,keyAEResult = 0x2D2D2D2D,keyAEResultInfo = 0x7273696E,keyAERotation = 0x70726F74,keyAERotPoint = 0x6B727470,keyAERowList = 0x6B726C73,keyAESaveOptions = 0x7361766F,keyAEScale = 0x7073636C,keyAEScriptTag = 0x70736374,keyAEShowWhere = 0x73686F77,keyAEStartAngle = 0x70616E67,keyAEStartPoint = 0x70737470,keyAEStyles = 0x6B737479,};
enum $E359A9E214E85E8DAD3ED77633D2B6D3 {kFindFolderRedirectionFlagUseDistinctUserFoldersBit = 0x0,kFindFolderRedirectionFlagUseGivenVRefAndDirIDAsUserFolderBit = 0x1,kFindFolderRedirectionFlagsUseGivenVRefNumAndDirIDAsRemoteUserFolderBit = 0x2,};
enum $E36450F7BF021E1F09D0C353C4ACA6E7 {kMenuItemAttrDisabled = 0x1,kMenuItemAttrIconDisabled = 0x2,kMenuItemAttrSubmenuParentChoosable = 0x4,kMenuItemAttrDynamic = 0x8,kMenuItemAttrNotPreviousAlternate = 0x10,kMenuItemAttrHidden = 0x20,kMenuItemAttrSeparator = 0x40,kMenuItemAttrSectionHeader = 0x80,kMenuItemAttrIgnoreMeta = 0x100,kMenuItemAttrAutoRepeat = 0x200,kMenuItemAttrUseVirtualKey = 0x400,kMenuItemAttrCustomDraw = 0x800,kMenuItemAttrIncludeInCmdKeyMatching = 0x1000,};
enum $E36B7564378AD8F94B15FFFEF716BFD6 {pNoArrangement = 0x6E617272,pSnapToGridArrangement = 0x67726461,pByNameArrangement = 0x6E616D61,pByModificationDateArrangement = 0x6D647461,pByCreationDateArrangement = 0x63647461,pBySizeArrangement = 0x73697A61,pByKindArrangement = 0x6B696E61,pByLabelArrangement = 0x6C616261,};
enum $E36C642D3B5C3BFD408958EADC98AAAD {kDMSupressNumbersMask = 0x1,kDMForceNumbersMask = 0x2,kDMSupressNameMask = 0x4,};
enum $E39054EC5C3FB4D37B68F792336028CC {keyReplyPortAttr = 0x72657070,};
enum $E3B4B94A348C69CF2FE26939FFEF37EC {kRegPathNameSeparator = 0x3A,kRegEntryNameTerminator = 0x0,kRegPathNameTerminator = 0x0,};
enum $E3B943559A694C916C4DA1D44A102EBC : unsigned __int32 {kTXNClearThisControl = 0xFFFFFFFF,kTXNClearTheseFontFeatures = 0x80000000,};
enum $E3C80D94FC48D4CBFF4A338892F667A1 {editionMgrInitErr = 0xFFFFFE3E,badSectionErr = 0xFFFFFE3D,notRegisteredSectionErr = 0xFFFFFE3C,badEditionFileErr = 0xFFFFFE3B,badSubPartErr = 0xFFFFFE3A,multiplePublisherWrn = 0xFFFFFE34,containerNotFoundWrn = 0xFFFFFE33,containerAlreadyOpenWrn = 0xFFFFFE32,notThePublisherWrn = 0xFFFFFE31,};
enum $E3CF0ABADF71D490733EAA8C70D426F0 {kCMNothingSelected = 0x0,kCMMenuItemSelected = 0x1,kCMShowHelpSelected = 0x3,};
enum $E3F86C994683B5201AB2EEB95C4474D7 {kPageInformationVersion = 0x1,};
enum $E41B128A1A45C863396F0E220EE3AE13 {kInvertHighlighting = 0x0,kRedrawHighlighting = 0x1,};
enum $E426A6CE6BC3667EBB9C7729EE5896F0 {kControlPopupButtonProc = 0x190,kControlPopupFixedWidthVariant = 0x1,kControlPopupVariableWidthVariant = 0x2,kControlPopupUseAddResMenuVariant = 0x4,kControlPopupUseWFontVariant = 0x8,};
enum $E428C8A3C080949AFF95D514E949DABD {kOTFramingEthernet = 0x1,kOTFramingEthernetIPX = 0x2,kOTFraming8023 = 0x4,kOTFraming8022 = 0x8,};
enum $E42CCC10DADED7DD7DACD46B86D22DDA {I_TRCLOG = 0x6201,I_ERRLOG = 0x6202,};
enum $E430DC1A89068137E931CBD3EE4979FB {twoToOne = 0x1,eightToThree = 0x2,threeToOne = 0x3,sixToOne = 0x4,sixToOnePacketSize = 0x8,threeToOnePacketSize = 0x10,};
enum $E432BDE770954FAA58BC493549E91D02 {kNoFidelity = 0x0,kMinimumFidelity = 0x1,kDefaultFidelity = 0x1F4,kDefaultManufacturerFidelity = 0x3E8,};
enum $E4350CEC37EC03F5D4C247EC41B75C77 {wNoHit = 0x0,wInContent = 0x1,wInDrag = 0x2,wInGrow = 0x3,wInGoAway = 0x4,wInZoomIn = 0x5,wInZoomOut = 0x6,wInCollapseBox = 0x9,wInProxyIcon = 0xA,wInToolbarButton = 0xB,wInStructure = 0xD,};
enum $E44CBD9116959E2F078D05F537864E17 {kMenuInitMsg = 0x8,kMenuDisposeMsg = 0x9,kMenuFindItemMsg = 0xA,kMenuHiliteItemMsg = 0xB,kMenuDrawItemsMsg = 0xC,};
enum $E4550460B23CB1297E6480F3468CBCDB {kSRUseToggleListen = 0x0,kSRUsePushToTalk = 0x1,};
struct $E46160E70B75FA525E4265DFACA77A71 {CFIndex version;void *info;void *(__fastcall *retain)(void *info);void (__fastcall *release)(void *info);CFStringRef (__fastcall *copyDescription)(void *info);};
enum $E46D54B808C1FDD6594362A2C42398A2 {kUCCollateStandardOptions = 0x6,};
enum $E47A24D70C087CD7CD8B3D81D230CB29 {sysPatListID = 0x0,iBeamCursor = 0x1,crossCursor = 0x2,plusCursor = 0x3,watchCursor = 0x4,};
enum $E4B24CBC17D207DC4B883CC5BFBB41A1 {kEventParamProcessID = 0x70736E20,kEventParamLaunchRefCon = 0x6C726566,kEventParamLaunchErr = 0x65727220,kEventParamSystemUIMode = 0x75696D64,};
enum $E4C8B7D15CC3724706DB6287AEE6C199 {kWindowDocumentProc = 0x400,kWindowGrowDocumentProc = 0x401,kWindowVertZoomDocumentProc = 0x402,kWindowVertZoomGrowDocumentProc = 0x403,kWindowHorizZoomDocumentProc = 0x404,kWindowHorizZoomGrowDocumentProc = 0x405,kWindowFullZoomDocumentProc = 0x406,kWindowFullZoomGrowDocumentProc = 0x407,};
enum $E4D926CFAC96D1A9C67CAB14770D8CA3 {buf2SmallErr = 0xFFFFF3E3,noMPPErr = 0xFFFFF3E2,ckSumErr = 0xFFFFF3E1,extractErr = 0xFFFFF3E0,readQErr = 0xFFFFF3DF,atpLenErr = 0xFFFFF3DE,atpBadRsp = 0xFFFFF3DD,recNotFnd = 0xFFFFF3DC,sktClosedErr = 0xFFFFF3DB,};
enum $E4F59445C46E084EB9967529BE2D8AB0 {kSRSpelling = 0x7370656C,kSRLMObjType = 0x6C6D7470,kSRRefCon = 0x72656663,kSROptional = 0x6F70746C,kSREnabled = 0x656E626C,kSRRepeatable = 0x72707462,kSRRejectable = 0x726A626C,kSRRejectionLevel = 0x726A6374,};
enum $E4FC6758E6C0C1E8B4A2A9C08874AC67 {kMPNanokernelNeedsMemoryErr = 0xFFFF8D92,};
enum $E50C162497E6E9DD0A24FB9F8DBA1527 {kControlPushButtonProc = 0x170,kControlCheckBoxProc = 0x171,kControlRadioButtonProc = 0x172,kControlPushButLeftIconProc = 0x176,kControlPushButRightIconProc = 0x177,};
enum $E5122D8254C0F0861398447E075667F5 {kICAAccessReadWrite = 0x0,kICAAccessReadOnly = 0x1,kICAAccessReadOnlyWithObjectDeletion = 0x2,};
enum $E5318C87C3726CDA9A3B74A623F2DB97 {cmSigCrdInfoType = 0x63726469,cmSigCurveType = 0x63757276,cmSigDataType = 0x64617461,cmSigDateTimeType = 0x6474696D,cmSigLut16Type = 0x6D667432,cmSigLut8Type = 0x6D667431,cmSigMeasurementType = 0x6D656173,cmSigMultiFunctA2BType = 0x6D414220,cmSigMultiFunctB2AType = 0x6D424120,cmSigNamedColorType = 0x6E636F6C,cmSigNamedColor2Type = 0x6E636C32,cmSigParametricCurveType = 0x70617261,cmSigProfileDescriptionType = 0x64657363,cmSigProfileSequenceDescType = 0x70736571,cmSigScreeningType = 0x7363726E,cmSigS15Fixed16Type = 0x73663332,cmSigSignatureType = 0x73696720,cmSigTextType = 0x74657874,cmSigU16Fixed16Type = 0x75663332,cmSigU1Fixed15Type = 0x75663136,cmSigUInt8Type = 0x75693038,cmSigUInt16Type = 0x75693136,cmSigUInt32Type = 0x75693332,cmSigUInt64Type = 0x75693634,cmSigUcrBgType = 0x62666420,cmSigUnicodeTextType = 0x75747874,cmSigViewingConditionsType = 0x76696577,cmSigXYZType = 0x58595A20,};
enum $E53CB0B25DC99FE7B2EC6FBDEEC81627 {kDataBrowserTableViewLastColumn = 0xFFFFFFFF,};
enum $E5618BF9F8CA15F558779C0A2CDB1DB0 {kOTISDNMaxUserDataSize = 0x20,};
enum $E59320F83BED18265AA2C43474055FCC {kTXNHorizontal = 0x0,kTXNVertical = 0x1,};
enum $E5C001552947FBA1AF908B70FCBEDBBA : unsigned __int32 {kATSUUseGrafPortPenLoc = 0xFFFFFFFF,kATSUClearAll = 0xFFFFFFFF,};
enum $E5E0C660B8E9FC08DD1573A475150938 {kCFMessagePortSuccess = 0x0,kCFMessagePortSendTimeout = 0xFFFFFFFF,kCFMessagePortReceiveTimeout = 0xFFFFFFFE,kCFMessagePortIsInvalid = 0xFFFFFFFD,kCFMessagePortTransportError = 0xFFFFFFFC,};
enum $E60C1F5BB2A929C92A273155987CB4C0 {kWindowDocumentDefProcResID = 0x40,kWindowDialogDefProcResID = 0x41,kWindowUtilityDefProcResID = 0x42,kWindowUtilitySideTitleDefProcResID = 0x43,kWindowSheetDefProcResID = 0x44,kWindowSimpleDefProcResID = 0x45,kWindowSheetAlertDefProcResID = 0x46,};
enum $E62F71FF430797828A24D3B827757AA8 {kWindowMenuIncludeRotate = 0x1,};
enum $E63F242E42EBCDD180B126D4E758F788 {kDragPromisedFlavorFindFile = 0x72576D31,kDragPromisedFlavor = 0x66737350,};
enum $E65957EC3410F47BC944BA7E97591D2C {kCMGetScriptLangSupport = 0x1,kCMInitiateTextService = 0x2,kCMTerminateTextService = 0x3,kCMActivateTextService = 0x4,kCMDeactivateTextService = 0x5,kCMTextServiceEvent = 0x6,kCMGetTextServiceMenu = 0x7,kCMTextServiceMenuSelect = 0x8,kCMFixTextService = 0x9,kCMSetTextServiceCursor = 0xA,kCMHidePaletteWindows = 0xB,kCMGetTextServiceProperty = 0xC,kCMSetTextServiceProperty = 0xD,};
enum $E65D4FF86878D74116A7F6866682FF94 {kThemeActiveScrollBarDelimiterBrush = 0x11,kThemeInactiveScrollBarDelimiterBrush = 0x12,kThemeFocusHighlightBrush = 0x13,kThemeActivePopupArrowBrush = 0x14,kThemePressedPopupArrowBrush = 0x15,kThemeInactivePopupArrowBrush = 0x16,kThemeAppleGuideCoachmarkBrush = 0x17,};
enum $E669A1C9BCBD48726950A62BFF5132F7 {kControlPushButtonIconOnLeft = 0x6,kControlPushButtonIconOnRight = 0x7,};
enum $E6781A715BE3DA7D528465B69B4BC154 {mpWorkFlagDoWork = 0x1,mpWorkFlagDoCompletion = 0x2,mpWorkFlagCopyWorkBlock = 0x4,mpWorkFlagDontBlock = 0x8,mpWorkFlagGetProcessorCount = 0x10,mpWorkFlagGetIsRunning = 0x40,};
enum $E6790A2C0D042950C6D4BAC0CF728D94 {kCFXMLEntityTypeParameter = 0x0,kCFXMLEntityTypeParsedInternal = 0x1,kCFXMLEntityTypeParsedExternal = 0x2,kCFXMLEntityTypeUnparsed = 0x3,kCFXMLEntityTypeCharacter = 0x4,};
enum $E68877BB40C38A07990A1C21F90F1D08 {kCooperativeThread = 0x1,kPreemptiveThread = 0x2,};
enum $E6A0AE22087A7B1DAD7918503FDAD658 {smTransAscii = 0x0,smTransNative = 0x1,smTransCase = 0xFE,smTransSystem = 0xFF,smTransAscii1 = 0x2,smTransAscii2 = 0x3,smTransKana1 = 0x4,smTransKana2 = 0x5,};
enum $E6A4B77F1099B8C884AE3B5B416AEB19 {kPEFRelocLgRepeatMaxChunkCount = 0x10,kPEFRelocLgRepeatMaxRepeatCount = 0x3FFFFF,};
enum $E6C2E266CE03690A99FCC667B237D815 {DDP_OPT_HOPCOUNT = 0x2100,};
enum $E6FEC5FAD34D7B0A3513238E44F10825 {kHelpTagEventHandlerTag = 0x68657674,};
enum $E7186088EFA0F32673F1C6AE7A511321 {kLSInitializeDefaults = 0x1,};
enum $E72284104A6319CA47B3C718B2E24F29 {kCFCompareLessThan = 0xFFFFFFFF,kCFCompareEqualTo = 0x0,kCFCompareGreaterThan = 0x1,};
enum $E731989FC0216527321E79EC1179D013 {cmOpenReadAccess = 0x1,cmOpenWriteAccess = 0x2,cmReadAccess = 0x3,cmWriteAccess = 0x4,cmCloseAccess = 0x5,cmCreateNewAccess = 0x6,cmAbortWriteAccess = 0x7,cmBeginAccess = 0x8,cmEndAccess = 0x9,};
enum $E755404C0B2AC6E4A3D2162601CAA890 {kTXNTextInputCountMask = 0x1,kTXNRunCountMask = 0x2,kTXNAllCountMask = 0x3,};
enum $E75D467D36693AF67E138B13035D0A00 : unsigned __int32 {kFSCatInfoNone = 0x0,kFSCatInfoTextEncoding = 0x1,kFSCatInfoNodeFlags = 0x2,kFSCatInfoVolume = 0x4,kFSCatInfoParentDirID = 0x8,kFSCatInfoNodeID = 0x10,kFSCatInfoCreateDate = 0x20,kFSCatInfoContentMod = 0x40,kFSCatInfoAttrMod = 0x80,kFSCatInfoAccessDate = 0x100,kFSCatInfoBackupDate = 0x200,kFSCatInfoPermissions = 0x400,kFSCatInfoFinderInfo = 0x800,kFSCatInfoFinderXInfo = 0x1000,kFSCatInfoValence = 0x2000,kFSCatInfoDataSizes = 0x4000,kFSCatInfoRsrcSizes = 0x8000,kFSCatInfoSharingFlags = 0x10000,kFSCatInfoUserPrivs = 0x20000,kFSCatInfoUserAccess = 0x80000,kFSCatInfoAllDates = 0x3E0,kFSCatInfoGettableInfo = 0x3FFFF,kFSCatInfoSettableInfo = 0x1FE3,kFSCatInfoReserved = 0xFFFC0000,};
enum $E765DE71749FEEE431F525E920DEB6C8 {kATSUStronglyHorizontal = 0x0,kATSUStronglyVertical = 0x1,};
enum $E79FD7EF8B53FAC73560EA2A837D7201 {kSyncInterlaceMask = 0x80,kSyncAnalogCompositeMask = 0x0,kSyncAnalogCompositeSerrateMask = 0x4,kSyncAnalogCompositeRGBSyncMask = 0x2,kSyncAnalogBipolarMask = 0x8,kSyncAnalogBipolarSerrateMask = 0x4,kSyncAnalogBipolarSRGBSyncMask = 0x2,kSyncDigitalCompositeMask = 0x10,kSyncDigitalCompositeSerrateMask = 0x4,kSyncDigitalCompositeMatchHSyncMask = 0x4,kSyncDigitalSeperateMask = 0x18,kSyncDigitalVSyncPositiveMask = 0x4,kSyncDigitalHSyncPositiveMask = 0x2,};
enum $E7D721A2FD17D62E0CA81AF1DBC667FE {kPEFRelocLgSetOrBySectionMaxIndex = 0x3FFFFF,};
enum $E84A8A51C2197E3A006A978AEE8F0E01 {kFMCurrentFilterFormat = 0x0,};
enum $E883A9D9C4225E1D340888B31EA6BB27 {enumAllDocuments = 0x616C6C64,enumFolders = 0x666F6C64,enumAliases = 0x616C6961,enumStationery = 0x73746174,};
enum $E88A8D77F141548876E5FBC915F4CE52 {kATSUDataStreamUnicodeStyledText = 0x7573746C,};
enum $E89883983311088C86F46EBB7D3E1430 {kKLKCHRData = 0x0,kKLuchrData = 0x1,kKLIdentifier = 0x2,kKLIcon = 0x3,kKLLocalizedName = 0x4,kKLName = 0x5,kKLGroupIdentifier = 0x6,kKLKind = 0x7,};
enum $E89CF9843758FE93AF4DC28B513675D8 {kRegMaximumPropertyNameLength = 0x1F,kRegPropertyNameTerminator = 0x0,};
enum $E8A1810B7AC84F453CCC5F003130BDCA {kUnconnectedSelector = 0x0,kPartiallyConnectedSelector = 0x1,kCursiveSelector = 0x2,};
enum $E8A3E233F1CEC86CB5E23EA86294A7B0 {kControlClockTypeHourMinute = 0x0,kControlClockTypeHourMinuteSecond = 0x1,kControlClockTypeMonthDayYear = 0x2,kControlClockTypeMonthYear = 0x3,};
enum $E8F7B131D0D84B925A82988E2D6E5B4B {kIncludeOnlineActiveDisplaysMask = 0x1,kIncludeOnlineDisabledDisplaysMask = 0x2,kIncludeOfflineDisplaysMask = 0x4,kIncludeOfflineDummyDisplaysMask = 0x8,kIncludeHardwareMirroredDisplaysMask = 0x10,};
enum $E9036DF266AB8623E7CDE0FC3D2803B5 {gestaltMMUType = 0x6D6D7520,gestaltNoMMU = 0x0,gestaltAMU = 0x1,gestalt68851 = 0x2,gestalt68030MMU = 0x3,gestalt68040MMU = 0x4,gestaltEMMU1 = 0x5,};
enum $E90B1C6BF0821FD1D5BB42A32AC9ECE6 {kHIComboBoxEditTextPart = 0x5,kHIComboBoxDisclosurePart = 0x1C,};
enum $E91449E4D01B0E0713C44C0F19972FE1 {firstSoundFormat = 0x1,secondSoundFormat = 0x2,};
enum $E926FE46958F2E144D83F4103DA6FA93 {kEventTargetDontPropagate = 0x1,kEventTargetSendToAllHandlers = 0x2,};
enum $E95C98F009867ADAC3C78E8CB5065BFB {kNoFractionsSelector = 0x0,kVerticalFractionsSelector = 0x1,kDiagonalFractionsSelector = 0x2,};
struct $E97267E034E71568AADDE042A76192B8 {mach_msg_size_t msgh_descriptor_count;};
enum $E989C32EE4BDA5E8BFBB4FDF02263947 {kDeviceDidNotWakeMachine = 0x0,kDeviceRequestsFullWake = 0x1,kDeviceRequestsWakeToDoze = 0x2,};
enum $E9E4D46C9D2C485D3028DE157585C4EF {pDCMAccessMethod = 0x616D7464,pDCMPermission = 0x7065726D,pDCMListing = 0x6C697374,pDCMMaintenance = 0x6D746E63,pDCMLocale = 0x6C6F636C,pDCMClass = 0x70636C73,pDCMCopyright = 0x696E666F,};
enum $E9EDE04DD3EA4AE78E337F6CC2F73890 {kPMScalingPinTopLeft = 0x1,kPMScalingPinTopRight = 0x2,kPMScalingPinBottomLeft = 0x3,kPMScalingPinBottomRight = 0x4,kPMScalingCenterOnPaper = 0x5,kPMScalingCenterOnImgArea = 0x6,};
enum $E9F27045D8577C5C125D0ABFB9729540 {kControlListBoxListHandleTag = 0x6C68616E,kControlListBoxKeyFilterTag = 0x666C7472,kControlListBoxFontStyleTag = 0x666F6E74,};
enum $E9F4E47DFC2608FC7A45C154EC143FBD {gestaltQuickTimeStreamingFeatures = 0x71747366,};
enum $EA33CD4CB37232534905F76FFB5C3F1E {noCalls = 0x1,noRequest = 0x2,slpQType = 0x10,sleepQType = 0x10,};
enum $EA3B21ADAEA8C1CC2D7C51CF0956AEAC {scInc = 0x1,scNoInc = 0x2,scAdd = 0x3,scMove = 0x4,scLoop = 0x5,scNop = 0x6,scStop = 0x7,scComp = 0x8,};
enum $EA4F23EDBF074A46CFDACDB88FB2DDC2 {kEventRawKeyDown = 0x1,kEventRawKeyRepeat = 0x2,kEventRawKeyUp = 0x3,kEventRawKeyModifiersChanged = 0x4,kEventHotKeyPressed = 0x5,kEventHotKeyReleased = 0x6,};
enum $EA7E0BFDF3DADB4612DB717B8814F0F4 {kNavSaveChangesClosingDocument = 0x1,kNavSaveChangesQuittingApplication = 0x2,kNavSaveChangesOther = 0x0,};
enum $EADEFB0D9D10BD61158D2BD30C69B08C {kControlAddToMetaFontMask = 0x200,};
enum $EAE1FDA7B0E36FB534B47D9CAFE8EAD6 {kMenuEventIncludeDisabledItems = 0x1,kMenuEventQueryOnly = 0x2,kMenuEventDontCheckSubmenus = 0x4,};
enum $EB204E3CDA2FE0897FB7BD191503BA08 {kGSSSelectGetDefaultScriptingComponent = 0x1001,kGSSSelectSetDefaultScriptingComponent = 0x1002,kGSSSelectGetScriptingComponent = 0x1003,kGSSSelectGetScriptingComponentFromStored = 0x1004,kGSSSelectGenericToRealID = 0x1005,kGSSSelectRealToGenericID = 0x1006,kGSSSelectOutOfRange = 0x1007,};
enum $EB221F91F5F4F3B3EAB32FA706B5A82E {gestaltROMVersion = 0x726F6D76,};
enum $EBA03A67F43C2B84F7C8452D5147463B {kControlKeyFilterBlockKey = 0x0,kControlKeyFilterPassKey = 0x1,};
enum $EBAA67688B41DDEFF78766605A13EC01 {lDrawingModeOffBit = 0x3,lDoVAutoscrollBit = 0x1,lDoHAutoscrollBit = 0x0,};
enum $EBAB25DA5EE8FC868841C3CDFB4A1EEB {typeOSAErrorRange = 0x65726E67,};
enum $EBAC7D7661405B5C9D3268698762E0FD {teFAutoScroll = 0x0,teFTextBuffering = 0x1,teFOutlineHilite = 0x2,teFInlineInput = 0x3,teFUseWhiteBackground = 0x4,teFUseInlineInput = 0x5,teFInlineInputAutoScroll = 0x6,};
enum $EBC34842098DE6D289F984FF7768C4E3 {intWestern = 0x0,intArabic = 0x1,intRoman = 0x2,intJapanese = 0x3,intEuropean = 0x4,intOutputMask = 0x8000,};
enum $EBC6E809812AAB1BEB0CEF7A1F49943F {kControlKindSignatureApple = 0x6170706C,};
enum $EBDC59905EB821ACF1B6E12272616C56 {kSupportsFileTranslation = 0x1,kSupportsScrapTranslation = 0x2,kTranslatorCanGenerateFilename = 0x4,};
enum $EBEE352CCA52CC19EAD5E6DB374D24C3 {kThemeTrackHorizontal = 0x1,kThemeTrackRightToLeft = 0x2,kThemeTrackShowThumb = 0x4,kThemeTrackThumbRgnIsNotGhost = 0x8,kThemeTrackNoScrollBarArrows = 0x10,kThemeTrackHasFocus = 0x20,};
enum $EBF69FE0B762593AA94CA58BB5DCF053 {gestaltUserVisibleMachineName = 0x6D6E616D,};
enum $EBF6D2B8724BD6268E803B35A76B996A {kNoTransliterationSelector = 0x0,kHanjaToHangulSelector = 0x1,kHiraganaToKatakanaSelector = 0x2,kKatakanaToHiraganaSelector = 0x3,kKanaToRomanizationSelector = 0x4,kRomanizationToHiraganaSelector = 0x5,kRomanizationToKatakanaSelector = 0x6,kHanjaToHangulAltOneSelector = 0x7,kHanjaToHangulAltTwoSelector = 0x8,kHanjaToHangulAltThreeSelector = 0x9,};
enum $EC2A64EB281DF1377656F93D45BC5129 {kASAnd = 0x414E4420,kASOr = 0x4F522020,kASNot = 0x4E4F5420,kASNegate = 0x6E656720,keyASArg = 0x61726720,};
enum $EC37D255485C172A9DE951B709A61564 {SL_FATAL = 0x1,SL_NOTIFY = 0x2,SL_ERROR = 0x4,SL_TRACE = 0x8,SL_CONSOLE = 0x0,SL_WARN = 0x20,SL_NOTE = 0x40,};
enum $EC424ADC0D8C9A396F3C81B54611F614 {kUCBidiCatNotApplicable = 0x0,kUCBidiCatLeftRight = 0x1,kUCBidiCatRightLeft = 0x2,kUCBidiCatEuroNumber = 0x3,kUCBidiCatEuroNumberSeparator = 0x4,kUCBidiCatEuroNumberTerminator = 0x5,kUCBidiCatArabicNumber = 0x6,kUCBidiCatCommonNumberSeparator = 0x7,kUCBidiCatBlockSeparator = 0x8,kUCBidiCatSegmentSeparator = 0x9,kUCBidiCatWhitespace = 0xA,kUCBidiCatOtherNeutral = 0xB,kUCBidiCatRightLeftArabic = 0xC,kUCBidiCatLeftRightEmbedding = 0xD,kUCBidiCatRightLeftEmbedding = 0xE,kUCBidiCatLeftRightOverride = 0xF,kUCBidiCatRightLeftOverride = 0x10,kUCBidiCatPopDirectionalFormat = 0x11,kUCBidiCatNonSpacingMark = 0x12,kUCBidiCatBoundaryNeutral = 0x13,};
enum $EC4645FFE80D24D9BAD622F274186825 {kMediaPowerCSCode = 0x46,};
enum $EC4F51B01B4845EDF279AE130782D647 {kICNoUserInteractionMask = 0x1,};
enum $EC5A5BB55F00E557B54A503264B73F0C {kDTPHoldJobErr = 0xFFFFEF98,kDTPStopQueueErr = 0xFFFFEF97,kDTPTryAgainErr = 0xFFFFEF96,kDTPAbortJobErr = 0x80,};
enum $EC6CC302732143F5E95DD13F45206CB0 {kAEQDNotOr = 0x6E746F72,kAEQDNotXor = 0x6E786F72,kAEQDOr = 0x6F722020,kAEQDSubOver = 0x7375626F,kAEQDSubPin = 0x73756270,kAEQDSupplementalSuite = 0x71647370,kAEQDXor = 0x786F7220,kAEQuickdrawSuite = 0x71647277,kAEQuitAll = 0x71756961,kAERedo = 0x7265646F,kAERegular = 0x7265676C,kAEReopenApplication = 0x72617070,kAEReplace = 0x72706C63,kAERequiredSuite = 0x72657164,kAERestart = 0x72657374,kAERevealSelection = 0x73726576,kAERevert = 0x72767274,kAERightJustified = 0x72676874,kAESave = 0x73617665,kAESelect = 0x736C6374,kAESetData = 0x73657464,};
enum $ECAF5A2F73172FB898FF768E7D9E2DE3 {kCFGregorianUnitsYears = 0x1,kCFGregorianUnitsMonths = 0x2,kCFGregorianUnitsDays = 0x4,kCFGregorianUnitsHours = 0x8,kCFGregorianUnitsMinutes = 0x10,kCFGregorianUnitsSeconds = 0x20,kCFGregorianAllUnits = 0xFFFFFF,};
enum $ECB220F9253C5E7971E4094763A3A0A3 {kSRNotifyRecognitionBeginning = 0x1,kSRNotifyRecognitionDone = 0x2,};
enum $ECE74C3197DA808E0BF3EC94E272B63A {kAutoGenerateReturnID = 0xFFFFFFFF,kAnyTransactionID = 0x0,};
enum $ED00ED60679CE7C319363DD637FA5F31 {kDataBrowserItemNoState = 0x0,kDataBrowserItemAnyState = 0xFFFFFFFF,kDataBrowserItemIsSelected = 0x1,kDataBrowserContainerIsOpen = 0x2,kDataBrowserItemIsDragTarget = 0x4,};
enum $ED101591DBBA347B3DD2F30C4074C4A4 {LOGMSGSZ = 0x80,};
enum $ED3CB222F35B250525277339230D1DC5 {kNanosecondScale = 0x1,kMicrosecondScale = 0x3E8,kMillisecondScale = 0xF4240,kSecondScale = 0x3B9ACA00,};
enum $ED7426C36EBB82C0ECCADDCACB27D156 {invalidTranslationPathErr = 0xFFFFF42F,couldNotParseSourceFileErr = 0xFFFFF42E,noTranslationPathErr = 0xFFFFF42A,badTranslationSpecErr = 0xFFFFF429,noPrefAppErr = 0xFFFFF428,};
enum $ED776400C0300A05DBBF5F05408BC844 {smKeyNextScript = 0xFFFFFFFF,smKeySysScript = 0xFFFFFFFE,smKeySwapScript = 0xFFFFFFFD,smKeyNextKybd = 0xFFFFFFFC,smKeySwapKybd = 0xFFFFFFFB,smKeyDisableKybds = 0xFFFFFFFA,smKeyEnableKybds = 0xFFFFFFF9,smKeyToggleInline = 0xFFFFFFF8,smKeyToggleDirection = 0xFFFFFFF7,smKeyNextInputMethod = 0xFFFFFFF6,smKeySwapInputMethod = 0xFFFFFFF5,smKeyDisableKybdSwitch = 0xFFFFFFF4,smKeySetDirLeftRight = 0xFFFFFFF1,smKeySetDirRightLeft = 0xFFFFFFF0,smKeyRoman = 0xFFFFFFEF,};
enum $ED7CAEF585D86FDB2F5D234F21B1D596 {kDCMJapaneseYomiTag = 0x796F6D69,kDCMJapaneseHyokiTag = 0x68796F6B,kDCMJapaneseHinshiTag = 0x68696E73,kDCMJapaneseWeightTag = 0x68696E64,kDCMJapanesePhoneticTag = 0x68746F6E,kDCMJapaneseAccentTag = 0x61636E74,kDCMJapaneseOnKunReadingTag = 0x4F6E4B6E,kDCMJapaneseFukugouInfoTag = 0x66756B75,};
enum $ED986353A623588C3ED06F42FF2FFD9B {returnColorTable = 0x1,returnPalette = 0x2,recordComments = 0x4,recordFontInfo = 0x8,suppressBlackAndWhite = 0x10,};
enum $EDCE395C49B82023859AF336FAAFFABB {MediaBaySndEnBit = 0x0,PCISndEnBit = 0x1,ZVSndEnBit = 0x2,PCCardSndEnBit = 0x3,};
enum $EDD0961C252A373E5649B4208016AE9C {bIsEjectable = 0x0,bSupportsHFSPlusAPIs = 0x1,bSupportsFSCatalogSearch = 0x2,bSupportsFSExchangeObjects = 0x3,bSupports2TBFiles = 0x4,bSupportsLongNames = 0x5,bSupportsMultiScriptNames = 0x6,bSupportsNamedForks = 0x7,bSupportsSubtreeIterators = 0x8,bL2PCanMapFileBlocks = 0x9,};
enum $EDF30F31F7E168098AE3F7F6B85AF557 {kCursorComponentInit = 0x1,kCursorComponentGetInfo = 0x2,kCursorComponentSetOutputMode = 0x3,kCursorComponentSetData = 0x4,kCursorComponentReconfigure = 0x5,kCursorComponentDraw = 0x6,kCursorComponentErase = 0x7,kCursorComponentMove = 0x8,kCursorComponentAnimate = 0x9,kCursorComponentLastReserved = 0x50,};
enum $EE1D2F53907765102E9269EF72FD4455 {keyProcedureName = 0x64666E6D,keyStatementRange = 0x64667372,keyLocalsNames = 0x64666C6E,keyGlobalsNames = 0x6466676E,keyParamsNames = 0x6466706E,};
enum $EE85891CFA42128E8F7D0D7C2248B06E {truncEnd = 0x0,truncMiddle = 0x4000,smTruncEnd = 0x0,smTruncMiddle = 0x4000,};
enum $EE92965D0C788027E31666185F0367EF {kDCMAnyFieldTag = 0x2A2A2A2A,kDCMAnyFieldType = 0x2A2A2A2A,};
enum $EE975E7564AE557B80F21579EE6F144B : unsigned __int32 {kATSLineNoLayoutOptions = 0x0,kATSLineIsDisplayOnly = 0x1,kATSLineHasNoHangers = 0x2,kATSLineHasNoOpticalAlignment = 0x4,kATSLineKeepSpacesOutOfMargin = 0x8,kATSLineNoSpecialJustification = 0x10,kATSLineLastNoJustification = 0x20,kATSLineFractDisable = 0x40,kATSLineImposeNoAngleForEnds = 0x80,kATSLineFillOutToWidth = 0x100,kATSLineTabAdjustEnabled = 0x200,kATSLineIgnoreFontLeading = 0x400,kATSLineApplyAntiAliasing = 0x800,kATSLineNoAntiAliasing = 0x1000,kATSLineDisableNegativeJustification = 0x2000,kATSLineDisableAutoAdjustDisplayPos = 0x4000,kATSLineUseQDRendering = 0x8000,kATSLineDisableAllJustification = 0x10000,kATSLineDisableAllGlyphMorphing = 0x20000,kATSLineDisableAllKerningAdjustments = 0x40000,kATSLineDisableAllBaselineAdjustments = 0x80000,kATSLineDisableAllTrackingAdjustments = 0x100000,kATSLineDisableAllLayoutOperations = 0x1F0000,kATSLineUseDeviceMetrics = 0x1000000,kATSLineAppleReserved = 0xFEE00000,};
enum $EE9F227ECBAF3C576752B1D10972453B {kMemoryCFragLocator = 0x0,kDataForkCFragLocator = 0x1,kResourceCFragLocator = 0x2,kNamedFragmentCFragLocator = 0x4,kCFBundleCFragLocator = 0x5,kCFBundlePreCFragLocator = 0x6,};
enum $EEA86199887F19AE81FC28C572006203 {kResolveAliasFileNoUI = 0x1,kResolveAliasTryFileIDFirst = 0x2,};
enum $EEC473486AFCE0E244311B680180D841 {kDefaultInetInterface = 0xFFFFFFFF,};
enum $EEC88F322B9F30C531BD72F33C941DC9 {kLAEndOfSourceTextMask = 0x1,};
enum $EED928CE20C9D20436E028491382AF02 {fVNumber = 0x0,};
enum $EED9E13FE6CFDB5E2494C46366783808 {bSupportsSymbolicLinks = 0xD,bIsAutoMounted = 0xE,bAllowCDiDataHandler = 0x11,bSupportsExclusiveLocks = 0x12,};
enum $EEFD005606BF77FE7A4C4F1148C64D31 {kLAAllMorphemes = 0x0,};
enum $EF10D20D8AD544E2384BB467A5FE3E20 {kTXNWantMoviesBit = 0x0,kTXNWantSoundBit = 0x1,kTXNWantGraphicsBit = 0x2,kTXNAlwaysUseQuickDrawTextBit = 0x3,kTXNUseTemporaryMemoryBit = 0x4,};
enum $EF4638CE45AB23AECA5954410CBFAE34 {kControlKindClock = 0x636C636B,};
enum $EF54DD338448120D5D03777CCCA3C39F {kControlBevelButtonAlignSysDirection = 0xFFFFFFFF,kControlBevelButtonAlignCenter = 0x0,kControlBevelButtonAlignLeft = 0x1,kControlBevelButtonAlignRight = 0x2,kControlBevelButtonAlignTop = 0x3,kControlBevelButtonAlignBottom = 0x4,kControlBevelButtonAlignTopLeft = 0x5,kControlBevelButtonAlignBottomLeft = 0x6,kControlBevelButtonAlignTopRight = 0x7,kControlBevelButtonAlignBottomRight = 0x8,};
enum $EF7AC0A07C9D4D6CE23E1A7D565F05B3 {kTSMTESignature = 0x746D5445,kTSMTEInterfaceType = 0x746D5445,};
enum $EF908ADC44F0E43E1CDC0C1539ADD99E {kAEDescListFactorNone = 0x0,kAEDescListFactorType = 0x4,kAEDescListFactorTypeAndSize = 0x8,};
enum $EFAFA70CE699F7BD675C385427D4FEDA {kTextEncodingEBCDIC_US = 0xC01,kTextEncodingEBCDIC_CP037 = 0xC02,};
enum $EFBED2DFF2D608CED1961CF86DFF8C5A {kEventWindowDefDrawFrame = 0x3E8,kEventWindowDefDrawPart = 0x3E9,kEventWindowDefGetRegion = 0x3EA,kEventWindowDefHitTest = 0x3EB,kEventWindowDefInit = 0x3EC,kEventWindowDefDispose = 0x3ED,kEventWindowDefDragHilite = 0x3EE,kEventWindowDefModified = 0x3EF,kEventWindowDefSetupProxyDragImage = 0x3F0,kEventWindowDefStateChanged = 0x3F1,kEventWindowDefMeasureTitle = 0x3F2,kEventWindowDefDrawGrowBox = 0x3F3,kEventWindowDefGetGrowImageRegion = 0x3F4,};
enum $EFCC629676CB3BE6564C84AC5F53E519 {gestaltSCCReadAddr = 0x73636372,};
enum $F048A6B0CE64051859D76B47CC371C4C {kUCOutputBufferTooSmall = 0xFFFF9D04,kUCTextBreakLocatorMissingType = 0xFFFF9D03,};
enum $F05EF96BBB38DB48FBB55E61622C6397 {kLaunchToGetTerminology = 0x8000,kDontFindAppBySignature = 0x4000,kAlwaysSendSubject = 0x2000,};
enum $F0628EC66439BCA5812D14954B5EACD1 {kNavFilteringBrowserList = 0x0,kNavFilteringFavorites = 0x1,kNavFilteringRecents = 0x2,kNavFilteringShortCutVolumes = 0x3,kNavFilteringLocationPopup = 0x4,};
enum $F06E774AA3E7169F939E723CABD8EB02 {kTranslationScrapProgressDialogID = 0xFFFFBF55,};
enum $F08B9C92EB28E067F9697293ADEA166F {kATSUInvalidFontID = 0x0,};
enum $F08EDB85A89342AE0CEFCF40E3081516 {kWindowShowTransitionAction = 0x1,kWindowHideTransitionAction = 0x2,kWindowMoveTransitionAction = 0x3,kWindowResizeTransitionAction = 0x4,};
enum $F0902F44937FF474D8C00514140AA502 {false32b = 0x0,true32b = 0x1,};
enum $F096B7958F722F2E8F33E5270ADD2C4E {kThemeMetricScrollBarWidth = 0x0,kThemeMetricSmallScrollBarWidth = 0x1,kThemeMetricCheckBoxHeight = 0x2,kThemeMetricRadioButtonHeight = 0x3,kThemeMetricEditTextWhitespace = 0x4,kThemeMetricEditTextFrameOutset = 0x5,kThemeMetricListBoxFrameOutset = 0x6,kThemeMetricFocusRectOutset = 0x7,kThemeMetricImageWellThickness = 0x8,kThemeMetricScrollBarOverlap = 0x9,kThemeMetricLargeTabHeight = 0xA,kThemeMetricLargeTabCapsWidth = 0xB,kThemeMetricTabFrameOverlap = 0xC,kThemeMetricTabIndentOrStyle = 0xD,kThemeMetricTabOverlap = 0xE,kThemeMetricSmallTabHeight = 0xF,kThemeMetricSmallTabCapsWidth = 0x10,kThemeMetricPushButtonHeight = 0x13,kThemeMetricListHeaderHeight = 0x14,kThemeMetricDisclosureTriangleHeight = 0x19,kThemeMetricDisclosureTriangleWidth = 0x1A,kThemeMetricLittleArrowsHeight = 0x1B,kThemeMetricLittleArrowsWidth = 0x1C,kThemeMetricPopupButtonHeight = 0x1E,kThemeMetricSmallPopupButtonHeight = 0x1F,kThemeMetricLargeProgressBarThickness = 0x20,kThemeMetricPullDownHeight = 0x21,kThemeMetricSmallPullDownHeight = 0x22,kThemeMetricResizeControlHeight = 0x26,kThemeMetricSmallResizeControlHeight = 0x27,kThemeMetricHSliderHeight = 0x29,kThemeMetricHSliderTickHeight = 0x2A,kThemeMetricVSliderWidth = 0x2D,kThemeMetricVSliderTickWidth = 0x2E,kThemeMetricTitleBarControlsHeight = 0x31,kThemeMetricCheckBoxWidth = 0x32,kThemeMetricRadioButtonWidth = 0x34,kThemeMetricNormalProgressBarThickness = 0x3A,kThemeMetricProgressBarShadowOutset = 0x3B,kThemeMetricSmallProgressBarShadowOutset = 0x3C,kThemeMetricPrimaryGroupBoxContentInset = 0x3D,kThemeMetricSecondaryGroupBoxContentInset = 0x3E,kThemeMetricMenuMarkColumnWidth = 0x3F,kThemeMetricMenuExcludedMarkColumnWidth = 0x40,kThemeMetricMenuMarkIndent = 0x41,kThemeMetricMenuTextLeadingEdgeMargin = 0x42,kThemeMetricMenuTextTrailingEdgeMargin = 0x43,kThemeMetricMenuIndentWidth = 0x44,kThemeMetricMenuIconTrailingEdgeMargin = 0x45,};
enum $F0B4C32608914FEFF955228F172D9D56 {kHMContentProvided = 0x0,kHMContentNotProvided = 0x1,kHMContentNotProvidedDontPropagate = 0x2,};
enum $F0BC088A41CD7899F534ED4333FCBCA1 {kBSLNRomanBaseline = 0x0,kBSLNIdeographicCenterBaseline = 0x1,kBSLNIdeographicLowBaseline = 0x2,kBSLNHangingBaseline = 0x3,kBSLNMathBaseline = 0x4,kBSLNLastBaseline = 0x1F,kBSLNNumBaselineClasses = 0x20,kBSLNNoBaselineOverride = 0xFF,};
enum $F0BF66F4D8DA266C95246F4684023C6B {kTextScriptDontCare = 0xFFFFFF80,kTextLanguageDontCare = 0xFFFFFF80,kTextRegionDontCare = 0xFFFFFF80,};
enum $F0D01DFEE15F67F9D6A643D3766A4EE0 {platform68k = 0x1,platformPowerPC = 0x2,platformInterpreted = 0x3,platformWin32 = 0x4,platformPowerPCNativeEntryPoint = 0x5,};
enum $F101F89CCECDAAAE49212AFC2C221133 {kRoutingResourceType = 0x726F7574,kRoutingResourceID = 0x0,};
enum $F1059333722E0AA4388CA1E7240BB3AD {kFNSCreatorDefault = 0x0,kFNSProfileFileType = 0x666E7370,};
struct $F105F10DE5C66ECF2E7E726999936688 {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;};
enum $F13B15BCDDBCBCBD05A6681AB4EA8259 {gestaltMediaBay = 0x6D626568,gestaltMBLegacy = 0x0,gestaltMBSingleBay = 0x1,gestaltMBMultipleBays = 0x2,};
enum $F1801BD1D809F59C5583F4A7CDF3D075 {kHyphensToEmDashOnSelector = 0x0,kHyphensToEmDashOffSelector = 0x1,kHyphenToEnDashOnSelector = 0x2,kHyphenToEnDashOffSelector = 0x3,kSlashedZeroOnSelector = 0x4,kSlashedZeroOffSelector = 0x5,kFormInterrobangOnSelector = 0x6,kFormInterrobangOffSelector = 0x7,kSmartQuotesOnSelector = 0x8,kSmartQuotesOffSelector = 0x9,kPeriodsToEllipsisOnSelector = 0xA,kPeriodsToEllipsisOffSelector = 0xB,};
enum $F1818EFC007C0CFF41528F4AC69DA857 {FP_NAN = 0x1,FP_INFINITE = 0x2,FP_ZERO = 0x3,FP_NORMAL = 0x4,FP_SUBNORMAL = 0x5,};
enum $F212579813AA1868D3E780E072F275D2 {gestaltQuickTimeFeatures = 0x71747273,gestaltPPCQuickTimeLibPresent = 0x0,};
enum $F236117EE90E48E68C6FEE902A8C8F1F {kThemeMenuActive = 0x0,kThemeMenuSelected = 0x1,kThemeMenuDisabled = 0x3,};
enum $F25455B09653741AEEB9CA0CCC1A99C9 {kIsCompleteCFrag = 0x0,kFirstCFragUpdate = 0x1,};
enum $F255FDCA20DDDAA774B30F5BF23F4680 {kEventParamWindowRef = 0x77696E64,kEventParamGrafPort = 0x67726166,kEventParamDragRef = 0x64726167,kEventParamMenuRef = 0x6D656E75,kEventParamEventRef = 0x65766E74,kEventParamControlRef = 0x6374726C,kEventParamRgnHandle = 0x72676E68,kEventParamEnabled = 0x656E6162,kEventParamDimensions = 0x64696D73,kEventParamAvailableBounds = 0x61766C62,kEventParamAEEventID = 0x65767469,kEventParamAEEventClass = 0x6576636C,kEventParamCGContextRef = 0x636E7478,kEventParamDeviceDepth = 0x64657664,kEventParamDeviceColor = 0x64657663,kEventParamMutableArray = 0x6D617272,kEventParamResult = 0x616E7372,kEventParamMinimumSize = 0x6D6E737A,kEventParamMaximumSize = 0x6D78737A,typeWindowRef = 0x77696E64,typeGrafPtr = 0x67726166,typeGWorldPtr = 0x67776C64,typeDragRef = 0x64726167,typeMenuRef = 0x6D656E75,typeControlRef = 0x6374726C,typeCollection = 0x636C746E,typeQDRgnHandle = 0x72676E68,typeOSStatus = 0x6F737374,typeCFStringRef = 0x63667374,typeCFMutableStringRef = 0x63666D73,typeCFIndex = 0x63666978,typeCFTypeRef = 0x63667479,typeCGContextRef = 0x636E7478,typeHIPoint = 0x68697074,typeHISize = 0x6869737A,typeHIRect = 0x68697263,typeVoidPtr = 0x766F6964,};
enum $F26F07C4051EAE6A110117968B8F1B20 {deskPatID = 0x10,};
enum $F27735064C606F1E78552097B35F5D75 {kUpperAndLowerCaseSelector = 0x0,kAllCapsSelector = 0x1,kAllLowerCaseSelector = 0x2,kSmallCapsSelector = 0x3,kInitialCapsSelector = 0x4,kInitialCapsAndSmallCapsSelector = 0x5,};
enum $F2D088B1C6E60216DC43F2F1DC4382F9 {hrHTMLRenderingLibNotInstalledErr = 0xFFFFEB10,hrMiscellaneousExceptionErr = 0xFFFFEB0F,hrUnableToResizeHandleErr = 0xFFFFEB0E,hrURLNotHandledErr = 0xFFFFEB0D,};
enum $F31469633DCF18EFDB6083178FEF4998 {popupTitleLeftJust = 0x0,popupTitleCenterJust = 0x1,popupTitleRightJust = 0xFF,};
enum $F320DFDF57D46510353B1E53EA4A5CCC {kMPPreserveTimerIDMask = 0x1,kMPTimeIsDeltaMask = 0x2,kMPTimeIsDurationMask = 0x4,};
enum $F32FB3829AF4CAC4020B15B07FEC5AAE {kTransformNone = 0x0,kTransformDisabled = 0x1,kTransformOffline = 0x2,kTransformOpen = 0x3,kTransformLabel1 = 0x100,kTransformLabel2 = 0x200,kTransformLabel3 = 0x300,kTransformLabel4 = 0x400,kTransformLabel5 = 0x500,kTransformLabel6 = 0x600,kTransformLabel7 = 0x700,kTransformSelected = 0x4000,kTransformSelectedDisabled = 0x4001,kTransformSelectedOffline = 0x4002,kTransformSelectedOpen = 0x4003,};
enum $F335C1C5E572B225FDE9045F263B898A {kEventWindowCollapse = 0x42,kEventWindowCollapseAll = 0x44,kEventWindowExpand = 0x45,kEventWindowExpandAll = 0x47,kEventWindowClose = 0x48,kEventWindowCloseAll = 0x4A,kEventWindowZoom = 0x4B,kEventWindowZoomAll = 0x4D,kEventWindowContextualMenuSelect = 0x4E,kEventWindowPathSelect = 0x4F,kEventWindowGetIdealSize = 0x50,kEventWindowGetMinimumSize = 0x51,kEventWindowGetMaximumSize = 0x52,kEventWindowConstrain = 0x53,kEventWindowHandleContentClick = 0x55,kEventWindowGetDockTileMenu = 0x5A,kEventWindowProxyBeginDrag = 0x80,kEventWindowProxyEndDrag = 0x81,kEventWindowToolbarSwitchMode = 0x96,};
enum $F36DEFF41447FB0EC77923D61367A793 {kSetFrontProcessFrontWindowOnly = 0x1,};
enum $F374BE2AE2DD1FA69D2724F3C5205B1C {envUnknownKbd = 0x0,envMacKbd = 0x1,envMacAndPad = 0x2,envMacPlusKbd = 0x3,envAExtendKbd = 0x4,envStandADBKbd = 0x5,envPrtblADBKbd = 0x6,envPrtblISOKbd = 0x7,envStdISOADBKbd = 0x8,envExtISOADBKbd = 0x9,};
enum $F37E133A365EB9F6FA66643137085251 {kHFSExtentDensity = 0x3,kHFSPlusExtentDensity = 0x8,};
enum $F3834A3E529760E96B4534D03D0A37FC {kATalkInfoIsExtended = 0x1,kATalkInfoHasRouter = 0x2,kATalkInfoOneZone = 0x4,};
enum $F3876F991244DA6C9E2D6E25C6A258B7 {pixPurge = 0x1,noNewDevice = 0x2,useTempMem = 0x4,keepLocal = 0x8,useDistantHdwrMem = 0x10,useLocalHdwrMem = 0x20,pixelsPurgeable = 0x40,pixelsLocked = 0x80,kAllocDirectDrawSurface = 0x4000,mapPix = 0x10000,newDepth = 0x20000,alignPix = 0x40000,newRowBytes = 0x80000,reallocPix = 0x100000,clipPix = 0x10000000,stretchPix = 0x20000000,ditherPix = 0x40000000,gwFlagErr = 0x80000000,};
enum $F3AB53857C750C85CC7E9266B366629F {kSpecialCaseHighHook = 0x0,kSpecialCaseCaretHook = 0x0,kSpecialCaseEOLHook = 0x1,kSpecialCaseWidthHook = 0x2,kSpecialCaseTextWidthHook = 0x2,kSpecialCaseNWidthHook = 0x3,kSpecialCaseDrawHook = 0x4,kSpecialCaseHitTestHook = 0x5,kSpecialCaseTEFindWord = 0x6,kSpecialCaseProtocolHandler = 0x7,kSpecialCaseSocketListener = 0x8,kSpecialCaseTERecalc = 0x9,kSpecialCaseTEDoText = 0xA,kSpecialCaseGNEFilterProc = 0xB,kSpecialCaseMBarHook = 0xC,};
enum $F3BA5325C11617CF2A8A81ECD57955C7 {kControlBevelButtonOwnedMenuRefTag = 0x6F6D7266,kControlBevelButtonKindTag = 0x6265626B,};
enum $F3F11BDB14C832259CDE0D8B5C399D22 {kATSULeftTab = 0x0,kATSUCenterTab = 0x1,kATSURightTab = 0x2,kATSUNumberTabTypes = 0x3,};
enum $F401D567E4FBF51362F158484CD5534B {kNoAnnotationSelector = 0x0,kBoxAnnotationSelector = 0x1,kRoundedBoxAnnotationSelector = 0x2,kCircleAnnotationSelector = 0x3,kInvertedCircleAnnotationSelector = 0x4,kParenthesisAnnotationSelector = 0x5,kPeriodAnnotationSelector = 0x6,kRomanNumeralAnnotationSelector = 0x7,kDiamondAnnotationSelector = 0x8,kInvertedBoxAnnotationSelector = 0x9,kInvertedRoundedBoxAnnotationSelector = 0xA,};
enum $F41C837101AFC9B0316B257F2D9D4B05 {invalidComponentID = 0xFFFFF448,validInstancesExist = 0xFFFFF447,componentNotCaptured = 0xFFFFF446,componentDontRegister = 0xFFFFF445,unresolvedComponentDLLErr = 0xFFFFF444,retryComponentRegistrationErr = 0xFFFFF443,};
enum $F41D137E522A8ED90C438FEC06776161 {kWindowFloatProc = 0x421,kWindowFloatGrowProc = 0x423,kWindowFloatVertZoomProc = 0x425,kWindowFloatVertZoomGrowProc = 0x427,kWindowFloatHorizZoomProc = 0x429,kWindowFloatHorizZoomGrowProc = 0x42B,kWindowFloatFullZoomProc = 0x42D,kWindowFloatFullZoomGrowProc = 0x42F,};
enum $F4325FB594CAAD0EB945037BF6AC8047 {kALMLocationNotFoundErr = 0xFFFF8AA0,};
enum $F435855D5EF5688649DB7CA32BDFA3D5 {kTrackMouseLocationOptionDontConsumeMouseUp = 0x1,};
enum $F4394107C8DD43927759E951FBA7FC29 {kInetInterfaceInfoVersion = 0x3,};
enum $F43AE73D702C8D03DB8E3B8B8A32FDED {kESCZero21Inch = 0x0,kESCOnePortraitMono = 0x14,kESCTwo12Inch = 0x21,kESCThree21InchRadius = 0x31,kESCThree21InchMonoRadius = 0x34,kESCThree21InchMono = 0x35,kESCFourNTSC = 0xA,kESCFivePortrait = 0x1E,kESCSixMSB1 = 0x3,kESCSixMSB2 = 0xB,kESCSixMSB3 = 0x23,kESCSixStandard = 0x2B,kESCSevenPAL = 0x0,kESCSevenNTSC = 0x14,kESCSevenVGA = 0x17,kESCSeven16Inch = 0x2D,kESCSevenPALAlternate = 0x30,kESCSeven19Inch = 0x3A,kESCSevenDDC = 0x3E,kESCSevenNoDisplay = 0x3F,};
enum $F443F2ACB751230652788204FE11215D {kUCKeyTranslateNoDeadKeysMask = 0x1,};
enum $F45607EFF808B39E5DE29EFFD8A99F8E {kUCKeyOutputStateIndexMask = 0x4000,kUCKeyOutputSequenceIndexMask = 0x8000,kUCKeyOutputTestForIndexMask = 0xC000,kUCKeyOutputGetIndexMask = 0x3FFF,};
enum $F47CE06A0D6958E9EF7813EEC6CA9819 {kHICommandOther = 0x6F746872,};
enum $F48B7CE327998370AF8756B9AE1880C3 {kCurrCFragResourceVersion = 0x1,};
enum $F49EAFEB2259A8CF0B654D54B424FA3D {kATSUInvalidFontFallbacksErr = 0xFFFFDD3C,kATSUUnsupportedStreamFormatErr = 0xFFFFDD3B,kATSUBadStreamErr = 0xFFFFDD3A,kATSUOutputBufferTooSmallErr = 0xFFFFDD39,kATSUInvalidCallInsideCallbackErr = 0xFFFFDD38,kATSULastErr = 0xFFFFDD01,};
enum $F4BE813C40F118B9AD1F6B3875493D34 {pDeskAccessoryFile = 0x64616669,};
enum $F509982AC08FB8D24F1CB8145D1ACBB7 {kAVPowerOff = 0x0,kAVPowerStandby = 0x1,kAVPowerSuspend = 0x2,kAVPowerOn = 0x3,kHardwareSleep = 0x80,kHardwareWake = 0x81,kHardwareWakeFromSuspend = 0x82,kHardwareWakeToDoze = 0x83,kHardwareWakeToDozeFromSuspend = 0x84,};
enum $F5733A20729282EBCF3804504A9796F3 {noAdrMkErr = 0xFFFFFFBD,dataVerErr = 0xFFFFFFBC,badCksmErr = 0xFFFFFFBB,badBtSlpErr = 0xFFFFFFBA,noDtaMkErr = 0xFFFFFFB9,badDCksum = 0xFFFFFFB8,badDBtSlp = 0xFFFFFFB7,wrUnderrun = 0xFFFFFFB6,cantStepErr = 0xFFFFFFB5,tk0BadErr = 0xFFFFFFB4,initIWMErr = 0xFFFFFFB3,twoSideErr = 0xFFFFFFB2,spdAdjErr = 0xFFFFFFB1,seekErr = 0xFFFFFFB0,sectNFErr = 0xFFFFFFAF,fmt1Err = 0xFFFFFFAE,fmt2Err = 0xFFFFFFAD,verErr = 0xFFFFFFAC,clkRdErr = 0xFFFFFFAB,clkWrErr = 0xFFFFFFAA,prWrErr = 0xFFFFFFA9,prInitErr = 0xFFFFFFA8,rcvrErr = 0xFFFFFFA7,breakRecd = 0xFFFFFFA6,};
enum $F5874BF60615D5ED9086F14B83227E84 : unsigned __int32 {kATSGlyphInfoAppleReserved = 0x1FFBFFE8,kATSGlyphInfoIsAttachment = 0x80000000,kATSGlyphInfoIsLTHanger = 0x40000000,kATSGlyphInfoIsRBHanger = 0x20000000,kATSGlyphInfoTerminatorGlyph = 0x80000,kATSGlyphInfoIsWhiteSpace = 0x40000,kATSGlyphInfoHasImposedWidth = 0x10,kATSGlyphInfoByteSizeMask = 0x7,};
enum $F5B7A8D5C4D48CD72D17B9DBD8AA10BD {kEventMouseButtonPrimary = 0x1,kEventMouseButtonSecondary = 0x2,kEventMouseButtonTertiary = 0x3,};
enum $F5D25084AB3C40D9EEA892B8C65FBDB2 {noDeviceForChannel = 0xFFFFDB48,grabTimeComplete = 0xFFFFDB47,cantDoThatInCurrentMode = 0xFFFFDB46,notEnoughMemoryToGrab = 0xFFFFDB45,notEnoughDiskSpaceToGrab = 0xFFFFDB44,couldntGetRequiredComponent = 0xFFFFDB43,badSGChannel = 0xFFFFDB42,seqGrabInfoNotAvailable = 0xFFFFDB41,deviceCantMeetRequest = 0xFFFFDB40,badControllerHeight = 0xFFFFD8F6,editingNotAllowed = 0xFFFFD8F5,controllerBoundsNotExact = 0xFFFFD8F4,cannotSetWidthOfAttachedController = 0xFFFFD8F3,controllerHasFixedHeight = 0xFFFFD8F2,cannotMoveAttachedController = 0xFFFFD8F1,};
enum $F5D9FAC19B01936FCFD8B2CDB4802760 {gestaltPowerMgrVers = 0x70777276,};
enum $F5FDCE5093A539EB0CE8F613A5A67A01 {kEventKeyModifierNumLockMask = 0x10000,kEventKeyModifierFnMask = 0x20000,};
enum $F61B2A17CA226903EBE2EC28AD40A385 {kNSLNoContext = 0x0,};
enum $F63757A797D1995E78A11C47091E3097 {errOSACantCoerce = 0xFFFFF95C,errOSACantAccess = 0xFFFFF940,errOSACantAssign = 0xFFFFD8EA,errOSAGeneralError = 0xFFFFF574,errOSADivideByZero = 0xFFFFF573,errOSANumericOverflow = 0xFFFFF572,errOSACantLaunch = 0xFFFFF571,errOSAAppNotHighLevelEventAware = 0xFFFFF570,errOSACorruptTerminology = 0xFFFFF56F,errOSAStackOverflow = 0xFFFFF56E,errOSAInternalTableOverflow = 0xFFFFF56D,errOSADataBlockTooLarge = 0xFFFFF56C,errOSACantGetTerminology = 0xFFFFF56B,errOSACantCreate = 0xFFFFF56A,};
enum $F6731E32AA5A69AA917EF257EFD88A1D {kOSAGenericScriptingComponentSubtype = 0x73637074,};
enum $F68E41BB552C03507046AA3FD69AAB17 {kE164Address = 0x1,kPhoneAddress = 0x1,kCompoundPhoneAddress = 0x2,kX121Address = 0x3,};
enum $F6917C090EF490D5622C8305E3F798F4 {kSelectorsAreNotIndexable = 0x0,kSelectorsAreIndexable = 0x1,};
enum $F693F92258A1E201C40FF628AD93C219 {gestaltLogicalPageSize = 0x7067737A,};
enum $F6BE9BA8B4A094D27F2B42C8A78441FB {pArcAngle = 0x70617263,pBackgroundColor = 0x7062636C,pBackgroundPattern = 0x70627074,pBestType = 0x70627374,pBounds = 0x70626E64,pClass = 0x70636C73,pClipboard = 0x70636C69,pColor = 0x636F6C72,pColorTable = 0x636C7462,pContents = 0x70636E74,pCornerCurveHeight = 0x70636864,pCornerCurveWidth = 0x70637764,pDashStyle = 0x70647374,pDefaultType = 0x64656674,pDefinitionRect = 0x70647274,pEnabled = 0x656E626C,pEndPoint = 0x70656E64,pFillColor = 0x666C636C,pFillPattern = 0x666C7074,pFont = 0x666F6E74,};
enum $F6F1DAE3670BDFFE6A0807E2F831C198 {kUSBPortDisabled = 0xFFFFE4C7,kUSBQueueAborted = 0xFFFFE4C6,kUSBTimedOut = 0xFFFFE4C5,kUSBDeviceDisconnected = 0xFFFFE4C4,kUSBDeviceNotSuspended = 0xFFFFE4C3,kUSBDeviceSuspended = 0xFFFFE4C2,kUSBInvalidBuffer = 0xFFFFE4C1,kUSBDevicePowerProblem = 0xFFFFE4C0,kUSBDeviceBusy = 0xFFFFE4BF,kUSBUnknownInterfaceErr = 0xFFFFE4BE,kUSBPipeStalledError = 0xFFFFE4BD,kUSBPipeIdleError = 0xFFFFE4BC,kUSBNoBandwidthError = 0xFFFFE4BB,kUSBAbortedError = 0xFFFFE4BA,kUSBFlagsError = 0xFFFFE4B9,kUSBCompletionError = 0xFFFFE4B8,kUSBPBLengthError = 0xFFFFE4B7,kUSBPBVersionError = 0xFFFFE4B6,kUSBNotFound = 0xFFFFE4B5,kUSBOutOfMemoryErr = 0xFFFFE4B4,kUSBDeviceErr = 0xFFFFE4B3,kUSBNoDeviceErr = 0xFFFFE4B2,kUSBAlreadyOpenErr = 0xFFFFE4B1,kUSBTooManyTransactionsErr = 0xFFFFE4B0,kUSBUnknownRequestErr = 0xFFFFE4AF,kUSBRqErr = 0xFFFFE4AE,kUSBIncorrectTypeErr = 0xFFFFE4AD,kUSBTooManyPipesErr = 0xFFFFE4AC,kUSBUnknownPipeErr = 0xFFFFE4AB,kUSBUnknownDeviceErr = 0xFFFFE4AA,kUSBInternalErr = 0xFFFFE4A9,};
enum $F6FD1746EA3359FB09885CF75DCCF700 {kCursorComponentType = 0x63757273,};
enum $F722CC08230D9A47C64AEC5F9B6F960A {kWindowSupportsSetGrowImageRegion = 0x2000,};
enum $F7247E5962708F04BC704908F5CB3C56 {kNoStyleOptionsSelector = 0x0,kDisplayTextSelector = 0x1,kEngravedTextSelector = 0x2,kIlluminatedCapsSelector = 0x3,kTitlingCapsSelector = 0x4,kTallCapsSelector = 0x5,};
enum $F7257FDA08AD3BDF6A1A3031925FF0DA : unsigned __int32 {kDCMIndexedFieldMask = 0x1,kDCMRequiredFieldMask = 0x2,kDCMIdentifyFieldMask = 0x4,kDCMFixedSizeFieldMask = 0x8,kDCMHiddenFieldMask = 0x80000000,};
enum $F7270013D1659520591D50BB045CDF48 {SERIAL_OPT_BAUDRATE = 0x100,SERIAL_OPT_DATABITS = 0x101,SERIAL_OPT_STOPBITS = 0x102,SERIAL_OPT_PARITY = 0x103,SERIAL_OPT_STATUS = 0x104,SERIAL_OPT_HANDSHAKE = 0x105,SERIAL_OPT_RCVTIMEOUT = 0x106,SERIAL_OPT_ERRORCHARACTER = 0x107,SERIAL_OPT_EXTCLOCK = 0x108,SERIAL_OPT_BURSTMODE = 0x109,SERIAL_OPT_DUMMY = 0x10A,};
enum $F730FAB09A901A6BD3C6C36A98E90244 {kSRDefaultRecognitionSystemID = 0x0,};
enum $F74293367DF83BAED8F9516242E90D14 {kOSAScriptResourceType = 0x73637074,};
enum $F75A7AEDE8040469C1C5278DF62D2143 : unsigned __int32 {svLarge1Bit = 0x1,svLarge4Bit = 0x2,svLarge8Bit = 0x4,svSmall1Bit = 0x100,svSmall4Bit = 0x200,svSmall8Bit = 0x400,svMini1Bit = 0x10000,svMini4Bit = 0x20000,svMini8Bit = 0x40000,svAllLargeData = 0xFF,svAllSmallData = 0xFF00,svAllMiniData = 0xFF0000,svAll1BitData = 0x1010101,svAll4BitData = 0x2020202,svAll8BitData = 0x4040404,svAllAvailableData = 0xFFFFFFFF,};
enum $F75CD7292C2C56CBC273EC3505501FAB {smRedrawChar = 0x0,smRedrawWord = 0x1,smRedrawLine = 0xFFFFFFFF,};
enum $F77E3C3D1101CCCA05824B85966C0086 {reqFailed = 0xFFFFFBB8,tooManyReqs = 0xFFFFFBB7,tooManySkts = 0xFFFFFBB6,badATPSkt = 0xFFFFFBB5,badBuffNum = 0xFFFFFBB4,noRelErr = 0xFFFFFBB3,cbNotFound = 0xFFFFFBB2,noSendResp = 0xFFFFFBB1,noDataArea = 0xFFFFFBB0,reqAborted = 0xFFFFFBAF,};
enum $F7BA3474F19479796E293D2AB3E1D476 {kNSL68kContextNotSupported = 0xFFFFEFB6,kNSLSchedulerError = 0xFFFFEFB5,kNSLBadURLSyntax = 0xFFFFEFB4,kNSLNoCarbonLib = 0xFFFFEFB3,kNSLUILibraryNotAvailable = 0xFFFFEFB2,kNSLNotImplementedYet = 0xFFFFEFB1,kNSLErrNullPtrError = 0xFFFFEFB0,kNSLSomePluginsFailedToLoad = 0xFFFFEFAF,kNSLNullNeighborhoodPtr = 0xFFFFEFAE,kNSLNoPluginsForSearch = 0xFFFFEFAD,kNSLSearchAlreadyInProgress = 0xFFFFEFAC,kNSLNoPluginsFound = 0xFFFFEFAB,kNSLPluginLoadFailed = 0xFFFFEFAA,kNSLBadProtocolTypeErr = 0xFFFFEFA9,kNSLNullListPtr = 0xFFFFEFA8,kNSLBadClientInfoPtr = 0xFFFFEFA7,kNSLCannotContinueLookup = 0xFFFFEFA6,kNSLBufferTooSmallForData = 0xFFFFEFA5,kNSLNoContextAvailable = 0xFFFFEFA4,kNSLRequestBufferAlreadyInList = 0xFFFFEFA3,kNSLInvalidPluginSpec = 0xFFFFEFA2,kNSLNoSupportForService = 0xFFFFEFA1,kNSLBadNetConnection = 0xFFFFEFA0,kNSLBadDataTypeErr = 0xFFFFEF9F,kNSLBadServiceTypeErr = 0xFFFFEF9E,kNSLBadReferenceErr = 0xFFFFEF9D,kNSLNoElementsInList = 0xFFFFEF9C,kNSLInsufficientOTVer = 0xFFFFEF9B,kNSLInsufficientSysVer = 0xFFFFEF9A,kNSLNotInitialized = 0xFFFFEF99,kNSLInitializationFailed = 0xFFFFEF98,};
enum $F7D86E6A53942C0CA60F347A3A35A298 {kThemeScrollBarArrowsSingle = 0x0,kThemeScrollBarArrowsLowerRight = 0x1,};
enum $F7FDBBEA2C2386072702565C1E36D058 {kOTPortIsActive = 0x1,kOTPortIsDisabled = 0x2,kOTPortIsUnavailable = 0x4,kOTPortIsOffline = 0x8,};
enum $F8234B7287B861A358C55FB3FB38A017 {keyAEBaseAddr = 0x62616464,keyAEBestType = 0x70627374,keyAEBgndColor = 0x6B62636C,keyAEBgndPattern = 0x6B627074,keyAEBounds = 0x70626E64,keyAECellList = 0x6B636C74,keyAEClassID = 0x636C4944,keyAEColor = 0x636F6C72,keyAEColorTable = 0x636C7462,keyAECurveHeight = 0x6B636864,keyAECurveWidth = 0x6B637764,keyAEDashStyle = 0x70647374,keyAEData = 0x64617461,keyAEDefaultType = 0x64656674,keyAEDefinitionRect = 0x70647274,keyAEDescType = 0x64737470,keyAEDestination = 0x64657374,keyAEDoAntiAlias = 0x616E7461,keyAEDoDithered = 0x67646974,keyAEDoRotate = 0x6B647274,};
enum $F842FD2D88627E8C9CB75D292100935D {leftCaret = 0x0,rightCaret = 0xFFFFFFFF,kHilite = 0x1,};
enum $F851A96C27AC5AF98F22D3DAA7666C31 {gestaltMixedModeVersion = 0x6D697864,};
enum $F854503CADC36B39EEB347EA709C9E10 {cmMatchCMMType = 0x1,cmMatchApplProfileVersion = 0x2,cmMatchDataType = 0x4,cmMatchDeviceType = 0x8,cmMatchDeviceManufacturer = 0x10,cmMatchDeviceModel = 0x20,cmMatchDeviceAttributes = 0x40,cmMatchFlags = 0x80,cmMatchOptions = 0x100,cmMatchWhite = 0x200,cmMatchBlack = 0x400,};
enum $F857308BF5AE085504DF7C5818F38FA4 {kAlertStopAlert = 0x0,kAlertNoteAlert = 0x1,kAlertCautionAlert = 0x2,kAlertPlainAlert = 0x3,};
enum $F8A5EA3BFB05E7E2F5CE7177B99951FB {kCFStreamErrorDomainCustom = 0xFFFFFFFF,kCFStreamErrorDomainPOSIX = 0x1,kCFStreamErrorDomainMacOSStatus = 0x2,};
enum $F8A95FAA97424041F9D49536D4C3D1EC {kThemeBrushDialogBackgroundActive = 0x1,kThemeBrushDialogBackgroundInactive = 0x2,kThemeBrushAlertBackgroundActive = 0x3,kThemeBrushAlertBackgroundInactive = 0x4,kThemeBrushModelessDialogBackgroundActive = 0x5,kThemeBrushModelessDialogBackgroundInactive = 0x6,kThemeBrushUtilityWindowBackgroundActive = 0x7,kThemeBrushUtilityWindowBackgroundInactive = 0x8,kThemeBrushListViewSortColumnBackground = 0x9,kThemeBrushListViewBackground = 0xA,kThemeBrushIconLabelBackground = 0xB,kThemeBrushListViewSeparator = 0xC,kThemeBrushChasingArrows = 0xD,kThemeBrushDragHilite = 0xE,kThemeBrushDocumentWindowBackground = 0xF,kThemeBrushFinderWindowBackground = 0x10,};
enum $F8AFC5972A261092D9395D44A697410A {kThemeTextColorSystemDetail = 0x30,};
enum $F8B66D589904A2E0E51FCB1EA4FD36AB {gestaltScrapMgrAttr = 0x73637261,gestaltScrapMgrTranslationAware = 0x0,};
enum $F8BBA3C521FE3F4A2C5549C4FE6730AE {kControlKeyScriptBehaviorAllowAnyScript = 0x616E7920,kControlKeyScriptBehaviorPrefersRoman = 0x70726D6E,kControlKeyScriptBehaviorRequiresRoman = 0x72726D6E,};
enum $F8F9ECD74B045B35282DEB8B8260CDB3 {bSourceIsAvailable = 0x0,bSourceIsCharging = 0x1,bChargerIsAttached = 0x2,kSourceIsAvailableMask = 0x1,kSourceIsChargingMask = 0x2,kChargerIsAttachedMask = 0x4,};
enum $F8FE97EC44DDB5C218211627CDA1F590 {langUnspecified = 0x7FFF,};
enum $F97A009864F2D3D23A605B22E84A0FD2 {keyAppHandledCoercion = 0x69646173,};
enum $F97DFC0CBD96E281EE529FFE351F7F80 {errOSATypeError = 0xFFFFF959,OSAMessageNotUnderstood = 0xFFFFF954,OSAUndefinedHandler = 0xFFFFF94B,OSAIllegalAccess = 0xFFFFF945,OSAIllegalIndex = 0xFFFFF949,OSAIllegalRange = 0xFFFFF948,OSAIllegalAssign = 0xFFFFD8ED,OSASyntaxError = 0xFFFFF54C,OSASyntaxTypeError = 0xFFFFF54B,OSATokenTooLong = 0xFFFFF54A,OSAMissingParameter = 0xFFFFF95B,OSAParameterMismatch = 0xFFFFF947,OSADuplicateParameter = 0xFFFFF542,OSADuplicateProperty = 0xFFFFF541,OSADuplicateHandler = 0xFFFFF540,OSAUndefinedVariable = 0xFFFFF53F,OSAInconsistentDeclarations = 0xFFFFF53E,OSAControlFlowError = 0xFFFFF53D,};
enum $F98E67AC594A7872D28BC2DCD6D85A80 : unsigned __int32 {scsiBusDataTIB = 0x2,scsiBusDataBuffer = 0x1,scsiBusDataSG = 0x4,scsiBusDataIOTable = 0x8,scsiBusDataReserved = 0x80000000,};
enum $F9A25D2E3F637836107E43455CA082E2 {kICMapBinaryBit = 0x0,kICMapResourceForkBit = 0x1,kICMapDataForkBit = 0x2,kICMapPostBit = 0x3,kICMapNotIncomingBit = 0x4,kICMapNotOutgoingBit = 0x5,};
enum $F9BADA3617171AA83D8E6EA82086C4C9 {gestaltQuickdrawFeatures = 0x71647277,gestaltHasColor = 0x0,gestaltHasDeepGWorlds = 0x1,gestaltHasDirectPixMaps = 0x2,gestaltHasGrayishTextOr = 0x3,gestaltSupportsMirroring = 0x4,gestaltQDHasLongRowBytes = 0x5,};
enum $FA0120687CF6A35F4EE5B1CE6AC4CAF3 {kOSAScriptIsTypeScriptValue = 0x76616C75,};
enum $FA07CA0516860C91041E45E8CAC5DBFF {siInitSDTblErr = 0x1,siInitVBLQsErr = 0x2,siInitSPTblErr = 0x3,sdmJTInitErr = 0xA,sdmInitErr = 0xB,sdmSRTInitErr = 0xC,sdmPRAMInitErr = 0xD,sdmPriInitErr = 0xE,};
enum $FA1DD8C0D277C0909B8A536738D987D1 {kOSAScriptIsModified = 0x6D6F6469,};
enum $FA26CB2AA9DF0DF7DEC8449B3454B1BB {kDepthDependent = 0x0,};
enum $FA395D620D0C83A51E9B2A12B50179D8 {kOSAModeDoRecord = 0x1000,};
enum $FA496E5233A23A274242891E36D75D32 {kDummyDeviceID = 0xFF,kInvalidDisplayID = 0x0,kFirstDisplayID = 0x100,};
enum $FA6745E59AC0465FE40955B944FF81F0 {kFBCphIndexing = 0x0,kFBCphFlushing = 0x1,kFBCphMerging = 0x2,kFBCphMakingIndexAccessor = 0x3,kFBCphCompacting = 0x4,kFBCphIndexWaiting = 0x5,kFBCphSearching = 0x6,kFBCphMakingAccessAccessor = 0x7,kFBCphAccessWaiting = 0x8,kFBCphSummarizing = 0x9,kFBCphIdle = 0xA,kFBCphCanceling = 0xB,};
enum $FA7D86790EBD3E722BDBB9BDA2309351 {kCurrentMixedModeStateRecord = 0x1,};
enum $FA8588582257D14C58BC673E6AA23058 {kDCMUserDictionaryClass = 0x0,kDCMSpecificDictionaryClass = 0x1,kDCMBasicDictionaryClass = 0x2,};
enum $FA8E269166550BB1DAFBEFD5A55142DE {kPPPStateInitial = 0x1,kPPPStateClosed = 0x2,kPPPStateClosing = 0x3,kPPPStateOpening = 0x4,kPPPStateOpened = 0x5,};
enum $FA9D380E0AE979141E927AE2BDFBD04E {kOTSerialNoParity = 0x0,kOTSerialOddParity = 0x1,kOTSerialEvenParity = 0x2,};
enum $FAA8F50C6EE9F2B80B6350D5FBE87721 {kDDCBlockTypeEDID = 0x0,};
enum $FAB2F287F3DB17B85592490DDA99E689 {gestaltMachineType = 0x6D616368,gestaltClassic = 0x1,gestaltMacXL = 0x2,gestaltMac512KE = 0x3,gestaltMacPlus = 0x4,gestaltMacSE = 0x5,gestaltMacII = 0x6,gestaltMacIIx = 0x7,gestaltMacIIcx = 0x8,gestaltMacSE030 = 0x9,gestaltPortable = 0xA,gestaltMacIIci = 0xB,gestaltPowerMac8100_120 = 0xC,gestaltMacIIfx = 0xD,gestaltMacClassic = 0x11,gestaltMacIIsi = 0x12,gestaltMacLC = 0x13,gestaltMacQuadra900 = 0x14,gestaltPowerBook170 = 0x15,gestaltMacQuadra700 = 0x16,gestaltClassicII = 0x17,gestaltPowerBook100 = 0x18,gestaltPowerBook140 = 0x19,gestaltMacQuadra950 = 0x1A,gestaltMacLCIII = 0x1B,gestaltPerforma450 = 0x1B,gestaltPowerBookDuo210 = 0x1D,gestaltMacCentris650 = 0x1E,gestaltPowerBookDuo230 = 0x20,gestaltPowerBook180 = 0x21,gestaltPowerBook160 = 0x22,gestaltMacQuadra800 = 0x23,gestaltMacQuadra650 = 0x24,gestaltMacLCII = 0x25,gestaltPowerBookDuo250 = 0x26,gestaltAWS9150_80 = 0x27,gestaltPowerMac8100_110 = 0x28,gestaltAWS8150_110 = 0x28,gestaltPowerMac5200 = 0x29,gestaltPowerMac5260 = 0x29,gestaltPerforma5300 = 0x29,gestaltPowerMac6200 = 0x2A,gestaltPerforma6300 = 0x2A,gestaltMacIIvi = 0x2C,gestaltMacIIvm = 0x2D,gestaltPerforma600 = 0x2D,gestaltPowerMac7100_80 = 0x2F,gestaltMacIIvx = 0x30,gestaltMacColorClassic = 0x31,gestaltPerforma250 = 0x31,gestaltPowerBook165c = 0x32,gestaltMacCentris610 = 0x34,gestaltMacQuadra610 = 0x35,gestaltPowerBook145 = 0x36,gestaltPowerMac8100_100 = 0x37,gestaltMacLC520 = 0x38,gestaltAWS9150_120 = 0x39,gestaltPowerMac6400 = 0x3A,gestaltPerforma6400 = 0x3A,gestaltPerforma6360 = 0x3A,gestaltMacCentris660AV = 0x3C,gestaltMacQuadra660AV = 0x3C,gestaltPerforma46x = 0x3E,gestaltPowerMac8100_80 = 0x41,gestaltAWS8150_80 = 0x41,gestaltPowerMac9500 = 0x43,gestaltPowerMac9600 = 0x43,gestaltPowerMac7500 = 0x44,gestaltPowerMac7600 = 0x44,gestaltPowerMac8500 = 0x45,gestaltPowerMac8600 = 0x45,gestaltAWS8550 = 0x44,gestaltPowerBook180c = 0x47,gestaltPowerBook520 = 0x48,gestaltPowerBook520c = 0x48,gestaltPowerBook540 = 0x48,gestaltPowerBook540c = 0x48,gestaltPowerMac5400 = 0x4A,gestaltPowerMac6100_60 = 0x4B,gestaltAWS6150_60 = 0x4B,gestaltPowerBookDuo270c = 0x4D,gestaltMacQuadra840AV = 0x4E,gestaltPerforma550 = 0x50,gestaltPowerBook165 = 0x54,gestaltPowerBook190 = 0x55,gestaltMacTV = 0x58,gestaltMacLC475 = 0x59,gestaltPerforma47x = 0x59,gestaltMacLC575 = 0x5C,gestaltMacQuadra605 = 0x5E,gestaltMacQuadra630 = 0x62,gestaltMacLC580 = 0x63,gestaltPerforma580 = 0x63,gestaltPowerMac6100_66 = 0x64,gestaltAWS6150_66 = 0x64,gestaltPowerBookDuo280 = 0x66,gestaltPowerBookDuo280c = 0x67,gestaltPowerMacLC475 = 0x68,gestaltPowerMacPerforma47x = 0x68,gestaltPowerMacLC575 = 0x69,gestaltPowerMacPerforma57x = 0x69,gestaltPowerMacQuadra630 = 0x6A,gestaltPowerMacLC630 = 0x6A,gestaltPowerMacPerforma63x = 0x6A,gestaltPowerMac7200 = 0x6C,gestaltPowerMac7300 = 0x6D,gestaltPowerMac7100_66 = 0x70,gestaltPowerBook150 = 0x73,gestaltPowerMacQuadra700 = 0x74,gestaltPowerMacQuadra900 = 0x75,gestaltPowerMacQuadra950 = 0x76,gestaltPowerMacCentris610 = 0x77,gestaltPowerMacCentris650 = 0x78,gestaltPowerMacQuadra610 = 0x79,gestaltPowerMacQuadra650 = 0x7A,gestaltPowerMacQuadra800 = 0x7B,gestaltPowerBookDuo2300 = 0x7C,gestaltPowerBook500PPCUpgrade = 0x7E,gestaltPowerBook5300 = 0x80,gestaltPowerBook1400 = 0x136,gestaltPowerBook3400 = 0x132,gestaltPowerBook2400 = 0x133,gestaltPowerBookG3Series = 0x138,gestaltPowerBookG3 = 0x139,gestaltPowerBookG3Series2 = 0x13A,gestaltPowerMacNewWorld = 0x196,gestaltPowerMacG3 = 0x1FE,gestaltPowerMac5500 = 0x200,gestalt20thAnniversary = 0x200,gestaltPowerMac6500 = 0x201,gestaltPowerMac4400_160 = 0x202,gestaltPowerMac4400 = 0x203,gestaltMacOSCompatibility = 0x4B6,};
enum $FACC82D72813F13ED621EEA96672B99F {kOTNoDeviceType = 0x0,kOTADEVDevice = 0x1,kOTMDEVDevice = 0x2,kOTLocalTalkDevice = 0x3,kOTIRTalkDevice = 0x4,kOTTokenRingDevice = 0x5,kOTISDNDevice = 0x6,kOTATMDevice = 0x7,kOTSMDSDevice = 0x8,kOTSerialDevice = 0x9,kOTEthernetDevice = 0xA,kOTSLIPDevice = 0xB,kOTPPPDevice = 0xC,kOTModemDevice = 0xD,kOTFastEthernetDevice = 0xE,kOTFDDIDevice = 0xF,kOTIrDADevice = 0x10,kOTATMSNAPDevice = 0x11,kOTFibreChannelDevice = 0x12,kOTFireWireDevice = 0x13,kOTPseudoDevice = 0x3FF,kOTLastDeviceIndex = 0x3FE,};
enum $FB3C497E5DC8B65349DCFE5758477343 {kOSASelectSetCurrentDialect = 0x701,kOSASelectGetCurrentDialect = 0x702,kOSASelectAvailableDialects = 0x703,kOSASelectGetDialectInfo = 0x704,kOSASelectAvailableDialectCodeList = 0x705,};
enum $FB60DCCDF25B8B74A12592F07454F67B {kControlProgressBarIndeterminateTag = 0x696E6465,kControlProgressBarAnimatingTag = 0x616E696D,};
enum $FB8A497DA827941B97A092753B7FBC8E {soVoiceDescription = 0x696E666F,soVoiceFile = 0x66726566,};
enum $FB9DE5A3716475996BACF08B0AD5B184 {kCFRunLoopRunFinished = 0x1,kCFRunLoopRunStopped = 0x2,kCFRunLoopRunTimedOut = 0x3,kCFRunLoopRunHandledSource = 0x4,};
enum $FBA184EC5D7B553F134F81B438731B62 {kTXNReadWrite = 0x0,kTXNReadOnly = 0x1,};
enum $FBE3415223C6555039C29A38569AF9A2 {keyAEDoScale = 0x6B736361,keyAEDoTranslate = 0x6B747261,keyAEEditionFileLoc = 0x656C6F63,keyAEElements = 0x656C6D73,keyAEEndPoint = 0x70656E64,keyAEEventClass = 0x6576636C,keyAEEventID = 0x65767469,keyAEFile = 0x6B66696C,keyAEFileType = 0x666C7470,keyAEFillColor = 0x666C636C,keyAEFillPattern = 0x666C7074,keyAEFlipHorizontal = 0x6B66686F,keyAEFlipVertical = 0x6B667674,keyAEFont = 0x666F6E74,keyAEFormula = 0x70666F72,keyAEGraphicObjects = 0x676F6273,keyAEID = 0x49442020,keyAEImageQuality = 0x67717561,keyAEInsertHere = 0x696E7368,keyAEKeyForms = 0x6B657966,};
enum $FBEC49B661D5C6443EBA0281EDF0B530 : unsigned __int32 {kFNSMatchNames = 0x1,kFNSMatchTechnology = 0x2,kFNSMatchGlyphs = 0x4,kFNSMatchEncodings = 0x8,kFNSMatchQDMetrics = 0x10,kFNSMatchATSUMetrics = 0x20,kFNSMatchKerning = 0x40,kFNSMatchWSLayout = 0x80,kFNSMatchAATLayout = 0x100,kFNSMatchPrintEncoding = 0x200,kFNSMissingDataNoMatch = 0x80000000,kFNSMatchAll = 0xFFFFFFFF,kFNSMatchDefaults = 0x0,};
enum $FC62B0B01FF2D411A2E228A30F04143F {kTXNSingleStylePerTextDocumentResType = 0x4D505352,kTXNMultipleStylesPerTextDocumentResType = 0x7374796C,};
enum $FC694239537F4792C712224D83165698 {kAFPTagLengthIP = 0x6,kAFPTagLengthIPPort = 0x8,kAFPTagLengthDDP = 0x6,};
enum $FC72B8DA2D63F419F6FD5A020FCABC47 {itlcDisableKeyScriptSync = 0x3,};
enum $FC7CD5C13BD9FA7D45FB34DA406DAB7D {kPMColorIntentUndefined = 0x0,kPMColorIntentAutomatic = 0x1,kPMColorIntentPhoto = 0x2,kPMColorIntentBusiness = 0x4,kPMColorIntentRelColor = 0x8,kPMColorIntentAbsColor = 0x10,kPMColorIntentUnused = 0xFFE0,};
enum $FC7D69792D431B8BDD9B1FBD2BAA1AA8 {kControlGroupBoxMenuHandleTag = 0x6D68616E,kControlGroupBoxMenuRefTag = 0x6D68616E,kControlGroupBoxFontStyleTag = 0x666F6E74,};
enum $FCE0DED05452C5151FB88CF2F7C6960E {kWindowPaintProcOptionsNone = 0x0,};
enum $FCE39149B5EAE802DD98C949B0F992AA {kEventWindowClickDragRgn = 0x20,kEventWindowClickResizeRgn = 0x21,kEventWindowClickCollapseRgn = 0x22,kEventWindowClickCloseRgn = 0x23,kEventWindowClickZoomRgn = 0x24,kEventWindowClickContentRgn = 0x25,kEventWindowClickProxyIconRgn = 0x26,kEventWindowClickToolbarButtonRgn = 0x29,kEventWindowClickStructureRgn = 0x2A,};
enum $FCE5A80E13FB5E355557FB2DEB7ACD2B {gestaltDTPFeatures = 0x64747066,kDTPThirdPartySupported = 0x4,};
enum $FD0B6ABFCE34BE4359709DD571755F48 {kSoundComponentInitOutputDeviceSelect = 0x1,kSoundComponentSetSourceSelect = 0x2,kSoundComponentGetSourceSelect = 0x3,kSoundComponentGetSourceDataSelect = 0x4,kSoundComponentSetOutputSelect = 0x5,kSoundComponentAddSourceSelect = 0x101,kSoundComponentRemoveSourceSelect = 0x102,kSoundComponentGetInfoSelect = 0x103,kSoundComponentSetInfoSelect = 0x104,kSoundComponentStartSourceSelect = 0x105,kSoundComponentStopSourceSelect = 0x106,kSoundComponentPauseSourceSelect = 0x107,kSoundComponentPlaySourceBufferSelect = 0x108,};
enum $FD0BD316F2BBD909B5FBCB7E3B7055DB {T_YES = 0x1,T_NO = 0x0,T_UNUSED = 0xFFFFFFFF,kT_NULL = 0x0,T_ABSREQ = 0x8000,};
enum $FD17C85784B05078C07F6E9B092D967F {kTextEncodingMacFarsi = 0x8C,kTextEncodingMacUkrainian = 0x98,kTextEncodingMacInuit = 0xEC,kTextEncodingMacVT100 = 0xFC,};
enum $FD3A7EDFA84D457DD688A80C44B8C6DA {kDataBrowserOrderUndefined = 0x0,kDataBrowserOrderIncreasing = 0x1,kDataBrowserOrderDecreasing = 0x2,};
enum $FD8E29B2ADDD525ECF0D85B532B52224 {kATSUByCharacter = 0x0,kATSUByTypographicCluster = 0x1,kATSUByWord = 0x2,kATSUByCharacterCluster = 0x3,kATSUByCluster = 0x1,};
enum $FD9AD353B7B01D89CEC9E7402649ED75 {keyAELAMorphemeBundle = 0x6C6D6662,keyAELAMorphemePath = 0x6C6D6670,keyAELAMorpheme = 0x6C6D666E,keyAELAHomograph = 0x6C6D6668,};
enum $FDA6DF694F750A254AE35C64EB154927 {colorXorXFer = 0x34,noiseXFer = 0x35,customXFer = 0x36,};
enum $FDAE8CBC3770170F34248C8703349DD8 {kControlUseFontMask = 0x1,kControlUseFaceMask = 0x2,kControlUseSizeMask = 0x4,kControlUseForeColorMask = 0x8,kControlUseBackColorMask = 0x10,kControlUseModeMask = 0x20,kControlUseJustMask = 0x40,kControlUseAllMask = 0xFF,kControlAddFontSizeMask = 0x100,};
enum $FDAEC2F3301EA703D768876D7A44A872 {kEventToolbarItemImageChanged = 0x1,kEventToolbarItemLabelChanged = 0x2,kEventToolbarItemHelpTextChanged = 0x3,kEventToolbarItemCommandIDChanged = 0x4,kEventToolbarItemGetPersistentData = 0x5,kEventToolbarItemCreateCustomView = 0x6,kEventToolbarItemEnabledStateChanged = 0x7,kEventToolbarItemPerformAction = 0x8,};
enum $FDE86E5071FB673B00044FA8D1710931 {kRoutineIsNotDispatchedDefaultRoutine = 0x0,kRoutineIsDispatchedDefaultRoutine = 0x10,};
enum $FE1E8ACD4815FA5435F31AE9782D4AC0 {dReadEnable = 0x0,dWritEnable = 0x1,dCtlEnable = 0x2,dStatEnable = 0x3,dNeedGoodBye = 0x4,dNeedTime = 0x5,dNeedLock = 0x6,};
enum $FE31881402FC14405257F34F769531E8 {cmCS1ChromTag = 0x6368726D,cmCS1TRCTag = 0x74726320,cmCS1NameTag = 0x6E616D65,cmCS1CustTag = 0x63757374,};
enum $FE4A7E90C3369636F8B3930F0E1DDFEF : __int64 {kURLInitiatedEventMask = 0x1,kURLResourceFoundEventMask = 0x8,kURLDownloadingMask = 0x10,kURLUploadingMask = 0x200,kURLAbortInitiatedMask = 0x80,kURLCompletedEventMask = 0x100,kURLErrorOccurredEventMask = 0x40,kURLDataAvailableEventMask = 0x100000,kURLTransactionCompleteEventMask = 0x20,kURLSystemEventMask = 0x10000000,kURLPercentEventMask = 0x20000000,kURLPeriodicEventMask = 0x40000000,kURLPropertyChangedEventMask = 0xFFFFFFFF80000000,kURLAllBufferEventsMask = 0x100020,kURLAllNonBufferEventsMask = 0xFFFFFFFFE00003D1,kURLAllEventsMask = 0xFFFFFFFF,};
enum $FEA513DCBC3024A567794B1EAA9C15F2 {gestaltDisplayMgrAttr = 0x64706C79,gestaltDisplayMgrPresent = 0x0,gestaltDisplayMgrCanSwitchMirrored = 0x2,gestaltDisplayMgrSetDepthNotifies = 0x3,gestaltDisplayMgrCanConfirm = 0x4,gestaltDisplayMgrColorSyncAware = 0x5,gestaltDisplayMgrGeneratesProfiles = 0x6,gestaltDisplayMgrSleepNotifies = 0x7,};
enum $FEB03A8004D90CBF5D4E8D605CFF82A7 {kControlEditTextSingleLineTag = 0x73676C63,};
enum $FEB624D7937514DA50C30D8656C6FC24 {kTXNEndIterationErr = 0xFFFFAA10,kTXNCannotAddFrameErr = 0xFFFFAA0F,kTXNInvalidFrameIDErr = 0xFFFFAA0E,kTXNIllegalToCrossDataBoundariesErr = 0xFFFFAA0D,kTXNUserCanceledOperationErr = 0xFFFFAA0C,kTXNBadDefaultFileTypeWarning = 0xFFFFAA0B,kTXNCannotSetAutoIndentErr = 0xFFFFAA0A,kTXNRunIndexOutofBoundsErr = 0xFFFFAA09,kTXNNoMatchErr = 0xFFFFAA08,kTXNAttributeTagInvalidForRunErr = 0xFFFFAA07,kTXNSomeOrAllTagsInvalidForRunErr = 0xFFFFAA06,kTXNInvalidRunIndex = 0xFFFFAA05,kTXNAlreadyInitializedErr = 0xFFFFAA04,kTXNCannotTurnTSMOffWhenUsingUnicodeErr = 0xFFFFAA03,kTXNCopyNotAllowedInEchoModeErr = 0xFFFFAA02,kTXNDataTypeNotAllowedErr = 0xFFFFAA01,kTXNATSUIIsNotInstalledErr = 0xFFFFAA00,kTXNOutsideOfLineErr = 0xFFFFA9FF,kTXNOutsideOfFrameErr = 0xFFFFA9FE,};
enum $FEBB2992DC4ADCE18624A3BF5CCB540F {nullEvent = 0x0,mouseDown = 0x1,mouseUp = 0x2,keyDown = 0x3,keyUp = 0x4,autoKey = 0x5,updateEvt = 0x6,diskEvt = 0x7,activateEvt = 0x8,osEvt = 0xF,kHighLevelEvent = 0x17,};
enum $FEE40D924F56FD915E311539FF7AF614 {flavorTypeDirectory = 0x64697279,};
enum $FF149E7A3D2CD7C0D6D90DAB531DE183 {kProcDescriptorIsAbsolute = 0x0,kProcDescriptorIsRelative = 0x1,};
enum $FF20F5A5458E17FC07E98E38B8F0DE0E {kConnSuite = 0x6D616363,cDevSpec = 0x63646576,cAddressSpec = 0x63616472,cADBAddress = 0x63616462,cAppleTalkAddress = 0x63617420,cBusAddress = 0x63627573,cEthernetAddress = 0x63656E20,cFireWireAddress = 0x63667720,cIPAddress = 0x63697020,cLocalTalkAddress = 0x636C7420,cSCSIAddress = 0x63736373,cTokenRingAddress = 0x63746F6B,cUSBAddress = 0x63757362,pDeviceType = 0x70647674,pDeviceAddress = 0x70647661,pConduit = 0x70636F6E,pProtocol = 0x70707274,pATMachine = 0x7061746D,pATZone = 0x7061747A,pATType = 0x70617474,pDottedDecimal = 0x70697064,pDNS = 0x70646E73,pPort = 0x70706F72,pNetwork = 0x706E6574,pNode = 0x706E6F64,pSocket = 0x70736F63,pSCSIBus = 0x70736362,pSCSILUN = 0x70736C75,eDeviceType = 0x65647674,eAddressSpec = 0x65616473,eConduit = 0x65636F6E,eProtocol = 0x6570726F,eADB = 0x65616462,eAnalogAudio = 0x65706175,eAppleTalk = 0x65706174,eAudioLineIn = 0x65636169,eAudioLineOut = 0x6563616C,eAudioOut = 0x6563616F,eBus = 0x65627573,eCDROM = 0x65636420,eCommSlot = 0x6563636D,eDigitalAudio = 0x65706461,eDisplay = 0x65646473,eDVD = 0x65647664,eEthernet = 0x6563656E,eFireWire = 0x65636677,eFloppy = 0x65666420,eHD = 0x65686420,eInfrared = 0x65636972,eIP = 0x65706970,eIrDA = 0x65706972,eIRTalk = 0x65706974,eKeyboard = 0x656B6264,eLCD = 0x65646C63,eLocalTalk = 0x65636C74,eMacIP = 0x65706D69,eMacVideo = 0x65706D76,eMicrophone = 0x65636D69,eModemPort = 0x65636D70,eModemPrinterPort = 0x656D7070,eModem = 0x65646D6D,eMonitorOut = 0x65636D6E,eMouse = 0x656D6F75,eNuBusCard = 0x65646E62,eNuBus = 0x656E7562,ePCcard = 0x65637063,ePCIbus = 0x65637069,ePCIcard = 0x65647069,ePDSslot = 0x65637064,ePDScard = 0x65706473,ePointingDevice = 0x65647064,ePostScript = 0x65707073,ePPP = 0x65707070,ePrinterPort = 0x65637070,ePrinter = 0x65647072,eSvideo = 0x65707376,eSCSI = 0x65637363,eSerial = 0x65707372,eSpeakers = 0x65647370,eStorageDevice = 0x65647374,eSVGA = 0x65707367,eTokenRing = 0x65746F6B,eTrackball = 0x6574726B,eTrackpad = 0x65647470,eUSB = 0x65637573,eVideoIn = 0x65637669,eVideoMonitor = 0x6564766D,eVideoOut = 0x6563766F,};
enum $FF244A3E675AA0B06B444B295032402C {themeInvalidBrushErr = 0xFFFF88A0,themeProcessRegisteredErr = 0xFFFF889F,themeProcessNotRegisteredErr = 0xFFFF889E,themeBadTextColorErr = 0xFFFF889D,themeHasNoAccentsErr = 0xFFFF889C,themeBadCursorIndexErr = 0xFFFF889B,themeScriptFontNotFoundErr = 0xFFFF889A,themeMonitorDepthNotSupportedErr = 0xFFFF8899,themeNoAppropriateBrushErr = 0xFFFF8898,};
enum $FF322869166E8BF7F9E3825A6AF6910C {kPMBlackAndWhite = 0x1,kPMGray = 0x2,kPMColor = 0x3,kPMColorModeDuotone = 0x4,kPMColorModeSpecialColor = 0x5,};
enum $FF3788073524E0AC6F2653EDE51978BB {deviceIsIndirect = 0x1,deviceNeedsLock = 0x2,deviceIsStatic = 0x4,deviceIsExternalBuffer = 0x8,deviceIsDDSurface = 0x10,deviceIsDCISurface = 0x20,deviceIsGDISurface = 0x40,deviceIsAScreen = 0x80,deviceIsOverlaySurface = 0x100,};
enum $FF5267A6F9811035F02B8A5EDA9AD627 {kTXNSetFlushnessBit = 0x0,kTXNSetJustificationBit = 0x1,kTXNUseFontFallBackBit = 0x2,kTXNRotateTextBit = 0x3,kTXNUseVerticalTextBit = 0x4,kTXNDontUpdateBoxRectBit = 0x5,kTXNDontDrawTextBit = 0x6,kTXNUseCGContextRefBit = 0x7,kTXNImageWithQDBit = 0x8,kTXNDontWrapTextBit = 0x9,};
enum $FF6D052BF2ACC7EC238F69F08C4D7CC8 {teJustLeft = 0x0,teJustCenter = 0x1,teJustRight = 0xFFFFFFFF,teForceLeft = 0xFFFFFFFE,teFlushDefault = 0x0,teCenter = 0x1,teFlushRight = 0xFFFFFFFF,teFlushLeft = 0xFFFFFFFE,};
enum $FF754F24174D7C64157D04EF7406CF1D {kMenuDrawMsg = 0x0,kMenuSizeMsg = 0x2,kMenuPopUpMsg = 0x3,kMenuCalcItemMsg = 0x5,kMenuThemeSavvyMsg = 0x7,mDrawMsg = 0x0,mSizeMsg = 0x2,mPopUpMsg = 0x3,mCalcItemMsg = 0x5,};
enum $FF84CF3ADD165EB5FA8FA915C7855525 {kScrapFlavorTypePicture = 0x50494354,kScrapFlavorTypeText = 0x54455854,kScrapFlavorTypeTextStyle = 0x7374796C,kScrapFlavorTypeMovie = 0x6D6F6F76,kScrapFlavorTypeSound = 0x736E6420,kScrapFlavorTypeUnicode = 0x75747874,kScrapFlavorTypeUnicodeStyle = 0x7573746C,};
enum $FF9279066A19F516B6E8000DC8A1B33A {gestaltSDPPromptVersion = 0x70727076,};
enum $FFCF2CE8C7F0FEA7613938669350024C {kOTISDNTelephoneALaw = 0x1,kOTISDNTelephoneMuLaw = 0x1A,kOTISDNDigital64k = 0xD,kOTISDNDigital56k = 0x25,kOTISDNVideo64k = 0x29,kOTISDNVideo56k = 0x2A,};
enum $FFEFDC583CD9A3E39879DD5EE3359846 {kDataBrowserContentHit = 0x1,kDataBrowserNothingHit = 0x0,kDataBrowserStopTracking = 0xFFFFFFFF,};
typedef AEDesc AEAddressDesc;
union AEArrayData {__int16 kAEDataArray[1];char kAEPackedArray[1];Handle kAEHandleArray[1];AEDesc kAEDescArray[1];AEKeyDesc kAEKeyDescArray[1];};
typedef AEArrayData *AEArrayDataPointer;
typedef SInt8 AEArrayType;
struct AEBuildError {AEBuildErrorCode fError;UInt32 fErrorPos;};
typedef UInt32 AEBuildErrorCode;
typedef OSErr (__fastcall *AECoerceDescProcPtr)(const AEDesc *fromDesc, DescType toType, int handlerRefcon, AEDesc *toDesc);
typedef AECoerceDescProcPtr AECoerceDescUPP;
typedef OSErr (__fastcall *AECoercePtrProcPtr)(DescType typeCode, const void *dataPtr, Size dataSize, DescType toType, int handlerRefcon, AEDesc *result);
typedef AECoercePtrProcPtr AECoercePtrUPP;
typedef AECoerceDescUPP AECoercionHandlerUPP;
typedef AEDataStorageType *AEDataStorage;
typedef struct OpaqueAEDataStorageType *AEDataStorageType;
struct AEDesc {DescType descriptorType;AEDataStorage dataHandle;};
typedef AEDesc AEDescList;
typedef AEDesc *AEDescPtr;
typedef void (__fastcall *AEDisposeExternalProcPtr)(const void *dataPtr, Size dataLength, int refcon);
typedef AEDisposeExternalProcPtr AEDisposeExternalUPP;
typedef FourCharCode AEEventClass;
typedef OSErr (__fastcall *AEEventHandlerProcPtr)(const AppleEvent *theAppleEvent, AppleEvent *reply, int handlerRefcon);
typedef AEEventHandlerProcPtr AEEventHandlerUPP;
typedef FourCharCode AEEventID;
typedef SInt8 AEEventSource;
typedef Boolean (__fastcall *AEFilterProcPtr)(EventRecord *theEvent, int returnID, int transactionID, const AEAddressDesc *sender);
typedef AEFilterProcPtr AEFilterUPP;
typedef Boolean (__fastcall *AEIdleProcPtr)(EventRecord *theEvent, int *sleepTime, RgnHandle *mouseRgn);
typedef AEIdleProcPtr AEIdleUPP;
typedef SInt8 AEInteractAllowed;
struct AEKeyDesc {AEKeyword descKey;AEDesc descContent;};
typedef FourCharCode AEKeyword;
typedef AEDescList AERecord;
typedef SInt16 AEReturnID;
typedef SInt32 AESendMode;
typedef SInt16 AESendPriority;
typedef struct OpaqueAEStreamRef *AEStreamRef;
typedef SInt32 AETransactionID;
struct AFPAlternateAddress {UInt8 fVersion;UInt8 fAddressCount;UInt8 fAddressList[1];};
typedef UInt8 AFPServerSignature[16];
struct AFPTagData {UInt8 fLength;UInt8 fType;UInt8 fData[1];};
struct AFPVolMountInfo {__int16 length;VolumeType media;__int16 flags;SInt8 nbpInterval;SInt8 nbpCount;__int16 uamType;__int16 zoneNameOffset;__int16 serverNameOffset;__int16 volNameOffset;__int16 userNameOffset;__int16 userPasswordOffset;__int16 volPasswordOffset;char AFPData[144];};
typedef AFPVolMountInfo *AFPVolMountInfoPtr;
struct AFPXVolMountInfo {__int16 length;VolumeType media;__int16 flags;SInt8 nbpInterval;SInt8 nbpCount;__int16 uamType;__int16 zoneNameOffset;__int16 serverNameOffset;__int16 volNameOffset;__int16 userNameOffset;__int16 userPasswordOffset;__int16 volPasswordOffset;__int16 extendedFlags;__int16 uamNameOffset;__int16 alternateAddressOffset;char AFPData[176];};
typedef AFPXVolMountInfo *AFPXVolMountInfoPtr;
typedef SInt16 AHTOCType;
struct AIFFLoop {__int16 playMode;MarkerIdType beginLoop;MarkerIdType endLoop;};
typedef OSStatus (__fastcall *ATSCubicClosePathProcPtr)(void *callBackDataPtr);
typedef ATSCubicClosePathProcPtr ATSCubicClosePathUPP;
typedef OSStatus (__fastcall *ATSCubicCurveToProcPtr)(const Float32Point *pt1, const Float32Point *pt2, const Float32Point *pt3, void *callBackDataPtr);
typedef ATSCubicCurveToProcPtr ATSCubicCurveToUPP;
typedef OSStatus (__fastcall *ATSCubicLineToProcPtr)(const Float32Point *pt, void *callBackDataPtr);
typedef ATSCubicLineToProcPtr ATSCubicLineToUPP;
typedef OSStatus (__fastcall *ATSCubicMoveToProcPtr)(const Float32Point *pt, void *callBackDataPtr);
typedef ATSCubicMoveToProcPtr ATSCubicMoveToUPP;
typedef UInt16 ATSCurveType;
struct ATSFlatDataFontNameDataHeader {ATSFlatDataFontSpeciferType nameSpecifierType;ByteCount nameSpecifierSize;};
struct ATSFlatDataFontSpecRawNameData {FontNameCode fontNameType;FontPlatformCode fontNamePlatform;FontScriptCode fontNameScript;FontLanguageCode fontNameLanguage;ByteCount fontNameLength;};
struct ATSFlatDataFontSpecRawNameDataHeader {ItemCount numberOfFlattenedNames;ATSFlatDataFontSpecRawNameData nameDataArray[1];};
typedef UInt32 ATSFlatDataFontSpeciferType;
struct ATSFlatDataLayoutControlsDataHeader {ItemCount numberOfLayoutControls;ATSUAttributeInfo controlArray[1];};
struct ATSFlatDataLineInfoData {UniCharCount lineLength;ItemCount numberOfLineControls;};
struct ATSFlatDataLineInfoHeader {ItemCount numberOfLines;ATSFlatDataLineInfoData lineInfoArray[1];};
struct ATSFlatDataMainHeaderBlock {UInt32 version;ByteCount sizeOfDataBlock;ByteCount offsetToTextLayouts;ByteCount offsetToStyleRuns;ByteCount offsetToStyleList;};
struct ATSFlatDataStyleListFeatureData {ATSUFontFeatureType theFeatureType;ATSUFontFeatureSelector theFeatureSelector;};
struct ATSFlatDataStyleListHeader {ItemCount numberOfStyles;ATSFlatDataStyleListStyleDataHeader styleDataArray[1];};
struct ATSFlatDataStyleListStyleDataHeader {ByteCount sizeOfStyleInfo;ItemCount numberOfSetAttributes;ItemCount numberOfSetFeatures;ItemCount numberOfSetVariations;};
struct ATSFlatDataStyleListVariationData {ATSUFontVariationAxis theVariationAxis;ATSUFontVariationValue theVariationValue;};
struct ATSFlatDataStyleRunDataHeader {ItemCount numberOfStyleRuns;ATSUStyleRunInfo styleRunArray[1];};
struct ATSFlatDataTextLayoutDataHeader {ByteCount sizeOfLayoutData;ByteCount textLayoutLength;ByteCount offsetToLayoutControls;ByteCount offsetToLineInfo;};
typedef OSStatus (__fastcall *ATSFontApplierFunction)(ATSFontRef iFont, void *iRefCon);
typedef UInt32 ATSFontContainerRef;
typedef UInt32 ATSFontContext;
typedef OSStatus (__fastcall *ATSFontFamilyApplierFunction)(ATSFontFamilyRef iFamily, void *iRefCon);
typedef struct ATSFontFamilyIterator_ *ATSFontFamilyIterator;
typedef UInt32 ATSFontFamilyRef;
struct ATSFontFilter {UInt32 version;ATSFontFilterSelector filterSelector;union ATSFontFilter::$3D6AC9D9984E818E3F2FA19C28E90004 filter;};
union ATSFontFilter::$3D6AC9D9984E818E3F2FA19C28E90004 {ATSGeneration generationFilter;ATSFontFamilyRef fontFamilyFilter;ATSFontFamilyApplierFunction fontFamilyApplierFunctionFilter;ATSFontApplierFunction fontApplierFunctionFilter;};
enum ATSFontFilterSelector {kATSFontFilterSelectorUnspecified = 0x0,kATSFontFilterSelectorGeneration = 0x3,kATSFontFilterSelectorFontFamily = 0x7,kATSFontFilterSelectorFontFamilyApplierFunction = 0x8,kATSFontFilterSelectorFontApplierFunction = 0x9,};
typedef UInt32 ATSFontFormat;
typedef struct ATSFontIterator_ *ATSFontIterator;
struct ATSFontMetrics {UInt32 version;Float32 ascent;Float32 descent;Float32 leading;Float32 avgAdvanceWidth;Float32 maxAdvanceWidth;Float32 minLeftSideBearing;Float32 minRightSideBearing;Float32 stemWidth;Float32 stemHeight;Float32 capHeight;Float32 xHeight;Float32 italicAngle;Float32 underlinePosition;Float32 underlineThickness;};
typedef struct ATSFontNotificationInfoRef_ *ATSFontNotificationInfoRef;
typedef struct ATSFontNotificationRef_ *ATSFontNotificationRef;
enum ATSFontNotifyAction {kATSFontNotifyActionFontsChanged = 0x1,kATSFontNotifyActionDirectoriesChanged = 0x2,};
enum ATSFontNotifyOption {kATSFontNotifyOptionDefault = 0x0,kATSFontNotifyOptionReceiveWhileSuspended = 0x1,};
typedef CFPropertyListRef (__fastcall *ATSFontQueryCallback)(ATSFontQueryMessageID msgid, CFPropertyListRef data, void *refCon);
enum ATSFontQueryMessageID {kATSQueryActivateFontMessage = 0x61747361,};
struct ATSFontQuerySourceContext {UInt32 version;void *refCon;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;};
typedef UInt32 ATSFontRef;
typedef Float32 ATSFontSize;
typedef UInt32 ATSGeneration;
struct ATSGlyphIdealMetrics {Float32Point advance;Float32Point sideBearing;Float32Point otherSideBearing;};
typedef UInt32 ATSGlyphInfoFlags;
typedef UInt16 ATSGlyphRef;
struct ATSGlyphScreenMetrics {Float32Point deviceAdvance;Float32Point topLeft;UInt32 height;UInt32 width;Float32Point sideBearing;Float32Point otherSideBearing;};
typedef ATSJustWidthDeltaEntryOverride ATSJustPriorityWidthDeltaOverrides[4];
struct ATSJustWidthDeltaEntryOverride {Fixed beforeGrowLimit;Fixed beforeShrinkLimit;Fixed afterGrowLimit;Fixed afterShrinkLimit;JustificationFlags growFlags;JustificationFlags shrinkFlags;};
struct ATSLayoutRecord {ATSGlyphRef glyphID;ATSGlyphInfoFlags flags;ByteCount originalOffset;Fixed realPos;};
typedef UInt32 ATSLineLayoutOptions;
typedef void (__fastcall *ATSNotificationCallback)(ATSFontNotificationInfoRef info, void *refCon);
typedef OptionBits ATSOptionFlags;
typedef OSStatus (__fastcall *ATSQuadraticClosePathProcPtr)(void *callBackDataPtr);
typedef ATSQuadraticClosePathProcPtr ATSQuadraticClosePathUPP;
typedef OSStatus (__fastcall *ATSQuadraticCurveProcPtr)(const Float32Point *pt1, const Float32Point *controlPt, const Float32Point *pt2, void *callBackDataPtr);
typedef ATSQuadraticCurveProcPtr ATSQuadraticCurveUPP;
typedef OSStatus (__fastcall *ATSQuadraticLineProcPtr)(const Float32Point *pt1, const Float32Point *pt2, void *callBackDataPtr);
typedef ATSQuadraticLineProcPtr ATSQuadraticLineUPP;
typedef OSStatus (__fastcall *ATSQuadraticNewPathProcPtr)(void *callBackDataPtr);
typedef ATSQuadraticNewPathProcPtr ATSQuadraticNewPathUPP;
typedef UInt32 ATSStyleRenderingOptions;
struct ATSTrapezoid {FixedPoint upperLeft;FixedPoint upperRight;FixedPoint lowerRight;FixedPoint lowerLeft;};
struct ATSUAttributeInfo {ATSUAttributeTag fTag;ByteCount fValueSize;};
typedef UInt32 ATSUAttributeTag;
typedef void *ATSUAttributeValuePtr;
typedef ATSURGBAlphaColor ATSUBackgroundColor;
union ATSUBackgroundData {ATSUBackgroundColor backgroundColor;RedrawBackgroundUPP backgroundUPP;};
typedef UInt32 ATSUBackgroundDataType;
struct ATSUCaret {Fixed fX;Fixed fY;Fixed fDeltaX;Fixed fDeltaY;};
typedef UInt16 ATSUCursorMovementType;
struct ATSUCurvePath {UInt32 vectors;UInt32 controlBits[1];Float32Point vector[1];};
struct ATSUCurvePaths {UInt32 contours;ATSUCurvePath contour[1];};
typedef UInt32 ATSUDirectDataSelector;
typedef OSStatus (__fastcall *ATSUDirectLayoutOperationOverrideProcPtr)(ATSULayoutOperationSelector iCurrentOperation, ATSULineRef iLineRef, UInt32 iRefCon, void *iOperationCallbackParameterPtr, ATSULayoutOperationCallbackStatus *oCallbackStatus);
typedef ATSUDirectLayoutOperationOverrideProcPtr ATSUDirectLayoutOperationOverrideUPP;
typedef UInt32 ATSUFlattenStyleRunOptions;
typedef UInt32 ATSUFlattenedDataStreamFormat;
typedef UInt16 ATSUFontFallbackMethod;
typedef struct OpaqueATSUFontFallbacks *ATSUFontFallbacks;
typedef UInt16 ATSUFontFeatureSelector;
typedef UInt16 ATSUFontFeatureType;
typedef FMFont ATSUFontID;
typedef FourCharCode ATSUFontVariationAxis;
typedef Fixed ATSUFontVariationValue;
struct ATSUGlyphInfo {GlyphID glyphID;UInt16 reserved;UInt32 layoutFlags;UniCharArrayOffset charIndex;ATSUStyle style;Float32 deltaY;Float32 idealX;SInt16 screenX;SInt16 caretX;};
struct ATSUGlyphInfoArray {ATSUTextLayout layout;ItemCount numGlyphs;ATSUGlyphInfo glyphs[1];};
struct ATSUGlyphSelector {GlyphCollection collection;GlyphID glyphID;};
typedef UInt32 ATSUHighlightMethod;
typedef UInt32 ATSULayoutOperationCallbackStatus;
struct ATSULayoutOperationOverrideSpecifier {ATSULayoutOperationSelector operationSelector;ATSUDirectLayoutOperationOverrideUPP overrideUPP;};
typedef UInt32 ATSULayoutOperationSelector;
typedef struct ATSGlyphVector *ATSULineRef;
typedef UInt32 ATSULineTruncation;
struct ATSURGBAlphaColor {float red;float green;float blue;float alpha;};
typedef struct OpaqueATSUStyle *ATSUStyle;
typedef UInt16 ATSUStyleComparison;
struct ATSUStyleRunInfo {UniCharCount runLength;ItemCount styleObjectIndex;};
typedef struct ATSStyleSetting *ATSUStyleSettingRef;
struct ATSUTab {ATSUTextMeasurement tabPosition;ATSUTabType tabType;};
typedef UInt16 ATSUTabType;
typedef struct OpaqueATSUTextLayout *ATSUTextLayout;
typedef Fixed ATSUTextMeasurement;
typedef UInt32 ATSUUnFlattenStyleRunOptions;
struct ATSUUnhighlightData {ATSUBackgroundDataType dataType;ATSUBackgroundData unhighlightData;};
typedef UInt16 ATSUVerticalCharacterType;
typedef void *ATSvcRef;
typedef UInt32 AVIDType;
typedef SInt32 (__fastcall *AVLCompareItemsProcPtr)(AVLTreePtr tree, const void *i1, const void *i2, AVLNodeType nd_typ);
typedef AVLCompareItemsProcPtr AVLCompareItemsUPP;
typedef void (__fastcall *AVLDisposeItemProcPtr)(AVLTreePtr tree, const void *dataP);
typedef AVLDisposeItemProcPtr AVLDisposeItemUPP;
typedef UInt32 (__fastcall *AVLItemSizeProcPtr)(AVLTreePtr tree, const void *itemPtr);
typedef AVLItemSizeProcPtr AVLItemSizeUPP;
typedef UInt16 AVLNodeType;
typedef UInt16 AVLOrder;
typedef AVLTreeStruct *AVLTreePtr;
struct AVLTreeStruct {OSType signature;unsigned int privateStuff[8];};
typedef UInt16 AVLVisitStage;
typedef OSErr (__fastcall *AVLWalkProcPtr)(AVLTreePtr tree, const void *dataP, AVLVisitStage visitStage, AVLNodeType node, UInt32 level, SInt32 balance, void *refCon);
typedef AVLWalkProcPtr AVLWalkUPP;
typedef AVLocationRec *AVLocationPtr;
struct AVLocationRec {unsigned int locationConstant;};
typedef VDPowerStateRec *AVPowerStatePtr;
typedef VDPowerStateRec AVPowerStateRec;
typedef SInt32 AXError;
typedef void (__fastcall *AXObserverCallback)(AXObserverRef observer, AXUIElementRef element, CFStringRef notification, void *refcon);
typedef struct __AXObserver *AXObserverRef;
typedef struct __AXUIElement *AXUIElementRef;
typedef enum $55C70B9EC1819C4D16EFD6E7BDEAA2CD AXValueType;
typedef UnsignedWide AbsoluteTime;
struct AccessParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 filler3;__int16 ioDenyModes;__int16 filler4;SInt8 filler5;SInt8 ioACUser;int filler6;int ioACOwnerID;int ioACGroupID;int ioACAccess;int ioDirID;};
typedef AccessParam *AccessParamPtr;
struct ActivityInfo {__int16 ActivityType;unsigned int ActivityTime;};
struct AddressRange {void *base;ByteCount length;};
typedef AddressRange *AddressRangeTablePtr;
typedef MPAddressSpaceID AddressSpaceID;
typedef AlertStdAlertParamRec *AlertStdAlertParamPtr;
struct AlertStdAlertParamRec {Boolean movable;Boolean helpButton;ModalFilterUPP filterProc;ConstStringPtr defaultText;ConstStringPtr cancelText;ConstStringPtr otherText;SInt16 defaultButton;SInt16 cancelButton;UInt16 position;};
typedef AlertStdCFStringAlertParamRec *AlertStdCFStringAlertParamPtr;
struct AlertStdCFStringAlertParamRec {UInt32 version;Boolean movable;Boolean helpButton;CFStringRef defaultText;CFStringRef cancelText;CFStringRef otherText;SInt16 defaultButton;SInt16 cancelButton;UInt16 position;OptionBits flags;};
typedef AlertTPtr *AlertTHndl;
typedef AlertTemplate *AlertTPtr;
struct AlertTemplate {Rect boundsRect;SInt16 itemsID;StageList stages;};
typedef SInt16 AlertType;
typedef Boolean (__fastcall *AliasFilterProcPtr)(CInfoPBPtr cpbPtr, Boolean *quitFlag, Ptr myDataPtr);
typedef AliasFilterProcPtr AliasFilterUPP;
typedef AliasPtr *AliasHandle;
typedef __int16 AliasInfoType;
typedef AliasRecord *AliasPtr;
struct AliasRecord {OSType userType;unsigned __int16 aliasSize;};
struct AppParameters {struct AppParameters::$AFFA74FBDC33928BEE17407D5FEEFA09 theMsgEvent;unsigned int eventRefCon;unsigned int messageLength;};
struct AppParameters::$AFFA74FBDC33928BEE17407D5FEEFA09 {UInt16 what;UInt32 message;UInt32 when;Point where;UInt16 modifiers;};
typedef AppParameters *AppParametersPtr;
typedef AERecord AppleEvent;
typedef AppleEvent *AppleEventPtr;
struct AppleTalkInfo {DDPAddress fOurAddress;DDPAddress fRouterAddress;UInt16 fCableRange[2];UInt16 fFlags;};
struct ApplicationSpecificChunk {ID ckID;int ckSize;OSType applicationSignature;UInt8 data[1];};
typedef ApplicationSpecificChunk *ApplicationSpecificChunkPtr;
typedef struct OpaqueAreaID *AreaID;
struct AsscEntry {__int16 fontSize;__int16 fontStyle;__int16 fontID;};
struct AudioEndianAtom {int size;OSType atomType;__int16 littleEndian;};
typedef AudioEndianAtom *AudioEndianAtomPtr;
struct AudioFormatAtom {int size;OSType atomType;OSType format;};
typedef AudioFormatAtom *AudioFormatAtomPtr;
struct AudioInfo {int capabilitiesFlags;int reserved;unsigned __int16 numVolumeSteps;};
typedef AudioInfo *AudioInfoPtr;
struct AudioRecordingChunk {ID ckID;int ckSize;UInt8 AESChannelStatus[24];};
typedef AudioRecordingChunk *AudioRecordingChunkPtr;
struct AudioSelection {int unitType;UnsignedFixed selStart;UnsignedFixed selEnd;};
typedef AudioSelection *AudioSelectionPtr;
struct AudioTerminatorAtom {int size;OSType atomType;};
typedef AudioTerminatorAtom *AudioTerminatorAtomPtr;
struct BTHeaderRec {UInt16 treeDepth;UInt32 rootNode;UInt32 leafRecords;UInt32 firstLeafNode;UInt32 lastLeafNode;UInt16 nodeSize;UInt16 maxKeyLength;UInt32 totalNodes;UInt32 freeNodes;UInt16 reserved1;UInt32 clumpSize;UInt8 btreeType;UInt8 reserved2;UInt32 attributes;UInt32 reserved3[16];};
struct BTNodeDescriptor {UInt32 fLink;UInt32 bLink;SInt8 kind;UInt8 height;UInt16 numRecords;UInt16 reserved;};
typedef SInt16 BalloonVariant;
struct BasicWindowDescription {UInt32 descriptionSize;Rect windowContentRect;Rect windowZoomRect;UInt32 windowRefCon;UInt32 windowStateFlags;WindowPositionMethod windowPositionMethod;UInt32 windowDefinitionVersion;union BasicWindowDescription::$68311BF802A86D4F211A7435D3A0B4EB windowDefinition;};
union BasicWindowDescription::$68311BF802A86D4F211A7435D3A0B4EB {struct BasicWindowDescription::$68311BF802A86D4F211A7435D3A0B4EB::$C2A188CAA5990E612D0F1CC4BC5FDD06 versionOne;struct BasicWindowDescription::$68311BF802A86D4F211A7435D3A0B4EB::$D6C4ED71B25EA449D96971768FCD0008 versionTwo;};
struct BasicWindowDescription::$68311BF802A86D4F211A7435D3A0B4EB::$C2A188CAA5990E612D0F1CC4BC5FDD06 {SInt16 windowDefProc;Boolean windowHasCloseBox;};
struct BasicWindowDescription::$68311BF802A86D4F211A7435D3A0B4EB::$D6C4ED71B25EA449D96971768FCD0008 {WindowClass windowClass;WindowAttributes windowAttributes;};
typedef SInt8 BatteryByte;
struct BatteryInfo {UInt8 flags;UInt8 warningLevel;UInt8 reserved;UInt8 batteryLevel;};
struct BatteryTimeRec {unsigned int expectedBatteryTime;unsigned int minimumBatteryTime;unsigned int maximumBatteryTime;unsigned int timeUntilCharged;};
typedef Fixed BigEndianFixed;
typedef int BigEndianLong;
typedef OSType BigEndianOSType;
typedef __int16 BigEndianShort;
typedef UnsignedFixed BigEndianUnsignedFixed;
typedef unsigned int BigEndianUnsignedLong;
typedef unsigned __int16 BigEndianUnsignedShort;
struct BitMap {Ptr baseAddr;__int16 rowBytes;Rect bounds;};
typedef BitMapPtr *BitMapHandle;
typedef BitMap *BitMapPtr;
typedef __int16 Bits16[16];
struct Block0 {UInt16 sbSig;UInt16 sbBlkSize;UInt32 sbBlkCount;UInt16 sbDevType;UInt16 sbDevId;UInt32 sbData;UInt16 sbDrvrCount;UInt32 ddBlock;UInt16 ddSize;UInt16 ddType;UInt16 ddPad[243];};
typedef unsigned __int8 Boolean;
struct BreakTable {char charTypes[256];__int16 tripleLength;__int16 triples[1];};
typedef BreakTable *BreakTablePtr;
typedef UInt32 BslnBaselineClass;
typedef Fixed BslnBaselineRecord[32];
struct BslnFormat0Part {SInt16 deltas[32];};
struct BslnFormat1Part {SInt16 deltas[32];SFNTLookupTable mappingData;};
struct BslnFormat2Part {UInt16 stdGlyph;SInt16 ctlPoints[32];};
struct BslnFormat3Part {UInt16 stdGlyph;SInt16 ctlPoints[32];SFNTLookupTable mappingData;};
union BslnFormatUnion {BslnFormat0Part fmt0Part;BslnFormat1Part fmt1Part;BslnFormat2Part fmt2Part;BslnFormat3Part fmt3Part;};
struct BslnTable {Fixed version;BslnTableFormat format;UInt16 defaultBaseline;BslnFormatUnion parts;};
typedef UInt16 BslnTableFormat;
typedef BslnTable *BslnTablePtr;
typedef UInt8 Byte;
typedef UInt32 ByteCount;
typedef UInt32 ByteOffset;
typedef UInt8 *BytePtr;
struct CCMiscInfo {UInt32 connectionStatus;UInt32 connectionTimeElapsed;UInt32 connectionTimeRemaining;UInt32 bytesTransmitted;UInt32 bytesReceived;UInt32 reserved;};
typedef CCTabPtr *CCTabHandle;
typedef CtlCTab *CCTabPtr;
struct CCrsr {__int16 crsrType;PixMapHandle crsrMap;Handle crsrData;Handle crsrXData;__int16 crsrXValid;Handle crsrXHandle;Bits16 crsr1Data;Bits16 crsrMask;Point crsrHotSpot;int crsrXTable;int crsrID;};
typedef CCrsrPtr *CCrsrHandle;
typedef CCrsr *CCrsrPtr;
union CDB {BytePtr cdbPtr;UInt8 cdbBytes[16];};
typedef CDB *CDBPtr;
typedef CFTimeInterval CFAbsoluteTime;
typedef void *(__fastcall *CFAllocatorAllocateCallBack)(CFIndex allocSize, CFOptionFlags hint, void *info);
typedef struct $4E997CC0510DF9B95FB93C0C312947A9 CFAllocatorContext;
typedef CFStringRef (__fastcall *CFAllocatorCopyDescriptionCallBack)(const void *info);
typedef void (__fastcall *CFAllocatorDeallocateCallBack)(void *ptr, void *info);
typedef CFIndex (__fastcall *CFAllocatorPreferredSizeCallBack)(CFIndex size, CFOptionFlags hint, void *info);
typedef void *(__fastcall *CFAllocatorReallocateCallBack)(void *ptr, CFIndex newsize, CFOptionFlags hint, void *info);
typedef const struct __CFAllocator *CFAllocatorRef;
typedef void (__fastcall *CFAllocatorReleaseCallBack)(const void *info);
typedef const void *(__fastcall *CFAllocatorRetainCallBack)(const void *info);
typedef void (__fastcall *CFArrayApplierFunction)(const void *value, void *context);
typedef struct $BEAFDCE0A32D482ACFF952D2E196CC9B CFArrayCallBacks;
typedef CFStringRef (__fastcall *CFArrayCopyDescriptionCallBack)(const void *value);
typedef Boolean (__fastcall *CFArrayEqualCallBack)(const void *value1, const void *value2);
typedef const struct __CFArray *CFArrayRef;
typedef void (__fastcall *CFArrayReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef const void *(__fastcall *CFArrayRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (__fastcall *CFBagApplierFunction)(const void *value, void *context);
typedef struct $2870BF0A11D62C2BAB99A23C79EFA86B CFBagCallBacks;
typedef CFStringRef (__fastcall *CFBagCopyDescriptionCallBack)(const void *value);
typedef Boolean (__fastcall *CFBagEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (__fastcall *CFBagHashCallBack)(const void *value);
typedef const struct __CFBag *CFBagRef;
typedef void (__fastcall *CFBagReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef const void *(__fastcall *CFBagRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (__fastcall *CFBinaryHeapApplierFunction)(const void *val, void *context);
typedef struct $3805DC96D7729D989786B86BA1DC19E6 CFBinaryHeapCallBacks;
typedef struct $D6728100C84E3BC066EE122B7BC78D3A CFBinaryHeapCompareContext;
typedef struct __CFBinaryHeap *CFBinaryHeapRef;
typedef UInt32 CFBit;
typedef const struct __CFBitVector *CFBitVectorRef;
typedef const struct __CFBoolean *CFBooleanRef;
typedef struct __CFBundle *CFBundleRef;
typedef enum __CFByteOrder CFByteOrder;
typedef enum $DC44859D6FB1393DCFE0EE3DF7C48461 CFCharacterSetPredefinedSet;
typedef const struct __CFCharacterSet *CFCharacterSetRef;
typedef CFComparisonResult (__fastcall *CFComparatorFunction)(const void *val1, const void *val2, void *context);
typedef enum $E72284104A6319CA47B3C718B2E24F29 CFComparisonResult;
typedef const struct __CFData *CFDataRef;
typedef const struct __CFDate *CFDateRef;
typedef void (__fastcall *CFDictionaryApplierFunction)(const void *key, const void *value, void *context);
typedef CFStringRef (__fastcall *CFDictionaryCopyDescriptionCallBack)(const void *value);
typedef Boolean (__fastcall *CFDictionaryEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (__fastcall *CFDictionaryHashCallBack)(const void *value);
typedef struct $58E56D0A3AC374B00DC754288770DE5B CFDictionaryKeyCallBacks;
typedef const struct __CFDictionary *CFDictionaryRef;
typedef void (__fastcall *CFDictionaryReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef const void *(__fastcall *CFDictionaryRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef struct $38F21E503577E91FC3176BE5FAB8D74D CFDictionaryValueCallBacks;
typedef struct $0001B0EE5CB471E2850D214488412138 CFGregorianDate;
typedef enum $ECAF5A2F73172FB898FF768E7D9E2DE3 CFGregorianUnitFlags;
typedef struct $523A9F483328EA8C653B50B6796CEBEC CFGregorianUnits;
typedef struct __CFHTTPMessage *CFHTTPMessageRef;
typedef UInt32 CFHashCode;
typedef void (__fastcall *CFHostClientCallBack)(CFHostRef theHost, CFHostInfoType typeInfo, const CFStreamError *error, void *info);
struct CFHostClientContext {CFIndex version;void *info;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;CFAllocatorCopyDescriptionCallBack copyDescription;};
enum CFHostInfoType {kCFHostAddresses = 0x0,kCFHostNames = 0x1,kCFHostReachability = 0x2,};
typedef struct __CFHost *CFHostRef;
typedef SInt32 CFIndex;
typedef void (__fastcall *CFMachPortCallBack)(CFMachPortRef port, void *msg, CFIndex size, void *info);
typedef struct $D6728100C84E3BC066EE122B7BC78D3A CFMachPortContext;
typedef void (__fastcall *CFMachPortInvalidationCallBack)(CFMachPortRef port, void *info);
typedef struct __CFMachPort *CFMachPortRef;
typedef CFDataRef (__fastcall *CFMessagePortCallBack)(CFMessagePortRef local, SInt32 msgid, CFDataRef data, void *info);
typedef struct $D6728100C84E3BC066EE122B7BC78D3A CFMessagePortContext;
typedef void (__fastcall *CFMessagePortInvalidationCallBack)(CFMessagePortRef ms, void *info);
typedef struct __CFMessagePort *CFMessagePortRef;
typedef struct __CFArray *CFMutableArrayRef;
typedef struct __CFBag *CFMutableBagRef;
typedef struct __CFBitVector *CFMutableBitVectorRef;
typedef struct __CFCharacterSet *CFMutableCharacterSetRef;
typedef struct __CFData *CFMutableDataRef;
typedef struct __CFDictionary *CFMutableDictionaryRef;
typedef struct __CFSet *CFMutableSetRef;
typedef struct __CFString *CFMutableStringRef;
typedef void (__fastcall *CFNetServiceBrowserClientCallBack)(CFNetServiceBrowserRef browser, CFOptionFlags flags, CFTypeRef domainOrService, CFStreamError *error, void *info);
typedef struct __CFNetServiceBrowser *CFNetServiceBrowserRef;
typedef void (__fastcall *CFNetServiceClientCallBack)(CFNetServiceRef theService, CFStreamError *error, void *info);
struct CFNetServiceClientContext {CFIndex version;void *info;CFAllocatorRetainCallBack retain;CFAllocatorReleaseCallBack release;CFAllocatorCopyDescriptionCallBack copyDescription;};
typedef struct __CFNetService *CFNetServiceRef;
enum CFNetServicesError {kCFNetServicesErrorUnknown = 0xFFFEE6C0,kCFNetServicesErrorCollision = 0xFFFEE6BF,kCFNetServicesErrorNotFound = 0xFFFEE6BE,kCFNetServicesErrorInProgress = 0xFFFEE6BD,kCFNetServicesErrorBadArgument = 0xFFFEE6BC,kCFNetServicesErrorCancel = 0xFFFEE6BB,kCFNetServicesErrorInvalid = 0xFFFEE6BA,};
typedef void (__fastcall *CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo);
typedef struct __CFNotificationCenter *CFNotificationCenterRef;
typedef enum $DBA047679F6933A588A9C46207FF8881 CFNotificationSuspensionBehavior;
typedef const struct __CFNull *CFNullRef;
typedef const struct __CFNumber *CFNumberRef;
typedef enum $DDF917F3B0CA77944968056AE5FF35BD CFNumberType;
typedef UInt32 CFOptionFlags;
typedef void (__fastcall *CFPlugInDynamicRegisterFunction)(CFPlugInRef plugIn);
typedef void *(__fastcall *CFPlugInFactoryFunction)(CFAllocatorRef allocator, CFUUIDRef typeUUID);
typedef void (__fastcall *CFPlugInInstanceDeallocateInstanceDataFunction)(void *instanceData);
typedef Boolean (__fastcall *CFPlugInInstanceGetInterfaceFunction)(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
typedef struct __CFPlugInInstance *CFPlugInInstanceRef;
typedef struct __CFBundle *CFPlugInRef;
typedef void (__fastcall *CFPlugInUnloadFunction)(CFPlugInRef plugIn);
typedef enum $AAA5C25531AE86BA2D3664E4224783FB CFPropertyListFormat;
typedef enum $8DB35FE5B0E11FAC891D260488BB5F46 CFPropertyListMutabilityOptions;
typedef CFTypeRef CFPropertyListRef;
typedef struct $BC7F95E68ADD91E8DBBA9E516D5899BB CFRange;
typedef void (__fastcall *CFReadStreamClientCallBack)(CFReadStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);
typedef struct __CFReadStream *CFReadStreamRef;
typedef enum $AD2CE5B9F9B3F0DC238AE97EC382AC06 CFRunLoopActivity;
typedef void (__fastcall *CFRunLoopObserverCallBack)(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info);
typedef struct $D6728100C84E3BC066EE122B7BC78D3A CFRunLoopObserverContext;
typedef struct __CFRunLoopObserver *CFRunLoopObserverRef;
typedef struct __CFRunLoop *CFRunLoopRef;
typedef struct $1A30D2CE57D4B503672205761917D3EA CFRunLoopSourceContext;
typedef struct $C0B3C1360BA6A3735E000248733A6652 CFRunLoopSourceContext1;
typedef struct __CFRunLoopSource *CFRunLoopSourceRef;
typedef void (__fastcall *CFRunLoopTimerCallBack)(CFRunLoopTimerRef timer, void *info);
typedef struct $D6728100C84E3BC066EE122B7BC78D3A CFRunLoopTimerContext;
typedef struct __CFRunLoopTimer *CFRunLoopTimerRef;
typedef void (__fastcall *CFSetApplierFunction)(const void *value, void *context);
typedef struct $0586885F8AB871FEABB9BE424A5B7704 CFSetCallBacks;
typedef CFStringRef (__fastcall *CFSetCopyDescriptionCallBack)(const void *value);
typedef Boolean (__fastcall *CFSetEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (__fastcall *CFSetHashCallBack)(const void *value);
typedef const struct __CFSet *CFSetRef;
typedef void (__fastcall *CFSetReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef const void *(__fastcall *CFSetRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (__fastcall *CFSocketCallBack)(CFSocketRef s, CFSocketCallBackType type, CFDataRef address, const void *data, void *info);
typedef enum $200FA646B4E4D0A70C1E98006203F395 CFSocketCallBackType;
typedef struct $D6728100C84E3BC066EE122B7BC78D3A CFSocketContext;
typedef enum $DCE0C641D8A92AA284FFB93B28575CB0 CFSocketError;
typedef int CFSocketNativeHandle;
typedef struct __CFSocket *CFSocketRef;
typedef struct $6BA994A3C40CEB8EB3C7E992F925E36D CFSocketSignature;
typedef struct $E46160E70B75FA525E4265DFACA77A71 CFStreamClientContext;
typedef struct $371416558E2C84A8231FBC985E0B72DB CFStreamError;
typedef enum $F8A5EA3BFB05E7E2F5CE7177B99951FB CFStreamErrorDomain;
enum CFStreamErrorHTTP {kCFStreamErrorHTTPParseFailure = 0xFFFFFFFF,kCFStreamErrorHTTPRedirectionLoop = 0xFFFFFFFE,kCFStreamErrorHTTPBadURL = 0xFFFFFFFD,};
typedef enum $CF93AEDCED8B65A9628808F5C9A8D082 CFStreamEventType;
enum CFStreamSocketSecurityProtocol {kCFStreamSocketSecurityNone = 0x0,kCFStreamSocketSecuritySSLv2 = 0x1,kCFStreamSocketSecuritySSLv3 = 0x2,kCFStreamSocketSecuritySSLv23 = 0x3,kCFStreamSocketSecurityTLSv1 = 0x4,};
typedef enum $31E6C359F8E649D61793711BB93492EB CFStreamStatus;
typedef enum $E355085ACC2DCA6671FF31ECC42E2874 CFStringBuiltInEncodings;
typedef enum $66A53D26140882007EBC959392923366 CFStringCompareFlags;
typedef UInt32 CFStringEncoding;
typedef enum $5A6B7C783DA80C9FBE50067968D2CB2B CFStringEncodings;
typedef struct $BDE20794AF78CEA5F0C68175611F4183 CFStringInlineBuffer;
typedef enum $5FA0F57FAA30BBD24B2E0A4CF9B9F780 CFStringNormalizationForm;
typedef const struct __CFString *CFStringRef;
typedef struct $DCAB87D1E815B688CA2F2CD7CE1C0D4A CFSwappedFloat32;
typedef struct $1A25B42FDC2828404DF4CEBE66EB2055 CFSwappedFloat64;
typedef double CFTimeInterval;
typedef const struct __CFTimeZone *CFTimeZoneRef;
typedef void (__fastcall *CFTreeApplierFunction)(const void *value, void *context);
typedef struct $7E41E804D45D4891723A0E2B97F120BE CFTreeContext;
typedef CFStringRef (__fastcall *CFTreeCopyDescriptionCallBack)(const void *info);
typedef struct __CFTree *CFTreeRef;
typedef void (__fastcall *CFTreeReleaseCallBack)(const void *info);
typedef const void *(__fastcall *CFTreeRetainCallBack)(const void *info);
typedef UInt32 CFTypeID;
typedef const void *CFTypeRef;
typedef enum $0E422A2F8845AB6F0250A97DB9867B0F CFURLError;
typedef enum $E084DEBDB3F824C43007240F8D9BFEAB CFURLPathStyle;
typedef const struct __CFURL *CFURLRef;
typedef struct $922AD0D9D21636A1B071122A97A972B9 CFUUIDBytes;
typedef const struct __CFUUID *CFUUIDRef;
typedef void (__fastcall *CFUserNotificationCallBack)(CFUserNotificationRef userNotification, CFOptionFlags responseFlags);
typedef struct __CFUserNotification *CFUserNotificationRef;
typedef void (__fastcall *CFWriteStreamClientCallBack)(CFWriteStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);
typedef struct __CFWriteStream *CFWriteStreamRef;
typedef struct $99142FCF86D421E8D5EF29EB262E00FD CFXMLAttributeDeclarationInfo;
typedef struct $2D96D59ABE3C8E91669C7813E262BD23 CFXMLAttributeListDeclarationInfo;
typedef struct $7438D639DE8FA9B3E7B2175970876856 CFXMLDocumentInfo;
typedef struct $9D3E2F80E25C72F4B8A53879223C74B3 CFXMLDocumentTypeInfo;
typedef struct $1BD489EEAC3D06D6AEAE66018ECFF0D5 CFXMLElementInfo;
typedef struct $286297D7ED7D1E69C987DFC5B91154C6 CFXMLElementTypeDeclarationInfo;
typedef struct $4A2316DC67BD0C62945948CC39732FF5 CFXMLEntityInfo;
typedef struct $8B195344230CD50436E2D36A83FD9340 CFXMLEntityReferenceInfo;
typedef enum $E6790A2C0D042950C6D4BAC0CF728D94 CFXMLEntityTypeCode;
typedef struct $5B33AC6813B147F5BC976B9451A73CD9 CFXMLExternalID;
typedef const struct __CFXMLNode *CFXMLNodeRef;
typedef enum $799CD7B761FFA04D296C7C37FD4E6AB0 CFXMLNodeTypeCode;
typedef struct $9D3E2F80E25C72F4B8A53879223C74B3 CFXMLNotationInfo;
typedef void (__fastcall *CFXMLParserAddChildCallBack)(CFXMLParserRef parser, void *parent, void *child, void *info);
typedef struct $C0894F3B4E67424B98057A249AB96F23 CFXMLParserCallBacks;
typedef struct $C3CAD31885235B474CF45E0CF3D6070F CFXMLParserContext;
typedef CFStringRef (__fastcall *CFXMLParserCopyDescriptionCallBack)(const void *info);
typedef void *(__fastcall *CFXMLParserCreateXMLStructureCallBack)(CFXMLParserRef parser, CFXMLNodeRef nodeDesc, void *info);
typedef void (__fastcall *CFXMLParserEndXMLStructureCallBack)(CFXMLParserRef parser, void *xmlType, void *info);
typedef Boolean (__fastcall *CFXMLParserHandleErrorCallBack)(CFXMLParserRef parser, CFXMLParserStatusCode error, void *info);
typedef enum $9BD3530F02F154804E5741B1D52E9AAA CFXMLParserOptions;
typedef struct __CFXMLParser *CFXMLParserRef;
typedef void (__fastcall *CFXMLParserReleaseCallBack)(const void *info);
typedef CFDataRef (__fastcall *CFXMLParserResolveExternalEntityCallBack)(CFXMLParserRef parser, CFXMLExternalID *extID, void *info);
typedef const void *(__fastcall *CFXMLParserRetainCallBack)(const void *info);
typedef enum $CF8B549FD94CFC9338EAE40825E972F5 CFXMLParserStatusCode;
typedef struct $5987BA5557986D944C5839CBE3538D29 CFXMLProcessingInstructionInfo;
typedef CFTreeRef CFXMLTreeRef;
typedef OSType CFragArchitecture;
struct CFragCFBundleLocator {CFBundleRef fragmentBundle;UInt32 offset;UInt32 length;};
typedef struct OpaqueCFragClosureID *CFragClosureID;
typedef struct OpaqueCFragConnectionID *CFragConnectionID;
typedef struct OpaqueCFragContainerID *CFragContainerID;
typedef MPProcessID CFragContextID;
typedef CFragSystem7InitBlock CFragInitBlock;
typedef CFragSystem7InitBlockPtr CFragInitBlockPtr;
typedef OSErr (__fastcall *CFragInitFunction)(const CFragInitBlock *initBlock);
typedef OptionBits CFragLoadOptions;
typedef UInt8 CFragLocatorKind;
struct CFragResource {UInt32 reservedA;UInt32 reservedB;UInt16 reservedC;UInt16 version;UInt32 reservedD;UInt32 reservedE;UInt32 reservedF;UInt32 reservedG;UInt16 reservedH;UInt16 memberCount;CFragResourceMember firstMember;};
struct CFragResourceExtensionHeader {UInt16 extensionKind;UInt16 extensionSize;};
typedef CFragResourceExtensionHeader *CFragResourceExtensionHeaderPtr;
typedef CFragResourcePtr *CFragResourceHandle;
struct CFragResourceMember {CFragArchitecture architecture;UInt16 reservedA;UInt8 reservedB;UInt8 updateLevel;CFragVersionNumber currentVersion;CFragVersionNumber oldDefVersion;CFragUsage1Union uUsage1;CFragUsage2Union uUsage2;CFragUsage usage;CFragLocatorKind where;UInt32 offset;UInt32 length;CFragWhere1Union uWhere1;CFragWhere2Union uWhere2;UInt16 extensionCount;UInt16 memberSize;unsigned __int8 name[16];};
typedef CFragResourceMember *CFragResourceMemberPtr;
typedef CFragResource *CFragResourcePtr;
struct CFragResourceSearchExtension {CFragResourceExtensionHeader header;OSType libKind;unsigned __int8 qualifiers[1];};
typedef CFragResourceSearchExtension *CFragResourceSearchExtensionPtr;
typedef UInt8 CFragSymbolClass;
struct CFragSystem7DiskFlatLocator {FSSpec *fileSpec;UInt32 offset;UInt32 length;};
struct CFragSystem7InitBlock {CFragContextID contextID;CFragClosureID closureID;CFragConnectionID connectionID;CFragSystem7Locator fragLocator;StringPtr libName;UInt32 reservedA;};
typedef CFragSystem7InitBlock *CFragSystem7InitBlockPtr;
struct CFragSystem7Locator {SInt32 where;union CFragSystem7Locator::$7AA3D96E2EC8B6727D2786398305CD15 u;};
union CFragSystem7Locator::$7AA3D96E2EC8B6727D2786398305CD15 {CFragSystem7DiskFlatLocator onDisk;CFragSystem7MemoryLocator inMem;CFragSystem7SegmentedLocator inSegs;CFragCFBundleLocator inBundle;};
typedef CFragSystem7Locator *CFragSystem7LocatorPtr;
struct CFragSystem7MemoryLocator {LogicalAddress address;UInt32 length;Boolean inPlace;UInt8 reservedA;UInt16 reservedB;};
struct CFragSystem7SegmentedLocator {FSSpec *fileSpec;OSType rsrcType;SInt16 rsrcID;UInt16 reservedA;};
typedef void (*CFragTermProcedure)(void);
typedef UInt8 CFragUsage;
union CFragUsage1Union {UInt32 appStackSize;};
union CFragUsage2Union {SInt16 appSubdirID;UInt16 libFlags;};
typedef UInt32 CFragVersionNumber;
union CFragWhere1Union {UInt32 spaceID;};
union CFragWhere2Union {UInt16 reserved;};
struct CGAffineTransform {float a;float b;float c;float d;float tx;float ty;};
typedef uint32_t CGBeamPosition;
typedef u_int32_t CGButtonCount;
typedef uint8_t CGByteValue;
typedef u_int16_t CGCharCode;
enum CGColorRenderingIntent {kCGRenderingIntentDefault = 0x0,kCGRenderingIntentAbsoluteColorimetric = 0x1,kCGRenderingIntentRelativeColorimetric = 0x2,kCGRenderingIntentPerceptual = 0x3,kCGRenderingIntentSaturation = 0x4,};
typedef struct CGColorSpace *CGColorSpaceRef;
typedef u_int32_t CGConfigureOption;
typedef struct CGContext *CGContextRef;
struct CGDataConsumerCallbacks {size_t (__fastcall *putBytes)(void *info, const void *buffer, size_t count);void (__fastcall *releaseConsumer)(void *info);};
typedef struct CGDataConsumer *CGDataConsumerRef;
struct CGDataProviderCallbacks {size_t (__fastcall *getBytes)(void *info, void *buffer, size_t count);void (__fastcall *skipBytes)(void *info, size_t count);void (__fastcall *rewind)(void *info);void (__fastcall *releaseProvider)(void *info);};
struct CGDataProviderDirectAccessCallbacks {const void *(__fastcall *getBytePointer)(void *info);void (__fastcall *releaseBytePointer)(void *info, const void *pointer);size_t (__fastcall *getBytes)(void *info, void *buffer, size_t offset, size_t count);void (__fastcall *releaseProvider)(void *info);};
typedef struct CGDataProvider *CGDataProviderRef;
typedef struct _CGDeviceByteColor CGDeviceByteColor;
typedef struct _CGDeviceColor CGDeviceColor;
typedef struct _CGDirectDisplayID *CGDirectDisplayID;
typedef struct _CGDirectPaletteRef *CGDirectPaletteRef;
typedef float CGDisplayBlendFraction;
typedef struct _CGDisplayConfigRef *CGDisplayConfigRef;
typedef int32_t CGDisplayCoord;
typedef uint32_t CGDisplayCount;
typedef CGError CGDisplayErr;
typedef float CGDisplayFadeInterval;
typedef uint32_t CGDisplayFadeReservationToken;
typedef float CGDisplayReservationInterval;
typedef int32_t CGError;
typedef CGError CGEventErr;
typedef uint32_t CGEventFilterMask;
typedef uint32_t CGEventSupressionState;
typedef unsigned __int16 CGFontIndex;
typedef struct CGFont *CGFontRef;
struct CGFunctionCallbacks {unsigned int version;CGFunctionEvaluateCallback evaluate;CGFunctionReleaseInfoCallback releaseInfo;};
typedef void (__fastcall *CGFunctionEvaluateCallback)(void *info, const float *in, float *out);
typedef struct CGFunction *CGFunctionRef;
typedef void (__fastcall *CGFunctionReleaseInfoCallback)(void *info);
typedef float CGGammaValue;
typedef CGFontIndex CGGlyph;
enum CGImageAlphaInfo {kCGImageAlphaNone = 0x0,kCGImageAlphaPremultipliedLast = 0x1,kCGImageAlphaPremultipliedFirst = 0x2,kCGImageAlphaLast = 0x3,kCGImageAlphaFirst = 0x4,kCGImageAlphaNoneSkipLast = 0x5,kCGImageAlphaNoneSkipFirst = 0x6,};
typedef struct CGImage *CGImageRef;
enum CGInterpolationQuality {kCGInterpolationDefault = 0x0,kCGInterpolationNone = 0x1,kCGInterpolationLow = 0x2,kCGInterpolationHigh = 0x3,};
typedef u_int16_t CGKeyCode;
enum CGLineCap {kCGLineCapButt = 0x0,kCGLineCapRound = 0x1,kCGLineCapSquare = 0x2,};
enum CGLineJoin {kCGLineJoinMiter = 0x0,kCGLineJoinRound = 0x1,kCGLineJoinBevel = 0x2,};
typedef int32_t CGMouseDelta;
typedef struct CGPath *CGMutablePathRef;
typedef uint32_t CGOpenGLDisplayMask;
typedef struct CGPDFDocument *CGPDFDocumentRef;
typedef float CGPaletteBlendFraction;
typedef void (__fastcall *CGPathApplierFunction)(void *info, const CGPathElement *element);
enum CGPathDrawingMode {kCGPathFill = 0x0,kCGPathEOFill = 0x1,kCGPathStroke = 0x2,kCGPathFillStroke = 0x3,kCGPathEOFillStroke = 0x4,};
struct CGPathElement {CGPathElementType type;CGPoint *points;};
enum CGPathElementType {kCGPathElementMoveToPoint = 0x0,kCGPathElementAddLineToPoint = 0x1,kCGPathElementAddQuadCurveToPoint = 0x2,kCGPathElementAddCurveToPoint = 0x3,kCGPathElementCloseSubpath = 0x4,};
typedef const struct CGPath *CGPathRef;
struct CGPatternCallbacks {unsigned int version;CGPatternDrawPatternCallback drawPattern;CGPatternReleaseInfoCallback releaseInfo;};
typedef void (__fastcall *CGPatternDrawPatternCallback)(void *info, CGContextRef c);
typedef struct CGPattern *CGPatternRef;
typedef void (__fastcall *CGPatternReleaseInfoCallback)(void *info);
enum CGPatternTiling {kCGPatternTilingNoDistortion = 0x0,kCGPatternTilingConstantSpacingMinimalDistortion = 0x1,kCGPatternTilingConstantSpacing = 0x2,};
struct CGPoint {float x;float y;};
struct CGRect {CGPoint origin;CGSize size;};
typedef u_int32_t CGRectCount;
enum CGRectEdge {CGRectMinXEdge = 0x0,CGRectMinYEdge = 0x1,CGRectMaxXEdge = 0x2,CGRectMaxYEdge = 0x3,};
typedef double CGRefreshRate;
typedef void (__fastcall *CGScreenRefreshCallback)(CGRectCount count, const CGRect *rectArray, void *userParameter);
typedef struct CGShading *CGShadingRef;
struct CGSize {float width;float height;};
typedef uint32_t CGTableCount;
enum CGTextDrawingMode {kCGTextFill = 0x0,kCGTextStroke = 0x1,kCGTextFillStroke = 0x2,kCGTextInvisible = 0x3,kCGTextFillClip = 0x4,kCGTextStrokeClip = 0x5,kCGTextFillStrokeClip = 0x6,kCGTextClip = 0x7,};
enum CGTextEncoding {kCGEncodingFontSpecific = 0x0,kCGEncodingMacRoman = 0x1,};
typedef u_int32_t CGWheelCount;
typedef int32_t CGWindowLevel;
typedef int32_t CGWindowLevelKey;
typedef GrafPtr CGrafPtr;
struct CIcon {PixMap iconPMap;BitMap iconMask;BitMap iconBMap;Handle iconData;SInt16 iconMaskData[1];};
typedef CIconPtr *CIconHandle;
typedef CIcon *CIconPtr;
typedef CInfoPBRec *CInfoPBPtr;
union CInfoPBRec {HFileInfo hFileInfo;DirInfo dirInfo;};
struct CM2Header {UInt32 size;OSType CMMType;UInt32 profileVersion;OSType profileClass;OSType dataColorSpace;OSType profileConnectionSpace;CMDateTime dateTime;OSType CS2profileSignature;OSType platform;UInt32 flags;OSType deviceManufacturer;UInt32 deviceModel;UInt32 deviceAttributes[2];UInt32 renderingIntent;CMFixedXYZColor white;OSType creator;char reserved[44];};
struct CM2Profile {CM2Header header;CMTagElemTable tagTable;char elemData[1];};
typedef CM2ProfilePtr *CM2ProfileHandle;
typedef CM2Profile *CM2ProfilePtr;
struct CM4Header {UInt32 size;OSType CMMType;UInt32 profileVersion;OSType profileClass;OSType dataColorSpace;OSType profileConnectionSpace;CMDateTime dateTime;OSType CS2profileSignature;OSType platform;UInt32 flags;OSType deviceManufacturer;UInt32 deviceModel;UInt32 deviceAttributes[2];UInt32 renderingIntent;CMFixedXYZColor white;OSType creator;CMProfileMD5 digest;char reserved[28];};
struct CMAdaptationMatrixType {OSType typeDescriptor;unsigned int reserved;Fixed adaptationMatrix[9];};
union CMAppleProfileHeader {CMHeader cm1;CM2Header cm2;CM4Header cm4;};
struct CMBitmap {char *image;int width;int height;int rowBytes;int pixelSize;CMBitmapColorSpace space;int user1;int user2;};
typedef Boolean (__fastcall *CMBitmapCallBackProcPtr)(int progress, void *refCon);
typedef CMBitmapCallBackProcPtr CMBitmapCallBackUPP;
typedef UInt32 CMBitmapColorSpace;
struct CMBufferLocation {void *buffer;UInt32 size;};
struct CMCMYColor {UInt16 cyan;UInt16 magenta;UInt16 yellow;};
struct CMCMYKColor {UInt16 cyan;UInt16 magenta;UInt16 yellow;UInt16 black;};
struct CMCWInfoRecord {UInt32 cmmCount;CMMInfoRecord cmmInfo[2];};
typedef UInt32 CMChromaticAdaptation;
union CMColor {CMRGBColor rgb;CMHSVColor hsv;CMHLSColor hls;CMXYZColor XYZ;CMLabColor Lab;CMLuvColor Luv;CMYxyColor Yxy;CMCMYKColor cmyk;CMCMYColor cmy;CMGrayColor gray;CMMultichannel5Color mc5;CMMultichannel6Color mc6;CMMultichannel7Color mc7;CMMultichannel8Color mc8;CMNamedColor namedColor;};
typedef Boolean (__fastcall *CMConcatCallBackProcPtr)(int progress, void *refCon);
typedef CMConcatCallBackProcPtr CMConcatCallBackUPP;
struct CMConcatProfileSet {UInt16 keyIndex;UInt16 count;CMProfileRef profileSet[1];};
typedef CMError (__fastcall *CMCountImageProfilesProcPtr)(const FSSpec *spec, UInt32 *count);
struct CMCurveType {OSType typeDescriptor;UInt32 reserved;UInt32 countValue;UInt16 data[1];};
struct CMDataType {OSType typeDescriptor;UInt32 reserved;UInt32 dataFlag;char data[1];};
struct CMDateTime {UInt16 year;UInt16 month;UInt16 dayOfTheMonth;UInt16 hours;UInt16 minutes;UInt16 seconds;};
struct CMDateTimeType {OSType typeDescriptor;UInt32 reserved;CMDateTime dateTime;};
typedef OSType CMDeviceClass;
typedef UInt32 CMDeviceID;
struct CMDeviceInfo {UInt32 dataVersion;CMDeviceClass deviceClass;CMDeviceID deviceID;CMDeviceScope deviceScope;CMDeviceState deviceState;CMDeviceProfileID defaultProfileID;CFDictionaryRef *deviceName;UInt32 profileCount;UInt32 reserved;};
typedef CMDeviceInfo *CMDeviceInfoPtr;
struct CMDeviceProfileArray {UInt32 profileCount;CMDeviceProfileInfo profiles[1];};
typedef CMDeviceProfileArray *CMDeviceProfileArrayPtr;
typedef UInt32 CMDeviceProfileID;
struct CMDeviceProfileInfo {UInt32 dataVersion;CMDeviceProfileID profileID;CMProfileLocation profileLoc;CFDictionaryRef profileName;UInt32 reserved;};
typedef CMDeviceScope CMDeviceProfileScope;
struct CMDeviceScope {CFStringRef deviceUser;CFStringRef deviceHost;};
typedef UInt32 CMDeviceState;
typedef UInt32 CMDisplayIDType;
typedef CMError (__fastcall *CMEmbedImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, CMProfileRef embProf);
typedef int CMError;
struct CMFileLocation {FSSpec spec;};
struct CMFixedXYColor {Fixed x;Fixed y;};
struct CMFixedXYZColor {Fixed X;Fixed Y;Fixed Z;};
typedef OSErr (__fastcall *CMFlattenProcPtr)(int command, int *size, void *data, void *refCon);
typedef CMFlattenProcPtr CMFlattenUPP;
typedef CMError (__fastcall *CMGetImageSpaceProcPtr)(const FSSpec *spec, OSType *space);
typedef CMError (__fastcall *CMGetIndImageProfileProcPtr)(const FSSpec *spec, UInt32 index, CMProfileRef *prof);
struct CMGrayColor {UInt16 gray;};
struct CMHLSColor {UInt16 hue;UInt16 lightness;UInt16 saturation;};
struct CMHSVColor {UInt16 hue;UInt16 saturation;UInt16 value;};
struct CMHandleLocation {Handle h;};
struct CMHeader {UInt32 size;OSType CMMType;UInt32 applProfileVersion;OSType dataType;OSType deviceType;OSType deviceManufacturer;UInt32 deviceModel;UInt32 deviceAttributes[2];UInt32 profileNameOffset;UInt32 customDataOffset;CMMatchFlag flags;CMMatchOption options;CMXYZColor white;CMXYZColor black;};
struct CMIString {ScriptCode theScript;Str63 theString;};
struct CMIntentCRDVMSize {int renderingIntent;UInt32 VMSize;};
typedef OSErr (__fastcall *CMIterateDeviceInfoProcPtr)(const CMDeviceInfo *deviceInfo, void *refCon);
typedef OSErr (__fastcall *CMIterateDeviceProfileProcPtr)(const CMDeviceInfo *deviceInfo, const NCMDeviceProfileInfo *profileInfo, void *refCon);
struct CMLabColor {UInt16 L;UInt16 a;UInt16 b;};
typedef CMError (__fastcall *CMLinkImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef lnkProf, UInt32 lnkIntent);
struct CMLut16Type {OSType typeDescriptor;UInt32 reserved;UInt8 inputChannels;UInt8 outputChannels;UInt8 gridPoints;UInt8 reserved2;Fixed matrix[3][3];UInt16 inputTableEntries;UInt16 outputTableEntries;UInt16 inputTable[1];};
struct CMLut8Type {OSType typeDescriptor;UInt32 reserved;UInt8 inputChannels;UInt8 outputChannels;UInt8 gridPoints;UInt8 reserved2;Fixed matrix[3][3];UInt8 inputTable[1];};
struct CMLuvColor {UInt16 L;UInt16 u;UInt16 v;};
struct CMMInfo {UInt32 dataSize;OSType CMMType;OSType CMMMfr;UInt32 CMMVersion;unsigned __int8 ASCIIName[32];unsigned __int8 ASCIIDesc[256];UniCharCount UniCodeNameCount;UniChar UniCodeName[32];UniCharCount UniCodeDescCount;UniChar UniCodeDesc[256];};
struct CMMInfoRecord {OSType CMMType;int CMMVersion;};
typedef OSErr (__fastcall *CMMIterateProcPtr)(CMMInfo *iterateData, void *refCon);
typedef CMMIterateProcPtr CMMIterateUPP;
struct CMMakeAndModel {OSType manufacturer;UInt32 model;UInt32 serialNumber;UInt32 manufactureDate;UInt32 reserved1;UInt32 reserved2;UInt32 reserved3;UInt32 reserved4;};
struct CMMakeAndModelType {OSType typeDescriptor;UInt32 reserved;CMMakeAndModel makeAndModel;};
typedef int CMMatchFlag;
typedef CMError (__fastcall *CMMatchImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef srcProf, UInt32 srcIntent, CMProfileRef dstProf);
typedef int CMMatchOption;
typedef struct OpaqueCMMatchRef *CMMatchRef;
struct CMMeasurementType {OSType typeDescriptor;UInt32 reserved;UInt32 standardObserver;CMFixedXYZColor backingXYZ;UInt32 geometry;UInt32 flare;UInt32 illuminant;};
struct CMMultiFunctCLUTType {UInt8 gridPoints[16];UInt8 entrySize;UInt8 reserved[3];UInt8 data[1];};
typedef CMMultiFunctLutType CMMultiFunctLutA2BType;
typedef CMMultiFunctLutType CMMultiFunctLutB2AType;
struct CMMultiFunctLutType {OSType typeDescriptor;UInt32 reserved;UInt8 inputChannels;UInt8 outputChannels;UInt16 reserved2;UInt32 offsetBcurves;UInt32 offsetMatrix;UInt32 offsetMcurves;UInt32 offsetCLUT;UInt32 offsetAcurves;UInt8 data[1];};
struct CMMultiLocalizedUniCodeEntryRec {char languageCode[2];char regionCode[2];UInt32 textLength;UInt32 textOffset;};
struct CMMultiLocalizedUniCodeType {OSType typeDescriptor;UInt32 reserved;UInt32 entryCount;UInt32 entrySize;};
struct CMMultichannel5Color {UInt8 components[5];};
struct CMMultichannel6Color {UInt8 components[6];};
struct CMMultichannel7Color {UInt8 components[7];};
struct CMMultichannel8Color {UInt8 components[8];};
struct CMNamedColor {UInt32 namedColorIndex;};
struct CMNamedColor2EntryType {UInt8 rootName[32];UInt16 PCSColorCoords[3];UInt16 DeviceColorCoords[1];};
struct CMNamedColor2Type {OSType typeDescriptor;UInt32 reserved;UInt32 vendorFlag;UInt32 count;UInt32 deviceChannelCount;UInt8 prefixName[32];UInt8 suffixName[32];char data[1];};
struct CMNamedColorType {OSType typeDescriptor;UInt32 reserved;UInt32 vendorFlag;UInt32 count;UInt8 prefixName[1];};
struct CMNativeDisplayInfo {UInt32 dataSize;CMFixedXYColor redPhosphor;CMFixedXYColor greenPhosphor;CMFixedXYColor bluePhosphor;CMFixedXYColor whitePoint;Fixed redGammaValue;Fixed greenGammaValue;Fixed blueGammaValue;UInt16 gammaChannels;UInt16 gammaEntryCount;UInt16 gammaEntrySize;char gammaData[1];};
struct CMNativeDisplayInfoType {OSType typeDescriptor;unsigned int reserved;CMNativeDisplayInfo nativeDisplayInfo;};
struct CMPS2CRDVMSizeType {OSType typeDescriptor;UInt32 reserved;UInt32 count;CMIntentCRDVMSize intentCRD[1];};
struct CMParametricCurveType {OSType typeDescriptor;UInt32 reserved;UInt16 functionType;UInt16 reserved2;Fixed value[1];};
struct CMPathLocation {char path[256];};
struct CMProcedureLocation {CMProfileAccessUPP proc;void *refCon;};
union CMProfLoc {CMFileLocation fileLoc;CMHandleLocation handleLoc;CMPtrLocation ptrLoc;CMProcedureLocation procLoc;CMPathLocation pathLoc;CMBufferLocation bufferLoc;};
struct CMProfile {CMHeader header;CMProfileChromaticities profile;CMProfileResponse response;CMIString profileName;char customData[1];};
typedef OSErr (__fastcall *CMProfileAccessProcPtr)(int command, int offset, int *size, void *data, void *refCon);
typedef CMProfileAccessProcPtr CMProfileAccessUPP;
struct CMProfileChromaticities {CMXYZColor red;CMXYZColor green;CMXYZColor blue;CMXYZColor cyan;CMXYZColor magenta;CMXYZColor yellow;};
typedef Boolean (__fastcall *CMProfileFilterProcPtr)(CMProfileRef prof, void *refCon);
typedef CMProfileFilterProcPtr CMProfileFilterUPP;
typedef CMProfilePtr *CMProfileHandle;
struct CMProfileIdentifier {CM2Header profileHeader;CMDateTime calibrationDate;UInt32 ASCIIProfileDescriptionLen;char ASCIIProfileDescription[1];};
typedef CMProfileIdentifier *CMProfileIdentifierPtr;
struct CMProfileIterateData {UInt32 dataVersion;CM2Header header;ScriptCode code;Str255 name;CMProfileLocation location;UniCharCount uniCodeNameCount;UniChar *uniCodeName;unsigned __int8 *asciiName;CMMakeAndModel *makeAndModel;CMProfileMD5 *digest;};
typedef OSErr (__fastcall *CMProfileIterateProcPtr)(CMProfileIterateData *iterateData, void *refCon);
typedef CMProfileIterateProcPtr CMProfileIterateUPP;
struct CMProfileLocation {__int16 locType;CMProfLoc u;};
typedef unsigned __int8 CMProfileMD5[16];
typedef CMProfileMD5 *CMProfileMD5Ptr;
typedef CMProfile *CMProfilePtr;
typedef struct OpaqueCMProfileRef *CMProfileRef;
struct CMProfileResponse {UInt16 counts[9];UInt16 data[1];};
struct CMProfileSearchRecord {CMHeader header;UInt32 fieldMask;UInt32 reserved[2];};
typedef CMProfileSearchRecordPtr *CMProfileSearchRecordHandle;
typedef CMProfileSearchRecord *CMProfileSearchRecordPtr;
typedef struct OpaqueCMProfileSearchRef *CMProfileSearchRef;
struct CMProfileSequenceDescType {OSType typeDescriptor;UInt32 reserved;UInt32 count;char data[1];};
typedef CMError (__fastcall *CMProofImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef srcProf, UInt32 srcIntent, CMProfileRef dstProf, CMProfileRef prfProf);
struct CMPtrLocation {Ptr p;};
struct CMRGBColor {UInt16 red;UInt16 green;UInt16 blue;};
struct CMS15Fixed16ArrayType {OSType typeDescriptor;UInt32 reserved;Fixed value[1];};
struct CMScreeningChannelRec {Fixed frequency;Fixed angle;UInt32 spotFunction;};
struct CMScreeningType {OSType typeDescriptor;UInt32 reserved;UInt32 screeningFlag;UInt32 channelCount;CMScreeningChannelRec channelInfo[1];};
struct CMSearchRecord {OSType CMMType;OSType profileClass;OSType dataColorSpace;OSType profileConnectionSpace;UInt32 deviceManufacturer;UInt32 deviceModel;UInt32 deviceAttributes[2];UInt32 profileFlags;UInt32 searchMask;CMProfileFilterUPP filter;};
typedef CMError (__fastcall *CMSetIndImageProfileProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 index, CMProfileRef prof);
struct CMSignatureType {OSType typeDescriptor;UInt32 reserved;OSType signature;};
struct CMTagElemTable {UInt32 count;CMTagRecord tagList[1];};
struct CMTagRecord {OSType tag;UInt32 elementOffset;UInt32 elementSize;};
struct CMTextDescriptionType {OSType typeDescriptor;UInt32 reserved;UInt32 ASCIICount;UInt8 ASCIIName[2];};
struct CMTextType {OSType typeDescriptor;UInt32 reserved;UInt8 text[1];};
struct CMU16Fixed16ArrayType {OSType typeDescriptor;UInt32 reserved;UInt32 value[1];};
struct CMUInt16ArrayType {OSType typeDescriptor;UInt32 reserved;UInt16 value[1];};
struct CMUInt32ArrayType {OSType typeDescriptor;UInt32 reserved;UInt32 value[1];};
struct CMUInt64ArrayType {OSType typeDescriptor;UInt32 reserved;UInt32 value[1];};
struct CMUInt8ArrayType {OSType typeDescriptor;UInt32 reserved;UInt8 value[1];};
struct CMUcrBgType {OSType typeDescriptor;UInt32 reserved;UInt32 ucrCount;UInt16 ucrValues[1];};
typedef CMError (__fastcall *CMUnembedImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl);
struct CMUnicodeTextType {OSType typeDescriptor;UInt32 reserved;UniChar text[1];};
typedef CMError (__fastcall *CMValidImageProcPtr)(const FSSpec *spec);
struct CMVideoCardGamma {UInt32 tagType;union CMVideoCardGamma::$23F40FDC8105100B9C8A6B01FC278218 u;};
union CMVideoCardGamma::$23F40FDC8105100B9C8A6B01FC278218 {CMVideoCardGammaTable table;CMVideoCardGammaFormula formula;};
struct CMVideoCardGammaFormula {Fixed redGamma;Fixed redMin;Fixed redMax;Fixed greenGamma;Fixed greenMin;Fixed greenMax;Fixed blueGamma;Fixed blueMin;Fixed blueMax;};
struct CMVideoCardGammaTable {UInt16 channels;UInt16 entryCount;UInt16 entrySize;char data[1];};
struct CMVideoCardGammaType {OSType typeDescriptor;UInt32 reserved;CMVideoCardGamma gamma;};
struct CMViewingConditionsType {OSType typeDescriptor;UInt32 reserved;CMFixedXYZColor illuminant;CMFixedXYZColor surround;UInt32 stdIlluminant;};
typedef struct OpaqueCMWorldRef *CMWorldRef;
struct CMXYZColor {CMXYZComponent X;CMXYZComponent Y;CMXYZComponent Z;};
typedef UInt16 CMXYZComponent;
struct CMXYZType {OSType typeDescriptor;UInt32 reserved;CMFixedXYZColor XYZ[1];};
struct CMYColor {SmallFract cyan;SmallFract magenta;SmallFract yellow;};
struct CMYxyColor {UInt16 capY;UInt16 x;UInt16 y;};
typedef CMovePBRec *CMovePBPtr;
struct CMovePBRec {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;int filler1;StringPtr ioNewName;int filler2;int ioNewDirID;int filler3[2];int ioDirID;};
typedef CProcPtr *CProcHndl;
typedef CProcRec *CProcPtr;
struct CProcRec {Handle nxtComp;ColorComplementUPP compProc;};
struct CQDProcs {QDTextUPP textProc;QDLineUPP lineProc;QDRectUPP rectProc;QDRRectUPP rRectProc;QDOvalUPP ovalProc;QDArcUPP arcProc;QDPolyUPP polyProc;QDRgnUPP rgnProc;QDBitsUPP bitsProc;QDCommentUPP commentProc;QDTxMeasUPP txMeasProc;QDGetPicUPP getPicProc;QDPutPicUPP putPicProc;QDOpcodeUPP opcodeProc;UniversalProcPtr newProc1;QDStdGlyphsUPP glyphsProc;QDPrinterStatusUPP printerStatusProc;UniversalProcPtr newProc4;UniversalProcPtr newProc5;UniversalProcPtr newProc6;};
typedef CQDProcs *CQDProcsPtr;
struct CSParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;FSSpecPtr ioMatchPtr;int ioReqMatchCount;int ioActMatchCount;int ioSearchBits;CInfoPBPtr ioSearchInfo1;CInfoPBPtr ioSearchInfo2;int ioSearchTime;CatPositionRec ioCatPosition;Ptr ioOptBuffer;int ioOptBufSize;};
typedef CSParam *CSParamPtr;
typedef ColorSpec CSpecArray[1];
typedef CTabPtr *CTabHandle;
typedef ColorTable *CTabPtr;
typedef WindowPtr CWindowPtr;
typedef OSErr (__fastcall *CalcColorTableProcPtr)(UInt32 dataRef, SInt16 colorsRequested, void *colorBankPtr, CSpecArray resultPtr);
typedef CalcColorTableProcPtr CalcColorTableUPP;
typedef void (__fastcall *CalibrateEventProcPtr)(EventRecord *event);
typedef CalibrateEventProcPtr CalibrateEventUPP;
typedef OSErr (__fastcall *CalibrateProcPtr)(CalibratorInfo *theInfo);
typedef CalibrateProcPtr CalibrateUPP;
struct CalibratorInfo {UInt32 dataSize;CMDisplayIDType displayID;UInt32 profileLocationSize;CMProfileLocation *profileLocationPtr;CalibrateEventUPP eventProc;Boolean isGood;};
typedef unsigned __int16 CallingConventionType;
typedef Boolean (__fastcall *CanCalibrateProcPtr)(CMDisplayIDType displayID, Str255 errMessage);
typedef CanCalibrateProcPtr CanCalibrateUPP;
typedef void (__fastcall *CaretHookProcPtr)(const Rect *r, TEPtr pTE);
typedef CaretHookProcPtr CaretHookUPP;
struct CatPositionRec {int initialize;__int16 priv[6];};
typedef Point Cell;
typedef char CharByteTable[256];
typedef __int16 CharParameter;
typedef char Chars[32001];
typedef CharsPtr *CharsHandle;
typedef char *CharsPtr;
struct ChunkHeader {ID ckID;int ckSize;};
typedef UInt32 ClickActivationResult;
struct CmpSoundHeader {Ptr samplePtr;unsigned int numChannels;UnsignedFixed sampleRate;unsigned int loopStart;unsigned int loopEnd;UInt8 encode;UInt8 baseFrequency;unsigned int numFrames;extended80 AIFFSampleRate;Ptr markerChunk;OSType format;unsigned int futureUse2;StateBlockPtr stateVars;LeftOverBlockPtr leftOverSamples;__int16 compressionID;unsigned __int16 packetSize;unsigned __int16 snthID;unsigned __int16 sampleSize;UInt8 sampleArea[1];};
typedef CmpSoundHeader *CmpSoundHeaderPtr;
struct CntrlParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioCRefNum;__int16 csCode;__int16 csParam[11];};
typedef CntrlParam *CntrlParamPtr;
typedef struct OpaqueCollatorRef *CollatorRef;
typedef struct OpaqueCollection *Collection;
typedef OSErr (__fastcall *CollectionExceptionProcPtr)(Collection c, OSErr status);
typedef CollectionExceptionProcPtr CollectionExceptionUPP;
typedef OSErr (__fastcall *CollectionFlattenProcPtr)(SInt32 size, void *data, void *refCon);
typedef CollectionFlattenProcPtr CollectionFlattenUPP;
typedef FourCharCode CollectionTag;
typedef void (__fastcall *ColorChangedProcPtr)(int userData, PMColor *newColor);
typedef ColorChangedProcPtr ColorChangedUPP;
typedef Boolean (__fastcall *ColorComplementProcPtr)(RGBColor *rgb);
typedef ColorComplementProcPtr ColorComplementUPP;
struct ColorInfo {RGBColor ciRGB;__int16 ciUsage;__int16 ciTolerance;__int16 ciDataFields[3];};
typedef ColorInfoPtr *ColorInfoHandle;
typedef ColorInfo *ColorInfoPtr;
struct ColorPickerInfo {PMColor theColor;CMProfileHandle dstProfile;UInt32 flags;DialogPlacementSpec placeWhere;Point dialogOrigin;OSType pickerType;UserEventUPP eventProc;ColorChangedUPP colorProc;UInt32 colorProcData;Str255 prompt;PickerMenuItemInfo mInfo;Boolean newColorChosen;SInt8 filler;};
typedef Boolean (__fastcall *ColorSearchProcPtr)(RGBColor *rgb, int *position);
typedef ColorSearchProcPtr ColorSearchUPP;
struct ColorSpec {__int16 value;RGBColor rgb;};
typedef ColorSpec *ColorSpecPtr;
struct ColorTable {int ctSeed;__int16 ctFlags;__int16 ctSize;CSpecArray ctTable;};
struct Comment {unsigned int timeStamp;MarkerIdType marker;unsigned __int16 count;char text[1];};
struct CommentSpec {__int16 count;__int16 ID;};
typedef CommentSpecPtr *CommentSpecHandle;
typedef CommentSpec *CommentSpecPtr;
typedef ScriptTokenType CommentType[4];
struct CommentsChunk {ID ckID;int ckSize;unsigned __int16 numComments;Comment comments[1];};
typedef CommentsChunk *CommentsChunkPtr;
struct CommonChunk {ID ckID;int ckSize;__int16 numChannels;unsigned int numSampleFrames;__int16 sampleSize;extended80 sampleRate;};
typedef CommonChunk *CommonChunkPtr;
typedef wide CompTimeValue;
typedef ComponentRecord *Component;
struct ComponentAliasResource {ComponentResource cr;ComponentDescription aliasCD;};
struct ComponentDescription {OSType componentType;OSType componentSubType;OSType componentManufacturer;unsigned int componentFlags;unsigned int componentFlagsMask;};
typedef UniversalProcPtr ComponentFunctionUPP;
typedef ComponentInstanceRecord *ComponentInstance;
struct ComponentInstanceRecord {int data[1];};
struct ComponentMPWorkFunctionHeaderRecord {UInt32 headerSize;UInt32 recordSize;UInt32 workFlags;UInt16 processorCount;UInt8 unused;UInt8 isRunning;};
typedef ComponentMPWorkFunctionHeaderRecord *ComponentMPWorkFunctionHeaderRecordPtr;
typedef ComponentResult (__fastcall *ComponentMPWorkFunctionProcPtr)(void *globalRefCon, ComponentMPWorkFunctionHeaderRecordPtr header);
typedef ComponentMPWorkFunctionProcPtr ComponentMPWorkFunctionUPP;
struct ComponentParameters {UInt8 flags;UInt8 paramSize;__int16 what;int params[1];};
struct ComponentPlatformInfo {int componentFlags;ResourceSpec component;__int16 platformType;};
struct ComponentPlatformInfoArray {int count;ComponentPlatformInfo platformArray[1];};
struct ComponentRecord {int data[1];};
struct ComponentResource {ComponentDescription cd;ResourceSpec component;ResourceSpec componentName;ResourceSpec componentInfo;ResourceSpec componentIcon;};
struct ComponentResourceExtension {int componentVersion;int componentRegisterFlags;__int16 componentIconFamily;};
typedef ComponentResourcePtr *ComponentResourceHandle;
typedef ComponentResource *ComponentResourcePtr;
typedef int ComponentResult;
typedef ComponentResult (__fastcall *ComponentRoutineProcPtr)(ComponentParameters *cp, Handle componentStorage);
typedef ComponentRoutineProcPtr ComponentRoutineUPP;
struct CompressionInfo {int recordSize;OSType format;__int16 compressionID;unsigned __int16 samplesPerPacket;unsigned __int16 bytesPerPacket;unsigned __int16 bytesPerFrame;unsigned __int16 bytesPerSample;unsigned __int16 futureUse1;};
typedef CompressionInfoPtr *CompressionInfoHandle;
typedef CompressionInfo *CompressionInfoPtr;
typedef const void *ConstATSUAttributeValuePtr;
typedef const FSSpec *ConstFSSpecPtr;
typedef const HFSUniStr255 *ConstHFSUniStr255Param;
typedef const void *ConstLogicalAddress;
typedef const Pattern *ConstPatternParam;
typedef const ScriptCodeRun *ConstScriptCodeRunPtr;
typedef const unsigned __int8 *ConstStr15Param;
typedef const unsigned __int8 *ConstStr255Param;
typedef const unsigned __int8 *ConstStr27Param;
typedef const unsigned __int8 *ConstStr31Param;
typedef const unsigned __int8 *ConstStr32Param;
typedef const unsigned __int8 *ConstStr63Param;
typedef ConstStr63Param ConstStrFileNameParam;
typedef const unsigned __int8 *ConstStringPtr;
typedef const TextEncodingRun *ConstTextEncodingRunPtr;
typedef const UInt8 *ConstTextPtr;
typedef const TextToUnicodeInfo ConstTextToUnicodeInfo;
typedef const UniChar *ConstUniCharArrayPtr;
typedef const UnicodeMapping *ConstUnicodeMappingPtr;
typedef const UnicodeToTextInfo ConstUnicodeToTextInfo;
struct ContainerChunk {ID ckID;int ckSize;ID formType;};
struct ContextualMenuInterfaceStruct {void *_reserved;SInt32 (__fastcall *QueryInterface)(void *thisPointer, CFUUIDBytes iid, void **ppv);UInt32 (__fastcall *AddRef)(void *thisPointer);UInt32 (__fastcall *Release)(void *thisPointer);OSStatus (__fastcall *ExamineContext)(void *thisInstance, const AEDesc *inContext, AEDescList *outCommandPairs);OSStatus (__fastcall *HandleSelection)(void *thisInstance, AEDesc *inContext, SInt32 inCommandID);void (__fastcall *PostMenuCleanup)(void *thisInstance);};
typedef void (__fastcall *ControlActionProcPtr)(ControlRef theControl, ControlPartCode partCode);
typedef ControlActionProcPtr ControlActionUPP;
typedef ControlApplyTextColorRec *ControlApplyTextColorPtr;
struct ControlApplyTextColorRec {SInt16 depth;Boolean colorDevice;Boolean active;};
typedef ControlBackgroundRec *ControlBackgroundPtr;
struct ControlBackgroundRec {SInt16 depth;Boolean colorDevice;};
typedef UInt16 ControlBevelButtonBehavior;
typedef UInt16 ControlBevelButtonMenuBehavior;
typedef UInt16 ControlBevelButtonMenuPlacement;
typedef UInt16 ControlBevelThickness;
struct ControlButtonContentInfo {ControlContentType contentType;union ControlButtonContentInfo::$0A9F1678204E2E8987ED99E63FD249AB u;};
union ControlButtonContentInfo::$0A9F1678204E2E8987ED99E63FD249AB {SInt16 resID;CIconHandle cIconHandle;Handle iconSuite;IconRef iconRef;PicHandle picture;Handle ICONHandle;};
typedef ControlButtonContentInfo *ControlButtonContentInfoPtr;
typedef SInt16 ControlButtonGraphicAlignment;
typedef SInt16 ControlButtonTextAlignment;
typedef SInt16 ControlButtonTextPlacement;
typedef OSStatus (__fastcall *ControlCNTLToCollectionProcPtr)(const Rect *bounds, SInt16 value, Boolean visible, SInt16 max, SInt16 min, SInt16 procID, SInt32 refCon, ConstStr255Param title, Collection collection);
typedef ControlCNTLToCollectionProcPtr ControlCNTLToCollectionUPP;
typedef ControlCalcSizeRec *ControlCalcSizePtr;
struct ControlCalcSizeRec {SInt16 height;SInt16 width;SInt16 baseLine;};
typedef ControlClickActivationRec *ControlClickActivationPtr;
struct ControlClickActivationRec {Point localPoint;EventModifiers modifiers;ClickActivationResult result;};
typedef UInt32 ControlClockFlags;
typedef UInt16 ControlClockType;
typedef OSStatus (__fastcall *ControlColorProcPtr)(ControlRef inControl, SInt16 inMessage, SInt16 inDrawDepth, Boolean inDrawInColor);
typedef ControlColorProcPtr ControlColorUPP;
typedef SInt16 ControlContentType;
typedef ControlContextualMenuClickRec *ControlContextualMenuClickPtr;
struct ControlContextualMenuClickRec {Point localPoint;Boolean menuDisplayed;};
typedef ControlDataAccessRec *ControlDataAccessPtr;
struct ControlDataAccessRec {ResType tag;ResType part;Size size;Ptr dataPtr;};
typedef SInt16 ControlDefProcMessage;
typedef SInt32 (__fastcall *ControlDefProcPtr)(SInt16 varCode, ControlRef theControl, ControlDefProcMessage message, SInt32 param);
struct ControlDefSpec {ControlDefType defType;union ControlDefSpec::$4BBC5332E7F43D419E2559B016DC5076 u;};
union ControlDefSpec::$4BBC5332E7F43D419E2559B016DC5076 {ControlDefUPP defProc;void *classRef;};
typedef UInt32 ControlDefType;
typedef ControlDefProcPtr ControlDefUPP;
typedef UInt16 ControlDisclosureTriangleOrientation;
typedef ControlEditTextSelectionRec *ControlEditTextSelectionPtr;
struct ControlEditTextSelectionRec {SInt16 selStart;SInt16 selEnd;};
typedef void (__fastcall *ControlEditTextValidationProcPtr)(ControlRef control);
typedef ControlEditTextValidationProcPtr ControlEditTextValidationUPP;
typedef SInt16 ControlFocusPart;
typedef ControlFontStyleRec *ControlFontStylePtr;
struct ControlFontStyleRec {SInt16 flags;SInt16 font;SInt16 size;SInt16 style;SInt16 mode;SInt16 just;RGBColor foreColor;RGBColor backColor;};
typedef ControlGetRegionRec *ControlGetRegionPtr;
struct ControlGetRegionRec {RgnHandle region;ControlPartCode part;};
typedef ControlRef ControlHandle;
struct ControlID {OSType signature;SInt32 id;};
typedef ControlButtonContentInfo ControlImageContentInfo;
typedef ControlButtonContentInfo *ControlImageContentInfoPtr;
typedef ControlKeyDownRec *ControlKeyDownPtr;
struct ControlKeyDownRec {EventModifiers modifiers;SInt16 keyCode;SInt16 charCode;};
typedef ControlKeyFilterResult (__fastcall *ControlKeyFilterProcPtr)(ControlRef theControl, SInt16 *keyCode, SInt16 *charCode, EventModifiers *modifiers);
typedef SInt16 ControlKeyFilterResult;
typedef ControlKeyFilterProcPtr ControlKeyFilterUPP;
typedef UInt32 ControlKeyScriptBehavior;
struct ControlKind {OSType signature;OSType kind;};
typedef SInt16 ControlPartCode;
typedef UInt16 ControlPopupArrowOrientation;
typedef UInt16 ControlPopupArrowSize;
typedef UInt16 ControlPushButtonIconAlignment;
typedef struct OpaqueControlRef *ControlRef;
typedef SInt16 ControlRoundButtonSize;
typedef ControlSetCursorRec *ControlSetCursorPtr;
struct ControlSetCursorRec {Point localPoint;EventModifiers modifiers;Boolean cursorWasSet;};
typedef UInt16 ControlSize;
typedef UInt16 ControlSliderOrientation;
typedef UInt16 ControlTabDirection;
struct ControlTabEntry {ControlButtonContentInfo *icon;CFStringRef name;Boolean enabled;};
struct ControlTabInfoRec {SInt16 version;SInt16 iconSuiteID;Str255 name;};
struct ControlTabInfoRecV1 {SInt16 version;SInt16 iconSuiteID;CFStringRef name;};
typedef UInt16 ControlTabSize;
struct ControlTemplate {Rect controlRect;SInt16 controlValue;Boolean controlVisible;UInt8 fill;SInt16 controlMaximum;SInt16 controlMinimum;SInt16 controlDefProcID;SInt32 controlReference;Str255 controlTitle;};
typedef ControlTemplatePtr *ControlTemplateHandle;
typedef ControlTemplate *ControlTemplatePtr;
typedef ControlTrackingRec *ControlTrackingPtr;
struct ControlTrackingRec {Point startPt;EventModifiers modifiers;ControlActionUPP action;};
typedef void (__fastcall *ControlUserPaneActivateProcPtr)(ControlRef control, Boolean activating);
typedef ControlUserPaneActivateProcPtr ControlUserPaneActivateUPP;
typedef void (__fastcall *ControlUserPaneBackgroundProcPtr)(ControlRef control, ControlBackgroundPtr info);
typedef ControlUserPaneBackgroundProcPtr ControlUserPaneBackgroundUPP;
typedef void (__fastcall *ControlUserPaneDrawProcPtr)(ControlRef control, SInt16 part);
typedef ControlUserPaneDrawProcPtr ControlUserPaneDrawUPP;
typedef ControlPartCode (__fastcall *ControlUserPaneFocusProcPtr)(ControlRef control, ControlFocusPart action);
typedef ControlUserPaneFocusProcPtr ControlUserPaneFocusUPP;
typedef ControlPartCode (__fastcall *ControlUserPaneHitTestProcPtr)(ControlRef control, Point where);
typedef ControlUserPaneHitTestProcPtr ControlUserPaneHitTestUPP;
typedef void (__fastcall *ControlUserPaneIdleProcPtr)(ControlRef control);
typedef ControlUserPaneIdleProcPtr ControlUserPaneIdleUPP;
typedef ControlPartCode (__fastcall *ControlUserPaneKeyDownProcPtr)(ControlRef control, SInt16 keyCode, SInt16 charCode, SInt16 modifiers);
typedef ControlUserPaneKeyDownProcPtr ControlUserPaneKeyDownUPP;
typedef ControlPartCode (__fastcall *ControlUserPaneTrackingProcPtr)(ControlRef control, Point startPt, ControlActionUPP actionProc);
typedef ControlUserPaneTrackingProcPtr ControlUserPaneTrackingUPP;
typedef SInt16 ControlVariant;
struct ConversionBlock {__int16 destination;__int16 unused;CmpSoundHeaderPtr inputPtr;CmpSoundHeaderPtr outputPtr;};
typedef ConversionBlock *ConversionBlockPtr;
struct CopyParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioDstVRefNum;__int16 filler8;StringPtr ioNewName;StringPtr ioCopyName;int ioNewDirID;int filler14;int filler15;int ioDirID;};
typedef CopyParam *CopyParamPtr;
typedef CMError (__fastcall *CountImageProfilesProcPtr)(const FSSpec *spec, UInt32 *count);
struct CtlCTab {SInt32 ccSeed;SInt16 ccRider;SInt16 ctSize;ColorSpec ctTable[4];};
typedef CursPtr *CursHandle;
typedef Cursor *CursPtr;
struct Cursor {Bits16 data;Bits16 mask;Point hotSpot;};
typedef CursorImageRec *CursorImagePtr;
struct CursorImageRec {UInt16 majorVersion;UInt16 minorVersion;PixMapHandle cursorPixMap;BitMapHandle cursorBitMask;};
struct CursorInfo {int version;int capabilities;int animateDuration;Rect bounds;Point hotspot;int reserved;};
struct CustomBadgeResource {SInt16 version;SInt16 customBadgeResourceID;OSType customBadgeType;OSType customBadgeCreator;OSType windowBadgeType;OSType windowBadgeCreator;OSType overrideType;OSType overrideCreator;};
typedef CustomBadgeResourcePtr *CustomBadgeResourceHandle;
typedef CustomBadgeResource *CustomBadgeResourcePtr;
typedef void (__fastcall *CustomXFerProcPtr)(CustomXFerRecPtr info);
struct CustomXFerRec {UInt32 version;void *srcPixels;void *destPixels;void *resultPixels;UInt32 refCon;UInt32 pixelSize;UInt32 pixelCount;Point firstPixelHV;Rect destBounds;};
typedef CustomXFerRec *CustomXFerRecPtr;
typedef OptionBits DCMAccessMethodFeature;
typedef DCMObjectID DCMAccessMethodID;
typedef DCMObjectIterator DCMAccessMethodIterator;
struct DCMDictionaryHeader {FourCharCode headerSignature;UInt32 headerVersion;ByteCount headerSize;Str63 accessMethod;};
typedef DCMObjectID DCMDictionaryID;
typedef DCMObjectIterator DCMDictionaryIterator;
typedef DCMObjectRef DCMDictionaryRef;
typedef DCMObjectRef DCMDictionaryStreamRef;
typedef OptionBits DCMFieldAttributes;
typedef DescType DCMFieldTag;
typedef DescType DCMFieldType;
typedef OSType DCMFindMethod;
typedef struct OpaqueDCMFoundRecordIterator *DCMFoundRecordIterator;
typedef struct OpaqueDCMObjectID *DCMObjectID;
typedef struct OpaqueDCMObjectIterator *DCMObjectIterator;
typedef struct OpaqueDCMObjectRef *DCMObjectRef;
typedef Boolean (__fastcall *DCMProgressFilterProcPtr)(Boolean determinateProcess, UInt16 percentageComplete, UInt32 callbackUD);
typedef DCMProgressFilterProcPtr DCMProgressFilterUPP;
typedef UInt32 DCMUniqueID;
struct DDMap {UInt32 ddBlock;UInt16 ddSize;UInt16 ddType;};
struct DDPAddress {OTAddressType fAddressType;UInt16 fNetwork;UInt8 fNodeID;UInt8 fSocket;UInt8 fDDPType;UInt8 fPad;};
struct DDPNBPAddress {OTAddressType fAddressType;UInt16 fNetwork;UInt8 fNodeID;UInt8 fSocket;UInt8 fDDPType;UInt8 fPad;UInt8 fNBPNameBuffer[105];};
typedef SInt16 DITLMethod;
struct DInfo {Rect frRect;UInt16 frFlags;Point frLocation;SInt16 frView;};
typedef DMComponentListEntryRec *DMComponentListEntryPtr;
struct DMComponentListEntryRec {DisplayIDType itemID;Component itemComponent;ComponentDescription itemDescription;ResType itemClass;DMFidelityType itemFidelity;ResType itemSubClass;Point itemSort;unsigned int itemFlags;ResType itemReserved;unsigned int itemFuture1;unsigned int itemFuture2;unsigned int itemFuture3;unsigned int itemFuture4;};
typedef void (__fastcall *DMComponentListIteratorProcPtr)(void *userData, DMListIndexType itemIndex, DMComponentListEntryPtr componentInfo);
typedef DMComponentListIteratorProcPtr DMComponentListIteratorUPP;
typedef DMDepthInfoBlockRec *DMDepthInfoBlockPtr;
struct DMDepthInfoBlockRec {unsigned int depthBlockCount;DMDepthInfoPtr depthVPBlock;unsigned int depthBlockFlags;unsigned int depthBlockReserved1;unsigned int depthBlockReserved2;};
typedef DMDepthInfoRec *DMDepthInfoPtr;
struct DMDepthInfoRec {VDSwitchInfoPtr depthSwitchInfo;VPBlockPtr depthVPBlock;UInt32 depthFlags;UInt32 depthReserved1;UInt32 depthReserved2;};
typedef void (__fastcall *DMDisplayListIteratorProcPtr)(void *userData, DMListIndexType itemIndex, DisplayListEntryPtr displaymodeInfo);
typedef DMDisplayListIteratorProcPtr DMDisplayListIteratorUPP;
typedef DMDisplayModeListEntryRec *DMDisplayModeListEntryPtr;
struct DMDisplayModeListEntryRec {UInt32 displayModeFlags;VDSwitchInfoPtr displayModeSwitchInfo;VDResolutionInfoPtr displayModeResolutionInfo;VDTimingInfoPtr displayModeTimingInfo;DMDepthInfoBlockPtr displayModeDepthBlockInfo;UInt32 displayModeVersion;StringPtr displayModeName;DMDisplayTimingInfoPtr displayModeDisplayInfo;};
typedef void (__fastcall *DMDisplayModeListIteratorProcPtr)(void *userData, DMListIndexType itemIndex, DMDisplayModeListEntryPtr displaymodeInfo);
typedef DMDisplayModeListIteratorProcPtr DMDisplayModeListIteratorUPP;
typedef DMDisplayTimingInfoRec *DMDisplayTimingInfoPtr;
struct DMDisplayTimingInfoRec {UInt32 timingInfoVersion;UInt32 timingInfoAttributes;SInt32 timingInfoRelativeQuality;SInt32 timingInfoRelativeDefault;UInt32 timingInfoReserved[16];};
typedef void (__fastcall *DMExtendedNotificationProcPtr)(void *userData, __int16 theMessage, void *notifyData);
typedef DMExtendedNotificationProcPtr DMExtendedNotificationUPP;
typedef UInt32 DMFidelityType;
typedef unsigned int DMListIndexType;
typedef void *DMListType;
typedef DMMakeAndModelRec *DMMakeAndModelPtr;
struct DMMakeAndModelRec {ResType manufacturer;UInt32 model;UInt32 serialNumber;UInt32 manufactureDate;UInt32 makeReserved[4];};
typedef void *DMModalFilterUPP;
typedef void (__fastcall *DMNotificationProcPtr)(AppleEvent *theEvent);
typedef DMNotificationProcPtr DMNotificationUPP;
typedef void *DMProcessInfoPtr;
typedef DMProfileListEntryRec *DMProfileListEntryPtr;
struct DMProfileListEntryRec {CMProfileRef profileRef;Ptr profileReserved1;Ptr profileReserved2;Ptr profileReserved3;};
typedef void (__fastcall *DMProfileListIteratorProcPtr)(void *userData, DMListIndexType itemIndex, DMProfileListEntryPtr profileInfo);
typedef DMProfileListIteratorProcPtr DMProfileListIteratorUPP;
struct DNSAddress {OTAddressType fAddressType;InetDomainName fName;};
struct DNSQueryInfo {UInt16 qType;UInt16 qClass;UInt32 ttl;InetDomainName name;UInt16 responseType;UInt16 resourceLen;char resourceData[4];};
struct DRVRHeader {__int16 drvrFlags;__int16 drvrDelay;__int16 drvrEMask;__int16 drvrMenu;__int16 drvrOpen;__int16 drvrPrime;__int16 drvrCtl;__int16 drvrStatus;__int16 drvrClose;unsigned __int8 drvrName[1];};
typedef DRVRHeaderPtr *DRVRHeaderHandle;
typedef DRVRHeader *DRVRHeaderPtr;
typedef DTPBRec *DTPBPtr;
struct DTPBRec {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioDTRefNum;__int16 ioIndex;int ioTagInfo;Ptr ioDTBuffer;int ioDTReqCount;int ioDTActCount;SInt8 ioFiller1;UInt8 ioIconType;__int16 ioFiller2;int ioDirID;OSType ioFileCreator;OSType ioFileType;int ioFiller3;int ioDTLgLen;int ioDTPyLen;__int16 ioFiller4[14];int ioAPPLParID;};
struct DXInfo {Point frScroll;SInt32 frOpenChain;SInt8 frScript;SInt8 frXFlags;SInt16 frComment;SInt32 frPutAway;};
typedef char DataArray[32001];
typedef Boolean (__fastcall *DataBrowserAcceptDragProcPtr)(ControlRef browser, DragReference theDrag, DataBrowserItemID item);
typedef DataBrowserAcceptDragProcPtr DataBrowserAcceptDragUPP;
typedef Boolean (__fastcall *DataBrowserAddDragItemProcPtr)(ControlRef browser, DragReference theDrag, DataBrowserItemID item, ItemReference *itemRef);
typedef DataBrowserAddDragItemProcPtr DataBrowserAddDragItemUPP;
struct DataBrowserCallbacks {UInt32 version;union DataBrowserCallbacks::$4DC8D47A92C2652CF7FB68C1BEEE08FC u;};
union DataBrowserCallbacks::$4DC8D47A92C2652CF7FB68C1BEEE08FC {struct DataBrowserCallbacks::$4DC8D47A92C2652CF7FB68C1BEEE08FC::$EB4AEA5E5AC12ADBE8B75B23A0D91651 v1;};
struct DataBrowserCallbacks::$4DC8D47A92C2652CF7FB68C1BEEE08FC::$EB4AEA5E5AC12ADBE8B75B23A0D91651 {DataBrowserItemDataUPP itemDataCallback;DataBrowserItemCompareUPP itemCompareCallback;DataBrowserItemNotificationUPP itemNotificationCallback;DataBrowserAddDragItemUPP addDragItemCallback;DataBrowserAcceptDragUPP acceptDragCallback;DataBrowserReceiveDragUPP receiveDragCallback;DataBrowserPostProcessDragUPP postProcessDragCallback;DataBrowserItemHelpContentUPP itemHelpContentCallback;DataBrowserGetContextualMenuUPP getContextualMenuCallback;DataBrowserSelectContextualMenuUPP selectContextualMenuCallback;};
struct DataBrowserCustomCallbacks {UInt32 version;union DataBrowserCustomCallbacks::$80BE61ABCEA5C8971E6F78221A5F3AAE u;};
union DataBrowserCustomCallbacks::$80BE61ABCEA5C8971E6F78221A5F3AAE {struct DataBrowserCustomCallbacks::$80BE61ABCEA5C8971E6F78221A5F3AAE::$94552E1449796E9EE8F227990D7B26B9 v1;};
struct DataBrowserCustomCallbacks::$80BE61ABCEA5C8971E6F78221A5F3AAE::$94552E1449796E9EE8F227990D7B26B9 {DataBrowserDrawItemUPP drawItemCallback;DataBrowserEditItemUPP editTextCallback;DataBrowserHitTestUPP hitTestCallback;DataBrowserTrackingUPP trackingCallback;DataBrowserItemDragRgnUPP dragRegionCallback;DataBrowserItemAcceptDragUPP acceptDragCallback;DataBrowserItemReceiveDragUPP receiveDragCallback;};
typedef unsigned int DataBrowserDragFlags;
typedef void (__fastcall *DataBrowserDrawItemProcPtr)(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserItemState itemState, const Rect *theRect, SInt16 gdDepth, Boolean colorDevice);
typedef DataBrowserDrawItemProcPtr DataBrowserDrawItemUPP;
typedef UInt32 DataBrowserEditCommand;
typedef Boolean (__fastcall *DataBrowserEditItemProcPtr)(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, CFStringRef theString, Rect *maxEditTextRect, Boolean *shrinkToFit);
typedef DataBrowserEditItemProcPtr DataBrowserEditItemUPP;
typedef void (__fastcall *DataBrowserGetContextualMenuProcPtr)(ControlRef browser, MenuRef *menu, UInt32 *helpType, CFStringRef *helpItemString, AEDesc *selection);
typedef DataBrowserGetContextualMenuProcPtr DataBrowserGetContextualMenuUPP;
typedef Boolean (__fastcall *DataBrowserHitTestProcPtr)(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, const Rect *mouseRect);
typedef DataBrowserHitTestProcPtr DataBrowserHitTestUPP;
typedef DataBrowserDragFlags (__fastcall *DataBrowserItemAcceptDragProcPtr)(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, DragReference theDrag);
typedef DataBrowserItemAcceptDragProcPtr DataBrowserItemAcceptDragUPP;
typedef Boolean (__fastcall *DataBrowserItemCompareProcPtr)(ControlRef browser, DataBrowserItemID itemOne, DataBrowserItemID itemTwo, DataBrowserPropertyID sortProperty);
typedef DataBrowserItemCompareProcPtr DataBrowserItemCompareUPP;
typedef OSStatus (__fastcall *DataBrowserItemDataProcPtr)(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserItemDataRef itemData, Boolean setValue);
typedef void *DataBrowserItemDataRef;
typedef DataBrowserItemDataProcPtr DataBrowserItemDataUPP;
typedef void (__fastcall *DataBrowserItemDragRgnProcPtr)(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, RgnHandle dragRgn);
typedef DataBrowserItemDragRgnProcPtr DataBrowserItemDragRgnUPP;
typedef void (__fastcall *DataBrowserItemHelpContentProcPtr)(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent);
typedef DataBrowserItemHelpContentProcPtr DataBrowserItemHelpContentUPP;
typedef UInt32 DataBrowserItemID;
typedef UInt32 DataBrowserItemNotification;
typedef void (__fastcall *DataBrowserItemNotificationProcPtr)(ControlRef browser, DataBrowserItemID item, DataBrowserItemNotification message);
typedef DataBrowserItemNotificationProcPtr DataBrowserItemNotificationUPP;
typedef void (__fastcall *DataBrowserItemNotificationWithItemProcPtr)(ControlRef browser, DataBrowserItemID item, DataBrowserItemNotification message, DataBrowserItemDataRef itemData);
typedef DataBrowserItemNotificationWithItemProcPtr DataBrowserItemNotificationWithItemUPP;
typedef void (__fastcall *DataBrowserItemProcPtr)(DataBrowserItemID item, DataBrowserItemState state, void *clientData);
typedef Boolean (__fastcall *DataBrowserItemReceiveDragProcPtr)(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, DataBrowserDragFlags dragFlags, DragReference theDrag);
typedef DataBrowserItemReceiveDragProcPtr DataBrowserItemReceiveDragUPP;
typedef UInt32 DataBrowserItemState;
typedef DataBrowserItemProcPtr DataBrowserItemUPP;
struct DataBrowserListViewColumnDesc {DataBrowserTableViewColumnDesc propertyDesc;DataBrowserListViewHeaderDesc headerBtnDesc;};
struct DataBrowserListViewHeaderDesc {UInt32 version;UInt16 minimumWidth;UInt16 maximumWidth;SInt16 titleOffset;CFStringRef titleString;DataBrowserSortOrder initialOrder;ControlFontStyleRec btnFontStyle;ControlButtonContentInfo btnContentInfo;};
typedef UInt32 DataBrowserListViewPropertyFlags;
typedef void (__fastcall *DataBrowserPostProcessDragProcPtr)(ControlRef browser, DragReference theDrag, OSStatus trackDragResult);
typedef DataBrowserPostProcessDragProcPtr DataBrowserPostProcessDragUPP;
struct DataBrowserPropertyDesc {DataBrowserPropertyID propertyID;DataBrowserPropertyType propertyType;DataBrowserPropertyFlags propertyFlags;};
typedef unsigned int DataBrowserPropertyFlags;
typedef UInt32 DataBrowserPropertyID;
typedef OSType DataBrowserPropertyPart;
typedef OSType DataBrowserPropertyType;
typedef Boolean (__fastcall *DataBrowserReceiveDragProcPtr)(ControlRef browser, DragReference theDrag, DataBrowserItemID item);
typedef DataBrowserReceiveDragProcPtr DataBrowserReceiveDragUPP;
typedef UInt8 DataBrowserRevealOptions;
typedef void (__fastcall *DataBrowserSelectContextualMenuProcPtr)(ControlRef browser, MenuRef menu, UInt32 selectionType, SInt16 menuID, MenuItemIndex menuItem);
typedef DataBrowserSelectContextualMenuProcPtr DataBrowserSelectContextualMenuUPP;
typedef UInt32 DataBrowserSelectionAnchorDirection;
typedef UInt32 DataBrowserSelectionFlags;
typedef UInt32 DataBrowserSetOption;
typedef UInt16 DataBrowserSortOrder;
typedef DataBrowserPropertyDesc DataBrowserTableViewColumnDesc;
typedef DataBrowserPropertyID DataBrowserTableViewColumnID;
typedef UInt32 DataBrowserTableViewColumnIndex;
typedef UInt32 DataBrowserTableViewHiliteStyle;
typedef UInt32 DataBrowserTableViewPropertyFlags;
typedef UInt32 DataBrowserTableViewRowIndex;
typedef DataBrowserTrackingResult (__fastcall *DataBrowserTrackingProcPtr)(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, Point startPt, EventModifiers modifiers);
typedef SInt16 DataBrowserTrackingResult;
typedef DataBrowserTrackingProcPtr DataBrowserTrackingUPP;
typedef OSType DataBrowserViewStyle;
typedef DataPtr *DataHandle;
typedef char *DataPtr;
typedef DateCacheRecord *DateCachePtr;
struct DateCacheRecord {__int16 hidden[256];};
typedef SInt8 DateDelta;
typedef SInt8 DateForm;
typedef SInt8 DateOrders;
struct DateTimeRec {__int16 year;__int16 month;__int16 day;__int16 hour;__int16 minute;__int16 second;__int16 dayOfWeek;};
typedef void (__fastcall *DebugAssertOutputHandlerProcPtr)(OSType componentSignature, UInt32 options, const char *assertionString, const char *exceptionLabelString, const char *errorString, const char *fileName, int lineNumber, void *value, ConstStr255Param outputMsg);
typedef DebugAssertOutputHandlerProcPtr DebugAssertOutputHandlerUPP;
typedef void (__fastcall *DebugComponentCallbackProcPtr)(SInt32 optionSelectorNum, UInt32 command, Boolean *optionSetting);
typedef DebugComponentCallbackProcPtr DebugComponentCallbackUPP;
typedef void (__fastcall *DebuggerDisposeThreadProcPtr)(ThreadID threadDeleted);
typedef DebuggerDisposeThreadUPP DebuggerDisposeThreadTPP;
typedef DebuggerDisposeThreadProcPtr DebuggerDisposeThreadUPP;
typedef void (__fastcall *DebuggerNewThreadProcPtr)(ThreadID threadCreated);
typedef DebuggerNewThreadUPP DebuggerNewThreadTPP;
typedef DebuggerNewThreadProcPtr DebuggerNewThreadUPP;
typedef ThreadID (__fastcall *DebuggerThreadSchedulerProcPtr)(SchedulerInfoRecPtr schedulerInfo);
typedef DebuggerThreadSchedulerUPP DebuggerThreadSchedulerTPP;
typedef DebuggerThreadSchedulerProcPtr DebuggerThreadSchedulerUPP;
struct DeferredTask {volatile QElemPtr qLink;__int16 qType;volatile __int16 dtFlags;DeferredTaskUPP dtAddr;int dtParam;int dtReserved;};
typedef void (__fastcall *DeferredTaskProcPtr)(int dtParam);
typedef DeferredTask *DeferredTaskPtr;
typedef DeferredTaskProcPtr DeferredTaskUPP;
typedef ScriptTokenType DelimType[2];
struct DelimiterInfo {Byte startDelimiter[2];Byte endDelimiter[2];};
typedef DependentNotifyRec *DependentNotifyPtr;
struct DependentNotifyRec {ResType notifyType;ResType notifyClass;DisplayIDType notifyPortID;ComponentInstance notifyComponent;unsigned int notifyVersion;unsigned int notifyFlags;unsigned int notifyReserved;unsigned int notifyFuture;};
typedef unsigned __int16 DepthMode;
typedef ResType DescType;
typedef void (__fastcall *DeskHookProcPtr)(Boolean mouseClick, EventRecord *theEvent);
typedef DeskHookProcPtr DeskHookUPP;
struct DeviceIdent {UInt8 diReserved;UInt8 bus;UInt8 targetID;UInt8 LUN;};
struct DeviceIdentATA {UInt8 diReserved;UInt8 busNum;UInt8 devNum;UInt8 diReserved2;};
typedef LogicalAddress *DeviceLogicalAddressPtr;
typedef void (__fastcall *DeviceLoopDrawingProcPtr)(__int16 depth, __int16 deviceFlags, GDHandle targetDevice, int userData);
typedef DeviceLoopDrawingProcPtr DeviceLoopDrawingUPP;
typedef unsigned int DeviceLoopFlags;
typedef struct OpaqueDeviceNodePtr *DeviceNodePtr;
struct DevicePowerInfo {UInt32 version;RegEntryID regID;OptionBits flags;UInt32 minimumWakeTime;UInt32 sleepPowerNeeded;};
typedef SInt16 DialogItemIndex;
typedef SInt16 DialogItemIndexZeroBased;
typedef SInt16 DialogItemType;
typedef SInt16 DialogPlacementSpec;
typedef struct OpaqueDialogPtr *DialogPtr;
typedef DialogPtr DialogRef;
typedef DialogTPtr *DialogTHndl;
typedef DialogTemplate *DialogTPtr;
struct DialogTemplate {Rect boundsRect;SInt16 procID;Boolean visible;Boolean filler1;Boolean goAwayFlag;Boolean filler2;SInt32 refCon;SInt16 itemsID;Str255 title;};
struct DictionaryAttributeTable {UInt8 datSize;DictionaryEntryAttribute datTable[1];};
typedef DictionaryAttributeTable *DictionaryAttributeTablePtr;
typedef __int16 DictionaryDataInsertMode;
typedef SInt8 DictionaryEntryAttribute;
struct DictionaryInformation {FSSpec dictionaryFSSpec;SInt32 numberOfRecords;SInt32 currentGarbageSize;ScriptCode script;SInt16 maximumKeyLength;SInt8 keyAttributes;};
struct DirInfo {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioFRefNum;SInt8 ioFVersNum;SInt8 filler1;__int16 ioFDirIndex;SInt8 ioFlAttrib;SInt8 ioACUser;DInfo ioDrUsrWds;int ioDrDirID;unsigned __int16 ioDrNmFls;__int16 filler3[9];unsigned int ioDrCrDat;unsigned int ioDrMdDat;unsigned int ioDrBkDat;DXInfo ioDrFndrInfo;int ioDrParID;};
typedef AVIDType DisplayIDType;
typedef DisplayListEntryRec *DisplayListEntryPtr;
struct DisplayListEntryRec {GDHandle displayListEntryGDevice;DisplayIDType displayListEntryDisplayID;UInt32 displayListEntryIncludeFlags;UInt32 displayListEntryReserved1;UInt32 displayListEntryReserved2;UInt32 displayListEntryReserved3;UInt32 displayListEntryReserved4;UInt32 displayListEntryReserved5;};
typedef UInt32 DisplayModeID;
typedef OSErr (__fastcall *DisposeColorPickMethodProcPtr)(UInt32 dataRef);
typedef DisposeColorPickMethodProcPtr DisposeColorPickMethodUPP;
typedef ComponentResult (__fastcall *DoGetFileTranslationListProcPtr)(ComponentInstance self, FileTranslationListHandle translationList);
typedef ComponentResult (__fastcall *DoGetScrapTranslationListProcPtr)(ComponentInstance self, ScrapTranslationListHandle list);
typedef ComponentResult (__fastcall *DoGetTranslatedFilenameProcPtr)(ComponentInstance self, FileType dstType, int dstTypeHint, FSSpec *theDocument);
typedef ComponentResult (__fastcall *DoIdentifyFileProcPtr)(ComponentInstance self, const FSSpec *theDocument, FileType *docType);
typedef ComponentResult (__fastcall *DoIdentifyScrapProcPtr)(ComponentInstance self, const void *dataPtr, Size dataLength, ScrapType *dataFormat);
typedef ComponentResult (__fastcall *DoTranslateFileProcPtr)(ComponentInstance self, TranslationRefNum refNum, const FSSpec *sourceDocument, FileType srcType, int srcTypeHint, const FSSpec *dstDoc, FileType dstType, int dstTypeHint);
typedef ComponentResult (__fastcall *DoTranslateScrapProcPtr)(ComponentInstance self, TranslationRefNum refNum, const void *srcDataPtr, Size srcDataLength, ScrapType srcType, int srcTypeHint, Handle dstData, ScrapType dstType, int dstTypeHint);
typedef __int16 DocOpenMethod;
typedef UInt32 DragActions;
typedef UInt32 DragAttributes;
typedef UInt32 DragBehaviors;
typedef UInt16 DragConstraint;
typedef OSErr (__fastcall *DragDrawingProcPtr)(DragRegionMessage message, RgnHandle showRegion, Point showOrigin, RgnHandle hideRegion, Point hideOrigin, void *dragDrawingRefCon, DragRef theDrag);
typedef DragDrawingProcPtr DragDrawingUPP;
typedef void (*DragGrayRgnProcPtr)(void);
typedef DragGrayRgnProcPtr DragGrayRgnUPP;
typedef UInt32 DragImageFlags;
typedef OSErr (__fastcall *DragInputProcPtr)(Point *mouse, SInt16 *modifiers, void *dragInputRefCon, DragRef theDrag);
typedef DragInputProcPtr DragInputUPP;
typedef UInt32 DragItemRef;
typedef OSErr (__fastcall *DragReceiveHandlerProcPtr)(WindowRef theWindow, void *handlerRefCon, DragRef theDrag);
typedef DragReceiveHandlerProcPtr DragReceiveHandlerUPP;
typedef struct OpaqueDragRef *DragRef;
typedef DragRef DragReference;
typedef SInt16 DragRegionMessage;
typedef OSErr (__fastcall *DragSendDataProcPtr)(FlavorType theType, void *dragSendRefCon, DragItemRef theItemRef, DragRef theDrag);
typedef DragSendDataProcPtr DragSendDataUPP;
typedef OSErr (__fastcall *DragTrackingHandlerProcPtr)(DragTrackingMessage message, WindowRef theWindow, void *handlerRefCon, DragRef theDrag);
typedef DragTrackingHandlerProcPtr DragTrackingHandlerUPP;
typedef SInt16 DragTrackingMessage;
typedef void (__fastcall *DrawHookProcPtr)(unsigned __int16 textOffset, unsigned __int16 drawLen, void *textBufferPtr, TEPtr pTE, TEHandle hTE);
typedef DrawHookProcPtr DrawHookUPP;
typedef SInt16 DriverFlags;
typedef UInt32 DriverOpenCount;
typedef SInt16 DriverRefNum;
struct DrvQEl {QElemPtr qLink;__int16 qType;__int16 dQDrive;__int16 dQRefNum;__int16 dQFSID;unsigned __int16 dQDrvSz;unsigned __int16 dQDrvSz2;};
typedef DrvQEl *DrvQElPtr;
typedef SInt32 Duration;
typedef UInt32 EAddrType;
typedef Boolean (__fastcall *EOLHookProcPtr)(char theChar, TEPtr pTE, TEHandle hTE);
typedef EOLHookProcPtr EOLHookUPP;
struct EQSpectrumBandsRecord {__int16 count;UnsignedFixedPtr frequency;};
typedef EQSpectrumBandsRecord *EQSpectrumBandsRecordPtr;
typedef Boolean (__fastcall *EditUnicodePostUpdateProcPtr)(UniCharArrayHandle uniText, UniCharCount uniTextLength, UniCharArrayOffset iStartOffset, UniCharArrayOffset iEndOffset, void *refcon);
typedef EditUnicodePostUpdateProcPtr EditUnicodePostUpdateUPP;
typedef CMError (__fastcall *EmbedImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, CMProfileRef embedProf, UInt32 embedFlags);
typedef void *EndpointRef;
struct EnetPacketHeader {UInt8 fDestAddr[6];UInt8 fSourceAddr[6];UInt16 fProto;};
struct EvQEl {QElemPtr qLink;SInt16 qType;EventKind evtQWhat;UInt32 evtQMessage;UInt32 evtQWhen;Point evtQWhere;EventModifiers evtQModifiers;};
typedef EvQEl *EvQElPtr;
typedef UInt32 EventAttributes;
typedef UInt32 EventClass;
typedef UInt32 EventClassID;
typedef Boolean (__fastcall *EventComparatorProcPtr)(EventRef inEvent, void *inCompareData);
typedef EventComparatorProcPtr EventComparatorUPP;
typedef struct OpaqueEventHandlerCallRef *EventHandlerCallRef;
typedef OSStatus (__fastcall *EventHandlerProcPtr)(EventHandlerCallRef inHandlerCallRef, EventRef inEvent, void *inUserData);
typedef struct OpaqueEventHandlerRef *EventHandlerRef;
typedef EventHandlerProcPtr EventHandlerUPP;
struct EventHotKeyID {OSType signature;UInt32 id;};
typedef struct OpaqueEventHotKeyRef *EventHotKeyRef;
typedef UInt16 EventKind;
typedef UInt16 EventLoopIdleTimerMessage;
typedef void (__fastcall *EventLoopIdleTimerProcPtr)(EventLoopTimerRef inTimer, EventLoopIdleTimerMessage inState, void *inUserData);
typedef EventLoopIdleTimerProcPtr EventLoopIdleTimerUPP;
typedef struct OpaqueEventLoopRef *EventLoopRef;
typedef void (__fastcall *EventLoopTimerProcPtr)(EventLoopTimerRef inTimer, void *inUserData);
typedef struct __EventLoopTimer *EventLoopTimerRef;
typedef EventLoopTimerProcPtr EventLoopTimerUPP;
typedef UInt16 EventMask;
typedef UInt16 EventModifiers;
typedef UInt16 EventMouseButton;
typedef UInt16 EventMouseWheelAxis;
typedef OSType EventParamName;
typedef OSType EventParamType;
typedef SInt16 EventPriority;
typedef struct OpaqueEventQueueRef *EventQueueRef;
struct EventRecord {EventKind what;UInt32 message;UInt32 when;Point where;EventModifiers modifiers;};
typedef struct OpaqueEventRef *EventRef;
typedef struct OpaqueEventTargetRef *EventTargetRef;
typedef double EventTime;
typedef EventTime EventTimeout;
typedef EventTime EventTimerInterval;
typedef UInt32 EventType;
struct EventTypeSpec {UInt32 eventClass;UInt32 eventKind;};
typedef ExceptionHandlerTPP ExceptionHandler;
typedef OSStatus (__fastcall *ExceptionHandlerProcPtr)(ExceptionInformation *theException);
typedef ExceptionHandlerUPP ExceptionHandlerTPP;
typedef ExceptionHandlerProcPtr ExceptionHandlerUPP;
union ExceptionInfo {MemoryExceptionInformation *memoryInfo;};
typedef ExceptionInformationPowerPC ExceptionInformation;
struct ExceptionInformationPowerPC {ExceptionKind theKind;MachineInformationPowerPC *machineState;RegisterInformationPowerPC *registerImage;FPUInformationPowerPC *FPUImage;ExceptionInfo info;VectorInformationPowerPC *vectorImage;};
typedef unsigned int ExceptionKind;
typedef UInt32 ExecutionLevel;
struct ExtCommonChunk {ID ckID;int ckSize;__int16 numChannels;unsigned int numSampleFrames;__int16 sampleSize;extended80 sampleRate;ID compressionType;char compressionName[1];};
typedef ExtCommonChunk *ExtCommonChunkPtr;
struct ExtComponentResource {ComponentDescription cd;ResourceSpec component;ResourceSpec componentName;ResourceSpec componentInfo;ResourceSpec componentIcon;int componentVersion;int componentRegisterFlags;__int16 componentIconFamily;int count;ComponentPlatformInfo platformArray[1];};
typedef ExtComponentResourcePtr *ExtComponentResourceHandle;
typedef ExtComponentResource *ExtComponentResourcePtr;
struct ExtSoundHeader {Ptr samplePtr;unsigned int numChannels;UnsignedFixed sampleRate;unsigned int loopStart;unsigned int loopEnd;UInt8 encode;UInt8 baseFrequency;unsigned int numFrames;extended80 AIFFSampleRate;Ptr markerChunk;Ptr instrumentChunks;Ptr AESRecording;unsigned __int16 sampleSize;unsigned __int16 futureUse1;unsigned int futureUse2;unsigned int futureUse3;unsigned int futureUse4;UInt8 sampleArea[1];};
typedef ExtSoundHeader *ExtSoundHeaderPtr;
struct ExtendedFileInfo {SInt16 reserved1[4];UInt16 extendedFinderFlags;SInt16 reserved2;SInt32 putAwayFolderID;};
struct ExtendedFolderInfo {Point scrollPosition;SInt32 reserved1;UInt16 extendedFinderFlags;SInt16 reserved2;SInt32 putAwayFolderID;};
struct ExtendedScheduledSoundHeader {SoundHeaderUnion u;int flags;__int16 reserved;__int16 callBackParam1;int callBackParam2;TimeRecord startTime;int recordSize;int extendedFlags;int bufferSize;int frameCount;int *frameSizesArray;int commonFrameSize;void *extensionsPtr;int extensionsSize;unsigned int bufferFlags;unsigned int bufferFlagsMask;};
typedef ExtendedScheduledSoundHeader *ExtendedScheduledSoundHeaderPtr;
typedef unsigned __int8 ExtendedSenseCode;
struct ExtendedSoundComponentData {SoundComponentData desc;int recordSize;int extendedFlags;int bufferSize;int frameCount;int *frameSizesArray;int commonFrameSize;void *extensionsPtr;int extensionsSize;unsigned int bufferFlags;unsigned int bufferFlagsMask;};
typedef ExtendedSoundComponentData *ExtendedSoundComponentDataPtr;
struct ExtendedSoundParamBlock {SoundParamBlock pb;__int16 reserved;int extendedFlags;int bufferSize;int frameCount;int *frameSizesArray;int commonFrameSize;void *extensionsPtr;int extensionsSize;unsigned int bufferFlags;unsigned int bufferFlagsMask;};
typedef ExtendedSoundParamBlock *ExtendedSoundParamBlockPtr;
typedef Boolean (__fastcall *FBCCallbackProcPtr)(UInt16 phase, float percentDone, void *data);
typedef FBCCallbackProcPtr FBCCallbackUPP;
typedef Boolean (__fastcall *FBCHitTestProcPtr)(const FSRef *theFile, void *data);
typedef FBCHitTestProcPtr FBCHitTestUPP;
typedef struct OpaqueFBCSearchSession *FBCSearchSession;
typedef struct OpaqueFBCSummaryRef *FBCSummaryRef;
typedef char *FBCWordItem;
typedef FBCWordItem *FBCWordList;
typedef FCBPBRec *FCBPBPtr;
struct FCBPBRec {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioRefNum;__int16 filler;__int16 ioFCBIndx;__int16 filler1;int ioFCBFlNm;__int16 ioFCBFlags;unsigned __int16 ioFCBStBlk;int ioFCBEOF;int ioFCBPLen;int ioFCBCrPs;__int16 ioFCBVRefNum;int ioFCBClpSiz;int ioFCBParID;};
struct FIDParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;int filler14;StringPtr ioDestNamePtr;int filler15;int ioDestDirID;int filler16;int filler17;int ioSrcDirID;__int16 filler18;int ioFileID;};
typedef FIDParam *FIDParamPtr;
typedef struct __sFILE FILE;
struct FInfo {OSType fdType;OSType fdCreator;UInt16 fdFlags;Point fdLocation;SInt16 fdFldr;};
typedef void (*FKEYProcPtr)(void);
typedef FKEYProcPtr FKEYUPP;
struct FMFilter {UInt32 format;FMFilterSelector selector;union FMFilter::$32C663C535F248F8C4089930703199D9 filter;};
union FMFilter::$32C663C535F248F8C4089930703199D9 {FourCharCode fontTechnologyFilter;FSSpec fontContainerFilter;FMGeneration generationFilter;FMFontFamilyCallbackFilterUPP fontFamilyCallbackFilter;FMFontCallbackFilterUPP fontCallbackFilter;FMFontDirectoryFilter fontDirectoryFilter;};
typedef UInt32 FMFilterSelector;
typedef UInt32 FMFont;
typedef OSStatus (__fastcall *FMFontCallbackFilterProcPtr)(FMFont iFont, void *iRefCon);
typedef FMFontCallbackFilterProcPtr FMFontCallbackFilterUPP;
struct FMFontDirectoryFilter {SInt16 fontFolderDomain;UInt32 reserved[2];};
typedef SInt16 FMFontFamily;
typedef OSStatus (__fastcall *FMFontFamilyCallbackFilterProcPtr)(FMFontFamily iFontFamily, void *iRefCon);
typedef FMFontFamilyCallbackFilterProcPtr FMFontFamilyCallbackFilterUPP;
struct FMFontFamilyInstance {FMFontFamily fontFamily;FMFontStyle fontStyle;};
struct FMFontFamilyInstanceIterator {UInt32 reserved[16];};
struct FMFontFamilyIterator {UInt32 reserved[16];};
struct FMFontIterator {UInt32 reserved[16];};
typedef SInt16 FMFontSize;
typedef SInt16 FMFontStyle;
typedef UInt32 FMGeneration;
struct FMInput {__int16 family;__int16 size;Style face;Boolean needBits;__int16 device;Point numer;Point denom;};
typedef FMOutputPtr FMOutPtr;
struct FMOutput {__int16 errNum;Handle fontHandle;UInt8 boldPixels;UInt8 italicPixels;UInt8 ulOffset;UInt8 ulShadow;UInt8 ulThick;UInt8 shadowPixels;SInt8 extra;UInt8 ascent;UInt8 descent;UInt8 widMax;SInt8 leading;SInt8 curStyle;Point numer;Point denom;};
typedef FMOutput *FMOutputPtr;
struct FMetricRec {Fixed ascent;Fixed descent;Fixed leading;Fixed widMax;Handle wTabHandle;};
typedef FMetricRecPtr *FMetricRecHandle;
typedef FMetricRec *FMetricRecPtr;
typedef UInt32 FNMessage;
typedef UInt32 FNSFeatureFlags;
typedef struct OpaqueFNSFontProfile *FNSFontProfile;
typedef struct OpaqueFNSFontReference *FNSFontReference;
typedef UInt32 FNSMatchOptions;
typedef UInt32 FNSObjectVersion;
struct FNSSysInfo {FNSObjectVersion iSysInfoVersion;FNSFeatureFlags oFeatures;FNSObjectVersion oCurRefVersion;FNSObjectVersion oMinRefVersion;FNSObjectVersion oCurProfileVersion;FNSObjectVersion oMinProfileVersion;UInt16 oFontSyncVersion;};
typedef void (__fastcall *FNSubscriptionProcPtr)(FNMessage message, OptionBits flags, void *refcon, FNSubscriptionRef subscription);
typedef struct OpaqueFNSubscriptionRef *FNSubscriptionRef;
typedef FNSubscriptionProcPtr FNSubscriptionUPP;
typedef FPUInformationPowerPC FPUInformation;
struct FPUInformationPowerPC {UnsignedWide Registers[32];unsigned int FPSCR;unsigned int Reserved;};
struct FSAliasInfo {UTCDateTime volumeCreateDate;UTCDateTime targetCreateDate;OSType fileType;OSType fileCreator;UInt32 parentDirID;UInt32 nodeID;UInt16 filesystemID;UInt16 signature;Boolean volumeIsBootVolume;Boolean volumeIsAutomounted;Boolean volumeIsEjectable;Boolean volumeHasPersistentFileIDs;Boolean isDirectory;};
typedef UInt32 FSAliasInfoBitmap;
typedef FSAliasInfo *FSAliasInfoPtr;
typedef UInt16 FSAllocationFlags;
struct FSCatalogBulkParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;Boolean containerChanged;UInt8 reserved;FSIteratorFlags iteratorFlags;FSIterator iterator;const FSRef *container;ItemCount maximumItems;ItemCount actualItems;FSCatalogInfoBitmap whichInfo;FSCatalogInfo *catalogInfo;FSRef *refs;FSSpec *specs;HFSUniStr255 *names;const FSSearchParams *searchParams;};
typedef FSCatalogBulkParam *FSCatalogBulkParamPtr;
struct FSCatalogInfo {UInt16 nodeFlags;FSVolumeRefNum volume;UInt32 parentDirID;UInt32 nodeID;UInt8 sharingFlags;UInt8 userPrivileges;UInt8 reserved1;UInt8 reserved2;UTCDateTime createDate;UTCDateTime contentModDate;UTCDateTime attributeModDate;UTCDateTime accessDate;UTCDateTime backupDate;UInt32 permissions[4];UInt8 finderInfo[16];UInt8 extFinderInfo[16];UInt64 dataLogicalSize;UInt64 dataPhysicalSize;UInt64 rsrcLogicalSize;UInt64 rsrcPhysicalSize;UInt32 valence;TextEncoding textEncodingHint;};
typedef UInt32 FSCatalogInfoBitmap;
typedef FSCatalogInfo *FSCatalogInfoPtr;
typedef UInt32 FSEjectStatus;
struct FSForkCBInfoParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;SInt16 desiredRefNum;SInt16 volumeRefNum;SInt16 iterator;SInt16 actualRefNum;FSRef *ref;FSForkInfo *forkInfo;HFSUniStr255 *forkName;};
typedef FSForkCBInfoParam *FSForkCBInfoParamPtr;
struct FSForkIOParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;void *reserved1;SInt16 reserved2;SInt16 forkRefNum;UInt8 reserved3;SInt8 permissions;const FSRef *ref;Ptr buffer;UInt32 requestCount;UInt32 actualCount;UInt16 positionMode;SInt64 positionOffset;FSAllocationFlags allocationFlags;UInt64 allocationAmount;UniCharCount forkNameLength;const UniChar *forkName;CatPositionRec forkIterator;HFSUniStr255 *outForkName;};
typedef FSForkIOParam *FSForkIOParamPtr;
struct FSForkInfo {SInt8 flags;SInt8 permissions;FSVolumeRefNum volume;UInt32 reserved2;UInt32 nodeID;UInt32 forkID;UInt64 currentPosition;UInt64 logicalEOF;UInt64 physicalEOF;UInt64 process;};
typedef FSForkInfo *FSForkInfoPtr;
typedef struct OpaqueFSIterator *FSIterator;
typedef OptionBits FSIteratorFlags;
typedef UInt32 FSMountStatus;
struct FSPermissionInfo {UInt32 userID;UInt32 groupID;UInt8 reserved1;UInt8 userAccess;UInt16 mode;UInt32 reserved2;};
struct FSRef {UInt8 hidden[80];};
struct FSRefParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;ConstStringPtr ioNamePtr;__int16 ioVRefNum;SInt16 reserved1;UInt8 reserved2;UInt8 reserved3;const FSRef *ref;FSCatalogInfoBitmap whichInfo;FSCatalogInfo *catInfo;UniCharCount nameLength;const UniChar *name;int ioDirID;FSSpec *spec;FSRef *parentRef;FSRef *newRef;TextEncoding textEncodingHint;HFSUniStr255 *outName;};
typedef FSRefParam *FSRefParamPtr;
typedef FSRef *FSRefPtr;
struct FSSearchParams {Duration searchTime;OptionBits searchBits;UniCharCount searchNameLength;const UniChar *searchName;FSCatalogInfo *searchInfo1;FSCatalogInfo *searchInfo2;};
typedef FSSearchParams *FSSearchParamsPtr;
struct FSSpec {__int16 vRefNum;int parID;StrFileName name;};
typedef FSSpecPtr FSSpecArrayPtr;
typedef FSSpecPtr *FSSpecHandle;
typedef FSSpec *FSSpecPtr;
typedef UInt32 FSUnmountStatus;
typedef void (__fastcall *FSVolumeEjectProcPtr)(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter);
typedef FSVolumeEjectProcPtr FSVolumeEjectUPP;
struct FSVolumeInfo {UTCDateTime createDate;UTCDateTime modifyDate;UTCDateTime backupDate;UTCDateTime checkedDate;UInt32 fileCount;UInt32 folderCount;UInt64 totalBytes;UInt64 freeBytes;UInt32 blockSize;UInt32 totalBlocks;UInt32 freeBlocks;UInt32 nextAllocation;UInt32 rsrcClumpSize;UInt32 dataClumpSize;UInt32 nextCatalogID;UInt8 finderInfo[32];UInt16 flags;UInt16 filesystemID;UInt16 signature;UInt16 driveNumber;__int16 driverRefNum;};
typedef UInt32 FSVolumeInfoBitmap;
struct FSVolumeInfoParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;FSVolumeRefNum ioVRefNum;UInt32 volumeIndex;FSVolumeInfoBitmap whichInfo;FSVolumeInfo *volumeInfo;HFSUniStr255 *volumeName;FSRef *ref;};
typedef FSVolumeInfoParam *FSVolumeInfoParamPtr;
typedef FSVolumeInfo *FSVolumeInfoPtr;
typedef void (__fastcall *FSVolumeMountProcPtr)(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum mountedVolumeRefNum);
typedef FSVolumeMountProcPtr FSVolumeMountUPP;
typedef struct OpaqueFSVolumeOperation *FSVolumeOperation;
typedef SInt16 FSVolumeRefNum;
typedef void (__fastcall *FSVolumeUnmountProcPtr)(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter);
typedef FSVolumeUnmountProcPtr FSVolumeUnmountUPP;
struct FVector {__int16 start;__int16 length;};
struct FXInfo {SInt16 fdIconID;SInt16 fdReserved[3];SInt8 fdScript;SInt8 fdXFlags;SInt16 fdComment;SInt32 fdPutAway;};
struct FamRec {__int16 ffFlags;__int16 ffFamID;__int16 ffFirstChar;__int16 ffLastChar;__int16 ffAscent;__int16 ffDescent;__int16 ffLeading;__int16 ffWidMax;int ffWTabOff;int ffKernOff;int ffStylOff;__int16 ffProperty[9];__int16 ffIntl[2];__int16 ffVersion;};
struct FileInfo {OSType fileType;OSType fileCreator;UInt16 finderFlags;Point location;UInt16 reservedField;};
struct FileParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioFRefNum;SInt8 ioFVersNum;SInt8 filler1;__int16 ioFDirIndex;SInt8 ioFlAttrib;SInt8 ioFlVersNum;FInfo ioFlFndrInfo;unsigned int ioFlNum;unsigned __int16 ioFlStBlk;int ioFlLgLen;int ioFlPyLen;unsigned __int16 ioFlRStBlk;int ioFlRLgLen;int ioFlRPyLen;unsigned int ioFlCrDat;unsigned int ioFlMdDat;};
typedef FileParam *FileParamPtr;
typedef void (__fastcall *FilePlayCompletionProcPtr)(SndChannelPtr chan);
typedef FilePlayCompletionProcPtr FilePlayCompletionUPP;
struct FileTranslationList {unsigned int modDate;unsigned int groupCount;};
typedef FileTranslationListPtr *FileTranslationListHandle;
typedef FileTranslationList *FileTranslationListPtr;
struct FileTranslationSpec {OSType componentSignature;const void *translationSystemInfo;FileTypeSpec src;FileTypeSpec dst;};
typedef FileTranslationSpecArrayPtr *FileTranslationSpecArrayHandle;
typedef FileTranslationSpec *FileTranslationSpecArrayPtr;
typedef OSType FileType;
struct FileTypeSpec {FileType format;int hint;TranslationAttributes flags;OSType catInfoType;OSType catInfoCreator;};
struct FindFolderUserRedirectionGlobals {UInt32 version;UInt32 flags;Str31 userName;__int16 userNameScript;__int16 currentUserFolderVRefNum;int currentUserFolderDirID;__int16 remoteUserFolderVRefNum;int remoteUserFolderDirID;};
typedef FindFolderUserRedirectionGlobals *FindFolderUserRedirectionGlobalsPtr;
typedef int Fixed;
struct FixedPoint {Fixed x;Fixed y;};
typedef Fixed *FixedPtr;
struct FixedRect {Fixed left;Fixed top;Fixed right;Fixed bottom;};
typedef UInt32 FlavorFlags;
typedef OSType FlavorType;
typedef float Float32;
struct Float32Point {Float32 x;Float32 y;};
typedef double Float64;
struct Float80 {SInt16 exp;UInt16 man[4];};
struct Float96 {SInt16 exp[2];UInt16 man[4];};
typedef OSType FolderClass;
struct FolderDesc {Size descSize;FolderType foldType;FolderDescFlags flags;FolderClass foldClass;FolderType foldLocation;OSType badgeSignature;OSType badgeType;UInt32 reserved;StrFileName name;};
typedef UInt32 FolderDescFlags;
typedef FolderDesc *FolderDescPtr;
struct FolderInfo {Rect windowBounds;UInt16 finderFlags;Point location;UInt16 reservedField;};
typedef OSType FolderLocation;
typedef OSStatus (__fastcall *FolderManagerNotificationProcPtr)(OSType message, void *arg, void *userRefCon);
typedef FolderManagerNotificationProcPtr FolderManagerNotificationUPP;
struct FolderRouting {Size descSize;OSType fileType;FolderType routeFromFolder;FolderType routeToFolder;RoutingFlags flags;};
typedef FolderRouting *FolderRoutingPtr;
typedef OSType FolderType;
struct FontAssoc {__int16 numAssoc;};
typedef FMFontFamily FontFamilyID;
struct FontInfo {__int16 ascent;__int16 descent;__int16 widMax;__int16 leading;};
typedef UInt32 FontLanguageCode;
typedef UInt32 FontNameCode;
typedef UInt32 FontPlatformCode;
typedef FMFontSize FontPointSize;
struct FontRec {__int16 fontType;__int16 firstChar;__int16 lastChar;__int16 widMax;__int16 kernMax;__int16 nDescent;__int16 fRectWidth;__int16 fRectHeight;unsigned __int16 owTLoc;__int16 ascent;__int16 descent;__int16 leading;__int16 rowWords;};
typedef FontRecPtr *FontRecHdl;
typedef FontRec *FontRecPtr;
typedef UInt32 FontScriptCode;
struct FontSelectionQDStyle {UInt32 version;FMFontFamilyInstance instance;FMFontSize size;Boolean hasColor;UInt8 reserved;RGBColor color;};
typedef FontSelectionQDStyle *FontSelectionQDStylePtr;
struct FontSpec {__int16 pictFontID;__int16 sysFontID;int size[4];__int16 style;int nameOffset;};
typedef FontSpecPtr *FontSpecHandle;
typedef FontSpec *FontSpecPtr;
struct FontVariation {FourCharCode name;Fixed value;};
struct ForeignPrivParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;int ioFiller21;int ioFiller22;Ptr ioForeignPrivBuffer;int ioForeignPrivActCount;int ioForeignPrivReqCount;int ioFiller23;int ioForeignPrivDirID;int ioForeignPrivInfo1;int ioForeignPrivInfo2;int ioForeignPrivInfo3;int ioForeignPrivInfo4;};
typedef ForeignPrivParam *ForeignPrivParamPtr;
typedef SInt8 FormatClass;
typedef __int16 FormatOrder[1];
typedef FormatOrder *FormatOrderPtr;
typedef SInt8 FormatResultType;
typedef __int16 FormatStatus;
struct FormatVersionChunk {ID ckID;int ckSize;unsigned int timestamp;};
typedef FormatVersionChunk *FormatVersionChunkPtr;
typedef unsigned int FourCharCode;
typedef int Fract;
typedef Fract *FractPtr;
typedef GDPtr *GDHandle;
typedef GDevice *GDPtr;
struct GDevice {__int16 gdRefNum;__int16 gdID;__int16 gdType;ITabHandle gdITable;__int16 gdResPref;SProcHndl gdSearchProc;CProcHndl gdCompProc;__int16 gdFlags;PixMapHandle gdPMap;int gdRefCon;GDHandle gdNextGD;Rect gdRect;int gdMode;__int16 gdCCBytes;__int16 gdCCDepth;Handle gdCCXData;Handle gdCCXMask;Handle gdExt;};
typedef GetNextEventFilterUPP GNEFilterUPP;
typedef GVarPtr *GVarHandle;
typedef GrafVars *GVarPtr;
typedef unsigned int GWorldFlags;
typedef CGrafPtr GWorldPtr;
typedef UInt32 GammaTableID;
struct GammaTbl {__int16 gVersion;__int16 gType;__int16 gFormulaSize;__int16 gChanCnt;__int16 gDataCnt;__int16 gDataWidth;__int16 gFormulaData[1];};
typedef GammaTblPtr *GammaTblHandle;
typedef GammaTbl *GammaTblPtr;
typedef OSAID GenericID;
struct GetGrowImageRegionRec {Rect growRect;RgnHandle growImageRegion;};
typedef CMError (__fastcall *GetImageSpaceProcPtr)(const FSSpec *spec, OSType *space);
typedef CMError (__fastcall *GetIndImageProfileProcPtr)(const FSSpec *spec, UInt32 index, CMProfileRef *prof);
typedef OSErr (__fastcall *GetMissingComponentResourceProcPtr)(Component c, OSType resType, __int16 resID, void *refCon, Handle *resource);
typedef GetMissingComponentResourceProcPtr GetMissingComponentResourceUPP;
typedef void (__fastcall *GetNextEventFilterProcPtr)(EventRecord *theEvent, Boolean *result);
typedef GetNextEventFilterProcPtr GetNextEventFilterUPP;
typedef GetScrapDataUPP GetScrapData;
typedef OSErr (__fastcall *GetScrapDataProcPtr)(ScrapType requestedFormat, Handle dataH, void *srcDataGetterRefCon);
typedef GetScrapDataProcPtr GetScrapDataUPP;
struct GetVolParmsInfoBuffer {__int16 vMVersion;int vMAttrib;Handle vMLocalHand;int vMServerAdr;int vMVolumeGrade;__int16 vMForeignPrivID;int vMExtendedAttributes;void *vMDeviceID;UniCharCount vMMaxNameLength;};
typedef GetWindowRegionRec *GetWindowRegionPtr;
struct GetWindowRegionRec {RgnHandle winRgn;WindowRegionCode regionCode;};
typedef GetWindowRegionRec *GetWindowRegionRecPtr;
typedef UInt16 GlyphCollection;
typedef ATSGlyphRef GlyphID;
typedef struct OpaqueGrafPtr *GrafPtr;
struct GrafVars {RGBColor rgbOpColor;RGBColor rgbHiliteColor;Handle pmFgColor;__int16 pmFgIndex;Handle pmBkColor;__int16 pmBkIndex;__int16 pmFlags;};
typedef SInt8 GrafVerb;
typedef int (__fastcall *GrowZoneProcPtr)(Size cbNeeded);
typedef GrowZoneProcPtr GrowZoneUPP;
struct HDQueueElement {struct HDQueueElement *hdQLink;__int16 hdQType;__int16 hdFlags;HDSpindownUPP hdProc;int hdUser;};
typedef void (__fastcall *HDSpindownProcPtr)(HDQueueElement *theElement);
typedef HDSpindownProcPtr HDSpindownUPP;
struct HFSCatalogFile {SInt16 recordType;UInt8 flags;SInt8 fileType;FInfo userInfo;HFSCatalogNodeID fileID;UInt16 dataStartBlock;SInt32 dataLogicalSize;SInt32 dataPhysicalSize;UInt16 rsrcStartBlock;SInt32 rsrcLogicalSize;SInt32 rsrcPhysicalSize;UInt32 createDate;UInt32 modifyDate;UInt32 backupDate;FXInfo finderInfo;UInt16 clumpSize;HFSExtentRecord dataExtents;HFSExtentRecord rsrcExtents;UInt32 reserved;};
struct HFSCatalogFolder {SInt16 recordType;UInt16 flags;UInt16 valence;HFSCatalogNodeID folderID;UInt32 createDate;UInt32 modifyDate;UInt32 backupDate;DInfo userInfo;DXInfo finderInfo;UInt32 reserved[4];};
struct HFSCatalogKey {UInt8 keyLength;UInt8 reserved;HFSCatalogNodeID parentID;Str31 nodeName;};
typedef UInt32 HFSCatalogNodeID;
struct HFSCatalogThread {SInt16 recordType;SInt32 reserved[2];HFSCatalogNodeID parentID;Str31 nodeName;};
struct HFSExtentDescriptor {UInt16 startBlock;UInt16 blockCount;};
struct HFSExtentKey {UInt8 keyLength;UInt8 forkType;HFSCatalogNodeID fileID;UInt16 startBlock;};
typedef HFSExtentDescriptor HFSExtentRecord[3];
struct HFSFlavor {OSType fileType;OSType fileCreator;UInt16 fdFlags;FSSpec fileSpec;};
struct HFSMasterDirectoryBlock {UInt16 drSigWord;UInt32 drCrDate;UInt32 drLsMod;UInt16 drAtrb;UInt16 drNmFls;UInt16 drVBMSt;UInt16 drAllocPtr;UInt16 drNmAlBlks;UInt32 drAlBlkSiz;UInt32 drClpSiz;UInt16 drAlBlSt;UInt32 drNxtCNID;UInt16 drFreeBks;Str27 drVN;UInt32 drVolBkUp;UInt16 drVSeqNum;UInt32 drWrCnt;UInt32 drXTClpSiz;UInt32 drCTClpSiz;UInt16 drNmRtDirs;UInt32 drFilCnt;UInt32 drDirCnt;SInt32 drFndrInfo[8];UInt16 drEmbedSigWord;HFSExtentDescriptor drEmbedExtent;UInt32 drXTFlSize;HFSExtentRecord drXTExtRec;UInt32 drCTFlSize;HFSExtentRecord drCTExtRec;};
struct HFSPlusAttrExtents {UInt32 recordType;UInt32 reserved;HFSPlusExtentRecord extents;};
struct HFSPlusAttrForkData {UInt32 recordType;UInt32 reserved;HFSPlusForkData theFork;};
struct HFSPlusAttrInlineData {UInt32 recordType;UInt32 reserved;UInt32 logicalSize;UInt8 userData[2];};
union HFSPlusAttrRecord {UInt32 recordType;HFSPlusAttrInlineData inlineData;HFSPlusAttrForkData forkData;HFSPlusAttrExtents overflowExtents;};
struct HFSPlusCatalogFile {SInt16 recordType;UInt16 flags;UInt32 reserved1;HFSCatalogNodeID fileID;UInt32 createDate;UInt32 contentModDate;UInt32 attributeModDate;UInt32 accessDate;UInt32 backupDate;HFSPlusPermissions permissions;FInfo userInfo;FXInfo finderInfo;UInt32 textEncoding;UInt32 reserved2;HFSPlusForkData dataFork;HFSPlusForkData resourceFork;};
struct HFSPlusCatalogFolder {SInt16 recordType;UInt16 flags;UInt32 valence;HFSCatalogNodeID folderID;UInt32 createDate;UInt32 contentModDate;UInt32 attributeModDate;UInt32 accessDate;UInt32 backupDate;HFSPlusPermissions permissions;DInfo userInfo;DXInfo finderInfo;UInt32 textEncoding;UInt32 reserved;};
struct HFSPlusCatalogKey {UInt16 keyLength;HFSCatalogNodeID parentID;HFSUniStr255 nodeName;};
struct HFSPlusCatalogThread {SInt16 recordType;SInt16 reserved;HFSCatalogNodeID parentID;HFSUniStr255 nodeName;};
struct HFSPlusExtentDescriptor {UInt32 startBlock;UInt32 blockCount;};
struct HFSPlusExtentKey {UInt16 keyLength;UInt8 forkType;UInt8 pad;HFSCatalogNodeID fileID;UInt32 startBlock;};
typedef HFSPlusExtentDescriptor HFSPlusExtentRecord[8];
struct HFSPlusForkData {UInt64 logicalSize;UInt32 clumpSize;UInt32 totalBlocks;HFSPlusExtentRecord extents;};
struct HFSPlusPermissions {UInt32 ownerID;UInt32 groupID;UInt32 permissions;UInt32 specialDevice;};
struct HFSPlusVolumeHeader {UInt16 signature;UInt16 version;UInt32 attributes;UInt32 lastMountedVersion;UInt32 reserved;UInt32 createDate;UInt32 modifyDate;UInt32 backupDate;UInt32 checkedDate;UInt32 fileCount;UInt32 folderCount;UInt32 blockSize;UInt32 totalBlocks;UInt32 freeBlocks;UInt32 nextAllocation;UInt32 rsrcClumpSize;UInt32 dataClumpSize;HFSCatalogNodeID nextCatalogID;UInt32 writeCount;UInt64 encodingsBitmap;UInt8 finderInfo[32];HFSPlusForkData allocationFile;HFSPlusForkData extentsFile;HFSPlusForkData catalogFile;HFSPlusForkData attributesFile;HFSPlusForkData startupFile;};
struct HFSUniStr255 {UInt16 length;UniChar unicode[255];};
struct HFileInfo {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioFRefNum;SInt8 ioFVersNum;SInt8 filler1;__int16 ioFDirIndex;SInt8 ioFlAttrib;SInt8 ioACUser;FInfo ioFlFndrInfo;int ioDirID;unsigned __int16 ioFlStBlk;int ioFlLgLen;int ioFlPyLen;unsigned __int16 ioFlRStBlk;int ioFlRLgLen;int ioFlRPyLen;unsigned int ioFlCrDat;unsigned int ioFlMdDat;unsigned int ioFlBkDat;FXInfo ioFlXFndrInfo;int ioFlParID;int ioFlClpSiz;};
struct HFileParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioFRefNum;SInt8 ioFVersNum;SInt8 filler1;__int16 ioFDirIndex;SInt8 ioFlAttrib;SInt8 ioFlVersNum;FInfo ioFlFndrInfo;int ioDirID;unsigned __int16 ioFlStBlk;int ioFlLgLen;int ioFlPyLen;unsigned __int16 ioFlRStBlk;int ioFlRLgLen;int ioFlRPyLen;unsigned int ioFlCrDat;unsigned int ioFlMdDat;};
typedef HFileParam *HFileParamPtr;
struct HICommand {UInt32 attributes;UInt32 commandID;struct HICommand::$327CE9FA1AEDAC714EE7810254360E98 menu;};
struct HICommand::$327CE9FA1AEDAC714EE7810254360E98 {MenuRef menuRef;MenuItemIndex menuItemIndex;};
struct HICommandExtended {UInt32 attributes;UInt32 commandID;union HICommandExtended::$746927879B3980A0BBAF90ADC3D7C709 source;};
union HICommandExtended::$746927879B3980A0BBAF90ADC3D7C709 {ControlRef control;WindowRef window;struct HICommandExtended::$746927879B3980A0BBAF90ADC3D7C709::$327CE9FA1AEDAC714EE7810254360E98 menu;};
struct HICommandExtended::$746927879B3980A0BBAF90ADC3D7C709::$327CE9FA1AEDAC714EE7810254360E98 {MenuRef menuRef;MenuItemIndex menuItemIndex;};
typedef struct __HIShape *HIMutableShapeRef;
struct HIOParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioRefNum;SInt8 ioVersNum;SInt8 ioPermssn;Ptr ioMisc;Ptr ioBuffer;int ioReqCount;int ioActCount;__int16 ioPosMode;int ioPosOffset;};
typedef HIOParam *HIOParamPtr;
typedef struct OpaqueHIObjectClassRef *HIObjectClassRef;
typedef struct OpaqueHIObjectRef *HIObjectRef;
typedef CGPoint HIPoint;
typedef CGRect HIRect;
typedef const struct __HIShape *HIShapeRef;
typedef CGSize HISize;
typedef UInt32 HIToolbarDisplayMode;
typedef UInt32 HIToolbarDisplaySize;
typedef HIObjectRef HIToolbarItemRef;
typedef HIObjectRef HIToolbarRef;
typedef ControlID HIViewID;
typedef ControlPartCode HIViewPartCode;
typedef ControlRef HIViewRef;
typedef UInt32 HIViewZOrderOp;
typedef SInt16 HMContentProvidedType;
typedef SInt16 HMContentRequest;
typedef UInt32 HMContentType;
typedef OSStatus (__fastcall *HMControlContentProcPtr)(ControlRef inControl, Point inGlobalMouse, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent);
typedef HMControlContentProcPtr HMControlContentUPP;
struct HMHelpContent {HMContentType contentType;union HMHelpContent::$3C57C3C2659438C747223F316D10A707 u;};
union HMHelpContent::$3C57C3C2659438C747223F316D10A707 {CFStringRef tagCFString;Str255 tagString;HMStringResType tagStringRes;TEHandle tagTEHandle;SInt16 tagTextRes;SInt16 tagStrRes;};
typedef HMHelpContentRec *HMHelpContentPtr;
struct HMHelpContentRec {SInt32 version;Rect absHotRect;HMTagDisplaySide tagSide;HMHelpContent content[2];};
typedef OSStatus (__fastcall *HMMenuItemContentProcPtr)(const MenuTrackingData *inTrackingData, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent);
typedef HMMenuItemContentProcPtr HMMenuItemContentUPP;
typedef OSStatus (__fastcall *HMMenuTitleContentProcPtr)(MenuRef inMenu, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent);
typedef HMMenuTitleContentProcPtr HMMenuTitleContentUPP;
typedef HMMessageRecord *HMMessageRecPtr;
struct HMMessageRecord {SInt16 hmmHelpType;union HMMessageRecord::$59AED1D26596919C25CA9512E037DD15 u;};
union HMMessageRecord::$59AED1D26596919C25CA9512E037DD15 {Str255 hmmString;SInt16 hmmPict;TEHandle hmmTEHandle;HMStringResType hmmStringRes;SInt16 hmmPictRes;PicHandle hmmPictHandle;SInt16 hmmTERes;SInt16 hmmSTRRes;};
struct HMStringResType {__int16 hmmResID;__int16 hmmIndex;};
typedef SInt16 HMTagDisplaySide;
typedef OSStatus (__fastcall *HMWindowContentProcPtr)(WindowRef inWindow, Point inGlobalMouse, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent);
typedef HMWindowContentProcPtr HMWindowContentUPP;
struct HMenuBarHeader {UInt16 lastHMenu;PixMapHandle menuTitleBits;};
struct HMenuBarMenu {MenuRef menu;SInt16 reserved;};
union HParamBlockRec {HIOParam ioParam;HFileParam fileParam;HVolumeParam volumeParam;AccessParam accessParam;ObjParam objParam;CopyParam copyParam;WDParam wdParam;FIDParam fidParam;CSParam csParam;ForeignPrivParam foreignPrivParam;};
typedef HParamBlockRec *HParmBlkPtr;
typedef OSStatus (__fastcall *HRNewCFURLProcPtr)(CFURLRef url, CFStringRef targetString, Boolean addToHistory, void *refCon);
typedef HRNewCFURLProcPtr HRNewCFURLUPP;
typedef OSStatus (__fastcall *HRNewURLProcPtr)(const char *url, const char *targetFrame, Boolean addToHistory, void *refCon);
typedef HRNewURLProcPtr HRNewURLUPP;
typedef struct OpaqueHRReference *HRReference;
typedef SInt16 HRScrollbarState;
typedef OSStatus (__fastcall *HRURLToFSRefProcPtr)(CFStringRef rootString, CFStringRef linkString, FSRef *fref, URLSourceType urlSourceType, void *refCon);
typedef HRURLToFSRefProcPtr HRURLToFSRefUPP;
typedef OSStatus (__fastcall *HRURLToFSSpecProcPtr)(const char *rootURL, const char *linkURL, FSSpec *fsspec, URLSourceType urlSourceType, void *refCon);
typedef HRURLToFSSpecProcPtr HRURLToFSSpecUPP;
typedef Boolean (__fastcall *HRWasCFURLVisitedProcPtr)(CFURLRef url, void *refCon);
typedef HRWasCFURLVisitedProcPtr HRWasCFURLVisitedUPP;
typedef Boolean (__fastcall *HRWasURLVisitedProcPtr)(const char *url, void *refCon);
typedef HRWasURLVisitedProcPtr HRWasURLVisitedUPP;
struct HSLColor {SmallFract hue;SmallFract saturation;SmallFract lightness;};
struct HSVColor {SmallFract hue;SmallFract saturation;SmallFract value;};
struct HVolumeParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;int filler2;__int16 ioVolIndex;unsigned int ioVCrDate;unsigned int ioVLsMod;__int16 ioVAtrb;unsigned __int16 ioVNmFls;unsigned __int16 ioVBitMap;unsigned __int16 ioAllocPtr;unsigned __int16 ioVNmAlBlks;unsigned int ioVAlBlkSiz;unsigned int ioVClpSiz;unsigned __int16 ioAlBlSt;unsigned int ioVNxtCNID;unsigned __int16 ioVFrBlk;unsigned __int16 ioVSigWord;__int16 ioVDrvInfo;__int16 ioVDRefNum;__int16 ioVFSID;unsigned int ioVBkUp;__int16 ioVSeqNum;unsigned int ioVWrCnt;unsigned int ioVFilCnt;unsigned int ioVDirCnt;int ioVFndrInfo[8];};
typedef HVolumeParam *HVolumeParamPtr;
typedef Ptr *Handle;
typedef void (__fastcall *HighHookProcPtr)(const Rect *r, TEPtr pTE);
typedef HighHookProcPtr HighHookUPP;
typedef MDEFHiliteItemData HiliteMenuItemData;
typedef MDEFHiliteItemDataPtr HiliteMenuItemDataPtr;
typedef Boolean (__fastcall *HitTestHookProcPtr)(unsigned __int16 styleRunLen, unsigned __int16 styleRunOffset, unsigned __int16 slop, void *textBufferPtr, TEPtr pTE, TEHandle hTE, unsigned __int16 *pixelWidth, unsigned __int16 *charOffset, Boolean *pixelInChar);
typedef HitTestHookProcPtr HitTestHookUPP;
typedef UInt8 HomographAccent;
struct HomographDicInfoRec {DCMDictionaryID dictionaryID;DCMUniqueID uniqueID;};
typedef UInt16 HomographWeight;
typedef struct OpaqueIBNibRef *IBNibRef;
typedef void (__fastcall *ICACompletion)(ICAHeader *pb);
typedef struct OpaqueICAConnectionID *ICAConnectionID;
struct ICACopyObjectPropertyDictionaryPB {ICAHeader header;ICAObject object;CFDictionaryRef *theDict;};
struct ICADownloadFilePB {ICAHeader header;ICAObject object;FSRef *dirFSRef;UInt32 flags;OSType fileType;OSType fileCreator;Fixed rotationAngle;FSRef *fileFSRef;};
typedef struct OpaqueICAEventDataCookie *ICAEventDataCookie;
struct ICAExtendedRegisterEventNotificationPB {ICAHeader header;ICAObject object;OSType extd;ICACompletion notifyProc;UInt32 rawEventType;OSType eventType;OSType eventClass;UInt32 eventDataSize;ICAEventDataCookie eventDataCookie;ICAObject deviceObject;};
struct ICAGetChildCountPB {ICAHeader header;ICAObject object;UInt32 count;};
struct ICAGetDeviceListPB {ICAHeader header;ICAObject object;};
struct ICAGetNthChildPB {ICAHeader header;ICAObject parentObject;UInt32 index;ICAObject childObject;ICAObjectInfo childInfo;};
struct ICAGetNthPropertyPB {ICAHeader header;ICAObject object;UInt32 index;ICAProperty property;ICAPropertyInfo propertyInfo;};
struct ICAGetObjectInfoPB {ICAHeader header;ICAObject object;ICAObjectInfo objectInfo;};
struct ICAGetObjectRefConPB {ICAHeader header;ICAObject object;UInt32 objectRefCon;};
struct ICAGetParentOfObjectPB {ICAHeader header;ICAObject object;ICAObject parentObject;ICAObjectInfo parentInfo;};
struct ICAGetParentOfPropertyPB {ICAHeader header;ICAProperty property;ICAObject parentObject;ICAObjectInfo parentInfo;};
struct ICAGetPropertyByTypePB {ICAHeader header;ICAObject object;OSType propertyType;ICAProperty property;ICAPropertyInfo propertyInfo;};
struct ICAGetPropertyCountPB {ICAHeader header;ICAObject object;UInt32 count;};
struct ICAGetPropertyDataPB {ICAHeader header;ICAProperty property;UInt32 startByte;UInt32 requestedSize;void *dataPtr;UInt32 actualSize;OSType dataType;};
struct ICAGetPropertyInfoPB {ICAHeader header;ICAProperty property;ICAPropertyInfo propertyInfo;};
struct ICAGetPropertyRefConPB {ICAHeader header;ICAProperty property;UInt32 propertyRefCon;};
struct ICAGetRootOfObjectPB {ICAHeader header;ICAObject object;ICAObject rootObject;ICAObjectInfo rootInfo;};
struct ICAGetRootOfPropertyPB {ICAHeader header;ICAProperty property;ICAObject rootObject;ICAObjectInfo rootInfo;};
struct ICAHeader {OSErr err;UInt32 refcon;};
struct ICAMessage {OSType messageType;UInt32 startByte;void *dataPtr;UInt32 dataSize;OSType dataType;};
typedef struct OpaqueICAObject *ICAObject;
struct ICAObjectInfo {OSType objectType;OSType objectSubtype;};
struct ICAObjectSendMessagePB {ICAHeader header;ICAObject object;ICAMessage message;UInt32 result;};
typedef struct OpaqueICAProperty *ICAProperty;
struct ICAPropertyInfo {OSType propertyType;OSType dataType;UInt32 dataSize;UInt32 dataFlags;};
struct ICARegisterEventNotificationPB {ICAHeader header;ICAObject object;OSType notifyType;ICACompletion notifyProc;};
struct ICAScannerCloseSessionPB {ICAHeader header;ICAScannerSessionID sessionID;};
struct ICAScannerGetParametersPB {ICAHeader header;ICAScannerSessionID sessionID;CFMutableDictionaryRef theDict;};
struct ICAScannerInitializePB {ICAHeader header;ICAScannerSessionID sessionID;};
struct ICAScannerOpenSessionPB {ICAHeader header;ICAObject object;ICAScannerSessionID sessionID;};
typedef struct OpaqueICAScannerSessionID *ICAScannerSessionID;
struct ICAScannerSetParametersPB {ICAHeader header;ICAScannerSessionID sessionID;CFMutableDictionaryRef theDict;};
struct ICAScannerStartPB {ICAHeader header;ICAScannerSessionID sessionID;};
struct ICAScannerStatusPB {ICAHeader header;ICAScannerSessionID sessionID;UInt32 status;};
struct ICASetObjectRefConPB {ICAHeader header;ICAObject object;UInt32 objectRefCon;};
struct ICASetPropertyDataPB {ICAHeader header;ICAProperty property;UInt32 startByte;void *dataPtr;UInt32 dataSize;OSType dataType;};
struct ICASetPropertyRefConPB {ICAHeader header;ICAProperty property;UInt32 propertyRefCon;};
struct ICAThumbnail {UInt32 width;UInt32 height;UInt32 dataSize;UInt8 data[1];};
struct ICAppSpec {OSType fCreator;Str63 name;};
typedef ICAppSpecPtr *ICAppSpecHandle;
struct ICAppSpecList {__int16 numberOfItems;ICAppSpec appSpecs[1];};
typedef ICAppSpecListPtr *ICAppSpecListHandle;
typedef ICAppSpecList *ICAppSpecListPtr;
typedef ICAppSpec *ICAppSpecPtr;
typedef UInt32 ICAttr;
struct ICCharTable {unsigned __int8 netToMac[256];unsigned __int8 macToNet[256];};
typedef ICCharTablePtr *ICCharTableHandle;
typedef ICCharTable *ICCharTablePtr;
typedef void (__fastcall *ICDCompletion)(ICDHeader *pb);
struct ICDHeader {OSErr err;UInt32 refcon;};
struct ICD_DisposeObjectPB {ICDHeader header;ICAObject object;};
struct ICD_DisposePropertyPB {ICDHeader header;ICAProperty property;};
struct ICD_NewObjectPB {ICDHeader header;ICAObject parentObject;ICAObjectInfo objectInfo;ICAObject object;};
struct ICD_NewPropertyPB {ICDHeader header;ICAObject object;ICAPropertyInfo propertyInfo;ICAProperty property;};
struct ICDirSpec {__int16 vRefNum;int dirID;};
typedef ICDirSpec ICDirSpecArray[4];
typedef ICDirSpecArray *ICDirSpecArrayPtr;
struct ICFileSpec {Str31 volName;int volCreationDate;FSSpec fss;AliasRecord alias;};
typedef ICFileSpecPtr *ICFileSpecHandle;
typedef ICFileSpec *ICFileSpecPtr;
typedef __int16 ICFixedLength;
struct ICFontRecord {__int16 size;Style face;char pad;Str255 font;};
typedef ICFontRecordPtr *ICFontRecordHandle;
typedef ICFontRecord *ICFontRecordPtr;
typedef struct OpaqueICInstance *ICInstance;
struct ICMapEntry {__int16 totalLength;ICFixedLength fixedLength;__int16 version;OSType fileType;OSType fileCreator;OSType postCreator;ICMapEntryFlags flags;Str255 extension;Str255 creatorAppName;Str255 postAppName;Str255 MIMEType;Str255 entryName;};
typedef int ICMapEntryFlags;
typedef ICMapEntryPtr *ICMapEntryHandle;
typedef ICMapEntry *ICMapEntryPtr;
typedef UInt8 ICPerm;
typedef int ICProfileID;
typedef ICProfileID *ICProfileIDPtr;
struct ICServiceEntry {Str255 name;__int16 port;ICServiceEntryFlags flags;};
typedef __int16 ICServiceEntryFlags;
typedef ICServiceEntryPtr *ICServiceEntryHandle;
typedef ICServiceEntry *ICServiceEntryPtr;
struct ICServices {__int16 count;ICServiceEntry services[1];};
typedef ICServicesPtr *ICServicesHandle;
typedef ICServices *ICServicesPtr;
typedef unsigned int ID;
typedef unsigned int IOAlignment;
typedef void (__fastcall *IOAsyncCallback)(void *refcon, IOReturn result, void **args, int numArgs);
typedef void (__fastcall *IOAsyncCallback0)(void *refcon, IOReturn result);
typedef void (__fastcall *IOAsyncCallback1)(void *refcon, IOReturn result, void *arg0);
typedef void (__fastcall *IOAsyncCallback2)(void *refcon, IOReturn result, void *arg0, void *arg1);
struct IOAsyncCompletionContent {IOReturn result;void *args[];};
typedef UInt32 IOByteCount;
typedef enum $82CE925440FCEA4E83EDF6CF10782885 IOCache;
typedef UInt32 IOCacheMode;
typedef OptionBits IOCheckpointOptions;
typedef UInt32 IOCommandCode;
typedef struct OpaqueIOCommandID *IOCommandID;
typedef void (__fastcall *IOCompletionProcPtr)(ParmBlkPtr paramBlock);
typedef IOCompletionProcPtr IOCompletionUPP;
typedef unsigned int IODeviceNumber;
typedef SInt32 IOFixed;
typedef UInt32 IOItemCount;
typedef IOVirtualAddress IOLogicalAddress;
typedef struct $312614BEBC9CD181F3FDC0EAC6892AB9 IONamedValue;
typedef struct IONotificationPort *IONotificationPortRef;
struct IOObject;
typedef unsigned int IOObjectNumber;
typedef UInt32 IOOptionBits;
struct IOParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioRefNum;SInt8 ioVersNum;SInt8 ioPermssn;Ptr ioMisc;Ptr ioBuffer;int ioReqCount;int ioActCount;__int16 ioPosMode;int ioPosOffset;};
typedef IOParam *IOParamPtr;
typedef UInt32 IOPhysicalAddress;
typedef UInt32 IOPhysicalLength;
typedef struct OpaqueIOPreparationID *IOPreparationID;
typedef OptionBits IOPreparationOptions;
typedef OptionBits IOPreparationState;
struct IOPreparationTable {IOPreparationOptions options;IOPreparationState state;IOPreparationID preparationID;AddressSpaceID addressSpace;ByteCount granularity;ByteCount firstPrepared;ByteCount lengthPrepared;ItemCount mappingEntryCount;LogicalMappingTablePtr logicalMapping;PhysicalMappingTablePtr physicalMapping;union IOPreparationTable::$D6C1CDEF1A46E230027B1C1F19EA5ABF rangeInfo;};
union IOPreparationTable::$D6C1CDEF1A46E230027B1C1F19EA5ABF {AddressRange range;MultipleAddressRange multipleRanges;};
typedef kern_return_t IOReturn;
typedef void (__fastcall *IOServiceInterestCallback)(void *refcon, io_service_t service, natural_t messageType, void *messageArgument);
struct IOServiceInterestContent {natural_t messageType;void *messageArgument[1];};
typedef void (__fastcall *IOServiceMatchingCallback)(void *refcon, io_iterator_t iterator);
typedef UInt32 IOVersion;
typedef vm_address_t IOVirtualAddress;
typedef struct $2456364F4C434692C771B64C57707454 IOVirtualRange;
typedef SInt8 ISAType;
typedef InterruptSetMember ISTProperty[3];
struct ITab {int iTabSeed;__int16 iTabRes;Byte iTTable[1];};
typedef ITabPtr *ITabHandle;
typedef ITab *ITabPtr;
typedef IconActionProcPtr IconAction;
typedef OSErr (__fastcall *IconActionProcPtr)(ResType theType, Handle *theIcon, void *yourDataPtr);
typedef IconActionProcPtr IconActionUPP;
typedef SInt16 IconAlignmentType;
typedef Handle IconCacheRef;
struct IconFamilyElement {OSType elementType;Size elementSize;unsigned __int8 elementData[1];};
typedef IconFamilyPtr *IconFamilyHandle;
typedef IconFamilyResource *IconFamilyPtr;
struct IconFamilyResource {OSType resourceType;Size resourceSize;IconFamilyElement elements[1];};
typedef IconGetterProcPtr IconGetter;
typedef Handle (__fastcall *IconGetterProcPtr)(ResType theType, void *yourDataPtr);
typedef IconGetterProcPtr IconGetterUPP;
typedef struct OpaqueIconRef *IconRef;
typedef UInt32 IconSelectorValue;
typedef UInt32 IconServicesUsageFlags;
typedef Handle IconSuiteRef;
typedef SInt16 IconTransformType;
typedef Boolean (__fastcall *IndexToStringProcPtr)(__int16 item, ScriptCode *itemsScript, StringPtr *itemsStringPtr, void *yourDataPtr);
typedef IndexToStringProcPtr IndexToStringUPP;
struct IndicatorDragConstraint {Rect limitRect;Rect slopRect;DragConstraint axis;};
typedef IndicatorDragConstraint *IndicatorDragConstraintPtr;
struct InetAddress {OTAddressType fAddressType;InetPort fPort;InetHost fHost;UInt8 fUnused[8];};
struct InetDHCPOption {UInt8 fOptionTag;UInt8 fOptionLen;UInt8 fOptionValue;};
typedef char InetDomainName[256];
typedef UInt32 InetHost;
struct InetHostInfo {InetDomainName name;InetHost addrs[10];};
struct InetInterfaceInfo {InetHost fAddress;InetHost fNetmask;InetHost fBroadcastAddr;InetHost fDefaultGatewayAddr;InetHost fDNSAddr;UInt16 fVersion;UInt16 fHWAddrLen;UInt8 *fHWAddr;UInt32 fIfMTU;UInt8 *fReservedPtrs[2];InetDomainName fDomainName;UInt32 fIPSecondaryCount;UInt8 fReserved[252];};
struct InetMailExchange {UInt16 preference;InetDomainName exchange;};
typedef UInt16 InetPort;
typedef void *InetSvcRef;
struct InetSysInfo {char cpuType[32];char osType[32];};
typedef OSErr (__fastcall *InitPickMethodProcPtr)(SInt16 colorsRequested, UInt32 *dataRef, SInt16 *colorBankType);
typedef InitPickMethodProcPtr InitPickMethodUPP;
struct InstrumentChunk {ID ckID;int ckSize;UInt8 baseFrequency;UInt8 detune;UInt8 lowFrequency;UInt8 highFrequency;UInt8 lowVelocity;UInt8 highVelocity;__int16 gain;AIFFLoop sustainLoop;AIFFLoop releaseLoop;};
typedef InstrumentChunk *InstrumentChunkPtr;
typedef OSType InterfaceTypeList[1];
typedef InterruptSourceState (__fastcall *InterruptDisabler)(InterruptSetMember ISTmember, void *refCon);
typedef void (__fastcall *InterruptEnabler)(InterruptSetMember ISTmember, void *refCon);
typedef InterruptMemberNumber (__fastcall *InterruptHandler)(InterruptSetMember ISTmember, void *refCon, UInt32 theIntCount);
typedef int InterruptMemberNumber;
typedef int InterruptReturnValue;
typedef struct OpaqueInterruptSetID *InterruptSetID;
struct InterruptSetMember {InterruptSetID setID;InterruptMemberNumber member;};
typedef OptionBits InterruptSetOptions;
typedef Boolean InterruptSourceState;
typedef Intl0Ptr *Intl0Hndl;
typedef Intl0Rec *Intl0Ptr;
struct Intl0Rec {char decimalPt;char thousSep;char listSep;char currSym1;char currSym2;char currSym3;UInt8 currFmt;UInt8 dateOrder;UInt8 shrtDateFmt;char dateSep;UInt8 timeCycle;UInt8 timeFmt;char mornStr[4];char eveStr[4];char timeSep;char time1Suff;char time2Suff;char time3Suff;char time4Suff;char time5Suff;char time6Suff;char time7Suff;char time8Suff;UInt8 metricSys;__int16 intl0Vers;};
typedef Intl1Ptr *Intl1Hndl;
typedef Intl1Rec *Intl1Ptr;
struct Intl1Rec {Str15 days[7];Str15 months[12];UInt8 suppressDay;UInt8 lngDateFmt;UInt8 dayLeading0;UInt8 abbrLen;char st0[4];char st1[4];char st2[4];char st3[4];char st4[4];__int16 intl1Vers;__int16 localRtn[1];};
struct IntlText {ScriptCode theScriptCode;LangCode theLangCode;char theText[1];};
typedef UInt32 ItemCount;
typedef DragItemRef ItemReference;
struct Itl1ExtRec {Intl1Rec base;__int16 version;__int16 format;__int16 calendarCode;int extraDaysTableOffset;int extraDaysTableLength;int extraMonthsTableOffset;int extraMonthsTableLength;int abbrevDaysTableOffset;int abbrevDaysTableLength;int abbrevMonthsTableOffset;int abbrevMonthsTableLength;int extraSepsTableOffset;int extraSepsTableLength;__int16 tables[1];};
typedef Itl4Ptr *Itl4Handle;
typedef Itl4Rec *Itl4Ptr;
struct Itl4Rec {__int16 flags;int resourceType;__int16 resourceNum;__int16 version;int resHeader1;int resHeader2;__int16 numTables;int mapOffset;int strOffset;int fetchOffset;int unTokenOffset;int defPartsOffset;int resOffset6;int resOffset7;int resOffset8;};
struct Itl5Record {Fixed versionNumber;unsigned __int16 numberOfTables;unsigned __int16 reserved[3];TableDirectoryRecord tableDirectory[1];};
struct ItlbExtRecord {ItlbRecord base;int itlbLocalSize;__int16 itlbMonoFond;__int16 itlbMonoSize;__int16 itlbPrefFond;__int16 itlbPrefSize;__int16 itlbSmallFond;__int16 itlbSmallSize;__int16 itlbSysFond;__int16 itlbSysSize;__int16 itlbAppFond;__int16 itlbAppSize;__int16 itlbHelpFond;__int16 itlbHelpSize;Style itlbValidStyles;Style itlbAliasStyle;};
struct ItlbRecord {__int16 itlbNumber;__int16 itlbDate;__int16 itlbSort;__int16 itlbFlags;__int16 itlbToken;__int16 itlbEncoding;__int16 itlbLang;SInt8 itlbNumRep;SInt8 itlbDateRep;__int16 itlbKeys;__int16 itlbIcon;};
struct ItlcRecord {__int16 itlcSystem;__int16 itlcReserved;SInt8 itlcFontForce;SInt8 itlcIntlForce;SInt8 itlcOldKybd;SInt8 itlcFlags;__int16 itlcIconOffset;SInt8 itlcIconSide;SInt8 itlcIconRsvd;__int16 itlcRegionCode;__int16 itlcSysFlags;SInt8 itlcReserved4[32];};
typedef MorphemePartOfSpeech JapanesePartOfSpeech;
struct JustDirectionTable {UInt16 justClass;UInt16 widthDeltaClusters;UInt16 postcomp;SFNTLookupTable lookup;};
struct JustPCAction {UInt32 actionCount;JustPCActionSubrecord actions[1];};
struct JustPCActionSubrecord {UInt16 theClass;JustPCActionType theType;UInt32 length;UInt32 data;};
typedef UInt16 JustPCActionType;
struct JustPCConditionalAddAction {Fixed substThreshhold;UInt16 addGlyph;UInt16 substGlyph;};
struct JustPCDecompositionAction {Fixed lowerLimit;Fixed upperLimit;UInt16 order;UInt16 count;UInt16 glyphs[1];};
struct JustPCDuctilityAction {UInt32 ductilityAxis;Fixed minimumLimit;Fixed noStretchValue;Fixed maximumLimit;};
struct JustPCGlyphRepeatAddAction {UInt16 flags;UInt16 glyph;};
typedef UInt16 JustPCUnconditionalAddAction;
struct JustPostcompTable {SFNTLookupTable lookupTable;};
typedef __int16 JustStyleCode;
struct JustTable {Fixed version;UInt16 format;UInt16 horizHeaderOffset;UInt16 vertHeaderOffset;};
struct JustWidthDeltaEntry {UInt32 justClass;Fixed beforeGrowLimit;Fixed beforeShrinkLimit;Fixed afterGrowLimit;Fixed afterShrinkLimit;JustificationFlags growFlags;JustificationFlags shrinkFlags;};
struct JustWidthDeltaGroup {UInt32 count;JustWidthDeltaEntry entries[1];};
typedef UInt16 JustificationFlags;
typedef SecKeychainAttrType KCAttrType;
typedef SecKeychainAttribute KCAttribute;
typedef SecKeychainAttributeList KCAttributeList;
typedef FourCharCode KCAuthType;
struct KCCallbackInfo {UInt32 version;KCItemRef item;int processID[2];int event[4];KCRef keychain;};
typedef OSStatus (__fastcall *KCCallbackProcPtr)(KCEvent keychainEvent, KCCallbackInfo *info, void *userContext);
typedef KCCallbackProcPtr KCCallbackUPP;
typedef UInt32 KCCertAddOptions;
typedef UInt32 KCCertSearchOptions;
typedef UInt16 KCEvent;
typedef UInt16 KCEventMask;
typedef FourCharCode KCItemAttr;
typedef FourCharCode KCItemClass;
typedef SecKeychainItemRef KCItemRef;
typedef FourCharCode KCProtocolType;
typedef UInt8 KCPublicKeyHash[20];
typedef SecKeychainRef KCRef;
typedef SecKeychainSearchRef KCSearchRef;
typedef SecKeychainStatus KCStatus;
typedef UInt16 KCVerifyStopOn;
typedef UInt16 KernArrayOffset;
struct KernEntry {__int16 kernStyle;__int16 kernLength;};
union KernFormatSpecificHeader {KernOrderedListHeader orderedList;KernStateHeader stateTable;KernSimpleArrayHeader simpleArray;KernIndexArrayHeader indexArray;};
struct KernIndexArrayHeader {UInt16 glyphCount;UInt8 kernValueCount;UInt8 leftClassCount;UInt8 rightClassCount;UInt8 flags;SInt16 kernValue[1];UInt8 leftClass[1];UInt8 rightClass[1];UInt8 kernIndex[1];};
struct KernKerningPair {UInt16 left;UInt16 right;};
typedef SInt16 KernKerningValue;
struct KernOffsetTable {UInt16 firstGlyph;UInt16 nGlyphs;KernArrayOffset offsetTable[1];};
typedef KernOffsetTable *KernOffsetTablePtr;
struct KernOrderedListEntry {KernKerningPair pair;KernKerningValue value;};
typedef KernOrderedListEntry *KernOrderedListEntryPtr;
struct KernOrderedListHeader {UInt16 nPairs;UInt16 searchRange;UInt16 entrySelector;UInt16 rangeShift;UInt16 table[1];};
struct KernPair {char kernFirst;char kernSecond;__int16 kernWidth;};
struct KernSimpleArrayHeader {UInt16 rowWidth;UInt16 leftOffsetTable;UInt16 rightOffsetTable;KernArrayOffset theArray;UInt16 firstTable[1];};
struct KernStateEntry {UInt16 newState;UInt16 flags;};
struct KernStateHeader {STHeader header;UInt16 valueTable;UInt8 firstTable[1];};
struct KernSubtableHeader {SInt32 length;KernSubtableInfo stInfo;SInt16 tupleIndex;KernFormatSpecificHeader fsHeader;};
typedef KernSubtableHeader *KernSubtableHeaderPtr;
typedef UInt16 KernSubtableInfo;
struct KernTable {__int16 numKerns;};
typedef UInt8 KernTableFormat;
struct KernTableHeader {Fixed version;SInt32 nTables;UInt16 firstSubtable[1];};
typedef KernTableHeaderPtr *KernTableHeaderHandle;
typedef KernTableHeader *KernTableHeaderPtr;
struct KernVersion0Header {UInt16 version;UInt16 nTables;UInt16 firstSubtable[1];};
struct KernVersion0SubtableHeader {UInt16 version;UInt16 length;KernSubtableInfo stInfo;KernFormatSpecificHeader fsHeader;};
typedef BigEndianLong KeyMap[4];
typedef UInt8 KeyMapByteArray[16];
typedef SInt32 KeyboardLayoutIdentifier;
typedef SInt32 KeyboardLayoutKind;
typedef UInt32 KeyboardLayoutPropertyTag;
typedef struct OpaqueKeyboardLayoutRef *KeyboardLayoutRef;
typedef struct OpaqueLAContextRef *LAContextRef;
typedef struct OpaqueLAEnvironmentRef *LAEnvironmentRef;
typedef AERecord LAHomograph;
typedef AERecord LAMorpheme;
typedef AERecord LAMorphemeBundle;
typedef AERecord LAMorphemePath;
struct LAMorphemeRec {ByteCount sourceTextLength;LogicalAddress sourceTextPtr;ByteCount morphemeTextLength;LogicalAddress morphemeTextPtr;UInt32 partOfSpeech;};
struct LAMorphemesArray {ItemCount morphemesCount;ByteCount processedTextLength;ByteCount morphemesTextLength;LAMorphemeRec morphemes[1];};
typedef LAMorphemesArray *LAMorphemesArrayPtr;
typedef AEKeyword LAPropertyKey;
typedef DescType LAPropertyType;
struct LCPEcho {UInt32 retryCount;UInt32 retryPeriod;};
struct LHElement {__int16 lhHeight;__int16 lhAscent;};
typedef LHPtr *LHHandle;
typedef LHElement *LHPtr;
typedef LHElement LHTable[8001];
typedef OptionBits LSAcceptanceFlags;
typedef OptionBits LSInitializeFlags;
typedef OptionBits LSItemInfoFlags;
struct LSItemInfoRecord {LSItemInfoFlags flags;OSType filetype;OSType creator;CFStringRef extension;CFStringRef iconFileName;LSKindID kindID;};
typedef UInt32 LSKindID;
struct LSLaunchFSRefSpec {const FSRef *appRef;UInt32 numDocs;const FSRef *itemRefs;const AEDesc *passThruParams;LSLaunchFlags launchFlags;void *asyncRefCon;};
typedef OptionBits LSLaunchFlags;
struct LSLaunchURLSpec {CFURLRef appURL;CFArrayRef itemURLs;const AEDesc *passThruParams;LSLaunchFlags launchFlags;void *asyncRefCon;};
typedef OptionBits LSRequestedInfo;
typedef OptionBits LSRolesMask;
typedef SInt16 LangCode;
typedef unsigned __int16 LaunchFlags;
typedef LaunchParamBlockRec *LaunchPBPtr;
struct LaunchParamBlockRec {unsigned int reserved1;unsigned __int16 reserved2;unsigned __int16 launchBlockID;unsigned int launchEPBLength;unsigned __int16 launchFileFlags;LaunchFlags launchControlFlags;FSSpecPtr launchAppSpec;ProcessSerialNumber launchProcessSN;unsigned int launchPreferredSize;unsigned int launchMinimumSize;unsigned int launchAvailableSize;AppParametersPtr launchAppParameters;};
struct LcarCaretClassEntry {UInt16 count;UInt16 partials[1];};
struct LcarCaretTable {Fixed version;UInt16 format;SFNTLookupTable lookup;};
typedef LcarCaretTable *LcarCaretTablePtr;
struct LeftOverBlock {unsigned int count;SInt8 sampleArea[32];};
typedef LeftOverBlock *LeftOverBlockPtr;
struct LevelMeterInfo {__int16 numChannels;UInt8 leftMeter;UInt8 rightMeter;};
typedef LevelMeterInfo *LevelMeterInfoPtr;
typedef Rect ListBounds;
typedef Boolean (*ListClickLoopProcPtr)(void);
typedef ListClickLoopProcPtr ListClickLoopUPP;
typedef void (__fastcall *ListDefProcPtr)(__int16 lMessage, Boolean lSelect, Rect *lRect, Cell lCell, __int16 lDataOffset, __int16 lDataLen, ListHandle lHandle);
struct ListDefSpec {ListDefType defType;union ListDefSpec::$8DCF522FD2E448792F258D77E95FF7E0 u;};
union ListDefSpec::$8DCF522FD2E448792F258D77E95FF7E0 {ListDefUPP userProc;};
typedef ListDefSpec *ListDefSpecPtr;
typedef UInt32 ListDefType;
typedef ListDefProcPtr ListDefUPP;
typedef ListPtr *ListHandle;
typedef ListRec *ListPtr;
struct ListRec {Rect rView;GrafPtr port;Point indent;Point cellSize;ListBounds visible;ControlRef vScroll;ControlRef hScroll;SInt8 selFlags;Boolean lActive;SInt8 lReserved;SInt8 listFlags;int clikTime;Point clikLoc;Point mouseLoc;ListClickLoopUPP lClickLoop;Cell lastClick;int refCon;Handle listDefProc;Handle userHandle;ListBounds dataBounds;DataHandle cells;__int16 maxIndex;__int16 cellArray[1];};
typedef ListHandle ListRef;
typedef __int16 (__fastcall *ListSearchProcPtr)(Ptr aPtr, Ptr bPtr, __int16 aLen, __int16 bLen);
typedef ListSearchProcPtr ListSearchUPP;
struct LocalDateTime {UInt16 highSeconds;UInt32 lowSeconds;UInt16 fraction;};
typedef LocalDateTimePtr *LocalDateTimeHandle;
typedef LocalDateTime *LocalDateTimePtr;
struct LocaleAndVariant {LocaleRef locale;LocaleOperationVariant opVariant;};
typedef UInt32 LocaleNameMask;
typedef FourCharCode LocaleOperationClass;
typedef FourCharCode LocaleOperationVariant;
typedef UInt32 LocalePartMask;
typedef struct OpaqueLocaleRef *LocaleRef;
typedef void *LogicalAddress;
struct LogicalAddressRange {LogicalAddress address;ByteCount count;};
typedef LogicalAddressRange *LogicalAddressRangePtr;
typedef LogicalAddress *LogicalMappingTablePtr;
struct LogicalToPhysicalTable {MemoryBlock logical;MemoryBlock physical[8];};
union LongDateCvt {SInt64 c;struct LongDateCvt::$52FF518CA50772F6C52A83ACB62A0CF5 hl;};
struct LongDateCvt::$52FF518CA50772F6C52A83ACB62A0CF5 {UInt32 lHigh;UInt32 lLow;};
typedef SInt8 LongDateField;
union LongDateRec {struct LongDateRec::$071B8D95915890A920E42E4D426CC104 ld;__int16 list[14];struct LongDateRec::$80E3A9001B9B1BE934011B4087310B89 od;};
struct LongDateRec::$071B8D95915890A920E42E4D426CC104 {__int16 era;__int16 year;__int16 month;__int16 day;__int16 hour;__int16 minute;__int16 second;__int16 dayOfWeek;__int16 dayOfYear;__int16 weekOfYear;__int16 pm;__int16 res1;__int16 res2;__int16 res3;};
struct LongDateRec::$80E3A9001B9B1BE934011B4087310B89 {__int16 eraAlt;DateTimeRec oldDate;};
typedef SInt64 LongDateTime;
enum MACRO_ACCESSOR {ACCESSOR_CALLS_ARE_FUNCTIONS = 1,};
enum MACRO_AF {AF_INET = 2,};
enum MACRO_ALRMTYPE {ALRMTYPE = 0xFF,};
enum MACRO_BC {BC_BASE_MAX = 2147483647,BC_DIM_MAX = 65535,BC_SCALE_MAX = 2147483647,BC_STRING_MAX = 2147483647,};
enum MACRO_BIT {LONG_BIT = 32,WORD_BIT = 32,CHAR_BIT = 8,};
enum MACRO_BOOL {TRUE = 1,FALSE = 0,};
enum MACRO_BUS {BUS_NOOP = 0,BUS_ADRALN = 1,};
enum MACRO_BYTE {BYTE_ORDER = 4321,};
enum MACRO_BuildingOTForKernel {BuildingOTForKernel = 0,};
enum MACRO_CALL {CALL_NOT_IN_CARBON = 0,};
enum MACRO_CHAR {CHAR_MIN = -128,CHAR_MAX = 127,};
enum MACRO_CLD {CLD_NOOP = 0,CLD_EXITED = 1,CLD_KILLED = 2,CLD_DUMPED = 3,CLD_TRAPPED = 4,CLD_STOPPED = 5,CLD_CONTINUED = 6,};
enum MACRO_CLK {CLK_TCK = 100,};
enum MACRO_CLOCK {SYSTEM_CLOCK = 0,CALENDAR_CLOCK = 1,REALTIME_CLOCK = 0,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 100,};
enum MACRO_CLOCK_GET {CLOCK_GET_TIME_RES = 1,CLOCK_ALARM_CURRES = 3,CLOCK_ALARM_MINRES = 4,CLOCK_ALARM_MAXRES = 5,};
enum MACRO_COLL {COLL_WEIGHTS_MAX = 2,EQUIV_CLASS_MAX = 2,EXPR_NEST_MAX = 32,LINE_MAX = 2048,RE_DUP_MAX = 255,_POSIX_ARG_MAX = 4096,_POSIX_CHILD_MAX = 6,_POSIX_LINK_MAX = 8,};
enum MACRO_COMPONENT {COMPONENT_SIGNATURE = 1059733290,};
enum MACRO_COREFOUNDATION {COREFOUNDATION_CFPLUGINCOM_SEPARATE = 1,};
enum MACRO_CPU {CPU_STATE_MAX = 4,CPU_STATE_USER = 0,CPU_STATE_SYSTEM = 1,CPU_STATE_IDLE = 2,CPU_STATE_NICE = 3,CPU_TYPE_ANY = -1,CPU_TYPE_VAX = 1,CPU_TYPE_MC680x0 = 6,CPU_TYPE_I386 = 7,CPU_TYPE_MC98000 = 10,CPU_TYPE_HPPA = 11,CPU_TYPE_MC88000 = 13,CPU_TYPE_SPARC = 14,CPU_TYPE_I860 = 15,CPU_TYPE_POWERPC = 18,CPU_SUBTYPE_MULTIPLE = -1,CPU_SUBTYPE_LITTLE_ENDIAN = 0,CPU_SUBTYPE_BIG_ENDIAN = 1,CPU_SUBTYPE_VAX_ALL = 0,CPU_SUBTYPE_VAX780 = 1,CPU_SUBTYPE_VAX785 = 2,CPU_SUBTYPE_VAX750 = 3,CPU_SUBTYPE_VAX730 = 4,CPU_SUBTYPE_UVAXI = 5,CPU_SUBTYPE_UVAXII = 6,CPU_SUBTYPE_VAX8200 = 7,CPU_SUBTYPE_VAX8500 = 8,CPU_SUBTYPE_VAX8600 = 9,CPU_SUBTYPE_VAX8650 = 10,CPU_SUBTYPE_VAX8800 = 11,CPU_SUBTYPE_UVAXIII = 12,CPU_SUBTYPE_MC680x0_ALL = 1,CPU_SUBTYPE_MC68030 = 1,CPU_SUBTYPE_MC68040 = 2,CPU_SUBTYPE_MC68030_ONLY = 3,CPU_SUBTYPE_I386_ALL = 3,CPU_SUBTYPE_386 = 3,CPU_SUBTYPE_486 = 4,CPU_SUBTYPE_486SX = 132,CPU_SUBTYPE_586 = 5,CPU_SUBTYPE_PENT = 5,CPU_SUBTYPE_PENTPRO = 22,CPU_SUBTYPE_PENTII_M3 = 54,CPU_SUBTYPE_PENTII_M5 = 86,CPU_SUBTYPE_INTEL_FAMILY_MAX = 15,CPU_SUBTYPE_INTEL_MODEL_ALL = 0,CPU_SUBTYPE_MIPS_ALL = 0,CPU_SUBTYPE_MIPS_R2300 = 1,CPU_SUBTYPE_MIPS_R2600 = 2,CPU_SUBTYPE_MIPS_R2800 = 3,CPU_SUBTYPE_MIPS_R2000a = 4,CPU_SUBTYPE_MIPS_R2000 = 5,CPU_SUBTYPE_MIPS_R3000a = 6,CPU_SUBTYPE_MIPS_R3000 = 7,CPU_SUBTYPE_MC98000_ALL = 0,CPU_SUBTYPE_MC98601 = 1,CPU_SUBTYPE_HPPA_ALL = 0,CPU_SUBTYPE_HPPA_7100 = 0,CPU_SUBTYPE_HPPA_7100LC = 1,CPU_SUBTYPE_MC88000_ALL = 0,CPU_SUBTYPE_MC88100 = 1,CPU_SUBTYPE_MC88110 = 2,CPU_SUBTYPE_SPARC_ALL = 0,CPU_SUBTYPE_I860_ALL = 0,CPU_SUBTYPE_I860_860 = 1,CPU_SUBTYPE_POWERPC_ALL = 0,CPU_SUBTYPE_POWERPC_601 = 1,CPU_SUBTYPE_POWERPC_602 = 2,CPU_SUBTYPE_POWERPC_603 = 3,CPU_SUBTYPE_POWERPC_603e = 4,CPU_SUBTYPE_POWERPC_603ev = 5,CPU_SUBTYPE_POWERPC_604 = 6,CPU_SUBTYPE_POWERPC_604e = 7,CPU_SUBTYPE_POWERPC_620 = 8,CPU_SUBTYPE_POWERPC_750 = 9,CPU_SUBTYPE_POWERPC_7400 = 10,CPU_SUBTYPE_POWERPC_7450 = 11,CPU_SUBTYPE_POWERPC_Max = 10,CPU_SUBTYPE_POWERPC_SCVger = 11,};
enum MACRO_DBL {DBL_MANT_DIG = 53,DBL_DIG = 15,DBL_MIN_EXP = -1021,DBL_MIN_10_EXP = -307,DBL_MAX_EXP = 1024,DBL_MAX_10_EXP = 308,};
enum MACRO_DEBUG {DEBUG_LEVEL_PRODUCTION = 0,DEBUG_LEVEL_BREAK_ONLY = 1,DEBUG_LEVEL_EXTERNAL = 3,DEBUG_LEVEL_INTERNAL = 4,};
enum MACRO_DEBUGFULL {DEBUGFULL = 4,};
enum MACRO_DEBUGLEVEL {DEBUGLEVEL = 0,};
enum MACRO_DEBUG_NO {DEBUG_NO_OPTIONS = 0,DEBUG_ASSERT_PRODUCTION_CODE = 1,};
enum MACRO_DOMAIN {DOMAIN = 1,SING = 2,};
enum MACRO_ENABLE {ENABLE_FCB_ARRAY_ACCESS = 0,};
enum MACRO_ENDIAN {LITTLE_ENDIAN = 1234,BIG_ENDIAN = 4321,PDP_ENDIAN = 3412,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_ERRNO {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EDEADLK = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,ENOTBLK = 15,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,EINVAL = 22,ENFILE = 23,EMFILE = 24,ENOTTY = 25,ETXTBSY = 26,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,ERANGE = 34,EAGAIN = 35,EWOULDBLOCK = 35,EINPROGRESS = 36,EALREADY = 37,ENOTSOCK = 38,EDESTADDRREQ = 39,EMSGSIZE = 40,EPROTOTYPE = 41,ENOPROTOOPT = 42,EPROTONOSUPPORT = 43,ESOCKTNOSUPPORT = 44,ENOTSUP = 45,EOPNOTSUPP = 45,EPFNOSUPPORT = 46,EAFNOSUPPORT = 47,EADDRINUSE = 48,EADDRNOTAVAIL = 49,ENETDOWN = 50,ENETUNREACH = 51,ENETRESET = 52,ECONNABORTED = 53,ECONNRESET = 54,ENOBUFS = 55,EISCONN = 56,ENOTCONN = 57,ESHUTDOWN = 58,ETOOMANYREFS = 59,ETIMEDOUT = 60,ECONNREFUSED = 61,ELOOP = 62,ENAMETOOLONG = 63,EHOSTDOWN = 64,EHOSTUNREACH = 65,ENOTEMPTY = 66,EPROCLIM = 67,EUSERS = 68,EDQUOT = 69,ESTALE = 70,EREMOTE = 71,EBADRPC = 72,ERPCMISMATCH = 73,EPROGUNAVAIL = 74,EPROGMISMATCH = 75,EPROCUNAVAIL = 76,ENOLCK = 77,ENOSYS = 78,EFTYPE = 79,EAUTH = 80,ENEEDAUTH = 81,EPWROFF = 82,EDEVERR = 83,EOVERFLOW = 84,EBADEXEC = 85,EBADARCH = 86,ESHLIBVERS = 87,EBADMACHO = 88,ECANCELED = 89,ELAST = 89,};
enum MACRO_EXC {EXC_TYPES_COUNT = 10,};
enum MACRO_EXCEPTION {EXCEPTION_CODE_MAX = 2,};
enum MACRO_EXCEPTION_DEFAULT {EXCEPTION_DEFAULT = 1,EXCEPTION_STATE = 2,EXCEPTION_STATE_IDENTITY = 3,};
enum MACRO_EXC_MASK {EXC_MASK_BAD_ACCESS = 2,EXC_MASK_BAD_INSTRUCTION = 4,EXC_MASK_ARITHMETIC = 8,EXC_MASK_EMULATION = 16,EXC_MASK_SOFTWARE = 32,EXC_MASK_BREAKPOINT = 64,EXC_MASK_SYSCALL = 128,EXC_MASK_MACH_SYSCALL = 256,EXC_MASK_RPC_ALERT = 512,EXC_MASK_ALL = 1022,};
enum MACRO_EXC_PPC {EXC_PPC_INVALID_SYSCALL = 1,EXC_PPC_UNIPL_INST = 2,EXC_PPC_PRIVINST = 3,EXC_PPC_PRIVREG = 4,EXC_PPC_TRACE = 5,EXC_PPC_VM_PROT_READ = 257,EXC_PPC_BADSPACE = 258,EXC_PPC_UNALIGNED = 259,EXC_PPC_OVERFLOW = 1,EXC_PPC_ZERO_DIVIDE = 2,EXC_PPC_FLT_INEXACT = 3,EXC_PPC_FLT_ZERO_DIVIDE = 4,EXC_PPC_FLT_UNDERFLOW = 5,EXC_PPC_FLT_OVERFLOW = 6,EXC_PPC_FLT_NOT_A_NUMBER = 7,EXC_PPC_NOEMULATION = 8,EXC_PPC_ALTIVECASSIST = 9,EXC_PPC_TRAP = 1,EXC_PPC_MIGRATE = 65792,EXC_PPC_BREAKPOINT = 1,EXC_MASK_MACHINE = 0,EXC_BAD_ACCESS = 1,EXC_BAD_INSTRUCTION = 2,EXC_ARITHMETIC = 3,EXC_EMULATION = 4,EXC_SOFTWARE = 5,EXC_BREAKPOINT = 6,EXC_SYSCALL = 7,EXC_MACH_SYSCALL = 8,EXC_RPC_ALERT = 9,};
enum MACRO_EXC_SOFT {EXC_SOFT_SIGNAL = 0x10003,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_FD {FD_SETSIZE = 1024,};
enum MACRO_FIRST {FIRST_EXCEPTION = 1,};
enum MACRO_FIXINC {FIXINC_BROKEN_ASSERT_STDLIB_CHECK = 1,};
enum MACRO_FLOATDECIMAL {FLOATDECIMAL = 0,FIXEDDECIMAL = 1,};
enum MACRO_FLT {FLT_RADIX = 2,FLT_MANT_DIG = 24,FLT_DIG = 6,FLT_MIN_EXP = -125,FLT_MIN_10_EXP = -37,FLT_MAX_EXP = 128,FLT_MAX_10_EXP = 38,};
enum MACRO_FOPEN {FOPEN_MAX = 20,FILENAME_MAX = 1024,};
enum MACRO_FP {FP_FAST_FMA = 1,FP_FAST_FMAF = 1,FP_ILOGB0 = -2147483647,FP_ILOGBNAN = 2147483647,};
enum MACRO_FPE {FPE_NOOP = 0,FPE_FLTDIV = 1,FPE_FLTOVF = 2,FPE_FLTUND = 3,FPE_FLTRES = 4,FPE_FLTINV = 5,};
enum MACRO_FUNCTION {FUNCTION_PASCAL = 0,FUNCTION_DECLSPEC = 0,FUNCTION_WIN32CC = 0,};
enum MACRO_HOST {HOST_BASIC_INFO = 1,HOST_SCHED_INFO = 3,HOST_RESOURCE_SIZES = 4,HOST_PRIORITY_INFO = 5,HOST_SEMAPHORE_TRAPS = 7,HOST_MACH_MSG_TRAP = 8,HOST_LOAD_INFO = 1,HOST_VM_INFO = 2,HOST_CPU_LOAD_INFO = 3,};
enum MACRO_ILL {ILL_NOOP = 0,ILL_ILLOPC = 1,ILL_ILLTRP = 2,ILL_PRVOPC = 3,};
enum MACRO_INT : __int64 {INT_LEAST8_MIN = -128,INT_LEAST16_MIN = -32768,INT_LEAST32_MIN = -2147483648,INT_LEAST64_MIN = -9223372036854775808,INT_LEAST8_MAX = 127,INT_LEAST16_MAX = 32767,INT_LEAST32_MAX = 2147483647,INT_LEAST64_MAX = 9223372036854775807,};
enum MACRO_INTMAX : __int64 {INTMAX_MIN = -9223372036854775808,INTMAX_MAX = 9223372036854775807,};
enum MACRO_INTPTR {INTPTR_MIN = -2147483648,INTPTR_MAX = 2147483647,};
enum MACRO_INT_FAST8 : __int64 {INT_FAST8_MIN = -128,INT_FAST16_MIN = -32768,INT_FAST32_MIN = -2147483648,INT_FAST64_MIN = -9223372036854775808,INT_FAST8_MAX = 127,INT_FAST16_MAX = 32767,INT_FAST32_MAX = 2147483647,INT_FAST64_MAX = 9223372036854775807,};
enum MACRO_INT_MIN {INT_MIN = -2147483648,INT_MAX = 2147483647,};
enum MACRO_IOKIT {IOKIT = 1,};
enum MACRO_IOPhysSize {IOPhysSize = 32,};
enum MACRO_IP {IP_OPTIONS = 1,};
enum MACRO_IncludePEF2Declarations {IncludePEF2Declarations = 0,};
enum MACRO_KERN {KERN_SUCCESS = 0,KERN_INVALID_ADDRESS = 1,KERN_PROTECTION_FAILURE = 2,KERN_NO_SPACE = 3,KERN_INVALID_ARGUMENT = 4,KERN_FAILURE = 5,KERN_RESOURCE_SHORTAGE = 6,KERN_NOT_RECEIVER = 7,KERN_NO_ACCESS = 8,KERN_MEMORY_FAILURE = 9,KERN_MEMORY_ERROR = 10,KERN_ALREADY_IN_SET = 11,KERN_NOT_IN_SET = 12,KERN_NAME_EXISTS = 13,KERN_ABORTED = 14,KERN_INVALID_NAME = 15,KERN_INVALID_TASK = 16,KERN_INVALID_RIGHT = 17,KERN_INVALID_VALUE = 18,KERN_UREFS_OVERFLOW = 19,KERN_INVALID_CAPABILITY = 20,KERN_RIGHT_EXISTS = 21,KERN_INVALID_HOST = 22,KERN_MEMORY_PRESENT = 23,KERN_MEMORY_DATA_MOVED = 24,KERN_MEMORY_RESTART_COPY = 25,KERN_INVALID_PROCESSOR_SET = 26,KERN_POLICY_LIMIT = 27,KERN_INVALID_POLICY = 28,KERN_INVALID_OBJECT = 29,KERN_ALREADY_WAITING = 30,KERN_DEFAULT_SET = 31,KERN_EXCEPTION_PROTECTED = 32,KERN_INVALID_LEDGER = 33,KERN_INVALID_MEMORY_CONTROL = 34,KERN_INVALID_SECURITY = 35,KERN_NOT_DEPRESSED = 36,KERN_TERMINATED = 37,KERN_LOCK_SET_DESTROYED = 38,KERN_LOCK_UNSTABLE = 39,KERN_LOCK_OWNED = 40,KERN_LOCK_OWNED_SELF = 41,KERN_SEMAPHORE_DESTROYED = 42,KERN_RPC_SERVER_TERMINATED = 43,KERN_RPC_TERMINATE_ORPHAN = 44,KERN_RPC_CONTINUE_ORPHAN = 45,KERN_NOT_SUPPORTED = 46,KERN_NODE_DOWN = 47,KERN_NOT_WAITING = 48,KERN_OPERATION_TIMED_OUT = 49,KERN_RETURN_MAX = 256,};
enum MACRO_KMOD {KMOD_CNTL_START = 1,KMOD_CNTL_STOP = 2,KMOD_CNTL_RETAIN = 3,KMOD_CNTL_RELEASE = 4,KMOD_CNTL_GET_CMD = 5,KMOD_MAX_NAME = 64,KMOD_RETURN_SUCCESS = 0,KMOD_RETURN_FAILURE = 5,KMOD_INFO_VERSION = 1,KMOD_LOAD_EXTENSION_PACKET = 1,KMOD_LOAD_WITH_DEPENDENCIES_PACKET = 2,KMOD_IOKIT_START_RANGE_PACKET = 4096,KMOD_IOKIT_END_RANGE_PACKET = 8191,};
enum MACRO_L {L_tmpnam = 1024,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,LC_MESSAGES = 6,};
enum MACRO_LDBL {LDBL_MANT_DIG = 53,LDBL_DIG = 15,LDBL_MIN_EXP = -1021,LDBL_MIN_10_EXP = -307,LDBL_MAX_EXP = 1024,LDBL_MAX_10_EXP = 308,};
enum MACRO_LLONG : __int64 {LLONG_MIN = 0x8000000000000000,};
enum MACRO_LOAD {LOAD_SCALE = 1000,};
enum MACRO_LONG {LONG_MIN = -2147483648,LONG_MAX = 2147483647,};
enum MACRO_LONG_MAX : __int64 {LONG_LONG_MAX = 9223372036854775807,ULONG_LONG_MAX = -1,ARG_MAX = 65536,CHILD_MAX = 100,GID_MAX = 2147483647,LINK_MAX = 32767,};
enum MACRO_L_cuserid {L_cuserid = 9,L_ctermid = 1024,};
enum MACRO_MAC {MAC_OS_X_VERSION_10_0 = 1000,MAC_OS_X_VERSION_10_1 = 1010,MAC_OS_X_VERSION_10_2 = 1020,MAC_OS_X_VERSION_10_3 = 1030,MAC_OS_X_VERSION_MIN_REQUIRED = 1000,MAC_OS_X_VERSION_MAX_ALLOWED = 1020,};
enum MACRO_MACH : __int64 {MACH_PORT_NULL = 0,MACH_PORT_DEAD = 4294967295,MACH_PORT_RIGHT_SEND = 0,MACH_PORT_RIGHT_RECEIVE = 1,MACH_PORT_RIGHT_SEND_ONCE = 2,MACH_PORT_RIGHT_PORT_SET = 3,MACH_PORT_RIGHT_DEAD_NAME = 4,MACH_PORT_RIGHT_NUMBER = 5,MACH_PORT_TYPE_NONE = 0,MACH_PORT_TYPE_SEND = 65536,MACH_PORT_TYPE_RECEIVE = 131072,MACH_PORT_TYPE_SEND_ONCE = 262144,MACH_PORT_TYPE_PORT_SET = 524288,MACH_PORT_TYPE_DEAD_NAME = 1048576,MACH_PORT_TYPE_SEND_RECEIVE = 196608,MACH_PORT_TYPE_SEND_RIGHTS = 327680,MACH_PORT_TYPE_PORT_RIGHTS = 458752,MACH_PORT_TYPE_PORT_OR_DEAD = 1507328,MACH_PORT_TYPE_ALL_RIGHTS = 2031616,MACH_PORT_TYPE_DNREQUEST = -2147483648,MACH_PORT_SRIGHTS_NONE = 0,MACH_PORT_SRIGHTS_PRESENT = 1,MACH_PORT_QLIMIT_DEFAULT = 5,MACH_PORT_QLIMIT_MAX = 16,MACH_PORT_LIMITS_INFO = 1,MACH_PORT_RECEIVE_STATUS = 2,MACH_PORT_DNREQUESTS_SIZE = 3,MACH_PORT_DNREQUESTS_SIZE_COUNT = 1,};
enum MACRO_MACHINE {MACHINE_THREAD_STATE = 1,};
enum MACRO_MACH_MSG : __int64 {MACH_MSG_TIMEOUT_NONE = 0,MACH_MSGH_BITS_ZERO = 0,MACH_MSGH_BITS_REMOTE_MASK = 255,MACH_MSGH_BITS_LOCAL_MASK = 65280,MACH_MSGH_BITS_COMPLEX = -2147483648,MACH_MSGH_BITS_USER = -2147418113,MACH_MSGH_BITS_CIRCULAR = 1073741824,MACH_MSGH_BITS_USED = -1073676289,MACH_MSGH_BITS_PORTS_MASK = 65535,MACH_MSG_SIZE_NULL = 0,MACH_MSG_TYPE_MOVE_RECEIVE = 16,MACH_MSG_TYPE_MOVE_SEND = 17,MACH_MSG_TYPE_MOVE_SEND_ONCE = 18,MACH_MSG_TYPE_COPY_SEND = 19,MACH_MSG_TYPE_MAKE_SEND = 20,MACH_MSG_TYPE_MAKE_SEND_ONCE = 21,MACH_MSG_TYPE_COPY_RECEIVE = 22,MACH_MSG_PHYSICAL_COPY = 0,MACH_MSG_VIRTUAL_COPY = 1,MACH_MSG_ALLOCATE = 2,MACH_MSG_OVERWRITE = 3,MACH_MSG_PORT_DESCRIPTOR = 0,MACH_MSG_OOL_DESCRIPTOR = 1,MACH_MSG_OOL_PORTS_DESCRIPTOR = 2,MACH_MSG_OOL_VOLATILE_DESCRIPTOR = 3,MACH_MSG_BODY_NULL = 0,MACH_MSG_DESCRIPTOR_NULL = 0,MACH_MSG_NULL = 0,MACH_MSG_TRAILER_FORMAT_0 = 0,MACH_MSG_SIZE_MAX = 4294967295,MACH_MSGH_KIND_NORMAL = 0,MACH_MSGH_KIND_NOTIFICATION = 1,MACH_MSG_TYPE_PORT_NONE = 0,MACH_MSG_TYPE_PORT_NAME = 15,MACH_MSG_TYPE_PORT_RECEIVE = 16,MACH_MSG_TYPE_PORT_SEND = 17,MACH_MSG_TYPE_PORT_SEND_ONCE = 18,MACH_MSG_TYPE_LAST = 22,MACH_MSG_TYPE_POLYMORPHIC = 4294967295,MACH_MSG_OPTION_NONE = 0,MACH_SEND_MSG = 1,MACH_RCV_MSG = 2,MACH_RCV_LARGE = 4,MACH_SEND_TIMEOUT = 16,MACH_SEND_INTERRUPT = 64,MACH_SEND_CANCEL = 128,MACH_SEND_ALWAYS = 65536,MACH_SEND_TRAILER = 131072,MACH_RCV_TIMEOUT = 256,MACH_RCV_NOTIFY = 512,MACH_RCV_INTERRUPT = 1024,MACH_RCV_OVERWRITE = 4096,MACH_RCV_TRAILER_NULL = 0,MACH_RCV_TRAILER_SEQNO = 1,MACH_RCV_TRAILER_SENDER = 2,MACH_RCV_TRAILER_MASK = 4278190080,MACH_MSG_SUCCESS = 0,MACH_MSG_MASK = 15872,MACH_MSG_IPC_SPACE = 8192,MACH_MSG_VM_SPACE = 4096,MACH_MSG_IPC_KERNEL = 2048,MACH_MSG_VM_KERNEL = 1024,MACH_SEND_IN_PROGRESS = 268435457,MACH_SEND_INVALID_DATA = 268435458,MACH_SEND_INVALID_DEST = 268435459,MACH_SEND_TIMED_OUT = 268435460,MACH_SEND_INTERRUPTED = 268435463,MACH_SEND_MSG_TOO_SMALL = 268435464,MACH_SEND_INVALID_REPLY = 268435465,MACH_SEND_INVALID_RIGHT = 268435466,MACH_SEND_INVALID_NOTIFY = 268435467,MACH_SEND_INVALID_MEMORY = 268435468,MACH_SEND_NO_BUFFER = 268435469,MACH_SEND_TOO_LARGE = 268435470,MACH_SEND_INVALID_TYPE = 268435471,MACH_SEND_INVALID_HEADER = 268435472,MACH_SEND_INVALID_TRAILER = 268435473,MACH_SEND_INVALID_RT_OOL_SIZE = 268435477,MACH_RCV_IN_PROGRESS = 268451841,MACH_RCV_INVALID_NAME = 268451842,MACH_RCV_TIMED_OUT = 268451843,MACH_RCV_TOO_LARGE = 268451844,MACH_RCV_INTERRUPTED = 268451845,MACH_RCV_PORT_CHANGED = 268451846,MACH_RCV_INVALID_NOTIFY = 268451847,MACH_RCV_INVALID_DATA = 268451848,MACH_RCV_PORT_DIED = 268451849,MACH_RCV_IN_SET = 268451850,MACH_RCV_HEADER_ERROR = 268451851,MACH_RCV_BODY_ERROR = 268451852,MACH_RCV_INVALID_TYPE = 268451853,MACH_RCV_SCATTER_SMALL = 268451854,MACH_RCV_INVALID_TRAILER = 268451855,MACH_RCV_IN_PROGRESS_TIMED = 268451857,};
enum MACRO_MACH_PORTS {MACH_PORTS_SLOTS_USED = 3,};
enum MACRO_MATH {MATH_ERRNO = 1,MATH_ERREXCEPT = 2,};
enum MACRO_MATTR {MATTR_CACHE = 1,MATTR_MIGRATE = 2,MATTR_REPLICATE = 4,MATTR_VAL_OFF = 0,MATTR_VAL_ON = 1,MATTR_VAL_GET = 2,MATTR_VAL_CACHE_FLUSH = 6,MATTR_VAL_DCACHE_FLUSH = 7,MATTR_VAL_ICACHE_FLUSH = 8,MATTR_VAL_CACHE_SYNC = 9,MATTR_VAL_GET_INFO = 10,};
enum MACRO_MAX : __int64 {INT8_MAX = 127,INT16_MAX = 32767,INT32_MAX = 2147483647,INT64_MAX = 9223372036854775807,};
enum MACRO_MAX_CANON {MAX_CANON = 255,MAX_INPUT = 255,};
enum MACRO_MAX_UPL {MAX_UPL_TRANSFER = 256,};
enum MACRO_MB {MB_LEN_MAX = 1,};
enum MACRO_MEMORY {MEMORY_OBJECT_COPY_NONE = 0,MEMORY_OBJECT_COPY_CALL = 1,MEMORY_OBJECT_COPY_DELAY = 2,MEMORY_OBJECT_COPY_TEMPORARY = 3,MEMORY_OBJECT_COPY_SYMMETRIC = 4,MEMORY_OBJECT_COPY_INVALID = 5,MEMORY_OBJECT_RETURN_NONE = 0,MEMORY_OBJECT_RETURN_DIRTY = 1,MEMORY_OBJECT_RETURN_ALL = 2,MEMORY_OBJECT_RETURN_ANYTHING = 3,MEMORY_OBJECT_DATA_FLUSH = 1,MEMORY_OBJECT_DATA_NO_CHANGE = 2,MEMORY_OBJECT_DATA_PURGE = 4,MEMORY_OBJECT_COPY_SYNC = 8,MEMORY_OBJECT_DATA_SYNC = 16,MEMORY_OBJECT_INFO_MAX = 1024,MEMORY_OBJECT_PERFORMANCE_INFO = 11,MEMORY_OBJECT_ATTRIBUTE_INFO = 14,MEMORY_OBJECT_BEHAVIOR_INFO = 15,};
enum MACRO_MEMORY_OBJECT {MEMORY_OBJECT_TERMINATE_IDLE = 0x1,MEMORY_OBJECT_RESPECT_CACHE = 0x2,MEMORY_OBJECT_RELEASE_NO_OP = 0x4,};
enum MACRO_MIN : __int64 {INT8_MIN = -128,INT16_MIN = -32768,INT32_MIN = -2147483648,INT64_MIN = -9223372036854775808,};
enum MACRO_MINSIGSTKSZ {MINSIGSTKSZ = 8192,};
enum MACRO_MIXEDMODE {MIXEDMODE_CALLS_ARE_FUNCTIONS = 1,};
enum MACRO_NAME {NAME_MAX = 255,NGROUPS_MAX = 16,UID_MAX = 2147483647,OPEN_MAX = 10240,PATH_MAX = 1024,};
enum MACRO_NBBY {NBBY = 8,};
enum MACRO_NL {NL_ARGMAX = 9,NL_LANGMAX = 14,NL_MSGMAX = 32767,NL_NMAX = 1,NL_SETMAX = 255,NL_TEXTMAX = 255,};
enum MACRO_NON {NON_MAC_PIXEL_FORMATS = 1,};
enum MACRO_NS {NS_NEW_API = 1,};
enum MACRO_NSEC {NSEC_PER_USEC = 1000,};
enum MACRO_NSIG {NSIG = 32,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_OLD {OLD_MEMORY_OBJECT_BEHAVIOR_INFO = 10,OLD_MEMORY_OBJECT_ATTRIBUTE_INFO = 12,};
enum MACRO_OLDGDEVICESTRUCT {OLDGDEVICESTRUCT = 0,};
enum MACRO_OLDPIXMAPSTRUCT {OLDPIXMAPSTRUCT = 0,};
enum MACRO_OLDROUTINENAMES {OLDROUTINENAMES = 0,};
enum MACRO_OPAQUE {OPAQUE_TOOLBOX_STRUCTS = 1,OPAQUE_UPP_TYPES = 1,};
enum MACRO_OTCARBONAPPLICATION {OTCARBONAPPLICATION = 0,};
enum MACRO_OTDEBUG {OTDEBUG = 0,};
enum MACRO_OTKERNEL {OTKERNEL = 0,};
enum MACRO_OTUNIXERRORS {OTUNIXERRORS = 0,};
enum MACRO_OVERFLOW {OVERFLOW = 3,UNDERFLOW = 4,};
enum MACRO_PASS {PASS_MAX = 128,};
enum MACRO_PER_SEC {USEC_PER_SEC = 1000000,NSEC_PER_SEC = 1000000000,};
enum MACRO_PIPE {PIPE_BUF = 512,};
enum MACRO_PLOSS {PLOSS = 6,};
enum MACRO_PM {PM_USE_SESSION_APIS = 1,};
enum MACRO_POLICY {POLICY_NULL = 0,POLICY_TIMESHARE = 1,POLICY_RR = 2,POLICY_FIFO = 4,};
enum MACRO_POLICYCLASS {POLICYCLASS_FIXEDPRI = 6,};
enum MACRO_PORT : __int64 {PORT_NULL = 0,PORT_DEAD = 4294967295,};
enum MACRO_PPC {PPC_THREAD_STATE = 1,PPC_FLOAT_STATE = 2,PPC_EXCEPTION_STATE = 3,PPC_VECTOR_STATE = 4,};
enum MACRO_PRAGMA {PRAGMA_IMPORT = 0,PRAGMA_STRUCT_ALIGN = 1,PRAGMA_ONCE = 0,PRAGMA_STRUCT_PACK = 0,PRAGMA_STRUCT_PACKPUSH = 0,PRAGMA_ENUM_PACK = 0,PRAGMA_ENUM_ALWAYSINT = 0,PRAGMA_ENUM_OPTIONS = 0,};
enum MACRO_PROCESSOR {PROCESSOR_PM_SET_REGS = 1,PROCESSOR_PM_SET_MMCR = 2,PROCESSOR_PM_CLR_PMC = 3,PROCESSOR_TEMPERATURE_COUNT = 1,PROCESSOR_INFO_MAX = 1024,PROCESSOR_SET_INFO_MAX = 1024,PROCESSOR_BASIC_INFO = 1,PROCESSOR_CPU_LOAD_INFO = 2,PROCESSOR_PM_REGS_INFO = 268435457,PROCESSOR_TEMPERATURE = 268435458,};
enum MACRO_PROCESSOR_SET {PROCESSOR_SET_BASIC_INFO = 5,PROCESSOR_SET_LOAD_INFO = 4,PROCESSOR_SET_ENABLED_POLICIES = 3,PROCESSOR_SET_TIMESHARE_DEFAULT = 10,PROCESSOR_SET_TIMESHARE_LIMITS = 11,PROCESSOR_SET_RR_DEFAULT = 20,PROCESSOR_SET_RR_LIMITS = 21,PROCESSOR_SET_FIFO_DEFAULT = 30,PROCESSOR_SET_FIFO_LIMITS = 31,};
enum MACRO_PTHREAD {PTHREAD_STACK_MIN = 8192,PTHREAD_DESTRUCTOR_ITERATIONS = 4,PTHREAD_KEYS_MAX = 128,};
enum MACRO_PTRDIFF {PTRDIFF_MIN = -2147483648,PTRDIFF_MAX = 2147483647,};
enum MACRO_QUAD : __int64 {QUAD_MIN = -9223372036854775808,};
enum MACRO_RAND {RAND_MAX = 0x7FFFFFFF,};
enum MACRO_SA {SA_ONSTACK = 0x1,SA_RESTART = 0x2,SA_DISABLE = 0x4,SA_RESETHAND = 0x4,SA_NODEFER = 0x10,SA_NOCLDWAIT = 0x20,SA_SIGINFO = 0x40,SA_USERTRAMP = 0x100,SA_NOCLDSTOP = 0x8,};
enum MACRO_SCHAR_MIN {SCHAR_MIN = -128,SCHAR_MAX = 127,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEGV {SEGV_NOOP = 0,SEGV_MAPERR = 1,SEGV_ACCERR = 2,};
enum MACRO_SHRT {SHRT_MIN = -32768,SHRT_MAX = 32767,};
enum MACRO_SI {SI_USER = 0x10001,SI_QUEUE = 0x10002,SI_TIMER = 0x10003,SI_ASYNCIO = 0x10004,SI_MESGQ = 0x10005,};
enum MACRO_SIG {SIG_BLOCK = 1,SIG_UNBLOCK = 2,SIG_SETMASK = 3,};
enum MACRO_SIGDIGLEN {SIGDIGLEN = 36,DECSTROUTLEN = 80,};
enum MACRO_SIGEV {SIGEV_NONE = 0,SIGEV_SIGNAL = 1,SIGEV_THREAD = 3,};
enum MACRO_SIGNAL {SIGHUP = 1,SIGINT = 2,SIGQUIT = 3,SIGILL = 4,SIGTRAP = 5,SIGABRT = 6,SIGIOT = 6,SIGEMT = 7,SIGFPE = 8,SIGKILL = 9,SIGBUS = 10,SIGSEGV = 11,SIGSYS = 12,SIGPIPE = 13,SIGALRM = 14,SIGTERM = 15,SIGURG = 16,SIGSTOP = 17,SIGTSTP = 18,SIGCONT = 19,SIGCHLD = 20,SIGTTIN = 21,SIGTTOU = 22,SIGIO = 23,SIGXCPU = 24,SIGXFSZ = 25,SIGVTALRM = 26,SIGPROF = 27,SIGWINCH = 28,SIGINFO = 29,SIGUSR1 = 30,SIGUSR2 = 31,};
enum MACRO_SIGSTKSZ {SIGSTKSZ = 40960,};
enum MACRO_SIZE {SIZE_MAX = -1,WCHAR_MAX = 2147483647,};
enum MACRO_SLOT {NAME_SERVER_SLOT = 0,ENVIRONMENT_SLOT = 1,SERVICE_SLOT = 2,};
enum MACRO_SM {SM_COW = 1,SM_PRIVATE = 2,SM_EMPTY = 3,SM_SHARED = 4,SM_TRUESHARED = 5,SM_PRIVATE_ALIASED = 6,SM_SHARED_ALIASED = 7,};
enum MACRO_SS {SS_ONSTACK = 0x1,SS_DISABLE = 0x4,};
enum MACRO_SSIZE : __int64 {SSIZE_MAX = 2147483647,SIZE_T_MAX = -1,UQUAD_MAX = -1,QUAD_MAX = 9223372036854775807,};
enum MACRO_STATE_MAX {PPC_THREAD_STATE_MAX = 144,THREAD_STATE_MAX = 144,};
enum MACRO_SV {SV_SAVE_REGS = 0x1000,};
enum MACRO_SV_ONSTACK {SV_ONSTACK = 1,SV_INTERRUPT = 2,SV_RESETHAND = 4,SV_NODEFER = 16,SV_NOCLDSTOP = 8,SV_SIGINFO = 64,};
enum MACRO_TARGET {TARGET_OS_MAC = 1,TARGET_OS_WIN32 = 0,TARGET_OS_UNIX = 0,TARGET_CPU_PPC = 1,TARGET_CPU_68K = 0,TARGET_CPU_X86 = 0,TARGET_CPU_MIPS = 0,TARGET_CPU_SPARC = 0,TARGET_CPU_ALPHA = 0,TARGET_RT_LITTLE_ENDIAN = 0,TARGET_RT_BIG_ENDIAN = 1,TARGET_RT_MAC_CFM = 0,TARGET_RT_MAC_MACHO = 1,};
enum MACRO_TARGET_API {TARGET_API_MAC_OS8 = 0,TARGET_API_MAC_CARBON = 1,TARGET_API_MAC_OSX = 1,TARGET_CARBON = 1,};
enum MACRO_TASK {TASK_INFO_MAX = 1024,TASK_BASIC_INFO = 4,TASK_EVENTS_INFO = 2,TASK_THREAD_TIMES_INFO = 3,TASK_SCHED_TIMESHARE_INFO = 10,TASK_SCHED_RR_INFO = 11,TASK_SCHED_FIFO_INFO = 12,TASK_SCHED_INFO = 14,TASK_SECURITY_TOKEN = 13,TASK_CATEGORY_POLICY = 1,TASK_KERNEL_PORT = 1,TASK_HOST_PORT = 2,TASK_BOOTSTRAP_PORT = 4,TASK_WIRED_LEDGER_PORT = 5,TASK_PAGED_LEDGER_PORT = 6,};
enum MACRO_TASK_NULL {TASK_NULL = 0,THREAD_NULL = 0,THR_ACT_NULL = 0,IPC_SPACE_NULL = 0,HOST_NULL = 0,HOST_PRIV_NULL = 0,HOST_SECURITY_NULL = 0,PROCESSOR_SET_NULL = 0,PROCESSOR_NULL = 0,SEMAPHORE_NULL = 0,LOCK_SET_NULL = 0,LEDGER_NULL = 0,ALARM_NULL = 0,CLOCK_NULL = 0,UND_SERVER_NULL = 0,};
enum MACRO_TH {TH_USAGE_SCALE = 1000,TH_STATE_RUNNING = 1,TH_STATE_STOPPED = 2,TH_STATE_WAITING = 3,TH_STATE_UNINTERRUPTIBLE = 4,TH_STATE_HALTED = 5,TH_FLAGS_SWAPPED = 1,TH_FLAGS_IDLE = 2,};
enum MACRO_THREAD {THREAD_STATE_NONE = 7,};
enum MACRO_THREAD_INFO {THREAD_INFO_MAX = 1024,THREAD_BASIC_INFO = 3,};
enum MACRO_THREAD_SCHED {THREAD_SCHED_TIMESHARE_INFO = 10,THREAD_SCHED_RR_INFO = 11,THREAD_SCHED_FIFO_INFO = 12,THREAD_STANDARD_POLICY = 1,THREAD_STANDARD_POLICY_COUNT = 0,THREAD_EXTENDED_POLICY = 1,THREAD_TIME_CONSTRAINT_POLICY = 2,THREAD_PRECEDENCE_POLICY = 3,THREAD_KERNEL_PORT = 1,};
enum MACRO_THREAD_STATE {THREAD_STATE_FLAVOR_LIST = 0,};
enum MACRO_TIME {TIME_MICROS_MAX = 1000000,HOST_INFO_MAX = 1024,KERNEL_VERSION_MAX = 512,KERNEL_BOOT_INFO_MAX = 4096,KERNEL_BOOTMAGIC_MAX = 8192,};
enum MACRO_TIME_ABSOLUTE {TIME_ABSOLUTE = 0x0,TIME_RELATIVE = 0x1,};
enum MACRO_TLOSS {TLOSS = 5,};
enum MACRO_TMP {TMP_MAX = 308915776,};
enum MACRO_TYPE {TYPE_EXTENDED = 0,TYPE_LONGDOUBLE_IS_DOUBLE = 1,TYPE_LONGLONG = 1,TYPE_BOOL = 0,};
enum MACRO_UCHAR_MAX {UCHAR_MAX = 255,};
enum MACRO_UINT {UINT_LEAST8_MAX = 255,UINT_LEAST16_MAX = 65535,UINT_LEAST32_MAX = -1,UINT_LEAST64_MAX = -1,};
enum MACRO_UINT8 {UINT8_MAX = 255,UINT16_MAX = 65535,UINT32_MAX = -1,UINT64_MAX = -1,};
enum MACRO_UINTMAX {UINTMAX_MAX = -1,};
enum MACRO_UINTPTR {UINTPTR_MAX = -1,};
enum MACRO_UINT_FAST8 {UINT_FAST8_MAX = 255,UINT_FAST16_MAX = 65535,UINT_FAST32_MAX = -1,UINT_FAST64_MAX = -1,};
enum MACRO_ULLONG : __int64 {ULLONG_MAX = 0xFFFFFFFFFFFFFFFF,LLONG_MAX = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_ULONG : __int64 {ULONG_MAX = 4294967295,};
enum MACRO_UNIVERSAL {UNIVERSAL_INTERFACES_VERSION = 0x400,};
enum MACRO_UPL {UPL_FLAGS_NONE = 0x0,UPL_COPYOUT_FROM = 0x1,UPL_PRECIOUS = 0x2,UPL_NO_SYNC = 0x4,UPL_CLEAN_IN_PLACE = 0x8,UPL_NOBLOCK = 0x10,UPL_RET_ONLY_DIRTY = 0x20,UPL_SET_INTERNAL = 0x40,UPL_QUERY_OBJECT_TYPE = 0x80,UPL_RET_ONLY_ABSENT = 0x100,UPL_FILE_IO = 0x200,UPL_ABORT_RESTART = 0x1,UPL_ABORT_UNAVAILABLE = 0x2,UPL_ABORT_ERROR = 0x4,UPL_ABORT_FREE_ON_EMPTY = 0x8,UPL_ABORT_DUMP_PAGES = 0x10,UPL_ABORT_NOTIFY_EMPTY = 0x20,UPL_CHECK_DIRTY = 0x1,UPL_IOSYNC = 0x1,UPL_NOCOMMIT = 0x2,UPL_NORDAHEAD = 0x4,UPL_COMMIT_FREE_ON_EMPTY = 0x1,UPL_COMMIT_CLEAR_DIRTY = 0x2,UPL_COMMIT_SET_DIRTY = 0x4,UPL_COMMIT_INACTIVATE = 0x8,UPL_COMMIT_NOTIFY_EMPTY = 0x10,UPL_DEV_MEMORY = 0x1,UPL_PHYS_CONTIG = 0x2,UPL_POP_DIRTY = 0x1,UPL_POP_PAGEOUT = 0x2,UPL_POP_PRECIOUS = 0x4,UPL_POP_ABSENT = 0x8,UPL_POP_BUSY = 0x10,UPL_POP_PHYSICAL = 0x10000000,UPL_POP_DUMP = 0x20000000,UPL_POP_SET = 0x40000000,UPL_POP_CLR = 0x80000000,};
enum MACRO_USHRT : __int64 {USHRT_MAX = 65535,UINT_MAX = 4294967295,};
enum MACRO_VM {VM_PAGE_QUERY_PAGE_PRESENT = 0x1,VM_PAGE_QUERY_PAGE_FICTITIOUS = 0x2,VM_PAGE_QUERY_PAGE_REF = 0x4,VM_PAGE_QUERY_PAGE_DIRTY = 0x8,VM_FLAGS_FIXED = 0x0,VM_FLAGS_ANYWHERE = 0x1,VM_FLAGS_ALIAS_MASK = 0xFF000000,VM_MEMORY_MALLOC = 0x1,VM_MEMORY_MALLOC_SMALL = 0x2,VM_MEMORY_MALLOC_LARGE = 0x3,VM_MEMORY_MALLOC_HUGE = 0x4,VM_MEMORY_SBRK = 0x5,VM_MEMORY_ANALYSIS_TOOL = 0xA,VM_MEMORY_MACH_MSG = 0x14,VM_MEMORY_IOKIT = 0x15,VM_MEMORY_STACK = 0x1E,VM_MEMORY_GUARD = 0x1F,VM_MEMORY_SHARED_PMAP = 0x20,VM_MEMORY_DYLIB = 0x21,VM_MEMORY_APPKIT = 0x28,VM_MEMORY_FOUNDATION = 0x29,VM_MEMORY_COREGRAPHICS = 0x2A,VM_MEMORY_CARBON = 0x2B,VM_MEMORY_JAVA = 0x2C,VM_MEMORY_ATS = 0x32,VM_MEMORY_DYLD = 0x3C,VM_MEMORY_DYLD_MALLOC = 0x3D,VM_MEMORY_APPLICATION_SPECIFIC_1 = 0xF0,VM_MEMORY_APPLICATION_SPECIFIC_16 = 0xFF,};
enum MACRO_VM_INHERIT {VM_INHERIT_SHARE = 0,VM_INHERIT_COPY = 1,VM_INHERIT_NONE = 2,VM_INHERIT_DONATE_COPY = 3,VM_INHERIT_DEFAULT = 1,VM_INHERIT_LAST_VALID = 2,VM_BEHAVIOR_DEFAULT = 0,VM_BEHAVIOR_RANDOM = 1,VM_BEHAVIOR_SEQUENTIAL = 2,VM_BEHAVIOR_RSEQNTL = 3,VM_BEHAVIOR_WILLNEED = 4,VM_BEHAVIOR_DONTNEED = 5,VM_PROT_NONE = 0,VM_PROT_READ = 1,VM_PROT_WRITE = 2,VM_PROT_EXECUTE = 4,VM_PROT_DEFAULT = 3,VM_PROT_ALL = 7,VM_PROT_NO_CHANGE = 8,VM_PROT_COPY = 16,VM_PROT_WANTS_COPY = 16,VM_SYNC_ASYNCHRONOUS = 1,VM_SYNC_SYNCHRONOUS = 2,VM_SYNC_INVALIDATE = 4,VM_SYNC_KILLPAGES = 8,VM_SYNC_DEACTIVATE = 16,VM_REGION_INFO_MAX = 1024,VM_REGION_BASIC_INFO = 10,VM_REGION_EXTENDED_INFO = 11,};
enum MACRO_VM_MAP {VM_MAP_NULL = 0,UPL_NULL = 0,VM_NAMED_ENTRY_NULL = 0,MEMORY_OBJECT_NULL = 0,MEMORY_OBJECT_CONTROL_NULL = 0,MEMORY_OBJECT_NAME_NULL = 0,MEMORY_OBJECT_DEFAULT_NULL = 0,};
enum MACRO_VM_REGION {VM_REGION_TOP_INFO = 12,VM_MAP_ENTRY_MAX = 256,};
enum MACRO__A {_A = 0x100,_C = 0x200,_D = 0x400,_G = 0x800,_L = 0x1000,_P = 0x2000,_S = 0x4000,_U = 0x8000,_X = 0x10000,_B = 0x20000,_R = 0x40000,_I = 0x80000,_T = 0x100000,_Q = 0x200000,};
enum MACRO__CACHED {_CACHED_RUNES = 256,};
enum MACRO__CRMASK {_CRMASK = -256,};
enum MACRO__CTYPE {_CTYPE_A = 256,_CTYPE_C = 512,_CTYPE_D = 1024,_CTYPE_G = 2048,_CTYPE_L = 4096,_CTYPE_P = 8192,_CTYPE_S = 16384,_CTYPE_U = 32768,_CTYPE_X = 65536,_CTYPE_B = 131072,_CTYPE_R = 262144,_CTYPE_I = 524288,_CTYPE_T = 1048576,_CTYPE_Q = 2097152,};
enum MACRO__DECLARE {_DECLARE_CS_QD_API_ = 0,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,BUFSIZ = 1024,};
enum MACRO__JBLEN {_JBLEN = 192,};
enum MACRO__LC {_LC_LAST = 7,};
enum MACRO__MACH {_MACH_INIT_ = 1,};
enum MACRO__POSIX {_POSIX_MAX_CANON = 255,_POSIX_MAX_INPUT = 255,_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 0,_POSIX_OPEN_MAX = 16,_POSIX_PATH_MAX = 255,_POSIX_PIPE_BUF = 512,_POSIX_SSIZE_MAX = 32767,_POSIX_STREAM_MAX = 8,_POSIX_TZNAME_MAX = 3,};
enum MACRO__POSIX2 {_POSIX2_BC_BASE_MAX = 99,_POSIX2_BC_DIM_MAX = 2048,_POSIX2_BC_SCALE_MAX = 99,_POSIX2_BC_STRING_MAX = 1000,_POSIX2_COLL_WEIGHTS_MAX = 2,_POSIX2_EQUIV_CLASS_MAX = 2,_POSIX2_EXPR_NEST_MAX = 32,_POSIX2_LINE_MAX = 2048,_POSIX2_RE_DUP_MAX = 255,};
enum MACRO__PPC {_PPC_SIGNAL_ = 1,};
enum MACRO__QUAD {_QUAD_HIGHWORD = 0,_QUAD_LOWWORD = 1,};
enum MACRO___CGDIRECT {__CGDIRECT_DISPLAY_H__ = 1,};
enum MACRO___CGDIRECT_PALETTE {__CGDIRECT_PALETTE_H__ = 1,};
enum MACRO___CGDISPLAY {__CGDISPLAY_CONFIGURATION_H__ = 1,};
enum MACRO___CGDISPLAY_FADE {__CGDISPLAY_FADE_H__ = 1,};
enum MACRO___CGERROR {__CGERROR_H__ = 1,};
enum MACRO___CGREMOTE {__CGREMOTE_OPERATION_H__ = 1,};
enum MACRO___CGWINDOWLEVEL {__CGWINDOWLEVEL_H__ = 1,};
enum MACRO___COREFOUNDATION {__COREFOUNDATION_CFBASE__ = 1,};
enum MACRO___COREFOUNDATION_CFARRAY {__COREFOUNDATION_CFARRAY__ = 1,__COREFOUNDATION_CFBAG__ = 1,__COREFOUNDATION_CFCHARACTERSET__ = 1,__COREFOUNDATION_CFDATA__ = 1,__COREFOUNDATION_CFDATE__ = 1,__COREFOUNDATION_CFDICTIONARY__ = 1,__COREFOUNDATION_CFNUMBER__ = 1,__COREFOUNDATION_CFPROPERTYLIST__ = 1,__COREFOUNDATION_CFSTRING__ = 1,};
enum MACRO___COREFOUNDATION_CFBINARYHEAP {__COREFOUNDATION_CFBINARYHEAP__ = 1,__COREFOUNDATION_CFBITVECTOR__ = 1,__COREFOUNDATION_CFBUNDLE__ = 1,__COREFOUNDATION_CFBYTEORDER__ = 1,__COREFOUNDATION_CFPLUGIN__ = 1,};
enum MACRO___COREFOUNDATION_CFSOCKET {__COREFOUNDATION_CFSOCKET__ = 1,__COREFOUNDATION_CFSET__ = 1,__COREFOUNDATION_CFTIMEZONE__ = 1,__COREFOUNDATION_CFTREE__ = 1,__COREFOUNDATION_CFXMLNODE__ = 1,__COREFOUNDATION_CFXMLPARSER__ = 1,};
enum MACRO___COREFOUNDATION_CFSTREAM {__COREFOUNDATION_CFSTREAM__ = 1,__COREFOUNDATION_CFURL__ = 1,__COREFOUNDATION_CFRUNLOOP__ = 1,};
enum MACRO___COREFOUNDATION_CFUUID {__COREFOUNDATION_CFUUID__ = 1,__COREFOUNDATION_CFURLACCESS__ = 1,__COREFOUNDATION_CFMACHPORT__ = 1,__COREFOUNDATION_CFMESSAGEPORT__ = 1,__COREFOUNDATION_CFNOTIFICATIONCENTER__ = 1,__COREFOUNDATION_CFPREFERENCES__ = 1,__COREFOUNDATION_CFSTRINGENCODINGEXT__ = 1,__COREFOUNDATION_CFUSERNOTIFICATION__ = 1,};
enum MACRO___INT {__INT_MAX__ = 2147483647,};
enum MACRO___LONG {__LONG_MAX__ = 2147483647,};
enum MACRO___LONG_LONG : __int64 {__LONG_LONG_MAX__ = 9223372036854775807,};
enum MACRO___PTHREAD {__PTHREAD_SIZE__ = 596,__PTHREAD_ATTR_SIZE__ = 36,__PTHREAD_MUTEXATTR_SIZE__ = 8,__PTHREAD_MUTEX_SIZE__ = 40,__PTHREAD_CONDATTR_SIZE__ = 4,__PTHREAD_COND_SIZE__ = 24,__PTHREAD_ONCE_SIZE__ = 4,__PTHREAD_RWLOCK_SIZE__ = 124,__PTHREAD_RWLOCKATTR_SIZE__ = 12,};
enum MACRO___SHRT {__SHRT_MAX__ = 32767,};
enum MACRO___SLBF {__SLBF = 0x1,__SNBF = 0x2,__SRD = 0x4,__SWR = 0x8,__SRW = 0x10,__SEOF = 0x20,__SERR = 0x40,__SMBF = 0x80,__SAPP = 0x100,__SSTR = 0x200,__SOPT = 0x400,__SNPT = 0x800,__SOFF = 0x1000,__SMOD = 0x2000,__SALC = 0x4000,};
enum MACRO___TYPE {__TYPE_LONGDOUBLE_IS_DOUBLE = 1,};
enum MACRO___bool {__bool_true_false_are_defined = 1,};
enum MACRO___kCFStringInlineBufferLength {__kCFStringInlineBufferLength = 64,};
enum MACRO_bool {true = 1,false = 0,};
enum MACRO_emask : __int64 {system_emask = 0xFC000000,sub_emask = 0x3FFC000,code_emask = 0x3FFF,};
enum MACRO_err : __int64 {err_kern = 0x0,err_us = 0x4000000,err_server = 0x8000000,err_ipc = 0xC000000,err_mach_ipc = 0x10000000,err_dipc = 0x1C000000,err_local = 0xF8000000,err_ipc_compat = 0xFC000000,err_max_system = 0x3F,};
enum MACRO_fixed1 {fixed1 = 0x10000,fract1 = 0x40000000,};
enum MACRO_kATSUCenterAlignment {kATSUCenterAlignment = 0x20000000,};
enum MACRO_kATSUNoJustification {kATSUNoJustification = 0x0,kATSUFullJustification = 0x40000000,};
enum MACRO_kATSUStartAlignment {kATSUStartAlignment = 0x0,kATSUEndAlignment = 0x40000000,};
enum MACRO_kCFStringEncodingInvalidId {kCFStringEncodingInvalidId = 0xFFFFFFFF,};
enum MACRO_kCGDirectMainDisplay {kCGDirectMainDisplay = 0,};
enum MACRO_kCGDisplayFadeReservationInvalidToken {kCGDisplayFadeReservationInvalidToken = 0,};
enum MACRO_kCGNullDirectDisplay {kCGNullDirectDisplay = 0,};
enum MACRO_kCGNumReservedWindowLevels {kCGNumReservedWindowLevels = 16,};
enum MACRO_kCurrentAddressSpaceID {kCurrentAddressSpaceID = -1,};
enum MACRO_kDCMInvalidObjectID {kDCMInvalidObjectID = 0,};
enum MACRO_kDCMInvalidObjectRef {kDCMInvalidObjectRef = 0,};
enum MACRO_kDefaultAppleTalkServicesPath {kDefaultAppleTalkServicesPath = -3,};
enum MACRO_kDefaultInternetServicesPath {kDefaultInternetServicesPath = -3,};
enum MACRO_kFirstWindowOfClass {kFirstWindowOfClass = -1,};
enum MACRO_kIOReturnAborted : __int64 {kIOReturnAborted = 0xE00002EB,};
enum MACRO_kIOReturnBadArgument : __int64 {kIOReturnBadArgument = 0xE00002C2,};
enum MACRO_kIOReturnBadMedia : __int64 {kIOReturnBadMedia = 0xE00002D1,};
enum MACRO_kIOReturnBadMessageID : __int64 {kIOReturnBadMessageID = 0xE00002C6,};
enum MACRO_kIOReturnBusy : __int64 {kIOReturnBusy = 0xE00002D5,};
enum MACRO_kIOReturnCannotLock : __int64 {kIOReturnCannotLock = 0xE00002CC,};
enum MACRO_kIOReturnCannotWire : __int64 {kIOReturnCannotWire = 0xE00002DE,};
enum MACRO_kIOReturnDMAError : __int64 {kIOReturnDMAError = 0xE00002D4,};
enum MACRO_kIOReturnDeviceError : __int64 {kIOReturnDeviceError = 0xE00002E9,};
enum MACRO_kIOReturnExclusiveAccess : __int64 {kIOReturnExclusiveAccess = 0xE00002C5,};
enum MACRO_kIOReturnIOError : __int64 {kIOReturnIOError = 0xE00002CA,};
enum MACRO_kIOReturnIPCError : __int64 {kIOReturnIPCError = 0xE00002BF,};
enum MACRO_kIOReturnInternalError : __int64 {kIOReturnInternalError = 0xE00002C9,};
enum MACRO_kIOReturnInvalid : __int64 {kIOReturnInvalid = 0xE0000001,};
enum MACRO_kIOReturnIsoTooNew : __int64 {kIOReturnIsoTooNew = 0xE00002EF,};
enum MACRO_kIOReturnIsoTooOld : __int64 {kIOReturnIsoTooOld = 0xE00002EE,};
enum MACRO_kIOReturnLockedRead : __int64 {kIOReturnLockedRead = 0xE00002C3,};
enum MACRO_kIOReturnLockedWrite : __int64 {kIOReturnLockedWrite = 0xE00002C4,};
enum MACRO_kIOReturnMessageTooLarge : __int64 {kIOReturnMessageTooLarge = 0xE00002E1,};
enum MACRO_kIOReturnNoBandwidth : __int64 {kIOReturnNoBandwidth = 0xE00002EC,};
enum MACRO_kIOReturnNoChannels : __int64 {kIOReturnNoChannels = 0xE00002DA,};
enum MACRO_kIOReturnNoCompletion : __int64 {kIOReturnNoCompletion = 0xE00002EA,};
enum MACRO_kIOReturnNoDevice : __int64 {kIOReturnNoDevice = 0xE00002C0,};
enum MACRO_kIOReturnNoFrames : __int64 {kIOReturnNoFrames = 0xE00002E0,};
enum MACRO_kIOReturnNoInterrupt : __int64 {kIOReturnNoInterrupt = 0xE00002DF,};
enum MACRO_kIOReturnNoMedia : __int64 {kIOReturnNoMedia = 0xE00002E4,};
enum MACRO_kIOReturnNoMemory : __int64 {kIOReturnNoMemory = 0xE00002BD,};
enum MACRO_kIOReturnNoPower : __int64 {kIOReturnNoPower = 0xE00002E3,};
enum MACRO_kIOReturnNoResources : __int64 {kIOReturnNoResources = 0xE00002BE,};
enum MACRO_kIOReturnNoSpace : __int64 {kIOReturnNoSpace = 0xE00002DB,};
enum MACRO_kIOReturnNotAligned : __int64 {kIOReturnNotAligned = 0xE00002D0,};
enum MACRO_kIOReturnNotAttached : __int64 {kIOReturnNotAttached = 0xE00002D9,};
enum MACRO_kIOReturnNotFound : __int64 {kIOReturnNotFound = 0xE00002F0,};
enum MACRO_kIOReturnNotOpen : __int64 {kIOReturnNotOpen = 0xE00002CD,};
enum MACRO_kIOReturnNotPermitted : __int64 {kIOReturnNotPermitted = 0xE00002E2,};
enum MACRO_kIOReturnNotPrivileged : __int64 {kIOReturnNotPrivileged = 0xE00002C1,};
enum MACRO_kIOReturnNotReadable : __int64 {kIOReturnNotReadable = 0xE00002CE,};
enum MACRO_kIOReturnNotReady : __int64 {kIOReturnNotReady = 0xE00002D8,};
enum MACRO_kIOReturnNotResponding : __int64 {kIOReturnNotResponding = 0xE00002ED,};
enum MACRO_kIOReturnNotWritable : __int64 {kIOReturnNotWritable = 0xE00002CF,};
enum MACRO_kIOReturnOffline : __int64 {kIOReturnOffline = 0xE00002D7,};
enum MACRO_kIOReturnOverrun : __int64 {kIOReturnOverrun = 0xE00002E8,};
enum MACRO_kIOReturnPortExists : __int64 {kIOReturnPortExists = 0xE00002DD,};
enum MACRO_kIOReturnRLDError : __int64 {kIOReturnRLDError = 0xE00002D3,};
enum MACRO_kIOReturnStillOpen : __int64 {kIOReturnStillOpen = 0xE00002D2,};
enum MACRO_kIOReturnSuccess : __int64 {kIOReturnSuccess = 0,kIOReturnError = 3758097084,};
enum MACRO_kIOReturnTimeout : __int64 {kIOReturnTimeout = 0xE00002D6,};
enum MACRO_kIOReturnUnderrun : __int64 {kIOReturnUnderrun = 0xE00002E7,};
enum MACRO_kIOReturnUnformattedMedia : __int64 {kIOReturnUnformattedMedia = 0xE00002E5,};
enum MACRO_kIOReturnUnsupported : __int64 {kIOReturnUnsupported = 0xE00002C7,};
enum MACRO_kIOReturnUnsupportedMode : __int64 {kIOReturnUnsupportedMode = 0xE00002E6,};
enum MACRO_kIOReturnVMError : __int64 {kIOReturnVMError = 0xE00002C8,};
enum MACRO_kInvalidID {kInvalidID = 0,};
enum MACRO_kLastWindowGroup {kLastWindowGroup = 0,};
enum MACRO_kLastWindowOfClass {kLastWindowOfClass = 0,kFirstWindowOfGroup = -1,};
enum MACRO_kLastWindowOfGroup {kLastWindowOfGroup = 0,kFirstWindowGroup = -1,};
enum MACRO_kMPUnresolvedCFragSymbolAddress {kMPUnresolvedCFragSymbolAddress = 0,};
enum MACRO_kNSLDataType {kNSLDataType = 1314081887,};
enum MACRO_kOTInvalidEndpointRef {kOTInvalidEndpointRef = 0,};
enum MACRO_kOTInvalidMapperRef {kOTInvalidMapperRef = 0,};
enum MACRO_kOTInvalidProviderRef {kOTInvalidProviderRef = 0,};
enum MACRO_kOTInvalidRef {kOTInvalidRef = 0,};
enum MACRO_kOTNoMemoryConfigurationPtr {kOTNoMemoryConfigurationPtr = 0,kOTInvalidConfigurationPtr = -1,};
enum MACRO_kPMDontWantBoolean {kPMDontWantBoolean = 0,};
enum MACRO_kPMDontWantData {kPMDontWantData = 0,};
enum MACRO_kPMDontWantSize {kPMDontWantSize = 0,};
enum MACRO_kPMNoData {kPMNoData = 0,};
enum MACRO_kPMNoPageFormat {kPMNoPageFormat = 0,};
enum MACRO_kPMNoPrintSettings {kPMNoPrintSettings = 0,};
enum MACRO_kPMNoReference {kPMNoReference = 0,};
enum MACRO_kPMServerLocal {kPMServerLocal = 0,};
enum MACRO_kScrapRefNone {kScrapRefNone = 0,};
enum MACRO_kTXNDefaultFontName {kTXNDefaultFontName = 0,};
enum MACRO_kUserFocusAuto {kUserFocusAuto = -1,};
enum MACRO_nil {nil = 0,};
enum MACRO_positiveInfinity {positiveInfinity = 0x7FFFFFFF,negativeInfinity = 0x80000000,};
enum MACRO_sub {sub_iokit_common = 0,sub_iokit_usb = 16384,sub_iokit_firewire = 32768,sub_iokit_block_storage = 65536,sub_iokit_reserved = 67092480,};
enum MACRO_sys : __int64 {sys_iokit = 0xE0000000,};
typedef __int16 (__fastcall *MBarHookProcPtr)(Rect *menuRect);
typedef MBarHookProcPtr MBarHookUPP;
struct MCEntry {MenuID mctID;__int16 mctItem;RGBColor mctRGB1;RGBColor mctRGB2;RGBColor mctRGB3;RGBColor mctRGB4;__int16 mctReserved;};
typedef MCEntry *MCEntryPtr;
typedef MCEntry MCTable[1];
typedef MCTablePtr *MCTableHandle;
typedef MCEntry *MCTablePtr;
struct MDEFDrawData {MenuTrackingData trackingData;void *context;};
typedef MDEFDrawData *MDEFDrawDataPtr;
struct MDEFDrawItemsData {MenuItemIndex firstItem;MenuItemIndex lastItem;MenuTrackingData *trackingData;void *context;};
typedef MDEFDrawItemsData *MDEFDrawItemsDataPtr;
struct MDEFFindItemData {MenuTrackingData trackingData;void *context;};
typedef MDEFFindItemData *MDEFFindItemDataPtr;
struct MDEFHiliteItemData {MenuItemIndex previousItem;MenuItemIndex newItem;void *context;};
typedef MDEFHiliteItemData *MDEFHiliteItemDataPtr;
struct MIDIDataChunk {ID ckID;int ckSize;UInt8 MIDIdata[1];};
typedef MIDIDataChunk *MIDIDataChunkPtr;
typedef struct OpaqueMPAddressSpaceID *MPAddressSpaceID;
struct MPAddressSpaceInfo {PBVersion version;MPProcessID processID;MPCoherenceID groupID;ItemCount nTasks;UInt32 vsid[16];};
typedef struct OpaqueMPAreaID *MPAreaID;
typedef struct OpaqueMPCoherenceID *MPCoherenceID;
typedef struct OpaqueMPConsoleID *MPConsoleID;
typedef struct OpaqueMPCpuID *MPCpuID;
typedef struct OpaqueMPCriticalRegionID *MPCriticalRegionID;
struct MPCriticalRegionInfo {PBVersion version;MPProcessID processID;OSType regionName;ItemCount nWaiting;MPTaskID waitingTaskID;MPTaskID owningTask;ItemCount count;};
typedef UInt32 MPDebuggerLevel;
typedef UInt32 MPEventFlags;
typedef struct OpaqueMPEventID *MPEventID;
struct MPEventInfo {PBVersion version;MPProcessID processID;OSType eventName;ItemCount nWaiting;MPTaskID waitingTaskID;MPEventFlags events;};
typedef UInt32 MPExceptionKind;
typedef Boolean (*MPIsFullyInitializedProc)(void);
typedef struct OpaqueMPNotificationID *MPNotificationID;
struct MPNotificationInfo {PBVersion version;MPProcessID processID;OSType notificationName;MPQueueID queueID;void *p1;void *p2;void *p3;MPEventID eventID;MPEventFlags events;MPSemaphoreID semaphoreID;};
typedef struct OpaqueMPOpaqueID *MPOpaqueID;
typedef UInt32 MPOpaqueIDClass;
typedef UInt32 MPPageSizeClass;
typedef struct OpaqueMPProcessID *MPProcessID;
typedef struct OpaqueMPQueueID *MPQueueID;
struct MPQueueInfo {PBVersion version;MPProcessID processID;OSType queueName;ItemCount nWaiting;MPTaskID waitingTaskID;ItemCount nMessages;ItemCount nReserved;void *p1;void *p2;void *p3;};
typedef UInt8 MPRemoteContext;
typedef void *(__fastcall *MPRemoteProcedure)(void *parameter);
typedef ItemCount MPSemaphoreCount;
typedef struct OpaqueMPSemaphoreID *MPSemaphoreID;
struct MPSemaphoreInfo {PBVersion version;MPProcessID processID;OSType semaphoreName;ItemCount nWaiting;MPTaskID waitingTaskID;ItemCount maximum;ItemCount count;};
typedef struct OpaqueMPTaskID *MPTaskID;
struct MPTaskInfo {PBVersion version;OSType name;OSType queueName;UInt16 runState;UInt16 lastCPU;UInt32 weight;MPProcessID processID;AbsoluteTime cpuTime;AbsoluteTime schedTime;AbsoluteTime creationTime;ItemCount codePageFaults;ItemCount dataPageFaults;ItemCount preemptions;MPCpuID cpuID;MPOpaqueID blockedObject;MPAddressSpaceID spaceID;LogicalAddress stackBase;LogicalAddress stackLimit;LogicalAddress stackCurr;};
struct MPTaskInfoVersion2 {PBVersion version;OSType name;OSType queueName;UInt16 runState;UInt16 lastCPU;UInt32 weight;MPProcessID processID;AbsoluteTime cpuTime;AbsoluteTime schedTime;AbsoluteTime creationTime;ItemCount codePageFaults;ItemCount dataPageFaults;ItemCount preemptions;MPCpuID cpuID;};
typedef OptionBits MPTaskOptions;
typedef UInt32 MPTaskStateKind;
typedef UInt32 MPTaskWeight;
typedef struct OpaqueMPTimerID *MPTimerID;
struct MacPolygon {__int16 polySize;Rect polyBBox;Point polyPoints[1];};
typedef MachineInformationPowerPC MachineInformation;
struct MachineInformationPowerPC {UnsignedWide CTR;UnsignedWide LR;UnsignedWide PC;unsigned int CR;unsigned int XER;unsigned int MSR;unsigned int MQ;unsigned int ExceptKind;unsigned int DSISR;UnsignedWide DAR;UnsignedWide Reserved;};
struct MachineLocation {Fract latitude;Fract longitude;union MachineLocation::$1F3B152A4171777FD7A23C169867AF2B u;};
union MachineLocation::$1F3B152A4171777FD7A23C169867AF2B {SInt8 dlsDelta;int gmtDelta;struct MachineLocation::$1F3B152A4171777FD7A23C169867AF2B::$76CC3C986A53E171395459D8A0272AA2 dls;};
struct MachineLocation::$1F3B152A4171777FD7A23C169867AF2B::$76CC3C986A53E171395459D8A0272AA2 {SInt8 Delta;};
typedef void *MapperRef;
struct Marker {MarkerIdType id;unsigned int position;Str255 markerName;};
struct MarkerChunk {ID ckID;int ckSize;unsigned __int16 numMarkers;Marker Markers[1];};
typedef MarkerChunk *MarkerChunkPtr;
typedef __int16 MarkerIdType;
typedef CMError (__fastcall *MatchImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, UInt32 qual, UInt32 srcIntent, CMProfileRef srcProf, CMProfileRef dstProf, CMProfileRef prfProf, UInt32 matchFlags);
struct MatchRec {unsigned __int16 red;unsigned __int16 green;unsigned __int16 blue;int matchData;};
struct MeasureWindowTitleRec {SInt16 fullTitleWidth;SInt16 titleTextWidth;Boolean isUnicodeTitle;Boolean unused;};
typedef MeasureWindowTitleRec *MeasureWindowTitleRecPtr;
struct MemoryBlock {void *address;unsigned int count;};
struct MemoryExceptionInformation {AreaID theArea;LogicalAddress theAddress;OSStatus theError;MemoryReferenceKind theReference;};
typedef unsigned int MemoryReferenceKind;
typedef UInt32 MenuAttributes;
typedef int (__fastcall *MenuBarDefProcPtr)(__int16 selector, __int16 message, __int16 parameter1, int parameter2);
typedef MenuBarDefProcPtr MenuBarDefUPP;
typedef Handle MenuBarHandle;
struct MenuBarHeader {UInt16 lastMenu;SInt16 lastRight;SInt16 mbResID;};
struct MenuBarMenu {MenuRef menu;SInt16 menuLeft;};
struct MenuCRsrc {__int16 numEntries;MCTable mcEntryRecs;};
typedef MenuCRsrcPtr *MenuCRsrcHandle;
typedef MenuCRsrc *MenuCRsrcPtr;
typedef UInt32 MenuCommand;
typedef void (__fastcall *MenuDefProcPtr)(__int16 message, MenuRef theMenu, Rect *menuRect, Point hitPt, __int16 *whichItem);
struct MenuDefSpec {MenuDefType defType;union MenuDefSpec::$7120FAAA6901A0C284217E881202C7FA u;};
union MenuDefSpec::$7120FAAA6901A0C284217E881202C7FA {MenuDefUPP defProc;};
typedef MenuDefSpec *MenuDefSpecPtr;
typedef UInt32 MenuDefType;
typedef MenuDefProcPtr MenuDefUPP;
typedef UInt32 MenuEventOptions;
typedef MenuRef MenuHandle;
typedef void (*MenuHookProcPtr)(void);
typedef MenuHookProcPtr MenuHookUPP;
typedef SInt16 MenuID;
typedef UInt32 MenuItemAttributes;
typedef UInt64 MenuItemDataFlags;
typedef MenuItemDataRec *MenuItemDataPtr;
struct MenuItemDataRec {MenuItemDataFlags whichData;StringPtr text;UniChar mark;UniChar cmdKey;UInt32 cmdKeyGlyph;UInt32 cmdKeyModifiers;Style style;Boolean enabled;Boolean iconEnabled;UInt8 filler1;SInt32 iconID;UInt32 iconType;Handle iconHandle;MenuCommand cmdID;TextEncoding encoding;MenuID submenuID;MenuRef submenuHandle;SInt32 fontID;UInt32 refcon;OptionBits attr;CFStringRef cfText;Collection properties;UInt32 indent;UInt16 cmdVirtualKey;};
typedef void (__fastcall *MenuItemDrawingProcPtr)(const Rect *inBounds, SInt16 inDepth, Boolean inIsColorDevice, SInt32 inUserData);
typedef MenuItemDrawingProcPtr MenuItemDrawingUPP;
typedef UInt32 MenuItemID;
typedef UInt16 MenuItemIndex;
typedef struct OpaqueMenuLayoutRef *MenuLayoutRef;
typedef struct OpaqueMenuRef *MenuRef;
typedef void (__fastcall *MenuTitleDrawingProcPtr)(const Rect *inBounds, SInt16 inDepth, Boolean inIsColorDevice, SInt32 inUserData);
typedef MenuTitleDrawingProcPtr MenuTitleDrawingUPP;
struct MenuTrackingData {MenuRef menu;MenuItemIndex itemSelected;MenuItemIndex itemUnderMouse;Rect itemRect;SInt32 virtualMenuTop;SInt32 virtualMenuBottom;};
typedef MenuTrackingData *MenuTrackingDataPtr;
typedef UInt32 MenuTrackingMode;
struct MixedModeStateRecord {UInt32 state1;UInt32 state2;UInt32 state3;UInt32 state4;};
struct ModRef {unsigned __int16 modNumber;int modInit;};
typedef Boolean (__fastcall *ModalFilterProcPtr)(DialogRef theDialog, EventRecord *theEvent, DialogItemIndex *itemHit);
typedef ModalFilterProcPtr ModalFilterUPP;
typedef Boolean (__fastcall *ModalFilterYDProcPtr)(DialogRef theDialog, EventRecord *theEvent, __int16 *itemHit, void *yourDataPtr);
typedef ModalFilterYDProcPtr ModalFilterYDUPP;
typedef SInt8 ModemByte;
typedef UInt32 MorphemePartOfSpeech;
struct MorphemeTextRange {UInt32 sourceOffset;UInt32 length;};
struct MortChain {MortSubtableMaskFlags defaultFlags;UInt32 length;UInt16 nFeatures;UInt16 nSubtables;MortFeatureEntry featureEntries[1];};
struct MortContextualSubtable {STHeader header;UInt16 substitutionTableOffset;};
struct MortFeatureEntry {UInt16 featureType;UInt16 featureSelector;MortSubtableMaskFlags enableFlags;MortSubtableMaskFlags disableFlags;};
struct MortInsertionSubtable {STHeader header;};
typedef UInt32 MortLigatureActionEntry;
struct MortLigatureSubtable {STHeader header;UInt16 ligatureActionTableOffset;UInt16 componentTableOffset;UInt16 ligatureTableOffset;};
struct MortRearrangementSubtable {STHeader header;};
union MortSpecificSubtable {MortRearrangementSubtable rearrangement;MortContextualSubtable contextual;MortLigatureSubtable ligature;MortSwashSubtable swash;MortInsertionSubtable insertion;};
struct MortSubtable {UInt16 length;UInt16 coverage;MortSubtableMaskFlags flags;MortSpecificSubtable u;};
typedef UInt32 MortSubtableMaskFlags;
struct MortSwashSubtable {SFNTLookupTable lookup;};
struct MortTable {Fixed version;UInt32 nChains;MortChain chains[1];};
struct MorxChain {MortSubtableMaskFlags defaultFlags;UInt32 length;UInt32 nFeatures;UInt32 nSubtables;MortFeatureEntry featureEntries[1];};
struct MorxContextualSubtable {STXHeader header;UInt32 substitutionTableOffset;};
struct MorxInsertionSubtable {STXHeader header;UInt32 insertionGlyphTableOffset;};
struct MorxLigatureSubtable {STXHeader header;UInt32 ligatureActionTableOffset;UInt32 componentTableOffset;UInt32 ligatureTableOffset;};
struct MorxRearrangementSubtable {STXHeader header;};
union MorxSpecificSubtable {MorxRearrangementSubtable rearrangement;MorxContextualSubtable contextual;MorxLigatureSubtable ligature;MortSwashSubtable swash;MorxInsertionSubtable insertion;};
struct MorxSubtable {UInt32 length;UInt32 coverage;MortSubtableMaskFlags flags;MorxSpecificSubtable u;};
struct MorxTable {Fixed version;UInt32 nChains;MorxChain chains[1];};
typedef UInt32 MouseTrackingOptions;
typedef struct OpaqueMouseTrackingRef *MouseTrackingRef;
struct MouseTrackingRegionID {OSType signature;SInt32 id;};
typedef UInt16 MouseTrackingResult;
struct MultiDevParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioMRefNum;SInt8 ioMVersNum;SInt8 ioMPermssn;Ptr ioMMix;__int16 ioMFlags;Ptr ioSEBlkPtr;};
typedef MultiDevParam *MultiDevParamPtr;
struct MultiUserGestalt {__int16 giVersion;__int16 giReserved0;__int16 giReserved1;__int16 giReserved2;__int16 giReserved3;FSSpec giReserved4;__int16 giDocsVRefNum;int giDocsDirID;__int16 giForceSaves;__int16 giForceOpens;Str31 giSetupName;Str31 giUserName;Str31 giFrontAppName;__int16 giReserved5;__int16 giIsOn;__int16 giUserLoggedInType;char giUserEncryptPwd[16];__int16 giUserEnvironment;int giReserved6;int giReserved7;Boolean giDisableScrnShots;Boolean giSupportsAsyncFSCalls;__int16 giPrefsVRefNum;int giPrefsDirID;unsigned int giUserLogInTime;Boolean giUsingPrintQuotas;Boolean giUsingDiskQuotas;Boolean giInSystemAccess;Boolean giUserFolderEnabled;__int16 giReserved8;int giReserved9;Boolean giInLoginScreen;};
typedef MultiUserGestaltPtr *MultiUserGestaltHandle;
typedef MultiUserGestalt *MultiUserGestaltPtr;
struct MultipleAddressRange {ItemCount entryCount;AddressRangeTablePtr rangeTable;};
struct NBPAddress {OTAddressType fAddressType;UInt8 fNBPNameBuffer[105];};
struct NBPEntity {UInt8 fEntity[99];};
struct NBreakTable {SInt8 flags1;SInt8 flags2;__int16 version;__int16 classTableOff;__int16 auxCTableOff;__int16 backwdTableOff;__int16 forwdTableOff;__int16 doBackup;__int16 length;char charTypes[256];__int16 tables[1];};
typedef NBreakTable *NBreakTablePtr;
struct NCMConcatProfileSet {OSType cmm;UInt32 flags;UInt32 flagsMask;UInt32 profileCount;NCMConcatProfileSpec profileSpecs[1];};
struct NCMConcatProfileSpec {UInt32 renderingIntent;UInt32 transformTag;CMProfileRef profile;};
struct NCMDeviceProfileInfo {UInt32 dataVersion;CMDeviceProfileID profileID;CMProfileLocation profileLoc;CFDictionaryRef profileName;CMDeviceProfileScope profileScope;UInt32 reserved;};
typedef void (__fastcall *NColorChangedProcPtr)(int userData, NPMColor *newColor);
typedef NColorChangedProcPtr NColorChangedUPP;
struct NColorPickerInfo {NPMColor theColor;CMProfileRef dstProfile;UInt32 flags;DialogPlacementSpec placeWhere;Point dialogOrigin;OSType pickerType;UserEventUPP eventProc;NColorChangedUPP colorProc;UInt32 colorProcData;Str255 prompt;PickerMenuItemInfo mInfo;Boolean newColorChosen;UInt8 reserved;};
typedef NItl4Ptr *NItl4Handle;
typedef NItl4Rec *NItl4Ptr;
struct NItl4Rec {__int16 flags;int resourceType;__int16 resourceNum;__int16 version;__int16 format;__int16 resHeader;int resHeader2;__int16 numTables;int mapOffset;int strOffset;int fetchOffset;int unTokenOffset;int defPartsOffset;int whtSpListOffset;int resOffset7;int resOffset8;__int16 resLength1;__int16 resLength2;__int16 resLength3;__int16 unTokenLength;__int16 defPartsLength;__int16 whtSpListLength;__int16 resLength7;__int16 resLength8;};
typedef void (__fastcall *NMProcPtr)(NMRecPtr nmReqPtr);
struct NMRec {QElemPtr qLink;__int16 qType;__int16 nmFlags;int nmPrivate;__int16 nmReserved;__int16 nmMark;Handle nmIcon;Handle nmSound;StringPtr nmStr;NMUPP nmResp;int nmRefCon;};
typedef NMRec *NMRecPtr;
typedef NMProcPtr NMUPP;
struct NPMColor {CMProfileRef profile;CMColor color;};
typedef NPMColor *NPMColorPtr;
struct NSLClientAsyncInfo {void *clientContextPtr;void *mgrContextPtr;char *resultBuffer;int bufferLen;int maxBufferSize;UInt32 startTime;UInt32 intStartTime;UInt32 maxSearchTime;UInt32 alertInterval;UInt32 totalItems;UInt32 alertThreshold;NSLSearchState searchState;NSLError searchResult;NSLEventCode searchDataType;};
typedef NSLClientAsyncInfo *NSLClientAsyncInfoPtr;
typedef void (__fastcall *NSLClientNotifyProcPtr)(NSLClientAsyncInfo *theClientAsyncInfo);
typedef NSLClientNotifyProcPtr NSLClientNotifyUPP;
typedef UInt32 NSLClientRef;
typedef UInt32 NSLDialogOptionFlags;
struct NSLDialogOptions {UInt16 version;NSLDialogOptionFlags dialogOptionFlags;Str255 windowTitle;Str255 actionButtonLabel;Str255 cancelButtonLabel;Str255 message;};
struct NSLError {OSStatus theErr;UInt32 theContext;};
typedef NSLError *NSLErrorPtr;
typedef UInt32 NSLEventCode;
typedef void (__fastcall *NSLEventProcPtr)(EventRecord *newEvent, void *userContext);
typedef NSLEventProcPtr NSLEventUPP;
typedef void (__fastcall *NSLMgrNotifyProcPtr)(NSLPluginAsyncInfo *thePluginAsyncInfo);
typedef NSLMgrNotifyProcPtr NSLMgrNotifyUPP;
typedef unsigned __int8 *NSLNeighborhood;
typedef UInt32 NSLOneBasedIndex;
typedef char *NSLPath;
struct NSLPluginAsyncInfo {void *mgrContextPtr;void *pluginContextPtr;void *pluginPtr;char *resultBuffer;int bufferLen;int maxBufferSize;UInt32 maxSearchTime;UInt32 reserved1;UInt32 reserved2;UInt32 reserved3;NSLClientRef clientRef;NSLRequestRef requestRef;NSLSearchState searchState;OSStatus searchResult;};
typedef NSLPluginAsyncInfo *NSLPluginAsyncInfoPtr;
struct NSLPluginData {int reserved1;int reserved2;int reserved3;Boolean supportsRegistration;Boolean isPurgeable;UInt16 totalLen;UInt16 dataTypeOffset;UInt16 serviceListOffset;UInt16 protocolListOffset;UInt16 commentStringOffset;};
typedef NSLPluginData *NSLPluginDataPtr;
typedef UInt32 NSLRequestRef;
typedef UInt16 NSLSearchState;
typedef char *NSLServiceType;
typedef Handle NSLServicesList;
struct NSLServicesListHeader {unsigned int numServices;unsigned int logicalLen;};
typedef NSLServicesListHeader *NSLServicesListHeaderPtr;
struct NSLTypedData {unsigned int dataType;unsigned int lengthOfData;};
typedef NSLTypedData *NSLTypedDataPtr;
typedef Boolean (__fastcall *NSLURLFilterProcPtr)(char *url, Str255 displayString);
typedef NSLURLFilterProcPtr NSLURLFilterUPP;
typedef unsigned __int16 (__fastcall *NWidthHookProcPtr)(unsigned __int16 styleRunLen, unsigned __int16 styleRunOffset, __int16 slop, __int16 direction, void *textBufferPtr, __int16 *lineStart, TEPtr pTE, TEHandle hTE);
typedef NWidthHookProcPtr NWidthHookUPP;
struct NameTable {__int16 stringCount;Str255 baseFontName;};
typedef UnsignedWide Nanoseconds;
typedef UInt32 NavActionState;
typedef UInt32 NavAskDiscardChangesResult;
typedef UInt32 NavAskSaveChangesAction;
typedef UInt32 NavAskSaveChangesResult;
struct NavCBRec {UInt16 version;NavDialogRef context;WindowRef window;Rect customRect;Rect previewRect;NavEventData eventData;NavUserAction userAction;char reserved[218];};
typedef NavCBRec *NavCBRecPtr;
typedef void *NavCallBackUserData;
typedef SInt32 NavCustomControlMessage;
struct NavDialogCreationOptions {UInt16 version;NavDialogOptionFlags optionFlags;Point location;CFStringRef clientName;CFStringRef windowTitle;CFStringRef actionButtonLabel;CFStringRef cancelButtonLabel;CFStringRef saveFileName;CFStringRef message;UInt32 preferenceKey;CFArrayRef popupExtension;WindowModality modality;WindowRef parentWindow;char reserved[16];};
typedef UInt32 NavDialogOptionFlags;
struct NavDialogOptions {UInt16 version;NavDialogOptionFlags dialogOptionFlags;Point location;Str255 clientName;Str255 windowTitle;Str255 actionButtonLabel;Str255 cancelButtonLabel;Str255 savedFileName;Str255 message;UInt32 preferenceKey;NavMenuItemSpecArrayHandle popupExtension;char reserved[494];};
typedef struct __NavDialog *NavDialogRef;
typedef SInt32 NavEventCallbackMessage;
struct NavEventData {NavEventDataInfo eventDataParms;SInt16 itemHit;};
union NavEventDataInfo {EventRecord *event;void *param;};
typedef void (__fastcall *NavEventProcPtr)(NavEventCallbackMessage callBackSelector, NavCBRecPtr callBackParms, void *callBackUD);
typedef NavEventProcPtr NavEventUPP;
struct NavFileOrFolderInfo {UInt16 version;Boolean isFolder;Boolean visible;UInt32 creationDate;UInt32 modificationDate;union NavFileOrFolderInfo::$71FFE0D2A3B18F27A4A5C2031AD6D803 fileAndFolder;};
union NavFileOrFolderInfo::$71FFE0D2A3B18F27A4A5C2031AD6D803 {struct NavFileOrFolderInfo::$71FFE0D2A3B18F27A4A5C2031AD6D803::$B1AF5D619A686622EEEA529B971D921A fileInfo;struct NavFileOrFolderInfo::$71FFE0D2A3B18F27A4A5C2031AD6D803::$8ABAFE9D0F2A6436458B648879A67693 folderInfo;};
struct NavFileOrFolderInfo::$71FFE0D2A3B18F27A4A5C2031AD6D803::$8ABAFE9D0F2A6436458B648879A67693 {Boolean shareable;Boolean sharePoint;Boolean mounted;Boolean readable;Boolean writeable;Boolean reserved2;UInt32 numberOfFiles;DInfo finderDInfo;DXInfo finderDXInfo;OSType folderType;OSType folderCreator;char reserved3[206];};
struct NavFileOrFolderInfo::$71FFE0D2A3B18F27A4A5C2031AD6D803::$B1AF5D619A686622EEEA529B971D921A {Boolean locked;Boolean resourceOpen;Boolean dataOpen;Boolean reserved1;UInt32 dataSize;UInt32 resourceSize;FInfo finderInfo;FXInfo finderXInfo;};
typedef SInt16 NavFilterModes;
struct NavMenuItemSpec {UInt16 version;OSType menuCreator;OSType menuType;Str255 menuItemName;char reserved[245];};
typedef NavMenuItemSpecArrayPtr *NavMenuItemSpecArrayHandle;
typedef NavMenuItemSpec *NavMenuItemSpecArrayPtr;
typedef NavMenuItemSpecArrayHandle NavMenuItemSpecHandle;
typedef NavMenuItemSpecArrayPtr NavMenuItemSpecPtr;
typedef Boolean (__fastcall *NavObjectFilterProcPtr)(AEDesc *theItem, void *info, void *callBackUD, NavFilterModes filterMode);
typedef NavObjectFilterProcPtr NavObjectFilterUPP;
typedef UInt16 NavPopupMenuItem;
typedef Boolean (__fastcall *NavPreviewProcPtr)(NavCBRecPtr callBackParms, void *callBackUD);
typedef NavPreviewProcPtr NavPreviewUPP;
struct NavReplyRecord {UInt16 version;Boolean validRecord;Boolean replacing;Boolean isStationery;Boolean translationNeeded;AEDescList selection;ScriptCode keyScript;FileTranslationSpecArrayHandle fileTranslation;UInt32 reserved1;CFStringRef saveFileName;Boolean saveFileExtensionHidden;UInt8 reserved2;char reserved[225];};
typedef UInt16 NavSortKeyField;
typedef UInt16 NavSortOrder;
typedef UInt32 NavTranslationOptions;
struct NavTypeList {OSType componentSignature;__int16 reserved;__int16 osTypeCount;OSType osType[1];};
typedef NavTypeListPtr *NavTypeListHandle;
typedef NavTypeList *NavTypeListPtr;
typedef UInt32 NavUserAction;
typedef NullStPtr *NullStHandle;
typedef NullStRec *NullStPtr;
struct NullStRec {int teReserved;StScrpHandle nullScrap;};
struct NumFormatString {UInt8 fLength;UInt8 fVersion;char data[254];};
typedef NumFormatString NumFormatStringRec;
struct NumVersion {UInt8 majorRev;UInt8 minorAndBugRev;UInt8 stage;UInt8 nonRelRev;};
union NumVersionVariant {NumVersion parts;unsigned int whole;};
typedef NumVersionVariantPtr *NumVersionVariantHandle;
typedef NumVersionVariant *NumVersionVariantPtr;
struct NumberParts {__int16 version;WideChar data[31];WideCharArr pePlus;WideCharArr peMinus;WideCharArr peMinusPlus;WideCharArr altNumTable;char reserved[20];};
typedef NumberParts *NumberPartsPtr;
typedef OSErr (__fastcall *OSAActiveProcPtr)(int refCon);
typedef OSAActiveProcPtr OSAActiveUPP;
typedef OSErr (__fastcall *OSACreateAppleEventProcPtr)(AEEventClass theAEEventClass, AEEventID theAEEventID, const AEAddressDesc *target, __int16 returnID, int transactionID, AppleEvent *result, int refCon);
typedef OSACreateAppleEventProcPtr OSACreateAppleEventUPP;
typedef OSAID OSADebugCallFrameRef;
typedef OSAID OSADebugSessionRef;
typedef UInt32 OSADebugStepKind;
typedef ComponentResult OSAError;
typedef unsigned int OSAID;
typedef UInt32 OSAProgramState;
typedef OSErr (__fastcall *OSASendProcPtr)(const AppleEvent *theAppleEvent, AppleEvent *reply, AESendMode sendMode, AESendPriority sendPriority, int timeOutInTicks, AEIdleUPP idleProc, AEFilterUPP filterProc, int refCon);
typedef OSASendProcPtr OSASendUPP;
typedef natural_t OSAsyncReference[8];
typedef SInt16 OSErr;
typedef OSErr (__fastcall *OSLAccessorProcPtr)(DescType desiredClass, const AEDesc *container, DescType containerClass, DescType form, const AEDesc *selectionData, AEDesc *value, int accessorRefcon);
typedef OSLAccessorProcPtr OSLAccessorUPP;
typedef OSErr (__fastcall *OSLAdjustMarksProcPtr)(int newStart, int newStop, const AEDesc *markToken);
typedef OSLAdjustMarksProcPtr OSLAdjustMarksUPP;
typedef OSErr (__fastcall *OSLCompareProcPtr)(DescType oper, const AEDesc *obj1, const AEDesc *obj2, Boolean *result);
typedef OSLCompareProcPtr OSLCompareUPP;
typedef OSErr (__fastcall *OSLCountProcPtr)(DescType desiredType, DescType containerClass, const AEDesc *container, int *result);
typedef OSLCountProcPtr OSLCountUPP;
typedef OSErr (__fastcall *OSLDisposeTokenProcPtr)(AEDesc *unneededToken);
typedef OSLDisposeTokenProcPtr OSLDisposeTokenUPP;
typedef OSErr (__fastcall *OSLGetErrDescProcPtr)(AEDesc **appDescPtr);
typedef OSLGetErrDescProcPtr OSLGetErrDescUPP;
typedef OSErr (__fastcall *OSLGetMarkTokenProcPtr)(const AEDesc *dContainerToken, DescType containerClass, AEDesc *result);
typedef OSLGetMarkTokenProcPtr OSLGetMarkTokenUPP;
typedef OSErr (__fastcall *OSLMarkProcPtr)(const AEDesc *dToken, const AEDesc *markToken, int index);
typedef OSLMarkProcPtr OSLMarkUPP;
struct OSNotificationHeader {vm_size_t size;natural_t type;OSAsyncReference reference;unsigned __int8 content[];};
typedef SInt32 OSStatus;
typedef FourCharCode OSType;
typedef OSType *OSTypePtr;
struct OTAddress {OTAddressType fAddressType;UInt8 fAddress[1];};
typedef UInt16 OTAddressType;
typedef UInt32 OTBand;
typedef Boolean OTBooleanParam;
struct OTBuffer {void *fLink;void *fLink2;struct OTBuffer *fNext;UInt8 *fData;ByteCount fLen;void *fSave;UInt8 fBand;UInt8 fType;UInt8 fPad1;UInt8 fFlags;};
struct OTBufferInfo {OTBuffer *fBuffer;ByteCount fOffset;UInt8 fPad;};
typedef UInt8 OTBusType;
typedef unsigned int OTByteCount;
typedef void *OTClient;
typedef struct OpaqueOTClientContextPtr *OTClientContextPtr;
struct OTClientList {ItemCount fNumClients;UInt8 fBuffer[4];};
typedef UInt8 *OTClientName;
typedef SInt32 OTCommand;
typedef struct OTConfiguration *OTConfigurationRef;
struct OTData {void *fNext;void *fData;ByteCount fLen;};
typedef SInt32 OTDataSize;
typedef int OTDeferredTaskRef;
typedef UInt16 OTDeviceType;
typedef UInt32 OTEventCode;
typedef UInt32 OTFieldsType;
typedef UInt32 OTFlags;
struct OTGate {OTLIFO fLIFO;OTList fList;OTGateProcPtr fProc;SInt32 fNumQueued;SInt32 fInside;};
typedef Boolean (__fastcall *OTGateProcPtr)(OTLink *thisLink);
struct OTHashList {OTHashProcPtr fHashProc;ByteCount fHashTableSize;OTLink **fHashBuckets;};
typedef UInt32 (__fastcall *OTHashProcPtr)(OTLink *linkToHash);
typedef Boolean (__fastcall *OTHashSearchProcPtr)(const void *ref, OTLink *linkToCheck);
struct OTISDNAddress {OTAddressType fAddressType;UInt16 fPhoneLength;char fPhoneNumber[37];};
typedef UInt32 OTInitializationFlags;
typedef int OTInt32;
typedef unsigned int OTItemCount;
struct OTLIFO {OTLink *fHead;};
struct OTLink {struct OTLink *fNext;};
struct OTList {OTLink *fHead;};
typedef Boolean (__fastcall *OTListSearchProcPtr)(const void *ref, OTLink *linkToCheck);
typedef OTListSearchProcPtr OTListSearchUPP;
typedef UInt8 OTLock;
typedef SInt32 OTNameID;
typedef void (__fastcall *OTNotifyProcPtr)(void *contextPtr, OTEventCode code, OTResult result, void *cookie);
typedef OTNotifyProcPtr OTNotifyUPP;
typedef UInt32 OTOpenFlags;
typedef UInt32 OTPacketType;
struct OTPortCloseStruct {OTPortRef fPortRef;ProviderRef fTheProvider;OSStatus fDenyReason;};
struct OTPortRecord {OTPortRef fRef;UInt32 fPortFlags;UInt32 fInfoFlags;UInt32 fCapabilities;ItemCount fNumChildPorts;OTPortRef *fChildPorts;char fPortName[36];char fModuleName[32];char fSlotID[8];char fResourceInfo[32];char fReserved[164];};
typedef UInt32 OTPortRef;
typedef OTPortRef *OTPortRefPtr;
typedef void (__fastcall *OTProcessProcPtr)(void *arg);
typedef OTProcessProcPtr OTProcessUPP;
typedef UInt32 OTQLen;
typedef SInt32 OTReason;
typedef SInt32 OTResult;
typedef SInt16 OTSInt16Param;
typedef SInt8 OTSInt8Param;
struct OTScriptInfo {UInt32 fScriptType;void *fTheScript;UInt32 fScriptLength;};
typedef SInt32 OTSequence;
typedef UInt32 OTServiceType;
typedef UInt16 OTSlotNumber;
typedef UInt32 OTStructType;
typedef int OTSystemTaskRef;
typedef UnsignedWide OTTimeStamp;
typedef UInt32 OTTimeout;
typedef int OTTimerTask;
typedef UInt16 OTUInt16Param;
typedef unsigned int OTUInt32;
typedef UInt8 OTUInt8Param;
typedef UInt16 OTUnixErr;
typedef UInt16 OTXTIErr;
typedef UInt32 OTXTILevel;
typedef UInt32 OTXTIName;
typedef UInt32 OTXTIStates;
struct ObjParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 filler7;__int16 ioObjType;StringPtr ioObjNamePtr;int ioObjID;};
typedef ObjParam *ObjParamPtr;
struct OffPair {__int16 offFirst;__int16 offSecond;};
struct OffsetArray {__int16 fNumOfOffsets;int fOffset[1];};
typedef OffsetArrayPtr *OffsetArrayHandle;
typedef OffsetArray *OffsetArrayPtr;
typedef OffPair OffsetTable[3];
struct OpbdSideValues {SInt16 leftSideShift;SInt16 topSideShift;SInt16 rightSideShift;SInt16 bottomSideShift;};
struct OpbdTable {Fixed version;OpbdTableFormat format;SFNTLookupTable lookupTable;};
typedef UInt16 OpbdTableFormat;
struct OpenCPicParams {Rect srcRect;Fixed hRes;Fixed vRes;__int16 version;__int16 reserved1;int reserved2;};
typedef UInt32 OptionBits;
typedef UInt32 PBVersion;
struct PEFContainerHeader {OSType tag1;OSType tag2;OSType architecture;UInt32 formatVersion;UInt32 dateTimeStamp;UInt32 oldDefVersion;UInt32 oldImpVersion;UInt32 currentVersion;UInt16 sectionCount;UInt16 instSectionCount;UInt32 reservedA;};
struct PEFExportedSymbol {UInt32 classAndName;UInt32 symbolValue;SInt16 sectionIndex;};
struct PEFExportedSymbolHashSlot {UInt32 countAndStart;};
struct PEFExportedSymbolKey {union PEFExportedSymbolKey::$C902736B55CFF68BAEE946CD6B3CE90D u;};
union PEFExportedSymbolKey::$C902736B55CFF68BAEE946CD6B3CE90D {UInt32 fullHashWord;PEFSplitHashWord splitHashWord;};
struct PEFImportedLibrary {UInt32 nameOffset;UInt32 oldImpVersion;UInt32 currentVersion;UInt32 importedSymbolCount;UInt32 firstImportedSymbol;UInt8 options;UInt8 reservedA;UInt16 reservedB;};
struct PEFImportedSymbol {UInt32 classAndName;};
struct PEFLoaderInfoHeader {SInt32 mainSection;UInt32 mainOffset;SInt32 initSection;UInt32 initOffset;SInt32 termSection;UInt32 termOffset;UInt32 importedLibraryCount;UInt32 totalImportedSymbolCount;UInt32 relocSectionCount;UInt32 relocInstrOffset;UInt32 loaderStringsOffset;UInt32 exportHashOffset;UInt32 exportHashTablePower;UInt32 exportedSymbolCount;};
struct PEFLoaderRelocationHeader {UInt16 sectionIndex;UInt16 reservedA;UInt32 relocCount;UInt32 firstRelocOffset;};
typedef UInt16 PEFRelocChunk;
struct PEFSectionHeader {SInt32 nameOffset;UInt32 defaultAddress;UInt32 totalLength;UInt32 unpackedLength;UInt32 containerLength;UInt32 containerOffset;UInt8 sectionKind;UInt8 shareKind;UInt8 alignment;UInt8 reservedA;};
struct PEFSplitHashWord {UInt16 nameLength;UInt16 hashValue;};
typedef UInt16 PMBorderType;
struct PMColor {CMProfileHandle profile;CMColor color;};
typedef UInt16 PMColorMode;
typedef PMColor *PMColorPtr;
typedef UInt32 PMColorSyncIntent;
typedef UInt16 PMDestinationType;
typedef struct OpaquePMDialog *PMDialog;
typedef UInt16 PMDuplexBinding;
typedef void (*PMIdleProcPtr)(void);
typedef PMIdleProcPtr PMIdleUPP;
typedef void (__fastcall *PMItemProcPtr)(DialogRef theDialog, __int16 item);
typedef PMItemProcPtr PMItemUPP;
struct PMLanguageInfo {Str32 level;Str32 version;Str32 release;};
typedef UInt16 PMLayoutDirection;
typedef const void *PMObject;
typedef UInt16 PMOrientation;
typedef struct OpaquePMPageFormat *PMPageFormat;
typedef void (__fastcall *PMPageSetupDialogInitProcPtr)(PMPageFormat pageFormat, PMDialog *theDialog);
typedef PMPageSetupDialogInitProcPtr PMPageSetupDialogInitUPP;
typedef UInt32 PMPaperType;
typedef struct OpaquePMPrintContext *PMPrintContext;
typedef void (__fastcall *PMPrintDialogInitProcPtr)(PMPrintSettings printSettings, PMDialog *theDialog);
typedef PMPrintDialogInitProcPtr PMPrintDialogInitUPP;
typedef struct OpaquePMPrintSession *PMPrintSession;
typedef struct OpaquePMPrintSettings *PMPrintSettings;
typedef struct OpaquePMPrinter *PMPrinter;
typedef UInt16 PMPrinterState;
typedef UInt32 PMQualityMode;
struct PMRect {double top;double left;double bottom;double right;};
struct PMResolution {double hRes;double vRes;};
typedef int PMResultCode;
typedef UInt16 PMScalingAlignment;
typedef struct OpaquePMServer *PMServer;
typedef void (__fastcall *PMSheetDoneProcPtr)(PMPrintSession printSession, WindowRef documentWindow, Boolean accepted);
typedef PMSheetDoneProcPtr PMSheetDoneUPP;
typedef UInt32 PMTag;
struct PMgrQueueElement {struct PMgrQueueElement *pmQLink;__int16 pmQType;__int16 pmFlags;int pmNotifyBits;PMgrStateChangeUPP pmProc;int pmUser;};
typedef void (__fastcall *PMgrStateChangeProcPtr)(PMgrQueueElement *theElement, int stateBits);
typedef PMgrStateChangeProcPtr PMgrStateChangeUPP;
struct PPPMRULimits {UInt32 mruSize;UInt32 upperMRULimit;UInt32 lowerMRULimit;};
typedef UInt16 PSInjectionPlacement;
typedef SInt32 PSInjectionSection;
typedef SInt32 PSInjectionSubsection;
struct PageInformation {AreaID area;ItemCount count;PageStateInformation information[1];};
typedef PageInformation *PageInformationPtr;
typedef __int16 PageState;
typedef UInt32 PageStateInformation;
struct Palette {__int16 pmEntries;__int16 pmDataFields[7];ColorInfo pmInfo[1];};
typedef PalettePtr *PaletteHandle;
typedef Palette *PalettePtr;
union ParamBlockRec {IOParam ioParam;FileParam fileParam;VolumeParam volumeParam;CntrlParam cntrlParam;SlotDevParam slotDevParam;MultiDevParam multiDevParam;};
typedef UInt32 ParityOptionValues;
typedef ParamBlockRec *ParmBlkPtr;
struct Partition {UInt16 pmSig;UInt16 pmSigPad;UInt32 pmMapBlkCnt;UInt32 pmPyPartStart;UInt32 pmPartBlkCnt;UInt8 pmPartName[32];UInt8 pmParType[32];UInt32 pmLgDataStart;UInt32 pmDataCnt;UInt32 pmPartStatus;UInt32 pmLgBootStart;UInt32 pmBootSize;UInt32 pmBootAddr;UInt32 pmBootAddr2;UInt32 pmBootEntry;UInt32 pmBootEntry2;UInt32 pmBootCksum;UInt8 pmProcessor[16];UInt16 pmPad[188];};
typedef PatPtr *PatHandle;
typedef Pattern *PatPtr;
struct Pattern {UInt8 pat[8];};
struct PenState {Point pnLoc;Point pnSize;__int16 pnMode;Pattern pnPat;};
struct PhonemeDescriptor {__int16 phonemeCount;PhonemeInfo thePhonemes[1];};
struct PhonemeInfo {__int16 opcode;Str15 phStr;Str31 exampleStr;__int16 hiliteStart;__int16 hiliteEnd;};
typedef void *PhysicalAddress;
struct PhysicalAddressRange {PhysicalAddress address;ByteCount count;};
typedef PhysicalAddressRange *PhysicalAddressRangePtr;
typedef UInt32 PhysicalKeyboardLayoutType;
typedef PhysicalAddress *PhysicalMappingTablePtr;
typedef PicPtr *PicHandle;
typedef Picture *PicPtr;
typedef struct OpaquePicker *Picker;
struct PickerMenuItemInfo {__int16 editMenuID;__int16 cutItem;__int16 copyItem;__int16 pasteItem;__int16 clearItem;__int16 undoItem;};
struct PictInfo {__int16 version;int uniqueColors;PaletteHandle thePalette;CTabHandle theColorTable;Fixed hRes;Fixed vRes;__int16 depth;Rect sourceRect;int textCount;int lineCount;int rectCount;int rRectCount;int ovalCount;int arcCount;int polyCount;int regionCount;int bitMapCount;int pixMapCount;int commentCount;int uniqueComments;CommentSpecHandle commentHandle;int uniqueFonts;FontSpecHandle fontHandle;Handle fontNamesHandle;int reserved1;int reserved2;};
typedef PictInfoPtr *PictInfoHandle;
typedef int PictInfoID;
typedef PictInfo *PictInfoPtr;
struct Picture {__int16 picSize;Rect picFrame;};
struct PixMap {Ptr baseAddr;__int16 rowBytes;Rect bounds;__int16 pmVersion;__int16 packType;int packSize;Fixed hRes;Fixed vRes;__int16 pixelType;__int16 pixelSize;__int16 cmpCount;__int16 cmpSize;OSType pixelFormat;CTabHandle pmTable;void *pmExt;};
typedef PixMapPtr *PixMapHandle;
typedef PixMap *PixMapPtr;
struct PixPat {__int16 patType;PixMapHandle patMap;Handle patData;Handle patXData;__int16 patXValid;Handle patXMap;Pattern pat1Data;};
typedef PixPatPtr *PixPatHandle;
typedef PixPat *PixPatPtr;
typedef SInt8 PixelType;
typedef UInt32 PlotIconRefFlags;
struct Point {__int16 v;__int16 h;};
typedef Point *PointPtr;
typedef PolyPtr *PolyHandle;
typedef MacPolygon *PolyPtr;
typedef MacPolygon Polygon;
typedef OSStatus (__fastcall *PowerHandlerProcPtr)(UInt32 message, void *param, UInt32 refCon, RegEntryID *regEntryID);
typedef PowerHandlerProcPtr PowerHandlerUPP;
typedef UInt32 PowerLevel;
typedef SInt16 PowerSourceID;
struct PowerSourceParamBlock {PowerSourceID sourceID;UInt16 sourceCapacityUsage;UInt32 sourceVersion;OptionBits sourceAttr;OptionBits sourceState;UInt32 currentCapacity;UInt32 maxCapacity;UInt32 timeRemaining;UInt32 timeToFullCharge;UInt32 voltage;SInt32 current;UInt32 lowWarnLevel;UInt32 deadWarnLevel;UInt32 reserved[16];};
typedef PowerSourceParamBlock *PowerSourceParamBlockPtr;
struct PowerSummary {UInt32 version;OptionBits flags;UInt32 sleepPowerAvailable;UInt32 sleepPowerNeeded;UInt32 minimumWakeTime;ItemCount deviceCount;DevicePowerInfo devices[1];};
struct PrinterFontStatus {SInt32 oResult;SInt16 iFondID;Style iStyle;};
struct PrinterScalingStatus {Point oScalingFactors;};
typedef SInt32 PrinterStatusOpcode;
typedef ProcPtr *ProcHandle;
typedef unsigned int ProcInfoType;
typedef int (__fastcall *ProcPtr)();
struct ProcessInfoExtendedRec {unsigned int processInfoLength;StringPtr processName;ProcessSerialNumber processNumber;unsigned int processType;OSType processSignature;unsigned int processMode;Ptr processLocation;unsigned int processSize;unsigned int processFreeMem;ProcessSerialNumber processLauncher;unsigned int processLaunchDate;unsigned int processActiveTime;FSSpecPtr processAppSpec;unsigned int processTempMemTotal;unsigned int processPurgeableTempMemTotal;};
typedef ProcessInfoExtendedRec *ProcessInfoExtendedRecPtr;
struct ProcessInfoRec {unsigned int processInfoLength;StringPtr processName;ProcessSerialNumber processNumber;unsigned int processType;OSType processSignature;unsigned int processMode;Ptr processLocation;unsigned int processSize;unsigned int processFreeMem;ProcessSerialNumber processLauncher;unsigned int processLaunchDate;unsigned int processActiveTime;FSSpecPtr processAppSpec;};
typedef ProcessInfoRec *ProcessInfoRecPtr;
struct ProcessSerialNumber {unsigned int highLongOfPSN;unsigned int lowLongOfPSN;};
typedef ProcessSerialNumber *ProcessSerialNumberPtr;
typedef UInt32 ProcessorCacheMode;
struct ProgressTrackInfo {UInt8 phase;};
struct PromiseHFSFlavor {OSType fileType;OSType fileCreator;UInt16 fdFlags;FlavorType promisedFlavor;};
typedef UInt16 PropCharProperties;
struct PropLookupSegment {UInt16 lastGlyph;UInt16 firstGlyph;UInt16 value;};
struct PropLookupSingle {UInt16 glyph;PropCharProperties props;};
struct PropTable {Fixed version;UInt16 format;PropCharProperties defaultProps;SFNTLookupTable lookup;};
typedef OSType PropertyCreator;
typedef OSType PropertyTag;
typedef void *ProviderRef;
typedef char *Ptr;
typedef void (__fastcall *PurgeProcPtr)(Handle blockToPurge);
typedef PurgeProcPtr PurgeUPP;
typedef void (__fastcall *QDArcProcPtr)(GrafVerb verb, const Rect *r, __int16 startAngle, __int16 arcAngle);
typedef QDArcProcPtr QDArcUPP;
typedef void (__fastcall *QDBitsProcPtr)(const BitMap *srcBits, const Rect *srcRect, const Rect *dstRect, __int16 mode, RgnHandle maskRgn);
typedef QDBitsProcPtr QDBitsUPP;
typedef SignedByte QDByte;
typedef void (__fastcall *QDCommentProcPtr)(__int16 kind, __int16 dataSize, Handle dataHandle);
typedef QDCommentProcPtr QDCommentUPP;
typedef __int16 QDErr;
typedef void (__fastcall *QDGetPicProcPtr)(void *dataPtr, __int16 byteCount);
typedef QDGetPicProcPtr QDGetPicUPP;
typedef QDPtr *QDHandle;
typedef void (__fastcall *QDJShieldCursorProcPtr)(__int16 left, __int16 top, __int16 right, __int16 bottom);
typedef QDJShieldCursorProcPtr QDJShieldCursorUPP;
typedef void (__fastcall *QDLineProcPtr)(Point newPt);
typedef QDLineProcPtr QDLineUPP;
typedef void (__fastcall *QDOpcodeProcPtr)(const Rect *fromRect, const Rect *toRect, UInt16 opcode, SInt16 version);
typedef QDOpcodeProcPtr QDOpcodeUPP;
typedef void (__fastcall *QDOvalProcPtr)(GrafVerb verb, const Rect *r);
typedef QDOvalProcPtr QDOvalUPP;
typedef struct QDPict *QDPictRef;
typedef void (__fastcall *QDPolyProcPtr)(GrafVerb verb, PolyHandle poly);
typedef QDPolyProcPtr QDPolyUPP;
typedef OSStatus (__fastcall *QDPrinterStatusProcPtr)(PrinterStatusOpcode opcode, CGrafPtr currentPort, void *printerStatus);
typedef QDPrinterStatusProcPtr QDPrinterStatusUPP;
struct QDProcs {QDTextUPP textProc;QDLineUPP lineProc;QDRectUPP rectProc;QDRRectUPP rRectProc;QDOvalUPP ovalProc;QDArcUPP arcProc;QDPolyUPP polyProc;QDRgnUPP rgnProc;QDBitsUPP bitsProc;QDCommentUPP commentProc;QDTxMeasUPP txMeasProc;QDGetPicUPP getPicProc;QDPutPicUPP putPicProc;};
typedef QDProcs *QDProcsPtr;
typedef QDByte *QDPtr;
typedef void (__fastcall *QDPutPicProcPtr)(const void *dataPtr, __int16 byteCount);
typedef QDPutPicProcPtr QDPutPicUPP;
typedef void (__fastcall *QDRRectProcPtr)(GrafVerb verb, const Rect *r, __int16 ovalWidth, __int16 ovalHeight);
typedef QDRRectProcPtr QDRRectUPP;
typedef void (__fastcall *QDRectProcPtr)(GrafVerb verb, const Rect *r);
typedef QDRectProcPtr QDRectUPP;
typedef struct OpaqueQDRegionBitsRef *QDRegionBitsRef;
typedef SInt32 QDRegionParseDirection;
typedef void (__fastcall *QDRgnProcPtr)(GrafVerb verb, RgnHandle rgn);
typedef QDRgnProcPtr QDRgnUPP;
typedef OSStatus (__fastcall *QDStdGlyphsProcPtr)(void *dataStream, ByteCount size);
typedef QDStdGlyphsProcPtr QDStdGlyphsUPP;
typedef void (__fastcall *QDTextProcPtr)(__int16 byteCount, const void *textBuf, Point numer, Point denom);
typedef QDTextProcPtr QDTextUPP;
typedef __int16 (__fastcall *QDTxMeasProcPtr)(__int16 byteCount, const void *textAddr, Point *numer, Point *denom, FontInfo *info);
typedef QDTxMeasProcPtr QDTxMeasUPP;
struct QElem {struct QElem *qLink;__int16 qType;__int16 qData[1];};
typedef QElem *QElemPtr;
struct QHdr {volatile __int16 qFlags;volatile QElemPtr qHead;volatile QElemPtr qTail;};
typedef QHdr *QHdrPtr;
typedef SignedByte QTypes;
typedef UInt8 RDFlagsType;
struct RGBColor {unsigned __int16 red;unsigned __int16 green;unsigned __int16 blue;};
typedef RGBColorPtr *RGBColorHdl;
typedef RGBColor *RGBColorPtr;
typedef SInt8 RTAType;
typedef unsigned __int8 RawSenseCode;
typedef OSErr (__fastcall *RecordColorsProcPtr)(UInt32 dataRef, RGBColor *colorsArray, SInt32 colorCount, SInt32 *uniqueColors);
typedef RecordColorsProcPtr RecordColorsUPP;
struct Rect {__int16 top;__int16 left;__int16 bottom;__int16 right;};
typedef Rect *RectPtr;
typedef Boolean (__fastcall *RedrawBackgroundProcPtr)(ATSUTextLayout iLayout, UniCharArrayOffset iTextOffset, UniCharCount iTextLength, ATSTrapezoid iUnhighlightArea[], ItemCount iTrapezoidCount);
typedef RedrawBackgroundProcPtr RedrawBackgroundUPP;
typedef char RegCStrEntryName;
typedef char RegCStrEntryNameBuf[48];
typedef char *RegCStrEntryNamePtr;
typedef char RegCStrPathName;
struct RegEntryID {unsigned __int16 es_ver;unsigned __int16 es_gen;DeviceNodePtr es_devid;unsigned int es_spare1;unsigned int es_spare2;};
typedef RegEntryID *RegEntryIDPtr;
typedef struct OpaqueRegEntryIter *RegEntryIter;
typedef RegIterationOp RegEntryIterationOp;
typedef RegModifiers RegEntryModifiers;
typedef RegEntryID RegEntryRef;
typedef UInt32 RegIterationOp;
typedef UInt32 RegModifiers;
typedef UInt32 RegPathNameSize;
typedef struct OpaqueRegPropertyIter *RegPropertyIter;
typedef RegModifiers RegPropertyModifiers;
typedef char RegPropertyName;
typedef char RegPropertyNameBuf[32];
typedef char *RegPropertyNamePtr;
typedef void *RegPropertyValue;
typedef UInt32 RegPropertyValueSize;
typedef SInt16 RegionCode;
typedef OSStatus (__fastcall *RegionToRectsProcPtr)(UInt16 message, RgnHandle rgn, const Rect *rect, void *refCon);
typedef RegionToRectsProcPtr RegionToRectsUPP;
typedef void (__fastcall *Register68kProcPtr)();
typedef RegisterInformationPowerPC RegisterInformation;
struct RegisterInformationPowerPC {UnsignedWide R0;UnsignedWide R1;UnsignedWide R2;UnsignedWide R3;UnsignedWide R4;UnsignedWide R5;UnsignedWide R6;UnsignedWide R7;UnsignedWide R8;UnsignedWide R9;UnsignedWide R10;UnsignedWide R11;UnsignedWide R12;UnsignedWide R13;UnsignedWide R14;UnsignedWide R15;UnsignedWide R16;UnsignedWide R17;UnsignedWide R18;UnsignedWide R19;UnsignedWide R20;UnsignedWide R21;UnsignedWide R22;UnsignedWide R23;UnsignedWide R24;UnsignedWide R25;UnsignedWide R26;UnsignedWide R27;UnsignedWide R28;UnsignedWide R29;UnsignedWide R30;UnsignedWide R31;};
struct RegisteredComponentInstanceRecord {int data[1];};
typedef RegisteredComponentInstanceRecord *RegisteredComponentInstanceRecordPtr;
struct RegisteredComponentRecord {int data[1];};
typedef RegisteredComponentRecord *RegisteredComponentRecordPtr;
struct ReqListRec {__int16 reqLSize;__int16 reqLData[1];};
typedef __int16 ResAttributes;
typedef void (__fastcall *ResErrProcPtr)(OSErr thErr);
typedef ResErrProcPtr ResErrUPP;
typedef __int16 ResFileAttributes;
typedef __int16 ResFileRefNum;
typedef __int16 ResID;
typedef FourCharCode ResType;
typedef ResType *ResTypePtr;
typedef OSErr (__fastcall *ResourceEndianFilterPtr)(Handle theResource, Boolean currentlyNativeEndian);
struct ResourceSpec {OSType resType;__int16 resID;};
typedef struct OpaqueRgnHandle *RgnHandle;
struct RoutineDescriptor {UInt16 goMixedModeTrap;SInt8 version;RDFlagsType routineDescriptorFlags;UInt32 reserved1;UInt8 reserved2;UInt8 selectorInfo;UInt16 routineCount;RoutineRecord routineRecords[1];};
typedef RoutineDescriptorPtr *RoutineDescriptorHandle;
typedef RoutineDescriptor *RoutineDescriptorPtr;
typedef unsigned __int16 RoutineFlagsType;
struct RoutineRecord {ProcInfoType procInfo;SInt8 reserved1;ISAType ISA;RoutineFlagsType routineFlags;ProcPtr procDescriptor;UInt32 reserved2;UInt32 selector;};
typedef RoutineRecordPtr *RoutineRecordHandle;
typedef RoutineRecord *RoutineRecordPtr;
typedef UInt32 RoutingFlags;
struct RoutingResourceEntry {OSType creator;OSType fileType;OSType targetFolder;OSType destinationFolder;OSType reservedField;};
typedef RoutingResourcePtr *RoutingResourceHandle;
typedef RoutingResourceEntry *RoutingResourcePtr;
typedef SInt16 RsrcChainLocation;
struct RuleBasedTrslRecord {__int16 sourceType;__int16 targetType;__int16 formatNumber;__int16 propertyFlag;__int16 numberOfRules;};
struct SCSIAbortCommandPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;SCSI_IO *scsiIOptr;};
struct SCSIBusInquiryPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;UInt16 scsiEngineCount;UInt16 scsiMaxTransferType;UInt32 scsiDataTypes;UInt16 scsiIOpbSize;UInt16 scsiMaxIOpbSize;UInt32 scsiFeatureFlags;UInt8 scsiVersionNumber;UInt8 scsiHBAInquiry;UInt8 scsiTargetModeFlags;UInt8 scsiScanFlags;UInt32 scsiSIMPrivatesPtr;UInt32 scsiSIMPrivatesSize;UInt32 scsiAsyncFlags;UInt8 scsiHiBusID;UInt8 scsiInitiatorID;UInt16 scsiBIReserved0;UInt32 scsiBIReserved1;UInt32 scsiFlagsSupported;UInt16 scsiIOFlagsSupported;UInt16 scsiWeirdStuff;UInt16 scsiMaxTarget;UInt16 scsiMaxLUN;char scsiSIMVendor[16];char scsiHBAVendor[16];char scsiControllerFamily[16];char scsiControllerType[16];char scsiXPTversion[4];char scsiSIMversion[4];char scsiHBAversion[4];UInt8 scsiHBAslotType;UInt8 scsiHBAslotNumber;UInt16 scsiSIMsRsrcID;UInt16 scsiBIReserved3;UInt16 scsiAdditionalLength;};
typedef void (__fastcall *SCSICallbackProcPtr)(void *scsiPB);
typedef SCSICallbackProcPtr SCSICallbackUPP;
struct SCSIDriverPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;Ptr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;__int16 scsiDriver;UInt16 scsiDriverFlags;DeviceIdent scsiNextDevice;};
typedef SCSI_IO SCSIExecIOPB;
struct SCSIGetVirtualIDInfoPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;Ptr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;UInt16 scsiOldCallID;Boolean scsiExists;SInt8 filler;};
struct SCSIHdr {struct SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;};
struct SCSIInstr {unsigned __int16 scOpcode;int scParam1;int scParam2;};
struct SCSILoadDriverPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;Ptr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;__int16 scsiLoadedRefNum;Boolean scsiDiskLoadFailed;SInt8 filler;};
struct SCSIReleaseQPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;};
struct SCSIResetBusPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;};
struct SCSIResetDevicePB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;};
struct SCSITerminateIOPB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;SCSI_IO *scsiIOptr;};
struct SCSI_IO {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;UInt16 scsiResultFlags;UInt16 scsiReserved3pt5;BytePtr scsiDataPtr;UInt32 scsiDataLength;BytePtr scsiSensePtr;UInt8 scsiSenseLength;UInt8 scsiCDBLength;UInt16 scsiSGListCount;UInt32 scsiReserved4;UInt8 scsiSCSIstatus;SInt8 scsiSenseResidual;UInt16 scsiReserved5;int scsiDataResidual;CDB scsiCDB;int scsiTimeout;BytePtr scsiReserved5pt5;UInt16 scsiReserved5pt6;UInt16 scsiIOFlags;UInt8 scsiTagAction;UInt8 scsiReserved6;UInt16 scsiReserved7;UInt16 scsiSelectTimeout;UInt8 scsiDataType;UInt8 scsiTransferType;UInt32 scsiReserved8;UInt32 scsiReserved9;UInt16 scsiHandshake[8];UInt32 scsiReserved10;UInt32 scsiReserved11;struct SCSI_IO *scsiCommandLink;UInt8 scsiSIMpublics[8];UInt8 scsiAppleReserved6[8];UInt16 scsiCurrentPhase;__int16 scsiSelector;OSErr scsiOldCallResult;UInt8 scsiSCSImessage;UInt8 XPTprivateFlags;UInt8 XPTextras[12];};
struct SCSI_PB {SCSIHdr *qLink;__int16 scsiReserved1;UInt16 scsiPBLength;UInt8 scsiFunctionCode;UInt8 scsiReserved2;volatile OSErr scsiResult;DeviceIdent scsiDevice;SCSICallbackUPP scsiCompletion;UInt32 scsiFlags;BytePtr scsiDriverStorage;Ptr scsiXPTprivate;int scsiReserved3;};
struct SCStatus {UnsignedFixed scStartTime;UnsignedFixed scEndTime;UnsignedFixed scCurrentTime;Boolean scChannelBusy;Boolean scChannelDisposed;Boolean scChannelPaused;Boolean scUnused;unsigned int scChannelAttributes;int scCPULoad;};
typedef SCStatus *SCStatusPtr;
struct SFNTLookupArrayHeader {SFNTLookupValue lookupValues[1];};
struct SFNTLookupBinarySearchHeader {UInt16 unitSize;UInt16 nUnits;UInt16 searchRange;UInt16 entrySelector;UInt16 rangeShift;};
union SFNTLookupFormatSpecificHeader {SFNTLookupArrayHeader theArray;SFNTLookupSegmentHeader segment;SFNTLookupSingleHeader single;SFNTLookupTrimmedArrayHeader trimmedArray;};
typedef UInt32 SFNTLookupKind;
typedef UInt16 SFNTLookupOffset;
struct SFNTLookupSegment {UInt16 lastGlyph;UInt16 firstGlyph;UInt16 value[1];};
struct SFNTLookupSegmentHeader {SFNTLookupBinarySearchHeader binSearch;SFNTLookupSegment segments[1];};
struct SFNTLookupSingle {UInt16 glyph;UInt16 value[1];};
struct SFNTLookupSingleHeader {SFNTLookupBinarySearchHeader binSearch;SFNTLookupSingle entries[1];};
struct SFNTLookupTable {SFNTLookupTableFormat format;SFNTLookupFormatSpecificHeader fsHeader;};
typedef UInt16 SFNTLookupTableFormat;
typedef SFNTLookupTablePtr *SFNTLookupTableHandle;
typedef SFNTLookupTable *SFNTLookupTablePtr;
struct SFNTLookupTrimmedArrayHeader {UInt16 firstGlyph;UInt16 count;SFNTLookupValue valueArray[1];};
typedef UInt16 SFNTLookupValue;
struct SGRecord {Ptr SGAddr;UInt32 SGCount;};
typedef void (__fastcall *SICCompletionProcPtr)(SndInputCmpParamPtr SICParmPtr);
typedef void (__fastcall *SICompletionProcPtr)(SPBPtr inParamPtr);
typedef SICompletionProcPtr SICompletionUPP;
typedef void (__fastcall *SIInterruptProcPtr)(SPBPtr inParamPtr, Ptr dataBuffer, __int16 peakAmplitude, int sampleSize);
typedef SIInterruptProcPtr SIInterruptUPP;
typedef signed __int16 SInt16;
typedef signed int SInt32;
typedef signed __int64 SInt64;
typedef signed __int8 SInt8;
struct SMStatus {__int16 smMaxCPULoad;__int16 smNumChannels;__int16 smCurCPULoad;};
typedef SMStatus *SMStatusPtr;
struct SPB {int inRefNum;unsigned int count;unsigned int milliseconds;unsigned int bufferLength;Ptr bufferPtr;SICompletionUPP completionRoutine;SIInterruptUPP interruptRoutine;int userLong;OSErr error;int unused1;};
typedef SPB *SPBPtr;
typedef SProcPtr *SProcHndl;
typedef SProcRec *SProcPtr;
struct SProcRec {Handle nxtSrch;ColorSearchUPP srchProc;};
struct SRCallBackParam {SRCallBackUPP callBack;int refCon;};
typedef void (__fastcall *SRCallBackProcPtr)(SRCallBackStruct *param);
struct SRCallBackStruct {int what;int message;SRRecognizer instance;OSErr status;__int16 flags;int refCon;};
typedef SRCallBackProcPtr SRCallBackUPP;
typedef SRLanguageObject SRLanguageModel;
typedef SRSpeechObject SRLanguageObject;
typedef SRLanguageObject SRPath;
typedef SRLanguageObject SRPhrase;
typedef SRSpeechSource SRRecognitionResult;
typedef SRSpeechObject SRRecognitionSystem;
typedef SRSpeechObject SRRecognizer;
typedef unsigned __int16 SRRejectionLevel;
typedef struct OpaqueSRSpeechObject *SRSpeechObject;
typedef SRSpeechObject SRSpeechSource;
typedef unsigned __int16 SRSpeedSetting;
typedef SRLanguageObject SRWord;
typedef UInt8 STClass;
struct STClassTable {UInt16 firstGlyph;UInt16 nGlyphs;STClass classes[1];};
struct STElement {__int16 stCount;__int16 stHeight;__int16 stAscent;__int16 stFont;StyleField stFace;__int16 stSize;RGBColor stColor;};
typedef UInt8 STEntryIndex;
struct STEntryOne {UInt16 newState;UInt16 flags;UInt16 offset1;};
struct STEntryTwo {UInt16 newState;UInt16 flags;UInt16 offset1;UInt16 offset2;};
struct STEntryZero {UInt16 newState;UInt16 flags;};
typedef STPtr *STHandle;
struct STHeader {UInt8 filler;STClass nClasses;UInt16 classTableOffset;UInt16 stateArrayOffset;UInt16 entryTableOffset;};
typedef STElement *STPtr;
typedef UInt16 STXClass;
typedef SFNTLookupTable STXClassTable;
typedef UInt16 STXEntryIndex;
struct STXEntryOne {STXStateIndex newState;UInt16 flags;UInt16 index1;};
struct STXEntryTwo {STXStateIndex newState;UInt16 flags;UInt16 index1;UInt16 index2;};
struct STXEntryZero {STXStateIndex newState;UInt16 flags;};
struct STXHeader {UInt32 nClasses;UInt32 classTableOffset;UInt32 stateArrayOffset;UInt32 entryTableOffset;};
typedef UInt16 STXStateIndex;
struct ScheduledSoundHeader {SoundHeaderUnion u;int flags;__int16 reserved;__int16 callBackParam1;int callBackParam2;TimeRecord startTime;};
typedef ScheduledSoundHeader *ScheduledSoundHeaderPtr;
struct SchedulerInfoRec {UInt32 InfoRecSize;ThreadID CurrentThreadID;ThreadID SuggestedThreadID;ThreadID InterruptedCoopThreadID;};
typedef SchedulerInfoRec *SchedulerInfoRecPtr;
typedef UInt32 ScrapFlavorFlags;
struct ScrapFlavorInfo {ScrapFlavorType flavorType;ScrapFlavorFlags flavorFlags;};
typedef FourCharCode ScrapFlavorType;
typedef OSStatus (__fastcall *ScrapPromiseKeeperProcPtr)(ScrapRef scrap, ScrapFlavorType flavorType, void *userData);
typedef ScrapPromiseKeeperProcPtr ScrapPromiseKeeperUPP;
typedef struct OpaqueScrapRef *ScrapRef;
struct ScrapTranslationList {unsigned int modDate;unsigned int groupCount;};
typedef ScrapTranslationListPtr *ScrapTranslationListHandle;
typedef ScrapTranslationList *ScrapTranslationListPtr;
typedef ResType ScrapType;
struct ScrapTypeSpec {ScrapType format;int hint;};
typedef SInt16 ScriptCode;
struct ScriptCodeRun {ByteOffset offset;ScriptCode script;};
typedef ScriptCodeRun *ScriptCodeRunPtr;
struct ScriptLanguageRecord {ScriptCode fScript;LangCode fLanguage;};
struct ScriptLanguageSupport {__int16 fScriptLanguageCount;ScriptLanguageRecord fScriptLanguageArray[1];};
typedef ScriptLanguageSupportPtr *ScriptLanguageSupportHandle;
typedef ScriptLanguageSupport *ScriptLanguageSupportPtr;
struct ScriptRunStatus {SInt8 script;SInt8 runVariant;};
typedef __int16 ScriptTokenType;
typedef OSType ScriptingComponentSelector;
struct ScrollBarTrackInfo {SInt32 viewsize;ThemeTrackPressState pressState;};
typedef UInt32 ScrollWindowOptions;
struct ScrpSTElement {int scrpStartChar;__int16 scrpHeight;__int16 scrpAscent;__int16 scrpFont;StyleField scrpFace;__int16 scrpSize;RGBColor scrpColor;};
typedef ScrpSTElement ScrpSTTable[1601];
typedef OSType SecKeychainAttrType;
struct SecKeychainAttribute {SecKeychainAttrType tag;UInt32 length;void *data;};
struct SecKeychainAttributeList {UInt32 count;SecKeychainAttribute *attr;};
typedef SecKeychainAttribute *SecKeychainAttributePtr;
typedef struct OpaqueSecKeychainItemRef *SecKeychainItemRef;
typedef struct OpaqueSecKeychainRef *SecKeychainRef;
typedef struct OpaqueSecKeychainSearchRef *SecKeychainSearchRef;
typedef UInt32 SecKeychainStatus;
typedef OSStatus (__fastcall *SecondaryInterruptHandler2)(void *p1, void *p2);
typedef OSErr (__fastcall *SelectorFunctionProcPtr)(OSType selector, int *response);
typedef SelectorFunctionProcPtr SelectorFunctionUPP;
typedef CMError (__fastcall *SetIndImageProfileProcPtr)(const FSSpec *specFrom, const FSSpec *specInto, UInt32 index, CMProfileRef prof, UInt32 embedFlags);
struct SetupWindowProxyDragImageRec {GWorldPtr imageGWorld;RgnHandle imageRgn;RgnHandle outlineRgn;};
typedef OSStatus (__fastcall *ShimEntryPoint)(Ptr paramBlock, Ptr refcon);
typedef __int16 ShortFixed;
typedef ShortFixed *ShortFixedPtr;
typedef SInt8 SignedByte;
typedef int Size;
struct SizeResourceRec {unsigned __int16 flags;unsigned int preferredHeapSize;unsigned int minimumHeapSize;};
typedef SizeResourceRecPtr *SizeResourceRecHandle;
typedef SizeResourceRec *SizeResourceRecPtr;
typedef int (__fastcall *SleepQProcPtr)(int message, SleepQRecPtr qRecPtr);
struct SleepQRec {SleepQRecPtr sleepQLink;__int16 sleepQType;SleepQUPP sleepQProc;__int16 sleepQFlags;};
typedef SleepQRec *SleepQRecPtr;
typedef SleepQProcPtr SleepQUPP;
struct SliderTrackInfo {ThemeThumbDirection thumbDir;ThemeTrackPressState pressState;};
struct SlotDevParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioSRefNum;SInt8 ioSVersNum;SInt8 ioSPermssn;Ptr ioSMix;__int16 ioSFlags;SInt8 ioSlot;SInt8 ioID;};
typedef SlotDevParam *SlotDevParamPtr;
typedef unsigned __int16 SmallFract;
typedef Snd2ListPtr *Snd2ListHandle;
typedef Snd2ListHandle Snd2ListHndl;
typedef Snd2ListResource *Snd2ListPtr;
struct Snd2ListResource {__int16 format;__int16 refCount;__int16 numCommands;SndCommand commandPart[1];UInt8 dataPart[1];};
typedef void (__fastcall *SndCallBackProcPtr)(SndChannelPtr chan, SndCommand *cmd);
typedef SndCallBackProcPtr SndCallBackUPP;
struct SndChannel {SndChannelPtr nextChan;Ptr firstMod;SndCallBackUPP callBack;int userInfo;int wait;SndCommand cmdInProgress;__int16 flags;__int16 qLength;__int16 qHead;__int16 qTail;SndCommand queue[128];};
typedef SndChannel *SndChannelPtr;
struct SndCommand {unsigned __int16 cmd;__int16 param1;int param2;};
struct SndInputCmpParam {SICCompletionProcPtr ioCompletion;SIInterruptProcPtr ioInterrupt;OSErr ioResult;__int16 pad;unsigned int ioReqCount;unsigned int ioActCount;Ptr ioBuffer;Ptr ioMisc;};
typedef SndInputCmpParam *SndInputCmpParamPtr;
typedef SndListPtr *SndListHandle;
typedef SndListHandle SndListHndl;
typedef SndListResource *SndListPtr;
struct SndListResource {__int16 format;__int16 numModifiers;ModRef modifierPart[1];__int16 numCommands;SndCommand commandPart[1];UInt8 dataPart[1];};
typedef void (__fastcall *SoftwareInterruptHandler)(void *p1, void *p2);
typedef struct OpaqueSoftwareInterruptID *SoftwareInterruptID;
struct SoundAudioCodecPropertyRequestParams {UInt32 propertyClass;UInt32 propertyID;UInt32 propertyDataSize;void *propertyData;UInt32 propertyRequestFlags;UInt32 propertyDataType;ComponentResult propertyRequestResult;};
struct SoundComponentData {int flags;OSType format;__int16 numChannels;__int16 sampleSize;UnsignedFixed sampleRate;int sampleCount;Byte *buffer;int reserved;};
typedef SoundComponentData *SoundComponentDataPtr;
struct SoundComponentLink {ComponentDescription description;SoundSource mixerID;SoundSource *linkID;};
typedef SoundComponentLink *SoundComponentLinkPtr;
typedef struct OpaqueSoundConverter *SoundConverter;
typedef Boolean (__fastcall *SoundConverterFillBufferDataProcPtr)(SoundComponentDataPtr *data, void *refCon);
typedef SoundConverterFillBufferDataProcPtr SoundConverterFillBufferDataUPP;
struct SoundDataChunk {ID ckID;int ckSize;unsigned int offset;unsigned int blockSize;};
typedef SoundDataChunk *SoundDataChunkPtr;
struct SoundHeader {Ptr samplePtr;unsigned int length;UnsignedFixed sampleRate;unsigned int loopStart;unsigned int loopEnd;UInt8 encode;UInt8 baseFrequency;UInt8 sampleArea[1];};
typedef SoundHeader *SoundHeaderPtr;
union SoundHeaderUnion {SoundHeader stdHeader;CmpSoundHeader cmpHeader;ExtSoundHeader extHeader;};
struct SoundInfoList {__int16 count;Handle infoHandle;};
typedef SoundInfoList *SoundInfoListPtr;
typedef SInt8 SoundMixerByte;
struct SoundParamBlock {int recordSize;SoundComponentData desc;UnsignedFixed rateMultiplier;__int16 leftVolume;__int16 rightVolume;int quality;ComponentInstance filter;SoundParamUPP moreRtn;SoundParamUPP completionRtn;int refCon;__int16 result;};
typedef SoundParamBlock *SoundParamBlockPtr;
typedef Boolean (__fastcall *SoundParamProcPtr)(SoundParamBlockPtr *pb);
typedef SoundParamProcPtr SoundParamUPP;
typedef void (__fastcall *SoundProcPtr)(SInt16 soundNumber);
typedef SoundSlopeAndInterceptRecord *SoundSlopeAndInterceptPtr;
struct SoundSlopeAndInterceptRecord {Float64 slope;Float64 intercept;Float64 minClip;Float64 maxClip;};
typedef struct OpaqueSoundSource *SoundSource;
typedef SoundSource *SoundSourcePtr;
typedef SoundProcPtr SoundUPP;
typedef SpeechChannelRecord *SpeechChannel;
struct SpeechChannelRecord {int data[1];};
typedef void (__fastcall *SpeechDoneProcPtr)(SpeechChannel chan, int refCon);
typedef SpeechDoneProcPtr SpeechDoneUPP;
struct SpeechErrorInfo {__int16 count;OSErr oldest;int oldPos;OSErr newest;int newPos;};
typedef void (__fastcall *SpeechErrorProcPtr)(SpeechChannel chan, int refCon, OSErr theError, int bytePos);
typedef SpeechErrorProcPtr SpeechErrorUPP;
typedef void (__fastcall *SpeechPhonemeProcPtr)(SpeechChannel chan, int refCon, __int16 phonemeOpcode);
typedef SpeechPhonemeProcPtr SpeechPhonemeUPP;
struct SpeechStatusInfo {Boolean outputBusy;Boolean outputPaused;int inputBytesLeft;__int16 phonemeCode;};
typedef void (__fastcall *SpeechSyncProcPtr)(SpeechChannel chan, int refCon, OSType syncMessage);
typedef SpeechSyncProcPtr SpeechSyncUPP;
typedef void (__fastcall *SpeechTextDoneProcPtr)(SpeechChannel chan, int refCon, const void **nextBuf, unsigned int *byteLen, int *controlFlags);
typedef SpeechTextDoneProcPtr SpeechTextDoneUPP;
struct SpeechVersionInfo {OSType synthType;OSType synthSubType;OSType synthManufacturer;int synthFlags;NumVersion synthVersion;};
typedef void (__fastcall *SpeechWordProcPtr)(SpeechChannel chan, int refCon, unsigned int wordPos, unsigned __int16 wordLen);
typedef SpeechWordProcPtr SpeechWordUPP;
struct SpeechXtndData {OSType synthCreator;Byte synthData[2];};
typedef StScrpPtr *StScrpHandle;
typedef StScrpRec *StScrpPtr;
struct StScrpRec {__int16 scrpNStyles;ScrpSTTable scrpStyleTab;};
typedef SInt16 StageList;
typedef OSType StandardDropLocation;
typedef StandardIconListCellDataRec *StandardIconListCellDataPtr;
struct StandardIconListCellDataRec {Handle iconHandle;__int16 font;__int16 face;__int16 size;Str255 name;};
struct StartupTime {unsigned int startTime;Boolean startEnabled;SInt8 filler;};
struct StateBlock {__int16 stateVar[64];};
typedef StateBlock *StateBlockPtr;
struct StatementRange {unsigned int startPos;unsigned int endPos;};
typedef __int16 StatusRegisterContents;
typedef unsigned __int8 Str15[16];
typedef unsigned __int8 Str255[256];
typedef unsigned __int8 Str27[28];
typedef unsigned __int8 Str31[32];
typedef unsigned __int8 Str32[33];
typedef unsigned __int8 Str32Field[34];
typedef unsigned __int8 Str63[64];
typedef Str63 StrFileName;
typedef StringToDateStatus String2DateStatus;
typedef StringPtr *StringHandle;
typedef unsigned __int8 *StringPtr;
typedef __int16 StringToDateStatus;
typedef unsigned __int8 Style;
typedef Style StyleField;
typedef __int16 StyleParameter;
struct StyleRun {__int16 startChar;__int16 styleIndex;};
typedef Boolean (__fastcall *StyleRunDirectionProcPtr)(__int16 styleRunIndex, void *dirParam);
typedef StyleRunDirectionProcPtr StyleRunDirectionUPP;
struct StyleTable {__int16 fontClass;int offset;int reserved;char indexes[48];};
typedef SInt8 StyledLineBreakCode;
struct SysEnvRec {__int16 environsVersion;__int16 machineType;__int16 systemVersion;__int16 processor;Boolean hasFPU;Boolean hasColorQD;__int16 keyBoardType;__int16 atDrvrVersNum;__int16 sysVRefNum;};
typedef SysParmType *SysPPtr;
struct SysParmType {UInt8 valid;UInt8 aTalkA;UInt8 aTalkB;UInt8 config;__int16 portA;__int16 portB;int alarm;__int16 font;__int16 kbdPrint;__int16 volClik;__int16 misc;};
typedef UInt32 SystemSoundActionID;
typedef UInt32 SystemUIMode;
typedef OptionBits SystemUIOptions;
struct T8022Address {OTAddressType fAddrFamily;UInt8 fHWAddr[6];UInt16 fSAP;UInt8 fSNAP[5];};
struct T8022FullPacketHeader {EnetPacketHeader fEnetPart;T8022SNAPHeader f8022Part;};
struct T8022Header {UInt8 fDSAP;UInt8 fSSAP;UInt8 fCtrl;};
struct T8022SNAPHeader {UInt8 fDSAP;UInt8 fSSAP;UInt8 fCtrl;UInt8 fSNAP[5];};
struct TBind {TNetbuf addr;OTQLen qlen;};
struct TCall {TNetbuf addr;TNetbuf opt;TNetbuf udata;OTSequence sequence;};
struct TDiscon {TNetbuf udata;OTReason reason;OTSequence sequence;};
struct TECBufferContextRec {TextPtr textInputBuffer;TextPtr textInputBufferEnd;TextPtr textOutputBuffer;TextPtr textOutputBufferEnd;TextEncodingRunPtr encodingInputBuffer;TextEncodingRunPtr encodingInputBufferEnd;TextEncodingRunPtr encodingOutputBuffer;TextEncodingRunPtr encodingOutputBufferEnd;};
struct TECConversionInfo {TextEncoding sourceEncoding;TextEncoding destinationEncoding;UInt16 reserved1;UInt16 reserved2;};
struct TECConverterContextRec {Ptr pluginRec;TextEncoding sourceEncoding;TextEncoding destEncoding;UInt32 reserved1;UInt32 reserved2;TECBufferContextRec bufferContext;UInt32 contextRefCon;ProcPtr conversionProc;ProcPtr flushProc;ProcPtr clearContextInfoProc;UInt32 options1;UInt32 options2;TECPluginStateRec pluginState;};
struct TECInfo {UInt16 format;UInt16 tecVersion;UInt32 tecTextConverterFeatures;UInt32 tecUnicodeConverterFeatures;UInt32 tecTextCommonFeatures;Str31 tecTextEncodingsFolderName;Str31 tecExtensionFileName;UInt16 tecLowestTEFileVersion;UInt16 tecHighestTEFileVersion;};
typedef TECInfoPtr *TECInfoHandle;
typedef TECInfo *TECInfoPtr;
typedef struct OpaqueTECObjectRef *TECObjectRef;
typedef OSStatus (__fastcall *TECPluginClearContextInfoPtr)(TECObjectRef encodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus (__fastcall *TECPluginClearSnifferContextInfoPtr)(TECSnifferObjectRef encodingSniffer, TECSnifferContextRec *snifContext);
typedef OSStatus (__fastcall *TECPluginConvertTextEncodingPtr)(TECObjectRef encodingConverter, TECConverterContextRec *plugContext);
struct TECPluginDispatchTable {TECPluginVersion version;TECPluginVersion compatibleVersion;TECPluginSignature PluginID;TECPluginNewEncodingConverterPtr PluginNewEncodingConverter;TECPluginClearContextInfoPtr PluginClearContextInfo;TECPluginConvertTextEncodingPtr PluginConvertTextEncoding;TECPluginFlushConversionPtr PluginFlushConversion;TECPluginDisposeEncodingConverterPtr PluginDisposeEncodingConverter;TECPluginNewEncodingSnifferPtr PluginNewEncodingSniffer;TECPluginClearSnifferContextInfoPtr PluginClearSnifferContextInfo;TECPluginSniffTextEncodingPtr PluginSniffTextEncoding;TECPluginDisposeEncodingSnifferPtr PluginDisposeEncodingSniffer;TECPluginGetCountAvailableTextEncodingsPtr PluginGetCountAvailableTextEncodings;TECPluginGetCountAvailableTextEncodingPairsPtr PluginGetCountAvailableTextEncodingPairs;TECPluginGetCountDestinationTextEncodingsPtr PluginGetCountDestinationTextEncodings;TECPluginGetCountSubTextEncodingsPtr PluginGetCountSubTextEncodings;TECPluginGetCountAvailableSniffersPtr PluginGetCountAvailableSniffers;TECPluginGetCountWebEncodingsPtr PluginGetCountWebTextEncodings;TECPluginGetCountMailEncodingsPtr PluginGetCountMailTextEncodings;TECPluginGetTextEncodingInternetNamePtr PluginGetTextEncodingInternetName;TECPluginGetTextEncodingFromInternetNamePtr PluginGetTextEncodingFromInternetName;};
typedef OSStatus (__fastcall *TECPluginDisposeEncodingConverterPtr)(TECObjectRef newEncodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus (__fastcall *TECPluginDisposeEncodingSnifferPtr)(TECSnifferObjectRef encodingSniffer, TECSnifferContextRec *snifContext);
typedef OSStatus (__fastcall *TECPluginFlushConversionPtr)(TECObjectRef encodingConverter, TECConverterContextRec *plugContext);
typedef OSStatus (__fastcall *TECPluginGetCountAvailableSniffersPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus (__fastcall *TECPluginGetCountAvailableTextEncodingPairsPtr)(TECConversionInfo *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus (__fastcall *TECPluginGetCountAvailableTextEncodingsPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus (__fastcall *TECPluginGetCountDestinationTextEncodingsPtr)(TextEncoding inputEncoding, TextEncoding *destinationEncodings, ItemCount maxDestinationEncodings, ItemCount *actualDestinationEncodings);
typedef OSStatus (__fastcall *TECPluginGetCountMailEncodingsPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef OSStatus (__fastcall *TECPluginGetCountSubTextEncodingsPtr)(TextEncoding inputEncoding, TextEncoding subEncodings[], ItemCount maxSubEncodings, ItemCount *actualSubEncodings);
typedef OSStatus (__fastcall *TECPluginGetCountWebEncodingsPtr)(TextEncoding *availableEncodings, ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
typedef TECPluginDispatchTable *(*TECPluginGetPluginDispatchTablePtr)(void);
typedef OSStatus (__fastcall *TECPluginGetTextEncodingFromInternetNamePtr)(TextEncoding *textEncoding, ConstStr255Param encodingName);
typedef OSStatus (__fastcall *TECPluginGetTextEncodingInternetNamePtr)(TextEncoding textEncoding, Str255 encodingName);
typedef OSStatus (__fastcall *TECPluginNewEncodingConverterPtr)(TECObjectRef *newEncodingConverter, TECConverterContextRec *plugContext, TextEncoding inputEncoding, TextEncoding outputEncoding);
typedef OSStatus (__fastcall *TECPluginNewEncodingSnifferPtr)(TECSnifferObjectRef *encodingSniffer, TECSnifferContextRec *snifContext, TextEncoding inputEncoding);
typedef OSType TECPluginSig;
typedef OSType TECPluginSignature;
typedef OSStatus (__fastcall *TECPluginSniffTextEncodingPtr)(TECSnifferObjectRef encodingSniffer, TECSnifferContextRec *snifContext);
struct TECPluginStateRec {UInt8 state1;UInt8 state2;UInt8 state3;UInt8 state4;UInt32 longState1;UInt32 longState2;UInt32 longState3;UInt32 longState4;};
typedef UInt32 TECPluginVersion;
struct TECSnifferContextRec {Ptr pluginRec;TextEncoding encoding;ItemCount maxErrors;ItemCount maxFeatures;TextPtr textInputBuffer;TextPtr textInputBufferEnd;ItemCount numFeatures;ItemCount numErrors;UInt32 contextRefCon;ProcPtr sniffProc;ProcPtr clearContextInfoProc;TECPluginStateRec pluginState;};
typedef struct OpaqueTECSnifferObjectRef *TECSnifferObjectRef;
typedef Boolean (__fastcall *TEClickLoopProcPtr)(TEPtr pTE);
typedef TEClickLoopProcPtr TEClickLoopUPP;
typedef void (__fastcall *TEDoTextProcPtr)(TEPtr pTE, unsigned __int16 firstChar, unsigned __int16 lastChar, __int16 selector, GrafPtr *currentGrafPort, __int16 *charPosition);
typedef TEDoTextProcPtr TEDoTextUPP;
typedef void (__fastcall *TEFindWordProcPtr)(unsigned __int16 currentPos, __int16 caller, TEPtr pTE, TEHandle hTE, unsigned __int16 *wordStart, unsigned __int16 *wordEnd);
typedef TEFindWordProcPtr TEFindWordUPP;
typedef TEPtr *TEHandle;
typedef __int16 TEIntHook;
typedef TERec *TEPtr;
struct TERec {Rect destRect;Rect viewRect;Rect selRect;__int16 lineHeight;__int16 fontAscent;Point selPoint;__int16 selStart;__int16 selEnd;__int16 active;WordBreakUPP wordBreak;TEClickLoopUPP clickLoop;int clickTime;__int16 clickLoc;int caretTime;__int16 caretState;__int16 just;__int16 teLength;Handle hText;int hDispatchRec;__int16 clikStuff;__int16 crOnly;__int16 txFont;StyleField txFace;__int16 txMode;__int16 txSize;GrafPtr inPort;HighHookUPP highHook;CaretHookUPP caretHook;__int16 nLines;__int16 lineStarts[16001];};
typedef void (__fastcall *TERecalcProcPtr)(TEPtr pTE, unsigned __int16 changeLength, unsigned __int16 *lineStart, unsigned __int16 *firstChar, unsigned __int16 *lastChar);
typedef TERecalcProcPtr TERecalcUPP;
typedef TEStylePtr *TEStyleHandle;
typedef TEStyleRec *TEStylePtr;
struct TEStyleRec {__int16 nRuns;__int16 nStyles;STHandle styleTab;LHHandle lhTab;int teRefCon;NullStHandle nullStyle;StyleRun runs[8001];};
typedef STElement TEStyleTable[1777];
struct TEndpointInfo {OTDataSize addr;OTDataSize options;OTDataSize tsdu;OTDataSize etsdu;OTDataSize connect;OTDataSize discon;OTServiceType servtype;UInt32 flags;};
typedef Zone *THz;
typedef THz *THzPtr;
struct TIPAddMulticast {InetHost multicastGroupAddress;InetHost interfaceAddress;};
struct TLookupBuffer {UInt16 fAddressLength;UInt16 fNameLength;UInt8 fAddressBuffer[1];};
struct TLookupReply {TNetbuf names;UInt32 rspcount;};
struct TLookupRequest {TNetbuf name;TNetbuf addr;UInt32 maxcnt;OTTimeout timeout;OTFlags flags;};
struct TMTask {QElemPtr qLink;__int16 qType;TimerUPP tmAddr;int tmCount;int tmWakeUp;int tmReserved;};
typedef TMTask *TMTaskPtr;
struct TNetbuf {ByteCount maxlen;ByteCount len;UInt8 *buf;};
struct TOptMgmt {TNetbuf opt;OTFlags flags;};
struct TOption {ByteCount len;OTXTILevel level;OTXTIName name;UInt32 status;UInt32 value[1];};
struct TOptionHeader {ByteCount len;OTXTILevel level;OTXTIName name;UInt32 status;};
struct TRegisterReply {TNetbuf addr;OTNameID nameid;};
struct TRegisterRequest {TNetbuf name;TNetbuf addr;OTFlags flags;};
struct TReply {TNetbuf data;TNetbuf opt;OTSequence sequence;};
struct TRequest {TNetbuf data;TNetbuf opt;OTSequence sequence;};
typedef UInt32 TSClassEnablingForceLevel;
typedef SInt16 TSCode;
typedef struct OpaqueTSMContext *TSMContext;
typedef struct OpaqueTSMDocumentID *TSMDocumentID;
struct TSMGlyphInfo {CFRange range;ATSFontRef fontRef;UInt16 collection;UInt16 glyphID;};
struct TSMGlyphInfoArray {ItemCount numGlyphInfo;TSMGlyphInfo glyphInfo[1];};
typedef void (__fastcall *TSMTEPostUpdateProcPtr)(TEHandle textH, int fixLen, int inputAreaStart, int inputAreaEnd, int pinStart, int pinEnd, int refCon);
typedef TSMTEPostUpdateProcPtr TSMTEPostUpdateUPP;
typedef void (__fastcall *TSMTEPreUpdateProcPtr)(TEHandle textH, int refCon);
typedef TSMTEPreUpdateProcPtr TSMTEPreUpdateUPP;
struct TSMTERec {TEHandle textH;TSMTEPreUpdateUPP preUpdateProc;TSMTEPostUpdateUPP postUpdateProc;int updateFlag;int refCon;};
typedef TSMTERecPtr *TSMTERecHandle;
typedef TSMTERec *TSMTERecPtr;
struct TScriptingSizeResource {__int16 scriptingSizeFlags;unsigned int minStackSize;unsigned int preferredStackSize;unsigned int maxStackSize;unsigned int minHeapSize;unsigned int preferredHeapSize;unsigned int maxHeapSize;};
struct TUDErr {TNetbuf addr;TNetbuf opt;SInt32 error;};
struct TUnitData {TNetbuf addr;TNetbuf opt;TNetbuf udata;};
struct TUnitReply {TNetbuf opt;TNetbuf udata;OTSequence sequence;};
struct TUnitRequest {TNetbuf addr;TNetbuf opt;TNetbuf udata;OTSequence sequence;};
struct TXNATSUIFeatures {ItemCount featureCount;ATSUFontFeatureType *featureTypes;ATSUFontFeatureSelector *featureSelectors;};
struct TXNATSUIVariations {ItemCount variationCount;ATSUFontVariationAxis *variationAxis;ATSUFontVariationValue *variationValues;};
typedef UInt32 TXNActionKey;
typedef CFStringRef (__fastcall *TXNActionKeyMapperProcPtr)(TXNActionKey actionKey, UInt32 commandID);
typedef TXNActionKeyMapperProcPtr TXNActionKeyMapperUPP;
union TXNAttributeData {void *dataPtr;UInt32 dataValue;TXNATSUIFeatures *atsuFeatures;TXNATSUIVariations *atsuVariations;CFURLRef urlReference;};
struct TXNBackground {TXNBackgroundType bgType;TXNBackgroundData bg;};
union TXNBackgroundData {RGBColor color;};
typedef UInt32 TXNBackgroundType;
struct TXNCarbonEventInfo {Boolean useCarbonEvents;UInt8 filler;UInt16 flags;CFDictionaryRef fDictionary;};
typedef OptionBits TXNContinuousFlags;
union TXNControlData {UInt32 uValue;SInt32 sValue;TXNTab tabValue;TXNMargins *marginsPtr;};
typedef FourCharCode TXNControlTag;
typedef OptionBits TXNCountOptions;
typedef OSType TXNDataType;
typedef OSStatus TXNErrors;
typedef OptionBits TXNFeatureBits;
typedef OSType TXNFileType;
typedef OSStatus (__fastcall *TXNFindProcPtr)(const TXNMatchTextRecord *matchData, TXNDataType iDataType, TXNMatchOptions iMatchOptions, const void *iSearchTextPtr, TextEncoding encoding, TXNOffset absStartOffset, ByteCount searchTextLength, TXNOffset *oStartMatch, TXNOffset *oEndMatch, Boolean *ofound, UInt32 refCon);
typedef TXNFindProcPtr TXNFindUPP;
typedef struct OpaqueTXNFontMenuObject *TXNFontMenuObject;
typedef UInt32 TXNFrameID;
typedef OptionBits TXNFrameOptions;
typedef UInt32 TXNFrameType;
typedef UInt32 TXNHyperLinkState;
typedef OptionBits TXNInitOptions;
struct TXNLongRect {SInt32 top;SInt32 left;SInt32 bottom;SInt32 right;};
struct TXNMacOSPreferredFontDescription {UInt32 fontID;Fixed pointSize;TextEncoding encoding;Style fontStyle;};
struct TXNMargins {SInt16 topMargin;SInt16 leftMargin;SInt16 bottomMargin;SInt16 rightMargin;};
typedef OptionBits TXNMatchOptions;
struct TXNMatchTextRecord {const void *iTextPtr;SInt32 iTextToMatchLength;TextEncoding iTextEncoding;};
typedef struct OpaqueTXNObject *TXNObject;
typedef void *TXNObjectRefcon;
typedef UInt32 TXNOffset;
typedef UInt32 TXNPermanentTextEncodingType;
typedef UInt32 TXNScrollBarOrientation;
typedef Boolean TXNScrollBarState;
typedef void (__fastcall *TXNScrollInfoProcPtr)(SInt32 iValue, SInt32 iMaximumValue, TXNScrollBarOrientation iScrollBarOrientation, SInt32 iRefCon);
typedef TXNScrollInfoProcPtr TXNScrollInfoUPP;
typedef UInt32 TXNScrollUnit;
struct TXNTab {SInt16 value;TXNTabType tabType;UInt8 filler;};
typedef SInt8 TXNTabType;
typedef OptionBits TXNTextBoxOptions;
struct TXNTextBoxOptionsData {TXNTextBoxOptions optionTags;Fract flushness;Fract justification;Fixed rotation;void *options;};
struct TXNTypeAttributes {TXTNTag tag;ByteCount size;TXNAttributeData data;};
typedef ByteCount TXNTypeRunAttributeSizes;
typedef FourCharCode TXNTypeRunAttributes;
typedef UInt32 TXNVersionValue;
typedef FourCharCode TXTNTag;
struct TableDirectoryRecord {OSType tableSignature;unsigned int reserved;unsigned int tableStartOffset;unsigned int tableSize;};
struct TabletPointRec {SInt32 absX;SInt32 absY;SInt32 absZ;UInt16 buttons;UInt16 pressure;SInt16 tiltX;SInt16 tiltY;UInt16 rotation;SInt16 tangentialPressure;UInt16 deviceID;SInt16 vendor1;SInt16 vendor2;SInt16 vendor3;};
typedef TabletPointRec TabletPointerRec;
struct TabletProximityRec {UInt16 vendorID;UInt16 tabletID;UInt16 pointerID;UInt16 deviceID;UInt16 systemTabletID;UInt16 vendorPointerType;UInt32 pointerSerialNumber;UInt64 uniqueID;UInt32 capabilityMask;UInt8 pointerType;UInt8 enterProximity;};
typedef struct OpaqueTaskID *TaskID;
typedef OSStatus (__fastcall *TaskProc)(void *parameter);
typedef UInt32 TaskStorageIndex;
typedef UInt32 TaskStorageValue;
typedef struct OpaqueTextBreakLocatorRef *TextBreakLocatorRef;
struct TextChunk {ID ckID;int ckSize;char text[1];};
typedef TextChunk *TextChunkPtr;
typedef UInt32 TextEncoding;
typedef UInt32 TextEncodingBase;
typedef UInt32 TextEncodingFormat;
typedef UInt32 TextEncodingNameSelector;
struct TextEncodingRun {ByteOffset offset;TextEncoding textEncoding;};
typedef TextEncodingRun *TextEncodingRunPtr;
typedef UInt32 TextEncodingVariant;
typedef UInt8 *TextPtr;
struct TextRange {int fStart;int fEnd;__int16 fHiliteStyle;};
struct TextRangeArray {__int16 fNumOfRanges;TextRange fRange[1];};
typedef TextRangeArrayPtr *TextRangeArrayHandle;
typedef TextRangeArray *TextRangeArrayPtr;
typedef TextRangePtr *TextRangeHandle;
typedef TextRange *TextRangePtr;
typedef OSType TextServiceClass;
struct TextServiceInfo {Component fComponent;Str255 fItemName;};
typedef TextServiceInfo *TextServiceInfoPtr;
struct TextServiceList {__int16 fTextServiceCount;TextServiceInfo fServices[1];};
typedef TextServiceListPtr *TextServiceListHandle;
typedef TextServiceList *TextServiceListPtr;
struct TextStyle {__int16 tsFont;StyleField tsFace;__int16 tsSize;RGBColor tsColor;};
typedef TextStylePtr *TextStyleHandle;
typedef TextStyle *TextStylePtr;
typedef struct OpaqueTextToUnicodeInfo *TextToUnicodeInfo;
typedef unsigned __int16 (__fastcall *TextWidthHookProcPtr)(unsigned __int16 textLen, unsigned __int16 textOffset, void *textBufferPtr, TEPtr pTE, TEHandle hTE);
typedef TextWidthHookProcPtr TextWidthHookUPP;
typedef UInt16 ThemeArrowOrientation;
typedef UInt32 ThemeBackgroundKind;
typedef SInt16 ThemeBrush;
typedef UInt16 ThemeButtonAdornment;
struct ThemeButtonDrawInfo {ThemeDrawState state;ThemeButtonValue value;ThemeButtonAdornment adornment;};
typedef ThemeButtonDrawInfo *ThemeButtonDrawInfoPtr;
typedef void (__fastcall *ThemeButtonDrawProcPtr)(const Rect *bounds, ThemeButtonKind kind, const ThemeButtonDrawInfo *info, UInt32 userData, SInt16 depth, Boolean isColorDev);
typedef ThemeButtonDrawProcPtr ThemeButtonDrawUPP;
typedef UInt16 ThemeButtonKind;
typedef UInt16 ThemeButtonValue;
typedef UInt16 ThemeCheckBoxStyle;
typedef UInt32 ThemeCursor;
typedef OSType ThemeDragSoundKind;
typedef UInt32 ThemeDrawState;
typedef struct OpaqueThemeDrawingState *ThemeDrawingState;
typedef void (__fastcall *ThemeEraseProcPtr)(const Rect *bounds, UInt32 eraseData, SInt16 depth, Boolean isColorDev);
typedef ThemeEraseProcPtr ThemeEraseUPP;
typedef UInt16 ThemeFontID;
typedef UInt16 ThemeGrowDirection;
typedef Boolean (__fastcall *ThemeIteratorProcPtr)(ConstStr255Param inFileName, SInt16 resID, Collection inThemeSettings, void *inUserData);
typedef ThemeIteratorProcPtr ThemeIteratorUPP;
typedef UInt16 ThemeMenuBarState;
typedef UInt16 ThemeMenuItemType;
typedef UInt16 ThemeMenuState;
typedef UInt16 ThemeMenuType;
typedef UInt32 ThemeMetric;
typedef UInt16 ThemePopupArrowSize;
typedef UInt16 ThemeScrollBarArrowStyle;
typedef UInt16 ThemeScrollBarThumbStyle;
typedef OSType ThemeSoundKind;
typedef UInt16 ThemeTabDirection;
typedef UInt16 ThemeTabStyle;
typedef void (__fastcall *ThemeTabTitleDrawProcPtr)(const Rect *bounds, ThemeTabStyle style, ThemeTabDirection direction, SInt16 depth, Boolean isColorDev, UInt32 userData);
typedef ThemeTabTitleDrawProcPtr ThemeTabTitleDrawUPP;
typedef SInt16 ThemeTextColor;
typedef UInt8 ThemeThumbDirection;
typedef UInt16 ThemeTitleBarWidget;
typedef UInt16 ThemeTrackAttributes;
struct ThemeTrackDrawInfo {ThemeTrackKind kind;Rect bounds;SInt32 min;SInt32 max;SInt32 value;UInt32 reserved;ThemeTrackAttributes attributes;ThemeTrackEnableState enableState;UInt8 filler1;union ThemeTrackDrawInfo::$285AA49AFDDFD2288199DBE4E882EF6A trackInfo;};
union ThemeTrackDrawInfo::$285AA49AFDDFD2288199DBE4E882EF6A {ScrollBarTrackInfo scrollbar;SliderTrackInfo slider;ProgressTrackInfo progress;};
typedef UInt8 ThemeTrackEnableState;
typedef UInt16 ThemeTrackKind;
typedef UInt8 ThemeTrackPressState;
typedef UInt32 ThemeWindowAttributes;
struct ThemeWindowMetrics {UInt16 metricSize;SInt16 titleHeight;SInt16 titleWidth;SInt16 popupTabOffset;SInt16 popupTabWidth;UInt16 popupTabPosition;};
typedef ThemeWindowMetrics *ThemeWindowMetricsPtr;
typedef UInt16 ThemeWindowType;
typedef voidPtr (__fastcall *ThreadEntryProcPtr)(void *threadParam);
typedef ThreadEntryUPP ThreadEntryTPP;
typedef ThreadEntryProcPtr ThreadEntryUPP;
typedef UInt32 ThreadID;
typedef UInt32 ThreadOptions;
typedef ThreadID (__fastcall *ThreadSchedulerProcPtr)(SchedulerInfoRecPtr schedulerInfo);
typedef ThreadSchedulerUPP ThreadSchedulerTPP;
typedef ThreadSchedulerProcPtr ThreadSchedulerUPP;
typedef UInt16 ThreadState;
typedef UInt32 ThreadStyle;
typedef void (__fastcall *ThreadSwitchProcPtr)(ThreadID threadBeingSwitched, void *switchProcParam);
typedef ThreadSwitchUPP ThreadSwitchTPP;
typedef ThreadSwitchProcPtr ThreadSwitchUPP;
typedef void *ThreadTaskRef;
typedef void (__fastcall *ThreadTerminationProcPtr)(ThreadID threadTerminated, void *terminationProcParam);
typedef ThreadTerminationUPP ThreadTerminationTPP;
typedef ThreadTerminationProcPtr ThreadTerminationUPP;
typedef struct TimeBaseRecord *TimeBase;
struct TimeRecord {CompTimeValue value;TimeScale scale;TimeBase base;};
typedef int TimeScale;
typedef int TimeValue;
typedef SInt64 TimeValue64;
typedef struct OpaqueTimerID *TimerID;
typedef void (__fastcall *TimerProcPtr)(TMTaskPtr tmTaskPtr);
typedef TimerProcPtr TimerUPP;
typedef OSErr (__fastcall *TipFunctionProcPtr)(Point tip, RgnHandle structure, Rect *r, BalloonVariant *balloonVariant);
typedef TipFunctionProcPtr TipFunctionUPP;
struct TogglePB {int togFlags;ResType amChars;ResType pmChars;int reserved[4];};
typedef SInt16 ToggleResults;
struct TokenBlock {Ptr source;int sourceLength;Ptr tokenList;int tokenLength;int tokenCount;Ptr stringList;int stringLength;int stringCount;Boolean doString;Boolean doAppend;Boolean doAlphanumeric;Boolean doNest;ScriptTokenType leftDelims[2];ScriptTokenType rightDelims[2];ScriptTokenType leftComment[4];ScriptTokenType rightComment[4];ScriptTokenType escapeCode;ScriptTokenType decimalCode;Handle itlResource;int reserved[8];};
typedef TokenBlock *TokenBlockPtr;
struct TokenRec {ScriptTokenType theToken;Ptr position;int length;StringPtr stringPosition;};
typedef TokenRec *TokenRecPtr;
typedef SInt8 TokenResults;
typedef struct OpaqueToolboxObjectClassRef *ToolboxObjectClassRef;
struct TrakTable {Fixed version;UInt16 format;UInt16 horizOffset;UInt16 vertOffset;};
struct TrakTableData {UInt16 nTracks;UInt16 nSizes;UInt32 sizeTableOffset;TrakTableEntry trakTable[1];};
struct TrakTableEntry {Fixed track;UInt16 nameTableIndex;UInt16 sizesOffset;};
typedef SInt16 TrakValue;
typedef UInt32 TranslationAttributes;
typedef int TranslationRefNum;
typedef FVector TripleInt[3];
typedef __int16 TruncCode;
struct TypeSelectRecord {unsigned int tsrLastKeyTime;ScriptCode tsrScript;Str63 tsrKeyStrokes;};
typedef OSType TypesBlock[64];
typedef OSType *TypesBlockPtr;
typedef SInt32 UCCharPropertyType;
typedef UInt32 UCCharPropertyValue;
typedef UInt32 UCCollateOptions;
typedef UInt32 UCCollationValue;
typedef UInt16 UCKeyCharSeq;
struct UCKeyLayoutFeatureInfo {UInt16 keyLayoutFeatureInfoFormat;UInt16 reserved;UniCharCount maxOutputStringLength;};
struct UCKeyModifiersToTableNum {UInt16 keyModifiersToTableNumFormat;UInt16 defaultTableNum;ItemCount modifiersCount;UInt8 tableNum[1];};
typedef UInt16 UCKeyOutput;
struct UCKeySequenceDataIndex {UInt16 keySequenceDataIndexFormat;UInt16 charSequenceCount;UInt16 charSequenceOffsets[1];};
struct UCKeyStateEntryRange {UInt16 curStateStart;UInt8 curStateRange;UInt8 deltaMultiplier;UCKeyCharSeq charData;UInt16 nextState;};
struct UCKeyStateEntryTerminal {UInt16 curState;UCKeyCharSeq charData;};
struct UCKeyStateRecord {UCKeyCharSeq stateZeroCharData;UInt16 stateZeroNextState;UInt16 stateEntryCount;UInt16 stateEntryFormat;UInt32 stateEntryData[1];};
struct UCKeyStateRecordsIndex {UInt16 keyStateRecordsIndexFormat;UInt16 keyStateRecordCount;ByteOffset keyStateRecordOffsets[1];};
struct UCKeyStateTerminators {UInt16 keyStateTerminatorsFormat;UInt16 keyStateTerminatorCount;UCKeyCharSeq keyStateTerminators[1];};
struct UCKeyToCharTableIndex {UInt16 keyToCharTableIndexFormat;UInt16 keyToCharTableSize;ItemCount keyToCharTableCount;ByteOffset keyToCharTableOffsets[1];};
struct UCKeyboardLayout {UInt16 keyLayoutHeaderFormat;UInt16 keyLayoutDataVersion;ByteOffset keyLayoutFeatureInfoOffset;ItemCount keyboardTypeCount;UCKeyboardTypeHeader keyboardTypeList[1];};
struct UCKeyboardTypeHeader {UInt32 keyboardTypeFirst;UInt32 keyboardTypeLast;ByteOffset keyModifiersToTableNumOffset;ByteOffset keyToCharTableIndexOffset;ByteOffset keyStateRecordsIndexOffset;ByteOffset keyStateTerminatorsOffset;ByteOffset keySequenceDataIndexOffset;};
typedef UInt32 UCTextBreakOptions;
typedef UInt32 UCTextBreakType;
typedef unsigned __int16 UInt16;
typedef unsigned int UInt32;
typedef unsigned __int64 UInt64;
typedef unsigned __int8 UInt8;
typedef mach_port_t UNDServerRef;
struct URLCallbackInfo {UInt32 version;URLReference urlRef;const char *property;UInt32 currentSize;EventRecord *systemEvent;};
typedef UInt32 URLEvent;
typedef unsigned int URLEventMask;
typedef OSStatus (__fastcall *URLNotifyProcPtr)(void *userContext, URLEvent event, URLCallbackInfo *callbackInfo);
typedef URLNotifyProcPtr URLNotifyUPP;
typedef UInt32 URLOpenFlags;
typedef struct OpaqueURLReference *URLReference;
typedef UInt16 URLSourceType;
typedef UInt32 URLState;
typedef OSStatus (__fastcall *URLSystemEventProcPtr)(void *userContext, EventRecord *event);
typedef URLSystemEventProcPtr URLSystemEventUPP;
struct UTCDateTime {UInt16 highSeconds;UInt32 lowSeconds;UInt16 fraction;};
typedef UTCDateTimePtr *UTCDateTimeHandle;
typedef UTCDateTime *UTCDateTimePtr;
typedef UInt16 UTF16Char;
typedef UInt32 UTF32Char;
typedef UInt8 UTF8Char;
typedef CMError (__fastcall *UnembedImageProcPtr)(const FSSpec *specFrom, const FSSpec *specInto);
typedef UInt16 UniChar;
typedef UniCharArrayPtr *UniCharArrayHandle;
typedef UInt32 UniCharArrayOffset;
typedef UniChar *UniCharArrayPtr;
typedef UInt32 UniCharCount;
typedef UniCharCount *UniCharCountPtr;
typedef UniChar *UniCharPtr;
typedef SInt32 UnicodeMapVersion;
struct UnicodeMapping {TextEncoding unicodeEncoding;TextEncoding otherEncoding;UnicodeMapVersion mappingVersion;};
typedef UnicodeMapping *UnicodeMappingPtr;
typedef UInt32 UnicodeScalarValue;
typedef OSStatus (__fastcall *UnicodeToTextFallbackProcPtr)(UniChar *iSrcUniStr, ByteCount iSrcUniStrLen, ByteCount *oSrcConvLen, TextPtr oDestStr, ByteCount iDestStrLen, ByteCount *oDestConvLen, LogicalAddress iInfoPtr, ConstUnicodeMappingPtr iUnicodeMappingPtr);
typedef UnicodeToTextFallbackProcPtr UnicodeToTextFallbackUPP;
typedef struct OpaqueUnicodeToTextInfo *UnicodeToTextInfo;
typedef struct OpaqueUnicodeToTextRunInfo *UnicodeToTextRunInfo;
typedef UInt16 UnitNumber;
typedef UniversalProcPtr *UniversalProcHandle;
typedef ProcPtr UniversalProcPtr;
typedef unsigned int UnsignedFixed;
typedef UnsignedFixed *UnsignedFixedPtr;
struct UnsignedWide {UInt32 hi;UInt32 lo;};
typedef UnsignedWide *UnsignedWidePtr;
struct UntokenTable {__int16 len;__int16 lastToken;__int16 index[256];};
typedef UntokenTablePtr *UntokenTableHandle;
typedef UntokenTable *UntokenTablePtr;
typedef Boolean (__fastcall *UserEventProcPtr)(EventRecord *event);
typedef UserEventProcPtr UserEventUPP;
typedef void (__fastcall *UserFnProcPtr)(void *parameter);
typedef UserFnProcPtr UserFnUPP;
typedef void (__fastcall *UserItemProcPtr)(DialogRef theDialog, DialogItemIndex itemNo);
typedef UserItemProcPtr UserItemUPP;
struct VCB {QElemPtr qLink;__int16 qType;__int16 vcbFlags;unsigned __int16 vcbSigWord;unsigned int vcbCrDate;unsigned int vcbLsMod;__int16 vcbAtrb;unsigned __int16 vcbNmFls;__int16 vcbVBMSt;__int16 vcbAllocPtr;unsigned __int16 vcbNmAlBlks;int vcbAlBlkSiz;int vcbClpSiz;__int16 vcbAlBlSt;int vcbNxtCNID;unsigned __int16 vcbFreeBks;Str27 vcbVN;__int16 vcbDrvNum;__int16 vcbDRefNum;__int16 vcbFSID;__int16 vcbVRefNum;Ptr vcbMAdr;Ptr vcbBufAdr;__int16 vcbMLen;__int16 vcbDirIndex;__int16 vcbDirBlk;unsigned int vcbVolBkUp;unsigned __int16 vcbVSeqNum;int vcbWrCnt;int vcbXTClpSiz;int vcbCTClpSiz;unsigned __int16 vcbNmRtDirs;int vcbFilCnt;int vcbDirCnt;int vcbFndrInfo[8];unsigned __int16 vcbVCSize;unsigned __int16 vcbVBMCSiz;unsigned __int16 vcbCtlCSiz;unsigned __int16 vcbXTAlBlks;unsigned __int16 vcbCTAlBlks;__int16 vcbXTRef;__int16 vcbCTRef;Ptr vcbCtlBuf;int vcbDirIDM;__int16 vcbOffsM;};
typedef VCB *VCBPtr;
typedef VDBaseAddressInfoRec *VDBaseAddressInfoPtr;
struct VDBaseAddressInfoRec {int csDevData;int csDevBase;__int16 csModeReserved;int csModeBase;};
typedef UInt32 VDClutBehavior;
typedef VDClutBehavior *VDClutBehaviorPtr;
typedef VDCommunicationInfoRec *VDCommunicationInfoPtr;
struct VDCommunicationInfoRec {SInt32 csBusID;UInt32 csBusType;SInt32 csMinBus;SInt32 csMaxBus;UInt32 csSupportedTypes;UInt32 csSupportedCommFlags;UInt32 csReserved2;UInt32 csReserved3;UInt32 csReserved4;UInt32 csReserved5;UInt32 csReserved6;UInt32 csReserved7;};
typedef VDCommunicationRec *VDCommunicationPtr;
struct VDCommunicationRec {SInt32 csBusID;UInt32 csCommFlags;UInt32 csMinReplyDelay;UInt32 csReserved2;UInt32 csSendAddress;UInt32 csSendType;LogicalAddress csSendBuffer;ByteCount csSendSize;UInt32 csReplyAddress;UInt32 csReplyType;LogicalAddress csReplyBuffer;ByteCount csReplySize;UInt32 csReserved3;UInt32 csReserved4;UInt32 csReserved5;UInt32 csReserved6;};
typedef VDConvolutionInfoRec *VDConvolutionInfoPtr;
struct VDConvolutionInfoRec {DisplayModeID csDisplayModeID;DepthMode csDepthMode;unsigned int csPage;UInt32 csFlags;UInt32 csReserved;};
typedef VDDDCBlockRec *VDDDCBlockPtr;
struct VDDDCBlockRec {UInt32 ddcBlockNumber;ResType ddcBlockType;UInt32 ddcFlags;UInt32 ddcReserved;Byte ddcBlockData[128];};
struct VDDefMode {UInt8 csID;SInt8 filler;};
typedef VDDefMode *VDDefModePtr;
typedef VDDetailedTimingRec *VDDetailedTimingPtr;
struct VDDetailedTimingRec {UInt32 csTimingSize;UInt32 csTimingType;UInt32 csTimingVersion;UInt32 csTimingReserved;DisplayModeID csDisplayModeID;UInt32 csDisplayModeSeed;UInt32 csDisplayModeState;UInt32 csDisplayModeAlias;UInt32 csSignalConfig;UInt32 csSignalLevels;UInt64 csPixelClock;UInt64 csMinPixelClock;UInt64 csMaxPixelClock;UInt32 csHorizontalActive;UInt32 csHorizontalBlanking;UInt32 csHorizontalSyncOffset;UInt32 csHorizontalSyncPulseWidth;UInt32 csVerticalActive;UInt32 csVerticalBlanking;UInt32 csVerticalSyncOffset;UInt32 csVerticalSyncPulseWidth;UInt32 csHorizontalBorderLeft;UInt32 csHorizontalBorderRight;UInt32 csVerticalBorderTop;UInt32 csVerticalBorderBottom;UInt32 csHorizontalSyncConfig;UInt32 csHorizontalSyncLevel;UInt32 csVerticalSyncConfig;UInt32 csVerticalSyncLevel;UInt32 csReserved1;UInt32 csReserved2;UInt32 csReserved3;UInt32 csReserved4;UInt32 csReserved5;UInt32 csReserved6;UInt32 csReserved7;UInt32 csReserved8;};
typedef VDDisplayConnectInfoRec *VDDisplayConnectInfoPtr;
struct VDDisplayConnectInfoRec {unsigned __int16 csDisplayType;unsigned __int8 csConnectTaggedType;unsigned __int8 csConnectTaggedData;unsigned int csConnectFlags;unsigned int csDisplayComponent;unsigned int csConnectReserved;};
typedef VDDisplayTimingRangeRec *VDDisplayTimingRangePtr;
struct VDDisplayTimingRangeRec {UInt32 csRangeSize;UInt32 csRangeType;UInt32 csRangeVersion;UInt32 csRangeReserved;UInt32 csRangeBlockIndex;UInt32 csRangeGroup;UInt32 csRangeBlockCount;UInt32 csRangeFlags;UInt64 csMinPixelClock;UInt64 csMaxPixelClock;UInt32 csMaxPixelError;UInt32 csTimingRangeSyncFlags;UInt32 csTimingRangeSignalLevels;UInt32 csReserved0;UInt32 csMinFrameRate;UInt32 csMaxFrameRate;UInt32 csMinLineRate;UInt32 csMaxLineRate;UInt32 csMaxHorizontalTotal;UInt32 csMaxVerticalTotal;UInt32 csMaxTotalReserved1;UInt32 csMaxTotalReserved2;UInt8 csCharSizeHorizontalActive;UInt8 csCharSizeHorizontalBlanking;UInt8 csCharSizeHorizontalSyncOffset;UInt8 csCharSizeHorizontalSyncPulse;UInt8 csCharSizeVerticalActive;UInt8 csCharSizeVerticalBlanking;UInt8 csCharSizeVerticalSyncOffset;UInt8 csCharSizeVerticalSyncPulse;UInt8 csCharSizeHorizontalBorderLeft;UInt8 csCharSizeHorizontalBorderRight;UInt8 csCharSizeVerticalBorderTop;UInt8 csCharSizeVerticalBorderBottom;UInt8 csCharSizeHorizontalTotal;UInt8 csCharSizeVerticalTotal;UInt16 csCharSizeReserved1;UInt32 csMinHorizontalActiveClocks;UInt32 csMaxHorizontalActiveClocks;UInt32 csMinHorizontalBlankingClocks;UInt32 csMaxHorizontalBlankingClocks;UInt32 csMinHorizontalSyncOffsetClocks;UInt32 csMaxHorizontalSyncOffsetClocks;UInt32 csMinHorizontalPulseWidthClocks;UInt32 csMaxHorizontalPulseWidthClocks;UInt32 csMinVerticalActiveClocks;UInt32 csMaxVerticalActiveClocks;UInt32 csMinVerticalBlankingClocks;UInt32 csMaxVerticalBlankingClocks;UInt32 csMinVerticalSyncOffsetClocks;UInt32 csMaxVerticalSyncOffsetClocks;UInt32 csMinVerticalPulseWidthClocks;UInt32 csMaxVerticalPulseWidthClocks;UInt32 csMinHorizontalBorderLeft;UInt32 csMaxHorizontalBorderLeft;UInt32 csMinHorizontalBorderRight;UInt32 csMaxHorizontalBorderRight;UInt32 csMinVerticalBorderTop;UInt32 csMaxVerticalBorderTop;UInt32 csMinVerticalBorderBottom;UInt32 csMaxVerticalBorderBottom;UInt32 csReserved1;UInt32 csReserved2;UInt32 csReserved3;UInt32 csReserved4;UInt32 csReserved5;UInt32 csReserved6;UInt32 csReserved7;UInt32 csReserved8;};
typedef VDDrawHardwareCursorRec *VDDrawHardwareCursorPtr;
struct VDDrawHardwareCursorRec {SInt32 csCursorX;SInt32 csCursorY;UInt32 csCursorVisible;UInt32 csReserved1;UInt32 csReserved2;};
typedef VDEntryRecord *VDEntRecPtr;
struct VDEntryRecord {Ptr csTable;};
typedef VDFlagRecord *VDFlagRecPtr;
struct VDFlagRecord {SInt8 csMode;SInt8 filler;};
typedef VDGammaRecord *VDGamRecPtr;
typedef VDGammaInfoRec *VDGammaInfoPtr;
struct VDGammaInfoRec {GammaTableID csLastGammaID;GammaTableID csNextGammaID;Ptr csGammaPtr;unsigned int csReserved;};
struct VDGammaRecord {Ptr csGTable;};
typedef VDGetGammaListRec *VDGetGammaListPtr;
struct VDGetGammaListRec {GammaTableID csPreviousGammaTableID;GammaTableID csGammaTableID;unsigned int csGammaTableSize;char *csGammaTableName;};
typedef VDGrayRecord *VDGrayPtr;
struct VDGrayRecord {Boolean csMode;SInt8 filler;};
typedef VDHardwareCursorDrawStateRec *VDHardwareCursorDrawStatePtr;
struct VDHardwareCursorDrawStateRec {SInt32 csCursorX;SInt32 csCursorY;UInt32 csCursorVisible;UInt32 csCursorSet;UInt32 csReserved1;UInt32 csReserved2;};
typedef VDMultiConnectInfoRec *VDMultiConnectInfoPtr;
struct VDMultiConnectInfoRec {unsigned int csDisplayCountOrNumber;VDDisplayConnectInfoRec csConnectInfo;};
struct VDPageInfo {__int16 csMode;int csData;__int16 csPage;Ptr csBaseAddr;};
typedef VDPageInfo *VDPgInfoPtr;
typedef VDPowerStateRec *VDPowerStatePtr;
struct VDPowerStateRec {unsigned int powerState;unsigned int powerFlags;unsigned int powerReserved1;unsigned int powerReserved2;};
struct VDPrivateSelectorDataRec {LogicalAddress privateParameters;ByteCount privateParametersSize;LogicalAddress privateResults;ByteCount privateResultsSize;};
struct VDPrivateSelectorRec {UInt32 reserved;VDPrivateSelectorDataRec data[1];};
typedef VDResolutionInfoRec *VDResolutionInfoPtr;
struct VDResolutionInfoRec {DisplayModeID csPreviousDisplayModeID;DisplayModeID csDisplayModeID;unsigned int csHorizontalPixels;unsigned int csVerticalLines;Fixed csRefreshRate;DepthMode csMaxDepthMode;unsigned int csResolutionFlags;unsigned int csReserved;};
typedef VDRetrieveGammaRec *VDRetrieveGammaPtr;
struct VDRetrieveGammaRec {GammaTableID csGammaTableID;GammaTbl *csGammaTablePtr;};
typedef VDSetEntryRecord *VDSetEntryPtr;
struct VDSetEntryRecord {ColorSpec *csTable;__int16 csStart;__int16 csCount;};
typedef VDSetHardwareCursorRec *VDSetHardwareCursorPtr;
struct VDSetHardwareCursorRec {void *csCursorRef;UInt32 csReserved1;UInt32 csReserved2;};
struct VDSettings {__int16 csParamCnt;__int16 csBrightMax;__int16 csBrightDef;__int16 csBrightVal;__int16 csCntrstMax;__int16 csCntrstDef;__int16 csCntrstVal;__int16 csTintMax;__int16 csTintDef;__int16 csTintVal;__int16 csHueMax;__int16 csHueDef;__int16 csHueVal;__int16 csHorizDef;__int16 csHorizVal;__int16 csHorizMax;__int16 csVertDef;__int16 csVertVal;__int16 csVertMax;};
typedef VDSettings *VDSettingsPtr;
struct VDSizeInfo {__int16 csHSize;__int16 csHPos;__int16 csVSize;__int16 csVPos;};
typedef VDSupportsHardwareCursorRec *VDSupportsHardwareCursorPtr;
struct VDSupportsHardwareCursorRec {UInt32 csSupportsHardwareCursor;UInt32 csReserved1;UInt32 csReserved2;};
typedef VDSwitchInfoRec *VDSwitchInfoPtr;
struct VDSwitchInfoRec {unsigned __int16 csMode;unsigned int csData;unsigned __int16 csPage;Ptr csBaseAddr;unsigned int csReserved;};
typedef VDSyncInfoRec *VDSyncInfoPtr;
struct VDSyncInfoRec {UInt8 csMode;UInt8 csFlags;};
typedef VDSizeInfo *VDSzInfoPtr;
typedef VDTimingInfoRec *VDTimingInfoPtr;
struct VDTimingInfoRec {unsigned int csTimingMode;unsigned int csTimingReserved;unsigned int csTimingFormat;unsigned int csTimingData;unsigned int csTimingFlags;};
typedef VDVideoParametersInfoRec *VDVideoParametersInfoPtr;
struct VDVideoParametersInfoRec {DisplayModeID csDisplayModeID;DepthMode csDepthMode;VPBlockPtr csVPBlockPtr;unsigned int csPageCount;VideoDeviceType csDeviceType;UInt32 csDepthFlags;};
typedef SInt8 VHSelect;
struct VPBlock {int vpBaseOffset;__int16 vpRowBytes;Rect vpBounds;__int16 vpVersion;__int16 vpPackType;int vpPackSize;int vpHRes;int vpVRes;__int16 vpPixelType;__int16 vpPixelSize;__int16 vpCmpCount;__int16 vpCmpSize;int vpPlaneBytes;};
typedef VPBlock *VPBlockPtr;
typedef CMError (__fastcall *ValidateImageProcPtr)(const FSSpec *spec);
typedef CMError (__fastcall *ValidateSpaceProcPtr)(const FSSpec *spec, OSType *space);
union Vector128 {unsigned int l[4];unsigned __int16 s[8];unsigned __int8 c[16];};
typedef VectorInformationPowerPC VectorInformation;
struct VectorInformationPowerPC {Vector128 Registers[32];Vector128 VSCR;UInt32 VRsave;};
struct VersRec {NumVersion numericVersion;__int16 countryCode;Str255 shortVersion;Str255 reserved;};
typedef VersRecPtr *VersRecHndl;
typedef VersRec *VersRecPtr;
typedef UInt32 VideoDeviceType;
struct VoiceDescription {int length;VoiceSpec voice;int version;Str63 name;Str255 comment;__int16 gender;__int16 age;__int16 script;__int16 language;__int16 region;int reserved[4];};
struct VoiceFileInfo {FSSpec fileSpec;__int16 resID;};
struct VoiceSpec {OSType creator;OSType id;};
typedef VoiceSpec *VoiceSpecPtr;
struct VolMountInfoHeader {__int16 length;VolumeType media;};
typedef VolMountInfoHeader *VolMountInfoPtr;
struct VolumeMountInfoHeader {__int16 length;VolumeType media;__int16 flags;};
typedef VolumeMountInfoHeader *VolumeMountInfoHeaderPtr;
struct VolumeParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;int filler2;__int16 ioVolIndex;unsigned int ioVCrDate;unsigned int ioVLsBkUp;unsigned __int16 ioVAtrb;unsigned __int16 ioVNmFls;unsigned __int16 ioVDirSt;__int16 ioVBlLn;unsigned __int16 ioVNmAlBlks;unsigned int ioVAlBlkSiz;unsigned int ioVClpSiz;unsigned __int16 ioAlBlSt;unsigned int ioVNxtFNum;unsigned __int16 ioVFrBlk;};
typedef VolumeParam *VolumeParamPtr;
typedef OSType VolumeType;
struct VolumeVirtualMemoryInfo {PBVersion version;SInt16 volumeRefNum;Boolean inUse;UInt8 _fill;UInt32 vmOptions;};
typedef VolumeVirtualMemoryInfo *VolumeVirtualMemoryInfoPtr;
typedef WCTabPtr *WCTabHandle;
typedef WinCTab *WCTabPtr;
typedef WDPBRec *WDPBPtr;
struct WDPBRec {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 filler1;__int16 ioWDIndex;int ioWDProcID;__int16 ioWDVRefNum;__int16 filler2[7];int ioWDDirID;};
struct WDParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioWDCreated;__int16 ioWDIndex;int ioWDProcID;__int16 ioWDVRefNum;__int16 filler10;int filler11;int filler12;int filler13;int ioWDDirID;};
typedef WDParam *WDParamPtr;
struct WSClientContext {CFIndex version;void *info;WSClientContextRetainCallBackProcPtr retain;WSClientContextReleaseCallBackProcPtr release;WSClientContextCopyDescriptionCallBackProcPtr copyDescription;};
typedef CFStringRef (__fastcall *WSClientContextCopyDescriptionCallBackProcPtr)(void *info);
typedef void (__fastcall *WSClientContextReleaseCallBackProcPtr)(void *info);
typedef void *(__fastcall *WSClientContextRetainCallBackProcPtr)(void *info);
typedef void (__fastcall *WSMethodInvocationCallBackProcPtr)(WSMethodInvocationRef invocation, void *info, CFDictionaryRef outRef);
typedef CFTypeRef (__fastcall *WSMethodInvocationDeserializationProcPtr)(WSMethodInvocationRef invocation, CFXMLTreeRef msgRoot, CFXMLTreeRef deserializeRoot, void *info);
typedef struct OpaqueWSMethodInvocationRef *WSMethodInvocationRef;
typedef CFStringRef (__fastcall *WSMethodInvocationSerializationProcPtr)(WSMethodInvocationRef invocation, CFTypeRef obj, void *info);
enum WSTypeID {eWSUnknownType = 0x0,eWSNullType = 0x1,eWSBooleanType = 0x2,eWSIntegerType = 0x3,eWSDoubleType = 0x4,eWSStringType = 0x5,eWSDateType = 0x6,eWSDataType = 0x7,eWSArrayType = 0x8,eWSDictionaryType = 0x9,};
struct WStateData {Rect userState;Rect stdState;};
typedef WStateDataPtr *WStateDataHandle;
typedef WStateData *WStateDataPtr;
struct WakeupTime {unsigned int wakeTime;Boolean wakeEnabled;SInt8 filler;};
struct WidEntry {__int16 widStyle;};
struct WidTable {__int16 numWidths;};
union WideChar {char a[2];__int16 b;};
struct WideCharArr {__int16 size;WideChar data[10];};
typedef wide *WidePtr;
typedef unsigned __int16 (__fastcall *WidthHookProcPtr)(unsigned __int16 textLen, unsigned __int16 textOffset, void *textBufferPtr, TEPtr pTE, TEHandle hTE);
typedef WidthHookProcPtr WidthHookUPP;
struct WidthTable {Fixed tabData[256];Handle tabFont;int sExtra;int style;__int16 fID;__int16 fSize;__int16 face;__int16 device;Point inNumer;Point inDenom;__int16 aFID;Handle fHand;Boolean usedFam;UInt8 aFace;__int16 vOutput;__int16 hOutput;__int16 vFactor;__int16 hFactor;__int16 aSize;__int16 tabSize;};
typedef WidthTablePtr *WidthTableHdl;
typedef WidthTable *WidthTablePtr;
struct WinCTab {int wCSeed;__int16 wCReserved;__int16 ctSize;ColorSpec ctTable[5];};
typedef UInt32 WindowActivationScope;
typedef UInt32 WindowAttributes;
typedef UInt32 WindowClass;
typedef UInt32 WindowConstrainOptions;
typedef SInt16 WindowDefPartCode;
typedef int (__fastcall *WindowDefProcPtr)(__int16 varCode, WindowRef window, __int16 message, int param);
struct WindowDefSpec {WindowDefType defType;union WindowDefSpec::$8156525E6C21501072628DF00E01EC34 u;};
union WindowDefSpec::$8156525E6C21501072628DF00E01EC34 {WindowDefUPP defProc;void *classRef;__int16 procID;void *rootView;};
typedef WindowDefSpec *WindowDefSpecPtr;
typedef UInt32 WindowDefType;
typedef WindowDefProcPtr WindowDefUPP;
typedef UInt32 WindowDrawerState;
typedef UInt32 WindowGroupAttributes;
typedef UInt32 WindowGroupContentOptions;
typedef struct OpaqueWindowGroupRef *WindowGroupRef;
typedef UInt32 WindowLatentVisibility;
typedef UInt32 WindowModality;
typedef OptionBits WindowPaintProcOptions;
typedef OSStatus (__fastcall *WindowPaintProcPtr)(GDHandle device, GrafPtr qdContext, WindowRef window, RgnHandle inClientPaintRgn, RgnHandle outSystemPaintRgn, void *refCon);
typedef WindowPaintProcPtr WindowPaintUPP;
typedef SInt16 WindowPartCode;
typedef UInt32 WindowPositionMethod;
typedef struct OpaqueWindowPtr *WindowPtr;
typedef WindowPtr WindowRef;
typedef UInt16 WindowRegionCode;
typedef void (__fastcall *WindowTitleDrawingProcPtr)(const Rect *bounds, SInt16 depth, Boolean colorDevice, UInt32 userData);
typedef WindowTitleDrawingProcPtr WindowTitleDrawingUPP;
typedef UInt32 WindowTransitionAction;
typedef UInt32 WindowTransitionEffect;
typedef Boolean (__fastcall *WordBreakProcPtr)(Ptr text, __int16 charPos);
typedef WordBreakProcPtr WordBreakUPP;
struct WritingCode {ScriptCode theScriptCode;LangCode theLangCode;};
typedef XCInfoPBRec *XCInfoPBPtr;
struct XCInfoPBRec {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;ProcPtr ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;int filler1;StringPtr ioShortNamePtr;__int16 filler2;__int16 ioPDType;int ioPDAuxType;int filler3[2];int ioDirID;};
struct XIOParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;__int16 ioRefNum;SInt8 ioVersNum;SInt8 ioPermssn;Ptr ioMisc;Ptr ioBuffer;int ioReqCount;int ioActCount;__int16 ioPosMode;wide ioWPosOffset;};
typedef XIOParam *XIOParamPtr;
struct XLibContainerHeader {OSType tag1;OSType tag2;UInt32 currentFormat;UInt32 containerStringsOffset;UInt32 exportHashOffset;UInt32 exportKeyOffset;UInt32 exportSymbolOffset;UInt32 exportNamesOffset;UInt32 exportHashTablePower;UInt32 exportedSymbolCount;UInt32 fragNameOffset;UInt32 fragNameLength;UInt32 dylibPathOffset;UInt32 dylibPathLength;OSType cpuFamily;OSType cpuModel;UInt32 dateTimeStamp;UInt32 currentVersion;UInt32 oldDefVersion;UInt32 oldImpVersion;};
struct XLibExportedSymbol {UInt32 classAndName;UInt32 bpOffset;};
typedef PEFExportedSymbolHashSlot XLibExportedSymbolHashSlot;
typedef PEFExportedSymbolKey XLibExportedSymbolKey;
struct XVolumeParam {QElemPtr qLink;__int16 qType;__int16 ioTrap;Ptr ioCmdAddr;IOCompletionUPP ioCompletion;volatile OSErr ioResult;StringPtr ioNamePtr;__int16 ioVRefNum;unsigned int ioXVersion;__int16 ioVolIndex;unsigned int ioVCrDate;unsigned int ioVLsMod;__int16 ioVAtrb;unsigned __int16 ioVNmFls;unsigned __int16 ioVBitMap;unsigned __int16 ioAllocPtr;unsigned __int16 ioVNmAlBlks;unsigned int ioVAlBlkSiz;unsigned int ioVClpSiz;unsigned __int16 ioAlBlSt;unsigned int ioVNxtCNID;unsigned __int16 ioVFrBlk;unsigned __int16 ioVSigWord;__int16 ioVDrvInfo;__int16 ioVDRefNum;__int16 ioVFSID;unsigned int ioVBkUp;__int16 ioVSeqNum;unsigned int ioVWrCnt;unsigned int ioVFilCnt;unsigned int ioVDirCnt;int ioVFndrInfo[8];UInt64 ioVTotalBytes;UInt64 ioVFreeBytes;};
typedef XVolumeParam *XVolumeParamPtr;
struct Zone {Ptr bkLim;Ptr purgePtr;Ptr hFstFree;int zcbFree;GrowZoneUPP gzProc;__int16 moreMast;__int16 flags;__int16 cntRel;__int16 maxRel;__int16 cntNRel;SInt8 heapType;SInt8 unused;__int16 cntEmpty;__int16 cntHandles;int minCBFree;PurgeUPP purgeProc;Ptr sparePtr;Ptr allocPtr;__int16 heapData;};
typedef SInt16 ZoomAcceleration;
enum _CGCommonWindowLevelKey {kCGBaseWindowLevelKey = 0x0,kCGMinimumWindowLevelKey = 0x1,kCGDesktopWindowLevelKey = 0x2,kCGBackstopMenuLevelKey = 0x3,kCGNormalWindowLevelKey = 0x4,kCGFloatingWindowLevelKey = 0x5,kCGTornOffMenuWindowLevelKey = 0x6,kCGDockWindowLevelKey = 0x7,kCGMainMenuWindowLevelKey = 0x8,kCGStatusWindowLevelKey = 0x9,kCGModalPanelWindowLevelKey = 0xA,kCGPopUpMenuWindowLevelKey = 0xB,kCGDraggingWindowLevelKey = 0xC,kCGScreenSaverWindowLevelKey = 0xD,kCGMaximumWindowLevelKey = 0xE,kCGOverlayWindowLevelKey = 0xF,kCGHelpWindowLevelKey = 0x10,kCGUtilityWindowLevelKey = 0x11,kCGDesktopIconWindowLevelKey = 0x12,kCGCursorWindowLevelKey = 0x13,kCGNumberOfWindowLevelKeys = 0x14,};
struct _CGDeviceByteColor {CGByteValue red;CGByteValue green;CGByteValue blue;};
struct _CGDeviceColor {float red;float green;float blue;};
enum _CGError {kCGErrorSuccess = 0x0,kCGErrorFirst = 0x3E8,kCGErrorFailure = 0x3E8,kCGErrorIllegalArgument = 0x3E9,kCGErrorInvalidConnection = 0x3EA,kCGErrorInvalidContext = 0x3EB,kCGErrorCannotComplete = 0x3EC,kCGErrorNameTooLong = 0x3ED,kCGErrorNotImplemented = 0x3EE,kCGErrorRangeCheck = 0x3EF,kCGErrorTypeCheck = 0x3F0,kCGErrorNoCurrentPoint = 0x3F1,kCGErrorInvalidOperation = 0x3F2,kCGErrorNoneAvailable = 0x3F3,kCGErrorApplicationRequiresNewerSystem = 0x3F7,kCGErrorApplicationNotPermittedToExecute = 0x3F8,kCGErrorLast = 0x3F7,};
typedef struct $3D973CA059C56EDCB53F204E75D22A4F _RuneEntry;
typedef struct $D03EAABF4B73BA203F60C8CE80978D99 _RuneLocale;
typedef struct $A28B60B4E296EA201CF19C8525D87881 _RuneRange;
enum __CFByteOrder {CFByteOrderUnknown = 0x0,CFByteOrderLittleEndian = 0x1,CFByteOrderBigEndian = 0x2,};
typedef void *__builtin_va_list;
typedef __builtin_va_list __gnuc_va_list;
typedef union $149468D43E4B0BB405DED2721C573480 __mbstate_t;
struct __sFILE {unsigned __int8 *_p;int _r;int _w;__int16 _flags;__int16 _file;struct __sbuf _bf;int _lbfsize;void *_cookie;int (__fastcall *_close)(void *);int (__fastcall *_read)(void *, char *, int);fpos_t (__fastcall *_seek)(void *, fpos_t, int);int (__fastcall *_write)(void *, const char *, int);struct __sbuf _ub;unsigned __int8 *_up;int _ur;unsigned __int8 _ubuf[3];unsigned __int8 _nbuf[1];struct __sbuf _lb;int _blksize;fpos_t _offset;};
struct __sbuf {unsigned __int8 *_base;int _size;};
struct __sigaction {union __sigaction_u __sigaction_u;void (__fastcall *sa_tramp)(void *, int, int, siginfo_t *, void *);sigset_t sa_mask;int sa_flags;};
union __sigaction_u {void (__fastcall *__sa_handler)(int);void (__fastcall *__sa_sigaction)(int, struct __siginfo *, void *);};
struct __siginfo {int si_signo;int si_errno;int si_code;int si_pid;unsigned int si_uid;int si_status;void *si_addr;union sigval si_value;int si_band;int pad[7];};
typedef struct _complx _complex;
struct _complx {double Real;double Imag;};
struct _jmp_buf {struct sigcontext sigcontext;unsigned int vmask;unsigned int vreg[128];};
struct _opaque_pthread_attr_t {int sig;char opaque[36];};
struct _opaque_pthread_cond_t {int sig;char opaque[24];};
struct _opaque_pthread_condattr_t {int sig;char opaque[4];};
struct _opaque_pthread_mutex_t {int sig;char opaque[40];};
struct _opaque_pthread_mutexattr_t {int sig;char opaque[8];};
struct _opaque_pthread_rwlock_t {int sig;char opaque[124];};
struct _opaque_pthread_rwlockattr_t {int sig;char opaque[12];};
struct _opaque_pthread_t {int sig;struct _pthread_handler_rec *cleanup_stack;char opaque[596];};
struct _pthread_handler_rec {void (__fastcall *routine)(void *);void *arg;struct _pthread_handler_rec *next;};
typedef alarm_t alarm_port_t;
typedef mach_port_t alarm_t;
typedef int alarm_type_t;
struct bandinfo {unsigned __int8 bi_pri;char pad1;SInt32 bi_flag;};
typedef Boolean boolean_p;
typedef int boolean_t;
typedef mach_port_t bootstrap_t;
typedef char *caddr_t;
typedef ccntTokenRecPtr *ccntTokenRecHandle;
typedef ccntTokenRecord *ccntTokenRecPtr;
struct ccntTokenRecord {DescType tokenClass;AEDesc token;};
typedef SInt8 char_p;
typedef int *clock_attr_t;
typedef clock_ctrl_t clock_ctrl_port_t;
typedef mach_port_t clock_ctrl_t;
typedef int clock_flavor_t;
typedef int clock_id_t;
typedef mach_port_t clock_reply_t;
typedef int clock_res_t;
typedef clock_serv_t clock_serv_port_t;
typedef mach_port_t clock_serv_t;
typedef unsigned int clock_t;
typedef integer_t cpu_subtype_t;
typedef integer_t cpu_type_t;
typedef int32_t daddr_t;
struct decform {char style;char unused;__int16 digits;};
struct decimal {char sgn;char unused;__int16 exp;struct decimal::$C830CFACACF0F7919EAB89789DAADF8C sig;};
struct decimal::$C830CFACACF0F7919EAB89789DAADF8C {unsigned __int8 length;unsigned __int8 text[36];unsigned __int8 unused;};
typedef int32_t dev_t;
typedef struct $979FA3DE6ECCF956231BFC297C4278E6 div_t;
typedef double double_t;
typedef vm_offset_t *emulation_vector_t;
struct exception {int type;char *name;double arg1;double arg2;double retval;};
typedef exception_behavior_t *exception_behavior_array_t;
typedef int exception_behavior_t;
typedef integer_t *exception_data_t;
typedef integer_t exception_data_type_t;
typedef thread_state_flavor_t *exception_flavor_array_t;
typedef exception_handler_t *exception_handler_array_t;
typedef mach_port_t exception_handler_t;
typedef exception_mask_t *exception_mask_array_t;
typedef unsigned int exception_mask_t;
typedef exception_handler_array_t exception_port_arrary_t;
typedef mach_port_t *exception_port_array_t;
typedef exception_handler_t exception_port_t;
typedef int exception_type_t;
typedef Float80 extended80;
typedef Float96 extended96;
typedef int32_t fd_mask;
struct fd_set {fd_mask fds_bits[32];};
enum fdversion {fdlibm_ieee = 0xFFFFFFFF,fdlibm_svid = 0x0,fdlibm_xopen = 0x1,fdlibm_posix = 0x2,};
typedef int fenv_t;
typedef int fexcept_t;
typedef u_int32_t fixpt_t;
typedef float float_t;
typedef off_t fpos_t;
typedef u_int32_t gid_t;
struct host_basic_info {integer_t max_cpus;integer_t avail_cpus;vm_size_t memory_size;cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;};
typedef struct host_basic_info host_basic_info_data_t;
typedef struct host_basic_info *host_basic_info_t;
struct host_cpu_load_info {unsigned int cpu_ticks[4];};
typedef struct host_cpu_load_info host_cpu_load_info_data_t;
typedef struct host_cpu_load_info *host_cpu_load_info_t;
typedef integer_t host_flavor_t;
typedef integer_t host_info_data_t[1024];
typedef integer_t *host_info_t;
struct host_load_info {integer_t avenrun[3];integer_t mach_factor[3];};
typedef struct host_load_info host_load_info_data_t;
typedef struct host_load_info *host_load_info_t;
typedef host_t host_name_port_t;
typedef host_t host_name_t;
struct host_priority_info {integer_t kernel_priority;integer_t system_priority;integer_t server_priority;integer_t user_priority;integer_t depress_priority;integer_t idle_priority;integer_t minimum_priority;integer_t maximum_priority;};
typedef struct host_priority_info host_priority_info_data_t;
typedef struct host_priority_info *host_priority_info_t;
typedef mach_port_t host_priv_t;
struct host_sched_info {integer_t min_timeout;integer_t min_quantum;};
typedef struct host_sched_info host_sched_info_data_t;
typedef struct host_sched_info *host_sched_info_t;
typedef mach_port_t host_security_t;
typedef mach_port_t host_t;
typedef u_int32_t in_addr_t;
typedef u_int16_t in_port_t;
typedef u_int32_t ino_t;
typedef __int16 int16_t;
typedef int int32_t;
typedef __int64 int64_t;
typedef signed __int8 int8_t;
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef int8_t int_fast8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef int8_t int_least8_t;
typedef int int_t;
typedef int integer_t;
typedef __int64 intmax_t;
typedef int intptr_t;
typedef natural_t io_async_ref_t[8];
typedef char *io_buf_ptr_t;
typedef io_object_t io_connect_t;
typedef io_object_t io_enumerator_t;
typedef io_object_t io_iterator_t;
typedef mach_port_t io_master_t;
typedef char io_name_t[128];
typedef mach_port_t io_object_t;
typedef io_object_t io_registry_entry_t;
typedef int io_scalar_inband_t[16];
typedef io_object_t io_service_t;
typedef char io_string_t[512];
typedef char io_struct_inband_t[4096];
typedef ipc_space_t ipc_space_port_t;
typedef mach_port_t ipc_space_t;
typedef int jmp_buf[192];
typedef int kern_return_t;
typedef char kernel_boot_info_t[4096];
struct kernel_resource_sizes {vm_size_t task;vm_size_t thread;vm_size_t port;vm_size_t memory_region;vm_size_t memory_object;};
typedef struct kernel_resource_sizes kernel_resource_sizes_data_t;
typedef struct kernel_resource_sizes *kernel_resource_sizes_t;
typedef char kernel_version_t[512];
typedef int key_t;
typedef void *kmod_args_t;
typedef int kmod_control_flavor_t;
struct kmod_generic_cmd {int type;char data[1];};
typedef struct kmod_generic_cmd kmod_generic_cmd_t;
struct kmod_info {struct kmod_info *next;int info_version;int id;char name[64];char version[64];int reference_count;kmod_reference_t *reference_list;vm_address_t address;vm_size_t size;vm_size_t hdr_size;kmod_start_func_t *start;kmod_stop_func_t *stop;};
typedef kmod_info_t *kmod_info_array_t;
typedef struct kmod_info kmod_info_t;
struct kmod_load_extension_cmd {int type;char name[64];};
typedef struct kmod_load_extension_cmd kmod_load_extension_cmd_t;
struct kmod_load_with_dependencies_cmd {int type;char name[64];char dependencies[1][64];};
typedef struct kmod_load_with_dependencies_cmd kmod_load_with_dependencies_cmd_t;
struct kmod_reference {struct kmod_reference *next;struct kmod_info *info;};
typedef struct kmod_reference kmod_reference_t;
typedef kern_return_t __fastcall kmod_start_func_t(struct kmod_info *ki, void *data);
typedef kern_return_t __fastcall kmod_stop_func_t(struct kmod_info *ki, void *data);
typedef int kmod_t;
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;};
typedef struct $979FA3DE6ECCF956231BFC297C4278E6 ldiv_t;
typedef ledger_t *ledger_array_t;
typedef integer_t ledger_item_t;
typedef ledger_array_t ledger_port_array_t;
typedef ledger_t ledger_port_t;
typedef mach_port_t ledger_t;
typedef lock_set_t lock_set_port_t;
typedef mach_port_t lock_set_t;
struct log_ctl {__int16 mid;__int16 sid;char level;char pad1;__int16 flags;int ltime;int ttime;SInt32 seq_no;};
typedef mach_error_t (*mach_error_fn_t)(void);
typedef kern_return_t mach_error_t;
typedef struct $466E19AC50622C269D9BCEE6753F9E61 mach_msg_base_t;
typedef unsigned int mach_msg_bits_t;
typedef struct $E97267E034E71568AADDE042A76192B8 mach_msg_body_t;
typedef unsigned int mach_msg_copy_options_t;
typedef union $94CB200B36B7778DB0012FD0C2F25E9C mach_msg_descriptor_t;
typedef unsigned int mach_msg_descriptor_type_t;
typedef struct $9AA8814A56848052027B4042AE3CFED4 mach_msg_empty_rcv_t;
typedef struct $15CE29027F05B8BB8B125DB29B7163BF mach_msg_empty_send_t;
typedef union $2345F6273F81C99369AD5C0E36D3FD0F mach_msg_empty_t;
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;
typedef struct $71210C31999B47ECFCA79A4496892A9D mach_msg_header_t;
typedef integer_t mach_msg_id_t;
typedef struct $0FB16B1A38E2E40FBD3F3EF96804B817 mach_msg_ool_descriptor_t;
typedef struct $0077D5C34ADF0F1ACF745598F18E4EA6 mach_msg_ool_ports_descriptor_t;
typedef integer_t mach_msg_option_t;
typedef integer_t mach_msg_options_t;
typedef struct $BAA0E1D2BF5986DFAC16C10809EF9355 mach_msg_port_descriptor_t;
typedef kern_return_t mach_msg_return_t;
typedef struct $5694E020026D0F35B79D3FDB301355DE mach_msg_security_trailer_t;
typedef struct $E0DB54FB1236B40874C7451A4BD28FF5 mach_msg_seqno_trailer_t;
typedef natural_t mach_msg_size_t;
typedef natural_t mach_msg_timeout_t;
typedef unsigned int mach_msg_trailer_size_t;
typedef struct $F105F10DE5C66ECF2E7E726999936688 mach_msg_trailer_t;
typedef unsigned int mach_msg_trailer_type_t;
typedef struct $3CE6EFCC61EAE53AE9BFA212F91A7D13 mach_msg_type_descriptor_t;
typedef unsigned int mach_msg_type_name_t;
typedef natural_t mach_msg_type_number_t;
typedef natural_t mach_msg_type_size_t;
typedef port_t *mach_port_array_t;
typedef integer_t mach_port_delta_t;
typedef int mach_port_flavor_t;
typedef integer_t *mach_port_info_t;
struct mach_port_limits {mach_port_msgcount_t mpl_qlimit;};
typedef struct mach_port_limits mach_port_limits_t;
typedef natural_t mach_port_mscount_t;
typedef natural_t mach_port_msgcount_t;
typedef mach_port_name_t *mach_port_name_array_t;
typedef port_name_t mach_port_name_t;
struct mach_port_qos {__int32 name : 1;__int32 prealloc : 1;__int32 pad1 : 30;natural_t len;};
typedef struct mach_port_qos mach_port_qos_t;
typedef natural_t mach_port_right_t;
typedef natural_t mach_port_rights_t;
typedef natural_t mach_port_seqno_t;
typedef unsigned int mach_port_srights_t;
struct mach_port_status {mach_port_name_t mps_pset;mach_port_seqno_t mps_seqno;mach_port_mscount_t mps_mscount;mach_port_msgcount_t mps_qlimit;mach_port_msgcount_t mps_msgcount;mach_port_rights_t mps_sorights;boolean_t mps_srights;boolean_t mps_pdrequest;boolean_t mps_nsrequest;unsigned int mps_flags;};
typedef struct mach_port_status mach_port_status_t;
typedef port_t mach_port_t;
typedef mach_port_type_t *mach_port_type_array_t;
typedef natural_t mach_port_type_t;
typedef natural_t mach_port_urefs_t;
struct mach_timespec {unsigned int tv_sec;clock_res_t tv_nsec;};
typedef struct mach_timespec mach_timespec_t;
struct machine_info {integer_t major_version;integer_t minor_version;integer_t max_cpus;integer_t avail_cpus;vm_size_t memory_size;};
typedef struct machine_info machine_info_data_t;
typedef struct machine_info *machine_info_t;
struct mapped_time_value {integer_t seconds;integer_t microseconds;integer_t check_seconds;};
typedef struct mapped_time_value mapped_time_value_t;
typedef mach_port_t mem_entry_name_port_t;
typedef memory_object_t *memory_object_array_t;
struct memory_object_attr_info {memory_object_copy_strategy_t copy_strategy;vm_offset_t cluster_size;boolean_t may_cache_object;boolean_t temporary;};
typedef struct memory_object_attr_info memory_object_attr_info_data_t;
typedef struct memory_object_attr_info *memory_object_attr_info_t;
struct memory_object_behave_info {memory_object_copy_strategy_t copy_strategy;boolean_t temporary;boolean_t invalidate;boolean_t silent_overwrite;boolean_t advisory_pageout;};
typedef struct memory_object_behave_info memory_object_behave_info_data_t;
typedef struct memory_object_behave_info *memory_object_behave_info_t;
typedef mach_port_t memory_object_control_t;
typedef int memory_object_copy_strategy_t;
typedef mach_port_t memory_object_default_t;
typedef int memory_object_flavor_t;
typedef int memory_object_info_data_t[1024];
typedef int *memory_object_info_t;
typedef mach_port_t memory_object_name_t;
typedef unsigned __int64 memory_object_offset_t;
struct memory_object_perf_info {vm_size_t cluster_size;boolean_t may_cache;};
typedef struct memory_object_perf_info memory_object_perf_info_data_t;
typedef struct memory_object_perf_info *memory_object_perf_info_t;
typedef int memory_object_return_t;
typedef unsigned __int64 memory_object_size_t;
typedef mach_port_t memory_object_t;
typedef union $78AF60B7EAAC2BB1C96EBCEF432CA4FF mmcr0_t;
typedef union $77272609D9A6BB912C7C0540469DE8CB mmcr1_t;
typedef union $C18A6CE957EEA4FD62416C6C10A8EE86 mmcr2_t;
typedef u_int16_t mode_t;
typedef unsigned int natural_t;
typedef u_int16_t nlink_t;
typedef quad_t off_t;
struct old_memory_object_attr_info {boolean_t object_ready;boolean_t may_cache;memory_object_copy_strategy_t copy_strategy;};
typedef struct old_memory_object_attr_info old_memory_object_attr_info_data_t;
typedef struct old_memory_object_attr_info *old_memory_object_attr_info_t;
struct old_memory_object_behave_info {memory_object_copy_strategy_t copy_strategy;boolean_t temporary;boolean_t invalidate;};
typedef struct old_memory_object_behave_info old_memory_object_behave_info_data_t;
typedef struct old_memory_object_behave_info *old_memory_object_behave_info_t;
typedef Picker picker;
typedef int32_t pid_t;
struct pmap_statistics {integer_t resident_count;integer_t wired_count;};
typedef struct pmap_statistics *pmap_statistics_t;
typedef union $CA1DD0B65E3A4ADE6E56E85377B62761 pmcn_t;
typedef vm_offset_t pointer_t;
typedef struct policy_bases policy_base_data_t;
typedef integer_t *policy_base_t;
struct policy_bases {policy_timeshare_base_data_t ts;policy_rr_base_data_t rr;policy_fifo_base_data_t fifo;};
struct policy_fifo_base {integer_t base_priority;};
typedef struct policy_fifo_base policy_fifo_base_data_t;
typedef struct policy_fifo_base *policy_fifo_base_t;
struct policy_fifo_info {integer_t max_priority;integer_t base_priority;boolean_t depressed;integer_t depress_priority;};
typedef struct policy_fifo_info policy_fifo_info_data_t;
typedef struct policy_fifo_info *policy_fifo_info_t;
struct policy_fifo_limit {integer_t max_priority;};
typedef struct policy_fifo_limit policy_fifo_limit_data_t;
typedef struct policy_fifo_limit *policy_fifo_limit_t;
typedef struct policy_infos policy_info_data_t;
typedef integer_t *policy_info_t;
struct policy_infos {policy_timeshare_info_data_t ts;policy_rr_info_data_t rr;policy_fifo_info_data_t fifo;};
typedef struct policy_limits policy_limit_data_t;
typedef integer_t *policy_limit_t;
struct policy_limits {policy_timeshare_limit_data_t ts;policy_rr_limit_data_t rr;policy_fifo_limit_data_t fifo;};
struct policy_rr_base {integer_t base_priority;integer_t quantum;};
typedef struct policy_rr_base policy_rr_base_data_t;
typedef struct policy_rr_base *policy_rr_base_t;
struct policy_rr_info {integer_t max_priority;integer_t base_priority;integer_t quantum;boolean_t depressed;integer_t depress_priority;};
typedef struct policy_rr_info policy_rr_info_data_t;
typedef struct policy_rr_info *policy_rr_info_t;
struct policy_rr_limit {integer_t max_priority;};
typedef struct policy_rr_limit policy_rr_limit_data_t;
typedef struct policy_rr_limit *policy_rr_limit_t;
typedef int policy_t;
struct policy_timeshare_base {integer_t base_priority;};
typedef struct policy_timeshare_base policy_timeshare_base_data_t;
typedef struct policy_timeshare_base *policy_timeshare_base_t;
struct policy_timeshare_info {integer_t max_priority;integer_t base_priority;integer_t cur_priority;boolean_t depressed;integer_t depress_priority;};
typedef struct policy_timeshare_info policy_timeshare_info_data_t;
typedef struct policy_timeshare_info *policy_timeshare_info_t;
struct policy_timeshare_limit {integer_t max_priority;};
typedef struct policy_timeshare_limit policy_timeshare_limit_data_t;
typedef struct policy_timeshare_limit *policy_timeshare_limit_t;
typedef port_name_t *port_name_array_t;
typedef natural_t port_name_t;
typedef port_name_t port_t;
struct ppc_exception_state {unsigned int dar;unsigned int dsisr;unsigned int exception;unsigned int pad0;unsigned int pad1[4];};
typedef struct ppc_exception_state ppc_exception_state_t;
struct ppc_float_state {double fpregs[32];unsigned int fpscr_pad;unsigned int fpscr;};
typedef struct ppc_float_state ppc_float_state_t;
typedef struct ppc_thread_state ppc_saved_state_t;
struct ppc_thread_state {unsigned int srr0;unsigned int srr1;unsigned int r0;unsigned int r1;unsigned int r2;unsigned int r3;unsigned int r4;unsigned int r5;unsigned int r6;unsigned int r7;unsigned int r8;unsigned int r9;unsigned int r10;unsigned int r11;unsigned int r12;unsigned int r13;unsigned int r14;unsigned int r15;unsigned int r16;unsigned int r17;unsigned int r18;unsigned int r19;unsigned int r20;unsigned int r21;unsigned int r22;unsigned int r23;unsigned int r24;unsigned int r25;unsigned int r26;unsigned int r27;unsigned int r28;unsigned int r29;unsigned int r30;unsigned int r31;unsigned int cr;unsigned int xer;unsigned int lr;unsigned int ctr;unsigned int mq;unsigned int vrsave;};
typedef struct ppc_thread_state ppc_thread_state_t;
struct ppc_vector_state {unsigned int save_vr[32][4];unsigned int save_vscr[4];unsigned int save_pad5[4];unsigned int save_vrvalid;unsigned int save_pad6[7];};
typedef struct ppc_vector_state ppc_vector_state_t;
typedef processor_t *processor_array_t;
struct processor_basic_info {cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;boolean_t running;int slot_num;boolean_t is_master;};
typedef struct processor_basic_info processor_basic_info_data_t;
typedef struct processor_basic_info *processor_basic_info_t;
struct processor_control_cmd {integer_t cmd_op;cpu_type_t cmd_cpu_type;cpu_subtype_t cmd_cpu_subtype;union processor_control_data u;};
typedef struct processor_control_cmd processor_control_cmd_data_t;
typedef struct processor_control_cmd *processor_control_cmd_t;
union processor_control_data {processor_pm_regs_data_t cmd_pm_regs[3];};
struct processor_cpu_load_info {unsigned int cpu_ticks[4];};
typedef struct processor_cpu_load_info processor_cpu_load_info_data_t;
typedef struct processor_cpu_load_info *processor_cpu_load_info_t;
typedef int processor_flavor_t;
typedef integer_t *processor_info_array_t;
typedef integer_t processor_info_data_t[1024];
typedef integer_t *processor_info_t;
struct processor_pm_regs {union processor_pm_regs::$33752F506360BBDC4DE7957982C8B4BB u;pmcn_t pmc[2];};
union processor_pm_regs::$33752F506360BBDC4DE7957982C8B4BB {mmcr0_t mmcr0;mmcr1_t mmcr1;mmcr2_t mmcr2;};
typedef struct processor_pm_regs processor_pm_regs_data_t;
typedef struct processor_pm_regs *processor_pm_regs_t;
typedef processor_array_t processor_port_array_t;
typedef processor_t processor_port_t;
typedef processor_set_t *processor_set_array_t;
struct processor_set_basic_info {int processor_count;int default_policy;};
typedef struct processor_set_basic_info processor_set_basic_info_data_t;
typedef struct processor_set_basic_info *processor_set_basic_info_t;
typedef processor_set_t processor_set_control_port_t;
typedef mach_port_t processor_set_control_t;
typedef int processor_set_flavor_t;
typedef integer_t processor_set_info_data_t[1024];
typedef integer_t *processor_set_info_t;
struct processor_set_load_info {int task_count;int thread_count;integer_t load_average;integer_t mach_factor;};
typedef struct processor_set_load_info processor_set_load_info_data_t;
typedef struct processor_set_load_info *processor_set_load_info_t;
typedef processor_set_t *processor_set_name_array_t;
typedef processor_set_array_t processor_set_name_port_array_t;
typedef processor_set_t processor_set_name_port_t;
typedef processor_set_t processor_set_name_t;
typedef processor_set_t processor_set_port_t;
typedef mach_port_t processor_set_t;
typedef mach_port_t processor_t;
typedef unsigned int processor_temperature_data_t;
typedef unsigned int *processor_temperature_t;
typedef struct _opaque_pthread_attr_t pthread_attr_t;
typedef struct _opaque_pthread_cond_t pthread_cond_t;
typedef struct _opaque_pthread_condattr_t pthread_condattr_t;
typedef unsigned int pthread_key_t;
typedef struct _opaque_pthread_mutex_t pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t pthread_mutexattr_t;
typedef struct $B817C4E7F216D35F032A11C86EB37440 pthread_once_t;
typedef struct _opaque_pthread_rwlock_t pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t pthread_rwlockattr_t;
typedef struct _opaque_pthread_t *pthread_t;
typedef int ptrdiff_t;
typedef quad_t *qaddr_t;
typedef int64_t quad_t;
typedef unsigned __int16 registerSelectorType;
typedef int32_t register_t;
typedef enum $4EE0FB99968ADB58B01C3A33A60FE053 regs_saved_t;
typedef __int16 relop;
typedef quad_t rlim_t;
typedef int rune_t;
struct scalerPrerequisiteItem {int enumeration;int size;unsigned __int8 name[1];};
struct scalerStream {const void *streamRefCon;const char *targetVersion;scalerStreamTypeFlag types;scalerStreamAction action;unsigned int memorySize;int variationCount;const void *variations;union scalerStream::$3BD5281E5B8DED38832521E7293C9B21 info;};
union scalerStream::$3BD5281E5B8DED38832521E7293C9B21 {struct scalerStream::$3BD5281E5B8DED38832521E7293C9B21::$65A60A06085F342E81475393380B3221 font;struct scalerStream::$3BD5281E5B8DED38832521E7293C9B21::$77A23CFCB1DB8DCE08B47AE085A2CE14 prerequisiteQuery;int prerequisiteItem;int variationQueryResult;};
struct scalerStream::$3BD5281E5B8DED38832521E7293C9B21::$65A60A06085F342E81475393380B3221 {const unsigned __int16 *encoding;int *glyphBits;char *name;};
struct scalerStream::$3BD5281E5B8DED38832521E7293C9B21::$77A23CFCB1DB8DCE08B47AE085A2CE14 {int size;void *list;};
typedef int scalerStreamAction;
struct scalerStreamData {int hexFlag;int byteCount;const void *data;};
typedef unsigned int scalerStreamTypeFlag;
typedef struct $0BA82F063C392BF02AF0AA599B603A12 security_token_t;
typedef int32_t segsz_t;
typedef semaphore_t semaphore_port_t;
typedef mach_port_t semaphore_t;
struct sfntCMapEncoding {UInt16 platformID;UInt16 scriptID;UInt32 offset;};
struct sfntCMapExtendedSubHeader {UInt16 format;UInt16 reserved;UInt32 length;UInt32 language;};
struct sfntCMapHeader {UInt16 version;UInt16 numTables;sfntCMapEncoding encoding[1];};
struct sfntCMapSubHeader {UInt16 format;UInt16 length;UInt16 languageID;};
struct sfntDescriptorHeader {Fixed version;SInt32 descriptorCount;sfntFontDescriptor descriptor[1];};
struct sfntDirectory {FourCharCode format;UInt16 numOffsets;UInt16 searchRange;UInt16 entrySelector;UInt16 rangeShift;sfntDirectoryEntry table[1];};
struct sfntDirectoryEntry {FourCharCode tableTag;UInt32 checkSum;UInt32 offset;UInt32 length;};
struct sfntFeatureHeader {SInt32 version;UInt16 featureNameCount;UInt16 featureSetCount;SInt32 reserved;sfntFeatureName names[1];sfntFontFeatureSetting settings[1];sfntFontRunFeature runs[1];};
struct sfntFeatureName {UInt16 featureType;UInt16 settingCount;SInt32 offsetToSettings;UInt16 featureFlags;UInt16 nameID;};
struct sfntFontDescriptor {FourCharCode name;Fixed value;};
struct sfntFontFeatureSetting {UInt16 setting;UInt16 nameID;};
struct sfntFontRunFeature {UInt16 featureType;UInt16 setting;};
struct sfntInstance {SInt16 nameID;SInt16 flags;Fixed coord[1];};
struct sfntNameHeader {UInt16 format;UInt16 count;UInt16 stringOffset;sfntNameRecord rec[1];};
struct sfntNameRecord {UInt16 platformID;UInt16 scriptID;UInt16 languageID;UInt16 nameID;UInt16 length;UInt16 offset;};
struct sfntVariationAxis {FourCharCode axisTag;Fixed minValue;Fixed defaultValue;Fixed maxValue;SInt16 flags;SInt16 nameID;};
struct sfntVariationHeader {Fixed version;UInt16 offsetToData;UInt16 countSizePairs;UInt16 axisCount;UInt16 axisSize;UInt16 instanceCount;UInt16 instanceSize;sfntVariationAxis axis[1];sfntInstance instance[1];};
typedef SInt16 short_p;
typedef int sig_atomic_t;
typedef void (__fastcall *sig_t)(int);
struct sigaction {union __sigaction_u __sigaction_u;sigset_t sa_mask;int sa_flags;};
struct sigaltstack {char *ss_sp;int ss_size;int ss_flags;};
struct sigcontext {int sc_onstack;int sc_mask;int sc_ir;int sc_psw;int sc_sp;void *sc_regs;};
typedef struct __siginfo siginfo_t;
typedef int sigjmp_buf[193];
typedef unsigned int sigset_t;
struct sigstack {char *ss_sp;int ss_onstack;};
union sigval {int sigval_int;void *sigval_ptr;};
struct sigvec {void (__fastcall *sv_handler)(int);int sv_mask;int sv_flags;};
typedef unsigned int size_t;
typedef int sleep_type_t;
typedef unsigned int space_t;
typedef int ssize_t;
typedef struct sigaltstack stack_t;
struct str_list {SInt32 sl_nmods;str_mlist *sl_modlist;};
struct str_mlist {char l_name[32];};
struct strbuf {SInt32 maxlen;SInt32 len;char *buf;};
struct strfdinsert {strbuf ctlbuf;strbuf databuf;int flags;int fildes;SInt32 offset;};
struct strioctl {SInt32 ic_cmd;SInt32 ic_timout;SInt32 ic_len;char *ic_dp;};
struct strpeek {strbuf ctlbuf;strbuf databuf;int flags;};
struct strpmsg {strbuf ctlbuf;strbuf databuf;SInt32 band;int flags;};
struct strrecvfd {int fd;unsigned __int16 uid;unsigned __int16 gid;char fill[8];};
typedef int32_t swblk_t;
struct t_kpalive {SInt32 kp_onoff;SInt32 kp_timeout;};
struct t_linger {SInt32 l_onoff;SInt32 l_linger;};
typedef task_t *task_array_t;
struct task_basic_info {integer_t suspend_count;vm_size_t virtual_size;vm_size_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
typedef struct task_basic_info task_basic_info_data_t;
typedef struct task_basic_info *task_basic_info_t;
struct task_category_policy {task_role_t role;};
typedef struct task_category_policy task_category_policy_data_t;
typedef struct task_category_policy *task_category_policy_t;
struct task_events_info {integer_t faults;integer_t pageins;integer_t cow_faults;integer_t messages_sent;integer_t messages_received;integer_t syscalls_mach;integer_t syscalls_unix;integer_t csw;};
typedef struct task_events_info task_events_info_data_t;
typedef struct task_events_info *task_events_info_t;
typedef natural_t task_flavor_t;
typedef integer_t task_info_data_t[1024];
typedef integer_t *task_info_t;
typedef natural_t task_policy_flavor_t;
typedef integer_t *task_policy_t;
typedef task_array_t task_port_array_t;
typedef task_t task_port_t;
enum task_role {TASK_RENICED = 0xFFFFFFFF,TASK_UNSPECIFIED = 0x0,TASK_FOREGROUND_APPLICATION = 0x1,TASK_BACKGROUND_APPLICATION = 0x2,TASK_CONTROL_APPLICATION = 0x3,TASK_GRAPHICS_SERVER = 0x4,};
typedef enum task_role task_role_t;
typedef int task_special_port_t;
typedef mach_port_t task_t;
struct task_thread_times_info {time_value_t user_time;time_value_t system_time;};
typedef struct task_thread_times_info task_thread_times_info_data_t;
typedef struct task_thread_times_info *task_thread_times_info_t;
typedef thread_act_t *thread_act_array_t;
typedef thread_act_array_t thread_act_port_array_t;
typedef thread_act_t thread_act_port_t;
typedef mach_port_t thread_act_t;
typedef thread_t *thread_array_t;
struct thread_basic_info {time_value_t user_time;time_value_t system_time;integer_t cpu_usage;policy_t policy;integer_t run_state;integer_t flags;integer_t suspend_count;integer_t sleep_time;};
typedef struct thread_basic_info thread_basic_info_data_t;
typedef struct thread_basic_info *thread_basic_info_t;
struct thread_extended_policy {boolean_t timeshare;};
typedef struct thread_extended_policy thread_extended_policy_data_t;
typedef struct thread_extended_policy *thread_extended_policy_t;
typedef natural_t thread_flavor_t;
typedef integer_t thread_info_data_t[1024];
typedef integer_t *thread_info_t;
typedef natural_t thread_policy_flavor_t;
typedef integer_t *thread_policy_t;
typedef thread_array_t thread_port_array_t;
typedef thread_t thread_port_t;
struct thread_precedence_policy {integer_t importance;};
typedef struct thread_precedence_policy thread_precedence_policy_data_t;
typedef struct thread_precedence_policy *thread_precedence_policy_t;
struct thread_standard_policy {natural_t no_data;};
typedef struct thread_standard_policy thread_standard_policy_data_t;
typedef struct thread_standard_policy *thread_standard_policy_t;
typedef int thread_state_data_t[144];
typedef thread_state_flavor_t *thread_state_flavor_array_t;
typedef int thread_state_flavor_t;
typedef natural_t *thread_state_t;
typedef mach_port_t thread_t;
struct thread_time_constraint_policy {uint32_t period;uint32_t computation;uint32_t constraint;boolean_t preemptible;};
typedef struct thread_time_constraint_policy thread_time_constraint_policy_data_t;
typedef struct thread_time_constraint_policy *thread_time_constraint_policy_t;
typedef int time_t;
struct time_value {integer_t seconds;integer_t microseconds;};
typedef struct time_value time_value_t;
struct timespec {time_t tv_sec;int tv_nsec;};
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;int tm_gmtoff;char *tm_zone;};
struct trace_ids {__int16 ti_mid;__int16 ti_sid;char ti_level;};
typedef unsigned __int8 u_char;
typedef unsigned int u_int;
typedef unsigned __int16 u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned __int64 u_int64_t;
typedef unsigned __int8 u_int8_t;
typedef unsigned int u_long;
typedef u_int64_t u_quad_t;
typedef unsigned __int16 u_short;
typedef UInt8 uchar_p;
typedef u_int32_t uid_t;
typedef unsigned int uint;
typedef u_int16_t uint16_t;
typedef u_int32_t uint32_t;
typedef u_int64_t uint64_t;
typedef u_int8_t uint8_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
typedef uint8_t uint_fast8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;
typedef uint8_t uint_least8_t;
typedef unsigned int uint_t;
typedef unsigned __int64 uintmax_t;
typedef unsigned int uintptr_t;
struct upl_page_info {vm_offset_t phys_addr;unsigned __int32 pageout : 1;unsigned __int32 absent : 1;unsigned __int32 dirty : 1;unsigned __int32 precious : 1;unsigned __int32 device : 1;};
typedef upl_page_info_t *upl_page_info_array_t;
typedef struct upl_page_info upl_page_info_t;
typedef upl_page_info_array_t upl_page_list_ptr_t;
typedef mach_port_t upl_t;
typedef char *user_subsystem_t;
typedef unsigned __int16 ushort;
typedef UInt16 ushort_p;
typedef __gnuc_va_list va_list;
typedef vm_offset_t vm_address_t;
typedef int vm_behavior_t;
typedef unsigned int vm_inherit_t;
typedef unsigned int vm_machine_attribute_t;
typedef int vm_machine_attribute_val_t;
typedef mach_port_t vm_map_t;
typedef mach_port_t vm_named_entry_t;
typedef uint64_t vm_object_offset_t;
typedef natural_t vm_offset_t;
typedef int vm_prot_t;
struct vm_read_entry {vm_address_t address;vm_size_t size;};
typedef struct vm_read_entry vm_read_entry_t[256];
struct vm_region_basic_info {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;boolean_t shared;boolean_t reserved;vm_offset_t offset;vm_behavior_t behavior;unsigned __int16 user_wired_count;};
struct vm_region_basic_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;boolean_t shared;boolean_t reserved;vm_object_offset_t offset;vm_behavior_t behavior;unsigned __int16 user_wired_count;};
typedef struct vm_region_basic_info_64 *vm_region_basic_info_64_t;
typedef struct vm_region_basic_info_64 vm_region_basic_info_data_64_t;
typedef struct vm_region_basic_info vm_region_basic_info_data_t;
typedef struct vm_region_basic_info *vm_region_basic_info_t;
struct vm_region_extended_info {vm_prot_t protection;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned __int16 shadow_depth;unsigned __int8 external_pager;unsigned __int8 share_mode;};
typedef struct vm_region_extended_info vm_region_extended_info_data_t;
typedef struct vm_region_extended_info *vm_region_extended_info_t;
typedef int vm_region_flavor_t;
typedef int *vm_region_info_64_t;
typedef int vm_region_info_data_t[1024];
typedef int *vm_region_info_t;
typedef int *vm_region_recurse_info_64_t;
typedef int *vm_region_recurse_info_t;
struct vm_region_submap_info {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;vm_offset_t offset;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned __int16 shadow_depth;unsigned __int8 external_pager;unsigned __int8 share_mode;boolean_t is_submap;vm_behavior_t behavior;vm_offset_t object_id;unsigned __int16 user_wired_count;};
struct vm_region_submap_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;vm_object_offset_t offset;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned __int16 shadow_depth;unsigned __int8 external_pager;unsigned __int8 share_mode;boolean_t is_submap;vm_behavior_t behavior;vm_offset_t object_id;unsigned __int16 user_wired_count;};
typedef struct vm_region_submap_info_64 *vm_region_submap_info_64_t;
typedef struct vm_region_submap_info_64 vm_region_submap_info_data_64_t;
typedef struct vm_region_submap_info vm_region_submap_info_data_t;
typedef struct vm_region_submap_info *vm_region_submap_info_t;
struct vm_region_top_info {unsigned int obj_id;unsigned int ref_count;unsigned int private_pages_resident;unsigned int shared_pages_resident;unsigned __int8 share_mode;};
typedef struct vm_region_top_info vm_region_top_info_data_t;
typedef struct vm_region_top_info *vm_region_top_info_t;
typedef natural_t vm_size_t;
struct vm_statistics {integer_t free_count;integer_t active_count;integer_t inactive_count;integer_t wire_count;integer_t zero_fill_count;integer_t reactivations;integer_t pageins;integer_t pageouts;integer_t faults;integer_t cow_faults;integer_t lookups;integer_t hits;};
typedef struct vm_statistics vm_statistics_data_t;
typedef struct vm_statistics *vm_statistics_t;
typedef unsigned int vm_sync_t;
typedef mach_port_t vm_task_entry_t;
typedef void *voidPtr;
typedef int wchar_t;
struct wide {SInt32 hi;UInt32 lo;};
typedef xColorSpec xCSpecArray[1];
struct xColorSpec {__int16 value;RGBColor rgb;__int16 xalpha;};
typedef xColorSpec *xColorSpecPtr;

$D497865AB20A3AD87EEE5277CBD67E69 AAPNotCreatedErr;
$D497865AB20A3AD87EEE5277CBD67E69 AAPNotFoundErr;
MACRO_ACCESSOR ACCESSOR_CALLS_ARE_FUNCTIONS;
$65C805F25D863A90F2F9C5C002B33087 ACE2Type;
$65C805F25D863A90F2F9C5C002B33087 ACE8Type;
$28469C704570E78F5672067AEFAF4E88 ADSP_IOC_FORWARDRESET;
$1AB4B7535077720DAF8421305745D283 AF_8022;
$593B46DC079AF49552494FE1D647B04A AF_ATALK_DDP;
$593B46DC079AF49552494FE1D647B04A AF_ATALK_DDPNBP;
$593B46DC079AF49552494FE1D647B04A AF_ATALK_FAMILY;
$593B46DC079AF49552494FE1D647B04A AF_ATALK_MNODE;
$593B46DC079AF49552494FE1D647B04A AF_ATALK_NBP;
$61FB212774D778BFFB784AF83BE32359 AF_DNS;
MACRO_AF AF_INET;
$00A17738C60DB5C35B723D2BB0B9AA22 AIFCID;
$A4B72ADD56086550BC5D44C7D492D62F AIFCVersion1;
$00A17738C60DB5C35B723D2BB0B9AA22 AIFFID;
MACRO_TASK_NULL ALARM_NULL;
MACRO_ALRMTYPE ALRMTYPE;
$0A338F6E123203A5D1058BC421FC5D0B ANYMARK;
MACRO_LONG_MAX ARG_MAX;
$D497865AB20A3AD87EEE5277CBD67E69 ASDBadForkErr;
$D497865AB20A3AD87EEE5277CBD67E69 ASDBadHeaderErr;
$D497865AB20A3AD87EEE5277CBD67E69 ASDEntryNotFoundErr;
$28469C704570E78F5672067AEFAF4E88 ATALK_IOC_FULLSELFSEND;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_AARP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_ADSP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_ASP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_ATP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_DDP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_NBP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_PAP;
$988A8C1A267C34BA9DB25A6B979CB700 ATK_ZIP;
$1699EC0844F3EEA22797F03D827335E8 ATP_OPT_DATALEN;
$1699EC0844F3EEA22797F03D827335E8 ATP_OPT_RELTIMER;
$1699EC0844F3EEA22797F03D827335E8 ATP_OPT_REPLYCNT;
$1699EC0844F3EEA22797F03D827335E8 ATP_OPT_TRANID;
$00A17738C60DB5C35B723D2BB0B9AA22 AnnotationID;
$35C3FD2F79E4FCCC5D88667BC8D9CB34 AppleShareMediaType;
$00A17738C60DB5C35B723D2BB0B9AA22 ApplicationSpecificID;
$00A17738C60DB5C35B723D2BB0B9AA22 AudioRecordingID;
$00A17738C60DB5C35B723D2BB0B9AA22 AuthorID;
MACRO_BC BC_BASE_MAX;
MACRO_BC BC_DIM_MAX;
MACRO_BC BC_SCALE_MAX;
MACRO_BC BC_STRING_MAX;
MACRO_ENDIAN BIG_ENDIAN;
MACRO__IOFBF BUFSIZ;
MACRO_BUS BUS_ADRALN;
MACRO_BUS BUS_NOOP;
MACRO_BYTE BYTE_ORDER;
MACRO_BuildingOTForKernel BuildingOTForKernel;
MACRO_CLOCK CALENDAR_CLOCK;
MACRO_CALL CALL_NOT_IN_CARBON;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_CALLINFO;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_DTEADDRESS;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_DTEADDRESSTYPE;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_GETMISCINFO;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_IPIDLETIMER;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_REMINDERTIMER;
$DE490049644E7C6A8868423C628E99D7 CC_OPT_SERIALPORTNAME;
$15527A7957C35DDC42E8F9BAFCC21D16 CDEFNFnd;
__CFByteOrder CFByteOrderBigEndian;
__CFByteOrder CFByteOrderLittleEndian;
__CFByteOrder CFByteOrderUnknown;
$DBA047679F6933A588A9C46207FF8881 CFNotificationSuspensionBehaviorCoalesce;
$DBA047679F6933A588A9C46207FF8881 CFNotificationSuspensionBehaviorDeliverImmediately;
$DBA047679F6933A588A9C46207FF8881 CFNotificationSuspensionBehaviorDrop;
$DBA047679F6933A588A9C46207FF8881 CFNotificationSuspensionBehaviorHold;
$24C4D2618C8EA351116E5032FEAF8232 CGGlyphMax;
$24C4D2618C8EA351116E5032FEAF8232 CGGlyphMin;
CGRectEdge CGRectMaxXEdge;
CGRectEdge CGRectMaxYEdge;
CGRectEdge CGRectMinXEdge;
CGRectEdge CGRectMinYEdge;
MACRO_BIT CHAR_BIT;
MACRO_CHAR CHAR_MAX;
MACRO_CHAR CHAR_MIN;
MACRO_LONG_MAX CHILD_MAX;
MACRO_CLD CLD_CONTINUED;
MACRO_CLD CLD_DUMPED;
MACRO_CLD CLD_EXITED;
MACRO_CLD CLD_KILLED;
MACRO_CLD CLD_NOOP;
MACRO_CLD CLD_STOPPED;
MACRO_CLD CLD_TRAPPED;
MACRO_CLK CLK_TCK;
MACRO_CLOCKS CLOCKS_PER_SEC;
MACRO_CLOCK_GET CLOCK_ALARM_CURRES;
MACRO_CLOCK_GET CLOCK_ALARM_MAXRES;
MACRO_CLOCK_GET CLOCK_ALARM_MINRES;
MACRO_CLOCK_GET CLOCK_GET_TIME_RES;
MACRO_TASK_NULL CLOCK_NULL;
$B253124A915BC60B511BE73B9C082B86 CMMInterfaceVersion;
MACRO_COLL COLL_WEIGHTS_MAX;
MACRO_COMPONENT COMPONENT_SIGNATURE;
$41659A7D57F89602ED705FB98A13FD1B COM_ISDN;
$7FBC4E428363D1B4B37E93E5FAB05B2E COM_PPP;
$AA30E8BB4D3B3F550C8E2D013F1C43C4 COM_SERIAL;
MACRO_COREFOUNDATION COREFOUNDATION_CFPLUGINCOM_SEPARATE;
MACRO_CPU CPU_STATE_IDLE;
MACRO_CPU CPU_STATE_MAX;
MACRO_CPU CPU_STATE_NICE;
MACRO_CPU CPU_STATE_SYSTEM;
MACRO_CPU CPU_STATE_USER;
MACRO_CPU CPU_SUBTYPE_386;
MACRO_CPU CPU_SUBTYPE_486;
MACRO_CPU CPU_SUBTYPE_486SX;
MACRO_CPU CPU_SUBTYPE_586;
MACRO_CPU CPU_SUBTYPE_BIG_ENDIAN;
MACRO_CPU CPU_SUBTYPE_HPPA_7100;
MACRO_CPU CPU_SUBTYPE_HPPA_7100LC;
MACRO_CPU CPU_SUBTYPE_HPPA_ALL;
MACRO_CPU CPU_SUBTYPE_I386_ALL;
MACRO_CPU CPU_SUBTYPE_I860_860;
MACRO_CPU CPU_SUBTYPE_I860_ALL;
MACRO_CPU CPU_SUBTYPE_INTEL_FAMILY_MAX;
MACRO_CPU CPU_SUBTYPE_INTEL_MODEL_ALL;
MACRO_CPU CPU_SUBTYPE_LITTLE_ENDIAN;
MACRO_CPU CPU_SUBTYPE_MC68030;
MACRO_CPU CPU_SUBTYPE_MC68030_ONLY;
MACRO_CPU CPU_SUBTYPE_MC68040;
MACRO_CPU CPU_SUBTYPE_MC680x0_ALL;
MACRO_CPU CPU_SUBTYPE_MC88000_ALL;
MACRO_CPU CPU_SUBTYPE_MC88100;
MACRO_CPU CPU_SUBTYPE_MC88110;
MACRO_CPU CPU_SUBTYPE_MC98000_ALL;
MACRO_CPU CPU_SUBTYPE_MC98601;
MACRO_CPU CPU_SUBTYPE_MIPS_ALL;
MACRO_CPU CPU_SUBTYPE_MIPS_R2000;
MACRO_CPU CPU_SUBTYPE_MIPS_R2000a;
MACRO_CPU CPU_SUBTYPE_MIPS_R2300;
MACRO_CPU CPU_SUBTYPE_MIPS_R2600;
MACRO_CPU CPU_SUBTYPE_MIPS_R2800;
MACRO_CPU CPU_SUBTYPE_MIPS_R3000;
MACRO_CPU CPU_SUBTYPE_MIPS_R3000a;
MACRO_CPU CPU_SUBTYPE_MULTIPLE;
MACRO_CPU CPU_SUBTYPE_PENT;
MACRO_CPU CPU_SUBTYPE_PENTII_M3;
MACRO_CPU CPU_SUBTYPE_PENTII_M5;
MACRO_CPU CPU_SUBTYPE_PENTPRO;
MACRO_CPU CPU_SUBTYPE_POWERPC_601;
MACRO_CPU CPU_SUBTYPE_POWERPC_602;
MACRO_CPU CPU_SUBTYPE_POWERPC_603;
MACRO_CPU CPU_SUBTYPE_POWERPC_603e;
MACRO_CPU CPU_SUBTYPE_POWERPC_603ev;
MACRO_CPU CPU_SUBTYPE_POWERPC_604;
MACRO_CPU CPU_SUBTYPE_POWERPC_604e;
MACRO_CPU CPU_SUBTYPE_POWERPC_620;
MACRO_CPU CPU_SUBTYPE_POWERPC_7400;
MACRO_CPU CPU_SUBTYPE_POWERPC_7450;
MACRO_CPU CPU_SUBTYPE_POWERPC_750;
MACRO_CPU CPU_SUBTYPE_POWERPC_ALL;
MACRO_CPU CPU_SUBTYPE_POWERPC_Max;
MACRO_CPU CPU_SUBTYPE_POWERPC_SCVger;
MACRO_CPU CPU_SUBTYPE_SPARC_ALL;
MACRO_CPU CPU_SUBTYPE_UVAXI;
MACRO_CPU CPU_SUBTYPE_UVAXII;
MACRO_CPU CPU_SUBTYPE_UVAXIII;
MACRO_CPU CPU_SUBTYPE_VAX730;
MACRO_CPU CPU_SUBTYPE_VAX750;
MACRO_CPU CPU_SUBTYPE_VAX780;
MACRO_CPU CPU_SUBTYPE_VAX785;
MACRO_CPU CPU_SUBTYPE_VAX8200;
MACRO_CPU CPU_SUBTYPE_VAX8500;
MACRO_CPU CPU_SUBTYPE_VAX8600;
MACRO_CPU CPU_SUBTYPE_VAX8650;
MACRO_CPU CPU_SUBTYPE_VAX8800;
MACRO_CPU CPU_SUBTYPE_VAX_ALL;
MACRO_CPU CPU_TYPE_ANY;
MACRO_CPU CPU_TYPE_HPPA;
MACRO_CPU CPU_TYPE_I386;
MACRO_CPU CPU_TYPE_I860;
MACRO_CPU CPU_TYPE_MC680x0;
MACRO_CPU CPU_TYPE_MC88000;
MACRO_CPU CPU_TYPE_MC98000;
MACRO_CPU CPU_TYPE_POWERPC;
MACRO_CPU CPU_TYPE_SPARC;
MACRO_CPU CPU_TYPE_VAX;
$BED3F058E4821979968D24BE23920A42 CS_MAX_PATH;
$44F391F6F759E67D2435F1C3F9758D28 CantDecompress;
$9D18CCF58560B467D5C27AB5DF77EFA9 ColorBankIs555;
$9D18CCF58560B467D5C27AB5DF77EFA9 ColorBankIsCustom;
$9D18CCF58560B467D5C27AB5DF77EFA9 ColorBankIsExactAnd555;
$00A17738C60DB5C35B723D2BB0B9AA22 CommentID;
$00A17738C60DB5C35B723D2BB0B9AA22 CommonID;
$00A17738C60DB5C35B723D2BB0B9AA22 CopyrightID;
MACRO_DBL DBL_DIG;
MACRO_DBL DBL_MANT_DIG;
MACRO_DBL DBL_MAX_10_EXP;
MACRO_DBL DBL_MAX_EXP;
MACRO_DBL DBL_MIN_10_EXP;
MACRO_DBL DBL_MIN_EXP;
$1699EC0844F3EEA22797F03D827335E8 DDP_OPT_CHECKSUM;
$E6C2E266CE03690A99FCC667B237D815 DDP_OPT_HOPCOUNT;
$1699EC0844F3EEA22797F03D827335E8 DDP_OPT_SRCADDR;
MACRO_DEBUGFULL DEBUGFULL;
MACRO_DEBUGLEVEL DEBUGLEVEL;
MACRO_DEBUG_NO DEBUG_ASSERT_PRODUCTION_CODE;
MACRO_DEBUG DEBUG_LEVEL_BREAK_ONLY;
MACRO_DEBUG DEBUG_LEVEL_EXTERNAL;
MACRO_DEBUG DEBUG_LEVEL_INTERNAL;
MACRO_DEBUG DEBUG_LEVEL_PRODUCTION;
MACRO_DEBUG_NO DEBUG_NO_OPTIONS;
MACRO_SIGDIGLEN DECSTROUTLEN;
$8F7C34845D7056E9B3DC29E5DE2A79BE DL_PROMISC_OFF;
MACRO_DOMAIN DOMAIN;
$07801A5B3B251E2FE1A1830D91B5053F DRAWHook;
$698E987031BBDED5F385A991E8274B7E DVMRP_ADD_LGRP;
$698E987031BBDED5F385A991E8274B7E DVMRP_ADD_MRT;
$698E987031BBDED5F385A991E8274B7E DVMRP_ADD_VIF;
$698E987031BBDED5F385A991E8274B7E DVMRP_DEL_LGRP;
$698E987031BBDED5F385A991E8274B7E DVMRP_DEL_MRT;
$698E987031BBDED5F385A991E8274B7E DVMRP_DEL_VIF;
$698E987031BBDED5F385A991E8274B7E DVMRP_DONE;
$698E987031BBDED5F385A991E8274B7E DVMRP_INIT;
MACRO_ERRNO E2BIG;
MACRO_ERRNO EACCES;
MACRO_ERRNO EADDRINUSE;
MACRO_ERRNO EADDRNOTAVAIL;
MACRO_ERRNO EAFNOSUPPORT;
MACRO_ERRNO EAGAIN;
MACRO_ERRNO EALREADY;
MACRO_ERRNO EAUTH;
MACRO_ERRNO EBADARCH;
MACRO_ERRNO EBADEXEC;
MACRO_ERRNO EBADF;
MACRO_ERRNO EBADMACHO;
MACRO_ERRNO EBADRPC;
MACRO_ERRNO EBUSY;
MACRO_ERRNO ECANCELED;
MACRO_ERRNO ECHILD;
MACRO_ERRNO ECONNABORTED;
MACRO_ERRNO ECONNREFUSED;
MACRO_ERRNO ECONNRESET;
MACRO_ERRNO EDEADLK;
MACRO_ERRNO EDESTADDRREQ;
MACRO_ERRNO EDEVERR;
MACRO_ERRNO EDOM;
MACRO_ERRNO EDQUOT;
MACRO_ERRNO EEXIST;
MACRO_ERRNO EFAULT;
MACRO_ERRNO EFBIG;
MACRO_ERRNO EFTYPE;
MACRO_ERRNO EHOSTDOWN;
MACRO_ERRNO EHOSTUNREACH;
MACRO_ERRNO EINPROGRESS;
MACRO_ERRNO EINTR;
MACRO_ERRNO EINVAL;
MACRO_ERRNO EIO;
MACRO_ERRNO EISCONN;
MACRO_ERRNO EISDIR;
MACRO_ERRNO ELAST;
MACRO_ERRNO ELOOP;
MACRO_ERRNO EMFILE;
MACRO_ERRNO EMLINK;
MACRO_ERRNO EMSGSIZE;
MACRO_ENABLE ENABLE_FCB_ARRAY_ACCESS;
MACRO_ERRNO ENAMETOOLONG;
MACRO_ERRNO ENEEDAUTH;
MACRO_ERRNO ENETDOWN;
MACRO_ERRNO ENETRESET;
MACRO_ERRNO ENETUNREACH;
MACRO_ERRNO ENFILE;
MACRO_ERRNO ENOBUFS;
MACRO_ERRNO ENODEV;
MACRO_ERRNO ENOENT;
MACRO_ERRNO ENOEXEC;
MACRO_ERRNO ENOLCK;
MACRO_ERRNO ENOMEM;
MACRO_ERRNO ENOPROTOOPT;
MACRO_ERRNO ENOSPC;
MACRO_ERRNO ENOSYS;
MACRO_ERRNO ENOTBLK;
MACRO_ERRNO ENOTCONN;
MACRO_ERRNO ENOTDIR;
MACRO_ERRNO ENOTEMPTY;
MACRO_ERRNO ENOTSOCK;
MACRO_ERRNO ENOTSUP;
MACRO_ERRNO ENOTTY;
MACRO_SLOT ENVIRONMENT_SLOT;
MACRO_ERRNO ENXIO;
MACRO_EOF EOF;
$07801A5B3B251E2FE1A1830D91B5053F EOLHook;
MACRO_ERRNO EOPNOTSUPP;
MACRO_ERRNO EOVERFLOW;
MACRO_ERRNO EPERM;
MACRO_ERRNO EPFNOSUPPORT;
MACRO_ERRNO EPIPE;
MACRO_ERRNO EPROCLIM;
MACRO_ERRNO EPROCUNAVAIL;
MACRO_ERRNO EPROGMISMATCH;
MACRO_ERRNO EPROGUNAVAIL;
MACRO_ERRNO EPROTONOSUPPORT;
MACRO_ERRNO EPROTOTYPE;
MACRO_ERRNO EPWROFF;
$14904ED59AACBB5EDEEE60143C77F692 EQUALTO;
MACRO_COLL EQUIV_CLASS_MAX;
MACRO_ERRNO ERANGE;
MACRO_ERRNO EREMOTE;
MACRO_ERRNO EROFS;
MACRO_ERRNO ERPCMISMATCH;
MACRO_ERRNO ESHLIBVERS;
MACRO_ERRNO ESHUTDOWN;
MACRO_ERRNO ESOCKTNOSUPPORT;
MACRO_ERRNO ESPIPE;
MACRO_ERRNO ESRCH;
MACRO_ERRNO ESTALE;
MACRO_ERRNO ETIMEDOUT;
MACRO_ERRNO ETOOMANYREFS;
MACRO_ERRNO ETXTBSY;
MACRO_ERRNO EUSERS;
MACRO_ERRNO EWOULDBLOCK;
MACRO_EXCEPTION EXCEPTION_CODE_MAX;
MACRO_EXCEPTION_DEFAULT EXCEPTION_DEFAULT;
MACRO_EXCEPTION_DEFAULT EXCEPTION_STATE;
MACRO_EXCEPTION_DEFAULT EXCEPTION_STATE_IDENTITY;
MACRO_EXC_PPC EXC_ARITHMETIC;
MACRO_EXC_PPC EXC_BAD_ACCESS;
MACRO_EXC_PPC EXC_BAD_INSTRUCTION;
MACRO_EXC_PPC EXC_BREAKPOINT;
MACRO_EXC_PPC EXC_EMULATION;
MACRO_EXC_PPC EXC_MACH_SYSCALL;
MACRO_EXC_MASK EXC_MASK_ALL;
MACRO_EXC_MASK EXC_MASK_ARITHMETIC;
MACRO_EXC_MASK EXC_MASK_BAD_ACCESS;
MACRO_EXC_MASK EXC_MASK_BAD_INSTRUCTION;
MACRO_EXC_MASK EXC_MASK_BREAKPOINT;
MACRO_EXC_MASK EXC_MASK_EMULATION;
MACRO_EXC_PPC EXC_MASK_MACHINE;
MACRO_EXC_MASK EXC_MASK_MACH_SYSCALL;
MACRO_EXC_MASK EXC_MASK_RPC_ALERT;
MACRO_EXC_MASK EXC_MASK_SOFTWARE;
MACRO_EXC_MASK EXC_MASK_SYSCALL;
MACRO_EXC_PPC EXC_PPC_ALTIVECASSIST;
MACRO_EXC_PPC EXC_PPC_BADSPACE;
MACRO_EXC_PPC EXC_PPC_BREAKPOINT;
MACRO_EXC_PPC EXC_PPC_FLT_INEXACT;
MACRO_EXC_PPC EXC_PPC_FLT_NOT_A_NUMBER;
MACRO_EXC_PPC EXC_PPC_FLT_OVERFLOW;
MACRO_EXC_PPC EXC_PPC_FLT_UNDERFLOW;
MACRO_EXC_PPC EXC_PPC_FLT_ZERO_DIVIDE;
MACRO_EXC_PPC EXC_PPC_INVALID_SYSCALL;
MACRO_EXC_PPC EXC_PPC_MIGRATE;
MACRO_EXC_PPC EXC_PPC_NOEMULATION;
MACRO_EXC_PPC EXC_PPC_OVERFLOW;
MACRO_EXC_PPC EXC_PPC_PRIVINST;
MACRO_EXC_PPC EXC_PPC_PRIVREG;
MACRO_EXC_PPC EXC_PPC_TRACE;
MACRO_EXC_PPC EXC_PPC_TRAP;
MACRO_EXC_PPC EXC_PPC_UNALIGNED;
MACRO_EXC_PPC EXC_PPC_UNIPL_INST;
MACRO_EXC_PPC EXC_PPC_VM_PROT_READ;
MACRO_EXC_PPC EXC_PPC_ZERO_DIVIDE;
MACRO_EXC_PPC EXC_RPC_ALERT;
MACRO_EXC_PPC EXC_SOFTWARE;
MACRO_EXC_SOFT EXC_SOFT_SIGNAL;
MACRO_EXC_PPC EXC_SYSCALL;
MACRO_EXC EXC_TYPES_COUNT;
MACRO_ERRNO EXDEV;
MACRO_EXIT EXIT_FAILURE;
MACRO_EXIT EXIT_SUCCESS;
MACRO_COLL EXPR_NEST_MAX;
MACRO_BOOL FALSE;
MACRO_FD FD_SETSIZE;
$A573D5BFC6FE9379B4011F75D6601CED FE_ALL_EXCEPT;
$A573D5BFC6FE9379B4011F75D6601CED FE_DIVBYZERO;
$67C416E26EEE13F3D7C2627C9615BC9D FE_DOWNWARD;
$A573D5BFC6FE9379B4011F75D6601CED FE_INEXACT;
$A573D5BFC6FE9379B4011F75D6601CED FE_INVALID;
$A573D5BFC6FE9379B4011F75D6601CED FE_OVERFLOW;
$67C416E26EEE13F3D7C2627C9615BC9D FE_TONEAREST;
$67C416E26EEE13F3D7C2627C9615BC9D FE_TOWARDZERO;
$A573D5BFC6FE9379B4011F75D6601CED FE_UNDERFLOW;
$67C416E26EEE13F3D7C2627C9615BC9D FE_UPWARD;
MACRO_FOPEN FILENAME_MAX;
MACRO_FIRST FIRST_EXCEPTION;
MACRO_FLOATDECIMAL FIXEDDECIMAL;
MACRO_FIXINC FIXINC_BROKEN_ASSERT_STDLIB_CHECK;
MACRO_FLOATDECIMAL FLOATDECIMAL;
MACRO_FLT FLT_DIG;
MACRO_FLT FLT_MANT_DIG;
MACRO_FLT FLT_MAX_10_EXP;
MACRO_FLT FLT_MAX_EXP;
MACRO_FLT FLT_MIN_10_EXP;
MACRO_FLT FLT_MIN_EXP;
MACRO_FLT FLT_RADIX;
$CC51797E5043117C409E27369F7E30C5 FLUSHBAND;
$88D4A60280BA208200948E34A44DA716 FLUSHR;
$88D4A60280BA208200948E34A44DA716 FLUSHRW;
$88D4A60280BA208200948E34A44DA716 FLUSHW;
$59BA3560193047842C5CB0E2058A9F5A FMNAMESZ;
MACRO_FOPEN FOPEN_MAX;
$00A17738C60DB5C35B723D2BB0B9AA22 FORMID;
MACRO_FPE FPE_FLTDIV;
MACRO_FPE FPE_FLTINV;
MACRO_FPE FPE_FLTOVF;
MACRO_FPE FPE_FLTRES;
MACRO_FPE FPE_FLTUND;
MACRO_FPE FPE_NOOP;
MACRO_FP FP_FAST_FMA;
MACRO_FP FP_FAST_FMAF;
MACRO_FP FP_ILOGB0;
MACRO_FP FP_ILOGBNAN;
$F1818EFC007C0CFF41528F4AC69DA857 FP_INFINITE;
$F1818EFC007C0CFF41528F4AC69DA857 FP_NAN;
$F1818EFC007C0CFF41528F4AC69DA857 FP_NORMAL;
$F1818EFC007C0CFF41528F4AC69DA857 FP_SUBNORMAL;
$F1818EFC007C0CFF41528F4AC69DA857 FP_ZERO;
MACRO_FUNCTION FUNCTION_DECLSPEC;
MACRO_FUNCTION FUNCTION_PASCAL;
MACRO_FUNCTION FUNCTION_WIN32CC;
$00A17738C60DB5C35B723D2BB0B9AA22 FormatVersionID;
$A0509ECBB3972BBEF620EDFE2C89E5A2 ForwardBackwardLooping;
$A0509ECBB3972BBEF620EDFE2C89E5A2 ForwardLooping;
MACRO_LONG_MAX GID_MAX;
$14904ED59AACBB5EDEEE60143C77F692 GREATERTHAN;
$2747613A23130B32448BD94584CA2B9C HDActivity;
$9C8BA511D53802F27EA58D26B9BDFF85 HDPwrQType;
$07801A5B3B251E2FE1A1830D91B5053F HITTESTHook;
MACRO_HOST HOST_BASIC_INFO;
MACRO_HOST HOST_CPU_LOAD_INFO;
MACRO_TIME HOST_INFO_MAX;
MACRO_HOST HOST_LOAD_INFO;
MACRO_HOST HOST_MACH_MSG_TRAP;
MACRO_TASK_NULL HOST_NULL;
MACRO_HOST HOST_PRIORITY_INFO;
MACRO_TASK_NULL HOST_PRIV_NULL;
MACRO_HOST HOST_RESOURCE_SIZES;
MACRO_HOST HOST_SCHED_INFO;
MACRO_TASK_NULL HOST_SECURITY_NULL;
MACRO_HOST HOST_SEMAPHORE_TRAPS;
MACRO_HOST HOST_VM_INFO;
MACRO_ILL ILL_ILLOPC;
MACRO_ILL ILL_ILLTRP;
MACRO_ILL ILL_NOOP;
MACRO_ILL ILL_PRVOPC;
$1BD762F989B1FFCFB7954C910005047B INET_IP;
$1BD762F989B1FFCFB7954C910005047B INET_TCP;
$1BD762F989B1FFCFB7954C910005047B INET_UDP;
$DE71FC83DFA4AAA5CF23EF98F4B02EC1 INFTIM;
MACRO_MAX INT16_MAX;
MACRO_MIN INT16_MIN;
MACRO_MAX INT32_MAX;
MACRO_MIN INT32_MIN;
MACRO_MAX INT64_MAX;
MACRO_MIN INT64_MIN;
MACRO_MAX INT8_MAX;
MACRO_MIN INT8_MIN;
MACRO_INTMAX INTMAX_MAX;
MACRO_INTMAX INTMAX_MIN;
MACRO_INTPTR INTPTR_MAX;
MACRO_INTPTR INTPTR_MIN;
MACRO_INT_FAST8 INT_FAST16_MAX;
MACRO_INT_FAST8 INT_FAST16_MIN;
MACRO_INT_FAST8 INT_FAST32_MAX;
MACRO_INT_FAST8 INT_FAST32_MIN;
MACRO_INT_FAST8 INT_FAST64_MAX;
MACRO_INT_FAST8 INT_FAST64_MIN;
MACRO_INT_FAST8 INT_FAST8_MAX;
MACRO_INT_FAST8 INT_FAST8_MIN;
MACRO_INT INT_LEAST16_MAX;
MACRO_INT INT_LEAST16_MIN;
MACRO_INT INT_LEAST32_MAX;
MACRO_INT INT_LEAST32_MIN;
MACRO_INT INT_LEAST64_MAX;
MACRO_INT INT_LEAST64_MIN;
MACRO_INT INT_LEAST8_MAX;
MACRO_INT INT_LEAST8_MIN;
MACRO_INT_MIN INT_MAX;
MACRO_INT_MIN INT_MIN;
MACRO_IOKIT IOKIT;
MACRO_IOPhysSize IOPhysSize;
$82CE925440FCEA4E83EDF6CF10782885 IO_CacheOff;
$82CE925440FCEA4E83EDF6CF10782885 IO_CopyBack;
$82CE925440FCEA4E83EDF6CF10782885 IO_WriteThrough;
$DE490049644E7C6A8868423C628E99D7 IPCP_OPT_GETLOCALPROTOADDR;
$DE490049644E7C6A8868423C628E99D7 IPCP_OPT_GETREMOTEPROTOADDR;
$DE490049644E7C6A8868423C628E99D7 IPCP_OPT_TCPHDRCOMPRESSION;
MACRO_TASK_NULL IPC_SPACE_NULL;
MACRO_IP IP_OPTIONS;
$2238A151C96BBBAFC0447AADEA294590 ISDN_OPT_56KADAPTATION;
$2238A151C96BBBAFC0447AADEA294590 ISDN_OPT_COMMTYPE;
$2238A151C96BBBAFC0447AADEA294590 ISDN_OPT_FRAMINGTYPE;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_ATMARK;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_AUTOPUSH;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_CANPUT;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_CKBAND;
$E42CCC10DADED7DD7DACD46B86D22DDA I_ERRLOG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_FDINSERT;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_FIFO;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_FIND;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_FLUSH;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_FLUSHBAND;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GETBAND;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GETCLTIME;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GETDELAY;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GETMSG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GETPMSG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GETSIG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GRDOPT;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_GWROPT;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_HEAP_REPORT;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_LINK;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_LIST;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_LOOK;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_NREAD;
$DDD6BB699887F3CA93AB9FA73DC33335 I_OTConnect;
$DDD6BB699887F3CA93AB9FA73DC33335 I_OTDisconnect;
$DDD6BB699887F3CA93AB9FA73DC33335 I_OTGetMiscellaneousEvents;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNAlerting;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNFaciltity;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNResume;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNResumeAcknowledge;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNResumeReject;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNSuspend;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNSuspendAcknowledge;
$A15F04B6D842694AF73AABAFF4270A6D I_OTISDNSuspendReject;
$DDD6BB699887F3CA93AB9FA73DC33335 I_OTScript;
$DDD6BB699887F3CA93AB9FA73DC33335 I_OTSetFramingType;
$DDD6BB699887F3CA93AB9FA73DC33335 I_OTSetRawMode;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PEEK;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PIPE;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PLINK;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_POLL;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_POP;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PUNLINK;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PUSH;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PUTMSG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_PUTPMSG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_RECVFD;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_RUN_QUEUES;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_SENDFD;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_SETCLTIME;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_SETDELAY;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_SETSIG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_SRDOPT;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_STR;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_SWROPT;
$05053EB1D9EE56B0D52BE6E4EFB80401 I_SetSerialBreak;
$05053EB1D9EE56B0D52BE6E4EFB80401 I_SetSerialDTR;
$05053EB1D9EE56B0D52BE6E4EFB80401 I_SetSerialXOff;
$05053EB1D9EE56B0D52BE6E4EFB80401 I_SetSerialXOffState;
$05053EB1D9EE56B0D52BE6E4EFB80401 I_SetSerialXOn;
$E42CCC10DADED7DD7DACD46B86D22DDA I_TRCLOG;
$689CEDFEE0CE2B8E5012D8B3D22FE2CF I_UNLINK;
$2747613A23130B32448BD94584CA2B9C IdleActivity;
MACRO_IncludePEF2Declarations IncludePEF2Declarations;
$00A17738C60DB5C35B723D2BB0B9AA22 InstrumentID;
$22A25750DF33AE2059B3CB8484455106 KAEISHandleCGI;
MACRO_TIME KERNEL_BOOTMAGIC_MAX;
MACRO_TIME KERNEL_BOOT_INFO_MAX;
MACRO_TIME KERNEL_VERSION_MAX;
MACRO_KERN KERN_ABORTED;
MACRO_KERN KERN_ALREADY_IN_SET;
MACRO_KERN KERN_ALREADY_WAITING;
MACRO_KERN KERN_DEFAULT_SET;
MACRO_KERN KERN_EXCEPTION_PROTECTED;
MACRO_KERN KERN_FAILURE;
MACRO_KERN KERN_INVALID_ADDRESS;
MACRO_KERN KERN_INVALID_ARGUMENT;
MACRO_KERN KERN_INVALID_CAPABILITY;
MACRO_KERN KERN_INVALID_HOST;
MACRO_KERN KERN_INVALID_LEDGER;
MACRO_KERN KERN_INVALID_MEMORY_CONTROL;
MACRO_KERN KERN_INVALID_NAME;
MACRO_KERN KERN_INVALID_OBJECT;
MACRO_KERN KERN_INVALID_POLICY;
MACRO_KERN KERN_INVALID_PROCESSOR_SET;
MACRO_KERN KERN_INVALID_RIGHT;
MACRO_KERN KERN_INVALID_SECURITY;
MACRO_KERN KERN_INVALID_TASK;
MACRO_KERN KERN_INVALID_VALUE;
MACRO_KERN KERN_LOCK_OWNED;
MACRO_KERN KERN_LOCK_OWNED_SELF;
MACRO_KERN KERN_LOCK_SET_DESTROYED;
MACRO_KERN KERN_LOCK_UNSTABLE;
MACRO_KERN KERN_MEMORY_DATA_MOVED;
MACRO_KERN KERN_MEMORY_ERROR;
MACRO_KERN KERN_MEMORY_FAILURE;
MACRO_KERN KERN_MEMORY_PRESENT;
MACRO_KERN KERN_MEMORY_RESTART_COPY;
MACRO_KERN KERN_NAME_EXISTS;
MACRO_KERN KERN_NODE_DOWN;
MACRO_KERN KERN_NOT_DEPRESSED;
MACRO_KERN KERN_NOT_IN_SET;
MACRO_KERN KERN_NOT_RECEIVER;
MACRO_KERN KERN_NOT_SUPPORTED;
MACRO_KERN KERN_NOT_WAITING;
MACRO_KERN KERN_NO_ACCESS;
MACRO_KERN KERN_NO_SPACE;
MACRO_KERN KERN_OPERATION_TIMED_OUT;
MACRO_KERN KERN_POLICY_LIMIT;
MACRO_KERN KERN_PROTECTION_FAILURE;
MACRO_KERN KERN_RESOURCE_SHORTAGE;
MACRO_KERN KERN_RETURN_MAX;
MACRO_KERN KERN_RIGHT_EXISTS;
MACRO_KERN KERN_RPC_CONTINUE_ORPHAN;
MACRO_KERN KERN_RPC_SERVER_TERMINATED;
MACRO_KERN KERN_RPC_TERMINATE_ORPHAN;
MACRO_KERN KERN_SEMAPHORE_DESTROYED;
MACRO_KERN KERN_SUCCESS;
MACRO_KERN KERN_TERMINATED;
MACRO_KERN KERN_UREFS_OVERFLOW;
MACRO_KMOD KMOD_CNTL_GET_CMD;
MACRO_KMOD KMOD_CNTL_RELEASE;
MACRO_KMOD KMOD_CNTL_RETAIN;
MACRO_KMOD KMOD_CNTL_START;
MACRO_KMOD KMOD_CNTL_STOP;
MACRO_KMOD KMOD_INFO_VERSION;
MACRO_KMOD KMOD_IOKIT_END_RANGE_PACKET;
MACRO_KMOD KMOD_IOKIT_START_RANGE_PACKET;
MACRO_KMOD KMOD_LOAD_EXTENSION_PACKET;
MACRO_KMOD KMOD_LOAD_WITH_DEPENDENCIES_PACKET;
MACRO_KMOD KMOD_MAX_NAME;
MACRO_KMOD KMOD_RETURN_FAILURE;
MACRO_KMOD KMOD_RETURN_SUCCESS;
$0A338F6E123203A5D1058BC421FC5D0B LASTMARK;
$DE490049644E7C6A8868423C628E99D7 LCP_OPT_ECHO;
$DE490049644E7C6A8868423C628E99D7 LCP_OPT_MRU;
$DE490049644E7C6A8868423C628E99D7 LCP_OPT_PPPCOMPRESSION;
$DE490049644E7C6A8868423C628E99D7 LCP_OPT_RCACCMAP;
$DE490049644E7C6A8868423C628E99D7 LCP_OPT_TXACCMAP;
MACRO_LC LC_ALL;
MACRO_LC LC_COLLATE;
MACRO_LC LC_CTYPE;
MACRO_LC LC_MESSAGES;
MACRO_LC LC_MONETARY;
MACRO_LC LC_NUMERIC;
MACRO_LC LC_TIME;
MACRO_LDBL LDBL_DIG;
MACRO_LDBL LDBL_MANT_DIG;
MACRO_LDBL LDBL_MAX_10_EXP;
MACRO_LDBL LDBL_MAX_EXP;
MACRO_LDBL LDBL_MIN_10_EXP;
MACRO_LDBL LDBL_MIN_EXP;
MACRO_TASK_NULL LEDGER_NULL;
$14904ED59AACBB5EDEEE60143C77F692 LESSTHAN;
MACRO_COLL LINE_MAX;
MACRO_LONG_MAX LINK_MAX;
MACRO_ENDIAN LITTLE_ENDIAN;
MACRO_ULLONG LLONG_MAX;
MACRO_LLONG LLONG_MIN;
$0B24756EC24F810A1B7D74328EADBE37 LNK_ENET;
$0B24756EC24F810A1B7D74328EADBE37 LNK_FDDI;
$0B24756EC24F810A1B7D74328EADBE37 LNK_TOKN;
$0B24756EC24F810A1B7D74328EADBE37 LNK_TPI;
MACRO_LOAD LOAD_SCALE;
MACRO_TASK_NULL LOCK_SET_NULL;
$ED101591DBBA347B3DD2F30C4074C4A4 LOGMSGSZ;
MACRO_BIT LONG_BIT;
MACRO_LONG_MAX LONG_LONG_MAX;
MACRO_LONG LONG_MAX;
MACRO_LONG LONG_MIN;
MACRO_L_cuserid L_ctermid;
MACRO_L_cuserid L_cuserid;
MACRO_L L_tmpnam;
$6D9FD8B2BEC76B16F63C1EAB6C927E00 LatestNR_PEFVersion;
$65C805F25D863A90F2F9C5C002B33087 MACE3Type;
$65C805F25D863A90F2F9C5C002B33087 MACE6Type;
MACRO_MACHINE MACHINE_THREAD_STATE;
MACRO_MACH_MSG MACH_MSGH_BITS_CIRCULAR;
MACRO_MACH_MSG MACH_MSGH_BITS_COMPLEX;
MACRO_MACH_MSG MACH_MSGH_BITS_LOCAL_MASK;
MACRO_MACH_MSG MACH_MSGH_BITS_PORTS_MASK;
MACRO_MACH_MSG MACH_MSGH_BITS_REMOTE_MASK;
MACRO_MACH_MSG MACH_MSGH_BITS_USED;
MACRO_MACH_MSG MACH_MSGH_BITS_USER;
MACRO_MACH_MSG MACH_MSGH_BITS_ZERO;
MACRO_MACH_MSG MACH_MSGH_KIND_NORMAL;
MACRO_MACH_MSG MACH_MSGH_KIND_NOTIFICATION;
MACRO_MACH_MSG MACH_MSG_ALLOCATE;
MACRO_MACH_MSG MACH_MSG_BODY_NULL;
MACRO_MACH_MSG MACH_MSG_DESCRIPTOR_NULL;
MACRO_MACH_MSG MACH_MSG_IPC_KERNEL;
MACRO_MACH_MSG MACH_MSG_IPC_SPACE;
MACRO_MACH_MSG MACH_MSG_MASK;
MACRO_MACH_MSG MACH_MSG_NULL;
MACRO_MACH_MSG MACH_MSG_OOL_DESCRIPTOR;
MACRO_MACH_MSG MACH_MSG_OOL_PORTS_DESCRIPTOR;
MACRO_MACH_MSG MACH_MSG_OOL_VOLATILE_DESCRIPTOR;
MACRO_MACH_MSG MACH_MSG_OPTION_NONE;
MACRO_MACH_MSG MACH_MSG_OVERWRITE;
MACRO_MACH_MSG MACH_MSG_PHYSICAL_COPY;
MACRO_MACH_MSG MACH_MSG_PORT_DESCRIPTOR;
MACRO_MACH_MSG MACH_MSG_SIZE_MAX;
MACRO_MACH_MSG MACH_MSG_SIZE_NULL;
MACRO_MACH_MSG MACH_MSG_SUCCESS;
MACRO_MACH_MSG MACH_MSG_TIMEOUT_NONE;
MACRO_MACH_MSG MACH_MSG_TRAILER_FORMAT_0;
MACRO_MACH_MSG MACH_MSG_TYPE_COPY_RECEIVE;
MACRO_MACH_MSG MACH_MSG_TYPE_COPY_SEND;
MACRO_MACH_MSG MACH_MSG_TYPE_LAST;
MACRO_MACH_MSG MACH_MSG_TYPE_MAKE_SEND;
MACRO_MACH_MSG MACH_MSG_TYPE_MAKE_SEND_ONCE;
MACRO_MACH_MSG MACH_MSG_TYPE_MOVE_RECEIVE;
MACRO_MACH_MSG MACH_MSG_TYPE_MOVE_SEND;
MACRO_MACH_MSG MACH_MSG_TYPE_MOVE_SEND_ONCE;
MACRO_MACH_MSG MACH_MSG_TYPE_POLYMORPHIC;
MACRO_MACH_MSG MACH_MSG_TYPE_PORT_NAME;
MACRO_MACH_MSG MACH_MSG_TYPE_PORT_NONE;
MACRO_MACH_MSG MACH_MSG_TYPE_PORT_RECEIVE;
MACRO_MACH_MSG MACH_MSG_TYPE_PORT_SEND;
MACRO_MACH_MSG MACH_MSG_TYPE_PORT_SEND_ONCE;
MACRO_MACH_MSG MACH_MSG_VIRTUAL_COPY;
MACRO_MACH_MSG MACH_MSG_VM_KERNEL;
MACRO_MACH_MSG MACH_MSG_VM_SPACE;
MACRO_MACH_PORTS MACH_PORTS_SLOTS_USED;
MACRO_MACH MACH_PORT_DEAD;
MACRO_MACH MACH_PORT_DNREQUESTS_SIZE;
MACRO_MACH MACH_PORT_DNREQUESTS_SIZE_COUNT;
MACRO_MACH MACH_PORT_LIMITS_INFO;
MACRO_MACH MACH_PORT_NULL;
MACRO_MACH MACH_PORT_QLIMIT_DEFAULT;
MACRO_MACH MACH_PORT_QLIMIT_MAX;
MACRO_MACH MACH_PORT_RECEIVE_STATUS;
MACRO_MACH MACH_PORT_RIGHT_DEAD_NAME;
MACRO_MACH MACH_PORT_RIGHT_NUMBER;
MACRO_MACH MACH_PORT_RIGHT_PORT_SET;
MACRO_MACH MACH_PORT_RIGHT_RECEIVE;
MACRO_MACH MACH_PORT_RIGHT_SEND;
MACRO_MACH MACH_PORT_RIGHT_SEND_ONCE;
MACRO_MACH MACH_PORT_SRIGHTS_NONE;
MACRO_MACH MACH_PORT_SRIGHTS_PRESENT;
MACRO_MACH MACH_PORT_TYPE_ALL_RIGHTS;
MACRO_MACH MACH_PORT_TYPE_DEAD_NAME;
MACRO_MACH MACH_PORT_TYPE_DNREQUEST;
MACRO_MACH MACH_PORT_TYPE_NONE;
MACRO_MACH MACH_PORT_TYPE_PORT_OR_DEAD;
MACRO_MACH MACH_PORT_TYPE_PORT_RIGHTS;
MACRO_MACH MACH_PORT_TYPE_PORT_SET;
MACRO_MACH MACH_PORT_TYPE_RECEIVE;
MACRO_MACH MACH_PORT_TYPE_SEND;
MACRO_MACH MACH_PORT_TYPE_SEND_ONCE;
MACRO_MACH MACH_PORT_TYPE_SEND_RECEIVE;
MACRO_MACH MACH_PORT_TYPE_SEND_RIGHTS;
MACRO_MACH_MSG MACH_RCV_BODY_ERROR;
MACRO_MACH_MSG MACH_RCV_HEADER_ERROR;
MACRO_MACH_MSG MACH_RCV_INTERRUPT;
MACRO_MACH_MSG MACH_RCV_INTERRUPTED;
MACRO_MACH_MSG MACH_RCV_INVALID_DATA;
MACRO_MACH_MSG MACH_RCV_INVALID_NAME;
MACRO_MACH_MSG MACH_RCV_INVALID_NOTIFY;
MACRO_MACH_MSG MACH_RCV_INVALID_TRAILER;
MACRO_MACH_MSG MACH_RCV_INVALID_TYPE;
MACRO_MACH_MSG MACH_RCV_IN_PROGRESS;
MACRO_MACH_MSG MACH_RCV_IN_PROGRESS_TIMED;
MACRO_MACH_MSG MACH_RCV_IN_SET;
MACRO_MACH_MSG MACH_RCV_LARGE;
MACRO_MACH_MSG MACH_RCV_MSG;
MACRO_MACH_MSG MACH_RCV_NOTIFY;
MACRO_MACH_MSG MACH_RCV_OVERWRITE;
MACRO_MACH_MSG MACH_RCV_PORT_CHANGED;
MACRO_MACH_MSG MACH_RCV_PORT_DIED;
MACRO_MACH_MSG MACH_RCV_SCATTER_SMALL;
MACRO_MACH_MSG MACH_RCV_TIMED_OUT;
MACRO_MACH_MSG MACH_RCV_TIMEOUT;
MACRO_MACH_MSG MACH_RCV_TOO_LARGE;
MACRO_MACH_MSG MACH_RCV_TRAILER_MASK;
MACRO_MACH_MSG MACH_RCV_TRAILER_NULL;
MACRO_MACH_MSG MACH_RCV_TRAILER_SENDER;
MACRO_MACH_MSG MACH_RCV_TRAILER_SEQNO;
MACRO_MACH_MSG MACH_SEND_ALWAYS;
MACRO_MACH_MSG MACH_SEND_CANCEL;
MACRO_MACH_MSG MACH_SEND_INTERRUPT;
MACRO_MACH_MSG MACH_SEND_INTERRUPTED;
MACRO_MACH_MSG MACH_SEND_INVALID_DATA;
MACRO_MACH_MSG MACH_SEND_INVALID_DEST;
MACRO_MACH_MSG MACH_SEND_INVALID_HEADER;
MACRO_MACH_MSG MACH_SEND_INVALID_MEMORY;
MACRO_MACH_MSG MACH_SEND_INVALID_NOTIFY;
MACRO_MACH_MSG MACH_SEND_INVALID_REPLY;
MACRO_MACH_MSG MACH_SEND_INVALID_RIGHT;
MACRO_MACH_MSG MACH_SEND_INVALID_RT_OOL_SIZE;
MACRO_MACH_MSG MACH_SEND_INVALID_TRAILER;
MACRO_MACH_MSG MACH_SEND_INVALID_TYPE;
MACRO_MACH_MSG MACH_SEND_IN_PROGRESS;
MACRO_MACH_MSG MACH_SEND_MSG;
MACRO_MACH_MSG MACH_SEND_MSG_TOO_SMALL;
MACRO_MACH_MSG MACH_SEND_NO_BUFFER;
MACRO_MACH_MSG MACH_SEND_TIMED_OUT;
MACRO_MACH_MSG MACH_SEND_TIMEOUT;
MACRO_MACH_MSG MACH_SEND_TOO_LARGE;
MACRO_MACH_MSG MACH_SEND_TRAILER;
MACRO_MAC MAC_OS_X_VERSION_10_0;
MACRO_MAC MAC_OS_X_VERSION_10_1;
MACRO_MAC MAC_OS_X_VERSION_10_2;
MACRO_MAC MAC_OS_X_VERSION_10_3;
MACRO_MAC MAC_OS_X_VERSION_MAX_ALLOWED;
MACRO_MAC MAC_OS_X_VERSION_MIN_REQUIRED;
MACRO_MATH MATH_ERREXCEPT;
MACRO_MATH MATH_ERRNO;
MACRO_MATTR MATTR_CACHE;
MACRO_MATTR MATTR_MIGRATE;
MACRO_MATTR MATTR_REPLICATE;
MACRO_MATTR MATTR_VAL_CACHE_FLUSH;
MACRO_MATTR MATTR_VAL_CACHE_SYNC;
MACRO_MATTR MATTR_VAL_DCACHE_FLUSH;
MACRO_MATTR MATTR_VAL_GET;
MACRO_MATTR MATTR_VAL_GET_INFO;
MACRO_MATTR MATTR_VAL_ICACHE_FLUSH;
MACRO_MATTR MATTR_VAL_OFF;
MACRO_MATTR MATTR_VAL_ON;
MACRO_MAX_CANON MAX_CANON;
MACRO_MAX_CANON MAX_INPUT;
MACRO_MAX_UPL MAX_UPL_TRANSFER;
MACRO_MB MB_LEN_MAX;
MACRO_MEMORY MEMORY_OBJECT_ATTRIBUTE_INFO;
MACRO_MEMORY MEMORY_OBJECT_BEHAVIOR_INFO;
MACRO_VM_MAP MEMORY_OBJECT_CONTROL_NULL;
MACRO_MEMORY MEMORY_OBJECT_COPY_CALL;
MACRO_MEMORY MEMORY_OBJECT_COPY_DELAY;
MACRO_MEMORY MEMORY_OBJECT_COPY_INVALID;
MACRO_MEMORY MEMORY_OBJECT_COPY_NONE;
MACRO_MEMORY MEMORY_OBJECT_COPY_SYMMETRIC;
MACRO_MEMORY MEMORY_OBJECT_COPY_SYNC;
MACRO_MEMORY MEMORY_OBJECT_COPY_TEMPORARY;
MACRO_MEMORY MEMORY_OBJECT_DATA_FLUSH;
MACRO_MEMORY MEMORY_OBJECT_DATA_NO_CHANGE;
MACRO_MEMORY MEMORY_OBJECT_DATA_PURGE;
MACRO_MEMORY MEMORY_OBJECT_DATA_SYNC;
MACRO_VM_MAP MEMORY_OBJECT_DEFAULT_NULL;
MACRO_MEMORY MEMORY_OBJECT_INFO_MAX;
MACRO_VM_MAP MEMORY_OBJECT_NAME_NULL;
MACRO_VM_MAP MEMORY_OBJECT_NULL;
MACRO_MEMORY MEMORY_OBJECT_PERFORMANCE_INFO;
MACRO_MEMORY_OBJECT MEMORY_OBJECT_RELEASE_NO_OP;
MACRO_MEMORY_OBJECT MEMORY_OBJECT_RESPECT_CACHE;
MACRO_MEMORY MEMORY_OBJECT_RETURN_ALL;
MACRO_MEMORY MEMORY_OBJECT_RETURN_ANYTHING;
MACRO_MEMORY MEMORY_OBJECT_RETURN_DIRTY;
MACRO_MEMORY MEMORY_OBJECT_RETURN_NONE;
MACRO_MEMORY_OBJECT MEMORY_OBJECT_TERMINATE_IDLE;
$00A17738C60DB5C35B723D2BB0B9AA22 MIDIDataID;
MACRO_MINSIGSTKSZ MINSIGSTKSZ;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_ARP;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_ATALK;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_CFIG;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_DLPI;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_ECHO;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_HAVOC;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_IPX;
$91CF377221C1C24D604226932849A88E MIOC_ISDN;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_ND;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_OT;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_RESERVEDf;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_RESERVEDi;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_RESERVEDp;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_RESERVEDr;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_RESERVEDs;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_SAD;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_SIOC;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_SOCKETS;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_SRL;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_STREAMIO;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_STRLOG;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_TCP;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_TLI;
$DFCAF5062B48968D284D5D5FB2AA5CF6 MIOC_TMOD;
MACRO_MIXEDMODE MIXEDMODE_CALLS_ARE_FUNCTIONS;
$623B9655B59700781BABFF0C16AAACA2 MORECTL;
$623B9655B59700781BABFF0C16AAACA2 MOREDATA;
$DBB36D2F2B5AF5F44A3E332AC53C8396 MPLibrary_DevelopmentRevision;
$DBB36D2F2B5AF5F44A3E332AC53C8396 MPLibrary_MajorVersion;
$DBB36D2F2B5AF5F44A3E332AC53C8396 MPLibrary_MinorVersion;
$DBB36D2F2B5AF5F44A3E332AC53C8396 MPLibrary_Release;
$A0D6B344A48F2EE2BA7AFA0B4B01B1A5 MSG_ANY;
$A0D6B344A48F2EE2BA7AFA0B4B01B1A5 MSG_BAND;
$A0D6B344A48F2EE2BA7AFA0B4B01B1A5 MSG_HIPRI;
$AC21F300A3738CBC6E9E73B3C38F575F MUXID_ALL;
$00A17738C60DB5C35B723D2BB0B9AA22 MarkerID;
$EDCE395C49B82023859AF336FAAFFABB MediaBaySndEnBit;
$1EF659AD20943A3AB2CCBDF5B021B8C6 MediaBaySndEnMask;
MACRO_NAME NAME_MAX;
MACRO_SLOT NAME_SERVER_SLOT;
MACRO_NBBY NBBY;
MACRO_NAME NGROUPS_MAX;
MACRO_NL NL_ARGMAX;
MACRO_NL NL_LANGMAX;
MACRO_NL NL_MSGMAX;
MACRO_NL NL_NMAX;
MACRO_NL NL_SETMAX;
MACRO_NL NL_TEXTMAX;
MACRO_NON NON_MAC_PIXEL_FORMATS;
MACRO_PER_SEC NSEC_PER_SEC;
MACRO_NSEC NSEC_PER_USEC;
MACRO_NSIG NSIG;
MACRO_NS NS_NEW_API;
MACRO_NULL NULL;
$00A17738C60DB5C35B723D2BB0B9AA22 NameID;
$2747613A23130B32448BD94584CA2B9C NetActivity;
$A0509ECBB3972BBEF620EDFE2C89E5A2 NoLooping;
$65C805F25D863A90F2F9C5C002B33087 NoneType;
MACRO_OLDGDEVICESTRUCT OLDGDEVICESTRUCT;
MACRO_OLDPIXMAPSTRUCT OLDPIXMAPSTRUCT;
MACRO_OLDROUTINENAMES OLDROUTINENAMES;
MACRO_OLD OLD_MEMORY_OBJECT_ATTRIBUTE_INFO;
MACRO_OLD OLD_MEMORY_OBJECT_BEHAVIOR_INFO;
MACRO_OPAQUE OPAQUE_TOOLBOX_STRUCTS;
MACRO_OPAQUE OPAQUE_UPP_TYPES;
MACRO_NAME OPEN_MAX;
$5E065B0830FFAFA0BDF10ED733D56970 OPT_ADDMCAST;
$A2A975C723B941E14B5EA3E71535DCCB OPT_ALERTENABLE;
$A2A975C723B941E14B5EA3E71535DCCB OPT_CHECKSUM;
$5E065B0830FFAFA0BDF10ED733D56970 OPT_DELMCAST;
$A2A975C723B941E14B5EA3E71535DCCB OPT_ENABLEEOM;
$A2A975C723B941E14B5EA3E71535DCCB OPT_INTERVAL;
$A2A975C723B941E14B5EA3E71535DCCB OPT_KEEPALIVE;
$5E065B0830FFAFA0BDF10ED733D56970 OPT_RCVDESTADDR;
$5E065B0830FFAFA0BDF10ED733D56970 OPT_RCVPACKETTYPE;
$A2A975C723B941E14B5EA3E71535DCCB OPT_RETRYCNT;
$A2A975C723B941E14B5EA3E71535DCCB OPT_SELFSEND;
$A2A975C723B941E14B5EA3E71535DCCB OPT_SERVERSTATUS;
$5E065B0830FFAFA0BDF10ED733D56970 OPT_SETPROMISCUOUS;
$5E065B0830FFAFA0BDF10ED733D56970 OPT_SETRAWMODE;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAControlFlowError;
$F97DFC0CBD96E281EE529FFE351F7F80 OSADuplicateHandler;
$F97DFC0CBD96E281EE529FFE351F7F80 OSADuplicateParameter;
$F97DFC0CBD96E281EE529FFE351F7F80 OSADuplicateProperty;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAIllegalAccess;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAIllegalAssign;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAIllegalIndex;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAIllegalRange;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAInconsistentDeclarations;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAMessageNotUnderstood;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAMissingParameter;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAParameterMismatch;
$F97DFC0CBD96E281EE529FFE351F7F80 OSASyntaxError;
$F97DFC0CBD96E281EE529FFE351F7F80 OSASyntaxTypeError;
$F97DFC0CBD96E281EE529FFE351F7F80 OSATokenTooLong;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAUndefinedHandler;
$F97DFC0CBD96E281EE529FFE351F7F80 OSAUndefinedVariable;
MACRO_OTCARBONAPPLICATION OTCARBONAPPLICATION;
MACRO_OTDEBUG OTDEBUG;
MACRO_OTKERNEL OTKERNEL;
MACRO_OTUNIXERRORS OTUNIXERRORS;
MACRO_OVERFLOW OVERFLOW;
$2747613A23130B32448BD94584CA2B9C OverallAct;
$1699EC0844F3EEA22797F03D827335E8 PAP_OPT_OPENRETRY;
MACRO_PASS PASS_MAX;
MACRO_NAME PATH_MAX;
$EDCE395C49B82023859AF336FAAFFABB PCCardSndEnBit;
$1EF659AD20943A3AB2CCBDF5B021B8C6 PCCardSndEnMask;
$EDCE395C49B82023859AF336FAAFFABB PCISndEnBit;
$1EF659AD20943A3AB2CCBDF5B021B8C6 PCISndEnMask;
MACRO_ENDIAN PDP_ENDIAN;
MACRO_PIPE PIPE_BUF;
MACRO_PLOSS PLOSS;
MACRO_PM PM_USE_SESSION_APIS;
$9C8BA511D53802F27EA58D26B9BDFF85 PMgrStateQType;
MACRO_POLICYCLASS POLICYCLASS_FIXEDPRI;
MACRO_POLICY POLICY_FIFO;
MACRO_POLICY POLICY_NULL;
MACRO_POLICY POLICY_RR;
MACRO_POLICY POLICY_TIMESHARE;
MACRO_PORT PORT_DEAD;
MACRO_PORT PORT_NULL;
MACRO_PPC PPC_EXCEPTION_STATE;
MACRO_PPC PPC_FLOAT_STATE;
MACRO_PPC PPC_THREAD_STATE;
MACRO_STATE_MAX PPC_THREAD_STATE_MAX;
MACRO_PPC PPC_VECTOR_STATE;
$DE490049644E7C6A8868423C628E99D7 PPP_OPT_GETCURRENTSTATE;
MACRO_PRAGMA PRAGMA_ENUM_ALWAYSINT;
MACRO_PRAGMA PRAGMA_ENUM_OPTIONS;
MACRO_PRAGMA PRAGMA_ENUM_PACK;
MACRO_PRAGMA PRAGMA_IMPORT;
MACRO_PRAGMA PRAGMA_ONCE;
MACRO_PRAGMA PRAGMA_STRUCT_ALIGN;
MACRO_PRAGMA PRAGMA_STRUCT_PACK;
MACRO_PRAGMA PRAGMA_STRUCT_PACKPUSH;
MACRO_PROCESSOR PROCESSOR_BASIC_INFO;
MACRO_PROCESSOR PROCESSOR_CPU_LOAD_INFO;
MACRO_PROCESSOR PROCESSOR_INFO_MAX;
MACRO_TASK_NULL PROCESSOR_NULL;
MACRO_PROCESSOR PROCESSOR_PM_CLR_PMC;
MACRO_PROCESSOR PROCESSOR_PM_REGS_INFO;
MACRO_PROCESSOR PROCESSOR_PM_SET_MMCR;
MACRO_PROCESSOR PROCESSOR_PM_SET_REGS;
MACRO_PROCESSOR_SET PROCESSOR_SET_BASIC_INFO;
MACRO_PROCESSOR_SET PROCESSOR_SET_ENABLED_POLICIES;
MACRO_PROCESSOR_SET PROCESSOR_SET_FIFO_DEFAULT;
MACRO_PROCESSOR_SET PROCESSOR_SET_FIFO_LIMITS;
MACRO_PROCESSOR PROCESSOR_SET_INFO_MAX;
MACRO_PROCESSOR_SET PROCESSOR_SET_LOAD_INFO;
MACRO_TASK_NULL PROCESSOR_SET_NULL;
MACRO_PROCESSOR_SET PROCESSOR_SET_RR_DEFAULT;
MACRO_PROCESSOR_SET PROCESSOR_SET_RR_LIMITS;
MACRO_PROCESSOR_SET PROCESSOR_SET_TIMESHARE_DEFAULT;
MACRO_PROCESSOR_SET PROCESSOR_SET_TIMESHARE_LIMITS;
MACRO_PROCESSOR PROCESSOR_TEMPERATURE;
MACRO_PROCESSOR PROCESSOR_TEMPERATURE_COUNT;
MACRO_PTHREAD PTHREAD_DESTRUCTOR_ITERATIONS;
MACRO_PTHREAD PTHREAD_KEYS_MAX;
MACRO_PTHREAD PTHREAD_STACK_MIN;
MACRO_PTRDIFF PTRDIFF_MAX;
MACRO_PTRDIFF PTRDIFF_MIN;
MACRO_SSIZE QUAD_MAX;
MACRO_QUAD QUAD_MIN;
MACRO_RAND RAND_MAX;
MACRO_CLOCK REALTIME_CLOCK;
$4EE0FB99968ADB58B01C3A33A60FE053 REGS_SAVED_ALL;
$4EE0FB99968ADB58B01C3A33A60FE053 REGS_SAVED_CALLER;
$4EE0FB99968ADB58B01C3A33A60FE053 REGS_SAVED_NONE;
MACRO_COLL RE_DUP_MAX;
$0E23D599E11DBFBA963BDC553F57C6A0 RFILL;
$008155B23C6C847D4FC048674B3D561B RGBDirect;
$0E23D599E11DBFBA963BDC553F57C6A0 RMSGD;
$0E23D599E11DBFBA963BDC553F57C6A0 RMSGN;
$0E23D599E11DBFBA963BDC553F57C6A0 RNORM;
$ACBF80B47DF596401AE27985605ED1CD RPROTDAT;
$ACBF80B47DF596401AE27985605ED1CD RPROTDIS;
$ACBF80B47DF596401AE27985605ED1CD RPROTNORM;
$3873DF13CB08E61F19CE0A69CFF61EB8 RS_HIPRI;
MACRO_SA SA_DISABLE;
MACRO_SA SA_NOCLDSTOP;
MACRO_SA SA_NOCLDWAIT;
MACRO_SA SA_NODEFER;
MACRO_SA SA_ONSTACK;
MACRO_SA SA_RESETHAND;
MACRO_SA SA_RESTART;
MACRO_SA SA_SIGINFO;
MACRO_SA SA_USERTRAMP;
MACRO_SCHAR_MIN SCHAR_MAX;
MACRO_SCHAR_MIN SCHAR_MIN;
$60973075C263390C33B1068EA6231C6E SCSIAbortCommand;
$60973075C263390C33B1068EA6231C6E SCSIBusInquiry;
$60973075C263390C33B1068EA6231C6E SCSIExecIO;
$60973075C263390C33B1068EA6231C6E SCSINop;
$60973075C263390C33B1068EA6231C6E SCSIReleaseQ;
$60973075C263390C33B1068EA6231C6E SCSIResetBus;
$60973075C263390C33B1068EA6231C6E SCSIResetDevice;
$60973075C263390C33B1068EA6231C6E SCSITerminateIO;
$DE490049644E7C6A8868423C628E99D7 SEC_OPT_ID;
$DE490049644E7C6A8868423C628E99D7 SEC_OPT_OUTAUTHENTICATION;
$DE490049644E7C6A8868423C628E99D7 SEC_OPT_PASSWORD;
MACRO_SEEK SEEK_CUR;
MACRO_SEEK SEEK_END;
MACRO_SEEK SEEK_SET;
MACRO_SEGV SEGV_ACCERR;
MACRO_SEGV SEGV_MAPERR;
MACRO_SEGV SEGV_NOOP;
MACRO_TASK_NULL SEMAPHORE_NULL;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_BAUDRATE;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_BURSTMODE;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_DATABITS;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_DUMMY;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_ERRORCHARACTER;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_EXTCLOCK;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_HANDSHAKE;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_PARITY;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_RCVTIMEOUT;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_STATUS;
$F7270013D1659520591D50BB045CDF48 SERIAL_OPT_STOPBITS;
MACRO_SLOT SERVICE_SLOT;
MACRO_SHRT SHRT_MAX;
MACRO_SHRT SHRT_MIN;
MACRO_SIGNAL SIGABRT;
MACRO_SIGNAL SIGALRM;
MACRO_SIGNAL SIGBUS;
MACRO_SIGNAL SIGCHLD;
MACRO_SIGNAL SIGCONT;
MACRO_SIGDIGLEN SIGDIGLEN;
MACRO_SIGNAL SIGEMT;
MACRO_SIGEV SIGEV_NONE;
MACRO_SIGEV SIGEV_SIGNAL;
MACRO_SIGEV SIGEV_THREAD;
MACRO_SIGNAL SIGFPE;
MACRO_SIGNAL SIGHUP;
MACRO_SIGNAL SIGILL;
MACRO_SIGNAL SIGINFO;
MACRO_SIGNAL SIGINT;
MACRO_SIGNAL SIGIO;
MACRO_SIGNAL SIGIOT;
MACRO_SIGNAL SIGKILL;
MACRO_SIGNAL SIGPIPE;
MACRO_SIGNAL SIGPROF;
MACRO_SIGNAL SIGQUIT;
MACRO_SIGNAL SIGSEGV;
MACRO_SIGSTKSZ SIGSTKSZ;
MACRO_SIGNAL SIGSTOP;
MACRO_SIGNAL SIGSYS;
MACRO_SIGNAL SIGTERM;
MACRO_SIGNAL SIGTRAP;
MACRO_SIGNAL SIGTSTP;
MACRO_SIGNAL SIGTTIN;
MACRO_SIGNAL SIGTTOU;
MACRO_SIGNAL SIGURG;
MACRO_SIGNAL SIGUSR1;
MACRO_SIGNAL SIGUSR2;
MACRO_SIGNAL SIGVTALRM;
MACRO_SIGNAL SIGWINCH;
MACRO_SIGNAL SIGXCPU;
MACRO_SIGNAL SIGXFSZ;
MACRO_SIG SIG_BLOCK;
MACRO_SIG SIG_SETMASK;
MACRO_SIG SIG_UNBLOCK;
MACRO_DOMAIN SING;
MACRO_SIZE SIZE_MAX;
MACRO_SSIZE SIZE_T_MAX;
MACRO_SI SI_ASYNCIO;
MACRO_SI SI_MESGQ;
MACRO_SI SI_QUEUE;
MACRO_SI SI_TIMER;
MACRO_SI SI_USER;
$EC37D255485C172A9DE951B709A61564 SL_CONSOLE;
$EC37D255485C172A9DE951B709A61564 SL_ERROR;
$EC37D255485C172A9DE951B709A61564 SL_FATAL;
$EC37D255485C172A9DE951B709A61564 SL_NOTE;
$EC37D255485C172A9DE951B709A61564 SL_NOTIFY;
$EC37D255485C172A9DE951B709A61564 SL_TRACE;
$EC37D255485C172A9DE951B709A61564 SL_WARN;
MACRO_SM SM_COW;
MACRO_SM SM_EMPTY;
MACRO_SM SM_PRIVATE;
MACRO_SM SM_PRIVATE_ALIASED;
MACRO_SM SM_SHARED;
MACRO_SM SM_SHARED_ALIASED;
MACRO_SM SM_TRUESHARED;
$389472E42E6B4667E0DB660FBA08A4C9 SNDZERO;
MACRO_SSIZE SSIZE_MAX;
MACRO_SS SS_DISABLE;
MACRO_SS SS_ONSTACK;
MACRO_SV_ONSTACK SV_INTERRUPT;
MACRO_SV_ONSTACK SV_NOCLDSTOP;
MACRO_SV_ONSTACK SV_NODEFER;
MACRO_SV_ONSTACK SV_ONSTACK;
MACRO_SV_ONSTACK SV_RESETHAND;
MACRO_SV SV_SAVE_REGS;
MACRO_SV_ONSTACK SV_SIGINFO;
MACRO_CLOCK SYSTEM_CLOCK;
$50EF704C2A23D9050B5389BEE69EACA0 S_BANDURG;
$50EF704C2A23D9050B5389BEE69EACA0 S_ERROR;
$50EF704C2A23D9050B5389BEE69EACA0 S_HANGUP;
$50EF704C2A23D9050B5389BEE69EACA0 S_HIPRI;
$50EF704C2A23D9050B5389BEE69EACA0 S_INPUT;
$50EF704C2A23D9050B5389BEE69EACA0 S_MSG;
$50EF704C2A23D9050B5389BEE69EACA0 S_OUTPUT;
$50EF704C2A23D9050B5389BEE69EACA0 S_RDBAND;
$50EF704C2A23D9050B5389BEE69EACA0 S_RDNORM;
$50EF704C2A23D9050B5389BEE69EACA0 S_WRBAND;
$50EF704C2A23D9050B5389BEE69EACA0 S_WRNORM;
$621775189DBE97248B7FB782F8F10678 SlpTypeErr;
$00A17738C60DB5C35B723D2BB0B9AA22 SoundDataID;
$124B04BDEFDD129AA1871A00FF0D0C6A TACCES;
$124B04BDEFDD129AA1871A00FF0D0C6A TADDRBUSY;
MACRO_TARGET_API TARGET_API_MAC_CARBON;
MACRO_TARGET_API TARGET_API_MAC_OS8;
MACRO_TARGET_API TARGET_API_MAC_OSX;
MACRO_TARGET_API TARGET_CARBON;
MACRO_TARGET TARGET_CPU_68K;
MACRO_TARGET TARGET_CPU_ALPHA;
MACRO_TARGET TARGET_CPU_MIPS;
MACRO_TARGET TARGET_CPU_PPC;
MACRO_TARGET TARGET_CPU_SPARC;
MACRO_TARGET TARGET_CPU_X86;
MACRO_TARGET TARGET_OS_MAC;
MACRO_TARGET TARGET_OS_UNIX;
MACRO_TARGET TARGET_OS_WIN32;
MACRO_TARGET TARGET_RT_BIG_ENDIAN;
MACRO_TARGET TARGET_RT_LITTLE_ENDIAN;
MACRO_TARGET TARGET_RT_MAC_CFM;
MACRO_TARGET TARGET_RT_MAC_MACHO;
task_role TASK_BACKGROUND_APPLICATION;
MACRO_TASK TASK_BASIC_INFO;
MACRO_TASK TASK_BOOTSTRAP_PORT;
MACRO_TASK TASK_CATEGORY_POLICY;
task_role TASK_CONTROL_APPLICATION;
MACRO_TASK TASK_EVENTS_INFO;
task_role TASK_FOREGROUND_APPLICATION;
task_role TASK_GRAPHICS_SERVER;
MACRO_TASK TASK_HOST_PORT;
MACRO_TASK TASK_INFO_MAX;
MACRO_TASK TASK_KERNEL_PORT;
MACRO_TASK_NULL TASK_NULL;
MACRO_TASK TASK_PAGED_LEDGER_PORT;
task_role TASK_RENICED;
MACRO_TASK TASK_SCHED_FIFO_INFO;
MACRO_TASK TASK_SCHED_INFO;
MACRO_TASK TASK_SCHED_RR_INFO;
MACRO_TASK TASK_SCHED_TIMESHARE_INFO;
MACRO_TASK TASK_SECURITY_TOKEN;
MACRO_TASK TASK_THREAD_TIMES_INFO;
task_role TASK_UNSPECIFIED;
MACRO_TASK TASK_WIRED_LEDGER_PORT;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADADDR;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADDATA;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADF;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADFLAG;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADNAME;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADOPT;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADQLEN;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADSEQ;
$124B04BDEFDD129AA1871A00FF0D0C6A TBADSYNC;
$124B04BDEFDD129AA1871A00FF0D0C6A TBUFOVFLW;
$124B04BDEFDD129AA1871A00FF0D0C6A TCANCELED;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_ABORT_THRESHOLD;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_CONN_ABORT_THRESHOLD;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_CONN_NOTIFY_THRESHOLD;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_KEEPALIVE;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_MAXSEG;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_NODELAY;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_NOTIFY_THRESHOLD;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_OOBINLINE;
$E0988D02CFB57E3F6C66996D8BF080D7 TCP_URGENT_PTR_TYPE;
$124B04BDEFDD129AA1871A00FF0D0C6A TFLOW;
MACRO_THREAD_INFO THREAD_BASIC_INFO;
MACRO_THREAD_SCHED THREAD_EXTENDED_POLICY;
MACRO_THREAD_INFO THREAD_INFO_MAX;
MACRO_THREAD_SCHED THREAD_KERNEL_PORT;
MACRO_TASK_NULL THREAD_NULL;
MACRO_THREAD_SCHED THREAD_PRECEDENCE_POLICY;
MACRO_THREAD_SCHED THREAD_SCHED_FIFO_INFO;
MACRO_THREAD_SCHED THREAD_SCHED_RR_INFO;
MACRO_THREAD_SCHED THREAD_SCHED_TIMESHARE_INFO;
MACRO_THREAD_SCHED THREAD_STANDARD_POLICY;
MACRO_THREAD_SCHED THREAD_STANDARD_POLICY_COUNT;
MACRO_THREAD_STATE THREAD_STATE_FLAVOR_LIST;
MACRO_STATE_MAX THREAD_STATE_MAX;
MACRO_THREAD THREAD_STATE_NONE;
MACRO_THREAD_SCHED THREAD_TIME_CONSTRAINT_POLICY;
MACRO_TASK_NULL THR_ACT_NULL;
MACRO_TH TH_FLAGS_IDLE;
MACRO_TH TH_FLAGS_SWAPPED;
MACRO_TH TH_STATE_HALTED;
MACRO_TH TH_STATE_RUNNING;
MACRO_TH TH_STATE_STOPPED;
MACRO_TH TH_STATE_UNINTERRUPTIBLE;
MACRO_TH TH_STATE_WAITING;
MACRO_TH TH_USAGE_SCALE;
MACRO_TIME_ABSOLUTE TIME_ABSOLUTE;
MACRO_TIME TIME_MICROS_MAX;
MACRO_TIME_ABSOLUTE TIME_RELATIVE;
$124B04BDEFDD129AA1871A00FF0D0C6A TINDOUT;
$124B04BDEFDD129AA1871A00FF0D0C6A TLASTXTIERROR;
$124B04BDEFDD129AA1871A00FF0D0C6A TLOOK;
MACRO_TLOSS TLOSS;
MACRO_TMP TMP_MAX;
$124B04BDEFDD129AA1871A00FF0D0C6A TNOADDR;
$124B04BDEFDD129AA1871A00FF0D0C6A TNODATA;
$124B04BDEFDD129AA1871A00FF0D0C6A TNODIS;
$124B04BDEFDD129AA1871A00FF0D0C6A TNOREL;
$124B04BDEFDD129AA1871A00FF0D0C6A TNOSTRUCTYPE;
$124B04BDEFDD129AA1871A00FF0D0C6A TNOTSUPPORT;
$124B04BDEFDD129AA1871A00FF0D0C6A TNOUDERR;
$124B04BDEFDD129AA1871A00FF0D0C6A TOUTSTATE;
$124B04BDEFDD129AA1871A00FF0D0C6A TPROTO;
$124B04BDEFDD129AA1871A00FF0D0C6A TPROVMISMATCH;
$124B04BDEFDD129AA1871A00FF0D0C6A TQFULL;
$124B04BDEFDD129AA1871A00FF0D0C6A TRESADDR;
$124B04BDEFDD129AA1871A00FF0D0C6A TRESQLEN;
MACRO_BOOL TRUE;
$124B04BDEFDD129AA1871A00FF0D0C6A TSTATECHNG;
$124B04BDEFDD129AA1871A00FF0D0C6A TSUCCESS;
$124B04BDEFDD129AA1871A00FF0D0C6A TSYSERR;
MACRO_TYPE TYPE_BOOL;
MACRO_TYPE TYPE_EXTENDED;
MACRO_TYPE TYPE_LONGDOUBLE_IS_DOUBLE;
MACRO_TYPE TYPE_LONGLONG;
$FD0BD316F2BBD909B5FBCB7E3B7055DB T_ABSREQ;
$55E5252D84E6F1A48D581BACE889D526 T_ACCEPTCOMPLETE;
$C6BFFF151462A91B7033E1DC3AE9C4D2 T_ACKNOWLEDGED;
$ABC1448E5B265A8451207B34E1682A6C T_ADDR;
$ABC1448E5B265A8451207B34E1682A6C T_ALL;
$32DB5D6554B35DA6B92CAAF3073356B7 T_ALLNODESTAKENEVENT;
$89D722DEA9D8228358FF65E641FB59D1 T_ALLOPT;
$32DB5D6554B35DA6B92CAAF3073356B7 T_ATALKBADROUTEREVENT;
$26211C6CDB486A5990962440EC282570 T_ATALKCABLERANGECHANGEDEVENT;
$26211C6CDB486A5990962440EC282570 T_ATALKCONNECTIVITYCHANGEDEVENT;
$26211C6CDB486A5990962440EC282570 T_ATALKINTERNETAVAILABLEEVENT;
$26211C6CDB486A5990962440EC282570 T_ATALKROUTERDOWNEVENT;
$26211C6CDB486A5990962440EC282570 T_ATALKROUTERUPEVENT;
$26211C6CDB486A5990962440EC282570 T_ATALKZONENAMECHANGEDEVENT;
$573CB53713C5E6F09A2A84961E8811D7 T_BIND;
$55E5252D84E6F1A48D581BACE889D526 T_BINDCOMPLETE;
$573CB53713C5E6F09A2A84961E8811D7 T_CALL;
$A9AD3456580403ACF9C6B4A7048AB690 T_CAN_RESOLVE_ADDR;
$A9AD3456580403ACF9C6B4A7048AB690 T_CAN_SUPPLY_MIB;
$A9AD3456580403ACF9C6B4A7048AB690 T_CAN_SUPPORT_MDATA;
$63EE4B871C60ECD68861B7BBEC76E91F T_CHECK;
$093F6409D7EA36C75D181D4E80A8B0F5 T_CLTS;
$55E5252D84E6F1A48D581BACE889D526 T_CONNECT;
$093F6409D7EA36C75D181D4E80A8B0F5 T_COTS;
$093F6409D7EA36C75D181D4E80A8B0F5 T_COTS_ORD;
$732C3EC3B03C84336B05BF6D4C2698DB T_CRITIC_ECP;
$63EE4B871C60ECD68861B7BBEC76E91F T_CURRENT;
$55E5252D84E6F1A48D581BACE889D526 T_DATA;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_DATAXFER;
$63EE4B871C60ECD68861B7BBEC76E91F T_DEFAULT;
$55E5252D84E6F1A48D581BACE889D526 T_DELNAMECOMPLETE;
$573CB53713C5E6F09A2A84961E8811D7 T_DIS;
$55E5252D84E6F1A48D581BACE889D526 T_DISCONNECT;
$55E5252D84E6F1A48D581BACE889D526 T_DISCONNECTCOMPLETE;
$863063BC0345B3D471E4FB0ED742E641 T_DNRADDRTONAMECOMPLETE;
$863063BC0345B3D471E4FB0ED742E641 T_DNRMAILEXCHANGECOMPLETE;
$863063BC0345B3D471E4FB0ED742E641 T_DNRQUERYCOMPLETE;
$863063BC0345B3D471E4FB0ED742E641 T_DNRSTRINGTOADDRCOMPLETE;
$863063BC0345B3D471E4FB0ED742E641 T_DNRSYSINFOCOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_ERROR;
$55E5252D84E6F1A48D581BACE889D526 T_EXDATA;
$C6BFFF151462A91B7033E1DC3AE9C4D2 T_EXPEDITED;
$7A6715927596429A14D394264CFAAABF T_FAILURE;
$32DB5D6554B35DA6B92CAAF3073356B7 T_FIXEDNODEBADEVENT;
$32DB5D6554B35DA6B92CAAF3073356B7 T_FIXEDNODETAKENEVENT;
$732C3EC3B03C84336B05BF6D4C2698DB T_FLASH;
$D314D2498590FE4F43078F561CDEDDAA T_GARBAGE;
$26211C6CDB486A5990962440EC282570 T_GETATALKINFOCOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_GETINFOCOMPLETE;
$26211C6CDB486A5990962440EC282570 T_GETLOCALZONESCOMPLETE;
$26211C6CDB486A5990962440EC282570 T_GETMYZONECOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_GETPROTADDRCOMPLETE;
$26211C6CDB486A5990962440EC282570 T_GETZONELISTCOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_GODATA;
$55E5252D84E6F1A48D581BACE889D526 T_GOEXDATA;
$0CC70779DD9BFC51FAFF91E26389D20A T_HIREL;
$0CC70779DD9BFC51FAFF91E26389D20A T_HITHRPT;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_IDLE;
$732C3EC3B03C84336B05BF6D4C2698DB T_IMMEDIATE;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_INCON;
$732C3EC3B03C84336B05BF6D4C2698DB T_INETCONTROL;
$7F1F56674A5E66FD352F305A075D5A6B T_INFINITE;
$573CB53713C5E6F09A2A84961E8811D7 T_INFO;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_INREL;
$7F1F56674A5E66FD352F305A075D5A6B T_INVALID;
$0CC70779DD9BFC51FAFF91E26389D20A T_LDELAY;
$55E5252D84E6F1A48D581BACE889D526 T_LISTEN;
$55E5252D84E6F1A48D581BACE889D526 T_LKUPNAMECOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_LKUPNAMERESULT;
$55E5252D84E6F1A48D581BACE889D526 T_MEMORYRELEASED;
$C6BFFF151462A91B7033E1DC3AE9C4D2 T_MORE;
$32DB5D6554B35DA6B92CAAF3073356B7 T_MPPCOMPATCFIGEVENT;
$63EE4B871C60ECD68861B7BBEC76E91F T_NEGOTIATE;
$732C3EC3B03C84336B05BF6D4C2698DB T_NETCONTROL;
$FD0BD316F2BBD909B5FBCB7E3B7055DB T_NO;
$C6BFFF151462A91B7033E1DC3AE9C4D2 T_NORECEIPT;
$0CC70779DD9BFC51FAFF91E26389D20A T_NOTOS;
$7A6715927596429A14D394264CFAAABF T_NOTSUPPORT;
$55E5252D84E6F1A48D581BACE889D526 T_OPENCOMPLETE;
$ABC1448E5B265A8451207B34E1682A6C T_OPT;
$573CB53713C5E6F09A2A84961E8811D7 T_OPTMGMT;
$55E5252D84E6F1A48D581BACE889D526 T_OPTMGMTCOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_ORDREL;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_OUTCON;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_OUTREL;
$732C3EC3B03C84336B05BF6D4C2698DB T_OVERRIDEFLASH;
$C6BFFF151462A91B7033E1DC3AE9C4D2 T_PARTIALDATA;
$7A6715927596429A14D394264CFAAABF T_PARTSUCCESS;
$55E5252D84E6F1A48D581BACE889D526 T_PASSCON;
$732C3EC3B03C84336B05BF6D4C2698DB T_PRIORITY;
$7A6715927596429A14D394264CFAAABF T_READONLY;
$55E5252D84E6F1A48D581BACE889D526 T_REGNAMECOMPLETE;
$55E5252D84E6F1A48D581BACE889D526 T_REPLY;
$55E5252D84E6F1A48D581BACE889D526 T_REPLYCOMPLETE;
$573CB53713C5E6F09A2A84961E8811D7 T_REPLYDATA;
$55E5252D84E6F1A48D581BACE889D526 T_REQUEST;
$573CB53713C5E6F09A2A84961E8811D7 T_REQUESTDATA;
$55E5252D84E6F1A48D581BACE889D526 T_RESET;
$55E5252D84E6F1A48D581BACE889D526 T_RESOLVEADDRCOMPLETE;
$732C3EC3B03C84336B05BF6D4C2698DB T_ROUTINE;
$A9AD3456580403ACF9C6B4A7048AB690 T_SENDZERO;
$7A6715927596429A14D394264CFAAABF T_SUCCESS;
$55E5252D84E6F1A48D581BACE889D526 T_SYNCCOMPLETE;
$C6BFFF151462A91B7033E1DC3AE9C4D2 T_TIMEDOUT;
$093F6409D7EA36C75D181D4E80A8B0F5 T_TRANS;
$093F6409D7EA36C75D181D4E80A8B0F5 T_TRANS_CLTS;
$093F6409D7EA36C75D181D4E80A8B0F5 T_TRANS_ORD;
$ABC1448E5B265A8451207B34E1682A6C T_UDATA;
$55E5252D84E6F1A48D581BACE889D526 T_UDERR;
$573CB53713C5E6F09A2A84961E8811D7 T_UDERROR;
$55E5252D84E6F1A48D581BACE889D526 T_UNBINDCOMPLETE;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_UNBND;
$06A7D89D3E5DF385EA1BBE3BD8E4D329 T_UNINIT;
$573CB53713C5E6F09A2A84961E8811D7 T_UNITDATA;
$573CB53713C5E6F09A2A84961E8811D7 T_UNITREPLY;
$573CB53713C5E6F09A2A84961E8811D7 T_UNITREQUEST;
$FD0BD316F2BBD909B5FBCB7E3B7055DB T_UNUSED;
$A9AD3456580403ACF9C6B4A7048AB690 T_XPG4_1;
$FD0BD316F2BBD909B5FBCB7E3B7055DB T_YES;
$07801A5B3B251E2FE1A1830D91B5053F TextWidthHook;
MACRO_UCHAR_MAX UCHAR_MAX;
$3AE31DEFEC789F421169512F9345A350 UDP_CHECKSUM;
$3AE31DEFEC789F421169512F9345A350 UDP_RX_ICMP;
MACRO_NAME UID_MAX;
MACRO_UINT8 UINT16_MAX;
MACRO_UINT8 UINT32_MAX;
MACRO_UINT8 UINT64_MAX;
MACRO_UINT8 UINT8_MAX;
MACRO_UINTMAX UINTMAX_MAX;
MACRO_UINTPTR UINTPTR_MAX;
MACRO_UINT_FAST8 UINT_FAST16_MAX;
MACRO_UINT_FAST8 UINT_FAST32_MAX;
MACRO_UINT_FAST8 UINT_FAST64_MAX;
MACRO_UINT_FAST8 UINT_FAST8_MAX;
MACRO_UINT UINT_LEAST16_MAX;
MACRO_UINT UINT_LEAST32_MAX;
MACRO_UINT UINT_LEAST64_MAX;
MACRO_UINT UINT_LEAST8_MAX;
MACRO_USHRT UINT_MAX;
MACRO_ULLONG ULLONG_MAX;
MACRO_LONG_MAX ULONG_LONG_MAX;
MACRO_ULONG ULONG_MAX;
MACRO_OVERFLOW UNDERFLOW;
MACRO_TASK_NULL UND_SERVER_NULL;
MACRO_UNIVERSAL UNIVERSAL_INTERFACES_VERSION;
$14904ED59AACBB5EDEEE60143C77F692 UNORDERED;
MACRO_UPL UPL_ABORT_DUMP_PAGES;
MACRO_UPL UPL_ABORT_ERROR;
MACRO_UPL UPL_ABORT_FREE_ON_EMPTY;
MACRO_UPL UPL_ABORT_NOTIFY_EMPTY;
MACRO_UPL UPL_ABORT_RESTART;
MACRO_UPL UPL_ABORT_UNAVAILABLE;
MACRO_UPL UPL_CHECK_DIRTY;
MACRO_UPL UPL_CLEAN_IN_PLACE;
MACRO_UPL UPL_COMMIT_CLEAR_DIRTY;
MACRO_UPL UPL_COMMIT_FREE_ON_EMPTY;
MACRO_UPL UPL_COMMIT_INACTIVATE;
MACRO_UPL UPL_COMMIT_NOTIFY_EMPTY;
MACRO_UPL UPL_COMMIT_SET_DIRTY;
MACRO_UPL UPL_COPYOUT_FROM;
MACRO_UPL UPL_DEV_MEMORY;
MACRO_UPL UPL_FILE_IO;
MACRO_UPL UPL_FLAGS_NONE;
MACRO_UPL UPL_IOSYNC;
MACRO_UPL UPL_NOBLOCK;
MACRO_UPL UPL_NOCOMMIT;
MACRO_UPL UPL_NORDAHEAD;
MACRO_UPL UPL_NO_SYNC;
MACRO_VM_MAP UPL_NULL;
MACRO_UPL UPL_PHYS_CONTIG;
MACRO_UPL UPL_POP_ABSENT;
MACRO_UPL UPL_POP_BUSY;
MACRO_UPL UPL_POP_CLR;
MACRO_UPL UPL_POP_DIRTY;
MACRO_UPL UPL_POP_DUMP;
MACRO_UPL UPL_POP_PAGEOUT;
MACRO_UPL UPL_POP_PHYSICAL;
MACRO_UPL UPL_POP_PRECIOUS;
MACRO_UPL UPL_POP_SET;
MACRO_UPL UPL_PRECIOUS;
MACRO_UPL UPL_QUERY_OBJECT_TYPE;
MACRO_UPL UPL_RET_ONLY_ABSENT;
MACRO_UPL UPL_RET_ONLY_DIRTY;
MACRO_UPL UPL_SET_INTERNAL;
MACRO_SSIZE UQUAD_MAX;
MACRO_PER_SEC USEC_PER_SEC;
MACRO_USHRT USHRT_MAX;
$2747613A23130B32448BD94584CA2B9C UsrActivity;
MACRO_VM_INHERIT VM_BEHAVIOR_DEFAULT;
MACRO_VM_INHERIT VM_BEHAVIOR_DONTNEED;
MACRO_VM_INHERIT VM_BEHAVIOR_RANDOM;
MACRO_VM_INHERIT VM_BEHAVIOR_RSEQNTL;
MACRO_VM_INHERIT VM_BEHAVIOR_SEQUENTIAL;
MACRO_VM_INHERIT VM_BEHAVIOR_WILLNEED;
MACRO_VM VM_FLAGS_ALIAS_MASK;
MACRO_VM VM_FLAGS_ANYWHERE;
MACRO_VM VM_FLAGS_FIXED;
MACRO_VM_INHERIT VM_INHERIT_COPY;
MACRO_VM_INHERIT VM_INHERIT_DEFAULT;
MACRO_VM_INHERIT VM_INHERIT_DONATE_COPY;
MACRO_VM_INHERIT VM_INHERIT_LAST_VALID;
MACRO_VM_INHERIT VM_INHERIT_NONE;
MACRO_VM_INHERIT VM_INHERIT_SHARE;
MACRO_VM_REGION VM_MAP_ENTRY_MAX;
MACRO_VM_MAP VM_MAP_NULL;
MACRO_VM VM_MEMORY_ANALYSIS_TOOL;
MACRO_VM VM_MEMORY_APPKIT;
MACRO_VM VM_MEMORY_APPLICATION_SPECIFIC_1;
MACRO_VM VM_MEMORY_APPLICATION_SPECIFIC_16;
MACRO_VM VM_MEMORY_ATS;
MACRO_VM VM_MEMORY_CARBON;
MACRO_VM VM_MEMORY_COREGRAPHICS;
MACRO_VM VM_MEMORY_DYLD;
MACRO_VM VM_MEMORY_DYLD_MALLOC;
MACRO_VM VM_MEMORY_DYLIB;
MACRO_VM VM_MEMORY_FOUNDATION;
MACRO_VM VM_MEMORY_GUARD;
MACRO_VM VM_MEMORY_IOKIT;
MACRO_VM VM_MEMORY_JAVA;
MACRO_VM VM_MEMORY_MACH_MSG;
MACRO_VM VM_MEMORY_MALLOC;
MACRO_VM VM_MEMORY_MALLOC_HUGE;
MACRO_VM VM_MEMORY_MALLOC_LARGE;
MACRO_VM VM_MEMORY_MALLOC_SMALL;
MACRO_VM VM_MEMORY_SBRK;
MACRO_VM VM_MEMORY_SHARED_PMAP;
MACRO_VM VM_MEMORY_STACK;
MACRO_VM_MAP VM_NAMED_ENTRY_NULL;
MACRO_VM VM_PAGE_QUERY_PAGE_DIRTY;
MACRO_VM VM_PAGE_QUERY_PAGE_FICTITIOUS;
MACRO_VM VM_PAGE_QUERY_PAGE_PRESENT;
MACRO_VM VM_PAGE_QUERY_PAGE_REF;
MACRO_VM_INHERIT VM_PROT_ALL;
MACRO_VM_INHERIT VM_PROT_COPY;
MACRO_VM_INHERIT VM_PROT_DEFAULT;
MACRO_VM_INHERIT VM_PROT_EXECUTE;
MACRO_VM_INHERIT VM_PROT_NONE;
MACRO_VM_INHERIT VM_PROT_NO_CHANGE;
MACRO_VM_INHERIT VM_PROT_READ;
MACRO_VM_INHERIT VM_PROT_WANTS_COPY;
MACRO_VM_INHERIT VM_PROT_WRITE;
MACRO_VM_INHERIT VM_REGION_BASIC_INFO;
MACRO_VM_INHERIT VM_REGION_EXTENDED_INFO;
MACRO_VM_INHERIT VM_REGION_INFO_MAX;
MACRO_VM_REGION VM_REGION_TOP_INFO;
MACRO_VM_INHERIT VM_SYNC_ASYNCHRONOUS;
MACRO_VM_INHERIT VM_SYNC_DEACTIVATE;
MACRO_VM_INHERIT VM_SYNC_INVALIDATE;
MACRO_VM_INHERIT VM_SYNC_KILLPAGES;
MACRO_VM_INHERIT VM_SYNC_SYNCHRONOUS;
MACRO_SIZE WCHAR_MAX;
$DB7CAFADFF05C3D5C938D70736B1920A WDEFNFnd;
$07801A5B3B251E2FE1A1830D91B5053F WIDTHHook;
MACRO_BIT WORD_BIT;
$A2A975C723B941E14B5EA3E71535DCCB XTI_DEBUG;
$95D8D93D68D5D153918DCFEDDD3DEB20 XTI_GENERIC;
$A2A975C723B941E14B5EA3E71535DCCB XTI_LINGER;
$A2A975C723B941E14B5EA3E71535DCCB XTI_PROTOTYPE;
$A2A975C723B941E14B5EA3E71535DCCB XTI_RCVBUF;
$A2A975C723B941E14B5EA3E71535DCCB XTI_RCVLOWAT;
$A2A975C723B941E14B5EA3E71535DCCB XTI_SNDBUF;
$A2A975C723B941E14B5EA3E71535DCCB XTI_SNDLOWAT;
$EDCE395C49B82023859AF336FAAFFABB ZVSndEnBit;
$1EF659AD20943A3AB2CCBDF5B021B8C6 ZVSndEnMask;
MACRO__A _A;
OSStatus AEBuildAppleEvent(AEEventClass theClass, AEEventID theID, DescType addressType, const void *addressData, int addressLength, __int16 returnID, int transactionID, AppleEvent *result, AEBuildError *error, const char *paramsFmt, ...);
OSStatus AEBuildDesc(AEDesc *dst, AEBuildError *error, const char *src, ...);
OSStatus AEBuildParameters(AppleEvent *event, AEBuildError *error, const char *format, ...);
OSErr __fastcall AECallObjectAccessor(DescType desiredClass, const AEDesc *containerToken, DescType containerClass, DescType keyForm, const AEDesc *keyData, AEDesc *token);
Boolean __fastcall AECheckIsRecord(const AEDesc *theDesc);
OSErr __fastcall AECoerceDesc(const AEDesc *theAEDesc, DescType toType, AEDesc *result);
OSErr __fastcall AECoercePtr(DescType typeCode, const void *dataPtr, Size dataSize, DescType toType, AEDesc *result);
OSErr __fastcall AECountItems(const AEDescList *theAEDescList, int *theCount);
OSErr __fastcall AECreateAppleEvent(AEEventClass theAEEventClass, AEEventID theAEEventID, const AEAddressDesc *target, AEReturnID returnID, AETransactionID transactionID, AppleEvent *result);
OSErr __fastcall AECreateDesc(DescType typeCode, const void *dataPtr, Size dataSize, AEDesc *result);
OSStatus __fastcall AECreateDescFromExternalPtr(OSType descriptorType, const void *dataPtr, Size dataLength, AEDisposeExternalUPP disposeCallback, int disposeRefcon, AEDesc *theDesc);
OSErr __fastcall AECreateList(const void *factoringPtr, Size factoredSize, Boolean isRecord, AEDescList *resultList);
OSStatus __fastcall AEDecodeMessage(mach_msg_header_t *header, AppleEvent *event, AppleEvent *reply);
OSErr __fastcall AEDeleteItem(AEDescList *theAEDescList, int index);
OSErr __fastcall AEDeleteParam(AppleEvent *theAppleEvent, AEKeyword theAEKeyword);
OSErr __fastcall AEDisposeDesc(AEDesc *theAEDesc);
OSErr __fastcall AEDisposeToken(AEDesc *theToken);
OSErr __fastcall AEDuplicateDesc(const AEDesc *theAEDesc, AEDesc *result);
OSStatus __fastcall AEFlattenDesc(const AEDesc *theAEDesc, Ptr buffer, Size bufferSize, Size *actualSize);
OSErr __fastcall AEGetArray(const AEDescList *theAEDescList, AEArrayType arrayType, AEArrayDataPointer arrayPtr, Size maximumSize, DescType *itemType, Size *itemSize, int *itemCount);
OSErr __fastcall AEGetAttributeDesc(const AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType desiredType, AEDesc *result);
OSErr __fastcall AEGetAttributePtr(const AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType desiredType, DescType *typeCode, void *dataPtr, Size maximumSize, Size *actualSize);
OSErr __fastcall AEGetCoercionHandler(DescType fromType, DescType toType, AECoercionHandlerUPP *handler, int *handlerRefcon, Boolean *fromTypeIsDesc, Boolean isSysHandler);
OSErr __fastcall AEGetDescData(const AEDesc *theAEDesc, void *dataPtr, Size maximumSize);
OSStatus __fastcall AEGetDescDataRange(const AEDesc *dataDesc, void *buffer, Size offset, Size length);
Size __fastcall AEGetDescDataSize(const AEDesc *theAEDesc);
OSErr __fastcall AEGetEventHandler(AEEventClass theAEEventClass, AEEventID theAEEventID, AEEventHandlerUPP *handler, int *handlerRefcon, Boolean isSysHandler);
OSErr __fastcall AEGetInteractionAllowed(AEInteractAllowed *level);
OSErr __fastcall AEGetNthDesc(const AEDescList *theAEDescList, int index, DescType desiredType, AEKeyword *theAEKeyword, AEDesc *result);
OSErr __fastcall AEGetNthPtr(const AEDescList *theAEDescList, int index, DescType desiredType, AEKeyword *theAEKeyword, DescType *typeCode, void *dataPtr, Size maximumSize, Size *actualSize);
OSErr __fastcall AEGetObjectAccessor(DescType desiredClass, DescType containerType, OSLAccessorUPP *accessor, int *accessorRefcon, Boolean isSysHandler);
OSErr __fastcall AEGetParamDesc(const AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType desiredType, AEDesc *result);
OSErr __fastcall AEGetParamPtr(const AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType desiredType, DescType *typeCode, void *dataPtr, Size maximumSize, Size *actualSize);
mach_port_t AEGetRegisteredMachPort(void);
OSErr __fastcall AEGetSpecialHandler(AEKeyword functionClass, AEEventHandlerUPP *handler, Boolean isSysHandler);
OSErr __fastcall AEGetTheCurrentEvent(AppleEvent *theAppleEvent);
void __fastcall AEInitializeDesc(AEDesc *desc);
OSErr __fastcall AEInstallCoercionHandler(DescType fromType, DescType toType, AECoercionHandlerUPP handler, int handlerRefcon, Boolean fromTypeIsDesc, Boolean isSysHandler);
OSErr __fastcall AEInstallEventHandler(AEEventClass theAEEventClass, AEEventID theAEEventID, AEEventHandlerUPP handler, int handlerRefcon, Boolean isSysHandler);
OSErr __fastcall AEInstallObjectAccessor(DescType desiredClass, DescType containerType, OSLAccessorUPP theAccessor, int accessorRefcon, Boolean isSysHandler);
OSErr __fastcall AEInstallSpecialHandler(AEKeyword functionClass, AEEventHandlerUPP handler, Boolean isSysHandler);
OSErr __fastcall AEInteractWithUser(int timeOutInTicks, NMRecPtr nmReqPtr, AEIdleUPP idleProc);
OSErr __fastcall AEManagerInfo(AEKeyword keyWord, int *result);
OSErr AEObjectInit(void);
OSStatus __fastcall AEPrintDescToHandle(const AEDesc *desc, Handle *result);
OSErr __fastcall AEProcessAppleEvent(const EventRecord *theEventRecord);
OSStatus __fastcall AEProcessMessage(mach_msg_header_t *header);
OSErr __fastcall AEPutArray(AEDescList *theAEDescList, AEArrayType arrayType, const AEArrayData *arrayPtr, DescType itemType, Size itemSize, int itemCount);
OSErr __fastcall AEPutAttributeDesc(AppleEvent *theAppleEvent, AEKeyword theAEKeyword, const AEDesc *theAEDesc);
OSErr __fastcall AEPutAttributePtr(AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType typeCode, const void *dataPtr, Size dataSize);
OSErr __fastcall AEPutDesc(AEDescList *theAEDescList, int index, const AEDesc *theAEDesc);
OSErr __fastcall AEPutParamDesc(AppleEvent *theAppleEvent, AEKeyword theAEKeyword, const AEDesc *theAEDesc);
OSErr __fastcall AEPutParamPtr(AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType typeCode, const void *dataPtr, Size dataSize);
OSErr __fastcall AEPutPtr(AEDescList *theAEDescList, int index, DescType typeCode, const void *dataPtr, Size dataSize);
OSErr __fastcall AERemoveCoercionHandler(DescType fromType, DescType toType, AECoercionHandlerUPP handler, Boolean isSysHandler);
OSErr __fastcall AERemoveEventHandler(AEEventClass theAEEventClass, AEEventID theAEEventID, AEEventHandlerUPP handler, Boolean isSysHandler);
OSErr __fastcall AERemoveObjectAccessor(DescType desiredClass, DescType containerType, OSLAccessorUPP theAccessor, Boolean isSysHandler);
OSErr __fastcall AERemoveSpecialHandler(AEKeyword functionClass, AEEventHandlerUPP handler, Boolean isSysHandler);
OSErr __fastcall AEReplaceDescData(DescType typeCode, const void *dataPtr, Size dataSize, AEDesc *theAEDesc);
OSErr __fastcall AEResetTimer(const AppleEvent *reply);
OSErr __fastcall AEResolve(const AEDesc *objectSpecifier, __int16 callbackFlags, AEDesc *theToken);
OSErr __fastcall AEResumeTheCurrentEvent(const AppleEvent *theAppleEvent, const AppleEvent *reply, AEEventHandlerUPP dispatcher, int handlerRefcon);
OSErr __fastcall AESend(const AppleEvent *theAppleEvent, AppleEvent *reply, AESendMode sendMode, AESendPriority sendPriority, int timeOutInTicks, AEIdleUPP idleProc, AEFilterUPP filterProc);
OSStatus __fastcall AESendMessage(const AppleEvent *event, AppleEvent *reply, AESendMode sendMode, int timeOutInTicks);
OSErr __fastcall AESetInteractionAllowed(AEInteractAllowed level);
OSErr __fastcall AESetObjectCallbacks(OSLCompareUPP myCompareProc, OSLCountUPP myCountProc, OSLDisposeTokenUPP myDisposeTokenProc, OSLGetMarkTokenUPP myGetMarkTokenProc, OSLMarkUPP myMarkProc, OSLAdjustMarksUPP myAdjustMarksProc, OSLGetErrDescUPP myGetErrDescProcPtr);
OSErr __fastcall AESetTheCurrentEvent(const AppleEvent *theAppleEvent);
OSErr __fastcall AESizeOfAttribute(const AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType *typeCode, Size *dataSize);
Size __fastcall AESizeOfFlattenedDesc(const AEDesc *theAEDesc);
OSErr __fastcall AESizeOfNthItem(const AEDescList *theAEDescList, int index, DescType *typeCode, Size *dataSize);
OSErr __fastcall AESizeOfParam(const AppleEvent *theAppleEvent, AEKeyword theAEKeyword, DescType *typeCode, Size *dataSize);
OSStatus __fastcall AEStreamClose(AEStreamRef ref, AEDesc *desc);
OSStatus __fastcall AEStreamCloseDesc(AEStreamRef ref);
OSStatus __fastcall AEStreamCloseList(AEStreamRef ref);
OSStatus __fastcall AEStreamCloseRecord(AEStreamRef ref);
AEStreamRef __fastcall AEStreamCreateEvent(AEEventClass clazz, AEEventID id, DescType targetType, const void *targetData, int targetLength, __int16 returnID, int transactionID);
AEStreamRef AEStreamOpen(void);
OSStatus __fastcall AEStreamOpenDesc(AEStreamRef ref, DescType newType);
AEStreamRef __fastcall AEStreamOpenEvent(AppleEvent *event);
OSStatus __fastcall AEStreamOpenKeyDesc(AEStreamRef ref, AEKeyword key, DescType newType);
OSStatus __fastcall AEStreamOpenList(AEStreamRef ref);
OSStatus __fastcall AEStreamOpenRecord(AEStreamRef ref, DescType newType);
OSStatus __fastcall AEStreamOptionalParam(AEStreamRef ref, AEKeyword key);
OSStatus __fastcall AEStreamSetRecordType(AEStreamRef ref, DescType newType);
OSStatus __fastcall AEStreamWriteAEDesc(AEStreamRef ref, const AEDesc *desc);
OSStatus __fastcall AEStreamWriteData(AEStreamRef ref, const void *data, Size length);
OSStatus __fastcall AEStreamWriteDesc(AEStreamRef ref, DescType newType, const void *data, Size length);
OSStatus __fastcall AEStreamWriteKey(AEStreamRef ref, AEKeyword key);
OSStatus __fastcall AEStreamWriteKeyDesc(AEStreamRef ref, AEKeyword key, DescType newType, const void *data, Size length);
OSErr __fastcall AESuspendTheCurrentEvent(const AppleEvent *theAppleEvent);
OSStatus __fastcall AEUnflattenDesc(Ptr buffer, AEDesc *result);
OSStatus __fastcall AHGotoMainTOC(AHTOCType toctype);
OSStatus __fastcall AHGotoPage(CFStringRef bookname, CFStringRef path, CFStringRef anchor);
OSStatus __fastcall AHLookupAnchor(CFStringRef bookname, CFStringRef anchor);
OSStatus __fastcall AHRegisterHelpBook(const FSRef *appBundleRef);
OSStatus __fastcall AHSearch(CFStringRef bookname, CFStringRef query);
void AOff(void);
void AOn(void);
void AOnIgnoreModem(void);
OSAError __fastcall ASGetAppTerminology(ComponentInstance scriptingComponent, FSSpec *fileSpec, __int16 terminologID, Boolean *didLaunch, AEDesc *terminologyList);
OSAError __fastcall ASGetHandler(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *handlerName, OSAID *resultingCompiledScriptID);
OSAError __fastcall ASGetProperty(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *variableName, OSAID *resultingScriptValueID);
OSAError __fastcall ASGetSourceStyleNames(ComponentInstance scriptingComponent, int modeFlags, AEDescList *resultingSourceStyleNamesList);
OSAError __fastcall ASGetSourceStyles(ComponentInstance scriptingComponent, STHandle *resultingSourceStyles);
OSAError __fastcall ASInit(ComponentInstance scriptingComponent, int modeFlags, int minStackSize, int preferredStackSize, int maxStackSize, int minHeapSize, int preferredHeapSize, int maxHeapSize);
OSAError __fastcall ASSetHandler(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *handlerName, OSAID compiledScriptID);
OSAError __fastcall ASSetProperty(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *variableName, OSAID scriptValueID);
OSAError __fastcall ASSetSourceStyles(ComponentInstance scriptingComponent, STHandle sourceStyles);
CFRunLoopSourceRef __fastcall ATSCreateFontQueryRunLoopSource(CFIndex queryOrder, CFIndex sourceOrder, ATSFontQueryCallback callout, const ATSFontQuerySourceContext *context);
OSStatus __fastcall ATSFontActivateFromFileSpecification(const FSSpec *iFile, ATSFontContext iContext, ATSFontFormat iFormat, void *iReserved, ATSOptionFlags iOptions, ATSFontContainerRef *oContainer);
OSStatus __fastcall ATSFontActivateFromMemory(LogicalAddress iData, ByteCount iLength, ATSFontContext iContext, ATSFontFormat iFormat, void *iReserved, ATSOptionFlags iOptions, ATSFontContainerRef *oContainer);
OSStatus __fastcall ATSFontApplyFunction(ATSFontApplierFunction iFunction, void *iRefCon);
OSStatus __fastcall ATSFontDeactivate(ATSFontContainerRef iContainer, void *iRefCon, ATSOptionFlags iOptions);
OSStatus __fastcall ATSFontFamilyApplyFunction(ATSFontFamilyApplierFunction iFunction, void *iRefCon);
ATSFontFamilyRef __fastcall ATSFontFamilyFindFromName(CFStringRef iName, ATSOptionFlags iOptions);
ATSFontFamilyRef __fastcall ATSFontFamilyFindFromQuickDrawName(ConstStr255Param iName);
TextEncoding __fastcall ATSFontFamilyGetEncoding(ATSFontFamilyRef iFamily);
ATSGeneration __fastcall ATSFontFamilyGetGeneration(ATSFontFamilyRef iFamily);
OSStatus __fastcall ATSFontFamilyGetName(ATSFontFamilyRef iFamily, ATSOptionFlags iOptions, CFStringRef *oName);
OSStatus __fastcall ATSFontFamilyGetQuickDrawName(ATSFontFamilyRef iFamily, Str255 oName);
OSStatus __fastcall ATSFontFamilyIteratorCreate(ATSFontContext iContext, const ATSFontFilter *iFilter, void *iRefCon, ATSOptionFlags iOptions, ATSFontFamilyIterator *ioIterator);
OSStatus __fastcall ATSFontFamilyIteratorNext(ATSFontFamilyIterator iIterator, ATSFontFamilyRef *oFamily);
OSStatus __fastcall ATSFontFamilyIteratorRelease(ATSFontFamilyIterator *ioIterator);
OSStatus __fastcall ATSFontFamilyIteratorReset(ATSFontContext iContext, const ATSFontFilter *iFilter, void *iRefCon, ATSOptionFlags iOptions, ATSFontFamilyIterator *ioIterator);
OSStatus __fastcall ATSFontFindFromContainer(ATSFontContainerRef iContainer, ATSOptionFlags iOptions, ItemCount iCount, ATSFontRef ioArray[], ItemCount *oCount);
ATSFontRef __fastcall ATSFontFindFromName(CFStringRef iName, ATSOptionFlags iOptions);
ATSFontRef __fastcall ATSFontFindFromPostScriptName(CFStringRef iName, ATSOptionFlags iOptions);
OSStatus __fastcall ATSFontGetFileSpecification(ATSFontRef iFont, FSSpec *oFile);
OSStatus __fastcall ATSFontGetFontFamilyResource(ATSFontRef iFont, ByteCount iBufferSize, void *ioBuffer, ByteCount *oSize);
ATSGeneration __fastcall ATSFontGetGeneration(ATSFontRef iFont);
OSStatus __fastcall ATSFontGetHorizontalMetrics(ATSFontRef iFont, ATSOptionFlags iOptions, ATSFontMetrics *oMetrics);
OSStatus __fastcall ATSFontGetName(ATSFontRef iFont, ATSOptionFlags iOptions, CFStringRef *oName);
OSStatus __fastcall ATSFontGetPostScriptName(ATSFontRef iFont, ATSOptionFlags iOptions, CFStringRef *oName);
OSStatus __fastcall ATSFontGetTable(ATSFontRef iFont, FourCharCode iTag, ByteOffset iOffset, ByteCount iBufferSize, void *ioBuffer, ByteCount *oSize);
OSStatus __fastcall ATSFontGetTableDirectory(ATSFontRef iFont, ByteCount iBufferSize, void *ioBuffer, ByteCount *oSize);
OSStatus __fastcall ATSFontGetVerticalMetrics(ATSFontRef iFont, ATSOptionFlags iOptions, ATSFontMetrics *oMetrics);
OSStatus __fastcall ATSFontIteratorCreate(ATSFontContext iContext, const ATSFontFilter *iFilter, void *iRefCon, ATSOptionFlags iOptions, ATSFontIterator *ioIterator);
OSStatus __fastcall ATSFontIteratorNext(ATSFontIterator iIterator, ATSFontRef *oFont);
OSStatus __fastcall ATSFontIteratorRelease(ATSFontIterator *ioIterator);
OSStatus __fastcall ATSFontIteratorReset(ATSFontContext iContext, const ATSFontFilter *iFilter, void *iRefCon, ATSOptionFlags iOptions, ATSFontIterator *ioIterator);
OSStatus __fastcall ATSFontNotificationSubscribe(ATSNotificationCallback callback, ATSFontNotifyOption options, void *iRefcon, ATSFontNotificationRef *oNotificationRef);
OSStatus __fastcall ATSFontNotificationUnsubscribe(ATSFontNotificationRef notificationRef);
OSStatus __fastcall ATSFontNotify(ATSFontNotifyAction action, void *info);
ATSGeneration ATSGetGeneration(void);
OSStatus __fastcall ATSUBatchBreakLines(ATSUTextLayout iTextLayout, UniCharArrayOffset iRangeStart, UniCharCount iRangeLength, ATSUTextMeasurement iLineWidth, ItemCount *oBreakCount);
OSStatus __fastcall ATSUBreakLine(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, ATSUTextMeasurement iLineWidth, Boolean iUseAsSoftLineBreak, UniCharArrayOffset *oLineBreak);
OSStatus __fastcall ATSUCalculateBaselineDeltas(ATSUStyle iStyle, BslnBaselineClass iBaselineClass, BslnBaselineRecord oBaselineDeltas);
OSStatus __fastcall ATSUClearAttributes(ATSUStyle iStyle, ItemCount iTagCount, const ATSUAttributeTag iTag[]);
OSStatus __fastcall ATSUClearFontFeatures(ATSUStyle iStyle, ItemCount iFeatureCount, const ATSUFontFeatureType iType[], const ATSUFontFeatureSelector iSelector[]);
OSStatus __fastcall ATSUClearFontVariations(ATSUStyle iStyle, ItemCount iAxisCount, const ATSUFontVariationAxis iAxis[]);
OSStatus __fastcall ATSUClearLayoutCache(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart);
OSStatus __fastcall ATSUClearLayoutControls(ATSUTextLayout iTextLayout, ItemCount iTagCount, const ATSUAttributeTag iTag[]);
OSStatus __fastcall ATSUClearLineControls(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, ItemCount iTagCount, const ATSUAttributeTag iTag[]);
OSStatus __fastcall ATSUClearSoftLineBreaks(ATSUTextLayout iTextLayout, UniCharArrayOffset iRangeStart, UniCharCount iRangeLength);
OSStatus __fastcall ATSUClearStyle(ATSUStyle iStyle);
OSStatus __fastcall ATSUCompareStyles(ATSUStyle iFirstStyle, ATSUStyle iSecondStyle, ATSUStyleComparison *oComparison);
OSStatus __fastcall ATSUCopyAttributes(ATSUStyle iSourceStyle, ATSUStyle iDestinationStyle);
OSStatus __fastcall ATSUCopyLayoutControls(ATSUTextLayout iSourceTextLayout, ATSUTextLayout iDestTextLayout);
OSStatus __fastcall ATSUCopyLineControls(ATSUTextLayout iSourceTextLayout, UniCharArrayOffset iSourceLineStart, ATSUTextLayout iDestTextLayout, UniCharArrayOffset iDestLineStart);
OSStatus __fastcall ATSUCopyToHandle(ATSUStyle iStyle, Handle oStyleHandle);
OSStatus __fastcall ATSUCountFontFeatureSelectors(ATSUFontID iFontID, ATSUFontFeatureType iType, ItemCount *oSelectorCount);
OSStatus __fastcall ATSUCountFontFeatureTypes(ATSUFontID iFontID, ItemCount *oTypeCount);
OSStatus __fastcall ATSUCountFontInstances(ATSUFontID iFontID, ItemCount *oInstances);
OSStatus __fastcall ATSUCountFontNames(ATSUFontID iFontID, ItemCount *oFontNameCount);
OSStatus __fastcall ATSUCountFontTracking(ATSUFontID iFontID, ATSUVerticalCharacterType iCharacterOrientation, ItemCount *oTrackingCount);
OSStatus __fastcall ATSUCountFontVariations(ATSUFontID iFontID, ItemCount *oVariationCount);
OSStatus __fastcall ATSUCreateAndCopyStyle(ATSUStyle iStyle, ATSUStyle *oStyle);
OSStatus __fastcall ATSUCreateAndCopyTextLayout(ATSUTextLayout iTextLayout, ATSUTextLayout *oTextLayout);
OSStatus __fastcall ATSUCreateFontFallbacks(ATSUFontFallbacks *oFontFallback);
OSStatus __fastcall ATSUCreateStyle(ATSUStyle *oStyle);
OSStatus __fastcall ATSUCreateTextLayout(ATSUTextLayout *oTextLayout);
OSStatus __fastcall ATSUCreateTextLayoutWithTextHandle(UniCharArrayHandle iText, UniCharArrayOffset iTextOffset, UniCharCount iTextLength, UniCharCount iTextTotalLength, ItemCount iNumberOfRuns, const UniCharCount iRunLengths[], ATSUStyle iStyles[], ATSUTextLayout *oTextLayout);
OSStatus __fastcall ATSUCreateTextLayoutWithTextPtr(ConstUniCharArrayPtr iText, UniCharArrayOffset iTextOffset, UniCharCount iTextLength, UniCharCount iTextTotalLength, ItemCount iNumberOfRuns, const UniCharCount iRunLengths[], ATSUStyle iStyles[], ATSUTextLayout *oTextLayout);
OSStatus __fastcall ATSUDirectAddStyleSettingRef(ATSULineRef iLineRef, ATSUStyleSettingRef iStyleSettingRef, UInt16 *oStyleIndex);
OSStatus __fastcall ATSUDirectGetLayoutDataArrayPtrFromLineRef(ATSULineRef iLineRef, ATSUDirectDataSelector iDataSelector, Boolean iCreate, void *oLayoutDataArrayPtr[], ItemCount *oLayoutDataCount);
OSStatus __fastcall ATSUDirectGetLayoutDataArrayPtrFromTextLayout(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineOffset, ATSUDirectDataSelector iDataSelector, void *oLayoutDataArrayPtr[], ItemCount *oLayoutDataCount);
OSStatus __fastcall ATSUDirectReleaseLayoutDataArrayPtr(ATSULineRef iLineRef, ATSUDirectDataSelector iDataSelector, void *iLayoutDataArrayPtr[]);
OSStatus __fastcall ATSUDisposeFontFallbacks(ATSUFontFallbacks iFontFallbacks);
OSStatus __fastcall ATSUDisposeStyle(ATSUStyle iStyle);
OSStatus __fastcall ATSUDisposeTextLayout(ATSUTextLayout iTextLayout);
OSStatus __fastcall ATSUDrawGlyphInfo(ATSUGlyphInfoArray *iGlyphInfoArray, Float32Point iLocation);
OSStatus __fastcall ATSUDrawText(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineOffset, UniCharCount iLineLength, ATSUTextMeasurement iLocationX, ATSUTextMeasurement iLocationY);
OSStatus __fastcall ATSUFONDtoFontID(__int16 iFONDNumber, Style iFONDStyle, ATSUFontID *oFontID);
OSStatus __fastcall ATSUFindFontFromName(Ptr iName, ByteCount iNameLength, FontNameCode iFontNameCode, FontPlatformCode iFontNamePlatform, FontScriptCode iFontNameScript, FontLanguageCode iFontNameLanguage, ATSUFontID *oFontID);
OSStatus __fastcall ATSUFindFontName(ATSUFontID iFontID, FontNameCode iFontNameCode, FontPlatformCode iFontNamePlatform, FontScriptCode iFontNameScript, FontLanguageCode iFontNameLanguage, ByteCount iMaximumNameLength, Ptr oName, ByteCount *oActualNameLength, ItemCount *oFontNameIndex);
OSStatus __fastcall ATSUFlattenStyleRunsToStream(ATSUFlattenedDataStreamFormat iStreamFormat, ATSUFlattenStyleRunOptions iFlattenOptions, ItemCount iNumberOfRunInfo, const ATSUStyleRunInfo iRunInfoArray[], ItemCount iNumberOfStyleObjects, const ATSUStyle iStyleArray[], ByteCount iStreamBufferSize, void *oStreamBuffer, ByteCount *oActualStreamBufferSize);
OSStatus __fastcall ATSUFontCount(ItemCount *oFontCount);
OSStatus __fastcall ATSUFontIDtoFOND(ATSUFontID iFontID, __int16 *oFONDNumber, Style *oFONDStyle);
OSStatus __fastcall ATSUGetAllAttributes(ATSUStyle iStyle, ATSUAttributeInfo oAttributeInfoArray[], ItemCount iTagValuePairArraySize, ItemCount *oTagValuePairCount);
OSStatus __fastcall ATSUGetAllFontFeatures(ATSUStyle iStyle, ItemCount iMaximumFeatureCount, ATSUFontFeatureType oFeatureType[], ATSUFontFeatureSelector oFeatureSelector[], ItemCount *oActualFeatureCount);
OSStatus __fastcall ATSUGetAllFontVariations(ATSUStyle iStyle, ItemCount iVariationCount, ATSUFontVariationAxis oVariationAxes[], ATSUFontVariationValue oFontVariationValues[], ItemCount *oActualVariationCount);
OSStatus __fastcall ATSUGetAllLayoutControls(ATSUTextLayout iTextLayout, ATSUAttributeInfo oAttributeInfoArray[], ItemCount iTagValuePairArraySize, ItemCount *oTagValuePairCount);
OSStatus __fastcall ATSUGetAllLineControls(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, ATSUAttributeInfo oAttributeInfoArray[], ItemCount iTagValuePairArraySize, ItemCount *oTagValuePairCount);
OSStatus __fastcall ATSUGetAttribute(ATSUStyle iStyle, ATSUAttributeTag iTag, ByteCount iExpectedValueSize, ATSUAttributeValuePtr oValue, ByteCount *oActualValueSize);
OSStatus __fastcall ATSUGetContinuousAttributes(ATSUTextLayout iTextLayout, UniCharArrayOffset iOffset, UniCharCount iLength, ATSUStyle oStyle);
OSStatus __fastcall ATSUGetFontFallbacks(ItemCount iMaxFontFallbacksCount, ATSUFontID oFontIDs[], ATSUFontFallbackMethod *oFontFallbackMethod, ItemCount *oActualFallbacksCount);
OSStatus __fastcall ATSUGetFontFeature(ATSUStyle iStyle, ItemCount iFeatureIndex, ATSUFontFeatureType *oFeatureType, ATSUFontFeatureSelector *oFeatureSelector);
OSStatus __fastcall ATSUGetFontFeatureNameCode(ATSUFontID iFontID, ATSUFontFeatureType iType, ATSUFontFeatureSelector iSelector, FontNameCode *oNameCode);
OSStatus __fastcall ATSUGetFontFeatureSelectors(ATSUFontID iFontID, ATSUFontFeatureType iType, ItemCount iMaximumSelectors, ATSUFontFeatureSelector oSelectors[], Boolean oSelectorIsOnByDefault[], ItemCount *oActualSelectorCount, Boolean *oIsMutuallyExclusive);
OSStatus __fastcall ATSUGetFontFeatureTypes(ATSUFontID iFontID, ItemCount iMaximumTypes, ATSUFontFeatureType oTypes[], ItemCount *oActualTypeCount);
OSStatus __fastcall ATSUGetFontIDs(ATSUFontID oFontIDs[], ItemCount iArraySize, ItemCount *oFontCount);
OSStatus __fastcall ATSUGetFontInstance(ATSUFontID iFontID, ItemCount iFontInstanceIndex, ItemCount iMaximumVariations, ATSUFontVariationAxis oAxes[], ATSUFontVariationValue oValues[], ItemCount *oActualVariationCount);
OSStatus __fastcall ATSUGetFontInstanceNameCode(ATSUFontID iFontID, ItemCount iInstanceIndex, FontNameCode *oNameCode);
OSStatus __fastcall ATSUGetFontVariationNameCode(ATSUFontID iFontID, ATSUFontVariationAxis iAxis, FontNameCode *oNameCode);
OSStatus __fastcall ATSUGetFontVariationValue(ATSUStyle iStyle, ATSUFontVariationAxis iFontVariationAxis, ATSUFontVariationValue *oFontVariationValue);
OSStatus __fastcall ATSUGetGlyphBounds(ATSUTextLayout iTextLayout, ATSUTextMeasurement iTextBasePointX, ATSUTextMeasurement iTextBasePointY, UniCharArrayOffset iBoundsCharStart, UniCharCount iBoundsCharLength, UInt16 iTypeOfBounds, ItemCount iMaxNumberOfBounds, ATSTrapezoid oGlyphBounds[], ItemCount *oActualNumberOfBounds);
OSStatus __fastcall ATSUGetGlyphInfo(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, UniCharCount iLineLength, ByteCount *ioBufferSize, ATSUGlyphInfoArray *oGlyphInfoPtr);
OSStatus __fastcall ATSUGetIndFontName(ATSUFontID iFontID, ItemCount iFontNameIndex, ByteCount iMaximumNameLength, Ptr oName, ByteCount *oActualNameLength, FontNameCode *oFontNameCode, FontPlatformCode *oFontNamePlatform, FontScriptCode *oFontNameScript, FontLanguageCode *oFontNameLanguage);
OSStatus __fastcall ATSUGetIndFontTracking(ATSUFontID iFontID, ATSUVerticalCharacterType iCharacterOrientation, ItemCount iTrackIndex, Fixed *oFontTrackingValue, FontNameCode *oNameCode);
OSStatus __fastcall ATSUGetIndFontVariation(ATSUFontID iFontID, ItemCount iVariationIndex, ATSUFontVariationAxis *oATSUFontVariationAxis, ATSUFontVariationValue *oMinimumValue, ATSUFontVariationValue *oMaximumValue, ATSUFontVariationValue *oDefaultValue);
OSStatus __fastcall ATSUGetLayoutControl(ATSUTextLayout iTextLayout, ATSUAttributeTag iTag, ByteCount iExpectedValueSize, ATSUAttributeValuePtr oValue, ByteCount *oActualValueSize);
OSStatus __fastcall ATSUGetLineControl(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, ATSUAttributeTag iTag, ByteCount iExpectedValueSize, ATSUAttributeValuePtr oValue, ByteCount *oActualValueSize);
OSStatus __fastcall ATSUGetNativeCurveType(ATSUStyle iATSUStyle, ATSCurveType *oCurveType);
OSStatus __fastcall ATSUGetObjFontFallbacks(ATSUFontFallbacks iFontFallbacks, ItemCount iMaxFontFallbacksCount, ATSUFontID oFonts[], ATSUFontFallbackMethod *oFontFallbackMethod, ItemCount *oActualFallbacksCount);
OSStatus __fastcall ATSUGetRunStyle(ATSUTextLayout iTextLayout, UniCharArrayOffset iOffset, ATSUStyle *oStyle, UniCharArrayOffset *oRunStart, UniCharCount *oRunLength);
OSStatus __fastcall ATSUGetSoftLineBreaks(ATSUTextLayout iTextLayout, UniCharArrayOffset iRangeStart, UniCharCount iRangeLength, ItemCount iMaximumBreaks, UniCharArrayOffset oBreaks[], ItemCount *oBreakCount);
OSStatus __fastcall ATSUGetStyleRefCon(ATSUStyle iStyle, UInt32 *oRefCon);
OSStatus __fastcall ATSUGetTabArray(ATSUTextLayout iTextLayout, ItemCount iMaxTabCount, ATSUTab oTabs[], ItemCount *oTabCount);
OSStatus __fastcall ATSUGetTextHighlight(ATSUTextLayout iTextLayout, ATSUTextMeasurement iTextBasePointX, ATSUTextMeasurement iTextBasePointY, UniCharArrayOffset iHighlightStart, UniCharCount iHighlightLength, RgnHandle oHighlightRegion);
OSStatus __fastcall ATSUGetTextLayoutRefCon(ATSUTextLayout iTextLayout, UInt32 *oRefCon);
OSStatus __fastcall ATSUGetTextLocation(ATSUTextLayout iTextLayout, void **oText, Boolean *oTextIsStoredInHandle, UniCharArrayOffset *oOffset, UniCharCount *oTextLength, UniCharCount *oTextTotalLength);
OSStatus __fastcall ATSUGetTransientFontMatching(ATSUTextLayout iTextLayout, Boolean *oTransientFontMatching);
OSStatus __fastcall ATSUGetUnjustifiedBounds(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, UniCharCount iLineLength, ATSUTextMeasurement *oTextBefore, ATSUTextMeasurement *oTextAfter, ATSUTextMeasurement *oAscent, ATSUTextMeasurement *oDescent);
OSStatus __fastcall ATSUGlyphGetCubicPaths(ATSUStyle iATSUStyle, GlyphID iGlyphID, ATSCubicMoveToUPP iMoveToProc, ATSCubicLineToUPP iLineToProc, ATSCubicCurveToUPP iCurveToProc, ATSCubicClosePathUPP iClosePathProc, void *iCallbackDataPtr, OSStatus *oCallbackResult);
OSStatus __fastcall ATSUGlyphGetCurvePaths(ATSUStyle iATSUStyle, GlyphID iGlyphID, ByteCount *ioBufferSize, ATSUCurvePaths *oPaths);
OSStatus __fastcall ATSUGlyphGetIdealMetrics(ATSUStyle iATSUStyle, ItemCount iNumOfGlyphs, GlyphID iGlyphIDs[], ByteOffset iInputOffset, ATSGlyphIdealMetrics oIdealMetrics[]);
OSStatus __fastcall ATSUGlyphGetQuadraticPaths(ATSUStyle iATSUStyle, GlyphID iGlyphID, ATSQuadraticNewPathUPP iNewPathProc, ATSQuadraticLineUPP iLineProc, ATSQuadraticCurveUPP iCurveProc, ATSQuadraticClosePathUPP iClosePathProc, void *iCallbackDataPtr, OSStatus *oCallbackResult);
OSStatus __fastcall ATSUGlyphGetScreenMetrics(ATSUStyle iATSUStyle, ItemCount iNumOfGlyphs, GlyphID iGlyphIDs[], ByteOffset iInputOffset, Boolean iForcingAntiAlias, Boolean iAntiAliasSwitch, ATSGlyphScreenMetrics oScreenMetrics[]);
OSStatus __fastcall ATSUHighlightInactiveText(ATSUTextLayout iTextLayout, ATSUTextMeasurement iTextBasePointX, ATSUTextMeasurement iTextBasePointY, UniCharArrayOffset iHighlightStart, UniCharCount iHighlightLength);
OSStatus __fastcall ATSUHighlightText(ATSUTextLayout iTextLayout, ATSUTextMeasurement iTextBasePointX, ATSUTextMeasurement iTextBasePointY, UniCharArrayOffset iHighlightStart, UniCharCount iHighlightLength);
OSStatus __fastcall ATSUIdle(ATSUTextLayout iTextLayout);
OSStatus __fastcall ATSULeftwardCursorPosition(ATSUTextLayout iTextLayout, UniCharArrayOffset iOldOffset, ATSUCursorMovementType iMovementType, UniCharArrayOffset *oNewOffset);
OSStatus __fastcall ATSUMatchFontsToText(ATSUTextLayout iTextLayout, UniCharArrayOffset iTextStart, UniCharCount iTextLength, ATSUFontID *oFontID, UniCharArrayOffset *oChangedOffset, UniCharCount *oChangedLength);
OSStatus __fastcall ATSUMeasureText(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, UniCharCount iLineLength, ATSUTextMeasurement *oTextBefore, ATSUTextMeasurement *oTextAfter, ATSUTextMeasurement *oAscent, ATSUTextMeasurement *oDescent);
OSStatus __fastcall ATSUMeasureTextImage(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineOffset, UniCharCount iLineLength, ATSUTextMeasurement iLocationX, ATSUTextMeasurement iLocationY, Rect *oTextImageRect);
OSStatus __fastcall ATSUNextCursorPosition(ATSUTextLayout iTextLayout, UniCharArrayOffset iOldOffset, ATSUCursorMovementType iMovementType, UniCharArrayOffset *oNewOffset);
OSStatus __fastcall ATSUOffsetToCursorPosition(ATSUTextLayout iTextLayout, UniCharArrayOffset iOffset, Boolean iIsLeading, ATSUCursorMovementType iMovementType, ATSUCaret *oMainCaret, ATSUCaret *oSecondCaret, Boolean *oCaretIsSplit);
OSStatus __fastcall ATSUOffsetToPosition(ATSUTextLayout iTextLayout, UniCharArrayOffset iOffset, Boolean iIsLeading, ATSUCaret *oMainCaret, ATSUCaret *oSecondCaret, Boolean *oCaretIsSplit);
OSStatus __fastcall ATSUOverwriteAttributes(ATSUStyle iSourceStyle, ATSUStyle iDestinationStyle);
OSStatus __fastcall ATSUPasteFromHandle(ATSUStyle iStyle, Handle iStyleHandle);
OSStatus __fastcall ATSUPositionToCursorOffset(ATSUTextLayout iTextLayout, ATSUTextMeasurement iLocationX, ATSUTextMeasurement iLocationY, ATSUCursorMovementType iMovementType, UniCharArrayOffset *ioPrimaryOffset, Boolean *oIsLeading, UniCharArrayOffset *oSecondaryOffset);
OSStatus __fastcall ATSUPositionToOffset(ATSUTextLayout iTextLayout, ATSUTextMeasurement iLocationX, ATSUTextMeasurement iLocationY, UniCharArrayOffset *ioPrimaryOffset, Boolean *oIsLeading, UniCharArrayOffset *oSecondaryOffset);
OSStatus __fastcall ATSUPreviousCursorPosition(ATSUTextLayout iTextLayout, UniCharArrayOffset iOldOffset, ATSUCursorMovementType iMovementType, UniCharArrayOffset *oNewOffset);
OSStatus __fastcall ATSURightwardCursorPosition(ATSUTextLayout iTextLayout, UniCharArrayOffset iOldOffset, ATSUCursorMovementType iMovementType, UniCharArrayOffset *oNewOffset);
OSStatus __fastcall ATSUSetAttributes(ATSUStyle iStyle, ItemCount iAttributeCount, const ATSUAttributeTag iTag[], const ByteCount iValueSize[], const ATSUAttributeValuePtr iValue[]);
OSStatus __fastcall ATSUSetFontFallbacks(ItemCount iFontFallbacksCount, const ATSUFontID iFontIDs[], ATSUFontFallbackMethod iFontFallbackMethod);
OSStatus __fastcall ATSUSetFontFeatures(ATSUStyle iStyle, ItemCount iFeatureCount, const ATSUFontFeatureType iType[], const ATSUFontFeatureSelector iSelector[]);
OSStatus __fastcall ATSUSetHighlightingMethod(ATSUTextLayout iTextLayout, ATSUHighlightMethod iMethod, const ATSUUnhighlightData *iUnhighlightData);
OSStatus __fastcall ATSUSetLayoutControls(ATSUTextLayout iTextLayout, ItemCount iAttributeCount, const ATSUAttributeTag iTag[], const ByteCount iValueSize[], const ATSUAttributeValuePtr iValue[]);
OSStatus __fastcall ATSUSetLineControls(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineStart, ItemCount iAttributeCount, const ATSUAttributeTag iTag[], const ByteCount iValueSize[], const ATSUAttributeValuePtr iValue[]);
OSStatus __fastcall ATSUSetObjFontFallbacks(ATSUFontFallbacks iFontFallbacks, ItemCount iFontFallbacksCount, const ATSUFontID iFonts[], ATSUFontFallbackMethod iFontFallbackMethod);
OSStatus __fastcall ATSUSetRunStyle(ATSUTextLayout iTextLayout, ATSUStyle iStyle, UniCharArrayOffset iRunStart, UniCharCount iRunLength);
OSStatus __fastcall ATSUSetSoftLineBreak(ATSUTextLayout iTextLayout, UniCharArrayOffset iLineBreak);
OSStatus __fastcall ATSUSetStyleRefCon(ATSUStyle iStyle, UInt32 iRefCon);
OSStatus __fastcall ATSUSetTabArray(ATSUTextLayout iTextLayout, const ATSUTab iTabs[], ItemCount iTabCount);
OSStatus __fastcall ATSUSetTextHandleLocation(ATSUTextLayout iTextLayout, UniCharArrayHandle iText, UniCharArrayOffset iTextOffset, UniCharCount iTextLength, UniCharCount iTextTotalLength);
OSStatus __fastcall ATSUSetTextLayoutRefCon(ATSUTextLayout iTextLayout, UInt32 iRefCon);
OSStatus __fastcall ATSUSetTextPointerLocation(ATSUTextLayout iTextLayout, ConstUniCharArrayPtr iText, UniCharArrayOffset iTextOffset, UniCharCount iTextLength, UniCharCount iTextTotalLength);
OSStatus __fastcall ATSUSetTransientFontMatching(ATSUTextLayout iTextLayout, Boolean iTransientFontMatching);
OSStatus __fastcall ATSUSetVariations(ATSUStyle iStyle, ItemCount iVariationCount, const ATSUFontVariationAxis iAxes[], const ATSUFontVariationValue iValue[]);
OSStatus __fastcall ATSUStyleIsEmpty(ATSUStyle iStyle, Boolean *oIsClear);
OSStatus __fastcall ATSUTextDeleted(ATSUTextLayout iTextLayout, UniCharArrayOffset iDeletedRangeStart, UniCharCount iDeletedRangeLength);
OSStatus __fastcall ATSUTextInserted(ATSUTextLayout iTextLayout, UniCharArrayOffset iInsertionLocation, UniCharCount iInsertionLength);
OSStatus __fastcall ATSUTextMoved(ATSUTextLayout iTextLayout, ConstUniCharArrayPtr iNewLocation);
OSStatus __fastcall ATSUUnderwriteAttributes(ATSUStyle iSourceStyle, ATSUStyle iDestinationStyle);
OSStatus __fastcall ATSUUnflattenStyleRunsFromStream(ATSUFlattenedDataStreamFormat iStreamFormat, ATSUUnFlattenStyleRunOptions iUnflattenOptions, ByteCount iStreamBufferSize, const void *iStreamBuffer, ItemCount iNumberOfRunInfo, ItemCount iNumberOfStyleObjects, ATSUStyleRunInfo oRunInfoArray[], ATSUStyle oStyleArray[], ItemCount *oActualNumberOfRunInfo, ItemCount *oActualNumberOfStyleObjects);
OSStatus __fastcall ATSUUnhighlightText(ATSUTextLayout iTextLayout, ATSUTextMeasurement iTextBasePointX, ATSUTextMeasurement iTextBasePointY, UniCharArrayOffset iHighlightStart, UniCharCount iHighlightLength);
OSErr __fastcall AVLCount(AVLTreePtr tree, UInt32 *count);
OSErr __fastcall AVLDispose(AVLTreePtr *tree, AVLOrder order);
OSErr __fastcall AVLFind(AVLTreePtr tree, const void *key, void *dataPtr, UInt32 *itemSize);
OSErr __fastcall AVLGetIndItem(AVLTreePtr tree, UInt32 index, void *dataPtr, UInt32 *itemSize);
OSErr __fastcall AVLGetRefcon(AVLTreePtr tree, void **refCon);
OSErr __fastcall AVLInit(UInt32 flags, AVLCompareItemsUPP compareItemsProc, AVLItemSizeUPP sizeItemProc, AVLDisposeItemUPP disposeItemProc, void *refCon, AVLTreePtr *tree);
OSErr __fastcall AVLInsert(AVLTreePtr tree, const void *data);
OSErr __fastcall AVLRemove(AVLTreePtr tree, const void *key, void *dataPtr, UInt32 *itemSize);
OSErr __fastcall AVLWalk(AVLTreePtr tree, AVLWalkUPP walkProc, AVLOrder order, void *walkRefCon);
Boolean __fastcall AXAPIEnabled();
void __fastcall AXNotificationHIObjectNotify(CFStringRef inNotification, HIObjectRef inHIObject, UInt64 inIdentifier);
AXError __fastcall AXObserverAddNotification(AXObserverRef observer, AXUIElementRef element, CFStringRef notification, void *refcon);
AXError __fastcall AXObserverCreate(pid_t application, AXObserverCallback callback, AXObserverRef *outObserver);
CFRunLoopSourceRef __fastcall AXObserverGetRunLoopSource(AXObserverRef observer);
CFTypeID AXObserverGetTypeID(void);
AXError __fastcall AXObserverRemoveNotification(AXObserverRef observer, AXUIElementRef element, CFStringRef notification);
AXError __fastcall AXUIElementCopyActionDescription(AXUIElementRef element, CFStringRef action, CFStringRef *description);
AXError __fastcall AXUIElementCopyActionNames(AXUIElementRef element, CFArrayRef *names);
AXError __fastcall AXUIElementCopyAttributeNames(AXUIElementRef element, CFArrayRef *names);
AXError __fastcall AXUIElementCopyAttributeValue(AXUIElementRef element, CFStringRef attribute, CFTypeRef *value);
AXError __fastcall AXUIElementCopyAttributeValues(AXUIElementRef element, CFStringRef attribute, CFIndex index, CFIndex maxValues, CFArrayRef *values);
AXError __fastcall AXUIElementCopyElementAtPosition(AXUIElementRef application, float x, float y, AXUIElementRef *element);
AXUIElementRef __fastcall AXUIElementCreateApplication(pid_t pid);
AXUIElementRef AXUIElementCreateSystemWide(void);
AXUIElementRef __fastcall AXUIElementCreateWithHIObjectAndIdentifier(HIObjectRef inHIObject, UInt64 inIdentifier);
AXError __fastcall AXUIElementGetAttributeValueCount(AXUIElementRef element, CFStringRef attribute, CFIndex *count);
HIObjectRef __fastcall AXUIElementGetHIObject(AXUIElementRef inUIElement);
void __fastcall AXUIElementGetIdentifier(AXUIElementRef inUIElement, UInt64 *outIdentifier);
AXError __fastcall AXUIElementGetPid(AXUIElementRef element, pid_t *pid);
CFTypeID AXUIElementGetTypeID(void);
AXError __fastcall AXUIElementIsAttributeSettable(AXUIElementRef element, CFStringRef attribute, Boolean *settable);
AXError __fastcall AXUIElementPerformAction(AXUIElementRef element, CFStringRef action);
AXError __fastcall AXUIElementPostKeyboardEvent(AXUIElementRef application, CGCharCode keyChar, CGKeyCode virtualKey, Boolean keyDown);
AXError __fastcall AXUIElementSetAttributeValue(AXUIElementRef element, CFStringRef attribute, CFTypeRef value);
CFTypeRef __fastcall AXValueCreate(AXValueType theType, const void *valuePtr);
AXValueType __fastcall AXValueGetType(CFTypeRef value);
Boolean __fastcall AXValueGetValue(CFTypeRef value, AXValueType theType, void *valuePtr);
Duration __fastcall AbsoluteDeltaToDuration(AbsoluteTime leftAbsoluteTime, AbsoluteTime rightAbsoluteTime);
Nanoseconds __fastcall AbsoluteDeltaToNanoseconds(AbsoluteTime leftAbsoluteTime, AbsoluteTime rightAbsoluteTime);
Duration __fastcall AbsoluteToDuration(AbsoluteTime absoluteTime);
Nanoseconds __fastcall AbsoluteToNanoseconds(AbsoluteTime absoluteTime);
OSErr __fastcall AcquireIconRef(IconRef theIconRef);
MenuRef AcquireRootMenu(void);
OSErr __fastcall ActivateControl(ControlRef inControl);
void __fastcall ActivatePalette(WindowRef srcWindow);
OSErr __fastcall ActivateTSMDocument(TSMDocumentID idocID);
ComponentResult __fastcall ActivateTextService(ComponentInstance ts);
OSStatus __fastcall ActivateWindow(WindowRef inWindow, Boolean inActivate);
WindowRef ActiveNonFloatingWindow(void);
AbsoluteTime __fastcall AddAbsoluteToAbsolute(AbsoluteTime absoluteTime1, AbsoluteTime absoluteTime2);
SInt32 __fastcall AddAtomic(SInt32 amount, SInt32 *value);
SInt16 __fastcall AddAtomic16(SInt32 amount, SInt16 *value);
SInt8 __fastcall AddAtomic8(SInt32 amount, SInt8 *value);
OSErr __fastcall AddCollectionItem(Collection c, CollectionTag tag, SInt32 id, SInt32 itemSize, const void *itemData);
OSErr __fastcall AddCollectionItemHdl(Collection aCollection, CollectionTag tag, SInt32 id, Handle itemData);
void __fastcall AddComp(ColorComplementUPP compProc);
OSStatus __fastcall AddDataBrowserItems(ControlRef browser, DataBrowserItemID container, UInt32 numItems, const DataBrowserItemID *items, DataBrowserPropertyID preSortProperty);
OSStatus __fastcall AddDataBrowserListViewColumn(ControlRef browser, DataBrowserListViewColumnDesc *columnDesc, DataBrowserTableViewColumnIndex position);
OSErr __fastcall AddDragItemFlavor(DragRef theDrag, DragItemRef theItemRef, FlavorType theType, const void *dataPtr, Size dataSize, FlavorFlags theFlags);
AbsoluteTime __fastcall AddDurationToAbsolute(Duration duration, AbsoluteTime absoluteTime);
OSStatus __fastcall AddEventTypesToHandler(EventHandlerRef inHandlerRef, UInt32 inNumTypes, const EventTypeSpec *inList);
OSErr __fastcall AddFolderDescriptor(FolderType foldType, FolderDescFlags flags, FolderClass foldClass, FolderLocation foldLocation, OSType badgeSignature, OSType badgeType, ConstStrFileNameParam name, Boolean replaceFlag);
OSErr __fastcall AddFolderRouting(OSType fileType, FolderType routeFromFolder, FolderType routeToFolder, RoutingFlags flags, Boolean replaceFlag);
OSErr __fastcall AddIconToSuite(Handle theIconData, IconSuiteRef theSuite, ResType theType);
AbsoluteTime __fastcall AddNanosecondsToAbsolute(Nanoseconds nanoseconds, AbsoluteTime absoluteTime);
void __fastcall AddPt(Point src, Point *dst);
void __fastcall AddResource(Handle theData, ResType theType, __int16 theID, ConstStr255Param name);
void __fastcall AddSearch(ColorSearchUPP searchProc);
OSErr __fastcall AdvanceKeyboardFocus(WindowRef inWindow);
DialogItemIndex __fastcall Alert(SInt16 alertID, ModalFilterUPP modalFilter);
void AlertSoundPlay(void);
OSErr __fastcall AllocContig(__int16 refNum, int *count);
void AllocCursor(void);
OSErr __fastcall Allocate(__int16 refNum, int *count);
void __fastcall AllowPurgePixels(PixMapHandle pm);
__int16 __fastcall AngleFromSlope(Fixed slope);
void __fastcall AnimateEntry(WindowRef dstWindow, __int16 dstEntry, const RGBColor *srcRGB);
void __fastcall AnimatePalette(WindowRef dstWindow, CTabHandle srcCTab, __int16 srcIndex, __int16 dstEntry, __int16 dstLength);
void __fastcall AppendDITL(DialogRef theDialog, Handle theHandle, DITLMethod method);
OSErr __fastcall AppendDialogItemList(DialogRef dialog, SInt16 ditlID, DITLMethod method);
void __fastcall AppendMenu(MenuRef menu, ConstStr255Param data);
OSStatus __fastcall AppendMenuItemText(MenuRef menu, ConstStr255Param inString);
OSStatus __fastcall AppendMenuItemTextWithCFString(MenuRef inMenu, CFStringRef inString, MenuItemAttributes inAttributes, MenuCommand inCommandID, MenuItemIndex *outNewItem);
void __fastcall AppendResMenu(MenuRef theMenu, ResType theType);
OSStatus __fastcall ApplyThemeBackground(ThemeBackgroundKind inKind, const Rect *bounds, ThemeDrawState inState, SInt16 inDepth, Boolean inColorDev);
Boolean AreFloatingWindowsVisible(void);
OSErr __fastcall AutoEmbedControl(ControlRef inControl, WindowRef inWindow);
OSStatus __fastcall AutoSizeDataBrowserListViewColumns(ControlRef browser);
OSErr __fastcall AutoSizeDialog(DialogRef inDialog);
void __fastcall AutoSleepControl(Boolean enableSleep);
MACRO__A _B;
void BOff(void);
void BOn(void);
void __fastcall BackColor(int color);
void __fastcall BackPat(const Pattern *pat);
void __fastcall BackPixPat(PixPatHandle pp);
__int16 BatteryCount(void);
OSErr __fastcall BatteryStatus(Byte *status, Byte *power);
OSStatus __fastcall BeginAppModalStateForWindow(WindowRef inWindow);
CGContextRef BeginCGContextForApplicationDockTile(void);
CGrafPtr BeginQDContextForApplicationDockTile(void);
OSStatus __fastcall BeginThemeDragSound(ThemeDragSoundKind kind);
void __fastcall BeginUpdate(WindowRef window);
OSStatus __fastcall BeginWindowProxyDrag(WindowRef window, DragReference *outNewDrag, RgnHandle outDragOutlineRgn);
int __fastcall BitAnd(int value1, int value2);
UInt32 __fastcall BitAndAtomic(UInt32 mask, UInt32 *value);
UInt16 __fastcall BitAndAtomic16(UInt32 mask, UInt16 *value);
UInt8 __fastcall BitAndAtomic8(UInt32 mask, UInt8 *value);
void __fastcall BitClr(void *bytePtr, int bitNum);
OSErr __fastcall BitMapToRegion(RgnHandle region, const BitMap *bMap);
int __fastcall BitNot(int value);
int __fastcall BitOr(int value1, int value2);
UInt32 __fastcall BitOrAtomic(UInt32 mask, UInt32 *value);
UInt16 __fastcall BitOrAtomic16(UInt32 mask, UInt16 *value);
UInt8 __fastcall BitOrAtomic8(UInt32 mask, UInt8 *value);
void __fastcall BitSet(void *bytePtr, int bitNum);
int __fastcall BitShift(int value, __int16 count);
Boolean __fastcall BitTst(const void *bytePtr, int bitNum);
int __fastcall BitXor(int value1, int value2);
UInt32 __fastcall BitXorAtomic(UInt32 mask, UInt32 *value);
UInt16 __fastcall BitXorAtomic16(UInt32 mask, UInt16 *value);
UInt8 __fastcall BitXorAtomic8(UInt32 mask, UInt8 *value);
void __fastcall BlockMove(const void *srcPtr, void *destPtr, Size byteCount);
void __fastcall BlockMoveData(const void *srcPtr, void *destPtr, Size byteCount);
void __fastcall BlockMoveDataUncached(const void *srcPtr, void *destPtr, Size byteCount);
void __fastcall BlockMoveUncached(const void *srcPtr, void *destPtr, Size byteCount);
void __fastcall BlockZero(void *destPtr, Size byteCount);
void __fastcall BlockZeroUncached(void *destPtr, Size byteCount);
void __fastcall BringToFront(WindowRef window);
Boolean Button(void);
MACRO__A _C;
MACRO__CACHED _CACHED_RUNES;
CFAbsoluteTime __fastcall CFAbsoluteTimeAddGregorianUnits(CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units);
CFAbsoluteTime CFAbsoluteTimeGetCurrent(void);
SInt32 __fastcall CFAbsoluteTimeGetDayOfWeek(CFAbsoluteTime at, CFTimeZoneRef tz);
SInt32 __fastcall CFAbsoluteTimeGetDayOfYear(CFAbsoluteTime at, CFTimeZoneRef tz);
CFGregorianUnits __fastcall CFAbsoluteTimeGetDifferenceAsGregorianUnits(CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags);
CFGregorianDate __fastcall CFAbsoluteTimeGetGregorianDate(CFAbsoluteTime at, CFTimeZoneRef tz);
SInt32 __fastcall CFAbsoluteTimeGetWeekOfYear(CFAbsoluteTime at, CFTimeZoneRef tz);
void *__fastcall CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);
CFAllocatorRef __fastcall CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context);
void __fastcall CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr);
void __fastcall CFAllocatorGetContext(CFAllocatorRef allocator, CFAllocatorContext *context);
CFAllocatorRef CFAllocatorGetDefault(void);
CFIndex __fastcall CFAllocatorGetPreferredSizeForSize(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);
CFTypeID CFAllocatorGetTypeID(void);
void *__fastcall CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint);
void __fastcall CFAllocatorSetDefault(CFAllocatorRef allocator);
void __fastcall CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange);
void __fastcall CFArrayAppendValue(CFMutableArrayRef theArray, const void *value);
void __fastcall CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction applier, void *context);
CFIndex __fastcall CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context);
Boolean __fastcall CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value);
CFArrayRef __fastcall CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks);
CFArrayRef __fastcall CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray);
CFMutableArrayRef __fastcall CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
CFMutableArrayRef __fastcall CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray);
void __fastcall CFArrayExchangeValuesAtIndices(CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2);
CFIndex __fastcall CFArrayGetCount(CFArrayRef theArray);
CFIndex __fastcall CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value);
CFIndex __fastcall CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
CFIndex __fastcall CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
CFTypeID CFArrayGetTypeID(void);
const void *__fastcall CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx);
void __fastcall CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values);
void __fastcall CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
void __fastcall CFArrayRemoveAllValues(CFMutableArrayRef theArray);
void __fastcall CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx);
void __fastcall CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount);
void __fastcall CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
void __fastcall CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context);
void __fastcall CFBagAddValue(CFMutableBagRef theBag, const void *value);
void __fastcall CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction applier, void *context);
Boolean __fastcall CFBagContainsValue(CFBagRef theBag, const void *value);
CFBagRef __fastcall CFBagCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFBagCallBacks *callBacks);
CFBagRef __fastcall CFBagCreateCopy(CFAllocatorRef allocator, CFBagRef theBag);
CFMutableBagRef __fastcall CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks);
CFMutableBagRef __fastcall CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag);
CFIndex __fastcall CFBagGetCount(CFBagRef theBag);
CFIndex __fastcall CFBagGetCountOfValue(CFBagRef theBag, const void *value);
CFTypeID CFBagGetTypeID(void);
const void *__fastcall CFBagGetValue(CFBagRef theBag, const void *value);
Boolean __fastcall CFBagGetValueIfPresent(CFBagRef theBag, const void *candidate, const void **value);
void __fastcall CFBagGetValues(CFBagRef theBag, const void **values);
void __fastcall CFBagRemoveAllValues(CFMutableBagRef theBag);
void __fastcall CFBagRemoveValue(CFMutableBagRef theBag, const void *value);
void __fastcall CFBagReplaceValue(CFMutableBagRef theBag, const void *value);
void __fastcall CFBagSetValue(CFMutableBagRef theBag, const void *value);
void __fastcall CFBinaryHeapAddValue(CFBinaryHeapRef heap, const void *value);
void __fastcall CFBinaryHeapApplyFunction(CFBinaryHeapRef heap, CFBinaryHeapApplierFunction applier, void *context);
Boolean __fastcall CFBinaryHeapContainsValue(CFBinaryHeapRef heap, const void *value);
CFBinaryHeapRef __fastcall CFBinaryHeapCreate(CFAllocatorRef allocator, CFIndex capacity, const CFBinaryHeapCallBacks *callBacks, const CFBinaryHeapCompareContext *compareContext);
CFBinaryHeapRef __fastcall CFBinaryHeapCreateCopy(CFAllocatorRef allocator, CFIndex capacity, CFBinaryHeapRef heap);
CFIndex __fastcall CFBinaryHeapGetCount(CFBinaryHeapRef heap);
CFIndex __fastcall CFBinaryHeapGetCountOfValue(CFBinaryHeapRef heap, const void *value);
const void *__fastcall CFBinaryHeapGetMinimum(CFBinaryHeapRef heap);
Boolean __fastcall CFBinaryHeapGetMinimumIfPresent(CFBinaryHeapRef heap, const void **value);
CFTypeID CFBinaryHeapGetTypeID(void);
void __fastcall CFBinaryHeapGetValues(CFBinaryHeapRef heap, const void **values);
void __fastcall CFBinaryHeapRemoveAllValues(CFBinaryHeapRef heap);
void __fastcall CFBinaryHeapRemoveMinimumValue(CFBinaryHeapRef heap);
Boolean __fastcall CFBitVectorContainsBit(CFBitVectorRef bv, CFRange range, CFBit value);
CFBitVectorRef __fastcall CFBitVectorCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex numBits);
CFBitVectorRef __fastcall CFBitVectorCreateCopy(CFAllocatorRef allocator, CFBitVectorRef bv);
CFMutableBitVectorRef __fastcall CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity);
CFMutableBitVectorRef __fastcall CFBitVectorCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBitVectorRef bv);
void __fastcall CFBitVectorFlipBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx);
void __fastcall CFBitVectorFlipBits(CFMutableBitVectorRef bv, CFRange range);
CFBit __fastcall CFBitVectorGetBitAtIndex(CFBitVectorRef bv, CFIndex idx);
void __fastcall CFBitVectorGetBits(CFBitVectorRef bv, CFRange range, UInt8 *bytes);
CFIndex __fastcall CFBitVectorGetCount(CFBitVectorRef bv);
CFIndex __fastcall CFBitVectorGetCountOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
CFIndex __fastcall CFBitVectorGetFirstIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
CFIndex __fastcall CFBitVectorGetLastIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
CFTypeID CFBitVectorGetTypeID(void);
void __fastcall CFBitVectorSetAllBits(CFMutableBitVectorRef bv, CFBit value);
void __fastcall CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value);
void __fastcall CFBitVectorSetBits(CFMutableBitVectorRef bv, CFRange range, CFBit value);
void __fastcall CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count);
CFTypeID CFBooleanGetTypeID(void);
Boolean __fastcall CFBooleanGetValue(CFBooleanRef boolean);
void __fastcall CFBundleCloseBundleResourceMap(CFBundleRef bundle, __int16 refNum);
CFURLRef __fastcall CFBundleCopyAuxiliaryExecutableURL(CFBundleRef bundle, CFStringRef executableName);
CFURLRef __fastcall CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle);
CFArrayRef __fastcall CFBundleCopyBundleLocalizations(CFBundleRef bundle);
CFURLRef __fastcall CFBundleCopyBundleURL(CFBundleRef bundle);
CFURLRef __fastcall CFBundleCopyExecutableURL(CFBundleRef bundle);
CFDictionaryRef __fastcall CFBundleCopyInfoDictionaryForURL(CFURLRef url);
CFDictionaryRef __fastcall CFBundleCopyInfoDictionaryInDirectory(CFURLRef bundleURL);
CFArrayRef __fastcall CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray);
CFArrayRef __fastcall CFBundleCopyLocalizationsForURL(CFURLRef url);
CFStringRef __fastcall CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName);
CFArrayRef __fastcall CFBundleCopyPreferredLocalizationsFromArray(CFArrayRef locArray);
CFURLRef __fastcall CFBundleCopyPrivateFrameworksURL(CFBundleRef bundle);
CFURLRef __fastcall CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);
CFURLRef __fastcall CFBundleCopyResourceURLForLocalization(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);
CFURLRef __fastcall CFBundleCopyResourceURLInDirectory(CFURLRef bundleURL, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);
CFArrayRef __fastcall CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName);
CFArrayRef __fastcall CFBundleCopyResourceURLsOfTypeForLocalization(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);
CFArrayRef __fastcall CFBundleCopyResourceURLsOfTypeInDirectory(CFURLRef bundleURL, CFStringRef resourceType, CFStringRef subDirName);
CFURLRef __fastcall CFBundleCopyResourcesDirectoryURL(CFBundleRef bundle);
CFURLRef __fastcall CFBundleCopySharedFrameworksURL(CFBundleRef bundle);
CFURLRef __fastcall CFBundleCopySharedSupportURL(CFBundleRef bundle);
CFURLRef __fastcall CFBundleCopySupportFilesDirectoryURL(CFBundleRef bundle);
CFBundleRef __fastcall CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL);
CFArrayRef __fastcall CFBundleCreateBundlesFromDirectory(CFAllocatorRef allocator, CFURLRef directoryURL, CFStringRef bundleType);
CFArrayRef CFBundleGetAllBundles(void);
CFBundleRef __fastcall CFBundleGetBundleWithIdentifier(CFStringRef bundleID);
void *__fastcall CFBundleGetDataPointerForName(CFBundleRef bundle, CFStringRef symbolName);
void __fastcall CFBundleGetDataPointersForNames(CFBundleRef bundle, CFArrayRef symbolNames, void *stbl[]);
CFStringRef __fastcall CFBundleGetDevelopmentRegion(CFBundleRef bundle);
void *__fastcall CFBundleGetFunctionPointerForName(CFBundleRef bundle, CFStringRef functionName);
void __fastcall CFBundleGetFunctionPointersForNames(CFBundleRef bundle, CFArrayRef functionNames, void *ftbl[]);
CFStringRef __fastcall CFBundleGetIdentifier(CFBundleRef bundle);
CFDictionaryRef __fastcall CFBundleGetInfoDictionary(CFBundleRef bundle);
CFDictionaryRef __fastcall CFBundleGetLocalInfoDictionary(CFBundleRef bundle);
CFBundleRef CFBundleGetMainBundle(void);
void __fastcall CFBundleGetPackageInfo(CFBundleRef bundle, UInt32 *packageType, UInt32 *packageCreator);
Boolean __fastcall CFBundleGetPackageInfoInDirectory(CFURLRef url, UInt32 *packageType, UInt32 *packageCreator);
CFPlugInRef __fastcall CFBundleGetPlugIn(CFBundleRef bundle);
UInt32 CFBundleGetTypeID(void);
CFTypeRef __fastcall CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key);
UInt32 __fastcall CFBundleGetVersionNumber(CFBundleRef bundle);
Boolean __fastcall CFBundleIsExecutableLoaded(CFBundleRef bundle);
Boolean __fastcall CFBundleLoadExecutable(CFBundleRef bundle);
SInt32 __fastcall CFBundleOpenBundleResourceFiles(CFBundleRef bundle, __int16 *refNum, __int16 *localizedRefNum);
__int16 __fastcall CFBundleOpenBundleResourceMap(CFBundleRef bundle);
void __fastcall CFBundleUnloadExecutable(CFBundleRef bundle);
static CFByteOrder CFByteOrderGetCurrent(void);
void __fastcall CFCharacterSetAddCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
void __fastcall CFCharacterSetAddCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
CFDataRef __fastcall CFCharacterSetCreateBitmapRepresentation(CFAllocatorRef alloc, CFCharacterSetRef theSet);
CFCharacterSetRef __fastcall CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet);
CFMutableCharacterSetRef __fastcall CFCharacterSetCreateMutable(CFAllocatorRef alloc);
CFMutableCharacterSetRef __fastcall CFCharacterSetCreateMutableCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
CFCharacterSetRef __fastcall CFCharacterSetCreateWithBitmapRepresentation(CFAllocatorRef alloc, CFDataRef theData);
CFCharacterSetRef __fastcall CFCharacterSetCreateWithCharactersInRange(CFAllocatorRef alloc, CFRange theRange);
CFCharacterSetRef __fastcall CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString);
CFCharacterSetRef __fastcall CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier);
CFTypeID CFCharacterSetGetTypeID(void);
Boolean __fastcall CFCharacterSetHasMemberInPlane(CFCharacterSetRef theSet, CFIndex thePlane);
void __fastcall CFCharacterSetIntersect(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
void __fastcall CFCharacterSetInvert(CFMutableCharacterSetRef theSet);
Boolean __fastcall CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar);
Boolean __fastcall CFCharacterSetIsLongCharacterMember(CFCharacterSetRef theSet, UTF32Char theChar);
Boolean __fastcall CFCharacterSetIsSupersetOfSet(CFCharacterSetRef theSet, CFCharacterSetRef theOtherset);
void __fastcall CFCharacterSetRemoveCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
void __fastcall CFCharacterSetRemoveCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
void __fastcall CFCharacterSetUnion(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
static CFSwappedFloat64 __fastcall CFConvertDoubleHostToSwapped(double arg);
static double __fastcall CFConvertDoubleSwappedToHost(CFSwappedFloat64 arg);
static CFSwappedFloat32 __fastcall CFConvertFloat32HostToSwapped(Float32 arg);
static Float32 __fastcall CFConvertFloat32SwappedToHost(CFSwappedFloat32 arg);
static CFSwappedFloat64 __fastcall CFConvertFloat64HostToSwapped(Float64 arg);
static Float64 __fastcall CFConvertFloat64SwappedToHost(CFSwappedFloat64 arg);
static CFSwappedFloat32 __fastcall CFConvertFloatHostToSwapped(float arg);
static float __fastcall CFConvertFloatSwappedToHost(CFSwappedFloat32 arg);
CFStringRef __fastcall CFCopyDescription(CFTypeRef cf);
CFStringRef __fastcall CFCopyTypeIDDescription(CFTypeID type_id);
void __fastcall CFDataAppendBytes(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
CFDataRef __fastcall CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
CFDataRef __fastcall CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData);
CFMutableDataRef __fastcall CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity);
CFMutableDataRef __fastcall CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData);
CFDataRef __fastcall CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);
void __fastcall CFDataDeleteBytes(CFMutableDataRef theData, CFRange range);
const UInt8 *__fastcall CFDataGetBytePtr(CFDataRef theData);
void __fastcall CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer);
CFIndex __fastcall CFDataGetLength(CFDataRef theData);
UInt8 *__fastcall CFDataGetMutableBytePtr(CFMutableDataRef theData);
CFTypeID CFDataGetTypeID(void);
void __fastcall CFDataIncreaseLength(CFMutableDataRef theData, CFIndex extraLength);
void __fastcall CFDataReplaceBytes(CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength);
void __fastcall CFDataSetLength(CFMutableDataRef theData, CFIndex length);
CFComparisonResult __fastcall CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context);
CFDateRef __fastcall CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at);
CFAbsoluteTime __fastcall CFDateGetAbsoluteTime(CFDateRef theDate);
CFTimeInterval __fastcall CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate);
CFTypeID CFDateGetTypeID(void);
void __fastcall CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
void __fastcall CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context);
Boolean __fastcall CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key);
Boolean __fastcall CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value);
CFDictionaryRef __fastcall CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
CFDictionaryRef __fastcall CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict);
CFMutableDictionaryRef __fastcall CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
CFMutableDictionaryRef __fastcall CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict);
CFIndex __fastcall CFDictionaryGetCount(CFDictionaryRef theDict);
CFIndex __fastcall CFDictionaryGetCountOfKey(CFDictionaryRef theDict, const void *key);
CFIndex __fastcall CFDictionaryGetCountOfValue(CFDictionaryRef theDict, const void *value);
void __fastcall CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values);
CFTypeID CFDictionaryGetTypeID(void);
const void *__fastcall CFDictionaryGetValue(CFDictionaryRef theDict, const void *key);
Boolean __fastcall CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value);
void __fastcall CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict);
void __fastcall CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key);
void __fastcall CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
void __fastcall CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
Boolean __fastcall CFEqual(CFTypeRef cf1, CFTypeRef cf2);
CFIndex __fastcall CFFTPCreateParsedResourceListing(CFAllocatorRef alloc, const UInt8 *buffer, CFIndex bufferLength, CFDictionaryRef *parsed);
CFAllocatorRef __fastcall CFGetAllocator(CFTypeRef cf);
CFIndex __fastcall CFGetRetainCount(CFTypeRef cf);
CFTypeID __fastcall CFGetTypeID(CFTypeRef cf);
CFAbsoluteTime __fastcall CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz);
Boolean __fastcall CFGregorianDateIsValid(CFGregorianDate gdate, CFOptionFlags unitFlags);
Boolean __fastcall CFHTTPMessageAddAuthentication(CFHTTPMessageRef request, CFHTTPMessageRef authenticationFailureResponse, CFStringRef username, CFStringRef password, CFStringRef authenticationScheme, Boolean forProxy);
Boolean __fastcall CFHTTPMessageAppendBytes(CFHTTPMessageRef message, const UInt8 *newBytes, CFIndex numBytes);
CFDictionaryRef __fastcall CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message);
CFDataRef __fastcall CFHTTPMessageCopyBody(CFHTTPMessageRef message);
CFStringRef __fastcall CFHTTPMessageCopyHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField);
CFStringRef __fastcall CFHTTPMessageCopyRequestMethod(CFHTTPMessageRef request);
CFURLRef __fastcall CFHTTPMessageCopyRequestURL(CFHTTPMessageRef request);
CFStringRef __fastcall CFHTTPMessageCopyResponseStatusLine(CFHTTPMessageRef response);
CFDataRef __fastcall CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef request);
CFStringRef __fastcall CFHTTPMessageCopyVersion(CFHTTPMessageRef message);
CFHTTPMessageRef __fastcall CFHTTPMessageCreateCopy(CFAllocatorRef allocator, CFHTTPMessageRef message);
CFHTTPMessageRef __fastcall CFHTTPMessageCreateEmpty(CFAllocatorRef allocator, Boolean isRequest);
CFHTTPMessageRef __fastcall CFHTTPMessageCreateRequest(CFAllocatorRef allocator, CFStringRef requestMethod, CFURLRef url, CFStringRef httpVersion);
CFHTTPMessageRef __fastcall CFHTTPMessageCreateResponse(CFAllocatorRef allocator, int statusCode, CFStringRef statusDescription, CFStringRef httpVersion);
UInt32 __fastcall CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response);
CFTypeID CFHTTPMessageGetTypeID(void);
Boolean __fastcall CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message);
Boolean __fastcall CFHTTPMessageIsRequest(CFHTTPMessageRef message);
void __fastcall CFHTTPMessageSetBody(CFHTTPMessageRef message, CFDataRef bodyData);
void __fastcall CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef value);
void __fastcall CFHTTPReadStreamSetProxy(CFReadStreamRef httpStream, CFStringRef proxyHost, CFIndex proxyPort);
void __fastcall CFHTTPReadStreamSetRedirectsAutomatically(CFReadStreamRef httpStream, Boolean shouldAutoRedirect);
CFHashCode __fastcall CFHash(CFTypeRef cf);
void __fastcall CFHostCancelInfoResolution(CFHostRef theHost, CFHostInfoType info);
CFHostRef __fastcall CFHostCreateCopy(CFAllocatorRef alloc, CFHostRef host);
CFHostRef __fastcall CFHostCreateWithAddress(CFAllocatorRef allocator, CFDataRef addr);
CFHostRef __fastcall CFHostCreateWithName(CFAllocatorRef allocator, CFStringRef hostname);
CFArrayRef __fastcall CFHostGetAddressing(CFHostRef theHost, Boolean *hasBeenResolved);
CFArrayRef __fastcall CFHostGetNames(CFHostRef theHost, Boolean *hasBeenResolved);
CFDataRef __fastcall CFHostGetReachability(CFHostRef theHost, Boolean *hasBeenResolved);
CFTypeID CFHostGetTypeID(void);
void __fastcall CFHostScheduleWithRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode);
Boolean __fastcall CFHostSetClient(CFHostRef theHost, CFHostClientCallBack clientCB, CFHostClientContext *clientContext);
Boolean __fastcall CFHostStartInfoResolution(CFHostRef theHost, CFHostInfoType info, CFStreamError *error);
void __fastcall CFHostUnscheduleFromRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode);
CFMachPortRef __fastcall CFMachPortCreate(CFAllocatorRef allocator, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);
CFRunLoopSourceRef __fastcall CFMachPortCreateRunLoopSource(CFAllocatorRef allocator, CFMachPortRef port, CFIndex order);
CFMachPortRef __fastcall CFMachPortCreateWithPort(CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);
void __fastcall CFMachPortGetContext(CFMachPortRef port, CFMachPortContext *context);
CFMachPortInvalidationCallBack __fastcall CFMachPortGetInvalidationCallBack(CFMachPortRef port);
mach_port_t __fastcall CFMachPortGetPort(CFMachPortRef port);
CFTypeID CFMachPortGetTypeID(void);
void __fastcall CFMachPortInvalidate(CFMachPortRef port);
Boolean __fastcall CFMachPortIsValid(CFMachPortRef port);
void __fastcall CFMachPortSetInvalidationCallBack(CFMachPortRef port, CFMachPortInvalidationCallBack callout);
CFMessagePortRef __fastcall CFMessagePortCreateLocal(CFAllocatorRef allocator, CFStringRef name, CFMessagePortCallBack callout, CFMessagePortContext *context, Boolean *shouldFreeInfo);
CFMessagePortRef __fastcall CFMessagePortCreateRemote(CFAllocatorRef allocator, CFStringRef name);
CFRunLoopSourceRef __fastcall CFMessagePortCreateRunLoopSource(CFAllocatorRef allocator, CFMessagePortRef local, CFIndex order);
void __fastcall CFMessagePortGetContext(CFMessagePortRef ms, CFMessagePortContext *context);
CFMessagePortInvalidationCallBack __fastcall CFMessagePortGetInvalidationCallBack(CFMessagePortRef ms);
CFStringRef __fastcall CFMessagePortGetName(CFMessagePortRef ms);
CFTypeID CFMessagePortGetTypeID(void);
void __fastcall CFMessagePortInvalidate(CFMessagePortRef ms);
Boolean __fastcall CFMessagePortIsRemote(CFMessagePortRef ms);
Boolean __fastcall CFMessagePortIsValid(CFMessagePortRef ms);
SInt32 __fastcall CFMessagePortSendRequest(CFMessagePortRef remote, SInt32 msgid, CFDataRef data, CFTimeInterval sendTimeout, CFTimeInterval rcvTimeout, CFStringRef replyMode, CFDataRef *returnData);
void __fastcall CFMessagePortSetInvalidationCallBack(CFMessagePortRef ms, CFMessagePortInvalidationCallBack callout);
Boolean __fastcall CFMessagePortSetName(CFMessagePortRef ms, CFStringRef newName);
CFNetServiceBrowserRef __fastcall CFNetServiceBrowserCreate(CFAllocatorRef alloc, CFNetServiceBrowserClientCallBack clientCB, CFNetServiceClientContext *clientContext);
CFTypeID CFNetServiceBrowserGetTypeID(void);
void __fastcall CFNetServiceBrowserInvalidate(CFNetServiceBrowserRef browser);
void __fastcall CFNetServiceBrowserScheduleWithRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode);
Boolean __fastcall CFNetServiceBrowserSearchForDomains(CFNetServiceBrowserRef browser, Boolean registrationDomains, CFStreamError *error);
Boolean __fastcall CFNetServiceBrowserSearchForServices(CFNetServiceBrowserRef browser, CFStringRef domain, CFStringRef serviceType, CFStreamError *error);
void __fastcall CFNetServiceBrowserStopSearch(CFNetServiceBrowserRef browser, CFStreamError *error);
void __fastcall CFNetServiceBrowserUnscheduleFromRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode);
void __fastcall CFNetServiceCancel(CFNetServiceRef theService);
CFNetServiceRef __fastcall CFNetServiceCreate(CFAllocatorRef alloc, CFStringRef domain, CFStringRef serviceType, CFStringRef name, UInt32 port);
CFNetServiceRef __fastcall CFNetServiceCreateCopy(CFAllocatorRef alloc, CFNetServiceRef service);
CFArrayRef __fastcall CFNetServiceGetAddressing(CFNetServiceRef theService);
CFStringRef __fastcall CFNetServiceGetDomain(CFNetServiceRef theService);
CFStringRef __fastcall CFNetServiceGetName(CFNetServiceRef theService);
CFStringRef __fastcall CFNetServiceGetProtocolSpecificInformation(CFNetServiceRef theService);
CFStringRef __fastcall CFNetServiceGetType(CFNetServiceRef theService);
CFTypeID CFNetServiceGetTypeID(void);
Boolean __fastcall CFNetServiceRegister(CFNetServiceRef theService, CFStreamError *error);
Boolean __fastcall CFNetServiceResolve(CFNetServiceRef theService, CFStreamError *error);
void __fastcall CFNetServiceScheduleWithRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode);
Boolean __fastcall CFNetServiceSetClient(CFNetServiceRef theService, CFNetServiceClientCallBack clientCB, CFNetServiceClientContext *clientContext);
void __fastcall CFNetServiceSetProtocolSpecificInformation(CFNetServiceRef theService, CFStringRef theInfo);
void __fastcall CFNetServiceUnscheduleFromRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode);
void __fastcall CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior);
CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void);
CFTypeID CFNotificationCenterGetTypeID(void);
void __fastcall CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFStringRef name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately);
void __fastcall CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer);
void __fastcall CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFStringRef name, const void *object);
CFTypeID CFNullGetTypeID(void);
CFComparisonResult __fastcall CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context);
CFNumberRef __fastcall CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
CFIndex __fastcall CFNumberGetByteSize(CFNumberRef number);
CFNumberType __fastcall CFNumberGetType(CFNumberRef number);
CFTypeID CFNumberGetTypeID(void);
Boolean __fastcall CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr);
Boolean __fastcall CFNumberIsFloatType(CFNumberRef number);
void __fastcall CFPlugInAddInstanceForFactory(CFUUIDRef factoryID);
CFPlugInRef __fastcall CFPlugInCreate(CFAllocatorRef allocator, CFURLRef plugInURL);
CFArrayRef __fastcall CFPlugInFindFactoriesForPlugInType(CFUUIDRef typeUUID);
CFArrayRef __fastcall CFPlugInFindFactoriesForPlugInTypeInPlugIn(CFUUIDRef typeUUID, CFPlugInRef plugIn);
CFBundleRef __fastcall CFPlugInGetBundle(CFPlugInRef plugIn);
UInt32 CFPlugInGetTypeID(void);
void *__fastcall CFPlugInInstanceCreate(CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID);
CFPlugInInstanceRef __fastcall CFPlugInInstanceCreateWithInstanceDataSize(CFAllocatorRef allocator, CFIndex instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction deallocateInstanceFunction, CFStringRef factoryName, CFPlugInInstanceGetInterfaceFunction getInterfaceFunction);
CFStringRef __fastcall CFPlugInInstanceGetFactoryName(CFPlugInInstanceRef instance);
void *__fastcall CFPlugInInstanceGetInstanceData(CFPlugInInstanceRef instance);
Boolean __fastcall CFPlugInInstanceGetInterfaceFunctionTable(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
UInt32 CFPlugInInstanceGetTypeID(void);
Boolean __fastcall CFPlugInIsLoadOnDemand(CFPlugInRef plugIn);
Boolean __fastcall CFPlugInRegisterFactoryFunction(CFUUIDRef factoryUUID, CFPlugInFactoryFunction func);
Boolean __fastcall CFPlugInRegisterFactoryFunctionByName(CFUUIDRef factoryUUID, CFPlugInRef plugIn, CFStringRef functionName);
Boolean __fastcall CFPlugInRegisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);
void __fastcall CFPlugInRemoveInstanceForFactory(CFUUIDRef factoryID);
void __fastcall CFPlugInSetLoadOnDemand(CFPlugInRef plugIn, Boolean flag);
Boolean __fastcall CFPlugInUnregisterFactory(CFUUIDRef factoryUUID);
Boolean __fastcall CFPlugInUnregisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);
void __fastcall CFPreferencesAddSuitePreferencesToApp(CFStringRef applicationID, CFStringRef suiteID);
Boolean __fastcall CFPreferencesAppSynchronize(CFStringRef applicationID);
Boolean __fastcall CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID);
CFPropertyListRef __fastcall CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID);
CFArrayRef __fastcall CFPreferencesCopyApplicationList(CFStringRef userName, CFStringRef hostName);
CFArrayRef __fastcall CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
CFDictionaryRef __fastcall CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
CFPropertyListRef __fastcall CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
Boolean __fastcall CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat);
CFIndex __fastcall CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat);
void __fastcall CFPreferencesRemoveSuitePreferencesFromApp(CFStringRef applicationID, CFStringRef suiteID);
void __fastcall CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID);
void __fastcall CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
void __fastcall CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
Boolean __fastcall CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);
CFPropertyListRef __fastcall CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption);
CFPropertyListRef __fastcall CFPropertyListCreateFromStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags mutabilityOption, CFPropertyListFormat *format, CFStringRef *errorString);
CFPropertyListRef __fastcall CFPropertyListCreateFromXMLData(CFAllocatorRef allocator, CFDataRef xmlData, CFOptionFlags mutabilityOption, CFStringRef *errorString);
CFDataRef __fastcall CFPropertyListCreateXMLData(CFAllocatorRef allocator, CFPropertyListRef propertyList);
Boolean __fastcall CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format);
CFIndex __fastcall CFPropertyListWriteToStream(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFStringRef *errorString);
static CFRange __fastcall CFRangeMake(CFIndex loc, CFIndex len);
void __fastcall CFReadStreamClose(CFReadStreamRef stream);
CFTypeRef __fastcall CFReadStreamCopyProperty(CFReadStreamRef stream, CFStringRef propertyName);
CFReadStreamRef __fastcall CFReadStreamCreateForHTTPRequest(CFAllocatorRef alloc, CFHTTPMessageRef request);
CFReadStreamRef __fastcall CFReadStreamCreateForStreamedHTTPRequest(CFAllocatorRef alloc, CFHTTPMessageRef requestHeaders, CFReadStreamRef requestBody);
CFReadStreamRef __fastcall CFReadStreamCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);
CFReadStreamRef __fastcall CFReadStreamCreateWithFTPURL(CFAllocatorRef alloc, CFURLRef ftpURL);
CFReadStreamRef __fastcall CFReadStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);
const UInt8 *__fastcall CFReadStreamGetBuffer(CFReadStreamRef stream, CFIndex maxBytesToRead, CFIndex *numBytesRead);
CFStreamError __fastcall CFReadStreamGetError(CFReadStreamRef stream);
CFStreamStatus __fastcall CFReadStreamGetStatus(CFReadStreamRef stream);
CFTypeID CFReadStreamGetTypeID(void);
Boolean __fastcall CFReadStreamHasBytesAvailable(CFReadStreamRef stream);
Boolean __fastcall CFReadStreamOpen(CFReadStreamRef stream);
CFIndex __fastcall CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
void __fastcall CFReadStreamScheduleWithRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);
Boolean __fastcall CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext);
Boolean __fastcall CFReadStreamSetProperty(CFReadStreamRef stream, CFStringRef propertyName, CFTypeRef propertyValue);
void __fastcall CFReadStreamUnscheduleFromRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);
void __fastcall CFRelease(CFTypeRef cf);
CFTypeRef __fastcall CFRetain(CFTypeRef cf);
void __fastcall CFRunLoopAddCommonMode(CFRunLoopRef rl, CFStringRef mode);
void __fastcall CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode);
void __fastcall CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode);
void __fastcall CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);
Boolean __fastcall CFRunLoopContainsObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode);
Boolean __fastcall CFRunLoopContainsSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode);
Boolean __fastcall CFRunLoopContainsTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);
CFArrayRef __fastcall CFRunLoopCopyAllModes(CFRunLoopRef rl);
CFStringRef __fastcall CFRunLoopCopyCurrentMode(CFRunLoopRef rl);
CFRunLoopRef CFRunLoopGetCurrent(void);
CFAbsoluteTime __fastcall CFRunLoopGetNextTimerFireDate(CFRunLoopRef rl, CFStringRef mode);
CFTypeID CFRunLoopGetTypeID(void);
Boolean __fastcall CFRunLoopIsWaiting(CFRunLoopRef rl);
CFRunLoopObserverRef __fastcall CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context);
Boolean __fastcall CFRunLoopObserverDoesRepeat(CFRunLoopObserverRef observer);
CFOptionFlags __fastcall CFRunLoopObserverGetActivities(CFRunLoopObserverRef observer);
void __fastcall CFRunLoopObserverGetContext(CFRunLoopObserverRef observer, CFRunLoopObserverContext *context);
CFIndex __fastcall CFRunLoopObserverGetOrder(CFRunLoopObserverRef observer);
CFTypeID CFRunLoopObserverGetTypeID(void);
void __fastcall CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer);
Boolean __fastcall CFRunLoopObserverIsValid(CFRunLoopObserverRef observer);
void __fastcall CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode);
void __fastcall CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode);
void __fastcall CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode);
void CFRunLoopRun(void);
SInt32 __fastcall CFRunLoopRunInMode(CFStringRef mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled);
CFRunLoopSourceRef __fastcall CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context);
void __fastcall CFRunLoopSourceGetContext(CFRunLoopSourceRef source, CFRunLoopSourceContext *context);
CFIndex __fastcall CFRunLoopSourceGetOrder(CFRunLoopSourceRef source);
CFTypeID CFRunLoopSourceGetTypeID(void);
void __fastcall CFRunLoopSourceInvalidate(CFRunLoopSourceRef source);
Boolean __fastcall CFRunLoopSourceIsValid(CFRunLoopSourceRef source);
void __fastcall CFRunLoopSourceSignal(CFRunLoopSourceRef source);
void __fastcall CFRunLoopStop(CFRunLoopRef rl);
CFRunLoopTimerRef __fastcall CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context);
Boolean __fastcall CFRunLoopTimerDoesRepeat(CFRunLoopTimerRef timer);
void __fastcall CFRunLoopTimerGetContext(CFRunLoopTimerRef timer, CFRunLoopTimerContext *context);
CFTimeInterval __fastcall CFRunLoopTimerGetInterval(CFRunLoopTimerRef timer);
CFAbsoluteTime __fastcall CFRunLoopTimerGetNextFireDate(CFRunLoopTimerRef timer);
CFIndex __fastcall CFRunLoopTimerGetOrder(CFRunLoopTimerRef timer);
CFTypeID CFRunLoopTimerGetTypeID(void);
void __fastcall CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer);
Boolean __fastcall CFRunLoopTimerIsValid(CFRunLoopTimerRef timer);
void __fastcall CFRunLoopTimerSetNextFireDate(CFRunLoopTimerRef timer, CFAbsoluteTime fireDate);
void __fastcall CFRunLoopWakeUp(CFRunLoopRef rl);
void __fastcall CFSetAddValue(CFMutableSetRef theSet, const void *value);
void __fastcall CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction applier, void *context);
Boolean __fastcall CFSetContainsValue(CFSetRef theSet, const void *value);
CFSetRef __fastcall CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks);
CFSetRef __fastcall CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet);
CFMutableSetRef __fastcall CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks);
CFMutableSetRef __fastcall CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet);
CFIndex __fastcall CFSetGetCount(CFSetRef theSet);
CFIndex __fastcall CFSetGetCountOfValue(CFSetRef theSet, const void *value);
CFTypeID CFSetGetTypeID(void);
const void *__fastcall CFSetGetValue(CFSetRef theSet, const void *value);
Boolean __fastcall CFSetGetValueIfPresent(CFSetRef theSet, const void *candidate, const void **value);
void __fastcall CFSetGetValues(CFSetRef theSet, const void **values);
void __fastcall CFSetRemoveAllValues(CFMutableSetRef theSet);
void __fastcall CFSetRemoveValue(CFMutableSetRef theSet, const void *value);
void __fastcall CFSetReplaceValue(CFMutableSetRef theSet, const void *value);
void __fastcall CFSetSetValue(CFMutableSetRef theSet, const void *value);
void __fastcall CFShow(CFTypeRef obj);
void __fastcall CFShowStr(CFStringRef str);
CFSocketError __fastcall CFSocketConnectToAddress(CFSocketRef s, CFDataRef address, CFTimeInterval timeout);
CFDataRef __fastcall CFSocketCopyAddress(CFSocketRef s);
CFDataRef __fastcall CFSocketCopyPeerAddress(CFSocketRef s);
CFSocketError __fastcall CFSocketCopyRegisteredSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFSocketSignature *signature, CFDataRef *nameServerAddress);
CFSocketError __fastcall CFSocketCopyRegisteredValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef *value, CFDataRef *nameServerAddress);
CFSocketRef __fastcall CFSocketCreate(CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
CFSocketRef __fastcall CFSocketCreateConnectedToSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context, CFTimeInterval timeout);
CFRunLoopSourceRef __fastcall CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order);
CFSocketRef __fastcall CFSocketCreateWithNative(CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
CFSocketRef __fastcall CFSocketCreateWithSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
void __fastcall CFSocketDisableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);
void __fastcall CFSocketEnableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);
void __fastcall CFSocketGetContext(CFSocketRef s, CFSocketContext *context);
UInt16 CFSocketGetDefaultNameRegistryPortNumber(void);
CFSocketNativeHandle __fastcall CFSocketGetNative(CFSocketRef s);
CFOptionFlags __fastcall CFSocketGetSocketFlags(CFSocketRef s);
CFTypeID CFSocketGetTypeID(void);
void __fastcall CFSocketInvalidate(CFSocketRef s);
Boolean __fastcall CFSocketIsValid(CFSocketRef s);
CFSocketError __fastcall CFSocketRegisterSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, const CFSocketSignature *signature);
CFSocketError __fastcall CFSocketRegisterValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef value);
CFSocketError __fastcall CFSocketSendData(CFSocketRef s, CFDataRef address, CFDataRef data, CFTimeInterval timeout);
CFSocketError __fastcall CFSocketSetAddress(CFSocketRef s, CFDataRef address);
void __fastcall CFSocketSetDefaultNameRegistryPortNumber(UInt16 port);
void __fastcall CFSocketSetSocketFlags(CFSocketRef s, CFOptionFlags flags);
Boolean __fastcall CFSocketStreamPairSetSecurityProtocol(CFReadStreamRef socketReadStream, CFWriteStreamRef socketWriteStream, CFStreamSocketSecurityProtocol securityProtocol);
static SInt32 __fastcall CFSocketStreamSOCKSGetError(CFStreamError *error);
static SInt32 __fastcall CFSocketStreamSOCKSGetErrorSubdomain(CFStreamError *error);
CFSocketError __fastcall CFSocketUnregister(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name);
void __fastcall CFStreamCreatePairWithPeerSocketSignature(CFAllocatorRef alloc, const CFSocketSignature *signature, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
void __fastcall CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
void __fastcall CFStreamCreatePairWithSocketToCFHost(CFAllocatorRef alloc, CFHostRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
void __fastcall CFStreamCreatePairWithSocketToHost(CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
void __fastcall CFStreamCreatePairWithSocketToNetService(CFAllocatorRef alloc, CFNetServiceRef service, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
void __fastcall CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString);
void __fastcall CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding);
void __fastcall CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars);
void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...);
void __fastcall CFStringAppendFormatAndArguments(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments);
void __fastcall CFStringAppendPascalString(CFMutableStringRef theString, ConstStr255Param pStr, CFStringEncoding encoding);
void __fastcall CFStringCapitalize(CFMutableStringRef theString, const void *localeTBD);
CFComparisonResult __fastcall CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFOptionFlags compareOptions);
CFComparisonResult __fastcall CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFOptionFlags compareOptions);
CFStringRef __fastcall CFStringConvertEncodingToIANACharSetName(CFStringEncoding encoding);
UInt32 __fastcall CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding);
UInt32 __fastcall CFStringConvertEncodingToWindowsCodepage(CFStringEncoding encoding);
CFStringEncoding __fastcall CFStringConvertIANACharSetNameToEncoding(CFStringRef theString);
CFStringEncoding __fastcall CFStringConvertNSStringEncodingToEncoding(UInt32 encoding);
CFStringEncoding __fastcall CFStringConvertWindowsCodepageToEncoding(UInt32 codepage);
CFArrayRef __fastcall CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString);
CFArrayRef __fastcall CFStringCreateArrayWithFindResults(CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFOptionFlags compareOptions);
CFStringRef __fastcall CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString);
CFStringRef __fastcall CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString);
CFDataRef __fastcall CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte);
CFStringRef __fastcall CFStringCreateFromExternalRepresentation(CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding);
CFMutableStringRef __fastcall CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);
CFMutableStringRef __fastcall CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString);
CFMutableStringRef __fastcall CFStringCreateMutableWithExternalCharactersNoCopy(CFAllocatorRef alloc, UniChar *chars, CFIndex numChars, CFIndex capacity, CFAllocatorRef externalCharactersAllocator);
CFStringRef __fastcall CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
CFStringRef __fastcall CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
CFStringRef __fastcall CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);
CFStringRef __fastcall CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars);
CFStringRef __fastcall CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator);
CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...);
CFStringRef __fastcall CFStringCreateWithFormatAndArguments(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments);
CFStringRef __fastcall CFStringCreateWithPascalString(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding);
CFStringRef __fastcall CFStringCreateWithPascalStringNoCopy(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);
CFStringRef __fastcall CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range);
void __fastcall CFStringDelete(CFMutableStringRef theString, CFRange range);
CFRange __fastcall CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFOptionFlags compareOptions);
CFIndex __fastcall CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFOptionFlags compareOptions);
Boolean __fastcall CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFOptionFlags searchOptions, CFRange *result);
Boolean __fastcall CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFOptionFlags searchOptions, CFRange *result);
CFIndex __fastcall CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen);
Boolean __fastcall CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding);
const char *__fastcall CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding);
UniChar __fastcall CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx);
static UniChar __fastcall CFStringGetCharacterFromInlineBuffer(CFStringInlineBuffer *buf, CFIndex idx);
void __fastcall CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer);
const UniChar *__fastcall CFStringGetCharactersPtr(CFStringRef theString);
double __fastcall CFStringGetDoubleValue(CFStringRef str);
CFStringEncoding __fastcall CFStringGetFastestEncoding(CFStringRef theString);
SInt32 __fastcall CFStringGetIntValue(CFStringRef str);
CFIndex __fastcall CFStringGetLength(CFStringRef theString);
void __fastcall CFStringGetLineBounds(CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex);
const CFStringEncoding *CFStringGetListOfAvailableEncodings(void);
CFIndex __fastcall CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding);
CFStringEncoding __fastcall CFStringGetMostCompatibleMacStringEncoding(CFStringEncoding encoding);
CFStringRef __fastcall CFStringGetNameOfEncoding(CFStringEncoding encoding);
Boolean __fastcall CFStringGetPascalString(CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding);
ConstStringPtr __fastcall CFStringGetPascalStringPtr(CFStringRef theString, CFStringEncoding encoding);
CFRange __fastcall CFStringGetRangeOfComposedCharactersAtIndex(CFStringRef theString, CFIndex theIndex);
CFStringEncoding __fastcall CFStringGetSmallestEncoding(CFStringRef theString);
CFStringEncoding CFStringGetSystemEncoding(void);
CFTypeID CFStringGetTypeID(void);
Boolean __fastcall CFStringHasPrefix(CFStringRef theString, CFStringRef prefix);
Boolean __fastcall CFStringHasSuffix(CFStringRef theString, CFStringRef suffix);
static void __fastcall CFStringInitInlineBuffer(CFStringRef str, CFStringInlineBuffer *buf, CFRange range);
void __fastcall CFStringInsert(CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr);
Boolean __fastcall CFStringIsEncodingAvailable(CFStringEncoding encoding);
void __fastcall CFStringLowercase(CFMutableStringRef theString, const void *localeTBD);
void __fastcall CFStringNormalize(CFMutableStringRef theString, CFStringNormalizationForm theForm);
void __fastcall CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad);
void __fastcall CFStringReplace(CFMutableStringRef theString, CFRange range, CFStringRef replacement);
void __fastcall CFStringReplaceAll(CFMutableStringRef theString, CFStringRef replacement);
void __fastcall CFStringSetExternalCharactersNoCopy(CFMutableStringRef theString, UniChar *chars, CFIndex length, CFIndex capacity);
void __fastcall CFStringTrim(CFMutableStringRef theString, CFStringRef trimString);
void __fastcall CFStringTrimWhitespace(CFMutableStringRef theString);
void __fastcall CFStringUppercase(CFMutableStringRef theString, const void *localeTBD);
static uint16_t __fastcall CFSwapInt16(uint16_t arg);
static uint16_t __fastcall CFSwapInt16BigToHost(uint16_t arg);
static uint16_t __fastcall CFSwapInt16HostToBig(uint16_t arg);
static uint16_t __fastcall CFSwapInt16HostToLittle(uint16_t arg);
static uint16_t __fastcall CFSwapInt16LittleToHost(uint16_t arg);
static uint32_t __fastcall CFSwapInt32(uint32_t arg);
static uint32_t __fastcall CFSwapInt32BigToHost(uint32_t arg);
static uint32_t __fastcall CFSwapInt32HostToBig(uint32_t arg);
static uint32_t __fastcall CFSwapInt32HostToLittle(uint32_t arg);
static uint32_t __fastcall CFSwapInt32LittleToHost(uint32_t arg);
static uint64_t __fastcall CFSwapInt64(uint64_t arg);
static uint64_t __fastcall CFSwapInt64BigToHost(uint64_t arg);
static uint64_t __fastcall CFSwapInt64HostToBig(uint64_t arg);
static uint64_t __fastcall CFSwapInt64HostToLittle(uint64_t arg);
static uint64_t __fastcall CFSwapInt64LittleToHost(uint64_t arg);
CFStringRef __fastcall CFTimeZoneCopyAbbreviation(CFTimeZoneRef tz, CFAbsoluteTime at);
CFDictionaryRef CFTimeZoneCopyAbbreviationDictionary(void);
CFTimeZoneRef CFTimeZoneCopyDefault(void);
CFArrayRef CFTimeZoneCopyKnownNames(void);
CFTimeZoneRef CFTimeZoneCopySystem(void);
CFTimeZoneRef __fastcall CFTimeZoneCreate(CFAllocatorRef allocator, CFStringRef name, CFDataRef data);
CFTimeZoneRef __fastcall CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev);
CFTimeZoneRef __fastcall CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti);
CFDataRef __fastcall CFTimeZoneGetData(CFTimeZoneRef tz);
CFStringRef __fastcall CFTimeZoneGetName(CFTimeZoneRef tz);
CFTimeInterval __fastcall CFTimeZoneGetSecondsFromGMT(CFTimeZoneRef tz, CFAbsoluteTime at);
CFTypeID CFTimeZoneGetTypeID(void);
Boolean __fastcall CFTimeZoneIsDaylightSavingTime(CFTimeZoneRef tz, CFAbsoluteTime at);
void CFTimeZoneResetSystem(void);
void __fastcall CFTimeZoneSetAbbreviationDictionary(CFDictionaryRef dict);
void __fastcall CFTimeZoneSetDefault(CFTimeZoneRef tz);
void __fastcall CFTreeAppendChild(CFTreeRef tree, CFTreeRef newChild);
void __fastcall CFTreeApplyFunctionToChildren(CFTreeRef tree, CFTreeApplierFunction applier, void *context);
CFTreeRef __fastcall CFTreeCreate(CFAllocatorRef allocator, const CFTreeContext *context);
CFTreeRef __fastcall CFTreeFindRoot(CFTreeRef tree);
CFTreeRef __fastcall CFTreeGetChildAtIndex(CFTreeRef tree, CFIndex idx);
CFIndex __fastcall CFTreeGetChildCount(CFTreeRef tree);
void __fastcall CFTreeGetChildren(CFTreeRef tree, CFTreeRef *children);
void __fastcall CFTreeGetContext(CFTreeRef tree, CFTreeContext *context);
CFTreeRef __fastcall CFTreeGetFirstChild(CFTreeRef tree);
CFTreeRef __fastcall CFTreeGetNextSibling(CFTreeRef tree);
CFTreeRef __fastcall CFTreeGetParent(CFTreeRef tree);
CFTypeID CFTreeGetTypeID(void);
void __fastcall CFTreeInsertSibling(CFTreeRef tree, CFTreeRef newSibling);
void __fastcall CFTreePrependChild(CFTreeRef tree, CFTreeRef newChild);
void __fastcall CFTreeRemove(CFTreeRef tree);
void __fastcall CFTreeRemoveAllChildren(CFTreeRef tree);
void __fastcall CFTreeSetContext(CFTreeRef tree, const CFTreeContext *context);
void __fastcall CFTreeSortChildren(CFTreeRef tree, CFComparatorFunction comparator, void *context);
Boolean __fastcall CFURLCanBeDecomposed(CFURLRef anURL);
CFURLRef __fastcall CFURLCopyAbsoluteURL(CFURLRef relativeURL);
CFStringRef __fastcall CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle);
CFStringRef __fastcall CFURLCopyFragment(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);
CFStringRef __fastcall CFURLCopyHostName(CFURLRef anURL);
CFStringRef __fastcall CFURLCopyLastPathComponent(CFURLRef url);
CFStringRef __fastcall CFURLCopyNetLocation(CFURLRef anURL);
CFStringRef __fastcall CFURLCopyParameterString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);
CFStringRef __fastcall CFURLCopyPassword(CFURLRef anURL);
CFStringRef __fastcall CFURLCopyPath(CFURLRef anURL);
CFStringRef __fastcall CFURLCopyPathExtension(CFURLRef url);
CFStringRef __fastcall CFURLCopyQueryString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);
CFStringRef __fastcall CFURLCopyResourceSpecifier(CFURLRef anURL);
CFStringRef __fastcall CFURLCopyScheme(CFURLRef anURL);
CFStringRef __fastcall CFURLCopyStrictPath(CFURLRef anURL, Boolean *isAbsolute);
CFStringRef __fastcall CFURLCopyUserName(CFURLRef anURL);
CFURLRef __fastcall CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
CFURLRef __fastcall CFURLCreateCopyAppendingPathExtension(CFAllocatorRef allocator, CFURLRef url, CFStringRef extension);
CFURLRef __fastcall CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url);
CFURLRef __fastcall CFURLCreateCopyDeletingPathExtension(CFAllocatorRef allocator, CFURLRef url);
CFDataRef __fastcall CFURLCreateData(CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace);
Boolean __fastcall CFURLCreateDataAndPropertiesFromResource(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode);
CFURLRef __fastcall CFURLCreateFromFSRef(CFAllocatorRef allocator, const struct FSRef *fsRef);
CFURLRef __fastcall CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);
CFURLRef __fastcall CFURLCreateFromFileSystemRepresentationRelativeToBase(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL);
CFTypeRef __fastcall CFURLCreatePropertyFromResource(CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode);
CFStringRef __fastcall CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding);
CFStringRef __fastcall CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped);
CFURLRef __fastcall CFURLCreateWithBytes(CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL);
CFURLRef __fastcall CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory);
CFURLRef __fastcall CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
CFURLRef __fastcall CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL);
Boolean __fastcall CFURLDestroyResource(CFURLRef url, SInt32 *errorCode);
CFURLRef __fastcall CFURLGetBaseURL(CFURLRef anURL);
Boolean __fastcall CFURLGetFSRef(CFURLRef url, struct FSRef *fsRef);
Boolean __fastcall CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen);
SInt32 __fastcall CFURLGetPortNumber(CFURLRef anURL);
CFStringRef __fastcall CFURLGetString(CFURLRef anURL);
CFTypeID CFURLGetTypeID(void);
Boolean __fastcall CFURLHasDirectoryPath(CFURLRef anURL);
Boolean __fastcall CFURLWriteDataAndPropertiesToResource(CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode);
CFUUIDRef __fastcall CFUUIDCreate(CFAllocatorRef alloc);
CFUUIDRef __fastcall CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr);
CFUUIDRef __fastcall CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes);
CFStringRef __fastcall CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid);
CFUUIDRef __fastcall CFUUIDCreateWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);
CFUUIDRef __fastcall CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);
CFTypeID CFUUIDGetTypeID(void);
CFUUIDBytes __fastcall CFUUIDGetUUIDBytes(CFUUIDRef uuid);
SInt32 __fastcall CFUserNotificationCancel(CFUserNotificationRef userNotification);
static CFOptionFlags __fastcall CFUserNotificationCheckBoxChecked(CFIndex i);
CFUserNotificationRef __fastcall CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary);
CFRunLoopSourceRef __fastcall CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order);
SInt32 __fastcall CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags);
SInt32 __fastcall CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle);
CFDictionaryRef __fastcall CFUserNotificationGetResponseDictionary(CFUserNotificationRef userNotification);
CFStringRef __fastcall CFUserNotificationGetResponseValue(CFUserNotificationRef userNotification, CFStringRef key, CFIndex idx);
CFTypeID CFUserNotificationGetTypeID(void);
static CFOptionFlags __fastcall CFUserNotificationPopUpSelection(CFIndex n);
SInt32 __fastcall CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags);
static CFOptionFlags __fastcall CFUserNotificationSecureTextField(CFIndex i);
SInt32 __fastcall CFUserNotificationUpdate(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags flags, CFDictionaryRef dictionary);
Boolean __fastcall CFWriteStreamCanAcceptBytes(CFWriteStreamRef stream);
void __fastcall CFWriteStreamClose(CFWriteStreamRef stream);
CFTypeRef __fastcall CFWriteStreamCopyProperty(CFWriteStreamRef stream, CFStringRef propertyName);
CFWriteStreamRef __fastcall CFWriteStreamCreateWithAllocatedBuffers(CFAllocatorRef alloc, CFAllocatorRef bufferAllocator);
CFWriteStreamRef __fastcall CFWriteStreamCreateWithBuffer(CFAllocatorRef alloc, UInt8 *buffer, CFIndex bufferCapacity);
CFWriteStreamRef __fastcall CFWriteStreamCreateWithFTPURL(CFAllocatorRef alloc, CFURLRef ftpURL);
CFWriteStreamRef __fastcall CFWriteStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);
CFStreamError __fastcall CFWriteStreamGetError(CFWriteStreamRef stream);
CFStreamStatus __fastcall CFWriteStreamGetStatus(CFWriteStreamRef stream);
CFTypeID CFWriteStreamGetTypeID(void);
Boolean __fastcall CFWriteStreamOpen(CFWriteStreamRef stream);
void __fastcall CFWriteStreamScheduleWithRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);
Boolean __fastcall CFWriteStreamSetClient(CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext);
Boolean __fastcall CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStringRef propertyName, CFTypeRef propertyValue);
void __fastcall CFWriteStreamUnscheduleFromRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFStringRef runLoopMode);
CFIndex __fastcall CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength);
CFXMLNodeRef __fastcall CFXMLNodeCreate(CFAllocatorRef alloc, CFXMLNodeTypeCode xmlType, CFStringRef dataString, const void *additionalInfoPtr, CFIndex version);
CFXMLNodeRef __fastcall CFXMLNodeCreateCopy(CFAllocatorRef alloc, CFXMLNodeRef origNode);
const void *__fastcall CFXMLNodeGetInfoPtr(CFXMLNodeRef node);
CFStringRef __fastcall CFXMLNodeGetString(CFXMLNodeRef node);
CFXMLNodeTypeCode __fastcall CFXMLNodeGetTypeCode(CFXMLNodeRef node);
CFTypeID CFXMLNodeGetTypeID(void);
CFIndex __fastcall CFXMLNodeGetVersion(CFXMLNodeRef node);
void __fastcall CFXMLParserAbort(CFXMLParserRef parser, CFXMLParserStatusCode errorCode, CFStringRef errorDescription);
CFStringRef __fastcall CFXMLParserCopyErrorDescription(CFXMLParserRef parser);
CFXMLParserRef __fastcall CFXMLParserCreate(CFAllocatorRef allocator, CFDataRef xmlData, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes, CFXMLParserCallBacks *callBacks, CFXMLParserContext *context);
CFXMLParserRef __fastcall CFXMLParserCreateWithDataFromURL(CFAllocatorRef allocator, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes, CFXMLParserCallBacks *callBacks, CFXMLParserContext *context);
void __fastcall CFXMLParserGetCallBacks(CFXMLParserRef parser, CFXMLParserCallBacks *callBacks);
void __fastcall CFXMLParserGetContext(CFXMLParserRef parser, CFXMLParserContext *context);
void *__fastcall CFXMLParserGetDocument(CFXMLParserRef parser);
CFIndex __fastcall CFXMLParserGetLineNumber(CFXMLParserRef parser);
CFIndex __fastcall CFXMLParserGetLocation(CFXMLParserRef parser);
CFURLRef __fastcall CFXMLParserGetSourceURL(CFXMLParserRef parser);
CFXMLParserStatusCode __fastcall CFXMLParserGetStatusCode(CFXMLParserRef parser);
CFTypeID CFXMLParserGetTypeID(void);
Boolean __fastcall CFXMLParserParse(CFXMLParserRef parser);
CFXMLTreeRef __fastcall CFXMLTreeCreateFromData(CFAllocatorRef allocator, CFDataRef xmlData, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes);
CFXMLTreeRef __fastcall CFXMLTreeCreateWithDataFromURL(CFAllocatorRef allocator, CFURLRef dataSource, CFOptionFlags parseOptions, CFIndex versionOfNodes);
CFXMLTreeRef __fastcall CFXMLTreeCreateWithNode(CFAllocatorRef allocator, CFXMLNodeRef node);
CFDataRef __fastcall CFXMLTreeCreateXMLData(CFAllocatorRef allocator, CFXMLTreeRef xmlTree);
CFXMLNodeRef __fastcall CFXMLTreeGetNode(CFXMLTreeRef xmlTree);
CGError __fastcall CGAcquireDisplayFadeReservation(CGDisplayReservationInterval seconds, CGDisplayFadeReservationToken *pNewToken);
CGAffineTransform __fastcall CGAffineTransformConcat(CGAffineTransform t1, CGAffineTransform t2);
const CGAffineTransform CGAffineTransformIdentity;
CGAffineTransform __fastcall CGAffineTransformInvert(CGAffineTransform t);
CGAffineTransform __fastcall CGAffineTransformMake(float a, float b, float c, float d, float tx, float ty);
CGAffineTransform __fastcall CGAffineTransformMakeRotation(float angle);
CGAffineTransform __fastcall CGAffineTransformMakeScale(float sx, float sy);
CGAffineTransform __fastcall CGAffineTransformMakeTranslation(float tx, float ty);
CGAffineTransform __fastcall CGAffineTransformRotate(CGAffineTransform t, float angle);
CGAffineTransform __fastcall CGAffineTransformScale(CGAffineTransform t, float sx, float sy);
CGAffineTransform __fastcall CGAffineTransformTranslate(CGAffineTransform t, float tx, float ty);
CGEventErr __fastcall CGAssociateMouseAndMouseCursorPosition(boolean_t connected);
CGError __fastcall CGBeginDisplayConfiguration(CGDisplayConfigRef *pConfigRef);
CGContextRef __fastcall CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef colorspace, CGImageAlphaInfo alphaInfo);
CGImageAlphaInfo __fastcall CGBitmapContextGetAlphaInfo(CGContextRef c);
size_t __fastcall CGBitmapContextGetBitsPerComponent(CGContextRef c);
size_t __fastcall CGBitmapContextGetBitsPerPixel(CGContextRef c);
size_t __fastcall CGBitmapContextGetBytesPerRow(CGContextRef c);
CGColorSpaceRef __fastcall CGBitmapContextGetColorSpace(CGContextRef c);
void *__fastcall CGBitmapContextGetData(CGContextRef c);
size_t __fastcall CGBitmapContextGetHeight(CGContextRef c);
size_t __fastcall CGBitmapContextGetWidth(CGContextRef c);
CGError __fastcall CGCancelDisplayConfiguration(CGDisplayConfigRef configRef);
CGDisplayErr CGCaptureAllDisplays(void);
CGColorSpaceRef __fastcall CGColorSpaceCreateCalibratedGray(const float whitePoint[3], const float blackPoint[3], float gamma);
CGColorSpaceRef __fastcall CGColorSpaceCreateCalibratedRGB(const float whitePoint[3], const float blackPoint[3], const float gamma[3], const float matrix[9]);
CGColorSpaceRef CGColorSpaceCreateDeviceCMYK(void);
CGColorSpaceRef CGColorSpaceCreateDeviceGray(void);
CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void);
CGColorSpaceRef __fastcall CGColorSpaceCreateICCBased(size_t nComponents, const float *range, CGDataProviderRef profile, CGColorSpaceRef alternate);
CGColorSpaceRef __fastcall CGColorSpaceCreateIndexed(CGColorSpaceRef baseSpace, size_t lastIndex, const unsigned __int8 *colorTable);
CGColorSpaceRef __fastcall CGColorSpaceCreateLab(const float whitePoint[3], const float blackPoint[3], const float range[4]);
CGColorSpaceRef __fastcall CGColorSpaceCreatePattern(CGColorSpaceRef baseSpace);
CGColorSpaceRef __fastcall CGColorSpaceCreateWithName(CFStringRef name);
CGColorSpaceRef __fastcall CGColorSpaceCreateWithPlatformColorSpace(void *platformColorSpaceReference);
size_t __fastcall CGColorSpaceGetNumberOfComponents(const CGColorSpaceRef cs);
CFTypeID CGColorSpaceGetTypeID(void);
void __fastcall CGColorSpaceRelease(CGColorSpaceRef cs);
CGColorSpaceRef __fastcall CGColorSpaceRetain(CGColorSpaceRef cs);
CGError __fastcall CGCompleteDisplayConfiguration(CGDisplayConfigRef configRef, CGConfigureOption option);
CGError __fastcall CGConfigureDisplayFadeEffect(CGDisplayConfigRef configRef, CGDisplayFadeInterval fadeOutSeconds, CGDisplayFadeInterval fadeInSeconds, float fadeRed, float fadeGreen, float fadeBlue);
CGError __fastcall CGConfigureDisplayMirrorOfDisplay(CGDisplayConfigRef configRef, CGDirectDisplayID display, CGDirectDisplayID masterDisplay);
CGError __fastcall CGConfigureDisplayMode(CGDisplayConfigRef configRef, CGDirectDisplayID display, CFDictionaryRef mode);
CGError __fastcall CGConfigureDisplayOrigin(CGDisplayConfigRef configRef, CGDirectDisplayID display, CGDisplayCoord x, CGDisplayCoord y);
void __fastcall CGContextAddArc(CGContextRef c, float x, float y, float radius, float startAngle, float endAngle, int clockwise);
void __fastcall CGContextAddArcToPoint(CGContextRef c, float x1, float y1, float x2, float y2, float radius);
void __fastcall CGContextAddCurveToPoint(CGContextRef c, float cp1x, float cp1y, float cp2x, float cp2y, float x, float y);
void __fastcall CGContextAddLineToPoint(CGContextRef c, float x, float y);
void __fastcall CGContextAddLines(CGContextRef c, const CGPoint points[], size_t count);
void __fastcall CGContextAddPath(CGContextRef context, CGPathRef path);
void __fastcall CGContextAddQuadCurveToPoint(CGContextRef c, float cpx, float cpy, float x, float y);
void __fastcall CGContextAddRect(CGContextRef c, CGRect rect);
void __fastcall CGContextAddRects(CGContextRef c, const CGRect rects[], size_t count);
void __fastcall CGContextBeginPage(CGContextRef c, const CGRect *mediaBox);
void __fastcall CGContextBeginPath(CGContextRef c);
void __fastcall CGContextClearRect(CGContextRef c, CGRect rect);
void __fastcall CGContextClip(CGContextRef c);
void __fastcall CGContextClipToRect(CGContextRef c, CGRect rect);
void __fastcall CGContextClipToRects(CGContextRef c, const CGRect rects[], size_t count);
void __fastcall CGContextClosePath(CGContextRef c);
void __fastcall CGContextConcatCTM(CGContextRef c, CGAffineTransform transform);
void __fastcall CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image);
void __fastcall CGContextDrawPDFDocument(CGContextRef c, CGRect rect, CGPDFDocumentRef document, int page);
void __fastcall CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode);
void __fastcall CGContextDrawShading(CGContextRef c, CGShadingRef shading);
void __fastcall CGContextEOClip(CGContextRef c);
void __fastcall CGContextEOFillPath(CGContextRef c);
void __fastcall CGContextEndPage(CGContextRef c);
void __fastcall CGContextFillPath(CGContextRef c);
void __fastcall CGContextFillRect(CGContextRef c, CGRect rect);
void __fastcall CGContextFillRects(CGContextRef c, const CGRect rects[], size_t count);
void __fastcall CGContextFlush(CGContextRef c);
CGAffineTransform __fastcall CGContextGetCTM(CGContextRef c);
CGInterpolationQuality __fastcall CGContextGetInterpolationQuality(CGContextRef c);
CGRect __fastcall CGContextGetPathBoundingBox(CGContextRef c);
CGPoint __fastcall CGContextGetPathCurrentPoint(CGContextRef c);
CGAffineTransform __fastcall CGContextGetTextMatrix(CGContextRef c);
CGPoint __fastcall CGContextGetTextPosition(CGContextRef c);
CFTypeID CGContextGetTypeID(void);
int __fastcall CGContextIsPathEmpty(CGContextRef c);
void __fastcall CGContextMoveToPoint(CGContextRef c, float x, float y);
void __fastcall CGContextRelease(CGContextRef c);
void __fastcall CGContextRestoreGState(CGContextRef c);
CGContextRef __fastcall CGContextRetain(CGContextRef c);
void __fastcall CGContextRotateCTM(CGContextRef c, float angle);
void __fastcall CGContextSaveGState(CGContextRef c);
void __fastcall CGContextScaleCTM(CGContextRef c, float sx, float sy);
void __fastcall CGContextSelectFont(CGContextRef c, const char *name, float size, CGTextEncoding textEncoding);
void __fastcall CGContextSetAlpha(CGContextRef c, float alpha);
void __fastcall CGContextSetCMYKFillColor(CGContextRef c, float cyan, float magenta, float yellow, float black, float alpha);
void __fastcall CGContextSetCMYKStrokeColor(CGContextRef c, float cyan, float magenta, float yellow, float black, float alpha);
void __fastcall CGContextSetCharacterSpacing(CGContextRef c, float spacing);
void __fastcall CGContextSetFillColor(CGContextRef c, const float components[]);
void __fastcall CGContextSetFillColorSpace(CGContextRef c, CGColorSpaceRef colorspace);
void __fastcall CGContextSetFillPattern(CGContextRef c, CGPatternRef pattern, const float components[]);
void __fastcall CGContextSetFlatness(CGContextRef c, float flatness);
void __fastcall CGContextSetFont(CGContextRef c, CGFontRef font);
void __fastcall CGContextSetFontSize(CGContextRef c, float size);
void __fastcall CGContextSetGrayFillColor(CGContextRef c, float gray, float alpha);
void __fastcall CGContextSetGrayStrokeColor(CGContextRef c, float gray, float alpha);
void __fastcall CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality);
void __fastcall CGContextSetLineCap(CGContextRef c, CGLineCap cap);
void __fastcall CGContextSetLineDash(CGContextRef c, float phase, const float lengths[], size_t count);
void __fastcall CGContextSetLineJoin(CGContextRef c, CGLineJoin join);
void __fastcall CGContextSetLineWidth(CGContextRef c, float width);
void __fastcall CGContextSetMiterLimit(CGContextRef c, float limit);
void __fastcall CGContextSetPatternPhase(CGContextRef c, CGSize phase);
void __fastcall CGContextSetRGBFillColor(CGContextRef c, float red, float green, float blue, float alpha);
void __fastcall CGContextSetRGBStrokeColor(CGContextRef c, float red, float green, float blue, float alpha);
void __fastcall CGContextSetRenderingIntent(CGContextRef c, CGColorRenderingIntent intent);
void __fastcall CGContextSetShouldAntialias(CGContextRef c, bool shouldAntialias);
void __fastcall CGContextSetShouldSmoothFonts(CGContextRef c, bool shouldSmoothFonts);
void __fastcall CGContextSetStrokeColor(CGContextRef c, const float components[]);
void __fastcall CGContextSetStrokeColorSpace(CGContextRef c, CGColorSpaceRef colorspace);
void __fastcall CGContextSetStrokePattern(CGContextRef c, CGPatternRef pattern, const float components[]);
void __fastcall CGContextSetTextDrawingMode(CGContextRef c, CGTextDrawingMode mode);
void __fastcall CGContextSetTextMatrix(CGContextRef c, CGAffineTransform t);
void __fastcall CGContextSetTextPosition(CGContextRef c, float x, float y);
void __fastcall CGContextShowGlyphs(CGContextRef c, const CGGlyph g[], size_t count);
void __fastcall CGContextShowGlyphsAtPoint(CGContextRef c, float x, float y, const CGGlyph glyphs[], size_t count);
void __fastcall CGContextShowText(CGContextRef c, const char *string, size_t length);
void __fastcall CGContextShowTextAtPoint(CGContextRef c, float x, float y, const char *string, size_t length);
void __fastcall CGContextStrokePath(CGContextRef c);
void __fastcall CGContextStrokeRect(CGContextRef c, CGRect rect);
void __fastcall CGContextStrokeRectWithWidth(CGContextRef c, CGRect rect, float width);
void __fastcall CGContextSynchronize(CGContextRef c);
void __fastcall CGContextTranslateCTM(CGContextRef c, float tx, float ty);
CGDataConsumerRef __fastcall CGDataConsumerCreate(void *info, const CGDataConsumerCallbacks *callbacks);
CGDataConsumerRef __fastcall CGDataConsumerCreateWithURL(CFURLRef url);
CFTypeID CGDataConsumerGetTypeID(void);
void __fastcall CGDataConsumerRelease(CGDataConsumerRef consumer);
CGDataConsumerRef __fastcall CGDataConsumerRetain(CGDataConsumerRef consumer);
CGDataProviderRef __fastcall CGDataProviderCreate(void *info, const CGDataProviderCallbacks *callbacks);
CGDataProviderRef __fastcall CGDataProviderCreateDirectAccess(void *info, size_t size, const CGDataProviderDirectAccessCallbacks *callbacks);
CGDataProviderRef __fastcall CGDataProviderCreateWithData(void *info, const void *data, size_t size, void (__fastcall *releaseData)(void *info, const void *data, size_t size));
CGDataProviderRef __fastcall CGDataProviderCreateWithFilename(const char *filename);
CGDataProviderRef __fastcall CGDataProviderCreateWithURL(CFURLRef url);
CFTypeID CGDataProviderGetTypeID(void);
void __fastcall CGDataProviderRelease(CGDataProviderRef provider);
CGDataProviderRef __fastcall CGDataProviderRetain(CGDataProviderRef provider);
void *__fastcall CGDisplayAddressForPosition(CGDirectDisplayID display, CGDisplayCoord x, CGDisplayCoord y);
CFArrayRef __fastcall CGDisplayAvailableModes(CGDirectDisplayID display);
void *__fastcall CGDisplayBaseAddress(CGDirectDisplayID display);
CGBeamPosition __fastcall CGDisplayBeamPosition(CGDirectDisplayID display);
CFDictionaryRef __fastcall CGDisplayBestModeForParameters(CGDirectDisplayID display, size_t bitsPerPixel, size_t width, size_t height, boolean_t *exactMatch);
CFDictionaryRef __fastcall CGDisplayBestModeForParametersAndRefreshRate(CGDirectDisplayID display, size_t bitsPerPixel, size_t width, size_t height, CGRefreshRate refresh, boolean_t *exactMatch);
CFDictionaryRef __fastcall CGDisplayBestModeForParametersAndRefreshRateWithProperty(CGDirectDisplayID display, size_t bitsPerPixel, size_t width, size_t height, CGRefreshRate refresh, CFStringRef property, boolean_t *exactMatch);
size_t __fastcall CGDisplayBitsPerPixel(CGDirectDisplayID display);
size_t __fastcall CGDisplayBitsPerSample(CGDirectDisplayID display);
CGRect __fastcall CGDisplayBounds(CGDirectDisplayID display);
size_t __fastcall CGDisplayBytesPerRow(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayCanSetPalette(CGDirectDisplayID display);
CGDisplayErr __fastcall CGDisplayCapture(CGDirectDisplayID display);
CFDictionaryRef __fastcall CGDisplayCurrentMode(CGDirectDisplayID display);
CGError __fastcall CGDisplayFade(CGDisplayFadeReservationToken myToken, CGDisplayFadeInterval seconds, CGDisplayBlendFraction startBlend, CGDisplayBlendFraction endBlend, float redBlend, float greenBlend, float blueBlend, boolean_t synchronous);
boolean_t CGDisplayFadeOperationInProgress(void);
CGDisplayErr __fastcall CGDisplayHideCursor(CGDirectDisplayID display);
CGOpenGLDisplayMask __fastcall CGDisplayIDToOpenGLDisplayMask(CGDirectDisplayID display);
io_service_t __fastcall CGDisplayIOServicePort(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsActive(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsAlwaysInMirrorSet(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsAsleep(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsBuiltin(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsCaptured(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsInHWMirrorSet(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsInMirrorSet(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsMain(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayIsOnline(CGDirectDisplayID display);
CGDirectDisplayID __fastcall CGDisplayMirrorsDisplay(CGDirectDisplayID display);
uint32_t __fastcall CGDisplayModelNumber(CGDirectDisplayID display);
CGDisplayErr __fastcall CGDisplayMoveCursorToPoint(CGDirectDisplayID display, CGPoint point);
size_t __fastcall CGDisplayPixelsHigh(CGDirectDisplayID display);
size_t __fastcall CGDisplayPixelsWide(CGDirectDisplayID display);
CGDirectDisplayID __fastcall CGDisplayPrimaryDisplay(CGDirectDisplayID display);
CGDisplayErr __fastcall CGDisplayRelease(CGDirectDisplayID display);
void CGDisplayRestoreColorSyncSettings(void);
size_t __fastcall CGDisplaySamplesPerPixel(CGDirectDisplayID display);
uint32_t __fastcall CGDisplaySerialNumber(CGDirectDisplayID display);
CGDisplayErr __fastcall CGDisplaySetPalette(CGDirectDisplayID display, const CGDirectPaletteRef palette);
CGDisplayErr __fastcall CGDisplayShowCursor(CGDirectDisplayID display);
CGDisplayErr __fastcall CGDisplaySwitchToMode(CGDirectDisplayID display, CFDictionaryRef mode);
uint32_t __fastcall CGDisplayUnitNumber(CGDirectDisplayID display);
boolean_t __fastcall CGDisplayUsesOpenGLAcceleration(CGDirectDisplayID display);
uint32_t __fastcall CGDisplayVendorNumber(CGDirectDisplayID display);
CGDisplayErr __fastcall CGDisplayWaitForBeamPositionOutsideLines(CGDirectDisplayID display, CGBeamPosition upperScanLine, CGBeamPosition lowerScanLine);
CGEventErr __fastcall CGEnableEventStateCombining(boolean_t doCombineState);
CGFontRef __fastcall CGFontCreateWithPlatformFont(void *platformFontReference);
CFTypeID CGFontGetTypeID(void);
void __fastcall CGFontRelease(CGFontRef font);
CGFontRef __fastcall CGFontRetain(CGFontRef font);
CGFunctionRef __fastcall CGFunctionCreate(void *info, size_t domainDimension, const float *domain, size_t rangeDimension, const float *range, const CGFunctionCallbacks *callbacks);
CFTypeID CGFunctionGetTypeID(void);
void __fastcall CGFunctionRelease(CGFunctionRef function);
CGFunctionRef __fastcall CGFunctionRetain(CGFunctionRef function);
CGDisplayErr __fastcall CGGetActiveDisplayList(CGDisplayCount maxDisplays, CGDirectDisplayID *activeDspys, CGDisplayCount *dspyCnt);
CGDisplayErr __fastcall CGGetDisplayTransferByFormula(CGDirectDisplayID display, CGGammaValue *redMin, CGGammaValue *redMax, CGGammaValue *redGamma, CGGammaValue *greenMin, CGGammaValue *greenMax, CGGammaValue *greenGamma, CGGammaValue *blueMin, CGGammaValue *blueMax, CGGammaValue *blueGamma);
CGDisplayErr __fastcall CGGetDisplayTransferByTable(CGDirectDisplayID display, CGTableCount capacity, CGGammaValue *redTable, CGGammaValue *greenTable, CGGammaValue *blueTable, CGTableCount *sampleCount);
CGDisplayErr __fastcall CGGetDisplaysWithOpenGLDisplayMask(CGOpenGLDisplayMask mask, CGDisplayCount maxDisplays, CGDirectDisplayID *dspys, CGDisplayCount *dspyCnt);
CGDisplayErr __fastcall CGGetDisplaysWithPoint(CGPoint point, CGDisplayCount maxDisplays, CGDirectDisplayID *dspys, CGDisplayCount *dspyCnt);
CGDisplayErr __fastcall CGGetDisplaysWithRect(CGRect rect, CGDisplayCount maxDisplays, CGDirectDisplayID *dspys, CGDisplayCount *dspyCnt);
void __fastcall CGGetLastMouseDelta(CGMouseDelta *deltaX, CGMouseDelta *deltaY);
CGDisplayErr __fastcall CGGetOnlineDisplayList(CGDisplayCount maxDisplays, CGDirectDisplayID *onlineDspys, CGDisplayCount *dspyCnt);
CGImageRef __fastcall CGImageCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef colorspace, CGImageAlphaInfo alphaInfo, CGDataProviderRef provider, const float decode[], bool shouldInterpolate, CGColorRenderingIntent intent);
CGImageRef __fastcall CGImageCreateWithJPEGDataProvider(CGDataProviderRef source, const float decode[], bool shouldInterpolate, CGColorRenderingIntent intent);
CGImageRef __fastcall CGImageCreateWithPNGDataProvider(CGDataProviderRef source, const float decode[], bool shouldInterpolate, CGColorRenderingIntent intent);
CGImageAlphaInfo __fastcall CGImageGetAlphaInfo(CGImageRef image);
size_t __fastcall CGImageGetBitsPerComponent(CGImageRef image);
size_t __fastcall CGImageGetBitsPerPixel(CGImageRef image);
size_t __fastcall CGImageGetBytesPerRow(CGImageRef image);
CGColorSpaceRef __fastcall CGImageGetColorSpace(CGImageRef image);
CGDataProviderRef __fastcall CGImageGetDataProvider(CGImageRef image);
const float *__fastcall CGImageGetDecode(CGImageRef image);
size_t __fastcall CGImageGetHeight(CGImageRef image);
CGColorRenderingIntent __fastcall CGImageGetRenderingIntent(CGImageRef image);
bool __fastcall CGImageGetShouldInterpolate(CGImageRef image);
CFTypeID CGImageGetTypeID(void);
size_t __fastcall CGImageGetWidth(CGImageRef image);
bool __fastcall CGImageIsMask(CGImageRef image);
CGImageRef __fastcall CGImageMaskCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGDataProviderRef provider, const float decode[], bool shouldInterpolate);
void __fastcall CGImageRelease(CGImageRef image);
CGImageRef __fastcall CGImageRetain(CGImageRef image);
CGEventErr __fastcall CGInhibitLocalEvents(boolean_t doInhibit);
CGDirectDisplayID CGMainDisplayID(void);
CGDirectDisplayID __fastcall CGOpenGLDisplayMaskToDisplayID(CGOpenGLDisplayMask mask);
CGContextRef __fastcall CGPDFContextCreate(CGDataConsumerRef consumer, const CGRect *mediaBox, CFDictionaryRef auxiliaryInfo);
CGContextRef __fastcall CGPDFContextCreateWithURL(CFURLRef url, const CGRect *mediaBox, CFDictionaryRef auxiliaryInfo);
bool __fastcall CGPDFDocumentAllowsCopying(CGPDFDocumentRef document);
bool __fastcall CGPDFDocumentAllowsPrinting(CGPDFDocumentRef document);
CGPDFDocumentRef __fastcall CGPDFDocumentCreateWithProvider(CGDataProviderRef provider);
CGPDFDocumentRef __fastcall CGPDFDocumentCreateWithURL(CFURLRef url);
CGRect __fastcall CGPDFDocumentGetArtBox(CGPDFDocumentRef document, int page);
CGRect __fastcall CGPDFDocumentGetBleedBox(CGPDFDocumentRef document, int page);
CGRect __fastcall CGPDFDocumentGetCropBox(CGPDFDocumentRef document, int page);
CGRect __fastcall CGPDFDocumentGetMediaBox(CGPDFDocumentRef document, int page);
size_t __fastcall CGPDFDocumentGetNumberOfPages(CGPDFDocumentRef document);
int __fastcall CGPDFDocumentGetRotationAngle(CGPDFDocumentRef document, int page);
CGRect __fastcall CGPDFDocumentGetTrimBox(CGPDFDocumentRef document, int page);
CFTypeID CGPDFDocumentGetTypeID(void);
bool __fastcall CGPDFDocumentIsEncrypted(CGPDFDocumentRef document);
bool __fastcall CGPDFDocumentIsUnlocked(CGPDFDocumentRef document);
void __fastcall CGPDFDocumentRelease(CGPDFDocumentRef document);
CGPDFDocumentRef __fastcall CGPDFDocumentRetain(CGPDFDocumentRef document);
bool __fastcall CGPDFDocumentUnlockWithPassword(CGPDFDocumentRef document, const char *password);
CGDirectPaletteRef __fastcall CGPaletteCreateCopy(CGDirectPaletteRef palette);
CGDirectPaletteRef CGPaletteCreateDefaultColorPalette(void);
CGDirectPaletteRef __fastcall CGPaletteCreateFromPaletteBlendedWithColor(CGDirectPaletteRef palette, CGPaletteBlendFraction fraction, CGDeviceColor color);
CGDirectPaletteRef __fastcall CGPaletteCreateWithByteSamples(CGDeviceByteColor *sampleTable, CGTableCount sampleCount);
CGDirectPaletteRef __fastcall CGPaletteCreateWithCapacity(CGTableCount capacity);
CGDirectPaletteRef __fastcall CGPaletteCreateWithDisplay(CGDirectDisplayID display);
CGDirectPaletteRef __fastcall CGPaletteCreateWithSamples(CGDeviceColor *sampleTable, CGTableCount sampleCount);
CGDeviceColor __fastcall CGPaletteGetColorAtIndex(CGDirectPaletteRef palette, CGTableCount index);
CGTableCount __fastcall CGPaletteGetIndexForColor(CGDirectPaletteRef palette, CGDeviceColor color);
CGTableCount __fastcall CGPaletteGetNumberOfSamples(CGDirectPaletteRef palette);
Boolean __fastcall CGPaletteIsEqualToPalette(CGDirectPaletteRef palette1, CGDirectPaletteRef palette2);
void __fastcall CGPaletteRelease(CGDirectPaletteRef palette);
void __fastcall CGPaletteSetColorAtIndex(CGDirectPaletteRef palette, CGDeviceColor color, CGTableCount index);
void __fastcall CGPathAddArc(CGMutablePathRef path, const CGAffineTransform *m, float x, float y, float radius, float startAngle, float endAngle, bool clockwise);
void __fastcall CGPathAddArcToPoint(CGMutablePathRef path, const CGAffineTransform *m, float x1, float y1, float x2, float y2, float radius);
void __fastcall CGPathAddCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, float cp1x, float cp1y, float cp2x, float cp2y, float x, float y);
void __fastcall CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, float x, float y);
void __fastcall CGPathAddLines(CGMutablePathRef path, const CGAffineTransform *m, const CGPoint points[], size_t count);
void __fastcall CGPathAddPath(CGMutablePathRef path1, const CGAffineTransform *m, CGPathRef path2);
void __fastcall CGPathAddQuadCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, float cpx, float cpy, float x, float y);
void __fastcall CGPathAddRect(CGMutablePathRef path, const CGAffineTransform *m, CGRect rect);
void __fastcall CGPathAddRects(CGMutablePathRef path, const CGAffineTransform *m, const CGRect rects[], size_t count);
void __fastcall CGPathApply(CGPathRef path, void *info, CGPathApplierFunction function);
void __fastcall CGPathCloseSubpath(CGMutablePathRef path);
CGPathRef __fastcall CGPathCreateCopy(CGPathRef path);
CGMutablePathRef CGPathCreateMutable(void);
CGMutablePathRef __fastcall CGPathCreateMutableCopy(CGPathRef path);
bool __fastcall CGPathEqualToPath(CGPathRef path1, CGPathRef path2);
CGRect __fastcall CGPathGetBoundingBox(CGPathRef path);
CGPoint __fastcall CGPathGetCurrentPoint(CGPathRef path);
CFTypeID CGPathGetTypeID(void);
bool __fastcall CGPathIsEmpty(CGPathRef path);
bool __fastcall CGPathIsRect(CGPathRef path, CGRect *rect);
void __fastcall CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, float x, float y);
void __fastcall CGPathRelease(CGPathRef path);
CGPathRef __fastcall CGPathRetain(CGPathRef path);
CGPatternRef __fastcall CGPatternCreate(void *info, CGRect bounds, CGAffineTransform matrix, float xStep, float yStep, CGPatternTiling tiling, bool isColored, const CGPatternCallbacks *callbacks);
CFTypeID CGPatternGetTypeID(void);
void __fastcall CGPatternRelease(CGPatternRef pattern);
CGPatternRef __fastcall CGPatternRetain(CGPatternRef pattern);
CGPoint __fastcall CGPointApplyAffineTransform(CGPoint point, CGAffineTransform t);
int __fastcall CGPointEqualToPoint(CGPoint point1, CGPoint point2);
static CGPoint __fastcall CGPointMake(float x, float y);
const CGPoint CGPointZero;
CGEventErr __fastcall CGPostKeyboardEvent(CGCharCode keyChar, CGKeyCode virtualKey, boolean_t keyDown);
CGEventErr CGPostMouseEvent(CGPoint mouseCursorPosition, boolean_t updateMouseCursorPosition, CGButtonCount buttonCount, boolean_t mouseButtonDown, ...);
CGEventErr CGPostScrollWheelEvent(CGWheelCount wheelCount, int32_t wheel1, ...);
int __fastcall CGRectContainsPoint(CGRect rect, CGPoint point);
int __fastcall CGRectContainsRect(CGRect rect1, CGRect rect2);
void __fastcall CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, float amount, CGRectEdge edge);
int __fastcall CGRectEqualToRect(CGRect rect1, CGRect rect2);
float __fastcall CGRectGetHeight(CGRect rect);
float __fastcall CGRectGetMaxX(CGRect rect);
float __fastcall CGRectGetMaxY(CGRect rect);
float __fastcall CGRectGetMidX(CGRect rect);
float __fastcall CGRectGetMidY(CGRect rect);
float __fastcall CGRectGetMinX(CGRect rect);
float __fastcall CGRectGetMinY(CGRect rect);
float __fastcall CGRectGetWidth(CGRect rect);
CGRect __fastcall CGRectInset(CGRect rect, float dx, float dy);
CGRect __fastcall CGRectIntegral(CGRect rect);
CGRect __fastcall CGRectIntersection(CGRect r1, CGRect r2);
int __fastcall CGRectIntersectsRect(CGRect rect1, CGRect rect2);
int __fastcall CGRectIsEmpty(CGRect rect);
int __fastcall CGRectIsNull(CGRect rect);
static CGRect __fastcall CGRectMake(float x, float y, float width, float height);
const CGRect CGRectNull;
CGRect __fastcall CGRectOffset(CGRect rect, float dx, float dy);
CGRect __fastcall CGRectStandardize(CGRect rect);
CGRect __fastcall CGRectUnion(CGRect r1, CGRect r2);
const CGRect CGRectZero;
void __fastcall CGRegisterScreenRefreshCallback(CGScreenRefreshCallback function, void *userParameter);
CGDisplayErr CGReleaseAllDisplays(void);
CGError __fastcall CGReleaseDisplayFadeReservation(CGDisplayFadeReservationToken myToken);
void __fastcall CGReleaseScreenRefreshRects(CGRect *rectArray);
void CGRestorePermanentDisplayConfiguration(void);
CGDisplayErr __fastcall CGSetDisplayTransferByByteTable(CGDirectDisplayID display, CGTableCount tableSize, const CGByteValue *redTable, const CGByteValue *greenTable, const CGByteValue *blueTable);
CGDisplayErr __fastcall CGSetDisplayTransferByFormula(CGDirectDisplayID display, CGGammaValue redMin, CGGammaValue redMax, CGGammaValue redGamma, CGGammaValue greenMin, CGGammaValue greenMax, CGGammaValue greenGamma, CGGammaValue blueMin, CGGammaValue blueMax, CGGammaValue blueGamma);
CGDisplayErr __fastcall CGSetDisplayTransferByTable(CGDirectDisplayID display, CGTableCount tableSize, const CGGammaValue *redTable, const CGGammaValue *greenTable, const CGGammaValue *blueTable);
CGEventErr __fastcall CGSetLocalEventsFilterDuringSupressionState(CGEventFilterMask filter, CGEventSupressionState state);
CGEventErr __fastcall CGSetLocalEventsSuppressionInterval(CFTimeInterval seconds);
CGShadingRef __fastcall CGShadingCreateAxial(CGColorSpaceRef colorspace, CGPoint start, CGPoint end, CGFunctionRef function, bool extendStart, bool extendEnd);
CGShadingRef __fastcall CGShadingCreateRadial(CGColorSpaceRef colorspace, CGPoint start, float startRadius, CGPoint end, float endRadius, CGFunctionRef function, bool extendStart, bool extendEnd);
CFTypeID CGShadingGetTypeID(void);
void __fastcall CGShadingRelease(CGShadingRef shading);
CGShadingRef __fastcall CGShadingRetain(CGShadingRef shading);
void *__fastcall CGShieldingWindowID(CGDirectDisplayID display);
int32_t CGShieldingWindowLevel(void);
CGSize __fastcall CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t);
int __fastcall CGSizeEqualToSize(CGSize size1, CGSize size2);
static CGSize __fastcall CGSizeMake(float width, float height);
const CGSize CGSizeZero;
void __fastcall CGUnregisterScreenRefreshCallback(CGScreenRefreshCallback function, void *userParameter);
CGEventErr __fastcall CGWaitForScreenRefreshRects(CGRect **pRectArray, CGRectCount *pCount);
CGEventErr __fastcall CGWarpMouseCursorPosition(CGPoint newCursorPosition);
CGWindowLevel __fastcall CGWindowLevelForKey(CGWindowLevelKey key);
CFMachPortRef CGWindowServerCFMachPort(void);
OSErr __fastcall CMCalibrateDisplay(CalibratorInfo *theInfo);
CMError __fastcall CMCloneProfileRef(CMProfileRef prof);
CMError __fastcall CMCloseProfile(CMProfileRef prof);
CMError __fastcall CMConvertFixedXYZToXYZ(const CMFixedXYZColor *src, CMXYZColor *dst, UInt32 count);
CMError __fastcall CMConvertHLSToRGB(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertHSVToRGB(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertLabToXYZ(const CMColor *src, const CMXYZColor *white, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertLuvToXYZ(const CMColor *src, const CMXYZColor *white, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertRGBToGray(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertRGBToHLS(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertRGBToHSV(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertXYZToFixedXYZ(const CMXYZColor *src, CMFixedXYZColor *dst, UInt32 count);
CMError __fastcall CMConvertXYZToLab(const CMColor *src, const CMXYZColor *white, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertXYZToLuv(const CMColor *src, const CMXYZColor *white, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertXYZToXYZ(const CMColor *src, const CMXYZColor *srcIlluminant, CMColor *dst, const CMXYZColor *dstIlluminant, CMChromaticAdaptation method, UInt32 count);
CMError __fastcall CMConvertXYZToYxy(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMConvertYxyToXYZ(const CMColor *src, CMColor *dst, UInt32 count);
CMError __fastcall CMCopyProfile(CMProfileRef *targetProf, const CMProfileLocation *targetLocation, CMProfileRef srcProf);
CMError __fastcall CMCopyProfileLocalizedString(CMProfileRef prof, OSType tag, CFStringRef reqLocale, CFStringRef *locale, CFStringRef *str);
CMError __fastcall CMCopyProfileLocalizedStringDictionary(CMProfileRef prof, OSType tag, CFDictionaryRef *theDict);
CMError __fastcall CMCountImageProfiles(const FSSpec *spec, UInt32 *count);
CMError __fastcall CMCountProfileElements(CMProfileRef prof, UInt32 *elementCount);
CMError __fastcall CMCreateProfileIdentifier(CMProfileRef prof, CMProfileIdentifierPtr ident, UInt32 *size);
void __fastcall CMDisposeProfileSearch(CMProfileSearchRef search);
CMError __fastcall CMEmbedImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, CMProfileRef embProf);
void __fastcall CMEnableMatchingComment(Boolean enableIt);
void __fastcall CMEndMatching(CMMatchRef myRef);
CMError __fastcall CMFlattenProfile(CMProfileRef prof, UInt32 flags, CMFlattenUPP proc, void *refCon, Boolean *preferredCMMnotfound);
CMError __fastcall CMGetCWInfo(CMWorldRef cw, CMCWInfoRecord *info);
CMError __fastcall CMGetColorSyncFolderSpec(__int16 vRefNum, Boolean createFolder, __int16 *foundVRefNum, int *foundDirID);
CMError __fastcall CMGetColorSyncVersion(UInt32 *version);
CMError __fastcall CMGetDefaultDevice(CMDeviceClass deviceClass, CMDeviceID *deviceID);
CMError __fastcall CMGetDefaultProfileBySpace(OSType dataColorSpace, CMProfileRef *prof);
CMError __fastcall CMGetDefaultProfileByUse(OSType use, CMProfileRef *prof);
CMError __fastcall CMGetDeviceDefaultProfileID(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceProfileID *defaultProfID);
CMError __fastcall CMGetDeviceFactoryProfiles(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceProfileID *defaultProfID, UInt32 *arraySize, CMDeviceProfileArray *deviceProfiles);
CMError __fastcall CMGetDeviceInfo(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceInfo *deviceInfo);
CMError __fastcall CMGetDeviceProfile(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceProfileID profileID, CMProfileLocation *deviceProfLoc);
CMError __fastcall CMGetDeviceProfiles(CMDeviceClass deviceClass, CMDeviceID deviceID, UInt32 *arraySize, CMDeviceProfileArray *deviceProfiles);
CMError __fastcall CMGetDeviceState(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceState *deviceState);
CMError __fastcall CMGetGammaByAVID(CMDisplayIDType theID, CMVideoCardGamma *gamma, UInt32 *size);
CMError __fastcall CMGetImageSpace(const FSSpec *spec, OSType *space);
CMError __fastcall CMGetIndImageProfile(const FSSpec *spec, UInt32 index, CMProfileRef *prof);
CMError __fastcall CMGetIndNamedColorValue(CMProfileRef prof, UInt32 index, CMColor *deviceColor, CMColor *PCSColor);
CMError __fastcall CMGetIndProfileElement(CMProfileRef prof, UInt32 index, UInt32 *elementSize, void *elementData);
CMError __fastcall CMGetIndProfileElementInfo(CMProfileRef prof, UInt32 index, OSType *tag, UInt32 *elementSize, Boolean *refs);
CMError __fastcall CMGetNamedColorIndex(CMProfileRef prof, StringPtr name, UInt32 *index);
CMError __fastcall CMGetNamedColorInfo(CMProfileRef prof, UInt32 *deviceChannels, OSType *deviceColorSpace, OSType *PCSColorSpace, UInt32 *count, StringPtr prefix, StringPtr suffix);
CMError __fastcall CMGetNamedColorName(CMProfileRef prof, UInt32 index, StringPtr name);
CMError __fastcall CMGetNamedColorValue(CMProfileRef prof, StringPtr name, CMColor *deviceColor, CMColor *PCSColor);
CMError __fastcall CMGetPS2ColorRendering(CMProfileRef srcProf, CMProfileRef dstProf, UInt32 flags, CMFlattenUPP proc, void *refCon, Boolean *preferredCMMnotfound);
CMError __fastcall CMGetPS2ColorRenderingIntent(CMProfileRef srcProf, UInt32 flags, CMFlattenUPP proc, void *refCon, Boolean *preferredCMMnotfound);
CMError __fastcall CMGetPS2ColorRenderingVMSize(CMProfileRef srcProf, CMProfileRef dstProf, UInt32 *vmSize, Boolean *preferredCMMnotfound);
CMError __fastcall CMGetPS2ColorSpace(CMProfileRef srcProf, UInt32 flags, CMFlattenUPP proc, void *refCon, Boolean *preferredCMMnotfound);
CMError __fastcall CMGetPartialProfileElement(CMProfileRef prof, OSType tag, UInt32 offset, UInt32 *byteCount, void *elementData);
CMError __fastcall CMGetPreferredCMM(OSType *cmmType, Boolean *preferredCMMnotfound);
CMError __fastcall CMGetProfileByAVID(CMDisplayIDType theID, CMProfileRef *prof);
CMError __fastcall CMGetProfileDescriptions(CMProfileRef prof, char *aName, UInt32 *aCount, Str255 mName, ScriptCode *mCode, UniChar *uName, UniCharCount *uCount);
CMError __fastcall CMGetProfileElement(CMProfileRef prof, OSType tag, UInt32 *elementSize, void *elementData);
CMError __fastcall CMGetProfileHeader(CMProfileRef prof, CMAppleProfileHeader *header);
CMError __fastcall CMGetProfileLocation(CMProfileRef prof, CMProfileLocation *theProfile);
CMError __fastcall CMGetProfileMD5(CMProfileRef prof, CMProfileMD5 digest);
CMError __fastcall CMGetProfileRefCount(CMProfileRef prof, int *count);
CMError __fastcall CMGetScriptProfileDescription(CMProfileRef prof, Str255 name, ScriptCode *code);
CMError __fastcall CMGetSystemProfile(CMProfileRef *prof);
CMError __fastcall CMIterateCMMInfo(CMMIterateUPP proc, UInt32 *count, void *refCon);
CMError __fastcall CMIterateColorDevices(CMIterateDeviceInfoProcPtr proc, UInt32 *seed, UInt32 *count, void *refCon);
CMError __fastcall CMIterateColorSyncFolder(CMProfileIterateUPP proc, UInt32 *seed, UInt32 *count, void *refCon);
CMError __fastcall CMIterateDeviceProfiles(CMIterateDeviceProfileProcPtr proc, UInt32 *seed, UInt32 *count, UInt32 flags, void *refCon);
CMError __fastcall CMLaunchControlPanel(UInt32 flags);
CMError __fastcall CMLinkImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef lnkProf, UInt32 lnkIntent);
CMError __fastcall CMMatchImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef srcProf, UInt32 srcIntent, CMProfileRef dstProf);
CMError __fastcall CMNewProfile(CMProfileRef *prof, const CMProfileLocation *theProfile);
CMError __fastcall CMNewProfileSearch(CMSearchRecord *searchSpec, void *refCon, UInt32 *count, CMProfileSearchRef *searchResult);
CMError __fastcall CMOpenProfile(CMProfileRef *prof, const CMProfileLocation *theProfile);
OSStatus __fastcall CMPluginExamineContext(void *thisInstance, const AEDesc *inContext, AEDescList *outCommandPairs);
OSStatus __fastcall CMPluginHandleSelection(void *thisInstance, AEDesc *inContext, SInt32 inCommandID);
void __fastcall CMPluginPostMenuCleanup(void *thisInstance);
CMError __fastcall CMProfileElementExists(CMProfileRef prof, OSType tag, Boolean *found);
CMError __fastcall CMProfileIdentifierFolderSearch(CMProfileIdentifierPtr ident, UInt32 *matchedCount, CMProfileSearchRef *searchResult);
CMError __fastcall CMProfileIdentifierListSearch(CMProfileIdentifierPtr ident, CMProfileRef *profileList, UInt32 listSize, UInt32 *matchedCount, CMProfileRef *matchedList);
CMError __fastcall CMProfileModified(CMProfileRef prof, Boolean *modified);
CMError __fastcall CMProofImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef srcProf, UInt32 srcIntent, CMProfileRef dstProf, CMProfileRef prfProf);
CMError __fastcall CMRegisterColorDevice(CMDeviceClass deviceClass, CMDeviceID deviceID, CFDictionaryRef deviceName, const CMDeviceScope *deviceScope);
CMError __fastcall CMRemoveProfileElement(CMProfileRef prof, OSType tag);
CMError __fastcall CMSearchGetIndProfile(CMProfileSearchRef search, UInt32 index, CMProfileRef *prof);
CMError __fastcall CMSearchGetIndProfileFileSpec(CMProfileSearchRef search, UInt32 index, FSSpec *profileFile);
CMError __fastcall CMSetDefaultDevice(CMDeviceClass deviceClass, CMDeviceID deviceID);
CMError __fastcall CMSetDefaultProfileBySpace(OSType dataColorSpace, CMProfileRef prof);
CMError __fastcall CMSetDefaultProfileByUse(OSType use, CMProfileRef prof);
CMError __fastcall CMSetDeviceDefaultProfileID(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceProfileID defaultProfID);
CMError __fastcall CMSetDeviceFactoryProfiles(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceProfileID defaultProfID, const CMDeviceProfileArray *deviceProfiles);
CMError __fastcall CMSetDeviceProfile(CMDeviceClass deviceClass, CMDeviceID deviceID, const CMDeviceProfileScope *profileScope, CMDeviceProfileID profileID, const CMProfileLocation *deviceProfLoc);
CMError __fastcall CMSetDeviceProfiles(CMDeviceClass deviceClass, CMDeviceID deviceID, const CMDeviceProfileScope *profileScope, const CMDeviceProfileArray *deviceProfiles);
CMError __fastcall CMSetDeviceState(CMDeviceClass deviceClass, CMDeviceID deviceID, CMDeviceState deviceState);
CMError __fastcall CMSetGammaByAVID(CMDisplayIDType theID, CMVideoCardGamma *gamma);
CMError __fastcall CMSetIndImageProfile(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 index, CMProfileRef prof);
CMError __fastcall CMSetPartialProfileElement(CMProfileRef prof, OSType tag, UInt32 offset, UInt32 byteCount, const void *elementData);
CMError __fastcall CMSetProfileByAVID(CMDisplayIDType theID, CMProfileRef prof);
CMError __fastcall CMSetProfileDescriptions(CMProfileRef prof, const char *aName, UInt32 aCount, ConstStr255Param mName, ScriptCode mCode, const UniChar *uName, UniCharCount uCount);
CMError __fastcall CMSetProfileElement(CMProfileRef prof, OSType tag, UInt32 elementSize, const void *elementData);
CMError __fastcall CMSetProfileElementReference(CMProfileRef prof, OSType elementTag, OSType referenceTag);
CMError __fastcall CMSetProfileElementSize(CMProfileRef prof, OSType tag, UInt32 elementSize);
CMError __fastcall CMSetProfileHeader(CMProfileRef prof, const CMAppleProfileHeader *header);
CMError __fastcall CMSetProfileLocalizedStringDictionary(CMProfileRef prof, OSType tag, CFDictionaryRef theDict);
CMError __fastcall CMSetSystemProfile(const FSSpec *profileFileSpec);
CMError __fastcall CMUnembedImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl);
CMError __fastcall CMUnregisterColorDevice(CMDeviceClass deviceClass, CMDeviceID deviceID);
CMError __fastcall CMUpdateProfile(CMProfileRef prof);
CMError __fastcall CMUpdateProfileSearch(CMProfileSearchRef search, void *refCon, UInt32 *count);
CMError __fastcall CMValidImage(const FSSpec *spec);
CMError __fastcall CMValidateProfile(CMProfileRef prof, Boolean *valid, Boolean *preferredCMMnotfound);
void __fastcall CMY2RGB(const CMYColor *cColor, RGBColor *rColor);
MACRO__CRMASK _CRMASK;
CFStringRef CSCopyMachineName(void);
CFStringRef __fastcall CSCopyUserName(Boolean useShortName);
MACRO__CTYPE _CTYPE_A;
MACRO__CTYPE _CTYPE_B;
MACRO__CTYPE _CTYPE_C;
MACRO__CTYPE _CTYPE_D;
MACRO__CTYPE _CTYPE_G;
MACRO__CTYPE _CTYPE_I;
MACRO__CTYPE _CTYPE_L;
MACRO__CTYPE _CTYPE_P;
MACRO__CTYPE _CTYPE_Q;
MACRO__CTYPE _CTYPE_R;
MACRO__CTYPE _CTYPE_S;
MACRO__CTYPE _CTYPE_T;
MACRO__CTYPE _CTYPE_U;
MACRO__CTYPE _CTYPE_X;
void __fastcall CTab2Palette(CTabHandle srcCTab, PaletteHandle dstPalette, __int16 srcUsage, __int16 srcTolerance);
void __fastcall CTabChanged(CTabHandle ctab);
CMError __fastcall CWCheckBitmap(CMWorldRef cw, const CMBitmap *bitmap, CMBitmapCallBackUPP progressProc, void *refCon, CMBitmap *resultBitmap);
CMError __fastcall CWCheckColors(CMWorldRef cw, CMColor *myColors, UInt32 count, UInt32 *result);
CMError __fastcall CWCheckPixMap(CMWorldRef cw, PixMap *myPixMap, CMBitmapCallBackUPP progressProc, void *refCon, BitMap *resultBitMap);
CMError __fastcall CWConcatColorWorld(CMWorldRef *cw, CMConcatProfileSet *profileSet);
void __fastcall CWDisposeColorWorld(CMWorldRef cw);
CMError __fastcall CWMatchBitmap(CMWorldRef cw, CMBitmap *bitmap, CMBitmapCallBackUPP progressProc, void *refCon, CMBitmap *matchedBitmap);
CMError __fastcall CWMatchColors(CMWorldRef cw, CMColor *myColors, UInt32 count);
CMError __fastcall CWMatchPixMap(CMWorldRef cw, PixMap *myPixMap, CMBitmapCallBackUPP progressProc, void *refCon);
CMError __fastcall CWNewLinkProfile(CMProfileRef *prof, const CMProfileLocation *targetLocation, CMConcatProfileSet *profileSet);
void __fastcall CalcCMask(const BitMap *srcBits, const BitMap *dstBits, const Rect *srcRect, const Rect *dstRect, const RGBColor *seedRGB, ColorSearchUPP matchProc, int matchData);
void __fastcall CalcMask(const void *srcPtr, void *dstPtr, __int16 srcRow, __int16 dstRow, __int16 height, __int16 words);
void __fastcall CalcMenuSize(MenuRef theMenu);
void __fastcall CalcVis(WindowRef window);
void __fastcall CalcVisBehind(WindowRef startWindow, RgnHandle clobberedRgn);
ComponentResult __fastcall CallComponentCanDo(ComponentInstance ci, __int16 ftnNumber);
ComponentResult __fastcall CallComponentClose(ComponentInstance ci, ComponentInstance self);
ComponentResult __fastcall CallComponentDispatch(ComponentParameters *cp);
int __fastcall CallComponentFunction(ComponentParameters *params, ComponentFunctionUPP func);
int __fastcall CallComponentFunctionWithStorage(Handle storage, ComponentParameters *params, ComponentFunctionUPP func);
int __fastcall CallComponentFunctionWithStorageProcInfo(Handle storage, ComponentParameters *params, ProcPtr func, ProcInfoType funcProcInfo);
ComponentResult __fastcall CallComponentGetMPWorkFunction(ComponentInstance ci, ComponentMPWorkFunctionUPP *workFunction, void **refCon);
ComponentResult __fastcall CallComponentGetPublicResource(ComponentInstance ci, OSType resourceType, __int16 resourceID, Handle *resource);
ComponentResult __fastcall CallComponentOpen(ComponentInstance ci, ComponentInstance self);
ComponentResult __fastcall CallComponentRegister(ComponentInstance ci);
ComponentResult __fastcall CallComponentTarget(ComponentInstance ci, ComponentInstance target);
ComponentResult __fastcall CallComponentUnregister(ComponentInstance ci);
ComponentResult __fastcall CallComponentVersion(ComponentInstance ci);
OSStatus CallInScrapPromises(void);
OSStatus __fastcall CallNextEventHandler(EventHandlerCallRef inCallRef, EventRef inEvent);
OSErr __fastcall CanDocBeOpened(const FSSpec *targetDocument, __int16 appVRefNumHint, OSType appSignature, const FileType *nativeTypes, Boolean onlyNative, DocOpenMethod *howToOpen, FileTranslationSpec *howToTranslate);
Component __fastcall CaptureComponent(Component capturedComponent, Component capturingComponent);
OSErr __fastcall CatMove(__int16 vRefNum, int dirID, ConstStr255Param oldName, int newDirID, ConstStr255Param newName);
DialogItemIndex __fastcall CautionAlert(SInt16 alertID, ModalFilterUPP modalFilter);
OSStatus __fastcall ChangeControlPropertyAttributes(ControlRef control, OSType propertyCreator, OSType propertyTag, UInt32 attributesToSet, UInt32 attributesToClear);
OSErr __fastcall ChangeDragBehaviors(DragRef theDrag, DragBehaviors inBehaviorsToSet, DragBehaviors inBehaviorsToClear);
OSStatus __fastcall ChangeMenuAttributes(MenuRef menu, MenuAttributes setTheseAttributes, MenuAttributes clearTheseAttributes);
OSStatus __fastcall ChangeMenuItemAttributes(MenuRef menu, MenuItemIndex item, MenuItemAttributes setTheseAttributes, MenuItemAttributes clearTheseAttributes);
OSStatus __fastcall ChangeMenuItemPropertyAttributes(MenuRef menu, MenuItemIndex item, OSType propertyCreator, OSType propertyTag, UInt32 attributesToSet, UInt32 attributesToClear);
OSStatus __fastcall ChangeMouseTrackingRegion(MouseTrackingRef inMouseRef, RgnHandle inRegion, RgnHandle inClip);
OSStatus __fastcall ChangeTextToUnicodeInfo(TextToUnicodeInfo ioTextToUnicodeInfo, ConstUnicodeMappingPtr iUnicodeMapping);
OSStatus __fastcall ChangeUnicodeToTextInfo(UnicodeToTextInfo ioUnicodeToTextInfo, ConstUnicodeMappingPtr iUnicodeMapping);
OSStatus __fastcall ChangeWindowAttributes(WindowRef window, WindowAttributes setTheseAttributes, WindowAttributes clearTheseAttributes);
OSStatus __fastcall ChangeWindowGroupAttributes(WindowGroupRef inGroup, WindowGroupAttributes setTheseAttributes, WindowGroupAttributes clearTheseAttributes);
OSStatus __fastcall ChangeWindowPropertyAttributes(WindowRef window, OSType propertyCreator, OSType propertyTag, UInt32 attributesToSet, UInt32 attributesToClear);
void __fastcall ChangedResource(Handle theResource);
void __fastcall CharExtra(Fixed extra);
__int16 __fastcall CharToPixel(Ptr textBuf, int textLength, Fixed slop, int offset, __int16 direction, JustStyleCode styleRunPosition, Point numer, Point denom);
__int16 __fastcall CharWidth(CharParameter ch);
__int16 __fastcall CharacterByteType(Ptr textBuf, __int16 textOffset, ScriptCode script);
__int16 __fastcall CharacterType(Ptr textBuf, __int16 textOffset, ScriptCode script);
Boolean CheckAllHeaps(void);
Boolean CheckEventQueueForUserCancel(void);
void __fastcall CheckMenuItem(MenuRef theMenu, __int16 item, Boolean checked);
Boolean __fastcall CheckUpdate(EventRecord *theEvent);
OSStatus ClearCurrentScrap(void);
void ClearIntlResourceCache(void);
OSErr __fastcall ClearKeyboardFocus(WindowRef inWindow);
void ClearMenuBar(void);
OSStatus __fastcall ClearScrap(ScrapRef *inOutScrap);
void __fastcall ClipAbove(WindowRef window);
OSStatus __fastcall ClipCGContextToRegion(CGContextRef gc, const Rect *portRect, RgnHandle region);
OSStatus __fastcall ClipMouseTrackingRegion(MouseTrackingRef inMouseRef, RgnHandle inRegion);
void __fastcall ClipRect(const Rect *r);
OSStatus __fastcall ClipWindowMouseTrackingRegions(WindowRef inWindow, OSType inSignature, RgnHandle inClip);
Collection __fastcall CloneCollection(Collection c);
OSStatus __fastcall CloneWindow(WindowRef window);
OSErr __fastcall CloseComponent(ComponentInstance aComponentInstance);
OSErr __fastcall CloseComponentResFile(__int16 refnum);
OSErr __fastcall CloseConnection(CFragConnectionID *connID);
OSErr __fastcall CloseCursorComponent(ComponentInstance ci);
OSStatus __fastcall CloseDataBrowserContainer(ControlRef browser, DataBrowserItemID container);
OSStatus __fastcall CloseDrawer(WindowRef inDrawerWindow, Boolean inAsync);
OSErr __fastcall CloseMixerSoundComponent(ComponentInstance ci);
void __fastcall CloseOpenTransportInContext(OTClientContextPtr clientContext);
void ClosePicture(void);
void ClosePoly(void);
void __fastcall CloseResFile(__int16 refNum);
void __fastcall CloseRgn(RgnHandle dstRgn);
OSStatus __fastcall CloseStandardSheet(DialogRef inSheet, UInt32 inResultCommand);
OSErr __fastcall CloseTextService(TSMDocumentID idocID, ComponentInstance aComponentInstance);
OSStatus __fastcall CollapseAllWindows(Boolean collapse);
OSStatus __fastcall CollapseWindow(WindowRef window, Boolean collapse);
Boolean __fastcall CollectionTagExists(Collection c, CollectionTag tag);
int __fastcall Color2Index(const RGBColor *myColor);
void __fastcall ColorBit(__int16 whichBit);
Size __fastcall CompactMem(Size cbNeeded);
Boolean __fastcall CompareAndSwap(UInt32 oldVvalue, UInt32 newValue, UInt32 *OldValueAdr);
__int16 __fastcall CompareString(ConstStr255Param aStr, ConstStr255Param bStr, Handle itl2Handle);
__int16 __fastcall CompareText(const void *aPtr, const void *bPtr, __int16 aLen, __int16 bLen, Handle itl2Handle);
int __fastcall ComponentFunctionImplemented(ComponentInstance ci, __int16 ftnNumber);
int __fastcall ComponentSetTarget(ComponentInstance ci, ComponentInstance target);
OSErr __fastcall CompositeIconRef(IconRef backgroundIconRef, IconRef foregroundIconRef, IconRef *compositeIconRef);
OSStatus __fastcall ConstrainWindowToScreen(WindowRef inWindowRef, WindowRegionCode inRegionCode, WindowConstrainOptions inOptions, const Rect *inScreenRect, Rect *outStructure);
OSStatus __fastcall ContextualMenuSelect(MenuRef inMenu, Point inGlobalLocation, Boolean inReserved, UInt32 inHelpType, ConstStr255Param inHelpItemString, const AEDesc *inSelection, UInt32 *outUserSelectionType, SInt16 *outMenuID, MenuItemIndex *outMenuItem);
OSErr __fastcall ContinueSpeech(SpeechChannel chan);
OSErr __fastcall ConvertBundlePreLocator(CFragSystem7LocatorPtr initBlockLocator);
Boolean __fastcall ConvertEventRefToEventRecord(EventRef inEvent, EventRecord *outEvent);
OSStatus __fastcall ConvertFromPStringToUnicode(TextToUnicodeInfo iTextToUnicodeInfo, ConstStr255Param iPascalStr, ByteCount iOutputBufLen, ByteCount *oUnicodeLen, UniChar oUnicodeStr[]);
OSStatus __fastcall ConvertFromTextToUnicode(TextToUnicodeInfo iTextToUnicodeInfo, ByteCount iSourceLen, ConstLogicalAddress iSourceStr, OptionBits iControlFlags, ItemCount iOffsetCount, ByteOffset iOffsetArray[], ItemCount *oOffsetCount, ByteOffset oOffsetArray[], ByteCount iOutputBufLen, ByteCount *oSourceRead, ByteCount *oUnicodeLen, UniChar oUnicodeStr[]);
OSStatus __fastcall ConvertFromUnicodeToPString(UnicodeToTextInfo iUnicodeToTextInfo, ByteCount iUnicodeLen, const UniChar iUnicodeStr[], Str255 oPascalStr);
OSStatus __fastcall ConvertFromUnicodeToScriptCodeRun(UnicodeToTextRunInfo iUnicodeToTextInfo, ByteCount iUnicodeLen, const UniChar iUnicodeStr[], OptionBits iControlFlags, ItemCount iOffsetCount, ByteOffset iOffsetArray[], ItemCount *oOffsetCount, ByteOffset oOffsetArray[], ByteCount iOutputBufLen, ByteCount *oInputRead, ByteCount *oOutputLen, LogicalAddress oOutputStr, ItemCount iScriptRunBufLen, ItemCount *oScriptRunOutLen, ScriptCodeRun oScriptCodeRuns[]);
OSStatus __fastcall ConvertFromUnicodeToText(UnicodeToTextInfo iUnicodeToTextInfo, ByteCount iUnicodeLen, const UniChar iUnicodeStr[], OptionBits iControlFlags, ItemCount iOffsetCount, ByteOffset iOffsetArray[], ItemCount *oOffsetCount, ByteOffset oOffsetArray[], ByteCount iOutputBufLen, ByteCount *oInputRead, ByteCount *oOutputLen, LogicalAddress oOutputStr);
OSStatus __fastcall ConvertFromUnicodeToTextRun(UnicodeToTextRunInfo iUnicodeToTextInfo, ByteCount iUnicodeLen, const UniChar iUnicodeStr[], OptionBits iControlFlags, ItemCount iOffsetCount, ByteOffset iOffsetArray[], ItemCount *oOffsetCount, ByteOffset oOffsetArray[], ByteCount iOutputBufLen, ByteCount *oInputRead, ByteCount *oOutputLen, LogicalAddress oOutputStr, ItemCount iEncodingRunBufLen, ItemCount *oEncodingRunOutLen, TextEncodingRun oEncodingRuns[]);
OSStatus __fastcall ConvertLocalTimeToUTC(UInt32 localSeconds, UInt32 *utcSeconds);
OSStatus __fastcall ConvertLocalToUTCDateTime(const LocalDateTime *localDateTime, UTCDateTime *utcDateTime);
OSStatus __fastcall ConvertUTCToLocalDateTime(const UTCDateTime *utcDateTime, LocalDateTime *localDateTime);
OSStatus __fastcall ConvertUTCToLocalTime(UInt32 utcSeconds, UInt32 *localSeconds);
void __fastcall CopyBits(const BitMap *srcBits, const BitMap *dstBits, const Rect *srcRect, const Rect *dstRect, __int16 mode, RgnHandle maskRgn);
void __fastcall CopyCStringToPascal(const char *src, Str255 dst);
Collection __fastcall CopyCollection(Collection srcCollection, Collection dstCollection);
OSStatus __fastcall CopyControlTitleAsCFString(ControlRef inControl, CFStringRef *outString);
OSStatus __fastcall CopyDataBrowserEditText(ControlRef browser, CFStringRef *text);
void __fastcall CopyDeepMask(const BitMap *srcBits, const BitMap *maskBits, const BitMap *dstBits, const Rect *srcRect, const Rect *maskRect, const Rect *dstRect, __int16 mode, RgnHandle maskRgn);
EventRef __fastcall CopyEvent(EventRef inOther);
void __fastcall CopyMask(const BitMap *srcBits, const BitMap *maskBits, const BitMap *dstBits, const Rect *srcRect, const Rect *maskRect, const Rect *dstRect);
OSStatus __fastcall CopyMenuItemData(MenuRef inMenu, MenuItemID inItem, Boolean inIsCommandID, MenuItemDataPtr ioData);
OSStatus __fastcall CopyMenuItemTextAsCFString(MenuRef inMenu, MenuItemIndex inItem, CFStringRef *outString);
OSStatus __fastcall CopyMenuItems(MenuRef inSourceMenu, MenuItemIndex inFirstItem, ItemCount inNumItems, MenuRef inDestMenu, MenuItemIndex inInsertAfter);
OSStatus __fastcall CopyMenuTitleAsCFString(MenuRef inMenu, CFStringRef *outString);
void __fastcall CopyPalette(PaletteHandle srcPalette, PaletteHandle dstPalette, __int16 srcEntry, __int16 dstEntry, __int16 dstLength);
void __fastcall CopyPascalStringToC(ConstStr255Param src, char *dst);
void __fastcall CopyPixMap(PixMapHandle srcPM, PixMapHandle dstPM);
void __fastcall CopyPixPat(PixPatHandle srcPP, PixPatHandle dstPP);
OSStatus __fastcall CopyProcessName(const ProcessSerialNumber *psn, CFStringRef *name);
void __fastcall CopyRgn(RgnHandle srcRgn, RgnHandle dstRgn);
OSStatus __fastcall CopyThemeIdentifier(CFStringRef *outIdentifier);
OSStatus __fastcall CopyWindowAlternateTitle(WindowRef inWindow, CFStringRef *outTitle);
OSStatus __fastcall CopyWindowGroupName(WindowGroupRef inGroup, CFStringRef *outName);
OSStatus __fastcall CopyWindowTitleAsCFString(WindowRef inWindow, CFStringRef *outString);
__int16 __fastcall Count1Resources(ResType theType);
__int16 Count1Types(void);
SInt32 __fastcall CountCollectionItems(Collection c);
SInt32 __fastcall CountCollectionOwners(Collection c);
SInt32 __fastcall CountCollectionTags(Collection c);
int __fastcall CountComponentInstances(Component aComponent);
int __fastcall CountComponents(ComponentDescription *looking);
DialogItemIndex __fastcall CountDITL(DialogRef theDialog);
OSErr __fastcall CountDragItemFlavors(DragRef theDrag, DragItemRef theItemRef, UInt16 *numFlavors);
OSErr __fastcall CountDragItems(DragRef theDrag, UInt16 *numItems);
UInt16 __fastcall CountMenuItems(MenuRef theMenu);
ItemCount __fastcall CountMenuItemsWithCommandID(MenuRef inMenu, MenuCommand inCommandID);
__int16 __fastcall CountResources(ResType theType);
OSErr __fastcall CountSubControls(ControlRef inControl, UInt16 *outNumChildren);
OSErr __fastcall CountSymbols(CFragConnectionID connID, int *symCount);
SInt32 __fastcall CountTaggedCollectionItems(Collection c, CollectionTag tag);
__int16 CountTypes(void);
OSStatus __fastcall CountUnicodeMappings(OptionBits iFilter, ConstUnicodeMappingPtr iFindMapping, ItemCount *oActualCount);
OSErr __fastcall CountVoices(__int16 *numVoices);
ItemCount __fastcall CountWindowGroupContents(WindowGroupRef inGroup, WindowGroupContentOptions inOptions);
OSStatus __fastcall CreateBevelButtonControl(WindowRef window, const Rect *boundsRect, CFStringRef title, ControlBevelThickness thickness, ControlBevelButtonBehavior behavior, ControlButtonContentInfoPtr info, SInt16 menuID, ControlBevelButtonMenuBehavior menuBehavior, ControlBevelButtonMenuPlacement menuPlacement, ControlRef *outControl);
OSStatus __fastcall CreateCGContextForPort(CGrafPtr inPort, CGContextRef *outContext);
OSStatus __fastcall CreateCGImageFromPixMaps(PixMapHandle inImage, PixMapHandle inMask, CGImageRef *outImage);
OSStatus __fastcall CreateChasingArrowsControl(WindowRef window, const Rect *boundsRect, ControlRef *outControl);
OSStatus __fastcall CreateCheckBoxControl(WindowRef window, const Rect *boundsRect, CFStringRef title, SInt32 initialValue, Boolean autoToggle, ControlRef *outControl);
OSStatus __fastcall CreateCheckGroupBoxControl(WindowRef window, const Rect *boundsRect, CFStringRef title, SInt32 initialValue, Boolean primary, Boolean autoToggle, ControlRef *outControl);
OSStatus __fastcall CreateClockControl(WindowRef window, const Rect *boundsRect, ControlClockType clockType, ControlClockFlags clockFlags, ControlRef *outControl);
OSErr __fastcall CreateCompDescriptor(DescType comparisonOperator, AEDesc *operand1, AEDesc *operand2, Boolean disposeInputs, AEDesc *theDescriptor);
OSStatus __fastcall CreateCustomControl(WindowRef owningWindow, const Rect *contBounds, const ControlDefSpec *def, Collection initData, ControlRef *outControl);
OSStatus __fastcall CreateCustomList(const Rect *rView, const ListBounds *dataBounds, Point cellSize, const ListDefSpec *theSpec, WindowRef theWindow, Boolean drawIt, Boolean hasGrow, Boolean scrollHoriz, Boolean scrollVert, ListHandle *outList);
OSStatus __fastcall CreateCustomMenu(const MenuDefSpec *inDefSpec, MenuID inMenuID, MenuAttributes inMenuAttributes, MenuRef *outMenuRef);
OSStatus __fastcall CreateCustomWindow(const WindowDefSpec *def, WindowClass windowClass, WindowAttributes attributes, const Rect *contentBounds, WindowRef *outWindow);
OSStatus __fastcall CreateDataBrowserControl(WindowRef window, const Rect *boundsRect, DataBrowserViewStyle style, ControlRef *outControl);
OSStatus __fastcall CreateDisclosureButtonControl(WindowRef inWindow, const Rect *inBoundsRect, SInt32 inValue, Boolean inAutoToggles, ControlRef *outControl);
OSStatus __fastcall CreateDisclosureTriangleControl(WindowRef inWindow, const Rect *inBoundsRect, ControlDisclosureTriangleOrientation inOrientation, CFStringRef inTitle, SInt32 inInitialValue, Boolean inDrawTitle, Boolean inAutoToggles, ControlRef *outControl);
OSStatus __fastcall CreateEditTextControl(WindowRef window, const Rect *boundsRect, CFStringRef text, Boolean isPassword, Boolean useInlineInput, const ControlFontStyleRec *style, ControlRef *outControl);
OSStatus __fastcall CreateEditUnicodeTextControl(WindowRef window, const Rect *boundsRect, CFStringRef text, Boolean isPassword, const ControlFontStyleRec *style, ControlRef *outControl);
OSStatus __fastcall CreateEvent(CFAllocatorRef inAllocator, UInt32 inClassID, UInt32 kind, EventTime when, EventAttributes flags, EventRef *outEvent);
OSStatus __fastcall CreateGroupBoxControl(WindowRef window, const Rect *boundsRect, CFStringRef title, Boolean primary, ControlRef *outControl);
OSStatus __fastcall CreateIconControl(WindowRef inWindow, const Rect *inBoundsRect, const ControlButtonContentInfo *inIconContent, Boolean inDontTrack, ControlRef *outControl);
OSStatus __fastcall CreateImageWellControl(WindowRef window, const Rect *boundsRect, const ControlButtonContentInfo *info, ControlRef *outControl);
OSStatus __fastcall CreateListBoxControl(WindowRef window, const Rect *boundsRect, Boolean autoSize, SInt16 numRows, SInt16 numColumns, Boolean horizScroll, Boolean vertScroll, SInt16 cellHeight, SInt16 cellWidth, Boolean hasGrowSpace, const ListDefSpec *listDef, ControlRef *outControl);
OSStatus __fastcall CreateLittleArrowsControl(WindowRef window, const Rect *boundsRect, SInt32 value, SInt32 minimum, SInt32 maximum, SInt32 increment, ControlRef *outControl);
OSErr __fastcall CreateLogicalDescriptor(AEDescList *theLogicalTerms, DescType theLogicOperator, Boolean disposeInputs, AEDesc *theDescriptor);
OSStatus __fastcall CreateMenuBarFromNib(IBNibRef inNibRef, CFStringRef inName, Handle *outMenuBar);
OSStatus __fastcall CreateMenuFromNib(IBNibRef inNibRef, CFStringRef inName, MenuRef *outMenuRef);
OSStatus __fastcall CreateMouseTrackingRegion(WindowRef inWindow, RgnHandle inRegion, RgnHandle inClip, MouseTrackingOptions inOptions, MouseTrackingRegionID inID, void *inRefCon, EventTargetRef inTargetToNotify, MouseTrackingRef *outTrackingRef);
OSStatus __fastcall CreateNewMenu(MenuID inMenuID, MenuAttributes inMenuAttributes, MenuRef *outMenuRef);
CGrafPtr CreateNewPort(void);
CGrafPtr __fastcall CreateNewPortForCGDisplayID(UInt32 inCGDisplayID);
OSStatus __fastcall CreateNewWindow(WindowClass windowClass, WindowAttributes attributes, const Rect *contentBounds, WindowRef *outWindow);
OSStatus __fastcall CreateNibReference(CFStringRef inNibName, IBNibRef *outNibRef);
OSStatus __fastcall CreateNibReferenceWithCFBundle(CFBundleRef inBundle, CFStringRef inNibName, IBNibRef *outNibRef);
OSErr __fastcall CreateObjSpecifier(DescType desiredClass, AEDesc *theContainer, DescType keyForm, AEDesc *keyData, Boolean disposeInputs, AEDesc *objSpecifier);
OSErr __fastcall CreateOffsetDescriptor(int theOffset, AEDesc *theDescriptor);
OSStatus __fastcall CreatePictureControl(WindowRef window, const Rect *boundsRect, const ControlButtonContentInfo *content, Boolean dontTrack, ControlRef *outControl);
OSStatus __fastcall CreatePlacardControl(WindowRef window, const Rect *boundsRect, ControlRef *outControl);
OSStatus __fastcall CreatePopupArrowControl(WindowRef window, const Rect *boundsRect, ControlPopupArrowOrientation orientation, ControlPopupArrowSize size, ControlRef *outControl);
OSStatus __fastcall CreatePopupButtonControl(WindowRef window, const Rect *boundsRect, CFStringRef title, SInt16 menuID, Boolean variableWidth, SInt16 titleWidth, SInt16 titleJustification, Style titleStyle, ControlRef *outControl);
OSStatus __fastcall CreatePopupGroupBoxControl(WindowRef window, const Rect *boundsRect, CFStringRef title, Boolean primary, SInt16 menuID, Boolean variableWidth, SInt16 titleWidth, SInt16 titleJustification, Style titleStyle, ControlRef *outControl);
OSStatus __fastcall CreateProgressBarControl(WindowRef window, const Rect *boundsRect, SInt32 value, SInt32 minimum, SInt32 maximum, Boolean indeterminate, ControlRef *outControl);
OSStatus __fastcall CreatePushButtonControl(WindowRef window, const Rect *boundsRect, CFStringRef title, ControlRef *outControl);
OSStatus __fastcall CreatePushButtonWithIconControl(WindowRef window, const Rect *boundsRect, CFStringRef title, ControlButtonContentInfo *icon, ControlPushButtonIconAlignment iconAlignment, ControlRef *outControl);
OSStatus __fastcall CreateQDContextForCollapsedWindowDockTile(WindowRef inWindow, CGrafPtr *outContext);
OSStatus __fastcall CreateRadioButtonControl(WindowRef window, const Rect *boundsRect, CFStringRef title, SInt32 initialValue, Boolean autoToggle, ControlRef *outControl);
OSStatus __fastcall CreateRadioGroupControl(WindowRef window, const Rect *boundsRect, ControlRef *outControl);
OSErr __fastcall CreateRangeDescriptor(AEDesc *rangeStart, AEDesc *rangeStop, Boolean disposeInputs, AEDesc *theDescriptor);
OSStatus __fastcall CreateRelevanceBarControl(WindowRef window, const Rect *boundsRect, SInt32 value, SInt32 minimum, SInt32 maximum, ControlRef *outControl);
OSErr __fastcall CreateRootControl(WindowRef inWindow, ControlRef *outControl);
OSStatus __fastcall CreateRoundButtonControl(WindowRef inWindow, const Rect *inBoundsRect, ControlRoundButtonSize inSize, ControlButtonContentInfo *inContent, ControlRef *outControl);
OSStatus __fastcall CreateScrollBarControl(WindowRef window, const Rect *boundsRect, SInt32 value, SInt32 minimum, SInt32 maximum, SInt32 viewSize, Boolean liveTracking, ControlActionUPP liveTrackingProc, ControlRef *outControl);
OSStatus __fastcall CreateScrollingTextBoxControl(WindowRef window, const Rect *boundsRect, SInt16 contentResID, Boolean autoScroll, UInt32 delayBeforeAutoScroll, UInt32 delayBetweenAutoScroll, UInt16 autoScrollAmount, ControlRef *outControl);
OSStatus __fastcall CreateSeparatorControl(WindowRef window, const Rect *boundsRect, ControlRef *outControl);
OSStatus __fastcall CreateSliderControl(WindowRef window, const Rect *boundsRect, SInt32 value, SInt32 minimum, SInt32 maximum, ControlSliderOrientation orientation, UInt16 numTickMarks, Boolean liveTracking, ControlActionUPP liveTrackingProc, ControlRef *outControl);
OSStatus __fastcall CreateStandardAlert(AlertType alertType, CFStringRef error, CFStringRef explanation, const AlertStdCFStringAlertParamRec *param, DialogRef *outAlert);
OSStatus __fastcall CreateStandardFontMenu(MenuRef menu, MenuItemIndex afterItem, MenuID firstHierMenuID, OptionBits options, ItemCount *outHierMenuCount);
OSStatus __fastcall CreateStandardSheet(AlertType alertType, CFStringRef error, CFStringRef explanation, const AlertStdCFStringAlertParamRec *param, EventTargetRef notifyTarget, DialogRef *outSheet);
OSStatus __fastcall CreateStandardWindowMenu(OptionBits inOptions, MenuRef *outMenu);
OSStatus __fastcall CreateStaticTextControl(WindowRef window, const Rect *boundsRect, CFStringRef text, const ControlFontStyleRec *style, ControlRef *outControl);
OSStatus __fastcall CreateTabsControl(WindowRef window, const Rect *boundsRect, ControlTabSize size, ControlTabDirection direction, UInt16 numTabs, const ControlTabEntry *tabArray, ControlRef *outControl);
TextEncoding __fastcall CreateTextEncoding(TextEncodingBase encodingBase, TextEncodingVariant encodingVariant, TextEncodingFormat encodingFormat);
OSStatus __fastcall CreateTextToUnicodeInfo(ConstUnicodeMappingPtr iUnicodeMapping, TextToUnicodeInfo *oTextToUnicodeInfo);
OSStatus __fastcall CreateTextToUnicodeInfoByEncoding(TextEncoding iEncoding, TextToUnicodeInfo *oTextToUnicodeInfo);
OSErr __fastcall CreateThreadPool(ThreadStyle threadStyle, SInt16 numToCreate, Size stackSize);
CFStringRef __fastcall CreateTypeStringWithOSType(OSType inType);
OSStatus __fastcall CreateUnicodeToTextInfo(ConstUnicodeMappingPtr iUnicodeMapping, UnicodeToTextInfo *oUnicodeToTextInfo);
OSStatus __fastcall CreateUnicodeToTextInfoByEncoding(TextEncoding iEncoding, UnicodeToTextInfo *oUnicodeToTextInfo);
OSStatus __fastcall CreateUnicodeToTextRunInfo(ItemCount iNumberOfMappings, const UnicodeMapping iUnicodeMappings[], UnicodeToTextRunInfo *oUnicodeToTextInfo);
OSStatus __fastcall CreateUnicodeToTextRunInfoByEncoding(ItemCount iNumberOfEncodings, const TextEncoding iEncodings[], UnicodeToTextRunInfo *oUnicodeToTextInfo);
OSStatus __fastcall CreateUnicodeToTextRunInfoByScriptCode(ItemCount iNumberOfScriptCodes, const ScriptCode iScripts[], UnicodeToTextRunInfo *oUnicodeToTextInfo);
OSStatus __fastcall CreateUserPaneControl(WindowRef window, const Rect *boundsRect, UInt32 features, ControlRef *outControl);
OSStatus __fastcall CreateWindowFromCollection(Collection collection, WindowRef *outWindow);
OSStatus __fastcall CreateWindowFromNib(IBNibRef inNibRef, CFStringRef inName, WindowRef *outWindow);
OSStatus __fastcall CreateWindowFromResource(SInt16 resID, WindowRef *outWindow);
OSStatus __fastcall CreateWindowGroup(WindowGroupAttributes inAttributes, WindowGroupRef *outGroup);
OSStatus __fastcall CreateWindowHeaderControl(WindowRef window, const Rect *boundsRect, Boolean isListHeader, ControlRef *outControl);
__int16 CurResFile(void);
__int16 CurrentProcessorSpeed(void);
OSErr __fastcall CursorComponentChanged(ComponentInstance ci);
OSErr __fastcall CursorComponentSetData(ComponentInstance ci, int data);
MACRO__A _D;
OSStatus __fastcall DCMAddRecord(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, Boolean checkOnly, const AEDesc *dataList, DCMUniqueID *newUniqueID);
OSStatus __fastcall DCMCloseDictionary(DCMDictionaryRef dictionaryRef);
OSStatus __fastcall DCMCompactDictionary(DCMDictionaryID dictionaryID, DCMProgressFilterUPP progressProc, UInt32 userData);
ItemCount __fastcall DCMCountObjectIterator(DCMObjectIterator iterator);
OSStatus __fastcall DCMCountRecord(DCMDictionaryID dictionaryID, ItemCount *count);
ItemCount __fastcall DCMCountRecordIterator(DCMFoundRecordIterator recordIterator);
OSStatus __fastcall DCMCreateAccessMethodIterator(DCMAccessMethodIterator *accessMethodIterator);
OSStatus __fastcall DCMCreateDictionaryIterator(DCMDictionaryIterator *dictionaryIterator);
OSStatus __fastcall DCMCreateFieldInfoRecord(DescType fieldTag, DescType fieldType, ByteCount maxRecordSize, DCMFieldAttributes fieldAttributes, AEDesc *fieldDefaultData, ItemCount numberOfFindMethods, DCMFindMethod findMethods[], AEDesc *fieldInfoRecord);
OSStatus __fastcall DCMDeleteDictionary(DCMDictionaryID dictionaryID);
OSStatus __fastcall DCMDeleteRecord(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMUniqueID uniqueID);
OSStatus __fastcall DCMDeriveNewDictionary(DCMDictionaryID srcDictionary, const FSSpec *newDictionaryFile, ScriptCode scriptTag, Boolean invisible, ItemCount recordCapacity, DCMDictionaryID *newDictionary);
OSStatus __fastcall DCMDisposeObjectIterator(DCMObjectIterator iterator);
OSStatus __fastcall DCMDisposeRecordIterator(DCMFoundRecordIterator recordIterator);
OSStatus __fastcall DCMFindRecords(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMFindMethod findMethod, ItemCount preFetchedDataNum, DCMFieldTag preFetchedData[], ItemCount skipCount, ItemCount maxRecordCount, DCMFoundRecordIterator *recordIterator);
OSStatus __fastcall DCMGetAccessMethodIDFromName(ConstStr63Param accessMethodName, DCMAccessMethodID *accessMethodID);
OSStatus __fastcall DCMGetDictionaryFieldInfo(DCMDictionaryID dictionaryID, DCMFieldTag fieldTag, AEDesc *fieldInfoRecord);
OSStatus __fastcall DCMGetDictionaryIDFromFile(const FSSpec *fileRef, DCMDictionaryID *dictionaryID);
DCMDictionaryID __fastcall DCMGetDictionaryIDFromRef(DCMDictionaryRef dictionaryRef);
OSStatus __fastcall DCMGetDictionaryProperty(DCMDictionaryID dictionaryID, DCMFieldTag propertyTag, ByteCount maxPropertySize, ByteCount *actualSize, LogicalAddress propertyValue);
OSStatus __fastcall DCMGetDictionaryPropertyList(DCMDictionaryID dictionaryID, ItemCount maxPropertyNum, ItemCount *numProperties, DCMFieldTag propertyTag[]);
OSStatus __fastcall DCMGetDictionaryWriteAccess(DCMDictionaryRef dictionaryRef, Duration timeOutDuration);
OSStatus __fastcall DCMGetFieldAttributes(const AEDesc *fieldInfoRecord, DCMFieldAttributes *attributes);
OSStatus __fastcall DCMGetFieldData(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMUniqueID uniqueID, ItemCount numOfData, const DCMFieldTag dataTag[], AEDesc *dataList);
OSStatus __fastcall DCMGetFieldDefaultData(const AEDesc *fieldInfoRecord, DescType desiredType, AEDesc *fieldDefaultData);
OSStatus __fastcall DCMGetFieldFindMethods(const AEDesc *fieldInfoRecord, ItemCount findMethodsArrayMaxSize, DCMFindMethod findMethods[], ItemCount *actualNumberOfFindMethods);
OSStatus __fastcall DCMGetFieldMaxRecordSize(const AEDesc *fieldInfoRecord, ByteCount *maxRecordSize);
OSStatus __fastcall DCMGetFieldTagAndType(const AEDesc *fieldInfoRecord, DCMFieldTag *fieldTag, DCMFieldType *fieldType);
OSStatus __fastcall DCMGetFileFromDictionaryID(DCMDictionaryID dictionaryID, FSSpec *fileRef);
OSStatus __fastcall DCMGetNextRecord(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMUniqueID uniqueID, ByteCount maxKeySize, ByteCount *nextKeySize, LogicalAddress nextKeyData, DCMUniqueID *nextUniqueID);
OSStatus __fastcall DCMGetNthRecord(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ItemCount serialNum, ByteCount maxKeySize, ByteCount *keySize, LogicalAddress keyData, DCMUniqueID *uniqueID);
OSStatus __fastcall DCMGetPrevRecord(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMUniqueID uniqueID, ByteCount maxKeySize, ByteCount *prevKeySize, LogicalAddress prevKeyData, DCMUniqueID *prevUniqueID);
OSStatus __fastcall DCMGetRecordSequenceNumber(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMUniqueID uniqueID, ItemCount *sequenceNum);
OSStatus __fastcall DCMIterateFoundRecord(DCMFoundRecordIterator recordIterator, ByteCount maxKeySize, ByteCount *actualKeySize, LogicalAddress keyData, DCMUniqueID *uniqueID, AEDesc *dataList);
OSStatus __fastcall DCMIterateObject(DCMObjectIterator iterator, DCMObjectID *objectID);
UInt32 DCMLibraryVersion(void);
OSStatus __fastcall DCMNewDictionary(DCMAccessMethodID accessMethodID, const FSSpec *newDictionaryFile, ScriptCode scriptTag, const AEDesc *listOfFieldInfoRecords, Boolean invisible, ItemCount recordCapacity, DCMDictionaryID *newDictionary);
OSStatus __fastcall DCMOpenDictionary(DCMDictionaryID dictionaryID, ByteCount protectKeySize, ConstLogicalAddress protectKey, DCMDictionaryRef *dictionaryRef);
OSStatus __fastcall DCMRegisterDictionaryFile(const FSSpec *dictionaryFile, DCMDictionaryID *dictionaryID);
OSStatus __fastcall DCMReleaseDictionaryWriteAccess(DCMDictionaryRef dictionaryRef, Boolean commitTransaction);
OSStatus __fastcall DCMReorganizeDictionary(DCMDictionaryID dictionaryID, ItemCount extraCapacity, DCMProgressFilterUPP progressProc, UInt32 userData);
OSStatus __fastcall DCMResetObjectIterator(DCMObjectIterator iterator);
OSStatus __fastcall DCMSetDictionaryProperty(DCMDictionaryID dictionaryID, DCMFieldTag propertyTag, ByteCount propertySize, ConstLogicalAddress propertyValue);
OSStatus __fastcall DCMSetFieldData(DCMDictionaryRef dictionaryRef, DCMFieldTag keyFieldTag, ByteCount keySize, ConstLogicalAddress keyData, DCMUniqueID uniqueID, const AEDesc *dataList);
OSStatus __fastcall DCMUnregisterDictionary(DCMDictionaryID dictionaryID);
MACRO__DECLARE DECLARE_CS_QD_API_;
OSErr __fastcall DMAddDisplay(GDHandle newDevice, __int16 driver, unsigned int mode, unsigned int reserved, unsigned int displayID, Component displayComponent, Handle displayState);
OSErr __fastcall DMBeginConfigureDisplays(Handle *displayState);
OSErr DMBlockMirroring(void);
OSErr __fastcall DMCanMirrorNow(Boolean *canMirrorNow);
OSErr __fastcall DMCheckDisplayMode(GDHandle theDevice, unsigned int mode, unsigned int depthMode, unsigned int *switchFlags, unsigned int reserved, Boolean *modeOk);
OSErr __fastcall DMConfirmConfiguration(DMModalFilterUPP filterProc, UInt32 confirmFlags, UInt32 reserved, Handle displayState);
OSErr __fastcall DMDisableDisplay(GDHandle disableDevice, Handle displayState);
OSErr __fastcall DMDisposeAVComponent(Component theAVComponent);
OSErr __fastcall DMDisposeDisplay(GDHandle disposeDevice, Handle displayState);
OSErr __fastcall DMDisposeList(DMListType panelList);
void __fastcall DMDrawDesktopRect(Rect *globalRect);
void __fastcall DMDrawDesktopRegion(RgnHandle globalRgn);
OSErr __fastcall DMEnableDisplay(GDHandle enableDevice, Handle displayState);
OSErr __fastcall DMEndConfigureDisplays(Handle displayState);
OSErr __fastcall DMGetAVPowerState(AVIDType theID, AVPowerStatePtr getPowerState, unsigned int reserved1);
OSErr __fastcall DMGetDeskRegion(RgnHandle *desktopRegion);
OSErr __fastcall DMGetDeviceAVIDByPortAVID(AVIDType portAVID, AVIDType *deviceAVID);
OSErr __fastcall DMGetDeviceComponentByAVID(AVIDType theDeviceID, Component *theDeviceComponent, ComponentDescription *theDesciption, ResType *theDeviceKind);
OSErr __fastcall DMGetDisplayComponent(GDHandle theDevice, Component *displayComponent);
OSErr __fastcall DMGetDisplayIDByGDevice(GDHandle displayDevice, DisplayIDType *displayID, Boolean failToMain);
OSErr __fastcall DMGetDisplayMode(GDHandle theDevice, VDSwitchInfoPtr switchInfo);
OSErr __fastcall DMGetEnableByAVID(AVIDType theAVID, Boolean *isAVIDEnabledNow, Boolean *canChangeEnableNow);
GDHandle __fastcall DMGetFirstScreenDevice(Boolean activeOnly);
OSErr __fastcall DMGetGDeviceByDisplayID(DisplayIDType displayID, GDHandle *displayDevice, Boolean failToMain);
OSErr __fastcall DMGetGraphicInfoByAVID(AVIDType theID, PicHandle *theAVPcit, Handle *theAVIconSuite, AVLocationRec *theAVLocation);
OSErr __fastcall DMGetIndexedComponentFromList(DMListType panelList, DMListIndexType itemIndex, unsigned int reserved, DMComponentListIteratorUPP listIterator, void *userData);
OSErr __fastcall DMGetIndexedDisplayModeFromList(DMListType panelList, DMListIndexType itemIndex, unsigned int reserved, DMDisplayModeListIteratorUPP listIterator, void *userData);
OSErr __fastcall DMGetNameByAVID(AVIDType theID, unsigned int nameFlags, Str255 name);
OSErr __fastcall DMGetNextMirroredDevice(GDHandle gDevice, GDHandle *mirroredDevice);
GDHandle __fastcall DMGetNextScreenDevice(GDHandle theDevice, Boolean activeOnly);
OSErr __fastcall DMGetPortComponentByAVID(DisplayIDType thePortID, Component *thePortComponent, ComponentDescription *theDesciption, ResType *thePortKind);
OSErr __fastcall DMIsMirroringOn(Boolean *isMirroringOn);
OSErr __fastcall DMMirrorDevices(GDHandle gD1, GDHandle gD2, Handle displayState);
OSErr __fastcall DMMoveDisplay(GDHandle moveDevice, __int16 x, __int16 y, Handle displayState);
OSErr __fastcall DMNewAVDeviceList(ResType deviceType, unsigned int deviceListFlags, unsigned int reserved, DMListIndexType *deviceCount, DMListType *deviceList);
OSErr __fastcall DMNewAVEngineList(DisplayIDType displayID, ResType engineType, DMFidelityType minimumFidelity, unsigned int engineListFlags, unsigned int reserved, DMListIndexType *engineCount, DMListType *engineList);
OSErr __fastcall DMNewAVIDByDeviceComponent(Component theDeviceComponent, ResType portKind, unsigned int reserved, DisplayIDType *newID);
OSErr __fastcall DMNewAVIDByPortComponent(Component thePortComponent, ResType portKind, unsigned int reserved, AVIDType *newID);
OSErr __fastcall DMNewAVPanelList(DisplayIDType displayID, ResType panelType, DMFidelityType minimumFidelity, unsigned int panelListFlags, unsigned int reserved, DMListIndexType *thePanelCount, DMListType *thePanelList);
OSErr __fastcall DMNewAVPortListByDeviceAVID(AVIDType theID, DMFidelityType minimumFidelity, unsigned int portListFlags, unsigned int reserved, DMListIndexType *devicePortCount, DMListType *theDevicePortList);
OSErr __fastcall DMNewAVPortListByPortType(ResType subType, unsigned int portListFlags, unsigned int reserved, DMListIndexType *devicePortCount, DMListType *theDevicePortList);
OSErr __fastcall DMNewDisplay(GDHandle *newDevice, __int16 driverRefNum, unsigned int mode, unsigned int reserved, DisplayIDType displayID, Component displayComponent, Handle displayState);
OSErr __fastcall DMNewDisplayModeList(DisplayIDType displayID, unsigned int modeListFlags, unsigned int reserved, DMListIndexType *thePanelCount, DMListType *thePanelList);
OSErr __fastcall DMQDIsMirroringCapable(Boolean *qdIsMirroringCapable);
OSErr __fastcall DMRegisterExtendedNotifyProc(DMExtendedNotificationUPP notifyProc, void *notifyUserData, unsigned __int16 nofifyOnFlags, DMProcessInfoPtr whichPSN);
OSErr __fastcall DMRegisterNotifyProc(DMNotificationUPP notificationProc, DMProcessInfoPtr whichPSN);
OSErr __fastcall DMRemoveDisplay(GDHandle removeDevice, Handle displayState);
OSErr __fastcall DMRemoveExtendedNotifyProc(DMExtendedNotificationUPP notifyProc, void *notifyUserData, DMProcessInfoPtr whichPSN, unsigned __int16 removeFlags);
OSErr __fastcall DMRemoveNotifyProc(DMNotificationUPP notificationProc, DMProcessInfoPtr whichPSN);
OSErr DMResolveDisplayComponents(void);
OSErr __fastcall DMSaveScreenPrefs(unsigned int reserved1, unsigned int saveFlags, unsigned int reserved2);
OSErr __fastcall DMSendDependentNotification(ResType notifyType, ResType notifyClass, AVIDType displayID, ComponentInstance notifyComponent);
OSErr __fastcall DMSetAVPowerState(AVIDType theID, AVPowerStatePtr setPowerState, unsigned int powerFlags, Handle displayState);
OSErr __fastcall DMSetDisplayComponent(GDHandle theDevice, Component displayComponent);
OSErr __fastcall DMSetDisplayMode(GDHandle theDevice, unsigned int mode, unsigned int *depthMode, unsigned int reserved, Handle displayState);
OSErr __fastcall DMSetEnableByAVID(AVIDType theAVID, Boolean doEnable, Handle displayState);
OSErr __fastcall DMSetMainDisplay(GDHandle newMainDevice, Handle displayState);
OSErr DMUnblockMirroring(void);
OSErr __fastcall DMUnmirrorDevice(GDHandle gDevice, Handle displayState);
OSErr __fastcall DTInstall(DeferredTaskPtr dtTaskPtr);
void __fastcall DateString(int dateTime, DateForm longFlag, Str255 result, Handle intlHandle);
void __fastcall DateToSeconds(const DateTimeRec *d, unsigned int *secs);
OSErr __fastcall DeactivateControl(ControlRef inControl);
OSErr __fastcall DeactivateTSMDocument(TSMDocumentID idocID);
ComponentResult __fastcall DeactivateTextService(ComponentInstance ts);
void __fastcall DebugAssert(OSType componentSignature, UInt32 options, const char *assertionString, const char *exceptionLabelString, const char *errorString, const char *fileName, int lineNumber, void *value);
void DebugPrintAllWindowGroups(void);
void __fastcall DebugPrintWindowGroup(WindowGroupRef inGroup);
void __fastcall DebugStr(ConstStr255Param debuggerMsg);
void Debugger(void);
SInt32 __fastcall DecrementAtomic(SInt32 *value);
SInt16 __fastcall DecrementAtomic16(SInt16 *value);
SInt8 __fastcall DecrementAtomic8(SInt8 *value);
void __fastcall DelComp(ColorComplementUPP compProc);
void __fastcall DelSearch(ColorSearchUPP searchProc);
void __fastcall Delay(unsigned int numTicks, unsigned int *finalTicks);
OSErr DelaySystemIdle(void);
int __fastcall DelegateComponentCall(ComponentParameters *originalParams, ComponentInstance ci);
OSErr __fastcall DeleteGestaltValue(OSType selector);
void __fastcall DeleteMCEntries(MenuID menuID, __int16 menuItem);
void __fastcall DeleteMenu(MenuID menuID);
void __fastcall DeleteMenuItem(MenuRef theMenu, __int16 item);
OSStatus __fastcall DeleteMenuItems(MenuRef inMenu, MenuItemIndex inFirstItem, ItemCount inNumItems);
OSErr __fastcall DeleteTSMDocument(TSMDocumentID idocID);
int __fastcall DeltaPoint(Point ptA, Point ptB);
OSErr __fastcall Dequeue(QElemPtr qElement, QHdrPtr qHeader);
OSStatus __fastcall DeselectTextService(Component aComp);
void __fastcall DetachResource(Handle theResource);
OSErr __fastcall DetachResourceFile(SInt16 refNum);
void __fastcall DeviceLoop(RgnHandle drawingRgn, DeviceLoopDrawingUPP drawingProc, int userData, DeviceLoopFlags flags);
void __fastcall DialogCopy(DialogRef theDialog);
void __fastcall DialogCut(DialogRef theDialog);
void __fastcall DialogDelete(DialogRef theDialog);
void __fastcall DialogPaste(DialogRef theDialog);
Boolean __fastcall DialogSelect(const EventRecord *theEvent, DialogRef *theDialog, DialogItemIndex *itemHit);
void __fastcall DiffRgn(RgnHandle srcRgnA, RgnHandle srcRgnB, RgnHandle dstRgn);
void __fastcall DimmingControl(Boolean enableSleep);
OSErr __fastcall DirCreate(__int16 vRefNum, int parentDirID, ConstStr255Param directoryName, int *createdDirID);
void __fastcall DisableAllMenuItems(MenuRef theMenu);
OSStatus __fastcall DisableControl(ControlRef inControl);
void DisableIdle(void);
void __fastcall DisableMenuCommand(MenuRef inMenu, MenuCommand inCommandID);
void __fastcall DisableMenuItem(MenuRef theMenu, MenuItemIndex item);
void __fastcall DisableMenuItemIcon(MenuRef theMenu, MenuItemIndex item);
OSStatus DisableScreenUpdates(void);
OSErr DisableWUTime(void);
void __fastcall DisposeAECoerceDescUPP(AECoerceDescUPP userUPP);
void __fastcall DisposeAECoercePtrUPP(AECoercePtrUPP userUPP);
void __fastcall DisposeAEDisposeExternalUPP(AEDisposeExternalUPP userUPP);
void __fastcall DisposeAEEventHandlerUPP(AEEventHandlerUPP userUPP);
void __fastcall DisposeAEFilterUPP(AEFilterUPP userUPP);
void __fastcall DisposeAEIdleUPP(AEIdleUPP userUPP);
void __fastcall DisposeATSCubicClosePathUPP(ATSCubicClosePathUPP userUPP);
void __fastcall DisposeATSCubicCurveToUPP(ATSCubicCurveToUPP userUPP);
void __fastcall DisposeATSCubicLineToUPP(ATSCubicLineToUPP userUPP);
void __fastcall DisposeATSCubicMoveToUPP(ATSCubicMoveToUPP userUPP);
void __fastcall DisposeATSQuadraticClosePathUPP(ATSQuadraticClosePathUPP userUPP);
void __fastcall DisposeATSQuadraticCurveUPP(ATSQuadraticCurveUPP userUPP);
void __fastcall DisposeATSQuadraticLineUPP(ATSQuadraticLineUPP userUPP);
void __fastcall DisposeATSQuadraticNewPathUPP(ATSQuadraticNewPathUPP userUPP);
void __fastcall DisposeATSUDirectLayoutOperationOverrideUPP(ATSUDirectLayoutOperationOverrideUPP userUPP);
void __fastcall DisposeAVLCompareItemsUPP(AVLCompareItemsUPP userUPP);
void __fastcall DisposeAVLDisposeItemUPP(AVLDisposeItemUPP userUPP);
void __fastcall DisposeAVLItemSizeUPP(AVLItemSizeUPP userUPP);
void __fastcall DisposeAVLWalkUPP(AVLWalkUPP userUPP);
void __fastcall DisposeAliasFilterUPP(AliasFilterUPP userUPP);
void __fastcall DisposeCCursor(CCrsrHandle cCrsr);
void __fastcall DisposeCIcon(CIconHandle theIcon);
void __fastcall DisposeCMBitmapCallBackUPP(CMBitmapCallBackUPP userUPP);
void __fastcall DisposeCMConcatCallBackUPP(CMConcatCallBackUPP userUPP);
void __fastcall DisposeCMFlattenUPP(CMFlattenUPP userUPP);
void __fastcall DisposeCMMIterateUPP(CMMIterateUPP userUPP);
void __fastcall DisposeCMProfileAccessUPP(CMProfileAccessUPP userUPP);
void __fastcall DisposeCMProfileFilterUPP(CMProfileFilterUPP userUPP);
void __fastcall DisposeCMProfileIterateUPP(CMProfileIterateUPP userUPP);
void __fastcall DisposeCTable(CTabHandle cTable);
void __fastcall DisposeCalcColorTableUPP(CalcColorTableUPP userUPP);
void __fastcall DisposeCalibrateEventUPP(CalibrateEventUPP userUPP);
void __fastcall DisposeCalibrateUPP(CalibrateUPP userUPP);
void __fastcall DisposeCanCalibrateUPP(CanCalibrateUPP userUPP);
void __fastcall DisposeCaretHookUPP(CaretHookUPP userUPP);
void __fastcall DisposeCollection(Collection c);
void __fastcall DisposeCollectionExceptionUPP(CollectionExceptionUPP userUPP);
void __fastcall DisposeCollectionFlattenUPP(CollectionFlattenUPP userUPP);
void __fastcall DisposeColorChangedUPP(ColorChangedUPP userUPP);
void __fastcall DisposeColorComplementUPP(ColorComplementUPP userUPP);
void __fastcall DisposeColorSearchUPP(ColorSearchUPP userUPP);
void __fastcall DisposeComponentFunctionUPP(ComponentFunctionUPP userUPP);
void __fastcall DisposeComponentMPWorkFunctionUPP(ComponentMPWorkFunctionUPP userUPP);
void __fastcall DisposeComponentRoutineUPP(ComponentRoutineUPP userUPP);
void __fastcall DisposeControl(ControlRef theControl);
void __fastcall DisposeControlActionUPP(ControlActionUPP userUPP);
void __fastcall DisposeControlCNTLToCollectionUPP(ControlCNTLToCollectionUPP userUPP);
void __fastcall DisposeControlColorUPP(ControlColorUPP userUPP);
void __fastcall DisposeControlDefUPP(ControlDefUPP userUPP);
void __fastcall DisposeControlEditTextValidationUPP(ControlEditTextValidationUPP userUPP);
void __fastcall DisposeControlKeyFilterUPP(ControlKeyFilterUPP userUPP);
void __fastcall DisposeControlUserPaneActivateUPP(ControlUserPaneActivateUPP userUPP);
void __fastcall DisposeControlUserPaneBackgroundUPP(ControlUserPaneBackgroundUPP userUPP);
void __fastcall DisposeControlUserPaneDrawUPP(ControlUserPaneDrawUPP userUPP);
void __fastcall DisposeControlUserPaneFocusUPP(ControlUserPaneFocusUPP userUPP);
void __fastcall DisposeControlUserPaneHitTestUPP(ControlUserPaneHitTestUPP userUPP);
void __fastcall DisposeControlUserPaneIdleUPP(ControlUserPaneIdleUPP userUPP);
void __fastcall DisposeControlUserPaneKeyDownUPP(ControlUserPaneKeyDownUPP userUPP);
void __fastcall DisposeControlUserPaneTrackingUPP(ControlUserPaneTrackingUPP userUPP);
void __fastcall DisposeDMComponentListIteratorUPP(DMComponentListIteratorUPP userUPP);
void __fastcall DisposeDMDisplayListIteratorUPP(DMDisplayListIteratorUPP userUPP);
void __fastcall DisposeDMDisplayModeListIteratorUPP(DMDisplayModeListIteratorUPP userUPP);
void __fastcall DisposeDMExtendedNotificationUPP(DMExtendedNotificationUPP userUPP);
void __fastcall DisposeDMNotificationUPP(DMNotificationUPP userUPP);
void __fastcall DisposeDMProfileListIteratorUPP(DMProfileListIteratorUPP userUPP);
void __fastcall DisposeDataBrowserAcceptDragUPP(DataBrowserAcceptDragUPP userUPP);
void __fastcall DisposeDataBrowserAddDragItemUPP(DataBrowserAddDragItemUPP userUPP);
void __fastcall DisposeDataBrowserDrawItemUPP(DataBrowserDrawItemUPP userUPP);
void __fastcall DisposeDataBrowserEditItemUPP(DataBrowserEditItemUPP userUPP);
void __fastcall DisposeDataBrowserGetContextualMenuUPP(DataBrowserGetContextualMenuUPP userUPP);
void __fastcall DisposeDataBrowserHitTestUPP(DataBrowserHitTestUPP userUPP);
void __fastcall DisposeDataBrowserItemAcceptDragUPP(DataBrowserItemAcceptDragUPP userUPP);
void __fastcall DisposeDataBrowserItemCompareUPP(DataBrowserItemCompareUPP userUPP);
void __fastcall DisposeDataBrowserItemDataUPP(DataBrowserItemDataUPP userUPP);
void __fastcall DisposeDataBrowserItemDragRgnUPP(DataBrowserItemDragRgnUPP userUPP);
void __fastcall DisposeDataBrowserItemHelpContentUPP(DataBrowserItemHelpContentUPP userUPP);
void __fastcall DisposeDataBrowserItemNotificationUPP(DataBrowserItemNotificationUPP userUPP);
void __fastcall DisposeDataBrowserItemNotificationWithItemUPP(DataBrowserItemNotificationWithItemUPP userUPP);
void __fastcall DisposeDataBrowserItemReceiveDragUPP(DataBrowserItemReceiveDragUPP userUPP);
void __fastcall DisposeDataBrowserItemUPP(DataBrowserItemUPP userUPP);
void __fastcall DisposeDataBrowserPostProcessDragUPP(DataBrowserPostProcessDragUPP userUPP);
void __fastcall DisposeDataBrowserReceiveDragUPP(DataBrowserReceiveDragUPP userUPP);
void __fastcall DisposeDataBrowserSelectContextualMenuUPP(DataBrowserSelectContextualMenuUPP userUPP);
void __fastcall DisposeDataBrowserTrackingUPP(DataBrowserTrackingUPP userUPP);
void __fastcall DisposeDebugAssertOutputHandlerUPP(DebugAssertOutputHandlerUPP userUPP);
OSStatus __fastcall DisposeDebugComponent(OSType componentSignature);
void __fastcall DisposeDebugComponentCallbackUPP(DebugComponentCallbackUPP userUPP);
void __fastcall DisposeDebuggerDisposeThreadUPP(DebuggerDisposeThreadUPP userUPP);
void __fastcall DisposeDebuggerNewThreadUPP(DebuggerNewThreadUPP userUPP);
void __fastcall DisposeDebuggerThreadSchedulerUPP(DebuggerThreadSchedulerUPP userUPP);
void __fastcall DisposeDeferredTaskUPP(DeferredTaskUPP userUPP);
void __fastcall DisposeDeviceLoopDrawingUPP(DeviceLoopDrawingUPP userUPP);
void __fastcall DisposeDialog(DialogRef theDialog);
void __fastcall DisposeDisposeColorPickMethodUPP(DisposeColorPickMethodUPP userUPP);
OSErr __fastcall DisposeDrag(DragRef theDrag);
void __fastcall DisposeDragDrawingUPP(DragDrawingUPP userUPP);
void __fastcall DisposeDragGrayRgnUPP(DragGrayRgnUPP userUPP);
void __fastcall DisposeDragInputUPP(DragInputUPP userUPP);
void __fastcall DisposeDragReceiveHandlerUPP(DragReceiveHandlerUPP userUPP);
void __fastcall DisposeDragSendDataUPP(DragSendDataUPP userUPP);
void __fastcall DisposeDragTrackingHandlerUPP(DragTrackingHandlerUPP userUPP);
void __fastcall DisposeDrawHookUPP(DrawHookUPP userUPP);
void __fastcall DisposeEOLHookUPP(EOLHookUPP userUPP);
void __fastcall DisposeEditUnicodePostUpdateUPP(EditUnicodePostUpdateUPP userUPP);
void __fastcall DisposeEventComparatorUPP(EventComparatorUPP userUPP);
void __fastcall DisposeEventHandlerUPP(EventHandlerUPP userUPP);
void __fastcall DisposeEventLoopIdleTimerUPP(EventLoopIdleTimerUPP userUPP);
void __fastcall DisposeEventLoopTimerUPP(EventLoopTimerUPP userUPP);
void __fastcall DisposeExceptionHandlerUPP(ExceptionHandlerUPP userUPP);
void __fastcall DisposeFBCCallbackUPP(FBCCallbackUPP userUPP);
void __fastcall DisposeFBCHitTestUPP(FBCHitTestUPP userUPP);
void __fastcall DisposeFMFontCallbackFilterUPP(FMFontCallbackFilterUPP userUPP);
void __fastcall DisposeFMFontFamilyCallbackFilterUPP(FMFontFamilyCallbackFilterUPP userUPP);
void __fastcall DisposeFNSubscriptionUPP(FNSubscriptionUPP userUPP);
void __fastcall DisposeFSVolumeEjectUPP(FSVolumeEjectUPP userUPP);
void __fastcall DisposeFSVolumeMountUPP(FSVolumeMountUPP userUPP);
void __fastcall DisposeFSVolumeUnmountUPP(FSVolumeUnmountUPP userUPP);
void __fastcall DisposeFolderManagerNotificationUPP(FolderManagerNotificationUPP userUPP);
void __fastcall DisposeGDevice(GDHandle gdh);
void __fastcall DisposeGWorld(GWorldPtr offscreenGWorld);
void __fastcall DisposeGetMissingComponentResourceUPP(GetMissingComponentResourceUPP userUPP);
void __fastcall DisposeGetScrapDataUPP(GetScrapDataUPP userUPP);
void __fastcall DisposeGrowZoneUPP(GrowZoneUPP userUPP);
void __fastcall DisposeHDSpindownUPP(HDSpindownUPP userUPP);
void __fastcall DisposeHMControlContentUPP(HMControlContentUPP userUPP);
void __fastcall DisposeHMMenuItemContentUPP(HMMenuItemContentUPP userUPP);
void __fastcall DisposeHMMenuTitleContentUPP(HMMenuTitleContentUPP userUPP);
void __fastcall DisposeHMWindowContentUPP(HMWindowContentUPP userUPP);
void __fastcall DisposeHRNewCFURLUPP(HRNewCFURLUPP userUPP);
void __fastcall DisposeHRNewURLUPP(HRNewURLUPP userUPP);
void __fastcall DisposeHRURLToFSRefUPP(HRURLToFSRefUPP userUPP);
void __fastcall DisposeHRURLToFSSpecUPP(HRURLToFSSpecUPP userUPP);
void __fastcall DisposeHRWasCFURLVisitedUPP(HRWasCFURLVisitedUPP userUPP);
void __fastcall DisposeHRWasURLVisitedUPP(HRWasURLVisitedUPP userUPP);
void __fastcall DisposeHandle(Handle h);
void __fastcall DisposeHighHookUPP(HighHookUPP userUPP);
void __fastcall DisposeHitTestHookUPP(HitTestHookUPP userUPP);
void __fastcall DisposeIOCompletionUPP(IOCompletionUPP userUPP);
void __fastcall DisposeIconActionUPP(IconActionUPP userUPP);
void __fastcall DisposeIconGetterUPP(IconGetterUPP userUPP);
OSErr __fastcall DisposeIconSuite(IconSuiteRef theIconSuite, Boolean disposeData);
void __fastcall DisposeIndexToStringUPP(IndexToStringUPP userUPP);
void __fastcall DisposeInitPickMethodUPP(InitPickMethodUPP userUPP);
void __fastcall DisposeKCCallbackUPP(KCCallbackUPP userUPP);
void __fastcall DisposeListClickLoopUPP(ListClickLoopUPP userUPP);
void __fastcall DisposeListDefUPP(ListDefUPP userUPP);
void __fastcall DisposeListSearchUPP(ListSearchUPP userUPP);
void __fastcall DisposeMCInfo(MCTableHandle menuCTbl);
void __fastcall DisposeMenu(MenuRef theMenu);
OSStatus __fastcall DisposeMenuBar(MenuBarHandle inMbar);
void __fastcall DisposeMenuDefUPP(MenuDefUPP userUPP);
void __fastcall DisposeMenuItemDrawingUPP(MenuItemDrawingUPP userUPP);
void __fastcall DisposeMenuTitleDrawingUPP(MenuTitleDrawingUPP userUPP);
void __fastcall DisposeModalFilterUPP(ModalFilterUPP userUPP);
void __fastcall DisposeModalFilterYDUPP(ModalFilterYDUPP userUPP);
void __fastcall DisposeNColorChangedUPP(NColorChangedUPP userUPP);
void __fastcall DisposeNMUPP(NMUPP userUPP);
void __fastcall DisposeNSLClientNotifyUPP(NSLClientNotifyUPP userUPP);
void __fastcall DisposeNSLEventUPP(NSLEventUPP userUPP);
void __fastcall DisposeNSLMgrNotifyUPP(NSLMgrNotifyUPP userUPP);
void __fastcall DisposeNSLURLFilterUPP(NSLURLFilterUPP userUPP);
void __fastcall DisposeNWidthHookUPP(NWidthHookUPP userUPP);
void __fastcall DisposeNavEventUPP(NavEventUPP userUPP);
void __fastcall DisposeNavObjectFilterUPP(NavObjectFilterUPP userUPP);
void __fastcall DisposeNavPreviewUPP(NavPreviewUPP userUPP);
void __fastcall DisposeNibReference(IBNibRef inNibRef);
void __fastcall DisposeOSAActiveUPP(OSAActiveUPP userUPP);
void __fastcall DisposeOSACreateAppleEventUPP(OSACreateAppleEventUPP userUPP);
void __fastcall DisposeOSASendUPP(OSASendUPP userUPP);
void __fastcall DisposeOSLAccessorUPP(OSLAccessorUPP userUPP);
void __fastcall DisposeOSLAdjustMarksUPP(OSLAdjustMarksUPP userUPP);
void __fastcall DisposeOSLCompareUPP(OSLCompareUPP userUPP);
void __fastcall DisposeOSLCountUPP(OSLCountUPP userUPP);
void __fastcall DisposeOSLDisposeTokenUPP(OSLDisposeTokenUPP userUPP);
void __fastcall DisposeOSLGetErrDescUPP(OSLGetErrDescUPP userUPP);
void __fastcall DisposeOSLGetMarkTokenUPP(OSLGetMarkTokenUPP userUPP);
void __fastcall DisposeOSLMarkUPP(OSLMarkUPP userUPP);
void __fastcall DisposeOTListSearchUPP(OTListSearchUPP userUPP);
void __fastcall DisposeOTNotifyUPP(OTNotifyUPP userUPP);
void __fastcall DisposeOTProcessUPP(OTProcessUPP userUPP);
void __fastcall DisposePMIdleUPP(PMIdleUPP userUPP);
void __fastcall DisposePMItemUPP(PMItemUPP userUPP);
void __fastcall DisposePMPageSetupDialogInitUPP(PMPageSetupDialogInitUPP userUPP);
void __fastcall DisposePMPrintDialogInitUPP(PMPrintDialogInitUPP userUPP);
void __fastcall DisposePMSheetDoneUPP(PMSheetDoneUPP userUPP);
void __fastcall DisposePMgrStateChangeUPP(PMgrStateChangeUPP userUPP);
void __fastcall DisposePalette(PaletteHandle srcPalette);
OSErr __fastcall DisposePictInfo(PictInfoID thePictInfoID);
void __fastcall DisposePixMap(PixMapHandle pm);
void __fastcall DisposePixPat(PixPatHandle pp);
void __fastcall DisposePort(CGrafPtr port);
void __fastcall DisposePtr(Ptr p);
void __fastcall DisposePurgeUPP(PurgeUPP userUPP);
void __fastcall DisposeQDArcUPP(QDArcUPP userUPP);
void __fastcall DisposeQDBitsUPP(QDBitsUPP userUPP);
void __fastcall DisposeQDCommentUPP(QDCommentUPP userUPP);
void __fastcall DisposeQDGetPicUPP(QDGetPicUPP userUPP);
void __fastcall DisposeQDJShieldCursorUPP(QDJShieldCursorUPP userUPP);
void __fastcall DisposeQDLineUPP(QDLineUPP userUPP);
void __fastcall DisposeQDOpcodeUPP(QDOpcodeUPP userUPP);
void __fastcall DisposeQDOvalUPP(QDOvalUPP userUPP);
void __fastcall DisposeQDPolyUPP(QDPolyUPP userUPP);
void __fastcall DisposeQDPutPicUPP(QDPutPicUPP userUPP);
void __fastcall DisposeQDRRectUPP(QDRRectUPP userUPP);
void __fastcall DisposeQDRectUPP(QDRectUPP userUPP);
void __fastcall DisposeQDRgnUPP(QDRgnUPP userUPP);
void __fastcall DisposeQDStdGlyphsUPP(QDStdGlyphsUPP userUPP);
void __fastcall DisposeQDTextUPP(QDTextUPP userUPP);
void __fastcall DisposeQDTxMeasUPP(QDTxMeasUPP userUPP);
void __fastcall DisposeRecordColorsUPP(RecordColorsUPP userUPP);
void __fastcall DisposeRedrawBackgroundUPP(RedrawBackgroundUPP userUPP);
void __fastcall DisposeRegionToRectsUPP(RegionToRectsUPP userUPP);
void __fastcall DisposeResErrUPP(ResErrUPP userUPP);
void __fastcall DisposeRgn(RgnHandle rgn);
void __fastcall DisposeSCSICallbackUPP(SCSICallbackUPP userUPP);
void __fastcall DisposeSICompletionUPP(SICompletionUPP userUPP);
void __fastcall DisposeSIInterruptUPP(SIInterruptUPP userUPP);
void __fastcall DisposeSRCallBackUPP(SRCallBackUPP userUPP);
void __fastcall DisposeScrapPromiseKeeperUPP(ScrapPromiseKeeperUPP userUPP);
void __fastcall DisposeScreenBuffer(PixMapHandle offscreenPixMap);
void __fastcall DisposeSelectorFunctionUPP(SelectorFunctionUPP userUPP);
void __fastcall DisposeSleepQUPP(SleepQUPP userUPP);
void __fastcall DisposeSndCallBackUPP(SndCallBackUPP userUPP);
void __fastcall DisposeSoundConverterFillBufferDataUPP(SoundConverterFillBufferDataUPP userUPP);
void __fastcall DisposeSoundParamUPP(SoundParamUPP userUPP);
OSErr __fastcall DisposeSpeechChannel(SpeechChannel chan);
void __fastcall DisposeSpeechDoneUPP(SpeechDoneUPP userUPP);
void __fastcall DisposeSpeechErrorUPP(SpeechErrorUPP userUPP);
void __fastcall DisposeSpeechPhonemeUPP(SpeechPhonemeUPP userUPP);
void __fastcall DisposeSpeechSyncUPP(SpeechSyncUPP userUPP);
void __fastcall DisposeSpeechTextDoneUPP(SpeechTextDoneUPP userUPP);
void __fastcall DisposeSpeechWordUPP(SpeechWordUPP userUPP);
void __fastcall DisposeStyleRunDirectionUPP(StyleRunDirectionUPP userUPP);
void __fastcall DisposeTEClickLoopUPP(TEClickLoopUPP userUPP);
void __fastcall DisposeTEDoTextUPP(TEDoTextUPP userUPP);
void __fastcall DisposeTEFindWordUPP(TEFindWordUPP userUPP);
void __fastcall DisposeTERecalcUPP(TERecalcUPP userUPP);
void __fastcall DisposeTSMTEPostUpdateUPP(TSMTEPostUpdateUPP userUPP);
void __fastcall DisposeTSMTEPreUpdateUPP(TSMTEPreUpdateUPP userUPP);
void __fastcall DisposeTXNActionKeyMapperUPP(TXNActionKeyMapperUPP userUPP);
void __fastcall DisposeTXNFindUPP(TXNFindUPP userUPP);
void __fastcall DisposeTXNScrollInfoUPP(TXNScrollInfoUPP userUPP);
OSStatus __fastcall DisposeTextToUnicodeInfo(TextToUnicodeInfo *ioTextToUnicodeInfo);
void __fastcall DisposeTextWidthHookUPP(TextWidthHookUPP userUPP);
void __fastcall DisposeThemeButtonDrawUPP(ThemeButtonDrawUPP userUPP);
OSStatus __fastcall DisposeThemeDrawingState(ThemeDrawingState inState);
void __fastcall DisposeThemeEraseUPP(ThemeEraseUPP userUPP);
void __fastcall DisposeThemeIteratorUPP(ThemeIteratorUPP userUPP);
void __fastcall DisposeThemeTabTitleDrawUPP(ThemeTabTitleDrawUPP userUPP);
OSErr __fastcall DisposeThread(ThreadID threadToDump, void *threadResult, Boolean recycleThread);
void __fastcall DisposeThreadEntryUPP(ThreadEntryUPP userUPP);
void __fastcall DisposeThreadSchedulerUPP(ThreadSchedulerUPP userUPP);
void __fastcall DisposeThreadSwitchUPP(ThreadSwitchUPP userUPP);
void __fastcall DisposeThreadTerminationUPP(ThreadTerminationUPP userUPP);
void __fastcall DisposeTimerUPP(TimerUPP userUPP);
void __fastcall DisposeURLNotifyUPP(URLNotifyUPP userUPP);
void __fastcall DisposeURLSystemEventUPP(URLSystemEventUPP userUPP);
void __fastcall DisposeUnicodeToTextFallbackUPP(UnicodeToTextFallbackUPP userUPP);
OSStatus __fastcall DisposeUnicodeToTextInfo(UnicodeToTextInfo *ioUnicodeToTextInfo);
OSStatus __fastcall DisposeUnicodeToTextRunInfo(UnicodeToTextRunInfo *ioUnicodeToTextRunInfo);
void __fastcall DisposeUserEventUPP(UserEventUPP userUPP);
void __fastcall DisposeUserFnUPP(UserFnUPP userUPP);
void __fastcall DisposeUserItemUPP(UserItemUPP userUPP);
void __fastcall DisposeWidthHookUPP(WidthHookUPP userUPP);
void __fastcall DisposeWindow(WindowRef window);
void __fastcall DisposeWindowDefUPP(WindowDefUPP userUPP);
void __fastcall DisposeWindowPaintUPP(WindowPaintUPP userUPP);
void __fastcall DisposeWindowTitleDrawingUPP(WindowTitleDrawingUPP userUPP);
void __fastcall DragControl(ControlRef theControl, Point startPoint, const Rect *limitRect, const Rect *slopRect, DragConstraint axis);
int __fastcall DragGrayRgn(RgnHandle theRgn, Point startPt, const Rect *limitRect, const Rect *slopRect, __int16 axis, DragGrayRgnUPP actionProc);
OSErr __fastcall DragPostScroll(DragRef theDrag);
OSErr __fastcall DragPreScroll(DragRef theDrag, SInt16 dH, SInt16 dV);
int __fastcall DragTheRgn(RgnHandle theRgn, Point startPt, const Rect *limitRect, const Rect *slopRect, __int16 axis, DragGrayRgnUPP actionProc);
void __fastcall DragWindow(WindowRef window, Point startPt, const Rect *boundsRect);
void __fastcall Draw1Control(ControlRef theControl);
void __fastcall DrawChar(CharParameter ch);
void __fastcall DrawControlInCurrentPort(ControlRef inControl);
void __fastcall DrawControls(WindowRef theWindow);
void __fastcall DrawDialog(DialogRef theDialog);
void __fastcall DrawGrowIcon(WindowRef window);
void __fastcall DrawJustified(Ptr textPtr, int textLength, Fixed slop, JustStyleCode styleRunPosition, Point numer, Point denom);
void DrawMenuBar(void);
void __fastcall DrawPicture(PicHandle myPicture, const Rect *dstRect);
void __fastcall DrawString(ConstStr255Param s);
void __fastcall DrawText(const void *textBuf, __int16 firstByte, __int16 byteCount);
OSStatus __fastcall DrawThemeButton(const Rect *inBounds, ThemeButtonKind inKind, const ThemeButtonDrawInfo *inNewInfo, const ThemeButtonDrawInfo *inPrevInfo, ThemeEraseUPP inEraseProc, ThemeButtonDrawUPP inLabelProc, UInt32 inUserData);
OSStatus __fastcall DrawThemeChasingArrows(const Rect *bounds, UInt32 index, ThemeDrawState state, ThemeEraseUPP eraseProc, UInt32 eraseData);
OSStatus __fastcall DrawThemeEditTextFrame(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeFocusRect(const Rect *inRect, Boolean inHasFocus);
OSStatus __fastcall DrawThemeFocusRegion(RgnHandle inRegion, Boolean inHasFocus);
OSStatus __fastcall DrawThemeGenericWell(const Rect *inRect, ThemeDrawState inState, Boolean inFillCenter);
OSStatus __fastcall DrawThemeListBoxFrame(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeMenuBackground(const Rect *inMenuRect, ThemeMenuType inMenuType);
OSStatus __fastcall DrawThemeMenuBarBackground(const Rect *inBounds, ThemeMenuBarState inState, UInt32 inAttributes);
OSStatus __fastcall DrawThemeMenuItem(const Rect *inMenuRect, const Rect *inItemRect, SInt16 inVirtualMenuTop, SInt16 inVirtualMenuBottom, ThemeMenuState inState, ThemeMenuItemType inItemType, MenuItemDrawingUPP inDrawProc, UInt32 inUserData);
OSStatus __fastcall DrawThemeMenuSeparator(const Rect *inItemRect);
OSStatus __fastcall DrawThemeMenuTitle(const Rect *inMenuBarRect, const Rect *inTitleRect, ThemeMenuState inState, UInt32 inAttributes, MenuTitleDrawingUPP inTitleProc, UInt32 inTitleData);
OSStatus __fastcall DrawThemeModelessDialogFrame(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemePlacard(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemePopupArrow(const Rect *bounds, ThemeArrowOrientation orientation, ThemePopupArrowSize size, ThemeDrawState state, ThemeEraseUPP eraseProc, UInt32 eraseData);
OSStatus __fastcall DrawThemePrimaryGroup(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeScrollBarArrows(const Rect *bounds, ThemeTrackEnableState enableState, ThemeTrackPressState pressState, Boolean isHoriz, Rect *trackBounds);
OSStatus __fastcall DrawThemeScrollBarDelimiters(ThemeWindowType flavor, const Rect *inContRect, ThemeDrawState state, ThemeWindowAttributes attributes);
OSStatus __fastcall DrawThemeSecondaryGroup(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeSeparator(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeStandaloneGrowBox(Point origin, ThemeGrowDirection growDirection, Boolean isSmall, ThemeDrawState state);
OSStatus __fastcall DrawThemeStandaloneNoGrowBox(Point origin, ThemeGrowDirection growDirection, Boolean isSmall, ThemeDrawState state);
OSStatus __fastcall DrawThemeTab(const Rect *inRect, ThemeTabStyle inStyle, ThemeTabDirection inDirection, ThemeTabTitleDrawUPP labelProc, UInt32 userData);
OSStatus __fastcall DrawThemeTabPane(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeTextBox(CFStringRef inString, ThemeFontID inFontID, ThemeDrawState inState, Boolean inWrapToWidth, const Rect *inBoundingBox, SInt16 inJust, void *inContext);
OSStatus __fastcall DrawThemeTickMark(const Rect *bounds, ThemeDrawState state);
OSStatus __fastcall DrawThemeTitleBarWidget(ThemeWindowType flavor, const Rect *contRect, ThemeDrawState state, const ThemeWindowMetrics *metrics, ThemeWindowAttributes attributes, ThemeTitleBarWidget widget);
OSStatus __fastcall DrawThemeTrack(const ThemeTrackDrawInfo *drawInfo, RgnHandle rgnGhost, ThemeEraseUPP eraseProc, UInt32 eraseData);
OSStatus __fastcall DrawThemeTrackTickMarks(const ThemeTrackDrawInfo *drawInfo, ItemCount numTicks, ThemeEraseUPP eraseProc, UInt32 eraseData);
OSStatus __fastcall DrawThemeWindowFrame(ThemeWindowType flavor, const Rect *contRect, ThemeDrawState state, const ThemeWindowMetrics *metrics, ThemeWindowAttributes attributes, WindowTitleDrawingUPP titleProc, UInt32 titleData);
OSStatus __fastcall DrawThemeWindowHeader(const Rect *inRect, ThemeDrawState inState);
OSStatus __fastcall DrawThemeWindowListViewHeader(const Rect *inRect, ThemeDrawState inState);
OSErr __fastcall DumpControlHierarchy(WindowRef inWindow, const FSSpec *inDumpFile);
OSStatus __fastcall DuplicateMenu(MenuRef inSourceMenu, MenuRef *outMenu);
OSStatus __fastcall DuplicateMenuBar(MenuBarHandle inMbar, MenuBarHandle *outMbar);
AbsoluteTime __fastcall DurationToAbsolute(Duration duration);
Nanoseconds __fastcall DurationToNanoseconds(Duration theDuration);
OSErr __fastcall EmbedControl(ControlRef inControl, ControlRef inContainer);
void __fastcall EmptyCollection(Collection c);
void __fastcall EmptyHandle(Handle h);
Boolean __fastcall EmptyRect(const Rect *r);
Boolean __fastcall EmptyRgn(RgnHandle rgn);
void __fastcall EnableAllMenuItems(MenuRef theMenu);
OSStatus __fastcall EnableControl(ControlRef inControl);
Boolean __fastcall EnableDataBrowserEditCommand(ControlRef browser, DataBrowserEditCommand command);
void EnableIdle(void);
void __fastcall EnableMenuCommand(MenuRef inMenu, MenuCommand inCommandID);
void __fastcall EnableMenuItem(MenuRef theMenu, MenuItemIndex item);
void __fastcall EnableMenuItemIcon(MenuRef theMenu, MenuItemIndex item);
void __fastcall EnableProcessorCycling(Boolean enable);
OSStatus EnableScreenUpdates(void);
OSStatus __fastcall EndAppModalStateForWindow(WindowRef inWindow);
void __fastcall EndCGContextForApplicationDockTile(CGContextRef inContext);
void __fastcall EndQDContextForApplicationDockTile(CGrafPtr inContext);
OSStatus EndThemeDragSound(void);
void __fastcall EndUpdate(WindowRef window);
OSStatus __fastcall EndWindowProxyDrag(WindowRef window, DragReference theDrag);
void __fastcall Enqueue(QElemPtr qElement, QHdrPtr qHeader);
int __fastcall Entry2Index(__int16 entry);
Boolean __fastcall EqualPt(Point pt1, Point pt2);
Boolean __fastcall EqualRect(const Rect *rect1, const Rect *rect2);
Boolean __fastcall EqualRgn(RgnHandle rgnA, RgnHandle rgnB);
Boolean __fastcall EqualString(ConstStr255Param str1, ConstStr255Param str2, Boolean caseSensitive, Boolean diacSensitive);
void __fastcall EraseArc(const Rect *r, __int16 startAngle, __int16 arcAngle);
OSStatus __fastcall EraseMenuBackground(MenuRef inMenu, const Rect *inEraseRect, CGContextRef inContext);
void __fastcall EraseOval(const Rect *r);
void __fastcall ErasePoly(PolyHandle poly);
void __fastcall EraseRect(const Rect *r);
void __fastcall EraseRgn(RgnHandle rgn);
void __fastcall EraseRoundRect(const Rect *r, __int16 ovalWidth, __int16 ovalHeight);
Boolean __fastcall EventAvail(EventMask eventMask, EventRecord *theEvent);
OSStatus __fastcall ExecuteDataBrowserEditCommand(ControlRef browser, DataBrowserEditCommand command);
void ExitToShell(void);
OSErr __fastcall ExtendFileTypeList(const FileType *originalTypeList, __int16 numberOriginalTypes, FileType *extendedTypeList, __int16 *numberExtendedTypes);
FormatStatus __fastcall ExtendedToString(const extended80 *x, const NumFormatString *myCanonical, const NumberParts *partsTable, Str255 outString);
OSErr __fastcall FBCAddAllVolumesToSession(FBCSearchSession theSession, Boolean includeRemote);
OSErr __fastcall FBCAddVolumeToSession(FBCSearchSession theSession, SInt16 vRefNum);
OSErr __fastcall FBCBlindExampleSearch(const FSSpec examples[], UInt32 numExamples, const FSSpec targetDirs[], UInt32 numTargets, UInt32 maxHits, UInt32 maxHitWords, Boolean allIndexes, Boolean includeRemote, FBCSearchSession *theSession);
OSErr __fastcall FBCBlindExampleSearchWithCallback(const FSSpec examples[], UInt32 numExamples, const FSSpec targetDirs[], UInt32 numTargets, UInt32 maxHits, UInt32 maxHitWords, Boolean allIndexes, Boolean includeRemote, FBCSearchSession *theSession, FBCCallbackUPP callback, void *callbackData, FBCHitTestUPP userHitTest, void *userHitTestData);
OSErr __fastcall FBCCloneSearchSession(FBCSearchSession original, FBCSearchSession *clone);
OSErr __fastcall FBCCreateSearchSession(FBCSearchSession *searchSession);
OSErr __fastcall FBCDeleteIndexFileForFolder(const FSRef *folder);
OSErr __fastcall FBCDestroySearchSession(FBCSearchSession theSession);
OSErr __fastcall FBCDestroyWordList(FBCWordList theList, UInt32 wordCount);
OSStatus __fastcall FBCDisposeSummary(FBCSummaryRef summary);
OSErr __fastcall FBCDoCFStringSearch(FBCSearchSession theSession, CFStringRef queryString, const FSSpec targetDirs[], UInt32 numTargets, UInt32 maxHits, UInt32 maxHitWords);
OSErr __fastcall FBCDoExampleSearch(FBCSearchSession theSession, const UInt32 *exampleHitNums, UInt32 numExamples, const FSSpec targetDirs[], UInt32 numTargets, UInt32 maxHits, UInt32 maxHitWords);
OSErr __fastcall FBCDoQuerySearch(FBCSearchSession theSession, char *queryText, const FSSpec targetDirs[], UInt32 numTargets, UInt32 maxHits, UInt32 maxHitWords);
OSErr __fastcall FBCFindIndexFileFolderForFolder(const FSRef *inFolder, FSRef *outFolder);
OSErr __fastcall FBCGetHitCount(FBCSearchSession theSession, UInt32 *count);
OSErr __fastcall FBCGetHitDocument(FBCSearchSession theSession, UInt32 hitNumber, FSSpec *theDocument);
OSErr __fastcall FBCGetHitDocumentRef(FBCSearchSession theSession, UInt32 hitNumber, FSRef *theDocument);
OSErr __fastcall FBCGetHitScore(FBCSearchSession theSession, UInt32 hitNumber, float *score);
OSErr __fastcall FBCGetMatchedWords(FBCSearchSession theSession, UInt32 hitNumber, UInt32 *wordCount, FBCWordList *list);
OSErr __fastcall FBCGetSessionVolumeCount(FBCSearchSession theSession, UInt16 *count);
OSErr __fastcall FBCGetSessionVolumes(FBCSearchSession theSession, SInt16 vRefNums[], UInt16 *numVolumes);
OSStatus __fastcall FBCGetSummaryOfCFString(CFStringRef inString, FBCSummaryRef *summary);
OSStatus __fastcall FBCGetSummarySentenceCount(FBCSummaryRef summary, UInt32 *numSentences);
OSStatus __fastcall FBCGetSummarySentences(FBCSummaryRef summary, CFStringRef *outString, UInt32 *numSentences, Boolean paragraphs);
OSErr __fastcall FBCGetTopicWords(FBCSearchSession theSession, UInt32 hitNumber, UInt32 *wordCount, FBCWordList *list);
OSErr __fastcall FBCIndexItems(FSSpecArrayPtr theItems, UInt32 itemCount);
OSErr __fastcall FBCIndexItemsInLanguages(FSSpecArrayPtr theItems, UInt32 itemCount, UInt32 languageHighBits, UInt32 languageLowBits);
OSErr __fastcall FBCReleaseSessionHits(FBCSearchSession theSession);
OSErr __fastcall FBCRemoveVolumeFromSession(FBCSearchSession theSession, SInt16 vRefNum);
void __fastcall FBCSetCallback(FBCCallbackUPP fn, void *data);
void __fastcall FBCSetHeapReservation(UInt32 bytes);
void __fastcall FBCSetSessionCallback(FBCSearchSession searchSession, FBCCallbackUPP fn, void *data);
void __fastcall FBCSetSessionHitTest(FBCSearchSession theSession, FBCHitTestUPP fn, void *data);
OSErr __fastcall FBCSetSessionVolumes(FBCSearchSession theSession, const SInt16 vRefNums[], UInt16 numVolumes);
OSErr __fastcall FBCSummarize(const void *inBuf, UInt32 inLength, void *outBuf, UInt32 *outLength, UInt32 *numSentences);
OSStatus __fastcall FBCSummarizeCFString(CFStringRef inString, CFStringRef *outString, UInt32 *numSentences);
OSErr __fastcall FBCVolumeIndexPhysicalSize(SInt16 theVRefNum, UInt32 *size);
OSErr __fastcall FBCVolumeIndexTimeStamp(SInt16 theVRefNum, UInt32 *timeStamp);
Boolean __fastcall FBCVolumeIsIndexed(SInt16 theVRefNum);
Boolean __fastcall FBCVolumeIsRemote(SInt16 theVRefNum);
OSStatus __fastcall FMActivateFonts(const FSSpec *iFontContainer, const FMFilter *iFilter, void *iRefCon, OptionBits iOptions);
OSStatus __fastcall FMCreateFontFamilyInstanceIterator(FMFontFamily iFontFamily, FMFontFamilyInstanceIterator *ioIterator);
OSStatus __fastcall FMCreateFontFamilyIterator(const FMFilter *iFilter, void *iRefCon, OptionBits iOptions, FMFontFamilyIterator *ioIterator);
OSStatus __fastcall FMCreateFontIterator(const FMFilter *iFilter, void *iRefCon, OptionBits iOptions, FMFontIterator *ioIterator);
OSStatus __fastcall FMDeactivateFonts(const FSSpec *iFontContainer, const FMFilter *iFilter, void *iRefCon, OptionBits iOptions);
OSStatus __fastcall FMDisposeFontFamilyInstanceIterator(FMFontFamilyInstanceIterator *ioIterator);
OSStatus __fastcall FMDisposeFontFamilyIterator(FMFontFamilyIterator *ioIterator);
OSStatus __fastcall FMDisposeFontIterator(FMFontIterator *ioIterator);
ATSFontFamilyRef __fastcall FMGetATSFontFamilyRefFromFontFamily(FMFontFamily iFamily);
ATSFontRef __fastcall FMGetATSFontRefFromFont(FMFont iFont);
OSStatus __fastcall FMGetFontContainer(FMFont iFont, FSSpec *oFontContainer);
OSStatus __fastcall FMGetFontContainerFromFontFamilyInstance(FMFontFamily iFontFamily, FMFontStyle iStyle, FMFontSize iFontSize, FSSpec *oFontContainer);
FMFontFamily __fastcall FMGetFontFamilyFromATSFontFamilyRef(ATSFontFamilyRef iFamily);
FMFontFamily __fastcall FMGetFontFamilyFromName(ConstStr255Param iName);
OSStatus __fastcall FMGetFontFamilyGeneration(FMFontFamily iFontFamily, FMGeneration *oGeneration);
OSStatus __fastcall FMGetFontFamilyInstanceFromFont(FMFont iFont, FMFontFamily *oFontFamily, FMFontStyle *oStyle);
OSStatus __fastcall FMGetFontFamilyName(FMFontFamily iFontFamily, Str255 oName);
OSStatus __fastcall FMGetFontFamilyResource(FMFontFamily iFontFamily, FMFontStyle iFontStyle, FMFontSize iFontSize, ByteCount iBufferSize, void *ioBuffer, ByteCount *oSize);
OSStatus __fastcall FMGetFontFamilyTextEncoding(FMFontFamily iFontFamily, TextEncoding *oTextEncoding);
OSStatus __fastcall FMGetFontFormat(FMFont iFont, FourCharCode *oFormat);
FMFont __fastcall FMGetFontFromATSFontRef(ATSFontRef iFont);
OSStatus __fastcall FMGetFontFromFontFamilyInstance(FMFontFamily iFontFamily, FMFontStyle iStyle, FMFont *oFont, FMFontStyle *oIntrinsicStyle);
OSStatus __fastcall FMGetFontGeneration(FMFont iFont, FMGeneration *oGeneration);
OSStatus __fastcall FMGetFontTable(FMFont iFont, FourCharCode iTag, ByteOffset iOffset, ByteCount iLength, void *iBuffer, ByteCount *oActualLength);
OSStatus __fastcall FMGetFontTableDirectory(FMFont iFont, ByteCount iLength, void *iBuffer, ByteCount *oActualLength);
FMGeneration FMGetGeneration(void);
OSStatus __fastcall FMGetNextFont(FMFontIterator *ioIterator, FMFont *oFont);
OSStatus __fastcall FMGetNextFontFamily(FMFontFamilyIterator *ioIterator, FMFontFamily *oFontFamily);
OSStatus __fastcall FMGetNextFontFamilyInstance(FMFontFamilyInstanceIterator *ioIterator, FMFont *oFont, FMFontStyle *oStyle, FMFontSize *oSize);
OSStatus __fastcall FMResetFontFamilyInstanceIterator(FMFontFamily iFontFamily, FMFontFamilyInstanceIterator *ioIterator);
OSStatus __fastcall FMResetFontFamilyIterator(const FMFilter *iFilter, void *iRefCon, OptionBits iOptions, FMFontFamilyIterator *ioIterator);
OSStatus __fastcall FMResetFontIterator(const FMFilter *iFilter, void *iRefCon, OptionBits iOptions, FMFontIterator *ioIterator);
FMOutPtr __fastcall FMSwapFont(const FMInput *inRec);
OSStatus __fastcall FNGetDirectoryForSubscription(FNSubscriptionRef subscription, FSRef *ref);
OSStatus __fastcall FNNotify(const FSRef *ref, FNMessage message, OptionBits flags);
OSStatus __fastcall FNNotifyAll(FNMessage message, OptionBits flags);
OSStatus __fastcall FNNotifyByPath(const UInt8 *path, FNMessage message, OptionBits flags);
Boolean FNSEnabled(void);
FNSMatchOptions FNSMatchDefaultsGet(void);
OSStatus __fastcall FNSProfileAddReference(FNSFontProfile iProfile, FNSFontReference iReference);
OSStatus __fastcall FNSProfileClear(FNSFontProfile iProfile);
OSStatus __fastcall FNSProfileClose(FNSFontProfile iProfile);
OSStatus __fastcall FNSProfileCompact(FNSFontProfile iProfile);
OSStatus __fastcall FNSProfileCountReferences(FNSFontProfile iProfile, ItemCount *oCount);
OSStatus __fastcall FNSProfileCreate(const FSSpec *iFile, FourCharCode iCreator, ItemCount iEstNumRefs, FNSObjectVersion iDesiredVersion, FNSFontProfile *oProfile);
OSStatus __fastcall FNSProfileCreateWithFSRef(const FSRef *iParentDirectory, UniCharCount iNameLength, const UniChar *iName, FourCharCode iCreator, ItemCount iEstNumRefs, FNSObjectVersion iDesiredVersion, FNSFontProfile *oProfile);
OSStatus __fastcall FNSProfileGetIndReference(FNSFontProfile iProfile, UInt32 iWhichReference, FNSFontReference *oReference);
OSStatus __fastcall FNSProfileGetVersion(FNSFontProfile iProfile, FNSObjectVersion *oVersion);
OSStatus __fastcall FNSProfileMatchReference(FNSFontProfile iProfile, FNSFontReference iReference, FNSMatchOptions iMatchOptions, ItemCount iOutputSize, UInt32 oIndices[], ItemCount *oNumMatches);
OSStatus __fastcall FNSProfileOpen(const FSSpec *iFile, Boolean iOpenForWrite, FNSFontProfile *oProfile);
OSStatus __fastcall FNSProfileOpenWithFSRef(const FSRef *iFile, Boolean iOpenForWrite, FNSFontProfile *oProfile);
OSStatus __fastcall FNSProfileRemoveIndReference(FNSFontProfile iProfile, UInt32 iIndex);
OSStatus __fastcall FNSProfileRemoveReference(FNSFontProfile iProfile, FNSFontReference iReference);
OSStatus __fastcall FNSReferenceCountNames(FNSFontReference iReference, ItemCount *oNameCount);
OSStatus __fastcall FNSReferenceCreate(FMFont iFont, FNSObjectVersion iDesiredVersion, FNSFontReference *oReference);
OSStatus __fastcall FNSReferenceCreateFromFamily(FMFontFamily iFamily, FMFontStyle iStyle, FNSObjectVersion iDesiredVersion, FNSFontReference *oReference, FMFontStyle *oActualStyle);
OSStatus __fastcall FNSReferenceDispose(FNSFontReference iReference);
OSStatus __fastcall FNSReferenceFindName(FNSFontReference iReference, FontNameCode iFontNameCode, FontPlatformCode iFontNamePlatform, FontScriptCode iFontNameScript, FontLanguageCode iFontNameLanguage, ByteCount iMaximumNameLength, Ptr oName, ByteCount *oActualNameLength, ItemCount *oFontNameIndex);
OSStatus __fastcall FNSReferenceFlatten(FNSFontReference iReference, void *oFlatReference, ByteCount *oFlattenedSize);
OSStatus __fastcall FNSReferenceFlattenedSize(FNSFontReference iReference, ByteCount *oFlattenedSize);
OSStatus __fastcall FNSReferenceGetFamilyInfo(FNSFontReference iReference, Str255 oFamilyName, ScriptCode *oFamilyNameScript, FMFontStyle *oActualStyle);
OSStatus __fastcall FNSReferenceGetIndName(FNSFontReference iReference, ItemCount iFontNameIndex, ByteCount iMaximumNameLength, Ptr oName, ByteCount *oActualNameLength, FontNameCode *oFontNameCode, FontPlatformCode *oFontNamePlatform, FontScriptCode *oFontNameScript, FontLanguageCode *oFontNameLanguage);
OSStatus __fastcall FNSReferenceGetVersion(FNSFontReference iReference, FNSObjectVersion *oVersion);
OSStatus __fastcall FNSReferenceMatch(FNSFontReference iReference1, FNSFontReference iReference2, FNSMatchOptions iOptions, FNSMatchOptions *oFailedMatchOptions);
OSStatus __fastcall FNSReferenceMatchFamilies(FNSFontReference iReference, FNSMatchOptions iMatchOptions, ItemCount iOutputSize, FMFontFamilyInstance oFonts[], ItemCount *oNumMatches);
OSStatus __fastcall FNSReferenceMatchFonts(FNSFontReference iReference, FNSMatchOptions iMatchOptions, ItemCount iOutputSize, FMFont oFonts[], ItemCount *oNumMatches);
OSStatus __fastcall FNSReferenceUnflatten(const void *iFlatReference, ByteCount iFlattenedSize, FNSFontReference *oReference);
void __fastcall FNSSysInfoGet(FNSSysInfo *ioInfo);
OSStatus __fastcall FNSubscribe(const FSRef *directoryRef, FNSubscriptionUPP callback, void *refcon, OptionBits flags, FNSubscriptionRef *subscription);
OSStatus __fastcall FNSubscribeByPath(const UInt8 *directoryPath, FNSubscriptionUPP callback, void *refcon, OptionBits flags, FNSubscriptionRef *subscription);
OSStatus __fastcall FNUnsubscribe(FNSubscriptionRef subscription);
Boolean FPIsFontPanelVisible(void);
OSStatus FPShowHideFontPanel(void);
OSErr __fastcall FSAllocateFork(SInt16 forkRefNum, FSAllocationFlags flags, UInt16 positionMode, SInt64 positionOffset, UInt64 requestCount, UInt64 *actualCount);
OSStatus __fastcall FSCancelVolumeOperation(FSVolumeOperation volumeOp);
OSErr __fastcall FSCatalogSearch(FSIterator iterator, const FSSearchParams *searchCriteria, ItemCount maximumObjects, ItemCount *actualObjects, Boolean *containerChanged, FSCatalogInfoBitmap whichInfo, FSCatalogInfo *catalogInfos, FSRef *refs, FSSpec *specs, HFSUniStr255 *names);
OSErr __fastcall FSClose(__int16 refNum);
OSErr __fastcall FSCloseFork(SInt16 forkRefNum);
OSErr __fastcall FSCloseIterator(FSIterator iterator);
OSErr __fastcall FSCompareFSRefs(const FSRef *ref1, const FSRef *ref2);
OSStatus __fastcall FSCopyAliasInfo(AliasHandle inAlias, HFSUniStr255 *targetName, HFSUniStr255 *volumeName, CFStringRef *pathString, FSAliasInfoBitmap *whichInfo, FSAliasInfo *info);
OSStatus __fastcall FSCopyDiskIDForVolume(FSVolumeRefNum vRefNum, CFStringRef *diskID);
OSErr __fastcall FSCreateDirectoryUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, FSRef *newRef, FSSpec *newSpec, UInt32 *newDirID);
OSErr __fastcall FSCreateFileUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, FSRef *newRef, FSSpec *newSpec);
OSErr __fastcall FSCreateFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName);
void __fastcall FSCreateResFile(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, FSRef *newRef, FSSpec *newSpec);
OSErr __fastcall FSCreateResourceFile(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo, UniCharCount forkNameLength, const UniChar *forkName, FSRef *newRef, FSSpec *newSpec);
OSErr __fastcall FSCreateResourceFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName, UInt32 flags);
OSStatus __fastcall FSCreateVolumeOperation(FSVolumeOperation *volumeOp);
OSErr __fastcall FSDeleteFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName);
OSErr __fastcall FSDeleteObject(const FSRef *ref);
OSStatus __fastcall FSDisposeVolumeOperation(FSVolumeOperation volumeOp);
OSStatus __fastcall FSEjectVolumeAsync(FSVolumeRefNum vRefNum, OptionBits flags, FSVolumeOperation volumeOp, void *clientData, FSVolumeEjectUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode);
OSStatus __fastcall FSEjectVolumeSync(FSVolumeRefNum vRefNum, OptionBits flags, pid_t *dissenter);
OSErr __fastcall FSExchangeObjects(const FSRef *ref, const FSRef *destRef);
OSErr __fastcall FSFindFolder(__int16 vRefNum, OSType folderType, Boolean createFolder, FSRef *foundRef);
OSErr __fastcall FSFindFolderExtended(__int16 vol, OSType foldType, Boolean createFolder, UInt32 flags, void *data, FSRef *foundRef);
OSErr __fastcall FSFlushFork(SInt16 forkRefNum);
OSErr __fastcall FSFollowFinderAlias(FSRef *fromFile, AliasHandle alias, Boolean logon, FSRef *target, Boolean *wasChanged);
OSStatus __fastcall FSGetAsyncEjectStatus(FSVolumeOperation volumeOp, FSEjectStatus *status, OSStatus *volumeOpStatus, FSVolumeRefNum *volumeRefNum, pid_t *dissenter, void **clientData);
OSStatus __fastcall FSGetAsyncMountStatus(FSVolumeOperation volumeOp, FSMountStatus *status, OSStatus *volumeOpStatus, FSVolumeRefNum *mountedVolumeRefNum, void **clientData);
OSStatus __fastcall FSGetAsyncUnmountStatus(FSVolumeOperation volumeOp, FSUnmountStatus *status, OSStatus *volumeOpStatus, FSVolumeRefNum *volumeRefNum, pid_t *dissenter, void **clientData);
OSErr __fastcall FSGetCatalogInfo(const FSRef *ref, FSCatalogInfoBitmap whichInfo, FSCatalogInfo *catalogInfo, HFSUniStr255 *outName, FSSpec *fsSpec, FSRef *parentRef);
OSErr __fastcall FSGetCatalogInfoBulk(FSIterator iterator, ItemCount maximumObjects, ItemCount *actualObjects, Boolean *containerChanged, FSCatalogInfoBitmap whichInfo, FSCatalogInfo *catalogInfos, FSRef *refs, FSSpec *specs, HFSUniStr255 *names);
OSErr __fastcall FSGetDataForkName(HFSUniStr255 *dataForkName);
OSErr __fastcall FSGetForkCBInfo(SInt16 desiredRefNum, FSVolumeRefNum volume, SInt16 *iterator, SInt16 *actualRefNum, FSForkInfo *forkInfo, FSRef *ref, HFSUniStr255 *outForkName);
OSErr __fastcall FSGetForkPosition(SInt16 forkRefNum, SInt64 *position);
OSErr __fastcall FSGetForkSize(SInt16 forkRefNum, SInt64 *forkSize);
OSErr __fastcall FSGetResourceForkName(HFSUniStr255 *resourceForkName);
OSErr __fastcall FSGetVolumeInfo(FSVolumeRefNum volume, ItemCount volumeIndex, FSVolumeRefNum *actualVolume, FSVolumeInfoBitmap whichInfo, FSVolumeInfo *info, HFSUniStr255 *volumeName, FSRef *rootDirectory);
OSErr __fastcall FSIsAliasFile(const FSRef *fileRef, Boolean *aliasFileFlag, Boolean *folderFlag);
OSErr __fastcall FSIterateForks(const FSRef *ref, CatPositionRec *forkIterator, HFSUniStr255 *forkName, SInt64 *forkSize, UInt64 *forkPhysicalSize);
OSErr __fastcall FSMakeFSRefUnicode(const FSRef *parentRef, UniCharCount nameLength, const UniChar *name, TextEncoding textEncodingHint, FSRef *newRef);
OSErr __fastcall FSMakeFSSpec(__int16 vRefNum, int dirID, ConstStr255Param fileName, FSSpec *spec);
OSErr __fastcall FSMatchAlias(const FSRef *fromFile, unsigned int rulesMask, AliasHandle inAlias, __int16 *aliasCount, FSRef *aliasList, Boolean *needsUpdate, AliasFilterUPP aliasFilter, void *yourDataPtr);
OSErr __fastcall FSMatchAliasNoUI(const FSRef *fromFile, unsigned int rulesMask, AliasHandle inAlias, __int16 *aliasCount, FSRef *aliasList, Boolean *needsUpdate, AliasFilterUPP aliasFilter, void *yourDataPtr);
OSStatus __fastcall FSMountLocalVolumeAsync(CFStringRef diskID, CFURLRef mountDir, FSVolumeOperation volumeOp, void *clientData, OptionBits flags, FSVolumeMountUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode);
OSStatus __fastcall FSMountLocalVolumeSync(CFStringRef diskID, CFURLRef mountDir, FSVolumeRefNum *mountedVolumeRefNum, OptionBits flags);
OSStatus __fastcall FSMountServerVolumeAsync(CFURLRef url, CFURLRef mountDir, CFStringRef user, CFStringRef password, FSVolumeOperation volumeOp, void *clientData, OptionBits flags, FSVolumeMountUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode);
OSStatus __fastcall FSMountServerVolumeSync(CFURLRef url, CFURLRef mountDir, CFStringRef user, CFStringRef password, FSVolumeRefNum *mountedVolumeRefNum, OptionBits flags);
OSErr __fastcall FSMoveObject(const FSRef *ref, const FSRef *destDirectory, FSRef *newRef);
OSErr __fastcall FSNewAlias(const FSRef *fromFile, const FSRef *target, AliasHandle *inAlias);
OSErr __fastcall FSNewAliasMinimal(const FSRef *target, AliasHandle *inAlias);
OSErr __fastcall FSNewAliasMinimalUnicode(const FSRef *targetParentRef, UniCharCount targetNameLength, const UniChar *targetName, AliasHandle *inAlias, Boolean *isDirectory);
OSErr __fastcall FSNewAliasUnicode(const FSRef *fromFile, const FSRef *targetParentRef, UniCharCount targetNameLength, const UniChar *targetName, AliasHandle *inAlias, Boolean *isDirectory);
OSErr __fastcall FSOpenFork(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName, SInt8 permissions, SInt16 *forkRefNum);
OSErr __fastcall FSOpenIterator(const FSRef *container, FSIteratorFlags iteratorFlags, FSIterator *iterator);
__int16 __fastcall FSOpenResFile(const FSRef *ref, SInt8 permission);
OSErr __fastcall FSOpenResourceFile(const FSRef *ref, UniCharCount forkNameLength, const UniChar *forkName, SInt8 permissions, SInt16 *refNum);
OSStatus __fastcall FSPathMakeRef(const UInt8 *path, FSRef *ref, Boolean *isDirectory);
OSErr __fastcall FSRead(__int16 refNum, int *count, void *buffPtr);
OSErr __fastcall FSReadFork(SInt16 forkRefNum, UInt16 positionMode, SInt64 positionOffset, ByteCount requestCount, void *buffer, ByteCount *actualCount);
OSStatus __fastcall FSRefMakePath(const FSRef *ref, UInt8 *path, UInt32 maxPathSize);
OSErr __fastcall FSRenameUnicode(const FSRef *ref, UniCharCount nameLength, const UniChar *name, TextEncoding textEncodingHint, FSRef *newRef);
OSErr __fastcall FSResolveAlias(const FSRef *fromFile, AliasHandle alias, FSRef *target, Boolean *wasChanged);
OSErr __fastcall FSResolveAliasFile(FSRef *theRef, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased);
OSErr __fastcall FSResolveAliasFileWithMountFlags(FSRef *theRef, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased, unsigned int mountFlags);
OSErr __fastcall FSResolveAliasWithMountFlags(const FSRef *fromFile, AliasHandle inAlias, FSRef *target, Boolean *wasChanged, unsigned int mountFlags);
Boolean __fastcall FSResourceFileAlreadyOpen(const FSRef *resourceFileRef, Boolean *inChain, SInt16 *refNum);
OSErr __fastcall FSSetCatalogInfo(const FSRef *ref, FSCatalogInfoBitmap whichInfo, const FSCatalogInfo *catalogInfo);
OSErr __fastcall FSSetForkPosition(SInt16 forkRefNum, UInt16 positionMode, SInt64 positionOffset);
OSErr __fastcall FSSetForkSize(SInt16 forkRefNum, UInt16 positionMode, SInt64 positionOffset);
OSErr __fastcall FSSetVolumeInfo(FSVolumeRefNum volume, FSVolumeInfoBitmap whichInfo, const FSVolumeInfo *info);
OSStatus __fastcall FSUnmountVolumeAsync(FSVolumeRefNum vRefNum, OptionBits flags, FSVolumeOperation volumeOp, void *clientData, FSVolumeUnmountUPP callback, CFRunLoopRef runloop, CFStringRef runloopMode);
OSStatus __fastcall FSUnmountVolumeSync(FSVolumeRefNum vRefNum, OptionBits flags, pid_t *dissenter);
OSErr __fastcall FSUpdateAlias(const FSRef *fromFile, const FSRef *target, AliasHandle alias, Boolean *wasChanged);
OSErr __fastcall FSWrite(__int16 refNum, int *count, const void *buffPtr);
OSErr __fastcall FSWriteFork(SInt16 forkRefNum, UInt16 positionMode, SInt64 positionOffset, ByteCount requestCount, const void *buffer, ByteCount *actualCount);
OSErr __fastcall FSpCatMove(const FSSpec *source, const FSSpec *dest);
OSErr __fastcall FSpCreate(const FSSpec *spec, OSType creator, OSType fileType, ScriptCode scriptTag);
void __fastcall FSpCreateResFile(const FSSpec *spec, OSType creator, OSType fileType, ScriptCode scriptTag);
OSErr __fastcall FSpDelete(const FSSpec *spec);
OSErr __fastcall FSpDirCreate(const FSSpec *spec, ScriptCode scriptTag, int *createdDirID);
OSErr __fastcall FSpExchangeFiles(const FSSpec *source, const FSSpec *dest);
OSErr __fastcall FSpGetFInfo(const FSSpec *spec, FInfo *fndrInfo);
OSErr __fastcall FSpMakeFSRef(const FSSpec *source, FSRef *newRef);
OSErr __fastcall FSpOpenDF(const FSSpec *spec, SInt8 permission, __int16 *refNum);
OSErr __fastcall FSpOpenOrphanResFile(const FSSpec *spec, SignedByte permission, SInt16 *refNum);
OSErr __fastcall FSpOpenRF(const FSSpec *spec, SInt8 permission, __int16 *refNum);
__int16 __fastcall FSpOpenResFile(const FSSpec *spec, SignedByte permission);
OSErr __fastcall FSpRename(const FSSpec *spec, ConstStr255Param newName);
Boolean __fastcall FSpResourceFileAlreadyOpen(const FSSpec *resourceFile, Boolean *inChain, SInt16 *refNum);
OSErr __fastcall FSpRstFLock(const FSSpec *spec);
OSErr __fastcall FSpSetFInfo(const FSSpec *spec, const FInfo *fndrInfo);
OSErr __fastcall FSpSetFLock(const FSSpec *spec);
OSErr __fastcall FetchFontInfo(SInt16 fontID, SInt16 fontSize, SInt16 fontStyle, FontInfo *info);
void __fastcall FillArc(const Rect *r, __int16 startAngle, __int16 arcAngle, const Pattern *pat);
void __fastcall FillCArc(const Rect *r, __int16 startAngle, __int16 arcAngle, PixPatHandle pp);
void __fastcall FillCOval(const Rect *r, PixPatHandle pp);
void __fastcall FillCPoly(PolyHandle poly, PixPatHandle pp);
void __fastcall FillCRect(const Rect *r, PixPatHandle pp);
void __fastcall FillCRgn(RgnHandle rgn, PixPatHandle pp);
void __fastcall FillCRoundRect(const Rect *r, __int16 ovalWidth, __int16 ovalHeight, PixPatHandle pp);
void __fastcall FillOval(const Rect *r, const Pattern *pat);
Boolean __fastcall FillParseTable(CharByteTable table, ScriptCode script);
void __fastcall FillPoly(PolyHandle poly, const Pattern *pat);
void __fastcall FillRect(const Rect *r, const Pattern *pat);
void __fastcall FillRgn(RgnHandle rgn, const Pattern *pat);
void __fastcall FillRoundRect(const Rect *r, __int16 ovalWidth, __int16 ovalHeight, const Pattern *pat);
ControlPartCode __fastcall FindControl(Point testPoint, WindowRef theWindow, ControlRef *theControl);
ControlRef __fastcall FindControlUnderMouse(Point inWhere, WindowRef inWindow, ControlPartCode *outPart);
DialogItemIndexZeroBased __fastcall FindDialogItem(DialogRef theDialog, Point thePt);
OSErr __fastcall FindFolder(__int16 vRefNum, OSType folderType, Boolean createFolder, __int16 *foundVRefNum, int *foundDirID);
OSErr __fastcall FindFolderExtended(__int16 vol, OSType foldType, Boolean createFolder, UInt32 flags, void *data, __int16 *vRefNum, int *dirID);
OSErr __fastcall FindFolderRouting(OSType fileType, FolderType routeFromFolder, FolderType *routeToFolder, RoutingFlags *flags);
Component __fastcall FindNextComponent(Component aComponent, ComponentDescription *looking);
ScriptRunStatus __fastcall FindScriptRun(Ptr textPtr, int textLen, int *lenUsed);
EventRef __fastcall FindSpecificEventInQueue(EventQueueRef inQueue, EventComparatorUPP inComparator, void *inCompareData);
OSErr __fastcall FindSymbol(CFragConnectionID connID, ConstStr255Param symName, Ptr *symAddr, CFragSymbolClass *symClass);
WindowPartCode __fastcall FindWindow(Point thePoint, WindowRef *window);
OSStatus __fastcall FindWindowOfClass(const Point *where, WindowClass inWindowClass, WindowRef *outWindow, WindowPartCode *outWindowPart);
void __fastcall FindWordBreaks(Ptr textPtr, __int16 textLength, __int16 offset, Boolean leadingEdge, BreakTablePtr breaks, OffsetTable offsets, ScriptCode script);
Fract __fastcall Fix2Frac(Fixed x);
int __fastcall Fix2Long(Fixed x);
SmallFract __fastcall Fix2SmallFract(Fixed f);
double __fastcall Fix2X(Fixed x);
Fixed __fastcall FixATan2(int x, int y);
Fixed __fastcall FixDiv(Fixed x, Fixed y);
Fixed __fastcall FixMul(Fixed a, Fixed b);
Fixed __fastcall FixRatio(__int16 numer, __int16 denom);
__int16 __fastcall FixRound(Fixed x);
OSErr __fastcall FixTSMDocument(TSMDocumentID idocID);
ComponentResult __fastcall FixTextService(ComponentInstance ts);
void __fastcall FlashMenuBar(MenuID menuID);
OSErr __fastcall FlattenCollection(Collection c, CollectionFlattenUPP flattenProc, void *refCon);
OSErr __fastcall FlattenCollectionToHdl(Collection aCollection, Handle flattened);
OSErr __fastcall FlattenPartialCollection(Collection c, CollectionFlattenUPP flattenProc, void *refCon, SInt32 whichAttributes, SInt32 matchingAttributes);
OSStatus __fastcall FlushEventQueue(EventQueueRef inQueue);
void __fastcall FlushEvents(EventMask whichMask, EventMask stopMask);
OSStatus __fastcall FlushEventsMatchingListFromQueue(EventQueueRef inQueue, UInt32 inNumTypes, const EventTypeSpec *inList);
OSErr __fastcall FlushIconRefs(OSType creator, OSType iconType);
OSErr __fastcall FlushIconRefsByVolume(SInt16 vRefNum);
OSErr __fastcall FlushMemory(void *address, unsigned int count);
OSStatus __fastcall FlushSpecificEventsFromQueue(EventQueueRef inQueue, EventComparatorUPP inComparator, void *inCompareData);
OSErr __fastcall FlushVol(ConstStr63Param volName, __int16 vRefNum);
OSStatus __fastcall FolderManagerRegisterCallNotificationProcs(OSType message, void *arg, UInt32 options);
OSErr __fastcall FolderManagerRegisterNotificationProc(FolderManagerNotificationUPP notificationProc, void *refCon, UInt32 options);
OSErr __fastcall FolderManagerUnregisterNotificationProc(FolderManagerNotificationUPP notificationProc, void *refCon);
OSErr __fastcall FollowFinderAlias(const FSSpec *fromFile, AliasHandle alias, Boolean logon, FSSpec *target, Boolean *wasChanged);
void __fastcall FontMetrics(FMetricRecPtr theMetrics);
__int16 FontScript(void);
__int16 __fastcall FontToScript(__int16 fontNumber);
OSStatus __fastcall ForEachDataBrowserItem(ControlRef browser, DataBrowserItemID container, Boolean recurse, DataBrowserItemState state, DataBrowserItemUPP callback, void *clientData);
OSErr __fastcall ForEachIconDo(IconSuiteRef theSuite, IconSelectorValue selector, IconActionUPP action, void *yourDataPtr);
void __fastcall ForeColor(int color);
FormatStatus __fastcall FormatRecToString(const NumFormatString *myCanonical, const NumberParts *partsTable, Str255 outString, TripleInt positions);
Fixed __fastcall Frac2Fix(Fract x);
double __fastcall Frac2X(Fract x);
Fract __fastcall FracCos(Fixed x);
Fract __fastcall FracDiv(Fract x, Fract y);
Fract __fastcall FracMul(Fract x, Fract y);
Fract __fastcall FracSin(Fixed x);
Fract __fastcall FracSqrt(Fract x);
void __fastcall FrameArc(const Rect *r, __int16 startAngle, __int16 arcAngle);
void __fastcall FrameOval(const Rect *r);
void __fastcall FramePoly(PolyHandle poly);
void __fastcall FrameRect(const Rect *r);
void __fastcall FrameRgn(RgnHandle rgn);
void __fastcall FrameRoundRect(const Rect *r, __int16 ovalWidth, __int16 ovalHeight);
int FreeMem(void);
WindowRef FrontNonFloatingWindow(void);
WindowRef FrontWindow(void);
Boolean FullProcessorSpeed(void);
MACRO__A _G;
void __fastcall GDeviceChanged(GDHandle gdh);
Handle GZSaveHnd(void);
OSErr __fastcall Gestalt(OSType selector, int *response);
Handle __fastcall Get1IndResource(ResType theType, __int16 index);
void __fastcall Get1IndType(ResType *theType, __int16 index);
Handle __fastcall Get1NamedResource(ResType theType, ConstStr255Param name);
Handle __fastcall Get1Resource(ResType theType, __int16 theID);
SInt16 GetAlertStage(void);
OSErr __fastcall GetAliasInfo(AliasHandle alias, AliasInfoType index, Str63 theString);
__int16 GetAppFont(void);
MenuRef GetApplicationDockTileMenu(void);
EventTargetRef GetApplicationEventTarget(void);
ScriptCode GetApplicationScript(void);
TextEncoding GetApplicationTextEncoding(void);
WindowAttributes __fastcall GetAvailableWindowAttributes(WindowClass inClass);
OSStatus __fastcall GetAvailableWindowPositioningBounds(GDHandle inDevice, Rect *outAvailableRect);
OSStatus __fastcall GetAvailableWindowPositioningRegion(GDHandle inDevice, RgnHandle ioRgn);
void __fastcall GetBackColor(RGBColor *color);
void __fastcall GetBatteryTimes(__int16 whichBattery, BatteryTimeRec *theTimes);
Fixed __fastcall GetBatteryVoltage(__int16 whichBattery);
OSErr __fastcall GetBestControlRect(ControlRef inControl, Rect *outRect, SInt16 *outBaseLineOffset);
OSErr __fastcall GetBevelButtonContentInfo(ControlRef inButton, ControlButtonContentInfoPtr outContent);
OSErr __fastcall GetBevelButtonMenuHandle(ControlRef inButton, MenuHandle *outHandle);
OSErr __fastcall GetBevelButtonMenuValue(ControlRef inButton, SInt16 *outValue);
CCrsrHandle __fastcall GetCCursor(__int16 crsrID);
CFTypeRef __fastcall GetCFRunLoopFromEventLoop(EventLoopRef inEventLoop);
CIconHandle __fastcall GetCIcon(SInt16 iconID);
int GetCPUSpeed(void);
void __fastcall GetCPixel(__int16 h, __int16 v, RGBColor *cPix);
int GetCTSeed(void);
CTabHandle __fastcall GetCTable(__int16 ctID);
UInt32 GetCaretTime(void);
void __fastcall GetClip(RgnHandle rgn);
SInt32 __fastcall GetCollectionDefaultAttributes(Collection c);
CollectionExceptionUPP __fastcall GetCollectionExceptionProc(Collection c);
OSErr __fastcall GetCollectionItem(Collection c, CollectionTag tag, SInt32 id, SInt32 *itemSize, void *itemData);
OSErr __fastcall GetCollectionItemHdl(Collection aCollection, CollectionTag tag, SInt32 id, Handle itemData);
OSErr __fastcall GetCollectionItemInfo(Collection c, CollectionTag tag, SInt32 id, SInt32 *index, SInt32 *itemSize, SInt32 *attributes);
ItemCount __fastcall GetCollectionRetainCount(Collection c);
Boolean __fastcall GetColor(Point where, ConstStr255Param prompt, const RGBColor *inColor, RGBColor *outColor);
OSErr __fastcall GetComponentIconSuite(Component aComponent, Handle *iconSuite);
OSErr __fastcall GetComponentIndString(Component aComponent, Str255 theString, __int16 strListID, __int16 index);
OSErr __fastcall GetComponentInfo(Component aComponent, ComponentDescription *cd, Handle componentName, Handle componentInfo, Handle componentIcon);
OSErr __fastcall GetComponentInstanceError(ComponentInstance aComponentInstance);
Handle __fastcall GetComponentInstanceStorage(ComponentInstance aComponentInstance);
int GetComponentListModSeed(void);
OSErr __fastcall GetComponentPublicIndString(Component aComponent, Str255 theString, __int16 strListID, __int16 index);
OSErr __fastcall GetComponentPublicResource(Component aComponent, OSType resourceType, __int16 resourceID, Handle *theResource);
OSErr __fastcall GetComponentPublicResourceList(OSType resourceType, __int16 resourceID, int flags, ComponentDescription *cd, GetMissingComponentResourceUPP missingProc, void *refCon, void *atomContainerPtr);
int __fastcall GetComponentRefcon(Component aComponent);
OSErr __fastcall GetComponentResource(Component aComponent, OSType resType, __int16 resID, Handle *theResource);
int __fastcall GetComponentTypeModSeed(OSType componentType);
int __fastcall GetComponentVersion(ComponentInstance ci);
OSErr __fastcall GetCompressionInfo(__int16 compressionID, OSType format, __int16 numChannels, __int16 sampleSize, CompressionInfoPtr cp);
OSErr __fastcall GetCompressionName(OSType compressionType, Str255 compressionName);
SInt32 __fastcall GetControl32BitMaximum(ControlRef theControl);
SInt32 __fastcall GetControl32BitMinimum(ControlRef theControl);
SInt32 __fastcall GetControl32BitValue(ControlRef theControl);
ControlActionUPP __fastcall GetControlAction(ControlRef theControl);
Rect *__fastcall GetControlBounds(ControlRef control, Rect *bounds);
OSStatus __fastcall GetControlByID(WindowRef inWindow, const ControlID *inID, ControlRef *outControl);
OSStatus __fastcall GetControlClickActivation(ControlRef inControl, Point inWhere, EventModifiers inModifiers, ClickActivationResult *outResult);
OSStatus __fastcall GetControlCommandID(ControlRef inControl, UInt32 *outCommandID);
OSErr __fastcall GetControlData(ControlRef inControl, ControlPartCode inPart, ResType inTagName, Size inBufferSize, void *inBuffer, Size *outActualSize);
Handle __fastcall GetControlDataHandle(ControlRef control);
OSErr __fastcall GetControlDataSize(ControlRef inControl, ControlPartCode inPart, ResType inTagName, Size *outMaxSize);
EventTargetRef __fastcall GetControlEventTarget(ControlRef inControl);
OSErr __fastcall GetControlFeatures(ControlRef inControl, UInt32 *outFeatures);
UInt16 __fastcall GetControlHilite(ControlRef control);
OSStatus __fastcall GetControlID(ControlRef inControl, ControlID *outID);
OSStatus __fastcall GetControlKind(ControlRef inControl, ControlKind *outControlKind);
SInt16 __fastcall GetControlMaximum(ControlRef theControl);
SInt16 __fastcall GetControlMinimum(ControlRef theControl);
WindowRef __fastcall GetControlOwner(ControlRef control);
MenuRef __fastcall GetControlPopupMenuHandle(ControlRef control);
__int16 __fastcall GetControlPopupMenuID(ControlRef control);
OSStatus __fastcall GetControlProperty(ControlRef control, OSType propertyCreator, OSType propertyTag, UInt32 bufferSize, UInt32 *actualSize, void *propertyBuffer);
OSStatus __fastcall GetControlPropertyAttributes(ControlRef control, OSType propertyCreator, OSType propertyTag, UInt32 *attributes);
OSStatus __fastcall GetControlPropertySize(ControlRef control, OSType propertyCreator, OSType propertyTag, UInt32 *size);
SInt32 __fastcall GetControlReference(ControlRef theControl);
OSStatus __fastcall GetControlRegion(ControlRef inControl, ControlPartCode inPart, RgnHandle outRegion);
void __fastcall GetControlTitle(ControlRef theControl, Str255 title);
SInt16 __fastcall GetControlValue(ControlRef theControl);
ControlVariant __fastcall GetControlVariant(ControlRef theControl);
SInt32 __fastcall GetControlViewSize(ControlRef theControl);
UInt32 GetCurrentButtonState(void);
EventRef GetCurrentEvent(void);
UInt32 GetCurrentEventButtonState(void);
UInt32 GetCurrentEventKeyModifiers(void);
EventLoopRef GetCurrentEventLoop(void);
EventQueueRef GetCurrentEventQueue(void);
EventTime GetCurrentEventTime(void);
UInt32 GetCurrentKeyModifiers(void);
OSErr __fastcall GetCurrentProcess(ProcessSerialNumber *PSN);
OSStatus __fastcall GetCurrentScrap(ScrapRef *scrap);
OSErr __fastcall GetCurrentThread(ThreadID *currentThreadID);
CursHandle __fastcall GetCursor(__int16 cursorID);
OSErr __fastcall GetCustomIconsEnabled(SInt16 vRefNum, Boolean *customIconsEnabled);
OSStatus __fastcall GetDataBrowserActiveItems(ControlRef browser, Boolean *active);
OSStatus __fastcall GetDataBrowserCallbacks(ControlRef browser, DataBrowserCallbacks *callbacks);
OSStatus __fastcall GetDataBrowserColumnViewDisplayType(ControlRef browser, DataBrowserPropertyType *propertyType);
OSStatus __fastcall GetDataBrowserColumnViewPath(ControlRef browser, Handle path);
OSStatus __fastcall GetDataBrowserColumnViewPathLength(ControlRef browser, UInt32 *pathLength);
OSStatus __fastcall GetDataBrowserCustomCallbacks(ControlRef browser, DataBrowserCustomCallbacks *callbacks);
OSStatus __fastcall GetDataBrowserEditItem(ControlRef browser, DataBrowserItemID *item, DataBrowserPropertyID *property);
OSStatus __fastcall GetDataBrowserEditText(ControlRef browser, CFMutableStringRef text);
OSStatus __fastcall GetDataBrowserHasScrollBars(ControlRef browser, Boolean *horiz, Boolean *vert);
OSStatus __fastcall GetDataBrowserItemCount(ControlRef browser, DataBrowserItemID container, Boolean recurse, DataBrowserItemState state, UInt32 *numItems);
OSStatus __fastcall GetDataBrowserItemDataBooleanValue(DataBrowserItemDataRef itemData, Boolean *theData);
OSStatus __fastcall GetDataBrowserItemDataButtonValue(DataBrowserItemDataRef itemData, ThemeButtonValue *theData);
OSStatus __fastcall GetDataBrowserItemDataDateTime(DataBrowserItemDataRef itemData, int *theData);
OSStatus __fastcall GetDataBrowserItemDataDrawState(DataBrowserItemDataRef itemData, ThemeDrawState *theData);
OSStatus __fastcall GetDataBrowserItemDataIcon(DataBrowserItemDataRef itemData, IconRef *theData);
OSStatus __fastcall GetDataBrowserItemDataIconTransform(DataBrowserItemDataRef itemData, IconTransformType *theData);
OSStatus __fastcall GetDataBrowserItemDataItemID(DataBrowserItemDataRef itemData, DataBrowserItemID *theData);
OSStatus __fastcall GetDataBrowserItemDataLongDateTime(DataBrowserItemDataRef itemData, LongDateTime *theData);
OSStatus __fastcall GetDataBrowserItemDataMaximum(DataBrowserItemDataRef itemData, SInt32 *theData);
OSStatus __fastcall GetDataBrowserItemDataMenuRef(DataBrowserItemDataRef itemData, MenuRef *theData);
OSStatus __fastcall GetDataBrowserItemDataMinimum(DataBrowserItemDataRef itemData, SInt32 *theData);
OSStatus __fastcall GetDataBrowserItemDataProperty(DataBrowserItemDataRef itemData, DataBrowserPropertyID *theData);
OSStatus __fastcall GetDataBrowserItemDataRGBColor(DataBrowserItemDataRef itemData, RGBColor *theData);
OSStatus __fastcall GetDataBrowserItemDataText(DataBrowserItemDataRef itemData, CFStringRef *theData);
OSStatus __fastcall GetDataBrowserItemDataValue(DataBrowserItemDataRef itemData, SInt32 *theData);
OSStatus __fastcall GetDataBrowserItemPartBounds(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserPropertyPart part, Rect *bounds);
OSStatus __fastcall GetDataBrowserItemState(ControlRef browser, DataBrowserItemID item, DataBrowserItemState *state);
OSStatus __fastcall GetDataBrowserItems(ControlRef browser, DataBrowserItemID container, Boolean recurse, DataBrowserItemState state, Handle items);
OSStatus __fastcall GetDataBrowserListViewDisclosureColumn(ControlRef browser, DataBrowserTableViewColumnID *column, Boolean *expandableRows);
OSStatus __fastcall GetDataBrowserListViewHeaderBtnHeight(ControlRef browser, UInt16 *height);
OSStatus __fastcall GetDataBrowserListViewHeaderDesc(ControlRef browser, DataBrowserTableViewColumnID column, DataBrowserListViewHeaderDesc *desc);
OSStatus __fastcall GetDataBrowserListViewUsePlainBackground(ControlRef browser, Boolean *usePlainBackground);
OSStatus __fastcall GetDataBrowserPropertyFlags(ControlRef browser, DataBrowserPropertyID property, DataBrowserPropertyFlags *flags);
OSStatus __fastcall GetDataBrowserScrollBarInset(ControlRef browser, Rect *insetRect);
OSStatus __fastcall GetDataBrowserScrollPosition(ControlRef browser, UInt32 *top, UInt32 *left);
OSStatus __fastcall GetDataBrowserSelectionAnchor(ControlRef browser, DataBrowserItemID *first, DataBrowserItemID *last);
OSStatus __fastcall GetDataBrowserSelectionFlags(ControlRef browser, DataBrowserSelectionFlags *selectionFlags);
OSStatus __fastcall GetDataBrowserSortOrder(ControlRef browser, DataBrowserSortOrder *order);
OSStatus __fastcall GetDataBrowserSortProperty(ControlRef browser, DataBrowserPropertyID *property);
OSStatus __fastcall GetDataBrowserTableViewColumnCount(ControlRef browser, UInt32 *numColumns);
OSStatus __fastcall GetDataBrowserTableViewColumnPosition(ControlRef browser, DataBrowserTableViewColumnID column, DataBrowserTableViewColumnIndex *position);
OSStatus __fastcall GetDataBrowserTableViewColumnProperty(ControlRef browser, DataBrowserTableViewColumnIndex column, DataBrowserTableViewColumnID *property);
OSStatus __fastcall GetDataBrowserTableViewColumnWidth(ControlRef browser, UInt16 *width);
OSStatus __fastcall GetDataBrowserTableViewGeometry(ControlRef browser, Boolean *variableWidthColumns, Boolean *variableHeightRows);
OSStatus __fastcall GetDataBrowserTableViewHiliteStyle(ControlRef browser, DataBrowserTableViewHiliteStyle *hiliteStyle);
OSStatus __fastcall GetDataBrowserTableViewItemID(ControlRef browser, DataBrowserTableViewRowIndex row, DataBrowserItemID *item);
OSStatus __fastcall GetDataBrowserTableViewItemRow(ControlRef browser, DataBrowserItemID item, DataBrowserTableViewRowIndex *row);
OSStatus __fastcall GetDataBrowserTableViewItemRowHeight(ControlRef browser, DataBrowserItemID item, UInt16 *height);
OSStatus __fastcall GetDataBrowserTableViewNamedColumnWidth(ControlRef browser, DataBrowserTableViewColumnID column, UInt16 *width);
OSStatus __fastcall GetDataBrowserTableViewRowHeight(ControlRef browser, UInt16 *height);
OSStatus __fastcall GetDataBrowserTarget(ControlRef browser, DataBrowserItemID *target);
OSStatus __fastcall GetDataBrowserUserState(ControlRef browser, CFDataRef *stateInfo);
OSStatus __fastcall GetDataBrowserViewStyle(ControlRef browser, DataBrowserViewStyle *style);
void __fastcall GetDateTime(unsigned int *secs);
UInt32 GetDblTime(void);
OSStatus __fastcall GetDebugComponentInfo(UInt32 index, OSType *componentSignature, Str255 componentName);
OSStatus __fastcall GetDebugOptionInfo(UInt32 index, OSType componentSignature, SInt32 *optionSelectorNum, Str255 optionName, Boolean *optionSetting);
__int16 GetDefFontSize(void);
OSErr __fastcall GetDefaultInputMethod(Component *ts, ScriptLanguageRecord *slRecordPtr);
OSStatus __fastcall GetDefaultInputMethodOfClass(Component *aComp, ScriptLanguageRecord *slRecPtr, TextServiceClass tsClass);
OSErr __fastcall GetDefaultOutputVolume(int *level);
OSErr __fastcall GetDefaultThreadStackSize(ThreadStyle threadStyle, Size *stackSize);
GDHandle GetDeviceList(void);
SInt16 __fastcall GetDialogCancelItem(DialogRef dialog);
SInt16 __fastcall GetDialogDefaultItem(DialogRef dialog);
DialogRef __fastcall GetDialogFromWindow(WindowRef window);
void __fastcall GetDialogItem(DialogRef theDialog, DialogItemIndex itemNo, DialogItemType *itemType, Handle *item, Rect *box);
OSErr __fastcall GetDialogItemAsControl(DialogRef inDialog, SInt16 inItemNo, ControlRef *outControl);
void __fastcall GetDialogItemText(Handle item, Str255 text);
SInt16 __fastcall GetDialogKeyboardFocusItem(DialogRef dialog);
CGrafPtr __fastcall GetDialogPort(DialogRef dialog);
TEHandle __fastcall GetDialogTextEditHandle(DialogRef dialog);
OSStatus __fastcall GetDialogTimeout(DialogRef inDialog, SInt16 *outButtonToPress, UInt32 *outSecondsToWait, UInt32 *outSecondsRemaining);
WindowRef __fastcall GetDialogWindow(DialogRef dialog);
Boolean GetDimSuspendState(void);
UInt8 GetDimmingTimeout(void);
OSErr __fastcall GetDiskFragment(const FSSpec *fileSpec, UInt32 offset, UInt32 length, ConstStr63Param fragName, CFragLoadOptions options, CFragConnectionID *connID, Ptr *mainAddr, Str255 errMessage);
OSErr __fastcall GetDocumentKindString(__int16 docVRefNum, OSType docType, OSType docCreator, Str63 kindString);
OSStatus __fastcall GetDragAllowableActions(DragRef theDrag, DragActions *outActions);
OSErr __fastcall GetDragAttributes(DragRef theDrag, DragAttributes *flags);
OSStatus __fastcall GetDragDropAction(DragRef theDrag, DragActions *outAction);
OSErr __fastcall GetDragHiliteColor(WindowRef window, RGBColor *color);
OSErr __fastcall GetDragItemBounds(DragRef theDrag, DragItemRef theItemRef, Rect *itemBounds);
OSErr __fastcall GetDragItemReferenceNumber(DragRef theDrag, UInt16 index, DragItemRef *theItemRef);
OSErr __fastcall GetDragModifiers(DragRef theDrag, SInt16 *modifiers, SInt16 *mouseDownModifiers, SInt16 *mouseUpModifiers);
OSErr __fastcall GetDragMouse(DragRef theDrag, Point *mouse, Point *globalPinnedMouse);
OSErr __fastcall GetDragOrigin(DragRef theDrag, Point *globalInitialMouse);
OptionBits __fastcall GetDrawerCurrentEdge(WindowRef inDrawerWindow);
OSStatus __fastcall GetDrawerOffsets(WindowRef inDrawerWindow, float *outLeadingOffset, float *outTrailingOffset);
WindowRef __fastcall GetDrawerParent(WindowRef inDrawerWindow);
OptionBits __fastcall GetDrawerPreferredEdge(WindowRef inDrawerWindow);
WindowDrawerState __fastcall GetDrawerState(WindowRef inDrawerWindow);
OSErr __fastcall GetDropLocation(DragRef theDrag, AEDesc *dropLocation);
OSErr __fastcall GetEOF(__int16 refNum, int *logEOF);
void __fastcall GetEntryColor(PaletteHandle srcPalette, __int16 srcEntry, RGBColor *dstRGB);
void __fastcall GetEntryUsage(PaletteHandle srcPalette, __int16 srcEntry, __int16 *dstUsage, __int16 *dstTolerance);
UInt32 __fastcall GetEventClass(EventRef inEvent);
EventTargetRef GetEventDispatcherTarget(void);
UInt32 __fastcall GetEventKind(EventRef inEvent);
OSStatus __fastcall GetEventParameter(EventRef inEvent, EventParamName inName, EventParamType inDesiredType, EventParamType *outActualType, UInt32 inBufferSize, UInt32 *outActualSize, void *outData);
UInt32 __fastcall GetEventRetainCount(EventRef inEvent);
EventTime __fastcall GetEventTime(EventRef inEvent);
void __fastcall GetFNum(ConstStr255Param name, __int16 *familyID);
OSErr __fastcall GetFPos(__int16 refNum, int *filePos);
__int16 __fastcall GetFileTranslationPaths(const FSSpec *srcDocument, FileType dstDocType, unsigned __int16 maxResultCount, FileTranslationSpecArrayPtr resultBuffer);
OSErr __fastcall GetFileTypesThatAppCanNativelyOpen(__int16 appVRefNumHint, OSType appSignature, FileType *nativeTypes);
OSErr __fastcall GetFlavorData(DragRef theDrag, DragItemRef theItemRef, FlavorType theType, void *dataPtr, Size *dataSize, UInt32 dataOffset);
OSErr __fastcall GetFlavorDataSize(DragRef theDrag, DragItemRef theItemRef, FlavorType theType, Size *dataSize);
OSErr __fastcall GetFlavorFlags(DragRef theDrag, DragItemRef theItemRef, FlavorType theType, FlavorFlags *theFlags);
OSErr __fastcall GetFlavorType(DragRef theDrag, DragItemRef theItemRef, UInt16 index, FlavorType *theType);
OSErr __fastcall GetFolderDescriptor(FolderType foldType, Size descSize, FolderDesc *foldDesc);
OSErr __fastcall GetFolderName(__int16 vRefNum, OSType foldType, __int16 *foundVRefNum, StrFileName name);
OSErr __fastcall GetFolderRoutings(UInt32 requestedRoutingCount, UInt32 *totalRoutingCount, Size routingSize, FolderRouting *theRoutings);
OSErr __fastcall GetFolderTypes(UInt32 requestedTypeCount, UInt32 *totalTypeCount, FolderType *theTypes);
OSStatus __fastcall GetFontFamilyFromMenuSelection(MenuRef menu, MenuItemIndex item, FMFontFamily *outFontFamily, FMFontStyle *outStyle);
void __fastcall GetFontInfo(FontInfo *info);
void __fastcall GetFontName(__int16 familyID, Str255 name);
void __fastcall GetForeColor(RGBColor *color);
void __fastcall GetFormatOrder(FormatOrderPtr ordering, __int16 firstFormat, __int16 lastFormat, Boolean lineRight, StyleRunDirectionUPP rlDirProc, Ptr dirParam);
OSErr __fastcall GetFreeThreadCount(ThreadStyle threadStyle, SInt16 *freeCount);
OSErr __fastcall GetFrontProcess(ProcessSerialNumber *PSN);
WindowRef __fastcall GetFrontWindowOfClass(WindowClass inWindowClass, Boolean mustBeVisible);
GDHandle GetGDevice(void);
void __fastcall GetGWorld(CGrafPtr *port, GDHandle *gdh);
GDHandle __fastcall GetGWorldDevice(GWorldPtr offscreenGWorld);
PixMapHandle __fastcall GetGWorldPixMap(GWorldPtr offscreenGWorld);
void __fastcall GetGlobalMouse(Point *globalMouse);
Boolean __fastcall GetGray(GDHandle device, const RGBColor *backGround, RGBColor *foreGround);
RgnHandle GetGrayRgn(void);
GrowZoneUPP GetGrowZone(void);
Size __fastcall GetHandleSize(Handle h);
UInt8 GetHardDiskTimeout(void);
Handle __fastcall GetIcon(SInt16 iconID);
OSErr __fastcall GetIconCacheData(IconCacheRef theCache, void **theData);
OSErr __fastcall GetIconCacheProc(IconCacheRef theCache, IconGetterUPP *theProc);
OSErr __fastcall GetIconFamilyData(IconFamilyHandle iconFamily, OSType iconType, Handle h);
OSErr __fastcall GetIconFromSuite(Handle *theIconData, IconSuiteRef theSuite, ResType theType);
OSErr __fastcall GetIconRef(SInt16 vRefNum, OSType creator, OSType iconType, IconRef *theIconRef);
OSErr __fastcall GetIconRefFromFile(const FSSpec *theFile, IconRef *theIconRef, SInt16 *theLabel);
OSStatus __fastcall GetIconRefFromFileInfo(const FSRef *inRef, UniCharCount inFileNameLength, const UniChar *inFileName, FSCatalogInfoBitmap inWhichInfo, const FSCatalogInfo *inCatalogInfo, IconServicesUsageFlags inUsageFlags, IconRef *outIconRef, SInt16 *outLabel);
OSErr __fastcall GetIconRefFromFolder(SInt16 vRefNum, SInt32 parentFolderID, SInt32 folderID, SInt8 attributes, SInt8 accessPrivileges, IconRef *theIconRef);
OSErr __fastcall GetIconRefOwners(IconRef theIconRef, UInt16 *owners);
IconRef __fastcall GetIconRefVariant(IconRef inIconRef, OSType inVariant, IconTransformType *outTransform);
OSErr __fastcall GetIconSizesFromIconRef(IconSelectorValue iconSelectorInput, IconSelectorValue *iconSelectorOutputPtr, IconServicesUsageFlags iconServicesUsageFlags, IconRef theIconRef);
OSErr __fastcall GetIconSuite(IconSuiteRef *theIconSuite, SInt16 theResID, IconSelectorValue selector);
OSErr __fastcall GetImageWellContentInfo(ControlRef inButton, ControlButtonContentInfoPtr outContent);
OSStatus __fastcall GetIndMenuItemWithCommandID(MenuRef inMenu, MenuCommand inCommandID, UInt32 inItemIndex, MenuRef *outMenu, MenuItemIndex *outIndex);
void __fastcall GetIndPattern(Pattern *thePat, __int16 patternListID, __int16 index);
Handle __fastcall GetIndResource(ResType theType, __int16 index);
void __fastcall GetIndString(Str255 theString, __int16 strListID, __int16 index);
OSErr __fastcall GetIndSymbol(CFragConnectionID connID, int symIndex, Str255 symName, Ptr *symAddr, CFragSymbolClass *symClass);
void __fastcall GetIndType(ResType *theType, __int16 index);
OSErr __fastcall GetIndVoice(__int16 index, VoiceSpec *voice);
OSErr __fastcall GetIndexedCollectionItem(Collection c, SInt32 index, SInt32 *itemSize, void *itemData);
OSErr __fastcall GetIndexedCollectionItemHdl(Collection aCollection, SInt32 index, Handle itemData);
OSErr __fastcall GetIndexedCollectionItemInfo(Collection c, SInt32 index, CollectionTag *tag, SInt32 *id, SInt32 *itemSize, SInt32 *attributes);
OSErr __fastcall GetIndexedCollectionTag(Collection c, SInt32 tagIndex, CollectionTag *tag);
OSErr __fastcall GetIndexedSubControl(ControlRef inControl, UInt16 inIndex, ControlRef *outSubControl);
OSStatus __fastcall GetIndexedWindow(WindowGroupRef inGroup, UInt32 inIndex, WindowGroupContentOptions inOptions, WindowRef *outWindow);
UInt32 GetIntModemInfo(void);
Handle __fastcall GetIntlResource(__int16 theID);
void __fastcall GetIntlResourceTable(ScriptCode script, __int16 tableCode, Handle *itlHandle, int *offset, int *length);
void __fastcall GetItemCmd(MenuRef theMenu, __int16 item, CharParameter *cmdChar);
void __fastcall GetItemIcon(MenuRef theMenu, __int16 item, __int16 *iconIndex);
void __fastcall GetItemMark(MenuRef theMenu, __int16 item, CharParameter *markChar);
void __fastcall GetItemStyle(MenuRef theMenu, __int16 item, Style *chStyle);
OSErr __fastcall GetKeyboardFocus(WindowRef inWindow, ControlRef *outControl);
void __fastcall GetKeys(KeyMap theKeys);
OSErr __fastcall GetLabel(SInt16 labelNumber, RGBColor *labelColor, Str255 labelString);
OSErr __fastcall GetLastActivity(ActivityInfo *theActivity);
EventTime GetLastUserEventTime(void);
Boolean __fastcall GetListActive(ListHandle list);
Point *__fastcall GetListCellIndent(ListHandle list, Point *indent);
Point *__fastcall GetListCellSize(ListHandle list, Point *size);
Point *__fastcall GetListClickLocation(ListHandle list, Point *click);
ListClickLoopUPP __fastcall GetListClickLoop(ListHandle list);
SInt32 __fastcall GetListClickTime(ListHandle list);
ListBounds *__fastcall GetListDataBounds(ListHandle list, ListBounds *bounds);
DataHandle __fastcall GetListDataHandle(ListHandle list);
Handle __fastcall GetListDefinition(ListHandle list);
OptionBits __fastcall GetListFlags(ListHandle list);
ControlRef __fastcall GetListHorizontalScrollBar(ListHandle list);
Point *__fastcall GetListMouseLocation(ListHandle list, Point *mouse);
CGrafPtr __fastcall GetListPort(ListHandle list);
SInt32 __fastcall GetListRefCon(ListHandle list);
OptionBits __fastcall GetListSelectionFlags(ListHandle list);
Handle __fastcall GetListUserHandle(ListHandle list);
ControlRef __fastcall GetListVerticalScrollBar(ListHandle list);
Rect *__fastcall GetListViewBounds(ListHandle list, Rect *view);
ListBounds *__fastcall GetListVisibleCells(ListHandle list, ListBounds *visible);
OSStatus __fastcall GetLocalDateTime(LocalDateTime *localDateTime, OptionBits options);
__int16 GetMBarHeight(void);
MCEntryPtr __fastcall GetMCEntry(MenuID menuID, __int16 menuItem);
MCTableHandle GetMCInfo(void);
GDHandle GetMainDevice(void);
EventLoopRef GetMainEventLoop(void);
EventQueueRef GetMainEventQueue(void);
Ptr GetMaskTable(void);
GDHandle __fastcall GetMaxDevice(const Rect *globalRect);
int __fastcall GetMaxResourceSize(Handle theResource);
OSErr __fastcall GetMemFragment(void *memAddr, UInt32 length, ConstStr63Param fragName, CFragLoadOptions options, CFragConnectionID *connID, Ptr *mainAddr, Str255 errMessage);
MenuRef __fastcall GetMenu(__int16 resourceID);
OSStatus __fastcall GetMenuAttributes(MenuRef menu, MenuAttributes *outAttributes);
MenuBarHandle GetMenuBar(void);
OSStatus __fastcall GetMenuCommandMark(MenuRef inMenu, MenuCommand inCommandID, UniChar *outMark);
OSStatus __fastcall GetMenuCommandProperty(MenuRef inMenu, MenuCommand inCommandID, OSType inPropertyCreator, OSType inPropertyTag, ByteCount inBufferSize, ByteCount *outActualSize, void *inPropertyBuffer);
OSStatus __fastcall GetMenuCommandPropertySize(MenuRef inMenu, MenuCommand inCommandID, OSType inPropertyCreator, OSType inPropertyTag, ByteCount *outSize);
OSStatus __fastcall GetMenuDefinition(MenuRef menu, MenuDefSpecPtr outDefSpec);
EventTargetRef __fastcall GetMenuEventTarget(MenuRef inMenu);
Boolean __fastcall GetMenuExcludesMarkColumn(MenuRef menu);
OSStatus __fastcall GetMenuFont(MenuRef menu, SInt16 *outFontID, UInt16 *outFontSize);
MenuRef __fastcall GetMenuHandle(MenuID menuID);
SInt16 __fastcall GetMenuHeight(MenuRef menu);
MenuID __fastcall GetMenuID(MenuRef menu);
OSStatus __fastcall GetMenuItemAttributes(MenuRef menu, MenuItemIndex item, MenuItemAttributes *outAttributes);
OSErr __fastcall GetMenuItemCommandID(MenuRef inMenu, SInt16 inItem, MenuCommand *outCommandID);
OSStatus __fastcall GetMenuItemCommandKey(MenuRef inMenu, MenuItemIndex inItem, Boolean inGetVirtualKey, UInt16 *outKey);
OSErr __fastcall GetMenuItemFontID(MenuRef inMenu, SInt16 inItem, SInt16 *outFontID);
OSErr __fastcall GetMenuItemHierarchicalID(MenuRef inMenu, SInt16 inItem, MenuID *outHierID);
OSStatus __fastcall GetMenuItemHierarchicalMenu(MenuRef inMenu, MenuItemIndex inItem, MenuRef *outHierMenu);
OSErr __fastcall GetMenuItemIconHandle(MenuRef inMenu, SInt16 inItem, UInt8 *outIconType, Handle *outIconHandle);
OSStatus __fastcall GetMenuItemIndent(MenuRef inMenu, MenuItemIndex inItem, UInt32 *outIndent);
OSErr __fastcall GetMenuItemKeyGlyph(MenuRef inMenu, SInt16 inItem, SInt16 *outGlyph);
OSErr __fastcall GetMenuItemModifiers(MenuRef inMenu, SInt16 inItem, UInt8 *outModifiers);
OSStatus __fastcall GetMenuItemProperty(MenuRef menu, MenuItemIndex item, OSType propertyCreator, OSType propertyTag, UInt32 bufferSize, UInt32 *actualSize, void *propertyBuffer);
OSStatus __fastcall GetMenuItemPropertyAttributes(MenuRef menu, MenuItemIndex item, OSType propertyCreator, OSType propertyTag, UInt32 *attributes);
OSStatus __fastcall GetMenuItemPropertySize(MenuRef menu, MenuItemIndex item, OSType propertyCreator, OSType propertyTag, UInt32 *size);
OSErr __fastcall GetMenuItemRefCon(MenuRef inMenu, SInt16 inItem, UInt32 *outRefCon);
void __fastcall GetMenuItemText(MenuRef theMenu, __int16 item, Str255 itemString);
OSErr __fastcall GetMenuItemTextEncoding(MenuRef inMenu, SInt16 inItem, TextEncoding *outScriptID);
ItemCount __fastcall GetMenuRetainCount(MenuRef inMenu);
StringPtr __fastcall GetMenuTitle(MenuRef menu, Str255 title);
OSStatus __fastcall GetMenuTitleIcon(MenuRef inMenu, UInt32 *outType, void **outIcon);
OSStatus __fastcall GetMenuTrackingData(MenuRef theMenu, MenuTrackingData *outData);
OSStatus __fastcall GetMenuType(MenuRef theMenu, UInt16 *outType);
SInt16 __fastcall GetMenuWidth(MenuRef menu);
OSStatus __fastcall GetModalDialogEventMask(DialogRef inDialog, EventMask *outMask);
void __fastcall GetMouse(Point *mouseLoc);
OSStatus __fastcall GetMouseTrackingRegionID(MouseTrackingRef inMouseRef, MouseTrackingRegionID *outID);
OSStatus __fastcall GetMouseTrackingRegionRefCon(MouseTrackingRef inMouseRef, void **outRefCon);
Handle __fastcall GetNamedResource(ResType theType, ConstStr255Param name);
WindowRef __fastcall GetNewCWindow(__int16 windowID, void *wStorage, WindowRef behind);
Collection __fastcall GetNewCollection(SInt16 collectionID);
ControlRef __fastcall GetNewControl(SInt16 resourceID, WindowRef owningWindow);
DialogRef __fastcall GetNewDialog(SInt16 dialogID, void *dStorage, WindowRef behind);
MenuBarHandle __fastcall GetNewMBar(__int16 menuBarID);
PaletteHandle __fastcall GetNewPalette(__int16 PaletteID);
WindowRef __fastcall GetNewWindow(__int16 windowID, void *wStorage, WindowRef behind);
GDHandle __fastcall GetNextDevice(GDHandle curDevice);
Boolean __fastcall GetNextEvent(EventMask eventMask, EventRecord *theEvent);
Handle __fastcall GetNextFOND(Handle fondHandle);
OSErr __fastcall GetNextProcess(ProcessSerialNumber *PSN);
OSErr __fastcall GetNextResourceFile(SInt16 curRefNum, SInt16 *nextRefNum);
WindowRef __fastcall GetNextWindow(WindowRef window);
WindowRef __fastcall GetNextWindowOfClass(WindowRef inWindow, WindowClass inWindowClass, Boolean mustBeVisible);
UInt32 __fastcall GetNumEventsInQueue(EventQueueRef inQueue);
Boolean GetOutlinePreferred(void);
PaletteHandle __fastcall GetPalette(WindowRef srcWindow);
__int16 __fastcall GetPaletteUpdates(PaletteHandle p);
void __fastcall GetParamText(StringPtr param0, StringPtr param1, StringPtr param2, StringPtr param3);
OSErr __fastcall GetPathFromTranslationDialog(const FSSpec *theDocument, const FSSpec *theApplication, TypesBlockPtr typeList, DocOpenMethod *howToOpen, FileTranslationSpec *howToTranslate);
PatHandle __fastcall GetPattern(__int16 patternID);
void __fastcall GetPen(Point *pt);
void __fastcall GetPenState(PenState *pnState);
OSErr __fastcall GetPictInfo(PicHandle thePictHandle, PictInfo *thePictInfo, __int16 verb, __int16 colorsRequested, __int16 colorPickMethod, __int16 version);
PicHandle __fastcall GetPicture(__int16 pictureID);
Ptr __fastcall GetPixBaseAddr(PixMapHandle pm);
Rect *__fastcall GetPixBounds(PixMapHandle pixMap, Rect *bounds);
__int16 __fastcall GetPixDepth(PixMapHandle pixMap);
OSErr __fastcall GetPixMapInfo(PixMapHandle thePixMapHandle, PictInfo *thePictInfo, __int16 verb, __int16 colorsRequested, __int16 colorPickMethod, __int16 version);
PixPatHandle __fastcall GetPixPat(__int16 patID);
int __fastcall GetPixRowBytes(PixMapHandle pm);
Boolean __fastcall GetPixel(__int16 h, __int16 v);
GWorldFlags __fastcall GetPixelsState(PixMapHandle pm);
void __fastcall GetPort(GrafPtr *port);
RGBColor *__fastcall GetPortBackColor(CGrafPtr port, RGBColor *backColor);
PixPatHandle __fastcall GetPortBackPixPat(CGrafPtr port, PixPatHandle backPattern);
const BitMap *__fastcall GetPortBitMapForCopyBits(CGrafPtr port);
Rect *__fastcall GetPortBounds(CGrafPtr port, Rect *rect);
__int16 __fastcall GetPortChExtra(CGrafPtr port);
RgnHandle __fastcall GetPortClipRegion(CGrafPtr port, RgnHandle clipRgn);
OSErr __fastcall GetPortCustomXFerProc(CGrafPtr port, CustomXFerProcPtr *proc, UInt32 *flags, UInt32 *refCon);
PixPatHandle __fastcall GetPortFillPixPat(CGrafPtr port, PixPatHandle fillPattern);
RGBColor *__fastcall GetPortForeColor(CGrafPtr port, RGBColor *foreColor);
__int16 __fastcall GetPortFracHPenLocation(CGrafPtr port);
CQDProcsPtr __fastcall GetPortGrafProcs(CGrafPtr port);
RGBColor *__fastcall GetPortHiliteColor(CGrafPtr port, RGBColor *hiliteColor);
RGBColor *__fastcall GetPortOpColor(CGrafPtr port, RGBColor *opColor);
Point *__fastcall GetPortPenLocation(CGrafPtr port, Point *penLocation);
SInt32 __fastcall GetPortPenMode(CGrafPtr port);
PixPatHandle __fastcall GetPortPenPixPat(CGrafPtr port, PixPatHandle penPattern);
Point *__fastcall GetPortPenSize(CGrafPtr port, Point *penSize);
__int16 __fastcall GetPortPenVisibility(CGrafPtr port);
PixMapHandle __fastcall GetPortPixMap(CGrafPtr port);
Fixed __fastcall GetPortSpExtra(CGrafPtr port);
Style __fastcall GetPortTextFace(CGrafPtr port);
__int16 __fastcall GetPortTextFont(CGrafPtr port);
__int16 __fastcall GetPortTextMode(CGrafPtr port);
__int16 __fastcall GetPortTextSize(CGrafPtr port);
RgnHandle __fastcall GetPortVisibleRegion(CGrafPtr port, RgnHandle visRgn);
Boolean GetPreserveGlyph(void);
WindowRef __fastcall GetPreviousWindow(WindowRef inWindow);
OSStatus __fastcall GetProcessBundleLocation(const ProcessSerialNumber *psn, FSRef *location);
OSStatus __fastcall GetProcessForPID(pid_t pid, ProcessSerialNumber *psn);
OSErr __fastcall GetProcessInformation(const ProcessSerialNumber *PSN, ProcessInfoRec *info);
OSStatus __fastcall GetProcessPID(const ProcessSerialNumber *psn, pid_t *pid);
Size __fastcall GetPtrSize(Ptr p);
Cursor *__fastcall GetQDGlobalsArrow(Cursor *arrow);
Pattern *__fastcall GetQDGlobalsBlack(Pattern *black);
Pattern *__fastcall GetQDGlobalsDarkGray(Pattern *dkGray);
Pattern *__fastcall GetQDGlobalsGray(Pattern *gray);
Pattern *__fastcall GetQDGlobalsLightGray(Pattern *ltGray);
int GetQDGlobalsRandomSeed(void);
BitMap *__fastcall GetQDGlobalsScreenBits(BitMap *screenBits);
CGrafPtr GetQDGlobalsThePort(void);
Pattern *__fastcall GetQDGlobalsWhite(Pattern *white);
Rect *__fastcall GetRegionBounds(RgnHandle region, Rect *bounds);
__int16 __fastcall GetResAttrs(Handle theResource);
__int16 __fastcall GetResFileAttrs(__int16 refNum);
void __fastcall GetResInfo(Handle theResource, __int16 *theID, ResType *theType, Str255 name);
Handle __fastcall GetResource(ResType theType, __int16 theID);
int __fastcall GetResourceSizeOnDisk(Handle theResource);
OSErr __fastcall GetRootControl(WindowRef inWindow, ControlRef *outControl);
__int16 GetSCSIDiskModeAddress(void);
void __fastcall GetScaledBatteryInfo(__int16 whichBattery, BatteryInfo *theInfo);
OSStatus __fastcall GetScrapByName(CFStringRef name, OptionBits options, ScrapRef *scrap);
OSStatus __fastcall GetScrapFlavorCount(ScrapRef scrap, UInt32 *infoCount);
OSStatus __fastcall GetScrapFlavorData(ScrapRef scrap, ScrapFlavorType flavorType, Size *byteCount, void *destination);
OSStatus __fastcall GetScrapFlavorFlags(ScrapRef scrap, ScrapFlavorType flavorType, ScrapFlavorFlags *flavorFlags);
OSStatus __fastcall GetScrapFlavorInfoList(ScrapRef scrap, UInt32 *infoCount, ScrapFlavorInfo info[]);
OSStatus __fastcall GetScrapFlavorSize(ScrapRef scrap, ScrapFlavorType flavorType, Size *byteCount);
OSStatus __fastcall GetScriptInfoFromTextEncoding(TextEncoding iEncoding, ScriptCode *oTextScriptID, LangCode *oTextLanguageID);
ComponentResult __fastcall GetScriptLanguageSupport(ComponentInstance ts, ScriptLanguageSupportHandle *scriptHdl);
int __fastcall GetScriptManagerVariable(__int16 selector);
int __fastcall GetScriptVariable(__int16 script, __int16 selector);
OSErr __fastcall GetServiceList(__int16 numOfInterface, OSType *supportedInterfaceTypes, TextServiceListHandle *serviceInfo, int *seedValue);
OSErr __fastcall GetSharedLibrary(ConstStr63Param libName, CFragArchitecture archType, CFragLoadOptions options, CFragConnectionID *connID, Ptr *mainAddr, Str255 errMessage);
OSStatus __fastcall GetSheetWindowParent(WindowRef inSheet, WindowRef *outParentWindow);
UInt8 GetSleepTimeout(void);
OSErr __fastcall GetSoundHeaderOffset(SndListHandle sndHandle, int *offset);
OSErr __fastcall GetSoundMixerState(SoundMixerByte *theSoundMixerByte);
OSErr __fastcall GetSoundOutputInfo(Component outputDevice, OSType selector, void *infoPtr);
OSErr __fastcall GetSoundPreference(OSType theType, Str255 name, Handle settings);
OSErr __fastcall GetSpecificFreeThreadCount(ThreadStyle threadStyle, Size stackSize, SInt16 *freeCount);
OSErr __fastcall GetSpeechInfo(SpeechChannel chan, OSType selector, void *speechInfo);
OSErr __fastcall GetSpeechPitch(SpeechChannel chan, Fixed *pitch);
OSErr __fastcall GetSpeechRate(SpeechChannel chan, Fixed *rate);
OSStatus __fastcall GetStandardAlertDefaultParams(AlertStdCFStringAlertParamPtr param, UInt32 version);
OSStatus __fastcall GetStandardDropLocation(DragRef theDrag, StandardDropLocation *outDropLocation);
OSErr __fastcall GetStartupTimer(StartupTime *theTime);
OSErr __fastcall GetStdFilterProc(ModalFilterUPP *theProc);
StringHandle __fastcall GetString(__int16 stringID);
void __fastcall GetSubTable(CTabHandle myColors, __int16 iTabRes, CTabHandle targetTbl);
SInt16 __fastcall GetSuiteLabel(IconSuiteRef theSuite);
OSErr __fastcall GetSuperControl(ControlRef inControl, ControlRef *outParent);
OSErr __fastcall GetSysBeepVolume(int *level);
__int16 GetSysDirection(void);
__int16 GetSysFont(void);
SysPPtr GetSysPPtr(void);
void __fastcall GetSystemUIMode(SystemUIMode *outMode, SystemUIOptions *outOptions);
TSMDocumentID __fastcall GetTSMTEDialogDocumentID(DialogRef dialog);
TSMTERecHandle __fastcall GetTSMTEDialogTSMTERecHandle(DialogRef dialog);
OSErr __fastcall GetTabContentRect(ControlRef inTabControl, Rect *outContentRect);
OSErr __fastcall GetTaggedCollectionItem(Collection c, CollectionTag tag, SInt32 whichItem, SInt32 *itemSize, void *itemData);
OSErr __fastcall GetTaggedCollectionItemInfo(Collection c, CollectionTag tag, SInt32 whichItem, SInt32 *id, SInt32 *index, SInt32 *itemSize, SInt32 *attributes);
OSStatus __fastcall GetTextAndEncodingFromCFString(CFStringRef inString, BytePtr outText, ByteCount inTextMaxLength, ByteCount *outTextLength, TextEncoding *outEncoding);
TextEncodingBase __fastcall GetTextEncodingBase(TextEncoding encoding);
TextEncodingFormat __fastcall GetTextEncodingFormat(TextEncoding encoding);
OSStatus __fastcall GetTextEncodingFromScriptInfo(ScriptCode iTextScriptID, LangCode iTextLanguageID, RegionCode iTextRegionID, TextEncoding *oEncoding);
OSStatus __fastcall GetTextEncodingName(TextEncoding iEncoding, TextEncodingNameSelector iNamePartSelector, RegionCode iPreferredRegion, TextEncoding iPreferredEncoding, ByteCount iOutputBufLen, ByteCount *oNameLength, RegionCode *oActualRegion, TextEncoding *oActualEncoding, TextPtr oEncodingName);
TextEncodingVariant __fastcall GetTextEncodingVariant(TextEncoding encoding);
OSErr __fastcall GetTextServiceLanguage(ScriptLanguageRecord *slRecordPtr);
ComponentResult __fastcall GetTextServiceMenu(ComponentInstance ts, MenuRef *serviceMenu);
ComponentResult __fastcall GetTextServiceProperty(ComponentInstance ts, OSType propertySelector, SInt32 *result);
OSStatus __fastcall GetTheme(Collection ioCollection);
OSStatus __fastcall GetThemeAccentColors(CTabHandle *outColors);
OSStatus __fastcall GetThemeBrushAsColor(ThemeBrush inBrush, SInt16 inDepth, Boolean inColorDev, RGBColor *outColor);
OSStatus __fastcall GetThemeButtonBackgroundBounds(const Rect *inBounds, ThemeButtonKind inKind, const ThemeButtonDrawInfo *inDrawInfo, Rect *outBounds);
OSStatus __fastcall GetThemeButtonContentBounds(const Rect *inBounds, ThemeButtonKind inKind, const ThemeButtonDrawInfo *inDrawInfo, Rect *outBounds);
OSStatus __fastcall GetThemeButtonRegion(const Rect *inBounds, ThemeButtonKind inKind, const ThemeButtonDrawInfo *inNewInfo, RgnHandle outRegion);
OSStatus __fastcall GetThemeCheckBoxStyle(ThemeCheckBoxStyle *outStyle);
OSStatus __fastcall GetThemeDrawingState(ThemeDrawingState *outState);
OSStatus __fastcall GetThemeFont(ThemeFontID inFontID, ScriptCode inScript, Str255 outFontName, SInt16 *outFontSize, Style *outStyle);
OSStatus __fastcall GetThemeMenuBackgroundRegion(const Rect *inMenuRect, ThemeMenuType menuType, RgnHandle region);
OSStatus __fastcall GetThemeMenuBarHeight(SInt16 *outHeight);
OSStatus __fastcall GetThemeMenuItemExtra(ThemeMenuItemType inItemType, SInt16 *outHeight, SInt16 *outWidth);
OSStatus __fastcall GetThemeMenuSeparatorHeight(SInt16 *outHeight);
OSStatus __fastcall GetThemeMenuTitleExtra(SInt16 *outWidth, Boolean inIsSquished);
OSStatus __fastcall GetThemeMetric(ThemeMetric inMetric, SInt32 *outMetric);
OSStatus __fastcall GetThemeScrollBarArrowStyle(ThemeScrollBarArrowStyle *outStyle);
OSStatus __fastcall GetThemeScrollBarThumbStyle(ThemeScrollBarThumbStyle *outStyle);
OSStatus __fastcall GetThemeScrollBarTrackRect(const Rect *bounds, ThemeTrackEnableState enableState, ThemeTrackPressState pressState, Boolean isHoriz, Rect *trackBounds);
OSStatus __fastcall GetThemeStandaloneGrowBoxBounds(Point origin, ThemeGrowDirection growDirection, Boolean isSmall, Rect *bounds);
OSStatus __fastcall GetThemeTabRegion(const Rect *inRect, ThemeTabStyle inStyle, ThemeTabDirection inDirection, RgnHandle ioRgn);
OSStatus __fastcall GetThemeTextColor(ThemeTextColor inColor, SInt16 inDepth, Boolean inColorDev, RGBColor *outColor);
OSStatus __fastcall GetThemeTextDimensions(CFStringRef inString, ThemeFontID inFontID, ThemeDrawState inState, Boolean inWrapToWidth, Point *ioBounds, SInt16 *outBaseline);
OSStatus __fastcall GetThemeTextShadowOutset(ThemeFontID inFontID, ThemeDrawState inState, Rect *outOutset);
OSStatus __fastcall GetThemeTrackBounds(const ThemeTrackDrawInfo *drawInfo, Rect *bounds);
OSStatus __fastcall GetThemeTrackDragRect(const ThemeTrackDrawInfo *drawInfo, Rect *dragRect);
OSStatus __fastcall GetThemeTrackLiveValue(const ThemeTrackDrawInfo *drawInfo, SInt32 relativePosition, SInt32 *value);
OSStatus __fastcall GetThemeTrackThumbPositionFromOffset(const ThemeTrackDrawInfo *drawInfo, Point thumbOffset, SInt32 *relativePosition);
OSStatus __fastcall GetThemeTrackThumbPositionFromRegion(const ThemeTrackDrawInfo *drawInfo, RgnHandle thumbRgn, SInt32 *relativePosition);
OSStatus __fastcall GetThemeTrackThumbRgn(const ThemeTrackDrawInfo *drawInfo, RgnHandle thumbRgn);
OSStatus __fastcall GetThemeWindowRegion(ThemeWindowType flavor, const Rect *contRect, ThemeDrawState state, const ThemeWindowMetrics *metrics, ThemeWindowAttributes attributes, WindowRegionCode winRegion, RgnHandle rgn);
Boolean __fastcall GetThemeWindowRegionHit(ThemeWindowType flavor, const Rect *inContRect, ThemeDrawState state, const ThemeWindowMetrics *metrics, ThemeWindowAttributes inAttributes, Point inPoint, WindowRegionCode *outRegionHit);
OSErr __fastcall GetThreadCurrentTaskRef(ThreadTaskRef *threadTRef);
OSErr __fastcall GetThreadState(ThreadID threadToGet, ThreadState *threadState);
OSErr __fastcall GetThreadStateGivenTaskRef(ThreadTaskRef threadTRef, ThreadID threadToGet, ThreadState *threadState);
void __fastcall GetTime(DateTimeRec *d);
OSErr __fastcall GetTopResourceFile(SInt16 *refNum);
OSErr __fastcall GetTranslationExtensionName(const FileTranslationSpec *translationMethod, Str31 extensionName);
OSStatus __fastcall GetUTCDateTime(UTCDateTime *utcDateTime, OptionBits options);
EventTargetRef GetUserFocusEventTarget(void);
WindowRef GetUserFocusWindow(void);
OSErr __fastcall GetVRefNum(__int16 fileRefNum, __int16 *vRefNum);
OSErr __fastcall GetVoiceDescription(const VoiceSpec *voice, VoiceDescription *info, int infoLength);
OSErr __fastcall GetVoiceInfo(const VoiceSpec *voice, OSType selector, void *voiceInfo);
int __fastcall GetWRefCon(WindowRef window);
void __fastcall GetWTitle(WindowRef window, Str255 title);
OSErr __fastcall GetWUTime(int *wuTime, Byte *wuFlag);
__int16 __fastcall GetWVariant(WindowRef window);
void __fastcall GetWakeupTimer(WakeupTime *theTime);
OSStatus __fastcall GetWindowActivationScope(WindowRef inWindow, WindowActivationScope *outScope);
OSStatus __fastcall GetWindowAlpha(WindowRef inWindow, float *outAlpha);
OSStatus __fastcall GetWindowAttributes(WindowRef window, WindowAttributes *outAttributes);
OSStatus __fastcall GetWindowBounds(WindowRef window, WindowRegionCode regionCode, Rect *globalBounds);
OSStatus __fastcall GetWindowCancelButton(WindowRef inWindow, ControlRef *outControl);
OSStatus __fastcall GetWindowClass(WindowRef window, WindowClass *outClass);
OSStatus __fastcall GetWindowContentColor(WindowRef window, RGBColor *color);
OSStatus __fastcall GetWindowContentPattern(WindowRef window, PixPatHandle outPixPat);
OSStatus __fastcall GetWindowDefaultButton(WindowRef inWindow, ControlRef *outControl);
MenuRef __fastcall GetWindowDockTileMenu(WindowRef inWindow);
EventTargetRef __fastcall GetWindowEventTarget(WindowRef inWindow);
OSStatus __fastcall GetWindowFeatures(WindowRef window, UInt32 *outFeatures);
WindowRef __fastcall GetWindowFromPort(CGrafPtr port);
OSStatus __fastcall GetWindowGreatestAreaDevice(WindowRef inWindow, WindowRegionCode inRegion, GDHandle *outGreatestDevice, Rect *outGreatestDeviceRect);
WindowGroupRef __fastcall GetWindowGroup(WindowRef inWindow);
OSStatus __fastcall GetWindowGroupAttributes(WindowGroupRef inGroup, WindowGroupAttributes *outAttributes);
OSStatus __fastcall GetWindowGroupContents(WindowGroupRef inGroup, WindowGroupContentOptions inOptions, ItemCount inAllowedItems, ItemCount *outNumItems, void **outItems);
OSStatus __fastcall GetWindowGroupLevel(WindowGroupRef inGroup, SInt32 *outLevel);
WindowGroupRef __fastcall GetWindowGroupOfClass(WindowClass windowClass);
WindowRef __fastcall GetWindowGroupOwner(WindowGroupRef inGroup);
WindowGroupRef __fastcall GetWindowGroupParent(WindowGroupRef inGroup);
ItemCount __fastcall GetWindowGroupRetainCount(WindowGroupRef inGroup);
WindowGroupRef __fastcall GetWindowGroupSibling(WindowGroupRef inGroup, Boolean inNextGroup);
OSStatus __fastcall GetWindowIdealUserState(WindowRef inWindow, Rect *outUserState);
OSStatus __fastcall GetWindowIndex(WindowRef inWindow, WindowGroupRef inStartGroup, WindowGroupContentOptions inOptions, UInt32 *outIndex);
__int16 __fastcall GetWindowKind(WindowRef window);
WindowRef GetWindowList(void);
OSStatus __fastcall GetWindowModality(WindowRef inWindow, WindowModality *outModalKind, WindowRef *outUnavailableWindow);
OSStatus __fastcall GetWindowOwnerCount(WindowRef window, UInt32 *outCount);
PicHandle __fastcall GetWindowPic(WindowRef window);
CGrafPtr __fastcall GetWindowPort(WindowRef window);
Rect *__fastcall GetWindowPortBounds(WindowRef window, Rect *bounds);
OSStatus __fastcall GetWindowProperty(WindowRef window, PropertyCreator propertyCreator, PropertyTag propertyTag, UInt32 bufferSize, UInt32 *actualSize, void *propertyBuffer);
OSStatus __fastcall GetWindowPropertyAttributes(WindowRef window, OSType propertyCreator, OSType propertyTag, UInt32 *attributes);
OSStatus __fastcall GetWindowPropertySize(WindowRef window, PropertyCreator creator, PropertyTag tag, UInt32 *size);
OSStatus __fastcall GetWindowProxyAlias(WindowRef window, AliasHandle *alias);
OSStatus __fastcall GetWindowProxyFSSpec(WindowRef window, FSSpec *outFile);
OSStatus __fastcall GetWindowProxyIcon(WindowRef window, IconRef *outIcon);
OSStatus __fastcall GetWindowRegion(WindowRef window, WindowRegionCode inRegionCode, RgnHandle ioWinRgn);
OSStatus __fastcall GetWindowResizeLimits(WindowRef inWindow, HISize *outMinLimits, HISize *outMaxLimits);
ItemCount __fastcall GetWindowRetainCount(WindowRef inWindow);
Rect *__fastcall GetWindowStandardState(WindowRef window, Rect *rect);
CGrafPtr __fastcall GetWindowStructurePort(WindowRef inWindow);
OSStatus __fastcall GetWindowStructureWidths(WindowRef inWindow, Rect *outRect);
OSStatus __fastcall GetWindowToolbar(WindowRef inWindow, HIToolbarRef *outToolbar);
Rect *__fastcall GetWindowUserState(WindowRef window, Rect *rect);
OSStatus __fastcall GetWindowWidgetHilite(WindowRef inWindow, WindowDefPartCode *outHilite);
void __fastcall GlobalToLocal(Point *pt);
void __fastcall GrafDevice(__int16 device);
int __fastcall GrowWindow(WindowRef window, Point startPt, const Rect *bBox);
void __fastcall HClrRBit(Handle h);
OSErr __fastcall HCreate(__int16 vRefNum, int dirID, ConstStr255Param fileName, OSType creator, OSType fileType);
void __fastcall HCreateResFile(__int16 vRefNum, int dirID, ConstStr255Param fileName);
OSErr __fastcall HDelete(__int16 vRefNum, int dirID, ConstStr255Param fileName);
OSErr __fastcall HGetFInfo(__int16 vRefNum, int dirID, ConstStr255Param fileName, FInfo *fndrInfo);
SInt8 __fastcall HGetState(Handle h);
OSErr __fastcall HGetVol(StringPtr volName, __int16 *vRefNum, int *dirID);
HIObjectRef HIApplicationGetCurrent(void);
OSStatus __fastcall HIComboBoxAppendTextItem(HIViewRef inComboBox, CFStringRef inText, CFIndex *outIndex);
OSStatus __fastcall HIComboBoxChangeAttributes(HIViewRef inComboBox, OptionBits inAttributesToSet, OptionBits inAttributesToClear);
OSStatus __fastcall HIComboBoxCopyTextItemAtIndex(HIViewRef inComboBox, CFIndex inIndex, CFStringRef *outString);
OSStatus __fastcall HIComboBoxCreate(const HIRect *boundsRect, CFStringRef text, const ControlFontStyleRec *style, CFArrayRef list, OptionBits inAttributes, HIViewRef *outComboBox);
OSStatus __fastcall HIComboBoxGetAttributes(HIViewRef inComboBox, OptionBits *outAttributes);
ItemCount __fastcall HIComboBoxGetItemCount(HIViewRef inComboBox);
OSStatus __fastcall HIComboBoxInsertTextItemAtIndex(HIViewRef inComboBox, CFIndex inIndex, CFStringRef inText);
OSStatus __fastcall HIComboBoxRemoveItemAtIndex(HIViewRef inComboBox, CFIndex inIndex);
Boolean __fastcall HIGrowBoxViewIsTransparent(HIViewRef inGrowBoxView);
OSStatus __fastcall HIGrowBoxViewSetTransparent(HIViewRef inGrowBoxView, Boolean inTransparent);
CGImageRef __fastcall HIImageViewCopyImage(HIViewRef inView);
OSStatus __fastcall HIImageViewCreate(CGImageRef inImage, ControlRef *outControl);
float __fastcall HIImageViewGetAlpha(HIViewRef inView);
Boolean __fastcall HIImageViewGetScaleToFit(HIViewRef inView);
Boolean __fastcall HIImageViewIsOpaque(HIViewRef inView);
OSStatus __fastcall HIImageViewSetAlpha(HIViewRef inView, float inAlpha);
OSStatus __fastcall HIImageViewSetImage(HIViewRef inView, CGImageRef inImage);
OSStatus __fastcall HIImageViewSetOpaque(HIViewRef inView, Boolean inOpaque);
OSStatus __fastcall HIImageViewSetScaleToFit(HIViewRef inView, Boolean inScaleToFit);
CFStringRef __fastcall HIObjectCopyClassID(HIObjectRef inObject);
OSStatus __fastcall HIObjectCreate(CFStringRef inClassID, EventRef inConstructData, HIObjectRef *outObject);
OSStatus __fastcall HIObjectCreateFromBundle(CFBundleRef inBundle, HIObjectRef *outObject);
void *__fastcall HIObjectDynamicCast(HIObjectRef inObject, CFStringRef inClassID);
EventTargetRef __fastcall HIObjectGetEventTarget(HIObjectRef inObject);
Boolean __fastcall HIObjectIsAccessibilityIgnored(HIObjectRef inObject);
Boolean __fastcall HIObjectIsOfClass(HIObjectRef inObject, CFStringRef inObjectClassID);
void __fastcall HIObjectPrintDebugInfo(HIObjectRef inObject);
OSStatus __fastcall HIObjectRegisterSubclass(CFStringRef inClassID, CFStringRef inBaseClassID, OptionBits inOptions, EventHandlerUPP inConstructProc, UInt32 inNumEvents, const EventTypeSpec *inEventList, void *inConstructData, HIObjectClassRef *outClassRef);
OSStatus __fastcall HIObjectSetAccessibilityIgnored(HIObjectRef inObject, Boolean inIgnored);
OSStatus __fastcall HIObjectUnregisterClass(HIObjectClassRef inClassRef);
OSStatus __fastcall HIScrollViewCreate(OptionBits inOptions, HIViewRef *outView);
Boolean __fastcall HIScrollViewGetScrollBarAutoHide(HIViewRef inView);
OSStatus __fastcall HIScrollViewSetScrollBarAutoHide(HIViewRef inView, Boolean inAutoHide);
Boolean __fastcall HIShapeContainsPoint(HIShapeRef inShape, const HIPoint *inPoint);
HIShapeRef __fastcall HIShapeCreateCopy(HIShapeRef inShape);
HIShapeRef __fastcall HIShapeCreateDifference(HIShapeRef inShape1, HIShapeRef inShape2);
HIShapeRef __fastcall HIShapeCreateIntersection(HIShapeRef inShape1, HIShapeRef inShape2);
HIMutableShapeRef HIShapeCreateMutable(void);
HIMutableShapeRef __fastcall HIShapeCreateMutableCopy(HIShapeRef inOrig);
HIShapeRef __fastcall HIShapeCreateUnion(HIShapeRef inShape1, HIShapeRef inShape2);
HIShapeRef __fastcall HIShapeCreateWithQDRgn(RgnHandle inRgn);
HIShapeRef __fastcall HIShapeCreateWithRect(const HIRect *inRect);
OSStatus __fastcall HIShapeDifference(HIShapeRef inShape1, HIShapeRef inShape2, HIMutableShapeRef outResult);
OSStatus __fastcall HIShapeGetAsQDRgn(HIShapeRef inShape, RgnHandle outRgn);
HIRect *__fastcall HIShapeGetBounds(HIShapeRef inShape, HIRect *outRect);
CFTypeID HIShapeGetTypeID(void);
OSStatus __fastcall HIShapeIntersect(HIShapeRef inShape1, HIShapeRef inShape2, HIMutableShapeRef outResult);
Boolean __fastcall HIShapeIsEmpty(HIShapeRef inShape);
Boolean __fastcall HIShapeIsRectangular(HIShapeRef inShape);
OSStatus __fastcall HIShapeOffset(HIMutableShapeRef inShape, float inDX, float inDY);
OSStatus __fastcall HIShapeReplacePathInCGContext(HIShapeRef inShape, CGContextRef inContext);
OSStatus __fastcall HIShapeSetEmpty(HIMutableShapeRef inShape);
OSStatus __fastcall HIShapeSetQDClip(HIShapeRef inShape, CGrafPtr inPort);
OSStatus __fastcall HIShapeUnion(HIShapeRef inShape1, HIShapeRef inShape2, HIMutableShapeRef outResult);
OSStatus __fastcall HIToolbarAppendItem(HIToolbarRef inToolbar, HIToolbarItemRef inItem);
OSStatus __fastcall HIToolbarChangeAttributes(HIToolbarRef inToolbar, OptionBits inAttrsToSet, OptionBits inAttrsToClear);
OSStatus __fastcall HIToolbarCopyIdentifier(HIToolbarRef inToolbar, CFStringRef *outIdentifier);
OSStatus __fastcall HIToolbarCopyItems(HIToolbarRef inToolbar, CFArrayRef *outItems);
OSStatus __fastcall HIToolbarCreate(CFStringRef inIdentifier, OptionBits inAttributes, HIToolbarRef *outToolbar);
OSStatus __fastcall HIToolbarCreateItemWithIdentifier(HIToolbarRef inToolbar, CFStringRef inIdentifier, CFTypeRef inConfigData, HIToolbarItemRef *outItem);
OSStatus __fastcall HIToolbarGetAttributes(HIToolbarRef inToolbar, OptionBits *outAttributes);
HIObjectRef __fastcall HIToolbarGetDelegate(HIToolbarRef inToolbar);
OSStatus __fastcall HIToolbarGetDisplayMode(HIToolbarRef inToolbar, HIToolbarDisplayMode *outDisplayMode);
OSStatus __fastcall HIToolbarGetDisplaySize(HIToolbarRef inToolbar, HIToolbarDisplaySize *outSize);
OSStatus __fastcall HIToolbarInsertItemAtIndex(HIToolbarRef inToolbar, HIToolbarItemRef inItem, CFIndex inIndex);
OSStatus __fastcall HIToolbarItemChangeAttributes(HIToolbarItemRef inItem, OptionBits inAttrsToSet, OptionBits inAttrsToClear);
OSStatus __fastcall HIToolbarItemCopyHelpText(HIToolbarItemRef inItem, CFStringRef *outShortText, CFStringRef *outLongText);
OSStatus __fastcall HIToolbarItemCopyIdentifier(HIToolbarItemRef inItem, CFStringRef *outIdentifier);
OSStatus __fastcall HIToolbarItemCopyImage(HIToolbarItemRef inItem, CGImageRef *outImage);
OSStatus __fastcall HIToolbarItemCopyLabel(HIToolbarItemRef inItem, CFStringRef *outLabel);
OSStatus __fastcall HIToolbarItemCopyMenu(HIToolbarItemRef inItem, MenuRef *outMenu);
OSStatus __fastcall HIToolbarItemCreate(CFStringRef inIdentifier, OptionBits inOptions, HIToolbarItemRef *outItem);
OSStatus __fastcall HIToolbarItemGetAttributes(HIToolbarItemRef inItem, OptionBits *outAttributes);
OSStatus __fastcall HIToolbarItemGetCommandID(HIToolbarItemRef inItem, MenuCommand *outCommandID);
HIToolbarRef __fastcall HIToolbarItemGetToolbar(HIToolbarItemRef inItem);
Boolean __fastcall HIToolbarItemIsEnabled(HIToolbarItemRef inItem);
OSStatus __fastcall HIToolbarItemSetCommandID(HIToolbarItemRef inItem, MenuCommand inCommandID);
OSStatus __fastcall HIToolbarItemSetEnabled(HIToolbarItemRef inItem, Boolean inEnabled);
OSStatus __fastcall HIToolbarItemSetHelpText(HIToolbarItemRef inItem, CFStringRef inShortText, CFStringRef inLongText);
OSStatus __fastcall HIToolbarItemSetIconRef(HIToolbarItemRef inItem, IconRef inIcon);
OSStatus __fastcall HIToolbarItemSetImage(HIToolbarItemRef inItem, CGImageRef inImage);
OSStatus __fastcall HIToolbarItemSetLabel(HIToolbarItemRef inItem, CFStringRef inLabel);
OSStatus __fastcall HIToolbarItemSetMenu(HIToolbarItemRef inItem, MenuRef inMenu);
OSStatus __fastcall HIToolbarRemoveItemAtIndex(HIToolbarRef inToolbar, CFIndex inIndex);
OSStatus __fastcall HIToolbarSetDelegate(HIToolbarRef inToolbar, HIObjectRef inDelegate);
OSStatus __fastcall HIToolbarSetDisplayMode(HIToolbarRef inToolbar, HIToolbarDisplayMode inDisplayMode);
OSStatus __fastcall HIToolbarSetDisplaySize(HIToolbarRef inToolbar, HIToolbarDisplaySize inSize);
OSStatus __fastcall HIViewAddSubview(HIViewRef inParent, HIViewRef inNewChild);
OSStatus __fastcall HIViewAdvanceFocus(HIViewRef inRootForFocus, EventModifiers inModifiers);
OSStatus __fastcall HIViewChangeAttributes(HIViewRef inView, OptionBits inAttrsToSet, OptionBits inAttrsToClear);
OSStatus __fastcall HIViewClick(HIViewRef inView, EventRef inEvent);
OSStatus __fastcall HIViewConvertPoint(HIPoint *ioPoint, HIViewRef inSourceView, HIViewRef inDestView);
OSStatus __fastcall HIViewConvertRect(HIRect *ioRect, HIViewRef inSourceView, HIViewRef inDestView);
OSStatus __fastcall HIViewConvertRegion(RgnHandle ioRgn, HIViewRef inSourceView, HIViewRef inDestView);
OSStatus __fastcall HIViewCreateOffscreenImage(HIViewRef inView, OptionBits inOptions, HIRect *outFrame, CGImageRef *outImage);
OSStatus __fastcall HIViewDrawCGImage(CGContextRef inContext, const HIRect *inBounds, CGImageRef inImage);
OSStatus __fastcall HIViewFindByID(HIViewRef inStartView, HIViewID inID, HIViewRef *outControl);
OSStatus __fastcall HIViewFlashDirtyArea(WindowRef inWindow);
OSStatus __fastcall HIViewGetAttributes(HIViewRef inView, OptionBits *outAttrs);
OSStatus __fastcall HIViewGetBounds(HIViewRef inView, HIRect *outRect);
HIViewRef __fastcall HIViewGetFirstSubview(HIViewRef inView);
OSStatus __fastcall HIViewGetFocusPart(HIViewRef inView, HIViewPartCode *outFocusPart);
OSStatus __fastcall HIViewGetFrame(HIViewRef inView, HIRect *outRect);
HIViewRef __fastcall HIViewGetLastSubview(HIViewRef inView);
Boolean __fastcall HIViewGetNeedsDisplay(HIViewRef inView);
HIViewRef __fastcall HIViewGetNextView(HIViewRef inView);
OSStatus __fastcall HIViewGetPartHit(HIViewRef inView, const HIPoint *inPoint, HIViewPartCode *outPart);
HIViewRef __fastcall HIViewGetPreviousView(HIViewRef inView);
HIViewRef __fastcall HIViewGetRoot(WindowRef inWindow);
OSStatus __fastcall HIViewGetSizeConstraints(HIViewRef inView, HISize *outMinSize, HISize *outMaxSize);
OSStatus __fastcall HIViewGetSubviewHit(HIViewRef inView, const HIPoint *inPoint, Boolean inDeep, HIViewRef *outView);
HIViewRef __fastcall HIViewGetSuperview(HIViewRef inView);
OSStatus __fastcall HIViewGetViewForMouseEvent(HIViewRef inView, EventRef inEvent, HIViewRef *outView);
Boolean __fastcall HIViewIsDrawingEnabled(HIViewRef inView);
Boolean __fastcall HIViewIsVisible(HIViewRef inView);
OSStatus __fastcall HIViewMoveBy(HIViewRef inView, float inDX, float inDY);
OSStatus __fastcall HIViewPlaceInSuperviewAt(HIViewRef inView, float inX, float inY);
OSStatus __fastcall HIViewRemoveFromSuperview(HIViewRef inView);
OSStatus __fastcall HIViewReshapeStructure(HIViewRef inView);
OSStatus __fastcall HIViewScrollRect(HIViewRef inView, const HIRect *inRect, float inDX, float inDY);
OSStatus __fastcall HIViewSetBoundsOrigin(HIViewRef inView, float inX, float inY);
OSStatus __fastcall HIViewSetDrawingEnabled(HIViewRef inView, Boolean inEnabled);
OSStatus __fastcall HIViewSetFirstSubViewFocus(HIViewRef inParent, HIViewRef inSubView);
OSStatus __fastcall HIViewSetFrame(HIViewRef inView, const HIRect *inRect);
OSStatus __fastcall HIViewSetNeedsDisplay(HIViewRef inView, Boolean inNeedsDisplay);
OSStatus __fastcall HIViewSetNeedsDisplayInRegion(HIViewRef inView, RgnHandle inRgn, Boolean inNeedsDisplay);
OSStatus __fastcall HIViewSetNextFocus(HIViewRef inView, HIViewRef inNextFocus);
OSStatus __fastcall HIViewSetVisible(HIViewRef inView, Boolean inVisible);
OSStatus __fastcall HIViewSetZOrder(HIViewRef inView, HIViewZOrderOp inOp, HIViewRef inOther);
OSStatus __fastcall HIViewSimulateClick(HIViewRef inView, HIViewPartCode inPartToClick, UInt32 inModifiers, ControlPartCode *outPartClicked);
Boolean __fastcall HIViewSubtreeContainsFocus(HIViewRef inSubtreeStart);
void __fastcall HLock(Handle h);
void __fastcall HLockHi(Handle h);
Boolean HMAreHelpTagsDisplayed(void);
OSStatus __fastcall HMDisplayTag(const HMHelpContentRec *inContent);
OSStatus __fastcall HMGetControlContentCallback(ControlRef inControl, HMControlContentUPP *outContentUPP);
OSStatus __fastcall HMGetControlHelpContent(ControlRef inControl, HMHelpContentRec *outContent);
OSStatus __fastcall HMGetHelpMenu(MenuRef *outHelpMenu, MenuItemIndex *outFirstCustomItemIndex);
OSStatus __fastcall HMGetMenuItemContentCallback(MenuRef inMenu, HMMenuItemContentUPP *outContentUPP);
OSStatus __fastcall HMGetMenuItemHelpContent(MenuRef inMenu, MenuItemIndex inItem, HMHelpContentRec *outContent);
OSStatus __fastcall HMGetMenuTitleContentCallback(MenuRef inMenu, HMMenuTitleContentUPP *outContentUPP);
OSStatus __fastcall HMGetTagDelay(Duration *outDelay);
OSStatus __fastcall HMGetWindowContentCallback(WindowRef inWindow, HMWindowContentUPP *outContentUPP);
OSStatus __fastcall HMGetWindowHelpContent(WindowRef inWindow, HMHelpContentRec *outContent);
OSStatus HMHideTag(void);
OSStatus __fastcall HMInstallControlContentCallback(ControlRef inControl, HMControlContentUPP inContentUPP);
OSStatus __fastcall HMInstallMenuItemContentCallback(MenuRef inMenu, HMMenuItemContentUPP inContentUPP);
OSStatus __fastcall HMInstallMenuTitleContentCallback(MenuRef inMenu, HMMenuTitleContentUPP inContentUPP);
OSStatus __fastcall HMInstallWindowContentCallback(WindowRef inWindow, HMWindowContentUPP inContentUPP);
OSStatus __fastcall HMSetControlHelpContent(ControlRef inControl, const HMHelpContentRec *inContent);
OSStatus __fastcall HMSetDialogHelpFromBalloonRsrc(DialogRef inDialog, SInt16 inHdlgRsrcID, SInt16 inItemStart);
OSStatus __fastcall HMSetHelpTagsDisplayed(Boolean inDisplayTags);
OSStatus __fastcall HMSetMenuHelpFromBalloonRsrc(MenuRef inMenu, SInt16 inHmnuRsrcID);
OSStatus __fastcall HMSetMenuItemHelpContent(MenuRef inMenu, MenuItemIndex inItem, const HMHelpContentRec *inContent);
OSStatus __fastcall HMSetTagDelay(Duration inDelay);
OSStatus __fastcall HMSetWindowHelpContent(WindowRef inWindow, const HMHelpContentRec *inContent);
void __fastcall HNoPurge(Handle h);
OSErr __fastcall HOpen(__int16 vRefNum, int dirID, ConstStr255Param fileName, SInt8 permission, __int16 *refNum);
OSErr __fastcall HOpenDF(__int16 vRefNum, int dirID, ConstStr255Param fileName, SInt8 permission, __int16 *refNum);
OSErr __fastcall HOpenRF(__int16 vRefNum, int dirID, ConstStr255Param fileName, SInt8 permission, __int16 *refNum);
__int16 __fastcall HOpenResFile(__int16 vRefNum, int dirID, ConstStr255Param fileName, SInt8 permission);
void __fastcall HPurge(Handle h);
OSStatus __fastcall HRActivate(HRReference hrRef);
OSStatus __fastcall HRDeactivate(HRReference hrRef);
OSStatus __fastcall HRDisposeReference(HRReference hrRef);
OSStatus __fastcall HRDraw(HRReference hrRef, RgnHandle updateRgnH);
OSStatus __fastcall HRDrawInPort(HRReference hrRef, RgnHandle updateRgnH, CGrafPtr grafPtr);
OSStatus __fastcall HRForceQuickdraw(HRReference hrRef, Boolean forceQuickdraw);
SInt32 __fastcall HRFreeMemory(Size inBytesNeeded);
OSStatus __fastcall HRGetBaseURL(HRReference hrRef, Handle baseURLH);
OSStatus __fastcall HRGetBaseURLAsCFString(HRReference hrRef, CFStringRef *baseString);
OSStatus __fastcall HRGetHTMLFile(HRReference hrRef, FSSpec *fsspec);
OSStatus __fastcall HRGetHTMLFileAsFSRef(HRReference hrRef, FSRef *fref);
OSStatus __fastcall HRGetHTMLRenderingLibVersion(NumVersion *returnVers);
OSStatus __fastcall HRGetHTMLURL(HRReference hrRef, Handle HTMLURLH);
OSStatus __fastcall HRGetHTMLURLAsCFURL(HRReference hrRef, CFURLRef *theURL);
OSStatus __fastcall HRGetRenderedImageSize(HRReference hrRef, Point *renderingSize);
OSStatus __fastcall HRGetRenderedImageSize32(HRReference hrRef, UInt32 *height, UInt32 *width);
OSStatus __fastcall HRGetRootURL(HRReference hrRef, Handle rootURLH);
OSStatus __fastcall HRGetRootURLAsCFString(HRReference hrRef, CFStringRef *rootString);
OSStatus __fastcall HRGetTitle(HRReference hrRef, StringPtr title);
OSStatus __fastcall HRGetTitleAsCFString(HRReference hrRef, CFStringRef *title);
OSStatus __fastcall HRGoToAnchor(HRReference hrRef, const char *anchorName);
OSStatus __fastcall HRGoToAnchorCFString(HRReference hrRef, CFStringRef anchorName);
OSStatus __fastcall HRGoToCFURL(HRReference hrRef, CFURLRef url, Boolean addToHistory, Boolean forceRefresh);
OSStatus __fastcall HRGoToData(HRReference hrRef, CFDataRef data, Boolean addToHistory, Boolean forceRefresh);
OSStatus __fastcall HRGoToFSRef(HRReference hrRef, const FSRef *fref, Boolean addToHistory, Boolean forceRefresh);
OSStatus __fastcall HRGoToFile(HRReference hrRef, const FSSpec *fsspec, Boolean addToHistory, Boolean forceRefresh);
OSStatus __fastcall HRGoToPtr(HRReference hrRef, char *buffer, UInt32 bufferSize, Boolean addToHistory, Boolean forceRefresh);
OSStatus __fastcall HRGoToURL(HRReference hrRef, const char *url, Boolean addToHistory, Boolean forceRefresh);
Boolean __fastcall HRIsHREvent(const EventRecord *eventRecord);
OSStatus __fastcall HRNewReference(HRReference *hrRef, OSType rendererType, GrafPtr grafPtr);
OSStatus __fastcall HRNewReferenceInWindow(HRReference *hrRef, OSType rendererType, WindowRef inWindowRef);
void __fastcall HRRegisterNewCFURLUPP(HRNewCFURLUPP inURLUPP, HRReference hrRef, void *inRefCon);
void __fastcall HRRegisterNewURLUPP(HRNewURLUPP inNewURLUPP, HRReference hrRef, void *inRefCon);
void __fastcall HRRegisterURLToFSRefUPP(HRURLToFSRefUPP inURLToFSRefUPP, HRReference hrRef, void *inRefCon);
void __fastcall HRRegisterURLToFSSpecUPP(HRURLToFSSpecUPP inURLToFSSpecUPP, HRReference hrRef, void *inRefCon);
void __fastcall HRRegisterWasCFURLVisitedUPP(HRWasCFURLVisitedUPP inWasCFURLVisitedUPP, HRReference hrRef, void *inRefCon);
void __fastcall HRRegisterWasURLVisitedUPP(HRWasURLVisitedUPP inWasURLVisitedUPP, HRReference hrRef, void *inRefCon);
void HRScreenConfigurationChanged(void);
OSStatus __fastcall HRScrollToImageLocation32(HRReference hrRef, SInt32 h, SInt32 v);
OSStatus __fastcall HRScrollToLocation(HRReference hrRef, Point *location);
OSStatus __fastcall HRSetDrawBorder(HRReference hrRef, Boolean drawBorder);
OSStatus __fastcall HRSetEmbeddingControl(HRReference hrRef, ControlRef controlRef);
OSStatus __fastcall HRSetGrafPtr(HRReference hrRef, GrafPtr grafPtr);
OSStatus __fastcall HRSetGrowboxCutout(HRReference hrRef, Boolean allowCutout);
OSStatus __fastcall HRSetRenderingRect(HRReference hrRef, const Rect *renderingRect);
OSStatus __fastcall HRSetScrollbarState(HRReference hrRef, HRScrollbarState hScrollbarState, HRScrollbarState vScrollbarState);
OSStatus __fastcall HRSetWindowRef(HRReference hrRef, WindowRef windowRef);
void __fastcall HRUnregisterNewCFURLUPP(HRReference hrRef);
void __fastcall HRUnregisterNewURLUPP(HRReference hrRef);
void __fastcall HRUnregisterURLToFSRefUPP(HRReference hrRef);
void __fastcall HRUnregisterURLToFSSpecUPP(HRReference hrRef);
void __fastcall HRUnregisterWasCFURLVisitedUPP(HRReference hrRef);
void __fastcall HRUnregisterWasURLVisitedUPP(HRReference hrRef);
OSStatus __fastcall HRUtilCreateFullCFURL(CFStringRef rootString, CFStringRef linkString, CFURLRef *url);
OSStatus __fastcall HRUtilCreateFullURL(const char *rootURL, const char *linkURL, Handle fullURLH);
OSStatus __fastcall HRUtilGetFSRefFromURL(CFStringRef rootString, CFStringRef linkString, FSRef *destRef);
OSStatus __fastcall HRUtilGetFSSpecFromURL(const char *rootURL, const char *linkURL, FSSpec *destSpec);
OSStatus __fastcall HRUtilGetURLFromFSRef(const FSRef *fileRef, CFURLRef *url);
OSStatus __fastcall HRUtilGetURLFromFSSpec(const FSSpec *fsspec, Handle urlHandle);
OSErr __fastcall HRename(__int16 vRefNum, int dirID, ConstStr255Param oldName, ConstStr255Param newName);
OSErr __fastcall HRstFLock(__int16 vRefNum, int dirID, ConstStr255Param fileName);
void __fastcall HSL2RGB(const HSLColor *hColor, RGBColor *rColor);
void __fastcall HSV2RGB(const HSVColor *hColor, RGBColor *rColor);
OSErr __fastcall HSetFInfo(__int16 vRefNum, int dirID, ConstStr255Param fileName, const FInfo *fndrInfo);
OSErr __fastcall HSetFLock(__int16 vRefNum, int dirID, ConstStr255Param fileName);
void __fastcall HSetRBit(Handle h);
void __fastcall HSetState(Handle h, SInt8 flags);
OSErr __fastcall HSetVol(ConstStr63Param volName, __int16 vRefNum, int dirID);
void __fastcall HUnlock(Handle h);
OSErr __fastcall HandAndHand(Handle hand1, Handle hand2);
OSErr __fastcall HandToHand(Handle *theHndl);
ControlPartCode __fastcall HandleControlClick(ControlRef inControl, Point inWhere, EventModifiers inModifiers, ControlActionUPP inAction);
OSStatus __fastcall HandleControlContextualMenuClick(ControlRef inControl, Point inWhere, Boolean *menuDisplayed);
OSStatus __fastcall HandleControlDragReceive(ControlRef inControl, DragReference inDrag);
OSStatus __fastcall HandleControlDragTracking(ControlRef inControl, DragTrackingMessage inMessage, DragReference inDrag, Boolean *outLikesDrag);
ControlPartCode __fastcall HandleControlKey(ControlRef inControl, SInt16 inKeyCode, SInt16 inCharCode, EventModifiers inModifiers);
OSStatus __fastcall HandleControlSetCursor(ControlRef control, Point localPoint, EventModifiers modifiers, Boolean *cursorWasSet);
void __fastcall HandleToRgn(Handle oldRegion, RgnHandle region);
Boolean HardDiskPowered(void);
OSErr __fastcall HardDiskQInstall(HDQueueElement *theElement);
OSErr __fastcall HardDiskQRemove(HDQueueElement *theElement);
__int16 __fastcall HasDepth(GDHandle gd, __int16 depth, __int16 whichFlags, __int16 flags);
void __fastcall HideControl(ControlRef theControl);
void HideCursor(void);
void __fastcall HideDialogItem(DialogRef theDialog, DialogItemIndex itemNo);
OSErr __fastcall HideDragHilite(DragRef theDrag);
OSStatus HideFloatingWindows(void);
void HideMenuBar(void);
ComponentResult __fastcall HidePaletteWindows(ComponentInstance ts);
void HidePen(void);
OSStatus __fastcall HideSheetWindow(WindowRef inSheet);
void __fastcall HideWindow(WindowRef window);
void __fastcall HiliteColor(const RGBColor *color);
void __fastcall HiliteControl(ControlRef theControl, ControlPartCode hiliteState);
void __fastcall HiliteMenu(MenuID menuID);
void __fastcall HiliteText(Ptr textPtr, __int16 textLength, __int16 firstOffset, __int16 secondOffset, OffsetTable offsets);
void __fastcall HiliteWindow(WindowRef window, Boolean fHilite);
OSStatus __fastcall HiliteWindowFrameForDrag(WindowRef window, Boolean hilited);
Boolean __fastcall HitTestThemeScrollBarArrows(const Rect *scrollBarBounds, ThemeTrackEnableState enableState, ThemeTrackPressState pressState, Boolean isHoriz, Point ptHit, Rect *trackBounds, ControlPartCode *partcode);
Boolean __fastcall HitTestThemeTrack(const ThemeTrackDrawInfo *drawInfo, Point mousePoint, ControlPartCode *partHit);
OSErr __fastcall HoldMemory(void *address, unsigned int count);
__int16 __fastcall HomeResFile(Handle theResource);
MACRO__A _I;
OSErr __fastcall ICACopyObjectPropertyDictionary(ICACopyObjectPropertyDictionaryPB *pb, ICACompletion completion);
OSErr __fastcall ICADownloadFile(ICADownloadFilePB *pb, ICACompletion completion);
OSErr __fastcall ICAGetChildCount(ICAGetChildCountPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetDeviceList(ICAGetDeviceListPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetNthChild(ICAGetNthChildPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetNthProperty(ICAGetNthPropertyPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetObjectInfo(ICAGetObjectInfoPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetObjectRefCon(ICAGetObjectRefConPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetParentOfObject(ICAGetParentOfObjectPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetParentOfProperty(ICAGetParentOfPropertyPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetPropertyByType(ICAGetPropertyByTypePB *pb, ICACompletion completion);
OSErr __fastcall ICAGetPropertyCount(ICAGetPropertyCountPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetPropertyData(ICAGetPropertyDataPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetPropertyInfo(ICAGetPropertyInfoPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetPropertyRefCon(ICAGetPropertyRefConPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetRootOfObject(ICAGetRootOfObjectPB *pb, ICACompletion completion);
OSErr __fastcall ICAGetRootOfProperty(ICAGetRootOfPropertyPB *pb, ICACompletion completion);
OSErr __fastcall ICAObjectSendMessage(ICAObjectSendMessagePB *pb, ICACompletion completion);
OSErr __fastcall ICARegisterEventNotification(ICARegisterEventNotificationPB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerCloseSession(ICAScannerCloseSessionPB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerGetParameters(ICAScannerGetParametersPB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerInitialize(ICAScannerInitializePB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerOpenSession(ICAScannerOpenSessionPB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerSetParameters(ICAScannerSetParametersPB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerStart(ICAScannerStartPB *pb, ICACompletion completion);
OSErr __fastcall ICAScannerStatus(ICAScannerStatusPB *pb, ICACompletion completion);
OSErr __fastcall ICASetObjectRefCon(ICASetObjectRefConPB *pb, ICACompletion completion);
OSErr __fastcall ICASetPropertyData(ICASetPropertyDataPB *pb, ICACompletion completion);
OSErr __fastcall ICASetPropertyRefCon(ICASetPropertyRefConPB *pb, ICACompletion completion);
OSStatus __fastcall ICAddMapEntry(ICInstance inst, Handle entries, const ICMapEntry *entry);
OSStatus __fastcall ICAddProfile(ICInstance inst, ICProfileID prototypeID, ICProfileID *newID);
OSStatus __fastcall ICBegin(ICInstance inst, ICPerm perm);
OSStatus __fastcall ICCountMapEntries(ICInstance inst, Handle entries, int *count);
OSStatus __fastcall ICCountPref(ICInstance inst, int *count);
OSStatus __fastcall ICCountProfiles(ICInstance inst, int *count);
OSStatus __fastcall ICCreateGURLEvent(ICInstance inst, OSType helperCreator, Handle urlH, AppleEvent *theEvent);
OSErr __fastcall ICDDisposeObject(ICD_DisposeObjectPB *pb, ICDCompletion completion);
OSErr __fastcall ICDDisposeProperty(ICD_DisposePropertyPB *pb, ICDCompletion completion);
OSErr __fastcall ICDNewObject(ICD_NewObjectPB *pb, ICDCompletion completion);
OSErr __fastcall ICDNewProperty(ICD_NewPropertyPB *pb, ICDCompletion completion);
OSStatus __fastcall ICDeleteMapEntry(ICInstance inst, Handle entries, int pos);
OSStatus __fastcall ICDeletePref(ICInstance inst, ConstStr255Param key);
OSStatus __fastcall ICDeleteProfile(ICInstance inst, ICProfileID thisID);
OSStatus __fastcall ICEditPreferences(ICInstance inst, ConstStr255Param key);
OSStatus __fastcall ICEnd(ICInstance inst);
OSStatus __fastcall ICFindPrefHandle(ICInstance inst, ConstStr255Param key, ICAttr *attr, Handle prefh);
OSStatus __fastcall ICGetConfigName(ICInstance inst, Boolean longname, Str255 name);
OSStatus __fastcall ICGetCurrentProfile(ICInstance inst, ICProfileID *currentID);
OSStatus __fastcall ICGetDefaultPref(ICInstance inst, ConstStr255Param key, Handle prefH);
OSStatus __fastcall ICGetIndMapEntry(ICInstance inst, Handle entries, int index, int *pos, ICMapEntry *entry);
OSStatus __fastcall ICGetIndPref(ICInstance inst, int index, Str255 key);
OSStatus __fastcall ICGetIndProfile(ICInstance inst, int index, ICProfileID *thisID);
OSStatus __fastcall ICGetMapEntry(ICInstance inst, Handle entries, int pos, ICMapEntry *entry);
OSStatus __fastcall ICGetPerm(ICInstance inst, ICPerm *perm);
OSStatus __fastcall ICGetPref(ICInstance inst, ConstStr255Param key, ICAttr *attr, void *buf, int *size);
OSStatus __fastcall ICGetPrefHandle(ICInstance inst, ConstStr255Param key, ICAttr *attr, Handle *prefh);
OSStatus __fastcall ICGetProfileName(ICInstance inst, ICProfileID thisID, Str255 name);
OSStatus __fastcall ICGetSeed(ICInstance inst, int *seed);
OSStatus __fastcall ICGetVersion(ICInstance inst, int whichVersion, UInt32 *version);
OSStatus __fastcall ICLaunchURL(ICInstance inst, ConstStr255Param hint, const void *data, int len, int *selStart, int *selEnd);
OSStatus __fastcall ICMapEntriesFilename(ICInstance inst, Handle entries, ConstStr255Param filename, ICMapEntry *entry);
OSStatus __fastcall ICMapEntriesTypeCreator(ICInstance inst, Handle entries, OSType fType, OSType fCreator, ConstStr255Param filename, ICMapEntry *entry);
OSStatus __fastcall ICMapFilename(ICInstance inst, ConstStr255Param filename, ICMapEntry *entry);
OSStatus __fastcall ICMapTypeCreator(ICInstance inst, OSType fType, OSType fCreator, ConstStr255Param filename, ICMapEntry *entry);
OSStatus __fastcall ICParseURL(ICInstance inst, ConstStr255Param hint, const void *data, int len, int *selStart, int *selEnd, Handle url);
OSStatus __fastcall ICSendGURLEvent(ICInstance inst, AppleEvent *theEvent);
OSStatus __fastcall ICSetCurrentProfile(ICInstance inst, ICProfileID newID);
OSStatus __fastcall ICSetMapEntry(ICInstance inst, Handle entries, int pos, const ICMapEntry *entry);
OSStatus __fastcall ICSetPref(ICInstance inst, ConstStr255Param key, ICAttr attr, const void *buf, int size);
OSStatus __fastcall ICSetPrefHandle(ICInstance inst, ConstStr255Param key, ICAttr attr, Handle prefh);
OSStatus __fastcall ICSetProfileName(ICInstance inst, ICProfileID thisID, ConstStr255Param name);
OSStatus __fastcall ICStart(ICInstance *inst, OSType signature);
OSStatus __fastcall ICStop(ICInstance inst);
CFMutableDictionaryRef __fastcall IOBSDNameMatching(mach_port_t masterPort, unsigned int options, const char *bsdName);
kern_return_t __fastcall IOCatalogueGetData(mach_port_t masterPort, int flag, char **buffer, int *size);
kern_return_t __fastcall IOCatalogueModuleLoaded(mach_port_t masterPort, io_name_t name);
kern_return_t __fastcall IOCatalogueReset(mach_port_t masterPort, int flag);
kern_return_t __fastcall IOCatalogueSendData(mach_port_t masterPort, int flag, const char *buffer, int size);
kern_return_t __fastcall IOCatalogueTerminate(mach_port_t masterPort, int flag, io_name_t description);
kern_return_t __fastcall IOCompatibiltyNumber(mach_port_t connect, unsigned int *objectNumber);
kern_return_t __fastcall IOConnectAddClient(io_connect_t connect, io_connect_t client);
kern_return_t __fastcall IOConnectAddRef(io_connect_t connect);
kern_return_t __fastcall IOConnectGetService(io_connect_t connect, io_service_t *service);
kern_return_t __fastcall IOConnectMapMemory(io_connect_t connect, unsigned int memoryType, task_port_t intoTask, vm_address_t *atAddress, vm_size_t *ofSize, IOOptionBits options);
kern_return_t IOConnectMethodScalarIScalarO(io_connect_t connect, unsigned int index, IOItemCount scalarInputCount, IOItemCount scalarOutputCount, ...);
kern_return_t IOConnectMethodScalarIStructureI(io_connect_t connect, unsigned int index, IOItemCount scalarInputCount, IOByteCount structureSize, ...);
kern_return_t IOConnectMethodScalarIStructureO(io_connect_t connect, unsigned int index, IOItemCount scalarInputCount, IOByteCount *structureSize, ...);
kern_return_t __fastcall IOConnectMethodStructureIStructureO(io_connect_t connect, unsigned int index, IOItemCount structureInputSize, IOByteCount *structureOutputSize, void *inputStructure, void *ouputStructure);
kern_return_t __fastcall IOConnectRelease(io_connect_t connect);
kern_return_t __fastcall IOConnectSetCFProperties(io_connect_t connect, CFTypeRef properties);
kern_return_t __fastcall IOConnectSetCFProperty(io_connect_t connect, CFStringRef propertyName, CFTypeRef property);
kern_return_t __fastcall IOConnectSetNotificationPort(io_connect_t connect, unsigned int type, mach_port_t port, unsigned int reference);
kern_return_t __fastcall IOConnectTrap0(io_connect_t connect, unsigned int index);
kern_return_t __fastcall IOConnectTrap1(io_connect_t connect, unsigned int index, void *p1);
kern_return_t __fastcall IOConnectTrap2(io_connect_t connect, unsigned int index, void *p1, void *p2);
kern_return_t __fastcall IOConnectTrap3(io_connect_t connect, unsigned int index, void *p1, void *p2, void *p3);
kern_return_t __fastcall IOConnectTrap4(io_connect_t connect, unsigned int index, void *p1, void *p2, void *p3, void *p4);
kern_return_t __fastcall IOConnectTrap5(io_connect_t connect, unsigned int index, void *p1, void *p2, void *p3, void *p4, void *p5);
kern_return_t __fastcall IOConnectTrap6(io_connect_t connect, unsigned int index, void *p1, void *p2, void *p3, void *p4, void *p5, void *p6);
kern_return_t __fastcall IOConnectUnmapMemory(mach_port_t connect, unsigned int memoryType, task_port_t intoTask, vm_address_t atAddress);
kern_return_t __fastcall IOCreateReceivePort(int msgType, mach_port_t *recvPort);
void __fastcall IODispatchCalloutFromMessage(void *unused, mach_msg_header_t *msg, void *reference);
MACRO__IOFBF IOFBF;
boolean_t __fastcall IOIteratorIsValid(io_iterator_t iterator);
io_object_t __fastcall IOIteratorNext(io_iterator_t iterator);
void __fastcall IOIteratorReset(io_iterator_t iterator);
kern_return_t __fastcall IOKitGetBusyState(mach_port_t masterPort, int *busyState);
kern_return_t __fastcall IOKitWaitQuiet(mach_port_t masterPort, mach_timespec_t *waitTime);
MACRO__IOFBF _IOLBF;
kern_return_t __fastcall IOMapMemory(io_connect_t connect, unsigned int memoryType, task_port_t intoTask, vm_address_t *atAddress, vm_size_t *ofSize, unsigned int flags);
kern_return_t __fastcall IOMasterPort(mach_port_t bootstrapPort, mach_port_t *masterPort);
MACRO__IOFBF _IONBF;
IONotificationPortRef __fastcall IONotificationPortCreate(mach_port_t masterPort);
void __fastcall IONotificationPortDestroy(IONotificationPortRef notify);
mach_port_t __fastcall IONotificationPortGetMachPort(IONotificationPortRef notify);
CFRunLoopSourceRef __fastcall IONotificationPortGetRunLoopSource(IONotificationPortRef notify);
boolean_t __fastcall IOObjectConformsTo(io_object_t object, const io_name_t className);
kern_return_t __fastcall IOObjectGetClass(io_object_t object, io_name_t className);
int __fastcall IOObjectGetRetainCount(io_object_t object);
boolean_t __fastcall IOObjectIsEqualTo(io_object_t object, io_object_t anObject);
kern_return_t __fastcall IOObjectRelease(io_object_t object);
kern_return_t __fastcall IOObjectRetain(io_object_t object);
CFMutableDictionaryRef __fastcall IOOpenFirmwarePathMatching(mach_port_t masterPort, unsigned int options, const char *path);
kern_return_t __fastcall IORegistryCreateIterator(mach_port_t masterPort, const io_name_t plane, IOOptionBits options, io_iterator_t *iterator);
kern_return_t __fastcall IORegistryDisposeEnumerator(io_enumerator_t enumerator);
kern_return_t __fastcall IORegistryEntryCreateCFProperties(io_registry_entry_t entry, CFMutableDictionaryRef *properties, CFAllocatorRef allocator, IOOptionBits options);
CFTypeRef __fastcall IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
kern_return_t __fastcall IORegistryEntryCreateIterator(io_registry_entry_t entry, const io_name_t plane, IOOptionBits options, io_iterator_t *iterator);
io_registry_entry_t __fastcall IORegistryEntryFromPath(mach_port_t masterPort, const io_string_t path);
kern_return_t __fastcall IORegistryEntryGetChildEntry(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t *child);
kern_return_t __fastcall IORegistryEntryGetChildIterator(io_registry_entry_t entry, const io_name_t plane, io_iterator_t *iterator);
kern_return_t __fastcall IORegistryEntryGetLocationInPlane(io_registry_entry_t entry, const io_name_t plane, io_name_t location);
kern_return_t __fastcall IORegistryEntryGetName(io_registry_entry_t entry, io_name_t name);
kern_return_t __fastcall IORegistryEntryGetNameInPlane(io_registry_entry_t entry, const io_name_t plane, io_name_t name);
kern_return_t __fastcall IORegistryEntryGetParentEntry(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t *parent);
kern_return_t __fastcall IORegistryEntryGetParentIterator(io_registry_entry_t entry, const io_name_t plane, io_iterator_t *iterator);
kern_return_t __fastcall IORegistryEntryGetPath(io_registry_entry_t entry, const io_name_t plane, io_string_t path);
kern_return_t __fastcall IORegistryEntryGetProperty(io_registry_entry_t entry, const io_name_t propertyName, io_struct_inband_t buffer, unsigned int *size);
boolean_t __fastcall IORegistryEntryInPlane(io_registry_entry_t entry, const io_name_t plane);
CFTypeRef __fastcall IORegistryEntrySearchCFProperty(io_registry_entry_t entry, const io_name_t plane, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
kern_return_t __fastcall IORegistryEntrySetCFProperties(io_registry_entry_t entry, CFTypeRef properties);
kern_return_t __fastcall IORegistryEntrySetCFProperty(io_registry_entry_t entry, CFStringRef propertyName, CFTypeRef property);
io_registry_entry_t __fastcall IORegistryGetRootEntry(mach_port_t masterPort);
kern_return_t __fastcall IORegistryIteratorEnterEntry(io_iterator_t iterator);
kern_return_t __fastcall IORegistryIteratorExitEntry(io_iterator_t iterator);
kern_return_t __fastcall IOServiceAddInterestNotification(IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification);
kern_return_t __fastcall IOServiceAddMatchingNotification(IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification);
kern_return_t __fastcall IOServiceAddNotification(mach_port_t masterPort, const io_name_t notificationType, CFDictionaryRef matching, mach_port_t wakePort, int reference, io_iterator_t *notification);
kern_return_t __fastcall IOServiceClose(io_connect_t connect);
kern_return_t __fastcall IOServiceGetBusyState(io_service_t service, int *busyState);
io_service_t __fastcall IOServiceGetMatchingService(mach_port_t masterPort, CFDictionaryRef matching);
kern_return_t __fastcall IOServiceGetMatchingServices(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
kern_return_t __fastcall IOServiceMatchPropertyTable(io_service_t service, CFDictionaryRef matching, boolean_t *matches);
CFMutableDictionaryRef __fastcall IOServiceMatching(const char *name);
CFMutableDictionaryRef __fastcall IOServiceNameMatching(const char *name);
kern_return_t __fastcall IOServiceOFPathToBSDName(mach_port_t masterPort, const io_name_t openFirmwarePath, io_name_t bsdName);
kern_return_t __fastcall IOServiceOpen(io_service_t service, task_port_t owningTask, unsigned int type, io_connect_t *connect);
kern_return_t __fastcall IOServiceRequestProbe(io_service_t service, unsigned int options);
kern_return_t __fastcall IOServiceWaitQuiet(io_service_t service, mach_timespec_t *waitTime);
OSErr __fastcall IconFamilyToIconSuite(IconFamilyHandle iconFamily, IconSelectorValue whichIcons, IconSuiteRef *iconSuite);
OSErr __fastcall IconIDToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, SInt16 iconID);
OSErr __fastcall IconMethodToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, IconGetterUPP theMethod, void *yourDataPtr);
OSErr __fastcall IconRefToIconFamily(IconRef theIconRef, IconSelectorValue whichIcons, IconFamilyHandle *iconFamily);
OSErr __fastcall IconRefToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, IconServicesUsageFlags iconServicesUsageFlags, IconRef theIconRef);
OSErr __fastcall IconSuiteToIconFamily(IconSuiteRef iconSuite, IconSelectorValue whichIcons, IconFamilyHandle *iconFamily);
OSErr __fastcall IconSuiteToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, IconSuiteRef theIconSuite);
__int16 __fastcall IdenticalString(ConstStr255Param aStr, ConstStr255Param bStr, Handle itl2Handle);
__int16 __fastcall IdenticalText(const void *aPtr, const void *bPtr, __int16 aLen, __int16 bLen, Handle itl2Handle);
OSErr __fastcall IdentifyFolder(__int16 vRefNum, int dirID, FolderType *foldType);
void __fastcall IdleControls(WindowRef inWindow);
int IdleUpdate(void);
SInt32 __fastcall IncrementAtomic(SInt32 *value);
SInt16 __fastcall IncrementAtomic16(SInt16 *value);
SInt8 __fastcall IncrementAtomic8(SInt8 *value);
void __fastcall Index2Color(int index, RGBColor *aColor);
OSStatus InitContextualMenus(void);
void InitCursor(void);
OSStatus __fastcall InitDataBrowserCallbacks(DataBrowserCallbacks *callbacks);
OSStatus __fastcall InitDataBrowserCustomCallbacks(DataBrowserCustomCallbacks *callbacks);
OSErr __fastcall InitDateCache(DateCachePtr theCache);
void __fastcall InitGDevice(__int16 qdRefNum, int mode, GDHandle gdh);
OSStatus __fastcall InitOpenTransportInContext(OTInitializationFlags flags, OTClientContextPtr *outClientContext);
void InitPalettes(void);
OSErr InitUtil(void);
ComponentResult __fastcall InitiateTextService(ComponentInstance ts);
void __fastcall InsTime(QElemPtr tmTaskPtr);
void __fastcall InsXTime(QElemPtr tmTaskPtr);
OSStatus __fastcall InsertDialogItem(DialogRef theDialog, DialogItemIndex afterItem, DialogItemType itemType, Handle itemHandle, const Rect *box);
void __fastcall InsertFontResMenu(MenuRef theMenu, __int16 afterItem, __int16 scriptFilter);
void __fastcall InsertIntlResMenu(MenuRef theMenu, ResType theType, __int16 afterItem, __int16 scriptFilter);
void __fastcall InsertMenu(MenuRef theMenu, MenuID beforeID);
void __fastcall InsertMenuItem(MenuRef theMenu, ConstStr255Param itemString, __int16 afterItem);
OSStatus __fastcall InsertMenuItemText(MenuRef menu, ConstStr255Param inString, MenuItemIndex afterItem);
OSStatus __fastcall InsertMenuItemTextWithCFString(MenuRef inMenu, CFStringRef inString, MenuItemIndex inAfterItem, MenuItemAttributes inAttributes, MenuCommand inCommandID);
void __fastcall InsertResMenu(MenuRef theMenu, ResType theType, __int16 afterItem);
OSErr __fastcall InsertResourceFile(SInt16 refNum, RsrcChainLocation where);
void __fastcall InsetRect(Rect *r, __int16 dh, __int16 dv);
void __fastcall InsetRgn(RgnHandle rgn, __int16 dh, __int16 dv);
void __fastcall InstallDebugAssertOutputHandler(DebugAssertOutputHandlerUPP handler);
OSStatus __fastcall InstallEventHandler(EventTargetRef inTarget, EventHandlerUPP inHandler, UInt32 inNumTypes, const EventTypeSpec *inList, void *inUserData, EventHandlerRef *outRef);
OSStatus __fastcall InstallEventLoopIdleTimer(EventLoopRef inEventLoop, EventTimerInterval inDelay, EventTimerInterval inInterval, EventLoopIdleTimerUPP inTimerProc, void *inTimerData, EventLoopTimerRef *outTimer);
OSStatus __fastcall InstallEventLoopTimer(EventLoopRef inEventLoop, EventTimerInterval inFireDelay, EventTimerInterval inInterval, EventLoopTimerUPP inTimerProc, void *inTimerData, EventLoopTimerRef *outTimer);
ExceptionHandlerTPP __fastcall InstallExceptionHandler(ExceptionHandlerTPP theHandler);
OSStatus __fastcall InstallIdleTimer(EventLoopRef inEventLoop, EventTimerInterval inDelay, EventTimerInterval inInterval, EventLoopTimerUPP inTimerProc, void *inTimerData, EventLoopTimerRef *outTimer);
OSErr __fastcall InstallReceiveHandler(DragReceiveHandlerUPP receiveHandler, WindowRef theWindow, void *handlerRefCon);
OSStatus __fastcall InstallStandardEventHandler(EventTargetRef inTarget);
OSErr __fastcall InstallTimeTask(QElemPtr tmTaskPtr);
OSErr __fastcall InstallTrackingHandler(DragTrackingHandlerUPP trackingHandler, WindowRef theWindow, void *handlerRefCon);
OSStatus __fastcall InstallWindowContentPaintProc(WindowRef window, WindowPaintUPP paintProc, WindowPaintProcOptions options, void *refCon);
OSErr __fastcall InstallXTimeTask(QElemPtr tmTaskPtr);
__int16 IntlScript(void);
TokenResults __fastcall IntlTokenize(TokenBlockPtr tokenParam);
void InvalMenuBar(void);
OSStatus __fastcall InvalWindowRect(WindowRef window, const Rect *bounds);
OSStatus __fastcall InvalWindowRgn(WindowRef window, RgnHandle region);
OSErr __fastcall InvalidateFolderDescriptorCache(__int16 vRefNum, int dirID);
OSStatus __fastcall InvalidateMenuEnabling(MenuRef inMenu);
OSStatus __fastcall InvalidateMenuItems(MenuRef inMenu, MenuItemIndex inFirstItem, ItemCount inNumItems);
OSStatus __fastcall InvalidateMenuSize(MenuRef inMenu);
void __fastcall InvertArc(const Rect *r, __int16 startAngle, __int16 arcAngle);
void __fastcall InvertColor(RGBColor *myColor);
void __fastcall InvertOval(const Rect *r);
void __fastcall InvertPoly(PolyHandle poly);
void __fastcall InvertRect(const Rect *r);
void __fastcall InvertRgn(RgnHandle rgn);
void __fastcall InvertRoundRect(const Rect *r, __int16 ovalWidth, __int16 ovalHeight);
OSErr __fastcall InvokeAECoerceDescUPP(const AEDesc *fromDesc, DescType toType, int handlerRefcon, AEDesc *toDesc, AECoerceDescUPP userUPP);
OSErr __fastcall InvokeAECoercePtrUPP(DescType typeCode, const void *dataPtr, Size dataSize, DescType toType, int handlerRefcon, AEDesc *result, AECoercePtrUPP userUPP);
void __fastcall InvokeAEDisposeExternalUPP(const void *dataPtr, Size dataLength, int refcon, AEDisposeExternalUPP userUPP);
OSErr __fastcall InvokeAEEventHandlerUPP(const AppleEvent *theAppleEvent, AppleEvent *reply, int handlerRefcon, AEEventHandlerUPP userUPP);
Boolean __fastcall InvokeAEFilterUPP(EventRecord *theEvent, int returnID, int transactionID, const AEAddressDesc *sender, AEFilterUPP userUPP);
Boolean __fastcall InvokeAEIdleUPP(EventRecord *theEvent, int *sleepTime, RgnHandle *mouseRgn, AEIdleUPP userUPP);
OSStatus __fastcall InvokeATSCubicClosePathUPP(void *callBackDataPtr, ATSCubicClosePathUPP userUPP);
OSStatus __fastcall InvokeATSCubicCurveToUPP(const Float32Point *pt1, const Float32Point *pt2, const Float32Point *pt3, void *callBackDataPtr, ATSCubicCurveToUPP userUPP);
OSStatus __fastcall InvokeATSCubicLineToUPP(const Float32Point *pt, void *callBackDataPtr, ATSCubicLineToUPP userUPP);
OSStatus __fastcall InvokeATSCubicMoveToUPP(const Float32Point *pt, void *callBackDataPtr, ATSCubicMoveToUPP userUPP);
OSStatus __fastcall InvokeATSQuadraticClosePathUPP(void *callBackDataPtr, ATSQuadraticClosePathUPP userUPP);
OSStatus __fastcall InvokeATSQuadraticCurveUPP(const Float32Point *pt1, const Float32Point *controlPt, const Float32Point *pt2, void *callBackDataPtr, ATSQuadraticCurveUPP userUPP);
OSStatus __fastcall InvokeATSQuadraticLineUPP(const Float32Point *pt1, const Float32Point *pt2, void *callBackDataPtr, ATSQuadraticLineUPP userUPP);
OSStatus __fastcall InvokeATSQuadraticNewPathUPP(void *callBackDataPtr, ATSQuadraticNewPathUPP userUPP);
OSStatus __fastcall InvokeATSUDirectLayoutOperationOverrideUPP(ATSULayoutOperationSelector iCurrentOperation, ATSULineRef iLineRef, UInt32 iRefCon, void *iOperationCallbackParameterPtr, ATSULayoutOperationCallbackStatus *oCallbackStatus, ATSUDirectLayoutOperationOverrideUPP userUPP);
SInt32 __fastcall InvokeAVLCompareItemsUPP(AVLTreePtr tree, const void *i1, const void *i2, AVLNodeType nd_typ, AVLCompareItemsUPP userUPP);
void __fastcall InvokeAVLDisposeItemUPP(AVLTreePtr tree, const void *dataP, AVLDisposeItemUPP userUPP);
UInt32 __fastcall InvokeAVLItemSizeUPP(AVLTreePtr tree, const void *itemPtr, AVLItemSizeUPP userUPP);
OSErr __fastcall InvokeAVLWalkUPP(AVLTreePtr tree, const void *dataP, AVLVisitStage visitStage, AVLNodeType node, UInt32 level, SInt32 balance, void *refCon, AVLWalkUPP userUPP);
Boolean __fastcall InvokeAliasFilterUPP(CInfoPBPtr cpbPtr, Boolean *quitFlag, Ptr myDataPtr, AliasFilterUPP userUPP);
Boolean __fastcall InvokeCMBitmapCallBackUPP(int progress, void *refCon, CMBitmapCallBackUPP userUPP);
Boolean __fastcall InvokeCMConcatCallBackUPP(int progress, void *refCon, CMConcatCallBackUPP userUPP);
OSErr __fastcall InvokeCMFlattenUPP(int command, int *size, void *data, void *refCon, CMFlattenUPP userUPP);
OSErr __fastcall InvokeCMMIterateUPP(CMMInfo *iterateData, void *refCon, CMMIterateUPP userUPP);
OSErr __fastcall InvokeCMProfileAccessUPP(int command, int offset, int *size, void *data, void *refCon, CMProfileAccessUPP userUPP);
Boolean __fastcall InvokeCMProfileFilterUPP(CMProfileRef prof, void *refCon, CMProfileFilterUPP userUPP);
OSErr __fastcall InvokeCMProfileIterateUPP(CMProfileIterateData *iterateData, void *refCon, CMProfileIterateUPP userUPP);
OSErr __fastcall InvokeCalcColorTableUPP(UInt32 dataRef, SInt16 colorsRequested, void *colorBankPtr, CSpecArray resultPtr, CalcColorTableUPP userUPP);
void __fastcall InvokeCalibrateEventUPP(EventRecord *event, CalibrateEventUPP userUPP);
OSErr __fastcall InvokeCalibrateUPP(CalibratorInfo *theInfo, CalibrateUPP userUPP);
Boolean __fastcall InvokeCanCalibrateUPP(CMDisplayIDType displayID, Str255 errMessage, CanCalibrateUPP userUPP);
void __fastcall InvokeCaretHookUPP(const Rect *r, TEPtr pTE, CaretHookUPP userUPP);
OSErr __fastcall InvokeCollectionExceptionUPP(Collection c, OSErr status, CollectionExceptionUPP userUPP);
OSErr __fastcall InvokeCollectionFlattenUPP(SInt32 size, void *data, void *refCon, CollectionFlattenUPP userUPP);
void __fastcall InvokeColorChangedUPP(int userData, PMColor *newColor, ColorChangedUPP userUPP);
Boolean __fastcall InvokeColorComplementUPP(RGBColor *rgb, ColorComplementUPP userUPP);
Boolean __fastcall InvokeColorSearchUPP(RGBColor *rgb, int *position, ColorSearchUPP userUPP);
ComponentResult __fastcall InvokeComponentMPWorkFunctionUPP(void *globalRefCon, ComponentMPWorkFunctionHeaderRecordPtr header, ComponentMPWorkFunctionUPP userUPP);
ComponentResult __fastcall InvokeComponentRoutineUPP(ComponentParameters *cp, Handle componentStorage, ComponentRoutineUPP userUPP);
void __fastcall InvokeControlActionUPP(ControlRef theControl, ControlPartCode partCode, ControlActionUPP userUPP);
OSStatus __fastcall InvokeControlCNTLToCollectionUPP(const Rect *bounds, SInt16 value, Boolean visible, SInt16 max, SInt16 min, SInt16 procID, SInt32 refCon, ConstStr255Param title, Collection collection, ControlCNTLToCollectionUPP userUPP);
OSStatus __fastcall InvokeControlColorUPP(ControlRef inControl, SInt16 inMessage, SInt16 inDrawDepth, Boolean inDrawInColor, ControlColorUPP userUPP);
SInt32 __fastcall InvokeControlDefUPP(SInt16 varCode, ControlRef theControl, ControlDefProcMessage message, SInt32 param, ControlDefUPP userUPP);
void __fastcall InvokeControlEditTextValidationUPP(ControlRef control, ControlEditTextValidationUPP userUPP);
ControlKeyFilterResult __fastcall InvokeControlKeyFilterUPP(ControlRef theControl, SInt16 *keyCode, SInt16 *charCode, EventModifiers *modifiers, ControlKeyFilterUPP userUPP);
void __fastcall InvokeControlUserPaneActivateUPP(ControlRef control, Boolean activating, ControlUserPaneActivateUPP userUPP);
void __fastcall InvokeControlUserPaneBackgroundUPP(ControlRef control, ControlBackgroundPtr info, ControlUserPaneBackgroundUPP userUPP);
void __fastcall InvokeControlUserPaneDrawUPP(ControlRef control, SInt16 part, ControlUserPaneDrawUPP userUPP);
ControlPartCode __fastcall InvokeControlUserPaneFocusUPP(ControlRef control, ControlFocusPart action, ControlUserPaneFocusUPP userUPP);
ControlPartCode __fastcall InvokeControlUserPaneHitTestUPP(ControlRef control, Point where, ControlUserPaneHitTestUPP userUPP);
void __fastcall InvokeControlUserPaneIdleUPP(ControlRef control, ControlUserPaneIdleUPP userUPP);
ControlPartCode __fastcall InvokeControlUserPaneKeyDownUPP(ControlRef control, SInt16 keyCode, SInt16 charCode, SInt16 modifiers, ControlUserPaneKeyDownUPP userUPP);
ControlPartCode __fastcall InvokeControlUserPaneTrackingUPP(ControlRef control, Point startPt, ControlActionUPP actionProc, ControlUserPaneTrackingUPP userUPP);
void __fastcall InvokeDMComponentListIteratorUPP(void *userData, DMListIndexType itemIndex, DMComponentListEntryPtr componentInfo, DMComponentListIteratorUPP userUPP);
void __fastcall InvokeDMDisplayListIteratorUPP(void *userData, DMListIndexType itemIndex, DisplayListEntryPtr displaymodeInfo, DMDisplayListIteratorUPP userUPP);
void __fastcall InvokeDMDisplayModeListIteratorUPP(void *userData, DMListIndexType itemIndex, DMDisplayModeListEntryPtr displaymodeInfo, DMDisplayModeListIteratorUPP userUPP);
void __fastcall InvokeDMExtendedNotificationUPP(void *userData, __int16 theMessage, void *notifyData, DMExtendedNotificationUPP userUPP);
void __fastcall InvokeDMNotificationUPP(AppleEvent *theEvent, DMNotificationUPP userUPP);
void __fastcall InvokeDMProfileListIteratorUPP(void *userData, DMListIndexType itemIndex, DMProfileListEntryPtr profileInfo, DMProfileListIteratorUPP userUPP);
Boolean __fastcall InvokeDataBrowserAcceptDragUPP(ControlRef browser, DragReference theDrag, DataBrowserItemID item, DataBrowserAcceptDragUPP userUPP);
Boolean __fastcall InvokeDataBrowserAddDragItemUPP(ControlRef browser, DragReference theDrag, DataBrowserItemID item, ItemReference *itemRef, DataBrowserAddDragItemUPP userUPP);
void __fastcall InvokeDataBrowserDrawItemUPP(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserItemState itemState, const Rect *theRect, SInt16 gdDepth, Boolean colorDevice, DataBrowserDrawItemUPP userUPP);
Boolean __fastcall InvokeDataBrowserEditItemUPP(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, CFStringRef theString, Rect *maxEditTextRect, Boolean *shrinkToFit, DataBrowserEditItemUPP userUPP);
void __fastcall InvokeDataBrowserGetContextualMenuUPP(ControlRef browser, MenuRef *menu, UInt32 *helpType, CFStringRef *helpItemString, AEDesc *selection, DataBrowserGetContextualMenuUPP userUPP);
Boolean __fastcall InvokeDataBrowserHitTestUPP(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, const Rect *mouseRect, DataBrowserHitTestUPP userUPP);
DataBrowserDragFlags __fastcall InvokeDataBrowserItemAcceptDragUPP(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, DragReference theDrag, DataBrowserItemAcceptDragUPP userUPP);
Boolean __fastcall InvokeDataBrowserItemCompareUPP(ControlRef browser, DataBrowserItemID itemOne, DataBrowserItemID itemTwo, DataBrowserPropertyID sortProperty, DataBrowserItemCompareUPP userUPP);
OSStatus __fastcall InvokeDataBrowserItemDataUPP(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserItemDataRef itemData, Boolean setValue, DataBrowserItemDataUPP userUPP);
void __fastcall InvokeDataBrowserItemDragRgnUPP(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, RgnHandle dragRgn, DataBrowserItemDragRgnUPP userUPP);
void __fastcall InvokeDataBrowserItemHelpContentUPP(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent, DataBrowserItemHelpContentUPP userUPP);
void __fastcall InvokeDataBrowserItemNotificationUPP(ControlRef browser, DataBrowserItemID item, DataBrowserItemNotification message, DataBrowserItemNotificationUPP userUPP);
void __fastcall InvokeDataBrowserItemNotificationWithItemUPP(ControlRef browser, DataBrowserItemID item, DataBrowserItemNotification message, DataBrowserItemDataRef itemData, DataBrowserItemNotificationWithItemUPP userUPP);
Boolean __fastcall InvokeDataBrowserItemReceiveDragUPP(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, DataBrowserDragFlags dragFlags, DragReference theDrag, DataBrowserItemReceiveDragUPP userUPP);
void __fastcall InvokeDataBrowserItemUPP(DataBrowserItemID item, DataBrowserItemState state, void *clientData, DataBrowserItemUPP userUPP);
void __fastcall InvokeDataBrowserPostProcessDragUPP(ControlRef browser, DragReference theDrag, OSStatus trackDragResult, DataBrowserPostProcessDragUPP userUPP);
Boolean __fastcall InvokeDataBrowserReceiveDragUPP(ControlRef browser, DragReference theDrag, DataBrowserItemID item, DataBrowserReceiveDragUPP userUPP);
void __fastcall InvokeDataBrowserSelectContextualMenuUPP(ControlRef browser, MenuRef menu, UInt32 selectionType, SInt16 menuID, MenuItemIndex menuItem, DataBrowserSelectContextualMenuUPP userUPP);
DataBrowserTrackingResult __fastcall InvokeDataBrowserTrackingUPP(ControlRef browser, DataBrowserItemID itemID, DataBrowserPropertyID property, const Rect *theRect, Point startPt, EventModifiers modifiers, DataBrowserTrackingUPP userUPP);
void __fastcall InvokeDebugAssertOutputHandlerUPP(OSType componentSignature, UInt32 options, const char *assertionString, const char *exceptionLabelString, const char *errorString, const char *fileName, int lineNumber, void *value, ConstStr255Param outputMsg, DebugAssertOutputHandlerUPP userUPP);
void __fastcall InvokeDebugComponentCallbackUPP(SInt32 optionSelectorNum, UInt32 command, Boolean *optionSetting, DebugComponentCallbackUPP userUPP);
void __fastcall InvokeDebuggerDisposeThreadUPP(ThreadID threadDeleted, DebuggerDisposeThreadUPP userUPP);
void __fastcall InvokeDebuggerNewThreadUPP(ThreadID threadCreated, DebuggerNewThreadUPP userUPP);
ThreadID __fastcall InvokeDebuggerThreadSchedulerUPP(SchedulerInfoRecPtr schedulerInfo, DebuggerThreadSchedulerUPP userUPP);
void __fastcall InvokeDeferredTaskUPP(int dtParam, DeferredTaskUPP userUPP);
void __fastcall InvokeDeviceLoopDrawingUPP(__int16 depth, __int16 deviceFlags, GDHandle targetDevice, int userData, DeviceLoopDrawingUPP userUPP);
OSErr __fastcall InvokeDisposeColorPickMethodUPP(UInt32 dataRef, DisposeColorPickMethodUPP userUPP);
OSErr __fastcall InvokeDragDrawingUPP(DragRegionMessage message, RgnHandle showRegion, Point showOrigin, RgnHandle hideRegion, Point hideOrigin, void *dragDrawingRefCon, DragRef theDrag, DragDrawingUPP userUPP);
void __fastcall InvokeDragGrayRgnUPP(DragGrayRgnUPP userUPP);
OSErr __fastcall InvokeDragInputUPP(Point *mouse, SInt16 *modifiers, void *dragInputRefCon, DragRef theDrag, DragInputUPP userUPP);
OSErr __fastcall InvokeDragReceiveHandlerUPP(WindowRef theWindow, void *handlerRefCon, DragRef theDrag, DragReceiveHandlerUPP userUPP);
OSErr __fastcall InvokeDragSendDataUPP(FlavorType theType, void *dragSendRefCon, DragItemRef theItemRef, DragRef theDrag, DragSendDataUPP userUPP);
OSErr __fastcall InvokeDragTrackingHandlerUPP(DragTrackingMessage message, WindowRef theWindow, void *handlerRefCon, DragRef theDrag, DragTrackingHandlerUPP userUPP);
void __fastcall InvokeDrawHookUPP(unsigned __int16 textOffset, unsigned __int16 drawLen, void *textBufferPtr, TEPtr pTE, TEHandle hTE, DrawHookUPP userUPP);
Boolean __fastcall InvokeEOLHookUPP(char theChar, TEPtr pTE, TEHandle hTE, EOLHookUPP userUPP);
Boolean __fastcall InvokeEditUnicodePostUpdateUPP(UniCharArrayHandle uniText, UniCharCount uniTextLength, UniCharArrayOffset iStartOffset, UniCharArrayOffset iEndOffset, void *refcon, EditUnicodePostUpdateUPP userUPP);
Boolean __fastcall InvokeEventComparatorUPP(EventRef inEvent, void *inCompareData, EventComparatorUPP userUPP);
OSStatus __fastcall InvokeEventHandlerUPP(EventHandlerCallRef inHandlerCallRef, EventRef inEvent, void *inUserData, EventHandlerUPP userUPP);
void __fastcall InvokeEventLoopIdleTimerUPP(EventLoopTimerRef inTimer, EventLoopIdleTimerMessage inState, void *inUserData, EventLoopIdleTimerUPP userUPP);
void __fastcall InvokeEventLoopTimerUPP(EventLoopTimerRef inTimer, void *inUserData, EventLoopTimerUPP userUPP);
OSStatus __fastcall InvokeExceptionHandlerUPP(ExceptionInformation *theException, ExceptionHandlerUPP userUPP);
Boolean __fastcall InvokeFBCCallbackUPP(UInt16 phase, float percentDone, void *data, FBCCallbackUPP userUPP);
Boolean __fastcall InvokeFBCHitTestUPP(const FSRef *theFile, void *data, FBCHitTestUPP userUPP);
OSStatus __fastcall InvokeFMFontCallbackFilterUPP(FMFont iFont, void *iRefCon, FMFontCallbackFilterUPP userUPP);
OSStatus __fastcall InvokeFMFontFamilyCallbackFilterUPP(FMFontFamily iFontFamily, void *iRefCon, FMFontFamilyCallbackFilterUPP userUPP);
void __fastcall InvokeFNSubscriptionUPP(FNMessage message, OptionBits flags, void *refcon, FNSubscriptionRef subscription, FNSubscriptionUPP userUPP);
void __fastcall InvokeFSVolumeEjectUPP(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter, FSVolumeEjectUPP userUPP);
void __fastcall InvokeFSVolumeMountUPP(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum mountedVolumeRefNum, FSVolumeMountUPP userUPP);
void __fastcall InvokeFSVolumeUnmountUPP(FSVolumeOperation volumeOp, void *clientData, OSStatus err, FSVolumeRefNum volumeRefNum, pid_t dissenter, FSVolumeUnmountUPP userUPP);
OSStatus __fastcall InvokeFolderManagerNotificationUPP(OSType message, void *arg, void *userRefCon, FolderManagerNotificationUPP userUPP);
OSErr __fastcall InvokeGetMissingComponentResourceUPP(Component c, OSType resType, __int16 resID, void *refCon, Handle *resource, GetMissingComponentResourceUPP userUPP);
OSErr __fastcall InvokeGetScrapDataUPP(ScrapType requestedFormat, Handle dataH, void *srcDataGetterRefCon, GetScrapDataUPP userUPP);
int __fastcall InvokeGrowZoneUPP(Size cbNeeded, GrowZoneUPP userUPP);
void __fastcall InvokeHDSpindownUPP(HDQueueElement *theElement, HDSpindownUPP userUPP);
OSStatus __fastcall InvokeHMControlContentUPP(ControlRef inControl, Point inGlobalMouse, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent, HMControlContentUPP userUPP);
OSStatus __fastcall InvokeHMMenuItemContentUPP(const MenuTrackingData *inTrackingData, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent, HMMenuItemContentUPP userUPP);
OSStatus __fastcall InvokeHMMenuTitleContentUPP(MenuRef inMenu, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent, HMMenuTitleContentUPP userUPP);
OSStatus __fastcall InvokeHMWindowContentUPP(WindowRef inWindow, Point inGlobalMouse, HMContentRequest inRequest, HMContentProvidedType *outContentProvided, HMHelpContentPtr ioHelpContent, HMWindowContentUPP userUPP);
OSStatus __fastcall InvokeHRNewCFURLUPP(CFURLRef url, CFStringRef targetString, Boolean addToHistory, void *refCon, HRNewCFURLUPP userUPP);
OSStatus __fastcall InvokeHRNewURLUPP(const char *url, const char *targetFrame, Boolean addToHistory, void *refCon, HRNewURLUPP userUPP);
OSStatus __fastcall InvokeHRURLToFSRefUPP(CFStringRef rootString, CFStringRef linkString, FSRef *fref, URLSourceType urlSourceType, void *refCon, HRURLToFSRefUPP userUPP);
OSStatus __fastcall InvokeHRURLToFSSpecUPP(const char *rootURL, const char *linkURL, FSSpec *fsspec, URLSourceType urlSourceType, void *refCon, HRURLToFSSpecUPP userUPP);
Boolean __fastcall InvokeHRWasCFURLVisitedUPP(CFURLRef url, void *refCon, HRWasCFURLVisitedUPP userUPP);
Boolean __fastcall InvokeHRWasURLVisitedUPP(const char *url, void *refCon, HRWasURLVisitedUPP userUPP);
void __fastcall InvokeHighHookUPP(const Rect *r, TEPtr pTE, HighHookUPP userUPP);
Boolean __fastcall InvokeHitTestHookUPP(unsigned __int16 styleRunLen, unsigned __int16 styleRunOffset, unsigned __int16 slop, void *textBufferPtr, TEPtr pTE, TEHandle hTE, unsigned __int16 *pixelWidth, unsigned __int16 *charOffset, Boolean *pixelInChar, HitTestHookUPP userUPP);
void __fastcall InvokeIOCompletionUPP(ParmBlkPtr paramBlock, IOCompletionUPP userUPP);
OSErr __fastcall InvokeIconActionUPP(ResType theType, Handle *theIcon, void *yourDataPtr, IconActionUPP userUPP);
Handle __fastcall InvokeIconGetterUPP(ResType theType, void *yourDataPtr, IconGetterUPP userUPP);
Boolean __fastcall InvokeIndexToStringUPP(__int16 item, ScriptCode *itemsScript, StringPtr *itemsStringPtr, void *yourDataPtr, IndexToStringUPP userUPP);
OSErr __fastcall InvokeInitPickMethodUPP(SInt16 colorsRequested, UInt32 *dataRef, SInt16 *colorBankType, InitPickMethodUPP userUPP);
OSStatus __fastcall InvokeKCCallbackUPP(KCEvent keychainEvent, KCCallbackInfo *info, void *userContext, KCCallbackUPP userUPP);
Boolean __fastcall InvokeListClickLoopUPP(ListClickLoopUPP userUPP);
void __fastcall InvokeListDefUPP(__int16 lMessage, Boolean lSelect, Rect *lRect, Cell lCell, __int16 lDataOffset, __int16 lDataLen, ListHandle lHandle, ListDefUPP userUPP);
__int16 __fastcall InvokeListSearchUPP(Ptr aPtr, Ptr bPtr, __int16 aLen, __int16 bLen, ListSearchUPP userUPP);
void __fastcall InvokeMenuDefUPP(__int16 message, MenuRef theMenu, Rect *menuRect, Point hitPt, __int16 *whichItem, MenuDefUPP userUPP);
void __fastcall InvokeMenuItemDrawingUPP(const Rect *inBounds, SInt16 inDepth, Boolean inIsColorDevice, SInt32 inUserData, MenuItemDrawingUPP userUPP);
void __fastcall InvokeMenuTitleDrawingUPP(const Rect *inBounds, SInt16 inDepth, Boolean inIsColorDevice, SInt32 inUserData, MenuTitleDrawingUPP userUPP);
Boolean __fastcall InvokeModalFilterUPP(DialogRef theDialog, EventRecord *theEvent, DialogItemIndex *itemHit, ModalFilterUPP userUPP);
Boolean __fastcall InvokeModalFilterYDUPP(DialogRef theDialog, EventRecord *theEvent, __int16 *itemHit, void *yourDataPtr, ModalFilterYDUPP userUPP);
void __fastcall InvokeNColorChangedUPP(int userData, NPMColor *newColor, NColorChangedUPP userUPP);
void __fastcall InvokeNMUPP(NMRecPtr nmReqPtr, NMUPP userUPP);
void __fastcall InvokeNSLClientNotifyUPP(NSLClientAsyncInfo *theClientAsyncInfo, NSLClientNotifyUPP userUPP);
void __fastcall InvokeNSLEventUPP(EventRecord *newEvent, void *userContext, NSLEventUPP userUPP);
void __fastcall InvokeNSLMgrNotifyUPP(NSLPluginAsyncInfo *thePluginAsyncInfo, NSLMgrNotifyUPP userUPP);
Boolean __fastcall InvokeNSLURLFilterUPP(char *url, Str255 displayString, NSLURLFilterUPP userUPP);
unsigned __int16 __fastcall InvokeNWidthHookUPP(unsigned __int16 styleRunLen, unsigned __int16 styleRunOffset, __int16 slop, __int16 direction, void *textBufferPtr, __int16 *lineStart, TEPtr pTE, TEHandle hTE, NWidthHookUPP userUPP);
void __fastcall InvokeNavEventUPP(NavEventCallbackMessage callBackSelector, NavCBRecPtr callBackParms, void *callBackUD, NavEventUPP userUPP);
Boolean __fastcall InvokeNavObjectFilterUPP(AEDesc *theItem, void *info, void *callBackUD, NavFilterModes filterMode, NavObjectFilterUPP userUPP);
Boolean __fastcall InvokeNavPreviewUPP(NavCBRecPtr callBackParms, void *callBackUD, NavPreviewUPP userUPP);
OSErr __fastcall InvokeOSAActiveUPP(int refCon, OSAActiveUPP userUPP);
OSErr __fastcall InvokeOSACreateAppleEventUPP(AEEventClass theAEEventClass, AEEventID theAEEventID, const AEAddressDesc *target, __int16 returnID, int transactionID, AppleEvent *result, int refCon, OSACreateAppleEventUPP userUPP);
OSErr __fastcall InvokeOSASendUPP(const AppleEvent *theAppleEvent, AppleEvent *reply, AESendMode sendMode, AESendPriority sendPriority, int timeOutInTicks, AEIdleUPP idleProc, AEFilterUPP filterProc, int refCon, OSASendUPP userUPP);
OSErr __fastcall InvokeOSLAccessorUPP(DescType desiredClass, const AEDesc *container, DescType containerClass, DescType form, const AEDesc *selectionData, AEDesc *value, int accessorRefcon, OSLAccessorUPP userUPP);
OSErr __fastcall InvokeOSLAdjustMarksUPP(int newStart, int newStop, const AEDesc *markToken, OSLAdjustMarksUPP userUPP);
OSErr __fastcall InvokeOSLCompareUPP(DescType oper, const AEDesc *obj1, const AEDesc *obj2, Boolean *result, OSLCompareUPP userUPP);
OSErr __fastcall InvokeOSLCountUPP(DescType desiredType, DescType containerClass, const AEDesc *container, int *result, OSLCountUPP userUPP);
OSErr __fastcall InvokeOSLDisposeTokenUPP(AEDesc *unneededToken, OSLDisposeTokenUPP userUPP);
OSErr __fastcall InvokeOSLGetErrDescUPP(AEDesc **appDescPtr, OSLGetErrDescUPP userUPP);
OSErr __fastcall InvokeOSLGetMarkTokenUPP(const AEDesc *dContainerToken, DescType containerClass, AEDesc *result, OSLGetMarkTokenUPP userUPP);
OSErr __fastcall InvokeOSLMarkUPP(const AEDesc *dToken, const AEDesc *markToken, int index, OSLMarkUPP userUPP);
Boolean __fastcall InvokeOTListSearchUPP(const void *ref, OTLink *linkToCheck, OTListSearchUPP userUPP);
void __fastcall InvokeOTNotifyUPP(void *contextPtr, OTEventCode code, OTResult result, void *cookie, OTNotifyUPP userUPP);
void __fastcall InvokeOTProcessUPP(void *arg, OTProcessUPP userUPP);
void __fastcall InvokePMIdleUPP(PMIdleUPP userUPP);
void __fastcall InvokePMItemUPP(DialogRef theDialog, __int16 item, PMItemUPP userUPP);
void __fastcall InvokePMPageSetupDialogInitUPP(PMPageFormat pageFormat, PMDialog *theDialog, PMPageSetupDialogInitUPP userUPP);
void __fastcall InvokePMPrintDialogInitUPP(PMPrintSettings printSettings, PMDialog *theDialog, PMPrintDialogInitUPP userUPP);
void __fastcall InvokePMSheetDoneUPP(PMPrintSession printSession, WindowRef documentWindow, Boolean accepted, PMSheetDoneUPP userUPP);
void __fastcall InvokePMgrStateChangeUPP(PMgrQueueElement *theElement, int stateBits, PMgrStateChangeUPP userUPP);
void __fastcall InvokePurgeUPP(Handle blockToPurge, PurgeUPP userUPP);
void __fastcall InvokeQDArcUPP(GrafVerb verb, const Rect *r, __int16 startAngle, __int16 arcAngle, QDArcUPP userUPP);
void __fastcall InvokeQDBitsUPP(const BitMap *srcBits, const Rect *srcRect, const Rect *dstRect, __int16 mode, RgnHandle maskRgn, QDBitsUPP userUPP);
void __fastcall InvokeQDCommentUPP(__int16 kind, __int16 dataSize, Handle dataHandle, QDCommentUPP userUPP);
void __fastcall InvokeQDGetPicUPP(void *dataPtr, __int16 byteCount, QDGetPicUPP userUPP);
void __fastcall InvokeQDJShieldCursorUPP(__int16 left, __int16 top, __int16 right, __int16 bottom, QDJShieldCursorUPP userUPP);
void __fastcall InvokeQDLineUPP(Point newPt, QDLineUPP userUPP);
void __fastcall InvokeQDOpcodeUPP(const Rect *fromRect, const Rect *toRect, UInt16 opcode, SInt16 version, QDOpcodeUPP userUPP);
void __fastcall InvokeQDOvalUPP(GrafVerb verb, const Rect *r, QDOvalUPP userUPP);
void __fastcall InvokeQDPolyUPP(GrafVerb verb, PolyHandle poly, QDPolyUPP userUPP);
void __fastcall InvokeQDPutPicUPP(const void *dataPtr, __int16 byteCount, QDPutPicUPP userUPP);
void __fastcall InvokeQDRRectUPP(GrafVerb verb, const Rect *r, __int16 ovalWidth, __int16 ovalHeight, QDRRectUPP userUPP);
void __fastcall InvokeQDRectUPP(GrafVerb verb, const Rect *r, QDRectUPP userUPP);
void __fastcall InvokeQDRgnUPP(GrafVerb verb, RgnHandle rgn, QDRgnUPP userUPP);
OSStatus __fastcall InvokeQDStdGlyphsUPP(void *dataStream, ByteCount size, QDStdGlyphsUPP userUPP);
void __fastcall InvokeQDTextUPP(__int16 byteCount, const void *textBuf, Point numer, Point denom, QDTextUPP userUPP);
__int16 __fastcall InvokeQDTxMeasUPP(__int16 byteCount, const void *textAddr, Point *numer, Point *denom, FontInfo *info, QDTxMeasUPP userUPP);
OSErr __fastcall InvokeRecordColorsUPP(UInt32 dataRef, RGBColor *colorsArray, SInt32 colorCount, SInt32 *uniqueColors, RecordColorsUPP userUPP);
Boolean __fastcall InvokeRedrawBackgroundUPP(ATSUTextLayout iLayout, UniCharArrayOffset iTextOffset, UniCharCount iTextLength, ATSTrapezoid iUnhighlightArea[], ItemCount iTrapezoidCount, RedrawBackgroundUPP userUPP);
OSStatus __fastcall InvokeRegionToRectsUPP(UInt16 message, RgnHandle rgn, const Rect *rect, void *refCon, RegionToRectsUPP userUPP);
void __fastcall InvokeResErrUPP(OSErr thErr, ResErrUPP userUPP);
void __fastcall InvokeSCSICallbackUPP(void *scsiPB, SCSICallbackUPP userUPP);
void __fastcall InvokeSICompletionUPP(SPBPtr inParamPtr, SICompletionUPP userUPP);
void __fastcall InvokeSIInterruptUPP(SPBPtr inParamPtr, Ptr dataBuffer, __int16 peakAmplitude, int sampleSize, SIInterruptUPP userUPP);
void __fastcall InvokeSRCallBackUPP(SRCallBackStruct *param, SRCallBackUPP userUPP);
OSStatus __fastcall InvokeScrapPromiseKeeperUPP(ScrapRef scrap, ScrapFlavorType flavorType, void *userData, ScrapPromiseKeeperUPP userUPP);
OSErr __fastcall InvokeSelectorFunctionUPP(OSType selector, int *response, SelectorFunctionUPP userUPP);
int __fastcall InvokeSleepQUPP(int message, SleepQRecPtr qRecPtr, SleepQUPP userUPP);
void __fastcall InvokeSndCallBackUPP(SndChannelPtr chan, SndCommand *cmd, SndCallBackUPP userUPP);
Boolean __fastcall InvokeSoundConverterFillBufferDataUPP(SoundComponentDataPtr *data, void *refCon, SoundConverterFillBufferDataUPP userUPP);
Boolean __fastcall InvokeSoundParamUPP(SoundParamBlockPtr *pb, SoundParamUPP userUPP);
void __fastcall InvokeSpeechDoneUPP(SpeechChannel chan, int refCon, SpeechDoneUPP userUPP);
void __fastcall InvokeSpeechErrorUPP(SpeechChannel chan, int refCon, OSErr theError, int bytePos, SpeechErrorUPP userUPP);
void __fastcall InvokeSpeechPhonemeUPP(SpeechChannel chan, int refCon, __int16 phonemeOpcode, SpeechPhonemeUPP userUPP);
void __fastcall InvokeSpeechSyncUPP(SpeechChannel chan, int refCon, OSType syncMessage, SpeechSyncUPP userUPP);
void __fastcall InvokeSpeechTextDoneUPP(SpeechChannel chan, int refCon, const void **nextBuf, unsigned int *byteLen, int *controlFlags, SpeechTextDoneUPP userUPP);
void __fastcall InvokeSpeechWordUPP(SpeechChannel chan, int refCon, unsigned int wordPos, unsigned __int16 wordLen, SpeechWordUPP userUPP);
Boolean __fastcall InvokeStyleRunDirectionUPP(__int16 styleRunIndex, void *dirParam, StyleRunDirectionUPP userUPP);
Boolean __fastcall InvokeTEClickLoopUPP(TEPtr pTE, TEClickLoopUPP userUPP);
void __fastcall InvokeTEDoTextUPP(TEPtr pTE, unsigned __int16 firstChar, unsigned __int16 lastChar, __int16 selector, GrafPtr *currentGrafPort, __int16 *charPosition, TEDoTextUPP userUPP);
void __fastcall InvokeTEFindWordUPP(unsigned __int16 currentPos, __int16 caller, TEPtr pTE, TEHandle hTE, unsigned __int16 *wordStart, unsigned __int16 *wordEnd, TEFindWordUPP userUPP);
void __fastcall InvokeTERecalcUPP(TEPtr pTE, unsigned __int16 changeLength, unsigned __int16 *lineStart, unsigned __int16 *firstChar, unsigned __int16 *lastChar, TERecalcUPP userUPP);
void __fastcall InvokeTSMTEPostUpdateUPP(TEHandle textH, int fixLen, int inputAreaStart, int inputAreaEnd, int pinStart, int pinEnd, int refCon, TSMTEPostUpdateUPP userUPP);
void __fastcall InvokeTSMTEPreUpdateUPP(TEHandle textH, int refCon, TSMTEPreUpdateUPP userUPP);
CFStringRef __fastcall InvokeTXNActionKeyMapperUPP(TXNActionKey actionKey, UInt32 commandID, TXNActionKeyMapperUPP userUPP);
OSStatus __fastcall InvokeTXNFindUPP(const TXNMatchTextRecord *matchData, TXNDataType iDataType, TXNMatchOptions iMatchOptions, const void *iSearchTextPtr, TextEncoding encoding, TXNOffset absStartOffset, ByteCount searchTextLength, TXNOffset *oStartMatch, TXNOffset *oEndMatch, Boolean *ofound, UInt32 refCon, TXNFindUPP userUPP);
void __fastcall InvokeTXNScrollInfoUPP(SInt32 iValue, SInt32 iMaximumValue, TXNScrollBarOrientation iScrollBarOrientation, SInt32 iRefCon, TXNScrollInfoUPP userUPP);
unsigned __int16 __fastcall InvokeTextWidthHookUPP(unsigned __int16 textLen, unsigned __int16 textOffset, void *textBufferPtr, TEPtr pTE, TEHandle hTE, TextWidthHookUPP userUPP);
void __fastcall InvokeThemeButtonDrawUPP(const Rect *bounds, ThemeButtonKind kind, const ThemeButtonDrawInfo *info, UInt32 userData, SInt16 depth, Boolean isColorDev, ThemeButtonDrawUPP userUPP);
void __fastcall InvokeThemeEraseUPP(const Rect *bounds, UInt32 eraseData, SInt16 depth, Boolean isColorDev, ThemeEraseUPP userUPP);
Boolean __fastcall InvokeThemeIteratorUPP(ConstStr255Param inFileName, SInt16 resID, Collection inThemeSettings, void *inUserData, ThemeIteratorUPP userUPP);
void __fastcall InvokeThemeTabTitleDrawUPP(const Rect *bounds, ThemeTabStyle style, ThemeTabDirection direction, SInt16 depth, Boolean isColorDev, UInt32 userData, ThemeTabTitleDrawUPP userUPP);
voidPtr __fastcall InvokeThreadEntryUPP(void *threadParam, ThreadEntryUPP userUPP);
ThreadID __fastcall InvokeThreadSchedulerUPP(SchedulerInfoRecPtr schedulerInfo, ThreadSchedulerUPP userUPP);
void __fastcall InvokeThreadSwitchUPP(ThreadID threadBeingSwitched, void *switchProcParam, ThreadSwitchUPP userUPP);
void __fastcall InvokeThreadTerminationUPP(ThreadID threadTerminated, void *terminationProcParam, ThreadTerminationUPP userUPP);
void __fastcall InvokeTimerUPP(TMTaskPtr tmTaskPtr, TimerUPP userUPP);
OSStatus __fastcall InvokeURLNotifyUPP(void *userContext, URLEvent event, URLCallbackInfo *callbackInfo, URLNotifyUPP userUPP);
OSStatus __fastcall InvokeURLSystemEventUPP(void *userContext, EventRecord *event, URLSystemEventUPP userUPP);
OSStatus __fastcall InvokeUnicodeToTextFallbackUPP(UniChar *iSrcUniStr, ByteCount iSrcUniStrLen, ByteCount *oSrcConvLen, TextPtr oDestStr, ByteCount iDestStrLen, ByteCount *oDestConvLen, LogicalAddress iInfoPtr, ConstUnicodeMappingPtr iUnicodeMappingPtr, UnicodeToTextFallbackUPP userUPP);
Boolean __fastcall InvokeUserEventUPP(EventRecord *event, UserEventUPP userUPP);
void __fastcall InvokeUserFnUPP(void *parameter, UserFnUPP userUPP);
void __fastcall InvokeUserItemUPP(DialogRef theDialog, DialogItemIndex itemNo, UserItemUPP userUPP);
unsigned __int16 __fastcall InvokeWidthHookUPP(unsigned __int16 textLen, unsigned __int16 textOffset, void *textBufferPtr, TEPtr pTE, TEHandle hTE, WidthHookUPP userUPP);
int __fastcall InvokeWindowDefUPP(__int16 varCode, WindowRef window, __int16 message, int param, WindowDefUPP userUPP);
OSStatus __fastcall InvokeWindowPaintUPP(GDHandle device, GrafPtr qdContext, WindowRef window, RgnHandle inClientPaintRgn, RgnHandle outSystemPaintRgn, void *refCon, WindowPaintUPP userUPP);
void __fastcall InvokeWindowTitleDrawingUPP(const Rect *bounds, SInt16 depth, Boolean colorDevice, UInt32 userData, WindowTitleDrawingUPP userUPP);
OSErr __fastcall IsAliasFile(const FSSpec *fileFSSpec, Boolean *aliasFileFlag, Boolean *folderFlag);
Boolean __fastcall IsAntiAliasedTextEnabled(SInt16 *oMinFontSize);
Boolean __fastcall IsAppearanceClient(const ProcessSerialNumber *process);
Boolean IsAutoSlpControlDisabled(void);
OSStatus __fastcall IsAutomaticControlDragTrackingEnabledForWindow(WindowRef inWindow, Boolean *outTracks);
Boolean __fastcall IsCmdChar(const EventRecord *event, __int16 test);
Boolean __fastcall IsControlActive(ControlRef inControl);
OSStatus __fastcall IsControlDragTrackingEnabled(ControlRef inControl, Boolean *outTracks);
Boolean __fastcall IsControlEnabled(ControlRef inControl);
Boolean __fastcall IsControlHilited(ControlRef control);
Boolean __fastcall IsControlVisible(ControlRef inControl);
Boolean __fastcall IsDataBrowserItemSelected(ControlRef browser, DataBrowserItemID item);
Boolean __fastcall IsDialogEvent(const EventRecord *theEvent);
Boolean IsDimmingControlDisabled(void);
Boolean __fastcall IsEventInMask(EventRef inEvent, EventMask inMask);
Boolean __fastcall IsEventInQueue(EventQueueRef inQueue, EventRef inEvent);
Boolean __fastcall IsHandleValid(Handle h);
Boolean IsHeapValid(void);
OSErr __fastcall IsIconRefComposite(IconRef compositeIconRef, IconRef *backgroundIconRef, IconRef *foregroundIconRef);
Boolean __fastcall IsIconRefMaskEmpty(IconRef iconRef);
Boolean __fastcall IsMenuBarInvalid(MenuRef rootMenu);
Boolean IsMenuBarVisible(void);
Boolean __fastcall IsMenuCommandEnabled(MenuRef inMenu, MenuCommand inCommandID);
Boolean __fastcall IsMenuItemEnabled(MenuRef menu, MenuItemIndex item);
Boolean __fastcall IsMenuItemIconEnabled(MenuRef menu, MenuItemIndex item);
Boolean __fastcall IsMenuItemInvalid(MenuRef inMenu, MenuItemIndex inItem);
Boolean __fastcall IsMenuKeyEvent(MenuRef inStartMenu, EventRef inEvent, MenuEventOptions inOptions, MenuRef *outMenu, MenuItemIndex *outMenuItem);
Boolean __fastcall IsMenuSizeInvalid(MenuRef inMenu);
Boolean IsMetric(void);
Boolean IsMouseCoalescingEnabled(void);
Boolean __fastcall IsOutline(Point numer, Point denom);
Boolean __fastcall IsPointerValid(Ptr p);
Boolean __fastcall IsPortClipRegionEmpty(CGrafPtr port);
Boolean __fastcall IsPortColor(CGrafPtr port);
Boolean __fastcall IsPortOffscreen(CGrafPtr port);
Boolean __fastcall IsPortPictureBeingDefined(CGrafPtr port);
Boolean __fastcall IsPortPolyBeingDefined(CGrafPtr port);
Boolean __fastcall IsPortRegionBeingDefined(CGrafPtr port);
Boolean __fastcall IsPortVisibleRegionEmpty(CGrafPtr port);
Boolean __fastcall IsProcessVisible(const ProcessSerialNumber *psn);
Boolean IsProcessorCyclingEnabled(void);
Boolean __fastcall IsRegionRectangular(RgnHandle region);
Boolean __fastcall IsShowContextualMenuClick(const EventRecord *inEvent);
Boolean __fastcall IsShowContextualMenuEvent(EventRef inEvent);
Boolean IsSpindownDisabled(void);
Boolean __fastcall IsTSMTEDialog(DialogRef dialog);
Boolean __fastcall IsThemeInColor(SInt16 inDepth, Boolean inIsColorDevice);
Boolean __fastcall IsUserCancelEventRef(EventRef event);
Boolean __fastcall IsValidAppearanceFileType(OSType fileType);
Boolean __fastcall IsValidControlHandle(ControlRef theControl);
Boolean __fastcall IsValidIconRef(IconRef theIconRef);
Boolean __fastcall IsValidMenu(MenuRef inMenu);
Boolean __fastcall IsValidPort(CGrafPtr port);
Boolean __fastcall IsValidWindowClass(WindowClass inClass);
Boolean __fastcall IsValidWindowPtr(WindowRef possibleWindow);
Boolean __fastcall IsWindowActive(WindowRef inWindow);
Boolean __fastcall IsWindowCollapsable(WindowRef window);
Boolean __fastcall IsWindowCollapsed(WindowRef window);
Boolean __fastcall IsWindowContainedInGroup(WindowRef inWindow, WindowGroupRef inGroup);
Boolean __fastcall IsWindowHilited(WindowRef window);
Boolean __fastcall IsWindowInStandardState(WindowRef inWindow, const Point *inIdealSize, Rect *outIdealStandardState);
Boolean __fastcall IsWindowLatentVisible(WindowRef inWindow, WindowLatentVisibility *outLatentVisible);
Boolean __fastcall IsWindowModified(WindowRef window);
Boolean __fastcall IsWindowPathSelectClick(WindowRef window, const EventRecord *event);
Boolean __fastcall IsWindowPathSelectEvent(WindowRef window, EventRef inEvent);
Boolean __fastcall IsWindowToolbarVisible(WindowRef inWindow);
Boolean __fastcall IsWindowUpdatePending(WindowRef window);
Boolean __fastcall IsWindowVisible(WindowRef window);
OSStatus __fastcall IterateThemes(ThemeIteratorUPP inProc, void *inUserData);
MACRO__JBLEN _JBLEN;
OSType __fastcall KBGetLayoutType(SInt16 iKeyboardType);
OSStatus __fastcall KCAddAppleSharePassword(AFPServerSignature *serverSignature, StringPtr serverAddress, StringPtr serverName, StringPtr volumeName, StringPtr accountName, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall KCAddCallback(KCCallbackUPP callbackProc, KCEventMask eventMask, void *userContext);
OSStatus __fastcall KCAddGenericPassword(StringPtr serviceName, StringPtr accountName, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall KCAddInternetPassword(StringPtr serverName, StringPtr securityDomain, StringPtr accountName, UInt16 port, OSType protocol, OSType authType, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall KCAddInternetPasswordWithPath(StringPtr serverName, StringPtr securityDomain, StringPtr accountName, StringPtr path, UInt16 port, OSType protocol, OSType authType, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall KCAddItem(KCItemRef item);
OSStatus __fastcall KCChangeSettings(KCRef keychain);
OSStatus __fastcall KCCopyItem(KCItemRef item, KCRef destKeychain, KCItemRef *copy);
UInt16 KCCountKeychains(void);
OSStatus __fastcall KCCreateKeychain(StringPtr password, KCRef *keychain);
OSStatus __fastcall KCDeleteItem(KCItemRef item);
OSStatus __fastcall KCFindAppleSharePassword(AFPServerSignature *serverSignature, StringPtr serverAddress, StringPtr serverName, StringPtr volumeName, StringPtr accountName, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall KCFindFirstItem(KCRef keychain, const KCAttributeList *attrList, KCSearchRef *search, KCItemRef *item);
OSStatus __fastcall KCFindGenericPassword(StringPtr serviceName, StringPtr accountName, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall KCFindInternetPassword(StringPtr serverName, StringPtr securityDomain, StringPtr accountName, UInt16 port, OSType protocol, OSType authType, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall KCFindInternetPasswordWithPath(StringPtr serverName, StringPtr securityDomain, StringPtr accountName, StringPtr path, UInt16 port, OSType protocol, OSType authType, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall KCFindNextItem(KCSearchRef search, KCItemRef *item);
OSStatus __fastcall KCGetAttribute(KCItemRef item, KCAttribute *attr, UInt32 *actualLength);
OSStatus __fastcall KCGetData(KCItemRef item, UInt32 maxLength, void *data, UInt32 *actualLength);
OSStatus __fastcall KCGetDefaultKeychain(KCRef *keychain);
OSStatus __fastcall KCGetIndKeychain(UInt16 index, KCRef *keychain);
OSStatus __fastcall KCGetKeychain(KCItemRef item, KCRef *keychain);
OSStatus __fastcall KCGetKeychainManagerVersion(UInt32 *returnVers);
OSStatus __fastcall KCGetKeychainName(KCRef keychain, StringPtr keychainName);
OSStatus __fastcall KCGetStatus(KCRef keychain, UInt32 *keychainStatus);
Boolean KCIsInteractionAllowed(void);
OSStatus __fastcall KCLock(KCRef keychain);
OSStatus __fastcall KCMakeAliasFromKCRef(KCRef keychain, AliasHandle *keychainAlias);
OSStatus __fastcall KCMakeKCRefFromAlias(AliasHandle keychainAlias, KCRef *keychain);
OSStatus __fastcall KCMakeKCRefFromFSSpec(FSSpec *keychainFSSpec, KCRef *keychain);
OSStatus __fastcall KCNewItem(KCItemClass itemClass, OSType itemCreator, UInt32 length, const void *data, KCItemRef *item);
OSStatus __fastcall KCReleaseItem(KCItemRef *item);
OSStatus __fastcall KCReleaseKeychain(KCRef *keychain);
OSStatus __fastcall KCReleaseSearch(KCSearchRef *search);
OSStatus __fastcall KCRemoveCallback(KCCallbackUPP callbackProc);
OSStatus __fastcall KCSetAttribute(KCItemRef item, KCAttribute *attr);
OSStatus __fastcall KCSetData(KCItemRef item, UInt32 length, const void *data);
OSStatus __fastcall KCSetDefaultKeychain(KCRef keychain);
OSStatus __fastcall KCSetInteractionAllowed(Boolean state);
OSStatus __fastcall KCUnlock(KCRef keychain, StringPtr password);
OSStatus __fastcall KCUpdateItem(KCItemRef item);
security_token_t KERNEL_SECURITY_TOKEN;
OSStatus __fastcall KLGetCurrentKeyboardLayout(KeyboardLayoutRef *oKeyboardLayout);
OSStatus __fastcall KLGetIndexedKeyboardLayout(CFIndex iIndex, KeyboardLayoutRef *oKeyboardLayout);
OSStatus __fastcall KLGetKeyboardLayoutAtIndex(CFIndex iIndex, KeyboardLayoutRef *oKeyboardLayout);
OSStatus __fastcall KLGetKeyboardLayoutCount(CFIndex *oCount);
OSStatus __fastcall KLGetKeyboardLayoutProperty(KeyboardLayoutRef iKeyboardLayout, KeyboardLayoutPropertyTag iPropertyTag, const void **oValue);
OSStatus __fastcall KLGetKeyboardLayoutWithIdentifier(SInt32 iIdentifier, KeyboardLayoutRef *oKeyboardLayout);
OSStatus __fastcall KLGetKeyboardLayoutWithName(CFStringRef iName, KeyboardLayoutRef *oKeyboardLayout);
OSStatus __fastcall KLSetCurrentKeyboardLayout(KeyboardLayoutRef iKeyboardLayout);
void __fastcall KeyScript(__int16 code);
UInt32 __fastcall KeyTranslate(const void *transData, UInt16 keycode, UInt32 *state);
$BD72C1BB3E139F41455EFC5A28916380 _KeyboardDispatch;
void __fastcall KillControls(WindowRef theWindow);
void __fastcall KillPicture(PicHandle myPicture);
void __fastcall KillPoly(PolyHandle poly);
MACRO__A _L;
OSStatus __fastcall LAAddNewWord(LAEnvironmentRef environ, const FSSpec *dictionary, const AEDesc *dataList);
OSStatus __fastcall LACloseAnalysisContext(LAContextRef context);
OSStatus __fastcall LACloseDictionary(LAEnvironmentRef environ, const FSSpec *dictionary);
OSStatus __fastcall LAContinuousMorphemeAnalysis(LAContextRef context, ConstUniCharArrayPtr text, UniCharCount textLength, Boolean incrementalText, LAMorphemePath *leadingPath, LAMorphemePath *trailingPath, Boolean *modified);
OSStatus __fastcall LACreateCustomEnvironment(LAEnvironmentRef baseEnvironment, ConstStr63Param newEnvironmentName, Boolean persistent, LAEnvironmentRef *newEnvironment);
OSStatus __fastcall LADeleteCustomEnvironment(LAEnvironmentRef environment);
OSStatus __fastcall LAGetEnvironmentList(UInt32 maxCount, UInt32 *actualCount, LAEnvironmentRef environmentList[]);
OSStatus __fastcall LAGetEnvironmentName(LAEnvironmentRef environment, Str63 environmentName);
OSStatus __fastcall LAGetEnvironmentRef(ConstStr63Param targetEnvironmentName, LAEnvironmentRef *environment);
OSStatus __fastcall LAGetMorphemes(LAContextRef context, LAMorphemePath *result);
UInt32 LALibraryVersion(void);
OSStatus __fastcall LAListAvailableDictionaries(LAEnvironmentRef environ, ItemCount maxCount, ItemCount *actualCount, FSSpec dictionaryList[], Boolean opened[]);
OSStatus __fastcall LAMorphemeAnalysis(LAContextRef context, ConstUniCharArrayPtr text, UniCharCount textLength, LAMorphemePath *leadingPath, LAMorphemePath *trailingPath, ItemCount pathCount, LAMorphemeBundle *result);
OSStatus __fastcall LAOpenAnalysisContext(LAEnvironmentRef environ, LAContextRef *context);
OSStatus __fastcall LAOpenDictionary(LAEnvironmentRef environ, const FSSpec *dictionary);
OSStatus __fastcall LAResetAnalysis(LAContextRef context);
OSStatus __fastcall LAShiftMorphemes(LAContextRef context, ItemCount morphemeCount, LAMorphemePath *path, UniCharCount *shiftedLength);
OSStatus __fastcall LATextToMorphemes(LAContextRef context, TextEncoding preferedEncoding, ByteCount textLength, ConstLogicalAddress sourceText, ByteCount bufferSize, OptionBits convertFlags, UInt32 structureVersion, ByteCount *acceptedLength, LAMorphemesArrayPtr resultBuffer);
void __fastcall LActivate(Boolean act, ListHandle lHandle);
__int16 __fastcall LAddColumn(__int16 count, __int16 colNum, ListHandle lHandle);
__int16 __fastcall LAddRow(__int16 count, __int16 rowNum, ListHandle lHandle);
void __fastcall LAddToCell(const void *dataPtr, __int16 dataLen, Cell theCell, ListHandle lHandle);
void __fastcall LAutoScroll(ListHandle lHandle);
MACRO__LC _LC_LAST;
void __fastcall LCellSize(Point cSize, ListHandle lHandle);
Boolean __fastcall LClick(Point pt, EventModifiers modifiers, ListHandle lHandle);
void __fastcall LClrCell(Cell theCell, ListHandle lHandle);
void __fastcall LDelColumn(__int16 count, __int16 colNum, ListHandle lHandle);
void __fastcall LDelRow(__int16 count, __int16 rowNum, ListHandle lHandle);
void __fastcall LDispose(ListHandle lHandle);
void __fastcall LDraw(Cell theCell, ListHandle lHandle);
void __fastcall LGetCell(void *dataPtr, __int16 *dataLen, Cell theCell, ListHandle lHandle);
void __fastcall LGetCellDataLocation(__int16 *offset, __int16 *len, Cell theCell, ListHandle lHandle);
Boolean __fastcall LGetSelect(Boolean next, Cell *theCell, ListHandle lHandle);
Cell __fastcall LLastClick(ListHandle lHandle);
SInt16 LMGetApFontID(void);
THz LMGetApplZone(void);
SInt16 LMGetBootDrive(void);
Ptr LMGetBufPtr(void);
SInt32 LMGetBufTgDate(void);
SInt16 LMGetBufTgFBkNum(void);
SInt16 LMGetBufTgFFlg(void);
SInt32 LMGetBufTgFNum(void);
UInt8 LMGetCPUFlag(void);
StringPtr LMGetCurApName(void);
SInt16 LMGetCurApRefNum(void);
SInt16 LMGetCurPageOption(void);
SInt16 LMGetCurPitch(void);
Ptr LMGetCurStackBase(void);
Boolean LMGetCursorNew(void);
SInt32 LMGetDefltStack(void);
GDHandle LMGetDeviceList(void);
Ptr LMGetDiskFormatingHFSDefaults(void);
StringPtr LMGetFinderName(void);
UInt8 LMGetFractEnable(void);
Handle LMGetGZMoveHnd(void);
Handle LMGetGZRootHnd(void);
Ptr LMGetHeapEnd(void);
Ptr LMGetHighHeapMark(void);
UInt8 LMGetHiliteMode(void);
void __fastcall LMGetHiliteRGB(RGBColor *hiliteRGBValue);
Ptr LMGetIntlSpec(void);
UniversalProcPtr LMGetJStash(void);
UInt8 LMGetKbdLast(void);
UInt8 LMGetKbdType(void);
SInt16 LMGetKeyRepThresh(void);
SInt16 LMGetKeyThresh(void);
Handle LMGetLastFOND(void);
SInt32 LMGetLastSPExtra(void);
UniversalProcPtr __fastcall LMGetLvl2DT(__int16 vectorNumber);
GDHandle LMGetMainDevice(void);
SInt16 LMGetMemErr(void);
Ptr LMGetMemTop(void);
SInt32 LMGetMinStack(void);
SInt32 LMGetMinusOne(void);
SInt32 LMGetOneOne(void);
SInt16 LMGetPrintErr(void);
Handle LMGetQDColors(void);
SInt16 LMGetResErr(void);
UInt8 LMGetResLoad(void);
SInt32 LMGetRndSeed(void);
UInt8 LMGetSEvtEnb(void);
UInt8 LMGetScrDmpEnb(void);
SInt16 LMGetScrHRes(void);
SInt16 LMGetScrVRes(void);
UInt8 LMGetSdVolume(void);
Ptr LMGetSoundBase(void);
UInt8 LMGetSoundLevel(void);
Ptr LMGetSoundPtr(void);
Ptr LMGetStackLowPoint(void);
SInt16 LMGetSysFontFam(void);
SInt16 LMGetSysFontSize(void);
SInt16 LMGetSysMap(void);
StringPtr LMGetSysResName(void);
THz LMGetSysZone(void);
GDHandle LMGetTheGDevice(void);
SInt16 LMGetTheMenu(void);
UInt8 LMGetTmpResLoad(void);
UniversalProcPtr LMGetToExtFS(void);
Ptr LMGetToolScratch(void);
Handle LMGetWidthListHand(void);
Ptr LMGetWidthPtr(void);
Handle LMGetWidthTabHandle(void);
UInt8 LMGetWordRedraw(void);
void __fastcall LMSetApFontID(SInt16 value);
void __fastcall LMSetApplZone(THz value);
void __fastcall LMSetBootDrive(SInt16 value);
void __fastcall LMSetBufPtr(Ptr value);
void __fastcall LMSetBufTgDate(SInt32 value);
void __fastcall LMSetBufTgFBkNum(SInt16 value);
void __fastcall LMSetBufTgFFlg(SInt16 value);
void __fastcall LMSetBufTgFNum(SInt32 value);
void __fastcall LMSetCPUFlag(UInt8 value);
void __fastcall LMSetCurApName(ConstStr31Param curApNameValue);
void __fastcall LMSetCurApRefNum(SInt16 value);
void __fastcall LMSetCurPageOption(SInt16 value);
void __fastcall LMSetCurPitch(SInt16 value);
void __fastcall LMSetCurStackBase(Ptr value);
void __fastcall LMSetCursorNew(Boolean value);
void __fastcall LMSetDefltStack(SInt32 value);
void __fastcall LMSetDeviceList(GDHandle value);
void __fastcall LMSetDiskFormatingHFSDefaults(Ptr value);
void __fastcall LMSetFinderName(ConstStr15Param finderNameValue);
void __fastcall LMSetFractEnable(UInt8 value);
void __fastcall LMSetGZMoveHnd(Handle value);
void __fastcall LMSetGZRootHnd(Handle value);
void __fastcall LMSetHeapEnd(Ptr value);
void __fastcall LMSetHighHeapMark(Ptr value);
void __fastcall LMSetHiliteMode(UInt8 value);
void __fastcall LMSetHiliteRGB(const RGBColor *hiliteRGBValue);
void __fastcall LMSetIntlSpec(Ptr value);
void __fastcall LMSetJStash(UniversalProcPtr value);
void __fastcall LMSetKbdLast(UInt8 value);
void __fastcall LMSetKbdType(UInt8 value);
void __fastcall LMSetKeyRepThresh(SInt16 value);
void __fastcall LMSetKeyThresh(SInt16 value);
void __fastcall LMSetLastFOND(Handle value);
void __fastcall LMSetLastSPExtra(SInt32 value);
void __fastcall LMSetLvl2DT(UniversalProcPtr Lvl2DTValue, __int16 vectorNumber);
void __fastcall LMSetMainDevice(GDHandle value);
void __fastcall LMSetMemErr(SInt16 value);
void __fastcall LMSetMemTop(Ptr value);
void __fastcall LMSetMinStack(SInt32 value);
void __fastcall LMSetMinusOne(SInt32 value);
void __fastcall LMSetOneOne(SInt32 value);
void __fastcall LMSetPrintErr(SInt16 value);
void __fastcall LMSetQDColors(Handle value);
void __fastcall LMSetResErr(SInt16 value);
void __fastcall LMSetResLoad(UInt8 value);
void __fastcall LMSetRndSeed(SInt32 value);
void __fastcall LMSetSEvtEnb(UInt8 value);
void __fastcall LMSetScrDmpEnb(UInt8 value);
void __fastcall LMSetScrHRes(SInt16 value);
void __fastcall LMSetScrVRes(SInt16 value);
void __fastcall LMSetSdVolume(UInt8 value);
void __fastcall LMSetSoundBase(Ptr value);
void __fastcall LMSetSoundLevel(UInt8 value);
void __fastcall LMSetSoundPtr(Ptr value);
void __fastcall LMSetStackLowPoint(Ptr value);
void __fastcall LMSetSysFontFam(SInt16 value);
void __fastcall LMSetSysFontSize(SInt16 value);
void __fastcall LMSetSysMap(SInt16 value);
void __fastcall LMSetSysResName(ConstStr15Param sysResNameValue);
void __fastcall LMSetSysZone(THz value);
void __fastcall LMSetTheGDevice(GDHandle value);
void __fastcall LMSetTmpResLoad(UInt8 value);
void __fastcall LMSetToExtFS(UniversalProcPtr value);
void __fastcall LMSetToolScratch(const void *toolScratchValue);
void __fastcall LMSetWidthListHand(Handle value);
void __fastcall LMSetWidthPtr(Ptr value);
void __fastcall LMSetWidthTabHandle(Handle value);
void __fastcall LMSetWordRedraw(UInt8 value);
ListHandle __fastcall LNew(const Rect *rView, const ListBounds *dataBounds, Point cSize, __int16 theProc, WindowRef theWindow, Boolean drawIt, Boolean hasGrow, Boolean scrollHoriz, Boolean scrollVert);
Boolean __fastcall LNextCell(Boolean hNext, Boolean vNext, Cell *theCell, ListHandle lHandle);
void __fastcall LRect(Rect *cellRect, Cell theCell, ListHandle lHandle);
OSStatus __fastcall LSCanRefAcceptItem(const FSRef *inItemFSRef, const FSRef *inTargetRef, LSRolesMask inRoleMask, LSAcceptanceFlags inFlags, Boolean *outAcceptsItem);
OSStatus __fastcall LSCanURLAcceptURL(CFURLRef inItemURL, CFURLRef inTargetURL, LSRolesMask inRoleMask, LSAcceptanceFlags inFlags, Boolean *outAcceptsItem);
OSStatus __fastcall LSCopyApplicationForMIMEType(CFStringRef inMIMEType, LSRolesMask inRoleMask, CFURLRef *outAppURL);
OSStatus __fastcall LSCopyDisplayNameForRef(const FSRef *inRef, CFStringRef *outDisplayName);
OSStatus __fastcall LSCopyDisplayNameForURL(CFURLRef inURL, CFStringRef *outDisplayName);
OSStatus __fastcall LSCopyItemInfoForRef(const FSRef *inItemRef, LSRequestedInfo inWhichInfo, LSItemInfoRecord *outItemInfo);
OSStatus __fastcall LSCopyItemInfoForURL(CFURLRef inURL, LSRequestedInfo inWhichInfo, LSItemInfoRecord *outItemInfo);
OSStatus __fastcall LSCopyKindStringForMIMEType(CFStringRef inMIMEType, CFStringRef *outKindString);
OSStatus __fastcall LSCopyKindStringForRef(const FSRef *inFSRef, CFStringRef *outKindString);
OSStatus __fastcall LSCopyKindStringForTypeInfo(OSType inType, OSType inCreator, CFStringRef inExtension, CFStringRef *outKindString);
OSStatus __fastcall LSCopyKindStringForURL(CFURLRef inURL, CFStringRef *outKindString);
OSStatus __fastcall LSFindApplicationForInfo(OSType inCreator, CFStringRef inBundleID, CFStringRef inName, FSRef *outAppRef, CFURLRef *outAppURL);
OSStatus __fastcall LSGetApplicationForInfo(OSType inType, OSType inCreator, CFStringRef inExtension, LSRolesMask inRoleMask, FSRef *outAppRef, CFURLRef *outAppURL);
OSStatus __fastcall LSGetApplicationForItem(const FSRef *inItemRef, LSRolesMask inRoleMask, FSRef *outAppRef, CFURLRef *outAppURL);
OSStatus __fastcall LSGetApplicationForURL(CFURLRef inURL, LSRolesMask inRoleMask, FSRef *outAppRef, CFURLRef *outAppURL);
OSStatus __fastcall LSGetExtensionInfo(UniCharCount inNameLen, const UniChar inNameBuffer[], UniCharCount *outExtStartIndex);
OSStatus __fastcall LSInit(LSInitializeFlags inFlags);
OSStatus __fastcall LSOpenCFURLRef(CFURLRef inURL, CFURLRef *outLaunchedURL);
OSStatus __fastcall LSOpenFSRef(const FSRef *inRef, FSRef *outLaunchedRef);
OSStatus __fastcall LSOpenFromRefSpec(const LSLaunchFSRefSpec *inLaunchSpec, FSRef *outLaunchedRef);
OSStatus __fastcall LSOpenFromURLSpec(const LSLaunchURLSpec *inLaunchSpec, CFURLRef *outLaunchedURL);
OSStatus __fastcall LSSetExtensionHiddenForRef(const FSRef *inRef, Boolean inHide);
OSStatus __fastcall LSSetExtensionHiddenForURL(CFURLRef inURL, Boolean inHide);
OSStatus LSTerm(void);
void __fastcall LScroll(__int16 dCols, __int16 dRows, ListHandle lHandle);
Boolean __fastcall LSearch(const void *dataPtr, __int16 dataLen, ListSearchUPP searchProc, Cell *theCell, ListHandle lHandle);
void __fastcall LSetCell(const void *dataPtr, __int16 dataLen, Cell theCell, ListHandle lHandle);
void __fastcall LSetDrawingMode(Boolean drawIt, ListHandle lHandle);
void __fastcall LSetSelect(Boolean setIt, Cell theCell, ListHandle lHandle);
void __fastcall LSize(__int16 listWidth, __int16 listHeight, ListHandle lHandle);
void __fastcall LUpdate(RgnHandle theRgn, ListHandle lHandle);
__int16 __fastcall LanguageOrder(LangCode language1, LangCode language2);
OSErr __fastcall LaunchApplication(LaunchPBPtr LaunchParams);
void __fastcall Line(__int16 dh, __int16 dv);
void __fastcall LineTo(__int16 h, __int16 v);
OSErr __fastcall LoadIconCache(const Rect *theRect, IconAlignmentType align, IconTransformType transform, IconCacheRef theIconCache);
void __fastcall LoadResource(Handle theResource);
OSStatus LoadScrap(void);
void __fastcall LocalToGlobal(Point *pt);
OSStatus __fastcall LocaleCountNames(LocaleRef locale, LocaleOperationVariant opVariant, LocaleNameMask nameMask, ItemCount *nameCount);
OSStatus __fastcall LocaleGetIndName(LocaleRef locale, LocaleOperationVariant opVariant, LocaleNameMask nameMask, ItemCount nameIndex, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[], LocaleRef *displayLocale);
OSStatus __fastcall LocaleGetName(LocaleRef locale, LocaleOperationVariant opVariant, LocaleNameMask nameMask, LocaleRef displayLocale, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[]);
OSStatus __fastcall LocaleGetRegionLanguageName(RegionCode region, Str255 languageName);
OSStatus __fastcall LocaleOperationCountLocales(LocaleOperationClass opClass, ItemCount *localeCount);
OSStatus __fastcall LocaleOperationCountNames(LocaleOperationClass opClass, ItemCount *nameCount);
OSStatus __fastcall LocaleOperationGetIndName(LocaleOperationClass opClass, ItemCount nameIndex, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[], LocaleRef *displayLocale);
OSStatus __fastcall LocaleOperationGetLocales(LocaleOperationClass opClass, ItemCount maxLocaleCount, ItemCount *actualLocaleCount, LocaleAndVariant localeVariantList[]);
OSStatus __fastcall LocaleOperationGetName(LocaleOperationClass opClass, LocaleRef displayLocale, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[]);
OSStatus __fastcall LocaleRefFromLangOrRegionCode(LangCode lang, RegionCode region, LocaleRef *locale);
OSStatus __fastcall LocaleRefFromLocaleString(const char localeString[], LocaleRef *locale);
OSStatus __fastcall LocaleRefGetPartString(LocaleRef locale, LocalePartMask partMask, ByteCount maxStringLen, char partString[]);
OSStatus __fastcall LocaleStringToLangAndRegionCodes(const char localeString[], LangCode *lang, RegionCode *region);
Boolean __fastcall LockPixels(PixMapHandle pm);
OSErr __fastcall LockPortBits(GrafPtr port);
Fixed __fastcall Long2Fix(int x);
void __fastcall LongDateString(const LongDateTime *dateTime, DateForm longFlag, Str255 result, Handle intlHandle);
void __fastcall LongDateToSeconds(const LongDateRec *lDate, LongDateTime *lSecs);
void __fastcall LongSecondsToDate(const LongDateTime *lSecs, LongDateRec *lDate);
void __fastcall LongTimeString(const LongDateTime *dateTime, Boolean wantSeconds, Str255 result, Handle intlHandle);
void __fastcall LowercaseText(Ptr textPtr, __int16 len, ScriptCode script);
MACRO__MACH _MACH_INIT_;
LogicalAddress __fastcall MPAllocate(ByteCount size);
LogicalAddress __fastcall MPAllocateAligned(ByteCount size, UInt8 alignment, OptionBits options);
OSStatus __fastcall MPAllocateTaskStorageIndex(TaskStorageIndex *index);
OSStatus __fastcall MPArmTimer(MPTimerID timerID, AbsoluteTime *expirationTime, OptionBits options);
void __fastcall MPBlockClear(LogicalAddress address, ByteCount size);
void __fastcall MPBlockCopy(LogicalAddress source, LogicalAddress destination, ByteCount size);
OSStatus __fastcall MPCancelTimer(MPTimerID timerID, AbsoluteTime *timeRemaining);
OSStatus __fastcall MPCauseNotification(MPNotificationID notificationID);
OSStatus __fastcall MPCreateCriticalRegion(MPCriticalRegionID *criticalRegion);
OSStatus __fastcall MPCreateEvent(MPEventID *event);
OSStatus __fastcall MPCreateNotification(MPNotificationID *notificationID);
OSStatus __fastcall MPCreateQueue(MPQueueID *queue);
OSStatus __fastcall MPCreateSemaphore(MPSemaphoreCount maximumValue, MPSemaphoreCount initialValue, MPSemaphoreID *semaphore);
OSStatus __fastcall MPCreateTask(TaskProc entryPoint, void *parameter, ByteCount stackSize, MPQueueID notifyQueue, void *terminationParameter1, void *terminationParameter2, MPTaskOptions options, MPTaskID *task);
OSStatus __fastcall MPCreateTimer(MPTimerID *timerID);
MPTaskID MPCurrentTaskID(void);
void __fastcall MPDataToCode(LogicalAddress address, ByteCount size);
OSStatus __fastcall MPDeallocateTaskStorageIndex(TaskStorageIndex index);
OSStatus __fastcall MPDelayUntil(AbsoluteTime *expirationTime);
OSStatus __fastcall MPDeleteCriticalRegion(MPCriticalRegionID criticalRegion);
OSStatus __fastcall MPDeleteEvent(MPEventID event);
OSStatus __fastcall MPDeleteNotification(MPNotificationID notificationID);
OSStatus __fastcall MPDeleteQueue(MPQueueID queue);
OSStatus __fastcall MPDeleteSemaphore(MPSemaphoreID semaphore);
OSStatus __fastcall MPDeleteTimer(MPTimerID timerID);
OSStatus __fastcall MPDisposeTaskException(MPTaskID task, OptionBits action);
OSStatus __fastcall MPEnterCriticalRegion(MPCriticalRegionID criticalRegion, Duration timeout);
void __fastcall MPExit(OSStatus status);
OSStatus __fastcall MPExitCriticalRegion(MPCriticalRegionID criticalRegion);
OSStatus __fastcall MPExtractTaskState(MPTaskID task, MPTaskStateKind kind, void *info);
void __fastcall MPFree(LogicalAddress object);
ByteCount __fastcall MPGetAllocatedBlockSize(LogicalAddress object);
TaskStorageValue __fastcall MPGetTaskStorageValue(TaskStorageIndex index);
OSStatus __fastcall MPModifyNotification(MPNotificationID notificationID, MPOpaqueID anID, void *notifyParam1, void *notifyParam2, void *notifyParam3);
OSStatus __fastcall MPModifyNotificationParameters(MPNotificationID notificationID, MPOpaqueIDClass kind, void *notifyParam1, void *notifyParam2, void *notifyParam3);
OSStatus __fastcall MPNotifyQueue(MPQueueID queue, void *param1, void *param2, void *param3);
ItemCount MPProcessors(void);
ItemCount MPProcessorsScheduled(void);
OSStatus __fastcall MPRegisterDebugger(MPQueueID queue, MPDebuggerLevel level);
void *__fastcall MPRemoteCall(MPRemoteProcedure remoteProc, void *parameter, MPRemoteContext context);
OSStatus __fastcall MPSetEvent(MPEventID event, MPEventFlags flags);
OSStatus __fastcall MPSetExceptionHandler(MPTaskID task, MPQueueID exceptionQ);
OSStatus __fastcall MPSetQueueReserve(MPQueueID queue, ItemCount count);
OSStatus __fastcall MPSetTaskState(MPTaskID task, MPTaskStateKind kind, void *info);
OSStatus __fastcall MPSetTaskStorageValue(TaskStorageIndex index, TaskStorageValue value);
OSStatus __fastcall MPSetTaskType(MPTaskID task, OSType taskType);
OSStatus __fastcall MPSetTaskWeight(MPTaskID task, MPTaskWeight weight);
OSStatus __fastcall MPSetTimerNotify(MPTimerID timerID, MPOpaqueID anID, void *notifyParam1, void *notifyParam2, void *notifyParam3);
OSStatus __fastcall MPSignalSemaphore(MPSemaphoreID semaphore);
Boolean __fastcall MPTaskIsPreemptive(MPTaskID taskID);
OSStatus __fastcall MPTerminateTask(MPTaskID task, OSStatus terminationStatus);
OSStatus __fastcall MPThrowException(MPTaskID task, MPExceptionKind kind);
OSStatus __fastcall MPUnregisterDebugger(MPQueueID queue);
OSStatus __fastcall MPWaitForEvent(MPEventID event, MPEventFlags *flags, Duration timeout);
OSStatus __fastcall MPWaitOnQueue(MPQueueID queue, void **param1, void **param2, void **param3, Duration timeout);
OSStatus __fastcall MPWaitOnSemaphore(MPSemaphoreID semaphore, Duration timeout);
void MPYield(void);
void __fastcall MakeDataExecutable(void *baseAddress, unsigned int length);
void __fastcall MakeITable(CTabHandle cTabH, ITabHandle iTabH, __int16 res);
OSErr __fastcall MakeIconCache(IconCacheRef *theCache, IconGetterUPP makeIcon, void *yourDataPtr);
OSErr __fastcall MakeMemoryNonResident(void *address, unsigned int count);
OSErr __fastcall MakeMemoryResident(void *address, unsigned int count);
void __fastcall MakeRGBPat(PixPatHandle pp, const RGBColor *myColor);
OSErr __fastcall MakeVoiceSpec(OSType creator, OSType id, VoiceSpec *voice);
void __fastcall MapPoly(PolyHandle poly, const Rect *srcRect, const Rect *dstRect);
void __fastcall MapPt(Point *pt, const Rect *srcRect, const Rect *dstRect);
void __fastcall MapRect(Rect *r, const Rect *srcRect, const Rect *dstRect);
void __fastcall MapRgn(RgnHandle rgn, const Rect *srcRect, const Rect *dstRect);
OSErr __fastcall MatchAlias(const FSSpec *fromFile, unsigned int rulesMask, AliasHandle alias, __int16 *aliasCount, FSSpecArrayPtr aliasList, Boolean *needsUpdate, AliasFilterUPP aliasFilter, void *yourDataPtr);
OSErr __fastcall MatchAliasNoUI(const FSSpec *fromFile, unsigned int rulesMask, AliasHandle alias, __int16 *aliasCount, FSSpecArrayPtr aliasList, Boolean *needsUpdate, AliasFilterUPP aliasFilter, void *yourDataPtr);
int MaxBlock(void);
Size __fastcall MaxMem(Size *grow);
__int16 MaximumProcessorSpeed(void);
void __fastcall MeasureJustified(Ptr textPtr, int textLength, Fixed slop, Ptr charLocs, JustStyleCode styleRunPosition, Point numer, Point denom);
void __fastcall MeasureText(__int16 count, const void *textAddr, void *charLocs);
OSErr MemError(void);
int MenuChoice(void);
UInt32 __fastcall MenuEvent(const EventRecord *inEvent);
Boolean __fastcall MenuHasEnabledItems(MenuRef theMenu);
int __fastcall MenuKey(CharParameter ch);
int __fastcall MenuSelect(Point startPt);
void __fastcall Microseconds(UnsignedWide *microTickCount);
__int16 MinimumProcessorSpeed(void);
$5D0316CF9F1FFF40199710D526EBD44A _MixedModeMagic;
void __fastcall ModalDialog(ModalFilterUPP modalFilter, DialogItemIndex *itemHit);
OSErr __fastcall ModemStatus(Byte *status);
void __fastcall MoreMasterPointers(UInt32 inCount);
void MoreMasters(void);
void __fastcall Move(__int16 dh, __int16 dv);
void __fastcall MoveControl(ControlRef theControl, SInt16 h, SInt16 v);
OSStatus __fastcall MoveDataBrowserSelectionAnchor(ControlRef browser, DataBrowserSelectionAnchorDirection direction, Boolean extendSelection);
OSErr __fastcall MoveDialogItem(DialogRef inDialog, SInt16 inItemNo, SInt16 inHoriz, SInt16 inVert);
void __fastcall MoveHHi(Handle h);
OSStatus __fastcall MoveMouseTrackingRegion(MouseTrackingRef inMouseRef, SInt16 deltaH, SInt16 deltaV, RgnHandle inClip);
void __fastcall MovePortTo(__int16 leftGlobal, __int16 topGlobal);
void __fastcall MoveTo(__int16 h, __int16 v);
void __fastcall MoveWindow(WindowRef window, __int16 hGlobal, __int16 vGlobal, Boolean front);
OSStatus __fastcall MoveWindowMouseTrackingRegions(WindowRef inWindow, OSType inSignature, SInt16 deltaH, SInt16 deltaV, RgnHandle inClip);
OSStatus __fastcall MoveWindowStructure(WindowRef window, __int16 hGlobal, __int16 vGlobal);
int __fastcall Munger(Handle h, int offset, const void *ptr1, int len1, const void *ptr2, int len2);
CMError __fastcall NCMBeginMatching(CMProfileRef src, CMProfileRef dst, CMMatchRef *myRef);
void __fastcall NCMDrawMatchedPicture(PicHandle myPicture, CMProfileRef dst, Rect *myRect);
CMError __fastcall NCMGetProfileLocation(CMProfileRef prof, CMProfileLocation *theProfile, UInt32 *locationSize);
CMError __fastcall NCMSetSystemProfile(const CMProfileLocation *profLoc);
CMError __fastcall NCMUnflattenProfile(CMProfileLocation *targetLocation, CMFlattenUPP proc, void *refCon, Boolean *preferredCMMnotfound);
CMError __fastcall NCMUseProfileComment(CMProfileRef prof, UInt32 flags);
CMError __fastcall NCWConcatColorWorld(CMWorldRef *cw, NCMConcatProfileSet *profileSet, CMConcatCallBackUPP proc, void *refCon);
CMError __fastcall NCWNewColorWorld(CMWorldRef *cw, CMProfileRef src, CMProfileRef dst);
CMError __fastcall NCWNewLinkProfile(CMProfileRef *prof, const CMProfileLocation *targetLocation, NCMConcatProfileSet *profileSet, CMConcatCallBackUPP proc, void *refCon);
OSErr __fastcall NMInstall(NMRecPtr nmReqPtr);
OSErr __fastcall NMRemove(NMRecPtr nmReqPtr);
OSErr __fastcall NPickColor(NColorPickerInfo *theColorInfo);
NSLError __fastcall NSLAddServiceToServicesList(NSLServicesList serviceList, NSLServiceType serviceType);
NSLError __fastcall NSLCancelRequest(NSLRequestRef ref);
void __fastcall NSLCloseNavigationAPI(NSLClientRef theClient);
NSLError __fastcall NSLContinueLookup(NSLClientAsyncInfo *asyncInfo);
NSLNeighborhood __fastcall NSLCopyNeighborhood(NSLNeighborhood neighborhood);
NSLError __fastcall NSLDeleteRequest(NSLRequestRef ref);
void __fastcall NSLDisposeServicesList(NSLServicesList theList);
OSErr __fastcall NSLDisposeThread(ThreadID threadToDump, void *threadResult, Boolean recycleThread);
OSStatus __fastcall NSLErrorToString(NSLError theErr, char *errorString, char *solutionString);
NSLNeighborhood __fastcall NSLFreeNeighborhood(NSLNeighborhood neighborhood);
NSLTypedDataPtr __fastcall NSLFreeTypedDataPtr(NSLTypedDataPtr nslTypeData);
char *__fastcall NSLFreeURL(char *url);
OSStatus __fastcall NSLGetDefaultDialogOptions(NSLDialogOptions *dialogOptions);
OSStatus __fastcall NSLGetErrorStringsFromResource(OSStatus theErr, const FSSpec *fileSpecPtr, SInt16 errorResID, char *errorString, char *solutionString);
void __fastcall NSLGetNameFromNeighborhood(NSLNeighborhood neighborhood, char **name, int *length);
int __fastcall NSLGetNeighborhoodLength(NSLNeighborhood neighborhood);
Boolean __fastcall NSLGetNextNeighborhood(NSLClientAsyncInfoPtr infoPtr, NSLNeighborhood *neighborhood, int *neighborhoodLength);
Boolean __fastcall NSLGetNextUrl(NSLClientAsyncInfoPtr infoPtr, char **urlPtr, int *urlLength);
OSStatus __fastcall NSLGetServiceFromURL(char *theURL, char **svcString, UInt16 *svcLen);
OSStatus __fastcall NSLHexDecodeText(const char *encodedText, UInt16 encodedTextLen, char *decodedTextBuffer, UInt16 *decodedTextBufferLen, Boolean *textChanged);
OSStatus __fastcall NSLHexEncodeText(const char *rawText, UInt16 rawTextLen, char *newTextBuffer, UInt16 *newTextBufferLen, Boolean *textChanged);
UInt32 NSLLibraryVersion(void);
NSLNeighborhood __fastcall NSLMakeNewNeighborhood(const char *name, const char *protocolList);
NSLServicesList __fastcall NSLMakeNewServicesList(const char *initialServiceList);
OSStatus __fastcall NSLMakeServicesRequestPB(NSLServicesList serviceList, NSLTypedDataPtr *newDataPtr);
OSErr __fastcall NSLNewThread(ThreadStyle threadStyle, ThreadEntryProcPtr threadEntry, void *threadParam, Size stackSize, ThreadOptions options, void **threadResult, ThreadID *threadMade);
OSStatus __fastcall NSLOpenNavigationAPI(NSLClientRef *newRef);
OSStatus __fastcall NSLParseServiceRegistrationPB(NSLTypedDataPtr newDataPtr, NSLNeighborhood *neighborhoodPtr, UInt16 *neighborhoodLen, char **urlPtr, UInt16 *urlLen);
OSStatus __fastcall NSLParseServicesRequestPB(NSLTypedDataPtr newDataPtr, char **serviceListPtr, UInt16 *serviceListLen);
NSLError __fastcall NSLPrepareRequest(NSLClientNotifyUPP notifier, void *contextPtr, NSLClientRef theClient, NSLRequestRef *ref, char *bufPtr, unsigned int bufLen, NSLClientAsyncInfoPtr *infoPtr);
OSErr __fastcall NSLSaveURLAliasToFolder(OSType folderSelectorType, const char *url, const char *userFriendlyName);
Boolean __fastcall NSLServiceIsInServiceList(NSLServicesList serviceList, NSLServiceType svcToFind);
NSLError __fastcall NSLStandardDeregisterURL(NSLPath urlToDeregister, NSLNeighborhood neighborhoodToDeregisterIn);
OSStatus __fastcall NSLStandardGetURL(NSLDialogOptions *dialogOptions, NSLEventUPP eventProc, void *eventProcContextPtr, NSLURLFilterUPP filterProc, char *serviceTypeList, char **userSelectedURL);
NSLError __fastcall NSLStandardRegisterURL(NSLPath urlToRegister, NSLNeighborhood neighborhoodToRegisterIn);
NSLError __fastcall NSLStartNeighborhoodLookup(NSLRequestRef ref, NSLNeighborhood neighborhood, NSLClientAsyncInfo *asyncInfo);
NSLError __fastcall NSLStartServicesLookup(NSLRequestRef ref, NSLNeighborhood neighborhood, NSLTypedDataPtr requestData, NSLClientAsyncInfo *asyncInfo);
void __fastcall NSetPalette(WindowRef dstWindow, PaletteHandle srcPalette, __int16 nCUpdates);
AbsoluteTime __fastcall NanosecondsToAbsolute(Nanoseconds nanoseconds);
Duration __fastcall NanosecondsToDuration(Nanoseconds theNanoseconds);
OSErr __fastcall NavAskDiscardChanges(NavDialogOptions *dialogOptions, NavAskDiscardChangesResult *reply, NavEventUPP eventProc, void *callBackUD);
OSErr __fastcall NavAskSaveChanges(NavDialogOptions *dialogOptions, NavAskSaveChangesAction action, NavAskSaveChangesResult *reply, NavEventUPP eventProc, void *callBackUD);
OSErr __fastcall NavChooseFile(AEDesc *defaultLocation, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, NavPreviewUPP previewProc, NavObjectFilterUPP filterProc, NavTypeListHandle typeList, void *callBackUD);
OSErr __fastcall NavChooseFolder(AEDesc *defaultLocation, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, NavObjectFilterUPP filterProc, void *callBackUD);
OSErr __fastcall NavChooseObject(AEDesc *defaultLocation, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, NavObjectFilterUPP filterProc, void *callBackUD);
OSErr __fastcall NavChooseVolume(AEDesc *defaultSelection, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, NavObjectFilterUPP filterProc, void *callBackUD);
OSErr __fastcall NavCompleteSave(NavReplyRecord *reply, NavTranslationOptions howToTranslate);
OSStatus __fastcall NavCreateAskDiscardChangesDialog(const NavDialogCreationOptions *inOptions, NavEventUPP inEventProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateAskReviewDocumentsDialog(const NavDialogCreationOptions *inOptions, UInt32 inDocumentCount, NavEventUPP inEventProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateAskSaveChangesDialog(const NavDialogCreationOptions *inOptions, NavAskSaveChangesAction inAction, NavEventUPP inEventProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateChooseFileDialog(const NavDialogCreationOptions *inOptions, NavTypeListHandle inTypeList, NavEventUPP inEventProc, NavPreviewUPP inPreviewProc, NavObjectFilterUPP inFilterProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateChooseFolderDialog(const NavDialogCreationOptions *inOptions, NavEventUPP inEventProc, NavObjectFilterUPP inFilterProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateChooseObjectDialog(const NavDialogCreationOptions *inOptions, NavEventUPP inEventProc, NavPreviewUPP inPreviewProc, NavObjectFilterUPP inFilterProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateChooseVolumeDialog(const NavDialogCreationOptions *inOptions, NavEventUPP inEventProc, NavObjectFilterUPP inFilterProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateGetFileDialog(const NavDialogCreationOptions *inOptions, NavTypeListHandle inTypeList, NavEventUPP inEventProc, NavPreviewUPP inPreviewProc, NavObjectFilterUPP inFilterProc, void *inClientData, NavDialogRef *outDialog);
OSStatus __fastcall NavCreateNewFolderDialog(const NavDialogCreationOptions *inOptions, NavEventUPP inEventProc, void *inClientData, NavDialogRef *outDialog);
OSErr __fastcall NavCreatePreview(AEDesc *theObject, OSType previewDataType, const void *previewData, Size previewDataSize);
OSStatus __fastcall NavCreatePutFileDialog(const NavDialogCreationOptions *inOptions, OSType inFileType, OSType inFileCreator, NavEventUPP inEventProc, void *inClientData, NavDialogRef *outDialog);
OSErr __fastcall NavCustomAskSaveChanges(NavDialogOptions *dialogOptions, NavAskSaveChangesResult *reply, NavEventUPP eventProc, void *callBackUD);
OSErr __fastcall NavCustomControl(NavDialogRef dialog, NavCustomControlMessage selector, void *parms);
void __fastcall NavDialogDispose(NavDialogRef inDialog);
OSStatus __fastcall NavDialogGetReply(NavDialogRef inDialog, NavReplyRecord *outReply);
Boolean __fastcall NavDialogGetSaveFileExtensionHidden(NavDialogRef inPutFileDialog);
CFStringRef __fastcall NavDialogGetSaveFileName(NavDialogRef inPutFileDialog);
NavUserAction __fastcall NavDialogGetUserAction(NavDialogRef inDialog);
WindowRef __fastcall NavDialogGetWindow(NavDialogRef inDialog);
OSStatus __fastcall NavDialogRun(NavDialogRef inDialog);
OSStatus __fastcall NavDialogSetSaveFileExtensionHidden(NavDialogRef inPutFileDialog, Boolean inHidden);
OSStatus __fastcall NavDialogSetSaveFileName(NavDialogRef inPutFileDialog, CFStringRef inFileName);
OSErr __fastcall NavDisposeReply(NavReplyRecord *reply);
OSStatus __fastcall NavGetDefaultDialogCreationOptions(NavDialogCreationOptions *outOptions);
OSErr __fastcall NavGetDefaultDialogOptions(NavDialogOptions *dialogOptions);
OSErr __fastcall NavGetFile(AEDesc *defaultLocation, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, NavPreviewUPP previewProc, NavObjectFilterUPP filterProc, NavTypeListHandle typeList, void *callBackUD);
UInt32 NavLibraryVersion(void);
OSErr NavLoad(void);
OSErr __fastcall NavNewFolder(AEDesc *defaultLocation, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, void *callBackUD);
OSErr __fastcall NavPutFile(AEDesc *defaultLocation, NavReplyRecord *reply, NavDialogOptions *dialogOptions, NavEventUPP eventProc, OSType fileType, OSType fileCreator, void *callBackUD);
Boolean NavServicesCanRun(void);
OSErr __fastcall NavTranslateFile(NavReplyRecord *reply, NavTranslationOptions howToTranslate);
OSErr NavUnload(void);
OSStatus __fastcall NearestMacTextEncodings(TextEncoding generalEncoding, TextEncoding *bestMacEncoding, TextEncoding *alternateMacEncoding);
AECoerceDescUPP __fastcall NewAECoerceDescUPP(AECoerceDescProcPtr userRoutine);
AECoercePtrUPP __fastcall NewAECoercePtrUPP(AECoercePtrProcPtr userRoutine);
AEDisposeExternalUPP __fastcall NewAEDisposeExternalUPP(AEDisposeExternalProcPtr userRoutine);
AEEventHandlerUPP __fastcall NewAEEventHandlerUPP(AEEventHandlerProcPtr userRoutine);
AEFilterUPP __fastcall NewAEFilterUPP(AEFilterProcPtr userRoutine);
AEIdleUPP __fastcall NewAEIdleUPP(AEIdleProcPtr userRoutine);
ATSCubicClosePathUPP __fastcall NewATSCubicClosePathUPP(ATSCubicClosePathProcPtr userRoutine);
ATSCubicCurveToUPP __fastcall NewATSCubicCurveToUPP(ATSCubicCurveToProcPtr userRoutine);
ATSCubicLineToUPP __fastcall NewATSCubicLineToUPP(ATSCubicLineToProcPtr userRoutine);
ATSCubicMoveToUPP __fastcall NewATSCubicMoveToUPP(ATSCubicMoveToProcPtr userRoutine);
ATSQuadraticClosePathUPP __fastcall NewATSQuadraticClosePathUPP(ATSQuadraticClosePathProcPtr userRoutine);
ATSQuadraticCurveUPP __fastcall NewATSQuadraticCurveUPP(ATSQuadraticCurveProcPtr userRoutine);
ATSQuadraticLineUPP __fastcall NewATSQuadraticLineUPP(ATSQuadraticLineProcPtr userRoutine);
ATSQuadraticNewPathUPP __fastcall NewATSQuadraticNewPathUPP(ATSQuadraticNewPathProcPtr userRoutine);
ATSUDirectLayoutOperationOverrideUPP __fastcall NewATSUDirectLayoutOperationOverrideUPP(ATSUDirectLayoutOperationOverrideProcPtr userRoutine);
AVLCompareItemsUPP __fastcall NewAVLCompareItemsUPP(AVLCompareItemsProcPtr userRoutine);
AVLDisposeItemUPP __fastcall NewAVLDisposeItemUPP(AVLDisposeItemProcPtr userRoutine);
AVLItemSizeUPP __fastcall NewAVLItemSizeUPP(AVLItemSizeProcPtr userRoutine);
AVLWalkUPP __fastcall NewAVLWalkUPP(AVLWalkProcPtr userRoutine);
OSErr __fastcall NewAlias(const FSSpec *fromFile, const FSSpec *target, AliasHandle *alias);
AliasFilterUPP __fastcall NewAliasFilterUPP(AliasFilterProcPtr userRoutine);
OSErr __fastcall NewAliasMinimal(const FSSpec *target, AliasHandle *alias);
OSErr __fastcall NewAliasMinimalFromFullPath(__int16 fullPathLength, const void *fullPath, ConstStr32Param zoneName, ConstStr31Param serverName, AliasHandle *alias);
CMBitmapCallBackUPP __fastcall NewCMBitmapCallBackUPP(CMBitmapCallBackProcPtr userRoutine);
CMConcatCallBackUPP __fastcall NewCMConcatCallBackUPP(CMConcatCallBackProcPtr userRoutine);
CMFlattenUPP __fastcall NewCMFlattenUPP(CMFlattenProcPtr userRoutine);
CMMIterateUPP __fastcall NewCMMIterateUPP(CMMIterateProcPtr userRoutine);
CMProfileAccessUPP __fastcall NewCMProfileAccessUPP(CMProfileAccessProcPtr userRoutine);
CMProfileFilterUPP __fastcall NewCMProfileFilterUPP(CMProfileFilterProcPtr userRoutine);
CMProfileIterateUPP __fastcall NewCMProfileIterateUPP(CMProfileIterateProcPtr userRoutine);
WindowRef __fastcall NewCWindow(void *wStorage, const Rect *boundsRect, ConstStr255Param title, Boolean visible, __int16 procID, WindowRef behind, Boolean goAwayFlag, int refCon);
CalcColorTableUPP __fastcall NewCalcColorTableUPP(CalcColorTableProcPtr userRoutine);
CalibrateEventUPP __fastcall NewCalibrateEventUPP(CalibrateEventProcPtr userRoutine);
CalibrateUPP __fastcall NewCalibrateUPP(CalibrateProcPtr userRoutine);
CanCalibrateUPP __fastcall NewCanCalibrateUPP(CanCalibrateProcPtr userRoutine);
CaretHookUPP __fastcall NewCaretHookUPP(CaretHookProcPtr userRoutine);
Collection NewCollection(void);
CollectionExceptionUPP __fastcall NewCollectionExceptionUPP(CollectionExceptionProcPtr userRoutine);
CollectionFlattenUPP __fastcall NewCollectionFlattenUPP(CollectionFlattenProcPtr userRoutine);
ColorChangedUPP __fastcall NewColorChangedUPP(ColorChangedProcPtr userRoutine);
ColorComplementUPP __fastcall NewColorComplementUPP(ColorComplementProcPtr userRoutine);
DialogRef __fastcall NewColorDialog(void *dStorage, const Rect *boundsRect, ConstStr255Param title, Boolean visible, SInt16 procID, WindowRef behind, Boolean goAwayFlag, SInt32 refCon, Handle items);
ColorSearchUPP __fastcall NewColorSearchUPP(ColorSearchProcPtr userRoutine);
ComponentFunctionUPP __fastcall NewComponentFunctionUPP(ProcPtr userRoutine, ProcInfoType procInfo);
ComponentMPWorkFunctionUPP __fastcall NewComponentMPWorkFunctionUPP(ComponentMPWorkFunctionProcPtr userRoutine);
ComponentRoutineUPP __fastcall NewComponentRoutineUPP(ComponentRoutineProcPtr userRoutine);
ControlRef __fastcall NewControl(WindowRef owningWindow, const Rect *boundsRect, ConstStr255Param controlTitle, Boolean initiallyVisible, SInt16 initialValue, SInt16 minimumValue, SInt16 maximumValue, SInt16 procID, SInt32 controlReference);
ControlActionUPP __fastcall NewControlActionUPP(ControlActionProcPtr userRoutine);
ControlCNTLToCollectionUPP __fastcall NewControlCNTLToCollectionUPP(ControlCNTLToCollectionProcPtr userRoutine);
ControlColorUPP __fastcall NewControlColorUPP(ControlColorProcPtr userRoutine);
ControlDefUPP __fastcall NewControlDefUPP(ControlDefProcPtr userRoutine);
ControlEditTextValidationUPP __fastcall NewControlEditTextValidationUPP(ControlEditTextValidationProcPtr userRoutine);
ControlKeyFilterUPP __fastcall NewControlKeyFilterUPP(ControlKeyFilterProcPtr userRoutine);
ControlUserPaneActivateUPP __fastcall NewControlUserPaneActivateUPP(ControlUserPaneActivateProcPtr userRoutine);
ControlUserPaneBackgroundUPP __fastcall NewControlUserPaneBackgroundUPP(ControlUserPaneBackgroundProcPtr userRoutine);
ControlUserPaneDrawUPP __fastcall NewControlUserPaneDrawUPP(ControlUserPaneDrawProcPtr userRoutine);
ControlUserPaneFocusUPP __fastcall NewControlUserPaneFocusUPP(ControlUserPaneFocusProcPtr userRoutine);
ControlUserPaneHitTestUPP __fastcall NewControlUserPaneHitTestUPP(ControlUserPaneHitTestProcPtr userRoutine);
ControlUserPaneIdleUPP __fastcall NewControlUserPaneIdleUPP(ControlUserPaneIdleProcPtr userRoutine);
ControlUserPaneKeyDownUPP __fastcall NewControlUserPaneKeyDownUPP(ControlUserPaneKeyDownProcPtr userRoutine);
ControlUserPaneTrackingUPP __fastcall NewControlUserPaneTrackingUPP(ControlUserPaneTrackingProcPtr userRoutine);
DMComponentListIteratorUPP __fastcall NewDMComponentListIteratorUPP(DMComponentListIteratorProcPtr userRoutine);
DMDisplayListIteratorUPP __fastcall NewDMDisplayListIteratorUPP(DMDisplayListIteratorProcPtr userRoutine);
DMDisplayModeListIteratorUPP __fastcall NewDMDisplayModeListIteratorUPP(DMDisplayModeListIteratorProcPtr userRoutine);
DMExtendedNotificationUPP __fastcall NewDMExtendedNotificationUPP(DMExtendedNotificationProcPtr userRoutine);
DMNotificationUPP __fastcall NewDMNotificationUPP(DMNotificationProcPtr userRoutine);
DMProfileListIteratorUPP __fastcall NewDMProfileListIteratorUPP(DMProfileListIteratorProcPtr userRoutine);
DataBrowserAcceptDragUPP __fastcall NewDataBrowserAcceptDragUPP(DataBrowserAcceptDragProcPtr userRoutine);
DataBrowserAddDragItemUPP __fastcall NewDataBrowserAddDragItemUPP(DataBrowserAddDragItemProcPtr userRoutine);
DataBrowserDrawItemUPP __fastcall NewDataBrowserDrawItemUPP(DataBrowserDrawItemProcPtr userRoutine);
DataBrowserEditItemUPP __fastcall NewDataBrowserEditItemUPP(DataBrowserEditItemProcPtr userRoutine);
DataBrowserGetContextualMenuUPP __fastcall NewDataBrowserGetContextualMenuUPP(DataBrowserGetContextualMenuProcPtr userRoutine);
DataBrowserHitTestUPP __fastcall NewDataBrowserHitTestUPP(DataBrowserHitTestProcPtr userRoutine);
DataBrowserItemAcceptDragUPP __fastcall NewDataBrowserItemAcceptDragUPP(DataBrowserItemAcceptDragProcPtr userRoutine);
DataBrowserItemCompareUPP __fastcall NewDataBrowserItemCompareUPP(DataBrowserItemCompareProcPtr userRoutine);
DataBrowserItemDataUPP __fastcall NewDataBrowserItemDataUPP(DataBrowserItemDataProcPtr userRoutine);
DataBrowserItemDragRgnUPP __fastcall NewDataBrowserItemDragRgnUPP(DataBrowserItemDragRgnProcPtr userRoutine);
DataBrowserItemHelpContentUPP __fastcall NewDataBrowserItemHelpContentUPP(DataBrowserItemHelpContentProcPtr userRoutine);
DataBrowserItemNotificationUPP __fastcall NewDataBrowserItemNotificationUPP(DataBrowserItemNotificationProcPtr userRoutine);
DataBrowserItemNotificationWithItemUPP __fastcall NewDataBrowserItemNotificationWithItemUPP(DataBrowserItemNotificationWithItemProcPtr userRoutine);
DataBrowserItemReceiveDragUPP __fastcall NewDataBrowserItemReceiveDragUPP(DataBrowserItemReceiveDragProcPtr userRoutine);
DataBrowserItemUPP __fastcall NewDataBrowserItemUPP(DataBrowserItemProcPtr userRoutine);
DataBrowserPostProcessDragUPP __fastcall NewDataBrowserPostProcessDragUPP(DataBrowserPostProcessDragProcPtr userRoutine);
DataBrowserReceiveDragUPP __fastcall NewDataBrowserReceiveDragUPP(DataBrowserReceiveDragProcPtr userRoutine);
DataBrowserSelectContextualMenuUPP __fastcall NewDataBrowserSelectContextualMenuUPP(DataBrowserSelectContextualMenuProcPtr userRoutine);
DataBrowserTrackingUPP __fastcall NewDataBrowserTrackingUPP(DataBrowserTrackingProcPtr userRoutine);
DebugAssertOutputHandlerUPP __fastcall NewDebugAssertOutputHandlerUPP(DebugAssertOutputHandlerProcPtr userRoutine);
OSStatus __fastcall NewDebugComponent(OSType componentSignature, ConstStr255Param componentName, DebugComponentCallbackUPP componentCallback);
DebugComponentCallbackUPP __fastcall NewDebugComponentCallbackUPP(DebugComponentCallbackProcPtr userRoutine);
OSStatus __fastcall NewDebugOption(OSType componentSignature, SInt32 optionSelectorNum, ConstStr255Param optionName);
DebuggerDisposeThreadUPP __fastcall NewDebuggerDisposeThreadUPP(DebuggerDisposeThreadProcPtr userRoutine);
DebuggerNewThreadUPP __fastcall NewDebuggerNewThreadUPP(DebuggerNewThreadProcPtr userRoutine);
DebuggerThreadSchedulerUPP __fastcall NewDebuggerThreadSchedulerUPP(DebuggerThreadSchedulerProcPtr userRoutine);
DeferredTaskUPP __fastcall NewDeferredTaskUPP(DeferredTaskProcPtr userRoutine);
DeviceLoopDrawingUPP __fastcall NewDeviceLoopDrawingUPP(DeviceLoopDrawingProcPtr userRoutine);
DialogRef __fastcall NewDialog(void *dStorage, const Rect *boundsRect, ConstStr255Param title, Boolean visible, SInt16 procID, WindowRef behind, Boolean goAwayFlag, SInt32 refCon, Handle items);
DisposeColorPickMethodUPP __fastcall NewDisposeColorPickMethodUPP(DisposeColorPickMethodProcPtr userRoutine);
OSErr __fastcall NewDrag(DragRef *theDrag);
DragDrawingUPP __fastcall NewDragDrawingUPP(DragDrawingProcPtr userRoutine);
DragGrayRgnUPP __fastcall NewDragGrayRgnUPP(DragGrayRgnProcPtr userRoutine);
DragInputUPP __fastcall NewDragInputUPP(DragInputProcPtr userRoutine);
DragReceiveHandlerUPP __fastcall NewDragReceiveHandlerUPP(DragReceiveHandlerProcPtr userRoutine);
DragSendDataUPP __fastcall NewDragSendDataUPP(DragSendDataProcPtr userRoutine);
DragTrackingHandlerUPP __fastcall NewDragTrackingHandlerUPP(DragTrackingHandlerProcPtr userRoutine);
DrawHookUPP __fastcall NewDrawHookUPP(DrawHookProcPtr userRoutine);
EOLHookUPP __fastcall NewEOLHookUPP(EOLHookProcPtr userRoutine);
EditUnicodePostUpdateUPP __fastcall NewEditUnicodePostUpdateUPP(EditUnicodePostUpdateProcPtr userRoutine);
Handle NewEmptyHandle(void);
EventComparatorUPP __fastcall NewEventComparatorUPP(EventComparatorProcPtr userRoutine);
EventHandlerUPP __fastcall NewEventHandlerUPP(EventHandlerProcPtr userRoutine);
EventLoopIdleTimerUPP __fastcall NewEventLoopIdleTimerUPP(EventLoopIdleTimerProcPtr userRoutine);
EventLoopTimerUPP __fastcall NewEventLoopTimerUPP(EventLoopTimerProcPtr userRoutine);
ExceptionHandlerUPP __fastcall NewExceptionHandlerUPP(ExceptionHandlerProcPtr userRoutine);
FBCCallbackUPP __fastcall NewFBCCallbackUPP(FBCCallbackProcPtr userRoutine);
FBCHitTestUPP __fastcall NewFBCHitTestUPP(FBCHitTestProcPtr userRoutine);
FMFontCallbackFilterUPP __fastcall NewFMFontCallbackFilterUPP(FMFontCallbackFilterProcPtr userRoutine);
FMFontFamilyCallbackFilterUPP __fastcall NewFMFontFamilyCallbackFilterUPP(FMFontFamilyCallbackFilterProcPtr userRoutine);
FNSubscriptionUPP __fastcall NewFNSubscriptionUPP(FNSubscriptionProcPtr userRoutine);
FSVolumeEjectUPP __fastcall NewFSVolumeEjectUPP(FSVolumeEjectProcPtr userRoutine);
FSVolumeMountUPP __fastcall NewFSVolumeMountUPP(FSVolumeMountProcPtr userRoutine);
FSVolumeUnmountUPP __fastcall NewFSVolumeUnmountUPP(FSVolumeUnmountProcPtr userRoutine);
DialogRef __fastcall NewFeaturesDialog(void *inStorage, const Rect *inBoundsRect, ConstStr255Param inTitle, Boolean inIsVisible, SInt16 inProcID, WindowRef inBehind, Boolean inGoAwayFlag, SInt32 inRefCon, Handle inItemListHandle, UInt32 inFlags);
FolderManagerNotificationUPP __fastcall NewFolderManagerNotificationUPP(FolderManagerNotificationProcPtr userRoutine);
GDHandle __fastcall NewGDevice(__int16 refNum, int mode);
QDErr __fastcall NewGWorld(GWorldPtr *offscreenGWorld, __int16 PixelDepth, const Rect *boundsRect, CTabHandle cTable, GDHandle aGDevice, GWorldFlags flags);
QDErr __fastcall NewGWorldFromPtr(GWorldPtr *offscreenGWorld, unsigned int PixelFormat, const Rect *boundsRect, CTabHandle cTable, GDHandle aGDevice, GWorldFlags flags, Ptr newBuffer, int rowBytes);
OSErr __fastcall NewGestalt(OSType selector, SelectorFunctionUPP gestaltFunction);
OSErr __fastcall NewGestaltValue(OSType selector, int newValue);
GetMissingComponentResourceUPP __fastcall NewGetMissingComponentResourceUPP(GetMissingComponentResourceProcPtr userRoutine);
GetScrapDataUPP __fastcall NewGetScrapDataUPP(GetScrapDataProcPtr userRoutine);
GrowZoneUPP __fastcall NewGrowZoneUPP(GrowZoneProcPtr userRoutine);
HDSpindownUPP __fastcall NewHDSpindownUPP(HDSpindownProcPtr userRoutine);
HMControlContentUPP __fastcall NewHMControlContentUPP(HMControlContentProcPtr userRoutine);
HMMenuItemContentUPP __fastcall NewHMMenuItemContentUPP(HMMenuItemContentProcPtr userRoutine);
HMMenuTitleContentUPP __fastcall NewHMMenuTitleContentUPP(HMMenuTitleContentProcPtr userRoutine);
HMWindowContentUPP __fastcall NewHMWindowContentUPP(HMWindowContentProcPtr userRoutine);
HRNewCFURLUPP __fastcall NewHRNewCFURLUPP(HRNewCFURLProcPtr userRoutine);
HRNewURLUPP __fastcall NewHRNewURLUPP(HRNewURLProcPtr userRoutine);
HRURLToFSRefUPP __fastcall NewHRURLToFSRefUPP(HRURLToFSRefProcPtr userRoutine);
HRURLToFSSpecUPP __fastcall NewHRURLToFSSpecUPP(HRURLToFSSpecProcPtr userRoutine);
HRWasCFURLVisitedUPP __fastcall NewHRWasCFURLVisitedUPP(HRWasCFURLVisitedProcPtr userRoutine);
HRWasURLVisitedUPP __fastcall NewHRWasURLVisitedUPP(HRWasURLVisitedProcPtr userRoutine);
Handle __fastcall NewHandle(Size byteCount);
Handle __fastcall NewHandleClear(Size byteCount);
HighHookUPP __fastcall NewHighHookUPP(HighHookProcPtr userRoutine);
HitTestHookUPP __fastcall NewHitTestHookUPP(HitTestHookProcPtr userRoutine);
IOCompletionUPP __fastcall NewIOCompletionUPP(IOCompletionProcPtr userRoutine);
IconActionUPP __fastcall NewIconActionUPP(IconActionProcPtr userRoutine);
IconGetterUPP __fastcall NewIconGetterUPP(IconGetterProcPtr userRoutine);
OSErr __fastcall NewIconSuite(IconSuiteRef *theIconSuite);
IndexToStringUPP __fastcall NewIndexToStringUPP(IndexToStringProcPtr userRoutine);
InitPickMethodUPP __fastcall NewInitPickMethodUPP(InitPickMethodProcPtr userRoutine);
KCCallbackUPP __fastcall NewKCCallbackUPP(KCCallbackProcPtr userRoutine);
ListClickLoopUPP __fastcall NewListClickLoopUPP(ListClickLoopProcPtr userRoutine);
ListDefUPP __fastcall NewListDefUPP(ListDefProcPtr userRoutine);
ListSearchUPP __fastcall NewListSearchUPP(ListSearchProcPtr userRoutine);
MenuRef __fastcall NewMenu(MenuID menuID, ConstStr255Param menuTitle);
MenuDefUPP __fastcall NewMenuDefUPP(MenuDefProcPtr userRoutine);
MenuItemDrawingUPP __fastcall NewMenuItemDrawingUPP(MenuItemDrawingProcPtr userRoutine);
MenuTitleDrawingUPP __fastcall NewMenuTitleDrawingUPP(MenuTitleDrawingProcPtr userRoutine);
ModalFilterUPP __fastcall NewModalFilterUPP(ModalFilterProcPtr userRoutine);
ModalFilterYDUPP __fastcall NewModalFilterYDUPP(ModalFilterYDProcPtr userRoutine);
NColorChangedUPP __fastcall NewNColorChangedUPP(NColorChangedProcPtr userRoutine);
NMUPP __fastcall NewNMUPP(NMProcPtr userRoutine);
NSLClientNotifyUPP __fastcall NewNSLClientNotifyUPP(NSLClientNotifyProcPtr userRoutine);
NSLEventUPP __fastcall NewNSLEventUPP(NSLEventProcPtr userRoutine);
NSLMgrNotifyUPP __fastcall NewNSLMgrNotifyUPP(NSLMgrNotifyProcPtr userRoutine);
NSLURLFilterUPP __fastcall NewNSLURLFilterUPP(NSLURLFilterProcPtr userRoutine);
NWidthHookUPP __fastcall NewNWidthHookUPP(NWidthHookProcPtr userRoutine);
NavEventUPP __fastcall NewNavEventUPP(NavEventProcPtr userRoutine);
NavObjectFilterUPP __fastcall NewNavObjectFilterUPP(NavObjectFilterProcPtr userRoutine);
NavPreviewUPP __fastcall NewNavPreviewUPP(NavPreviewProcPtr userRoutine);
OSAActiveUPP __fastcall NewOSAActiveUPP(OSAActiveProcPtr userRoutine);
OSACreateAppleEventUPP __fastcall NewOSACreateAppleEventUPP(OSACreateAppleEventProcPtr userRoutine);
OSASendUPP __fastcall NewOSASendUPP(OSASendProcPtr userRoutine);
OSLAccessorUPP __fastcall NewOSLAccessorUPP(OSLAccessorProcPtr userRoutine);
OSLAdjustMarksUPP __fastcall NewOSLAdjustMarksUPP(OSLAdjustMarksProcPtr userRoutine);
OSLCompareUPP __fastcall NewOSLCompareUPP(OSLCompareProcPtr userRoutine);
OSLCountUPP __fastcall NewOSLCountUPP(OSLCountProcPtr userRoutine);
OSLDisposeTokenUPP __fastcall NewOSLDisposeTokenUPP(OSLDisposeTokenProcPtr userRoutine);
OSLGetErrDescUPP __fastcall NewOSLGetErrDescUPP(OSLGetErrDescProcPtr userRoutine);
OSLGetMarkTokenUPP __fastcall NewOSLGetMarkTokenUPP(OSLGetMarkTokenProcPtr userRoutine);
OSLMarkUPP __fastcall NewOSLMarkUPP(OSLMarkProcPtr userRoutine);
OTListSearchUPP __fastcall NewOTListSearchUPP(OTListSearchProcPtr userRoutine);
OTNotifyUPP __fastcall NewOTNotifyUPP(OTNotifyProcPtr userRoutine);
OTProcessUPP __fastcall NewOTProcessUPP(OTProcessProcPtr userRoutine);
PMIdleUPP __fastcall NewPMIdleUPP(PMIdleProcPtr userRoutine);
PMItemUPP __fastcall NewPMItemUPP(PMItemProcPtr userRoutine);
PMPageSetupDialogInitUPP __fastcall NewPMPageSetupDialogInitUPP(PMPageSetupDialogInitProcPtr userRoutine);
PMPrintDialogInitUPP __fastcall NewPMPrintDialogInitUPP(PMPrintDialogInitProcPtr userRoutine);
PMSheetDoneUPP __fastcall NewPMSheetDoneUPP(PMSheetDoneProcPtr userRoutine);
PMgrStateChangeUPP __fastcall NewPMgrStateChangeUPP(PMgrStateChangeProcPtr userRoutine);
PaletteHandle __fastcall NewPalette(__int16 entries, CTabHandle srcColors, __int16 srcUsage, __int16 srcTolerance);
OSErr __fastcall NewPictInfo(PictInfoID *thePictInfoID, __int16 verb, __int16 colorsRequested, __int16 colorPickMethod, __int16 version);
PixMapHandle NewPixMap(void);
PixPatHandle NewPixPat(void);
Ptr __fastcall NewPtr(Size byteCount);
Ptr __fastcall NewPtrClear(Size byteCount);
PurgeUPP __fastcall NewPurgeUPP(PurgeProcPtr userRoutine);
QDArcUPP __fastcall NewQDArcUPP(QDArcProcPtr userRoutine);
QDBitsUPP __fastcall NewQDBitsUPP(QDBitsProcPtr userRoutine);
QDCommentUPP __fastcall NewQDCommentUPP(QDCommentProcPtr userRoutine);
QDGetPicUPP __fastcall NewQDGetPicUPP(QDGetPicProcPtr userRoutine);
QDJShieldCursorUPP __fastcall NewQDJShieldCursorUPP(QDJShieldCursorProcPtr userRoutine);
QDLineUPP __fastcall NewQDLineUPP(QDLineProcPtr userRoutine);
QDOpcodeUPP __fastcall NewQDOpcodeUPP(QDOpcodeProcPtr userRoutine);
QDOvalUPP __fastcall NewQDOvalUPP(QDOvalProcPtr userRoutine);
QDPolyUPP __fastcall NewQDPolyUPP(QDPolyProcPtr userRoutine);
QDPutPicUPP __fastcall NewQDPutPicUPP(QDPutPicProcPtr userRoutine);
QDRRectUPP __fastcall NewQDRRectUPP(QDRRectProcPtr userRoutine);
QDRectUPP __fastcall NewQDRectUPP(QDRectProcPtr userRoutine);
QDRgnUPP __fastcall NewQDRgnUPP(QDRgnProcPtr userRoutine);
QDStdGlyphsUPP __fastcall NewQDStdGlyphsUPP(QDStdGlyphsProcPtr userRoutine);
QDTextUPP __fastcall NewQDTextUPP(QDTextProcPtr userRoutine);
QDTxMeasUPP __fastcall NewQDTxMeasUPP(QDTxMeasProcPtr userRoutine);
RecordColorsUPP __fastcall NewRecordColorsUPP(RecordColorsProcPtr userRoutine);
RedrawBackgroundUPP __fastcall NewRedrawBackgroundUPP(RedrawBackgroundProcPtr userRoutine);
RegionToRectsUPP __fastcall NewRegionToRectsUPP(RegionToRectsProcPtr userRoutine);
ResErrUPP __fastcall NewResErrUPP(ResErrProcPtr userRoutine);
RgnHandle NewRgn(void);
SCSICallbackUPP __fastcall NewSCSICallbackUPP(SCSICallbackProcPtr userRoutine);
SICompletionUPP __fastcall NewSICompletionUPP(SICompletionProcPtr userRoutine);
SIInterruptUPP __fastcall NewSIInterruptUPP(SIInterruptProcPtr userRoutine);
SRCallBackUPP __fastcall NewSRCallBackUPP(SRCallBackProcPtr userRoutine);
ScrapPromiseKeeperUPP __fastcall NewScrapPromiseKeeperUPP(ScrapPromiseKeeperProcPtr userRoutine);
QDErr __fastcall NewScreenBuffer(const Rect *globalRect, Boolean purgeable, GDHandle *gdh, PixMapHandle *offscreenPixMap);
SelectorFunctionUPP __fastcall NewSelectorFunctionUPP(SelectorFunctionProcPtr userRoutine);
SleepQUPP __fastcall NewSleepQUPP(SleepQProcPtr userRoutine);
SndCallBackUPP __fastcall NewSndCallBackUPP(SndCallBackProcPtr userRoutine);
SoundConverterFillBufferDataUPP __fastcall NewSoundConverterFillBufferDataUPP(SoundConverterFillBufferDataProcPtr userRoutine);
SoundParamUPP __fastcall NewSoundParamUPP(SoundParamProcPtr userRoutine);
OSErr __fastcall NewSpeechChannel(VoiceSpec *voice, SpeechChannel *chan);
SpeechDoneUPP __fastcall NewSpeechDoneUPP(SpeechDoneProcPtr userRoutine);
SpeechErrorUPP __fastcall NewSpeechErrorUPP(SpeechErrorProcPtr userRoutine);
SpeechPhonemeUPP __fastcall NewSpeechPhonemeUPP(SpeechPhonemeProcPtr userRoutine);
SpeechSyncUPP __fastcall NewSpeechSyncUPP(SpeechSyncProcPtr userRoutine);
SpeechTextDoneUPP __fastcall NewSpeechTextDoneUPP(SpeechTextDoneProcPtr userRoutine);
SpeechWordUPP __fastcall NewSpeechWordUPP(SpeechWordProcPtr userRoutine);
StringHandle __fastcall NewString(ConstStr255Param theString);
StyleRunDirectionUPP __fastcall NewStyleRunDirectionUPP(StyleRunDirectionProcPtr userRoutine);
TEClickLoopUPP __fastcall NewTEClickLoopUPP(TEClickLoopProcPtr userRoutine);
TEDoTextUPP __fastcall NewTEDoTextUPP(TEDoTextProcPtr userRoutine);
TEFindWordUPP __fastcall NewTEFindWordUPP(TEFindWordProcPtr userRoutine);
TERecalcUPP __fastcall NewTERecalcUPP(TERecalcProcPtr userRoutine);
OSErr __fastcall NewTSMDocument(__int16 numOfInterface, InterfaceTypeList supportedInterfaceTypes, TSMDocumentID *idocID, int refcon);
TSMTEPostUpdateUPP __fastcall NewTSMTEPostUpdateUPP(TSMTEPostUpdateProcPtr userRoutine);
TSMTEPreUpdateUPP __fastcall NewTSMTEPreUpdateUPP(TSMTEPreUpdateProcPtr userRoutine);
TXNActionKeyMapperUPP __fastcall NewTXNActionKeyMapperUPP(TXNActionKeyMapperProcPtr userRoutine);
TXNFindUPP __fastcall NewTXNFindUPP(TXNFindProcPtr userRoutine);
TXNScrollInfoUPP __fastcall NewTXNScrollInfoUPP(TXNScrollInfoProcPtr userRoutine);
QDErr __fastcall NewTempScreenBuffer(const Rect *globalRect, Boolean purgeable, GDHandle *gdh, PixMapHandle *offscreenPixMap);
TextWidthHookUPP __fastcall NewTextWidthHookUPP(TextWidthHookProcPtr userRoutine);
ThemeButtonDrawUPP __fastcall NewThemeButtonDrawUPP(ThemeButtonDrawProcPtr userRoutine);
ThemeEraseUPP __fastcall NewThemeEraseUPP(ThemeEraseProcPtr userRoutine);
ThemeIteratorUPP __fastcall NewThemeIteratorUPP(ThemeIteratorProcPtr userRoutine);
ThemeTabTitleDrawUPP __fastcall NewThemeTabTitleDrawUPP(ThemeTabTitleDrawProcPtr userRoutine);
OSErr __fastcall NewThread(ThreadStyle threadStyle, ThreadEntryTPP threadEntry, void *threadParam, Size stackSize, ThreadOptions options, void **threadResult, ThreadID *threadMade);
ThreadEntryUPP __fastcall NewThreadEntryUPP(ThreadEntryProcPtr userRoutine);
ThreadSchedulerUPP __fastcall NewThreadSchedulerUPP(ThreadSchedulerProcPtr userRoutine);
ThreadSwitchUPP __fastcall NewThreadSwitchUPP(ThreadSwitchProcPtr userRoutine);
ThreadTerminationUPP __fastcall NewThreadTerminationUPP(ThreadTerminationProcPtr userRoutine);
TimerUPP __fastcall NewTimerUPP(TimerProcPtr userRoutine);
URLNotifyUPP __fastcall NewURLNotifyUPP(URLNotifyProcPtr userRoutine);
URLSystemEventUPP __fastcall NewURLSystemEventUPP(URLSystemEventProcPtr userRoutine);
UnicodeToTextFallbackUPP __fastcall NewUnicodeToTextFallbackUPP(UnicodeToTextFallbackProcPtr userRoutine);
UserEventUPP __fastcall NewUserEventUPP(UserEventProcPtr userRoutine);
UserFnUPP __fastcall NewUserFnUPP(UserFnProcPtr userRoutine);
UserItemUPP __fastcall NewUserItemUPP(UserItemProcPtr userRoutine);
WidthHookUPP __fastcall NewWidthHookUPP(WidthHookProcPtr userRoutine);
WindowRef __fastcall NewWindow(void *wStorage, const Rect *boundsRect, ConstStr255Param title, Boolean visible, __int16 theProc, WindowRef behind, Boolean goAwayFlag, int refCon);
WindowDefUPP __fastcall NewWindowDefUPP(WindowDefProcPtr userRoutine);
WindowPaintUPP __fastcall NewWindowPaintUPP(WindowPaintProcPtr userRoutine);
WindowTitleDrawingUPP __fastcall NewWindowTitleDrawingUPP(WindowTitleDrawingProcPtr userRoutine);
void __fastcall NoPurgePixels(PixMapHandle pm);
OSStatus NormalizeThemeDrawingState(void);
DialogItemIndex __fastcall NoteAlert(SInt16 alertID, ModalFilterUPP modalFilter);
void __fastcall NumToString(int theNum, Str255 theString);
OSErr __fastcall OSAAddStorageType(AEDataStorage scriptData, DescType dscType);
OSAError __fastcall OSAAvailableDialectCodeList(ComponentInstance scriptingComponent, AEDesc *resultingDialectCodeList);
OSAError __fastcall OSAAvailableDialects(ComponentInstance scriptingComponent, AEDesc *resultingDialectInfoList);
OSAError __fastcall OSACoerceFromDesc(ComponentInstance scriptingComponent, const AEDesc *scriptData, int modeFlags, OSAID *resultingScriptID);
OSAError __fastcall OSACoerceToDesc(ComponentInstance scriptingComponent, OSAID scriptID, DescType desiredType, int modeFlags, AEDesc *result);
OSAError __fastcall OSACompile(ComponentInstance scriptingComponent, const AEDesc *sourceData, int modeFlags, OSAID *previousAndResultingScriptID);
OSAError __fastcall OSACompileExecute(ComponentInstance scriptingComponent, const AEDesc *sourceData, OSAID contextID, int modeFlags, OSAID *resultingScriptValueID);
OSAError __fastcall OSACopyID(ComponentInstance scriptingComponent, OSAID fromID, OSAID *toID);
OSAError __fastcall OSADebuggerCreateSession(ComponentInstance scriptingComponent, OSAID inScript, OSAID inContext, OSADebugSessionRef *outSession);
OSAError __fastcall OSADebuggerDisposeCallFrame(ComponentInstance scriptingComponent, OSADebugCallFrameRef inCallFrame);
OSAError __fastcall OSADebuggerDisposeSession(ComponentInstance scriptingComponent, OSADebugSessionRef inSession);
OSAError __fastcall OSADebuggerGetBreakpoint(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, UInt32 inSrcOffset, OSAID *outBreakpoint);
OSAError __fastcall OSADebuggerGetCallFrameState(ComponentInstance scriptingComponent, OSADebugCallFrameRef inCallFrame, AERecord *outState);
OSAError __fastcall OSADebuggerGetCurrentCallFrame(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, OSADebugCallFrameRef *outCallFrame);
OSAError __fastcall OSADebuggerGetDefaultBreakpoint(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, OSAID *outBreakpoint);
OSAError __fastcall OSADebuggerGetPreviousCallFrame(ComponentInstance scriptingComponent, OSADebugCallFrameRef inCurrentFrame, OSADebugCallFrameRef *outPrevFrame);
OSAError __fastcall OSADebuggerGetSessionState(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, AERecord *outState);
OSAError __fastcall OSADebuggerGetStatementRanges(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, AEDescList *outStatementRangeArray);
OSAError __fastcall OSADebuggerGetVariable(ComponentInstance scriptingComponent, OSADebugCallFrameRef inCallFrame, const AEDesc *inVariableName, OSAID *outVariable);
OSAError __fastcall OSADebuggerSessionStep(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, OSADebugStepKind inKind);
OSAError __fastcall OSADebuggerSetBreakpoint(ComponentInstance scriptingComponent, OSADebugSessionRef inSession, UInt32 inSrcOffset, OSAID inBreakpoint);
OSAError __fastcall OSADebuggerSetVariable(ComponentInstance scriptingComponent, OSADebugCallFrameRef inCallFrame, const AEDesc *inVariableName, OSAID inVariable);
OSAError __fastcall OSADisplay(ComponentInstance scriptingComponent, OSAID scriptValueID, DescType desiredType, int modeFlags, AEDesc *resultingText);
OSAError __fastcall OSADispose(ComponentInstance scriptingComponent, OSAID scriptID);
OSAError __fastcall OSADoEvent(ComponentInstance scriptingComponent, const AppleEvent *theAppleEvent, OSAID contextID, int modeFlags, AppleEvent *reply);
OSAError __fastcall OSADoScript(ComponentInstance scriptingComponent, const AEDesc *sourceData, OSAID contextID, DescType desiredType, int modeFlags, AEDesc *resultingText);
OSAError __fastcall OSAExecute(ComponentInstance scriptingComponent, OSAID compiledScriptID, OSAID contextID, int modeFlags, OSAID *resultingScriptValueID);
OSAError __fastcall OSAExecuteEvent(ComponentInstance scriptingComponent, const AppleEvent *theAppleEvent, OSAID contextID, int modeFlags, OSAID *resultingScriptValueID);
OSAError __fastcall OSAGenericToRealID(ComponentInstance genericScriptingComponent, OSAID *theScriptID, ComponentInstance *theExactComponent);
OSAError __fastcall OSAGetActiveProc(ComponentInstance scriptingComponent, OSAActiveUPP *activeProc, int *refCon);
OSAError __fastcall OSAGetAppTerminology(ComponentInstance scriptingComponent, int modeFlags, FSSpec *fileSpec, __int16 terminologyID, Boolean *didLaunch, AEDesc *terminologyList);
OSAError __fastcall OSAGetCreateProc(ComponentInstance scriptingComponent, OSACreateAppleEventUPP *createProc, int *refCon);
OSAError __fastcall OSAGetCurrentDialect(ComponentInstance scriptingComponent, __int16 *resultingDialectCode);
OSAError __fastcall OSAGetDefaultScriptingComponent(ComponentInstance genericScriptingComponent, ScriptingComponentSelector *scriptingSubType);
OSAError __fastcall OSAGetDialectInfo(ComponentInstance scriptingComponent, __int16 dialectCode, OSType selector, AEDesc *resultingDialectInfo);
OSAError __fastcall OSAGetHandler(ComponentInstance scriptingComponent, int modeFlags, OSAID contextID, const AEDesc *handlerName, OSAID *resultingCompiledScriptID);
OSAError __fastcall OSAGetHandlerNames(ComponentInstance scriptingComponent, int modeFlags, OSAID contextID, AEDescList *resultingHandlerNames);
OSAError __fastcall OSAGetProperty(ComponentInstance scriptingComponent, int modeFlags, OSAID contextID, const AEDesc *variableName, OSAID *resultingScriptValueID);
OSAError __fastcall OSAGetPropertyNames(ComponentInstance scriptingComponent, int modeFlags, OSAID contextID, AEDescList *resultingPropertyNames);
OSAError __fastcall OSAGetResumeDispatchProc(ComponentInstance scriptingComponent, AEEventHandlerUPP *resumeDispatchProc, int *refCon);
OSAError __fastcall OSAGetScriptInfo(ComponentInstance scriptingComponent, OSAID scriptID, OSType selector, int *result);
OSAError __fastcall OSAGetScriptingComponent(ComponentInstance genericScriptingComponent, ScriptingComponentSelector scriptingSubType, ComponentInstance *scriptingInstance);
OSAError __fastcall OSAGetScriptingComponentFromStored(ComponentInstance genericScriptingComponent, const AEDesc *scriptData, ScriptingComponentSelector *scriptingSubType);
OSAError __fastcall OSAGetSendProc(ComponentInstance scriptingComponent, OSASendUPP *sendProc, int *refCon);
OSAError __fastcall OSAGetSource(ComponentInstance scriptingComponent, OSAID scriptID, DescType desiredType, AEDesc *resultingSourceData);
OSErr __fastcall OSAGetStorageType(AEDataStorage scriptData, DescType *dscType);
OSAError __fastcall OSAGetSysTerminology(ComponentInstance scriptingComponent, int modeFlags, __int16 terminologyID, AEDesc *terminologyList);
OSAError __fastcall OSALoad(ComponentInstance scriptingComponent, const AEDesc *scriptData, int modeFlags, OSAID *resultingScriptID);
OSAError __fastcall OSALoadExecute(ComponentInstance scriptingComponent, const AEDesc *scriptData, OSAID contextID, int modeFlags, OSAID *resultingScriptValueID);
OSAError __fastcall OSAMakeContext(ComponentInstance scriptingComponent, const AEDesc *contextName, OSAID parentContext, OSAID *resultingContextID);
OSAError __fastcall OSARealToGenericID(ComponentInstance genericScriptingComponent, OSAID *theScriptID, ComponentInstance theExactComponent);
OSErr __fastcall OSARemoveStorageType(AEDataStorage scriptData);
OSAError __fastcall OSAScriptError(ComponentInstance scriptingComponent, OSType selector, DescType desiredType, AEDesc *resultingErrorDescription);
OSAError __fastcall OSAScriptingComponentName(ComponentInstance scriptingComponent, AEDesc *resultingScriptingComponentName);
OSAError __fastcall OSASetActiveProc(ComponentInstance scriptingComponent, OSAActiveUPP activeProc, int refCon);
OSAError __fastcall OSASetCreateProc(ComponentInstance scriptingComponent, OSACreateAppleEventUPP createProc, int refCon);
OSAError __fastcall OSASetCurrentDialect(ComponentInstance scriptingComponent, __int16 dialectCode);
OSAError __fastcall OSASetDefaultScriptingComponent(ComponentInstance genericScriptingComponent, ScriptingComponentSelector scriptingSubType);
OSAError __fastcall OSASetDefaultTarget(ComponentInstance scriptingComponent, const AEAddressDesc *target);
OSAError __fastcall OSASetHandler(ComponentInstance scriptingComponent, int modeFlags, OSAID contextID, const AEDesc *handlerName, OSAID compiledScriptID);
OSAError __fastcall OSASetProperty(ComponentInstance scriptingComponent, int modeFlags, OSAID contextID, const AEDesc *variableName, OSAID scriptValueID);
OSAError __fastcall OSASetResumeDispatchProc(ComponentInstance scriptingComponent, AEEventHandlerUPP resumeDispatchProc, int refCon);
OSAError __fastcall OSASetScriptInfo(ComponentInstance scriptingComponent, OSAID scriptID, OSType selector, int value);
OSAError __fastcall OSASetSendProc(ComponentInstance scriptingComponent, OSASendUPP sendProc, int refCon);
OSAError __fastcall OSAStartRecording(ComponentInstance scriptingComponent, OSAID *compiledScriptToModifyID);
OSAError __fastcall OSAStopRecording(ComponentInstance scriptingComponent, OSAID compiledScriptID);
OSAError __fastcall OSAStore(ComponentInstance scriptingComponent, OSAID scriptID, DescType desiredType, int modeFlags, AEDesc *resultingScriptData);
kern_return_t __fastcall OSGetNotificationFromMessage(mach_msg_header_t *msg, unsigned int index, unsigned int *type, unsigned int *reference, void **content, vm_size_t *size);
OSStatus __fastcall OTATalkGetInfo(ATSvcRef ref, TNetbuf *info);
OSStatus __fastcall OTATalkGetLocalZones(ATSvcRef ref, TNetbuf *zones);
OSStatus __fastcall OTATalkGetMyZone(ATSvcRef ref, TNetbuf *zone);
OSStatus __fastcall OTATalkGetZoneList(ATSvcRef ref, TNetbuf *zones);
OSStatus __fastcall OTAccept(EndpointRef listener, EndpointRef worker, TCall *call);
OSStatus __fastcall OTAckSends(ProviderRef ref);
void __fastcall OTAddFirst(OTList *list, OTLink *link);
void __fastcall OTAddLast(OTList *list, OTLink *link);
void *__fastcall OTAllocInContext(EndpointRef ref, OTStructType structType, UInt32 fields, OSStatus *err, OTClientContextPtr clientContext);
void *__fastcall OTAllocMemInContext(OTByteCount size, OTClientContextPtr clientContext);
OSStatus __fastcall OTAsyncOpenAppleTalkServicesInContext(OTConfigurationRef cfig, OTOpenFlags flags, OTNotifyUPP proc, void *contextPtr, OTClientContextPtr clientContext);
OSStatus __fastcall OTAsyncOpenEndpointInContext(OTConfigurationRef config, OTOpenFlags oflag, TEndpointInfo *info, OTNotifyUPP upp, void *contextPtr, OTClientContextPtr clientContext);
OSStatus __fastcall OTAsyncOpenInternetServicesInContext(OTConfigurationRef cfig, OTOpenFlags oflag, OTNotifyUPP upp, void *contextPtr, OTClientContextPtr clientContext);
OSStatus __fastcall OTAsyncOpenMapperInContext(OTConfigurationRef config, OTOpenFlags oflag, OTNotifyUPP upp, void *contextPtr, OTClientContextPtr clientContext);
SInt16 __fastcall OTAtomicAdd16(SInt32 toAdd, SInt16 *dest);
SInt32 __fastcall OTAtomicAdd32(SInt32 toAdd, SInt32 *dest);
SInt8 __fastcall OTAtomicAdd8(SInt32 toAdd, SInt8 *dest);
Boolean __fastcall OTAtomicClearBit(UInt8 *bytePtr, OTByteCount bitNumber);
Boolean __fastcall OTAtomicSetBit(UInt8 *bytePtr, OTByteCount bitNumber);
Boolean __fastcall OTAtomicTestBit(UInt8 *bytePtr, OTByteCount bitNumber);
OSStatus __fastcall OTBind(EndpointRef ref, TBind *reqAddr, TBind *retAddr);
OTByteCount __fastcall OTBufferDataSize(OTBuffer *buffer);
Boolean OTCanMakeSyncCall(void);
OSStatus __fastcall OTCancelSynchronousCalls(ProviderRef ref, OSStatus err);
Boolean __fastcall OTCancelTimerTask(OTTimerTask timerTask);
Boolean __fastcall OTClearBit(UInt8 *bitMap, OTByteCount bitNo);
OTConfigurationRef __fastcall OTCloneConfiguration(OTConfigurationRef cfig);
OSStatus __fastcall OTCloseProvider(ProviderRef ref);
Boolean __fastcall OTCompareAndSwap16(UInt32 oldValue, UInt32 newValue, UInt16 *dest);
Boolean __fastcall OTCompareAndSwap32(UInt32 oldValue, UInt32 newValue, UInt32 *dest);
Boolean __fastcall OTCompareAndSwap8(UInt32 oldValue, UInt32 newValue, UInt8 *dest);
Boolean __fastcall OTCompareAndSwapPtr(void *oldValue, void *newValue, void **dest);
Boolean __fastcall OTCompareDDPAddresses(const DDPAddress *addr1, const DDPAddress *addr2);
OSStatus __fastcall OTConnect(EndpointRef ref, TCall *sndCall, TCall *rcvCall);
OTResult __fastcall OTCountDataBytes(EndpointRef ref, OTByteCount *countPtr);
OTConfigurationRef __fastcall OTCreateConfiguration(const char *path);
int __fastcall OTCreateDeferredTaskInContext(OTProcessUPP upp, void *arg, OTClientContextPtr clientContext);
OTPortRef __fastcall OTCreatePortRef(OTBusType busType, OTDeviceType devType, OTSlotNumber slot, UInt16 other);
int __fastcall OTCreateTimerTaskInContext(OTProcessUPP upp, void *arg, OTClientContextPtr clientContext);
void __fastcall OTDelay(UInt32 seconds);
OSStatus __fastcall OTDeleteName(MapperRef ref, TNetbuf *name);
OSStatus __fastcall OTDeleteNameByID(MapperRef ref, OTNameID nameID);
void *__fastcall OTDequeue(void **listHead, OTByteCount linkOffset);
void __fastcall OTDestroyConfiguration(OTConfigurationRef cfig);
OSStatus __fastcall OTDestroyDeferredTask(OTDeferredTaskRef dtCookie);
void __fastcall OTDestroyTimerTask(OTTimerTask timerTask);
OSStatus __fastcall OTDontAckSends(ProviderRef ref);
UInt32 __fastcall OTElapsedMicroseconds(OTTimeStamp *startTime);
UInt32 __fastcall OTElapsedMilliseconds(OTTimeStamp *startTime);
void __fastcall OTEnqueue(void **listHead, void *object, OTByteCount linkOffset);
Boolean __fastcall OTEnterNotifier(ProviderRef ref);
void __fastcall OTExtractNBPName(const NBPEntity *entity, char *name);
void __fastcall OTExtractNBPType(const NBPEntity *entity, char *typeVal);
void __fastcall OTExtractNBPZone(const NBPEntity *entity, char *zone);
OTLink *__fastcall OTFindAndRemoveLink(OTList *list, OTListSearchUPP proc, const void *ref);
OTLink *__fastcall OTFindLink(OTList *list, OTListSearchUPP proc, const void *ref);
TOption *__fastcall OTFindOption(UInt8 *buffer, UInt32 buflen, OTXTILevel level, OTXTIName name);
Boolean __fastcall OTFindPort(OTPortRecord *portRecord, const char *portName);
Boolean __fastcall OTFindPortByRef(OTPortRecord *portRecord, OTPortRef ref);
OTResult __fastcall OTFree(void *ptr, OTStructType structType);
void __fastcall OTFreeMem(void *mem);
UInt16 __fastcall OTGetBusTypeFromPortRef(OTPortRef ref);
UInt32 OTGetClockTimeInSecs(void);
OTDeviceType __fastcall OTGetDeviceTypeFromPortRef(OTPortRef ref);
OSStatus __fastcall OTGetEndpointInfo(EndpointRef ref, TEndpointInfo *info);
OTResult __fastcall OTGetEndpointState(EndpointRef ref);
OTLink *__fastcall OTGetFirst(OTList *list);
OTLink *__fastcall OTGetIndexedLink(OTList *list, OTItemCount index);
Boolean __fastcall OTGetIndexedPort(OTPortRecord *portRecord, OTItemCount index);
OTLink *__fastcall OTGetLast(OTList *list);
OTByteCount __fastcall OTGetNBPEntityLengthAsAddress(const NBPEntity *entity);
OSStatus __fastcall OTGetProtAddress(EndpointRef ref, TBind *boundAddr, TBind *peerAddr);
OTSlotNumber __fastcall OTGetSlotFromPortRef(OTPortRef ref, UInt16 *other);
void __fastcall OTGetTimeStamp(OTTimeStamp *currentTime);
void OTIdle(void);
OSStatus __fastcall OTInetAddressToName(InetSvcRef ref, InetHost addr, InetDomainName name);
OSStatus __fastcall OTInetGetInterfaceInfo(InetInterfaceInfo *info, SInt32 val);
OSStatus __fastcall OTInetGetSecondaryAddresses(InetHost *addr, UInt32 *count, SInt32 val);
void __fastcall OTInetHostToString(InetHost host, char *str);
OSStatus __fastcall OTInetMailExchange(InetSvcRef ref, char *name, UInt16 *num, InetMailExchange *mx);
OSStatus __fastcall OTInetQuery(InetSvcRef ref, char *name, UInt16 qClass, UInt16 qType, char *buf, OTByteCount buflen, void **argv, OTByteCount argvlen, OTFlags flags);
OSStatus __fastcall OTInetStringToAddress(InetSvcRef ref, char *name, InetHostInfo *hinfo);
OSStatus __fastcall OTInetStringToHost(const char *str, InetHost *host);
OSStatus __fastcall OTInetSysInfo(InetSvcRef ref, char *name, InetSysInfo *sysinfo);
void __fastcall OTInitDDPAddress(DDPAddress *addr, UInt16 net, UInt8 node, UInt8 socket, UInt8 ddpType);
OTByteCount __fastcall OTInitDDPNBPAddress(DDPNBPAddress *addr, const char *name, UInt16 net, UInt8 node, UInt8 socket, UInt8 ddpType);
OTByteCount __fastcall OTInitDNSAddress(DNSAddress *addr, char *str);
void __fastcall OTInitInetAddress(InetAddress *addr, InetPort port, InetHost host);
OTByteCount __fastcall OTInitNBPAddress(NBPAddress *addr, const char *name);
void __fastcall OTInitNBPEntity(NBPEntity *entity);
OSStatus __fastcall OTInstallNotifier(ProviderRef ref, OTNotifyUPP proc, void *contextPtr);
SInt32 __fastcall OTIoctl(ProviderRef ref, UInt32 cmd, void *data);
Boolean __fastcall OTIsAckingSends(ProviderRef ref);
Boolean __fastcall OTIsBlocking(ProviderRef ref);
Boolean __fastcall OTIsInList(OTList *list, OTLink *link);
Boolean __fastcall OTIsSynchronous(ProviderRef ref);
OTLink *__fastcall OTLIFODequeue(OTLIFO *list);
void __fastcall OTLIFOEnqueue(OTLIFO *list, OTLink *link);
OTLink *__fastcall OTLIFOStealList(OTLIFO *list);
void __fastcall OTLeaveNotifier(ProviderRef ref);
OSStatus __fastcall OTListen(EndpointRef ref, TCall *call);
OTResult __fastcall OTLook(EndpointRef ref);
OSStatus __fastcall OTLookupName(MapperRef ref, TLookupRequest *req, TLookupReply *reply);
Boolean __fastcall OTMemcmp(const void *mem1, const void *mem2, OTByteCount nBytes);
void __fastcall OTMemcpy(void *dest, const void *src, OTByteCount nBytes);
void __fastcall OTMemmove(void *dest, const void *src, OTByteCount nBytes);
void __fastcall OTMemset(void *dest, OTUInt8Param toSet, OTByteCount nBytes);
void __fastcall OTMemzero(void *dest, OTByteCount nBytes);
OSStatus __fastcall OTNextOption(UInt8 *buffer, UInt32 buflen, TOption **prevOptPtr);
ATSvcRef __fastcall OTOpenAppleTalkServicesInContext(OTConfigurationRef cfig, OTOpenFlags flags, OSStatus *err, OTClientContextPtr clientContext);
EndpointRef __fastcall OTOpenEndpointInContext(OTConfigurationRef config, OTOpenFlags oflag, TEndpointInfo *info, OSStatus *err, OTClientContextPtr clientContext);
InetSvcRef __fastcall OTOpenInternetServicesInContext(OTConfigurationRef cfig, OTOpenFlags oflag, OSStatus *err, OTClientContextPtr clientContext);
MapperRef __fastcall OTOpenMapperInContext(OTConfigurationRef config, OTOpenFlags oflag, OSStatus *err, OTClientContextPtr clientContext);
OSStatus __fastcall OTOptionManagement(EndpointRef ref, TOptMgmt *req, TOptMgmt *ret);
OTResult __fastcall OTRcv(EndpointRef ref, void *buf, OTByteCount nbytes, OTFlags *flags);
OSStatus __fastcall OTRcvConnect(EndpointRef ref, TCall *call);
OSStatus __fastcall OTRcvDisconnect(EndpointRef ref, TDiscon *discon);
OSStatus __fastcall OTRcvOrderlyDisconnect(EndpointRef ref);
OSStatus __fastcall OTRcvUDErr(EndpointRef ref, TUDErr *uderr);
OSStatus __fastcall OTRcvUData(EndpointRef ref, TUnitData *udata, OTFlags *flags);
Boolean __fastcall OTReadBuffer(OTBufferInfo *buffer, void *dest, OTByteCount *len);
OSStatus __fastcall OTRegisterAsClientInContext(OTClientName name, OTNotifyUPP proc, OTClientContextPtr clientContext);
OSStatus __fastcall OTRegisterName(MapperRef ref, TRegisterRequest *req, TRegisterReply *reply);
void __fastcall OTReleaseBuffer(OTBuffer *buffer);
OTLink *__fastcall OTRemoveFirst(OTList *list);
OTLink *__fastcall OTRemoveLast(OTList *list);
Boolean __fastcall OTRemoveLink(OTList *list, OTLink *link);
void __fastcall OTRemoveNotifier(ProviderRef ref);
OSStatus __fastcall OTResolveAddress(EndpointRef ref, TBind *reqAddr, TBind *retAddr, OTTimeout timeOut);
OTLink *__fastcall OTReverseList(OTLink *list);
Boolean __fastcall OTScheduleDeferredTask(OTDeferredTaskRef dtCookie);
Boolean __fastcall OTScheduleTimerTask(OTTimerTask timerTask, OTTimeout milliSeconds);
OTByteCount __fastcall OTSetAddressFromNBPEntity(UInt8 *nameBuf, const NBPEntity *entity);
OTByteCount __fastcall OTSetAddressFromNBPString(UInt8 *addrBuf, const char *name, SInt32 len);
OSStatus __fastcall OTSetAsynchronous(ProviderRef ref);
Boolean __fastcall OTSetBit(UInt8 *bitMap, OTByteCount bitNo);
OSStatus __fastcall OTSetBlocking(ProviderRef ref);
OTPortRef __fastcall OTSetBusTypeInPortRef(OTPortRef ref, OTBusType busType);
OTPortRef __fastcall OTSetDeviceTypeInPortRef(OTPortRef ref, OTDeviceType devType);
OTResult __fastcall OTSetFirstClearBit(UInt8 *bitMap, OTByteCount startBit, OTByteCount numBits);
Boolean __fastcall OTSetNBPEntityFromAddress(NBPEntity *entity, const UInt8 *addrBuf, OTByteCount len);
Boolean __fastcall OTSetNBPName(NBPEntity *entity, const char *name);
Boolean __fastcall OTSetNBPType(NBPEntity *entity, const char *typeVal);
Boolean __fastcall OTSetNBPZone(NBPEntity *entity, const char *zone);
OSStatus __fastcall OTSetNonBlocking(ProviderRef ref);
OSStatus __fastcall OTSetSynchronous(ProviderRef ref);
OTResult __fastcall OTSnd(EndpointRef ref, void *buf, OTByteCount nbytes, OTFlags flags);
OSStatus __fastcall OTSndDisconnect(EndpointRef ref, TCall *call);
OSStatus __fastcall OTSndOrderlyDisconnect(EndpointRef ref);
OSStatus __fastcall OTSndUData(EndpointRef ref, TUnitData *udata);
void __fastcall OTStrCat(char *dest, const char *src);
void __fastcall OTStrCopy(char *dest, const char *src);
Boolean __fastcall OTStrEqual(const char *src1, const char *src2);
OTByteCount __fastcall OTStrLength(const char *str);
OTTimeStamp *__fastcall OTSubtractTimeStamps(OTTimeStamp *result, OTTimeStamp *startTime, OTTimeStamp *endEnd);
Boolean __fastcall OTTestBit(UInt8 *bitMap, OTByteCount bitNo);
UInt32 __fastcall OTTimeStampInMicroseconds(OTTimeStamp *delta);
UInt32 __fastcall OTTimeStampInMilliseconds(OTTimeStamp *delta);
OSStatus __fastcall OTUnbind(EndpointRef ref);
OSStatus __fastcall OTUnregisterAsClientInContext(OTClientContextPtr clientContext);
OSStatus __fastcall OTUseSyncIdleEvents(ProviderRef ref, Boolean useEvents);
void ObscureCursor(void);
int OffscreenVersion(void);
void __fastcall OffsetPoly(PolyHandle poly, __int16 dh, __int16 dv);
void __fastcall OffsetRect(Rect *r, __int16 dh, __int16 dv);
void __fastcall OffsetRgn(RgnHandle rgn, __int16 dh, __int16 dv);
void __fastcall OpColor(const RGBColor *color);
OSErr __fastcall OpenAComponent(Component aComponent, ComponentInstance *ci);
OSErr __fastcall OpenAComponentResFile(Component aComponent, __int16 *resRef);
OSErr __fastcall OpenADefaultComponent(OSType componentType, OSType componentSubType, ComponentInstance *ci);
PicHandle __fastcall OpenCPicture(const OpenCPicParams *newHeader);
ComponentInstance __fastcall OpenComponent(Component aComponent);
__int16 __fastcall OpenComponentResFile(Component aComponent);
OSErr __fastcall OpenCursorComponent(Component c, ComponentInstance *ci);
OSStatus __fastcall OpenDataBrowserContainer(ControlRef browser, DataBrowserItemID container);
ComponentInstance __fastcall OpenDefaultComponent(OSType componentType, OSType componentSubType);
OSStatus __fastcall OpenDrawer(WindowRef inDrawerWindow, OptionBits inEdge, Boolean inAsync);
OSErr __fastcall OpenMixerSoundComponent(SoundComponentDataPtr outputDescription, int outputFlags, ComponentInstance *mixerComponent);
PicHandle __fastcall OpenPicture(const Rect *picFrame);
PolyHandle OpenPoly(void);
__int16 __fastcall OpenRFPerm(ConstStr255Param fileName, __int16 vRefNum, SInt8 permission);
void OpenRgn(void);
OSErr __fastcall OpenTextService(TSMDocumentID idocID, Component aComponent, ComponentInstance *aComponentInstance);
OSErr __fastcall OutlineMetrics(__int16 byteCount, const void *textPtr, Point numer, Point denom, __int16 *yMax, __int16 *yMin, FixedPtr awArray, FixedPtr lsbArray, RectPtr boundsArray);
OSStatus __fastcall OverlayApplicationDockTileImage(CGImageRef inImage);
OSErr __fastcall OverrideIconRef(IconRef oldIconRef, IconRef newIconRef);
OSErr __fastcall OverrideIconRefFromResource(IconRef theIconRef, const FSSpec *resourceFile, SInt16 resourceID);
MACRO__A _P;
OSErr __fastcall PBAllocContigAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBAllocContigSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBAllocateAsync(ParmBlkPtr paramBlock);
void __fastcall PBAllocateForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBAllocateForkSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBAllocateSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBCatMoveAsync(CMovePBPtr paramBlock);
OSErr __fastcall PBCatMoveSync(CMovePBPtr paramBlock);
OSErr __fastcall PBCatSearchAsync(CSParamPtr paramBlock);
OSErr __fastcall PBCatSearchSync(CSParamPtr paramBlock);
void __fastcall PBCatalogSearchAsync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBCatalogSearchSync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBCloseAsync(ParmBlkPtr paramBlock);
void __fastcall PBCloseForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBCloseForkSync(FSForkIOParam *paramBlock);
void __fastcall PBCloseIteratorAsync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBCloseIteratorSync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBCloseSync(ParmBlkPtr paramBlock);
void __fastcall PBCompareFSRefsAsync(FSRefParam *paramBlock);
OSErr __fastcall PBCompareFSRefsSync(FSRefParam *paramBlock);
void __fastcall PBCreateDirectoryUnicodeAsync(FSRefParam *paramBlock);
OSErr __fastcall PBCreateDirectoryUnicodeSync(FSRefParam *paramBlock);
OSErr __fastcall PBCreateFileIDRefAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBCreateFileIDRefSync(HParmBlkPtr paramBlock);
void __fastcall PBCreateFileUnicodeAsync(FSRefParam *paramBlock);
OSErr __fastcall PBCreateFileUnicodeSync(FSRefParam *paramBlock);
void __fastcall PBCreateForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBCreateForkSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBDTAddAPPLAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTAddAPPLSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTAddIconAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTAddIconSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTCloseDown(DTPBPtr paramBlock);
OSErr __fastcall PBDTDeleteAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTDeleteSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTFlushAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTFlushSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetAPPLAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetAPPLSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetCommentAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetCommentSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetIconAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetIconInfoAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetIconInfoSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetIconSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetInfoAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetInfoSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTGetPath(DTPBPtr paramBlock);
OSErr __fastcall PBDTOpenInform(DTPBPtr paramBlock);
OSErr __fastcall PBDTRemoveAPPLAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTRemoveAPPLSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTRemoveCommentAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTRemoveCommentSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTResetAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTResetSync(DTPBPtr paramBlock);
OSErr __fastcall PBDTSetCommentAsync(DTPBPtr paramBlock);
OSErr __fastcall PBDTSetCommentSync(DTPBPtr paramBlock);
OSErr __fastcall PBDeleteFileIDRefAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBDeleteFileIDRefSync(HParmBlkPtr paramBlock);
void __fastcall PBDeleteForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBDeleteForkSync(FSForkIOParam *paramBlock);
void __fastcall PBDeleteObjectAsync(FSRefParam *paramBlock);
OSErr __fastcall PBDeleteObjectSync(FSRefParam *paramBlock);
OSErr __fastcall PBDirCreateAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBDirCreateSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBExchangeFilesAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBExchangeFilesSync(HParmBlkPtr paramBlock);
void __fastcall PBExchangeObjectsAsync(FSRefParam *paramBlock);
OSErr __fastcall PBExchangeObjectsSync(FSRefParam *paramBlock);
OSErr __fastcall PBFlushFileAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBFlushFileSync(ParmBlkPtr paramBlock);
void __fastcall PBFlushForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBFlushForkSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBFlushVolAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBFlushVolSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBGetCatInfoAsync(CInfoPBPtr paramBlock);
OSErr __fastcall PBGetCatInfoSync(CInfoPBPtr paramBlock);
void __fastcall PBGetCatalogInfoAsync(FSRefParam *paramBlock);
void __fastcall PBGetCatalogInfoBulkAsync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBGetCatalogInfoBulkSync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBGetCatalogInfoSync(FSRefParam *paramBlock);
OSErr __fastcall PBGetEOFAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBGetEOFSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBGetFCBInfoAsync(FCBPBPtr paramBlock);
OSErr __fastcall PBGetFCBInfoSync(FCBPBPtr paramBlock);
OSErr __fastcall PBGetFPosAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBGetFPosSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBGetForeignPrivsAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBGetForeignPrivsSync(HParmBlkPtr paramBlock);
void __fastcall PBGetForkCBInfoAsync(FSForkCBInfoParam *paramBlock);
OSErr __fastcall PBGetForkCBInfoSync(FSForkCBInfoParam *paramBlock);
void __fastcall PBGetForkPositionAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBGetForkPositionSync(FSForkIOParam *paramBlock);
void __fastcall PBGetForkSizeAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBGetForkSizeSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBGetUGEntryAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBGetUGEntrySync(HParmBlkPtr paramBlock);
OSErr __fastcall PBGetVolMountInfo(ParmBlkPtr paramBlock);
OSErr __fastcall PBGetVolMountInfoSize(ParmBlkPtr paramBlock);
void __fastcall PBGetVolumeInfoAsync(FSVolumeInfoParam *paramBlock);
OSErr __fastcall PBGetVolumeInfoSync(FSVolumeInfoParam *paramBlock);
OSErr __fastcall PBGetXCatInfoAsync(XCInfoPBPtr paramBlock);
OSErr __fastcall PBGetXCatInfoSync(XCInfoPBPtr paramBlock);
OSErr __fastcall PBHCopyFileAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHCopyFileSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHCreateAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHCreateSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHDeleteAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHDeleteSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetDirAccessAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetDirAccessSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetFInfoAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetFInfoSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetLogInInfoAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetLogInInfoSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetVInfoAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetVInfoSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetVolAsync(WDPBPtr paramBlock);
OSErr __fastcall PBHGetVolParmsAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetVolParmsSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHGetVolSync(WDPBPtr paramBlock);
OSErr __fastcall PBHMapIDAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHMapIDSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHMapNameAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHMapNameSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHMoveRenameAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHMoveRenameSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenDFAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenDFSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenDenyAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenDenySync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenRFAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenRFDenyAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenRFDenySync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenRFSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHOpenSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHRenameAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHRenameSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHRstFLockAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHRstFLockSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetDirAccessAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetDirAccessSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetFInfoAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetFInfoSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetFLockAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetFLockSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBHSetVolAsync(WDPBPtr paramBlock);
OSErr __fastcall PBHSetVolSync(WDPBPtr paramBlock);
void __fastcall PBIterateForksAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBIterateForksSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBLockRangeAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBLockRangeSync(ParmBlkPtr paramBlock);
void __fastcall PBMakeFSRefAsync(FSRefParam *paramBlock);
OSErr __fastcall PBMakeFSRefSync(FSRefParam *paramBlock);
void __fastcall PBMakeFSRefUnicodeAsync(FSRefParam *paramBlock);
OSErr __fastcall PBMakeFSRefUnicodeSync(FSRefParam *paramBlock);
OSErr __fastcall PBMakeFSSpecAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBMakeFSSpecSync(HParmBlkPtr paramBlock);
void __fastcall PBMoveObjectAsync(FSRefParam *paramBlock);
OSErr __fastcall PBMoveObjectSync(FSRefParam *paramBlock);
void __fastcall PBOpenForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBOpenForkSync(FSForkIOParam *paramBlock);
void __fastcall PBOpenIteratorAsync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBOpenIteratorSync(FSCatalogBulkParam *paramBlock);
OSErr __fastcall PBReadAsync(ParmBlkPtr paramBlock);
void __fastcall PBReadForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBReadForkSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBReadSync(ParmBlkPtr paramBlock);
void __fastcall PBRenameUnicodeAsync(FSRefParam *paramBlock);
OSErr __fastcall PBRenameUnicodeSync(FSRefParam *paramBlock);
OSErr __fastcall PBResolveFileIDRefAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBResolveFileIDRefSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBSetCatInfoAsync(CInfoPBPtr paramBlock);
OSErr __fastcall PBSetCatInfoSync(CInfoPBPtr paramBlock);
void __fastcall PBSetCatalogInfoAsync(FSRefParam *paramBlock);
OSErr __fastcall PBSetCatalogInfoSync(FSRefParam *paramBlock);
OSErr __fastcall PBSetEOFAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBSetEOFSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBSetFPosAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBSetFPosSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBSetForeignPrivsAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBSetForeignPrivsSync(HParmBlkPtr paramBlock);
void __fastcall PBSetForkPositionAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBSetForkPositionSync(FSForkIOParam *paramBlock);
void __fastcall PBSetForkSizeAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBSetForkSizeSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBSetVInfoAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBSetVInfoSync(HParmBlkPtr paramBlock);
void __fastcall PBSetVolumeInfoAsync(FSVolumeInfoParam *paramBlock);
OSErr __fastcall PBSetVolumeInfoSync(FSVolumeInfoParam *paramBlock);
OSErr __fastcall PBShareAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBShareSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBUnlockRangeAsync(ParmBlkPtr paramBlock);
OSErr __fastcall PBUnlockRangeSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBUnmountVol(ParmBlkPtr paramBlock);
OSErr __fastcall PBUnshareAsync(HParmBlkPtr paramBlock);
OSErr __fastcall PBUnshareSync(HParmBlkPtr paramBlock);
OSErr __fastcall PBVolumeMount(ParmBlkPtr paramBlock);
OSErr __fastcall PBWaitIOComplete(ParmBlkPtr paramBlock, Duration timeout);
OSErr __fastcall PBWriteAsync(ParmBlkPtr paramBlock);
void __fastcall PBWriteForkAsync(FSForkIOParam *paramBlock);
OSErr __fastcall PBWriteForkSync(FSForkIOParam *paramBlock);
OSErr __fastcall PBWriteSync(ParmBlkPtr paramBlock);
OSErr __fastcall PBXGetVolInfoAsync(XVolumeParamPtr paramBlock);
OSErr __fastcall PBXGetVolInfoSync(XVolumeParamPtr paramBlock);
__int16 __fastcall PLpos(ConstStr255Param str1, ConstStr255Param str2);
StringPtr __fastcall PLstrcat(StringPtr str1, ConstStr255Param str2);
Ptr __fastcall PLstrchr(ConstStr255Param str1, __int16 ch1);
__int16 __fastcall PLstrcmp(ConstStr255Param str1, ConstStr255Param str2);
StringPtr __fastcall PLstrcpy(StringPtr str1, ConstStr255Param str2);
__int16 __fastcall PLstrlen(ConstStr255Param str);
StringPtr __fastcall PLstrncat(StringPtr str1, ConstStr255Param str2, __int16 num);
__int16 __fastcall PLstrncmp(ConstStr255Param str1, ConstStr255Param str2, __int16 num);
StringPtr __fastcall PLstrncpy(StringPtr str1, ConstStr255Param str2, __int16 num);
Ptr __fastcall PLstrpbrk(ConstStr255Param str1, ConstStr255Param str2);
Ptr __fastcall PLstrrchr(ConstStr255Param str1, __int16 ch1);
__int16 __fastcall PLstrspn(ConstStr255Param str1, ConstStr255Param str2);
Ptr __fastcall PLstrstr(ConstStr255Param str1, ConstStr255Param str2);
CGImageRef __fastcall PMCGImageCreateWithEPSDataProvider(CGDataProviderRef epsDataProvider, CGImageRef epsPreview);
OSStatus __fastcall PMCopyPageFormat(PMPageFormat formatSrc, PMPageFormat formatDest);
OSStatus __fastcall PMCopyPrintSettings(PMPrintSettings settingSrc, PMPrintSettings settingDest);
OSStatus __fastcall PMCreatePageFormat(PMPageFormat *pageFormat);
OSStatus __fastcall PMCreatePrintSettings(PMPrintSettings *printSettings);
OSStatus __fastcall PMCreateSession(PMPrintSession *printSession);
UInt32 PMFeatures(void);
OSStatus __fastcall PMFlattenPageFormat(PMPageFormat pageFormat, Handle *flatFormat);
OSStatus __fastcall PMFlattenPrintSettings(PMPrintSettings printSettings, Handle *flatSettings);
OSStatus __fastcall PMGetAdjustedPageRect(PMPageFormat pageFormat, PMRect *pageRect);
OSStatus __fastcall PMGetAdjustedPaperRect(PMPageFormat pageFormat, PMRect *paperRect);
OSStatus __fastcall PMGetCollate(PMPrintSettings printSettings, Boolean *collate);
OSStatus __fastcall PMGetColorMode(PMPrintSettings printSettings, PMColorMode *colorMode);
OSStatus __fastcall PMGetCopies(PMPrintSettings printSettings, UInt32 *copies);
OSStatus __fastcall PMGetDestination(PMPrintSettings printSettings, PMDestinationType *destType, CFURLRef *fileURL);
OSStatus __fastcall PMGetDialogAccepted(PMDialog pmDialog, Boolean *process);
OSStatus __fastcall PMGetDialogDone(PMDialog pmDialog, Boolean *done);
OSStatus __fastcall PMGetDialogPtr(PMDialog pmDialog, DialogRef *theDialog);
OSStatus __fastcall PMGetFirstPage(PMPrintSettings printSettings, UInt32 *first);
OSStatus __fastcall PMGetItemProc(PMDialog pmDialog, PMItemUPP *itemProc);
OSStatus __fastcall PMGetJobName(PMPrintSettings printSettings, StringPtr name);
OSStatus __fastcall PMGetJobNameCFString(PMPrintSettings printSettings, CFStringRef *name);
OSStatus __fastcall PMGetLastPage(PMPrintSettings printSettings, UInt32 *last);
OSStatus __fastcall PMGetModalFilterProc(PMDialog pmDialog, ModalFilterUPP *filterProc);
OSStatus __fastcall PMGetOrientation(PMPageFormat pageFormat, PMOrientation *orientation);
OSStatus __fastcall PMGetPageFormatExtendedData(PMPageFormat pageFormat, OSType dataID, UInt32 *size, void *extendedData);
OSStatus __fastcall PMGetPageRange(PMPrintSettings printSettings, UInt32 *minPage, UInt32 *maxPage);
OSStatus __fastcall PMGetPhysicalPageSize(PMPageFormat pageFormat, PMRect *pageSize);
OSStatus __fastcall PMGetPhysicalPaperSize(PMPageFormat pageFormat, PMRect *paperSize);
OSStatus __fastcall PMGetPrintSettingsExtendedData(PMPrintSettings printSettings, OSType dataID, UInt32 *size, void *extendedData);
OSStatus __fastcall PMGetResolution(PMPageFormat pageFormat, PMResolution *res);
OSStatus __fastcall PMGetScale(PMPageFormat pageFormat, double *scale);
OSStatus __fastcall PMGetUnadjustedPageRect(PMPageFormat pageFormat, PMRect *pageRect);
OSStatus __fastcall PMGetUnadjustedPaperRect(PMPageFormat pageFormat, PMRect *paperRect);
OSStatus __fastcall PMPrinterGetDescriptionURL(PMPrinter printer, CFStringRef descriptionType, CFURLRef *fileURL);
OSStatus __fastcall PMPrinterGetDeviceURI(PMPrinter printer, CFURLRef *deviceURI);
OSStatus __fastcall PMPrinterGetDriverCreator(PMPrinter printer, OSType *creator);
OSStatus __fastcall PMPrinterGetDriverReleaseInfo(PMPrinter printer, VersRec *release);
CFStringRef __fastcall PMPrinterGetID(PMPrinter printer);
OSStatus __fastcall PMPrinterGetIndexedPrinterResolution(PMPrinter printer, UInt32 index, PMResolution *res);
OSStatus __fastcall PMPrinterGetLanguageInfo(PMPrinter printer, PMLanguageInfo *info);
CFStringRef __fastcall PMPrinterGetLocation(PMPrinter printer);
OSStatus __fastcall PMPrinterGetMakeAndModelName(PMPrinter printer, CFStringRef *makeAndModel);
CFStringRef __fastcall PMPrinterGetName(PMPrinter printer);
OSStatus __fastcall PMPrinterGetPrinterResolution(PMPrinter printer, PMTag tag, PMResolution *res);
OSStatus __fastcall PMPrinterGetPrinterResolutionCount(PMPrinter printer, UInt32 *count);
OSStatus __fastcall PMPrinterGetState(PMPrinter printer, PMPrinterState *state);
Boolean __fastcall PMPrinterIsDefault(PMPrinter printer);
Boolean __fastcall PMPrinterIsFavorite(PMPrinter printer);
Boolean __fastcall PMPrinterIsPostScriptCapable(PMPrinter printer);
OSStatus __fastcall PMRelease(PMObject object);
OSStatus __fastcall PMRetain(PMObject object);
__int16 PMSelectorCount(void);
OSStatus __fastcall PMServerCreatePrinterList(PMServer server, CFArrayRef *printerList);
OSStatus __fastcall PMSessionBeginDocument(PMPrintSession printSession, PMPrintSettings printSettings, PMPageFormat pageFormat);
OSStatus __fastcall PMSessionBeginDocumentNoDialog(PMPrintSession printSession, PMPrintSettings printSettings, PMPageFormat pageFormat);
OSStatus __fastcall PMSessionBeginPage(PMPrintSession printSession, PMPageFormat pageFormat, const PMRect *pageFrame);
OSStatus __fastcall PMSessionBeginPageNoDialog(PMPrintSession printSession, PMPageFormat pageFormat, const PMRect *pageFrame);
OSStatus __fastcall PMSessionConvertOldPrintRecord(PMPrintSession printSession, Handle printRecordHandle, PMPrintSettings *printSettings, PMPageFormat *pageFormat);
OSStatus __fastcall PMSessionCopyDestinationFormat(PMPrintSession printSession, PMPrintSettings printSettings, CFStringRef *destFormatP);
OSStatus __fastcall PMSessionCopyDestinationLocation(PMPrintSession printSession, PMPrintSettings printSettings, CFURLRef *destLocationP);
OSStatus __fastcall PMSessionCopyOutputFormatList(PMPrintSession printSession, PMDestinationType destType, CFArrayRef *documentFormatP);
OSStatus __fastcall PMSessionCreatePageFormatList(PMPrintSession printSession, PMPrinter printer, CFArrayRef *pageFormatList);
OSStatus __fastcall PMSessionCreatePrinterList(PMPrintSession printSession, CFArrayRef *printerList, CFIndex *currentIndex, PMPrinter *currentPrinter);
OSStatus __fastcall PMSessionDefaultPageFormat(PMPrintSession printSession, PMPageFormat pageFormat);
OSStatus __fastcall PMSessionDefaultPrintSettings(PMPrintSession printSession, PMPrintSettings printSettings);
OSStatus __fastcall PMSessionDisableColorSync(PMPrintSession printSession);
OSStatus __fastcall PMSessionDisablePrinterPresets(PMPrintSession session);
OSStatus __fastcall PMSessionEnableColorSync(PMPrintSession printSession);
OSStatus __fastcall PMSessionEnablePrinterPresets(PMPrintSession session, CFStringRef graphicsType);
OSStatus __fastcall PMSessionEndDocument(PMPrintSession printSession);
OSStatus __fastcall PMSessionEndDocumentNoDialog(PMPrintSession printSession);
OSStatus __fastcall PMSessionEndPage(PMPrintSession printSession);
OSStatus __fastcall PMSessionEndPageNoDialog(PMPrintSession printSession);
OSStatus __fastcall PMSessionError(PMPrintSession printSession);
OSStatus __fastcall PMSessionGeneral(PMPrintSession printSession, Ptr pData);
OSStatus __fastcall PMSessionGetCurrentPrinter(PMPrintSession printSession, PMPrinter *currentPrinter);
OSStatus __fastcall PMSessionGetDataFromSession(PMPrintSession printSession, CFStringRef key, CFTypeRef *data);
OSStatus __fastcall PMSessionGetDestinationType(PMPrintSession printSession, PMPrintSettings printSettings, PMDestinationType *destTypeP);
OSStatus __fastcall PMSessionGetDocumentFormatGeneration(PMPrintSession printSession, CFArrayRef *docFormats);
OSStatus __fastcall PMSessionGetDocumentFormatSupported(PMPrintSession printSession, CFArrayRef *docFormats, UInt32 limit);
OSStatus __fastcall PMSessionGetGraphicsContext(PMPrintSession printSession, CFStringRef graphicsContextType, void **graphicsContext);
OSStatus __fastcall PMSessionIsDocumentFormatSupported(PMPrintSession printSession, CFStringRef docFormat, Boolean *supported);
OSStatus __fastcall PMSessionMakeOldPrintRecord(PMPrintSession printSession, PMPrintSettings printSettings, PMPageFormat pageFormat, Handle *printRecordHandle);
OSStatus __fastcall PMSessionPageSetupDialog(PMPrintSession printSession, PMPageFormat pageFormat, Boolean *accepted);
OSStatus __fastcall PMSessionPageSetupDialogInit(PMPrintSession printSession, PMPageFormat pageFormat, PMDialog *newDialog);
OSStatus __fastcall PMSessionPageSetupDialogMain(PMPrintSession printSession, PMPageFormat pageFormat, Boolean *accepted, PMPageSetupDialogInitUPP myInitProc);
OSStatus __fastcall PMSessionPostScriptBegin(PMPrintSession printSession);
OSStatus __fastcall PMSessionPostScriptData(PMPrintSession printSession, Ptr psPtr, Size len);
OSStatus __fastcall PMSessionPostScriptEnd(PMPrintSession printSession);
OSStatus __fastcall PMSessionPostScriptFile(PMPrintSession printSession, FSSpec *psFile);
OSStatus __fastcall PMSessionPostScriptHandle(PMPrintSession printSession, Handle psHandle);
OSStatus __fastcall PMSessionPrintDialog(PMPrintSession printSession, PMPrintSettings printSettings, PMPageFormat constPageFormat, Boolean *accepted);
OSStatus __fastcall PMSessionPrintDialogInit(PMPrintSession printSession, PMPrintSettings printSettings, PMPageFormat constPageFormat, PMDialog *newDialog);
OSStatus __fastcall PMSessionPrintDialogMain(PMPrintSession printSession, PMPrintSettings printSettings, PMPageFormat constPageFormat, Boolean *accepted, PMPrintDialogInitUPP myInitProc);
OSStatus __fastcall PMSessionSetCurrentPrinter(PMPrintSession session, CFStringRef printerName);
OSStatus __fastcall PMSessionSetDataInSession(PMPrintSession printSession, CFStringRef key, CFTypeRef data);
OSStatus __fastcall PMSessionSetDestination(PMPrintSession printSession, PMPrintSettings printSettings, PMDestinationType destType, CFStringRef destFormat, CFURLRef destLocation);
OSStatus __fastcall PMSessionSetDocumentFormatGeneration(PMPrintSession printSession, CFStringRef docFormat, CFArrayRef graphicsContextTypes, CFTypeRef options);
OSStatus __fastcall PMSessionSetError(PMPrintSession printSession, OSStatus printError);
OSStatus __fastcall PMSessionSetIdleProc(PMPrintSession printSession, PMIdleUPP idleProc);
OSStatus __fastcall PMSessionSetPSInjectionData(PMPrintSession printSession, PMPrintSettings printSettings, CFArrayRef injectionDictArray);
OSStatus __fastcall PMSessionUseSheets(PMPrintSession printSession, WindowRef documentWindow, PMSheetDoneUPP sheetDoneProc);
OSStatus __fastcall PMSessionValidatePageFormat(PMPrintSession printSession, PMPageFormat pageFormat, Boolean *result);
OSStatus __fastcall PMSessionValidatePrintSettings(PMPrintSession printSession, PMPrintSettings printSettings, Boolean *result);
OSStatus __fastcall PMSetAdjustedPageRect(PMPageFormat pageFormat, const PMRect *pageRect);
OSStatus __fastcall PMSetCollate(PMPrintSettings printSettings, Boolean collate);
OSStatus __fastcall PMSetColorMode(PMPrintSettings printSettings, PMColorMode colorMode);
OSStatus __fastcall PMSetCopies(PMPrintSettings printSettings, UInt32 copies, Boolean lock);
OSStatus __fastcall PMSetDialogAccepted(PMDialog pmDialog, Boolean process);
OSStatus __fastcall PMSetDialogDone(PMDialog pmDialog, Boolean done);
OSStatus __fastcall PMSetFirstPage(PMPrintSettings printSettings, UInt32 first, Boolean lock);
OSStatus __fastcall PMSetItemProc(PMDialog pmDialog, PMItemUPP itemProc);
OSStatus __fastcall PMSetJobName(PMPrintSettings printSettings, StringPtr name);
OSStatus __fastcall PMSetJobNameCFString(PMPrintSettings printSettings, CFStringRef name);
OSStatus __fastcall PMSetLastPage(PMPrintSettings printSettings, UInt32 last, Boolean lock);
OSStatus __fastcall PMSetModalFilterProc(PMDialog pmDialog, ModalFilterUPP filterProc);
OSStatus __fastcall PMSetOrientation(PMPageFormat pageFormat, PMOrientation orientation, Boolean lock);
OSStatus __fastcall PMSetPageFormatExtendedData(PMPageFormat pageFormat, OSType dataID, UInt32 size, void *extendedData);
OSStatus __fastcall PMSetPageRange(PMPrintSettings printSettings, UInt32 minPage, UInt32 maxPage);
OSStatus __fastcall PMSetPhysicalPaperSize(PMPageFormat pageFormat, const PMRect *paperSize);
OSStatus __fastcall PMSetPrintSettingsExtendedData(PMPrintSettings printSettings, OSType dataID, UInt32 size, void *extendedData);
OSStatus __fastcall PMSetProfile(PMPrintSettings printSettings, PMTag tag, const CMProfileLocation *profile);
OSStatus __fastcall PMSetResolution(PMPageFormat pageFormat, const PMResolution *res);
OSStatus __fastcall PMSetScale(PMPageFormat pageFormat, double scale);
OSStatus __fastcall PMSetUnadjustedPaperRect(PMPageFormat pageFormat, const PMRect *paperRect);
OSStatus __fastcall PMUnflattenPageFormat(Handle flatFormat, PMPageFormat *pageFormat);
OSStatus __fastcall PMUnflattenPrintSettings(Handle flatSettings, PMPrintSettings *printSettings);
OSErr __fastcall PMgrStateQInstall(PMgrQueueElement *theElement);
OSErr __fastcall PMgrStateQRemove(PMgrQueueElement *theElement);
__int16 PMgrVersion(void);
MACRO__POSIX2 _POSIX2_BC_BASE_MAX;
MACRO__POSIX2 _POSIX2_BC_DIM_MAX;
MACRO__POSIX2 _POSIX2_BC_SCALE_MAX;
MACRO__POSIX2 _POSIX2_BC_STRING_MAX;
MACRO__POSIX2 _POSIX2_COLL_WEIGHTS_MAX;
MACRO__POSIX2 _POSIX2_EQUIV_CLASS_MAX;
MACRO__POSIX2 _POSIX2_EXPR_NEST_MAX;
MACRO__POSIX2 _POSIX2_LINE_MAX;
MACRO__POSIX2 _POSIX2_RE_DUP_MAX;
MACRO_COLL _POSIX_ARG_MAX;
MACRO_COLL _POSIX_CHILD_MAX;
MACRO_COLL _POSIX_LINK_MAX;
MACRO__POSIX _POSIX_MAX_CANON;
MACRO__POSIX _POSIX_MAX_INPUT;
MACRO__POSIX _POSIX_NAME_MAX;
MACRO__POSIX POSIX_NGROUPS_MAX;
MACRO__POSIX _POSIX_OPEN_MAX;
MACRO__POSIX _POSIX_PATH_MAX;
MACRO__POSIX _POSIX_PIPE_BUF;
MACRO__POSIX _POSIX_SSIZE_MAX;
MACRO__POSIX _POSIX_STREAM_MAX;
MACRO__POSIX _POSIX_TZNAME_MAX;
MACRO__PPC _PPC_SIGNAL_;
void __fastcall PackBits(Ptr *srcPtr, Ptr *dstPtr, __int16 srcBytes);
void __fastcall PaintArc(const Rect *r, __int16 startAngle, __int16 arcAngle);
void __fastcall PaintBehind(WindowRef startWindow, RgnHandle clobberedRgn);
void __fastcall PaintOne(WindowRef window, RgnHandle clobberedRgn);
void __fastcall PaintOval(const Rect *r);
void __fastcall PaintPoly(PolyHandle poly);
void __fastcall PaintRect(const Rect *r);
void __fastcall PaintRgn(RgnHandle rgn);
void __fastcall PaintRoundRect(const Rect *r, __int16 ovalWidth, __int16 ovalHeight);
void __fastcall Palette2CTab(PaletteHandle srcPalette, CTabHandle dstCTab);
void __fastcall ParamText(ConstStr255Param param0, ConstStr255Param param1, ConstStr255Param param2, ConstStr255Param param3);
OSErr __fastcall ParseAIFFHeader(__int16 fRefNum, SoundComponentData *sndInfo, unsigned int *numFrames, unsigned int *dataOffset);
OSErr __fastcall ParseSndHeader(SndListHandle sndHandle, SoundComponentData *sndInfo, unsigned int *numFrames, unsigned int *dataOffset);
OSErr __fastcall PauseSpeechAt(SpeechChannel chan, int whereToPause);
void __fastcall PenMode(__int16 mode);
void PenNormal(void);
void __fastcall PenPat(const Pattern *pat);
void __fastcall PenPixPat(PixPatHandle pp);
void __fastcall PenSize(__int16 width, __int16 height);
void __fastcall PicComment(__int16 kind, __int16 dataSize, Handle dataHandle);
OSErr __fastcall PickColor(ColorPickerInfo *theColorInfo);
int __fastcall PinRect(const Rect *theRect, Point thePt);
Boolean __fastcall PixMap32Bit(PixMapHandle pmHandle);
void __fastcall PixPatChanged(PixPatHandle ppat);
__int16 __fastcall PixelToChar(Ptr textBuf, int textLength, Fixed slop, Fixed pixelWidth, Boolean *leadingEdge, Fixed *widthRemaining, JustStyleCode styleRunPosition, Point numer, Point denom);
OSStatus __fastcall PlayThemeSound(ThemeSoundKind kind);
void __fastcall PlotCIcon(const Rect *theRect, CIconHandle theIcon);
OSErr __fastcall PlotCIconHandle(const Rect *theRect, IconAlignmentType align, IconTransformType transform, CIconHandle theCIcon);
void __fastcall PlotIcon(const Rect *theRect, Handle theIcon);
OSErr __fastcall PlotIconHandle(const Rect *theRect, IconAlignmentType align, IconTransformType transform, Handle theIcon);
OSErr __fastcall PlotIconID(const Rect *theRect, IconAlignmentType align, IconTransformType transform, SInt16 theResID);
OSErr __fastcall PlotIconMethod(const Rect *theRect, IconAlignmentType align, IconTransformType transform, IconGetterUPP theMethod, void *yourDataPtr);
OSErr __fastcall PlotIconRef(const Rect *theRect, IconAlignmentType align, IconTransformType transform, IconServicesUsageFlags theIconServicesUsageFlags, IconRef theIconRef);
OSStatus __fastcall PlotIconRefInContext(CGContextRef inContext, const CGRect *inRect, IconAlignmentType inAlign, IconTransformType inTransform, const RGBColor *inLabelColor, PlotIconRefFlags inFlags, IconRef inIconRef);
OSErr __fastcall PlotIconSuite(const Rect *theRect, IconAlignmentType align, IconTransformType transform, IconSuiteRef theIconSuite);
OSErr __fastcall PlotSICNHandle(const Rect *theRect, IconAlignmentType align, IconTransformType transform, Handle theSICN);
void __fastcall PmBackColor(__int16 dstEntry);
void __fastcall PmForeColor(__int16 dstEntry);
int __fastcall PopUpMenuSelect(MenuRef menu, __int16 top, __int16 left, __int16 popUpItem);
void __fastcall PortChanged(GrafPtr port);
void __fastcall PortSize(__int16 width, __int16 height);
Fixed __fastcall PortionLine(Ptr textPtr, int textLen, JustStyleCode styleRunPosition, Point numer, Point denom);
OSErr __fastcall PostEvent(EventKind eventNum, UInt32 eventMsg);
OSStatus __fastcall PostEventToQueue(EventQueueRef inQueue, EventRef inEvent, EventPriority inPriority);
void __fastcall PrimeTime(QElemPtr tmTaskPtr, int count);
OSErr __fastcall PrimeTimeTask(QElemPtr tmTaskPtr, int count);
OSStatus __fastcall ProcessHICommand(const HICommand *inCommand);
CFDictionaryRef __fastcall ProcessInformationCopyDictionary(const ProcessSerialNumber *PSN, UInt32 infoToReturn);
Boolean __fastcall ProcessIsContextualMenuClient(ProcessSerialNumber *inPSN);
void __fastcall ProtectEntry(__int16 index, Boolean protect);
void __fastcall Pt2Rect(Point pt1, Point pt2, Rect *dstRect);
Boolean __fastcall PtInIconID(Point testPt, const Rect *iconRect, IconAlignmentType align, SInt16 iconID);
Boolean __fastcall PtInIconMethod(Point testPt, const Rect *iconRect, IconAlignmentType align, IconGetterUPP theMethod, void *yourDataPtr);
Boolean __fastcall PtInIconRef(const Point *testPt, const Rect *iconRect, IconAlignmentType align, IconServicesUsageFlags theIconServicesUsageFlags, IconRef theIconRef);
Boolean __fastcall PtInIconSuite(Point testPt, const Rect *iconRect, IconAlignmentType align, IconSuiteRef theIconSuite);
Boolean __fastcall PtInRect(Point pt, const Rect *r);
Boolean __fastcall PtInRgn(Point pt, RgnHandle rgn);
void __fastcall PtToAngle(const Rect *r, Point pt, __int16 *angle);
OSErr __fastcall PtrAndHand(const void *ptr1, Handle hand2, int size);
OSErr __fastcall PtrToHand(const void *srcPtr, Handle *dstHndl, int size);
OSErr __fastcall PtrToXHand(const void *srcPtr, Handle dstHndl, int size);
void __fastcall PurgeCollection(Collection c, SInt32 whichAttributes, SInt32 matchingAttributes);
void __fastcall PurgeCollectionTag(Collection c, CollectionTag tag);
void __fastcall PurgeMem(Size cbNeeded);
void __fastcall PurgeSpace(int *total, int *contig);
int PurgeSpaceContiguous(void);
int PurgeSpaceTotal(void);
OSStatus __fastcall PutScrapFlavor(ScrapRef scrap, ScrapFlavorType flavorType, ScrapFlavorFlags flavorFlags, Size flavorSize, const void *flavorData);
MACRO__A _Q;
OSStatus __fastcall QDAddRectToDirtyRegion(CGrafPtr inPort, const Rect *inBounds);
OSStatus __fastcall QDAddRegionToDirtyRegion(CGrafPtr inPort, RgnHandle inRegion);
OSStatus __fastcall QDBeginCGContext(CGrafPtr inPort, CGContextRef *outContext);
void __fastcall QDDisplayWaitCursor(Boolean forceWaitCursor);
OSStatus __fastcall QDDisposeRegionBits(QDRegionBitsRef regionBits);
Boolean __fastcall QDDone(GrafPtr port);
OSStatus __fastcall QDEndCGContext(CGrafPtr inPort, CGContextRef *inoutContext);
__int16 QDError(void);
void __fastcall QDFlushPortBuffer(CGrafPtr port, RgnHandle region);
OSStatus __fastcall QDGetDirtyRegion(CGrafPtr port, RgnHandle rgn);
void __fastcall QDGetPatternOrigin(Point *origin);
Point *__fastcall QDGlobalToLocalPoint(CGrafPtr port, Point *point);
Rect *__fastcall QDGlobalToLocalRect(CGrafPtr port, Rect *bounds);
RgnHandle __fastcall QDGlobalToLocalRegion(CGrafPtr port, RgnHandle region);
Boolean __fastcall QDIsNamedPixMapCursorRegistered(const char name[128]);
Boolean __fastcall QDIsPortBufferDirty(CGrafPtr port);
Boolean __fastcall QDIsPortBuffered(CGrafPtr port);
Point *__fastcall QDLocalToGlobalPoint(CGrafPtr port, Point *point);
Rect *__fastcall QDLocalToGlobalRect(CGrafPtr port, Rect *bounds);
RgnHandle __fastcall QDLocalToGlobalRegion(CGrafPtr port, RgnHandle region);
QDPictRef __fastcall QDPictCreateWithProvider(CGDataProviderRef provider);
QDPictRef __fastcall QDPictCreateWithURL(CFURLRef url);
OSStatus __fastcall QDPictDrawToCGContext(CGContextRef ctx, CGRect rect, QDPictRef pictRef);
CGRect __fastcall QDPictGetBounds(QDPictRef pictRef);
void __fastcall QDPictGetResolution(QDPictRef pictRef, float *xRes, float *yRes);
void __fastcall QDPictRelease(QDPictRef pictRef);
QDPictRef __fastcall QDPictRetain(QDPictRef pictRef);
OSStatus __fastcall QDRegionToRects(RgnHandle rgn, QDRegionParseDirection dir, RegionToRectsUPP proc, void *userData);
OSStatus __fastcall QDRegisterNamedPixMapCursor(PixMapHandle crsrData, PixMapHandle crsrMask, Point hotSpot, const char name[128]);
OSStatus __fastcall QDRestoreRegionBits(RgnHandle region, QDRegionBitsRef regionBits);
QDRegionBitsRef __fastcall QDSaveRegionBits(RgnHandle region);
OSStatus __fastcall QDSetCursorScale(float scale);
OSStatus __fastcall QDSetDirtyRegion(CGrafPtr port, RgnHandle rgn);
OSStatus __fastcall QDSetNamedPixMapCursor(const char name[128]);
void __fastcall QDSetPatternOrigin(Point origin);
Boolean __fastcall QDSwapPort(CGrafPtr inNewPort, CGrafPtr *outOldPort);
UInt32 __fastcall QDSwapPortTextFlags(CGrafPtr port, UInt32 newFlags);
UInt32 __fastcall QDSwapTextFlags(UInt32 newFlags);
void __fastcall QDTextBounds(__int16 byteCount, const void *textAddr, Rect *bounds);
OSStatus __fastcall QDUnregisterNamedPixMapCursur(const char name[128]);
MACRO__QUAD QUAD_HIGHWORD;
MACRO__QUAD _QUAD_LOWWORD;
OSStatus __fastcall QueryUnicodeMappings(OptionBits iFilter, ConstUnicodeMappingPtr iFindMapping, ItemCount iMaxCount, ItemCount *oActualCount, UnicodeMapping oReturnedMappings[]);
OSStatus __fastcall QuitAppModalLoopForWindow(WindowRef inWindow);
void QuitApplicationEventLoop(void);
OSStatus __fastcall QuitEventLoop(EventLoopRef inEventLoop);
MACRO__A _R;
void __fastcall RGB2CMY(const RGBColor *rColor, CMYColor *cColor);
void __fastcall RGB2HSL(const RGBColor *rColor, HSLColor *hColor);
void __fastcall RGB2HSV(const RGBColor *rColor, HSVColor *hColor);
void __fastcall RGBBackColor(const RGBColor *color);
void __fastcall RGBForeColor(const RGBColor *color);
__int16 Random(void);
OSErr __fastcall ReadDateTime(unsigned int *time);
OSErr __fastcall ReadIconFile(const FSSpec *iconFile, IconFamilyHandle *iconFamily);
OSStatus __fastcall ReadIconFromFSRef(const FSRef *ref, IconFamilyHandle *iconFamily);
void __fastcall ReadLocation(MachineLocation *loc);
void __fastcall ReadPartialResource(Handle theResource, int offset, void *buffer, int count);
Boolean __fastcall RealColor(const RGBColor *color);
Boolean __fastcall RealFont(__int16 fontNum, __int16 size);
void __fastcall ReallocateHandle(Handle h, Size byteCount);
OSStatus __fastcall ReceiveNextEvent(UInt32 inNumTypes, const EventTypeSpec *inList, EventTimeout inTimeout, Boolean inPullEvent, EventRef *outEvent);
OSErr __fastcall RecordPictInfo(PictInfoID thePictInfoID, PicHandle thePictHandle);
OSErr __fastcall RecordPixMapInfo(PictInfoID thePictInfoID, PixMapHandle thePixMapHandle);
Handle __fastcall RecoverHandle(Ptr p);
Boolean __fastcall RectInIconID(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, SInt16 iconID);
Boolean __fastcall RectInIconMethod(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, IconGetterUPP theMethod, void *yourDataPtr);
Boolean __fastcall RectInIconRef(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, IconServicesUsageFlags iconServicesUsageFlags, IconRef theIconRef);
Boolean __fastcall RectInIconSuite(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, IconSuiteRef theIconSuite);
Boolean __fastcall RectInRgn(const Rect *r, RgnHandle rgn);
void __fastcall RectRgn(RgnHandle rgn, const Rect *r);
OSStatus RegisterAppearanceClient(void);
Component __fastcall RegisterComponent(ComponentDescription *cd, ComponentRoutineUPP componentEntryPoint, __int16 global, Handle componentName, Handle componentInfo, Handle componentIcon);
OSErr __fastcall RegisterComponentFile(const FSSpec *spec, __int16 global);
OSErr __fastcall RegisterComponentFileEntries(const FSSpec *spec, __int16 global, const ComponentDescription *toRegister, UInt32 registerCount);
OSErr __fastcall RegisterComponentFileRef(const FSRef *ref, __int16 global);
OSErr __fastcall RegisterComponentFileRefEntries(const FSRef *ref, __int16 global, const ComponentDescription *toRegister, UInt32 registerCount);
Component __fastcall RegisterComponentResource(ComponentResourceHandle cr, __int16 global);
int __fastcall RegisterComponentResourceFile(__int16 resRefNum, __int16 global);
OSStatus __fastcall RegisterControlDefinition(SInt16 inCDEFResID, const ControlDefSpec *inControlDef, ControlCNTLToCollectionUPP inConversionProc);
OSStatus __fastcall RegisterEventHotKey(UInt32 inHotKeyCode, UInt32 inHotKeyModifiers, EventHotKeyID inHotKeyID, EventTargetRef inTarget, OptionBits inOptions, EventHotKeyRef *outRef);
OSStatus __fastcall RegisterIconRefFromFSRef(OSType creator, OSType iconType, const FSRef *iconFile, IconRef *theIconRef);
OSErr __fastcall RegisterIconRefFromIconFamily(OSType creator, OSType iconType, IconFamilyHandle iconFamily, IconRef *theIconRef);
OSErr __fastcall RegisterIconRefFromIconFile(OSType creator, OSType iconType, const FSSpec *iconFile, IconRef *theIconRef);
OSErr __fastcall RegisterIconRefFromResource(OSType creator, OSType iconType, const FSSpec *resourceFile, SInt16 resourceID, IconRef *theIconRef);
OSStatus __fastcall RegisterListDefinition(SInt16 inResID, ListDefSpecPtr inDefSpec);
OSStatus __fastcall RegisterMenuDefinition(SInt16 inResID, MenuDefSpecPtr inDefSpec);
OSStatus __fastcall RegisterToolboxObjectClass(CFStringRef inClassID, ToolboxObjectClassRef inBaseClass, UInt32 inNumEvents, const EventTypeSpec *inEventList, EventHandlerUPP inEventHandler, void *inEventHandlerData, ToolboxObjectClassRef *outClassRef);
OSStatus __fastcall RegisterWindowDefinition(SInt16 inResID, const WindowDefSpec *inDefSpec);
__int16 __fastcall RelString(ConstStr255Param str1, ConstStr255Param str2, Boolean caseSensitive, Boolean diacSensitive);
OSStatus __fastcall ReleaseCollection(Collection c);
void __fastcall ReleaseEvent(EventRef inEvent);
OSErr __fastcall ReleaseFolder(__int16 vRefNum, OSType folderType);
OSErr __fastcall ReleaseIconRef(IconRef theIconRef);
OSErr __fastcall ReleaseMemoryData(void *address, unsigned int count);
OSStatus __fastcall ReleaseMenu(MenuRef inMenu);
OSStatus __fastcall ReleaseMouseTrackingRegion(MouseTrackingRef inMouseRef);
OSStatus __fastcall ReleaseQDContextForCollapsedWindowDockTile(WindowRef inWindow, CGrafPtr inContext);
void __fastcall ReleaseResource(Handle theResource);
OSStatus __fastcall ReleaseWindow(WindowRef inWindow);
OSStatus __fastcall ReleaseWindowGroup(WindowGroupRef inGroup);
OSStatus __fastcall ReleaseWindowMouseTrackingRegions(WindowRef inWindow, OSType inSignature);
OSErr __fastcall RemoveCollectionItem(Collection c, CollectionTag tag, SInt32 id);
OSStatus __fastcall RemoveControlProperty(ControlRef control, OSType propertyCreator, OSType propertyTag);
OSStatus __fastcall RemoveDataBrowserItems(ControlRef browser, DataBrowserItemID container, UInt32 numItems, const DataBrowserItemID *items, DataBrowserPropertyID preSortProperty);
OSStatus __fastcall RemoveDataBrowserTableViewColumn(ControlRef browser, DataBrowserTableViewColumnID column);
OSStatus __fastcall RemoveDialogItems(DialogRef theDialog, DialogItemIndex itemNo, DialogItemIndex amountToRemove, Boolean disposeItemData);
OSStatus __fastcall RemoveEventFromQueue(EventQueueRef inQueue, EventRef inEvent);
OSStatus __fastcall RemoveEventHandler(EventHandlerRef inHandlerRef);
OSStatus __fastcall RemoveEventLoopTimer(EventLoopTimerRef inTimer);
OSStatus __fastcall RemoveEventTypesFromHandler(EventHandlerRef inHandlerRef, UInt32 inNumTypes, const EventTypeSpec *inList);
OSErr __fastcall RemoveFolderDescriptor(FolderType foldType);
OSErr __fastcall RemoveFolderRouting(OSType fileType, FolderType routeFromFolder);
OSErr __fastcall RemoveIconRefOverride(IconRef theIconRef);
OSErr __fastcall RemoveIndexedCollectionItem(Collection c, SInt32 index);
OSStatus __fastcall RemoveMenuCommandProperty(MenuRef inMenu, MenuCommand inCommandID, OSType inPropertyCreator, OSType inPropertyTag);
OSStatus __fastcall RemoveMenuItemProperty(MenuRef menu, MenuItemIndex item, OSType propertyCreator, OSType propertyTag);
OSErr __fastcall RemoveReceiveHandler(DragReceiveHandlerUPP receiveHandler, WindowRef theWindow);
void __fastcall RemoveResource(Handle theResource);
OSErr __fastcall RemoveTimeTask(QElemPtr tmTaskPtr);
OSErr __fastcall RemoveTrackingHandler(DragTrackingHandlerUPP trackingHandler, WindowRef theWindow);
OSStatus __fastcall RemoveWindowProperty(WindowRef window, PropertyCreator propertyCreator, PropertyTag propertyTag);
OSStatus __fastcall RemoveWindowProxy(WindowRef window);
OSErr __fastcall ReplaceGestalt(OSType selector, SelectorFunctionUPP gestaltFunction, SelectorFunctionUPP *oldGestaltFunction);
OSErr __fastcall ReplaceGestaltValue(OSType selector, int replacementValue);
OSErr __fastcall ReplaceIndexedCollectionItem(Collection c, SInt32 index, SInt32 itemSize, const void *itemData);
OSErr __fastcall ReplaceIndexedCollectionItemHdl(Collection aCollection, SInt32 index, Handle itemData);
__int16 __fastcall ReplaceText(Handle baseText, Handle substitutionText, Str15 key);
OSStatus __fastcall RepositionWindow(WindowRef window, WindowRef parentWindow, WindowPositionMethod method);
OSErr ResError(void);
void __fastcall ReserveEntry(__int16 index, Boolean reserve);
void __fastcall ReserveMem(Size cbNeeded);
void ResetAlertStage(void);
OSStatus __fastcall ResetTextToUnicodeInfo(TextToUnicodeInfo ioTextToUnicodeInfo);
OSStatus __fastcall ResetUnicodeToTextInfo(UnicodeToTextInfo ioUnicodeToTextInfo);
OSStatus __fastcall ResetUnicodeToTextRunInfo(UnicodeToTextRunInfo ioUnicodeToTextRunInfo);
OSStatus __fastcall ReshapeCustomWindow(WindowRef window);
void __fastcall ResizePalette(PaletteHandle p, __int16 size);
Boolean __fastcall ResizeWindow(WindowRef inWindow, Point inStartPoint, const Rect *inSizeConstraints, Rect *outNewContentRect);
OSErr __fastcall ResolveAlias(const FSSpec *fromFile, AliasHandle alias, FSSpec *target, Boolean *wasChanged);
OSErr __fastcall ResolveAliasFile(FSSpec *theSpec, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased);
OSErr __fastcall ResolveAliasFileWithMountFlags(FSSpec *theSpec, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased, unsigned int mountFlags);
OSErr __fastcall ResolveAliasFileWithMountFlagsNoUI(FSSpec *theSpec, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased, unsigned int mountFlags);
OSErr __fastcall ResolveAliasWithMountFlags(const FSSpec *fromFile, AliasHandle alias, FSSpec *target, Boolean *wasChanged, unsigned int mountFlags);
Component __fastcall ResolveComponentAlias(Component aComponent);
TextEncoding __fastcall ResolveDefaultTextEncoding(TextEncoding encoding);
OSStatus RestoreApplicationDockTileImage(void);
void __fastcall RestoreBack(const ColorSpec *c);
void __fastcall RestoreDeviceClut(GDHandle gd);
void __fastcall RestoreEntries(CTabHandle srcTable, CTabHandle dstTable, ReqListRec *selection);
void __fastcall RestoreFore(const ColorSpec *c);
OSStatus __fastcall RetainCollection(Collection c);
EventRef __fastcall RetainEvent(EventRef inEvent);
OSStatus __fastcall RetainMenu(MenuRef inMenu);
OSStatus __fastcall RetainMouseTrackingRegion(MouseTrackingRef inMouseRef);
OSStatus __fastcall RetainWindow(WindowRef inWindow);
OSStatus __fastcall RetainWindowGroup(WindowGroupRef inGroup);
OSErr __fastcall RetrievePictInfo(PictInfoID thePictInfoID, PictInfo *thePictInfo, __int16 colorsRequested);
OSStatus __fastcall RevealDataBrowserItem(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID propertyID, DataBrowserRevealOptions options);
OSErr __fastcall ReverseKeyboardFocus(WindowRef inWindow);
OSStatus __fastcall RevertTextEncodingToScriptInfo(TextEncoding iEncoding, ScriptCode *oTextScriptID, LangCode *oTextLanguageID, Str255 oTextFontname);
void __fastcall RgnToHandle(RgnHandle region, Handle flattenedRgnDataHdl);
void __fastcall RmvTime(QElemPtr tmTaskPtr);
OSStatus __fastcall RunAppModalLoopForWindow(WindowRef inWindow);
void RunApplicationEventLoop(void);
OSStatus __fastcall RunCurrentEventLoop(EventTimeout inTimeout);
OSStatus __fastcall RunStandardAlert(DialogRef inAlert, ModalFilterUPP filterProc, DialogItemIndex *outItemHit);
MACRO__A _S;
SInt32 __fastcall S32Set(SInt64 value);
SInt64 __fastcall S64Add(SInt64 left, SInt64 right);
Boolean __fastcall S64And(SInt64 left, SInt64 right);
SInt64 __fastcall S64BitwiseAnd(SInt64 left, SInt64 right);
SInt64 __fastcall S64BitwiseEor(SInt64 left, SInt64 right);
SInt64 __fastcall S64BitwiseNot(SInt64 value);
SInt64 __fastcall S64BitwiseOr(SInt64 left, SInt64 right);
SInt32 __fastcall S64Compare(SInt64 left, SInt64 right);
SInt64 __fastcall S64Div(SInt64 dividend, SInt64 divisor);
SInt64 __fastcall S64Divide(SInt64 dividend, SInt64 divisor, SInt64 *remainder);
Boolean __fastcall S64Eor(SInt64 left, SInt64 right);
SInt64 S64Max(void);
SInt64 S64Min(void);
SInt64 __fastcall S64Mod(SInt64 dividend, SInt64 divisor);
SInt64 __fastcall S64Multiply(SInt64 left, SInt64 right);
SInt64 __fastcall S64Negate(SInt64 value);
Boolean __fastcall S64Not(SInt64 value);
Boolean __fastcall S64Or(SInt64 left, SInt64 right);
SInt64 __fastcall S64Set(SInt32 value);
SInt64 __fastcall S64SetU(UInt32 value);
SInt64 __fastcall S64ShiftLeft(SInt64 value, UInt32 shift);
SInt64 __fastcall S64ShiftRight(SInt64 value, UInt32 shift);
SInt64 __fastcall S64Subtract(SInt64 left, SInt64 right);
OSErr __fastcall SCSIAction(SCSI_PB *parameterBlock);
UInt64 __fastcall SInt64ToUInt64(SInt64 value);
OSErr __fastcall SPBBytesToMilliseconds(int inRefNum, int *byteCount);
OSErr __fastcall SPBCloseDevice(int inRefNum);
OSErr __fastcall SPBGetDeviceInfo(int inRefNum, OSType infoType, void *infoData);
OSErr __fastcall SPBGetIndexedDevice(__int16 count, Str255 deviceName, Handle *deviceIconHandle);
OSErr __fastcall SPBGetRecordingStatus(int inRefNum, __int16 *recordingStatus, __int16 *meterLevel, unsigned int *totalSamplesToRecord, unsigned int *numberOfSamplesRecorded, unsigned int *totalMsecsToRecord, unsigned int *numberOfMsecsRecorded);
OSErr __fastcall SPBMillisecondsToBytes(int inRefNum, int *milliseconds);
OSErr __fastcall SPBOpenDevice(ConstStr255Param deviceName, __int16 permission, int *inRefNum);
OSErr __fastcall SPBPauseRecording(int inRefNum);
OSErr __fastcall SPBRecord(SPBPtr inParamPtr, Boolean asynchFlag);
OSErr __fastcall SPBResumeRecording(int inRefNum);
OSErr __fastcall SPBSetDeviceInfo(int inRefNum, OSType infoType, void *infoData);
OSErr __fastcall SPBSignInDevice(__int16 deviceRefNum, ConstStr255Param deviceName);
OSErr __fastcall SPBSignOutDevice(__int16 deviceRefNum);
OSErr __fastcall SPBStopRecording(int inRefNum);
NumVersion SPBVersion(void);
OSErr __fastcall SRAddLanguageObject(SRLanguageObject base, SRLanguageObject addon);
OSErr __fastcall SRAddText(SRLanguageObject base, const void *text, Size textLength, int refCon);
OSErr __fastcall SRCancelRecognition(SRRecognizer recognizer);
OSErr __fastcall SRChangeLanguageObject(SRLanguageObject languageObject, const void *text, Size textLength);
OSErr __fastcall SRCloseRecognitionSystem(SRRecognitionSystem system);
OSErr __fastcall SRContinueRecognition(SRRecognizer recognizer);
OSErr __fastcall SRCountItems(SRSpeechObject container, int *count);
OSErr __fastcall SRDrawRecognizedText(SRRecognizer recognizer, const void *dispText, Size dispLength);
OSErr __fastcall SRDrawText(SRRecognizer recognizer, const void *dispText, Size dispLength);
OSErr __fastcall SREmptyLanguageObject(SRLanguageObject languageObject);
OSErr __fastcall SRGetIndexedItem(SRSpeechObject container, SRSpeechObject *item, int index);
OSErr __fastcall SRGetLanguageModel(SRRecognizer recognizer, SRLanguageModel *languageModel);
OSErr __fastcall SRGetProperty(SRSpeechObject srObject, OSType selector, void *property, Size *propertyLen);
OSErr __fastcall SRGetReference(SRSpeechObject srObject, SRSpeechObject *newObjectRef);
OSErr SRIdle(void);
OSErr __fastcall SRNewLanguageModel(SRRecognitionSystem system, SRLanguageModel *model, const void *name, Size nameLength);
OSErr __fastcall SRNewLanguageObjectFromDataFile(SRRecognitionSystem system, SRLanguageObject *languageObject, __int16 fRefNum);
OSErr __fastcall SRNewLanguageObjectFromHandle(SRRecognitionSystem system, SRLanguageObject *languageObject, Handle lObjHandle);
OSErr __fastcall SRNewPath(SRRecognitionSystem system, SRPath *path);
OSErr __fastcall SRNewPhrase(SRRecognitionSystem system, SRPhrase *phrase, const void *text, Size textLength);
OSErr __fastcall SRNewRecognizer(SRRecognitionSystem system, SRRecognizer *recognizer, OSType sourceID);
OSErr __fastcall SRNewWord(SRRecognitionSystem system, SRWord *word, const void *text, Size textLength);
OSErr __fastcall SROpenRecognitionSystem(SRRecognitionSystem *system, OSType systemID);
OSErr __fastcall SRProcessBegin(SRRecognizer recognizer, Boolean failed);
OSErr __fastcall SRProcessEnd(SRRecognizer recognizer, Boolean failed);
OSErr __fastcall SRPutLanguageObjectIntoDataFile(SRLanguageObject languageObject, __int16 fRefNum);
OSErr __fastcall SRPutLanguageObjectIntoHandle(SRLanguageObject languageObject, Handle lobjHandle);
OSErr __fastcall SRReleaseObject(SRSpeechObject srObject);
OSErr __fastcall SRRemoveIndexedItem(SRSpeechObject container, int index);
OSErr __fastcall SRRemoveLanguageObject(SRLanguageObject base, SRLanguageObject toRemove);
OSErr __fastcall SRSetIndexedItem(SRSpeechObject container, SRSpeechObject item, int index);
OSErr __fastcall SRSetLanguageModel(SRRecognizer recognizer, SRLanguageModel languageModel);
OSErr __fastcall SRSetProperty(SRSpeechObject srObject, OSType selector, const void *property, Size propertyLen);
OSErr __fastcall SRSpeakAndDrawText(SRRecognizer recognizer, const void *text, Size textLength);
OSErr __fastcall SRSpeakText(SRRecognizer recognizer, const void *speakText, Size speakLength);
Boolean __fastcall SRSpeechBusy(SRRecognizer recognizer);
OSErr __fastcall SRStartListening(SRRecognizer recognizer);
OSErr __fastcall SRStopListening(SRRecognizer recognizer);
OSErr __fastcall SRStopSpeech(SRRecognizer recognizer);
OSErr __fastcall SameProcess(const ProcessSerialNumber *PSN1, const ProcessSerialNumber *PSN2, Boolean *result);
void __fastcall SaveBack(ColorSpec *c);
void __fastcall SaveEntries(CTabHandle srcTable, CTabHandle resultTable, ReqListRec *selection);
void __fastcall SaveFore(ColorSpec *c);
void __fastcall ScalePt(Point *pt, const Rect *srcRect, const Rect *dstRect);
void __fastcall ScreenRes(__int16 *scrnHRes, __int16 *scrnVRes);
__int16 __fastcall ScriptOrder(ScriptCode script1, ScriptCode script2);
OSStatus __fastcall ScrollMenuImage(MenuRef inMenu, const Rect *inScrollRect, int inHScroll, int inVScroll, CGContextRef inContext);
void __fastcall ScrollRect(const Rect *r, __int16 dh, __int16 dv, RgnHandle updateRgn);
OSStatus __fastcall ScrollWindowRect(WindowRef inWindow, const Rect *inScrollRect, SInt16 inHPixels, SInt16 inVPixels, ScrollWindowOptions inOptions, RgnHandle outExposedRgn);
OSStatus __fastcall ScrollWindowRegion(WindowRef inWindow, RgnHandle inScrollRgn, SInt16 inHPixels, SInt16 inVPixels, ScrollWindowOptions inOptions, RgnHandle outExposedRgn);
void __fastcall SecondsToDate(unsigned int secs, DateTimeRec *d);
Boolean __fastcall SectRect(const Rect *src1, const Rect *src2, Rect *dstRect);
void __fastcall SectRegionWithPortClipRegion(CGrafPtr port, RgnHandle ioRegion);
void __fastcall SectRegionWithPortVisibleRegion(CGrafPtr port, RgnHandle ioRegion);
void __fastcall SectRgn(RgnHandle srcRgnA, RgnHandle srcRgnB, RgnHandle dstRgn);
void __fastcall SeedCFill(const BitMap *srcBits, const BitMap *dstBits, const Rect *srcRect, const Rect *dstRect, __int16 seedH, __int16 seedV, ColorSearchUPP matchProc, int matchData);
void __fastcall SeedFill(const void *srcPtr, void *dstPtr, __int16 srcRow, __int16 dstRow, __int16 height, __int16 words, __int16 seedH, __int16 seedV);
void __fastcall SelectDialogItemText(DialogRef theDialog, DialogItemIndex itemNo, SInt16 strtSel, SInt16 endSel);
OSStatus __fastcall SelectTextService(Component aComp);
void __fastcall SelectWindow(WindowRef window);
OSErr __fastcall SendAEFromTSMComponent(const AppleEvent *theAppleEvent, AppleEvent *reply, AESendMode sendMode, AESendPriority sendPriority, int timeOutInTicks, AEIdleUPP idleProc, AEFilterUPP filterProc);
void __fastcall SendBehind(WindowRef window, WindowRef behindWindow);
SInt32 __fastcall SendControlMessage(ControlRef inControl, SInt16 inMessage, void *inParam);
OSStatus __fastcall SendEventToEventTarget(EventRef inEvent, EventTargetRef inTarget);
OSStatus __fastcall SendEventToEventTargetWithOptions(EventRef inEvent, EventTargetRef inTarget, OptionBits inOptions);
OSStatus __fastcall SendTextInputEvent(EventRef inEvent);
OSStatus __fastcall SendWindowGroupBehind(WindowGroupRef inGroup, WindowGroupRef behindGroup);
int __fastcall SetA5(int newA5);
OSStatus __fastcall SetAnimatedThemeCursor(ThemeCursor inCursor, UInt32 inAnimationStep);
OSStatus __fastcall SetAntiAliasedTextEnabled(Boolean iEnable, SInt16 iMinFontSize);
OSStatus __fastcall SetApplicationDockTileImage(CGImageRef inImage);
OSStatus __fastcall SetApplicationDockTileMenu(MenuRef inMenu);
OSStatus __fastcall SetAutomaticControlDragTrackingEnabledForWindow(WindowRef inWindow, Boolean inTracks);
OSErr __fastcall SetBevelButtonContentInfo(ControlRef inButton, ControlButtonContentInfoPtr inContent);
OSErr __fastcall SetBevelButtonGraphicAlignment(ControlRef inButton, ControlButtonGraphicAlignment inAlign, SInt16 inHOffset, SInt16 inVOffset);
OSErr __fastcall SetBevelButtonMenuValue(ControlRef inButton, SInt16 inValue);
OSErr __fastcall SetBevelButtonTextAlignment(ControlRef inButton, ControlButtonTextAlignment inAlign, SInt16 inHOffset);
OSErr __fastcall SetBevelButtonTextPlacement(ControlRef inButton, ControlButtonTextPlacement inWhere);
OSErr __fastcall SetBevelButtonTransform(ControlRef inButton, IconTransformType transform);
void __fastcall SetCCursor(CCrsrHandle cCrsr);
void __fastcall SetCPixel(__int16 h, __int16 v, const RGBColor *cPix);
void __fastcall SetClientID(__int16 id);
void __fastcall SetClip(RgnHandle rgn);
void __fastcall SetCollectionDefaultAttributes(Collection c, SInt32 whichAttributes, SInt32 newAttributes);
void __fastcall SetCollectionExceptionProc(Collection c, CollectionExceptionUPP exceptionProc);
OSErr __fastcall SetCollectionItemInfo(Collection c, CollectionTag tag, SInt32 id, SInt32 whichAttributes, SInt32 newAttributes);
void __fastcall SetComponentInstanceError(ComponentInstance aComponentInstance, OSErr theError);
void __fastcall SetComponentInstanceStorage(ComponentInstance aComponentInstance, Handle theStorage);
void __fastcall SetComponentRefcon(Component aComponent, int theRefcon);
void __fastcall SetControl32BitMaximum(ControlRef theControl, SInt32 newMaximum);
void __fastcall SetControl32BitMinimum(ControlRef theControl, SInt32 newMinimum);
void __fastcall SetControl32BitValue(ControlRef theControl, SInt32 newValue);
void __fastcall SetControlAction(ControlRef theControl, ControlActionUPP actionProc);
void __fastcall SetControlBounds(ControlRef control, const Rect *bounds);
OSStatus __fastcall SetControlColorProc(ControlRef inControl, ControlColorUPP inProc);
OSStatus __fastcall SetControlCommandID(ControlRef inControl, UInt32 inCommandID);
OSErr __fastcall SetControlData(ControlRef inControl, ControlPartCode inPart, ResType inTagName, Size inSize, const void *inData);
void __fastcall SetControlDataHandle(ControlRef control, Handle dataHandle);
OSStatus __fastcall SetControlDragTrackingEnabled(ControlRef inControl, Boolean inTracks);
OSErr __fastcall SetControlFontStyle(ControlRef inControl, const ControlFontStyleRec *inStyle);
OSStatus __fastcall SetControlID(ControlRef inControl, const ControlID *inID);
void __fastcall SetControlMaximum(ControlRef theControl, SInt16 newMaximum);
void __fastcall SetControlMinimum(ControlRef theControl, SInt16 newMinimum);
void __fastcall SetControlPopupMenuHandle(ControlRef control, MenuRef popupMenu);
void __fastcall SetControlPopupMenuID(ControlRef control, __int16 menuID);
OSStatus __fastcall SetControlProperty(ControlRef control, OSType propertyCreator, OSType propertyTag, UInt32 propertySize, const void *propertyData);
void __fastcall SetControlReference(ControlRef theControl, SInt32 data);
OSErr __fastcall SetControlSupervisor(ControlRef inControl, ControlRef inBoss);
void __fastcall SetControlTitle(ControlRef theControl, ConstStr255Param title);
OSStatus __fastcall SetControlTitleWithCFString(ControlRef inControl, CFStringRef inString);
void __fastcall SetControlValue(ControlRef theControl, SInt16 newValue);
void __fastcall SetControlViewSize(ControlRef theControl, SInt32 newViewSize);
OSErr __fastcall SetControlVisibility(ControlRef inControl, Boolean inIsVisible, Boolean inDoDraw);
int SetCurrentA5(void);
void __fastcall SetCursor(const Cursor *crsr);
OSErr __fastcall SetCursorComponent(ComponentInstance ci);
OSErr __fastcall SetCustomIconsEnabled(SInt16 vRefNum, Boolean enableCustomIcons);
OSStatus __fastcall SetDataBrowserActiveItems(ControlRef browser, Boolean active);
OSStatus __fastcall SetDataBrowserCallbacks(ControlRef browser, const DataBrowserCallbacks *callbacks);
OSStatus __fastcall SetDataBrowserColumnViewDisplayType(ControlRef browser, DataBrowserPropertyType propertyType);
OSStatus __fastcall SetDataBrowserColumnViewPath(ControlRef browser, UInt32 length, const DataBrowserItemID *path);
OSStatus __fastcall SetDataBrowserCustomCallbacks(ControlRef browser, const DataBrowserCustomCallbacks *callbacks);
OSStatus __fastcall SetDataBrowserEditItem(ControlRef browser, DataBrowserItemID item, DataBrowserPropertyID property);
OSStatus __fastcall SetDataBrowserEditText(ControlRef browser, CFStringRef text);
OSStatus __fastcall SetDataBrowserHasScrollBars(ControlRef browser, Boolean horiz, Boolean vert);
OSStatus __fastcall SetDataBrowserItemDataBooleanValue(DataBrowserItemDataRef itemData, Boolean theData);
OSStatus __fastcall SetDataBrowserItemDataButtonValue(DataBrowserItemDataRef itemData, ThemeButtonValue theData);
OSStatus __fastcall SetDataBrowserItemDataDateTime(DataBrowserItemDataRef itemData, int theData);
OSStatus __fastcall SetDataBrowserItemDataDrawState(DataBrowserItemDataRef itemData, ThemeDrawState theData);
OSStatus __fastcall SetDataBrowserItemDataIcon(DataBrowserItemDataRef itemData, IconRef theData);
OSStatus __fastcall SetDataBrowserItemDataIconTransform(DataBrowserItemDataRef itemData, IconTransformType theData);
OSStatus __fastcall SetDataBrowserItemDataItemID(DataBrowserItemDataRef itemData, DataBrowserItemID theData);
OSStatus __fastcall SetDataBrowserItemDataLongDateTime(DataBrowserItemDataRef itemData, const LongDateTime *theData);
OSStatus __fastcall SetDataBrowserItemDataMaximum(DataBrowserItemDataRef itemData, SInt32 theData);
OSStatus __fastcall SetDataBrowserItemDataMenuRef(DataBrowserItemDataRef itemData, MenuRef theData);
OSStatus __fastcall SetDataBrowserItemDataMinimum(DataBrowserItemDataRef itemData, SInt32 theData);
OSStatus __fastcall SetDataBrowserItemDataRGBColor(DataBrowserItemDataRef itemData, const RGBColor *theData);
OSStatus __fastcall SetDataBrowserItemDataText(DataBrowserItemDataRef itemData, CFStringRef theData);
OSStatus __fastcall SetDataBrowserItemDataValue(DataBrowserItemDataRef itemData, SInt32 theData);
OSStatus __fastcall SetDataBrowserListViewDisclosureColumn(ControlRef browser, DataBrowserTableViewColumnID column, Boolean expandableRows);
OSStatus __fastcall SetDataBrowserListViewHeaderBtnHeight(ControlRef browser, UInt16 height);
OSStatus __fastcall SetDataBrowserListViewHeaderDesc(ControlRef browser, DataBrowserTableViewColumnID column, DataBrowserListViewHeaderDesc *desc);
OSStatus __fastcall SetDataBrowserListViewUsePlainBackground(ControlRef browser, Boolean usePlainBackground);
OSStatus __fastcall SetDataBrowserPropertyFlags(ControlRef browser, DataBrowserPropertyID property, DataBrowserPropertyFlags flags);
OSStatus __fastcall SetDataBrowserScrollBarInset(ControlRef browser, Rect *insetRect);
OSStatus __fastcall SetDataBrowserScrollPosition(ControlRef browser, UInt32 top, UInt32 left);
OSStatus __fastcall SetDataBrowserSelectedItems(ControlRef browser, UInt32 numItems, const DataBrowserItemID *items, DataBrowserSetOption operation);
OSStatus __fastcall SetDataBrowserSelectionFlags(ControlRef browser, DataBrowserSelectionFlags selectionFlags);
OSStatus __fastcall SetDataBrowserSortOrder(ControlRef browser, DataBrowserSortOrder order);
OSStatus __fastcall SetDataBrowserSortProperty(ControlRef browser, DataBrowserPropertyID property);
OSStatus __fastcall SetDataBrowserTableViewColumnPosition(ControlRef browser, DataBrowserTableViewColumnID column, DataBrowserTableViewColumnIndex position);
OSStatus __fastcall SetDataBrowserTableViewColumnWidth(ControlRef browser, UInt16 width);
OSStatus __fastcall SetDataBrowserTableViewGeometry(ControlRef browser, Boolean variableWidthColumns, Boolean variableHeightRows);
OSStatus __fastcall SetDataBrowserTableViewHiliteStyle(ControlRef browser, DataBrowserTableViewHiliteStyle hiliteStyle);
OSStatus __fastcall SetDataBrowserTableViewItemRow(ControlRef browser, DataBrowserItemID item, DataBrowserTableViewRowIndex row);
OSStatus __fastcall SetDataBrowserTableViewItemRowHeight(ControlRef browser, DataBrowserItemID item, UInt16 height);
OSStatus __fastcall SetDataBrowserTableViewNamedColumnWidth(ControlRef browser, DataBrowserTableViewColumnID column, UInt16 width);
OSStatus __fastcall SetDataBrowserTableViewRowHeight(ControlRef browser, UInt16 height);
OSStatus __fastcall SetDataBrowserTarget(ControlRef browser, DataBrowserItemID target);
OSStatus __fastcall SetDataBrowserUserState(ControlRef browser, CFDataRef stateInfo);
OSStatus __fastcall SetDataBrowserViewStyle(ControlRef browser, DataBrowserViewStyle style);
OSErr __fastcall SetDateTime(unsigned int time);
OSStatus __fastcall SetDebugOptionValue(OSType componentSignature, SInt32 optionSelectorNum, Boolean newOptionSetting);
OSErr __fastcall SetDebuggerNotificationProcs(DebuggerNewThreadTPP notifyNewThread, DebuggerDisposeThreadTPP notifyDisposeThread, DebuggerThreadSchedulerTPP notifyThreadScheduler);
OSErr __fastcall SetDefaultComponent(Component aComponent, __int16 flags);
OSErr __fastcall SetDefaultInputMethod(Component ts, ScriptLanguageRecord *slRecordPtr);
OSStatus __fastcall SetDefaultInputMethodOfClass(Component aComp, ScriptLanguageRecord *slRecPtr, TextServiceClass tsClass);
OSErr __fastcall SetDefaultOutputVolume(int level);
OSErr __fastcall SetDepth(GDHandle gd, __int16 depth, __int16 whichFlags, __int16 flags);
void __fastcall SetDeviceAttribute(GDHandle gdh, __int16 attribute, Boolean value);
OSErr __fastcall SetDialogCancelItem(DialogRef theDialog, DialogItemIndex newItem);
OSErr __fastcall SetDialogDefaultItem(DialogRef theDialog, DialogItemIndex newItem);
void __fastcall SetDialogFont(SInt16 fontNum);
void __fastcall SetDialogItem(DialogRef theDialog, DialogItemIndex itemNo, DialogItemType itemType, Handle item, const Rect *box);
void __fastcall SetDialogItemText(Handle item, ConstStr255Param text);
OSStatus __fastcall SetDialogTimeout(DialogRef inDialog, SInt16 inButtonToPress, UInt32 inSecondsToWait);
OSErr __fastcall SetDialogTracksCursor(DialogRef theDialog, Boolean tracks);
void __fastcall SetDimSuspendState(Boolean dimSuspendState);
void __fastcall SetDimmingTimeout(UInt8 timeout);
OSErr __fastcall SetDisclosureTriangleLastValue(ControlRef inTabControl, SInt16 inValue);
OSStatus __fastcall SetDragAllowableActions(DragRef theDrag, DragActions inActions, Boolean isLocal);
OSErr __fastcall SetDragDrawingProc(DragRef theDrag, DragDrawingUPP drawingProc, void *dragDrawingRefCon);
OSStatus __fastcall SetDragDropAction(DragRef theDrag, DragActions inAction);
OSErr __fastcall SetDragImage(DragRef theDrag, PixMapHandle imagePixMap, RgnHandle imageRgn, Point imageOffsetPt, DragImageFlags theImageFlags);
OSStatus __fastcall SetDragImageWithCGImage(DragRef inDrag, CGImageRef inCGImage, const HIPoint *inImageOffsetPt, DragImageFlags inImageFlags);
OSErr __fastcall SetDragInputProc(DragRef theDrag, DragInputUPP inputProc, void *dragInputRefCon);
OSErr __fastcall SetDragItemBounds(DragRef theDrag, DragItemRef theItemRef, const Rect *itemBounds);
OSErr __fastcall SetDragItemFlavorData(DragRef theDrag, DragItemRef theItemRef, FlavorType theType, const void *dataPtr, Size dataSize, UInt32 dataOffset);
OSErr __fastcall SetDragMouse(DragRef theDrag, Point globalPinnedMouse);
OSErr __fastcall SetDragSendProc(DragRef theDrag, DragSendDataUPP sendProc, void *dragSendRefCon);
OSStatus __fastcall SetDrawerOffsets(WindowRef inDrawerWindow, float inLeadingOffset, float inTrailingOffset);
OSStatus __fastcall SetDrawerParent(WindowRef inDrawerWindow, WindowRef inParent);
OSStatus __fastcall SetDrawerPreferredEdge(WindowRef inDrawerWindow, OptionBits inEdge);
OSErr __fastcall SetDropLocation(DragRef theDrag, const AEDesc *dropLocation);
OSErr __fastcall SetEOF(__int16 refNum, int logEOF);
void __fastcall SetEmptyRgn(RgnHandle rgn);
void __fastcall SetEntries(__int16 start, __int16 count, CSpecArray aTable);
void __fastcall SetEntryColor(PaletteHandle dstPalette, __int16 dstEntry, const RGBColor *srcRGB);
void __fastcall SetEntryUsage(PaletteHandle dstPalette, __int16 dstEntry, __int16 srcUsage, __int16 srcTolerance);
OSStatus __fastcall SetEventLoopTimerNextFireTime(EventLoopTimerRef inTimer, EventTimerInterval inNextFire);
void __fastcall SetEventMask(EventMask value);
OSStatus __fastcall SetEventParameter(EventRef inEvent, EventParamName inName, EventParamType inType, UInt32 inSize, const void *inDataPtr);
OSStatus __fastcall SetEventTime(EventRef inEvent, EventTime inTime);
OSErr __fastcall SetFPos(__int16 refNum, __int16 posMode, int posOff);
void __fastcall SetFScaleDisable(Boolean fscaleDisable);
OSStatus __fastcall SetFallbackUnicodeToText(UnicodeToTextInfo iUnicodeToTextInfo, UnicodeToTextFallbackUPP iFallback, OptionBits iControlFlags, LogicalAddress iInfoPtr);
OSStatus __fastcall SetFallbackUnicodeToTextRun(UnicodeToTextRunInfo iUnicodeToTextRunInfo, UnicodeToTextFallbackUPP iFallback, OptionBits iControlFlags, LogicalAddress iInfoPtr);
OSStatus __fastcall SetFontInfoForSelection(OSType iStyleType, UInt32 iNumStyles, void *iStyles, HIObjectRef iFPEventTarget);
void __fastcall SetFractEnable(Boolean fractEnable);
OSErr __fastcall SetFrontProcess(const ProcessSerialNumber *PSN);
OSStatus __fastcall SetFrontProcessWithOptions(const ProcessSerialNumber *inProcess, OptionBits inOptions);
void __fastcall SetGDevice(GDHandle gd);
void __fastcall SetGWorld(CGrafPtr port, GDHandle gdh);
OSErr __fastcall SetGestaltValue(OSType selector, int newValue);
void __fastcall SetGrowZone(GrowZoneUPP growZone);
void __fastcall SetHandleSize(Handle h, Size newSize);
void __fastcall SetHardDiskTimeout(UInt8 timeout);
OSErr __fastcall SetIconCacheData(IconCacheRef theCache, void *theData);
OSErr __fastcall SetIconCacheProc(IconCacheRef theCache, IconGetterUPP theProc);
OSErr __fastcall SetIconFamilyData(IconFamilyHandle iconFamily, OSType iconType, Handle h);
OSErr __fastcall SetImageWellContentInfo(ControlRef inButton, ControlButtonContentInfoPtr inContent);
OSErr __fastcall SetImageWellTransform(ControlRef inButton, IconTransformType inTransform);
OSErr __fastcall SetIndexedCollectionItemInfo(Collection c, SInt32 index, SInt32 whichAttributes, SInt32 newAttributes);
void __fastcall SetIntModemState(__int16 theState);
void __fastcall SetItemCmd(MenuRef theMenu, __int16 item, CharParameter cmdChar);
void __fastcall SetItemIcon(MenuRef theMenu, __int16 item, __int16 iconIndex);
void __fastcall SetItemMark(MenuRef theMenu, __int16 item, CharParameter markChar);
void __fastcall SetItemStyle(MenuRef theMenu, __int16 item, StyleParameter chStyle);
OSErr __fastcall SetKeyboardFocus(WindowRef inWindow, ControlRef inControl, ControlFocusPart inPart);
void __fastcall SetListCellIndent(ListHandle list, Point *indent);
void __fastcall SetListClickLoop(ListHandle list, ListClickLoopUPP clickLoop);
void __fastcall SetListClickTime(ListHandle list, SInt32 time);
void __fastcall SetListFlags(ListHandle list, OptionBits listFlags);
void __fastcall SetListLastClick(ListHandle list, Cell *lastClick);
void __fastcall SetListPort(ListHandle list, CGrafPtr port);
void __fastcall SetListRefCon(ListHandle list, SInt32 refCon);
void __fastcall SetListSelectionFlags(ListHandle list, OptionBits selectionFlags);
void __fastcall SetListUserHandle(ListHandle list, Handle userHandle);
void __fastcall SetListViewBounds(ListHandle list, const Rect *view);
OSStatus __fastcall SetLocalDateTime(const LocalDateTime *localDateTime, OptionBits options);
void __fastcall SetMCEntries(__int16 numEntries, MCTablePtr menuCEntries);
void __fastcall SetMCInfo(MCTableHandle menuCTbl);
void __fastcall SetMenuBar(MenuBarHandle mbar);
OSStatus __fastcall SetMenuBarFromNib(IBNibRef inNibRef, CFStringRef inName);
OSStatus __fastcall SetMenuCommandMark(MenuRef inMenu, MenuCommand inCommandID, UniChar inMark);
OSStatus __fastcall SetMenuCommandProperty(MenuRef inMenu, MenuCommand inCommandID, OSType inPropertyCreator, OSType inPropertyTag, ByteCount inPropertySize, const void *inPropertyData);
OSStatus __fastcall SetMenuDefinition(MenuRef menu, const MenuDefSpec *defSpec);
OSStatus __fastcall SetMenuExcludesMarkColumn(MenuRef menu, Boolean excludesMark);
void __fastcall SetMenuFlashCount(__int16 count);
OSStatus __fastcall SetMenuFont(MenuRef menu, SInt16 inFontID, UInt16 inFontSize);
void __fastcall SetMenuHeight(MenuRef menu, SInt16 height);
void __fastcall SetMenuID(MenuRef menu, MenuID menuID);
OSErr __fastcall SetMenuItemCommandID(MenuRef inMenu, SInt16 inItem, MenuCommand inCommandID);
OSStatus __fastcall SetMenuItemCommandKey(MenuRef inMenu, MenuItemIndex inItem, Boolean inSetVirtualKey, UInt16 inKey);
OSStatus __fastcall SetMenuItemData(MenuRef inMenu, MenuItemID inItem, Boolean inIsCommandID, const MenuItemDataRec *inData);
OSErr __fastcall SetMenuItemFontID(MenuRef inMenu, SInt16 inItem, SInt16 inFontID);
OSErr __fastcall SetMenuItemHierarchicalID(MenuRef inMenu, SInt16 inItem, MenuID inHierID);
OSStatus __fastcall SetMenuItemHierarchicalMenu(MenuRef inMenu, MenuItemIndex inItem, MenuRef inHierMenu);
OSErr __fastcall SetMenuItemIconHandle(MenuRef inMenu, SInt16 inItem, UInt8 inIconType, Handle inIconHandle);
OSStatus __fastcall SetMenuItemIndent(MenuRef inMenu, MenuItemIndex inItem, UInt32 inIndent);
OSErr __fastcall SetMenuItemKeyGlyph(MenuRef inMenu, SInt16 inItem, SInt16 inGlyph);
OSErr __fastcall SetMenuItemModifiers(MenuRef inMenu, SInt16 inItem, UInt8 inModifiers);
OSStatus __fastcall SetMenuItemProperty(MenuRef menu, MenuItemIndex item, OSType propertyCreator, OSType propertyTag, UInt32 propertySize, const void *propertyData);
OSErr __fastcall SetMenuItemRefCon(MenuRef inMenu, SInt16 inItem, UInt32 inRefCon);
void __fastcall SetMenuItemText(MenuRef theMenu, __int16 item, ConstStr255Param itemString);
OSErr __fastcall SetMenuItemTextEncoding(MenuRef inMenu, SInt16 inItem, TextEncoding inScriptID);
OSStatus __fastcall SetMenuItemTextWithCFString(MenuRef inMenu, MenuItemIndex inItem, CFStringRef inString);
OSStatus __fastcall SetMenuTitle(MenuRef menu, ConstStr255Param title);
OSStatus __fastcall SetMenuTitleIcon(MenuRef inMenu, UInt32 inType, void *inIcon);
OSStatus __fastcall SetMenuTitleWithCFString(MenuRef inMenu, CFStringRef inString);
void __fastcall SetMenuWidth(MenuRef menu, SInt16 width);
OSStatus __fastcall SetModalDialogEventMask(DialogRef inDialog, EventMask inMask);
OSStatus __fastcall SetMouseCoalescingEnabled(Boolean inNewState, Boolean *outOldState);
OSStatus __fastcall SetMouseTrackingRegionEnabled(MouseTrackingRef inMouseRef, Boolean inEnabled);
void __fastcall SetOrigin(__int16 h, __int16 v);
void __fastcall SetOutlinePreferred(Boolean outlinePreferred);
void __fastcall SetPalette(WindowRef dstWindow, PaletteHandle srcPalette, Boolean cUpdates);
void __fastcall SetPaletteUpdates(PaletteHandle p, __int16 updates);
void __fastcall SetPenState(const PenState *pnState);
void __fastcall SetPixelsState(PixMapHandle pm, GWorldFlags state);
void __fastcall SetPort(GrafPtr port);
void __fastcall SetPortBackPixPat(CGrafPtr port, PixPatHandle backPattern);
void __fastcall SetPortBits(const BitMap *bm);
void __fastcall SetPortBounds(CGrafPtr port, const Rect *rect);
void __fastcall SetPortClipRegion(CGrafPtr port, RgnHandle clipRgn);
OSErr __fastcall SetPortCustomXFerProc(CGrafPtr port, CustomXFerProcPtr proc, UInt32 flags, UInt32 refCon);
void __fastcall SetPortDialogPort(DialogRef dialog);
void __fastcall SetPortFillPixPat(CGrafPtr port, PixPatHandle penPattern);
void __fastcall SetPortFracHPenLocation(CGrafPtr port, __int16 pnLocHFrac);
void __fastcall SetPortGrafProcs(CGrafPtr port, CQDProcsPtr procs);
void __fastcall SetPortOpColor(CGrafPtr port, const RGBColor *opColor);
void __fastcall SetPortPenMode(CGrafPtr port, SInt32 penMode);
void __fastcall SetPortPenPixPat(CGrafPtr port, PixPatHandle penPattern);
void __fastcall SetPortPenSize(CGrafPtr port, Point penSize);
void __fastcall SetPortPix(PixMapHandle pm);
void __fastcall SetPortTextFace(CGrafPtr port, StyleParameter face);
void __fastcall SetPortTextFont(CGrafPtr port, __int16 txFont);
void __fastcall SetPortTextMode(CGrafPtr port, __int16 mode);
void __fastcall SetPortTextSize(CGrafPtr port, __int16 txSize);
void __fastcall SetPortVisibleRegion(CGrafPtr port, RgnHandle visRgn);
void __fastcall SetPortWindowPort(WindowRef window);
void __fastcall SetPreserveGlyph(Boolean preserveGlyph);
Boolean __fastcall SetProcessorSpeed(Boolean fullSpeed);
void __fastcall SetPt(Point *pt, __int16 h, __int16 v);
void __fastcall SetPtrSize(Ptr p, Size newSize);
void __fastcall SetQDError(OSErr err);
void __fastcall SetQDGlobalsArrow(const Cursor *arrow);
void __fastcall SetQDGlobalsRandomSeed(int randomSeed);
void __fastcall SetRect(Rect *r, __int16 left, __int16 top, __int16 right, __int16 bottom);
void __fastcall SetRectRgn(RgnHandle rgn, __int16 left, __int16 top, __int16 right, __int16 bottom);
void __fastcall SetResAttrs(Handle theResource, __int16 attrs);
void __fastcall SetResFileAttrs(__int16 refNum, __int16 attrs);
void __fastcall SetResInfo(Handle theResource, __int16 theID, ConstStr255Param name);
void __fastcall SetResLoad(Boolean load);
void __fastcall SetResPurge(Boolean install);
void __fastcall SetResourceSize(Handle theResource, int newSize);
OSStatus __fastcall SetRootMenu(MenuRef inMenu);
void __fastcall SetSCSIDiskModeAddress(__int16 scsiAddress);
OSStatus __fastcall SetScrapPromiseKeeper(ScrapRef scrap, ScrapPromiseKeeperUPP upp, const void *userData);
OSErr __fastcall SetScriptManagerVariable(__int16 selector, int param);
OSErr __fastcall SetScriptVariable(__int16 script, __int16 selector, int param);
void __fastcall SetSleepTimeout(UInt8 timeout);
OSErr __fastcall SetSoundMixerState(SoundMixerByte *theSoundMixerByte);
OSErr __fastcall SetSoundOutputInfo(Component outputDevice, OSType selector, const void *infoPtr);
OSErr __fastcall SetSoundPreference(OSType theType, Str255 name, Handle settings);
OSErr __fastcall SetSpeechInfo(SpeechChannel chan, OSType selector, const void *speechInfo);
OSErr __fastcall SetSpeechPitch(SpeechChannel chan, Fixed pitch);
OSErr __fastcall SetSpeechRate(SpeechChannel chan, Fixed rate);
void __fastcall SetSpindownDisable(Boolean setDisable);
OSStatus __fastcall SetStandardDropLocation(DragRef theDrag, StandardDropLocation dropLocation);
OSErr __fastcall SetStartupTimer(StartupTime *theTime);
void __fastcall SetStdCProcs(CQDProcs *procs);
void __fastcall SetStdProcs(QDProcs *procs);
void __fastcall SetString(StringHandle theString, ConstStr255Param strNew);
OSErr __fastcall SetSuiteLabel(IconSuiteRef theSuite, SInt16 theLabel);
OSErr __fastcall SetSysBeepVolume(int level);
void __fastcall SetSysDirection(__int16 value);
OSStatus __fastcall SetSystemUIMode(SystemUIMode inMode, SystemUIOptions inOptions);
void __fastcall SetTSMTEDialogDocumentID(DialogRef dialog, TSMDocumentID documentID);
void __fastcall SetTSMTEDialogTSMTERecHandle(DialogRef dialog, TSMTERecHandle tsmteRecHandle);
OSErr __fastcall SetTabEnabled(ControlRef inTabControl, SInt16 inTabToHilite, Boolean inEnabled);
OSErr __fastcall SetTextServiceLanguage(ScriptLanguageRecord *slRecordPtr);
ComponentResult __fastcall SetTextServiceProperty(ComponentInstance ts, OSType propertySelector, SInt32 value);
OSStatus __fastcall SetTheme(Collection ioCollection);
OSStatus __fastcall SetThemeBackground(ThemeBrush inBrush, SInt16 inDepth, Boolean inIsColorDevice);
OSStatus __fastcall SetThemeCursor(ThemeCursor inCursor);
OSStatus __fastcall SetThemeDrawingState(ThemeDrawingState inState, Boolean inDisposeNow);
OSStatus __fastcall SetThemePen(ThemeBrush inBrush, SInt16 inDepth, Boolean inIsColorDevice);
OSStatus __fastcall SetThemeTextColor(ThemeTextColor inColor, SInt16 inDepth, Boolean inIsColorDevice);
OSStatus __fastcall SetThemeTextColorForWindow(WindowRef inWindow, Boolean inActive, SInt16 inDepth, Boolean inColorDev);
OSStatus __fastcall SetThemeWindowBackground(WindowRef inWindow, ThemeBrush inBrush, Boolean inUpdate);
OSErr __fastcall SetThreadReadyGivenTaskRef(ThreadTaskRef threadTRef, ThreadID threadToSet);
OSErr __fastcall SetThreadScheduler(ThreadSchedulerTPP threadScheduler);
OSErr __fastcall SetThreadState(ThreadID threadToSet, ThreadState newState, ThreadID suggestedThread);
OSErr __fastcall SetThreadStateEndCritical(ThreadID threadToSet, ThreadState newState, ThreadID suggestedThread);
OSErr __fastcall SetThreadSwitcher(ThreadID thread, ThreadSwitchTPP threadSwitcher, void *switchProcParam, Boolean inOrOut);
OSErr __fastcall SetThreadTerminator(ThreadID thread, ThreadTerminationTPP threadTerminator, void *terminationProcParam);
void __fastcall SetTime(const DateTimeRec *d);
OSErr __fastcall SetTranslationAdvertisement(TranslationRefNum refNum, PicHandle advertisement);
OSStatus __fastcall SetUTCDateTime(const UTCDateTime *utcDateTime, OptionBits options);
OSErr __fastcall SetUpControlBackground(ControlRef inControl, SInt16 inDepth, Boolean inIsColorDevice);
OSErr __fastcall SetUpControlTextColor(ControlRef inControl, SInt16 inDepth, Boolean inIsColorDevice);
OSStatus __fastcall SetUserFocusWindow(WindowRef inWindow);
void __fastcall SetWRefCon(WindowRef window, int data);
void __fastcall SetWTitle(WindowRef window, ConstStr255Param title);
OSErr __fastcall SetWUTime(int wuTime);
void __fastcall SetWakeupTimer(WakeupTime *theTime);
OSStatus __fastcall SetWindowActivationScope(WindowRef inWindow, WindowActivationScope inScope);
OSStatus __fastcall SetWindowAlpha(WindowRef inWindow, float inAlpha);
OSStatus __fastcall SetWindowAlternateTitle(WindowRef inWindow, CFStringRef inTitle);
OSStatus __fastcall SetWindowBounds(WindowRef window, WindowRegionCode regionCode, const Rect *globalBounds);
OSStatus __fastcall SetWindowCancelButton(WindowRef inWindow, ControlRef inControl);
OSStatus __fastcall SetWindowClass(WindowRef inWindow, WindowClass inWindowClass);
OSStatus __fastcall SetWindowContentColor(WindowRef window, const RGBColor *color);
OSStatus __fastcall SetWindowContentPattern(WindowRef window, PixPatHandle pixPat);
OSStatus __fastcall SetWindowDefaultButton(WindowRef inWindow, ControlRef inControl);
OSStatus __fastcall SetWindowDockTileMenu(WindowRef inWindow, MenuRef inMenu);
OSStatus __fastcall SetWindowGroup(WindowRef inWindow, WindowGroupRef inNewGroup);
OSStatus __fastcall SetWindowGroupLevel(WindowGroupRef inGroup, SInt32 inLevel);
OSStatus __fastcall SetWindowGroupName(WindowGroupRef inGroup, CFStringRef inName);
OSStatus __fastcall SetWindowGroupOwner(WindowGroupRef inGroup, WindowRef inWindow);
OSStatus __fastcall SetWindowGroupParent(WindowGroupRef inGroup, WindowGroupRef inNewGroup);
OSStatus __fastcall SetWindowIdealUserState(WindowRef inWindow, const Rect *inUserState);
void __fastcall SetWindowKind(WindowRef window, __int16 kind);
OSStatus __fastcall SetWindowModality(WindowRef inWindow, WindowModality inModalKind, WindowRef inUnavailableWindow);
OSStatus __fastcall SetWindowModified(WindowRef window, Boolean modified);
OSStatus __fastcall SetWindowMouseTrackingRegionsEnabled(WindowRef inWindow, OSType inSignature, Boolean inEnabled);
void __fastcall SetWindowPic(WindowRef window, PicHandle pic);
OSStatus __fastcall SetWindowProperty(WindowRef window, PropertyCreator propertyCreator, PropertyTag propertyTag, UInt32 propertySize, const void *propertyBuffer);
OSStatus __fastcall SetWindowProxyAlias(WindowRef inWindow, AliasHandle inAlias);
OSStatus __fastcall SetWindowProxyCreatorAndType(WindowRef window, OSType fileCreator, OSType fileType, SInt16 vRefNum);
OSStatus __fastcall SetWindowProxyFSSpec(WindowRef window, const FSSpec *inFile);
OSStatus __fastcall SetWindowProxyIcon(WindowRef window, IconRef icon);
OSStatus __fastcall SetWindowResizeLimits(WindowRef inWindow, const HISize *inMinLimits, const HISize *inMaxLimits);
void __fastcall SetWindowStandardState(WindowRef window, const Rect *rect);
OSStatus __fastcall SetWindowTitleWithCFString(WindowRef inWindow, CFStringRef inString);
OSStatus __fastcall SetWindowToolbar(WindowRef inWindow, HIToolbarRef inToolbar);
void __fastcall SetWindowUserState(WindowRef window, const Rect *rect);
OSErr __fastcall SetupAIFFHeader(__int16 fRefNum, __int16 numChannels, UnsignedFixed sampleRate, __int16 sampleSize, OSType compressionType, unsigned int numBytes, unsigned int numFrames);
OSErr __fastcall SetupSndHeader(SndListHandle sndHandle, __int16 numChannels, UnsignedFixed sampleRate, __int16 sampleSize, OSType compressionType, __int16 baseNote, unsigned int numBytes, __int16 *headerLen);
void __fastcall ShieldCursor(const Rect *shieldRect, Point offsetPt);
void __fastcall ShortenDITL(DialogRef theDialog, DialogItemIndex numberItems);
void __fastcall ShowControl(ControlRef theControl);
void ShowCursor(void);
void __fastcall ShowDialogItem(DialogRef theDialog, DialogItemIndex itemNo);
OSErr __fastcall ShowDragHilite(DragRef theDrag, RgnHandle hiliteFrame, Boolean inside);
OSStatus ShowFloatingWindows(void);
void __fastcall ShowHide(WindowRef window, Boolean showFlag);
OSErr __fastcall ShowHideProcess(const ProcessSerialNumber *psn, Boolean visible);
OSStatus __fastcall ShowHideWindowToolbar(WindowRef inWindow, Boolean inShow, Boolean inAnimate);
void ShowMenuBar(void);
void ShowPen(void);
OSStatus __fastcall ShowSheetWindow(WindowRef inSheet, WindowRef inParentWindow);
void __fastcall ShowWindow(WindowRef window);
void __fastcall SizeControl(ControlRef theControl, SInt16 w, SInt16 h);
OSErr __fastcall SizeDialogItem(DialogRef inDialog, SInt16 inItemNo, SInt16 inWidth, SInt16 inHeight);
void __fastcall SizeWindow(WindowRef window, __int16 w, __int16 h, Boolean fUpdate);
void __fastcall SleepQInstall(SleepQRecPtr qRecPtr);
void __fastcall SleepQRemove(SleepQRecPtr qRecPtr);
Fixed __fastcall SlopeFromAngle(__int16 angle);
Fixed __fastcall SmallFract2Fix(SmallFract s);
OSErr __fastcall SndChannelStatus(SndChannelPtr chan, __int16 theLength, SCStatusPtr theStatus);
OSErr __fastcall SndDisposeChannel(SndChannelPtr chan, Boolean quietNow);
OSErr __fastcall SndDoCommand(SndChannelPtr chan, const SndCommand *cmd, Boolean noWait);
OSErr __fastcall SndDoImmediate(SndChannelPtr chan, const SndCommand *cmd);
OSErr __fastcall SndGetInfo(SndChannelPtr chan, OSType selector, void *infoPtr);
void __fastcall SndGetSysBeepState(__int16 *sysBeepState);
ComponentResult __fastcall SndInputGetDeviceInfo(ComponentInstance self, OSType infoType, void *infoData);
ComponentResult __fastcall SndInputGetStatus(ComponentInstance self, __int16 *recordingStatus, unsigned int *totalSamplesToRecord, unsigned int *numberOfSamplesRecorded);
ComponentResult __fastcall SndInputInitHardware(ComponentInstance self);
ComponentResult __fastcall SndInputPauseRecording(ComponentInstance self);
ComponentResult __fastcall SndInputReadAsync(ComponentInstance self, SndInputCmpParamPtr SICParmPtr);
ComponentResult __fastcall SndInputReadSync(ComponentInstance self, SndInputCmpParamPtr SICParmPtr);
ComponentResult __fastcall SndInputResumeRecording(ComponentInstance self);
ComponentResult __fastcall SndInputSetDeviceInfo(ComponentInstance self, OSType infoType, void *infoData);
ComponentResult __fastcall SndInputStopRecording(ComponentInstance self);
OSErr __fastcall SndManagerStatus(__int16 theLength, SMStatusPtr theStatus);
OSErr __fastcall SndNewChannel(SndChannelPtr *chan, __int16 synth, int init, SndCallBackUPP userRoutine);
OSErr __fastcall SndPlay(SndChannelPtr chan, SndListHandle sndHandle, Boolean async);
OSErr __fastcall SndRecord(ModalFilterUPP filterProc, Point corner, OSType quality, SndListHandle *sndHandle);
OSErr __fastcall SndSetInfo(SndChannelPtr chan, OSType selector, const void *infoPtr);
OSErr __fastcall SndSetSysBeepState(__int16 sysBeepState);
NumVersion SndSoundManagerVersion(void);
OSStatus __fastcall SortDataBrowserContainer(ControlRef browser, DataBrowserItemID container, Boolean sortChildren);
ComponentResult __fastcall SoundComponentAddSource(ComponentInstance ti, SoundSource *sourceID);
ComponentResult __fastcall SoundComponentGetInfo(ComponentInstance ti, SoundSource sourceID, OSType selector, void *infoPtr);
ComponentResult __fastcall SoundComponentGetSource(ComponentInstance ti, SoundSource sourceID, ComponentInstance *source);
ComponentResult __fastcall SoundComponentGetSourceData(ComponentInstance ti, SoundComponentDataPtr *sourceData);
ComponentResult __fastcall SoundComponentInitOutputDevice(ComponentInstance ti, int actions);
ComponentResult __fastcall SoundComponentPauseSource(ComponentInstance ti, __int16 count, SoundSource *sources);
ComponentResult __fastcall SoundComponentPlaySourceBuffer(ComponentInstance ti, SoundSource sourceID, SoundParamBlockPtr pb, int actions);
ComponentResult __fastcall SoundComponentRemoveSource(ComponentInstance ti, SoundSource sourceID);
ComponentResult __fastcall SoundComponentSetInfo(ComponentInstance ti, SoundSource sourceID, OSType selector, void *infoPtr);
ComponentResult __fastcall SoundComponentSetOutput(ComponentInstance ti, SoundComponentDataPtr requested, SoundComponentDataPtr *actual);
ComponentResult __fastcall SoundComponentSetSource(ComponentInstance ti, SoundSource sourceID, ComponentInstance source);
ComponentResult __fastcall SoundComponentStartSource(ComponentInstance ti, __int16 count, SoundSource *sources);
ComponentResult __fastcall SoundComponentStopSource(ComponentInstance ti, __int16 count, SoundSource *sources);
OSErr __fastcall SoundConverterBeginConversion(SoundConverter sc);
OSErr __fastcall SoundConverterClose(SoundConverter sc);
OSErr __fastcall SoundConverterConvertBuffer(SoundConverter sc, const void *inputPtr, unsigned int inputFrames, void *outputPtr, unsigned int *outputFrames, unsigned int *outputBytes);
OSErr __fastcall SoundConverterEndConversion(SoundConverter sc, void *outputPtr, unsigned int *outputFrames, unsigned int *outputBytes);
OSErr __fastcall SoundConverterFillBuffer(SoundConverter sc, SoundConverterFillBufferDataUPP fillBufferDataUPP, void *fillBufferDataRefCon, void *outputBuffer, unsigned int outputBufferByteSize, unsigned int *bytesWritten, unsigned int *framesWritten, unsigned int *outputFlags);
OSErr __fastcall SoundConverterGetBufferSizes(SoundConverter sc, unsigned int inputBytesTarget, unsigned int *inputFrames, unsigned int *inputBytes, unsigned int *outputBytes);
OSErr __fastcall SoundConverterGetInfo(SoundConverter sc, OSType selector, void *infoPtr);
OSErr __fastcall SoundConverterOpen(const SoundComponentData *inputFormat, const SoundComponentData *outputFormat, SoundConverter *sc);
OSErr __fastcall SoundConverterSetInfo(SoundConverter sc, OSType selector, void *infoPtr);
OSErr __fastcall SoundManagerGetInfo(OSType selector, void *infoPtr);
OSErr __fastcall SoundManagerSetInfo(OSType selector, const void *infoPtr);
void __fastcall SpaceExtra(Fixed extra);
OSErr __fastcall SpeakBuffer(SpeechChannel chan, const void *textBuf, unsigned int textBytes, int controlFlags);
OSErr __fastcall SpeakString(ConstStr255Param textToBeSpoken);
OSErr __fastcall SpeakText(SpeechChannel chan, const void *textBuf, unsigned int textBytes);
__int16 SpeechBusy(void);
__int16 SpeechBusySystemWide(void);
NumVersion SpeechManagerVersion(void);
void SpinDownHardDisk(void);
int StackSpace(void);
OSErr __fastcall StandardAlert(AlertType inAlertType, ConstStr255Param inError, ConstStr255Param inExplanation, const AlertStdAlertParamRec *inAlertParam, SInt16 *outItemHit);
OSStatus __fastcall StandardGlyphs(void *dataStream, ByteCount size);
void __fastcall StdArc(GrafVerb verb, const Rect *r, __int16 startAngle, __int16 arcAngle);
void __fastcall StdBits(const BitMap *srcBits, const Rect *srcRect, const Rect *dstRect, __int16 mode, RgnHandle maskRgn);
void __fastcall StdComment(__int16 kind, __int16 dataSize, Handle dataHandle);
Boolean __fastcall StdFilterProc(DialogRef theDialog, EventRecord *event, DialogItemIndex *itemHit);
void __fastcall StdGetPic(void *dataPtr, __int16 byteCount);
void __fastcall StdLine(Point newPt);
void __fastcall StdOpcode(const Rect *fromRect, const Rect *toRect, UInt16 opcode, SInt16 version);
void __fastcall StdOval(GrafVerb verb, const Rect *r);
void __fastcall StdPoly(GrafVerb verb, PolyHandle poly);
void __fastcall StdPutPic(const void *dataPtr, __int16 byteCount);
void __fastcall StdRRect(GrafVerb verb, const Rect *r, __int16 ovalWidth, __int16 ovalHeight);
void __fastcall StdRect(GrafVerb verb, const Rect *r);
void __fastcall StdRgn(GrafVerb verb, RgnHandle rgn);
void __fastcall StdText(__int16 count, const void *textAddr, Point numer, Point denom);
__int16 __fastcall StdTxMeas(__int16 byteCount, const void *textAddr, Point *numer, Point *denom, FontInfo *info);
Boolean StillDown(void);
DialogItemIndex __fastcall StopAlert(SInt16 alertID, ModalFilterUPP modalFilter);
OSErr __fastcall StopSpeech(SpeechChannel chan);
OSErr __fastcall StopSpeechAt(SpeechChannel chan, int whereToStop);
OSStatus __fastcall StoreWindowIntoCollection(WindowRef window, Collection collection);
__int16 __fastcall StringOrder(ConstStr255Param aStr, ConstStr255Param bStr, ScriptCode aScript, ScriptCode bScript, LangCode aLang, LangCode bLang);
StringToDateStatus __fastcall StringToDate(Ptr textPtr, int textLen, DateCachePtr theCache, int *lengthUsed, LongDateRec *dateTime);
FormatStatus __fastcall StringToExtended(ConstStr255Param source, const NumFormatString *myCanonical, const NumberParts *partsTable, extended80 *x);
FormatStatus __fastcall StringToFormatRec(ConstStr255Param inString, const NumberParts *partsTable, NumFormatString *outString);
void __fastcall StringToNum(ConstStr255Param theString, int *theNum);
StringToDateStatus __fastcall StringToTime(Ptr textPtr, int textLen, DateCachePtr theCache, int *lengthUsed, LongDateRec *dateTime);
__int16 __fastcall StringWidth(ConstStr255Param s);
void __fastcall StripDiacritics(Ptr textPtr, __int16 len, ScriptCode script);
void __fastcall StuffHex(void *thingPtr, ConstStr255Param s);
StyledLineBreakCode __fastcall StyledLineBreak(Ptr textPtr, int textLen, int textStart, int textEnd, int flags, Fixed *textWidth, int *textOffset);
AbsoluteTime __fastcall SubAbsoluteFromAbsolute(AbsoluteTime leftAbsoluteTime, AbsoluteTime rightAbsoluteTime);
AbsoluteTime __fastcall SubDurationFromAbsolute(Duration duration, AbsoluteTime absoluteTime);
AbsoluteTime __fastcall SubNanosecondsFromAbsolute(Nanoseconds nanoseconds, AbsoluteTime absoluteTime);
void __fastcall SubPt(Point src, Point *dst);
Handle __fastcall SwapPortPicSaveHandle(CGrafPtr port, Handle inPicSaveHdl);
Handle __fastcall SwapPortPolySaveHandle(CGrafPtr port, Handle inPolySaveHdl);
Handle __fastcall SwapPortRegionSaveHandle(CGrafPtr port, Handle inRegionSaveHdl);
UInt32 __fastcall SwapQDTextFlags(UInt32 newFlags);
OSStatus __fastcall SyncCGContextOriginWithPort(CGContextRef inContext, CGrafPtr port);
void __fastcall SysBeep(__int16 duration);
void SysBreak(void);
void __fastcall SysBreakFunc(ConstStr255Param debuggerMsg);
void __fastcall SysBreakStr(ConstStr255Param debuggerMsg);
void __fastcall SysError(__int16 errorCode);
OSStatus __fastcall SystemSoundGetActionID(const FSRef *userFile, SystemSoundActionID *outAction);
void __fastcall SystemSoundPlay(SystemSoundActionID inAction);
OSStatus __fastcall SystemSoundRemoveActionID(SystemSoundActionID inAction);
MACRO__A _T;
void __fastcall TEActivate(TEHandle hTE);
void __fastcall TEAutoView(Boolean fAuto, TEHandle hTE);
OSStatus __fastcall TECClearConverterContextInfo(TECObjectRef encodingConverter);
OSStatus __fastcall TECClearSnifferContextInfo(TECSnifferObjectRef encodingSniffer);
OSStatus __fastcall TECConvertText(TECObjectRef encodingConverter, ConstTextPtr inputBuffer, ByteCount inputBufferLength, ByteCount *actualInputLength, TextPtr outputBuffer, ByteCount outputBufferLength, ByteCount *actualOutputLength);
OSStatus __fastcall TECConvertTextToMultipleEncodings(TECObjectRef encodingConverter, ConstTextPtr inputBuffer, ByteCount inputBufferLength, ByteCount *actualInputLength, TextPtr outputBuffer, ByteCount outputBufferLength, ByteCount *actualOutputLength, TextEncodingRun outEncodingsBuffer[], ItemCount maxOutEncodingRuns, ItemCount *actualOutEncodingRuns);
OSStatus __fastcall TECCountAvailableSniffers(ItemCount *numberOfEncodings);
OSStatus __fastcall TECCountAvailableTextEncodings(ItemCount *numberEncodings);
OSStatus __fastcall TECCountDestinationTextEncodings(TextEncoding inputEncoding, ItemCount *numberOfEncodings);
OSStatus __fastcall TECCountDirectTextEncodingConversions(ItemCount *numberOfEncodings);
OSStatus __fastcall TECCountMailTextEncodings(RegionCode locale, ItemCount *numberEncodings);
OSStatus __fastcall TECCountSubTextEncodings(TextEncoding inputEncoding, ItemCount *numberOfEncodings);
OSStatus __fastcall TECCountWebTextEncodings(RegionCode locale, ItemCount *numberEncodings);
OSStatus __fastcall TECCreateConverter(TECObjectRef *newEncodingConverter, TextEncoding inputEncoding, TextEncoding outputEncoding);
OSStatus __fastcall TECCreateConverterFromPath(TECObjectRef *newEncodingConverter, const TextEncoding inPath[], ItemCount inEncodings);
OSStatus __fastcall TECCreateOneToManyConverter(TECObjectRef *newEncodingConverter, TextEncoding inputEncoding, ItemCount numOutputEncodings, const TextEncoding outputEncodings[]);
OSStatus __fastcall TECCreateSniffer(TECSnifferObjectRef *encodingSniffer, TextEncoding testEncodings[], ItemCount numTextEncodings);
OSStatus __fastcall TECDisposeConverter(TECObjectRef newEncodingConverter);
OSStatus __fastcall TECDisposeSniffer(TECSnifferObjectRef encodingSniffer);
OSStatus __fastcall TECFlushMultipleEncodings(TECObjectRef encodingConverter, TextPtr outputBuffer, ByteCount outputBufferLength, ByteCount *actualOutputLength, TextEncodingRun outEncodingsBuffer[], ItemCount maxOutEncodingRuns, ItemCount *actualOutEncodingRuns);
OSStatus __fastcall TECFlushText(TECObjectRef encodingConverter, TextPtr outputBuffer, ByteCount outputBufferLength, ByteCount *actualOutputLength);
OSStatus __fastcall TECGetAvailableSniffers(TextEncoding availableSniffers[], ItemCount maxAvailableSniffers, ItemCount *actualAvailableSniffers);
OSStatus __fastcall TECGetAvailableTextEncodings(TextEncoding availableEncodings[], ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
OSStatus __fastcall TECGetDestinationTextEncodings(TextEncoding inputEncoding, TextEncoding destinationEncodings[], ItemCount maxDestinationEncodings, ItemCount *actualDestinationEncodings);
OSStatus __fastcall TECGetDirectTextEncodingConversions(TECConversionInfo availableConversions[], ItemCount maxAvailableConversions, ItemCount *actualAvailableConversions);
OSStatus __fastcall TECGetEncodingList(TECObjectRef encodingConverter, ItemCount *numEncodings, Handle *encodingList);
OSStatus __fastcall TECGetInfo(TECInfoHandle *tecInfo);
OSStatus __fastcall TECGetMailTextEncodings(RegionCode locale, TextEncoding availableEncodings[], ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
OSStatus __fastcall TECGetSubTextEncodings(TextEncoding inputEncoding, TextEncoding subEncodings[], ItemCount maxSubEncodings, ItemCount *actualSubEncodings);
OSStatus __fastcall TECGetTextEncodingFromInternetName(TextEncoding *textEncoding, ConstStr255Param encodingName);
OSStatus __fastcall TECGetTextEncodingInternetName(TextEncoding textEncoding, Str255 encodingName);
OSStatus __fastcall TECGetWebTextEncodings(RegionCode locale, TextEncoding availableEncodings[], ItemCount maxAvailableEncodings, ItemCount *actualAvailableEncodings);
OSStatus __fastcall TECSniffTextEncoding(TECSnifferObjectRef encodingSniffer, TextPtr inputBuffer, ByteCount inputBufferLength, TextEncoding testEncodings[], ItemCount numTextEncodings, ItemCount numErrsArray[], ItemCount maxErrs, ItemCount numFeaturesArray[], ItemCount maxFeatures);
void __fastcall TECalText(TEHandle hTE);
void __fastcall TEClick(Point pt, Boolean fExtend, TEHandle h);
Boolean __fastcall TEContinuousStyle(__int16 *mode, TextStyle *aStyle, TEHandle hTE);
void __fastcall TECopy(TEHandle hTE);
void __fastcall TECustomHook(TEIntHook which, UniversalProcPtr *addr, TEHandle hTE);
void __fastcall TECut(TEHandle hTE);
void __fastcall TEDeactivate(TEHandle hTE);
void __fastcall TEDelete(TEHandle hTE);
void __fastcall TEDispose(TEHandle hTE);
__int16 __fastcall TEFeatureFlag(__int16 feature, __int16 action, TEHandle hTE);
OSErr TEFromScrap(void);
TEDoTextUPP TEGetDoTextHook(void);
TEFindWordUPP TEGetFindWordHook(void);
int __fastcall TEGetHeight(int endLine, int startLine, TEHandle hTE);
OSErr __fastcall TEGetHiliteRgn(RgnHandle region, TEHandle hTE);
__int16 __fastcall TEGetOffset(Point pt, TEHandle hTE);
Point __fastcall TEGetPoint(__int16 offset, TEHandle hTE);
TERecalcUPP TEGetRecalcHook(void);
Handle TEGetScrapHandle(void);
int TEGetScrapLength(void);
void __fastcall TEGetStyle(__int16 offset, TextStyle *theStyle, __int16 *lineHeight, __int16 *fontAscent, TEHandle hTE);
TEStyleHandle __fastcall TEGetStyleHandle(TEHandle hTE);
StScrpHandle __fastcall TEGetStyleScrapHandle(TEHandle hTE);
CharsHandle __fastcall TEGetText(TEHandle hTE);
void __fastcall TEIdle(TEHandle hTE);
void __fastcall TEInsert(const void *text, int length, TEHandle hTE);
void __fastcall TEKey(CharParameter key, TEHandle hTE);
TEHandle __fastcall TENew(const Rect *destRect, const Rect *viewRect);
int __fastcall TENumStyles(int rangeStart, int rangeEnd, TEHandle hTE);
void __fastcall TEPaste(TEHandle hTE);
void __fastcall TEPinScroll(__int16 dh, __int16 dv, TEHandle hTE);
void __fastcall TEReplaceStyle(__int16 mode, const TextStyle *oldStyle, const TextStyle *newStyle, Boolean fRedraw, TEHandle hTE);
Handle TEScrapHandle(void);
void __fastcall TEScroll(__int16 dh, __int16 dv, TEHandle hTE);
void __fastcall TESelView(TEHandle hTE);
void __fastcall TESetAlignment(__int16 just, TEHandle hTE);
void __fastcall TESetClickLoop(TEClickLoopUPP clikProc, TEHandle hTE);
void __fastcall TESetDoTextHook(TEDoTextUPP value);
void __fastcall TESetFindWordHook(TEFindWordUPP value);
void __fastcall TESetRecalcHook(TERecalcUPP value);
void __fastcall TESetScrapHandle(Handle value);
void __fastcall TESetScrapLength(int length);
void __fastcall TESetSelect(int selStart, int selEnd, TEHandle hTE);
void __fastcall TESetStyle(__int16 mode, const TextStyle *newStyle, Boolean fRedraw, TEHandle hTE);
void __fastcall TESetStyleHandle(TEStyleHandle theHandle, TEHandle hTE);
void __fastcall TESetText(const void *text, int length, TEHandle hTE);
void __fastcall TEStyleInsert(const void *text, int length, StScrpHandle hST, TEHandle hTE);
TEHandle __fastcall TEStyleNew(const Rect *destRect, const Rect *viewRect);
void __fastcall TEStylePaste(TEHandle hTE);
void __fastcall TETextBox(const void *text, int length, const Rect *box, __int16 just);
OSErr TEToScrap(void);
void __fastcall TEUpdate(const Rect *rUpdate, TEHandle hTE);
void __fastcall TEUseStyleScrap(int rangeStart, int rangeEnd, StScrpHandle newStyles, Boolean fRedraw, TEHandle hTE);
TSMDocumentID TSMGetActiveDocument(void);
OSStatus __fastcall TSMGetDocumentProperty(TSMDocumentID docID, OSType propertyTag, UInt32 bufferSize, UInt32 *actualSize, void *propertyBuffer);
OSStatus __fastcall TSMRemoveDocumentProperty(TSMDocumentID docID, OSType propertyTag);
OSStatus __fastcall TSMSetDocumentProperty(TSMDocumentID docID, OSType propertyTag, UInt32 propertySize, void *propertyData);
OSStatus __fastcall TSMSetInlineInputRegion(TSMDocumentID inTSMDocument, WindowRef inWindow, RgnHandle inRegion);
OSStatus __fastcall TXNActivate(TXNObject iTXNObject, TXNFrameID iTXNFrameID, TXNScrollBarState iActiveState);
void __fastcall TXNAdjustCursor(TXNObject iTXNObject, RgnHandle ioCursorRgn);
OSStatus __fastcall TXNAttachObjectToWindow(TXNObject iTXNObject, GWorldPtr iWindow, Boolean iIsActualWindow);
Boolean __fastcall TXNCanRedo(TXNObject iTXNObject, TXNActionKey *oTXNActionKey);
Boolean __fastcall TXNCanUndo(TXNObject iTXNObject, TXNActionKey *oTXNActionKey);
OSStatus __fastcall TXNClear(TXNObject iTXNObject);
OSStatus __fastcall TXNClearActionChangeCount(TXNObject iTXNObject, TXNCountOptions iOptions);
OSStatus __fastcall TXNClearUndo(TXNObject iTXNObject);
void __fastcall TXNClick(TXNObject iTXNObject, const EventRecord *iEvent);
OSStatus TXNConvertFromPublicScrap(void);
OSStatus TXNConvertToPublicScrap(void);
OSStatus __fastcall TXNCopy(TXNObject iTXNObject);
OSStatus __fastcall TXNCountRunsInRange(TXNObject iTXNObject, TXNOffset iStartOffset, TXNOffset iEndOffset, ItemCount *oRunCount);
OSStatus __fastcall TXNCut(TXNObject iTXNObject);
ByteCount __fastcall TXNDataSize(TXNObject iTXNObject);
void __fastcall TXNDeleteObject(TXNObject iTXNObject);
OSStatus __fastcall TXNDisposeFontMenuObject(TXNFontMenuObject iTXNFontMenuObject);
OSStatus __fastcall TXNDoFontMenuSelection(TXNObject iTXNObject, TXNFontMenuObject iTXNFontMenuObject, SInt16 iMenuID, SInt16 iMenuItem);
OSErr __fastcall TXNDragReceiver(TXNObject iTXNObject, TXNFrameID iTXNFrameID, WindowRef iWindow, DragReference iDragReference, Boolean iDifferentObjectSameWindow);
OSErr __fastcall TXNDragTracker(TXNObject iTXNObject, TXNFrameID iTXNFrameID, DragTrackingMessage iMessage, WindowRef iWindow, DragReference iDragReference, Boolean iDifferentObjectSameWindow);
void __fastcall TXNDraw(TXNObject iTXNObject, GWorldPtr iDrawPort);
OSStatus __fastcall TXNDrawCFStringTextBox(CFStringRef iText, Rect *ioBox, ATSUStyle iStyle, const TXNTextBoxOptionsData *iOptions);
OSStatus __fastcall TXNDrawUnicodeTextBox(const UniChar iText[], UniCharCount iLen, Rect *ioBox, ATSUStyle iStyle, const TXNTextBoxOptionsData *iOptions);
OSStatus __fastcall TXNEchoMode(TXNObject iTXNObject, UniChar iEchoCharacter, TextEncoding iEncoding, Boolean iOn);
OSStatus __fastcall TXNFind(TXNObject iTXNObject, const TXNMatchTextRecord *iMatchTextDataPtr, TXNDataType iDataType, TXNMatchOptions iMatchOptions, TXNOffset iStartSearchOffset, TXNOffset iEndSearchOffset, TXNFindUPP iFindProc, SInt32 iRefCon, TXNOffset *oStartMatchOffset, TXNOffset *oEndMatchOffset);
void __fastcall TXNFocus(TXNObject iTXNObject, Boolean iBecomingFocused);
void __fastcall TXNForceUpdate(TXNObject iTXNObject);
OSStatus __fastcall TXNGetActionChangeCount(TXNObject iTXNObject, TXNCountOptions iOptions, ItemCount *oCount);
ItemCount __fastcall TXNGetChangeCount(TXNObject iTXNObject);
OSStatus __fastcall TXNGetContinuousTypeAttributes(TXNObject iTxnObject, TXNContinuousFlags *oContinuousFlags, ItemCount iCount, TXNTypeAttributes ioTypeAttributes[]);
OSStatus __fastcall TXNGetData(TXNObject iTXNObject, TXNOffset iStartOffset, TXNOffset iEndOffset, Handle *oDataHandle);
OSStatus __fastcall TXNGetDataEncoded(TXNObject iTXNObject, TXNOffset iStartOffset, TXNOffset iEndOffset, Handle *oDataHandle, TXNDataType iEncoding);
OSStatus __fastcall TXNGetFontDefaults(TXNObject iTXNObject, ItemCount *ioCount, TXNMacOSPreferredFontDescription ioFontDefaults[]);
OSStatus __fastcall TXNGetFontMenuHandle(TXNFontMenuObject iTXNFontMenuObject, MenuRef *oFontMenuHandle);
OSStatus __fastcall TXNGetIndexedRunInfoFromRange(TXNObject iTXNObject, ItemCount iIndex, TXNOffset iStartOffset, TXNOffset iEndOffset, TXNOffset *oRunStartOffset, TXNOffset *oRunEndOffset, TXNDataType *oRunDataType, ItemCount iTypeAttributeCount, TXNTypeAttributes *ioTypeAttributes);
OSStatus __fastcall TXNGetLineCount(TXNObject iTXNObject, ItemCount *oLineTotal);
OSStatus __fastcall TXNGetLineMetrics(TXNObject iTXNObject, UInt32 iLineNumber, Fixed *oLineWidth, Fixed *oLineHeight);
OSStatus __fastcall TXNGetRectBounds(TXNObject iTXNObject, Rect *oViewRect, TXNLongRect *oDestinationRect, TXNLongRect *oTextRect);
void __fastcall TXNGetSelection(TXNObject iTXNObject, TXNOffset *oStartOffset, TXNOffset *oEndOffset);
UInt32 __fastcall TXNGetSleepTicks(TXNObject iTXNObject);
OSStatus __fastcall TXNGetTXNObjectControls(TXNObject iTXNObject, ItemCount iControlCount, const TXNControlTag iControlTags[], TXNControlData oControlData[]);
void __fastcall TXNGetViewRect(TXNObject iTXNObject, Rect *oViewRect);
void __fastcall TXNGrowWindow(TXNObject iTXNObject, const EventRecord *iEvent);
void __fastcall TXNIdle(TXNObject iTXNObject);
OSStatus __fastcall TXNInitTextension(const TXNMacOSPreferredFontDescription iDefaultFonts[], ItemCount iCountDefaultFonts, TXNInitOptions iUsageFlags);
OSStatus __fastcall TXNIsObjectAttachedToSpecificWindow(TXNObject iTXNObject, WindowRef iWindow, Boolean *oAttached);
Boolean __fastcall TXNIsObjectAttachedToWindow(TXNObject iTXNObject);
Boolean TXNIsScrapPastable(void);
Boolean __fastcall TXNIsSelectionEmpty(TXNObject iTXNObject);
void __fastcall TXNKeyDown(TXNObject iTXNObject, const EventRecord *iEvent);
OSStatus __fastcall TXNNewFontMenuObject(MenuRef iFontMenuHandle, SInt16 iMenuID, SInt16 iStartHierMenuID, TXNFontMenuObject *oTXNFontMenuObject);
OSStatus __fastcall TXNNewObject(const FSSpec *iFileSpec, WindowRef iWindow, const Rect *iFrame, TXNFrameOptions iFrameOptions, TXNFrameType iFrameType, TXNFileType iFileType, TXNPermanentTextEncodingType iPermanentEncoding, TXNObject *oTXNObject, TXNFrameID *oTXNFrameID, TXNObjectRefcon iRefCon);
OSStatus __fastcall TXNOffsetToPoint(TXNObject iTXNObject, TXNOffset iOffset, Point *oPoint);
OSStatus __fastcall TXNPageSetup(TXNObject iTXNObject);
OSStatus __fastcall TXNPaste(TXNObject iTXNObject);
OSStatus __fastcall TXNPointToOffset(TXNObject iTXNObject, Point iPoint, TXNOffset *oOffset);
OSStatus __fastcall TXNPrepareFontMenu(TXNObject iTXNObject, TXNFontMenuObject iTXNFontMenuObject);
OSStatus __fastcall TXNPrint(TXNObject iTXNObject);
void __fastcall TXNRecalcTextLayout(TXNObject iTXNObject);
void __fastcall TXNRedo(TXNObject iTXNObject);
void __fastcall TXNRegisterScrollInfoProc(TXNObject iTXNObject, TXNScrollInfoUPP iTXNScrollInfoUPP, SInt32 iRefCon);
void __fastcall TXNResizeFrame(TXNObject iTXNObject, UInt32 iWidth, UInt32 iHeight, TXNFrameID iTXNFrameID);
OSStatus __fastcall TXNRevert(TXNObject iTXNObject);
OSStatus __fastcall TXNSave(TXNObject iTXNObject, TXNFileType iType, OSType iResType, TXNPermanentTextEncodingType iPermanentEncoding, const FSSpec *iFileSpecification, SInt16 iDataReference, SInt16 iResourceReference);
OSStatus __fastcall TXNScroll(TXNObject iTXNObject, TXNScrollUnit iVerticalScrollUnit, TXNScrollUnit iHorizontalScrollUnit, SInt32 *ioVerticalDelta, SInt32 *ioHorizontalDelta);
void __fastcall TXNSelectAll(TXNObject iTXNObject);
OSStatus __fastcall TXNSetBackground(TXNObject iTXNObject, const TXNBackground *iBackgroundInfo);
OSStatus __fastcall TXNSetData(TXNObject iTXNObject, TXNDataType iDataType, const void *iDataPtr, ByteCount iDataSize, TXNOffset iStartOffset, TXNOffset iEndOffset);
OSStatus __fastcall TXNSetDataFromFile(TXNObject iTXNObject, SInt16 iFileRefNum, OSType iFileType, ByteCount iFileLength, TXNOffset iStartOffset, TXNOffset iEndOffset);
OSStatus __fastcall TXNSetFontDefaults(TXNObject iTXNObject, ItemCount iCount, const TXNMacOSPreferredFontDescription iFontDefaults[]);
void __fastcall TXNSetFrameBounds(TXNObject iTXNObject, SInt32 iTop, SInt32 iLeft, SInt32 iBottom, SInt32 iRight, TXNFrameID iTXNFrameID);
void __fastcall TXNSetRectBounds(TXNObject iTXNObject, const Rect *iViewRect, const TXNLongRect *iDestinationRect, Boolean iUpdate);
OSStatus __fastcall TXNSetSelection(TXNObject iTXNObject, TXNOffset iStartOffset, TXNOffset iEndOffset);
OSStatus __fastcall TXNSetTXNObjectControls(TXNObject iTXNObject, Boolean iClearAll, ItemCount iControlCount, const TXNControlTag iControlTags[], const TXNControlData iControlData[]);
OSStatus __fastcall TXNSetTypeAttributes(TXNObject iTXNObject, ItemCount iAttrCount, const TXNTypeAttributes iAttributes[], TXNOffset iStartOffset, TXNOffset iEndOffset);
void __fastcall TXNSetViewRect(TXNObject iTXNObject, const Rect *iViewRect);
void __fastcall TXNShowSelection(TXNObject iTXNObject, Boolean iShowEnd);
void TXNTerminateTextension(void);
void __fastcall TXNUndo(TXNObject iTXNObject);
void __fastcall TXNUpdate(TXNObject iTXNObject);
TXNVersionValue __fastcall TXNVersionInformation(TXNFeatureBits *oFeatureFlags);
void __fastcall TXNZoomWindow(TXNObject iTXNObject, SInt16 iPart);
UInt32 TaskLevel(void);
void __fastcall TempDisposeHandle(Handle h, OSErr *resultCode);
int TempFreeMem(void);
void __fastcall TempHLock(Handle h, OSErr *resultCode);
void __fastcall TempHUnlock(Handle h, OSErr *resultCode);
Size __fastcall TempMaxMem(Size *grow);
Handle __fastcall TempNewHandle(Size logicalSize, OSErr *resultCode);
Ptr TempTopMem(void);
ComponentResult __fastcall TerminateTextService(ComponentInstance ts);
Boolean __fastcall TestAndClear(UInt32 bit, UInt8 *startAddress);
Boolean __fastcall TestAndSet(UInt32 bit, UInt8 *startAddress);
ControlPartCode __fastcall TestControl(ControlRef theControl, Point testPoint);
Boolean __fastcall TestDeviceAttribute(GDHandle gdh, __int16 attribute);
void __fastcall TextFace(StyleParameter face);
void __fastcall TextFont(__int16 font);
void __fastcall TextMode(__int16 mode);
__int16 __fastcall TextOrder(const void *aPtr, const void *bPtr, __int16 aLen, __int16 bLen, ScriptCode aScript, ScriptCode bScript, LangCode aLang, LangCode bLang);
ComponentResult __fastcall TextServiceEventRef(ComponentInstance ts, EventRef event);
void __fastcall TextSize(__int16 size);
OSErr __fastcall TextToPhonemes(SpeechChannel chan, const void *textBuf, unsigned int textBytes, Handle phonemeBuf, int *phonemeBytes);
__int16 __fastcall TextWidth(const void *textBuf, __int16 firstByte, __int16 byteCount);
OSErr ThreadBeginCritical(void);
OSErr __fastcall ThreadCurrentStackSpace(ThreadID thread, UInt32 *freeStack);
OSErr ThreadEndCritical(void);
UInt32 TickCount(void);
void __fastcall TimeString(int dateTime, Boolean wantSeconds, Str255 result, Handle intlHandle);
ToggleResults __fastcall ToggleDate(LongDateTime *lSecs, LongDateField field, DateDelta delta, __int16 ch, const TogglePB *params);
OSStatus __fastcall ToggleDrawer(WindowRef inDrawerWindow);
Ptr TopMem(void);
Boolean __fastcall TrackBox(WindowRef window, Point thePt, WindowPartCode partCode);
ControlPartCode __fastcall TrackControl(ControlRef theControl, Point startPoint, ControlActionUPP actionProc);
OSErr __fastcall TrackDrag(DragRef theDrag, const EventRecord *theEvent, RgnHandle theRegion);
Boolean __fastcall TrackGoAway(WindowRef window, Point thePt);
OSStatus __fastcall TrackMouseLocation(GrafPtr inPort, Point *outPt, MouseTrackingResult *outResult);
OSStatus __fastcall TrackMouseLocationWithOptions(GrafPtr inPort, OptionBits inOptions, EventTimeout inTimeout, Point *outPt, UInt32 *outModifiers, MouseTrackingResult *outResult);
OSStatus __fastcall TrackMouseRegion(GrafPtr inPort, RgnHandle inRegion, Boolean *ioWasInRgn, MouseTrackingResult *outResult);
OSStatus __fastcall TrackWindowProxyDrag(WindowRef window, Point startPt);
OSStatus __fastcall TrackWindowProxyFromExistingDrag(WindowRef window, Point startPt, DragReference drag, RgnHandle inDragOutlineRgn);
OSStatus __fastcall TransitionWindow(WindowRef inWindow, WindowTransitionEffect inEffect, WindowTransitionAction inAction, const Rect *inRect);
OSStatus __fastcall TransitionWindowAndParent(WindowRef inWindow, WindowRef inParentWindow, WindowTransitionEffect inEffect, WindowTransitionAction inAction, const Rect *inRect);
OSErr __fastcall TranslateFile(const FSSpec *sourceDocument, const FSSpec *destinationDocument, const FileTranslationSpec *howToTranslate);
OSErr __fastcall TranslateScrap(GetScrapDataUPP sourceDataGetter, void *sourceDataGetterRefCon, ScrapType destinationFormat, Handle destinationData, __int16 progressDialogID);
OSErr __fastcall TransliterateText(Handle srcHandle, Handle dstHandle, __int16 target, int srcMask, ScriptCode script);
__int16 __fastcall TruncString(__int16 width, Str255 theString, TruncCode truncWhere);
__int16 __fastcall TruncText(__int16 width, Ptr textPtr, __int16 *length, TruncCode truncWhere);
OSStatus __fastcall TruncateForTextToUnicode(ConstTextToUnicodeInfo iTextToUnicodeInfo, ByteCount iSourceLen, ConstLogicalAddress iSourceStr, ByteCount iMaxLen, ByteCount *oTruncatedLen);
OSStatus __fastcall TruncateForUnicodeToText(ConstUnicodeToTextInfo iUnicodeToTextInfo, ByteCount iSourceLen, const UniChar iSourceStr[], OptionBits iControlFlags, ByteCount iMaxLen, ByteCount *oTruncatedLen);
OSStatus __fastcall TruncateThemeText(CFMutableStringRef inString, ThemeFontID inFontID, ThemeDrawState inState, SInt16 inPixelWidthLimit, TruncCode inTruncWhere, Boolean *outTruncated);
void __fastcall TypeSelectClear(TypeSelectRecord *tsr);
__int16 __fastcall TypeSelectCompare(const TypeSelectRecord *tsr, ScriptCode testStringScript, StringPtr testStringPtr);
__int16 __fastcall TypeSelectFindItem(const TypeSelectRecord *tsr, __int16 listSize, TSCode selectMode, IndexToStringUPP getStringProc, void *yourDataPtr);
Boolean __fastcall TypeSelectNewKey(const EventRecord *theEvent, TypeSelectRecord *tsr);
MACRO__A _U;
UInt32 __fastcall U32SetU(UInt64 value);
UInt64 __fastcall U64Add(UInt64 left, UInt64 right);
Boolean __fastcall U64And(UInt64 left, UInt64 right);
UInt64 __fastcall U64BitwiseAnd(UInt64 left, UInt64 right);
UInt64 __fastcall U64BitwiseEor(UInt64 left, UInt64 right);
UInt64 __fastcall U64BitwiseNot(UInt64 value);
UInt64 __fastcall U64BitwiseOr(UInt64 left, UInt64 right);
SInt32 __fastcall U64Compare(UInt64 left, UInt64 right);
UInt64 __fastcall U64Div(UInt64 dividend, UInt64 divisor);
UInt64 __fastcall U64Divide(UInt64 dividend, UInt64 divisor, UInt64 *remainder);
Boolean __fastcall U64Eor(UInt64 left, UInt64 right);
UInt64 U64Max(void);
UInt64 __fastcall U64Mod(UInt64 dividend, UInt64 divisor);
UInt64 __fastcall U64Multiply(UInt64 left, UInt64 right);
Boolean __fastcall U64Not(UInt64 value);
Boolean __fastcall U64Or(UInt64 left, UInt64 right);
UInt64 __fastcall U64Set(SInt32 value);
UInt64 __fastcall U64SetU(UInt32 value);
UInt64 __fastcall U64ShiftLeft(UInt64 value, UInt32 shift);
UInt64 __fastcall U64ShiftRight(UInt64 value, UInt32 shift);
UInt64 __fastcall U64Subtract(UInt64 left, UInt64 right);
OSStatus __fastcall UCCompareCollationKeys(const UCCollationValue *key1Ptr, ItemCount key1Length, const UCCollationValue *key2Ptr, ItemCount key2Length, Boolean *equivalent, SInt32 *order);
OSStatus __fastcall UCCompareText(CollatorRef collatorRef, const UniChar *text1Ptr, UniCharCount text1Length, const UniChar *text2Ptr, UniCharCount text2Length, Boolean *equivalent, SInt32 *order);
OSStatus __fastcall UCCompareTextDefault(UCCollateOptions options, const UniChar *text1Ptr, UniCharCount text1Length, const UniChar *text2Ptr, UniCharCount text2Length, Boolean *equivalent, SInt32 *order);
OSStatus __fastcall UCCompareTextNoLocale(UCCollateOptions options, const UniChar *text1Ptr, UniCharCount text1Length, const UniChar *text2Ptr, UniCharCount text2Length, Boolean *equivalent, SInt32 *order);
OSStatus __fastcall UCConvertCFAbsoluteTimeToLongDateTime(CFAbsoluteTime iCFTime, LongDateTime *oLongDate);
OSStatus __fastcall UCConvertCFAbsoluteTimeToSeconds(CFAbsoluteTime iCFTime, UInt32 *oSeconds);
OSStatus __fastcall UCConvertCFAbsoluteTimeToUTCDateTime(CFAbsoluteTime iCFTime, UTCDateTime *oUTCDate);
OSStatus __fastcall UCConvertLongDateTimeToCFAbsoluteTime(LongDateTime iLongTime, CFAbsoluteTime *oCFTime);
OSStatus __fastcall UCConvertSecondsToCFAbsoluteTime(UInt32 iSeconds, CFAbsoluteTime *oCFTime);
OSStatus __fastcall UCConvertUTCDateTimeToCFAbsoluteTime(const UTCDateTime *iUTCDate, CFAbsoluteTime *oCFTime);
OSStatus __fastcall UCCreateCollator(LocaleRef locale, LocaleOperationVariant opVariant, UCCollateOptions options, CollatorRef *collatorRef);
OSStatus __fastcall UCCreateTextBreakLocator(LocaleRef locale, LocaleOperationVariant opVariant, UCTextBreakType breakTypes, TextBreakLocatorRef *breakRef);
OSStatus __fastcall UCDisposeCollator(CollatorRef *collatorRef);
OSStatus __fastcall UCDisposeTextBreakLocator(TextBreakLocatorRef *breakRef);
OSStatus __fastcall UCFindTextBreak(TextBreakLocatorRef breakRef, UCTextBreakType breakType, UCTextBreakOptions options, const UniChar *textPtr, UniCharCount textLength, UniCharArrayOffset startOffset, UniCharArrayOffset *breakOffset);
OSStatus __fastcall UCGetCharProperty(const UniChar *charPtr, UniCharCount textLength, UCCharPropertyType propType, UCCharPropertyValue *propValue);
OSStatus __fastcall UCGetCollationKey(CollatorRef collatorRef, const UniChar *textPtr, UniCharCount textLength, ItemCount maxKeySize, ItemCount *actualKeySize, UCCollationValue collationKey[]);
static UnicodeScalarValue __fastcall UCGetUnicodeScalarValueForSurrogatePair(UniChar surrogateHigh, UniChar surrogateLow);
static Boolean __fastcall UCIsSurrogateHighCharacter(UniChar character);
static Boolean __fastcall UCIsSurrogateLowCharacter(UniChar character);
OSStatus __fastcall UCKeyTranslate(const UCKeyboardLayout *keyLayoutPtr, UInt16 virtualKeyCode, UInt16 keyAction, UInt32 modifierKeyState, UInt32 keyboardType, OptionBits keyTranslateOptions, UInt32 *deadKeyState, UniCharCount maxStringLength, UniCharCount *actualStringLength, UniChar unicodeString[]);
SInt64 __fastcall UInt64ToSInt64(UInt64 value);
OSStatus __fastcall URLAbort(URLReference urlRef);
OSStatus __fastcall URLDisposeReference(URLReference urlRef);
OSStatus __fastcall URLDownload(URLReference urlRef, FSSpec *destination, Handle destinationHandle, URLOpenFlags openFlags, URLSystemEventUPP eventProc, void *userContext);
OSStatus __fastcall URLGetBuffer(URLReference urlRef, void **buffer, Size *bufferSize);
OSStatus __fastcall URLGetCurrentState(URLReference urlRef, URLState *state);
OSStatus __fastcall URLGetDataAvailable(URLReference urlRef, Size *dataSize);
OSStatus __fastcall URLGetError(URLReference urlRef, OSStatus *urlError);
OSStatus __fastcall URLGetFileInfo(StringPtr fName, OSType *fType, OSType *fCreator);
OSStatus __fastcall URLGetProperty(URLReference urlRef, const char *property, void *propertyBuffer, Size bufferSize);
OSStatus __fastcall URLGetPropertySize(URLReference urlRef, const char *property, Size *propertySize);
OSStatus __fastcall URLGetURLAccessVersion(UInt32 *returnVers);
OSStatus URLIdle(void);
OSStatus __fastcall URLNewReference(const char *url, URLReference *urlRef);
OSStatus __fastcall URLOpen(URLReference urlRef, FSSpec *fileSpec, URLOpenFlags openFlags, URLNotifyUPP notifyProc, URLEventMask eventRegister, void *userContext);
OSStatus __fastcall URLReleaseBuffer(URLReference urlRef, void *buffer);
OSStatus __fastcall URLSetProperty(URLReference urlRef, const char *property, void *propertyBuffer, Size bufferSize);
OSStatus __fastcall URLSimpleDownload(const char *url, FSSpec *destination, Handle destinationHandle, URLOpenFlags openFlags, URLSystemEventUPP eventProc, void *userContext);
OSStatus __fastcall URLSimpleUpload(const char *url, const FSSpec *source, URLOpenFlags openFlags, URLSystemEventUPP eventProc, void *userContext);
OSStatus __fastcall URLUpload(URLReference urlRef, const FSSpec *source, URLOpenFlags openFlags, URLSystemEventUPP eventProc, void *userContext);
OSErr __fastcall UncaptureComponent(Component aComponent);
OSErr __fastcall UnflattenCollection(Collection c, CollectionFlattenUPP flattenProc, void *refCon);
OSErr __fastcall UnflattenCollectionFromHdl(Collection aCollection, Handle flattened);
OSErr __fastcall UnholdMemory(void *address, unsigned int count);
void __fastcall UnionRect(const Rect *src1, const Rect *src2, Rect *dstRect);
void __fastcall UnionRgn(RgnHandle srcRgnA, RgnHandle srcRgnB, RgnHandle dstRgn);
__int16 __fastcall Unique1ID(ResType theType);
__int16 __fastcall UniqueID(ResType theType);
OSStatus UnloadScrap(void);
void __fastcall UnlockPixels(PixMapHandle pm);
OSErr __fastcall UnlockPortBits(GrafPtr port);
OSErr __fastcall UnmountVol(ConstStr63Param volName, __int16 vRefNum);
void __fastcall UnpackBits(Ptr *srcPtr, Ptr *dstPtr, __int16 dstBytes);
OSStatus UnregisterAppearanceClient(void);
OSErr __fastcall UnregisterComponent(Component aComponent);
OSStatus __fastcall UnregisterEventHotKey(EventHotKeyRef inHotKey);
OSErr __fastcall UnregisterIconRef(OSType creator, OSType iconType);
OSStatus __fastcall UnregisterToolboxObjectClass(ToolboxObjectClassRef inClassRef);
UnsignedFixed __fastcall UnsignedFixedMulDiv(UnsignedFixed value, UnsignedFixed multiplier, UnsignedFixed divisor);
AbsoluteTime UpTime(void);
OSErr __fastcall UpdateAlias(const FSSpec *fromFile, const FSSpec *target, AliasHandle alias, Boolean *wasChanged);
OSStatus __fastcall UpdateCollapsedWindowDockTile(WindowRef inWindow);
void __fastcall UpdateControls(WindowRef inWindow, RgnHandle inUpdateRegion);
OSStatus __fastcall UpdateDataBrowserItems(ControlRef browser, DataBrowserItemID container, UInt32 numItems, const DataBrowserItemID *items, DataBrowserPropertyID preSortProperty, DataBrowserPropertyID propertyID);
void __fastcall UpdateDialog(DialogRef theDialog, RgnHandle updateRgn);
OSErr __fastcall UpdateDragHilite(DragRef theDrag, RgnHandle updateRgn);
GWorldFlags __fastcall UpdateGWorld(GWorldPtr *offscreenGWorld, __int16 pixelDepth, const Rect *boundsRect, CTabHandle cTable, GDHandle aGDevice, GWorldFlags flags);
OSErr __fastcall UpdateIconRef(IconRef theIconRef);
OSStatus __fastcall UpdateInvalidMenuItems(MenuRef inMenu);
void __fastcall UpdateResFile(__int16 refNum);
OSStatus __fastcall UpdateStandardFontMenu(MenuRef menu, ItemCount *outHierMenuCount);
OSErr __fastcall UpdateSystemActivity(UInt8 activity);
OSErr __fastcall UpdateTranslationProgress(TranslationRefNum refNum, __int16 percentDone, Boolean *canceled);
OSStatus __fastcall UpgradeScriptInfoToTextEncoding(ScriptCode iTextScriptID, LangCode iTextLanguageID, RegionCode iRegionID, ConstStr255Param iTextFontname, TextEncoding *oEncoding);
void __fastcall UpperString(Str255 theString, Boolean diacSensitive);
void __fastcall UppercaseStripDiacritics(Ptr textPtr, __int16 len, ScriptCode script);
void __fastcall UppercaseText(Ptr textPtr, __int16 len, ScriptCode script);
OSErr __fastcall UseDictionary(SpeechChannel chan, Handle dictionary);
OSErr __fastcall UseInputWindow(TSMDocumentID idocID, Boolean useWindow);
void __fastcall UseResFile(__int16 refNum);
OSStatus __fastcall UseThemeFont(ThemeFontID inFontID, ScriptCode inScript);
__int16 __fastcall ValidDate(const LongDateRec *vDate, int flags, LongDateTime *newSecs);
OSStatus __fastcall ValidWindowRect(WindowRef window, const Rect *bounds);
OSStatus __fastcall ValidWindowRgn(WindowRef window, RgnHandle region);
int __fastcall VisibleLength(Ptr textPtr, int textLength);
CFTypeID __fastcall WSGetCFTypeIDFromWSTypeID(WSTypeID typeID);
WSTypeID __fastcall WSGetWSTypeIDFromCFType(CFTypeRef ref);
void __fastcall WSMethodInvocationAddDeserializationOverride(WSMethodInvocationRef invocation, CFStringRef typeNamespace, CFStringRef typeName, WSMethodInvocationDeserializationProcPtr deserializationProc, WSClientContext *context);
void __fastcall WSMethodInvocationAddSerializationOverride(WSMethodInvocationRef invocation, CFTypeID objType, WSMethodInvocationSerializationProcPtr serializationProc, WSClientContext *context);
CFDictionaryRef __fastcall WSMethodInvocationCopyParameters(WSMethodInvocationRef invocation, CFArrayRef *parameterOrder);
CFTypeRef __fastcall WSMethodInvocationCopyProperty(WSMethodInvocationRef invocation, CFStringRef propertyName);
CFDataRef __fastcall WSMethodInvocationCopySerialization(WSMethodInvocationRef invocation);
WSMethodInvocationRef __fastcall WSMethodInvocationCreate(CFURLRef url, CFStringRef methodName, CFStringRef protocol);
WSMethodInvocationRef __fastcall WSMethodInvocationCreateFromSerialization(CFDataRef contract);
CFTypeID WSMethodInvocationGetTypeID(void);
CFDictionaryRef __fastcall WSMethodInvocationInvoke(WSMethodInvocationRef invocation);
void __fastcall WSMethodInvocationScheduleWithRunLoop(WSMethodInvocationRef invocation, CFRunLoopRef runLoop, CFStringRef runLoopMode);
void __fastcall WSMethodInvocationSetCallBack(WSMethodInvocationRef invocation, WSMethodInvocationCallBackProcPtr clientCB, WSClientContext *context);
void __fastcall WSMethodInvocationSetParameters(WSMethodInvocationRef invocation, CFDictionaryRef parameters, CFArrayRef parameterOrder);
void __fastcall WSMethodInvocationSetProperty(WSMethodInvocationRef invocation, CFStringRef propertyName, CFTypeRef propertyValue);
void __fastcall WSMethodInvocationUnscheduleFromRunLoop(WSMethodInvocationRef invocation, CFRunLoopRef runLoop, CFStringRef runLoopMode);
Boolean __fastcall WSMethodResultIsFault(CFDictionaryRef methodResult);
Boolean __fastcall WaitMouseMoved(Point initialGlobalMouse);
Boolean WaitMouseUp(void);
Boolean __fastcall WaitNextEvent(EventMask eventMask, EventRecord *theEvent, UInt32 sleep, RgnHandle mouseRgn);
OSErr __fastcall WakeUpProcess(const ProcessSerialNumber *PSN);
wide *__fastcall WideAdd(wide *target, const wide *source);
wide *__fastcall WideBitShift(wide *src, int shift);
__int16 __fastcall WideCompare(const wide *target, const wide *source);
int __fastcall WideDivide(const wide *dividend, int divisor, int *remainder);
wide *__fastcall WideMultiply(int multiplicand, int multiplier, wide *target);
wide *__fastcall WideNegate(wide *target);
wide *__fastcall WideShift(wide *target, int shift);
unsigned int __fastcall WideSquareRoot(const wide *source);
wide *__fastcall WideSubtract(wide *target, const wide *source);
wide *__fastcall WideWideDivide(wide *dividend, int divisor, int *remainder);
OSStatus __fastcall WindowPathSelect(WindowRef window, MenuRef menu, SInt32 *outMenuResult);
OSErr __fastcall WriteIconFile(IconFamilyHandle iconFamily, const FSSpec *iconFile);
void __fastcall WriteLocation(const MachineLocation *loc);
OSErr WriteParam(void);
void __fastcall WritePartialResource(Handle theResource, int offset, const void *buffer, int count);
void __fastcall WriteResource(Handle theResource);
MACRO__A _X;
Fixed __fastcall X2Fix(double x);
Fract __fastcall X2Frac(double x);
void __fastcall XorRgn(RgnHandle srcRgnA, RgnHandle srcRgnB, RgnHandle dstRgn);
OSErr YieldToAnyThread(void);
OSErr __fastcall YieldToThread(ThreadID suggestedThread);
OSErr __fastcall ZoomRects(const Rect *fromRect, const Rect *toRect, SInt16 zoomSteps, ZoomAcceleration acceleration);
OSErr __fastcall ZoomRegion(RgnHandle region, Point zoomDistance, SInt16 zoomSteps, ZoomAcceleration acceleration);
void __fastcall ZoomWindow(WindowRef window, WindowPartCode partCode, Boolean front);
OSStatus __fastcall ZoomWindowIdeal(WindowRef inWindow, WindowPartCode inPartCode, Point *ioIdealSize);
MACRO___CGDIRECT __CGDIRECT_DISPLAY_H__;
MACRO___CGDIRECT_PALETTE __CGDIRECT_PALETTE_H__;
MACRO___CGDISPLAY __CGDISPLAY_CONFIGURATION_H__;
MACRO___CGDISPLAY_FADE __CGDISPLAY_FADE_H__;
MACRO___CGERROR __CGERROR_H__;
MACRO___CGREMOTE __CGREMOTE_OPERATION_H__;
MACRO___CGWINDOWLEVEL __CGWINDOWLEVEL_H__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFARRAY__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFBAG__;
MACRO___COREFOUNDATION __COREFOUNDATION_CFBASE__;
MACRO___COREFOUNDATION_CFBINARYHEAP __COREFOUNDATION_CFBINARYHEAP__;
MACRO___COREFOUNDATION_CFBINARYHEAP __COREFOUNDATION_CFBITVECTOR__;
MACRO___COREFOUNDATION_CFBINARYHEAP __COREFOUNDATION_CFBUNDLE__;
MACRO___COREFOUNDATION_CFBINARYHEAP __COREFOUNDATION_CFBYTEORDER__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFCHARACTERSET__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFDATA__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFDATE__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFDICTIONARY__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFMACHPORT__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFMESSAGEPORT__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFNOTIFICATIONCENTER__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFNUMBER__;
MACRO___COREFOUNDATION_CFBINARYHEAP __COREFOUNDATION_CFPLUGIN__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFPREFERENCES__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFPROPERTYLIST__;
MACRO___COREFOUNDATION_CFSTREAM __COREFOUNDATION_CFRUNLOOP__;
MACRO___COREFOUNDATION_CFSOCKET __COREFOUNDATION_CFSET__;
MACRO___COREFOUNDATION_CFSOCKET __COREFOUNDATION_CFSOCKET__;
MACRO___COREFOUNDATION_CFSTREAM __COREFOUNDATION_CFSTREAM__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFSTRINGENCODINGEXT__;
MACRO___COREFOUNDATION_CFARRAY __COREFOUNDATION_CFSTRING__;
MACRO___COREFOUNDATION_CFSOCKET __COREFOUNDATION_CFTIMEZONE__;
MACRO___COREFOUNDATION_CFSOCKET __COREFOUNDATION_CFTREE__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFURLACCESS__;
MACRO___COREFOUNDATION_CFSTREAM __COREFOUNDATION_CFURL__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFUSERNOTIFICATION__;
MACRO___COREFOUNDATION_CFUUID __COREFOUNDATION_CFUUID__;
MACRO___COREFOUNDATION_CFSOCKET __COREFOUNDATION_CFXMLNODE__;
MACRO___COREFOUNDATION_CFSOCKET __COREFOUNDATION_CFXMLPARSER__;
_RuneLocale *_CurrentRuneLocale;
_RuneLocale _DefaultRuneLocale;
const fenv_t _FE_DFL_ENV;
UInt32 __fastcall _HIObjectGetRetainCount(HIObjectRef inObject);
Boolean __fastcall _HIObjectIsEqual(HIObjectRef inObject, HIObjectRef inOtherObject);
void __fastcall _HIObjectRelease(HIObjectRef inObject);
HIObjectRef __fastcall _HIObjectRetain(HIObjectRef inObject);
MACRO___INT __INT_MAX__;
MACRO___LONG_LONG __LONG_LONG_MAX__;
MACRO___LONG __LONG_MAX__;
Boolean _MPIsFullyInitialized(void);
Boolean __fastcall _MPLibraryIsCompatible(const char *versionCString, UInt32 major, UInt32 minor, UInt32 release, UInt32 revision);
void __fastcall _MPLibraryVersion(const char **versionCString, UInt32 *major, UInt32 *minor, UInt32 *release, UInt32 *revision);
MACRO___PTHREAD __PTHREAD_ATTR_SIZE__;
MACRO___PTHREAD __PTHREAD_CONDATTR_SIZE__;
MACRO___PTHREAD __PTHREAD_COND_SIZE__;
MACRO___PTHREAD __PTHREAD_MUTEXATTR_SIZE__;
MACRO___PTHREAD __PTHREAD_MUTEX_SIZE__;
MACRO___PTHREAD __PTHREAD_ONCE_SIZE__;
MACRO___PTHREAD __PTHREAD_RWLOCKATTR_SIZE__;
MACRO___PTHREAD __PTHREAD_RWLOCK_SIZE__;
MACRO___PTHREAD __PTHREAD_SIZE__;
MACRO___SLBF __SALC;
MACRO___SLBF __SAPP;
MACRO___SLBF __SEOF;
MACRO___SLBF __SERR;
MACRO___SHRT __SHRT_MAX__;
MACRO___SLBF __SLBF;
MACRO___SLBF __SMBF;
MACRO___SLBF __SMOD;
MACRO___SLBF __SNBF;
MACRO___SLBF __SNPT;
MACRO___SLBF __SOFF;
MACRO___SLBF __SOPT;
MACRO___SLBF __SRD;
MACRO___SLBF __SRW;
MACRO___SLBF __SSTR;
MACRO___SLBF __SWR;
MACRO___TYPE __TYPE_LONGDOUBLE_IS_DOUBLE;
CFRange __fastcall __CFRangeMake(CFIndex loc, CFIndex len);
CFStringRef __fastcall __CFStringMakeConstantString(const char *cStr);
static CGAffineTransform __fastcall __CGAffineTransformMake(float a, float b, float c, float d, float tx, float ty);
static CGPoint __fastcall __CGPointApplyAffineTransform(CGPoint point, CGAffineTransform t);
static CGSize __fastcall __CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t);
unsigned int __fastcall ___runetype(int);
int __fastcall ___tolower(int);
int __fastcall ___toupper(int);
void __fastcall __eprintf(const char *, const char *, unsigned int, const char *);
int *__error(void);
int __fegetfltrounds(void);
int __fastcall __fpclassify(long double x);
int __fastcall __fpclassifyd(double x);
int __fastcall __fpclassifyf(float x);
double __inf(void);
float __inff(void);
static int __fastcall __isctype(int c, unsigned int f);
int __fastcall __isfinite(long double x);
int __fastcall __isfinited(double x);
int __fastcall __isfinitef(float x);
int __fastcall __isinf(long double x);
int __fastcall __isinfd(double x);
int __fastcall __isinff(float x);
int __fastcall __isnan(long double x);
int __fastcall __isnand(double x);
int __fastcall __isnanf(float x);
int __fastcall __isnormal(long double x);
int __fastcall __isnormald(double x);
int __fastcall __isnormalf(float x);
static int __fastcall __istype(int c, unsigned int f);
static int __fastcall __maskrune(int c, unsigned int f);
unsigned int __math_errhandling(void);
int __mb_cur_max;
float __nan(void);
FILE __sF[];
int __fastcall __signbitd(double x);
int __fastcall __signbitf(float x);
int __fastcall __signbitl(long double x);
static int __fastcall __sputc(int c, FILE *p);
int __fastcall __srget(FILE *);
int __fastcall __svfscanf(FILE *, const char *, char *);
int __fastcall __swbuf(int, FILE *);
static int __fastcall __tolower(int c);
static int __fastcall __toupper(int c);
MACRO___bool __bool_true_false_are_defined;
enum fdversion _fdlib_version;
MACRO___kCFStringInlineBufferLength __kCFStringInlineBufferLength;
void __fastcall _longjmp(jmp_buf, int val);
int __fastcall _setjmp(jmp_buf env);
int __fastcall a64l(const char *);
void abort(void);
int __fastcall abs(int);
double __fastcall acos(double x);
double __fastcall acosh(double x);
long double __fastcall acoshl(long double x);
long double __fastcall acosl(long double x);
void *__fastcall alloca(size_t);
double_t __fastcall annuity(double_t rate, double_t periods);
u_int32_t arc4random(void);
void __fastcall arc4random_addrandom(unsigned __int8 *dat, int datlen);
void arc4random_stir(void);
char *__fastcall asctime(const struct tm *);
char *__fastcall asctime_r(const struct tm *, char *);
double __fastcall asin(double x);
double __fastcall asinh(double x);
long double __fastcall asinhl(long double x);
long double __fastcall asinl(long double x);
int asprintf(char **, const char *, ...);
double __fastcall atan(double x);
double __fastcall atan2(double y, double x);
long double __fastcall atan2l(long double y, long double x);
double __fastcall atanh(double x);
long double __fastcall atanhl(long double x);
long double __fastcall atanl(long double x);
int __fastcall atexit(void (*)(void));
double __fastcall atof(const char *);
int __fastcall atoi(const char *);
int __fastcall atol(const char *);
int __fastcall bcmp(const void *, const void *, size_t);
void __fastcall bcopy(const void *, void *, size_t);
mach_port_t bootstrap_port;
void *__fastcall bsearch(const void *, const void *, size_t, size_t, int (__fastcall *)(const void *, const void *));
void __fastcall bzero(void *, size_t);
void __fastcall c2pstrcpy(Str255 dst, const char *src);
double __fastcall cabs(_complex z);
void *__fastcall calloc(size_t, size_t);
double __fastcall cbrt(double x);
double __fastcall ceil(double x);
float __fastcall ceilf(float x);
long double __fastcall ceill(long double x);
char *__fastcall cgetcap(char *, char *, int);
int cgetclose(void);
int __fastcall cgetent(char **, char **, char *);
int __fastcall cgetfirst(char **, char **);
int __fastcall cgetmatch(char *, char *);
int __fastcall cgetnext(char **, char **);
int __fastcall cgetnum(char *, char *, int *);
int __fastcall cgetset(char *);
int __fastcall cgetstr(char *, char *, char **);
int __fastcall cgetustr(char *, char *, char **);
void __fastcall clearerr(FILE *);
clock_t clock(void);
double_t __fastcall compound(double_t rate, double_t periods);
double __fastcall copysign(double x, double y);
float __fastcall copysignf(float x, float y);
long double __fastcall copysignl(long double x, long double y);
double __fastcall cos(double x);
double __fastcall cosh(double x);
long double __fastcall coshl(long double x);
long double __fastcall cosl(long double x);
char *__fastcall ctermid(char *);
char *__fastcall ctime(const time_t *);
char *__fastcall ctime_r(const time_t *, char *);
int __fastcall daemon(int, int);
float __fastcall dec2f(const decimal *d);
int __fastcall dec2l(const decimal *d);
double_t __fastcall dec2num(const decimal *d);
long double __fastcall dec2numl(const decimal *d);
__int16 __fastcall dec2s(const decimal *d);
void __fastcall dec2str(const decform *f, const decimal *d, char *s);
int __fastcall deltapoint(Point *ptA, Point *ptB);
char *__fastcall devname(int, int);
double __fastcall difftime(time_t, time_t);
int __fastcall digittoint(int);
div_t __fastcall div(int, int);
double drand48(void);
double __fastcall drem(double x, double y);
void __fastcall dtox80(const double *x, extended80 *x80);
mach_port_t environment_port;
double __fastcall erand48(unsigned __int16[3]);
double __fastcall erf(double x);
double __fastcall erfc(double x);
long double __fastcall erfcl(long double x);
long double __fastcall erfl(long double x);
void __fastcall exit(int);
double __fastcall exp(double x);
double __fastcall exp2(double x);
long double __fastcall exp2l(long double x);
long double __fastcall expl(long double x);
double __fastcall expm1(double x);
long double __fastcall expm1l(long double x);
double __fastcall fabs(double x);
float __fastcall fabsf(float x);
long double __fastcall fabsl(long double x);
int __fastcall fclose(FILE *);
double __fastcall fdim(double x, double y);
float __fastcall fdimf(float x, float y);
long double __fastcall fdiml(long double x, long double y);
FILE *__fastcall fdopen(int, const char *);
void __fastcall feclearexcept(int excepts);
void __fastcall fegetenv(fenv_t *envp);
void __fastcall fegetexceptflag(fexcept_t *flagp, int excepts);
int fegetround(void);
int __fastcall feholdexcept(fenv_t *envp);
int __fastcall feof(FILE *);
void __fastcall feraiseexcept(int excepts);
int __fastcall ferror(FILE *);
void __fastcall fesetenv(const fenv_t *envp);
void __fastcall fesetexceptflag(const fexcept_t *flagp, int excepts);
int __fastcall fesetround(int round);
int __fastcall fetestexcept(int excepts);
void __fastcall feupdateenv(const fenv_t *envp);
int __fastcall fflush(FILE *);
int __fastcall ffs(int);
int __fastcall fgetc(FILE *);
char *__fastcall fgetln(FILE *, size_t *);
int __fastcall fgetpos(FILE *, fpos_t *);
char *__fastcall fgets(char *, int, FILE *);
int __fastcall fileno(FILE *);
int __fastcall finite(double x);
double __fastcall floor(double x);
float __fastcall floorf(float x);
long double __fastcall floorl(long double x);
double __fastcall fma(double x, double y, double z);
float __fastcall fmaf(float x, float y, float z);
double __fastcall fmax(double x, double y);
float __fastcall fmaxf(float x, float y);
long double __fastcall fmaxl(long double x, long double y);
double __fastcall fmin(double x, double y);
float __fastcall fminf(float x, float y);
long double __fastcall fminl(long double x, long double y);
double __fastcall fmod(double x, double y);
float __fastcall fmodf(float x, float y);
FILE *__fastcall fopen(const char *, const char *);
int fprintf(FILE *, const char *, ...);
int __fastcall fpurge(FILE *);
int __fastcall fputc(int, FILE *);
int __fastcall fputs(const char *, FILE *);
size_t __fastcall fread(void *, size_t, size_t, FILE *);
void __fastcall free(void *);
FILE *__fastcall freopen(const char *, const char *, FILE *);
double __fastcall frexp(double value, int *eptr);
float __fastcall frexpf(float value, int *eptr);
long double __fastcall frexpl(long double x, int *exponent);
int fscanf(FILE *, const char *, ...);
int __fastcall fseek(FILE *, int, int);
int __fastcall fseeko(FILE *, fpos_t, int);
int __fastcall fsetpos(FILE *, const fpos_t *);
int __fastcall ftell(FILE *);
fpos_t __fastcall ftello(FILE *);
FILE *__fastcall funopen(const void *, int (__fastcall *)(void *, char *, int), int (__fastcall *)(void *, const char *, int), fpos_t (__fastcall *)(void *, fpos_t, int), int (__fastcall *)(void *));
size_t __fastcall fwrite(const void *, size_t, size_t, FILE *);
double __fastcall gamma(double x);
long double __fastcall gammal(long double x);
char *__fastcall getbsize(int *, int *);
int __fastcall getc(FILE *);
int getchar(void);
char *__fastcall getenv(const char *);
int __fastcall getloadavg(double[], int);
char *__fastcall gets(char *);
int __fastcall getw(FILE *);
struct tm *__fastcall gmtime(const time_t *);
struct tm *__fastcall gmtime_r(const time_t *, struct tm *);
char *__fastcall group_from_gid(unsigned int, int);
int __fastcall heapsort(void *, size_t, size_t, int (__fastcall *)(const void *, const void *));
mach_port_name_t host_self_trap(void);
unsigned int __fastcall htonl(unsigned int);
unsigned __int16 __fastcall htons(unsigned __int16);
double __fastcall hypot(double x, double y);
long double __fastcall hypotl(long double x, long double y);
int __fastcall ilogb(double x);
int __fastcall ilogbf(float x);
char *__fastcall index(const char *, int);
kern_return_t init_process(void);
char *__fastcall initstate(unsigned int, char *, int);
int __fastcall isalnum(int);
int __fastcall isalpha(int);
int __fastcall isascii(int);
int __fastcall isblank(int);
int __fastcall iscntrl(int);
int __fastcall isdigit(int);
int __fastcall isgraph(int);
int __fastcall ishexnumber(int);
int __fastcall isideogram(int);
int __fastcall islower(int);
int __fastcall isnumber(int);
int __fastcall isphonogram(int);
int __fastcall isprint(int);
int __fastcall ispunct(int);
int __fastcall isrune(int);
int __fastcall isspace(int);
int __fastcall isspecial(int);
int __fastcall isupper(int);
int __fastcall isxdigit(int);
double __fastcall j0(double x);
double __fastcall j1(double x);
double __fastcall jn(int n, double x);
int __fastcall jrand48(unsigned __int16[3]);
const CFTimeInterval kCFAbsoluteTimeIntervalSince1904;
const CFTimeInterval kCFAbsoluteTimeIntervalSince1970;
const CFAllocatorRef kCFAllocatorDefault;
const CFAllocatorRef kCFAllocatorMalloc;
const CFAllocatorRef kCFAllocatorNull;
const CFAllocatorRef kCFAllocatorSystemDefault;
const CFAllocatorRef kCFAllocatorUseContext;
const CFBooleanRef kCFBooleanFalse;
const CFBooleanRef kCFBooleanTrue;
const CFStringRef kCFBundleDevelopmentRegionKey;
const CFStringRef kCFBundleExecutableKey;
const CFStringRef kCFBundleIdentifierKey;
const CFStringRef kCFBundleInfoDictionaryVersionKey;
const CFStringRef kCFBundleLocalizationsKey;
const CFStringRef kCFBundleNameKey;
const CFStringRef kCFBundleVersionKey;
const CFBagCallBacks kCFCopyStringBagCallBacks;
const CFDictionaryKeyCallBacks kCFCopyStringDictionaryKeyCallBacks;
const CFSetCallBacks kCFCopyStringSetCallBacks;
double kCFCoreFoundationVersionNumber;
const CFStringRef kCFFTPResourceGroup;
const CFStringRef kCFFTPResourceLink;
const CFStringRef kCFFTPResourceModDate;
const CFStringRef kCFFTPResourceMode;
const CFStringRef kCFFTPResourceName;
const CFStringRef kCFFTPResourceOwner;
const CFStringRef kCFFTPResourceSize;
const CFStringRef kCFFTPResourceType;
const CFStringRef kCFHTTPAuthenticationSchemeBasic;
const CFStringRef kCFHTTPAuthenticationSchemeDigest;
const CFStringRef kCFHTTPVersion1_0;
const CFStringRef kCFHTTPVersion1_1;
const CFNullRef kCFNull;
const CFNumberRef kCFNumberNaN;
const CFNumberRef kCFNumberNegativeInfinity;
const CFNumberRef kCFNumberPositiveInfinity;
const CFStringRef kCFPlugInDynamicRegisterFunctionKey;
const CFStringRef kCFPlugInDynamicRegistrationKey;
const CFStringRef kCFPlugInFactoriesKey;
const CFStringRef kCFPlugInTypesKey;
const CFStringRef kCFPlugInUnloadFunctionKey;
const CFStringRef kCFPreferencesAnyApplication;
const CFStringRef kCFPreferencesAnyHost;
const CFStringRef kCFPreferencesAnyUser;
const CFStringRef kCFPreferencesCurrentApplication;
const CFStringRef kCFPreferencesCurrentHost;
const CFStringRef kCFPreferencesCurrentUser;
const CFStringRef kCFRunLoopCommonModes;
const CFStringRef kCFRunLoopDefaultMode;
const CFStringRef kCFSocketCommandKey;
const CFStringRef kCFSocketErrorKey;
const CFStringRef kCFSocketNameKey;
const CFStringRef kCFSocketRegisterCommand;
const CFStringRef kCFSocketResultKey;
const CFStringRef kCFSocketRetrieveCommand;
const CFStringRef kCFSocketValueKey;
const SInt32 kCFStreamErrorDomainFTP;
const SInt32 kCFStreamErrorDomainHTTP;
const SInt32 kCFStreamErrorDomainMach;
const SInt32 kCFStreamErrorDomainNetDB;
const SInt32 kCFStreamErrorDomainNetServices;
const int kCFStreamErrorDomainSOCKS;
const int kCFStreamErrorDomainSSL;
const SInt32 kCFStreamErrorDomainSystemConfiguration;
const CFStringRef kCFStreamPropertyAppendToFile;
const CFStringRef kCFStreamPropertyDataWritten;
const CFStringRef kCFStreamPropertyFTPAttemptPersistentConnection;
const CFStringRef kCFStreamPropertyFTPFetchResourceInfo;
const CFStringRef kCFStreamPropertyFTPFileTransferOffset;
const CFStringRef kCFStreamPropertyFTPPassword;
const CFStringRef kCFStreamPropertyFTPProxy;
const CFStringRef kCFStreamPropertyFTPProxyHost;
const CFStringRef kCFStreamPropertyFTPProxyPassword;
const CFStringRef kCFStreamPropertyFTPProxyPort;
const CFStringRef kCFStreamPropertyFTPProxyUser;
const CFStringRef kCFStreamPropertyFTPResourceSize;
const CFStringRef kCFStreamPropertyFTPUsePassiveMode;
const CFStringRef kCFStreamPropertyFTPUserName;
const CFStringRef kCFStreamPropertyHTTPAttemptPersistentConnection;
const CFStringRef kCFStreamPropertyHTTPFinalURL;
const CFStringRef kCFStreamPropertyHTTPProxy;
const CFStringRef kCFStreamPropertyHTTPProxyHost;
const CFStringRef kCFStreamPropertyHTTPProxyPort;
const CFStringRef kCFStreamPropertyHTTPRequestBytesWrittenCount;
const CFStringRef kCFStreamPropertyHTTPResponseHeader;
const CFStringRef kCFStreamPropertyHTTPSProxyHost;
const CFStringRef kCFStreamPropertyHTTPSProxyPort;
const CFStringRef kCFStreamPropertyHTTPShouldAutoredirect;
const CFStringRef kCFStreamPropertySOCKSPassword;
const CFStringRef kCFStreamPropertySOCKSProxy;
const CFStringRef kCFStreamPropertySOCKSProxyHost;
const CFStringRef kCFStreamPropertySOCKSProxyPort;
const CFStringRef kCFStreamPropertySOCKSUser;
const CFStringRef kCFStreamPropertySOCKSVersion;
const CFStringRef kCFStreamPropertyShouldCloseNativeSocket;
const CFStringRef kCFStreamPropertySocketNativeHandle;
const CFStringRef kCFStreamPropertySocketRemoteHost;
const CFStringRef kCFStreamPropertySocketRemoteHostName;
const CFStringRef kCFStreamPropertySocketRemoteNetService;
const CFStringRef kCFStreamPropertySocketRemotePortNumber;
const CFStringRef kCFStreamPropertySocketSecurityLevel;
const CFStringRef kCFStreamSocketSOCKSVersion4;
const CFStringRef kCFStreamSocketSOCKSVersion5;
const CFStringRef kCFStreamSocketSecurityLevelNegotiatedSSL;
const CFStringRef kCFStreamSocketSecurityLevelNone;
const CFStringRef kCFStreamSocketSecurityLevelSSLv2;
const CFStringRef kCFStreamSocketSecurityLevelSSLv3;
const CFStringRef kCFStreamSocketSecurityLevelTLSv1;
const CFBinaryHeapCallBacks kCFStringBinaryHeapCallBacks;
const CFArrayCallBacks kCFTypeArrayCallBacks;
const CFBagCallBacks kCFTypeBagCallBacks;
const CFDictionaryKeyCallBacks kCFTypeDictionaryKeyCallBacks;
const CFDictionaryValueCallBacks kCFTypeDictionaryValueCallBacks;
const CFSetCallBacks kCFTypeSetCallBacks;
const CFStringRef kCFURLFileDirectoryContents;
const CFStringRef kCFURLFileExists;
const CFStringRef kCFURLFileLastModificationTime;
const CFStringRef kCFURLFileLength;
const CFStringRef kCFURLFileOwnerID;
const CFStringRef kCFURLFilePOSIXMode;
const CFStringRef kCFURLHTTPStatusCode;
const CFStringRef kCFURLHTTPStatusLine;
const CFStringRef kCFUserNotificationAlertHeaderKey;
const CFStringRef kCFUserNotificationAlertMessageKey;
const CFStringRef kCFUserNotificationAlternateButtonTitleKey;
const CFStringRef kCFUserNotificationCheckBoxTitlesKey;
const CFStringRef kCFUserNotificationDefaultButtonTitleKey;
const CFStringRef kCFUserNotificationIconURLKey;
const CFStringRef kCFUserNotificationLocalizationURLKey;
const CFStringRef kCFUserNotificationOtherButtonTitleKey;
const CFStringRef kCFUserNotificationPopUpTitlesKey;
const CFStringRef kCFUserNotificationProgressIndicatorValueKey;
const CFStringRef kCFUserNotificationSoundURLKey;
const CFStringRef kCFUserNotificationTextFieldTitlesKey;
const CFStringRef kCFUserNotificationTextFieldValuesKey;
const CFArrayCallBacks kHIObjectCFArrayCallbacks;
const CFDictionaryKeyCallBacks kHIObjectCFDictKeyCallbacks;
const CFDictionaryValueCallBacks kHIObjectCFDictValueCallbacks;
const HIViewID kHIViewWindowContentID;
const HIViewID kHIViewWindowGrowBoxID;
const mach_port_t kIOMasterPortDefault;
CFStringRef kWSDebugIncomingBody;
CFStringRef kWSDebugIncomingHeaders;
CFStringRef kWSDebugOutgoingBody;
CFStringRef kWSDebugOutgoingHeaders;
CFStringRef kWSFaultCode;
CFStringRef kWSFaultExtra;
CFStringRef kWSFaultString;
CFStringRef kWSHTTPExtraHeaders;
CFStringRef kWSHTTPFollowsRedirects;
CFStringRef kWSHTTPMessage;
CFStringRef kWSHTTPProxy;
CFStringRef kWSHTTPResponseMessage;
CFStringRef kWSHTTPVersion;
CFStringRef kWSMethodInvocationResult;
CFStringRef kWSMethodInvocationResultParameterName;
CFStringRef kWSMethodInvocationTimeoutValue;
CFStringRef kWSNetworkStreamFaultString;
CFStringRef kWSRecordNamespaceURI;
CFStringRef kWSRecordParameterOrder;
CFStringRef kWSRecordType;
CFStringRef kWSSOAP1999Protocol;
CFStringRef kWSSOAP2001Protocol;
CFStringRef kWSSOAPBodyEncodingStyle;
CFStringRef kWSSOAPMessageHeaders;
CFStringRef kWSSOAPMethodNamespaceURI;
CFStringRef kWSSOAPStyleDoc;
CFStringRef kWSSOAPStyleRPC;
CFStringRef kWSStreamErrorDomain;
CFStringRef kWSStreamErrorError;
CFStringRef kWSStreamErrorMessage;
CFStringRef kWSXMLRPCProtocol;
OSStatus __fastcall kcaddapplesharepassword(AFPServerSignature *serverSignature, const char *serverAddress, const char *serverName, const char *volumeName, const char *accountName, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall kcaddgenericpassword(const char *serviceName, const char *accountName, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall kcaddinternetpassword(const char *serverName, const char *securityDomain, const char *accountName, UInt16 port, OSType protocol, OSType authType, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall kcaddinternetpasswordwithpath(const char *serverName, const char *securityDomain, const char *accountName, const char *path, UInt16 port, OSType protocol, OSType authType, UInt32 passwordLength, const void *passwordData, KCItemRef *item);
OSStatus __fastcall kccreatekeychain(const char *password, KCRef *keychain);
OSStatus __fastcall kcfindapplesharepassword(AFPServerSignature *serverSignature, const char *serverAddress, const char *serverName, const char *volumeName, const char *accountName, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall kcfindgenericpassword(const char *serviceName, const char *accountName, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall kcfindinternetpassword(const char *serverName, const char *securityDomain, const char *accountName, UInt16 port, OSType protocol, OSType authType, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall kcfindinternetpasswordwithpath(const char *serverName, const char *securityDomain, const char *accountName, const char *path, UInt16 port, OSType protocol, OSType authType, UInt32 maxLength, void *passwordData, UInt32 *actualLength, KCItemRef *item);
OSStatus __fastcall kcgetkeychainname(KCRef keychain, char *keychainName);
OSStatus __fastcall kcunlock(KCRef keychain, const char *password);
int __fastcall kill(pid_t, int);
int __fastcall killpg(pid_t, int);
char *__fastcall l64a(int);
int __fastcall labs(int);
void __fastcall lcong48(unsigned __int16[7]);
double __fastcall ldexp(double value, int exp);
float __fastcall ldexpf(float value, int exp);
long double __fastcall ldexpl(long double x, int n);
ldiv_t __fastcall ldiv(int, int);
void __fastcall ldtox80(const long double *x, extended80 *x80);
double __fastcall lgamma(double x);
long double __fastcall lgammal(long double x);
__int64 __fastcall llrint(double x);
__int64 __fastcall llrintf(float x);
__int64 __fastcall llround(double x);
__int64 __fastcall llroundf(float x);
struct lconv *localeconv(void);
struct tm *__fastcall localtime(const time_t *);
struct tm *__fastcall localtime_r(const time_t *, struct tm *);
double __fastcall log(double x);
double __fastcall log10(double x);
long double __fastcall log10l(long double x);
double __fastcall log1p(double x);
long double __fastcall log1pl(long double x);
double __fastcall log2(double x);
long double __fastcall log2l(long double x);
double __fastcall logb(double x);
float __fastcall logbf(float x);
long double __fastcall logbl(long double x);
long double __fastcall logl(long double x);
void __fastcall longjmp(jmp_buf env, int val);
void longjmperror(void);
int lrand48(void);
int __fastcall lrint(double x);
int __fastcall lrintf(float x);
int __fastcall lround(double x);
int __fastcall lroundf(float x);
mach_port_t mach_host_self(void);
mach_msg_return_t __fastcall mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify);
mach_msg_return_t __fastcall mach_msg_overwrite(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify, mach_msg_header_t *rcv_msg, mach_msg_size_t rcv_limit);
mach_msg_return_t __fastcall mach_msg_overwrite_trap(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify, mach_msg_header_t *rcv_msg, mach_msg_size_t rcv_limit);
mach_msg_return_t __fastcall mach_msg_trap(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify);
mach_port_name_t mach_reply_port(void);
mach_port_t mach_task_self(void);
mach_port_t mach_task_self_;
mach_port_t mach_thread_self(void);
kern_return_t __fastcall macx_swapoff(char *name, int flags);
kern_return_t __fastcall macx_swapon(char *name, int flags, int size, int priority);
kern_return_t __fastcall macx_triggers(int hi_water, int low_water, int flags, mach_port_t alert_port);
void *__fastcall malloc(size_t);
kern_return_t __fastcall map_fd(int fd, vm_offset_t offset, vm_offset_t *va, boolean_t findspace, vm_size_t size);
int __fastcall matherr(struct exception *);
int __fastcall mblen(const char *, size_t);
size_t __fastcall mbstowcs(wchar_t *, const char *, size_t);
int __fastcall mbtowc(wchar_t *, const char *, size_t);
void *__fastcall memccpy(void *, const void *, int, size_t);
void *__fastcall memchr(const void *, int, size_t);
int __fastcall memcmp(const void *, const void *, size_t);
void *__fastcall memcpy(void *, const void *, size_t);
void *__fastcall memmove(void *, const void *, size_t);
void *__fastcall memset(void *, int, size_t);
int __fastcall mergesort(void *, size_t, size_t, int (__fastcall *)(const void *, const void *));
time_t __fastcall mktime(struct tm *);
double __fastcall modf(double x, double *iptr);
float __fastcall modff(float x, float *iptr);
int mrand48(void);
mach_port_t name_server_port;
double __fastcall nan(const char *tagp);
float __fastcall nanf(const char *tagp);
int __fastcall nanosleep(const struct timespec *, struct timespec *);
double __fastcall nearbyint(double x);
float __fastcall nearbyintf(float x);
long double __fastcall nearbyintl(long double x);
double __fastcall nextafter(double x, double y);
float __fastcall nextafterf(float x, float y);
int __fastcall nrand48(unsigned __int16[3]);
unsigned int __fastcall ntohl(unsigned int);
unsigned __int16 __fastcall ntohs(unsigned __int16);
void __fastcall num2dec(const decform *f, double_t x, decimal *d);
void __fastcall num2decl(const decform *f, long double x, decimal *d);
void __fastcall p2cstrcpy(char *dst, ConstStr255Param src);
int __fastcall pclose(FILE *);
void __fastcall perror(const char *);
const double_t pi;
kern_return_t __fastcall pid_for_task(mach_port_t t, int *x);
FILE *__fastcall popen(const char *, const char *);
double __fastcall pow(double x, double y);
long double __fastcall powl(long double x, long double y);
int printf(const char *, ...);
void __fastcall psignal(unsigned int, const char *);
int __fastcall putc(int, FILE *);
int __fastcall putchar(int);
int __fastcall putenv(const char *);
int __fastcall puts(const char *);
int __fastcall putw(int, FILE *);
void __fastcall qsort(void *, size_t, size_t, int (__fastcall *)(const void *, const void *));
int __fastcall radixsort(const unsigned __int8 **, int, const unsigned __int8 *, unsigned int);
int __fastcall raise(int);
int rand(void);
int __fastcall rand_r(unsigned int *);
int random(void);
double_t __fastcall randomx(double_t *x);
void *__fastcall realloc(void *, size_t);
void *__fastcall reallocf(void *, size_t);
char *__fastcall realpath(const char *, char resolved_path[]);
relop __fastcall relation(double_t x, double_t y);
relop __fastcall relationl(long double x, long double y);
__int16 __fastcall relstring(const char *str1, const char *str2, Boolean caseSensitive, Boolean diacSensitive);
double __fastcall remainder(double x, double y);
float __fastcall remainderf(float x, float y);
long double __fastcall remainderl(long double x, long double y);
int __fastcall remove(const char *);
double __fastcall remquo(double x, double y, int *quo);
float __fastcall remquof(float x, float y, int *quo);
long double __fastcall remquol(long double x, long double y, int *quo);
int __fastcall rename(const char *, const char *);
void __fastcall rewind(FILE *);
char *__fastcall rindex(const char *, int);
double __fastcall rint(double x);
float __fastcall rintf(float x);
long double __fastcall rintl(long double x);
int __fastcall rinttol(double x);
int __fastcall rinttoll(long double x);
double __fastcall round(double x);
float __fastcall roundf(float x);
long double __fastcall roundl(long double x);
int __fastcall roundtol(double x);
int __fastcall roundtoll(long double x);
double __fastcall scalb(double x, int n);
long double __fastcall scalbl(long double x, int n);
double __fastcall scalbln(double x, int n);
float __fastcall scalblnf(float x, int n);
double __fastcall scalbn(double x, int n);
float __fastcall scalbnf(float x, int n);
int scanf(const char *, ...);
unsigned __int16 *__fastcall seed48(unsigned __int16[3]);
kern_return_t __fastcall semaphore_signal_all_trap(mach_port_name_t signal_name);
kern_return_t __fastcall semaphore_signal_thread_trap(mach_port_name_t signal_name, mach_port_name_t thread_name);
kern_return_t __fastcall semaphore_signal_trap(mach_port_name_t signal_name);
kern_return_t __fastcall semaphore_timedwait_signal_trap(mach_port_name_t wait_name, mach_port_name_t signal_name, unsigned int sec, clock_res_t nsec);
kern_return_t __fastcall semaphore_timedwait_trap(mach_port_name_t wait_name, unsigned int sec, clock_res_t nsec);
kern_return_t __fastcall semaphore_wait_signal_trap(mach_port_name_t wait_name, mach_port_name_t signal_name);
kern_return_t __fastcall semaphore_wait_trap(mach_port_name_t wait_name);
mach_port_t service_port;
void __fastcall setbuf(FILE *, char *);
void __fastcall setbuffer(FILE *, char *, int);
int __fastcall setenv(const char *, const char *, int);
int __fastcall setjmp(jmp_buf env);
int __fastcall setlinebuf(FILE *);
char *__fastcall setlocale(int, const char *);
char *__fastcall setstate(char *);
int __fastcall setvbuf(FILE *, char *, int, size_t);
int __fastcall sigaction(int, const struct sigaction *, struct sigaction *);
int __fastcall sigaddset(sigset_t *, int);
int __fastcall sigblock(int);
int __fastcall sigdelset(sigset_t *, int);
int __fastcall sigemptyset(sigset_t *);
int __fastcall sigfillset(sigset_t *);
int __fastcall sighold(int);
int __fastcall siginterrupt(int, int);
int __fastcall sigismember(const sigset_t *, int);
void __fastcall siglongjmp(sigjmp_buf env, int val);
void (__fastcall *__fastcall signal(int, void (__fastcall *)(int)))(int);
int signgam;
double __fastcall significand(double x);
int __fastcall sigpause(int);
int __fastcall sigpending(sigset_t *);
int __fastcall sigprocmask(int, const sigset_t *, sigset_t *);
int __fastcall sigrelse(int);
int __fastcall sigreturn(struct sigcontext *);
int __fastcall sigsetjmp(sigjmp_buf env, int val);
int __fastcall sigsetmask(int);
int __fastcall sigsuspend(const sigset_t *);
int __fastcall sigvec(int, struct sigvec *, struct sigvec *);
double __fastcall sin(double x);
double __fastcall sinh(double x);
long double __fastcall sinhl(long double x);
long double __fastcall sinl(long double x);
int snprintf(char *, size_t, const char *, ...);
int sprintf(char *, const char *, ...);
double __fastcall sqrt(double x);
long double __fastcall sqrtl(long double x);
int __fastcall sradixsort(const unsigned __int8 **, int, const unsigned __int8 *, unsigned int);
void __fastcall srand(unsigned int);
void __fastcall srand48(int);
void __fastcall srandom(unsigned int);
int sscanf(const char *, const char *, ...);
void __fastcall stdtext(__int16 count, const void *textAddr, const Point *numer, const Point *denom);
void __fastcall str2dec(const char *s, __int16 *ix, decimal *d, __int16 *vp);
int __fastcall strcasecmp(const char *, const char *);
char *__fastcall strcat(char *, const char *);
char *__fastcall strchr(const char *, int);
int __fastcall strcmp(const char *, const char *);
int __fastcall strcoll(const char *, const char *);
char *__fastcall strcpy(char *, const char *);
size_t __fastcall strcspn(const char *, const char *);
char *__fastcall strdup(const char *);
char *__fastcall strerror(int);
size_t __fastcall strftime(char *, size_t, const char *, const struct tm *);
size_t __fastcall strlcat(char *, const char *, size_t);
size_t __fastcall strlcpy(char *, const char *, size_t);
size_t __fastcall strlen(const char *);
void __fastcall strmode(int, char *);
int __fastcall strncasecmp(const char *, const char *, size_t);
char *__fastcall strncat(char *, const char *, size_t);
int __fastcall strncmp(const char *, const char *, size_t);
char *__fastcall strncpy(char *, const char *, size_t);
char *__fastcall strpbrk(const char *, const char *);
char *__fastcall strptime(const char *, const char *, struct tm *);
char *__fastcall strrchr(const char *, int);
char *__fastcall strsep(char **, const char *);
size_t __fastcall strspn(const char *, const char *);
char *__fastcall strstr(const char *, const char *);
double __fastcall strtod(const char *, char **);
char *__fastcall strtok(char *, const char *);
char *__fastcall strtok_r(char *, const char *, char **);
int __fastcall strtol(const char *, char **, int);
__int64 __fastcall strtoll(const char *, char **, int);
__int64 __fastcall strtoq(const char *, char **, int);
unsigned int __fastcall strtoul(const char *, char **, int);
unsigned __int64 __fastcall strtoull(const char *, char **, int);
unsigned __int64 __fastcall strtouq(const char *, char **, int);
size_t __fastcall strxfrm(char *, const char *, size_t);
void __fastcall swab(const void *, void *, size_t);
const char *const sys_errlist[];
const int sys_nerr;
const char *const sys_siglist[32];
const char *const sys_signame[32];
int __fastcall system(const char *);
double __fastcall tan(double x);
double __fastcall tanh(double x);
long double __fastcall tanhl(long double x);
long double __fastcall tanl(long double x);
kern_return_t __fastcall task_for_pid(mach_port_t target_tport, int pid, mach_port_t *t);
mach_port_name_t task_self_trap(void);
char *__fastcall tempnam(const char *, const char *);
double __fastcall tgamma(double x);
mach_port_name_t thread_self_trap(void);
time_t __fastcall time(time_t *);
time_t __fastcall timegm(struct tm *const);
time_t __fastcall timelocal(struct tm *const);
char *__fastcall timezone(int, int);
FILE *tmpfile(void);
char *__fastcall tmpnam(char *);
int __fastcall toascii(int);
int __fastcall tolower(int);
int __fastcall toupper(int);
double __fastcall trunc(double x);
float __fastcall truncf(float x);
long double __fastcall truncl(long double x);
char *tzname[];
void tzset(void);
void tzsetwall(void);
int __fastcall ungetc(int, FILE *);
void __fastcall unsetenv(const char *);
void __fastcall upperstring(char *theString, Boolean diacSensitive);
char *__fastcall user_from_uid(unsigned int, int);
OSStatus __fastcall vAEBuildAppleEvent(AEEventClass theClass, AEEventID theID, DescType addressType, const void *addressData, int addressLength, __int16 returnID, int transactionID, AppleEvent *resultEvt, AEBuildError *error, const char *paramsFmt, va_list args);
OSStatus __fastcall vAEBuildDesc(AEDesc *dst, AEBuildError *error, const char *src, va_list args);
OSStatus __fastcall vAEBuildParameters(AppleEvent *event, AEBuildError *error, const char *format, va_list args);
int __fastcall vasprintf(char **, const char *, char *);
int __fastcall vfprintf(FILE *, const char *, char *);
vm_size_t vm_page_size;
int __fastcall vprintf(const char *, char *);
int (__fastcall *vprintf_stderr_func)(const char *format, va_list ap);
int __fastcall vscanf(const char *, char *);
int __fastcall vsnprintf(char *, size_t, const char *, char *);
int __fastcall vsprintf(char *, const char *, char *);
int __fastcall vsscanf(const char *, const char *, char *);
size_t __fastcall wcstombs(char *, const wchar_t *, size_t);
int __fastcall wctomb(char *, wchar_t);
double __fastcall x80tod(const extended80 *x80);
void __fastcall x80told(const extended80 *x80, long double *x);
double __fastcall y0(double x);
double __fastcall y1(double x);
double __fastcall yn(int n, double x);
FILE *__fastcall zopen(const char *, const char *, int);
$513253074AF884203639B3D8DAF000AD aRdCmd;
$513253074AF884203639B3D8DAF000AD aWrCmd;
$7493DC379C4D203E0ABDB52409B2119D abbrevDate;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 abortErr;
$9042687E7B91F0D398CDB53579A9082B accClear;
$9042687E7B91F0D398CDB53579A9082B accCopy;
$9042687E7B91F0D398CDB53579A9082B accCursor;
$9042687E7B91F0D398CDB53579A9082B accCut;
$9042687E7B91F0D398CDB53579A9082B accEvent;
$9042687E7B91F0D398CDB53579A9082B accMenu;
$9042687E7B91F0D398CDB53579A9082B accPaste;
$9042687E7B91F0D398CDB53579A9082B accRun;
$9042687E7B91F0D398CDB53579A9082B accUndo;
$D129F4DFEBA165F72EA98C618C3DD9EB activDev;
$090FD46DADED99452600AACF39205147 activMask;
$FEBB2992DC4ADCE18624A3BF5CCB540F activateEvt;
$C625086FF7C44828098F3E200ADA2515 activateMsg;
$336CC6651FCB0DCB616C524240E3BE5F activeFlag;
$A8C358955E8CB025A08708108945A486 activeFlagBit;
$1B23EBE69E7C72E0D4B27DFF733651FE acuteUprA;
$1B23EBE69E7C72E0D4B27DFF733651FE acuteUprI;
$1B23EBE69E7C72E0D4B27DFF733651FE acuteUprO;
$1B23EBE69E7C72E0D4B27DFF733651FE acuteUprU;
$CBAF5646069367B3450D2EB7E8DB23F4 adMax;
$CBAF5646069367B3450D2EB7E8DB23F4 adMin;
$DD1E55986C4B43D5A4A79B56B7B8A8F5 adbAddrMask;
$CBAF5646069367B3450D2EB7E8DB23F4 addMax;
$CBAF5646069367B3450D2EB7E8DB23F4 addOver;
$CBAF5646069367B3450D2EB7E8DB23F4 addPin;
$44F391F6F759E67D2435F1C3F9758D28 addRefFailed;
$44F391F6F759E67D2435F1C3F9758D28 addResFailed;
$7442E677199E26E8274D4B6A56B2A7A9 addSize;
$270F00ADEF16EFD1F46CBA2D4CC44548 addSizeBit;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxBadData;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxBadDesc;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxBadEOF;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxBadHex;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxBadNegative;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxBadToken;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxCoercedList;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxMissingQuote;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoCloseBrace;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoCloseBracket;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoCloseHex;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoCloseParen;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoCloseString;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoColon;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoEOF;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoErr;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxNoKey;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxOddHex;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxUncoercedDoubleAt;
$B935597C77A89990FD77BA3DC8605E57 aeBuildSyntaxUncoercedHex;
$59D00A520F94BD460004101ABE91DE78 afpAccessDenied;
$59D00A520F94BD460004101ABE91DE78 afpAlreadyLoggedInErr;
$2A7B9736BE1849E3C769D40762E3702E afpAlreadyMounted;
$59D00A520F94BD460004101ABE91DE78 afpAuthContinue;
$2A7B9736BE1849E3C769D40762E3702E afpBadDirIDType;
$59D00A520F94BD460004101ABE91DE78 afpBadIDErr;
$59D00A520F94BD460004101ABE91DE78 afpBadUAM;
$59D00A520F94BD460004101ABE91DE78 afpBadVersNum;
$59D00A520F94BD460004101ABE91DE78 afpBitmapErr;
$59D00A520F94BD460004101ABE91DE78 afpCallNotAllowed;
$59D00A520F94BD460004101ABE91DE78 afpCallNotSupported;
$2A7B9736BE1849E3C769D40762E3702E afpCantMountMoreSrvre;
$59D00A520F94BD460004101ABE91DE78 afpCantMove;
$59D00A520F94BD460004101ABE91DE78 afpCantRename;
$59D00A520F94BD460004101ABE91DE78 afpCatalogChanged;
$59D00A520F94BD460004101ABE91DE78 afpContainsSharedErr;
$59D00A520F94BD460004101ABE91DE78 afpDenyConflict;
$59D00A520F94BD460004101ABE91DE78 afpDiffVolErr;
$59D00A520F94BD460004101ABE91DE78 afpDirNotEmpty;
$59D00A520F94BD460004101ABE91DE78 afpDirNotFound;
$59D00A520F94BD460004101ABE91DE78 afpDiskFull;
$59D00A520F94BD460004101ABE91DE78 afpEofError;
$59D00A520F94BD460004101ABE91DE78 afpFileBusy;
$59D00A520F94BD460004101ABE91DE78 afpFlatVol;
$59D00A520F94BD460004101ABE91DE78 afpIDExists;
$59D00A520F94BD460004101ABE91DE78 afpIDNotFound;
$59D00A520F94BD460004101ABE91DE78 afpIconTypeError;
$59D00A520F94BD460004101ABE91DE78 afpInsideSharedErr;
$59D00A520F94BD460004101ABE91DE78 afpInsideTrashErr;
$59D00A520F94BD460004101ABE91DE78 afpItemNotFound;
$59D00A520F94BD460004101ABE91DE78 afpLockErr;
$59D00A520F94BD460004101ABE91DE78 afpMiscErr;
$59D00A520F94BD460004101ABE91DE78 afpNoMoreLocks;
$59D00A520F94BD460004101ABE91DE78 afpNoServer;
$59D00A520F94BD460004101ABE91DE78 afpObjectExists;
$59D00A520F94BD460004101ABE91DE78 afpObjectLocked;
$59D00A520F94BD460004101ABE91DE78 afpObjectNotFound;
$59D00A520F94BD460004101ABE91DE78 afpObjectTypeErr;
$59D00A520F94BD460004101ABE91DE78 afpParmErr;
$59D00A520F94BD460004101ABE91DE78 afpPwdExpiredErr;
$59D00A520F94BD460004101ABE91DE78 afpPwdNeedsChangeErr;
$59D00A520F94BD460004101ABE91DE78 afpPwdPolicyErr;
$59D00A520F94BD460004101ABE91DE78 afpPwdSameErr;
$59D00A520F94BD460004101ABE91DE78 afpPwdTooShortErr;
$59D00A520F94BD460004101ABE91DE78 afpRangeNotLocked;
$59D00A520F94BD460004101ABE91DE78 afpRangeOverlap;
$2A7B9736BE1849E3C769D40762E3702E afpSameNodeErr;
$59D00A520F94BD460004101ABE91DE78 afpSameObjectErr;
$59D00A520F94BD460004101ABE91DE78 afpServerGoingDown;
$59D00A520F94BD460004101ABE91DE78 afpSessClosed;
$59D00A520F94BD460004101ABE91DE78 afpTooManyFilesOpen;
$59D00A520F94BD460004101ABE91DE78 afpUserNotAuth;
$59D00A520F94BD460004101ABE91DE78 afpVolLocked;
$F3876F991244DA6C9E2D6E25C6A258B7 alignPix;
$CD245178CB213C313AFEA4423394C154 alignPixBit;
$A698BEB7613B05D556DAD70D18AF6846 allDevices;
$04308B7CF96C01DC89E23685B761AAE3 allDevicesBit;
$008155B23C6C847D4FC048674B3D561B allInit;
$336CC6651FCB0DCB616C524240E3BE5F alphaLock;
$A8C358955E8CB025A08708108945A486 alphaLockBit;
$61822B9F17FF4C6D8E0FF7B2544F9B7D alphaStage;
$54D8896E57898845ADF65F1EA92174A9 altDBoxProc;
$4D8B7D1349328D7C0B79EA781F2B24F6 app1Evt;
$4D8B7D1349328D7C0B79EA781F2B24F6 app1Mask;
$4D8B7D1349328D7C0B79EA781F2B24F6 app2Evt;
$4D8B7D1349328D7C0B79EA781F2B24F6 app2Mask;
$4D8B7D1349328D7C0B79EA781F2B24F6 app3Evt;
$4D8B7D1349328D7C0B79EA781F2B24F6 app3Mask;
$4D8B7D1349328D7C0B79EA781F2B24F6 app4Evt;
$4D8B7D1349328D7C0B79EA781F2B24F6 app4Mask;
$A9758B604953F44B643EE3821B96EE8F appIsDaemon;
$A9758B604953F44B643EE3821B96EE8F appMemFullErr;
$A9758B604953F44B643EE3821B96EE8F appModeErr;
$6A3D362AE979A847958F56E617827AD1 appVersionTooOld;
$0BBA15E5C3F0B1A36F22585881080D95 appearanceBadBrushIndexErr;
$0BBA15E5C3F0B1A36F22585881080D95 appearanceBadCursorIndexErr;
$0BBA15E5C3F0B1A36F22585881080D95 appearanceBadTextColorIndexErr;
$0BBA15E5C3F0B1A36F22585881080D95 appearanceProcessNotRegisteredErr;
$0BBA15E5C3F0B1A36F22585881080D95 appearanceProcessRegisteredErr;
$0BBA15E5C3F0B1A36F22585881080D95 appearanceThemeHasNoAccents;
$2E70F577918B25A15CE357A167451738 appendDITLBottom;
$2E70F577918B25A15CE357A167451738 appendDITLRight;
$AB0BA9F9A7D6180DD29DC1F0E4564763 applFont;
$1B23EBE69E7C72E0D4B27DFF733651FE appleLogo;
$4BCD47A5D5A3A6220200E7A255E8F3F0 appleMark;
$02BA74D5F373AE3510806004249404D3 appleMenuFolderIconResource;
$3396F92FAC0BE03A6A5A931576A5D5DF arabicHighWord;
$DCAFB040F37F6DF2023604683B010173 asciiDownloadStreamAction;
$40B96B499DCCF69C397F5FB88F0808AE asiAliasName;
$40B96B499DCCF69C397F5FB88F0808AE asiParentName;
$40B96B499DCCF69C397F5FB88F0808AE asiServerName;
$40B96B499DCCF69C397F5FB88F0808AE asiVolumeName;
$40B96B499DCCF69C397F5FB88F0808AE asiZoneName;
$20AC36AB2CCF632E02EB72F57668FF65 aspBadVersNum;
$20AC36AB2CCF632E02EB72F57668FF65 aspBufTooSmall;
$20AC36AB2CCF632E02EB72F57668FF65 aspNoAck;
$20AC36AB2CCF632E02EB72F57668FF65 aspNoMoreSess;
$20AC36AB2CCF632E02EB72F57668FF65 aspNoServers;
$20AC36AB2CCF632E02EB72F57668FF65 aspParamErr;
$20AC36AB2CCF632E02EB72F57668FF65 aspServerBusy;
$20AC36AB2CCF632E02EB72F57668FF65 aspSessClosed;
$20AC36AB2CCF632E02EB72F57668FF65 aspSizeErr;
$20AC36AB2CCF632E02EB72F57668FF65 aspTooMany;
$513253074AF884203639B3D8DAF000AD asyncTrpBit;
$13BCE040465F1573CAE3ABB1D506CDAB atAbsoluteCenter;
$13BCE040465F1573CAE3ABB1D506CDAB atBottom;
$13BCE040465F1573CAE3ABB1D506CDAB atBottomLeft;
$13BCE040465F1573CAE3ABB1D506CDAB atBottomRight;
$13BCE040465F1573CAE3ABB1D506CDAB atCenterBottom;
$13BCE040465F1573CAE3ABB1D506CDAB atCenterLeft;
$13BCE040465F1573CAE3ABB1D506CDAB atCenterRight;
$13BCE040465F1573CAE3ABB1D506CDAB atCenterTop;
$13BCE040465F1573CAE3ABB1D506CDAB atHorizontalCenter;
$13BCE040465F1573CAE3ABB1D506CDAB atLeft;
$13BCE040465F1573CAE3ABB1D506CDAB atNone;
$13BCE040465F1573CAE3ABB1D506CDAB atRight;
$13BCE040465F1573CAE3ABB1D506CDAB atTop;
$13BCE040465F1573CAE3ABB1D506CDAB atTopLeft;
$13BCE040465F1573CAE3ABB1D506CDAB atTopRight;
$13BCE040465F1573CAE3ABB1D506CDAB atVerticalCenter;
$D497865AB20A3AD87EEE5277CBD67E69 atomIndexInvalidErr;
$D497865AB20A3AD87EEE5277CBD67E69 atomsNotOfSameTypeErr;
$E4D926CFAC96D1A9C67CAB14770D8CA3 atpBadRsp;
$E4D926CFAC96D1A9C67CAB14770D8CA3 atpLenErr;
$80668F95DBA0778FCF31CFD751986CD9 audioAllChannels;
$80668F95DBA0778FCF31CFD751986CD9 audioDoesIndependentChannels;
$80668F95DBA0778FCF31CFD751986CD9 audioDoesMono;
$80668F95DBA0778FCF31CFD751986CD9 audioDoesStereo;
$80668F95DBA0778FCF31CFD751986CD9 audioLeftChannel;
$80668F95DBA0778FCF31CFD751986CD9 audioMuted;
$80668F95DBA0778FCF31CFD751986CD9 audioRightChannel;
$80668F95DBA0778FCF31CFD751986CD9 audioUnmuted;
$A5BD715C8EAA008A7A3794353BC5F23C authFailErr;
$FEBB2992DC4ADCE18624A3BF5CCB540F autoKey;
$090FD46DADED99452600AACF39205147 autoKeyMask;
$4D21454FAD90E25BD2497F2FB4C4BB43 autoTrack;
$2AFA9741D4492F551C527940D8BE691A auxiliaryExportDataUnavailable;
$0A460A6E82C5C9197C39E6203E2D9451 availableCmd;
$37D3F017CE89DF4C910B7AFE8C81EA0A bAccessCntl;
$EED9E13FE6CFDB5E2494C46366783808 bAllowCDiDataHandler;
$A2BAF8672D8DFE440D7AF0F2D0D6082C bAncestorModDateChanges;
$F8F9ECD74B045B35282DEB8B8260CDB3 bChargerIsAttached;
$8B11D6C86727B3534EB41893F7C24CCB bHandleAERecording;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasBTreeMgr;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasBlankAccessPrivileges;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasCatSearch;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasCopyFile;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasDesktopMgr;
$4BFCDFC26AEC67FAD48BE76FA2C43E56 bHasDirectIO;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasExtFSVol;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasFileIDs;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasFolderLock;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasMoveRename;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasOpenDeny;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasPersonalAccessPrivileges;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasShortName;
$37D3F017CE89DF4C910B7AFE8C81EA0A bHasUserGroupList;
$EED9E13FE6CFDB5E2494C46366783808 bIsAutoMounted;
$EDD0961C252A373E5649B4208016AE9C bIsEjectable;
$EDD0961C252A373E5649B4208016AE9C bL2PCanMapFileBlocks;
$8B11D6C86727B3534EB41893F7C24CCB bLanguageMask;
$37D3F017CE89DF4C910B7AFE8C81EA0A bLimitFCBs;
$37D3F017CE89DF4C910B7AFE8C81EA0A bLocalWList;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoBootBlks;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoDeskItems;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoLclSync;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoMiniFndr;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoSwitchTo;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoSysDir;
$37D3F017CE89DF4C910B7AFE8C81EA0A bNoVNEdit;
$A2BAF8672D8DFE440D7AF0F2D0D6082C bParentModDateChanges;
$8B11D6C86727B3534EB41893F7C24CCB bScriptLanguageMask;
$8B11D6C86727B3534EB41893F7C24CCB bScriptMask;
$80042E239329A5D53959B93C979DB8B4 bSourceCanBeCharged;
$80042E239329A5D53959B93C979DB8B4 bSourceIsAC;
$F8F9ECD74B045B35282DEB8B8260CDB3 bSourceIsAvailable;
$80042E239329A5D53959B93C979DB8B4 bSourceIsBattery;
$F8F9ECD74B045B35282DEB8B8260CDB3 bSourceIsCharging;
$80042E239329A5D53959B93C979DB8B4 bSourceIsUPS;
$80042E239329A5D53959B93C979DB8B4 bSourceProvidesWarnLevels;
$EDD0961C252A373E5649B4208016AE9C bSupports2TBFiles;
$37D3F017CE89DF4C910B7AFE8C81EA0A bSupportsAsyncRequests;
$EED9E13FE6CFDB5E2494C46366783808 bSupportsExclusiveLocks;
$EDD0961C252A373E5649B4208016AE9C bSupportsFSCatalogSearch;
$EDD0961C252A373E5649B4208016AE9C bSupportsFSExchangeObjects;
$EDD0961C252A373E5649B4208016AE9C bSupportsHFSPlusAPIs;
$EDD0961C252A373E5649B4208016AE9C bSupportsLongNames;
$EDD0961C252A373E5649B4208016AE9C bSupportsMultiScriptNames;
$EDD0961C252A373E5649B4208016AE9C bSupportsNamedForks;
$EDD0961C252A373E5649B4208016AE9C bSupportsSubtreeIterators;
$EED9E13FE6CFDB5E2494C46366783808 bSupportsSymbolicLinks;
$37D3F017CE89DF4C910B7AFE8C81EA0A bSupportsTrashVolumeCache;
$8B11D6C86727B3534EB41893F7C24CCB bTakeActiveEvent;
$37D3F017CE89DF4C910B7AFE8C81EA0A bTrshOffLine;
$F77E3C3D1101CCCA05824B85966C0086 badATPSkt;
$F5733A20729282EBCF3804504A9796F3 badBtSlpErr;
$F77E3C3D1101CCCA05824B85966C0086 badBuffNum;
$BA4AF89C300243A236DEAC5502E7295F badCallOrderErr;
$B1318AEC6DDB22F080A547A9A181D628 badChannel;
$F5733A20729282EBCF3804504A9796F3 badCksmErr;
$D1694FAFDED606F5C1530A80708D1A68 badCodecCharacterizationErr;
$46C68B8BA799D7A0BE57EBC0FE77F361 badComponentInstance;
$46C68B8BA799D7A0BE57EBC0FE77F361 badComponentSelector;
$2AFA9741D4492F551C527940D8BE691A badComponentType;
$F5D25084AB3C40D9EEA892B8C65FBDB2 badControllerHeight;
$F5733A20729282EBCF3804504A9796F3 badDBtSlp;
$F5733A20729282EBCF3804504A9796F3 badDCksum;
$2AFA9741D4492F551C527940D8BE691A badDataRefIndex;
$A05B9B2BBC343A6D19ADAB85FCC92B0A badDelim;
$BA4AF89C300243A236DEAC5502E7295F badDepthErr;
$84C242BEA25FE377EB24CF870780C809 badDictFormat;
$00479C61961A244562671FE5ED76F811 badDragFlavorErr;
$00479C61961A244562671FE5ED76F811 badDragItemErr;
$00479C61961A244562671FE5ED76F811 badDragRefErr;
$2AFA9741D4492F551C527940D8BE691A badEditIndex;
$2AFA9741D4492F551C527940D8BE691A badEditList;
$E3C80D94FC48D4CBFF4A338892F667A1 badEditionFileErr;
$A05B9B2BBC343A6D19ADAB85FCC92B0A badEnding;
$44F391F6F759E67D2435F1C3F9758D28 badExtResource;
$4AA72FB96FE40BDE945A00A3EE3D602E badFCBErr;
$4AA72FB96FE40BDE945A00A3EE3D602E badFidErr;
$B1318AEC6DDB22F080A547A9A181D628 badFileFormat;
$5D2ED6E9C3B52C2B530C241D43578F10 badFolderDescErr;
$B1318AEC6DDB22F080A547A9A181D628 badFormat;
$2AFA9741D4492F551C527940D8BE691A badImageDescription;
$00479C61961A244562671FE5ED76F811 badImageErr;
$00479C61961A244562671FE5ED76F811 badImageRgnErr;
$84C242BEA25FE377EB24CF870780C809 badInputText;
$A5BD715C8EAA008A7A3794353BC5F23C badLocNameErr;
$39BB08BE97442728A4F53B80076F6C3F badMDBErr;
$39BB08BE97442728A4F53B80076F6C3F badMovErr;
$A5BD715C8EAA008A7A3794353BC5F23C badPortNameErr;
$5299BEEE17FE295435C76CB19C21F235 badProfileError;
$2AFA9741D4492F551C527940D8BE691A badPublicMovieAtom;
$A5BD715C8EAA008A7A3794353BC5F23C badReqErr;
$5D2ED6E9C3B52C2B530C241D43578F10 badRoutingSizeErr;
$F5D25084AB3C40D9EEA892B8C65FBDB2 badSGChannel;
$2140534AFEBF1A2FEC4DC9038366C647 badScrapRefErr;
$E3C80D94FC48D4CBFF4A338892F667A1 badSectionErr;
$A5BD715C8EAA008A7A3794353BC5F23C badServiceMethodErr;
$E3C80D94FC48D4CBFF4A338892F667A1 badSubPartErr;
$2AFA9741D4492F551C527940D8BE691A badTrackIndex;
$ED7426C36EBB82C0ECCADDCACB27D156 badTranslationSpecErr;
$621775189DBE97248B7FB782F8F10678 badUnitErr;
$008155B23C6C847D4FC048674B3D561B baseAddr32;
$1B23EBE69E7C72E0D4B27DFF733651FE baseDblQuote;
$1B23EBE69E7C72E0D4B27DFF733651FE baseSingQuote;
$4FBF380524D959B2717756BA70CE323B batteryCharging;
$CC4616D3C4C384DC58C4C548B533D9C9 batteryDeadBit;
$4DE595C756820CE39E98AC2FA7981434 batteryDeadMask;
$4FBF380524D959B2717756BA70CE323B batteryInstalled;
$CC4616D3C4C384DC58C4C548B533D9C9 batteryLowBit;
$4DE595C756820CE39E98AC2FA7981434 batteryLowMask;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 bdNamErr;
$61822B9F17FF4C6D8E0FF7B2544F9B7D betaStage;
$229E80E760A3609929A8A4D193AE679E blackBit;
$2EE6D656A6356132BC5631EBF7AA5929 blackColor;
$CBAF5646069367B3450D2EB7E8DB23F4 blend;
$229E80E760A3609929A8A4D193AE679E blueBit;
$2EE6D656A6356132BC5631EBF7AA5929 blueColor;
$CA37B7C591AB80BE0B169161AB784E55 bold;
$F5733A20729282EBCF3804504A9796F3 breakRecd;
$1B23EBE69E7C72E0D4B27DFF733651FE breveMark;
$14338A5B3D28FC26400B4BB31F21F442 btDupRecErr;
$14338A5B3D28FC26400B4BB31F21F442 btKeyAttrErr;
$14338A5B3D28FC26400B4BB31F21F442 btKeyLenErr;
$14338A5B3D28FC26400B4BB31F21F442 btNoSpace;
$14338A5B3D28FC26400B4BB31F21F442 btRecNotFnd;
$8E378796D9B27A0F0F3B65CDE1C24332 btnCtrl;
$336CC6651FCB0DCB616C524240E3BE5F btnState;
$A8C358955E8CB025A08708108945A486 btnStateBit;
$E4D926CFAC96D1A9C67CAB14770D8CA3 buf2SmallErr;
$84C242BEA25FE377EB24CF870780C809 bufTooSmall;
$0A460A6E82C5C9197C39E6203E2D9451 bufferCmd;
$A9758B604953F44B643EE3821B96EE8F bufferIsSmall;
$B1318AEC6DDB22F080A547A9A181D628 buffersTooSmall;
$008155B23C6C847D4FC048674B3D561B burstDevice;
$2DA05D06990FCEC1EA5697B9BD8DA598 buttonMsg;
$FF20F5A5458E17FC07E98E38B8F0DE0E cADBAddress;
$733EE853FD49CE0FF2AF67A911946187 cAEList;
$87EA63B36AC6249615DF27E4F3509D83 cAccessoryProcess;
$87EA63B36AC6249615DF27E4F3509D83 cAccessorySuitcase;
$3DE48F1B8B4558A3E4C4407DF74445DD cAddress;
$FF20F5A5458E17FC07E98E38B8F0DE0E cAddressSpec;
$87EA63B36AC6249615DF27E4F3509D83 cAliasFile;
$87EA63B36AC6249615DF27E4F3509D83 cAliasList;
$8B45090A886AD5148A7928FDD00332FF cAliasOrString;
$FF20F5A5458E17FC07E98E38B8F0DE0E cAppleTalkAddress;
$733EE853FD49CE0FF2AF67A911946187 cApplication;
$87EA63B36AC6249615DF27E4F3509D83 cApplicationFile;
$87EA63B36AC6249615DF27E4F3509D83 cApplicationProcess;
$7D6ED94B512169AF3FF6F2EA932D25FF cApril;
$733EE853FD49CE0FF2AF67A911946187 cArc;
$7D6ED94B512169AF3FF6F2EA932D25FF cAugust;
$A20BE615049D5079A0A9F69830C0C3D0 cBodyColor;
$733EE853FD49CE0FF2AF67A911946187 cBoolean;
$FF20F5A5458E17FC07E98E38B8F0DE0E cBusAddress;
$733EE853FD49CE0FF2AF67A911946187 cCell;
$733EE853FD49CE0FF2AF67A911946187 cChar;
$2A5C702EB051A5E9BD920DD6120C5BE3 cClassIdentifier;
$87EA63B36AC6249615DF27E4F3509D83 cClippingFile;
$87EA63B36AC6249615DF27E4F3509D83 cClippingWindow;
$8B45090A886AD5148A7928FDD00332FF cClosure;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceKataHiragana;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceLowerCase;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceOneByteToTwoByte;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceRemoveDiacriticals;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceRemoveHyphens;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceRemovePunctuation;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceRemoveWhiteSpace;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceSmallKana;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceUpperCase;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoerceZenkakuhankaku;
$3DE48F1B8B4558A3E4C4407DF74445DD cCoercion;
$733EE853FD49CE0FF2AF67A911946187 cColorTable;
$733EE853FD49CE0FF2AF67A911946187 cColumn;
$2A5C702EB051A5E9BD920DD6120C5BE3 cConstant;
$87EA63B36AC6249615DF27E4F3509D83 cContainer;
$87EA63B36AC6249615DF27E4F3509D83 cContainerWindow;
$87EA63B36AC6249615DF27E4F3509D83 cContentSpace;
$87EA63B36AC6249615DF27E4F3509D83 cControlPanelFile;
$87EA63B36AC6249615DF27E4F3509D83 cDTPWindow;
$7D6ED94B512169AF3FF6F2EA932D25FF cDecember;
$AAB5F496A0B5E152CB221717E36939D8 cDepthErr;
$87EA63B36AC6249615DF27E4F3509D83 cDeskAccessoryFile;
$87EA63B36AC6249615DF27E4F3509D83 cDesktop;
$87EA63B36AC6249615DF27E4F3509D83 cDesktopPrinter;
$AAB5F496A0B5E152CB221717E36939D8 cDevErr;
$FF20F5A5458E17FC07E98E38B8F0DE0E cDevSpec;
$87EA63B36AC6249615DF27E4F3509D83 cDisk;
$733EE853FD49CE0FF2AF67A911946187 cDocument;
$87EA63B36AC6249615DF27E4F3509D83 cDocumentFile;
$733EE853FD49CE0FF2AF67A911946187 cDrawingArea;
$87EA63B36AC6249615DF27E4F3509D83 cEntireContents;
$733EE853FD49CE0FF2AF67A911946187 cEnumeration;
$FF20F5A5458E17FC07E98E38B8F0DE0E cEthernetAddress;
$2A5C702EB051A5E9BD920DD6120C5BE3 cEventIdentifier;
$A2AFCD03DFE5A764B649D3293477A409 cFTPItem;
$7D6ED94B512169AF3FF6F2EA932D25FF cFebruary;
$733EE853FD49CE0FF2AF67A911946187 cFile;
$FF20F5A5458E17FC07E98E38B8F0DE0E cFireWireAddress;
$733EE853FD49CE0FF2AF67A911946187 cFixed;
$733EE853FD49CE0FF2AF67A911946187 cFixedPoint;
$733EE853FD49CE0FF2AF67A911946187 cFixedRectangle;
$87EA63B36AC6249615DF27E4F3509D83 cFolder;
$87EA63B36AC6249615DF27E4F3509D83 cFontFile;
$87EA63B36AC6249615DF27E4F3509D83 cFontSuitcase;
$A20BE615049D5079A0A9F69830C0C3D0 cFrameColor;
$5E879841A9E7F0D0A6CE119A872ABAD5 cFriday;
$733EE853FD49CE0FF2AF67A911946187 cGraphicLine;
$733EE853FD49CE0FF2AF67A911946187 cGraphicObject;
$733EE853FD49CE0FF2AF67A911946187 cGraphicShape;
$733EE853FD49CE0FF2AF67A911946187 cGraphicText;
$87EA63B36AC6249615DF27E4F3509D83 cGroup;
$733EE853FD49CE0FF2AF67A911946187 cGroupedGraphic;
$A2AFCD03DFE5A764B649D3293477A409 cHTML;
$0F2ED4E17A111F5C22C46606F7BDBC4A cHandleBreakpoint;
$2A5C702EB051A5E9BD920DD6120C5BE3 cHandler;
$FF20F5A5458E17FC07E98E38B8F0DE0E cIPAddress;
$87EA63B36AC6249615DF27E4F3509D83 cIconFamily;
$87EA63B36AC6249615DF27E4F3509D83 cInfoWindow;
$85890810F2BB655200B2ED33F98F3194 cInsertionLoc;
$85890810F2BB655200B2ED33F98F3194 cInsertionPoint;
$7C4C1002606730B1485F01412B662007 cInternalFinderObject;
$A2AFCD03DFE5A764B649D3293477A409 cInternetAddress;
$85890810F2BB655200B2ED33F98F3194 cIntlText;
$85890810F2BB655200B2ED33F98F3194 cIntlWritingCode;
$85890810F2BB655200B2ED33F98F3194 cItem;
$7D6ED94B512169AF3FF6F2EA932D25FF cJanuary;
$7D6ED94B512169AF3FF6F2EA932D25FF cJuly;
$7D6ED94B512169AF3FF6F2EA932D25FF cJune;
$2A5C702EB051A5E9BD920DD6120C5BE3 cKeyForm;
$2A5C702EB051A5E9BD920DD6120C5BE3 cKeyIdentifier;
$0050975A0ADB8A5406CEF98DE6B1DFA8 cKeystroke;
$87EA63B36AC6249615DF27E4F3509D83 cLabel;
$85890810F2BB655200B2ED33F98F3194 cLine;
$2A5C702EB051A5E9BD920DD6120C5BE3 cLinkedList;
$2A5C702EB051A5E9BD920DD6120C5BE3 cList;
$8B45090A886AD5148A7928FDD00332FF cListElement;
$8B45090A886AD5148A7928FDD00332FF cListOrRecord;
$8B45090A886AD5148A7928FDD00332FF cListOrString;
$8B45090A886AD5148A7928FDD00332FF cListRecordOrString;
$FF20F5A5458E17FC07E98E38B8F0DE0E cLocalTalkAddress;
$85890810F2BB655200B2ED33F98F3194 cLongDateTime;
$85890810F2BB655200B2ED33F98F3194 cLongFixed;
$85890810F2BB655200B2ED33F98F3194 cLongFixedPoint;
$85890810F2BB655200B2ED33F98F3194 cLongFixedRectangle;
$85890810F2BB655200B2ED33F98F3194 cLongInteger;
$85890810F2BB655200B2ED33F98F3194 cLongPoint;
$85890810F2BB655200B2ED33F98F3194 cLongRectangle;
$3DE48F1B8B4558A3E4C4407DF74445DD cMachine;
$85890810F2BB655200B2ED33F98F3194 cMachineLoc;
$7D6ED94B512169AF3FF6F2EA932D25FF cMarch;
$AAB5F496A0B5E152CB221717E36939D8 cMatchErr;
$7D6ED94B512169AF3FF6F2EA932D25FF cMay;
$85890810F2BB655200B2ED33F98F3194 cMenu;
$85890810F2BB655200B2ED33F98F3194 cMenuItem;
$2A5C702EB051A5E9BD920DD6120C5BE3 cMissingValue;
$5E879841A9E7F0D0A6CE119A872ABAD5 cMonday;
$7D6ED94B512169AF3FF6F2EA932D25FF cMonth;
$AAB5F496A0B5E152CB221717E36939D8 cNoMemErr;
$7D6ED94B512169AF3FF6F2EA932D25FF cNovember;
$8B45090A886AD5148A7928FDD00332FF cNumber;
$8B45090A886AD5148A7928FDD00332FF cNumberDateTimeOrString;
$8B45090A886AD5148A7928FDD00332FF cNumberOrDateTime;
$8B45090A886AD5148A7928FDD00332FF cNumberOrString;
$85890810F2BB655200B2ED33F98F3194 cObject;
$2A5C702EB051A5E9BD920DD6120C5BE3 cObjectBeingExamined;
$85890810F2BB655200B2ED33F98F3194 cObjectSpecifier;
$7D6ED94B512169AF3FF6F2EA932D25FF cOctober;
$87EA63B36AC6249615DF27E4F3509D83 cOnlineDisk;
$87EA63B36AC6249615DF27E4F3509D83 cOnlineLocalDisk;
$87EA63B36AC6249615DF27E4F3509D83 cOnlineRemoteDisk;
$85890810F2BB655200B2ED33F98F3194 cOpenableObject;
$85890810F2BB655200B2ED33F98F3194 cOval;
$48B78193C35E36DF1C933C830E2DECA3 cPICT;
$87EA63B36AC6249615DF27E4F3509D83 cPackage;
$48B78193C35E36DF1C933C830E2DECA3 cParagraph;
$48B78193C35E36DF1C933C830E2DECA3 cPixel;
$48B78193C35E36DF1C933C830E2DECA3 cPixelMap;
$48B78193C35E36DF1C933C830E2DECA3 cPolygon;
$87EA63B36AC6249615DF27E4F3509D83 cPreferences;
$87EA63B36AC6249615DF27E4F3509D83 cPreferencesWindow;
$2A5C702EB051A5E9BD920DD6120C5BE3 cPreposition;
$2A5C702EB051A5E9BD920DD6120C5BE3 cProcedure;
$87EA63B36AC6249615DF27E4F3509D83 cProcess;
$48B78193C35E36DF1C933C830E2DECA3 cProperty;
$AAB5F496A0B5E152CB221717E36939D8 cProtectErr;
$48B78193C35E36DF1C933C830E2DECA3 cQDPoint;
$48B78193C35E36DF1C933C830E2DECA3 cQDRectangle;
$48B78193C35E36DF1C933C830E2DECA3 cRGBColor;
$AAB5F496A0B5E152CB221717E36939D8 cRangeErr;
$8B45090A886AD5148A7928FDD00332FF cRawData;
$2A5C702EB051A5E9BD920DD6120C5BE3 cReal;
$2A5C702EB051A5E9BD920DD6120C5BE3 cRecord;
$48B78193C35E36DF1C933C830E2DECA3 cRectangle;
$2A5C702EB051A5E9BD920DD6120C5BE3 cReference;
$AAB5F496A0B5E152CB221717E36939D8 cResErr;
$48B78193C35E36DF1C933C830E2DECA3 cRotation;
$48B78193C35E36DF1C933C830E2DECA3 cRoundedRectangle;
$48B78193C35E36DF1C933C830E2DECA3 cRow;
$3DE48F1B8B4558A3E4C4407DF74445DD cRunningAddress;
$FF20F5A5458E17FC07E98E38B8F0DE0E cSCSIAddress;
$5E879841A9E7F0D0A6CE119A872ABAD5 cSaturday;
$2A5C702EB051A5E9BD920DD6120C5BE3 cScript;
$8B45090A886AD5148A7928FDD00332FF cSeconds;
$48B78193C35E36DF1C933C830E2DECA3 cSelection;
$7D6ED94B512169AF3FF6F2EA932D25FF cSeptember;
$87EA63B36AC6249615DF27E4F3509D83 cSharableContainer;
$87EA63B36AC6249615DF27E4F3509D83 cSharingPrivileges;
$87EA63B36AC6249615DF27E4F3509D83 cSharingWindow;
$48B78193C35E36DF1C933C830E2DECA3 cShortInteger;
$2A5C702EB051A5E9BD920DD6120C5BE3 cSmallReal;
$87EA63B36AC6249615DF27E4F3509D83 cSound;
$87EA63B36AC6249615DF27E4F3509D83 cSoundFile;
$87EA63B36AC6249615DF27E4F3509D83 cSpecialFolders;
$87EA63B36AC6249615DF27E4F3509D83 cStatusWindow;
$3DE48F1B8B4558A3E4C4407DF74445DD cStorage;
$65FF27308BEBB2E83C35FC5B5D224F9F cString;
$8B45090A886AD5148A7928FDD00332FF cStringClass;
$87EA63B36AC6249615DF27E4F3509D83 cSuitcase;
$5E879841A9E7F0D0A6CE119A872ABAD5 cSunday;
$2A5C702EB051A5E9BD920DD6120C5BE3 cSymbol;
$48B78193C35E36DF1C933C830E2DECA3 cTable;
$AAB5F496A0B5E152CB221717E36939D8 cTempMemErr;
$48B78193C35E36DF1C933C830E2DECA3 cText;
$A20BE615049D5079A0A9F69830C0C3D0 cTextColor;
$48B78193C35E36DF1C933C830E2DECA3 cTextFlow;
$48B78193C35E36DF1C933C830E2DECA3 cTextStyles;
$A20BE615049D5079A0A9F69830C0C3D0 cThumbColor;
$5E879841A9E7F0D0A6CE119A872ABAD5 cThursday;
$FF20F5A5458E17FC07E98E38B8F0DE0E cTokenRingAddress;
$87EA63B36AC6249615DF27E4F3509D83 cTrash;
$5E879841A9E7F0D0A6CE119A872ABAD5 cTuesday;
$48B78193C35E36DF1C933C830E2DECA3 cType;
$A2AFCD03DFE5A764B649D3293477A409 cURL;
$FF20F5A5458E17FC07E98E38B8F0DE0E cUSBAddress;
$2A5C702EB051A5E9BD920DD6120C5BE3 cUndefined;
$87EA63B36AC6249615DF27E4F3509D83 cUser;
$2A5C702EB051A5E9BD920DD6120C5BE3 cUserIdentifier;
$2A5C702EB051A5E9BD920DD6120C5BE3 cVector;
$5946B9DECF101F624185137FE626359C cVersion;
$5E879841A9E7F0D0A6CE119A872ABAD5 cWednesday;
$5E879841A9E7F0D0A6CE119A872ABAD5 cWeekday;
$5946B9DECF101F624185137FE626359C cWindow;
$5946B9DECF101F624185137FE626359C cWord;
$5E879841A9E7F0D0A6CE119A872ABAD5 cWritingCodeInfo;
$3DE48F1B8B4558A3E4C4407DF74445DD cZone;
$D22742619E6631296935319C1155C38F calArabicCivil;
$D22742619E6631296935319C1155C38F calArabicLunar;
$D22742619E6631296935319C1155C38F calCoptic;
$D22742619E6631296935319C1155C38F calGregorian;
$D22742619E6631296935319C1155C38F calJapanese;
$D22742619E6631296935319C1155C38F calJewish;
$D22742619E6631296935319C1155C38F calPersian;
$4D21454FAD90E25BD2497F2FB4C4BB43 calcCRgns;
$4D21454FAD90E25BD2497F2FB4C4BB43 calcCntlRgn;
$4D21454FAD90E25BD2497F2FB4C4BB43 calcThumbRgn;
$0A460A6E82C5C9197C39E6203E2D9451 callBackCmd;
$2E21CDC9416351B60D3647421538B7E9 callNotSupportedByNodeErr;
$42A49EA8AE7BAE129AB675773FAEF748 canGetBatteryTime;
$42A49EA8AE7BAE129AB675773FAEF748 canPowerOffPCIBus;
$42A49EA8AE7BAE129AB675773FAEF748 canWakeupOnRing;
$955AB7EDEF7D16C0C208B264FC667289 cancel;
$C625086FF7C44828098F3E200ADA2515 cancelMsg;
$D497865AB20A3AD87EEE5277CBD67E69 cannotBeLeafAtomErr;
$712386A955D55ECCA8691C9DF9CD79AC cannotDeferErr;
$D497865AB20A3AD87EEE5277CBD67E69 cannotFindAtomErr;
$712386A955D55ECCA8691C9DF9CD79AC cannotMakeContiguousErr;
$F5D25084AB3C40D9EEA892B8C65FBDB2 cannotMoveAttachedController;
$F5D25084AB3C40D9EEA892B8C65FBDB2 cannotSetWidthOfAttachedController;
$5299BEEE17FE295435C76CB19C21F235 cantCreatePickerWindow;
$2AFA9741D4492F551C527940D8BE691A cantCreateSingleForkFile;
$F5D25084AB3C40D9EEA892B8C65FBDB2 cantDoThatInCurrentMode;
$2AFA9741D4492F551C527940D8BE691A cantEnableTrack;
$2AFA9741D4492F551C527940D8BE691A cantFindHandler;
$00479C61961A244562671FE5ED76F811 cantGetFlavorErr;
$5299BEEE17FE295435C76CB19C21F235 cantLoadPackage;
$AAB5F496A0B5E152CB221717E36939D8 cantLoadPickMethodErr;
$5299BEEE17FE295435C76CB19C21F235 cantLoadPicker;
$2AFA9741D4492F551C527940D8BE691A cantOpenHandler;
$2AFA9741D4492F551C527940D8BE691A cantPutPublicMovieAtom;
$3A0529DF53FD0FCB1009E9B11B87DC72 cantReadUtilities;
$A8C97E4EDD9E089EB77DFE179D2C9A4B cantReceiveFromSynthesizerOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B cantSendToSynthesizerOSErr;
$F5733A20729282EBCF3804504A9796F3 cantStepErr;
$4AA72FB96FE40BDE945A00A3EE3D602E catChangedErr;
$9AE367475DB3252AE4C1C184F0EB9534 cautionIcon;
$F77E3C3D1101CCCA05824B85966C0086 cbNotFound;
$333BEF332B2A04727AB3D8007BA446C6 cdevGenErr;
$333BEF332B2A04727AB3D8007BA446C6 cdevMemErr;
$333BEF332B2A04727AB3D8007BA446C6 cdevResErr;
$333BEF332B2A04727AB3D8007BA446C6 cdevUnset;
$1B23EBE69E7C72E0D4B27DFF733651FE cedilla;
$1B23EBE69E7C72E0D4B27DFF733651FE centeredDot;
$3396F92FAC0BE03A6A5A931576A5D5DF centeuroHighWord;
$4FBD46A7782F6749F1F35ACCB96A0A2C century;
$DDA3263AAAFDC2735294AAEF0985DAE8 cexec68K;
$DF9842B890F18E9AD62ACC37119B3D4D cfragAbortClosureErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragArchitectureErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragCFMInternalErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragCFMStartupErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragClosureIDErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragConnectionIDErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragContainerIDErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragContextIDErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragDupRegistrationErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragFileSizeErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragFirstErrCode;
$65A4E643D8AFCFAC94B280C63A54187E cfragFirstReservedCode;
$DF9842B890F18E9AD62ACC37119B3D4D cfragFragmentCorruptErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragFragmentFormatErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragFragmentUsageErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragImportTooNewErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragImportTooOldErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragInitAtBootErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragInitFunctionErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragInitLoopErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragInitOrderErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragLastErrCode;
$DF9842B890F18E9AD62ACC37119B3D4D cfragLibConnErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoApplicationErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoClientMemErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoIDsErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoLibraryErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoPositionErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoPrivateMemErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoRegistrationErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoSectionErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNoSymbolErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragNotClosureErr;
$DF9842B890F18E9AD62ACC37119B3D4D cfragOutputLengthErr;
$65A4E643D8AFCFAC94B280C63A54187E cfragReservedCode_1;
$65A4E643D8AFCFAC94B280C63A54187E cfragReservedCode_2;
$65A4E643D8AFCFAC94B280C63A54187E cfragReservedCode_3;
$DF9842B890F18E9AD62ACC37119B3D4D cfragUnresolvedErr;
$B1318AEC6DDB22F080A547A9A181D628 channelBusy;
$B1318AEC6DDB22F080A547A9A181D628 channelNotBusy;
$DD1E55986C4B43D5A4A79B56B7B8A8F5 charCodeMask;
$CC4616D3C4C384DC58C4C548B533D9C9 chargeOverFlowBit;
$4DE595C756820CE39E98AC2FA7981434 chargeOverFlowMask;
$CC4616D3C4C384DC58C4C548B533D9C9 chargerConnBit;
$4DE595C756820CE39E98AC2FA7981434 chargerConnMask;
$4FBF380524D959B2717756BA70CE323B chargerConnected;
$A6732141157575407A100CC495517723 checkBoxProc;
$4BCD47A5D5A3A6220200E7A255E8F3F0 checkMark;
$8E378796D9B27A0F0F3B65CDE1C24332 chkCtrl;
$273248B6AF6D4788A422F6293FFF803A chooserID;
$2DA05D06990FCEC1EA5697B9BD8DA598 chooserInitMsg;
$DFDE7CB8727F27365C7BEDFDD0D6492F chunky;
$DFDE7CB8727F27365C7BEDFDD0D6492F chunkyPlanar;
$DDA3263AAAFDC2735294AAEF0985DAE8 cidType0StreamType;
$DDA3263AAAFDC2735294AAEF0985DAE8 cidType2StreamType;
$1B23EBE69E7C72E0D4B27DFF733651FE circumflex;
$1B23EBE69E7C72E0D4B27DFF733651FE circumflexUprA;
$1B23EBE69E7C72E0D4B27DFF733651FE circumflexUprE;
$1B23EBE69E7C72E0D4B27DFF733651FE circumflexUprI;
$1B23EBE69E7C72E0D4B27DFF733651FE circumflexUprO;
$1B23EBE69E7C72E0D4B27DFF733651FE circumflexUprU;
$E4D926CFAC96D1A9C67CAB14770D8CA3 ckSumErr;
$D129F4DFEBA165F72EA98C618C3DD9EB clearDev;
$F3876F991244DA6C9E2D6E25C6A258B7 clipPix;
$CD245178CB213C313AFEA4423394C154 clipPixBit;
$F5733A20729282EBCF3804504A9796F3 clkRdErr;
$F5733A20729282EBCF3804504A9796F3 clkWrErr;
$0A460A6E82C5C9197C39E6203E2D9451 clockComponentCmd;
$621775189DBE97248B7FB782F8F10678 closErr;
$D129F4DFEBA165F72EA98C618C3DD9EB closeDev;
$270F00ADEF16EFD1F46CBA2D4CC44548 clrBit;
$15316E1F4A06DF5737D2E4A1C671F46F clutType;
$1BD406C8032FCC49A6548FD0EF595396 cm10CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm11CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm12CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm13CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm14CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm15CLRData;
$A3DCD35979526F9C17D6F74908408E41 cm16_8ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm24_8ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm32_16ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm32_32ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm32_8ColorPacking;
$1BD406C8032FCC49A6548FD0EF595396 cm3CLRData;
$A3DCD35979526F9C17D6F74908408E41 cm40_8ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm48_16ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm48_8ColorPacking;
$1BD406C8032FCC49A6548FD0EF595396 cm4CLRData;
$A3DCD35979526F9C17D6F74908408E41 cm56_8ColorPacking;
$1BD406C8032FCC49A6548FD0EF595396 cm5CLRData;
$A3DCD35979526F9C17D6F74908408E41 cm64_16ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cm64_8ColorPacking;
$1BD406C8032FCC49A6548FD0EF595396 cm6CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm7CLRData;
$1BD406C8032FCC49A6548FD0EF595396 cm8CLRData;
$A3DCD35979526F9C17D6F74908408E41 cm8_8ColorPacking;
$1BD406C8032FCC49A6548FD0EF595396 cm9CLRData;
$4E04791537D5F9896996412A34F9DF73 cmARGB32PmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmARGB32Space;
$4E04791537D5F9896996412A34F9DF73 cmARGB64LPmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmARGB64LSpace;
$4E04791537D5F9896996412A34F9DF73 cmARGB64PmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmARGB64Space;
$97EAAB2DC87E029A1786561CE104A31A cmAToB0Tag;
$97EAAB2DC87E029A1786561CE104A31A cmAToB1Tag;
$97EAAB2DC87E029A1786561CE104A31A cmAToB2Tag;
$E731989FC0216527321E79EC1179D013 cmAbortWriteAccess;
$60DE50F669CF54F17129F0EBFB986B62 cmAbsoluteColorimetric;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmAbstractClass;
$A3DCD35979526F9C17D6F74908408E41 cmAlphaFirstPacking;
$A3DCD35979526F9C17D6F74908408E41 cmAlphaLastPacking;
$583B095E0E1C4AF48753C9054C025119 cmAlphaPmulSpace;
$583B095E0E1C4AF48753C9054C025119 cmAlphaSpace;
$C847B87D1C0CB21C7CB85F03621A671B cmAsciiData;
$97EAAB2DC87E029A1786561CE104A31A cmBToA0Tag;
$97EAAB2DC87E029A1786561CE104A31A cmBToA1Tag;
$97EAAB2DC87E029A1786561CE104A31A cmBToA2Tag;
$E731989FC0216527321E79EC1179D013 cmBeginAccess;
$23B5EE64110F5F99C914AFEFADC5E459 cmBeginProfile;
$0DF6A2A4F897C901432374EC7E35B689 cmBeginProfileSel;
$B4D2A8BBF9D2420987B0C17DB1EACFCB cmBestMode;
$A28164E73FCF99FD87F3421048BF47D5 cmBgResponse;
$C847B87D1C0CB21C7CB85F03621A671B cmBinaryData;
$97EAAB2DC87E029A1786561CE104A31A cmBlueColorantTag;
$A28164E73FCF99FD87F3421048BF47D5 cmBlueResponse;
$97EAAB2DC87E029A1786561CE104A31A cmBlueTRCTag;
$45BA2A04F99B30C6B89CA93EE87A61BC cmBradfordChromaticAdaptation;
$D9F7BDAFA0352E288953D6A8506BE994 cmBufferBasedProfile;
$6487404EE3EFAE8B28531347FD5AE880 cmCMSReservedFlagsMask;
$1BD406C8032FCC49A6548FD0EF595396 cmCMYData;
$4E04791537D5F9896996412A34F9DF73 cmCMYK32Space;
$4E04791537D5F9896996412A34F9DF73 cmCMYK64LSpace;
$4E04791537D5F9896996412A34F9DF73 cmCMYK64Space;
$1BD406C8032FCC49A6548FD0EF595396 cmCMYKData;
$583B095E0E1C4AF48753C9054C025119 cmCMYKSpace;
$FE31881402FC14405257F34F769531E8 cmCS1ChromTag;
$FE31881402FC14405257F34F769531E8 cmCS1CustTag;
$FE31881402FC14405257F34F769531E8 cmCS1NameTag;
$6FD91A7AFE268C49B994277A450A1D98 cmCS1ProfileVersion;
$FE31881402FC14405257F34F769531E8 cmCS1TRCTag;
$6FD91A7AFE268C49B994277A450A1D98 cmCS2ProfileVersion;
$97EAAB2DC87E029A1786561CE104A31A cmCalibrationDateTimeTag;
$641ED87CCC4D6A5D6C8D4C3D6AF6C18C cmCameraDeviceClass;
$3B0C431FD925B99390198B52ACDED39A cmCantConcatenateError;
$2FDE9989EF27A8A38A136C2CAF60C310 cmCantCopyModifiedV1Profile;
$2FDE9989EF27A8A38A136C2CAF60C310 cmCantDeleteElement;
$3B0C431FD925B99390198B52ACDED39A cmCantDeleteProfile;
$2FDE9989EF27A8A38A136C2CAF60C310 cmCantGamutCheckError;
$3B0C431FD925B99390198B52ACDED39A cmCantXYZ;
$97EAAB2DC87E029A1786561CE104A31A cmCharTargetTag;
$97EAAB2DC87E029A1786561CE104A31A cmChromaticAdaptationTag;
$E731989FC0216527321E79EC1179D013 cmCloseAccess;
$00E7B12B2CB11E62A35D034A4ADDBFB5 cmCloseSpool;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpaceAlphaMask;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmColorSpaceClass;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpaceEncodingMask;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpacePackingMask;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpacePremulAlphaMask;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpaceReservedMask;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpaceSpaceAndAlphaMask;
$06F89DD4CC9D15BAB2B4E894BF37673D cmColorSpaceSpaceMask;
$42552D18C26FCB9C38B35DBABEFDD876 cmColorimetricMatch;
$23B5EE64110F5F99C914AFEFADC5E459 cmComment;
$0DF6A2A4F897C901432374EC7E35B689 cmContinueProfileSel;
$97EAAB2DC87E029A1786561CE104A31A cmCopyrightTag;
$E731989FC0216527321E79EC1179D013 cmCreateNewAccess;
$A9E076DEE583C1136F8BAE9626348CDF cmCurrentDeviceInfoVersion;
$A9E076DEE583C1136F8BAE9626348CDF cmCurrentProfileInfoVersion;
$B209258A5C3A49D7D514BDA0831064FE cmCurrentProfileLocationSize;
$8D181163D962FD5671CB36663115CFDB cmCurrentProfileMajorVersion;
$A28164E73FCF99FD87F3421048BF47D5 cmCyanResponse;
$A398C4CE3AC240F3CE444D3FA673F898 cmDefaultDeviceID;
$A398C4CE3AC240F3CE444D3FA673F898 cmDefaultProfileID;
$87A3968495F4796D445394E537B1212F cmDeviceAlreadyRegistered;
$87A3968495F4796D445394E537B1212F cmDeviceDBNotFoundErr;
$E1FD51DF0EA71DBDCE07BB6C7800A717 cmDeviceInfoVersion1;
$97EAAB2DC87E029A1786561CE104A31A cmDeviceMfgDescTag;
$97EAAB2DC87E029A1786561CE104A31A cmDeviceModelDescTag;
$87A3968495F4796D445394E537B1212F cmDeviceNotRegistered;
$E1FD51DF0EA71DBDCE07BB6C7800A717 cmDeviceProfileInfoVersion1;
$E1FD51DF0EA71DBDCE07BB6C7800A717 cmDeviceProfileInfoVersion2;
$87A3968495F4796D445394E537B1212F cmDeviceProfilesNotFound;
$027F4A71CC09F8C58025EDB6A6DB14FC cmDeviceStateAppleRsvdBits;
$027F4A71CC09F8C58025EDB6A6DB14FC cmDeviceStateBusy;
$027F4A71CC09F8C58025EDB6A6DB14FC cmDeviceStateDefault;
$027F4A71CC09F8C58025EDB6A6DB14FC cmDeviceStateDeviceRsvdBits;
$027F4A71CC09F8C58025EDB6A6DB14FC cmDeviceStateForceNotify;
$027F4A71CC09F8C58025EDB6A6DB14FC cmDeviceStateOffline;
$23B5EE64110F5F99C914AFEFADC5E459 cmDisableMatching;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmDisplayClass;
$641ED87CCC4D6A5D6C8D4C3D6AF6C18C cmDisplayDeviceClass;
$035F5948C48A376B07D93A69662C1FAB cmDisplayUse;
$B4D2A8BBF9D2420987B0C17DB1EACFCB cmDraftMode;
$2FDE9989EF27A8A38A136C2CAF60C310 cmElementTagNotFound;
$A78C45CE051B9B7F5C82C3A7C294B4F8 cmEmbedProfileIdentifier;
$A78C45CE051B9B7F5C82C3A7C294B4F8 cmEmbedWholeProfile;
$6487404EE3EFAE8B28531347FD5AE880 cmEmbeddedMask;
$86E654E38874DA3366BC2AF63E2DB26F cmEmbeddedProfile;
$86E654E38874DA3366BC2AF63E2DB26F cmEmbeddedUse;
$6487404EE3EFAE8B28531347FD5AE880 cmEmbeddedUseMask;
$23B5EE64110F5F99C914AFEFADC5E459 cmEnableMatching;
$E731989FC0216527321E79EC1179D013 cmEndAccess;
$23B5EE64110F5F99C914AFEFADC5E459 cmEndProfile;
$0DF6A2A4F897C901432374EC7E35B689 cmEndProfileSel;
$2FDE9989EF27A8A38A136C2CAF60C310 cmErrIncompatibleProfile;
$2FDE9989EF27A8A38A136C2CAF60C310 cmFatalProfileErr;
$D9F7BDAFA0352E288953D6A8506BE994 cmFileBasedProfile;
$A1207AD401E53CE9C32D61035A396B4E cmFlare0;
$A1207AD401E53CE9C32D61035A396B4E cmFlare100;
$6487404EE3EFAE8B28531347FD5AE880 cmGamutCheckingMask;
$4E04791537D5F9896996412A34F9DF73 cmGamutResult1Space;
$583B095E0E1C4AF48753C9054C025119 cmGamutResultSpace;
$97EAAB2DC87E029A1786561CE104A31A cmGamutTag;
$0A01308231C846FB03E2661DD172448D cmGeometry045or450;
$0A01308231C846FB03E2661DD172448D cmGeometry0dord0;
$0A01308231C846FB03E2661DD172448D cmGeometryUnknown;
$382ECCCE0EF7D7E03F54175CD0A27625 cmGlossy;
$31AE040C3D8CFBCED30F297D94D6D97F cmGlossyMatteMask;
$4E04791537D5F9896996412A34F9DF73 cmGray16LSpace;
$4E04791537D5F9896996412A34F9DF73 cmGray16Space;
$4E04791537D5F9896996412A34F9DF73 cmGray8Space;
$4E04791537D5F9896996412A34F9DF73 cmGrayA16PmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmGrayA16Space;
$4E04791537D5F9896996412A34F9DF73 cmGrayA32LPmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmGrayA32LSpace;
$4E04791537D5F9896996412A34F9DF73 cmGrayA32PmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmGrayA32Space;
$583B095E0E1C4AF48753C9054C025119 cmGrayAPmulSpace;
$583B095E0E1C4AF48753C9054C025119 cmGrayASpace;
$1BD406C8032FCC49A6548FD0EF595396 cmGrayData;
$A28164E73FCF99FD87F3421048BF47D5 cmGrayResponse;
$583B095E0E1C4AF48753C9054C025119 cmGraySpace;
$97EAAB2DC87E029A1786561CE104A31A cmGrayTRCTag;
$97EAAB2DC87E029A1786561CE104A31A cmGreenColorantTag;
$A28164E73FCF99FD87F3421048BF47D5 cmGreenResponse;
$97EAAB2DC87E029A1786561CE104A31A cmGreenTRCTag;
$4E04791537D5F9896996412A34F9DF73 cmHLS32Space;
$1BD406C8032FCC49A6548FD0EF595396 cmHLSData;
$583B095E0E1C4AF48753C9054C025119 cmHLSSpace;
$4E04791537D5F9896996412A34F9DF73 cmHSV32Space;
$1BD406C8032FCC49A6548FD0EF595396 cmHSVData;
$583B095E0E1C4AF48753C9054C025119 cmHSVSpace;
$D9F7BDAFA0352E288953D6A8506BE994 cmHandleBasedProfile;
$6FD91A7AFE268C49B994277A450A1D98 cmICCProfileVersion2;
$6FD91A7AFE268C49B994277A450A1D98 cmICCProfileVersion21;
$6FD91A7AFE268C49B994277A450A1D98 cmICCProfileVersion4;
$6487404EE3EFAE8B28531347FD5AE880 cmICCReservedFlagsMask;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantA;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantD50;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantD55;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantD65;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantD93;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantEquiPower;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantF2;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantF8;
$1F8102E2220F6ECA6B2B71A76CC8491E cmIlluminantUnknown;
$2FDE9989EF27A8A38A136C2CAF60C310 cmIndexRangeErr;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmInputClass;
$035F5948C48A376B07D93A69662C1FAB cmInputUse;
$87A3968495F4796D445394E537B1212F cmInternalCFErr;
$6487404EE3EFAE8B28531347FD5AE880 cmInterpolationMask;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidColorSpace;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidDstMap;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidProfile;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidProfileComment;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidProfileLocation;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidSearch;
$2FDE9989EF27A8A38A136C2CAF60C310 cmInvalidSrcMap;
$414E4DB435B144DE24DD7D38B5A9654A cmIterateAllDeviceProfiles;
$414E4DB435B144DE24DD7D38B5A9654A cmIterateCurrentDeviceProfiles;
$414E4DB435B144DE24DD7D38B5A9654A cmIterateCustomDeviceProfiles;
$414E4DB435B144DE24DD7D38B5A9654A cmIterateDeviceProfilesMask;
$414E4DB435B144DE24DD7D38B5A9654A cmIterateFactoryDeviceProfiles;
$4E04791537D5F9896996412A34F9DF73 cmLAB24Space;
$4E04791537D5F9896996412A34F9DF73 cmLAB32Space;
$4E04791537D5F9896996412A34F9DF73 cmLAB48LSpace;
$4E04791537D5F9896996412A34F9DF73 cmLAB48Space;
$583B095E0E1C4AF48753C9054C025119 cmLABSpace;
$4E04791537D5F9896996412A34F9DF73 cmLUV32Space;
$583B095E0E1C4AF48753C9054C025119 cmLUVSpace;
$1BD406C8032FCC49A6548FD0EF595396 cmLabData;
$45BA2A04F99B30C6B89CA93EE87A61BC cmLinearChromaticAdaptation;
$DE793C5A02651A8CABE2A50CB78A076F cmLinesPer;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmLinkClass;
$A3DCD35979526F9C17D6F74908408E41 cmLittleEndianPacking;
$A3DCD35979526F9C17D6F74908408E41 cmLong10ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cmLong8ColorPacking;
$97EAAB2DC87E029A1786561CE104A31A cmLuminanceTag;
$1BD406C8032FCC49A6548FD0EF595396 cmLuvData;
$4E04791537D5F9896996412A34F9DF73 cmMCEight8Space;
$583B095E0E1C4AF48753C9054C025119 cmMCEightSpace;
$4E04791537D5F9896996412A34F9DF73 cmMCFive8Space;
$583B095E0E1C4AF48753C9054C025119 cmMCFiveSpace;
$1BD406C8032FCC49A6548FD0EF595396 cmMCH5Data;
$1BD406C8032FCC49A6548FD0EF595396 cmMCH6Data;
$1BD406C8032FCC49A6548FD0EF595396 cmMCH7Data;
$1BD406C8032FCC49A6548FD0EF595396 cmMCH8Data;
$4E04791537D5F9896996412A34F9DF73 cmMCSeven8Space;
$583B095E0E1C4AF48753C9054C025119 cmMCSevenSpace;
$4E04791537D5F9896996412A34F9DF73 cmMCSix8Space;
$583B095E0E1C4AF48753C9054C025119 cmMCSixSpace;
$88F1EF59BE90745493EA492334412F77 cmMacintosh;
$A28164E73FCF99FD87F3421048BF47D5 cmMagentaResponse;
$7F3BB0A99CFF2C52DDF51E80A1992606 cmMagicNumber;
$86A746AD87D369D2186D31CF69A39068 cmMakeAndModelTag;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchAnyProfile;
$F854503CADC36B39EEB347EA709C9E10 cmMatchApplProfileVersion;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchAttributes;
$F854503CADC36B39EEB347EA709C9E10 cmMatchBlack;
$F854503CADC36B39EEB347EA709C9E10 cmMatchCMMType;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchDataColorSpace;
$F854503CADC36B39EEB347EA709C9E10 cmMatchDataType;
$F854503CADC36B39EEB347EA709C9E10 cmMatchDeviceAttributes;
$F854503CADC36B39EEB347EA709C9E10 cmMatchDeviceManufacturer;
$F854503CADC36B39EEB347EA709C9E10 cmMatchDeviceModel;
$F854503CADC36B39EEB347EA709C9E10 cmMatchDeviceType;
$F854503CADC36B39EEB347EA709C9E10 cmMatchFlags;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchManufacturer;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchModel;
$F854503CADC36B39EEB347EA709C9E10 cmMatchOptions;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchProfileCMMType;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchProfileClass;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchProfileConnectionSpace;
$7F353085EF1A752682C7DE54378BC6C7 cmMatchProfileFlags;
$F854503CADC36B39EEB347EA709C9E10 cmMatchWhite;
$97EAAB2DC87E029A1786561CE104A31A cmMeasurementTag;
$97EAAB2DC87E029A1786561CE104A31A cmMediaBlackPointTag;
$97EAAB2DC87E029A1786561CE104A31A cmMediaWhitePointTag;
$3B0C431FD925B99390198B52ACDED39A cmMethodError;
$3B0C431FD925B99390198B52ACDED39A cmMethodNotFound;
$88F1EF59BE90745493EA492334412F77 cmMicrosoft;
$D86B4A99442F929B245A12B744B62FDA cmMonitorDevice;
$97EAAB2DC87E029A1786561CE104A31A cmNamedColor2Tag;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmNamedColorClass;
$2FDE9989EF27A8A38A136C2CAF60C310 cmNamedColorNotFound;
$97EAAB2DC87E029A1786561CE104A31A cmNamedColorTag;
$1BD406C8032FCC49A6548FD0EF595396 cmNamedData;
$4E04791537D5F9896996412A34F9DF73 cmNamedIndexed32LSpace;
$4E04791537D5F9896996412A34F9DF73 cmNamedIndexed32Space;
$583B095E0E1C4AF48753C9054C025119 cmNamedIndexedSpace;
$86A746AD87D369D2186D31CF69A39068 cmNativeDisplayInfoTag;
$0B3B6A734729003AB27B8128AFDDCEA8 cmNativeMatchingPreferred;
$A3DCD35979526F9C17D6F74908408E41 cmNoColorPacking;
$3B0C431FD925B99390198B52ACDED39A cmNoCurrentProfile;
$2FDE9989EF27A8A38A136C2CAF60C310 cmNoGDevicesError;
$D9F7BDAFA0352E288953D6A8506BE994 cmNoProfileBase;
$583B095E0E1C4AF48753C9054C025119 cmNoSpace;
$B4D2A8BBF9D2420987B0C17DB1EACFCB cmNormalMode;
$BB3B30B5984760ACC5796090BFBCB24E cmNumHeaderElements;
$A3DCD35979526F9C17D6F74908408E41 cmOneBitDirectPacking;
$A28164E73FCF99FD87F3421048BF47D5 cmOnePlusLastResponse;
$E731989FC0216527321E79EC1179D013 cmOpenReadAccess;
$00E7B12B2CB11E62A35D034A4ADDBFB5 cmOpenReadSpool;
$E731989FC0216527321E79EC1179D013 cmOpenWriteAccess;
$00E7B12B2CB11E62A35D034A4ADDBFB5 cmOpenWriteSpool;
$B209258A5C3A49D7D514BDA0831064FE cmOriginalProfileLocationSize;
$1AEF4FFF1B0BDC4525820A0C0C35D67B cmOutputClass;
$035F5948C48A376B07D93A69662C1FAB cmOutputUse;
$97EAAB2DC87E029A1786561CE104A31A cmPS2CRD0Tag;
$97EAAB2DC87E029A1786561CE104A31A cmPS2CRD1Tag;
$97EAAB2DC87E029A1786561CE104A31A cmPS2CRD2Tag;
$97EAAB2DC87E029A1786561CE104A31A cmPS2CRD3Tag;
$86A746AD87D369D2186D31CF69A39068 cmPS2CRDVMSizeTag;
$97EAAB2DC87E029A1786561CE104A31A cmPS2CSATag;
$97EAAB2DC87E029A1786561CE104A31A cmPS2RenderingIntentTag;
$B9ACAFBCCB361E49E4ECBC18669D7829 cmPS7bit;
$B9ACAFBCCB361E49E4ECBC18669D7829 cmPS8bit;
$04B5C900BDA7F12AD041AA7581064C2D cmParametricType0;
$04B5C900BDA7F12AD041AA7581064C2D cmParametricType1;
$04B5C900BDA7F12AD041AA7581064C2D cmParametricType2;
$04B5C900BDA7F12AD041AA7581064C2D cmParametricType3;
$04B5C900BDA7F12AD041AA7581064C2D cmParametricType4;
$D9F7BDAFA0352E288953D6A8506BE994 cmPathBasedProfile;
$60DE50F669CF54F17129F0EBFB986B62 cmPerceptual;
$42552D18C26FCB9C38B35DBABEFDD876 cmPerceptualMatch;
$97EAAB2DC87E029A1786561CE104A31A cmPreview0Tag;
$97EAAB2DC87E029A1786561CE104A31A cmPreview1Tag;
$97EAAB2DC87E029A1786561CE104A31A cmPreview2Tag;
$D86B4A99442F929B245A12B744B62FDA cmPrinterDevice;
$641ED87CCC4D6A5D6C8D4C3D6AF6C18C cmPrinterDeviceClass;
$D9F7BDAFA0352E288953D6A8506BE994 cmProcedureBasedProfile;
$86A746AD87D369D2186D31CF69A39068 cmProfileDescriptionMLTag;
$97EAAB2DC87E029A1786561CE104A31A cmProfileDescriptionTag;
$3B0C431FD925B99390198B52ACDED39A cmProfileError;
$0DF6A2A4F897C901432374EC7E35B689 cmProfileIdentifierSel;
$50D70824F79995DCBA7FC4F3762196F8 cmProfileIterateDataVersion1;
$50D70824F79995DCBA7FC4F3762196F8 cmProfileIterateDataVersion2;
$50D70824F79995DCBA7FC4F3762196F8 cmProfileIterateDataVersion3;
$8D181163D962FD5671CB36663115CFDB cmProfileMajorVersionMask;
$3B0C431FD925B99390198B52ACDED39A cmProfileNotFound;
$97EAAB2DC87E029A1786561CE104A31A cmProfileSequenceDescTag;
$3B0C431FD925B99390198B52ACDED39A cmProfilesIdentical;
$641ED87CCC4D6A5D6C8D4C3D6AF6C18C cmProofDeviceClass;
$035F5948C48A376B07D93A69662C1FAB cmProofUse;
$DE793C5A02651A8CABE2A50CB78A076F cmPrtrDefaultScreens;
$D9F7BDAFA0352E288953D6A8506BE994 cmPtrBasedProfile;
$6487404EE3EFAE8B28531347FD5AE880 cmQualityMask;
$4E04791537D5F9896996412A34F9DF73 cmRGB16LSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGB16Space;
$4E04791537D5F9896996412A34F9DF73 cmRGB24Space;
$4E04791537D5F9896996412A34F9DF73 cmRGB32Space;
$4E04791537D5F9896996412A34F9DF73 cmRGB48LSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGB48Space;
$4E04791537D5F9896996412A34F9DF73 cmRGB565LSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGB565Space;
$4E04791537D5F9896996412A34F9DF73 cmRGBA32PmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGBA32Space;
$4E04791537D5F9896996412A34F9DF73 cmRGBA64LPmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGBA64LSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGBA64PmulSpace;
$4E04791537D5F9896996412A34F9DF73 cmRGBA64Space;
$583B095E0E1C4AF48753C9054C025119 cmRGBAPmulSpace;
$583B095E0E1C4AF48753C9054C025119 cmRGBASpace;
$1BD406C8032FCC49A6548FD0EF595396 cmRGBData;
$583B095E0E1C4AF48753C9054C025119 cmRGBSpace;
$2FDE9989EF27A8A38A136C2CAF60C310 cmRangeOverFlow;
$E731989FC0216527321E79EC1179D013 cmReadAccess;
$00E7B12B2CB11E62A35D034A4ADDBFB5 cmReadSpool;
$97EAAB2DC87E029A1786561CE104A31A cmRedColorantTag;
$A28164E73FCF99FD87F3421048BF47D5 cmRedResponse;
$97EAAB2DC87E029A1786561CE104A31A cmRedTRCTag;
$382ECCCE0EF7D7E03F54175CD0A27625 cmReflective;
$31AE040C3D8CFBCED30F297D94D6D97F cmReflectiveTransparentMask;
$60DE50F669CF54F17129F0EBFB986B62 cmRelativeColorimetric;
$583B095E0E1C4AF48753C9054C025119 cmReservedSpace1;
$583B095E0E1C4AF48753C9054C025119 cmReservedSpace2;
$A3DCD35979526F9C17D6F74908408E41 cmReverseChannelPacking;
$508D87383CF80AAEFAAF4CC9D545101A cmSRGB16ChannelEncoding;
$1BD406C8032FCC49A6548FD0EF595396 cmSRGBData;
$60DE50F669CF54F17129F0EBFB986B62 cmSaturation;
$42552D18C26FCB9C38B35DBABEFDD876 cmSaturationMatch;
$D86B4A99442F929B245A12B744B62FDA cmScannerDevice;
$641ED87CCC4D6A5D6C8D4C3D6AF6C18C cmScannerDeviceClass;
$97EAAB2DC87E029A1786561CE104A31A cmScreeningDescTag;
$97EAAB2DC87E029A1786561CE104A31A cmScreeningTag;
$2FDE9989EF27A8A38A136C2CAF60C310 cmSearchError;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigCrdInfoType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigCurveType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigDataType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigDateTimeType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigLut16Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigLut8Type;
$82E33A2D3493331142DC1D4D8D9C49C0 cmSigMakeAndModelType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigMeasurementType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigMultiFunctA2BType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigMultiFunctB2AType;
$82E33A2D3493331142DC1D4D8D9C49C0 cmSigMultiLocalizedUniCodeType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigNamedColor2Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigNamedColorType;
$82E33A2D3493331142DC1D4D8D9C49C0 cmSigNativeDisplayInfoType;
$82E33A2D3493331142DC1D4D8D9C49C0 cmSigPS2CRDVMSizeType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigParametricCurveType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigProfileDescriptionType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigProfileSequenceDescType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigS15Fixed16Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigScreeningType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigSignatureType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigTextType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigU16Fixed16Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigU1Fixed15Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigUInt16Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigUInt32Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigUInt64Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigUInt8Type;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigUcrBgType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigUnicodeTextType;
$82E33A2D3493331142DC1D4D8D9C49C0 cmSigVideoCardGammaType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigViewingConditionsType;
$E5318C87C3726CDA9A3B74A623F2DB97 cmSigXYZType;
$88F1EF59BE90745493EA492334412F77 cmSiliconGraphics;
$88F1EF59BE90745493EA492334412F77 cmSolaris;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionCross;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionDefault;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionDiamond;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionEllipse;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionLine;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionRound;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionSquare;
$0D1052CEC98F9244EC14C82F7E5CB6D7 cmSpotFunctionUnknown;
$C119EB671DE42B947DED0374D56DD6D0 cmStdobs1931TwoDegrees;
$C119EB671DE42B947DED0374D56DD6D0 cmStdobs1964TenDegrees;
$C119EB671DE42B947DED0374D56DD6D0 cmStdobsUnknown;
$88F1EF59BE90745493EA492334412F77 cmTaligent;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyAMDisplay;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyCRTDisplay;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyDigitalCamera;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyDyeSublimationPrinter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyElectrophotographicPrinter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyElectrostaticPrinter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyFilmScanner;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyFilmWriter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyFlexography;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyGravure;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyInkJetPrinter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyOffsetLithography;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyPMDisplay;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyPhotoCD;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyPhotoImageSetter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyPhotographicPaperPrinter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyProjectionTelevision;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyReflectiveScanner;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologySilkscreen;
$97EAAB2DC87E029A1786561CE104A31A cmTechnologyTag;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyThermalWaxPrinter;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyVideoCamera;
$CFB5A45FF2E92B7653B560A71A67939B cmTechnologyVideoMonitor;
$9DD924331E5675329146BF3F39BBABD5 cmTrap;
$0B3B6A734729003AB27B8128AFDDCEA8 cmTurnOffCache;
$97EAAB2DC87E029A1786561CE104A31A cmUcrBgTag;
$A28164E73FCF99FD87F3421048BF47D5 cmUcrResponse;
$3B0C431FD925B99390198B52ACDED39A cmUnsupportedDataType;
$45BA2A04F99B30C6B89CA93EE87A61BC cmUseDefaultChromaticAdaptation;
$064A523EDE51834766DE5EDACE342332 cmVideoCardGammaFormulaType;
$064A523EDE51834766DE5EDACE342332 cmVideoCardGammaTableType;
$86A746AD87D369D2186D31CF69A39068 cmVideoCardGammaTag;
$97EAAB2DC87E029A1786561CE104A31A cmViewingConditionsDescTag;
$97EAAB2DC87E029A1786561CE104A31A cmViewingConditionsTag;
$45BA2A04F99B30C6B89CA93EE87A61BC cmVonKriesChromaticAdaptation;
$A3DCD35979526F9C17D6F74908408E41 cmWord565ColorPacking;
$A3DCD35979526F9C17D6F74908408E41 cmWord5ColorPacking;
$E731989FC0216527321E79EC1179D013 cmWriteAccess;
$00E7B12B2CB11E62A35D034A4ADDBFB5 cmWriteSpool;
$4E04791537D5F9896996412A34F9DF73 cmXYZ24Space;
$4E04791537D5F9896996412A34F9DF73 cmXYZ32Space;
$4E04791537D5F9896996412A34F9DF73 cmXYZ48LSpace;
$4E04791537D5F9896996412A34F9DF73 cmXYZ48Space;
$1BD406C8032FCC49A6548FD0EF595396 cmXYZData;
$583B095E0E1C4AF48753C9054C025119 cmXYZSpace;
$1BD406C8032FCC49A6548FD0EF595396 cmYCbCrData;
$4E04791537D5F9896996412A34F9DF73 cmYXY32Space;
$583B095E0E1C4AF48753C9054C025119 cmYXYSpace;
$A28164E73FCF99FD87F3421048BF47D5 cmYellowResponse;
$1BD406C8032FCC49A6548FD0EF595396 cmYxyData;
$65711321B8F395BEB12A6BE203B268B3 cmapFontTableTag;
$336CC6651FCB0DCB616C524240E3BE5F cmdKey;
$A8C358955E8CB025A08708108945A486 cmdKeyBit;
$D33FE74D556288FA4AD083B75322C6E6 cmpAliasNoFlags;
$D33FE74D556288FA4AD083B75322C6E6 cmpAliasOnlyThisFile;
$BBCACBB5B04C0E2BA621A282154C9589 cmpIsMissing;
$32C729C88CE832800A236F2596111AC4 cmpSH;
$BBCACBB5B04C0E2BA621A282154C9589 cmpWantsRegisterMessage;
$3334C0DF8E465B026500896357EA1158 cmspFavorEmbeddedMask;
$116385E0655E5E0F13F39815170102F6 cmspInvalidImageFile;
$116385E0655E5E0F13F39815170102F6 cmspInvalidImageSpace;
$116385E0655E5E0F13F39815170102F6 cmspInvalidProfileDest;
$116385E0655E5E0F13F39815170102F6 cmspInvalidProfileEmbed;
$116385E0655E5E0F13F39815170102F6 cmspInvalidProfileLink;
$116385E0655E5E0F13F39815170102F6 cmspInvalidProfileProof;
$116385E0655E5E0F13F39815170102F6 cmspInvalidProfileSource;
MACRO_emask code_emask;
$D1694FAFDED606F5C1530A80708D1A68 codecAbortErr;
$D1694FAFDED606F5C1530A80708D1A68 codecBadDataErr;
$D1694FAFDED606F5C1530A80708D1A68 codecCantQueueErr;
$D1694FAFDED606F5C1530A80708D1A68 codecCantWhenErr;
$D1694FAFDED606F5C1530A80708D1A68 codecConditionErr;
$D1694FAFDED606F5C1530A80708D1A68 codecDataVersErr;
$D1694FAFDED606F5C1530A80708D1A68 codecDisabledErr;
$D1694FAFDED606F5C1530A80708D1A68 codecDroppedFrameErr;
$D1694FAFDED606F5C1530A80708D1A68 codecErr;
$D1694FAFDED606F5C1530A80708D1A68 codecExtensionNotFoundErr;
$D1694FAFDED606F5C1530A80708D1A68 codecImageBufErr;
$D1694FAFDED606F5C1530A80708D1A68 codecNeedAccessKeyErr;
$D1694FAFDED606F5C1530A80708D1A68 codecNeedToFlushChainErr;
$D1694FAFDED606F5C1530A80708D1A68 codecNoMemoryPleaseWaitErr;
$D1694FAFDED606F5C1530A80708D1A68 codecNothingToBlitErr;
$D1694FAFDED606F5C1530A80708D1A68 codecOffscreenFailedErr;
$D1694FAFDED606F5C1530A80708D1A68 codecOffscreenFailedPleaseRetryErr;
$D1694FAFDED606F5C1530A80708D1A68 codecOpenErr;
$D1694FAFDED606F5C1530A80708D1A68 codecParameterDialogConfirm;
$D1694FAFDED606F5C1530A80708D1A68 codecScreenBufErr;
$D1694FAFDED606F5C1530A80708D1A68 codecSizeErr;
$D1694FAFDED606F5C1530A80708D1A68 codecSpoolErr;
$D1694FAFDED606F5C1530A80708D1A68 codecUnimpErr;
$D1694FAFDED606F5C1530A80708D1A68 codecWouldOffscreenErr;
$2F748C7048492C1CC10F7B84FA26101F collectionIndexRangeErr;
$2F748C7048492C1CC10F7B84FA26101F collectionItemLockedErr;
$2F748C7048492C1CC10F7B84FA26101F collectionItemNotFoundErr;
$2F748C7048492C1CC10F7B84FA26101F collectionVersionErr;
$5299BEEE17FE295435C76CB19C21F235 colorSyncNotInstalled;
$FDA6DF694F750A254AE35C64EB154927 colorXorXFer;
$AAB5F496A0B5E152CB221717E36939D8 colorsRequestedErr;
$4BCD47A5D5A3A6220200E7A255E8F3F0 commandMark;
$C9E08DFF4FB6D727B4644947C2D2ACCA componentAutoVersionIncludeFlags;
$A7A218FD448AC71BBFC70788B7B8D695 componentDllEntryNotFoundErr;
$A7A218FD448AC71BBFC70788B7B8D695 componentDllLoadErr;
$C9E08DFF4FB6D727B4644947C2D2ACCA componentDoAutoVersion;
$F41C837101AFC9B0316B257F2D9D4B05 componentDontRegister;
$C9E08DFF4FB6D727B4644947C2D2ACCA componentHasMultiplePlatforms;
$C9E08DFF4FB6D727B4644947C2D2ACCA componentLoadResident;
$F41C837101AFC9B0316B257F2D9D4B05 componentNotCaptured;
$C9E08DFF4FB6D727B4644947C2D2ACCA componentWantsUnregister;
$CA37B7C591AB80BE0B169161AB784E55 condense;
$147E82B1B28920CD4B3E15BD59C82A4F condenseBit;
$CC4616D3C4C384DC58C4C548B533D9C9 connChangedBit;
$4DE595C756820CE39E98AC2FA7981434 connChangedMask;
$A9758B604953F44B643EE3821B96EE8F connectionInvalid;
$2E21CDC9416351B60D3647421538B7E9 constraintReachedErr;
$E3C80D94FC48D4CBFF4A338892F667A1 containerAlreadyOpenWrn;
$E3C80D94FC48D4CBFF4A338892F667A1 containerNotFoundWrn;
$621775189DBE97248B7FB782F8F10678 controlErr;
$CBEAF8466AA846FE24FEC203F1FE884C controlHandleInvalidErr;
$CBEAF8466AA846FE24FEC203F1FE884C controlInvalidDataVersionErr;
$336CC6651FCB0DCB616C524240E3BE5F controlKey;
$A8C358955E8CB025A08708108945A486 controlKeyBit;
$3B240B4C9ACC633426814EA91DA89F65 controlPanelFolderIconResource;
$CBEAF8466AA846FE24FEC203F1FE884C controlPropertyInvalid;
$CBEAF8466AA846FE24FEC203F1FE884C controlPropertyNotFoundErr;
$F5D25084AB3C40D9EEA892B8C65FBDB2 controllerBoundsNotExact;
$F5D25084AB3C40D9EEA892B8C65FBDB2 controllerHasFixedHeight;
$D129F4DFEBA165F72EA98C618C3DD9EB copyDev;
$621775189DBE97248B7FB782F8F10678 corErr;
$08AC6AF10B1028D4DC5011F6592D0036 coreFoundationUnknownErr;
$ED7426C36EBB82C0ECCADDCACB27D156 couldNotParseSourceFileErr;
$2AFA9741D4492F551C527940D8BE691A couldNotResolveDataRef;
$2AFA9741D4492F551C527940D8BE691A couldNotUseAnExistingSample;
$F5D25084AB3C40D9EEA892B8C65FBDB2 couldntGetRequiredComponent;
$A05B9B2BBC343A6D19ADAB85FCC92B0A crash;
$3396F92FAC0BE03A6A5A931576A5D5DF croatianHighWord;
$E47A24D70C087CD7CD8B3D81D230CB29 crossCursor;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscDirectSetEntries;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscDoCommunication;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscDrawHardwareCursor;
$DC8E164356299000BE99F8440912FDBE cscGetBaseAddr;
$DC8E164356299000BE99F8440912FDBE cscGetClutBehavior;
$DC8E164356299000BE99F8440912FDBE cscGetCommunicationInfo;
$DC8E164356299000BE99F8440912FDBE cscGetConnection;
$DC8E164356299000BE99F8440912FDBE cscGetConvolution;
$DC8E164356299000BE99F8440912FDBE cscGetCurMode;
$DC8E164356299000BE99F8440912FDBE cscGetDDCBlock;
$DC8E164356299000BE99F8440912FDBE cscGetDefaultMode;
$DC8E164356299000BE99F8440912FDBE cscGetDetailedTiming;
$DC8E164356299000BE99F8440912FDBE cscGetEntries;
$DC8E164356299000BE99F8440912FDBE cscGetGamma;
$DC8E164356299000BE99F8440912FDBE cscGetGammaInfoList;
$DC8E164356299000BE99F8440912FDBE cscGetGray;
$DC8E164356299000BE99F8440912FDBE cscGetHardwareCursorDrawState;
$DC8E164356299000BE99F8440912FDBE cscGetInterrupt;
$DC8E164356299000BE99F8440912FDBE cscGetMode;
$DC8E164356299000BE99F8440912FDBE cscGetModeBaseAddress;
$DC8E164356299000BE99F8440912FDBE cscGetModeTiming;
$DC8E164356299000BE99F8440912FDBE cscGetMultiConnect;
$DC8E164356299000BE99F8440912FDBE cscGetNextResolution;
$DC8E164356299000BE99F8440912FDBE cscGetPageBase;
$DC8E164356299000BE99F8440912FDBE cscGetPageCnt;
$DC8E164356299000BE99F8440912FDBE cscGetPages;
$DC8E164356299000BE99F8440912FDBE cscGetPowerState;
$DC8E164356299000BE99F8440912FDBE cscGetPreferredConfiguration;
$DC8E164356299000BE99F8440912FDBE cscGetScanProc;
$DC8E164356299000BE99F8440912FDBE cscGetSync;
$DC8E164356299000BE99F8440912FDBE cscGetTimingRanges;
$DC8E164356299000BE99F8440912FDBE cscGetVideoParameters;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscGrayPage;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscGrayScreen;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscKillIO;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscPrivateControlCall;
$DC8E164356299000BE99F8440912FDBE cscPrivateStatusCall;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscProbeConnection;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscReset;
$DC8E164356299000BE99F8440912FDBE cscRetrieveGammaTable;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSavePreferredConfiguration;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetClutBehavior;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetConvolution;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetDefaultMode;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetDetailedTiming;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetEntries;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetGamma;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetGray;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetHardwareCursor;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetInterrupt;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetMode;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetMultiConnect;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetPowerState;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSetSync;
$DC8E164356299000BE99F8440912FDBE cscSupportsHardwareCursor;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscSwitchMode;
$9F6AAFFFEB5A41D7FC7808DA543F4C33 cscUnusedCall;
$8E378796D9B27A0F0F3B65CDE1C24332 ctrlItem;
$83F008354B376D0C29D1AC2F7C6FD071 curNumberPartsVersion;
$940E309D60E2F84130D4FA4328D595A6 curSysEnvVers;
$30F5F423D43A0BE5AE53DBB98D7F01BA currLeadingZ;
$30F5F423D43A0BE5AE53DBB98D7F01BA currNegSym;
$30F5F423D43A0BE5AE53DBB98D7F01BA currSymLead;
$30F5F423D43A0BE5AE53DBB98D7F01BA currTrailingZ;
$256542734A18D99DBB4DE67432107625 currentCurLang;
$256542734A18D99DBB4DE67432107625 currentDefLang;
$D129F4DFEBA165F72EA98C618C3DD9EB cursorDev;
$8752FB6330ACCE12E5E7EEA03607D07B cursorDoesAnimate;
$8752FB6330ACCE12E5E7EEA03607D07B cursorDoesHardware;
$8752FB6330ACCE12E5E7EEA03607D07B cursorDoesUnreadableScreenBits;
$FDA6DF694F750A254AE35C64EB154927 customXFer;
$D129F4DFEBA165F72EA98C618C3DD9EB cutDev;
$229E80E760A3609929A8A4D193AE679E cyanBit;
$2EE6D656A6356132BC5631EBF7AA5929 cyanColor;
$3396F92FAC0BE03A6A5A931576A5D5DF cyrillicHighWord;
$54D8896E57898845ADF65F1EA92174A9 dBoxProc;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dCtlEnable;
$7813A1B9FB112BFBB1C6DABB07050D7A dCtlEnableMask;
$621775189DBE97248B7FB782F8F10678 dInstErr;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dNeedGoodBye;
$7813A1B9FB112BFBB1C6DABB07050D7A dNeedGoodByeMask;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dNeedLock;
$7813A1B9FB112BFBB1C6DABB07050D7A dNeedLockMask;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dNeedTime;
$7813A1B9FB112BFBB1C6DABB07050D7A dNeedTimeMask;
$B7FA74924A945FA1E94D4CF6E4B238B2 dOpened;
$B05F74345C2BAC9C8E7ACD991E6A926C dOpenedMask;
$B7FA74924A945FA1E94D4CF6E4B238B2 dRAMBased;
$B05F74345C2BAC9C8E7ACD991E6A926C dRAMBasedMask;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dReadEnable;
$7813A1B9FB112BFBB1C6DABB07050D7A dReadEnableMask;
$621775189DBE97248B7FB782F8F10678 dRemovErr;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dStatEnable;
$7813A1B9FB112BFBB1C6DABB07050D7A dStatEnableMask;
$B7FA74924A945FA1E94D4CF6E4B238B2 dVMImmuneBit;
$B05F74345C2BAC9C8E7ACD991E6A926C dVMImmuneMask;
$FE1E8ACD4815FA5435F31AE9782D4AC0 dWritEnable;
$7813A1B9FB112BFBB1C6DABB07050D7A dWritEnableMask;
$3396F92FAC0BE03A6A5A931576A5D5DF danishHighWord;
$2AFA9741D4492F551C527940D8BE691A dataAlreadyClosed;
$2AFA9741D4492F551C527940D8BE691A dataAlreadyOpenForWrite;
$2AFA9741D4492F551C527940D8BE691A dataNoDataRef;
$2AFA9741D4492F551C527940D8BE691A dataNotOpenForRead;
$2AFA9741D4492F551C527940D8BE691A dataNotOpenForWrite;
$88425C513B59EF7EE89C4EC621E12535 dataOffsetFlag;
$F5733A20729282EBCF3804504A9796F3 dataVerErr;
$69A3BF2E803A4172C51973E11B183607 dateStdMask;
$3A0529DF53FD0FCB1009E9B11B87DC72 dateTimeInvalid;
$3A0529DF53FD0FCB1009E9B11B87DC72 dateTimeNotFound;
$AC49BCB98774BA196F1D518C13C65C80 dayField;
$4FBD46A7782F6749F1F35ACCB96A0A2C dayLdingZ;
$69A3BF2E803A4172C51973E11B183607 dayMask;
$AC49BCB98774BA196F1D518C13C65C80 dayOfWeekField;
$69A3BF2E803A4172C51973E11B183607 dayOfWeekMask;
$AC49BCB98774BA196F1D518C13C65C80 dayOfYearField;
$69A3BF2E803A4172C51973E11B183607 dayOfYearMask;
$1B23EBE69E7C72E0D4B27DFF733651FE dblDagger;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 dceExtErr;
$9C790E81060248406BFA4828E164068F dcmBadDataSizeErr;
$9C790E81060248406BFA4828E164068F dcmBadDictionaryErr;
$9C790E81060248406BFA4828E164068F dcmBadFeatureErr;
$9C790E81060248406BFA4828E164068F dcmBadFieldInfoErr;
$9C790E81060248406BFA4828E164068F dcmBadFieldTypeErr;
$9C790E81060248406BFA4828E164068F dcmBadFindMethodErr;
$9C790E81060248406BFA4828E164068F dcmBadKeyErr;
$9C790E81060248406BFA4828E164068F dcmBadPropertyErr;
$9C790E81060248406BFA4828E164068F dcmBlockFullErr;
$9C790E81060248406BFA4828E164068F dcmBufferOverflowErr;
$9C790E81060248406BFA4828E164068F dcmDictionaryBusyErr;
$9C790E81060248406BFA4828E164068F dcmDictionaryNotOpenErr;
$9C790E81060248406BFA4828E164068F dcmDupRecordErr;
$9C790E81060248406BFA4828E164068F dcmIterationCompleteErr;
$9C790E81060248406BFA4828E164068F dcmNecessaryFieldErr;
$9C790E81060248406BFA4828E164068F dcmNoAccessMethodErr;
$9C790E81060248406BFA4828E164068F dcmNoFieldErr;
$9C790E81060248406BFA4828E164068F dcmNoRecordErr;
$9C790E81060248406BFA4828E164068F dcmNotDictionaryErr;
$9C790E81060248406BFA4828E164068F dcmParamErr;
$9C790E81060248406BFA4828E164068F dcmPermissionErr;
$9C790E81060248406BFA4828E164068F dcmProtectedErr;
$9C790E81060248406BFA4828E164068F dcmTooManyKeyErr;
$6AFAE475820C24F181AED14A4625BE64 ddpLenErr;
$6AFAE475820C24F181AED14A4625BE64 ddpSktErr;
$D129F4DFEBA165F72EA98C618C3DD9EB deactivDev;
$C625086FF7C44828098F3E200ADA2515 deactivateMsg;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingDuplicateOptionErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingDuplicateSignatureErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingExecutionContextErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingInvalidNameErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingInvalidOptionErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingInvalidSignatureErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingNoCallbackErr;
$3F0AF70147DC6F1B5A856203A44F5269 debuggingNoMatchErr;
$008155B23C6C847D4FC048674B3D561B defQDColors;
$139AF04F239104A5F94C2A114AC47BFF defaultComponentAnyFlags;
$139AF04F239104A5F94C2A114AC47BFF defaultComponentAnyFlagsAnyManufacturer;
$139AF04F239104A5F94C2A114AC47BFF defaultComponentAnyFlagsAnyManufacturerAnySubType;
$139AF04F239104A5F94C2A114AC47BFF defaultComponentAnyManufacturer;
$139AF04F239104A5F94C2A114AC47BFF defaultComponentAnySubType;
$139AF04F239104A5F94C2A114AC47BFF defaultComponentIdentical;
$A7B5BC809953040FA119957FBEBA5503 defaultPhysicalEntryCount;
$02D5866967F4E054F8180E988A02F698 delimPad;
$6325D61AD64522A99EDB6BBFCD09317C descriptorFontTableTag;
$2DA05D06990FCEC1EA5697B9BD8DA598 deselectMsg;
$F26F07C4051EAE6A110117968B8F1B20 deskPatID;
$4AA72FB96FE40BDE945A00A3EE3D602E desktopDamagedErr;
$02BA74D5F373AE3510806004249404D3 desktopIconResource;
$A5BD715C8EAA008A7A3794353BC5F23C destPortErr;
$3396F92FAC0BE03A6A5A931576A5D5DF devanagariHighWord;
$61822B9F17FF4C6D8E0FF7B2544F9B7D developStage;
$F5D25084AB3C40D9EEA892B8C65FBDB2 deviceCantMeetRequest;
$FF3788073524E0AC6F2653EDE51978BB deviceIsAScreen;
$FF3788073524E0AC6F2653EDE51978BB deviceIsDCISurface;
$FF3788073524E0AC6F2653EDE51978BB deviceIsDDSurface;
$FF3788073524E0AC6F2653EDE51978BB deviceIsExternalBuffer;
$FF3788073524E0AC6F2653EDE51978BB deviceIsGDISurface;
$FF3788073524E0AC6F2653EDE51978BB deviceIsIndirect;
$FF3788073524E0AC6F2653EDE51978BB deviceIsOverlaySurface;
$FF3788073524E0AC6F2653EDE51978BB deviceIsStatic;
$FF3788073524E0AC6F2653EDE51978BB deviceNeedsLock;
$1B23EBE69E7C72E0D4B27DFF733651FE diaeresisUprE;
$1B23EBE69E7C72E0D4B27DFF733651FE diaeresisUprI;
$1B23EBE69E7C72E0D4B27DFF733651FE diaeresisUprY;
$2806241C695CE64F638EBE1504CA6EC2 dialogKind;
$2AD233D1A8169D23B7A929610FCC1D08 dialogNoTimeoutErr;
$4BCD47A5D5A3A6220200E7A255E8F3F0 diamondMark;
$4AA72FB96FE40BDE945A00A3EE3D602E diffVolErr;
$BA4AF89C300243A236DEAC5502E7295F digiUnimpErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 dirFulErr;
$39BB08BE97442728A4F53B80076F6C3F dirNFErr;
$15316E1F4A06DF5737D2E4A1C671F46F directType;
$D1694FAFDED606F5C1530A80708D1A68 directXObjectAlreadyExists;
$FEBB2992DC4ADCE18624A3BF5CCB540F diskEvt;
$090FD46DADED99452600AACF39205147 diskMask;
$4D21454FAD90E25BD2497F2FB4C4BB43 dispCntl;
$CBAF5646069367B3450D2EB7E8DB23F4 ditherCopy;
$F3876F991244DA6C9E2D6E25C6A258B7 ditherPix;
$CD245178CB213C313AFEA4423394C154 ditherPixBit;
$01109142EB886E437B834F04B633E665 dmAllDisplays;
$01109142EB886E437B834F04B633E665 dmOnlyActiveDisplays;
$774312103BEE5735EC77C58B53E981B1 dmy;
$7442E677199E26E8274D4B6A56B2A7A9 doAll;
$7442E677199E26E8274D4B6A56B2A7A9 doColor;
$7442E677199E26E8274D4B6A56B2A7A9 doFace;
$7442E677199E26E8274D4B6A56B2A7A9 doFont;
$7442E677199E26E8274D4B6A56B2A7A9 doSize;
$7442E677199E26E8274D4B6A56B2A7A9 doToggle;
$54D8896E57898845ADF65F1EA92174A9 documentProc;
$311BC893892944B9DF7F45C6C8E9B8F8 domCannot;
$311BC893892944B9DF7F45C6C8E9B8F8 domNative;
$311BC893892944B9DF7F45C6C8E9B8F8 domTranslateFirst;
$311BC893892944B9DF7F45C6C8E9B8F8 domWildcard;
$A698BEB7613B05D556DAD70D18AF6846 dontMatchSeeds;
$04308B7CF96C01DC89E23685B761AAE3 dontMatchSeedsBit;
$1B23EBE69E7C72E0D4B27DFF733651FE dotlessLwrI;
$1B23EBE69E7C72E0D4B27DFF733651FE doubleAcute;
$DCAFB040F37F6DF2023604683B010173 downloadStreamAction;
$AB88C37431EB6AD714E363592C093039 dozeDemand;
$AB88C37431EB6AD714E363592C093039 dozeRequest;
$AB88C37431EB6AD714E363592C093039 dozeWakeUp;
$4D21454FAD90E25BD2497F2FB4C4BB43 dragCntl;
$00479C61961A244562671FE5ED76F811 dragNotAcceptedErr;
$4D21454FAD90E25BD2497F2FB4C4BB43 drawCntl;
$4D21454FAD90E25BD2497F2FB4C4BB43 drawThumbOutline;
$4D8B7D1349328D7C0B79EA781F2B24F6 driverEvt;
$C98B22E8D4E004C8875CFAC75B2C8663 driverHardwareGoneErr;
$4D8B7D1349328D7C0B79EA781F2B24F6 driverMask;
$3B240B4C9ACC633426814EA91DA89F65 dropFolderIconResource;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 drvQType;
$B7FA74924A945FA1E94D4CF6E4B238B2 drvrActive;
$B05F74345C2BAC9C8E7ACD991E6A926C drvrActiveMask;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 ds32BitMode;
$467AC374E671D5DC1F93B14CFB32E608 dsAddressErr;
$AA894E32487E3862FBB3C0CE96496867 dsBadLaunch;
$8ACF0ECEB182CD7FAB1E09D59A3D0BB7 dsBadLibrary;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsBadPatch;
$AA894E32487E3862FBB3C0CE96496867 dsBadPatchHeader;
$AA894E32487E3862FBB3C0CE96496867 dsBadSANEOpcode;
$AA894E32487E3862FBB3C0CE96496867 dsBadSlotInt;
$15527A7957C35DDC42E8F9BAFCC21D16 dsBadStartupDisk;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsBufPtrTooLow;
$467AC374E671D5DC1F93B14CFB32E608 dsBusError;
$AA894E32487E3862FBB3C0CE96496867 dsCDEFNotFound;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsCantHoldSystemHeap;
$467AC374E671D5DC1F93B14CFB32E608 dsChkErr;
$467AC374E671D5DC1F93B14CFB32E608 dsCoreErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsDirtyDisk;
$DB7CAFADFF05C3D5C938D70736B1920A dsDisassemblerInstalled;
$DB7CAFADFF05C3D5C938D70736B1920A dsExtensionsDisabled;
$467AC374E671D5DC1F93B14CFB32E608 dsFPErr;
$AA894E32487E3862FBB3C0CE96496867 dsFSErr;
$AA894E32487E3862FBB3C0CE96496867 dsFinderErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsForcedQuit;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsGibblyMovedToDisabledFolder;
$DB7CAFADFF05C3D5C938D70736B1920A dsGreeting;
$15527A7957C35DDC42E8F9BAFCC21D16 dsHD20Installed;
$AA894E32487E3862FBB3C0CE96496867 dsHMenuFindErr;
$467AC374E671D5DC1F93B14CFB32E608 dsIOCoreErr;
$467AC374E671D5DC1F93B14CFB32E608 dsIllInstErr;
$467AC374E671D5DC1F93B14CFB32E608 dsIrqErr;
$467AC374E671D5DC1F93B14CFB32E608 dsLineAErr;
$467AC374E671D5DC1F93B14CFB32E608 dsLineFErr;
$467AC374E671D5DC1F93B14CFB32E608 dsLoadErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsLostConnectionToNetworkDisk;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMBATAPISysError;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMBATASysError;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMBExternFlpySysError;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMBFlpySysError;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMBSysError;
$AA894E32487E3862FBB3C0CE96496867 dsMBarNFnd;
$AA894E32487E3862FBB3C0CE96496867 dsMDEFNotFound;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMacOSROMVersionTooOld;
$DB7CAFADFF05C3D5C938D70736B1920A dsMacsBugInstalled;
$AA894E32487E3862FBB3C0CE96496867 dsMemFullErr;
$467AC374E671D5DC1F93B14CFB32E608 dsMiscErr;
$8ACF0ECEB182CD7FAB1E09D59A3D0BB7 dsMixedModeFailure;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsMustUseFCBAccessors;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsNeedToWriteBootBlocks;
$DB7CAFADFF05C3D5C938D70736B1920A dsNoExtsDisassembler;
$DB7CAFADFF05C3D5C938D70736B1920A dsNoExtsMacsBug;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsNoFPU;
$467AC374E671D5DC1F93B14CFB32E608 dsNoPackErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsNoPatch;
$467AC374E671D5DC1F93B14CFB32E608 dsNoPk1;
$467AC374E671D5DC1F93B14CFB32E608 dsNoPk2;
$AA894E32487E3862FBB3C0CE96496867 dsNoPk3;
$AA894E32487E3862FBB3C0CE96496867 dsNoPk4;
$AA894E32487E3862FBB3C0CE96496867 dsNoPk5;
$AA894E32487E3862FBB3C0CE96496867 dsNoPk6;
$AA894E32487E3862FBB3C0CE96496867 dsNoPk7;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsNotEnoughRAMToBoot;
$15527A7957C35DDC42E8F9BAFCC21D16 dsNotThe1;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsOldSystem;
$467AC374E671D5DC1F93B14CFB32E608 dsOvflowErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsPCCardATASysError;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsParityErr;
$467AC374E671D5DC1F93B14CFB32E608 dsPrivErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsRAMDiskTooBig;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsReinsert;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsRemoveDisk;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsSCSIWarn;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsShutDownOrRestart;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsShutDownOrResume;
$AA894E32487E3862FBB3C0CE96496867 dsStknHeap;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsSwitchOffOrRestart;
$DB7CAFADFF05C3D5C938D70736B1920A dsSysErr;
$15527A7957C35DDC42E8F9BAFCC21D16 dsSystemFileErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsSystemRequiresPowerPC;
$467AC374E671D5DC1F93B14CFB32E608 dsTraceErr;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsUnBootableSystem;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsVMBadBackingStore;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsVMDeferredFuncTableFull;
$AA894E32487E3862FBB3C0CE96496867 dsWDEFNotFound;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 dsWriteToSupervisorStackGuardPage;
$467AC374E671D5DC1F93B14CFB32E608 dsZeroDivErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 dskFulErr;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 dtQType;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 dummyType;
$39BB08BE97442728A4F53B80076F6C3F dupFNErr;
$D497865AB20A3AD87EEE5277CBD67E69 duplicateAtomTypeAndIDErr;
$00479C61961A244562671FE5ED76F811 duplicateFlavorErr;
$5D2ED6E9C3B52C2B530C241D43578F10 duplicateFolderDescErr;
$00479C61961A244562671FE5ED76F811 duplicateHandlerErr;
$5D2ED6E9C3B52C2B530C241D43578F10 duplicateRoutingErr;
$2140534AFEBF1A2FEC4DC9038366C647 duplicateScrapFlavorErr;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationDay;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationForever;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationHour;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationMicrosecond;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationMillisecond;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationMinute;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationNoWait;
$567D0EB9EA3B0AE4681D73EF8630A1F4 durationSecond;
$3396F92FAC0BE03A6A5A931576A5D5DF dutchHighWord;
$774312103BEE5735EC77C58B53E981B1 dym;
$42A49EA8AE7BAE129AB675773FAEF748 dynamicSpeedChange;
$FF20F5A5458E17FC07E98E38B8F0DE0E eADB;
$FF20F5A5458E17FC07E98E38B8F0DE0E eAddressSpec;
$FF20F5A5458E17FC07E98E38B8F0DE0E eAnalogAudio;
$FF20F5A5458E17FC07E98E38B8F0DE0E eAppleTalk;
$FF20F5A5458E17FC07E98E38B8F0DE0E eAudioLineIn;
$FF20F5A5458E17FC07E98E38B8F0DE0E eAudioLineOut;
$FF20F5A5458E17FC07E98E38B8F0DE0E eAudioOut;
$FF20F5A5458E17FC07E98E38B8F0DE0E eBus;
$FF20F5A5458E17FC07E98E38B8F0DE0E eCDROM;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eCapsLockDown;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eClearKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E eCommSlot;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eCommandDown;
$FF20F5A5458E17FC07E98E38B8F0DE0E eConduit;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eControlDown;
$FF20F5A5458E17FC07E98E38B8F0DE0E eDVD;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eDeleteKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E eDeviceType;
$FF20F5A5458E17FC07E98E38B8F0DE0E eDigitalAudio;
$FF20F5A5458E17FC07E98E38B8F0DE0E eDisplay;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eDownArrowKey;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eEndKey;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eEnterKey;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eEscapeKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E eEthernet;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF10Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF11Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF12Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF13Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF14Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF15Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF1Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF2Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF3Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF4Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF5Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF6Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF7Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF8Key;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eF9Key;
$FF20F5A5458E17FC07E98E38B8F0DE0E eFireWire;
$FF20F5A5458E17FC07E98E38B8F0DE0E eFloppy;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eForwardDelKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E eHD;
$6E24136140BD77919EE68EED8AB5C2B3 eHRScrollbarAuto;
$6E24136140BD77919EE68EED8AB5C2B3 eHRScrollbarOff;
$6E24136140BD77919EE68EED8AB5C2B3 eHRScrollbarOn;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eHelpKey;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eHomeKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E eIP;
$FF20F5A5458E17FC07E98E38B8F0DE0E eIRTalk;
$FF20F5A5458E17FC07E98E38B8F0DE0E eInfrared;
$FF20F5A5458E17FC07E98E38B8F0DE0E eIrDA;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eKeyKind;
$FF20F5A5458E17FC07E98E38B8F0DE0E eKeyboard;
$FF20F5A5458E17FC07E98E38B8F0DE0E eLCD;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eLeftArrowKey;
$AD013BEAD863262C000A0195ED82B0E8 eLenErr;
$FF20F5A5458E17FC07E98E38B8F0DE0E eLocalTalk;
$FF20F5A5458E17FC07E98E38B8F0DE0E eMacIP;
$FF20F5A5458E17FC07E98E38B8F0DE0E eMacVideo;
$FF20F5A5458E17FC07E98E38B8F0DE0E eMicrophone;
$FF20F5A5458E17FC07E98E38B8F0DE0E eModem;
$FF20F5A5458E17FC07E98E38B8F0DE0E eModemPort;
$FF20F5A5458E17FC07E98E38B8F0DE0E eModemPrinterPort;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eModifiers;
$FF20F5A5458E17FC07E98E38B8F0DE0E eMonitorOut;
$FF20F5A5458E17FC07E98E38B8F0DE0E eMouse;
$AD013BEAD863262C000A0195ED82B0E8 eMultiErr;
$C6CD21D6EDA87596013683706B8E246E eNotStarted;
$FF20F5A5458E17FC07E98E38B8F0DE0E eNuBus;
$FF20F5A5458E17FC07E98E38B8F0DE0E eNuBusCard;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eOptionDown;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePCIbus;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePCIcard;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePCcard;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePDScard;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePDSslot;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePPP;
$0050975A0ADB8A5406CEF98DE6B1DFA8 ePageDownKey;
$0050975A0ADB8A5406CEF98DE6B1DFA8 ePageUpKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePointingDevice;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePostScript;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePrinter;
$FF20F5A5458E17FC07E98E38B8F0DE0E ePrinterPort;
$FF20F5A5458E17FC07E98E38B8F0DE0E eProtocol;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eReturnKey;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eRightArrowKey;
$A6CEE37E00C2322A505ECE6E87375A30 eRun;
$C6CD21D6EDA87596013683706B8E246E eRunnable;
$C6CD21D6EDA87596013683706B8E246E eRunning;
$FF20F5A5458E17FC07E98E38B8F0DE0E eSCSI;
$FF20F5A5458E17FC07E98E38B8F0DE0E eSVGA;
$95A1F1327F3EE648E3FA633C1AEC8373 eScheme;
$FF20F5A5458E17FC07E98E38B8F0DE0E eSerial;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eShiftDown;
$FF20F5A5458E17FC07E98E38B8F0DE0E eSpeakers;
$A6CEE37E00C2322A505ECE6E87375A30 eStepIn;
$A6CEE37E00C2322A505ECE6E87375A30 eStepOut;
$A6CEE37E00C2322A505ECE6E87375A30 eStepOver;
$C6CD21D6EDA87596013683706B8E246E eStopped;
$FF20F5A5458E17FC07E98E38B8F0DE0E eStorageDevice;
$FF20F5A5458E17FC07E98E38B8F0DE0E eSvideo;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eTabKey;
$C6CD21D6EDA87596013683706B8E246E eTerminated;
$FF20F5A5458E17FC07E98E38B8F0DE0E eTokenRing;
$FF20F5A5458E17FC07E98E38B8F0DE0E eTrackball;
$FF20F5A5458E17FC07E98E38B8F0DE0E eTrackpad;
$FF20F5A5458E17FC07E98E38B8F0DE0E eUSB;
$0050975A0ADB8A5406CEF98DE6B1DFA8 eUpArrowKey;
$FF20F5A5458E17FC07E98E38B8F0DE0E eVideoIn;
$FF20F5A5458E17FC07E98E38B8F0DE0E eVideoMonitor;
$FF20F5A5458E17FC07E98E38B8F0DE0E eVideoOut;
WSTypeID eWSArrayType;
WSTypeID eWSBooleanType;
WSTypeID eWSDataType;
WSTypeID eWSDateType;
WSTypeID eWSDictionaryType;
WSTypeID eWSDoubleType;
WSTypeID eWSIntegerType;
WSTypeID eWSNullType;
WSTypeID eWSStringType;
WSTypeID eWSUnknownType;
$8E378796D9B27A0F0F3B65CDE1C24332 editText;
$F5D25084AB3C40D9EEA892B8C65FBDB2 editingNotAllowed;
$E3C80D94FC48D4CBFF4A338892F667A1 editionMgrInitErr;
$DDA3263AAAFDC2735294AAEF0985DAE8 eexecBinaryModifierStreamType;
$8A0661E97C5E67754D33CB96D6D3190F eightBitMode;
$E430DC1A89068137E931CBD3EE4979FB eightToThree;
$D497865AB20A3AD87EEE5277CBD67E69 emptyPathErr;
$DCAFB040F37F6DF2023604683B010173 encodingOnlyStreamAction;
$2AFA9741D4492F551C527940D8BE691A endOfDataReached;
$3396F92FAC0BE03A6A5A931576A5D5DF englishHighWord;
$AB88C37431EB6AD714E363592C093039 enterRun;
$AB88C37431EB6AD714E363592C093039 enterStandby;
$505C66D97284D85D49097DAD466A881D enumAfterDate;
$E883A9D9C4225E1D340888B31EA6BB27 enumAliases;
$790FDDCBA8E3E00BF9FA16B94A65D3EF enumAllDisks;
$E883A9D9C4225E1D340888B31EA6BB27 enumAllDocuments;
$790FDDCBA8E3E00BF9FA16B94A65D3EF enumAllLocalDisks;
$790FDDCBA8E3E00BF9FA16B94A65D3EF enumAllOpenFolders;
$790FDDCBA8E3E00BF9FA16B94A65D3EF enumAllRemoteDisks;
$505C66D97284D85D49097DAD466A881D enumAnyDate;
$42FC9E68B5392AD9F0841EBF8595CA0B enumArrangement;
$5946B9DECF101F624185137FE626359C enumArrows;
$505C66D97284D85D49097DAD466A881D enumBeforeDate;
$505C66D97284D85D49097DAD466A881D enumBetweenDate;
$8B45090A886AD5148A7928FDD00332FF enumBooleanValues;
$5FCB68FB6C3A69079EB72FD926B6815C enumConflicts;
$E2D9E1F60BCF6091AA345214E7769BD1 enumConsiderations;
$920BC98E694AE0E52BA97E93DF26E7E3 enumConsidsAndIgnores;
$505C66D97284D85D49097DAD466A881D enumDate;
$5FCB68FB6C3A69079EB72FD926B6815C enumExistingItems;
$E883A9D9C4225E1D340888B31EA6BB27 enumFolders;
$180C8C565A39754B138503F39E202172 enumFontsPanel;
$180C8C565A39754B138503F39E202172 enumGeneralPanel;
$5FCB68FB6C3A69079EB72FD926B6815C enumGestalt;
$7EE5EE0110DFEB94CBB6697375F9F14D enumIconSize;
$180C8C565A39754B138503F39E202172 enumInfoWindowPanel;
$5946B9DECF101F624185137FE626359C enumJustification;
$5946B9DECF101F624185137FE626359C enumKeyForm;
$7EE5EE0110DFEB94CBB6697375F9F14D enumLargeIconSize;
$505C66D97284D85D49097DAD466A881D enumLastMonth;
$505C66D97284D85D49097DAD466A881D enumLastWeek;
$505C66D97284D85D49097DAD466A881D enumLastYear;
$180C8C565A39754B138503F39E202172 enumMemoryPanel;
$7EE5EE0110DFEB94CBB6697375F9F14D enumMiniIconSize;
$8B45090A886AD5148A7928FDD00332FF enumMiscValues;
$5FCB68FB6C3A69079EB72FD926B6815C enumOlderItems;
$505C66D97284D85D49097DAD466A881D enumOnDate;
$5946B9DECF101F624185137FE626359C enumPosition;
$C483040D5F4E84A956E70138E70C9A03 enumPrefsButtonViewPanel;
$C483040D5F4E84A956E70138E70C9A03 enumPrefsGeneralPanel;
$C483040D5F4E84A956E70138E70C9A03 enumPrefsIconViewPanel;
$C483040D5F4E84A956E70138E70C9A03 enumPrefsLabelPanel;
$C483040D5F4E84A956E70138E70C9A03 enumPrefsListViewPanel;
$C483040D5F4E84A956E70138E70C9A03 enumPrefsWindowPanel;
$5946B9DECF101F624185137FE626359C enumProtection;
$5946B9DECF101F624185137FE626359C enumQuality;
$5946B9DECF101F624185137FE626359C enumSaveOptions;
$180C8C565A39754B138503F39E202172 enumSharingPanel;
$7EE5EE0110DFEB94CBB6697375F9F14D enumSmallIconSize;
$AE9C3E3B6F184BCE31ADAF245998DA2B enumSortDirection;
$AE9C3E3B6F184BCE31ADAF245998DA2B enumSortDirectionNormal;
$AE9C3E3B6F184BCE31ADAF245998DA2B enumSortDirectionReverse;
$E883A9D9C4225E1D340888B31EA6BB27 enumStationery;
$180C8C565A39754B138503F39E202172 enumStatusNConfigPanel;
$5946B9DECF101F624185137FE626359C enumStyle;
$505C66D97284D85D49097DAD466A881D enumThisMonth;
$505C66D97284D85D49097DAD466A881D enumThisWeek;
$505C66D97284D85D49097DAD466A881D enumThisYear;
$505C66D97284D85D49097DAD466A881D enumToday;
$5946B9DECF101F624185137FE626359C enumTransferMode;
$5FCB68FB6C3A69079EB72FD926B6815C enumViewBy;
$790FDDCBA8E3E00BF9FA16B94A65D3EF enumWhere;
$505C66D97284D85D49097DAD466A881D enumYesterday;
$A9175135286E5424CB0D9B4E7B733C82 env512KE;
$6D28B462C09C501752E4C4FF7ED38830 env68000;
$6D28B462C09C501752E4C4FF7ED38830 env68010;
$6D28B462C09C501752E4C4FF7ED38830 env68020;
$6D28B462C09C501752E4C4FF7ED38830 env68030;
$6D28B462C09C501752E4C4FF7ED38830 env68040;
$F374BE2AE2DD1FA69D2724F3C5205B1C envAExtendKbd;
$4AA72FB96FE40BDE945A00A3EE3D602E envBadVers;
$6D28B462C09C501752E4C4FF7ED38830 envCPUUnknown;
$F374BE2AE2DD1FA69D2724F3C5205B1C envExtISOADBKbd;
$A9175135286E5424CB0D9B4E7B733C82 envMac;
$F374BE2AE2DD1FA69D2724F3C5205B1C envMacAndPad;
$A9175135286E5424CB0D9B4E7B733C82 envMacII;
$A9175135286E5424CB0D9B4E7B733C82 envMacIIci;
$A9175135286E5424CB0D9B4E7B733C82 envMacIIcx;
$A9175135286E5424CB0D9B4E7B733C82 envMacIIfx;
$A9175135286E5424CB0D9B4E7B733C82 envMacIIx;
$F374BE2AE2DD1FA69D2724F3C5205B1C envMacKbd;
$A9175135286E5424CB0D9B4E7B733C82 envMacPlus;
$F374BE2AE2DD1FA69D2724F3C5205B1C envMacPlusKbd;
$A9175135286E5424CB0D9B4E7B733C82 envMachUnknown;
$4AA72FB96FE40BDE945A00A3EE3D602E envNotPresent;
$A9175135286E5424CB0D9B4E7B733C82 envPortable;
$F374BE2AE2DD1FA69D2724F3C5205B1C envPrtblADBKbd;
$F374BE2AE2DD1FA69D2724F3C5205B1C envPrtblISOKbd;
$A9175135286E5424CB0D9B4E7B733C82 envSE;
$A9175135286E5424CB0D9B4E7B733C82 envSE30;
$F374BE2AE2DD1FA69D2724F3C5205B1C envStandADBKbd;
$F374BE2AE2DD1FA69D2724F3C5205B1C envStdISOADBKbd;
$F374BE2AE2DD1FA69D2724F3C5205B1C envUnknownKbd;
$4AA72FB96FE40BDE945A00A3EE3D602E envVersTooBig;
$A9175135286E5424CB0D9B4E7B733C82 envXL;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 eofErr;
$AC49BCB98774BA196F1D518C13C65C80 eraField;
$69A3BF2E803A4172C51973E11B183607 eraMask;
$241E13C6FB4469EC9263EF6689DE5B6F errAEAccessorNotFound;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEBadKeyForm;
$241E13C6FB4469EC9263EF6689DE5B6F errAEBadListItem;
$241E13C6FB4469EC9263EF6689DE5B6F errAEBadTestKey;
$241E13C6FB4469EC9263EF6689DE5B6F errAEBufferTooSmall;
$241E13C6FB4469EC9263EF6689DE5B6F errAEBuildSyntaxError;
$45570CD5D26E95BFB2E244ED5C44CF65 errAECantHandleClass;
$45570CD5D26E95BFB2E244ED5C44CF65 errAECantPutThatThere;
$45570CD5D26E95BFB2E244ED5C44CF65 errAECantSupplyType;
$45570CD5D26E95BFB2E244ED5C44CF65 errAECantUndo;
$241E13C6FB4469EC9263EF6689DE5B6F errAECoercionFail;
$241E13C6FB4469EC9263EF6689DE5B6F errAECorruptData;
$241E13C6FB4469EC9263EF6689DE5B6F errAEDescIsNull;
$241E13C6FB4469EC9263EF6689DE5B6F errAEDescNotFound;
$241E13C6FB4469EC9263EF6689DE5B6F errAEDuplicateHandler;
$241E13C6FB4469EC9263EF6689DE5B6F errAEEmptyListContainer;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEEventFailed;
$241E13C6FB4469EC9263EF6689DE5B6F errAEEventFiltered;
$241E13C6FB4469EC9263EF6689DE5B6F errAEEventNotHandled;
$241E13C6FB4469EC9263EF6689DE5B6F errAEHandlerNotFound;
$241E13C6FB4469EC9263EF6689DE5B6F errAEIllegalIndex;
$241E13C6FB4469EC9263EF6689DE5B6F errAEImpossibleRange;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEInTransaction;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEIndexTooLarge;
$45570CD5D26E95BFB2E244ED5C44CF65 errAELocalOnly;
$241E13C6FB4469EC9263EF6689DE5B6F errAENegativeCount;
$241E13C6FB4469EC9263EF6689DE5B6F errAENewerVersion;
$241E13C6FB4469EC9263EF6689DE5B6F errAENoSuchLogical;
$241E13C6FB4469EC9263EF6689DE5B6F errAENoSuchObject;
$45570CD5D26E95BFB2E244ED5C44CF65 errAENoSuchTransaction;
$241E13C6FB4469EC9263EF6689DE5B6F errAENoUserInteraction;
$45570CD5D26E95BFB2E244ED5C44CF65 errAENoUserSelection;
$241E13C6FB4469EC9263EF6689DE5B6F errAENotAEDesc;
$45570CD5D26E95BFB2E244ED5C44CF65 errAENotASingleObject;
$241E13C6FB4469EC9263EF6689DE5B6F errAENotASpecialFunction;
$45570CD5D26E95BFB2E244ED5C44CF65 errAENotAnElement;
$45570CD5D26E95BFB2E244ED5C44CF65 errAENotAnEnumMember;
$241E13C6FB4469EC9263EF6689DE5B6F errAENotAnObjSpec;
$241E13C6FB4469EC9263EF6689DE5B6F errAENotAppleEvent;
$45570CD5D26E95BFB2E244ED5C44CF65 errAENotModifiable;
$241E13C6FB4469EC9263EF6689DE5B6F errAEParamMissed;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEPrivilegeError;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEPropertiesClash;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEReadDenied;
$241E13C6FB4469EC9263EF6689DE5B6F errAEReceiveEscapeCurrent;
$241E13C6FB4469EC9263EF6689DE5B6F errAEReceiveTerminate;
$241E13C6FB4469EC9263EF6689DE5B6F errAERecordingIsAlreadyOn;
$241E13C6FB4469EC9263EF6689DE5B6F errAEReplyNotArrived;
$241E13C6FB4469EC9263EF6689DE5B6F errAEReplyNotValid;
$241E13C6FB4469EC9263EF6689DE5B6F errAEStreamAlreadyConverted;
$241E13C6FB4469EC9263EF6689DE5B6F errAEStreamBadNesting;
$241E13C6FB4469EC9263EF6689DE5B6F errAETimeout;
$45570CD5D26E95BFB2E244ED5C44CF65 errAETypeError;
$241E13C6FB4469EC9263EF6689DE5B6F errAEUnknownAddressType;
$241E13C6FB4469EC9263EF6689DE5B6F errAEUnknownObjectType;
$241E13C6FB4469EC9263EF6689DE5B6F errAEUnknownSendMode;
$62B1763F2865C6BE32843FE03E3791DB errAEValueOutOfRange;
$241E13C6FB4469EC9263EF6689DE5B6F errAEWaitCanceled;
$45570CD5D26E95BFB2E244ED5C44CF65 errAEWriteDenied;
$241E13C6FB4469EC9263EF6689DE5B6F errAEWrongDataType;
$241E13C6FB4469EC9263EF6689DE5B6F errAEWrongNumberArgs;
$9138E2B321B6861D195ED2CAE01BC233 errASCantCompareMoreThan32k;
$9138E2B321B6861D195ED2CAE01BC233 errASCantConsiderAndIgnore;
$9138E2B321B6861D195ED2CAE01BC233 errASIllegalFormalParameter;
$9138E2B321B6861D195ED2CAE01BC233 errASInconsistentNames;
$9138E2B321B6861D195ED2CAE01BC233 errASNoResultReturned;
$9138E2B321B6861D195ED2CAE01BC233 errASParameterNotForEvent;
$9138E2B321B6861D195ED2CAE01BC233 errASTerminologyNestingTooDeep;
$4F9DE1D8C3878AC3CF43F92DA393F421 errAborted;
$8142DF7A6534400A2BF230BB1AB937A2 errAlreadyInImagingMode;
$4F9DE1D8C3878AC3CF43F92DA393F421 errAttention;
$CAA0BEF6FEF2C4550E86ACD656E239BD errCanNotInsertWhileWalkProcInProgress;
$8142DF7A6534400A2BF230BB1AB937A2 errCannotUndo;
$CBEAF8466AA846FE24FEC203F1FE884C errCantEmbedIntoSelf;
$CBEAF8466AA846FE24FEC203F1FE884C errCantEmbedRoot;
$CBEAF8466AA846FE24FEC203F1FE884C errControlDoesntSupportFocus;
$CBEAF8466AA846FE24FEC203F1FE884C errControlHiddenOrDisabled;
$CBEAF8466AA846FE24FEC203F1FE884C errControlIsNotEmbedder;
$CBEAF8466AA846FE24FEC203F1FE884C errControlsAlreadyExist;
$D525064D2195CBAE0DC0459A440BA9D5 errCorruptWindowDescription;
$CBEAF8466AA846FE24FEC203F1FE884C errCouldntSetFocus;
$4F9DE1D8C3878AC3CF43F92DA393F421 errDSPQueueSize;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserInvalidPropertyData;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserInvalidPropertyPart;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserItemNotAdded;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserItemNotFound;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserNotConfigured;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserPropertyNotFound;
$169DC22076385F7FE881D14DAF92F626 errDataBrowserPropertyNotSupported;
$CBEAF8466AA846FE24FEC203F1FE884C errDataNotSupported;
$CBEAF8466AA846FE24FEC203F1FE884C errDataSizeMismatch;
$8142DF7A6534400A2BF230BB1AB937A2 errEmptyScrap;
$68C2CB5636F1B33616F51F3605B640B4 errEndOfBody;
$68C2CB5636F1B33616F51F3605B640B4 errEndOfDocument;
$8142DF7A6534400A2BF230BB1AB937A2 errEngineNotFound;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadAllocFlags;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadBuffer;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadFSRef;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadForkName;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadForkRef;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadInfoBitmap;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadItemCount;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadIteratorFlags;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadPosMode;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSBadSearchParams;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSForkExists;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSForkNotFound;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSIteratorNotFound;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSIteratorNotSupported;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSMissingCatInfo;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSMissingName;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSNameTooLong;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSNoMoreItems;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSNotAFolder;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSQuotaExceeded;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSRefsDifferent;
$4AA72FB96FE40BDE945A00A3EE3D602E errFSUnknownCall;
$62B1763F2865C6BE32843FE03E3791DB errFinderAppFolderProtected;
$62B1763F2865C6BE32843FE03E3791DB errFinderBadPackageContents;
$62B1763F2865C6BE32843FE03E3791DB errFinderBoundsWrong;
$62B1763F2865C6BE32843FE03E3791DB errFinderCannotPutAway;
$62B1763F2865C6BE32843FE03E3791DB errFinderCantDeleteImmediately;
$62B1763F2865C6BE32843FE03E3791DB errFinderCantMoveSource;
$62B1763F2865C6BE32843FE03E3791DB errFinderCantMoveToAncestor;
$62B1763F2865C6BE32843FE03E3791DB errFinderCantMoveToDestination;
$62B1763F2865C6BE32843FE03E3791DB errFinderCantOverwrite;
$62B1763F2865C6BE32843FE03E3791DB errFinderCantUseTrashedItems;
$62B1763F2865C6BE32843FE03E3791DB errFinderCorruptOpenFolderList;
$62B1763F2865C6BE32843FE03E3791DB errFinderFileSharingMustBeOn;
$62B1763F2865C6BE32843FE03E3791DB errFinderIncestuousMove;
$62B1763F2865C6BE32843FE03E3791DB errFinderIsBusy;
$62B1763F2865C6BE32843FE03E3791DB errFinderItemAlreadyInDest;
$62B1763F2865C6BE32843FE03E3791DB errFinderLastReserved;
$62B1763F2865C6BE32843FE03E3791DB errFinderLockedItemsInTrash;
$62B1763F2865C6BE32843FE03E3791DB errFinderMustBeActive;
$62B1763F2865C6BE32843FE03E3791DB errFinderNoInvisibleFiles;
$62B1763F2865C6BE32843FE03E3791DB errFinderOnlyLockedItemsInTrash;
$62B1763F2865C6BE32843FE03E3791DB errFinderProgramLinkingMustBeOn;
$62B1763F2865C6BE32843FE03E3791DB errFinderPropertyDoesNotApply;
$62B1763F2865C6BE32843FE03E3791DB errFinderPropertyNowWindowBased;
$62B1763F2865C6BE32843FE03E3791DB errFinderSharePointsCantInherit;
$62B1763F2865C6BE32843FE03E3791DB errFinderSysFolderProtected;
$62B1763F2865C6BE32843FE03E3791DB errFinderUnknownUser;
$62B1763F2865C6BE32843FE03E3791DB errFinderUnsupportedInsidePackages;
$62B1763F2865C6BE32843FE03E3791DB errFinderVolumeNotFound;
$62B1763F2865C6BE32843FE03E3791DB errFinderWindowMustBeButtonView;
$62B1763F2865C6BE32843FE03E3791DB errFinderWindowMustBeIconView;
$62B1763F2865C6BE32843FE03E3791DB errFinderWindowMustBeListView;
$62B1763F2865C6BE32843FE03E3791DB errFinderWindowNotOpen;
$62B1763F2865C6BE32843FE03E3791DB errFinderWindowWrongType;
$D525064D2195CBAE0DC0459A440BA9D5 errFloatingWindowsNotInitialized;
$4F9DE1D8C3878AC3CF43F92DA393F421 errFwdReset;
$D3F7C3D1F679EB9627E8FEF879800410 errHMIllegalContentForMaximumState;
$D3F7C3D1F679EB9627E8FEF879800410 errHMIllegalContentForMinimumState;
$392D07C295136F2DD7CF43A05EE190F7 errIAAllocationErr;
$392D07C295136F2DD7CF43A05EE190F7 errIABufferTooSmall;
$392D07C295136F2DD7CF43A05EE190F7 errIACanceled;
$392D07C295136F2DD7CF43A05EE190F7 errIAEndOfTextRun;
$392D07C295136F2DD7CF43A05EE190F7 errIAInvalidDocument;
$392D07C295136F2DD7CF43A05EE190F7 errIANoErr;
$392D07C295136F2DD7CF43A05EE190F7 errIANoMoreItems;
$392D07C295136F2DD7CF43A05EE190F7 errIAParamErr;
$392D07C295136F2DD7CF43A05EE190F7 errIATextExtractionErr;
$392D07C295136F2DD7CF43A05EE190F7 errIAUnknownErr;
$CBEAF8466AA846FE24FEC203F1FE884C errInvalidPartCode;
$8142DF7A6534400A2BF230BB1AB937A2 errInvalidRange;
$D525064D2195CBAE0DC0459A440BA9D5 errInvalidWindowProperty;
$D525064D2195CBAE0DC0459A440BA9D5 errInvalidWindowPtr;
$D525064D2195CBAE0DC0459A440BA9D5 errInvalidWindowRef;
$CAA0BEF6FEF2C4550E86ACD656E239BD errItemAlreadyInTree;
$CBEAF8466AA846FE24FEC203F1FE884C errItemNotControl;
$CAA0BEF6FEF2C4550E86ACD656E239BD errItemNotFoundInTree;
$8142DF7A6534400A2BF230BB1AB937A2 errIteratorReachedEnd;
$99545B1E379846D061E870254C0252C8 errKBFailSettingID;
$99545B1E379846D061E870254C0252C8 errKBFailSettingTranslationTable;
$99545B1E379846D061E870254C0252C8 errKBFailWritePreference;
$99545B1E379846D061E870254C0252C8 errKBIlligalParameters;
$99545B1E379846D061E870254C0252C8 errKBPS2KeyboardNotAvailable;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCAuthFailed;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCBufferTooSmall;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCCreateChainFailed;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCDataNotAvailable;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCDataNotModifiable;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCDataTooLarge;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCDuplicateCallback;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCDuplicateItem;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCDuplicateKeychain;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCInteractionNotAllowed;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCInteractionRequired;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCInvalidCallback;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCInvalidItemRef;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCInvalidKeychain;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCInvalidSearchRef;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCItemNotFound;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCKeySizeNotAllowed;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoCertificateModule;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoDefaultKeychain;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoPolicyModule;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoStorageModule;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoSuchAttr;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoSuchClass;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNoSuchKeychain;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCNotAvailable;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCReadOnly;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCReadOnlyAttr;
$83A6A524D121D0E8667A9D630C0AC5E7 errKCWrongKCVersion;
$8142DF7A6534400A2BF230BB1AB937A2 errMarginWilllNotFit;
$CBEAF8466AA846FE24FEC203F1FE884C errMessageNotSupported;
$8142DF7A6534400A2BF230BB1AB937A2 errNoHiliteText;
$CBEAF8466AA846FE24FEC203F1FE884C errNoRootControl;
$8142DF7A6534400A2BF230BB1AB937A2 errNonContiuousAttribute;
$8142DF7A6534400A2BF230BB1AB937A2 errNotInImagingMode;
$CAA0BEF6FEF2C4550E86ACD656E239BD errNotValidTree;
$F63757A797D1995E78A11C47091E3097 errOSAAppNotHighLevelEventAware;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSABadSelector;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSABadStorageType;
$F63757A797D1995E78A11C47091E3097 errOSACantAccess;
$F63757A797D1995E78A11C47091E3097 errOSACantAssign;
$F63757A797D1995E78A11C47091E3097 errOSACantCoerce;
$F63757A797D1995E78A11C47091E3097 errOSACantCreate;
$F63757A797D1995E78A11C47091E3097 errOSACantGetTerminology;
$F63757A797D1995E78A11C47091E3097 errOSACantLaunch;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSACantOpenComponent;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSAComponentMismatch;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSACorruptData;
$F63757A797D1995E78A11C47091E3097 errOSACorruptTerminology;
$F63757A797D1995E78A11C47091E3097 errOSADataBlockTooLarge;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSADataFormatObsolete;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSADataFormatTooNew;
$F63757A797D1995E78A11C47091E3097 errOSADivideByZero;
$F63757A797D1995E78A11C47091E3097 errOSAGeneralError;
$F63757A797D1995E78A11C47091E3097 errOSAInternalTableOverflow;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSAInvalidID;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSANoSuchDialect;
$F63757A797D1995E78A11C47091E3097 errOSANumericOverflow;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSARecordingIsAlreadyOn;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSAScriptError;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSASourceNotAvailable;
$F63757A797D1995E78A11C47091E3097 errOSAStackOverflow;
$7F2F0B6087FC00D8A38A524612DDBB16 errOSASystemError;
$F97DFC0CBD96E281EE529FFE351F7F80 errOSATypeError;
$68C2CB5636F1B33616F51F3605B640B4 errOffsetInvalid;
$68C2CB5636F1B33616F51F3605B640B4 errOffsetIsOutsideOfView;
$8142DF7A6534400A2BF230BB1AB937A2 errOffsetNotOnElementBounday;
$4F9DE1D8C3878AC3CF43F92DA393F421 errOpenDenied;
$4F9DE1D8C3878AC3CF43F92DA393F421 errOpening;
$8142DF7A6534400A2BF230BB1AB937A2 errReadOnlyText;
$4F9DE1D8C3878AC3CF43F92DA393F421 errRefNum;
$CBEAF8466AA846FE24FEC203F1FE884C errRootAlreadyExists;
$4F9DE1D8C3878AC3CF43F92DA393F421 errState;
$4900759CD0BA08EC42BDC9CE65129C99 errTaskNotFound;
$68C2CB5636F1B33616F51F3605B640B4 errTopOfBody;
$68C2CB5636F1B33616F51F3605B640B4 errTopOfDocument;
$CAA0BEF6FEF2C4550E86ACD656E239BD errTreeIsLocked;
$8142DF7A6534400A2BF230BB1AB937A2 errUnknownAttributeTag;
$CBEAF8466AA846FE24FEC203F1FE884C errUnknownControl;
$8142DF7A6534400A2BF230BB1AB937A2 errUnknownElement;
$D525064D2195CBAE0DC0459A440BA9D5 errUnrecognizedWindowClass;
$D525064D2195CBAE0DC0459A440BA9D5 errUnsupportedWindowAttributesForClass;
$D525064D2195CBAE0DC0459A440BA9D5 errUserWantsToDragWindow;
$09C67811C86049E20C77348F14D9FE47 errWSInternalError;
$09C67811C86049E20C77348F14D9FE47 errWSParseError;
$09C67811C86049E20C77348F14D9FE47 errWSTimeoutError;
$09C67811C86049E20C77348F14D9FE47 errWSTransportError;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowDoesNotFitOnscreen;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowDoesNotHaveProxy;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowDoesntSupportFocus;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowNotFound;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowPropertyNotFound;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowRegionCodeInvalid;
$D525064D2195CBAE0DC0459A440BA9D5 errWindowsAlreadyInitialized;
MACRO_err err_dipc;
MACRO_err err_ipc;
MACRO_err err_ipc_compat;
MACRO_err err_kern;
MACRO_err err_local;
MACRO_err err_mach_ipc;
MACRO_err err_max_system;
MACRO_err err_server;
MACRO_err err_us;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlAFP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlAT;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlEPPC;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlFTP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlFile;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlGopher;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlHTTP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlHTTPS;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlIMAP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlLDAP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlLaunch;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlMail;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlMailbox;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlMessage;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlMulti;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlNFS;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlNNTP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlNews;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlPOP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlRTSP;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlSNews;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlTelnet;
$95A1F1327F3EE648E3FA633C1AEC8373 eurlUnknown;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 evType;
$DDA3263AAAFDC2735294AAEF0985DAE8 evenOddModifierStreamType;
$18462B8FB19D58F8C450A010FBE9BBC2 eventAlreadyPostedErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventClassIncorrectErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventClassInvalidErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventHandlerAlreadyInstalledErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventHotKeyExistsErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventHotKeyInvalidErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventInternalErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventKindIncorrectErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventLoopQuitErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventLoopTimedOutErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventNotHandledErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventNotInQueueErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventParameterNotFoundErr;
$18462B8FB19D58F8C450A010FBE9BBC2 eventTargetBusyErr;
$090FD46DADED99452600AACF39205147 everyEvent;
$1B4BF492561C2A580A46C8284175A37F evtNotEnb;
$15527A7957C35DDC42E8F9BAFCC21D16 exUserBreak;
$6AFAE475820C24F181AED14A4625BE64 excessCollsns;
$008155B23C6C847D4FC048674B3D561B ext32Device;
$39BB08BE97442728A4F53B80076F6C3F extFSErr;
$E008CB1471F2CE238ECDD36D0ADBCA4C extModemSelected;
$32C729C88CE832800A236F2596111AC4 extSH;
$CA37B7C591AB80BE0B169161AB784E55 extend;
$147E82B1B28920CD4B3E15BD59C82A4F extendBit;
$0C046DFC744FB1EF9FC22D2F28D24A81 extendedBlock;
$0C046DFC744FB1EF9FC22D2F28D24A81 extendedBlockLen;
$3B240B4C9ACC633426814EA91DA89F65 extensionsFolderIconResource;
$E4D926CFAC96D1A9C67CAB14770D8CA3 extractErr;
$3A0529DF53FD0FCB1009E9B11B87DC72 extraneousStrings;
$B53C769D156FA2F4822F71D37A0E5B3A fBadPartsTable;
$B53C769D156FA2F4822F71D37A0E5B3A fBestGuess;
$39BB08BE97442728A4F53B80076F6C3F fBsyErr;
$5D1FAF069B8473FC4827B766B8EA0F01 fDesktop;
$5D1FAF069B8473FC4827B766B8EA0F01 fDisk;
$B53C769D156FA2F4822F71D37A0E5B3A fEmptyFormatString;
$B53C769D156FA2F4822F71D37A0E5B3A fExtraDecimal;
$B53C769D156FA2F4822F71D37A0E5B3A fExtraExp;
$B53C769D156FA2F4822F71D37A0E5B3A fExtraPercent;
$B53C769D156FA2F4822F71D37A0E5B3A fExtraSeparator;
$B53C769D156FA2F4822F71D37A0E5B3A fFormStrIsNAN;
$B53C769D156FA2F4822F71D37A0E5B3A fFormatOK;
$B53C769D156FA2F4822F71D37A0E5B3A fFormatOverflow;
$1A9E20E3BED0542206514FA351EE53E7 fHasBundle;
$1A9E20E3BED0542206514FA351EE53E7 fInvisible;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 fLckdErr;
$B53C769D156FA2F4822F71D37A0E5B3A fMissingDelimiter;
$B53C769D156FA2F4822F71D37A0E5B3A fMissingLiteral;
$68A481D5359342D14A31108F1A836A6F fNegative;
$1A9E20E3BED0542206514FA351EE53E7 fOnDesk;
$B53C769D156FA2F4822F71D37A0E5B3A fOutOfSynch;
$68A481D5359342D14A31108F1A836A6F fPositive;
$B53C769D156FA2F4822F71D37A0E5B3A fSpuriousChars;
$5D1FAF069B8473FC4827B766B8EA0F01 fTrash;
$EED928CE20C9D20436E028491382AF02 fVNumber;
$68A481D5359342D14A31108F1A836A6F fZero;
$270F00ADEF16EFD1F46CBA2D4CC44548 faceBit;
MACRO_bool false;
$F0902F44937FF474D8C00514140AA502 false32b;
$3A0529DF53FD0FCB1009E9B11B87DC72 fatalDateTime;
fdversion fdlibm_ieee;
fdversion fdlibm_posix;
fdversion fdlibm_svid;
fdversion fdlibm_xopen;
$BDD49361200656C32D71296E4087EF49 featureFontTableTag;
$2AFA9741D4492F551C527940D8BE691A featureUnsupported;
$1AFD37A731F3A62F7A5D2B51D317DBED fetchReference;
$1B23EBE69E7C72E0D4B27DFF733651FE fiLigature;
$4AA72FB96FE40BDE945A00A3EE3D602E fidExists;
$4AA72FB96FE40BDE945A00A3EE3D602E fidNotFound;
$3A0529DF53FD0FCB1009E9B11B87DC72 fieldOrderNotIntl;
$E0B249A01E8422CE9D0FC370668E05FC fifthVidMode;
$4AA72FB96FE40BDE945A00A3EE3D602E fileBoundsErr;
$D497865AB20A3AD87EEE5277CBD67E69 fileOffsetTooBigErr;
$2DA05D06990FCEC1EA5697B9BD8DA598 fillListMsg;
$61822B9F17FF4C6D8E0FF7B2544F9B7D finalStage;
$4AA72FB96FE40BDE945A00A3EE3D602E firstDskErr;
$5299BEEE17FE295435C76CB19C21F235 firstPickerError;
$E91449E4D01B0E0713C44C0F19972FE1 firstSoundFormat;
$E0B249A01E8422CE9D0FC370668E05FC firstVidMode;
MACRO_fixed1 fixed1;
$42FB63263B63A280A710224707F66ACA fixedCompression;
$9468C09887B86EF1296548923B986A5A fixedFont;
$15316E1F4A06DF5737D2E4A1C671F46F fixedType;
$1B23EBE69E7C72E0D4B27DFF733651FE flLigature;
$DDA3263AAAFDC2735294AAEF0985DAE8 flattenedStreamType;
$8EB5A1135014ED1FF1B9439CFC25801A flavorDataPromised;
$8EB5A1135014ED1FF1B9439CFC25801A flavorNotSaved;
$8EB5A1135014ED1FF1B9439CFC25801A flavorSenderOnly;
$8EB5A1135014ED1FF1B9439CFC25801A flavorSenderTranslated;
$8EB5A1135014ED1FF1B9439CFC25801A flavorSystemTranslated;
$FEE40D924F56FD915E311539FF7AF614 flavorTypeDirectory;
$7E8F882485AD2725916D35C834C0611C flavorTypeHFS;
$7E8F882485AD2725916D35C834C0611C flavorTypePromiseHFS;
$54D8896E57898845ADF65F1EA92174A9 floatGrowProc;
$54D8896E57898845ADF65F1EA92174A9 floatProc;
$54D8896E57898845ADF65F1EA92174A9 floatSideGrowProc;
$54D8896E57898845ADF65F1EA92174A9 floatSideProc;
$54D8896E57898845ADF65F1EA92174A9 floatSideZoomGrowProc;
$54D8896E57898845ADF65F1EA92174A9 floatSideZoomProc;
$54D8896E57898845ADF65F1EA92174A9 floatZoomGrowProc;
$54D8896E57898845ADF65F1EA92174A9 floatZoomProc;
$02BA74D5F373AE3510806004249404D3 floppyIconResource;
$0A460A6E82C5C9197C39E6203E2D9451 flushCmd;
$F5733A20729282EBCF3804504A9796F3 fmt1Err;
$F5733A20729282EBCF3804504A9796F3 fmt2Err;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 fnOpnErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 fnfErr;
$270F00ADEF16EFD1F46CBA2D4CC44548 fontBit;
$4AA72FB96FE40BDE945A00A3EE3D602E fontDecError;
$4AA72FB96FE40BDE945A00A3EE3D602E fontNotDeclared;
$4AA72FB96FE40BDE945A00A3EE3D602E fontNotOutlineErr;
$62FB1450663E54E00B4287F942880E62 fontPanelFontSelectionQDStyleVersionErr;
$62FB1450663E54E00B4287F942880E62 fontPanelSelectionStyleErr;
$62FB1450663E54E00B4287F942880E62 fontPanelShowErr;
$DCAFB040F37F6DF2023604683B010173 fontSizeQueryStreamAction;
$4AA72FB96FE40BDE945A00A3EE3D602E fontSubErr;
$9468C09887B86EF1296548923B986A5A fontWid;
$3B240B4C9ACC633426814EA91DA89F65 fontsFolderIconResource;
$7ABC2998878633516ADEFA55C21F1171 forceReadBit;
$7ABC2998878633516ADEFA55C21F1171 forceReadMask;
$B21D79D3E9BA096E697B331A2EBEA84F formAbsolutePosition;
$E33FA219C498FB6CFD9279BD281C22D7 formAlias;
$E33FA219C498FB6CFD9279BD281C22D7 formCreator;
$B21D79D3E9BA096E697B331A2EBEA84F formName;
$B21D79D3E9BA096E697B331A2EBEA84F formPropertyID;
$B21D79D3E9BA096E697B331A2EBEA84F formRange;
$B21D79D3E9BA096E697B331A2EBEA84F formRelativePosition;
$B21D79D3E9BA096E697B331A2EBEA84F formTest;
$5946B9DECF101F624185137FE626359C formUniqueID;
$8B45090A886AD5148A7928FDD00332FF formUserPropertyID;
$C74DBA0D955B36FDC065BBDBE74F56F8 formWhose;
$8A0661E97C5E67754D33CB96D6D3190F fourBitMode;
$E0B249A01E8422CE9D0FC370668E05FC fourthVidMode;
MACRO_fixed1 fract1;
$1B23EBE69E7C72E0D4B27DFF733651FE fraction;
$3396F92FAC0BE03A6A5A931576A5D5DF frenchHighWord;
$44ECE7E4546325D743329C0612BB6567 fsAtMark;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsCurPerm;
$15527A7957C35DDC42E8F9BAFCC21D16 fsDSIntErr;
$4AA72FB96FE40BDE945A00A3EE3D602E fsDataTooBigErr;
$44ECE7E4546325D743329C0612BB6567 fsFromLEOF;
$44ECE7E4546325D743329C0612BB6567 fsFromMark;
$44ECE7E4546325D743329C0612BB6567 fsFromStart;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 fsQType;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsRdDenyPerm;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsRdPerm;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsRdWrPerm;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsRdWrShPerm;
$39BB08BE97442728A4F53B80076F6C3F fsRnErr;
$A1206A7966BF2DC23E3CBB1EA0867DCF fsRtDirID;
$A1206A7966BF2DC23E3CBB1EA0867DCF fsRtParID;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBAccessDate;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBAccessDateBit;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBAttributeModDate;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBAttributeModDateBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrBkDat;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrBkDatBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrCrDat;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrCrDatBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrFndrInfo;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrFndrInfoBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrMdDat;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrMdDatBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrNmFls;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrNmFlsBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrParID;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrParIDBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBDrUsrWds;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBDrUsrWdsBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlAttrib;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlAttribBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlBkDat;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlBkDatBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlCrDat;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlCrDatBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlFndrInfo;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlFndrInfoBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlLgLen;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlLgLenBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlMdDat;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlMdDatBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlParID;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlParIDBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlPyLen;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlPyLenBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlRLgLen;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlRLgLenBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlRPyLen;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlRPyLenBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFlXFndrInfo;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFlXFndrInfoBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBFullName;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBFullNameBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBNegate;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBNegateBit;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBNodeID;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBNodeIDBit;
$406356B116E6EE33714CA9B0AFBFEE45 fsSBPartialName;
$6527073B2FC5BCF9E69491BE50F5FD3B fsSBPartialNameBit;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBPermissions;
$9F2F4149995F85BAB80FDCD0841F2E44 fsSBPermissionsBit;
$A3660B3B85150C165095F263FB2BF123 fsUnixPriv;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsWrDenyPerm;
$93B700BF50DC5C9A7651BC9ACEB992D6 fsWrPerm;
$A2243C704A69C41BEFBD9BE6528C27CE fsmBadFFSNameErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmBadFSDLenErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmBadFSDVersionErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmBusyFFSErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmDuplicateFSIDErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmFFSNotFoundErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmNoAlternateStackErr;
$A2243C704A69C41BEFBD9BE6528C27CE fsmUnknownFSMMessageErr;
$3B240B4C9ACC633426814EA91DA89F65 fullTrashIconResource;
$9468C09887B86EF1296548923B986A5A fxdFntH;
$9468C09887B86EF1296548923B986A5A fxdFntHW;
$9468C09887B86EF1296548923B986A5A fxdFntW;
$2AFA9741D4492F551C527940D8BE691A gWorldsNotSameDepthAndSizeErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 gcrOnMFMErr;
$15316E1F4A06DF5737D2E4A1C671F46F gdDevType;
$D099BBBF644965626627A4C08DED2C2A genCdevRangeBit;
$02BA74D5F373AE3510806004249404D3 genericApplicationIconResource;
$02BA74D5F373AE3510806004249404D3 genericCDROMIconResource;
$02BA74D5F373AE3510806004249404D3 genericDeskAccessoryIconResource;
$02BA74D5F373AE3510806004249404D3 genericDocumentIconResource;
$02BA74D5F373AE3510806004249404D3 genericEditionFileIconResource;
$02BA74D5F373AE3510806004249404D3 genericExtensionIconResource;
$02BA74D5F373AE3510806004249404D3 genericFileServerIconResource;
$02BA74D5F373AE3510806004249404D3 genericFolderIconResource;
$02BA74D5F373AE3510806004249404D3 genericHardDiskIconResource;
$02BA74D5F373AE3510806004249404D3 genericMoverObjectIconResource;
$02BA74D5F373AE3510806004249404D3 genericPreferencesIconResource;
$02BA74D5F373AE3510806004249404D3 genericQueryDocumentIconResource;
$02BA74D5F373AE3510806004249404D3 genericRAMDiskIconResource;
$02BA74D5F373AE3510806004249404D3 genericStationeryIconResource;
$02BA74D5F373AE3510806004249404D3 genericSuitcaseIconResource;
$3396F92FAC0BE03A6A5A931576A5D5DF germanHighWord;
$724FB908BC2960446F861BB7B96870DB gestalt16BitAudioSupport;
$724FB908BC2960446F861BB7B96870DB gestalt16BitSoundIO;
$FAB2F287F3DB17B85592490DDA99E689 gestalt20thAnniversary;
$39C62CED0EE16DDDF93A72B0BB6E772C gestalt32BitAddressing;
$39C62CED0EE16DDDF93A72B0BB6E772C gestalt32BitCapable;
$87F7EA96BAAC937C35B0963A9B455DA5 gestalt32BitQD;
$87F7EA96BAAC937C35B0963A9B455DA5 gestalt32BitQD11;
$87F7EA96BAAC937C35B0963A9B455DA5 gestalt32BitQD12;
$87F7EA96BAAC937C35B0963A9B455DA5 gestalt32BitQD13;
$39C62CED0EE16DDDF93A72B0BB6E772C gestalt32BitSysZone;
$3FC04BE97A77F0D1760C878BB18DD272 gestalt68000;
$3FC04BE97A77F0D1760C878BB18DD272 gestalt68010;
$3FC04BE97A77F0D1760C878BB18DD272 gestalt68020;
$3FC04BE97A77F0D1760C878BB18DD272 gestalt68030;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestalt68030MMU;
$3FC04BE97A77F0D1760C878BB18DD272 gestalt68040;
$6F64EBC7B9F5FDB97C1D4291F382CEB1 gestalt68040FPU;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestalt68040MMU;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestalt68851;
$6F64EBC7B9F5FDB97C1D4291F382CEB1 gestalt68881;
$6F64EBC7B9F5FDB97C1D4291F382CEB1 gestalt68882;
$AF33A9D2AF2A9CE9A01FECE2DB0620A5 gestalt68k;
$87F7EA96BAAC937C35B0963A9B455DA5 gestalt8BitQD;
$61AC551B776D003E6A3EA7DE4C146938 gestaltADBISOKbdII;
$61AC551B776D003E6A3EA7DE4C146938 gestaltADBKbdII;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_5;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_6;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_6_1;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_6_2;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_6_3;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_7;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_7_2;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_8;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_8_1;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_8_3;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClient3_8_4;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClientAttributeMask;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClientCfgRsrc;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClientMultiReq;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClientSupportsIP;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClientVMUI;
$4A98DBF1C09186E7BD6201301DF54DD1 gestaltAFPClientVersionMask;
$5A21577F6C66B69F271DFC95BFD9B708 gestaltALMAttr;
$5A21577F6C66B69F271DFC95BFD9B708 gestaltALMHasCFMSupport;
$5A21577F6C66B69F271DFC95BFD9B708 gestaltALMHasRescanNotifiers;
$5A21577F6C66B69F271DFC95BFD9B708 gestaltALMHasSFGroup;
$C010A534DABF1676AB26CEC1CE344009 gestaltALMHasSFLocation;
$5A21577F6C66B69F271DFC95BFD9B708 gestaltALMPresent;
$19C4533A7EBC59A398AF5E04E7FF9495 gestaltALMVers;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestaltAMU;
$89EA878A7E1E4081D322E88840A43D15 gestaltATAAttr;
$89EA878A7E1E4081D322E88840A43D15 gestaltATAPresent;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUAscentDescentControlsFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUBatchBreakLinesFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUByCharacterClusterFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUDirectAccess;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUFallbacksFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUFallbacksObjFeatures;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUFeatures;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUGlyphBoundsFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUHighlightInactiveTextFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUIgnoreLeadingFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSULayoutCacheClearFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSULayoutCreateAndCopyFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSULineControlFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSULowLevelOrigFeatures;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUMemoryFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUPositionToCursorFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUTabSupportFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUTextLocatorUsageFeature;
$E07F0B9492EB63C770F677CBEE4A3230 gestaltATSUTrackingFeature;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUUpdate1;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUUpdate2;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUUpdate3;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUUpdate4;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUUpdate5;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUUpdate6;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltATSUVersion;
$0028101ACFAB47A80EF54B0DA6A16708 gestaltATalkVersion;
$D7EBE5AA91B0115949F2AF743A0A78F8 gestaltAUXVersion;
$9017E3E1B2E0E25DAEC8E0E5E4FC1D73 gestaltAVLTreeAttr;
$9017E3E1B2E0E25DAEC8E0E5E4FC1D73 gestaltAVLTreePresentBit;
$9017E3E1B2E0E25DAEC8E0E5E4FC1D73 gestaltAVLTreeSupportsHandleBasedTreeBit;
$9017E3E1B2E0E25DAEC8E0E5E4FC1D73 gestaltAVLTreeSupportsTreeLockingBit;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS6150_60;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS6150_66;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS8150_110;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS8150_80;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS8550;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS9150_120;
$FAB2F287F3DB17B85592490DDA99E689 gestaltAWS9150_80;
$39C62CED0EE16DDDF93A72B0BB6E772C gestaltAddressingModeAttr;
$E2A6E2FAD86FF36FA588964594F6D072 gestaltAdminFeaturesFlagsAttr;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrAttr;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrFollowsAliasesWhenResolving;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrPrefersPath;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrPresent;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrResolveAliasFileWithMountOptions;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrSupportsAOCEKeychain;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrSupportsExtendedCalls;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrSupportsFSCalls;
$AB8F6E438B0351C0F4A780897FB17068 gestaltAliasMgrSupportsRemoteAppletalk;
$87F7EA96BAAC937C35B0963A9B455DA5 gestaltAllegroQD;
$BAC058599A6DF9596C08256C682D581F gestaltAllegroQDText;
$C571926E981B88626D3749AEC43B7953 gestaltAltivecRegistersSwappedCorrectlyBit;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltAntiAliasedTextAvailable;
$57346C218FAFA837D961CDD545F6C271 gestaltAppearanceAttr;
$57346C218FAFA837D961CDD545F6C271 gestaltAppearanceCompatMode;
$57346C218FAFA837D961CDD545F6C271 gestaltAppearanceExists;
$B2CDBB1C1D240CDF461AB71150ACFB8C gestaltAppearanceVersion;
$61AC551B776D003E6A3EA7DE4C146938 gestaltAppleAdjustADBKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltAppleAdjustISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltAppleAdjustKeypad;
$40721B19BE4698E15E7AEA565487D18D gestaltAppleEventsAttr;
$40721B19BE4698E15E7AEA565487D18D gestaltAppleEventsPresent;
$387113DC9FF97F5E5D540DB5CB6BED11 gestaltAppleGuideIsDebug;
$387113DC9FF97F5E5D540DB5CB6BED11 gestaltAppleGuidePresent;
$4837E4F5E103AEE6536AD81F4C693818 gestaltAppleScriptAttr;
$4837E4F5E103AEE6536AD81F4C693818 gestaltAppleScriptPowerPCSupport;
$4837E4F5E103AEE6536AD81F4C693818 gestaltAppleScriptPresent;
$59197BA14A203D17976E7D9CA314268A gestaltAppleScriptVersion;
$77FCC2469876502B8D0C375F966DDD4F gestaltAppleTalkVersion;
$C03B0B598CA42821952B51ED913C70BC gestaltArbitorAttr;
$7D92B1AB7B10DFC8F045C2C7E2742C87 gestaltAsyncSCSI;
$7D92B1AB7B10DFC8F045C2C7E2742C87 gestaltAsyncSCSIINROM;
$724FB908BC2960446F861BB7B96870DB gestaltBuiltInSoundInput;
$72AD8C66B2CFC07A6DF7E731F2188206 gestaltBusClkSpeed;
$605D7267EE865C76A18AC27A563AC2E5 gestaltCFM99Present;
$605D7267EE865C76A18AC27A563AC2E5 gestaltCFM99PresentMask;
$605D7267EE865C76A18AC27A563AC2E5 gestaltCFMAttr;
$605D7267EE865C76A18AC27A563AC2E5 gestaltCFMPresent;
$605D7267EE865C76A18AC27A563AC2E5 gestaltCFMPresentMask;
$C396DE1B833B61D74CD5F82A4ED4BE91 gestaltCPU486;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU601;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU603;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU603e;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU603ev;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU604;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU604e;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU604ev;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU68000;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU68010;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU68020;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU68030;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU68040;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPU750;
$681C0B2CB864701D4D2C7DE0BA4B2826 gestaltCPU750FX;
$681C0B2CB864701D4D2C7DE0BA4B2826 gestaltCPUApollo;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPUG4;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltCPUG47450;
$C396DE1B833B61D74CD5F82A4ED4BE91 gestaltCPUPentium;
$C396DE1B833B61D74CD5F82A4ED4BE91 gestaltCPUPentiumII;
$C396DE1B833B61D74CD5F82A4ED4BE91 gestaltCPUPentiumPro;
$C396DE1B833B61D74CD5F82A4ED4BE91 gestaltCPUX86;
$48BE81039CC5A4D7C774B14681628245 gestaltCRMAttr;
$48BE81039CC5A4D7C774B14681628245 gestaltCRMPersistentFix;
$48BE81039CC5A4D7C774B14681628245 gestaltCRMPresent;
$48BE81039CC5A4D7C774B14681628245 gestaltCRMToolRsrcCalls;
$24E85AFE8F5E565506A0E18FE1A6D558 gestaltCTBVersion;
$205EB6B580C8A817F87468F09A9C18A3 gestaltCanStartDragInFloatWindow;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltCanUseCGTextRendering;
$D53F4E0326D47106C0DD078926504FC1 gestaltCarbonVersion;
$9CA407070494EAEF7BD0B0898672F852 gestaltCardServicesPresent;
$FAB2F287F3DB17B85592490DDA99E689 gestaltClassic;
$FAB2F287F3DB17B85592490DDA99E689 gestaltClassicII;
$9FC35BED961DFCDF161E924B65B75EC5 gestaltCloseViewAttr;
$9FC35BED961DFCDF161E924B65B75EC5 gestaltCloseViewDisplayMgrFriendly;
$9FC35BED961DFCDF161E924B65B75EC5 gestaltCloseViewEnabled;
$A32D511474C1C75E3F967CEC227E7D2E gestaltCollectionMgrVersion;
$A56F0ED265363007452A694F8A27B146 gestaltColorMatchingAttr;
$A56F0ED265363007452A694F8A27B146 gestaltColorMatchingLibLoaded;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorMatchingVersion;
$7A30D12CC1DCBFA65E2F8D75062A458B gestaltColorPicker;
$7A30D12CC1DCBFA65E2F8D75062A458B gestaltColorPickerVersion;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync10;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync104;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync105;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync11;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync20;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync21;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync211;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync212;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync213;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync25;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync26;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync261;
$616FCF444F7B5BC9D4B1632A4F5BBB52 gestaltColorSync30;
$63BAFD2A4E91C34DC1241D7E5C83233F gestaltComponentMgr;
$63BAFD2A4E91C34DC1241D7E5C83233F gestaltComponentPlatform;
$6645BADA46583C088E11FA5D6489D8C8 gestaltCompressionMgr;
$13735D0E25C27A5FA55B2F9E58467942 gestaltConnMgrAttr;
$13735D0E25C27A5FA55B2F9E58467942 gestaltConnMgrCMSearchFix;
$13735D0E25C27A5FA55B2F9E58467942 gestaltConnMgrErrorString;
$13735D0E25C27A5FA55B2F9E58467942 gestaltConnMgrMultiAsyncIO;
$13735D0E25C27A5FA55B2F9E58467942 gestaltConnMgrPresent;
$D561C47CD9EF715DDD0BE45025D5F82A gestaltContextualMenuAttr;
$D561C47CD9EF715DDD0BE45025D5F82A gestaltContextualMenuHasAttributeAndModifierKeys;
$D561C47CD9EF715DDD0BE45025D5F82A gestaltContextualMenuHasUnicodeSupport;
$D561C47CD9EF715DDD0BE45025D5F82A gestaltContextualMenuTrapAvailable;
$D561C47CD9EF715DDD0BE45025D5F82A gestaltContextualMenuUnusedBit;
$D939D7C67F3825A66EA4B76193F58EF4 gestaltControlMgrAttr;
$D939D7C67F3825A66EA4B76193F58EF4 gestaltControlMgrPresent;
$D939D7C67F3825A66EA4B76193F58EF4 gestaltControlMgrPresentBit;
$8386C4860B0CA83E5418A333B1DE6AB8 gestaltControlMgrVersion;
$D939D7C67F3825A66EA4B76193F58EF4 gestaltControlMsgPresentMask;
$08A6066FA02C75BBF1F55D83348F25DD gestaltControlStripAttr;
$08A6066FA02C75BBF1F55D83348F25DD gestaltControlStripExists;
$08A6066FA02C75BBF1F55D83348F25DD gestaltControlStripUserFont;
$08A6066FA02C75BBF1F55D83348F25DD gestaltControlStripUserHotKey;
$AE8BA71EA0C0B3C339B1CDEB90DFA22D gestaltControlStripVersion;
$08A6066FA02C75BBF1F55D83348F25DD gestaltControlStripVersionFixed;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltCreatesAliasFontRsrc;
$5129782C25EAF8D948F254D1B3E5EB91 gestaltCurrentGraphicsVersion;
$DF454213E631F55E7BA85EB027413EDC gestaltDBAccessMgrAttr;
$DF454213E631F55E7BA85EB027413EDC gestaltDBAccessMgrPresent;
$77E31E93792A1186CF38FAA1EB1500C2 gestaltDITLExtAttr;
$77E31E93792A1186CF38FAA1EB1500C2 gestaltDITLExtPresent;
$77E31E93792A1186CF38FAA1EB1500C2 gestaltDITLExtSupportsIctb;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltDTMgrSupportsFSM;
$FCE5A80E13FB5E355557FB2DEB7ACD2B gestaltDTPFeatures;
$C321A83340821592E5B37BF67CC91BE9 gestaltDTPInfo;
$625A92765BF1C9729B70E81383B56753 gestaltDesktopPicturesAttr;
$625A92765BF1C9729B70E81383B56753 gestaltDesktopPicturesDisplayed;
$625A92765BF1C9729B70E81383B56753 gestaltDesktopPicturesInstalled;
$270C0A98B536B4A68E6700E34EE8E9A1 gestaltDesktopSpeechRecognition;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMgrAttr;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMgrHasAquaAlertBit;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMgrHasAquaAlertMask;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMgrPresent;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMgrPresentBit;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMgrPresentMask;
$17BB229EB49BAA6EA08A01C730C9DA63 gestaltDialogMsgPresentMask;
$0BD16A67C3FA704B1ECBF17B139DC22A gestaltDictionaryMgrAttr;
$0BD16A67C3FA704B1ECBF17B139DC22A gestaltDictionaryMgrPresent;
$37A7B666E794B68B3B3F32E45577580D gestaltDigitalSignatureVersion;
$6435E6F5806752CCC7A28897D475E26C gestaltDiskCacheSize;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrAttr;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrCanConfirm;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrCanSwitchMirrored;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrColorSyncAware;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrGeneratesProfiles;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrPresent;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrSetDepthNotifies;
$FEA513DCBC3024A567794B1EAA9C15F2 gestaltDisplayMgrSleepNotifies;
$A92318ADF7676569A929FDB7AAC6B8D1 gestaltDisplayMgrVers;
$205EB6B580C8A817F87468F09A9C18A3 gestaltDragMgrAttr;
$205EB6B580C8A817F87468F09A9C18A3 gestaltDragMgrFloatingWind;
$205EB6B580C8A817F87468F09A9C18A3 gestaltDragMgrHasImageSupport;
$205EB6B580C8A817F87468F09A9C18A3 gestaltDragMgrPresent;
$710C1B72A989A2D3DB14757D02AFA040 gestaltDrawSprocketVersion;
$604BF1E9AE18BD5CE075FB6A0E1604C8 gestaltDupSelectorErr;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestaltEMMU1;
$9C3155642CC46C74C74EA627F07FAAAF gestaltEasyAccessAttr;
$9C3155642CC46C74C74EA627F07FAAAF gestaltEasyAccessLocked;
$9C3155642CC46C74C74EA627F07FAAAF gestaltEasyAccessOff;
$9C3155642CC46C74C74EA627F07FAAAF gestaltEasyAccessOn;
$9C3155642CC46C74C74EA627F07FAAAF gestaltEasyAccessSticky;
$1BA74565B9C3E48F3343788E90D97166 gestaltEditionMgrAttr;
$1BA74565B9C3E48F3343788E90D97166 gestaltEditionMgrPresent;
$1BA74565B9C3E48F3343788E90D97166 gestaltEditionMgrTranslationAware;
$61AC551B776D003E6A3EA7DE4C146938 gestaltExtADBKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltExtISOADBKbd;
$90E7AC47D02176A0B28F0DC0F29F1AE7 gestaltExtToolboxTable;
$1F40837085A2E419334DF3B97A64A211 gestaltExtendedTimeMgr;
$5D09B8C385951126E1C753803A77238E gestaltExtendedWindowAttributes;
$5D09B8C385951126E1C753803A77238E gestaltExtendedWindowAttributesBit;
$5D09B8C385951126E1C753803A77238E gestaltExtendedWindowAttributesMask;
$BD9C2CA927C28E2222F798A469BC8256 gestaltExtensionTableVersion;
$BCB2FAF3ABA424FFA3BC5A74027E8166 gestaltFBCCurrentVersion;
$15ABA46515E6848C2CDCE3F746CBE322 gestaltFBCIndexingState;
$BCB2FAF3ABA424FFA3BC5A74027E8166 gestaltFBCVersion;
$15ABA46515E6848C2CDCE3F746CBE322 gestaltFBCindexingCritical;
$15ABA46515E6848C2CDCE3F746CBE322 gestaltFBCindexingSafe;
$6F64EBC7B9F5FDB97C1D4291F382CEB1 gestaltFPUType;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSAttr;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSIncompatibleDFA82;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSMDoesDynamicLoad;
$9BA9EB558F66ABC341BE2BDCA705E833 gestaltFSMVersion;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSNoMFSVols;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSSupports2TBVols;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSSupports4GBVols;
$E33B90F5223FE1AA0CFC0B12B0658722 gestaltFSSupportsDirectIO;
$C7BFCD36EB7E15BAB321A526F119910C gestaltFSSupportsExclusiveLocks;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFSSupportsHFSPlusVols;
$C7BFCD36EB7E15BAB321A526F119910C gestaltFSSupportsHardLinkDetection;
$C7BFCD36EB7E15BAB321A526F119910C gestaltFSUsesPOSIXPathsForConversion;
$B17097DD22BB98816E8A4C03A243E59C gestaltFXfrMgrAsync;
$B17097DD22BB98816E8A4C03A243E59C gestaltFXfrMgrAttr;
$B17097DD22BB98816E8A4C03A243E59C gestaltFXfrMgrErrorString;
$B17097DD22BB98816E8A4C03A243E59C gestaltFXfrMgrMultiFile;
$B17097DD22BB98816E8A4C03A243E59C gestaltFXfrMgrPresent;
$17DFC21A6F91FB3CB816F3AFA94C73CF gestaltFileAllocationZeroedBlocksBit;
$49947AA14AC084F2152F122C7EE618BB gestaltFileMappingAttr;
$49947AA14AC084F2152F122C7EE618BB gestaltFileMappingMultipleFilesFix;
$49947AA14AC084F2152F122C7EE618BB gestaltFileMappingPresent;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFindFolderAttr;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFindFolderPresent;
$BB60F59EEE6EB1D8D4E8636F11B239D4 gestaltFindFolderRedirectionAttr;
$79978CB633CD8174A3C3C502647E125A gestaltFinderAttr;
$79978CB633CD8174A3C3C502647E125A gestaltFinderCallsAEProcess;
$79978CB633CD8174A3C3C502647E125A gestaltFinderDropEvent;
$79978CB633CD8174A3C3C502647E125A gestaltFinderFloppyRootComments;
$79978CB633CD8174A3C3C502647E125A gestaltFinderFullDragManagerSupport;
$79978CB633CD8174A3C3C502647E125A gestaltFinderHasClippings;
$79978CB633CD8174A3C3C502647E125A gestaltFinderLargeAndNotSavedFlavorsOK;
$79978CB633CD8174A3C3C502647E125A gestaltFinderMagicPlacement;
$79978CB633CD8174A3C3C502647E125A gestaltFinderSupports4GBVolumes;
$79978CB633CD8174A3C3C502647E125A gestaltFinderUnderstandsRedirectedDesktopFolder;
$79978CB633CD8174A3C3C502647E125A gestaltFinderUsesExtensibleFolderManager;
$E2A6E2FAD86FF36FA588964594F6D072 gestaltFinderUsesSpecialOpenFoldersFile;
$01157C99D1B6F47C166272A091A64F0F gestaltFirstSlotNumber;
$706972E9E5B1FDDC3705995FE957DC06 gestaltFloppyAttr;
$706972E9E5B1FDDC3705995FE957DC06 gestaltFloppyIsMFMOnly;
$706972E9E5B1FDDC3705995FE957DC06 gestaltFloppyIsManualEject;
$706972E9E5B1FDDC3705995FE957DC06 gestaltFloppyUsesDiskInPlace;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFolderDescSupport;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFolderMgrFollowsAliasesWhenResolving;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFolderMgrSupportsDomains;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFolderMgrSupportsExtendedCalls;
$3646DE91A668EC8A7A6D8FC888A91811 gestaltFolderMgrSupportsFSCalls;
$29C789C36C453FE12340AEDF2D4ADAB2 gestaltFontMgrAttr;
$5D09B8C385951126E1C753803A77238E gestaltFrontWindowMayBeHiddenBit;
$5D09B8C385951126E1C753803A77238E gestaltFrontWindowMayBeHiddenMask;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltFullExtFSDispatching;
$9625A4AF6F0BBBB079DE2A5A113907CC gestaltGXPrintingMgrVersion;
$653F24D007B10175E4A82868F555F443 gestaltGXVersion;
$4F49AF3BBD589494C2FF3EBC57309D33 gestaltGraphicsAttr;
$4F49AF3BBD589494C2FF3EBC57309D33 gestaltGraphicsIsDebugging;
$4F49AF3BBD589494C2FF3EBC57309D33 gestaltGraphicsIsLoaded;
$4F49AF3BBD589494C2FF3EBC57309D33 gestaltGraphicsIsPowerPC;
$5129782C25EAF8D948F254D1B3E5EB91 gestaltGraphicsVersion;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHardwareAttr;
$2424D6FB8BE50E8AA8C56E3FF31FB461 gestaltHardwareVendorApple;
$2424D6FB8BE50E8AA8C56E3FF31FB461 gestaltHardwareVendorCode;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasASC;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltHasColor;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltHasDeepGWorlds;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltHasDirectPixMaps;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasEnhancedLtalk;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltHasExtendedDiskInit;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasFMTuner;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltHasFSSpecCalls;
$B869BD235059CF9C2F4A2917BBD36A1C gestaltHasFileSystemManager;
$5D09B8C385951126E1C753803A77238E gestaltHasFloatingWindows;
$5D09B8C385951126E1C753803A77238E gestaltHasFloatingWindowsBit;
$5D09B8C385951126E1C753803A77238E gestaltHasFloatingWindowsMask;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltHasGPIaToDCDa;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltHasGPIaToRTxCa;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltHasGPIbToDCDb;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltHasGrayishTextOr;
$C7BFCD36EB7E15BAB321A526F119910C gestaltHasHFSPlusAPIs;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasHWClosedCaptioning;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasIRRemote;
$DF3840BAD951D87107829E074436D6FA gestaltHasParityCapability;
$608D24230D798E9C7FC175C991F2732F gestaltHasResourceOverrides;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasSCC;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasSCSI;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasSCSI961;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasSCSI962;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasSerialFader;
$4711EE41DA53708115D3F7B861784186 gestaltHasSingleWindowModeBit;
$4711EE41DA53708115D3F7B861784186 gestaltHasSingleWindowModeMask;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasSoftPowerOff;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasSoundFader;
$724FB908BC2960446F861BB7B96870DB gestaltHasSoundInputDevice;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasStereoDecoder;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasSystemIRFunction;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasTVTuner;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasUniversalROM;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasVIA1;
$3FA0017DA96B494CDFE03EEDC3A91F4F gestaltHasVIA2;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasVidDecoderScaler;
$5D09B8C385951126E1C753803A77238E gestaltHasWindowBuffering;
$5D09B8C385951126E1C753803A77238E gestaltHasWindowBufferingBit;
$5D09B8C385951126E1C753803A77238E gestaltHasWindowBufferingMask;
$5D09B8C385951126E1C753803A77238E gestaltHasWindowShadowsBit;
$5D09B8C385951126E1C753803A77238E gestaltHasWindowShadowsMask;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltHasZoomedVideo;
$387113DC9FF97F5E5D540DB5CB6BED11 gestaltHelpMgrAttr;
$387113DC9FF97F5E5D540DB5CB6BED11 gestaltHelpMgrExtensions;
$387113DC9FF97F5E5D540DB5CB6BED11 gestaltHelpMgrPresent;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltHidePortA;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltHidePortB;
$A56F0ED265363007452A694F8A27B146 gestaltHighLevelMatching;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltINeedIRPowerOffConfirm;
$C571926E981B88626D3749AEC43B7953 gestaltIPCSupport;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltIRDisabled;
$841872D43E3361CF54E747C7CDB540F6 gestaltIconUtilitiesAttr;
$841872D43E3361CF54E747C7CDB540F6 gestaltIconUtilitiesHas32BitIcons;
$841872D43E3361CF54E747C7CDB540F6 gestaltIconUtilitiesHas48PixelIcons;
$841872D43E3361CF54E747C7CDB540F6 gestaltIconUtilitiesHas8BitDeepMasks;
$841872D43E3361CF54E747C7CDB540F6 gestaltIconUtilitiesHasIconServices;
$841872D43E3361CF54E747C7CDB540F6 gestaltIconUtilitiesPresent;
$17DFC21A6F91FB3CB816F3AFA94C73CF gestaltInitHeapZerosOutHeapsBit;
$5C3FBFE29997718F9B18EE904C66E071 gestaltIntel;
$2083EC6813FE975E94F074380B998066 gestaltInternalDisplay;
$61AC551B776D003E6A3EA7DE4C146938 gestaltJapanAdjustADBKbd;
$C7FAE4C9EC3931A7ABACE92D3701D5D9 gestaltKBPS2Keyboards;
$C7FAE4C9EC3931A7ABACE92D3701D5D9 gestaltKBPS2SetIDToAny;
$C7FAE4C9EC3931A7ABACE92D3701D5D9 gestaltKBPS2SetTranslationTable;
$61AC551B776D003E6A3EA7DE4C146938 gestaltKeyboardType;
$C7FAE4C9EC3931A7ABACE92D3701D5D9 gestaltKeyboardsAttr;
$C571926E981B88626D3749AEC43B7953 gestaltLaunchCanReturn;
$C571926E981B88626D3749AEC43B7953 gestaltLaunchControl;
$C571926E981B88626D3749AEC43B7953 gestaltLaunchFullFileSpec;
$724FB908BC2960446F861BB7B96870DB gestaltLineLevelInput;
$604BF1E9AE18BD5CE075FB6A0E1604C8 gestaltLocationErr;
$F693F92258A1E201C40FF628AD93C219 gestaltLogicalPageSize;
$DA30B8415D5662220BAE183D9112A9F5 gestaltLogicalRAMSize;
$57207D5B7298A95A864C864EAD02CF47 gestaltLowMemorySize;
$F13B15BCDDBCBCBD05A6681AB4EA8259 gestaltMBLegacy;
$F13B15BCDDBCBCBD05A6681AB4EA8259 gestaltMBMultipleBays;
$F13B15BCDDBCBCBD05A6681AB4EA8259 gestaltMBSingleBay;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestaltMMUType;
$1D84147C46174B95198C6163E12965F0 gestaltMPCallableAPIsAttr;
$1D84147C46174B95198C6163E12965F0 gestaltMPDeviceManager;
$1D84147C46174B95198C6163E12965F0 gestaltMPFileManager;
$1D84147C46174B95198C6163E12965F0 gestaltMPTrapCalls;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMac512KE;
$61AC551B776D003E6A3EA7DE4C146938 gestaltMacAndPad;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacCentris610;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacCentris650;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacCentris660AV;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacClassic;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacColorClassic;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacII;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIci;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIcx;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIfx;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIsi;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIvi;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIvm;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIvx;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacIIx;
$61AC551B776D003E6A3EA7DE4C146938 gestaltMacKbd;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLC;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLC475;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLC520;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLC575;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLC580;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLCII;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacLCIII;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacOSCompatibility;
$A055E1A96E49C2407A9DB537A42D59E2 gestaltMacOSCompatibilityBoxAttr;
$A055E1A96E49C2407A9DB537A42D59E2 gestaltMacOSCompatibilityBoxHasSerial;
$A055E1A96E49C2407A9DB537A42D59E2 gestaltMacOSCompatibilityBoxPresent;
$A055E1A96E49C2407A9DB537A42D59E2 gestaltMacOSCompatibilityBoxless;
$87F7EA96BAAC937C35B0963A9B455DA5 gestaltMacOSXQD;
$BAC058599A6DF9596C08256C682D581F gestaltMacOSXQDText;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacPlus;
$61AC551B776D003E6A3EA7DE4C146938 gestaltMacPlusKbd;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra605;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra610;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra630;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra650;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra660AV;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra700;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra800;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra840AV;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra900;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacQuadra950;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacSE;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacSE030;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacTV;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMacXL;
$505EF0908353B048DDED67EDD6F85392 gestaltMachineIcon;
$FAB2F287F3DB17B85592490DDA99E689 gestaltMachineType;
$F13B15BCDDBCBCBD05A6681AB4EA8259 gestaltMediaBay;
$7EFE748F73D51E04DBC89483D19288CC gestaltMemoryMapAttr;
$7EFE748F73D51E04DBC89483D19288CC gestaltMemoryMapSparse;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrAquaLayoutBit;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrAquaLayoutMask;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrAttr;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrMoreThanFiveMenusDeepBit;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrMoreThanFiveMenusDeepMask;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrMultipleItemsWithCommandIDBit;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrMultipleItemsWithCommandIDMask;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrPresent;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrPresentBit;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrPresentMask;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrRetainsIconRefBit;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrRetainsIconRefMask;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrSendsMenuBoundsToDefProcBit;
$DEDA8AD17A1E5B434654D3C32189B1AC gestaltMenuMgrSendsMenuBoundsToDefProcMask;
$1FA84AA63BB1505AEEFF833A08DEC12A gestaltMessageMgrVersion;
$0FD433CB07F46E26BBD802E526778CC4 gestaltMiscAttr;
$079726FA8E10B0382DEE75248E5ADB52 gestaltMixedModeAttr;
$079726FA8E10B0382DEE75248E5ADB52 gestaltMixedModeCFM68K;
$079726FA8E10B0382DEE75248E5ADB52 gestaltMixedModeCFM68KHasState;
$079726FA8E10B0382DEE75248E5ADB52 gestaltMixedModeCFM68KHasTrap;
$079726FA8E10B0382DEE75248E5ADB52 gestaltMixedModePowerPC;
$F851A96C27AC5AF98F22D3DAA7666C31 gestaltMixedModeVersion;
$724FB908BC2960446F861BB7B96870DB gestaltMultiChannels;
$8DBAB3A5C4B415392B13308397874646 gestaltMultipleUsersState;
$C7BFCD36EB7E15BAB321A526F119910C gestaltMustUseFCBAccessors;
$A4A20F53BAEA66D297DEB7A50859A964 gestaltNameRegistryVersion;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltNativeCPUfamily;
$1AFA28F105031E15A5FF16F83B4927E2 gestaltNativeCPUtype;
$C571926E981B88626D3749AEC43B7953 gestaltNativeProcessMgrBit;
$1F40837085A2E419334DF3B97A64A211 gestaltNativeTimeMgr;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltNativeType1FontSupport;
$17DFC21A6F91FB3CB816F3AFA94C73CF gestaltNewHandleReturnsZeroedMemoryBit;
$17DFC21A6F91FB3CB816F3AFA94C73CF gestaltNewPtrReturnsZeroedMemoryBit;
$6F64EBC7B9F5FDB97C1D4291F382CEB1 gestaltNoFPU;
$E9036DF266AB8623E7CDE0FC3D2803B5 gestaltNoMMU;
$7262407EE15A39DC59E63AC7CDE0FC1D gestaltNotificationMgrAttr;
$7262407EE15A39DC59E63AC7CDE0FC1D gestaltNotificationPresent;
$CFBE06119183323645EB11ACCC8A8CC2 gestaltNuBusConnectors;
$707F1AD2DF171DA86014C5BB0FA99D2A gestaltNuBusPresent;
$64899EFE6E8E2F43B289EE24CE3EDF69 gestaltNuBusSlotCount;
$5AD176125175F3E2E2A15B1B336FAFA7 gestaltOCESFServerAvailable;
$0ED4E2625F0C5AC1DF0402E369412501 gestaltOCETB;
$5AD176125175F3E2E2A15B1B336FAFA7 gestaltOCETBAvailable;
$5AD176125175F3E2E2A15B1B336FAFA7 gestaltOCETBNativeGlueAvailable;
$5AD176125175F3E2E2A15B1B336FAFA7 gestaltOCETBPresent;
$5AD176125175F3E2E2A15B1B336FAFA7 gestaltOCEToolboxAttr;
$0ED4E2625F0C5AC1DF0402E369412501 gestaltOCEToolboxVersion;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltOFA2available;
$C571926E981B88626D3749AEC43B7953 gestaltOSAttr;
$79978CB633CD8174A3C3C502647E125A gestaltOSLCompliantFinder;
$40721B19BE4698E15E7AEA565487D18D gestaltOSLInSystem;
$5541CB586BC70AF128C91F5378A8BAA5 gestaltOSTable;
$BCB2FAF3ABA424FFA3BC5A74027E8166 gestaltOSXFBCCurrentVersion;
$28FE91DF9121F7059ACEA23C62B6E760 gestaltOpenFirmwareInfo;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTpt;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptARAPPresent;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptAppleTalkLoadedBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptAppleTalkLoadedMask;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptAppleTalkPresentBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptAppleTalkPresentMask;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptIPXSPXLoadedBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptIPXSPXLoadedMask;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptIPXSPXPresentBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptIPXSPXPresentMask;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptLoadedBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptLoadedMask;
$E1B29BD986AEEC879FFCDE3CDA8A3503 gestaltOpenTptNetworkSetup;
$E1B29BD986AEEC879FFCDE3CDA8A3503 gestaltOpenTptNetworkSetupLegacyExport;
$E1B29BD986AEEC879FFCDE3CDA8A3503 gestaltOpenTptNetworkSetupLegacyImport;
$E1B29BD986AEEC879FFCDE3CDA8A3503 gestaltOpenTptNetworkSetupSupportsMultihoming;
$C3E9DE54B5A9911F95270161D24BCD0A gestaltOpenTptNetworkSetupVersion;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptPPPPresent;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptPresentBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptPresentMask;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptRemoteAccess;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptRemoteAccessClientOnly;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptRemoteAccessLoaded;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptRemoteAccessMPServer;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptRemoteAccessPServer;
$D38B9FD5A40A4A198DD0B1587753352C gestaltOpenTptRemoteAccessPresent;
$B2A152DDA10A63ACA07BBC2FBC77DDA2 gestaltOpenTptRemoteAccessVersion;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptTCPLoadedBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptTCPLoadedMask;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptTCPPresentBit;
$C6C67F321F1E8CED2BA4A3DAFC49FFF0 gestaltOpenTptTCPPresentMask;
$6D5E702FDC11080DBA7E9DAA577B8FEE gestaltOpenTptVersions;
$6E2088F872BEE74DD7FCB1967619FCDE gestaltOriginalATSUVersion;
$87F7EA96BAAC937C35B0963A9B455DA5 gestaltOriginalQD;
$BAC058599A6DF9596C08256C682D581F gestaltOriginalQDText;
$29C789C36C453FE12340AEDF2D4ADAB2 gestaltOutlineFonts;
$9CA407070494EAEF7BD0B0898672F852 gestaltPCCard;
$9CA407070494EAEF7BD0B0898672F852 gestaltPCCardFamilyPresent;
$9CA407070494EAEF7BD0B0898672F852 gestaltPCCardHasPowerControl;
$9CA407070494EAEF7BD0B0898672F852 gestaltPCCardSupportsCardBus;
$740C8BBD2E7A5785DBD372E80878489A gestaltPCXAttr;
$740C8BBD2E7A5785DBD372E80878489A gestaltPCXHas8and16BitFAT;
$740C8BBD2E7A5785DBD372E80878489A gestaltPCXHasProDOS;
$740C8BBD2E7A5785DBD372E80878489A gestaltPCXNewUI;
$740C8BBD2E7A5785DBD372E80878489A gestaltPCXUseICMapping;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPMgrCPUIdle;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPMgrDispatchExists;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPMgrExists;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPMgrSCC;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPMgrSound;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPMgrSupportsAVPowerStateAtSleepWake;
$205EB6B580C8A817F87468F09A9C18A3 gestaltPPCDragLibPresent;
$F212579813AA1868D3E780E072F275D2 gestaltPPCQuickTimeLibPresent;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsIncoming;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsIncomingAppleTalk;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsIncomingTCP_IP;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsOutGoing;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsOutgoingAppleTalk;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsOutgoingTCP_IP;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsRealTime;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCSupportsTCP_IP;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCToolboxAttr;
$499F5B7FCCAB670DE4268B6CBC96C338 gestaltPPCToolboxPresent;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPS2Keyboard;
$DF3840BAD951D87107829E074436D6FA gestaltParityAttr;
$DF3840BAD951D87107829E074436D6FA gestaltParityEnabled;
$608D24230D798E9C7FC175C991F2732F gestaltPartialRsrcs;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma250;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma450;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma46x;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma47x;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma5300;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma550;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma580;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma600;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma6300;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma6360;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPerforma6400;
$BB03D9652BCB610AAF5FD1488CF32103 gestaltPhysicalRAMSize;
$724FB908BC2960446F861BB7B96870DB gestaltPlayAndRecord;
$75562743232096033B3BF8D6002FFC9D gestaltPopupAttr;
$75562743232096033B3BF8D6002FFC9D gestaltPopupPresent;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltPortADisabled;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltPortBDisabled;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPortable;
$AD37DD8421B072CED9CE406226181BC2 gestaltPortable2001ANSIKbd;
$AD37DD8421B072CED9CE406226181BC2 gestaltPortable2001ISOKbd;
$AD37DD8421B072CED9CE406226181BC2 gestaltPortable2001JISKbd;
$707F1AD2DF171DA86014C5BB0FA99D2A gestaltPortableSlotPresent;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook100;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook140;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook1400;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook145;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook150;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook160;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook165;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook165c;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook170;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook180;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook180c;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook190;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook2400;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook3400;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook500PPCUpgrade;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook520;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook520c;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook5300;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook540;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBook540c;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo210;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo230;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo2300;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo250;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo270c;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo280;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookDuo280c;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookG3;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookG3Series;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerBookG3Series2;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac4400;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac4400_160;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac5200;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac5260;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac5400;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac5500;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac6100_60;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac6100_66;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac6200;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac6400;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac6500;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac7100_66;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac7100_80;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac7200;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac7300;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac7500;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac7600;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac8100_100;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac8100_110;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac8100_120;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac8100_80;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac8500;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac8600;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac9500;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMac9600;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacCentris610;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacCentris650;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacG3;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacLC475;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacLC575;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacLC630;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacNewWorld;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacPerforma47x;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacPerforma57x;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacPerforma63x;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra610;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra630;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra650;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra700;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra800;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra900;
$FAB2F287F3DB17B85592490DDA99E689 gestaltPowerMacQuadra950;
$DA3EEFA2DAFD7BC9709141F59077DB78 gestaltPowerMgrAttr;
$F5D9FAC19B01936FCFD8B2CDB4802760 gestaltPowerMgrVers;
$AF33A9D2AF2A9CE9A01FECE2DB0620A5 gestaltPowerPC;
$079726FA8E10B0382DEE75248E5ADB52 gestaltPowerPCAware;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCHasDCBAInstruction;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCHasDataStreams;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCHasGraphicsInstructions;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCHasSTFIWXInstruction;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCHasSquareRootInstructions;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCHasVectorInstructions;
$0AF1A539848B03141012DCB98478665C gestaltPowerPCProcessorFeatures;
$5E583120C1958CE0FCEC92A32CF2C822 gestaltProcClkSpeed;
$3FC04BE97A77F0D1760C878BB18DD272 gestaltProcessorType;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPrtblADBKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPrtblISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBk99JISKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkEKDomKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkEKISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkEKJISKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkExtADBKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkExtISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkExtJISKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkSubDomKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkSubISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBkSubJISKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBookADBKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltPwrBookISOADBKbd;
$D32E9F0C639282720C08815F1C495A7E gestaltQD3D;
$D32E9F0C639282720C08815F1C495A7E gestaltQD3DPresent;
$D2C4D6124571D0244BE3D7978F72474F gestaltQD3DVersion;
$D1C043C4650AF0592A28ADF316D43F50 gestaltQD3DViewer;
$D1C043C4650AF0592A28ADF316D43F50 gestaltQD3DViewerPresent;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltQDHasLongRowBytes;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltQDTextFeatures;
$BAC058599A6DF9596C08256C682D581F gestaltQDTextVersion;
$195233BA6B43F2E05C3CA87A20919B87 gestaltQTVRCubicPanosPresent;
$195233BA6B43F2E05C3CA87A20919B87 gestaltQTVRCylinderPanosPresent;
$195233BA6B43F2E05C3CA87A20919B87 gestaltQTVRMgrAttr;
$195233BA6B43F2E05C3CA87A20919B87 gestaltQTVRMgrPresent;
$64B0C79273F8AD0DB83F3607FB595699 gestaltQTVRMgrVers;
$195233BA6B43F2E05C3CA87A20919B87 gestaltQTVRObjMoviesPresent;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra605;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra610;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra630;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra650;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra660AV;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra700;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra800;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra840AV;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra900;
$695C02ED6007F4B6DBB29555C47D7125 gestaltQuadra950;
$3575D480F83BC5CD421A38F8979F08EF gestaltQuickTime;
$B41C50726236EFA73E2B66C1293A5B95 gestaltQuickTimeConferencing;
$273EFE260B959759642A748515E1EC0F gestaltQuickTimeConferencingInfo;
$F212579813AA1868D3E780E072F275D2 gestaltQuickTimeFeatures;
$E9F4E47DFC2608FC7A45C154EC143FBD gestaltQuickTimeStreamingFeatures;
$E301901955D36BDA8DDC587EF60E89B9 gestaltQuickTimeStreamingVersion;
$3575D480F83BC5CD421A38F8979F08EF gestaltQuickTimeVersion;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltQuickdrawFeatures;
$87F7EA96BAAC937C35B0963A9B455DA5 gestaltQuickdrawVersion;
$005ED88BC290CA8EF610FA1F0A6593F8 gestaltRBVAddr;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltRMFakeAppleMenuItemsRolledIn;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltRMForceSysHeapRolledIn;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltRMSupportsFSCalls;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltRMTypeIndexOrderingReverse;
$17F86866EF9B16B2FD73FE5264668D40 gestaltROMSize;
$EB221F91F5F4F3B3EAB32FA706B5A82E gestaltROMVersion;
$C571926E981B88626D3749AEC43B7953 gestaltRealTempMemory;
$5EEED0D353A39A03877CDC08835CA1DF gestaltRealtimeMgrAttr;
$5EEED0D353A39A03877CDC08835CA1DF gestaltRealtimeMgrPresent;
$608D24230D798E9C7FC175C991F2732F gestaltResourceMgrAttr;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltResourceMgrBugFixesAttrs;
$1F40837085A2E419334DF3B97A64A211 gestaltRevisedTimeMgr;
$EFCC629676CB3BE6564C84AC5F53E519 gestaltSCCReadAddr;
$16F26E6451236D05421FD27FE8FC2E5B gestaltSCCWriteAddr;
$7D92B1AB7B10DFC8F045C2C7E2742C87 gestaltSCSI;
$7D92B1AB7B10DFC8F045C2C7E2742C87 gestaltSCSIPollSIH;
$7D92B1AB7B10DFC8F045C2C7E2742C87 gestaltSCSISlotBoot;
$4C2C886140D11886D6CFE0784BC4BBA4 gestaltSDPFindVersion;
$FF9279066A19F516B6E8000DC8A1B33A gestaltSDPPromptVersion;
$93CBC8EAD05DC932B7962D410BF82A49 gestaltSDPStandardDirectoryVersion;
$707F1AD2DF171DA86014C5BB0FA99D2A gestaltSE30SlotPresent;
$707F1AD2DF171DA86014C5BB0FA99D2A gestaltSESlotPresent;
$0ED4E2625F0C5AC1DF0402E369412501 gestaltSFServer;
$6BC4D5A370F805473F91F69C26443941 gestaltSMPMailerVersion;
$DE379690257587ECAC7F4D96D26BE482 gestaltSMPSPSendLetterVersion;
$17DFC21A6F91FB3CB816F3AFA94C73CF gestaltSafeOFAttr;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltSanityCheckResourceFiles;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltSbitFontSupport;
$F8B66D589904A2E0E51FCB1EA4FD36AB gestaltScrapMgrAttr;
$F8B66D589904A2E0E51FCB1EA4FD36AB gestaltScrapMgrTranslationAware;
$368D980834D25C124E108BF4CDCB0F22 gestaltScreenCaptureDir;
$368D980834D25C124E108BF4CDCB0F22 gestaltScreenCaptureMain;
$080C0C2F86256FEB5785F804E4A6A94B gestaltScriptCount;
$B5A3E1AB47302C6608CCEE6DDECC21E2 gestaltScriptMgrVersion;
$40721B19BE4698E15E7AEA565487D18D gestaltScriptingSupport;
$0FD433CB07F46E26BBD802E526778CC4 gestaltScrollingThrottle;
$C03B0B598CA42821952B51ED913C70BC gestaltSerialArbitrationExists;
$DAAD0F1087A6A9EE5F823A6D62416DB7 gestaltSerialAttr;
$205EB6B580C8A817F87468F09A9C18A3 gestaltSetDragImageUpdates;
$5D09B8C385951126E1C753803A77238E gestaltSheetsAreWindowModalBit;
$5D09B8C385951126E1C753803A77238E gestaltSheetsAreWindowModalMask;
$9E3D65463AE7379425752327921CBDC6 gestaltShutdownAttributes;
$9E3D65463AE7379425752327921CBDC6 gestaltShutdownHassdOnBootVolUnmount;
$707F1AD2DF171DA86014C5BB0FA99D2A gestaltSlotAttr;
$707F1AD2DF171DA86014C5BB0FA99D2A gestaltSlotMgrExists;
$724FB908BC2960446F861BB7B96870DB gestaltSndPlayDoubleBuffer;
$038B25DBC5D1BD231897EB39ED16781C gestaltSoftwareVendorApple;
$038B25DBC5D1BD231897EB39ED16781C gestaltSoftwareVendorCode;
$038B25DBC5D1BD231897EB39ED16781C gestaltSoftwareVendorLicensee;
$724FB908BC2960446F861BB7B96870DB gestaltSoundAttr;
$724FB908BC2960446F861BB7B96870DB gestaltSoundIOMgrPresent;
$757D3DC85B973D94A0817EAA3470FB59 gestaltSpecificMatchSupport;
$D9D232B7625776F2E80DA3B859080520 gestaltSpeechAttr;
$D9D232B7625776F2E80DA3B859080520 gestaltSpeechHasPPCGlue;
$D9D232B7625776F2E80DA3B859080520 gestaltSpeechMgrPresent;
$270C0A98B536B4A68E6700E34EE8E9A1 gestaltSpeechRecognitionAttr;
$6EEF3DADD36213AAA19FC60753AD1D62 gestaltSpeechRecognitionVersion;
$A1884C724CA4FCF86861F543C5F2C238 gestaltSplitOSAttr;
$A1884C724CA4FCF86861F543C5F2C238 gestaltSplitOSAware;
$A1884C724CA4FCF86861F543C5F2C238 gestaltSplitOSBootDriveIsNetworkVolume;
$A1884C724CA4FCF86861F543C5F2C238 gestaltSplitOSEnablerVolumeIsDifferentFromBootVolume;
$A1884C724CA4FCF86861F543C5F2C238 gestaltSplitOSMachineNameSetToNetworkNameTemp;
$A1884C724CA4FCF86861F543C5F2C238 gestaltSplitOSMachineNameStartupDiskIsNonPersistent;
$0FD433CB07F46E26BBD802E526778CC4 gestaltSquareMenuBar;
$6B2FF56776789F7E8624C5F992925097 gestaltStandardFile58;
$6B2FF56776789F7E8624C5F992925097 gestaltStandardFileAttr;
$6B2FF56776789F7E8624C5F992925097 gestaltStandardFileHasColorIcons;
$6B2FF56776789F7E8624C5F992925097 gestaltStandardFileHasDynamicVolumeAllocation;
$6B2FF56776789F7E8624C5F992925097 gestaltStandardFileTranslationAware;
$6B2FF56776789F7E8624C5F992925097 gestaltStandardFileUseGenericIcons;
$1F40837085A2E419334DF3B97A64A211 gestaltStandardTimeMgr;
$61AC551B776D003E6A3EA7DE4C146938 gestaltStdADBKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltStdISOADBKbd;
$CBB9F567B2EA89C4B4CEFD9F78D885C4 gestaltStdNBPAttr;
$CBB9F567B2EA89C4B4CEFD9F78D885C4 gestaltStdNBPPresent;
$CBB9F567B2EA89C4B4CEFD9F78D885C4 gestaltStdNBPSupportsAutoPosition;
$724FB908BC2960446F861BB7B96870DB gestaltStereoCapability;
$724FB908BC2960446F861BB7B96870DB gestaltStereoInput;
$724FB908BC2960446F861BB7B96870DB gestaltStereoMixing;
$40721B19BE4698E15E7AEA565487D18D gestaltSupportsApplicationURL;
$0D00CBF57566D26CC7EAA4A4555D8C6B gestaltSupportsFSpResourceFileAlreadyOpenBit;
$F9BADA3617171AA83D8E6EA82086C4C9 gestaltSupportsMirroring;
$AF33A9D2AF2A9CE9A01FECE2DB0620A5 gestaltSysArchitecture;
$C571926E981B88626D3749AEC43B7953 gestaltSysDebuggerSupport;
$C571926E981B88626D3749AEC43B7953 gestaltSysZoneGrowable;
$753EC103841FA900CB54716E4A5A6049 gestaltSystemUpdateVersion;
$6A4954A1BE5ADC8049158B5469B507DA gestaltSystemVersion;
$2F4053154C1DA5B15268672C87042D1D gestaltTE1;
$2F4053154C1DA5B15268672C87042D1D gestaltTE2;
$2F4053154C1DA5B15268672C87042D1D gestaltTE3;
$2F4053154C1DA5B15268672C87042D1D gestaltTE4;
$2F4053154C1DA5B15268672C87042D1D gestaltTE5;
$0A275DD450337B7241BC0C3FDED98064 gestaltTE6;
$207839773C06FCA74F9210D8E7D5C2F5 gestaltTEAttr;
$207839773C06FCA74F9210D8E7D5C2F5 gestaltTEHasGetHiliteRgn;
$207839773C06FCA74F9210D8E7D5C2F5 gestaltTEHasWhiteBackground;
$207839773C06FCA74F9210D8E7D5C2F5 gestaltTESupportsInlineInput;
$207839773C06FCA74F9210D8E7D5C2F5 gestaltTESupportsTextObjects;
$8781740746BC1014ED22560B5750DD07 gestaltTSMDisplayMgrAwareBit;
$3D696DECA9FA19124BE1A2E91C1BEDF1 gestaltTSMTE;
$768A538D1D035582BA0796618D0D60E0 gestaltTSMTE1;
$768A538D1D035582BA0796618D0D60E0 gestaltTSMTE15;
$768A538D1D035582BA0796618D0D60E0 gestaltTSMTE152;
$3D696DECA9FA19124BE1A2E91C1BEDF1 gestaltTSMTEAttr;
$3D696DECA9FA19124BE1A2E91C1BEDF1 gestaltTSMTEPresent;
$768A538D1D035582BA0796618D0D60E0 gestaltTSMTEVersion;
$8781740746BC1014ED22560B5750DD07 gestaltTSMdoesTSMTEBit;
$3B7BF87796B10E1D45F922741B5B9019 gestaltTSMgr15;
$3B7BF87796B10E1D45F922741B5B9019 gestaltTSMgr20;
$8781740746BC1014ED22560B5750DD07 gestaltTSMgrAttr;
$3B7BF87796B10E1D45F922741B5B9019 gestaltTSMgrVersion;
$1B08C5D09AC661B5AD3D7F6539F3115E gestaltTVAttr;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrAttr;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrAutoAnswer;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrIndHandset;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrNewTELNewSupport;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrPowerPCSupport;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrPresent;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrSilenceDetect;
$BE2EAAC144A3C76AB102FA4EBBA96742 gestaltTeleMgrSoundStreams;
$270C0A98B536B4A68E6700E34EE8E9A1 gestaltTelephoneSpeechRecognition;
$C571926E981B88626D3749AEC43B7953 gestaltTempMemSupport;
$C571926E981B88626D3749AEC43B7953 gestaltTempMemTracked;
$0CC9C53CD562061450875E4821B07CA7 gestaltTermMgrAttr;
$0CC9C53CD562061450875E4821B07CA7 gestaltTermMgrErrorString;
$0CC9C53CD562061450875E4821B07CA7 gestaltTermMgrPresent;
$2F4053154C1DA5B15268672C87042D1D gestaltTextEditVersion;
$757D3DC85B973D94A0817EAA3470FB59 gestaltThreadMgrAttr;
$757D3DC85B973D94A0817EAA3470FB59 gestaltThreadMgrPresent;
$757D3DC85B973D94A0817EAA3470FB59 gestaltThreadsLibraryPresent;
$1F40837085A2E419334DF3B97A64A211 gestaltTimeMgrVersion;
$CBE38FD281595659B759501A88BAAB2C gestaltToolboxTable;
$D156DE7AA4FFCAB5EDF3F7FE0CE7B7CB gestaltTranslationAttr;
$D156DE7AA4FFCAB5EDF3F7FE0CE7B7CB gestaltTranslationGetPathAPIAvail;
$D156DE7AA4FFCAB5EDF3F7FE0CE7B7CB gestaltTranslationMgrExists;
$D156DE7AA4FFCAB5EDF3F7FE0CE7B7CB gestaltTranslationMgrHintOrder;
$D156DE7AA4FFCAB5EDF3F7FE0CE7B7CB gestaltTranslationPPCAvail;
$50F824BEFD09A30944C35CDA595FB918 gestaltUDFSupport;
$61AC551B776D003E6A3EA7DE4C146938 gestaltUSBAndyANSIKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltUSBAndyISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltUSBAndyJISKbd;
$27ECC7B18BD5D19B215601640BDB9F73 gestaltUSBAttr;
$61AC551B776D003E6A3EA7DE4C146938 gestaltUSBCosmoANSIKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltUSBCosmoISOKbd;
$61AC551B776D003E6A3EA7DE4C146938 gestaltUSBCosmoJISKbd;
$27ECC7B18BD5D19B215601640BDB9F73 gestaltUSBHasIsoch;
$27ECC7B18BD5D19B215601640BDB9F73 gestaltUSBPresent;
$A1ADE14D7F3E06FD3B659145C73BD3EA gestaltUSBPrinterSharingAttr;
$A1ADE14D7F3E06FD3B659145C73BD3EA gestaltUSBPrinterSharingAttrBooted;
$A1ADE14D7F3E06FD3B659145C73BD3EA gestaltUSBPrinterSharingAttrMask;
$A1ADE14D7F3E06FD3B659145C73BD3EA gestaltUSBPrinterSharingAttrRunning;
$A1ADE14D7F3E06FD3B659145C73BD3EA gestaltUSBPrinterSharingVersion;
$A1ADE14D7F3E06FD3B659145C73BD3EA gestaltUSBPrinterSharingVersionMask;
$278E437784B2C5AD265B88EC79C19A4D gestaltUSBVersion;
$604BF1E9AE18BD5CE075FB6A0E1604C8 gestaltUndefSelectorErr;
$604BF1E9AE18BD5CE075FB6A0E1604C8 gestaltUnknownErr;
$EBF69FE0B762593AA94CA58BB5DCF053 gestaltUserVisibleMachineName;
$0D1879BBBB447582643B9B4E96A59577 gestaltVIA1Addr;
$E0E732442DF152E3D499A96BA1B03EA9 gestaltVIA2Addr;
$39F22650FBB10C65F25E01B87E0BA722 gestaltVMAttr;
$1C3D2DD5A768BA81C607C90BD95B8F4F gestaltVMBackingStoreFileRefNum;
$39F22650FBB10C65F25E01B87E0BA722 gestaltVMFilemappingOn;
$39F22650FBB10C65F25E01B87E0BA722 gestaltVMHasLockMemoryForOutput;
$39F22650FBB10C65F25E01B87E0BA722 gestaltVMHasPagingControl;
$42D675AA0ACD69CC352A07741DD35A8D gestaltVMInfoNoneType;
$42D675AA0ACD69CC352A07741DD35A8D gestaltVMInfoSimpleType;
$42D675AA0ACD69CC352A07741DD35A8D gestaltVMInfoSizeStorageType;
$42D675AA0ACD69CC352A07741DD35A8D gestaltVMInfoSizeType;
$42D675AA0ACD69CC352A07741DD35A8D gestaltVMInfoType;
$39F22650FBB10C65F25E01B87E0BA722 gestaltVMPresent;
$17DFC21A6F91FB3CB816F3AFA94C73CF gestaltVMZerosPagesBit;
$56D18C3D7DDE449E57B3393CBED9BF33 gestaltValueImplementedVers;
$56D18C3D7DDE449E57B3393CBED9BF33 gestaltVersion;
$807EA60E1C06F003BF102B45DDCFC30D gestaltWSIICanPrintWithoutPrGeneralBit;
$9DE13F8CF70FA4693536DE11AE096D94 gestaltWSIISupport;
$5D09B8C385951126E1C753803A77238E gestaltWindowLiveResizeBit;
$5D09B8C385951126E1C753803A77238E gestaltWindowLiveResizeMask;
$5D09B8C385951126E1C753803A77238E gestaltWindowMgrAttr;
$5D09B8C385951126E1C753803A77238E gestaltWindowMgrPresent;
$5D09B8C385951126E1C753803A77238E gestaltWindowMgrPresentBit;
$5D09B8C385951126E1C753803A77238E gestaltWindowMgrPresentMask;
$5D09B8C385951126E1C753803A77238E gestaltWindowMinimizeToDockBit;
$5D09B8C385951126E1C753803A77238E gestaltWindowMinimizeToDockMask;
$807EA60E1C06F003BF102B45DDCFC30D gestaltWorldScriptIIAttr;
$807EA60E1C06F003BF102B45DDCFC30D gestaltWorldScriptIIVersion;
$0A460A6E82C5C9197C39E6203E2D9451 getClockComponentCmd;
$AB88C37431EB6AD714E363592C093039 getPowerLevel;
$0A460A6E82C5C9197C39E6203E2D9451 getRateMultiplierCmd;
$2DA05D06990FCEC1EA5697B9BD8DA598 getSelMsg;
$0A460A6E82C5C9197C39E6203E2D9451 getVolumeCmd;
$39BB08BE97442728A4F53B80076F6C3F gfpErr;
$9042687E7B91F0D398CDB53579A9082B goodbye;
$F5D25084AB3C40D9EEA892B8C65FBDB2 grabTimeComplete;
$1B23EBE69E7C72E0D4B27DFF733651FE graveUprE;
$1B23EBE69E7C72E0D4B27DFF733651FE graveUprI;
$1B23EBE69E7C72E0D4B27DFF733651FE graveUprO;
$1B23EBE69E7C72E0D4B27DFF733651FE graveUprU;
$CBAF5646069367B3450D2EB7E8DB23F4 grayishTextOr;
$3396F92FAC0BE03A6A5A931576A5D5DF greekHighWord;
$229E80E760A3609929A8A4D193AE679E greenBit;
$2EE6D656A6356132BC5631EBF7AA5929 greenColor;
$A5BD715C8EAA008A7A3794353BC5F23C guestNotAllowedErr;
$3396F92FAC0BE03A6A5A931576A5D5DF gujuratiHighWord;
$3396F92FAC0BE03A6A5A931576A5D5DF gurmukhiHighWord;
$F3876F991244DA6C9E2D6E25C6A258B7 gwFlagErr;
$CD245178CB213C313AFEA4423394C154 gwFlagErrBit;
$7843CFC230C7B63097910348F257833D hAxisOnly;
$E0D1826B5FFF107D16D7DACE7DE82934 hMenuCmd;
$15527A7957C35DDC42E8F9BAFCC21D16 hMenuFindErr;
$1B23EBE69E7C72E0D4B27DFF733651FE hachek;
$00479C61961A244562671FE5ED76F811 handlerNotFoundErr;
$CF27797617E2017D26856567A7A44DE5 handshakeDataLength;
$A9758B604953F44B643EE3821B96EE8F hardwareConfigErr;
$42A49EA8AE7BAE129AB675773FAEF748 hasAggressiveIdling;
$008155B23C6C847D4FC048674B3D561B hasAuxMenuBar;
$42A49EA8AE7BAE129AB675773FAEF748 hasChargeNotification;
$42A49EA8AE7BAE129AB675773FAEF748 hasDeepSleep;
$42A49EA8AE7BAE129AB675773FAEF748 hasDimSuspendSupport;
$42A49EA8AE7BAE129AB675773FAEF748 hasDimmingSupport;
$E008CB1471F2CE238ECDD36D0ADBCA4C hasInternalModem;
$42A49EA8AE7BAE129AB675773FAEF748 hasProcessorCycling;
$42A49EA8AE7BAE129AB675773FAEF748 hasReducedSpeed;
$42A49EA8AE7BAE129AB675773FAEF748 hasSCSIDiskMode;
$42A49EA8AE7BAE129AB675773FAEF748 hasSharedModemPort;
$42A49EA8AE7BAE129AB675773FAEF748 hasSleep;
$42A49EA8AE7BAE129AB675773FAEF748 hasStartupTimer;
$42A49EA8AE7BAE129AB675773FAEF748 hasWakeOnLid;
$42A49EA8AE7BAE129AB675773FAEF748 hasWakeOnNetActivity;
$42A49EA8AE7BAE129AB675773FAEF748 hasWakeupTimer;
$3396F92FAC0BE03A6A5A931576A5D5DF hebrewHighWord;
$35F3A8173F0AA0C26984333843D3183B helpItem;
$CC4616D3C4C384DC58C4C548B533D9C9 hiChargeBit;
$4DE595C756820CE39E98AC2FA7981434 hiChargeMask;
$96691EE4B85C60D2D0BF2A1E0B20422F hiObjectClassExistsErr;
$96691EE4B85C60D2D0BF2A1E0B20422F hiObjectClassHasInstancesErr;
$96691EE4B85C60D2D0BF2A1E0B20422F hiObjectClassHasSubclassesErr;
$96691EE4B85C60D2D0BF2A1E0B20422F hiObjectClassIsAbstractErr;
$E0D1826B5FFF107D16D7DACE7DE82934 hierMenu;
$090FD46DADED99452600AACF39205147 highLevelEventMask;
$CBAF5646069367B3450D2EB7E8DB23F4 hilite;
$008155B23C6C847D4FC048674B3D561B hiliteBit;
$CBAF5646069367B3450D2EB7E8DB23F4 hilitetransfermode;
$D129F4DFEBA165F72EA98C618C3DD9EB hitDev;
$C625086FF7C44828098F3E200ADA2515 hitMsg;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmAbsoluteCoordsBit;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmAbsoluteCoordsMask;
$75F298804AFA0F791E6E27E3184CCE3F hmBalloonAborted;
$515BD0BBDD63C2055DF3F71E9F8CBA14 hmBalloonHelpVersion;
$75F298804AFA0F791E6E27E3184CCE3F hmCloseViewActive;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmDefaultOptions;
$75F298804AFA0F791E6E27E3184CCE3F hmHelpDisabled;
$75F298804AFA0F791E6E27E3184CCE3F hmHelpManagerNotInited;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmMatchInTitleBit;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmMatchInTitleMask;
$75F298804AFA0F791E6E27E3184CCE3F hmNoBalloonUp;
$75F298804AFA0F791E6E27E3184CCE3F hmOperationUnsupported;
$75F298804AFA0F791E6E27E3184CCE3F hmSameAsLastBalloon;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmSaveBitsNoWindowBit;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmSaveBitsNoWindowMask;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmSaveBitsWindowBit;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmSaveBitsWindowMask;
$75F298804AFA0F791E6E27E3184CCE3F hmSkippedBalloon;
$75F298804AFA0F791E6E27E3184CCE3F hmUnknownHelpType;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmUseSubIDBit;
$9EE9DF6533CFCC3904819E8BEC2EBF07 hmUseSubIDMask;
$75F298804AFA0F791E6E27E3184CCE3F hmWrongVersion;
$AC49BCB98774BA196F1D518C13C65C80 hourField;
$69A3BF2E803A4172C51973E11B183607 hourMask;
$F2D088B1C6E60216DC43F2F1DC4382F9 hrHTMLRenderingLibNotInstalledErr;
$4FBD46A7782F6749F1F35ACCB96A0A2C hrLeadingZ;
$F2D088B1C6E60216DC43F2F1DC4382F9 hrMiscellaneousExceptionErr;
$F2D088B1C6E60216DC43F2F1DC4382F9 hrURLNotHandledErr;
$F2D088B1C6E60216DC43F2F1DC4382F9 hrUnableToResizeHandleErr;
$008155B23C6C847D4FC048674B3D561B hwMirroredDevice;
$C98B22E8D4E004C8875CFAC75B2C8663 hwParamErr;
$E47A24D70C087CD7CD8B3D81D230CB29 iBeamCursor;
$4ED70C7D73628320C0F101BFED5325F0 iIOAbort;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 iIOAbortErr;
$4ED70C7D73628320C0F101BFED5325F0 iMemFullErr;
$B721768BB4086C28613246DEC34FEA91 icConfigInappropriateErr;
$B721768BB4086C28613246DEC34FEA91 icConfigNotFoundErr;
$B721768BB4086C28613246DEC34FEA91 icInternalErr;
$B721768BB4086C28613246DEC34FEA91 icNoMoreWritersErr;
$8C27ABDD7F778AF7A2CDE8078D8EB8C4 icNoPerm;
$B721768BB4086C28613246DEC34FEA91 icNoURLErr;
$B721768BB4086C28613246DEC34FEA91 icNothingToOverrideErr;
$B721768BB4086C28613246DEC34FEA91 icPermErr;
$B721768BB4086C28613246DEC34FEA91 icPrefDataErr;
$B721768BB4086C28613246DEC34FEA91 icPrefNotFoundErr;
$B721768BB4086C28613246DEC34FEA91 icProfileNotFoundErr;
$8C27ABDD7F778AF7A2CDE8078D8EB8C4 icReadOnlyPerm;
$8C27ABDD7F778AF7A2CDE8078D8EB8C4 icReadWritePerm;
$B721768BB4086C28613246DEC34FEA91 icTooManyProfilesErr;
$B721768BB4086C28613246DEC34FEA91 icTruncatedErr;
$3396F92FAC0BE03A6A5A931576A5D5DF icelandicHighWord;
$8E378796D9B27A0F0F3B65CDE1C24332 iconItem;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalChannelOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalControllerOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalInstrumentOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalKnobOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalKnobValueOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalNoteChannelOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalPartOSErr;
$2140534AFEBF1A2FEC4DC9038366C647 illegalScrapFlavorFlagsErr;
$2140534AFEBF1A2FEC4DC9038366C647 illegalScrapFlavorSizeErr;
$2140534AFEBF1A2FEC4DC9038366C647 illegalScrapFlavorTypeErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B illegalVoiceAllocationOSErr;
$6F74D91E08344A644C0691D6CEFC96D4 inCollapseBox;
$6F74D91E08344A644C0691D6CEFC96D4 inContent;
$6F74D91E08344A644C0691D6CEFC96D4 inDesk;
$6F74D91E08344A644C0691D6CEFC96D4 inDrag;
$6F74D91E08344A644C0691D6CEFC96D4 inGoAway;
$6F74D91E08344A644C0691D6CEFC96D4 inGrow;
$6F74D91E08344A644C0691D6CEFC96D4 inMenuBar;
$6F74D91E08344A644C0691D6CEFC96D4 inNoWindow;
$6F74D91E08344A644C0691D6CEFC96D4 inProxyIcon;
$6F74D91E08344A644C0691D6CEFC96D4 inStructure;
$6F74D91E08344A644C0691D6CEFC96D4 inSysWindow;
$6F74D91E08344A644C0691D6CEFC96D4 inToolbarButton;
$6F74D91E08344A644C0691D6CEFC96D4 inZoomIn;
$6F74D91E08344A644C0691D6CEFC96D4 inZoomOut;
$84C242BEA25FE377EB24CF870780C809 incompatibleVoice;
$0132FDD463E5469078503A1902792BC1 initChanLeft;
$0132FDD463E5469078503A1902792BC1 initChanRight;
$4D21454FAD90E25BD2497F2FB4C4BB43 initCntl;
$0132FDD463E5469078503A1902792BC1 initCompMask;
$D129F4DFEBA165F72EA98C618C3DD9EB initDev;
$F5733A20729282EBCF3804504A9796F3 initIWMErr;
$0132FDD463E5469078503A1902792BC1 initMACE3;
$0132FDD463E5469078503A1902792BC1 initMACE6;
$0132FDD463E5469078503A1902792BC1 initMono;
$C625086FF7C44828098F3E200ADA2515 initMsg;
$0132FDD463E5469078503A1902792BC1 initNoDrop;
$0132FDD463E5469078503A1902792BC1 initNoInterp;
$0132FDD463E5469078503A1902792BC1 initPanMask;
$0132FDD463E5469078503A1902792BC1 initSRateMask;
$0132FDD463E5469078503A1902792BC1 initStereo;
$0132FDD463E5469078503A1902792BC1 initStereoMask;
$44F391F6F759E67D2435F1C3F9758D28 inputOutOfBounds;
$44F391F6F759E67D2435F1C3F9758D28 insufficientStackErr;
$EBC34842098DE6D289F984FF7768C4E3 intArabic;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intDrawHook;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intEOLHook;
$EBC34842098DE6D289F984FF7768C4E3 intEuropean;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intHitTestHook;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intInlineInputTSMTEPostUpdateHook;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intInlineInputTSMTEPreUpdateHook;
$EBC34842098DE6D289F984FF7768C4E3 intJapanese;
$E008CB1471F2CE238ECDD36D0ADBCA4C intModemOffHook;
$E008CB1471F2CE238ECDD36D0ADBCA4C intModemRingDetect;
$E008CB1471F2CE238ECDD36D0ADBCA4C intModemRingWakeEnb;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intNWidthHook;
$EBC34842098DE6D289F984FF7768C4E3 intOutputMask;
$EBC34842098DE6D289F984FF7768C4E3 intRoman;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intTextWidthHook;
$EBC34842098DE6D289F984FF7768C4E3 intWestern;
$3BFEFCA321A3DBCBB94A35EC1B8CD9AD intWidthHook;
$008155B23C6C847D4FC048674B3D561B interlacedDevice;
$A8C97E4EDD9E089EB77DFE179D2C9A4B internalComponentErr;
$2AFA9741D4492F551C527940D8BE691A internalQuickTimeError;
$2140534AFEBF1A2FEC4DC9038366C647 internalScrapErr;
$712386A955D55ECCA8691C9DF9CD79AC interruptsMaskedErr;
$1B23EBE69E7C72E0D4B27DFF733651FE intlCurrency;
$37CA61F817E3AEAC21F16EA5A9C92F13 invalColReq;
$D497865AB20A3AD87EEE5277CBD67E69 invalidAtomContainerErr;
$D497865AB20A3AD87EEE5277CBD67E69 invalidAtomErr;
$D497865AB20A3AD87EEE5277CBD67E69 invalidAtomTypeErr;
$2AFA9741D4492F551C527940D8BE691A invalidChunkCache;
$2AFA9741D4492F551C527940D8BE691A invalidChunkNum;
$F41C837101AFC9B0316B257F2D9D4B05 invalidComponentID;
$2AFA9741D4492F551C527940D8BE691A invalidDataRef;
$2AFA9741D4492F551C527940D8BE691A invalidDataRefContainer;
$2AFA9741D4492F551C527940D8BE691A invalidDuration;
$2AFA9741D4492F551C527940D8BE691A invalidEditState;
$5D2ED6E9C3B52C2B530C241D43578F10 invalidFolderTypeErr;
$2AFA9741D4492F551C527940D8BE691A invalidHandler;
$2E21CDC9416351B60D3647421538B7E9 invalidHotSpotIDErr;
$1014588365877AFD25E859D84C4C8176 invalidIconRefErr;
$2AFA9741D4492F551C527940D8BE691A invalidImageIndexErr;
$14338A5B3D28FC26400B4BB31F21F442 invalidIndexErr;
$2AFA9741D4492F551C527940D8BE691A invalidMedia;
$2AFA9741D4492F551C527940D8BE691A invalidMovie;
$2E21CDC9416351B60D3647421538B7E9 invalidNodeFormatErr;
$2E21CDC9416351B60D3647421538B7E9 invalidNodeIDErr;
$5299BEEE17FE295435C76CB19C21F235 invalidPickerType;
$2AFA9741D4492F551C527940D8BE691A invalidRect;
$2AFA9741D4492F551C527940D8BE691A invalidSampleDescIndex;
$2AFA9741D4492F551C527940D8BE691A invalidSampleDescription;
$2AFA9741D4492F551C527940D8BE691A invalidSampleNum;
$2AFA9741D4492F551C527940D8BE691A invalidSampleTable;
$2AFA9741D4492F551C527940D8BE691A invalidSpriteIDErr;
$2AFA9741D4492F551C527940D8BE691A invalidSpriteIndexErr;
$2AFA9741D4492F551C527940D8BE691A invalidSpritePropertyErr;
$2AFA9741D4492F551C527940D8BE691A invalidSpriteWorldPropertyErr;
$2AFA9741D4492F551C527940D8BE691A invalidTime;
$2AFA9741D4492F551C527940D8BE691A invalidTrack;
$ED7426C36EBB82C0ECCADDCACB27D156 invalidTranslationPathErr;
$2E21CDC9416351B60D3647421538B7E9 invalidViewStateErr;
$229E80E760A3609929A8A4D193AE679E inverseBit;
$211077E282033C3248342175C2161A3D ioDirFlg;
$211077E282033C3248342175C2161A3D ioDirMask;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 ioErr;
$513253074AF884203639B3D8DAF000AD ioInProgress;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 ioQType;
$3396F92FAC0BE03A6A5A931576A5D5DF italianHighWord;
$CA37B7C591AB80BE0B169161AB784E55 italic;
$147E82B1B28920CD4B3E15BD59C82A4F italicBit;
$8E378796D9B27A0F0F3B65CDE1C24332 itemDisable;
$FC72B8DA2D63F419F6FD5A020FCABC47 itlcDisableKeyScriptSync;
$69FAC9D66AAC9E0D33F55A00E8EC7EF3 itlcDisableKeyScriptSyncMask;
$58EDEC0E60350C0E6D3F5EE2633005D2 itlcDualCaret;
$58EDEC0E60350C0E6D3F5EE2633005D2 itlcShowIcon;
$58EDEC0E60350C0E6D3F5EE2633005D2 itlcSysDirection;
$6C2AFB039F310A1866F120B80E9E817C iuCurrentCurLang;
$6C2AFB039F310A1866F120B80E9E817C iuCurrentDefLang;
$61CA1453517DE4AADA13867E4C53BE4C iuCurrentScript;
$89014B5696B23340C5C8539B64398289 iuNumberPartsTable;
$6C2AFB039F310A1866F120B80E9E817C iuScriptCurLang;
$6C2AFB039F310A1866F120B80E9E817C iuScriptDefLang;
$6C2AFB039F310A1866F120B80E9E817C iuSystemCurLang;
$6C2AFB039F310A1866F120B80E9E817C iuSystemDefLang;
$61CA1453517DE4AADA13867E4C53BE4C iuSystemScript;
$89014B5696B23340C5C8539B64398289 iuUnTokenTable;
$89014B5696B23340C5C8539B64398289 iuWhiteSpaceList;
$89014B5696B23340C5C8539B64398289 iuWordSelectTable;
$89014B5696B23340C5C8539B64398289 iuWordWrapTable;
$3396F92FAC0BE03A6A5A931576A5D5DF japaneseHighWord;
$A11DBB41E84C29C2A49D79FC156E77D3 k16BE555PixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k16BE565PixelFormat;
$D3F9326D8E3B9149E2DE963C927C94B4 k16BitAccess;
$18BF411237F175ABCD4A1D90A0B1F6B7 k16BitBigEndianFormat;
$956E0F8638627E2D7345301BF56E48D3 k16BitCardErr;
$56EDAB68D3F8BADD4C371F358805869C k16BitIn;
$18BF411237F175ABCD4A1D90A0B1F6B7 k16BitLittleEndianFormat;
$98D2C25E106415488733AF0F895912D7 k16BitNativeEndianFormat;
$98D2C25E106415488733AF0F895912D7 k16BitNonNativeEndianFormat;
$56EDAB68D3F8BADD4C371F358805869C k16BitOut;
$1FF93887DAB66F639B85849B1ED1B48F k16LE5551PixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k16LE555PixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k16LE565PixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k1IndexedGrayPixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k1MonochromePixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k24BGRPixelFormat;
$18BF411237F175ABCD4A1D90A0B1F6B7 k24BitFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k24RGBPixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k2IndexedGrayPixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k2IndexedPixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k2vuyPixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k32ABGRPixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k32ARGBPixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F k32BGRAPixelFormat;
$D3F9326D8E3B9149E2DE963C927C94B4 k32BitAccess;
$18BF411237F175ABCD4A1D90A0B1F6B7 k32BitFormat;
$0727C0C73D84B5A41817ECFAE9A395A4 k32BitHeap;
$18BF411237F175ABCD4A1D90A0B1F6B7 k32BitLittleEndianFormat;
$1FF93887DAB66F639B85849B1ED1B48F k32RGBAPixelFormat;
$9F8FC170A2058B1BE0534DB43DF06411 k48BitAddrLength;
$A11DBB41E84C29C2A49D79FC156E77D3 k4IndexedGrayPixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k4IndexedPixelFormat;
$0575E16F1A2D49BAD32039706322F417 k68kInterruptLevelMask;
$643200B311F6AFFAE2694CDA18CB8ED2 k8022BasicAddressLength;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 k8022BasicHeaderLength;
$9F8FC170A2058B1BE0534DB43DF06411 k8022DLSAPLength;
$9F8FC170A2058B1BE0534DB43DF06411 k8022GlobalSAP;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 k8022SAPLength;
$643200B311F6AFFAE2694CDA18CB8ED2 k8022SNAPAddressLength;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 k8022SNAPHeaderLength;
$9F8FC170A2058B1BE0534DB43DF06411 k8022SNAPLength;
$D3F9326D8E3B9149E2DE963C927C94B4 k8BitAccess;
$18BF411237F175ABCD4A1D90A0B1F6B7 k8BitOffsetBinaryFormat;
$56EDAB68D3F8BADD4C371F358805869C k8BitRawIn;
$56EDAB68D3F8BADD4C371F358805869C k8BitRawOut;
$56EDAB68D3F8BADD4C371F358805869C k8BitTwosIn;
$56EDAB68D3F8BADD4C371F358805869C k8BitTwosOut;
$A11DBB41E84C29C2A49D79FC156E77D3 k8IndexedGrayPixelFormat;
$A11DBB41E84C29C2A49D79FC156E77D3 k8IndexedPixelFormat;
$E0A9F79CCAA62BC2F853851A20536E47 kAEAND;
$5946B9DECF101F624185137FE626359C kAEAbout;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEActivate;
$5946B9DECF101F624185137FE626359C kAEAfter;
$5946B9DECF101F624185137FE626359C kAEAliasSelection;
$E0A9F79CCAA62BC2F853851A20536E47 kAEAll;
$5946B9DECF101F624185137FE626359C kAEAllCaps;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEAlwaysInteract;
$42B71C273E21D8D840184BF711CC647F kAEAnswer;
$E0A9F79CCAA62BC2F853851A20536E47 kAEAny;
$1BACD87E698DC78D58692B84D16F77B5 kAEAppearanceChanged;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEApplicationClass;
$42B71C273E21D8D840184BF711CC647F kAEApplicationDied;
$5946B9DECF101F624185137FE626359C kAEArrowAtEnd;
$5946B9DECF101F624185137FE626359C kAEArrowAtStart;
$5946B9DECF101F624185137FE626359C kAEArrowBothEnds;
$97CDF0D76A1C71836305147E643188E5 kAEAsk;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEAutoDown;
$97CDF0D76A1C71836305147E643188E5 kAEBefore;
$97CDF0D76A1C71836305147E643188E5 kAEBeginTransaction;
$97CDF0D76A1C71836305147E643188E5 kAEBeginning;
$97CDF0D76A1C71836305147E643188E5 kAEBeginsWith;
$97CDF0D76A1C71836305147E643188E5 kAEBold;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAECanInteract;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAECanSwitchLayer;
$E2D9E1F60BCF6091AA345214E7769BD1 kAECase;
$920BC98E694AE0E52BA97E93DF26E7E3 kAECaseConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kAECaseIgnoreMask;
$97CDF0D76A1C71836305147E643188E5 kAECaseSensEquals;
$97CDF0D76A1C71836305147E643188E5 kAECentered;
$97CDF0D76A1C71836305147E643188E5 kAEChangeView;
$93A6E636FCE8515564883382C95B02F9 kAECleanUp;
$97CDF0D76A1C71836305147E643188E5 kAEClone;
$97CDF0D76A1C71836305147E643188E5 kAEClose;
$396E5D5C35075BE4F59EA56CCB4944B5 kAECommandClass;
$97CDF0D76A1C71836305147E643188E5 kAECondensed;
$97CDF0D76A1C71836305147E643188E5 kAEContains;
$97CDF0D76A1C71836305147E643188E5 kAECopy;
$97CDF0D76A1C71836305147E643188E5 kAECoreSuite;
$97CDF0D76A1C71836305147E643188E5 kAECountElements;
$97CDF0D76A1C71836305147E643188E5 kAECreateElement;
$97CDF0D76A1C71836305147E643188E5 kAECreatePublisher;
$97CDF0D76A1C71836305147E643188E5 kAECut;
$318FEE3BE517F02C6247902680864AA2 kAEDataArray;
$E2655122710AC3F0D8848A935F04234F kAEDatabaseSuite;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEDeactivate;
$C85304F10C6CF22C42466B17B9F5F272 kAEDebugPOSTHeader;
$C85304F10C6CF22C42466B17B9F5F272 kAEDebugReplyHeader;
$C85304F10C6CF22C42466B17B9F5F272 kAEDebugXMLDebugAll;
$C85304F10C6CF22C42466B17B9F5F272 kAEDebugXMLRequest;
$C85304F10C6CF22C42466B17B9F5F272 kAEDebugXMLResponse;
$81302A1F099C3ECCAA87F34B5DD60C66 kAEDefaultTimeout;
$97CDF0D76A1C71836305147E643188E5 kAEDelete;
$318FEE3BE517F02C6247902680864AA2 kAEDescArray;
$EF908ADC44F0E43E1CDC0C1539ADD99E kAEDescListFactorNone;
$EF908ADC44F0E43E1CDC0C1539ADD99E kAEDescListFactorType;
$EF908ADC44F0E43E1CDC0C1539ADD99E kAEDescListFactorTypeAndSize;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEDiacritic;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEDiacriticConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEDiacriticIgnoreMask;
$AF19F49219DE0DDEBB831BA538354156 kAEDirectCall;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEDiskEvent;
$50CFE87F485DE565167C6F999D1C06C1 kAEDisplayNotice;
$50CFE87F485DE565167C6F999D1C06C1 kAEDisplaySummary;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEDoNotIgnoreHandler;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEDoObjectsExist;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEDoScript;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEDontDisposeOnResume;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEDontExecute;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEDontReconnect;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEDontRecord;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEDown;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEDrag;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEDuplicateSelection;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEEditGraphic;
$93A6E636FCE8515564883382C95B02F9 kAEEject;
$93A6E636FCE8515564883382C95B02F9 kAEEmpty;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEEmptyTrash;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEEnd;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEEndTransaction;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEEndsWith;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEEquals;
$93A6E636FCE8515564883382C95B02F9 kAEErase;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEExpanded;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEExpansion;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEExpansionConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEExpansionIgnoreMask;
$8B45090A886AD5148A7928FDD00332FF kAEFalse;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEFast;
$6CACACC7823B8B27C19318704F85B0AF kAEFetchURL;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEFinderEvents;
$B7C6122967B23758D95BCCA87E79F009 kAEFinderSuite;
$E0A9F79CCAA62BC2F853851A20536E47 kAEFirst;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEFormulaProtect;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEFullyJustified;
$93A6E636FCE8515564883382C95B02F9 kAEGestalt;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEGetClassInfo;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEGetData;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEGetDataSize;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEGetEventInfo;
$AECFB0BDA5B2BE96B3114767EF219D1C kAEGetInfoSelection;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEGetPrivilegeSelection;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEGetSuiteInfo;
$6CACACC7823B8B27C19318704F85B0AF kAEGetURL;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEGreaterThan;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEGreaterThanEquals;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEGrow;
$26403436385C29F2F44CEC730D979A93 kAEHTTPProxyHostAttr;
$26403436385C29F2F44CEC730D979A93 kAEHTTPProxyPortAttr;
$30A271533B16FBF92BD618DE28754DC0 kAEHandleArray;
$169EEFEA975624D263180E82654D67B6 kAEHandleSimpleRanges;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEHiQuality;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEHidden;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEHighLevel;
$A6F094D8DDA1C0CFC8D47288B8EC0B6F kAEHighPriority;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEHyphens;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEHyphensConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEHyphensIgnoreMask;
$169EEFEA975624D263180E82654D67B6 kAEIDoMarking;
$169EEFEA975624D263180E82654D67B6 kAEIDoMinimum;
$169EEFEA975624D263180E82654D67B6 kAEIDoWhose;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISAction;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISActionPath;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISClientAddress;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISClientIP;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISContentType;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISFromUser;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISFullRequest;
$22A25750DF33AE2059B3CB8484455106 kAEISGetURL;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISHTTPSearchArgs;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISMethod;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISPassword;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISPostArgs;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISReferrer;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISScriptName;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISServerName;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISServerPort;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISUserAgent;
$0A423D165B02998E3D5C7E472A99E7F5 kAEISUserName;
$DB9ED05A929C3E160D07F6ABD181A14D kAEISWebStarSuite;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEIgnoreAppEventHandler;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEIgnoreAppPhacHandler;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEIgnoreSysEventHandler;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEIgnoreSysPhacHandler;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEImageGraphic;
$53EB216AB947E6B330A0658EF1BB8D1F kAEInfo;
$C26E52BFBA74F5A09E6F62F9AB0B816D kAEIngoreBuiltInEventHandler;
$03A9CB41A6D002F0D99EF78E8A49E6DD kAEInteractWithAll;
$03A9CB41A6D002F0D99EF78E8A49E6DD kAEInteractWithLocal;
$03A9CB41A6D002F0D99EF78E8A49E6DD kAEInteractWithSelf;
$93A6E636FCE8515564883382C95B02F9 kAEInterceptOpen;
$DB9ED05A929C3E160D07F6ABD181A14D kAEInternetSuite;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEIsUniform;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEItalic;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEKataHiragana;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEKeyClass;
$318FEE3BE517F02C6247902680864AA2 kAEKeyDescArray;
$9C778FD5D6646D5373256D4EDF767D7C kAEKeyDown;
$E0A9F79CCAA62BC2F853851A20536E47 kAELast;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAELeftJustified;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAELessThan;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAELessThanEquals;
$AF19F49219DE0DDEBB831BA538354156 kAELocalProcess;
$BBFB8D1E3896AABD7508EF3F327F995D kAELogOut;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAELowercase;
$863A608EACAC6449DCEA0C776649C1AF kAEMacEmergencyShutdown;
$863A608EACAC6449DCEA0C776649C1AF kAEMacEmergencySleep;
$863A608EACAC6449DCEA0C776649C1AF kAEMacLowPowerSaveData;
$863A608EACAC6449DCEA0C776649C1AF kAEMacPowerMgtEvt;
$863A608EACAC6449DCEA0C776649C1AF kAEMacToWake;
$53EB216AB947E6B330A0658EF1BB8D1F kAEMain;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEMakeObjectsVisible;
$9C778FD5D6646D5373256D4EDF767D7C kAEMenuClass;
$9C778FD5D6646D5373256D4EDF767D7C kAEMenuSelect;
$E0A9F79CCAA62BC2F853851A20536E47 kAEMiddle;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEMiscStandards;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEModifiable;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEMouseClass;
$9C778FD5D6646D5373256D4EDF767D7C kAEMouseDown;
$9C778FD5D6646D5373256D4EDF767D7C kAEMouseDownInBack;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAEMove;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEMoved;
$E0A9F79CCAA62BC2F853851A20536E47 kAENOT;
$396E5D5C35075BE4F59EA56CCB4944B5 kAENavigationKey;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAENeverInteract;
$E0A9F79CCAA62BC2F853851A20536E47 kAENext;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAENo;
$8E088D1161B66E8C5A08A9EA5FE8F516 kAENoArrow;
$1BA3024EED16D569A5FE648C5844F21C kAENoDispatch;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAENoReply;
$CE3C2C324EA67431ABD917A3727F2AB6 kAENonmodifiable;
$A6F094D8DDA1C0CFC8D47288B8EC0B6F kAENormalPriority;
$9CC66BF7975FE6367B2A237D6871AB84 kAENotifyRecording;
$9CC66BF7975FE6367B2A237D6871AB84 kAENotifyStartRecording;
$9CC66BF7975FE6367B2A237D6871AB84 kAENotifyStopRecording;
$396E5D5C35075BE4F59EA56CCB4944B5 kAENullEvent;
$E0A9F79CCAA62BC2F853851A20536E47 kAEOR;
$71C9229A7140DAC1D8127E2331DEB5F7 kAEOSAXSizeResource;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEOpen;
$42B71C273E21D8D840184BF711CC647F kAEOpenApplication;
$42B71C273E21D8D840184BF711CC647F kAEOpenDocuments;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEOpenSelection;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEOutline;
$318FEE3BE517F02C6247902680864AA2 kAEPackedArray;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPageSetup;
$169EEFEA975624D263180E82654D67B6 kAEPassSubDescs;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPaste;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPlain;
$E0A9F79CCAA62BC2F853851A20536E47 kAEPrevious;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPrint;
$42B71C273E21D8D840184BF711CC647F kAEPrintDocuments;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPrintSelection;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPrintWindow;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEProcessNonReplyEvents;
$9C778FD5D6646D5373256D4EDF767D7C kAEPromise;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEPunctuation;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEPunctuationConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEPunctuationIgnoreMask;
$93A6E636FCE8515564883382C95B02F9 kAEPutAway;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEPutAwaySelection;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDAdMax;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDAdMin;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDAddOver;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDAddPin;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDBic;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDBlend;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDCopy;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDNotBic;
$CE3C2C324EA67431ABD917A3727F2AB6 kAEQDNotCopy;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDNotOr;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDNotXor;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDOr;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDSubOver;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDSubPin;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDSupplementalSuite;
$EC6CC302732143F5E95DD13F45206CB0 kAEQDXor;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEQueueReply;
$EC6CC302732143F5E95DD13F45206CB0 kAEQuickdrawSuite;
$EC6CC302732143F5E95DD13F45206CB0 kAEQuitAll;
$42B71C273E21D8D840184BF711CC647F kAEQuitApplication;
$5D855D395EFFF84D244F4A9ACDB29E4B kAERPCClass;
$396E5D5C35075BE4F59EA56CCB4944B5 kAERawKey;
$BBFB8D1E3896AABD7508EF3F327F995D kAEReallyLogOut;
$93A6E636FCE8515564883382C95B02F9 kAERebuildDesktopDB;
$EC6CC302732143F5E95DD13F45206CB0 kAERedo;
$EC6CC302732143F5E95DD13F45206CB0 kAERegular;
$AF19F49219DE0DDEBB831BA538354156 kAERemoteProcess;
$EC6CC302732143F5E95DD13F45206CB0 kAEReopenApplication;
$EC6CC302732143F5E95DD13F45206CB0 kAEReplace;
$EC6CC302732143F5E95DD13F45206CB0 kAERequiredSuite;
$9C778FD5D6646D5373256D4EDF767D7C kAEResized;
$169EEFEA975624D263180E82654D67B6 kAEResolveNestedLists;
$EC6CC302732143F5E95DD13F45206CB0 kAERestart;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEResume;
$EC6CC302732143F5E95DD13F45206CB0 kAERevealSelection;
$EC6CC302732143F5E95DD13F45206CB0 kAERevert;
$EC6CC302732143F5E95DD13F45206CB0 kAERightJustified;
$5D855D395EFFF84D244F4A9ACDB29E4B kAESOAPScheme;
$AF19F49219DE0DDEBB831BA538354156 kAESameProcess;
$EC6CC302732143F5E95DD13F45206CB0 kAESave;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEScrapEvent;
$71C9229A7140DAC1D8127E2331DEB5F7 kAEScriptingSizeResource;
$EC6CC302732143F5E95DD13F45206CB0 kAESelect;
$EC6CC302732143F5E95DD13F45206CB0 kAESetData;
$80B4F5118EAF32C095389BC3F899CD14 kAESetPosition;
$80B4F5118EAF32C095389BC3F899CD14 kAEShadow;
$5D855D395EFFF84D244F4A9ACDB29E4B kAESharedScriptHandler;
$53EB216AB947E6B330A0658EF1BB8D1F kAESharing;
$80B4F5118EAF32C095389BC3F899CD14 kAEShowClipboard;
$42B71C273E21D8D840184BF711CC647F kAEShowPreferences;
$BBFB8D1E3896AABD7508EF3F327F995D kAEShowRestartDialog;
$BBFB8D1E3896AABD7508EF3F327F995D kAEShowShutdownDialog;
$80B4F5118EAF32C095389BC3F899CD14 kAEShutDown;
$80B4F5118EAF32C095389BC3F899CD14 kAESleep;
$80B4F5118EAF32C095389BC3F899CD14 kAESmallCaps;
$E2D9E1F60BCF6091AA345214E7769BD1 kAESmallKana;
$1BACD87E698DC78D58692B84D16F77B5 kAESmallSystemFontChanged;
$8C929CB31F1692EFBA7170B61C34113E kAESocks4Protocol;
$8C929CB31F1692EFBA7170B61C34113E kAESocks5Protocol;
$360EFBF6D019B7E4E7D3247A6DC2D386 kAESocksHostAttr;
$360EFBF6D019B7E4E7D3247A6DC2D386 kAESocksPasswordAttr;
$360EFBF6D019B7E4E7D3247A6DC2D386 kAESocksPortAttr;
$360EFBF6D019B7E4E7D3247A6DC2D386 kAESocksProxyAttr;
$360EFBF6D019B7E4E7D3247A6DC2D386 kAESocksUserAttr;
$E2655122710AC3F0D8848A935F04234F kAESort;
$80B4F5118EAF32C095389BC3F899CD14 kAESpecialClassProperties;
$55387A2B2635198D2569AD0E51F5A4F6 kAESpeechDetected;
$55387A2B2635198D2569AD0E51F5A4F6 kAESpeechDone;
$6964838E798607C0EDA840D77B701D15 kAESpeechSuite;
$9CC66BF7975FE6367B2A237D6871AB84 kAEStartRecording;
$9CC66BF7975FE6367B2A237D6871AB84 kAEStopRecording;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEStoppedMoving;
$80B4F5118EAF32C095389BC3F899CD14 kAEStrikethrough;
$80B4F5118EAF32C095389BC3F899CD14 kAESubscript;
$80B4F5118EAF32C095389BC3F899CD14 kAESuperscript;
$396E5D5C35075BE4F59EA56CCB4944B5 kAESuspend;
$93A6E636FCE8515564883382C95B02F9 kAESync;
$50CFE87F485DE565167C6F999D1C06C1 kAESystemConfigNotice;
$1BACD87E698DC78D58692B84D16F77B5 kAESystemFontChanged;
$80B4F5118EAF32C095389BC3F899CD14 kAETableSuite;
$71C9229A7140DAC1D8127E2331DEB5F7 kAETerminologyExtension;
$80B4F5118EAF32C095389BC3F899CD14 kAETextSuite;
$9ADC9738F66FE076CD9C8DC7AF3C3EB2 kAEThemeSwitch;
$80B4F5118EAF32C095389BC3F899CD14 kAETransactionTerminated;
$8B45090A886AD5148A7928FDD00332FF kAETrue;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTApostrophe;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTChangesState;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTDirectParamIsReference;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTEnumListIsExclusive;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTEnumerated;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTEnumsAreTypes;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTFeminine;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTHasReturningParam;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTMasculine;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTNotDirectParamIsTarget;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTOptional;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTParamIsReference;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTParamIsTarget;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTPlural;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTPropertyIsReference;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTReadWrite;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTReplyIsReference;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTTightBindingFunction;
$3EB10D16C5D8F69377D801135A5AE760 kAEUTlistOfItems;
$80B4F5118EAF32C095389BC3F899CD14 kAEUnderline;
$80B4F5118EAF32C095389BC3F899CD14 kAEUndo;
$AF19F49219DE0DDEBB831BA538354156 kAEUnknownSource;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEUp;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEUpdate;
$26403436385C29F2F44CEC730D979A93 kAEUseHTTPProxyAttr;
$169EEFEA975624D263180E82654D67B6 kAEUseRelativeIterators;
$360EFBF6D019B7E4E7D3247A6DC2D386 kAEUseSocksAttr;
$1BA3024EED16D569A5FE648C5844F21C kAEUseStandardDispatch;
$71C9229A7140DAC1D8127E2331DEB5F7 kAEUserTerminology;
$1BACD87E698DC78D58692B84D16F77B5 kAEViewsFontChanged;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEVirtualKey;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEWaitReply;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEWakeUpEvent;
$9916EE4C0C3565C3D7B1F4265BD3FB17 kAEWantReceipt;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEWhiteSpace;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEWhiteSpaceConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kAEWhiteSpaceIgnoreMask;
$80B4F5118EAF32C095389BC3F899CD14 kAEWholeWordEquals;
$396E5D5C35075BE4F59EA56CCB4944B5 kAEWindowClass;
$5D855D395EFFF84D244F4A9ACDB29E4B kAEXMLRPCScheme;
$80B4F5118EAF32C095389BC3F899CD14 kAEYes;
$E2D9E1F60BCF6091AA345214E7769BD1 kAEZenkakuHankaku;
$80B4F5118EAF32C095389BC3F899CD14 kAEZoom;
$B5635949CFD9EB04670D9FD88A13B13F kAEZoomIn;
$B5635949CFD9EB04670D9FD88A13B13F kAEZoomOut;
$719AA6A0FEC928B7F88346534552F52B kAFPExtendedFlagsAlternateAddressMask;
$6D648334E802817A93CD41CA53919B60 kAFPServerIcon;
$FC694239537F4792C712224D83165698 kAFPTagLengthDDP;
$FC694239537F4792C712224D83165698 kAFPTagLengthIP;
$FC694239537F4792C712224D83165698 kAFPTagLengthIPPort;
$6C0B6C2A1BC798C0618F0EB9EDD8B4E1 kAFPTagTypeDDP;
$6C0B6C2A1BC798C0618F0EB9EDD8B4E1 kAFPTagTypeDNS;
$6C0B6C2A1BC798C0618F0EB9EDD8B4E1 kAFPTagTypeIP;
$6C0B6C2A1BC798C0618F0EB9EDD8B4E1 kAFPTagTypeIPPort;
$16B20E4CE70AE12732E3933813D00105 kAF_ISDN;
$7A07F109118309CD0FA163F65A88A5FF kAHInternalErr;
$7A07F109118309CD0FA163F65A88A5FF kAHInternetConfigPrefErr;
$3454BBA784CA790F10B34184CE0F44E5 kAHTOCTypeDeveloper;
$3454BBA784CA790F10B34184CE0F44E5 kAHTOCTypeUser;
$CE00222D1B4C9409943A031D61C06589 kALMDeferSwitchErr;
$CE00222D1B4C9409943A031D61C06589 kALMDuplicateModuleErr;
$CE00222D1B4C9409943A031D61C06589 kALMGroupNotFoundErr;
$CE00222D1B4C9409943A031D61C06589 kALMInstallationErr;
$CE00222D1B4C9409943A031D61C06589 kALMInternalErr;
$F4325FB594CAAD0EB945037BF6AC8047 kALMLocationNotFoundErr;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kALMLocationsFolderType;
$CE00222D1B4C9409943A031D61C06589 kALMModuleCommunicationErr;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kALMModulesFolderType;
$CE00222D1B4C9409943A031D61C06589 kALMNoSuchModuleErr;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kALMPreferencesFolderType;
$CE00222D1B4C9409943A031D61C06589 kALMRebootFlagsLevelErr;
$18BF411237F175ABCD4A1D90A0B1F6B7 kALawCompression;
$111F8E47955483A26B366F9302FAA868 kARARouterDisconnected;
$D9EC2DA240CDB088BA559E882EDCB0FE kARARouterOnline;
$7C73306EF46C31DD2C31A0E8749AE802 kARMMountVol;
$7C73306EF46C31DD2C31A0E8749AE802 kARMMultVols;
$7C73306EF46C31DD2C31A0E8749AE802 kARMNoUI;
$7C73306EF46C31DD2C31A0E8749AE802 kARMSearch;
$7C73306EF46C31DD2C31A0E8749AE802 kARMSearchMore;
$7C73306EF46C31DD2C31A0E8749AE802 kARMSearchRelFirst;
$7C73306EF46C31DD2C31A0E8749AE802 kARMTryFileIDFirst;
$B448355BF5EDB617E62CAE84327D7C60 kASAdd;
$EC2A64EB281DF1377656F93D45BC5129 kASAnd;
$B66336CDD3FB7BACAE93B982EED235B4 kASAppleScriptSuite;
$4693F9F93A5130D57E44F485B4108586 kASCSubType;
$B448355BF5EDB617E62CAE84327D7C60 kASComesAfter;
$B448355BF5EDB617E62CAE84327D7C60 kASComesBefore;
$B66336CDD3FB7BACAE93B982EED235B4 kASComment;
$1717D318042FF44418DB68821BE4AE0D kASCommentEvent;
$B448355BF5EDB617E62CAE84327D7C60 kASConcatenate;
$E2D9E1F60BCF6091AA345214E7769BD1 kASConsiderReplies;
$920BC98E694AE0E52BA97E93DF26E7E3 kASConsiderRepliesConsiderMask;
$920BC98E694AE0E52BA97E93DF26E7E3 kASConsiderRepliesIgnoreMask;
$B448355BF5EDB617E62CAE84327D7C60 kASContains;
$8B45090A886AD5148A7928FDD00332FF kASCurrentApplication;
$633A55105AF52592BCFB52C042759D6B kASDefaultMaxHeapSize;
$633A55105AF52592BCFB52C042759D6B kASDefaultMaxStackSize;
$633A55105AF52592BCFB52C042759D6B kASDefaultMinHeapSize;
$633A55105AF52592BCFB52C042759D6B kASDefaultMinStackSize;
$633A55105AF52592BCFB52C042759D6B kASDefaultPreferredHeapSize;
$633A55105AF52592BCFB52C042759D6B kASDefaultPreferredStackSize;
$B448355BF5EDB617E62CAE84327D7C60 kASDivide;
$B448355BF5EDB617E62CAE84327D7C60 kASEndsWith;
$B448355BF5EDB617E62CAE84327D7C60 kASEqual;
$42A44C027C51BF81ADE897BA007A09A5 kASErrorEventCode;
$B448355BF5EDB617E62CAE84327D7C60 kASGreaterThan;
$B448355BF5EDB617E62CAE84327D7C60 kASGreaterThanOrEqual;
$352F0CC169D7C257D0C240A4BD1C1389 kASHasOpenHandler;
$421AAECC2A305822C1138F7F55676B83 kASInitializeEventCode;
$B66336CDD3FB7BACAE93B982EED235B4 kASLaunchEvent;
$B448355BF5EDB617E62CAE84327D7C60 kASLessThan;
$B448355BF5EDB617E62CAE84327D7C60 kASLessThanOrEqual;
$5E879841A9E7F0D0A6CE119A872ABAD5 kASMagicEndTellEvent;
$5E879841A9E7F0D0A6CE119A872ABAD5 kASMagicTellEvent;
$B448355BF5EDB617E62CAE84327D7C60 kASMultiply;
$EC2A64EB281DF1377656F93D45BC5129 kASNegate;
$EC2A64EB281DF1377656F93D45BC5129 kASNot;
$B448355BF5EDB617E62CAE84327D7C60 kASNotEqual;
$889CF0C98C34ACB09B24F9996D867BE6 kASNumberOfSourceStyles;
$EC2A64EB281DF1377656F93D45BC5129 kASOr;
$B448355BF5EDB617E62CAE84327D7C60 kASPower;
$B66336CDD3FB7BACAE93B982EED235B4 kASPrepositionalSubroutine;
$B448355BF5EDB617E62CAE84327D7C60 kASQuotient;
$B448355BF5EDB617E62CAE84327D7C60 kASRemainder;
$B66336CDD3FB7BACAE93B982EED235B4 kASScriptEditorSuite;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetAppTerminology;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetAppTerminologyObsolete;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetHandler;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetHandlerNames;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetHandlerObsolete;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetProperty;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetPropertyNames;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetPropertyObsolete;
$4BA57DA2F2441E3EBAEEC6BB7BC51CFB kASSelectGetSourceStyleNames;
$4BA57DA2F2441E3EBAEEC6BB7BC51CFB kASSelectGetSourceStyles;
$472A7CD1D0C76B55E800ECB06062708D kASSelectGetSysTerminology;
$4BA57DA2F2441E3EBAEEC6BB7BC51CFB kASSelectInit;
$472A7CD1D0C76B55E800ECB06062708D kASSelectSetHandler;
$472A7CD1D0C76B55E800ECB06062708D kASSelectSetHandlerObsolete;
$472A7CD1D0C76B55E800ECB06062708D kASSelectSetProperty;
$472A7CD1D0C76B55E800ECB06062708D kASSelectSetPropertyObsolete;
$4BA57DA2F2441E3EBAEEC6BB7BC51CFB kASSelectSetSourceStyles;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleApplicationKeyword;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleComment;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleLanguageKeyword;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleLiteral;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleNormalText;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleObjectSpecifier;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleUncompiledText;
$889CF0C98C34ACB09B24F9996D867BE6 kASSourceStyleUserSymbol;
$1717D318042FF44418DB68821BE4AE0D kASStartLogEvent;
$B448355BF5EDB617E62CAE84327D7C60 kASStartsWith;
$1717D318042FF44418DB68821BE4AE0D kASStopLogEvent;
$B66336CDD3FB7BACAE93B982EED235B4 kASSubroutineEvent;
$B448355BF5EDB617E62CAE84327D7C60 kASSubtract;
$B66336CDD3FB7BACAE93B982EED235B4 kASTypeNamesSuite;
$9F707DA49AEE530950ED92E064F04046 kATADriverSignature;
$9F707DA49AEE530950ED92E064F04046 kATAPIDriverSignature;
$BEF7A8B9ADEDBF6667287C3200A729C9 kATSBoldQDStretch;
$8C048F35019ADD244B798C7B4217C80F kATSCubicCurveType;
$4F72F593DEA106F0BB77253235ACDF0F kATSDeletedGlyphcode;
$10CA0AA7DA46E7950699BB60B139A379 kATSFlatDataUstlCurrentVersion;
$10CA0AA7DA46E7950699BB60B139A379 kATSFlatDataUstlVersion0;
$10CA0AA7DA46E7950699BB60B139A379 kATSFlatDataUstlVersion1;
$10CA0AA7DA46E7950699BB60B139A379 kATSFlatDataUstlVersion2;
$284DE2E2B03212944C4F3C2277B95975 kATSFlattenedFontSpecifierRawNameData;
$C1F3710B46FD360EABEF2FDBE40F9F9F kATSFontContainerRefUnspecified;
$45E87FA214E235810FE8E2576C1084E9 kATSFontContextGlobal;
$45E87FA214E235810FE8E2576C1084E9 kATSFontContextLocal;
$45E87FA214E235810FE8E2576C1084E9 kATSFontContextUnspecified;
$C1F3710B46FD360EABEF2FDBE40F9F9F kATSFontFamilyRefUnspecified;
$1F9EB33F4C1ABBE56BF54BEBEF518F44 kATSFontFilterCurrentVersion;
ATSFontFilterSelector kATSFontFilterSelectorFontApplierFunction;
ATSFontFilterSelector kATSFontFilterSelectorFontFamily;
ATSFontFilterSelector kATSFontFilterSelectorFontFamilyApplierFunction;
ATSFontFilterSelector kATSFontFilterSelectorGeneration;
ATSFontFilterSelector kATSFontFilterSelectorUnspecified;
$68A8C66273EA3E59BC2134E876BEC9CC kATSFontFormatUnspecified;
ATSFontNotifyAction kATSFontNotifyActionDirectoriesChanged;
ATSFontNotifyAction kATSFontNotifyActionFontsChanged;
ATSFontNotifyOption kATSFontNotifyOptionDefault;
ATSFontNotifyOption kATSFontNotifyOptionReceiveWhileSuspended;
$C1F3710B46FD360EABEF2FDBE40F9F9F kATSFontRefUnspecified;
$C1F3710B46FD360EABEF2FDBE40F9F9F kATSGenerationUnspecified;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoAppleReserved;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoByteSizeMask;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoHasImposedWidth;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoIsAttachment;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoIsLTHanger;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoIsRBHanger;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoIsWhiteSpace;
$F5874BF60615D5ED9086F14B83227E84 kATSGlyphInfoTerminatorGlyph;
$6690C5A38BCBF3C8B1B2DBCC8D1D6A01 kATSInvalidFontAccess;
$6690C5A38BCBF3C8B1B2DBCC8D1D6A01 kATSInvalidFontContainerAccess;
$6690C5A38BCBF3C8B1B2DBCC8D1D6A01 kATSInvalidFontFamilyAccess;
$6690C5A38BCBF3C8B1B2DBCC8D1D6A01 kATSInvalidFontTableAccess;
$BEF7A8B9ADEDBF6667287C3200A729C9 kATSItalicQDSkew;
$6690C5A38BCBF3C8B1B2DBCC8D1D6A01 kATSIterationCompleted;
$6690C5A38BCBF3C8B1B2DBCC8D1D6A01 kATSIterationScopeModified;
$EE975E7564AE557B80F21579EE6F144B kATSLineAppleReserved;
$EE975E7564AE557B80F21579EE6F144B kATSLineApplyAntiAliasing;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAllBaselineAdjustments;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAllGlyphMorphing;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAllJustification;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAllKerningAdjustments;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAllLayoutOperations;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAllTrackingAdjustments;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableAutoAdjustDisplayPos;
$EE975E7564AE557B80F21579EE6F144B kATSLineDisableNegativeJustification;
$EE975E7564AE557B80F21579EE6F144B kATSLineFillOutToWidth;
$EE975E7564AE557B80F21579EE6F144B kATSLineFractDisable;
$EE975E7564AE557B80F21579EE6F144B kATSLineHasNoHangers;
$EE975E7564AE557B80F21579EE6F144B kATSLineHasNoOpticalAlignment;
$EE975E7564AE557B80F21579EE6F144B kATSLineIgnoreFontLeading;
$EE975E7564AE557B80F21579EE6F144B kATSLineImposeNoAngleForEnds;
$EE975E7564AE557B80F21579EE6F144B kATSLineIsDisplayOnly;
$EE975E7564AE557B80F21579EE6F144B kATSLineKeepSpacesOutOfMargin;
$EE975E7564AE557B80F21579EE6F144B kATSLineLastNoJustification;
$EE975E7564AE557B80F21579EE6F144B kATSLineNoAntiAliasing;
$EE975E7564AE557B80F21579EE6F144B kATSLineNoLayoutOptions;
$EE975E7564AE557B80F21579EE6F144B kATSLineNoSpecialJustification;
$EE975E7564AE557B80F21579EE6F144B kATSLineTabAdjustEnabled;
$EE975E7564AE557B80F21579EE6F144B kATSLineUseDeviceMetrics;
$EE975E7564AE557B80F21579EE6F144B kATSLineUseQDRendering;
$5E044D4409574662170B5B55BAB61AFC kATSNoTracking;
$BB3EAA05806C0A6018E6C19C0342F448 kATSOptionFlagsComposeFontPostScriptName;
$BB3EAA05806C0A6018E6C19C0342F448 kATSOptionFlagsDefault;
$78F25B7C7BE015A64E6B2248E2CBAE7B kATSOptionFlagsDefaultScope;
$78F25B7C7BE015A64E6B2248E2CBAE7B kATSOptionFlagsDoNotNotify;
$092D5B86DE2298C2BBF52BB67574D92F kATSOptionFlagsIterateByPrecedenceMask;
$78F25B7C7BE015A64E6B2248E2CBAE7B kATSOptionFlagsIterationScopeMask;
$78F25B7C7BE015A64E6B2248E2CBAE7B kATSOptionFlagsProcessSubdirectories;
$78F25B7C7BE015A64E6B2248E2CBAE7B kATSOptionFlagsRestrictedScope;
$78F25B7C7BE015A64E6B2248E2CBAE7B kATSOptionFlagsUnRestrictedScope;
$BB3EAA05806C0A6018E6C19C0342F448 kATSOptionFlagsUseDataFork;
$BB3EAA05806C0A6018E6C19C0342F448 kATSOptionFlagsUseDataForkAsResourceFork;
$BB3EAA05806C0A6018E6C19C0342F448 kATSOptionFlagsUseResourceFork;
$8C048F35019ADD244B798C7B4217C80F kATSOtherCurveType;
$8C048F35019ADD244B798C7B4217C80F kATSQuadCurveType;
ATSFontQueryMessageID kATSQueryActivateFontMessage;
$BEF7A8B9ADEDBF6667287C3200A729C9 kATSRadiansFactor;
$7BB8D7F8775098D3B06D46DAD7FB5156 kATSStyleAppleReserved;
$7BB8D7F8775098D3B06D46DAD7FB5156 kATSStyleApplyAntiAliasing;
$7BB8D7F8775098D3B06D46DAD7FB5156 kATSStyleApplyHints;
$7BB8D7F8775098D3B06D46DAD7FB5156 kATSStyleNoAntiAliasing;
$7BB8D7F8775098D3B06D46DAD7FB5156 kATSStyleNoHinting;
$7BB8D7F8775098D3B06D46DAD7FB5156 kATSStyleNoOptions;
$34B9BBB49DD1E66D12B76611DC925692 kATSUAfterWithStreamShiftTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUAscentTag;
$1C664F0EF9BBB4E09C6518995E0C8ED9 kATSUBackgroundCallback;
$1C664F0EF9BBB4E09C6518995E0C8ED9 kATSUBackgroundColor;
$F49EAFEB2259A8CF0B654D54B424FA3D kATSUBadStreamErr;
$34B9BBB49DD1E66D12B76611DC925692 kATSUBaselineClassTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUBeforeWithStreamShiftTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUBusyObjectErr;
$FD8E29B2ADDD525ECF0D85B532B52224 kATSUByCharacter;
$FD8E29B2ADDD525ECF0D85B532B52224 kATSUByCharacterCluster;
$FD8E29B2ADDD525ECF0D85B532B52224 kATSUByCluster;
$FD8E29B2ADDD525ECF0D85B532B52224 kATSUByTypographicCluster;
$FD8E29B2ADDD525ECF0D85B532B52224 kATSUByWord;
$34B9BBB49DD1E66D12B76611DC925692 kATSUCGContextTag;
MACRO_kATSUCenterAlignment kATSUCenterAlignment;
$F3F11BDB14C832259CDE0D8B5C399D22 kATSUCenterTab;
$E5C001552947FBA1AF908B70FCBEDBBA kATSUClearAll;
$34B9BBB49DD1E66D12B76611DC925692 kATSUColorTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUCoordinateOverflowErr;
$34B9BBB49DD1E66D12B76611DC925692 kATSUCrossStreamShiftTag;
$E88A8D77F141548876E5FBC915F4CE52 kATSUDataStreamUnicodeStyledText;
$34B9BBB49DD1E66D12B76611DC925692 kATSUDecompositionFactorTag;
$72119861EEB86AF27B9BC93E341B410D kATSUDefaultFontFallbacks;
$34B9BBB49DD1E66D12B76611DC925692 kATSUDescentTag;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataAdvanceDeltaFixedArray;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataBaselineDeltaFixedArray;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataDeviceDeltaSInt16Array;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataLayoutRecordATSLayoutRecordCurrent;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataLayoutRecordATSLayoutRecordVersion1;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataStyleIndexUInt16Array;
$212BB253F02C4220F0882F8A63BEEC33 kATSUDirectDataStyleSettingATSUStyleSettingRefArray;
MACRO_kATSUStartAlignment kATSUEndAlignment;
$1BD1B4027C56D480579CE3BF0A93BCF6 kATSUFlattenOptionNoOptionsMask;
$34B9BBB49DD1E66D12B76611DC925692 kATSUFontMatrixTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUFontTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUFontsMatched;
$19F606EC569F36C98DFA7B562134BF40 kATSUFontsNotMatched;
$34B9BBB49DD1E66D12B76611DC925692 kATSUForceHangingTag;
$49C365EE74A1338043AC78BF2B5417CB kATSUFromTextBeginning;
MACRO_kATSUNoJustification kATSUFullJustification;
$34B9BBB49DD1E66D12B76611DC925692 kATSUGlyphSelectorTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUHangingInhibitFactorTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUImposeWidthTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidAttributeSizeErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidAttributeTagErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidAttributeValueErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidCacheErr;
$F49EAFEB2259A8CF0B654D54B424FA3D kATSUInvalidCallInsideCallbackErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidFontErr;
$F49EAFEB2259A8CF0B654D54B424FA3D kATSUInvalidFontFallbacksErr;
$F08B9C92EB28E067F9697293ADEA166F kATSUInvalidFontID;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidStyleErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidTextLayoutErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUInvalidTextRangeErr;
$34B9BBB49DD1E66D12B76611DC925692 kATSUKerningInhibitFactorTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULangRegionTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULanguageTag;
$F49EAFEB2259A8CF0B654D54B424FA3D kATSULastErr;
$72119861EEB86AF27B9BC93E341B410D kATSULastResortOnlyFallback;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationAppleReserved;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationBaselineAdjustment;
$5545023FF171D590173A11F14138FF32 kATSULayoutOperationCallbackStatusContinue;
$5545023FF171D590173A11F14138FF32 kATSULayoutOperationCallbackStatusHandled;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationJustification;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationKerningAdjustment;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationMorph;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationNone;
$34B9BBB49DD1E66D12B76611DC925692 kATSULayoutOperationOverrideTag;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationPostLayoutAdjustment;
$020AB1D9FFBBE4809F492F1D53DFA66F kATSULayoutOperationTrackingAdjustment;
$34B9BBB49DD1E66D12B76611DC925692 kATSULeadingTag;
$F3F11BDB14C832259CDE0D8B5C399D22 kATSULeftTab;
$BB8B4E8D02D950EE9C21445C40861982 kATSULeftToRightBaseDirection;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineAscentTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineBaselineValuesTag;
$19F606EC569F36C98DFA7B562134BF40 kATSULineBreakInWord;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineDescentTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineDirectionTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineFlushFactorTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineFontFallbacksTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineJustificationFactorTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineLangRegionTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineLanguageTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineLayoutOptionsTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineRotationTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineTextLocatorTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineTruncationTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSULineWidthTag;
$19F606EC569F36C98DFA7B562134BF40 kATSULowLevelErr;
$34B9BBB49DD1E66D12B76611DC925692 kATSUMaxATSUITagValue;
$34B9BBB49DD1E66D12B76611DC925692 kATSUMaxLineTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUMaxStyleTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUNoCaretAngleTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUNoCorrespondingFontErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUNoFontCmapAvailableErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUNoFontScalerAvailableErr;
MACRO_kATSUNoJustification kATSUNoJustification;
$34B9BBB49DD1E66D12B76611DC925692 kATSUNoLigatureSplitTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUNoOpticalAlignmentTag;
$C49D04D050D2CE9AD394508901971E86 kATSUNoSelector;
$34B9BBB49DD1E66D12B76611DC925692 kATSUNoSpecialJustificationTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUNoStyleRunsAssignedErr;
$19F606EC569F36C98DFA7B562134BF40 kATSUNotSetErr;
$F3F11BDB14C832259CDE0D8B5C399D22 kATSUNumberTabTypes;
$F49EAFEB2259A8CF0B654D54B424FA3D kATSUOutputBufferTooSmallErr;
$34B9BBB49DD1E66D12B76611DC925692 kATSUPriorityJustOverrideTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUQDBoldfaceTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUQDCondensedTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUQDExtendedTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUQDItalicTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUQDUnderlineTag;
$19F606EC569F36C98DFA7B562134BF40 kATSUQuickDrawTextErr;
$34B9BBB49DD1E66D12B76611DC925692 kATSURGBAlphaColorTag;
$F3F11BDB14C832259CDE0D8B5C399D22 kATSURightTab;
$BB8B4E8D02D950EE9C21445C40861982 kATSURightToLeftBaseDirection;
$72119861EEB86AF27B9BC93E341B410D kATSUSequentialFallbacksExclusive;
$72119861EEB86AF27B9BC93E341B410D kATSUSequentialFallbacksPreferred;
$34B9BBB49DD1E66D12B76611DC925692 kATSUSizeTag;
MACRO_kATSUStartAlignment kATSUStartAlignment;
$E765DE71749FEEE431F525E920DEB6C8 kATSUStronglyHorizontal;
$E765DE71749FEEE431F525E920DEB6C8 kATSUStronglyVertical;
$4D0FC009E9231EE846A8066F42A53152 kATSUStyleContainedBy;
$4D0FC009E9231EE846A8066F42A53152 kATSUStyleContains;
$4D0FC009E9231EE846A8066F42A53152 kATSUStyleEquals;
$34B9BBB49DD1E66D12B76611DC925692 kATSUStyleRenderingOptionsTag;
$34B9BBB49DD1E66D12B76611DC925692 kATSUStyleTextLocatorTag;
$4D0FC009E9231EE846A8066F42A53152 kATSUStyleUnequal;
$34B9BBB49DD1E66D12B76611DC925692 kATSUSuppressCrossKerningTag;
$49C365EE74A1338043AC78BF2B5417CB kATSUToTextEnd;
$34B9BBB49DD1E66D12B76611DC925692 kATSUTrackingTag;
$978568078CED3B05E4406AB06B1A89BA kATSUTruncFeatNoSquishing;
$978568078CED3B05E4406AB06B1A89BA kATSUTruncateEnd;
$978568078CED3B05E4406AB06B1A89BA kATSUTruncateMiddle;
$978568078CED3B05E4406AB06B1A89BA kATSUTruncateNone;
$978568078CED3B05E4406AB06B1A89BA kATSUTruncateSpecificationMask;
$978568078CED3B05E4406AB06B1A89BA kATSUTruncateStart;
$E297A63258C8472CBBCF89A2453D4DEF kATSUUnFlattenOptionNoOptionsMask;
$F49EAFEB2259A8CF0B654D54B424FA3D kATSUUnsupportedStreamFormatErr;
$E5C001552947FBA1AF908B70FCBEDBBA kATSUUseGrafPortPenLoc;
$820037641D413EFF51E5D2B7A9BCC18B kATSUUseLineControlWidth;
$34B9BBB49DD1E66D12B76611DC925692 kATSUVerticalCharacterTag;
$AA2D223BE897D71CB13B92929E16C3FC kATSUseCaretOrigins;
$AA2D223BE897D71CB13B92929E16C3FC kATSUseDeviceOrigins;
$AA2D223BE897D71CB13B92929E16C3FC kATSUseFractionalOrigins;
$5E044D4409574662170B5B55BAB61AFC kATSUseGlyphAdvance;
$5E044D4409574662170B5B55BAB61AFC kATSUseLineHeight;
$AA2D223BE897D71CB13B92929E16C3FC kATSUseOriginFlags;
$F3834A3E529760E96B4534D03D0A37FC kATalkInfoHasRouter;
$F3834A3E529760E96B4534D03D0A37FC kATalkInfoIsExtended;
$F3834A3E529760E96B4534D03D0A37FC kATalkInfoOneZone;
$D9EC2DA240CDB088BA559E882EDCB0FE kATalkRouterOnline;
$068CD43048047099F49F40DC4FF47A37 kAVDisplayHeadphoneInsert;
$068CD43048047099F49F40DC4FF47A37 kAVDisplayHeadphoneRemove;
$068CD43048047099F49F40DC4FF47A37 kAVDisplayPlainTalkInsert;
$068CD43048047099F49F40DC4FF47A37 kAVDisplayPlainTalkRemove;
$4785BED46BDF1370E4C94D4B99ABDE0E kAVLInOrder;
$D3B585116FCFE62656CDA63EC8958D5F kAVLIsLeaf;
$D3B585116FCFE62656CDA63EC8958D5F kAVLIsLeftBranch;
$D3B585116FCFE62656CDA63EC8958D5F kAVLIsRightBranch;
$D3B585116FCFE62656CDA63EC8958D5F kAVLIsTree;
$D3B585116FCFE62656CDA63EC8958D5F kAVLNullNode;
$4785BED46BDF1370E4C94D4B99ABDE0E kAVLPostOrder;
$4785BED46BDF1370E4C94D4B99ABDE0E kAVLPreOrder;
$F509982AC08FB8D24F1CB8145D1ACBB7 kAVPowerOff;
$F509982AC08FB8D24F1CB8145D1ACBB7 kAVPowerOn;
$F509982AC08FB8D24F1CB8145D1ACBB7 kAVPowerStandby;
$F509982AC08FB8D24F1CB8145D1ACBB7 kAVPowerSuspend;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorAPIDisabled;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorActionUnsupported;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorAttributeUnsupported;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorCannotComplete;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorFailure;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorIllegalArgument;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorInvalidUIElement;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorInvalidUIElementObserver;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorNoValue;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorNotImplemented;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorNotificationAlreadyRegistered;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorNotificationNotRegistered;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorNotificationUnsupported;
$65E129139CA9411A767B21CB6C41C1E6 kAXErrorSuccess;
$55C70B9EC1819C4D16EFD6E7BDEAA2CD kAXValueCFRangeType;
$55C70B9EC1819C4D16EFD6E7BDEAA2CD kAXValueCGPointType;
$55C70B9EC1819C4D16EFD6E7BDEAA2CD kAXValueCGRectType;
$55C70B9EC1819C4D16EFD6E7BDEAA2CD kAXValueCGSizeType;
$55C70B9EC1819C4D16EFD6E7BDEAA2CD kAXValueIllegalType;
$C5158E5C8936F0DF706C0A4969EDE653 kAbbrevSquaredLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kAbbrevSquaredLigaturesOnSelector;
$C61609BB0F455BF0C49EDE98D48A29D1 kAbortMsg;
$C61609BB0F455BF0C49EDE98D48A29D1 kAbortTagMsg;
$7F3E7E1AB57D7076B1F8652C10AC5339 kAcceptFunctionLevel;
$1AC1C93A58AB6CB66948DE5864455995 kAccessException;
$5B004150561D8A57B6AEE998E4910F58 kAccountKCItemAttr;
$07F30EAFE9CC2F5CF34646E5224F6B53 kActionMask;
$C0A8131AFAC7E83F0975CE809AF59F6B kActivateAndHandleClick;
$C0A8131AFAC7E83F0975CE809AF59F6B kActivateAndIgnoreClick;
$215E8D6413C3A88FB05DA22203D2FB0C kActivateConnection;
$58030CB495C0F1442001624CD349E98E kAddDisplayBit;
$6D0E186233145241771508AFE8C2C7D5 kAddKCEvent;
$39FE76983533385EB60014D19059B326 kAddKCEventMask;
$48581DA6325892AC46A0B2E89C776E96 kAddMetaDataToFinderComment;
$5B004150561D8A57B6AEE998E4910F58 kAddressKCItemAttr;
$4BB91A84A266B38EACF9B500C4711451 kAdjective;
$48581DA6325892AC46A0B2E89C776E96 kAdjustCreationDate;
$4BB91A84A266B38EACF9B500C4711451 kAdverb;
$F857308BF5AE085504DF7C5818F38FA4 kAlertCautionAlert;
$8C3160D5B07095881A649D5B5E6C135D kAlertCautionBadgeIcon;
$BCB4FBF90956928C48B1C39A2D2FA32E kAlertCautionIcon;
$9AC1B299F7F9E86499C25AAF60B442F2 kAlertDefaultCancelText;
$9AC1B299F7F9E86499C25AAF60B442F2 kAlertDefaultOKText;
$9AC1B299F7F9E86499C25AAF60B442F2 kAlertDefaultOtherText;
$1E6CF9CD824F060CB1174F5BABA19D02 kAlertFlagsAlertIsMovable;
$1E6CF9CD824F060CB1174F5BABA19D02 kAlertFlagsUseControlHierarchy;
$1E6CF9CD824F060CB1174F5BABA19D02 kAlertFlagsUseThemeBackground;
$1E6CF9CD824F060CB1174F5BABA19D02 kAlertFlagsUseThemeControls;
$F857308BF5AE085504DF7C5818F38FA4 kAlertNoteAlert;
$BCB4FBF90956928C48B1C39A2D2FA32E kAlertNoteIcon;
$F857308BF5AE085504DF7C5818F38FA4 kAlertPlainAlert;
$BFF0F52F236F100676E043613305072D kAlertStdAlertCancelButton;
$BFF0F52F236F100676E043613305072D kAlertStdAlertHelpButton;
$BFF0F52F236F100676E043613305072D kAlertStdAlertOKButton;
$BFF0F52F236F100676E043613305072D kAlertStdAlertOtherButton;
$F857308BF5AE085504DF7C5818F38FA4 kAlertStopAlert;
$BCB4FBF90956928C48B1C39A2D2FA32E kAlertStopIcon;
$99DF324053748CE0F00F82D255EBBBC6 kAlertVariantCode;
$B95EEEF8D0A9C3F124CECCB9E5363575 kAlertWindowClass;
$8C3160D5B07095881A649D5B5E6C135D kAliasBadgeIcon;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignAbsoluteCenter;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignBottom;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignBottomLeft;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignBottomRight;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignCenterBottom;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignCenterLeft;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignCenterRight;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignCenterTop;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignHorizontalCenter;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignLeft;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignNone;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignRight;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignTop;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignTopLeft;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignTopRight;
$321D8F37350CDFAA8B1036FD70E704C0 kAlignVerticalCenter;
$111F8E47955483A26B366F9302FAA868 kAllATalkRoutersDown;
$F27735064C606F1E78552097B35F5D75 kAllCapsSelector;
$789C54EFC0F124BC54455F4C073E1DBE kAllDHCPOptions;
$F27735064C606F1E78552097B35F5D75 kAllLowerCaseSelector;
$5CDB6810CF5FAA70771C826E258B46A2 kAllModesSafe;
$5CDB6810CF5FAA70771C826E258B46A2 kAllModesValid;
$6A7C4B89B962AA65F49016E307E60447 kAllTypeFeaturesOffSelector;
$6A7C4B89B962AA65F49016E307E60447 kAllTypeFeaturesOnSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kAllTypographicFeaturesType;
$B95EEEF8D0A9C3F124CECCB9E5363575 kAllWindowClasses;
$F3876F991244DA6C9E2D6E25C6A258B7 kAllocDirectDrawSurface;
$9575FFA8E3DAC97BD84F1D9E83768FA5 kAllowDuplicatesBit;
$956E0F8638627E2D7345301BF56E48D3 kAlreadySavedStateErr;
$B95EEEF8D0A9C3F124CECCB9E5363575 kAltPlainWindowClass;
$F05EF96BBB38DB48FBB55E61622C6397 kAlwaysSendSubject;
$8615805619EA996624DB6A9C3E7C14FE kAnalogSetupExpectedBit;
$8615805619EA996624DB6A9C3E7C14FE kAnalogSetupExpectedMask;
$69AC827A883561A4494FC46B11603DDB kAnalogSignalLevel_0700_0000;
$69AC827A883561A4494FC46B11603DDB kAnalogSignalLevel_0700_0300;
$69AC827A883561A4494FC46B11603DDB kAnalogSignalLevel_0714_0286;
$69AC827A883561A4494FC46B11603DDB kAnalogSignalLevel_1000_0400;
$29926AB924E42B27C90E0FDA4D67BBF6 kAnnotationType;
$146929F84F574636EE9A576CD5732870 kAnyAuthType;
$3F276722A2E8F4E6CD71B44DCDB8D721 kAnyCFragArch;
$1774B657DAC30771F6310329C2BB35A8 kAnyComponentFlagsMask;
$1774B657DAC30771F6310329C2BB35A8 kAnyComponentManufacturer;
$1774B657DAC30771F6310329C2BB35A8 kAnyComponentSubType;
$1774B657DAC30771F6310329C2BB35A8 kAnyComponentType;
$739AAC26CA94C46EF1FA6D6D777D115D kAnyDeviceType;
$739AAC26CA94C46EF1FA6D6D777D115D kAnyEngineType;
$739AAC26CA94C46EF1FA6D6D777D115D kAnyPanelType;
$92D5118DB1ADD491E27FEF695945557E kAnyPort;
$739AAC26CA94C46EF1FA6D6D777D115D kAnyPortType;
$146929F84F574636EE9A576CD5732870 kAnyProtocol;
$ECE74C3197DA808E0BF3EC94E272B63A kAnyTransactionID;
$CED1243A6D8675D23AA26E362B2F2329 kAppPackageAliasType;
$1BACD87E698DC78D58692B84D16F77B5 kAppearanceEventClass;
$5159DF5F69DB4B07E5314ED3C5415015 kAppearanceFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kAppearanceFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kAppleExtrasFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kAppleExtrasFolderType;
$DBB42E5F83ACCD8890635A9CF5BCCFA2 kAppleJapaneseDictionarySignature;
$40B1D294FCB105E6FD797FB89EF6F7A3 kAppleLogoCharCode;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kAppleLogoIcon;
$A1E1BAD5B418D85708692C2D8BF7B43D kAppleLogoUnicode;
$8AC69FF40C1F0B169ED47B0063BA696F kAppleManufacturer;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kAppleMenuFolderAliasType;
$5159DF5F69DB4B07E5314ED3C5415015 kAppleMenuFolderIcon;
$883B7585B4D93D2BF8A69055FD2A75BF kAppleMenuFolderIconResource;
$191BACAFE1C79A4AFD6F08B231C40E86 kAppleMenuFolderType;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kAppleMenuIcon;
$8C3160D5B07095881A649D5B5E6C135D kAppleScriptBadgeIcon;
$5F3136115A81A068579DEF3E718D6587 kAppleScriptSubtype;
$CC091832F316327152ED0A035D8C4D44 kAppleShareAuthenticationFolderType;
$6272D81C4918127572EE4E585B7F7799 kAppleSharePasswordKCItemClass;
$CC091832F316327152ED0A035D8C4D44 kAppleShareSupportFolderType;
$68BF6022C044A554C82A650922375E31 kAppleTalkAddressLength;
$26211C6CDB486A5990962440EC282570 kAppleTalkEvent;
$6D648334E802817A93CD41CA53919B60 kAppleTalkIcon;
$6D648334E802817A93CD41CA53919B60 kAppleTalkZoneIcon;
$661EE15A02C8CBEFD46092C92494158F kAppleshareAutomountServerAliasesFolderType;
$CED1243A6D8675D23AA26E362B2F2329 kApplicationAliasType;
$4C94D49F19D2C7D3EC87E3F8D916F51F kApplicationCFrag;
$CED1243A6D8675D23AA26E362B2F2329 kApplicationCPAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kApplicationDAAliasType;
$5159DF5F69DB4B07E5314ED3C5415015 kApplicationSupportFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kApplicationSupportFolderType;
$40A4AD514222E8EC45F8250D13AFC8D6 kApplicationThreadID;
$2806241C695CE64F638EBE1504CA6EC2 kApplicationWindowKind;
$5159DF5F69DB4B07E5314ED3C5415015 kApplicationsFolderIcon;
$ADBD11780E2D799B74D44FEA6B34E12D kApplicationsFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kAssistantsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kAssistantsFolderType;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kAsteriskToMultiplyOffSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kAsteriskToMultiplyOnSelector;
$A477A9D9A30949C70593DE880651A9F5 kAsyncEjectComplete;
$A477A9D9A30949C70593DE880651A9F5 kAsyncEjectInProgress;
$A477A9D9A30949C70593DE880651A9F5 kAsyncMountComplete;
$A477A9D9A30949C70593DE880651A9F5 kAsyncMountInProgress;
$A477A9D9A30949C70593DE880651A9F5 kAsyncUnmountComplete;
$A477A9D9A30949C70593DE880651A9F5 kAsyncUnmountInProgress;
$613DD93652B7475103CB74F7F32FC353 kAtSpecifiedOrigin;
$956E0F8638627E2D7345301BF56E48D3 kAttemptDupCardEntryErr;
$CC091832F316327152ED0A035D8C4D44 kAudioAlertSoundsFolderType;
$4693F9F93A5130D57E44F485B4108586 kAudioComponentType;
$CC091832F316327152ED0A035D8C4D44 kAudioComponentsFolderType;
$CBC837C0B2E1E9C22A794CBDD581037D kAudioEndianAtomType;
$CBC837C0B2E1E9C22A794CBDD581037D kAudioFormatAtomType;
$CC091832F316327152ED0A035D8C4D44 kAudioPlugInsFolderType;
$CC091832F316327152ED0A035D8C4D44 kAudioSoundBanksFolderType;
$CC091832F316327152ED0A035D8C4D44 kAudioSoundsFolderType;
$CC091832F316327152ED0A035D8C4D44 kAudioSupportFolderType;
$CBC837C0B2E1E9C22A794CBDD581037D kAudioTerminatorAtomType;
$CBC837C0B2E1E9C22A794CBDD581037D kAudioVBRAtomType;
$4693F9F93A5130D57E44F485B4108586 kAudioVisionHeadphoneSubType;
$4693F9F93A5130D57E44F485B4108586 kAudioVisionSpeakerSubType;
$5B004150561D8A57B6AEE998E4910F58 kAuthTypeKCItemAttr;
$ECE74C3197DA808E0BF3EC94E272B63A kAutoGenerateReturnID;
$4693F9F93A5130D57E44F485B4108586 kAwacsPhoneSubType;
$4693F9F93A5130D57E44F485B4108586 kAwacsSubType;
$A822B52F4AFF6F9B7AD06D3233CA9C70 kBLibTag2;
$0A4F3543AB28E6CD485E37048951B070 kBSLNControlPointFormatNoMap;
$0A4F3543AB28E6CD485E37048951B070 kBSLNControlPointFormatWithMap;
$0A4F3543AB28E6CD485E37048951B070 kBSLNCurrentVersion;
$0A4F3543AB28E6CD485E37048951B070 kBSLNDistanceFormatNoMap;
$0A4F3543AB28E6CD485E37048951B070 kBSLNDistanceFormatWithMap;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNHangingBaseline;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNIdeographicCenterBaseline;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNIdeographicLowBaseline;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNLastBaseline;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNMathBaseline;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNNoBaselineOverride;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNNumBaselineClasses;
$F0BC088A41CD7899F534ED4333FCBCA1 kBSLNRomanBaseline;
$0A4F3543AB28E6CD485E37048951B070 kBSLNTag;
$1FDFCDB6B16318BF0B312BA6FA177D60 kBTBadCloseMask;
$1FDFCDB6B16318BF0B312BA6FA177D60 kBTBigKeysMask;
$1FB0C3C05C839538DC046EE3FB85DDAE kBTHeaderNode;
$1FB0C3C05C839538DC046EE3FB85DDAE kBTIndexNode;
$1FB0C3C05C839538DC046EE3FB85DDAE kBTLeafNode;
$1FB0C3C05C839538DC046EE3FB85DDAE kBTMapNode;
$1FDFCDB6B16318BF0B312BA6FA177D60 kBTVariableIndexKeysMask;
$1AAB9134B0FEB3A17896E87DAEB18E46 kBackgroundStreamEvent;
$40B1D294FCB105E6FD797FB89EF6F7A3 kBackspaceCharCode;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kBackwardArrowIcon;
$956E0F8638627E2D7345301BF56E48D3 kBadAdapterErr;
$956E0F8638627E2D7345301BF56E48D3 kBadArgLengthErr;
$956E0F8638627E2D7345301BF56E48D3 kBadArgsErr;
$956E0F8638627E2D7345301BF56E48D3 kBadAttributeErr;
$956E0F8638627E2D7345301BF56E48D3 kBadBaseErr;
$956E0F8638627E2D7345301BF56E48D3 kBadCISErr;
$956E0F8638627E2D7345301BF56E48D3 kBadCustomIFIDErr;
$956E0F8638627E2D7345301BF56E48D3 kBadDeviceErr;
$956E0F8638627E2D7345301BF56E48D3 kBadEDCErr;
$956E0F8638627E2D7345301BF56E48D3 kBadHandleErr;
$956E0F8638627E2D7345301BF56E48D3 kBadIRQErr;
$956E0F8638627E2D7345301BF56E48D3 kBadLinkErr;
$956E0F8638627E2D7345301BF56E48D3 kBadOffsetErr;
$956E0F8638627E2D7345301BF56E48D3 kBadPageErr;
$956E0F8638627E2D7345301BF56E48D3 kBadSizeErr;
$956E0F8638627E2D7345301BF56E48D3 kBadSocketErr;
$956E0F8638627E2D7345301BF56E48D3 kBadSpeedErr;
$956E0F8638627E2D7345301BF56E48D3 kBadTupleDataErr;
$956E0F8638627E2D7345301BF56E48D3 kBadTypeErr;
$956E0F8638627E2D7345301BF56E48D3 kBadVccErr;
$956E0F8638627E2D7345301BF56E48D3 kBadVppErr;
$956E0F8638627E2D7345301BF56E48D3 kBadWindowErr;
$88D06B5103F7D4A3795441957757BCBC kBalloonVariantCount;
$692E22D724EF9B6C4AC501DA1C5BD874 kBalloonWDEFID;
$58030CB495C0F1442001624CD349E98E kBeginEndConfigureBit;
$40B1D294FCB105E6FD797FB89EF6F7A3 kBellCharCode;
$69242586042099447317D5F9AE97B47D kBestQuality;
$8F60482D68E161FEEA31FAA7402CDD1A kBig5_BasicVariant;
$8F60482D68E161FEEA31FAA7402CDD1A kBig5_ETenVariant;
$8F60482D68E161FEEA31FAA7402CDD1A kBig5_StandardVariant;
$618C284D92BBAE51242A006B194DC48F kBlessedBusErrorBait;
$1F1399ED5159CECEAB296D7B29DF3378 kBlessedFolder;
$A261E92C82250443DCF4E199E1935CB2 kBlockFillText;
$4693F9F93A5130D57E44F485B4108586 kBlueBoxSubType;
$CC091832F316327152ED0A035D8C4D44 kBootTimeStartupItemsFolderType;
$88D06B5103F7D4A3795441957757BCBC kBottomLeftTipPointsDownVariant;
$88D06B5103F7D4A3795441957757BCBC kBottomLeftTipPointsLeftVariant;
$88D06B5103F7D4A3795441957757BCBC kBottomRightTipPointsDownVariant;
$88D06B5103F7D4A3795441957757BCBC kBottomRightTipPointsRightVariant;
$F401D567E4FBF51362F158484CD5534B kBoxAnnotationSelector;
$58B7B25FE359A5DE8E99FA27EE656A12 kBridgeSoftwareRunningCantSleep;
$5CDB6810CF5FAA70771C826E258B46A2 kBuiltInConnection;
$40B1D294FCB105E6FD797FB89EF6F7A3 kBulletCharCode;
$A1E1BAD5B418D85708692C2D8BF7B43D kBulletUnicode;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kBurningIcon;
$C61609BB0F455BF0C49EDE98D48A29D1 kBusDeviceResetMsg;
$6D23F503DD0D1A39000F838441BA4416 kBusTypeATA;
$6D23F503DD0D1A39000F838441BA4416 kBusTypeMediaBay;
$6D23F503DD0D1A39000F838441BA4416 kBusTypePCMCIA;
$6D23F503DD0D1A39000F838441BA4416 kBusTypeSCSI;
$956E0F8638627E2D7345301BF56E48D3 kBusyErr;
$333B154C3EB4D8DDCA6A976D4C3734A3 kButtonDialogItem;
$1815B64D5222996852C553D2507504A4 kByCommentView;
$1815B64D5222996852C553D2507504A4 kByDateView;
$1815B64D5222996852C553D2507504A4 kByIconView;
$1815B64D5222996852C553D2507504A4 kByKindView;
$1815B64D5222996852C553D2507504A4 kByLabelView;
$1815B64D5222996852C553D2507504A4 kByNameView;
$1815B64D5222996852C553D2507504A4 kBySizeView;
$1815B64D5222996852C553D2507504A4 kBySmallIcon;
$1815B64D5222996852C553D2507504A4 kByVersionView;
$2E76A3EFE2DFCB8474F09D279EC9199C kCCIPIdleTimerDisabled;
$14D42046BADA2A578DB7A6526353A20A kCCRegisterCBit;
$14D42046BADA2A578DB7A6526353A20A kCCRegisterNBit;
$14D42046BADA2A578DB7A6526353A20A kCCRegisterVBit;
$14D42046BADA2A578DB7A6526353A20A kCCRegisterXBit;
$14D42046BADA2A578DB7A6526353A20A kCCRegisterZBit;
$2E76A3EFE2DFCB8474F09D279EC9199C kCCReminderTimerDisabled;
$1C119E9720855ADE2B421A854DBE867A kCDSource;
$18BF411237F175ABCD4A1D90A0B1F6B7 kCDXA2Compression;
$18BF411237F175ABCD4A1D90A0B1F6B7 kCDXA4Compression;
$EE9F227ECBAF3C576752B1D10972453B kCFBundleCFragLocator;
$EE9F227ECBAF3C576752B1D10972453B kCFBundlePreCFragLocator;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetAlphaNumeric;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetCapitalizedLetter;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetControl;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetDecimalDigit;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetDecomposable;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetIllegal;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetLetter;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetLowercaseLetter;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetNonBase;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetPunctuation;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetUppercaseLetter;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetWhitespace;
$DC44859D6FB1393DCFE0EE3DF7C48461 kCFCharacterSetWhitespaceAndNewline;
$66A53D26140882007EBC959392923366 kCFCompareAnchored;
$66A53D26140882007EBC959392923366 kCFCompareBackwards;
$66A53D26140882007EBC959392923366 kCFCompareCaseInsensitive;
$E72284104A6319CA47B3C718B2E24F29 kCFCompareEqualTo;
$E72284104A6319CA47B3C718B2E24F29 kCFCompareGreaterThan;
$E72284104A6319CA47B3C718B2E24F29 kCFCompareLessThan;
$66A53D26140882007EBC959392923366 kCFCompareLocalized;
$66A53D26140882007EBC959392923366 kCFCompareNonliteral;
$66A53D26140882007EBC959392923366 kCFCompareNumerically;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianAllUnits;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianUnitsDays;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianUnitsHours;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianUnitsMinutes;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianUnitsMonths;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianUnitsSeconds;
$ECAF5A2F73172FB898FF768E7D9E2DE3 kCFGregorianUnitsYears;
CFHostInfoType kCFHostAddresses;
CFHostInfoType kCFHostNames;
CFHostInfoType kCFHostReachability;
$09A44E9A6AD8D0F1C197FC7AFB8D211E kCFM68kRTA;
$E5E0C660B8E9FC08DD1573A475150938 kCFMessagePortIsInvalid;
$E5E0C660B8E9FC08DD1573A475150938 kCFMessagePortReceiveTimeout;
$E5E0C660B8E9FC08DD1573A475150938 kCFMessagePortSendTimeout;
$E5E0C660B8E9FC08DD1573A475150938 kCFMessagePortSuccess;
$E5E0C660B8E9FC08DD1573A475150938 kCFMessagePortTransportError;
$B61EED6302ED2E3ED74E33E7CA2E0891 kCFNetServiceFlagIsDomain;
$B61EED6302ED2E3ED74E33E7CA2E0891 kCFNetServiceFlagIsRegistrationDomain;
$B61EED6302ED2E3ED74E33E7CA2E0891 kCFNetServiceFlagMoreComing;
$B61EED6302ED2E3ED74E33E7CA2E0891 kCFNetServiceFlagRemove;
CFNetServicesError kCFNetServicesErrorBadArgument;
CFNetServicesError kCFNetServicesErrorCancel;
CFNetServicesError kCFNetServicesErrorCollision;
CFNetServicesError kCFNetServicesErrorInProgress;
CFNetServicesError kCFNetServicesErrorInvalid;
CFNetServicesError kCFNetServicesErrorNotFound;
CFNetServicesError kCFNetServicesErrorUnknown;
$446545BD1D47A10087682B6E73E29B3E kCFNotFound;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberCFIndexType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberCharType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberDoubleType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberFloat32Type;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberFloat64Type;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberFloatType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberIntType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberLongLongType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberLongType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberMaxType;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberSInt16Type;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberSInt32Type;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberSInt64Type;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberSInt8Type;
$DDF917F3B0CA77944968056AE5FF35BD kCFNumberShortType;
$AAA5C25531AE86BA2D3664E4224783FB kCFPropertyListBinaryFormat_v1_0;
$8DB35FE5B0E11FAC891D260488BB5F46 kCFPropertyListImmutable;
$8DB35FE5B0E11FAC891D260488BB5F46 kCFPropertyListMutableContainers;
$8DB35FE5B0E11FAC891D260488BB5F46 kCFPropertyListMutableContainersAndLeaves;
$AAA5C25531AE86BA2D3664E4224783FB kCFPropertyListOpenStepFormat;
$AAA5C25531AE86BA2D3664E4224783FB kCFPropertyListXMLFormat_v1_0;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopAfterWaiting;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopAllActivities;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopBeforeSources;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopBeforeTimers;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopBeforeWaiting;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopEntry;
$AD2CE5B9F9B3F0DC238AE97EC382AC06 kCFRunLoopExit;
$FB9DE5A3716475996BACF08B0AD5B184 kCFRunLoopRunFinished;
$FB9DE5A3716475996BACF08B0AD5B184 kCFRunLoopRunHandledSource;
$FB9DE5A3716475996BACF08B0AD5B184 kCFRunLoopRunStopped;
$FB9DE5A3716475996BACF08B0AD5B184 kCFRunLoopRunTimedOut;
$200FA646B4E4D0A70C1E98006203F395 kCFSocketAcceptCallBack;
$026AB22D4B12751AF2F9642DA4E30E00 kCFSocketAutomaticallyReenableAcceptCallBack;
$026AB22D4B12751AF2F9642DA4E30E00 kCFSocketAutomaticallyReenableDataCallBack;
$026AB22D4B12751AF2F9642DA4E30E00 kCFSocketAutomaticallyReenableReadCallBack;
$026AB22D4B12751AF2F9642DA4E30E00 kCFSocketAutomaticallyReenableWriteCallBack;
$026AB22D4B12751AF2F9642DA4E30E00 kCFSocketCloseOnInvalidate;
$200FA646B4E4D0A70C1E98006203F395 kCFSocketConnectCallBack;
$200FA646B4E4D0A70C1E98006203F395 kCFSocketDataCallBack;
$DCE0C641D8A92AA284FFB93B28575CB0 kCFSocketError;
$200FA646B4E4D0A70C1E98006203F395 kCFSocketNoCallBack;
$200FA646B4E4D0A70C1E98006203F395 kCFSocketReadCallBack;
$DCE0C641D8A92AA284FFB93B28575CB0 kCFSocketSuccess;
$DCE0C641D8A92AA284FFB93B28575CB0 kCFSocketTimeout;
$200FA646B4E4D0A70C1E98006203F395 kCFSocketWriteCallBack;
$F8A5EA3BFB05E7E2F5CE7177B99951FB kCFStreamErrorDomainCustom;
$F8A5EA3BFB05E7E2F5CE7177B99951FB kCFStreamErrorDomainMacOSStatus;
$F8A5EA3BFB05E7E2F5CE7177B99951FB kCFStreamErrorDomainPOSIX;
CFStreamErrorHTTP kCFStreamErrorHTTPBadURL;
CFStreamErrorHTTP kCFStreamErrorHTTPParseFailure;
CFStreamErrorHTTP kCFStreamErrorHTTPRedirectionLoop;
$2E6D08671535653AB0850E6118C81692 kCFStreamErrorSOCKS4IdConflict;
$2E6D08671535653AB0850E6118C81692 kCFStreamErrorSOCKS4IdentdFailed;
$2E6D08671535653AB0850E6118C81692 kCFStreamErrorSOCKS4RequestFailed;
$746DC2D9D0091FA2A243991614BD149F kCFStreamErrorSOCKS4SubDomainResponse;
$3219DF91C5FEAFDCC71F04D022D7B8F5 kCFStreamErrorSOCKS5BadResponseAddr;
$3219DF91C5FEAFDCC71F04D022D7B8F5 kCFStreamErrorSOCKS5BadState;
$746DC2D9D0091FA2A243991614BD149F kCFStreamErrorSOCKS5SubDomainMethod;
$746DC2D9D0091FA2A243991614BD149F kCFStreamErrorSOCKS5SubDomainResponse;
$746DC2D9D0091FA2A243991614BD149F kCFStreamErrorSOCKS5SubDomainUserPass;
$746DC2D9D0091FA2A243991614BD149F kCFStreamErrorSOCKSSubDomainNone;
$746DC2D9D0091FA2A243991614BD149F kCFStreamErrorSOCKSSubDomainVersionCode;
$3219DF91C5FEAFDCC71F04D022D7B8F5 kCFStreamErrorSOCKSUnknownClientVersion;
$CF93AEDCED8B65A9628808F5C9A8D082 kCFStreamEventCanAcceptBytes;
$CF93AEDCED8B65A9628808F5C9A8D082 kCFStreamEventEndEncountered;
$CF93AEDCED8B65A9628808F5C9A8D082 kCFStreamEventErrorOccurred;
$CF93AEDCED8B65A9628808F5C9A8D082 kCFStreamEventHasBytesAvailable;
$CF93AEDCED8B65A9628808F5C9A8D082 kCFStreamEventNone;
$CF93AEDCED8B65A9628808F5C9A8D082 kCFStreamEventOpenCompleted;
CFStreamSocketSecurityProtocol kCFStreamSocketSecurityNone;
CFStreamSocketSecurityProtocol kCFStreamSocketSecuritySSLv2;
CFStreamSocketSecurityProtocol kCFStreamSocketSecuritySSLv23;
CFStreamSocketSecurityProtocol kCFStreamSocketSecuritySSLv3;
CFStreamSocketSecurityProtocol kCFStreamSocketSecurityTLSv1;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusAtEnd;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusClosed;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusError;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusNotOpen;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusOpen;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusOpening;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusReading;
$31E6C359F8E649D61793711BB93492EB kCFStreamStatusWriting;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingASCII;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingBig5;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingBig5_HKSCS_1999;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingCNS_11643_92_P1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingCNS_11643_92_P2;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingCNS_11643_92_P3;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSArabic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSBalticRim;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSCanadianFrench;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSChineseSimplif;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSChineseTrad;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSCyrillic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSGreek;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSGreek1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSGreek2;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSHebrew;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSIcelandic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSJapanese;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSKorean;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSLatin1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSLatin2;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSLatinUS;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSNordic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSPortuguese;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSRussian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSThai;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingDOSTurkish;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingEBCDIC_CP037;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingEBCDIC_US;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingEUC_CN;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingEUC_JP;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingEUC_KR;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingEUC_TW;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingGBK_95;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingGB_18030_2000;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingGB_2312_80;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingHZ_GB_2312;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingISOLatin1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin2;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin3;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin4;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin5;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin6;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin7;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin8;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatin9;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatinArabic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatinCyrillic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatinGreek;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatinHebrew;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISOLatinThai;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_CN;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_CN_EXT;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_JP;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_JP_1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_JP_2;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_JP_3;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingISO_2022_KR;
MACRO_kCFStringEncodingInvalidId kCFStringEncodingInvalidId;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingJIS_C6226_78;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingJIS_X0201_76;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingJIS_X0208_83;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingJIS_X0208_90;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingJIS_X0212_90;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingKOI8_R;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingKSC_5601_87;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingKSC_5601_92_Johab;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacArabic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacArmenian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacBengali;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacBurmese;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacCeltic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacCentralEurRoman;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacChineseSimp;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacChineseTrad;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacCroatian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacCyrillic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacDevanagari;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacDingbats;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacEthiopic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacExtArabic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacFarsi;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacGaelic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacGeorgian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacGreek;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacGujarati;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacGurmukhi;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacHFS;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacHebrew;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacIcelandic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacInuit;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacJapanese;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacKannada;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacKhmer;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacKorean;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacLaotian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacMalayalam;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacMongolian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacOriya;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingMacRoman;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacRomanLatin1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacRomanian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacSinhalese;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacSymbol;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacTamil;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacTelugu;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacThai;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacTibetan;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacTurkish;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacUkrainian;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacVT100;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingMacVietnamese;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingNextStepLatin;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingNonLossyASCII;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingShiftJIS;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingShiftJIS_X0213_00;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingUTF8;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingUnicode;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsArabic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsBalticRim;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsCyrillic;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsGreek;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsHebrew;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsKoreanJohab;
$E355085ACC2DCA6671FF31ECC42E2874 kCFStringEncodingWindowsLatin1;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsLatin2;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsLatin5;
$5A6B7C783DA80C9FBE50067968D2CB2B kCFStringEncodingWindowsVietnamese;
$5FA0F57FAA30BBD24B2E0A4CF9B9F780 kCFStringNormalizationFormC;
$5FA0F57FAA30BBD24B2E0A4CF9B9F780 kCFStringNormalizationFormD;
$5FA0F57FAA30BBD24B2E0A4CF9B9F780 kCFStringNormalizationFormKC;
$5FA0F57FAA30BBD24B2E0A4CF9B9F780 kCFStringNormalizationFormKD;
$E084DEBDB3F824C43007240F8D9BFEAB kCFURLHFSPathStyle;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLImproperArgumentsError;
$E084DEBDB3F824C43007240F8D9BFEAB kCFURLPOSIXPathStyle;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLPropertyKeyUnavailableError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLRemoteHostUnavailableError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLResourceAccessViolationError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLResourceNotFoundError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLTimeoutError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLUnknownError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLUnknownPropertyKeyError;
$0E422A2F8845AB6F0250A97DB9867B0F kCFURLUnknownSchemeError;
$E084DEBDB3F824C43007240F8D9BFEAB kCFURLWindowsPathStyle;
$A2BAA2F6D61B9C8D34EE372672643755 kCFUserNotificationAlternateResponse;
$A2BAA2F6D61B9C8D34EE372672643755 kCFUserNotificationCancelResponse;
$E2DE6DFE4CD7A6ED4D0C1EB98293A878 kCFUserNotificationCautionAlertLevel;
$A2BAA2F6D61B9C8D34EE372672643755 kCFUserNotificationDefaultResponse;
$50537C6B232EF50E39DD12A58344A62A kCFUserNotificationNoDefaultButtonFlag;
$E2DE6DFE4CD7A6ED4D0C1EB98293A878 kCFUserNotificationNoteAlertLevel;
$A2BAA2F6D61B9C8D34EE372672643755 kCFUserNotificationOtherResponse;
$E2DE6DFE4CD7A6ED4D0C1EB98293A878 kCFUserNotificationPlainAlertLevel;
$E2DE6DFE4CD7A6ED4D0C1EB98293A878 kCFUserNotificationStopAlertLevel;
$50537C6B232EF50E39DD12A58344A62A kCFUserNotificationUseRadioButtonsFlag;
$E6790A2C0D042950C6D4BAC0CF728D94 kCFXMLEntityTypeCharacter;
$E6790A2C0D042950C6D4BAC0CF728D94 kCFXMLEntityTypeParameter;
$E6790A2C0D042950C6D4BAC0CF728D94 kCFXMLEntityTypeParsedExternal;
$E6790A2C0D042950C6D4BAC0CF728D94 kCFXMLEntityTypeParsedInternal;
$E6790A2C0D042950C6D4BAC0CF728D94 kCFXMLEntityTypeUnparsed;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorElementlessDocument;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorEncodingConversionFailure;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedCDSect;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedCharacterReference;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedCloseTag;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedComment;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedDTD;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedDocument;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedName;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedParsedCharacterData;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedProcessingInstruction;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorMalformedStartTag;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorNoData;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorUnexpectedEOF;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLErrorUnknownEncoding;
$B977D08F08777D2B892DEF9A72E9752D kCFXMLNodeCurrentVersion;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeAttribute;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeAttributeListDeclaration;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeCDATASection;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeComment;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeDocument;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeDocumentFragment;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeDocumentType;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeElement;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeElementTypeDeclaration;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeEntity;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeEntityReference;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeNotation;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeProcessingInstruction;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeText;
$799CD7B761FFA04D296C7C37FD4E6AB0 kCFXMLNodeTypeWhitespace;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserAddImpliedAttributes;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserAllOptions;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserNoOptions;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserReplacePhysicalEntities;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserResolveExternalEntities;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserSkipMetaData;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserSkipWhitespace;
$9BD3530F02F154804E5741B1D52E9AAA kCFXMLParserValidateDocument;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLStatusParseInProgress;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLStatusParseNotBegun;
$CF8B549FD94CFC9338EAE40825E972F5 kCFXMLStatusParseSuccessful;
$8D26E145D92A22FB9DD469CC99D03694 kCFragAllFileTypes;
$1B80657F589CD0139BCED0ED1C3B15F6 kCFragGoesToEOF;
$2D9BB5004B997CCA0AEB85E8F21E315F kCFragLibUsageMapPrivatelyMask;
$8D26E145D92A22FB9DD469CC99D03694 kCFragLibraryFileType;
$8D26E145D92A22FB9DD469CC99D03694 kCFragResourceID;
$5FBF2292B4426E8B639AB18E7CDFFCA8 kCFragResourceSearchExtensionKind;
$8D26E145D92A22FB9DD469CC99D03694 kCFragResourceType;
_CGCommonWindowLevelKey kCGBackstopMenuLevelKey;
_CGCommonWindowLevelKey kCGBaseWindowLevelKey;
$85560B147DEBC22071E1E89E34047D26 kCGConfigureForAppOnly;
$85560B147DEBC22071E1E89E34047D26 kCGConfigureForSession;
$85560B147DEBC22071E1E89E34047D26 kCGConfigurePermanently;
_CGCommonWindowLevelKey kCGCursorWindowLevelKey;
_CGCommonWindowLevelKey kCGDesktopIconWindowLevelKey;
_CGCommonWindowLevelKey kCGDesktopWindowLevelKey;
MACRO_kCGDirectMainDisplay kCGDirectMainDisplay;
MACRO_kCGDisplayFadeReservationInvalidToken kCGDisplayFadeReservationInvalidToken;
_CGCommonWindowLevelKey kCGDockWindowLevelKey;
_CGCommonWindowLevelKey kCGDraggingWindowLevelKey;
CGTextEncoding kCGEncodingFontSpecific;
CGTextEncoding kCGEncodingMacRoman;
_CGError kCGErrorApplicationNotPermittedToExecute;
_CGError kCGErrorApplicationRequiresNewerSystem;
_CGError kCGErrorCannotComplete;
_CGError kCGErrorFailure;
_CGError kCGErrorFirst;
_CGError kCGErrorIllegalArgument;
_CGError kCGErrorInvalidConnection;
_CGError kCGErrorInvalidContext;
_CGError kCGErrorInvalidOperation;
_CGError kCGErrorLast;
_CGError kCGErrorNameTooLong;
_CGError kCGErrorNoCurrentPoint;
_CGError kCGErrorNoneAvailable;
_CGError kCGErrorNotImplemented;
_CGError kCGErrorRangeCheck;
_CGError kCGErrorSuccess;
_CGError kCGErrorTypeCheck;
$18589B68383B3C2762CD01864544A9B2 kCGEventFilterMaskPermitLocalKeyboardEvents;
$18589B68383B3C2762CD01864544A9B2 kCGEventFilterMaskPermitLocalMouseEvents;
$18589B68383B3C2762CD01864544A9B2 kCGEventFilterMaskPermitSystemDefinedEvents;
$AA15C0661A2FB2FAB7CCA72E78633A86 kCGEventSupressionStateRemoteMouseDrag;
$AA15C0661A2FB2FAB7CCA72E78633A86 kCGEventSupressionStateSupressionInterval;
_CGCommonWindowLevelKey kCGFloatingWindowLevelKey;
$6CB61DCA7E081BB09AA59DF59B160A01 kCGFontIndexInvalid;
$6CB61DCA7E081BB09AA59DF59B160A01 kCGFontIndexMax;
$6CB61DCA7E081BB09AA59DF59B160A01 kCGGlyphMax;
_CGCommonWindowLevelKey kCGHelpWindowLevelKey;
CGImageAlphaInfo kCGImageAlphaFirst;
CGImageAlphaInfo kCGImageAlphaLast;
CGImageAlphaInfo kCGImageAlphaNone;
CGImageAlphaInfo kCGImageAlphaNoneSkipFirst;
CGImageAlphaInfo kCGImageAlphaNoneSkipLast;
CGImageAlphaInfo kCGImageAlphaPremultipliedFirst;
CGImageAlphaInfo kCGImageAlphaPremultipliedLast;
CGInterpolationQuality kCGInterpolationDefault;
CGInterpolationQuality kCGInterpolationHigh;
CGInterpolationQuality kCGInterpolationLow;
CGInterpolationQuality kCGInterpolationNone;
CGLineCap kCGLineCapButt;
CGLineCap kCGLineCapRound;
CGLineCap kCGLineCapSquare;
CGLineJoin kCGLineJoinBevel;
CGLineJoin kCGLineJoinMiter;
CGLineJoin kCGLineJoinRound;
_CGCommonWindowLevelKey kCGMainMenuWindowLevelKey;
_CGCommonWindowLevelKey kCGMaximumWindowLevelKey;
_CGCommonWindowLevelKey kCGMinimumWindowLevelKey;
_CGCommonWindowLevelKey kCGModalPanelWindowLevelKey;
_CGCommonWindowLevelKey kCGNormalWindowLevelKey;
MACRO_kCGNullDirectDisplay kCGNullDirectDisplay;
MACRO_kCGNumReservedWindowLevels kCGNumReservedWindowLevels;
$AA15C0661A2FB2FAB7CCA72E78633A86 kCGNumberOfEventSupressionStates;
_CGCommonWindowLevelKey kCGNumberOfWindowLevelKeys;
_CGCommonWindowLevelKey kCGOverlayWindowLevelKey;
CGPathDrawingMode kCGPathEOFill;
CGPathDrawingMode kCGPathEOFillStroke;
CGPathElementType kCGPathElementAddCurveToPoint;
CGPathElementType kCGPathElementAddLineToPoint;
CGPathElementType kCGPathElementAddQuadCurveToPoint;
CGPathElementType kCGPathElementCloseSubpath;
CGPathElementType kCGPathElementMoveToPoint;
CGPathDrawingMode kCGPathFill;
CGPathDrawingMode kCGPathFillStroke;
CGPathDrawingMode kCGPathStroke;
CGPatternTiling kCGPatternTilingConstantSpacing;
CGPatternTiling kCGPatternTilingConstantSpacingMinimalDistortion;
CGPatternTiling kCGPatternTilingNoDistortion;
_CGCommonWindowLevelKey kCGPopUpMenuWindowLevelKey;
CGColorRenderingIntent kCGRenderingIntentAbsoluteColorimetric;
CGColorRenderingIntent kCGRenderingIntentDefault;
CGColorRenderingIntent kCGRenderingIntentPerceptual;
CGColorRenderingIntent kCGRenderingIntentRelativeColorimetric;
CGColorRenderingIntent kCGRenderingIntentSaturation;
_CGCommonWindowLevelKey kCGScreenSaverWindowLevelKey;
_CGCommonWindowLevelKey kCGStatusWindowLevelKey;
CGTextDrawingMode kCGTextClip;
CGTextDrawingMode kCGTextFill;
CGTextDrawingMode kCGTextFillClip;
CGTextDrawingMode kCGTextFillStroke;
CGTextDrawingMode kCGTextFillStrokeClip;
CGTextDrawingMode kCGTextInvisible;
CGTextDrawingMode kCGTextStroke;
CGTextDrawingMode kCGTextStrokeClip;
_CGCommonWindowLevelKey kCGTornOffMenuWindowLevelKey;
_CGCommonWindowLevelKey kCGUtilityWindowLevelKey;
$BBD4B51CD1F8C4E1BDF16F03CBA05C13 kCJKItalicRomanSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kCJKRomanSpacingType;
$90E05716757C219080C40353374456CF kCJKSymbolAltFiveSelector;
$90E05716757C219080C40353374456CF kCJKSymbolAltFourSelector;
$90E05716757C219080C40353374456CF kCJKSymbolAltOneSelector;
$90E05716757C219080C40353374456CF kCJKSymbolAltThreeSelector;
$90E05716757C219080C40353374456CF kCJKSymbolAltTwoSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kCJKSymbolAlternativesType;
$9BC0C55189B3F7A1579AEB8612B3EFF0 kCJKVerticalRomanCenteredSelector;
$9BC0C55189B3F7A1579AEB8612B3EFF0 kCJKVerticalRomanHBaselineSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kCJKVerticalRomanPlacementType;
$E65957EC3410F47BC944BA7E97591D2C kCMActivateTextService;
$E65957EC3410F47BC944BA7E97591D2C kCMDeactivateTextService;
$E65957EC3410F47BC944BA7E97591D2C kCMFixTextService;
$E65957EC3410F47BC944BA7E97591D2C kCMGetScriptLangSupport;
$E65957EC3410F47BC944BA7E97591D2C kCMGetTextServiceMenu;
$E65957EC3410F47BC944BA7E97591D2C kCMGetTextServiceProperty;
$13284D064FBF5B8A41AD44A0643E2FBE kCMHelpItemAppleGuide;
$13284D064FBF5B8A41AD44A0643E2FBE kCMHelpItemNoHelp;
$13284D064FBF5B8A41AD44A0643E2FBE kCMHelpItemOtherHelp;
$13284D064FBF5B8A41AD44A0643E2FBE kCMHelpItemRemoveHelp;
$E65957EC3410F47BC944BA7E97591D2C kCMHidePaletteWindows;
$E65957EC3410F47BC944BA7E97591D2C kCMInitiateTextService;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMCheckBitmap;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMCheckColors;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMCheckPixMap;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMClose;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMConcatInit;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMConcatenateProfiles;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMFlattenProfile;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetIndNamedColorValue;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetInfo;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetNamedColorIndex;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetNamedColorInfo;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetNamedColorName;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetNamedColorValue;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetPS2ColorRendering;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetPS2ColorRenderingIntent;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetPS2ColorRenderingVMSize;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMGetPS2ColorSpace;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMInit;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMMatchBitmap;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMMatchColors;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMMatchPixMap;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMNewLinkProfile;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMOpen;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMUnflattenProfile;
$38BE0C7E82A185D93C9819A4837F2FFA kCMMValidateProfile;
$E3CF0ABADF71D490733EAA8C70D426F0 kCMMenuItemSelected;
$E3CF0ABADF71D490733EAA8C70D426F0 kCMNothingSelected;
$E65957EC3410F47BC944BA7E97591D2C kCMSetTextServiceCursor;
$E65957EC3410F47BC944BA7E97591D2C kCMSetTextServiceProperty;
$E3CF0ABADF71D490733EAA8C70D426F0 kCMShowHelpSelected;
$E65957EC3410F47BC944BA7E97591D2C kCMTerminateTextService;
$E65957EC3410F47BC944BA7E97591D2C kCMTextServiceEvent;
$E65957EC3410F47BC944BA7E97591D2C kCMTextServiceMenuSelect;
$70F0A58E8ADB86B720B7CF0FDEA93CD3 kCMUCTextServiceEvent;
$55E5252D84E6F1A48D581BACE889D526 kCOMPLETEEVENT;
$768C2AF2BA4795B0EBD762573A709F14 kCStackBased;
$CC091832F316327152ED0A035D8C4D44 kCachedDataFolderType;
$D78788DC93622900A24DC67FC75E3116 kCalibratorNamePrefix;
$BEE4F9FA55F124848F5583F92B764A21 kCallingConventionMask;
$BEE4F9FA55F124848F5583F92B764A21 kCallingConventionPhase;
$BEE4F9FA55F124848F5583F92B764A21 kCallingConventionWidth;
$060A717C032BDC1377FEBCDE0A3906C0 kCanonicalCompositionOffSelector;
$060A717C032BDC1377FEBCDE0A3906C0 kCanonicalCompositionOnSelector;
$956E0F8638627E2D7345301BF56E48D3 kCantConfigureCardErr;
$58B7B25FE359A5DE8E99FA27EE656A12 kCantReportProcessorTemperatureErr;
$318BA9FAC98AD053DE1DC371BC0A1F59 kCapacityIsActual;
$318BA9FAC98AD053DE1DC371BC0A1F59 kCapacityIsPercentOfMax;
$CC091832F316327152ED0A035D8C4D44 kCarbonLibraryFolderType;
$956E0F8638627E2D7345301BF56E48D3 kCardBusCardErr;
$956E0F8638627E2D7345301BF56E48D3 kCardPowerOffErr;
$A261E92C82250443DCF4E199E1935CB2 kCaretPosition;
$9AE367475DB3252AE4C1C184F0EB9534 kCautionIcon;
$613DD93652B7475103CB74F7F32FC353 kCenterOnMainScreen;
$42757CFF77671F6FA20DC66BF38093F0 kCenterOnScreen;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchAny;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchDecryptAllowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchDecryptDisallowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchDecryptIgnored;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchDecryptMask;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchEncryptAllowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchEncryptDisallowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchEncryptIgnored;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchEncryptMask;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchPrivKeyRequired;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchShift;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchSigningAllowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchSigningDisallowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchSigningIgnored;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchSigningMask;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchUnwrapAllowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchUnwrapDisallowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchUnwrapIgnored;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchUnwrapMask;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchVerifyAllowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchVerifyDisallowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchVerifyIgnored;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchVerifyMask;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchWrapAllowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchWrapDisallowed;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchWrapIgnored;
$3422B1CF3045E52D34E7CD5530D8F41B kCertSearchWrapMask;
$C886933FA833F579BADE4B9335D656E1 kCertUsageAllAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageDecryptAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageDecryptAskAndAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageEncryptAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageEncryptAskAndAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageKeyExchAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageKeyExchAskAndAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageRootAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageRootAskAndAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageSSLAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageSSLAskAndAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageShift;
$C886933FA833F579BADE4B9335D656E1 kCertUsageSigningAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageSigningAskAndAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageVerifyAdd;
$C886933FA833F579BADE4B9335D656E1 kCertUsageVerifyAskAndAdd;
$6272D81C4918127572EE4E585B7F7799 kCertificateKCItemClass;
$29926AB924E42B27C90E0FDA4D67BBF6 kCharacterAlternativesType;
$1DDF1CFC370E605DD776B8BC1BE7D2BA kCharacterPaletteInputMethodClass;
$29926AB924E42B27C90E0FDA4D67BBF6 kCharacterShapeType;
$F8F9ECD74B045B35282DEB8B8260CDB3 kChargerIsAttachedMask;
$333B154C3EB4D8DDCA6A976D4C3734A3 kCheckBoxDialogItem;
$40B1D294FCB105E6FD797FB89EF6F7A3 kCheckCharCode;
$A1E1BAD5B418D85708692C2D8BF7B43D kCheckUnicode;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kChewableItemsFolderType;
$F401D567E4FBF51362F158484CD5534B kCircleAnnotationSelector;
$5B004150561D8A57B6AEE998E4910F58 kClassKCItemAttr;
$CC091832F316327152ED0A035D8C4D44 kClassicDesktopFolderType;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kClassicDomain;
$4693F9F93A5130D57E44F485B4108586 kClassicSubType;
$B66336CDD3FB7BACAE93B982EED235B4 kCleanUpAEUT;
$40B1D294FCB105E6FD797FB89EF6F7A3 kClearCharCode;
$C61609BB0F455BF0C49EDE98D48A29D1 kClearQueueMsg;
$956E0F8638627E2D7345301BF56E48D3 kClientRequestDenied;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kClipboardIcon;
$B142BA054C1D58A6EEC993FCA1E9F256 kClippingCreator;
$B142BA054C1D58A6EEC993FCA1E9F256 kClippingPictureType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kClippingPictureTypeIcon;
$B142BA054C1D58A6EEC993FCA1E9F256 kClippingSoundType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kClippingSoundTypeIcon;
$B142BA054C1D58A6EEC993FCA1E9F256 kClippingTextType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kClippingTextTypeIcon;
$B142BA054C1D58A6EEC993FCA1E9F256 kClippingUnknownType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kClippingUnknownTypeIcon;
$009AA9BCCC426E323765130C670B7B3B kCloseCommand;
$C61609BB0F455BF0C49EDE98D48A29D1 kCmdCompleteMsg;
$97FA3A9004AF8E74324D08F4D09E2464 kCodeCFragSymbol;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateAttributesNotFoundErr;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateBufferTooSmall;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateInvalidChar;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateInvalidCollationRef;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateInvalidOptions;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateMissingUnicodeTableErr;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollatePatternNotFoundErr;
$BA0C1BCD204F4A82DD1B7E254D8156BA kCollateUnicodeConvertFailedErr;
$A9B07CB4532F54CC01642EE6387674DE kCollectionAllAttributes;
$A9B07CB4532F54CC01642EE6387674DE kCollectionDefaultAttributes;
$3A7A8AC7CE50134FE71AC9280204F0F0 kCollectionDontWantAttributes;
$3A7A8AC7CE50134FE71AC9280204F0F0 kCollectionDontWantData;
$3A7A8AC7CE50134FE71AC9280204F0F0 kCollectionDontWantId;
$3A7A8AC7CE50134FE71AC9280204F0F0 kCollectionDontWantIndex;
$3A7A8AC7CE50134FE71AC9280204F0F0 kCollectionDontWantSize;
$3A7A8AC7CE50134FE71AC9280204F0F0 kCollectionDontWantTag;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionLockBit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionLockMask;
$A9B07CB4532F54CC01642EE6387674DE kCollectionNoAttributes;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionPersistenceBit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionPersistenceMask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved0Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved0Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved10Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved10Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved11Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved11Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved12Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved12Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved13Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved13Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved1Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved1Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved2Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved2Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved3Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved3Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved4Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved4Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved5Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved5Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved6Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved6Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved7Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved7Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved8Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved8Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionReserved9Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionReserved9Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser0Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser0Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser10Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser10Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser11Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser11Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser12Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser12Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser13Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser13Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser14Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser14Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser15Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser15Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser1Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser1Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser2Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser2Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser3Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser3Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser4Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser4Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser5Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser5Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser6Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser6Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser7Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser7Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser8Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser8Mask;
$AE930DDFC6D071A9F1408C38F86A54B6 kCollectionUser9Bit;
$55C8245C7CC0654B9BBFB650075527FF kCollectionUser9Mask;
$A9B07CB4532F54CC01642EE6387674DE kCollectionUserAttributes;
$CC052733775226ECD6E2A883D62A4D31 kColor;
$A2A3B97015A39488E2F6B427ADE8C31C kColor16Connect;
$A2A3B97015A39488E2F6B427ADE8C31C kColor19Connect;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerAppIsColorSyncAware;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerCallColorProcLive;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerCanAnimatePalette;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerCanModifyPalette;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerDetachedFromChoices;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerDialogIsModal;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerDialogIsMoveable;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerInApplicationDialog;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerInPickerDialog;
$B966703BBC9E5742E5F9EA28D7FCBF87 kColorPickerInSystemDialog;
$CC091832F316327152ED0A035D8C4D44 kColorSyncCMMFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kColorSyncFolderIcon;
$CC091832F316327152ED0A035D8C4D44 kColorSyncFolderType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kColorSyncProfilesFolderType;
$CC091832F316327152ED0A035D8C4D44 kColorSyncScriptingFolderType;
$A2A3B97015A39488E2F6B427ADE8C31C kColorTwoPageConnect;
$40B1D294FCB105E6FD797FB89EF6F7A3 kCommandCharCode;
$A1E1BAD5B418D85708692C2D8BF7B43D kCommandUnicode;
$5B004150561D8A57B6AEE998E4910F58 kCommentKCItemAttr;
$C5158E5C8936F0DF706C0A4969EDE653 kCommonLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kCommonLigaturesOnSelector;
$5B004150561D8A57B6AEE998E4910F58 kCommonNameKCItemAttr;
$060A717C032BDC1377FEBCDE0A3906C0 kCompatibilityCompositionOffSelector;
$060A717C032BDC1377FEBCDE0A3906C0 kCompatibilityCompositionOnSelector;
$8CB336AC7D24269B64F74014C25E2CF5 kCompiledCFragArch;
$8AC69FF40C1F0B169ED47B0063BA696F kComponentAliasResourceType;
$8C59FE90D052E75878F58D2827A116B7 kComponentCanDoSelect;
$8C59FE90D052E75878F58D2827A116B7 kComponentCloseSelect;
$875507F65E102A0631FE04553264E060 kComponentDebugOption;
$8C59FE90D052E75878F58D2827A116B7 kComponentExecuteWiredActionSelect;
$8C59FE90D052E75878F58D2827A116B7 kComponentGetMPWorkFunctionSelect;
$8C59FE90D052E75878F58D2827A116B7 kComponentGetPublicResourceSelect;
$48BA08BF30E215E23FF0B6EADE6025A6 kComponentListNotPreferredBit;
$48BA08BF30E215E23FF0B6EADE6025A6 kComponentListNotPreferredMask;
$8C59FE90D052E75878F58D2827A116B7 kComponentOpenSelect;
$8C59FE90D052E75878F58D2827A116B7 kComponentRegisterSelect;
$8AC69FF40C1F0B169ED47B0063BA696F kComponentResourceType;
$8C59FE90D052E75878F58D2827A116B7 kComponentTargetSelect;
$8C59FE90D052E75878F58D2827A116B7 kComponentUnregisterSelect;
$8C59FE90D052E75878F58D2827A116B7 kComponentVersionSelect;
$CC091832F316327152ED0A035D8C4D44 kComponentsFolderType;
$8D4D07E192BE4DF49363A655628BC0D2 kCompositeSyncMask;
$F68E41BB552C03507046AA3FD69AAB17 kCompoundPhoneAddress;
$1F001F3E5B2FA02809C79C36DE3DD07F kConfigSupportsWakeOnNetBit;
$1F001F3E5B2FA02809C79C36DE3DD07F kConfigSupportsWakeOnNetMask;
$956E0F8638627E2D7345301BF56E48D3 kConfigurationLockedErr;
$FF20F5A5458E17FC07E98E38B8F0DE0E kConnSuite;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kConnectToIcon;
$5CDB6810CF5FAA70771C826E258B46A2 kConnectionInactive;
$CED1243A6D8675D23AA26E362B2F2329 kContainerAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kContainerCDROMAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kContainerFloppyAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kContainerFolderAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kContainerHardDiskAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kContainerServerAliasType;
$CED1243A6D8675D23AA26E362B2F2329 kContainerTrashAliasType;
$5159DF5F69DB4B07E5314ED3C5415015 kContextualMenuItemsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kContextualMenuItemsFolderType;
$FDAE8CBC3770170F34248C8703349DD8 kControlAddFontSizeMask;
$EADEFB0D9D10BD61158D2BD30C69B08C kControlAddToMetaFontMask;
$21887551E2C2149C40A0CA416A262838 kControlAutoToggles;
$DD0C2E88F927CAF8A544BAA681558B19 kControlBehaviorCommandMenu;
$A8BCE545C8D5AD6448F30DD80C46F428 kControlBehaviorMultiValueMenu;
$A8BCE545C8D5AD6448F30DD80C46F428 kControlBehaviorOffsetContents;
$A8BCE545C8D5AD6448F30DD80C46F428 kControlBehaviorPushbutton;
$A8BCE545C8D5AD6448F30DD80C46F428 kControlBehaviorSingleValueMenu;
$A8BCE545C8D5AD6448F30DD80C46F428 kControlBehaviorSticky;
$A8BCE545C8D5AD6448F30DD80C46F428 kControlBehaviorToggles;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignBottom;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignBottomLeft;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignBottomRight;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignCenter;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignLeft;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignRight;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignSysDirection;
$4AA8601BF244E69FA445DD388E2BEBE9 kControlBevelButtonAlignTextCenter;
$4AA8601BF244E69FA445DD388E2BEBE9 kControlBevelButtonAlignTextFlushLeft;
$4AA8601BF244E69FA445DD388E2BEBE9 kControlBevelButtonAlignTextFlushRight;
$4AA8601BF244E69FA445DD388E2BEBE9 kControlBevelButtonAlignTextSysDirection;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignTop;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignTopLeft;
$EF54DD338448120D5D03777CCCA3C39F kControlBevelButtonAlignTopRight;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonCenterPopupGlyphTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonContentTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonGraphicAlignTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonGraphicOffsetTag;
$F3BA5325C11617CF2A8A81ECD57955C7 kControlBevelButtonKindTag;
$673220B32B406F0A3D4A8C22713F8BDC kControlBevelButtonLargeBevel;
$95EFD4D51A3B5E408C8EC477B7BD51B4 kControlBevelButtonLargeBevelProc;
$B23DF18DC82B0CC17A1F6E1D80800937 kControlBevelButtonLargeBevelVariant;
$69D0409C2CBABAF8BCB4C6A59F9D93BD kControlBevelButtonLastMenuTag;
$69D0409C2CBABAF8BCB4C6A59F9D93BD kControlBevelButtonMenuDelayTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonMenuHandleTag;
$692EF05CA8CD20D6E40A5A70B9F842CC kControlBevelButtonMenuOnBottom;
$692EF05CA8CD20D6E40A5A70B9F842CC kControlBevelButtonMenuOnRight;
$B23DF18DC82B0CC17A1F6E1D80800937 kControlBevelButtonMenuOnRightVariant;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonMenuRefTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonMenuValueTag;
$673220B32B406F0A3D4A8C22713F8BDC kControlBevelButtonNormalBevel;
$95EFD4D51A3B5E408C8EC477B7BD51B4 kControlBevelButtonNormalBevelProc;
$B23DF18DC82B0CC17A1F6E1D80800937 kControlBevelButtonNormalBevelVariant;
$F3BA5325C11617CF2A8A81ECD57955C7 kControlBevelButtonOwnedMenuRefTag;
$4F3F40F32132DE8826BF7A2DCEE957A7 kControlBevelButtonPlaceAboveGraphic;
$4F3F40F32132DE8826BF7A2DCEE957A7 kControlBevelButtonPlaceBelowGraphic;
$4F3F40F32132DE8826BF7A2DCEE957A7 kControlBevelButtonPlaceNormally;
$4F3F40F32132DE8826BF7A2DCEE957A7 kControlBevelButtonPlaceSysDirection;
$4F3F40F32132DE8826BF7A2DCEE957A7 kControlBevelButtonPlaceToLeftOfGraphic;
$4F3F40F32132DE8826BF7A2DCEE957A7 kControlBevelButtonPlaceToRightOfGraphic;
$625FFD2690C28CD77AD226DF5BC4FF71 kControlBevelButtonScaleIconTag;
$673220B32B406F0A3D4A8C22713F8BDC kControlBevelButtonSmallBevel;
$95EFD4D51A3B5E408C8EC477B7BD51B4 kControlBevelButtonSmallBevelProc;
$B23DF18DC82B0CC17A1F6E1D80800937 kControlBevelButtonSmallBevelVariant;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonTextAlignTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonTextOffsetTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonTextPlaceTag;
$34C391497873CBDA4D27A6E235EC390E kControlBevelButtonTransformTag;
$503AC35FC2DDADB880EE691A3232EBA1 kControlBoundsChangePositionChanged;
$503AC35FC2DDADB880EE691A3232EBA1 kControlBoundsChangeSizeChanged;
$45538689ED341DD171B83D2362323BFF kControlButtonPart;
$170F9D9AAA6AD57A7C24E3FE30E727F5 kControlChasingArrowsAnimatingTag;
$6C5A79F42EDD69BFB4ED4F28CD1828DD kControlChasingArrowsProc;
$557610947C2F5853115DF338016A2D62 kControlCheckBoxAutoToggleProc;
$D58B658B3F17E3694A96E3003D90C049 kControlCheckBoxCheckedValue;
$D58B658B3F17E3694A96E3003D90C049 kControlCheckBoxMixedValue;
$45538689ED341DD171B83D2362323BFF kControlCheckBoxPart;
$E50C162497E6E9DD0A24FB9F8DBA1527 kControlCheckBoxProc;
$D58B658B3F17E3694A96E3003D90C049 kControlCheckBoxUncheckedValue;
$45538689ED341DD171B83D2362323BFF kControlClockAMPMPart;
$787A465243FFAF7ABF678BDECA87F49B kControlClockAnimatingTag;
$7B7704856BCE95E06A4A5CC8319AE6F7 kControlClockDateProc;
$C1499C5887A10755D880662AE25D9DDA kControlClockFlagDisplayOnly;
$C1499C5887A10755D880662AE25D9DDA kControlClockFlagLive;
$C1499C5887A10755D880662AE25D9DDA kControlClockFlagStandard;
$787A465243FFAF7ABF678BDECA87F49B kControlClockFontStyleTag;
$45538689ED341DD171B83D2362323BFF kControlClockHourDayPart;
$C1499C5887A10755D880662AE25D9DDA kControlClockIsDisplayOnly;
$C1499C5887A10755D880662AE25D9DDA kControlClockIsLive;
$787A465243FFAF7ABF678BDECA87F49B kControlClockLongDateTag;
$45538689ED341DD171B83D2362323BFF kControlClockMinuteMonthPart;
$7B7704856BCE95E06A4A5CC8319AE6F7 kControlClockMonthYearProc;
$C1499C5887A10755D880662AE25D9DDA kControlClockNoFlags;
$45538689ED341DD171B83D2362323BFF kControlClockPart;
$45538689ED341DD171B83D2362323BFF kControlClockSecondYearPart;
$7B7704856BCE95E06A4A5CC8319AE6F7 kControlClockTimeProc;
$7B7704856BCE95E06A4A5CC8319AE6F7 kControlClockTimeSecondsProc;
$E8A3E233F1CEC86CB5E23EA86294A7B0 kControlClockTypeHourMinute;
$E8A3E233F1CEC86CB5E23EA86294A7B0 kControlClockTypeHourMinuteSecond;
$E8A3E233F1CEC86CB5E23EA86294A7B0 kControlClockTypeMonthDayYear;
$E8A3E233F1CEC86CB5E23EA86294A7B0 kControlClockTypeMonthYear;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagBounds;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagCommand;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagIDID;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagIDSignature;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagMaximum;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagMinimum;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagRefCon;
$391EF62022B5F055B9F06E57B6F22A6C kControlCollectionTagSubControls;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagTitle;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagUnicodeTitle;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagValue;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagVarCode;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagViewSize;
$0229D504423B1860DCC3C74844540279 kControlCollectionTagVisibility;
$3F1EED89F0F6EF15ABDBABE74E4ECF37 kControlColorTableResourceType;
$009AA9BCCC426E323765130C670B7B3B kControlCommand;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentCIconHandle;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentCIconRes;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentICON;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentICONRes;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentIconRef;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentIconSuiteHandle;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentIconSuiteRes;
$B3D08237BA9B71381140D3D103C46D53 kControlContentMetaPart;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentPictHandle;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentPictRes;
$301BEF7BC6A7C60A6119F9876836D67F kControlContentTextOnly;
$45538689ED341DD171B83D2362323BFF kControlDataBrowserDraggedPart;
$90A172B1F531D2E2A5877D8C8A064F8B kControlDataBrowserEditTextKeyFilterTag;
$90A172B1F531D2E2A5877D8C8A064F8B kControlDataBrowserEditTextValidationProcTag;
$90A172B1F531D2E2A5877D8C8A064F8B kControlDataBrowserIncludesFrameAndFocusTag;
$90A172B1F531D2E2A5877D8C8A064F8B kControlDataBrowserKeyFilterTag;
$45538689ED341DD171B83D2362323BFF kControlDataBrowserPart;
$35ABA4C7EB65B9ACD7BBB244B5700913 kControlDefObjectClass;
$35ABA4C7EB65B9ACD7BBB244B5700913 kControlDefProcPtr;
$3F1EED89F0F6EF15ABDBABE74E4ECF37 kControlDefProcResourceType;
$3F1EED89F0F6EF15ABDBABE74E4ECF37 kControlDefProcType;
$333B154C3EB4D8DDCA6A976D4C3734A3 kControlDialogItem;
$BC2AD7A9F2D3B0C1A8C63E28A58161AB kControlDisabledPart;
$0ACE4948B5E85B528885E906C63FA43A kControlDisclosureButtonClosed;
$0ACE4948B5E85B528885E906C63FA43A kControlDisclosureButtonDisclosed;
$B0EC4D39231F5FAD36C403190F446329 kControlDisclosureTrianglePointDefault;
$B0EC4D39231F5FAD36C403190F446329 kControlDisclosureTrianglePointLeft;
$B0EC4D39231F5FAD36C403190F446329 kControlDisclosureTrianglePointRight;
$45538689ED341DD171B83D2362323BFF kControlDownButtonPart;
$6B35D24B44D7890B9E9CA4C6440685EA kControlEditTextCFStringTag;
$A0046113F0A19D123123D9538FF827D3 kControlEditTextFixedTextTag;
$D47171718882B5F9DC2728A22C57CF62 kControlEditTextInlineInputProc;
$A0046113F0A19D123123D9538FF827D3 kControlEditTextInlinePostUpdateProcTag;
$A0046113F0A19D123123D9538FF827D3 kControlEditTextInlinePreUpdateProcTag;
$8559F285428DDA8BF9CDD5ADAA147F38 kControlEditTextKeyFilterTag;
$A0046113F0A19D123123D9538FF827D3 kControlEditTextKeyScriptBehaviorTag;
$A0046113F0A19D123123D9538FF827D3 kControlEditTextLockedTag;
$45538689ED341DD171B83D2362323BFF kControlEditTextPart;
$6B35D24B44D7890B9E9CA4C6440685EA kControlEditTextPasswordCFStringTag;
$508FDDC4ED57855463FA955101DA6E0E kControlEditTextPasswordProc;
$8559F285428DDA8BF9CDD5ADAA147F38 kControlEditTextPasswordTag;
$508FDDC4ED57855463FA955101DA6E0E kControlEditTextProc;
$8559F285428DDA8BF9CDD5ADAA147F38 kControlEditTextSelectionTag;
$FEB03A8004D90CBF5D4E8D605CFF82A7 kControlEditTextSingleLineTag;
$8559F285428DDA8BF9CDD5ADAA147F38 kControlEditTextStyleTag;
$8559F285428DDA8BF9CDD5ADAA147F38 kControlEditTextTEHandleTag;
$8559F285428DDA8BF9CDD5ADAA147F38 kControlEditTextTextTag;
$A0046113F0A19D123123D9538FF827D3 kControlEditTextValidationProcTag;
$DBAAB33D7A133109C56ED856CBEE5281 kControlEditUnicodeTextPasswordProc;
$7C26693F71BA1EC40F7CB0C262C87D25 kControlEditUnicodeTextPostUpdateProcTag;
$DBAAB33D7A133109C56ED856CBEE5281 kControlEditUnicodeTextProc;
$B4EAC711D13277CD2E7F80A8425464A8 kControlEntireControl;
$091F7672764E08BA49E41E543956B24C kControlFocusNextPart;
$091F7672764E08BA49E41E543956B24C kControlFocusNoPart;
$091F7672764E08BA49E41E543956B24C kControlFocusPrevPart;
$4B8C153600DFDFD356D9225BB9018CE9 kControlFontBigSystemFont;
$4B8C153600DFDFD356D9225BB9018CE9 kControlFontSmallBoldSystemFont;
$4B8C153600DFDFD356D9225BB9018CE9 kControlFontSmallSystemFont;
$CE90ACC5524712E199FEDD3F0CA947D6 kControlFontStyleTag;
$4B8C153600DFDFD356D9225BB9018CE9 kControlFontViewSystemFont;
$21887551E2C2149C40A0CA416A262838 kControlGetsFocusOnClick;
$D28CEA8A385303390D1F3E8E0DD096FE kControlGroupBoxCheckBoxProc;
$FC7D69792D431B8BDD9B1FBD2BAA1AA8 kControlGroupBoxFontStyleTag;
$FC7D69792D431B8BDD9B1FBD2BAA1AA8 kControlGroupBoxMenuHandleTag;
$FC7D69792D431B8BDD9B1FBD2BAA1AA8 kControlGroupBoxMenuRefTag;
$D28CEA8A385303390D1F3E8E0DD096FE kControlGroupBoxPopupButtonProc;
$D28CEA8A385303390D1F3E8E0DD096FE kControlGroupBoxSecondaryCheckBoxProc;
$D28CEA8A385303390D1F3E8E0DD096FE kControlGroupBoxSecondaryPopupButtonProc;
$D28CEA8A385303390D1F3E8E0DD096FE kControlGroupBoxSecondaryTextTitleProc;
$D28CEA8A385303390D1F3E8E0DD096FE kControlGroupBoxTextTitleProc;
$3319A1FBB374FBE17A00D08E7017EFC7 kControlGroupBoxTitleRectTag;
$21887551E2C2149C40A0CA416A262838 kControlHandlesTracking;
$21887551E2C2149C40A0CA416A262838 kControlHasRadioBehavior;
$21887551E2C2149C40A0CA416A262838 kControlHasSpecialBackground;
$7188CC058236FE27AACD0AFED9EAC98F kControlIconAlignmentTag;
$B0997FC7FE24CA18BD367E175894AC6A kControlIconContentTag;
$C704602AAA1468B19E618412D15357F7 kControlIconNoTrackProc;
$45538689ED341DD171B83D2362323BFF kControlIconPart;
$C704602AAA1468B19E618412D15357F7 kControlIconProc;
$700918E380CED4B535F25069B938F55A kControlIconRefNoTrackProc;
$700918E380CED4B535F25069B938F55A kControlIconRefProc;
$B0997FC7FE24CA18BD367E175894AC6A kControlIconResourceIDTag;
$C704602AAA1468B19E618412D15357F7 kControlIconSuiteNoTrackProc;
$C704602AAA1468B19E618412D15357F7 kControlIconSuiteProc;
$7188CC058236FE27AACD0AFED9EAC98F kControlIconTransformTag;
$21887551E2C2149C40A0CA416A262838 kControlIdlesWithTimer;
$604116210664E432BA444CDFDF57658A kControlImageWellContentTag;
$604116210664E432BA444CDFDF57658A kControlImageWellIsDragDestinationTag;
$45538689ED341DD171B83D2362323BFF kControlImageWellPart;
$D045BEECDAAD810680745CAB3ED4EE0E kControlImageWellProc;
$604116210664E432BA444CDFDF57658A kControlImageWellTransformTag;
$BC2AD7A9F2D3B0C1A8C63E28A58161AB kControlInactivePart;
$BC2AD7A9F2D3B0C1A8C63E28A58161AB kControlIndicatorPart;
$EBA03A67F43C2B84F7C8452D5147463B kControlKeyFilterBlockKey;
$EBA03A67F43C2B84F7C8452D5147463B kControlKeyFilterPassKey;
$CE90ACC5524712E199FEDD3F0CA947D6 kControlKeyFilterTag;
$F8BBA3C521FE3F4A2C5549C4FE6730AE kControlKeyScriptBehaviorAllowAnyScript;
$F8BBA3C521FE3F4A2C5549C4FE6730AE kControlKeyScriptBehaviorPrefersRoman;
$F8BBA3C521FE3F4A2C5549C4FE6730AE kControlKeyScriptBehaviorRequiresRoman;
$E21D841B3521E7E175FBFC053452B0D1 kControlKindBevelButton;
$92B135529D45047D85CB70718E397D9E kControlKindChasingArrows;
$0DE4FE36E4BB3BB57C46986B8C12D1CA kControlKindCheckBox;
$15BFCB8F46334C75258FAB9C014D7B72 kControlKindCheckGroupBox;
$EF4638CE45AB23AECA5954410CBFAE34 kControlKindClock;
$4E867832F7DE3EB21C30DC1860412BF9 kControlKindDataBrowser;
$3F55E8EE78983D92DFC09B6D4C85924E kControlKindDisclosureButton;
$5117BBEFCEB750B571E36F45E6810F71 kControlKindDisclosureTriangle;
$40189C745D9296067E8038D347E9C4EF kControlKindEditText;
$11F239D662155182E8A6ED74AE3D52F8 kControlKindEditUnicodeText;
$15BFCB8F46334C75258FAB9C014D7B72 kControlKindGroupBox;
$1D580E3239D7EF3A82580DF952031B2D kControlKindHIComboBox;
$DC30A4D242EEF8641FF89880B1C2C030 kControlKindIcon;
$55921B6EEA64DFF10C90019A7B523E7B kControlKindImageWell;
$AAEC5B576D105B80EAA5E444CC880605 kControlKindListBox;
$71D4DD2438E3447408BF7A5B560BD43C kControlKindLittleArrows;
$C9BC48A3711C61416D7290D1B22990B0 kControlKindPicture;
$DB2B3B8D34736BD2DFAC06A7CC353854 kControlKindPlacard;
$D5ACE8290025A0071DF5E74053B03F87 kControlKindPopupArrow;
$C195CC658465305661C31FBCC06C4B3E kControlKindPopupButton;
$15BFCB8F46334C75258FAB9C014D7B72 kControlKindPopupGroupBox;
$964C99289588181971E931D0E1A353A8 kControlKindProgressBar;
$0DE4FE36E4BB3BB57C46986B8C12D1CA kControlKindPushButton;
$0DE4FE36E4BB3BB57C46986B8C12D1CA kControlKindPushIconButton;
$0DE4FE36E4BB3BB57C46986B8C12D1CA kControlKindRadioButton;
$C5379AC028464AF0B84522D966250B53 kControlKindRadioGroup;
$964C99289588181971E931D0E1A353A8 kControlKindRelevanceBar;
$7ECF5F8138411AC066723DCEDD10846E kControlKindRoundButton;
$5FFD12F4491DAEA7E62D9F260A1E602A kControlKindScrollBar;
$C7E6F4478A7E82E709BE0FC86BF52DB9 kControlKindScrollingTextBox;
$CCFF566BB3A84D88E47AAA584977BC3E kControlKindSeparator;
$EBC6E809812AAB1BEB0CEF7A1F49943F kControlKindSignatureApple;
$875CCFBF850F015C3E8DEE1BB74C59D6 kControlKindSlider;
$6F46896C17C23155BB80EB8172764E5A kControlKindStaticText;
$41966F5C7E6284563950F7B08A418343 kControlKindTabs;
$CE90ACC5524712E199FEDD3F0CA947D6 kControlKindTag;
$7FDCD2BD7BCB2EFF4F58B0A742373EEC kControlKindUserPane;
$DD06FF921A71B59047FA528B9A71B464 kControlKindWindowHeader;
$45538689ED341DD171B83D2362323BFF kControlLabelPart;
$850F2953EBB380887D87C7CFB8D8266F kControlListBoxAutoSizeProc;
$45538689ED341DD171B83D2362323BFF kControlListBoxDoubleClickPart;
$89B8FA63C039A7EADCBC5A9802394822 kControlListBoxDoubleClickTag;
$E9F27045D8577C5C125D0ABFB9729540 kControlListBoxFontStyleTag;
$E9F27045D8577C5C125D0ABFB9729540 kControlListBoxKeyFilterTag;
$89B8FA63C039A7EADCBC5A9802394822 kControlListBoxLDEFTag;
$E9F27045D8577C5C125D0ABFB9729540 kControlListBoxListHandleTag;
$45538689ED341DD171B83D2362323BFF kControlListBoxPart;
$850F2953EBB380887D87C7CFB8D8266F kControlListBoxProc;
$8ABDBD1C3DE96ED49E011A50928BF57C kControlListDescResType;
$7085B25DBE53100CA61BFB5EC1F90FD2 kControlLittleArrowsProc;
$45538689ED341DD171B83D2362323BFF kControlMenuPart;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgActivate;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgApplyTextColor;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgCalcBestRect;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgCalcValueFromPos;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgContextualMenuClick;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgDisplayDebugInfo;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgDragEnter;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgDragLeave;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgDragReceive;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgDragWithin;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgDrawGhost;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgFlatten;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgFocus;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgGetClickActivation;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgGetData;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgGetFeatures;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgGetRegion;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgHandleTracking;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgIdle;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgKeyDown;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgSetCursor;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgSetData;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgSetUpBackground;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgSubControlAdded;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgSubControlRemoved;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgSubValueChanged;
$4D21454FAD90E25BD2497F2FB4C4BB43 kControlMsgTestNewMsgSupport;
$301BEF7BC6A7C60A6119F9876836D67F kControlNoContent;
$BC2AD7A9F2D3B0C1A8C63E28A58161AB kControlNoPart;
$85773EF235C429F3A8FA1EA8B3C6BC5B kControlNoVariant;
$45538689ED341DD171B83D2362323BFF kControlPageDownPart;
$45538689ED341DD171B83D2362323BFF kControlPageUpPart;
$5159DF5F69DB4B07E5314ED3C5415015 kControlPanelDisabledFolderIcon;
$ADBD11780E2D799B74D44FEA6B34E12D kControlPanelDisabledFolderType;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kControlPanelFolderAliasType;
$5159DF5F69DB4B07E5314ED3C5415015 kControlPanelFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kControlPanelFolderIconResource;
$191BACAFE1C79A4AFD6F08B231C40E86 kControlPanelFolderType;
$AA74A62FE0901ABD321579DB5FA40B7E kControlPictureHandleTag;
$0BD8C9BA5C51A518CA6C6B989871AE0B kControlPictureNoTrackProc;
$45538689ED341DD171B83D2362323BFF kControlPicturePart;
$0BD8C9BA5C51A518CA6C6B989871AE0B kControlPictureProc;
$D83951028F190CA9FFA322BBE5CBF6BE kControlPlacardProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowEastProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowNorthProc;
$B7727C66ADD3E540317138C1987DAE67 kControlPopupArrowOrientationEast;
$B7727C66ADD3E540317138C1987DAE67 kControlPopupArrowOrientationNorth;
$B7727C66ADD3E540317138C1987DAE67 kControlPopupArrowOrientationSouth;
$B7727C66ADD3E540317138C1987DAE67 kControlPopupArrowOrientationWest;
$269049E339B2E8B3E92830648C8FA0A4 kControlPopupArrowSizeNormal;
$269049E339B2E8B3E92830648C8FA0A4 kControlPopupArrowSizeSmall;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowSmallEastProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowSmallNorthProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowSmallSouthProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowSmallWestProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowSouthProc;
$6D31D2A0DAD3010F25406B835B73DF06 kControlPopupArrowWestProc;
$6110530A6819BAAC4FDDABACFB6E8AA9 kControlPopupButtonCheckCurrentTag;
$AAD11A300A0B38B67B0E576D475523C2 kControlPopupButtonExtraHeightTag;
$2379AEEB213550793D5FB5357FEA0C82 kControlPopupButtonMenuHandleTag;
$2379AEEB213550793D5FB5357FEA0C82 kControlPopupButtonMenuIDTag;
$2379AEEB213550793D5FB5357FEA0C82 kControlPopupButtonMenuRefTag;
$AAD11A300A0B38B67B0E576D475523C2 kControlPopupButtonOwnedMenuRefTag;
$E426A6CE6BC3667EBB9C7729EE5896F0 kControlPopupButtonProc;
$E426A6CE6BC3667EBB9C7729EE5896F0 kControlPopupFixedWidthVariant;
$E426A6CE6BC3667EBB9C7729EE5896F0 kControlPopupUseAddResMenuVariant;
$E426A6CE6BC3667EBB9C7729EE5896F0 kControlPopupUseWFontVariant;
$E426A6CE6BC3667EBB9C7729EE5896F0 kControlPopupVariableWidthVariant;
$FB60DCCDF25B8B74A12592F07454F67B kControlProgressBarAnimatingTag;
$FB60DCCDF25B8B74A12592F07454F67B kControlProgressBarIndeterminateTag;
$0BB5C76A6C2489DC876B6609A9426F97 kControlProgressBarProc;
$92118AD72459216503075DD7897E75F1 kControlPropertyPersistent;
$E50C162497E6E9DD0A24FB9F8DBA1527 kControlPushButLeftIconProc;
$E50C162497E6E9DD0A24FB9F8DBA1527 kControlPushButRightIconProc;
$06D0183FCC4E9E14A161112D90EC2AA5 kControlPushButtonCancelTag;
$06D0183FCC4E9E14A161112D90EC2AA5 kControlPushButtonDefaultTag;
$E669A1C9BCBD48726950A62BFF5132F7 kControlPushButtonIconOnLeft;
$E669A1C9BCBD48726950A62BFF5132F7 kControlPushButtonIconOnRight;
$E50C162497E6E9DD0A24FB9F8DBA1527 kControlPushButtonProc;
$557610947C2F5853115DF338016A2D62 kControlRadioButtonAutoToggleProc;
$54AD728990153724B0D67DC477F6B3CE kControlRadioButtonCheckedValue;
$54AD728990153724B0D67DC477F6B3CE kControlRadioButtonMixedValue;
$45538689ED341DD171B83D2362323BFF kControlRadioButtonPart;
$E50C162497E6E9DD0A24FB9F8DBA1527 kControlRadioButtonProc;
$54AD728990153724B0D67DC477F6B3CE kControlRadioButtonUncheckedValue;
$45538689ED341DD171B83D2362323BFF kControlRadioGroupPart;
$AA736588CD12C216F3B9C339A41F6524 kControlRadioGroupProc;
$0BB5C76A6C2489DC876B6609A9426F97 kControlRelevanceBarProc;
$A58116950EA4073DB331FAF46E8B017C kControlRoundButtonContentTag;
$98A64AF649328A112F24B4C33556BF9B kControlRoundButtonLargeSize;
$98A64AF649328A112F24B4C33556BF9B kControlRoundButtonNormalSize;
$A58116950EA4073DB331FAF46E8B017C kControlRoundButtonSizeTag;
$0FD93849657B1728D859F4D2CD9B52B7 kControlScrollBarLiveProc;
$0FD93849657B1728D859F4D2CD9B52B7 kControlScrollBarProc;
$87CF7011E3DB2326401331F90512ED7A kControlScrollBarShowsArrowsTag;
$82F155B15B968A73FA8DECBA986E0AA4 kControlScrollTextBoxAnimatingTag;
$82F155B15B968A73FA8DECBA986E0AA4 kControlScrollTextBoxAutoScrollAmountTag;
$BF43AAD41ADCCAEC838DD520AED3D2CB kControlScrollTextBoxAutoScrollProc;
$82F155B15B968A73FA8DECBA986E0AA4 kControlScrollTextBoxContentsTag;
$82F155B15B968A73FA8DECBA986E0AA4 kControlScrollTextBoxDelayBeforeAutoScrollTag;
$82F155B15B968A73FA8DECBA986E0AA4 kControlScrollTextBoxDelayBetweenAutoScrollTag;
$BF43AAD41ADCCAEC838DD520AED3D2CB kControlScrollTextBoxProc;
$272B4F0FE83535531408DA43A2641E72 kControlSeparatorLineProc;
$A03C5318120AC81DFA293182B8EA7625 kControlSizeAuto;
$A03C5318120AC81DFA293182B8EA7625 kControlSizeLarge;
$A03C5318120AC81DFA293182B8EA7625 kControlSizeNormal;
$A03C5318120AC81DFA293182B8EA7625 kControlSizeSmall;
$CE90ACC5524712E199FEDD3F0CA947D6 kControlSizeTag;
$1283A0DA6CAB0A3868EA56F9A3F42ADF kControlSliderDoesNotPoint;
$BF5628ADA32D079BB88EF91E972405D8 kControlSliderHasTickMarks;
$BF5628ADA32D079BB88EF91E972405D8 kControlSliderLiveFeedback;
$BF5628ADA32D079BB88EF91E972405D8 kControlSliderNonDirectional;
$1283A0DA6CAB0A3868EA56F9A3F42ADF kControlSliderPointsDownOrRight;
$1283A0DA6CAB0A3868EA56F9A3F42ADF kControlSliderPointsUpOrLeft;
$BF5628ADA32D079BB88EF91E972405D8 kControlSliderProc;
$BF5628ADA32D079BB88EF91E972405D8 kControlSliderReverseDirection;
$1A266AEDA19938EF9EF7FAF9095126EC kControlStaticTextCFStringTag;
$C34DCDCC44ECF4FFFA7514A493E23E0E kControlStaticTextProc;
$74EF8192D4FF6DC67811AAC027542614 kControlStaticTextStyleTag;
$74EF8192D4FF6DC67811AAC027542614 kControlStaticTextTextHeightTag;
$74EF8192D4FF6DC67811AAC027542614 kControlStaticTextTextTag;
$0F056847C7D9D2AAEA687063E1798BB6 kControlStaticTextTruncTag;
$5159DF5F69DB4B07E5314ED3C5415015 kControlStripModulesFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kControlStripModulesFolderType;
$B3D08237BA9B71381140D3D103C46D53 kControlStructureMetaPart;
$21887551E2C2149C40A0CA416A262838 kControlSupportsCalcBestRect;
$21887551E2C2149C40A0CA416A262838 kControlSupportsClickActivation;
$21887551E2C2149C40A0CA416A262838 kControlSupportsContextualMenus;
$21887551E2C2149C40A0CA416A262838 kControlSupportsDataAccess;
$21887551E2C2149C40A0CA416A262838 kControlSupportsDragAndDrop;
$21887551E2C2149C40A0CA416A262838 kControlSupportsEmbedding;
$21887551E2C2149C40A0CA416A262838 kControlSupportsFlattening;
$21887551E2C2149C40A0CA416A262838 kControlSupportsFocus;
$21887551E2C2149C40A0CA416A262838 kControlSupportsGetRegion;
$21887551E2C2149C40A0CA416A262838 kControlSupportsGhosting;
$21887551E2C2149C40A0CA416A262838 kControlSupportsLiveFeedback;
$B909D5693024809AC6FC2A1B5A21A07C kControlSupportsNewMessages;
$21887551E2C2149C40A0CA416A262838 kControlSupportsSetCursor;
$D859578BB1594FD3B2AE404EFEB15DE3 kControlTabContentRectTag;
$354762F32BABF820C20F799DF5C6EFDF kControlTabDirectionEast;
$354762F32BABF820C20F799DF5C6EFDF kControlTabDirectionNorth;
$354762F32BABF820C20F799DF5C6EFDF kControlTabDirectionSouth;
$354762F32BABF820C20F799DF5C6EFDF kControlTabDirectionWest;
$D859578BB1594FD3B2AE404EFEB15DE3 kControlTabEnabledFlagTag;
$D859578BB1594FD3B2AE404EFEB15DE3 kControlTabFontStyleTag;
$245F523005B30D9A0387709DF3735A23 kControlTabImageContentTag;
$2FAD546653DFDD791220E09C8A430711 kControlTabInfoTag;
$3F2E022F9AD84251AFA3AB3732081C7E kControlTabInfoVersionOne;
$3F2E022F9AD84251AFA3AB3732081C7E kControlTabInfoVersionZero;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabLargeEastProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabLargeNorthProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabLargeProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabLargeSouthProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabLargeWestProc;
$8ABDBD1C3DE96ED49E011A50928BF57C kControlTabListResType;
$1F6F3039D2CD4DB1DBCC03814E61789D kControlTabSizeLarge;
$1F6F3039D2CD4DB1DBCC03814E61789D kControlTabSizeSmall;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabSmallEastProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabSmallNorthProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabSmallProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabSmallSouthProc;
$3CE8173260C6942BDB9197E4D0449AFD kControlTabSmallWestProc;
$3F1EED89F0F6EF15ABDBABE74E4ECF37 kControlTemplateResourceType;
$0B9B56AD7CDDC864BCB9FEAA060D8B76 kControlTriangleAutoToggleProc;
$B09F953D3A89FA02794FDE8A08242BDD kControlTriangleLastValueTag;
$0B9B56AD7CDDC864BCB9FEAA060D8B76 kControlTriangleLeftFacingAutoToggleProc;
$0B9B56AD7CDDC864BCB9FEAA060D8B76 kControlTriangleLeftFacingProc;
$45538689ED341DD171B83D2362323BFF kControlTrianglePart;
$0B9B56AD7CDDC864BCB9FEAA060D8B76 kControlTriangleProc;
$A1E1BAD5B418D85708692C2D8BF7B43D kControlUnicode;
$45538689ED341DD171B83D2362323BFF kControlUpButtonPart;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseAllMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseBackColorMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseFaceMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseFontMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseForeColorMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseJustMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseModeMask;
$FDAE8CBC3770170F34248C8703349DD8 kControlUseSizeMask;
$D0F97DFE6874EFB6A111022B8B6745A6 kControlUseThemeFontIDMask;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserItemDrawProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneActivateProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneBackgroundProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneDrawProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneFocusProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneHitTestProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneIdleProcTag;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneKeyDownProcTag;
$9C17A28C9B08FD6DF0F6D1C979D6C613 kControlUserPaneProc;
$5722F06485C779D53A7EC49A63E7A8E8 kControlUserPaneTrackingProcTag;
$85773EF235C429F3A8FA1EA8B3C6BC5B kControlUsesOwningWindowsFontVariant;
$21887551E2C2149C40A0CA416A262838 kControlWantsActivate;
$21887551E2C2149C40A0CA416A262838 kControlWantsIdle;
$495415BA3EC6C74152385F9CB15CDFEE kControlWindowHeaderProc;
$495415BA3EC6C74152385F9CB15CDFEE kControlWindowListViewHeaderProc;
$A261E92C82250443DCF4E199E1935CB2 kConvertedText;
$4693F9F93A5130D57E44F485B4108586 kConverterSubType;
$B97F11227C25099F5B433CE2ADEE3443 kConvolved;
$B97F11227C25099F5B433CE2ADEE3443 kConvolvedMask;
$E68877BB40C38A07990A1C21F90F1D08 kCooperativeThread;
$6DCB6EFD6E384A673675DFF760004FA6 kCoreEventClass;
$CC091832F316327152ED0A035D8C4D44 kCoreServicesFolderType;
$48581DA6325892AC46A0B2E89C776E96 kCreateCustomIcon;
$06BA4544A28775A78FBF2BA446BEB3FC kCreateFolder;
$1FE4825E5554DB7C18E963222B630869 kCreateFolderAtBoot;
$1FE4825E5554DB7C18E963222B630869 kCreateFolderAtBootBit;
$6779799A31BDCCE02DD843853CB38533 kCreateIfNeeded;
$56EDAB68D3F8BADD4C371F358805869C kCreateSoundSource;
$5B004150561D8A57B6AEE998E4910F58 kCreationDateKCItemAttr;
$5B004150561D8A57B6AEE998E4910F58 kCreatorKCItemAttr;
$F48B7CE327998370AF8756B9AE1880C3 kCurrCFragResourceVersion;
MACRO_kCurrentAddressSpaceID kCurrentAddressSpaceID;
$1C0C3C8370802BC4721724909FD85E09 kCurrentCapacityIsActualValue;
$1C0C3C8370802BC4721724909FD85E09 kCurrentCapacityIsPercentOfMax;
$FA7D86790EBD3E722BDBB9BDA2309351 kCurrentMixedModeStateRecord;
$02DFC17C15CF25E929830BB781289EB8 kCurrentPowerSourceVersion;
$28BE9745FBFAC7613E1AD2B56AA356CB kCurrentProcess;
$40A4AD514222E8EC45F8250D13AFC8D6 kCurrentThreadID;
$766A84489E7C2A66DAB1AA7267D55A44 kCurrentUserFolderLocation;
$1BD52C00E239FD3836B0B5E2BBDE1F4D kCurrentUserFolderType;
$1BD52C00E239FD3836B0B5E2BBDE1F4D kCurrentUserRemoteFolderLocation;
$1BD52C00E239FD3836B0B5E2BBDE1F4D kCurrentUserRemoteFolderType;
$29926AB924E42B27C90E0FDA4D67BBF6 kCursiveConnectionType;
$E8A1810B7AC84F453CCC5F003130BDCA kCursiveSelector;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentAnimate;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentDraw;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentErase;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentGetInfo;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentInit;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentLastReserved;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentMove;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentReconfigure;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentSetData;
$EDF30F31F7E168098AE3F7F6B85AF557 kCursorComponentSetOutputMode;
$F6FD1746EA3359FB09885CF75DCCF700 kCursorComponentType;
$4491697A76485B1F4A2D6907F88A4853 kCursorComponentsVersion;
$386EDE6329DAB2239299F98F42FE6EAA kCursorImageMajorVersion;
$386EDE6329DAB2239299F98F42FE6EAA kCursorImageMinorVersion;
$8AA633FCFA1D9FD646CF7708E54681B7 kCustomBadgeResourceID;
$8AA633FCFA1D9FD646CF7708E54681B7 kCustomBadgeResourceType;
$8AA633FCFA1D9FD646CF7708E54681B7 kCustomBadgeResourceVersion;
$5B004150561D8A57B6AEE998E4910F58 kCustomIconKCItemAttr;
$DC395A9A531C6366FB43CFD85592BA96 kCustomIconResource;
$768C2AF2BA4795B0EBD762573A709F14 kD0DispatchedCStackBased;
$768C2AF2BA4795B0EBD762573A709F14 kD0DispatchedPascalStackBased;
$768C2AF2BA4795B0EBD762573A709F14 kD1DispatchedPascalStackBased;
$1C119E9720855ADE2B421A854DBE867A kDAVInSource;
$907B2FE18A21FC05B47F55F7CEFEA32F kDCMAllowListing;
$EE92965D0C788027E31666185F0367EF kDCMAnyFieldTag;
$EE92965D0C788027E31666185F0367EF kDCMAnyFieldType;
$FA8588582257D14C58BC673E6AA23058 kDCMBasicDictionaryClass;
$D093597E202C8828A1474E2AA4001B83 kDCMCanAddDictionaryFieldMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanCreateDictionaryMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanHaveMultipleIndexMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanModifyDictionaryMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanStreamDictionaryMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanUseFileDictionaryMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanUseMemoryDictionaryMask;
$D093597E202C8828A1474E2AA4001B83 kDCMCanUseTransactionMask;
$86F63DAABF6DB2E863810FA19E8D9842 kDCMDictionaryHeaderSignature;
$86F63DAABF6DB2E863810FA19E8D9842 kDCMDictionaryHeaderVersion;
$93204D36A7DDC20941771C7D67F9215A kDCMFindMethodBackwardTrie;
$93204D36A7DDC20941771C7D67F9215A kDCMFindMethodBeginningMatch;
$93204D36A7DDC20941771C7D67F9215A kDCMFindMethodContainsMatch;
$93204D36A7DDC20941771C7D67F9215A kDCMFindMethodEndingMatch;
$93204D36A7DDC20941771C7D67F9215A kDCMFindMethodExactMatch;
$93204D36A7DDC20941771C7D67F9215A kDCMFindMethodForwardTrie;
$F7257FDA08AD3BDF6A1A3031925FF0DA kDCMFixedSizeFieldMask;
$F7257FDA08AD3BDF6A1A3031925FF0DA kDCMHiddenFieldMask;
$F7257FDA08AD3BDF6A1A3031925FF0DA kDCMIdentifyFieldMask;
$F7257FDA08AD3BDF6A1A3031925FF0DA kDCMIndexedFieldMask;
MACRO_kDCMInvalidObjectID kDCMInvalidObjectID;
MACRO_kDCMInvalidObjectRef kDCMInvalidObjectRef;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseAccentTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseAccentType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseFukugouInfoTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseFukugouInfoType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseHinshiTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseHinshiType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseHyokiTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseHyokiType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseOnKunReadingTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseOnKunReadingType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapanesePhoneticTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapanesePhoneticType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseWeightTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseWeightType;
$ED7CAEF585D86FDB2F5D234F21B1D596 kDCMJapaneseYomiTag;
$B09E962768348F57FD89EFB99D17EEC0 kDCMJapaneseYomiType;
$907B2FE18A21FC05B47F55F7CEFEA32F kDCMProhibitListing;
$24A1FC94C7293AD5C6BB41E78C51330A kDCMReadOnlyDictionary;
$24A1FC94C7293AD5C6BB41E78C51330A kDCMReadWriteDictionary;
$F7257FDA08AD3BDF6A1A3031925FF0DA kDCMRequiredFieldMask;
$FA8588582257D14C58BC673E6AA23058 kDCMSpecificDictionaryClass;
$FA8588582257D14C58BC673E6AA23058 kDCMUserDictionaryClass;
$93802A88477C6E425A6017FFE38F7CEA kDDCBlockSize;
$FAA8F50C6EE9F2B80B6350D5FBE87721 kDDCBlockTypeEDID;
$A2A3B97015A39488E2F6B427ADE8C31C kDDCConnect;
$8ED5D4216805043E7385FEFB2F76D95D kDDCForceReadBit;
$8ED5D4216805043E7385FEFB2F76D95D kDDCForceReadMask;
$68BF6022C044A554C82A650922375E31 kDDPAddressLength;
$789C54EFC0F124BC54455F4C073E1DBE kDHCPLongOption;
$789C54EFC0F124BC54455F4C073E1DBE kDHCPLongOptionReq;
$8738D3FFE8B55997E686F91E519B8E41 kDMCantBlock;
$8738D3FFE8B55997E686F91E519B8E41 kDMDisplayAlreadyInstalledErr;
$8738D3FFE8B55997E686F91E519B8E41 kDMDisplayNotFoundErr;
$8738D3FFE8B55997E686F91E519B8E41 kDMDriverNotDisplayMgrAwareErr;
$E36C642D3B5C3BFD408958EADC98AAAD kDMForceNumbersMask;
$8738D3FFE8B55997E686F91E519B8E41 kDMFoundErr;
$8738D3FFE8B55997E686F91E519B8E41 kDMGenErr;
$8738D3FFE8B55997E686F91E519B8E41 kDMMainDisplayCannotMoveErr;
$8738D3FFE8B55997E686F91E519B8E41 kDMMirroringBlocked;
$8738D3FFE8B55997E686F91E519B8E41 kDMMirroringNotOn;
$8738D3FFE8B55997E686F91E519B8E41 kDMMirroringOnAlready;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListExcludeCustomModesMask;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListExcludeDisplayModesMask;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListExcludeDriverModesMask;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListIncludeAllModesMask;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListIncludeOfflineModesMask;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListPreferSafeModesMask;
$2021B2FBC0CD9920FF956E8C358D708F kDMModeListPreferStretchedModesMask;
$8738D3FFE8B55997E686F91E519B8E41 kDMNoDeviceTableclothErr;
$8738D3FFE8B55997E686F91E519B8E41 kDMNotFoundErr;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyDependents;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyDisplayDidWake;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyDisplayWillSleep;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyEvent;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyExtendEvent;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyInstalled;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyPrep;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyRemoved;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyRequestConnectionProbe;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyRequestDisplayProbe;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifyResumeConfigure;
$8032B31145A0FC9C9DA9796AA6C13271 kDMNotifySuspendConfigure;
$D2405CA58F11C270804A3FBA8A9B83F5 kDMSModeFree;
$D2405CA58F11C270804A3FBA8A9B83F5 kDMSModeNotReady;
$D2405CA58F11C270804A3FBA8A9B83F5 kDMSModeReady;
$8738D3FFE8B55997E686F91E519B8E41 kDMSWNotInitializedErr;
$E36C642D3B5C3BFD408958EADC98AAAD kDMSupressNameMask;
$E36C642D3B5C3BFD408958EADC98AAAD kDMSupressNumbersMask;
$8738D3FFE8B55997E686F91E519B8E41 kDMWrongNumberOfDisplays;
$8D4D07E192BE4DF49363A655628BC0D2 kDPMSSyncMask;
$0A88CE6A6D9CB8403DF5704570E1EF2D kDPMSSyncOff;
$0A88CE6A6D9CB8403DF5704570E1EF2D kDPMSSyncOn;
$0A88CE6A6D9CB8403DF5704570E1EF2D kDPMSSyncStandby;
$0A88CE6A6D9CB8403DF5704570E1EF2D kDPMSSyncSuspend;
$4693F9F93A5130D57E44F485B4108586 kDSPSubType;
$BD4BA3E8B73228415244CB489F2EDECA kDSpConfirmSwitchWarning;
$BD4BA3E8B73228415244CB489F2EDECA kDSpContextAlreadyReservedErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpContextNotFoundErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpContextNotReservedErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpFrameRateNotReadyErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpInternalErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpInvalidAttributesErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpInvalidContextErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpNotInitializedErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpStereoContextErr;
$BD4BA3E8B73228415244CB489F2EDECA kDSpSystemSWTooOldErr;
$EC5A5BB55F00E557B54A503264B73F0C kDTPAbortJobErr;
$EC5A5BB55F00E557B54A503264B73F0C kDTPHoldJobErr;
$EC5A5BB55F00E557B54A503264B73F0C kDTPStopQueueErr;
$FCE5A80E13FB5E355557FB2DEB7ACD2B kDTPThirdPartySupported;
$EC5A5BB55F00E557B54A503264B73F0C kDTPTryAgainErr;
$18BF411237F175ABCD4A1D90A0B1F6B7 kDVAudioFormat;
$1C119E9720855ADE2B421A854DBE867A kDVDSource;
$18BF411237F175ABCD4A1D90A0B1F6B7 kDVIIntelIMAFormat;
$6D0E186233145241771508AFE8C2C7D5 kDataAccessKCEvent;
$39FE76983533385EB60014D19059B326 kDataAccessKCEventMask;
$1AC1C93A58AB6CB66948DE5864455995 kDataAlignmentException;
$1AC1C93A58AB6CB66948DE5864455995 kDataBreakpointException;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserAlwaysExtendSelection;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserCheckboxTriState;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserCheckboxType;
$50B9C278AD2007AD3B2B39730AC3300A kDataBrowserClientPropertyFlagsMask;
$50B9C278AD2007AD3B2B39730AC3300A kDataBrowserClientPropertyFlagsOffset;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserCmdTogglesSelection;
$4467094E749B101C02626E92DBB121D8 kDataBrowserColumnView;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserColumnViewPreviewProperty;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserContainerAliasIDProperty;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserContainerClosed;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserContainerClosing;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserContainerIsClosableProperty;
$ED00ED60679CE7C319363DD637FA5F31 kDataBrowserContainerIsOpen;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserContainerIsOpenableProperty;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserContainerIsSortableProperty;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserContainerOpened;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserContainerSorted;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserContainerSorting;
$FFEFDC583CD9A3E39879DD5EE3359846 kDataBrowserContentHit;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserCustomType;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserDateTimeDateOnly;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserDateTimeRelative;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserDateTimeSecondsToo;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserDateTimeTimeOnly;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserDateTimeType;
$388005F4F31217FC42F79FB8545CC0B2 kDataBrowserDefaultPropertyFlags;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserDoNotTruncateText;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserDragSelect;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgClear;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgCopy;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgCut;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgPaste;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgRedo;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgSelectAll;
$13397BB433CDB811F5BA4DD11FBCCF81 kDataBrowserEditMsgUndo;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserEditStarted;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserEditStopped;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserIconAndTextType;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserIconType;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserItemAdded;
$ED00ED60679CE7C319363DD637FA5F31 kDataBrowserItemAnyState;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserItemDeselected;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserItemDoubleClicked;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemIsActiveProperty;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemIsContainerProperty;
$ED00ED60679CE7C319363DD637FA5F31 kDataBrowserItemIsDragTarget;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemIsEditableProperty;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemIsSelectableProperty;
$ED00ED60679CE7C319363DD637FA5F31 kDataBrowserItemIsSelected;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemNoProperty;
$ED00ED60679CE7C319363DD637FA5F31 kDataBrowserItemNoState;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemParentContainerProperty;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserItemRemoved;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserItemSelected;
$B67A831383104888CFCD9F4E48AE98A6 kDataBrowserItemSelfIdentityProperty;
$141F51B9412041C449C4B6EF51C15BF7 kDataBrowserItemsAdd;
$141F51B9412041C449C4B6EF51C15BF7 kDataBrowserItemsAssign;
$141F51B9412041C449C4B6EF51C15BF7 kDataBrowserItemsRemove;
$141F51B9412041C449C4B6EF51C15BF7 kDataBrowserItemsToggle;
$A42D8D8A1A3B72F923437330EA1FC81E kDataBrowserLatestCallbacks;
$CEE4A9CECCF4CF2D116914FAB037EC65 kDataBrowserLatestCustomCallbacks;
$4467094E749B101C02626E92DBB121D8 kDataBrowserListView;
$91C30D94231B4D4A2E98BF5DB11DD00B kDataBrowserListViewAppendColumn;
$685DD54D7AFDD53802A475B416D12021 kDataBrowserListViewDefaultColumnFlags;
$D8168BCDF265C9D7D866CEA49BB87D6F kDataBrowserListViewLatestHeaderDesc;
$685DD54D7AFDD53802A475B416D12021 kDataBrowserListViewMovableColumn;
$685DD54D7AFDD53802A475B416D12021 kDataBrowserListViewSelectionColumn;
$685DD54D7AFDD53802A475B416D12021 kDataBrowserListViewSortableColumn;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserNeverEmptySelectionSet;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserNoDisjointSelection;
$433144C8085830837FB0668FFAE5F120 kDataBrowserNoItem;
$4467094E749B101C02626E92DBB121D8 kDataBrowserNoView;
$FFEFDC583CD9A3E39879DD5EE3359846 kDataBrowserNothingHit;
$FD3A7EDFA84D457DD688A80C44B8C6DA kDataBrowserOrderDecreasing;
$FD3A7EDFA84D457DD688A80C44B8C6DA kDataBrowserOrderIncreasing;
$FD3A7EDFA84D457DD688A80C44B8C6DA kDataBrowserOrderUndefined;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserPopupMenuType;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserProgressBarType;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyCheckboxPart;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyContentPart;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyDisclosurePart;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyEnclosingPart;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserPropertyFlagsMask;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserPropertyFlagsOffset;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyIconPart;
$388005F4F31217FC42F79FB8545CC0B2 kDataBrowserPropertyIsEditable;
$388005F4F31217FC42F79FB8545CC0B2 kDataBrowserPropertyIsMutable;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserPropertyModificationFlags;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyProgressBarPart;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyRelevanceRankPart;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertySliderPart;
$42B09F80E01486087D98571E30A8416D kDataBrowserPropertyTextPart;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserRelativeDateTime;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserRelevanceRankType;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserResetSelection;
$B159C3B12B4BD035AE2664694CE961DD kDataBrowserRevealAndCenterInView;
$B159C3B12B4BD035AE2664694CE961DD kDataBrowserRevealOnly;
$B159C3B12B4BD035AE2664694CE961DD kDataBrowserRevealWithoutSelecting;
$76A3AB67DD166F1DF13EFDC956E05079 kDataBrowserSelectOnlyOne;
$3984900454BBB9C1D564DB71C5AFE31A kDataBrowserSelectionAnchorDown;
$3984900454BBB9C1D564DB71C5AFE31A kDataBrowserSelectionAnchorLeft;
$3984900454BBB9C1D564DB71C5AFE31A kDataBrowserSelectionAnchorRight;
$3984900454BBB9C1D564DB71C5AFE31A kDataBrowserSelectionAnchorUp;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserSelectionSetChanged;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserSliderDownwardThumb;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserSliderPlainThumb;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserSliderType;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserSliderUpwardThumb;
$FFEFDC583CD9A3E39879DD5EE3359846 kDataBrowserStopTracking;
$BEC795BD18AF3BF83FD38686D39A187D kDataBrowserTableViewFillHilite;
$E53CB0B25DC99FE7B2EC6FBDEEC81627 kDataBrowserTableViewLastColumn;
$BEC795BD18AF3BF83FD38686D39A187D kDataBrowserTableViewMinimalHilite;
$8F019CD0598CF9A91DA4DC91CE31AB25 kDataBrowserTableViewSelectionColumn;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserTargetChanged;
$7570CAE0C29D32DDB43FD282AA1D0397 kDataBrowserTextType;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserTruncateTextAtEnd;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserTruncateTextAtStart;
$4CEAC388984F1DBE70484D732F04BC4D kDataBrowserTruncateTextMiddle;
$388005F4F31217FC42F79FB8545CC0B2 kDataBrowserUniversalPropertyFlags;
$388005F4F31217FC42F79FB8545CC0B2 kDataBrowserUniversalPropertyFlagsMask;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserUserStateChanged;
$28FB4D098DA8AF3937F4BD37519880CE kDataBrowserUserToggledContainer;
$0D4AF509899D89B349F21D9B03E86EA4 kDataBrowserViewSpecificFlagsMask;
$0D4AF509899D89B349F21D9B03E86EA4 kDataBrowserViewSpecificFlagsOffset;
$0D4AF509899D89B349F21D9B03E86EA4 kDataBrowserViewSpecificPropertyFlags;
$97FA3A9004AF8E74324D08F4D09E2464 kDataCFragSymbol;
$EE9F227ECBAF3C576752B1D10972453B kDataForkCFragLocator;
$215E8D6413C3A88FB05DA22203D2FB0C kDeactivateConnection;
$D683092856536C5605C0B92641D0DE73 kDeclROMtables;
$882E335BD166895EB3BB07B177635657 kDecomposeDiacriticsSelector;
$A7575B3039476EA3F1C1D03F2499B38C kDecorativeBordersSelector;
$5B004150561D8A57B6AEE998E4910F58 kDecryptKCItemAttr;
$613DD93652B7475103CB74F7F32FC353 kDeepestColorScreen;
MACRO_kDefaultAppleTalkServicesPath kDefaultAppleTalkServicesPath;
$0F37A042B2E7B56B7C111603D97B657C kDefaultCFragNameLen;
$E31D1D986D7A2398F5BE58D621867533 kDefaultCJKRomanSelector;
$767A1521A394221B9B8A4E851CA7AF8B kDefaultCMMSignature;
$6D0E186233145241771508AFE8C2C7D5 kDefaultChangedKCEvent;
$39FE76983533385EB60014D19059B326 kDefaultChangedKCEventMask;
$81141EEFE9583A73AD3C515976D5098B kDefaultColorPickerHeight;
$81141EEFE9583A73AD3C515976D5098B kDefaultColorPickerWidth;
$E432BDE770954FAA58BC493549E91D02 kDefaultFidelity;
$EEC473486AFCE0E244311B680180D841 kDefaultInetInterface;
MACRO_kDefaultInternetServicesPath kDefaultInternetServicesPath;
$3396F92FAC0BE03A6A5A931576A5D5DF kDefaultLanguagesHighWord;
$E432BDE770954FAA58BC493549E91D02 kDefaultManufacturerFidelity;
$01D64382B3DCFA5691813CCA7DC54A2B kDelegatedSoundComponentSelectors;
$48581DA6325892AC46A0B2E89C776E96 kDeleteAfterDownload;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kDeleteAliasIcon;
$40B1D294FCB105E6FD797FB89EF6F7A3 kDeleteCharCode;
$6D0E186233145241771508AFE8C2C7D5 kDeleteKCEvent;
$39FE76983533385EB60014D19059B326 kDeleteKCEventMask;
$5CDB6810CF5FAA70771C826E258B46A2 kDependentConnection;
$443F782623DB2B1F37C04EC07D3BB201 kDependentNotifyClassDisplayMgrOverride;
$443F782623DB2B1F37C04EC07D3BB201 kDependentNotifyClassDriverOverride;
$443F782623DB2B1F37C04EC07D3BB201 kDependentNotifyClassProfileChanged;
$443F782623DB2B1F37C04EC07D3BB201 kDependentNotifyClassShowCursor;
$FA26CB2AA9DF0DF7DEC8449B3454B1BB kDepthDependent;
$16646CFA796893B390DB9F42833E7426 kDepthMode1;
$16646CFA796893B390DB9F42833E7426 kDepthMode2;
$16646CFA796893B390DB9F42833E7426 kDepthMode3;
$16646CFA796893B390DB9F42833E7426 kDepthMode4;
$16646CFA796893B390DB9F42833E7426 kDepthMode5;
$16646CFA796893B390DB9F42833E7426 kDepthMode6;
$476A79E339CADAF44B401C5F27E1C94E kDepthNotAvailableBit;
$5B004150561D8A57B6AEE998E4910F58 kDescriptionKCItemAttr;
$29926AB924E42B27C90E0FDA4D67BBF6 kDesignComplexityType;
$054E6DB59A933D4AA3D0AC435B7BFEA9 kDesignLevel1Selector;
$054E6DB59A933D4AA3D0AC435B7BFEA9 kDesignLevel2Selector;
$054E6DB59A933D4AA3D0AC435B7BFEA9 kDesignLevel3Selector;
$054E6DB59A933D4AA3D0AC435B7BFEA9 kDesignLevel4Selector;
$054E6DB59A933D4AA3D0AC435B7BFEA9 kDesignLevel5Selector;
$191BACAFE1C79A4AFD6F08B231C40E86 kDesktopFolderType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kDesktopIcon;
$66515207F0D737806D7F37B84E062AAB kDesktopIconResource;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kDesktopPicturesFolderType;
$CED1243A6D8675D23AA26E362B2F2329 kDesktopPrinterAliasType;
$D683092856536C5605C0B92641D0DE73 kDetailedTimingFormat;
$CC091832F316327152ED0A035D8C4D44 kDeveloperDocsFolderType;
$CC091832F316327152ED0A035D8C4D44 kDeveloperFolderType;
$CC091832F316327152ED0A035D8C4D44 kDeveloperHelpFolderType;
$CBC82A2BC80BA266BEAA25EF92642488 kDeviceCanAssertPMEDuringSleep;
$E989C32EE4BDA5E8BFBB4FDF02263947 kDeviceDidNotWakeMachine;
$CBC82A2BC80BA266BEAA25EF92642488 kDeviceDriverPresent;
$CBC82A2BC80BA266BEAA25EF92642488 kDeviceDriverSupportsPowerMgt;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kDeviceInitiatedWake;
$CBC82A2BC80BA266BEAA25EF92642488 kDevicePCIPowerOffAllowed;
$DB76DB9A82AAC104AC2A50F15626D709 kDevicePowerInfoVersion;
$E989C32EE4BDA5E8BFBB4FDF02263947 kDeviceRequestsFullWake;
$E989C32EE4BDA5E8BFBB4FDF02263947 kDeviceRequestsWakeToDoze;
$CBC82A2BC80BA266BEAA25EF92642488 kDeviceSupportsPMIS;
$29BD2EC3A2B216A66733D3791733D12E kDeviceToPCS;
$CBC82A2BC80BA266BEAA25EF92642488 kDeviceUsesCommonLogicPower;
$29926AB924E42B27C90E0FDA4D67BBF6 kDiacriticsType;
$E95C98F009867ADAC3C78E8CB5065BFB kDiagonalFractionsSelector;
$2A5C702EB051A5E9BD920DD6120C5BE3 kDialectBundleResType;
$C87EE680BB108E7CD8AEE2A24F663647 kDialogFlagsHandleMovableModal;
$C87EE680BB108E7CD8AEE2A24F663647 kDialogFlagsUseControlHierarchy;
$C87EE680BB108E7CD8AEE2A24F663647 kDialogFlagsUseThemeBackground;
$C87EE680BB108E7CD8AEE2A24F663647 kDialogFlagsUseThemeControls;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontAddFontSizeMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontAddToMetaFontMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontNoFontStyle;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseAllMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseBackColorMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseFaceMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseFontMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseFontNameMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseForeColorMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseJustMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseModeMask;
$220FDF38C1B64B46647C2B85268CE13F kDialogFontUseSizeMask;
$8632DA84C4140D504EF05FA055DE9E8E kDialogFontUseThemeFontIDMask;
$2806241C695CE64F638EBE1504CA6EC2 kDialogWindowKind;
$F401D567E4FBF51362F158484CD5534B kDiamondAnnotationSelector;
$40B1D294FCB105E6FD797FB89EF6F7A3 kDiamondCharCode;
$A1E1BAD5B418D85708692C2D8BF7B43D kDiamondUnicode;
$86F63DAABF6DB2E863810FA19E8D9842 kDictionaryFileType;
$81232266A46B1ABA0B298AF2456AB2BD kDigiHubBlankCD;
$81232266A46B1ABA0B298AF2456AB2BD kDigiHubBlankDVD;
$6D50BC441DB9CEF01053298009CB274E kDigiHubEventClass;
$81232266A46B1ABA0B298AF2456AB2BD kDigiHubMusicCD;
$81232266A46B1ABA0B298AF2456AB2BD kDigiHubPictureCD;
$81232266A46B1ABA0B298AF2456AB2BD kDigiHubVideoDVD;
$8615805619EA996624DB6A9C3E7C14FE kDigitalSignalBit;
$8615805619EA996624DB6A9C3E7C14FE kDigitalSignalMask;
$A7575B3039476EA3F1C1D03F2499B38C kDingbatsSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kDiphthongLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kDiphthongLigaturesOnSelector;
$4693F9F93A5130D57E44F485B4108586 kDirectSoundSnifferSubType;
$4693F9F93A5130D57E44F485B4108586 kDirectSoundSubType;
$CC091832F316327152ED0A035D8C4D44 kDirectoryServicesFolderType;
$CC091832F316327152ED0A035D8C4D44 kDirectoryServicesPlugInsFolderType;
$8D4D07E192BE4DF49363A655628BC0D2 kDisableCompositeSyncBit;
$8D4D07E192BE4DF49363A655628BC0D2 kDisableHorizontalSyncBit;
$8D4D07E192BE4DF49363A655628BC0D2 kDisableVerticalSyncBit;
$58030CB495C0F1442001624CD349E98E kDisabledDisplayBit;
$C61609BB0F455BF0C49EDE98D48A29D1 kDisconnectMsg;
$BEE4F9FA55F124848F5583F92B764A21 kDispatchedParameterPhase;
$BEE4F9FA55F124848F5583F92B764A21 kDispatchedSelectorSizePhase;
$BEE4F9FA55F124848F5583F92B764A21 kDispatchedSelectorSizeWidth;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kDisplayExtensionsFolderType;
$08CE12B7C999EE30820DED0789418417 kDisplayGestaltBrightnessAffectsGammaMask;
$08CE12B7C999EE30820DED0789418417 kDisplayGestaltCalibratorAttr;
$08CE12B7C999EE30820DED0789418417 kDisplayGestaltDisplayCommunicationAttr;
$08CE12B7C999EE30820DED0789418417 kDisplayGestaltForbidI2CMask;
$08CE12B7C999EE30820DED0789418417 kDisplayGestaltUseI2CPowerMask;
$08CE12B7C999EE30820DED0789418417 kDisplayGestaltViewAngleAffectsGammaMask;
$12300EE85CBDD78DB8ECB00FF56C5099 kDisplayModeEntryVersionOne;
$12300EE85CBDD78DB8ECB00FF56C5099 kDisplayModeEntryVersionZero;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDBootProgrammable;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDCurrent;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDFindFirstProgrammable;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDFindFirstResolution;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDInvalid;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDNoMoreResolutions;
$2ADEDB255B0512C82B8BB6B7EC2F9A80 kDisplayModeIDReservedBase;
$1B2CB9C25C02CAF57191E8FF5A7BE1C5 kDisplayModeListNotPreferredBit;
$1B2CB9C25C02CAF57191E8FF5A7BE1C5 kDisplayModeListNotPreferredMask;
$F7247E5962708F04BC704908F5CB3C56 kDisplayTextSelector;
$12300EE85CBDD78DB8ECB00FF56C5099 kDisplayTimingInfoReservedCountVersionZero;
$12300EE85CBDD78DB8ECB00FF56C5099 kDisplayTimingInfoVersionZero;
$58030CB495C0F1442001624CD349E98E kDisposeDisplayBit;
$0E89879D61237E8E6722620A3B96311B kDoFolderActionEvent;
$C0A8131AFAC7E83F0975CE809AF59F6B kDoNotActivateAndHandleClick;
$C0A8131AFAC7E83F0975CE809AF59F6B kDoNotActivateAndIgnoreClick;
$D3BADAA375F549D12E9BB55F48025D04 kDoNotRemoveWheCurrentApplicationQuitsBit;
$D3BADAA375F549D12E9BB55F48025D04 kDoNotRemoveWhenCurrentApplicationQuitsBit;
$C9196282FECEA653565233A7CD50F0CD kDocumentIsReadOnly;
$B95EEEF8D0A9C3F124CECCB9E5363575 kDocumentWindowClass;
$99DF324053748CE0F00F82D255EBBBC6 kDocumentWindowVariantCode;
$CC091832F316327152ED0A035D8C4D44 kDocumentationFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kDocumentsFolderIcon;
$ADBD11780E2D799B74D44FEA6B34E12D kDocumentsFolderType;
$CC091832F316327152ED0A035D8C4D44 kDomainLibraryFolderType;
$CC091832F316327152ED0A035D8C4D44 kDomainTopLevelFolderType;
$06BA4544A28775A78FBF2BA446BEB3FC kDontCreateFolder;
$F05EF96BBB38DB48FBB55E61622C6397 kDontFindAppBySignature;
$7411B45F00DD23CFB56499B7DA25AE62 kDontPassSelector;
$40B1D294FCB105E6FD797FB89EF6F7A3 kDownArrowCharCode;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kDozeDemand;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kDozeRequest;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kDozeToFullWakeUp;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kDozeWakeUp;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionAlias;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionAll;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionCopy;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionDelete;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionGeneric;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionMove;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionNothing;
$64467868E4CA29D8A71BB59B7CFCAA59 kDragActionPrivate;
$0D3445E7CAF63059810E30EE741ACD78 kDragBehaviorNone;
$0D3445E7CAF63059810E30EE741ACD78 kDragBehaviorZoomBackAnimation;
$8C998D00B82013AAED6948BEB3BEE9E4 kDragControlEntireControl;
$8C998D00B82013AAED6948BEB3BEE9E4 kDragControlIndicator;
$24ABCDC08574C45925FBF9A9E8A8D07A kDragDarkTranslucency;
$24ABCDC08574C45925FBF9A9E8A8D07A kDragDarkerTranslucency;
$7E8F882485AD2725916D35C834C0611C kDragFlavorTypeHFS;
$7E8F882485AD2725916D35C834C0611C kDragFlavorTypePromiseHFS;
$3847F09FCD087D161C673033C30446EC kDragHasLeftSenderWindow;
$3847F09FCD087D161C673033C30446EC kDragInsideSenderApplication;
$3847F09FCD087D161C673033C30446EC kDragInsideSenderWindow;
$24ABCDC08574C45925FBF9A9E8A8D07A kDragOpaqueTranslucency;
$E63F242E42EBCDD180B126D4E758F788 kDragPromisedFlavor;
$E63F242E42EBCDD180B126D4E758F788 kDragPromisedFlavorFindFile;
$65285F62815E098F5A93B2954E7FA227 kDragPseudoCreatorVolumeOrDirectory;
$65285F62815E098F5A93B2954E7FA227 kDragPseudoFileTypeDirectory;
$65285F62815E098F5A93B2954E7FA227 kDragPseudoFileTypeVolume;
$8382CA0DB8F0B276C78948A48C035AF2 kDragRegionAndImage;
$8C536FC47949B59C62B0960E380C8D76 kDragRegionBegin;
$8C536FC47949B59C62B0960E380C8D76 kDragRegionDraw;
$8C536FC47949B59C62B0960E380C8D76 kDragRegionEnd;
$8C536FC47949B59C62B0960E380C8D76 kDragRegionHide;
$8C536FC47949B59C62B0960E380C8D76 kDragRegionIdle;
$793398CD824A1C56C8D8B92136C3AB14 kDragStandardDropLocationTrash;
$793398CD824A1C56C8D8B92136C3AB14 kDragStandardDropLocationUnknown;
$24ABCDC08574C45925FBF9A9E8A8D07A kDragStandardTranslucency;
$646C6B955ABA286F846BF22A54160718 kDragTrackingEnterControl;
$1AAA229774981C393C31E6C763CD6B58 kDragTrackingEnterHandler;
$1AAA229774981C393C31E6C763CD6B58 kDragTrackingEnterWindow;
$646C6B955ABA286F846BF22A54160718 kDragTrackingInControl;
$1AAA229774981C393C31E6C763CD6B58 kDragTrackingInWindow;
$646C6B955ABA286F846BF22A54160718 kDragTrackingLeaveControl;
$1AAA229774981C393C31E6C763CD6B58 kDragTrackingLeaveHandler;
$1AAA229774981C393C31E6C763CD6B58 kDragTrackingLeaveWindow;
$B3F0A271C81EA1C19F7A231CFC4B8A7D kDrawControlEntireControl;
$B3F0A271C81EA1C19F7A231CFC4B8A7D kDrawControlIndicatorOnly;
$B95EEEF8D0A9C3F124CECCB9E5363575 kDrawerWindowClass;
$9F707DA49AEE530950ED92E064F04046 kDriveSetupHFSSignature;
$9A61B348F439F29C2BF67459C8C39C3A kDriverTypeMacATA;
$9A61B348F439F29C2BF67459C8C39C3A kDriverTypeMacATAChained;
$9A61B348F439F29C2BF67459C8C39C3A kDriverTypeMacSCSI;
$9A61B348F439F29C2BF67459C8C39C3A kDriverTypeMacSCSIChained;
$80CC905675FBBA9CE111FA805C6BD313 kDropFolderAliasType;
$121E1AC3EB6A789387393DDCCEF5B35F kDropFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kDropFolderIconResource;
$0FA8C27A3576B43468EA81A201B45E80 kDropIconVariant;
$4C94D49F19D2C7D3EC87E3F8D916F51F kDropInAdditionCFrag;
$FA496E5233A23A274242891E36D75D32 kDummyDeviceID;
$398D9D582B1C2F1C3FE9270172E85A51 kDurationForever;
$398D9D582B1C2F1C3FE9270172E85A51 kDurationImmediate;
$398D9D582B1C2F1C3FE9270172E85A51 kDurationMicrosecond;
$398D9D582B1C2F1C3FE9270172E85A51 kDurationMillisecond;
$F68E41BB552C03507046AA3FD69AAB17 kE164Address;
$3AF7AF3D144C4B2285FED2463B608B9F kEACCESErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEADDRINUSEErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEADDRNOTAVAILErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEAGAINErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEALREADYErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEBADFErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEBADMSGErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEBUSYErr;
$3AF7AF3D144C4B2285FED2463B608B9F kECANCELErr;
$D6D4BA3902CD23D54BDAA7DB3C0C3062 kECHO_TSDU;
$3AF7AF3D144C4B2285FED2463B608B9F kECONNABORTEDErr;
$3AF7AF3D144C4B2285FED2463B608B9F kECONNREFUSEDErr;
$3AF7AF3D144C4B2285FED2463B608B9F kECONNRESETErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEDEADLKErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEDESTADDRREQErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEEXISTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEFAULTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEHOSTDOWNErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEHOSTUNREACHErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEINPROGRESSErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEINTRErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEINVALErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEIOErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEISCONNErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEMSGSIZEErr;
$5B004150561D8A57B6AEE998E4910F58 kEMailKCItemAttr;
$3AF7AF3D144C4B2285FED2463B608B9F kENETDOWNErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENETRESETErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENETUNREACHErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOBUFSErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENODATAErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENODEVErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOENTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOMEMErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOMSGErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOPROTOOPTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENORSRCErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOSRErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOSTRErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOTCONNErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOTSOCKErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENOTTYErr;
$3AF7AF3D144C4B2285FED2463B608B9F kENXIOErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEOPNOTSUPPErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEPERMErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEPIPEErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEPROTOErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEPROTONOSUPPORTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kEPROTOTYPEErr;
$3AF7AF3D144C4B2285FED2463B608B9F kERANGEErr;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCFivePortrait;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCFourNTSC;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCOnePortraitMono;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSeven16Inch;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSeven19Inch;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSevenDDC;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSevenNTSC;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSevenNoDisplay;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSevenPAL;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSevenPALAlternate;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSevenVGA;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSixMSB1;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSixMSB2;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSixMSB3;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCSixStandard;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCThree21InchMono;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCThree21InchMonoRadius;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCThree21InchRadius;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCTwo12Inch;
$F43AE73D702C8D03DB8E3B8B8A32FDED kESCZero21Inch;
$3AF7AF3D144C4B2285FED2463B608B9F kESHUTDOWNErr;
$3AF7AF3D144C4B2285FED2463B608B9F kESOCKTNOSUPPORTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kESRCHErr;
$3AF7AF3D144C4B2285FED2463B608B9F kETIMEDOUTErr;
$3AF7AF3D144C4B2285FED2463B608B9F kETIMEErr;
$3AF7AF3D144C4B2285FED2463B608B9F kETOOMANYREFSErr;
$3794836E65DBB51FCFBD4A241932E17E kETRawPacketBit;
$3794836E65DBB51FCFBD4A241932E17E kETTimeStampBit;
$3794836E65DBB51FCFBD4A241932E17E kETypeBroadcast;
$3794836E65DBB51FCFBD4A241932E17E kETypeMulticast;
$3794836E65DBB51FCFBD4A241932E17E kETypeStandard;
$3AF7AF3D144C4B2285FED2463B608B9F kEWOULDBLOCKErr;
$333B154C3EB4D8DDCA6A976D4C3734A3 kEditTextDialogItem;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kEditorsFolderType;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kEjectMediaIcon;
$48581DA6325892AC46A0B2E89C776E96 kEmbedColorSyncProfile;
$8D4D07E192BE4DF49363A655628BC0D2 kEnableSyncOnBlue;
$8D4D07E192BE4DF49363A655628BC0D2 kEnableSyncOnGreen;
$8D4D07E192BE4DF49363A655628BC0D2 kEnableSyncOnRed;
$58030CB495C0F1442001624CD349E98E kEnabledDisplayBit;
$5B004150561D8A57B6AEE998E4910F58 kEncryptKCItemAttr;
$882ADC82034244AFFE570DD57A3BB1C0 kEncryptPassword;
$40B1D294FCB105E6FD797FB89EF6F7A3 kEndCharCode;
$5B004150561D8A57B6AEE998E4910F58 kEndDateKCItemAttr;
$23798AE6F72740BA6668BAE2DC24C64C kEndOfSentence;
$23798AE6F72740BA6668BAE2DC24C64C kEndOfWord;
$9F8FC170A2058B1BE0534DB43DF06411 kEnetAddressLength;
$CE63137381CE1C14105FBF64756659BB kEnetModuleID;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 kEnetPacketHeaderLength;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 kEnetTSDU;
$F7247E5962708F04BC704908F5CB3C56 kEngravedTextSelector;
$40B1D294FCB105E6FD797FB89EF6F7A3 kEnterCharCode;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kEnterIdle;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kEnterRun;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kEnterStandby;
$4693F9F93A5130D57E44F485B4108586 kEqualizerSubType;
$40B1D294FCB105E6FD797FB89EF6F7A3 kEscapeCharCode;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleGetAllActionNames;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleGetAllAttributeNames;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleGetChildAtPoint;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleGetFocusedChild;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleGetNamedActionDescription;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleGetNamedAttribute;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleIsNamedAttributeSettable;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessiblePerformNamedAction;
$DE11CF22842CA016DD958AB0BE6E822C kEventAccessibleSetNamedAttribute;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppActivated;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppDeactivated;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppFocusMenuBar;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppFocusNextDocumentWindow;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppFocusNextFloatingWindow;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppFocusToolbar;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppFrontSwitched;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppGetDockTileMenu;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppHidden;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppLaunchNotification;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppLaunched;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppQuit;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppShown;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppSystemUIModeChanged;
$AFF80F91A29C3DB5EEA9ABEDB53A9D9B kEventAppTerminated;
$886E89D0A2610C43CB4011F0A0CCBF89 kEventAppearanceScrollBarVariantChanged;
$277752E1D5CD5492AEEBDA2EE4BCBEEE kEventAppleEvent;
$1AF68A0469BD68229A914C40E4097790 kEventAttributeNone;
$1AF68A0469BD68229A914C40E4097790 kEventAttributeUserEvent;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassAccessibility;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassAppearance;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassAppleEvent;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassApplication;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassCommand;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassControl;
$A12DDCD5796E6418940DAAAE75E2663D kEventClassEPPC;
$C6DBFE253CF1B7A209D6AE2E512780A4 kEventClassFont;
$1FB596E3016F8878D271D095B89046E6 kEventClassHIObject;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassKeyboard;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassMenu;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassMouse;
$9E5869D39EF3815427497605AD50A486 kEventClassPTPStandard;
$9E5869D39EF3815427497605AD50A486 kEventClassPTPVendor;
$723157224B6DF43B070D3643F7564BAB kEventClassScrollable;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassService;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassTablet;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassTextInput;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassToolbar;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassToolbarItem;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassVolume;
$BE3F3FCE1FCCF723696C930071417B5A kEventClassWindow;
$3DDCFA97AABA040038DA604BDD893606 kEventCommandProcess;
$3DDCFA97AABA040038DA604BDD893606 kEventCommandUpdateStatus;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlActivate;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlAddedSubControl;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlApplyBackground;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlApplyTextColor;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlArbitraryMessage;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlBoundsChanged;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlClick;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlContextualMenuClick;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDeactivate;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDefDispose;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDefInitialize;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDispose;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDragEnter;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDragLeave;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDragReceive;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDragWithin;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlDraw;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlEnabledStateChanged;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetActionProcPart;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetAutoToggleValue;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetClickActivation;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetData;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetFocusPart;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetIndicatorDragConstraint;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetNextFocusCandidate;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetOptimalBounds;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetPartBounds;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetPartRegion;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetScrollToHereStartPoint;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGetSizeConstraints;
$34692F00CBC093E53A6B2074F6D6B0FC kEventControlGetSubviewForMouseEvent;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlGhostingFinished;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlHiliteChanged;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlHit;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlHitTest;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlIndicatorMoved;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlInitialize;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlInterceptSubviewClick;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlOwningWindowChanged;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlRemovingSubControl;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlSetCursor;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlSetData;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlSetFocusPart;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlSimulateHit;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlTitleChanged;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlTrack;
$6AD54FC033639F8C0F13DE021B9A7A6F kEventControlValueFieldChanged;
$2AD2746AAD449D8F818CFC8E4C18D9CF kEventFontPanelClosed;
$2AD2746AAD449D8F818CFC8E4C18D9CF kEventFontSelection;
$0E7B9C03955ED082648E8FAAA36FDDE5 kEventGetSelectedText;
$1FB596E3016F8878D271D095B89046E6 kEventHIObjectConstruct;
$1FB596E3016F8878D271D095B89046E6 kEventHIObjectDestruct;
$1FB596E3016F8878D271D095B89046E6 kEventHIObjectInitialize;
$1FB596E3016F8878D271D095B89046E6 kEventHIObjectIsEqual;
$1FB596E3016F8878D271D095B89046E6 kEventHIObjectPrintDebugInfo;
$A12DDCD5796E6418940DAAAE75E2663D kEventHighLevelEvent;
$EA4F23EDBF074A46CFDACDB88FB2DDC2 kEventHotKeyPressed;
$EA4F23EDBF074A46CFDACDB88FB2DDC2 kEventHotKeyReleased;
$15BAEF7D44DFEB3C1730DD79F1BB95FB kEventKeyModifierFnBit;
$F5FDCE5093A539EB0CE8F613A5A67A01 kEventKeyModifierFnMask;
$15BAEF7D44DFEB3C1730DD79F1BB95FB kEventKeyModifierNumLockBit;
$F5FDCE5093A539EB0CE8F613A5A67A01 kEventKeyModifierNumLockMask;
$98794EC7D3E7BEFB1903BB62D5ED1F82 kEventLeaveInQueue;
$31B58F0C4171800B87307B79B51495FA kEventLoopIdleTimerIdling;
$31B58F0C4171800B87307B79B51495FA kEventLoopIdleTimerStarted;
$31B58F0C4171800B87307B79B51495FA kEventLoopIdleTimerStopped;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuBeginTracking;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuChangeTrackingMode;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuClosed;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuDispose;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuDrawItem;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuDrawItemContent;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuEnableItems;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuEndTracking;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuMatchKey;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuMeasureItemHeight;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuMeasureItemWidth;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuOpening;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuPopulate;
$9EFE2A97A0BC9065EC21821B1DDFD255 kEventMenuTargetItem;
$F5B7A8D5C4D48CD72D17B9DBD8AA10BD kEventMouseButtonPrimary;
$F5B7A8D5C4D48CD72D17B9DBD8AA10BD kEventMouseButtonSecondary;
$F5B7A8D5C4D48CD72D17B9DBD8AA10BD kEventMouseButtonTertiary;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseDown;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseDragged;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseEntered;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseExited;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseMoved;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseUp;
$9860EB58CFC43C50486F83ABFF047E76 kEventMouseWheelAxisX;
$9860EB58CFC43C50486F83ABFF047E76 kEventMouseWheelAxisY;
$11E2B0BB54D4584721B233463E91C7E9 kEventMouseWheelMoved;
$0E7B9C03955ED082648E8FAAA36FDDE5 kEventOffsetToPos;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamAEEventClass;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamAEEventID;
$12D56C7F49369303C6B0C6C021D51378 kEventParamATSUFontID;
$12D56C7F49369303C6B0C6C021D51378 kEventParamATSUFontSize;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleActionDescription;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleActionName;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleActionNames;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleAttributeName;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleAttributeNames;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleAttributeSettable;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleAttributeValue;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleChild;
$3E2BE58BBF5757D630E33A246FE7EECE kEventParamAccessibleObject;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamAttributes;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamAvailableBounds;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamCGContextRef;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamClickActivation;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamClickCount;
$E025492169204B653155AE115B56D39A kEventParamControlAction;
$E025492169204B653155AE115B56D39A kEventParamControlClickActivationResult;
$E025492169204B653155AE115B56D39A kEventParamControlCurrentOwningWindow;
$E025492169204B653155AE115B56D39A kEventParamControlCurrentPart;
$E025492169204B653155AE115B56D39A kEventParamControlDataBuffer;
$E025492169204B653155AE115B56D39A kEventParamControlDataBufferSize;
$E025492169204B653155AE115B56D39A kEventParamControlDataTag;
$E025492169204B653155AE115B56D39A kEventParamControlDrawDepth;
$E025492169204B653155AE115B56D39A kEventParamControlDrawInColor;
$E025492169204B653155AE115B56D39A kEventParamControlFeatures;
$E025492169204B653155AE115B56D39A kEventParamControlFocusEverything;
$E025492169204B653155AE115B56D39A kEventParamControlIndicatorDragConstraint;
$E025492169204B653155AE115B56D39A kEventParamControlIndicatorOffset;
$E025492169204B653155AE115B56D39A kEventParamControlIndicatorRegion;
$E025492169204B653155AE115B56D39A kEventParamControlInvalRgn;
$E025492169204B653155AE115B56D39A kEventParamControlIsGhosting;
$E025492169204B653155AE115B56D39A kEventParamControlMessage;
$E025492169204B653155AE115B56D39A kEventParamControlOptimalBaselineOffset;
$E025492169204B653155AE115B56D39A kEventParamControlOptimalBounds;
$E025492169204B653155AE115B56D39A kEventParamControlOriginalOwningWindow;
$E025492169204B653155AE115B56D39A kEventParamControlParam;
$E025492169204B653155AE115B56D39A kEventParamControlPart;
$E025492169204B653155AE115B56D39A kEventParamControlPartBounds;
$E025492169204B653155AE115B56D39A kEventParamControlPreviousPart;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamControlRef;
$E025492169204B653155AE115B56D39A kEventParamControlRegion;
$E025492169204B653155AE115B56D39A kEventParamControlResult;
$E025492169204B653155AE115B56D39A kEventParamControlSubControl;
$E025492169204B653155AE115B56D39A kEventParamControlSubview;
$E025492169204B653155AE115B56D39A kEventParamControlValue;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamCurrentBounds;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamCurrentDockRect;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamCurrentMenuTrackingMode;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamDeviceColor;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamDeviceDepth;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamDimensions;
$67DBE5411CEBB7680F2ECFCDD5791791 kEventParamDirectObject;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamDragRef;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamEnableMenuForKeyEvent;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamEnabled;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamEventRef;
$12D56C7F49369303C6B0C6C021D51378 kEventParamFMFontFamily;
$12D56C7F49369303C6B0C6C021D51378 kEventParamFMFontSize;
$12D56C7F49369303C6B0C6C021D51378 kEventParamFMFontStyle;
$12D56C7F49369303C6B0C6C021D51378 kEventParamFontColor;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamGrafPort;
$0BCA79403C4958F26F03CA8ADAE133EC kEventParamHICommand;
$6B48AC95129713EF0DD20DB41EA666C2 kEventParamHIObjectInstance;
$820DEEF22928D497885345B768D6BD14 kEventParamImageSize;
$E025492169204B653155AE115B56D39A kEventParamInitCollection;
$C2BA776CAA1D1E2810974D8A350054F8 kEventParamKeyCode;
$C2BA776CAA1D1E2810974D8A350054F8 kEventParamKeyMacCharCodes;
$C2BA776CAA1D1E2810974D8A350054F8 kEventParamKeyModifiers;
$C2BA776CAA1D1E2810974D8A350054F8 kEventParamKeyUnicodes;
$C2BA776CAA1D1E2810974D8A350054F8 kEventParamKeyboardType;
$E4B24CBC17D207DC4B883CC5BFBB41A1 kEventParamLaunchErr;
$E4B24CBC17D207DC4B883CC5BFBB41A1 kEventParamLaunchRefCon;
$820DEEF22928D497885345B768D6BD14 kEventParamLineSize;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamMaximumSize;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuCommand;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuCommandKeyBounds;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuContext;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuDrawState;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuEventOptions;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuFirstOpen;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuIconBounds;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuItemBounds;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuItemHeight;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuItemIndex;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuItemType;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuItemWidth;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuMarkBounds;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamMenuRef;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuTextBaseline;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuTextBounds;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuVirtualBottom;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamMenuVirtualTop;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamMinimumSize;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseButton;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseChord;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseDelta;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseLocation;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseTrackingRef;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseWheelAxis;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamMouseWheelDelta;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamMutableArray;
$CC9978C76DBE3D8709D041F5270AF685 kEventParamNewMenuTrackingMode;
$C1C1720AC78930D425ADDA4620EF7BD1 kEventParamNewScrollBarVariant;
$E025492169204B653155AE115B56D39A kEventParamNextControl;
$820DEEF22928D497885345B768D6BD14 kEventParamOrigin;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamOriginalBounds;
$A2E4C1A1D328110650F1367AEE4801CC kEventParamPostTarget;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamPreviousBounds;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamPreviousDockRect;
$E4B24CBC17D207DC4B883CC5BFBB41A1 kEventParamProcessID;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamResult;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamRgnHandle;
$4FD06A13F00F8A4D99EE10AF5B077DBF kEventParamScrapRef;
$4FD06A13F00F8A4D99EE10AF5B077DBF kEventParamServiceCopyTypes;
$4FD06A13F00F8A4D99EE10AF5B077DBF kEventParamServiceMessageName;
$4FD06A13F00F8A4D99EE10AF5B077DBF kEventParamServicePasteTypes;
$4FD06A13F00F8A4D99EE10AF5B077DBF kEventParamServiceUserData;
$E025492169204B653155AE115B56D39A kEventParamStartControl;
$E4B24CBC17D207DC4B883CC5BFBB41A1 kEventParamSystemUIMode;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamTabletEventType;
$4D1499D9AB99878865DBB85B985DDBBB kEventParamTabletPointRec;
$4D1499D9AB99878865DBB85B985DDBBB kEventParamTabletPointerRec;
$4D1499D9AB99878865DBB85B985DDBBB kEventParamTabletProximityRec;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputGlyphInfoArray;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyFMFont;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyFont;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyLeadingEdge;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyLineAscent;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyLineHeight;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyPoint;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyPointSize;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyRegionClass;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplySLRec;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyShowHide;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyText;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyTextAngle;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputReplyTextOffset;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendClauseRng;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendComponentInstance;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendCurrentPoint;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendDraggingMode;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendFixLen;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendHiliteRng;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendKeyboardEvent;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendLeadingEdge;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendPinRng;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendRefCon;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendSLRec;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendShowHide;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendText;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendTextOffset;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendTextServiceEncoding;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendTextServiceMacEncoding;
$AECD25402A370769DF4E520777842AB1 kEventParamTextInputSendUpdateRng;
$DA59D2CD3DAE9524B7DBB217E5C9842F kEventParamToolbar;
$DA59D2CD3DAE9524B7DBB217E5C9842F kEventParamToolbarItem;
$DA59D2CD3DAE9524B7DBB217E5C9842F kEventParamToolbarItemConfigData;
$DA59D2CD3DAE9524B7DBB217E5C9842F kEventParamToolbarItemIdentifier;
$820DEEF22928D497885345B768D6BD14 kEventParamViewSize;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowDefPart;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowDragHiliteFlag;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowFeatures;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowGrowRect;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowModifiedFlag;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 kEventParamWindowMouseLocation;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowProxyGWorldPtr;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowProxyImageRgn;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowProxyOutlineRgn;
$F255FDCA20DDDAA774B30F5BF23F4680 kEventParamWindowRef;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowRegionCode;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowStateChangedFlags;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowTitleFullWidth;
$70557CB90B31D8BB8CDA48B52213C956 kEventParamWindowTitleTextWidth;
$0E7B9C03955ED082648E8FAAA36FDDE5 kEventPosToOffset;
$93F85DDA74284763EEF6D37EA8BAF3BF kEventPriorityHigh;
$93F85DDA74284763EEF6D37EA8BAF3BF kEventPriorityLow;
$93F85DDA74284763EEF6D37EA8BAF3BF kEventPriorityStandard;
$3DDCFA97AABA040038DA604BDD893606 kEventProcessCommand;
$EA4F23EDBF074A46CFDACDB88FB2DDC2 kEventRawKeyDown;
$EA4F23EDBF074A46CFDACDB88FB2DDC2 kEventRawKeyModifiersChanged;
$EA4F23EDBF074A46CFDACDB88FB2DDC2 kEventRawKeyRepeat;
$EA4F23EDBF074A46CFDACDB88FB2DDC2 kEventRawKeyUp;
$98794EC7D3E7BEFB1903BB62D5ED1F82 kEventRemoveFromQueue;
$A707B67DD1B6D7E3F7A8C5325299836D kEventScrollableGetInfo;
$A707B67DD1B6D7E3F7A8C5325299836D kEventScrollableInfoChanged;
$A707B67DD1B6D7E3F7A8C5325299836D kEventScrollableScrollTo;
$50E32A545E4D8DDD3D907EA8F817D844 kEventServiceCopy;
$50E32A545E4D8DDD3D907EA8F817D844 kEventServiceGetTypes;
$50E32A545E4D8DDD3D907EA8F817D844 kEventServicePaste;
$50E32A545E4D8DDD3D907EA8F817D844 kEventServicePerform;
$0E7B9C03955ED082648E8FAAA36FDDE5 kEventShowHideBottomWindow;
$CAADD9AD578FAEE431E87699F04E9130 kEventTabletPoint;
$CAADD9AD578FAEE431E87699F04E9130 kEventTabletPointer;
$CAADD9AD578FAEE431E87699F04E9130 kEventTabletProximity;
$E926FE46958F2E144D83F4103DA6FA93 kEventTargetDontPropagate;
$E926FE46958F2E144D83F4103DA6FA93 kEventTargetSendToAllHandlers;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputGetSelectedText;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputOffsetToPos;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputPosToOffset;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputShowHideBottomWindow;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputUnicodeForKeyEvent;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputUnicodeText;
$69A5C7726B0EC32DA3F03241D36E48C8 kEventTextInputUpdateActiveInputArea;
$9041B80F0140AC680A00CFDA897799FA kEventToolbarCreateItemFromDrag;
$9041B80F0140AC680A00CFDA897799FA kEventToolbarCreateItemWithIdentifier;
$9041B80F0140AC680A00CFDA897799FA kEventToolbarGetAllowedIdentifiers;
$9041B80F0140AC680A00CFDA897799FA kEventToolbarGetDefaultIdentifiers;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemCommandIDChanged;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemCreateCustomView;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemEnabledStateChanged;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemGetPersistentData;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemHelpTextChanged;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemImageChanged;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemLabelChanged;
$FDAEC2F3301EA703D768876D7A44A872 kEventToolbarItemPerformAction;
$0E7B9C03955ED082648E8FAAA36FDDE5 kEventUnicodeForKeyEvent;
$0E7B9C03955ED082648E8FAAA36FDDE5 kEventUpdateActiveInputArea;
$88D6673EE6C10CD745A9473DE49A9091 kEventVolumeMounted;
$88D6673EE6C10CD745A9473DE49A9091 kEventVolumeUnmounted;
$4148E1FAC6CC61D5192905369DA81B76 kEventWindowActivated;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowBoundsChanged;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowBoundsChanging;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickCloseRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickCollapseRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickContentRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickDragRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickProxyIconRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickResizeRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickStructureRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickToolbarButtonRgn;
$FCE39149B5EAE802DD98C949B0F992AA kEventWindowClickZoomRgn;
$F335C1C5E572B225FDE9045F263B898A kEventWindowClose;
$F335C1C5E572B225FDE9045F263B898A kEventWindowCloseAll;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowClosed;
$F335C1C5E572B225FDE9045F263B898A kEventWindowCollapse;
$F335C1C5E572B225FDE9045F263B898A kEventWindowCollapseAll;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowCollapsed;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowCollapsing;
$F335C1C5E572B225FDE9045F263B898A kEventWindowConstrain;
$F335C1C5E572B225FDE9045F263B898A kEventWindowContextualMenuSelect;
$D804EF8D454909AD79436C88D7B25A2F kEventWindowCursorChange;
$4148E1FAC6CC61D5192905369DA81B76 kEventWindowDeactivated;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefDispose;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefDragHilite;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefDrawFrame;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefDrawGrowBox;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefDrawPart;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefGetGrowImageRegion;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefGetRegion;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefHitTest;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefInit;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefMeasureTitle;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefModified;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefSetupProxyDragImage;
$EFBED2DFF2D608CED1961CF86DFF8C5A kEventWindowDefStateChanged;
$C6F2654782434640287B2F40D3E95A29 kEventWindowDispose;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowDragCompleted;
$C6F2654782434640287B2F40D3E95A29 kEventWindowDragHilite;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowDragStarted;
$A8C41429F117742B8DBC11655590541A kEventWindowDrawContent;
$C6F2654782434640287B2F40D3E95A29 kEventWindowDrawFrame;
$C6F2654782434640287B2F40D3E95A29 kEventWindowDrawGrowBox;
$C6F2654782434640287B2F40D3E95A29 kEventWindowDrawPart;
$9C2EF1C50E8722B438622C8272BE41F6 kEventWindowDrawerClosed;
$9C2EF1C50E8722B438622C8272BE41F6 kEventWindowDrawerClosing;
$9C2EF1C50E8722B438622C8272BE41F6 kEventWindowDrawerOpened;
$9C2EF1C50E8722B438622C8272BE41F6 kEventWindowDrawerOpening;
$F335C1C5E572B225FDE9045F263B898A kEventWindowExpand;
$F335C1C5E572B225FDE9045F263B898A kEventWindowExpandAll;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowExpanded;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowExpanding;
$9DC0E7774076BF486BB7A24EDA065DFB kEventWindowFocusAcquired;
$9DC0E7774076BF486BB7A24EDA065DFB kEventWindowFocusContent;
$9DC0E7774076BF486BB7A24EDA065DFB kEventWindowFocusRelinquish;
$9DC0E7774076BF486BB7A24EDA065DFB kEventWindowFocusToolbar;
$4148E1FAC6CC61D5192905369DA81B76 kEventWindowGetClickActivation;
$F335C1C5E572B225FDE9045F263B898A kEventWindowGetDockTileMenu;
$C6F2654782434640287B2F40D3E95A29 kEventWindowGetGrowImageRegion;
$F335C1C5E572B225FDE9045F263B898A kEventWindowGetIdealSize;
$F335C1C5E572B225FDE9045F263B898A kEventWindowGetMaximumSize;
$F335C1C5E572B225FDE9045F263B898A kEventWindowGetMinimumSize;
$C6F2654782434640287B2F40D3E95A29 kEventWindowGetRegion;
$F335C1C5E572B225FDE9045F263B898A kEventWindowHandleContentClick;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowHidden;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowHiding;
$C6F2654782434640287B2F40D3E95A29 kEventWindowHitTest;
$C6F2654782434640287B2F40D3E95A29 kEventWindowInit;
$C6F2654782434640287B2F40D3E95A29 kEventWindowMeasureTitle;
$C6F2654782434640287B2F40D3E95A29 kEventWindowModified;
$C6F2654782434640287B2F40D3E95A29 kEventWindowPaint;
$F335C1C5E572B225FDE9045F263B898A kEventWindowPathSelect;
$F335C1C5E572B225FDE9045F263B898A kEventWindowProxyBeginDrag;
$F335C1C5E572B225FDE9045F263B898A kEventWindowProxyEndDrag;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowResizeCompleted;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowResizeStarted;
$C6F2654782434640287B2F40D3E95A29 kEventWindowSetupProxyDragImage;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowShowing;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowShown;
$C6F2654782434640287B2F40D3E95A29 kEventWindowStateChanged;
$F335C1C5E572B225FDE9045F263B898A kEventWindowToolbarSwitchMode;
$A8C41429F117742B8DBC11655590541A kEventWindowUpdate;
$F335C1C5E572B225FDE9045F263B898A kEventWindowZoom;
$F335C1C5E572B225FDE9045F263B898A kEventWindowZoomAll;
$92108EE5D4A06272E3D80E73372ED602 kEventWindowZoomed;
$39FE76983533385EB60014D19059B326 kEveryKCEventMask;
$6779799A31BDCCE02DD843853CB38533 kExactMatchThread;
$1AC1C93A58AB6CB66948DE5864455995 kExcludedMemoryException;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kExitIdle;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kExpertCharactersSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kExponentsOffSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kExponentsOnSelector;
$80CC905675FBBA9CE111FA805C6BD313 kExportedFolderAliasType;
$1C119E9720855ADE2B421A854DBE867A kExtMicSource;
$DF7FDD476B01DEB8DE8190F52012CAEC kExtendedFlagHasCustomBadge;
$DF7FDD476B01DEB8DE8190F52012CAEC kExtendedFlagHasRoutingInfo;
$DF7FDD476B01DEB8DE8190F52012CAEC kExtendedFlagsAreInvalid;
$C61609BB0F455BF0C49EDE98D48A29D1 kExtendedMsg;
$9E5869D39EF3815427497605AD50A486 kExtendedNotificationPB;
$8032B31145A0FC9C9DA9796AA6C13271 kExtendedNotificationProc;
$44164D9870A8F4402475324CC51BA113 kExtendedSoundBufferFlagsValid;
$81BDDBC3CB749FA41EC75C154809AD67 kExtendedSoundBufferIsDiscontinuous;
$81BDDBC3CB749FA41EC75C154809AD67 kExtendedSoundBufferIsFirstBuffer;
$44164D9870A8F4402475324CC51BA113 kExtendedSoundBufferSizeValid;
$44164D9870A8F4402475324CC51BA113 kExtendedSoundCommonFrameSizeValid;
$9697D2C626758E212899500537321E1C kExtendedSoundData;
$44164D9870A8F4402475324CC51BA113 kExtendedSoundExtensionsValid;
$44164D9870A8F4402475324CC51BA113 kExtendedSoundFrameSizesValid;
$44164D9870A8F4402475324CC51BA113 kExtendedSoundSampleCountNotValid;
$ADBD11780E2D799B74D44FEA6B34E12D kExtensionDisabledFolderType;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kExtensionFolderAliasType;
$191BACAFE1C79A4AFD6F08B231C40E86 kExtensionFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kExtensionsDisabledFolderIcon;
$5159DF5F69DB4B07E5314ED3C5415015 kExtensionsFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kExtensionsFolderIconResource;
$0E89879D61237E8E6722620A3B96311B kFAAttachCommand;
$0E89879D61237E8E6722620A3B96311B kFAEditCommand;
$0E89879D61237E8E6722620A3B96311B kFAFileParam;
$0E89879D61237E8E6722620A3B96311B kFAIndexParam;
$0E89879D61237E8E6722620A3B96311B kFARemoveCommand;
$0E89879D61237E8E6722620A3B96311B kFAServerApp;
$0E89879D61237E8E6722620A3B96311B kFASuiteCode;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCaccessCanceled;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCaccessorStoreFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCaddDocFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCallocFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCanalysisNotAvailable;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCarabicHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCbadIndexFile;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCbadIndexFileVersion;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCbadParam;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCbadSearchSession;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCcenteuroHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCcommitFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCcompactionFailed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCcroatianHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCcyrillicHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCdanishHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCdefaultLanguagesHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCdeletionFailed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCdevanagariHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCdutchHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCenglishHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCfileNotIndexed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCflushFailed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCfrenchHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCgermanHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCgreekHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCgujuratiHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCgurmukhiHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBChebrewHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCicelandicHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCillegalSessionChange;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexCreationFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexDiskIOFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexFileDestroyed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexNotAvailable;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexNotFound;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexingCanceled;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCindexingFailed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCitalianHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCjapaneseHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCkoreanHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCmergingFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCmoveFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCnoIndexesFound;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCnoSearchSession;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCnoSuchHit;
$C5C6066649FD0B11099ACA028C872DF6 kFBCnotAllFoldersSearchable;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphAccessWaiting;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphCanceling;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphCompacting;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphFlushing;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphIdle;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphIndexWaiting;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphIndexing;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphMakingAccessAccessor;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphMakingIndexAccessor;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphMerging;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphSearching;
$FA6745E59AC0465FE40955B944FF81F0 kFBCphSummarizing;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCportugueseHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCromanHighWord;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCromanianHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCsearchFailed;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCsomeFilesNotIndexed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCspanishHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCsummarizationCanceled;
$049B9A38AE5B96F09685535D57999B33 kFBCsummarizationFailed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCswedishHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCtokenizationFailed;
$4C2283AA9E392EBC23F2C0DD8DF3EC02 kFBCturkishHighWord;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCvTwinExceptionErr;
$DC203EA5A821EEEC3174242FC0B9BB59 kFBCvalidationFailed;
$CE63137381CE1C14105FBF64756659BB kFDDIModuleID;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 kFDDITSDU;
$E84A8A51C2197E3A006A978AEE8F0E01 kFMCurrentFilterFormat;
$779BCE7593D9D557EDD3364C561936A0 kFMDefaultActivationContext;
$13070B149542CFE15D6D247C314A56D7 kFMDefaultIterationScope;
$CC8FF8FB7FA524AF8281078FF9FAB432 kFMDefaultOptions;
$CE8D1E361EC0C456100758B116FB6343 kFMFontCallbackFilterSelector;
$45AE1F4457D1DB3E7B8787AAB28B9175 kFMFontContainerAccessErr;
$CE8D1E361EC0C456100758B116FB6343 kFMFontContainerFilterSelector;
$CE8D1E361EC0C456100758B116FB6343 kFMFontDirectoryFilterSelector;
$CE8D1E361EC0C456100758B116FB6343 kFMFontFamilyCallbackFilterSelector;
$45AE1F4457D1DB3E7B8787AAB28B9175 kFMFontTableAccessErr;
$CE8D1E361EC0C456100758B116FB6343 kFMFontTechnologyFilterSelector;
$CE8D1E361EC0C456100758B116FB6343 kFMGenerationFilterSelector;
$779BCE7593D9D557EDD3364C561936A0 kFMGlobalActivationContext;
$13070B149542CFE15D6D247C314A56D7 kFMGlobalIterationScope;
$45AE1F4457D1DB3E7B8787AAB28B9175 kFMInvalidFontErr;
$45AE1F4457D1DB3E7B8787AAB28B9175 kFMInvalidFontFamilyErr;
$45AE1F4457D1DB3E7B8787AAB28B9175 kFMIterationCompleted;
$45AE1F4457D1DB3E7B8787AAB28B9175 kFMIterationScopeModifiedErr;
$779BCE7593D9D557EDD3364C561936A0 kFMLocalActivationContext;
$13070B149542CFE15D6D247C314A56D7 kFMLocalIterationScope;
$56340832CC9720EC5FAD8F1E364C9D7C kFMPostScriptFontTechnology;
$56340832CC9720EC5FAD8F1E364C9D7C kFMTrueTypeFontTechnology;
$2B14D9DCB8FE26549588D1BE234D7547 kFMUseGlobalScopeOption;
$276293BE77F71010DB824432FF46F21D kFNDirectoryModifiedMessage;
$DE62915B67291E3256B97E4C153AA27B kFNNoImplicitAllSubscription;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSBadFlattenedSizeErr;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSBadProfileVersionErr;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSBadReferenceVersionErr;
$F1059333722E0AA4388CA1E7240BB3AD kFNSCreatorDefault;
$E1F01D9BFCAC5B47577EDFB51BFE472C kFNSCurSysInfoVersion;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSDuplicateReferenceErr;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSInsufficientDataErr;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSInvalidProfileErr;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSInvalidReferenceErr;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchAATLayout;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchATSUMetrics;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchAll;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchDefaults;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchEncodings;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchGlyphs;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchKerning;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchNames;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchPrintEncoding;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchQDMetrics;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchTechnology;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMatchWSLayout;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSMismatchErr;
$FBEC49B661D5C6443EBA0281EDF0B530 kFNSMissingDataNoMatch;
$358F770087C90F7E302ADCD5D4CC4BB5 kFNSNameNotFoundErr;
$F1059333722E0AA4388CA1E7240BB3AD kFNSProfileFileType;
$E1F01D9BFCAC5B47577EDFB51BFE472C kFNSVersionDontCare;
$6779799A31BDCCE02DD843853CB38533 kFPUNotNeeded;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoFSInfo;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoFinderInfo;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoIDs;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoIsDirectory;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoNone;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoTargetCreateDate;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoVolumeCreateDate;
$692A988CB92B521BF0B2FBC160831A0D kFSAliasInfoVolumeFlags;
$CE34DA6674ED890926E3FF40734C9E00 kFSAllocAllOrNothingMask;
$CE34DA6674ED890926E3FF40734C9E00 kFSAllocContiguousMask;
$CE34DA6674ED890926E3FF40734C9E00 kFSAllocDefaultFlags;
$CE34DA6674ED890926E3FF40734C9E00 kFSAllocNoRoundUpMask;
$CE34DA6674ED890926E3FF40734C9E00 kFSAllocReservedMask;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoAccessDate;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoAllDates;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoAttrMod;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoBackupDate;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoContentMod;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoCreateDate;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoDataSizes;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoFinderInfo;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoFinderXInfo;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoGettableInfo;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoNodeFlags;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoNodeID;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoNone;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoParentDirID;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoPermissions;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoReserved;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoRsrcSizes;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoSettableInfo;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoSharingFlags;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoTextEncoding;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoUserAccess;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoUserPrivs;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoValence;
$E75D467D36693AF67E138B13035D0A00 kFSCatInfoVolume;
$498EE02C2D796C9A480DA51105838450 kFSInvalidVolumeRefNum;
$B7760C77E936E3F934FF355D08A952D4 kFSIterateDelete;
$B7760C77E936E3F934FF355D08A952D4 kFSIterateFlat;
$B7760C77E936E3F934FF355D08A952D4 kFSIterateReserved;
$B7760C77E936E3F934FF355D08A952D4 kFSIterateSubtree;
$2E3D7232155086A9CD8F035352E02415 kFSNodeCopyProtectBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeCopyProtectMask;
$2E3D7232155086A9CD8F035352E02415 kFSNodeDataOpenBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeDataOpenMask;
$2E3D7232155086A9CD8F035352E02415 kFSNodeForkOpenBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeForkOpenMask;
$2E3D7232155086A9CD8F035352E02415 kFSNodeHardLinkBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeHardLinkMask;
$4454269B28C93200FE91CD356F71D6DB kFSNodeInSharedBit;
$4454269B28C93200FE91CD356F71D6DB kFSNodeInSharedMask;
$2E3D7232155086A9CD8F035352E02415 kFSNodeIsDirectoryBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeIsDirectoryMask;
$4454269B28C93200FE91CD356F71D6DB kFSNodeIsMountedBit;
$4454269B28C93200FE91CD356F71D6DB kFSNodeIsMountedMask;
$4454269B28C93200FE91CD356F71D6DB kFSNodeIsSharePointBit;
$4454269B28C93200FE91CD356F71D6DB kFSNodeIsSharePointMask;
$2E3D7232155086A9CD8F035352E02415 kFSNodeLockedBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeLockedMask;
$2E3D7232155086A9CD8F035352E02415 kFSNodeResOpenBit;
$2E3D7232155086A9CD8F035352E02415 kFSNodeResOpenMask;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagDefaultVolumeBit;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagDefaultVolumeMask;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagFilesOpenBit;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagFilesOpenMask;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagHardwareLockedBit;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagHardwareLockedMask;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagSoftwareLockedBit;
$7F69674E4002FD69D5A14119D44D6814 kFSVolFlagSoftwareLockedMask;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoBackupDate;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoBlocks;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoCheckedDate;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoCreateDate;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoDataClump;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoDirCount;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoDriveInfo;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoFSInfo;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoFileCount;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoFinderInfo;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoFlags;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoGettableInfo;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoModDate;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoNextAlloc;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoNextID;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoNone;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoRsrcClump;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoSettableInfo;
$88BEC6B29D455DE2FE7FAF191D79E4FF kFSVolInfoSizes;
$6D648334E802817A93CD41CA53919B60 kFTPServerIcon;
$5CDB6810CF5FAA70771C826E258B46A2 kFastCheckForDDC;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kFavoriteItemsIcon;
$5159DF5F69DB4B07E5314ED3C5415015 kFavoritesFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kFavoritesFolderType;
$5442D69C038BA541BC61D9468B2235C9 kFemale;
$1AFD37A731F3A62F7A5D2B51D317DBED kFetchReference;
$32B75A1AA46F1B1DD1726F04BCD4FBEB kFifthDepthMode;
$CC091832F316327152ED0A035D8C4D44 kFileSystemSupportFolderType;
$42757CFF77671F6FA20DC66BF38093F0 kFillScreen;
$009AA9BCCC426E323765130C670B7B3B kFinalizeCommand;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kFindByContentFolderType;
$CC091832F316327152ED0A035D8C4D44 kFindByContentIndexesFolderType;
$1199C9C0394ECBB14613B33AC10D9468 kFindByContentPluginsFolderType;
$483E08ACD0405BD46DDCE6B6B744F2B4 kFindCFrag;
$C8BF94CBC96913F7793D64CEB4892DBA kFindFolderExtendedFlagsDoNotFollowAliasesBit;
$C8BF94CBC96913F7793D64CEB4892DBA kFindFolderExtendedFlagsDoNotUseUserFolderBit;
$C8BF94CBC96913F7793D64CEB4892DBA kFindFolderExtendedFlagsUseOtherUserRecord;
$E359A9E214E85E8DAD3ED77633D2B6D3 kFindFolderRedirectionFlagUseDistinctUserFoldersBit;
$E359A9E214E85E8DAD3ED77633D2B6D3 kFindFolderRedirectionFlagUseGivenVRefAndDirIDAsUserFolderBit;
$E359A9E214E85E8DAD3ED77633D2B6D3 kFindFolderRedirectionFlagsUseGivenVRefNumAndDirIDAsRemoteUserFolderBit;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kFindSupportFolderType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kFinderIcon;
$F25455B09653741AEEB9CA0CCC1A99C9 kFirstCFragUpdate;
$32B75A1AA46F1B1DD1726F04BCD4FBEB kFirstDepthMode;
$FA496E5233A23A274242891E36D75D32 kFirstDisplayID;
$87A5FEEFCB001713CA7CFFFC80C61561 kFirstFailKCStopOn;
$58E0C696113622080B4B29DB39E7C665 kFirstIOKitNotificationType;
$35DD4B6AA31C362F43B9F52BD9EF5C3D kFirstMagicBusyFiletype;
$3F3BFDADD85C688EAAD4A702F4F832C9 kFirstMemberNumber;
$87A5FEEFCB001713CA7CFFFC80C61561 kFirstPassKCStopOn;
MACRO_kLastWindowOfGroup kFirstWindowGroup;
MACRO_kFirstWindowOfClass kFirstWindowOfClass;
MACRO_kLastWindowOfClass kFirstWindowOfGroup;
$42757CFF77671F6FA20DC66BF38093F0 kFitToScreen;
$A2A3B97015A39488E2F6B427ADE8C31C kFixedModeCRTConnect;
$4751FF91CBFFD8E4EB08B26039E66CE2 kFlavorTypeClippingFilename;
$4751FF91CBFFD8E4EB08B26039E66CE2 kFlavorTypeClippingName;
$4751FF91CBFFD8E4EB08B26039E66CE2 kFlavorTypeDragToTrashOnly;
$4751FF91CBFFD8E4EB08B26039E66CE2 kFlavorTypeFinderNoTrackingBehavior;
$4751FF91CBFFD8E4EB08B26039E66CE2 kFlavorTypeUnicodeClippingFilename;
$4751FF91CBFFD8E4EB08B26039E66CE2 kFlavorTypeUnicodeClippingName;
$A7575B3039476EA3F1C1D03F2499B38C kFleuronsSelector;
$18BF411237F175ABCD4A1D90A0B1F6B7 kFloat32Format;
$18BF411237F175ABCD4A1D90A0B1F6B7 kFloat64Format;
$1AC1C93A58AB6CB66948DE5864455995 kFloatingPointException;
$B95EEEF8D0A9C3F124CECCB9E5363575 kFloatingWindowClass;
$1FB17526987ED6BB45FECECD371E831D kFloatingWindowDefinition;
$D3B4ECB48BE05BA2AB340E2B30896DCC kFloppyIconResource;
$0E89879D61237E8E6722620A3B96311B kFolderActionCode;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kFolderActionsFolderType;
$0E89879D61237E8E6722620A3B96311B kFolderClosedEvent;
$1FE4825E5554DB7C18E963222B630869 kFolderCreatedAdminPrivs;
$1FE4825E5554DB7C18E963222B630869 kFolderCreatedAdminPrivsBit;
$1FE4825E5554DB7C18E963222B630869 kFolderCreatedInvisible;
$1FE4825E5554DB7C18E963222B630869 kFolderCreatedInvisibleBit;
$1FE4825E5554DB7C18E963222B630869 kFolderCreatedNameLocked;
$1FE4825E5554DB7C18E963222B630869 kFolderCreatedNameLockedBit;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderInLocalOrRemoteUserFolder;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderInRemoteUserFolderIfAvailable;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderInRemoteUserFolderIfAvailableBit;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderInUserFolder;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderInUserFolderBit;
$0E89879D61237E8E6722620A3B96311B kFolderItemsAddedEvent;
$0E89879D61237E8E6722620A3B96311B kFolderItemsRemovedEvent;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledBit;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledMask;
$42F9EA3819B024B1D1B8153109622465 kFolderManagerNotificationDiscardCachedData;
$42F9EA3819B024B1D1B8153109622465 kFolderManagerNotificationMessageLoginStartup;
$42F9EA3819B024B1D1B8153109622465 kFolderManagerNotificationMessagePostUserLogOut;
$42F9EA3819B024B1D1B8153109622465 kFolderManagerNotificationMessagePreUserLogIn;
$42F9EA3819B024B1D1B8153109622465 kFolderManagerNotificationMessageUserLogIn;
$42F9EA3819B024B1D1B8153109622465 kFolderManagerNotificationMessageUserLogOut;
$0EB2814EA2665D683234383CB0B4CBBB kFolderManagerUserRedirectionGlobalsCurrentVersion;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderMustStayOnSameVolume;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderMustStayOnSameVolumeBit;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderNeverMatchedInIdentifyFolder;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderNeverMatchedInIdentifyFolderBit;
$0E89879D61237E8E6722620A3B96311B kFolderOpenedEvent;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderTrackedByAlias;
$AEF51C7F4A5FBEA9C1BF05737DEB57B2 kFolderTrackedByAliasBit;
$0E89879D61237E8E6722620A3B96311B kFolderWindowMovedEvent;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontAlbanianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontAmharicLanguage;
$2E39A52188C948464A385AF817055394 kFontAmharicScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontArabicLanguage;
$2E39A52188C948464A385AF817055394 kFontArabicScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontArmenianLanguage;
$2E39A52188C948464A385AF817055394 kFontArmenianScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontAssameseLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontAymaraLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontAzerbaijanArLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontAzerbaijaniLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontBasqueLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontBengaliLanguage;
$2E39A52188C948464A385AF817055394 kFontBengaliScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontBulgarianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontBurmeseLanguage;
$2E39A52188C948464A385AF817055394 kFontBurmeseScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontByelorussianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontCatalanLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontChewaLanguage;
$2E39A52188C948464A385AF817055394 kFontChineseScript;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontCopyrightName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontCroatianLanguage;
$93D017B8421CDD051206D7BFD95F86AA kFontCustom16BitScript;
$93D017B8421CDD051206D7BFD95F86AA kFontCustom816BitScript;
$93D017B8421CDD051206D7BFD95F86AA kFontCustom8BitScript;
$9522E0BB64D8E66E17F5C0825D2DB833 kFontCustomPlatform;
$2E39A52188C948464A385AF817055394 kFontCyrillicScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontCzechLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontDanishLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontDescriptionName;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontDesignerName;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontDesignerURLName;
$2E39A52188C948464A385AF817055394 kFontDevanagariScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontDutchLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontDzongkhaLanguage;
$2E39A52188C948464A385AF817055394 kFontEastEuropeanRomanScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontEnglishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontEsperantoLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontEstonianLanguage;
$2E39A52188C948464A385AF817055394 kFontEthiopicScript;
$2E39A52188C948464A385AF817055394 kFontExtendedArabicScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontFaeroeseLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontFamilyName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontFarsiLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontFinnishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontFlemishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontFrenchLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontFullName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontGallaLanguage;
$2E39A52188C948464A385AF817055394 kFontGeezScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontGeorgianLanguage;
$2E39A52188C948464A385AF817055394 kFontGeorgianScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontGermanLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontGreekLanguage;
$2E39A52188C948464A385AF817055394 kFontGreekScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontGuaraniLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontGujaratiLanguage;
$2E39A52188C948464A385AF817055394 kFontGujaratiScript;
$2E39A52188C948464A385AF817055394 kFontGurmukhiScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontHebrewLanguage;
$2E39A52188C948464A385AF817055394 kFontHebrewScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontHindiLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontHungarianLanguage;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDAthens;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDCairo;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDCourier;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDGeneva;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDHelvetica;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDLondon;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDLosAngeles;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDMobile;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDMonaco;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDNewYork;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDSanFrancisco;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDSymbol;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDTimes;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDToronto;
$48FCF695133F4A17937FCBE85DB9A30A kFontIDVenice;
$DD07E9CBF7DC990F99502C711D13040E kFontISO10646_1993Semantics;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontIcelandicLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontIndonesianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontIrishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontItalianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontJapaneseLanguage;
$2E39A52188C948464A385AF817055394 kFontJapaneseScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontJavaneseRomLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKannadaLanguage;
$2E39A52188C948464A385AF817055394 kFontKannadaScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKashmiriLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKazakhLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKhmerLanguage;
$2E39A52188C948464A385AF817055394 kFontKhmerScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKirghizLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKoreanLanguage;
$2E39A52188C948464A385AF817055394 kFontKoreanScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontKurdishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontLaoLanguage;
$2E39A52188C948464A385AF817055394 kFontLaotianScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontLappishLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontLastReservedName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontLatinLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontLatvianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontLettishLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontLicenseDescriptionName;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontLicenseInfoURLName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontLithuanianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMacedonianLanguage;
$9522E0BB64D8E66E17F5C0825D2DB833 kFontMacintoshPlatform;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMalagasyLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMalayArabicLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMalayRomanLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMalayalamLanguage;
$2E39A52188C948464A385AF817055394 kFontMalayalamScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMalteseLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontManufacturerName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMarathiLanguage;
$9522E0BB64D8E66E17F5C0825D2DB833 kFontMicrosoftPlatform;
$329F2D89AF7996FA5E7E2766126FBBE8 kFontMicrosoftStandardScript;
$329F2D89AF7996FA5E7E2766126FBBE8 kFontMicrosoftSymbolScript;
$329F2D89AF7996FA5E7E2766126FBBE8 kFontMicrosoftUCS4Script;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMoldavianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMongolianCyrLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontMongolianLanguage;
$2E39A52188C948464A385AF817055394 kFontMongolianScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontNepaliLanguage;
$3A78DA32205E3F16325E1415CD307FF9 kFontNoLanguage;
$733F4640A5530DA4BFA5105798B35D62 kFontNoLanguageCode;
$3A78DA32205E3F16325E1415CD307FF9 kFontNoName;
$9495D2AA7AE5C9731252AE97FFA9A303 kFontNoNameCode;
$3A78DA32205E3F16325E1415CD307FF9 kFontNoPlatform;
$733F4640A5530DA4BFA5105798B35D62 kFontNoPlatformCode;
$3A78DA32205E3F16325E1415CD307FF9 kFontNoScript;
$733F4640A5530DA4BFA5105798B35D62 kFontNoScriptCode;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontNorwegianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontOriyaLanguage;
$2E39A52188C948464A385AF817055394 kFontOriyaScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontOromoLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontPashtoLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontPersianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontPolishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontPortugueseLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontPostscriptName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontPunjabiLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontQuechuaLanguage;
$2E39A52188C948464A385AF817055394 kFontRSymbolScript;
$9522E0BB64D8E66E17F5C0825D2DB833 kFontReservedPlatform;
$2E39A52188C948464A385AF817055394 kFontRomanScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontRomanianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontRuandaLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontRundiLanguage;
$2E39A52188C948464A385AF817055394 kFontRussian;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontRussianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSaamiskLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSanskritLanguage;
$6BDC65D0920A469384734B0C3C703D93 kFontSelectionATSUIType;
$3933B8F48C98D0D93541C47984EA10F4 kFontSelectionQDStyleVersionZero;
$6BDC65D0920A469384734B0C3C703D93 kFontSelectionQDType;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSerbianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSimpChineseLanguage;
$2E39A52188C948464A385AF817055394 kFontSimpleChineseScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSindhiLanguage;
$2E39A52188C948464A385AF817055394 kFontSindhiScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSinhaleseLanguage;
$2E39A52188C948464A385AF817055394 kFontSinhaleseScript;
$2E39A52188C948464A385AF817055394 kFontSlavicScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSlovakLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSlovenianLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSomaliLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSpanishLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontStyleName;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kFontSuitcaseIcon;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSundaneseRomLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSwahiliLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontSwedishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTagalogLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTajikiLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTamilLanguage;
$2E39A52188C948464A385AF817055394 kFontTamilScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTatarLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTeluguLanguage;
$2E39A52188C948464A385AF817055394 kFontTeluguScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontThaiLanguage;
$2E39A52188C948464A385AF817055394 kFontThaiScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTibetanLanguage;
$2E39A52188C948464A385AF817055394 kFontTibetanScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTigrinyaLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTradChineseLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontTrademarkName;
$2E39A52188C948464A385AF817055394 kFontTraditionalChineseScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTurkishLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontTurkmenLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontUighurLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontUkrainianLanguage;
$DD07E9CBF7DC990F99502C711D13040E kFontUnicodeDefaultSemantics;
$9522E0BB64D8E66E17F5C0825D2DB833 kFontUnicodePlatform;
$DD07E9CBF7DC990F99502C711D13040E kFontUnicodeV1_1Semantics;
$2E39A52188C948464A385AF817055394 kFontUninterpretedScript;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontUniqueName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontUrduLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontUzbekLanguage;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontVendorURLName;
$82F95A9D3CCA30323417F37FA7DDBA96 kFontVersionName;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontVietnameseLanguage;
$2E39A52188C948464A385AF817055394 kFontVietnameseScript;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontWelshLanguage;
$91C73EDC2D04F9EDE8BC99C08FBDFDF3 kFontYiddishLanguage;
$5159DF5F69DB4B07E5314ED3C5415015 kFontsFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kFontsFolderIconResource;
$191BACAFE1C79A4AFD6F08B231C40E86 kFontsFolderType;
$0B113C1C590DDD2E5076DA1B0F1E8C62 kForceConfirmBit;
$0B113C1C590DDD2E5076DA1B0F1E8C62 kForceConfirmMask;
$2C7B85F3FA308E82B6227DC0179B718C kForceNumberBit;
$2C7B85F3FA308E82B6227DC0179B718C kForceNumberMask;
$40B1D294FCB105E6FD797FB89EF6F7A3 kFormFeedCharCode;
$F1801BD1D809F59C5583F4A7CDF3D075 kFormInterrobangOffSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kFormInterrobangOnSelector;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kForwardArrowIcon;
$566D78D6447C4D565AE39524F2F22577 kFourByteCode;
$32B75A1AA46F1B1DD1726F04BCD4FBEB kFourthDepthMode;
$29926AB924E42B27C90E0FDA4D67BBF6 kFractionsType;
$B21804CA2AED5729D4BD7EDF2BC8B1E0 kFragmentIsPrepared;
$B21804CA2AED5729D4BD7EDF2BC8B1E0 kFragmentNeedsPreparing;
$CC091832F316327152ED0A035D8C4D44 kFrameworksFolderType;
$61754CE00A3B897AF15694E0984361BF kFullDependencyNotify;
$18BF411237F175ABCD4A1D90A0B1F6B7 kFullMPEGLay3Format;
$61754CE00A3B897AF15694E0984361BF kFullNotify;
$A2A3B97015A39488E2F6B427ADE8C31C kFullPageConnect;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kFullTrashIcon;
$159A2294D95B3B569822A5BAD5B2813B kFullTrashIconResource;
$4A3C2C06B619E3C8A441AC20BACFFC2D kFullVolume;
$E31D1D986D7A2398F5BE58D621867533 kFullWidthCJKRomanSelector;
$71E191EDC33909E003A3BACB6AB04ABE kFullWidthIdeographsSelector;
$720CB6D0B7D8CF744704B19C2BA63CFE kFullWidthKanaSelector;
$40B1D294FCB105E6FD797FB89EF6F7A3 kFunctionKeyCharCode;
$4693F9F93A5130D57E44F485B4108586 kGCAwacsSubType;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectGenericToRealID;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectGetDefaultScriptingComponent;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectGetScriptingComponent;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectGetScriptingComponentFromStored;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectOutOfRange;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectRealToGenericID;
$EB204E3CDA2FE0897FB7BD191503BA08 kGSSSelectSetDefaultScriptingComponent;
$E086ECF2B6D3880038E4DC2A47A2B7FF kGammaTableIDFindFirst;
$E086ECF2B6D3880038E4DC2A47A2B7FF kGammaTableIDNoMoreTables;
$E086ECF2B6D3880038E4DC2A47A2B7FF kGammaTableIDSpecific;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kGenEditorsFolderType;
$956E0F8638627E2D7345301BF56E48D3 kGeneralFailureErr;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericApplicationIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericApplicationIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericCDROMIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericCDROMIconResource;
$A2A3B97015A39488E2F6B427ADE8C31C kGenericCRT;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericComponentIcon;
$97A5E9E57B6262E6DD21F6195F1E3198 kGenericComponentVersion;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericControlPanelIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericControlStripModuleIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericDeskAccessoryIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericDeskAccessoryIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericDocumentIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericDocumentIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericEditionFileIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericEditionFileIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericExtensionIcon;
$883B7585B4D93D2BF8A69055FD2A75BF kGenericExtensionIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericFileServerIcon;
$66515207F0D737806D7F37B84E062AAB kGenericFileServerIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericFloppyIcon;
$121E1AC3EB6A789387393DDCCEF5B35F kGenericFolderIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericFolderIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericFontIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericFontScalerIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericHardDiskIcon;
$66515207F0D737806D7F37B84E062AAB kGenericHardDiskIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericIDiskIcon;
$5B004150561D8A57B6AEE998E4910F58 kGenericKCItemAttr;
$A2A3B97015A39488E2F6B427ADE8C31C kGenericLCD;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericMoverObjectIcon;
$66515207F0D737806D7F37B84E062AAB kGenericMoverObjectIconResource;
$6D648334E802817A93CD41CA53919B60 kGenericNetworkIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericPCCardIcon;
$6272D81C4918127572EE4E585B7F7799 kGenericPasswordKCItemClass;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericPreferencesIcon;
$883B7585B4D93D2BF8A69055FD2A75BF kGenericPreferencesIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericQueryDocumentIcon;
$883B7585B4D93D2BF8A69055FD2A75BF kGenericQueryDocumentIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericRAMDiskIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericRAMDiskIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericRemovableMediaIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericSharedLibaryIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericStationeryIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kGenericStationeryIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericSuitcaseIcon;
$66515207F0D737806D7F37B84E062AAB kGenericSuitcaseIconResource;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericURLIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kGenericWORMIcon;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kGenericWindowIcon;
$B66336CDD3FB7BACAE93B982EED235B4 kGetAETE;
$B66336CDD3FB7BACAE93B982EED235B4 kGetAEUT;
$215E8D6413C3A88FB05DA22203D2FB0C kGetConnectionCount;
$BF40FF4EAF09DF7FBAAAD52C33F2F16B kGetDebugOption;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kGetPowerInfo;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kGetPowerLevel;
$0CE592B5184B238B16AB67F4BE1A6C98 kGetSelectedText;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kGetWakeOnNetInfo;
$55E5252D84E6F1A48D581BACE889D526 kGetmsgEvent;
$97FA3A9004AF8E74324D08F4D09E2464 kGlueCFragSymbol;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionAdobeCNS1;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionAdobeGB1;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionAdobeJapan1;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionAdobeJapan2;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionAdobeKorea1;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionGID;
$47C1F95274DC9AD738FB689AB738B6F6 kGlyphCollectionUnspecified;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kGridIcon;
$4B1D9FE243A502F122BF86EDB061F24B kGroupID2Name;
$61758FF10C8319CCF39299F61C4617E7 kGroupIcon;
$4B1D9FE243A502F122BF86EDB061F24B kGroupName2ID;
$61758FF10C8319CCF39299F61C4617E7 kGuestUserIcon;
$4693F9F93A5130D57E44F485B4108586 kHALCustomComponentSubType;
$6774B622D0AF93246EAABD7C3CA4BA25 kHDQueuePostBit;
$6774B622D0AF93246EAABD7C3CA4BA25 kHDQueuePostMask;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSAllocationFileID;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSAttributesFileID;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSBadBlockFileID;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSBogusExtentFileID;
$7886B6974A8D74D900241E0716643BC9 kHFSBootVolumeInconsistentBit;
$7886B6974A8D74D900241E0716643BC9 kHFSBootVolumeInconsistentMask;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSCatalogFileID;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSCatalogKeyMaximumLength;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSCatalogKeyMinimumLength;
$D0C07FC7AB2F6220C0F9DB6E03A88383 kHFSCatalogNodeIDsReusedBit;
$D0C07FC7AB2F6220C0F9DB6E03A88383 kHFSCatalogNodeIDsReusedMask;
$F37E133A365EB9F6FA66643137085251 kHFSExtentDensity;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSExtentKeyMaximumLength;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSExtentsFileID;
$60616C0D0F3219145D1406847C7D94FB kHFSFileLockedBit;
$60616C0D0F3219145D1406847C7D94FB kHFSFileLockedMask;
$43AF380ED1E5C6639BF29287A0048170 kHFSFileRecord;
$43AF380ED1E5C6639BF29287A0048170 kHFSFileThreadRecord;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSFirstUserCatalogNodeID;
$43AF380ED1E5C6639BF29287A0048170 kHFSFolderRecord;
$43AF380ED1E5C6639BF29287A0048170 kHFSFolderThreadRecord;
$7886B6974A8D74D900241E0716643BC9 kHFSMDBAttributesMask;
$ACDB03B0D9D598C0F761C4B16B3D1CB5 kHFSMaxFileNameChars;
$ACDB03B0D9D598C0F761C4B16B3D1CB5 kHFSMaxVolumeNameChars;
$44412BD0CE14AFC237A6D071851322F1 kHFSPlusAttrExtents;
$44412BD0CE14AFC237A6D071851322F1 kHFSPlusAttrForkData;
$44412BD0CE14AFC237A6D071851322F1 kHFSPlusAttrInlineData;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSPlusAttrMinNodeSize;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSPlusCatalogKeyMaximumLength;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSPlusCatalogKeyMinimumLength;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSPlusCatalogMinNodeSize;
$F37E133A365EB9F6FA66643137085251 kHFSPlusExtentDensity;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSPlusExtentKeyMaximumLength;
$422B151CF90F7CD02DBADD7DA727FB0A kHFSPlusExtentMinNodeSize;
$43AF380ED1E5C6639BF29287A0048170 kHFSPlusFileRecord;
$43AF380ED1E5C6639BF29287A0048170 kHFSPlusFileThreadRecord;
$43AF380ED1E5C6639BF29287A0048170 kHFSPlusFolderRecord;
$43AF380ED1E5C6639BF29287A0048170 kHFSPlusFolderThreadRecord;
$ACDB03B0D9D598C0F761C4B16B3D1CB5 kHFSPlusMaxFileNameChars;
$70FA12DE44E9FD5F06F800CAA0F374AC kHFSPlusMountVersion;
$70FA12DE44E9FD5F06F800CAA0F374AC kHFSPlusSigWord;
$70FA12DE44E9FD5F06F800CAA0F374AC kHFSPlusVersion;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSRootFolderID;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSRootParentID;
$70FA12DE44E9FD5F06F800CAA0F374AC kHFSSigWord;
$18F39A1BE291178CAFF63DBEEBB644E5 kHFSStartupFileID;
$60616C0D0F3219145D1406847C7D94FB kHFSThreadExistsBit;
$60616C0D0F3219145D1406847C7D94FB kHFSThreadExistsMask;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeHardwareLockBit;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeHardwareLockMask;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeNoCacheRequiredBit;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeNoCacheRequiredMask;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeSoftwareLockBit;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeSoftwareLockMask;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeSparedBlocksBit;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeSparedBlocksMask;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeUnmountedBit;
$7886B6974A8D74D900241E0716643BC9 kHFSVolumeUnmountedMask;
$141B23B961AB000ED23D4AC400E18EFC kHIComboBoxAutoCompletionAttribute;
$141B23B961AB000ED23D4AC400E18EFC kHIComboBoxAutoDisclosureAttribute;
$141B23B961AB000ED23D4AC400E18EFC kHIComboBoxAutoSizeListAttribute;
$141B23B961AB000ED23D4AC400E18EFC kHIComboBoxAutoSortAttribute;
$E90B1C6BF0821FD1D5BB42A32AC9ECE6 kHIComboBoxDisclosurePart;
$E90B1C6BF0821FD1D5BB42A32AC9ECE6 kHIComboBoxEditTextPart;
$C03C4FEB0BB7F34A95A1C302FEAFF801 kHIComboBoxListPixelHeightTag;
$C03C4FEB0BB7F34A95A1C302FEAFF801 kHIComboBoxListPixelWidthTag;
$C03C4FEB0BB7F34A95A1C302FEAFF801 kHIComboBoxListTag;
$141B23B961AB000ED23D4AC400E18EFC kHIComboBoxNoAttributes;
$C03C4FEB0BB7F34A95A1C302FEAFF801 kHIComboBoxNumVisibleItemsTag;
$141B23B961AB000ED23D4AC400E18EFC kHIComboBoxStandardAttributes;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandAbout;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandAppHelp;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandArrangeInFront;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandBringAllToFront;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandCancel;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandClear;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandClose;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandCopy;
$557D46922707209D59270A6EABB5D895 kHICommandCustomizeToolbar;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandCut;
$30CD7FC0C2D09243D54684151A3B7CA6 kHICommandFromControl;
$30CD7FC0C2D09243D54684151A3B7CA6 kHICommandFromMenu;
$30CD7FC0C2D09243D54684151A3B7CA6 kHICommandFromWindow;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandHide;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandHideOthers;
$557D46922707209D59270A6EABB5D895 kHICommandHideToolbar;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandMaximizeAll;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandMaximizeWindow;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandMinimizeAll;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandMinimizeWindow;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandNew;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandOK;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandOpen;
$F47CE06A0D6958E9EF7813EEC6CA9819 kHICommandOther;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandPageSetup;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandPaste;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandPreferences;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandPrint;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandQuit;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandRedo;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandRevert;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandRotateFloatingWindowsBackward;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandRotateFloatingWindowsForward;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandRotateWindowsBackward;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandRotateWindowsForward;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandSave;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandSaveAs;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandSelectAll;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandSelectWindow;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandShowAll;
$0A0DD2B7A2EE9AC4400C9911D0B12C93 kHICommandShowHideFontPanel;
$557D46922707209D59270A6EABB5D895 kHICommandShowToolbar;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandUndo;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandWindowListSeparator;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandWindowListTerminator;
$2C441A4C9DFE18B245ECF3A994B7DC2A kHICommandZoomWindow;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDBadLogPhysValuesErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDBadLogicalMaximumErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDBadLogicalMinimumErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDBadParameterErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDBaseError;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDBufferTooSmallErr;
$309DD8F4158E7783E222B7593DB45679 kHIDDeviceNotReady;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDEndOfDescriptorErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDIncompatibleReportErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvalidPreparsedDataErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvalidRangePageErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvalidReportLengthErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvalidReportTypeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvertedLogicalRangeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvertedPhysicalRangeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDInvertedUsageRangeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDNotEnoughMemoryErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDNotValueArrayErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDNullPointerErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDNullStateErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDReportCountZeroErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDReportIDZeroErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDReportSizeZeroErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDSuccess;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDUnmatchedDesignatorRangeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDUnmatchedStringRangeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDUnmatchedUsageRangeErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDUsageNotFoundErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDUsagePageZeroErr;
$776CEEEF1724069A8B62F050CF3D2C1F kHIDValueOutOfRangeErr;
$309DD8F4158E7783E222B7593DB45679 kHIDVersionIncompatibleErr;
$44192C9BACDA0C0DF9CC5EEAC16E636A kHIImageViewImageTag;
$E253531303CE1933D82A4FF3A0E17EAD kHIScrollViewOptionsAllowGrow;
$E253531303CE1933D82A4FF3A0E17EAD kHIScrollViewOptionsHorizScroll;
$E253531303CE1933D82A4FF3A0E17EAD kHIScrollViewOptionsVertScroll;
$E253531303CE1933D82A4FF3A0E17EAD kHIScrollViewValidOptions;
$10EBE52A38E753D20862EE3FC02E2BA2 kHIToolbarAutoSavesConfig;
$6407CCE729840C404FE10EAF153BFCF9 kHIToolbarDisplayModeDefault;
$6407CCE729840C404FE10EAF153BFCF9 kHIToolbarDisplayModeIconAndLabel;
$6407CCE729840C404FE10EAF153BFCF9 kHIToolbarDisplayModeIconOnly;
$6407CCE729840C404FE10EAF153BFCF9 kHIToolbarDisplayModeLabelOnly;
$547E4BED69470BA18FC2EB3CA6A3F2B6 kHIToolbarDisplaySizeDefault;
$547E4BED69470BA18FC2EB3CA6A3F2B6 kHIToolbarDisplaySizeNormal;
$547E4BED69470BA18FC2EB3CA6A3F2B6 kHIToolbarDisplaySizeSmall;
$10EBE52A38E753D20862EE3FC02E2BA2 kHIToolbarIsConfigurable;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemAllowDuplicates;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemAnchoredLeft;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemCantBeRemoved;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemIsSeparator;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemMutableAttrs;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemNoAttributes;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemSendCmdToUserFocus;
$684092AFDB9764EBADD93A3116DB7884 kHIToolbarItemValidAttrs;
$10EBE52A38E753D20862EE3FC02E2BA2 kHIToolbarNoAttributes;
$10EBE52A38E753D20862EE3FC02E2BA2 kHIToolbarValidAttrs;
$D46779DF5EEDD0108B7FB173165B2E9A kHIViewSendCommandToUserFocus;
$C942FFF88CB30AAF99EA8E1B74325729 kHIViewZOrderAbove;
$C942FFF88CB30AAF99EA8E1B74325729 kHIViewZOrderBelow;
$2F77717C3467B00F30752604503E3172 kHMAboutHelpItem;
$8688B6C5374D289F1DCBFFC93281630C kHMAbsoluteCenterAligned;
$94B2DCEEA8C33F8D445E175685EA6067 kHMBottomLeftCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMBottomRightCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMBottomSide;
$62627BB3DAC5CE27402315E5E0D76925 kHMCFStringContent;
$62627BB3DAC5CE27402315E5E0D76925 kHMCFStringLocalizedContent;
$9F1EC888C51F8AAA6D7EFB86302E0371 kHMCheckedItem;
$824E76B1FE6C75092249DDDDCF57A98C kHMCompareItem;
$F0B4C32608914FEFF955228F172D9D56 kHMContentNotProvided;
$F0B4C32608914FEFF955228F172D9D56 kHMContentNotProvidedDontPropagate;
$F0B4C32608914FEFF955228F172D9D56 kHMContentProvided;
$8688B6C5374D289F1DCBFFC93281630C kHMDefaultSide;
$B51F70A03AE9DD615A38F3B5534C58E6 kHMDialogResType;
$9F1EC888C51F8AAA6D7EFB86302E0371 kHMDisabledItem;
$41642B1A80C93242E65DBEA41BBE48D0 kHMDisposeContent;
$95F736BC60C90921AA5D966537109656 kHMEnabledItem;
$B51F70A03AE9DD615A38F3B5534C58E6 kHMFinderApplResType;
$692E22D724EF9B6C4AC501DA1C5BD874 kHMHelpID;
$2F77717C3467B00F30752604503E3172 kHMHelpMenuID;
$76AF4E52D030C8125ED390D9BED05CBF kHMIllegalContentForMinimumState;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideBottomCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideBottomLeftCorner;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideBottomRightCorner;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideLeftCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideRightCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideTopCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideTopLeftCorner;
$8688B6C5374D289F1DCBFFC93281630C kHMInsideTopRightCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMLeftBottomCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMLeftSide;
$94B2DCEEA8C33F8D445E175685EA6067 kHMLeftTopCorner;
$77E8F30AE2DD06250972687FE2BED1DB kHMMaximumContentIndex;
$B51F70A03AE9DD615A38F3B5534C58E6 kHMMenuResType;
$77E8F30AE2DD06250972687FE2BED1DB kHMMinimumContentIndex;
$824E76B1FE6C75092249DDDDCF57A98C kHMNamedResourceItem;
$62627BB3DAC5CE27402315E5E0D76925 kHMNoContent;
$9F1EC888C51F8AAA6D7EFB86302E0371 kHMOtherItem;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideBottomCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideBottomLeftAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideBottomRightAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideBottomScriptAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideLeftBottomAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideLeftCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideLeftTopAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideRightBottomAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideRightCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideRightTopAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideTopCenterAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideTopLeftAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideTopRightAligned;
$8688B6C5374D289F1DCBFFC93281630C kHMOutsideTopScriptAligned;
$B51F70A03AE9DD615A38F3B5534C58E6 kHMOverrideResType;
$62627BB3DAC5CE27402315E5E0D76925 kHMPascalStrContent;
$824E76B1FE6C75092249DDDDCF57A98C kHMPictItem;
$B51F70A03AE9DD615A38F3B5534C58E6 kHMRectListResType;
$9F1EC888C51F8AAA6D7EFB86302E0371 kHMRegularWindow;
$94B2DCEEA8C33F8D445E175685EA6067 kHMRightBottomCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMRightSide;
$94B2DCEEA8C33F8D445E175685EA6067 kHMRightTopCorner;
$824E76B1FE6C75092249DDDDCF57A98C kHMSTRResItem;
$9F1EC888C51F8AAA6D7EFB86302E0371 kHMSaveBitsNoWindow;
$9F1EC888C51F8AAA6D7EFB86302E0371 kHMSaveBitsWindow;
$2F77717C3467B00F30752604503E3172 kHMShowBalloonsItem;
$824E76B1FE6C75092249DDDDCF57A98C kHMSkipItem;
$62627BB3DAC5CE27402315E5E0D76925 kHMStrResContent;
$824E76B1FE6C75092249DDDDCF57A98C kHMStringItem;
$62627BB3DAC5CE27402315E5E0D76925 kHMStringResContent;
$824E76B1FE6C75092249DDDDCF57A98C kHMStringResItem;
$41642B1A80C93242E65DBEA41BBE48D0 kHMSupplyContent;
$62627BB3DAC5CE27402315E5E0D76925 kHMTEHandleContent;
$824E76B1FE6C75092249DDDDCF57A98C kHMTEResItem;
$53C7B439E08ADBF9B1339F9932DCF07D kHMTEStyleResType;
$53C7B439E08ADBF9B1339F9932DCF07D kHMTETextResType;
$62627BB3DAC5CE27402315E5E0D76925 kHMTextResContent;
$94B2DCEEA8C33F8D445E175685EA6067 kHMTopLeftCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMTopRightCorner;
$94B2DCEEA8C33F8D445E175685EA6067 kHMTopSide;
$824E76B1FE6C75092249DDDDCF57A98C kHMTrackCntlItem;
$B51F70A03AE9DD615A38F3B5534C58E6 kHMWindListResType;
$A2A3B97015A39488E2F6B427ADE8C31C kHRConnect;
$8CB50D085181832D0B273A71794FB966 kHRLookingForEmbedded;
$8CB50D085181832D0B273A71794FB966 kHRLookingForFrame;
$8CB50D085181832D0B273A71794FB966 kHRLookingForHTMLSource;
$8CB50D085181832D0B273A71794FB966 kHRLookingForImage;
$8CB50D085181832D0B273A71794FB966 kHRLookingForImageMap;
$A7FD918061FC0B9B4EFABC08C951B71D kHRRendererHTML32Type;
$6D648334E802817A93CD41CA53919B60 kHTTPServerIcon;
$E31D1D986D7A2398F5BE58D621867533 kHalfWidthCJKRomanSelector;
$71E191EDC33909E003A3BACB6AB04ABE kHalfWidthIdeographsSelector;
$B70B70D55F7ADAC1B4115BB8A43A6B45 kHalfWidthTextSelector;
$D48D0142A15925E22F8E59B6251D2E88 kHandleIsResourceBit;
$61EA92AFF5BB534B32B0D73E96A976AE kHandleIsResourceMask;
$D48D0142A15925E22F8E59B6251D2E88 kHandleLockedBit;
$61EA92AFF5BB534B32B0D73E96A976AE kHandleLockedMask;
$C9196282FECEA653565233A7CD50F0CD kHandleMultipleHoles;
$D48D0142A15925E22F8E59B6251D2E88 kHandlePurgeableBit;
$61EA92AFF5BB534B32B0D73E96A976AE kHandlePurgeableMask;
$C9196282FECEA653565233A7CD50F0CD kHandlesGetRegion;
$C9196282FECEA653565233A7CD50F0CD kHandlesOffset2Pos;
$C9196282FECEA653565233A7CD50F0CD kHandlesPos2Offset;
$C9196282FECEA653565233A7CD50F0CD kHandlesUpdateRegion;
$DCE09C5AC8576D753F0EFEA779280476 kHandwritingInputMethodContextTag;
$DCE09C5AC8576D753F0EFEA779280476 kHandwritingLocaleObjectRefTag;
$EBF6D2B8724BD6268E803B35A76B996A kHanjaToHangulAltOneSelector;
$EBF6D2B8724BD6268E803B35A76B996A kHanjaToHangulAltThreeSelector;
$EBF6D2B8724BD6268E803B35A76B996A kHanjaToHangulAltTwoSelector;
$EBF6D2B8724BD6268E803B35A76B996A kHanjaToHangulSelector;
$7F3E7E1AB57D7076B1F8652C10AC5339 kHardwareInterruptLevel;
$F509982AC08FB8D24F1CB8145D1ACBB7 kHardwareSleep;
$F509982AC08FB8D24F1CB8145D1ACBB7 kHardwareWake;
$F509982AC08FB8D24F1CB8145D1ACBB7 kHardwareWakeFromSuspend;
$F509982AC08FB8D24F1CB8145D1ACBB7 kHardwareWakeToDoze;
$F509982AC08FB8D24F1CB8145D1ACBB7 kHardwareWakeToDozeFromSuspend;
$CC052733775226ECD6E2A883D62A4D31 kHasBeenInited;
$CC052733775226ECD6E2A883D62A4D31 kHasBundle;
$CC052733775226ECD6E2A883D62A4D31 kHasCustomIcon;
$5CDB6810CF5FAA70771C826E258B46A2 kHasDDCConnection;
$5CDB6810CF5FAA70771C826E258B46A2 kHasDirectConnection;
$CC052733775226ECD6E2A883D62A4D31 kHasNoINITs;
$C61609BB0F455BF0C49EDE98D48A29D1 kHeadOfQueueTagMsg;
$15B474B0157EF27E4DCE242BA0AE207F kHebrewFigureSpaceVariant;
$15B474B0157EF27E4DCE242BA0AE207F kHebrewStandardVariant;
$40B1D294FCB105E6FD797FB89EF6F7A3 kHelpCharCode;
$333B154C3EB4D8DDCA6A976D4C3734A3 kHelpDialogItem;
$5159DF5F69DB4B07E5314ED3C5415015 kHelpFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kHelpFolderType;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kHelpIcon;
$883B7585B4D93D2BF8A69055FD2A75BF kHelpIconResource;
$E6FEC5FAD34D7B0A3513238E44F10825 kHelpTagEventHandlerTag;
$B95EEEF8D0A9C3F124CECCB9E5363575 kHelpWindowClass;
$882E335BD166895EB3BB07B177635657 kHideDiacriticsSelector;
$BC1F616B739DE2CDCB7069176F2A8DF9 kHierarchicalFontMenuOption;
$FEBB2992DC4ADCE18624A3BF5CCB540F kHighLevelEvent;
$56EDAB68D3F8BADD4C371F358805869C kHighQuality;
$F842FD2D88627E8C9CB75D292100935D kHilite;
$EBF6D2B8724BD6268E803B35A76B996A kHiraganaToKatakanaSelector;
$40B1D294FCB105E6FD797FB89EF6F7A3 kHomeCharCode;
$D0BB73902856307AC287F05F0A49525F kHorizontalConstraint;
$8D4D07E192BE4DF49363A655628BC0D2 kHorizontalSyncMask;
$4D57E139977BB0143BB8B19E8C425A45 kHuge1BitMask;
$4D57E139977BB0143BB8B19E8C425A45 kHuge32BitData;
$4D57E139977BB0143BB8B19E8C425A45 kHuge4BitData;
$4D57E139977BB0143BB8B19E8C425A45 kHuge8BitData;
$4D57E139977BB0143BB8B19E8C425A45 kHuge8BitMask;
$F1801BD1D809F59C5583F4A7CDF3D075 kHyphenToEnDashOffSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kHyphenToEnDashOnSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kHyphenToMinusOffSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kHyphenToMinusOnSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kHyphensToEmDashOffSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kHyphensToEmDashOnSelector;
$DCBDF5E61D65FCB68714A5CE2FEF8A8A kIBCarbonRuntimeCantFindNibFile;
$DCBDF5E61D65FCB68714A5CE2FEF8A8A kIBCarbonRuntimeCantFindObject;
$DCBDF5E61D65FCB68714A5CE2FEF8A8A kIBCarbonRuntimeObjectNotOfRequestedType;
$E5122D8254C0F0861398447E075667F5 kICAAccessReadOnly;
$E5122D8254C0F0861398447E075667F5 kICAAccessReadOnlyWithObjectDeletion;
$E5122D8254C0F0861398447E075667F5 kICAAccessReadWrite;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICACommunicationErr;
$8935E574E8FDDCFD9BD79995C6776A3E kICADevice;
$8935E574E8FDDCFD9BD79995C6776A3E kICADeviceCamera;
$8935E574E8FDDCFD9BD79995C6776A3E kICADeviceMFP;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICADeviceNotFoundErr;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICADeviceNotOpenErr;
$8935E574E8FDDCFD9BD79995C6776A3E kICADeviceScanner;
$8935E574E8FDDCFD9BD79995C6776A3E kICADirectory;
$265C4BABE4FB38D9FC66B09DA6D1722C kICAEntireLength;
$387872D70D825AD7A54186238C3730A9 kICAEventCancelTransaction;
$387872D70D825AD7A54186238C3730A9 kICAEventCaptureComplete;
$387872D70D825AD7A54186238C3730A9 kICAEventDeviceAdded;
$387872D70D825AD7A54186238C3730A9 kICAEventDeviceInfoChanged;
$387872D70D825AD7A54186238C3730A9 kICAEventDevicePropChanged;
$387872D70D825AD7A54186238C3730A9 kICAEventDeviceRemoved;
$387872D70D825AD7A54186238C3730A9 kICAEventDeviceReset;
$387872D70D825AD7A54186238C3730A9 kICAEventObjectAdded;
$387872D70D825AD7A54186238C3730A9 kICAEventObjectInfoChanged;
$387872D70D825AD7A54186238C3730A9 kICAEventObjectRemoved;
$387872D70D825AD7A54186238C3730A9 kICAEventRequestObjectTransfer;
$387872D70D825AD7A54186238C3730A9 kICAEventStorageInfoChanged;
$387872D70D825AD7A54186238C3730A9 kICAEventStoreAdded;
$387872D70D825AD7A54186238C3730A9 kICAEventStoreFull;
$387872D70D825AD7A54186238C3730A9 kICAEventStoreRemoved;
$387872D70D825AD7A54186238C3730A9 kICAEventUnreportedStatus;
$8935E574E8FDDCFD9BD79995C6776A3E kICAFile;
$8935E574E8FDDCFD9BD79995C6776A3E kICAFileAudio;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICAFileCorruptedErr;
$8935E574E8FDDCFD9BD79995C6776A3E kICAFileFirmware;
$8935E574E8FDDCFD9BD79995C6776A3E kICAFileImage;
$8935E574E8FDDCFD9BD79995C6776A3E kICAFileMovie;
$8935E574E8FDDCFD9BD79995C6776A3E kICAFileOther;
$2EE66211F648EF83D95245ADB7E26EDD kICAFileystemDCF;
$2EE66211F648EF83D95245ADB7E26EDD kICAFileystemGenericFlat;
$2EE66211F648EF83D95245ADB7E26EDD kICAFileystemGenericHierarchical;
$5F22999F1FF952D3B8F449271715EA14 kICAFlagReadAccess;
$5F22999F1FF952D3B8F449271715EA14 kICAFlagReadWriteAccess;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICAIOPendingErr;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICAIndexOutOfRangeErr;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICAInvalidObjectErr;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICAInvalidPropertyErr;
$8935E574E8FDDCFD9BD79995C6776A3E kICAList;
$695B2A0CBCE6688875F4EE9D43AF2E19 kICAMessageCameraCaptureNewImage;
$695B2A0CBCE6688875F4EE9D43AF2E19 kICAMessageCameraDeleteAll;
$695B2A0CBCE6688875F4EE9D43AF2E19 kICAMessageCameraDeleteOne;
$695B2A0CBCE6688875F4EE9D43AF2E19 kICAMessageCameraSyncClock;
$695B2A0CBCE6688875F4EE9D43AF2E19 kICAMessageCameraUploadData;
$1EC71A138665501A7B98C6DE5D59F684 kICAMessageCheckDevice;
$1EC71A138665501A7B98C6DE5D59F684 kICAMessageConnect;
$1EC71A138665501A7B98C6DE5D59F684 kICAMessageDisconnect;
$1EC71A138665501A7B98C6DE5D59F684 kICAMessageReset;
$16BA785E33E9E6E069782B64703C2921 kICAPBVersion;
$C91F69A5AC168D617F97E57195353DD8 kICAProperty;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraAccessCapability;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraBatteryLevel;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraBurstInterval;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraBurstNumber;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraCaptureDelay;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraCompressionSetting;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraContrast;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraDateTime;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraDigitalZoom;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraEffectMode;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraExposureBiasCompensation;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraExposureIndex;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraExposureMeteringMode;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraExposureProgramMode;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraExposureTime;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFNumber;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraFilesystemType;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFlashMode;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFocalLength;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFocusDistance;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFocusMeteringMode;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFocusMode;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraFreeSpaceInBytes;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraFreeSpaceInImages;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraFunctionalMode;
$81C0B8F23CE92E5B7999C2C145DAFF7E kICAPropertyCameraIcon;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraImageSize;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraMaxCapacity;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraRGBGain;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraSharpness;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraStillCaptureMode;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraStorageDescription;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraStorageType;
$81C0B8F23CE92E5B7999C2C145DAFF7E kICAPropertyCameraSupportedMessages;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraTimelapseInterval;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraTimelapseNumber;
$9A7075FD694CCF94FA4474891759A837 kICAPropertyCameraVolumeLabel;
$8A8A02C72A64C957732091530636DE08 kICAPropertyCameraWhiteBalance;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyColorSpace;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyColorSyncProfile;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageAperture;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageBitDepth;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageDPI;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageData;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageDateDigitized;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageDateOriginal;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageExposureTime;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageFNumber;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageFilename;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageFlash;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageHeight;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageShutterSpeed;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageSize;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageThumbnail;
$C91F69A5AC168D617F97E57195353DD8 kICAPropertyImageWidth;
$18CEE750F48178E5EB6FE2F7AFF3FE50 kICAPropertyTypeNotFoundErr;
$265C4BABE4FB38D9FC66B09DA6D1722C kICAStartAtBeginning;
$93B255DBC051FC6778BD8F1C81833EA9 kICAStorageFixedRAM;
$93B255DBC051FC6778BD8F1C81833EA9 kICAStorageFixedROM;
$93B255DBC051FC6778BD8F1C81833EA9 kICAStorageRemovableRAM;
$93B255DBC051FC6778BD8F1C81833EA9 kICAStorageRemovableROM;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeBoolean;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeData;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeFixed;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeSInt16;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeSInt32;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeSInt64;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeString;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeThumbnail;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeUInt16;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeUInt32;
$BBEEC2DDBFA0E8055695BAE3A9649DA9 kICATypeUInt64;
$8BD9DAC327CF1DCBA313B67285FDB4D7 kICAttrLockedBit;
$5C007B835494126F6B1399E025572D4F kICAttrLockedMask;
$5C007B835494126F6B1399E025572D4F kICAttrNoChange;
$8BD9DAC327CF1DCBA313B67285FDB4D7 kICAttrVolatileBit;
$5C007B835494126F6B1399E025572D4F kICAttrVolatileMask;
$CD96CBF9FAB54130F2F8CFD47EB21DE3 kICComponentInterfaceVersion;
$CD96CBF9FAB54130F2F8CFD47EB21DE3 kICComponentInterfaceVersion0;
$CD96CBF9FAB54130F2F8CFD47EB21DE3 kICComponentInterfaceVersion1;
$CD96CBF9FAB54130F2F8CFD47EB21DE3 kICComponentInterfaceVersion2;
$CD96CBF9FAB54130F2F8CFD47EB21DE3 kICComponentInterfaceVersion3;
$CD96CBF9FAB54130F2F8CFD47EB21DE3 kICComponentInterfaceVersion4;
$6E476675947793D9A10C5086C379A863 kICComponentVersion;
$DB68FC52E7A0EE2448DC42C0E4CCE9EE kICCreator;
$82F4B6A591AFE85C9EE95AAC9B96B6B1 kICEditPreferenceEvent;
$82F4B6A591AFE85C9EE95AAC9B96B6B1 kICEditPreferenceEventClass;
$BF8A9F47DC4686BD0CD46F7ADD2DF367 kICFileSpecHeaderSize;
$DB68FC52E7A0EE2448DC42C0E4CCE9EE kICFileType;
$F9A25D2E3F637836107E43455CA082E2 kICMapBinaryBit;
$6FF5C06816C8C4E9D0FF921D54B24694 kICMapBinaryMask;
$F9A25D2E3F637836107E43455CA082E2 kICMapDataForkBit;
$6FF5C06816C8C4E9D0FF921D54B24694 kICMapDataForkMask;
$1DC844FD22F2F6EF68EA2E0E036634AB kICMapFixedLength;
$F9A25D2E3F637836107E43455CA082E2 kICMapNotIncomingBit;
$6FF5C06816C8C4E9D0FF921D54B24694 kICMapNotIncomingMask;
$F9A25D2E3F637836107E43455CA082E2 kICMapNotOutgoingBit;
$6FF5C06816C8C4E9D0FF921D54B24694 kICMapNotOutgoingMask;
$F9A25D2E3F637836107E43455CA082E2 kICMapPostBit;
$6FF5C06816C8C4E9D0FF921D54B24694 kICMapPostMask;
$F9A25D2E3F637836107E43455CA082E2 kICMapResourceForkBit;
$6FF5C06816C8C4E9D0FF921D54B24694 kICMapResourceForkMask;
$15FBF4E6B0E48270A9D25DDC074F96E3 kICNilProfileID;
$B940DCEDFB2C8CDA57978662DE224A9D kICNoUserInteractionBit;
$EC4F51B01B4845EDF279AE130782D647 kICNoUserInteractionMask;
$6E476675947793D9A10C5086C379A863 kICNumVersion;
$5E07452A86FFEC6EE5E141FB0D749E73 kICServicesTCPBit;
$D9A7D5A353649F9F975455DA5D948859 kICServicesTCPMask;
$5E07452A86FFEC6EE5E141FB0D749E73 kICServicesUDPBit;
$D9A7D5A353649F9F975455DA5D948859 kICServicesUDPMask;
$2458EF0392DC89200FBA82BF1A959AAA kIM1ByteInputMode;
$2458EF0392DC89200FBA82BF1A959AAA kIM2ByteInputMode;
$18BF411237F175ABCD4A1D90A0B1F6B7 kIMACompression;
$7C59A514887DFA2EDA116E91B0748487 kIMB5CodeInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMCangjieInputMode;
$2458EF0392DC89200FBA82BF1A959AAA kIMDirectInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMHiraganaInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMHuaInputMode;
$AC0A2677D571DAA04AD1DD0469ED0A1D kIMJaTypingMethodKana;
$AC0A2677D571DAA04AD1DD0469ED0A1D kIMJaTypingMethodProperty;
$AC0A2677D571DAA04AD1DD0469ED0A1D kIMJaTypingMethodRoman;
$7C59A514887DFA2EDA116E91B0748487 kIMJianyiInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMKatakanaInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMPasswordInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMPinyinInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMQuweiInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMRomanInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMXingInputMode;
$7C59A514887DFA2EDA116E91B0748487 kIMZhuyinInputMode;
$0C0483DCCEAF8DFD45718DA068D36856 kIOAsyncCalloutCount;
$0C0483DCCEAF8DFD45718DA068D36856 kIOAsyncCalloutFuncIndex;
$0C0483DCCEAF8DFD45718DA068D36856 kIOAsyncCalloutRefconIndex;
$58E0C696113622080B4B29DB39E7C665 kIOAsyncCompletionNotificationType;
$0C0483DCCEAF8DFD45718DA068D36856 kIOAsyncReservedCount;
$0C0483DCCEAF8DFD45718DA068D36856 kIOAsyncReservedIndex;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOClientIsUserMode;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOCoherentDataPath;
$BF7E268CC0731DCB307DE3733DFF40FD kIOCopybackCache;
$BF7E268CC0731DCB307DE3733DFF40FD kIODefaultCache;
$B3A3B6B2A8D3A648DB50B6842B4B7FCD kIODefaultMemoryType;
$BF7E268CC0731DCB307DE3733DFF40FD kIOInhibitCache;
$0C0483DCCEAF8DFD45718DA068D36856 kIOInterestCalloutCount;
$0C0483DCCEAF8DFD45718DA068D36856 kIOInterestCalloutFuncIndex;
$0C0483DCCEAF8DFD45718DA068D36856 kIOInterestCalloutRefconIndex;
$0C0483DCCEAF8DFD45718DA068D36856 kIOInterestCalloutServiceIndex;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOIsInput;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOIsOutput;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOLogicalRanges;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapAnywhere;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapCacheMask;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapCacheShift;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapCopybackCache;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapDefaultCache;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapInhibitCache;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapReadOnly;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapReference;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapStatic;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapUserOptionsMask;
$07F3003D98F1E28D35F5CE4E8E418ECE kIOMapWriteThruCache;
$0C0483DCCEAF8DFD45718DA068D36856 kIOMatchingCalloutCount;
$0C0483DCCEAF8DFD45718DA068D36856 kIOMatchingCalloutFuncIndex;
$0C0483DCCEAF8DFD45718DA068D36856 kIOMatchingCalloutRefconIndex;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOMinimalLogicalMapping;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOMultipleRanges;
$373DB765CCEA5ADDF41643121FA287A2 kIORegistryIterateParents;
$373DB765CCEA5ADDF41643121FA287A2 kIORegistryIterateRecursively;
MACRO_kIOReturnAborted kIOReturnAborted;
MACRO_kIOReturnBadArgument kIOReturnBadArgument;
MACRO_kIOReturnBadMedia kIOReturnBadMedia;
MACRO_kIOReturnBadMessageID kIOReturnBadMessageID;
MACRO_kIOReturnBusy kIOReturnBusy;
MACRO_kIOReturnCannotLock kIOReturnCannotLock;
MACRO_kIOReturnCannotWire kIOReturnCannotWire;
MACRO_kIOReturnDMAError kIOReturnDMAError;
MACRO_kIOReturnDeviceError kIOReturnDeviceError;
MACRO_kIOReturnSuccess kIOReturnError;
MACRO_kIOReturnExclusiveAccess kIOReturnExclusiveAccess;
MACRO_kIOReturnIOError kIOReturnIOError;
MACRO_kIOReturnIPCError kIOReturnIPCError;
MACRO_kIOReturnInternalError kIOReturnInternalError;
MACRO_kIOReturnInvalid kIOReturnInvalid;
MACRO_kIOReturnIsoTooNew kIOReturnIsoTooNew;
MACRO_kIOReturnIsoTooOld kIOReturnIsoTooOld;
MACRO_kIOReturnLockedRead kIOReturnLockedRead;
MACRO_kIOReturnLockedWrite kIOReturnLockedWrite;
MACRO_kIOReturnMessageTooLarge kIOReturnMessageTooLarge;
MACRO_kIOReturnNoBandwidth kIOReturnNoBandwidth;
MACRO_kIOReturnNoChannels kIOReturnNoChannels;
MACRO_kIOReturnNoCompletion kIOReturnNoCompletion;
MACRO_kIOReturnNoDevice kIOReturnNoDevice;
MACRO_kIOReturnNoFrames kIOReturnNoFrames;
MACRO_kIOReturnNoInterrupt kIOReturnNoInterrupt;
MACRO_kIOReturnNoMedia kIOReturnNoMedia;
MACRO_kIOReturnNoMemory kIOReturnNoMemory;
MACRO_kIOReturnNoPower kIOReturnNoPower;
MACRO_kIOReturnNoResources kIOReturnNoResources;
MACRO_kIOReturnNoSpace kIOReturnNoSpace;
MACRO_kIOReturnNotAligned kIOReturnNotAligned;
MACRO_kIOReturnNotAttached kIOReturnNotAttached;
MACRO_kIOReturnNotFound kIOReturnNotFound;
MACRO_kIOReturnNotOpen kIOReturnNotOpen;
MACRO_kIOReturnNotPermitted kIOReturnNotPermitted;
MACRO_kIOReturnNotPrivileged kIOReturnNotPrivileged;
MACRO_kIOReturnNotReadable kIOReturnNotReadable;
MACRO_kIOReturnNotReady kIOReturnNotReady;
MACRO_kIOReturnNotResponding kIOReturnNotResponding;
MACRO_kIOReturnNotWritable kIOReturnNotWritable;
MACRO_kIOReturnOffline kIOReturnOffline;
MACRO_kIOReturnOverrun kIOReturnOverrun;
MACRO_kIOReturnPortExists kIOReturnPortExists;
MACRO_kIOReturnRLDError kIOReturnRLDError;
MACRO_kIOReturnStillOpen kIOReturnStillOpen;
MACRO_kIOReturnSuccess kIOReturnSuccess;
MACRO_kIOReturnTimeout kIOReturnTimeout;
MACRO_kIOReturnUnderrun kIOReturnUnderrun;
MACRO_kIOReturnUnformattedMedia kIOReturnUnformattedMedia;
MACRO_kIOReturnUnsupported kIOReturnUnsupported;
MACRO_kIOReturnUnsupportedMode kIOReturnUnsupportedMode;
MACRO_kIOReturnVMError kIOReturnVMError;
$58E0C696113622080B4B29DB39E7C665 kIOServiceMatchedNotificationType;
$58E0C696113622080B4B29DB39E7C665 kIOServiceMessageNotificationType;
$58E0C696113622080B4B29DB39E7C665 kIOServicePublishNotificationType;
$58E0C696113622080B4B29DB39E7C665 kIOServiceTerminatedNotificationType;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOShareMappingTables;
$697CF46D174304B7DC4FBD999B39DD8A kIOStateDone;
$AE9822AFDA0B8360AB38E9887A50ED9D kIOTransferIsLogical;
$BF7E268CC0731DCB307DE3733DFF40FD kIOWriteThruCache;
$ADEC8C5645EDD0C0E96DA21C1B2F49B1 kIPCPTCPHdrCompressionDisabled;
$ADEC8C5645EDD0C0E96DA21C1B2F49B1 kIPCPTCPHdrCompressionEnabled;
$6D648334E802817A93CD41CA53919B60 kIPFileServerIcon;
$9F8FC170A2058B1BE0534DB43DF06411 kIPXSAP;
$70523B5C87059BB39599CC19EB967F7C kIP_ADD_MEMBERSHIP;
$70523B5C87059BB39599CC19EB967F7C kIP_BROADCAST;
$70523B5C87059BB39599CC19EB967F7C kIP_BROADCAST_IFNAME;
$70523B5C87059BB39599CC19EB967F7C kIP_DONTROUTE;
$70523B5C87059BB39599CC19EB967F7C kIP_DROP_MEMBERSHIP;
$70523B5C87059BB39599CC19EB967F7C kIP_HDRINCL;
$70523B5C87059BB39599CC19EB967F7C kIP_MULTICAST_IF;
$70523B5C87059BB39599CC19EB967F7C kIP_MULTICAST_LOOP;
$70523B5C87059BB39599CC19EB967F7C kIP_MULTICAST_TTL;
$70523B5C87059BB39599CC19EB967F7C kIP_OPTIONS;
$70523B5C87059BB39599CC19EB967F7C kIP_RCVDSTADDR;
$70523B5C87059BB39599CC19EB967F7C kIP_RCVIFADDR;
$70523B5C87059BB39599CC19EB967F7C kIP_RCVOPTS;
$70523B5C87059BB39599CC19EB967F7C kIP_REUSEADDR;
$70523B5C87059BB39599CC19EB967F7C kIP_REUSEPORT;
$70523B5C87059BB39599CC19EB967F7C kIP_TOS;
$70523B5C87059BB39599CC19EB967F7C kIP_TTL;
$9976355B4BAE0B37695AC3E25DAC79BC kISDNModuleID;
$CC091832F316327152ED0A035D8C4D44 kISSDownloadsFolderType;
$D962FCC50FB9A2D2DD3C1587B0E3CC62 kISTChipInterruptSource;
$D962FCC50FB9A2D2DD3C1587B0E3CC62 kISTInputDMAInterruptSource;
$D962FCC50FB9A2D2DD3C1587B0E3CC62 kISTOutputDMAInterruptSource;
$D962FCC50FB9A2D2DD3C1587B0E3CC62 kISTPropertyMemberCount;
$9487F6633966F419E1CDD305F9D68872 kISpBufferToSmallErr;
$9487F6633966F419E1CDD305F9D68872 kISpDeviceActiveErr;
$9487F6633966F419E1CDD305F9D68872 kISpDeviceInactiveErr;
$9487F6633966F419E1CDD305F9D68872 kISpElementInListErr;
$9487F6633966F419E1CDD305F9D68872 kISpElementNotInListErr;
$9487F6633966F419E1CDD305F9D68872 kISpInternalErr;
$9487F6633966F419E1CDD305F9D68872 kISpListBusyErr;
$9487F6633966F419E1CDD305F9D68872 kISpSystemActiveErr;
$9487F6633966F419E1CDD305F9D68872 kISpSystemInactiveErr;
$9487F6633966F419E1CDD305F9D68872 kISpSystemListErr;
$333B154C3EB4D8DDCA6A976D4C3734A3 kIconDialogItem;
$BA63FDC895DBB7DF67995D3C5B63C08B kIconFamilyType;
$D0447A8F273E1BD8659CA9D9BA69FD9B kIconServicesCatalogInfoMask;
$1104F0155BF283F3C3CF904C24C07400 kIconServicesNormalUsageFlag;
$1AE43C0817ECDE8EDCB0D679B81B2F71 kIdeographicAltFiveSelector;
$1AE43C0817ECDE8EDCB0D679B81B2F71 kIdeographicAltFourSelector;
$1AE43C0817ECDE8EDCB0D679B81B2F71 kIdeographicAltOneSelector;
$1AE43C0817ECDE8EDCB0D679B81B2F71 kIdeographicAltThreeSelector;
$1AE43C0817ECDE8EDCB0D679B81B2F71 kIdeographicAltTwoSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kIdeographicAlternativesType;
$29926AB924E42B27C90E0FDA4D67BBF6 kIdeographicSpacingType;
$6D0E186233145241771508AFE8C2C7D5 kIdleKCEvent;
$39FE76983533385EB60014D19059B326 kIdleKCEventMask;
$C61609BB0F455BF0C49EDE98D48A29D1 kIgnoreWideResidueMsg;
$057B6098282E3FF245B967EB6CBCEF02 kIllegalClockValueErr;
$1AC1C93A58AB6CB66948DE5864455995 kIllegalInstructionException;
$F7247E5962708F04BC704908F5CB3C56 kIlluminatedCapsSelector;
$23798AE6F72740BA6668BAE2DC24C64C kImmediate;
$4C94D49F19D2C7D3EC87E3F8D916F51F kImportLibraryCFrag;
$0575E16F1A2D49BAD32039706322F417 kInDeferredTaskMask;
$0575E16F1A2D49BAD32039706322F417 kInNestedInterruptMask;
$C9196282FECEA653565233A7CD50F0CD kInPasswordMode;
$0575E16F1A2D49BAD32039706322F417 kInSecondaryIntHandlerMask;
$956E0F8638627E2D7345301BF56E48D3 kInUseErr;
$0575E16F1A2D49BAD32039706322F417 kInVBLTaskMask;
$E8F7B131D0D84B925A82988E2D6E5B4B kIncludeHardwareMirroredDisplaysMask;
$E8F7B131D0D84B925A82988E2D6E5B4B kIncludeOfflineDisplaysMask;
$E8F7B131D0D84B925A82988E2D6E5B4B kIncludeOfflineDummyDisplaysMask;
$E8F7B131D0D84B925A82988E2D6E5B4B kIncludeOnlineActiveDisplaysMask;
$E8F7B131D0D84B925A82988E2D6E5B4B kIncludeOnlineDisabledDisplaysMask;
$CC091832F316327152ED0A035D8C4D44 kIndexFilesFolderType;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kInequalityLigaturesOffSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kInequalityLigaturesOnSelector;
$F4394107C8DD43927759E951FBA7FC29 kInetInterfaceInfoVersion;
$B279F8649030D335CB0658803ACB5579 kInferiorsSelector;
$D59D0075B60978DBF28067C2B33B5767 kInitOTForApplicationMask;
$D59D0075B60978DBF28067C2B33B5767 kInitOTForExtensionMask;
$F27735064C606F1E78552097B35F5D75 kInitialCapsAndSmallCapsSelector;
$F27735064C606F1E78552097B35F5D75 kInitialCapsSelector;
$009AA9BCCC426E323765130C670B7B3B kInitializeCommand;
$C61609BB0F455BF0C49EDE98D48A29D1 kInitiateRecoveryMsg;
$C61609BB0F455BF0C49EDE98D48A29D1 kInitiatorDetectedErrorMsg;
$C2F8858A622177275FF16A5CF508B42D kInjectionSectCoverPage;
$C2F8858A622177275FF16A5CF508B42D kInjectionSectJob;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBeginDefaults;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBeginFont;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBeginPageSetup;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBeginProlog;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBeginResource;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBeginSetup;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubBoundingBox;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocCustomColors;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocFonts;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocNeededFonts;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocNeededRes;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocProcessColors;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocSuppliedFonts;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubDocSuppliedRes;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEOF;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndComments;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndDefaults;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndFont;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndPageSetup;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndProlog;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndResource;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubEndSetup;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubOrientation;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPSAdobe;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPSAdobeEPS;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPage;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPageOrder;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPageTrailer;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPages;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubPlateColor;
$2BFF417E1E5031DF99030C00EEE59E87 kInjectionSubTrailer;
$1DDF1CFC370E605DD776B8BC1BE7D2BA kInkInputMethodClass;
$07F30EAFE9CC2F5CF34646E5224F6B53 kInputMask;
$3FB13912521DC7691276ED8083575A20 kInsert;
$E0D1826B5FFF107D16D7DACE7DE82934 kInsertHierarchicalMenu;
$3FB13912521DC7691276ED8083575A20 kInsertOrReplace;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kInstallerLogsFolderType;
$CC091832F316327152ED0A035D8C4D44 kInstallerReceiptsFolderType;
$1AC1C93A58AB6CB66948DE5864455995 kInstructionBreakpointException;
$1C119E9720855ADE2B421A854DBE867A kIntMicSource;
$1AC1C93A58AB6CB66948DE5864455995 kIntegerException;
$DCE09C5AC8576D753F0EFEA779280476 kInteractiveServicesTag;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kInternationResourcesIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kInternationalResourcesIcon;
$A7575B3039476EA3F1C1D03F2499B38C kInternationalSymbolsSelector;
$6CACACC7823B8B27C19318704F85B0AF kInternetEventClass;
$5159DF5F69DB4B07E5314ED3C5415015 kInternetFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kInternetFolderType;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationAFP;
$8AEA82399091E82695C5898D421125C7 kInternetLocationAppleShareIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationAppleTalk;
$8AEA82399091E82695C5898D421125C7 kInternetLocationAppleTalkZoneIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationCreator;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationFTP;
$8AEA82399091E82695C5898D421125C7 kInternetLocationFTPIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationFile;
$8AEA82399091E82695C5898D421125C7 kInternetLocationFileIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationGeneric;
$8AEA82399091E82695C5898D421125C7 kInternetLocationGenericIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationHTTP;
$8AEA82399091E82695C5898D421125C7 kInternetLocationHTTPIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationMail;
$8AEA82399091E82695C5898D421125C7 kInternetLocationMailIcon;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationNNTP;
$C2D0643EA5871346057E089DB4E5F493 kInternetLocationNSL;
$8AEA82399091E82695C5898D421125C7 kInternetLocationNSLNeighborhoodIcon;
$8AEA82399091E82695C5898D421125C7 kInternetLocationNewsIcon;
$6272D81C4918127572EE4E585B7F7799 kInternetPasswordKCItemClass;
$5159DF5F69DB4B07E5314ED3C5415015 kInternetPlugInFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kInternetPlugInFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kInternetSearchSitesFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kInternetSearchSitesFolderType;
$CC091832F316327152ED0A035D8C4D44 kInternetSitesFolderType;
$956E0F8638627E2D7345301BF56E48D3 kInvalidCSClientErr;
$956E0F8638627E2D7345301BF56E48D3 kInvalidDeviceNumber;
$FA496E5233A23A274242891E36D75D32 kInvalidDisplayID;
$A22F1918C9D75222E8974210EDBEA0CB kInvalidFont;
$A22F1918C9D75222E8974210EDBEA0CB kInvalidFontFamily;
$A22F1918C9D75222E8974210EDBEA0CB kInvalidGeneration;
MACRO_kInvalidID kInvalidID;
$1AD10C15D14F9C5ED1DE9A95E22B348B kInvalidPageAddress;
$956E0F8638627E2D7345301BF56E48D3 kInvalidRegEntryErr;
$1C119E9720855ADE2B421A854DBE867A kInvalidSource;
$E41B128A1A45C863396F0E220EE3AE13 kInvertHighlighting;
$F401D567E4FBF51362F158484CD5534B kInvertedBoxAnnotationSelector;
$F401D567E4FBF51362F158484CD5534B kInvertedCircleAnnotationSelector;
$F401D567E4FBF51362F158484CD5534B kInvertedRoundedBoxAnnotationSelector;
$5B004150561D8A57B6AEE998E4910F58 kInvisibleKCItemAttr;
$1AAB9134B0FEB3A17896E87DAEB18E46 kIoctlRecvFdEvent;
$CC052733775226ECD6E2A883D62A4D31 kIsAlias;
$76532C4263E817CCFB285DFE4A61DA3F kIsCaseSensitive;
$F25455B09653741AEEB9CA0CCC1A99C9 kIsCompleteCFrag;
$CC052733775226ECD6E2A883D62A4D31 kIsInvisible;
$5CDB6810CF5FAA70771C826E258B46A2 kIsMonoDev;
$76532C4263E817CCFB285DFE4A61DA3F kIsNotDiacriticalSensitive;
$CC052733775226ECD6E2A883D62A4D31 kIsOnDesk;
$CC052733775226ECD6E2A883D62A4D31 kIsShared;
$CC052733775226ECD6E2A883D62A4D31 kIsStationery;
$3F3BFDADD85C688EAAD4A702F4F832C9 kIsrIsComplete;
$3F3BFDADD85C688EAAD4A702F4F832C9 kIsrIsNotComplete;
$5B004150561D8A57B6AEE998E4910F58 kIssuerKCItemAttr;
$5B004150561D8A57B6AEE998E4910F58 kIssuerURLKCItemAttr;
$29926AB924E42B27C90E0FDA4D67BBF6 kItalicCJKRomanType;
$333B154C3EB4D8DDCA6A976D4C3734A3 kItemDisableBit;
$0E89879D61237E8E6722620A3B96311B kItemList;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kJIS1978CharactersSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kJIS1983CharactersSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kJIS1990CharactersSelector;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTCurrentVersion;
$B8B72412DD9C077EAD980E1858612DEF kJUSTKashidaPriority;
$B8B72412DD9C077EAD980E1858612DEF kJUSTLetterPriority;
$B8B72412DD9C077EAD980E1858612DEF kJUSTNullPriority;
$3F2111A290AEC5EDA243AE5B9A0C4B61 kJUSTOverrideLimits;
$3F2111A290AEC5EDA243AE5B9A0C4B61 kJUSTOverridePriority;
$3F2111A290AEC5EDA243AE5B9A0C4B61 kJUSTOverrideUnlimited;
$B8B72412DD9C077EAD980E1858612DEF kJUSTPriorityCount;
$3F2111A290AEC5EDA243AE5B9A0C4B61 kJUSTPriorityMask;
$B8B72412DD9C077EAD980E1858612DEF kJUSTSpacePriority;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTStandardFormat;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTTag;
$3F2111A290AEC5EDA243AE5B9A0C4B61 kJUSTUnlimited;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTnoGlyphcode;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTpcConditionalAddAction;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTpcDecompositionAction;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTpcDuctilityAction;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTpcGlyphRepeatAddAction;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTpcGlyphStretchAction;
$7C7F83FAB1E6FC1A877D3998E36A90F5 kJUSTpcUnconditionalAddAction;
$15B474B0157EF27E4DCE242BA0AE207F kJapaneseBasicVariant;
$15B474B0157EF27E4DCE242BA0AE207F kJapaneseNoOneByteKanaOption;
$15B474B0157EF27E4DCE242BA0AE207F kJapanesePostScriptPrintVariant;
$15B474B0157EF27E4DCE242BA0AE207F kJapanesePostScriptScrnVariant;
$15B474B0157EF27E4DCE242BA0AE207F kJapaneseStandardVariant;
$15B474B0157EF27E4DCE242BA0AE207F kJapaneseStdNoVerticalsVariant;
$15B474B0157EF27E4DCE242BA0AE207F kJapaneseUseAsciiBackslashOption;
$15B474B0157EF27E4DCE242BA0AE207F kJapaneseVertAtKuPlusTenVariant;
$4922A3B642EF896637B997AAA2138F60 kKCAuthTypeDPA;
$4922A3B642EF896637B997AAA2138F60 kKCAuthTypeDefault;
$4922A3B642EF896637B997AAA2138F60 kKCAuthTypeHTTPDigest;
$4922A3B642EF896637B997AAA2138F60 kKCAuthTypeMSN;
$4922A3B642EF896637B997AAA2138F60 kKCAuthTypeNTLM;
$4922A3B642EF896637B997AAA2138F60 kKCAuthTypeRPA;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeAFP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeAppleTalk;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeFTP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeFTPAccount;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeHTTP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeIMAP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeIRC;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeLDAP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeNNTP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypePOP3;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeSMTP;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeSOCKS;
$C6AD7CD9C5A4902D841FE397EF11670D kKCProtocolTypeTelnet;
$289BFECE86E39479B22F4B214C93A57E kKERNCrossStream;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNCrossStreamResetNote;
$289BFECE86E39479B22F4B214C93A57E kKERNCurrentVersion;
$289BFECE86E39479B22F4B214C93A57E kKERNFormatMask;
$5292BA64F27CE32ECE955F30B7542EB2 kKERNIndexArray;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNLineEndKerning;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNLineStart;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNNoCrossKerning;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNNoStakeNote;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNNotApplied;
$8AD6E065E9DA41F10E5A63CBAFCB0C5E kKERNNotesRequested;
$5292BA64F27CE32ECE955F30B7542EB2 kKERNOrderedList;
$289BFECE86E39479B22F4B214C93A57E kKERNResetCrossStream;
$5292BA64F27CE32ECE955F30B7542EB2 kKERNSimpleArray;
$5292BA64F27CE32ECE955F30B7542EB2 kKERNStateTable;
$289BFECE86E39479B22F4B214C93A57E kKERNTag;
$289BFECE86E39479B22F4B214C93A57E kKERNUnusedBits;
$289BFECE86E39479B22F4B214C93A57E kKERNVariation;
$289BFECE86E39479B22F4B214C93A57E kKERNVertical;
$E89883983311088C86F46EBB7D3E1430 kKLGroupIdentifier;
$E89883983311088C86F46EBB7D3E1430 kKLIcon;
$E89883983311088C86F46EBB7D3E1430 kKLIdentifier;
$E89883983311088C86F46EBB7D3E1430 kKLKCHRData;
$9F2087190D1C1BBD83C9567049473F6B kKLKCHRKind;
$9F2087190D1C1BBD83C9567049473F6B kKLKCHRuchrKind;
$E89883983311088C86F46EBB7D3E1430 kKLKind;
$E89883983311088C86F46EBB7D3E1430 kKLLocalizedName;
$E89883983311088C86F46EBB7D3E1430 kKLName;
$3EFCCE98ECB93F6AA06650061CCFF96A kKLUSKeyboard;
$E89883983311088C86F46EBB7D3E1430 kKLuchrData;
$9F2087190D1C1BBD83C9567049473F6B kKLuchrKind;
$29926AB924E42B27C90E0FDA4D67BBF6 kKanaSpacingType;
$EBF6D2B8724BD6268E803B35A76B996A kKanaToRomanizationSelector;
$EBF6D2B8724BD6268E803B35A76B996A kKatakanaToHiraganaSelector;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kKeepArrangedIcon;
$CC091832F316327152ED0A035D8C4D44 kKernelExtensionsFolderType;
$7F3E7E1AB57D7076B1F8652C10AC5339 kKernelLevel;
$573F66D1E71256BA196F49F307880F86 kKeyboardANSI;
$573F66D1E71256BA196F49F307880F86 kKeyboardISO;
$1DDF1CFC370E605DD776B8BC1BE7D2BA kKeyboardInputMethodClass;
$DCE09C5AC8576D753F0EFEA779280476 kKeyboardInputMethodContextTag;
$573F66D1E71256BA196F49F307880F86 kKeyboardJIS;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kKeyboardLayoutIcon;
$CC091832F316327152ED0A035D8C4D44 kKeyboardLayoutsFolderType;
$DCE09C5AC8576D753F0EFEA779280476 kKeyboardLocaleObjectRefTag;
$573F66D1E71256BA196F49F307880F86 kKeyboardUnknown;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kKeychainFolderType;
$6D0E186233145241771508AFE8C2C7D5 kKeychainListChangedKCEvent;
$009AA9BCCC426E323765130C670B7B3B kKillIOCommand;
$EEFD005606BF77FE7A4C4F1148C64D31 kLAAllMorphemes;
$3BCCEDFEF26768869C92A0150CBC34C5 kLADefaultEdge;
$EEC88F322B9F30C531BD72F33C941DC9 kLAEndOfSourceTextMask;
$3BCCEDFEF26768869C92A0150CBC34C5 kLAFreeEdge;
$3BCCEDFEF26768869C92A0150CBC34C5 kLAIncompleteEdge;
$46BAE7990B826CE00FEEF5C7AF2651CA kLAMorphemesArrayVersion;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechBagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechChimei;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechChimeiSetsubigo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechDokuritsugo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechDoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechFukushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechFutsuuMeishi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechGagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechGodanDoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechIchidanDoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechJinmei;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechJinmeiMei;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechJinmeiSei;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechJinmeiSetsubigo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechJodoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechJoshi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKahenDoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKandoushi;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouGokan;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouKatei;
$12D5BA85182B008BFB0D2FEB1B2BF9EB kLASpeechKatsuyouMask;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouMeirei;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouMizen;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouRentai;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouRenyou;
$9657C3FBF034AB58AAB0F44DCC2E3033 kLASpeechKatsuyouSyuushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKeidouMeishi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKeiyoudoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKeiyoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKigou;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKoyuuMeishi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechKuten;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechMagyouGodan;
$12D5BA85182B008BFB0D2FEB1B2BF9EB kLASpeechMediumClassMask;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechMeishi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechMuhinshi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechNagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechRagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechRentaishi;
$12D5BA85182B008BFB0D2FEB1B2BF9EB kLASpeechRoughClassMask;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSahenDoushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSahenMeishi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSeiku;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSetsubiChimei;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSetsubigo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSetsuzokushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSettougo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSoshikimei;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSoshikimeiSetsubigo;
$12D5BA85182B008BFB0D2FEB1B2BF9EB kLASpeechStrictClassMask;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSuujiSetsubigo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSuujiSettougo;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechSuushi;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechTagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechTankanji;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechTouten;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechWagyouGodan;
$CD6BE087EFB904FD3BA794FF8C2EBA55 kLASpeechZahenDoushi;
$B42CB41C68CA29ADE4CDF32801377E22 kLCARCtlPointFormat;
$B42CB41C68CA29ADE4CDF32801377E22 kLCARCurrentVersion;
$B42CB41C68CA29ADE4CDF32801377E22 kLCARLinearFormat;
$B42CB41C68CA29ADE4CDF32801377E22 kLCARTag;
$8961430EE50E903D26EF000ECD665712 kLSAcceptAllowLoginUI;
$8961430EE50E903D26EF000ECD665712 kLSAcceptDefault;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSAppDoesNotClaimTypeErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSAppDoesNotSupportSchemeWarning;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSApplicationNotFoundErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSCannotSetInfoErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSDataErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSDataTooOldErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSDataUnavailableErr;
$E7186088EFA0F32673F1C6AE7A511321 kLSInitializeDefaults;
$A94A498AA8C2F45809E2A0E4697DE315 kLSInvalidExtensionIndex;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoAppIsScriptable;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoAppPrefersClassic;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoAppPrefersNative;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoExtensionIsHidden;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsAliasFile;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsApplication;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsClassicApp;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsContainer;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsInvisible;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsNativeApp;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsPackage;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsPlainFile;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsSymlink;
$56E9CEDBBB2FC1BC0A22E1060089C3F8 kLSItemInfoIsVolume;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchAndHide;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchAndHideOthers;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchAndPrint;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchAsync;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchDefaults;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchDontAddToRecents;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchDontSwitch;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchInClassic;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSLaunchInProgressErr;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchInhibitBGOnly;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchNewInstance;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchNoParams;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchReserved2;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchReserved3;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchReserved4;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchReserved5;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchReserved6;
$A8752B692ECA73E53AB43DBD84FE39E0 kLSLaunchStartClassic;
$AA9496FE2FFCD5175696C6AE3700BEFE kLSMinCatInfoBitmap;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSNotAnApplicationErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSNotInitializedErr;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSNotRegisteredErr;
$79483284807DF82D019464C567C1430B kLSRequestAllFlags;
$79483284807DF82D019464C567C1430B kLSRequestAllInfo;
$79483284807DF82D019464C567C1430B kLSRequestAppTypeFlags;
$79483284807DF82D019464C567C1430B kLSRequestBasicFlagsOnly;
$79483284807DF82D019464C567C1430B kLSRequestExtension;
$79483284807DF82D019464C567C1430B kLSRequestExtensionFlagsOnly;
$79483284807DF82D019464C567C1430B kLSRequestIconAndKind;
$79483284807DF82D019464C567C1430B kLSRequestTypeCreator;
$52A27DE3481A1000BD21C7D9934F172A kLSRolesAll;
$52A27DE3481A1000BD21C7D9934F172A kLSRolesEditor;
$52A27DE3481A1000BD21C7D9934F172A kLSRolesNone;
$52A27DE3481A1000BD21C7D9934F172A kLSRolesViewer;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSServerCommunicationErr;
$0F6D8856BC3B794ED06CA81DC26BD570 kLSUnknownCreator;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSUnknownErr;
$22F95B9C283C81B4EA82B2312E932770 kLSUnknownKindID;
$0F6D8856BC3B794ED06CA81DC26BD570 kLSUnknownType;
$39242B4B50EA0F39BEA57EF6B92DB50E kLSUnknownTypeErr;
$5B004150561D8A57B6AEE998E4910F58 kLabelKCItemAttr;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kLarge1BitMask;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kLarge32BitData;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kLarge4BitData;
$49693FA4B2A12A639DAC3849A1A69714 kLarge4BitIcon;
$141F72CF1B17A277A49BF921B8702916 kLarge4BitIconSize;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kLarge8BitData;
$49693FA4B2A12A639DAC3849A1A69714 kLarge8BitIcon;
$141F72CF1B17A277A49BF921B8702916 kLarge8BitIconSize;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kLarge8BitMask;
$49693FA4B2A12A639DAC3849A1A69714 kLargeIcon;
$141F72CF1B17A277A49BF921B8702916 kLargeIconSize;
$00612D0A7A236F8C980B33E910F13A20 kLastDomainConstant;
$29926AB924E42B27C90E0FDA4D67BBF6 kLastFeatureType;
$58E0C696113622080B4B29DB39E7C665 kLastIOKitNotificationType;
$35DD4B6AA31C362F43B9F52BD9EF5C3D kLastMagicBusyFiletype;
MACRO_kLastWindowGroup kLastWindowGroup;
MACRO_kLastWindowOfClass kLastWindowOfClass;
MACRO_kLastWindowOfGroup kLastWindowOfGroup;
$F05EF96BBB38DB48FBB55E61622C6397 kLaunchToGetTerminology;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kLauncherItemsFolderType;
$40B1D294FCB105E6FD797FB89EF6F7A3 kLeftArrowCharCode;
$708FD1D4D9C103B15DFAB8530761D95D kLeftToRight;
$29926AB924E42B27C90E0FDA4D67BBF6 kLetterCaseType;
$29926AB924E42B27C90E0FDA4D67BBF6 kLigaturesType;
$40B1D294FCB105E6FD797FB89EF6F7A3 kLineFeedCharCode;
$3DE452E66A716C4ABD5564098B5C5FFF kLineFinalSwashesOffSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kLineFinalSwashesOnSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kLineInitialSwashesOffSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kLineInitialSwashesOnSelector;
$4C9E4F7AE7982CBB82A9F92285104250 kLinguisticRearrangementOffSelector;
$4C9E4F7AE7982CBB82A9F92285104250 kLinguisticRearrangementOnSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kLinguisticRearrangementType;
$C61609BB0F455BF0C49EDE98D48A29D1 kLinkedCmdCompleteMsg;
$C61609BB0F455BF0C49EDE98D48A29D1 kLinkedCmdCompleteWithFlagMsg;
$99EB5C80159B186F0BDE0ABCB540E8C8 kListDefProcPtr;
$99EB5C80159B186F0BDE0ABCB540E8C8 kListDefStandardIconType;
$99EB5C80159B186F0BDE0ABCB540E8C8 kListDefStandardTextType;
$99EB5C80159B186F0BDE0ABCB540E8C8 kListDefUserProcType;
$18BF411237F175ABCD4A1D90A0B1F6B7 kLittleEndianFormat;
$B97F11227C25099F5B433CE2ADEE3443 kLiveVideoPassThru;
$B97F11227C25099F5B433CE2ADEE3443 kLiveVideoPassThruMask;
$2EF80823EBAE833F9BEF95A642F863FC kLoadCFrag;
$D9EC2DA240CDB088BA559E882EDCB0FE kLocalATalkRouterOnline;
$111F8E47955483A26B366F9302FAA868 kLocalATalkRoutersDown;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kLocalDomain;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleAllPartsMask;
$9CCC474BA24AF54592FD0A7872AC3E26 kLocaleAndVariantNameMask;
$DCE09C5AC8576D753F0EFEA779280476 kLocaleIDTag;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleLanguageMask;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleLanguageVariantMask;
$9CCC474BA24AF54592FD0A7872AC3E26 kLocaleNameMask;
$DCE09C5AC8576D753F0EFEA779280476 kLocaleObjectRefTag;
$9CCC474BA24AF54592FD0A7872AC3E26 kLocaleOperationVariantNameMask;
$DCE09C5AC8576D753F0EFEA779280476 kLocaleRefTag;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleRegionMask;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleRegionVariantMask;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleScriptMask;
$82361ACA885129B3BA2FFBC30CE9C7D4 kLocaleScriptVariantMask;
$9B7F8905523572BBCA66130D46D4F0F8 kLocalesBufferTooSmallErr;
$9B7F8905523572BBCA66130D46D4F0F8 kLocalesDefaultDisplayStatus;
$5159DF5F69DB4B07E5314ED3C5415015 kLocalesFolderIcon;
$1199C9C0394ECBB14613B33AC10D9468 kLocalesFolderType;
$9B7F8905523572BBCA66130D46D4F0F8 kLocalesTableFormatErr;
$6D0E186233145241771508AFE8C2C7D5 kLockKCEvent;
$39FE76983533385EB60014D19059B326 kLockKCEventMask;
$8C3160D5B07095881A649D5B5E6C135D kLockedBadgeIcon;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kLockedIcon;
$C5158E5C8936F0DF706C0A4969EDE653 kLogosOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kLogosOnSelector;
$1008A7BE77D47E0DE7CCAA1367CF3738 kLowerCaseNumbersSelector;
$8ED842F5F25F9C1991A7C4338A0B924C kM68kISA;
$18BF411237F175ABCD4A1D90A0B1F6B7 kMACE3Compression;
$18BF411237F175ABCD4A1D90A0B1F6B7 kMACE6Compression;
$CC091832F316327152ED0A035D8C4D44 kMIDIDriversFolderType;
$5F17D6B16BF5E5426CD98887D311C186 kMORTContextualType;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCoverDescending;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCoverIgnoreVertical;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCoverTypeMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCoverVertical;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrInsertBefore;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrInsertCountMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrInsertCountShift;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrInsertKashidaLike;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrJustTableCountMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrJustTableCountShift;
$5F17D6B16BF5E5426CD98887D311C186 kMORTCurrentVersion;
$5F17D6B16BF5E5426CD98887D311C186 kMORTDoInsertionsBefore;
$5F17D6B16BF5E5426CD98887D311C186 kMORTInsertionType;
$5F17D6B16BF5E5426CD98887D311C186 kMORTInsertionsCountMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTIsSplitVowelPiece;
$5F17D6B16BF5E5426CD98887D311C186 kMORTLigFormOffsetMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTLigFormOffsetShift;
$5F17D6B16BF5E5426CD98887D311C186 kMORTLigLastAction;
$5F17D6B16BF5E5426CD98887D311C186 kMORTLigStoreLigature;
$5F17D6B16BF5E5426CD98887D311C186 kMORTLigatureType;
$5F17D6B16BF5E5426CD98887D311C186 kMORTMarkInsertBefore;
$5F17D6B16BF5E5426CD98887D311C186 kMORTMarkInsertCountMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTMarkInsertCountShift;
$5F17D6B16BF5E5426CD98887D311C186 kMORTMarkInsertKashidaLike;
$5F17D6B16BF5E5426CD98887D311C186 kMORTMarkJustTableCountMask;
$5F17D6B16BF5E5426CD98887D311C186 kMORTMarkJustTableCountShift;
$5F17D6B16BF5E5426CD98887D311C186 kMORTRearrangementType;
$5F17D6B16BF5E5426CD98887D311C186 kMORTSwashType;
$5F17D6B16BF5E5426CD98887D311C186 kMORTTag;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraCDx;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraCDxA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraCDxAB;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraCDxBA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDCx;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDCxA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDCxAB;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDCxBA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDx;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDxA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDxAB;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraDxBA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraNoAction;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraxA;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraxAB;
$5F17D6B16BF5E5426CD98887D311C186 kMORTraxBA;
$2434F6B1EDF8F8883B5BA48259BC7F5A kMORXCoverDescending;
$2434F6B1EDF8F8883B5BA48259BC7F5A kMORXCoverIgnoreVertical;
$2434F6B1EDF8F8883B5BA48259BC7F5A kMORXCoverTypeMask;
$2434F6B1EDF8F8883B5BA48259BC7F5A kMORXCoverVertical;
$2434F6B1EDF8F8883B5BA48259BC7F5A kMORXCurrentVersion;
$2434F6B1EDF8F8883B5BA48259BC7F5A kMORXTag;
$082ADC49CA1D03F5602AB2321C5AB672 kMPAddressSpaceInfoVersion;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocate1024ByteAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocate16ByteAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocate32ByteAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocate4096ByteAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocate8ByteAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocateAltiVecAligned;
$2C738BB2E79274237638134EAD04BA3D kMPAllocateClearMask;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocateDefaultAligned;
$2C738BB2E79274237638134EAD04BA3D kMPAllocateGloballyMask;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocateInterlockAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocateMaxAlignment;
$2C738BB2E79274237638134EAD04BA3D kMPAllocateNoCreateMask;
$2C738BB2E79274237638134EAD04BA3D kMPAllocateNoGrowthMask;
$2C738BB2E79274237638134EAD04BA3D kMPAllocateResidentMask;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocateVMPageAligned;
$B7DE132A2BA91317C29AAD4D297C2D72 kMPAllocateVMXAligned;
$00B9CCC9BC8F3393DFED85A6B77B8031 kMPAnyRemoteContext;
$00B9CCC9BC8F3393DFED85A6B77B8031 kMPAsyncInterruptRemoteContext;
$6E9815D99DC865AF741AB1A5A4872C50 kMPBlueBlockingErr;
$CFE454D055F0E3CA239C6ED1313A356F kMPCreateTaskNotDebuggableMask;
$CFE454D055F0E3CA239C6ED1313A356F kMPCreateTaskSuspendedMask;
$CFE454D055F0E3CA239C6ED1313A356F kMPCreateTaskTakesAllExceptionsMask;
$CFE454D055F0E3CA239C6ED1313A356F kMPCreateTaskValidOptionsMask;
$082ADC49CA1D03F5602AB2321C5AB672 kMPCriticalRegionInfoVersion;
$6E9815D99DC865AF741AB1A5A4872C50 kMPDeletedErr;
$18BF411237F175ABCD4A1D90A0B1F6B7 kMPEG4AudioFormat;
$18BF411237F175ABCD4A1D90A0B1F6B7 kMPEGLayer3Format;
$082ADC49CA1D03F5602AB2321C5AB672 kMPEventInfoVersion;
$8777FFE304C8CB6EDACC2515759EB209 kMPHighLevelDebugger;
$6E9815D99DC865AF741AB1A5A4872C50 kMPInsufficientResourcesErr;
$00B9CCC9BC8F3393DFED85A6B77B8031 kMPInterruptRemoteContext;
$6E9815D99DC865AF741AB1A5A4872C50 kMPInvalidIDErr;
$6E9815D99DC865AF741AB1A5A4872C50 kMPIterationEndErr;
$8777FFE304C8CB6EDACC2515759EB209 kMPLowLevelDebugger;
$0C21C80CD25E8D0260D404EA3AC43DE1 kMPMaxAllocSize;
$8777FFE304C8CB6EDACC2515759EB209 kMPMidLevelDebugger;
$E4FC6758E6C0C1E8B4A2A9C08874AC67 kMPNanokernelNeedsMemoryErr;
$D97DBD36E4E0A3A569753E53C7F063FA kMPNoID;
$082ADC49CA1D03F5602AB2321C5AB672 kMPNotificationInfoVersion;
$00B9CCC9BC8F3393DFED85A6B77B8031 kMPOwningProcessRemoteContext;
$F320DFDF57D46510353B1E53EA4A5CCC kMPPreserveTimerIDMask;
$6E9815D99DC865AF741AB1A5A4872C50 kMPPrivilegedErr;
$6E9815D99DC865AF741AB1A5A4872C50 kMPProcessCreatedErr;
$6E9815D99DC865AF741AB1A5A4872C50 kMPProcessTerminatedErr;
$082ADC49CA1D03F5602AB2321C5AB672 kMPQueueInfoVersion;
$082ADC49CA1D03F5602AB2321C5AB672 kMPSemaphoreInfoVersion;
$6E9815D99DC865AF741AB1A5A4872C50 kMPTaskAbortedErr;
$27E50C9195B9C08D203692ADBAAF43B1 kMPTaskBlocked;
$6E9815D99DC865AF741AB1A5A4872C50 kMPTaskBlockedErr;
$6E9815D99DC865AF741AB1A5A4872C50 kMPTaskCreatedErr;
$2B8FA9178F9716021BF160634EC4DACD kMPTaskInfoVersion;
$7F3E7E1AB57D7076B1F8652C10AC5339 kMPTaskLevel;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskPropagate;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskPropagateMask;
$27E50C9195B9C08D203692ADBAAF43B1 kMPTaskReady;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskResumeBranch;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskResumeBranchMask;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskResumeMask;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskResumeStep;
$32E183A1C590C6AC9842FDC007C241A9 kMPTaskResumeStepMask;
$27E50C9195B9C08D203692ADBAAF43B1 kMPTaskRunning;
$5495969828893CF768391088F16F6E16 kMPTaskState32BitMemoryException;
$5495969828893CF768391088F16F6E16 kMPTaskStateFPU;
$5495969828893CF768391088F16F6E16 kMPTaskStateMachine;
$5495969828893CF768391088F16F6E16 kMPTaskStateRegisters;
$5495969828893CF768391088F16F6E16 kMPTaskStateTaskInfo;
$5495969828893CF768391088F16F6E16 kMPTaskStateVectors;
$6E9815D99DC865AF741AB1A5A4872C50 kMPTaskStoppedErr;
$F320DFDF57D46510353B1E53EA4A5CCC kMPTimeIsDeltaMask;
$F320DFDF57D46510353B1E53EA4A5CCC kMPTimeIsDurationMask;
$6E9815D99DC865AF741AB1A5A4872C50 kMPTimeoutErr;
MACRO_kMPUnresolvedCFragSymbolAddress kMPUnresolvedCFragSymbolAddress;
$67A30B646349D7F6AF8B001F9CA432FD kMacArabicAlBayanVariant;
$67A30B646349D7F6AF8B001F9CA432FD kMacArabicStandardVariant;
$67A30B646349D7F6AF8B001F9CA432FD kMacArabicThuluthVariant;
$67A30B646349D7F6AF8B001F9CA432FD kMacArabicTrueTypeVariant;
$60D6897C151FFE1204442698E89B3DD8 kMacCroatianCurrencySignVariant;
$60D6897C151FFE1204442698E89B3DD8 kMacCroatianDefaultVariant;
$60D6897C151FFE1204442698E89B3DD8 kMacCroatianEuroSignVariant;
$27D392CCE81887F17159165CB88AEF63 kMacCyrillicCurrSignStdVariant;
$27D392CCE81887F17159165CB88AEF63 kMacCyrillicCurrSignUkrVariant;
$27D392CCE81887F17159165CB88AEF63 kMacCyrillicDefaultVariant;
$27D392CCE81887F17159165CB88AEF63 kMacCyrillicEuroSignVariant;
$37BB35479611D3806ACFE5BDAFE1A9BC kMacFarsiStandardVariant;
$37BB35479611D3806ACFE5BDAFE1A9BC kMacFarsiTrueTypeVariant;
$C2FBF9E220041465BEC3CA26588029A3 kMacHebrewFigureSpaceVariant;
$C2FBF9E220041465BEC3CA26588029A3 kMacHebrewStandardVariant;
$96B90020E937C539D931759D1E51925E kMacHelpVersion;
$15B474B0157EF27E4DCE242BA0AE207F kMacIcelandicStandardVariant;
$CA988EB8750E57FF1CA47E5BC446B68A kMacIcelandicStdCurrSignVariant;
$CA988EB8750E57FF1CA47E5BC446B68A kMacIcelandicStdDefaultVariant;
$CA988EB8750E57FF1CA47E5BC446B68A kMacIcelandicStdEuroSignVariant;
$CA988EB8750E57FF1CA47E5BC446B68A kMacIcelandicTTCurrSignVariant;
$CA988EB8750E57FF1CA47E5BC446B68A kMacIcelandicTTDefaultVariant;
$CA988EB8750E57FF1CA47E5BC446B68A kMacIcelandicTTEuroSignVariant;
$15B474B0157EF27E4DCE242BA0AE207F kMacIcelandicTrueTypeVariant;
$2B1F18C23A76AAF7D29CF15D55104ED0 kMacJapaneseBasicVariant;
$2B1F18C23A76AAF7D29CF15D55104ED0 kMacJapanesePostScriptPrintVariant;
$2B1F18C23A76AAF7D29CF15D55104ED0 kMacJapanesePostScriptScrnVariant;
$2B1F18C23A76AAF7D29CF15D55104ED0 kMacJapaneseStandardVariant;
$2B1F18C23A76AAF7D29CF15D55104ED0 kMacJapaneseStdNoVerticalsVariant;
$2B1F18C23A76AAF7D29CF15D55104ED0 kMacJapaneseVertAtKuPlusTenVariant;
$5159DF5F69DB4B07E5314ED3C5415015 kMacOSReadMeFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kMacOSReadMesFolderType;
$1284ADA2EABC91327A4013CC52F7A932 kMacRomanCurrencySignVariant;
$1284ADA2EABC91327A4013CC52F7A932 kMacRomanDefaultVariant;
$1284ADA2EABC91327A4013CC52F7A932 kMacRomanEuroSignVariant;
$E159D078DC20CEBAFD00F9A979A0C0D5 kMacRomanLatin1CroatianVariant;
$E159D078DC20CEBAFD00F9A979A0C0D5 kMacRomanLatin1DefaultVariant;
$E159D078DC20CEBAFD00F9A979A0C0D5 kMacRomanLatin1IcelandicVariant;
$E159D078DC20CEBAFD00F9A979A0C0D5 kMacRomanLatin1RomanianVariant;
$E159D078DC20CEBAFD00F9A979A0C0D5 kMacRomanLatin1StandardVariant;
$E159D078DC20CEBAFD00F9A979A0C0D5 kMacRomanLatin1TurkishVariant;
$15B474B0157EF27E4DCE242BA0AE207F kMacRomanStandardVariant;
$C644B9C64E9925284C6353AB49BF15EA kMacRomanianCurrencySignVariant;
$C644B9C64E9925284C6353AB49BF15EA kMacRomanianDefaultVariant;
$C644B9C64E9925284C6353AB49BF15EA kMacRomanianEuroSignVariant;
$1D3D71F858DDE7BAE181EB8DF6BBC90F kMacVT100CurrencySignVariant;
$1D3D71F858DDE7BAE181EB8DF6BBC90F kMacVT100DefaultVariant;
$1D3D71F858DDE7BAE181EB8DF6BBC90F kMacVT100EuroSignVariant;
$519155122060752F49280D7213DD1AF2 kMachineNameStrID;
$5DBF6F33D58ED7259CE5B7E717FD55D8 kMagicBusyCreationDate;
$3E0346759DAE595B570609D7D5A8E50A kMakeAndModelReservedCount;
$5442D69C038BA541BC61D9468B2235C9 kMale;
$CC091832F316327152ED0A035D8C4D44 kManagedItemsFolderType;
$A7575B3039476EA3F1C1D03F2499B38C kMathSymbolsSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kMathematicalExtrasType;
$9F8FC170A2058B1BE0534DB43DF06411 kMax8022SAP;
$7191047DEEBD9904D2E4FBD1FE3E7338 kMaxAsyncArgs;
$9F8FC170A2058B1BE0534DB43DF06411 kMaxDIXSAP;
$D8B59257D46B843E4D79FD93318CAEFB kMaxHostAddrs;
$D8B59257D46B843E4D79FD93318CAEFB kMaxHostNameLen;
$C4AB604CFAB6D398918B07A77C016E42 kMaxInputLengthOfAppleJapaneseEngine;
$93AB867CB5AC62BFF672005324A930B2 kMaxKanjiLengthInAppleJapaneseDictionary;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxModuleNameLength;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxModuleNameSize;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxPortNameLength;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxPortNameSize;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxProviderNameLength;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxProviderNameSize;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxResourceInfoLength;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxResourceInfoSize;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxSlotIDLength;
$76597B0AEBADA5ED0B4E053F72BA1DDE kMaxSlotIDSize;
$D8B59257D46B843E4D79FD93318CAEFB kMaxSysStringLen;
$93AB867CB5AC62BFF672005324A930B2 kMaxYomiLengthInAppleJapaneseDictionary;
$082D8B3096A6A9502AD1DBEDAE80A461 kMaximumBlocksIn4GB;
$3CDA55C16633994BB7893EA15E99B63E kMaximumSmallFract;
$1C119E9720855ADE2B421A854DBE867A kMediaBaySource;
$856BD70CF8AA982C500197ECA40434F8 kMediaModeOff;
$856BD70CF8AA982C500197ECA40434F8 kMediaModeOn;
$856BD70CF8AA982C500197ECA40434F8 kMediaModeStandBy;
$856BD70CF8AA982C500197ECA40434F8 kMediaModeSuspend;
$EC4645FFE80D24D9BAD622F274186825 kMediaPowerCSCode;
$3F3BFDADD85C688EAAD4A702F4F832C9 kMemberNumberParent;
$EE9F227ECBAF3C576752B1D10972453B kMemoryCFragLocator;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuAppleLogoFilledGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuAppleLogoOutlineGlyph;
$B600E9A864675E8C9053A538BFB57665 kMenuAttrAutoDisable;
$B600E9A864675E8C9053A538BFB57665 kMenuAttrExcludesMarkColumn;
$B600E9A864675E8C9053A538BFB57665 kMenuAttrHidden;
$B600E9A864675E8C9053A538BFB57665 kMenuAttrUsePencilGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuBlankGlyph;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuCGImageRefType;
$FF754F24174D7C64157D04EF7406CF1D kMenuCalcItemMsg;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuCapsLockGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuCheckmarkGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuClearGlyph;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuColorIconType;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuCommandGlyph;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextCommandIDSearch;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextKeyMatching;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextMenuBar;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextMenuBarTracking;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextMenuEnabling;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextPopUp;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextPopUpTracking;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextPullDown;
$1DCC4328EC30B64C08758FAF988026B3 kMenuContextSubmenu;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuContextualMenuGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuControlGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuControlISOGlyph;
$D953F58A6719EA7E444EEAFBAE044285 kMenuControlModifier;
$7D9308131D91D95A30E40568EE251A70 kMenuDefObjectClass;
$D2262940032F2F8F2A8D8B3D30F60718 kMenuDefProcPtr;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuDeleteLeftGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuDeleteRightGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuDiamondGlyph;
$E44CBD9116959E2F078D05F537864E17 kMenuDisposeMsg;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuDownArrowGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuDownwardArrowDashedGlyph;
$E44CBD9116959E2F078D05F537864E17 kMenuDrawItemsMsg;
$FF754F24174D7C64157D04EF7406CF1D kMenuDrawMsg;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuEjectGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuEnterGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuEscapeGlyph;
$EAE1FDA7B0E36FB534B47D9CAFE8EAD6 kMenuEventDontCheckSubmenus;
$EAE1FDA7B0E36FB534B47D9CAFE8EAD6 kMenuEventIncludeDisabledItems;
$EAE1FDA7B0E36FB534B47D9CAFE8EAD6 kMenuEventQueryOnly;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF10Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF11Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF12Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF13Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF14Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF15Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF1Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF2Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF3Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF4Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF5Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF6Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF7Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF8Glyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuF9Glyph;
$E44CBD9116959E2F078D05F537864E17 kMenuFindItemMsg;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuHelpGlyph;
$E44CBD9116959E2F078D05F537864E17 kMenuHiliteItemMsg;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuIconRefType;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuIconResourceType;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuIconSuiteType;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuIconType;
$E44CBD9116959E2F078D05F537864E17 kMenuInitMsg;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrAutoRepeat;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrCustomDraw;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrDisabled;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrDynamic;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrHidden;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrIconDisabled;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrIgnoreMeta;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrIncludeInCmdKeyMatching;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrNotPreviousAlternate;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrSectionHeader;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrSeparator;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrSubmenuParentChoosable;
$E36450F7BF021E1F09D0C353C4ACA6E7 kMenuItemAttrUseVirtualKey;
$1D514696CA69F7E01B0BE02B5477904F kMenuItemDataAllData;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataAllDataVersionOne;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataAllDataVersionTwo;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataAttributes;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataCFString;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataCmdKey;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataCmdKeyGlyph;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataCmdKeyModifiers;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataCmdVirtualKey;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataCommandID;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataEnabled;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataFontID;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataIconEnabled;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataIconHandle;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataIconID;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataIndent;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataMark;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataProperties;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataRefcon;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataStyle;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataSubmenuHandle;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataSubmenuID;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataText;
$C856B631E5187AC38B95D1FC138137D7 kMenuItemDataTextEncoding;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuLeftArrowDashedGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuLeftArrowGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuLeftDoubleQuotesJapaneseGlyph;
$D953F58A6719EA7E444EEAFBAE044285 kMenuNoCommandModifier;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuNoIcon;
$D953F58A6719EA7E444EEAFBAE044285 kMenuNoModifiers;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuNonmarkingReturnGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuNorthwestArrowGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuNullGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuOptionGlyph;
$D953F58A6719EA7E444EEAFBAE044285 kMenuOptionModifier;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuPageDownGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuPageUpGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuParagraphKoreanGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuPencilGlyph;
$FF754F24174D7C64157D04EF7406CF1D kMenuPopUpMsg;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuPowerGlyph;
$18457EBC56E5AC6AD2CDCFA4666FD615 kMenuPropertyPersistent;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuReturnGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuReturnR2LGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuRightArrowDashedGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuRightArrowGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuRightDoubleQuotesJapaneseGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuShiftGlyph;
$D953F58A6719EA7E444EEAFBAE044285 kMenuShiftModifier;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuShrinkIconType;
$FF754F24174D7C64157D04EF7406CF1D kMenuSizeMsg;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuSmallIconType;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuSoutheastArrowGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuSpaceGlyph;
$937CF0B31C993A7C490A0B8694636229 kMenuStdMenuBarProc;
$937CF0B31C993A7C490A0B8694636229 kMenuStdMenuProc;
$71F99730D9D8C4617EEF8649D4C07A82 kMenuSystemIconSelectorType;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuTabLeftGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuTabRightGlyph;
$FF754F24174D7C64157D04EF7406CF1D kMenuThemeSavvyMsg;
$3A81B91097E2FB5855C4E68A15E48C43 kMenuTrackingModeKeyboard;
$3A81B91097E2FB5855C4E68A15E48C43 kMenuTrackingModeMouse;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuTrademarkJapaneseGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuUpArrowDashedGlyph;
$1F3EA5F5FED4D13282C5770DAB32F70B kMenuUpArrowGlyph;
$9E5869D39EF3815427497605AD50A486 kMessageGetEventData;
$1C119E9720855ADE2B421A854DBE867A kMicrophoneArray;
$ED3CB222F35B250525277339230D1DC5 kMicrosecondScale;
$18BF411237F175ABCD4A1D90A0B1F6B7 kMicrosoftADPCMFormat;
$18BF411237F175ABCD4A1D90A0B1F6B7 kMicrosoftGSMCompression;
$80BF0C8917E75603579C42292AFC0073 kMiddleC;
$ED3CB222F35B250525277339230D1DC5 kMillisecondScale;
$9F8FC170A2058B1BE0534DB43DF06411 kMinDIXSAP;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kMini1BitMask;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kMini4BitData;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kMini8BitData;
$E432BDE770954FAA58BC493549E91D02 kMinimumFidelity;
$58030CB495C0F1442001624CD349E98E kMirrorDisplayBit;
$4693F9F93A5130D57E44F485B4108586 kMixer16SubType;
$4693F9F93A5130D57E44F485B4108586 kMixer8SubType;
$4693F9F93A5130D57E44F485B4108586 kMixerType;
$5B004150561D8A57B6AEE998E4910F58 kModDateKCItemAttr;
$99DF324053748CE0F00F82D255EBBBC6 kModalDialogVariantCode;
$B95EEEF8D0A9C3F124CECCB9E5363575 kModalWindowClass;
$4798570608A7F7FE958EF2459E777922 kModeBuiltIn;
$4798570608A7F7FE958EF2459E777922 kModeDefault;
$4798570608A7F7FE958EF2459E777922 kModeInterlaced;
$4798570608A7F7FE958EF2459E777922 kModeNotPreset;
$4798570608A7F7FE958EF2459E777922 kModeNotResize;
$476A79E339CADAF44B401C5F27E1C94E kModeNotResizeBit;
$4798570608A7F7FE958EF2459E777922 kModeRequiresPan;
$4798570608A7F7FE958EF2459E777922 kModeSafe;
$4798570608A7F7FE958EF2459E777922 kModeShowNever;
$4798570608A7F7FE958EF2459E777922 kModeShowNow;
$4798570608A7F7FE958EF2459E777922 kModeSimulscan;
$4798570608A7F7FE958EF2459E777922 kModeStretched;
$4798570608A7F7FE958EF2459E777922 kModeValid;
$A2A3B97015A39488E2F6B427ADE8C31C kModelessConnect;
$8CD864434FB05746BCEE03D3C5FDB7FD kModemOutOfMemory;
$8CD864434FB05746BCEE03D3C5FDB7FD kModemPreferencesMissing;
$8CD864434FB05746BCEE03D3C5FDB7FD kModemScriptMissing;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kModemScriptsFolderType;
$1C119E9720855ADE2B421A854DBE867A kModemSource;
$A2A3B97015A39488E2F6B427ADE8C31C kMonoTwoPageConnect;
$7FF46A4D5ACD435A7CB860BE80C6C9C7 kMonospacedNumbersSelector;
$B70B70D55F7ADAC1B4115BB8A43A6B45 kMonospacedTextSelector;
$AAAEA4B86AC2FAE96AFE5D76F8CF2D73 kMoreIOTransfers;
$3F276722A2E8F4E6CD71B44DCDB8D721 kMotorola68KCFragArch;
$8C3160D5B07095881A649D5B5E6C135D kMountedBadgeIcon;
$80CC905675FBBA9CE111FA805C6BD313 kMountedFolderAliasType;
$121E1AC3EB6A789387393DDCCEF5B35F kMountedFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kMountedFolderIconResource;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingKeyModifiersChanged;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingMouseDown;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingMouseDragged;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingMouseEntered;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingMouseExited;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingMouseMoved;
$966AB2C321B4E122D1BAF7DBADBDD433 kMouseTrackingMousePressed;
$966AB2C321B4E122D1BAF7DBADBDD433 kMouseTrackingMouseReleased;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingMouseUp;
$64D53222CC663C9A05C6D6F72FDB9AA5 kMouseTrackingOptionsGlobalClip;
$64D53222CC663C9A05C6D6F72FDB9AA5 kMouseTrackingOptionsLocalClip;
$64D53222CC663C9A05C6D6F72FDB9AA5 kMouseTrackingOptionsStandard;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingTimedOut;
$5118A8CF0EC07F2E1B73029A50E74A1B kMouseTrackingUserCancelled;
$6A74AC2A147D6C4233831D43DB190A40 kMouseUpOutOfSlop;
$99DF324053748CE0F00F82D255EBBBC6 kMovableAlertVariantCode;
$B95EEEF8D0A9C3F124CECCB9E5363575 kMovableAlertWindowClass;
$99DF324053748CE0F00F82D255EBBBC6 kMovableModalDialogVariantCode;
$B95EEEF8D0A9C3F124CECCB9E5363575 kMovableModalWindowClass;
$58030CB495C0F1442001624CD349E98E kMovedDisplayBit;
$CC091832F316327152ED0A035D8C4D44 kMovieDocumentsFolderType;
$C61609BB0F455BF0C49EDE98D48A29D1 kMsgParityErrorMsg;
$C61609BB0F455BF0C49EDE98D48A29D1 kMsgRejectMsg;
$A2A3B97015A39488E2F6B427ADE8C31C kMultiModeCRT1Connect;
$A2A3B97015A39488E2F6B427ADE8C31C kMultiModeCRT2Connect;
$A2A3B97015A39488E2F6B427ADE8C31C kMultiModeCRT3Connect;
$A2A3B97015A39488E2F6B427ADE8C31C kMultiModeCRT4Connect;
$9F8FC170A2058B1BE0534DB43DF06411 kMulticastLength;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kMultiprocessingFolderType;
$CC091832F316327152ED0A035D8C4D44 kMusicDocumentsFolderType;
$68BF6022C044A554C82A650922375E31 kNBPAddressLength;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPDefaultZone;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPEntityBufferSize;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPImbeddedWildCard;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPMaxEntityLength;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPMaxNameLength;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPMaxTypeLength;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPMaxZoneLength;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPSlushLength;
$7AF6B9DB2A991AF2ACA7FFFC68B603A4 kNBPWildCard;
$38BE0C7E82A185D93C9819A4837F2FFA kNCMMConcatInit;
$38BE0C7E82A185D93C9819A4837F2FFA kNCMMInit;
$38BE0C7E82A185D93C9819A4837F2FFA kNCMMNewLinkProfile;
$F7BA3474F19479796E293D2AB3E1D476 kNSL68kContextNotSupported;
$1D9D40DC7CF04F7690FB1C059703225E kNSLAddServiceTypes;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadClientInfoPtr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadDataTypeErr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadNetConnection;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadProtocolTypeErr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadReferenceErr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadServiceTypeErr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBadURLSyntax;
$F7BA3474F19479796E293D2AB3E1D476 kNSLBufferTooSmallForData;
$F7BA3474F19479796E293D2AB3E1D476 kNSLCannotContinueLookup;
$1D9D40DC7CF04F7690FB1C059703225E kNSLClientHandlesRecents;
$ADBD390F96C761DA0824B5D6C5C4F47B kNSLContinueLookupEvent;
MACRO_kNSLDataType kNSLDataType;
$8B51B4969E45D374F089FAAEE2CA2A71 kNSLDefaultListSize;
$1D9D40DC7CF04F7690FB1C059703225E kNSLDefaultNSLDlogOptions;
$3B07715F5C571C1DFC3C2205604D835E kNSLDuplicateSearchInProgress;
$F7BA3474F19479796E293D2AB3E1D476 kNSLErrNullPtrError;
$F7BA3474F19479796E293D2AB3E1D476 kNSLInitializationFailed;
$F7BA3474F19479796E293D2AB3E1D476 kNSLInsufficientOTVer;
$F7BA3474F19479796E293D2AB3E1D476 kNSLInsufficientSysVer;
$3B07715F5C571C1DFC3C2205604D835E kNSLInvalidEnumeratorRef;
$F7BA3474F19479796E293D2AB3E1D476 kNSLInvalidPluginSpec;
$6460A2EBADE2C0226985DD3467C57546 kNSLMinOTVersion;
$6460A2EBADE2C0226985DD3467C57546 kNSLMinSystemVersion;
$ADBD390F96C761DA0824B5D6C5C4F47B kNSLNeighborhoodLookupDataEvent;
$ADBD390F96C761DA0824B5D6C5C4F47B kNSLNewDataEvent;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNoCarbonLib;
$F61B2A17CA226903EBE2EC28AD40A385 kNSLNoContext;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNoContextAvailable;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNoElementsInList;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNoPluginsForSearch;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNoPluginsFound;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNoSupportForService;
$1D9D40DC7CF04F7690FB1C059703225E kNSLNoURLTEField;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNotImplementedYet;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNotInitialized;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNullListPtr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLNullNeighborhoodPtr;
$F7BA3474F19479796E293D2AB3E1D476 kNSLPluginLoadFailed;
$F7BA3474F19479796E293D2AB3E1D476 kNSLRequestBufferAlreadyInList;
$F7BA3474F19479796E293D2AB3E1D476 kNSLSchedulerError;
$F7BA3474F19479796E293D2AB3E1D476 kNSLSearchAlreadyInProgress;
$AB97248B094B5D1A3A015060971774EE kNSLSearchStateBufferFull;
$AB97248B094B5D1A3A015060971774EE kNSLSearchStateComplete;
$AB97248B094B5D1A3A015060971774EE kNSLSearchStateOnGoing;
$AB97248B094B5D1A3A015060971774EE kNSLSearchStateStalled;
$ADBD390F96C761DA0824B5D6C5C4F47B kNSLServicesLookupDataEvent;
$F7BA3474F19479796E293D2AB3E1D476 kNSLSomePluginsFailedToLoad;
$F7BA3474F19479796E293D2AB3E1D476 kNSLUILibraryNotAvailable;
$DBB64E65FEE201E21D21056A9FEF782F kNSLURLDelimiter;
$3B07715F5C571C1DFC3C2205604D835E kNSLUserCanceled;
$AB97248B094B5D1A3A015060971774EE kNSLWaitingForContinue;
$421180F91B2FAF08BA134F0377A7F955 kNSpAddPlayerFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpAddressInUseErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpAlreadyAdvertisingErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpAlreadyInitializedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpCantBlockErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpConnectFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpCreateGroupFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpFeatureNotImplementedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpFreeQExhaustedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpGameTerminatedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpHostFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInitializationFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidAddressErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidDefinitionErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidGameRefErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidGroupIDErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidParameterErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidPlayerIDErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidProtocolListErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpInvalidProtocolRefErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpJoinFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpMemAllocationErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpMessageTooBigErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpNameRequiredErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpNoGroupsErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpNoHostVolunteersErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpNoPlayersErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpNotAdvertisingErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpOTNotPresentErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpOTVersionTooOldErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpPipeFullErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpProtocolNotAvailableErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpRemovePlayerFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpSendFailedErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpTimeoutErr;
$421180F91B2FAF08BA134F0377A7F955 kNSpTopologyNotSupportedErr;
$A2A3B97015A39488E2F6B427ADE8C31C kNTSCConnect;
$CC052733775226ECD6E2A883D62A4D31 kNameLocked;
$EE9F227ECBAF3C576752B1D10972453B kNamedFragmentCFragLocator;
$ED3CB222F35B250525277339230D1DC5 kNanosecondScale;
$00B42A95E11545470801AB30BB910A1E kNavAllFiles;
$73F18261312DBE2173E1DFBBAE90E4FD kNavAllFilesInPopup;
$00B42A95E11545470801AB30BB910A1E kNavAllKnownFiles;
$00B42A95E11545470801AB30BB910A1E kNavAllReadableFiles;
$73F18261312DBE2173E1DFBBAE90E4FD kNavAllowInvisibleFiles;
$73F18261312DBE2173E1DFBBAE90E4FD kNavAllowMultipleFiles;
$73F18261312DBE2173E1DFBBAE90E4FD kNavAllowOpenPackages;
$73F18261312DBE2173E1DFBBAE90E4FD kNavAllowPreviews;
$73F18261312DBE2173E1DFBBAE90E4FD kNavAllowStationery;
$5E12983D12B8563378D748834D343583 kNavAskDiscardChanges;
$5E12983D12B8563378D748834D343583 kNavAskDiscardChangesCancel;
$064B2A1233C1F2D0014DB42922B03A9E kNavAskSaveChangesCancel;
$064B2A1233C1F2D0014DB42922B03A9E kNavAskSaveChangesDontSave;
$064B2A1233C1F2D0014DB42922B03A9E kNavAskSaveChangesSave;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBAccept;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBAdjustPreview;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBAdjustRect;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBCancel;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBCustomize;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBEvent;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBNewLocation;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBOpenSelection;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBPopupMenuSelect;
$04468D460BB7BF8AC2C41E5BC0104664 kNavCBRecVersion;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBSelectEntry;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBShowDesktop;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBStart;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBTerminate;
$C473E0A86B985C630FB673E0C29D3E0C kNavCBUserAction;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlAccept;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlAddControl;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlAddControlList;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlBrowserRedraw;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlBrowserSelectAll;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlCancel;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlEjectVolume;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlGetEditFileName;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlGetFirstControlID;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlGetLocation;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlGetSelection;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlGotoParent;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlIsPreviewShowing;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlNewFolder;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlOpenSelection;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlPageDown;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlPageUp;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlScrollEnd;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlScrollHome;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSelectAllType;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSelectCustomType;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSelectEditFileName;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSetActionState;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSetEditFileName;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSetLocation;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSetSelection;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlShowDesktop;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlShowSelection;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSortBy;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlSortOrder;
$08090D3ECE9494259327219C5C5C9A34 kNavCtlTerminate;
$C93799A8625E76DD336C3BAE01FEEAD3 kNavCustomControlMessageFailedErr;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDefaultNavDlogOptions;
$31BFEC093C72560E30DAC863EFC36065 kNavDialogCreationOptionsVersion;
$9DD6A811A66EE11358BE993ADD3DB46D kNavDialogOptionsVersion;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDontAddRecents;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDontAddTranslateItems;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDontAutoTranslate;
$2856EDCC204806654D5E6774772BEA3B kNavDontChooseState;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDontConfirmReplacement;
$2856EDCC204806654D5E6774772BEA3B kNavDontNewFolderState;
$2856EDCC204806654D5E6774772BEA3B kNavDontOpenState;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDontResolveAliases;
$2856EDCC204806654D5E6774772BEA3B kNavDontSaveState;
$73F18261312DBE2173E1DFBBAE90E4FD kNavDontUseCustomFrame;
$DC6DBA76B50924A6A0D6AFB8689D14A3 kNavFileOrFolderVersion;
$F0628EC66439BCA5812D14954B5EACD1 kNavFilteringBrowserList;
$F0628EC66439BCA5812D14954B5EACD1 kNavFilteringFavorites;
$F0628EC66439BCA5812D14954B5EACD1 kNavFilteringLocationPopup;
$F0628EC66439BCA5812D14954B5EACD1 kNavFilteringRecents;
$F0628EC66439BCA5812D14954B5EACD1 kNavFilteringShortCutVolumes;
$B9E02F82513BA51084C86DCF9CF08134 kNavGenericSignature;
$C93799A8625E76DD336C3BAE01FEEAD3 kNavInvalidCustomControlMessageErr;
$C93799A8625E76DD336C3BAE01FEEAD3 kNavInvalidSystemConfigErr;
$3167A38BDC0A4E18ED28D72748406697 kNavMenuItemSpecVersion;
$C93799A8625E76DD336C3BAE01FEEAD3 kNavMissingKindStringErr;
$73F18261312DBE2173E1DFBBAE90E4FD kNavNoTypePopup;
$2856EDCC204806654D5E6774772BEA3B kNavNormalState;
$73F18261312DBE2173E1DFBBAE90E4FD kNavPreserveSaveFileExtension;
$A45AA86CD6712345917C6FC73C0512FF kNavReplyRecordVersion;
$EA7E0BFDF3DADB4612DB717B8814F0F4 kNavSaveChangesClosingDocument;
$EA7E0BFDF3DADB4612DB717B8814F0F4 kNavSaveChangesOther;
$EA7E0BFDF3DADB4612DB717B8814F0F4 kNavSaveChangesQuittingApplication;
$73F18261312DBE2173E1DFBBAE90E4FD kNavSelectAllReadableItem;
$73F18261312DBE2173E1DFBBAE90E4FD kNavSelectDefaultLocation;
$B47CEC7198169E487813C137020DFA92 kNavSortAscending;
$C4386440AF8B237D2CD86F5B7B67A823 kNavSortDateField;
$B47CEC7198169E487813C137020DFA92 kNavSortDescending;
$C4386440AF8B237D2CD86F5B7B67A823 kNavSortNameField;
$73F18261312DBE2173E1DFBBAE90E4FD kNavSupportPackages;
$626F30637178466328D1E07D843DC68F kNavTranslateCopy;
$626F30637178466328D1E07D843DC68F kNavTranslateInPlace;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionCancel;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionChoose;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionDiscardChanges;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionDiscardDocuments;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionDontSaveChanges;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionNewFolder;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionNone;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionOpen;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionReviewDocuments;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionSaveAs;
$4B41472414EFC1CCE2461E1C29D7C408 kNavUserActionSaveChanges;
$C93799A8625E76DD336C3BAE01FEEAD3 kNavWrongDialogClassErr;
$C93799A8625E76DD336C3BAE01FEEAD3 kNavWrongDialogStateErr;
$C9196282FECEA653565233A7CD50F0CD kNeedsInputWindow;
$5B004150561D8A57B6AEE998E4910F58 kNegativeKCItemAttr;
$1B8734131365C358C36B73443A3ED65E kNetbufDataIsOTData;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kNetworkDomain;
$5442D69C038BA541BC61D9468B2235C9 kNeuter;
$97D06325C87197057B6C6609F6137F88 kNeutralScript;
$476A79E339CADAF44B401C5F27E1C94E kNeverShowModeBit;
$0727C0C73D84B5A41817ECFAE9A395A4 kNewDebugHeap;
$58030CB495C0F1442001624CD349E98E kNewDisplayBit;
$0E89879D61237E8E6722620A3B96311B kNewSizeParameter;
$0727C0C73D84B5A41817ECFAE9A395A4 kNewStyleHeap;
$6779799A31BDCCE02DD843853CB38533 kNewSuspend;
$444A07D61DE1E75232BD6F04707296FB kNextBody;
$AAAEA4B86AC2FAE96AFE5D76F8CF2D73 kNextIOIsInput;
$AAAEA4B86AC2FAE96AFE5D76F8CF2D73 kNextIOIsOutput;
$D059E35DD7AB8AD47A6785A5C99147B0 kNextWindowGroup;
$245BDEE3290FDE5F323E0A417238E5B0 kNilOptions;
$CD186B9C323FA891A7A575C512C8E555 kNoAlternatesSelector;
$F401D567E4FBF51362F158484CD5534B kNoAnnotationSelector;
$566D78D6447C4D565AE39524F2F22577 kNoByteCode;
$BBD4B51CD1F8C4E1BDF16F03CBA05C13 kNoCJKItalicRomanSelector;
$90E05716757C219080C40353374456CF kNoCJKSymbolAlternativesSelector;
$956E0F8638627E2D7345301BF56E48D3 kNoCardBusCISErr;
$956E0F8638627E2D7345301BF56E48D3 kNoCardEnablersFoundErr;
$956E0F8638627E2D7345301BF56E48D3 kNoCardErr;
$956E0F8638627E2D7345301BF56E48D3 kNoCardSevicesSocketsErr;
$9697D2C626758E212899500537321E1C kNoChannelConversion;
$956E0F8638627E2D7345301BF56E48D3 kNoClientTableErr;
$956E0F8638627E2D7345301BF56E48D3 kNoCompatibleNameErr;
$A2A3B97015A39488E2F6B427ADE8C31C kNoConnect;
$D0BB73902856307AC287F05F0A49525F kNoConstraint;
$9697D2C626758E212899500537321E1C kNoDecompression;
$956E0F8638627E2D7345301BF56E48D3 kNoEnablerForCardErr;
$AD43285D6E4DEFBA73FD65EE449C3B60 kNoEndingProsody;
$E432BDE770954FAA58BC493549E91D02 kNoFidelity;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kNoFilesIcon;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kNoFolderIcon;
$E95C98F009867ADAC3C78E8CB5065BFB kNoFractionsSelector;
$956E0F8638627E2D7345301BF56E48D3 kNoIOWindowRequestedErr;
$1AE43C0817ECDE8EDCB0D679B81B2F71 kNoIdeographicAlternativesSelector;
$9697D2C626758E212899500537321E1C kNoMixing;
$956E0F8638627E2D7345301BF56E48D3 kNoMoreInterruptSlotsErr;
$956E0F8638627E2D7345301BF56E48D3 kNoMoreItemsErr;
$956E0F8638627E2D7345301BF56E48D3 kNoMoreTimerClientsErr;
$C61609BB0F455BF0C49EDE98D48A29D1 kNoOperationMsg;
$A7575B3039476EA3F1C1D03F2499B38C kNoOrnamentsSelector;
$28BE9745FBFAC7613E1AD2B56AA356CB kNoProcess;
$9697D2C626758E212899500537321E1C kNoRealtimeProcessing;
$985F992E9650E084E30EB5752888702D kNoRubyKanaSelector;
$9697D2C626758E212899500537321E1C kNoSampleFormatConversion;
$9697D2C626758E212899500537321E1C kNoSampleRateConversion;
$9697D2C626758E212899500537321E1C kNoSampleSizeConversion;
$8D4D07E192BE4DF49363A655628BC0D2 kNoSeparateSyncControlBit;
$51D9C7A66E27CF37B82E1BF57C19CF25 kNoSoundComponentChain;
$4693F9F93A5130D57E44F485B4108586 kNoSoundComponentType;
$1C119E9720855ADE2B421A854DBE867A kNoSource;
$AD43285D6E4DEFBA73FD65EE449C3B60 kNoSpeechInterrupt;
$F7247E5962708F04BC704908F5CB3C56 kNoStyleOptionsSelector;
$58B7B25FE359A5DE8E99FA27EE656A12 kNoSuchPowerSource;
$476A79E339CADAF44B401C5F27E1C94E kNoSwitchConfirmBit;
$40A4AD514222E8EC45F8250D13AFC8D6 kNoThreadID;
$81302A1F099C3ECCAA87F34B5DD60C66 kNoTimeOut;
$29BD2EC3A2B216A66733D3791733D12E kNoTransform;
$EBF6D2B8724BD6268E803B35A76B996A kNoTransliterationSelector;
$882ADC82034244AFFE570DD57A3BB1C0 kNoUserAuthentication;
$4A3C2C06B619E3C8A441AC20BACFFC2D kNoVolume;
$9697D2C626758E212899500537321E1C kNoVolumeConversion;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kNoWriteIcon;
$40B1D294FCB105E6FD797FB89EF6F7A3 kNonBreakingSpaceCharCode;
$3DE452E66A716C4ABD5564098B5C5FFF kNonFinalSwashesOffSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kNonFinalSwashesOnSelector;
$9697D2C626758E212899500537321E1C kNonInterleavedBuffer;
$9697D2C626758E212899500537321E1C kNonPagingMixer;
$56EDAB68D3F8BADD4C371F358805869C kNonRealTime;
$87A5FEEFCB001713CA7CFFFC80C61561 kNoneKCStopOn;
$B279F8649030D335CB0658803ACB5579 kNormalPositionSelector;
$03C7596D374A2A209ABB61D96A299AF7 kNotPaged;
$956E0F8638627E2D7345301BF56E48D3 kNotReadyErr;
$956E0F8638627E2D7345301BF56E48D3 kNotZVCapableErr;
$9AE367475DB3252AE4C1C184F0EB9534 kNoteIcon;
$4BB91A84A266B38EACF9B500C4711451 kNoun;
$0337B7701AE53305FA5B7C143A584A07 kNullCFragVersion;
$40B1D294FCB105E6FD797FB89EF6F7A3 kNullCharCode;
$29926AB924E42B27C90E0FDA4D67BBF6 kNumberCaseType;
$A20BE615049D5079A0A9F69830C0C3D0 kNumberCtlCTabEntries;
$29926AB924E42B27C90E0FDA4D67BBF6 kNumberSpacingType;
$ACDD1ACB921825D78706C486B32E5ACB kOPBDControlPointFormat;
$ACDD1ACB921825D78706C486B32E5ACB kOPBDCurrentVersion;
$ACDD1ACB921825D78706C486B32E5ACB kOPBDDistanceFormat;
$ACDD1ACB921825D78706C486B32E5ACB kOPBDTag;
$43C4E16483B81A987A34D7A3AF1437A8 kOSACanGetSource;
$A7BFDD498B1782EC1ED6019F4F7E6FA2 kOSAComponentType;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerCreateSession;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerDisposeCallFrame;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerDisposeSession;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetBreakpoint;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetCallFrameState;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetCurrentCallFrame;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetDefaultBreakpoint;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetPreviousCallFrame;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetSessionState;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetStatementRanges;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerGetVariable;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerSessionStep;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerSetBreakpoint;
$5F622440D8729435D1CAFC0C02811AC5 kOSADebuggerSetVariable;
$3E1B393E7127E545EEEAFC9F498E6159 kOSADontUsePhac;
$6BBF7C2D280978F663BDFB32A7C2B166 kOSAErrorApp;
$42A44C027C51BF81ADE897BA007A09A5 kOSAErrorArgs;
$13FD81355811319D7551F83EBB349AD7 kOSAErrorBriefMessage;
$12C3139B97558B27659DDFAD3CF40167 kOSAErrorExpectedType;
$A1EECE411E39F46A7F222B2FC95ABC40 kOSAErrorMessage;
$405B2F81DE28464E009EF1DDDB2F771F kOSAErrorNumber;
$7F06BC4141063ED90041B7609B4B5E52 kOSAErrorOffendingObject;
$8E5C0A03518548F808E418C553F52984 kOSAErrorPartialResult;
$771C443C24708D0294A19D33AC41EC9B kOSAErrorRange;
$BAA3A54DCC7C52193713794DB8FB4BA3 kOSAFileType;
$F6731E32AA5A69AA917EF257EFD88A1D kOSAGenericScriptingComponentSubtype;
$734D169094B446B1D8359E6ED26DB5FB kOSAModeAlwaysInteract;
$724A90AF96E58088A5967BA830BA97EE kOSAModeAugmentContext;
$734D169094B446B1D8359E6ED26DB5FB kOSAModeCanInteract;
$CE3D87986B78C76B3FA7FCB924EF7677 kOSAModeCantSwitchLayer;
$D599C79F6803F7A1B1417CB239EE94E8 kOSAModeCompileIntoContext;
$3C05039853275FCDBB455D1E5929F654 kOSAModeDispatchToDirectObject;
$40B0784FE731EFFACEE252267C780939 kOSAModeDisplayForHumans;
$FA395D620D0C83A51E9B2A12B50179D8 kOSAModeDoRecord;
$95EFE6911AF25FD881152CA16664B33E kOSAModeDontDefine;
$8DB1486E3E31955C12E9662A69CEA64A kOSAModeDontGetDataForArguments;
$734D169094B446B1D8359E6ED26DB5FB kOSAModeDontReconnect;
$C3E3EECB036BCEBFF7DC9008299D1265 kOSAModeDontStoreParent;
$734D169094B446B1D8359E6ED26DB5FB kOSAModeNeverInteract;
$AB62DF2166012788AB80ABEDB86FD24F kOSAModeNull;
$DA1EA7796FB9D778A4C98BCA59CDDC35 kOSAModePreventGetSource;
$65C1544CA1F4FC18AD9FCCF27F8D0FC5 kOSANoDispatch;
$AB62DF2166012788AB80ABEDB86FD24F kOSANullMode;
$1880502D74851D4963ADA8B4788C9227 kOSANullScript;
$8046F6F70CC0DCD3F106A36C30F5CF7F kOSARecordedText;
$3B4D0449E18B76301ADFB1B079EE1872 kOSAScriptBestType;
$FA1DD8C0D277C0909B8A536738D987D1 kOSAScriptIsModified;
$583F57547226B43F6ABBCF73AF5E24D4 kOSAScriptIsTypeCompiledScript;
$BC8EA190D8C1F3642D9BA1ED861A0D18 kOSAScriptIsTypeScriptContext;
$FA0120687CF6A35F4EE5B1CE6AC4CAF3 kOSAScriptIsTypeScriptValue;
$F74293367DF83BAED8F9516242E90D14 kOSAScriptResourceType;
$FB3C497E5DC8B65349DCFE5758477343 kOSASelectAvailableDialectCodeList;
$FB3C497E5DC8B65349DCFE5758477343 kOSASelectAvailableDialects;
$DAE3A0A280223CFDAC56433B92870FC5 kOSASelectCoerceFromDesc;
$DAE3A0A280223CFDAC56433B92870FC5 kOSASelectCoerceToDesc;
$9698EBF4C30D4309F75EAA427624F2E9 kOSASelectCompile;
$8AA2EA001A060AA0EFE9BE9FA12820E3 kOSASelectCompileExecute;
$80128D3C2087FE5A4E23517C0A21654F kOSASelectComponentSpecificStart;
$9698EBF4C30D4309F75EAA427624F2E9 kOSASelectCopyID;
$7EE95CE29FDBD5A336441C6CA0F81732 kOSASelectCopyScript;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectDisplay;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectDispose;
$2D922AD87A068D9EFD7A5424B461DF55 kOSASelectDoEvent;
$8AA2EA001A060AA0EFE9BE9FA12820E3 kOSASelectDoScript;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectExecute;
$2D922AD87A068D9EFD7A5424B461DF55 kOSASelectExecuteEvent;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectGetActiveProc;
$830CA3C3D53095EC29BE6C332A550248 kOSASelectGetCreateProc;
$FB3C497E5DC8B65349DCFE5758477343 kOSASelectGetCurrentDialect;
$FB3C497E5DC8B65349DCFE5758477343 kOSASelectGetDialectInfo;
$2D922AD87A068D9EFD7A5424B461DF55 kOSASelectGetResumeDispatchProc;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectGetScriptInfo;
$830CA3C3D53095EC29BE6C332A550248 kOSASelectGetSendProc;
$7745403140024A222F16627FF91DF2DB kOSASelectGetSource;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectLoad;
$8AA2EA001A060AA0EFE9BE9FA12820E3 kOSASelectLoadExecute;
$2D922AD87A068D9EFD7A5424B461DF55 kOSASelectMakeContext;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectScriptError;
$9698EBF4C30D4309F75EAA427624F2E9 kOSASelectScriptingComponentName;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectSetActiveProc;
$830CA3C3D53095EC29BE6C332A550248 kOSASelectSetCreateProc;
$FB3C497E5DC8B65349DCFE5758477343 kOSASelectSetCurrentDialect;
$830CA3C3D53095EC29BE6C332A550248 kOSASelectSetDefaultTarget;
$2D922AD87A068D9EFD7A5424B461DF55 kOSASelectSetResumeDispatchProc;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectSetScriptInfo;
$830CA3C3D53095EC29BE6C332A550248 kOSASelectSetSendProc;
$22DFE30C8AA26A8A05AFBF04EC9C7E8F kOSASelectStartRecording;
$22DFE30C8AA26A8A05AFBF04EC9C7E8F kOSASelectStopRecording;
$9A0C9E1D742B38032A0F8F4BE34E2DFB kOSASelectStore;
$99450F035771F6CE140B230CECF79700 kOSASuite;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsAECoercion;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsAESending;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsCompiling;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsConvenience;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsDialects;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsEventHandling;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsGetSource;
$6952EC5BC368DB036D5D30E34FBBAB31 kOSASupportsRecording;
$54AA91CE5C09A4163B896338791100FA kOSAUseStandardDispatch;
$7191047DEEBD9904D2E4FBD1FE3E7338 kOSAsyncCompleteMessageID;
$1AAE3E3510C9F5BD7EB147428BE1E531 kOSAsyncRefCount;
$1AAE3E3510C9F5BD7EB147428BE1E531 kOSAsyncRefSize;
$32669029A1B18DE8C09CECEB1063E0B5 kOSIZCodeInSharedLibraries;
$32669029A1B18DE8C09CECEB1063E0B5 kOSIZDontOpenResourceFile;
$32669029A1B18DE8C09CECEB1063E0B5 kOSIZOpenWithReadPermission;
$32669029A1B18DE8C09CECEB1063E0B5 kOSIZdontAcceptRemoteEvents;
$7191047DEEBD9904D2E4FBD1FE3E7338 kOSNotificationMessageID;
$FACC82D72813F13ED621EEA96672B99F kOTADEVDevice;
$FACC82D72813F13ED621EEA96672B99F kOTATMDevice;
$FACC82D72813F13ED621EEA96672B99F kOTATMSNAPDevice;
$3AF7AF3D144C4B2285FED2463B608B9F kOTAccessErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTAddressBusyErr;
$3232EB4724A143CE939A0F1C00AC752B kOTAnyInetAddress;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadAddressErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadConfigurationErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadDataErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadFlagErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadNameErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadOptionErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadQLenErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadReferenceErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadSequenceErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBadSyncErr;
$349E66C84FB33302B10067F6FF0FEF67 kOTBooleanOptionDataSize;
$349E66C84FB33302B10067F6FF0FEF67 kOTBooleanOptionSize;
$3AF7AF3D144C4B2285FED2463B608B9F kOTBufferOverflowErr;
$BBA02E4BA3E3C0C4F044C26556A22B28 kOTCFMClass;
$3AF7AF3D144C4B2285FED2463B608B9F kOTCanceledErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTClientNotInittedErr;
$55E5252D84E6F1A48D581BACE889D526 kOTClosePortRequest;
$55E5252D84E6F1A48D581BACE889D526 kOTConfigurationChanged;
$3AF7AF3D144C4B2285FED2463B608B9F kOTConfigurationChangedErr;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTDisablePortEvent;
$3AF7AF3D144C4B2285FED2463B608B9F kOTDuplicateFoundErr;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTEnablePortEvent;
$FACC82D72813F13ED621EEA96672B99F kOTEthernetDevice;
$FACC82D72813F13ED621EEA96672B99F kOTFDDIDevice;
$FACC82D72813F13ED621EEA96672B99F kOTFastEthernetDevice;
$FACC82D72813F13ED621EEA96672B99F kOTFibreChannelDevice;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTFireWireBus;
$FACC82D72813F13ED621EEA96672B99F kOTFireWireDevice;
$3AF7AF3D144C4B2285FED2463B608B9F kOTFlowErr;
$349E66C84FB33302B10067F6FF0FEF67 kOTFourByteOptionSize;
$E428C8A3C080949AFF95D514E949DABD kOTFraming8022;
$E428C8A3C080949AFF95D514E949DABD kOTFraming8023;
$E428C8A3C080949AFF95D514E949DABD kOTFramingEthernet;
$E428C8A3C080949AFF95D514E949DABD kOTFramingEthernetIPX;
$2A026A222F6C5D89289B1A56BA3719A9 kOTGenericName;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTGeoPort;
$DDD6BB699887F3CA93AB9FA73DC33335 kOTGetFramingValue;
$FACC82D72813F13ED621EEA96672B99F kOTIRTalkDevice;
$D38D679BF52BCAE6627D32FEB4CF287D kOTISDN56KAdaptation;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNAccessInformationDiscarded;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNBearerCapabilityNotAuthorized;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNBearerCapabilityNotImplemented;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNBearerCapabilityNotPresentlyAvailable;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNCallIdentityCleared;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNCallIdentityInUse;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNCallIdentityNotUsed;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNCallRejected;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNCallRestricted;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNChannelUnacceptable;
$414A25EE1BA90F2AE0DEAD2E7D064BD1 kOTISDNDefault56KAdaptation;
$414A25EE1BA90F2AE0DEAD2E7D064BD1 kOTISDNDefaultCommType;
$414A25EE1BA90F2AE0DEAD2E7D064BD1 kOTISDNDefaultFramingType;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNDestinationOutOfOrder;
$FACC82D72813F13ED621EEA96672B99F kOTISDNDevice;
$FFCF2CE8C7F0FEA7613938669350024C kOTISDNDigital56k;
$FFCF2CE8C7F0FEA7613938669350024C kOTISDNDigital64k;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNFacilityRejected;
$58F4BDE45325186DCC73AD5CD6AD716B kOTISDNFramingHDLC;
$3FFE5272E000773A6D604E13DB4AE83A kOTISDNFramingHDLCSupported;
$58F4BDE45325186DCC73AD5CD6AD716B kOTISDNFramingTransparent;
$3FFE5272E000773A6D604E13DB4AE83A kOTISDNFramingTransparentSupported;
$58F4BDE45325186DCC73AD5CD6AD716B kOTISDNFramingV110;
$3FFE5272E000773A6D604E13DB4AE83A kOTISDNFramingV110Supported;
$58F4BDE45325186DCC73AD5CD6AD716B kOTISDNFramingV14E;
$3FFE5272E000773A6D604E13DB4AE83A kOTISDNFramingV14ESupported;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNIncompatibleDestination;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNInterworkingUnspecified;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNInvalidMessageUnspecified;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNInvalidNumberFormat;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNInvalidTransitNetworkSelection;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNMandatoryInformationElementIsMissing;
$34C44FA1EB33A75D55D31AB7242818E7 kOTISDNMaxPhoneSize;
$34C44FA1EB33A75D55D31AB7242818E7 kOTISDNMaxSubSize;
$E5618BF9F8CA15F558779C0A2CDB1DB0 kOTISDNMaxUserDataSize;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNMessageTypeNonExistentOrNotImplemented;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNetworkOutOfOrder;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNoAnswerFromUser;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNoCallSuspended;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNoCircuitChannelAvailable;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNoRouteToDestination;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNoRouteToSpecifiedTransitNetwork;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNoUserResponding;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNonSelectedUserClearing;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNormal;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNormalUnspecified;
$D38D679BF52BCAE6627D32FEB4CF287D kOTISDNNot56KAdaptation;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNNumberChanged;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNOnlyRestrictedDigitalBearer;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNQualityOfServiceUnvailable;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNRequestedCircuitChannelNotAvailable;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNRequestedFacilityNotImplemented;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNRequestedFacilityNotSubscribed;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNResourceUnavailableUnspecified;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNServiceOrOptionNotAvilableUnspecified;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNServiceOrOptionNotImplementedUnspecified;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNSwitchingEquipmentCongestion;
$FFCF2CE8C7F0FEA7613938669350024C kOTISDNTelephoneALaw;
$FFCF2CE8C7F0FEA7613938669350024C kOTISDNTelephoneMuLaw;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNUnallocatedNumber;
$E308B2701ABBDEDBE015D937CA3BD426 kOTISDNUserBusy;
$FFCF2CE8C7F0FEA7613938669350024C kOTISDNVideo56k;
$FFCF2CE8C7F0FEA7613938669350024C kOTISDNVideo64k;
$3AF7AF3D144C4B2285FED2463B608B9F kOTIndOutErr;
MACRO_kOTNoMemoryConfigurationPtr kOTInvalidConfigurationPtr;
MACRO_kOTInvalidEndpointRef kOTInvalidEndpointRef;
MACRO_kOTInvalidMapperRef kOTInvalidMapperRef;
$98DBF04966FA740EF2876A06F88D9229 kOTInvalidPortRef;
MACRO_kOTInvalidProviderRef kOTInvalidProviderRef;
MACRO_kOTInvalidRef kOTInvalidRef;
$FACC82D72813F13ED621EEA96672B99F kOTIrDADevice;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTLastBusIndex;
$FACC82D72813F13ED621EEA96672B99F kOTLastDeviceIndex;
$7F6C01ACAE3F92E9A7E5D535E29DF13A kOTLastOtherNumber;
$7F6C01ACAE3F92E9A7E5D535E29DF13A kOTLastSlotNumber;
$FACC82D72813F13ED621EEA96672B99F kOTLocalTalkDevice;
$3AF7AF3D144C4B2285FED2463B608B9F kOTLookErr;
$FACC82D72813F13ED621EEA96672B99F kOTMDEVDevice;
$FACC82D72813F13ED621EEA96672B99F kOTModemDevice;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTMotherboardBus;
$D771E2DC7B96948810CBFB0A85015BE4 kOTNetbufDataIsOTBufferStar;
$B4CB54202646D9CABBCB218767DDCA84 kOTNetbufIsRawMode;
$55E5252D84E6F1A48D581BACE889D526 kOTNewPortRegistered;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTNewPortRegisteredEvent;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoAddressErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoDataErr;
$FACC82D72813F13ED621EEA96672B99F kOTNoDeviceType;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoDisconnectErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoError;
MACRO_kOTNoMemoryConfigurationPtr kOTNoMemoryConfigurationPtr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoReleaseErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoStructureTypeErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNoUDErrErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNotFoundErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTNotSupportedErr;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTNuBus;
$349E66C84FB33302B10067F6FF0FEF67 kOTOneByteOptionSize;
$349E66C84FB33302B10067F6FF0FEF67 kOTOptionHeaderSize;
$3AF7AF3D144C4B2285FED2463B608B9F kOTOutOfMemoryErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTOutStateErr;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTPCCardBus;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTPCIBus;
$FACC82D72813F13ED621EEA96672B99F kOTPPPDevice;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortAutoConnects;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortCanArbitrate;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortCanYield;
$55E5252D84E6F1A48D581BACE889D526 kOTPortDisabled;
$55E5252D84E6F1A48D581BACE889D526 kOTPortEnabled;
$3AF7AF3D144C4B2285FED2463B608B9F kOTPortHasDiedErr;
$F7FDBBEA2C2386072702565C1E36D058 kOTPortIsActive;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortIsAlias;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortIsDLPI;
$F7FDBBEA2C2386072702565C1E36D058 kOTPortIsDisabled;
$F7FDBBEA2C2386072702565C1E36D058 kOTPortIsOffline;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortIsPrivate;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortIsSystemRegistered;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortIsTPI;
$0A0625EF45469C099158DFA4C42FBA43 kOTPortIsTransitory;
$F7FDBBEA2C2386072702565C1E36D058 kOTPortIsUnavailable;
$3AF7AF3D144C4B2285FED2463B608B9F kOTPortLostConnection;
$55E5252D84E6F1A48D581BACE889D526 kOTPortNetworkChange;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTPortNetworkChangeEvent;
$55E5252D84E6F1A48D581BACE889D526 kOTPortOffline;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTPortOfflineEvent;
$55E5252D84E6F1A48D581BACE889D526 kOTPortOnline;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTPortOnlineEvent;
$3AF7AF3D144C4B2285FED2463B608B9F kOTPortWasEjectedErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTProtocolErr;
$55E5252D84E6F1A48D581BACE889D526 kOTProviderIsClosed;
$55E5252D84E6F1A48D581BACE889D526 kOTProviderIsDisconnected;
$55E5252D84E6F1A48D581BACE889D526 kOTProviderIsReconnected;
$3AF7AF3D144C4B2285FED2463B608B9F kOTProviderMismatchErr;
$55E5252D84E6F1A48D581BACE889D526 kOTProviderWillClose;
$FACC82D72813F13ED621EEA96672B99F kOTPseudoDevice;
$3AF7AF3D144C4B2285FED2463B608B9F kOTQFullErr;
$59C0EFCBD80CE07BA9A26CF33720D922 kOTRawRcvOff;
$59C0EFCBD80CE07BA9A26CF33720D922 kOTRawRcvOn;
$59C0EFCBD80CE07BA9A26CF33720D922 kOTRawRcvOnWithTimeStamp;
$3AF7AF3D144C4B2285FED2463B608B9F kOTResAddressErr;
$3AF7AF3D144C4B2285FED2463B608B9F kOTResQLenErr;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent1;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent2;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent3;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent4;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent5;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent6;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent7;
$55E5252D84E6F1A48D581BACE889D526 kOTReservedEvent8;
$FACC82D72813F13ED621EEA96672B99F kOTSLIPDevice;
$FACC82D72813F13ED621EEA96672B99F kOTSMDSDevice;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTScheduleTerminationEvent;
$DDD6BB699887F3CA93AB9FA73DC33335 kOTSendErrorPacket;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialBreakOn;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialCTLHold;
$73BC60A644A9BD44670368754AE9DDD8 kOTSerialCTSInputHandshake;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialDTRNegated;
$73BC60A644A9BD44670368754AE9DDD8 kOTSerialDTROutputHandshake;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultBaudRate;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultDataBits;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultHandshake;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultOffChar;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultOnChar;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultParity;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultRcvBufSize;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultRcvLoWat;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultRcvTimeout;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultSndBufSize;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultSndLoWat;
$83412CBDED55ED4D3DEF71A75727F572 kOTSerialDefaultStopBits;
$FACC82D72813F13ED621EEA96672B99F kOTSerialDevice;
$FA9D380E0AE979141E927AE2BDFBD04E kOTSerialEvenParity;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialForceXOffFalse;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialForceXOffTrue;
$413A2BC94D39CB74B7E5B3B7179195D1 kOTSerialFramingAsync;
$413A2BC94D39CB74B7E5B3B7179195D1 kOTSerialFramingAsyncPackets;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialFramingErr;
$413A2BC94D39CB74B7E5B3B7179195D1 kOTSerialFramingHDLC;
$413A2BC94D39CB74B7E5B3B7179195D1 kOTSerialFramingPPP;
$413A2BC94D39CB74B7E5B3B7179195D1 kOTSerialFramingSDLC;
$FA9D380E0AE979141E927AE2BDFBD04E kOTSerialNoParity;
$FA9D380E0AE979141E927AE2BDFBD04E kOTSerialOddParity;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialOutputBreakOn;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialOverrunErr;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialParityErr;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSendXOffAlways;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSendXOffIfXOnTrue;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSendXOnAlways;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSendXOnIfXOffTrue;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSetBreakOff;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSetBreakOn;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSetDTROff;
$05053EB1D9EE56B0D52BE6E4EFB80401 kOTSerialSetDTROn;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialSwOverRunErr;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialXOffHold;
$05B3876AF5F2B752225AA65737CFB20B kOTSerialXOffSent;
$73BC60A644A9BD44670368754AE9DDD8 kOTSerialXOnOffInputHandshake;
$73BC60A644A9BD44670368754AE9DDD8 kOTSerialXOnOffOutputHandshake;
$DDD6BB699887F3CA93AB9FA73DC33335 kOTSetRecvMode;
$55E5252D84E6F1A48D581BACE889D526 kOTStackIsLoading;
$55E5252D84E6F1A48D581BACE889D526 kOTStackIsUnloading;
$55E5252D84E6F1A48D581BACE889D526 kOTStackWasLoaded;
$3AF7AF3D144C4B2285FED2463B608B9F kOTStateChangeErr;
$55E5252D84E6F1A48D581BACE889D526 kOTSyncIdleEvent;
$3AF7AF3D144C4B2285FED2463B608B9F kOTSysErrorErr;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemAwaken;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemAwakenPrep;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemIdle;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemShutdown;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemShutdownPrep;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemSleep;
$55E5252D84E6F1A48D581BACE889D526 kOTSystemSleepPrep;
$FACC82D72813F13ED621EEA96672B99F kOTTokenRingDevice;
$1AAB9134B0FEB3A17896E87DAEB18E46 kOTTryShutdownEvent;
$349E66C84FB33302B10067F6FF0FEF67 kOTTwoByteOptionSize;
$9FF31CBD7EB437B7B8C81BF77CD6AA85 kOTUnknownBusPort;
$3AF7AF3D144C4B2285FED2463B608B9F kOTUserRequestedErr;
$55E5252D84E6F1A48D581BACE889D526 kOTYieldPortRequest;
$92DD97704218B475071CB80CC2960CE5 kO_ASYNC;
$92DD97704218B475071CB80CC2960CE5 kO_NDELAY;
$92DD97704218B475071CB80CC2960CE5 kO_NONBLOCK;
$0CE592B5184B238B16AB67F4BE1A6C98 kOffset2Pos;
$18BF411237F175ABCD4A1D90A0B1F6B7 kOffsetBinary;
$09A44E9A6AD8D0F1C197FC7AFB8D211E kOld68kRTA;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kOnAppropriateDisk;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kOnSystemDisk;
$566D78D6447C4D565AE39524F2F22577 kOneByteCode;
$8073354537A795364153FFC697AFF032 kOpaqueAddressSpaceID;
$8073354537A795364153FFC697AFF032 kOpaqueAnyID;
$8073354537A795364153FFC697AFF032 kOpaqueAreaID;
$8073354537A795364153FFC697AFF032 kOpaqueCoherenceID;
$8073354537A795364153FFC697AFF032 kOpaqueConsoleID;
$8073354537A795364153FFC697AFF032 kOpaqueCpuID;
$8073354537A795364153FFC697AFF032 kOpaqueCriticalRegionID;
$8073354537A795364153FFC697AFF032 kOpaqueEventID;
$8073354537A795364153FFC697AFF032 kOpaqueNotificationID;
$8073354537A795364153FFC697AFF032 kOpaqueProcessID;
$8073354537A795364153FFC697AFF032 kOpaqueQueueID;
$8073354537A795364153FFC697AFF032 kOpaqueSemaphoreID;
$8073354537A795364153FFC697AFF032 kOpaqueTaskID;
$8073354537A795364153FFC697AFF032 kOpaqueTimerID;
$009AA9BCCC426E323765130C670B7B3B kOpenCommand;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kOpenDocEditorsFolderType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kOpenDocFolderType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kOpenDocLibrariesFolderType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kOpenDocShellPlugInsFolderType;
$0FA8C27A3576B43468EA81A201B45E80 kOpenDropIconVariant;
$121E1AC3EB6A789387393DDCCEF5B35F kOpenFolderIcon;
$66515207F0D737806D7F37B84E062AAB kOpenFolderIconResource;
$0FA8C27A3576B43468EA81A201B45E80 kOpenIconVariant;
$A1E1BAD5B418D85708692C2D8BF7B43D kOptionUnicode;
$C61609BB0F455BF0C49EDE98D48A29D1 kOrderedQueueTagMsg;
$B279F8649030D335CB0658803ACB5579 kOrdinalsSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kOrnamentSetsType;
$956E0F8638627E2D7345301BF56E48D3 kOutOfResourceErr;
$A261E92C82250443DCF4E199E1935CB2 kOutlineText;
$07F30EAFE9CC2F5CF34646E5224F6B53 kOutputMask;
$07F30EAFE9CC2F5CF34646E5224F6B53 kOutputShift;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kOutputTextInUnicodeEncodingBit;
$3E3284370D0C448FD046A7A046297FF5 kOutputTextInUnicodeEncodingMask;
$29926AB924E42B27C90E0FDA4D67BBF6 kOverlappingCharactersType;
$B95EEEF8D0A9C3F124CECCB9E5363575 kOverlayWindowClass;
$5CDB6810CF5FAA70771C826E258B46A2 kOverrideConnection;
$121E1AC3EB6A789387393DDCCEF5B35F kOwnedFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kOwnedFolderIconResource;
$4B1D9FE243A502F122BF86EDB061F24B kOwnerID2Name;
$61758FF10C8319CCF39299F61C4617E7 kOwnerIcon;
$4B1D9FE243A502F122BF86EDB061F24B kOwnerName2ID;
$A2A3B97015A39488E2F6B427ADE8C31C kPALConnect;
$1C119E9720855ADE2B421A854DBE867A kPCCardSource;
$1EC4B524827CB86342B5F4B756990840 kPCIPowerOffAllowed;
$29BD2EC3A2B216A66733D3791733D12E kPCSToDevice;
$29BD2EC3A2B216A66733D3791733D12E kPCSToPCS;
$2D990118765E11A30155FC25478859F0 kPEFAbsoluteExport;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFCodeSection;
$546A77FD246E087CBC2C8129F176BD98 kPEFCodeSymbol;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFConstantSection;
$546A77FD246E087CBC2C8129F176BD98 kPEFDataSymbol;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFDebugSection;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFExceptionSection;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFExecDataSection;
$A79B12ECD40934D2D9020A046AFC4924 kPEFExpSymClassShift;
$A79B12ECD40934D2D9020A046AFC4924 kPEFExpSymMaxNameOffset;
$A79B12ECD40934D2D9020A046AFC4924 kPEFExpSymNameOffsetMask;
$3C1A27CBA589CB9FBE2333B91A8E6B64 kPEFFirstSectionHeaderOffset;
$E0795265D3905131547FB303070DA88F kPEFGlobalShare;
$546A77FD246E087CBC2C8129F176BD98 kPEFGlueSymbol;
$ADB2C9B915336A0E736BF36874077906 kPEFHashLengthShift;
$ADB2C9B915336A0E736BF36874077906 kPEFHashMaxLength;
$00C39BE5059D46486D41346DD71B38E0 kPEFHashSlotFirstKeyMask;
$00C39BE5059D46486D41346DD71B38E0 kPEFHashSlotMaxKeyIndex;
$00C39BE5059D46486D41346DD71B38E0 kPEFHashSlotMaxSymbolCount;
$00C39BE5059D46486D41346DD71B38E0 kPEFHashSlotSymCountShift;
$ADB2C9B915336A0E736BF36874077906 kPEFHashValueMask;
$83281B6B5144BFD16530DD5F5AE151CC kPEFImpSymClassShift;
$83281B6B5144BFD16530DD5F5AE151CC kPEFImpSymMaxNameOffset;
$83281B6B5144BFD16530DD5F5AE151CC kPEFImpSymNameOffsetMask;
$A5CD9B7305A68D7E3531C7FACDAC39C0 kPEFInitLibBeforeMask;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFLoaderSection;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFPackedDataSection;
$5914A31DC31FA0CD2EEE95C8FEE85367 kPEFPkDataBlock;
$022454788FE4172E8B085390B91F04A9 kPEFPkDataCount5Mask;
$022454788FE4172E8B085390B91F04A9 kPEFPkDataMaxCount5;
$022454788FE4172E8B085390B91F04A9 kPEFPkDataOpcodeShift;
$5914A31DC31FA0CD2EEE95C8FEE85367 kPEFPkDataRepeat;
$5914A31DC31FA0CD2EEE95C8FEE85367 kPEFPkDataRepeatBlock;
$5914A31DC31FA0CD2EEE95C8FEE85367 kPEFPkDataRepeatZero;
$022454788FE4172E8B085390B91F04A9 kPEFPkDataVCountEndMask;
$022454788FE4172E8B085390B91F04A9 kPEFPkDataVCountMask;
$022454788FE4172E8B085390B91F04A9 kPEFPkDataVCountShift;
$5914A31DC31FA0CD2EEE95C8FEE85367 kPEFPkDataZero;
$E0795265D3905131547FB303070DA88F kPEFProcessShare;
$E0795265D3905131547FB303070DA88F kPEFProtectedShare;
$2D990118765E11A30155FC25478859F0 kPEFReexportedImport;
$97B8CC06DB56D826295C2E9C5BDC3C46 kPEFRelocBasicOpcodeRange;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocBySectC;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocBySectD;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocBySectDWithSkip;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocImportRun;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocIncrPosition;
$B1D71B0E9BAC2832B24A3FB8C10742FA kPEFRelocIncrPositionMaxOffset;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocLgByImport;
$4B389C4826154FDBD1C6714C55F0453D kPEFRelocLgByImportMaxIndex;
$959DAF81EEB200E4342A71B8469831D4 kPEFRelocLgBySectionSubopcode;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocLgRepeat;
$E6A4B77F1099B8C884AE3B5B416AEB19 kPEFRelocLgRepeatMaxChunkCount;
$E6A4B77F1099B8C884AE3B5B416AEB19 kPEFRelocLgRepeatMaxRepeatCount;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocLgSetOrBySection;
$E7D721A2FD17D62E0CA81AF1DBC667FE kPEFRelocLgSetOrBySectionMaxIndex;
$959DAF81EEB200E4342A71B8469831D4 kPEFRelocLgSetSectCSubopcode;
$959DAF81EEB200E4342A71B8469831D4 kPEFRelocLgSetSectDSubopcode;
$451E07B0FB4153CF82FBE0341529E27D kPEFRelocRunMaxRunLength;
$8BB14BDDAB6147BB62B9A1E2594C2D60 kPEFRelocSetPosMaxOffset;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocSetPosition;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocSmByImport;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocSmBySection;
$B1CB9121F1F70C1A85A5AD6437DF1363 kPEFRelocSmIndexMaxIndex;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocSmRepeat;
$91D115EF56F4291549374A70CAECFF06 kPEFRelocSmRepeatMaxChunkCount;
$91D115EF56F4291549374A70CAECFF06 kPEFRelocSmRepeatMaxRepeatCount;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocSmSetSectC;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocSmSetSectD;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocTVector12;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocTVector8;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocUndefinedOpcode;
$072CE19D48F12295ECADDF08F24A1AFB kPEFRelocVTable8;
$2B9B40918A5FC86D87CA80770F223D29 kPEFRelocWithSkipMaxRelocCount;
$2B9B40918A5FC86D87CA80770F223D29 kPEFRelocWithSkipMaxSkipCount;
$546A77FD246E087CBC2C8129F176BD98 kPEFTOCSymbol;
$546A77FD246E087CBC2C8129F176BD98 kPEFTVectorSymbol;
$88F5D5C20FF5C6F36D3C544573ED36C3 kPEFTag1;
$88F5D5C20FF5C6F36D3C544573ED36C3 kPEFTag2;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFTracebackSection;
$546A77FD246E087CBC2C8129F176BD98 kPEFUndefinedSymbol;
$10F4024D4EB0B6F4F7ACA1683C8FE2A6 kPEFUnpackedDataSection;
$88F5D5C20FF5C6F36D3C544573ED36C3 kPEFVersion;
$A5CD9B7305A68D7E3531C7FACDAC39C0 kPEFWeakImportLibMask;
$546A77FD246E087CBC2C8129F176BD98 kPEFWeakImportSymMask;
$168C2AAF3B0BCDA3A24984F7C6E746CC kPLIncludeOfflineDevicesBit;
$FF322869166E8BF7F9E3825A6AF6910C kPMBlackAndWhite;
$61AB2AC05021A1B3757DF2A6CC4D0440 kPMBorderDoubleHairline;
$61AB2AC05021A1B3757DF2A6CC4D0440 kPMBorderDoubleThickline;
$61AB2AC05021A1B3757DF2A6CC4D0440 kPMBorderSingleHairline;
$61AB2AC05021A1B3757DF2A6CC4D0440 kPMBorderSingleThickline;
$51C352CB59F5C1A13FDB3E9C33B96FA7 kPMCancel;
$FF322869166E8BF7F9E3825A6AF6910C kPMColor;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentAbsColor;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentAutomatic;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentBusiness;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentPhoto;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentRelColor;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentUndefined;
$FC7CD5C13BD9FA7D45FB34DA406DAB7D kPMColorIntentUnused;
$FF322869166E8BF7F9E3825A6AF6910C kPMColorModeDuotone;
$FF322869166E8BF7F9E3825A6AF6910C kPMColorModeSpecialColor;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMCurrentValue;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMDefaultResolution;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMDefaultValue;
$079EB790AC217F7371A763DFE897D997 kPMDestinationFax;
$079EB790AC217F7371A763DFE897D997 kPMDestinationFile;
$079EB790AC217F7371A763DFE897D997 kPMDestinationInvalid;
$079EB790AC217F7371A763DFE897D997 kPMDestinationPreview;
$079EB790AC217F7371A763DFE897D997 kPMDestinationPrinter;
$719354E13EC6CF39D760F244FA3CE0A5 kPMDevicePowerLevel_D1;
$719354E13EC6CF39D760F244FA3CE0A5 kPMDevicePowerLevel_D2;
$719354E13EC6CF39D760F244FA3CE0A5 kPMDevicePowerLevel_Off;
$719354E13EC6CF39D760F244FA3CE0A5 kPMDevicePowerLevel_On;
MACRO_kPMDontWantBoolean kPMDontWantBoolean;
MACRO_kPMDontWantData kPMDontWantData;
MACRO_kPMDontWantSize kPMDontWantSize;
$D774227721971CB1F0BA79DAD7B23CAB kPMDuplexBindingLeftRight;
$D774227721971CB1F0BA79DAD7B23CAB kPMDuplexBindingTopDown;
$350E73F968CE09982C591815BE446154 kPMGeneralError;
$FF322869166E8BF7F9E3825A6AF6910C kPMGray;
$350E73F968CE09982C591815BE446154 kPMInvalidPageFormat;
$350E73F968CE09982C591815BE446154 kPMInvalidParameter;
$3FAB78EBE2C8899FA6C264603ED64FE1 kPMInvalidPrintSession;
$350E73F968CE09982C591815BE446154 kPMInvalidPrintSettings;
$3FAB78EBE2C8899FA6C264603ED64FE1 kPMInvalidPrinter;
$70CFE721AE03AAFDC268885E3FF747E3 kPMLandscape;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutBottomTopLeftRight;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutBottomTopRightLeft;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutLeftRightBottomTop;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutLeftRightTopBottom;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutRightLeftBottomTop;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutRightLeftTopBottom;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutTopBottomLeftRight;
$1FD5EEF819E5BA3589810A6219D202E9 kPMLayoutTopBottomRightLeft;
$350E73F968CE09982C591815BE446154 kPMLockIgnored;
$AE358EC4F5D4E63B3FC7EA43B1CB40B6 kPMLocked;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMMaxRange;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMMaxSquareResolution;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMMaximumValue;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMMinRange;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMMinSquareResolution;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMMinimumValue;
MACRO_kPMNoData kPMNoData;
$350E73F968CE09982C591815BE446154 kPMNoDefaultPrinter;
$350E73F968CE09982C591815BE446154 kPMNoError;
MACRO_kPMNoPageFormat kPMNoPageFormat;
MACRO_kPMNoPrintSettings kPMNoPrintSettings;
MACRO_kPMNoReference kPMNoReference;
$350E73F968CE09982C591815BE446154 kPMNoSuchEntry;
$350E73F968CE09982C591815BE446154 kPMNotImplemented;
$3FAB78EBE2C8899FA6C264603ED64FE1 kPMObjectInUse;
$350E73F968CE09982C591815BE446154 kPMOutOfScope;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypeCoated;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypeGlossy;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypePlain;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypePremium;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypeTShirt;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypeTransparency;
$BB440EAAD7503F74C2B1883E9931D923 kPMPaperTypeUnknown;
$70CFE721AE03AAFDC268885E3FF747E3 kPMPortrait;
$C057B879B4FEFB21DC60B7C8FD9ECCE6 kPMPrintAllPages;
$8B690A7B67366DF4B1A462659604196E kPMPrinterIdle;
$8B690A7B67366DF4B1A462659604196E kPMPrinterProcessing;
$8B690A7B67366DF4B1A462659604196E kPMPrinterStopped;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityBest;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityDraft;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityHighest;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityInkSaver;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityLowest;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityNormal;
$A5E06333A0052231A19CEB93FA1BD8F6 kPMQualityPhoto;
$70CFE721AE03AAFDC268885E3FF747E3 kPMReverseLandscape;
$70CFE721AE03AAFDC268885E3FF747E3 kPMReversePortrait;
$E9EDE04DD3EA4AE78E337F6CC2F73890 kPMScalingCenterOnImgArea;
$E9EDE04DD3EA4AE78E337F6CC2F73890 kPMScalingCenterOnPaper;
$E9EDE04DD3EA4AE78E337F6CC2F73890 kPMScalingPinBottomLeft;
$E9EDE04DD3EA4AE78E337F6CC2F73890 kPMScalingPinBottomRight;
$E9EDE04DD3EA4AE78E337F6CC2F73890 kPMScalingPinTopLeft;
$E9EDE04DD3EA4AE78E337F6CC2F73890 kPMScalingPinTopRight;
MACRO_kPMServerLocal kPMServerLocal;
$A5F7563972BA16BCEF7EEE452BF19E6A kPMSourceProfile;
$AE358EC4F5D4E63B3FC7EA43B1CB40B6 kPMUnlocked;
$350E73F968CE09982C591815BE446154 kPMValueOutOfRange;
$9DAD23F7BB08B2345DA10465F39C7433 kPPPAddrCompression;
$AD2245E410F1AFE0166A0410156B5CA4 kPPPAllAlertsDisabledFlag;
$AD2245E410F1AFE0166A0410156B5CA4 kPPPAllAlertsEnabledFlag;
$2CFF26A5DE00F216976732A12FFA4336 kPPPAsyncMapCharsAll;
$2CFF26A5DE00F216976732A12FFA4336 kPPPAsyncMapCharsNone;
$2CFF26A5DE00F216976732A12FFA4336 kPPPAsyncMapCharsXOnXOff;
$2B07577E37C77A79992F4495009860B8 kPPPAuthenticationFinishedEvent;
$2B07577E37C77A79992F4495009860B8 kPPPAuthenticationStartedEvent;
$E07EAC005D8330B12DC1B5AF07AA6AD3 kPPPCHAPOrPAPOutAuthentication;
$9DAD23F7BB08B2345DA10465F39C7433 kPPPCompressionDisabled;
$2B07577E37C77A79992F4495009860B8 kPPPConnectCompleteEvent;
$AD2245E410F1AFE0166A0410156B5CA4 kPPPConnectionFlashingIconFlag;
$AD2245E410F1AFE0166A0410156B5CA4 kPPPConnectionRemindersFlag;
$912A44DD26E5726366A36950911A19AD kPPPConnectionStatusConnected;
$912A44DD26E5726366A36950911A19AD kPPPConnectionStatusConnecting;
$AD2245E410F1AFE0166A0410156B5CA4 kPPPConnectionStatusDialogsFlag;
$912A44DD26E5726366A36950911A19AD kPPPConnectionStatusDisconnecting;
$912A44DD26E5726366A36950911A19AD kPPPConnectionStatusIdle;
$2B07577E37C77A79992F4495009860B8 kPPPDCECallFinishedEvent;
$2B07577E37C77A79992F4495009860B8 kPPPDCECallStartedEvent;
$2B07577E37C77A79992F4495009860B8 kPPPDCEInitFinishedEvent;
$2B07577E37C77A79992F4495009860B8 kPPPDCEInitStartedEvent;
$2B07577E37C77A79992F4495009860B8 kPPPDisconnectCompleteEvent;
$2B07577E37C77A79992F4495009860B8 kPPPDisconnectEvent;
$2B07577E37C77A79992F4495009860B8 kPPPEvent;
$2B07577E37C77A79992F4495009860B8 kPPPIPCPDownEvent;
$2B07577E37C77A79992F4495009860B8 kPPPIPCPUpEvent;
$2B07577E37C77A79992F4495009860B8 kPPPLCPDownEvent;
$2B07577E37C77A79992F4495009860B8 kPPPLCPUpEvent;
$2B07577E37C77A79992F4495009860B8 kPPPLowerLayerDownEvent;
$2B07577E37C77A79992F4495009860B8 kPPPLowerLayerUpEvent;
$28A98E62B77DF7F5CDA3C3FA5C6F699A kPPPMaxCallInfoLength;
$28A98E62B77DF7F5CDA3C3FA5C6F699A kPPPMaxDTEAddressLength;
$28A98E62B77DF7F5CDA3C3FA5C6F699A kPPPMaxIDLength;
$1935162A0C8E71E1CEFD0799A4C004A5 kPPPMaxMRU;
$28A98E62B77DF7F5CDA3C3FA5C6F699A kPPPMaxPasswordLength;
$B99F3C110282DAEAA24760569BE1674D kPPPMaxScriptSize;
$1935162A0C8E71E1CEFD0799A4C004A5 kPPPMinMRU;
$E07EAC005D8330B12DC1B5AF07AA6AD3 kPPPNoOutAuthentication;
$AD2245E410F1AFE0166A0410156B5CA4 kPPPOutPasswordDialogsFlag;
$9DAD23F7BB08B2345DA10465F39C7433 kPPPProtoCompression;
$B99F3C110282DAEAA24760569BE1674D kPPPScriptTypeConnect;
$B99F3C110282DAEAA24760569BE1674D kPPPScriptTypeModem;
$2B07577E37C77A79992F4495009860B8 kPPPSetScriptCompleteEvent;
$FA8E269166550BB1DAFBEFD5A55142DE kPPPStateClosed;
$FA8E269166550BB1DAFBEFD5A55142DE kPPPStateClosing;
$FA8E269166550BB1DAFBEFD5A55142DE kPPPStateInitial;
$FA8E269166550BB1DAFBEFD5A55142DE kPPPStateOpened;
$FA8E269166550BB1DAFBEFD5A55142DE kPPPStateOpening;
$55E5252D84E6F1A48D581BACE889D526 kPRIVATEEVENT;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPALDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPANDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPBNDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPCSDirectionClass;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPCanHangLTMask;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPCanHangRBMask;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPCurrentVersion;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPDirectionMask;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPENDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPESDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPETDirectionClass;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPIsFloaterMask;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPLDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPLREDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPLRODirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPNSMDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPNumDirectionClasses;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPONDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPPDFDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPPSDirectionClass;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPPairOffsetMask;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPPairOffsetShift;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPPairOffsetSign;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPRDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPRLEDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPRLODirectionClass;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPRightConnectMask;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPSDirectionClass;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPSENDirectionClass;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPTag;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPUseRLPairMask;
$996F6F5F46E934F8DE40B7A8C6153D54 kPROPWSDirectionClass;
$9ABB0B5B8FD05332BF62F1F9DF62AAA6 kPROPZeroReserved;
$55E5252D84E6F1A48D581BACE889D526 kPROTOCOLEVENT;
$9F6648E2B1A7DDA3AD4AB82BD3C7C30B kPSInjectionAfterSubsection;
$9F6648E2B1A7DDA3AD4AB82BD3C7C30B kPSInjectionBeforeSubsection;
$D89C96938957AB7478D137974DFD7A93 kPSInjectionMaxDictSize;
$9F6648E2B1A7DDA3AD4AB82BD3C7C30B kPSInjectionReplaceSubsection;
$D89C96938957AB7478D137974DFD7A93 kPSPageInjectAllPages;
$CED1243A6D8675D23AA26E362B2F2329 kPackageAliasType;
$40B1D294FCB105E6FD797FB89EF6F7A3 kPageDownCharCode;
$03C7596D374A2A209ABB61D96A299AF7 kPageInMemory;
$E3F86C994683B5201AB2EEB95C4474D7 kPageInformationVersion;
$0AF62E8442B36053051B924312B6350D kPageIsCopyBackCached;
$0AF62E8442B36053051B924312B6350D kPageIsHeldResident;
$0AF62E8442B36053051B924312B6350D kPageIsInMemory;
$0AF62E8442B36053051B924312B6350D kPageIsLocked;
$0AF62E8442B36053051B924312B6350D kPageIsLockedResident;
$0AF62E8442B36053051B924312B6350D kPageIsModified;
$0AF62E8442B36053051B924312B6350D kPageIsProtected;
$0AF62E8442B36053051B924312B6350D kPageIsProtectedPrivileged;
$0AF62E8442B36053051B924312B6350D kPageIsReferenced;
$0AF62E8442B36053051B924312B6350D kPageIsResident;
$0AF62E8442B36053051B924312B6350D kPageIsShared;
$0AF62E8442B36053051B924312B6350D kPageIsWriteThroughCached;
$03C7596D374A2A209ABB61D96A299AF7 kPageOnDisk;
$40B1D294FCB105E6FD797FB89EF6F7A3 kPageUpCharCode;
$9697D2C626758E212899500537321E1C kPagingMixer;
$A2A3B97015A39488E2F6B427ADE8C31C kPanelConnect;
$A2A3B97015A39488E2F6B427ADE8C31C kPanelFSTNConnect;
$A2A3B97015A39488E2F6B427ADE8C31C kPanelTFTConnect;
$F401D567E4FBF51362F158484CD5534B kParenthesisAnnotationSelector;
$E8A1810B7AC84F453CCC5F003130BDCA kPartiallyConnectedSelector;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsAllocated;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsBootCodePositionIndependent;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsBootValid;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsInUse;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsReadable;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsValid;
$4234293FB16065540C47012460DC8B09 kPartitionAUXIsWriteable;
$4234293FB16065540C47012460DC8B09 kPartitionCanChainToNext;
$4234293FB16065540C47012460DC8B09 kPartitionIsChainCompatible;
$4234293FB16065540C47012460DC8B09 kPartitionIsMountedAtStartup;
$4234293FB16065540C47012460DC8B09 kPartitionIsRealDeviceDriver;
$4234293FB16065540C47012460DC8B09 kPartitionIsStartup;
$4234293FB16065540C47012460DC8B09 kPartitionIsWriteable;
$768C2AF2BA4795B0EBD762573A709F14 kPascalStackBased;
$956E0F8638627E2D7345301BF56E48D3 kPassCallToChainErr;
$7411B45F00DD23CFB56499B7DA25AE62 kPassSelector;
$51D9C7A66E27CF37B82E1BF57C19CF25 kPassThrough;
$882ADC82034244AFFE570DD57A3BB1C0 kPassword;
$6D0E186233145241771508AFE8C2C7D5 kPasswordChangedKCEvent;
$39FE76983533385EB60014D19059B326 kPasswordChangedKCEventMask;
$DCE09C5AC8576D753F0EFEA779280476 kPasswordModeTag;
$9F707DA49AEE530950ED92E064F04046 kPatchDriverSignature;
$5B004150561D8A57B6AEE998E4910F58 kPathKCItemAttr;
$A1E1BAD5B418D85708692C2D8BF7B43D kPencilUnicode;
$F401D567E4FBF51362F158484CD5534B kPeriodAnnotationSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kPeriodsToEllipsisOffSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kPeriodsToEllipsisOnSelector;
$4693F9F93A5130D57E44F485B4108586 kPhilipsFaderSubType;
$F68E41BB552C03507046AA3FD69AAB17 kPhoneAddress;
$A7575B3039476EA3F1C1D03F2499B38C kPiCharactersSelector;
$333B154C3EB4D8DDCA6A976D4C3734A3 kPictureDialogItem;
$CC091832F316327152ED0A035D8C4D44 kPictureDocumentsFolderType;
$99DF324053748CE0F00F82D255EBBBC6 kPlainDialogVariantCode;
$B95EEEF8D0A9C3F124CECCB9E5363575 kPlainWindowClass;
$6709780A9A108E3FB6C67F5A0F4FCC0B kPlatformDefaultGuiFontID;
$83D7C57A8841AEE511044DD0C1855C26 kPlotIconRefNoImage;
$83D7C57A8841AEE511044DD0C1855C26 kPlotIconRefNoMask;
$83D7C57A8841AEE511044DD0C1855C26 kPlotIconRefNormalFlags;
$87A5FEEFCB001713CA7CFFFC80C61561 kPolicyKCStopOn;
$55E5252D84E6F1A48D581BACE889D526 kPollEvent;
$5B004150561D8A57B6AEE998E4910F58 kPortKCItemAttr;
$0CE592B5184B238B16AB67F4BE1A6C98 kPos2Offset;
$956E0F8638627E2D7345301BF56E48D3 kPostCardEventErr;
$58B7B25FE359A5DE8E99FA27EE656A12 kPowerHandlerExistsForDeviceErr;
$58B7B25FE359A5DE8E99FA27EE656A12 kPowerHandlerNotFoundForDeviceErr;
$58B7B25FE359A5DE8E99FA27EE656A12 kPowerHandlerNotFoundForProcErr;
$35AB7496AFDF131FB91D3029C8F3C096 kPowerManagementCommand;
$58B7B25FE359A5DE8E99FA27EE656A12 kPowerMgtMessageNotHandled;
$58B7B25FE359A5DE8E99FA27EE656A12 kPowerMgtRequestDenied;
$3F276722A2E8F4E6CD71B44DCDB8D721 kPowerPCCFragArch;
$8ED842F5F25F9C1991A7C4338A0B924C kPowerPCISA;
$09A44E9A6AD8D0F1C197FC7AFB8D211E kPowerPCRTA;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateNeedsRefresh;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateNeedsRefreshMask;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepAwareBit;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepAwareMask;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepCanPowerOffBit;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepCanPowerOffMask;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepForbiddenBit;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepForbiddenMask;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepNoDPMSBit;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepNoDPMSMask;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepWaketoDozeBit;
$C42C4A5D14F8AD8C1C2600D58AF728D5 kPowerStateSleepWaketoDozeMask;
$DB76DB9A82AAC104AC2A50F15626D709 kPowerSummaryVersion;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91AppleExtrasFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91ApplicationsFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91AssistantsFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91AutomountedServersFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91InstallerLogsFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91InternetFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91MacOSReadMesFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91StationeryFolderType;
$661EE15A02C8CBEFD46092C92494158F kPreMacOS91UtilitiesFolderType;
$E68877BB40C38A07990A1C21F90F1D08 kPreemptiveThread;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kPreferencesFolderAliasType;
$5159DF5F69DB4B07E5314ED3C5415015 kPreferencesFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kPreferencesFolderIconResource;
$191BACAFE1C79A4AFD6F08B231C40E86 kPreferencesFolderType;
$AD43285D6E4DEFBA73FD65EE449C3B60 kPreflightThenPause;
$0008B39AB15B7D6E65BF866F4CBA48D1 kPreventOverlapOffSelector;
$0008B39AB15B7D6E65BF866F4CBA48D1 kPreventOverlapOnSelector;
$444A07D61DE1E75232BD6F04707296FB kPreviousBody;
$D059E35DD7AB8AD47A6785A5C99147B0 kPreviousWindowGroup;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kPrintMonitorDocsFolderAliasType;
$191BACAFE1C79A4AFD6F08B231C40E86 kPrintMonitorDocsFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kPrintMonitorFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kPrintMonitorFolderIconResource;
$5159DF5F69DB4B07E5314ED3C5415015 kPrinterDescriptionFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kPrinterDescriptionFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kPrinterDriverFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kPrinterDriverFolderType;
$3CDEA35590208308078B0E0954111046 kPrinterFontStatus;
$3CDEA35590208308078B0E0954111046 kPrinterScalingStatus;
$CC091832F316327152ED0A035D8C4D44 kPrintersFolderType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kPrintingPlugInsFolderType;
$483E08ACD0405BD46DDCE6B6B744F2B4 kPrivateCFragCopy;
$121E1AC3EB6A789387393DDCCEF5B35F kPrivateFolderIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kPrivateFolderIconResource;
$CC091832F316327152ED0A035D8C4D44 kPrivateFrameworksFolderType;
$1AC1C93A58AB6CB66948DE5864455995 kPrivilegeViolationException;
$FF149E7A3D2CD7C0D6D90DAB531DE183 kProcDescriptorIsAbsolute;
$C813F1F26BE519358A0DF791508EEF60 kProcDescriptorIsIndex;
$C813F1F26BE519358A0DF791508EEF60 kProcDescriptorIsProcPtr;
$FF149E7A3D2CD7C0D6D90DAB531DE183 kProcDescriptorIsRelative;
$C60A49EC3BD0B40FE93D5BEC81287912 kProcessDictionaryIncludeAllInformationMask;
$2B948946B8DF86DAE9837629489BD9DD kProcessorCacheModeCopyBack;
$2B948946B8DF86DAE9837629489BD9DD kProcessorCacheModeDefault;
$2B948946B8DF86DAE9837629489BD9DD kProcessorCacheModeInhibited;
$2B948946B8DF86DAE9837629489BD9DD kProcessorCacheModeWriteThrough;
$58B7B25FE359A5DE8E99FA27EE656A12 kProcessorTempRoutineRequiresMPLib2;
$E31D1D986D7A2398F5BE58D621867533 kProportionalCJKRomanSelector;
$71E191EDC33909E003A3BACB6AB04ABE kProportionalIdeographsSelector;
$720CB6D0B7D8CF744704B19C2BA63CFE kProportionalKanaSelector;
$7FF46A4D5ACD435A7CB860BE80C6C9C7 kProportionalNumbersSelector;
$B70B70D55F7ADAC1B4115BB8A43A6B45 kProportionalTextSelector;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kProtectedApplicationFolderIcon;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kProtectedSystemFolderIcon;
$5B004150561D8A57B6AEE998E4910F58 kProtocolKCItemAttr;
$DCE09C5AC8576D753F0EFEA779280476 kProtocolVersionTag;
$5159DF5F69DB4B07E5314ED3C5415015 kPublicFolderIcon;
$CC091832F316327152ED0A035D8C4D44 kPublicFolderType;
$5B004150561D8A57B6AEE998E4910F58 kPublicKeyHashKCItemAttr;
$8794BA5983E2316F888D4CF4CAC4BE89 kPublicThemeFontCount;
$1BDC573074FE939541AFD13DBE1EDBCA kQDCorruptPICTDataErr;
$1BDC573074FE939541AFD13DBE1EDBCA kQDCursorAlreadyRegistered;
$1BDC573074FE939541AFD13DBE1EDBCA kQDCursorNotRegistered;
$47105DBF39371DF274357F6B8BC491F0 kQDDontChangeFlags;
$D6D88E7A02EE454A9B3A501D522859DA kQDGrafVerbErase;
$D6D88E7A02EE454A9B3A501D522859DA kQDGrafVerbFill;
$D6D88E7A02EE454A9B3A501D522859DA kQDGrafVerbFrame;
$D6D88E7A02EE454A9B3A501D522859DA kQDGrafVerbInvert;
$D6D88E7A02EE454A9B3A501D522859DA kQDGrafVerbPaint;
$1BDC573074FE939541AFD13DBE1EDBCA kQDNoColorHWCursorSupport;
$1BDC573074FE939541AFD13DBE1EDBCA kQDNoPalette;
$CDA55719D6FF9C563B002E087AC98490 kQDParseRegionFromBottom;
$CDA55719D6FF9C563B002E087AC98490 kQDParseRegionFromBottomRight;
$CDA55719D6FF9C563B002E087AC98490 kQDParseRegionFromLeft;
$CDA55719D6FF9C563B002E087AC98490 kQDParseRegionFromRight;
$CDA55719D6FF9C563B002E087AC98490 kQDParseRegionFromTop;
$CDA55719D6FF9C563B002E087AC98490 kQDParseRegionFromTopLeft;
$0F96118CB397B5D99E97DDB1A09789D7 kQDRegionToRectsMsgInit;
$0F96118CB397B5D99E97DDB1A09789D7 kQDRegionToRectsMsgParse;
$0F96118CB397B5D99E97DDB1A09789D7 kQDRegionToRectsMsgTerminate;
$47105DBF39371DF274357F6B8BC491F0 kQDSupportedFlags;
$47105DBF39371DF274357F6B8BC491F0 kQDUseCGTextMetrics;
$47105DBF39371DF274357F6B8BC491F0 kQDUseCGTextRendering;
$47105DBF39371DF274357F6B8BC491F0 kQDUseDefaultTextRendering;
$47105DBF39371DF274357F6B8BC491F0 kQDUseTrueTypeScalerGlyphs;
$18BF411237F175ABCD4A1D90A0B1F6B7 kQDesign2Compression;
$18BF411237F175ABCD4A1D90A0B1F6B7 kQDesignCompression;
$22B2FB9A5DF6718F0712D8A5DC528A5D kQTSSUnknownErr;
$18BF411237F175ABCD4A1D90A0B1F6B7 kQUALCOMMCompression;
$7FF46A4D5ACD435A7CB860BE80C6C9C7 kQuarterWidthNumbersSelector;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kQuestionMarkIcon;
$CC091832F316327152ED0A035D8C4D44 kQuickTimeComponentsFolderType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kQuickTimeExtensionsFolderType;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitAtNormalTimeMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitBeforeFBAsQuitMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitBeforeNormalTimeMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitBeforeShellQuitsMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitBeforeTerminatorAppQuitsMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitNeverMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitNotQuitDuringInstallMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitNotQuitDuringLogoutMask;
$B449D3E7FDE7A6CD7CCD4326910441FD kQuitOptionsMask;
$A473548BCCF965826768B8BAE54D36CA kRAATalkInactive;
$A473548BCCF965826768B8BAE54D36CA kRACallBackFailed;
$A473548BCCF965826768B8BAE54D36CA kRAConfigurationDBInitErr;
$A473548BCCF965826768B8BAE54D36CA kRAConnectionCanceled;
$A473548BCCF965826768B8BAE54D36CA kRADuplicateIPAddr;
$A473548BCCF965826768B8BAE54D36CA kRAExtAuthenticationFailed;
$A473548BCCF965826768B8BAE54D36CA kRAIncompatiblePrefs;
$A473548BCCF965826768B8BAE54D36CA kRAInitOpenTransportFailed;
$A473548BCCF965826768B8BAE54D36CA kRAInstallationDamaged;
$A473548BCCF965826768B8BAE54D36CA kRAInternalError;
$A473548BCCF965826768B8BAE54D36CA kRAInvalidParameter;
$A473548BCCF965826768B8BAE54D36CA kRAInvalidPassword;
$A473548BCCF965826768B8BAE54D36CA kRAInvalidPort;
$A473548BCCF965826768B8BAE54D36CA kRAInvalidPortState;
$A473548BCCF965826768B8BAE54D36CA kRAInvalidSerialProtocol;
$A473548BCCF965826768B8BAE54D36CA kRAMissingResources;
$A473548BCCF965826768B8BAE54D36CA kRANCPRejectedbyPeer;
$A473548BCCF965826768B8BAE54D36CA kRANotConnected;
$A473548BCCF965826768B8BAE54D36CA kRANotEnabled;
$A473548BCCF965826768B8BAE54D36CA kRANotPrimaryInterface;
$A473548BCCF965826768B8BAE54D36CA kRANotSupported;
$A473548BCCF965826768B8BAE54D36CA kRAOutOfMemory;
$A473548BCCF965826768B8BAE54D36CA kRAPPPAuthenticationFailed;
$A473548BCCF965826768B8BAE54D36CA kRAPPPNegotiationFailed;
$A473548BCCF965826768B8BAE54D36CA kRAPPPPeerDisconnected;
$A473548BCCF965826768B8BAE54D36CA kRAPPPProtocolRejected;
$A473548BCCF965826768B8BAE54D36CA kRAPPPUserDisconnected;
$A473548BCCF965826768B8BAE54D36CA kRAPeerNotResponding;
$A473548BCCF965826768B8BAE54D36CA kRAPortBusy;
$A473548BCCF965826768B8BAE54D36CA kRAPortSetupFailed;
$1DE605192E4D96AF3D660863867CF8CB kRAProductClientOnly;
$1DE605192E4D96AF3D660863867CF8CB kRAProductManyPortServer;
$1DE605192E4D96AF3D660863867CF8CB kRAProductOnePortServer;
$A473548BCCF965826768B8BAE54D36CA kRARemoteAccessNotReady;
$A473548BCCF965826768B8BAE54D36CA kRAStartupFailed;
$A473548BCCF965826768B8BAE54D36CA kRATCPIPInactive;
$A473548BCCF965826768B8BAE54D36CA kRATCPIPNotConfigured;
$A473548BCCF965826768B8BAE54D36CA kRAUnknownPortState;
$A473548BCCF965826768B8BAE54D36CA kRAUnknownUser;
$A473548BCCF965826768B8BAE54D36CA kRAUserInteractionRequired;
$A473548BCCF965826768B8BAE54D36CA kRAUserLoginDisabled;
$A473548BCCF965826768B8BAE54D36CA kRAUserPwdChangeRequired;
$A473548BCCF965826768B8BAE54D36CA kRAUserPwdEntryRequired;
$1C119E9720855ADE2B421A854DBE867A kRCAInSource;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCFive;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCFour;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCOne;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCSeven;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCSix;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCThree;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCTwo;
$E27EEBAAA829E37A500AF84D546B2A71 kRSCZero;
$333B154C3EB4D8DDCA6A976D4C3734A3 kRadioButtonDialogItem;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsCompositeSyncBit;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsCompositeSyncMask;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsSeperateSyncsBit;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsSeperateSyncsMask;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_0700_0000_Bit;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_0700_0000_Mask;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_0700_0300_Bit;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_0700_0300_Mask;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_0714_0286_Bit;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_0714_0286_Mask;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_1000_0400_Bit;
$85891A6AD796625CB2196D0F7A27D9D5 kRangeSupportsSignal_1000_0400_Mask;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsSyncOnGreenBit;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsSyncOnGreenMask;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsVSyncSerrationBit;
$1F9B51F770852AD4761AFC863EC448E8 kRangeSupportsVSyncSerrationMask;
$C5158E5C8936F0DF706C0A4969EDE653 kRareLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kRareLigaturesOnSelector;
$4693F9F93A5130D57E44F485B4108586 kRate16SubType;
$4693F9F93A5130D57E44F485B4108586 kRate8SubType;
$56EDAB68D3F8BADD4C371F358805869C kRateConvert;
$A261E92C82250443DCF4E199E1935CB2 kRawText;
$4D69FABCE705531C69E170010556914A kRdPermKCStatus;
$009AA9BCCC426E323765130C670B7B3B kReadCommand;
$D61A0E8D2A92D56697A38D00076C3049 kReadExtensionTermsMask;
$956E0F8638627E2D7345301BF56E48D3 kReadFailureErr;
$DCE09C5AC8576D753F0EFEA779280476 kReadOnlyDocumentTag;
$1AC1C93A58AB6CB66948DE5864455995 kReadOnlyMemoryException;
$1AFD37A731F3A62F7A5D2B51D317DBED kReadReference;
$A788D73B1051A86ACDAA839045FF5F42 kReadyThreadState;
$C5158E5C8936F0DF706C0A4969EDE653 kRebusPicturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kRebusPicturesOnSelector;
$5159DF5F69DB4B07E5314ED3C5415015 kRecentApplicationsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kRecentApplicationsFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kRecentDocumentsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kRecentDocumentsFolderType;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kRecentItemsIcon;
$5159DF5F69DB4B07E5314ED3C5415015 kRecentServersFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kRecentServersFolderType;
$E41B128A1A45C863396F0E220EE3AE13 kRedrawHighlighting;
$DCE09C5AC8576D753F0EFEA779280476 kRefconTag;
$483E08ACD0405BD46DDCE6B6B744F2B4 kReferenceCFrag;
$981D6C735318426982A7764AE9136690 kRegCStrMaxEntryNameLength;
$E3B4B94A348C69CF2FE26939FFEF37EC kRegEntryNameTerminator;
$02CAFC09A84EE96D576CA23379571E24 kRegIterChildren;
$02CAFC09A84EE96D576CA23379571E24 kRegIterContinue;
$02CAFC09A84EE96D576CA23379571E24 kRegIterDescendants;
$02CAFC09A84EE96D576CA23379571E24 kRegIterParents;
$02CAFC09A84EE96D576CA23379571E24 kRegIterRoot;
$02CAFC09A84EE96D576CA23379571E24 kRegIterSibling;
$02CAFC09A84EE96D576CA23379571E24 kRegIterSubTrees;
$6C487229975B5749CBD06449A2E46080 kRegMaxPropertyNameLength;
$E89CF9843758FE93AF4DC28B513675D8 kRegMaximumPropertyNameLength;
$057EFA912681033381B618845003773A kRegModifierMask;
$057EFA912681033381B618845003773A kRegNameSpaceModifierMask;
$057EFA912681033381B618845003773A kRegNoModifiers;
$E3B4B94A348C69CF2FE26939FFEF37EC kRegPathNameSeparator;
$E3B4B94A348C69CF2FE26939FFEF37EC kRegPathNameTerminator;
$E89CF9843758FE93AF4DC28B513675D8 kRegPropertyNameTerminator;
$0178FDEBD121719EC674446BBBBE04D2 kRegPropertyValueIsSavedToDisk;
$0178FDEBD121719EC674446BBBBE04D2 kRegPropertyValueIsSavedToNVRAM;
$057EFA912681033381B618845003773A kRegUniversalModifierMask;
$14D42046BADA2A578DB7A6526353A20A kRegisterA0;
$14D42046BADA2A578DB7A6526353A20A kRegisterA1;
$14D42046BADA2A578DB7A6526353A20A kRegisterA2;
$14D42046BADA2A578DB7A6526353A20A kRegisterA3;
$14D42046BADA2A578DB7A6526353A20A kRegisterA4;
$14D42046BADA2A578DB7A6526353A20A kRegisterA5;
$14D42046BADA2A578DB7A6526353A20A kRegisterA6;
$768C2AF2BA4795B0EBD762573A709F14 kRegisterBased;
$14D42046BADA2A578DB7A6526353A20A kRegisterD0;
$14D42046BADA2A578DB7A6526353A20A kRegisterD1;
$14D42046BADA2A578DB7A6526353A20A kRegisterD2;
$14D42046BADA2A578DB7A6526353A20A kRegisterD3;
$14D42046BADA2A578DB7A6526353A20A kRegisterD4;
$14D42046BADA2A578DB7A6526353A20A kRegisterD5;
$14D42046BADA2A578DB7A6526353A20A kRegisterD6;
$14D42046BADA2A578DB7A6526353A20A kRegisterD7;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterMask;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterPhase;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterSizePhase;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterSizeWidth;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterWhichPhase;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterWhichWidth;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterParameterWidth;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterResultLocationPhase;
$BEE4F9FA55F124848F5583F92B764A21 kRegisterResultLocationWidth;
$99AABAE3110A89687340939D494AE5DE kRelativeFolder;
$C61609BB0F455BF0C49EDE98D48A29D1 kReleaseRecoveryMsg;
$58030CB495C0F1442001624CD349E98E kRemoveDisplayBit;
$56D75E7A780E35730F4E5F64B02F61C9 kRenderCursorInHardware;
$56D75E7A780E35730F4E5F64B02F61C9 kRenderCursorInSoftware;
$3FB13912521DC7691276ED8083575A20 kReplace;
$009AA9BCCC426E323765130C670B7B3B kReplaceCommand;
$5CDB6810CF5FAA70771C826E258B46A2 kReportsDDCConnection;
$5CDB6810CF5FAA70771C826E258B46A2 kReportsHotPlugging;
$5CDB6810CF5FAA70771C826E258B46A2 kReportsTagging;
$C5158E5C8936F0DF706C0A4969EDE653 kRequiredLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kRequiredLigaturesOnSelector;
$7DDBDC34E1008FF23F3F060DC51405F3 kResFileNotOpened;
$BD1359E02033B0EA164E279161AA9D4C kResolutionHasMultipleDepthSizes;
$EEA86199887F19AE81FC28C572006203 kResolveAliasFileNoUI;
$EEA86199887F19AE81FC28C572006203 kResolveAliasTryFileIDFirst;
$EE9F227ECBAF3C576752B1D10972453B kResourceCFragLocator;
$333B154C3EB4D8DDCA6A976D4C3734A3 kResourceControlDialogItem;
$C61609BB0F455BF0C49EDE98D48A29D1 kRestorePointersMsg;
$BEE4F9FA55F124848F5583F92B764A21 kResultSizeMask;
$BEE4F9FA55F124848F5583F92B764A21 kResultSizePhase;
$BEE4F9FA55F124848F5583F92B764A21 kResultSizeWidth;
$009AA9BCCC426E323765130C670B7B3B kResumeCommand;
$40B1D294FCB105E6FD797FB89EF6F7A3 kReturnCharCode;
$4B1D9FE243A502F122BF86EDB061F24B kReturnNextGroup;
$4B1D9FE243A502F122BF86EDB061F24B kReturnNextUG;
$4B1D9FE243A502F122BF86EDB061F24B kReturnNextUser;
$71CB72A305975FE50FDAB955C5C96550 kReturnToParentWhenComplete;
$71CB72A305975FE50FDAB955C5C96550 kReturnToParentWhenNotComplete;
$56EDAB68D3F8BADD4C371F358805869C kReverse;
$40B1D294FCB105E6FD797FB89EF6F7A3 kRightArrowCharCode;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kRightContainerArrowIcon;
$708FD1D4D9C103B15DFAB8530761D95D kRightToLeft;
$0FA8C27A3576B43468EA81A201B45E80 kRolloverIconVariant;
$F401D567E4FBF51362F158484CD5534B kRomanNumeralAnnotationSelector;
$EBF6D2B8724BD6268E803B35A76B996A kRomanizationToHiraganaSelector;
$EBF6D2B8724BD6268E803B35A76B996A kRomanizationToKatakanaSelector;
$1F1399ED5159CECEAB296D7B29DF3378 kRootFolder;
$48581DA6325892AC46A0B2E89C776E96 kRotateImage;
$1FB17526987ED6BB45FECECD371E831D kRoundWindowDefinition;
$F401D567E4FBF51362F158484CD5534B kRoundedBoxAnnotationSelector;
$E30EBAE736DEE4CC0A60B7E570935BBF kRoutineDescriptorVersion;
$FDE86E5071FB673B00044FA8D1710931 kRoutineIsDispatchedDefaultRoutine;
$FDE86E5071FB673B00044FA8D1710931 kRoutineIsNotDispatchedDefaultRoutine;
$F101F89CCECDAAAE49212AFC2C221133 kRoutingResourceID;
$F101F89CCECDAAAE49212AFC2C221133 kRoutingResourceType;
$264C6666AFAF7C7FABEA8336AC845B52 kRsrcChainAboveAllMaps;
$264C6666AFAF7C7FABEA8336AC845B52 kRsrcChainAboveApplicationMap;
$264C6666AFAF7C7FABEA8336AC845B52 kRsrcChainBelowApplicationMap;
$264C6666AFAF7C7FABEA8336AC845B52 kRsrcChainBelowSystemMap;
$985F992E9650E084E30EB5752888702D kRubyKanaSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kRubyKanaType;
$A788D73B1051A86ACDAA839045FF5F42 kRunningThreadState;
$9F707DA49AEE530950ED92E064F04046 kSCSICDDriverSignature;
$9F707DA49AEE530950ED92E064F04046 kSCSIDriverSignature;
$513B405423945CF401E49CF53D13D9E3 kSFNTLookupSegmentArray;
$513B405423945CF401E49CF53D13D9E3 kSFNTLookupSegmentSingle;
$513B405423945CF401E49CF53D13D9E3 kSFNTLookupSimpleArray;
$513B405423945CF401E49CF53D13D9E3 kSFNTLookupSingleTable;
$513B405423945CF401E49CF53D13D9E3 kSFNTLookupTrimmedArray;
$4693F9F93A5130D57E44F485B4108586 kSGSToneSubType;
$2BB7EB5F01DFBF52A43AE4F88416DCD3 kSIGHUP;
$55E5252D84E6F1A48D581BACE889D526 kSIGNALEVENT;
$2BB7EB5F01DFBF52A43AE4F88416DCD3 kSIGPOLL;
$2BB7EB5F01DFBF52A43AE4F88416DCD3 kSIGURG;
$7F3E7E1AB57D7076B1F8652C10AC5339 kSIHAcceptFunctionLevel;
$9F8FC170A2058B1BE0534DB43DF06411 kSNAPSAP;
$D78175D5FA93BA5A5A41F540208FB306 kSOAP1999Schema;
$D78175D5FA93BA5A5A41F540208FB306 kSOAP2001Schema;
$191B4889AB7D77DFE0E42C2C59A17798 kSOCKS5NoAcceptableMethod;
$02036559715AB1A087744DDD541D50D3 kSRAlreadyFinished;
$02036559715AB1A087744DDD541D50D3 kSRAlreadyListening;
$02036559715AB1A087744DDD541D50D3 kSRAlreadyReleased;
$2B635558B2017DCAD703B8CE85A88DC0 kSRAutoFinishingParam;
$02036559715AB1A087744DDD541D50D3 kSRBadParameter;
$02036559715AB1A087744DDD541D50D3 kSRBadSelector;
$2B635558B2017DCAD703B8CE85A88DC0 kSRBlockBackground;
$2B635558B2017DCAD703B8CE85A88DC0 kSRBlockModally;
$02036559715AB1A087744DDD541D50D3 kSRBufferTooSmall;
$2B635558B2017DCAD703B8CE85A88DC0 kSRCallBackParam;
$2B635558B2017DCAD703B8CE85A88DC0 kSRCancelOnSoundOut;
$2B19AFD6F09FF083E377A3C8585D38E2 kSRCanned22kHzSpeechSource;
$02036559715AB1A087744DDD541D50D3 kSRCantAdd;
$02036559715AB1A087744DDD541D50D3 kSRCantGetProperty;
$02036559715AB1A087744DDD541D50D3 kSRCantReadLanguageObject;
$02036559715AB1A087744DDD541D50D3 kSRCantSetDuringRecognition;
$02036559715AB1A087744DDD541D50D3 kSRCantSetProperty;
$D320BD8CD41F75B4BC04A132F524DD4E kSRCleanupOnClientExit;
$02036559715AB1A087744DDD541D50D3 kSRComponentNotFound;
$F730FAB09A901A6BD3C6C36A98E90244 kSRDefaultRecognitionSystemID;
$62FCE714623391C3F3014841CB02C65B kSRDefaultRejectionLevel;
$2B19AFD6F09FF083E377A3C8585D38E2 kSRDefaultSpeechSource;
$E4F59445C46E084EB9967529BE2D8AB0 kSREnabled;
$02036559715AB1A087744DDD541D50D3 kSRExpansionTooDeep;
$D320BD8CD41F75B4BC04A132F524DD4E kSRFeedbackAndListeningModes;
$02036559715AB1A087744DDD541D50D3 kSRFeedbackNotAvail;
$2B635558B2017DCAD703B8CE85A88DC0 kSRForegroundOnly;
$064537A60C27CDC16FC064DC103046D6 kSRHasFeedbackHasListenModes;
$02036559715AB1A087744DDD541D50D3 kSRHasNoSubItems;
$25E5A8C57458CA4919911E5850D0E7C5 kSRIdleRecognizer;
$02036559715AB1A087744DDD541D50D3 kSRInternalError;
$7C3397D50CB4377F37C78B3C3B440826 kSRKeyExpected;
$7C3397D50CB4377F37C78B3C3B440826 kSRKeyWord;
$E4F59445C46E084EB9967529BE2D8AB0 kSRLMObjType;
$924240654B70A2FED4660CE9A6C959E3 kSRLanguageModelFormat;
$02036559715AB1A087744DDD541D50D3 kSRLanguageModelTooBig;
$D96DFE59C46805AEB5E237BA4555A605 kSRLanguageModelType;
$7C3397D50CB4377F37C78B3C3B440826 kSRListenKeyCombo;
$7C3397D50CB4377F37C78B3C3B440826 kSRListenKeyMode;
$7C3397D50CB4377F37C78B3C3B440826 kSRListenKeyName;
$2B19AFD6F09FF083E377A3C8585D38E2 kSRLiveDesktopSpeechSource;
$02036559715AB1A087744DDD541D50D3 kSRModelMismatch;
$25E5A8C57458CA4919911E5850D0E7C5 kSRMustCancelSearch;
$02036559715AB1A087744DDD541D50D3 kSRNoClientLanguageModel;
$064537A60C27CDC16FC064DC103046D6 kSRNoFeedbackHasListenModes;
$064537A60C27CDC16FC064DC103046D6 kSRNoFeedbackNoListenModes;
$02036559715AB1A087744DDD541D50D3 kSRNoPendingUtterances;
$02036559715AB1A087744DDD541D50D3 kSRNotARecSystem;
$02036559715AB1A087744DDD541D50D3 kSRNotASpeechObject;
$02036559715AB1A087744DDD541D50D3 kSRNotAvailable;
$02036559715AB1A087744DDD541D50D3 kSRNotFinishedWithRejection;
$02036559715AB1A087744DDD541D50D3 kSRNotImplementedYet;
$02036559715AB1A087744DDD541D50D3 kSRNotListeningState;
$2B635558B2017DCAD703B8CE85A88DC0 kSRNotificationParam;
$ECB220F9253C5E7971E4094763A3A0A3 kSRNotifyRecognitionBeginning;
$ECB220F9253C5E7971E4094763A3A0A3 kSRNotifyRecognitionDone;
$E4F59445C46E084EB9967529BE2D8AB0 kSROptional;
$02036559715AB1A087744DDD541D50D3 kSROtherRecAlreadyModal;
$02036559715AB1A087744DDD541D50D3 kSROutOfMemory;
$02036559715AB1A087744DDD541D50D3 kSRParamOutOfRange;
$924240654B70A2FED4660CE9A6C959E3 kSRPathFormat;
$D96DFE59C46805AEB5E237BA4555A605 kSRPathType;
$25E5A8C57458CA4919911E5850D0E7C5 kSRPendingSearch;
$924240654B70A2FED4660CE9A6C959E3 kSRPhraseFormat;
$D96DFE59C46805AEB5E237BA4555A605 kSRPhraseType;
$2B635558B2017DCAD703B8CE85A88DC0 kSRReadAudioFSSpec;
$02036559715AB1A087744DDD541D50D3 kSRRecognitionCanceled;
$02036559715AB1A087744DDD541D50D3 kSRRecognitionDone;
$E4F59445C46E084EB9967529BE2D8AB0 kSRRefCon;
$E4F59445C46E084EB9967529BE2D8AB0 kSRRejectable;
$D320BD8CD41F75B4BC04A132F524DD4E kSRRejectedWord;
$E4F59445C46E084EB9967529BE2D8AB0 kSRRejectionLevel;
$E4F59445C46E084EB9967529BE2D8AB0 kSRRepeatable;
$25E5A8C57458CA4919911E5850D0E7C5 kSRSearchInProgress;
$2B635558B2017DCAD703B8CE85A88DC0 kSRSearchStatusParam;
$25E5A8C57458CA4919911E5850D0E7C5 kSRSearchWaitForAllClients;
$02036559715AB1A087744DDD541D50D3 kSRSndInSourceDisconnected;
$2B635558B2017DCAD703B8CE85A88DC0 kSRSoundInVolume;
$2B635558B2017DCAD703B8CE85A88DC0 kSRSpeedVsAccuracyParam;
$E4F59445C46E084EB9967529BE2D8AB0 kSRSpelling;
$02036559715AB1A087744DDD541D50D3 kSRSubItemNotFound;
$924240654B70A2FED4660CE9A6C959E3 kSRTEXTFormat;
$02036559715AB1A087744DDD541D50D3 kSRTooManyElements;
$E4550460B23CB1297E6480F3468CBCDB kSRUsePushToTalk;
$E4550460B23CB1297E6480F3468CBCDB kSRUseToggleListen;
$2B635558B2017DCAD703B8CE85A88DC0 kSRWantsAutoFBGestures;
$2B635558B2017DCAD703B8CE85A88DC0 kSRWantsResultTextDrawn;
$02036559715AB1A087744DDD541D50D3 kSRWordNotFound;
$D96DFE59C46805AEB5E237BA4555A605 kSRWordType;
$2C0E49CF04AC0912764A88C0F717855D kSSpCantInstallErr;
$2C0E49CF04AC0912764A88C0F717855D kSSpInternalErr;
$4693F9F93A5130D57E44F485B4108586 kSSpLocalizationSubType;
$2C0E49CF04AC0912764A88C0F717855D kSSpParallelUpVectorErr;
$2C0E49CF04AC0912764A88C0F717855D kSSpScaleToZeroErr;
$2C0E49CF04AC0912764A88C0F717855D kSSpVersionErr;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTClassDeletedGlyph;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTClassEndOfLine;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTClassEndOfText;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTClassOutOfBounds;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTLigActionMask;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTMarkEnd;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTNoAdvance;
$55E5252D84E6F1A48D581BACE889D526 kSTREAMEVENT;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTRearrVerbMask;
$7ED2349EFEDEE0ECFAF054662DAEA502 kSTSetMark;
$AB960C5C89CB2107B895E8C77F810A6A kSTXHasLigAction;
$C61609BB0F455BF0C49EDE98D48A29D1 kSaveDataPointerMsg;
$292A8589014EEBEA2BBD692E83CD6225 kScheduledSoundDoCallBack;
$292A8589014EEBEA2BBD692E83CD6225 kScheduledSoundDoScheduled;
$292A8589014EEBEA2BBD692E83CD6225 kScheduledSoundExtendedHdr;
$9697D2C626758E212899500537321E1C kScheduledSource;
$C32362BD09BEBB7F51476E936F570A0A kScrapClearNamedScrap;
$8DC93DFE83BD80814859139A2424B481 kScrapFlavorMaskNone;
$8DC93DFE83BD80814859139A2424B481 kScrapFlavorMaskSenderOnly;
$8DC93DFE83BD80814859139A2424B481 kScrapFlavorMaskTranslated;
$8A48E5F0B5A905E2E8AC21AF0255C67D kScrapFlavorSizeUnknown;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypeMovie;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypePicture;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypeSound;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypeText;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypeTextStyle;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypeUnicode;
$FF84CF3ADD165EB5FA8FA915C7855525 kScrapFlavorTypeUnicodeStyle;
$C32362BD09BEBB7F51476E936F570A0A kScrapGetNamedScrap;
MACRO_kScrapRefNone kScrapRefNone;
$1E916A04F6BB77BA94A65E757A40C9E2 kScrapReservedFlavorType;
$5B004150561D8A57B6AEE998E4910F58 kScriptCodeKCItemAttr;
$5159DF5F69DB4B07E5314ED3C5415015 kScriptingAdditionsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kScriptingAdditionsFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kScriptsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kScriptsFolderType;
$CD246261D28BE75CB7F8313BAD05F1B8 kScrollBarsAlwaysActive;
$CD246261D28BE75CB7F8313BAD05F1B8 kScrollBarsSyncWithFocus;
$9FDF9E38B07031CED0044F6722EC10DE kScrollWindowEraseToPortBackground;
$9FDF9E38B07031CED0044F6722EC10DE kScrollWindowInvalidate;
$9FDF9E38B07031CED0044F6722EC10DE kScrollWindowNoOptions;
$C886933FA833F579BADE4B9335D656E1 kSecOptionReserved;
$32B75A1AA46F1B1DD1726F04BCD4FBEB kSecondDepthMode;
$ED3CB222F35B250525277339230D1DC5 kSecondScale;
$7F3E7E1AB57D7076B1F8652C10AC5339 kSecondaryInterruptLevel;
$5B004150561D8A57B6AEE998E4910F58 kSecurityDomainKCItemAttr;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryCStrEntryCreate;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryCStrEntryLookup;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryCStrEntryToName;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryCStrEntryToPath;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryCopy;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryDelete;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryGetMod;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIDCompare;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIDCopy;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIDDispose;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIDInit;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIterate;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIterateCreate;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIterateDispose;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryIterateSet;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryMod;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryPropertyMod;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntrySearch;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntrySetMod;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryEntryToPathSize;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryHighestSelector;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyCreate;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyDelete;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyGet;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyGetMod;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyGetSize;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyIterate;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyIterateCreate;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyIterateDispose;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertyRename;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertySet;
$1E298F583311C90DDF0D277D3D39BDAA kSelectRegistryPropertySetMod;
$A261E92C82250443DCF4E199E1935CB2 kSelectedConvertedText;
$A261E92C82250443DCF4E199E1935CB2 kSelectedRawText;
$A261E92C82250443DCF4E199E1935CB2 kSelectedText;
$655446770F0A5982A09EE9E18935E091 kSelectorAll1BitData;
$655446770F0A5982A09EE9E18935E091 kSelectorAll32BitData;
$655446770F0A5982A09EE9E18935E091 kSelectorAll4BitData;
$655446770F0A5982A09EE9E18935E091 kSelectorAll8BitData;
$655446770F0A5982A09EE9E18935E091 kSelectorAllAvailableData;
$655446770F0A5982A09EE9E18935E091 kSelectorAllHugeData;
$655446770F0A5982A09EE9E18935E091 kSelectorAllLargeData;
$655446770F0A5982A09EE9E18935E091 kSelectorAllMiniData;
$655446770F0A5982A09EE9E18935E091 kSelectorAllSmallData;
$655446770F0A5982A09EE9E18935E091 kSelectorHuge1Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorHuge32Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorHuge4Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorHuge8Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorHuge8BitMask;
$655446770F0A5982A09EE9E18935E091 kSelectorLarge1Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorLarge32Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorLarge4Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorLarge8Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorLarge8BitMask;
$655446770F0A5982A09EE9E18935E091 kSelectorMini1Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorMini4Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorMini8Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorSmall1Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorSmall32Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorSmall4Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorSmall8Bit;
$655446770F0A5982A09EE9E18935E091 kSelectorSmall8BitMask;
$F6917C090EF490D5622C8305E3F798F4 kSelectorsAreIndexable;
$F6917C090EF490D5622C8305E3F798F4 kSelectorsAreNotIndexable;
$DF48766BD90EE4BF10CF3C9100DADC5D kSerialABModuleID;
$5B004150561D8A57B6AEE998E4910F58 kSerialNumberKCItemAttr;
$5B004150561D8A57B6AEE998E4910F58 kServerKCItemAttr;
$5B004150561D8A57B6AEE998E4910F58 kServiceKCItemAttr;
$10264D941E34CCA96EC0AD44D1D44723 kSetClutAtSetEntries;
$10264D941E34CCA96EC0AD44D1D44723 kSetClutAtVBL;
$BF40FF4EAF09DF7FBAAAD52C33F2F16B kSetDebugOption;
$58030CB495C0F1442001624CD349E98E kSetDisplayModeBit;
$48581DA6325892AC46A0B2E89C776E96 kSetFileTypeAndCreator;
$F36DEFF41447FB0EC77923D61367A793 kSetFrontProcessFrontWindowOnly;
$58030CB495C0F1442001624CD349E98E kSetMainDisplayBit;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSetPowerLevel;
$99DF324053748CE0F00F82D255EBBBC6 kShadowDialogVariantCode;
$8C3160D5B07095881A649D5B5E6C135D kSharedBadgeIcon;
$80CC905675FBBA9CE111FA805C6BD313 kSharedFolderAliasType;
$121E1AC3EB6A789387393DDCCEF5B35F kSharedFolderIcon;
$159A2294D95B3B569822A5BAD5B2813B kSharedFolderIconResource;
$5159DF5F69DB4B07E5314ED3C5415015 kSharedLibrariesFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kSharedLibrariesFolderType;
$1BD52C00E239FD3836B0B5E2BBDE1F4D kSharedUserDataFolderType;
$7185725E826BD251B3AB7A38FF404D56 kSharingPrivsNotApplicableIcon;
$7185725E826BD251B3AB7A38FF404D56 kSharingPrivsReadOnlyIcon;
$7185725E826BD251B3AB7A38FF404D56 kSharingPrivsReadWriteIcon;
$7185725E826BD251B3AB7A38FF404D56 kSharingPrivsUnknownIcon;
$7185725E826BD251B3AB7A38FF404D56 kSharingPrivsWritableIcon;
$B95EEEF8D0A9C3F124CECCB9E5363575 kSheetAlertWindowClass;
$B95EEEF8D0A9C3F124CECCB9E5363575 kSheetWindowClass;
$A1E1BAD5B418D85708692C2D8BF7B43D kShiftUnicode;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kShortcutIcon;
$882E335BD166895EB3BB07B177635657 kShowDiacriticsSelector;
$0CE592B5184B238B16AB67F4BE1A6C98 kShowHideInputWindow;
$476A79E339CADAF44B401C5F27E1C94E kShowModeBit;
$191BACAFE1C79A4AFD6F08B231C40E86 kShutdownFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kShutdownItemsDisabledFolderIcon;
$ADBD11780E2D799B74D44FEA6B34E12D kShutdownItemsDisabledFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kShutdownItemsFolderIcon;
$99DF324053748CE0F00F82D255EBBBC6 kSideFloaterVariantCode;
$5B004150561D8A57B6AEE998E4910F58 kSignKCItemAttr;
$5B004150561D8A57B6AEE998E4910F58 kSignatureKCItemAttr;
$5CBE8BE576D101F7C329838514C3A8C4 kSimpleBeepID;
$C61609BB0F455BF0C49EDE98D48A29D1 kSimpleQueueTag;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kSimplifiedCharactersSelector;
$4693F9F93A5130D57E44F485B4108586 kSinger2SubType;
$4693F9F93A5130D57E44F485B4108586 kSingerSubType;
$32B75A1AA46F1B1DD1726F04BCD4FBEB kSixthDepthMode;
$145E67403CC27530E2BE7E59FF2C99D3 kSizeOfTPrint;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kSlashToDivideOffSelector;
$D8B23B1819FAFCA3E6FBC8B6762B2B94 kSlashToDivideOnSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kSlashedZeroOffSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kSlashedZeroOnSelector;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepDemand;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepDeny;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepNow;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepRequest;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepRevoke;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepUnlock;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSleepWakeUp;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kSmall1BitMask;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kSmall32BitData;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kSmall4BitData;
$49693FA4B2A12A639DAC3849A1A69714 kSmall4BitIcon;
$141F72CF1B17A277A49BF921B8702916 kSmall4BitIconSize;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kSmall8BitData;
$49693FA4B2A12A639DAC3849A1A69714 kSmall8BitIcon;
$141F72CF1B17A277A49BF921B8702916 kSmall8BitIconSize;
$E2AF9A586AE1FDF210CDF7E2BDD666EA kSmall8BitMask;
$F27735064C606F1E78552097B35F5D75 kSmallCapsSelector;
$49693FA4B2A12A639DAC3849A1A69714 kSmallIcon;
$141F72CF1B17A277A49BF921B8702916 kSmallIconSize;
$F1801BD1D809F59C5583F4A7CDF3D075 kSmartQuotesOffSelector;
$F1801BD1D809F59C5583F4A7CDF3D075 kSmartQuotesOnSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kSmartSwashType;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputGetDeviceInfoSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputGetStatusSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputInitHardwareSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputPauseRecordingSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputReadAsyncSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputReadSyncSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputResumeRecordingSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputSetDeviceInfoSelect;
$323AA7EF4BF72B6051E409ED4AFA698D kSndInputStopRecordingSelect;
$4693F9F93A5130D57E44F485B4108586 kSndSourceSubType;
$7F3E7E1AB57D7076B1F8652C10AC5339 kSoftwareInterruptLevel;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kSortAscendingIcon;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kSortDescendingIcon;
$8CB00DF1AD530EC59D0F6D0F494FA746 kSoundAudioCodecPropertyWritableFlag;
$4693F9F93A5130D57E44F485B4108586 kSoundBlasterSubType;
$308CD85ED9DF3010B91D54912D981480 kSoundCodecInfoCanChangeOutputRate;
$308CD85ED9DF3010B91D54912D981480 kSoundCodecInfoFixedCompression;
$308CD85ED9DF3010B91D54912D981480 kSoundCodecInfoHasRestrictedInputRates;
$308CD85ED9DF3010B91D54912D981480 kSoundCodecInfoRequiresExternalFraming;
$766AF2F9A78A14DBDE9F72FE806423B3 kSoundCodecInfoResourceType;
$308CD85ED9DF3010B91D54912D981480 kSoundCodecInfoVariableCompression;
$308CD85ED9DF3010B91D54912D981480 kSoundCodecInfoVariableDuration;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentAddSourceSelect;
$07F30EAFE9CC2F5CF34646E5224F6B53 kSoundComponentBits;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentGetInfoSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentGetSourceDataSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentGetSourceSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentInitOutputDeviceSelect;
$4693F9F93A5130D57E44F485B4108586 kSoundComponentPPCType;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentPauseSourceSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentPlaySourceBufferSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentRemoveSourceSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentSetInfoSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentSetOutputSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentSetSourceSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentStartSourceSelect;
$FD0B6ABFCE34BE4359709DD571755F48 kSoundComponentStopSourceSelect;
$4693F9F93A5130D57E44F485B4108586 kSoundComponentType;
$4693F9F93A5130D57E44F485B4108586 kSoundCompressor;
$2AA34CC205287293993E11A04E1223E8 kSoundConverterDidntFillBuffer;
$2AA34CC205287293993E11A04E1223E8 kSoundConverterHasLeftOverData;
$9697D2C626758E212899500537321E1C kSoundConverterMixer;
$4693F9F93A5130D57E44F485B4108586 kSoundDecompressor;
$4693F9F93A5130D57E44F485B4108586 kSoundEffectsType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kSoundFileIcon;
$1C119E9720855ADE2B421A854DBE867A kSoundInSource;
$4693F9F93A5130D57E44F485B4108586 kSoundInputDeviceType;
$18BF411237F175ABCD4A1D90A0B1F6B7 kSoundNotCompressed;
$4693F9F93A5130D57E44F485B4108586 kSoundOutputDeviceType;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kSoundSetsFolderType;
$80042E239329A5D53959B93C979DB8B4 kSourceCanBeChargedMask;
$80042E239329A5D53959B93C979DB8B4 kSourceIsACMask;
$F8F9ECD74B045B35282DEB8B8260CDB3 kSourceIsAvailableMask;
$80042E239329A5D53959B93C979DB8B4 kSourceIsBatteryMask;
$F8F9ECD74B045B35282DEB8B8260CDB3 kSourceIsChargingMask;
$80042E239329A5D53959B93C979DB8B4 kSourceIsUPSMask;
$51D9C7A66E27CF37B82E1BF57C19CF25 kSourcePaused;
$80042E239329A5D53959B93C979DB8B4 kSourceProvidesWarnLevelsMask;
$A03BA9394223138179DA9F43844713EA kSourceWasDisabled;
$A03BA9394223138179DA9F43844713EA kSourceWasEnabled;
$40B1D294FCB105E6FD797FB89EF6F7A3 kSpaceCharCode;
$5159DF5F69DB4B07E5314ED3C5415015 kSpeakableItemsFolder;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kSpeakableItemsFolderType;
$2E53312CD098273790C8819CDB1751E0 kSpecialCase;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseCaretHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseDrawHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseEOLHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseGNEFilterProc;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseHighHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseHitTestHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseMBarHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseNWidthHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseProtocolHandler;
$BEE4F9FA55F124848F5583F92B764A21 kSpecialCaseSelectorMask;
$BEE4F9FA55F124848F5583F92B764A21 kSpecialCaseSelectorPhase;
$BEE4F9FA55F124848F5583F92B764A21 kSpecialCaseSelectorWidth;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseSocketListener;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseTEDoText;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseTEFindWord;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseTERecalc;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseTextWidthHook;
$F3AB53857C750C85CC7E9266B366629F kSpecialCaseWidthHook;
$99AABAE3110A89687340939D494AE5DE kSpecialFolder;
$CC091832F316327152ED0A035D8C4D44 kSpeechFolderType;
$DCE09C5AC8576D753F0EFEA779280476 kSpeechInputMethodContextTag;
$DCE09C5AC8576D753F0EFEA779280476 kSpeechLocaleObjectRefTag;
$C5158E5C8936F0DF706C0A4969EDE653 kSquaredLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kSquaredLigaturesOnSelector;
$768C2AF2BA4795B0EBD762573A709F14 kStackDispatchedPascalStackBased;
$1AC1C93A58AB6CB66948DE5864455995 kStackOverflowException;
$BEE4F9FA55F124848F5583F92B764A21 kStackParameterMask;
$BEE4F9FA55F124848F5583F92B764A21 kStackParameterPhase;
$BEE4F9FA55F124848F5583F92B764A21 kStackParameterWidth;
$1FB17526987ED6BB45FECECD371E831D kStandardWindowDefinition;
$5B004150561D8A57B6AEE998E4910F58 kStartDateKCItemAttr;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kStartupFolderAliasType;
$159A2294D95B3B569822A5BAD5B2813B kStartupFolderIconResource;
$191BACAFE1C79A4AFD6F08B231C40E86 kStartupFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kStartupItemsDisabledFolderIcon;
$ADBD11780E2D799B74D44FEA6B34E12D kStartupItemsDisabledFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kStartupItemsFolderIcon;
$333B154C3EB4D8DDCA6A976D4C3734A3 kStaticTextDialogItem;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kStationeryFolderType;
$009AA9BCCC426E323765130C670B7B3B kStatusCommand;
$22DED42BA502DE3B52239B4529430256 kStdAlertDoNotAnimateOnCancel;
$22DED42BA502DE3B52239B4529430256 kStdAlertDoNotAnimateOnDefault;
$22DED42BA502DE3B52239B4529430256 kStdAlertDoNotAnimateOnOther;
$22DED42BA502DE3B52239B4529430256 kStdAlertDoNotDisposeSheet;
$9818B4C6914289C7D9E4B4D4E9FB00D9 kStdCFStringAlertVersionOne;
$955AB7EDEF7D16C0C208B264FC667289 kStdCancelItemIndex;
$955AB7EDEF7D16C0C208B264FC667289 kStdOkItemIndex;
$56EDAB68D3F8BADD4C371F358805869C kStereoIn;
$56EDAB68D3F8BADD4C371F358805869C kStereoOut;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kStillIdle;
$9AE367475DB3252AE4C1C184F0EB9534 kStopIcon;
$5F51C7D1384D4F622EF69256DA9D858C kStopIfAnyNotificationProcReturnsErrorBit;
$A788D73B1051A86ACDAA839045FF5F42 kStoppedThreadState;
$01A6E1A1AFE16BFC1376FB0F49340BF7 kStoredBasicWindowDescriptionID;
$01A6E1A1AFE16BFC1376FB0F49340BF7 kStoredWindowPascalTitleID;
$01A6E1A1AFE16BFC1376FB0F49340BF7 kStoredWindowSystemTag;
$588B556C9117B511479A044E550E7995 kStoredWindowTitleCFStringID;
$588B556C9117B511479A044E550E7995 kStoredWindowUnicodeTitleID;
$1AAB9134B0FEB3A17896E87DAEB18E46 kStreamCloseEvent;
$55E5252D84E6F1A48D581BACE889D526 kStreamIoctlEvent;
$55E5252D84E6F1A48D581BACE889D526 kStreamOpenEvent;
$55E5252D84E6F1A48D581BACE889D526 kStreamReadEvent;
$55E5252D84E6F1A48D581BACE889D526 kStreamWriteEvent;
$4C94D49F19D2C7D3EC87E3F8D916F51F kStubLibraryCFrag;
$29926AB924E42B27C90E0FDA4D67BBF6 kStyleOptionsType;
$5B004150561D8A57B6AEE998E4910F58 kSubjectKCItemAttr;
$B39D68AABA4BCF2580DDCD53ED9F0BF1 kSubstituteVerticalFormsOffSelector;
$B39D68AABA4BCF2580DDCD53ED9F0BF1 kSubstituteVerticalFormsOnSelector;
$B279F8649030D335CB0658803ACB5579 kSuperiorsSelector;
$009AA9BCCC426E323765130C670B7B3B kSupersededCommand;
$EBDC59905EB821ACF1B6E12272616C56 kSupportsFileTranslation;
$DCE09C5AC8576D753F0EFEA779280476 kSupportsMultiInlineHolesTag;
$EBDC59905EB821ACF1B6E12272616C56 kSupportsScrapTranslation;
$2C7B85F3FA308E82B6227DC0179B718C kSuppressNameBit;
$2C7B85F3FA308E82B6227DC0179B718C kSuppressNameMask;
$2C7B85F3FA308E82B6227DC0179B718C kSuppressNumberBit;
$2C7B85F3FA308E82B6227DC0179B718C kSuppressNumberMask;
$009AA9BCCC426E323765130C670B7B3B kSuspendCommand;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSuspendDemand;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSuspendRequest;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSuspendRevoke;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSuspendWakeToDoze;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kSuspendWakeUp;
$C5158E5C8936F0DF706C0A4969EDE653 kSymbolLigaturesOffSelector;
$C5158E5C8936F0DF706C0A4969EDE653 kSymbolLigaturesOnSelector;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncAnalogBipolarMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncAnalogBipolarSRGBSyncMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncAnalogBipolarSerrateMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncAnalogCompositeMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncAnalogCompositeRGBSyncMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncAnalogCompositeSerrateMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncDigitalCompositeMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncDigitalCompositeMatchHSyncMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncDigitalCompositeSerrateMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncDigitalHSyncPositiveMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncDigitalSeperateMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncDigitalVSyncPositiveMask;
$E79FD7EF8B53FAC73560EA2A837D7201 kSyncInterlaceMask;
$8D4D07E192BE4DF49363A655628BC0D2 kSyncOnBlueMask;
$8D4D07E192BE4DF49363A655628BC0D2 kSyncOnGreenMask;
$8D4D07E192BE4DF49363A655628BC0D2 kSyncOnMask;
$8D4D07E192BE4DF49363A655628BC0D2 kSyncOnRedMask;
$7BD84307E1464587D10DC2E68A3E642C kSyncPositivePolarityBit;
$7BD84307E1464587D10DC2E68A3E642C kSyncPositivePolarityMask;
$8738D3FFE8B55997E686F91E519B8E41 kSysSWTooOld;
$191BACAFE1C79A4AFD6F08B231C40E86 kSystemControlPanelFolderType;
$191BACAFE1C79A4AFD6F08B231C40E86 kSystemDesktopFolderType;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kSystemDomain;
$39FE76983533385EB60014D19059B326 kSystemEventKCEventMask;
$5159DF5F69DB4B07E5314ED3C5415015 kSystemExtensionDisabledFolderIcon;
$ADBD11780E2D799B74D44FEA6B34E12D kSystemExtensionDisabledFolderType;
$B47B1D0BFDFAD5CDA5EDFE2CC23A26B6 kSystemFolderAliasType;
$5159DF5F69DB4B07E5314ED3C5415015 kSystemFolderIcon;
$883B7585B4D93D2BF8A69055FD2A75BF kSystemFolderIconResource;
$191BACAFE1C79A4AFD6F08B231C40E86 kSystemFolderType;
$6BC237FDE07B1BFC7DC2CCC36A99A63B kSystemIconsCreator;
$6D0E186233145241771508AFE8C2C7D5 kSystemKCEvent;
$191BACAFE1C79A4AFD6F08B231C40E86 kSystemPreferencesFolderType;
$28BE9745FBFAC7613E1AD2B56AA356CB kSystemProcess;
$7DDBDC34E1008FF23F3F060DC51405F3 kSystemResFile;
$E07ACE6A19E0DA6619F0F054184227EB kSystemSoundNoError;
$E07ACE6A19E0DA6619F0F054184227EB kSystemSoundUnspecifiedError;
$CC091832F316327152ED0A035D8C4D44 kSystemSoundsFolderType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kSystemSuitcaseIcon;
$191BACAFE1C79A4AFD6F08B231C40E86 kSystemTrashFolderType;
$4C0F13827EDA41278E21F09F284FA869 kT8022FullPacketHeaderLength;
$4C0F13827EDA41278E21F09F284FA869 kT8022HeaderLength;
$CE63137381CE1C14105FBF64756659BB kT8022ModuleID;
$4C0F13827EDA41278E21F09F284FA869 kT8022SNAPHeaderLength;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECAddFallbackInterruptBit;
$759763EA81AA1096C94DF528D440B104 kTECAddFallbackInterruptMask;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECAddForceASCIIChangesBit;
$759763EA81AA1096C94DF528D440B104 kTECAddForceASCIIChangesMask;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECAddTextRunHeuristicsBit;
$759763EA81AA1096C94DF528D440B104 kTECAddTextRunHeuristicsMask;
$973DC6726FA38C189808978C839B0622 kTECArrayFullErr;
$973DC6726FA38C189808978C839B0622 kTECBadTextRunErr;
$973DC6726FA38C189808978C839B0622 kTECBufferBelowMinimumSizeErr;
$C168103DFE2D3A1A0CF1945FBBE7F1AD kTECChinesePluginSignature;
$973DC6726FA38C189808978C839B0622 kTECCorruptConverterErr;
$973DC6726FA38C189808978C839B0622 kTECDirectionErr;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECFallbackTextLengthFixBit;
$759763EA81AA1096C94DF528D440B104 kTECFallbackTextLengthFixMask;
$973DC6726FA38C189808978C839B0622 kTECGlobalsUnavailableErr;
$973DC6726FA38C189808978C839B0622 kTECIncompleteElementErr;
$9E94AA623DD3443F9FEF6C4204FE6D72 kTECInfoCurrentFormat;
$973DC6726FA38C189808978C839B0622 kTECItemUnavailableErr;
$C168103DFE2D3A1A0CF1945FBBE7F1AD kTECJapanesePluginSignature;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECKeepInfoFixBit;
$759763EA81AA1096C94DF528D440B104 kTECKeepInfoFixMask;
$C168103DFE2D3A1A0CF1945FBBE7F1AD kTECKoreanPluginSignature;
$973DC6726FA38C189808978C839B0622 kTECMissingTableErr;
$973DC6726FA38C189808978C839B0622 kTECNeedFlushStatus;
$973DC6726FA38C189808978C839B0622 kTECNoConversionPathErr;
$973DC6726FA38C189808978C839B0622 kTECOutputBufferFullStatus;
$973DC6726FA38C189808978C839B0622 kTECPartialCharErr;
$05B54B3173622B5172EB50B3EE42D417 kTECPluginDispatchTableCurrentVersion;
$05B54B3173622B5172EB50B3EE42D417 kTECPluginDispatchTableVersion1;
$05B54B3173622B5172EB50B3EE42D417 kTECPluginDispatchTableVersion1_1;
$05B54B3173622B5172EB50B3EE42D417 kTECPluginDispatchTableVersion1_2;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECPreferredEncodingFixBit;
$759763EA81AA1096C94DF528D440B104 kTECPreferredEncodingFixMask;
$C168103DFE2D3A1A0CF1945FBBE7F1AD kTECSignature;
$973DC6726FA38C189808978C839B0622 kTECTableChecksumErr;
$973DC6726FA38C189808978C839B0622 kTECTableFormatErr;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECTextRunBitClearFixBit;
$759763EA81AA1096C94DF528D440B104 kTECTextRunBitClearFixMask;
$2EE0A3710DCEACD4D342AF2898BC3EA8 kTECTextToUnicodeScanFixBit;
$759763EA81AA1096C94DF528D440B104 kTECTextToUnicodeScanFixMask;
$C168103DFE2D3A1A0CF1945FBBE7F1AD kTECUnicodePluginSignature;
$973DC6726FA38C189808978C839B0622 kTECUnmappableElementErr;
$973DC6726FA38C189808978C839B0622 kTECUsedFallbacksStatus;
$7325705BC39DEB261114CDA8D4241685 kTMTaskActive;
$97FA3A9004AF8E74324D08F4D09E2464 kTOCCFragSymbol;
$38B6386C7BDC44667E322A0093038B01 kTRAKCurrentVersion;
$38B6386C7BDC44667E322A0093038B01 kTRAKTag;
$38B6386C7BDC44667E322A0093038B01 kTRAKUniformFormat;
$B3D17BE356756F7E4E6670692217DF57 kTSClassForceSetting;
$B3D17BE356756F7E4E6670692217DF57 kTSClassForceToHonorUserSetting;
$B3D17BE356756F7E4E6670692217DF57 kTSClassHonorUserSetting;
$DCE09C5AC8576D753F0EFEA779280476 kTSMContextCollectionTag;
$256948CB97E150255C1C0A8538FCF0C9 kTSMDocumentPropertySupportGlyphInfo;
$03A5EBED0B02080DE473E028393514BA kTSMInsideOfActiveInputArea;
$03A5EBED0B02080DE473E028393514BA kTSMInsideOfBody;
$03A5EBED0B02080DE473E028393514BA kTSMOutsideOfBody;
$D2ACCC07AF61088040A8D62007958697 kTSMTEAutoScroll;
$EF7AC0A07C9D4D6CE23E1A7D565F05B3 kTSMTEInterfaceType;
$EF7AC0A07C9D4D6CE23E1A7D565F05B3 kTSMTESignature;
$2D53C2E3A90C12ACB14D730A0953F9ED kTSMVersion;
$1C119E9720855ADE2B421A854DBE867A kTVFMTunerSource;
$97FA3A9004AF8E74324D08F4D09E2464 kTVectorCFragSymbol;
$2876A993FC47D423AF396C60D6012753 kTXNAIFFFile;
$7E2F11CF5FE2901815F7E0534F356353 kTXNATSUIFontFeaturesAttribute;
$7E2F11CF5FE2901815F7E0534F356353 kTXNATSUIFontVariationsAttribute;
$FEB624D7937514DA50C30D8656C6FC24 kTXNATSUIIsNotInstalledErr;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNAlignCenterAction;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNAlignLeftAction;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNAlignRightAction;
$E755404C0B2AC6E4A3D2162601CAA890 kTXNAllCountMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNAlreadyInitializedErr;
$EF10D20D8AD544E2384BB467A5FE3E20 kTXNAlwaysUseQuickDrawTextBit;
$65343E7BE8168EBA7094311ED241AFA5 kTXNAlwaysUseQuickDrawTextMask;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNAlwaysWrapAtViewEdgeBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNAlwaysWrapAtViewEdgeMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNAttributeTagInvalidForRunErr;
$8F974BCF93D03EEF749003DE86765FBE kTXNAutoIndentOff;
$8F974BCF93D03EEF749003DE86765FBE kTXNAutoIndentOn;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNAutoIndentStateTag;
$6FF67BC7D42FA1A92979F28C20948AA3 kTXNAutoWrap;
$03CB65BAD41664AC8D7BA464E596F001 kTXNBackgroundTypeRGB;
$FEB624D7937514DA50C30D8656C6FC24 kTXNBadDefaultFileTypeWarning;
$FEB624D7937514DA50C30D8656C6FC24 kTXNCannotAddFrameErr;
$FEB624D7937514DA50C30D8656C6FC24 kTXNCannotSetAutoIndentErr;
$FEB624D7937514DA50C30D8656C6FC24 kTXNCannotTurnTSMOffWhenUsingUnicodeErr;
$21EB103FEA65AD5ACD4D04DEAC5E7A5F kTXNCenter;
$32E9081972DAF83781E34712ABC3DF8E kTXNCenterTab;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNChangeFontAction;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNChangeFontColorAction;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNChangeFontSizeAction;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNChangeStyleAction;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNClearAction;
$E3B943559A694C916C4DA1D44A102EBC kTXNClearTheseFontFeatures;
$E3B943559A694C916C4DA1D44A102EBC kTXNClearThisControl;
$3541876FE2AD3682576FC5B6A1C277E7 kTXNColorContinuousBit;
$09CBA27704EC81F2830914C0E8BB2491 kTXNColorContinuousMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNCopyNotAllowedInEchoModeErr;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNCutAction;
$FEB624D7937514DA50C30D8656C6FC24 kTXNDataTypeNotAllowedErr;
$A8AF2FAB2E0E9F474FB0D44479D2B73F kTXNDecrementTypeSize;
MACRO_kTXNDefaultFontName kTXNDefaultFontName;
$5F439C60E80CB6DF96FA7A92D6C0733B kTXNDefaultFontSize;
$A489AFA699E8409A9DA117ABCD91F3DD kTXNDefaultFontStyle;
$0329F96F5C5E4070D6733ACD8BFCB1D0 kTXNDisableDragAndDrop;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNDisableDragAndDropBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNDisableDragAndDropMask;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNDisableDragAndDropTag;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNDoFontSubstitution;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNDoNotInstallDragProcsBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNDoNotInstallDragProcsMask;
$A8AF2FAB2E0E9F474FB0D44479D2B73F kTXNDontCareTypeSize;
$A8AF2FAB2E0E9F474FB0D44479D2B73F kTXNDontCareTypeStyle;
$9F79A317D9E10083B2D179CB5DBEA5A2 kTXNDontDrawCaretWhenInactive;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNDontDrawCaretWhenInactiveBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNDontDrawCaretWhenInactiveMask;
$6CCA4B57E9C87C1C3FE9832DE3278AA9 kTXNDontDrawSelectionWhenInactive;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNDontDrawSelectionWhenInactiveBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNDontDrawSelectionWhenInactiveMask;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNDontDrawTextBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNDontDrawTextMask;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNDontUpdateBoxRectBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNDontUpdateBoxRectMask;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNDontWrapTextBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNDontWrapTextMask;
$9F79A317D9E10083B2D179CB5DBEA5A2 kTXNDrawCaretWhenInactive;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNDrawCaretWhenInactiveTag;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNDrawGrowIconBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNDrawGrowIconMask;
$6CCA4B57E9C87C1C3FE9832DE3278AA9 kTXNDrawSelectionWhenInactive;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNDrawSelectionWhenInactiveTag;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNDropAction;
$0329F96F5C5E4070D6733ACD8BFCB1D0 kTXNEnableDragAndDrop;
$FEB624D7937514DA50C30D8656C6FC24 kTXNEndIterationErr;
$B85C30449C4709C800E3FB33D11A2AD8 kTXNEndOffset;
$D766FF7AE3C582194CDC21050F5E362D kTXNEntireWordBit;
$2CE304E57CAFDF92251A2A037D806032 kTXNEntireWordMask;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNFlattenMoviesTag;
$21EB103FEA65AD5ACD4D04DEAC5E7A5F kTXNFlushDefault;
$21EB103FEA65AD5ACD4D04DEAC5E7A5F kTXNFlushLeft;
$21EB103FEA65AD5ACD4D04DEAC5E7A5F kTXNFlushRight;
$3541876FE2AD3682576FC5B6A1C277E7 kTXNFontContinuousBit;
$09CBA27704EC81F2830914C0E8BB2491 kTXNFontContinuousMask;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNFontFeatureAction;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNFontSizeAttributeSize;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNFontVariationAction;
$21EB103FEA65AD5ACD4D04DEAC5E7A5F kTXNForceFullJust;
$21EB103FEA65AD5ACD4D04DEAC5E7A5F kTXNFullJust;
$E59320F83BED18265AA2C43474055FCC kTXNHorizontal;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNIOPrivilegesTag;
$D766FF7AE3C582194CDC21050F5E362D kTXNIgnoreCaseBit;
$2CE304E57CAFDF92251A2A037D806032 kTXNIgnoreCaseMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNIllegalToCrossDataBoundariesErr;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNImageWithQDBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNImageWithQDMask;
$A8AF2FAB2E0E9F474FB0D44479D2B73F kTXNIncrementTypeSize;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNInlineStateTag;
$FEB624D7937514DA50C30D8656C6FC24 kTXNInvalidFrameIDErr;
$FEB624D7937514DA50C30D8656C6FC24 kTXNInvalidRunIndex;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNJustificationTag;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNKeyboardSyncStateTag;
$32E9081972DAF83781E34712ABC3DF8E kTXNLeftTab;
$04E1D46E42CDE22B77EBB1D3D6307CC5 kTXNLeftToRight;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNLineDirectionTag;
$E1296932B263BB206AFB5C7E73591985 kTXNLinkNotPressed;
$E1296932B263BB206AFB5C7E73591985 kTXNLinkTracking;
$E1296932B263BB206AFB5C7E73591985 kTXNLinkWasPressed;
$19698A76D39D64A57D7BC8CAFA69B25A kTXNMacOSEncoding;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNMarginsTag;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNMonostyledTextBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNMonostyledTextMask;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNMoveAction;
$CC84CECE87A3CF95A5FF698DDC1A7578 kTXNMovieData;
$2876A993FC47D423AF396C60D6012753 kTXNMovieFile;
$189C553E9DBE70D740DD8B4A774970DC kTXNMultipleFrameType;
$FC62B0B01FF2D411A2E228A30F04143F kTXNMultipleStylesPerTextDocumentResType;
$9E194EEDFFE7344AEF455EECABB7E06D kTXNNoAppleEventHandlersBit;
$B83D1FEB2E31ABE78CCF21872C2208F3 kTXNNoAppleEventHandlersMask;
$6FF67BC7D42FA1A92979F28C20948AA3 kTXNNoAutoWrap;
$A8AF2FAB2E0E9F474FB0D44479D2B73F kTXNNoFontVariations;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNNoKeyboardSyncBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNNoKeyboardSyncMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNNoMatchErr;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNNoSelectionBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNNoSelectionMask;
$5E8D5BBCBE57084F184AA3C5AA2B0A25 kTXNNoSyncKeyboard;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNNoTSMEverBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNNoTSMEverMask;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNNoUserIOTag;
$FEB624D7937514DA50C30D8656C6FC24 kTXNOutsideOfFrameErr;
$FEB624D7937514DA50C30D8656C6FC24 kTXNOutsideOfLineErr;
$189C553E9DBE70D740DD8B4A774970DC kTXNPageFrameType;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNPasteAction;
$CC84CECE87A3CF95A5FF698DDC1A7578 kTXNPictureData;
$2876A993FC47D423AF396C60D6012753 kTXNPictureFile;
$7E2F11CF5FE2901815F7E0534F356353 kTXNQDFontColorAttribute;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNQDFontColorAttributeSize;
$7E2F11CF5FE2901815F7E0534F356353 kTXNQDFontFamilyIDAttribute;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNQDFontFamilyIDAttributeSize;
$7E2F11CF5FE2901815F7E0534F356353 kTXNQDFontNameAttribute;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNQDFontNameAttributeSize;
$7E2F11CF5FE2901815F7E0534F356353 kTXNQDFontSizeAttribute;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNQDFontSizeAttributeSize;
$7E2F11CF5FE2901815F7E0534F356353 kTXNQDFontStyleAttribute;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNQDFontStyleAttributeSize;
$FBA184EC5D7B553F134F81B438731B62 kTXNReadOnly;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNReadOnlyBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNReadOnlyMask;
$FBA184EC5D7B553F134F81B438731B62 kTXNReadWrite;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNRefConTag;
$9E194EEDFFE7344AEF455EECABB7E06D kTXNRestartAppleEventHandlersBit;
$B83D1FEB2E31ABE78CCF21872C2208F3 kTXNRestartAppleEventHandlersMask;
$32E9081972DAF83781E34712ABC3DF8E kTXNRightTab;
$04E1D46E42CDE22B77EBB1D3D6307CC5 kTXNRightToLeft;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNRotateTextBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNRotateTextMask;
$B28239822585B0E3C257692EB05E732D kTXNRunCountBit;
$E755404C0B2AC6E4A3D2162601CAA890 kTXNRunCountMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNRunIndexOutofBoundsErr;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNSaveStylesAsSTYLResourceBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNSaveStylesAsSTYLResourceMask;
$D8B39D5636DAC3B78F49C5DAC9CD0649 kTXNScrollUnitsInLines;
$D8B39D5636DAC3B78F49C5DAC9CD0649 kTXNScrollUnitsInPixels;
$D8B39D5636DAC3B78F49C5DAC9CD0649 kTXNScrollUnitsInViewRects;
$9029BCBD8FCB6B6E7B04648E45C7EAD9 kTXNSelectionOff;
$9029BCBD8FCB6B6E7B04648E45C7EAD9 kTXNSelectionOn;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNSelectionStateTag;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNSetFlushnessBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNSetFlushnessMask;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNSetJustificationBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNSetJustificationMask;
$0261567807CA20E5152898467B58BA9C kTXNShowEnd;
$0261567807CA20E5152898467B58BA9C kTXNShowStart;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNShowWindowBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNShowWindowMask;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNSingleLevelUndoTag;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNSingleLineOnlyBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNSingleLineOnlyMask;
$FC62B0B01FF2D411A2E228A30F04143F kTXNSingleStylePerTextDocumentResType;
$3541876FE2AD3682576FC5B6A1C277E7 kTXNSizeContinuousBit;
$09CBA27704EC81F2830914C0E8BB2491 kTXNSizeContinuousMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNSomeOrAllTagsInvalidForRunErr;
$CC84CECE87A3CF95A5FF698DDC1A7578 kTXNSoundData;
$2876A993FC47D423AF396C60D6012753 kTXNSoundFile;
$B85C30449C4709C800E3FB33D11A2AD8 kTXNStartOffset;
$3541876FE2AD3682576FC5B6A1C277E7 kTXNStyleContinuousBit;
$09CBA27704EC81F2830914C0E8BB2491 kTXNStyleContinuousMask;
$5E8D5BBCBE57084F184AA3C5AA2B0A25 kTXNSyncKeyboard;
$19698A76D39D64A57D7BC8CAFA69B25A kTXNSystemDefaultEncoding;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNTabSettingsTag;
$CC84CECE87A3CF95A5FF698DDC1A7578 kTXNTextData;
$189C553E9DBE70D740DD8B4A774970DC kTXNTextEditStyleFrameType;
$7E2F11CF5FE2901815F7E0534F356353 kTXNTextEncodingAttribute;
$D3EF74AD8C95D96B6DEFC26D1A378D18 kTXNTextEncodingAttributeSize;
$2876A993FC47D423AF396C60D6012753 kTXNTextFile;
$B28239822585B0E3C257692EB05E732D kTXNTextInputCountBit;
$E755404C0B2AC6E4A3D2162601CAA890 kTXNTextInputCountMask;
$2876A993FC47D423AF396C60D6012753 kTXNTextensionFile;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNTypingAction;
$7E2F11CF5FE2901815F7E0534F356353 kTXNURLAttribute;
$C4DE14BECEB26BEEE4BB09B7D1A91662 kTXNUndoLastAction;
$19698A76D39D64A57D7BC8CAFA69B25A kTXNUnicodeEncoding;
$CC84CECE87A3CF95A5FF698DDC1A7578 kTXNUnicodeTextData;
$2876A993FC47D423AF396C60D6012753 kTXNUnicodeTextFile;
$4B4C721B5CEFB1666E7F6C9B2D1216F0 kTXNUseBottomline;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNUseCGContextRefBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNUseCGContextRefMask;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNUseCarbonEvents;
$B85C30449C4709C800E3FB33D11A2AD8 kTXNUseCurrentSelection;
$D766FF7AE3C582194CDC21050F5E362D kTXNUseEncodingWordRulesBit;
$2CE304E57CAFDF92251A2A037D806032 kTXNUseEncodingWordRulesMask;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNUseFontFallBackBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNUseFontFallBackMask;
$4B4C721B5CEFB1666E7F6C9B2D1216F0 kTXNUseInline;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNUseQDforImagingBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNUseQDforImagingMask;
$A8AF2FAB2E0E9F474FB0D44479D2B73F kTXNUseScriptDefaultValue;
$EF10D20D8AD544E2384BB467A5FE3E20 kTXNUseTemporaryMemoryBit;
$65343E7BE8168EBA7094311ED241AFA5 kTXNUseTemporaryMemoryMask;
$FF5267A6F9811035F02B8A5EDA9AD627 kTXNUseVerticalTextBit;
$2683A4F623BA08708E5B49977FE1BC5D kTXNUseVerticalTextMask;
$FEB624D7937514DA50C30D8656C6FC24 kTXNUserCanceledOperationErr;
$E59320F83BED18265AA2C43474055FCC kTXNVertical;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNVisibilityTag;
$EF10D20D8AD544E2384BB467A5FE3E20 kTXNWantGraphicsBit;
$65343E7BE8168EBA7094311ED241AFA5 kTXNWantGraphicsMask;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNWantHScrollBarBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNWantHScrollBarMask;
$EF10D20D8AD544E2384BB467A5FE3E20 kTXNWantMoviesBit;
$65343E7BE8168EBA7094311ED241AFA5 kTXNWantMoviesMask;
$EF10D20D8AD544E2384BB467A5FE3E20 kTXNWantSoundBit;
$65343E7BE8168EBA7094311ED241AFA5 kTXNWantSoundMask;
$4F9EA06D3D2E52E352DA5662BE6E4BEA kTXNWantVScrollBarBit;
$3E3284370D0C448FD046A7A046297FF5 kTXNWantVScrollBarMask;
$CF24C7BFBB11BED3F33F616A9D6ADEC1 kTXNWillDefaultToATSUIBit;
$86897ABA6C0BEAF6144B313F86E65B7B kTXNWillDefaultToATSUIMask;
$CF24C7BFBB11BED3F33F616A9D6ADEC1 kTXNWillDefaultToCarbonEventBit;
$86897ABA6C0BEAF6144B313F86E65B7B kTXNWillDefaultToCarbonEventMask;
$CFDF783D32EDE4E13172FEE3BADE512A kTXNWordWrapStateTag;
$FD0BD316F2BBD909B5FBCB7E3B7055DB kT_NULL;
$89D722DEA9D8228358FF65E641FB59D1 kT_UNSPEC;
$40B1D294FCB105E6FD797FB89EF6F7A3 kTabCharCode;
$5CDB6810CF5FAA70771C826E258B46A2 kTaggingInfoNonStandard;
$F7247E5962708F04BC704908F5CB3C56 kTallCapsSelector;
$1AC1C93A58AB6CB66948DE5864455995 kTaskCreationException;
$7F3E7E1AB57D7076B1F8652C10AC5339 kTaskLevel;
$1AC1C93A58AB6CB66948DE5864455995 kTaskTerminationException;
$191BACAFE1C79A4AFD6F08B231C40E86 kTemporaryFolderType;
$C61609BB0F455BF0C49EDE98D48A29D1 kTerminateIOProcessMsg;
$3047220F3D7A398B0972C14C1F499FC6 kTextEncodingBaseName;
$2546C8C994797B80B830E66B94CC4353 kTextEncodingBig5;
$2546C8C994797B80B830E66B94CC4353 kTextEncodingBig5_HKSCS_1999;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingCNS_11643_92_P1;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingCNS_11643_92_P2;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingCNS_11643_92_P3;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSArabic;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSBalticRim;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSCanadianFrench;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSChineseSimplif;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSChineseTrad;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSCyrillic;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSGreek;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSGreek1;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSGreek2;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSHebrew;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSIcelandic;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSJapanese;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSKorean;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSLatin1;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSLatin2;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSLatinUS;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSNordic;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSPortuguese;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSRussian;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSThai;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingDOSTurkish;
$36C9AA34640057AC0626DF422832AE95 kTextEncodingDefaultFormat;
$9FDABC3362DC4967F6B93FF129090797 kTextEncodingDefaultVariant;
$EFAFA70CE699F7BD675C385427D4FEDA kTextEncodingEBCDIC_CP037;
$EFAFA70CE699F7BD675C385427D4FEDA kTextEncodingEBCDIC_US;
$8941C85A19D58F13EE88B3C85341022C kTextEncodingEUC_CN;
$8941C85A19D58F13EE88B3C85341022C kTextEncodingEUC_JP;
$8941C85A19D58F13EE88B3C85341022C kTextEncodingEUC_KR;
$8941C85A19D58F13EE88B3C85341022C kTextEncodingEUC_TW;
$3047220F3D7A398B0972C14C1F499FC6 kTextEncodingFormatName;
$3047220F3D7A398B0972C14C1F499FC6 kTextEncodingFullName;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingGBK_95;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingGB_18030_2000;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingGB_2312_80;
$2546C8C994797B80B830E66B94CC4353 kTextEncodingHZ_GB_2312;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingISO10646_1993;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin1;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin2;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin3;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin4;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin5;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin6;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin7;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin8;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatin9;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatinArabic;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatinCyrillic;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatinGreek;
$DC4ED4ED21B8B91BFBD03085177AC1A4 kTextEncodingISOLatinHebrew;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_CN;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_CN_EXT;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_JP;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_JP_1;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_JP_2;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_JP_3;
$7561B293AA21EBD631CC29ADA5881722 kTextEncodingISO_2022_KR;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingJIS_C6226_78;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingJIS_X0201_76;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingJIS_X0208_83;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingJIS_X0208_90;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingJIS_X0212_90;
$2546C8C994797B80B830E66B94CC4353 kTextEncodingKOI8_R;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingKSC_5601_87;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingKSC_5601_92_Johab;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacArabic;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacArmenian;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacBengali;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacBurmese;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacCeltic;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacCentralEurRoman;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacChineseSimp;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacChineseTrad;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacCroatian;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacCyrillic;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacDevanagari;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacDingbats;
$6E54D1147C1370CC117E7899140E4DED kTextEncodingMacEastEurRoman;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacEthiopic;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacExtArabic;
$FD17C85784B05078C07F6E9B092D967F kTextEncodingMacFarsi;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacGaelic;
$6E54D1147C1370CC117E7899140E4DED kTextEncodingMacGeez;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacGeorgian;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacGreek;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacGujarati;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacGurmukhi;
$A3569E236DE31A7BDE774BC6677BC801 kTextEncodingMacHFS;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacHebrew;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacIcelandic;
$FD17C85784B05078C07F6E9B092D967F kTextEncodingMacInuit;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacJapanese;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacKannada;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacKeyboardGlyphs;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacKhmer;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacKorean;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacLaotian;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacMalayalam;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacMongolian;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacOriya;
$6E54D1147C1370CC117E7899140E4DED kTextEncodingMacRSymbol;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacRoman;
$2546C8C994797B80B830E66B94CC4353 kTextEncodingMacRomanLatin1;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacRomanian;
$6E54D1147C1370CC117E7899140E4DED kTextEncodingMacSimpChinese;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacSinhalese;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacSymbol;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacTamil;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacTelugu;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacThai;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacTibetan;
$6E54D1147C1370CC117E7899140E4DED kTextEncodingMacTradChinese;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacTurkish;
$FD17C85784B05078C07F6E9B092D967F kTextEncodingMacUkrainian;
$BD6E4D485EC21FDE858B33FD333F62CA kTextEncodingMacUnicode;
$6E54D1147C1370CC117E7899140E4DED kTextEncodingMacUninterp;
$FD17C85784B05078C07F6E9B092D967F kTextEncodingMacVT100;
$4AC737C8C4F33FD6FC70855C4ED9EEDE kTextEncodingMacVietnamese;
$1C68911ED9CE8D5027C6DB73AEB29337 kTextEncodingMultiRun;
$3BC92C9A303E899A4770DA59EA957D4C kTextEncodingNextStepJapanese;
$3BC92C9A303E899A4770DA59EA957D4C kTextEncodingNextStepLatin;
$2546C8C994797B80B830E66B94CC4353 kTextEncodingShiftJIS;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingShiftJIS_X0213_00;
$1CEF9B142B13ABBC75B2907DE3E60BFC kTextEncodingUS_ASCII;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeDefault;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeV1_1;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeV2_0;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeV2_1;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeV3_0;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeV3_1;
$AE6D121E4AB3DF728E9C7F00B24FD5F7 kTextEncodingUnicodeV3_2;
$1C68911ED9CE8D5027C6DB73AEB29337 kTextEncodingUnknown;
$3047220F3D7A398B0972C14C1F499FC6 kTextEncodingVariantName;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsANSI;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsArabic;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsBalticRim;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsCyrillic;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsGreek;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsHebrew;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsKoreanJohab;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsLatin1;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsLatin2;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsLatin5;
$2BAF925D252C54092A9203465E07E5D1 kTextEncodingWindowsVietnamese;
$5159DF5F69DB4B07E5314ED3C5415015 kTextEncodingsFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kTextEncodingsFolderType;
$DCE09C5AC8576D753F0EFEA779280476 kTextInputObjectTag;
$F0BF66F4D8DA266C95246F4684023C6B kTextLanguageDontCare;
$973DC6726FA38C189808978C839B0622 kTextMalformedInputErr;
$F0BF66F4D8DA266C95246F4684023C6B kTextRegionDontCare;
$F0BF66F4D8DA266C95246F4684023C6B kTextScriptDontCare;
$2D53C2E3A90C12ACB14D730A0953F9ED kTextService;
$0CE592B5184B238B16AB67F4BE1A6C98 kTextServiceClass;
$A6D75AC4FC37CA558D2C957124FF6D19 kTextServiceVersion2;
$29926AB924E42B27C90E0FDA4D67BBF6 kTextSpacingType;
$B9D4DC874B42BD130AE5A541E817862D kTextToSpeechSynthType;
$B9D4DC874B42BD130AE5A541E817862D kTextToSpeechVoiceBundleType;
$B9D4DC874B42BD130AE5A541E817862D kTextToSpeechVoiceFileType;
$B9D4DC874B42BD130AE5A541E817862D kTextToSpeechVoiceType;
$973DC6726FA38C189808978C839B0622 kTextUndefinedElementErr;
$973DC6726FA38C189808978C839B0622 kTextUnsupportedEncodingErr;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeActiveAlertBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActiveAlertTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActiveBevelButtonTextColor;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeActiveDialogBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActiveDialogTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActiveDocumentWindowTitleTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActiveMenuItemTextColor;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeActiveModelessDialogBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActiveModelessDialogTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActiveMovableModalWindowTitleTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActivePlacardTextColor;
$E65D4FF86878D74116A7F6866682FF94 kThemeActivePopupArrowBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActivePopupButtonTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActivePopupLabelTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActivePopupWindowTitleColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActivePushButtonTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActiveRootMenuTextColor;
$E65D4FF86878D74116A7F6866682FF94 kThemeActiveScrollBarDelimiterBrush;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeActiveUtilityWindowBackgroundBrush;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeActiveUtilityWindowTitleTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeActiveWindowHeaderTextColor;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentArrowDoubleArrow;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentArrowDownArrow;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentArrowLeftArrow;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentArrowUpArrow;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentDefault;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentDrawIndicatorOnly;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentFocus;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentHeaderButtonLeftNeighborSelected;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentHeaderButtonNoShadow;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentHeaderButtonRightNeighborSelected;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentHeaderButtonShadowOnly;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentHeaderButtonSortUp;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentHeaderMenuButton;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentNoShadow;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentNone;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentRightToLeft;
$BBD69851473C954C32311E783D141B65 kThemeAdornmentShadowOnly;
$502621A06FC891DA363F192D1D6A2A5D kThemeAlertHeaderFont;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeAlertWindow;
$054FB9059324A3268B719DC8DD47A459 kThemeAliasArrowCursor;
$9342860DAE3C9357C7E4FC628E27D179 kThemeAppearanceFileNameTag;
$E65D4FF86878D74116A7F6866682FF94 kThemeAppleGuideCoachmarkBrush;
$502621A06FC891DA363F192D1D6A2A5D kThemeApplicationFont;
$D6AB614F3AF5C18C600901167F1AD27C kThemeArrow3pt;
$D6AB614F3AF5C18C600901167F1AD27C kThemeArrow5pt;
$D6AB614F3AF5C18C600901167F1AD27C kThemeArrow7pt;
$D6AB614F3AF5C18C600901167F1AD27C kThemeArrow9pt;
$AF8A08269BC4FE226BE3394C79688285 kThemeArrowButton;
$054FB9059324A3268B719DC8DD47A459 kThemeArrowCursor;
$1DF4ECF446FBC7CDA716088123AD9993 kThemeArrowDown;
$1DF4ECF446FBC7CDA716088123AD9993 kThemeArrowLeft;
$1DF4ECF446FBC7CDA716088123AD9993 kThemeArrowRight;
$1DF4ECF446FBC7CDA716088123AD9993 kThemeArrowUp;
$54F67C7F9189758AAD8AD4A7128F8CF9 kThemeBackgroundListViewWindowHeader;
$54F67C7F9189758AAD8AD4A7128F8CF9 kThemeBackgroundPlacard;
$54F67C7F9189758AAD8AD4A7128F8CF9 kThemeBackgroundSecondaryGroupBox;
$54F67C7F9189758AAD8AD4A7128F8CF9 kThemeBackgroundTabPane;
$54F67C7F9189758AAD8AD4A7128F8CF9 kThemeBackgroundWindowHeader;
$AF8A08269BC4FE226BE3394C79688285 kThemeBevelButton;
$1943A17EDBCC9198906C7F386D949F4C kThemeBottomInsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeBottomOutsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeBottomTrackPressed;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushActiveAreaFill;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushAlertBackgroundActive;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushAlertBackgroundInactive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushAppleGuideCoachmark;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushBevelActiveDark;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushBevelActiveLight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushBevelInactiveDark;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushBevelInactiveLight;
$45555D332D172C4C482FD4E35899E61E kThemeBrushBlack;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonActiveDarkHighlight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonActiveDarkShadow;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonActiveLightHighlight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonActiveLightShadow;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonFaceActive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonFaceInactive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonFacePressed;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonFrameActive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonFrameInactive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonInactiveDarkHighlight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonInactiveDarkShadow;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonInactiveLightHighlight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonInactiveLightShadow;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonPressedDarkHighlight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonPressedDarkShadow;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonPressedLightHighlight;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushButtonPressedLightShadow;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushChasingArrows;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushDialogBackgroundActive;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushDialogBackgroundInactive;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushDocumentWindowBackground;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushDragHilite;
$97517C217A2D488F90D1826959958036 kThemeBrushDrawerBackground;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushFinderWindowBackground;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushFocusHighlight;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushIconLabelBackground;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushIconLabelBackgroundSelected;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushListViewBackground;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushListViewSeparator;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushListViewSortColumnBackground;
$97517C217A2D488F90D1826959958036 kThemeBrushMenuBackground;
$97517C217A2D488F90D1826959958036 kThemeBrushMenuBackgroundSelected;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushModelessDialogBackgroundActive;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushModelessDialogBackgroundInactive;
$97517C217A2D488F90D1826959958036 kThemeBrushMovableModalBackground;
$4B77551DBF5CBE16BE8D4A520F2BCBEC kThemeBrushNotificationWindowBackground;
$3C6B1BBA03C3AA41986B663FAADA2669 kThemeBrushPassiveAreaFill;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushPopupArrowActive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushPopupArrowInactive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushPopupArrowPressed;
$45555D332D172C4C482FD4E35899E61E kThemeBrushPrimaryHighlightColor;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushScrollBarDelimiterActive;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushScrollBarDelimiterInactive;
$45555D332D172C4C482FD4E35899E61E kThemeBrushSecondaryHighlightColor;
$362283CE3903912DCE1BF0557EC54E0A kThemeBrushSheetBackground;
$97517C217A2D488F90D1826959958036 kThemeBrushSheetBackgroundOpaque;
$97517C217A2D488F90D1826959958036 kThemeBrushSheetBackgroundTransparent;
$7807CBC478D0C000DE821F6EC9B7CB7A kThemeBrushStaticAreaFill;
$97517C217A2D488F90D1826959958036 kThemeBrushToolbarBackground;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushUtilityWindowBackgroundActive;
$F8A95FAA97424041F9D49536D4C3D1EC kThemeBrushUtilityWindowBackgroundInactive;
$45555D332D172C4C482FD4E35899E61E kThemeBrushWhite;
$17A35A63C9C0BE283E9353162CC79176 kThemeButtonMixed;
$17A35A63C9C0BE283E9353162CC79176 kThemeButtonOff;
$17A35A63C9C0BE283E9353162CC79176 kThemeButtonOn;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeChasingArrowsBrush;
$AF8A08269BC4FE226BE3394C79688285 kThemeCheckBox;
$2722B88B58FE03DE138B496FCA485F63 kThemeCheckBoxCheckMark;
$2722B88B58FE03DE138B496FCA485F63 kThemeCheckBoxClassicX;
$054FB9059324A3268B719DC8DD47A459 kThemeClosedHandCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeContextualMenuArrowCursor;
$72AA94340DD82734DB4A085B44863156 kThemeControlSoundsMask;
$054FB9059324A3268B719DC8DD47A459 kThemeCopyArrowCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeCountingDownHandCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeCountingUpAndDownHandCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeCountingUpHandCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeCrossCursor;
$502621A06FC891DA363F192D1D6A2A5D kThemeCurrentPortFont;
$7F951BF6BEB28F03A35ACB1A0B90C112 kThemeCustomThemesFileType;
$7F951BF6BEB28F03A35ACB1A0B90C112 kThemeDataFileType;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeDblClickCollapseTag;
$CECA00623C57FA40B8F68C8E8BB25390 kThemeDefaultAdornment;
$9342860DAE3C9357C7E4FC628E27D179 kThemeDesktopPatternNameTag;
$9342860DAE3C9357C7E4FC628E27D179 kThemeDesktopPatternTag;
$9342860DAE3C9357C7E4FC628E27D179 kThemeDesktopPictureAliasTag;
$9342860DAE3C9357C7E4FC628E27D179 kThemeDesktopPictureAlignmentTag;
$9342860DAE3C9357C7E4FC628E27D179 kThemeDesktopPictureNameTag;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeDialogWindow;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeDisabledMenuItemTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeDisabledRootMenuTextColor;
$AF8A08269BC4FE226BE3394C79688285 kThemeDisclosureButton;
$17A35A63C9C0BE283E9353162CC79176 kThemeDisclosureDown;
$17A35A63C9C0BE283E9353162CC79176 kThemeDisclosureLeft;
$17A35A63C9C0BE283E9353162CC79176 kThemeDisclosureRight;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeDocumentWindow;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeDocumentWindowBackgroundBrush;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeDragHiliteBrush;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundDragging;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundGrowUtilWindow;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundGrowWindow;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundMoveAlert;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundMoveDialog;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundMoveIcon;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundMoveUtilWindow;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundMoveWindow;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundNone;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundScrollBarArrowDecreasing;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundScrollBarArrowIncreasing;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundScrollBarGhost;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundScrollBarThumb;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundSliderGhost;
$38122B22BA272F31FAC18AA53F8ECC57 kThemeDragSoundSliderThumb;
$CECA00623C57FA40B8F68C8E8BB25390 kThemeDrawIndicatorOnly;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeDrawerWindow;
$502621A06FC891DA363F192D1D6A2A5D kThemeEmphasizedSystemFont;
$9342860DAE3C9357C7E4FC628E27D179 kThemeExamplePictureIDTag;
$72AA94340DD82734DB4A085B44863156 kThemeFinderSoundsMask;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeFinderWindowBackgroundBrush;
$CECA00623C57FA40B8F68C8E8BB25390 kThemeFocusAdornment;
$E65D4FF86878D74116A7F6866682FF94 kThemeFocusHighlightBrush;
$0E640C4DDE8DBB6DD782A226C9210351 kThemeGrowDown;
$0E640C4DDE8DBB6DD782A226C9210351 kThemeGrowLeft;
$0E640C4DDE8DBB6DD782A226C9210351 kThemeGrowRight;
$0E640C4DDE8DBB6DD782A226C9210351 kThemeGrowUp;
$9342860DAE3C9357C7E4FC628E27D179 kThemeHighlightColorNameTag;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeHighlightColorTag;
$054FB9059324A3268B719DC8DD47A459 kThemeIBeamCursor;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeIconLabelBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeIconLabelTextColor;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeInactiveAlertBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactiveAlertTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactiveBevelButtonTextColor;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeInactiveDialogBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactiveDialogTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeInactiveDocumentWindowTitleTextColor;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeInactiveModelessDialogBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactiveModelessDialogTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeInactiveMovableModalWindowTitleTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactivePlacardTextColor;
$E65D4FF86878D74116A7F6866682FF94 kThemeInactivePopupArrowBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactivePopupButtonTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeInactivePopupLabelTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeInactivePopupWindowTitleColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactivePushButtonTextColor;
$E65D4FF86878D74116A7F6866682FF94 kThemeInactiveScrollBarDelimiterBrush;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeInactiveUtilityWindowBackgroundBrush;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeInactiveUtilityWindowTitleTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeInactiveWindowHeaderTextColor;
$AF8A08269BC4FE226BE3394C79688285 kThemeIncDecButton;
$55C3482291366F926B0FAB832E4E5FA1 kThemeIndeterminateBar;
$502621A06FC891DA363F192D1D6A2A5D kThemeLabelFont;
$AF8A08269BC4FE226BE3394C79688285 kThemeLargeBevelButton;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeLargeIndeterminateBar;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeLargeProgressBar;
$AF8A08269BC4FE226BE3394C79688285 kThemeLargeRoundButton;
$A91E3FEAC91E637E3BBA7BCB4506DE6C kThemeLargeTabHeight;
$A91E3FEAC91E637E3BBA7BCB4506DE6C kThemeLargeTabHeightMax;
$1943A17EDBCC9198906C7F386D949F4C kThemeLeftInsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeLeftOutsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeLeftTrackPressed;
$AF8A08269BC4FE226BE3394C79688285 kThemeListHeaderButton;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeListViewBackgroundBrush;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeListViewSeparatorBrush;
$BFBD6476C4F3EC8704A1A36F4B5ADDBB kThemeListViewSortColumnBackgroundBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemeListViewTextColor;
$AF8A08269BC4FE226BE3394C79688285 kThemeMediumBevelButton;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeMediumIndeterminateBar;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeMediumProgressBar;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeMediumScrollBar;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeMediumSlider;
$F236117EE90E48E68C6FEE902A8C8F1F kThemeMenuActive;
$966C5ADD57B1091738984EDEFE8DE88A kThemeMenuBarNormal;
$966C5ADD57B1091738984EDEFE8DE88A kThemeMenuBarSelected;
$F236117EE90E48E68C6FEE902A8C8F1F kThemeMenuDisabled;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemAtBottom;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemAtTop;
$502621A06FC891DA363F192D1D6A2A5D kThemeMenuItemCmdKeyFont;
$502621A06FC891DA363F192D1D6A2A5D kThemeMenuItemFont;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemHasIcon;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemHierBackground;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemHierarchical;
$502621A06FC891DA363F192D1D6A2A5D kThemeMenuItemMarkFont;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemNoBackground;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemPlain;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemPopUpBackground;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemScrollDownArrow;
$1BAB9C9FCCFDB5C7C8E06BAD579F3645 kThemeMenuItemScrollUpArrow;
$F236117EE90E48E68C6FEE902A8C8F1F kThemeMenuSelected;
$72AA94340DD82734DB4A085B44863156 kThemeMenuSoundsMask;
$4C2508511D797139CA94931BE75A9AD2 kThemeMenuSquareMenuBar;
$502621A06FC891DA363F192D1D6A2A5D kThemeMenuTitleFont;
$C605909FC33F552E6A3A1938E70FB6D2 kThemeMenuTypeHierarchical;
$C605909FC33F552E6A3A1938E70FB6D2 kThemeMenuTypeInactive;
$C605909FC33F552E6A3A1938E70FB6D2 kThemeMenuTypePopUp;
$C605909FC33F552E6A3A1938E70FB6D2 kThemeMenuTypePullDown;
$0D9886A02301B8A6DE3639311DF14704 kThemeMetricBestListHeaderHeight;
$0D9886A02301B8A6DE3639311DF14704 kThemeMetricCheckBoxGlyphHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricCheckBoxHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricCheckBoxWidth;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricDisclosureButtonHeight;
$0D9886A02301B8A6DE3639311DF14704 kThemeMetricDisclosureButtonSize;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricDisclosureButtonWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricDisclosureTriangleHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricDisclosureTriangleWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricEditTextFrameOutset;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricEditTextWhitespace;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricFocusRectOutset;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricHSliderHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricHSliderTickHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricImageWellThickness;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricLargeProgressBarThickness;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricLargeRoundButtonSize;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricLargeTabCapsWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricLargeTabHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricListBoxFrameOutset;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricListHeaderHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricLittleArrowsHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricLittleArrowsWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuExcludedMarkColumnWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuIconTrailingEdgeMargin;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuIndentWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuMarkColumnWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuMarkIndent;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuTextLeadingEdgeMargin;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricMenuTextTrailingEdgeMargin;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricNormalProgressBarThickness;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricPaneSplitterHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricPopupButtonHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricPrimaryGroupBoxContentInset;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricProgressBarShadowOutset;
$0D9886A02301B8A6DE3639311DF14704 kThemeMetricProgressBarThickness;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricPullDownHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricPushButtonHeight;
$0D9886A02301B8A6DE3639311DF14704 kThemeMetricRadioButtonGlyphHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricRadioButtonHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricRadioButtonWidth;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricRelevanceIndicatorHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricResizeControlHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricRoundButtonSize;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricScrollBarOverlap;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricScrollBarWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSecondaryGroupBoxContentInset;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallCheckBoxHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallCheckBoxWidth;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallDisclosureButtonHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallDisclosureButtonWidth;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallHSliderHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallHSliderMinThumbWidth;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallHSliderTickHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallHSliderTickOffset;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallPopupButtonHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallProgressBarShadowOutset;
$0D9886A02301B8A6DE3639311DF14704 kThemeMetricSmallProgressBarThickness;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallPullDownHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallPushButtonHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallRadioButtonHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallRadioButtonWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallResizeControlHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallScrollBarWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallTabCapsWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricSmallTabHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallVSliderMinThumbHeight;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallVSliderTickOffset;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallVSliderTickWidth;
$8F6C2958AAF03F02C8D077C7133019FC kThemeMetricSmallVSliderWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricTabFrameOverlap;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricTabIndentOrStyle;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricTabOverlap;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricTitleBarControlsHeight;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricVSliderTickWidth;
$F096B7958F722F2E8F33E5270ADD2C4E kThemeMetricVSliderWidth;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeMovableAlertWindow;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeMovableDialogWindow;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeNameTag;
$CECA00623C57FA40B8F68C8E8BB25390 kThemeNoAdornment;
$72AA94340DD82734DB4A085B44863156 kThemeNoSounds;
$AF8A08269BC4FE226BE3394C79688285 kThemeNormalCheckBox;
$AF8A08269BC4FE226BE3394C79688285 kThemeNormalRadioButton;
$054FB9059324A3268B719DC8DD47A459 kThemeNotAllowedCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeOpenHandCursor;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemePlainDialogWindow;
$7F951BF6BEB28F03A35ACB1A0B90C112 kThemePlatinumFileType;
$054FB9059324A3268B719DC8DD47A459 kThemePlusCursor;
$054FB9059324A3268B719DC8DD47A459 kThemePointingHandCursor;
$AF8A08269BC4FE226BE3394C79688285 kThemePopupButton;
$79C5C04FB764DDCE2024DC8D5E919E44 kThemePopupTabCenterOnOffset;
$79C5C04FB764DDCE2024DC8D5E919E44 kThemePopupTabCenterOnWindow;
$79C5C04FB764DDCE2024DC8D5E919E44 kThemePopupTabNormalPosition;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemePopupWindow;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemePressedBevelButtonTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemePressedPlacardTextColor;
$E65D4FF86878D74116A7F6866682FF94 kThemePressedPopupArrowBrush;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemePressedPopupButtonTextColor;
$13F38FDE1E2B78F79E1D8FD54766EC4F kThemePressedPushButtonTextColor;
$55C3482291366F926B0FAB832E4E5FA1 kThemeProgressBar;
$AF8A08269BC4FE226BE3394C79688285 kThemePushButton;
$502621A06FC891DA363F192D1D6A2A5D kThemePushButtonFont;
$AF8A08269BC4FE226BE3394C79688285 kThemeRadioButton;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeRelevanceBar;
$054FB9059324A3268B719DC8DD47A459 kThemeResizeLeftCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeResizeLeftRightCursor;
$054FB9059324A3268B719DC8DD47A459 kThemeResizeRightCursor;
$1943A17EDBCC9198906C7F386D949F4C kThemeRightInsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeRightOutsideArrowPressed;
$CECA00623C57FA40B8F68C8E8BB25390 kThemeRightToLeftAdornment;
$1943A17EDBCC9198906C7F386D949F4C kThemeRightTrackPressed;
$AF8A08269BC4FE226BE3394C79688285 kThemeRoundButton;
$AF8A08269BC4FE226BE3394C79688285 kThemeRoundedBevelButton;
$3E1951F246B8D5E3E54B256C93F25B26 kThemeSavvyMenuResponse;
$55C3482291366F926B0FAB832E4E5FA1 kThemeScrollBar;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeScrollBarArrowStyleTag;
$F7D86E6A53942C0CA60F347A3A35A298 kThemeScrollBarArrowsLowerRight;
$F7D86E6A53942C0CA60F347A3A35A298 kThemeScrollBarArrowsSingle;
$028187ACE32DAAA463A6E167F8C07F44 kThemeScrollBarThumbNormal;
$028187ACE32DAAA463A6E167F8C07F44 kThemeScrollBarThumbProportional;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeScrollBarThumbStyleTag;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeSelectedMenuItemTextColor;
$B9DAAD4BA7354E79CAB0A08055592B37 kThemeSelectedRootMenuTextColor;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeShadowDialogWindow;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeSheetWindow;
$55C3482291366F926B0FAB832E4E5FA1 kThemeSlider;
$AF8A08269BC4FE226BE3394C79688285 kThemeSmallBevelButton;
$AF8A08269BC4FE226BE3394C79688285 kThemeSmallCheckBox;
$502621A06FC891DA363F192D1D6A2A5D kThemeSmallEmphasizedSystemFont;
$AF8A08269BC4FE226BE3394C79688285 kThemeSmallRadioButton;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeSmallScrollBar;
$C04DE4353F6ADED9580C7CBD3260B454 kThemeSmallSlider;
$502621A06FC891DA363F192D1D6A2A5D kThemeSmallSystemFont;
$9342860DAE3C9357C7E4FC628E27D179 kThemeSmallSystemFontTag;
$A91E3FEAC91E637E3BBA7BCB4506DE6C kThemeSmallTabHeight;
$A91E3FEAC91E637E3BBA7BCB4506DE6C kThemeSmallTabHeightMax;
$9342860DAE3C9357C7E4FC628E27D179 kThemeSmoothFontEnabledTag;
$9342860DAE3C9357C7E4FC628E27D179 kThemeSmoothFontMinSizeTag;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundAlertClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundAlertOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundBalloonClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundBalloonOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundBevelEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundBevelExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundBevelPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundBevelRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundButtonEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundButtonExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundButtonPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundButtonRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCancelButtonEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCancelButtonExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCancelButtonPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCancelButtonRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCheckboxEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCheckboxExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCheckboxPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCheckboxRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundCopyDone;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDefaultButtonEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDefaultButtonExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDefaultButtonPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDefaultButtonRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDialogClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDialogOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDisclosureEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDisclosureExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDisclosurePress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDisclosureRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDiskEject;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDiskInsert;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDragTargetDrop;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDragTargetHilite;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundDragTargetUnhilite;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundEmptyTrash;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundFinderDragOffIcon;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundFinderDragOnIcon;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLaunchApp;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLittleArrowDnPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLittleArrowDnRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLittleArrowEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLittleArrowExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLittleArrowUpPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundLittleArrowUpRelease;
$9342860DAE3C9357C7E4FC628E27D179 kThemeSoundMaskTag;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundMenuClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundMenuItemHilite;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundMenuItemRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundMenuOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundNewItem;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundNone;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundPopupEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundPopupExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundPopupPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundPopupRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundPopupWindowClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundPopupWindowOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundRadioEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundRadioExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundRadioPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundRadioRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundReceiveDrop;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundResolveAlias;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundScrollArrowEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundScrollArrowExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundScrollArrowPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundScrollArrowRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundScrollEndOfTrack;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundScrollTrackPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundSelectItem;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundSliderEndOfTrack;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundSliderTrackPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundTabEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundTabExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundTabPressed;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundTabRelease;
$7F951BF6BEB28F03A35ACB1A0B90C112 kThemeSoundTrackFileType;
$9342860DAE3C9357C7E4FC628E27D179 kThemeSoundTrackNameTag;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCloseEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCloseExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinClosePress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCloseRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCollapseEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCollapseExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCollapsePress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinCollapseRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinDragBoundary;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinZoomEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinZoomExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinZoomPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWinZoomRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowActivate;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowCollapseDown;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowCollapseUp;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowZoomIn;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundUtilWindowZoomOut;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowActivate;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowClose;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCloseEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCloseExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowClosePress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCloseRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCollapseDown;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCollapseEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCollapseExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCollapsePress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCollapseRelease;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowCollapseUp;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowDragBoundary;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowOpen;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowZoomEnter;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowZoomExit;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowZoomIn;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowZoomOut;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowZoomPress;
$9EF1C8F32A001458479463B64424CA4C kThemeSoundWindowZoomRelease;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeSoundsEnabledTag;
$054FB9059324A3268B719DC8DD47A459 kThemeSpinningCursor;
$4D9F0F8E7F4280BB56310A3A74DA80D6 kThemeStateActive;
$8E1B7E8AF3D33A9C350C55B9BFBFA7D7 kThemeStateDisabled;
$4D9F0F8E7F4280BB56310A3A74DA80D6 kThemeStateInactive;
$4D9F0F8E7F4280BB56310A3A74DA80D6 kThemeStatePressed;
$9BBCBC1C0D787D6D1674030B677C6181 kThemeStatePressedDown;
$9BBCBC1C0D787D6D1674030B677C6181 kThemeStatePressedUp;
$4D9F0F8E7F4280BB56310A3A74DA80D6 kThemeStateRollover;
$4D9F0F8E7F4280BB56310A3A74DA80D6 kThemeStateUnavailable;
$4D9F0F8E7F4280BB56310A3A74DA80D6 kThemeStateUnavailableInactive;
$502621A06FC891DA363F192D1D6A2A5D kThemeSystemFont;
$502621A06FC891DA363F192D1D6A2A5D kThemeSystemFontDetail;
$502621A06FC891DA363F192D1D6A2A5D kThemeSystemFontDetailEmphasized;
$9342860DAE3C9357C7E4FC628E27D179 kThemeSystemFontTag;
$DB0CF4C7BA47BD023315A1177BEA7492 kThemeTabEast;
$09BADE211816920B750DB196309E036A kThemeTabFront;
$09BADE211816920B750DB196309E036A kThemeTabFrontInactive;
$09BADE211816920B750DB196309E036A kThemeTabFrontUnavailable;
$09BADE211816920B750DB196309E036A kThemeTabNonFront;
$09BADE211816920B750DB196309E036A kThemeTabNonFrontInactive;
$09BADE211816920B750DB196309E036A kThemeTabNonFrontPressed;
$09BADE211816920B750DB196309E036A kThemeTabNonFrontUnavailable;
$DB0CF4C7BA47BD023315A1177BEA7492 kThemeTabNorth;
$A91E3FEAC91E637E3BBA7BCB4506DE6C kThemeTabPaneOverlap;
$DB0CF4C7BA47BD023315A1177BEA7492 kThemeTabSouth;
$DB0CF4C7BA47BD023315A1177BEA7492 kThemeTabWest;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorAlertActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorAlertInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorBevelButtonActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorBevelButtonInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorBevelButtonPressed;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorBevelButtonStickyActive;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorBevelButtonStickyInactive;
$BC955F336BA51752C3ACB31811FD9C2A kThemeTextColorBlack;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorDialogActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorDialogInactive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorDocumentWindowTitleActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorDocumentWindowTitleInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorIconLabel;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorIconLabelSelected;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorListView;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorMenuItemActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorMenuItemDisabled;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorMenuItemSelected;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorModelessDialogActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorModelessDialogInactive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorMovableModalWindowTitleActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorMovableModalWindowTitleInactive;
$A61C89728A9A916804A244D6C069EC79 kThemeTextColorNotification;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPlacardActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPlacardInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPlacardPressed;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPopupButtonActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPopupButtonInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPopupButtonPressed;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorPopupLabelActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorPopupLabelInactive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorPopupWindowTitleActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorPopupWindowTitleInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPushButtonActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPushButtonInactive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorPushButtonPressed;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorRootMenuActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorRootMenuDisabled;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorRootMenuSelected;
$F8AFC5972A261092D9395D44A697410A kThemeTextColorSystemDetail;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorTabFrontActive;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorTabFrontInactive;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorTabNonFrontActive;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorTabNonFrontInactive;
$87114BC07A1414CF818DB358B27C322E kThemeTextColorTabNonFrontPressed;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorUtilityWindowTitleActive;
$4CB29B8BCC8EF1B3F984C0BC3B0187A4 kThemeTextColorUtilityWindowTitleInactive;
$BC955F336BA51752C3ACB31811FD9C2A kThemeTextColorWhite;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorWindowHeaderActive;
$414A6095526036E1990929D18BC3A3B4 kThemeTextColorWindowHeaderInactive;
$BAA3CA74092E56F981CAC47441F89B4C kThemeThumbDownward;
$BAA3CA74092E56F981CAC47441F89B4C kThemeThumbPlain;
$1943A17EDBCC9198906C7F386D949F4C kThemeThumbPressed;
$BAA3CA74092E56F981CAC47441F89B4C kThemeThumbUpward;
$502621A06FC891DA363F192D1D6A2A5D kThemeToolbarFont;
$1943A17EDBCC9198906C7F386D949F4C kThemeTopInsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeTopOutsideArrowPressed;
$1943A17EDBCC9198906C7F386D949F4C kThemeTopTrackPressed;
$1BAEECA73EA76B074F4E040C244E5F29 kThemeTrackActive;
$1BAEECA73EA76B074F4E040C244E5F29 kThemeTrackDisabled;
$EBEE352CCA52CC19EAD5E6DB374D24C3 kThemeTrackHasFocus;
$EBEE352CCA52CC19EAD5E6DB374D24C3 kThemeTrackHorizontal;
$1BAEECA73EA76B074F4E040C244E5F29 kThemeTrackInactive;
$EBEE352CCA52CC19EAD5E6DB374D24C3 kThemeTrackNoScrollBarArrows;
$1BAEECA73EA76B074F4E040C244E5F29 kThemeTrackNothingToScroll;
$EBEE352CCA52CC19EAD5E6DB374D24C3 kThemeTrackRightToLeft;
$EBEE352CCA52CC19EAD5E6DB374D24C3 kThemeTrackShowThumb;
$EBEE352CCA52CC19EAD5E6DB374D24C3 kThemeTrackThumbRgnIsNotGhost;
$9342860DAE3C9357C7E4FC628E27D179 kThemeUserDefinedTag;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeUtilitySideWindow;
$DF17D46BB949564AF4B8FE7FFE6FBEDB kThemeUtilityWindow;
$502621A06FC891DA363F192D1D6A2A5D kThemeUtilityWindowTitleFont;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeVariantBaseTintTag;
$B8B37CCD37A6AFDD54E0D5872B3D9030 kThemeVariantNameTag;
$502621A06FC891DA363F192D1D6A2A5D kThemeViewsFont;
$9342860DAE3C9357C7E4FC628E27D179 kThemeViewsFontSizeTag;
$9342860DAE3C9357C7E4FC628E27D179 kThemeViewsFontTag;
$054FB9059324A3268B719DC8DD47A459 kThemeWatchCursor;
$749E5E8AFAF7D01ED0449932E1B50099 kThemeWidgetABox;
$749E5E8AFAF7D01ED0449932E1B50099 kThemeWidgetBBox;
$749E5E8AFAF7D01ED0449932E1B50099 kThemeWidgetBOffBox;
$7F09B7F01F29302D25E55490C59CA5E4 kThemeWidgetCloseBox;
$7F09B7F01F29302D25E55490C59CA5E4 kThemeWidgetCollapseBox;
$7F09B7F01F29302D25E55490C59CA5E4 kThemeWidgetDirtyCloseBox;
$7F09B7F01F29302D25E55490C59CA5E4 kThemeWidgetZoomBox;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasCloseBox;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasCollapseBox;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasDirty;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasFullZoom;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasGrow;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasHorizontalZoom;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasTitleText;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowHasVerticalZoom;
$D2A1ED75D47C76C433F9E613B56E2F5D kThemeWindowIsCollapsed;
$72AA94340DD82734DB4A085B44863156 kThemeWindowSoundsMask;
$502621A06FC891DA363F192D1D6A2A5D kThemeWindowTitleFont;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kThemesFolderType;
$768C2AF2BA4795B0EBD762573A709F14 kThinkCStackBased;
$32B75A1AA46F1B1DD1726F04BCD4FBEB kThirdDepthMode;
$7FF46A4D5ACD435A7CB860BE80C6C9C7 kThirdWidthNumbersSelector;
$BCA8DD9AD937E0BFA4B6AF3F02BDD3FD kThumbnail32BitData;
$BCA8DD9AD937E0BFA4B6AF3F02BDD3FD kThumbnail8BitMask;
$0FA8C27A3576B43468EA81A201B45E80 kTileIconVariant;
$42757CFF77671F6FA20DC66BF38093F0 kTiledOnScreen;
$679D6DF2EE456031915C2D7CDB26B523 kTimingChangeRestrictedErr;
$F7247E5962708F04BC704908F5CB3C56 kTitlingCapsSelector;
$CE63137381CE1C14105FBF64756659BB kTokenRingModuleID;
$8CA7965A9B6D5E3A16AE5ABDCA34C355 kTokenRingTSDU;
$956E0F8638627E2D7345301BF56E48D3 kTooManyIOWindowsErr;
$2C8F5E59CE94E2D56FBA915CC9A36563 kToolbarCustomizeIcon;
$2C8F5E59CE94E2D56FBA915CC9A36563 kToolbarDeleteIcon;
$2C8F5E59CE94E2D56FBA915CC9A36563 kToolbarFavoritesIcon;
$2C8F5E59CE94E2D56FBA915CC9A36563 kToolbarHomeIcon;
$B95EEEF8D0A9C3F124CECCB9E5363575 kToolbarWindowClass;
$88D06B5103F7D4A3795441957757BCBC kTopLeftTipPointsLeftVariant;
$88D06B5103F7D4A3795441957757BCBC kTopLeftTipPointsUpVariant;
$88D06B5103F7D4A3795441957757BCBC kTopRightTipPointsRightVariant;
$88D06B5103F7D4A3795441957757BCBC kTopRightTipPointsUpVariant;
$1AC1C93A58AB6CB66948DE5864455995 kTraceException;
$F435855D5EF5688649DB7CA32BDFA3D5 kTrackMouseLocationOptionDontConsumeMouseUp;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kTraditionalAltFiveSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kTraditionalAltFourSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kTraditionalAltOneSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kTraditionalAltThreeSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kTraditionalAltTwoSelector;
$DF8FA5B3A997B39986F1F23A9DBFDE94 kTraditionalCharactersSelector;
$060A717C032BDC1377FEBCDE0A3906C0 kTranscodingCompositionOffSelector;
$060A717C032BDC1377FEBCDE0A3906C0 kTranscodingCompositionOnSelector;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformDisabled;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel1;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel2;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel3;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel4;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel5;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel6;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformLabel7;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformNone;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformOffline;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformOpen;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformSelected;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformSelectedDisabled;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformSelectedOffline;
$F32FB3829AF4CAC4020B15B07FEC5AAE kTransformSelectedOpen;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateGetFileTranslationList;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateGetScrapTranslationList;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateGetScrapTranslationListConsideringData;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateGetTranslatedFilename;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateIdentifyFile;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateIdentifyScrap;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateTranslateFile;
$4A8F4196499C9C363E32C0009A60AAE4 kTranslateTranslateScrap;
$F06E774AA3E7169F939E723CABD8EB02 kTranslationScrapProgressDialogID;
$EBDC59905EB821ACF1B6E12272616C56 kTranslatorCanGenerateFilename;
$29926AB924E42B27C90E0FDA4D67BBF6 kTransliterationType;
$1AC1C93A58AB6CB66948DE5864455995 kTrapException;
$191BACAFE1C79A4AFD6F08B231C40E86 kTrashFolderType;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kTrashIcon;
$D3B4ECB48BE05BA2AB340E2B30896DCC kTrashIconResource;
$8D4D07E192BE4DF49363A655628BC0D2 kTriStateSyncBit;
$8D4D07E192BE4DF49363A655628BC0D2 kTriStateSyncMask;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kTrueTypeFlatFontIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kTrueTypeFontIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kTrueTypeMultiFlatFontIcon;
$566D78D6447C4D565AE39524F2F22577 kTwoByteCode;
$882ADC82034244AFFE570DD57A3BB1C0 kTwoWayEncryptPassword;
$18BF411237F175ABCD4A1D90A0B1F6B7 kTwosComplement;
$5B004150561D8A57B6AEE998E4910F58 kTypeKCItemAttr;
$29926AB924E42B27C90E0FDA4D67BBF6 kTypographicExtrasType;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatArabicNumber;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatBlockSeparator;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatBoundaryNeutral;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatCommonNumberSeparator;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatEuroNumber;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatEuroNumberSeparator;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatEuroNumberTerminator;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatLeftRight;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatLeftRightEmbedding;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatLeftRightOverride;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatNonSpacingMark;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatNotApplicable;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatOtherNeutral;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatPopDirectionalFormat;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatRightLeft;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatRightLeftArabic;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatRightLeftEmbedding;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatRightLeftOverride;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatSegmentSeparator;
$EC424ADC0D8C9A396F3C81B54611F614 kUCBidiCatWhitespace;
$DC31969FA94C8C84691F2D5238C10307 kUCCharPropTypeBidiCategory;
$DC31969FA94C8C84691F2D5238C10307 kUCCharPropTypeCombiningClass;
$DC31969FA94C8C84691F2D5238C10307 kUCCharPropTypeGenlCategory;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollateCaseInsensitiveMask;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollateComposeInsensitiveMask;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollateDiacritInsensitiveMask;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollateDigitsAsNumberMask;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollateDigitsOverrideMask;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollatePunctuationSignificantMask;
$E46D54B808C1FDD6594362A2C42398A2 kUCCollateStandardOptions;
$16B8BA5CB40CC98C120C1A3F64C9506F kUCCollateTypeHFSExtended;
$E04E99840462EB1CB4BA40C52941E43C kUCCollateTypeMask;
$78C6DA2E6C17E9D1DFCB7A8F040ECACB kUCCollateTypeShiftBits;
$78C6DA2E6C17E9D1DFCB7A8F040ECACB kUCCollateTypeSourceMask;
$6CC5363F1BB8E39591014EDE518FA77B kUCCollateWidthInsensitiveMask;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatLetterLowercase;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatLetterModifier;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatLetterOther;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatLetterTitlecase;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatLetterUppercase;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatMarkEnclosing;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatMarkNonSpacing;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatMarkSpacingCombining;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatNumberDecimalDigit;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatNumberLetter;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatNumberOther;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatOtherControl;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatOtherFormat;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatOtherNotAssigned;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatOtherPrivateUse;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatOtherSurrogate;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctClose;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctConnector;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctDash;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctFinalQuote;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctInitialQuote;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctOpen;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatPunctOther;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSeparatorLine;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSeparatorParagraph;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSeparatorSpace;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSymbolCurrency;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSymbolMath;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSymbolModifier;
$9BBD331253536717B71472F1B96517D7 kUCGenlCatSymbolOther;
$8EE074B8B3EDE31FEBBC7836A18BD301 kUCHighSurrogateRangeEnd;
$8EE074B8B3EDE31FEBBC7836A18BD301 kUCHighSurrogateRangeStart;
$D77738F2B73D3DC04038A65DEB2377CC kUCKeyActionAutoKey;
$D77738F2B73D3DC04038A65DEB2377CC kUCKeyActionDisplay;
$D77738F2B73D3DC04038A65DEB2377CC kUCKeyActionDown;
$D77738F2B73D3DC04038A65DEB2377CC kUCKeyActionUp;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeyLayoutFeatureInfoFormat;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeyLayoutHeaderFormat;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeyModifiersToTableNumFormat;
$F45607EFF808B39E5DE29EFFD8A99F8E kUCKeyOutputGetIndexMask;
$F45607EFF808B39E5DE29EFFD8A99F8E kUCKeyOutputSequenceIndexMask;
$F45607EFF808B39E5DE29EFFD8A99F8E kUCKeyOutputStateIndexMask;
$F45607EFF808B39E5DE29EFFD8A99F8E kUCKeyOutputTestForIndexMask;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeySequenceDataIndexFormat;
$5D3A742C8FC338A631E8EA6076ACAFF5 kUCKeyStateEntryRangeFormat;
$5D3A742C8FC338A631E8EA6076ACAFF5 kUCKeyStateEntryTerminalFormat;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeyStateRecordsIndexFormat;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeyStateTerminatorsFormat;
$5FB44CF07F68BD3527423DEEC4B29887 kUCKeyToCharTableIndexFormat;
$3633B4F0E54DDA8905FCDD25F24F41EE kUCKeyTranslateNoDeadKeysBit;
$F443F2ACB751230652788204FE11215D kUCKeyTranslateNoDeadKeysMask;
$8EE074B8B3EDE31FEBBC7836A18BD301 kUCLowSurrogateRangeEnd;
$8EE074B8B3EDE31FEBBC7836A18BD301 kUCLowSurrogateRangeStart;
$F048A6B0CE64051859D76B47CC371C4C kUCOutputBufferTooSmall;
$8B91A73B8AF2D8848CD6119272C14B0D kUCTSNoKeysAddedToObjectErr;
$8B91A73B8AF2D8848CD6119272C14B0D kUCTSSearchListErr;
$DFEB5C7963D8582EC886BFBF0A9FB9A4 kUCTextBreakCharMask;
$DFEB5C7963D8582EC886BFBF0A9FB9A4 kUCTextBreakClusterMask;
$45EEDE7CF3F46250B5C08DEDD8FD6321 kUCTextBreakGoBackwardsMask;
$45EEDE7CF3F46250B5C08DEDD8FD6321 kUCTextBreakIterateMask;
$45EEDE7CF3F46250B5C08DEDD8FD6321 kUCTextBreakLeadingEdgeMask;
$DFEB5C7963D8582EC886BFBF0A9FB9A4 kUCTextBreakLineMask;
$F048A6B0CE64051859D76B47CC371C4C kUCTextBreakLocatorMissingType;
$DFEB5C7963D8582EC886BFBF0A9FB9A4 kUCTextBreakWordMask;
$D5331B598A0545B69A6466FE4C0930A5 kUIModeAllHidden;
$D5331B598A0545B69A6466FE4C0930A5 kUIModeContentHidden;
$D5331B598A0545B69A6466FE4C0930A5 kUIModeContentSuppressed;
$D5331B598A0545B69A6466FE4C0930A5 kUIModeNormal;
$813E721ECD42D7158D1EF8D108BFBDC0 kUIOptionAutoShowMenuBar;
$813E721ECD42D7158D1EF8D108BFBDC0 kUIOptionDisableAppleMenu;
$813E721ECD42D7158D1EF8D108BFBDC0 kUIOptionDisableForceQuit;
$813E721ECD42D7158D1EF8D108BFBDC0 kUIOptionDisableProcessSwitch;
$813E721ECD42D7158D1EF8D108BFBDC0 kUIOptionDisableSessionTerminate;
$18BF411237F175ABCD4A1D90A0B1F6B7 kULawCompression;
$4693F9F93A5130D57E44F485B4108586 kUNIXsdevSubType;
$855942DB10E2DA9D86518A97FFE63D4D kURL68kNotSupportedError;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLAbortInitiatedEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLAbortInitiatedMask;
$A287E71D1F69701BADB32338BADCC95C kURLAbortingState;
$855942DB10E2DA9D86518A97FFE63D4D kURLAccessNotAvailableError;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLAllBufferEventsMask;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLAllEventsMask;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLAllNonBufferEventsMask;
$855942DB10E2DA9D86518A97FFE63D4D kURLAuthenticationError;
$7E21B1CF3F19F2BF300E63CEE434414D kURLBinHexFileFlag;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLCompletedEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLCompletedEventMask;
$A287E71D1F69701BADB32338BADCC95C kURLCompletedState;
$A287E71D1F69701BADB32338BADCC95C kURLConnectingState;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLDataAvailableEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLDataAvailableEventMask;
$A287E71D1F69701BADB32338BADCC95C kURLDataAvailableState;
$7E21B1CF3F19F2BF300E63CEE434414D kURLDebinhexOnlyFlag;
$855942DB10E2DA9D86518A97FFE63D4D kURLDestinationExistsError;
$7E21B1CF3F19F2BF300E63CEE434414D kURLDirectoryListingFlag;
$7E21B1CF3F19F2BF300E63CEE434414D kURLDisplayAuthFlag;
$7E21B1CF3F19F2BF300E63CEE434414D kURLDisplayProgressFlag;
$7E21B1CF3F19F2BF300E63CEE434414D kURLDoNotDeleteOnErrorFlag;
$7E21B1CF3F19F2BF300E63CEE434414D kURLDoNotTryAnonymousFlag;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLDownloadingEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLDownloadingMask;
$A287E71D1F69701BADB32338BADCC95C kURLDownloadingState;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLErrorOccurredEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLErrorOccurredEventMask;
$A287E71D1F69701BADB32338BADCC95C kURLErrorOccurredState;
$7E21B1CF3F19F2BF300E63CEE434414D kURLExpandAndVerifyFlag;
$7E21B1CF3F19F2BF300E63CEE434414D kURLExpandFileFlag;
$855942DB10E2DA9D86518A97FFE63D4D kURLExtensionFailureError;
$855942DB10E2DA9D86518A97FFE63D4D kURLFileEmptyError;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLInitiatedEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLInitiatedEventMask;
$A287E71D1F69701BADB32338BADCC95C kURLInitiatingState;
$855942DB10E2DA9D86518A97FFE63D4D kURLInvalidCallError;
$855942DB10E2DA9D86518A97FFE63D4D kURLInvalidConfigurationError;
$855942DB10E2DA9D86518A97FFE63D4D kURLInvalidURLError;
$855942DB10E2DA9D86518A97FFE63D4D kURLInvalidURLReferenceError;
$7E21B1CF3F19F2BF300E63CEE434414D kURLIsDirectoryHintFlag;
$A287E71D1F69701BADB32338BADCC95C kURLLookingUpHostState;
$7E21B1CF3F19F2BF300E63CEE434414D kURLNoAutoRedirectFlag;
$A287E71D1F69701BADB32338BADCC95C kURLNullState;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLPercentEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLPercentEventMask;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLPeriodicEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLPeriodicEventMask;
$855942DB10E2DA9D86518A97FFE63D4D kURLProgressAlreadyDisplayedError;
$855942DB10E2DA9D86518A97FFE63D4D kURLPropertyBufferTooSmallError;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLPropertyChangedEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLPropertyChangedEventMask;
$855942DB10E2DA9D86518A97FFE63D4D kURLPropertyNotYetKnownError;
$7E21B1CF3F19F2BF300E63CEE434414D kURLReplaceExistingFlag;
$7E21B1CF3F19F2BF300E63CEE434414D kURLReservedFlag;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLResourceFoundEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLResourceFoundEventMask;
$A287E71D1F69701BADB32338BADCC95C kURLResourceFoundState;
$7E21B1CF3F19F2BF300E63CEE434414D kURLResumeDownloadFlag;
$855942DB10E2DA9D86518A97FFE63D4D kURLServerBusyError;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLSystemEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLSystemEventMask;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLTransactionCompleteEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLTransactionCompleteEventMask;
$A287E71D1F69701BADB32338BADCC95C kURLTransactionCompleteState;
$855942DB10E2DA9D86518A97FFE63D4D kURLUnknownPropertyError;
$855942DB10E2DA9D86518A97FFE63D4D kURLUnsettablePropertyError;
$855942DB10E2DA9D86518A97FFE63D4D kURLUnsupportedSchemeError;
$7E21B1CF3F19F2BF300E63CEE434414D kURLUploadFlag;
$B2E849F5A1B65A14B55FBB22D6FF2738 kURLUploadingEvent;
$FE4A7E90C3369636F8B3930F0E1DDFEF kURLUploadingMask;
$A287E71D1F69701BADB32338BADCC95C kURLUploadingState;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBAbortedError;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBAlreadyOpenErr;
$46A2A573C774DA9024FD82319DA2BC8F kUSBBadDispatchTable;
$B1733533642260DAD84CA105FECA3053 kUSBBitstufErr;
$B1733533642260DAD84CA105FECA3053 kUSBBufOvrRunErr;
$B1733533642260DAD84CA105FECA3053 kUSBBufUnderRunErr;
$B1733533642260DAD84CA105FECA3053 kUSBCRCErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBCompletionError;
$B1733533642260DAD84CA105FECA3053 kUSBDataToggleErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBDeviceBusy;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBDeviceDisconnected;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBDeviceErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBDeviceNotSuspended;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBDevicePowerProblem;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBDeviceSuspended;
$B1733533642260DAD84CA105FECA3053 kUSBEndpointStallErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBFlagsError;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBIncorrectTypeErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBInternalErr;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved1;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved10;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved2;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved3;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved4;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved5;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved6;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved7;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved8;
$CD763B96B3EBFB684C20C4674569FA82 kUSBInternalReserved9;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBInvalidBuffer;
$B1733533642260DAD84CA105FECA3053 kUSBLinkErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBNoBandwidthError;
$014FD5288BD4B84357AA142C73191259 kUSBNoDelay;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBNoDeviceErr;
$014FD5288BD4B84357AA142C73191259 kUSBNoErr;
$014FD5288BD4B84357AA142C73191259 kUSBNoTran;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBNotFound;
$46A2A573C774DA9024FD82319DA2BC8F kUSBNotHandled;
$B1733533642260DAD84CA105FECA3053 kUSBNotRespondingErr;
$B1733533642260DAD84CA105FECA3053 kUSBNotSent1Err;
$B1733533642260DAD84CA105FECA3053 kUSBNotSent2Err;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBOutOfMemoryErr;
$B1733533642260DAD84CA105FECA3053 kUSBOverRunErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBPBLengthError;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBPBVersionError;
$B1733533642260DAD84CA105FECA3053 kUSBPIDCheckErr;
$014FD5288BD4B84357AA142C73191259 kUSBPending;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBPipeIdleError;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBPipeStalledError;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBPortDisabled;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBQueueAborted;
$46A2A573C774DA9024FD82319DA2BC8F kUSBQueueFull;
$B1733533642260DAD84CA105FECA3053 kUSBRes1Err;
$B1733533642260DAD84CA105FECA3053 kUSBRes2Err;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBRqErr;
$4693F9F93A5130D57E44F485B4108586 kUSBSubType;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBTimedOut;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBTooManyPipesErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBTooManyTransactionsErr;
$B1733533642260DAD84CA105FECA3053 kUSBUnderRunErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBUnknownDeviceErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBUnknownInterfaceErr;
$46A2A573C774DA9024FD82319DA2BC8F kUSBUnknownNotification;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBUnknownPipeErr;
$F6F1DAE3670BDFFE6A0807E2F831C198 kUSBUnknownRequestErr;
$B1733533642260DAD84CA105FECA3053 kUSBWrongPIDErr;
$96730ADD5097E5BE8670B00BD2A97A8E kUTCDefaultOptions;
$057B6098282E3FF245B967EB6CBCEF02 kUTCOverflowErr;
$057B6098282E3FF245B967EB6CBCEF02 kUTCUnderflowErr;
$1FF93887DAB66F639B85849B1ED1B48F kUYVY422PixelFormat;
$58030CB495C0F1442001624CD349E98E kUnMirrorDisplayBit;
$5CDB6810CF5FAA70771C826E258B46A2 kUncertainConnection;
$E8A1810B7AC84F453CCC5F003130BDCA kUnconnectedSelector;
$36C9AA34640057AC0626DF422832AE95 kUnicode16BitFormat;
$36C9AA34640057AC0626DF422832AE95 kUnicode32BitFormat;
$586082E93EF5CAA611F993CA38AE14BD kUnicodeByteOrderMark;
$4BEF1906BC064CB8B9E1D602C52EB035 kUnicodeCanonicalCompVariant;
$4BEF1906BC064CB8B9E1D602C52EB035 kUnicodeCanonicalDecompVariant;
$3E3D04C9D977B5293139303451E801C2 kUnicodeCollationClass;
$29926AB924E42B27C90E0FDA4D67BBF6 kUnicodeDecompositionType;
$AE29ACD0F6C915704455DE6DCD523306 kUnicodeDefaultDirection;
$680711FA196A27FB133C002D33527151 kUnicodeDefaultDirectionMask;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeDirectionalityBits;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeDirectionalityMask;
$C8DC99D3AEAB107DE97D040E2A07D5AF kUnicodeDocument;
$6D03E0D254C981FC0E976D6ABDBCB43D kUnicodeFallbackCustomFirst;
$6D03E0D254C981FC0E976D6ABDBCB43D kUnicodeFallbackCustomOnly;
$6D03E0D254C981FC0E976D6ABDBCB43D kUnicodeFallbackDefaultFirst;
$6D03E0D254C981FC0E976D6ABDBCB43D kUnicodeFallbackDefaultOnly;
$572C64D4F4AC32D7D35B385D37F9C84F kUnicodeFallbackInterruptSafeMask;
$622A2FC26D2D795B6F4576A21E651181 kUnicodeFallbackSequencingBits;
$572C64D4F4AC32D7D35B385D37F9C84F kUnicodeFallbackSequencingMask;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeForceASCIIRangeBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeForceASCIIRangeMask;
$4BEF1906BC064CB8B9E1D602C52EB035 kUnicodeHFSPlusCompVariant;
$4BEF1906BC064CB8B9E1D602C52EB035 kUnicodeHFSPlusDecompVariant;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeKeepInfoBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeKeepInfoMask;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeKeepSameEncodingBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeKeepSameEncodingMask;
$AE29ACD0F6C915704455DE6DCD523306 kUnicodeLeftToRight;
$680711FA196A27FB133C002D33527151 kUnicodeLeftToRightMask;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeLooseMappingsBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeLooseMappingsMask;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeMapLineFeedToReturnBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeMapLineFeedToReturnMask;
$119F4E0EC5B07E288DE69B7EBF58E813 kUnicodeMatchOtherBaseBit;
$3FA718D968E33011B27F4C08AC9F7C45 kUnicodeMatchOtherBaseMask;
$119F4E0EC5B07E288DE69B7EBF58E813 kUnicodeMatchOtherFormatBit;
$3FA718D968E33011B27F4C08AC9F7C45 kUnicodeMatchOtherFormatMask;
$119F4E0EC5B07E288DE69B7EBF58E813 kUnicodeMatchOtherVariantBit;
$3FA718D968E33011B27F4C08AC9F7C45 kUnicodeMatchOtherVariantMask;
$119F4E0EC5B07E288DE69B7EBF58E813 kUnicodeMatchUnicodeBaseBit;
$3FA718D968E33011B27F4C08AC9F7C45 kUnicodeMatchUnicodeBaseMask;
$119F4E0EC5B07E288DE69B7EBF58E813 kUnicodeMatchUnicodeFormatBit;
$3FA718D968E33011B27F4C08AC9F7C45 kUnicodeMatchUnicodeFormatMask;
$119F4E0EC5B07E288DE69B7EBF58E813 kUnicodeMatchUnicodeVariantBit;
$3FA718D968E33011B27F4C08AC9F7C45 kUnicodeMatchUnicodeVariantMask;
$15B474B0157EF27E4DCE242BA0AE207F kUnicodeMaxDecomposedVariant;
$9EF982B180DBF6205ACBC018A9A95A53 kUnicodeNoCompatibilityVariant;
$15B474B0157EF27E4DCE242BA0AE207F kUnicodeNoComposedVariant;
$9EF982B180DBF6205ACBC018A9A95A53 kUnicodeNoCorporateVariant;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeNoHalfwidthCharsBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeNoHalfwidthCharsMask;
$4BEF1906BC064CB8B9E1D602C52EB035 kUnicodeNoSubset;
$586082E93EF5CAA611F993CA38AE14BD kUnicodeNotAChar;
$0CE592B5184B238B16AB67F4BE1A6C98 kUnicodeNotFromInputMethod;
$586082E93EF5CAA611F993CA38AE14BD kUnicodeObjectReplacement;
$586082E93EF5CAA611F993CA38AE14BD kUnicodeReplacementChar;
$AE29ACD0F6C915704455DE6DCD523306 kUnicodeRightToLeft;
$680711FA196A27FB133C002D33527151 kUnicodeRightToLeftMask;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeStringUnterminatedBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeStringUnterminatedMask;
$586082E93EF5CAA611F993CA38AE14BD kUnicodeSwappedByteOrderMark;
$2F393A44FA7D43EA46AB04A3E52C4581 kUnicodeTextBreakClass;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeTextRunBit;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeTextRunHeuristicsBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeTextRunHeuristicsMask;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeTextRunMask;
$C8DC99D3AEAB107DE97D040E2A07D5AF kUnicodeTextService;
$36C9AA34640057AC0626DF422832AE95 kUnicodeUTF7Format;
$36C9AA34640057AC0626DF422832AE95 kUnicodeUTF8Format;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeUseFallbacksBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeUseFallbacksMask;
$233C3126461803FA6BFC5187955B43CC kUnicodeUseHFSPlusMapping;
$233C3126461803FA6BFC5187955B43CC kUnicodeUseLatestMapping;
$099080FD8A57E1EFF6544B14BCC66A13 kUnicodeVerticalFormBit;
$79A12DFC438751EBB0B5ADF757AED8F7 kUnicodeVerticalFormMask;
$A2A3B97015A39488E2F6B427ADE8C31C kUnknownConnect;
$1AC1C93A58AB6CB66948DE5864455995 kUnknownException;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kUnknownFSObjectIcon;
$97D06325C87197057B6C6609F6137F88 kUnknownLanguage;
$97D06325C87197057B6C6609F6137F88 kUnknownScript;
$98F44587FA922B2B33F4DD5157786C45 kUnknownType;
$6D0E186233145241771508AFE8C2C7D5 kUnlockKCEvent;
$39FE76983533385EB60014D19059B326 kUnlockKCEventMask;
$4D69FABCE705531C69E170010556914A kUnlockStateKCStatus;
$C71B12FB6EB95F7C4322DC4ACF50C8FA kUnlockedIcon;
$1AC1C93A58AB6CB66948DE5864455995 kUnmappedMemoryException;
$1F001F3E5B2FA02809C79C36DE3DD07F kUnmountServersBeforeSleepingBit;
$1F001F3E5B2FA02809C79C36DE3DD07F kUnmountServersBeforeSleepingMask;
$1AC1C93A58AB6CB66948DE5864455995 kUnresolvablePageFaultException;
$DA8A54268EBDE1F1DFEEA7C59337BBFF kUnresolvedCFragSymbolAddress;
$956E0F8638627E2D7345301BF56E48D3 kUnsupportedCardErr;
$956E0F8638627E2D7345301BF56E48D3 kUnsupportedFunctionErr;
$956E0F8638627E2D7345301BF56E48D3 kUnsupportedModeErr;
$956E0F8638627E2D7345301BF56E48D3 kUnsupportedVsErr;
$5B004150561D8A57B6AEE998E4910F58 kUnwrapKCItemAttr;
$40B1D294FCB105E6FD797FB89EF6F7A3 kUpArrowCharCode;
$B66336CDD3FB7BACAE93B982EED235B4 kUpdateAETE;
$B66336CDD3FB7BACAE93B982EED235B4 kUpdateAEUT;
$0CE592B5184B238B16AB67F4BE1A6C98 kUpdateActiveInputArea;
$6D0E186233145241771508AFE8C2C7D5 kUpdateKCEvent;
$39FE76983533385EB60014D19059B326 kUpdateKCEventMask;
$F27735064C606F1E78552097B35F5D75 kUpperAndLowerCaseSelector;
$1008A7BE77D47E0DE7CCAA1367CF3738 kUpperCaseNumbersSelector;
$29BD2EC3A2B216A66733D3791733D12E kUseAtoB;
$42757CFF77671F6FA20DC66BF38093F0 kUseBestGuess;
$29BD2EC3A2B216A66733D3791733D12E kUseBtoA;
$29BD2EC3A2B216A66733D3791733D12E kUseBtoB;
$E1F60DEC850EF00D3218CCAE1CF8B45B kUseCurrentISA;
$DB76DB9A82AAC104AC2A50F15626D709 kUseDefaultMinimumWakeTime;
$DCE09C5AC8576D753F0EFEA779280476 kUseFloatingWindowTag;
$E1F60DEC850EF00D3218CCAE1CF8B45B kUseNativeISA;
$557028A32F041634F58878CE1037A876 kUseOptionalOutputDevice;
$6779799A31BDCCE02DD843853CB38533 kUsePremadeThread;
$29BD2EC3A2B216A66733D3791733D12E kUseProfileIntent;
$082D8B3096A6A9502AD1DBEDAE80A461 kUseWidePositioning;
$333B154C3EB4D8DDCA6A976D4C3734A3 kUserDialogItem;
$83A5F4214B1C3BE1FB2B3E43EB4B732D kUserDomain;
MACRO_kUserFocusAuto kUserFocusAuto;
$61758FF10C8319CCF39299F61C4617E7 kUserFolderIcon;
$9D5FD33A1680DC79DC9D4BE34B4CEDE9 kUserIDiskIcon;
$61758FF10C8319CCF39299F61C4617E7 kUserIcon;
$8EBEE474E50560E939E9ACC9FF50999A kUserNameAndPasswordFlag;
$CC091832F316327152ED0A035D8C4D44 kUserSpecificTmpFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kUsersFolderIcon;
$1BD52C00E239FD3836B0B5E2BBDE1F4D kUsersFolderType;
$5159DF5F69DB4B07E5314ED3C5415015 kUtilitiesFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kUtilitiesFolderType;
$B95EEEF8D0A9C3F124CECCB9E5363575 kUtilityWindowClass;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsHFSPlusAPIsBit;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsHFSPlusAPIsMask;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsHardwareGoneBit;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsHardwareGoneMask;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsIdleFlushBit;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsIdleFlushMask;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsVolumeDirtyBit;
$5FD6BAAA5059E05790131049BFBFEB44 kVCBFlagsVolumeDirtyMask;
$A2A3B97015A39488E2F6B427ADE8C31C kVGAConnect;
$A822B52F4AFF6F9B7AD06D3233CA9C70 kVLibTag2;
$9697D2C626758E212899500537321E1C kVMAwareMixer;
$56EDAB68D3F8BADD4C371F358805869C kVMAwareness;
$18BF411237F175ABCD4A1D90A0B1F6B7 kVariableDurationDVAudioFormat;
$6EA2E4080572ACF28515A5F680662BB8 kVariableLengthArray;
$4BB91A84A266B38EACF9B500C4711451 kVerb;
$5B004150561D8A57B6AEE998E4910F58 kVerifyKCItemAttr;
$02DFC17C15CF25E929830BB781289EB8 kVersionOnePowerSource;
$02DFC17C15CF25E929830BB781289EB8 kVersionTwoPowerSource;
$D0BB73902856307AC287F05F0A49525F kVerticalConstraint;
$E95C98F009867ADAC3C78E8CB5065BFB kVerticalFractionsSelector;
$29926AB924E42B27C90E0FDA4D67BBF6 kVerticalPositionType;
$29926AB924E42B27C90E0FDA4D67BBF6 kVerticalSubstitutionType;
$8D4D07E192BE4DF49363A655628BC0D2 kVerticalSyncMask;
$40B1D294FCB105E6FD797FB89EF6F7A3 kVerticalTabCharCode;
$679D6DF2EE456031915C2D7CDB26B523 kVideoBufferSizeErr;
$1547518B815DD28A608C2D2038905619 kVideoBusTypeI2C;
$1547518B815DD28A608C2D2038905619 kVideoBusTypeInvalid;
$9CFFEA916CF5686EC7628B9DF170645C kVideoDDCciReplyType;
$8551AF0110C28CBC9844E11402941E9B kVideoDefaultBus;
$679D6DF2EE456031915C2D7CDB26B523 kVideoI2CBusyErr;
$679D6DF2EE456031915C2D7CDB26B523 kVideoI2CReplyPendingErr;
$679D6DF2EE456031915C2D7CDB26B523 kVideoI2CTransactionErr;
$679D6DF2EE456031915C2D7CDB26B523 kVideoI2CTransactionTypeErr;
$9CFFEA916CF5686EC7628B9DF170645C kVideoNoTransactionType;
$B201BB116AD24F9C9AB4CB74B04834DF kVideoReplyMicroSecDelayMask;
$9CFFEA916CF5686EC7628B9DF170645C kVideoSimpleI2CType;
$5159DF5F69DB4B07E5314ED3C5415015 kVoicesFolderIcon;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kVoicesFolderType;
$5B004150561D8A57B6AEE998E4910F58 kVolumeKCItemAttr;
$61A9A470B06C5C6DDAF8DD73EBFF2B50 kVolumeRootFolderType;
$1BD52C00E239FD3836B0B5E2BBDE1F4D kVolumeSettingsFolderType;
$63F63E8FC76EE3F31792492E6B52F745 kVolumeVirtualMemoryInfoVersion1;
$1F001F3E5B2FA02809C79C36DE3DD07F kWakeOnAllNetAccessesBit;
$1F001F3E5B2FA02809C79C36DE3DD07F kWakeOnAllNetAccessesMask;
$1F001F3E5B2FA02809C79C36DE3DD07F kWakeOnNetAdminAccessesBit;
$1F001F3E5B2FA02809C79C36DE3DD07F kWakeOnNetAdminAccessesMask;
$BDBF9CBBD4C8E0556BE68EECC2FEC46A kWakeToDoze;
$4693F9F93A5130D57E44F485B4108586 kWaveInSnifferSubType;
$4693F9F93A5130D57E44F485B4108586 kWaveInSubType;
$4693F9F93A5130D57E44F485B4108586 kWaveOutSnifferSubType;
$4693F9F93A5130D57E44F485B4108586 kWaveOutSubType;
$4C94D49F19D2C7D3EC87E3F8D916F51F kWeakStubLibraryCFrag;
$191BACAFE1C79A4AFD6F08B231C40E86 kWhereToEmptyTrashFolderType;
$4693F9F93A5130D57E44F485B4108586 kWhitSubType;
$082D8B3096A6A9502AD1DBEDAE80A461 kWidePosOffsetBit;
$0337B7701AE53305FA5B7C143A584A07 kWildcardCFragVersion;
$8C1170B447897A737FD6FDFD0C134857 kWindowActivationScopeAll;
$8C1170B447897A737FD6FDFD0C134857 kWindowActivationScopeIndependent;
$8C1170B447897A737FD6FDFD0C134857 kWindowActivationScopeNone;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowAlertPositionMainScreen;
$7FE044E4D7F852F540B5F40A228EA05A kWindowAlertPositionOnMainScreen;
$7FE044E4D7F852F540B5F40A228EA05A kWindowAlertPositionOnParentWindow;
$7FE044E4D7F852F540B5F40A228EA05A kWindowAlertPositionOnParentWindowScreen;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowAlertPositionParentWindow;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowAlertPositionParentWindowScreen;
$D0E71AFF48C555DFE6CA61D3E0580A2C kWindowAlertProc;
$9D29BCEDC70E2DF1526AB6C7DAB26E1D kWindowBoundsChangeOriginChanged;
$9D29BCEDC70E2DF1526AB6C7DAB26E1D kWindowBoundsChangeSizeChanged;
$9D29BCEDC70E2DF1526AB6C7DAB26E1D kWindowBoundsChangeUserDrag;
$9D29BCEDC70E2DF1526AB6C7DAB26E1D kWindowBoundsChangeUserResize;
$9D29BCEDC70E2DF1526AB6C7DAB26E1D kWindowBoundsChangeZoom;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowCanCollapse;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowCanDrawInCurrentPort;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowCanGetWindowRegion;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowCanGrow;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowCanMeasureTitle;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowCanSetupProxyDragImage;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowCanZoom;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCascadeOnMainScreen;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCascadeOnParentWindow;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCascadeOnParentWindowScreen;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCascadeStartAtParentWindowScreen;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowCenterMainScreen;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCenterOnMainScreen;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCenterOnParentWindow;
$7FE044E4D7F852F540B5F40A228EA05A kWindowCenterOnParentWindowScreen;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowCenterParentWindow;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowCenterParentWindowScreen;
$0C890B43DDBC424EFBF475442A4E679A kWindowCloseBoxAttribute;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowCloseBoxRgn;
$0C890B43DDBC424EFBF475442A4E679A kWindowCollapseBoxAttribute;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowCollapseBoxRgn;
$0C890B43DDBC424EFBF475442A4E679A kWindowCompositingAttribute;
$0782C3CBA1BE74BEB5F8B1B1CDE3F35A kWindowConstrainAllowPartial;
$0782C3CBA1BE74BEB5F8B1B1CDE3F35A kWindowConstrainCalcOnly;
$0782C3CBA1BE74BEB5F8B1B1CDE3F35A kWindowConstrainMayResize;
$0782C3CBA1BE74BEB5F8B1B1CDE3F35A kWindowConstrainMoveRegardlessOfFit;
$0782C3CBA1BE74BEB5F8B1B1CDE3F35A kWindowConstrainStandardOptions;
$0782C3CBA1BE74BEB5F8B1B1CDE3F35A kWindowConstrainUseTransitionWindow;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowContentRgn;
$23E6868D7C3B5EC18926C5A79A5CA09B kWindowDefHIView;
$23E6868D7C3B5EC18926C5A79A5CA09B kWindowDefObjectClass;
$23E6868D7C3B5EC18926C5A79A5CA09B kWindowDefProcID;
$23E6868D7C3B5EC18926C5A79A5CA09B kWindowDefProcPtr;
$C85A45692EAD253C6A93DE56D894B052 kWindowDefProcType;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowDefSupportsColorGrafPort;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowDefaultPosition;
$437595E0DE36215D0D7AF81898673E98 kWindowDefinitionVersionOne;
$437595E0DE36215D0D7AF81898673E98 kWindowDefinitionVersionTwo;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowDialogDefProcResID;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowDocumentDefProcResID;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowDocumentProc;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowDragRgn;
$606528EFF13203D2511371A2DD50FAF8 kWindowDrawerClosed;
$606528EFF13203D2511371A2DD50FAF8 kWindowDrawerClosing;
$606528EFF13203D2511371A2DD50FAF8 kWindowDrawerOpen;
$606528EFF13203D2511371A2DD50FAF8 kWindowDrawerOpening;
$AE9EC8A22604CE0CA203B0D894DED5F3 kWindowEdgeBottom;
$AE9EC8A22604CE0CA203B0D894DED5F3 kWindowEdgeDefault;
$AE9EC8A22604CE0CA203B0D894DED5F3 kWindowEdgeLeft;
$AE9EC8A22604CE0CA203B0D894DED5F3 kWindowEdgeRight;
$AE9EC8A22604CE0CA203B0D894DED5F3 kWindowEdgeTop;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatFullZoomGrowProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatFullZoomProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatGrowProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatHorizZoomGrowProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatHorizZoomProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideFullZoomGrowProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideFullZoomProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideGrowProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideHorizZoomGrowProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideHorizZoomProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideVertZoomGrowProc;
$89B0F35B27E22E92B56CED74265435C2 kWindowFloatSideVertZoomProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatVertZoomGrowProc;
$F41D137E522A8ED90C438FEC06776161 kWindowFloatVertZoomProc;
$0C890B43DDBC424EFBF475442A4E679A kWindowFullZoomAttribute;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowFullZoomDocumentProc;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowFullZoomGrowDocumentProc;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowGlobalPortRgn;
$73832725CC1C67CCAEB910D4649CBB67 kWindowGroupAttrHideOnCollapse;
$73832725CC1C67CCAEB910D4649CBB67 kWindowGroupAttrLayerTogether;
$73832725CC1C67CCAEB910D4649CBB67 kWindowGroupAttrMoveTogether;
$5FEF9BA026EFF99749744A94C5E24D82 kWindowGroupAttrPositionFixed;
$73832725CC1C67CCAEB910D4649CBB67 kWindowGroupAttrSelectAsLayer;
$5FEF9BA026EFF99749744A94C5E24D82 kWindowGroupAttrSelectable;
$73832725CC1C67CCAEB910D4649CBB67 kWindowGroupAttrSharedActivation;
$5FEF9BA026EFF99749744A94C5E24D82 kWindowGroupAttrZOrderFixed;
$60ACDD7DE86606BA08F25F5FF8AB57E2 kWindowGroupContentsRecurse;
$60ACDD7DE86606BA08F25F5FF8AB57E2 kWindowGroupContentsReturnWindows;
$60ACDD7DE86606BA08F25F5FF8AB57E2 kWindowGroupContentsVisible;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowGrowDocumentProc;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowGrowRgn;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowHasTitleBar;
$0C890B43DDBC424EFBF475442A4E679A kWindowHideOnFullScreenAttribute;
$0C890B43DDBC424EFBF475442A4E679A kWindowHideOnSuspendAttribute;
$F08EDB85A89342AE0CEFCF40E3081516 kWindowHideTransitionAction;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowHorizZoomDocumentProc;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowHorizZoomGrowDocumentProc;
$0C890B43DDBC424EFBF475442A4E679A kWindowHorizontalZoomAttribute;
$0C890B43DDBC424EFBF475442A4E679A kWindowIgnoreClicksAttribute;
$0C890B43DDBC424EFBF475442A4E679A kWindowInWindowMenuAttribute;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowIsAlert;
$A439AC5A4ECE78E21E0C0F6EA5EFB5EF kWindowIsCollapsedState;
$7E1A3B94D0BAD75AD54E4CB773CF6DC2 kWindowIsModal;
$433BAAB6F6072ECAF742813F30BF493E kWindowIsOpaque;
$3D732BA231FE18957DC9FC4F2D6B5651 kWindowLatentVisibleAppHidden;
$3D732BA231FE18957DC9FC4F2D6B5651 kWindowLatentVisibleCollapsedGroup;
$3D732BA231FE18957DC9FC4F2D6B5651 kWindowLatentVisibleCollapsedOwner;
$3D732BA231FE18957DC9FC4F2D6B5651 kWindowLatentVisibleFloater;
$3D732BA231FE18957DC9FC4F2D6B5651 kWindowLatentVisibleFullScreen;
$3D732BA231FE18957DC9FC4F2D6B5651 kWindowLatentVisibleSuspend;
$0C890B43DDBC424EFBF475442A4E679A kWindowLiveResizeAttribute;
$E62F71FF430797828A24D3B827757AA8 kWindowMenuIncludeRotate;
$0C890B43DDBC424EFBF475442A4E679A kWindowMetalAttribute;
$D0E71AFF48C555DFE6CA61D3E0580A2C kWindowModalDialogProc;
$149048929B1F560BCE434A0720B743F4 kWindowModalityAppModal;
$149048929B1F560BCE434A0720B743F4 kWindowModalityNone;
$149048929B1F560BCE434A0720B743F4 kWindowModalitySystemModal;
$149048929B1F560BCE434A0720B743F4 kWindowModalityWindowModal;
$D0E71AFF48C555DFE6CA61D3E0580A2C kWindowMovableAlertProc;
$D0E71AFF48C555DFE6CA61D3E0580A2C kWindowMovableModalDialogProc;
$A4E91F2DC25E93AFBF2E10355646699F kWindowMovableModalGrowProc;
$F08EDB85A89342AE0CEFCF40E3081516 kWindowMoveTransitionAction;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgCalculateShape;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgCleanUp;
$3CD2563CFB62263068C67E0D71BFDAE0 kWindowMsgDragHilite;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgDraw;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgDrawGrowBox;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgDrawGrowOutline;
$3CD2563CFB62263068C67E0D71BFDAE0 kWindowMsgDrawInCurrentPort;
$1E4F2DD210751C62CD68C057277C3FAF kWindowMsgGetFeatures;
$4928B9702A76B9632064A787AE53C3BE kWindowMsgGetGrowImageRegion;
$1E4F2DD210751C62CD68C057277C3FAF kWindowMsgGetRegion;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgHitTest;
$9B79396F90DD80CD6693EBE8A0134753 kWindowMsgInitialize;
$3CD2563CFB62263068C67E0D71BFDAE0 kWindowMsgMeasureTitle;
$3CD2563CFB62263068C67E0D71BFDAE0 kWindowMsgModified;
$3CD2563CFB62263068C67E0D71BFDAE0 kWindowMsgSetupProxyDragImage;
$3CD2563CFB62263068C67E0D71BFDAE0 kWindowMsgStateChanged;
$0C890B43DDBC424EFBF475442A4E679A kWindowNoActivatesAttribute;
$0C890B43DDBC424EFBF475442A4E679A kWindowNoAttributes;
$0C890B43DDBC424EFBF475442A4E679A kWindowNoConstrainAttribute;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowNoPosition;
$0C890B43DDBC424EFBF475442A4E679A kWindowNoShadowAttribute;
$0C890B43DDBC424EFBF475442A4E679A kWindowNoUpdatesAttribute;
$0C890B43DDBC424EFBF475442A4E679A kWindowOpaqueForEventsAttribute;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowOpaqueRgn;
$FCE0DED05452C5151FB88CF2F7C6960E kWindowPaintProcOptionsNone;
$D0E71AFF48C555DFE6CA61D3E0580A2C kWindowPlainDialogProc;
$848E3E2A486FA7EF9737B7A0CD42FEBF kWindowPropertyPersistent;
$0C890B43DDBC424EFBF475442A4E679A kWindowResizableAttribute;
$F08EDB85A89342AE0CEFCF40E3081516 kWindowResizeTransitionAction;
$D0E71AFF48C555DFE6CA61D3E0580A2C kWindowShadowDialogProc;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowSheetAlertDefProcResID;
$5D023E2650DFF2AAEA250031F9EBD2F0 kWindowSheetAlertProc;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowSheetDefProcResID;
$5D023E2650DFF2AAEA250031F9EBD2F0 kWindowSheetProc;
$3BC2EE64601F1052F4EDBF2AF7711574 kWindowSheetTransitionEffect;
$F08EDB85A89342AE0CEFCF40E3081516 kWindowShowTransitionAction;
$0C890B43DDBC424EFBF475442A4E679A kWindowSideTitlebarAttribute;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowSimpleDefProcResID;
$86AC15EDE48D1B59E56DE49EE0671D3E kWindowSimpleFrameProc;
$86AC15EDE48D1B59E56DE49EE0671D3E kWindowSimpleProc;
$3BC2EE64601F1052F4EDBF2AF7711574 kWindowSlideTransitionEffect;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowStaggerMainScreen;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowStaggerParentWindow;
$26BEC699B96B49D9E49DBC1A34B6767C kWindowStaggerParentWindowScreen;
$0C890B43DDBC424EFBF475442A4E679A kWindowStandardDocumentAttributes;
$0C890B43DDBC424EFBF475442A4E679A kWindowStandardFloatingAttributes;
$0C890B43DDBC424EFBF475442A4E679A kWindowStandardHandlerAttribute;
$5FCB8F8EF1345488B1E03E24B38967F0 kWindowStateTitleChanged;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowStructureRgn;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowSupportsDragHilite;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowSupportsGetGrowImageRegion;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowSupportsModifiedBit;
$F722CC08230D9A47C64AEC5F9B6F960A kWindowSupportsSetGrowImageRegion;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowTitleBarRgn;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowTitleProxyIconRgn;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowTitleTextRgn;
$0C890B43DDBC424EFBF475442A4E679A kWindowToolbarButtonAttribute;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowUpdateRgn;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowUtilityDefProcResID;
$E60C1F5BB2A929C92A273155987CB4C0 kWindowUtilitySideTitleDefProcResID;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowVertZoomDocumentProc;
$E4C8B7D15CC3724706DB6287AEE6C199 kWindowVertZoomGrowDocumentProc;
$0C890B43DDBC424EFBF475442A4E679A kWindowVerticalZoomAttribute;
$04BAE0520DAD878CF60A1C494EFF7B97 kWindowWantsDisposeAtProcessDeath;
$A4CF287AB5E9AB9AAF4B048273213B1E kWindowZoomBoxRgn;
$3BC2EE64601F1052F4EDBF2AF7711574 kWindowZoomTransitionEffect;
$3DE452E66A716C4ABD5564098B5C5FFF kWordFinalSwashesOffSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kWordFinalSwashesOnSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kWordInitialSwashesOffSelector;
$3DE452E66A716C4ABD5564098B5C5FFF kWordInitialSwashesOnSelector;
$61758FF10C8319CCF39299F61C4617E7 kWorkgroupFolderIcon;
$4D69FABCE705531C69E170010556914A kWrPermKCStatus;
$5B004150561D8A57B6AEE998E4910F58 kWrapKCItemAttr;
$009AA9BCCC426E323765130C670B7B3B kWriteCommand;
$956E0F8638627E2D7345301BF56E48D3 kWriteFailureErr;
$956E0F8638627E2D7345301BF56E48D3 kWriteProtectedErr;
$1AFD37A731F3A62F7A5D2B51D317DBED kWriteReference;
$F68E41BB552C03507046AA3FD69AAB17 kX121Address;
$6470E26E5846E576E7A0D1F542DED781 kX86ISA;
$993FB706767A0B941FF27E2962BA5F07 kX86RTA;
$DD9C78B339A6EB3A9D020FDE1DD7FFB8 kXFer1PixelAtATime;
$DD9C78B339A6EB3A9D020FDE1DD7FFB8 kXFerConvertPixelToRGB32;
$A822B52F4AFF6F9B7AD06D3233CA9C70 kXLibTag1;
$A822B52F4AFF6F9B7AD06D3233CA9C70 kXLibVersion;
$1FF93887DAB66F639B85849B1ED1B48F kYUV211PixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F kYUV411PixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F kYUVSPixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F kYUVUPixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F kYVU9PixelFormat;
$1FF93887DAB66F639B85849B1ED1B48F kYVYU422PixelFormat;
$2EE7D5DAEFC0218485F45691B93ABFEC kZIPMaxZoneLength;
$9B09BD6789C0F33E4B9503BF6C7ADAD0 kZoomAccelerate;
$9B09BD6789C0F33E4B9503BF6C7ADAD0 kZoomDecelerate;
$9B09BD6789C0F33E4B9503BF6C7ADAD0 kZoomNoAcceleration;
$1C119E9720855ADE2B421A854DBE867A kZoomVideoSource;
$D0CBFDEF499675431B87E20AD18DADFE kadministratorUser;
$91A6E70BD202D81D606923A89D4F66AC kbSCSICDBIsPointer;
$91A6E70BD202D81D606923A89D4F66AC kbSCSICDBLinked;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDataBufferValid;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDataPhysical;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDataReadyForDMA;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDisableAutosense;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDisableSyncData;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDoDisconnect;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIDontDisconnect;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved0;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved1;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved3;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved5;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved6;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved7;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved8;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReserved9;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIFlagReservedA;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIInitiateSyncData;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIMessageBufferValid;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIQEnable;
$91A6E70BD202D81D606923A89D4F66AC kbSCSISIMQFreeze;
$91A6E70BD202D81D606923A89D4F66AC kbSCSISIMQHead;
$91A6E70BD202D81D606923A89D4F66AC kbSCSISIMQNoFreeze;
$91A6E70BD202D81D606923A89D4F66AC kbSCSISensePhysical;
$91A6E70BD202D81D606923A89D4F66AC kbSCSIStatusBufferValid;
$0F9C744F102BDB9FC7DC88ACDF005FB0 keaBadAddress;
$0F9C744F102BDB9FC7DC88ACDF005FB0 keaBroadcast;
$0F9C744F102BDB9FC7DC88ACDF005FB0 keaMulticast;
$0F9C744F102BDB9FC7DC88ACDF005FB0 keaRawPacketBit;
$0F9C744F102BDB9FC7DC88ACDF005FB0 keaStandardAddress;
$0F9C744F102BDB9FC7DC88ACDF005FB0 keaTimeStampBit;
$F3876F991244DA6C9E2D6E25C6A258B7 keepLocal;
$CD245178CB213C313AFEA4423394C154 keepLocalBit;
$268686FFA52D59FB9F0D669E634C304C kernelAlreadyFreeErr;
$268686FFA52D59FB9F0D669E634C304C kernelAsyncReceiveLimitErr;
$268686FFA52D59FB9F0D669E634C304C kernelAsyncSendLimitErr;
$268686FFA52D59FB9F0D669E634C304C kernelAttributeErr;
$268686FFA52D59FB9F0D669E634C304C kernelCanceledErr;
$268686FFA52D59FB9F0D669E634C304C kernelDeletePermissionErr;
$268686FFA52D59FB9F0D669E634C304C kernelExceptionErr;
$268686FFA52D59FB9F0D669E634C304C kernelExecutePermissionErr;
$268686FFA52D59FB9F0D669E634C304C kernelExecutionLevelErr;
$268686FFA52D59FB9F0D669E634C304C kernelIDErr;
$268686FFA52D59FB9F0D669E634C304C kernelInUseErr;
$268686FFA52D59FB9F0D669E634C304C kernelIncompleteErr;
$268686FFA52D59FB9F0D669E634C304C kernelObjectExistsErr;
$268686FFA52D59FB9F0D669E634C304C kernelOptionsErr;
$268686FFA52D59FB9F0D669E634C304C kernelPrivilegeErr;
$268686FFA52D59FB9F0D669E634C304C kernelReadPermissionErr;
$268686FFA52D59FB9F0D669E634C304C kernelReturnValueErr;
$268686FFA52D59FB9F0D669E634C304C kernelTerminatedErr;
$268686FFA52D59FB9F0D669E634C304C kernelTimeoutErr;
$268686FFA52D59FB9F0D669E634C304C kernelUnrecoverableErr;
$268686FFA52D59FB9F0D669E634C304C kernelUnsupportedErr;
$268686FFA52D59FB9F0D669E634C304C kernelWritePermissionErr;
$940C891D24D2237AB243FEE913AC72B0 key32BitIcon;
$940C891D24D2237AB243FEE913AC72B0 key4BitIcon;
$940C891D24D2237AB243FEE913AC72B0 key8BitIcon;
$940C891D24D2237AB243FEE913AC72B0 key8BitMask;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAEAdjustMarksProc;
$738DE379C7B868AAF3E553C20D98BD43 keyAEAngle;
$738DE379C7B868AAF3E553C20D98BD43 keyAEArcAngle;
$6CACACC7823B8B27C19318704F85B0AF keyAEAttaching;
$F8234B7287B861A358C55FB3FB38A017 keyAEBaseAddr;
$F8234B7287B861A358C55FB3FB38A017 keyAEBestType;
$F8234B7287B861A358C55FB3FB38A017 keyAEBgndColor;
$F8234B7287B861A358C55FB3FB38A017 keyAEBgndPattern;
$F8234B7287B861A358C55FB3FB38A017 keyAEBounds;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAEBufferSize;
$F8234B7287B861A358C55FB3FB38A017 keyAECellList;
$F8234B7287B861A358C55FB3FB38A017 keyAEClassID;
$60F53D0F6BC6D4890204521089289574 keyAEClauseOffsets;
$F8234B7287B861A358C55FB3FB38A017 keyAEColor;
$F8234B7287B861A358C55FB3FB38A017 keyAEColorTable;
$E0A9F79CCAA62BC2F853851A20536E47 keyAECompOperator;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAECompareProc;
$E0A9F79CCAA62BC2F853851A20536E47 keyAEContainer;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAECountProc;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAECurrentPoint;
$F8234B7287B861A358C55FB3FB38A017 keyAECurveHeight;
$F8234B7287B861A358C55FB3FB38A017 keyAECurveWidth;
$F8234B7287B861A358C55FB3FB38A017 keyAEDashStyle;
$F8234B7287B861A358C55FB3FB38A017 keyAEData;
$F8234B7287B861A358C55FB3FB38A017 keyAEDefaultType;
$F8234B7287B861A358C55FB3FB38A017 keyAEDefinitionRect;
$F8234B7287B861A358C55FB3FB38A017 keyAEDescType;
$E0A9F79CCAA62BC2F853851A20536E47 keyAEDesiredClass;
$F8234B7287B861A358C55FB3FB38A017 keyAEDestination;
$F8234B7287B861A358C55FB3FB38A017 keyAEDoAntiAlias;
$F8234B7287B861A358C55FB3FB38A017 keyAEDoDithered;
$F8234B7287B861A358C55FB3FB38A017 keyAEDoRotate;
$FBE3415223C6555039C29A38569AF9A2 keyAEDoScale;
$FBE3415223C6555039C29A38569AF9A2 keyAEDoTranslate;
$60F53D0F6BC6D4890204521089289574 keyAEDragging;
$FBE3415223C6555039C29A38569AF9A2 keyAEEditionFileLoc;
$FBE3415223C6555039C29A38569AF9A2 keyAEElements;
$FBE3415223C6555039C29A38569AF9A2 keyAEEndPoint;
$42A44C027C51BF81ADE897BA007A09A5 keyAEErrorObject;
$FBE3415223C6555039C29A38569AF9A2 keyAEEventClass;
$FBE3415223C6555039C29A38569AF9A2 keyAEEventID;
$FBE3415223C6555039C29A38569AF9A2 keyAEFile;
$FBE3415223C6555039C29A38569AF9A2 keyAEFileType;
$FBE3415223C6555039C29A38569AF9A2 keyAEFillColor;
$FBE3415223C6555039C29A38569AF9A2 keyAEFillPattern;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAEFixLength;
$FBE3415223C6555039C29A38569AF9A2 keyAEFlipHorizontal;
$FBE3415223C6555039C29A38569AF9A2 keyAEFlipVertical;
$FBE3415223C6555039C29A38569AF9A2 keyAEFont;
$FBE3415223C6555039C29A38569AF9A2 keyAEFormula;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAEGetErrDescProc;
$FBE3415223C6555039C29A38569AF9A2 keyAEGraphicObjects;
$60F53D0F6BC6D4890204521089289574 keyAEHiliteRange;
$CD98006DCD13EE796258013A3769AE4B keyAEHomographAccent;
$CD98006DCD13EE796258013A3769AE4B keyAEHomographDicInfo;
$CD98006DCD13EE796258013A3769AE4B keyAEHomographWeight;
$FBE3415223C6555039C29A38569AF9A2 keyAEID;
$FBE3415223C6555039C29A38569AF9A2 keyAEImageQuality;
$C74DBA0D955B36FDC065BBDBE74F56F8 keyAEIndex;
$FBE3415223C6555039C29A38569AF9A2 keyAEInsertHere;
$E0A9F79CCAA62BC2F853851A20536E47 keyAEKeyData;
$E0A9F79CCAA62BC2F853851A20536E47 keyAEKeyForm;
$FBE3415223C6555039C29A38569AF9A2 keyAEKeyForms;
$75680E889D42E0B66BD944745319419E keyAEKeyword;
$FD9AD353B7B01D89CEC9E7402649ED75 keyAELAHomograph;
$FD9AD353B7B01D89CEC9E7402649ED75 keyAELAMorpheme;
$FD9AD353B7B01D89CEC9E7402649ED75 keyAELAMorphemeBundle;
$FD9AD353B7B01D89CEC9E7402649ED75 keyAELAMorphemePath;
$60F53D0F6BC6D4890204521089289574 keyAELeftSide;
$75680E889D42E0B66BD944745319419E keyAELevel;
$75680E889D42E0B66BD944745319419E keyAELineArrow;
$E0A9F79CCAA62BC2F853851A20536E47 keyAELogicalOperator;
$E0A9F79CCAA62BC2F853851A20536E47 keyAELogicalTerms;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAEMarkProc;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAEMarkTokenProc;
$C674DA6CF1E7540352485C5927AD2BA0 keyAEMorphemePartOfSpeechCode;
$C674DA6CF1E7540352485C5927AD2BA0 keyAEMorphemeTextRange;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAEMoveView;
$75680E889D42E0B66BD944745319419E keyAEName;
$75680E889D42E0B66BD944745319419E keyAENewElementLoc;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAENextBody;
$940C891D24D2237AB243FEE913AC72B0 keyAENoAutoRouting;
$75680E889D42E0B66BD944745319419E keyAEObject;
$E0A9F79CCAA62BC2F853851A20536E47 keyAEObject1;
$E0A9F79CCAA62BC2F853851A20536E47 keyAEObject2;
$75680E889D42E0B66BD944745319419E keyAEObjectClass;
$75680E889D42E0B66BD944745319419E keyAEOffStyles;
$60F53D0F6BC6D4890204521089289574 keyAEOffset;
$75680E889D42E0B66BD944745319419E keyAEOnStyles;
$75680E889D42E0B66BD944745319419E keyAEPMTable;
$5D855D395EFFF84D244F4A9ACDB29E4B keyAEPOSTHeaderData;
$75680E889D42E0B66BD944745319419E keyAEParamFlags;
$75680E889D42E0B66BD944745319419E keyAEParameters;
$75680E889D42E0B66BD944745319419E keyAEPenColor;
$75680E889D42E0B66BD944745319419E keyAEPenPattern;
$75680E889D42E0B66BD944745319419E keyAEPenWidth;
$60F53D0F6BC6D4890204521089289574 keyAEPinRange;
$75680E889D42E0B66BD944745319419E keyAEPixMapMinus;
$75680E889D42E0B66BD944745319419E keyAEPixelDepth;
$60F53D0F6BC6D4890204521089289574 keyAEPoint;
$75680E889D42E0B66BD944745319419E keyAEPointList;
$75680E889D42E0B66BD944745319419E keyAEPointSize;
$75680E889D42E0B66BD944745319419E keyAEPosition;
$E3597A040103354F4772B471D57A3F5F keyAEPropData;
$E3597A040103354F4772B471D57A3F5F keyAEPropFlags;
$E3597A040103354F4772B471D57A3F5F keyAEPropID;
$E3597A040103354F4772B471D57A3F5F keyAEProperties;
$E3597A040103354F4772B471D57A3F5F keyAEProperty;
$E3597A040103354F4772B471D57A3F5F keyAEProtection;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAERangeStart;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyAERangeStop;
$3EBCD04AD77EEB90A1EBB25049369DCE keyAERecorderCount;
$60F53D0F6BC6D4890204521089289574 keyAERegionClass;
$E3597A040103354F4772B471D57A3F5F keyAERenderAs;
$940C891D24D2237AB243FEE913AC72B0 keyAEReplacing;
$5D855D395EFFF84D244F4A9ACDB29E4B keyAEReplyHeaderData;
$E3597A040103354F4772B471D57A3F5F keyAERequestedType;
$E3597A040103354F4772B471D57A3F5F keyAEResult;
$E3597A040103354F4772B471D57A3F5F keyAEResultInfo;
$E3597A040103354F4772B471D57A3F5F keyAERotPoint;
$E3597A040103354F4772B471D57A3F5F keyAERotation;
$E3597A040103354F4772B471D57A3F5F keyAERowList;
$E3597A040103354F4772B471D57A3F5F keyAESaveOptions;
$E3597A040103354F4772B471D57A3F5F keyAEScale;
$E3597A040103354F4772B471D57A3F5F keyAEScriptTag;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAEServerInstance;
$E3597A040103354F4772B471D57A3F5F keyAEShowWhere;
$E3597A040103354F4772B471D57A3F5F keyAEStartAngle;
$E3597A040103354F4772B471D57A3F5F keyAEStartPoint;
$E3597A040103354F4772B471D57A3F5F keyAEStyles;
$6BE12DC35D659BA31099DB54B871C3C4 keyAESuiteID;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMDocumentRefcon;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMEventRecord;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMEventRef;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMGlyphInfoArray;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMScriptTag;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMTextFMFont;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMTextFont;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETSMTextPointSize;
$B66336CDD3FB7BACAE93B982EED235B4 keyAETarget;
$C74DBA0D955B36FDC065BBDBE74F56F8 keyAETest;
$6BE12DC35D659BA31099DB54B871C3C4 keyAEText;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETextColor;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETextFont;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETextLineAscent;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETextLineHeight;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETextPointSize;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETextServiceEncoding;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETextServiceMacEncoding;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETextStyles;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAETheData;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETheText;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETransferMode;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETranslation;
$6BE12DC35D659BA31099DB54B871C3C4 keyAETryAsStructGraf;
$6BE12DC35D659BA31099DB54B871C3C4 keyAEUniformStyles;
$6BE12DC35D659BA31099DB54B871C3C4 keyAEUpdateOn;
$0CE592B5184B238B16AB67F4BE1A6C98 keyAEUpdateRange;
$6BE12DC35D659BA31099DB54B871C3C4 keyAEUserTerm;
$940C891D24D2237AB243FEE913AC72B0 keyAEUsing;
$3EBCD04AD77EEB90A1EBB25049369DCE keyAEVersion;
$C74DBA0D955B36FDC065BBDBE74F56F8 keyAEWhoseRangeStart;
$C74DBA0D955B36FDC065BBDBE74F56F8 keyAEWhoseRangeStop;
$6BE12DC35D659BA31099DB54B871C3C4 keyAEWindow;
$6BE12DC35D659BA31099DB54B871C3C4 keyAEWritingCode;
$5D855D395EFFF84D244F4A9ACDB29E4B keyAEXMLReplyData;
$5D855D395EFFF84D244F4A9ACDB29E4B keyAEXMLRequestData;
$EC2A64EB281DF1377656F93D45BC5129 keyASArg;
$B66336CDD3FB7BACAE93B982EED235B4 keyASPositionalArgs;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionAbout;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionAbove;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionAgainst;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionApartFrom;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionAround;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionAsideFrom;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionAt;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionBelow;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionBeneath;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionBeside;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionBetween;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionBy;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionFor;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionFrom;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionGiven;
$4857BB0EBE394D26BF22675E2909FC45 keyASPrepositionHas;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionIn;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionInsteadOf;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionInto;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionOn;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionOnto;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionOutOf;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionOver;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionSince;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionThrough;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionThru;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionTo;
$8C0204C4F76E73A5AFA9F604EEA872E3 keyASPrepositionUnder;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionUntil;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionWith;
$A3472286BEA89B0BEF16D6748432177E keyASPrepositionWithout;
$B66336CDD3FB7BACAE93B982EED235B4 keyASReturning;
$B66336CDD3FB7BACAE93B982EED235B4 keyASSubroutineName;
$42A44C027C51BF81ADE897BA007A09A5 keyASUserRecordFields;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyAcceptTimeoutAttr;
$5D855D395EFFF84D244F4A9ACDB29E4B keyAdditionalHTTPHeaders;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyAddressAttr;
$4857BB0EBE394D26BF22675E2909FC45 keyAll;
$F97A009864F2D3D23A605B22E84A0FD2 keyAppHandledCoercion;
$ACFE356A26329F34E52B08B2CA60B1FD keyCloseAllWindows;
$DD1E55986C4B43D5A4A79B56B7B8A8F5 keyCodeMask;
$72E2D6F8CA917670CB54A93E150C7B00 keyContextualMenuAttributes;
$72E2D6F8CA917670CB54A93E150C7B00 keyContextualMenuCommandID;
$72E2D6F8CA917670CB54A93E150C7B00 keyContextualMenuModifiers;
$72E2D6F8CA917670CB54A93E150C7B00 keyContextualMenuName;
$72E2D6F8CA917670CB54A93E150C7B00 keyContextualMenuSubmenu;
$49143488410A29263F782CE6156468FD keyDCMFieldAttributes;
$49143488410A29263F782CE6156468FD keyDCMFieldDefaultData;
$49143488410A29263F782CE6156468FD keyDCMFieldFindMethods;
$49143488410A29263F782CE6156468FD keyDCMFieldName;
$49143488410A29263F782CE6156468FD keyDCMFieldTag;
$49143488410A29263F782CE6156468FD keyDCMFieldType;
$49143488410A29263F782CE6156468FD keyDCMMaxRecordSize;
$50CFE87F485DE565167C6F999D1C06C1 keyDMConfigFlags;
$50CFE87F485DE565167C6F999D1C06C1 keyDMConfigReserved;
$50CFE87F485DE565167C6F999D1C06C1 keyDMConfigVersion;
$50CFE87F485DE565167C6F999D1C06C1 keyDeviceDepthMode;
$50CFE87F485DE565167C6F999D1C06C1 keyDeviceFlags;
$50CFE87F485DE565167C6F999D1C06C1 keyDeviceRect;
$3EBCD04AD77EEB90A1EBB25049369DCE keyDirectObject;
$5D855D395EFFF84D244F4A9ACDB29E4B keyDisableAuthenticationAttr;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayComponent;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayDevice;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayFlags;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayID;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayMirroredId;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayMode;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayModeReserved;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayNewConfig;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayOldConfig;
$50CFE87F485DE565167C6F999D1C06C1 keyDisplayReserved;
$CC65832C1B1F6D73C69B1C0A6DD944E4 keyDisposeTokenProc;
$FEBB2992DC4ADCE18624A3BF5CCB540F keyDown;
$090FD46DADED99452600AACF39205147 keyDownMask;
$517DF7D7B7B57B1F865576A9B7B7F75D keyDriveNumber;
$517DF7D7B7B57B1F865576A9B7B7F75D keyErrorCode;
$3EBCD04AD77EEB90A1EBB25049369DCE keyErrorNumber;
$3EBCD04AD77EEB90A1EBB25049369DCE keyErrorString;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyEventClassAttr;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyEventIDAttr;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyEventSourceAttr;
$D129F4DFEBA165F72EA98C618C3DD9EB keyEvtDev;
$C625086FF7C44828098F3E200ADA2515 keyEvtMsg;
$940C891D24D2237AB243FEE913AC72B0 keyGlobalPositionList;
$EE1D2F53907765102E9269EF72FD4455 keyGlobalsNames;
$517DF7D7B7B57B1F865576A9B7B7F75D keyHighLevelClass;
$517DF7D7B7B57B1F865576A9B7B7F75D keyHighLevelID;
$82F4B6A591AFE85C9EE95AAC9B96B6B1 keyICEditPreferenceDestination;
$940C891D24D2237AB243FEE913AC72B0 keyIconAndMask;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyInteractLevelAttr;
$517DF7D7B7B57B1F865576A9B7B7F75D keyKey;
$517DF7D7B7B57B1F865576A9B7B7F75D keyKeyCode;
$517DF7D7B7B57B1F865576A9B7B7F75D keyKeyboard;
$940C891D24D2237AB243FEE913AC72B0 keyLocalPositionList;
$ACFE356A26329F34E52B08B2CA60B1FD keyLocalWhere;
$EE1D2F53907765102E9269EF72FD4455 keyLocalsNames;
$ACFE356A26329F34E52B08B2CA60B1FD keyMenuID;
$ACFE356A26329F34E52B08B2CA60B1FD keyMenuItem;
$940C891D24D2237AB243FEE913AC72B0 keyMini1BitMask;
$940C891D24D2237AB243FEE913AC72B0 keyMini4BitIcon;
$940C891D24D2237AB243FEE913AC72B0 keyMini8BitIcon;
$517DF7D7B7B57B1F865576A9B7B7F75D keyMiscellaneous;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyMissedKeywordAttr;
$517DF7D7B7B57B1F865576A9B7B7F75D keyModifiers;
$ACFE356A26329F34E52B08B2CA60B1FD keyNewBounds;
$09554BD3FB767C91A90BD71C7C09A3EC keyOSADialectCode;
$09554BD3FB767C91A90BD71C7C09A3EC keyOSADialectLangCode;
$09554BD3FB767C91A90BD71C7C09A3EC keyOSADialectName;
$09554BD3FB767C91A90BD71C7C09A3EC keyOSADialectScriptCode;
$C35B1E7AFD5BC2C0F1BDBE6C23E5DDD5 keyOSASourceEnd;
$E1799D4AC4A15830BF5702BDCDE8F83F keyOSASourceStart;
$4857BB0EBE394D26BF22675E2909FC45 keyOldFinderItems;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyOptionalKeywordAttr;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyOriginalAddressAttr;
$ACFE356A26329F34E52B08B2CA60B1FD keyOriginalBounds;
$EE1D2F53907765102E9269EF72FD4455 keyParamsNames;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapAlignment;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapCmpCount;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapCmpSize;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapColorTableSeed;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapHResolution;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapPixelSize;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapPixelType;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapRect;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapResReserved;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapReserved;
$50CFE87F485DE565167C6F999D1C06C1 keyPixMapVResolution;
$3EBCD04AD77EEB90A1EBB25049369DCE keyPreDispatch;
$EE1D2F53907765102E9269EF72FD4455 keyProcedureName;
$3EBCD04AD77EEB90A1EBB25049369DCE keyProcessSerialNumber;
$5B1910A889F707C7A59779001A563B82 keyProgramState;
$5D855D395EFFF84D244F4A9ACDB29E4B keyRPCMethodName;
$5D855D395EFFF84D244F4A9ACDB29E4B keyRPCMethodParam;
$5D855D395EFFF84D244F4A9ACDB29E4B keyRPCMethodParamOrder;
$940C891D24D2237AB243FEE913AC72B0 keyRedirectedDocumentList;
$E39054EC5C3FB4D37B68F792336028CC keyReplyPortAttr;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyReturnIDAttr;
$5D855D395EFFF84D244F4A9ACDB29E4B keySOAPAction;
$5D855D395EFFF84D244F4A9ACDB29E4B keySOAPMethodNameSpace;
$5D855D395EFFF84D244F4A9ACDB29E4B keySOAPMethodNameSpaceURI;
$BB8D404D70406AFA2DF811675C440DD6 keySOAPSMDNamespace;
$BB8D404D70406AFA2DF811675C440DD6 keySOAPSMDNamespaceURI;
$BB8D404D70406AFA2DF811675C440DD6 keySOAPSMDType;
$5D855D395EFFF84D244F4A9ACDB29E4B keySOAPSchemaVersion;
$BB8D404D70406AFA2DF811675C440DD6 keySOAPStructureMetaData;
$30300197AA741E77EEFBF647F24E601C keySRRecognizer;
$30300197AA741E77EEFBF647F24E601C keySRSpeechResult;
$30300197AA741E77EEFBF647F24E601C keySRSpeechStatus;
$B66336CDD3FB7BACAE93B982EED235B4 keyScszResource;
$3EBCD04AD77EEB90A1EBB25049369DCE keySelectProc;
$517DF7D7B7B57B1F865576A9B7B7F75D keySelection;
$940C891D24D2237AB243FEE913AC72B0 keySmall32BitIcon;
$940C891D24D2237AB243FEE913AC72B0 keySmall4BitIcon;
$940C891D24D2237AB243FEE913AC72B0 keySmall8BitIcon;
$940C891D24D2237AB243FEE913AC72B0 keySmall8BitMask;
$940C891D24D2237AB243FEE913AC72B0 keySmallIconAndMask;
$EE1D2F53907765102E9269EF72FD4455 keyStatementRange;
$B66336CDD3FB7BACAE93B982EED235B4 keySubjectAttr;
$50CFE87F485DE565167C6F999D1C06C1 keySummaryChanges;
$50CFE87F485DE565167C6F999D1C06C1 keySummaryMenubar;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyTimeoutAttr;
$8631E80C8238BE4B0F2610C78EA6C7E9 keyTransactionIDAttr;
$FEBB2992DC4ADCE18624A3BF5CCB540F keyUp;
$090FD46DADED99452600AACF39205147 keyUpMask;
$5D855D395EFFF84D244F4A9ACDB29E4B keyUserNameAttr;
$5D855D395EFFF84D244F4A9ACDB29E4B keyUserPasswordAttr;
$517DF7D7B7B57B1F865576A9B7B7F75D keyWhen;
$517DF7D7B7B57B1F865576A9B7B7F75D keyWhere;
$517DF7D7B7B57B1F865576A9B7B7F75D keyWindow;
$5D855D395EFFF84D244F4A9ACDB29E4B keyXMLDebuggingAttr;
$C6E2751603EF5DC81431696333BDC0D3 kfullPrivileges;
$95F736BC60C90921AA5D966537109656 khmmPict;
$95F736BC60C90921AA5D966537109656 khmmPictHandle;
$95F736BC60C90921AA5D966537109656 khmmSTRRes;
$95F736BC60C90921AA5D966537109656 khmmString;
$95F736BC60C90921AA5D966537109656 khmmStringRes;
$95F736BC60C90921AA5D966537109656 khmmTEHandle;
$95F736BC60C90921AA5D966537109656 khmmTERes;
$49693FA4B2A12A639DAC3849A1A69714 kicnsIconFamily;
$9042687E7B91F0D398CDB53579A9082B killCode;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessBlankAccessBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessBlankAccessMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessEveryoneReadBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessEveryoneReadMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessEveryoneSearchBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessEveryoneSearchMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessEveryoneWriteBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessEveryoneWriteMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessGroupReadBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessGroupReadMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessGroupSearchBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessGroupSearchMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessGroupWriteBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessGroupWriteMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerReadBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerReadMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerSearchBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerSearchMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerWriteBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessOwnerWriteMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessUserReadBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessUserReadMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessUserSearchBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessUserSearchMask;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessUserWriteBit;
$C6E2751603EF5DC81431696333BDC0D3 kioACAccessUserWriteMask;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNoMakeChangesBit;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNoMakeChangesMask;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNoSeeFilesBit;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNoSeeFilesMask;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNoSeeFolderBit;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNoSeeFolderMask;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNotOwnerBit;
$BDB9CB8CBB41E9FA4560B945382E898E kioACUserNotOwnerMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBFileLockedBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBFileLockedMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBLargeFileBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBLargeFileMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBModifiedBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBModifiedMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBOwnClumpBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBOwnClumpMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBResourceBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBResourceMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBSharedWriteBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBSharedWriteMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBWriteBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBWriteLockedBit;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBWriteLockedMask;
$C974BC6A0E76B887C6D75672F6DDE789 kioFCBWriteMask;
$211077E282033C3248342175C2161A3D kioFlAttribCopyProtBit;
$211077E282033C3248342175C2161A3D kioFlAttribCopyProtMask;
$211077E282033C3248342175C2161A3D kioFlAttribDataOpenBit;
$211077E282033C3248342175C2161A3D kioFlAttribDataOpenMask;
$211077E282033C3248342175C2161A3D kioFlAttribDirBit;
$211077E282033C3248342175C2161A3D kioFlAttribDirMask;
$211077E282033C3248342175C2161A3D kioFlAttribFileOpenBit;
$211077E282033C3248342175C2161A3D kioFlAttribFileOpenMask;
$211077E282033C3248342175C2161A3D kioFlAttribInSharedBit;
$211077E282033C3248342175C2161A3D kioFlAttribInSharedMask;
$211077E282033C3248342175C2161A3D kioFlAttribLockedBit;
$211077E282033C3248342175C2161A3D kioFlAttribLockedMask;
$211077E282033C3248342175C2161A3D kioFlAttribMountedBit;
$211077E282033C3248342175C2161A3D kioFlAttribMountedMask;
$211077E282033C3248342175C2161A3D kioFlAttribResOpenBit;
$211077E282033C3248342175C2161A3D kioFlAttribResOpenMask;
$211077E282033C3248342175C2161A3D kioFlAttribSharePointBit;
$211077E282033C3248342175C2161A3D kioFlAttribSharePointMask;
$DCB906B251997110FE5CEAC595951954 kioVAtrbDefaultVolumeBit;
$DCB906B251997110FE5CEAC595951954 kioVAtrbDefaultVolumeMask;
$DCB906B251997110FE5CEAC595951954 kioVAtrbFilesOpenBit;
$DCB906B251997110FE5CEAC595951954 kioVAtrbFilesOpenMask;
$DCB906B251997110FE5CEAC595951954 kioVAtrbHardwareLockedBit;
$DCB906B251997110FE5CEAC595951954 kioVAtrbHardwareLockedMask;
$DCB906B251997110FE5CEAC595951954 kioVAtrbSoftwareLockedBit;
$DCB906B251997110FE5CEAC595951954 kioVAtrbSoftwareLockedMask;
$8A1EB3A3B3C276E8089B4252BD218943 knoGroup;
$D0CBFDEF499675431B87E20AD18DADFE knoUser;
$3396F92FAC0BE03A6A5A931576A5D5DF koreanHighWord;
$C6E2751603EF5DC81431696333BDC0D3 kownerPrivileges;
$B55010A37A19B1A728F7DDED4CDA7068 lCloseMsg;
$785981E28C60F1F0C5688AF20BD056E0 lDoHAutoscroll;
$EBAA67688B41DDEFF78766605A13EC01 lDoHAutoscrollBit;
$785981E28C60F1F0C5688AF20BD056E0 lDoVAutoscroll;
$EBAA67688B41DDEFF78766605A13EC01 lDoVAutoscrollBit;
$B55010A37A19B1A728F7DDED4CDA7068 lDrawMsg;
$785981E28C60F1F0C5688AF20BD056E0 lDrawingModeOff;
$EBAA67688B41DDEFF78766605A13EC01 lDrawingModeOffBit;
$B436F06F978714DDCBDAF1A1E26EE25E lExtendDrag;
$6D34F5F4B8D975C63270E1C248AF6853 lExtendDragBit;
$B55010A37A19B1A728F7DDED4CDA7068 lHiliteMsg;
$B55010A37A19B1A728F7DDED4CDA7068 lInitMsg;
$B436F06F978714DDCBDAF1A1E26EE25E lNoDisjoint;
$6D34F5F4B8D975C63270E1C248AF6853 lNoDisjointBit;
$B436F06F978714DDCBDAF1A1E26EE25E lNoExtend;
$6D34F5F4B8D975C63270E1C248AF6853 lNoExtendBit;
$B436F06F978714DDCBDAF1A1E26EE25E lNoNilHilite;
$6D34F5F4B8D975C63270E1C248AF6853 lNoNilHiliteBit;
$B436F06F978714DDCBDAF1A1E26EE25E lNoRect;
$6D34F5F4B8D975C63270E1C248AF6853 lNoRectBit;
$B436F06F978714DDCBDAF1A1E26EE25E lOnlyOne;
$6D34F5F4B8D975C63270E1C248AF6853 lOnlyOneBit;
$B436F06F978714DDCBDAF1A1E26EE25E lUseSense;
$6D34F5F4B8D975C63270E1C248AF6853 lUseSenseBit;
$4D8EB25094034425D6900250B0A6C0DE laDictionaryNotOpenedErr;
$4D8EB25094034425D6900250B0A6C0DE laDictionaryTooManyErr;
$4D8EB25094034425D6900250B0A6C0DE laDictionaryUnknownErr;
$4D8EB25094034425D6900250B0A6C0DE laEngineNotFoundErr;
$4D8EB25094034425D6900250B0A6C0DE laEnvironmentBusyErr;
$4D8EB25094034425D6900250B0A6C0DE laEnvironmentExistErr;
$4D8EB25094034425D6900250B0A6C0DE laEnvironmentNotFoundErr;
$4D8EB25094034425D6900250B0A6C0DE laFailAnalysisErr;
$4D8EB25094034425D6900250B0A6C0DE laInvalidPathErr;
$4D8EB25094034425D6900250B0A6C0DE laNoMoreMorphemeErr;
$4D8EB25094034425D6900250B0A6C0DE laPropertyErr;
$4D8EB25094034425D6900250B0A6C0DE laPropertyIsReadOnlyErr;
$4D8EB25094034425D6900250B0A6C0DE laPropertyNotFoundErr;
$4D8EB25094034425D6900250B0A6C0DE laPropertyUnknownErr;
$4D8EB25094034425D6900250B0A6C0DE laPropertyValueErr;
$4D8EB25094034425D6900250B0A6C0DE laTextOverFlowErr;
$4D8EB25094034425D6900250B0A6C0DE laTooSmallBufferErr;
$3BB830724CD4649A590AE644D49AFE76 langAfricaans;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langAfrikaans;
$C30766913F3308CF86D04909B2F57587 langAlbanian;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langAmharic;
$57DFDAE423EEE50EA737E6138FA1E6EE langArabic;
$B566F8798E33FBD972BEEAF4CA892CBE langArmenian;
$B566F8798E33FBD972BEEAF4CA892CBE langAssamese;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langAymara;
$B566F8798E33FBD972BEEAF4CA892CBE langAzerbaijanAr;
$4D6B3D4521C7A855C65EE51F4F6020C7 langAzerbaijanRoman;
$B566F8798E33FBD972BEEAF4CA892CBE langAzerbaijani;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langBasque;
$C30766913F3308CF86D04909B2F57587 langBelorussian;
$B566F8798E33FBD972BEEAF4CA892CBE langBengali;
$4D6B3D4521C7A855C65EE51F4F6020C7 langBreton;
$C30766913F3308CF86D04909B2F57587 langBulgarian;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langBurmese;
$C30766913F3308CF86D04909B2F57587 langByelorussian;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langCatalan;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langChewa;
$3BB830724CD4649A590AE644D49AFE76 langChinese;
$57DFDAE423EEE50EA737E6138FA1E6EE langCroatian;
$C30766913F3308CF86D04909B2F57587 langCzech;
$57DFDAE423EEE50EA737E6138FA1E6EE langDanish;
$57DFDAE423EEE50EA737E6138FA1E6EE langDutch;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langDzongkha;
$57DFDAE423EEE50EA737E6138FA1E6EE langEnglish;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langEsperanto;
$C30766913F3308CF86D04909B2F57587 langEstonian;
$3BB830724CD4649A590AE644D49AFE76 langFaeroese;
$C30766913F3308CF86D04909B2F57587 langFaroese;
$C30766913F3308CF86D04909B2F57587 langFarsi;
$57DFDAE423EEE50EA737E6138FA1E6EE langFinnish;
$C30766913F3308CF86D04909B2F57587 langFlemish;
$57DFDAE423EEE50EA737E6138FA1E6EE langFrench;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langGalician;
$3BB830724CD4649A590AE644D49AFE76 langGalla;
$B566F8798E33FBD972BEEAF4CA892CBE langGeorgian;
$57DFDAE423EEE50EA737E6138FA1E6EE langGerman;
$57DFDAE423EEE50EA737E6138FA1E6EE langGreek;
$4D6B3D4521C7A855C65EE51F4F6020C7 langGreekPoly;
$4D6B3D4521C7A855C65EE51F4F6020C7 langGreenlandic;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langGuarani;
$B566F8798E33FBD972BEEAF4CA892CBE langGujarati;
$57DFDAE423EEE50EA737E6138FA1E6EE langHebrew;
$57DFDAE423EEE50EA737E6138FA1E6EE langHindi;
$C30766913F3308CF86D04909B2F57587 langHungarian;
$57DFDAE423EEE50EA737E6138FA1E6EE langIcelandic;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langIndonesian;
$4D6B3D4521C7A855C65EE51F4F6020C7 langInuktitut;
$3BB830724CD4649A590AE644D49AFE76 langIrish;
$C30766913F3308CF86D04909B2F57587 langIrishGaelic;
$4D6B3D4521C7A855C65EE51F4F6020C7 langIrishGaelicScript;
$57DFDAE423EEE50EA737E6138FA1E6EE langItalian;
$57DFDAE423EEE50EA737E6138FA1E6EE langJapanese;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langJavaneseRom;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langKannada;
$B566F8798E33FBD972BEEAF4CA892CBE langKashmiri;
$B566F8798E33FBD972BEEAF4CA892CBE langKazakh;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langKhmer;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langKinyarwanda;
$B566F8798E33FBD972BEEAF4CA892CBE langKirghiz;
$57DFDAE423EEE50EA737E6138FA1E6EE langKorean;
$B566F8798E33FBD972BEEAF4CA892CBE langKurdish;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langLao;
$3BB830724CD4649A590AE644D49AFE76 langLappish;
$3BB830724CD4649A590AE644D49AFE76 langLapponian;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langLatin;
$C30766913F3308CF86D04909B2F57587 langLatvian;
$3BB830724CD4649A590AE644D49AFE76 langLettish;
$C30766913F3308CF86D04909B2F57587 langLithuanian;
$C30766913F3308CF86D04909B2F57587 langMacedonian;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langMalagasy;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langMalayArabic;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langMalayRoman;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langMalayalam;
$3BB830724CD4649A590AE644D49AFE76 langMalta;
$57DFDAE423EEE50EA737E6138FA1E6EE langMaltese;
$4D6B3D4521C7A855C65EE51F4F6020C7 langManxGaelic;
$B566F8798E33FBD972BEEAF4CA892CBE langMarathi;
$B566F8798E33FBD972BEEAF4CA892CBE langMoldavian;
$B566F8798E33FBD972BEEAF4CA892CBE langMongolian;
$B566F8798E33FBD972BEEAF4CA892CBE langMongolianCyr;
$B566F8798E33FBD972BEEAF4CA892CBE langNepali;
$57DFDAE423EEE50EA737E6138FA1E6EE langNorwegian;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langNyanja;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langOriya;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langOromo;
$B566F8798E33FBD972BEEAF4CA892CBE langPashto;
$C30766913F3308CF86D04909B2F57587 langPersian;
$C30766913F3308CF86D04909B2F57587 langPolish;
$3BB830724CD4649A590AE644D49AFE76 langPortugese;
$57DFDAE423EEE50EA737E6138FA1E6EE langPortuguese;
$B566F8798E33FBD972BEEAF4CA892CBE langPunjabi;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langQuechua;
$C30766913F3308CF86D04909B2F57587 langRomanian;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langRuanda;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langRundi;
$C30766913F3308CF86D04909B2F57587 langRussian;
$3BB830724CD4649A590AE644D49AFE76 langSaamisk;
$C30766913F3308CF86D04909B2F57587 langSami;
$B566F8798E33FBD972BEEAF4CA892CBE langSanskrit;
$4D6B3D4521C7A855C65EE51F4F6020C7 langScottishGaelic;
$C30766913F3308CF86D04909B2F57587 langSerbian;
$C30766913F3308CF86D04909B2F57587 langSimpChinese;
$B566F8798E33FBD972BEEAF4CA892CBE langSindhi;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langSinhalese;
$C30766913F3308CF86D04909B2F57587 langSlovak;
$C30766913F3308CF86D04909B2F57587 langSlovenian;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langSomali;
$57DFDAE423EEE50EA737E6138FA1E6EE langSpanish;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langSundaneseRom;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langSwahili;
$57DFDAE423EEE50EA737E6138FA1E6EE langSwedish;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langTagalog;
$B566F8798E33FBD972BEEAF4CA892CBE langTajiki;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langTamil;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langTatar;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langTelugu;
$57DFDAE423EEE50EA737E6138FA1E6EE langThai;
$B566F8798E33FBD972BEEAF4CA892CBE langTibetan;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langTigrinya;
$4D6B3D4521C7A855C65EE51F4F6020C7 langTongan;
$57DFDAE423EEE50EA737E6138FA1E6EE langTradChinese;
$57DFDAE423EEE50EA737E6138FA1E6EE langTurkish;
$B566F8798E33FBD972BEEAF4CA892CBE langTurkmen;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langUighur;
$C30766913F3308CF86D04909B2F57587 langUkrainian;
$F8FE97EC44DDB5C218211627CDA1F590 langUnspecified;
$57DFDAE423EEE50EA737E6138FA1E6EE langUrdu;
$B566F8798E33FBD972BEEAF4CA892CBE langUzbek;
$6A17DABD73E2AE9056ED74CF3A61AAD5 langVietnamese;
$A63DD97E2CBDA8A7543A4F9AAF81D1AF langWelsh;
$C30766913F3308CF86D04909B2F57587 langYiddish;
$3BB830724CD4649A590AE644D49AFE76 langYugoslavian;
$6AFAE475820C24F181AED14A4625BE64 lapProtErr;
$3CACD39A2679D329B350058CB0EDFC3A large1BitMask;
$3CACD39A2679D329B350058CB0EDFC3A large4BitData;
$3CACD39A2679D329B350058CB0EDFC3A large8BitData;
$4AA72FB96FE40BDE945A00A3EE3D602E lastDskErr;
$65BF52D48FE741677D607667E176A9EF launchAllow24Bit;
$65BF52D48FE741677D607667E176A9EF launchContinue;
$65BF52D48FE741677D607667E176A9EF launchDontSwitch;
$65BF52D48FE741677D607667E176A9EF launchInhibitDaemon;
$65BF52D48FE741677D607667E176A9EF launchNoFileFlags;
$65BF52D48FE741677D607667E176A9EF launchUseMinimum;
$F842FD2D88627E8C9CB75D292100935D leftCaret;
$A090D39FCC75420A865A59B6557FCDFB leftOverBlockSize;
$3A0529DF53FD0FCB1009E9B11B87DC72 leftOverChars;
$1B23EBE69E7C72E0D4B27DFF733651FE leftSingGuillemet;
$00B8682EB436791A52B8F11CCB13C105 leftStyleRun;
$2E21CDC9416351B60D3647421538B7E9 limitReachedErr;
$0A460A6E82C5C9197C39E6203E2D9451 linkSoundComponentsCmd;
$A5BD715C8EAA008A7A3794353BC5F23C localOnlyErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsBadPortErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsBadSurfaceErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsSurfaceLostErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsWindowClippedErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsWindowMovedErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsWindowResizedErr;
$D1694FAFDED606F5C1530A80708D1A68 lockPortBitsWrongGDeviceErr;
$7493DC379C4D203E0ABDB52409B2119D longDate;
$3A0529DF53FD0FCB1009E9B11B87DC72 longDateFound;
$4FBD46A7782F6749F1F35ACCB96A0A2C longDay;
$4FBD46A7782F6749F1F35ACCB96A0A2C longMonth;
$4FBD46A7782F6749F1F35ACCB96A0A2C longWeek;
$4FBD46A7782F6749F1F35ACCB96A0A2C longYear;
$15527A7957C35DDC42E8F9BAFCC21D16 mBarNFnd;
$8A0661E97C5E67754D33CB96D6D3190F mBaseOffset;
$8A0661E97C5E67754D33CB96D6D3190F mBounds;
$FF754F24174D7C64157D04EF7406CF1D mCalcItemMsg;
$8A0661E97C5E67754D33CB96D6D3190F mCmpCount;
$8A0661E97C5E67754D33CB96D6D3190F mCmpSize;
$8A0661E97C5E67754D33CB96D6D3190F mDevType;
$090FD46DADED99452600AACF39205147 mDownMask;
$FF754F24174D7C64157D04EF7406CF1D mDrawMsg;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 mFulErr;
$8A0661E97C5E67754D33CB96D6D3190F mHRes;
$8A0661E97C5E67754D33CB96D6D3190F mPageCnt;
$8A0661E97C5E67754D33CB96D6D3190F mPixelSize;
$8A0661E97C5E67754D33CB96D6D3190F mPixelType;
$8A0661E97C5E67754D33CB96D6D3190F mPlaneBytes;
$FF754F24174D7C64157D04EF7406CF1D mPopUpMsg;
$8A0661E97C5E67754D33CB96D6D3190F mRowBytes;
$FF754F24174D7C64157D04EF7406CF1D mSizeMsg;
$8A0661E97C5E67754D33CB96D6D3190F mTable;
$090FD46DADED99452600AACF39205147 mUpMask;
$8A0661E97C5E67754D33CB96D6D3190F mVRes;
$8A0661E97C5E67754D33CB96D6D3190F mVersion;
$8A0661E97C5E67754D33CB96D6D3190F mVertRefRate;
$8A0661E97C5E67754D33CB96D6D3190F mVidParams;
$D129F4DFEBA165F72EA98C618C3DD9EB macDev;
$1B23EBE69E7C72E0D4B27DFF733651FE macron;
$229E80E760A3609929A8A4D193AE679E magentaBit;
$2EE6D656A6356132BC5631EBF7AA5929 magentaColor;
$008155B23C6C847D4FC048674B3D561B mainScreen;
$32C727D68F64E81892FE811EECA6C0F9 mapChanged;
$69B72E9C37C0D09B287064DE0C3BE45E mapChangedBit;
$32C727D68F64E81892FE811EECA6C0F9 mapCompact;
$69B72E9C37C0D09B287064DE0C3BE45E mapCompactBit;
$F3876F991244DA6C9E2D6E25C6A258B7 mapPix;
$CD245178CB213C313AFEA4423394C154 mapPixBit;
$44F391F6F759E67D2435F1C3F9758D28 mapReadErr;
$32C727D68F64E81892FE811EECA6C0F9 mapReadOnly;
$69B72E9C37C0D09B287064DE0C3BE45E mapReadOnlyBit;
$BA4AF89C300243A236DEAC5502E7295F matrixErr;
$CF27797617E2017D26856567A7A44DE5 maxCDBLength;
$AFB34579D5BC8D4076068676B894D91A maxCountry;
$D099BBBF644965626627A4C08DED2C2A maxDateField;
$3326E0CEB360AB4CAA9F1D7226F37565 maxSize;
$2AFA9741D4492F551C527940D8BE691A maxSizeToGrowTooSmall;
$E0D1826B5FFF107D16D7DACE7DE82934 mctAllItems;
$E0D1826B5FFF107D16D7DACE7DE82934 mctLastIDIndic;
$774312103BEE5735EC77C58B53E981B1 mdy;
$2AFA9741D4492F551C527940D8BE691A mediaTypesDontMatch;
$480234505259C80FE1B6085A2FAC9295 medianMethod;
$62AF96A599EA1D1B2CD83BD481E510DC memAZErr;
$62AF96A599EA1D1B2CD83BD481E510DC memAdrErr;
$62AF96A599EA1D1B2CD83BD481E510DC memBCErr;
$A9758B604953F44B643EE3821B96EE8F memFragErr;
$62AF96A599EA1D1B2CD83BD481E510DC memFullErr;
$62AF96A599EA1D1B2CD83BD481E510DC memLockedErr;
$62AF96A599EA1D1B2CD83BD481E510DC memPCErr;
$62AF96A599EA1D1B2CD83BD481E510DC memPurErr;
$62AF96A599EA1D1B2CD83BD481E510DC memROZErr;
$62AF96A599EA1D1B2CD83BD481E510DC memROZError;
$62AF96A599EA1D1B2CD83BD481E510DC memROZWarn;
$62AF96A599EA1D1B2CD83BD481E510DC memSCErr;
$62AF96A599EA1D1B2CD83BD481E510DC memWZErr;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuInvalidErr;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuItemNotFoundErr;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuNotFoundErr;
$AA894E32487E3862FBB3C0CE96496867 menuPrgErr;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuPropertyInvalid;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuPropertyInvalidErr;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuPropertyNotFoundErr;
$CAE53EB5C966C28D50FCE6EEBCACB9E8 menuUsesSystemDefErr;
$00B8682EB436791A52B8F11CCB13C105 middleStyleRun;
$7156C40489E3788D0BB8FA7644ADC7FB midiDupIDErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiInvalidCmdErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B midiManagerAbsentOSErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiNameLenErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiNoClientErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiNoConErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiNoPortErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiTooManyConsErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiTooManyPortsErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiVConnectErr;
$7156C40489E3788D0BB8FA7644ADC7FB midiVConnectMade;
$7156C40489E3788D0BB8FA7644ADC7FB midiVConnectRmvd;
$7156C40489E3788D0BB8FA7644ADC7FB midiWriteErr;
$AFB34579D5BC8D4076068676B894D91A minCountry;
$4FBD46A7782F6749F1F35ACCB96A0A2C minLeadingZ;
$3CACD39A2679D329B350058CB0EDFC3A mini1BitMask;
$3CACD39A2679D329B350058CB0EDFC3A mini4BitData;
$3CACD39A2679D329B350058CB0EDFC3A mini8BitData;
$AC49BCB98774BA196F1D518C13C65C80 minuteField;
$69A3BF2E803A4172C51973E11B183607 minuteMask;
$2AFA9741D4492F551C527940D8BE691A missingRequiredParameterErr;
$3EFE4C19626DB437FA44418D8FB8B277 mmInternalError;
$4FBD46A7782F6749F1F35ACCB96A0A2C mntLdingZ;
$C89AAE020909AAE924D2F95C9B3695CF mode32BitCompatible;
$C89AAE020909AAE924D2F95C9B3695CF modeCanBackground;
$C89AAE020909AAE924D2F95C9B3695CF modeControlPanel;
$C89AAE020909AAE924D2F95C9B3695CF modeDeskAccessory;
$C89AAE020909AAE924D2F95C9B3695CF modeDisplayManagerAware;
$C89AAE020909AAE924D2F95C9B3695CF modeDoesActivateOnFGSwitch;
$C89AAE020909AAE924D2F95C9B3695CF modeGetAppDiedMsg;
$C89AAE020909AAE924D2F95C9B3695CF modeGetFrontClicks;
$C89AAE020909AAE924D2F95C9B3695CF modeHighLevelEventAware;
$C89AAE020909AAE924D2F95C9B3695CF modeLaunchDontSwitch;
$B4F7DCEEA5CE256D717FC74FF825119F modeLiteral;
$C89AAE020909AAE924D2F95C9B3695CF modeLocalAndRemoteHLEvents;
$C89AAE020909AAE924D2F95C9B3695CF modeMultiLaunch;
$C89AAE020909AAE924D2F95C9B3695CF modeNeedSuspendResume;
$B4F7DCEEA5CE256D717FC74FF825119F modeNormal;
$C89AAE020909AAE924D2F95C9B3695CF modeOnlyBackground;
$B4F7DCEEA5CE256D717FC74FF825119F modePhonemes;
$C89AAE020909AAE924D2F95C9B3695CF modeReserved;
$C89AAE020909AAE924D2F95C9B3695CF modeStationeryAware;
$B4F7DCEEA5CE256D717FC74FF825119F modeText;
$C89AAE020909AAE924D2F95C9B3695CF modeUseTextEditServices;
$6124E96ADDA1B0421A57CB4AF73D64C1 modemInstalledBit;
$20C55E9D9BC8261515838E8F528E25E9 modemInstalledMask;
$6124E96ADDA1B0421A57CB4AF73D64C1 modemOnBit;
$6124E96ADDA1B0421A57CB4AF73D64C1 modemOnHookBit;
$20C55E9D9BC8261515838E8F528E25E9 modemOnHookMask;
$20C55E9D9BC8261515838E8F528E25E9 modemOnMask;
$E008CB1471F2CE238ECDD36D0ADBCA4C modemSetBit;
$AC49BCB98774BA196F1D518C13C65C80 monthField;
$69A3BF2E803A4172C51973E11B183607 monthMask;
$3B240B4C9ACC633426814EA91DA89F65 mountedFolderIconResource;
$FEBB2992DC4ADCE18624A3BF5CCB540F mouseDown;
$82D1E6E6D578224BE82D48C2B6E7DE65 mouseMovedMessage;
$FEBB2992DC4ADCE18624A3BF5CCB540F mouseUp;
$54D8896E57898845ADF65F1EA92174A9 movableDBoxProc;
$2AFA9741D4492F551C527940D8BE691A movieTextNotFoundErr;
$2AFA9741D4492F551C527940D8BE691A movieToolboxUninitialized;
$E6781A715BE3DA7D528465B69B4BC154 mpWorkFlagCopyWorkBlock;
$E6781A715BE3DA7D528465B69B4BC154 mpWorkFlagDoCompletion;
$E6781A715BE3DA7D528465B69B4BC154 mpWorkFlagDoWork;
$E6781A715BE3DA7D528465B69B4BC154 mpWorkFlagDontBlock;
$E6781A715BE3DA7D528465B69B4BC154 mpWorkFlagGetIsRunning;
$E6781A715BE3DA7D528465B69B4BC154 mpWorkFlagGetProcessorCount;
$E3C80D94FC48D4CBFF4A338892F667A1 multiplePublisherWrn;
$42A49EA8AE7BAE129AB675773FAEF748 mustProcessorCycle;
$774312103BEE5735EC77C58B53E981B1 myd;
$07801A5B3B251E2FE1A1830D91B5053F nWIDTHHook;
$3440D64D16FB405A2CB84B328E064CCF nameFontTableTag;
$A5BD715C8EAA008A7A3794353BC5F23C nameTypeErr;
$246EB169978D9DADD0725274EFA5F65F nbpBuffOvr;
$246EB169978D9DADD0725274EFA5F65F nbpConfDiff;
$246EB169978D9DADD0725274EFA5F65F nbpDuplicate;
$246EB169978D9DADD0725274EFA5F65F nbpNISErr;
$246EB169978D9DADD0725274EFA5F65F nbpNoConfirm;
$246EB169978D9DADD0725274EFA5F65F nbpNotFound;
$2140534AFEBF1A2FEC4DC9038366C647 needClearScrapErr;
$AA894E32487E3862FBB3C0CE96496867 negZcbFreeErr;
MACRO_positiveInfinity negativeInfinity;
$A5BD715C8EAA008A7A3794353BC5F23C networkErr;
$4D8B7D1349328D7C0B79EA781F2B24F6 networkEvt;
$4D8B7D1349328D7C0B79EA781F2B24F6 networkMask;
$F3876F991244DA6C9E2D6E25C6A258B7 newDepth;
$CD245178CB213C313AFEA4423394C154 newDepthBit;
$7ABC2998878633516ADEFA55C21F1171 newLineBit;
$7ABC2998878633516ADEFA55C21F1171 newLineCharMask;
$7ABC2998878633516ADEFA55C21F1171 newLineMask;
$803E1314D48F0C9DF1694F5B75DC685E newPMSigWord;
$F3876F991244DA6C9E2D6E25C6A258B7 newRowBytes;
$CD245178CB213C313AFEA4423394C154 newRowBytesBit;
$2DA05D06990FCEC1EA5697B9BD8DA598 newSelMsg;
MACRO_nil nil;
$62AF96A599EA1D1B2CD83BD481E510DC nilHandleErr;
$2140534AFEBF1A2FEC4DC9038366C647 nilScrapFlavorDataErr;
$43AA161B586515D7CE0F4F8B362A79BD nmTypErr;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 nmType;
$F5733A20729282EBCF3804504A9796F3 noAdrMkErr;
$6AFAE475820C24F181AED14A4625BE64 noBridgeErr;
$7ABC2998878633516ADEFA55C21F1171 noCacheBit;
$7ABC2998878633516ADEFA55C21F1171 noCacheMask;
$EA33CD4CB37232534905F76FFB5C3F1E noCalls;
$D1694FAFDED606F5C1530A80708D1A68 noCodecErr;
$7843CFC230C7B63097910348F257833D noConstraint;
$BA4AF89C300243A236DEAC5502E7295F noDMAErr;
$F77E3C3D1101CCCA05824B85966C0086 noDataArea;
$2AFA9741D4492F551C527940D8BE691A noDataHandler;
$2AFA9741D4492F551C527940D8BE691A noDefaultDataRef;
$A5BD715C8EAA008A7A3794353BC5F23C noDefaultUserErr;
$F5D25084AB3C40D9EEA892B8C65FBDB2 noDeviceForChannel;
$4AA72FB96FE40BDE945A00A3EE3D602E noDriveErr;
$008155B23C6C847D4FC048674B3D561B noDriver;
$F5733A20729282EBCF3804504A9796F3 noDtaMkErr;
$2E759173088CD34CCF4479622CDEF5B8 noErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B noExportProcAvailableErr;
$A5BD715C8EAA008A7A3794353BC5F23C noGlobalsErr;
$54D8896E57898845ADF65F1EA92174A9 noGrowDocProc;
$B1318AEC6DDB22F080A547A9A181D628 noHardware;
$621775189DBE97248B7FB782F8F10678 noHardwareErr;
$5299BEEE17FE295435C76CB19C21F235 noHelpForItem;
$1014588365877AFD25E859D84C4C8176 noIconDataAvailableErr;
$A5BD715C8EAA008A7A3794353BC5F23C noInformErr;
$712386A955D55ECCA8691C9DF9CD79AC noMMUErr;
$E4D926CFAC96D1A9C67CAB14770D8CA3 noMPPErr;
$39BB08BE97442728A4F53B80076F6C3F noMacDskErr;
$A5BD715C8EAA008A7A3794353BC5F23C noMachineNameErr;
$1381B698354A99C3E10D94E51E14B61E noMark;
$60119CD306E3538FFA4E81381379D29C noMaskFoundErr;
$2AFA9741D4492F551C527940D8BE691A noMediaHandler;
$44F391F6F759E67D2435F1C3F9758D28 noMemForPictPlaybackErr;
$2E21CDC9416351B60D3647421538B7E9 noMemoryNodeFailedInitialize;
$5D2ED6E9C3B52C2B530C241D43578F10 noMoreFolderDescErr;
$BA4AF89C300243A236DEAC5502E7295F noMoreKeyColorsErr;
$B1318AEC6DDB22F080A547A9A181D628 noMoreRealTime;
$2AFA9741D4492F551C527940D8BE691A noMovieFound;
$F3876F991244DA6C9E2D6E25C6A258B7 noNewDevice;
$CD245178CB213C313AFEA4423394C154 noNewDeviceBit;
$4AA72FB96FE40BDE945A00A3EE3D602E noNybErr;
$A9758B604953F44B643EE3821B96EE8F noOutstandingHLE;
$D497865AB20A3AD87EEE5277CBD67E69 noPathMappingErr;
$A5BD715C8EAA008A7A3794353BC5F23C noPortErr;
$ED7426C36EBB82C0ECCADDCACB27D156 noPrefAppErr;
$513253074AF884203639B3D8DAF000AD noQueueBit;
$2AFA9741D4492F551C527940D8BE691A noRecordOfApp;
$F77E3C3D1101CCCA05824B85966C0086 noRelErr;
$EA33CD4CB37232534905F76FFB5C3F1E noRequest;
$A5BD715C8EAA008A7A3794353BC5F23C noResponseErr;
$3B288B253B9DFA8790EBE30055BE38F5 noScrapErr;
$2140534AFEBF1A2FEC4DC9038366C647 noScrapPromiseKeeperErr;
$F77E3C3D1101CCCA05824B85966C0086 noSendResp;
$A5BD715C8EAA008A7A3794353BC5F23C noSessionErr;
$2AFA9741D4492F551C527940D8BE691A noSoundTrackInMovieErr;
$2AFA9741D4492F551C527940D8BE691A noSourceTreeFoundErr;
$1014588365877AFD25E859D84C4C8176 noSuchIconErr;
$00479C61961A244562671FE5ED76F811 noSuitableDisplaysErr;
$84C242BEA25FE377EB24CF870780C809 noSynthFound;
$D1694FAFDED606F5C1530A80708D1A68 noThumbnailFoundErr;
$A5BD715C8EAA008A7A3794353BC5F23C noToolboxNameErr;
$ED7426C36EBB82C0ECCADDCACB27D156 noTranslationPathErr;
$3B288B253B9DFA8790EBE30055BE38F5 noTypeErr;
$A9758B604953F44B643EE3821B96EE8F noUserInteractionAllowed;
$A5BD715C8EAA008A7A3794353BC5F23C noUserNameErr;
$A5BD715C8EAA008A7A3794353BC5F23C noUserRecErr;
$A5BD715C8EAA008A7A3794353BC5F23C noUserRefErr;
$2AFA9741D4492F551C527940D8BE691A noVideoTrackInMovieErr;
$FDA6DF694F750A254AE35C64EB154927 noiseXFer;
$00479C61961A244562671FE5ED76F811 nonDragOriginatorErr;
$A97D6D10E3AD8AFA1EA71F908580BE17 nonGlyphID;
$2AFA9741D4492F551C527940D8BE691A nonMatchingEditState;
$CA37B7C591AB80BE0B169161AB784E55 normal;
$229E80E760A3609929A8A4D193AE679E normalBit;
$C625086FF7C44828098F3E200ADA2515 normalMsg;
$4AA72FB96FE40BDE945A00A3EE3D602E notAFileErr;
$2E21CDC9416351B60D3647421538B7E9 notAQTVRMovieErr;
$4AA72FB96FE40BDE945A00A3EE3D602E notARemountErr;
$D497865AB20A3AD87EEE5277CBD67E69 notAllowedToSaveMovieErr;
$6A3D362AE979A847958F56E617827AD1 notAppropriateForClassic;
$14338A5B3D28FC26400B4BB31F21F442 notBTree;
$42FB63263B63A280A710224707F66ACA notCompressed;
$B1318AEC6DDB22F080A547A9A181D628 notEnoughBufferSpace;
$D497865AB20A3AD87EEE5277CBD67E69 notEnoughDataErr;
$F5D25084AB3C40D9EEA892B8C65FBDB2 notEnoughDiskSpaceToGrab;
$B1318AEC6DDB22F080A547A9A181D628 notEnoughHardware;
$621775189DBE97248B7FB782F8F10678 notEnoughHardwareErr;
$712386A955D55ECCA8691C9DF9CD79AC notEnoughMemoryErr;
$F5D25084AB3C40D9EEA892B8C65FBDB2 notEnoughMemoryToGrab;
$BA4AF89C300243A236DEAC5502E7295F notExactMatrixErr;
$BA4AF89C300243A236DEAC5502E7295F notExactSizeErr;
$712386A955D55ECCA8691C9DF9CD79AC notHeldErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B notImplementedMusicOSErr;
$A5BD715C8EAA008A7A3794353BC5F23C notInitErr;
$D497865AB20A3AD87EEE5277CBD67E69 notLeafAtomErr;
$712386A955D55ECCA8691C9DF9CD79AC notLockedErr;
$A5BD715C8EAA008A7A3794353BC5F23C notLoggedInErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 notOpenErr;
$CBAF5646069367B3450D2EB7E8DB23F4 notPatBic;
$CBAF5646069367B3450D2EB7E8DB23F4 notPatCopy;
$CBAF5646069367B3450D2EB7E8DB23F4 notPatOr;
$CBAF5646069367B3450D2EB7E8DB23F4 notPatXor;
$E3C80D94FC48D4CBFF4A338892F667A1 notRegisteredSectionErr;
$CBAF5646069367B3450D2EB7E8DB23F4 notSrcBic;
$CBAF5646069367B3450D2EB7E8DB23F4 notSrcCopy;
$CBAF5646069367B3450D2EB7E8DB23F4 notSrcOr;
$CBAF5646069367B3450D2EB7E8DB23F4 notSrcXor;
$E3C80D94FC48D4CBFF4A338892F667A1 notThePublisherWrn;
$49EADD111A232CC035C3C1BFA08B757A notTruncated;
$A8C97E4EDD9E089EB77DFE179D2C9A4B noteChannelNotAllocatedOSErr;
$9AE367475DB3252AE4C1C184F0EB9534 noteIcon;
$D06F78857E63F0F4B6642EB25A063142 nrCallNotSupported;
$D06F78857E63F0F4B6642EB25A063142 nrDataTruncatedErr;
$D06F78857E63F0F4B6642EB25A063142 nrExitedIteratorScope;
$D06F78857E63F0F4B6642EB25A063142 nrInvalidEntryIterationOp;
$D06F78857E63F0F4B6642EB25A063142 nrInvalidNodeErr;
$D06F78857E63F0F4B6642EB25A063142 nrIterationDone;
$D06F78857E63F0F4B6642EB25A063142 nrLockedErr;
$D06F78857E63F0F4B6642EB25A063142 nrNameErr;
$D06F78857E63F0F4B6642EB25A063142 nrNotCreatedErr;
$D06F78857E63F0F4B6642EB25A063142 nrNotEnoughMemoryErr;
$D06F78857E63F0F4B6642EB25A063142 nrNotFoundErr;
$D06F78857E63F0F4B6642EB25A063142 nrNotModifiedErr;
$D06F78857E63F0F4B6642EB25A063142 nrNotSlotDeviceErr;
$D06F78857E63F0F4B6642EB25A063142 nrOverrunErr;
$D06F78857E63F0F4B6642EB25A063142 nrPathBufferTooSmall;
$D06F78857E63F0F4B6642EB25A063142 nrPathNotFound;
$D06F78857E63F0F4B6642EB25A063142 nrPowerErr;
$D06F78857E63F0F4B6642EB25A063142 nrPowerSwitchAbortErr;
$D06F78857E63F0F4B6642EB25A063142 nrPropertyAlreadyExists;
$D06F78857E63F0F4B6642EB25A063142 nrResultCodeBase;
$D06F78857E63F0F4B6642EB25A063142 nrTransactionAborted;
$D06F78857E63F0F4B6642EB25A063142 nrTypeMismatchErr;
$39BB08BE97442728A4F53B80076F6C3F nsDrvErr;
$44F391F6F759E67D2435F1C3F9758D28 nsStackErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 nsvErr;
$D129F4DFEBA165F72EA98C618C3DD9EB nulDev;
$C625086FF7C44828098F3E200ADA2515 nulMsg;
$0A460A6E82C5C9197C39E6203E2D9451 nullCmd;
$FEBB2992DC4ADCE18624A3BF5CCB540F nullEvent;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingBadCurrencyPositionErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingBadFormatErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingBadNumberFormattingObjectErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingBadOptionsErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingBadTokenErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingDelimiterMissingErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingEmptyFormatErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingLiteralMissingErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingNotADigitErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingNotANumberErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingOverflowInDestinationErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingSpuriousCharErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingUnOrderedCurrencyRangeErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFormattingUnOrdredCurrencyRangeErr;
$6D2C7A5FE31392197FB79A2624E0D03A numberFortmattingNotADigitErr;
$4AA72FB96FE40BDE945A00A3EE3D602E offLinErr;
$1B23EBE69E7C72E0D4B27DFF733651FE ogonek;
$955AB7EDEF7D16C0C208B264FC667289 ok;
$C625086FF7C44828098F3E200ADA2515 okMsg;
$803E1314D48F0C9DF1694F5B75DC685E oldPMSigWord;
$8A0661E97C5E67754D33CB96D6D3190F oneBitMode;
$00B8682EB436791A52B8F11CCB13C105 onlyStyleRun;
$39BB08BE97442728A4F53B80076F6C3F opWrErr;
$621775189DBE97248B7FB782F8F10678 openErr;
$02BA74D5F373AE3510806004249404D3 openFolderIconResource;
$336CC6651FCB0DCB616C524240E3BE5F optionKey;
$A8C358955E8CB025A08708108945A486 optionKeyBit;
$8AF6E7F2626BFF759844C59B98E0CF1A os2FontTableTag;
$FEBB2992DC4ADCE18624A3BF5CCB540F osEvt;
$DD1E55986C4B43D5A4A79B56B7B8A8F5 osEvtMessageMask;
$090FD46DADED99452600AACF39205147 osMask;
$CA37B7C591AB80BE0B169161AB784E55 outline;
$147E82B1B28920CD4B3E15BD59C82A4F outlineBit;
$1B23EBE69E7C72E0D4B27DFF733651FE overDot;
$2E70F577918B25A15CE357A167451738 overlayDITL;
$3B240B4C9ACC633426814EA91DA89F65 ownedFolderIconResource;
$032F0AE77CBBDD3683862C18808C2DD6 pARADialIn;
$7D6ED94B512169AF3FF6F2EA932D25FF pASDateString;
$7D6ED94B512169AF3FF6F2EA932D25FF pASDay;
$5E879841A9E7F0D0A6CE119A872ABAD5 pASDays;
$5E879841A9E7F0D0A6CE119A872ABAD5 pASHours;
$421AAECC2A305822C1138F7F55676B83 pASIt;
$421AAECC2A305822C1138F7F55676B83 pASMe;
$5E879841A9E7F0D0A6CE119A872ABAD5 pASMinutes;
$7D6ED94B512169AF3FF6F2EA932D25FF pASMonth;
$421AAECC2A305822C1138F7F55676B83 pASParent;
$421AAECC2A305822C1138F7F55676B83 pASPi;
$421AAECC2A305822C1138F7F55676B83 pASPrintDepth;
$421AAECC2A305822C1138F7F55676B83 pASPrintLength;
$5E879841A9E7F0D0A6CE119A872ABAD5 pASQuote;
$421AAECC2A305822C1138F7F55676B83 pASResult;
$421AAECC2A305822C1138F7F55676B83 pASReturn;
$5E879841A9E7F0D0A6CE119A872ABAD5 pASSeconds;
$421AAECC2A305822C1138F7F55676B83 pASSpace;
$421AAECC2A305822C1138F7F55676B83 pASTab;
$7D6ED94B512169AF3FF6F2EA932D25FF pASTime;
$7D6ED94B512169AF3FF6F2EA932D25FF pASTimeString;
$421AAECC2A305822C1138F7F55676B83 pASTopLevelScript;
$7D6ED94B512169AF3FF6F2EA932D25FF pASWeekday;
$5E879841A9E7F0D0A6CE119A872ABAD5 pASWeeks;
$7D6ED94B512169AF3FF6F2EA932D25FF pASYear;
$FF20F5A5458E17FC07E98E38B8F0DE0E pATMachine;
$FF20F5A5458E17FC07E98E38B8F0DE0E pATType;
$FF20F5A5458E17FC07E98E38B8F0DE0E pATZone;
$33435161B3FD09CFD0CE9FE8EDBDC65C pAboutMacintosh;
$D36424323E0EE10C44D6E80F29AE1D9E pAppPartition;
$33435161B3FD09CFD0CE9FE8EDBDC65C pAppleMenuItemsFolder;
$01A1E5D009AEC88F1CC26DDD0B50A346 pApplicationFile;
$F6BE9BA8B4A094D27F2B42C8A78441FB pArcAngle;
$2877E13E31F106A97C9B5B2CF1A9AC10 pArePrivilegesInherited;
$F6BE9BA8B4A094D27F2B42C8A78441FB pBackgroundColor;
$F6BE9BA8B4A094D27F2B42C8A78441FB pBackgroundPattern;
$F6BE9BA8B4A094D27F2B42C8A78441FB pBestType;
$F6BE9BA8B4A094D27F2B42C8A78441FB pBounds;
$43E2ECE001525094C7FF9FBF76AA9EF7 pButtonViewArrangement;
$E36B7564378AD8F94B15FFFEF716BFD6 pByCreationDateArrangement;
$E36B7564378AD8F94B15FFFEF716BFD6 pByKindArrangement;
$E36B7564378AD8F94B15FFFEF716BFD6 pByLabelArrangement;
$E36B7564378AD8F94B15FFFEF716BFD6 pByModificationDateArrangement;
$E36B7564378AD8F94B15FFFEF716BFD6 pByNameArrangement;
$E36B7564378AD8F94B15FFFEF716BFD6 pBySizeArrangement;
$032F0AE77CBBDD3683862C18808C2DD6 pCallBackNumber;
$032F0AE77CBBDD3683862C18808C2DD6 pCanChangePassword;
$032F0AE77CBBDD3683862C18808C2DD6 pCanConnect;
$032F0AE77CBBDD3683862C18808C2DD6 pCanDoProgramLinking;
$A281AF7B99A35340345E04E35C70D610 pCapacity;
$F6BE9BA8B4A094D27F2B42C8A78441FB pClass;
$F6BE9BA8B4A094D27F2B42C8A78441FB pClipboard;
$F6BE9BA8B4A094D27F2B42C8A78441FB pColor;
$F6BE9BA8B4A094D27F2B42C8A78441FB pColorTable;
$832B785CBB4345B41C4A2D03633C199E pComment;
$71C215B36FB45AD5F6C62241B86D72B3 pCompletelyExpanded;
$FF20F5A5458E17FC07E98E38B8F0DE0E pConduit;
$832B785CBB4345B41C4A2D03633C199E pContainer;
$71C215B36FB45AD5F6C62241B86D72B3 pContainerWindow;
$832B785CBB4345B41C4A2D03633C199E pContentSpace;
$F6BE9BA8B4A094D27F2B42C8A78441FB pContents;
$33435161B3FD09CFD0CE9FE8EDBDC65C pControlPanelsFolder;
$F6BE9BA8B4A094D27F2B42C8A78441FB pCornerCurveHeight;
$F6BE9BA8B4A094D27F2B42C8A78441FB pCornerCurveWidth;
$832B785CBB4345B41C4A2D03633C199E pCreationDate;
$832B785CBB4345B41C4A2D03633C199E pCreationDateOld;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMAccessMethod;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMClass;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMCopyright;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMListing;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMLocale;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMMaintenance;
$E9E4D46C9D2C485D3028DE157585C4EF pDCMPermission;
$FF20F5A5458E17FC07E98E38B8F0DE0E pDNS;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pDNSForm;
$F6BE9BA8B4A094D27F2B42C8A78441FB pDashStyle;
$43E2ECE001525094C7FF9FBF76AA9EF7 pDefaultButtonViewIconSize;
$43E2ECE001525094C7FF9FBF76AA9EF7 pDefaultIconViewIconSize;
$43E2ECE001525094C7FF9FBF76AA9EF7 pDefaultListViewIconSize;
$F6BE9BA8B4A094D27F2B42C8A78441FB pDefaultType;
$F6BE9BA8B4A094D27F2B42C8A78441FB pDefinitionRect;
$43E2ECE001525094C7FF9FBF76AA9EF7 pDelayBeforeSpringing;
$832B785CBB4345B41C4A2D03633C199E pDescription;
$F4BE813C40F118B9AD1F6B3875493D34 pDeskAccessoryFile;
$33435161B3FD09CFD0CE9FE8EDBDC65C pDesktop;
$FF20F5A5458E17FC07E98E38B8F0DE0E pDeviceAddress;
$FF20F5A5458E17FC07E98E38B8F0DE0E pDeviceType;
$832B785CBB4345B41C4A2D03633C199E pDisk;
$FF20F5A5458E17FC07E98E38B8F0DE0E pDottedDecimal;
$A281AF7B99A35340345E04E35C70D610 pEjectable;
$F6BE9BA8B4A094D27F2B42C8A78441FB pEnabled;
$F6BE9BA8B4A094D27F2B42C8A78441FB pEndPoint;
$71C215B36FB45AD5F6C62241B86D72B3 pEntireContents;
$71C215B36FB45AD5F6C62241B86D72B3 pExpandable;
$71C215B36FB45AD5F6C62241B86D72B3 pExpanded;
$2877E13E31F106A97C9B5B2CF1A9AC10 pExported;
$33435161B3FD09CFD0CE9FE8EDBDC65C pExtensionsFolder;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pFTPKind;
$4F92175F36F5649FD79B54B82AEEA8C8 pFile;
$30710C4805EC8A4225361DA131BA6704 pFileCreator;
$7F277889E2E7A30ED643C27E2A5A6A4D pFileShareOn;
$7F277889E2E7A30ED643C27E2A5A6A4D pFileShareStartingUp;
$30710C4805EC8A4225361DA131BA6704 pFileType;
$30710C4805EC8A4225361DA131BA6704 pFileTypeOld;
$F6BE9BA8B4A094D27F2B42C8A78441FB pFillColor;
$F6BE9BA8B4A094D27F2B42C8A78441FB pFillPattern;
$33435161B3FD09CFD0CE9FE8EDBDC65C pFinderPreferences;
$832B785CBB4345B41C4A2D03633C199E pFolder;
$832B785CBB4345B41C4A2D03633C199E pFolderOld;
$F6BE9BA8B4A094D27F2B42C8A78441FB pFont;
$33435161B3FD09CFD0CE9FE8EDBDC65C pFontsFolder;
$33435161B3FD09CFD0CE9FE8EDBDC65C pFontsFolderPreAllegro;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pFormula;
$A281AF7B99A35340345E04E35C70D610 pFreeSpace;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pGraphicObjects;
$9E2E66BD4B48EEC37129CFB2F830BF39 pGrid;
$990406032484E996FEA6A6EAC9D23588 pGridIcons;
$2877E13E31F106A97C9B5B2CF1A9AC10 pGroup;
$2877E13E31F106A97C9B5B2CF1A9AC10 pGroupPrivileges;
$2877E13E31F106A97C9B5B2CF1A9AC10 pGuestPrivileges;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pHasCloseBox;
$4F92175F36F5649FD79B54B82AEEA8C8 pHasScriptingTerminology;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pHasTitleBar;
$008155B23C6C847D4FC048674B3D561B pHiliteBit;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pHost;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pID;
$832B785CBB4345B41C4A2D03633C199E pIconBitmap;
$71C215B36FB45AD5F6C62241B86D72B3 pIconSize;
$43E2ECE001525094C7FF9FBF76AA9EF7 pIconViewArrangement;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIndex;
$099753CE47ABF8F80701B03891665A44 pInfoPanel;
$832B785CBB4345B41C4A2D03633C199E pInfoWindow;
$42A44C027C51BF81ADE897BA007A09A5 pInherits;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pInsertionLoc;
$4799877BDC226816D8F821BEBF9C9D4B pInternetLocation;
$1B10CBCE7686D62D2835035F832AC309 pIsCollapsed;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsFloating;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsFrontProcess;
$30710C4805EC8A4225361DA131BA6704 pIsLocked;
$30710C4805EC8A4225361DA131BA6704 pIsLockedOld;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsModal;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsModified;
$032F0AE77CBBDD3683862C18808C2DD6 pIsOwner;
$1B10CBCE7686D62D2835035F832AC309 pIsPopup;
$1B10CBCE7686D62D2835035F832AC309 pIsPulledOpen;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsResizable;
$D36424323E0EE10C44D6E80F29AE1D9E pIsScriptable;
$832B785CBB4345B41C4A2D03633C199E pIsSelected;
$A281AF7B99A35340345E04E35C70D610 pIsStartup;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsStationeryPad;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsZoomable;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pIsZoomed;
$1B10CBCE7686D62D2835035F832AC309 pIsZoomedFull;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pItemNumber;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pJustification;
$71C215B36FB45AD5F6C62241B86D72B3 pKeepArranged;
$71C215B36FB45AD5F6C62241B86D72B3 pKeepArrangedBy;
$0050975A0ADB8A5406CEF98DE6B1DFA8 pKeyKind;
$0050975A0ADB8A5406CEF98DE6B1DFA8 pKeystrokeKey;
$832B785CBB4345B41C4A2D03633C199E pKind;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel1;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel2;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel3;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel4;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel5;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel6;
$43E2ECE001525094C7FF9FBF76AA9EF7 pLabel7;
$832B785CBB4345B41C4A2D03633C199E pLabelIndex;
$5E879841A9E7F0D0A6CE119A872ABAD5 pLangCode;
$9E2E66BD4B48EEC37129CFB2F830BF39 pLargeButton;
$33435161B3FD09CFD0CE9FE8EDBDC65C pLargestFreeBlock;
$42A44C027C51BF81ADE897BA007A09A5 pLength;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pLineArrow;
$990406032484E996FEA6A6EAC9D23588 pListViewIconSize;
$A281AF7B99A35340345E04E35C70D610 pLocal;
$4F92175F36F5649FD79B54B82AEEA8C8 pLocalAndRemoteEvents;
$014BC53C145D472D41826F61624728DA pMakeChanges;
$803E1314D48F0C9DF1694F5B75DC685E pMapSIG;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pMenuID;
$D36424323E0EE10C44D6E80F29AE1D9E pMinAppPartition;
$832B785CBB4345B41C4A2D03633C199E pModificationDate;
$832B785CBB4345B41C4A2D03633C199E pModificationDateOld;
$0050975A0ADB8A5406CEF98DE6B1DFA8 pModifiers;
$2877E13E31F106A97C9B5B2CF1A9AC10 pMounted;
$DFC8A0DF71728E1962CA9A861D3CDFE7 pName;
$FF20F5A5458E17FC07E98E38B8F0DE0E pNetwork;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pNewElementLoc;
$E36B7564378AD8F94B15FFFEF716BFD6 pNoArrangement;
$FF20F5A5458E17FC07E98E38B8F0DE0E pNode;
$5686FBFFDCE4CE500E91018F9CEEB527 pObject;
$586A953CF3A83CBE50582D7005B902F5 pOriginalItem;
$2877E13E31F106A97C9B5B2CF1A9AC10 pOwner;
$2877E13E31F106A97C9B5B2CF1A9AC10 pOwnerPrivileges;
$4F92175F36F5649FD79B54B82AEEA8C8 pPartitionSpaceUsed;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pPath;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pPenColor;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pPenPattern;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pPenWidth;
$832B785CBB4345B41C4A2D03633C199E pPhysicalSize;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pPixelDepth;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pPointList;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pPointSize;
$FF20F5A5458E17FC07E98E38B8F0DE0E pPort;
$832B785CBB4345B41C4A2D03633C199E pPosition;
$33435161B3FD09CFD0CE9FE8EDBDC65C pPreferencesFolder;
$832B785CBB4345B41C4A2D03633C199E pPreferencesWindow;
$71C215B36FB45AD5F6C62241B86D72B3 pPreviousView;
$30710C4805EC8A4225361DA131BA6704 pProductVersion;
$7F277889E2E7A30ED643C27E2A5A6A4D pProgramLinkingOn;
$42A44C027C51BF81ADE897BA007A09A5 pProperties;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pProtection;
$FF20F5A5458E17FC07E98E38B8F0DE0E pProtocol;
$42A44C027C51BF81ADE897BA007A09A5 pRest;
$42A44C027C51BF81ADE897BA007A09A5 pReverse;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pRotation;
$FF20F5A5458E17FC07E98E38B8F0DE0E pSCSIBus;
$FF20F5A5458E17FC07E98E38B8F0DE0E pSCSILUN;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pScale;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pScheme;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pScript;
$5E879841A9E7F0D0A6CE119A872ABAD5 pScriptCode;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pScriptTag;
$014BC53C145D472D41826F61624728DA pSeeFiles;
$014BC53C145D472D41826F61624728DA pSeeFolders;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pSelected;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pSelection;
$0331AD19FD18A06439DAE02095370802 pSharableContainer;
$2877E13E31F106A97C9B5B2CF1A9AC10 pSharing;
$2877E13E31F106A97C9B5B2CF1A9AC10 pSharingProtection;
$2877E13E31F106A97C9B5B2CF1A9AC10 pSharingWindow;
$33435161B3FD09CFD0CE9FE8EDBDC65C pShortCuts;
$032F0AE77CBBDD3683862C18808C2DD6 pShouldCallBack;
$990406032484E996FEA6A6EAC9D23588 pShowComment;
$990406032484E996FEA6A6EAC9D23588 pShowCreationDate;
$990406032484E996FEA6A6EAC9D23588 pShowDate;
$990406032484E996FEA6A6EAC9D23588 pShowDiskInfo;
$990406032484E996FEA6A6EAC9D23588 pShowFolderSize;
$990406032484E996FEA6A6EAC9D23588 pShowKind;
$990406032484E996FEA6A6EAC9D23588 pShowLabel;
$43E2ECE001525094C7FF9FBF76AA9EF7 pShowModificationDate;
$990406032484E996FEA6A6EAC9D23588 pShowSize;
$990406032484E996FEA6A6EAC9D23588 pShowVersion;
$33435161B3FD09CFD0CE9FE8EDBDC65C pShutdownFolder;
$832B785CBB4345B41C4A2D03633C199E pSize;
$9E2E66BD4B48EEC37129CFB2F830BF39 pSmallButton;
$9E2E66BD4B48EEC37129CFB2F830BF39 pSmallIcon;
$E36B7564378AD8F94B15FFFEF716BFD6 pSnapToGridArrangement;
$FF20F5A5458E17FC07E98E38B8F0DE0E pSocket;
$990406032484E996FEA6A6EAC9D23588 pSortDirection;
$2EFEFBD1ED1EA7D6693939AAE8617090 pSound;
$43E2ECE001525094C7FF9FBF76AA9EF7 pSpringOpenFolders;
$990406032484E996FEA6A6EAC9D23588 pStaggerIcons;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pStartAngle;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pStartPoint;
$33435161B3FD09CFD0CE9FE8EDBDC65C pStartingUp;
$87034888FEEBFA11E40ECBA8F657CCD4 pStartupDisk;
$33435161B3FD09CFD0CE9FE8EDBDC65C pStartupItemsFolder;
$D36424323E0EE10C44D6E80F29AE1D9E pSuggestedAppPartition;
$33435161B3FD09CFD0CE9FE8EDBDC65C pSystemFolder;
$33435161B3FD09CFD0CE9FE8EDBDC65C pTemporaryFolder;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pTextColor;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pTextEncoding;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pTextFont;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pTextItemDelimiters;
$8FF8A5014CABE0447E8D5FBC40A2CF05 pTextPointSize;
$35BCCCDE2A8528438318EFAE5BA8E17C pTextStyles;
$35BCCCDE2A8528438318EFAE5BA8E17C pTransferMode;
$35BCCCDE2A8528438318EFAE5BA8E17C pTranslation;
$87034888FEEBFA11E40ECBA8F657CCD4 pTrash;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pURL;
$35BCCCDE2A8528438318EFAE5BA8E17C pUniformStyles;
$35BCCCDE2A8528438318EFAE5BA8E17C pUpdateOn;
$43E2ECE001525094C7FF9FBF76AA9EF7 pUseRelativeDate;
$43E2ECE001525094C7FF9FBF76AA9EF7 pUseShortMenus;
$43E2ECE001525094C7FF9FBF76AA9EF7 pUseWideGrid;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pUserName;
$9549DFB4F05D4F3CB5D742B4DAC80D5D pUserPassword;
$35BCCCDE2A8528438318EFAE5BA8E17C pUserSelection;
$35BCCCDE2A8528438318EFAE5BA8E17C pVersion;
$71C215B36FB45AD5F6C62241B86D72B3 pView;
$990406032484E996FEA6A6EAC9D23588 pViewFont;
$990406032484E996FEA6A6EAC9D23588 pViewFontSize;
$33435161B3FD09CFD0CE9FE8EDBDC65C pViewPreferences;
$35BCCCDE2A8528438318EFAE5BA8E17C pVisible;
$E1BB3F565B6E4423B7C30573E8BF11F8 pWarnOnEmpty;
$832B785CBB4345B41C4A2D03633C199E pWindow;
$621775189DBE97248B7FB782F8F10678 paramErr;
$D129F4DFEBA165F72EA98C618C3DD9EB pasteDev;
$CBAF5646069367B3450D2EB7E8DB23F4 patBic;
$CBAF5646069367B3450D2EB7E8DB23F4 patCopy;
$CBAF5646069367B3450D2EB7E8DB23F4 patOr;
$CBAF5646069367B3450D2EB7E8DB23F4 patXor;
$D497865AB20A3AD87EEE5277CBD67E69 pathNotVerifiedErr;
$D497865AB20A3AD87EEE5277CBD67E69 pathTooLongErr;
$0A460A6E82C5C9197C39E6203E2D9451 pauseCmd;
$803E1314D48F0C9DF1694F5B75DC685E pdSigWord;
$1B23EBE69E7C72E0D4B27DFF733651FE perThousand;
$39BB08BE97442728A4F53B80076F6C3F permErr;
$8E378796D9B27A0F0F3B65CDE1C24332 picItem;
$15316E1F4A06DF5737D2E4A1C671F46F picLParen;
$15316E1F4A06DF5737D2E4A1C671F46F picRParen;
$5299BEEE17FE295435C76CB19C21F235 pickerCantLive;
$5299BEEE17FE295435C76CB19C21F235 pickerResourceError;
$AAB5F496A0B5E152CB221717E36939D8 pictInfoIDErr;
$AAB5F496A0B5E152CB221717E36939D8 pictInfoVerbErr;
$AAB5F496A0B5E152CB221717E36939D8 pictInfoVersionErr;
$AAB5F496A0B5E152CB221717E36939D8 pictureDataErr;
$44F391F6F759E67D2435F1C3F9758D28 pixMapTooDeepErr;
$F3876F991244DA6C9E2D6E25C6A258B7 pixPurge;
$CD245178CB213C313AFEA4423394C154 pixPurgeBit;
$F3876F991244DA6C9E2D6E25C6A258B7 pixelsLocked;
$CD245178CB213C313AFEA4423394C154 pixelsLockedBit;
$F3876F991244DA6C9E2D6E25C6A258B7 pixelsPurgeable;
$CD245178CB213C313AFEA4423394C154 pixelsPurgeableBit;
$54D8896E57898845ADF65F1EA92174A9 plainDBox;
$DFDE7CB8727F27365C7BEDFDD0D6492F planar;
$F0D01DFEE15F67F9D6A643D3766A4EE0 platform68k;
$38F42C5B37EE73E0BF51034C716FB1A4 platformAIXppc;
$38F42C5B37EE73E0BF51034C716FB1A4 platformIRIXmips;
$F0D01DFEE15F67F9D6A643D3766A4EE0 platformInterpreted;
$38F42C5B37EE73E0BF51034C716FB1A4 platformLinuxintel;
$38F42C5B37EE73E0BF51034C716FB1A4 platformLinuxppc;
$38F42C5B37EE73E0BF51034C716FB1A4 platformMacOSx86;
$38F42C5B37EE73E0BF51034C716FB1A4 platformNeXT68k;
$38F42C5B37EE73E0BF51034C716FB1A4 platformNeXTIntel;
$38F42C5B37EE73E0BF51034C716FB1A4 platformNeXTppc;
$38F42C5B37EE73E0BF51034C716FB1A4 platformNeXTsparc;
$F0D01DFEE15F67F9D6A643D3766A4EE0 platformPowerPC;
$F0D01DFEE15F67F9D6A643D3766A4EE0 platformPowerPCNativeEntryPoint;
$38F42C5B37EE73E0BF51034C716FB1A4 platformSunOSintel;
$38F42C5B37EE73E0BF51034C716FB1A4 platformSunOSsparc;
$F0D01DFEE15F67F9D6A643D3766A4EE0 platformWin32;
$7ABC2998878633516ADEFA55C21F1171 pleaseCacheBit;
$7ABC2998878633516ADEFA55C21F1171 pleaseCacheMask;
$E47A24D70C087CD7CD8B3D81D230CB29 plusCursor;
$0344920DE12625A3741310F375392A96 pmAllUpdates;
$0344920DE12625A3741310F375392A96 pmAnimated;
$0344920DE12625A3741310F375392A96 pmBkUpdates;
$0344920DE12625A3741310F375392A96 pmBlack;
$0D374811243B97B39193E78F7E2BA8D4 pmBusyErr;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmChargeStatusChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmChargeStatusChangedMask;
$0344920DE12625A3741310F375392A96 pmCourteous;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmDimmingEnableChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmDimmingEnableChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmDimmingTimeoutChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmDimmingTimeoutChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmDiskModeAddressChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmDiskModeAddressChangedMask;
$0344920DE12625A3741310F375392A96 pmDithered;
$0344920DE12625A3741310F375392A96 pmExplicit;
$0344920DE12625A3741310F375392A96 pmFgUpdates;
$AC49BCB98774BA196F1D518C13C65C80 pmField;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmHardDiskPowerRemovedbyUser;
$00EFCE7AABA1D73C5909A728385783D8 pmHardDiskPowerRemovedbyUserMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmHardDiskSpindownChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmHardDiskSpindownChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmHardDiskTimeoutChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmHardDiskTimeoutChangedMask;
$0344920DE12625A3741310F375392A96 pmInhibitC2;
$0344920DE12625A3741310F375392A96 pmInhibitC4;
$0344920DE12625A3741310F375392A96 pmInhibitC8;
$0344920DE12625A3741310F375392A96 pmInhibitG2;
$0344920DE12625A3741310F375392A96 pmInhibitG4;
$0344920DE12625A3741310F375392A96 pmInhibitG8;
$69A3BF2E803A4172C51973E11B183607 pmMask;
$0344920DE12625A3741310F375392A96 pmNoUpdates;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmPowerLevelChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmPowerLevelChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmProcessorCyclingChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmProcessorCyclingChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmProcessorSpeedChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmProcessorSpeedChangedMask;
$0D374811243B97B39193E78F7E2BA8D4 pmRecvEndErr;
$0D374811243B97B39193E78F7E2BA8D4 pmRecvStartErr;
$0D374811243B97B39193E78F7E2BA8D4 pmReplyTOErr;
$0D374811243B97B39193E78F7E2BA8D4 pmSendEndErr;
$0D374811243B97B39193E78F7E2BA8D4 pmSendStartErr;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmSleepEnableChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmSleepEnableChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmSleepTimeoutChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmSleepTimeoutChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmStartupTimerChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmStartupTimerChangedMask;
$0344920DE12625A3741310F375392A96 pmTolerant;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmWakeOnNetActivityChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmWakeOnNetActivityChangedMask;
$12CF47F04AB5F306DFB24CFF4C04BCCC pmWakeupTimerChanged;
$00EFCE7AABA1D73C5909A728385783D8 pmWakeupTimerChangedMask;
$0344920DE12625A3741310F375392A96 pmWhite;
$480234505259C80FE1B6085A2FAC9295 popularMethod;
$B38DAA97AB3DC4F221BEA87526E0576C popupFixedWidth;
$A6732141157575407A100CC495517723 popupMenuProc;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleBold;
$F31469633DCF18EFDB6083178FEF4998 popupTitleCenterJust;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleCondense;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleExtend;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleItalic;
$F31469633DCF18EFDB6083178FEF4998 popupTitleLeftJust;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleNoStyle;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleOutline;
$F31469633DCF18EFDB6083178FEF4998 popupTitleRightJust;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleShadow;
$89DE2EC7A1992B75EC4246BBCA95852F popupTitleUnderline;
$B38DAA97AB3DC4F221BEA87526E0576C popupUseAddResMenu;
$B38DAA97AB3DC4F221BEA87526E0576C popupUseWFont;
$B38DAA97AB3DC4F221BEA87526E0576C popupVariableWidth;
$A5BD715C8EAA008A7A3794353BC5F23C portClosedErr;
$6AFAE475820C24F181AED14A4625BE64 portInUse;
$A5BD715C8EAA008A7A3794353BC5F23C portNameExistsErr;
$6AFAE475820C24F181AED14A4625BE64 portNotCf;
$6AFAE475820C24F181AED14A4625BE64 portNotPwr;
$DDA3263AAAFDC2735294AAEF0985DAE8 portableStreamType;
$3396F92FAC0BE03A6A5A931576A5D5DF portugueseHighWord;
$4D21454FAD90E25BD2497F2FB4C4BB43 posCntl;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 posErr;
MACRO_positiveInfinity positiveInfinity;
$F5733A20729282EBCF3804504A9796F3 prInitErr;
$F5733A20729282EBCF3804504A9796F3 prWrErr;
$3B240B4C9ACC633426814EA91DA89F65 preferencesFolderIconResource;
$DCAFB040F37F6DF2023604683B010173 prerequisiteItemStreamAction;
$DCAFB040F37F6DF2023604683B010173 prerequisiteQueryStreamAction;
$3B240B4C9ACC633426814EA91DA89F65 printMonitorFolderIconResource;
$4309713E7CE17E60053DEAC970626C85 printerStatusOpCodeNotSupportedErr;
$02BA74D5F373AE3510806004249404D3 privateFolderIconResource;
$A9758B604953F44B643EE3821B96EE8F procNotFound;
$2140534AFEBF1A2FEC4DC9038366C647 processStateIncorrectErr;
$2AFA9741D4492F551C527940D8BE691A progressProcAborted;
$9468C09887B86EF1296548923B986A5A propFont;
$2E21CDC9416351B60D3647421538B7E9 propertyNotSupportedByNodeErr;
$A9758B604953F44B643EE3821B96EE8F protocolErr;
$9468C09887B86EF1296548923B986A5A prpFntH;
$9468C09887B86EF1296548923B986A5A prpFntHW;
$9468C09887B86EF1296548923B986A5A prpFntW;
$A6732141157575407A100CC495517723 pushButProc;
$621775189DBE97248B7FB782F8F10678 qErr;
$D497865AB20A3AD87EEE5277CBD67E69 qfcbNotCreatedErr;
$D497865AB20A3AD87EEE5277CBD67E69 qfcbNotFoundErr;
$D497865AB20A3AD87EEE5277CBD67E69 qtActionNotHandledErr;
$D497865AB20A3AD87EEE5277CBD67E69 qtNetworkAlreadyAllocatedErr;
$BA4AF89C300243A236DEAC5502E7295F qtParamErr;
$D497865AB20A3AD87EEE5277CBD67E69 qtXMLApplicationErr;
$D497865AB20A3AD87EEE5277CBD67E69 qtXMLParseErr;
$A7A218FD448AC71BBFC70788B7B8D695 qtmlDllEntryNotFoundErr;
$A7A218FD448AC71BBFC70788B7B8D695 qtmlDllLoadErr;
$A7A218FD448AC71BBFC70788B7B8D695 qtmlUninitialized;
$23FBD639A3946358B7E73F79FCB6920D qtsAddressBusyErr;
$23FBD639A3946358B7E73F79FCB6920D qtsBadDataErr;
$23FBD639A3946358B7E73F79FCB6920D qtsBadSelectorErr;
$23FBD639A3946358B7E73F79FCB6920D qtsBadStateErr;
$23FBD639A3946358B7E73F79FCB6920D qtsConnectionFailedErr;
$23FBD639A3946358B7E73F79FCB6920D qtsTimeoutErr;
$23FBD639A3946358B7E73F79FCB6920D qtsTooMuchDataErr;
$23FBD639A3946358B7E73F79FCB6920D qtsUnknownValueErr;
$23FBD639A3946358B7E73F79FCB6920D qtsUnsupportedDataTypeErr;
$23FBD639A3946358B7E73F79FCB6920D qtsUnsupportedFeatureErr;
$23FBD639A3946358B7E73F79FCB6920D qtsUnsupportedRateErr;
$2E21CDC9416351B60D3647421538B7E9 qtvrLibraryLoadErr;
$2E21CDC9416351B60D3647421538B7E9 qtvrUninitialized;
$B1318AEC6DDB22F080A547A9A181D628 queueFull;
$0A460A6E82C5C9197C39E6203E2D9451 quietCmd;
$CBE82BCFE2BC4E22E2710BE97242EA86 rAliasType;
$8E378796D9B27A0F0F3B65CDE1C24332 radCtrl;
$A6732141157575407A100CC495517723 radioButProc;
$008155B23C6C847D4FC048674B3D561B ramInit;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate11025hz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate11khz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate16khz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate22050hz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate22khz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate32khz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate44khz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate48khz;
$5CF8B23CE37CFEEDD0C9461CA916F0CA rate8khz;
$0A460A6E82C5C9197C39E6203E2D9451 rateMultiplierCmd;
$9FBD3328C59425DFD910233A462ED743 rcDBAsyncNotSupp;
$9FBD3328C59425DFD910233A462ED743 rcDBBadAsyncPB;
$9FBD3328C59425DFD910233A462ED743 rcDBBadDDEV;
$9FBD3328C59425DFD910233A462ED743 rcDBBadSessID;
$9FBD3328C59425DFD910233A462ED743 rcDBBadSessNum;
$9FBD3328C59425DFD910233A462ED743 rcDBBadType;
$9FBD3328C59425DFD910233A462ED743 rcDBBreak;
$9FBD3328C59425DFD910233A462ED743 rcDBError;
$9FBD3328C59425DFD910233A462ED743 rcDBExec;
$9FBD3328C59425DFD910233A462ED743 rcDBNoHandler;
$9FBD3328C59425DFD910233A462ED743 rcDBNull;
$9FBD3328C59425DFD910233A462ED743 rcDBPackNotInited;
$9FBD3328C59425DFD910233A462ED743 rcDBValue;
$9FBD3328C59425DFD910233A462ED743 rcDBWrongVersion;
$F5733A20729282EBCF3804504A9796F3 rcvrErr;
$7ABC2998878633516ADEFA55C21F1171 rdVerify;
$7ABC2998878633516ADEFA55C21F1171 rdVerifyBit;
$7ABC2998878633516ADEFA55C21F1171 rdVerifyMask;
$0A460A6E82C5C9197C39E6203E2D9451 reInitCmd;
$621775189DBE97248B7FB782F8F10678 readErr;
$E4D926CFAC96D1A9C67CAB14770D8CA3 readQErr;
$1AFD37A731F3A62F7A5D2B51D317DBED readReference;
$F3876F991244DA6C9E2D6E25C6A258B7 reallocPix;
$CD245178CB213C313AFEA4423394C154 reallocPixBit;
$E4D926CFAC96D1A9C67CAB14770D8CA3 recNotFnd;
$ED986353A623588C3ED06F42FF2FFD9B recordComments;
$14338A5B3D28FC26400B4BB31F21F442 recordDataTooBigErr;
$ED986353A623588C3ED06F42FF2FFD9B recordFontInfo;
$229E80E760A3609929A8A4D193AE679E redBit;
$2EE6D656A6356132BC5631EBF7AA5929 redColor;
$209CC08F3C2FAA9E2F04173AF40A8D5B registerComponentAfterExisting;
$209CC08F3C2FAA9E2F04173AF40A8D5B registerComponentAliasesOnly;
$209CC08F3C2FAA9E2F04173AF40A8D5B registerComponentGlobal;
$209CC08F3C2FAA9E2F04173AF40A8D5B registerComponentNoDuplicates;
$F77E3C3D1101CCCA05824B85966C0086 reqAborted;
$F77E3C3D1101CCCA05824B85966C0086 reqFailed;
$5299BEEE17FE295435C76CB19C21F235 requiredFlagsDontMatch;
$AC49BCB98774BA196F1D518C13C65C80 res1Field;
$AC49BCB98774BA196F1D518C13C65C80 res2Field;
$AC49BCB98774BA196F1D518C13C65C80 res3Field;
$44F391F6F759E67D2435F1C3F9758D28 resAttrErr;
$32C727D68F64E81892FE811EECA6C0F9 resChanged;
$69B72E9C37C0D09B287064DE0C3BE45E resChangedBit;
$8E378796D9B27A0F0F3B65CDE1C24332 resCtrl;
$44F391F6F759E67D2435F1C3F9758D28 resFNotFound;
$32C727D68F64E81892FE811EECA6C0F9 resLocked;
$69B72E9C37C0D09B287064DE0C3BE45E resLockedBit;
$44F391F6F759E67D2435F1C3F9758D28 resNotFound;
$32C727D68F64E81892FE811EECA6C0F9 resPreload;
$69B72E9C37C0D09B287064DE0C3BE45E resPreloadBit;
$B1318AEC6DDB22F080A547A9A181D628 resProblem;
$32C727D68F64E81892FE811EECA6C0F9 resProtected;
$69B72E9C37C0D09B287064DE0C3BE45E resProtectedBit;
$32C727D68F64E81892FE811EECA6C0F9 resPurgeable;
$69B72E9C37C0D09B287064DE0C3BE45E resPurgeableBit;
$32C727D68F64E81892FE811EECA6C0F9 resSysHeap;
$69B72E9C37C0D09B287064DE0C3BE45E resSysHeapBit;
$69B72E9C37C0D09B287064DE0C3BE45E resSysRefBit;
$44F391F6F759E67D2435F1C3F9758D28 resourceInMemory;
$0A460A6E82C5C9197C39E6203E2D9451 resumeCmd;
$6D324C7D7A753D0D7A641D9C82F47D41 resumeFlag;
$F41C837101AFC9B0316B257F2D9D4B05 retryComponentRegistrationErr;
$ED986353A623588C3ED06F42FF2FFD9B returnColorTable;
$ED986353A623588C3ED06F42FF2FFD9B returnPalette;
$39BB08BE97442728A4F53B80076F6C3F rfNumErr;
$44F391F6F759E67D2435F1C3F9758D28 rgnOverflowErr;
$AAB5F496A0B5E152CB221717E36939D8 rgnTooBigErr;
$44F391F6F759E67D2435F1C3F9758D28 rgnTooBigError;
$F842FD2D88627E8C9CB75D292100935D rightCaret;
$336CC6651FCB0DCB616C524240E3BE5F rightControlKey;
$A8C358955E8CB025A08708108945A486 rightControlKeyBit;
$336CC6651FCB0DCB616C524240E3BE5F rightOptionKey;
$A8C358955E8CB025A08708108945A486 rightOptionKeyBit;
$336CC6651FCB0DCB616C524240E3BE5F rightShiftKey;
$A8C358955E8CB025A08708108945A486 rightShiftKeyBit;
$1B23EBE69E7C72E0D4B27DFF733651FE rightSingGuillemet;
$00B8682EB436791A52B8F11CCB13C105 rightStyleRun;
$6124E96ADDA1B0421A57CB4AF73D64C1 ringDetectBit;
$20C55E9D9BC8261515838E8F528E25E9 ringDetectMask;
$1B23EBE69E7C72E0D4B27DFF733651FE ringMark;
$6124E96ADDA1B0421A57CB4AF73D64C1 ringWakeUpBit;
$20C55E9D9BC8261515838E8F528E25E9 ringWakeUpMask;
$44F391F6F759E67D2435F1C3F9758D28 rmvRefFailed;
$44F391F6F759E67D2435F1C3F9758D28 rmvResFailed;
$ABC7F536762CD4DBE3717CB53592D8F2 romanAppFond;
$ABC7F536762CD4DBE3717CB53592D8F2 romanFlags;
$3396F92FAC0BE03A6A5A931576A5D5DF romanHighWord;
$ABC7F536762CD4DBE3717CB53592D8F2 romanSysFond;
$3396F92FAC0BE03A6A5A931576A5D5DF romanianHighWord;
$008155B23C6C847D4FC048674B3D561B roundedDevice;
$5D2ED6E9C3B52C2B530C241D43578F10 routingNotFoundErr;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 sIQType;
$4AA72FB96FE40BDE945A00A3EE3D602E sameFileErr;
$0DF702257E408113D2F6E52712EF3648 sampledSynth;
$2AFA9741D4492F551C527940D8BE691A samplesAlreadyInMediaErr;
$16086E8427C45387E1BF220C4C33A4B4 sbMac;
$16086E8427C45387E1BF220C4C33A4B4 sbSIGWord;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scAdd;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scComp;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scInc;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scLoop;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scMove;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scNoInc;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scNop;
$EA3B21ADAEA8C1CC2D7C51CF0956AEAC scStop;
$D1694FAFDED606F5C1530A80708D1A68 scTypeNotFoundErr;
$DDA3263AAAFDC2735294AAEF0985DAE8 scalerSpecifcModifierMask;
$0A460A6E82C5C9197C39E6203E2D9451 scheduledSoundCmd;
$2140534AFEBF1A2FEC4DC9038366C647 scrapFlavorFlagsMismatchErr;
$2140534AFEBF1A2FEC4DC9038366C647 scrapFlavorNotFoundErr;
$2140534AFEBF1A2FEC4DC9038366C647 scrapFlavorSizeMismatchErr;
$2140534AFEBF1A2FEC4DC9038366C647 scrapPromiseNotKeptErr;
$008155B23C6C847D4FC048674B3D561B screenActive;
$008155B23C6C847D4FC048674B3D561B screenDevice;
$256542734A18D99DBB4DE67432107625 scriptCurLang;
$256542734A18D99DBB4DE67432107625 scriptDefLang;
$A6732141157575407A100CC495517723 scrollBarProc;
$5E49B783E0031968F4075D1CAB6B12F4 scsiAbortCmdFixed;
$185FAFEAE0257163586A16EBC57852EC scsiAutosenseFailed;
$75A2EC19CCF65379A647532C2A2FC8D4 scsiAutosenseValid;
$185FAFEAE0257163586A16EBC57852EC scsiBDRsent;
$9BB0101840D62E29588C75D4F7C73CAA scsiBadConnID;
$9BB0101840D62E29588C75D4F7C73CAA scsiBadConnType;
$9BB0101840D62E29588C75D4F7C73CAA scsiBadDataLength;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusCacheCoherentDMA;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusDMAavailable;
$F98E67AC594A7872D28BC2DCD6D85A80 scsiBusDataBuffer;
$F98E67AC594A7872D28BC2DCD6D85A80 scsiBusDataIOTable;
$F98E67AC594A7872D28BC2DCD6D85A80 scsiBusDataReserved;
$F98E67AC594A7872D28BC2DCD6D85A80 scsiBusDataSG;
$F98E67AC594A7872D28BC2DCD6D85A80 scsiBusDataTIB;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusDifferential;
$5E49B783E0031968F4075D1CAB6B12F4 scsiBusErrorsUnsafe;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusExternal;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusFastSCSI;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusInternal;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusInternalExternal;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusInternalExternalMask;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusInternalExternalUnknown;
$185FAFEAE0257163586A16EBC57852EC scsiBusInvalid;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusLVD;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusLinkedCDB;
$063AE8DE6193535A5488E81F06FA586D scsiBusLoadsROMDrivers;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusMDP;
$75A2EC19CCF65379A647532C2A2FC8D4 scsiBusNotFree;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusOldCallCapable;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusSDTR;
$063AE8DE6193535A5488E81F06FA586D scsiBusScansDevices;
$063AE8DE6193535A5488E81F06FA586D scsiBusScansOnInit;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusSoftReset;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusTagQ;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusUltra2SCSI;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusUltra3SCSI;
$99D7C8D383A8DF342C5F6D07F4259C2A scsiBusUltraSCSI;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusWide16;
$4FC27F2E51BC75B25E30CDF10FF835EB scsiBusWide32;
$185FAFEAE0257163586A16EBC57852EC scsiBusy;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiCDBIsPointer;
$185FAFEAE0257163586A16EBC57852EC scsiCDBLengthInvalid;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiCDBLinked;
$185FAFEAE0257163586A16EBC57852EC scsiCDBReceived;
$9BB0101840D62E29588C75D4F7C73CAA scsiCannotLoadPlugin;
$185FAFEAE0257163586A16EBC57852EC scsiCommandTimeout;
$56A94F78B08640B182D772873D098169 scsiDataBuffer;
$56A94F78B08640B182D772873D098169 scsiDataIOTable;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDataPhysical;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDataReadyForDMA;
$185FAFEAE0257163586A16EBC57852EC scsiDataRunError;
$56A94F78B08640B182D772873D098169 scsiDataSG;
$56A94F78B08640B182D772873D098169 scsiDataTIB;
$185FAFEAE0257163586A16EBC57852EC scsiDataTypeInvalid;
$185FAFEAE0257163586A16EBC57852EC scsiDeviceConflict;
$76869AB1A47FEAD4804D17388C0C3570 scsiDeviceNoOldCallAccess;
$185FAFEAE0257163586A16EBC57852EC scsiDeviceNotThere;
$76869AB1A47FEAD4804D17388C0C3570 scsiDeviceSensitive;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDirectionIn;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDirectionMask;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDirectionNone;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDirectionOut;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDirectionReserved;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDisableAutosense;
$AB598488D6FC6BB80324F33420DF9413 scsiDisableDiscipline;
$AB598488D6FC6BB80324F33420DF9413 scsiDisableSelectWAtn;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDisableSyncData;
$AB598488D6FC6BB80324F33420DF9413 scsiDisableWide;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDoDisconnect;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiDontDisconnect;
$C7BB28FA531CF87C02AFBAC85C9F2A23 scsiErrorBase;
$0AACAA3CFC1BB1F6D4A3521FBD9644B0 scsiExecutionErrors;
$436EDE9228D5BFEF31076222B78F56EF scsiFamilyInternalError;
$C37232893D67838E67896D825E32AA97 scsiFireWireBridgeBus;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved0;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved1;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved3;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved5;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved6;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved7;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReserved8;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiFlagReservedA;
$185FAFEAE0257163586A16EBC57852EC scsiFunctionNotAvailable;
$185FAFEAE0257163586A16EBC57852EC scsiIDInvalid;
$AB598488D6FC6BB80324F33420DF9413 scsiIOFlagReserved0080;
$AB598488D6FC6BB80324F33420DF9413 scsiIOFlagReserved8000;
$9BB0101840D62E29588C75D4F7C73CAA scsiIOInProgress;
$185FAFEAE0257163586A16EBC57852EC scsiIdentifyMessageRejected;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiInitiateSyncData;
$AB598488D6FC6BB80324F33420DF9413 scsiInitiateWide;
$9BB0101840D62E29588C75D4F7C73CAA scsiInvalidMsgType;
$185FAFEAE0257163586A16EBC57852EC scsiLUNInvalid;
$5E49B783E0031968F4075D1CAB6B12F4 scsiMeshACKTimingFixed;
$185FAFEAE0257163586A16EBC57852EC scsiMessageRejectReceived;
$C37232893D67838E67896D825E32AA97 scsiMotherboardBus;
$AB598488D6FC6BB80324F33420DF9413 scsiNoBucketIn;
$AB598488D6FC6BB80324F33420DF9413 scsiNoBucketOut;
$185FAFEAE0257163586A16EBC57852EC scsiNoHBA;
$185FAFEAE0257163586A16EBC57852EC scsiNoNexus;
$AB598488D6FC6BB80324F33420DF9413 scsiNoParityCheck;
$185FAFEAE0257163586A16EBC57852EC scsiNoSuchXref;
$185FAFEAE0257163586A16EBC57852EC scsiNonZeroStatus;
$0AACAA3CFC1BB1F6D4A3521FBD9644B0 scsiNotExecutedErrors;
$C37232893D67838E67896D825E32AA97 scsiNuBus;
$5E49B783E0031968F4075D1CAB6B12F4 scsiOddCountForPhysicalUnsafe;
$5E49B783E0031968F4075D1CAB6B12F4 scsiOddDisconnectUnsafeRead1;
$5E49B783E0031968F4075D1CAB6B12F4 scsiOddDisconnectUnsafeWrite1;
$185FAFEAE0257163586A16EBC57852EC scsiPBLengthError;
$C37232893D67838E67896D825E32AA97 scsiPCIBus;
$C37232893D67838E67896D825E32AA97 scsiPCMCIABus;
$C37232893D67838E67896D825E32AA97 scsiPDSBus;
$0AACAA3CFC1BB1F6D4A3521FBD9644B0 scsiParameterErrors;
$185FAFEAE0257163586A16EBC57852EC scsiParityError;
$9BB0101840D62E29588C75D4F7C73CAA scsiPartialPrepared;
$436EDE9228D5BFEF31076222B78F56EF scsiPluginInternalError;
$185FAFEAE0257163586A16EBC57852EC scsiProvideFail;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiQEnable;
$185FAFEAE0257163586A16EBC57852EC scsiQLinkInvalid;
$AB598488D6FC6BB80324F33420DF9413 scsiRenegotiateSense;
$185FAFEAE0257163586A16EBC57852EC scsiRequestAborted;
$185FAFEAE0257163586A16EBC57852EC scsiRequestInProgress;
$185FAFEAE0257163586A16EBC57852EC scsiRequestInvalid;
$5E49B783E0031968F4075D1CAB6B12F4 scsiRequiresHandshake;
$185FAFEAE0257163586A16EBC57852EC scsiSCSIBusReset;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiSIMQFreeze;
$75A2EC19CCF65379A647532C2A2FC8D4 scsiSIMQFrozen;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiSIMQHead;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiSIMQNoFreeze;
$AB598488D6FC6BB80324F33420DF9413 scsiSavePtrOnDisconnect;
$185FAFEAE0257163586A16EBC57852EC scsiSelectTimeout;
$6EC852A2D2600B803C8679AAFCB0BE5B scsiSensePhysical;
$185FAFEAE0257163586A16EBC57852EC scsiSequenceFailed;
$140D223C46AA329EA03F6C982D1A00AD scsiStatBusy;
$140D223C46AA329EA03F6C982D1A00AD scsiStatCheckCondition;
$140D223C46AA329EA03F6C982D1A00AD scsiStatConditionMet;
$140D223C46AA329EA03F6C982D1A00AD scsiStatGood;
$140D223C46AA329EA03F6C982D1A00AD scsiStatIntermedMet;
$140D223C46AA329EA03F6C982D1A00AD scsiStatIntermediate;
$140D223C46AA329EA03F6C982D1A00AD scsiStatQFull;
$140D223C46AA329EA03F6C982D1A00AD scsiStatResvConflict;
$140D223C46AA329EA03F6C982D1A00AD scsiStatTerminated;
$185FAFEAE0257163586A16EBC57852EC scsiTIDInvalid;
$5E49B783E0031968F4075D1CAB6B12F4 scsiTargetDrivenSDTRSafe;
$9BB0101840D62E29588C75D4F7C73CAA scsiTargetReserved;
$185FAFEAE0257163586A16EBC57852EC scsiTerminated;
$185FAFEAE0257163586A16EBC57852EC scsiTooManyBuses;
$9C7BC7FE896463D24B4FEE01A1D4AB7B scsiTransferBlind;
$9C7BC7FE896463D24B4FEE01A1D4AB7B scsiTransferPolled;
$185FAFEAE0257163586A16EBC57852EC scsiTransferTypeInvalid;
$C37232893D67838E67896D825E32AA97 scsiUSBBus;
$185FAFEAE0257163586A16EBC57852EC scsiUnableToAbort;
$185FAFEAE0257163586A16EBC57852EC scsiUnableToTerminate;
$185FAFEAE0257163586A16EBC57852EC scsiUnexpectedBusFree;
$185FAFEAE0257163586A16EBC57852EC scsiUnused05;
$185FAFEAE0257163586A16EBC57852EC scsiUnused06;
$185FAFEAE0257163586A16EBC57852EC scsiUnused07;
$185FAFEAE0257163586A16EBC57852EC scsiUnused08;
$185FAFEAE0257163586A16EBC57852EC scsiUnused11;
$185FAFEAE0257163586A16EBC57852EC scsiUnused16;
$9BB0101840D62E29588C75D4F7C73CAA scsiUnused74;
$9BB0101840D62E29588C75D4F7C73CAA scsiUnused75;
$9BB0101840D62E29588C75D4F7C73CAA scsiUnused79;
$9BB0101840D62E29588C75D4F7C73CAA scsiUnused81;
$9BB0101840D62E29588C75D4F7C73CAA scsiUnused84;
$9BB0101840D62E29588C75D4F7C73CAA scsiUnused85;
$70DA925F97250CF8703EC75C6BB49DAA scsiVERSION;
$436EDE9228D5BFEF31076222B78F56EF scsiVendorSpecificErrorBase;
$436EDE9228D5BFEF31076222B78F56EF scsiVendorSpecificErrorCount;
$185FAFEAE0257163586A16EBC57852EC scsiWrongDirection;
$FA07CA0516860C91041E45E8CAC5DBFF sdmInitErr;
$FA07CA0516860C91041E45E8CAC5DBFF sdmJTInitErr;
$FA07CA0516860C91041E45E8CAC5DBFF sdmPRAMInitErr;
$FA07CA0516860C91041E45E8CAC5DBFF sdmPriInitErr;
$FA07CA0516860C91041E45E8CAC5DBFF sdmSRTInitErr;
$621775189DBE97248B7FB782F8F10678 seNoDB;
$4FBD46A7782F6749F1F35ACCB96A0A2C secLeadingZ;
$AC49BCB98774BA196F1D518C13C65C80 secondField;
$69A3BF2E803A4172C51973E11B183607 secondMask;
$E91449E4D01B0E0713C44C0F19972FE1 secondSoundFormat;
$E0B249A01E8422CE9D0FC370668E05FC secondVidMode;
$F5733A20729282EBCF3804504A9796F3 sectNFErr;
$F5733A20729282EBCF3804504A9796F3 seekErr;
$55EA60C468DD6DD8FB65849ABE31A4F2 selectAllVariations;
$2DA05D06990FCEC1EA5697B9BD8DA598 selectMsg;
$2E21CDC9416351B60D3647421538B7E9 selectorNotSupportedByNodeErr;
$3A0529DF53FD0FCB1009E9B11B87DC72 sepNotConsistent;
$3A0529DF53FD0FCB1009E9B11B87DC72 sepNotIntlSep;
$F5D25084AB3C40D9EEA892B8C65FBDB2 seqGrabInfoNotAvailable;
$A5BD715C8EAA008A7A3794353BC5F23C sessClosedErr;
$A5BD715C8EAA008A7A3794353BC5F23C sessTableErr;
$AB88C37431EB6AD714E363592C093039 setPowerLevel;
$2E21CDC9416351B60D3647421538B7E9 settingNotSupportedByNodeErr;
$CA37B7C591AB80BE0B169161AB784E55 shadow;
$147E82B1B28920CD4B3E15BD59C82A4F shadowBit;
$3B240B4C9ACC633426814EA91DA89F65 sharedFolderIconResource;
$336CC6651FCB0DCB616C524240E3BE5F shiftKey;
$A8C358955E8CB025A08708108945A486 shiftKeyBit;
$7493DC379C4D203E0ABDB52409B2119D shortDate;
$1CFDE9D3C4834CC8EF7EF9ABAE5D7D98 shutDownAlert;
$CE91DBFBD3632086FE7273C2C92668C6 siAGCOnOff;
$CE91DBFBD3632086FE7273C2C92668C6 siAVDisplayBehavior;
$CE91DBFBD3632086FE7273C2C92668C6 siActiveChannels;
$CE91DBFBD3632086FE7273C2C92668C6 siActiveLevels;
$CE91DBFBD3632086FE7273C2C92668C6 siAsync;
$CE91DBFBD3632086FE7273C2C92668C6 siAudioCodecPropertyInfo;
$CE91DBFBD3632086FE7273C2C92668C6 siAudioCodecPropertyValue;
$B1318AEC6DDB22F080A547A9A181D628 siBadDeviceName;
$B1318AEC6DDB22F080A547A9A181D628 siBadRefNum;
$B1318AEC6DDB22F080A547A9A181D628 siBadSoundInDevice;
$41F98988D9812F0839C76BF329F6FD25 siBestQuality;
$41F98988D9812F0839C76BF329F6FD25 siBetterQuality;
$41F98988D9812F0839C76BF329F6FD25 siCDQuality;
$CE91DBFBD3632086FE7273C2C92668C6 siChannelAvailable;
$CE91DBFBD3632086FE7273C2C92668C6 siClientAcceptsVBR;
$57F807D505FD9D00D599ACAA96088B36 siCloseDriver;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionAvailable;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionChannels;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionConfiguration;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionFactor;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionHeader;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionInputRateList;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionMaxPacketSize;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionNames;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionOutputSampleRate;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionParams;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionSampleRate;
$CE91DBFBD3632086FE7273C2C92668C6 siCompressionType;
$CE91DBFBD3632086FE7273C2C92668C6 siContinuous;
$CE91DBFBD3632086FE7273C2C92668C6 siDecompressionConfiguration;
$CE91DBFBD3632086FE7273C2C92668C6 siDecompressionParams;
$CE91DBFBD3632086FE7273C2C92668C6 siDeviceBufferInfo;
$B1318AEC6DDB22F080A547A9A181D628 siDeviceBusyErr;
$CE91DBFBD3632086FE7273C2C92668C6 siDeviceConnected;
$CE91DBFBD3632086FE7273C2C92668C6 siDeviceIcon;
$9CB5D5D27B78DCCB39E5D5F1FB502F32 siDeviceIsConnected;
$CE91DBFBD3632086FE7273C2C92668C6 siDeviceName;
$9CB5D5D27B78DCCB39E5D5F1FB502F32 siDeviceNotConnected;
$9CB5D5D27B78DCCB39E5D5F1FB502F32 siDontKnowIfConnected;
$CE91DBFBD3632086FE7273C2C92668C6 siEQSpectrumBands;
$CE91DBFBD3632086FE7273C2C92668C6 siEQSpectrumLevels;
$CE91DBFBD3632086FE7273C2C92668C6 siEQSpectrumOnOff;
$CE91DBFBD3632086FE7273C2C92668C6 siEQSpectrumResolution;
$CE91DBFBD3632086FE7273C2C92668C6 siEQToneControlGain;
$CE91DBFBD3632086FE7273C2C92668C6 siEQToneControlOnOff;
$41F98988D9812F0839C76BF329F6FD25 siGoodQuality;
$CE91DBFBD3632086FE7273C2C92668C6 siHALAudioDeviceID;
$CE91DBFBD3632086FE7273C2C92668C6 siHALAudioDeviceUniqueID;
$B1318AEC6DDB22F080A547A9A181D628 siHardDriveTooSlow;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareBalance;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareBalanceSteps;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareBass;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareBassSteps;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareBusy;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareFormat;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareMute;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareMuteNoPrefs;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareTreble;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareTrebleSteps;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareVolume;
$CE91DBFBD3632086FE7273C2C92668C6 siHardwareVolumeSteps;
$CE91DBFBD3632086FE7273C2C92668C6 siHeadphoneMute;
$CE91DBFBD3632086FE7273C2C92668C6 siHeadphoneVolume;
$CE91DBFBD3632086FE7273C2C92668C6 siHeadphoneVolumeSteps;
$FA07CA0516860C91041E45E8CAC5DBFF siInitSDTblErr;
$FA07CA0516860C91041E45E8CAC5DBFF siInitSPTblErr;
$FA07CA0516860C91041E45E8CAC5DBFF siInitVBLQsErr;
$57F807D505FD9D00D599ACAA96088B36 siInitializeDriver;
$CE91DBFBD3632086FE7273C2C92668C6 siInputAvailable;
$B1318AEC6DDB22F080A547A9A181D628 siInputDeviceErr;
$CE91DBFBD3632086FE7273C2C92668C6 siInputGain;
$CE91DBFBD3632086FE7273C2C92668C6 siInputSource;
$CE91DBFBD3632086FE7273C2C92668C6 siInputSourceNames;
$B1318AEC6DDB22F080A547A9A181D628 siInvalidCompression;
$B1318AEC6DDB22F080A547A9A181D628 siInvalidSampleRate;
$B1318AEC6DDB22F080A547A9A181D628 siInvalidSampleSize;
$CE91DBFBD3632086FE7273C2C92668C6 siLevelMeterOnOff;
$CE91DBFBD3632086FE7273C2C92668C6 siMediaContextID;
$CE91DBFBD3632086FE7273C2C92668C6 siModemGain;
$CE91DBFBD3632086FE7273C2C92668C6 siMonitorAvailable;
$CE91DBFBD3632086FE7273C2C92668C6 siMonitorSource;
$B1318AEC6DDB22F080A547A9A181D628 siNoBufferSpecified;
$B1318AEC6DDB22F080A547A9A181D628 siNoSoundInHardware;
$41F98988D9812F0839C76BF329F6FD25 siNoneQuality;
$CE91DBFBD3632086FE7273C2C92668C6 siNumberChannels;
$CE91DBFBD3632086FE7273C2C92668C6 siOSTypeInputAvailable;
$CE91DBFBD3632086FE7273C2C92668C6 siOSTypeInputSource;
$CE91DBFBD3632086FE7273C2C92668C6 siOptionsDialog;
$CE91DBFBD3632086FE7273C2C92668C6 siOutputDeviceName;
$CE91DBFBD3632086FE7273C2C92668C6 siOutputLatency;
$57F807D505FD9D00D599ACAA96088B36 siPauseRecording;
$CE91DBFBD3632086FE7273C2C92668C6 siPlayThruOnOff;
$CE91DBFBD3632086FE7273C2C92668C6 siPostMixerSoundComponent;
$CE91DBFBD3632086FE7273C2C92668C6 siPreMixerSoundComponent;
$CE91DBFBD3632086FE7273C2C92668C6 siQuality;
$CE91DBFBD3632086FE7273C2C92668C6 siRateConverterRollOffSlope;
$CE91DBFBD3632086FE7273C2C92668C6 siRateMultiplier;
$9CB5D5D27B78DCCB39E5D5F1FB502F32 siReadPermission;
$CE91DBFBD3632086FE7273C2C92668C6 siRecordingQuality;
$CE91DBFBD3632086FE7273C2C92668C6 siSSpCPULoadLimit;
$CE91DBFBD3632086FE7273C2C92668C6 siSSpLocalization;
$CE91DBFBD3632086FE7273C2C92668C6 siSSpSpeakerSetup;
$CE91DBFBD3632086FE7273C2C92668C6 siSampleRate;
$CE91DBFBD3632086FE7273C2C92668C6 siSampleRateAvailable;
$CE91DBFBD3632086FE7273C2C92668C6 siSampleSize;
$CE91DBFBD3632086FE7273C2C92668C6 siSampleSizeAvailable;
$CE91DBFBD3632086FE7273C2C92668C6 siSetupCDAudio;
$CE91DBFBD3632086FE7273C2C92668C6 siSetupModemAudio;
$CE91DBFBD3632086FE7273C2C92668C6 siSlopeAndIntercept;
$CE91DBFBD3632086FE7273C2C92668C6 siSoundClock;
$CE91DBFBD3632086FE7273C2C92668C6 siSourceIsExhausted;
$CE91DBFBD3632086FE7273C2C92668C6 siSpeakerMute;
$CE91DBFBD3632086FE7273C2C92668C6 siSpeakerVolume;
$CE91DBFBD3632086FE7273C2C92668C6 siStereoInputGain;
$CE91DBFBD3632086FE7273C2C92668C6 siSubwooferMute;
$CE91DBFBD3632086FE7273C2C92668C6 siSupportedExtendedFlags;
$CE91DBFBD3632086FE7273C2C92668C6 siTerminalType;
$CE91DBFBD3632086FE7273C2C92668C6 siTwosComplementOnOff;
$B1318AEC6DDB22F080A547A9A181D628 siUnknownInfoType;
$B1318AEC6DDB22F080A547A9A181D628 siUnknownQuality;
$CE91DBFBD3632086FE7273C2C92668C6 siUseThisSoundClock;
$57F807D505FD9D00D599ACAA96088B36 siUserInterruptProc;
$B1318AEC6DDB22F080A547A9A181D628 siVBRCompressionNotSupported;
$CE91DBFBD3632086FE7273C2C92668C6 siVendorProduct;
$CE91DBFBD3632086FE7273C2C92668C6 siVolume;
$CE91DBFBD3632086FE7273C2C92668C6 siVoxRecordInfo;
$CE91DBFBD3632086FE7273C2C92668C6 siVoxStopInfo;
$CE91DBFBD3632086FE7273C2C92668C6 siWideStereo;
$9CB5D5D27B78DCCB39E5D5F1FB502F32 siWritePermission;
$A698BEB7613B05D556DAD70D18AF6846 singleDevices;
$04308B7CF96C01DC89E23685B761AAE3 singleDevicesBit;
$E430DC1A89068137E931CBD3EE4979FB sixToOne;
$E430DC1A89068137E931CBD3EE4979FB sixToOnePacketSize;
$E0B249A01E8422CE9D0FC370668E05FC sixteenBitMode;
$E0B249A01E8422CE9D0FC370668E05FC sixthVidMode;
$270F00ADEF16EFD1F46CBA2D4CC44548 sizeBit;
$ADB5B3A58E0593C11830CCA26F955931 sizeof_sfntCMapEncoding;
$9030F68C3BF1A67F5647AD6B2AA70878 sizeof_sfntCMapExtendedSubHeader;
$A1E4185638B11D7C5568B95D38AA76FC sizeof_sfntCMapHeader;
$434B0C413E7FD965EFAF48E26EC80844 sizeof_sfntCMapSubHeader;
$2DDB486F41D721344AB6D11534B7313C sizeof_sfntDescriptorHeader;
$68CF2A8B43ADB4A85AC1F1543CFCA05B sizeof_sfntDirectory;
$56007F9F634BAFE38508477F4B032A09 sizeof_sfntInstance;
$9B8CAABD76EE1AB4E880563D1F3B16F3 sizeof_sfntNameHeader;
$5939D4AA02748FEE1C11BE209DA81508 sizeof_sfntNameRecord;
$8E14002F3191C763C5987D963EBC9A56 sizeof_sfntVariationAxis;
$2D19DE106AF6926C0AB3CDA57A3505A7 sizeof_sfntVariationHeader;
$E4D926CFAC96D1A9C67CAB14770D8CA3 sktClosedErr;
$AB88C37431EB6AD714E363592C093039 sleepDemand;
$AB88C37431EB6AD714E363592C093039 sleepDeny;
$AB88C37431EB6AD714E363592C093039 sleepNow;
$EA33CD4CB37232534905F76FFB5C3F1E sleepQType;
$AB88C37431EB6AD714E363592C093039 sleepRequest;
$AB88C37431EB6AD714E363592C093039 sleepRevoke;
$AB88C37431EB6AD714E363592C093039 sleepUnlock;
$AB88C37431EB6AD714E363592C093039 sleepWakeUp;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 slotNumErr;
$EA33CD4CB37232534905F76FFB5C3F1E slpQType;
$1A642C56BCF2282BA059564BD9119EAF smAllScripts;
$8DF4EA04B3357483FC84B171A0661DE7 smAmharic;
$28931D4AEA6298DB1D3AC8A95D725E37 smArabic;
$28931D4AEA6298DB1D3AC8A95D725E37 smArmenian;
$7A00BDE3FF1F36B1D51A26B10393E8CD smBLFieldBad;
$7A00BDE3FF1F36B1D51A26B10393E8CD smBadBoardId;
$7A00BDE3FF1F36B1D51A26B10393E8CD smBadRefId;
$D38F9625C22D505DF9332ACBA3967637 smBadScript;
$D38F9625C22D505DF9332ACBA3967637 smBadVerb;
$7A00BDE3FF1F36B1D51A26B10393E8CD smBadsList;
$D08EDC556034CEFEFD09614186522DCF smBadsPtrErr;
$28931D4AEA6298DB1D3AC8A95D725E37 smBengali;
$8DCD112996BD8C3055C5EE9961EE3635 smBidirect;
$D08EDC556034CEFEFD09614186522DCF smBlkMoveErr;
$47FB2E451563E2721B05F1063C1FC96F smBreakChar;
$47FB2E451563E2721B05F1063C1FC96F smBreakOverflow;
$47FB2E451563E2721B05F1063C1FC96F smBreakWord;
$28931D4AEA6298DB1D3AC8A95D725E37 smBurmese;
$7A00BDE3FF1F36B1D51A26B10393E8CD smBusErrTO;
$D08EDC556034CEFEFD09614186522DCF smByteLanesErr;
$D08EDC556034CEFEFD09614186522DCF smCPUErr;
$0E6E686A91C8FC8FE2348130C5D81D38 smCRCFail;
$28931D4AEA6298DB1D3AC8A95D725E37 smCentralEuroRoman;
$B481BAA951BB64411EC953D25CF2DFC0 smChar1byte;
$B481BAA951BB64411EC953D25CF2DFC0 smChar2byte;
$CB6F75D93604AFC65B130E62229196BF smCharAscii;
$CB6F75D93604AFC65B130E62229196BF smCharBidirect;
$CB6F75D93604AFC65B130E62229196BF smCharBopomofo;
$CB6F75D93604AFC65B130E62229196BF smCharContextualLR;
$CB6F75D93604AFC65B130E62229196BF smCharEuro;
$CB6F75D93604AFC65B130E62229196BF smCharExtAscii;
$CB6F75D93604AFC65B130E62229196BF smCharFISGana;
$97E323B8835348E0386963CC27DECB57 smCharFISGreek;
$CB6F75D93604AFC65B130E62229196BF smCharFISIdeo;
$CB6F75D93604AFC65B130E62229196BF smCharFISKana;
$97E323B8835348E0386963CC27DECB57 smCharFISRussian;
$CB6F75D93604AFC65B130E62229196BF smCharGanaKana;
$CB6F75D93604AFC65B130E62229196BF smCharHangul;
$CB6F75D93604AFC65B130E62229196BF smCharHiragana;
$B481BAA951BB64411EC953D25CF2DFC0 smCharHorizontal;
$CB6F75D93604AFC65B130E62229196BF smCharIdeographic;
$CB6F75D93604AFC65B130E62229196BF smCharJamo;
$CB6F75D93604AFC65B130E62229196BF smCharKatakana;
$B481BAA951BB64411EC953D25CF2DFC0 smCharLeft;
$B481BAA951BB64411EC953D25CF2DFC0 smCharLower;
$CB6F75D93604AFC65B130E62229196BF smCharNonContextualLR;
$8DCD112996BD8C3055C5EE9961EE3635 smCharPortion;
$CB6F75D93604AFC65B130E62229196BF smCharPunct;
$B481BAA951BB64411EC953D25CF2DFC0 smCharRight;
$CB6F75D93604AFC65B130E62229196BF smCharTwoByteGreek;
$CB6F75D93604AFC65B130E62229196BF smCharTwoByteRussian;
$B481BAA951BB64411EC953D25CF2DFC0 smCharUpper;
$B481BAA951BB64411EC953D25CF2DFC0 smCharVertical;
$8DF4EA04B3357483FC84B171A0661DE7 smChinese;
$D08EDC556034CEFEFD09614186522DCF smCkStatusErr;
$7A00BDE3FF1F36B1D51A26B10393E8CD smCodeRevErr;
$1A642C56BCF2282BA059564BD9119EAF smCurrentScript;
$28931D4AEA6298DB1D3AC8A95D725E37 smCyrillic;
$8DCD112996BD8C3055C5EE9961EE3635 smDefault;
$28931D4AEA6298DB1D3AC8A95D725E37 smDevanagari;
$D08EDC556034CEFEFD09614186522DCF smDisDrvrNamErr;
$0E6E686A91C8FC8FE2348130C5D81D38 smDisabledSlot;
$7A00BDE3FF1F36B1D51A26B10393E8CD smDisposePErr;
$8DCD112996BD8C3055C5EE9961EE3635 smDoubleByte;
$8DF4EA04B3357483FC84B171A0661DE7 smEastEurRoman;
$0E6E686A91C8FC8FE2348130C5D81D38 smEmptySlot;
$8DCD112996BD8C3055C5EE9961EE3635 smEnabled;
$28931D4AEA6298DB1D3AC8A95D725E37 smEthiopic;
$28931D4AEA6298DB1D3AC8A95D725E37 smExtArabic;
$7A00BDE3FF1F36B1D51A26B10393E8CD smFHBlkDispErr;
$7A00BDE3FF1F36B1D51A26B10393E8CD smFHBlockRdErr;
$97E323B8835348E0386963CC27DECB57 smFISClassLvl1;
$97E323B8835348E0386963CC27DECB57 smFISClassLvl2;
$97E323B8835348E0386963CC27DECB57 smFISClassUser;
$87D8FB4BC9CB92C35FD621E05ED44517 smFirstByte;
$ABC7F536762CD4DBE3717CB53592D8F2 smFondEnd;
$ABC7F536762CD4DBE3717CB53592D8F2 smFondStart;
$8DCD112996BD8C3055C5EE9961EE3635 smFontForce;
$8DCD112996BD8C3055C5EE9961EE3635 smForced;
$0E6E686A91C8FC8FE2348130C5D81D38 smFormatErr;
$28931D4AEA6298DB1D3AC8A95D725E37 smGeez;
$8DCD112996BD8C3055C5EE9961EE3635 smGenFlags;
$28931D4AEA6298DB1D3AC8A95D725E37 smGeorgian;
$D08EDC556034CEFEFD09614186522DCF smGetDrvrNamErr;
$7A00BDE3FF1F36B1D51A26B10393E8CD smGetPRErr;
$28931D4AEA6298DB1D3AC8A95D725E37 smGreek;
$28931D4AEA6298DB1D3AC8A95D725E37 smGujarati;
$28931D4AEA6298DB1D3AC8A95D725E37 smGurmukhi;
$28931D4AEA6298DB1D3AC8A95D725E37 smHebrew;
$D4C6990613B7A67F00619221BBE7346F smHilite;
$97E323B8835348E0386963CC27DECB57 smIdeographicLevel1;
$97E323B8835348E0386963CC27DECB57 smIdeographicLevel2;
$97E323B8835348E0386963CC27DECB57 smIdeographicUser;
$7A00BDE3FF1F36B1D51A26B10393E8CD smInitStatVErr;
$7A00BDE3FF1F36B1D51A26B10393E8CD smInitTblVErr;
$8DCD112996BD8C3055C5EE9961EE3635 smIntlForce;
$97E323B8835348E0386963CC27DECB57 smJamoBogJaeum;
$97E323B8835348E0386963CC27DECB57 smJamoBogMoeum;
$97E323B8835348E0386963CC27DECB57 smJamoJaeum;
$97E323B8835348E0386963CC27DECB57 smJamoMoeum;
$28931D4AEA6298DB1D3AC8A95D725E37 smJapanese;
$8DCD112996BD8C3055C5EE9961EE3635 smKCHRCache;
$97E323B8835348E0386963CC27DECB57 smKanaHardOK;
$97E323B8835348E0386963CC27DECB57 smKanaSmall;
$97E323B8835348E0386963CC27DECB57 smKanaSoftOK;
$28931D4AEA6298DB1D3AC8A95D725E37 smKannada;
$8DCD112996BD8C3055C5EE9961EE3635 smKeyCache;
$ED776400C0300A05DBBF5F05408BC844 smKeyDisableKybdSwitch;
$ED776400C0300A05DBBF5F05408BC844 smKeyDisableKybds;
$8DCD112996BD8C3055C5EE9961EE3635 smKeyDisableState;
$ED776400C0300A05DBBF5F05408BC844 smKeyEnableKybds;
$7FD87024E3DCFC1573C5E5192BC9C124 smKeyForceKeyScriptBit;
$7FD87024E3DCFC1573C5E5192BC9C124 smKeyForceKeyScriptMask;
$ED776400C0300A05DBBF5F05408BC844 smKeyNextInputMethod;
$ED776400C0300A05DBBF5F05408BC844 smKeyNextKybd;
$ED776400C0300A05DBBF5F05408BC844 smKeyNextScript;
$ED776400C0300A05DBBF5F05408BC844 smKeyRoman;
$8DCD112996BD8C3055C5EE9961EE3635 smKeyScript;
$ED776400C0300A05DBBF5F05408BC844 smKeySetDirLeftRight;
$ED776400C0300A05DBBF5F05408BC844 smKeySetDirRightLeft;
$8DCD112996BD8C3055C5EE9961EE3635 smKeySwap;
$ED776400C0300A05DBBF5F05408BC844 smKeySwapInputMethod;
$ED776400C0300A05DBBF5F05408BC844 smKeySwapKybd;
$ED776400C0300A05DBBF5F05408BC844 smKeySwapScript;
$ED776400C0300A05DBBF5F05408BC844 smKeySysScript;
$ED776400C0300A05DBBF5F05408BC844 smKeyToggleDirection;
$ED776400C0300A05DBBF5F05408BC844 smKeyToggleInline;
$28931D4AEA6298DB1D3AC8A95D725E37 smKhmer;
$8DF4EA04B3357483FC84B171A0661DE7 smKlingon;
$28931D4AEA6298DB1D3AC8A95D725E37 smKorean;
$28931D4AEA6298DB1D3AC8A95D725E37 smLao;
$8DF4EA04B3357483FC84B171A0661DE7 smLaotian;
$87D8FB4BC9CB92C35FD621E05ED44517 smLastByte;
$8DCD112996BD8C3055C5EE9961EE3635 smLastScript;
$97079C061FDCAFEC42B8691A72886824 smLayoutCache;
$D4C6990613B7A67F00619221BBE7346F smLeftCaret;
$00B8682EB436791A52B8F11CCB13C105 smLeftStyleRun;
$28931D4AEA6298DB1D3AC8A95D725E37 smMalayalam;
$9996B868B43146DBBA442E9E5BE1987A smMaskAll;
$9996B868B43146DBBA442E9E5BE1987A smMaskAscii;
$9996B868B43146DBBA442E9E5BE1987A smMaskAscii1;
$9996B868B43146DBBA442E9E5BE1987A smMaskAscii2;
$9996B868B43146DBBA442E9E5BE1987A smMaskBopomofo2;
$9996B868B43146DBBA442E9E5BE1987A smMaskGana2;
$9996B868B43146DBBA442E9E5BE1987A smMaskHangul2;
$9996B868B43146DBBA442E9E5BE1987A smMaskJamo2;
$9996B868B43146DBBA442E9E5BE1987A smMaskKana1;
$9996B868B43146DBBA442E9E5BE1987A smMaskKana2;
$9996B868B43146DBBA442E9E5BE1987A smMaskNative;
$87D8FB4BC9CB92C35FD621E05ED44517 smMiddleByte;
$00B8682EB436791A52B8F11CCB13C105 smMiddleStyleRun;
$28931D4AEA6298DB1D3AC8A95D725E37 smMongolian;
$8DCD112996BD8C3055C5EE9961EE3635 smMunged;
$D08EDC556034CEFEFD09614186522DCF smNewPErr;
$D08EDC556034CEFEFD09614186522DCF smNilsBlockErr;
$7A00BDE3FF1F36B1D51A26B10393E8CD smNoBoardId;
$7A00BDE3FF1F36B1D51A26B10393E8CD smNoBoardSRsrc;
$0E6E686A91C8FC8FE2348130C5D81D38 smNoDir;
$D08EDC556034CEFEFD09614186522DCF smNoGoodOpens;
$7A00BDE3FF1F36B1D51A26B10393E8CD smNoJmpTbl;
$D08EDC556034CEFEFD09614186522DCF smNoMoresRsrcs;
$0E6E686A91C8FC8FE2348130C5D81D38 smNosInfoArray;
$D38F9625C22D505DF9332ACBA3967637 smNotInstalled;
$49EADD111A232CC035C3C1BFA08B757A smNotTruncated;
$89014B5696B23340C5C8539B64398289 smNumberPartsTable;
$D08EDC556034CEFEFD09614186522DCF smOffsetErr;
$97079C061FDCAFEC42B8691A72886824 smOldVerbSupport;
$00B8682EB436791A52B8F11CCB13C105 smOnlyStyleRun;
$28931D4AEA6298DB1D3AC8A95D725E37 smOriya;
$8DCD112996BD8C3055C5EE9961EE3635 smOverride;
$0E6E686A91C8FC8FE2348130C5D81D38 smPRAMInitErr;
$0E6E686A91C8FC8FE2348130C5D81D38 smPriInitErr;
$8DCD112996BD8C3055C5EE9961EE3635 smPrint;
$97E323B8835348E0386963CC27DECB57 smPunctBlank;
$97E323B8835348E0386963CC27DECB57 smPunctGraphic;
$97E323B8835348E0386963CC27DECB57 smPunctNormal;
$97E323B8835348E0386963CC27DECB57 smPunctNumber;
$97E323B8835348E0386963CC27DECB57 smPunctRepeat;
$97E323B8835348E0386963CC27DECB57 smPunctSymbol;
$28931D4AEA6298DB1D3AC8A95D725E37 smRSymbol;
$D08EDC556034CEFEFD09614186522DCF smRecNotFnd;
$F75CD7292C2C56CBC273EC3505501FAB smRedrawChar;
$F75CD7292C2C56CBC273EC3505501FAB smRedrawLine;
$F75CD7292C2C56CBC273EC3505501FAB smRedrawWord;
$8DCD112996BD8C3055C5EE9961EE3635 smRegionCode;
$7A00BDE3FF1F36B1D51A26B10393E8CD smReservedErr;
$7A00BDE3FF1F36B1D51A26B10393E8CD smReservedSlot;
$7A00BDE3FF1F36B1D51A26B10393E8CD smResrvErr;
$0E6E686A91C8FC8FE2348130C5D81D38 smRevisionErr;
$D4C6990613B7A67F00619221BBE7346F smRightCaret;
$00B8682EB436791A52B8F11CCB13C105 smRightStyleRun;
$28931D4AEA6298DB1D3AC8A95D725E37 smRoman;
$8DF4EA04B3357483FC84B171A0661DE7 smRussian;
$0E6E686A91C8FC8FE2348130C5D81D38 smSDMInitErr;
$0E6E686A91C8FC8FE2348130C5D81D38 smSRTInitErr;
$D08EDC556034CEFEFD09614186522DCF smSRTOvrFlErr;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptAliasStyle;
$97079C061FDCAFEC42B8691A72886824 smScriptAppBase;
$0197A3F738909BC58D37B8762CCC0075 smScriptAppFond;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptAppFondSize;
$0197A3F738909BC58D37B8762CCC0075 smScriptBundle;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptCreator;
$0197A3F738909BC58D37B8762CCC0075 smScriptDate;
$0197A3F738909BC58D37B8762CCC0075 smScriptEnabled;
$0197A3F738909BC58D37B8762CCC0075 smScriptEncoding;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptFile;
$0197A3F738909BC58D37B8762CCC0075 smScriptFlags;
$97079C061FDCAFEC42B8691A72886824 smScriptFntBase;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptHelpFondSize;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptIcon;
$0197A3F738909BC58D37B8762CCC0075 smScriptJust;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptKeys;
$0197A3F738909BC58D37B8762CCC0075 smScriptLang;
$97079C061FDCAFEC42B8691A72886824 smScriptLigatures;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptMonoFondSize;
$0197A3F738909BC58D37B8762CCC0075 smScriptMunged;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptName;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptNumDate;
$0197A3F738909BC58D37B8762CCC0075 smScriptNumber;
$97079C061FDCAFEC42B8691A72886824 smScriptNumbers;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptPrefFondSize;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptPrint;
$0197A3F738909BC58D37B8762CCC0075 smScriptRedraw;
$0197A3F738909BC58D37B8762CCC0075 smScriptRight;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptSmallFondSize;
$0197A3F738909BC58D37B8762CCC0075 smScriptSort;
$97079C061FDCAFEC42B8691A72886824 smScriptSysBase;
$0197A3F738909BC58D37B8762CCC0075 smScriptSysFond;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptSysFondSize;
$0197A3F738909BC58D37B8762CCC0075 smScriptToken;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptTrap;
$A5002FD4C8AABFB231A48D70D9E11045 smScriptValidStyles;
$0197A3F738909BC58D37B8762CCC0075 smScriptVersion;
$D08EDC556034CEFEFD09614186522DCF smSelOOBErr;
$97079C061FDCAFEC42B8691A72886824 smSetKashProp;
$97079C061FDCAFEC42B8691A72886824 smSetKashidas;
$28931D4AEA6298DB1D3AC8A95D725E37 smSimpChinese;
$8DF4EA04B3357483FC84B171A0661DE7 smSindhi;
$87D8FB4BC9CB92C35FD621E05ED44517 smSingleByte;
$28931D4AEA6298DB1D3AC8A95D725E37 smSinhalese;
$8DF4EA04B3357483FC84B171A0661DE7 smSlavic;
$D08EDC556034CEFEFD09614186522DCF smSlotOOBErr;
$8DCD112996BD8C3055C5EE9961EE3635 smSysRef;
$8DCD112996BD8C3055C5EE9961EE3635 smSysScript;
$1A642C56BCF2282BA059564BD9119EAF smSystemScript;
$28931D4AEA6298DB1D3AC8A95D725E37 smTamil;
$28931D4AEA6298DB1D3AC8A95D725E37 smTelugu;
$28931D4AEA6298DB1D3AC8A95D725E37 smThai;
$28931D4AEA6298DB1D3AC8A95D725E37 smTibetan;
$28931D4AEA6298DB1D3AC8A95D725E37 smTradChinese;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransAscii;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransAscii1;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransAscii2;
$55F28261BC9C155E9483B39873A3ED85 smTransBopomofo2;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransCase;
$55F28261BC9C155E9483B39873A3ED85 smTransGana2;
$55F28261BC9C155E9483B39873A3ED85 smTransHangul2;
$55F28261BC9C155E9483B39873A3ED85 smTransHangulFormat;
$55F28261BC9C155E9483B39873A3ED85 smTransJamo2;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransKana1;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransKana2;
$55F28261BC9C155E9483B39873A3ED85 smTransLower;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransNative;
$55F28261BC9C155E9483B39873A3ED85 smTransPreDoubleByting;
$55F28261BC9C155E9483B39873A3ED85 smTransPreLowerCasing;
$55F28261BC9C155E9483B39873A3ED85 smTransRuleBaseFormat;
$E6A0AE22087A7B1DAD7918503FDAD658 smTransSystem;
$55F28261BC9C155E9483B39873A3ED85 smTransUpper;
$EE85891CFA42128E8F7D0D7C2248B06E smTruncEnd;
$49EADD111A232CC035C3C1BFA08B757A smTruncErr;
$EE85891CFA42128E8F7D0D7C2248B06E smTruncMiddle;
$49EADD111A232CC035C3C1BFA08B757A smTruncated;
$7A00BDE3FF1F36B1D51A26B10393E8CD smUnExBusErr;
$89014B5696B23340C5C8539B64398289 smUnTokenTable;
$D558B779F28B4D6D9377E9E7B13E6DFD smUnicodeScript;
$28931D4AEA6298DB1D3AC8A95D725E37 smUninterp;
$ABC7F536762CD4DBE3717CB53592D8F2 smUprHalfCharSet;
$8DCD112996BD8C3055C5EE9961EE3635 smVersion;
$28931D4AEA6298DB1D3AC8A95D725E37 smVietnamese;
$89014B5696B23340C5C8539B64398289 smWhiteSpaceList;
$89014B5696B23340C5C8539B64398289 smWordSelectTable;
$89014B5696B23340C5C8539B64398289 smWordWrapTable;
$3CACD39A2679D329B350058CB0EDFC3A small1BitMask;
$3CACD39A2679D329B350058CB0EDFC3A small4BitData;
$3CACD39A2679D329B350058CB0EDFC3A small8BitData;
$D099BBBF644965626627A4C08DED2C2A smallDateBit;
$A1CAFDA6AC34EDD3819EB35758499781 smcClassMask;
$A1CAFDA6AC34EDD3819EB35758499781 smcDoubleMask;
$A1CAFDA6AC34EDD3819EB35758499781 smcOrientationMask;
$A1CAFDA6AC34EDD3819EB35758499781 smcReserved;
$A1CAFDA6AC34EDD3819EB35758499781 smcRightMask;
$A1CAFDA6AC34EDD3819EB35758499781 smcTypeMask;
$A1CAFDA6AC34EDD3819EB35758499781 smcUpperMask;
$749D63BB152876DCBC12FE10BAF9CA68 smfDisableKeyScriptSync;
$A85653B800DC771F27C1826C67852DD8 smfDisableKeyScriptSyncMask;
$852FA2732105F71179FD6CFADCB4008B smfDualCaret;
$852FA2732105F71179FD6CFADCB4008B smfNameTagEnab;
$852FA2732105F71179FD6CFADCB4008B smfShowIcon;
$852FA2732105F71179FD6CFADCB4008B smfUseAssocFontInfo;
$D08EDC556034CEFEFD09614186522DCF smsGetDrvrErr;
$D08EDC556034CEFEFD09614186522DCF smsPointerNil;
$852FA2732105F71179FD6CFADCB4008B smsfAutoInit;
$852FA2732105F71179FD6CFADCB4008B smsfB0Digits;
$852FA2732105F71179FD6CFADCB4008B smsfContext;
$852FA2732105F71179FD6CFADCB4008B smsfForms;
$852FA2732105F71179FD6CFADCB4008B smsfIntellCP;
$852FA2732105F71179FD6CFADCB4008B smsfLigatures;
$852FA2732105F71179FD6CFADCB4008B smsfNatCase;
$852FA2732105F71179FD6CFADCB4008B smsfNoForceFont;
$852FA2732105F71179FD6CFADCB4008B smsfReverse;
$852FA2732105F71179FD6CFADCB4008B smsfSingByte;
$852FA2732105F71179FD6CFADCB4008B smsfSynchUnstyledTE;
$852FA2732105F71179FD6CFADCB4008B smsfUnivExt;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soCharacterMode;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soCommandDelimiter;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soCurrentA5;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soCurrentVoice;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soErrorCallBack;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soErrors;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soInputMode;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soNumberMode;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soPhonemeCallBack;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soPhonemeSymbols;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soPitchBase;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soPitchMod;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soRate;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soRecentSync;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soRefCon;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soReset;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soSoundOutput;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soSpeechDoneCallBack;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soStatus;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soSyncCallBack;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soSynthExtension;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soSynthType;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soTextDoneCallBack;
$FB8A497DA827941B97A092753B7FBC8E soVoiceDescription;
$FB8A497DA827941B97A092753B7FBC8E soVoiceFile;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soVolume;
$E18236C2AD651F98DC4CD3F8C7C1E0CB soWordCallBack;
$9319DF510CA58260D0708F9D22620C92 sortsAfter;
$9319DF510CA58260D0708F9D22620C92 sortsBefore;
$9319DF510CA58260D0708F9D22620C92 sortsEqual;
$0A460A6E82C5C9197C39E6203E2D9451 soundCmd;
$766AF2F9A78A14DBDE9F72FE806423B3 soundListRsrc;
$2AFA9741D4492F551C527940D8BE691A soundSupportNotAvailableErr;
$2AFA9741D4492F551C527940D8BE691A sourceNotFoundErr;
$E0B249A01E8422CE9D0FC370668E05FC spGammaDir;
$E0B249A01E8422CE9D0FC370668E05FC spVidNamesDir;
$3396F92FAC0BE03A6A5A931576A5D5DF spanishHighWord;
$F5733A20729282EBCF3804504A9796F3 spdAdjErr;
$CBAF5646069367B3450D2EB7E8DB23F4 srcBic;
$CBAF5646069367B3450D2EB7E8DB23F4 srcCopy;
$CBAF5646069367B3450D2EB7E8DB23F4 srcOr;
$CBAF5646069367B3450D2EB7E8DB23F4 srcXor;
$2AFA9741D4492F551C527940D8BE691A staleEditState;
$3B240B4C9ACC633426814EA91DA89F65 startupFolderIconResource;
$C625086FF7C44828098F3E200ADA2515 startupMsg;
$8E378796D9B27A0F0F3B65CDE1C24332 statText;
$A090D39FCC75420A865A59B6557FCDFB stateBlockSize;
$621775189DBE97248B7FB782F8F10678 statusErr;
$8ADC5870EB51CA691E1E866FDFC9FCF5 stdQLength;
$32C729C88CE832800A236F2596111AC4 stdSH;
$9AE367475DB3252AE4C1C184F0EB9534 stopIcon;
$15527A7957C35DDC42E8F9BAFCC21D16 strUserBreak;
$DDA3263AAAFDC2735294AAEF0985DAE8 streamTypeModifierMask;
$2E21CDC9416351B60D3647421538B7E9 streamingNodeNotReadyErr;
$F3876F991244DA6C9E2D6E25C6A258B7 stretchPix;
$CD245178CB213C313AFEA4423394C154 stretchPixBit;
$A05B9B2BBC343A6D19ADAB85FCC92B0A stringOverflow;
$CBAF5646069367B3450D2EB7E8DB23F4 subOver;
$CBAF5646069367B3450D2EB7E8DB23F4 subPin;
MACRO_emask sub_emask;
MACRO_sub sub_iokit_block_storage;
MACRO_sub sub_iokit_common;
MACRO_sub sub_iokit_firewire;
MACRO_sub sub_iokit_reserved;
MACRO_sub sub_iokit_usb;
$4FBD46A7782F6749F1F35ACCB96A0A2C supDay;
$4FBD46A7782F6749F1F35ACCB96A0A2C supMonth;
$4FBD46A7782F6749F1F35ACCB96A0A2C supWeek;
$4FBD46A7782F6749F1F35ACCB96A0A2C supYear;
$C625086FF7C44828098F3E200ADA2515 superMsg;
$42A49EA8AE7BAE129AB675773FAEF748 supportsIdleQueue;
$42A49EA8AE7BAE129AB675773FAEF748 supportsServerModeAPIs;
$42A49EA8AE7BAE129AB675773FAEF748 supportsUPSIntegration;
$ED986353A623588C3ED06F42FF2FFD9B suppressBlackAndWhite;
$AB88C37431EB6AD714E363592C093039 suspendDemandMsg;
$AB88C37431EB6AD714E363592C093039 suspendRequestMsg;
$82D1E6E6D578224BE82D48C2B6E7DE65 suspendResumeMessage;
$AB88C37431EB6AD714E363592C093039 suspendRevokeMsg;
$AB88C37431EB6AD714E363592C093039 suspendWakeUpMsg;
$F75A7AEDE8040469C1C5278DF62D2143 svAll1BitData;
$F75A7AEDE8040469C1C5278DF62D2143 svAll4BitData;
$F75A7AEDE8040469C1C5278DF62D2143 svAll8BitData;
$F75A7AEDE8040469C1C5278DF62D2143 svAllAvailableData;
$F75A7AEDE8040469C1C5278DF62D2143 svAllLargeData;
$F75A7AEDE8040469C1C5278DF62D2143 svAllMiniData;
$F75A7AEDE8040469C1C5278DF62D2143 svAllSmallData;
$7A00BDE3FF1F36B1D51A26B10393E8CD svDisabled;
$F75A7AEDE8040469C1C5278DF62D2143 svLarge1Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svLarge4Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svLarge8Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svMini1Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svMini4Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svMini8Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svSmall1Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svSmall4Bit;
$F75A7AEDE8040469C1C5278DF62D2143 svSmall8Bit;
$7A00BDE3FF1F36B1D51A26B10393E8CD svTempDisable;
$3396F92FAC0BE03A6A5A931576A5D5DF swedishHighWord;
$0A460A6E82C5C9197C39E6203E2D9451 syncCmd;
$84C242BEA25FE377EB24CF870780C809 synthNotReady;
$84C242BEA25FE377EB24CF870780C809 synthOpenFailed;
$A8C97E4EDD9E089EB77DFE179D2C9A4B synthesizerNotRespondingOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B synthesizerOSErr;
$40AF04C40AACAF30666A505630353903 sysBeepDisable;
$40AF04C40AACAF30666A505630353903 sysBeepEnable;
$40AF04C40AACAF30666A505630353903 sysBeepSynchronous;
$E47A24D70C087CD7CD8B3D81D230CB29 sysPatListID;
MACRO_sys sys_iokit;
$256542734A18D99DBB4DE67432107625 systemCurLang;
$256542734A18D99DBB4DE67432107625 systemDefLang;
$02BA74D5F373AE3510806004249404D3 systemFolderIconResource;
$AB0BA9F9A7D6180DD29DC1F0E4564763 systemFont;
$480234505259C80FE1B6085A2FAC9295 systemMethod;
MACRO_emask system_emask;
$2EEF8E6407447DE8AF0EEF99D4107F62 taDstDocNeedsResourceFork;
$2EEF8E6407447DE8AF0EEF99D4107F62 taDstIsAppTranslation;
$CADB6B4EFAC31664979932E8F8FDA79E teBitClear;
$CADB6B4EFAC31664979932E8F8FDA79E teBitSet;
$CADB6B4EFAC31664979932E8F8FDA79E teBitTest;
$70E04FFD63872778BF09F036AEB6E5D7 teCaret;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teCenter;
$70E04FFD63872778BF09F036AEB6E5D7 teDraw;
$EBAC7D7661405B5C9D3268698762E0FD teFAutoScroll;
$987F3077CF90D6656DFDECDEBE413CD2 teFIdleWithEventLoopTimer;
$EBAC7D7661405B5C9D3268698762E0FD teFInlineInput;
$EBAC7D7661405B5C9D3268698762E0FD teFInlineInputAutoScroll;
$EBAC7D7661405B5C9D3268698762E0FD teFOutlineHilite;
$EBAC7D7661405B5C9D3268698762E0FD teFTextBuffering;
$EBAC7D7661405B5C9D3268698762E0FD teFUseInlineInput;
$6FC22EB2853C6DFC420A02F0036DFE96 teFUseTextServices;
$EBAC7D7661405B5C9D3268698762E0FD teFUseWhiteBackground;
$70E04FFD63872778BF09F036AEB6E5D7 teFind;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teFlushDefault;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teFlushLeft;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teFlushRight;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teForceLeft;
$305290A9B0793269B4735667ACD5875D teFromFind;
$305290A9B0793269B4735667ACD5875D teFromRecal;
$70E04FFD63872778BF09F036AEB6E5D7 teHighlight;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teJustCenter;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teJustLeft;
$FF6D052BF2ACC7EC238F69F08C4D7CC8 teJustRight;
$C98B22E8D4E004C8875CFAC75B2C8663 teScrapSizeErr;
$305290A9B0793269B4735667ACD5875D teWordDrag;
$305290A9B0793269B4735667ACD5875D teWordSelect;
$33644192E5871B59FE3A3685CFA7F9CF telAPattNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telAlreadyOpen;
$33644192E5871B59FE3A3685CFA7F9CF telAutoAnsNotOn;
$33644192E5871B59FE3A3685CFA7F9CF telBadAPattErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadBearerType;
$33644192E5871B59FE3A3685CFA7F9CF telBadCAErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadCodeResource;
$33644192E5871B59FE3A3685CFA7F9CF telBadDNDType;
$33644192E5871B59FE3A3685CFA7F9CF telBadDNErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadDNType;
$33644192E5871B59FE3A3685CFA7F9CF telBadDisplayMode;
$33644192E5871B59FE3A3685CFA7F9CF telBadFeatureID;
$33644192E5871B59FE3A3685CFA7F9CF telBadFunction;
$33644192E5871B59FE3A3685CFA7F9CF telBadFwdType;
$33644192E5871B59FE3A3685CFA7F9CF telBadHTypeErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadHandErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadIndex;
$33644192E5871B59FE3A3685CFA7F9CF telBadIntExt;
$33644192E5871B59FE3A3685CFA7F9CF telBadIntercomID;
$33644192E5871B59FE3A3685CFA7F9CF telBadLevelErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadPageID;
$33644192E5871B59FE3A3685CFA7F9CF telBadParkID;
$33644192E5871B59FE3A3685CFA7F9CF telBadPickupGroupID;
$33644192E5871B59FE3A3685CFA7F9CF telBadProcErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadProcID;
$33644192E5871B59FE3A3685CFA7F9CF telBadRate;
$33644192E5871B59FE3A3685CFA7F9CF telBadSWErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadSampleRate;
$33644192E5871B59FE3A3685CFA7F9CF telBadSelect;
$33644192E5871B59FE3A3685CFA7F9CF telBadStateErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadTermErr;
$33644192E5871B59FE3A3685CFA7F9CF telBadVTypeErr;
$33644192E5871B59FE3A3685CFA7F9CF telCANotAcceptable;
$33644192E5871B59FE3A3685CFA7F9CF telCANotDeflectable;
$33644192E5871B59FE3A3685CFA7F9CF telCANotRejectable;
$33644192E5871B59FE3A3685CFA7F9CF telCAUnavail;
$33644192E5871B59FE3A3685CFA7F9CF telCBErr;
$33644192E5871B59FE3A3685CFA7F9CF telConfErr;
$33644192E5871B59FE3A3685CFA7F9CF telConfLimitErr;
$33644192E5871B59FE3A3685CFA7F9CF telConfLimitExceeded;
$33644192E5871B59FE3A3685CFA7F9CF telConfNoLimit;
$33644192E5871B59FE3A3685CFA7F9CF telConfRej;
$33644192E5871B59FE3A3685CFA7F9CF telDNDTypeNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telDNTypeNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telDetAlreadyOn;
$33644192E5871B59FE3A3685CFA7F9CF telDeviceNotFound;
$33644192E5871B59FE3A3685CFA7F9CF telDisplayModeNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telFeatActive;
$33644192E5871B59FE3A3685CFA7F9CF telFeatNotAvail;
$33644192E5871B59FE3A3685CFA7F9CF telFeatNotSub;
$33644192E5871B59FE3A3685CFA7F9CF telFeatNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telFwdTypeNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telGenericError;
$33644192E5871B59FE3A3685CFA7F9CF telHTypeNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telIndexNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telInitFailed;
$33644192E5871B59FE3A3685CFA7F9CF telIntExtNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telNoCallbackRef;
$33644192E5871B59FE3A3685CFA7F9CF telNoCommFolder;
$33644192E5871B59FE3A3685CFA7F9CF telNoErr;
$33644192E5871B59FE3A3685CFA7F9CF telNoMemErr;
$33644192E5871B59FE3A3685CFA7F9CF telNoOpenErr;
$33644192E5871B59FE3A3685CFA7F9CF telNoSuchTool;
$33644192E5871B59FE3A3685CFA7F9CF telNoTools;
$33644192E5871B59FE3A3685CFA7F9CF telNotEnoughdspBW;
$33644192E5871B59FE3A3685CFA7F9CF telPBErr;
$33644192E5871B59FE3A3685CFA7F9CF telStateNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telStillNeeded;
$33644192E5871B59FE3A3685CFA7F9CF telTermNotOpen;
$33644192E5871B59FE3A3685CFA7F9CF telTransferErr;
$33644192E5871B59FE3A3685CFA7F9CF telTransferRej;
$33644192E5871B59FE3A3685CFA7F9CF telUnknownErr;
$33644192E5871B59FE3A3685CFA7F9CF telVTypeNotSupp;
$33644192E5871B59FE3A3685CFA7F9CF telValidateFailed;
$2DA05D06990FCEC1EA5697B9BD8DA598 terminateMsg;
$4D21454FAD90E25BD2497F2FB4C4BB43 testCntl;
$E0D1826B5FFF107D16D7DACE7DE82934 textMenuProc;
$4D855211B07F3B815F584907E9A07A07 textParserBadParamErr;
$4D855211B07F3B815F584907E9A07A07 textParserBadParserObjectErr;
$4D855211B07F3B815F584907E9A07A07 textParserBadTextEncodingErr;
$4D855211B07F3B815F584907E9A07A07 textParserBadTextLanguageErr;
$4D855211B07F3B815F584907E9A07A07 textParserBadTokenValueErr;
$4D855211B07F3B815F584907E9A07A07 textParserNoMoreTextErr;
$4D855211B07F3B815F584907E9A07A07 textParserNoMoreTokensErr;
$4D855211B07F3B815F584907E9A07A07 textParserNoSuchTokenFoundErr;
$4D855211B07F3B815F584907E9A07A07 textParserObjectNotFoundErr;
$4D855211B07F3B815F584907E9A07A07 textParserParamErr;
$43C87C9E5F23A5D8F818117A1237CA8F tfAntiAlias;
$43C87C9E5F23A5D8F818117A1237CA8F tfUnicode;
$FF244A3E675AA0B06B444B295032402C themeBadCursorIndexErr;
$FF244A3E675AA0B06B444B295032402C themeBadTextColorErr;
$FF244A3E675AA0B06B444B295032402C themeHasNoAccentsErr;
$FF244A3E675AA0B06B444B295032402C themeInvalidBrushErr;
$FF244A3E675AA0B06B444B295032402C themeMonitorDepthNotSupportedErr;
$FF244A3E675AA0B06B444B295032402C themeNoAppropriateBrushErr;
$FF244A3E675AA0B06B444B295032402C themeProcessNotRegisteredErr;
$FF244A3E675AA0B06B444B295032402C themeProcessRegisteredErr;
$FF244A3E675AA0B06B444B295032402C themeScriptFontNotFoundErr;
$E0B249A01E8422CE9D0FC370668E05FC thirdVidMode;
$E0B249A01E8422CE9D0FC370668E05FC thirtyTwoBitMode;
$7A34C91203280F1DB2AA550EB35C1000 threadBadAppContextErr;
$B2EA2E8056A611C629E1C5A897AA627B threadNotFoundErr;
$B2EA2E8056A611C629E1C5A897AA627B threadProtocolErr;
$B2EA2E8056A611C629E1C5A897AA627B threadTooManyReqsErr;
$E430DC1A89068137E931CBD3EE4979FB threeToOne;
$E430DC1A89068137E931CBD3EE4979FB threeToOnePacketSize;
$4D21454FAD90E25BD2497F2FB4C4BB43 thumbCntl;
$1B23EBE69E7C72E0D4B27DFF733651FE tilde;
$4FBD46A7782F6749F1F35ACCB96A0A2C timeCycle12;
$4FBD46A7782F6749F1F35ACCB96A0A2C timeCycle24;
$4FBD46A7782F6749F1F35ACCB96A0A2C timeCycleZero;
$2AFA9741D4492F551C527940D8BE691A timeNotInMedia;
$2AFA9741D4492F551C527940D8BE691A timeNotInTrack;
$2E21CDC9416351B60D3647421538B7E9 timeNotInViewErr;
$B509F1F8D43218F1AD269B23B4432585 timingApple12;
$B509F1F8D43218F1AD269B23B4432585 timingApple12x;
$B509F1F8D43218F1AD269B23B4432585 timingApple13;
$B509F1F8D43218F1AD269B23B4432585 timingApple13x;
$B509F1F8D43218F1AD269B23B4432585 timingApple15;
$B509F1F8D43218F1AD269B23B4432585 timingApple15x;
$B509F1F8D43218F1AD269B23B4432585 timingApple16;
$B509F1F8D43218F1AD269B23B4432585 timingApple19;
$B509F1F8D43218F1AD269B23B4432585 timingApple1Ka;
$B509F1F8D43218F1AD269B23B4432585 timingApple1Kb;
$B509F1F8D43218F1AD269B23B4432585 timingApple21;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingAppleNTSC_FF;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingAppleNTSC_FFconv;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingAppleNTSC_ST;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingAppleNTSC_STconv;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApplePAL_FF;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApplePAL_FFconv;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApplePAL_ST;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApplePAL_STconv;
$B509F1F8D43218F1AD269B23B4432585 timingAppleSVGA;
$B509F1F8D43218F1AD269B23B4432585 timingAppleVGA;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_0x0_0hz_Offline;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_1024x768_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_1152x870_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_512x384_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_560x384_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_640x400_67hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_640x480_67hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_640x818_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_640x870_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_832x624_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingApple_FixedRateLCD;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingFilmRate_48hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingGTF_640x480_120hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingInvalid;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingInvalid_SM_T24;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingSMPTE240M_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingSony_1600x1024_76hz;
$B509F1F8D43218F1AD269B23B4432585 timingSony_1900x1200_74hz;
$B509F1F8D43218F1AD269B23B4432585 timingSony_1900x1200_76hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingSony_1920x1080_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingSony_1920x1080_72hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingSony_1920x1200_76hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1024x768_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1024x768_70hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1024x768_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1024x768_85hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1280x1024_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1280x1024_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1280x1024_85hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1280x960_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1280x960_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1280x960_85hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1600x1200_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1600x1200_65hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1600x1200_70hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1600x1200_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1600x1200_80hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1600x1200_85hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1792x1344_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1792x1344_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1856x1392_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1856x1392_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1920x1440_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_1920x1440_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_640x480_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_640x480_72hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_640x480_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_640x480_85hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_800x600_56hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_800x600_60hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_800x600_72hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_800x600_75hz;
$4E4645E55C66D8DB1573EB4D1E966AE6 timingVESA_800x600_85hz;
$F5733A20729282EBCF3804504A9796F3 tk0BadErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 tmfoErr;
$39BB08BE97442728A4F53B80076F6C3F tmwdoErr;
$D099BBBF644965626627A4C08DED2C2A togChar12HourBit;
$D099BBBF644965626627A4C08DED2C2A togCharZCycleBit;
$D099BBBF644965626627A4C08DED2C2A togDelta12HourBit;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleBadChar;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleBadDelta;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleBadField;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleBadNum;
$270F00ADEF16EFD1F46CBA2D4CC44548 toggleBit;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleErr3;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleErr4;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleErr5;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleOK;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleOutOfRange;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleUndefined;
$B2FA36AA1DE8A5B6F988B810A662A10C toggleUnknown;
$83F008354B376D0C29D1AC2F7C6FD071 tokDecPoint;
$83F008354B376D0C29D1AC2F7C6FD071 tokEMinus;
$83F008354B376D0C29D1AC2F7C6FD071 tokEPlus;
$83F008354B376D0C29D1AC2F7C6FD071 tokEscape;
$83F008354B376D0C29D1AC2F7C6FD071 tokLeadPlacer;
$83F008354B376D0C29D1AC2F7C6FD071 tokLeader;
$83F008354B376D0C29D1AC2F7C6FD071 tokLeftQuote;
$83F008354B376D0C29D1AC2F7C6FD071 tokMaxSymbols;
$83F008354B376D0C29D1AC2F7C6FD071 tokMinusSign;
$83F008354B376D0C29D1AC2F7C6FD071 tokNonLeader;
$83F008354B376D0C29D1AC2F7C6FD071 tokPercent;
$83F008354B376D0C29D1AC2F7C6FD071 tokPlusSign;
$83F008354B376D0C29D1AC2F7C6FD071 tokReserved;
$83F008354B376D0C29D1AC2F7C6FD071 tokRightQuote;
$83F008354B376D0C29D1AC2F7C6FD071 tokSeparator;
$83F008354B376D0C29D1AC2F7C6FD071 tokThousands;
$83F008354B376D0C29D1AC2F7C6FD071 tokZeroLead;
$7934D37E72B4A6A37F437CBC10789FB5 token1Quote;
$6A19E47AB2821AEC874AE98EFC97CC40 token2Equal;
$7934D37E72B4A6A37F437CBC10789FB5 token2Quote;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenAlpha;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenAltNum;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenAltReal;
$7934D37E72B4A6A37F437CBC10789FB5 tokenAmpersand;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenAsterisk;
$7934D37E72B4A6A37F437CBC10789FB5 tokenAtSign;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenBackSlash;
$7934D37E72B4A6A37F437CBC10789FB5 tokenBar;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenCapPi;
$02D5866967F4E054F8180E988A02F698 tokenCarat;
$7934D37E72B4A6A37F437CBC10789FB5 tokenCaret;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenCenterDot;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenColon;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenColonEqual;
$7934D37E72B4A6A37F437CBC10789FB5 tokenComma;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenDivide;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenDollar;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenEllipsis;
$13F276F25186D13A1FC015FA02F79324 tokenEmpty;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenEqual;
$3A0529DF53FD0FCB1009E9B11B87DC72 tokenErr;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenEscape;
$7934D37E72B4A6A37F437CBC10789FB5 tokenExclam;
$7934D37E72B4A6A37F437CBC10789FB5 tokenExclamEqual;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenFraction;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenGreat;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenGreatEqual1;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenGreatEqual2;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenHash;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenInfinity;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenIntegral;
$13F276F25186D13A1FC015FA02F79324 tokenIntl;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenIntlCurrency;
$7934D37E72B4A6A37F437CBC10789FB5 tokenLeft1Quote;
$7934D37E72B4A6A37F437CBC10789FB5 tokenLeft2Quote;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenLeftBracket;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenLeftComment;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenLeftCurly;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenLeftEnclose;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenLeftLit;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenLeftParen;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenLeftSingGuillemet;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenLess;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenLessEqual1;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenLessEqual2;
$7934D37E72B4A6A37F437CBC10789FB5 tokenLessGreat;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenLiteral;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenMicro;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenMinus;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenNewLine;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenNil;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenNoBreakSpace;
$7934D37E72B4A6A37F437CBC10789FB5 tokenNotEqual;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenNumeric;
$A05B9B2BBC343A6D19ADAB85FCC92B0A tokenOK;
$A05B9B2BBC343A6D19ADAB85FCC92B0A tokenOverflow;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenPerThousand;
$7934D37E72B4A6A37F437CBC10789FB5 tokenPercent;
$7934D37E72B4A6A37F437CBC10789FB5 tokenPeriod;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenPi;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenPlus;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenPlusMinus;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenQuestion;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenRealNum;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenReserve1;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenReserve2;
$7934D37E72B4A6A37F437CBC10789FB5 tokenRight1Quote;
$7934D37E72B4A6A37F437CBC10789FB5 tokenRight2Quote;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenRightBracket;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenRightComment;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenRightCurly;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenRightEnclose;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenRightLit;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenRightParen;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenRightSingGuillemet;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenRoot;
$7934D37E72B4A6A37F437CBC10789FB5 tokenSemicolon;
$AABBBA3E4FDD8D616C273C16D3835CF7 tokenSigma;
$6A19E47AB2821AEC874AE98EFC97CC40 tokenSlash;
$02D5866967F4E054F8180E988A02F698 tokenTilda;
$7934D37E72B4A6A37F437CBC10789FB5 tokenTilde;
$7934D37E72B4A6A37F437CBC10789FB5 tokenUnderline;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenUnknown;
$E25B7D2D36D2BB5B1EC37CF29297D638 tokenWhite;
$F77E3C3D1101CCCA05824B85966C0086 tooManyReqs;
$3A0529DF53FD0FCB1009E9B11B87DC72 tooManySeps;
$F77E3C3D1101CCCA05824B85966C0086 tooManySkts;
$2AFA9741D4492F551C527940D8BE691A trackIDNotFound;
$2AFA9741D4492F551C527940D8BE691A trackNotInMovie;
$CBAF5646069367B3450D2EB7E8DB23F4 transparent;
$02BA74D5F373AE3510806004249404D3 trashIconResource;
MACRO_bool true;
$F0902F44937FF474D8C00514140AA502 true32b;
$DDA3263AAAFDC2735294AAEF0985DAE8 truetypeStreamType;
$EE85891CFA42128E8F7D0D7C2248B06E truncEnd;
$49EADD111A232CC035C3C1BFA08B757A truncErr;
$EE85891CFA42128E8F7D0D7C2248B06E truncMiddle;
$49EADD111A232CC035C3C1BFA08B757A truncated;
$70762D0B2261D3040494196417179487 tsNextSelectMode;
$70762D0B2261D3040494196417179487 tsNormalSelectMode;
$70762D0B2261D3040494196417179487 tsPreviousSelectMode;
$14A9DF255FA0CE5018F289A56E63A296 tsmAlreadyRegisteredErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmCantChangeForcedClassStateErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmCantOpenComponentErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmComponentAlreadyOpenErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmComponentNoErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmDefaultIsNotInputMethodErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmDocNotActiveErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmDocPropertyBufferTooSmallErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmDocPropertyNotFoundErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmDocumentOpenErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmInputMethodIsOldErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmInputMethodNotFoundErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmInvalidContext;
$14A9DF255FA0CE5018F289A56E63A296 tsmInvalidDocIDErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmNeverRegisteredErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmNoHandler;
$14A9DF255FA0CE5018F289A56E63A296 tsmNoMoreTokens;
$14A9DF255FA0CE5018F289A56E63A296 tsmNoOpenTSErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmNoStem;
$14A9DF255FA0CE5018F289A56E63A296 tsmNotAnAppErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmScriptHasNoIMErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmTSHasNoMenuErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmTSMDocBusyErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmTSNotOpenErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmTextServiceNotFoundErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmUnknownErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmUnsupScriptLanguageErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmUnsupportedTypeErr;
$14A9DF255FA0CE5018F289A56E63A296 tsmUseInputWindowErr;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttDisabled;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel1;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel2;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel3;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel4;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel5;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel6;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttLabel7;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttNone;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttOffline;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttOpen;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttSelected;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttSelectedDisabled;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttSelectedOffline;
$17FF85B04FA3AE5026EB3F7F2EAD285F ttSelectedOpen;
$A8C97E4EDD9E089EB77DFE179D2C9A4B tuneParseOSErr;
$A8C97E4EDD9E089EB77DFE179D2C9A4B tunePlayerFullOSErr;
$3396F92FAC0BE03A6A5A931576A5D5DF turkishHighWord;
$8A0661E97C5E67754D33CB96D6D3190F twoBitMode;
$F5733A20729282EBCF3804504A9796F3 twoSideErr;
$E430DC1A89068137E931CBD3EE4979FB twoToOne;
$D8946AD33A41F7BE6C1D7463E63524E1 type128BitFloatingPoint;
$DDA3263AAAFDC2735294AAEF0985DAE8 type1CFFStreamType;
$DDA3263AAAFDC2735294AAEF0985DAE8 type1StreamType;
$69521A467F76B425270CDAAC5D4FB8DC type32BitIcon;
$DDA3263AAAFDC2735294AAEF0985DAE8 type3StreamType;
$DDA3263AAAFDC2735294AAEF0985DAE8 type42GXStreamType;
$DDA3263AAAFDC2735294AAEF0985DAE8 type42StreamType;
$69521A467F76B425270CDAAC5D4FB8DC type4BitIcon;
$69521A467F76B425270CDAAC5D4FB8DC type8BitIcon;
$69521A467F76B425270CDAAC5D4FB8DC type8BitMask;
$923562FE960B0C4EC891CAD0A3A98138 typeAEHomographAccent;
$923562FE960B0C4EC891CAD0A3A98138 typeAEHomographDicInfo;
$923562FE960B0C4EC891CAD0A3A98138 typeAEHomographWeight;
$75CB5EC200FA265396EE7060A2FBE888 typeAEList;
$78B60C2F36DA898C35B315A38A0318E7 typeAEMorphemePartOfSpeechCode;
$78B60C2F36DA898C35B315A38A0318E7 typeAEMorphemeTextRange;
$75CB5EC200FA265396EE7060A2FBE888 typeAERecord;
$B66336CDD3FB7BACAE93B982EED235B4 typeAETE;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeAEText;
$B66336CDD3FB7BACAE93B982EED235B4 typeAEUT;
$5F3136115A81A068579DEF3E718D6587 typeASStorage;
$12D56C7F49369303C6B0C6C021D51378 typeATSUFontID;
$12D56C7F49369303C6B0C6C021D51378 typeATSUSize;
$B21D79D3E9BA096E697B331A2EBEA84F typeAbsoluteOrdinal;
$75CB5EC200FA265396EE7060A2FBE888 typeAlias;
$75CB5EC200FA265396EE7060A2FBE888 typeAppParameters;
$75CB5EC200FA265396EE7060A2FBE888 typeApplSignature;
$75CB5EC200FA265396EE7060A2FBE888 typeAppleEvent;
$5F3136115A81A068579DEF3E718D6587 typeAppleScript;
$75CB5EC200FA265396EE7060A2FBE888 typeApplicationURL;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeArc;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeBest;
$A58F6CEAA65D72725BBA7C4ACD5EE387 typeBoolean;
$F255FDCA20DDDAA774B30F5BF23F4680 typeCFIndex;
$4FD06A13F00F8A4D99EE10AF5B077DBF typeCFMutableArrayRef;
$F255FDCA20DDDAA774B30F5BF23F4680 typeCFMutableStringRef;
$F255FDCA20DDDAA774B30F5BF23F4680 typeCFStringRef;
$F255FDCA20DDDAA774B30F5BF23F4680 typeCFTypeRef;
$F255FDCA20DDDAA774B30F5BF23F4680 typeCGContextRef;
$51F8A2E6CD8BB9F36607A6702D3290DE typeCString;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeCell;
$AF3FA1F01AF3104F8B6DD0D054743583 typeCentimeters;
$A58F6CEAA65D72725BBA7C4ACD5EE387 typeChar;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeClassInfo;
$70557CB90B31D8BB8CDA48B52213C956 typeClickActivationResult;
$F255FDCA20DDDAA774B30F5BF23F4680 typeCollection;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeColorTable;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeColumn;
$5DFB9E3518074F8A33D535E5D626C1CD typeComp;
$B21D79D3E9BA096E697B331A2EBEA84F typeCompDescriptor;
$0CE592B5184B238B16AB67F4BE1A6C98 typeComponentInstance;
$69521A467F76B425270CDAAC5D4FB8DC typeConceptualTime;
$E025492169204B653155AE115B56D39A typeControlActionUPP;
$E025492169204B653155AE115B56D39A typeControlPartCode;
$F255FDCA20DDDAA774B30F5BF23F4680 typeControlRef;
$AF3FA1F01AF3104F8B6DD0D054743583 typeCubicCentimeter;
$AF3FA1F01AF3104F8B6DD0D054743583 typeCubicFeet;
$AF3FA1F01AF3104F8B6DD0D054743583 typeCubicInches;
$AF3FA1F01AF3104F8B6DD0D054743583 typeCubicMeters;
$AF3FA1F01AF3104F8B6DD0D054743583 typeCubicYards;
$B21D79D3E9BA096E697B331A2EBEA84F typeCurrentContainer;
$4A3C9F22E33743BBEC9451442DF7703D typeDCMFieldAttributes;
$4A3C9F22E33743BBEC9451442DF7703D typeDCMFindMethod;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeDashStyle;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeData;
$D8946AD33A41F7BE6C1D7463E63524E1 typeDecimalStruct;
$AF3FA1F01AF3104F8B6DD0D054743583 typeDegreesC;
$AF3FA1F01AF3104F8B6DD0D054743583 typeDegreesF;
$AF3FA1F01AF3104F8B6DD0D054743583 typeDegreesK;
$F255FDCA20DDDAA774B30F5BF23F4680 typeDragRef;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeDrawingArea;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeEPS;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeElemInfo;
$51F8A2E6CD8BB9F36607A6702D3290DE typeEncodedString;
$75CB5EC200FA265396EE7060A2FBE888 typeEnumerated;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeEnumeration;
$C2BA776CAA1D1E2810974D8A350054F8 typeEventHotKeyID;
$DC2C88FC384E44E5963C6FF1FE9B35A3 typeEventInfo;
$75CB5EC200FA265396EE7060A2FBE888 typeEventRecord;
$0CE592B5184B238B16AB67F4BE1A6C98 typeEventRef;
$A2E4C1A1D328110650F1367AEE4801CC typeEventTargetRef;
$5DFB9E3518074F8A33D535E5D626C1CD typeExtended;
$12D56C7F49369303C6B0C6C021D51378 typeFMFontFamily;
$12D56C7F49369303C6B0C6C021D51378 typeFMFontSize;
$12D56C7F49369303C6B0C6C021D51378 typeFMFontStyle;
$75CB5EC200FA265396EE7060A2FBE888 typeFSRef;
$75CB5EC200FA265396EE7060A2FBE888 typeFSS;
$44DE159E8FDABA3095939158288D7DD7 typeFSVolumeRefNum;
$75CB5EC200FA265396EE7060A2FBE888 typeFalse;
$AF3FA1F01AF3104F8B6DD0D054743583 typeFeet;
$75CB5EC200FA265396EE7060A2FBE888 typeFileURL;
$230FAB241E03DBA374F1130343ACE814 typeFinderWindow;
$75CB5EC200FA265396EE7060A2FBE888 typeFixed;
$230FAB241E03DBA374F1130343ACE814 typeFixedPoint;
$230FAB241E03DBA374F1130343ACE814 typeFixedRectangle;
$5DFB9E3518074F8A33D535E5D626C1CD typeFloat;
$12D56C7F49369303C6B0C6C021D51378 typeFontColor;
$F255FDCA20DDDAA774B30F5BF23F4680 typeGWorldPtr;
$AF3FA1F01AF3104F8B6DD0D054743583 typeGallons;
$0CE592B5184B238B16AB67F4BE1A6C98 typeGlyphInfoArray;
$F255FDCA20DDDAA774B30F5BF23F4680 typeGrafPtr;
$AF3FA1F01AF3104F8B6DD0D054743583 typeGrams;
$230FAB241E03DBA374F1130343ACE814 typeGraphicLine;
$230FAB241E03DBA374F1130343ACE814 typeGraphicText;
$230FAB241E03DBA374F1130343ACE814 typeGroupedGraphic;
$0BCA79403C4958F26F03CA8ADAE133EC typeHICommand;
$6C1AB020E0497AA6B9196D24AF50B1A5 typeHIMenu;
$6B48AC95129713EF0DD20DB41EA666C2 typeHIObjectRef;
$F255FDCA20DDDAA774B30F5BF23F4680 typeHIPoint;
$F255FDCA20DDDAA774B30F5BF23F4680 typeHIRect;
$F255FDCA20DDDAA774B30F5BF23F4680 typeHISize;
$DA59D2CD3DAE9524B7DBB217E5C9842F typeHIToolbarItemRef;
$DA59D2CD3DAE9524B7DBB217E5C9842F typeHIToolbarRef;
$6C1AB020E0497AA6B9196D24AF50B1A5 typeHIWindow;
$D8946AD33A41F7BE6C1D7463E63524E1 typeIEEE32BitFloatingPoint;
$D8946AD33A41F7BE6C1D7463E63524E1 typeIEEE64BitFloatingPoint;
$230FAB241E03DBA374F1130343ACE814 typeISO8601DateTime;
$69521A467F76B425270CDAAC5D4FB8DC typeIconAndMask;
$69521A467F76B425270CDAAC5D4FB8DC typeIconFamily;
$AF3FA1F01AF3104F8B6DD0D054743583 typeInches;
$B21D79D3E9BA096E697B331A2EBEA84F typeIndexDescriptor;
$E025492169204B653155AE115B56D39A typeIndicatorDragConstraint;
$230FAB241E03DBA374F1130343ACE814 typeInsertionLoc;
$5DFB9E3518074F8A33D535E5D626C1CD typeInteger;
$230FAB241E03DBA374F1130343ACE814 typeIntlText;
$230FAB241E03DBA374F1130343ACE814 typeIntlWritingCode;
$097B151426666DC164614F9A5766ECD9 typeKernelProcessID;
$75CB5EC200FA265396EE7060A2FBE888 typeKeyword;
$AF3FA1F01AF3104F8B6DD0D054743583 typeKilograms;
$AF3FA1F01AF3104F8B6DD0D054743583 typeKilometers;
$8F4C411F93794C8B00BF3FF6BE5E8636 typeLAHomograph;
$8F4C411F93794C8B00BF3FF6BE5E8636 typeLAMorpheme;
$8F4C411F93794C8B00BF3FF6BE5E8636 typeLAMorphemeBundle;
$8F4C411F93794C8B00BF3FF6BE5E8636 typeLAMorphemePath;
$AF3FA1F01AF3104F8B6DD0D054743583 typeLiters;
$B21D79D3E9BA096E697B331A2EBEA84F typeLogicalDescriptor;
$230FAB241E03DBA374F1130343ACE814 typeLongDateTime;
$230FAB241E03DBA374F1130343ACE814 typeLongFixed;
$230FAB241E03DBA374F1130343ACE814 typeLongFixedPoint;
$230FAB241E03DBA374F1130343ACE814 typeLongFixedRectangle;
$5DFB9E3518074F8A33D535E5D626C1CD typeLongFloat;
$5DFB9E3518074F8A33D535E5D626C1CD typeLongInteger;
$230FAB241E03DBA374F1130343ACE814 typeLongPoint;
$230FAB241E03DBA374F1130343ACE814 typeLongRectangle;
$0CE592B5184B238B16AB67F4BE1A6C98 typeLowLevelEventRecord;
$097B151426666DC164614F9A5766ECD9 typeMachPort;
$230FAB241E03DBA374F1130343ACE814 typeMachineLoc;
$5DFB9E3518074F8A33D535E5D626C1CD typeMagnitude;
$CC9978C76DBE3D8709D041F5270AF685 typeMenuCommand;
$CC9978C76DBE3D8709D041F5270AF685 typeMenuEventOptions;
$CC9978C76DBE3D8709D041F5270AF685 typeMenuItemIndex;
$F255FDCA20DDDAA774B30F5BF23F4680 typeMenuRef;
$CC9978C76DBE3D8709D041F5270AF685 typeMenuTrackingMode;
$AF3FA1F01AF3104F8B6DD0D054743583 typeMeters;
$AF3FA1F01AF3104F8B6DD0D054743583 typeMiles;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 typeMouseButton;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 typeMouseTrackingRef;
$010DFC30E1E3DCAF2BFF3CC2ACE21412 typeMouseWheelAxis;
$75CB5EC200FA265396EE7060A2FBE888 typeNull;
$09554BD3FB767C91A90BD71C7C09A3EC typeOSADialectInfo;
$EBAB25DA5EE8FC868841C3CDFB4A1EEB typeOSAErrorRange;
$1FB62A46F5054554EEF201D6323FD728 typeOSAGenericStorage;
$B21D79D3E9BA096E697B331A2EBEA84F typeOSLTokenList;
$F255FDCA20DDDAA774B30F5BF23F4680 typeOSStatus;
$B21D79D3E9BA096E697B331A2EBEA84F typeObjectBeingExamined;
$B21D79D3E9BA096E697B331A2EBEA84F typeObjectSpecifier;
$0CE592B5184B238B16AB67F4BE1A6C98 typeOffsetArray;
$AF3FA1F01AF3104F8B6DD0D054743583 typeOunces;
$230FAB241E03DBA374F1130343ACE814 typeOval;
$51F8A2E6CD8BB9F36607A6702D3290DE typePString;
$230FAB241E03DBA374F1130343ACE814 typeParamInfo;
$230FAB241E03DBA374F1130343ACE814 typePict;
$CD356E0646F3F24B53970279273BB9C6 typePixMapMinus;
$CD356E0646F3F24B53970279273BB9C6 typePixelMap;
$CD356E0646F3F24B53970279273BB9C6 typePolygon;
$AF3FA1F01AF3104F8B6DD0D054743583 typePounds;
$75CB5EC200FA265396EE7060A2FBE888 typeProcessSerialNumber;
$CD356E0646F3F24B53970279273BB9C6 typePropInfo;
$75CB5EC200FA265396EE7060A2FBE888 typeProperty;
$CD356E0646F3F24B53970279273BB9C6 typePtr;
$CD356E0646F3F24B53970279273BB9C6 typeQDPoint;
$75CB5EC200FA265396EE7060A2FBE888 typeQDRectangle;
$CD356E0646F3F24B53970279273BB9C6 typeQDRegion;
$F255FDCA20DDDAA774B30F5BF23F4680 typeQDRgnHandle;
$AF3FA1F01AF3104F8B6DD0D054743583 typeQuarts;
$CD356E0646F3F24B53970279273BB9C6 typeRGB16;
$CD356E0646F3F24B53970279273BB9C6 typeRGB96;
$CD356E0646F3F24B53970279273BB9C6 typeRGBColor;
$B21D79D3E9BA096E697B331A2EBEA84F typeRangeDescriptor;
$CD356E0646F3F24B53970279273BB9C6 typeRectangle;
$B21D79D3E9BA096E697B331A2EBEA84F typeRelativeDescriptor;
$69521A467F76B425270CDAAC5D4FB8DC typeRelativeTime;
$BB9E0A82C1EB964056B4CB66C6EE7F07 typeReplyPortAttr;
$CD356E0646F3F24B53970279273BB9C6 typeRotation;
$CD356E0646F3F24B53970279273BB9C6 typeRoundedRectangle;
$CD356E0646F3F24B53970279273BB9C6 typeRow;
$D8946AD33A41F7BE6C1D7463E63524E1 typeSInt16;
$D8946AD33A41F7BE6C1D7463E63524E1 typeSInt32;
$D8946AD33A41F7BE6C1D7463E63524E1 typeSInt64;
$5DFB9E3518074F8A33D535E5D626C1CD typeSMFloat;
$5DFB9E3518074F8A33D535E5D626C1CD typeSMInt;
$B8F573A0A399AB51D5ACD304AE3E4E90 typeSRRecognizer;
$B8F573A0A399AB51D5ACD304AE3E4E90 typeSRSpeechResult;
$4FD06A13F00F8A4D99EE10AF5B077DBF typeScrapRef;
$CD356E0646F3F24B53970279273BB9C6 typeScrapStyles;
$CD356E0646F3F24B53970279273BB9C6 typeScript;
$B66336CDD3FB7BACAE93B982EED235B4 typeScszResource;
$75CB5EC200FA265396EE7060A2FBE888 typeSectionH;
$5DFB9E3518074F8A33D535E5D626C1CD typeShortFloat;
$5DFB9E3518074F8A33D535E5D626C1CD typeShortInteger;
$69521A467F76B425270CDAAC5D4FB8DC typeSmall32BitIcon;
$69521A467F76B425270CDAAC5D4FB8DC typeSmall4BitIcon;
$69521A467F76B425270CDAAC5D4FB8DC typeSmall8BitIcon;
$69521A467F76B425270CDAAC5D4FB8DC typeSmall8BitMask;
$69521A467F76B425270CDAAC5D4FB8DC typeSmallIconAndMask;
$8B45090A886AD5148A7928FDD00332FF typeSound;
$AF3FA1F01AF3104F8B6DD0D054743583 typeSquareFeet;
$AF3FA1F01AF3104F8B6DD0D054743583 typeSquareKilometers;
$AF3FA1F01AF3104F8B6DD0D054743583 typeSquareMeters;
$AF3FA1F01AF3104F8B6DD0D054743583 typeSquareMiles;
$AF3FA1F01AF3104F8B6DD0D054743583 typeSquareYards;
$BD4F9D75E48C9BFCE8055CE4DD2DAD8D typeStatementRange;
$CD356E0646F3F24B53970279273BB9C6 typeStyledText;
$51F8A2E6CD8BB9F36607A6702D3290DE typeStyledUnicodeText;
$CD356E0646F3F24B53970279273BB9C6 typeSuiteInfo;
$850DD87FCC1947A9D2983865EC013DAE typeTIFF;
$CD356E0646F3F24B53970279273BB9C6 typeTable;
$4D1499D9AB99878865DBB85B985DDBBB typeTabletPointRec;
$4D1499D9AB99878865DBB85B985DDBBB typeTabletPointerRec;
$4D1499D9AB99878865DBB85B985DDBBB typeTabletProximityRec;
$0CE592B5184B238B16AB67F4BE1A6C98 typeText;
$0CE592B5184B238B16AB67F4BE1A6C98 typeTextRange;
$0CE592B5184B238B16AB67F4BE1A6C98 typeTextRangeArray;
$CD356E0646F3F24B53970279273BB9C6 typeTextStyles;
$CC9978C76DBE3D8709D041F5270AF685 typeThemeMenuItemType;
$CC9978C76DBE3D8709D041F5270AF685 typeThemeMenuState;
$B21D79D3E9BA096E697B331A2EBEA84F typeToken;
$75CB5EC200FA265396EE7060A2FBE888 typeTrue;
$75CB5EC200FA265396EE7060A2FBE888 typeType;
$D8946AD33A41F7BE6C1D7463E63524E1 typeUInt32;
$51F8A2E6CD8BB9F36607A6702D3290DE typeUTF8Text;
$51F8A2E6CD8BB9F36607A6702D3290DE typeUnicodeText;
$42A44C027C51BF81ADE897BA007A09A5 typeUserRecordFields;
$850DD87FCC1947A9D2983865EC013DAE typeVersion;
$F255FDCA20DDDAA774B30F5BF23F4680 typeVoidPtr;
$C74DBA0D955B36FDC065BBDBE74F56F8 typeWhoseDescriptor;
$C74DBA0D955B36FDC065BBDBE74F56F8 typeWhoseRange;
$75CB5EC200FA265396EE7060A2FBE888 typeWildCard;
$70557CB90B31D8BB8CDA48B52213C956 typeWindowDefPartCode;
$F255FDCA20DDDAA774B30F5BF23F4680 typeWindowRef;
$70557CB90B31D8BB8CDA48B52213C956 typeWindowRegionCode;
$AF3FA1F01AF3104F8B6DD0D054743583 typeYards;
$147E82B1B28920CD4B3E15BD59C82A4F ulineBit;
$CA37B7C591AB80BE0B169161AB784E55 underline;
$D129F4DFEBA165F72EA98C618C3DD9EB undoDev;
$973DC6726FA38C189808978C839B0622 unicodeBufErr;
$973DC6726FA38C189808978C839B0622 unicodeCharErr;
$973DC6726FA38C189808978C839B0622 unicodeChecksumErr;
$973DC6726FA38C189808978C839B0622 unicodeContextualErr;
$973DC6726FA38C189808978C839B0622 unicodeDirectionErr;
$973DC6726FA38C189808978C839B0622 unicodeElementErr;
$973DC6726FA38C189808978C839B0622 unicodeFallbacksErr;
$DDA3263AAAFDC2735294AAEF0985DAE8 unicodeMappingModifierStreamType;
$973DC6726FA38C189808978C839B0622 unicodeNoTableErr;
$973DC6726FA38C189808978C839B0622 unicodeNotFoundErr;
$973DC6726FA38C189808978C839B0622 unicodePartConvertErr;
$973DC6726FA38C189808978C839B0622 unicodeTableFormatErr;
$973DC6726FA38C189808978C839B0622 unicodeTextEncodingDataErr;
$973DC6726FA38C189808978C839B0622 unicodeVariantErr;
$621775189DBE97248B7FB782F8F10678 unimpErr;
$621775189DBE97248B7FB782F8F10678 unitEmptyErr;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 unitTblFullErr;
$3D62205FE7098ABDB366AD4A15978512 unitTypeNoSelection;
$3D62205FE7098ABDB366AD4A15978512 unitTypeSeconds;
$D497865AB20A3AD87EEE5277CBD67E69 unknownFormatErr;
$14338A5B3D28FC26400B4BB31F21F442 unknownInsertModeErr;
$F41C837101AFC9B0316B257F2D9D4B05 unresolvedComponentDLLErr;
$2AFA9741D4492F551C527940D8BE691A unsupportedAuxiliaryImportData;
$00479C61961A244562671FE5ED76F811 unsupportedForPlatformErr;
$A7A218FD448AC71BBFC70788B7B8D695 unsupportedOSErr;
$A7A218FD448AC71BBFC70788B7B8D695 unsupportedProcessorErr;
$AAB5F496A0B5E152CB221717E36939D8 updPixMemErr;
$D129F4DFEBA165F72EA98C618C3DD9EB updateDev;
$FEBB2992DC4ADCE18624A3BF5CCB540F updateEvt;
$090FD46DADED99452600AACF39205147 updateMask;
$C625086FF7C44828098F3E200ADA2515 updateMsg;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentCanDoProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentCloseProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentGetMPWorkFunctionProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentGetPublicResourceProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentOpenProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentRegisterProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentTargetProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentUnregisterProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppCallComponentVersionProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppComponentFunctionImplementedProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppComponentSetTargetProcInfo;
$4A3502115BFC6012574730CBD59F3B68 uppGetComponentVersionProcInfo;
$4FBF380524D959B2717756BA70CE323B upsConnected;
$4FBF380524D959B2717756BA70CE323B upsIsPowerSource;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPBadNameListErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPBadPasswordErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPBadUserErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPDataConnectionErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPFilenameErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPNeedPasswordErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPNoDirectoryErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPNoNetDriverErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPNoPasswordErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPPermissionsErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPProtocolErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPQuotaErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPServerDisconnectedErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPServerErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPShutdownErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHFTPURLErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHHTTPNoNetDriverErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHHTTPProtocolErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHHTTPRedirectErr;
$D497865AB20A3AD87EEE5277CBD67E69 urlDataHHTTPURLErr;
$A591C5B630A911B2073EBB6F3C068066 useATalk;
$A591C5B630A911B2073EBB6F3C068066 useAsync;
$F3876F991244DA6C9E2D6E25C6A258B7 useDistantHdwrMem;
$CD245178CB213C313AFEA4423394C154 useDistantHdwrMemBit;
$A591C5B630A911B2073EBB6F3C068066 useExtClk;
$A591C5B630A911B2073EBB6F3C068066 useFree;
$F3876F991244DA6C9E2D6E25C6A258B7 useLocalHdwrMem;
$CD245178CB213C313AFEA4423394C154 useLocalHdwrMemBit;
$A591C5B630A911B2073EBB6F3C068066 useMIDI;
$F3876F991244DA6C9E2D6E25C6A258B7 useTempMem;
$CD245178CB213C313AFEA4423394C154 useTempMemBit;
$15527A7957C35DDC42E8F9BAFCC21D16 userBreak;
$621775189DBE97248B7FB782F8F10678 userCanceledErr;
$2AFA9741D4492F551C527940D8BE691A userDataItemNotFound;
$8E378796D9B27A0F0F3B65CDE1C24332 userItem;
$2806241C695CE64F638EBE1504CA6EC2 userKind;
$A5BD715C8EAA008A7A3794353BC5F23C userRejectErr;
$7843CFC230C7B63097910348F257833D vAxisOnly;
$39BB08BE97442728A4F53B80076F6C3F vLckdErr;
$621775189DBE97248B7FB782F8F10678 vTypErr;
$4EF8D7CF48B7DFD5F16B44C05CF9D7D7 vType;
$D099BBBF644965626627A4C08DED2C2A validDateFields;
$F41C837101AFC9B0316B257F2D9D4B05 validInstancesExist;
$42FB63263B63A280A710224707F66ACA variableCompression;
$793885400D2D98BEC625E2284EE63E4C variationFontTableTag;
$DCAFB040F37F6DF2023604683B010173 variationPSOperatorStreamAction;
$DCAFB040F37F6DF2023604683B010173 variationQueryStreamAction;
$CF27797617E2017D26856567A7A44DE5 vendorIDLength;
$62E8311DB2A8435BC0C58DA72A78E09B vendorUnique;
$2AB5D6A772B8172B4B991C3F25B47EF1 verAfrikaans;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verAlternateGr;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verArabia;
$9B86BFCED706955C57B1F8CD5BDFA33F verArabic;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verArmenia;
$B3764518ECA98B78506B4DB11E9A651E verArmenian;
$9B86BFCED706955C57B1F8CD5BDFA33F verAustralia;
$B3764518ECA98B78506B4DB11E9A651E verAustria;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verAustriaGerman;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verBelarus;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verBelgiumLux;
$96F31A077DC0385199A543206D7CC662 verBelgiumLuxPoint;
$A41353A2A960F63EFC5E37A8D044C9EE verBengali;
$B3764518ECA98B78506B4DB11E9A651E verBhutan;
$B3764518ECA98B78506B4DB11E9A651E verBrazil;
$B3764518ECA98B78506B4DB11E9A651E verBreton;
$9B86BFCED706955C57B1F8CD5BDFA33F verBritain;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verBrittany;
$B3764518ECA98B78506B4DB11E9A651E verBulgaria;
$A41353A2A960F63EFC5E37A8D044C9EE verByeloRussian;
$96F31A077DC0385199A543206D7CC662 verCanadaComma;
$96F31A077DC0385199A543206D7CC662 verCanadaPoint;
$B3764518ECA98B78506B4DB11E9A651E verCatalonia;
$A41353A2A960F63EFC5E37A8D044C9EE verChina;
$B3764518ECA98B78506B4DB11E9A651E verCroatia;
$9B86BFCED706955C57B1F8CD5BDFA33F verCyprus;
$A41353A2A960F63EFC5E37A8D044C9EE verCzech;
$9B86BFCED706955C57B1F8CD5BDFA33F verDenmark;
$B3764518ECA98B78506B4DB11E9A651E verEngCanada;
$F5733A20729282EBCF3804504A9796F3 verErr;
$2AB5D6A772B8172B4B991C3F25B47EF1 verEsperanto;
$A41353A2A960F63EFC5E37A8D044C9EE verEstonia;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verFaeroeIsl;
$A41353A2A960F63EFC5E37A8D044C9EE verFarEastGeneric;
$A41353A2A960F63EFC5E37A8D044C9EE verFaroeIsl;
$9B86BFCED706955C57B1F8CD5BDFA33F verFinland;
$9B86BFCED706955C57B1F8CD5BDFA33F verFlemish;
$2AB5D6A772B8172B4B991C3F25B47EF1 verFrBelgium;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verFrBelgiumLux;
$9B86BFCED706955C57B1F8CD5BDFA33F verFrCanada;
$9B86BFCED706955C57B1F8CD5BDFA33F verFrSwiss;
$9B86BFCED706955C57B1F8CD5BDFA33F verFrance;
$B3764518ECA98B78506B4DB11E9A651E verFrenchUniversal;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verGenericFE;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verGeorgia;
$B3764518ECA98B78506B4DB11E9A651E verGeorgian;
$B3764518ECA98B78506B4DB11E9A651E verGermanReformed;
$9B86BFCED706955C57B1F8CD5BDFA33F verGermany;
$9B86BFCED706955C57B1F8CD5BDFA33F verGrSwiss;
$9B86BFCED706955C57B1F8CD5BDFA33F verGreece;
$B3764518ECA98B78506B4DB11E9A651E verGreeceAlt;
$A41353A2A960F63EFC5E37A8D044C9EE verGreecePoly;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verGreekAncient;
$2AB5D6A772B8172B4B991C3F25B47EF1 verGreenland;
$B3764518ECA98B78506B4DB11E9A651E verGujarati;
$A41353A2A960F63EFC5E37A8D044C9EE verHungary;
$9B86BFCED706955C57B1F8CD5BDFA33F verIceland;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verIndia;
$A41353A2A960F63EFC5E37A8D044C9EE verIndiaHindi;
$B3764518ECA98B78506B4DB11E9A651E verIndiaUrdu;
$A41353A2A960F63EFC5E37A8D044C9EE verInternational;
$A41353A2A960F63EFC5E37A8D044C9EE verIran;
$A41353A2A960F63EFC5E37A8D044C9EE verIreland;
$2AB5D6A772B8172B4B991C3F25B47EF1 verIrelandEnglish;
$B3764518ECA98B78506B4DB11E9A651E verIrishGaelicScript;
$9B86BFCED706955C57B1F8CD5BDFA33F verIsrael;
$A41353A2A960F63EFC5E37A8D044C9EE verItalianSwiss;
$9B86BFCED706955C57B1F8CD5BDFA33F verItaly;
$9B86BFCED706955C57B1F8CD5BDFA33F verJapan;
$A41353A2A960F63EFC5E37A8D044C9EE verKorea;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verLapland;
$A41353A2A960F63EFC5E37A8D044C9EE verLatvia;
$A41353A2A960F63EFC5E37A8D044C9EE verLithuania;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verMacedonia;
$B3764518ECA98B78506B4DB11E9A651E verMacedonian;
$A41353A2A960F63EFC5E37A8D044C9EE verMagyar;
$9B86BFCED706955C57B1F8CD5BDFA33F verMalta;
$B3764518ECA98B78506B4DB11E9A651E verManxGaelic;
$2AB5D6A772B8172B4B991C3F25B47EF1 verMarathi;
$B3764518ECA98B78506B4DB11E9A651E verMultilingual;
$2AB5D6A772B8172B4B991C3F25B47EF1 verNepal;
$9B86BFCED706955C57B1F8CD5BDFA33F verNetherlands;
$96F31A077DC0385199A543206D7CC662 verNetherlandsComma;
$9B86BFCED706955C57B1F8CD5BDFA33F verNorway;
$B3764518ECA98B78506B4DB11E9A651E verNunavut;
$2AB5D6A772B8172B4B991C3F25B47EF1 verNynorsk;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verPakistan;
$A41353A2A960F63EFC5E37A8D044C9EE verPakistanUrdu;
$A41353A2A960F63EFC5E37A8D044C9EE verPoland;
$9B86BFCED706955C57B1F8CD5BDFA33F verPortugal;
$B3764518ECA98B78506B4DB11E9A651E verPunjabi;
$A41353A2A960F63EFC5E37A8D044C9EE verRomania;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verRumania;
$A41353A2A960F63EFC5E37A8D044C9EE verRussia;
$A41353A2A960F63EFC5E37A8D044C9EE verSami;
$B3764518ECA98B78506B4DB11E9A651E verScottishGaelic;
$A41353A2A960F63EFC5E37A8D044C9EE verScriptGeneric;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verSerbia;
$B3764518ECA98B78506B4DB11E9A651E verSerbian;
$2AB5D6A772B8172B4B991C3F25B47EF1 verSingapore;
$A41353A2A960F63EFC5E37A8D044C9EE verSlovak;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verSlovenia;
$B3764518ECA98B78506B4DB11E9A651E verSlovenian;
$B3764518ECA98B78506B4DB11E9A651E verSpLatinAmerica;
$9B86BFCED706955C57B1F8CD5BDFA33F verSpain;
$9B86BFCED706955C57B1F8CD5BDFA33F verSweden;
$A41353A2A960F63EFC5E37A8D044C9EE verTaiwan;
$A41353A2A960F63EFC5E37A8D044C9EE verThailand;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verTibet;
$2AB5D6A772B8172B4B991C3F25B47EF1 verTibetan;
$B3764518ECA98B78506B4DB11E9A651E verTonga;
$9B86BFCED706955C57B1F8CD5BDFA33F verTurkey;
$A41353A2A960F63EFC5E37A8D044C9EE verTurkishModified;
$9B86BFCED706955C57B1F8CD5BDFA33F verUS;
$B3764518ECA98B78506B4DB11E9A651E verUkraine;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verUkrania;
$2AB5D6A772B8172B4B991C3F25B47EF1 verUzbek;
$B3764518ECA98B78506B4DB11E9A651E verVietnam;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verWales;
$B3764518ECA98B78506B4DB11E9A651E verWelsh;
$9B86BFCED706955C57B1F8CD5BDFA33F verYugoCroatian;
$291DE409B98F2FAEF8DBF3929DA1B9A7 verYugoslavia;
$0A460A6E82C5C9197C39E6203E2D9451 versionCmd;
$96F31A077DC0385199A543206D7CC662 vervariantDenmark;
$96F31A077DC0385199A543206D7CC662 vervariantNorway;
$96F31A077DC0385199A543206D7CC662 vervariantPortugal;
$A8C97E4EDD9E089EB77DFE179D2C9A4B videoOutputInUseErr;
$44B901B8F8719DB19D250ACE457E59CB vmAddressNotInFileViewErr;
$0B2DC8BE1C9539CE1A7CE8EA5682C703 vmBadDriver;
$44B901B8F8719DB19D250ACE457E59CB vmBusyBackingFileErr;
$44B901B8F8719DB19D250ACE457E59CB vmFileViewAccessErr;
$44B901B8F8719DB19D250ACE457E59CB vmInvalidBackingFileIDErr;
$44B901B8F8719DB19D250ACE457E59CB vmInvalidFileViewIDErr;
$44B901B8F8719DB19D250ACE457E59CB vmInvalidOwningProcessErr;
$0B2DC8BE1C9539CE1A7CE8EA5682C703 vmKernelMMUInitErr;
$44B901B8F8719DB19D250ACE457E59CB vmMappingPrivilegesErr;
$0B2DC8BE1C9539CE1A7CE8EA5682C703 vmMemLckdErr;
$0B2DC8BE1C9539CE1A7CE8EA5682C703 vmMorePhysicalThanVirtualErr;
$44B901B8F8719DB19D250ACE457E59CB vmNoMoreBackingFilesErr;
$44B901B8F8719DB19D250ACE457E59CB vmNoMoreFileViewsErr;
$0B2DC8BE1C9539CE1A7CE8EA5682C703 vmNoVectorErr;
$0B2DC8BE1C9539CE1A7CE8EA5682C703 vmOffErr;
$84C242BEA25FE377EB24CF870780C809 voiceNotFound;
$39BB08BE97442728A4F53B80076F6C3F volGoneErr;
$74A4308FB02A5AACEA954F833DFB61C7 volMountChangedBit;
$74A4308FB02A5AACEA954F833DFB61C7 volMountChangedMask;
$74A4308FB02A5AACEA954F833DFB61C7 volMountExtendedFlagsBit;
$74A4308FB02A5AACEA954F833DFB61C7 volMountExtendedFlagsMask;
$74A4308FB02A5AACEA954F833DFB61C7 volMountFSReservedMask;
$74A4308FB02A5AACEA954F833DFB61C7 volMountInteractBit;
$74A4308FB02A5AACEA954F833DFB61C7 volMountInteractMask;
$74A4308FB02A5AACEA954F833DFB61C7 volMountNoLoginMsgFlagBit;
$74A4308FB02A5AACEA954F833DFB61C7 volMountNoLoginMsgFlagMask;
$74A4308FB02A5AACEA954F833DFB61C7 volMountSysReservedMask;
$39BB08BE97442728A4F53B80076F6C3F volOffLinErr;
$39BB08BE97442728A4F53B80076F6C3F volOnLinErr;
$4AA72FB96FE40BDE945A00A3EE3D602E volVMBusyErr;
$0A460A6E82C5C9197C39E6203E2D9451 volumeCmd;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wCalcRgns;
$473AF7B219905D5708353EC92305B31E wContentColor;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wDispose;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wDraw;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wDrawGIcon;
$473AF7B219905D5708353EC92305B31E wFrameColor;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wGrow;
$473AF7B219905D5708353EC92305B31E wHiliteColor;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wHit;
$E4350CEC37EC03F5D4C247EC41B75C77 wInCollapseBox;
$E4350CEC37EC03F5D4C247EC41B75C77 wInContent;
$E4350CEC37EC03F5D4C247EC41B75C77 wInDrag;
$E4350CEC37EC03F5D4C247EC41B75C77 wInGoAway;
$E4350CEC37EC03F5D4C247EC41B75C77 wInGrow;
$E4350CEC37EC03F5D4C247EC41B75C77 wInProxyIcon;
$E4350CEC37EC03F5D4C247EC41B75C77 wInStructure;
$E4350CEC37EC03F5D4C247EC41B75C77 wInToolbarButton;
$E4350CEC37EC03F5D4C247EC41B75C77 wInZoomIn;
$E4350CEC37EC03F5D4C247EC41B75C77 wInZoomOut;
$E0C7275C7EB7AFC308A8F1314C4ADA7E wNew;
$E4350CEC37EC03F5D4C247EC41B75C77 wNoHit;
$D85BABC49EB0EF8F3F068D2D5D39C4F5 wPrErr;
$473AF7B219905D5708353EC92305B31E wTextColor;
$473AF7B219905D5708353EC92305B31E wTitleBarColor;
$D497865AB20A3AD87EEE5277CBD67E69 wackBadFileErr;
$D497865AB20A3AD87EEE5277CBD67E69 wackBadMetaDataErr;
$D497865AB20A3AD87EEE5277CBD67E69 wackForkNotFoundErr;
$0A460A6E82C5C9197C39E6203E2D9451 waitCmd;
$E47A24D70C087CD7CD8B3D81D230CB29 watchCursor;
$AC49BCB98774BA196F1D518C13C65C80 weekOfYearField;
$69A3BF2E803A4172C51973E11B183607 weekOfYearMask;
$2AFA9741D4492F551C527940D8BE691A wfFileNotFound;
$2EE6D656A6356132BC5631EBF7AA5929 whiteColor;
$D525064D2195CBAE0DC0459A440BA9D5 windowAppModalStateAlreadyExistsErr;
$D525064D2195CBAE0DC0459A440BA9D5 windowAttributeImmutableErr;
$D525064D2195CBAE0DC0459A440BA9D5 windowAttributesConflictErr;
$D525064D2195CBAE0DC0459A440BA9D5 windowGroupInvalidErr;
$D525064D2195CBAE0DC0459A440BA9D5 windowManagerInternalErr;
$D525064D2195CBAE0DC0459A440BA9D5 windowNoAppModalStateErr;
$D525064D2195CBAE0DC0459A440BA9D5 windowWrongStateErr;
$39BB08BE97442728A4F53B80076F6C3F wrPermErr;
$F5733A20729282EBCF3804504A9796F3 wrUnderrun;
$39BB08BE97442728A4F53B80076F6C3F wrgVolTypErr;
$621775189DBE97248B7FB782F8F10678 writErr;
$1AFD37A731F3A62F7A5D2B51D317DBED writeReference;
$44F391F6F759E67D2435F1C3F9758D28 writingPastEnd;
$6A3D362AE979A847958F56E617827AD1 wrongApplicationPlatform;
$774312103BEE5735EC77C58B53E981B1 ydm;
$AC49BCB98774BA196F1D518C13C65C80 yearField;
$69A3BF2E803A4172C51973E11B183607 yearMask;
$229E80E760A3609929A8A4D193AE679E yellowBit;
$2EE6D656A6356132BC5631EBF7AA5929 yellowColor;
$774312103BEE5735EC77C58B53E981B1 ymd;
$4FBD46A7782F6749F1F35ACCB96A0A2C zeroCycle;
$54D8896E57898845ADF65F1EA92174A9 zoomDocProc;
$54D8896E57898845ADF65F1EA92174A9 zoomNoGrow;
