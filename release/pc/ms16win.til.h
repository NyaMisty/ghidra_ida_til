#define GHIDRA
#ifndef INCLUDE_GUARD_ms16win_til
#define INCLUDE_GUARD_ms16win_til
#include "../__idatilcommon.h"



struct mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49___77546E6DA24DBEE74453C7AE7BAE240D;
struct mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49___B7A2B1CE967584EBB3840978181CF21D;
struct in_addr___C13EC994467D6E67044F092615EC7EA9___01C175C1F0716DCA00314EDD79DBC0A0;
struct in_addr___C13EC994467D6E67044F092615EC7EA9___4DE764E669F663DACA3CBFDE73714CB5;
union tagSTGMEDIUM___62EF16ADBE1A605A5A555D41C9B0FE35;
union tagTYPEDESC___B4FA4469D1F86C0E7D898206ED7D9FDD;
union mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49;
union tagVARDESC___F04833D7152C1F618CB19FA4ACB5074C;
union tagVARIANT___83860D232BE831FC4DB97AAFCFF274E0;
union in_addr___C13EC994467D6E67044F092615EC7EA9;
struct _096A9CEC9D0640E3594D0A52C8C05E40;
struct _42792D5BBA08C54B20EEEC50F78E7D08;
struct _549C1D5CD1C453772D3DFDF07CAC3EA1;
struct _925387C1A9AA03DD03B17550DEA320D0;
struct _9811B5662EE51361168BFF08BB491D75;
struct _C7C46F6CCBD2CAD1FCFEC4764C87E3D1;
struct _CB9F4276D477D4EDC30066925B58EE0F;
struct IOleInPlaceActiveObjectVtbl;
struct tagMCI_ANIM_UPDATE_PARMS;
struct tagMCI_ANIM_WINDOW_PARMS;
struct tagMCI_OVLY_WINDOW_PARMS;
struct tagMCI_WAVE_DELETE_PARMS;
struct IExternalConnectionVtbl;
struct IOleInPlaceActiveObject;
struct IOleInPlaceUIWindowVtbl;
struct IOleUILinkContainerVtbl;
struct IRunningObjectTableVtbl;
struct tagMCI_GETDEVCAPS_PARMS;
struct tagMCI_ANIM_OPEN_PARMS;
struct tagMCI_ANIM_PLAY_PARMS;
struct tagMCI_ANIM_RECT_PARMS;
struct tagMCI_ANIM_STEP_PARMS;
struct tagMCI_OVLY_LOAD_PARMS;
struct tagMCI_OVLY_OPEN_PARMS;
struct tagMCI_OVLY_RECT_PARMS;
struct tagMCI_OVLY_SAVE_PARMS;
struct tagMCI_VD_ESCAPE_PARMS;
struct tagMCI_WAVE_OPEN_PARMS;
struct IDataAdviseHolderVtbl;
struct IOleInPlaceObjectVtbl;
struct IOleItemContainerVtbl;
struct IParseDisplayNameVtbl;
struct tagCLIENTCREATESTRUCT;
struct tagHARDWAREHOOKSTRUCT;
struct tagMCI_WAVE_SET_PARMS;
struct tagOleMenuGroupWidths;
struct IOleAdviseHolderVtbl;
struct IOleCacheControlVtbl;
struct IOleInPlaceFrameVtbl;
struct tagCBTACTIVATESTRUCT;
struct tagCOMPAREITEMSTRUCT;
struct tagMCI_GENERIC_PARMS;
struct tagMCI_SEQ_SET_PARMS;
struct tagMCI_SYSINFO_PARMS;
struct tagMCI_VD_PLAY_PARMS;
struct tagMCI_VD_STEP_PARMS;
struct tagMEASUREITEMSTRUCT;
struct tagNCCALCSIZE_PARAMS;
struct tagOLEUIINSERTOBJECT;
struct tagOLEUIPASTESPECIAL;
struct tagOUTLINETEXTMETRIC;
struct tagRASTERIZER_STATUS;
struct ICreateTypeInfoVtbl;
struct IExternalConnection;
struct IOleInPlaceSiteVtbl;
struct IOleInPlaceUIWindow;
struct IOleUILinkContainer;
struct IPersistStorageVtbl;
struct IRunnableObjectVtbl;
struct IRunningObjectTable;
struct IStdMarshalInfoVtbl;
struct tagBITMAPCOREHEADER;
struct tagBITMAPFILEHEADER;
struct tagBITMAPINFOHEADER;
struct tagDELETEITEMSTRUCT;
struct tagDRIVERINFOSTRUCT;
struct tagFMS_GETDRIVEINFO;
struct tagMCI_RECORD_PARMS;
struct tagMCI_STATUS_PARMS;
struct tagNFYLOGPARAMERROR;
struct tagOBJECTDESCRIPTOR;
struct tagTIMESTAMP_STRUCT;
struct tagVS_FIXEDFILEINFO;
struct ICreateTypeLibVtbl;
struct IEnumFORMATETCVtbl;
struct IMessageFilterVtbl;
struct IOleClientSiteVtbl;
struct IPersistStreamVtbl;
struct tagMCI_BREAK_PARMS;
struct tagMCI_SOUND_PARMS;
struct tagMDICREATESTRUCT;
struct tagMOUSEHOOKSTRUCT;
struct tagOLEUICHANGEICON;
struct tagOLEUIPASTEENTRY;
struct tagSTACKTRACEENTRY;
struct tagTTPOLYGONHEADER;
struct tagWINDOWPLACEMENT;
struct IClassFactoryVtbl;
struct IDataAdviseHolder;
struct IEnumSTATDATAVtbl;
struct IOleContainerVtbl;
struct IOleInPlaceObject;
struct IOleItemContainer;
struct IParseDisplayName;
struct pcmwaveformat_tag;
struct tagBANDINFOSTRUCT;
struct tagBITMAPCOREINFO;
struct tagDRAWITEMSTRUCT;
struct tagDVTARGETDEVICE;
struct tagFMS_GETFILESEL;
struct tagMCI_INFO_PARMS;
struct tagMCI_LOAD_PARMS;
struct tagMCI_OPEN_PARMS;
struct tagMCI_PLAY_PARMS;
struct tagMCI_SAVE_PARMS;
struct tagMCI_SEEK_PARMS;
struct tagOLEUIEDITLINKS;
struct tagSAFEARRAYBOUND;
struct IAdviseSink2Vtbl;
struct IEnumMonikerVtbl;
struct IEnumOLEVERBVtbl;
struct IEnumSTATSTGVtbl;
struct IEnumUnknownVtbl;
struct IEnumVARIANTVtbl;
struct IOleAdviseHolder;
struct IOleCacheControl;
struct IOleInPlaceFrame;
struct IPersistFileVtbl;
struct IRootStorageVtbl;
struct IViewObject2Vtbl;
struct tagCBT_CREATEWND;
struct tagDEBUGHOOKINFO;
struct tagDRVCONFIGINFO;
struct tagINTERFACEDATA;
struct tagINTERFACEIMPL;
struct tagINTERFACEINFO;
struct tagMCI_SET_PARMS;
struct tagMONCONVSTRUCT;
struct tagMONLINKSTRUCT;
struct tagNEWTEXTMETRIC;
struct tagPENDATAHEADER;
struct IAdviseSinkVtbl;
struct ICreateTypeInfo;
struct IDataObjectVtbl;
struct IDropSourceVtbl;
struct IDropTargetVtbl;
struct IEnumStringVtbl;
struct IOleInPlaceSite;
struct IPersistStorage;
struct IRunnableObject;
struct IStdMarshalInfo;
struct IViewObjectVtbl;
struct _ULARGE_INTEGER;
struct midioutcaps_tag;
struct tagCREATESTRUCT;
struct tagGLYPHMETRICS;
struct tagMETAFILEPICT;
struct tagMONERRSTRUCT;
struct tagMONHSZSTRUCT;
struct tagMONMSGSTRUCT;
struct tagMULTIKEYHELP;
struct tagOLEUICONVERT;
struct tagPALETTEENTRY;
struct tagSCREENPARAMS;
struct tagWINDEBUGINFO;
struct waveoutcaps_tag;
struct ICreateTypeLib;
struct IEnumFORMATETC;
struct ILockBytesVtbl;
struct IMessageFilter;
struct IOleCache2Vtbl;
struct IOleClientSite;
struct IOleObjectVtbl;
struct IOleWindowVtbl;
struct IPersistStream;
struct _LARGE_INTEGER;
struct _OLESTREAMVTBL;
struct midiincaps_tag;
struct tagCHOOSECOLOR;
struct tagCONVCONTEXT;
struct tagDATE_STRUCT;
struct tagENUMLOGFONT;
struct tagFINDREPLACE;
struct tagGLOBALENTRY;
struct tagHANDLETABLE;
struct tagKERNINGPAIR;
struct tagMODULEENTRY;
struct tagMONCBSTRUCT;
struct tagNFYLOGERROR;
struct tagNFYSTARTDLL;
struct tagPAINTSTRUCT;
struct tagSYSHEAPINFO;
struct tagTIME_STRUCT;
struct tagTTPOLYCURVE;
struct waveformat_tag;
struct waveincaps_tag;
struct IClassFactory;
struct IDispatchVtbl;
struct IEnumSTATDATA;
struct IOleCacheVtbl;
struct IOleContainer;
struct ITypeCompVtbl;
struct ITypeInfoVtbl;
struct tagBITMAPINFO;
struct tagCALBSTRUCT;
struct tagCHOOSEFONT;
struct tagCLASSENTRY;
struct tagDISPPARAMS;
struct tagGLOBALINFO;
struct tagLOCALENTRY;
struct tagLOGPALETTE;
struct tagMEMMANINFO;
struct tagMETAHEADER;
struct tagMETARECORD;
struct tagMETHODDATA;
struct tagMINMAXINFO;
struct tagNEWCPLINFO;
struct tagNFYLOADSEG;
struct tagOEMPENINFO;
struct tagSTROKEINFO;
struct tagTEXTMETRIC;
struct IAdviseSink2;
struct IBindCtxVtbl;
struct IEnumMoniker;
struct IEnumOLEVERB;
struct IEnumSTATSTG;
struct IEnumUnknown;
struct IEnumVARIANT;
struct IMarshalVtbl;
struct IMonikerVtbl;
struct IOleLinkVtbl;
struct IPersistFile;
struct IPersistVtbl;
struct IRootStorage;
struct IStorageVtbl;
struct ITypeLibVtbl;
struct IUnknownVtbl;
struct IViewObject2;
struct tagARRAYDESC;
struct tagBIND_OPTS;
struct tagBOXLAYOUT;
struct tagDDEADVISE;
struct tagEXCEPINFO;
struct tagFORMATETC;
struct tagLOCALINFO;
struct tagOLEUIBUSY;
struct tagPARAMDATA;
struct tagPENPACKET;
struct tagRGBTRIPLE;
struct tagSAFEARRAY;
struct tagSTGMEDIUM;
struct tagTASKENTRY;
struct tagTIMERINFO;
struct tagWINDOWPOS;
struct timecaps_tag;
struct IAdviseSink;
struct IDataObject;
struct IDropSource;
struct IDropTarget;
struct IEnumString;
struct IMallocVtbl;
struct IStreamVtbl;
struct IViewObject;
struct auxcaps_tag;
struct joycaps_tag;
struct joyinfo_tag;
struct midihdr_tag;
struct sockaddr_in;
struct tagCONVINFO;
struct tagCTLSTYLE;
struct tagDEVNAMES;
struct tagELEMDESC;
struct tagEVENTMSG;
struct tagFILETIME;
struct tagFMS_LOAD;
struct tagFUNCDESC;
struct tagLOGBRUSH;
struct tagOFSTRUCT;
struct tagRCRESULT;
struct tagSTATDATA;
struct tagTLIBATTR;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagWNDCLASS;
struct wavehdr_tag;
struct ILockBytes;
struct IOleCache2;
struct IOleObject;
struct IOleWindow;
struct _OLESTREAM;
struct mmtime_tag;
union tagBINDPTR;
struct tagCOMSTAT;
struct tagCPLINFO;
struct tagCTLINFO;
struct tagCTLTYPE;
struct tagDDEDATA;
struct tagDDEPOKE;
struct tagDEVMODE;
struct tagHSZPAIR;
struct tagIDLDESC;
struct tagLOGFONT;
struct tagOLEVERB;
struct tagPENINFO;
struct tagPOINTFX;
struct tagRECTOFS;
struct tagRGBQUAD;
struct tagSEGINFO;
struct tagSKBINFO;
struct tagSTATSTG;
struct tagVARDESC;
struct tagVARIANT;
struct IDispatch;
struct IOleCache;
struct ITypeComp;
struct ITypeInfo;
struct _MMCKINFO;
struct _MMIOINFO;
struct sockproto;
struct tagBITMAP;
struct tagDDEACK;
struct tagLOGPEN;
struct tagNFYRIP;
struct tagPANOSE;
struct tagPOINTL;
struct IBindCtx;
struct IMarshal;
struct IMoniker;
struct IOleLink;
struct IPersist;
struct IStorage;
struct ITypeLib;
struct IUnknown;
struct protoent;
struct sockaddr;
struct tagDDELN;
struct tagDDEUP;
struct tagFIXED;
struct tagGUIDE;
struct tagPOINT;
struct tagRECTL;
struct tagSIZEL;
struct IMalloc;
struct IStream;
struct WSAData;
struct hostent;
struct in_addr;
struct ip_mreq;
struct servent;
struct tagMAT2;
struct tagOIFI;
struct tagRECT;
struct tagSIZE;
struct timeval;
struct fd_set;
struct linger;
struct netent;
struct tagABC;
struct tagDCB;
struct tagMSG;
struct tagOFN;
struct tagSYC;
struct tagSYE;
struct tagSYG;
struct tagCY;
struct tagPD;
struct tagRC;
struct GUID;

enum MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID {OLEUI_IOERR_SRCDATAOBJECTINVALID = 116,OLEUI_IOERR_ARRPASTEENTRIESINVALID = 117,OLEUI_IOERR_ARRLINKTYPESINVALID = 118,OLEUI_PSERR_CLIPBOARDCHANGED = 119,};
enum _320585250961ABE9F4D068EEEC4E2CC6 {BIND_MAYBOTHERUSER = 0x1,BIND_JUSTTESTEXISTENCE = 0x2,};
struct _925387C1A9AA03DD03B17550DEA320D0 {int wStructSize;int x;int y;int dx;int dy;int wMax;char rgchMember[2];};
enum MACRO_DRV_SetPenDriverEntryPoints {DRV_SetPenDriverEntryPoints = 2049,DRV_RemovePenDriverEntryPoints = 2050,DRV_SetPenSamplingRate = 2051,DRV_SetPenSamplingDist = 2052,DRV_GetName = 2053,DRV_GetVersion = 2054,DRV_GetPenInfo = 2055,DRV_GetCalibration = 2059,DRV_SetCalibration = 2060,};
enum MACRO_IDS_CVRESULTCONVERTLINK {IDS_CVRESULTCONVERTLINK = 32440,IDS_CVRESULTCONVERTTO = 32441,IDS_CVRESULTNOCHANGE = 32442,IDS_CVRESULTDISPLAYASICON = 32443,IDS_CVRESULTACTIVATEAS = 32444,IDS_CVRESULTACTIVATEDIFF = 32445,};
enum MACRO_ENABLERELATIVEWIDTHS {ENABLERELATIVEWIDTHS = 768,};
enum MACRO_IDS_BZRESULTTEXTBUSY {IDS_BZRESULTTEXTBUSY = 32447,IDS_BZRESULTTEXTNOTRESPONDING = 32448,IDS_LINK_AUTO = 32450,IDS_LINK_MANUAL = 32451,IDS_LINK_UNKNOWN = 32452,IDS_LINKS = 32453,IDS_FAILED = 32454,IDS_CHANGESOURCE = 32455,IDS_INVALIDSOURCE = 32456,IDS_ERR_GETLINKSOURCE = 32457,IDS_ERR_GETLINKUPDATEOPTIONS = 32458,IDS_ERR_ADDSTRING = 32459,IDS_CHANGEADDITIONALLINKS = 32460,IDS_CLOSE = 32461,};
enum MACRO_MK_E_CONNECTMANUALLY {MK_E_CONNECTMANUALLY = 480,MK_E_EXCEEDEDDEADLINE = 481,MK_E_NEEDGENERIC = 482,MK_E_UNAVAILABLE = 483,MK_E_SYNTAX = 484,MK_E_NOOBJECT = 485,MK_E_INVALIDEXTENSION = 486,MK_E_INTERMEDIATEINTERFACENOTSUPPORTED = 487,MK_E_NOTBINDABLE = 488,MK_E_NOTBOUND = 489,MK_E_CANTOPENFILE = 490,MK_E_MUSTBOTHERUSER = 491,MK_E_NOINVERSE = 492,MK_E_NOSTORAGE = 493,MK_E_NOPREFIX = 494,MK_S_REDUCED_TO_SELF = 482,MK_S_ME = 484,MK_S_HIM = 485,MK_S_US = 486,MK_S_MONIKERALREADYREGISTERED = 487,};
enum MACRO_WM_WINDOWPOSCHANGING {WM_WINDOWPOSCHANGING = 0x46,WM_WINDOWPOSCHANGED = 0x47,WM_MOVE = 0x3,WM_SIZE = 0x5,};
enum MACRO_DEFAULT_HATCHBORDER {DEFAULT_HATCHBORDER_WIDTH = 4,};
enum MACRO_IDS_CINOICONSINFILE {IDS_CINOICONSINFILE = 32430,IDS_CIINVALIDFILE = 32431,IDS_CIFILEACCESS = 32432,IDS_CIFILESHARE = 32433,IDS_CIFILEOPENFAIL = 32434,};
typedef IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;
enum MACRO_DLG_CHANGEPASSWORD {DLG_CHANGEPASSWORD = 2000,DLG_ENTERPASSWORD = 2001,DLG_INVALIDPASSWORD = 2002,DLG_SCRNSAVECONFIGURE = 2003,};
enum MACRO_GETSETPAPERMETRICS {GETSETPAPERMETRICS = 35,};
enum MACRO_GETVECTORBRUSHSIZE {GETVECTORBRUSHSIZE = 27,};
enum MACRO_MMIO_DEFAULTBUFFER {MMIO_DEFAULTBUFFER = 8192,};
enum MACRO_WAVE_INVALIDFORMAT {WAVE_INVALIDFORMAT = 0x0,WAVE_FORMAT_1M08 = 0x1,WAVE_FORMAT_1S08 = 0x2,WAVE_FORMAT_1M16 = 0x4,WAVE_FORMAT_1S16 = 0x8,WAVE_FORMAT_2M08 = 0x10,WAVE_FORMAT_2S08 = 0x20,WAVE_FORMAT_2M16 = 0x40,WAVE_FORMAT_2S16 = 0x80,WAVE_FORMAT_4M08 = 0x100,WAVE_FORMAT_4S08 = 0x200,WAVE_FORMAT_4M16 = 0x400,WAVE_FORMAT_4S16 = 0x800,WAVE_FORMAT_PCM = 0x1,};
enum MACRO_WM_QUERYENDSESSION {WM_QUERYENDSESSION = 0x11,WM_ENDSESSION = 0x16,WM_QUIT = 0x12,WM_SYSTEMERROR = 0x17,};
enum MACRO_WM_QUERYNEWPALETTE {WM_QUERYNEWPALETTE = 0x30F,WM_PALETTEISCHANGING = 0x310,WM_PALETTECHANGED = 0x311,};
enum MACRO_WSAEPROTONOSUPPORT {WSAEPROTONOSUPPORT = 10043,};
enum MACRO_WSAESOCKTNOSUPPORT {WSAESOCKTNOSUPPORT = 10044,};
enum MACRO_WSAVERNOTSUPPORTED {WSAVERNOTSUPPORTED = 10092,};
struct IOleInPlaceActiveObject {struct IOleInPlaceActiveObjectVtbl *lpVtbl;};
enum MACRO_CF_SHOWHELPBUTTON {CF_SHOWHELPBUTTON = 0x1,CF_SETCONVERTDEFAULT = 0x2,CF_SETACTIVATEDEFAULT = 0x4,CF_SELECTCONVERTTO = 0x8,CF_SELECTACTIVATEAS = 0x10,CF_DISABLEDISPLAYASICON = 0x20,CF_DISABLEACTIVATEAS = 0x40,};
enum MACRO_ENABLEPAIRKERNING {ENABLEPAIRKERNING = 769,};
enum MACRO_GETPRINTINGOFFSET {GETPRINTINGOFFSET = 13,};
enum MACRO_GETSETPRINTORIENT {GETSETPRINTORIENT = 30,};
enum MACRO_GETTRACKKERNTABLE {GETTRACKKERNTABLE = 259,};
enum MACRO_IDS_OLE2UIUNKNOWN {IDS_OLE2UIUNKNOWN = 32300,IDS_OLE2UILINK = 32301,IDS_OLE2UIOBJECT = 32302,IDS_OLE2UIEDIT = 32303,IDS_OLE2UICONVERT = 32304,IDS_OLE2UIEDITLINKCMD_1VERB = 32305,IDS_OLE2UIEDITOBJECTCMD_1VERB = 32306,IDS_OLE2UIEDITLINKCMD_NVERB = 32307,IDS_OLE2UIEDITOBJECTCMD_NVERB = 32308,IDS_OLE2UIEDITNOOBJCMD = 32309,IDS_DEFICONLABEL = 32310,IDS_OLE2UIPASTELINKEDTYPE = 32311,IDS_FILTERS = 32320,IDS_ICONFILTERS = 32321,IDS_BROWSE = 32322,};
enum MACRO_OLESTDCANCELRETRY {OLESTDCANCELRETRY = 4294967295,};
enum MACRO_SELECTPAPERSOURCE {SELECTPAPERSOURCE = 18,};
enum MACRO_SW_SCROLLCHILDREN {SW_SCROLLCHILDREN = 0x1,SW_INVALIDATE = 0x2,SW_ERASE = 0x4,};
enum MACRO_WM_SYSCOLORCHANGE {WM_SYSCOLORCHANGE = 0x15,};
enum MACRO_WSANOTINITIALISED {WSANOTINITIALISED = 10093,};
enum MACRO_ENUMPAPERMETRICS {ENUMPAPERMETRICS = 34,};
enum MACRO_GETPAIRKERNTABLE {GETPAIRKERNTABLE = 258,};
enum MACRO_GETSCALINGFACTOR {GETSCALINGFACTOR = 14,};
enum MACRO_GETVECTORPENSIZE {GETVECTORPENSIZE = 26,};
enum MACRO_MARSHALINTERFACE {MARSHALINTERFACE_MIN = 40,};
enum MACRO_MAXGETHOSTSTRUCT {MAXGETHOSTSTRUCT = 1024,};
enum MACRO_MULTIFILEOPENORD {MULTIFILEOPENORD = 1537,};
enum MACRO_OLESTDRETRYDELAY {OLESTDRETRYDELAY = 5000,};
enum MACRO_SETALLJUSTVALUES {SETALLJUSTVALUES = 771,};
enum MACRO_SW_PARENTCLOSING {SW_PARENTCLOSING = 1,SW_OTHERMAXIMIZED = 2,SW_PARENTOPENING = 3,SW_OTHERRESTORED = 4,SW_OTHERZOOM = 2,SW_OTHERUNZOOM = 4,};
enum MACRO_WH_JOURNALRECORD {WH_JOURNALRECORD = 0,WH_JOURNALPLAYBACK = 1,};
enum MACRO_WM_CHILDACTIVATE {WM_CHILDACTIVATE = 0x22,};
enum MACRO_WM_DEVMODECHANGE {WM_DEVMODECHANGE = 0x1B,WM_TIMECHANGE = 0x1E,};
enum MACRO_WM_QUERYDRAGICON {WM_QUERYDRAGICON = 0x37,WM_DROPFILES = 0x233,};
enum MACRO_WM_SPOOLERSTATUS {WM_SPOOLERSTATUS = 0x2A,};
enum MACRO_WSAEADDRNOTAVAIL {WSAEADDRNOTAVAIL = 10049,};
typedef struct _096A9CEC9D0640E3594D0A52C8C05E40 MENUITEMTEMPLATEHEADER;
typedef struct tagOIFI *LPOLEINPLACEFRAMEINFO;
enum MACRO_COLOR_HUESCROLL {COLOR_HUESCROLL = 700,COLOR_SATSCROLL = 701,COLOR_LUMSCROLL = 702,COLOR_HUE = 703,COLOR_SAT = 704,COLOR_LUM = 705,COLOR_RED = 706,COLOR_GREEN = 707,COLOR_BLUE = 708,COLOR_CURRENT = 709,COLOR_RAINBOW = 710,COLOR_SAVE = 711,COLOR_ADD = 712,COLOR_SOLID = 713,COLOR_TUNE = 714,COLOR_SCHEMES = 715,COLOR_ELEMENT = 716,COLOR_SAMPLES = 717,COLOR_PALETTE = 718,COLOR_MIX = 719,COLOR_BOX1 = 720,COLOR_CUSTOM1 = 721,COLOR_HUEACCEL = 723,COLOR_SATACCEL = 724,COLOR_LUMACCEL = 725,COLOR_REDACCEL = 726,COLOR_GREENACCEL = 727,COLOR_BLUEACCEL = 728,};
enum MACRO_DRAWPATTERNRECT {DRAWPATTERNRECT = 25,};
enum MACRO_FLOODFILLBORDER {FLOODFILLBORDER = 0,FLOODFILLSURFACE = 1,};
enum MACRO_GETPHYSPAGESIZE {GETPHYSPAGESIZE = 12,};
enum MACRO_GETSETPAPERBINS {GETSETPAPERBINS = 29,};
enum MACRO_HE_GETBOXLAYOUT {HE_GETBOXLAYOUT = 20,HE_SETBOXLAYOUT = 21,};
enum MACRO_IDS_IORESULTNEW {IDS_IORESULTNEW = 32400,IDS_IORESULTNEWICON = 32401,IDS_IORESULTFROMFILE1 = 32402,IDS_IORESULTFROMFILE2 = 32403,IDS_IORESULTFROMFILEICON2 = 32404,IDS_IORESULTLINKFILE1 = 32405,IDS_IORESULTLINKFILE2 = 32406,IDS_IORESULTLINKFILEICON1 = 32407,IDS_IORESULTLINKFILEICON2 = 32408,};
enum MACRO_IDS_PSPASTEDATA {IDS_PSPASTEDATA = 32410,IDS_PSPASTEOBJECT = 32411,IDS_PSPASTEOBJECTASICON = 32412,IDS_PSPASTELINKDATA = 32413,IDS_PSPASTELINKOBJECT = 32414,IDS_PSPASTELINKOBJECTASICON = 32415,IDS_PSNONOLE = 32416,IDS_PSUNKNOWNTYPE = 32417,IDS_PSUNKNOWNSRC = 32418,IDS_PSUNKNOWNAPP = 32419,};
enum MACRO_LF_FULLFACESIZE {LF_FULLFACESIZE = 64,};
enum MACRO_MAXDICTIONARIES {MAXDICTIONARIES = 16,cbRcLanguageMax = 44,};
enum MACRO_MAXOEMDATAWORDS {MAXOEMDATAWORDS = 6,};
enum MACRO_OLEUI_CCHKEYMAX {OLEUI_CCHKEYMAX = 256,OLEUI_CCHVERBMAX = 32,OLEUI_OBJECTMENUMAX = 256,OLEUI_CCHPATHMAX = 256,OLEUI_CCHFILEMAX = 13,OLEUI_CCHLABELMAX = 40,OLEUI_CCHCLSIDSTRING = 39,};
enum MACRO_PS_MAXLINKTYPES {PS_MAXLINKTYPES = 8,};
enum MACRO_TITLEBARNAMELEN {TITLEBARNAMELEN = 40,};
enum MACRO_WM_WININICHANGE {WM_WININICHANGE = 0x1A,};
enum MACRO_WSAEAFNOSUPPORT {WSAEAFNOSUPPORT = 10047,};
enum MACRO_WSAECONNABORTED {WSAECONNABORTED = 10053,};
enum MACRO_WSAECONNREFUSED {WSAECONNREFUSED = 10061,};
enum MACRO_WSAEDESTADDRREQ {WSAEDESTADDRREQ = 10039,};
enum MACRO_WSAEHOSTUNREACH {WSAEHOSTUNREACH = 10065,};
enum MACRO_WSAENAMETOOLONG {WSAENAMETOOLONG = 10063,};
enum MACRO_WSAEPFNOSUPPORT {WSAEPFNOSUPPORT = 10046,};
enum MACRO_WSAETOOMANYREFS {WSAETOOMANYREFS = 10059,};
enum MACRO_cwRcReservedMax {cwRcReservedMax = 8,};
enum MACRO_idsNoHelpMemory {idsNoHelpMemory = 1008,};
typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;
typedef struct tagMCI_ANIM_WINDOW_PARMS MCI_ANIM_WINDOW_PARMS;
typedef struct tagMCI_OVLY_WINDOW_PARMS MCI_OVLY_WINDOW_PARMS;
typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;
struct tagOleMenuGroupWidths {__int32 width[6];};
typedef IExternalConnection *LPEXTERNALCONNECTION;
typedef IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;
typedef struct tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;
typedef IRunningObjectTable *LPRUNNINGOBJECTTABLE;
enum MACRO_CF_SCREENFONTS {CF_SCREENFONTS = 0x1,CF_PRINTERFONTS = 0x2,CF_BOTH = 0x3,CF_SHOWHELP = 0x4,CF_ENABLEHOOK = 0x8,CF_ENABLETEMPLATE = 0x10,CF_ENABLETEMPLATEHANDLE = 0x20,CF_INITTOLOGFONTSTRUCT = 0x40,CF_USESTYLE = 0x80,CF_EFFECTS = 0x100,CF_APPLY = 0x200,CF_ANSIONLY = 0x400,CF_NOVECTORFONTS = 0x800,CF_NOOEMFONTS = 0x800,CF_NOSIMULATIONS = 0x1000,CF_LIMITSIZE = 0x2000,CF_FIXEDPITCHONLY = 0x4000,CF_WYSIWYG = 0x8000,CF_FORCEFONTEXIST = 0x0,CF_SCALABLEONLY = 0x0,CF_TTONLY = 0x0,CF_NOFACESEL = 0x0,CF_NOSTYLESEL = 0x0,CF_NOSIZESEL = 0x0,};
enum MACRO_CWCSTORAGENAME {CWCSTORAGENAME = 32,};
enum MACRO_DLGWINDOWEXTRA {DLGWINDOWEXTRA = 30,};
enum MACRO_DM_SPECVERSION {DM_SPECVERSION = 0x30A,DM_ORIENTATION = 0x1,DM_PAPERSIZE = 0x2,DM_PAPERLENGTH = 0x4,DM_PAPERWIDTH = 0x8,DM_SCALE = 0x10,DM_COPIES = 0x100,DM_DEFAULTSOURCE = 0x200,DM_PRINTQUALITY = 0x400,DM_COLOR = 0x800,DM_DUPLEX = 0x1000,DM_YRESOLUTION = 0x2000,DM_TTOPTION = 0x4000,};
enum MACRO_FORMATDLGORD30 {FORMATDLGORD30 = 1544,};
enum MACRO_FORMATDLGORD31 {FORMATDLGORD31 = 1543,};
enum MACRO_GETEXTENTTABLE {GETEXTENTTABLE = 257,};
enum MACRO_GMEM_DISCARDED {GMEM_DISCARDED = 0x4000,GMEM_LOCKCOUNT = 0xFF,};
enum MACRO_LMEM_DISCARDED {LMEM_DISCARDED = 0x4000,LMEM_LOCKCOUNT = 0xFF,};
enum MACRO_NEWTRANSPARENT {NEWTRANSPARENT = 3,QUERYROPSUPPORT = 40,};
enum MACRO_PEN_NOINKWIDTH {PEN_NOINKWIDTH = 0,};
enum MACRO_PRNSETUPDLGORD {PRNSETUPDLGORD = 1539,};
enum MACRO_WM_NCMOUSEMOVE {WM_NCMOUSEMOVE = 0xA0,WM_NCLBUTTONDOWN = 0xA1,WM_NCLBUTTONUP = 0xA2,WM_NCLBUTTONDBLCLK = 0xA3,WM_NCRBUTTONDOWN = 0xA4,WM_NCRBUTTONUP = 0xA5,WM_NCRBUTTONDBLCLK = 0xA6,WM_NCMBUTTONDOWN = 0xA7,WM_NCMBUTTONUP = 0xA8,WM_NCMBUTTONDBLCLK = 0xA9,WM_MOUSEACTIVATE = 0x21,};
enum MACRO_WM_PENWINFIRST {WM_PENWINFIRST = 0x380,WM_PENWINLAST = 0x38F,WM_COALESCE_FIRST = 0x390,WM_COALESCE_LAST = 0x39F,WM_POWER = 0x48,};
enum MACRO_WSAEINPROGRESS {WSAEINPROGRESS = 10036,};
enum MACRO_WSAENETUNREACH {WSAENETUNREACH = 10051,};
enum MACRO_WSAENOPROTOOPT {WSAENOPROTOOPT = 10042,};
enum MACRO_WSAEWOULDBLOCK {WSAEWOULDBLOCK = 10035,};
enum MACRO_WSASYSNOTREADY {WSASYSNOTREADY = 10091,};
enum MACRO_cbRcrgbfAlcMax {cbRcrgbfAlcMax = 32,};
enum MACRO_idsDifferentPW {idsDifferentPW = 1004,};
enum MACRO_idsScreenSaver {idsScreenSaver = 1002,};
typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;
struct tagRASTERIZER_STATUS {int nSize;int wFlags;int nLanguageID;};
struct IExternalConnection {struct IExternalConnectionVtbl *lpVtbl;};
struct IOleInPlaceUIWindow {struct IOleInPlaceUIWindowVtbl *lpVtbl;};
struct IOleUILinkContainer {struct IOleUILinkContainerVtbl *lpVtbl;};
struct IRunningObjectTable {struct IRunningObjectTableVtbl *lpVtbl;};
typedef struct tagOBJECTDESCRIPTOR *LPLINKSRCDESCRIPTOR;
typedef struct tagOLEUIINSERTOBJECT *LPOLEUIINSERTOBJECT;
typedef struct tagOLEUIPASTESPECIAL *LPOLEUIPASTESPECIAL;
typedef struct tagOUTLINETEXTMETRIC *LPOUTLINETEXTMETRIC;
enum MACRO_BS_PUSHBUTTON {BS_PUSHBUTTON = 0x0,BS_DEFPUSHBUTTON = 0x1,BS_CHECKBOX = 0x2,BS_AUTOCHECKBOX = 0x3,BS_RADIOBUTTON = 0x4,BS_3STATE = 0x5,BS_AUTO3STATE = 0x6,BS_GROUPBOX = 0x7,BS_USERBUTTON = 0x8,BS_AUTORADIOBUTTON = 0x9,BS_OWNERDRAW = 0xB,BS_LEFTTEXT = 0x20,};
enum MACRO_CCHDEVICENAME {CCHDEVICENAME = 32,CCHPAPERNAME = 64,};
enum MACRO_COMPLEXREGION {COMPLEXREGION = 3,};
enum MACRO_DRIVERVERSION {DRIVERVERSION = 0,TECHNOLOGY = 2,HORZSIZE = 4,};
enum MACRO_ENUMPAPERBINS {ENUMPAPERBINS = 31,SETDIBSCALING = 32,};
enum MACRO_ERROR_SUCCESS {ERROR_SUCCESS = 0,ERROR_BADDB = 1,ERROR_BADKEY = 2,ERROR_CANTOPEN = 3,ERROR_CANTREAD = 4,ERROR_CANTWRITE = 5,ERROR_OUTOFMEMORY = 6,ERROR_INVALID_PARAMETER = 7,ERROR_ACCESS_DENIED = 8,};
enum MACRO_GETCOLORTABLE {GETCOLORTABLE = 5,};
enum MACRO_GETTECHNOLOGY {GETTECHNOLOGY = 20,};
enum MACRO_HTBOTTOMRIGHT {HTBOTTOMRIGHT = 17,};
enum MACRO_HTTRANSPARENT {HTTRANSPARENT = -1,};
enum MACRO_LOCALE_SYSTEM {LOCALE_SYSTEM_DEFAULT = 2048,LOCALE_USER_DEFAULT = 1024,};
enum MACRO_MIDIPATCHSIZE {MIDIPATCHSIZE = 128,};
enum MACRO_OLEUI_HANDLES {OLEUI_HANDLES_USEINVERSE = 0x1,OLEUI_HANDLES_NOBORDER = 0x2,OLEUI_HANDLES_INSIDE = 0x4,OLEUI_HANDLES_OUTSIDE = 0x8,OLEUI_SHADE_FULLRECT = 0x1,OLEUI_SHADE_BORDERIN = 0x2,OLEUI_SHADE_BORDEROUT = 0x3,};
enum MACRO_OLEUI_VERSION {OLEUI_VERSION_MAGIC = 0x4D42,};
enum MACRO_REPLACEDLGORD {REPLACEDLGORD = 1541,};
enum MACRO_SETMITERLIMIT {SETMITERLIMIT = 23,};
enum MACRO_WM_CANCELMODE {WM_CANCELMODE = 0x1F,WM_TIMER = 0x113,};
enum MACRO_WM_CHOOSEFONT {WM_CHOOSEFONT_GETLOGFONT = 1025,};
enum MACRO_WM_COMMNOTIFY {WM_COMMNOTIFY = 0x44,};
enum MACRO_WM_FONTCHANGE {WM_FONTCHANGE = 0x1D,};
enum MACRO_WM_GETDLGCODE {WM_GETDLGCODE = 0x87,};
enum MACRO_WM_INITDIALOG {WM_INITDIALOG = 0x110,WM_NEXTDLGCTL = 0x28,WM_PARENTNOTIFY = 0x210,WM_ENTERIDLE = 0x121,};
enum MACRO_WM_SHOWWINDOW {WM_SHOWWINDOW = 0x18,};
enum MACRO_WM_SYSCOMMAND {WM_SYSCOMMAND = 0x112,};
enum MACRO_WM_VKEYTOITEM {WM_VKEYTOITEM = 0x2E,WM_CHARTOITEM = 0x2F,};
enum MACRO_WSAEADDRINUSE {WSAEADDRINUSE = 10048,};
enum MACRO_WSAECONNRESET {WSAECONNRESET = 10054,};
enum MACRO_WSAEOPNOTSUPP {WSAEOPNOTSUPP = 10045,};
enum MACRO_WSAEPROTOTYPE {WSAEPROTOTYPE = 10041,};
enum MACRO_cbDictPathMax {cbDictPathMax = 255,};
enum MACRO_idsIsPassword {idsIsPassword = 1000,};
enum MACRO_lhSessionNull {lhSessionNull = 0,};
typedef struct tagMCI_ANIM_OPEN_PARMS MCI_ANIM_OPEN_PARMS;
typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;
typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;
typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;
typedef struct tagMCI_OVLY_LOAD_PARMS MCI_OVLY_LOAD_PARMS;
typedef struct tagMCI_OVLY_OPEN_PARMS MCI_OVLY_OPEN_PARMS;
typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;
typedef struct tagMCI_OVLY_SAVE_PARMS MCI_OVLY_SAVE_PARMS;
typedef struct tagMCI_VD_ESCAPE_PARMS MCI_VD_ESCAPE_PARMS;
typedef struct tagMCI_WAVE_OPEN_PARMS MCI_WAVE_OPEN_PARMS;
typedef struct tagOIFI OLEINPLACEFRAMEINFO;
typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;
typedef struct tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;
typedef IDataAdviseHolder *LPDATAADVISEHOLDER;
typedef struct tagFMS_GETDRIVEINFO *LPFMS_GETDRIVEINFO;
typedef struct tagOBJECTDESCRIPTOR *LPOBJECTDESCRIPTOR;
typedef IOleInPlaceObject *LPOLEINPLACEOBJECT;
typedef IOleItemContainer *LPOLEITEMCONTAINER;
typedef IParseDisplayName *LPPARSEDISPLAYNAME;
enum MACRO_BLACKONWHITE {BLACKONWHITE = 1,WHITEONBLACK = 2,};
enum MACRO_CLASSFACTORY {CLASSFACTORY_E_FIRST = 0x110,CLASSFACTORY_E_LAST = 0x11F,CLASSFACTORY_S_FIRST = 0x110,CLASSFACTORY_S_LAST = 0x11F,};
enum MACRO_COLORONCOLOR {COLORONCOLOR = 3,};
enum MACRO_ENABLEDUPLEX {ENABLEDUPLEX = 28,};
enum MACRO_ENUM_MINIMUM {ENUM_MINIMUM = 1,ENUM_MAXIMUM = 4096,};
enum MACRO_GETTECHNOLGY {GETTECHNOLGY = 20,};
enum MACRO_HWND_DESKTOP {HWND_DESKTOP = 0,};
enum MACRO_ID_OLEUIHELP {ID_OLEUIHELP = 99,};
enum MACRO_IMPLTYPEFLAG {IMPLTYPEFLAG_FDEFAULT = 0x1,IMPLTYPEFLAG_FSOURCE = 0x2,IMPLTYPEFLAG_FRESTRICTED = 0x4,};
enum MACRO_MM_MICROSOFT {MM_MICROSOFT = 1,MM_MIDI_MAPPER = 1,MM_WAVE_MAPPER = 2,MM_SNDBLST_MIDIOUT = 3,MM_SNDBLST_MIDIIN = 4,MM_SNDBLST_SYNTH = 5,MM_SNDBLST_WAVEOUT = 6,MM_SNDBLST_WAVEIN = 7,MM_ADLIB = 9,MM_MPU401_MIDIOUT = 10,MM_MPU401_MIDIIN = 11,MM_PC_JOYSTICK = 12,};
enum MACRO_SETCOPYCOUNT {SETCOPYCOUNT = 17,};
enum MACRO_SETKERNTRACK {SETKERNTRACK = 770,};
enum MACRO_SIZEZOOMSHOW {SIZEZOOMSHOW = 3,SIZEZOOMHIDE = 4,};
enum MACRO_TIME_ONESHOT {TIME_ONESHOT = 0,TIME_PERIODIC = 1,};
enum MACRO_WM_MDICREATE {WM_MDICREATE = 0x220,WM_MDIDESTROY = 0x221,WM_MDIACTIVATE = 0x222,WM_MDIRESTORE = 0x223,WM_MDINEXT = 0x224,WM_MDIMAXIMIZE = 0x225,WM_MDITILE = 0x226,WM_MDICASCADE = 0x227,WM_MDIICONARRANGE = 0x228,WM_MDIGETACTIVE = 0x229,WM_MDISETMENU = 0x230,};
enum MACRO_WM_MOUSEMOVE {WM_MOUSEMOVE = 0x200,WM_LBUTTONDOWN = 0x201,WM_LBUTTONUP = 0x202,WM_LBUTTONDBLCLK = 0x203,WM_RBUTTONDOWN = 0x204,WM_RBUTTONUP = 0x205,WM_RBUTTONDBLCLK = 0x206,WM_MBUTTONDOWN = 0x207,WM_MBUTTONUP = 0x208,WM_MBUTTONDBLCLK = 0x209,WM_MOUSEFIRST = 0x200,WM_MOUSELAST = 0x209,};
enum MACRO_WM_NCHITTEST {WM_NCHITTEST = 0x84,};
enum MACRO_WM_QUERYOPEN {WM_QUERYOPEN = 0x13,WM_CLOSE = 0x10,WM_GETMINMAXINFO = 0x24,};
enum MACRO_WM_QUEUESYNC {WM_QUEUESYNC = 0x23,};
enum MACRO_WM_SETREDRAW {WM_SETREDRAW = 0xB,WM_ENABLE = 0xA,WM_SETTEXT = 0xC,WM_GETTEXT = 0xD,WM_GETTEXTLENGTH = 0xE,};
enum MACRO_WSAEHOSTDOWN {WSAEHOSTDOWN = 10064,};
enum MACRO_WSAENETRESET {WSAENETRESET = 10052,};
enum MACRO_WSAENOTEMPTY {WSAENOTEMPTY = 10066,};
enum MACRO_WSAESHUTDOWN {WSAESHUTDOWN = 10058,};
enum MACRO_WSAETIMEDOUT {WSAETIMEDOUT = 10060,};
typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;
typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;
typedef struct tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;
typedef struct tagOLEUIINSERTOBJECT *POLEUIINSERTOBJECT;
typedef struct tagOLEUIPASTESPECIAL *POLEUIPASTESPECIAL;
typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;
typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;
struct IDataAdviseHolder {struct IDataAdviseHolderVtbl *lpVtbl;};
struct IOleInPlaceObject {struct IOleInPlaceObjectVtbl *lpVtbl;};
struct IOleItemContainer {struct IOleItemContainerVtbl *lpVtbl;};
struct IParseDisplayName {struct IParseDisplayNameVtbl *lpVtbl;};
typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;
typedef IOleAdviseHolder *LPOLEADVISEHOLDER;
typedef IOleCacheControl *LPOLECACHECONTROL;
typedef IOleInPlaceFrame *LPOLEINPLACEFRAME;
typedef struct tagOLEUICHANGEICON *LPOLEUICHANGEICON;
typedef struct tagOLEUIPASTEENTRY *LPOLEUIPASTEENTRY;
typedef struct tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;
enum MACRO_CONVERT10_E {CONVERT10_E_OLESTREAM_GET = 448,CONVERT10_E_OLESTREAM_PUT = 449,CONVERT10_E_OLESTREAM_FMT = 450,CONVERT10_E_OLESTREAM_BITMAP_TO_DIB = 451,CONVERT10_E_STG_FMT = 452,CONVERT10_E_STG_NO_STD_STREAM = 453,CONVERT10_E_STG_DIB_TO_BITMAP = 454,CONVERT10_S_NO_PRESENTATION = 448,};
enum MACRO_EPSPRINTING {EPSPRINTING = 33,};
enum MACRO_FILEOPENORD {FILEOPENORD = 1536,};
enum MACRO_FLUSHOUTPUT {FLUSHOUTPUT = 6,};
enum MACRO_GCL_WNDPROC {GCL_WNDPROC = -24,};
enum MACRO_GETFACENAME {GETFACENAME = 513,};
enum MACRO_HTMAXBUTTON {HTMAXBUTTON = 9,};
enum MACRO_JOYSTICKID1 {JOYSTICKID1 = 0,JOYSTICKID2 = 1,};
enum MACRO_LANG_SYSTEM {LANG_SYSTEM_DEFAULT = 2048,LANG_USER_DEFAULT = 1024,};
enum MACRO_MAXPNAMELEN {MAXPNAMELEN = 32,MAXERRORLENGTH = 128,};
enum MACRO_MM_JOY1MOVE {MM_JOY1MOVE = 0x3A0,MM_JOY2MOVE = 0x3A1,MM_JOY1ZMOVE = 0x3A2,MM_JOY2ZMOVE = 0x3A3,MM_JOY1BUTTONDOWN = 0x3B5,MM_JOY2BUTTONDOWN = 0x3B6,MM_JOY1BUTTONUP = 0x3B7,MM_JOY2BUTTONUP = 0x3B8,MM_MCINOTIFY = 0x3B9,MM_WOM_OPEN = 0x3BB,MM_WOM_CLOSE = 0x3BC,MM_WOM_DONE = 0x3BD,MM_WIM_OPEN = 0x3BE,MM_WIM_CLOSE = 0x3BF,MM_WIM_DATA = 0x3C0,MM_MIM_OPEN = 0x3C1,MM_MIM_CLOSE = 0x3C2,MM_MIM_DATA = 0x3C3,MM_MIM_LONGDATA = 0x3C4,MM_MIM_ERROR = 0x3C5,MM_MIM_LONGERROR = 0x3C6,MM_MOM_OPEN = 0x3C7,MM_MOM_CLOSE = 0x3C8,MM_MOM_DONE = 0x3C9,};
enum MACRO_MOUSETRAILS {MOUSETRAILS = 39,GETEXTENDEDTEXTMETRICS = 256,};
enum MACRO_MSGF_DDEMGR {MSGF_DDEMGR = 0x8001,};
enum MACRO_NONZEROLHND {NONZEROLHND = 2,};
enum MACRO_NONZEROLPTR {NONZEROLPTR = 0,};
enum MACRO_NOTSRCERASE {NOTSRCERASE = 0xA6,};
enum MACRO_NUMRESERVED {NUMRESERVED = 106,};
enum MACRO_OLEUI_BZERR {OLEUI_BZERR_HTASKINVALID = 116,OLEUI_BZ_SWITCHTOSELECTED = 117,OLEUI_BZ_RETRYSELECTED = 118,OLEUI_BZ_CALLUNBLOCKED = 119,};
enum MACRO_OLEUI_CIERR {OLEUI_CIERR_MUSTHAVECLSID = 116,OLEUI_CIERR_MUSTHAVECURRENTMETAFILE = 117,OLEUI_CIERR_SZICONEXEINVALID = 118,};
enum MACRO_OLEUI_CTERR {OLEUI_CTERR_CLASSIDINVALID = 117,OLEUI_CTERR_DVASPECTINVALID = 118,OLEUI_CTERR_CBFORMATINVALID = 119,OLEUI_CTERR_HMETAPICTINVALID = 120,OLEUI_CTERR_STRINGINVALID = 121,};
enum MACRO_OLEUI_IOERR {OLEUI_IOERR_LPSZFILEINVALID = 116,OLEUI_IOERR_LPSZLABELINVALID = 117,OLEUI_IOERR_HICONINVALID = 118,OLEUI_IOERR_LPFORMATETCINVALID = 119,OLEUI_IOERR_PPVOBJINVALID = 120,OLEUI_IOERR_LPIOLECLIENTSITEINVALID = 121,OLEUI_IOERR_LPISTORAGEINVALID = 122,OLEUI_IOERR_SCODEHASERROR = 123,OLEUI_IOERR_LPCLSIDEXCLUDEINVALID = 124,OLEUI_IOERR_CCHFILEINVALID = 125,};
enum MACRO_PASSTHROUGH {PASSTHROUGH = 19,};
enum MACRO_PC_RESERVED {PC_RESERVED = 0x1,PC_EXPLICIT = 0x2,PC_NOCOLLAPSE = 0x4,};
enum MACRO_PDEVICESIZE {PDEVICESIZE = 26,};
enum MACRO_PRINTDLGORD {PRINTDLGORD = 1538,};
enum MACRO_RC_WDEFAULT {RC_WDEFAULT = 0xFFFF,RC_LDEFAULT = 0xFFFF,RC_WDEFAULTFLAGS = 0x8000,RC_LDEFAULTFLAGS = 0x0,};
enum MACRO_SETLINEJOIN {SETLINEJOIN = 22,};
enum MACRO_SIZEPALETTE {SIZEPALETTE = 104,};
enum MACRO_STGM_DFRALL {STGM_DFRALL = 34,STGM_DFALL = 18,STGM_SALL = 18,};
enum MACRO_TRANSPARENT {TRANSPARENT = 1,OPAQUE = 2,};
enum MACRO_UPDATELINKS {UPDATELINKS_STARTDELAY = 2000,};
enum MACRO_WH_HARDWARE {WH_HARDWARE = 8,WH_SHELL = 10,};
enum MACRO_WH_KEYBOARD {WH_KEYBOARD = 2,};
enum MACRO_WM_ACTIVATE {WM_ACTIVATE = 0x6,WM_ACTIVATEAPP = 0x1C,WM_NCACTIVATE = 0x86,WM_SETFOCUS = 0x7,WM_KILLFOCUS = 0x8,WM_KEYDOWN = 0x100,WM_KEYUP = 0x101,WM_CHAR = 0x102,WM_DEADCHAR = 0x103,WM_SYSKEYDOWN = 0x104,WM_SYSKEYUP = 0x105,WM_SYSCHAR = 0x106,WM_SYSDEADCHAR = 0x107,WM_KEYFIRST = 0x100,WM_KEYLAST = 0x108,};
enum MACRO_WM_CTLCOLOR {WM_CTLCOLOR = 0x19,};
enum MACRO_WM_DRAWITEM {WM_DRAWITEM = 0x2B,WM_MEASUREITEM = 0x2C,WM_DELETEITEM = 0x2D,WM_COMPAREITEM = 0x39,};
enum MACRO_WM_INITMENU {WM_INITMENU = 0x116,WM_INITMENUPOPUP = 0x117,WM_MENUSELECT = 0x11F,WM_MENUCHAR = 0x120,WM_COMMAND = 0x111,WM_HSCROLL = 0x114,WM_VSCROLL = 0x115,};
enum MACRO_WM_RCRESULT {WM_RCRESULT = 897,WM_HOOKRCRESULT = 898,WM_GLOBALRCCHANGE = 899,WM_SKB = 900,WM_HEDITCTL = 901,};
enum MACRO_WSAEALREADY {WSAEALREADY = 10037,};
enum MACRO_WSAEMSGSIZE {WSAEMSGSIZE = 10040,};
enum MACRO_WSAENETDOWN {WSAENETDOWN = 10050,};
enum MACRO_WSAENOTCONN {WSAENOTCONN = 10057,};
enum MACRO_WSAENOTSOCK {WSAENOTSOCK = 10038,};
enum MACRO_WSAEPROCLIM {WSAEPROCLIM = 10067,};
enum MACRO_cbRcUserMax {cbRcUserMax = 32,};
enum MACRO_idsBadOldPW {idsBadOldPW = 1006,};
enum MACRO_idsChangePW {idsChangePW = 1005,};
enum MACRO_idsHelpFile {idsHelpFile = 1009,};
enum MACRO_idsPassword {idsPassword = 1003,};
typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;
typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;
typedef struct tagMCI_SYSINFO_PARMS MCI_SYSINFO_PARMS;
typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;
typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;
typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;
typedef struct tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;
typedef struct tagOLEUIINSERTOBJECT OLEUIINSERTOBJECT;
typedef struct tagOLEUIPASTESPECIAL OLEUIPASTESPECIAL;
typedef struct tagOUTLINETEXTMETRIC OUTLINETEXTMETRIC;
typedef struct tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;
typedef struct tagRASTERIZER_STATUS RASTERIZER_STATUS;
enum tagOLEUIPASTEFLAG {OLEUIPASTE_ENABLEICON = 0x800,OLEUIPASTE_PASTEONLY = 0x0,OLEUIPASTE_PASTE = 0x200,OLEUIPASTE_LINKANYTYPE = 0x400,OLEUIPASTE_LINKTYPE1 = 0x1,OLEUIPASTE_LINKTYPE2 = 0x2,OLEUIPASTE_LINKTYPE3 = 0x4,OLEUIPASTE_LINKTYPE4 = 0x8,OLEUIPASTE_LINKTYPE5 = 0x10,OLEUIPASTE_LINKTYPE6 = 0x20,OLEUIPASTE_LINKTYPE7 = 0x40,OLEUIPASTE_LINKTYPE8 = 0x80,};
struct tagSAFEARRAYBOUND {unsigned __int32 cElements;__int32 lLbound;};
typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;
typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;
typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;
typedef struct tagDRIVERINFOSTRUCT DRIVERINFOSTRUCT;
typedef struct tagFMS_GETDRIVEINFO FMS_GETDRIVEINFO;
struct IOleAdviseHolder {struct IOleAdviseHolderVtbl *lpVtbl;};
struct IOleCacheControl {struct IOleCacheControlVtbl *lpVtbl;};
struct IOleInPlaceFrame {struct IOleInPlaceFrameVtbl *lpVtbl;};
typedef ICreateTypeInfo *LPCREATETYPEINFO;
typedef struct tagFMS_GETFILESEL *LPFMS_GETFILESEL;
typedef IOleInPlaceSite *LPOLEINPLACESITE;
typedef struct tagOLEUIEDITLINKS *LPOLEUIEDITLINKS;
typedef IPersistStorage *LPPERSISTSTORAGE;
typedef IRunnableObject *LPRUNNABLEOBJECT;
typedef struct tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;
typedef IStdMarshalInfo *LPSTDMARSHALINFO;
enum MACRO_CBN_ENDREC {CBN_ENDREC = 16,CBN_DELAYEDRECOGFAIL = 17,CBN_RCRESULT = 18,};
enum MACRO_CCSTYLEORD {CCSTYLEORD = 3,CCFLAGSORD = 4,};
enum MACRO_CC_RGBINIT {CC_RGBINIT = 0x1,CC_FULLOPEN = 0x2,CC_PREVENTFULLOPEN = 0x4,CC_SHOWHELP = 0x8,CC_ENABLEHOOK = 0x10,CC_ENABLETEMPLATE = 0x20,CC_ENABLETEMPLATEHANDLE = 0x40,};
enum MACRO_CLIENTSITE {CLIENTSITE_E_FIRST = 0x190,CLIENTSITE_E_LAST = 0x19F,CLIENTSITE_S_FIRST = 0x190,CLIENTSITE_S_LAST = 0x19F,};
enum MACRO_CP_WINANSI {CP_WINANSI = 1004,};
enum MACRO_DEVICEDATA {DEVICEDATA = 19,};
enum MACRO_DRAGDROP_E {DRAGDROP_E_NOTREGISTERED = 256,DRAGDROP_E_ALREADYREGISTERED = 257,DRAGDROP_E_INVALIDHWND = 258,DRAGDROP_S_DROP = 256,DRAGDROP_S_CANCEL = 257,DRAGDROP_S_USEDEFAULTCURSORS = 258,};
enum MACRO_DROPEFFECT {DROPEFFECT_NONE = 0,DROPEFFECT_COPY = 1,DROPEFFECT_MOVE = 2,DROPEFFECT_LINK = 4,DROPEFFECT_SCROLL = 0,};
enum MACRO_DRV_CANCEL {DRV_CANCEL = 0,DRV_OK = 1,DRV_RESTART = 2,DRV_MCI_FIRST = 2048,DRV_MCI_LAST = 6143,};
enum MACRO_FINDDLGORD {FINDDLGORD = 1540,};
enum MACRO_FONTDLGORD {FONTDLGORD = 1542,};
enum MACRO_GETBASEIRQ {GETBASEIRQ = 10,};
enum MACRO_HC_GETNEXT {HC_GETNEXT = 1,HC_SKIP = 2,HC_NOREMOVE = 3,HC_NOREM = 3,HC_SYSMODALON = 4,HC_SYSMODALOFF = 5,};
enum MACRO_HTTOPRIGHT {HTTOPRIGHT = 14,};
enum MACRO_LOGPIXELSX {LOGPIXELSX = 88,};
enum MACRO_LOGPIXELSY {LOGPIXELSY = 90,};
enum MACRO_MARKPARITY {MARKPARITY = 3,SPACEPARITY = 4,};
enum MACRO_MAXFILELEN {MAXFILELEN = 13,};
enum MACRO_MAXHOTSPOT {MAXHOTSPOT = 8,};
enum MACRO_MERGEPAINT {MERGEPAINT = 0x226,};
enum MACRO_MIDIMAPPER {MIDIMAPPER = -1,};
enum MACRO_NOTSRCCOPY {NOTSRCCOPY = 0x8,};
enum MACRO_NUMMARKERS {NUMMARKERS = 20,};
enum MACRO_OLESTDDROP {OLESTDDROP_NONE = 0,OLESTDDROP_DEFAULT = 1,OLESTDDROP_NONDEFAULT = 2,};
enum MACRO_ONESTOPBIT {ONESTOPBIT = 0,ONE5STOPBITS = 1,TWOSTOPBITS = 2,};
enum MACRO_POSTSCRIPT {POSTSCRIPT_DATA = 37,POSTSCRIPT_IGNORE = 38,};
enum MACRO_RASTERCAPS {RASTERCAPS = 38,};
enum MACRO_READ_WRITE {READ_WRITE = 2,};
enum MACRO_SETCHARSET {SETCHARSET = 772,GETSETSCREENPARAMS = 3072,};
enum MACRO_SETLINECAP {SETLINECAP = 21,};
enum MACRO_SIZENORMAL {SIZENORMAL = 0,SIZEICONIC = 1,SIZEFULLSCREEN = 2,};
enum MACRO_WM_NCPAINT {WM_NCPAINT = 0x85,WM_NCCALCSIZE = 0x83,};
enum MACRO_WM_SETFONT {WM_SETFONT = 0x30,WM_GETFONT = 0x31,};
enum MACRO_WSABASEERR {WSABASEERR = 10000,};
enum MACRO_WSAEDISCON {WSAEDISCON = 10101,};
enum MACRO_WSAEISCONN {WSAEISCONN = 10056,};
enum MACRO_WSAENOBUFS {WSAENOBUFS = 10055,};
enum MACRO_WSAEREMOTE {WSAEREMOTE = 10071,};
enum MACRO_idsAppName {idsAppName = 1007,};
enum MACRO_idsIniFile {idsIniFile = 1001,};
typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;
typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;
typedef struct _549C1D5CD1C453772D3DFDF07CAC3EA1 MENUITEMTEMPLATE;
typedef struct tagNFYLOGPARAMERROR NFYLOGPARAMERROR;
typedef struct tagOBJECTDESCRIPTOR OBJECTDESCRIPTOR;
typedef struct tagOLEUICHANGEICON *POLEUICHANGEICON;
typedef struct tagOLEUIPASTEENTRY *POLEUIPASTEENTRY;
typedef struct tagTIMESTAMP_STRUCT TIMESTAMP_STRUCT;
typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;
enum tagOLEGETMONIKER {OLEGETMONIKER_ONLYIFTHERE = 0x1,OLEGETMONIKER_FORCEASSIGN = 0x2,OLEGETMONIKER_UNASSIGN = 0x3,OLEGETMONIKER_TEMPFORUSER = 0x4,};
enum tagOLEVERBATTRIB {OLEVERBATTRIB_NEVERDIRTIES = 0x1,OLEVERBATTRIB_ONCONTAINERMENU = 0x2,};
enum tagUSERCLASSTYPE {USERCLASSTYPE_FULL = 0x1,USERCLASSTYPE_SHORT = 0x2,USERCLASSTYPE_APPNAME = 0x3,};
struct ICreateTypeInfo {struct ICreateTypeInfoVtbl *lpVtbl;};
struct IOleInPlaceSite {struct IOleInPlaceSiteVtbl *lpVtbl;};
struct IPersistStorage {struct IPersistStorageVtbl *lpVtbl;};
struct IRunnableObject {struct IRunnableObjectVtbl *lpVtbl;};
struct IStdMarshalInfo {struct IStdMarshalInfoVtbl *lpVtbl;};
typedef ICreateTypeLib *LPCREATETYPELIB;
typedef IEnumFORMATETC *LPENUMFORMATETC;
typedef struct tagINTERFACEDATA *LPINTERFACEDATA;
typedef struct tagINTERFACEIMPL *LPINTERFACEIMPL;
typedef struct tagINTERFACEINFO *LPINTERFACEINFO;
typedef IMessageFilter *LPMESSAGEFILTER;
typedef IOleClientSite *LPOLECLIENTSITE;
typedef struct tagPENDATAHEADER *LPPENDATAHEADER;
typedef IPersistStream *LPPERSISTSTREAM;
enum MACRO_ALTERNATE {ALTERNATE = 1,WINDING = 2,};
enum MACRO_BITSPIXEL {BITSPIXEL = 12,};
enum MACRO_BLACKNESS {BLACKNESS = 0x42,};
enum MACRO_CBR_BLOCK {CBR_BLOCK = 0xFFFF,};
enum MACRO_CCINFOORD {CCINFOORD = 2,};
enum MACRO_CFSEPCHAR {CFSEPCHAR = 43,};
enum MACRO_CLIPBRD_E {CLIPBRD_E_CANT_OPEN = 464,CLIPBRD_E_CANT_EMPTY = 465,CLIPBRD_E_CANT_SET = 466,CLIPBRD_E_BAD_DATA = 467,CLIPBRD_E_CANT_CLOSE = 468,};
enum MACRO_CONVERT10 {CONVERT10_E_FIRST = 0x1C0,CONVERT10_E_LAST = 0x1CF,CONVERT10_S_FIRST = 0x1C0,CONVERT10_S_LAST = 0x1CF,};
enum MACRO_CURVECAPS {CURVECAPS = 28,};
enum MACRO_DC_FIELDS {DC_FIELDS = 1,DC_PAPERS = 2,DC_PAPERSIZE = 3,DC_MINEXTENT = 4,DC_MAXEXTENT = 5,DC_BINS = 6,DC_DUPLEX = 7,DC_SIZE = 8,DC_EXTRA = 9,DC_VERSION = 10,DC_DRIVER = 11,DC_BINNAMES = 12,DC_ENUMRESOLUTIONS = 13,DC_FILEDEPENDENCIES = 14,DC_TRUETYPE = 15,DC_PAPERNAMES = 16,DC_ORIENTATION = 17,DC_COPIES = 18,};
enum MACRO_DM_UPDATE {DM_UPDATE = 1,DM_COPY = 2,DM_PROMPT = 4,DM_MODIFY = 8,DM_IN_BUFFER = 8,DM_IN_PROMPT = 4,DM_OUT_BUFFER = 2,DM_OUT_DEFAULT = 1,};
enum MACRO_DRAFTMODE {DRAFTMODE = 7,QUERYESCSUPPORT = 8,};
enum MACRO_DSTINVERT {DSTINVERT = 0x9,};
enum MACRO_GCW_STYLE {GCW_STYLE = -26,GCW_ATOM = -32,};
enum MACRO_GETMAXCOM {GETMAXCOM = 9,};
enum MACRO_GETMAXLPT {GETMAXLPT = 8,};
enum MACRO_GWL_STYLE {GWL_STYLE = -16,GWL_EXSTYLE = -20,};
enum MACRO_HINSTANCE {HINSTANCE_ERROR = 32,};
enum MACRO_HTGROWBOX {HTGROWBOX = 4,HTREDUCE = 8,};
enum MACRO_HTHSCROLL {HTHSCROLL = 6,};
enum MACRO_HTNOWHERE {HTNOWHERE = 0,HTCLIENT = 1,HTCAPTION = 2,};
enum MACRO_HTSYSMENU {HTSYSMENU = 3,HTSIZE = 4,};
enum MACRO_HTTOPLEFT {HTTOPLEFT = 13,};
enum MACRO_HTVSCROLL {HTVSCROLL = 7,HTMINBUTTON = 8,};
enum MACRO_ID_STATIC {ID_STATIC = 98,};
enum MACRO_INPLACE_E {INPLACE_E_NOTUNDOABLE = 416,INPLACE_E_NOTOOLSPACE = 417,INPLACE_S_TRUNCATED = 416,INPLACE_DEFBORDERWIDTH = 4,};
enum MACRO_MAPI_USER {MAPI_USER_ABORT = 1,MAPI_E_FAILURE = 2,MAPI_E_LOGIN_FAILURE = 3,MAPI_E_DISK_FULL = 4,MAPI_E_INSUFFICIENT_MEMORY = 5,MAPI_E_ACCESS_DENIED = 6,MAPI_E_TOO_MANY_SESSIONS = 8,MAPI_E_TOO_MANY_FILES = 9,MAPI_E_TOO_MANY_RECIPIENTS = 10,MAPI_E_ATTACHMENT_NOT_FOUND = 11,MAPI_E_ATTACHMENT_OPEN_FAILURE = 12,MAPI_E_ATTACHMENT_WRITE_FAILURE = 13,MAPI_E_UNKNOWN_RECIPIENT = 14,MAPI_E_BAD_RECIPTYPE = 15,MAPI_E_NO_MESSAGES = 16,MAPI_E_INVALID_MESSAGE = 17,MAPI_E_TEXT_TOO_LARGE = 18,MAPI_E_INVALID_SESSION = 19,MAPI_E_TYPE_NOT_SUPPORTED = 20,MAPI_E_AMBIGUOUS_RECIPIENT = 21,MAPI_E_MESSAGE_IN_USE = 22,MAPI_E_NETWORK_FAILURE = 23,MAPI_E_INVALID_EDITFIELDS = 24,MAPI_E_INVALID_RECIPS = 25,MAPI_E_NOT_SUPPORTED = 26,};
enum MACRO_MERGECOPY {MERGECOPY = 0xCA,};
enum MACRO_MFCOMMENT {MFCOMMENT = 15,GETPENWIDTH = 16,};
enum MACRO_NOT_FOUND {WSAHOST_NOT_FOUND = 11001,HOST_NOT_FOUND = 11001,};
enum MACRO_NUMCOLORS {NUMCOLORS = 24,};
enum MACRO_PATINVERT {PATINVERT = 0x49,};
enum MACRO_SELECTDIB {SELECTDIB = 41,};
enum MACRO_SIMULATED {SIMULATED_FONTTYPE = 0x8000,PRINTER_FONTTYPE = 0x4000,SCREEN_FONTTYPE = 0x2000,BOLD_FONTTYPE = 0x100,ITALIC_FONTTYPE = 0x200,REGULAR_FONTTYPE = 0x400,};
enum MACRO_SOMAXCONN {SOMAXCONN = 5,};
enum MACRO_SRCINVERT {SRCINVERT = 0x46,};
enum MACRO_TRANSFORM {TRANSFORM_CTM = 4107,};
enum MACRO_UPDFCACHE {UPDFCACHE_NODATACACHE = 0x1,UPDFCACHE_ONSAVECACHE = 0x2,UPDFCACHE_ONSTOPCACHE = 0x4,UPDFCACHE_NORMALCACHE = 0x8,UPDFCACHE_IFBLANK = 0x10,UPDFCACHE_ONLYIFBLANK = 0x0,UPDFCACHE_IFBLANKORONSAVECACHE = 0x12,UPDFCACHE_ALL = 0xFFFF,UPDFCACHE_ALLBUTNODATACACHE = 0xFFFE,};
enum MACRO_WHITENESS {WHITENESS = 0x62,};
enum MACRO_WM_CREATE {WM_CREATE = 0x1,WM_NCCREATE = 0x81,WM_DESTROY = 0x2,WM_NCDESTROY = 0x82,};
enum MACRO_WSAEACCES {WSAEACCES = 10013,};
enum MACRO_WSAEDQUOT {WSAEDQUOT = 10069,};
enum MACRO_WSAEFAULT {WSAEFAULT = 10014,};
enum MACRO_WSAEINVAL {WSAEINVAL = 10022,};
enum MACRO_WSAEMFILE {WSAEMFILE = 10024,};
enum MACRO_WSAESTALE {WSAESTALE = 10070,};
enum MACRO_WSAEUSERS {WSAEUSERS = 10068,};
typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;
typedef struct tagMCI_SOUND_PARMS MCI_SOUND_PARMS;
typedef struct tagMDICREATESTRUCT MDICREATESTRUCT;
typedef struct tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;
typedef struct tagOLEUICHANGEICON OLEUICHANGEICON;
typedef struct tagOLEUIPASTEENTRY OLEUIPASTEENTRY;
typedef struct tagOLEUIEDITLINKS *POLEUIEDITLINKS;
typedef struct _ULARGE_INTEGER *PULARGE_INTEGER;
typedef struct tagSTACKTRACEENTRY STACKTRACEENTRY;
typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;
typedef struct _CB9F4276D477D4EDC30066925B58EE0F *lpMapiRecipDesc;
enum tagDISCARDCACHE {DISCARDCACHE_SAVEIFDIRTY = 0x0,DISCARDCACHE_NOSAVE = 0x1,};
struct tagSCREENPARAMS {int angle;int frequency;};
typedef struct tagBANDINFOSTRUCT BANDINFOSTRUCT;
typedef struct tagBITMAPCOREINFO BITMAPCOREINFO;
typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;
typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;
typedef struct tagFMS_GETFILESEL FMS_GETFILESEL;
struct ICreateTypeLib {struct ICreateTypeLibVtbl *lpVtbl;};
struct IEnumFORMATETC {struct IEnumFORMATETCVtbl *lpVtbl;};
struct IMessageFilter {struct IMessageFilterVtbl *lpVtbl;};
struct IOleClientSite {struct IOleClientSiteVtbl *lpVtbl;};
struct IPersistStream {struct IPersistStreamVtbl *lpVtbl;};
typedef IClassFactory *LPCLASSFACTORY;
typedef IEnumSTATDATA *LPENUMSTATDATA;
typedef struct tagGLYPHMETRICS *LPGLYPHMETRICS;
typedef IOleContainer *LPOLECONTAINER;
typedef struct tagOLEUICONVERT *LPOLEUICONVERT;
enum MACRO_ABSOLUTE {ABSOLUTE = 1,RELATIVE = 2,};
enum MACRO_APPCLASS {APPCLASS_STANDARD = 0x0,APPCLASS_MASK = 0xF,};
enum MACRO_ASPECTXY {ASPECTXY = 44,};
enum MACRO_BANDINFO {BANDINFO = 24,};
enum MACRO_BITPENUP {BITPENUP = 0x8000,};
enum MACRO_C1_UPPER {C1_UPPER = 0x1,C1_LOWER = 0x2,C1_DIGIT = 0x4,C1_SPACE = 0x8,C1_PUNCT = 0x10,C1_CNTRL = 0x20,C1_BLANK = 0x40,C1_XDIGIT = 0x80,C1_ALPHA = 0x100,};
enum MACRO_CALLBACK {CALLBACK_TYPEMASK = 0x0,CALLBACK_NULL = 0x0,CALLBACK_WINDOW = 0x0,CALLBACK_TASK = 0x0,CALLBACK_FUNCTION = 0x0,};
enum MACRO_CLIPCAPS {CLIPCAPS = 36,};
enum MACRO_COLORRES {COLORRES = 108,};
enum MACRO_CTLCLASS {CTLCLASS = 20,};
enum MACRO_CTLCOLOR {CTLCOLOR_MSGBOX = 0,CTLCOLOR_EDIT = 1,CTLCOLOR_LISTBOX = 2,CTLCOLOR_BTN = 3,CTLCOLOR_DLG = 4,CTLCOLOR_SCROLLBAR = 5,CTLCOLOR_STATIC = 6,};
enum MACRO_CTLDESCR {CTLDESCR = 22,};
enum MACRO_CTLTITLE {CTLTITLE = 94,};
enum MACRO_CTLTYPES {CTLTYPES = 12,};
enum MACRO_DISPATCH {DISPATCH_METHOD = 0x1,DISPATCH_PROPERTYGET = 0x2,DISPATCH_PROPERTYPUT = 0x4,DISPATCH_PROPERTYPUTREF = 0x8,};
enum MACRO_DMORIENT {DMORIENT_PORTRAIT = 1,DMORIENT_LANDSCAPE = 2,};
enum MACRO_DRAGDROP {DRAGDROP_E_FIRST = 0x100,DRAGDROP_E_LAST = 0x10F,DRAGDROP_S_FIRST = 0x100,DRAGDROP_S_LAST = 0x10F,};
enum MACRO_FACILITY {FACILITY_NULL = 0x0,FACILITY_RPC = 0x1,FACILITY_DISPATCH = 0x2,FACILITY_STORAGE = 0x3,FACILITY_ITF = 0x4,};
enum MACRO_FONTTYPE {RASTER_FONTTYPE = 0x1,DEVICE_FONTTYPE = 0x2,TRUETYPE_FONTTYPE = 0x4,};
enum MACRO_HTBORDER {HTBORDER = 18,};
enum MACRO_HTBOTTOM {HTBOTTOM = 15,HTBOTTOMLEFT = 16,};
enum MACRO_HWND_TOP {HWND_TOP = 0,HWND_BOTTOM = 1,HWND_TOPMOST = -1,HWND_NOTOPMOST = -2,};
enum MACRO_IDIGNORE {IDIGNORE = 5,};
enum MACRO_ID_GROUP {ID_GROUP = 120,ID_CURRENT = 121,ID_CURRENTICON = 122,ID_DEFAULT = 123,ID_DEFAULTICON = 124,ID_FROMFILE = 125,ID_FROMFILEEDIT = 126,ID_ICONLIST = 127,ID_LABEL = 128,ID_LABELEDIT = 129,ID_BROWSE = 130,ID_RESULTICON = 132,ID_RESULTLABEL = 133,};
enum MACRO_INKWIDTH {INKWIDTH_MINIMUM = 0,INKWIDTH_MAXIMUM = 15,};
enum MACRO_LF_FIXED {LF_FIXED = 1,LF_FREE = 2,LF_MOVEABLE = 4,};
enum MACRO_LINECAPS {LINECAPS = 30,POLYGONALCAPS = 32,};
enum MACRO_LPDFNULL {LPDFNULL = 0,};
enum MACRO_MAX_DATA {MAX_DATA = 11,MAX_PATH = 255,MAX_MODULE_NAME = 9,MAX_CLASSNAME = 255,};
enum MACRO_MCI_OPEN {MCI_OPEN = 0x803,MCI_CLOSE = 0x804,MCI_ESCAPE = 0x805,MCI_PLAY = 0x806,MCI_SEEK = 0x807,MCI_STOP = 0x808,MCI_PAUSE = 0x809,MCI_INFO = 0x80A,MCI_GETDEVCAPS = 0x80B,MCI_SPIN = 0x80C,MCI_SET = 0x80D,MCI_STEP = 0x80E,MCI_RECORD = 0x80F,MCI_SYSINFO = 0x810,MCI_BREAK = 0x811,MCI_SOUND = 0x812,MCI_SAVE = 0x813,MCI_STATUS = 0x814,MCI_CUE = 0x830,MCI_REALIZE = 0x840,MCI_WINDOW = 0x841,MCI_PUT = 0x842,MCI_WHERE = 0x843,MCI_FREEZE = 0x844,MCI_UNFREEZE = 0x845,MCI_LOAD = 0x850,MCI_CUT = 0x851,MCI_COPY = 0x852,MCI_PASTE = 0x853,MCI_UPDATE = 0x854,MCI_RESUME = 0x855,MCI_DELETE = 0x856,MCI_USER_MESSAGES = 0xC00,MCI_ALL_DEVICE_ID = 0xFFFF,MCI_DEVTYPE_VCR = 0x201,MCI_DEVTYPE_VIDEODISC = 0x202,MCI_DEVTYPE_OVERLAY = 0x203,MCI_DEVTYPE_CD_AUDIO = 0x204,MCI_DEVTYPE_DAT = 0x205,MCI_DEVTYPE_SCANNER = 0x206,MCI_DEVTYPE_ANIMATION = 0x207,MCI_DEVTYPE_DIGITAL_VIDEO = 0x208,MCI_DEVTYPE_OTHER = 0x209,MCI_DEVTYPE_WAVEFORM_AUDIO = 0x20A,MCI_DEVTYPE_SEQUENCER = 0x20B,MCI_DEVTYPE_FIRST = 0x201,MCI_DEVTYPE_LAST = 0x20B,MCI_MODE_NOT_READY = 0x20C,MCI_MODE_STOP = 0x20D,MCI_MODE_PLAY = 0x20E,MCI_MODE_RECORD = 0x20F,MCI_MODE_SEEK = 0x210,MCI_MODE_PAUSE = 0x211,MCI_MODE_OPEN = 0x212,MCI_FORMAT_MILLISECONDS = 0x0,MCI_FORMAT_HMS = 0x1,MCI_FORMAT_MSF = 0x2,MCI_FORMAT_FRAMES = 0x3,MCI_FORMAT_SMPTE_24 = 0x4,MCI_FORMAT_SMPTE_25 = 0x5,MCI_FORMAT_SMPTE_30 = 0x6,MCI_FORMAT_SMPTE_30DROP = 0x7,MCI_FORMAT_BYTES = 0x8,MCI_FORMAT_SAMPLES = 0x9,MCI_FORMAT_TMSF = 0xA,MCI_NOTIFY_SUCCESSFUL = 0x1,MCI_NOTIFY_SUPERSEDED = 0x2,MCI_NOTIFY_ABORTED = 0x4,MCI_NOTIFY_FAILURE = 0x8,MCI_NOTIFY = 0x1,MCI_WAIT = 0x2,MCI_FROM = 0x4,MCI_TO = 0x8,MCI_TRACK = 0x10,MCI_OPEN_SHAREABLE = 0x100,MCI_OPEN_ELEMENT = 0x200,MCI_OPEN_ALIAS = 0x400,MCI_OPEN_ELEMENT_ID = 0x800,MCI_OPEN_TYPE_ID = 0x1000,MCI_OPEN_TYPE = 0x2000,MCI_SEEK_TO_START = 0x100,MCI_SEEK_TO_END = 0x200,MCI_STATUS_ITEM = 0x100,MCI_STATUS_START = 0x200,MCI_STATUS_LENGTH = 0x1,MCI_STATUS_POSITION = 0x2,MCI_STATUS_NUMBER_OF_TRACKS = 0x3,MCI_STATUS_MODE = 0x4,MCI_STATUS_MEDIA_PRESENT = 0x5,MCI_STATUS_TIME_FORMAT = 0x6,MCI_STATUS_READY = 0x7,MCI_STATUS_CURRENT_TRACK = 0x8,MCI_INFO_PRODUCT = 0x100,MCI_INFO_FILE = 0x200,MCI_GETDEVCAPS_ITEM = 0x100,MCI_GETDEVCAPS_CAN_RECORD = 0x1,MCI_GETDEVCAPS_HAS_AUDIO = 0x2,MCI_GETDEVCAPS_HAS_VIDEO = 0x3,MCI_GETDEVCAPS_DEVICE_TYPE = 0x4,MCI_GETDEVCAPS_USES_FILES = 0x5,MCI_GETDEVCAPS_COMPOUND_DEVICE = 0x6,MCI_GETDEVCAPS_CAN_EJECT = 0x7,MCI_GETDEVCAPS_CAN_PLAY = 0x8,MCI_GETDEVCAPS_CAN_SAVE = 0x9,MCI_SYSINFO_QUANTITY = 0x100,MCI_SYSINFO_OPEN = 0x200,MCI_SYSINFO_NAME = 0x400,MCI_SYSINFO_INSTALLNAME = 0x800,MCI_SET_DOOR_OPEN = 0x100,MCI_SET_DOOR_CLOSED = 0x200,MCI_SET_TIME_FORMAT = 0x400,MCI_SET_AUDIO = 0x800,MCI_SET_VIDEO = 0x1000,MCI_SET_ON = 0x2000,MCI_SET_OFF = 0x4000,MCI_SET_AUDIO_ALL = 0x0,MCI_SET_AUDIO_LEFT = 0x1,MCI_SET_AUDIO_RIGHT = 0x2,MCI_BREAK_KEY = 0x100,MCI_BREAK_HWND = 0x200,MCI_BREAK_OFF = 0x400,MCI_RECORD_INSERT = 0x100,MCI_RECORD_OVERWRITE = 0x200,MCI_SOUND_NAME = 0x100,MCI_SAVE_FILE = 0x100,MCI_LOAD_FILE = 0x100,MCI_VD_MODE_PARK = 0x401,MCI_VD_MEDIA_CLV = 0x402,MCI_VD_MEDIA_CAV = 0x403,MCI_VD_MEDIA_OTHER = 0x404,MCI_VD_FORMAT_TRACK = 0x4001,MCI_VD_PLAY_REVERSE = 0x0,MCI_VD_PLAY_FAST = 0x0,MCI_VD_PLAY_SPEED = 0x0,MCI_VD_PLAY_SCAN = 0x0,MCI_VD_PLAY_SLOW = 0x0,MCI_VD_SEEK_REVERSE = 0x0,MCI_VD_STATUS_SPEED = 0x4002,MCI_VD_STATUS_FORWARD = 0x4003,MCI_VD_STATUS_MEDIA_TYPE = 0x4004,MCI_VD_STATUS_SIDE = 0x4005,MCI_VD_STATUS_DISC_SIZE = 0x4006,MCI_VD_GETDEVCAPS_CLV = 0x0,MCI_VD_GETDEVCAPS_CAV = 0x0,MCI_VD_SPIN_UP = 0x0,MCI_VD_SPIN_DOWN = 0x0,MCI_VD_GETDEVCAPS_CAN_REVERSE = 0x4002,MCI_VD_GETDEVCAPS_FAST_RATE = 0x4003,MCI_VD_GETDEVCAPS_SLOW_RATE = 0x4004,MCI_VD_GETDEVCAPS_NORMAL_RATE = 0x4005,MCI_VD_STEP_FRAMES = 0x0,MCI_VD_STEP_REVERSE = 0x0,MCI_VD_ESCAPE_STRING = 0x100,MCI_WAVE_OPEN_BUFFER = 0x0,MCI_WAVE_SET_FORMATTAG = 0x0,MCI_WAVE_SET_CHANNELS = 0x0,MCI_WAVE_SET_SAMPLESPERSEC = 0x0,MCI_WAVE_SET_AVGBYTESPERSEC = 0x0,MCI_WAVE_SET_BLOCKALIGN = 0x0,MCI_WAVE_SET_BITSPERSAMPLE = 0x0,MCI_WAVE_INPUT = 0x0,MCI_WAVE_OUTPUT = 0x0,MCI_WAVE_STATUS_FORMATTAG = 0x4001,MCI_WAVE_STATUS_CHANNELS = 0x4002,MCI_WAVE_STATUS_SAMPLESPERSEC = 0x4003,MCI_WAVE_STATUS_AVGBYTESPERSEC = 0x4004,MCI_WAVE_STATUS_BLOCKALIGN = 0x4005,MCI_WAVE_STATUS_BITSPERSAMPLE = 0x4006,MCI_WAVE_STATUS_LEVEL = 0x4007,MCI_WAVE_SET_ANYINPUT = 0x0,MCI_WAVE_SET_ANYOUTPUT = 0x0,MCI_WAVE_GETDEVCAPS_INPUTS = 0x4001,MCI_WAVE_GETDEVCAPS_OUTPUTS = 0x4002,MCI_SEQ_DIV_PPQN = 0x4C0,MCI_SEQ_DIV_SMPTE_24 = 0x4C1,MCI_SEQ_DIV_SMPTE_25 = 0x4C2,MCI_SEQ_DIV_SMPTE_30DROP = 0x4C3,MCI_SEQ_DIV_SMPTE_30 = 0x4C4,MCI_SEQ_FORMAT_SONGPTR = 0x4001,MCI_SEQ_FILE = 0x4002,MCI_SEQ_MIDI = 0x4003,MCI_SEQ_SMPTE = 0x4004,MCI_SEQ_NONE = 0xFFFD,MCI_SEQ_STATUS_TEMPO = 0x4002,MCI_SEQ_STATUS_PORT = 0x4003,MCI_SEQ_STATUS_SLAVE = 0x4007,MCI_SEQ_STATUS_MASTER = 0x4008,MCI_SEQ_STATUS_OFFSET = 0x4009,MCI_SEQ_STATUS_DIVTYPE = 0x400A,MCI_SEQ_SET_TEMPO = 0x0,MCI_SEQ_SET_PORT = 0x0,MCI_SEQ_SET_SLAVE = 0x0,MCI_SEQ_SET_MASTER = 0x0,MCI_SEQ_SET_OFFSET = 0x0,MCI_ANIM_OPEN_WS = 0x0,MCI_ANIM_OPEN_PARENT = 0x0,MCI_ANIM_OPEN_NOSTATIC = 0x0,MCI_ANIM_PLAY_SPEED = 0x0,MCI_ANIM_PLAY_REVERSE = 0x0,MCI_ANIM_PLAY_FAST = 0x0,MCI_ANIM_PLAY_SLOW = 0x0,MCI_ANIM_PLAY_SCAN = 0x0,MCI_ANIM_STEP_REVERSE = 0x0,MCI_ANIM_STEP_FRAMES = 0x0,MCI_ANIM_STATUS_SPEED = 0x4001,MCI_ANIM_STATUS_FORWARD = 0x4002,MCI_ANIM_STATUS_HWND = 0x4003,MCI_ANIM_STATUS_HPAL = 0x4004,MCI_ANIM_STATUS_STRETCH = 0x4005,MCI_ANIM_INFO_TEXT = 0x0,MCI_ANIM_GETDEVCAPS_CAN_REVERSE = 0x4001,MCI_ANIM_GETDEVCAPS_FAST_RATE = 0x4002,MCI_ANIM_GETDEVCAPS_SLOW_RATE = 0x4003,MCI_ANIM_GETDEVCAPS_NORMAL_RATE = 0x4004,MCI_ANIM_GETDEVCAPS_PALETTES = 0x4006,MCI_ANIM_GETDEVCAPS_CAN_STRETCH = 0x4007,MCI_ANIM_GETDEVCAPS_MAX_WINDOWS = 0x4008,MCI_ANIM_REALIZE_NORM = 0x0,MCI_ANIM_REALIZE_BKGD = 0x0,MCI_ANIM_WINDOW_HWND = 0x0,MCI_ANIM_WINDOW_STATE = 0x0,MCI_ANIM_WINDOW_TEXT = 0x0,MCI_ANIM_WINDOW_ENABLE_STRETCH = 0x0,MCI_ANIM_WINDOW_DISABLE_STRETCH = 0x0,MCI_ANIM_WINDOW_DEFAULT = 0x0,MCI_ANIM_RECT = 0x0,MCI_ANIM_PUT_SOURCE = 0x0,MCI_ANIM_PUT_DESTINATION = 0x0,MCI_ANIM_WHERE_SOURCE = 0x0,MCI_ANIM_WHERE_DESTINATION = 0x0,MCI_ANIM_UPDATE_HDC = 0x0,MCI_OVLY_OPEN_WS = 0x0,MCI_OVLY_OPEN_PARENT = 0x0,MCI_OVLY_STATUS_HWND = 0x4001,MCI_OVLY_STATUS_STRETCH = 0x4002,MCI_OVLY_INFO_TEXT = 0x0,MCI_OVLY_GETDEVCAPS_CAN_STRETCH = 0x4001,MCI_OVLY_GETDEVCAPS_CAN_FREEZE = 0x4002,MCI_OVLY_GETDEVCAPS_MAX_WINDOWS = 0x4003,MCI_OVLY_WINDOW_HWND = 0x0,MCI_OVLY_WINDOW_STATE = 0x0,MCI_OVLY_WINDOW_TEXT = 0x0,MCI_OVLY_WINDOW_ENABLE_STRETCH = 0x0,MCI_OVLY_WINDOW_DISABLE_STRETCH = 0x0,MCI_OVLY_WINDOW_DEFAULT = 0x0,MCI_OVLY_RECT = 0x0,MCI_OVLY_PUT_SOURCE = 0x0,MCI_OVLY_PUT_DESTINATION = 0x0,MCI_OVLY_PUT_FRAME = 0x0,MCI_OVLY_PUT_VIDEO = 0x0,MCI_OVLY_WHERE_SOURCE = 0x0,MCI_OVLY_WHERE_DESTINATION = 0x0,MCI_OVLY_WHERE_FRAME = 0x0,MCI_OVLY_WHERE_VIDEO = 0x0,};
enum MACRO_MIDICAPS {MIDICAPS_VOLUME = 0x1,MIDICAPS_LRVOLUME = 0x2,MIDICAPS_CACHE = 0x4,};
enum MACRO_MMSYSERR {MMSYSERR_NOERROR = 0,MMSYSERR_ERROR = 1,MMSYSERR_BADDEVICEID = 2,MMSYSERR_NOTENABLED = 3,MMSYSERR_ALLOCATED = 4,MMSYSERR_INVALHANDLE = 5,MMSYSERR_NODRIVER = 6,MMSYSERR_NOMEM = 7,MMSYSERR_NOTSUPPORTED = 8,MMSYSERR_BADERRNUM = 9,MMSYSERR_INVALFLAG = 10,MMSYSERR_INVALPARAM = 11,MMSYSERR_LASTERROR = 11,};
enum MACRO_NEWFRAME {NEWFRAME = 1,};
enum MACRO_NEXTBAND {NEXTBAND = 3,SETCOLORTABLE = 4,};
enum MACRO_NOPARITY {NOPARITY = 0,ODDPARITY = 1,EVENPARITY = 2,};
enum MACRO_NUMFONTS {NUMFONTS = 22,};
enum MACRO_OLEIVERB {OLEIVERB_PRIMARY = 0,OLEIVERB_SHOW = -1,OLEIVERB_OPEN = -2,OLEIVERB_HIDE = -3,OLEIVERB_UIACTIVATE = -4,OLEIVERB_INPLACEACTIVATE = -5,OLEIVERB_DISCARDUNDOSTATE = -6,};
enum MACRO_OLEOBJ_E {OLEOBJ_E_NOVERBS = 384,OLEOBJ_E_INVALIDVERB = 385,OLEOBJ_S_INVALIDVERB = 384,OLEOBJ_S_CANNOT_DOVERB_NOW = 385,OLEOBJ_S_INVALIDHWND = 386,};
enum MACRO_PATPAINT {PATPAINT = 0xA09,};
enum MACRO_PER_INCH {HIMETRIC_PER_INCH = 2540,PTS_PER_INCH = 72,};
enum MACRO_RECOVERY {WSANO_RECOVERY = 11003,NO_RECOVERY = 11003,};
enum MACRO_RESETDEV {RESETDEV = 7,LPTx = 128,};
enum MACRO_ROTFLAGS {ROTFLAGS_REGISTRATIONKEEPSALIVE = 1,};
enum MACRO_SET_CLIP {SET_CLIP_BOX = 4108,SET_BOUNDS = 4109,};
enum MACRO_SEVERITY {SEVERITY_SUCCESS = 0,SEVERITY_ERROR = 1,};
enum MACRO_SRCERASE {SRCERASE = 0x328,};
enum MACRO_SRCPAINT {SRCPAINT = 0x86,};
enum MACRO_TEXTCAPS {TEXTCAPS = 34,};
enum MACRO_VERTSIZE {VERTSIZE = 6,HORZRES = 8,};
enum MACRO_WAVECAPS {WAVECAPS_PITCH = 0x1,WAVECAPS_PLAYBACKRATE = 0x2,WAVECAPS_VOLUME = 0x4,WAVECAPS_LRVOLUME = 0x8,WAVECAPS_SYNC = 0x10,};
enum MACRO_WH_DEBUG {WH_DEBUG = 9,};
enum MACRO_WH_MOUSE {WH_MOUSE = 7,};
enum MACRO_WM_PAINT {WM_PAINT = 0xF,WM_ERASEBKGND = 0x14,WM_ICONERASEBKGND = 0x27,};
enum MACRO_WSAEBADF {WSAEBADF = 10009,};
enum MACRO_WSAEINTR {WSAEINTR = 10004,};
enum MACRO_WSAELOOP {WSAELOOP = 10062,};
enum MACRO_ctlFirst {ctlFirst = 0x400,};
enum MACRO_iSycNull {iSycNull = -1,};
typedef struct tagMCI_INFO_PARMS MCI_INFO_PARMS;
typedef struct tagMCI_LOAD_PARMS MCI_LOAD_PARMS;
typedef struct tagMCI_OPEN_PARMS MCI_OPEN_PARMS;
typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;
typedef struct tagMCI_SAVE_PARMS MCI_SAVE_PARMS;
typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;
typedef struct tagOLEUIEDITLINKS OLEUIEDITLINKS;
typedef struct _LARGE_INTEGER *PLARGE_INTEGER;
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;
typedef struct _ULARGE_INTEGER ULARGE_INTEGER;
typedef struct _C7C46F6CCBD2CAD1FCFEC4764C87E3D1 *lpMapiFileDesc;
enum tagOLELINKBIND {OLELINKBIND_EVENIFCLASSDIFF = 0x1,};
enum tagPENDINGTYPE {PENDINGTYPE_TOPLEVEL = 0x1,PENDINGTYPE_NESTED = 0x2,};
enum tagSTREAM_SEEK {STREAM_SEEK_SET = 0x0,STREAM_SEEK_CUR = 0x1,STREAM_SEEK_END = 0x2,};
typedef struct tagCBT_CREATEWND CBT_CREATEWND;
typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;
typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;
struct IClassFactory {struct IClassFactoryVtbl *lpVtbl;};
struct IEnumSTATDATA {struct IEnumSTATDATAVtbl *lpVtbl;};
typedef struct tagINTERFACEDATA INTERFACEDATA;
typedef struct tagINTERFACEIMPL INTERFACEIMPL;
typedef struct tagINTERFACEINFO INTERFACEINFO;
struct IOleContainer {struct IOleContainerVtbl *lpVtbl;};
typedef struct _LARGE_INTEGER LARGE_INTEGER;
typedef IAdviseSink2 *LPADVISESINK2;
typedef struct tagENUMLOGFONT *LPENUMLOGFONT;
typedef IEnumMoniker *LPENUMMONIKER;
typedef IEnumOLEVERB *LPENUMOLEVERB;
typedef IEnumSTATSTG *LPENUMSTATSTG;
typedef IEnumUnknown *LPENUMUNKNOWN;
typedef IEnumVARIANT *LPENUMVARIANT;
typedef struct tagKERNINGPAIR *LPKERNINGPAIR;
typedef IPersistFile *LPPERSISTFILE;
typedef IRootStorage *LPROOTSTORAGE;
typedef struct sockaddr_in *LPSOCKADDR_IN;
typedef struct tagTTPOLYCURVE *LPTTPOLYCURVE;
typedef IViewObject2 *LPVIEWOBJECT2;
enum MACRO_ADDRESS {WSANO_ADDRESS = 11004,NO_ADDRESS = 11004,};
enum MACRO_ASPECTX {ASPECTX = 40,};
enum MACRO_ASPECTY {ASPECTY = 42,};
enum MACRO_AUXCAPS {AUXCAPS_CDAUDIO = 1,AUXCAPS_AUXIN = 2,AUXCAPS_VOLUME = 1,AUXCAPS_LRVOLUME = 2,};
enum MACRO_BUFFLEN {BUFFLEN = 255,};
enum MACRO_CACHE_E {CACHE_E_NOCACHE_UPDATED = 368,CACHE_S_FORMATETC_NOTSUPPORTED = 368,CACHE_S_SAMECACHE = 369,CACHE_S_SOMECACHES_NOTUPDATED = 370,};
enum MACRO_CB_OKAY {CB_OKAY = 0,CB_ERR = -1,CB_ERRSPACE = -2,};
enum MACRO_CHARSET {ANSI_CHARSET = 0,DEFAULT_CHARSET = 1,SYMBOL_CHARSET = 2,SHIFTJIS_CHARSET = 128,HANGEUL_CHARSET = 129,CHINESEBIG5_CHARSET = 136,OEM_CHARSET = 255,};
enum MACRO_CLIPBRD {CLIPBRD_E_FIRST = 0x1D0,CLIPBRD_E_LAST = 0x1DF,CLIPBRD_S_FIRST = 0x1D0,CLIPBRD_S_LAST = 0x1DF,};
enum MACRO_DEFAULT {DEFAULT_PALETTE = 15,};
enum MACRO_DMCOLOR {DMCOLOR_MONOCHROME = 1,DMCOLOR_COLOR = 2,};
enum MACRO_DMPAPER {DMPAPER_LETTER = 1,DMPAPER_LETTERSMALL = 2,DMPAPER_TABLOID = 3,DMPAPER_LEDGER = 4,DMPAPER_LEGAL = 5,DMPAPER_STATEMENT = 6,DMPAPER_EXECUTIVE = 7,DMPAPER_A3 = 8,DMPAPER_A4 = 9,DMPAPER_A4SMALL = 10,DMPAPER_A5 = 11,DMPAPER_B4 = 12,DMPAPER_B5 = 13,DMPAPER_FOLIO = 14,DMPAPER_QUARTO = 15,DMPAPER_10X14 = 16,DMPAPER_11X17 = 17,DMPAPER_NOTE = 18,DMPAPER_ENV_9 = 19,DMPAPER_ENV_10 = 20,DMPAPER_ENV_11 = 21,DMPAPER_ENV_12 = 22,DMPAPER_ENV_14 = 23,DMPAPER_CSHEET = 24,DMPAPER_DSHEET = 25,DMPAPER_ESHEET = 26,DMPAPER_ENV_DL = 27,DMPAPER_ENV_C5 = 28,DMPAPER_ENV_C3 = 29,DMPAPER_ENV_C4 = 30,DMPAPER_ENV_C6 = 31,DMPAPER_ENV_C65 = 32,DMPAPER_ENV_B4 = 33,DMPAPER_ENV_B5 = 34,DMPAPER_ENV_B6 = 35,DMPAPER_ENV_ITALY = 36,DMPAPER_ENV_MONARCH = 37,DMPAPER_ENV_PERSONAL = 38,DMPAPER_FANFOLD_US = 39,DMPAPER_FANFOLD_STD_GERMAN = 40,DMPAPER_FANFOLD_LGL_GERMAN = 41,DMPAPER_LAST = 41,DMPAPER_USER = 256,};
enum MACRO_EMBDHLP {EMBDHLP_INPROC_HANDLER = 0x0,EMBDHLP_INPROC_SERVER = 0x1,EMBDHLP_CREATENOW = 0x0,EMBDHLP_DELAYCREATE = 0x0,};
enum MACRO_FD_READ {FD_READ = 0x1,FD_WRITE = 0x2,FD_OOB = 0x4,FD_ACCEPT = 0x8,FD_CONNECT = 0x10,FD_CLOSE = 0x20,};
enum MACRO_FMEVENT {FMEVENT_LOAD = 100,FMEVENT_UNLOAD = 101,FMEVENT_INITMENU = 102,FMEVENT_USER_REFRESH = 103,FMEVENT_SELCHANGE = 104,};
enum MACRO_FMFOCUS {FMFOCUS_DIR = 1,FMFOCUS_TREE = 2,FMFOCUS_DRIVES = 3,FMFOCUS_SEARCH = 4,};
enum MACRO_HTERROR {HTERROR = -2,};
enum MACRO_HTRIGHT {HTRIGHT = 11,};
enum MACRO_IDABORT {IDABORT = 3,IDRETRY = 4,};
enum MACRO_IDLFLAG {IDLFLAG_NONE = 0,IDLFLAG_FIN = 1,IDLFLAG_FOUT = 2,};
enum MACRO_IMPLINK {IMPLINK_IP = 155,IMPLINK_LOWEXPER = 156,IMPLINK_HIGHEXPER = 158,};
enum MACRO_INPLACE {INPLACE_E_FIRST = 0x1A0,INPLACE_E_LAST = 0x1AF,INPLACE_S_FIRST = 0x1A0,INPLACE_S_LAST = 0x1AF,};
enum MACRO_INVALID {INVALID_SOCKET = -1,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0x7F,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_ICMP = 1,IPPROTO_GGP = 2,IPPROTO_TCP = 6,IPPROTO_PUP = 12,IPPROTO_UDP = 17,IPPROTO_IDP = 22,IPPROTO_ND = 77,IPPROTO_RAW = 255,IPPROTO_MAX = 256,};
enum MACRO_LB_OKAY {LB_OKAY = 0,LB_ERR = -1,LB_ERRSPACE = -2,LB_CTLCODE = 0,};
enum MACRO_LZERROR {LZERROR_BADINHANDLE = -1,LZERROR_BADOUTHANDLE = -2,LZERROR_READ = -3,LZERROR_WRITE = -4,LZERROR_GLOBALLOC = -5,LZERROR_GLOBLOCK = -6,LZERROR_BADVALUE = -7,LZERROR_UNKNOWNALG = -8,};
enum MACRO_MARSHAL {MARSHAL_E_FIRST = 0x120,MARSHAL_E_LAST = 0x12F,MARSHAL_S_FIRST = 0x120,MARSHAL_S_LAST = 0x12F,};
enum MACRO_MDITILE {MDITILE_VERTICAL = 0x0,MDITILE_HORIZONTAL = 0x1,MDITILE_SKIPDISABLED = 0x2,};
enum MACRO_MIDIERR {MIDIERR_UNPREPARED = 64,MIDIERR_STILLPLAYING = 65,MIDIERR_NOMAP = 66,MIDIERR_NOTREADY = 67,MIDIERR_NODEVICE = 68,MIDIERR_INVALIDSETUP = 69,MIDIERR_LASTERROR = 69,};
enum MACRO_MMIOERR {MMIOERR_BASE = 256,MMIOERR_FILENOTFOUND = 257,MMIOERR_OUTOFMEMORY = 258,MMIOERR_CANNOTOPEN = 259,MMIOERR_CANNOTCLOSE = 260,MMIOERR_CANNOTREAD = 261,MMIOERR_CANNOTWRITE = 262,MMIOERR_CANNOTSEEK = 263,MMIOERR_CANNOTEXPAND = 264,MMIOERR_CHUNKNOTFOUND = 265,MMIOERR_UNBUFFERED = 266,};
enum MACRO_MONITOR {APPCLASS_MONITOR = 0x1,XTYP_MONITOR = 0x80F2,};
enum MACRO_NOERROR {NOERROR = 0,};
enum MACRO_NUMPENS {NUMPENS = 18,};
enum MACRO_ODBCVER {ODBCVER = 0x201,};
enum MACRO_PATCOPY {PATCOPY = 0x21,};
enum MACRO_QUALITY {DEFAULT_QUALITY = 0,DRAFT_QUALITY = 1,PROOF_QUALITY = 2,};
enum MACRO_REGDB_E {REGDB_E_READREGDB = 0x150,REGDB_E_WRITEREGDB = 0x151,REGDB_E_KEYMISSING = 0x152,REGDB_E_INVALIDVALUE = 0x153,REGDB_E_CLASSNOTREG = 0x154,REGDB_E_IIDNOTREG = 0x155,};
enum MACRO_SETXOFF {SETXOFF = 1,SETXON = 2,};
enum MACRO_SRCCOPY {SRCCOPY = 0x20,};
enum MACRO_STRETCH {STRETCH_ANDSCANS = 1,STRETCH_ORSCANS = 2,STRETCH_DELETESCANS = 3,};
enum MACRO_SUBLANG {SUBLANG_NEUTRAL = 0x0,SUBLANG_DEFAULT = 0x1,SUBLANG_SYS_DEFAULT = 0x2,SUBLANG_CHINESE_SIMPLIFIED = 0x2,SUBLANG_CHINESE_TRADITIONAL = 0x1,SUBLANG_DUTCH = 0x1,SUBLANG_DUTCH_BELGIAN = 0x2,SUBLANG_ENGLISH_US = 0x1,SUBLANG_ENGLISH_UK = 0x2,SUBLANG_ENGLISH_AUS = 0x3,SUBLANG_ENGLISH_CAN = 0x4,SUBLANG_ENGLISH_NZ = 0x5,SUBLANG_ENGLISH_EIRE = 0x6,SUBLANG_FRENCH = 0x1,SUBLANG_FRENCH_BELGIAN = 0x2,SUBLANG_FRENCH_CANADIAN = 0x3,SUBLANG_FRENCH_SWISS = 0x4,SUBLANG_GERMAN = 0x1,SUBLANG_GERMAN_SWISS = 0x2,SUBLANG_GERMAN_AUSTRIAN = 0x3,SUBLANG_ITALIAN = 0x1,SUBLANG_ITALIAN_SWISS = 0x2,SUBLANG_NORWEGIAN_BOKMAL = 0x1,SUBLANG_NORWEGIAN_NYNORSK = 0x2,SUBLANG_PORTUGUESE = 0x2,SUBLANG_PORTUGUESE_BRAZILIAN = 0x1,SUBLANG_SERBO_CROATIAN_CYRILLIC = 0x2,SUBLANG_SERBO_CROATIAN_LATIN = 0x1,SUBLANG_SPANISH = 0x1,SUBLANG_SPANISH_MEXICAN = 0x2,SUBLANG_SPANISH_MODERN = 0x3,};
enum MACRO_SUCCESS {SUCCESS_SUCCESS = 0,};
enum MACRO_TIMEOUT {TIMEOUT_ASYNC = -1,};
enum MACRO_UAE_BOX {UAE_BOX = 0,NO_UAE_BOX = 1,};
enum MACRO_VARIANT {VARIANT_NOVALUEPROP = 1,};
enum MACRO_VERTRES {VERTRES = 10,};
enum MACRO_WM_NULL {WM_NULL = 0x0,WM_USER = 0x400,};
enum MACRO_ctlLast {ctlLast = 0x4FF,};
enum MACRO_pshHelp {pshHelp = 1038,};
enum MACRO_wPntAll {wPntAll = 0xFFFF,};
typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;
typedef struct tagMONCONVSTRUCT MONCONVSTRUCT;
typedef struct tagMONLINKSTRUCT MONLINKSTRUCT;
typedef struct _CB9F4276D477D4EDC30066925B58EE0F MapiRecipDesc;
typedef struct tagNEWTEXTMETRIC NEWTEXTMETRIC;
typedef struct _OLESTREAMVTBL OLESTREAMVTBL;
typedef struct pcmwaveformat_tag PCMWAVEFORMAT;
typedef struct tagPENDATAHEADER PENDATAHEADER;
typedef struct tagOLEUICONVERT *POLEUICONVERT;
typedef struct _42792D5BBA08C54B20EEEC50F78E7D08 *lpMapiMessage;
struct tagCALBSTRUCT {int wOffsetX;int wOffsetY;int wDistinctWidth;int wDistinctHeight;};
enum tagINVOKEKIND {INVOKE_FUNC = 0x1,INVOKE_PROPERTYGET = 0x2,INVOKE_PROPERTYPUT = 0x4,INVOKE_PROPERTYPUTREF = 0x8,};
enum tagOLEWHICHMK {OLEWHICHMK_CONTAINER = 0x1,OLEWHICHMK_OBJREL = 0x2,OLEWHICHMK_OBJFULL = 0x3,};
enum tagPENDINGMSG {PENDINGMSG_CANCELCALL = 0x0,PENDINGMSG_WAITNOPROCESS = 0x1,PENDINGMSG_WAITDEFPROCESS = 0x2,};
enum tagSERVERCALL {SERVERCALL_ISHANDLED = 0x0,SERVERCALL_REJECTED = 0x1,SERVERCALL_RETRYLATER = 0x2,};
typedef struct tagCREATESTRUCT CREATESTRUCT;
typedef struct tagGLYPHMETRICS GLYPHMETRICS;
struct IAdviseSink2 {struct IAdviseSink2Vtbl *lpVtbl;};
struct IEnumMoniker {struct IEnumMonikerVtbl *lpVtbl;};
struct IEnumOLEVERB {struct IEnumOLEVERBVtbl *lpVtbl;};
struct IEnumSTATSTG {struct IEnumSTATSTGVtbl *lpVtbl;};
struct IEnumUnknown {struct IEnumUnknownVtbl *lpVtbl;};
struct IEnumVARIANT {struct IEnumVARIANTVtbl *lpVtbl;};
struct IPersistFile {struct IPersistFileVtbl *lpVtbl;};
struct IRootStorage {struct IRootStorageVtbl *lpVtbl;};
struct IViewObject2 {struct IViewObject2Vtbl *lpVtbl;};
typedef IAdviseSink *LPADVISESINK;
typedef struct tagCALBSTRUCT *LPCALBSTRUCT;
typedef IDataObject *LPDATAOBJECT;
typedef IDropSource *LPDROPSOURCE;
typedef IDropTarget *LPDROPTARGET;
typedef IEnumString *LPENUMSTRING;
typedef struct tagMETHODDATA *LPMETHODDATA;
typedef struct tagNEWCPLINFO *LPNEWCPLINFO;
typedef struct tagOEMPENINFO *LPOEMPENINFO;
typedef struct tagSTROKEINFO *LPSTROKEINFO;
typedef struct tagVARIANT *LPVARIANTARG;
typedef IViewObject *LPVIEWOBJECT;
enum MACRO_APPCMD {APPCMD_CLIENTONLY = 0x10,APPCMD_FILTERINITS = 0x20,APPCMD_MASK = 0xFF0,};
enum MACRO_ASPECT {ASPECT_FILTERING = 0x1,};
enum MACRO_CLRDTR {CLRDTR = 6,};
enum MACRO_DATA_E {DATA_E_FORMATETC = 100,DATA_S_SAMEFORMATETC = 304,};
enum MACRO_DISPID {DISPID_VALUE = 0,DISPID_UNKNOWN = -1,DISPID_PROPERTYPUT = -3,DISPID_NEWENUM = -4,DISPID_EVALUATE = -5,};
enum MACRO_DMLERR {DMLERR_NO_ERROR = 0,DMLERR_FIRST = 16384,DMLERR_ADVACKTIMEOUT = 16384,DMLERR_BUSY = 16385,DMLERR_DATAACKTIMEOUT = 16386,DMLERR_DLL_NOT_INITIALIZED = 16387,DMLERR_DLL_USAGE = 16388,DMLERR_EXECACKTIMEOUT = 16389,DMLERR_INVALIDPARAMETER = 16390,DMLERR_LOW_MEMORY = 16391,DMLERR_MEMORY_ERROR = 16392,DMLERR_NOTPROCESSED = 16393,DMLERR_NO_CONV_ESTABLISHED = 16394,DMLERR_POKEACKTIMEOUT = 16395,DMLERR_POSTMSG_FAILED = 16396,DMLERR_REENTRANCY = 16397,DMLERR_SERVER_DIED = 16398,DMLERR_SYS_ERROR = 16399,DMLERR_UNADVACKTIMEOUT = 16400,DMLERR_UNFOUND_QUEUE_ID = 16401,DMLERR_LAST = 16401,};
enum MACRO_DRVCNF {DRVCNF_CANCEL = 0x0,DRVCNF_OK = 0x1,DRVCNF_RESTART = 0x2,};
enum MACRO_DT_TOP {DT_TOP = 0x0,DT_LEFT = 0x0,DT_CENTER = 0x1,DT_RIGHT = 0x2,DT_VCENTER = 0x4,DT_BOTTOM = 0x8,DT_WORDBREAK = 0x10,DT_SINGLELINE = 0x20,DT_EXPANDTABS = 0x40,DT_TABSTOP = 0x80,DT_NOCLIP = 0x100,DT_EXTERNALLEADING = 0x200,DT_CALCRECT = 0x400,DT_NOPREFIX = 0x800,DT_INTERNAL = 0x1000,};
enum MACRO_FMMENU {FMMENU_FIRST = 1,FMMENU_LAST = 99,};
enum MACRO_GLOBAL {GLOBAL_ALL = 0,GLOBAL_LRU = 1,GLOBAL_FREE = 2,};
enum MACRO_HSHELL {HSHELL_WINDOWCREATED = 1,HSHELL_WINDOWDESTROYED = 2,HSHELL_ACTIVATESHELLWINDOW = 3,};
enum MACRO_HTLEFT {HTLEFT = 10,};
enum MACRO_HTMENU {HTMENU = 5,};
enum MACRO_HTZOOM {HTZOOM = 9,};
enum MACRO_IDHELP {IDHELP = 1038,};
enum MACRO_ID_APP {ID_APP = 100,};
enum MACRO_IGNORE {IGNORE = 0,INFINITE = -1,};
enum MACRO_INADDR {INADDR_ANY = 0x0,INADDR_LOOPBACK = 0x7F000001,INADDR_BROADCAST = 0xFFFFFFFF,INADDR_NONE = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_IPPORT {IPPORT_ECHO = 7,IPPORT_DISCARD = 9,IPPORT_SYSTAT = 11,IPPORT_DAYTIME = 13,IPPORT_NETSTAT = 15,IPPORT_FTP = 21,IPPORT_TELNET = 23,IPPORT_SMTP = 25,IPPORT_TIMESERVER = 37,IPPORT_NAMESERVER = 42,IPPORT_WHOIS = 43,IPPORT_MTP = 57,IPPORT_TFTP = 69,IPPORT_RJE = 77,IPPORT_FINGER = 79,IPPORT_TTYLINK = 87,IPPORT_SUPDUP = 95,IPPORT_EXECSERVER = 512,IPPORT_LOGINSERVER = 513,IPPORT_CMDSERVER = 514,IPPORT_EFSSERVER = 520,IPPORT_BIFFUDP = 512,IPPORT_WHOSERVER = 513,IPPORT_ROUTESERVER = 520,IPPORT_RESERVED = 1024,};
enum MACRO_JOYERR {JOYERR_NOERROR = 0,JOYERR_PARMS = 165,JOYERR_NOCANDO = 166,JOYERR_UNPLUGGED = 167,};
enum MACRO_LOCALE {LOCALE_NOUSEROVERRIDE = 0x0,LOCALE_ILANGUAGE = 0x1,LOCALE_SLANGUAGE = 0x2,LOCALE_SENGLANGUAGE = 0x1001,LOCALE_SABBREVLANGNAME = 0x3,LOCALE_SNATIVELANGNAME = 0x4,LOCALE_ICOUNTRY = 0x5,LOCALE_SCOUNTRY = 0x6,LOCALE_SENGCOUNTRY = 0x1002,LOCALE_SABBREVCTRYNAME = 0x7,LOCALE_SNATIVECTRYNAME = 0x8,LOCALE_IDEFAULTLANGUAGE = 0x9,LOCALE_IDEFAULTCOUNTRY = 0xA,LOCALE_IDEFAULTCODEPAGE = 0xB,LOCALE_SLIST = 0xC,LOCALE_IMEASURE = 0xD,LOCALE_SDECIMAL = 0xE,LOCALE_STHOUSAND = 0xF,LOCALE_SGROUPING = 0x10,LOCALE_IDIGITS = 0x11,LOCALE_ILZERO = 0x12,LOCALE_SNATIVEDIGITS = 0x13,LOCALE_SCURRENCY = 0x14,LOCALE_SINTLSYMBOL = 0x15,LOCALE_SMONDECIMALSEP = 0x16,LOCALE_SMONTHOUSANDSEP = 0x17,LOCALE_SMONGROUPING = 0x18,LOCALE_ICURRDIGITS = 0x19,LOCALE_IINTLCURRDIGITS = 0x1A,LOCALE_ICURRENCY = 0x1B,LOCALE_INEGCURR = 0x1C,LOCALE_SDATE = 0x1D,LOCALE_STIME = 0x1E,LOCALE_SSHORTDATE = 0x1F,LOCALE_SLONGDATE = 0x20,LOCALE_IDATE = 0x21,LOCALE_ILDATE = 0x22,LOCALE_ITIME = 0x23,LOCALE_ICENTURY = 0x24,LOCALE_ITLZERO = 0x25,LOCALE_IDAYLZERO = 0x26,LOCALE_IMONLZERO = 0x27,LOCALE_S1159 = 0x28,LOCALE_S2359 = 0x29,LOCALE_SDAYNAME1 = 0x2A,LOCALE_SDAYNAME2 = 0x2B,LOCALE_SDAYNAME3 = 0x2C,LOCALE_SDAYNAME4 = 0x2D,LOCALE_SDAYNAME5 = 0x2E,LOCALE_SDAYNAME6 = 0x2F,LOCALE_SDAYNAME7 = 0x30,LOCALE_SABBREVDAYNAME1 = 0x31,LOCALE_SABBREVDAYNAME2 = 0x32,LOCALE_SABBREVDAYNAME3 = 0x33,LOCALE_SABBREVDAYNAME4 = 0x34,LOCALE_SABBREVDAYNAME5 = 0x35,LOCALE_SABBREVDAYNAME6 = 0x36,LOCALE_SABBREVDAYNAME7 = 0x37,LOCALE_SMONTHNAME1 = 0x38,LOCALE_SMONTHNAME2 = 0x39,LOCALE_SMONTHNAME3 = 0x3A,LOCALE_SMONTHNAME4 = 0x3B,LOCALE_SMONTHNAME5 = 0x3C,LOCALE_SMONTHNAME6 = 0x3D,LOCALE_SMONTHNAME7 = 0x3E,LOCALE_SMONTHNAME8 = 0x3F,LOCALE_SMONTHNAME9 = 0x40,LOCALE_SMONTHNAME10 = 0x41,LOCALE_SMONTHNAME11 = 0x42,LOCALE_SMONTHNAME12 = 0x43,LOCALE_SABBREVMONTHNAME1 = 0x44,LOCALE_SABBREVMONTHNAME2 = 0x45,LOCALE_SABBREVMONTHNAME3 = 0x46,LOCALE_SABBREVMONTHNAME4 = 0x47,LOCALE_SABBREVMONTHNAME5 = 0x48,LOCALE_SABBREVMONTHNAME6 = 0x49,LOCALE_SABBREVMONTHNAME7 = 0x4A,LOCALE_SABBREVMONTHNAME8 = 0x4B,LOCALE_SABBREVMONTHNAME9 = 0x4C,LOCALE_SABBREVMONTHNAME10 = 0x4D,LOCALE_SABBREVMONTHNAME11 = 0x4E,LOCALE_SABBREVMONTHNAME12 = 0x4F,LOCALE_SPOSITIVESIGN = 0x50,LOCALE_SNEGATIVESIGN = 0x51,LOCALE_IPOSSIGNPOSN = 0x52,LOCALE_INEGSIGNPOSN = 0x53,LOCALE_IPOSSYMPRECEDES = 0x54,LOCALE_IPOSSEPBYSPACE = 0x55,LOCALE_INEGSYMPRECEDES = 0x56,LOCALE_INEGSEPBYSPACE = 0x57,};
enum MACRO_MCIERR {MCIERR_INVALID_DEVICE_ID = 257,MCIERR_UNRECOGNIZED_KEYWORD = 259,MCIERR_UNRECOGNIZED_COMMAND = 261,MCIERR_HARDWARE = 262,MCIERR_INVALID_DEVICE_NAME = 263,MCIERR_OUT_OF_MEMORY = 264,MCIERR_DEVICE_OPEN = 265,MCIERR_CANNOT_LOAD_DRIVER = 266,MCIERR_MISSING_COMMAND_STRING = 267,MCIERR_PARAM_OVERFLOW = 268,MCIERR_MISSING_STRING_ARGUMENT = 269,MCIERR_BAD_INTEGER = 270,MCIERR_PARSER_INTERNAL = 271,MCIERR_DRIVER_INTERNAL = 272,MCIERR_MISSING_PARAMETER = 273,MCIERR_UNSUPPORTED_FUNCTION = 274,MCIERR_FILE_NOT_FOUND = 275,MCIERR_DEVICE_NOT_READY = 276,MCIERR_INTERNAL = 277,MCIERR_DRIVER = 278,MCIERR_CANNOT_USE_ALL = 279,MCIERR_MULTIPLE = 280,MCIERR_EXTENSION_NOT_FOUND = 281,MCIERR_OUTOFRANGE = 282,MCIERR_FLAGS_NOT_COMPATIBLE = 284,MCIERR_FILE_NOT_SAVED = 286,MCIERR_DEVICE_TYPE_REQUIRED = 287,MCIERR_DEVICE_LOCKED = 288,MCIERR_DUPLICATE_ALIAS = 289,MCIERR_BAD_CONSTANT = 290,MCIERR_MUST_USE_SHAREABLE = 291,MCIERR_MISSING_DEVICE_NAME = 292,MCIERR_BAD_TIME_FORMAT = 293,MCIERR_NO_CLOSING_QUOTE = 294,MCIERR_DUPLICATE_FLAGS = 295,MCIERR_INVALID_FILE = 296,MCIERR_NULL_PARAMETER_BLOCK = 297,MCIERR_UNNAMED_RESOURCE = 298,MCIERR_NEW_REQUIRES_ALIAS = 299,MCIERR_NOTIFY_ON_AUTO_OPEN = 300,MCIERR_NO_ELEMENT_ALLOWED = 301,MCIERR_NONAPPLICABLE_FUNCTION = 302,MCIERR_ILLEGAL_FOR_AUTO_OPEN = 303,MCIERR_FILENAME_REQUIRED = 304,MCIERR_EXTRA_CHARACTERS = 305,MCIERR_DEVICE_NOT_INSTALLED = 306,MCIERR_GET_CD = 307,MCIERR_SET_CD = 308,MCIERR_SET_DRIVE = 309,MCIERR_DEVICE_LENGTH = 310,MCIERR_DEVICE_ORD_LENGTH = 311,MCIERR_NO_INTEGER = 312,MCIERR_WAVE_OUTPUTSINUSE = 320,MCIERR_WAVE_SETOUTPUTINUSE = 321,MCIERR_WAVE_INPUTSINUSE = 322,MCIERR_WAVE_SETINPUTINUSE = 323,MCIERR_WAVE_OUTPUTUNSPECIFIED = 324,MCIERR_WAVE_INPUTUNSPECIFIED = 325,MCIERR_WAVE_OUTPUTSUNSUITABLE = 326,MCIERR_WAVE_SETOUTPUTUNSUITABLE = 327,MCIERR_WAVE_INPUTSUNSUITABLE = 328,MCIERR_WAVE_SETINPUTUNSUITABLE = 329,MCIERR_SEQ_DIV_INCOMPATIBLE = 336,MCIERR_SEQ_PORT_INUSE = 337,MCIERR_SEQ_PORT_NONEXISTENT = 338,MCIERR_SEQ_PORT_MAPNODEVICE = 339,MCIERR_SEQ_PORT_MISCERROR = 340,MCIERR_SEQ_TIMER = 341,MCIERR_SEQ_PORTUNSPECIFIED = 342,MCIERR_SEQ_NOMIDIPRESENT = 343,MCIERR_NO_WINDOW = 346,MCIERR_CREATEWINDOW = 347,MCIERR_FILE_READ = 348,MCIERR_FILE_WRITE = 349,MCIERR_CUSTOM_DRIVER_BASE = 512,};
enum MACRO_MF_HSZ {MF_HSZ_INFO = 0x0,MF_SENDMSGS = 0x0,MF_POSTMSGS = 0x0,MF_CALLBACKS = 0x0,MF_ERRORS = 0x0,MF_LINKS = 0x0,MF_CONV = 0x0,MF_MASK = 0x0,};
enum MACRO_MK_ALT {MK_ALT = 0x20,};
enum MACRO_OLEOBJ {OLEOBJ_E_FIRST = 0x180,OLEOBJ_E_LAST = 0x18F,OLEOBJ_S_FIRST = 0x180,OLEOBJ_S_LAST = 0x18F,};
enum MACRO_PLANES {PLANES = 14,NUMBRUSHES = 16,};
enum MACRO_SETDTR {SETDTR = 5,};
enum MACRO_SETRTS {SETRTS = 3,CLRRTS = 4,};
enum MACRO_SOCKET {SOCKET_ERROR = -1,};
enum MACRO_SRCAND {SRCAND = 0xC6,};
enum MACRO_SYSPAL {SYSPAL_STATIC = 1,SYSPAL_NOSTATIC = 2,};
enum MACRO_SYSTEM {SYSTEM_FIXED_FONT = 16,};
enum MACRO_TIMERR {TIMERR_NOERROR = 0,TIMERR_NOCANDO = 97,TIMERR_STRUCT = 129,};
enum MACRO_VIEW_S {VIEW_S_ALREADY_FROZEN = 320,};
enum MACRO_WAVERR {WAVERR_BADFORMAT = 32,WAVERR_STILLPLAYING = 33,WAVERR_UNPREPARED = 34,WAVERR_SYNC = 35,WAVERR_LASTERROR = 35,};
enum MACRO_WH_CBT {WH_CBT = 5,};
enum MACRO_WINVER {WINVER = 0x30A,};
enum MACRO_WM_CPL {WM_CPL_LAUNCH = 2024,WM_CPL_LAUNCHED = 2025,};
enum MACRO_WM_CUT {WM_CUT = 0x300,WM_COPY = 0x301,WM_PASTE = 0x302,WM_CLEAR = 0x303,WM_UNDO = 0x304,WM_RENDERFORMAT = 0x305,WM_RENDERALLFORMATS = 0x306,WM_DESTROYCLIPBOARD = 0x307,WM_DRAWCLIPBOARD = 0x308,WM_PAINTCLIPBOARD = 0x309,WM_SIZECLIPBOARD = 0x30B,WM_VSCROLLCLIPBOARD = 0x30A,WM_HSCROLLCLIPBOARD = 0x30E,WM_ASKCBFORMATNAME = 0x30C,WM_CHANGECBCHAIN = 0x30D,WM_SETCURSOR = 0x20,};
enum MACRO_WM_DDE {WM_DDE_FIRST = 0x3E0,WM_DDE_INITIATE = 0x3E0,WM_DDE_TERMINATE = 0x3E1,WM_DDE_ADVISE = 0x3E2,WM_DDE_UNADVISE = 0x3E3,WM_DDE_ACK = 0x3E4,WM_DDE_DATA = 0x3E5,WM_DDE_REQUEST = 0x3E6,WM_DDE_POKE = 0x3E7,WM_DDE_EXECUTE = 0x3E8,WM_DDE_LAST = 0x3E8,};
enum MACRO_XCLASS {XCLASS_MASK = 0xFC00,XCLASS_BOOL = 0x1000,XCLASS_DATA = 0x2000,XCLASS_FLAGS = 0x4000,XCLASS_NOTIFICATION = 0x8000,};
typedef struct tagMETAFILEPICT METAFILEPICT;
typedef struct tagMONERRSTRUCT MONERRSTRUCT;
typedef struct tagMONHSZSTRUCT MONHSZSTRUCT;
typedef struct tagMONMSGSTRUCT MONMSGSTRUCT;
typedef struct tagMULTIKEYHELP MULTIKEYHELP;
typedef struct _C7C46F6CCBD2CAD1FCFEC4764C87E3D1 MapiFileDesc;
typedef struct tagOLEUICONVERT OLEUICONVERT;
typedef struct tagOFN OPENFILENAME;
typedef struct tagPALETTEENTRY PALETTEENTRY;
typedef struct sockaddr_in *PSOCKADDR_IN;
typedef struct tagSCREENPARAMS SCREENPARAMS;
typedef int VARIANT_BOOL;
typedef struct tagWINDEBUGINFO WINDEBUGINFO;
enum tagBINDSPEED {BINDSPEED_INDEFINITE = 0x1,BINDSPEED_MODERATE = 0x2,BINDSPEED_IMMEDIATE = 0x3,};
struct tagDDEADVISE {unsigned __int16 reserved : 14;unsigned __int16 fDeferUpd : 1;unsigned __int16 fAckReq : 1;int cfFormat;};
enum tagFUNCFLAGS {FUNCFLAG_FRESTRICTED = 0x1,};
enum tagMSHLFLAGS {MSHLFLAGS_NORMAL = 0x0,MSHLFLAGS_TABLESTRONG = 0x1,MSHLFLAGS_TABLEWEAK = 0x2,};
enum tagOLERENDER {OLERENDER_NONE = 0x0,OLERENDER_DRAW = 0x1,OLERENDER_FORMAT = 0x2,OLERENDER_ASIS = 0x3,};
enum tagOLEUPDATE {OLEUPDATE_ALWAYS = 0x1,OLEUPDATE_ONCALL = 0x3,};
enum tagTYPEFLAGS {TYPEFLAG_FAPPOBJECT = 0x1,TYPEFLAG_FCANCREATE = 0x2,};
typedef struct tagCHOOSECOLOR CHOOSECOLOR;
typedef struct tagCONVCONTEXT CONVCONTEXT;
typedef struct tagDATE_STRUCT DATE_STRUCT;
typedef struct tagENUMLOGFONT ENUMLOGFONT;
typedef struct tagFINDREPLACE FINDREPLACE;
typedef struct tagGLOBALENTRY GLOBALENTRY;
typedef struct tagHANDLETABLE HANDLETABLE;
typedef struct _925387C1A9AA03DD03B17550DEA320D0 HELPWININFO;
struct IAdviseSink {struct IAdviseSinkVtbl *lpVtbl;};
struct IDataObject {struct IDataObjectVtbl *lpVtbl;};
struct IDropSource {struct IDropSourceVtbl *lpVtbl;};
struct IDropTarget {struct IDropTargetVtbl *lpVtbl;};
struct IEnumString {struct IEnumStringVtbl *lpVtbl;};
struct IViewObject {struct IViewObjectVtbl *lpVtbl;};
typedef struct tagKERNINGPAIR KERNINGPAIR;
typedef struct tagBIND_OPTS *LPBIND_OPTS;
typedef struct tagBOXLAYOUT *LPBOXLAYOUT;
typedef struct tagEXCEPINFO *LPEXCEPINFO;
typedef struct tagFORMATETC *LPFORMATETC;
typedef ILockBytes *LPLOCKBYTES;
typedef IOleCache2 *LPOLECACHE2;
typedef IOleObject *LPOLEOBJECT;
typedef struct _OLESTREAM *LPOLESTREAM;
typedef struct tagOLEUIBUSY *LPOLEUIBUSY;
typedef IOleWindow *LPOLEWINDOW;
typedef struct tagPARAMDATA *LPPARAMDATA;
typedef struct tagPENPACKET *LPPENPACKET;
typedef struct tagSAFEARRAY *LPSAFEARRAY;
typedef struct tagSTGMEDIUM *LPSTGMEDIUM;
enum MACRO_AGAIN {WSATRY_AGAIN = 11002,TRY_AGAIN = 11002,};
enum MACRO_BRUSH {WHITE_BRUSH = 0,LTGRAY_BRUSH = 1,GRAY_BRUSH = 2,DKGRAY_BRUSH = 3,BLACK_BRUSH = 4,NULL_BRUSH = 5,HOLLOW_BRUSH = 5,};
enum MACRO_CACHE {CACHE_E_FIRST = 0x170,CACHE_E_LAST = 0x17F,CACHE_S_FIRST = 0x170,CACHE_S_LAST = 0x17F,};
enum MACRO_CAPS1 {CAPS1 = 94,};
enum MACRO_CCERR {CCERR_CHOOSECOLORCODES = 0x5000,};
enum MACRO_CDERR {CDERR_DIALOGFAILURE = 0xFFFF,CDERR_GENERALCODES = 0x0,CDERR_STRUCTSIZE = 0x1,CDERR_INITIALIZATION = 0x2,CDERR_NOTEMPLATE = 0x3,CDERR_NOHINSTANCE = 0x4,CDERR_LOADSTRFAILURE = 0x5,CDERR_FINDRESFAILURE = 0x6,CDERR_LOADRESFAILURE = 0x7,CDERR_LOCKRESFAILURE = 0x8,CDERR_MEMALLOCFAILURE = 0x9,CDERR_MEMLOCKFAILURE = 0xA,CDERR_NOHOOK = 0xB,CDERR_REGISTERMSGFAIL = 0xC,};
enum MACRO_CFERR {CFERR_CHOOSEFONTCODES = 0x2000,CFERR_NOFONTS = 0x2001,CFERR_MAXLESSTHANMIN = 0x2002,};
enum MACRO_CLASS {CLASS_E_NOAGGREGATION = 0x110,CLASS_E_CLASSNOTAVAILABLE = 0x111,};
enum MACRO_COLOR {COLOR_SCROLLBAR = 0,COLOR_BACKGROUND = 1,COLOR_ACTIVECAPTION = 2,COLOR_INACTIVECAPTION = 3,COLOR_MENU = 4,COLOR_WINDOW = 5,COLOR_WINDOWFRAME = 6,COLOR_MENUTEXT = 7,COLOR_WINDOWTEXT = 8,COLOR_CAPTIONTEXT = 9,COLOR_ACTIVEBORDER = 10,COLOR_INACTIVEBORDER = 11,COLOR_APPWORKSPACE = 12,COLOR_HIGHLIGHT = 13,COLOR_HIGHLIGHTTEXT = 14,COLOR_BTNFACE = 15,COLOR_BTNSHADOW = 16,COLOR_GRAYTEXT = 17,COLOR_BTNTEXT = 18,COLOR_INACTIVECAPTIONTEXT = 19,COLOR_BTNHIGHLIGHT = 20,};
enum MACRO_DMBIN {DMBIN_UPPER = 1,DMBIN_ONLYONE = 1,DMBIN_LOWER = 2,DMBIN_MIDDLE = 3,DMBIN_MANUAL = 4,DMBIN_ENVELOPE = 5,DMBIN_ENVMANUAL = 6,DMBIN_AUTO = 7,DMBIN_TRACTOR = 8,DMBIN_SMALLFMT = 9,DMBIN_LARGEFMT = 10,DMBIN_LARGECAPACITY = 11,DMBIN_CASSETTE = 14,DMBIN_LAST = 14,DMBIN_USER = 256,};
enum MACRO_DMDUP {DMDUP_SIMPLEX = 1,DMDUP_VERTICAL = 2,DMDUP_HORIZONTAL = 3,};
enum MACRO_DMRES {DMRES_DRAFT = -1,DMRES_LOW = -2,DMRES_MEDIUM = -3,DMRES_HIGH = -4,};
enum MACRO_DRIVE {DRIVE_REMOVABLE = 2,DRIVE_FIXED = 3,DRIVE_REMOTE = 4,};
enum MACRO_DRVEA {DRVEA_NORMALEXIT = 0x1,DRVEA_ABNORMALEXIT = 0x2,};
enum MACRO_DVGEN {DVGEN_E_FIRST = 100,};
enum MACRO_ERROR {ERROR = 0,NULLREGION = 1,SIMPLEREGION = 2,};
enum MACRO_FNERR {FNERR_FILENAMECODES = 0x3000,FNERR_SUBCLASSFAILURE = 0x3001,FNERR_INVALIDFILENAME = 0x3002,FNERR_BUFFERTOOSMALL = 0x3003,};
enum MACRO_FRAME {FRAME_FAR = 0,FRAME_NEAR = 1,};
enum MACRO_FRERR {FRERR_FINDREPLACECODES = 0x4000,FRERR_BUFFERLENGTHZERO = 0x4001,};
enum MACRO_HDATA {HDATA_APPOWNED = 0x1,};
enum MACRO_HFILE {HFILE_ERROR = -1,};
enum MACRO_HTTOP {HTTOP = 12,};
enum MACRO_IDYES {IDYES = 6,};
enum MACRO_ID_EL {ID_EL_CHANGESOURCE = 201,ID_EL_AUTOMATIC = 202,ID_EL_CLOSE = 208,ID_EL_CANCELLINK = 209,ID_EL_UPDATENOW = 210,ID_EL_OPENSOURCE = 211,ID_EL_MANUAL = 212,ID_EL_LINKSOURCE = 216,ID_EL_LINKTYPE = 217,ID_EL_UPDATE = 218,ID_EL_NULL = -1,ID_EL_LINKSLISTBOX = 206,ID_EL_COL1 = 220,ID_EL_COL2 = 221,ID_EL_COL3 = 222,};
enum MACRO_ID_IO {ID_IO_CREATENEW = 2100,ID_IO_CREATEFROMFILE = 2101,ID_IO_LINKFILE = 2102,ID_IO_OBJECTTYPELIST = 2103,ID_IO_DISPLAYASICON = 2104,ID_IO_CHANGEICON = 2105,ID_IO_FILE = 2106,ID_IO_FILEDISPLAY = 2107,ID_IO_RESULTIMAGE = 2108,ID_IO_RESULTTEXT = 2109,ID_IO_ICONDISPLAY = 2110,ID_IO_OBJECTTYPETEXT = 2111,ID_IO_FILETEXT = 2112,ID_IO_FILETYPE = 2113,};
enum MACRO_ID_PS {ID_PS_PASTE = 500,ID_PS_PASTELINK = 501,ID_PS_SOURCETEXT = 502,ID_PS_PASTELIST = 503,ID_PS_PASTELINKLIST = 504,ID_PS_DISPLAYLIST = 505,ID_PS_DISPLAYASICON = 506,ID_PS_ICONDISPLAY = 507,ID_PS_CHANGEICON = 508,ID_PS_RESULTIMAGE = 509,ID_PS_RESULTTEXT = 510,ID_PS_RESULTGROUP = 511,ID_PS_STXSOURCE = 512,ID_PS_STXAS = 513,};
enum MACRO_ID_PU {ID_PU_LINKS = 900,ID_PU_TEXT = 901,ID_PU_CONVERT = 902,ID_PU_BROWSE = 904,ID_PU_METER = 905,ID_PU_PERCENT = 906,ID_PU_STOP = 907,ID_DUMMY = 999,};
enum MACRO_LCMAP {LCMAP_LOWERCASE = 0x100,LCMAP_UPPERCASE = 0x200,LCMAP_SORTKEY = 0x400,LCMAP_HALFWIDTH = 0x800,LCMAP_FULLWIDTH = 0x1000,LCMAP_HIRAGANA = 0x2000,LCMAP_KATAKANA = 0x4000,};
enum MACRO_MMIOM {MMIOM_READ = 0,MMIOM_WRITE = 1,MMIOM_SEEK = 2,MMIOM_OPEN = 3,MMIOM_CLOSE = 4,MMIOM_WRITEFLUSH = 5,MMIOM_RENAME = 6,MMIOM_USER = -32768,};
enum MACRO_OLEUI {OLEUI_FALSE = 0,OLEUI_SUCCESS = 1,OLEUI_OK = 1,OLEUI_CANCEL = 2,OLEUI_ERR_STANDARDMIN = 100,OLEUI_ERR_STRUCTURENULL = 101,OLEUI_ERR_STRUCTUREINVALID = 102,OLEUI_ERR_CBSTRUCTINCORRECT = 103,OLEUI_ERR_HWNDOWNERINVALID = 104,OLEUI_ERR_LPSZCAPTIONINVALID = 105,OLEUI_ERR_LPFNHOOKINVALID = 106,OLEUI_ERR_HINSTANCEINVALID = 107,OLEUI_ERR_LPSZTEMPLATEINVALID = 108,OLEUI_ERR_HRESOURCEINVALID = 109,OLEUI_ERR_FINDTEMPLATEFAILURE = 110,OLEUI_ERR_LOADTEMPLATEFAILURE = 111,OLEUI_ERR_DIALOGFAILURE = 112,OLEUI_ERR_LOCALMEMALLOC = 113,OLEUI_ERR_GLOBALMEMALLOC = 114,OLEUI_ERR_LOADSTRING = 115,OLEUI_ERR_STANDARDMAX = 116,};
enum MACRO_OLE_E {OLE_E_OLEVERB = 0,OLE_E_ADVF = 1,OLE_E_ENUM_NOMORE = 2,OLE_E_ADVISENOTSUPPORTED = 3,OLE_E_NOCONNECTION = 4,OLE_E_NOTRUNNING = 5,OLE_E_NOCACHE = 6,OLE_E_BLANK = 7,OLE_E_CLASSDIFF = 8,OLE_E_CANT_GETMONIKER = 9,OLE_E_CANT_BINDTOSOURCE = 10,OLE_E_STATIC = 11,OLE_E_PROMPTSAVECANCELLED = 12,OLE_E_INVALIDRECT = 13,OLE_E_WRONGCOMPOBJ = 14,OLE_E_INVALIDHWND = 15,OLE_E_NOT_INPLACEACTIVE = 16,OLE_E_CANTCONVERT = 17,OLE_E_NOSTORAGE = 18,};
enum MACRO_OLE_S {OLE_S_USEREG = 0,OLE_S_STATIC = 1,OLE_S_MAC_CLIPFORMAT = 2,};
enum MACRO_PDERR {PDERR_PRINTERCODES = 0x1000,PDERR_SETUPFAILURE = 0x1001,PDERR_PARSEFAILURE = 0x1002,PDERR_RETDEFFAILURE = 0x1003,PDERR_LOADDRVFAILURE = 0x1004,PDERR_GETDEVMODEFAIL = 0x1005,PDERR_INITFAILURE = 0x1006,PDERR_NODEVICES = 0x1007,PDERR_NODEFAULTPRN = 0x1008,PDERR_DNDMMISMATCH = 0x1009,PDERR_CREATEICFAILURE = 0x100A,PDERR_PRINTERNOTFOUND = 0x100B,PDERR_DEFAULTDIFFERENT = 0x100C,};
enum MACRO_PITCH {DEFAULT_PITCH = 0x0,FIXED_PITCH = 0x1,VARIABLE_PITCH = 0x2,};
enum MACRO_REGDB {REGDB_E_FIRST = 0x150,REGDB_E_LAST = 0x15F,REGDB_S_FIRST = 0x150,REGDB_S_LAST = 0x15F,};
enum MACRO_SYVHI {SYVHI_SPECIAL = 0,SYVHI_ANSI = 1,SYVHI_GESTURE = 2,SYVHI_KANJI = 3,SYVHI_SHAPE = 4,SYVHI_UNICODE = 5,SYVHI_VKEY = 6,};
enum MACRO_TRAIN {TRAIN_NONE = 0x0,TRAIN_DEFAULT = 0x1,TRAIN_CUSTOM = 0x2,TRAIN_BOTH = 0x3,TRAIN_SAVE = 0x0,TRAIN_REVERT = 0x1,};
enum MACRO_WSANO {WSANO_DATA = 11004,NO_DATA = 11004,};
enum MACRO_WS_GT {WS_GT = 0,};
enum MACRO_XTYPF {XTYPF_NOBLOCK = 0x2,XTYPF_NODATA = 0x4,XTYPF_ACKREQ = 0x8,};
enum MACRO__TEOF {_TEOF = -1,};
enum MACRO_chx10 {chx10 = 0x419,};
enum MACRO_chx11 {chx11 = 0x41A,};
enum MACRO_chx12 {chx12 = 0x41B,};
enum MACRO_chx13 {chx13 = 0x41C,};
enum MACRO_chx14 {chx14 = 0x41D,};
enum MACRO_chx15 {chx15 = 0x41E,};
enum MACRO_chx16 {chx16 = 0x41F,};
enum MACRO_cmb10 {cmb10 = 0x479,};
enum MACRO_cmb11 {cmb11 = 0x47A,};
enum MACRO_cmb12 {cmb12 = 0x47B,};
enum MACRO_cmb13 {cmb13 = 0x47C,};
enum MACRO_cmb14 {cmb14 = 0x47D,};
enum MACRO_cmb15 {cmb15 = 0x47E,};
enum MACRO_cmb16 {cmb16 = 0x47F,};
enum MACRO_edt10 {edt10 = 0x489,};
enum MACRO_edt11 {edt11 = 0x48A,};
enum MACRO_edt12 {edt12 = 0x48B,};
enum MACRO_edt13 {edt13 = 0x48C,};
enum MACRO_edt14 {edt14 = 0x48D,};
enum MACRO_edt15 {edt15 = 0x48E,};
enum MACRO_edt16 {edt16 = 0x48F,};
enum MACRO_lst10 {lst10 = 0x469,};
enum MACRO_lst11 {lst11 = 0x46A,};
enum MACRO_lst12 {lst12 = 0x46B,};
enum MACRO_lst13 {lst13 = 0x46C,};
enum MACRO_lst14 {lst14 = 0x46D,};
enum MACRO_lst15 {lst15 = 0x46E,};
enum MACRO_lst16 {lst16 = 0x46F,};
enum MACRO_psh10 {psh10 = 0x409,};
enum MACRO_psh11 {psh11 = 0x40A,};
enum MACRO_psh12 {psh12 = 0x40B,};
enum MACRO_psh13 {psh13 = 0x40C,};
enum MACRO_psh14 {psh14 = 0x40D,};
enum MACRO_psh15 {psh15 = 0x40E,};
enum MACRO_psh16 {psh16 = 0x40F,};
enum MACRO_rad10 {rad10 = 0x429,};
enum MACRO_rad11 {rad11 = 0x42A,};
enum MACRO_rad12 {rad12 = 0x42B,};
enum MACRO_rad13 {rad13 = 0x42C,};
enum MACRO_rad14 {rad14 = 0x42D,};
enum MACRO_rad15 {rad15 = 0x42E,};
enum MACRO_rad16 {rad16 = 0x42F,};
enum MACRO_stc10 {stc10 = 0x449,};
enum MACRO_stc11 {stc11 = 0x44A,};
enum MACRO_stc12 {stc12 = 0x44B,};
enum MACRO_stc13 {stc13 = 0x44C,};
enum MACRO_stc14 {stc14 = 0x44D,};
enum MACRO_stc15 {stc15 = 0x44E,};
enum MACRO_stc16 {stc16 = 0x44F,};
enum MACRO_stc17 {stc17 = 0x450,};
enum MACRO_stc18 {stc18 = 0x451,};
enum MACRO_stc19 {stc19 = 0x452,};
enum MACRO_stc20 {stc20 = 0x453,};
enum MACRO_stc21 {stc21 = 0x454,};
enum MACRO_stc22 {stc22 = 0x455,};
enum MACRO_stc23 {stc23 = 0x456,};
enum MACRO_stc24 {stc24 = 0x457,};
enum MACRO_stc25 {stc25 = 0x458,};
enum MACRO_stc26 {stc26 = 0x459,};
enum MACRO_stc27 {stc27 = 0x45A,};
enum MACRO_stc28 {stc28 = 0x45B,};
enum MACRO_stc29 {stc29 = 0x45C,};
enum MACRO_stc30 {stc30 = 0x45D,};
enum MACRO_stc31 {stc31 = 0x45E,};
enum MACRO_stc32 {stc32 = 0x45F,};
typedef struct midioutcaps_tag MIDIOUTCAPS;
typedef struct tagMODULEENTRY MODULEENTRY;
typedef struct tagMONCBSTRUCT MONCBSTRUCT;
typedef struct _42792D5BBA08C54B20EEEC50F78E7D08 MapiMessage;
typedef struct tagNFYLOGERROR NFYLOGERROR;
typedef struct tagNFYSTARTDLL NFYSTARTDLL;
typedef struct tagPAINTSTRUCT PAINTSTRUCT;
typedef struct tagNEWCPLINFO *PNEWCPLINFO;
typedef struct sockaddr_in SOCKADDR_IN;
typedef struct tagSYSHEAPINFO SYSHEAPINFO;
typedef struct tagTIME_STRUCT TIME_STRUCT;
typedef struct tagTTPOLYCURVE TTPOLYCURVE;
typedef struct waveoutcaps_tag WAVEOUTCAPS;
enum tagCALLCONV {CC_CDECL = 0x1,CC_MSCPASCAL = 0x2,CC_PASCAL = 0x2,CC_MACPASCAL = 0x3,CC_STDCALL = 0x4,CC_RESERVED = 0x5,CC_SYSCALL = 0x6,CC_MAX = 0x7,};
enum tagCALLTYPE {CALLTYPE_TOPLEVEL = 0x1,CALLTYPE_NESTED = 0x2,CALLTYPE_ASYNC = 0x3,CALLTYPE_TOPLEVEL_CALLPENDING = 0x4,CALLTYPE_ASYNC_CALLPENDING = 0x5,};
enum tagDESCKIND {DESCKIND_NONE = 0x0,DESCKIND_FUNCDESC = 0x1,DESCKIND_VARDESC = 0x2,DESCKIND_TYPECOMP = 0x3,DESCKIND_IMPLICITAPPOBJ = 0x4,DESCKIND_MAX = 0x5,};
enum tagDVASPECT {DVASPECT_CONTENT = 0x1,DVASPECT_THUMBNAIL = 0x2,DVASPECT_ICON = 0x4,DVASPECT_DOCPRINT = 0x8,};
enum tagFUNCKIND {FUNC_VIRTUAL = 0x0,FUNC_PUREVIRTUAL = 0x1,FUNC_NONVIRTUAL = 0x2,FUNC_STATIC = 0x3,FUNC_DISPATCH = 0x4,};
enum tagLIBFLAGS {LIBFLAG_FRESTRICTED = 0x1,};
enum tagLOCKTYPE {LOCK_WRITE = 0x1,LOCK_EXCLUSIVE = 0x2,LOCK_ONLYONCE = 0x4,};
enum tagMKREDUCE {MKRREDUCE_ONE = 0x0,MKRREDUCE_TOUSER = 0x0,MKRREDUCE_THROUGHUSER = 0x0,MKRREDUCE_ALL = 0x0,};
enum tagOLECLOSE {OLECLOSE_SAVEIFDIRTY = 0x0,OLECLOSE_NOSAVE = 0x1,OLECLOSE_PROMPTSAVE = 0x2,};
enum tagOLECONTF {OLECONTF_EMBEDDINGS = 0x1,OLECONTF_LINKS = 0x2,OLECONTF_OTHERS = 0x4,OLECONTF_ONLYUSER = 0x8,OLECONTF_ONLYIFRUNNING = 0x10,};
enum tagSTATFLAG {STATFLAG_DEFAULT = 0x0,STATFLAG_NONAME = 0x1,};
enum tagTYPEKIND {TKIND_ENUM = 0x0,TKIND_RECORD = 0x1,TKIND_MODULE = 0x2,TKIND_INTERFACE = 0x3,TKIND_DISPATCH = 0x4,TKIND_COCLASS = 0x5,TKIND_ALIAS = 0x6,TKIND_UNION = 0x7,TKIND_MAX = 0x8,};
enum tagVARFLAGS {VARFLAG_FREADONLY = 0x1,};
typedef struct tagBITMAPINFO BITMAPINFO;
typedef struct tagCALBSTRUCT CALBSTRUCT;
typedef struct tagCHOOSEFONT CHOOSEFONT;
typedef struct tagCLASSENTRY CLASSENTRY;
typedef struct tagDISPPARAMS DISPPARAMS;
typedef struct tagGLOBALINFO GLOBALINFO;
struct ILockBytes {struct ILockBytesVtbl *lpVtbl;};
struct IOleCache2 {struct IOleCache2Vtbl *lpVtbl;};
struct IOleObject {struct IOleObjectVtbl *lpVtbl;};
struct IOleWindow {struct IOleWindowVtbl *lpVtbl;};
typedef struct tagLOCALENTRY LOCALENTRY;
typedef struct tagLOGPALETTE LOGPALETTE;
typedef int *LPCATCHBUF;
typedef IDispatch *LPDISPATCH;
typedef struct tagELEMDESC *LPELEMDESC;
typedef struct tagFMS_LOAD *LPFMS_LOAD;
typedef struct tagFUNCDESC *LPFUNCDESC;
typedef IOleCache *LPOLECACHE;
typedef struct protoent *LPPROTOENT;
typedef struct tagRCRESULT *LPRCRESULT;
typedef struct sockaddr *LPSOCKADDR;
typedef struct tagTLIBATTR *LPTLIBATTR;
typedef struct tagTYPEATTR *LPTYPEATTR;
typedef ITypeComp *LPTYPECOMP;
typedef ITypeInfo *LPTYPEINFO;
enum MACRO_BASE {MMSYSERR_BASE = 0,WAVERR_BASE = 32,MIDIERR_BASE = 64,TIMERR_BASE = 96,JOYERR_BASE = 160,MCIERR_BASE = 256,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_CADV {CADV_LATEACK = 0xFFFF,};
enum MACRO_CLIP {CLIP_DEFAULT_PRECIS = 0x0,CLIP_CHARACTER_PRECIS = 0x1,CLIP_STROKE_PRECIS = 0x2,CLIP_MASK = 0xF,CLIP_LH_ANGLES = 0x10,CLIP_TT_ALWAYS = 0x20,CLIP_EMBEDDED = 0x80,};
enum MACRO_CRUC {CRUC_REMOVE = 1,};
enum MACRO_CSTF {CSTF_CTSHOLD = 0x1,CSTF_DSRHOLD = 0x2,CSTF_RLSDHOLD = 0x4,CSTF_XOFFHOLD = 0x8,CSTF_XOFFSENT = 0x10,CSTF_EOF = 0x20,CSTF_TXIM = 0x40,};
enum MACRO_CTRY {CTRY_DEFAULT = 0,CTRY_AUSTRALIA = 61,CTRY_AUSTRIA = 43,CTRY_BELGIUM = 32,CTRY_BRAZIL = 55,CTRY_CANADA = 2,CTRY_DENMARK = 45,CTRY_FINLAND = 358,CTRY_FRANCE = 33,CTRY_GERMANY = 49,CTRY_ICELAND = 354,CTRY_IRELAND = 353,CTRY_ITALY = 39,CTRY_JAPAN = 81,CTRY_MEXICO = 52,CTRY_NETHERLANDS = 31,CTRY_NEW_ZEALAND = 64,CTRY_NORWAY = 47,CTRY_PORTUGAL = 351,CTRY_PRCHINA = 86,CTRY_SOUTH_KOREA = 82,CTRY_SPAIN = 34,CTRY_SWEDEN = 46,CTRY_SWITZERLAND = 41,CTRY_TAIWAN = 886,CTRY_UNITED_KINGDOM = 44,CTRY_UNITED_STATES = 1,};
enum MACRO_DATA {DATA_E_FIRST = 0x130,DATA_E_LAST = 0x13F,DATA_S_FIRST = 0x130,DATA_S_LAST = 0x13F,};
enum MACRO_DCTT {DCTT_BITMAP = 0x1,DCTT_DOWNLOAD = 0x2,DCTT_SUBDEV = 0x4,};
enum MACRO_DIRQ {DIRQ_QUERY = 1,DIRQ_DESCRIPTION = 2,DIRQ_CONFIGURE = 3,DIRQ_OPEN = 4,DIRQ_CLOSE = 5,DIRQ_SETWORDLISTS = 6,DIRQ_STRING = 7,DIRQ_SUGGEST = 8,DIRQ_ADD = 9,DIRQ_DELETE = 10,DIRQ_FLUSH = 11,DIRQ_RCCHANGE = 12,DIRQ_SYMBOLGRAPH = 13,DIRQ_INIT = 14,DIRQ_CLEANUP = 15,DIRQ_COPYRIGHT = 16,DIRQ_USER = 4096,};
enum MACRO_DISP {DISP_E_UNKNOWNINTERFACE = 1,DISP_E_MEMBERNOTFOUND = 3,DISP_E_PARAMNOTFOUND = 4,DISP_E_TYPEMISMATCH = 5,DISP_E_UNKNOWNNAME = 6,DISP_E_NONAMEDARGS = 7,DISP_E_BADVARTYPE = 8,DISP_E_EXCEPTION = 9,DISP_E_OVERFLOW = 10,DISP_E_BADINDEX = 11,DISP_E_UNKNOWNLCID = 12,DISP_E_ARRAYISLOCKED = 13,DISP_E_BADPARAMCOUNT = 14,DISP_E_PARAMNOTOPTIONAL = 15,DISP_E_BADCALLEE = 16,DISP_E_NOTACOLLECTION = 17,};
enum MACRO_DLGC {DLGC_WANTARROWS = 0x1,DLGC_WANTTAB = 0x2,DLGC_WANTALLKEYS = 0x4,DLGC_WANTMESSAGE = 0x4,DLGC_HASSETSEL = 0x8,DLGC_DEFPUSHBUTTON = 0x10,DLGC_UNDEFPUSHBUTTON = 0x20,DLGC_RADIOBUTTON = 0x40,DLGC_WANTCHARS = 0x80,DLGC_STATIC = 0x100,DLGC_BUTTON = 0x2000,};
enum MACRO_DMTT {DMTT_BITMAP = 1,DMTT_DOWNLOAD = 2,DMTT_SUBDEV = 3,};
enum MACRO_DRAW {VIEW_E_DRAW = 320,E_DRAW = 320,};
enum MACRO_ENUM {ENUM_E_FIRST = 0x1B0,ENUM_E_LAST = 0x1BF,ENUM_S_FIRST = 0x1B0,ENUM_S_LAST = 0x1BF,};
enum MACRO_FADF {FADF_AUTO = 0x1,FADF_STATIC = 0x2,FADF_EMBEDDED = 0x4,FADF_FIXEDSIZE = 0x10,FADF_BSTR = 0x100,FADF_UNKNOWN = 0x200,FADF_DISPATCH = 0x400,FADF_VARIANT = 0x800,FADF_RESERVED = 0xF0E8,};
enum MACRO_FONT {OEM_FIXED_FONT = 10,ANSI_FIXED_FONT = 11,ANSI_VAR_FONT = 12,SYSTEM_FONT = 13,DEVICE_DEFAULT_FONT = 14,};
enum MACRO_GFSR {GFSR_SYSTEMRESOURCES = 0x0,GFSR_GDIRESOURCES = 0x1,GFSR_USERRESOURCES = 0x2,};
enum MACRO_GGRC {GGRC_OK = 0,GGRC_DICTBUFTOOSMALL = 1,GGRC_PARAMERROR = 2,};
enum MACRO_GHND {GHND = 66,};
enum MACRO_GMEM {GMEM_FIXED = 0x0,GMEM_MOVEABLE = 0x2,GMEM_NOCOMPACT = 0x10,GMEM_NODISCARD = 0x20,GMEM_ZEROINIT = 0x40,GMEM_MODIFY = 0x80,GMEM_DISCARDABLE = 0x100,GMEM_NOT_BANKED = 0x1000,GMEM_SHARE = 0x2000,GMEM_DDESHARE = 0x2000,GMEM_NOTIFY = 0x4000,GMEM_LOWER = 0x1000,};
enum MACRO_GPTR {GPTR = 64,};
enum MACRO_HCBT {HCBT_MOVESIZE = 0,HCBT_MINMAX = 1,HCBT_QS = 2,HCBT_CREATEWND = 3,HCBT_DESTROYWND = 4,HCBT_ACTIVATE = 5,HCBT_CLICKSKIPPED = 6,HCBT_KEYSKIPPED = 7,HCBT_SYSCOMMAND = 8,HCBT_SETFOCUS = 9,};
enum MACRO_HEAP {NORMAL_HEAP = 0,USER_HEAP = 1,GDI_HEAP = 2,};
enum MACRO_HEKK {HEKK_DEFAULT = 0,HEKK_CONVERT = 1,HEKK_CANDIDATE = 2,};
enum MACRO_HELP {HELP_CONTEXT = 0x1,HELP_QUIT = 0x2,HELP_INDEX = 0x3,HELP_CONTENTS = 0x3,HELP_HELPONHELP = 0x4,HELP_SETINDEX = 0x5,HELP_SETCONTENTS = 0x5,HELP_CONTEXTPOPUP = 0x8,HELP_FORCEFILE = 0x9,HELP_KEY = 0x101,HELP_COMMAND = 0x102,HELP_PARTIALKEY = 0x105,HELP_MULTIKEY = 0x201,HELP_SETWINPOS = 0x203,};
enum MACRO_HIDE {HIDE_WINDOW = 0,};
enum MACRO_HKEY {HKEY_CLASSES_ROOT = 1,};
enum MACRO_HWND {HWND_BROADCAST = 0xFFFF,};
enum MACRO_IDBZ {IDBZ_RETRY = 600,IDBZ_ICON = 601,IDBZ_MESSAGE1 = 602,IDBZ_SWITCHTO = 604,};
enum MACRO_IDCV {IDCV_OBJECTTYPE = 150,IDCV_DISPLAYASICON = 152,IDCV_CHANGEICON = 153,IDCV_ACTIVATELIST = 154,IDCV_CONVERTTO = 155,IDCV_ACTIVATEAS = 156,IDCV_RESULTTEXT = 157,IDCV_CONVERTLIST = 158,IDCV_ICON = 159,IDCV_ICONLABEL1 = 160,IDCV_ICONLABEL2 = 161,IDCV_STXCURTYPE = 162,IDCV_GRPRESULT = 163,IDCV_STXCONVERTTO = 164,};
enum MACRO_IDNO {IDNO = 7,};
enum MACRO_IDOK {IDOK = 1,IDCANCEL = 2,};
enum MACRO_LANG {LANG_NEUTRAL = 0x0,LANG_ALBANIAN = 0x1C,LANG_ARABIC = 0x1,LANG_BAHASA = 0x21,LANG_BULGARIAN = 0x2,LANG_CATALAN = 0x3,LANG_CHINESE = 0x4,LANG_CZECH = 0x5,LANG_DANISH = 0x6,LANG_DUTCH = 0x13,LANG_ENGLISH = 0x9,LANG_FINNISH = 0xB,LANG_FRENCH = 0xC,LANG_GERMAN = 0x7,LANG_GREEK = 0x8,LANG_HEBREW = 0xD,LANG_HUNGARIAN = 0xE,LANG_ICELANDIC = 0xF,LANG_ITALIAN = 0x10,LANG_JAPANESE = 0x11,LANG_KOREAN = 0x12,LANG_NORWEGIAN = 0x14,LANG_POLISH = 0x15,LANG_PORTUGUESE = 0x16,LANG_RHAETO_ROMAN = 0x17,LANG_ROMANIAN = 0x18,LANG_RUSSIAN = 0x19,LANG_SERBO_CROATIAN = 0x1A,LANG_SLOVAK = 0x1B,LANG_SPANISH = 0xA,LANG_SWEDISH = 0x1D,LANG_THAI = 0x1E,LANG_TURKISH = 0x1F,LANG_URDU = 0x20,};
enum MACRO_LHND {LHND = 66,};
enum MACRO_LMEM {LMEM_FIXED = 0x0,LMEM_MOVEABLE = 0x2,LMEM_NOCOMPACT = 0x10,LMEM_NODISCARD = 0x20,LMEM_ZEROINIT = 0x40,LMEM_MODIFY = 0x80,LMEM_DISCARDABLE = 0xF00,};
enum MACRO_LPTR {LPTR = 64,};
enum MACRO_MAPI {MAPI_OLE = 0x1,MAPI_OLE_STATIC = 0x2,MAPI_ORIG = 0x0,MAPI_TO = 0x1,MAPI_CC = 0x2,MAPI_BCC = 0x3,MAPI_UNREAD = 0x1,MAPI_RECEIPT_REQUESTED = 0x2,MAPI_SENT = 0x4,MAPI_LOGON_UI = 0x1,MAPI_NEW_SESSION = 0x2,MAPI_DIALOG = 0x8,MAPI_UNREAD_ONLY = 0x20,MAPI_ENVELOPE_ONLY = 0x40,MAPI_PEEK = 0x80,MAPI_GUARANTEE_FIFO = 0x100,MAPI_BODY_AS_FILE = 0x200,MAPI_AB_NOMODIFY = 0x400,MAPI_SUPPRESS_ATTACH = 0x800,MAPI_FORCE_DOWNLOAD = 0x1000,};
enum MACRO_MDIS {MDIS_ALLCHILDSTYLES = 0x1,};
enum MACRO_MENU {MENU_TEXT_LEN = 40,};
enum MACRO_META {META_SETBKCOLOR = 0x201,META_SETBKMODE = 0x102,META_SETMAPMODE = 0x103,META_SETROP2 = 0x104,META_SETRELABS = 0x105,META_SETPOLYFILLMODE = 0x106,META_SETSTRETCHBLTMODE = 0x107,META_SETTEXTCHAREXTRA = 0x108,META_SETTEXTCOLOR = 0x209,META_SETTEXTJUSTIFICATION = 0x20A,META_SETWINDOWORG = 0x20B,META_SETWINDOWEXT = 0x20C,META_SETVIEWPORTORG = 0x20D,META_SETVIEWPORTEXT = 0x20E,META_OFFSETWINDOWORG = 0x20F,META_SCALEWINDOWEXT = 0x410,META_OFFSETVIEWPORTORG = 0x211,META_SCALEVIEWPORTEXT = 0x412,META_LINETO = 0x213,META_MOVETO = 0x214,META_EXCLUDECLIPRECT = 0x415,META_INTERSECTCLIPRECT = 0x416,META_ARC = 0x817,META_ELLIPSE = 0x418,META_FLOODFILL = 0x419,META_PIE = 0x81A,META_RECTANGLE = 0x41B,META_ROUNDRECT = 0x61C,META_PATBLT = 0x61D,META_SAVEDC = 0x1E,META_SETPIXEL = 0x41F,META_OFFSETCLIPRGN = 0x220,META_TEXTOUT = 0x521,META_BITBLT = 0x922,META_STRETCHBLT = 0xB23,META_POLYGON = 0x324,META_POLYLINE = 0x325,META_ESCAPE = 0x626,META_RESTOREDC = 0x127,META_FILLREGION = 0x228,META_FRAMEREGION = 0x429,META_INVERTREGION = 0x12A,META_PAINTREGION = 0x12B,META_SELECTCLIPREGION = 0x12C,META_SELECTOBJECT = 0x12D,META_SETTEXTALIGN = 0x12E,META_DRAWTEXT = 0x62F,META_CHORD = 0x830,META_SETMAPPERFLAGS = 0x231,META_EXTTEXTOUT = 0xA32,META_SETDIBTODEV = 0xD33,META_SELECTPALETTE = 0x234,META_REALIZEPALETTE = 0x35,META_ANIMATEPALETTE = 0x436,META_SETPALENTRIES = 0x37,META_POLYPOLYGON = 0x538,META_RESIZEPALETTE = 0x139,META_DIBBITBLT = 0x940,META_DIBSTRETCHBLT = 0xB41,META_DIBCREATEPATTERNBRUSH = 0x142,META_STRETCHDIB = 0xF43,META_EXTFLOODFILL = 0x548,META_RESETDC = 0x14C,META_STARTDOC = 0x14D,META_STARTPAGE = 0x4F,META_ENDPAGE = 0x50,META_ABORTDOC = 0x52,META_ENDDOC = 0x5E,META_DELETEOBJECT = 0x1F0,META_CREATEPALETTE = 0xF7,META_CREATEBRUSH = 0xF8,META_CREATEPATTERNBRUSH = 0x1F9,META_CREATEPENINDIRECT = 0x2FA,META_CREATEFONTINDIRECT = 0x2FB,META_CREATEBRUSHINDIRECT = 0x2FC,META_CREATEBITMAPINDIRECT = 0x2FD,META_CREATEBITMAP = 0x6FE,META_CREATEREGION = 0x6FF,};
enum MACRO_MHDR {MHDR_DONE = 0x1,MHDR_PREPARED = 0x2,MHDR_INQUEUE = 0x4,};
enum MACRO_MIDI {MIDI_MAPPER = -1,MIDI_CACHE_ALL = 1,MIDI_CACHE_BESTFIT = 2,MIDI_CACHE_QUERY = 3,MIDI_UNCACHE = 4,};
enum MACRO_MK_E {MK_E_FIRST = 0x1E0,MK_E_LAST = 0x1EF,MK_S_FIRST = 0x1E0,MK_S_LAST = 0x1EF,};
enum MACRO_MMIO {MMIO_RWMODE = 0x3,MMIO_SHAREMODE = 0x70,MMIO_CREATE = 0x1000,MMIO_PARSE = 0x100,MMIO_DELETE = 0x200,MMIO_EXIST = 0x4000,MMIO_ALLOCBUF = 0x0,MMIO_GETTEMP = 0x0,MMIO_DIRTY = 0x0,MMIO_READ = 0x0,MMIO_WRITE = 0x1,MMIO_READWRITE = 0x2,MMIO_COMPAT = 0x0,MMIO_EXCLUSIVE = 0x10,MMIO_DENYWRITE = 0x20,MMIO_DENYREAD = 0x30,MMIO_DENYNONE = 0x40,MMIO_FHOPEN = 0x10,MMIO_EMPTYBUF = 0x10,MMIO_TOUPPER = 0x10,MMIO_INSTALLPROC = 0x0,MMIO_GLOBALPROC = 0x0,MMIO_REMOVEPROC = 0x0,MMIO_FINDPROC = 0x0,MMIO_FINDCHUNK = 0x10,MMIO_FINDRIFF = 0x20,MMIO_FINDLIST = 0x40,MMIO_CREATERIFF = 0x20,MMIO_CREATELIST = 0x40,};
enum MACRO_MSGF {MSGF_DIALOGBOX = 0,MSGF_MENU = 2,MSGF_MOVE = 3,MSGF_SIZE = 4,MSGF_SCROLLBAR = 5,MSGF_NEXTWINDOW = 6,MSGF_MAINLOOP = 8,MSGF_USER = 4096,};
enum MACRO_NORM {NORM_IGNORECASE = 0x1,NORM_IGNORENONSPACE = 0x2,NORM_IGNORESYMBOLS = 0x4,NORM_IGNOREWIDTH = 0x8,NORM_IGNOREKANATYPE = 0x40,NORM_IGNOREJAPANACCENT = 0x80,NORM_IGNOREKASHIDA = 0x0,};
enum MACRO_ODBC {ODBC_ADD_DSN = 1,ODBC_CONFIG_DSN = 2,ODBC_REMOVE_DSN = 3,};
enum MACRO_PATH {BEGIN_PATH = 4096,CLIP_TO_PATH = 4097,END_PATH = 4098,};
enum MACRO_PDTS {PDTS_LOMETRIC = 0x0,PDTS_HIMETRIC = 0x1,PDTS_HIENGLISH = 0x2,PDTS_SCALEMAX = 0x3,PDTS_DISPLAY = 0x3,PDTS_ARBITRARY = 0x4,PDTS_SCALEMASK = 0xF,PDTS_STANDARDSCALE = 0x2,PDTS_NOPENINFO = 0x100,PDTS_NOUPPOINTS = 0x200,PDTS_NOOEMDATA = 0x400,PDTS_NOCOLINEAR = 0x800,PDTS_COMPRESSED = 0x8000,PDTS_COMPRESSMETHOD = 0xF0,PDTS_COMPRESS2NDDERIV = 0x10,};
enum MACRO_PDTT {PDTT_DEFAULT = 0x0,PDTT_PENINFO = 0x100,PDTT_UPPOINTS = 0x200,PDTT_OEMDATA = 0x400,PDTT_COLINEAR = 0x800,PDTT_COMPRESS = 0x8000,PDTT_DECOMPRESS = 0x4000,PDTT_ALL = 0xF00,};
enum MACRO_RCIP {RCIP_ALLANSICHAR = 0x1,RCIP_MASK = 0x1,};
enum MACRO_RCOR {RCOR_NORMAL = 1,RCOR_RIGHT = 2,RCOR_UPSIDEDOWN = 3,RCOR_LEFT = 4,};
enum MACRO_RCRT {RCRT_DEFAULT = 0x0,RCRT_UNIDENTIFIED = 0x1,RCRT_GESTURE = 0x2,RCRT_NOSYMBOLMATCH = 0x4,RCRT_PRIVATE = 0x4000,RCRT_NORECOG = 0x8000,RCRT_ALREADYPROCESSED = 0x8,RCRT_GESTURETRANSLATED = 0x10,RCRT_GESTURETOKEYS = 0x20,};
enum MACRO_READ {READ = 0,WRITE = 1,};
enum MACRO_SGRC {SGRC_OK = 0x0,SGRC_USER = 0x1,SGRC_PARAMERROR = 0x2,SGRC_RC = 0x4,SGRC_RECOGNIZER = 0x8,SGRC_DICTIONARY = 0x10,SGRC_INIFILE = 0x20,};
enum MACRO_SHOW {SHOW_OPENWINDOW = 1,SHOW_ICONWINDOW = 2,SHOW_FULLSCREEN = 3,SHOW_OPENNOACTIVATE = 4,};
enum MACRO_SIZE {SIZE_RESTORED = 0,SIZE_MINIMIZED = 1,SIZE_MAXIMIZED = 2,SIZE_MAXSHOW = 3,SIZE_MAXHIDE = 4,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SPIF {SPIF_UPDATEINIFILE = 0x1,SPIF_SENDWININICHANGE = 0x2,};
enum MACRO_STGM {STGM_DIRECT = 0x0,STGM_TRANSACTED = 0x0,STGM_READ = 0x0,STGM_WRITE = 0x1,STGM_READWRITE = 0x2,STGM_SHARE_DENY_NONE = 0x40,STGM_SHARE_DENY_READ = 0x30,STGM_SHARE_DENY_WRITE = 0x20,STGM_SHARE_EXCLUSIVE = 0x10,STGM_PRIORITY = 0x0,STGM_DELETEONRELEASE = 0x0,STGM_CREATE = 0x1000,STGM_CONVERT = 0x0,STGM_FAILIFTHERE = 0x0,};
enum MACRO_S_OK {S_OK = 0,S_FALSE = 1,};
enum MACRO_TIME {TIME_MS = 0x1,TIME_SAMPLES = 0x2,TIME_BYTES = 0x4,TIME_SMPTE = 0x8,TIME_MIDI = 0x10,};
enum MACRO_TMPF {TMPF_FIXED_PITCH = 0x1,TMPF_VECTOR = 0x2,TMPF_DEVICE = 0x8,TMPF_TRUETYPE = 0x4,};
enum MACRO_TYPE {TYPE_E_BUFFERTOOSMALL = -32746,TYPE_E_INVDATAREAD = -32744,TYPE_E_UNSUPFORMAT = -32743,TYPE_E_REGISTRYACCESS = -32740,TYPE_E_LIBNOTREGISTERED = -32739,TYPE_E_UNDEFINEDTYPE = -32729,TYPE_E_QUALIFIEDNAMEDISALLOWED = -32728,TYPE_E_INVALIDSTATE = -32727,TYPE_E_WRONGTYPEKIND = -32726,TYPE_E_ELEMENTNOTFOUND = -32725,TYPE_E_AMBIGUOUSNAME = -32724,TYPE_E_NAMECONFLICT = -32723,TYPE_E_UNKNOWNLCID = -32722,TYPE_E_DLLFUNCTIONNOTFOUND = -32721,TYPE_E_BADMODULEKIND = -30531,TYPE_E_SIZETOOBIG = -30523,TYPE_E_DUPLICATEID = -30522,TYPE_E_TYPEMISMATCH = -29536,TYPE_E_OUTOFBOUNDS = -29535,TYPE_E_IOERROR = -29534,TYPE_E_CANTCREATETMPFILE = -29533,TYPE_E_CANTLOADLIBRARY = -25526,TYPE_E_INCONSISTENTPROPFUNCS = -25469,TYPE_E_CIRCULARTYPE = -25468,};
enum MACRO_VFFF {VFFF_ISSHAREDFILE = 0x1,};
enum MACRO_VFT2 {VFT2_UNKNOWN = 0x0,VFT2_DRV_PRINTER = 0x1,VFT2_DRV_KEYBOARD = 0x2,VFT2_DRV_LANGUAGE = 0x3,VFT2_DRV_DISPLAY = 0x4,VFT2_DRV_MOUSE = 0x5,VFT2_DRV_NETWORK = 0x6,VFT2_DRV_SYSTEM = 0x7,VFT2_DRV_INSTALLABLE = 0x8,VFT2_DRV_SOUND = 0x9,VFT2_DRV_COMM = 0xA,VFT2_FONT_RASTER = 0x1,VFT2_FONT_VECTOR = 0x2,VFT2_FONT_TRUETYPE = 0x3,};
enum MACRO_VIEW {VIEW_E_FIRST = 0x140,VIEW_E_LAST = 0x14F,VIEW_S_FIRST = 0x140,VIEW_S_LAST = 0x14F,};
enum MACRO_VIFF {VIFF_FORCEINSTALL = 0x1,VIFF_DONTDELETEOLD = 0x2,};
enum MACRO_WAVE {WAVE_MAPPER = -1,WAVE_FORMAT_QUERY = 1,WAVE_ALLOWSYNC = 2,};
enum MACRO_WHDR {WHDR_DONE = 0x1,WHDR_PREPARED = 0x2,WHDR_BEGINLOOP = 0x4,WHDR_ENDLOOP = 0x8,WHDR_INQUEUE = 0x10,};
enum MACRO_WM32 {WM32_Invalid_Func = 0x1,WM32_Invalid_Flags = 0x2,WM32_Invalid_Arg = 0x3,WM32_Insufficient_Sels = 0x4,WM32_Insufficient_Mem = 0x5,};
enum MACRO_XTYP {XTYP_ERROR = 0x8002,XTYP_ADVDATA = 0x4010,XTYP_ADVREQ = 0x2022,XTYP_ADVSTART = 0x1030,XTYP_ADVSTOP = 0x8040,XTYP_EXECUTE = 0x4050,XTYP_CONNECT = 0x1062,XTYP_CONNECT_CONFIRM = 0x8072,XTYP_XACT_COMPLETE = 0x8080,XTYP_POKE = 0x4090,XTYP_REGISTER = 0x80A2,XTYP_REQUEST = 0x20B0,XTYP_DISCONNECT = 0x80C2,XTYP_UNREGISTER = 0x80D2,XTYP_WILDCONNECT = 0x20E2,XTYP_MASK = 0xF0,XTYP_SHIFT = 0x4,};
enum MACRO_chx1 {chx1 = 0x410,};
enum MACRO_chx2 {chx2 = 0x411,};
enum MACRO_chx3 {chx3 = 0x412,};
enum MACRO_chx4 {chx4 = 0x413,};
enum MACRO_chx5 {chx5 = 0x414,};
enum MACRO_chx6 {chx6 = 0x415,};
enum MACRO_chx7 {chx7 = 0x416,};
enum MACRO_chx8 {chx8 = 0x417,};
enum MACRO_chx9 {chx9 = 0x418,};
enum MACRO_cmb1 {cmb1 = 0x470,};
enum MACRO_cmb2 {cmb2 = 0x471,};
enum MACRO_cmb3 {cmb3 = 0x472,};
enum MACRO_cmb4 {cmb4 = 0x473,};
enum MACRO_cmb5 {cmb5 = 0x474,};
enum MACRO_cmb6 {cmb6 = 0x475,};
enum MACRO_cmb7 {cmb7 = 0x476,};
enum MACRO_cmb8 {cmb8 = 0x477,};
enum MACRO_cmb9 {cmb9 = 0x478,};
enum MACRO_edt1 {edt1 = 0x480,};
enum MACRO_edt2 {edt2 = 0x481,};
enum MACRO_edt3 {edt3 = 0x482,};
enum MACRO_edt4 {edt4 = 0x483,};
enum MACRO_edt5 {edt5 = 0x484,};
enum MACRO_edt6 {edt6 = 0x485,};
enum MACRO_edt7 {edt7 = 0x486,};
enum MACRO_edt8 {edt8 = 0x487,};
enum MACRO_edt9 {edt9 = 0x488,};
enum MACRO_frm1 {frm1 = 0x434,};
enum MACRO_frm2 {frm2 = 0x435,};
enum MACRO_frm3 {frm3 = 0x436,};
enum MACRO_frm4 {frm4 = 0x437,};
enum MACRO_grp1 {grp1 = 0x430,};
enum MACRO_grp2 {grp2 = 0x431,};
enum MACRO_grp3 {grp3 = 0x432,};
enum MACRO_grp4 {grp4 = 0x433,};
enum MACRO_ico1 {ico1 = 0x43C,};
enum MACRO_ico2 {ico2 = 0x43D,};
enum MACRO_ico3 {ico3 = 0x43E,};
enum MACRO_ico4 {ico4 = 0x43F,};
enum MACRO_lst1 {lst1 = 0x460,};
enum MACRO_lst2 {lst2 = 0x461,};
enum MACRO_lst3 {lst3 = 0x462,};
enum MACRO_lst4 {lst4 = 0x463,};
enum MACRO_lst5 {lst5 = 0x464,};
enum MACRO_lst6 {lst6 = 0x465,};
enum MACRO_lst7 {lst7 = 0x466,};
enum MACRO_lst8 {lst8 = 0x467,};
enum MACRO_lst9 {lst9 = 0x468,};
enum MACRO_psh1 {psh1 = 0x400,};
enum MACRO_psh2 {psh2 = 0x401,};
enum MACRO_psh3 {psh3 = 0x402,};
enum MACRO_psh4 {psh4 = 0x403,};
enum MACRO_psh5 {psh5 = 0x404,};
enum MACRO_psh6 {psh6 = 0x405,};
enum MACRO_psh7 {psh7 = 0x406,};
enum MACRO_psh8 {psh8 = 0x407,};
enum MACRO_psh9 {psh9 = 0x408,};
enum MACRO_rad1 {rad1 = 0x420,};
enum MACRO_rad2 {rad2 = 0x421,};
enum MACRO_rad3 {rad3 = 0x422,};
enum MACRO_rad4 {rad4 = 0x423,};
enum MACRO_rad5 {rad5 = 0x424,};
enum MACRO_rad6 {rad6 = 0x425,};
enum MACRO_rad7 {rad7 = 0x426,};
enum MACRO_rad8 {rad8 = 0x427,};
enum MACRO_rad9 {rad9 = 0x428,};
enum MACRO_rct1 {rct1 = 0x438,};
enum MACRO_rct2 {rct2 = 0x439,};
enum MACRO_rct3 {rct3 = 0x43A,};
enum MACRO_rct4 {rct4 = 0x43B,};
enum MACRO_scr1 {scr1 = 0x490,};
enum MACRO_scr2 {scr2 = 0x491,};
enum MACRO_scr3 {scr3 = 0x492,};
enum MACRO_scr4 {scr4 = 0x493,};
enum MACRO_scr5 {scr5 = 0x494,};
enum MACRO_scr6 {scr6 = 0x495,};
enum MACRO_scr7 {scr7 = 0x496,};
enum MACRO_scr8 {scr8 = 0x497,};
enum MACRO_stc1 {stc1 = 0x440,};
enum MACRO_stc2 {stc2 = 0x441,};
enum MACRO_stc3 {stc3 = 0x442,};
enum MACRO_stc4 {stc4 = 0x443,};
enum MACRO_stc5 {stc5 = 0x444,};
enum MACRO_stc6 {stc6 = 0x445,};
enum MACRO_stc7 {stc7 = 0x446,};
enum MACRO_stc8 {stc8 = 0x447,};
enum MACRO_stc9 {stc9 = 0x448,};
typedef struct tagMEMMANINFO MEMMANINFO;
typedef struct tagMETAHEADER METAHEADER;
typedef struct tagMETARECORD METARECORD;
typedef struct tagMETHODDATA METHODDATA;
typedef struct midiincaps_tag MIDIINCAPS;
typedef struct tagMINMAXINFO MINMAXINFO;
typedef struct tagNEWCPLINFO NEWCPLINFO;
typedef struct tagNFYLOADSEG NFYLOADSEG;
typedef struct tagOEMPENINFO OEMPENINFO;
typedef struct tagOLEUIBUSY *POLEUIBUSY;
typedef struct tagSTROKEINFO STROKEINFO;
typedef struct tagTEXTMETRIC TEXTMETRIC;
typedef struct tagVARIANT VARIANTARG;
typedef struct waveformat_tag WAVEFORMAT;
typedef struct waveincaps_tag WAVEINCAPS;
struct tagCPLINFO {int idIcon;int idName;int idInfo;__int32 lData;};
enum tagDATADIR {DATADIR_GET = 0x1,DATADIR_SET = 0x2,};
enum tagEXTCONN {EXTCONN_STRONG = 0x1,};
enum tagOLEMISC {OLEMISC_RECOMPOSEONRESIZE = 0x1,OLEMISC_ONLYICONIC = 0x2,OLEMISC_INSERTNOTREPLACE = 0x4,OLEMISC_STATIC = 0x8,OLEMISC_CANTLINKINSIDE = 0x10,OLEMISC_CANLINKBYOLE1 = 0x20,OLEMISC_ISLINKOBJECT = 0x40,OLEMISC_INSIDEOUT = 0x80,OLEMISC_ACTIVATEWHENVISIBLE = 0x100,OLEMISC_RENDERINGISDEVICEINDEPENDENT = 0x200,};
struct tagRECTOFS {int dLeft;int dTop;int dRight;int dBottom;};
enum tagSTGMOVE {STGMOVE_MOVE = 0x0,STGMOVE_COPY = 0x1,};
enum tagSYSKIND {SYS_WIN16 = 0x0,SYS_WIN32 = 0x1,SYS_MAC = 0x2,};
enum tagVARKIND {VAR_PERINSTANCE = 0x0,VAR_STATIC = 0x1,VAR_CONST = 0x2,VAR_DISPATCH = 0x3,};
typedef struct tagARRAYDESC ARRAYDESC;
typedef struct tagBIND_OPTS BIND_OPTS;
typedef struct tagBOXLAYOUT BOXLAYOUT;
typedef struct tagDDEADVISE DDEADVISE;
typedef struct tagEXCEPINFO EXCEPINFO;
typedef struct tagFORMATETC FORMATETC;
struct IDispatch {struct IDispatchVtbl *lpVtbl;};
struct IOleCache {struct IOleCacheVtbl *lpVtbl;};
struct ITypeComp {struct ITypeCompVtbl *lpVtbl;};
struct ITypeInfo {struct ITypeInfoVtbl *lpVtbl;};
typedef struct tagLOCALINFO LOCALINFO;
typedef IBindCtx *LPBINDCTX;
typedef union tagBINDPTR *LPBINDPTR;
typedef struct tagCPLINFO *LPCPLINFO;
typedef struct hostent *LPHOSTENT;
typedef struct tagIDLDESC *LPIDLDESC;
typedef struct in_addr *LPIN_ADDR;
typedef unsigned __int32 *LPLHANDLE;
typedef IMarshal *LPMARSHAL;
typedef IMoniker *LPMONIKER;
typedef IOleLink *LPOLELINK;
typedef struct tagOLEVERB *LPOLEVERB;
typedef struct tagPENDATAHEADER *LPPENDATA;
typedef struct tagPENINFO *LPPENINFO;
typedef IPersist *LPPERSIST;
typedef struct tagPOINTFX *LPPOINTFX;
typedef struct tagRECTOFS *LPRECTOFS;
typedef struct servent *LPSERVENT;
typedef struct tagSKBINFO *LPSKBINFO;
typedef IStorage *LPSTORAGE;
typedef struct timeval *LPTIMEVAL;
typedef ITypeLib *LPTYPELIB;
typedef IUnknown *LPUNKNOWN;
typedef struct tagVARDESC *LPVARDESC;
typedef struct tagVARIANT *LPVARIANT;
enum MACRO_ALC {ALC_ALL = 0x43FF,ALC_DEFAULT = 0x0,ALC_LCALPHA = 0x1,ALC_UCALPHA = 0x2,ALC_ALPHA = 0x3,ALC_NUMERIC = 0x4,ALC_ALPHANUMERIC = 0x7,ALC_PUNC = 0x8,ALC_MATH = 0x10,ALC_MONETARY = 0x20,ALC_OTHER = 0x40,ALC_WHITE = 0x100,ALC_NONPRINT = 0x200,ALC_GESTURE = 0x4000,ALC_USEBITMAP = 0x8000,ALC_DBCS = 0x400,ALC_HIRAGANA = 0x0,ALC_KATAKANA = 0x0,ALC_KANJI = 0x0,ALC_OEM = 0x0,ALC_RESERVED = 0x3800,ALC_NOPRIORITY = 0x0,ALC_SYSMINIMUM = 0x410F,};
enum MACRO_AUX {AUX_MAPPER = -1,};
enum MACRO_BXD {BXD_CELLWIDTH = 12,BXD_CELLHEIGHT = 16,BXD_BASEHEIGHT = 13,BXD_BASEHORZ = 0,BXD_CUSPHEIGHT = 2,BXD_ENDCUSPHEIGHT = 4,};
enum MACRO_BXS {BXS_NONE = 0,BXS_RECT = 1,BXS_ENDTEXTMARK = 2,BXS_MASK = 3,};
enum MACRO_CBF {CBF_FAIL_SELFCONNECTIONS = 0x1000,CBF_FAIL_CONNECTIONS = 0x2000,CBF_FAIL_ADVISES = 0x4000,CBF_FAIL_EXECUTES = 0x8000,CBF_FAIL_POKES = 0x0,CBF_FAIL_REQUESTS = 0x0,CBF_FAIL_ALLSVRXACTIONS = 0xF000,CBF_SKIP_CONNECT_CONFIRMS = 0x0,CBF_SKIP_REGISTRATIONS = 0x0,CBF_SKIP_UNREGISTRATIONS = 0x0,CBF_SKIP_DISCONNECTS = 0x0,CBF_SKIP_ALLNOTIFICATIONS = 0x0,};
enum MACRO_CBM {CBM_INIT = 0x4,};
enum MACRO_CBN {CBN_ERRSPACE = -1,CBN_SELCHANGE = 1,CBN_DBLCLK = 2,CBN_SETFOCUS = 3,CBN_KILLFOCUS = 4,CBN_EDITCHANGE = 5,CBN_EDITUPDATE = 6,CBN_DROPDOWN = 7,CBN_CLOSEUP = 8,CBN_SELENDOK = 9,CBN_SELENDCANCEL = 10,};
enum MACRO_CBR {CBR_110 = 0xFF10,CBR_300 = 0xFF11,CBR_600 = 0xFF12,CBR_1200 = 0xFF13,CBR_2400 = 0xFF14,CBR_4800 = 0xFF15,CBR_9600 = 0xFF16,CBR_14400 = 0xFF17,CBR_19200 = 0xFF18,CBR_38400 = 0xFF1B,CBR_56000 = 0xFF1F,CBR_128000 = 0xFF23,CBR_256000 = 0xFF27,};
enum MACRO_CBS {CBS_SIMPLE = 0x1,CBS_DROPDOWN = 0x2,CBS_DROPDOWNLIST = 0x3,CBS_OWNERDRAWFIXED = 0x10,CBS_OWNERDRAWVARIABLE = 0x20,CBS_AUTOHSCROLL = 0x40,CBS_OEMCONVERT = 0x80,CBS_SORT = 0x100,CBS_HASSTRINGS = 0x200,CBS_NOINTEGRALHEIGHT = 0x400,CBS_DISABLENOSCROLL = 0x800,};
enum MACRO_CIF {CIF_SHOWHELP = 0x1,CIF_SELECTCURRENT = 0x2,CIF_SELECTDEFAULT = 0x4,CIF_SELECTFROMFILE = 0x8,CIF_USEICONEXE = 0xA,};
enum MACRO_CPL {CPL_INIT = 1,CPL_GETCOUNT = 2,CPL_INQUIRE = 3,CPL_SELECT = 4,CPL_DBLCLK = 5,CPL_STOP = 6,CPL_EXIT = 7,CPL_NEWINQUIRE = 8,};
enum MACRO_CTM {RESTORE_CTM = 4100,SAVE_CTM = 4101,};
enum MACRO_CWR {CWR_STRIPCR = 0x1,CWR_STRIPLF = 0x2,CWR_STRIPTAB = 0x4,CWR_SINGLELINEEDIT = 0x7,CWR_TITLE = 0x10,CWR_KKCONVERT = 0x20,};
enum MACRO_DBF {DBF_TRACE = 0x0,DBF_WARNING = 0x4000,DBF_ERROR = 0x8000,DBF_FATAL = 0xC000,DBF_KERNEL = 0x1000,DBF_KRN_MEMMAN = 0x1,DBF_KRN_LOADMODULE = 0x2,DBF_KRN_SEGMENTLOAD = 0x4,DBF_USER = 0x800,DBF_GDI = 0x400,DBF_MMSYSTEM = 0x40,DBF_PENWIN = 0x20,DBF_APPLICATION = 0x8,DBF_DRIVER = 0x10,};
enum MACRO_DBO {DBO_CHECKHEAP = 0x1,DBO_BUFFERFILL = 0x4,DBO_DISABLEGPTRAPPING = 0x10,DBO_CHECKFREE = 0x20,DBO_SILENT = 0x8000,DBO_TRACEBREAK = 0x2000,DBO_WARNINGBREAK = 0x1000,DBO_NOERRORBREAK = 0x800,DBO_NOFATALBREAK = 0x400,DBO_INT3BREAK = 0x100,};
enum MACRO_DCB {DCB_RESET = 0x1,DCB_ACCUMULATE = 0x2,DCB_DIRTY = 0x2,DCB_SET = 0x3,DCB_ENABLE = 0x4,DCB_DISABLE = 0x8,};
enum MACRO_DCX {DCX_WINDOW = 0x1,DCX_CACHE = 0x2,DCX_CLIPCHILDREN = 0x8,DCX_CLIPSIBLINGS = 0x10,DCX_PARENTCLIP = 0x20,DCX_EXCLUDERGN = 0x40,DCX_INTERSECTRGN = 0x80,DCX_LOCKWINDOWUPDATE = 0x400,DCX_USESTYLE = 0x0,};
enum MACRO_DDE {DDE_FACK = 0x8000,DDE_FBUSY = 0x4000,DDE_FDEFERUPD = 0x4000,DDE_FACKREQ = 0x8000,DDE_FRELEASE = 0x2000,DDE_FREQUESTED = 0x1000,DDE_FACKRESERVED = 0x3FF0,DDE_FADVRESERVED = 0x3FFF,DDE_FDATRESERVED = 0x4FFF,DDE_FPOKRESERVED = 0xDFFF,DDE_FAPPSTATUS = 0xFF,DDE_FNOTPROCESSED = 0x0,};
enum MACRO_DDL {DDL_READWRITE = 0x0,DDL_READONLY = 0x1,DDL_HIDDEN = 0x2,DDL_SYSTEM = 0x4,DDL_DIRECTORY = 0x10,DDL_ARCHIVE = 0x20,DDL_POSTMSGS = 0x2000,DDL_DRIVES = 0x4000,DDL_EXCLUSIVE = 0x8000,};
enum MACRO_DIB {DIB_RGB_COLORS = 0,DIB_PAL_COLORS = 1,};
enum MACRO_DLG {DLG_COLOR = 10,};
enum MACRO_DNS {DNS_REGISTER = 0x1,DNS_UNREGISTER = 0x2,DNS_FILTERON = 0x4,DNS_FILTEROFF = 0x8,};
enum MACRO_DRV {DRV_LOAD = 0x1,DRV_ENABLE = 0x2,DRV_OPEN = 0x3,DRV_CLOSE = 0x4,DRV_DISABLE = 0x5,DRV_FREE = 0x6,DRV_CONFIGURE = 0x7,DRV_QUERYCONFIGURE = 0x8,DRV_INSTALL = 0x9,DRV_REMOVE = 0xA,DRV_EXITSESSION = 0xB,DRV_EXITAPPLICATION = 0xC,DRV_POWER = 0xF,DRV_RESERVED = 0x800,DRV_USER = 0x4000,};
enum MACRO_DWL {DWL_MSGRESULT = 0,DWL_DLGPROC = 4,DWL_USER = 8,};
enum MACRO_EDS {EDS_WIN = 1,EDS_CUR = 2,EDS_TEMP = 3,};
enum MACRO_ELF {ELF_SHOWHELP = 0x1,ELF_DISABLEUPDATENOW = 0x2,ELF_DISABLEOPENSOURCE = 0x4,ELF_DISABLECHANGESOURCE = 0x8,ELF_DISABLECANCELLINK = 0x10,};
enum MACRO_ERR {ERR_WARNING = 0x8000,ERR_PARAM = 0x4000,ERR_SIZE_MASK = 0x3000,ERR_BYTE = 0x1000,ERR_WORD = 0x2000,ERR_DWORD = 0x3000,ERR_BAD_VALUE = 0x6001,ERR_BAD_FLAGS = 0x6002,ERR_BAD_INDEX = 0x6003,ERR_BAD_DVALUE = 0x7004,ERR_BAD_DFLAGS = 0x7005,ERR_BAD_DINDEX = 0x7006,ERR_BAD_PTR = 0x7007,ERR_BAD_FUNC_PTR = 0x7008,ERR_BAD_SELECTOR = 0x6009,ERR_BAD_STRING_PTR = 0x700A,ERR_BAD_HANDLE = 0x600B,ERR_BAD_HINSTANCE = 0x6020,ERR_BAD_HMODULE = 0x6021,ERR_BAD_GLOBAL_HANDLE = 0x6022,ERR_BAD_LOCAL_HANDLE = 0x6023,ERR_BAD_ATOM = 0x6024,ERR_BAD_HFILE = 0x6025,ERR_BAD_HWND = 0x6040,ERR_BAD_HMENU = 0x6041,ERR_BAD_HCURSOR = 0x6042,ERR_BAD_HICON = 0x6043,ERR_BAD_HDWP = 0x6044,ERR_BAD_CID = 0x6045,ERR_BAD_HDRVR = 0x6046,ERR_BAD_COORDS = 0x7060,ERR_BAD_GDI_OBJECT = 0x6061,ERR_BAD_HDC = 0x6062,ERR_BAD_HPEN = 0x6063,ERR_BAD_HFONT = 0x6064,ERR_BAD_HBRUSH = 0x6065,ERR_BAD_HBITMAP = 0x6066,ERR_BAD_HRGN = 0x6067,ERR_BAD_HPALETTE = 0x6068,ERR_BAD_HMETAFILE = 0x6069,ERR_GALLOC = 0x1,ERR_GREALLOC = 0x2,ERR_GLOCK = 0x3,ERR_LALLOC = 0x4,ERR_LREALLOC = 0x5,ERR_LLOCK = 0x6,ERR_ALLOCRES = 0x7,ERR_LOCKRES = 0x8,ERR_LOADMODULE = 0x9,ERR_CREATEDLG = 0x40,ERR_CREATEDLG2 = 0x41,ERR_REGISTERCLASS = 0x42,ERR_DCBUSY = 0x43,ERR_CREATEWND = 0x44,ERR_STRUCEXTRA = 0x45,ERR_LOADSTR = 0x46,ERR_LOADMENU = 0x47,ERR_NESTEDBEGINPAINT = 0x48,ERR_BADINDEX = 0x49,ERR_CREATEMENU = 0x4A,ERR_CREATEDC = 0x80,ERR_CREATEMETA = 0x81,ERR_DELOBJSELECTED = 0x82,ERR_SELBITMAP = 0x83,};
enum MACRO_ESB {ESB_ENABLE_BOTH = 0x0,ESB_DISABLE_BOTH = 0x3,ESB_DISABLE_LEFT = 0x1,ESB_DISABLE_RIGHT = 0x2,ESB_DISABLE_UP = 0x1,ESB_DISABLE_DOWN = 0x2,ESB_DISABLE_LTUP = 0x1,ESB_DISABLE_RTDN = 0x2,};
enum MACRO_ETO {ETO_GRAYED = 0x1,ETO_OPAQUE = 0x2,ETO_CLIPPED = 0x4,};
enum MACRO_EXT {EXT_DEVICE_CAPS = 4099,};
enum MACRO_GCL {GCL_MENUNAME = -8,};
enum MACRO_GCW {GCW_HBRBACKGROUND = -10,GCW_HCURSOR = -12,GCW_HICON = -14,GCW_HMODULE = -16,GCW_CBWNDEXTRA = -18,GCW_CBCLSEXTRA = -20,};
enum MACRO_GGO {GGO_METRICS = 0,GGO_BITMAP = 1,GGO_NATIVE = 2,};
enum MACRO_GND {GND_FIRSTINSTANCEONLY = 0x1,GND_FORWARD = 0x0,GND_REVERSE = 0x2,};
enum MACRO_GWL {GWL_WNDPROC = -4,};
enum MACRO_GWW {GWW_HINSTANCE = -6,GWW_HWNDPARENT = -8,GWW_ID = -12,};
enum MACRO_HEP {HEP_NORECOG = 0,HEP_RECOG = 1,HEP_WAITFORTAP = 2,};
enum MACRO_HKP {HKP_SETHOOK = 0,HKP_UNHOOK = -1,};
enum MACRO_HWR {HWR_RESULTS = 0,HWR_APPWIDE = 1,};
enum MACRO_IDB {IDB_RESULTSEGA = 32325,IDB_RESULTSVGA = 32326,IDB_RESULTSHIRESVGA = 32327,};
enum MACRO_IDD {IDD_INSERTOBJECT = 32248,IDD_CHANGEICON = 32249,IDD_CONVERT = 32250,IDD_PASTESPECIAL = 32251,IDD_EDITLINKS = 32252,IDD_FILEOPEN = 32253,IDD_BUSY = 32254,IDD_UPDATELINKS = 32255,IDD_CANNOTUPDATELINK = 32256,IDD_CHANGESOURCE = 32257,IDD_INSERTFILEBROWSE = 32258,IDD_CHANGEICONBROWSE = 32259,IDD_LINKSOURCEUNAVAILABLE = 32260,IDD_SERVERNOTREG = 32261,IDD_LINKTYPECHANGED = 32262,IDD_SERVERNOTFOUND = 32263,IDD_OUTOFMEMORY = 32264,};
enum MACRO_IDS {IDS_OLESTDNOCREATEFILE = 700,IDS_OLESTDNOOPENFILE = 701,IDS_OLESTDDISKFULL = 702,};
enum MACRO_INT {INT_DIV0 = 0,INT_1 = 1,INT_3 = 3,INT_UDINSTR = 6,INT_STKFAULT = 12,INT_GPFAULT = 13,INT_BADPAGEFAULT = 14,INT_CTLALTSYSRQ = 256,};
enum MACRO_IOC {IOC_VOID = 0x0,IOC_OUT = 0x0,IOC_IN = 0x0,IOC_INOUT = 0x0,};
enum MACRO_IOF {IOF_SHOWHELP = 0x1,IOF_SELECTCREATENEW = 0x2,IOF_SELECTCREATEFROMFILE = 0x4,IOF_CHECKLINK = 0x8,IOF_CHECKDISPLAYASICON = 0x10,IOF_CREATENEWOBJECT = 0x20,IOF_CREATEFILEOBJECT = 0x40,IOF_CREATELINKOBJECT = 0x80,IOF_DISABLELINK = 0x100,IOF_VERIFYSERVERSEXIST = 0x200,IOF_DISABLEDISPLAYASICON = 0x400,};
enum MACRO_JOY {JOY_BUTTON1 = 0x1,JOY_BUTTON2 = 0x2,JOY_BUTTON3 = 0x4,JOY_BUTTON4 = 0x8,JOY_BUTTON1CHG = 0x100,JOY_BUTTON2CHG = 0x200,JOY_BUTTON3CHG = 0x400,JOY_BUTTON4CHG = 0x800,};
enum MACRO_LBN {LBN_ERRSPACE = -2,LBN_SELCHANGE = 1,LBN_DBLCLK = 2,LBN_SELCANCEL = 3,LBN_SETFOCUS = 4,LBN_KILLFOCUS = 5,};
enum MACRO_LBS {LBS_NOTIFY = 0x1,LBS_SORT = 0x2,LBS_NOREDRAW = 0x4,LBS_MULTIPLESEL = 0x8,LBS_OWNERDRAWFIXED = 0x10,LBS_OWNERDRAWVARIABLE = 0x20,LBS_HASSTRINGS = 0x40,LBS_USETABSTOPS = 0x80,LBS_NOINTEGRALHEIGHT = 0x100,LBS_MULTICOLUMN = 0x200,LBS_WANTKEYBOARDINPUT = 0x400,LBS_EXTENDEDSEL = 0x800,LBS_DISABLENOSCROLL = 0x1000,LBS_STANDARD = 0x3,};
enum MACRO_LEN {WSADESCRIPTION_LEN = 256,WSASYS_STATUS_LEN = 128,};
enum MACRO_MAP {MAP_GESTOGES = 18,MAP_GESTOVKEYS = 40,};
enum MACRO_MAX {MAX_MONITORS = 4,};
enum MACRO_MCI {MCI_STRING_OFFSET = 512,MCI_VD_OFFSET = 1024,MCI_CD_OFFSET = 1088,MCI_WAVE_OFFSET = 1152,MCI_SEQ_OFFSET = 1216,};
enum MACRO_MIM {MIM_OPEN = 961,MIM_CLOSE = 962,MIM_DATA = 963,MIM_LONGDATA = 964,MIM_ERROR = 965,MIM_LONGERROR = 966,};
enum MACRO_MOD {MOD_MIDIPORT = 1,MOD_SYNTH = 2,MOD_SQSYNTH = 3,MOD_FMSYNTH = 4,MOD_MAPPER = 5,};
enum MACRO_MOM {MOM_OPEN = 967,MOM_CLOSE = 968,MOM_DONE = 969,};
enum MACRO_MSG {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_MAXIOVLEN = 0x10,MSG_PARTIAL = 0x8000,};
enum MACRO_NFY {NFY_UNKNOWN = 0,NFY_LOADSEG = 1,NFY_FREESEG = 2,NFY_STARTDLL = 3,NFY_STARTTASK = 4,NFY_EXITTASK = 5,NFY_DELMODULE = 6,NFY_RIP = 7,NFY_TASKIN = 8,NFY_TASKOUT = 9,NFY_INCHAR = 10,NFY_OUTSTR = 11,NFY_LOGERROR = 12,NFY_LOGPARAMERROR = 13,};
enum MACRO_NTM {NTM_REGULAR = 0x40,NTM_BOLD = 0x20,NTM_ITALIC = 0x1,};
enum MACRO_NUM {NUM_BASIC_COLORS = 48,NUM_CUSTOM_COLORS = 16,};
enum MACRO_OBJ {OBJ_PEN = 1,OBJ_BRUSH = 2,};
enum MACRO_OBM {OBM_SKBBTNUP = 32767,OBM_SKBBTNDOWN = 32766,OBM_SKBBTNDISABLED = 32765,};
enum MACRO_ODA {ODA_DRAWENTIRE = 0x1,ODA_SELECT = 0x2,ODA_FOCUS = 0x4,};
enum MACRO_ODS {ODS_SELECTED = 0x1,ODS_GRAYED = 0x2,ODS_DISABLED = 0x4,ODS_CHECKED = 0x8,ODS_FOCUS = 0x10,};
enum MACRO_ODT {ODT_MENU = 1,ODT_LISTBOX = 2,ODT_COMBOBOX = 3,ODT_BUTTON = 4,};
enum MACRO_OFN {OFN_READONLY = 0x1,OFN_OVERWRITEPROMPT = 0x2,OFN_HIDEREADONLY = 0x4,OFN_NOCHANGEDIR = 0x8,OFN_SHOWHELP = 0x10,OFN_ENABLEHOOK = 0x20,OFN_ENABLETEMPLATE = 0x40,OFN_ENABLETEMPLATEHANDLE = 0x80,OFN_NOVALIDATE = 0x100,OFN_ALLOWMULTISELECT = 0x200,OFN_EXTENSIONDIFFERENT = 0x400,OFN_PATHMUSTEXIST = 0x800,OFN_FILEMUSTEXIST = 0x1000,OFN_CREATEPROMPT = 0x2000,OFN_SHAREAWARE = 0x4000,OFN_NOREADONLYRETURN = 0x8000,OFN_NOTESTFILECREATE = 0x0,OFN_SHAREFALLTHROUGH = 0x2,OFN_SHARENOWARN = 0x1,OFN_SHAREWARN = 0x0,};
enum MACRO_OLE {OLE_E_FIRST = 0x0,OLE_E_LAST = 0xFF,OLE_S_FIRST = 0x0,OLE_S_LAST = 0xFF,};
enum MACRO_OUT {OUT_DEFAULT_PRECIS = 0,OUT_STRING_PRECIS = 1,OUT_CHARACTER_PRECIS = 2,OUT_STROKE_PRECIS = 3,OUT_TT_PRECIS = 4,OUT_DEVICE_PRECIS = 5,OUT_RASTER_PRECIS = 6,OUT_TT_ONLY_PRECIS = 7,};
enum MACRO_PCM {PCM_PENUP = 0x1,PCM_RANGE = 0x2,PCM_INVERT = 0x20,PCM_RECTEXCLUDE = 0x2000,PCM_RECTBOUND = 0x4000,PCM_TIMEOUT = 0x8000,PCM_ADDDEFAULTS = 0x0,};
enum MACRO_PDC {PDC_INTEGRATED = 0x1,PDC_PROXIMITY = 0x2,PDC_RANGE = 0x4,PDC_INVERT = 0x8,PDC_RELATIVE = 0x10,PDC_BARREL1 = 0x20,PDC_BARREL2 = 0x40,PDC_BARREL3 = 0x80,};
enum MACRO_PDK {PDK_UP = 0x0,PDK_DOWN = 0x1,PDK_BARREL1 = 0x2,PDK_BARREL2 = 0x4,PDK_BARREL3 = 0x8,PDK_TRANSITION = 0x10,PDK_INVERTED = 0x80,PDK_OUTOFRANGE = 0x4000,PDK_DRIVER = 0x8000,PDK_TIPMASK = 0x1,PDK_SWITCHES = 0xF,};
enum MACRO_PDT {PDT_NULL = 0,PDT_PRESSURE = 1,PDT_HEIGHT = 2,PDT_ANGLEXY = 3,PDT_ANGLEZ = 4,PDT_BARRELROTATION = 5,PDT_OEMSPECIFIC = 16,};
enum MACRO_PEN {WHITE_PEN = 6,BLACK_PEN = 7,NULL_PEN = 8,};
enum MACRO_PSF {PSF_SHOWHELP = 0x1,PSF_SELECTPASTE = 0x2,PSF_SELECTPASTELINK = 0x4,PSF_CHECKDISPLAYASICON = 0x8,PSF_DISABLEDISPLAYASICON = 0x10,};
enum MACRO_PWR {PWR_OK = 1,PWR_FAIL = -1,PWR_SUSPENDREQUEST = 1,PWR_SUSPENDRESUME = 2,PWR_CRITICALRESUME = 3,};
enum MACRO_QID {QID_SYNC = -1,};
enum MACRO_RCD {RCD_DEFAULT = 0,RCD_LR = 1,RCD_RL = 2,RCD_TB = 3,RCD_BT = 4,};
enum MACRO_RCO {RCO_NOPOINTEREVENT = 0x1,RCO_SAVEALLDATA = 0x2,RCO_SAVEHPENDATA = 0x4,RCO_NOFLASHUNKNOWN = 0x8,RCO_TABLETCOORD = 0x10,RCO_NOSPACEBREAK = 0x20,RCO_NOHIDECURSOR = 0x40,RCO_NOHOOK = 0x80,RCO_BOXED = 0x100,RCO_SUGGEST = 0x200,RCO_DISABLEGESMAP = 0x400,RCO_NOFLASHCURSOR = 0x800,RCO_COLDRECOG = 0x8000,};
enum MACRO_RCP {RCP_LEFTHAND = 0x1,RCP_MAPCHAR = 0x4,};
enum MACRO_RDW {RDW_INVALIDATE = 0x1,RDW_INTERNALPAINT = 0x2,RDW_ERASE = 0x4,RDW_VALIDATE = 0x8,RDW_NOINTERNALPAINT = 0x10,RDW_NOERASE = 0x20,RDW_NOCHILDREN = 0x40,RDW_ALLCHILDREN = 0x80,RDW_UPDATENOW = 0x100,RDW_ERASENOW = 0x200,RDW_FRAME = 0x400,RDW_NOFRAME = 0x800,};
enum MACRO_REC {REC_OEM = -1024,REC_LANGUAGE = -48,REC_GUIDE = -47,REC_PARAMERROR = -46,REC_INVALIDREF = -45,REC_RECTEXCLUDE = -44,REC_RECTBOUND = -43,REC_PCM = -42,REC_RESULTMODE = -41,REC_HWND = -40,REC_ALC = -39,REC_ERRORLEVEL = -38,REC_CLVERIFY = -37,REC_DICT = -36,REC_HREC = -35,REC_BADEVENTREF = -33,REC_NOCOLLECTION = -32,REC_DEBUG = -32,REC_POINTEREVENT = -31,REC_BADHPENDATA = -9,REC_OOM = -8,REC_NOINPUT = -7,REC_NOTABLET = -6,REC_BUSY = -5,REC_BUFFERTOOSMALL = -4,REC_ABORT = -3,REC_OVERFLOW = -1,REC_OK = 0,REC_TERMBOUND = 1,REC_TERMEX = 2,REC_TERMPENUP = 3,REC_TERMRANGE = 4,REC_TERMTIMEOUT = 5,REC_DONE = 6,REC_TERMOEM = 512,};
enum MACRO_REG {REG_SZ = 1,};
enum MACRO_RGN {RGN_AND = 1,RGN_OR = 2,RGN_XOR = 3,RGN_DIFF = 4,RGN_COPY = 5,};
enum MACRO_RPA {RPA_DEFAULT = 1,};
enum MACRO_RPC {RPC_E_FIRST = 0x0,RPC_E_CALL_REJECTED = 0x1,RPC_E_CALL_CANCELED = 0x2,RPC_E_CANTPOST_INSENDCALL = 0x3,RPC_E_CANTCALLOUT_INASYNCCALL = 0x4,RPC_E_CANTCALLOUT_INEXTERNALCALL = 0x5,RPC_E_CONNECTION_TERMINATED = 0x6,RPC_E_SERVER_DIED = 0x7,RPC_E_CLIENT_DIED = 0x8,RPC_E_INVALID_DATAPACKET = 0x9,RPC_E_CANTTRANSMIT_CALL = 0xA,RPC_E_CLIENT_CANTMARSHAL_DATA = 0xB,RPC_E_CLIENT_CANTUNMARSHAL_DATA = 0xC,RPC_E_SERVER_CANTMARSHAL_DATA = 0xD,RPC_E_SERVER_CANTUNMARSHAL_DATA = 0xE,RPC_E_INVALID_DATA = 0xF,RPC_E_INVALID_PARAMETER = 0x10,RPC_E_CANTCALLOUT_AGAIN = 0x11,RPC_E_UNEXPECTED = 0xFFFF,};
enum MACRO_RRM {RRM_STROKE = 0,RRM_SYMBOL = 1,RRM_WORD = 2,RRM_NEWLINE = 3,RRM_COMPLETE = 16,};
enum MACRO_SBS {SBS_HORZ = 0x0,SBS_VERT = 0x1,SBS_TOPALIGN = 0x2,SBS_LEFTALIGN = 0x2,SBS_BOTTOMALIGN = 0x4,SBS_RIGHTALIGN = 0x4,SBS_SIZEBOXTOPLEFTALIGN = 0x2,SBS_SIZEBOXBOTTOMRIGHTALIGN = 0x4,SBS_SIZEBOX = 0x8,};
enum MACRO_SDS {SDS_MENU = 0x1,SDS_SYSMODAL = 0x2,SDS_NOTASKQUEUE = 0x4,SDS_DIALOG = 0x8,SDS_TASKLOCKED = 0x10,};
enum MACRO_SEM {SEM_FAILCRITICALERRORS = 0x1,SEM_NOGPFAULTERRORBOX = 0x2,SEM_NOOPENFILEERRORBOX = 0x8000,};
enum MACRO_SET {SET_ARC_DIRECTION = 4102,SET_BACKGROUND_COLOR = 4103,SET_POLY_MODE = 4104,SET_SCREEN_ANGLE = 4105,SET_SPREAD = 4106,};
enum MACRO_SKB {SKB_QUERY = 0x0,SKB_SHOW = 0x1,SKB_HIDE = 0x2,SKB_CENTER = 0x10,SKB_MOVE = 0x20,SKB_MINIMIZE = 0x40,SKB_FULL = 0x100,SKB_BASIC = 0x200,SKB_NUMPAD = 0x400,};
enum MACRO_SKN {SKN_CHANGED = 1,SKN_POSCHANGED = 1,SKN_PADCHANGED = 2,SKN_MINCHANGED = 4,SKN_VISCHANGED = 8,SKN_TERMINATED = -1,};
enum MACRO_SND {SND_SYNC = 0x0,SND_ASYNC = 0x1,SND_NODEFAULT = 0x2,SND_MEMORY = 0x4,SND_LOOP = 0x8,SND_NOSTOP = 0x10,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_SPI {SPI_GETBEEP = 1,SPI_SETBEEP = 2,SPI_GETMOUSE = 3,SPI_SETMOUSE = 4,SPI_GETBORDER = 5,SPI_SETBORDER = 6,SPI_GETKEYBOARDSPEED = 10,SPI_SETKEYBOARDSPEED = 11,SPI_LANGDRIVER = 12,SPI_ICONHORIZONTALSPACING = 13,SPI_GETSCREENSAVETIMEOUT = 14,SPI_SETSCREENSAVETIMEOUT = 15,SPI_GETSCREENSAVEACTIVE = 16,SPI_SETSCREENSAVEACTIVE = 17,SPI_GETGRIDGRANULARITY = 18,SPI_SETGRIDGRANULARITY = 19,SPI_SETDESKWALLPAPER = 20,SPI_SETDESKPATTERN = 21,SPI_GETKEYBOARDDELAY = 22,SPI_SETKEYBOARDDELAY = 23,SPI_ICONVERTICALSPACING = 24,SPI_GETICONTITLEWRAP = 25,SPI_SETICONTITLEWRAP = 26,SPI_GETMENUDROPALIGNMENT = 27,SPI_SETMENUDROPALIGNMENT = 28,SPI_SETDOUBLECLKWIDTH = 29,SPI_SETDOUBLECLKHEIGHT = 30,SPI_GETICONTITLELOGFONT = 31,SPI_SETDOUBLECLICKTIME = 32,SPI_SETMOUSEBUTTONSWAP = 33,SPI_SETICONTITLELOGFONT = 34,SPI_GETFASTTASKSWITCH = 35,SPI_SETFASTTASKSWITCH = 36,};
enum MACRO_SQL {SQL_SPEC_MAJOR = 2,SQL_SPEC_MINOR = 1,SQL_SQLSTATE_SIZE = 5,SQL_MAX_MESSAGE_LENGTH = 512,SQL_MAX_DSN_LENGTH = 32,SQL_INVALID_HANDLE = -2,SQL_ERROR = -1,SQL_SUCCESS = 0,SQL_SUCCESS_WITH_INFO = 1,SQL_NO_DATA_FOUND = 100,SQL_CHAR = 1,SQL_NUMERIC = 2,SQL_DECIMAL = 3,SQL_INTEGER = 4,SQL_SMALLINT = 5,SQL_FLOAT = 6,SQL_REAL = 7,SQL_DOUBLE = 8,SQL_VARCHAR = 12,SQL_TYPE_NULL = 0,SQL_TYPE_MAX = 12,SQL_C_CHAR = 1,SQL_C_LONG = 4,SQL_C_SHORT = 5,SQL_C_FLOAT = 7,SQL_C_DOUBLE = 8,SQL_C_DEFAULT = 99,SQL_NO_NULLS = 0,SQL_NULLABLE = 1,SQL_NULLABLE_UNKNOWN = 2,SQL_NULL_DATA = -1,SQL_DATA_AT_EXEC = -2,SQL_NTS = -3,SQL_CLOSE = 0,SQL_DROP = 1,SQL_UNBIND = 2,SQL_RESET_PARAMS = 3,SQL_COMMIT = 0,SQL_ROLLBACK = 1,SQL_COLUMN_COUNT = 0,SQL_COLUMN_NAME = 1,SQL_COLUMN_TYPE = 2,SQL_COLUMN_LENGTH = 3,SQL_COLUMN_PRECISION = 4,SQL_COLUMN_SCALE = 5,SQL_COLUMN_DISPLAY_SIZE = 6,SQL_COLUMN_NULLABLE = 7,SQL_COLUMN_UNSIGNED = 8,SQL_COLUMN_MONEY = 9,SQL_COLUMN_UPDATABLE = 10,SQL_COLUMN_AUTO_INCREMENT = 11,SQL_COLUMN_CASE_SENSITIVE = 12,SQL_COLUMN_SEARCHABLE = 13,SQL_COLUMN_TYPE_NAME = 14,SQL_COLUMN_TABLE_NAME = 15,SQL_COLUMN_OWNER_NAME = 16,SQL_COLUMN_QUALIFIER_NAME = 17,SQL_COLUMN_LABEL = 18,SQL_COLATT_OPT_MAX = 18,SQL_COLUMN_DRIVER_START = 1000,SQL_COLATT_OPT_MIN = 0,SQL_ATTR_READONLY = 0,SQL_ATTR_WRITE = 1,SQL_ATTR_READWRITE_UNKNOWN = 2,SQL_UNSEARCHABLE = 0,SQL_LIKE_ONLY = 1,SQL_ALL_EXCEPT_LIKE = 2,SQL_SEARCHABLE = 3,SQL_NULL_HENV = 0,SQL_NULL_HDBC = 0,SQL_NULL_HSTMT = 0,SQL_MAX_OPTION_STRING_LENGTH = 256,SQL_STILL_EXECUTING = 2,SQL_NEED_DATA = 99,SQL_DATE = 9,SQL_TIME = 10,SQL_TIMESTAMP = 11,SQL_LONGVARCHAR = -1,SQL_BINARY = -2,SQL_VARBINARY = -3,SQL_LONGVARBINARY = -4,SQL_BIGINT = -5,SQL_TINYINT = -6,SQL_BIT = -7,SQL_TYPE_DRIVER_START = -80,SQL_SIGNED_OFFSET = -20,SQL_UNSIGNED_OFFSET = -22,SQL_C_DATE = 9,SQL_C_TIME = 10,SQL_C_TIMESTAMP = 11,SQL_C_BINARY = -2,SQL_C_BIT = -7,SQL_C_TINYINT = -6,SQL_C_SLONG = -16,SQL_C_SSHORT = -15,SQL_C_STINYINT = -26,SQL_C_ULONG = -18,SQL_C_USHORT = -17,SQL_C_UTINYINT = -28,SQL_C_BOOKMARK = -18,SQL_TYPE_MIN = -7,SQL_ALL_TYPES = 0,SQL_DRIVER_NOPROMPT = 0,SQL_DRIVER_COMPLETE = 1,SQL_DRIVER_PROMPT = 2,SQL_DRIVER_COMPLETE_REQUIRED = 3,SQL_NO_TOTAL = -4,SQL_DEFAULT_PARAM = -5,SQL_IGNORE = -6,SQL_LEN_DATA_AT_EXEC_OFFSET = -100,SQL_API_SQLALLOCCONNECT = 1,SQL_API_SQLALLOCENV = 2,SQL_API_SQLALLOCSTMT = 3,SQL_API_SQLBINDCOL = 4,SQL_API_SQLCANCEL = 5,SQL_API_SQLCOLATTRIBUTES = 6,SQL_API_SQLCONNECT = 7,SQL_API_SQLDESCRIBECOL = 8,SQL_API_SQLDISCONNECT = 9,SQL_API_SQLERROR = 10,SQL_API_SQLEXECDIRECT = 11,SQL_API_SQLEXECUTE = 12,SQL_API_SQLFETCH = 13,SQL_API_SQLFREECONNECT = 14,SQL_API_SQLFREEENV = 15,SQL_API_SQLFREESTMT = 16,SQL_API_SQLGETCURSORNAME = 17,SQL_API_SQLNUMRESULTCOLS = 18,SQL_API_SQLPREPARE = 19,SQL_API_SQLROWCOUNT = 20,SQL_API_SQLSETCURSORNAME = 21,SQL_API_SQLSETPARAM = 22,SQL_API_SQLTRANSACT = 23,SQL_NUM_FUNCTIONS = 23,SQL_EXT_API_START = 40,SQL_API_SQLCOLUMNS = 40,SQL_API_SQLDRIVERCONNECT = 41,SQL_API_SQLGETCONNECTOPTION = 42,SQL_API_SQLGETDATA = 43,SQL_API_SQLGETFUNCTIONS = 44,SQL_API_SQLGETINFO = 45,SQL_API_SQLGETSTMTOPTION = 46,SQL_API_SQLGETTYPEINFO = 47,SQL_API_SQLPARAMDATA = 48,SQL_API_SQLPUTDATA = 49,SQL_API_SQLSETCONNECTOPTION = 50,SQL_API_SQLSETSTMTOPTION = 51,SQL_API_SQLSPECIALCOLUMNS = 52,SQL_API_SQLSTATISTICS = 53,SQL_API_SQLTABLES = 54,SQL_API_SQLBROWSECONNECT = 55,SQL_API_SQLCOLUMNPRIVILEGES = 56,SQL_API_SQLDATASOURCES = 57,SQL_API_SQLDESCRIBEPARAM = 58,SQL_API_SQLEXTENDEDFETCH = 59,SQL_API_SQLFOREIGNKEYS = 60,SQL_API_SQLMORERESULTS = 61,SQL_API_SQLNATIVESQL = 62,SQL_API_SQLNUMPARAMS = 63,SQL_API_SQLPARAMOPTIONS = 64,SQL_API_SQLPRIMARYKEYS = 65,SQL_API_SQLPROCEDURECOLUMNS = 66,SQL_API_SQLPROCEDURES = 67,SQL_API_SQLSETPOS = 68,SQL_API_SQLSETSCROLLOPTIONS = 69,SQL_API_SQLTABLEPRIVILEGES = 70,SQL_API_SQLDRIVERS = 71,SQL_API_SQLBINDPARAMETER = 72,SQL_EXT_API_LAST = 72,SQL_API_ALL_FUNCTIONS = 0,SQL_NUM_EXTENSIONS = 33,SQL_API_LOADBYORDINAL = 199,SQL_INFO_FIRST = 0,SQL_ACTIVE_CONNECTIONS = 0,SQL_ACTIVE_STATEMENTS = 1,SQL_DATA_SOURCE_NAME = 2,SQL_DRIVER_HDBC = 3,SQL_DRIVER_HENV = 4,SQL_DRIVER_HSTMT = 5,SQL_DRIVER_NAME = 6,SQL_DRIVER_VER = 7,SQL_FETCH_DIRECTION = 8,SQL_ODBC_API_CONFORMANCE = 9,SQL_ODBC_VER = 10,SQL_ROW_UPDATES = 11,SQL_ODBC_SAG_CLI_CONFORMANCE = 12,SQL_SERVER_NAME = 13,SQL_SEARCH_PATTERN_ESCAPE = 14,SQL_ODBC_SQL_CONFORMANCE = 15,SQL_DBMS_NAME = 17,SQL_DBMS_VER = 18,SQL_ACCESSIBLE_TABLES = 19,SQL_ACCESSIBLE_PROCEDURES = 20,SQL_PROCEDURES = 21,SQL_CONCAT_NULL_BEHAVIOR = 22,SQL_CURSOR_COMMIT_BEHAVIOR = 23,SQL_CURSOR_ROLLBACK_BEHAVIOR = 24,SQL_DATA_SOURCE_READ_ONLY = 25,SQL_DEFAULT_TXN_ISOLATION = 26,SQL_EXPRESSIONS_IN_ORDERBY = 27,SQL_IDENTIFIER_CASE = 28,SQL_IDENTIFIER_QUOTE_CHAR = 29,SQL_MAX_COLUMN_NAME_LEN = 30,SQL_MAX_CURSOR_NAME_LEN = 31,SQL_MAX_OWNER_NAME_LEN = 32,SQL_MAX_PROCEDURE_NAME_LEN = 33,SQL_MAX_QUALIFIER_NAME_LEN = 34,SQL_MAX_TABLE_NAME_LEN = 35,SQL_MULT_RESULT_SETS = 36,SQL_MULTIPLE_ACTIVE_TXN = 37,SQL_OUTER_JOINS = 38,SQL_OWNER_TERM = 39,SQL_PROCEDURE_TERM = 40,SQL_QUALIFIER_NAME_SEPARATOR = 41,SQL_QUALIFIER_TERM = 42,SQL_SCROLL_CONCURRENCY = 43,SQL_SCROLL_OPTIONS = 44,SQL_TABLE_TERM = 45,SQL_TXN_CAPABLE = 46,SQL_USER_NAME = 47,SQL_CONVERT_FUNCTIONS = 48,SQL_NUMERIC_FUNCTIONS = 49,SQL_STRING_FUNCTIONS = 50,SQL_SYSTEM_FUNCTIONS = 51,SQL_TIMEDATE_FUNCTIONS = 52,SQL_CONVERT_BIGINT = 53,SQL_CONVERT_BINARY = 54,SQL_CONVERT_BIT = 55,SQL_CONVERT_CHAR = 56,SQL_CONVERT_DATE = 57,SQL_CONVERT_DECIMAL = 58,SQL_CONVERT_DOUBLE = 59,SQL_CONVERT_FLOAT = 60,SQL_CONVERT_INTEGER = 61,SQL_CONVERT_LONGVARCHAR = 62,SQL_CONVERT_NUMERIC = 63,SQL_CONVERT_REAL = 64,SQL_CONVERT_SMALLINT = 65,SQL_CONVERT_TIME = 66,SQL_CONVERT_TIMESTAMP = 67,SQL_CONVERT_TINYINT = 68,SQL_CONVERT_VARBINARY = 69,SQL_CONVERT_VARCHAR = 70,SQL_CONVERT_LONGVARBINARY = 71,SQL_TXN_ISOLATION_OPTION = 72,SQL_ODBC_SQL_OPT_IEF = 73,SQL_CORRELATION_NAME = 74,SQL_NON_NULLABLE_COLUMNS = 75,SQL_DRIVER_HLIB = 76,SQL_DRIVER_ODBC_VER = 77,SQL_LOCK_TYPES = 78,SQL_POS_OPERATIONS = 79,SQL_POSITIONED_STATEMENTS = 80,SQL_GETDATA_EXTENSIONS = 81,SQL_BOOKMARK_PERSISTENCE = 82,SQL_STATIC_SENSITIVITY = 83,SQL_FILE_USAGE = 84,SQL_NULL_COLLATION = 85,SQL_ALTER_TABLE = 86,SQL_COLUMN_ALIAS = 87,SQL_GROUP_BY = 88,SQL_KEYWORDS = 89,SQL_ORDER_BY_COLUMNS_IN_SELECT = 90,SQL_OWNER_USAGE = 91,SQL_QUALIFIER_USAGE = 92,SQL_QUOTED_IDENTIFIER_CASE = 93,SQL_SPECIAL_CHARACTERS = 94,SQL_SUBQUERIES = 95,SQL_UNION = 96,SQL_MAX_COLUMNS_IN_GROUP_BY = 97,SQL_MAX_COLUMNS_IN_INDEX = 98,SQL_MAX_COLUMNS_IN_ORDER_BY = 99,SQL_MAX_COLUMNS_IN_SELECT = 100,SQL_MAX_COLUMNS_IN_TABLE = 101,SQL_MAX_INDEX_SIZE = 102,SQL_MAX_ROW_SIZE_INCLUDES_LONG = 103,SQL_MAX_ROW_SIZE = 104,SQL_MAX_STATEMENT_LEN = 105,SQL_MAX_TABLES_IN_SELECT = 106,SQL_MAX_USER_NAME_LEN = 107,SQL_MAX_CHAR_LITERAL_LEN = 108,SQL_TIMEDATE_ADD_INTERVALS = 109,SQL_TIMEDATE_DIFF_INTERVALS = 110,SQL_NEED_LONG_DATA_LEN = 111,SQL_MAX_BINARY_LITERAL_LEN = 112,SQL_LIKE_ESCAPE_CLAUSE = 113,SQL_QUALIFIER_LOCATION = 114,SQL_OJ_CAPABILITIES = -534,SQL_INFO_LAST = 114,SQL_INFO_DRIVER_START = 1000,SQL_CVT_CHAR = 1,SQL_CVT_NUMERIC = 2,SQL_CVT_DECIMAL = 4,SQL_CVT_INTEGER = 8,SQL_CVT_SMALLINT = 16,SQL_CVT_FLOAT = 32,SQL_CVT_REAL = 64,SQL_CVT_DOUBLE = 128,SQL_CVT_VARCHAR = 256,SQL_CVT_LONGVARCHAR = 512,SQL_CVT_BINARY = 1024,SQL_CVT_VARBINARY = 2048,SQL_CVT_BIT = 4096,SQL_CVT_TINYINT = 8192,SQL_CVT_BIGINT = 16384,SQL_CVT_DATE = -32768,SQL_CVT_TIME = 0,SQL_CVT_TIMESTAMP = 0,SQL_CVT_LONGVARBINARY = 0,SQL_FN_CVT_CONVERT = 1,SQL_FN_STR_CONCAT = 1,SQL_FN_STR_INSERT = 2,SQL_FN_STR_LEFT = 4,SQL_FN_STR_LTRIM = 8,SQL_FN_STR_LENGTH = 16,SQL_FN_STR_LOCATE = 32,SQL_FN_STR_LCASE = 64,SQL_FN_STR_REPEAT = 128,SQL_FN_STR_REPLACE = 256,SQL_FN_STR_RIGHT = 512,SQL_FN_STR_RTRIM = 1024,SQL_FN_STR_SUBSTRING = 2048,SQL_FN_STR_UCASE = 4096,SQL_FN_STR_ASCII = 8192,SQL_FN_STR_CHAR = 16384,SQL_FN_STR_DIFFERENCE = -32768,SQL_FN_STR_LOCATE_2 = 0,SQL_FN_STR_SOUNDEX = 0,SQL_FN_STR_SPACE = 0,SQL_FN_NUM_ABS = 1,SQL_FN_NUM_ACOS = 2,SQL_FN_NUM_ASIN = 4,SQL_FN_NUM_ATAN = 8,SQL_FN_NUM_ATAN2 = 16,SQL_FN_NUM_CEILING = 32,SQL_FN_NUM_COS = 64,SQL_FN_NUM_COT = 128,SQL_FN_NUM_EXP = 256,SQL_FN_NUM_FLOOR = 512,SQL_FN_NUM_LOG = 1024,SQL_FN_NUM_MOD = 2048,SQL_FN_NUM_SIGN = 4096,SQL_FN_NUM_SIN = 8192,SQL_FN_NUM_SQRT = 16384,SQL_FN_NUM_TAN = -32768,SQL_FN_NUM_PI = 0,SQL_FN_NUM_RAND = 0,SQL_FN_NUM_DEGREES = 0,SQL_FN_NUM_LOG10 = 0,SQL_FN_NUM_POWER = 0,SQL_FN_NUM_RADIANS = 0,SQL_FN_NUM_ROUND = 0,SQL_FN_NUM_TRUNCATE = 0,SQL_FN_TD_NOW = 1,SQL_FN_TD_CURDATE = 2,SQL_FN_TD_DAYOFMONTH = 4,SQL_FN_TD_DAYOFWEEK = 8,SQL_FN_TD_DAYOFYEAR = 16,SQL_FN_TD_MONTH = 32,SQL_FN_TD_QUARTER = 64,SQL_FN_TD_WEEK = 128,SQL_FN_TD_YEAR = 256,SQL_FN_TD_CURTIME = 512,SQL_FN_TD_HOUR = 1024,SQL_FN_TD_MINUTE = 2048,SQL_FN_TD_SECOND = 4096,SQL_FN_TD_TIMESTAMPADD = 8192,SQL_FN_TD_TIMESTAMPDIFF = 16384,SQL_FN_TD_DAYNAME = -32768,SQL_FN_TD_MONTHNAME = 0,SQL_FN_SYS_USERNAME = 1,SQL_FN_SYS_DBNAME = 2,SQL_FN_SYS_IFNULL = 4,SQL_FN_TSI_FRAC_SECOND = 1,SQL_FN_TSI_SECOND = 2,SQL_FN_TSI_MINUTE = 4,SQL_FN_TSI_HOUR = 8,SQL_FN_TSI_DAY = 16,SQL_FN_TSI_WEEK = 32,SQL_FN_TSI_MONTH = 64,SQL_FN_TSI_QUARTER = 128,SQL_FN_TSI_YEAR = 256,SQL_OAC_NONE = 0,SQL_OAC_LEVEL1 = 1,SQL_OAC_LEVEL2 = 2,SQL_OSCC_NOT_COMPLIANT = 0,SQL_OSCC_COMPLIANT = 1,SQL_OSC_MINIMUM = 0,SQL_OSC_CORE = 1,SQL_OSC_EXTENDED = 2,SQL_CB_NULL = 0,SQL_CB_NON_NULL = 1,SQL_CB_DELETE = 0,SQL_CB_CLOSE = 1,SQL_CB_PRESERVE = 2,SQL_IC_UPPER = 1,SQL_IC_LOWER = 2,SQL_IC_SENSITIVE = 3,SQL_IC_MIXED = 4,SQL_TC_NONE = 0,SQL_TC_DML = 1,SQL_TC_ALL = 2,SQL_TC_DDL_COMMIT = 3,SQL_TC_DDL_IGNORE = 4,SQL_SO_FORWARD_ONLY = 1,SQL_SO_KEYSET_DRIVEN = 2,SQL_SO_DYNAMIC = 4,SQL_SO_MIXED = 8,SQL_SO_STATIC = 16,SQL_SCCO_READ_ONLY = 1,SQL_SCCO_LOCK = 2,SQL_SCCO_OPT_ROWVER = 4,SQL_SCCO_OPT_VALUES = 8,SQL_FD_FETCH_NEXT = 1,SQL_FD_FETCH_FIRST = 2,SQL_FD_FETCH_LAST = 4,SQL_FD_FETCH_PRIOR = 8,SQL_FD_FETCH_ABSOLUTE = 16,SQL_FD_FETCH_RELATIVE = 32,SQL_FD_FETCH_RESUME = 64,SQL_FD_FETCH_BOOKMARK = 128,SQL_TXN_READ_UNCOMMITTED = 1,SQL_TXN_READ_COMMITTED = 2,SQL_TXN_REPEATABLE_READ = 4,SQL_TXN_SERIALIZABLE = 8,SQL_TXN_VERSIONING = 16,SQL_CN_NONE = 0,SQL_CN_DIFFERENT = 1,SQL_CN_ANY = 2,SQL_NNC_NULL = 0,SQL_NNC_NON_NULL = 1,SQL_NC_HIGH = 0,SQL_NC_LOW = 1,SQL_NC_START = 2,SQL_NC_END = 4,SQL_FILE_NOT_SUPPORTED = 0,SQL_FILE_TABLE = 1,SQL_FILE_QUALIFIER = 2,SQL_GD_ANY_COLUMN = 1,SQL_GD_ANY_ORDER = 2,SQL_GD_BLOCK = 4,SQL_GD_BOUND = 8,SQL_AT_ADD_COLUMN = 1,SQL_AT_DROP_COLUMN = 2,SQL_PS_POSITIONED_DELETE = 1,SQL_PS_POSITIONED_UPDATE = 2,SQL_PS_SELECT_FOR_UPDATE = 4,SQL_GB_NOT_SUPPORTED = 0,SQL_GB_GROUP_BY_EQUALS_SELECT = 1,SQL_GB_GROUP_BY_CONTAINS_SELECT = 2,SQL_GB_NO_RELATION = 3,SQL_OU_DML_STATEMENTS = 1,SQL_OU_PROCEDURE_INVOCATION = 2,SQL_OU_TABLE_DEFINITION = 4,SQL_OU_INDEX_DEFINITION = 8,SQL_OU_PRIVILEGE_DEFINITION = 16,SQL_QU_DML_STATEMENTS = 1,SQL_QU_PROCEDURE_INVOCATION = 2,SQL_QU_TABLE_DEFINITION = 4,SQL_QU_INDEX_DEFINITION = 8,SQL_QU_PRIVILEGE_DEFINITION = 16,SQL_SQ_COMPARISON = 1,SQL_SQ_EXISTS = 2,SQL_SQ_IN = 4,SQL_SQ_QUANTIFIED = 8,SQL_SQ_CORRELATED_SUBQUERIES = 16,SQL_U_UNION = 1,SQL_U_UNION_ALL = 2,SQL_BP_CLOSE = 1,SQL_BP_DELETE = 2,SQL_BP_DROP = 4,SQL_BP_TRANSACTION = 8,SQL_BP_UPDATE = 16,SQL_BP_OTHER_HSTMT = 32,SQL_BP_SCROLL = 64,SQL_SS_ADDITIONS = 1,SQL_SS_DELETIONS = 2,SQL_SS_UPDATES = 4,SQL_LCK_NO_CHANGE = 1,SQL_LCK_EXCLUSIVE = 2,SQL_LCK_UNLOCK = 4,SQL_POS_POSITION = 1,SQL_POS_REFRESH = 2,SQL_POS_UPDATE = 4,SQL_POS_DELETE = 8,SQL_POS_ADD = 16,SQL_QL_START = 1,SQL_QL_END = 2,SQL_OJ_LEFT = 1,SQL_OJ_RIGHT = 2,SQL_OJ_FULL = 4,SQL_OJ_NESTED = 8,SQL_OJ_NOT_ORDERED = 16,SQL_OJ_INNER = 32,SQL_OJ_ALL_COMPARISON_OPS = 64,SQL_QUERY_TIMEOUT = 0,SQL_MAX_ROWS = 1,SQL_NOSCAN = 2,SQL_MAX_LENGTH = 3,SQL_ASYNC_ENABLE = 4,SQL_BIND_TYPE = 5,SQL_CURSOR_TYPE = 6,SQL_CONCURRENCY = 7,SQL_KEYSET_SIZE = 8,SQL_ROWSET_SIZE = 9,SQL_SIMULATE_CURSOR = 10,SQL_RETRIEVE_DATA = 11,SQL_USE_BOOKMARKS = 12,SQL_GET_BOOKMARK = 13,SQL_ROW_NUMBER = 14,SQL_STMT_OPT_MAX = 14,SQL_STMT_OPT_MIN = 0,SQL_QUERY_TIMEOUT_DEFAULT = 0,SQL_MAX_ROWS_DEFAULT = 0,SQL_NOSCAN_OFF = 0,SQL_NOSCAN_ON = 1,SQL_NOSCAN_DEFAULT = 0,SQL_MAX_LENGTH_DEFAULT = 0,SQL_ASYNC_ENABLE_OFF = 0,SQL_ASYNC_ENABLE_ON = 1,SQL_ASYNC_ENABLE_DEFAULT = 0,SQL_BIND_BY_COLUMN = 0,SQL_CONCUR_READ_ONLY = 1,SQL_CONCUR_LOCK = 2,SQL_CONCUR_ROWVER = 3,SQL_CONCUR_VALUES = 4,SQL_CURSOR_FORWARD_ONLY = 0,SQL_CURSOR_KEYSET_DRIVEN = 1,SQL_CURSOR_DYNAMIC = 2,SQL_CURSOR_STATIC = 3,SQL_ROWSET_SIZE_DEFAULT = 1,SQL_KEYSET_SIZE_DEFAULT = 0,SQL_SC_NON_UNIQUE = 0,SQL_SC_TRY_UNIQUE = 1,SQL_SC_UNIQUE = 2,SQL_RD_OFF = 0,SQL_RD_ON = 1,SQL_RD_DEFAULT = 1,SQL_UB_OFF = 0,SQL_UB_ON = 1,SQL_UB_DEFAULT = 0,SQL_ACCESS_MODE = 101,SQL_AUTOCOMMIT = 102,SQL_LOGIN_TIMEOUT = 103,SQL_OPT_TRACE = 104,SQL_OPT_TRACEFILE = 105,SQL_TRANSLATE_DLL = 106,SQL_TRANSLATE_OPTION = 107,SQL_TXN_ISOLATION = 108,SQL_CURRENT_QUALIFIER = 109,SQL_ODBC_CURSORS = 110,SQL_QUIET_MODE = 111,SQL_PACKET_SIZE = 112,SQL_CONN_OPT_MAX = 112,SQL_CONNECT_OPT_DRVR_START = 1000,SQL_CONN_OPT_MIN = 101,SQL_MODE_READ_WRITE = 0,SQL_MODE_READ_ONLY = 1,SQL_MODE_DEFAULT = 0,SQL_AUTOCOMMIT_OFF = 0,SQL_AUTOCOMMIT_ON = 1,SQL_AUTOCOMMIT_DEFAULT = 1,SQL_LOGIN_TIMEOUT_DEFAULT = 15,SQL_OPT_TRACE_OFF = 0,SQL_OPT_TRACE_ON = 1,SQL_OPT_TRACE_DEFAULT = 0,SQL_CUR_USE_IF_NEEDED = 0,SQL_CUR_USE_ODBC = 1,SQL_CUR_USE_DRIVER = 2,SQL_CUR_DEFAULT = 2,SQL_BEST_ROWID = 1,SQL_ROWVER = 2,SQL_SCOPE_CURROW = 0,SQL_SCOPE_TRANSACTION = 1,SQL_SCOPE_SESSION = 2,SQL_ENTIRE_ROWSET = 0,SQL_POSITION = 0,SQL_REFRESH = 1,SQL_UPDATE = 2,SQL_DELETE = 3,SQL_ADD = 4,SQL_LOCK_NO_CHANGE = 0,SQL_LOCK_EXCLUSIVE = 1,SQL_LOCK_UNLOCK = 2,SQL_FETCH_NEXT = 1,SQL_FETCH_FIRST = 2,SQL_FETCH_LAST = 3,SQL_FETCH_PRIOR = 4,SQL_FETCH_ABSOLUTE = 5,SQL_FETCH_RELATIVE = 6,SQL_FETCH_BOOKMARK = 8,SQL_ROW_SUCCESS = 0,SQL_ROW_DELETED = 1,SQL_ROW_UPDATED = 2,SQL_ROW_NOROW = 3,SQL_ROW_ADDED = 4,SQL_ROW_ERROR = 5,SQL_CASCADE = 0,SQL_RESTRICT = 1,SQL_SET_NULL = 2,SQL_PARAM_TYPE_UNKNOWN = 0,SQL_PARAM_INPUT = 1,SQL_PARAM_INPUT_OUTPUT = 2,SQL_RESULT_COL = 3,SQL_PARAM_OUTPUT = 4,SQL_RETURN_VALUE = 5,SQL_PARAM_TYPE_DEFAULT = 2,SQL_SETPARAM_VALUE_MAX = -1,SQL_INDEX_UNIQUE = 0,SQL_INDEX_ALL = 1,SQL_QUICK = 0,SQL_ENSURE = 1,SQL_TABLE_STAT = 0,SQL_INDEX_CLUSTERED = 1,SQL_INDEX_HASHED = 2,SQL_INDEX_OTHER = 3,SQL_PT_UNKNOWN = 0,SQL_PT_PROCEDURE = 1,SQL_PT_FUNCTION = 2,SQL_PC_UNKNOWN = 0,SQL_PC_NOT_PSEUDO = 1,SQL_PC_PSEUDO = 2,SQL_DATABASE_NAME = 16,SQL_FD_FETCH_PREV = 8,SQL_FETCH_PREV = 4,SQL_CONCUR_TIMESTAMP = 3,SQL_SCCO_OPT_TIMESTAMP = 4,SQL_CC_DELETE = 0,SQL_CR_DELETE = 0,SQL_CC_CLOSE = 1,SQL_CR_CLOSE = 1,SQL_CC_PRESERVE = 2,SQL_CR_PRESERVE = 2,SQL_FETCH_RESUME = 7,SQL_SCROLL_FORWARD_ONLY = 0,SQL_SCROLL_KEYSET_DRIVEN = -1,SQL_SCROLL_DYNAMIC = -2,SQL_SCROLL_STATIC = -3,SQL_PC_NON_PSEUDO = 1,};
enum MACRO_STG {STG_E_INVALIDFUNCTION = 0x1,STG_E_FILENOTFOUND = 0x2,STG_E_PATHNOTFOUND = 0x3,STG_E_TOOMANYOPENFILES = 0x4,STG_E_ACCESSDENIED = 0x5,STG_E_INVALIDHANDLE = 0x6,STG_E_INSUFFICIENTMEMORY = 0x8,STG_E_INVALIDPOINTER = 0x9,STG_E_NOMOREFILES = 0x12,STG_E_DISKISWRITEPROTECTED = 0x13,STG_E_SEEKERROR = 0x19,STG_E_WRITEFAULT = 0x1D,STG_E_READFAULT = 0x1E,STG_E_SHAREVIOLATION = 0x20,STG_E_LOCKVIOLATION = 0x21,STG_E_FILEALREADYEXISTS = 0x50,STG_E_INVALIDPARAMETER = 0x57,STG_E_MEDIUMFULL = 0x70,STG_E_ABNORMALAPIEXIT = 0xFA,STG_E_INVALIDHEADER = 0xFB,STG_E_INVALIDNAME = 0xFC,STG_E_UNKNOWN = 0xFD,STG_E_UNIMPLEMENTEDFUNCTION = 0xFE,STG_E_INVALIDFLAG = 0xFF,STG_E_INUSE = 0x100,STG_E_NOTCURRENT = 0x101,STG_E_REVERTED = 0x102,STG_E_CANTSAVE = 0x103,STG_E_OLDFORMAT = 0x104,STG_E_OLDDLL = 0x105,STG_E_SHAREREQUIRED = 0x106,STG_E_NOTFILEBASEDSTORAGE = 0x107,STG_E_EXTANTMARSHALLINGS = 0x108,STG_S_CONVERTED = 0x200,};
enum MACRO_STM {STM_SETICON = 1024,STM_GETICON = 1025,};
enum MACRO_SWP {SWP_NOSIZE = 0x1,SWP_NOMOVE = 0x2,SWP_NOZORDER = 0x4,SWP_NOREDRAW = 0x8,SWP_NOACTIVATE = 0x10,SWP_FRAMECHANGED = 0x20,SWP_SHOWWINDOW = 0x40,SWP_HIDEWINDOW = 0x80,SWP_NOCOPYBITS = 0x100,SWP_NOOWNERZORDER = 0x200,SWP_DRAWFRAME = 0x20,SWP_NOREPOSITION = 0x200,SWP_NOSENDCHANGING = 0x400,SWP_DEFERERASE = 0x2000,};
enum MACRO_SYV {SYV_NULL = 0x0,SYV_UNKNOWN = 0x1,SYV_EMPTY = 0x3,SYV_BEGINOR = 0x10,SYV_ENDOR = 0x11,SYV_OR = 0x12,SYV_SOFTNEWLINE = 0x20,SYV_SPACENULL = 0x0,SYV_KKCONVERT = 0xFFD4,SYV_CLEAR = 0xFFD5,SYV_EXTENDSELECT = 0xFFD8,SYV_UNDO = 0xFFD9,SYV_COPY = 0xFFDA,SYV_CUT = 0xFFDB,SYV_PASTE = 0xFFDC,SYV_CLEARWORD = 0xFFDD,SYV_USER = 0xFFDE,SYV_CORRECT = 0xFFDF,SYV_BACKSPACE = 0x8,SYV_TAB = 0x9,SYV_RETURN = 0xD,SYV_SPACE = 0x20,SYV_APPGESTUREMASK = 0x0,SYV_CIRCLEUPA = 0x24B6,SYV_CIRCLEUPZ = 0x24CF,SYV_CIRCLELOA = 0x24D0,SYV_CIRCLELOZ = 0x24E9,SYV_SHAPELINE = 0x1,SYV_SHAPEELLIPSE = 0x2,SYV_SHAPERECT = 0x3,SYV_SHAPEMIN = 0x1,SYV_SHAPEMAX = 0x3,};
enum MACRO_TCP {TCP_NODELAY = 0x1,TCP_BSDURGENT = 0x7000,};
enum MACRO_TPM {TPM_LEFTBUTTON = 0x0,TPM_RIGHTBUTTON = 0x2,TPM_LEFTALIGN = 0x0,TPM_CENTERALIGN = 0x4,TPM_RIGHTALIGN = 0x8,};
enum MACRO_USA {USA_COUNTRYCODE = 1,};
enum MACRO_VAR {VAR_TIMEVALUEONLY = 0x1,VAR_DATEVALUEONLY = 0x2,};
enum MACRO_VER {VER_FILEFLAGSMASK = 3,VER_FILEFLAGS = 0,VER_FILEOS = 1,};
enum MACRO_VFF {VFF_CURNEDEST = 0x1,VFF_FILEINUSE = 0x2,VFF_BUFFTOOSMALL = 0x4,};
enum MACRO_VFT {VFT_UNKNOWN = 0x0,VFT_APP = 0x1,VFT_DLL = 0x2,VFT_DRV = 0x3,VFT_FONT = 0x4,VFT_VXD = 0x5,VFT_STATIC_LIB = 0x7,};
enum MACRO_VIF {VIF_TEMPFILE = 0x1,VIF_MISMATCH = 0x2,VIF_SRCOLD = 0x4,VIF_DIFFLANG = 0x8,VIF_DIFFCODEPG = 0x10,VIF_DIFFTYPE = 0x20,VIF_WRITEPROT = 0x40,VIF_FILEINUSE = 0x80,VIF_OUTOFSPACE = 0x100,VIF_ACCESSVIOLATION = 0x200,VIF_SHARINGVIOLATION = 0x400,VIF_CANNOTCREATE = 0x800,VIF_CANNOTDELETE = 0x1000,VIF_CANNOTRENAME = 0x2000,VIF_CANNOTDELETECUR = 0x4000,VIF_OUTOFMEMORY = 0x8000,VIF_CANNOTREADSRC = 0x0,VIF_CANNOTREADDST = 0x0,VIF_BUFFTOOSMALL = 0x0,};
enum MACRO_VOS {VOS_UNKNOWN = 0x0,VOS_DOS = 0x0,VOS_OS216 = 0x0,VOS_OS232 = 0x0,VOS_NT = 0x0,VOS__BASE = 0x0,VOS__WINDOWS16 = 0x1,VOS__PM16 = 0x2,VOS__PM32 = 0x3,VOS__WINDOWS32 = 0x4,VOS_DOS_WINDOWS16 = 0x1,VOS_DOS_WINDOWS32 = 0x4,VOS_OS216_PM16 = 0x2,VOS_OS232_PM32 = 0x3,VOS_NT_WINDOWS32 = 0x4,};
enum MACRO_VWM {VWM_MOUSEMOVE = 0x1,VWM_MOUSELEFTDOWN = 0x2,VWM_MOUSELEFTUP = 0x4,VWM_MOUSERIGHTDOWN = 0x8,VWM_MOUSERIGHTUP = 0x10,};
enum MACRO_WCR {WCR_RECOGNAME = 0,WCR_QUERY = 1,WCR_CONFIGDIALOG = 2,WCR_DEFAULT = 3,WCR_RCCHANGE = 4,WCR_VERSION = 5,WCR_TRAIN = 6,WCR_TRAINSAVE = 7,WCR_TRAINMAX = 8,WCR_TRAINDIRTY = 9,WCR_TRAINCUSTOM = 10,WCR_QUERYLANGUAGE = 11,WCR_USERCHANGE = 12,WCR_PRIVATE = 1024,};
enum MACRO_WDI {WDI_OPTIONS = 0x1,WDI_FILTER = 0x2,WDI_ALLOCBREAK = 0x4,};
enum MACRO_WEP {WEP_SYSTEM_EXIT = 1,WEP_FREE_DLL = 0,};
enum MACRO_WIM {WIM_OPEN = 958,WIM_CLOSE = 959,WIM_DATA = 960,};
enum MACRO_WOM {WOM_OPEN = 955,WOM_CLOSE = 956,WOM_DONE = 957,};
enum MACRO_WPF {WPF_SETMINPOSITION = 0x1,WPF_RESTORETOMAXIMIZED = 0x2,};
enum MACRO_WVR {WVR_ALIGNTOP = 0x10,WVR_ALIGNLEFT = 0x20,WVR_ALIGNBOTTOM = 0x40,WVR_ALIGNRIGHT = 0x80,WVR_HREDRAW = 0x100,WVR_VREDRAW = 0x200,WVR_REDRAW = 0x300,WVR_VALIDRECTS = 0x400,};
enum MACRO_XST {XST_NULL = 0,XST_INCOMPLETE = 1,XST_CONNECTED = 2,XST_INIT1 = 3,XST_INIT2 = 4,XST_REQSENT = 5,XST_DATARCVD = 6,XST_POKESENT = 7,XST_POKEACKRCVD = 8,XST_EXECSENT = 9,XST_EXECACKRCVD = 10,XST_ADVSENT = 11,XST_UNADVSENT = 12,XST_ADVACKRCVD = 13,XST_UNADVACKRCVD = 14,XST_ADVDATASENT = 15,XST_ADVDATAACKRCVD = 16,};
enum MACRO_rmj {rmj = 0,rmm = 23,};
enum MACRO_rup {rup = 639,};
typedef struct _OLESTREAM OLESTREAM;
typedef struct tagOLEUIBUSY OLEUIBUSY;
typedef struct tagPARAMDATA PARAMDATA;
typedef struct tagPENPACKET PENPACKET;
typedef struct protoent *PPROTOENT;
typedef struct sockaddr *PSOCKADDR;
typedef struct tagRGBTRIPLE RGBTRIPLE;
typedef struct tagSAFEARRAY SAFEARRAY;
typedef struct tagSTGMEDIUM STGMEDIUM;
typedef struct tagTASKENTRY TASKENTRY;
typedef struct tagTIMERINFO TIMERINFO;
typedef struct tagWINDOWPOS WINDOWPOS;
enum tagCLSCTX {CLSCTX_INPROC_SERVER = 0x1,CLSCTX_INPROC_HANDLER = 0x2,CLSCTX_LOCAL_SERVER = 0x4,};
struct tagDDEACK {unsigned __int16 bAppReturnCode : 8;unsigned __int16 reserved : 6;unsigned __int16 fBusy : 1;unsigned __int16 fAck : 1;};
enum tagMEMCTX {MEMCTX_TASK = 0x1,MEMCTX_SHARED = 0x2,MEMCTX_UNKNOWN = 0xFFFF,MEMCTX_SAME = 0xFFFE,};
enum tagMSHCTX {MSHCTX_LOCAL = 0x0,MSHCTX_NOSHAREDMEM = 0x1,};
struct tagPOINTL {__int32 x;__int32 y;};
enum tagREGCLS {REGCLS_SINGLEUSE = 0x0,REGCLS_MULTIPLEUSE = 0x1,REGCLS_MULTI_SEPARATE = 0x2,};
typedef unsigned __int32 BOOKMARK;
typedef int CATCHBUF[9];
typedef struct tagCONVINFO CONVINFO;
typedef struct tagCTLSTYLE CTLSTYLE;
typedef struct tagDEVNAMES DEVNAMES;
typedef struct tagELEMDESC ELEMDESC;
typedef struct tagEVENTMSG EVENTMSG;
typedef struct tagFILETIME FILETIME;
typedef struct tagFMS_LOAD FMS_LOAD;
typedef struct tagFUNCDESC FUNCDESC;
typedef unsigned __int32 HREFTYPE;
struct IBindCtx {struct IBindCtxVtbl *lpVtbl;};
struct IMarshal {struct IMarshalVtbl *lpVtbl;};
struct IMoniker {struct IMonikerVtbl *lpVtbl;};
struct IOleLink {struct IOleLinkVtbl *lpVtbl;};
struct IPersist {struct IPersistVtbl *lpVtbl;};
struct IStorage {struct IStorageVtbl *lpVtbl;};
struct ITypeLib {struct ITypeLibVtbl *lpVtbl;};
struct IUnknown {struct IUnknownVtbl *lpVtbl;};
typedef struct tagLOGBRUSH LOGBRUSH;
typedef struct fd_set *LPFD_SET;
typedef struct linger *LPLINGER;
typedef IMalloc *LPMALLOC;
typedef struct tagPANOSE *LPPANOSE;
typedef IStream *LPSTREAM;
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_IPX = 6,AF_NS = 6,AF_ISO = 7,AF_OSI = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_NETBIOS = 17,AF_MAX = 18,};
enum MACRO_BI {BI_RGB = 0,BI_RLE8 = 1,BI_RLE4 = 2,};
enum MACRO_BM {BM_GETCHECK = 1024,BM_SETCHECK = 1025,BM_GETSTATE = 1026,BM_SETSTATE = 1027,BM_SETSTYLE = 1028,};
enum MACRO_BN {BN_CLICKED = 0,BN_PAINT = 1,BN_HILITE = 2,BN_UNHILITE = 3,BN_DISABLE = 4,BN_DOUBLECLICKED = 5,};
enum MACRO_BS {BS_SOLID = 0,BS_NULL = 1,BS_HOLLOW = 1,BS_HATCHED = 2,BS_PATTERN = 3,BS_INDEXED = 4,BS_DIBPATTERN = 5,};
enum MACRO_BZ {BZ_DISABLECANCELBUTTON = 0x1,BZ_DISABLESWITCHTOBUTTON = 0x2,BZ_DISABLERETRYBUTTON = 0x4,BZ_NOTRESPONDINGDIALOG = 0x8,};
enum MACRO_C1 {C1_TRANSPARENT = 0x1,};
enum MACRO_C2 {C2_LEFTTORIGHT = 0x1,C2_RIGHTTOLEFT = 0x2,C2_EUROPENUMBER = 0x3,C2_EUROPESEPARATOR = 0x4,C2_EUROPETERMINATOR = 0x5,C2_ARABICNUMBER = 0x6,C2_COMMONSEPARATOR = 0x7,C2_BLOCKSEPARATOR = 0x8,C2_SEGMENTSEPARATOR = 0x9,C2_WHITESPACE = 0xA,C2_OTHERNEUTRAL = 0xB,C2_NOTAPPLICABLE = 0x0,};
enum MACRO_C3 {C3_NONSPACING = 0x1,C3_DIACRITIC = 0x2,C3_VOWELMARK = 0x4,C3_SYMBOL = 0x8,C3_KATAKANA = 0x10,C3_HIRAGANA = 0x20,C3_HALFWIDTH = 0x40,C3_FULLWIDTH = 0x80,C3_IDEOGRAPH = 0x100,C3_JAPANACCENT = 0x200,C3_NOTAPPLICABLE = 0x0,};
enum MACRO_CB {CB_GETEDITSEL = 1024,CB_LIMITTEXT = 1025,CB_SETEDITSEL = 1026,CB_ADDSTRING = 1027,CB_DELETESTRING = 1028,CB_DIR = 1029,CB_GETCOUNT = 1030,CB_GETCURSEL = 1031,CB_GETLBTEXT = 1032,CB_GETLBTEXTLEN = 1033,CB_INSERTSTRING = 1034,CB_RESETCONTENT = 1035,CB_FINDSTRING = 1036,CB_SELECTSTRING = 1037,CB_SETCURSEL = 1038,CB_SHOWDROPDOWN = 1039,CB_GETITEMDATA = 1040,CB_SETITEMDATA = 1041,CB_GETDROPPEDCONTROLRECT = 1042,CB_SETITEMHEIGHT = 1043,CB_GETITEMHEIGHT = 1044,CB_SETEXTENDEDUI = 1045,CB_GETEXTENDEDUI = 1046,CB_GETDROPPEDSTATE = 1047,CB_FINDSTRINGEXACT = 1048,};
enum MACRO_CC {CC_NONE = 0x0,CC_CIRCLES = 0x1,CC_PIE = 0x2,CC_CHORD = 0x4,CC_ELLIPSES = 0x8,CC_WIDE = 0x10,CC_STYLED = 0x20,CC_WIDESTYLED = 0x40,CC_INTERIORS = 0x80,CC_ROUNDRECT = 0x100,};
enum MACRO_CD {CD_LBSELNOITEMS = -1,CD_LBSELCHANGE = 0,CD_LBSELSUB = 1,CD_LBSELADD = 2,};
enum MACRO_CE {CE_RXOVER = 0x1,CE_OVERRUN = 0x2,CE_RXPARITY = 0x4,CE_FRAME = 0x8,CE_BREAK = 0x10,CE_CTSTO = 0x20,CE_DSRTO = 0x40,CE_RLSDTO = 0x80,CE_TXFULL = 0x100,CE_PTO = 0x200,CE_IOE = 0x400,CE_DNS = 0x800,CE_OOP = 0x1000,CE_MODE = 0x8000,};
enum MACRO_CF {CF_TEXT = 1,CF_BITMAP = 2,CF_METAFILEPICT = 3,CF_SYLK = 4,CF_DIF = 5,CF_TIFF = 6,CF_OEMTEXT = 7,CF_DIB = 8,CF_PALETTE = 9,CF_PENDATA = 10,CF_RIFF = 11,CF_WAVE = 12,CF_OWNERDISPLAY = 128,CF_DSPTEXT = 129,CF_DSPBITMAP = 130,CF_DSPMETAFILEPICT = 131,CF_PRIVATEFIRST = 512,CF_PRIVATELAST = 767,CF_GDIOBJFIRST = 768,CF_GDIOBJLAST = 1023,};
enum MACRO_CL {CL_NULL = 0,CL_MINIMUM = 1,CL_MAXIMUM = 100,};
enum MACRO_CN {CN_RECEIVE = 0x1,CN_TRANSMIT = 0x2,CN_EVENT = 0x4,};
enum MACRO_CO {CO_E_FIRST = 0x1F0,CO_E_LAST = 0x1FF,CO_S_FIRST = 0x1F0,CO_S_LAST = 0x1FF,CO_E_NOTINITIALIZED = 0x1F0,CO_E_ALREADYINITIALIZED = 0x1F1,CO_E_CANTDETERMINECLASS = 0x1F2,CO_E_CLASSSTRING = 0x1F3,CO_E_IIDSTRING = 0x1F4,CO_E_APPNOTFOUND = 0x1F5,CO_E_APPSINGLEUSE = 0x1F6,CO_E_ERRORINAPP = 0x1F7,CO_E_DLLNOTFOUND = 0x1F8,CO_E_ERRORINDLL = 0x1F9,CO_E_WRONGOSFORAPP = 0x1FA,CO_E_OBJNOTREG = 0x1FB,CO_E_OBJISREG = 0x1FC,CO_E_OBJNOTCONNECTED = 0x1FD,CO_E_APPDIDNTREG = 0x1FE,};
enum MACRO_CP {CP_NONE = 0x0,CP_RECTANGLE = 0x1,CP_REGION = 0x2,};
enum MACRO_CS {CS_VREDRAW = 0x1,CS_HREDRAW = 0x2,CS_OWNDC = 0x20,CS_CLASSDC = 0x40,CS_PARENTDC = 0x80,CS_SAVEBITS = 0x800,CS_DBLCLKS = 0x8,CS_BYTEALIGNCLIENT = 0x1000,CS_BYTEALIGNWINDOW = 0x2000,CS_NOCLOSE = 0x200,CS_KEYCVTWINDOW = 0x4,CS_NOKEYCVT = 0x100,CS_GLOBALCLASS = 0x4000,};
enum MACRO_CT {CT_CTYPE1 = 0x1,CT_CTYPE2 = 0x2,CT_CTYPE3 = 0x4,};
enum MACRO_CW {CW_USEDEFAULT = 0x8000,};
enum MACRO_DC {DC_HASDEFID = 0x534B,};
enum MACRO_DD {DD_DEFSCROLLINSET = 11,DD_DEFSCROLLDELAY = 50,DD_DEFSCROLLINTERVAL = 50,DD_DEFDRAGDELAY = 200,DD_DEFDRAGMINDIST = 2,};
enum MACRO_DM {DM_GETDEFID = 1024,DM_SETDEFID = 1025,};
enum MACRO_DN {DN_DEFAULTPRN = 0x1,};
enum MACRO_DS {DS_ABSALIGN = 0x1,DS_SYSMODAL = 0x2,DS_LOCALEDIT = 0x20,DS_SETFONT = 0x40,DS_MODALFRAME = 0x80,DS_NOIDLEMSG = 0x100,};
enum MACRO_DT {DT_PLOTTER = 0,DT_RASDISPLAY = 1,DT_RASPRINTER = 2,DT_RASCAMERA = 3,DT_CHARSTREAM = 4,DT_METAFILE = 5,DT_DISPFILE = 6,};
enum MACRO_DV {DV_E_FORMATETC = 100,DV_E_DVTARGETDEVICE = 101,DV_E_STGMEDIUM = 102,DV_E_STATDATA = 103,DV_E_LINDEX = 104,DV_E_TYMED = 105,DV_E_CLIPFORMAT = 106,DV_E_DVASPECT = 107,DV_E_DVTARGETDEVICE_SIZE = 108,DV_E_NOIVIEWOBJECT = 109,};
enum MACRO_EC {EC_ENABLEALL = 0,EC_ENABLEONE = 128,EC_DISABLE = 8,EC_QUERYWAITING = 2,};
enum MACRO_EM {EM_GETSEL = 1024,EM_SETSEL = 1025,EM_GETRECT = 1026,EM_SETRECT = 1027,EM_SETRECTNP = 1028,EM_LINESCROLL = 1030,EM_GETMODIFY = 1032,EM_SETMODIFY = 1033,EM_GETLINECOUNT = 1034,EM_LINEINDEX = 1035,EM_SETHANDLE = 1036,EM_GETHANDLE = 1037,EM_LINELENGTH = 1041,EM_REPLACESEL = 1042,EM_SETFONT = 1043,EM_GETLINE = 1044,EM_LIMITTEXT = 1045,EM_CANUNDO = 1046,EM_UNDO = 1047,EM_FMTLINES = 1048,EM_LINEFROMCHAR = 1049,EM_SETWORDBREAK = 1050,EM_SETTABSTOPS = 1051,EM_SETPASSWORDCHAR = 1052,EM_EMPTYUNDOBUFFER = 1053,EM_GETFIRSTVISIBLELINE = 1054,EM_SETREADONLY = 1055,EM_SETWORDBREAKPROC = 1056,EM_GETWORDBREAKPROC = 1057,EM_GETPASSWORDCHAR = 1058,};
enum MACRO_EN {EN_SETFOCUS = 0x100,EN_KILLFOCUS = 0x200,EN_CHANGE = 0x300,EN_UPDATE = 0x400,EN_ERRSPACE = 0x500,EN_MAXTEXT = 0x501,EN_HSCROLL = 0x601,EN_VSCROLL = 0x602,};
enum MACRO_ES {ES_LEFT = 0x0,ES_CENTER = 0x1,ES_RIGHT = 0x2,ES_MULTILINE = 0x4,ES_UPPERCASE = 0x8,ES_LOWERCASE = 0x10,ES_PASSWORD = 0x20,ES_AUTOVSCROLL = 0x40,ES_AUTOHSCROLL = 0x80,ES_NOHIDESEL = 0x100,ES_OEMCONVERT = 0x400,ES_READONLY = 0x800,ES_WANTRETURN = 0x1000,};
enum MACRO_EV {EV_RXCHAR = 0x1,EV_RXFLAG = 0x2,EV_TXEMPTY = 0x4,EV_CTS = 0x8,EV_DSR = 0x10,EV_RLSD = 0x20,EV_BREAK = 0x40,EV_ERR = 0x80,EV_RING = 0x100,EV_PERR = 0x200,EV_CTSS = 0x400,EV_DSRS = 0x800,EV_RLSDS = 0x1000,EV_RingTe = 0x2000,EV_RINGTE = 0x2000,};
enum MACRO_EW {EW_RESTARTWINDOWS = 0x42,EW_REBOOTSYSTEM = 0x43,};
enum MACRO_FD {FD_SETSIZE = 64,};
enum MACRO_FF {FF_DONTCARE = 0x0,FF_ROMAN = 0x10,FF_SWISS = 0x20,FF_MODERN = 0x30,FF_SCRIPT = 0x40,FF_DECORATIVE = 0x50,};
enum MACRO_FM {FM_GETFOCUS = 0x600,FM_GETDRIVEINFO = 0x601,FM_GETSELCOUNT = 0x602,FM_GETSELCOUNTLFN = 0x603,FM_GETFILESEL = 0x604,FM_GETFILESELLFN = 0x605,FM_REFRESH_WINDOWS = 0x606,FM_RELOAD_EXTENSIONS = 0x607,};
enum MACRO_FR {FR_DOWN = 0x1,FR_WHOLEWORD = 0x2,FR_MATCHCASE = 0x4,FR_FINDNEXT = 0x8,FR_REPLACE = 0x10,FR_REPLACEALL = 0x20,FR_DIALOGTERM = 0x40,FR_SHOWHELP = 0x80,FR_ENABLEHOOK = 0x100,FR_ENABLETEMPLATE = 0x200,FR_NOUPDOWN = 0x400,FR_NOMATCHCASE = 0x800,FR_NOWHOLEWORD = 0x1000,FR_ENABLETEMPLATEHANDLE = 0x2000,FR_HIDEUPDOWN = 0x4000,FR_HIDEMATCHCASE = 0x8000,FR_HIDEWHOLEWORD = 0x0,};
enum MACRO_FW {FW_DONTCARE = 0,FW_THIN = 100,FW_EXTRALIGHT = 200,FW_LIGHT = 300,FW_NORMAL = 400,FW_MEDIUM = 500,FW_SEMIBOLD = 600,FW_BOLD = 700,FW_EXTRABOLD = 800,FW_HEAVY = 900,FW_ULTRALIGHT = 200,FW_REGULAR = 400,FW_DEMIBOLD = 600,FW_ULTRABOLD = 800,FW_BLACK = 900,};
enum MACRO_GD {GD_USERDEFINED = 0,GD_CURSORCOMPONENT = 1,GD_BITMAP = 2,GD_ICONCOMPONENT = 3,GD_MENU = 4,GD_DIALOG = 5,GD_STRING = 6,GD_FONTDIR = 7,GD_FONT = 8,GD_ACCELERATORS = 9,GD_RCDATA = 10,GD_ERRTABLE = 11,GD_CURSOR = 12,GD_ICON = 14,GD_NAMETABLE = 15,GD_MAX_RESOURCE = 15,};
enum MACRO_GF {GF_PDB_OWNER = 0x100,};
enum MACRO_GT {GT_UNKNOWN = 0,GT_DGROUP = 1,GT_DATA = 2,GT_CODE = 3,GT_TASK = 4,GT_RESOURCE = 5,GT_MODULE = 6,GT_FREE = 7,GT_INTERNAL = 8,GT_SENTINEL = 9,GT_BURGERMASTER = 10,};
enum MACRO_GW {GW_HWNDFIRST = 0,GW_HWNDLAST = 1,GW_HWNDNEXT = 2,GW_HWNDPREV = 3,GW_OWNER = 4,GW_CHILD = 5,};
enum MACRO_HC {HC_ACTION = 0,HC_GETLPLPFN = -3,HC_LPLPFNNEXT = -2,HC_LPFNNEXT = -1,};
enum MACRO_HE {HE_GETRC = 3,HE_SETRC = 4,HE_GETINFLATE = 5,HE_SETINFLATE = 6,HE_GETUNDERLINE = 7,HE_SETUNDERLINE = 8,HE_GETINKHANDLE = 9,HE_SETINKMODE = 10,HE_STOPINKMODE = 11,HE_GETRCRESULTCODE = 12,HE_DEFAULTFONT = 13,HE_CHARPOSITION = 14,HE_CHAROFFSET = 15,HE_GETRCRESULT = 22,HE_KKCONVERT = 30,HE_GETKKCONVERT = 31,HE_CANCELKKCONVERT = 32,HE_FIXKKCONVERT = 33,};
enum MACRO_HN {HN_ENDREC = 4,HN_DELAYEDRECOGFAIL = 5,HN_RCRESULT = 20,HN_ENDKKCONVERT = 30,};
enum MACRO_HS {HS_HORIZONTAL = 0,HS_VERTICAL = 1,HS_FDIAGONAL = 2,HS_BDIAGONAL = 3,HS_CROSS = 4,HS_DIAGCROSS = 5,};
enum MACRO_ID {ID_DEFAULTINST = -2,};
enum MACRO_IE {IE_BADID = -1,IE_OPEN = -2,IE_NOPEN = -3,IE_MEMORY = -4,IE_DEFAULT = -5,IE_HARDWARE = -10,IE_BYTESIZE = -11,IE_BAUDRATE = -12,};
enum MACRO_IN {IN_CLASSA_NET = 0x0,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0x0,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x0,IN_CLASSC_NET = 0xFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,};
enum MACRO_IP {IP_OPTIONS = 1,IP_MULTICAST_IF = 2,IP_MULTICAST_TTL = 3,IP_MULTICAST_LOOP = 4,IP_ADD_MEMBERSHIP = 5,IP_DROP_MEMBERSHIP = 6,IP_DEFAULT_MULTICAST_TTL = 1,IP_DEFAULT_MULTICAST_LOOP = 1,IP_MAX_MEMBERSHIPS = 20,};
enum MACRO_KF {KF_EXTENDED = 0x100,KF_DLGMODE = 0x800,KF_MENUMODE = 0x1000,KF_ALTDOWN = 0x2000,KF_REPEAT = 0x4000,KF_UP = 0x8000,};
enum MACRO_LB {LB_ADDSTRING = 1025,LB_INSERTSTRING = 1026,LB_DELETESTRING = 1027,LB_RESETCONTENT = 1029,LB_SETSEL = 1030,LB_SETCURSEL = 1031,LB_GETSEL = 1032,LB_GETCURSEL = 1033,LB_GETTEXT = 1034,LB_GETTEXTLEN = 1035,LB_GETCOUNT = 1036,LB_SELECTSTRING = 1037,LB_DIR = 1038,LB_GETTOPINDEX = 1039,LB_FINDSTRING = 1040,LB_GETSELCOUNT = 1041,LB_GETSELITEMS = 1042,LB_SETTABSTOPS = 1043,LB_GETHORIZONTALEXTENT = 1044,LB_SETHORIZONTALEXTENT = 1045,LB_SETCOLUMNWIDTH = 1046,LB_SETTOPINDEX = 1048,LB_GETITEMRECT = 1049,LB_GETITEMDATA = 1050,LB_SETITEMDATA = 1051,LB_SELITEMRANGE = 1052,LB_SETCARETINDEX = 1055,LB_GETCARETINDEX = 1056,LB_SETITEMHEIGHT = 1057,LB_GETITEMHEIGHT = 1058,LB_FINDSTRINGEXACT = 1059,};
enum MACRO_LC {LC_NONE = 0x0,LC_POLYLINE = 0x2,LC_MARKER = 0x4,LC_POLYMARKER = 0x8,LC_WIDE = 0x10,LC_STYLED = 0x20,LC_WIDESTYLED = 0x40,LC_INTERIORS = 0x80,};
enum MACRO_LF {LF_FACESIZE = 32,};
enum MACRO_LT {LT_NORMAL = 0,LT_FREE = 255,LT_GDI_PEN = 1,LT_GDI_BRUSH = 2,LT_GDI_FONT = 3,LT_GDI_PALETTE = 4,LT_GDI_BITMAP = 5,LT_GDI_RGN = 6,LT_GDI_DC = 7,LT_GDI_DISABLED_DC = 8,LT_GDI_METADC = 9,LT_GDI_METAFILE = 10,LT_GDI_MAX = 10,LT_USER_CLASS = 1,LT_USER_WND = 2,LT_USER_STRING = 3,LT_USER_MENU = 4,LT_USER_CLIP = 5,LT_USER_CBOX = 6,LT_USER_PALETTE = 7,LT_USER_ED = 8,LT_USER_BWL = 9,LT_USER_OWNERDRAW = 10,LT_USER_SPB = 11,LT_USER_CHECKPOINT = 12,LT_USER_DCE = 13,LT_USER_MWP = 14,LT_USER_PROP = 15,LT_USER_LBIV = 16,LT_USER_MISC = 17,LT_USER_ATOMS = 18,LT_USER_LOCKINPUTSTATE = 19,LT_USER_HOOKLIST = 20,LT_USER_USERSEEUSERDOALLOC = 21,LT_USER_HOTKEYLIST = 22,LT_USER_POPUPMENU = 23,LT_USER_HANDLETABLE = 32,LT_USER_MAX = 32,};
enum MACRO_MA {MA_ACTIVATE = 1,MA_ACTIVATEANDEAT = 2,MA_NOACTIVATE = 3,MA_NOACTIVATEANDEAT = 4,};
enum MACRO_MB {MB_OK = 0x0,MB_OKCANCEL = 0x1,MB_ABORTRETRYIGNORE = 0x2,MB_YESNOCANCEL = 0x3,MB_YESNO = 0x4,MB_RETRYCANCEL = 0x5,MB_TYPEMASK = 0xF,MB_ICONHAND = 0x10,MB_ICONQUESTION = 0x20,MB_ICONEXCLAMATION = 0x30,MB_ICONASTERISK = 0x40,MB_ICONMASK = 0xF0,MB_ICONINFORMATION = 0x40,MB_ICONSTOP = 0x10,MB_DEFBUTTON1 = 0x0,MB_DEFBUTTON2 = 0x100,MB_DEFBUTTON3 = 0x200,MB_DEFMASK = 0xF00,MB_APPLMODAL = 0x0,MB_SYSTEMMODAL = 0x1000,MB_TASKMODAL = 0x2000,MB_NOFOCUS = 0x8000,};
enum MACRO_MF {MF_INSERT = 0x0,MF_CHANGE = 0x80,MF_APPEND = 0x100,MF_DELETE = 0x200,MF_REMOVE = 0x1000,MF_BYCOMMAND = 0x0,MF_BYPOSITION = 0x400,MF_SEPARATOR = 0x800,MF_ENABLED = 0x0,MF_GRAYED = 0x1,MF_DISABLED = 0x2,MF_UNCHECKED = 0x0,MF_CHECKED = 0x8,MF_USECHECKBITMAPS = 0x200,MF_STRING = 0x0,MF_BITMAP = 0x4,MF_OWNERDRAW = 0x100,MF_POPUP = 0x10,MF_MENUBARBREAK = 0x20,MF_MENUBREAK = 0x40,MF_UNHILITE = 0x0,MF_HILITE = 0x80,MF_SYSMENU = 0x2000,MF_HELP = 0x4000,MF_MOUSESELECT = 0x8000,MF_END = 0x80,};
enum MACRO_MH {MH_CREATE = 1,MH_KEEP = 2,MH_DELETE = 3,MH_CLEANUP = 4,};
enum MACRO_MK {MK_LBUTTON = 0x1,MK_RBUTTON = 0x2,MK_SHIFT = 0x4,MK_CONTROL = 0x8,MK_MBUTTON = 0x10,};
enum MACRO_MM {MM_TEXT = 1,MM_LOMETRIC = 2,MM_HIMETRIC = 3,MM_LOENGLISH = 4,MM_HIENGLISH = 5,MM_TWIPS = 6,MM_ISOTROPIC = 7,MM_ANISOTROPIC = 8,};
enum MACRO_NF {NF_NORMAL = 0,NF_TASKSWITCH = 1,NF_RIP = 2,};
enum MACRO_OF {OF_READ = 0x0,OF_WRITE = 0x1,OF_READWRITE = 0x2,OF_SHARE_COMPAT = 0x0,OF_SHARE_EXCLUSIVE = 0x10,OF_SHARE_DENY_WRITE = 0x20,OF_SHARE_DENY_READ = 0x30,OF_SHARE_DENY_NONE = 0x40,OF_PARSE = 0x100,OF_DELETE = 0x200,OF_VERIFY = 0x400,OF_SEARCH = 0x400,OF_CANCEL = 0x800,OF_CREATE = 0x1000,OF_PROMPT = 0x2000,OF_EXIST = 0x4000,OF_REOPEN = 0x8000,};
enum MACRO_PC {PC_NONE = 0x0,PC_POLYGON = 0x1,PC_RECTANGLE = 0x2,PC_WINDPOLYGON = 0x4,PC_SCANLINE = 0x8,PC_WIDE = 0x10,PC_STYLED = 0x20,PC_WIDESTYLED = 0x40,PC_INTERIORS = 0x80,};
enum MACRO_PD {PD_ALLPAGES = 0x0,PD_SELECTION = 0x1,PD_PAGENUMS = 0x2,PD_NOSELECTION = 0x4,PD_NOPAGENUMS = 0x8,PD_COLLATE = 0x10,PD_PRINTTOFILE = 0x20,PD_PRINTSETUP = 0x40,PD_NOWARNING = 0x80,PD_RETURNDC = 0x100,PD_RETURNIC = 0x200,PD_RETURNDEFAULT = 0x400,PD_SHOWHELP = 0x800,PD_ENABLEPRINTHOOK = 0x1000,PD_ENABLESETUPHOOK = 0x2000,PD_ENABLEPRINTTEMPLATE = 0x4000,PD_ENABLESETUPTEMPLATE = 0x8000,PD_ENABLEPRINTTEMPLATEHANDLE = 0x0,PD_ENABLESETUPTEMPLATEHANDLE = 0x0,PD_USEDEVMODECOPIES = 0x0,PD_DISABLEPRINTTOFILE = 0x0,PD_HIDEPRINTTOFILE = 0x0,};
enum MACRO_PF {PF_UNSPEC = 0,PF_UNIX = 1,PF_INET = 2,PF_IMPLINK = 3,PF_PUP = 4,PF_CHAOS = 5,PF_NS = 6,PF_IPX = 6,PF_ISO = 7,PF_OSI = 7,PF_ECMA = 8,PF_DATAKIT = 9,PF_CCITT = 10,PF_SNA = 11,PF_DECnet = 12,PF_DLI = 13,PF_LAT = 14,PF_HYLINK = 15,PF_APPLETALK = 16,PF_MAX = 18,};
enum MACRO_PM {PM_NOREMOVE = 0x0,PM_REMOVE = 0x1,PM_NOYIELD = 0x2,};
enum MACRO_PR {PR_JOBSTATUS = 0x0,};
enum MACRO_PS {PS_SOLID = 0,PS_DASH = 1,PS_DOT = 2,PS_DASHDOT = 3,PS_DASHDOTDOT = 4,PS_NULL = 5,PS_INSIDEFRAME = 6,};
enum MACRO_QS {QS_KEY = 0x1,QS_MOUSEMOVE = 0x2,QS_MOUSEBUTTON = 0x4,QS_MOUSE = 0x6,QS_POSTMESSAGE = 0x8,QS_TIMER = 0x10,QS_PAINT = 0x20,QS_SENDMESSAGE = 0x40,QS_ALLINPUT = 0x7F,};
enum MACRO_R2 {R2_BLACK = 1,R2_NOTMERGEPEN = 2,R2_MASKNOTPEN = 3,R2_NOTCOPYPEN = 4,R2_MASKPENNOT = 5,R2_NOT = 6,R2_XORPEN = 7,R2_NOTMASKPEN = 8,R2_MASKPEN = 9,R2_NOTXORPEN = 10,R2_NOP = 11,R2_MERGENOTPEN = 12,R2_COPYPEN = 13,R2_MERGEPENNOT = 14,R2_MERGEPEN = 15,R2_WHITE = 16,};
enum MACRO_RC {RC_BITBLT = 0x1,RC_BANDING = 0x2,RC_SCALING = 0x4,RC_BITMAP64 = 0x8,RC_GDI20_OUTPUT = 0x10,RC_GDI20_STATE = 0x20,RC_SAVEBITMAP = 0x40,RC_DI_BITMAP = 0x80,RC_PALETTE = 0x100,RC_DIBTODEV = 0x200,RC_BIGFONT = 0x400,RC_STRETCHBLT = 0x800,RC_FLOODFILL = 0x1000,RC_STRETCHDIB = 0x2000,RC_OP_DX_OUTPUT = 0x4000,RC_DEVBITS = 0x8000,};
enum MACRO_SB {SB_LINEUP = 0,SB_LINELEFT = 0,SB_LINEDOWN = 1,SB_LINERIGHT = 1,SB_PAGEUP = 2,SB_PAGELEFT = 2,SB_PAGEDOWN = 3,SB_PAGERIGHT = 3,SB_THUMBPOSITION = 4,SB_THUMBTRACK = 5,SB_TOP = 6,SB_LEFT = 6,SB_BOTTOM = 7,SB_RIGHT = 7,SB_ENDSCROLL = 8,SB_HORZ = 0,SB_VERT = 1,SB_CTL = 2,SB_BOTH = 3,};
enum MACRO_SC {SC_SIZE = 0xF000,SC_MOVE = 0xF010,SC_MINIMIZE = 0xF020,SC_MAXIMIZE = 0xF030,SC_NEXTWINDOW = 0xF040,SC_PREVWINDOW = 0xF050,SC_CLOSE = 0xF060,SC_VSCROLL = 0xF070,SC_HSCROLL = 0xF080,SC_MOUSEMENU = 0xF090,SC_KEYMENU = 0xF100,SC_ARRANGE = 0xF110,SC_RESTORE = 0xF120,SC_TASKLIST = 0xF130,SC_SCREENSAVE = 0xF140,SC_HOTKEY = 0xF150,SC_ICON = 0xF020,SC_ZOOM = 0xF030,};
enum MACRO_SE {SE_ERR_SHARE = 26,SE_ERR_ASSOCINCOMPLETE = 27,SE_ERR_DDETIMEOUT = 28,SE_ERR_DDEFAIL = 29,SE_ERR_DDEBUSY = 30,SE_ERR_NOASSOC = 31,};
enum MACRO_SM {SM_CXSCREEN = 0,SM_CYSCREEN = 1,SM_CXVSCROLL = 2,SM_CYHSCROLL = 3,SM_CYCAPTION = 4,SM_CXBORDER = 5,SM_CYBORDER = 6,SM_CXDLGFRAME = 7,SM_CYDLGFRAME = 8,SM_CYVTHUMB = 9,SM_CXHTHUMB = 10,SM_CXICON = 11,SM_CYICON = 12,SM_CXCURSOR = 13,SM_CYCURSOR = 14,SM_CYMENU = 15,SM_CXFULLSCREEN = 16,SM_CYFULLSCREEN = 17,SM_CYKANJIWINDOW = 18,SM_MOUSEPRESENT = 19,SM_CYVSCROLL = 20,SM_CXHSCROLL = 21,SM_DEBUG = 22,SM_SWAPBUTTON = 23,SM_RESERVED1 = 24,SM_RESERVED2 = 25,SM_RESERVED3 = 26,SM_RESERVED4 = 27,SM_CXMIN = 28,SM_CYMIN = 29,SM_CXSIZE = 30,SM_CYSIZE = 31,SM_CXFRAME = 32,SM_CYFRAME = 33,SM_CXMINTRACK = 34,SM_CYMINTRACK = 35,SM_CXDOUBLECLK = 36,SM_CYDOUBLECLK = 37,SM_CXICONSPACING = 38,SM_CYICONSPACING = 39,SM_MENUDROPALIGNMENT = 40,SM_PENWINDOWS = 41,SM_DBCSENABLED = 42,SM_CMETRICS = 43,};
enum MACRO_SO {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_DONTLINGER = 0xFF7F,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_CONNDATA = 0x7000,SO_CONNOPT = 0x7001,SO_DISCDATA = 0x7002,SO_DISCOPT = 0x7003,SO_CONNDATALEN = 0x7004,SO_CONNOPTLEN = 0x7005,SO_DISCDATALEN = 0x7006,SO_DISCOPTLEN = 0x7007,SO_OPENTYPE = 0x7008,SO_SYNCHRONOUS_ALERT = 0x10,SO_SYNCHRONOUS_NONALERT = 0x20,SO_MAXDG = 0x7009,SO_MAXPATHDG = 0x700A,};
enum MACRO_SP {SP_NOTREPORTED = 0x4000,SP_ERROR = 0xFFFF,SP_APPABORT = 0xFFFE,SP_USERABORT = 0xFFFD,SP_OUTOFDISK = 0xFFFC,SP_OUTOFMEMORY = 0xFFFB,};
enum MACRO_SS {SS_LEFT = 0x0,SS_CENTER = 0x1,SS_RIGHT = 0x2,SS_ICON = 0x3,SS_BLACKRECT = 0x4,SS_GRAYRECT = 0x5,SS_WHITERECT = 0x6,SS_BLACKFRAME = 0x7,SS_GRAYFRAME = 0x8,SS_WHITEFRAME = 0x9,SS_SIMPLE = 0xB,SS_LEFTNOWORDWRAP = 0xC,SS_NOPREFIX = 0x80,};
enum MACRO_ST {ST_CONNECTED = 0x1,ST_ADVISE = 0x2,ST_ISLOCAL = 0x4,ST_BLOCKED = 0x8,ST_CLIENT = 0x10,ST_TERMINATED = 0x20,ST_INLIST = 0x40,ST_BLOCKNEXT = 0x80,ST_ISSELF = 0x100,};
enum MACRO_SW {SW_HIDE = 0,SW_SHOWNORMAL = 1,SW_NORMAL = 1,SW_SHOWMINIMIZED = 2,SW_SHOWMAXIMIZED = 3,SW_MAXIMIZE = 3,SW_SHOWNOACTIVATE = 4,SW_SHOW = 5,SW_MINIMIZE = 6,SW_SHOWMINNOACTIVE = 7,SW_SHOWNA = 8,SW_RESTORE = 9,};
enum MACRO_TA {TA_NOUPDATECP = 0x0,TA_UPDATECP = 0x1,TA_LEFT = 0x0,TA_RIGHT = 0x2,TA_CENTER = 0x6,TA_TOP = 0x0,TA_BOTTOM = 0x8,TA_BASELINE = 0x18,};
enum MACRO_TC {TC_OP_CHARACTER = 0x1,TC_OP_STROKE = 0x2,TC_CP_STROKE = 0x4,TC_CR_90 = 0x8,TC_CR_ANY = 0x10,TC_SF_X_YINDEP = 0x20,TC_SA_DOUBLE = 0x40,TC_SA_INTEGER = 0x80,TC_SA_CONTIN = 0x100,TC_EA_DOUBLE = 0x200,TC_IA_ABLE = 0x400,TC_UA_ABLE = 0x800,TC_SO_ABLE = 0x1000,TC_RA_ABLE = 0x2000,TC_VA_ABLE = 0x4000,TC_RESERVED = 0x8000,};
enum MACRO_TF {TF_FORCEDRIVE = 0x80,};
enum MACRO_TT {TT_POLYGON_TYPE = 24,TT_PRIM_LINE = 1,TT_PRIM_QSPLINE = 2,TT_AVAILABLE = 1,TT_ENABLED = 2,};
enum MACRO_VK {VK_LBUTTON = 0x1,VK_RBUTTON = 0x2,VK_CANCEL = 0x3,VK_MBUTTON = 0x4,VK_BACK = 0x8,VK_TAB = 0x9,VK_CLEAR = 0xC,VK_RETURN = 0xD,VK_SHIFT = 0x10,VK_CONTROL = 0x11,VK_MENU = 0x12,VK_PAUSE = 0x13,VK_CAPITAL = 0x14,VK_ESCAPE = 0x1B,VK_SPACE = 0x20,VK_PRIOR = 0x21,VK_NEXT = 0x22,VK_END = 0x23,VK_HOME = 0x24,VK_LEFT = 0x25,VK_UP = 0x26,VK_RIGHT = 0x27,VK_DOWN = 0x28,VK_SELECT = 0x29,VK_PRINT = 0x2A,VK_EXECUTE = 0x2B,VK_SNAPSHOT = 0x2C,VK_INSERT = 0x2D,VK_DELETE = 0x2E,VK_HELP = 0x2F,VK_NUMPAD0 = 0x60,VK_NUMPAD1 = 0x61,VK_NUMPAD2 = 0x62,VK_NUMPAD3 = 0x63,VK_NUMPAD4 = 0x64,VK_NUMPAD5 = 0x65,VK_NUMPAD6 = 0x66,VK_NUMPAD7 = 0x67,VK_NUMPAD8 = 0x68,VK_NUMPAD9 = 0x69,VK_MULTIPLY = 0x6A,VK_ADD = 0x6B,VK_SEPARATOR = 0x6C,VK_SUBTRACT = 0x6D,VK_DECIMAL = 0x6E,VK_DIVIDE = 0x6F,VK_F1 = 0x70,VK_F2 = 0x71,VK_F3 = 0x72,VK_F4 = 0x73,VK_F5 = 0x74,VK_F6 = 0x75,VK_F7 = 0x76,VK_F8 = 0x77,VK_F9 = 0x78,VK_F10 = 0x79,VK_F11 = 0x7A,VK_F12 = 0x7B,VK_F13 = 0x7C,VK_F14 = 0x7D,VK_F15 = 0x7E,VK_F16 = 0x7F,VK_F17 = 0x80,VK_F18 = 0x81,VK_F19 = 0x82,VK_F20 = 0x83,VK_F21 = 0x84,VK_F22 = 0x85,VK_F23 = 0x86,VK_F24 = 0x87,VK_NUMLOCK = 0x90,VK_SCROLL = 0x91,};
enum MACRO_VS {VS_FFI_SIGNATURE = 0x4BD,VS_FFI_STRUCVERSION = 0x0,VS_FFI_FILEFLAGSMASK = 0x3F,VS_FF_DEBUG = 0x1,VS_FF_PRERELEASE = 0x2,VS_FF_PATCHED = 0x4,VS_FF_PRIVATEBUILD = 0x8,VS_FF_INFOINFERRED = 0x10,VS_FF_SPECIALBUILD = 0x20,};
enum MACRO_VT {VT_VECTOR = 0x1000,VT_ARRAY = 0x2000,VT_BYREF = 0x4000,VT_RESERVED = 0x8000,};
enum MACRO_WA {WA_INACTIVE = 0,WA_ACTIVE = 1,WA_CLICKACTIVE = 2,};
enum MACRO_WB {WB_LEFT = 0,WB_RIGHT = 1,WB_ISDELIMITER = 2,};
enum MACRO_WF {WF_PMODE = 0x1,WF_CPU286 = 0x2,WF_CPU386 = 0x4,WF_CPU486 = 0x8,WF_STANDARD = 0x10,WF_WIN286 = 0x10,WF_ENHANCED = 0x20,WF_WIN386 = 0x20,WF_CPU086 = 0x40,WF_CPU186 = 0x80,WF_LARGEFRAME = 0x100,WF_SMALLFRAME = 0x200,WF_80x87 = 0x400,WF_PAGING = 0x800,WF_WLO = 0x8000,};
enum MACRO_WH {WH_GETMESSAGE = 3,WH_CALLWNDPROC = 4,WH_MSGFILTER = -1,WH_SYSMSGFILTER = 6,};
enum MACRO_WM {WM_COMPACTING = 0x41,};
enum MACRO_WN {WN_SUCCESS = 0x0,WN_NOT_SUPPORTED = 0x1,WN_NET_ERROR = 0x2,WN_MORE_DATA = 0x3,WN_BAD_POINTER = 0x4,WN_BAD_VALUE = 0x5,WN_BAD_PASSWORD = 0x6,WN_ACCESS_DENIED = 0x7,WN_FUNCTION_BUSY = 0x8,WN_WINDOWS_ERROR = 0x9,WN_BAD_USER = 0xA,WN_OUT_OF_MEMORY = 0xB,WN_CANCEL = 0xC,WN_CONTINUE = 0xD,WN_NOT_CONNECTED = 0x30,WN_OPEN_FILES = 0x31,WN_BAD_NETNAME = 0x32,WN_BAD_LOCALNAME = 0x33,WN_ALREADY_CONNECTED = 0x34,WN_DEVICE_ERROR = 0x35,WN_CONNECTION_CLOSED = 0x36,};
enum MACRO_WS {WS_OVERLAPPED = 0x0,WS_POPUP = 0x0,WS_CHILD = 0x0,WS_CLIPSIBLINGS = 0x0,WS_CLIPCHILDREN = 0x0,WS_VISIBLE = 0x0,WS_DISABLED = 0x0,WS_MINIMIZE = 0x0,WS_MAXIMIZE = 0x0,WS_CAPTION = 0x0,WS_BORDER = 0x0,WS_DLGFRAME = 0x0,WS_VSCROLL = 0x0,WS_HSCROLL = 0x0,WS_SYSMENU = 0x0,WS_THICKFRAME = 0x0,WS_MINIMIZEBOX = 0x0,WS_MAXIMIZEBOX = 0x0,WS_GROUP = 0x0,WS_TABSTOP = 0x0,WS_OVERLAPPEDWINDOW = 0x0,WS_POPUPWINDOW = 0x0,WS_CHILDWINDOW = 0x0,WS_EX_DLGMODALFRAME = 0x1,WS_EX_NOPARENTNOTIFY = 0x4,WS_EX_TOPMOST = 0x8,WS_EX_ACCEPTFILES = 0x10,WS_EX_TRANSPARENT = 0x20,WS_TILED = 0x0,WS_ICONIC = 0x0,WS_SIZEBOX = 0x0,WS_TILEDWINDOW = 0x0,};
typedef struct _MMCKINFO MMCKINFO;
typedef struct _MMIOINFO MMIOINFO;
typedef int (__pascal __near near *NEARPROC)();
typedef struct tagOFSTRUCT OFSTRUCT;
typedef struct tagCPLINFO *PCPLINFO;
typedef struct hostent *PHOSTENT;
typedef struct in_addr *PIN_ADDR;
typedef struct tagPD PRINTDLG;
typedef struct protoent PROTOENT;
typedef struct servent *PSERVENT;
typedef struct timeval *PTIMEVAL;
typedef struct tagRCRESULT RCRESULT;
typedef struct sockaddr SOCKADDR;
typedef struct tagSTATDATA STATDATA;
typedef struct timecaps_tag TIMECAPS;
typedef struct tagTLIBATTR TLIBATTR;
typedef struct tagTYPEATTR TYPEATTR;
typedef struct tagTYPEDESC TYPEDESC;
typedef struct tagWNDCLASS WNDCLASS;
struct protoent {char *p_name;char * *p_aliases;int p_proto;};
struct tagDDELN {unsigned __int16 unused : 13;unsigned __int16 fRelease : 1;unsigned __int16 fDeferUpd : 1;unsigned __int16 fAckReq : 1;int cfFormat;};
struct tagGUIDE {int xOrigin;int yOrigin;int cxBox;int cyBox;int cxBase;int cyBase;int cHorzBox;int cVertBox;int cyMid;};
enum tagMKSYS {MKSYS_NONE = 0x0,MKSYS_GENERICCOMPOSITE = 0x1,MKSYS_FILEMONIKER = 0x2,MKSYS_ANTIMONIKER = 0x3,MKSYS_ITEMMONIKER = 0x4,MKSYS_POINTERMONIKER = 0x5,};
struct tagPOINT {int x;int y;};
struct tagRECTL {__int32 left;__int32 top;__int32 right;__int32 bottom;};
struct tagSIZEL {__int32 cx;__int32 cy;};
enum tagSTGTY {STGTY_STORAGE = 0x1,STGTY_STREAM = 0x2,STGTY_LOCKBYTES = 0x3,STGTY_PROPERTY = 0x4,};
enum tagTYMED {TYMED_HGLOBAL = 0x1,TYMED_FILE = 0x2,TYMED_ISTREAM = 0x4,TYMED_ISTORAGE = 0x8,TYMED_GDI = 0x10,TYMED_MFPICT = 0x20,TYMED_NULL = 0x0,};
typedef struct auxcaps_tag AUXCAPS;
typedef union tagBINDPTR BINDPTR;
typedef struct tagCOMSTAT COMSTAT;
typedef struct tagCPLINFO CPLINFO;
typedef struct tagCTLINFO CTLINFO;
typedef struct tagCTLTYPE CTLTYPE;
typedef struct tagDDEDATA DDEDATA;
typedef struct tagDDEPOKE DDEPOKE;
typedef struct tagDEVMODE DEVMODE;
typedef struct _9811B5662EE51361168BFF08BB491D75 DOCINFO;
typedef int (__pascal *FARPROC)();
typedef struct hostent HOSTENT;
typedef void *HRESULT;
typedef struct tagHSZPAIR HSZPAIR;
typedef struct tagIDLDESC IDLDESC;
struct IMalloc {struct IMallocVtbl *lpVtbl;};
typedef struct in_addr IN_ADDR;
struct IStream {struct IStreamVtbl *lpVtbl;};
typedef struct joycaps_tag JOYCAPS;
typedef struct joyinfo_tag JOYINFO;
typedef long double LDOUBLE;
typedef unsigned __int32 LHANDLE;
typedef struct tagLOGFONT LOGFONT;
typedef struct tagFIXED *LPFIXED;
typedef struct tagGUIDE *LPGUIDE;
typedef struct tagRECTL *LPRECTL;
typedef struct tagSIZEL *LPSIZEL;
typedef unsigned __int32 *LPULONG;
typedef __int32 LRESULT;
enum MACRO_E {E_UNEXPECTED = 0xFFFF,E_NOTIMPL = 0x1,E_OUTOFMEMORY = 0x2,E_INVALIDARG = 0x3,E_NOINTERFACE = 0x4,E_POINTER = 0x5,E_HANDLE = 0x6,E_ABORT = 0x7,E_FAIL = 0x8,E_ACCESSDENIED = 0x9,};
enum MACRO_S {S_PERIOD512 = 0,S_PERIOD1024 = 1,S_PERIOD2048 = 2,S_PERIODVOICE = 3,S_WHITE512 = 4,S_WHITE1024 = 5,S_WHITE2048 = 6,S_WHITEVOICE = 7,S_QUEUEEMPTY = 0,S_THRESHOLD = 1,S_ALLTHRESHOLD = 2,S_NORMAL = 0,S_LEGATO = 1,S_STACCATO = 2,S_SERDVNA = -1,S_SEROFM = -2,S_SERMACT = -3,S_SERQFUL = -4,S_SERBDNT = -5,S_SERDLN = -6,S_SERDCC = -7,S_SERDTP = -8,S_SERDVL = -9,S_SERDMD = -10,S_SERDSH = -11,S_SERDPT = -12,S_SERDFQ = -13,S_SERDDR = -14,S_SERDSR = -15,S_SERDST = -16,};
typedef struct midihdr_tag MIDIHDR;
typedef struct tagOLEVERB OLEVERB;
typedef struct tagPENINFO PENINFO;
typedef struct fd_set *PFD_SET;
typedef struct linger *PLINGER;
typedef struct tagPOINTFX POINTFX;
typedef struct tagRECTOFS RECTOFS;
typedef signed int RETCODE;
typedef struct tagRGBQUAD RGBQUAD;
typedef double SDOUBLE;
typedef struct tagSEGINFO SEGINFO;
typedef struct servent SERVENT;
typedef struct tagSKBINFO SKBINFO;
typedef struct tagSTATSTG STATSTG;
typedef struct timeval TIMEVAL;
typedef struct tagVARDESC VARDESC;
enum VARENUM {VT_EMPTY = 0x0,VT_NULL = 0x1,VT_I2 = 0x2,VT_I4 = 0x3,VT_R4 = 0x4,VT_R8 = 0x5,VT_CY = 0x6,VT_DATE = 0x7,VT_BSTR = 0x8,VT_DISPATCH = 0x9,VT_ERROR = 0xA,VT_BOOL = 0xB,VT_VARIANT = 0xC,VT_UNKNOWN = 0xD,VT_I1 = 0x10,VT_UI1 = 0x11,VT_UI2 = 0x12,VT_UI4 = 0x13,VT_I8 = 0x14,VT_UI8 = 0x15,VT_INT = 0x16,VT_UINT = 0x17,VT_VOID = 0x18,VT_HRESULT = 0x19,VT_PTR = 0x1A,VT_SAFEARRAY = 0x1B,VT_CARRAY = 0x1C,VT_USERDEFINED = 0x1D,VT_LPSTR = 0x1E,VT_LPWSTR = 0x1F,VT_FILETIME = 0x40,VT_BLOB = 0x41,VT_STREAM = 0x42,VT_STORAGE = 0x43,VT_STREAMED_OBJECT = 0x44,VT_STORED_OBJECT = 0x45,VT_BLOB_OBJECT = 0x46,VT_CF = 0x47,VT_CLSID = 0x48,};
typedef struct tagVARIANT VARIANT;
typedef unsigned int VARTYPE;
typedef struct wavehdr_tag WAVEHDR;
typedef struct WSAData WSADATA;
typedef signed __int8 _TSCHAR;
typedef unsigned __int8 _TUCHAR;
typedef char _TXCHAR;
struct hostent {char *h_name;char * *h_aliases;int h_addrtype;int h_length;char * *h_addr_list;};
struct servent {char *s_name;char * *s_aliases;int s_port;char *s_proto;};
enum tagADVF {ADVF_NODATA = 0x1,ADVF_PRIMEFIRST = 0x2,ADVF_ONLYONCE = 0x4,ADVF_DATAONSTOP = 0x40,ADVFCACHE_NOHANDLER = 0x8,ADVFCACHE_FORCEBUILTIN = 0x10,ADVFCACHE_ONSAVE = 0x20,};
struct tagRECT {int left;int top;int right;int bottom;};
struct tagSIZE {int cx;int cy;};
enum tagSTGC {STGC_DEFAULT = 0x0,STGC_OVERWRITE = 0x1,STGC_ONLYIFCURRENT = 0x2,STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 0x4,};
struct timeval {__int32 tv_sec;__int32 tv_usec;};
typedef unsigned int u_short;
typedef struct tagBITMAP BITMAP;
typedef struct tagDDEACK DDEACK;
typedef __int32 DISPID;
typedef struct fd_set FD_SET;
typedef unsigned int LANGID;
typedef unsigned __int32 LCTYPE;
typedef struct linger LINGER;
typedef struct tagLOGPEN LOGPEN;
typedef __int32 LPARAM;
typedef const char *LPCSTR;
typedef GUID *LPGUID;
typedef __int32 *LPLONG;
typedef struct tagMAT2 *LPMAT2;
typedef void *LPVOID;
typedef struct mmtime_tag MMTIME;
typedef struct tagNFYRIP NFYRIP;
typedef struct tagPANOSE PANOSE;
typedef struct tagPOINTL POINTL;
typedef __int32 SDWORD;
typedef float SFLOAT;
typedef signed int SSHORT;
typedef unsigned __int32 UDWORD;
typedef unsigned int USHORT;
typedef char _TCHAR;
typedef unsigned __int8 u_char;
typedef unsigned __int32 u_long;
typedef GUID CLSID;
typedef struct tagDDELN DDELN;
typedef struct tagDDEUP DDEUP;
typedef unsigned __int32 DWORD;
typedef struct tagFIXED FIXED;
typedef unsigned __int32 FLAGS;
typedef struct tagGUIDE GUIDE;
typedef int HFILE;
typedef char *HPSTR;
typedef void *HSTMT;
typedef int *LPINT;
typedef char *LPSTR;
typedef struct tagSYC *LPSYC;
typedef struct tagSYE *LPSYE;
typedef struct tagSYG *LPSYG;
typedef char near *NPSTR;
typedef __int32 near *PLONG;
typedef struct tagPOINT POINT;
typedef void *PVOID;
typedef struct tagRECTL RECTL;
typedef signed __int8 SCHAR;
typedef __int32 SCODE;
typedef int SHORT;
typedef struct tagSIZEL SIZEL;
typedef signed __int32 SLONG;
typedef int SWORD;
typedef char TCHAR;
typedef unsigned __int8 UCHAR;
typedef unsigned int UWORD;
typedef int _TINT;
struct tagCY {unsigned __int32 Lo;__int32 Hi;};
typedef unsigned int u_int;
typedef int BOOL;
typedef char *BSTR;
typedef unsigned __int8 BYTE;
typedef double DATE;
typedef void *HDBC;
typedef void *HENV;
typedef unsigned __int32 LCID;
typedef IBindCtx *LPBC;
typedef struct tagBANDINFOSTRUCT *LPBI;
typedef struct tagRC *LPRC;
typedef struct tagMAT2 MAT2;
typedef int near *PINT;
typedef char near *PSTR;
typedef struct tagRECT RECT;
typedef struct tagSIZE SIZE;
typedef unsigned int UINT;
typedef unsigned int WORD;
typedef struct tagABC ABC;
typedef __int32 ALC;
typedef struct tagDCB DCB;
typedef GUID IID;
typedef struct tagMSG MSG;
typedef void *PTR;
typedef int REC;
typedef char * *SNB;
typedef struct tagSYC SYC;
typedef struct tagSYE SYE;
typedef struct tagSYG SYG;
typedef __int32 SYV;
typedef int CL;
typedef struct tagCY CY;
typedef struct tagRC RC;
struct mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49___77546E6DA24DBEE74453C7AE7BAE240D {BYTE hour;BYTE min;BYTE sec;BYTE frame;BYTE fps;BYTE dummy;};
struct mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49___B7A2B1CE967584EBB3840978181CF21D {DWORD songptrpos;};
struct in_addr___C13EC994467D6E67044F092615EC7EA9___01C175C1F0716DCA00314EDD79DBC0A0 {u_char s_b1;u_char s_b2;u_char s_b3;u_char s_b4;};
struct in_addr___C13EC994467D6E67044F092615EC7EA9___4DE764E669F663DACA3CBFDE73714CB5 {u_short s_w1;u_short s_w2;};
union tagTYPEDESC___B4FA4469D1F86C0E7D898206ED7D9FDD {struct tagTYPEDESC *lptdesc;struct tagARRAYDESC *lpadesc;HREFTYPE hreftype;};
union tagVARDESC___F04833D7152C1F618CB19FA4ACB5074C {unsigned __int32 oInst;VARIANT *lpvarValue;};
struct _096A9CEC9D0640E3594D0A52C8C05E40 {UINT versionNumber;UINT offset;};
struct _549C1D5CD1C453772D3DFDF07CAC3EA1 {UINT mtOption;UINT mtID;char mtString[1];};
struct _9811B5662EE51361168BFF08BB491D75 {int cbSize;LPCSTR lpszDocName;LPCSTR lpszOutput;};
struct tagMCI_WAVE_DELETE_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
typedef MCI_ANIM_UPDATE_PARMS *LPMCI_ANIM_UPDATE_PARMS;
typedef MCI_ANIM_WINDOW_PARMS *LPMCI_ANIM_WINDOW_PARMS;
typedef MCI_OVLY_WINDOW_PARMS *LPMCI_OVLY_WINDOW_PARMS;
typedef MCI_WAVE_DELETE_PARMS *LPMCI_WAVE_DELETE_PARMS;
struct tagMCI_GETDEVCAPS_PARMS {DWORD dwCallback;DWORD dwReturn;DWORD dwItem;};
typedef MCI_GETDEVCAPS_PARMS *LPMCI_GETDEVCAPS_PARMS;
struct tagMCI_ANIM_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;DWORD dwSpeed;};
struct tagMCI_ANIM_STEP_PARMS {DWORD dwCallback;DWORD dwFrames;};
typedef MCI_ANIM_OPEN_PARMS *LPMCI_ANIM_OPEN_PARMS;
typedef MCI_ANIM_PLAY_PARMS *LPMCI_ANIM_PLAY_PARMS;
typedef MCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS;
typedef MCI_ANIM_STEP_PARMS *LPMCI_ANIM_STEP_PARMS;
typedef MCI_OVLY_LOAD_PARMS *LPMCI_OVLY_LOAD_PARMS;
typedef MCI_OVLY_OPEN_PARMS *LPMCI_OVLY_OPEN_PARMS;
typedef MCI_OVLY_RECT_PARMS *LPMCI_OVLY_RECT_PARMS;
typedef MCI_OVLY_SAVE_PARMS *LPMCI_OVLY_SAVE_PARMS;
typedef MCI_VD_ESCAPE_PARMS *LPMCI_VD_ESCAPE_PARMS;
typedef MCI_WAVE_OPEN_PARMS *LPMCI_WAVE_OPEN_PARMS;
typedef CLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;
typedef MCI_WAVE_SET_PARMS *LPMCI_WAVE_SET_PARMS;
struct tagMCI_GENERIC_PARMS {DWORD dwCallback;};
struct tagMCI_SEQ_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;DWORD dwTempo;DWORD dwPort;DWORD dwSlave;DWORD dwMaster;DWORD dwOffset;};
struct tagMCI_VD_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;DWORD dwSpeed;};
struct tagMCI_VD_STEP_PARMS {DWORD dwCallback;DWORD dwFrames;};
typedef COMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;
typedef MCI_GENERIC_PARMS *LPMCI_GENERIC_PARMS;
typedef MCI_SEQ_SET_PARMS *LPMCI_SEQ_SET_PARMS;
typedef MCI_SYSINFO_PARMS *LPMCI_SYSINFO_PARMS;
typedef MCI_VD_PLAY_PARMS *LPMCI_VD_PLAY_PARMS;
typedef MCI_VD_STEP_PARMS *LPMCI_VD_STEP_PARMS;
typedef MEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;
typedef NCCALCSIZE_PARAMS *LPNCCALCSIZE_PARAMS;
typedef RASTERIZER_STATUS *LPRASTERIZER_STATUS;
struct tagFMS_GETDRIVEINFO {DWORD dwTotalSpace;DWORD dwFreeSpace;char szPath[260];char szVolume[14];char szShare[128];};
struct tagMCI_RECORD_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_STATUS_PARMS {DWORD dwCallback;DWORD dwReturn;DWORD dwItem;DWORD dwTrack;};
struct tagVS_FIXEDFILEINFO {DWORD dwSignature;DWORD dwStrucVersion;DWORD dwFileVersionMS;DWORD dwFileVersionLS;DWORD dwProductVersionMS;DWORD dwProductVersionLS;DWORD dwFileFlagsMask;DWORD dwFileFlags;DWORD dwFileOS;DWORD dwFileType;DWORD dwFileSubtype;DWORD dwFileDateMS;DWORD dwFileDateLS;};
typedef BITMAPCOREHEADER *LPBITMAPCOREHEADER;
typedef BITMAPFILEHEADER *LPBITMAPFILEHEADER;
typedef BITMAPINFOHEADER *LPBITMAPINFOHEADER;
typedef DELETEITEMSTRUCT *LPDELETEITEMSTRUCT;
typedef DRIVERINFOSTRUCT *LPDRIVERINFOSTRUCT;
typedef MCI_RECORD_PARMS *LPMCI_RECORD_PARMS;
typedef MCI_STATUS_PARMS *LPMCI_STATUS_PARMS;
typedef COMPAREITEMSTRUCT near *PCOMPAREITEMSTRUCT;
typedef MEASUREITEMSTRUCT near *PMEASUREITEMSTRUCT;
typedef int (__pascal *EDITWORDBREAKPROC)(LPSTR lpch, int ichCurrent, int cch, int code);
typedef MCI_BREAK_PARMS *LPMCI_BREAK_PARMS;
typedef MCI_SOUND_PARMS *LPMCI_SOUND_PARMS;
typedef MDICREATESTRUCT *LPMDICREATESTRUCT;
typedef MOUSEHOOKSTRUCT *LPMOUSEHOOKSTRUCT;
typedef WINDOWPLACEMENT *LPWINDOWPLACEMENT;
typedef BITMAPCOREHEADER *PBITMAPCOREHEADER;
typedef BITMAPFILEHEADER *PBITMAPFILEHEADER;
typedef BITMAPINFOHEADER *PBITMAPINFOHEADER;
typedef DELETEITEMSTRUCT near *PDELETEITEMSTRUCT;
struct tagMCI_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_SEEK_PARMS {DWORD dwCallback;DWORD dwTo;};
typedef BITMAPCOREINFO *LPBITMAPCOREINFO;
typedef DRAWITEMSTRUCT *LPDRAWITEMSTRUCT;
typedef HRESULT (__pascal *LPFNCANUNLOADNOW)();
typedef MCI_INFO_PARMS *LPMCI_INFO_PARMS;
typedef MCI_LOAD_PARMS *LPMCI_LOAD_PARMS;
typedef MCI_OPEN_PARMS *LPMCI_OPEN_PARMS;
typedef MCI_PLAY_PARMS *LPMCI_PLAY_PARMS;
typedef MCI_SAVE_PARMS *LPMCI_SAVE_PARMS;
typedef MCI_SEEK_PARMS *LPMCI_SEEK_PARMS;
typedef WINDOWPLACEMENT *PWINDOWPLACEMENT;
struct tagINTERFACEDATA {METHODDATA *pmethdata;unsigned int cMembers;};
struct tagINTERFACEIMPL {IUnknownVtbl *lpVtbl;LPVOID lpBack;int cRef;};
struct tagMCI_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;};
typedef CBT_CREATEWND *LPCBT_CREATEWND;
typedef DEBUGHOOKINFO *LPDEBUGHOOKINFO;
typedef DRVCONFIGINFO *LPDRVCONFIGINFO;
typedef MCI_SET_PARMS *LPMCI_SET_PARMS;
typedef NEWTEXTMETRIC *LPNEWTEXTMETRIC;
typedef OLESTREAMVTBL *LPOLESTREAMVTBL;
typedef PCMWAVEFORMAT *LPPCMWAVEFORMAT;
typedef NEWTEXTMETRIC near *NPNEWTEXTMETRIC;
typedef PCMWAVEFORMAT near *NPPCMWAVEFORMAT;
typedef FARPROC OLDFONTENUMPROC;
typedef BITMAPCOREINFO *PBITMAPCOREINFO;
typedef DRAWITEMSTRUCT near *PDRAWITEMSTRUCT;
struct _ULARGE_INTEGER {DWORD LowPart;DWORD HighPart;};
struct tagPALETTEENTRY {BYTE peRed;BYTE peGreen;BYTE peBlue;BYTE peFlags;};
typedef FARPROC GRAYSTRINGPROC;
typedef CREATESTRUCT *LPCREATESTRUCT;
typedef METAFILEPICT *LPMETAFILEPICT;
typedef OPENFILENAME *LPOPENFILENAME;
typedef PALETTEENTRY *LPPALETTEENTRY;
typedef enum tagOLEUIPASTEFLAG OLEUIPASTEFLAG;
typedef DRVCONFIGINFO near *PDRVCONFIGINFO;
typedef NEWTEXTMETRIC *PNEWTEXTMETRIC;
typedef PCMWAVEFORMAT *PPCMWAVEFORMAT;
struct _LARGE_INTEGER {DWORD LowPart;__int32 HighPart;};
struct tagENUMLOGFONT {LOGFONT elfLogFont;char elfFullName[64];char elfStyle[32];};
struct tagKERNINGPAIR {WORD wFirst;WORD wSecond;int iKernAmount;};
struct tagTIME_STRUCT {UWORD hour;UWORD minute;UWORD second;};
typedef CHOOSECOLOR *LPCHOOSECOLOR;
typedef FINDREPLACE *LPFINDREPLACE;
typedef HANDLETABLE *LPHANDLETABLE;
typedef HELPWININFO *LPHELPWININFO;
typedef MIDIOUTCAPS *LPMIDIOUTCAPS;
typedef PAINTSTRUCT *LPPAINTSTRUCT;
typedef WAVEOUTCAPS *LPWAVEOUTCAPS;
typedef MIDIOUTCAPS near *NPMIDIOUTCAPS;
typedef PAINTSTRUCT near *NPPAINTSTRUCT;
typedef WAVEOUTCAPS near *NPWAVEOUTCAPS;
typedef enum tagOLEGETMONIKER OLEGETMONIKER;
typedef enum tagOLEVERBATTRIB OLEVERBATTRIB;
typedef enum tagUSERCLASSTYPE USERCLASSTYPE;
struct tagMINMAXINFO {POINT ptReserved;POINT ptMaxSize;POINT ptMaxPosition;POINT ptMinTrackSize;POINT ptMaxTrackSize;};
struct tagOEMPENINFO {UINT wPdt;UINT wValueMax;UINT wDistinct;};
struct tagTEXTMETRIC {int tmHeight;int tmAscent;int tmDescent;int tmInternalLeading;int tmExternalLeading;int tmAveCharWidth;int tmMaxCharWidth;int tmWeight;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmPitchAndFamily;BYTE tmCharSet;int tmOverhang;int tmDigitizedAspectX;int tmDigitizedAspectY;};
typedef RECT BORDERWIDTHS;
typedef enum tagDISCARDCACHE DISCARDCACHE;
typedef FARPROC FONTENUMPROC;
typedef FARPROC GOBJENUMPROC;
typedef BITMAPINFO *LPBITMAPINFO;
typedef CHOOSEFONT *LPCHOOSEFONT;
typedef LOGPALETTE *LPLOGPALETTE;
typedef METARECORD *LPMETARECORD;
typedef MIDIINCAPS *LPMIDIINCAPS;
typedef WORD *LPPATCHARRAY;
typedef TEXTMETRIC *LPTEXTMETRIC;
typedef WAVEFORMAT *LPWAVEFORMAT;
typedef WAVEINCAPS *LPWAVEINCAPS;
typedef LOGPALETTE near *NPLOGPALETTE;
typedef MIDIINCAPS near *NPMIDIINCAPS;
typedef TEXTMETRIC near *NPTEXTMETRIC;
typedef WAVEFORMAT near *NPWAVEFORMAT;
typedef WAVEINCAPS near *NPWAVEINCAPS;
typedef CONVCONTEXT *PCONVCONTEXT;
typedef HANDLETABLE *PHANDLETABLE;
typedef HELPWININFO near *PHELPWININFO;
typedef MIDIOUTCAPS *PMIDIOUTCAPS;
typedef PAINTSTRUCT *PPAINTSTRUCT;
typedef FARPROC PROPENUMPROC;
typedef WAVEOUTCAPS *PWAVEOUTCAPS;
typedef FARPROC RSRCHDLRPROC;
struct tagBIND_OPTS {DWORD cbStruct;DWORD grfFlags;DWORD grfMode;DWORD dwTickCountDeadline;};
struct tagPENPACKET {UINT wTabletX;UINT wTabletY;UINT wPDK;UINT rgwOemData[6];};
struct tagRGBTRIPLE {BYTE rgbtBlue;BYTE rgbtGreen;BYTE rgbtRed;};
struct tagSAFEARRAY {unsigned int cDims;unsigned int fFeatures;unsigned int cbElements;unsigned int cLocks;unsigned __int32 handle;void *pvData;SAFEARRAYBOUND rgsabound[1];};
struct tagTIMERINFO {DWORD dwSize;DWORD dwmsSinceStart;DWORD dwmsThisVM;};
struct timecaps_tag {UINT wPeriodMin;UINT wPeriodMax;};
typedef FARPROC GNOTIFYPROC;
typedef FARPROC LINEDDAPROC;
typedef RGBTRIPLE *LPRGBTRIPLE;
typedef WINDOWPOS *LPWINDOWPOS;
typedef enum tagOLELINKBIND OLELINKBIND;
typedef BITMAPINFO *PBITMAPINFO;
typedef enum tagPENDINGTYPE PENDINGTYPE;
typedef LOGPALETTE *PLOGPALETTE;
typedef METARECORD *PMETARECORD;
typedef MIDIINCAPS *PMIDIINCAPS;
typedef TEXTMETRIC *PTEXTMETRIC;
typedef WAVEFORMAT *PWAVEFORMAT;
typedef WAVEINCAPS *PWAVEINCAPS;
typedef BOOL (__pascal *RCYIELDPROC)();
typedef enum tagSTREAM_SEEK STREAM_SEEK;
typedef FARPROC WNDENUMPROC;
struct joycaps_tag {UINT wMid;UINT wPid;char szPname[32];UINT wXmin;UINT wXmax;UINT wYmin;UINT wYmax;UINT wZmin;UINT wZmax;UINT wNumButtons;UINT wPeriodMin;UINT wPeriodMax;};
struct joyinfo_tag {UINT wXpos;UINT wYpos;UINT wZpos;UINT wButtons;};
struct tagDEVNAMES {UINT wDriverOffset;UINT wDeviceOffset;UINT wOutputOffset;UINT wDefault;};
struct tagFILETIME {DWORD dwLowDateTime;DWORD dwHighDateTime;};
typedef enum _320585250961ABE9F4D068EEEC4E2CC6 BIND_FLAGS;
typedef WORD CLIPFORMAT;
typedef enum tagINVOKEKIND INVOKEKIND;
typedef CTLSTYLE *LPCTLSTYLE;
typedef DEVNAMES *LPDEVNAMES;
typedef EVENTMSG *LPEVENTMSG;
typedef WORD *LPKEYARRAY;
typedef LOGBRUSH *LPLOGBRUSH;
typedef MMCKINFO *LPMMCKINFO;
typedef MMIOINFO *LPMMIOINFO;
typedef OFSTRUCT *LPOFSTRUCT;
typedef PRINTDLG *LPPRINTDLG;
typedef STATDATA *LPSTATDATA;
typedef TIMECAPS *LPTIMECAPS;
typedef WNDCLASS *LPWNDCLASS;
typedef FARPROC MFENUMPROC;
typedef EVENTMSG near *NPEVENTMSG;
typedef LOGBRUSH near *NPLOGBRUSH;
typedef MMCKINFO near *NPMMCKINFO;
typedef MMIOINFO near *NPMMIOINFO;
typedef OFSTRUCT near *NPOFSTRUCT;
typedef TIMECAPS near *NPTIMECAPS;
typedef WNDCLASS near *NPWNDCLASS;
typedef enum tagOLEWHICHMK OLEWHICHMK;
typedef WORD PATCHARRAY[128];
typedef enum tagPENDINGMSG PENDINGMSG;
typedef enum tagSERVERCALL SERVERCALL;
struct _OLESTREAM {LPOLESTREAMVTBL lpstbl;};
struct tagDDEDATA {unsigned __int16 unused : 12;unsigned __int16 fResponse : 1;unsigned __int16 fRelease : 1;unsigned __int16 reserved : 1;unsigned __int16 fAckReq : 1;int cfFormat;BYTE Value[1];};
struct tagDDEPOKE {unsigned __int16 unused : 13;unsigned __int16 fRelease : 1;unsigned __int16 fReserved : 2;int cfFormat;BYTE Value[1];};
struct tagIDLDESC {BSTR bstrIDLInfo;unsigned int wIDLFlags;};
struct tagLOGFONT {int lfHeight;int lfWidth;int lfEscapement;int lfOrientation;int lfWeight;BYTE lfItalic;BYTE lfUnderline;BYTE lfStrikeOut;BYTE lfCharSet;BYTE lfOutPrecision;BYTE lfClipPrecision;BYTE lfQuality;BYTE lfPitchAndFamily;char lfFaceName[32];};
struct tagPOINTFX {FIXED x;FIXED y;};
struct tagRGBQUAD {BYTE rgbBlue;BYTE rgbGreen;BYTE rgbRed;BYTE rgbReserved;};
typedef FARPROC ABORTPROC;
typedef enum tagBINDSPEED BINDSPEED;
typedef enum tagFUNCFLAGS FUNCFLAGS;
typedef DWORD HCONVLIST;
typedef UINT HINSTANCE;
typedef UINT HMETAFILE;
typedef AUXCAPS *LPAUXCAPS;
typedef CTLINFO *LPCTLINFO;
typedef DEVMODE *LPDEVMODE;
typedef DOCINFO *LPDOCINFO;
typedef JOYCAPS *LPJOYCAPS;
typedef JOYINFO *LPJOYINFO;
typedef LOGFONT *LPLOGFONT;
typedef MIDIHDR *LPMIDIHDR;
typedef RGBQUAD *LPRGBQUAD;
typedef SEGINFO *LPSEGINFO;
typedef WAVEHDR *LPWAVEHDR;
typedef WSADATA *LPWSADATA;
typedef enum tagMKREDUCE MKRREDUCE;
typedef enum tagMSHLFLAGS MSHLFLAGS;
typedef AUXCAPS near *NPAUXCAPS;
typedef DEVMODE near *NPDEVMODE;
typedef JOYCAPS near *NPJOYCAPS;
typedef JOYINFO near *NPJOYINFO;
typedef LOGFONT near *NPLOGFONT;
typedef MIDIHDR near *NPMIDIHDR;
typedef WAVEHDR near *NPWAVEHDR;
typedef enum tagOLERENDER OLERENDER;
typedef enum tagOLEUPDATE OLEUPDATE;
typedef CONVINFO *PCONVINFO;
typedef CTLSTYLE *PCTLSTYLE;
typedef EVENTMSG *PEVENTMSG;
typedef LOGBRUSH *PLOGBRUSH;
typedef MMCKINFO *PMMCKINFO;
typedef MMIOINFO *PMMIOINFO;
typedef OFSTRUCT *POFSTRUCT;
typedef TIMECAPS *PTIMECAPS;
typedef WNDCLASS *PWNDCLASS;
typedef FARPROC TIMERPROC;
typedef enum tagTYPEFLAGS TYPEFLAGS;
struct sockproto {u_short sp_family;u_short sp_protocol;};
struct tagBITMAP {int bmType;int bmWidth;int bmHeight;int bmWidthBytes;BYTE bmPlanes;BYTE bmBitsPixel;void *bmBits;};
struct tagPANOSE {BYTE bFamilyType;BYTE bSerifStyle;BYTE bWeight;BYTE bProportion;BYTE bContrast;BYTE bStrokeVariation;BYTE bArmStyle;BYTE bLetterform;BYTE bMidline;BYTE bXHeight;};
typedef enum tagCALLCONV CALLCONV;
typedef enum tagCALLTYPE CALLTYPE;
typedef DWORD COLORREF;
typedef enum tagDESCKIND DESCKIND;
typedef enum tagDVASPECT DVASPECT;
typedef enum tagFUNCKIND FUNCKIND;
typedef DWORD HDDEDATA;
typedef UINT HMIDIOUT;
typedef UINT HOLEMENU;
typedef FARPROC HOOKPROC;
typedef UINT HPALETTE;
typedef UINT HWAVEOUT;
typedef WORD KEYARRAY[128];
typedef enum tagLIBFLAGS LIBFLAGS;
typedef enum tagLOCKTYPE LOCKTYPE;
typedef BITMAP *LPBITMAP;
typedef const RECTL *LPCRECTL;
typedef LOGPEN *LPLOGPEN;
typedef MMTIME *LPMMTIME;
typedef DISPID MEMBERID;
typedef BITMAP near *NPBITMAP;
typedef LOGPEN near *NPLOGPEN;
typedef MMTIME near *NPMMTIME;
typedef enum tagOLECLOSE OLECLOSE;
typedef enum tagOLECONTF OLECONTF;
typedef AUXCAPS *PAUXCAPS;
typedef CTLINFO *PCTLINFO;
typedef DEVMODE *PDEVMODE;
typedef HSZPAIR *PHSZPAIR;
typedef JOYCAPS *PJOYCAPS;
typedef JOYINFO *PJOYINFO;
typedef LOGFONT *PLOGFONT;
typedef MIDIHDR *PMIDIHDR;
typedef WAVEHDR *PWAVEHDR;
typedef enum tagSTATFLAG STATFLAG;
typedef enum tagTYPEKIND TYPEKIND;
typedef enum tagVARFLAGS VARFLAGS;
struct sockaddr {u_short sa_family;char sa_data[14];};
struct tagDDEUP {unsigned __int16 unused : 12;unsigned __int16 fAck : 1;unsigned __int16 fRelease : 1;unsigned __int16 fReserved : 1;unsigned __int16 fAckReq : 1;int cfFormat;BYTE rgb[1];};
struct tagFIXED {UINT fract;int value;};
typedef enum tagDATADIR DATADIR;
typedef FARPROC DLGPROC;
typedef enum tagEXTCONN EXTCONN;
typedef UINT HBITMAP;
typedef UINT HGDIOBJ;
typedef UINT HMIDIIN;
typedef HINSTANCE HMODULE;
typedef UINT HWAVEIN;
typedef CLSID *LPCLSID;
typedef const RECT *LPCRECT;
typedef DWORD *LPDWORD;
typedef POINT *LPPOINT;
typedef POINT near *NPPOINT;
typedef enum tagOLEMISC OLEMISC;
typedef LOGBRUSH PATTERN;
typedef BITMAP *PBITMAP;
typedef LOGPEN *PLOGPEN;
typedef MMTIME *PMMTIME;
typedef enum tagSTGMOVE STGMOVE;
typedef enum tagSYSKIND SYSKIND;
typedef enum tagVARKIND VARKIND;
typedef WORD VERSION;
struct WSAData {WORD wVersion;WORD wHighVersion;char szDescription[257];char szSystemStatus[129];unsigned int iMaxSockets;unsigned int iMaxUdpDg;char *lpVendorInfo;};
struct tagMAT2 {FIXED eM11;FIXED eM12;FIXED eM21;FIXED eM22;};
typedef enum tagCLSCTX CLSCTX;
typedef DWORD FOURCC;
typedef UINT HACCEL;
typedef UINT HANDLE;
typedef UINT HBRUSH;
typedef HANDLE HLOCAL;
typedef BSTR *LPBSTR;
typedef BYTE *LPBYTE;
typedef RECT *LPRECT;
typedef SIZE *LPSIZE;
typedef WORD *LPWORD;
typedef enum tagMEMCTX MEMCTX;
typedef enum tagMSHCTX MSHCTX;
typedef RECT near *NPRECT;
typedef SIZE near *NPSIZE;
typedef DWORD near *PDWORD;
typedef POINT *PPOINT;
typedef SCODE *PSCODE;
typedef enum tagREGCLS REGCLS;
typedef u_int SOCKET;
typedef UINT WPARAM;
struct linger {u_short l_onoff;u_short l_linger;};
struct netent {char *n_name;char * *n_aliases;int n_addrtype;u_long n_net;};
struct tagABC {int abcA;UINT abcB;int abcC;};
typedef DWORD HCONV;
typedef UINT HDROP;
typedef UINT HDRVR;
typedef UINT HFONT;
typedef DWORD HHOOK;
typedef UINT HICON;
typedef UINT HMENU;
typedef UINT HMIDI;
typedef UINT HMMIO;
typedef UINT HRSRC;
typedef UINT HTASK;
typedef UINT HWAVE;
typedef ABC *LPABC;
typedef DCB *LPDCB;
typedef IID *LPIID;
typedef MSG *LPMSG;
typedef SYV *LPSYV;
typedef enum tagMKSYS MKSYS;
typedef MSG near *NPMSG;
typedef BYTE near *PBYTE;
typedef RECT *PRECT;
typedef SIZE *PSIZE;
typedef WORD near *PWORD;
typedef enum tagSTGTY STGTY;
typedef enum tagTYMED TYMED;
typedef DWORD ULONG;
typedef WORD WCHAR;
typedef enum tagADVF ADVF;
typedef UINT ATOM;
typedef UINT HDWP;
typedef DWORD HKEY;
typedef UINT HPEN;
typedef HANDLE HREC;
typedef UINT HRGN;
typedef UINT HSTR;
typedef UINT HWND;
typedef MSG *PMSG;
typedef enum tagSTGC STGC;
typedef UINT HDC;
typedef UINT HKP;
typedef DWORD HSZ;
union tagSTGMEDIUM___62EF16ADBE1A605A5A555D41C9B0FE35 {HANDLE hGlobal;LPSTR lpszFileName;IStream *pstm;IStorage *pstg;};
struct tagMCI_ANIM_RECT_PARMS {DWORD dwCallback;RECT rc;};
struct tagMCI_OVLY_RECT_PARMS {DWORD dwCallback;RECT rc;};
struct tagMCI_VD_ESCAPE_PARMS {DWORD dwCallback;LPCSTR lpstrCommand;};
struct tagCLIENTCREATESTRUCT {HMENU hWindowMenu;UINT idFirstChild;};
struct tagMCI_WAVE_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;UINT wInput;UINT wReserved0;UINT wOutput;UINT wReserved1;UINT wFormatTag;UINT wReserved2;UINT nChannels;UINT wReserved3;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;UINT nBlockAlign;UINT wReserved4;UINT wBitsPerSample;UINT wReserved5;};
struct tagCBTACTIVATESTRUCT {BOOL fMouse;HWND hWndActive;};
struct tagMEASUREITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;UINT itemWidth;UINT itemHeight;DWORD itemData;};
struct tagNCCALCSIZE_PARAMS {RECT rgrc[3];WINDOWPOS *lppos;};
struct tagBITMAPCOREHEADER {DWORD bcSize;int bcWidth;int bcHeight;WORD bcPlanes;WORD bcBitCount;};
struct tagBITMAPFILEHEADER {UINT bfType;DWORD bfSize;UINT bfReserved1;UINT bfReserved2;DWORD bfOffBits;};
struct tagBITMAPINFOHEADER {DWORD biSize;__int32 biWidth;__int32 biHeight;WORD biPlanes;WORD biBitCount;DWORD biCompression;DWORD biSizeImage;__int32 biXPelsPerMeter;__int32 biYPelsPerMeter;DWORD biClrUsed;DWORD biClrImportant;};
struct tagMCI_SOUND_PARMS {DWORD dwCallback;LPCSTR lpstrSoundName;};
struct tagTTPOLYGONHEADER {DWORD cb;DWORD dwType;POINTFX pfxStart;};
struct pcmwaveformat_tag {WAVEFORMAT wf;WORD wBitsPerSample;};
struct tagBANDINFOSTRUCT {BOOL fGraphics;BOOL fText;RECT rcGraphics;};
struct tagBITMAPCOREINFO {BITMAPCOREHEADER bmciHeader;RGBTRIPLE bmciColors[1];};
struct tagMCI_INFO_PARMS {DWORD dwCallback;LPSTR lpstrReturn;DWORD dwRetSize;};
struct tagMCI_LOAD_PARMS {DWORD dwCallback;LPCSTR lpfilename;};
struct tagMCI_SAVE_PARMS {DWORD dwCallback;LPCSTR lpfilename;};
struct tagCBT_CREATEWND {CREATESTRUCT *lpcs;HWND hwndInsertAfter;};
struct tagDRVCONFIGINFO {DWORD dwDCISize;LPCSTR lpszDCISectionName;LPCSTR lpszDCIAliasName;};
struct tagINTERFACEINFO {struct IUnknown *pUnk;IID iid;WORD wMethod;};
struct tagGLYPHMETRICS {UINT gmBlackBoxX;UINT gmBlackBoxY;POINT gmptGlyphOrigin;int gmCellIncX;int gmCellIncY;};
struct tagMULTIKEYHELP {UINT mkSize;BYTE mkKeylist;BYTE szKeyphrase[1];};
struct tagWINDEBUGINFO {UINT flags;DWORD dwOptions;DWORD dwFilter;char achAllocModule[8];DWORD dwAllocBreak;DWORD dwAllocCount;};
struct _OLESTREAMVTBL {DWORD (__pascal *Get)(LPOLESTREAM, void *, DWORD);DWORD (__pascal *Put)(LPOLESTREAM, const void *, DWORD);};
struct midiincaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];};
struct tagCONVCONTEXT {UINT cb;UINT wFlags;UINT wCountryID;int iCodePage;DWORD dwLangID;DWORD dwSecurity;};
struct tagDATE_STRUCT {SWORD year;UWORD month;UWORD day;};
struct tagNFYLOGERROR {DWORD dwSize;UINT wErrCode;void *lpInfo;};
struct tagTTPOLYCURVE {UINT wType;UINT cpfx;POINTFX apfx[1];};
struct waveformat_tag {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;};
typedef int (__pascal *LPFUNCRESULTS)(LPRCRESULT, REC);
struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader;RGBQUAD bmiColors[1];};
struct tagDISPPARAMS {VARIANTARG *rgvarg;DISPID *rgdispidNamedArgs;unsigned int cArgs;unsigned int cNamedArgs;};
struct tagGLOBALINFO {DWORD dwSize;WORD wcItems;WORD wcItemsFree;WORD wcItemsLRU;};
struct tagLOGPALETTE {WORD palVersion;WORD palNumEntries;PALETTEENTRY palPalEntry[1];};
struct tagMEMMANINFO {DWORD dwSize;DWORD dwLargestFreeBlock;DWORD dwMaxPagesAvailable;DWORD dwMaxPagesLockable;DWORD dwTotalLinearSpace;DWORD dwTotalUnlockedPages;DWORD dwFreePages;DWORD dwTotalPages;DWORD dwFreeLinearSpace;DWORD dwSwapFilePages;WORD wPageSize;};
struct tagMETAHEADER {UINT mtType;UINT mtHeaderSize;UINT mtVersion;DWORD mtSize;UINT mtNoObjects;DWORD mtMaxRecord;UINT mtNoParameters;};
struct tagMETARECORD {DWORD rdSize;UINT rdFunction;UINT rdParm[1];};
struct tagNEWCPLINFO {DWORD dwSize;DWORD dwFlags;DWORD dwHelpContext;__int32 lData;HICON hIcon;char szName[32];char szInfo[64];char szHelpFile[128];};
struct tagSTROKEINFO {UINT cPnt;UINT cbPnts;UINT wPdk;DWORD dwTick;};
typedef void __pascal TIMECALLBACK(UINT uTimerID, UINT uMessage, DWORD dwUser, DWORD dw1, DWORD dw2);
struct tagARRAYDESC {TYPEDESC tdescElem;unsigned int cDims;SAFEARRAYBOUND rgbounds[1];};
struct tagBOXLAYOUT {int cyCusp;int cyEndCusp;UINT style;DWORD rgbText;DWORD rgbBox;DWORD rgbSelect;};
struct tagLOCALINFO {DWORD dwSize;WORD wcItems;};
struct tagPARAMDATA {TCHAR *szName;VARTYPE vt;};
struct tagSTGMEDIUM {DWORD tymed;tagSTGMEDIUM___62EF16ADBE1A605A5A555D41C9B0FE35 __anonymous0;IUnknown *pUnkForRelease;};
struct tagWINDOWPOS {HWND hwnd;HWND hwndInsertAfter;int x;int y;int cx;int cy;UINT flags;};
typedef UINT (__pascal *LPFNIDTOSTR)(UINT, LPSTR, UINT);
typedef BOOL (__pascal *LPFNRAWHOOK)(LPPENPACKET);
typedef DWORD (__pascal *LPFNSTRTOID)(LPSTR);
struct midihdr_tag {LPSTR lpData;DWORD dwBufferLength;DWORD dwBytesRecorded;DWORD dwUser;DWORD dwFlags;struct midihdr_tag *lpNext;DWORD reserved;};
struct tagCTLSTYLE {UINT wX;UINT wY;UINT wCx;UINT wCy;UINT wId;DWORD dwStyle;char szClass[20];char szTitle[94];};
struct tagELEMDESC {TYPEDESC tdesc;IDLDESC idldesc;};
struct tagEVENTMSG {UINT message;UINT paramL;UINT paramH;DWORD time;};
struct tagLOGBRUSH {UINT lbStyle;COLORREF lbColor;int lbHatch;};
struct tagOFSTRUCT {BYTE cBytes;BYTE fFixedDisk;UINT nErrCode;BYTE reserved[4];char szPathName[128];};
struct tagSTATDATA {FORMATETC formatetc;DWORD advf;IAdviseSink *pAdvSink;DWORD dwConnection;};
struct tagTYPEDESC {tagTYPEDESC___B4FA4469D1F86C0E7D898206ED7D9FDD __anonymous0;VARTYPE vt;};
struct wavehdr_tag {LPSTR lpData;DWORD dwBufferLength;DWORD dwBytesRecorded;DWORD dwUser;DWORD dwFlags;DWORD dwLoops;struct wavehdr_tag *lpNext;DWORD reserved;};
union tagBINDPTR {FUNCDESC *lpfuncdesc;VARDESC *lpvardesc;ITypeComp *lptcomp;};
struct tagCOMSTAT {BYTE status;UINT cbInQue;UINT cbOutQue;};
struct tagCTLINFO {UINT wVersion;UINT wCtlTypes;char szClass[20];char szTitle[94];char szReserved[10];CTLTYPE Type[12];};
struct tagCTLTYPE {UINT wType;UINT wWidth;UINT wHeight;DWORD dwStyle;char szDescr[22];};
struct tagDEVMODE {char dmDeviceName[32];UINT dmSpecVersion;UINT dmDriverVersion;UINT dmSize;UINT dmDriverExtra;DWORD dmFields;int dmOrientation;int dmPaperSize;int dmPaperLength;int dmPaperWidth;int dmScale;int dmCopies;int dmDefaultSource;int dmPrintQuality;int dmColor;int dmDuplex;int dmYResolution;int dmTTOption;};
struct tagOLEVERB {__int32 lVerb;LPSTR lpszVerbName;DWORD fuFlags;DWORD grfAttribs;};
struct tagPENINFO {UINT cxRawWidth;UINT cyRawHeight;UINT wDistinctWidth;UINT wDistinctHeight;int nSamplingRate;int nSamplingDist;__int32 lPdc;int cPens;int cbOemData;OEMPENINFO rgoempeninfo[6];UINT rgwReserved[8];};
typedef UINT (__pascal *YIELDPROC)(UINT uDeviceID, DWORD dwYieldData);
struct _MMCKINFO {FOURCC ckid;DWORD cksize;FOURCC fccType;DWORD dwDataOffset;DWORD dwFlags;};
struct tagNFYRIP {DWORD dwSize;WORD wIP;WORD wCS;WORD wSS;WORD wBP;WORD wExitCode;};
struct fd_set {u_int fd_count;SOCKET fd_array[64];};
struct tagDCB {BYTE Id;UINT BaudRate;BYTE ByteSize;BYTE Parity;BYTE StopBits;UINT RlsTimeout;UINT CtsTimeout;UINT DsrTimeout;unsigned __int16 fBinary : 1;unsigned __int16 fRtsDisable : 1;unsigned __int16 fParity : 1;unsigned __int16 fOutxCtsFlow : 1;unsigned __int16 fOutxDsrFlow : 1;unsigned __int16 fDummy : 2;unsigned __int16 fDtrDisable : 1;unsigned __int16 fOutX : 1;unsigned __int16 fInX : 1;unsigned __int16 fPeChar : 1;unsigned __int16 fNull : 1;unsigned __int16 fChEvt : 1;unsigned __int16 fDtrflow : 1;unsigned __int16 fRtsflow : 1;unsigned __int16 fDummy2 : 1;char XonChar;char XoffChar;UINT XonLim;UINT XoffLim;char PeChar;char EofChar;char EvtChar;UINT TxDelay;};
struct tagSYC {UINT wStrokeFirst;UINT wPntFirst;UINT wStrokeLast;UINT wPntLast;BOOL fLastSyc;};
struct tagSYE {SYV syv;__int32 lRecogVal;CL cl;int iSyc;};
typedef int (__pascal *LPDF)(int, LPVOID, LPVOID, int, DWORD, DWORD);
union mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49 {DWORD ms;DWORD sample;DWORD cb;struct mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49___77546E6DA24DBEE74453C7AE7BAE240D smpte;struct mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49___B7A2B1CE967584EBB3840978181CF21D midi;};
union in_addr___C13EC994467D6E67044F092615EC7EA9 {struct in_addr___C13EC994467D6E67044F092615EC7EA9___01C175C1F0716DCA00314EDD79DBC0A0 S_un_b;struct in_addr___C13EC994467D6E67044F092615EC7EA9___4DE764E669F663DACA3CBFDE73714CB5 S_un_w;u_long S_addr;};
struct _C7C46F6CCBD2CAD1FCFEC4764C87E3D1 {ULONG ulReserved;ULONG flFlags;ULONG nPosition;LPSTR lpszPathName;LPSTR lpszFileName;LPVOID lpFileType;};
struct _CB9F4276D477D4EDC30066925B58EE0F {ULONG ulReserved;ULONG ulRecipClass;LPSTR lpszName;LPSTR lpszAddress;ULONG ulEIDSize;LPVOID lpEntryID;};
struct tagMCI_ANIM_UPDATE_PARMS {DWORD dwCallback;RECT rc;HDC hDC;};
struct tagMCI_OVLY_LOAD_PARMS {DWORD dwCallback;LPCSTR lpfilename;RECT rc;};
struct tagMCI_OVLY_SAVE_PARMS {DWORD dwCallback;LPCSTR lpfilename;RECT rc;};
struct tagMCI_WAVE_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwBufferSeconds;};
struct tagCOMPAREITEMSTRUCT {UINT CtlType;UINT CtlID;HWND hwndItem;UINT itemID1;DWORD itemData1;UINT itemID2;DWORD itemData2;};
struct tagMCI_SYSINFO_PARMS {DWORD dwCallback;LPSTR lpstrReturn;DWORD dwRetSize;DWORD dwNumber;UINT wDeviceType;UINT wReserved0;};
struct tagDELETEITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;HWND hwndItem;DWORD itemData;};
struct tagDRIVERINFOSTRUCT {UINT length;HDRVR hDriver;HINSTANCE hModule;char szAliasName[128];};
struct tagNFYLOGPARAMERROR {DWORD dwSize;UINT wErrCode;FARPROC lpfnErrorAddr;void * *lpBadParam;};
struct tagTIMESTAMP_STRUCT {SWORD year;UWORD month;UWORD day;UWORD hour;UWORD minute;UWORD second;UDWORD fraction;};
typedef BOOL (__pascal *LPFNNOTIFYCALLBACK)(WORD wID, DWORD dwData);
struct tagMCI_BREAK_PARMS {DWORD dwCallback;int nVirtKey;UINT wReserved0;HWND hwndBreak;UINT wReserved1;};
struct tagOLEUIPASTEENTRY {FORMATETC fmtetc;LPCSTR lpstrFormatName;LPCSTR lpstrResultText;DWORD dwFlags;DWORD dwScratchSpace;};
struct tagWINDOWPLACEMENT {UINT length;UINT flags;UINT showCmd;POINT ptMinPosition;POINT ptMaxPosition;RECT rcNormalPosition;};
struct tagDVTARGETDEVICE {DWORD tdSize;WORD tdDriverNameOffset;WORD tdDeviceNameOffset;WORD tdPortNameOffset;WORD tdExtDevmodeOffset;BYTE tdData[1];};
struct tagFMS_GETFILESEL {UINT wTime;UINT wDate;DWORD dwSize;BYTE bAttr;char szName[260];};
struct tagMCI_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;};
typedef DWORD (__pascal *FM_UNDELETE_PROC)(HWND, LPSTR);
struct IEnumVARIANTVtbl {HRESULT (*QueryInterface)(IEnumVARIANT *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(IEnumVARIANT *This);unsigned __int32 (*Release)(IEnumVARIANT *This);HRESULT (*Next)(IEnumVARIANT *This, unsigned __int32 celt, VARIANT *rgvar, unsigned __int32 *pceltFetched);HRESULT (*Skip)(IEnumVARIANT *This, unsigned __int32 celt);HRESULT (*Reset)(IEnumVARIANT *This);HRESULT (*Clone)(IEnumVARIANT *This, IEnumVARIANT * *ppenum);};
struct tagDEBUGHOOKINFO {HMODULE hModuleHook;LPARAM reserved;LPARAM lParam;WPARAM wParam;int code;};
struct tagNEWTEXTMETRIC {int tmHeight;int tmAscent;int tmDescent;int tmInternalLeading;int tmExternalLeading;int tmAveCharWidth;int tmMaxCharWidth;int tmWeight;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmPitchAndFamily;BYTE tmCharSet;int tmOverhang;int tmDigitizedAspectX;int tmDigitizedAspectY;DWORD ntmFlags;UINT ntmSizeEM;UINT ntmCellHeight;UINT ntmAvgWidth;};
struct tagPENDATAHEADER {UINT wVersion;UINT cbSizeUsed;UINT cStrokes;UINT cPnt;UINT cPntStrokeMax;RECT rectBound;UINT wPndts;int nInkWidth;DWORD rgbInk;};
struct midioutcaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];UINT wTechnology;UINT wVoices;UINT wNotes;UINT wChannelMask;DWORD dwSupport;};
struct tagMONERRSTRUCT {UINT cb;UINT wLastError;DWORD dwTime;HANDLE hTask;};
struct waveoutcaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];DWORD dwFormats;UINT wChannels;DWORD dwSupport;};
struct tagMODULEENTRY {DWORD dwSize;char szModule[10];HMODULE hModule;WORD wcUsage;char szExePath[256];WORD wNext;};
struct tagNFYSTARTDLL {DWORD dwSize;HMODULE hModule;WORD wCS;WORD wIP;};
struct waveincaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];DWORD dwFormats;UINT wChannels;};
struct tagCLASSENTRY {DWORD dwSize;HMODULE hInst;char szClassName[256];WORD wNext;};
struct tagLOCALENTRY {DWORD dwSize;HLOCAL hHandle;WORD wAddress;WORD wSize;WORD wFlags;WORD wcLock;WORD wType;WORD hHeap;WORD wHeapType;WORD wNext;};
struct tagNFYLOADSEG {DWORD dwSize;WORD wSelector;WORD wSegNum;WORD wType;WORD wcInstance;LPCSTR lpstrModuleName;};
struct tagEXCEPINFO {unsigned int wCode;unsigned int wReserved;BSTR bstrSource;BSTR bstrDescription;BSTR bstrHelpFile;unsigned __int32 dwHelpContext;void *pvReserved;HRESULT (__pascal *pfnDeferredFillIn)(struct tagEXCEPINFO *);SCODE scode;};
struct tagFORMATETC {CLIPFORMAT cfFormat;DVTARGETDEVICE *ptd;DWORD dwAspect;__int32 lindex;DWORD tymed;};
typedef void __pascal DRVCALLBACK(HDRVR h, UINT uMessage, DWORD dwUser, DWORD dw1, DWORD dw2);
typedef DWORD (__pascal *FM_EXT_PROC)(HWND, UINT, __int32);
struct auxcaps_tag {UINT wMid;UINT wPid;VERSION vDriverVersion;char szPname[32];UINT wTechnology;DWORD dwSupport;};
struct tagFMS_LOAD {DWORD dwSize;char szMenuName[40];HMENU hMenu;UINT wMenuDelta;};
struct tagLOGPEN {UINT lopnStyle;POINT lopnWidth;COLORREF lopnColor;};
struct tagSYG {POINT rgpntHotSpots[8];int cHotSpot;int nFirstBox;__int32 lRecogVal;LPSYE lpsye;int cSye;LPSYC lpsyc;int cSyc;};
struct GUID {DWORD Data1;WORD Data2;WORD Data3;BYTE Data4[8];};
struct tagMCI_ANIM_WINDOW_PARMS {DWORD dwCallback;HWND hWnd;UINT wReserved1;UINT nCmdShow;UINT wReserved2;LPCSTR lpstrText;};
struct tagMCI_OVLY_WINDOW_PARMS {DWORD dwCallback;HWND hWnd;UINT wReserved1;UINT nCmdShow;UINT wReserved2;LPCSTR lpstrText;};
struct tagMCI_ANIM_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;UINT wReserved1;};
struct tagMCI_OVLY_OPEN_PARMS {DWORD dwCallback;UINT wDeviceID;UINT wReserved0;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;UINT wReserved1;};
struct tagHARDWAREHOOKSTRUCT {HWND hWnd;UINT wMessage;WPARAM wParam;LPARAM lParam;};
typedef HRESULT (__pascal *LPFNGETCLASSOBJECT)(const CLSID *const, const IID *const, LPVOID *);
struct tagMDICREATESTRUCT {LPCSTR szClass;LPCSTR szTitle;HINSTANCE hOwner;int x;int y;int cx;int cy;DWORD style;LPARAM lParam;};
struct tagMOUSEHOOKSTRUCT {POINT pt;HWND hwnd;UINT wHitTestCode;DWORD dwExtraInfo;};
struct tagSTACKTRACEENTRY {DWORD dwSize;HTASK hTask;WORD wSS;WORD wBP;WORD wCS;WORD wIP;HMODULE hModule;WORD wSegment;WORD wFlags;};
struct tagPAINTSTRUCT {HDC hdc;BOOL fErase;RECT rcPaint;BOOL fRestore;BOOL fIncUpdate;BYTE rgbReserved[16];};
typedef UINT (__pascal *LPFNOLEUIHOOK)(HWND, UINT, WPARAM, LPARAM);
struct IUnknownVtbl {HRESULT (*QueryInterface)(IUnknown *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IUnknown *This);ULONG (*Release)(IUnknown *This);};
typedef LRESULT (__pascal *APPLET_PROC)(HWND hwndCpl, UINT msg, LPARAM lParam1, LPARAM lParam2);
struct IMallocVtbl {HRESULT (*QueryInterface)(IMalloc *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IMalloc *This);ULONG (*Release)(IMalloc *This);void *(*Alloc)(IMalloc *This, ULONG cb);void *(*Realloc)(IMalloc *This, void *pv, ULONG cb);void (*Free)(IMalloc *This, void *pv);ULONG (*GetSize)(IMalloc *This, void *pv);int (*DidAlloc)(IMalloc *This, void *pv);void (*HeapMinimize)(IMalloc *This);};
typedef DWORD (__pascal *LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, DEVMODE *);
struct tagSTATSTG {char *pwcsName;DWORD type;ULARGE_INTEGER cbSize;FILETIME mtime;FILETIME ctime;FILETIME atime;DWORD grfMode;DWORD grfLocksSupported;CLSID clsid;DWORD grfStateBits;DWORD reserved;};
typedef LRESULT __pascal MMIOPROC(LPSTR lpmmioinfo, UINT uMessage, LPARAM lParam1, LPARAM lParam2);
struct tagOIFI {UINT cb;BOOL fMDIApp;HWND hwndFrame;HACCEL haccel;int cAccelEntries;};
struct _42792D5BBA08C54B20EEEC50F78E7D08 {ULONG ulReserved;LPSTR lpszSubject;LPSTR lpszNoteText;LPSTR lpszMessageType;LPSTR lpszDateReceived;LPSTR lpszConversationID;FLAGS flFlags;lpMapiRecipDesc lpOriginator;ULONG nRecipCount;lpMapiRecipDesc lpRecips;ULONG nFileCount;lpMapiFileDesc lpFiles;};
struct IOleCacheControlVtbl {HRESULT (*QueryInterface)(IOleCacheControl *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleCacheControl *This);ULONG (*Release)(IOleCacheControl *This);HRESULT (*OnRun)(IOleCacheControl *This, LPDATAOBJECT pDataObject);HRESULT (*OnStop)(IOleCacheControl *This);};
struct tagOBJECTDESCRIPTOR {ULONG cbSize;CLSID clsid;DWORD dwDrawAspect;SIZEL sizel;POINTL pointl;DWORD dwStatus;DWORD dwFullUserTypeName;DWORD dwSrcOfCopy;};
struct ICreateTypeLibVtbl {HRESULT (*QueryInterface)(ICreateTypeLib *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(ICreateTypeLib *This);unsigned __int32 (*Release)(ICreateTypeLib *This);HRESULT (*CreateTypeInfo)(ICreateTypeLib *This, TCHAR *szName, TYPEKIND tkind, ICreateTypeInfo * *lplpictinfo);HRESULT (*SetName)(ICreateTypeLib *This, TCHAR *szName);HRESULT (*SetVersion)(ICreateTypeLib *This, unsigned int wMajorVerNum, unsigned int wMinorVerNum);HRESULT (*SetGuid)(ICreateTypeLib *This, const GUID *const guid);HRESULT (*SetDocString)(ICreateTypeLib *This, TCHAR *szDoc);HRESULT (*SetHelpFileName)(ICreateTypeLib *This, TCHAR *szHelpFileName);HRESULT (*SetHelpContext)(ICreateTypeLib *This, unsigned __int32 dwHelpContext);HRESULT (*SetLcid)(ICreateTypeLib *This, LCID lcid);HRESULT (*SetLibFlags)(ICreateTypeLib *This, unsigned int uLibFlags);HRESULT (*SaveAllChanges)(ICreateTypeLib *This);};
struct IEnumFORMATETCVtbl {HRESULT (*QueryInterface)(IEnumFORMATETC *This, const IID *const riid, LPVOID *ppv);ULONG (*AddRef)(IEnumFORMATETC *This);ULONG (*Release)(IEnumFORMATETC *This);HRESULT (*Next)(IEnumFORMATETC *This, ULONG celt, FORMATETC *rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumFORMATETC *This, ULONG celt);HRESULT (*Reset)(IEnumFORMATETC *This);HRESULT (*Clone)(IEnumFORMATETC *This, IEnumFORMATETC * *ppenum);};
struct IEnumSTATDATAVtbl {HRESULT (*QueryInterface)(IEnumSTATDATA *This, const IID *const riid, LPVOID *ppv);ULONG (*AddRef)(IEnumSTATDATA *This);ULONG (*Release)(IEnumSTATDATA *This);HRESULT (*Next)(IEnumSTATDATA *This, ULONG celt, STATDATA *rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumSTATDATA *This, ULONG celt);HRESULT (*Reset)(IEnumSTATDATA *This);HRESULT (*Clone)(IEnumSTATDATA *This, IEnumSTATDATA * *ppenum);};
struct tagDRAWITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;UINT itemAction;UINT itemState;HWND hwndItem;HDC hDC;RECT rcItem;DWORD itemData;};
struct IEnumMonikerVtbl {HRESULT (*QueryInterface)(IEnumMoniker *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IEnumMoniker *This);ULONG (*Release)(IEnumMoniker *This);HRESULT (*Next)(IEnumMoniker *This, ULONG celt, LPMONIKER *rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumMoniker *This, ULONG celt);HRESULT (*Reset)(IEnumMoniker *This);HRESULT (*Clone)(IEnumMoniker *This, IEnumMoniker * *ppenm);};
struct IEnumOLEVERBVtbl {HRESULT (*QueryInterface)(IEnumOLEVERB *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IEnumOLEVERB *This);ULONG (*Release)(IEnumOLEVERB *This);HRESULT (*Next)(IEnumOLEVERB *This, ULONG celt, LPOLEVERB rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumOLEVERB *This, ULONG celt);HRESULT (*Reset)(IEnumOLEVERB *This);HRESULT (*Clone)(IEnumOLEVERB *This, IEnumOLEVERB * *ppenm);};
struct IEnumSTATSTGVtbl {HRESULT (*QueryInterface)(IEnumSTATSTG *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IEnumSTATSTG *This);ULONG (*Release)(IEnumSTATSTG *This);HRESULT (*Next)(IEnumSTATSTG *This, ULONG celt, STATSTG *rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumSTATSTG *This, ULONG celt);HRESULT (*Reset)(IEnumSTATSTG *This);HRESULT (*Clone)(IEnumSTATSTG *This, IEnumSTATSTG * *ppenm);};
struct IEnumUnknownVtbl {HRESULT (*QueryInterface)(IEnumUnknown *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IEnumUnknown *This);ULONG (*Release)(IEnumUnknown *This);HRESULT (*Next)(IEnumUnknown *This, ULONG celt, LPUNKNOWN *rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumUnknown *This, ULONG celt);HRESULT (*Reset)(IEnumUnknown *This);HRESULT (*Clone)(IEnumUnknown *This, IEnumUnknown * *ppenm);};
struct IRootStorageVtbl {HRESULT (*QueryInterface)(IRootStorage *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IRootStorage *This);ULONG (*Release)(IRootStorage *This);HRESULT (*SwitchToFile)(IRootStorage *This, LPSTR lpstrFile);};
struct IEnumStringVtbl {HRESULT (*QueryInterface)(IEnumString *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IEnumString *This);ULONG (*Release)(IEnumString *This);HRESULT (*Next)(IEnumString *This, ULONG celt, LPSTR *rgelt, ULONG *pceltFetched);HRESULT (*Skip)(IEnumString *This, ULONG celt);HRESULT (*Reset)(IEnumString *This);HRESULT (*Clone)(IEnumString *This, IEnumString * *ppenm);};
struct tagCREATESTRUCT {void *lpCreateParams;HINSTANCE hInstance;HMENU hMenu;HWND hwndParent;int cy;int cx;int y;int x;__int32 style;LPCSTR lpszName;LPCSTR lpszClass;DWORD dwExStyle;};
struct ITypeCompVtbl {HRESULT (*QueryInterface)(ITypeComp *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(ITypeComp *This);unsigned __int32 (*Release)(ITypeComp *This);HRESULT (*Bind)(ITypeComp *This, TCHAR *szName, unsigned __int32 lHashVal, unsigned int wflags, ITypeInfo * *pptinfo, DESCKIND *pdesckind, BINDPTR *pbindptr);HRESULT (*BindType)(ITypeComp *This, TCHAR *szName, unsigned __int32 lHashVal, ITypeInfo * *pptinfo, ITypeComp * *pptcomp);};
struct tagMETHODDATA {TCHAR *szName;PARAMDATA *ppdata;DISPID dispid;unsigned int iMeth;CALLCONV cc;unsigned int cArgs;unsigned int wFlags;VARTYPE vtReturn;};
struct IPersistVtbl {HRESULT (*QueryInterface)(IPersist *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IPersist *This);ULONG (*Release)(IPersist *This);HRESULT (*GetClassID)(IPersist *This, LPCLSID lpClassID);};
typedef UINT (__pascal *LPFNDEVMODE)(HWND, HMODULE, DEVMODE *, LPSTR, LPSTR, DEVMODE *, LPSTR, UINT);
typedef LRESULT (__pascal *DRIVERPROC)(DWORD, HDRVR, UINT, LPARAM, LPARAM);
typedef HDDEDATA __pascal FNCALLBACK(UINT wType, UINT wFmt, HCONV hConv, HSZ hsz1, HSZ hsz2, HDDEDATA hData, DWORD dwData1, DWORD dwData2);
struct tagSKBINFO {HWND hwnd;UINT nPad;BOOL fVisible;BOOL fMinimized;RECT rect;DWORD dwReserved;};
struct tagVARDESC {MEMBERID memid;TCHAR *lpstrSchema;tagVARDESC___F04833D7152C1F618CB19FA4ACB5074C __anonymous0;ELEMDESC elemdescVar;unsigned int wVarFlags;VARKIND varkind;};
typedef LRESULT (__pascal *WNDPROC)(HWND, UINT, WPARAM, LPARAM);
struct IExternalConnectionVtbl {HRESULT (*QueryInterface)(IExternalConnection *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IExternalConnection *This);ULONG (*Release)(IExternalConnection *This);DWORD (*AddConnection)(IExternalConnection *This, DWORD extconn, DWORD reserved);DWORD (*ReleaseConnection)(IExternalConnection *This, DWORD extconn, DWORD reserved, BOOL fLastReleaseCloses);};
struct IStdMarshalInfoVtbl {HRESULT (*QueryInterface)(IStdMarshalInfo *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IStdMarshalInfo *This);ULONG (*Release)(IStdMarshalInfo *This);HRESULT (*GetClassForHandler)(IStdMarshalInfo *This, DWORD dwDestContext, LPVOID pvDestContext, LPCLSID pClsid);};
struct IMessageFilterVtbl {HRESULT (*QueryInterface)(IMessageFilter *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IMessageFilter *This);ULONG (*Release)(IMessageFilter *This);DWORD (*HandleInComingCall)(IMessageFilter *This, DWORD dwCallType, HTASK htaskCaller, DWORD dwTickCount, DWORD dwReserved);DWORD (*RetryRejectedCall)(IMessageFilter *This, HTASK htaskCallee, DWORD dwTickCount, DWORD dwRejectType);DWORD (*MessagePending)(IMessageFilter *This, HTASK htaskCallee, DWORD dwTickCount, DWORD dwPendingType);};
struct IClassFactoryVtbl {HRESULT (*QueryInterface)(IClassFactory *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IClassFactory *This);ULONG (*Release)(IClassFactory *This);HRESULT (*CreateInstance)(IClassFactory *This, LPUNKNOWN pUnkOuter, const IID *const riid, LPVOID *ppvObject);HRESULT (*LockServer)(IClassFactory *This, BOOL fLock);};
struct tagMONCONVSTRUCT {UINT cb;BOOL fConnect;DWORD dwTime;HANDLE hTask;HSZ hszSvc;HSZ hszTopic;HCONV hConvClient;HCONV hConvServer;};
struct tagMONLINKSTRUCT {UINT cb;DWORD dwTime;HANDLE hTask;BOOL fEstablished;BOOL fNoData;HSZ hszSvc;HSZ hszTopic;HSZ hszItem;UINT wFmt;BOOL fServer;HCONV hConvServer;HCONV hConvClient;};
struct IDropSourceVtbl {HRESULT (*QueryInterface)(IDropSource *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IDropSource *This);ULONG (*Release)(IDropSource *This);HRESULT (*QueryContinueDrag)(IDropSource *This, BOOL fEscapePressed, DWORD grfKeyState);HRESULT (*GiveFeedback)(IDropSource *This, DWORD dwEffect);};
struct tagMONHSZSTRUCT {UINT cb;BOOL fsAction;DWORD dwTime;HSZ hsz;HANDLE hTask;WORD wReserved;char str[1];};
struct tagMONMSGSTRUCT {UINT cb;HWND hwndTo;DWORD dwTime;HANDLE hTask;UINT wMsg;WPARAM wParam;LPARAM lParam;};
struct IOleWindowVtbl {HRESULT (*QueryInterface)(IOleWindow *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleWindow *This);ULONG (*Release)(IOleWindow *This);HRESULT (*GetWindow)(IOleWindow *This, HWND *lphwnd);HRESULT (*ContextSensitiveHelp)(IOleWindow *This, BOOL fEnterMode);};
struct tagCONVINFO {DWORD cb;DWORD hUser;HCONV hConvPartner;HSZ hszSvcPartner;HSZ hszServiceReq;HSZ hszTopic;HSZ hszItem;UINT wFmt;UINT wType;UINT wStatus;UINT wConvst;UINT wLastError;HCONVLIST hConvList;CONVCONTEXT ConvCtxt;};
struct tagFUNCDESC {MEMBERID memid;SCODE *lprgscode;ELEMDESC *lprgelemdescParam;FUNCKIND funckind;INVOKEKIND invkind;CALLCONV callconv;int cParams;int cParamsOpt;int oVft;int cScodes;ELEMDESC elemdescFunc;unsigned int wFuncFlags;};
struct tagMSG {HWND hwnd;UINT message;WPARAM wParam;LPARAM lParam;DWORD time;POINT pt;};
union tagVARIANT___83860D232BE831FC4DB97AAFCFF274E0 {int iVal;__int32 lVal;float fltVal;double dblVal;VARIANT_BOOL _bool;SCODE scode;CY cyVal;DATE date;BSTR bstrVal;IUnknown *punkVal;IDispatch *pdispVal;SAFEARRAY *parray;int *piVal;__int32 *plVal;float *pfltVal;double *pdblVal;VARIANT_BOOL *pbool;SCODE *pscode;CY *pcyVal;DATE *pdate;BSTR *pbstrVal;IUnknown * *ppunkVal;IDispatch * *ppdispVal;SAFEARRAY * *pparray;VARIANT *pvarVal;void *byref;};
struct IOleUILinkContainerVtbl {HRESULT (*QueryInterface)(IOleUILinkContainer *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleUILinkContainer *This);ULONG (*Release)(IOleUILinkContainer *This);DWORD (*GetNextLink)(IOleUILinkContainer *This, DWORD dwLink);HRESULT (*SetLinkUpdateOptions)(IOleUILinkContainer *This, DWORD dwLink, DWORD dwUpdateOpt);HRESULT (*GetLinkUpdateOptions)(IOleUILinkContainer *This, DWORD dwLink, DWORD *lpdwUpdateOpt);HRESULT (*SetLinkSource)(IOleUILinkContainer *This, DWORD dwLink, LPSTR lpszDisplayName, ULONG lenFileName, ULONG *pchEaten, BOOL fValidateSource);HRESULT (*GetLinkSource)(IOleUILinkContainer *This, DWORD dwLink, LPSTR *lplpszDisplayName, ULONG *lplenFileName, LPSTR *lplpszFullLinkType, LPSTR *lplpszShortLinkType, BOOL *lpfSourceAvailable, BOOL *lpfIsSelected);HRESULT (*OpenLinkSource)(IOleUILinkContainer *This, DWORD dwLink);HRESULT (*UpdateLink)(IOleUILinkContainer *This, DWORD dwLink, BOOL fErrorMessage, BOOL fErrorAction);HRESULT (*CancelLink)(IOleUILinkContainer *This, DWORD dwLink);};
struct IOleInPlaceObjectVtbl {HRESULT (*QueryInterface)(IOleInPlaceObject *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleInPlaceObject *This);ULONG (*Release)(IOleInPlaceObject *This);HRESULT (*GetWindow)(IOleInPlaceObject *This, HWND *lphwnd);HRESULT (*ContextSensitiveHelp)(IOleInPlaceObject *This, BOOL fEnterMode);HRESULT (*InPlaceDeactivate)(IOleInPlaceObject *This);HRESULT (*UIDeactivate)(IOleInPlaceObject *This);HRESULT (*SetObjectRects)(IOleInPlaceObject *This, LPCRECT lprcPosRect, LPCRECT lprcClipRect);HRESULT (*ReactivateAndUndo)(IOleInPlaceObject *This);};
struct IParseDisplayNameVtbl {HRESULT (*QueryInterface)(IParseDisplayName *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IParseDisplayName *This);ULONG (*Release)(IParseDisplayName *This);HRESULT (*ParseDisplayName)(IParseDisplayName *This, LPBC pbc, LPSTR lpszDisplayName, ULONG *pchEaten, LPMONIKER *ppmkOut);};
struct tagOUTLINETEXTMETRIC {UINT otmSize;TEXTMETRIC otmTextMetrics;BYTE otmFiller;PANOSE otmPanoseNumber;UINT otmfsSelection;UINT otmfsType;int otmsCharSlopeRise;int otmsCharSlopeRun;int otmItalicAngle;UINT otmEMSquare;int otmAscent;int otmDescent;UINT otmLineGap;UINT otmsCapEmHeight;UINT otmsXHeight;RECT otmrcFontBox;int otmMacAscent;int otmMacDescent;UINT otmMacLineGap;UINT otmusMinimumPPEM;POINT otmptSubscriptSize;POINT otmptSubscriptOffset;POINT otmptSuperscriptSize;POINT otmptSuperscriptOffset;UINT otmsStrikeoutSize;int otmsStrikeoutPosition;int otmsUnderscorePosition;int otmsUnderscoreSize;PSTR otmpFamilyName;PSTR otmpFaceName;PSTR otmpStyleName;PSTR otmpFullName;};
struct IPersistStorageVtbl {HRESULT (*QueryInterface)(IPersistStorage *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IPersistStorage *This);ULONG (*Release)(IPersistStorage *This);HRESULT (*GetClassID)(IPersistStorage *This, LPCLSID lpClassID);HRESULT (*IsDirty)(IPersistStorage *This);HRESULT (*InitNew)(IPersistStorage *This, LPSTORAGE pStg);HRESULT (*Load)(IPersistStorage *This, LPSTORAGE pStg);HRESULT (*Save)(IPersistStorage *This, LPSTORAGE pStgSave, BOOL fSameAsLoad);HRESULT (*SaveCompleted)(IPersistStorage *This, LPSTORAGE pStgNew);HRESULT (*HandsOffStorage)(IPersistStorage *This);};
struct IRunnableObjectVtbl {HRESULT (*QueryInterface)(IRunnableObject *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IRunnableObject *This);ULONG (*Release)(IRunnableObject *This);HRESULT (*GetRunningClass)(IRunnableObject *This, LPCLSID lpClsid);HRESULT (*Run)(IRunnableObject *This, LPBINDCTX pbc);BOOL (*IsRunning)(IRunnableObject *This);HRESULT (*LockRunning)(IRunnableObject *This, BOOL fLock, BOOL fLastUnlockCloses);HRESULT (*SetContainedObject)(IRunnableObject *This, BOOL fContained);};
struct tagOLEUIEDITLINKS {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;IOleUILinkContainer *lpOleUILinkContainer;};
struct ILockBytesVtbl {HRESULT (*QueryInterface)(ILockBytes *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(ILockBytes *This);ULONG (*Release)(ILockBytes *This);HRESULT (*ReadAt)(ILockBytes *This, ULARGE_INTEGER ulOffset, void *pv, ULONG cb, ULONG *pcbRead);HRESULT (*WriteAt)(ILockBytes *This, ULARGE_INTEGER ulOffset, const void *pv, ULONG cb, ULONG *pcbWritten);HRESULT (*Flush)(ILockBytes *This);HRESULT (*SetSize)(ILockBytes *This, ULARGE_INTEGER cb);HRESULT (*LockRegion)(ILockBytes *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (*UnlockRegion)(ILockBytes *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (*Stat)(ILockBytes *This, STATSTG *pstatstg, DWORD grfStatFlag);};
struct tagCHOOSECOLOR {DWORD lStructSize;HWND hwndOwner;HWND hInstance;COLORREF rgbResult;COLORREF *lpCustColors;DWORD Flags;LPARAM lCustData;UINT (__pascal *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;};
struct tagMONCBSTRUCT {UINT cb;WORD wReserved;DWORD dwTime;HANDLE hTask;DWORD dwRet;UINT wType;UINT wFmt;HCONV hConv;HSZ hsz1;HSZ hsz2;HDDEDATA hData;DWORD dwData1;DWORD dwData2;};
struct ITypeLibVtbl {HRESULT (*QueryInterface)(ITypeLib *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(ITypeLib *This);unsigned __int32 (*Release)(ITypeLib *This);unsigned int (*GetTypeInfoCount)(ITypeLib *This);HRESULT (*GetTypeInfo)(ITypeLib *This, unsigned int index, ITypeInfo * *pptinfo);HRESULT (*GetTypeInfoType)(ITypeLib *This, unsigned int index, TYPEKIND *ptypekind);HRESULT (*GetTypeInfoOfGuid)(ITypeLib *This, const GUID *const guid, ITypeInfo * *pptinfo);HRESULT (*GetLibAttr)(ITypeLib *This, TLIBATTR * *pptlibattr);HRESULT (*GetTypeComp)(ITypeLib *This, ITypeComp * *pptcomp);HRESULT (*GetDocumentation)(ITypeLib *This, int index, BSTR *pbstrName, BSTR *pbstrDocString, unsigned __int32 *pdwHelpContext, BSTR *pbstrHelpFile);HRESULT (*IsName)(ITypeLib *This, TCHAR *szNameBuf, unsigned __int32 lHashVal, int *lpfName);HRESULT (*FindName)(ITypeLib *This, TCHAR *szNameBuf, unsigned __int32 lHashVal, ITypeInfo * *rgptinfo, MEMBERID *rgmemid, unsigned int *pcFound);void (*ReleaseTLibAttr)(ITypeLib *This, TLIBATTR *ptlibattr);};
struct tagTYPEATTR {GUID guid;LCID lcid;unsigned __int32 dwReserved;MEMBERID memidConstructor;MEMBERID memidDestructor;TCHAR *lpstrSchema;unsigned __int32 cbSizeInstance;TYPEKIND typekind;unsigned int cFuncs;unsigned int cVars;unsigned int cImplTypes;unsigned int cbSizeVft;unsigned int cbAlignment;unsigned int wTypeFlags;unsigned int wMajorVerNum;unsigned int wMinorVerNum;TYPEDESC tdescAlias;IDLDESC idldescType;};
struct IOleAdviseHolderVtbl {HRESULT (*QueryInterface)(IOleAdviseHolder *This, const IID *const riid, LPVOID *ppv);ULONG (*AddRef)(IOleAdviseHolder *This);ULONG (*Release)(IOleAdviseHolder *This);HRESULT (*Advise)(IOleAdviseHolder *This, LPADVISESINK pAdvise, DWORD *pdwConnection);HRESULT (*Unadvise)(IOleAdviseHolder *This, DWORD dwConnection);HRESULT (*EnumAdvise)(IOleAdviseHolder *This, LPENUMSTATDATA *ppenumAdvise);HRESULT (*SendOnRename)(IOleAdviseHolder *This, LPMONIKER pmk);HRESULT (*SendOnSave)(IOleAdviseHolder *This);HRESULT (*SendOnClose)(IOleAdviseHolder *This);};
struct IOleClientSiteVtbl {HRESULT (*QueryInterface)(IOleClientSite *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleClientSite *This);ULONG (*Release)(IOleClientSite *This);HRESULT (*SaveObject)(IOleClientSite *This);HRESULT (*GetMoniker)(IOleClientSite *This, DWORD dwAssign, DWORD dwWhichMoniker, LPMONIKER *ppmk);HRESULT (*GetContainer)(IOleClientSite *This, LPOLECONTAINER *ppContainer);HRESULT (*ShowObject)(IOleClientSite *This);HRESULT (*OnShowWindow)(IOleClientSite *This, BOOL fShow);HRESULT (*RequestNewObjectLayout)(IOleClientSite *This);};
struct IPersistStreamVtbl {HRESULT (*QueryInterface)(IPersistStream *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IPersistStream *This);ULONG (*Release)(IPersistStream *This);HRESULT (*GetClassID)(IPersistStream *This, LPCLSID lpClassID);HRESULT (*IsDirty)(IPersistStream *This);HRESULT (*Load)(IPersistStream *This, LPSTREAM pStm);HRESULT (*Save)(IPersistStream *This, LPSTREAM pStm, BOOL fClearDirty);HRESULT (*GetSizeMax)(IPersistStream *This, ULARGE_INTEGER *pcbSize);};
struct IAdviseSink2Vtbl {HRESULT (*QueryInterface)(IAdviseSink2 *This, const IID *const riid, LPVOID *ppv);ULONG (*AddRef)(IAdviseSink2 *This);ULONG (*Release)(IAdviseSink2 *This);void (*OnDataChange)(IAdviseSink2 *This, FORMATETC *pFormatetc, STGMEDIUM *pStgmed);void (*OnViewChange)(IAdviseSink2 *This, DWORD dwAspect, __int32 lindex);void (*OnRename)(IAdviseSink2 *This, LPMONIKER pmk);void (*OnSave)(IAdviseSink2 *This);void (*OnClose)(IAdviseSink2 *This);void (*OnLinkSrcChange)(IAdviseSink2 *This, LPMONIKER pmk);};
struct IAdviseSinkVtbl {HRESULT (*QueryInterface)(IAdviseSink *This, const IID *const riid, LPVOID *ppv);ULONG (*AddRef)(IAdviseSink *This);ULONG (*Release)(IAdviseSink *This);void (*OnDataChange)(IAdviseSink *This, FORMATETC *pFormatetc, STGMEDIUM *pStgmed);void (*OnViewChange)(IAdviseSink *This, DWORD dwAspect, __int32 lindex);void (*OnRename)(IAdviseSink *This, LPMONIKER pmk);void (*OnSave)(IAdviseSink *This);void (*OnClose)(IAdviseSink *This);};
struct IDropTargetVtbl {HRESULT (*QueryInterface)(IDropTarget *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IDropTarget *This);ULONG (*Release)(IDropTarget *This);HRESULT (*DragEnter)(IDropTarget *This, LPDATAOBJECT pDataObj, DWORD grfKeyState, POINTL pt, LPDWORD pdwEffect);HRESULT (*DragOver)(IDropTarget *This, DWORD grfKeyState, POINTL pt, LPDWORD pdwEffect);HRESULT (*DragLeave)(IDropTarget *This);HRESULT (*Drop)(IDropTarget *This, LPDATAOBJECT pDataObj, DWORD grfKeyState, POINTL pt, LPDWORD pdwEffect);};
struct tagFINDREPLACE {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;DWORD Flags;LPSTR lpstrFindWhat;LPSTR lpstrReplaceWith;UINT wFindWhatLen;UINT wReplaceWithLen;LPARAM lCustData;UINT (__pascal *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;};
struct IDispatchVtbl {HRESULT (*QueryInterface)(IDispatch *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(IDispatch *This);unsigned __int32 (*Release)(IDispatch *This);HRESULT (*GetTypeInfoCount)(IDispatch *This, unsigned int *pctinfo);HRESULT (*GetTypeInfo)(IDispatch *This, unsigned int itinfo, LCID lcid, ITypeInfo * *pptinfo);HRESULT (*GetIDsOfNames)(IDispatch *This, const IID *const riid, TCHAR * *rgszNames, unsigned int cNames, LCID lcid, DISPID *rgdispid);HRESULT (*Invoke)(IDispatch *This, DISPID dispidMember, const IID *const riid, LCID lcid, unsigned int wFlags, DISPPARAMS *pdispparams, VARIANT *pvarResult, EXCEPINFO *pexcepinfo, unsigned int *puArgErr);};
struct IMarshalVtbl {HRESULT (*QueryInterface)(IMarshal *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IMarshal *This);ULONG (*Release)(IMarshal *This);HRESULT (*GetUnmarshalClass)(IMarshal *This, const IID *const riid, LPVOID pv, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags, LPCLSID pCid);HRESULT (*GetMarshalSizeMax)(IMarshal *This, const IID *const riid, LPVOID pv, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags, LPDWORD pSize);HRESULT (*MarshalInterface)(IMarshal *This, LPSTREAM pStm, const IID *const riid, LPVOID pv, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags);HRESULT (*UnmarshalInterface)(IMarshal *This, LPSTREAM pStm, const IID *const riid, LPVOID *ppv);HRESULT (*ReleaseMarshalData)(IMarshal *This, LPSTREAM pStm);HRESULT (*DisconnectObject)(IMarshal *This, DWORD dwReserved);};
struct tagOLEUIBUSY {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;HTASK hTask;HWND *lphWndDialog;};
struct IStreamVtbl {HRESULT (*QueryInterface)(IStream *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IStream *This);ULONG (*Release)(IStream *This);HRESULT (*Read)(IStream *This, void *pv, ULONG cb, ULONG *pcbRead);HRESULT (*Write)(IStream *This, const void *pv, ULONG cb, ULONG *pcbWritten);HRESULT (*Seek)(IStream *This, LARGE_INTEGER dlibMove, DWORD dwOrigin, ULARGE_INTEGER *plibNewPosition);HRESULT (*SetSize)(IStream *This, ULARGE_INTEGER libNewSize);HRESULT (*CopyTo)(IStream *This, IStream *pstm, ULARGE_INTEGER cb, ULARGE_INTEGER *pcbRead, ULARGE_INTEGER *pcbWritten);HRESULT (*Commit)(IStream *This, DWORD grfCommitFlags);HRESULT (*Revert)(IStream *This);HRESULT (*LockRegion)(IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (*UnlockRegion)(IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);HRESULT (*Stat)(IStream *This, STATSTG *pstatstg, DWORD grfStatFlag);HRESULT (*Clone)(IStream *This, IStream * *ppstm);};
struct tagOFN {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;LPCSTR lpstrFilter;LPSTR lpstrCustomFilter;DWORD nMaxCustFilter;DWORD nFilterIndex;LPSTR lpstrFile;DWORD nMaxFile;LPSTR lpstrFileTitle;DWORD nMaxFileTitle;LPCSTR lpstrInitialDir;LPCSTR lpstrTitle;DWORD Flags;UINT nFileOffset;UINT nFileExtension;LPCSTR lpstrDefExt;LPARAM lCustData;UINT (__pascal *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;};
struct IOleInPlaceActiveObjectVtbl {HRESULT (*QueryInterface)(IOleInPlaceActiveObject *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleInPlaceActiveObject *This);ULONG (*Release)(IOleInPlaceActiveObject *This);HRESULT (*GetWindow)(IOleInPlaceActiveObject *This, HWND *lphwnd);HRESULT (*ContextSensitiveHelp)(IOleInPlaceActiveObject *This, BOOL fEnterMode);HRESULT (*TranslateAccelerator)(IOleInPlaceActiveObject *This, LPMSG lpmsg);HRESULT (*OnFrameWindowActivate)(IOleInPlaceActiveObject *This, BOOL fActivate);HRESULT (*OnDocWindowActivate)(IOleInPlaceActiveObject *This, BOOL fActivate);HRESULT (*ResizeBorder)(IOleInPlaceActiveObject *This, LPCRECT lprectBorder, LPOLEINPLACEUIWINDOW lpUIWindow, BOOL fFrameWindow);HRESULT (*EnableModeless)(IOleInPlaceActiveObject *This, BOOL fEnable);};
struct IRunningObjectTableVtbl {HRESULT (*QueryInterface)(IRunningObjectTable *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IRunningObjectTable *This);ULONG (*Release)(IRunningObjectTable *This);HRESULT (*Register)(IRunningObjectTable *This, DWORD grfFlags, LPUNKNOWN punkObject, LPMONIKER pmkObjectName, DWORD *pdwRegister);HRESULT (*Revoke)(IRunningObjectTable *This, DWORD dwRegister);HRESULT (*IsRunning)(IRunningObjectTable *This, LPMONIKER pmkObjectName);HRESULT (*GetObject)(IRunningObjectTable *This, LPMONIKER pmkObjectName, LPUNKNOWN *ppunkObject);HRESULT (*NoteChangeTime)(IRunningObjectTable *This, DWORD dwRegister, FILETIME *pfiletime);HRESULT (*GetTimeOfLastChange)(IRunningObjectTable *This, LPMONIKER pmkObjectName, FILETIME *pfiletime);HRESULT (*EnumRunning)(IRunningObjectTable *This, LPENUMMONIKER *ppenumMoniker);};
struct IDataAdviseHolderVtbl {HRESULT (*QueryInterface)(IDataAdviseHolder *This, const IID *const riid, LPVOID *ppv);ULONG (*AddRef)(IDataAdviseHolder *This);ULONG (*Release)(IDataAdviseHolder *This);HRESULT (*Advise)(IDataAdviseHolder *This, LPDATAOBJECT pDataObject, FORMATETC *pFetc, DWORD advf, LPADVISESINK pAdvise, DWORD *pdwConnection);HRESULT (*Unadvise)(IDataAdviseHolder *This, DWORD dwConnection);HRESULT (*EnumAdvise)(IDataAdviseHolder *This, LPENUMSTATDATA *ppenumAdvise);HRESULT (*SendOnDataChange)(IDataAdviseHolder *This, LPDATAOBJECT pDataObject, DWORD dwReserved, DWORD advf);};
struct ICreateTypeInfoVtbl {HRESULT (*QueryInterface)(ICreateTypeInfo *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(ICreateTypeInfo *This);unsigned __int32 (*Release)(ICreateTypeInfo *This);HRESULT (*SetGuid)(ICreateTypeInfo *This, const GUID *const guid);HRESULT (*SetTypeFlags)(ICreateTypeInfo *This, unsigned int uTypeFlags);HRESULT (*SetDocString)(ICreateTypeInfo *This, TCHAR *pstrDoc);HRESULT (*SetHelpContext)(ICreateTypeInfo *This, unsigned __int32 dwHelpContext);HRESULT (*SetVersion)(ICreateTypeInfo *This, unsigned int wMajorVerNum, unsigned int wMinorVerNum);HRESULT (*AddRefTypeInfo)(ICreateTypeInfo *This, ITypeInfo *ptinfo, HREFTYPE *phreftype);HRESULT (*AddFuncDesc)(ICreateTypeInfo *This, unsigned int index, FUNCDESC *pfuncdesc);HRESULT (*AddImplType)(ICreateTypeInfo *This, unsigned int index, HREFTYPE hreftype);HRESULT (*SetImplTypeFlags)(ICreateTypeInfo *This, unsigned int index, int impltypeflags);HRESULT (*SetAlignment)(ICreateTypeInfo *This, unsigned int cbAlignment);HRESULT (*SetSchema)(ICreateTypeInfo *This, TCHAR *lpstrSchema);HRESULT (*AddVarDesc)(ICreateTypeInfo *This, unsigned int index, VARDESC *pvardesc);HRESULT (*SetFuncAndParamNames)(ICreateTypeInfo *This, unsigned int index, TCHAR * *rgszNames, unsigned int cNames);HRESULT (*SetVarName)(ICreateTypeInfo *This, unsigned int index, TCHAR *szName);HRESULT (*SetTypeDescAlias)(ICreateTypeInfo *This, TYPEDESC *ptdescAlias);HRESULT (*DefineFuncAsDllEntry)(ICreateTypeInfo *This, unsigned int index, TCHAR *szDllName, TCHAR *szProcName);HRESULT (*SetFuncDocString)(ICreateTypeInfo *This, unsigned int index, TCHAR *szDocString);HRESULT (*SetVarDocString)(ICreateTypeInfo *This, unsigned int index, TCHAR *szDocString);HRESULT (*SetFuncHelpContext)(ICreateTypeInfo *This, unsigned int index, unsigned __int32 dwHelpContext);HRESULT (*SetVarHelpContext)(ICreateTypeInfo *This, unsigned int index, unsigned __int32 dwHelpContext);HRESULT (*SetMops)(ICreateTypeInfo *This, unsigned int index, BSTR bstrMops);HRESULT (*SetTypeIdldesc)(ICreateTypeInfo *This, IDLDESC *pidldesc);HRESULT (*LayOut)(ICreateTypeInfo *This);};
struct IPersistFileVtbl {HRESULT (*QueryInterface)(IPersistFile *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IPersistFile *This);ULONG (*Release)(IPersistFile *This);HRESULT (*GetClassID)(IPersistFile *This, LPCLSID lpClassID);HRESULT (*IsDirty)(IPersistFile *This);HRESULT (*Load)(IPersistFile *This, LPCSTR lpszFileName, DWORD grfMode);HRESULT (*Save)(IPersistFile *This, LPCSTR lpszFileName, BOOL fRemember);HRESULT (*SaveCompleted)(IPersistFile *This, LPCSTR lpszFileName);HRESULT (*GetCurFile)(IPersistFile *This, LPSTR *lplpszFileName);};
struct IBindCtxVtbl {HRESULT (*QueryInterface)(IBindCtx *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IBindCtx *This);ULONG (*Release)(IBindCtx *This);HRESULT (*RegisterObjectBound)(IBindCtx *This, LPUNKNOWN punk);HRESULT (*RevokeObjectBound)(IBindCtx *This, LPUNKNOWN punk);HRESULT (*ReleaseBoundObjects)(IBindCtx *This);HRESULT (*SetBindOptions)(IBindCtx *This, LPBIND_OPTS pbindopts);HRESULT (*GetBindOptions)(IBindCtx *This, LPBIND_OPTS pbindopts);HRESULT (*GetRunningObjectTable)(IBindCtx *This, LPRUNNINGOBJECTTABLE *pprot);HRESULT (*RegisterObjectParam)(IBindCtx *This, LPSTR lpszKey, LPUNKNOWN punk);HRESULT (*GetObjectParam)(IBindCtx *This, LPSTR lpszKey, LPUNKNOWN *ppunk);HRESULT (*EnumObjectParam)(IBindCtx *This, LPENUMSTRING *ppenum);HRESULT (*RevokeObjectParam)(IBindCtx *This, LPSTR lpszKey);};
struct IStorageVtbl {HRESULT (*QueryInterface)(IStorage *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IStorage *This);ULONG (*Release)(IStorage *This);HRESULT (*CreateStream)(IStorage *This, const char *pwcsName, DWORD grfMode, DWORD reserved1, DWORD reserved2, IStream * *ppstm);HRESULT (*OpenStream)(IStorage *This, const char *pwcsName, void *reserved1, DWORD grfMode, DWORD reserved2, IStream * *ppstm);HRESULT (*CreateStorage)(IStorage *This, const char *pwcsName, DWORD grfMode, DWORD reserved1, DWORD reserved2, IStorage * *ppstg);HRESULT (*OpenStorage)(IStorage *This, const char *pwcsName, IStorage *pstgPriority, DWORD grfMode, SNB snbExclude, DWORD reserved, IStorage * *ppstg);HRESULT (*CopyTo)(IStorage *This, DWORD ciidExclude, const IID *rgiidExclude, SNB snbExclude, IStorage *pstgDest);HRESULT (*MoveElementTo)(IStorage *This, const char *lpszName, IStorage *pstgDest, const char *lpszNewName, DWORD grfFlags);HRESULT (*Commit)(IStorage *This, DWORD grfCommitFlags);HRESULT (*Revert)(IStorage *This);HRESULT (*EnumElements)(IStorage *This, DWORD reserved1, void *reserved2, DWORD reserved3, IEnumSTATSTG * *ppenm);HRESULT (*DestroyElement)(IStorage *This, const char *pwcsName);HRESULT (*RenameElement)(IStorage *This, const char *pwcsOldName, const char *pwcsNewName);HRESULT (*SetElementTimes)(IStorage *This, const char *lpszName, const FILETIME *pctime, const FILETIME *patime, const FILETIME *pmtime);HRESULT (*SetClass)(IStorage *This, const CLSID *const clsid);HRESULT (*SetStateBits)(IStorage *This, DWORD grfStateBits, DWORD grfMask);HRESULT (*Stat)(IStorage *This, STATSTG *pstatstg, DWORD grfStatFlag);};
struct IOleContainerVtbl {HRESULT (*QueryInterface)(IOleContainer *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleContainer *This);ULONG (*Release)(IOleContainer *This);HRESULT (*ParseDisplayName)(IOleContainer *This, LPBC pbc, LPSTR lpszDisplayName, ULONG *pchEaten, LPMONIKER *ppmkOut);HRESULT (*EnumObjects)(DWORD grfFlags, LPENUMUNKNOWN *ppenumUnknown);HRESULT (*LockContainer)(IOleContainer *This, BOOL fLock);};
struct IOleItemContainerVtbl {HRESULT (*QueryInterface)(IOleItemContainer *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleItemContainer *This);ULONG (*Release)(IOleItemContainer *This);HRESULT (*ParseDisplayName)(IOleItemContainer *This, LPBC pbc, LPSTR lpszDisplayName, ULONG *pchEaten, LPMONIKER *ppmkOut);HRESULT (*EnumObjects)(IOleItemContainer *This, DWORD grfFlags, LPENUMUNKNOWN *ppenumUnknown);HRESULT (*LockContainer)(IOleItemContainer *This, BOOL fLock);HRESULT (*GetObject)(IOleItemContainer *This, LPSTR lpszItem, DWORD dwSpeedNeeded, LPBINDCTX pbc, const IID *const riid, LPVOID *ppvObject);HRESULT (*GetObjectStorage)(IOleItemContainer *This, LPSTR lpszItem, LPBINDCTX pbc, const IID *const riid, LPVOID *ppvStorage);HRESULT (*IsRunning)(IOleItemContainer *This, LPSTR lpszItem);};
struct IViewObjectVtbl {HRESULT (*QueryInterface)(IViewObject *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IViewObject *This);ULONG (*Release)(IViewObject *This);HRESULT (*Draw)(IViewObject *This, DWORD dwDrawAspect, __int32 lindex, void *pvAspect, DVTARGETDEVICE *ptd, HDC hicTargetDev, HDC hdcDraw, LPCRECTL lprcBounds, LPCRECTL lprcWBounds, BOOL (__pascal *pfnContinue)(DWORD), DWORD dwContinue);HRESULT (*GetColorSet)(IViewObject *This, DWORD dwDrawAspect, __int32 lindex, void *pvAspect, DVTARGETDEVICE *ptd, HDC hicTargetDev, LPLOGPALETTE *ppColorSet);HRESULT (*Freeze)(IViewObject *This, DWORD dwDrawAspect, __int32 lindex, void *pvAspect, DWORD *pdwFreeze);HRESULT (*Unfreeze)(IViewObject *This, DWORD dwFreeze);HRESULT (*SetAdvise)(IViewObject *This, DWORD aspects, DWORD advf, LPADVISESINK pAdvSink);HRESULT (*GetAdvise)(IViewObject *This, DWORD *pAspects, DWORD *pAdvf, LPADVISESINK *ppAdvSink);};
struct IOleCache2Vtbl {HRESULT (*QueryInterface)(IOleCache2 *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleCache2 *This);ULONG (*Release)(IOleCache2 *This);HRESULT (*Cache)(IOleCache2 *This, LPFORMATETC lpFormatetc, DWORD advf, LPDWORD lpdwConnection);HRESULT (*Uncache)(IOleCache2 *This, DWORD dwConnection);HRESULT (*EnumCache)(IOleCache2 *This, LPENUMSTATDATA *ppenumStatData);HRESULT (*InitCache)(IOleCache2 *This, LPDATAOBJECT pDataObject);HRESULT (*SetData)(IOleCache2 *This, LPFORMATETC pformatetc, STGMEDIUM *pmedium, BOOL fRelease);HRESULT (*UpdateCache)(IOleCache2 *This, LPDATAOBJECT pDataObject, DWORD grfUpdf, LPVOID pReserved);HRESULT (*DiscardCache)(IOleCache2 *This, DWORD dwDiscardOptions);};
struct IOleCacheVtbl {HRESULT (*QueryInterface)(IOleCache *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleCache *This);ULONG (*Release)(IOleCache *This);HRESULT (*Cache)(IOleCache *This, LPFORMATETC lpFormatetc, DWORD advf, LPDWORD lpdwConnection);HRESULT (*Uncache)(IOleCache *This, DWORD dwConnection);HRESULT (*EnumCache)(IOleCache *This, LPENUMSTATDATA *ppenumStatData);HRESULT (*InitCache)(IOleCache *This, LPDATAOBJECT pDataObject);HRESULT (*SetData)(IOleCache *This, LPFORMATETC pformatetc, STGMEDIUM *pmedium, BOOL fRelease);};
struct tagCHOOSEFONT {DWORD lStructSize;HWND hwndOwner;HDC hDC;LOGFONT *lpLogFont;int iPointSize;DWORD Flags;COLORREF rgbColors;LPARAM lCustData;UINT (__pascal *lpfnHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpTemplateName;HINSTANCE hInstance;LPSTR lpszStyle;UINT nFontType;int nSizeMin;int nSizeMax;};
struct IOleInPlaceSiteVtbl {HRESULT (*QueryInterface)(IOleInPlaceSite *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleInPlaceSite *This);ULONG (*Release)(IOleInPlaceSite *This);HRESULT (*GetWindow)(IOleInPlaceSite *This, HWND *lphwnd);HRESULT (*ContextSensitiveHelp)(IOleInPlaceSite *This, BOOL fEnterMode);HRESULT (*CanInPlaceActivate)(IOleInPlaceSite *This);HRESULT (*OnInPlaceActivate)(IOleInPlaceSite *This);HRESULT (*OnUIActivate)(IOleInPlaceSite *This);HRESULT (*GetWindowContext)(IOleInPlaceSite *This, LPOLEINPLACEFRAME *lplpFrame, LPOLEINPLACEUIWINDOW *lplpDoc, LPRECT lprcPosRect, LPRECT lprcClipRect, LPOLEINPLACEFRAMEINFO lpFrameInfo);HRESULT (*Scroll)(IOleInPlaceSite *This, SIZE scrollExtent);HRESULT (*OnUIDeactivate)(IOleInPlaceSite *This, BOOL fUndoable);HRESULT (*OnInPlaceDeactivate)(IOleInPlaceSite *This);HRESULT (*DiscardUndoState)(IOleInPlaceSite *This);HRESULT (*DeactivateAndUndo)(IOleInPlaceSite *This);HRESULT (*OnPosRectChange)(IOleInPlaceSite *This, LPCRECT lprcPosRect);};
struct IViewObject2Vtbl {HRESULT (*QueryInterface)(IViewObject2 *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IViewObject2 *This);ULONG (*Release)(IViewObject2 *This);HRESULT (*Draw)(IViewObject2 *This, DWORD dwDrawAspect, __int32 lindex, void *pvAspect, DVTARGETDEVICE *ptd, HDC hicTargetDev, HDC hdcDraw, LPCRECTL lprcBounds, LPCRECTL lprcWBounds, BOOL (__pascal *pfnContinue)(DWORD), DWORD dwContinue);HRESULT (*GetColorSet)(IViewObject2 *This, DWORD dwDrawAspect, __int32 lindex, void *pvAspect, DVTARGETDEVICE *ptd, HDC hicTargetDev, LPLOGPALETTE *ppColorSet);HRESULT (*Freeze)(IViewObject2 *This, DWORD dwDrawAspect, __int32 lindex, void *pvAspect, DWORD *pdwFreeze);HRESULT (*Unfreeze)(IViewObject2 *This, DWORD dwFreeze);HRESULT (*SetAdvise)(IViewObject2 *This, DWORD aspects, DWORD advf, LPADVISESINK pAdvSink);HRESULT (*GetAdvise)(IViewObject2 *This, DWORD *pAspects, DWORD *pAdvf, LPADVISESINK *ppAdvSink);HRESULT (*GetExtent)(IViewObject2 *This, DWORD dwDrawAspect, __int32 lindex, DVTARGETDEVICE *ptd, LPSIZEL lpsizel);};
struct IOleLinkVtbl {HRESULT (*QueryInterface)(IOleLink *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleLink *This);ULONG (*Release)(IOleLink *This);HRESULT (*SetUpdateOptions)(IOleLink *This, DWORD dwUpdateOpt);HRESULT (*GetUpdateOptions)(IOleLink *This, LPDWORD pdwUpdateOpt);HRESULT (*SetSourceMoniker)(IOleLink *This, LPMONIKER pmk, const CLSID *const rclsid);HRESULT (*GetSourceMoniker)(IOleLink *This, LPMONIKER *ppmk);HRESULT (*SetSourceDisplayName)(IOleLink *This, LPCSTR lpszDisplayName);HRESULT (*GetSourceDisplayName)(IOleLink *This, LPSTR *lplpszDisplayName);HRESULT (*BindToSource)(IOleLink *This, DWORD bindflags, LPBINDCTX pbc);HRESULT (*BindIfRunning)(IOleLink *This);HRESULT (*GetBoundSource)(IOleLink *This, LPUNKNOWN *ppUnk);HRESULT (*UnbindSource)(IOleLink *This);HRESULT (*Update)(IOleLink *This, LPBINDCTX pbc);};
struct tagRC {HREC hrec;HWND hwnd;UINT wEventRef;UINT wRcPreferences;__int32 lRcOptions;RCYIELDPROC lpfnYield;BYTE lpUser[32];UINT wCountry;UINT wIntlPreferences;char lpLanguage[44];LPDF rglpdf[16];UINT wTryDictionary;CL clErrorLevel;ALC alc;ALC alcPriority;BYTE rgbfAlc[32];UINT wResultMode;UINT wTimeOut;__int32 lPcm;RECT rectBound;RECT rectExclude;GUIDE guide;UINT wRcOrient;UINT wRcDirect;int nInkWidth;COLORREF rgbInk;DWORD dwAppParam;DWORD dwDictParam;DWORD dwRecognizer;UINT rgwReserved[8];};
struct IDataObjectVtbl {HRESULT (*QueryInterface)(IDataObject *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IDataObject *This);ULONG (*Release)(IDataObject *This);HRESULT (*GetData)(IDataObject *This, LPFORMATETC pformatetcIn, LPSTGMEDIUM pmedium);HRESULT (*GetDataHere)(IDataObject *This, LPFORMATETC pformatetc, LPSTGMEDIUM pmedium);HRESULT (*QueryGetData)(IDataObject *This, LPFORMATETC pformatetc);HRESULT (*GetCanonicalFormatEtc)(IDataObject *This, LPFORMATETC pformatetc, LPFORMATETC pformatetcOut);HRESULT (*SetData)(IDataObject *This, LPFORMATETC pformatetc, STGMEDIUM *pmedium, BOOL fRelease);HRESULT (*EnumFormatEtc)(IDataObject *This, DWORD dwDirection, LPENUMFORMATETC *ppenumFormatEtc);HRESULT (*DAdvise)(IDataObject *This, FORMATETC *pFormatetc, DWORD advf, LPADVISESINK pAdvSink, DWORD *pdwConnection);HRESULT (*DUnadvise)(IDataObject *This, DWORD dwConnection);HRESULT (*EnumDAdvise)(IDataObject *This, LPENUMSTATDATA *ppenumAdvise);};
struct ITypeInfoVtbl {HRESULT (*QueryInterface)(ITypeInfo *This, const IID *const riid, void * *ppvObj);unsigned __int32 (*AddRef)(ITypeInfo *This);unsigned __int32 (*Release)(ITypeInfo *This);HRESULT (*GetTypeAttr)(ITypeInfo *This, TYPEATTR * *pptypeattr);HRESULT (*GetTypeComp)(ITypeInfo *This, ITypeComp * *pptcomp);HRESULT (*GetFuncDesc)(ITypeInfo *This, unsigned int index, FUNCDESC * *ppfuncdesc);HRESULT (*GetVarDesc)(ITypeInfo *This, unsigned int index, VARDESC * *ppvardesc);HRESULT (*GetNames)(ITypeInfo *This, MEMBERID memid, BSTR *rgbstrNames, unsigned int cMaxNames, unsigned int *pcNames);HRESULT (*GetRefTypeOfImplType)(ITypeInfo *This, unsigned int index, HREFTYPE *phreftype);HRESULT (*GetImplTypeFlags)(ITypeInfo *This, unsigned int index, int *pimpltypeflags);HRESULT (*GetIDsOfNames)(ITypeInfo *This, TCHAR * *rgszNames, unsigned int cNames, MEMBERID *rgmemid);HRESULT (*Invoke)(ITypeInfo *This, void *pvInstance, MEMBERID memid, unsigned int wFlags, DISPPARAMS *pdispparams, VARIANT *pvarResult, EXCEPINFO *pexcepinfo, unsigned int *puArgErr);HRESULT (*GetDocumentation)(ITypeInfo *This, MEMBERID memid, BSTR *pbstrName, BSTR *pbstrDocString, unsigned __int32 *pdwHelpContext, BSTR *pbstrHelpFile);HRESULT (*GetDllEntry)(ITypeInfo *This, MEMBERID memid, INVOKEKIND invkind, BSTR *pbstrDllName, BSTR *pbstrName, unsigned int *pwOrdinal);HRESULT (*GetRefTypeInfo)(ITypeInfo *This, HREFTYPE hreftype, ITypeInfo * *pptinfo);HRESULT (*AddressOfMember)(ITypeInfo *This, MEMBERID memid, INVOKEKIND invkind, void * *ppv);HRESULT (*CreateInstance)(ITypeInfo *This, IUnknown *punkOuter, const IID *const riid, void * *ppvObj);HRESULT (*GetMops)(ITypeInfo *This, MEMBERID memid, BSTR *pbstrMops);HRESULT (*GetContainingTypeLib)(ITypeInfo *This, ITypeLib * *pptlib, unsigned int *pindex);void (*ReleaseTypeAttr)(ITypeInfo *This, TYPEATTR *ptypeattr);void (*ReleaseFuncDesc)(ITypeInfo *This, FUNCDESC *pfuncdesc);void (*ReleaseVarDesc)(ITypeInfo *This, VARDESC *pvardesc);};
struct IMonikerVtbl {HRESULT (*QueryInterface)(IMoniker *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IMoniker *This);ULONG (*Release)(IMoniker *This);HRESULT (*GetClassID)(IMoniker *This, LPCLSID lpClassID);HRESULT (*IsDirty)(IMoniker *This);HRESULT (*Load)(IMoniker *This, LPSTREAM pStm);HRESULT (*Save)(IMoniker *This, LPSTREAM pStm, BOOL fClearDirty);HRESULT (*GetSizeMax)(IMoniker *This, ULARGE_INTEGER *pcbSize);HRESULT (*BindToObject)(IMoniker *This, LPBC pbc, LPMONIKER pmkToLeft, const IID *const riidResult, LPVOID *ppvResult);HRESULT (*BindToStorage)(IMoniker *This, LPBC pbc, LPMONIKER pmkToLeft, const IID *const riid, LPVOID *ppvObj);HRESULT (*Reduce)(IMoniker *This, LPBC pbc, DWORD dwReduceHowFar, LPMONIKER *ppmkToLeft, LPMONIKER *ppmkReduced);HRESULT (*ComposeWith)(IMoniker *This, LPMONIKER pmkRight, BOOL fOnlyIfNotGeneric, LPMONIKER *ppmkComposite);HRESULT (*Enum)(IMoniker *This, BOOL fForward, LPENUMMONIKER *ppenumMoniker);HRESULT (*IsEqual)(IMoniker *This, LPMONIKER pmkOtherMoniker);HRESULT (*Hash)(IMoniker *This, LPDWORD pdwHash);HRESULT (*IsRunning)(IMoniker *This, LPBC pbc, LPMONIKER pmkToLeft, LPMONIKER pmkNewlyRunning);HRESULT (*GetTimeOfLastChange)(IMoniker *This, LPBC pbc, LPMONIKER pmkToLeft, FILETIME *pfiletime);HRESULT (*Inverse)(IMoniker *This, LPMONIKER *ppmk);HRESULT (*CommonPrefixWith)(IMoniker *This, LPMONIKER pmkOther, LPMONIKER *ppmkPrefix);HRESULT (*RelativePathTo)(IMoniker *This, LPMONIKER pmkOther, LPMONIKER *ppmkRelPath);HRESULT (*GetDisplayName)(IMoniker *This, LPBC pbc, LPMONIKER pmkToLeft, LPSTR *lplpszDisplayName);HRESULT (*ParseDisplayName)(IMoniker *This, LPBC pbc, LPMONIKER pmkToLeft, LPSTR lpszDisplayName, ULONG *pchEaten, LPMONIKER *ppmkOut);HRESULT (*IsSystemMoniker)(IMoniker *This, LPDWORD pdwMksys);};
struct IOleObjectVtbl {HRESULT (*QueryInterface)(IOleObject *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleObject *This);ULONG (*Release)(IOleObject *This);HRESULT (*SetClientSite)(IOleObject *This, LPOLECLIENTSITE pClientSite);HRESULT (*GetClientSite)(IOleObject *This, LPOLECLIENTSITE *ppClientSite);HRESULT (*SetHostNames)(IOleObject *This, LPCSTR szContainerApp, LPCSTR szContainerObj);HRESULT (*Close)(IOleObject *This, DWORD dwSaveOption);HRESULT (*SetMoniker)(IOleObject *This, DWORD dwWhichMoniker, LPMONIKER pmk);HRESULT (*GetMoniker)(IOleObject *This, DWORD dwAssign, DWORD dwWhichMoniker, LPMONIKER *ppmk);HRESULT (*InitFromData)(IOleObject *This, LPDATAOBJECT pDataObject, BOOL fCreation, DWORD dwReserved);HRESULT (*GetClipboardData)(IOleObject *This, DWORD dwReserved, LPDATAOBJECT *ppDataObject);HRESULT (*DoVerb)(IOleObject *This, __int32 iVerb, LPMSG lpmsg, LPOLECLIENTSITE pActiveSite, __int32 lindex, HWND hwndParent, LPCRECT lprcPosRect);HRESULT (*EnumVerbs)(IOleObject *This, LPENUMOLEVERB *ppenumOleVerb);HRESULT (*Update)(IOleObject *This);HRESULT (*IsUpToDate)(IOleObject *This);HRESULT (*GetUserClassID)(IOleObject *This, CLSID *pClsid);HRESULT (*GetUserType)(IOleObject *This, DWORD dwFormOfType, LPSTR *pszUserType);HRESULT (*SetExtent)(IOleObject *This, DWORD dwDrawAspect, LPSIZEL lpsizel);HRESULT (*GetExtent)(IOleObject *This, DWORD dwDrawAspect, LPSIZEL lpsizel);HRESULT (*Advise)(IOleObject *This, LPADVISESINK pAdvSink, DWORD *pdwConnection);HRESULT (*Unadvise)(IOleObject *This, DWORD dwConnection);HRESULT (*EnumAdvise)(IOleObject *This, LPENUMSTATDATA *ppenumAdvise);HRESULT (*GetMiscStatus)(IOleObject *This, DWORD dwAspect, DWORD *pdwStatus);HRESULT (*SetColorScheme)(IOleObject *This, LPLOGPALETTE lpLogpal);};
typedef LPCRECT LPCBORDERWIDTHS;
struct tagMETAFILEPICT {int mm;int xExt;int yExt;HMETAFILE hMF;};
typedef LPRECT LPBORDERWIDTHS;
typedef TIMECALLBACK *LPTIMECALLBACK;
struct tagHANDLETABLE {HGDIOBJ objectHandle[1];};
typedef DRVCALLBACK *LPDRVCALLBACK;
typedef HANDLE GLOBALHANDLE;
typedef CLIPFORMAT *LPCLIPFORMAT;
typedef DRVCALLBACK MIDICALLBACK;
typedef DRVCALLBACK WAVECALLBACK;
typedef HANDLE LOCALHANDLE;
typedef OLERENDER *LPOLERENDER;
typedef OLEUPDATE *LPOLEUPDATE;
typedef FNCALLBACK *PFNCALLBACK;
typedef HMIDIOUT *LPHMIDIOUT;
typedef HWAVEOUT *LPHWAVEOUT;
typedef MMIOPROC *LPMMIOPROC;
struct tagHSZPAIR {HSZ hszSvc;HSZ hszTopic;};
typedef HMIDIIN *LPHMIDIIN;
typedef HWAVEIN *LPHWAVEIN;
typedef PATTERN *LPPATTERN;
typedef PATTERN near *NPPATTERN;
typedef int (__pascal *ENUMPROC)(LPSYV, int, void *);
typedef HANDLE HPENDATA;
typedef HANDLE *LPHANDLE;
typedef PATTERN *PPATTERN;
typedef HANDLE near *SPHANDLE;
typedef HICON HCURSOR;
typedef HANDLE HGLOBAL;
typedef HANDLE *PHANDLE;
struct in_addr {union in_addr___C13EC994467D6E67044F092615EC7EA9 S_un;};
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
typedef HKEY *PHKEY;
struct sockaddr_in {int sin_family;u_short sin_port;struct in_addr sin_addr;char sin_zero[8];};
struct mmtime_tag {UINT wType;union mmtime_tag___A8B4E596CBBC1C776453B8AC11D09F49 u;};
struct tagSEGINFO {UINT offSegment;UINT cbSegment;UINT flags;UINT cbAlloc;HGLOBAL h;UINT alignShift;UINT reserved[2];};
struct tagVARIANT {VARTYPE vt;unsigned int wReserved1;unsigned int wReserved2;unsigned int wReserved3;tagVARIANT___83860D232BE831FC4DB97AAFCFF274E0 __anonymous0;};
struct tagSYSHEAPINFO {DWORD dwSize;WORD wUserFreePercent;WORD wGDIFreePercent;HGLOBAL hUserSegment;HGLOBAL hGDISegment;};
struct tagTLIBATTR {GUID guid;LCID lcid;SYSKIND syskind;unsigned int wMajorVerNum;unsigned int wMinorVerNum;unsigned int wLibFlags;};
struct tagGLOBALENTRY {DWORD dwSize;DWORD dwAddress;DWORD dwBlockSize;HGLOBAL hBlock;WORD wcLock;WORD wcPageLock;WORD wFlags;BOOL wHeapPresent;HGLOBAL hOwner;WORD wType;WORD wData;DWORD dwNext;DWORD dwNextAlt;};
struct tagTASKENTRY {DWORD dwSize;HTASK hTask;HTASK hTaskParent;HINSTANCE hInst;HMODULE hModule;WORD wSS;WORD wSP;WORD wStackTop;WORD wStackMinimum;WORD wStackBottom;WORD wcEvents;HGLOBAL hQueue;char szModule[10];WORD wPSPOffset;HANDLE hNext;};
struct tagWNDCLASS {UINT style;WNDPROC lpfnWndProc;int cbClsExtra;int cbWndExtra;HINSTANCE hInstance;HICON hIcon;HCURSOR hCursor;HBRUSH hbrBackground;LPCSTR lpszMenuName;LPCSTR lpszClassName;};
struct _MMIOINFO {DWORD dwFlags;FOURCC fccIOProc;LPMMIOPROC pIOProc;UINT wErrorRet;HTASK htask;__int32 cchBuffer;HPSTR pchBuffer;HPSTR pchNext;HPSTR pchEndRead;HPSTR pchEndWrite;__int32 lBufOffset;__int32 lDiskOffset;DWORD adwInfo[3];DWORD dwReserved1;DWORD dwReserved2;HMMIO hmmio;};
struct tagRCRESULT {SYG syg;UINT wResultsType;int cSyv;LPSYV lpsyv;HANDLE hSyv;int nBaseLine;int nMidLine;HPENDATA hpendata;RECT rectBoundInk;POINT pntEnd;LPRC lprc;};
struct tagOLEUICHANGEICON {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;HGLOBAL hMetaPict;CLSID clsid;char szIconExe[256];int cchIconExe;};
struct tagPD {DWORD lStructSize;HWND hwndOwner;HGLOBAL hDevMode;HGLOBAL hDevNames;HDC hDC;DWORD Flags;UINT nFromPage;UINT nToPage;UINT nMinPage;UINT nMaxPage;UINT nCopies;HINSTANCE hInstance;LPARAM lCustData;UINT (__pascal *lpfnPrintHook)(HWND, UINT, WPARAM, LPARAM);UINT (__pascal *lpfnSetupHook)(HWND, UINT, WPARAM, LPARAM);LPCSTR lpPrintTemplateName;LPCSTR lpSetupTemplateName;HGLOBAL hPrintTemplate;HGLOBAL hSetupTemplate;};
struct IOleInPlaceUIWindowVtbl {HRESULT (*QueryInterface)(IOleInPlaceUIWindow *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleInPlaceUIWindow *This);ULONG (*Release)(IOleInPlaceUIWindow *This);HRESULT (*GetWindow)(IOleInPlaceUIWindow *This, HWND *lphwnd);HRESULT (*ContextSensitiveHelp)(IOleInPlaceUIWindow *This, BOOL fEnterMode);HRESULT (*GetBorder)(IOleInPlaceUIWindow *This, LPRECT lprectBorder);HRESULT (*RequestBorderSpace)(IOleInPlaceUIWindow *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (*SetBorderSpace)(IOleInPlaceUIWindow *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (*SetActiveObject)(IOleInPlaceUIWindow *This, LPOLEINPLACEACTIVEOBJECT lpActiveObject, LPCSTR lpszObjName);};
struct tagOLEUIPASTESPECIAL {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;LPDATAOBJECT lpSrcDataObj;LPOLEUIPASTEENTRY arrPasteEntries;int cPasteEntries;UINT *arrLinkTypes;int cLinkTypes;UINT cClsidExclude;LPCLSID lpClsidExclude;int nSelectedIndex;BOOL fLink;HGLOBAL hMetaPict;SIZEL sizel;};
struct tagOLEUICONVERT {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;CLSID clsid;CLSID clsidConvertDefault;CLSID clsidActivateDefault;CLSID clsidNew;DWORD dvAspect;WORD wFormat;BOOL fIsLinkedObject;HGLOBAL hMetaPict;LPSTR lpszUserType;BOOL fObjectsIconChanged;LPSTR lpszDefLabel;UINT cClsidExclude;LPCLSID lpClsidExclude;};
struct IOleInPlaceFrameVtbl {HRESULT (*QueryInterface)(IOleInPlaceFrame *This, const IID *const riid, LPVOID *ppvObj);ULONG (*AddRef)(IOleInPlaceFrame *This);ULONG (*Release)(IOleInPlaceFrame *This);HRESULT (*GetWindow)(IOleInPlaceFrame *This, HWND *lphwnd);HRESULT (*ContextSensitiveHelp)(IOleInPlaceFrame *This, BOOL fEnterMode);HRESULT (*GetBorder)(IOleInPlaceFrame *This, LPRECT lprectBorder);HRESULT (*RequestBorderSpace)(IOleInPlaceFrame *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (*SetBorderSpace)(IOleInPlaceFrame *This, LPCBORDERWIDTHS lpborderwidths);HRESULT (*SetActiveObject)(IOleInPlaceFrame *This, LPOLEINPLACEACTIVEOBJECT lpActiveObject, LPCSTR lpszObjName);HRESULT (*InsertMenus)(IOleInPlaceFrame *This, HMENU hmenuShared, LPOLEMENUGROUPWIDTHS lpMenuWidths);HRESULT (*SetMenu)(IOleInPlaceFrame *This, HMENU hmenuShared, HOLEMENU holemenu, HWND hwndActiveObject);HRESULT (*RemoveMenus)(IOleInPlaceFrame *This, HMENU hmenuShared);HRESULT (*SetStatusText)(IOleInPlaceFrame *This, LPCSTR lpszStatusText);HRESULT (*EnableModeless)(IOleInPlaceFrame *This, BOOL fEnable);HRESULT (*TranslateAccelerator)(IOleInPlaceFrame *This, LPMSG lpmsg, WORD wID);};
struct tagOLEUIINSERTOBJECT {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;CLSID clsid;LPSTR lpszFile;UINT cchFile;UINT cClsidExclude;LPCLSID lpClsidExclude;IID iid;DWORD oleRender;LPFORMATETC lpFormatEtc;LPOLECLIENTSITE lpIOleClientSite;LPSTORAGE lpIStorage;LPVOID *ppvObj;SCODE sc;HGLOBAL hMetaPict;};
typedef MIDICALLBACK *LPMIDICALLBACK;
typedef WAVECALLBACK *LPWAVECALLBACK;



#endif
