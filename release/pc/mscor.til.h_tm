enum $09EE49AD0A975A087641D8B4D0DF4D82 {nlfNone = 0x0,nlfLastError = 0x1,nlfNoMangle = 0x2,};
union $2AFDC37A845A031E02844C4CE6A53ED2 {USHORT highAdj;};
struct $2BF33A8332CBFCE1BB184E853130170B {ULONG32 oldOffset;ULONG32 newOffset;};
struct $2E2849121B5A1F88FBA23A7F4BCDE329 {BYTE m_linkType;BYTE m_flags;mdMemberRef m_entryPoint;};
struct $39C2C374778D70AF45AB155893CBA35F {__int16 Major;__int16 Minor;__int16 Sub;__int16 Build;};
struct $78243EDB552F1A28DD94BB546CFE6E3D {unsigned int SigAlgID;unsigned int HashAlgID;ULONG cbPublicKey;BYTE PublicKey[1];};
enum $91AF93DF9160876FBA1CDBF34D6E05E8 {srRelocAbsolute = 0x0,srRelocHigh = 0x1,srRelocLow = 0x2,srRelocHighLow = 0x3,srRelocHighAdj = 0x4,srRelocMapToken = 0x5,srRelocRelative = 0x6,srRelocFilePos = 0x7,srRelocPtr = 0x8000,srRelocAbsolutePtr = 0x8000,srRelocHighLowPtr = 0x8003,srRelocRelativePtr = 0x8006,};
enum $A4752B4F8E92EE6FE72360C4B48BE096 {ValidatorModuleTypeInvalid = 0x0,ValidatorModuleTypeMin = 0x1,ValidatorModuleTypePE = 0x1,ValidatorModuleTypeObj = 0x2,ValidatorModuleTypeEnc = 0x3,ValidatorModuleTypeIncr = 0x4,ValidatorModuleTypeMax = 0x4,};
enum $BC5ECE20E40C10210AFE8CEDCDB6CC1A {regNoCopy = 0x1,regConfig = 0x2,regHasRefs = 0x4,};
enum $C435AAD07FF115A04870B39292383D43 {CORMODULE_MATCH = 0x0,CORMODULE_NEW = 0x1,};
enum $CAF393BCBC2CA6886BFCF5DF33463490 {DESCR_GROUP_METHODDEF = 0x0,DESCR_GROUP_METHODIMPL = 0x1,};
enum $CD0F2999C8B85746BE1E263AC63D16E1 {nltNone = 0x1,nltAnsi = 0x2,nltUnicode = 0x3,nltAuto = 0x4,nltOle = 0x5,};
struct $D7875A75BADF243094067BEA569A4E3F {DWORD dwOSPlatformId;DWORD dwOSMajorVersion;DWORD dwOSMinorVersion;};
struct $E6CD71273B3F71C282D8510EF52343BB {USHORT usMajorVersion;USHORT usMinorVersion;USHORT usRevisionNumber;USHORT usBuildNumber;LPWSTR szLocale;ULONG cbLocale;DWORD *rProcessor;ULONG ulProcessor;OSINFO *rOS;ULONG ulOS;LPWSTR szConfiguration;ULONG cbConfiguration;};
enum $EB5B9CCC078DEABABAED69F2F8ADE8FA {sdNone = 0x0,sdReadOnly = 0x40000040,sdReadWrite = 0xC0000040,sdExecute = 0x60000020,};
typedef struct $E6CD71273B3F71C282D8510EF52343BB ASSEMBLYMETADATA;
typedef UINT_PTR AppDomainID;
typedef UINT_PTR AssemblyID;
typedef unsigned __int64 CLASSVERSION;
typedef enum tagCOINITCOR COINITICOR;
typedef enum tagCOINITEE COINITIEE;
typedef ULONG64 CORDB_ADDRESS;
typedef ULONG64 CORDB_REGISTER;
struct CORSvc;
struct COR_DEBUG_IL_TO_NATIVE_MAP {ULONG32 ilOffset;ULONG32 nativeStartOffset;ULONG32 nativeEndOffset;};
struct COR_DEBUG_STEP_RANGE {ULONG32 startOffset;ULONG32 endOffset;};
struct COR_FIELD_OFFSET {mdFieldDef ridOfField;ULONG ulOffset;};
typedef struct _COR_GC_STATS COR_GC_STATS;
typedef enum __MIDL___MIDL_itf_gchost_0000_0001 COR_GC_STAT_TYPES;
typedef struct _COR_GC_THREAD_STATS COR_GC_THREAD_STATS;
typedef enum __MIDL___MIDL_itf_gchost_0000_0002 COR_GC_THREAD_STATS_TYPES;
typedef struct $2BF33A8332CBFCE1BB184E853130170B COR_IL_MAP;
struct COR_IPMAP_ENTRY {ULONG MethodRVA;ULONG MIHRVA;};
typedef struct $2E2849121B5A1F88FBA23A7F4BCDE329 COR_NATIVE_LINK;
typedef enum __MIDL___MIDL_itf_corprof_0000_0003 COR_PRF_JIT_CACHE;
typedef enum __MIDL___MIDL_itf_corprof_0000_0002 COR_PRF_MISC;
typedef enum __MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR;
typedef enum __MIDL___MIDL_itf_corprof_0000_0005 COR_PRF_SUSPEND_REASON;
typedef enum __MIDL___MIDL_itf_corprof_0000_0004 COR_PRF_TRANSITION_REASON;
typedef enum __MIDL___MIDL_itf_corpub_0000_0001 COR_PUB_ENUMPROCESS;
struct COR_SECATTR {mdMemberRef tkCtor;const void *pCustomValue;ULONG cbCustomValue;};
typedef unsigned __int8 COR_SIGNATURE;
typedef enum tagCOUNINITEE COUNINITIEE;
typedef GUID CVID;
typedef struct $39C2C374778D70AF45AB155893CBA35F CVStruct;
typedef enum $EB5B9CCC078DEABABAED69F2F8ADE8FA CeeSectionAttr;
typedef union $2AFDC37A845A031E02844C4CE6A53ED2 CeeSectionRelocExtra;
typedef enum $91AF93DF9160876FBA1CDBF34D6E05E8 CeeSectionRelocType;
typedef UINT_PTR ClassID;
struct ComCallUnmarshal;
typedef UINT_PTR ContextID;
enum CorArgType {IMAGE_CEE_CS_END = 0x0,IMAGE_CEE_CS_VOID = 0x1,IMAGE_CEE_CS_I4 = 0x2,IMAGE_CEE_CS_I8 = 0x3,IMAGE_CEE_CS_R4 = 0x4,IMAGE_CEE_CS_R8 = 0x5,IMAGE_CEE_CS_PTR = 0x6,IMAGE_CEE_CS_OBJECT = 0x7,IMAGE_CEE_CS_STRUCT4 = 0x8,IMAGE_CEE_CS_STRUCT32 = 0x9,IMAGE_CEE_CS_BYVALUE = 0xA,};
enum CorAssemblyFlags {afImplicitComTypes = 0x1,afImplicitResources = 0x2,afCompatibilityMask = 0x70,afSideBySideCompatible = 0x0,afNonSideBySideAppDomain = 0x10,afNonSideBySideProcess = 0x20,afNonSideBySideMachine = 0x30,};
enum CorAssemblyRefFlags {arFullOriginator = 0x1,};
enum CorAttributeTargets {catAssembly = 0x1,catModule = 0x2,catClass = 0x4,catStruct = 0x8,catEnum = 0x10,catConstructor = 0x20,catMethod = 0x40,catProperty = 0x80,catField = 0x100,catEvent = 0x200,catInterface = 0x400,catParameter = 0x800,catDelegate = 0x1000,catAll = 0x1FFF,catClassMembers = 0x17FC,};
enum CorBaseType {mdtBaseType_BOOLEAN = 0x72000002,mdtBaseType_CHAR = 0x72000003,mdtBaseType_I1 = 0x72000004,mdtBaseType_U1 = 0x72000005,mdtBaseType_I2 = 0x72000006,mdtBaseType_U2 = 0x72000007,mdtBaseType_I4 = 0x72000008,mdtBaseType_U4 = 0x72000009,mdtBaseType_I8 = 0x7200000A,mdtBaseType_U8 = 0x7200000B,mdtBaseType_R4 = 0x7200000C,mdtBaseType_R8 = 0x7200000D,mdtBaseType_STRING = 0x7200000E,mdtBaseType_I = 0x72000018,mdtBaseType_U = 0x72000019,mdtBaseType_R = 0x7200001A,};
enum CorCallingConvention {IMAGE_CEE_CS_CALLCONV_DEFAULT = 0x0,IMAGE_CEE_CS_CALLCONV_VARARG = 0x5,IMAGE_CEE_CS_CALLCONV_FIELD = 0x6,IMAGE_CEE_CS_CALLCONV_LOCAL_SIG = 0x7,IMAGE_CEE_CS_CALLCONV_PROPERTY = 0x8,IMAGE_CEE_CS_CALLCONV_UNMGD = 0x9,IMAGE_CEE_CS_CALLCONV_MAX = 0x10,IMAGE_CEE_CS_CALLCONV_MASK = 0xF,IMAGE_CEE_CS_CALLCONV_HASTHIS = 0x20,IMAGE_CEE_CS_CALLCONV_EXPLICITTHIS = 0x40,};
enum CorCheckDuplicatesFor {MDDupAll = 0xFFFFFFFF,MDDupENC = 0xFFFFFFFF,MDNoDupChecks = 0x0,MDDupTypeDef = 0x1,MDDupInterfaceImpl = 0x2,MDDupMethodDef = 0x4,MDDupTypeRef = 0x8,MDDupMemberRef = 0x10,MDDupCustomValue = 0x20,MDDupCustomAttribute = 0x20,MDDupParamDef = 0x40,MDDupPermission = 0x80,MDDupProperty = 0x100,MDDupEvent = 0x200,MDDupFieldDef = 0x400,MDDupSignature = 0x800,MDDupModuleRef = 0x1000,MDDupTypeSpec = 0x2000,MDDupImplMap = 0x4000,MDDupAssemblyRef = 0x8000,MDDupFile = 0x10000,MDDupComType = 0x20000,MDDupManifestResource = 0x40000,MDDupExecutionLocation = 0x80000,MDDupAssembly = 0x10000000,MDDupSourceFile = 0x1000000,MDDupBlock = 0x2000000,MDDupLocalVarScope = 0x4000000,MDDupLocalVar = 0x8000000,MDDupDefault = 0x2818,};
struct CorDebug;
enum CorDebugChainReason {CHAIN_NONE = 0x0,CHAIN_CLASS_INIT = 0x1,CHAIN_EXCEPTION_FILTER = 0x2,CHAIN_SECURITY = 0x4,CHAIN_CONTEXT_POLICY = 0x8,CHAIN_INTERCEPTION = 0x10,CHAIN_PROCESS_START = 0x20,CHAIN_THREAD_START = 0x40,CHAIN_ENTER_MANAGED = 0x80,CHAIN_ENTER_UNMANAGED = 0x100,CHAIN_DEBUGGER_EVAL = 0x200,CHAIN_CONTEXT_SWITCH = 0x400,CHAIN_FUNC_EVAL = 0x800,};
enum CorDebugCreateProcessFlags {DEBUG_NO_SPECIAL_OPTIONS = 0x0,DEBUG_ENABLE_EDIT_AND_CONTINUE = 0x1,};
enum CorDebugIlToNativeMappingTypes {NO_MAPPING = 0xFFFFFFFF,PROLOG = 0xFFFFFFFE,EPILOG = 0xFFFFFFFD,};
enum CorDebugIntercept {INTERCEPT_NONE = 0x0,INTERCEPT_CLASS_INIT = 0x1,INTERCEPT_EXCEPTION_FILTER = 0x2,INTERCEPT_SECURITY = 0x4,INTERCEPT_CONTEXT_POLICY = 0x8,INTERCEPT_INTERCEPTION = 0x10,INTERCEPT_ALL = 0xFFFF,};
enum CorDebugMappingResult {MAPPING_PROLOG = 0x1,MAPPING_EPILOG = 0x2,MAPPING_NO_INFO = 0x4,MAPPING_UNMAPPED_ADDRESS = 0x8,MAPPING_EXACT = 0x10,MAPPING_APPROXIMATE = 0x20,};
enum CorDebugRegister {REGISTER_INSTRUCTION_POINTER = 0x0,REGISTER_STACK_POINTER = 0x1,REGISTER_FRAME_POINTER = 0x2,REGISTER_X86_EIP = 0x0,REGISTER_X86_ESP = 0x1,REGISTER_X86_EBP = 0x2,REGISTER_X86_EAX = 0x3,REGISTER_X86_ECX = 0x4,REGISTER_X86_EDX = 0x5,REGISTER_X86_EBX = 0x6,REGISTER_X86_ESI = 0x7,REGISTER_X86_EDI = 0x8,REGISTER_X86_FPSTACK_0 = 0x9,REGISTER_X86_FPSTACK_1 = 0xA,REGISTER_X86_FPSTACK_2 = 0xB,REGISTER_X86_FPSTACK_3 = 0xC,REGISTER_X86_FPSTACK_4 = 0xD,REGISTER_X86_FPSTACK_5 = 0xE,REGISTER_X86_FPSTACK_6 = 0xF,REGISTER_X86_FPSTACK_7 = 0x10,};
enum CorDebugStepReason {STEP_NORMAL = 0x0,STEP_RETURN = 0x1,STEP_CALL = 0x2,STEP_EXCEPTION_FILTER = 0x3,STEP_EXCEPTION_HANDLE = 0x4,STEP_INTERCEPT = 0x5,STEP_EXIT = 0x6,};
enum CorDebugThreadState {THREAD_RUN = 0x0,THREAD_SUSPEND = 0x1,};
enum CorDebugUnmappedStop {STOP_NONE = 0x0,STOP_PROLOG = 0x1,STOP_EPILOG = 0x2,STOP_NO_MAPPING_INFO = 0x4,STOP_OTHER_UNMAPPED = 0x8,STOP_UNMANAGED = 0x10,STOP_ALL = 0xFFFF,};
enum CorDebugUserState {USER_STOP_REQUESTED = 0x1,USER_SUSPEND_REQUESTED = 0x2,USER_BACKGROUND = 0x4,USER_UNSTARTED = 0x8,USER_STOPPED = 0x10,USER_WAIT_SLEEP_JOIN = 0x20,USER_SUSPENDED = 0x40,};
enum CorDeclSecurity {dclActionMask = 0xF,dclActionNil = 0x0,dclRequest = 0x1,dclDemand = 0x2,dclAssert = 0x3,dclDeny = 0x4,dclPermitOnly = 0x5,dclLinktimeCheck = 0x6,dclInheritanceCheck = 0x7,dclRequestMinimum = 0x8,dclRequestOptional = 0x9,dclRequestRefuse = 0xA,dclPrejitGrant = 0xB,dclPrejitDenied = 0xC,dclNonCasDemand = 0xD,dclNonCasLinkDemand = 0xE,dclNonCasInheritance = 0xF,dclMaximumValue = 0xF,};
enum CorElementType {ELEMENT_TYPE_END = 0x0,ELEMENT_TYPE_VOID = 0x1,ELEMENT_TYPE_BOOLEAN = 0x2,ELEMENT_TYPE_CHAR = 0x3,ELEMENT_TYPE_I1 = 0x4,ELEMENT_TYPE_U1 = 0x5,ELEMENT_TYPE_I2 = 0x6,ELEMENT_TYPE_U2 = 0x7,ELEMENT_TYPE_I4 = 0x8,ELEMENT_TYPE_U4 = 0x9,ELEMENT_TYPE_I8 = 0xA,ELEMENT_TYPE_U8 = 0xB,ELEMENT_TYPE_R4 = 0xC,ELEMENT_TYPE_R8 = 0xD,ELEMENT_TYPE_STRING = 0xE,ELEMENT_TYPE_PTR = 0xF,ELEMENT_TYPE_BYREF = 0x10,ELEMENT_TYPE_VALUETYPE = 0x11,ELEMENT_TYPE_VALUECLASS = 0x11,ELEMENT_TYPE_CLASS = 0x12,ELEMENT_TYPE_VAR = 0x13,ELEMENT_TYPE_ARRAY = 0x14,ELEMENT_TYPE_COPYCTOR = 0x15,ELEMENT_TYPE_TYPEDBYREF = 0x16,ELEMENT_TYPE_VALUEARRAY = 0x17,ELEMENT_TYPE_I = 0x18,ELEMENT_TYPE_U = 0x19,ELEMENT_TYPE_R = 0x1A,ELEMENT_TYPE_FNPTR = 0x1B,ELEMENT_TYPE_OBJECT = 0x1C,ELEMENT_TYPE_SZARRAY = 0x1D,ELEMENT_TYPE_GENERICARRAY = 0x1E,ELEMENT_TYPE_CMOD_REQD = 0x1F,ELEMENT_TYPE_CMOD_OPT = 0x20,ELEMENT_TYPE_MAX = 0x21,ELEMENT_TYPE_NAME = 0x23,ELEMENT_TYPE_MODIFIER = 0x40,ELEMENT_TYPE_SENTINEL = 0x41,ELEMENT_TYPE_PINNED = 0x45,};
enum CorErrorIfEmitOutOfOrder {MDErrorOutOfOrderDefault = 0x0,MDErrorOutOfOrderNone = 0x0,MDErrorOutOfOrderAll = 0xFFFFFFFF,MDMethodOutOfOrder = 0x1,MDFieldOutOfOrder = 0x2,MDParamOutOfOrder = 0x4,MDPropertyOutOfOrder = 0x8,MDEventOutOfOrder = 0x10,};
enum CorEventAttr {evSpecialName = 0x200,evReservedMask = 0x400,evRTSpecialName = 0x400,};
enum CorExceptionFlag {COR_ILEXCEPTION_CLAUSE_NONE = 0x0,COR_ILEXCEPTION_CLAUSE_OFFSETLEN = 0x0,COR_ILEXCEPTION_CLAUSE_DEPRECATED = 0x0,COR_ILEXCEPTION_CLAUSE_FILTER = 0x1,COR_ILEXCEPTION_CLAUSE_FINALLY = 0x2,COR_ILEXCEPTION_CLAUSE_FAULT = 0x4,};
enum CorFieldAttr {fdFieldAccessMask = 0x7,fdPrivateScope = 0x0,fdPrivate = 0x1,fdFamANDAssem = 0x2,fdAssembly = 0x3,fdFamily = 0x4,fdFamORAssem = 0x5,fdPublic = 0x6,fdStatic = 0x10,fdInitOnly = 0x20,fdLiteral = 0x40,fdNotSerialized = 0x80,fdSpecialName = 0x200,fdPinvokeImpl = 0x2000,fdReservedMask = 0xD500,fdRTSpecialName = 0x400,fdHasFieldMarshal = 0x1000,fdHasSecurity = 0x4000,fdHasDefault = 0x8000,fdHasFieldRVA = 0x100,};
enum CorFileFlags {ffContainsMetaData = 0x0,ffContainsNoMetaData = 0x1,ffWriteable = 0x2,};
enum CorILMethodFlags {CorILMethod_InitLocals = 0x10,CorILMethod_MoreSects = 0x8,CorILMethod_CompressedIL = 0x40,CorILMethod_FormatShift = 0x3,CorILMethod_FormatMask = 0x7,CorILMethod_TinyFormat = 0x2,CorILMethod_SmallFormat = 0x0,CorILMethod_FatFormat = 0x3,CorILMethod_TinyFormat1 = 0x6,};
enum CorILMethodSect {CorILMethod_Sect_Reserved = 0x0,CorILMethod_Sect_EHTable = 0x1,CorILMethod_Sect_OptILTable = 0x2,CorILMethod_Sect_KindMask = 0x3F,CorILMethod_Sect_FatFormat = 0x40,CorILMethod_Sect_MoreSects = 0x80,};
enum CorImportOptions {MDImportOptionDefault = 0x0,MDImportOptionAll = 0xFFFFFFFF,MDImportOptionAllTypeDefs = 0x1,MDImportOptionAllMethodDefs = 0x2,MDImportOptionAllFieldDefs = 0x4,MDImportOptionAllProperties = 0x8,MDImportOptionAllEvents = 0x10,MDImportOptionAllCustomValues = 0x20,MDImportOptionAllCustomAttributes = 0x20,MDImportOptionAllComTypes = 0x40,};
enum CorManifestResourceFlags {mrVisibilityMask = 0x7,mrPublic = 0x1,mrPrivate = 0x2,};
enum CorMethodAttr {mdMemberAccessMask = 0x7,mdPrivateScope = 0x0,mdPrivate = 0x1,mdFamANDAssem = 0x2,mdAssem = 0x3,mdFamily = 0x4,mdFamORAssem = 0x5,mdPublic = 0x6,mdStatic = 0x10,mdFinal = 0x20,mdVirtual = 0x40,mdHideBySig = 0x80,mdVtableLayoutMask = 0x100,mdReuseSlot = 0x0,mdNewSlot = 0x100,mdAbstract = 0x400,mdSpecialName = 0x800,mdPinvokeImpl = 0x2000,mdUnmanagedExport = 0x8,mdReservedMask = 0xD000,mdRTSpecialName = 0x1000,mdHasSecurity = 0x4000,mdRequireSecObject = 0x8000,};
enum CorMethodImpl {miCodeTypeMask = 0x3,miIL = 0x0,miNative = 0x1,miOPTIL = 0x2,miRuntime = 0x3,miManagedMask = 0x4,miUnmanaged = 0x4,miManaged = 0x0,miForwardRef = 0x10,miOLE = 0x80,miInternalCall = 0x1000,miSynchronized = 0x20,miNoInlining = 0x8,miMaxMethodImplVal = 0xFFFF,};
enum CorMethodSemanticsAttr {msSetter = 0x1,msGetter = 0x2,msOther = 0x4,msAddOn = 0x8,msRemoveOn = 0x10,msFire = 0x20,};
typedef enum $09EE49AD0A975A087641D8B4D0DF4D82 CorNativeLinkFlags;
typedef enum $CD0F2999C8B85746BE1E263AC63D16E1 CorNativeLinkType;
enum CorNativeType {NATIVE_TYPE_END = 0x0,NATIVE_TYPE_VOID = 0x1,NATIVE_TYPE_BOOLEAN = 0x2,NATIVE_TYPE_I1 = 0x3,NATIVE_TYPE_U1 = 0x4,NATIVE_TYPE_I2 = 0x5,NATIVE_TYPE_U2 = 0x6,NATIVE_TYPE_I4 = 0x7,NATIVE_TYPE_U4 = 0x8,NATIVE_TYPE_I8 = 0x9,NATIVE_TYPE_U8 = 0xA,NATIVE_TYPE_R4 = 0xB,NATIVE_TYPE_R8 = 0xC,NATIVE_TYPE_SYSCHAR = 0xD,NATIVE_TYPE_VARIANT = 0xE,NATIVE_TYPE_CURRENCY = 0xF,NATIVE_TYPE_PTR = 0x10,NATIVE_TYPE_DECIMAL = 0x11,NATIVE_TYPE_DATE = 0x12,NATIVE_TYPE_BSTR = 0x13,NATIVE_TYPE_LPSTR = 0x14,NATIVE_TYPE_LPWSTR = 0x15,NATIVE_TYPE_LPTSTR = 0x16,NATIVE_TYPE_FIXEDSYSSTRING = 0x17,NATIVE_TYPE_OBJECTREF = 0x18,NATIVE_TYPE_IUNKNOWN = 0x19,NATIVE_TYPE_IDISPATCH = 0x1A,NATIVE_TYPE_STRUCT = 0x1B,NATIVE_TYPE_INTF = 0x1C,NATIVE_TYPE_SAFEARRAY = 0x1D,NATIVE_TYPE_FIXEDARRAY = 0x1E,NATIVE_TYPE_INT = 0x1F,NATIVE_TYPE_UINT = 0x20,NATIVE_TYPE_NESTEDSTRUCT = 0x21,NATIVE_TYPE_BYVALSTR = 0x22,NATIVE_TYPE_ANSIBSTR = 0x23,NATIVE_TYPE_TBSTR = 0x24,NATIVE_TYPE_VARIANTBOOL = 0x25,NATIVE_TYPE_FUNC = 0x26,NATIVE_TYPE_LPVOID = 0x27,NATIVE_TYPE_ASANY = 0x28,NATIVE_TYPE_R = 0x29,NATIVE_TYPE_ARRAY = 0x2A,NATIVE_TYPE_LPSTRUCT = 0x2B,NATIVE_TYPE_CUSTOMMARSHALER = 0x2C,NATIVE_TYPE_ERROR = 0x2D,NATIVE_TYPE_MAX = 0x50,};
enum CorNotificationForTokenMovement {MDNotifyDefault = 0xF,MDNotifyAll = 0xFFFFFFFF,MDNotifyNone = 0x0,MDNotifyMethodDef = 0x1,MDNotifyMemberRef = 0x2,MDNotifyFieldDef = 0x4,MDNotifyTypeRef = 0x8,MDNotifyTypeDef = 0x10,MDNotifyParamDef = 0x20,MDNotifyInterfaceImpl = 0x40,MDNotifyProperty = 0x80,MDNotifyEvent = 0x100,MDNotifySignature = 0x200,MDNotifyTypeSpec = 0x400,MDNotifyCustomValue = 0x800,MDNotifyCustomAttribute = 0x1000,MDNotifySecurityValue = 0x2000,MDNotifyPermission = 0x4000,MDNotifyModuleRef = 0x8000,MDNotifyNameSpace = 0x10000,MDNotifyDebugTokens = 0x800000,MDNotifyAssemblyRef = 0x1000000,MDNotifyFile = 0x2000000,MDNotifyComType = 0x4000000,MDNotifyResource = 0x8000000,MDNotifyExecutionLocation = 0x10000000,};
enum CorOpenFlags {ofRead = 0x0,ofWrite = 0x1,ofCopyMemory = 0x2,ofCacheImage = 0x4,ofNoTypeLib = 0x80,};
enum CorParamAttr {pdIn = 0x1,pdOut = 0x2,pdLcid = 0x4,pdRetval = 0x8,pdOptional = 0x10,pdReservedMask = 0xF000,pdHasDefault = 0x1000,pdHasFieldMarshal = 0x2000,pdReserved3 = 0x4000,pdReserved4 = 0x8000,};
enum CorPinvokeMap {pmNoMangle = 0x1,pmCharSetMask = 0x6,pmCharSetNotSpec = 0x0,pmCharSetAnsi = 0x2,pmCharSetUnicode = 0x4,pmCharSetAuto = 0x6,pmPinvokeOLE = 0x20,pmSupportsLastError = 0x40,pmCallConvMask = 0x700,pmCallConvWinapi = 0x100,pmCallConvCdecl = 0x200,pmCallConvStdcall = 0x300,pmCallConvThiscall = 0x400,pmCallConvFastcall = 0x500,};
enum CorPropertyAttr {prSpecialName = 0x200,prReservedMask = 0xF400,prRTSpecialName = 0x400,prHasDefault = 0x1000,prReserved2 = 0x2000,prReserved3 = 0x4000,prReserved4 = 0x8000,};
enum CorRefToDefCheck {MDRefToDefDefault = 0x3,MDRefToDefAll = 0xFFFFFFFF,MDRefToDefNone = 0x0,MDTypeRefToDef = 0x1,MDMemberRefToDef = 0x2,};
typedef enum $BC5ECE20E40C10210AFE8CEDCDB6CC1A CorRegFlags;
typedef CorTypeAttr CorRegTypeAttr;
struct CorRuntimeHost;
enum CorSaveSize {cssAccurate = 0x0,cssQuick = 0x1,cssDiscardTransientCAs = 0x2,};
enum CorSerializationType {SERIALIZATION_TYPE_BOOLEAN = 0x2,SERIALIZATION_TYPE_CHAR = 0x3,SERIALIZATION_TYPE_I1 = 0x4,SERIALIZATION_TYPE_U1 = 0x5,SERIALIZATION_TYPE_I2 = 0x6,SERIALIZATION_TYPE_U2 = 0x7,SERIALIZATION_TYPE_I4 = 0x8,SERIALIZATION_TYPE_U4 = 0x9,SERIALIZATION_TYPE_I8 = 0xA,SERIALIZATION_TYPE_U8 = 0xB,SERIALIZATION_TYPE_R4 = 0xC,SERIALIZATION_TYPE_R8 = 0xD,SERIALIZATION_TYPE_STRING = 0xE,SERIALIZATION_TYPE_SZARRAY = 0x1D,SERIALIZATION_TYPE_TYPE = 0x50,SERIALIZATION_TYPE_VARIANT = 0x51,SERIALIZATION_TYPE_FIELD = 0x53,SERIALIZATION_TYPE_PROPERTY = 0x54,SERIALIZATION_TYPE_ENUM = 0x55,};
enum CorSetENC {MDSetENCOn = 0x1,MDSetENCOff = 0x2,MDUpdateENC = 0x1,MDUpdateFull = 0x2,MDUpdateExtension = 0x3,MDUpdateIncremental = 0x4,MDUpdateMask = 0x7,MDUpdateDelta = 0x8,};
enum CorSymAddrKind {ADDR_IL_OFFSET = 0x1,ADDR_NATIVE_RVA = 0x2,ADDR_NATIVE_REGISTER = 0x3,ADDR_NATIVE_REGREL = 0x4,ADDR_NATIVE_OFFSET = 0x5,ADDR_NATIVE_REGREG = 0x6,ADDR_NATIVE_REGSTK = 0x7,ADDR_NATIVE_STKREG = 0x8,ADDR_BITFIELD = 0x9,};
struct CorSymBinder;
struct CorSymReader;
struct CorSymWriter;
enum CorThreadSafetyOptions {MDThreadSafetyDefault = 0x0,MDThreadSafetyOff = 0x0,MDThreadSafetyOn = 0x1,};
enum CorTokenType {mdtModule = 0x0,mdtTypeRef = 0x1000000,mdtTypeDef = 0x2000000,mdtFieldDef = 0x4000000,mdtMethodDef = 0x6000000,mdtParamDef = 0x8000000,mdtInterfaceImpl = 0x9000000,mdtMemberRef = 0xA000000,mdtCustomAttribute = 0xC000000,mdtCustomValue = 0xC000000,mdtPermission = 0xE000000,mdtSignature = 0x11000000,mdtEvent = 0x14000000,mdtProperty = 0x17000000,mdtModuleRef = 0x1A000000,mdtTypeSpec = 0x1B000000,mdtAssembly = 0x20000000,mdtAssemblyRef = 0x23000000,mdtFile = 0x26000000,mdtComType = 0x27000000,mdtManifestResource = 0x28000000,mdtExecutionLocation = 0x29000000,mdtSourceFile = 0x2A000000,mdtLocalVarScope = 0x2C000000,mdtLocalVar = 0x2D000000,mdtString = 0x70000000,mdtName = 0x71000000,mdtBaseType = 0x72000000,};
enum CorTypeAttr {tdVisibilityMask = 0x7,tdNotPublic = 0x0,tdPublic = 0x1,tdNestedPublic = 0x2,tdNestedPrivate = 0x3,tdNestedFamily = 0x4,tdNestedAssembly = 0x5,tdNestedFamANDAssem = 0x6,tdNestedFamORAssem = 0x7,tdLayoutMask = 0x18,tdAutoLayout = 0x0,tdLayoutSequential = 0x8,tdExplicitLayout = 0x10,tdClassSemanticsMask = 0x60,tdClass = 0x0,tdInterface = 0x20,tdValueType = 0x40,tdUnmanagedValueType = 0x60,tdNotInGCHeapValueType = 0x60,tdAbstract = 0x80,tdSealed = 0x100,tdEnum = 0x200,tdSpecialName = 0x400,tdImport = 0x1000,tdSerializable = 0x2000,tdStringFormatMask = 0x30000,tdAnsiClass = 0x0,tdUnicodeClass = 0x10000,tdAutoClass = 0x20000,tdLateInit = 0x80000,tdReservedMask = 0x40800,tdRTSpecialName = 0x800,tdHasSecurity = 0x40000,};
enum CorUnmanagedCallingConvention {IMAGE_CEE_UNMANAGED_CALLCONV_C = 0x1,IMAGE_CEE_UNMANAGED_CALLCONV_STDCALL = 0x2,IMAGE_CEE_UNMANAGED_CALLCONV_THISCALL = 0x3,IMAGE_CEE_UNMANAGED_CALLCONV_FASTCALL = 0x4,IMAGE_CEE_CS_CALLCONV_C = 0x1,IMAGE_CEE_CS_CALLCONV_STDCALL = 0x2,IMAGE_CEE_CS_CALLCONV_THISCALL = 0x3,IMAGE_CEE_CS_CALLCONV_FASTCALL = 0x4,};
typedef enum $A4752B4F8E92EE6FE72360C4B48BE096 CorValidatorModuleType;
struct CorpubPublish;
typedef void FunctionEnter(FunctionID funcID);
typedef UINT_PTR FunctionID;
typedef UINT_PTR __stdcall FunctionIDMapper(FunctionID funcId, BOOL *pbHookFunction);
typedef void FunctionLeave(FunctionID funcID);
typedef void FunctionTailcall(FunctionID funcID);
typedef void *HCEESECTION;
typedef void *HCORENUM;
typedef void *HDOMAINENUM;
typedef void *HPROCESS;
typedef void *HTHREAD;
struct IAppDomainBinding {struct IAppDomainBindingVtbl *lpVtbl;};
struct IAppDomainBindingVtbl {HRESULT (__stdcall *QueryInterface)(IAppDomainBinding *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IAppDomainBinding *This);ULONG (__stdcall *Release)(IAppDomainBinding *This);HRESULT (__stdcall *OnAppDomain)(IAppDomainBinding *This, IUnknown *pAppdomain);};
struct ICORSvcDbgInfo {struct ICORSvcDbgInfoVtbl *lpVtbl;};
struct ICORSvcDbgInfoVtbl {HRESULT (__stdcall *QueryInterface)(ICORSvcDbgInfo *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICORSvcDbgInfo *This);ULONG (__stdcall *Release)(ICORSvcDbgInfo *This);HRESULT (__stdcall *RequestRuntimeStartupNotification)(ICORSvcDbgInfo *This, UINT_PTR procId, ICORSvcDbgNotify *pINotify);HRESULT (__stdcall *CancelRuntimeStartupNotification)(ICORSvcDbgInfo *This, UINT_PTR procId, ICORSvcDbgNotify *pINotify);};
struct ICORSvcDbgNotify {struct ICORSvcDbgNotifyVtbl *lpVtbl;};
struct ICORSvcDbgNotifyVtbl {HRESULT (__stdcall *QueryInterface)(ICORSvcDbgNotify *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICORSvcDbgNotify *This);ULONG (__stdcall *Release)(ICORSvcDbgNotify *This);HRESULT (__stdcall *NotifyRuntimeStartup)(ICORSvcDbgNotify *This, UINT_PTR procId);HRESULT (__stdcall *NotifyServiceStopped)(ICORSvcDbgNotify *This);};
struct ICatalogServices {struct ICatalogServicesVtbl *lpVtbl;};
struct ICatalogServicesVtbl {HRESULT (__stdcall *QueryInterface)(ICatalogServices *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICatalogServices *This);ULONG (__stdcall *Release)(ICatalogServices *This);HRESULT (__stdcall *Autodone)(ICatalogServices *This);HRESULT (__stdcall *NotAutodone)(ICatalogServices *This);};
struct ICeeGen {struct ICeeGenVtbl *lpVtbl;};
struct ICeeGenVtbl {HRESULT (__stdcall *EmitString)(LPWSTR lpString, ULONG *RVA);HRESULT (__stdcall *GetString)(ULONG RVA, LPWSTR *lpString);HRESULT (__stdcall *AllocateMethodBuffer)(ULONG cchBuffer, UCHAR **lpBuffer, ULONG *RVA);HRESULT (__stdcall *GetMethodBuffer)(ULONG RVA, UCHAR **lpBuffer);HRESULT (__stdcall *GetIMapTokenIface)(IUnknown **pIMapToken);HRESULT (__stdcall *GenerateCeeFile)();HRESULT (__stdcall *GetIlSection)(HCEESECTION *section);HRESULT (__stdcall *GetStringSection)(HCEESECTION *section);HRESULT (__stdcall *AddSectionReloc)(HCEESECTION section, ULONG offset, HCEESECTION relativeTo, CeeSectionRelocType relocType);HRESULT (__stdcall *GetSectionCreate)(const char *name, DWORD flags, HCEESECTION *section);HRESULT (__stdcall *GetSectionDataLen)(HCEESECTION section, ULONG *dataLen);HRESULT (__stdcall *GetSectionBlock)(HCEESECTION section, ULONG len, ULONG align, void **ppBytes);HRESULT (__stdcall *TruncateSection)(HCEESECTION section, ULONG len);HRESULT (__stdcall *GenerateCeeMemoryImage)(void **ppImage);HRESULT (__stdcall *ComputePointer)(HCEESECTION section, ULONG RVA, UCHAR **lpBuffer);};
struct ICorConfiguration {struct ICorConfigurationVtbl *lpVtbl;};
struct ICorConfigurationVtbl {HRESULT (__stdcall *QueryInterface)(ICorConfiguration *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorConfiguration *This);ULONG (__stdcall *Release)(ICorConfiguration *This);HRESULT (__stdcall *SetAppDomainLoadEvent)(ICorConfiguration *This, IAppDomainBinding *pAppStartEvent);HRESULT (__stdcall *SetGCThreadControl)(ICorConfiguration *This, IGCThreadControl *pGCThreadControl);HRESULT (__stdcall *SetGCHostControl)(ICorConfiguration *This, IGCHostControl *pGCHostControl);HRESULT (__stdcall *SetDebuggerThreadControl)(ICorConfiguration *This, IDebuggerThreadControl *pDebuggerThreadControl);HRESULT (__stdcall *AddDebuggerSpecialThread)(ICorConfiguration *This, DWORD dwSpecialThreadId);};
struct ICorDebug {struct ICorDebugVtbl *lpVtbl;};
struct ICorDebugAppDomain {struct ICorDebugAppDomainVtbl *lpVtbl;};
struct ICorDebugAppDomainEnum {struct ICorDebugAppDomainEnumVtbl *lpVtbl;};
struct ICorDebugAppDomainEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugAppDomainEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugAppDomainEnum *This);ULONG (__stdcall *Release)(ICorDebugAppDomainEnum *This);HRESULT (__stdcall *Skip)(ICorDebugAppDomainEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugAppDomainEnum *This);HRESULT (__stdcall *Clone)(ICorDebugAppDomainEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugAppDomainEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugAppDomainEnum *This, ULONG celt, ICorDebugAppDomain *values[], ULONG *pceltFetched);};
struct ICorDebugAppDomainVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugAppDomain *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugAppDomain *This);ULONG (__stdcall *Release)(ICorDebugAppDomain *This);HRESULT (__stdcall *Stop)(ICorDebugAppDomain *This, DWORD dwTimeout);HRESULT (__stdcall *Continue)(ICorDebugAppDomain *This, BOOL fIsOutOfBand);HRESULT (__stdcall *IsRunning)(ICorDebugAppDomain *This, BOOL *pbRunning);HRESULT (__stdcall *HasQueuedCallbacks)(ICorDebugAppDomain *This, ICorDebugThread *pThread, BOOL *pbQueued);HRESULT (__stdcall *EnumerateThreads)(ICorDebugAppDomain *This, ICorDebugThreadEnum **ppThreads);HRESULT (__stdcall *SetAllThreadsDebugState)(ICorDebugAppDomain *This, CorDebugThreadState state, ICorDebugThread *pExceptThisThread);HRESULT (__stdcall *Detach)(ICorDebugAppDomain *This);HRESULT (__stdcall *Terminate)(ICorDebugAppDomain *This, UINT exitCode);HRESULT (__stdcall *CanCommitChanges)(ICorDebugAppDomain *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);HRESULT (__stdcall *CommitChanges)(ICorDebugAppDomain *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);HRESULT (__stdcall *GetProcess)(ICorDebugAppDomain *This, ICorDebugProcess **ppProcess);HRESULT (__stdcall *EnumerateAssemblies)(ICorDebugAppDomain *This, ICorDebugAssemblyEnum **ppAssemblies);HRESULT (__stdcall *GetModuleFromMetaDataInterface)(ICorDebugAppDomain *This, IUnknown *pIMetaData, ICorDebugModule **ppModule);HRESULT (__stdcall *EnumerateBreakpoints)(ICorDebugAppDomain *This, ICorDebugBreakpointEnum **ppBreakpoints);HRESULT (__stdcall *EnumerateSteppers)(ICorDebugAppDomain *This, ICorDebugStepperEnum **ppSteppers);HRESULT (__stdcall *IsAttached)(ICorDebugAppDomain *This, BOOL *pbAttached);HRESULT (__stdcall *GetName)(ICorDebugAppDomain *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);HRESULT (__stdcall *GetObjectA)(ICorDebugAppDomain *This, ICorDebugValue **ppObject);HRESULT (__stdcall *Attach)(ICorDebugAppDomain *This);HRESULT (__stdcall *GetID)(ICorDebugAppDomain *This, ULONG32 *pId);};
struct ICorDebugArrayValue {struct ICorDebugArrayValueVtbl *lpVtbl;};
struct ICorDebugArrayValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugArrayValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugArrayValue *This);ULONG (__stdcall *Release)(ICorDebugArrayValue *This);HRESULT (__stdcall *GetType)(ICorDebugArrayValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugArrayValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugArrayValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugArrayValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *IsValid)(ICorDebugArrayValue *This, BOOL *pbValid);HRESULT (__stdcall *CreateRelocBreakpoint)(ICorDebugArrayValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetElementType)(ICorDebugArrayValue *This, CorElementType *pType);HRESULT (__stdcall *GetRank)(ICorDebugArrayValue *This, ULONG32 *pnRank);HRESULT (__stdcall *GetCount)(ICorDebugArrayValue *This, ULONG32 *pnCount);HRESULT (__stdcall *GetDimensions)(ICorDebugArrayValue *This, ULONG32 cdim, ULONG32 dims[]);HRESULT (__stdcall *HasBaseIndicies)(ICorDebugArrayValue *This, BOOL *pbHasBaseIndicies);HRESULT (__stdcall *GetBaseIndicies)(ICorDebugArrayValue *This, ULONG32 cdim, ULONG32 indicies[]);HRESULT (__stdcall *GetElement)(ICorDebugArrayValue *This, ULONG32 cdim, ULONG32 indices[], ICorDebugValue **ppValue);HRESULT (__stdcall *GetElementAtPosition)(ICorDebugArrayValue *This, ULONG32 nPosition, ICorDebugValue **ppValue);};
struct ICorDebugAssembly {struct ICorDebugAssemblyVtbl *lpVtbl;};
struct ICorDebugAssemblyEnum {struct ICorDebugAssemblyEnumVtbl *lpVtbl;};
struct ICorDebugAssemblyEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugAssemblyEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugAssemblyEnum *This);ULONG (__stdcall *Release)(ICorDebugAssemblyEnum *This);HRESULT (__stdcall *Skip)(ICorDebugAssemblyEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugAssemblyEnum *This);HRESULT (__stdcall *Clone)(ICorDebugAssemblyEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugAssemblyEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugAssemblyEnum *This, ULONG celt, ICorDebugAssembly *values[], ULONG *pceltFetched);};
struct ICorDebugAssemblyVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugAssembly *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugAssembly *This);ULONG (__stdcall *Release)(ICorDebugAssembly *This);HRESULT (__stdcall *GetProcess)(ICorDebugAssembly *This, ICorDebugProcess **ppProcess);HRESULT (__stdcall *GetAppDomain)(ICorDebugAssembly *This, ICorDebugAppDomain **ppAppDomain);HRESULT (__stdcall *EnumerateModules)(ICorDebugAssembly *This, ICorDebugModuleEnum **ppModules);HRESULT (__stdcall *GetCodeBase)(ICorDebugAssembly *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);HRESULT (__stdcall *GetName)(ICorDebugAssembly *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);};
struct ICorDebugBoxValue {struct ICorDebugBoxValueVtbl *lpVtbl;};
struct ICorDebugBoxValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugBoxValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugBoxValue *This);ULONG (__stdcall *Release)(ICorDebugBoxValue *This);HRESULT (__stdcall *GetType)(ICorDebugBoxValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugBoxValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugBoxValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugBoxValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *IsValid)(ICorDebugBoxValue *This, BOOL *pbValid);HRESULT (__stdcall *CreateRelocBreakpoint)(ICorDebugBoxValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetObjectA)(ICorDebugBoxValue *This, ICorDebugObjectValue **ppObject);};
struct ICorDebugBreakpoint {struct ICorDebugBreakpointVtbl *lpVtbl;};
struct ICorDebugBreakpointEnum {struct ICorDebugBreakpointEnumVtbl *lpVtbl;};
struct ICorDebugBreakpointEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugBreakpointEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugBreakpointEnum *This);ULONG (__stdcall *Release)(ICorDebugBreakpointEnum *This);HRESULT (__stdcall *Skip)(ICorDebugBreakpointEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugBreakpointEnum *This);HRESULT (__stdcall *Clone)(ICorDebugBreakpointEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugBreakpointEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugBreakpointEnum *This, ULONG celt, ICorDebugBreakpoint *breakpoints[], ULONG *pceltFetched);};
struct ICorDebugBreakpointVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugBreakpoint *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugBreakpoint *This);ULONG (__stdcall *Release)(ICorDebugBreakpoint *This);HRESULT (__stdcall *Activate)(ICorDebugBreakpoint *This, BOOL bActive);HRESULT (__stdcall *IsActive)(ICorDebugBreakpoint *This, BOOL *pbActive);};
struct ICorDebugChain {struct ICorDebugChainVtbl *lpVtbl;};
struct ICorDebugChainEnum {struct ICorDebugChainEnumVtbl *lpVtbl;};
struct ICorDebugChainEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugChainEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugChainEnum *This);ULONG (__stdcall *Release)(ICorDebugChainEnum *This);HRESULT (__stdcall *Skip)(ICorDebugChainEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugChainEnum *This);HRESULT (__stdcall *Clone)(ICorDebugChainEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugChainEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugChainEnum *This, ULONG celt, ICorDebugChain *chains[], ULONG *pceltFetched);};
struct ICorDebugChainVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugChain *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugChain *This);ULONG (__stdcall *Release)(ICorDebugChain *This);HRESULT (__stdcall *GetThread)(ICorDebugChain *This, ICorDebugThread **ppThread);HRESULT (__stdcall *GetStackRange)(ICorDebugChain *This, CORDB_ADDRESS *pStart, CORDB_ADDRESS *pEnd);HRESULT (__stdcall *GetContext)(ICorDebugChain *This, ICorDebugContext **ppContext);HRESULT (__stdcall *GetCaller)(ICorDebugChain *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetCallee)(ICorDebugChain *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetPrevious)(ICorDebugChain *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetNext)(ICorDebugChain *This, ICorDebugChain **ppChain);HRESULT (__stdcall *IsManaged)(ICorDebugChain *This, BOOL *pManaged);HRESULT (__stdcall *EnumerateFrames)(ICorDebugChain *This, ICorDebugFrameEnum **ppFrames);HRESULT (__stdcall *GetActiveFrame)(ICorDebugChain *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *GetRegisterSet)(ICorDebugChain *This, ICorDebugRegisterSet **ppRegisters);HRESULT (__stdcall *GetReason)(ICorDebugChain *This, CorDebugChainReason *pReason);};
struct ICorDebugClass {struct ICorDebugClassVtbl *lpVtbl;};
struct ICorDebugClassVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugClass *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugClass *This);ULONG (__stdcall *Release)(ICorDebugClass *This);HRESULT (__stdcall *GetModule)(ICorDebugClass *This, ICorDebugModule **pModule);HRESULT (__stdcall *GetToken)(ICorDebugClass *This, mdTypeDef *pTypeDef);HRESULT (__stdcall *GetStaticFieldValue)(ICorDebugClass *This, mdFieldDef fieldDef, ICorDebugFrame *pFrame, ICorDebugValue **ppValue);};
struct ICorDebugCode {struct ICorDebugCodeVtbl *lpVtbl;};
struct ICorDebugCodeVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugCode *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugCode *This);ULONG (__stdcall *Release)(ICorDebugCode *This);HRESULT (__stdcall *IsIL)(ICorDebugCode *This, BOOL *pbIL);HRESULT (__stdcall *GetFunction)(ICorDebugCode *This, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetAddress)(ICorDebugCode *This, CORDB_ADDRESS *pStart);HRESULT (__stdcall *GetSize)(ICorDebugCode *This, ULONG32 *pcBytes);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugCode *This, ULONG32 offset, ICorDebugFunctionBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetCode)(ICorDebugCode *This, ULONG32 startOffset, ULONG32 endOffset, ULONG32 cBufferAlloc, BYTE buffer[], ULONG32 *pcBufferSize);HRESULT (__stdcall *GetVersionNumber)(ICorDebugCode *This, ULONG32 *nVersion);HRESULT (__stdcall *GetILToNativeMapping)(ICorDebugCode *This, ULONG32 cMap, ULONG32 *pcMap, COR_DEBUG_IL_TO_NATIVE_MAP map[]);};
struct ICorDebugContext {struct ICorDebugContextVtbl *lpVtbl;};
struct ICorDebugContextVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugContext *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugContext *This);ULONG (__stdcall *Release)(ICorDebugContext *This);HRESULT (__stdcall *GetType)(ICorDebugContext *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugContext *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugContext *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugContext *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetClass)(ICorDebugContext *This, ICorDebugClass **ppClass);HRESULT (__stdcall *GetFieldValue)(ICorDebugContext *This, ICorDebugClass *pClass, mdFieldDef fieldDef, ICorDebugValue **ppValue);HRESULT (__stdcall *GetVirtualMethod)(ICorDebugContext *This, mdMemberRef memberRef, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetContext)(ICorDebugContext *This, ICorDebugContext **ppContext);HRESULT (__stdcall *IsValueClass)(ICorDebugContext *This, BOOL *pbIsValueClass);HRESULT (__stdcall *GetManagedCopy)(ICorDebugContext *This, IUnknown **ppObject);HRESULT (__stdcall *SetFromManagedCopy)(ICorDebugContext *This, IUnknown *pObject);};
struct ICorDebugController {struct ICorDebugControllerVtbl *lpVtbl;};
struct ICorDebugControllerVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugController *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugController *This);ULONG (__stdcall *Release)(ICorDebugController *This);HRESULT (__stdcall *Stop)(ICorDebugController *This, DWORD dwTimeout);HRESULT (__stdcall *Continue)(ICorDebugController *This, BOOL fIsOutOfBand);HRESULT (__stdcall *IsRunning)(ICorDebugController *This, BOOL *pbRunning);HRESULT (__stdcall *HasQueuedCallbacks)(ICorDebugController *This, ICorDebugThread *pThread, BOOL *pbQueued);HRESULT (__stdcall *EnumerateThreads)(ICorDebugController *This, ICorDebugThreadEnum **ppThreads);HRESULT (__stdcall *SetAllThreadsDebugState)(ICorDebugController *This, CorDebugThreadState state, ICorDebugThread *pExceptThisThread);HRESULT (__stdcall *Detach)(ICorDebugController *This);HRESULT (__stdcall *Terminate)(ICorDebugController *This, UINT exitCode);HRESULT (__stdcall *CanCommitChanges)(ICorDebugController *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);HRESULT (__stdcall *CommitChanges)(ICorDebugController *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);};
struct ICorDebugEditAndContinueErrorInfo {struct ICorDebugEditAndContinueErrorInfoVtbl *lpVtbl;};
struct ICorDebugEditAndContinueErrorInfoVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugEditAndContinueErrorInfo *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugEditAndContinueErrorInfo *This);ULONG (__stdcall *Release)(ICorDebugEditAndContinueErrorInfo *This);HRESULT (__stdcall *GetModule)(ICorDebugEditAndContinueErrorInfo *This, ICorDebugModule **ppModule);HRESULT (__stdcall *GetToken)(ICorDebugEditAndContinueErrorInfo *This, mdToken *pToken);HRESULT (__stdcall *GetErrorCode)(ICorDebugEditAndContinueErrorInfo *This, HRESULT *pHr);HRESULT (__stdcall *GetString)(ICorDebugEditAndContinueErrorInfo *This, ULONG32 cchString, ULONG32 *pcchString, WCHAR szString[]);};
struct ICorDebugEditAndContinueSnapshot {struct ICorDebugEditAndContinueSnapshotVtbl *lpVtbl;};
struct ICorDebugEditAndContinueSnapshotVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugEditAndContinueSnapshot *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugEditAndContinueSnapshot *This);ULONG (__stdcall *Release)(ICorDebugEditAndContinueSnapshot *This);HRESULT (__stdcall *CopyMetaData)(ICorDebugEditAndContinueSnapshot *This, IStream *pIStream, GUID *pMvid);HRESULT (__stdcall *GetMvid)(ICorDebugEditAndContinueSnapshot *This, GUID *pMvid);HRESULT (__stdcall *GetRoDataRVA)(ICorDebugEditAndContinueSnapshot *This, ULONG32 *pRoDataRVA);HRESULT (__stdcall *GetRwDataRVA)(ICorDebugEditAndContinueSnapshot *This, ULONG32 *pRwDataRVA);HRESULT (__stdcall *SetPEBytes)(ICorDebugEditAndContinueSnapshot *This, IStream *pIStream);HRESULT (__stdcall *SetILMap)(ICorDebugEditAndContinueSnapshot *This, mdToken mdFunction, ULONG cMapSize, COR_IL_MAP map[]);HRESULT (__stdcall *SetPESymbolBytes)(ICorDebugEditAndContinueSnapshot *This, IStream *pIStream);};
struct ICorDebugEnum {struct ICorDebugEnumVtbl *lpVtbl;};
struct ICorDebugEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugEnum *This);ULONG (__stdcall *Release)(ICorDebugEnum *This);HRESULT (__stdcall *Skip)(ICorDebugEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugEnum *This);HRESULT (__stdcall *Clone)(ICorDebugEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugEnum *This, ULONG *pcelt);};
struct ICorDebugErrorInfoEnum {struct ICorDebugErrorInfoEnumVtbl *lpVtbl;};
struct ICorDebugErrorInfoEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugErrorInfoEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugErrorInfoEnum *This);ULONG (__stdcall *Release)(ICorDebugErrorInfoEnum *This);HRESULT (__stdcall *Skip)(ICorDebugErrorInfoEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugErrorInfoEnum *This);HRESULT (__stdcall *Clone)(ICorDebugErrorInfoEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugErrorInfoEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugErrorInfoEnum *This, ULONG celt, IErrorInfo *modules[], ULONG *pceltFetched);};
struct ICorDebugEval {struct ICorDebugEvalVtbl *lpVtbl;};
struct ICorDebugEvalVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugEval *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugEval *This);ULONG (__stdcall *Release)(ICorDebugEval *This);HRESULT (__stdcall *CallFunction)(ICorDebugEval *This, ICorDebugFunction *pFunction, ULONG32 nArgs, ICorDebugValue *ppArgs[]);HRESULT (__stdcall *NewObject)(ICorDebugEval *This, ICorDebugFunction *pConstructor, ULONG32 nArgs, ICorDebugValue *ppArgs[]);HRESULT (__stdcall *NewObjectNoConstructor)(ICorDebugEval *This, ICorDebugClass *pClass);HRESULT (__stdcall *NewString)(ICorDebugEval *This, LPCWSTR string);HRESULT (__stdcall *NewArray)(ICorDebugEval *This, CorElementType elementType, ICorDebugClass *pElementClass, ULONG32 rank, ULONG32 dims[], ULONG32 lowBounds[]);HRESULT (__stdcall *IsActive)(ICorDebugEval *This, BOOL *pbActive);HRESULT (__stdcall *Abort)(ICorDebugEval *This);HRESULT (__stdcall *GetResult)(ICorDebugEval *This, ICorDebugValue **ppResult);HRESULT (__stdcall *GetThread)(ICorDebugEval *This, ICorDebugThread **ppThread);HRESULT (__stdcall *CreateValue)(ICorDebugEval *This, CorElementType elementType, ICorDebugClass *pElementClass, ICorDebugValue **ppValue);};
struct ICorDebugFrame {struct ICorDebugFrameVtbl *lpVtbl;};
struct ICorDebugFrameEnum {struct ICorDebugFrameEnumVtbl *lpVtbl;};
struct ICorDebugFrameEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugFrameEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugFrameEnum *This);ULONG (__stdcall *Release)(ICorDebugFrameEnum *This);HRESULT (__stdcall *Skip)(ICorDebugFrameEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugFrameEnum *This);HRESULT (__stdcall *Clone)(ICorDebugFrameEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugFrameEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugFrameEnum *This, ULONG celt, ICorDebugFrame *frames[], ULONG *pceltFetched);};
struct ICorDebugFrameVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugFrame *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugFrame *This);ULONG (__stdcall *Release)(ICorDebugFrame *This);HRESULT (__stdcall *GetChain)(ICorDebugFrame *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetCode)(ICorDebugFrame *This, ICorDebugCode **ppCode);HRESULT (__stdcall *GetFunction)(ICorDebugFrame *This, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetFunctionToken)(ICorDebugFrame *This, mdMethodDef *pToken);HRESULT (__stdcall *GetStackRange)(ICorDebugFrame *This, CORDB_ADDRESS *pStart, CORDB_ADDRESS *pEnd);HRESULT (__stdcall *GetCaller)(ICorDebugFrame *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *GetCallee)(ICorDebugFrame *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *CreateStepper)(ICorDebugFrame *This, ICorDebugStepper **ppStepper);};
struct ICorDebugFunction {struct ICorDebugFunctionVtbl *lpVtbl;};
struct ICorDebugFunctionBreakpoint {struct ICorDebugFunctionBreakpointVtbl *lpVtbl;};
struct ICorDebugFunctionBreakpointVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugFunctionBreakpoint *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugFunctionBreakpoint *This);ULONG (__stdcall *Release)(ICorDebugFunctionBreakpoint *This);HRESULT (__stdcall *Activate)(ICorDebugFunctionBreakpoint *This, BOOL bActive);HRESULT (__stdcall *IsActive)(ICorDebugFunctionBreakpoint *This, BOOL *pbActive);HRESULT (__stdcall *GetFunction)(ICorDebugFunctionBreakpoint *This, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetOffset)(ICorDebugFunctionBreakpoint *This, ULONG32 *pnOffset);};
struct ICorDebugFunctionVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugFunction *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugFunction *This);ULONG (__stdcall *Release)(ICorDebugFunction *This);HRESULT (__stdcall *GetModule)(ICorDebugFunction *This, ICorDebugModule **ppModule);HRESULT (__stdcall *GetClass)(ICorDebugFunction *This, ICorDebugClass **ppClass);HRESULT (__stdcall *GetToken)(ICorDebugFunction *This, mdMethodDef *pMethodDef);HRESULT (__stdcall *GetILCode)(ICorDebugFunction *This, ICorDebugCode **ppCode);HRESULT (__stdcall *GetNativeCode)(ICorDebugFunction *This, ICorDebugCode **ppCode);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugFunction *This, ICorDebugFunctionBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetLocalVarSigToken)(ICorDebugFunction *This, mdSignature *pmdSig);HRESULT (__stdcall *GetCurrentVersionNumber)(ICorDebugFunction *This, ULONG32 *pnCurrentVersion);};
struct ICorDebugGenericValue {struct ICorDebugGenericValueVtbl *lpVtbl;};
struct ICorDebugGenericValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugGenericValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugGenericValue *This);ULONG (__stdcall *Release)(ICorDebugGenericValue *This);HRESULT (__stdcall *GetType)(ICorDebugGenericValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugGenericValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugGenericValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugGenericValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetValue)(ICorDebugGenericValue *This, void *pTo);HRESULT (__stdcall *SetValue)(ICorDebugGenericValue *This, void *pFrom);};
struct ICorDebugHeapValue {struct ICorDebugHeapValueVtbl *lpVtbl;};
struct ICorDebugHeapValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugHeapValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugHeapValue *This);ULONG (__stdcall *Release)(ICorDebugHeapValue *This);HRESULT (__stdcall *GetType)(ICorDebugHeapValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugHeapValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugHeapValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugHeapValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *IsValid)(ICorDebugHeapValue *This, BOOL *pbValid);HRESULT (__stdcall *CreateRelocBreakpoint)(ICorDebugHeapValue *This, ICorDebugValueBreakpoint **ppBreakpoint);};
struct ICorDebugILFrame {struct ICorDebugILFrameVtbl *lpVtbl;};
struct ICorDebugILFrameVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugILFrame *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugILFrame *This);ULONG (__stdcall *Release)(ICorDebugILFrame *This);HRESULT (__stdcall *GetChain)(ICorDebugILFrame *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetCode)(ICorDebugILFrame *This, ICorDebugCode **ppCode);HRESULT (__stdcall *GetFunction)(ICorDebugILFrame *This, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetFunctionToken)(ICorDebugILFrame *This, mdMethodDef *pToken);HRESULT (__stdcall *GetStackRange)(ICorDebugILFrame *This, CORDB_ADDRESS *pStart, CORDB_ADDRESS *pEnd);HRESULT (__stdcall *GetCaller)(ICorDebugILFrame *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *GetCallee)(ICorDebugILFrame *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *CreateStepper)(ICorDebugILFrame *This, ICorDebugStepper **ppStepper);HRESULT (__stdcall *GetIP)(ICorDebugILFrame *This, ULONG32 *pnOffset, CorDebugMappingResult *pMappingResult);HRESULT (__stdcall *SetIP)(ICorDebugILFrame *This, ULONG32 nOffset);HRESULT (__stdcall *EnumerateLocalVariables)(ICorDebugILFrame *This, ICorDebugValueEnum **ppValueEnum);HRESULT (__stdcall *GetLocalVariable)(ICorDebugILFrame *This, DWORD dwIndex, ICorDebugValue **ppValue);HRESULT (__stdcall *EnumerateArguments)(ICorDebugILFrame *This, ICorDebugValueEnum **ppValueEnum);HRESULT (__stdcall *GetArgument)(ICorDebugILFrame *This, DWORD dwIndex, ICorDebugValue **ppValue);HRESULT (__stdcall *GetStackDepth)(ICorDebugILFrame *This, ULONG32 *pDepth);HRESULT (__stdcall *GetStackValue)(ICorDebugILFrame *This, DWORD dwIndex, ICorDebugValue **ppValue);HRESULT (__stdcall *CanSetIP)(ICorDebugILFrame *This, ULONG32 nOffset);};
struct ICorDebugManagedCallback {struct ICorDebugManagedCallbackVtbl *lpVtbl;};
struct ICorDebugManagedCallbackVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugManagedCallback *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugManagedCallback *This);ULONG (__stdcall *Release)(ICorDebugManagedCallback *This);HRESULT (__stdcall *Breakpoint)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugBreakpoint *pBreakpoint);HRESULT (__stdcall *StepComplete)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugStepper *pStepper, CorDebugStepReason reason);HRESULT (__stdcall *Break)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *thread);HRESULT (__stdcall *Exception)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, BOOL unhandled);HRESULT (__stdcall *EvalComplete)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugEval *pEval);HRESULT (__stdcall *EvalException)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugEval *pEval);HRESULT (__stdcall *CreateProcessA)(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess);HRESULT (__stdcall *ExitProcess)(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess);HRESULT (__stdcall *CreateThread)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *thread);HRESULT (__stdcall *ExitThread)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *thread);HRESULT (__stdcall *LoadModule)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugModule *pModule);HRESULT (__stdcall *UnloadModule)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugModule *pModule);HRESULT (__stdcall *LoadClass)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugClass *c);HRESULT (__stdcall *UnloadClass)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugClass *c);HRESULT (__stdcall *DebuggerError)(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess, HRESULT errorHR, DWORD errorCode);HRESULT (__stdcall *LogMessage)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, LONG lLevel, WCHAR *pLogSwitchName, WCHAR *pMessage);HRESULT (__stdcall *LogSwitch)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, LONG lLevel, ULONG ulReason, WCHAR *pLogSwitchName, WCHAR *pParentName);HRESULT (__stdcall *CreateAppDomain)(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess, ICorDebugAppDomain *pAppDomain);HRESULT (__stdcall *ExitAppDomain)(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess, ICorDebugAppDomain *pAppDomain);HRESULT (__stdcall *LoadAssembly)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugAssembly *pAssembly);HRESULT (__stdcall *UnloadAssembly)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugAssembly *pAssembly);HRESULT (__stdcall *ControlCTrap)(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess);HRESULT (__stdcall *NameChange)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread);HRESULT (__stdcall *UpdateModuleSymbols)(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugModule *pModule, IStream *pSymbolStream);};
struct ICorDebugModule {struct ICorDebugModuleVtbl *lpVtbl;};
struct ICorDebugModuleBreakpoint {struct ICorDebugModuleBreakpointVtbl *lpVtbl;};
struct ICorDebugModuleBreakpointVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugModuleBreakpoint *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugModuleBreakpoint *This);ULONG (__stdcall *Release)(ICorDebugModuleBreakpoint *This);HRESULT (__stdcall *Activate)(ICorDebugModuleBreakpoint *This, BOOL bActive);HRESULT (__stdcall *IsActive)(ICorDebugModuleBreakpoint *This, BOOL *pbActive);HRESULT (__stdcall *GetModule)(ICorDebugModuleBreakpoint *This, ICorDebugModule **ppModule);};
struct ICorDebugModuleEnum {struct ICorDebugModuleEnumVtbl *lpVtbl;};
struct ICorDebugModuleEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugModuleEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugModuleEnum *This);ULONG (__stdcall *Release)(ICorDebugModuleEnum *This);HRESULT (__stdcall *Skip)(ICorDebugModuleEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugModuleEnum *This);HRESULT (__stdcall *Clone)(ICorDebugModuleEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugModuleEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugModuleEnum *This, ULONG celt, ICorDebugModule *modules[], ULONG *pceltFetched);};
struct ICorDebugModuleVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugModule *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugModule *This);ULONG (__stdcall *Release)(ICorDebugModule *This);HRESULT (__stdcall *GetProcess)(ICorDebugModule *This, ICorDebugProcess **ppProcess);HRESULT (__stdcall *GetBaseAddress)(ICorDebugModule *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *GetAssembly)(ICorDebugModule *This, ICorDebugAssembly **ppAssembly);HRESULT (__stdcall *GetName)(ICorDebugModule *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);HRESULT (__stdcall *EnableJITDebugging)(ICorDebugModule *This, BOOL bTrackJITInfo, BOOL bAllowJitOpts);HRESULT (__stdcall *EnableClassLoadCallbacks)(ICorDebugModule *This, BOOL bClassLoadCallbacks);HRESULT (__stdcall *GetFunctionFromToken)(ICorDebugModule *This, mdMethodDef methodDef, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetFunctionFromRVA)(ICorDebugModule *This, CORDB_ADDRESS rva, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetClassFromToken)(ICorDebugModule *This, mdTypeDef typeDef, ICorDebugClass **ppClass);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugModule *This, ICorDebugModuleBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetEditAndContinueSnapshot)(ICorDebugModule *This, ICorDebugEditAndContinueSnapshot **ppEditAndContinueSnapshot);HRESULT (__stdcall *GetMetaDataInterface)(ICorDebugModule *This, const IID *const riid, IUnknown **ppObj);HRESULT (__stdcall *GetToken)(ICorDebugModule *This, mdModule *pToken);HRESULT (__stdcall *IsDynamic)(ICorDebugModule *This, BOOL *pDynamic);HRESULT (__stdcall *GetGlobalVariableValue)(ICorDebugModule *This, mdFieldDef fieldDef, ICorDebugValue **ppValue);HRESULT (__stdcall *GetSize)(ICorDebugModule *This, ULONG32 *pcBytes);HRESULT (__stdcall *IsInMemory)(ICorDebugModule *This, BOOL *pInMemory);};
struct ICorDebugNativeFrame {struct ICorDebugNativeFrameVtbl *lpVtbl;};
struct ICorDebugNativeFrameVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugNativeFrame *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugNativeFrame *This);ULONG (__stdcall *Release)(ICorDebugNativeFrame *This);HRESULT (__stdcall *GetChain)(ICorDebugNativeFrame *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetCode)(ICorDebugNativeFrame *This, ICorDebugCode **ppCode);HRESULT (__stdcall *GetFunction)(ICorDebugNativeFrame *This, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetFunctionToken)(ICorDebugNativeFrame *This, mdMethodDef *pToken);HRESULT (__stdcall *GetStackRange)(ICorDebugNativeFrame *This, CORDB_ADDRESS *pStart, CORDB_ADDRESS *pEnd);HRESULT (__stdcall *GetCaller)(ICorDebugNativeFrame *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *GetCallee)(ICorDebugNativeFrame *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *CreateStepper)(ICorDebugNativeFrame *This, ICorDebugStepper **ppStepper);HRESULT (__stdcall *GetIP)(ICorDebugNativeFrame *This, ULONG32 *pnOffset);HRESULT (__stdcall *SetIP)(ICorDebugNativeFrame *This, ULONG32 nOffset);HRESULT (__stdcall *GetRegisterSet)(ICorDebugNativeFrame *This, ICorDebugRegisterSet **ppRegisters);HRESULT (__stdcall *GetLocalRegisterValue)(ICorDebugNativeFrame *This, CorDebugRegister reg, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);HRESULT (__stdcall *GetLocalDoubleRegisterValue)(ICorDebugNativeFrame *This, CorDebugRegister highWordReg, CorDebugRegister lowWordReg, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);HRESULT (__stdcall *GetLocalMemoryValue)(ICorDebugNativeFrame *This, CORDB_ADDRESS address, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);HRESULT (__stdcall *GetLocalRegisterMemoryValue)(ICorDebugNativeFrame *This, CorDebugRegister highWordReg, CORDB_ADDRESS lowWordAddress, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);HRESULT (__stdcall *GetLocalMemoryRegisterValue)(ICorDebugNativeFrame *This, CORDB_ADDRESS highWordAddress, CorDebugRegister lowWordRegister, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);HRESULT (__stdcall *CanSetIP)(ICorDebugNativeFrame *This, ULONG32 nOffset);};
struct ICorDebugObjectEnum {struct ICorDebugObjectEnumVtbl *lpVtbl;};
struct ICorDebugObjectEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugObjectEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugObjectEnum *This);ULONG (__stdcall *Release)(ICorDebugObjectEnum *This);HRESULT (__stdcall *Skip)(ICorDebugObjectEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugObjectEnum *This);HRESULT (__stdcall *Clone)(ICorDebugObjectEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugObjectEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugObjectEnum *This, ULONG celt, CORDB_ADDRESS objects[], ULONG *pceltFetched);};
struct ICorDebugObjectValue {struct ICorDebugObjectValueVtbl *lpVtbl;};
struct ICorDebugObjectValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugObjectValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugObjectValue *This);ULONG (__stdcall *Release)(ICorDebugObjectValue *This);HRESULT (__stdcall *GetType)(ICorDebugObjectValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugObjectValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugObjectValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugObjectValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetClass)(ICorDebugObjectValue *This, ICorDebugClass **ppClass);HRESULT (__stdcall *GetFieldValue)(ICorDebugObjectValue *This, ICorDebugClass *pClass, mdFieldDef fieldDef, ICorDebugValue **ppValue);HRESULT (__stdcall *GetVirtualMethod)(ICorDebugObjectValue *This, mdMemberRef memberRef, ICorDebugFunction **ppFunction);HRESULT (__stdcall *GetContext)(ICorDebugObjectValue *This, ICorDebugContext **ppContext);HRESULT (__stdcall *IsValueClass)(ICorDebugObjectValue *This, BOOL *pbIsValueClass);HRESULT (__stdcall *GetManagedCopy)(ICorDebugObjectValue *This, IUnknown **ppObject);HRESULT (__stdcall *SetFromManagedCopy)(ICorDebugObjectValue *This, IUnknown *pObject);};
struct ICorDebugProcess {struct ICorDebugProcessVtbl *lpVtbl;};
struct ICorDebugProcessEnum {struct ICorDebugProcessEnumVtbl *lpVtbl;};
struct ICorDebugProcessEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugProcessEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugProcessEnum *This);ULONG (__stdcall *Release)(ICorDebugProcessEnum *This);HRESULT (__stdcall *Skip)(ICorDebugProcessEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugProcessEnum *This);HRESULT (__stdcall *Clone)(ICorDebugProcessEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugProcessEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugProcessEnum *This, ULONG celt, ICorDebugProcess *processes[], ULONG *pceltFetched);};
struct ICorDebugProcessVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugProcess *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugProcess *This);ULONG (__stdcall *Release)(ICorDebugProcess *This);HRESULT (__stdcall *Stop)(ICorDebugProcess *This, DWORD dwTimeout);HRESULT (__stdcall *Continue)(ICorDebugProcess *This, BOOL fIsOutOfBand);HRESULT (__stdcall *IsRunning)(ICorDebugProcess *This, BOOL *pbRunning);HRESULT (__stdcall *HasQueuedCallbacks)(ICorDebugProcess *This, ICorDebugThread *pThread, BOOL *pbQueued);HRESULT (__stdcall *EnumerateThreads)(ICorDebugProcess *This, ICorDebugThreadEnum **ppThreads);HRESULT (__stdcall *SetAllThreadsDebugState)(ICorDebugProcess *This, CorDebugThreadState state, ICorDebugThread *pExceptThisThread);HRESULT (__stdcall *Detach)(ICorDebugProcess *This);HRESULT (__stdcall *Terminate)(ICorDebugProcess *This, UINT exitCode);HRESULT (__stdcall *CanCommitChanges)(ICorDebugProcess *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);HRESULT (__stdcall *CommitChanges)(ICorDebugProcess *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);HRESULT (__stdcall *GetID)(ICorDebugProcess *This, DWORD *pdwProcessId);HRESULT (__stdcall *GetHandle)(ICorDebugProcess *This, HPROCESS *phProcessHandle);HRESULT (__stdcall *GetThread)(ICorDebugProcess *This, DWORD dwThreadId, ICorDebugThread **ppThread);HRESULT (__stdcall *EnumerateObjects)(ICorDebugProcess *This, ICorDebugObjectEnum **ppObjects);HRESULT (__stdcall *IsTransitionStub)(ICorDebugProcess *This, CORDB_ADDRESS address, BOOL *pbTransitionStub);HRESULT (__stdcall *IsOSSuspended)(ICorDebugProcess *This, DWORD threadID, BOOL *pbSuspended);HRESULT (__stdcall *GetThreadContext)(ICorDebugProcess *This, DWORD threadID, ULONG32 contextSize, BYTE context[]);HRESULT (__stdcall *SetThreadContext)(ICorDebugProcess *This, DWORD threadID, ULONG32 contextSize, BYTE context[]);HRESULT (__stdcall *ReadMemory)(ICorDebugProcess *This, CORDB_ADDRESS address, DWORD size, BYTE buffer[], DWORD *read);HRESULT (__stdcall *WriteMemory)(ICorDebugProcess *This, CORDB_ADDRESS address, DWORD size, BYTE buffer[], DWORD *written);HRESULT (__stdcall *ClearCurrentException)(ICorDebugProcess *This, DWORD threadID);HRESULT (__stdcall *EnableLogMessages)(ICorDebugProcess *This, BOOL fOnOff);HRESULT (__stdcall *ModifyLogSwitch)(ICorDebugProcess *This, WCHAR *pLogSwitchName, LONG lLevel);HRESULT (__stdcall *EnumerateAppDomains)(ICorDebugProcess *This, ICorDebugAppDomainEnum **ppAppDomains);HRESULT (__stdcall *GetObjectA)(ICorDebugProcess *This, ICorDebugValue **ppObject);HRESULT (__stdcall *ThreadForFiberCookie)(ICorDebugProcess *This, DWORD fiberCookie, ICorDebugThread **ppThread);};
struct ICorDebugReferenceValue {struct ICorDebugReferenceValueVtbl *lpVtbl;};
struct ICorDebugReferenceValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugReferenceValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugReferenceValue *This);ULONG (__stdcall *Release)(ICorDebugReferenceValue *This);HRESULT (__stdcall *GetType)(ICorDebugReferenceValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugReferenceValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugReferenceValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugReferenceValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *IsNull)(ICorDebugReferenceValue *This, BOOL *pbNull);HRESULT (__stdcall *GetValue)(ICorDebugReferenceValue *This, CORDB_ADDRESS *pValue);HRESULT (__stdcall *SetValue)(ICorDebugReferenceValue *This, CORDB_ADDRESS value);HRESULT (__stdcall *Dereference)(ICorDebugReferenceValue *This, ICorDebugValue **ppValue);HRESULT (__stdcall *DereferenceStrong)(ICorDebugReferenceValue *This, ICorDebugValue **ppValue);};
struct ICorDebugRegisterSet {struct ICorDebugRegisterSetVtbl *lpVtbl;};
struct ICorDebugRegisterSetVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugRegisterSet *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugRegisterSet *This);ULONG (__stdcall *Release)(ICorDebugRegisterSet *This);HRESULT (__stdcall *GetRegistersAvailable)(ICorDebugRegisterSet *This, ULONG64 *pAvailable);HRESULT (__stdcall *GetRegisters)(ICorDebugRegisterSet *This, ULONG64 mask, ULONG32 regCount, CORDB_REGISTER regBuffer[]);HRESULT (__stdcall *SetRegisters)(ICorDebugRegisterSet *This, ULONG64 mask, ULONG32 regCount, CORDB_REGISTER regBuffer[]);HRESULT (__stdcall *GetThreadContext)(ICorDebugRegisterSet *This, ULONG32 contextSize, BYTE context[]);HRESULT (__stdcall *SetThreadContext)(ICorDebugRegisterSet *This, ULONG32 contextSize, BYTE context[]);};
struct ICorDebugStepper {struct ICorDebugStepperVtbl *lpVtbl;};
struct ICorDebugStepperEnum {struct ICorDebugStepperEnumVtbl *lpVtbl;};
struct ICorDebugStepperEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugStepperEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugStepperEnum *This);ULONG (__stdcall *Release)(ICorDebugStepperEnum *This);HRESULT (__stdcall *Skip)(ICorDebugStepperEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugStepperEnum *This);HRESULT (__stdcall *Clone)(ICorDebugStepperEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugStepperEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugStepperEnum *This, ULONG celt, ICorDebugStepper *steppers[], ULONG *pceltFetched);};
struct ICorDebugStepperVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugStepper *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugStepper *This);ULONG (__stdcall *Release)(ICorDebugStepper *This);HRESULT (__stdcall *IsActive)(ICorDebugStepper *This, BOOL *pbActive);HRESULT (__stdcall *Deactivate)(ICorDebugStepper *This);HRESULT (__stdcall *SetInterceptMask)(ICorDebugStepper *This, CorDebugIntercept mask);HRESULT (__stdcall *SetUnmappedStopMask)(ICorDebugStepper *This, CorDebugUnmappedStop mask);HRESULT (__stdcall *Step)(ICorDebugStepper *This, BOOL bStepIn);HRESULT (__stdcall *StepRange)(ICorDebugStepper *This, BOOL bStepIn, COR_DEBUG_STEP_RANGE ranges[], ULONG32 cRangeCount);HRESULT (__stdcall *StepOut)(ICorDebugStepper *This);HRESULT (__stdcall *SetRangeIL)(ICorDebugStepper *This, BOOL bIL);};
struct ICorDebugStringValue {struct ICorDebugStringValueVtbl *lpVtbl;};
struct ICorDebugStringValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugStringValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugStringValue *This);ULONG (__stdcall *Release)(ICorDebugStringValue *This);HRESULT (__stdcall *GetType)(ICorDebugStringValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugStringValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugStringValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugStringValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *IsValid)(ICorDebugStringValue *This, BOOL *pbValid);HRESULT (__stdcall *CreateRelocBreakpoint)(ICorDebugStringValue *This, ICorDebugValueBreakpoint **ppBreakpoint);HRESULT (__stdcall *GetLength)(ICorDebugStringValue *This, ULONG32 *pcchString);HRESULT (__stdcall *GetString)(ICorDebugStringValue *This, ULONG32 cchString, ULONG32 *pcchString, WCHAR szString[]);};
struct ICorDebugThread {struct ICorDebugThreadVtbl *lpVtbl;};
struct ICorDebugThreadEnum {struct ICorDebugThreadEnumVtbl *lpVtbl;};
struct ICorDebugThreadEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugThreadEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugThreadEnum *This);ULONG (__stdcall *Release)(ICorDebugThreadEnum *This);HRESULT (__stdcall *Skip)(ICorDebugThreadEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugThreadEnum *This);HRESULT (__stdcall *Clone)(ICorDebugThreadEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugThreadEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugThreadEnum *This, ULONG celt, ICorDebugThread *threads[], ULONG *pceltFetched);};
struct ICorDebugThreadVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugThread *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugThread *This);ULONG (__stdcall *Release)(ICorDebugThread *This);HRESULT (__stdcall *GetProcess)(ICorDebugThread *This, ICorDebugProcess **ppProcess);HRESULT (__stdcall *GetID)(ICorDebugThread *This, DWORD *pdwThreadId);HRESULT (__stdcall *GetHandle)(ICorDebugThread *This, HTHREAD *phThreadHandle);HRESULT (__stdcall *GetAppDomain)(ICorDebugThread *This, ICorDebugAppDomain **ppAppDomain);HRESULT (__stdcall *SetDebugState)(ICorDebugThread *This, CorDebugThreadState state);HRESULT (__stdcall *GetDebugState)(ICorDebugThread *This, CorDebugThreadState *pState);HRESULT (__stdcall *GetUserState)(ICorDebugThread *This, CorDebugUserState *pState);HRESULT (__stdcall *GetCurrentException)(ICorDebugThread *This, ICorDebugValue **ppExceptionObject);HRESULT (__stdcall *ClearCurrentException)(ICorDebugThread *This);HRESULT (__stdcall *CreateStepper)(ICorDebugThread *This, ICorDebugStepper **ppStepper);HRESULT (__stdcall *EnumerateChains)(ICorDebugThread *This, ICorDebugChainEnum **ppChains);HRESULT (__stdcall *GetActiveChain)(ICorDebugThread *This, ICorDebugChain **ppChain);HRESULT (__stdcall *GetActiveFrame)(ICorDebugThread *This, ICorDebugFrame **ppFrame);HRESULT (__stdcall *GetRegisterSet)(ICorDebugThread *This, ICorDebugRegisterSet **ppRegisters);HRESULT (__stdcall *CreateEval)(ICorDebugThread *This, ICorDebugEval **ppEval);HRESULT (__stdcall *GetObjectA)(ICorDebugThread *This, ICorDebugValue **ppObject);};
struct ICorDebugUnmanagedCallback {struct ICorDebugUnmanagedCallbackVtbl *lpVtbl;};
struct ICorDebugUnmanagedCallbackVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugUnmanagedCallback *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugUnmanagedCallback *This);ULONG (__stdcall *Release)(ICorDebugUnmanagedCallback *This);HRESULT (__stdcall *DebugEvent)(ICorDebugUnmanagedCallback *This, LPDEBUG_EVENT pDebugEvent, BOOL fOutOfBand);};
struct ICorDebugValue {struct ICorDebugValueVtbl *lpVtbl;};
struct ICorDebugValueBreakpoint {struct ICorDebugValueBreakpointVtbl *lpVtbl;};
struct ICorDebugValueBreakpointVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugValueBreakpoint *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugValueBreakpoint *This);ULONG (__stdcall *Release)(ICorDebugValueBreakpoint *This);HRESULT (__stdcall *Activate)(ICorDebugValueBreakpoint *This, BOOL bActive);HRESULT (__stdcall *IsActive)(ICorDebugValueBreakpoint *This, BOOL *pbActive);HRESULT (__stdcall *GetValue)(ICorDebugValueBreakpoint *This, ICorDebugValue **ppValue);};
struct ICorDebugValueEnum {struct ICorDebugValueEnumVtbl *lpVtbl;};
struct ICorDebugValueEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugValueEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugValueEnum *This);ULONG (__stdcall *Release)(ICorDebugValueEnum *This);HRESULT (__stdcall *Skip)(ICorDebugValueEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorDebugValueEnum *This);HRESULT (__stdcall *Clone)(ICorDebugValueEnum *This, ICorDebugEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorDebugValueEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorDebugValueEnum *This, ULONG celt, ICorDebugValue *values[], ULONG *pceltFetched);};
struct ICorDebugValueVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebugValue *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebugValue *This);ULONG (__stdcall *Release)(ICorDebugValue *This);HRESULT (__stdcall *GetType)(ICorDebugValue *This, CorElementType *pType);HRESULT (__stdcall *GetSize)(ICorDebugValue *This, ULONG32 *pSize);HRESULT (__stdcall *GetAddress)(ICorDebugValue *This, CORDB_ADDRESS *pAddress);HRESULT (__stdcall *CreateBreakpoint)(ICorDebugValue *This, ICorDebugValueBreakpoint **ppBreakpoint);};
struct ICorDebugVtbl {HRESULT (__stdcall *QueryInterface)(ICorDebug *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorDebug *This);ULONG (__stdcall *Release)(ICorDebug *This);HRESULT (__stdcall *Initialize)(ICorDebug *This);HRESULT (__stdcall *Terminate)(ICorDebug *This);HRESULT (__stdcall *SetManagedHandler)(ICorDebug *This, ICorDebugManagedCallback *pCallback);HRESULT (__stdcall *SetUnmanagedHandler)(ICorDebug *This, ICorDebugUnmanagedCallback *pCallback);HRESULT (__stdcall *CreateProcessA)(ICorDebug *This, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, PVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation, CorDebugCreateProcessFlags debuggingFlags, ICorDebugProcess **ppProcess);HRESULT (__stdcall *DebugActiveProcess)(ICorDebug *This, DWORD id, BOOL win32Attach, ICorDebugProcess **ppProcess);HRESULT (__stdcall *EnumerateProcesses)(ICorDebug *This, ICorDebugProcessEnum **ppProcess);HRESULT (__stdcall *GetProcess)(ICorDebug *This, DWORD dwProcessId, ICorDebugProcess **ppProcess);};
struct ICorModule {struct ICorModuleVtbl *lpVtbl;};
typedef enum $C435AAD07FF115A04870B39292383D43 ICorModuleInitializeFlags;
struct ICorModuleVtbl {HRESULT (__stdcall *Initialize)(DWORD flags, const IID *const riidCeeGen, const IID *const riidEmitter);HRESULT (__stdcall *GetCeeGen)(ICeeGen **pCeeGen);HRESULT (__stdcall *GetMetaDataEmit)(IMetaDataEmit **pEmitter);};
struct ICorProfilerCallback {struct ICorProfilerCallbackVtbl *lpVtbl;};
struct ICorProfilerCallbackVtbl {HRESULT (__stdcall *QueryInterface)(ICorProfilerCallback *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorProfilerCallback *This);ULONG (__stdcall *Release)(ICorProfilerCallback *This);HRESULT (__stdcall *Initialize)(ICorProfilerCallback *This, IUnknown *pICorProfilerInfoUnk, DWORD *pdwRequestedEvents);HRESULT (__stdcall *Shutdown)(ICorProfilerCallback *This);HRESULT (__stdcall *AppDomainCreationStarted)(ICorProfilerCallback *This, AppDomainID appDomainId);HRESULT (__stdcall *AppDomainCreationFinished)(ICorProfilerCallback *This, AppDomainID appDomainId, HRESULT hrStatus);HRESULT (__stdcall *AppDomainShutdownStarted)(ICorProfilerCallback *This, AppDomainID appDomainId);HRESULT (__stdcall *AppDomainShutdownFinished)(ICorProfilerCallback *This, AppDomainID appDomainId, HRESULT hrStatus);HRESULT (__stdcall *AssemblyLoadStarted)(ICorProfilerCallback *This, AssemblyID assemblyId);HRESULT (__stdcall *AssemblyLoadFinished)(ICorProfilerCallback *This, AssemblyID assemblyId, HRESULT hrStatus);HRESULT (__stdcall *AssemblyUnloadStarted)(ICorProfilerCallback *This, AssemblyID assemblyId);HRESULT (__stdcall *AssemblyUnloadFinished)(ICorProfilerCallback *This, AssemblyID assemblyId, HRESULT hrStatus);HRESULT (__stdcall *ModuleLoadStarted)(ICorProfilerCallback *This, ModuleID moduleId);HRESULT (__stdcall *ModuleLoadFinished)(ICorProfilerCallback *This, ModuleID moduleId, HRESULT hrStatus);HRESULT (__stdcall *ModuleUnloadStarted)(ICorProfilerCallback *This, ModuleID moduleId);HRESULT (__stdcall *ModuleUnloadFinished)(ICorProfilerCallback *This, ModuleID moduleId, HRESULT hrStatus);HRESULT (__stdcall *ModuleAttachedToAssembly)(ICorProfilerCallback *This, ModuleID moduleId, AssemblyID AssemblyId);HRESULT (__stdcall *ClassLoadStarted)(ICorProfilerCallback *This, ClassID classId);HRESULT (__stdcall *ClassLoadFinished)(ICorProfilerCallback *This, ClassID classId, HRESULT hrStatus);HRESULT (__stdcall *ClassUnloadStarted)(ICorProfilerCallback *This, ClassID classId);HRESULT (__stdcall *ClassUnloadFinished)(ICorProfilerCallback *This, ClassID classId, HRESULT hrStatus);HRESULT (__stdcall *FunctionUnloadStarted)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *JITCompilationStarted)(ICorProfilerCallback *This, FunctionID functionId, BOOL fIsSafeToBlock);HRESULT (__stdcall *JITCompilationFinished)(ICorProfilerCallback *This, FunctionID functionId, HRESULT hrStatus, BOOL fIsSafeToBlock);HRESULT (__stdcall *JITCachedFunctionSearchStarted)(ICorProfilerCallback *This, FunctionID functionId, BOOL *pbUseCachedFunction);HRESULT (__stdcall *JITCachedFunctionSearchFinished)(ICorProfilerCallback *This, FunctionID functionId, COR_PRF_JIT_CACHE result);HRESULT (__stdcall *JITFunctionPitched)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *JITInlining)(ICorProfilerCallback *This, FunctionID callerId, FunctionID calleeId, BOOL *pfShouldInline);HRESULT (__stdcall *ThreadAcquiringMonitor)(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);HRESULT (__stdcall *ThreadAcquiredMonitor)(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);HRESULT (__stdcall *ThreadBlockedMonitor)(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);HRESULT (__stdcall *ThreadCreated)(ICorProfilerCallback *This, ThreadID threadId);HRESULT (__stdcall *ThreadDestroyed)(ICorProfilerCallback *This, ThreadID threadId);HRESULT (__stdcall *ThreadAssignedToOSThread)(ICorProfilerCallback *This, ThreadID managedThreadId, DWORD osThreadId);HRESULT (__stdcall *ThreadReleasedMonitor)(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);HRESULT (__stdcall *RemotingClientInvocationStarted)(ICorProfilerCallback *This);HRESULT (__stdcall *RemotingClientSendingMessage)(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);HRESULT (__stdcall *RemotingClientReceivingReply)(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);HRESULT (__stdcall *RemotingClientInvocationFinished)(ICorProfilerCallback *This);HRESULT (__stdcall *RemotingServerReceivingMessage)(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);HRESULT (__stdcall *RemotingServerInvocationStarted)(ICorProfilerCallback *This);HRESULT (__stdcall *RemotingServerInvocationReturned)(ICorProfilerCallback *This);HRESULT (__stdcall *RemotingServerSendingReply)(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);HRESULT (__stdcall *UnmanagedToManagedTransition)(ICorProfilerCallback *This, FunctionID functionId, COR_PRF_TRANSITION_REASON reason);HRESULT (__stdcall *ManagedToUnmanagedTransition)(ICorProfilerCallback *This, FunctionID functionId, COR_PRF_TRANSITION_REASON reason);HRESULT (__stdcall *RuntimeSuspendStarted)(ICorProfilerCallback *This, COR_PRF_SUSPEND_REASON suspendReason);HRESULT (__stdcall *RuntimeSuspendFinished)(ICorProfilerCallback *This);HRESULT (__stdcall *RuntimeSuspendAborted)(ICorProfilerCallback *This);HRESULT (__stdcall *RuntimeResumeStarted)(ICorProfilerCallback *This);HRESULT (__stdcall *RuntimeResumeFinished)(ICorProfilerCallback *This);HRESULT (__stdcall *RuntimeThreadSuspended)(ICorProfilerCallback *This, ThreadID threadId);HRESULT (__stdcall *RuntimeThreadResumed)(ICorProfilerCallback *This, ThreadID threadId);HRESULT (__stdcall *MovedReferences)(ICorProfilerCallback *This, ULONG cMovedObjectIDRanges, ObjectID oldObjectIDRangeStart[], ObjectID newObjectIDRangeStart[], ULONG cObjectIDRangeLength[]);HRESULT (__stdcall *ObjectAllocated)(ICorProfilerCallback *This, ObjectID objectId, ClassID classId);HRESULT (__stdcall *ObjectsAllocatedByClass)(ICorProfilerCallback *This, ULONG cClassCount, ClassID classIds[], ULONG cObjects[]);HRESULT (__stdcall *ObjectReferences)(ICorProfilerCallback *This, ObjectID objectId, ClassID classId, ULONG cObjectRefs, ObjectID objectRefIds[]);HRESULT (__stdcall *RootReferences)(ICorProfilerCallback *This, ULONG cRootRefs, ObjectID rootRefIds[]);HRESULT (__stdcall *SecurityCheck)(ICorProfilerCallback *This, ThreadID threadId);HRESULT (__stdcall *ExceptionThrown)(ICorProfilerCallback *This, ObjectID thrownObjectId);HRESULT (__stdcall *ExceptionSearchFunctionEnter)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionSearchFunctionLeave)(ICorProfilerCallback *This);HRESULT (__stdcall *ExceptionSearchFilterEnter)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionSearchFilterLeave)(ICorProfilerCallback *This);HRESULT (__stdcall *ExceptionSearchCatcherFound)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionOSHandlerEnter)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionOSHandlerLeave)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionUnwindFunctionEnter)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionUnwindFunctionLeave)(ICorProfilerCallback *This);HRESULT (__stdcall *ExceptionUnwindFinallyEnter)(ICorProfilerCallback *This, FunctionID functionId);HRESULT (__stdcall *ExceptionUnwindFinallyLeave)(ICorProfilerCallback *This);HRESULT (__stdcall *ExceptionCatcherEnter)(ICorProfilerCallback *This, FunctionID functionId, ObjectID objectId);HRESULT (__stdcall *ExceptionCatcherLeave)(ICorProfilerCallback *This);HRESULT (__stdcall *COMClassicWrapperCreated)(ICorProfilerCallback *This, ClassID wrappedClassId, const GUID *const implementedIID, void *pUnk, ULONG cSlots);HRESULT (__stdcall *COMClassicWrapperDestroyed)(ICorProfilerCallback *This, ClassID wrappedClassId, const GUID *const implementedIID, void *pUnk);};
struct ICorProfilerInfo {struct ICorProfilerInfoVtbl *lpVtbl;};
struct ICorProfilerInfoVtbl {HRESULT (__stdcall *QueryInterface)(ICorProfilerInfo *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorProfilerInfo *This);ULONG (__stdcall *Release)(ICorProfilerInfo *This);HRESULT (__stdcall *GetClassFromObject)(ICorProfilerInfo *This, ObjectID objectId, ClassID *pClassId);HRESULT (__stdcall *GetClassFromToken)(ICorProfilerInfo *This, ModuleID moduleId, mdTypeDef typeDef, ClassID *pClassId);HRESULT (__stdcall *GetCodeInfo)(ICorProfilerInfo *This, FunctionID functionId, LPCBYTE *pStart, ULONG *pcSize);HRESULT (__stdcall *GetEventMask)(ICorProfilerInfo *This, DWORD *pdwEvents);HRESULT (__stdcall *GetFunctionFromIP)(ICorProfilerInfo *This, LPCBYTE ip, FunctionID *pFunctionId);HRESULT (__stdcall *GetFunctionFromToken)(ICorProfilerInfo *This, ModuleID moduleId, mdToken token, FunctionID *pFunctionId);HRESULT (__stdcall *GetHandleFromThread)(ICorProfilerInfo *This, ThreadID threadId, HANDLE *phThread);HRESULT (__stdcall *GetObjectSize)(ICorProfilerInfo *This, ObjectID objectId, ULONG32 *pcSize);HRESULT (__stdcall *GetStaticClassSize)(ICorProfilerInfo *This, ClassID classId, ULONG *pcStaticSize);HRESULT (__stdcall *GetThreadInfo)(ICorProfilerInfo *This, ThreadID threadId, DWORD *pdwWin32ThreadId);HRESULT (__stdcall *GetCurrentThreadID)(ICorProfilerInfo *This, ThreadID *pThreadId);HRESULT (__stdcall *GetClassIDInfo)(ICorProfilerInfo *This, ClassID classId, ModuleID *pModuleId, mdTypeDef *pTypeDefToken);HRESULT (__stdcall *GetFunctionInfo)(ICorProfilerInfo *This, FunctionID functionId, ClassID *pClassId, ModuleID *pModuleId, mdToken *pToken);HRESULT (__stdcall *SetEventMask)(ICorProfilerInfo *This, DWORD dwEvents);HRESULT (__stdcall *SetEnterLeaveFunctionHooks)(ICorProfilerInfo *This, FunctionEnter *pFuncEnter, FunctionLeave *pFuncLeave, FunctionTailcall *pFuncTailcall);HRESULT (__stdcall *SetFunctionIDMapper)(ICorProfilerInfo *This, FunctionIDMapper *pFunc);HRESULT (__stdcall *SetILMapFlag)(ICorProfilerInfo *This);HRESULT (__stdcall *GetTokenAndMetaDataFromFunction)(ICorProfilerInfo *This, FunctionID functionId, const IID *const riid, IUnknown **ppImport, mdToken *pToken);HRESULT (__stdcall *GetModuleInfo)(ICorProfilerInfo *This, ModuleID moduleId, LPCBYTE *ppBaseLoadAddress, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[], mdModule *pModuleToken, AssemblyID *pAssemblyId);HRESULT (__stdcall *GetModuleMetaData)(ICorProfilerInfo *This, ModuleID moduleId, DWORD dwOpenFlags, const IID *const riid, IUnknown **ppOut);HRESULT (__stdcall *GetILFunctionBody)(ICorProfilerInfo *This, ModuleID moduleId, mdMethodDef methodId, LPCBYTE *ppMethodHeader, ULONG *pcbMethodSize);HRESULT (__stdcall *GetILFunctionBodyAllocator)(ICorProfilerInfo *This, ModuleID moduleId, IMethodMalloc **ppMalloc);HRESULT (__stdcall *SetILFunctionBody)(ICorProfilerInfo *This, ModuleID moduleId, mdMethodDef methodid, LPCBYTE pbNewILMethodHeader);HRESULT (__stdcall *GetAppDomainInfo)(ICorProfilerInfo *This, AppDomainID appDomainId, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[], ProcessID *pProcessId);HRESULT (__stdcall *GetAssemblyInfo)(ICorProfilerInfo *This, AssemblyID assemblyId, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[], AppDomainID *pAppDomainId, ModuleID *pModuleId);HRESULT (__stdcall *SetFunctionReJIT)(ICorProfilerInfo *This, FunctionID functionId);HRESULT (__stdcall *ForceGC)(ICorProfilerInfo *This);HRESULT (__stdcall *SetILInstrumentedCodeMap)(ICorProfilerInfo *This, FunctionID functionId, BOOL fStartJit, ULONG32 cILMapEntries, COR_IL_MAP rgILMapEntries[]);HRESULT (__stdcall *GetInprocInspectionInterface)(ICorProfilerInfo *This, IUnknown **ppicd);HRESULT (__stdcall *GetInprocInspectionIThisThread)(ICorProfilerInfo *This, IUnknown **ppicd);HRESULT (__stdcall *GetThreadContext)(ICorProfilerInfo *This, ThreadID threadId, ContextID *pContextId);};
struct ICorPublish {struct ICorPublishVtbl *lpVtbl;};
struct ICorPublishAppDomain {struct ICorPublishAppDomainVtbl *lpVtbl;};
struct ICorPublishAppDomainEnum {struct ICorPublishAppDomainEnumVtbl *lpVtbl;};
struct ICorPublishAppDomainEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorPublishAppDomainEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorPublishAppDomainEnum *This);ULONG (__stdcall *Release)(ICorPublishAppDomainEnum *This);HRESULT (__stdcall *Skip)(ICorPublishAppDomainEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorPublishAppDomainEnum *This);HRESULT (__stdcall *Clone)(ICorPublishAppDomainEnum *This, ICorPublishEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorPublishAppDomainEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorPublishAppDomainEnum *This, ULONG celt, ICorPublishAppDomain *objects[], ULONG *pceltFetched);};
struct ICorPublishAppDomainVtbl {HRESULT (__stdcall *QueryInterface)(ICorPublishAppDomain *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorPublishAppDomain *This);ULONG (__stdcall *Release)(ICorPublishAppDomain *This);HRESULT (__stdcall *GetID)(ICorPublishAppDomain *This, ULONG32 *puId);HRESULT (__stdcall *GetName)(ICorPublishAppDomain *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);};
struct ICorPublishEnum {struct ICorPublishEnumVtbl *lpVtbl;};
struct ICorPublishEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorPublishEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorPublishEnum *This);ULONG (__stdcall *Release)(ICorPublishEnum *This);HRESULT (__stdcall *Skip)(ICorPublishEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorPublishEnum *This);HRESULT (__stdcall *Clone)(ICorPublishEnum *This, ICorPublishEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorPublishEnum *This, ULONG *pcelt);};
struct ICorPublishProcess {struct ICorPublishProcessVtbl *lpVtbl;};
struct ICorPublishProcessEnum {struct ICorPublishProcessEnumVtbl *lpVtbl;};
struct ICorPublishProcessEnumVtbl {HRESULT (__stdcall *QueryInterface)(ICorPublishProcessEnum *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorPublishProcessEnum *This);ULONG (__stdcall *Release)(ICorPublishProcessEnum *This);HRESULT (__stdcall *Skip)(ICorPublishProcessEnum *This, ULONG celt);HRESULT (__stdcall *Reset)(ICorPublishProcessEnum *This);HRESULT (__stdcall *Clone)(ICorPublishProcessEnum *This, ICorPublishEnum **ppEnum);HRESULT (__stdcall *GetCount)(ICorPublishProcessEnum *This, ULONG *pcelt);HRESULT (__stdcall *Next)(ICorPublishProcessEnum *This, ULONG celt, ICorPublishProcess *objects[], ULONG *pceltFetched);};
struct ICorPublishProcessVtbl {HRESULT (__stdcall *QueryInterface)(ICorPublishProcess *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorPublishProcess *This);ULONG (__stdcall *Release)(ICorPublishProcess *This);HRESULT (__stdcall *IsManaged)(ICorPublishProcess *This, BOOL *pbManaged);HRESULT (__stdcall *EnumAppDomains)(ICorPublishProcess *This, ICorPublishAppDomainEnum **ppEnum);HRESULT (__stdcall *GetProcessID)(ICorPublishProcess *This, unsigned int *pid);HRESULT (__stdcall *GetDisplayName)(ICorPublishProcess *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);};
struct ICorPublishVtbl {HRESULT (__stdcall *QueryInterface)(ICorPublish *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorPublish *This);ULONG (__stdcall *Release)(ICorPublish *This);HRESULT (__stdcall *EnumProcesses)(ICorPublish *This, COR_PUB_ENUMPROCESS Type, ICorPublishProcessEnum **ppIEnum);HRESULT (__stdcall *GetProcess)(ICorPublish *This, unsigned int pid, ICorPublishProcess **ppProcess);};
struct ICorRuntimeHost {struct ICorRuntimeHostVtbl *lpVtbl;};
struct ICorRuntimeHostVtbl {HRESULT (__stdcall *QueryInterface)(ICorRuntimeHost *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorRuntimeHost *This);ULONG (__stdcall *Release)(ICorRuntimeHost *This);HRESULT (__stdcall *VerifyClassesInModule)(ICorRuntimeHost *This, DWORD BaseAddress);HRESULT (__stdcall *CreateFiberInfo)(ICorRuntimeHost *This);HRESULT (__stdcall *DeleteFiber)(ICorRuntimeHost *This);HRESULT (__stdcall *SwitchFiberIn)(ICorRuntimeHost *This, DWORD *pFiberCookie);HRESULT (__stdcall *SwitchFiberOut)(ICorRuntimeHost *This, DWORD **pFiberCookie);HRESULT (__stdcall *MapFile)(ICorRuntimeHost *This, ULONG hFile, HMODULE *hMapAddress);HRESULT (__stdcall *GetConfiguration)(ICorRuntimeHost *This, ICorConfiguration **pConfiguration);HRESULT (__stdcall *Start)(ICorRuntimeHost *This);HRESULT (__stdcall *Stop)(ICorRuntimeHost *This);HRESULT (__stdcall *CreateDomain)(ICorRuntimeHost *This, LPWSTR pwzFriendlyName, IUnknown *pIdentityArray, IUnknown *pPolicyArray, IUnknown **pAppDomain);HRESULT (__stdcall *CreateDomainProxy)(ICorRuntimeHost *This, LPWSTR pwzFriendlyName, IUnknown *pIdentityArray, IUnknown *pPolicyArray, IUnknown **pDomainProxy);HRESULT (__stdcall *GetDefaultDomain)(ICorRuntimeHost *This, IUnknown **pAppDomain);HRESULT (__stdcall *EnumDomains)(ICorRuntimeHost *This, HDOMAINENUM *hEnum);HRESULT (__stdcall *NextDomain)(ICorRuntimeHost *This, HDOMAINENUM hEnum, IUnknown **pAppDomain);HRESULT (__stdcall *ResetDomainEnum)(ICorRuntimeHost *This, HDOMAINENUM hEnum);HRESULT (__stdcall *CloseEnum)(ICorRuntimeHost *This, HDOMAINENUM hEnum);HRESULT (__stdcall *VerifyAssembly)(ICorRuntimeHost *This, BYTE *pbModule, DWORD cbModule, LONG *errors, DWORD errorSize, DWORD *errorCount);HRESULT (__stdcall *VerifyAssemblyFile)(ICorRuntimeHost *This, LPWSTR MIDL_0015, LONG *errors, DWORD errorSize, DWORD *errorCount);};
struct ICorThreadpool {struct ICorThreadpoolVtbl *lpVtbl;};
struct ICorThreadpoolVtbl {HRESULT (__stdcall *QueryInterface)(ICorThreadpool *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ICorThreadpool *This);ULONG (__stdcall *Release)(ICorThreadpool *This);HRESULT (__stdcall *CorRegisterWaitForSingleObject)(ICorThreadpool *This, HANDLE *phNewWaitObject, HANDLE hWaitObject, WAITORTIMERCALLBACK Callback, PVOID Context, ULONG timeout, BOOL executeOnlyOnce, BOOL *result);HRESULT (__stdcall *CorUnregisterWait)(ICorThreadpool *This, HANDLE hWaitObject, HANDLE CompletionEvent, BOOL *result);HRESULT (__stdcall *CorQueueUserWorkItem)(ICorThreadpool *This, LPTHREAD_START_ROUTINE Function, PVOID Context, BOOL executeOnlyOnce, BOOL *result);HRESULT (__stdcall *CorCreateTimer)(ICorThreadpool *This, HANDLE *phNewTimer, WAITORTIMERCALLBACK Callback, PVOID Parameter, DWORD DueTime, DWORD Period, BOOL *result);HRESULT (__stdcall *CorChangeTimer)(ICorThreadpool *This, HANDLE Timer, ULONG DueTime, ULONG Period, BOOL *result);HRESULT (__stdcall *CorDeleteTimer)(ICorThreadpool *This, HANDLE Timer, HANDLE CompletionEvent, BOOL *result);HRESULT (__stdcall *CorBindIoCompletionCallback)(ICorThreadpool *This, HANDLE fileHandle, LPOVERLAPPED_COMPLETION_ROUTINE callback);};
struct IDebuggerThreadControl {struct IDebuggerThreadControlVtbl *lpVtbl;};
struct IDebuggerThreadControlVtbl {HRESULT (__stdcall *QueryInterface)(IDebuggerThreadControl *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IDebuggerThreadControl *This);ULONG (__stdcall *Release)(IDebuggerThreadControl *This);HRESULT (__stdcall *ThreadIsBlockingForDebugger)(IDebuggerThreadControl *This);HRESULT (__stdcall *ReleaseAllRuntimeThreads)(IDebuggerThreadControl *This);};
struct IGCHost {struct IGCHostVtbl *lpVtbl;};
struct IGCHostControl {struct IGCHostControlVtbl *lpVtbl;};
struct IGCHostControlVtbl {HRESULT (__stdcall *QueryInterface)(IGCHostControl *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IGCHostControl *This);ULONG (__stdcall *Release)(IGCHostControl *This);HRESULT (__stdcall *RequestVirtualMemLimit)(IGCHostControl *This, SIZE_T sztMaxVirtualMemMB, SIZE_T *psztNewMaxVirtualMemMB);};
struct IGCHostVtbl {HRESULT (__stdcall *QueryInterface)(IGCHost *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IGCHost *This);ULONG (__stdcall *Release)(IGCHost *This);HRESULT (__stdcall *SetGCStartupLimits)(IGCHost *This, DWORD SegmentSize, DWORD MaxGen0Size);HRESULT (__stdcall *Collect)(IGCHost *This, DWORD Generation);HRESULT (__stdcall *GetStats)(IGCHost *This, COR_GC_STATS *pStats);HRESULT (__stdcall *GetThreadStats)(IGCHost *This, DWORD *pFiberCookie, COR_GC_THREAD_STATS *pStats);HRESULT (__stdcall *SetVirtualMemLimit)(IGCHost *This, SIZE_T sztMaxVirtualMemMB);};
struct IGCThreadControl {struct IGCThreadControlVtbl *lpVtbl;};
struct IGCThreadControlVtbl {HRESULT (__stdcall *QueryInterface)(IGCThreadControl *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IGCThreadControl *This);ULONG (__stdcall *Release)(IGCThreadControl *This);HRESULT (__stdcall *ThreadIsBlockingForSuspension)(IGCThreadControl *This);HRESULT (__stdcall *SuspensionStarting)(IGCThreadControl *This);HRESULT (__stdcall *SuspensionEnding)(IGCThreadControl *This, DWORD Generation);};
struct IHostFilter {struct IHostFilterVtbl *lpVtbl;};
struct IHostFilterVtbl {HRESULT (__stdcall *MarkToken)(mdToken tk);};
struct ILoader {struct ILoaderVtbl *lpVtbl;};
struct ILoaderVtbl {HRESULT (__stdcall *QueryInterface)(ILoader *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ILoader *This);ULONG (__stdcall *Release)(ILoader *This);HRESULT (__stdcall *LoadModule)(ILoader *This, LPWSTR fileName, byte *pe, unsigned int *pulSize);HRESULT (__stdcall *UnloadModule)(ILoader *This, LPWSTR fileName, byte *pe);};
struct IMAGE_COR20_HEADER {ULONG cb;USHORT MajorRuntimeVersion;USHORT MinorRuntimeVersion;IMAGE_DATA_DIRECTORY MetaData;ULONG Flags;ULONG EntryPointToken;IMAGE_DATA_DIRECTORY Resources;IMAGE_DATA_DIRECTORY StrongNameSignature;IMAGE_DATA_DIRECTORY CodeManagerTable;IMAGE_DATA_DIRECTORY VTableFixups;IMAGE_DATA_DIRECTORY ExportAddressTableJumps;IMAGE_DATA_DIRECTORY ManagedNativeHeader;};
struct IMAGE_COR_FIXUPENTRY {ULONG ulRVA;ULONG Count;};
union IMAGE_COR_ILMETHOD {IMAGE_COR_ILMETHOD_TINY Tiny;IMAGE_COR_ILMETHOD_FAT Fat;};
struct IMAGE_COR_ILMETHOD_FAT {unsigned __int32 Flags : 12;unsigned __int32 Size : 4;unsigned __int32 MaxStack : 16;DWORD CodeSize;mdSignature LocalVarSigTok;};
union IMAGE_COR_ILMETHOD_SECT_EH {IMAGE_COR_ILMETHOD_SECT_EH_SMALL Small;IMAGE_COR_ILMETHOD_SECT_EH_FAT Fat;};
struct IMAGE_COR_ILMETHOD_SECT_EH_CLAUSE_FAT {CorExceptionFlag Flags;DWORD TryOffset;DWORD TryLength;DWORD HandlerOffset;DWORD HandlerLength;union {DWORD ClassToken;DWORD FilterOffset;};};
union IMAGE_COR_ILMETHOD_SECT_EH_CLAUSE_FAT::$97EB6520089C60904EC79B11B3B4B333 {DWORD ClassToken;DWORD FilterOffset;};
struct IMAGE_COR_ILMETHOD_SECT_EH_CLAUSE_SMALL {__int32 Flags : 16;unsigned __int32 TryOffset : 16;unsigned __int32 TryLength : 8;unsigned __int32 HandlerOffset : 16;unsigned __int32 HandlerLength : 8;union {DWORD ClassToken;DWORD FilterOffset;};};
union IMAGE_COR_ILMETHOD_SECT_EH_CLAUSE_SMALL::$97EB6520089C60904EC79B11B3B4B333 {DWORD ClassToken;DWORD FilterOffset;};
struct IMAGE_COR_ILMETHOD_SECT_EH_FAT {IMAGE_COR_ILMETHOD_SECT_FAT SectFat;IMAGE_COR_ILMETHOD_SECT_EH_CLAUSE_FAT Clauses[1];};
struct IMAGE_COR_ILMETHOD_SECT_EH_SMALL {IMAGE_COR_ILMETHOD_SECT_SMALL SectSmall;WORD Reserved;IMAGE_COR_ILMETHOD_SECT_EH_CLAUSE_SMALL Clauses[1];};
struct IMAGE_COR_ILMETHOD_SECT_FAT {unsigned __int32 Kind : 8;unsigned __int32 DataSize : 24;};
struct IMAGE_COR_ILMETHOD_SECT_SMALL {BYTE Kind;BYTE DataSize;};
struct IMAGE_COR_ILMETHOD_TINY {BYTE Flags_CodeSize;};
struct IMAGE_COR_MIH_ENTRY {ULONG EHRVA;ULONG MethodRVA;mdToken Token;BYTE Flags;BYTE CodeManager;BYTE MIHData[];};
struct IMAGE_COR_NATIVE_DESCRIPTOR {DWORD GCInfo;DWORD EHInfo;};
struct IMAGE_COR_VTABLEFIXUP {ULONG RVA;USHORT Count;USHORT Type;};
struct IMAGE_COR_X86_RUNTIME_FUNCTION_ENTRY {ULONG BeginAddress;ULONG EndAddress;ULONG MIH;};
struct IManagedObject {struct IManagedObjectVtbl *lpVtbl;};
struct IManagedObjectVtbl {HRESULT (__stdcall *QueryInterface)(IManagedObject *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IManagedObject *This);ULONG (__stdcall *Release)(IManagedObject *This);HRESULT (__stdcall *GetProcessID)(IManagedObject *This, BSTR *pBSTRGUID, BOOL *fIsConfigurable);HRESULT (__stdcall *RemoteDispatch)(IManagedObject *This, BSTR *pBSTR);HRESULT (__stdcall *GetSerializedBuffer)(IManagedObject *This, BSTR *pBSTR);HRESULT (__stdcall *GetInProcCCW)(IManagedObject *This, unsigned int *pCCW);};
struct IMapToken {struct IMapTokenVtbl *lpVtbl;};
struct IMapTokenVtbl {HRESULT (__stdcall *Map)(mdToken tkImp, mdToken tkEmit);};
struct IMetaDataAssemblyEmit {struct IMetaDataAssemblyEmitVtbl *lpVtbl;};
struct IMetaDataAssemblyEmitVtbl {HRESULT (__stdcall *DefineAssembly)(const void *pbOriginator, ULONG cbOriginator, ULONG ulHashAlgId, LPCWSTR szName, const ASSEMBLYMETADATA *pMetaData, LPCWSTR szTitle, LPCWSTR szDescription, LPCWSTR szDefaultAlias, DWORD dwAssemblyFlags, mdAssembly *pma);HRESULT (__stdcall *DefineAssemblyRef)(const void *pbOriginator, ULONG cbOriginator, LPCWSTR szName, const ASSEMBLYMETADATA *pMetaData, const void *pbHashValue, ULONG cbHashValue, mdExecutionLocation tkExecutionLocation, DWORD dwAssemblyRefFlags, mdAssemblyRef *pmdar);HRESULT (__stdcall *DefineFile)(LPCWSTR szName, const void *pbHashValue, ULONG cbHashValue, DWORD dwFileFlags, mdFile *pmdf);HRESULT (__stdcall *DefineComType)(LPCWSTR szName, LPCWSTR szDescription, mdToken tkImplementation, mdTypeDef tkTypeDef, mdExecutionLocation tkExecutionLocation, DWORD dwComTypeFlags, mdComType *pmdct);HRESULT (__stdcall *DefineManifestResource)(LPCWSTR szName, LPCWSTR szDescription, mdToken tkImplementation, DWORD dwOffset, LPCWSTR szMIMEType, LPCWSTR szLocale, DWORD dwResourceFlags, mdManifestResource *pmdmr);HRESULT (__stdcall *DefineExecutionLocation)(LPCWSTR szName, LPCWSTR szDescription, LPCWSTR szLocation, DWORD dwExecutionLocationFlags, mdExecutionLocation *pmdel);HRESULT (__stdcall *SetAssemblyRefProps)(mdAssemblyRef ar, const void *pbOriginator, ULONG cbOriginator, LPCWSTR szName, const ASSEMBLYMETADATA *pMetaData, const void *pbHashValue, ULONG cbHashValue, mdExecutionLocation tkExecutionLocation, DWORD dwAssemblyRefFlags);HRESULT (__stdcall *SetFileProps)(mdFile file, const void *pbHashValue, ULONG cbHashValue, DWORD dwFileFlags);HRESULT (__stdcall *SetComTypeProps)(mdComType ct, LPCWSTR szDescription, mdToken tkImplementation, mdTypeDef tkTypeDef, mdExecutionLocation tkExecutionLocation, DWORD dwComTypeFlags);HRESULT (__stdcall *SetManifestResourceProps)(mdManifestResource mr, LPCWSTR szDescription, mdToken tkImplementation, DWORD dwOffset, LPCWSTR szMIMEType, LPCWSTR szLocale, DWORD dwResourceFlags);};
struct IMetaDataAssemblyImport {struct IMetaDataAssemblyImportVtbl *lpVtbl;};
struct IMetaDataAssemblyImportVtbl {HRESULT (__stdcall *GetAssemblyProps)(mdAssembly mda, const void **ppbOriginator, ULONG *pcbOriginator, ULONG *pulHashAlgId, LPWSTR szName, ULONG cchName, ULONG *pchName, ASSEMBLYMETADATA *pMetaData, LPWSTR szTitle, ULONG cchTitle, ULONG *pchTitle, LPWSTR szDescription, ULONG cchDescription, ULONG *pchDescription, LPWSTR szDefaultAlias, ULONG cchDefaultAlias, ULONG *pchDefaultAlias, DWORD *pdwAssemblyFlags);HRESULT (__stdcall *GetAssemblyRefProps)(mdAssemblyRef mdar, const void **ppbOriginator, ULONG *pcbOriginator, LPWSTR szName, ULONG cchName, ULONG *pchName, ASSEMBLYMETADATA *pMetaData, const void **ppbHashValue, ULONG *pcbHashValue, mdExecutionLocation *ptkExecutionLocation, DWORD *pdwAssemblyRefFlags);HRESULT (__stdcall *GetFileProps)(mdFile mdf, LPWSTR szName, ULONG cchName, ULONG *pchName, const void **ppbHashValue, ULONG *pcbHashValue, DWORD *pdwFileFlags);HRESULT (__stdcall *GetComTypeProps)(mdComType mdct, LPWSTR szName, ULONG cchName, ULONG *pchName, LPWSTR szDescription, ULONG cchDescription, ULONG *pchDescription, mdToken *ptkImplementation, mdTypeDef *ptkTypeDef, mdExecutionLocation *ptkExecutionLocation, DWORD *pdwComTypeFlags);HRESULT (__stdcall *GetManifestResourceProps)(mdManifestResource mdmr, LPWSTR szName, ULONG cchName, ULONG *pchName, LPWSTR szDescription, ULONG cchDescription, ULONG *pchDescription, mdToken *ptkImplementation, DWORD *pdwOffset, LPWSTR szMIMEType, ULONG cchMIMEType, ULONG *pchMIMEType, LPWSTR szLocale, ULONG cchLocale, ULONG *pchLocale, DWORD *pdwResourceFlags);HRESULT (__stdcall *GetExecutionLocationProps)(mdExecutionLocation mdel, LPWSTR szName, ULONG cchName, ULONG *pchName, LPWSTR szDescription, ULONG cchDescription, ULONG *pchDescription, LPWSTR szLocation, ULONG cchLocation, ULONG *pchLocation, DWORD *pdwExecutionLocationFlags);HRESULT (__stdcall *EnumAssemblyRefs)(HCORENUM *phEnum, mdAssemblyRef rAssemblyRefs[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumFiles)(HCORENUM *phEnum, mdFile rFiles[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumComTypes)(HCORENUM *phEnum, mdComType rComTypes[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumManifestResources)(HCORENUM *phEnum, mdManifestResource rManifestResources[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumExecutionLocations)(HCORENUM *phEnum, mdExecutionLocation rExecutionLocations[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *GetAssemblyFromScope)(mdAssembly *ptkAssembly);HRESULT (__stdcall *FindComTypeByName)(LPCWSTR szName, mdToken mdtComType, mdComType *ptkComType);HRESULT (__stdcall *FindManifestResourceByName)(LPCWSTR szName, mdManifestResource *ptkManifestResource);void (__stdcall *CloseEnum)(HCORENUM hEnum);HRESULT (__stdcall *FindAssembliesByName)(LPCWSTR szAppBase, LPCWSTR szPrivateBin, LPCWSTR szGlobalBin, LPCWSTR szAssemblyName, IUnknown *ppIUnk[], ULONG cMax, ULONG *pcAssemblies);};
struct IMetaDataCFC {struct IMetaDataCFCVtbl *lpVtbl;};
struct IMetaDataCFCVtbl {HRESULT (__stdcall *GetMethodCode)(mdMethodDef mb, void **ppBytes, ULONG *piSize);HRESULT (__stdcall *GetMaxIndex)(USHORT *index);HRESULT (__stdcall *GetTokenFromIndex)(USHORT index, mdCPToken *pcp);HRESULT (__stdcall *GetTokenValue)(mdCPToken cp, VARIANT *pValue);};
struct IMetaDataConverter {struct IMetaDataConverterVtbl *lpVtbl;};
struct IMetaDataConverterVtbl {HRESULT (__stdcall *GetMetaDataFromTypeInfo)(ITypeInfo *pITI, IMetaDataImport **ppMDI);HRESULT (__stdcall *GetMetaDataFromTypeLib)(ITypeLib *pITL, IMetaDataImport **ppMDI);HRESULT (__stdcall *GetTypeLibFromMetaData)(BSTR strModule, BSTR strTlbName, ITypeLib **ppITL);};
struct IMetaDataDispenser {struct IMetaDataDispenserVtbl *lpVtbl;};
struct IMetaDataDispenserEx {struct IMetaDataDispenserExVtbl *lpVtbl;};
struct IMetaDataDispenserExVtbl {HRESULT (__stdcall *SetOption)(const GUID *const optionid, const VARIANT *value);HRESULT (__stdcall *GetOption)(const GUID *const optionid, VARIANT *pvalue);HRESULT (__stdcall *OpenScopeOnITypeInfo)(ITypeInfo *pITI, DWORD dwOpenFlags, const IID *const riid, IUnknown **ppIUnk);HRESULT (__stdcall *GetCORSystemDirectory)(LPWSTR szBuffer, DWORD cchBuffer, DWORD *pchBuffer);HRESULT (__stdcall *FindAssembly)(LPCWSTR szAppBase, LPCWSTR szPrivateBin, LPCWSTR szGlobalBin, LPCWSTR szAssemblyName, LPCWSTR szName, ULONG cchName, ULONG *pcName);HRESULT (__stdcall *FindAssemblyModule)(LPCWSTR szAppBase, LPCWSTR szPrivateBin, LPCWSTR szGlobalBin, LPCWSTR szAssemblyName, LPCWSTR szModuleName, LPWSTR szName, ULONG cchName, ULONG *pcName);};
struct IMetaDataDispenserVtbl {HRESULT (__stdcall *DefineScope)(const CLSID *const rclsid, DWORD dwCreateFlags, const IID *const riid, IUnknown **ppIUnk);HRESULT (__stdcall *OpenScope)(LPCWSTR szScope, DWORD dwOpenFlags, const IID *const riid, IUnknown **ppIUnk);HRESULT (__stdcall *OpenScopeOnMemory)(LPCVOID pData, ULONG cbData, DWORD dwOpenFlags, const IID *const riid, IUnknown **ppIUnk);};
struct IMetaDataEmit {struct IMetaDataEmitVtbl *lpVtbl;};
struct IMetaDataEmitVtbl {HRESULT (__stdcall *SetModuleProps)(LPCWSTR szName);HRESULT (__stdcall *Save)(LPCWSTR szFile, DWORD dwSaveFlags);HRESULT (__stdcall *SaveToStream)(IStream *pIStream, DWORD dwSaveFlags);HRESULT (__stdcall *GetSaveSize)(CorSaveSize fSave, DWORD *pdwSaveSize);HRESULT (__stdcall *DefineTypeDef)(LPCWSTR szTypeDef, CLASSVERSION *pVer, DWORD dwTypeDefFlags, mdToken tkExtends, mdToken rtkImplements[], mdTypeDef *ptd);HRESULT (__stdcall *DefineNestedType)(LPCWSTR szTypeDef, CLASSVERSION *pVer, DWORD dwTypeDefFlags, mdToken tkExtends, mdToken rtkImplements[], mdTypeDef tdEncloser, mdTypeDef *ptd);HRESULT (__stdcall *SetHandler)(IUnknown *pUnk);HRESULT (__stdcall *DefineMethod)(mdTypeDef td, LPCWSTR szName, DWORD dwMethodFlags, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, ULONG ulCodeRVA, DWORD dwImplFlags, mdMethodDef *pmd);HRESULT (__stdcall *DefineMethodImpl)(mdTypeDef td, mdToken tkBody, mdToken tkDecl);HRESULT (__stdcall *DefineTypeRefByName)(mdToken tkResolutionScope, LPCWSTR szName, mdTypeRef *ptr);HRESULT (__stdcall *DefineImportType)(IMetaDataAssemblyImport *pAssemImport, const void *pbHashValue, ULONG cbHashValue, mdExecutionLocation tkExec, IMetaDataImport *pImport, mdTypeDef tdImport, IMetaDataAssemblyEmit *pAssemEmit, mdTypeRef *ptr);HRESULT (__stdcall *DefineMemberRef)(mdToken tkImport, LPCWSTR szName, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, mdMemberRef *pmr);HRESULT (__stdcall *DefineImportMember)(IMetaDataAssemblyImport *pAssemImport, const void *pbHashValue, ULONG cbHashValue, mdExecutionLocation tkExec, IMetaDataImport *pImport, mdToken mbMember, IMetaDataAssemblyEmit *pAssemEmit, mdToken tkParent, mdMemberRef *pmr);HRESULT (__stdcall *DefineEvent)(mdTypeDef td, LPCWSTR szEvent, DWORD dwEventFlags, mdToken tkEventType, mdMethodDef mdAddOn, mdMethodDef mdRemoveOn, mdMethodDef mdFire, mdMethodDef rmdOtherMethods[], mdEvent *pmdEvent);HRESULT (__stdcall *SetClassLayout)(mdTypeDef td, DWORD dwPackSize, COR_FIELD_OFFSET rFieldOffsets[], ULONG ulClassSize);HRESULT (__stdcall *DeleteClassLayout)(mdTypeDef td);HRESULT (__stdcall *SetFieldMarshal)(mdToken tk, PCCOR_SIGNATURE pvNativeType, ULONG cbNativeType);HRESULT (__stdcall *DeleteFieldMarshal)(mdToken tk);HRESULT (__stdcall *DefinePermissionSet)(mdToken tk, DWORD dwAction, const void *pvPermission, ULONG cbPermission, mdPermission *ppm);HRESULT (__stdcall *SetRVA)(mdMethodDef md, ULONG ulRVA);HRESULT (__stdcall *GetTokenFromSig)(PCCOR_SIGNATURE pvSig, ULONG cbSig, mdSignature *pmsig);HRESULT (__stdcall *DefineModuleRef)(LPCWSTR szName, mdModuleRef *pmur);HRESULT (__stdcall *SetParent)(mdMemberRef mr, mdToken tk);HRESULT (__stdcall *GetTokenFromTypeSpec)(PCCOR_SIGNATURE pvSig, ULONG cbSig, mdTypeSpec *ptypespec);HRESULT (__stdcall *SaveToMemory)(void *pbData, ULONG cbData);HRESULT (__stdcall *SetSymbolBindingPath)(const GUID *const FormatID, LPCWSTR szSymbolDataPath);HRESULT (__stdcall *DefineUserString)(LPCWSTR szString, ULONG cchString, mdString *pstk);HRESULT (__stdcall *DeleteToken)(mdToken tkObj);HRESULT (__stdcall *SetMethodProps)(mdMethodDef md, DWORD dwMethodFlags, ULONG ulCodeRVA, DWORD dwImplFlags);HRESULT (__stdcall *SetTypeDefProps)(mdTypeDef td, CLASSVERSION *pVer, DWORD dwTypeDefFlags, mdToken tkExtends, mdToken rtkImplements[]);HRESULT (__stdcall *SetEventProps)(mdEvent ev, DWORD dwEventFlags, mdToken tkEventType, mdMethodDef mdAddOn, mdMethodDef mdRemoveOn, mdMethodDef mdFire, mdMethodDef rmdOtherMethods[]);HRESULT (__stdcall *SetPermissionSetProps)(mdToken tk, DWORD dwAction, const void *pvPermission, ULONG cbPermission, mdPermission *ppm);HRESULT (__stdcall *DefinePinvokeMap)(mdToken tk, DWORD dwMappingFlags, LPCWSTR szImportName, mdModuleRef mrImportDLL);HRESULT (__stdcall *SetPinvokeMap)(mdToken tk, DWORD dwMappingFlags, LPCWSTR szImportName, mdModuleRef mrImportDLL);HRESULT (__stdcall *DeletePinvokeMap)(mdToken tk);HRESULT (__stdcall *DefineCustomAttribute)(mdToken tkObj, mdToken tkType, const void *pCustomValue, ULONG cbCustomValue, mdCustomValue *pcv);HRESULT (__stdcall *SetCustomAttributeValue)(mdCustomValue pcv, const void *pCustomValue, ULONG cbCustomValue);HRESULT (__stdcall *DefineField)(mdTypeDef td, LPCWSTR szName, DWORD dwFieldFlags, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, DWORD dwCPlusTypeFlag, const void *pValue, ULONG cchValue, mdFieldDef *pmd);HRESULT (__stdcall *DefineProperty)(mdTypeDef td, LPCWSTR szProperty, DWORD dwPropFlags, PCCOR_SIGNATURE pvSig, ULONG cbSig, DWORD dwCPlusTypeFlag, const void *pValue, ULONG cchValue, mdMethodDef mdSetter, mdMethodDef mdGetter, mdMethodDef rmdOtherMethods[], mdFieldDef fdBackingField, mdProperty *pmdProp);HRESULT (__stdcall *DefineParam)(mdMethodDef md, ULONG ulParamSeq, LPCWSTR szName, DWORD dwParamFlags, DWORD dwCPlusTypeFlag, const void *pValue, ULONG cchValue, mdParamDef *ppd);HRESULT (__stdcall *SetFieldProps)(mdFieldDef fd, DWORD dwFieldFlags, DWORD dwCPlusTypeFlag, const void *pValue, ULONG cchValue);HRESULT (__stdcall *SetPropertyProps)(mdProperty pr, DWORD dwPropFlags, DWORD dwCPlusTypeFlag, const void *pValue, ULONG cchValue, mdMethodDef mdSetter, mdMethodDef mdGetter, mdMethodDef rmdOtherMethods[], mdFieldDef fdBackingField);HRESULT (__stdcall *SetParamProps)(mdParamDef pd, LPCWSTR szName, DWORD dwParamFlags, DWORD dwCPlusTypeFlag, const void *pValue, ULONG cchValue);HRESULT (__stdcall *DefineSecurityAttribute)(mdToken tkObj, mdMemberRef tkCtor, const void *pCustomValue, ULONG cbCustomValue);HRESULT (__stdcall *DefineSecurityAttributeSet)(mdToken tkObj, COR_SECATTR rSecAttrs[], ULONG cSecAttrs, ULONG *pulErrorAttr);HRESULT (__stdcall *ApplyEditAndContinue)(IUnknown *pImport);HRESULT (__stdcall *TranslateSigWithScope)(IMetaDataAssemblyImport *pAssemImport, const void *pbHashValue, ULONG cbHashValue, mdExecutionLocation tkExec, IMetaDataImport *import, PCCOR_SIGNATURE pbSigBlob, ULONG cbSigBlob, IMetaDataAssemblyEmit *pAssemEmit, IMetaDataEmit *emit, PCOR_SIGNATURE pvTranslatedSig, ULONG cbTranslatedSigMax, ULONG *pcbTranslatedSig);HRESULT (__stdcall *SetMethodImplFlags)(mdMethodDef md, DWORD dwImplFlags);HRESULT (__stdcall *SetFieldRVA)(mdFieldDef fd, ULONG ulRVA);HRESULT (__stdcall *MergeEx)(IMetaDataImport *pImport, IMapToken *pHostMapToken, IUnknown *pHandler);HRESULT (__stdcall *MergeEndEx)();HRESULT (__stdcall *Merge)(IMetaDataImport *pImport, IMapToken *pIMap);HRESULT (__stdcall *MergeEnd)();};
struct IMetaDataError {struct IMetaDataErrorVtbl *lpVtbl;};
struct IMetaDataErrorVtbl {HRESULT (__stdcall *OnError)(HRESULT hrError, mdToken token);};
struct IMetaDataFilter {struct IMetaDataFilterVtbl *lpVtbl;};
struct IMetaDataFilterVtbl {HRESULT (__stdcall *UnmarkAll)();HRESULT (__stdcall *MarkToken)(mdToken tk);HRESULT (__stdcall *IsTokenMarked)(mdToken tk, BOOL *pIsMarked);};
struct IMetaDataImport {struct IMetaDataImportVtbl *lpVtbl;};
struct IMetaDataImportVtbl {void (__stdcall *CloseEnum)(HCORENUM hEnum);HRESULT (__stdcall *CountEnum)(HCORENUM hEnum, ULONG *pulCount);HRESULT (__stdcall *ResetEnum)(HCORENUM hEnum, ULONG ulPos);HRESULT (__stdcall *EnumTypeDefs)(HCORENUM *phEnum, mdTypeDef rTypeDefs[], ULONG cMax, ULONG *pcTypeDefs);HRESULT (__stdcall *EnumInterfaceImpls)(HCORENUM *phEnum, mdTypeDef td, mdInterfaceImpl rImpls[], ULONG cMax, ULONG *pcImpls);HRESULT (__stdcall *EnumTypeRefs)(HCORENUM *phEnum, mdTypeRef rTypeRefs[], ULONG cMax, ULONG *pcTypeRefs);HRESULT (__stdcall *FindTypeDefByName)(LPCWSTR szTypeDef, mdToken tkEnclosingClass, mdTypeDef *ptd);HRESULT (__stdcall *GetScopeProps)(LPWSTR szName, ULONG cchName, ULONG *pchName, GUID *pmvid);HRESULT (__stdcall *GetModuleFromScope)(mdModule *pmd);HRESULT (__stdcall *GetTypeDefProps)(mdTypeDef td, LPWSTR szTypeDef, ULONG cchTypeDef, ULONG *pchTypeDef, CLASSVERSION *pver, DWORD *pdwTypeDefFlags, mdToken *ptkExtends);HRESULT (__stdcall *GetInterfaceImplProps)(mdInterfaceImpl iiImpl, mdTypeDef *pClass, mdToken *ptkIface);HRESULT (__stdcall *GetTypeRefProps)(mdTypeRef tr, mdToken *ptkResolutionScope, LPWSTR szName, ULONG cchName, ULONG *pchName);HRESULT (__stdcall *ResolveTypeRef)(mdTypeRef tr, const IID *const riid, IUnknown **ppIScope, mdTypeDef *ptd);HRESULT (__stdcall *EnumMembers)(HCORENUM *phEnum, mdTypeDef cl, mdToken rMembers[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumMembersWithName)(HCORENUM *phEnum, mdTypeDef cl, LPCWSTR szName, mdToken rMembers[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumMethods)(HCORENUM *phEnum, mdTypeDef cl, mdMethodDef rMethods[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumMethodsWithName)(HCORENUM *phEnum, mdTypeDef cl, LPCWSTR szName, mdMethodDef rMethods[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumFields)(HCORENUM *phEnum, mdTypeDef cl, mdFieldDef rFields[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumFieldsWithName)(HCORENUM *phEnum, mdTypeDef cl, LPCWSTR szName, mdFieldDef rFields[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumParams)(HCORENUM *phEnum, mdMethodDef mb, mdParamDef rParams[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumMemberRefs)(HCORENUM *phEnum, mdToken tkParent, mdMemberRef rMemberRefs[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumMethodImpls)(HCORENUM *phEnum, mdTypeDef td, mdToken rMethodBody[], mdToken rMethodDecl[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *EnumPermissionSets)(HCORENUM *phEnum, mdToken tk, DWORD dwActions, mdPermission rPermission[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *FindMember)(mdTypeDef td, LPCWSTR szName, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, mdToken *pmb);HRESULT (__stdcall *FindMethod)(mdTypeDef td, LPCWSTR szName, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, mdMethodDef *pmb);HRESULT (__stdcall *FindField)(mdTypeDef td, LPCWSTR szName, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, mdFieldDef *pmb);HRESULT (__stdcall *FindMemberRef)(mdTypeRef td, LPCWSTR szName, PCCOR_SIGNATURE pvSigBlob, ULONG cbSigBlob, mdMemberRef *pmr);HRESULT (__stdcall *GetMethodProps)(mdMethodDef mb, mdTypeDef *pClass, LPWSTR szMethod, ULONG cchMethod, ULONG *pchMethod, DWORD *pdwAttr, PCCOR_SIGNATURE *ppvSigBlob, ULONG *pcbSigBlob, ULONG *pulCodeRVA, DWORD *pdwImplFlags);HRESULT (__stdcall *GetMemberRefProps)(mdMemberRef mr, mdToken *ptk, LPWSTR szMember, ULONG cchMember, ULONG *pchMember, PCCOR_SIGNATURE *ppvSigBlob, ULONG *pbSig);HRESULT (__stdcall *EnumProperties)(HCORENUM *phEnum, mdTypeDef td, mdProperty rProperties[], ULONG cMax, ULONG *pcProperties);HRESULT (__stdcall *EnumEvents)(HCORENUM *phEnum, mdTypeDef td, mdEvent rEvents[], ULONG cMax, ULONG *pcEvents);HRESULT (__stdcall *GetEventProps)(mdEvent ev, mdTypeDef *pClass, LPCWSTR szEvent, ULONG cchEvent, ULONG *pchEvent, DWORD *pdwEventFlags, mdToken *ptkEventType, mdMethodDef *pmdAddOn, mdMethodDef *pmdRemoveOn, mdMethodDef *pmdFire, mdMethodDef rmdOtherMethod[], ULONG cMax, ULONG *pcOtherMethod);HRESULT (__stdcall *EnumMethodSemantics)(HCORENUM *phEnum, mdMethodDef mb, mdToken rEventProp[], ULONG cMax, ULONG *pcEventProp);HRESULT (__stdcall *GetMethodSemantics)(mdMethodDef mb, mdToken tkEventProp, DWORD *pdwSemanticsFlags);HRESULT (__stdcall *GetClassLayout)(mdTypeDef td, DWORD *pdwPackSize, COR_FIELD_OFFSET rFieldOffset[], ULONG cMax, ULONG *pcFieldOffset, ULONG *pulClassSize);HRESULT (__stdcall *GetFieldMarshal)(mdToken tk, PCCOR_SIGNATURE *ppvNativeType, ULONG *pcbNativeType);HRESULT (__stdcall *GetRVA)(mdToken tk, ULONG *pulCodeRVA, DWORD *pdwImplFlags);HRESULT (__stdcall *GetPermissionSetProps)(mdPermission pm, DWORD *pdwAction, const void **ppvPermission, ULONG *pcbPermission);HRESULT (__stdcall *GetSigFromToken)(mdSignature mdSig, PCCOR_SIGNATURE *ppvSig, ULONG *pcbSig);HRESULT (__stdcall *GetModuleRefProps)(mdModuleRef mur, LPWSTR szName, ULONG cchName, ULONG *pchName);HRESULT (__stdcall *EnumModuleRefs)(HCORENUM *phEnum, mdModuleRef rModuleRefs[], ULONG cmax, ULONG *pcModuleRefs);HRESULT (__stdcall *GetTypeSpecFromToken)(mdTypeSpec typespec, PCCOR_SIGNATURE *ppvSig, ULONG *pcbSig);HRESULT (__stdcall *GetNameFromToken)(mdToken tk, MDUTF8CSTR *pszUtf8NamePtr);HRESULT (__stdcall *GetSymbolBindingPath)(GUID *pFormatID, LPWSTR szSymbolDataPath, ULONG cchSymbolDataPath, ULONG *pcbSymbolDataPath);HRESULT (__stdcall *EnumUnresolvedMethods)(HCORENUM *phEnum, mdToken rMethods[], ULONG cMax, ULONG *pcTokens);HRESULT (__stdcall *GetUserString)(mdString stk, LPWSTR szString, ULONG cchString, ULONG *pchString);HRESULT (__stdcall *GetPinvokeMap)(mdToken tk, DWORD *pdwMappingFlags, LPWSTR szImportName, ULONG cchImportName, ULONG *pchImportName, mdModuleRef *pmrImportDLL);HRESULT (__stdcall *EnumSignatures)(HCORENUM *phEnum, mdSignature rSignatures[], ULONG cmax, ULONG *pcSignatures);HRESULT (__stdcall *EnumTypeSpecs)(HCORENUM *phEnum, mdTypeSpec rTypeSpecs[], ULONG cmax, ULONG *pcTypeSpecs);HRESULT (__stdcall *EnumUserStrings)(HCORENUM *phEnum, mdString rStrings[], ULONG cmax, ULONG *pcStrings);HRESULT (__stdcall *GetParamForMethodIndex)(mdMethodDef md, ULONG ulParamSeq, mdParamDef *ppd);HRESULT (__stdcall *EnumCustomAttributes)(HCORENUM *phEnum, mdToken tk, mdToken tkType, mdCustomValue rCustomValues[], ULONG cMax, ULONG *pcCustomValues);HRESULT (__stdcall *GetCustomAttributeProps)(mdCustomValue cv, mdToken *ptkObj, mdToken *ptkType, const void **ppBlob, ULONG *pcbSize);HRESULT (__stdcall *FindTypeRef)(mdToken tkResolutionScope, LPCWSTR szName, mdTypeRef *ptr);HRESULT (__stdcall *GetMemberProps)(mdToken mb, mdTypeDef *pClass, LPWSTR szMember, ULONG cchMember, ULONG *pchMember, DWORD *pdwAttr, PCCOR_SIGNATURE *ppvSigBlob, ULONG *pcbSigBlob, ULONG *pulCodeRVA, DWORD *pdwImplFlags, DWORD *pdwCPlusTypeFlag, const void **ppValue, ULONG *pcbValue);HRESULT (__stdcall *GetFieldProps)(mdFieldDef mb, mdTypeDef *pClass, LPWSTR szField, ULONG cchField, ULONG *pchField, DWORD *pdwAttr, PCCOR_SIGNATURE *ppvSigBlob, ULONG *pcbSigBlob, DWORD *pdwCPlusTypeFlag, const void **ppValue, ULONG *pcbValue);HRESULT (__stdcall *GetPropertyProps)(mdProperty prop, mdTypeDef *pClass, LPCWSTR szProperty, ULONG cchProperty, ULONG *pchProperty, DWORD *pdwPropFlags, PCCOR_SIGNATURE *ppvSig, ULONG *pbSig, DWORD *pdwCPlusTypeFlag, const void **ppDefaultValue, ULONG *pcbDefaultValue, mdMethodDef *pmdSetter, mdMethodDef *pmdGetter, mdMethodDef rmdOtherMethod[], ULONG cMax, ULONG *pcOtherMethod, mdFieldDef *pmdBackingField);HRESULT (__stdcall *GetParamProps)(mdParamDef tk, mdMethodDef *pmd, ULONG *pulSequence, LPWSTR szName, ULONG cchName, ULONG *pchName, DWORD *pdwAttr, DWORD *pdwCPlusTypeFlag, const void **ppValue, ULONG *pcbValue);HRESULT (__stdcall *GetCustomAttributeByName)(mdToken tkObj, LPCWSTR szName, const void **ppData, ULONG *pcbData);BOOL (__stdcall *IsValidToken)(mdToken tk);HRESULT (__stdcall *GetNestedClassProps)(mdTypeDef tdNestedClass, mdTypeDef *ptdEnclosingClass);HRESULT (__stdcall *GetNativeCallConvFromSig)(const void *pvSig, ULONG cbSig, ULONG *pCallConv);};
struct IMetaDataTables {struct IMetaDataTablesVtbl *lpVtbl;};
struct IMetaDataTablesVtbl {HRESULT (__stdcall *GetStringHeapSize)(ULONG *pcbStrings);HRESULT (__stdcall *GetBlobHeapSize)(ULONG *pcbBlobs);HRESULT (__stdcall *GetGuidHeapSize)(ULONG *pcbGuids);HRESULT (__stdcall *GetUserStringHeapSize)(ULONG *pcbBlobs);HRESULT (__stdcall *GetNumTables)(ULONG *pcTables);HRESULT (__stdcall *GetTableIndex)(ULONG token, ULONG *pixTbl);HRESULT (__stdcall *GetTableInfo)(ULONG ixTbl, ULONG *pcbRow, ULONG *pcRows, ULONG *pcCols, ULONG *piKey, const char **ppName);HRESULT (__stdcall *GetColumnInfo)(ULONG ixTbl, ULONG ixCol, ULONG *poCol, ULONG *pcbCol, ULONG *pType, const char **ppName);HRESULT (__stdcall *GetCodedTokenInfo)(ULONG ixCdTkn, ULONG *pcTokens, ULONG **ppTokens, const char **ppName);HRESULT (__stdcall *GetRow)(ULONG ixTbl, ULONG rid, void **ppRow);HRESULT (__stdcall *GetColumn)(ULONG ixTbl, ULONG ixCol, ULONG rid, ULONG *pVal);HRESULT (__stdcall *GetString)(ULONG ixString, const char **ppString);HRESULT (__stdcall *GetBlob)(ULONG ixBlob, ULONG *pcbData, const void **ppData);HRESULT (__stdcall *GetGuid)(ULONG ixGuid, const GUID **ppGUID);HRESULT (__stdcall *GetUserString)(ULONG ixUserString, ULONG *pcbData, const void **ppData);};
struct IMetaDataValidate {struct IMetaDataValidateVtbl *lpVtbl;};
struct IMetaDataValidateVtbl {HRESULT (__stdcall *ValidatorInit)(DWORD dwModuleType, IUnknown *pUnk);HRESULT (__stdcall *ValidateMetaData)();};
struct IMethodMalloc {struct IMethodMallocVtbl *lpVtbl;};
struct IMethodMallocVtbl {HRESULT (__stdcall *QueryInterface)(IMethodMalloc *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IMethodMalloc *This);ULONG (__stdcall *Release)(IMethodMalloc *This);void *(__stdcall *Alloc)(IMethodMalloc *This, ULONG cb);};
struct IObjectHandle {struct IObjectHandleVtbl *lpVtbl;};
struct IObjectHandleVtbl {HRESULT (__stdcall *QueryInterface)(IObjectHandle *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IObjectHandle *This);ULONG (__stdcall *Release)(IObjectHandle *This);HRESULT (__stdcall *Unwrap)(IObjectHandle *This, VARIANT *ppv);};
struct ISymUnmanagedBinder {struct ISymUnmanagedBinderVtbl *lpVtbl;};
struct ISymUnmanagedBinderVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedBinder *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedBinder *This);ULONG (__stdcall *Release)(ISymUnmanagedBinder *This);HRESULT (__stdcall *GetReaderForFile)(ISymUnmanagedBinder *This, IUnknown *importer, const WCHAR *fileName, const WCHAR *searchPath, ISymUnmanagedReader **pRetVal);HRESULT (__stdcall *GetReaderFromStream)(ISymUnmanagedBinder *This, IUnknown *importer, IStream *pstream, ISymUnmanagedReader **pRetVal);};
struct ISymUnmanagedDocument {struct ISymUnmanagedDocumentVtbl *lpVtbl;};
struct ISymUnmanagedDocumentVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedDocument *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedDocument *This);ULONG (__stdcall *Release)(ISymUnmanagedDocument *This);HRESULT (__stdcall *GetURL)(ISymUnmanagedDocument *This, ULONG32 cchUrl, ULONG32 *pcchUrl, WCHAR szUrl[]);HRESULT (__stdcall *GetDocumentType)(ISymUnmanagedDocument *This, GUID *pRetVal);HRESULT (__stdcall *GetLanguage)(ISymUnmanagedDocument *This, GUID *pRetVal);HRESULT (__stdcall *GetLanguageVendor)(ISymUnmanagedDocument *This, GUID *pRetVal);HRESULT (__stdcall *GetCheckSumAlgorithmId)(ISymUnmanagedDocument *This, GUID *pRetVal);HRESULT (__stdcall *GetCheckSum)(ISymUnmanagedDocument *This, ULONG32 cData, ULONG32 *pcData, BYTE data[]);HRESULT (__stdcall *FindClosestLine)(ISymUnmanagedDocument *This, ULONG32 line, ULONG32 *pRetVal);HRESULT (__stdcall *HasEmbeddedSource)(ISymUnmanagedDocument *This, BOOL *pRetVal);HRESULT (__stdcall *GetSourceLength)(ISymUnmanagedDocument *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetSourceRange)(ISymUnmanagedDocument *This, ULONG32 startLine, ULONG32 startColumn, ULONG32 endLine, ULONG32 endColumn, ULONG32 cSourceBytes, ULONG32 *pcSourceBytes, BYTE source[]);};
struct ISymUnmanagedDocumentWriter {struct ISymUnmanagedDocumentWriterVtbl *lpVtbl;};
struct ISymUnmanagedDocumentWriterVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedDocumentWriter *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedDocumentWriter *This);ULONG (__stdcall *Release)(ISymUnmanagedDocumentWriter *This);HRESULT (__stdcall *SetSource)(ISymUnmanagedDocumentWriter *This, ULONG32 sourceSize, BYTE source[]);HRESULT (__stdcall *SetCheckSum)(ISymUnmanagedDocumentWriter *This, GUID algorithmId, ULONG32 checkSumSize, BYTE checkSum[]);};
struct ISymUnmanagedMethod {struct ISymUnmanagedMethodVtbl *lpVtbl;};
struct ISymUnmanagedMethodVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedMethod *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedMethod *This);ULONG (__stdcall *Release)(ISymUnmanagedMethod *This);HRESULT (__stdcall *GetToken)(ISymUnmanagedMethod *This, mdMethodDef *pToken);HRESULT (__stdcall *GetSequencePointCount)(ISymUnmanagedMethod *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetRootScope)(ISymUnmanagedMethod *This, ISymUnmanagedScope **pRetVal);HRESULT (__stdcall *GetScopeFromOffset)(ISymUnmanagedMethod *This, ULONG32 offset, ISymUnmanagedScope **pRetVal);HRESULT (__stdcall *GetOffset)(ISymUnmanagedMethod *This, ISymUnmanagedDocument *document, ULONG32 line, ULONG32 column, ULONG32 *pRetVal);HRESULT (__stdcall *GetRanges)(ISymUnmanagedMethod *This, ISymUnmanagedDocument *document, ULONG32 line, ULONG32 column, ULONG32 cRanges, ULONG32 *pcRanges, ULONG32 ranges[]);HRESULT (__stdcall *GetParameters)(ISymUnmanagedMethod *This, ULONG32 cParams, ULONG32 *pcParams, ISymUnmanagedVariable *params[]);HRESULT (__stdcall *GetNamespace)(ISymUnmanagedMethod *This, ISymUnmanagedNamespace **pRetVal);HRESULT (__stdcall *GetSourceStartEnd)(ISymUnmanagedMethod *This, ISymUnmanagedDocument *docs[2], ULONG32 lines[2], ULONG32 columns[2], BOOL *pRetVal);HRESULT (__stdcall *GetSequencePoints)(ISymUnmanagedMethod *This, ULONG32 cPoints, ULONG32 *pcPoints, ULONG32 offsets[], ISymUnmanagedDocument *documents[], ULONG32 lines[], ULONG32 columns[], ULONG32 endLines[], ULONG32 endColumns[]);};
struct ISymUnmanagedNamespace {struct ISymUnmanagedNamespaceVtbl *lpVtbl;};
struct ISymUnmanagedNamespaceVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedNamespace *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedNamespace *This);ULONG (__stdcall *Release)(ISymUnmanagedNamespace *This);HRESULT (__stdcall *GetName)(ISymUnmanagedNamespace *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);HRESULT (__stdcall *GetNamespaces)(ISymUnmanagedNamespace *This, ULONG32 cNameSpaces, ULONG32 *pcNameSpaces, ISymUnmanagedNamespace *namespaces[]);HRESULT (__stdcall *GetVariables)(ISymUnmanagedNamespace *This, ULONG32 cVars, ULONG32 *pcVars, ISymUnmanagedVariable *pVars[]);};
struct ISymUnmanagedReader {struct ISymUnmanagedReaderVtbl *lpVtbl;};
struct ISymUnmanagedReaderVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedReader *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedReader *This);ULONG (__stdcall *Release)(ISymUnmanagedReader *This);HRESULT (__stdcall *GetDocument)(ISymUnmanagedReader *This, WCHAR *url, GUID language, GUID languageVendor, GUID documentType, ISymUnmanagedDocument **pRetVal);HRESULT (__stdcall *GetDocuments)(ISymUnmanagedReader *This, ULONG32 cDocs, ULONG32 *pcDocs, ISymUnmanagedDocument *pDocs[]);HRESULT (__stdcall *GetUserEntryPoint)(ISymUnmanagedReader *This, mdMethodDef *pToken);HRESULT (__stdcall *GetMethod)(ISymUnmanagedReader *This, mdMethodDef token, ISymUnmanagedMethod **pRetVal);HRESULT (__stdcall *GetMethodByVersion)(ISymUnmanagedReader *This, mdMethodDef token, int version, ISymUnmanagedMethod **pRetVal);HRESULT (__stdcall *GetVariables)(ISymUnmanagedReader *This, mdToken parent, ULONG32 cVars, ULONG32 *pcVars, ISymUnmanagedVariable *pVars[]);HRESULT (__stdcall *GetGlobalVariables)(ISymUnmanagedReader *This, ULONG32 cVars, ULONG32 *pcVars, ISymUnmanagedVariable *pVars[]);HRESULT (__stdcall *GetMethodFromDocumentPosition)(ISymUnmanagedReader *This, ISymUnmanagedDocument *document, ULONG32 line, ULONG32 column, ISymUnmanagedMethod **pRetVal);HRESULT (__stdcall *GetSymAttribute)(ISymUnmanagedReader *This, mdToken parent, WCHAR *name, ULONG32 cBuffer, ULONG32 *pcBuffer, BYTE buffer[]);HRESULT (__stdcall *GetNamespaces)(ISymUnmanagedReader *This, ULONG32 cNameSpaces, ULONG32 *pcNameSpaces, ISymUnmanagedNamespace *namespaces[]);HRESULT (__stdcall *Initialize)(ISymUnmanagedReader *This, IUnknown *importer, const WCHAR *filename, const WCHAR *searchPath, IStream *pIStream);HRESULT (__stdcall *UpdateSymbolStore)(ISymUnmanagedReader *This, const WCHAR *filename, IStream *pIStream);HRESULT (__stdcall *ReplaceSymbolStore)(ISymUnmanagedReader *This, const WCHAR *filename, IStream *pIStream);HRESULT (__stdcall *GetSymbolStoreFileName)(ISymUnmanagedReader *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);};
struct ISymUnmanagedScope {struct ISymUnmanagedScopeVtbl *lpVtbl;};
struct ISymUnmanagedScopeVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedScope *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedScope *This);ULONG (__stdcall *Release)(ISymUnmanagedScope *This);HRESULT (__stdcall *GetMethod)(ISymUnmanagedScope *This, ISymUnmanagedMethod **pRetVal);HRESULT (__stdcall *GetParent)(ISymUnmanagedScope *This, ISymUnmanagedScope **pRetVal);HRESULT (__stdcall *GetChildren)(ISymUnmanagedScope *This, ULONG32 cChildren, ULONG32 *pcChildren, ISymUnmanagedScope *children[]);HRESULT (__stdcall *GetStartOffset)(ISymUnmanagedScope *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetEndOffset)(ISymUnmanagedScope *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetLocalCount)(ISymUnmanagedScope *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetLocals)(ISymUnmanagedScope *This, ULONG32 cLocals, ULONG32 *pcLocals, ISymUnmanagedVariable *locals[]);HRESULT (__stdcall *GetNamespaces)(ISymUnmanagedScope *This, ULONG32 cNameSpaces, ULONG32 *pcNameSpaces, ISymUnmanagedNamespace *namespaces[]);};
struct ISymUnmanagedVariable {struct ISymUnmanagedVariableVtbl *lpVtbl;};
struct ISymUnmanagedVariableVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedVariable *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedVariable *This);ULONG (__stdcall *Release)(ISymUnmanagedVariable *This);HRESULT (__stdcall *GetName)(ISymUnmanagedVariable *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);HRESULT (__stdcall *GetAttributes)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetSignature)(ISymUnmanagedVariable *This, ULONG32 cSig, ULONG32 *pcSig, BYTE sig[]);HRESULT (__stdcall *GetAddressKind)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetAddressField1)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetAddressField2)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetAddressField3)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetStartOffset)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);HRESULT (__stdcall *GetEndOffset)(ISymUnmanagedVariable *This, ULONG32 *pRetVal);};
struct ISymUnmanagedWriter {struct ISymUnmanagedWriterVtbl *lpVtbl;};
struct ISymUnmanagedWriterVtbl {HRESULT (__stdcall *QueryInterface)(ISymUnmanagedWriter *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(ISymUnmanagedWriter *This);ULONG (__stdcall *Release)(ISymUnmanagedWriter *This);HRESULT (__stdcall *DefineDocument)(ISymUnmanagedWriter *This, const WCHAR *url, const GUID *language, const GUID *languageVendor, const GUID *documentType, ISymUnmanagedDocumentWriter **pRetVal);HRESULT (__stdcall *SetUserEntryPoint)(ISymUnmanagedWriter *This, mdMethodDef entryMethod);HRESULT (__stdcall *OpenMethod)(ISymUnmanagedWriter *This, mdMethodDef method);HRESULT (__stdcall *CloseMethod)(ISymUnmanagedWriter *This);HRESULT (__stdcall *OpenScope)(ISymUnmanagedWriter *This, ULONG32 startOffset, ULONG32 *pRetVal);HRESULT (__stdcall *CloseScope)(ISymUnmanagedWriter *This, ULONG32 endOffset);HRESULT (__stdcall *SetScopeRange)(ISymUnmanagedWriter *This, ULONG32 scopeID, ULONG32 startOffset, ULONG32 endOffset);HRESULT (__stdcall *DefineLocalVariable)(ISymUnmanagedWriter *This, const WCHAR *name, ULONG32 attributes, ULONG32 cSig, unsigned __int8 signature[], ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3, ULONG32 startOffset, ULONG32 endOffset);HRESULT (__stdcall *DefineParameter)(ISymUnmanagedWriter *This, const WCHAR *name, ULONG32 attributes, ULONG32 sequence, ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3);HRESULT (__stdcall *DefineField)(ISymUnmanagedWriter *This, mdTypeDef parent, const WCHAR *name, ULONG32 attributes, ULONG32 cSig, unsigned __int8 signature[], ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3);HRESULT (__stdcall *DefineGlobalVariable)(ISymUnmanagedWriter *This, const WCHAR *name, ULONG32 attributes, ULONG32 cSig, unsigned __int8 signature[], ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3);HRESULT (__stdcall *Close)(ISymUnmanagedWriter *This);HRESULT (__stdcall *SetSymAttribute)(ISymUnmanagedWriter *This, mdToken parent, const WCHAR *name, ULONG32 cData, unsigned __int8 data[]);HRESULT (__stdcall *OpenNamespace)(ISymUnmanagedWriter *This, const WCHAR *name);HRESULT (__stdcall *CloseNamespace)(ISymUnmanagedWriter *This);HRESULT (__stdcall *UsingNamespace)(ISymUnmanagedWriter *This, const WCHAR *fullName);HRESULT (__stdcall *SetMethodSourceRange)(ISymUnmanagedWriter *This, ISymUnmanagedDocumentWriter *startDoc, ULONG32 startLine, ULONG32 startColumn, ISymUnmanagedDocumentWriter *endDoc, ULONG32 endLine, ULONG32 endColumn);HRESULT (__stdcall *Initialize)(ISymUnmanagedWriter *This, IUnknown *emitter, const WCHAR *filename, IStream *pIStream, BOOL fFullBuild);HRESULT (__stdcall *GetDebugInfo)(ISymUnmanagedWriter *This, IMAGE_DEBUG_DIRECTORY *pIDD, DWORD cData, DWORD *pcData, BYTE data[]);HRESULT (__stdcall *DefineSequencePoints)(ISymUnmanagedWriter *This, ISymUnmanagedDocumentWriter *document, ULONG32 spCount, ULONG32 offsets[], ULONG32 lines[], ULONG32 columns[], ULONG32 endLines[], ULONG32 endColumns[]);HRESULT (__stdcall *RemapToken)(ISymUnmanagedWriter *This, mdToken oldToken, mdToken newToken);};
struct IVEHandler {struct IVEHandlerVtbl *lpVtbl;};
struct IVEHandlerVtbl {HRESULT (__stdcall *QueryInterface)(IVEHandler *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IVEHandler *This);ULONG (__stdcall *Release)(IVEHandler *This);HRESULT (__stdcall *VEHandler)(IVEHandler *This, HRESULT VECode, VEContext Context, SAFEARRAY *psa);HRESULT (__stdcall *SetReporterFtn)(IVEHandler *This, __int64 lFnPtr);};
struct IValidator {struct IValidatorVtbl *lpVtbl;};
struct IValidatorVtbl {HRESULT (__stdcall *QueryInterface)(IValidator *This, const IID *const riid, void **ppvObject);ULONG (__stdcall *AddRef)(IValidator *This);ULONG (__stdcall *Release)(IValidator *This);HRESULT (__stdcall *Validate)(IValidator *This, IVEHandler *veh, ILoader *loader, unsigned int ulFlags, unsigned int ulMaxError, unsigned int token, LPWSTR fileName, byte *pe, unsigned int ulSize);HRESULT (__stdcall *FormatEventInfo)(IValidator *This, HRESULT hVECode, VEContext Context, LPWSTR msg, unsigned int ulMaxLength, SAFEARRAY *psa);};
enum LogSwitchCallReason {SWITCH_CREATE = 0x0,SWITCH_MODIFY = 0x1,SWITCH_DELETE = 0x2,};
enum LoggingLevelEnum {LTraceLevel0 = 0x0,LTraceLevel1 = 0x1,LTraceLevel2 = 0x2,LTraceLevel3 = 0x3,LTraceLevel4 = 0x4,LStatusLevel0 = 0x14,LStatusLevel1 = 0x15,LStatusLevel2 = 0x16,LStatusLevel3 = 0x17,LStatusLevel4 = 0x18,LWarningLevel = 0x28,LErrorLevel = 0x32,LPanicLevel = 0x64,};
enum MACRO_CEE {CEE_E_ENTRYPOINT = 0x80131000,};
enum MACRO_CLDB {CLDB_E_FILE_BADREAD = 0x80131100,CLDB_E_FILE_BADWRITE = 0x80131101,CLDB_E_FILE_READONLY = 0x80131103,CLDB_E_NAME_ERROR = 0x80131105,CLDB_S_TRUNCATION = 0x131106,CLDB_E_TRUNCATION = 0x80131106,CLDB_E_FILE_OLDVER = 0x80131107,CLDB_E_RELOCATED = 0x80131108,CLDB_S_NULL = 0x131109,CLDB_E_SMDUPLICATE = 0x8013110A,CLDB_E_NO_DATA = 0x8013110B,CLDB_E_READONLY = 0x8013110C,CLDB_E_INCOMPATIBLE = 0x8013110D,CLDB_E_FILE_CORRUPT = 0x8013110E,CLDB_E_SCHEMA_VERNOTFOUND = 0x8013110F,CLDB_E_BADUPDATEMODE = 0x80131110,CLDB_E_INDEX_NONULLKEYS = 0x80131121,CLDB_E_INDEX_DUPLICATE = 0x80131122,CLDB_E_INDEX_BADTYPE = 0x80131123,CLDB_E_INDEX_NOTFOUND = 0x80131124,CLDB_S_INDEX_TABLESCANREQUIRED = 0x131125,CLDB_E_RECORD_NOTFOUND = 0x80131130,CLDB_E_RECORD_OVERFLOW = 0x80131131,CLDB_E_RECORD_DUPLICATE = 0x80131132,CLDB_E_RECORD_PKREQUIRED = 0x80131133,CLDB_E_RECORD_DELETED = 0x80131134,CLDB_E_RECORD_OUTOFORDER = 0x80131135,CLDB_E_COLUMN_OVERFLOW = 0x80131140,CLDB_E_COLUMN_READONLY = 0x80131141,CLDB_E_COLUMN_SPECIALCOL = 0x80131142,CLDB_E_COLUMN_PKNONULLS = 0x80131143,CLDB_E_TABLE_CANTDROP = 0x80131150,CLDB_E_OBJECT_NOTFOUND = 0x80131151,CLDB_E_OBJECT_COLNOTFOUND = 0x80131152,CLDB_E_VECTOR_BADINDEX = 0x80131153,CLDB_E_TOO_BIG = 0x80131154,};
enum MACRO_CLDB_E {CLDB_E_INTERNALERROR = 0x80131FFF,};
enum MACRO_COR {COR_NATIVE_LINK_CUSTOM_VALUE_CC = 18,};
enum MACRO_CORDBG {CORDBG_E_UNRECOVERABLE_ERROR = 0x80131300,CORDBG_E_PROCESS_TERMINATED = 0x80131301,CORDBG_E_PROCESS_NOT_SYNCHRONIZED = 0x80131302,CORDBG_E_CLASS_NOT_LOADED = 0x80131303,CORDBG_E_IL_VAR_NOT_AVAILABLE = 0x80131304,CORDBG_E_BAD_REFERENCE_VALUE = 0x80131305,CORDBG_E_FIELD_NOT_AVAILABLE = 0x80131306,CORDBG_E_NON_NATIVE_FRAME = 0x80131307,CORDBG_E_NONCONTINUABLE_EXCEPTION = 0x80131308,CORDBG_E_CODE_NOT_AVAILABLE = 0x80131309,CORDBG_E_FUNCTION_NOT_IL = 0x8013130A,CORDBG_S_BAD_START_SEQUENCE_POINT = 0x13130B,CORDBG_S_BAD_END_SEQUENCE_POINT = 0x13130C,CORDBG_E_INSUFFICIENT_INFO_FOR_SET_IP = 0x13130D,CORDBG_E_CANT_SET_IP_INTO_FINALLY = 0x8013130E,CORDBG_E_CANT_SET_IP_OUT_OF_FINALLY = 0x8013130F,CORDBG_E_CANT_SET_IP_INTO_CATCH = 0x80131310,CORDBG_E_SET_IP_NOT_ALLOWED_ON_NONLEAF_FRAME = 0x80131311,CORDBG_E_SET_IP_IMPOSSIBLE = 0x80131312,CORDBG_E_FUNC_EVAL_BAD_START_POINT = 0x80131313,CORDBG_E_INVALID_OBJECT = 0x80131314,CORDBG_E_FUNC_EVAL_NOT_COMPLETE = 0x80131315,CORDBG_S_FUNC_EVAL_HAS_NO_RESULT = 0x131316,CORDBG_S_VALUE_POINTS_TO_VOID = 0x131317,CORDBG_E_INPROC_NOT_IMPL = 0x80131318,CORDBG_S_FUNC_EVAL_ABORTED = 0x131319,CORDBG_E_STATIC_VAR_NOT_AVAILABLE = 0x8013131A,CORDBG_E_OBJECT_IS_NOT_COPYABLE_VALUE_CLASS = 0x8013131B,CORDBG_E_CANT_SETIP_INTO_OR_OUT_OF_FILTER = 0x8013131C,CORDBG_E_CANT_CHANGE_JIT_SETTING_FOR_ZAP_MODULE = 0x8013131D,CORDBG_E_BAD_THREAD_STATE = 0x8013132D,CORDBG_E_DEBUGGER_ALREADY_ATTACHED = 0x8013132E,CORDBG_E_SUPERFLOUS_CONTINUE = 0x8013132F,CORDBG_E_SET_VALUE_NOT_ALLOWED_ON_NONLEAF_FRAME = 0x80131330,CORDBG_E_ENC_EH_MAX_NESTING_LEVEL_CANT_INCREASE = 0x80131331,CORDBG_E_ENC_MODULE_NOT_ENC_ENABLED = 0x80131332,CORDBG_E_SET_IP_NOT_ALLOWED_ON_EXCEPTION = 0x80131333,CORDBG_E_VARIABLE_IS_ACTUALLY_LITERAL = 0x80131334,CORDBG_E_PROCESS_DETACHED = 0x80131335,CORDBG_E_ENC_METHOD_SIG_CHANGED = 0x80131336,CORDBG_E_ENC_METHOD_NO_LOCAL_SIG = 0x80131337,};
enum MACRO_CORPROF {CORPROF_E_FUNCTION_NOT_COMPILED = 0x80131350,CORPROF_E_DATAINCOMPLETE = 0x80131351,CORPROF_E_NOT_REJITABLE_METHODS = 0x80131352,CORPROF_E_CANNOT_UPDATE_METHOD = 0x80131353,CORPROF_E_FUNCTION_NOT_IL = 0x80131354,CORPROF_E_NOT_MANAGED_THREAD = 0x80131355,};
enum MACRO_CORSEC {CORSEC_E_DECODE_SET = 0x80131410,CORSEC_E_ENCODE_SET = 0x80131411,CORSEC_E_UNSUPPORTED_FORMAT = 0x80131412,CORSEC_E_INVALID_ATTR = 0x80131415,CORSEC_E_POLICY_EXCEPTION = 0x80131416,CORSEC_E_MIN_GRANT_FAIL = 0x80131417,CORSEC_E_NO_EXEC_PERM = 0x80131418,};
enum MACRO_COR_E {COR_E_APPLICATION = 0x80131600,COR_E_ARGUMENT = 0x80070057,COR_E_ARGUMENTOUTOFRANGE = 0x80131502,COR_E_ARITHMETIC = 0x80070216,COR_E_ARRAYTYPEMISMATCH = 0x80131503,COR_E_CONTEXTMARSHAL = 0x80131504,COR_E_CORE = 0x80131526,COR_E_DIVIDEBYZERO = 0x80131505,COR_E_EXCEPTION = 0x80131500,COR_E_EXECUTIONENGINE = 0x80131506,COR_E_FIELDACCESS = 0x80131507,COR_E_FORMAT = 0x80131537,COR_E_BADIMAGEFORMAT = 0x8007000B,COR_E_INDEXOUTOFRANGE = 0x80131508,COR_E_INVALIDCAST = 0x80004002,COR_E_INVALIDOPERATION = 0x80131509,COR_E_MEMBERACCESS = 0x8013151A,COR_E_METHODACCESS = 0x80131510,COR_E_MISSINGFIELD = 0x80131511,COR_E_MISSINGMANIFESTRESOURCE = 0x80131532,COR_E_MISSINGMEMBER = 0x80131512,COR_E_MISSINGMETHOD = 0x80131513,COR_E_MULTICASTNOTSUPPORTED = 0x80131514,COR_E_NOTFINITENUMBER = 0x80131528,COR_E_DUPLICATEWAITOBJECT = 0x80131529,COR_E_NOTSUPPORTED = 0x80131515,COR_E_NULLREFERENCE = 0x80004003,COR_E_OUTOFMEMORY = 0x8007000E,COR_E_OVERFLOW = 0x80131516,COR_E_RANK = 0x80131517,COR_E_REMOTING = 0x8013150B,COR_E_SERVER = 0x8013150E,COR_E_SERVICEDCOMPONENT = 0x8013150F,COR_E_SECURITY = 0x8013150A,COR_E_SERIALIZATION = 0x8013150C,COR_E_STACKOVERFLOW = 0x800703E9,COR_E_SYNCHRONIZATIONLOCK = 0x80131518,COR_E_SYSTEM = 0x80131501,COR_E_THREADABORTED = 0x80131530,COR_E_THREADINTERRUPTED = 0x80131519,COR_E_THREADSTATE = 0x80131520,COR_E_THREADSTOP = 0x80131521,COR_E_TYPEINITIALIZATION = 0x80131534,COR_E_TYPELOAD = 0x80131522,COR_E_UNAUTHORIZEDACCESS = 0x80070005,COR_E_VERIFIER = 0x8013150D,COR_E_WEAKREFERENCE = 0x80131525,COR_E_INVALIDCOMOBJECT = 0x80131527,COR_E_INVALIDOLEVARIANTTYPE = 0x80131531,COR_E_COMEMULATE_ERROR = 0x80131535,COR_E_SAFEARRAYTYPEMISMATCH = 0x80131533,COR_E_SAFEARRAYRANKMISMATCH = 0x80131538,COR_E_TARGETPARAMCOUNT = 0x8002000E,COR_E_VTABLECALLSNOTSUPPORTED = 0x80131536,COR_E_AMBIGUOUSMATCH = 0x8000211D,COR_E_INVALIDFILTERCRITERIA = 0x80131601,COR_E_REFLECTIONTYPELOAD = 0x80131602,COR_E_TARGET = 0x80131603,COR_E_TARGETINVOCATION = 0x80131604,COR_E_ENDOFSTREAM = 0x80070026,COR_E_FILENOTFOUND = 0x80070002,COR_E_IO = 0x80131620,COR_E_DIRECTORYNOTFOUND = 0x80070003,COR_E_PATHTOOLONG = 0x800700CE,};
enum MACRO_EXP {HUGE_EXP = 1842,SAFE_EXP = 1023,};
enum MACRO_FHUGE {FHUGE_EXP = 229,FSAFE_EXP = 127,};
enum MACRO_FUSION {FUSION_REF_DEF_MISMATCH = 0x80131040,FUSION_INVALID_PRIVATE_ASM_LOCATION = 0x80131041,FUSION_PRIVATE_ASM_INSTALL_DISALLOWED = 0x80131042,FUSION_SIGNATURE_CHECK_FAILED = 0x80131043,FUSION_MODULE_HASH_CHECK_FAILED = 0x80131044,FUSION_ASSEMBLY_IS_NOT_STRONG_NAME = 0x80131045,};
enum MACRO_ISS {ISS_E_ISOSTORE = 0x80131450,ISS_E_OPEN_STORE_FILE = 0x80131460,ISS_E_OPEN_FILE_MAPPING = 0x80131461,ISS_E_MAP_VIEW_OF_FILE = 0x80131462,ISS_E_GET_FILE_SIZE = 0x80131463,ISS_E_CREATE_MUTEX = 0x80131464,ISS_E_LOCK_FAILED = 0x80131465,ISS_E_FILE_WRITE = 0x80131466,ISS_E_SET_FILE_POINTER = 0x80131467,ISS_E_CREATE_DIR = 0x80131468,ISS_E_CORRUPTED_STORE_FILE = 0x80131480,ISS_E_STORE_VERSION = 0x80131481,ISS_E_FILE_NOT_MAPPED = 0x80131482,ISS_E_BLOCK_SIZE_TOO_SMALL = 0x80131483,ISS_E_ALLOC_TOO_LARGE = 0x80131484,ISS_E_USAGE_WILL_EXCEED_QUOTA = 0x80131485,ISS_E_TABLE_ROW_NOT_FOUND = 0x80131486,ISS_E_DEPRECATE = 0x801314A0,ISS_E_CALLER = 0x801314A1,ISS_E_PATH_LENGTH = 0x801314A2,ISS_E_MACHINE = 0x801314A3,ISS_E_ISOSTORE_START = 0x80131450,ISS_E_ISOSTORE_END = 0x801314FF,};
enum MACRO_LHUGE {LHUGE_EXP = 29490,LSAFE_EXP = 16383,};
enum MACRO_MSCOR_FACILITY {FACILITY_URT = 0x13,};
enum MACRO_MSCOR_FL {FL_ERR = 0,FL_DEC = 1,FL_HEX = 2,FL_INF = 3,FL_NAN = 4,FL_NEG = 8,};
enum MACRO_MSCOR_INF {INF = 1,};
enum MACRO_MSCOR_META {META_E_DUPLICATE = 0x80131180,META_E_GUID_REQUIRED = 0x80131181,META_E_TYPEDEF_MISMATCH = 0x80131182,META_E_MERGE_COLLISION = 0x80131183,META_E_METHD_NOT_FOUND = 0x80131187,META_E_FIELD_NOT_FOUND = 0x80131188,META_S_PARAM_MISMATCH = 0x131189,META_E_PARAM_MISMATCH = 0x80131189,META_E_BADMETADATA = 0x8013118A,META_E_INTFCEIMPL_NOT_FOUND = 0x8013118B,META_E_CLASS_LAYOUT_INCONSISTENT = 0x8013118D,META_E_FIELD_MARSHAL_NOT_FOUND = 0x8013118E,META_E_METHODSEM_NOT_FOUND = 0x8013118F,META_E_EVENT_NOT_FOUND = 0x80131190,META_E_PROP_NOT_FOUND = 0x80131191,META_E_BAD_SIGNATURE = 0x80131192,META_E_BAD_INPUT_PARAMETER = 0x80131193,META_E_METHDIMPL_INCONSISTENT = 0x80131194,META_E_MD_INCONSISTENCY = 0x80131195,META_E_CANNOTRESOLVETYPEREF = 0x80131196,META_S_DUPLICATE = 0x131197,META_E_STRINGSPACE_FULL = 0x80131198,META_E_UNEXPECTED_REMAP = 0x80131199,META_E_HAS_UNMARKALL = 0x8013119A,META_E_MUST_CALL_UNMARKALL = 0x8013119B,META_E_CA_INVALID_TARGET = 0x801311C0,META_E_CA_INVALID_VALUE = 0x801311C1,META_E_CA_INVALID_BLOB = 0x801311C2,META_E_CA_REPEATED_ARG = 0x801311C3,META_E_CA_UNKNOWN_ARGUMENT = 0x801311C4,META_E_CA_VARIANT_NYI = 0x801311C5,META_E_CA_ARRAY_NYI = 0x801311C6,META_E_CA_UNEXPECTED_TYPE = 0x801311C7,META_E_CA_INVALID_ARGTYPE = 0x801311C8,META_E_CA_INVALID_ARG_FOR_TYPE = 0x801311C9,META_E_CA_INVALID_UUID = 0x801311CA,META_E_CA_INVALID_MARSHALAS_FIELDS = 0x801311CB,META_E_CA_NT_FIELDONLY = 0x801311CC,META_E_CA_NEGATIVE_PARAMINDEX = 0x801311CD,META_E_CA_NEGATIVE_MULTIPLIER = 0x801311CE,META_E_CA_NEGATIVE_CONSTSIZE = 0x801311CF,META_E_CA_FIXEDSTR_SIZE_REQUIRED = 0x801311D0,META_E_CA_CUSTMARSH_TYPE_REQUIRED = 0x801311D1,};
enum MACRO_MSCOR_SECURITY {SECURITY_E_XML_TO_ASN_ENCODING = 0x80131400,SECURITY_E_INCOMPATIBLE_SHARE = 0x80131401,};
enum MACRO_MSCOR_SN {SN_CRYPTOAPI_CALL_FAILED = 0x80131413,SN_NO_SUITABLE_CSP = 0x80131414,SN_LEAVE_KEY = 0x1,SN_CMP_DIFFERENT = 0x0,SN_CMP_IDENTICAL = 0x1,SN_CMP_SIGONLY = 0x2,};
enum MACRO_MSCOR_VER {VER_E_HRESULT = 0x80131801,VER_E_OFFSET = 0x80131802,VER_E_OPCODE = 0x80131803,VER_E_OPERAND = 0x80131804,VER_E_TOKEN = 0x80131805,VER_E_EXCEPT = 0x80131806,VER_E_STACK_SLOT = 0x80131807,VER_E_LOC = 0x80131808,VER_E_ARG = 0x80131809,VER_E_FOUND = 0x8013180A,VER_E_EXPECTED = 0x8013180B,VER_E_UNKNOWN_OPCODE = 0x80131810,VER_E_SIG_CALLCONV = 0x80131811,VER_E_SIG_ELEMTYPE = 0x80131812,VER_E_RET_SIG = 0x80131814,VER_E_FIELD_SIG = 0x80131815,VER_E_INTERNAL = 0x80131818,VER_E_STACK_TOO_LARGE = 0x80131819,VER_E_ARRAY_NAME_LONG = 0x8013181A,VER_E_FALLTHRU = 0x80131820,VER_E_TRY_GTEQ_END = 0x80131821,VER_E_TRYEND_GT_CS = 0x80131822,VER_E_HND_GTEQ_END = 0x80131823,VER_E_HNDEND_GT_CS = 0x80131824,VER_E_FLT_GTEQ_CS = 0x80131825,VER_E_TRY_START = 0x80131826,VER_E_HND_START = 0x80131827,VER_E_FLT_START = 0x80131828,VER_E_TRY_OVERLAP = 0x80131829,VER_E_TRY_EQ_HND_FIL = 0x8013182A,VER_E_TRY_SHARE_FIN_FAL = 0x8013182B,VER_E_HND_OVERLAP = 0x8013182C,VER_E_HND_EQ = 0x8013182D,VER_E_FIL_OVERLAP = 0x8013182E,VER_E_FIL_EQ = 0x8013182F,VER_E_FIL_CONT_TRY = 0x80131830,VER_E_FIL_CONT_HND = 0x80131831,VER_E_FIL_CONT_FIL = 0x80131832,VER_E_FIL_GTEQ_CS = 0x80131833,VER_E_FIL_START = 0x80131834,VER_E_FALLTHRU_EXCEP = 0x80131835,VER_E_FALLTHRU_INTO_HND = 0x80131836,VER_E_FALLTHRU_INTO_FIL = 0x80131837,VER_E_LEAVE = 0x80131838,VER_E_RETHROW = 0x80131839,VER_E_ENDFINALLY = 0x8013183A,VER_E_ENDFILTER = 0x8013183B,VER_E_ENDFILTER_MISSING = 0x8013183C,VER_E_BR_INTO_TRY = 0x8013183D,VER_E_BR_INTO_HND = 0x8013183E,VER_E_BR_INTO_FIL = 0x8013183F,VER_E_BR_OUTOF_TRY = 0x80131840,VER_E_BR_OUTOF_HND = 0x80131841,VER_E_BR_OUTOF_FIL = 0x80131842,VER_E_BR_OUTOF_FIN = 0x80131843,VER_E_RET_FROM_TRY = 0x80131844,VER_E_RET_FROM_HND = 0x80131845,VER_E_RET_FROM_FIL = 0x80131846,VER_E_BAD_JMP_TARGET = 0x80131847,VER_E_PATH_LOC = 0x80131848,VER_E_PATH_THIS = 0x80131849,VER_E_PATH_STACK = 0x8013184A,VER_E_PATH_STACK_DEPTH = 0x8013184B,VER_E_THIS = 0x8013184C,VER_E_THIS_UNINIT_EXCEP = 0x8013184D,VER_E_THIS_UNINIT_STORE = 0x8013184E,VER_E_THIS_UNINIT_RET = 0x8013184F,VER_E_THIS_UNINIT_V_RET = 0x80131850,VER_E_THIS_UNINIT_BR = 0x80131851,VER_E_THIS_BYREF_VAL = 0x80131852,VER_E_STACK_NOT_EQ = 0x80131853,VER_E_STACK_UNEXPECTED = 0x80131854,VER_E_STACK_EXCEPTION = 0x80131855,VER_E_STACK_OVERFLOW = 0x80131856,VER_E_STACK_UNDERFLOW = 0x80131857,VER_E_STACK_EMPTY = 0x80131858,VER_E_STACK_UNINIT = 0x80131859,VER_E_STACK_I_I4_I8 = 0x8013185A,VER_E_STACK_R_R4_R8 = 0x8013185B,VER_E_STACK_NO_R_R4_R8 = 0x8013185C,VER_E_STACK_NUMERIC = 0x8013185D,VER_E_STACK_OBJREF = 0x8013185E,VER_E_STACK_P_OBJREF = 0x8013185F,VER_E_STACK_BYREF = 0x80131860,VER_E_STACK_METHOD = 0x80131861,VER_E_STACK_ARRAY_SD = 0x80131862,VER_E_STACK_VALCLASS = 0x80131863,VER_E_STACK_P_VALCLASS = 0x80131864,VER_E_STACK_NO_VALCLASS = 0x80131865,VER_E_LOC_DEAD = 0x80131866,VER_E_LOC_NUM = 0x80131867,VER_E_ARG_NUM = 0x80131868,VER_E_TOKEN_RESOLVE = 0x80131869,VER_E_TOKEN_TYPE = 0x8013186A,VER_E_TOKEN_TYPE_MEMBER = 0x8013186B,VER_E_TOKEN_TYPE_FIELD = 0x8013186C,VER_E_TOKEN_TYPE_SIG = 0x8013186D,VER_E_UNVERIFIABLE = 0x8013186E,VER_E_LDSTR_OPERAND = 0x8013186F,VER_E_RET_BYREF = 0x80131870,VER_E_RET_VOID = 0x80131871,VER_E_RET_MISSING = 0x80131872,VER_E_RET_EMPTY = 0x80131873,VER_E_RET_UNINIT = 0x80131874,VER_E_ARRAY_ACCESS = 0x80131875,VER_E_ARRAY_V_STORE = 0x80131876,VER_E_ARRAY_SD = 0x80131877,VER_E_ARRAY_SD_PTR = 0x80131878,VER_E_ARRAY_FIELD = 0x80131879,VER_E_ARGLIST = 0x8013187A,VER_E_VALCLASS = 0x8013187B,VER_E_METHOD_ACCESS = 0x8013187C,VER_E_FIELD_ACCESS = 0x8013187D,VER_E_DEAD = 0x8013187E,VER_E_FIELD_STATIC = 0x8013187F,VER_E_FIELD_NO_STATIC = 0x80131880,VER_E_ADDR = 0x80131881,VER_E_ADDR_BYREF = 0x80131882,VER_E_ADDR_LITERAL = 0x80131883,VER_E_INITONLY = 0x80131884,VER_E_THROW = 0x80131885,VER_E_CALLVIRT_VALCLASS = 0x80131886,VER_E_CALL_SIG = 0x80131887,VER_E_CALL_STATIC = 0x80131888,VER_E_CTOR = 0x80131889,VER_E_CTOR_VIRT = 0x8013188A,VER_E_CTOR_OR_SUPER = 0x8013188B,VER_E_CTOR_MUL_INIT = 0x8013188C,VER_E_SIG = 0x8013188D,VER_E_SIG_ARRAY = 0x8013188E,VER_E_SIG_ARRAY_PTR = 0x8013188F,VER_E_SIG_ARRAY_BYREF = 0x80131890,VER_E_SIG_ELEM_PTR = 0x80131891,VER_E_SIG_VARARG = 0x80131892,VER_E_SIG_VOID = 0x80131893,VER_E_SIG_BYREF_BYREF = 0x80131894,VER_E_CODE_SIZE_ZERO = 0x80131896,VER_E_BAD_VARARG = 0x80131897,VER_E_TAIL_CALL = 0x80131898,VER_E_TAIL_BYREF = 0x80131899,VER_E_TAIL_RET = 0x8013189A,VER_E_TAIL_RET_VOID = 0x8013189B,VER_E_TAIL_RET_TYPE = 0x8013189C,VER_E_TAIL_STACK_EMPTY = 0x8013189D,VER_E_METHOD_END = 0x8013189E,VER_E_BAD_BRANCH = 0x8013189F,VER_E_FIN_OVERLAP = 0x801318A0,VER_E_LEXICAL_NESTING = 0x801318A1,VER_E_VOLATILE = 0x801318A2,VER_E_UNALIGNED = 0x801318A3,VER_E_INNERMOST_FIRST = 0x801318A4,VER_E_CALLI_VIRTUAL = 0x801318A5,VER_E_CALL_ABSTRACT = 0x801318A6,VER_E_GLOBAL_METHOD = 0x801318A7,VER_E_NOT_IN_GC_HEAP = 0x801318A8,VER_E_TRY_N_EMPTY_STACK = 0x801318A9,VER_E_BAD_PE = 0x801318F0,};
enum MACRO_MSEE {MSEE_E_LOADLIBFAILED = 0x80131010,MSEE_E_GETPROCFAILED = 0x80131011,MSEE_E_MULTCOPIESLOADED = 0x80131012,MSEE_E_CLASSUNLOADED = 0x80131013,MSEE_E_APPDOMAINUNLOADED = 0x80131014,MSEE_E_CANNOTUNLOADAPPDOMAIN = 0x80131015,MSEE_E_ASSEMBLYLOADINPROGRESS = 0x80131016,};
enum MACRO_NAN {NAN = 2,};
enum MACRO_TLBX {TLBX_E_CANT_LOAD_MODULE = 0x801311A0,TLBX_E_CANT_LOAD_CLASS = 0x801311A1,TLBX_E_NULL_MODULE = 0x801311A2,TLBX_E_NO_CLSID_KEY = 0x801311A3,TLBX_E_CIRCULAR_EXPORT = 0x801311A4,TLBX_E_CIRCULAR_IMPORT = 0x801311A5,TLBX_E_BAD_NATIVETYPE = 0x801311A6,TLBX_E_BAD_VTABLE = 0x801311A7,TLBX_E_CRM_NON_STATIC = 0x801311A8,TLBX_E_CRM_INVALID_SIG = 0x801311A9,TLBX_E_CLASS_LOAD_EXCEPTION = 0x801311AA,TLBX_E_UNKNOWN_SIGNATURE = 0x801311AB,TLBX_E_REFERENCED_TYPELIB = 0x801311AC,TLBX_S_REFERENCED_TYPELIB = 0x1311AC,TLBX_E_INVALID_NAMESPACE = 0x801311AD,TLBX_E_LAYOUT_ERROR = 0x801311AE,TLBX_E_NOTIUNKNOWN = 0x801311AF,TLBX_E_NONVISIBLEVALUECLASS = 0x801311B0,TLBX_E_LPTSTR_NOT_ALLOWED = 0x801311B1,TLBX_E_AUTO_CS_NOT_ALLOWED = 0x801311B2,TLBX_S_NOSTDINTERFACE = 0x1311B3,TLBX_S_DUPLICATE_DISPID = 0x1311B4,TLBX_E_ENUM_VALUE_INVALID = 0x801311B5,TLBX_E_DUPLICATE_IID = 0x801311B6,TLBX_E_NO_NESTED_ARRAYS = 0x801311B7,TLBX_E_PARAM_ERROR_NAMED = 0x801311B8,TLBX_E_PARAM_ERROR_UNNAMED = 0x801311B9,TLBX_E_AGNOST_SIGNATURE = 0x801311BA,TLBX_E_CONVERT_FAIL = 0x801311BB,TLBX_W_DUAL_NOT_DISPATCH = 0x801311BC,TLBX_E_INVALID_TYPEINFO = 0x80131160,TLBX_E_INVALID_TYPEINFO_UNNAMED = 0x80131161,TLBX_E_CTX_NESTED = 0x80131162,TLBX_E_ERROR_MESSAGE = 0x80131163,TLBX_E_CANT_SAVE = 0x80131164,TLBX_W_LIBNOTREGISTERED = 0x80131165,TLBX_E_CANTLOADLIBRARY = 0x80131166,TLBX_E_BAD_VT_TYPE = 0x80131167,TLBX_E_NO_MSCOREE_TLB = 0x80131168,TLBX_E_BAD_MSCOREE_TLB = 0x80131169,TLBX_E_TLB_EXCEPTION = 0x8013116A,};
enum MACRO_VLDTR {VLDTR_S_WRN = 0x131200,VLDTR_S_ERR = 0x131201,VLDTR_S_WRNERR = 0x131202,VLDTR_E_RID_OUTOFRANGE = 0x80131203,VLDTR_E_CDTKN_OUTOFRANGE = 0x80131204,VLDTR_E_CDRID_OUTOFRANGE = 0x80131205,VLDTR_E_STRING_INVALID = 0x80131206,VLDTR_E_GUID_INVALID = 0x80131207,VLDTR_E_BLOB_INVALID = 0x80131208,VLDTR_E_MOD_MULTI = 0x80131209,VLDTR_E_MOD_NULLMVID = 0x8013120A,VLDTR_E_TR_NAMENULL = 0x8013120B,VLDTR_E_TR_DUP = 0x8013120C,VLDTR_E_TD_NAMENULL = 0x8013120D,VLDTR_E_TD_DUPNAME = 0x8013120E,VLDTR_E_TD_DUPGUID = 0x8013120F,VLDTR_E_TD_NOTIFACEOBJEXTNULL = 0x80131210,VLDTR_E_TD_OBJEXTENDSNONNULL = 0x80131211,VLDTR_E_TD_EXTENDSSEALED = 0x80131212,VLDTR_E_TD_DLTNORTSPCL = 0x80131213,VLDTR_E_TD_RTSPCLNOTDLT = 0x80131214,VLDTR_E_TD_ENUMNOTVT = 0x80131215,VLDTR_E_TD_ABSSEAL = 0x80131216,VLDTR_E_TD_UNMGDNSTD = 0x80131217,VLDTR_E_TD_IFACENSTD = 0x80131218,VLDTR_E_TD_IFACENOTABS = 0x80131219,VLDTR_E_TD_IFACEPARNOTNIL = 0x8013121A,VLDTR_E_TD_IFACEGUIDNULL = 0x8013121B,VLDTR_E_TD_VTEXTSNONCLS = 0x8013121C,VLDTR_E_TD_VTNOTSEAL = 0x8013121D,VLDTR_E_TD_CLSEXTSNONCLS = 0x8013121E,VLDTR_E_IFACE_DUP = 0x8013121F,VLDTR_E_MR_NAMENULL = 0x80131220,VLDTR_E_MR_VTBLNAME = 0x80131221,VLDTR_E_MR_DELNAME = 0x80131222,VLDTR_E_MR_PARNIL = 0x80131223,VLDTR_E_MR_BADCALLINGCONV = 0x80131224,VLDTR_E_MR_NOTVARARG = 0x80131225,VLDTR_E_MR_NAMEDIFF = 0x80131226,VLDTR_E_MR_SIGDIFF = 0x80131227,VLDTR_E_MR_DUP = 0x80131228,VLDTR_E_CL_TDAUTO = 0x80131229,VLDTR_E_CL_BADPCKSZ = 0x8013122A,VLDTR_E_CL_DUP = 0x8013122B,VLDTR_E_FL_BADOFFSET = 0x8013122C,VLDTR_E_FL_TDNIL = 0x8013122D,VLDTR_E_FL_NOCL = 0x8013122E,VLDTR_E_FL_TDNOTEXPLCT = 0x8013122F,VLDTR_E_FL_FLDSTATIC = 0x80131230,VLDTR_E_FL_DUP = 0x80131231,VLDTR_E_MODREF_NAMENULL = 0x80131232,VLDTR_E_MODREF_DUP = 0x80131233,VLDTR_E_TR_BADSCOPE = 0x80131234,VLDTR_E_TD_NESTEDNOENCL = 0x80131235,VLDTR_E_TD_EXTTRRES = 0x80131236,VLDTR_E_SIGNULL = 0x80131237,VLDTR_E_SIGNODATA = 0x80131238,VLDTR_E_MD_BADCALLINGCONV = 0x80131239,VLDTR_E_MD_THISSTATIC = 0x8013123A,VLDTR_E_MD_NOTTHISNOTSTATIC = 0x8013123B,VLDTR_E_MD_NOARGCNT = 0x8013123C,VLDTR_E_SIG_MISSELTYPE = 0x8013123D,VLDTR_E_SIG_MISSTKN = 0x8013123E,VLDTR_E_SIG_TKNBAD = 0x8013123F,VLDTR_E_SIG_MISSFPTR = 0x80131240,VLDTR_E_SIG_MISSFPTRARGCNT = 0x80131241,VLDTR_E_SIG_MISSRANK = 0x80131242,VLDTR_E_SIG_MISSNSIZE = 0x80131243,VLDTR_E_SIG_MISSSIZE = 0x80131244,VLDTR_E_SIG_MISSNLBND = 0x80131245,VLDTR_E_SIG_MISSLBND = 0x80131246,VLDTR_E_SIG_BADELTYPE = 0x80131247,VLDTR_E_SIG_MISSVASIZE = 0x80131248,VLDTR_E_FD_BADCALLINGCONV = 0x80131249,VLDTR_E_MD_NAMENULL = 0x8013124A,VLDTR_E_MD_PARNIL = 0x8013124B,VLDTR_E_MD_DUP = 0x8013124C,VLDTR_E_FD_NAMENULL = 0x8013124D,VLDTR_E_FD_PARNIL = 0x8013124E,VLDTR_E_FD_DUP = 0x8013124F,VLDTR_E_AS_MULTI = 0x80131250,VLDTR_E_AS_NAMENULL = 0x80131251,VLDTR_E_AS_CTIMPLCTCTEXST = 0x80131252,VLDTR_E_AS_RSRCIMPLCTMREXST = 0x80131253,VLDTR_E_ASOS_OSPLTFRMIDINVAL = 0x80131254,VLDTR_E_AR_NAMENULL = 0x80131255,VLDTR_E_TD_ENCLNOTNESTED = 0x80131256,VLDTR_E_AROS_OSPLTFRMIDINVAL = 0x80131257,VLDTR_E_FILE_NAMENULL = 0x80131258,VLDTR_E_CT_NAMENULL = 0x80131259,VLDTR_E_CT_NOTPUBPRIV = 0x8013125A,VLDTR_E_MAR_NAMENULL = 0x8013125B,VLDTR_E_FILE_DUP = 0x8013125C,VLDTR_E_FILE_NAMEFULLQLFD = 0x8013125D,VLDTR_E_CT_DUP = 0x8013125E,VLDTR_E_MAR_DUP = 0x8013125F,VLDTR_E_MAR_NOTPUBPRIV = 0x80131260,VLDTR_E_TD_ENUMNOVALUE = 0x80131261,VLDTR_E_TD_ENUMVALSTATIC = 0x80131262,VLDTR_E_TD_ENUMVALNOTSN = 0x80131263,VLDTR_E_TD_ENUMFLDNOTST = 0x80131264,VLDTR_E_TD_ENUMFLDNOTLIT = 0x80131265,VLDTR_E_TD_ENUMNOLITFLDS = 0x80131266,VLDTR_E_TD_ENUMFLDSIGMISMATCH = 0x80131267,VLDTR_E_TD_ENUMVALNOT1ST = 0x80131268,VLDTR_E_FD_NOTVALUERTSN = 0x80131269,VLDTR_E_FD_VALUEPARNOTENUM = 0x8013126A,VLDTR_E_FD_INSTINIFACE = 0x8013126B,VLDTR_E_FD_NOTPUBINIFACE = 0x8013126C,VLDTR_E_FMD_GLOBALNOTPUBPRIVSC = 0x8013126D,VLDTR_E_FMD_GLOBALNOTSTATIC = 0x8013126E,VLDTR_E_FD_GLOBALNORVA = 0x8013126F,VLDTR_E_FD_GLOBALZERORVA = 0x80131270,VLDTR_E_FD_MARKEDNOMARSHAL = 0x80131271,VLDTR_E_FD_MARSHALNOTMARKED = 0x80131272,VLDTR_E_FD_MARKEDNODEFLT = 0x80131273,VLDTR_E_FD_DEFLTNOTMARKED = 0x80131274,VLDTR_E_FMD_MARKEDNOSECUR = 0x80131275,VLDTR_E_FMD_SECURNOTMARKED = 0x80131276,VLDTR_E_FMD_PINVOKENOTSTATIC = 0x80131277,VLDTR_E_FMD_MARKEDNOPINVOKE = 0x80131278,VLDTR_E_FMD_PINVOKENOTMARKED = 0x80131279,VLDTR_E_FMD_BADIMPLMAP = 0x8013127A,VLDTR_E_IMAP_BADMODREF = 0x8013127B,VLDTR_E_IMAP_BADMEMBER = 0x8013127C,VLDTR_E_IMAP_BADIMPORTNAME = 0x8013127D,VLDTR_E_IMAP_BADCALLCONV = 0x8013127E,VLDTR_E_FMD_BADACCESSFLAG = 0x8013127F,VLDTR_E_FD_INITONLYANDLITERAL = 0x80131280,VLDTR_E_FD_LITERALNOTSTATIC = 0x80131281,VLDTR_E_FMD_RTSNNOTSN = 0x80131282,VLDTR_E_MD_ABSTPARNOTABST = 0x80131283,VLDTR_E_MD_NOTSTATABSTININTF = 0x80131284,VLDTR_E_MD_NOTPUBININTF = 0x80131285,VLDTR_E_MD_CTORININTF = 0x80131286,VLDTR_E_MD_GLOBALCTORCCTOR = 0x80131287,VLDTR_E_MD_CTORSTATIC = 0x80131288,VLDTR_E_MD_CTORNOTSNRTSN = 0x80131289,VLDTR_E_MD_CTORVIRT = 0x8013128A,VLDTR_E_MD_CTORABST = 0x8013128B,VLDTR_E_MD_CCTORNOTSTATIC = 0x8013128C,VLDTR_E_MD_ZERORVA = 0x8013128D,VLDTR_E_MD_FINNOTVIRT = 0x8013128E,VLDTR_E_MD_STATANDFINORVIRT = 0x8013128F,VLDTR_E_MD_ABSTANDFINAL = 0x80131290,VLDTR_E_MD_ABSTANDIMPL = 0x80131291,VLDTR_E_MD_ABSTANDPINVOKE = 0x80131292,VLDTR_E_MD_ABSTNOTVIRT = 0x80131293,VLDTR_E_MD_NOTABSTNOTIMPL = 0x80131294,VLDTR_E_MD_NOTABSTBADFLAGSRVA = 0x80131295,VLDTR_E_MD_PRIVSCOPENORVA = 0x80131296,VLDTR_E_MD_GLOBALABSTORVIRT = 0x80131297,VLDTR_E_SIG_LONGFORM = 0x80131298,VLDTR_E_MD_MULTIPLESEMANTICS = 0x80131299,VLDTR_E_MD_INVALIDSEMANTICS = 0x8013129A,VLDTR_E_MD_SEMANTICSNOTEXIST = 0x8013129B,VLDTR_E_TD_VTEXTSNOTVT = 0x8013129C,VLDTR_E_FMD_GLOBALITEM = 0x8013129D,VLDTR_E_MD_MULTSEMANTICFLAGS = 0x8013129E,VLDTR_E_MD_NOSEMANTICFLAGS = 0x8013129F,VLDTR_E_FD_FLDINIFACE = 0x801312A0,VLDTR_E_AS_HASHALGID = 0x801312A1,VLDTR_E_AS_PROCID = 0x801312A2,VLDTR_E_AR_PROCID = 0x801312A3,VLDTR_E_AR_INVALIDEXELOC = 0x801312A4,VLDTR_E_AS_BADFLAGS = 0x801312A5,VLDTR_E_TR_HASTYPEDEF = 0x801312A6,VLDTR_E_IFACE_BADIMPL = 0x801312A7,VLDTR_E_IFACE_BADIFACE = 0x801312A8,VLDTR_E_TD_SECURNOTMARKED = 0x801312A9,VLDTR_E_TD_MARKEDNOSECUR = 0x801312AA,VLDTR_E_CT_BADTYPEDEF = 0x801312AB,VLDTR_E_CT_BADIMPL = 0x801312AC,VLDTR_E_CT_NAMEMISMATCH = 0x801312AD,VLDTR_E_CT_BADEXELOC = 0x801312AE,VLDTR_E_MI_BADCLASS = 0x801312AF,VLDTR_E_MI_CLASSISINTF = 0x801312B0,VLDTR_E_MI_BADDECL = 0x801312B1,VLDTR_E_MI_BADBODY = 0x801312B2,VLDTR_E_MI_DUP = 0x801312B3,VLDTR_E_FD_BADPARENT = 0x801312B4,VLDTR_E_MD_PARAMOUTOFSEQ = 0x801312B5,VLDTR_E_MD_PARASEQTOOBIG = 0x801312B6,VLDTR_E_MD_PARMMARKEDNOMARSHAL = 0x801312B7,VLDTR_E_MD_PARMMARSHALNOTMARKED = 0x801312B8,VLDTR_E_MD_PARMMARKEDNODEFLT = 0x801312BA,VLDTR_E_MD_PARMDEFLTNOTMARKED = 0x801312BB,VLDTR_E_PR_BADSCOPE = 0x801312BC,VLDTR_E_PR_NONAME = 0x801312BD,VLDTR_E_PR_NOSIG = 0x801312BE,VLDTR_E_PR_DUP = 0x801312BF,VLDTR_E_PR_BADCALLINGCONV = 0x801312C0,VLDTR_E_PR_MARKEDNODEFLT = 0x801312C1,VLDTR_E_PR_DEFLTNOTMARKED = 0x801312C2,VLDTR_E_PR_BADSEMANTICS = 0x801312C3,VLDTR_E_PR_BADMETHOD = 0x801312C4,VLDTR_E_PR_ALIENMETHOD = 0x801312C5,VLDTR_E_PR_BADBACKFIELD = 0x801312C6,VLDTR_E_PR_ALIENBACKFIELD = 0x801312C7,VLDTR_E_EV_BADSCOPE = 0x801312C8,VLDTR_E_EV_NONAME = 0x801312CA,VLDTR_E_EV_DUP = 0x801312CB,VLDTR_E_EV_BADEVTYPE = 0x801312CC,VLDTR_E_EV_EVTYPENOTCLASS = 0x801312CD,VLDTR_E_EV_BADSEMANTICS = 0x801312CE,VLDTR_E_EV_BADMETHOD = 0x801312CF,VLDTR_E_EV_ALIENMETHOD = 0x801312D0,VLDTR_E_EV_NOADDON = 0x801312D1,VLDTR_E_EV_NOREMOVEON = 0x801312D2,VLDTR_E_FMD_HASSECURININTF = 0x801312D3,VLDTR_E_TD_IFACEHASSECUR = 0x801312D4,VLDTR_E_DS_BADOWNER = 0x801312D5,VLDTR_E_DS_BADFLAGS = 0x801312D6,VLDTR_E_DS_NOBLOB = 0x801312D7,VLDTR_E_MAR_BADIMPL = 0x801312D8,VLDTR_E_MR_VARARGCALLINGCONV = 0x801312DA,VLDTR_E_MD_CTORNOTVOID = 0x801312DB,VLDTR_E_EV_FIRENOTVOID = 0x801312DC,VLDTR_E_AS_BADLOCALE = 0x801312DD,VLDTR_E_SIG_UNMANAGEDVT = 0x801312DE,VLDTR_E_SIG_SENTINMETHODDEF = 0x801312DF,VLDTR_E_SIG_SENTMUSTVARARG = 0x801312E0,VLDTR_E_SIG_MULTSENTINELS = 0x801312E1,VLDTR_E_SIG_LASTSENTINEL = 0x801312E2,VLDTR_E_SIG_MISSARG = 0x801312E3,VLDTR_E_SIG_BYREFINFIELD = 0x801312E4,VLDTR_E_MD_SYNCMETHODINVTYPE = 0x801312E5,VLDTR_E_TD_NAMETOOLONG = 0x801312E6,VLDTR_E_AS_PROCDUP = 0x801312E7,VLDTR_E_ASOS_DUP = 0x801312E8,VLDTR_E_MAR_BADFLAGS = 0x801312E9,VLDTR_E_CT_NOTYPEDEFID = 0x801312EA,VLDTR_E_FILE_BADFLAGS = 0x801312EB,VLDTR_E_FILE_NULLHASH = 0x801312EC,VLDTR_E_MOD_NONAME = 0x801312ED,VLDTR_E_MOD_NAMEFULLQLFD = 0x801312EE,VLDTR_E_TD_RTSPCLNOTSPCL = 0x801312EF,VLDTR_E_TD_EXTENDSIFACE = 0x801312F0,VLDTR_E_TD_EXTENDSVTYPE = 0x801312F1,VLDTR_E_TD_SYSENUMNOTCLASS = 0x801312F2,VLDTR_E_TD_SYSENUMNOTEXTVTYPE = 0x801312F3,VLDTR_E_TD_EXTVTNOTVT = 0x801312F4,VLDTR_E_TD_ENUMHASMETHODS = 0x801312F5,VLDTR_E_TD_ENUMIMPLIFACE = 0x801312F6,VLDTR_E_TD_ENUMHASPROP = 0x801312F7,VLDTR_E_TD_ENUMHASEVENT = 0x801312F8,VLDTR_E_TD_BADMETHODLST = 0x801312F9,VLDTR_E_TD_BADFIELDLST = 0x801312FA,VLDTR_E_TD_UMVTNOTVT = 0x801312FB,VLDTR_E_TD_ENUMNOINSTFLD = 0x801312FC,VLDTR_E_TD_ENUMMULINSTFLD = 0x801312FD,VLDTR_E_INTERRUPTED = 0x801312FE,VLDTR_E_NOTINIT = 0x801312FF,VLDTR_E_IFACE_NOTIFACE = 0x80131900,VLDTR_E_FD_RVAHASNORVA = 0x80131901,VLDTR_E_FD_RVAHASZERORVA = 0x80131902,};
enum MACRO__D0 {_D0 = 3,};
enum MACRO__D1 {_D1 = 2,};
enum MACRO__D2 {_D2 = 1,};
enum MACRO__D3 {_D3 = 0,};
enum MACRO__DBIAS {_DBIAS = 0x3FE,};
enum MACRO__DFRAC {_DFRAC = 15,_DMASK = 32752,};
enum MACRO__DLONG {_DLONG = 0,_LBIAS = 1022,};
enum MACRO__DMAX {_DMAX = 2047,_DSIGN = 32768,};
enum MACRO__DOFF {_DOFF = 4,};
enum MACRO__F0 {_F0 = 1,};
enum MACRO__F1 {_F1 = 0,_LFRAC = 65535,};
enum MACRO__FBIAS {_FBIAS = 0x7E,};
enum MACRO__FFRAC {_FFRAC = 127,_FMASK = 32640,};
enum MACRO__FMAX {_FMAX = 255,_FSIGN = 32768,};
enum MACRO__FOFF {_FOFF = 7,};
enum MACRO__FRND {_FRND = 1,};
enum MACRO__L0 {_L0 = 3,};
enum MACRO__L1 {_L1 = 2,};
enum MACRO__L2 {_L2 = 1,};
enum MACRO__L3 {_L3 = 0,FINITE = -1,};
enum MACRO__LMASK {_LMASK = 0x7FFF,};
enum MACRO__LMAX {_LMAX = 0x7FFF,_LSIGN = 0x8000,};
enum MACRO__LOFF {_LOFF = 4,};
enum MACRO_mdTokenNil {mdTokenNil = 0,};
typedef const char *MDUTF8CSTR;
typedef char *MDUTF8STR;
typedef UINT_PTR ModuleID;
typedef UINT_PTR MonitorID;
typedef struct $D7875A75BADF243094067BEA569A4E3F OSINFO;
typedef UINT_PTR ObjectID;
typedef const COR_SIGNATURE *PCCOR_SIGNATURE;
typedef COR_SIGNATURE *PCOR_SIGNATURE;
typedef void **PPSECURITY_PROPS;
typedef void **PPSECURITY_VALUE;
typedef void *PSECURITY_PROPS;
typedef void *PSECURITY_VALUE;
typedef UINT_PTR ProcessID;
typedef struct $78243EDB552F1A28DD94BB546CFE6E3D PublicKeyBlob;
typedef unsigned int RID;
enum ReplacesCorHdrNumericDefines {COMIMAGE_FLAGS_ILONLY = 0x1,COMIMAGE_FLAGS_32BITREQUIRED = 0x2,COMIMAGE_FLAGS_IL_LIBRARY = 0x4,COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,COR_VERSION_MAJOR_V2 = 0x2,COR_VERSION_MAJOR = 0x2,COR_VERSION_MINOR = 0x0,COR_DELETED_NAME_LENGTH = 0x8,COR_VTABLEGAP_NAME_LENGTH = 0x8,NATIVE_TYPE_MAX_CB = 0x1,COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,IMAGE_COR_MIH_METHODRVA = 0x1,IMAGE_COR_MIH_EHRVA = 0x2,IMAGE_COR_MIH_BASICBLOCK = 0x8,COR_VTABLE_32BIT = 0x1,COR_VTABLE_64BIT = 0x2,COR_VTABLE_FROM_UNMANAGED = 0x4,COR_VTABLE_CALL_MOST_DERIVED = 0x10,IMAGE_COR_EATJ_THUNK_SIZE = 0x20,MAX_CLASS_NAME = 0x400,MAX_PACKAGE_NAME = 0x400,};
enum ReplacesGeneralNumericDefines {IMAGE_DIRECTORY_ENTRY_COMHEADER = 0xE,_NEW_FLAGS_IMPLEMENTED = 0x1,__NEW_FLAGS_IMPLEMENTED = 0x1,};
typedef enum __MIDL___MIDL_itf_mscoree_0000_0001 STARTUP_FLAGS;
typedef void (*TDestructorCallback)(EXCEPTION_RECORD *);
typedef UINT_PTR ThreadID;
typedef _VerError VEContext;
struct VEHandlerClass;
typedef void (__stdcall *WAITORTIMERCALLBACK)(PVOID MIDL_0010, BOOL MIDL_0011);
struct _COR_GC_STATS {ULONG Flags;SIZE_T ExplicitGCCount;SIZE_T GenCollectionsTaken[3];SIZE_T CommittedKBytes;SIZE_T ReservedKBytes;SIZE_T Gen0HeapSizeKBytes;SIZE_T Gen1HeapSizeKBytes;SIZE_T Gen2HeapSizeKBytes;SIZE_T LargeObjectHeapSizeKBytes;SIZE_T KBytesPromotedFromGen0;SIZE_T KBytesPromotedFromGen1;};
struct _COR_GC_THREAD_STATS {ULONGLONG PerThreadAllocation;ULONG Flags;};
typedef struct tag_VerError _VerError;
enum __MIDL___MIDL_itf_corprof_0000_0001 {COR_PRF_MONITOR_NONE = 0x0,COR_PRF_MONITOR_FUNCTION_UNLOADS = 0x1,COR_PRF_MONITOR_CLASS_LOADS = 0x2,COR_PRF_MONITOR_MODULE_LOADS = 0x4,COR_PRF_MONITOR_ASSEMBLY_LOADS = 0x8,COR_PRF_MONITOR_APPDOMAIN_LOADS = 0x10,COR_PRF_MONITOR_CALLS = 0x20,COR_PRF_MONITOR_JIT_COMPILATION = 0x40,COR_PRF_MONITOR_EXCEPTIONS = 0x80,COR_PRF_MONITOR_GC = 0x100,COR_PRF_MONITOR_OBJECT_ALLOCATED = 0x200,COR_PRF_MONITOR_THREADS = 0x400,COR_PRF_MONITOR_REMOTING = 0x800,COR_PRF_MONITOR_SECURITY_CHECKS = 0x1000,COR_PRF_MONITOR_CODE_TRANSITIONS = 0x2000,COR_PRF_MONITOR_SYNCHRONIZATIONS = 0x4000,COR_PRF_MONITOR_ALLOW_REJIT = 0x8000,COR_PRF_MONITOR_ENTERLEAVE = 0x10000,COR_PRF_MONITOR_CCW = 0x20000,COR_PRF_MONITOR_REMOTING_COOKIE = 0x40800,COR_PRF_MONITOR_REMOTING_ASYNC = 0x80800,COR_PRF_MONITOR_SUSPENDS = 0x100000,COR_PRF_DISABLE_INLINING = 0x200000,COR_PRF_MONITOR_CACHE_SEARCHES = 0x400000,COR_PRF_MONITOR_RESERVED2 = 0x20000000,COR_PRF_MONITOR_ALL = 0xFFFFFFF,COR_PRF_MONITOR_IMMUTABLE = 0xCA900,};
enum __MIDL___MIDL_itf_corprof_0000_0002 {PROFILER_PARENT_UNKNOWN = 0xFFFFFFFD,PROFILER_GLOBAL_CLASS = 0xFFFFFFFE,PROFILER_GLOBAL_MODULE = 0xFFFFFFFF,};
enum __MIDL___MIDL_itf_corprof_0000_0003 {COR_PRF_CACHED_FUNCTION_FOUND = 0x0,COR_PRF_CACHED_FUNCTION_NOT_FOUND = 0x1,};
enum __MIDL___MIDL_itf_corprof_0000_0004 {COR_PRF_TRANSITION_CALL = 0x0,COR_PRF_TRANSITION_RETURN = 0x1,};
enum __MIDL___MIDL_itf_corprof_0000_0005 {COR_PRF_SUSPEND_OTHER = 0x0,COR_PRF_SUSPEND_FOR_GC = 0x1,COR_PRF_SUSPEND_FOR_APPDOMAIN_SHUTDOWN = 0x2,COR_PRF_SUSPEND_FOR_CODE_PITCHING = 0x3,COR_PRF_SUSPEND_FOR_SHUTDOWN = 0x4,};
enum __MIDL___MIDL_itf_corpub_0000_0001 {COR_PUB_MANAGEDONLY = 0x1,};
enum __MIDL___MIDL_itf_gchost_0000_0001 {COR_GC_COUNTS = 0x1,COR_GC_MEMORYUSAGE = 0x2,};
enum __MIDL___MIDL_itf_gchost_0000_0002 {COR_GC_THREAD_HAS_PROMOTED_BYTES = 0x1,};
enum __MIDL___MIDL_itf_mscoree_0000_0001 {STARTUP_CONCURRENT_GC = 0x1,STARTUP_LOADER_OPTIMIZATION_MASK = 0x6,STARTUP_LOADER_OPTIMIZATION_SINGLE_DOMAIN = 0x2,STARTUP_LOADER_OPTIMIZATION_MULTI_DOMAIN = 0x4,STARTUP_LOADER_OPTIMIZATION_MULTI_DOMAIN_HOST = 0x6,};
typedef mdToken mdAssembly;
typedef mdToken mdAssemblyRef;
typedef mdToken mdCPToken;
typedef mdToken mdComType;
typedef mdToken mdCustomAttribute;
typedef mdCustomAttribute mdCustomValue;
typedef mdToken mdEvent;
typedef mdToken mdExecutionLocation;
typedef mdToken mdFieldDef;
typedef mdToken mdFile;
typedef mdToken mdInterfaceImpl;
typedef mdToken mdLocalVar;
typedef mdToken mdLocalVarScope;
typedef mdToken mdLocalizedResource;
typedef mdToken mdManifestResource;
typedef mdToken mdMemberRef;
typedef mdToken mdMethodDef;
typedef mdToken mdModule;
typedef mdToken mdModuleRef;
typedef mdToken mdParamDef;
typedef mdToken mdPermission;
typedef mdToken mdProperty;
typedef ULONG32 mdScope;
typedef mdToken mdSignature;
typedef mdToken mdSourceFile;
typedef mdToken mdString;
typedef ULONG32 mdToken;
typedef mdToken mdTypeDef;
typedef mdToken mdTypeRef;
typedef mdToken mdTypeSpec;
enum tagCOINITCOR {COINITCOR_DEFAULT = 0x0,};
enum tagCOINITEE {COINITEE_DEFAULT = 0x0,COINITEE_DLL = 0x1,};
enum tagCOUNINITEE {COUNINITEE_DEFAULT = 0x0,COUNINITEE_DLL = 0x1,};
struct tag_VerError {unsigned int flags;unsigned int opcode;unsigned int uOffset;unsigned int Token;unsigned int item1_flags;int *item1_data;unsigned int item2_flags;int *item2_data;};

CorSymAddrKind ADDR_BITFIELD;
CorSymAddrKind ADDR_IL_OFFSET;
CorSymAddrKind ADDR_NATIVE_OFFSET;
CorSymAddrKind ADDR_NATIVE_REGISTER;
CorSymAddrKind ADDR_NATIVE_REGREG;
CorSymAddrKind ADDR_NATIVE_REGREL;
CorSymAddrKind ADDR_NATIVE_REGSTK;
CorSymAddrKind ADDR_NATIVE_RVA;
CorSymAddrKind ADDR_NATIVE_STKREG;
void __stdcall AddDestructorCallback(int code, TDestructorCallback callback);
MACRO_CEE CEE_E_ENTRYPOINT;
CorDebugChainReason CHAIN_CLASS_INIT;
CorDebugChainReason CHAIN_CONTEXT_POLICY;
CorDebugChainReason CHAIN_CONTEXT_SWITCH;
CorDebugChainReason CHAIN_DEBUGGER_EVAL;
CorDebugChainReason CHAIN_ENTER_MANAGED;
CorDebugChainReason CHAIN_ENTER_UNMANAGED;
CorDebugChainReason CHAIN_EXCEPTION_FILTER;
CorDebugChainReason CHAIN_FUNC_EVAL;
CorDebugChainReason CHAIN_INTERCEPTION;
CorDebugChainReason CHAIN_NONE;
CorDebugChainReason CHAIN_PROCESS_START;
CorDebugChainReason CHAIN_SECURITY;
CorDebugChainReason CHAIN_THREAD_START;
MACRO_CLDB CLDB_E_BADUPDATEMODE;
MACRO_CLDB CLDB_E_COLUMN_OVERFLOW;
MACRO_CLDB CLDB_E_COLUMN_PKNONULLS;
MACRO_CLDB CLDB_E_COLUMN_READONLY;
MACRO_CLDB CLDB_E_COLUMN_SPECIALCOL;
MACRO_CLDB CLDB_E_FILE_BADREAD;
MACRO_CLDB CLDB_E_FILE_BADWRITE;
MACRO_CLDB CLDB_E_FILE_CORRUPT;
MACRO_CLDB CLDB_E_FILE_OLDVER;
MACRO_CLDB CLDB_E_FILE_READONLY;
MACRO_CLDB CLDB_E_INCOMPATIBLE;
MACRO_CLDB CLDB_E_INDEX_BADTYPE;
MACRO_CLDB CLDB_E_INDEX_DUPLICATE;
MACRO_CLDB CLDB_E_INDEX_NONULLKEYS;
MACRO_CLDB CLDB_E_INDEX_NOTFOUND;
MACRO_CLDB_E CLDB_E_INTERNALERROR;
MACRO_CLDB CLDB_E_NAME_ERROR;
MACRO_CLDB CLDB_E_NO_DATA;
MACRO_CLDB CLDB_E_OBJECT_COLNOTFOUND;
MACRO_CLDB CLDB_E_OBJECT_NOTFOUND;
MACRO_CLDB CLDB_E_READONLY;
MACRO_CLDB CLDB_E_RECORD_DELETED;
MACRO_CLDB CLDB_E_RECORD_DUPLICATE;
MACRO_CLDB CLDB_E_RECORD_NOTFOUND;
MACRO_CLDB CLDB_E_RECORD_OUTOFORDER;
MACRO_CLDB CLDB_E_RECORD_OVERFLOW;
MACRO_CLDB CLDB_E_RECORD_PKREQUIRED;
MACRO_CLDB CLDB_E_RELOCATED;
MACRO_CLDB CLDB_E_SCHEMA_VERNOTFOUND;
MACRO_CLDB CLDB_E_SMDUPLICATE;
MACRO_CLDB CLDB_E_TABLE_CANTDROP;
MACRO_CLDB CLDB_E_TOO_BIG;
MACRO_CLDB CLDB_E_TRUNCATION;
MACRO_CLDB CLDB_E_VECTOR_BADINDEX;
MACRO_CLDB CLDB_S_INDEX_TABLESCANREQUIRED;
MACRO_CLDB CLDB_S_NULL;
MACRO_CLDB CLDB_S_TRUNCATION;
tagCOINITCOR COINITCOR_DEFAULT;
tagCOINITEE COINITEE_DEFAULT;
tagCOINITEE COINITEE_DLL;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_32BITREQUIRED;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_ILONLY;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_IL_LIBRARY;
ReplacesCorHdrNumericDefines COMIMAGE_FLAGS_TRACKDEBUGDATA;
MACRO_CORDBG CORDBG_E_BAD_REFERENCE_VALUE;
MACRO_CORDBG CORDBG_E_BAD_THREAD_STATE;
MACRO_CORDBG CORDBG_E_CANT_CHANGE_JIT_SETTING_FOR_ZAP_MODULE;
MACRO_CORDBG CORDBG_E_CANT_SETIP_INTO_OR_OUT_OF_FILTER;
MACRO_CORDBG CORDBG_E_CANT_SET_IP_INTO_CATCH;
MACRO_CORDBG CORDBG_E_CANT_SET_IP_INTO_FINALLY;
MACRO_CORDBG CORDBG_E_CANT_SET_IP_OUT_OF_FINALLY;
MACRO_CORDBG CORDBG_E_CLASS_NOT_LOADED;
MACRO_CORDBG CORDBG_E_CODE_NOT_AVAILABLE;
MACRO_CORDBG CORDBG_E_DEBUGGER_ALREADY_ATTACHED;
MACRO_CORDBG CORDBG_E_ENC_EH_MAX_NESTING_LEVEL_CANT_INCREASE;
MACRO_CORDBG CORDBG_E_ENC_METHOD_NO_LOCAL_SIG;
MACRO_CORDBG CORDBG_E_ENC_METHOD_SIG_CHANGED;
MACRO_CORDBG CORDBG_E_ENC_MODULE_NOT_ENC_ENABLED;
MACRO_CORDBG CORDBG_E_FIELD_NOT_AVAILABLE;
MACRO_CORDBG CORDBG_E_FUNCTION_NOT_IL;
MACRO_CORDBG CORDBG_E_FUNC_EVAL_BAD_START_POINT;
MACRO_CORDBG CORDBG_E_FUNC_EVAL_NOT_COMPLETE;
MACRO_CORDBG CORDBG_E_IL_VAR_NOT_AVAILABLE;
MACRO_CORDBG CORDBG_E_INPROC_NOT_IMPL;
MACRO_CORDBG CORDBG_E_INSUFFICIENT_INFO_FOR_SET_IP;
MACRO_CORDBG CORDBG_E_INVALID_OBJECT;
MACRO_CORDBG CORDBG_E_NONCONTINUABLE_EXCEPTION;
MACRO_CORDBG CORDBG_E_NON_NATIVE_FRAME;
MACRO_CORDBG CORDBG_E_OBJECT_IS_NOT_COPYABLE_VALUE_CLASS;
MACRO_CORDBG CORDBG_E_PROCESS_DETACHED;
MACRO_CORDBG CORDBG_E_PROCESS_NOT_SYNCHRONIZED;
MACRO_CORDBG CORDBG_E_PROCESS_TERMINATED;
MACRO_CORDBG CORDBG_E_SET_IP_IMPOSSIBLE;
MACRO_CORDBG CORDBG_E_SET_IP_NOT_ALLOWED_ON_EXCEPTION;
MACRO_CORDBG CORDBG_E_SET_IP_NOT_ALLOWED_ON_NONLEAF_FRAME;
MACRO_CORDBG CORDBG_E_SET_VALUE_NOT_ALLOWED_ON_NONLEAF_FRAME;
MACRO_CORDBG CORDBG_E_STATIC_VAR_NOT_AVAILABLE;
MACRO_CORDBG CORDBG_E_SUPERFLOUS_CONTINUE;
MACRO_CORDBG CORDBG_E_UNRECOVERABLE_ERROR;
MACRO_CORDBG CORDBG_E_VARIABLE_IS_ACTUALLY_LITERAL;
MACRO_CORDBG CORDBG_S_BAD_END_SEQUENCE_POINT;
MACRO_CORDBG CORDBG_S_BAD_START_SEQUENCE_POINT;
MACRO_CORDBG CORDBG_S_FUNC_EVAL_ABORTED;
MACRO_CORDBG CORDBG_S_FUNC_EVAL_HAS_NO_RESULT;
MACRO_CORDBG CORDBG_S_VALUE_POINTS_TO_VOID;
$C435AAD07FF115A04870B39292383D43 CORMODULE_MATCH;
$C435AAD07FF115A04870B39292383D43 CORMODULE_NEW;
MACRO_CORPROF CORPROF_E_CANNOT_UPDATE_METHOD;
MACRO_CORPROF CORPROF_E_DATAINCOMPLETE;
MACRO_CORPROF CORPROF_E_FUNCTION_NOT_COMPILED;
MACRO_CORPROF CORPROF_E_FUNCTION_NOT_IL;
MACRO_CORPROF CORPROF_E_NOT_MANAGED_THREAD;
MACRO_CORPROF CORPROF_E_NOT_REJITABLE_METHODS;
MACRO_CORSEC CORSEC_E_DECODE_SET;
MACRO_CORSEC CORSEC_E_ENCODE_SET;
MACRO_CORSEC CORSEC_E_INVALID_ATTR;
MACRO_CORSEC CORSEC_E_MIN_GRANT_FAIL;
MACRO_CORSEC CORSEC_E_NO_EXEC_PERM;
MACRO_CORSEC CORSEC_E_POLICY_EXCEPTION;
MACRO_CORSEC CORSEC_E_UNSUPPORTED_FORMAT;
ReplacesCorHdrNumericDefines COR_DELETED_NAME_LENGTH;
MACRO_COR_E COR_E_AMBIGUOUSMATCH;
MACRO_COR_E COR_E_APPLICATION;
MACRO_COR_E COR_E_ARGUMENT;
MACRO_COR_E COR_E_ARGUMENTOUTOFRANGE;
MACRO_COR_E COR_E_ARITHMETIC;
MACRO_COR_E COR_E_ARRAYTYPEMISMATCH;
MACRO_COR_E COR_E_BADIMAGEFORMAT;
MACRO_COR_E COR_E_COMEMULATE_ERROR;
MACRO_COR_E COR_E_CONTEXTMARSHAL;
MACRO_COR_E COR_E_CORE;
MACRO_COR_E COR_E_DIRECTORYNOTFOUND;
MACRO_COR_E COR_E_DIVIDEBYZERO;
MACRO_COR_E COR_E_DUPLICATEWAITOBJECT;
MACRO_COR_E COR_E_ENDOFSTREAM;
MACRO_COR_E COR_E_EXCEPTION;
MACRO_COR_E COR_E_EXECUTIONENGINE;
MACRO_COR_E COR_E_FIELDACCESS;
MACRO_COR_E COR_E_FILENOTFOUND;
MACRO_COR_E COR_E_FORMAT;
MACRO_COR_E COR_E_INDEXOUTOFRANGE;
MACRO_COR_E COR_E_INVALIDCAST;
MACRO_COR_E COR_E_INVALIDCOMOBJECT;
MACRO_COR_E COR_E_INVALIDFILTERCRITERIA;
MACRO_COR_E COR_E_INVALIDOLEVARIANTTYPE;
MACRO_COR_E COR_E_INVALIDOPERATION;
MACRO_COR_E COR_E_IO;
MACRO_COR_E COR_E_MEMBERACCESS;
MACRO_COR_E COR_E_METHODACCESS;
MACRO_COR_E COR_E_MISSINGFIELD;
MACRO_COR_E COR_E_MISSINGMANIFESTRESOURCE;
MACRO_COR_E COR_E_MISSINGMEMBER;
MACRO_COR_E COR_E_MISSINGMETHOD;
MACRO_COR_E COR_E_MULTICASTNOTSUPPORTED;
MACRO_COR_E COR_E_NOTFINITENUMBER;
MACRO_COR_E COR_E_NOTSUPPORTED;
MACRO_COR_E COR_E_NULLREFERENCE;
MACRO_COR_E COR_E_OUTOFMEMORY;
MACRO_COR_E COR_E_OVERFLOW;
MACRO_COR_E COR_E_PATHTOOLONG;
MACRO_COR_E COR_E_RANK;
MACRO_COR_E COR_E_REFLECTIONTYPELOAD;
MACRO_COR_E COR_E_REMOTING;
MACRO_COR_E COR_E_SAFEARRAYRANKMISMATCH;
MACRO_COR_E COR_E_SAFEARRAYTYPEMISMATCH;
MACRO_COR_E COR_E_SECURITY;
MACRO_COR_E COR_E_SERIALIZATION;
MACRO_COR_E COR_E_SERVER;
MACRO_COR_E COR_E_SERVICEDCOMPONENT;
MACRO_COR_E COR_E_STACKOVERFLOW;
MACRO_COR_E COR_E_SYNCHRONIZATIONLOCK;
MACRO_COR_E COR_E_SYSTEM;
MACRO_COR_E COR_E_TARGET;
MACRO_COR_E COR_E_TARGETINVOCATION;
MACRO_COR_E COR_E_TARGETPARAMCOUNT;
MACRO_COR_E COR_E_THREADABORTED;
MACRO_COR_E COR_E_THREADINTERRUPTED;
MACRO_COR_E COR_E_THREADSTATE;
MACRO_COR_E COR_E_THREADSTOP;
MACRO_COR_E COR_E_TYPEINITIALIZATION;
MACRO_COR_E COR_E_TYPELOAD;
MACRO_COR_E COR_E_UNAUTHORIZEDACCESS;
MACRO_COR_E COR_E_VERIFIER;
MACRO_COR_E COR_E_VTABLECALLSNOTSUPPORTED;
MACRO_COR_E COR_E_WEAKREFERENCE;
__MIDL___MIDL_itf_gchost_0000_0001 COR_GC_COUNTS;
__MIDL___MIDL_itf_gchost_0000_0001 COR_GC_MEMORYUSAGE;
__MIDL___MIDL_itf_gchost_0000_0002 COR_GC_THREAD_HAS_PROMOTED_BYTES;
CorExceptionFlag COR_ILEXCEPTION_CLAUSE_DEPRECATED;
CorExceptionFlag COR_ILEXCEPTION_CLAUSE_FAULT;
CorExceptionFlag COR_ILEXCEPTION_CLAUSE_FILTER;
CorExceptionFlag COR_ILEXCEPTION_CLAUSE_FINALLY;
CorExceptionFlag COR_ILEXCEPTION_CLAUSE_NONE;
CorExceptionFlag COR_ILEXCEPTION_CLAUSE_OFFSETLEN;
ReplacesCorHdrNumericDefines COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE;
MACRO_COR COR_NATIVE_LINK_CUSTOM_VALUE_CC;
__MIDL___MIDL_itf_corprof_0000_0003 COR_PRF_CACHED_FUNCTION_FOUND;
__MIDL___MIDL_itf_corprof_0000_0003 COR_PRF_CACHED_FUNCTION_NOT_FOUND;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_DISABLE_INLINING;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_ALL;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_ALLOW_REJIT;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_APPDOMAIN_LOADS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_ASSEMBLY_LOADS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_CACHE_SEARCHES;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_CALLS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_CCW;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_CLASS_LOADS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_CODE_TRANSITIONS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_ENTERLEAVE;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_EXCEPTIONS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_FUNCTION_UNLOADS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_GC;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_IMMUTABLE;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_JIT_COMPILATION;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_MODULE_LOADS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_NONE;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_OBJECT_ALLOCATED;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_REMOTING;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_REMOTING_ASYNC;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_REMOTING_COOKIE;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_RESERVED2;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_SECURITY_CHECKS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_SUSPENDS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_SYNCHRONIZATIONS;
__MIDL___MIDL_itf_corprof_0000_0001 COR_PRF_MONITOR_THREADS;
__MIDL___MIDL_itf_corprof_0000_0005 COR_PRF_SUSPEND_FOR_APPDOMAIN_SHUTDOWN;
__MIDL___MIDL_itf_corprof_0000_0005 COR_PRF_SUSPEND_FOR_CODE_PITCHING;
__MIDL___MIDL_itf_corprof_0000_0005 COR_PRF_SUSPEND_FOR_GC;
__MIDL___MIDL_itf_corprof_0000_0005 COR_PRF_SUSPEND_FOR_SHUTDOWN;
__MIDL___MIDL_itf_corprof_0000_0005 COR_PRF_SUSPEND_OTHER;
__MIDL___MIDL_itf_corprof_0000_0004 COR_PRF_TRANSITION_CALL;
__MIDL___MIDL_itf_corprof_0000_0004 COR_PRF_TRANSITION_RETURN;
__MIDL___MIDL_itf_corpub_0000_0001 COR_PUB_MANAGEDONLY;
ReplacesCorHdrNumericDefines COR_VERSION_MAJOR;
ReplacesCorHdrNumericDefines COR_VERSION_MAJOR_V2;
ReplacesCorHdrNumericDefines COR_VERSION_MINOR;
ReplacesCorHdrNumericDefines COR_VTABLEGAP_NAME_LENGTH;
ReplacesCorHdrNumericDefines COR_VTABLE_32BIT;
ReplacesCorHdrNumericDefines COR_VTABLE_64BIT;
ReplacesCorHdrNumericDefines COR_VTABLE_CALL_MOST_DERIVED;
ReplacesCorHdrNumericDefines COR_VTABLE_FROM_UNMANAGED;
tagCOUNINITEE COUNINITEE_DEFAULT;
tagCOUNINITEE COUNINITEE_DLL;
HRESULT __stdcall CoInitializeCor(DWORD fFlags);
HRESULT __stdcall CoInitializeEE(DWORD fFlags);
void __stdcall CoUninitializeCor();
void __stdcall CoUninitializeEE(BOOL fFlags);
HRESULT __stdcall CorBindToCurrentRuntime(LPCWSTR pwszFileName, const CLSID *const rclsid, const IID *const riid, LPVOID *ppv);
HRESULT __stdcall CorBindToRuntime(LPWSTR pwszVersion, LPWSTR pwszBuildFlavor, const CLSID *const rclsid, const IID *const riid, LPVOID *ppv);
HRESULT __stdcall CorBindToRuntimeEx(LPWSTR pwszVersion, LPWSTR pwszBuildFlavor, DWORD startupFlags, const CLSID *const rclsid, const IID *const riid, LPVOID *ppv);
void __stdcall CorExitProcess();
CorILMethodFlags CorILMethod_CompressedIL;
CorILMethodFlags CorILMethod_FatFormat;
CorILMethodFlags CorILMethod_FormatMask;
CorILMethodFlags CorILMethod_FormatShift;
CorILMethodFlags CorILMethod_InitLocals;
CorILMethodFlags CorILMethod_MoreSects;
CorILMethodSect CorILMethod_Sect_EHTable;
CorILMethodSect CorILMethod_Sect_FatFormat;
CorILMethodSect CorILMethod_Sect_KindMask;
CorILMethodSect CorILMethod_Sect_MoreSects;
CorILMethodSect CorILMethod_Sect_OptILTable;
CorILMethodSect CorILMethod_Sect_Reserved;
CorILMethodFlags CorILMethod_SmallFormat;
CorILMethodFlags CorILMethod_TinyFormat;
CorILMethodFlags CorILMethod_TinyFormat1;
void __stdcall CorMarkThreadInThreadPool();
CorDebugCreateProcessFlags DEBUG_ENABLE_EDIT_AND_CONTINUE;
CorDebugCreateProcessFlags DEBUG_NO_SPECIAL_OPTIONS;
$CAF393BCBC2CA6886BFCF5DF33463490 DESCR_GROUP_METHODDEF;
$CAF393BCBC2CA6886BFCF5DF33463490 DESCR_GROUP_METHODIMPL;
CorElementType ELEMENT_TYPE_ARRAY;
CorElementType ELEMENT_TYPE_BOOLEAN;
CorElementType ELEMENT_TYPE_BYREF;
CorElementType ELEMENT_TYPE_CHAR;
CorElementType ELEMENT_TYPE_CLASS;
CorElementType ELEMENT_TYPE_CMOD_OPT;
CorElementType ELEMENT_TYPE_CMOD_REQD;
CorElementType ELEMENT_TYPE_COPYCTOR;
CorElementType ELEMENT_TYPE_END;
CorElementType ELEMENT_TYPE_FNPTR;
CorElementType ELEMENT_TYPE_GENERICARRAY;
CorElementType ELEMENT_TYPE_I;
CorElementType ELEMENT_TYPE_I1;
CorElementType ELEMENT_TYPE_I2;
CorElementType ELEMENT_TYPE_I4;
CorElementType ELEMENT_TYPE_I8;
CorElementType ELEMENT_TYPE_MAX;
CorElementType ELEMENT_TYPE_MODIFIER;
CorElementType ELEMENT_TYPE_NAME;
CorElementType ELEMENT_TYPE_OBJECT;
CorElementType ELEMENT_TYPE_PINNED;
CorElementType ELEMENT_TYPE_PTR;
CorElementType ELEMENT_TYPE_R;
CorElementType ELEMENT_TYPE_R4;
CorElementType ELEMENT_TYPE_R8;
CorElementType ELEMENT_TYPE_SENTINEL;
CorElementType ELEMENT_TYPE_STRING;
CorElementType ELEMENT_TYPE_SZARRAY;
CorElementType ELEMENT_TYPE_TYPEDBYREF;
CorElementType ELEMENT_TYPE_U;
CorElementType ELEMENT_TYPE_U1;
CorElementType ELEMENT_TYPE_U2;
CorElementType ELEMENT_TYPE_U4;
CorElementType ELEMENT_TYPE_U8;
CorElementType ELEMENT_TYPE_VALUEARRAY;
CorElementType ELEMENT_TYPE_VALUECLASS;
CorElementType ELEMENT_TYPE_VALUETYPE;
CorElementType ELEMENT_TYPE_VAR;
CorElementType ELEMENT_TYPE_VOID;
CorDebugIlToNativeMappingTypes EPILOG;
MACRO_MSCOR_FACILITY FACILITY_URT;
MACRO_FHUGE FHUGE_EXP;
MACRO__L3 FINITE;
MACRO_MSCOR_FL FL_DEC;
MACRO_MSCOR_FL FL_ERR;
MACRO_MSCOR_FL FL_HEX;
MACRO_MSCOR_FL FL_INF;
MACRO_MSCOR_FL FL_NAN;
MACRO_MSCOR_FL FL_NEG;
MACRO_FHUGE FSAFE_EXP;
MACRO_FUSION FUSION_ASSEMBLY_IS_NOT_STRONG_NAME;
MACRO_FUSION FUSION_INVALID_PRIVATE_ASM_LOCATION;
MACRO_FUSION FUSION_MODULE_HASH_CHECK_FAILED;
MACRO_FUSION FUSION_PRIVATE_ASM_INSTALL_DISALLOWED;
MACRO_FUSION FUSION_REF_DEF_MISMATCH;
MACRO_FUSION FUSION_SIGNATURE_CHECK_FAILED;
HRESULT __stdcall GetCORSystemDirectory(LPWSTR pbuffer, DWORD cchBuffer, DWORD *dwlength);
HRESULT __stdcall GetCORVersion(LPWSTR pbuffer, DWORD cchBuffer, DWORD *dwlength);
DWORD __stdcall GetHashFromAssemblyFile(LPCSTR szFilePath, unsigned int *piHashAlg, BYTE *pbHash, DWORD cchHash, DWORD *pchHash);
DWORD __stdcall GetHashFromAssemblyFileW(LPCWSTR wszFilePath, unsigned int *piHashAlg, BYTE *pbHash, DWORD cchHash, DWORD *pchHash);
DWORD __stdcall GetHashFromBlob(BYTE *pbBlob, DWORD cchBlob, unsigned int *piHashAlg, BYTE *pbHash, DWORD cchHash, DWORD *pchHash);
DWORD __stdcall GetHashFromFile(LPCSTR szFilePath, unsigned int *piHashAlg, BYTE *pbHash, DWORD cchHash, DWORD *pchHash);
DWORD __stdcall GetHashFromFileW(LPCWSTR wszFilePath, unsigned int *piHashAlg, BYTE *pbHash, DWORD cchHash, DWORD *pchHash);
DWORD __stdcall GetHashFromHandle(HANDLE hFile, unsigned int *piHashAlg, BYTE *pbHash, DWORD cchHash, DWORD *pchHash);
HRESULT __stdcall GetRealProcAddress(LPCSTR pwszProcName, void **ppv);
void __stdcall HPROCESS_UserFree(unsigned int *, HPROCESS *);
unsigned __int8 *__stdcall HPROCESS_UserMarshal(unsigned int *, unsigned __int8 *, HPROCESS *);
unsigned int __stdcall HPROCESS_UserSize(unsigned int *, unsigned int, HPROCESS *);
unsigned __int8 *__stdcall HPROCESS_UserUnmarshal(unsigned int *, unsigned __int8 *, HPROCESS *);
void __stdcall HTHREAD_UserFree(unsigned int *, HTHREAD *);
unsigned __int8 *__stdcall HTHREAD_UserMarshal(unsigned int *, unsigned __int8 *, HTHREAD *);
unsigned int __stdcall HTHREAD_UserSize(unsigned int *, unsigned int, HTHREAD *);
unsigned __int8 *__stdcall HTHREAD_UserUnmarshal(unsigned int *, unsigned __int8 *, HTHREAD *);
MACRO_EXP HUGE_EXP;
HRESULT __stdcall IAppDomainBinding_OnAppDomain_Proxy(IAppDomainBinding *This, IUnknown *pAppdomain);
void __stdcall IAppDomainBinding_OnAppDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICORSvcDbgInfo_CancelRuntimeStartupNotification_Proxy(ICORSvcDbgInfo *This, UINT_PTR procId, ICORSvcDbgNotify *pINotify);
void __stdcall ICORSvcDbgInfo_CancelRuntimeStartupNotification_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICORSvcDbgInfo_RequestRuntimeStartupNotification_Proxy(ICORSvcDbgInfo *This, UINT_PTR procId, ICORSvcDbgNotify *pINotify);
void __stdcall ICORSvcDbgInfo_RequestRuntimeStartupNotification_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICORSvcDbgNotify_NotifyRuntimeStartup_Proxy(ICORSvcDbgNotify *This, UINT_PTR procId);
void __stdcall ICORSvcDbgNotify_NotifyRuntimeStartup_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICORSvcDbgNotify_NotifyServiceStopped_Proxy(ICORSvcDbgNotify *This);
void __stdcall ICORSvcDbgNotify_NotifyServiceStopped_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICatalogServices_Autodone_Proxy(ICatalogServices *This);
void __stdcall ICatalogServices_Autodone_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICatalogServices_NotAutodone_Proxy(ICatalogServices *This);
void __stdcall ICatalogServices_NotAutodone_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorConfiguration_AddDebuggerSpecialThread_Proxy(ICorConfiguration *This, DWORD dwSpecialThreadId);
void __stdcall ICorConfiguration_AddDebuggerSpecialThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorConfiguration_SetAppDomainLoadEvent_Proxy(ICorConfiguration *This, IAppDomainBinding *pAppStartEvent);
void __stdcall ICorConfiguration_SetAppDomainLoadEvent_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorConfiguration_SetDebuggerThreadControl_Proxy(ICorConfiguration *This, IDebuggerThreadControl *pDebuggerThreadControl);
void __stdcall ICorConfiguration_SetDebuggerThreadControl_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorConfiguration_SetGCHostControl_Proxy(ICorConfiguration *This, IGCHostControl *pGCHostControl);
void __stdcall ICorConfiguration_SetGCHostControl_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorConfiguration_SetGCThreadControl_Proxy(ICorConfiguration *This, IGCThreadControl *pGCThreadControl);
void __stdcall ICorConfiguration_SetGCThreadControl_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomainEnum_Next_Proxy(ICorDebugAppDomainEnum *This, ULONG celt, ICorDebugAppDomain *values[], ULONG *pceltFetched);
void __stdcall ICorDebugAppDomainEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_Attach_Proxy(ICorDebugAppDomain *This);
void __stdcall ICorDebugAppDomain_Attach_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_EnumerateAssemblies_Proxy(ICorDebugAppDomain *This, ICorDebugAssemblyEnum **ppAssemblies);
void __stdcall ICorDebugAppDomain_EnumerateAssemblies_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_EnumerateBreakpoints_Proxy(ICorDebugAppDomain *This, ICorDebugBreakpointEnum **ppBreakpoints);
void __stdcall ICorDebugAppDomain_EnumerateBreakpoints_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_EnumerateSteppers_Proxy(ICorDebugAppDomain *This, ICorDebugStepperEnum **ppSteppers);
void __stdcall ICorDebugAppDomain_EnumerateSteppers_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_GetID_Proxy(ICorDebugAppDomain *This, ULONG32 *pId);
void __stdcall ICorDebugAppDomain_GetID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_GetModuleFromMetaDataInterface_Proxy(ICorDebugAppDomain *This, IUnknown *pIMetaData, ICorDebugModule **ppModule);
void __stdcall ICorDebugAppDomain_GetModuleFromMetaDataInterface_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_GetName_Proxy(ICorDebugAppDomain *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ICorDebugAppDomain_GetName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_GetObject_Proxy(ICorDebugAppDomain *This, ICorDebugValue **ppObject);
void __stdcall ICorDebugAppDomain_GetObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_GetProcess_Proxy(ICorDebugAppDomain *This, ICorDebugProcess **ppProcess);
void __stdcall ICorDebugAppDomain_GetProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAppDomain_IsAttached_Proxy(ICorDebugAppDomain *This, BOOL *pbAttached);
void __stdcall ICorDebugAppDomain_IsAttached_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetBaseIndicies_Proxy(ICorDebugArrayValue *This, ULONG32 cdim, ULONG32 indicies[]);
void __stdcall ICorDebugArrayValue_GetBaseIndicies_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetCount_Proxy(ICorDebugArrayValue *This, ULONG32 *pnCount);
void __stdcall ICorDebugArrayValue_GetCount_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetDimensions_Proxy(ICorDebugArrayValue *This, ULONG32 cdim, ULONG32 dims[]);
void __stdcall ICorDebugArrayValue_GetDimensions_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetElementAtPosition_Proxy(ICorDebugArrayValue *This, ULONG32 nPosition, ICorDebugValue **ppValue);
void __stdcall ICorDebugArrayValue_GetElementAtPosition_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetElementType_Proxy(ICorDebugArrayValue *This, CorElementType *pType);
void __stdcall ICorDebugArrayValue_GetElementType_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetElement_Proxy(ICorDebugArrayValue *This, ULONG32 cdim, ULONG32 indices[], ICorDebugValue **ppValue);
void __stdcall ICorDebugArrayValue_GetElement_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_GetRank_Proxy(ICorDebugArrayValue *This, ULONG32 *pnRank);
void __stdcall ICorDebugArrayValue_GetRank_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugArrayValue_HasBaseIndicies_Proxy(ICorDebugArrayValue *This, BOOL *pbHasBaseIndicies);
void __stdcall ICorDebugArrayValue_HasBaseIndicies_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAssemblyEnum_Next_Proxy(ICorDebugAssemblyEnum *This, ULONG celt, ICorDebugAssembly *values[], ULONG *pceltFetched);
void __stdcall ICorDebugAssemblyEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAssembly_EnumerateModules_Proxy(ICorDebugAssembly *This, ICorDebugModuleEnum **ppModules);
void __stdcall ICorDebugAssembly_EnumerateModules_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAssembly_GetAppDomain_Proxy(ICorDebugAssembly *This, ICorDebugAppDomain **ppAppDomain);
void __stdcall ICorDebugAssembly_GetAppDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAssembly_GetCodeBase_Proxy(ICorDebugAssembly *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ICorDebugAssembly_GetCodeBase_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAssembly_GetName_Proxy(ICorDebugAssembly *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ICorDebugAssembly_GetName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugAssembly_GetProcess_Proxy(ICorDebugAssembly *This, ICorDebugProcess **ppProcess);
void __stdcall ICorDebugAssembly_GetProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugBoxValue_GetObject_Proxy(ICorDebugBoxValue *This, ICorDebugObjectValue **ppObject);
void __stdcall ICorDebugBoxValue_GetObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugBreakpointEnum_Next_Proxy(ICorDebugBreakpointEnum *This, ULONG celt, ICorDebugBreakpoint *breakpoints[], ULONG *pceltFetched);
void __stdcall ICorDebugBreakpointEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugBreakpoint_Activate_Proxy(ICorDebugBreakpoint *This, BOOL bActive);
void __stdcall ICorDebugBreakpoint_Activate_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugBreakpoint_IsActive_Proxy(ICorDebugBreakpoint *This, BOOL *pbActive);
void __stdcall ICorDebugBreakpoint_IsActive_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChainEnum_Next_Proxy(ICorDebugChainEnum *This, ULONG celt, ICorDebugChain *chains[], ULONG *pceltFetched);
void __stdcall ICorDebugChainEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_EnumerateFrames_Proxy(ICorDebugChain *This, ICorDebugFrameEnum **ppFrames);
void __stdcall ICorDebugChain_EnumerateFrames_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetActiveFrame_Proxy(ICorDebugChain *This, ICorDebugFrame **ppFrame);
void __stdcall ICorDebugChain_GetActiveFrame_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetCallee_Proxy(ICorDebugChain *This, ICorDebugChain **ppChain);
void __stdcall ICorDebugChain_GetCallee_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetCaller_Proxy(ICorDebugChain *This, ICorDebugChain **ppChain);
void __stdcall ICorDebugChain_GetCaller_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetContext_Proxy(ICorDebugChain *This, ICorDebugContext **ppContext);
void __stdcall ICorDebugChain_GetContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetNext_Proxy(ICorDebugChain *This, ICorDebugChain **ppChain);
void __stdcall ICorDebugChain_GetNext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetPrevious_Proxy(ICorDebugChain *This, ICorDebugChain **ppChain);
void __stdcall ICorDebugChain_GetPrevious_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetReason_Proxy(ICorDebugChain *This, CorDebugChainReason *pReason);
void __stdcall ICorDebugChain_GetReason_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetRegisterSet_Proxy(ICorDebugChain *This, ICorDebugRegisterSet **ppRegisters);
void __stdcall ICorDebugChain_GetRegisterSet_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetStackRange_Proxy(ICorDebugChain *This, CORDB_ADDRESS *pStart, CORDB_ADDRESS *pEnd);
void __stdcall ICorDebugChain_GetStackRange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_GetThread_Proxy(ICorDebugChain *This, ICorDebugThread **ppThread);
void __stdcall ICorDebugChain_GetThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugChain_IsManaged_Proxy(ICorDebugChain *This, BOOL *pManaged);
void __stdcall ICorDebugChain_IsManaged_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugClass_GetModule_Proxy(ICorDebugClass *This, ICorDebugModule **pModule);
void __stdcall ICorDebugClass_GetModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugClass_GetStaticFieldValue_Proxy(ICorDebugClass *This, mdFieldDef fieldDef, ICorDebugFrame *pFrame, ICorDebugValue **ppValue);
void __stdcall ICorDebugClass_GetStaticFieldValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugClass_GetToken_Proxy(ICorDebugClass *This, mdTypeDef *pTypeDef);
void __stdcall ICorDebugClass_GetToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_CreateBreakpoint_Proxy(ICorDebugCode *This, ULONG32 offset, ICorDebugFunctionBreakpoint **ppBreakpoint);
void __stdcall ICorDebugCode_CreateBreakpoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_GetAddress_Proxy(ICorDebugCode *This, CORDB_ADDRESS *pStart);
void __stdcall ICorDebugCode_GetAddress_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_GetCode_Proxy(ICorDebugCode *This, ULONG32 startOffset, ULONG32 endOffset, ULONG32 cBufferAlloc, BYTE buffer[], ULONG32 *pcBufferSize);
void __stdcall ICorDebugCode_GetCode_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_GetFunction_Proxy(ICorDebugCode *This, ICorDebugFunction **ppFunction);
void __stdcall ICorDebugCode_GetFunction_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_GetILToNativeMapping_Proxy(ICorDebugCode *This, ULONG32 cMap, ULONG32 *pcMap, COR_DEBUG_IL_TO_NATIVE_MAP map[]);
void __stdcall ICorDebugCode_GetILToNativeMapping_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_GetSize_Proxy(ICorDebugCode *This, ULONG32 *pcBytes);
void __stdcall ICorDebugCode_GetSize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_GetVersionNumber_Proxy(ICorDebugCode *This, ULONG32 *nVersion);
void __stdcall ICorDebugCode_GetVersionNumber_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugCode_IsIL_Proxy(ICorDebugCode *This, BOOL *pbIL);
void __stdcall ICorDebugCode_IsIL_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_CanCommitChanges_Proxy(ICorDebugController *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);
void __stdcall ICorDebugController_CanCommitChanges_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_CommitChanges_Proxy(ICorDebugController *This, ULONG cSnapshots, ICorDebugEditAndContinueSnapshot *pSnapshots[], ICorDebugErrorInfoEnum **pError);
void __stdcall ICorDebugController_CommitChanges_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_Continue_Proxy(ICorDebugController *This, BOOL fIsOutOfBand);
void __stdcall ICorDebugController_Continue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_Detach_Proxy(ICorDebugController *This);
void __stdcall ICorDebugController_Detach_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_EnumerateThreads_Proxy(ICorDebugController *This, ICorDebugThreadEnum **ppThreads);
void __stdcall ICorDebugController_EnumerateThreads_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_HasQueuedCallbacks_Proxy(ICorDebugController *This, ICorDebugThread *pThread, BOOL *pbQueued);
void __stdcall ICorDebugController_HasQueuedCallbacks_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_IsRunning_Proxy(ICorDebugController *This, BOOL *pbRunning);
void __stdcall ICorDebugController_IsRunning_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_SetAllThreadsDebugState_Proxy(ICorDebugController *This, CorDebugThreadState state, ICorDebugThread *pExceptThisThread);
void __stdcall ICorDebugController_SetAllThreadsDebugState_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_Stop_Proxy(ICorDebugController *This, DWORD dwTimeout);
void __stdcall ICorDebugController_Stop_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugController_Terminate_Proxy(ICorDebugController *This, UINT exitCode);
void __stdcall ICorDebugController_Terminate_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueErrorInfo_GetErrorCode_Proxy(ICorDebugEditAndContinueErrorInfo *This, HRESULT *pHr);
void __stdcall ICorDebugEditAndContinueErrorInfo_GetErrorCode_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueErrorInfo_GetModule_Proxy(ICorDebugEditAndContinueErrorInfo *This, ICorDebugModule **ppModule);
void __stdcall ICorDebugEditAndContinueErrorInfo_GetModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueErrorInfo_GetString_Proxy(ICorDebugEditAndContinueErrorInfo *This, ULONG32 cchString, ULONG32 *pcchString, WCHAR szString[]);
void __stdcall ICorDebugEditAndContinueErrorInfo_GetString_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueErrorInfo_GetToken_Proxy(ICorDebugEditAndContinueErrorInfo *This, mdToken *pToken);
void __stdcall ICorDebugEditAndContinueErrorInfo_GetToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_CopyMetaData_Proxy(ICorDebugEditAndContinueSnapshot *This, IStream *pIStream, GUID *pMvid);
void __stdcall ICorDebugEditAndContinueSnapshot_CopyMetaData_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_GetMvid_Proxy(ICorDebugEditAndContinueSnapshot *This, GUID *pMvid);
void __stdcall ICorDebugEditAndContinueSnapshot_GetMvid_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_GetRoDataRVA_Proxy(ICorDebugEditAndContinueSnapshot *This, ULONG32 *pRoDataRVA);
void __stdcall ICorDebugEditAndContinueSnapshot_GetRoDataRVA_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_GetRwDataRVA_Proxy(ICorDebugEditAndContinueSnapshot *This, ULONG32 *pRwDataRVA);
void __stdcall ICorDebugEditAndContinueSnapshot_GetRwDataRVA_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_SetILMap_Proxy(ICorDebugEditAndContinueSnapshot *This, mdToken mdFunction, ULONG cMapSize, COR_IL_MAP map[]);
void __stdcall ICorDebugEditAndContinueSnapshot_SetILMap_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_SetPEBytes_Proxy(ICorDebugEditAndContinueSnapshot *This, IStream *pIStream);
void __stdcall ICorDebugEditAndContinueSnapshot_SetPEBytes_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEditAndContinueSnapshot_SetPESymbolBytes_Proxy(ICorDebugEditAndContinueSnapshot *This, IStream *pIStream);
void __stdcall ICorDebugEditAndContinueSnapshot_SetPESymbolBytes_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEnum_Clone_Proxy(ICorDebugEnum *This, ICorDebugEnum **ppEnum);
void __stdcall ICorDebugEnum_Clone_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEnum_GetCount_Proxy(ICorDebugEnum *This, ULONG *pcelt);
void __stdcall ICorDebugEnum_GetCount_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEnum_Reset_Proxy(ICorDebugEnum *This);
void __stdcall ICorDebugEnum_Reset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEnum_Skip_Proxy(ICorDebugEnum *This, ULONG celt);
void __stdcall ICorDebugEnum_Skip_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugErrorInfoEnum_Next_Proxy(ICorDebugErrorInfoEnum *This, ULONG celt, IErrorInfo *modules[], ULONG *pceltFetched);
void __stdcall ICorDebugErrorInfoEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_Abort_Proxy(ICorDebugEval *This);
void __stdcall ICorDebugEval_Abort_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_CallFunction_Proxy(ICorDebugEval *This, ICorDebugFunction *pFunction, ULONG32 nArgs, ICorDebugValue *ppArgs[]);
void __stdcall ICorDebugEval_CallFunction_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_CreateValue_Proxy(ICorDebugEval *This, CorElementType elementType, ICorDebugClass *pElementClass, ICorDebugValue **ppValue);
void __stdcall ICorDebugEval_CreateValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_GetResult_Proxy(ICorDebugEval *This, ICorDebugValue **ppResult);
void __stdcall ICorDebugEval_GetResult_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_GetThread_Proxy(ICorDebugEval *This, ICorDebugThread **ppThread);
void __stdcall ICorDebugEval_GetThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_IsActive_Proxy(ICorDebugEval *This, BOOL *pbActive);
void __stdcall ICorDebugEval_IsActive_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_NewArray_Proxy(ICorDebugEval *This, CorElementType elementType, ICorDebugClass *pElementClass, ULONG32 rank, ULONG32 dims[], ULONG32 lowBounds[]);
void __stdcall ICorDebugEval_NewArray_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_NewObjectNoConstructor_Proxy(ICorDebugEval *This, ICorDebugClass *pClass);
void __stdcall ICorDebugEval_NewObjectNoConstructor_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_NewObject_Proxy(ICorDebugEval *This, ICorDebugFunction *pConstructor, ULONG32 nArgs, ICorDebugValue *ppArgs[]);
void __stdcall ICorDebugEval_NewObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugEval_NewString_Proxy(ICorDebugEval *This, LPCWSTR string);
void __stdcall ICorDebugEval_NewString_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrameEnum_Next_Proxy(ICorDebugFrameEnum *This, ULONG celt, ICorDebugFrame *frames[], ULONG *pceltFetched);
void __stdcall ICorDebugFrameEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_CreateStepper_Proxy(ICorDebugFrame *This, ICorDebugStepper **ppStepper);
void __stdcall ICorDebugFrame_CreateStepper_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetCallee_Proxy(ICorDebugFrame *This, ICorDebugFrame **ppFrame);
void __stdcall ICorDebugFrame_GetCallee_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetCaller_Proxy(ICorDebugFrame *This, ICorDebugFrame **ppFrame);
void __stdcall ICorDebugFrame_GetCaller_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetChain_Proxy(ICorDebugFrame *This, ICorDebugChain **ppChain);
void __stdcall ICorDebugFrame_GetChain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetCode_Proxy(ICorDebugFrame *This, ICorDebugCode **ppCode);
void __stdcall ICorDebugFrame_GetCode_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetFunctionToken_Proxy(ICorDebugFrame *This, mdMethodDef *pToken);
void __stdcall ICorDebugFrame_GetFunctionToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetFunction_Proxy(ICorDebugFrame *This, ICorDebugFunction **ppFunction);
void __stdcall ICorDebugFrame_GetFunction_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFrame_GetStackRange_Proxy(ICorDebugFrame *This, CORDB_ADDRESS *pStart, CORDB_ADDRESS *pEnd);
void __stdcall ICorDebugFrame_GetStackRange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunctionBreakpoint_GetFunction_Proxy(ICorDebugFunctionBreakpoint *This, ICorDebugFunction **ppFunction);
void __stdcall ICorDebugFunctionBreakpoint_GetFunction_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunctionBreakpoint_GetOffset_Proxy(ICorDebugFunctionBreakpoint *This, ULONG32 *pnOffset);
void __stdcall ICorDebugFunctionBreakpoint_GetOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_CreateBreakpoint_Proxy(ICorDebugFunction *This, ICorDebugFunctionBreakpoint **ppBreakpoint);
void __stdcall ICorDebugFunction_CreateBreakpoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetClass_Proxy(ICorDebugFunction *This, ICorDebugClass **ppClass);
void __stdcall ICorDebugFunction_GetClass_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetCurrentVersionNumber_Proxy(ICorDebugFunction *This, ULONG32 *pnCurrentVersion);
void __stdcall ICorDebugFunction_GetCurrentVersionNumber_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetILCode_Proxy(ICorDebugFunction *This, ICorDebugCode **ppCode);
void __stdcall ICorDebugFunction_GetILCode_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetLocalVarSigToken_Proxy(ICorDebugFunction *This, mdSignature *pmdSig);
void __stdcall ICorDebugFunction_GetLocalVarSigToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetModule_Proxy(ICorDebugFunction *This, ICorDebugModule **ppModule);
void __stdcall ICorDebugFunction_GetModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetNativeCode_Proxy(ICorDebugFunction *This, ICorDebugCode **ppCode);
void __stdcall ICorDebugFunction_GetNativeCode_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugFunction_GetToken_Proxy(ICorDebugFunction *This, mdMethodDef *pMethodDef);
void __stdcall ICorDebugFunction_GetToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugGenericValue_GetValue_Proxy(ICorDebugGenericValue *This, void *pTo);
void __stdcall ICorDebugGenericValue_GetValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugGenericValue_SetValue_Proxy(ICorDebugGenericValue *This, void *pFrom);
void __stdcall ICorDebugGenericValue_SetValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugHeapValue_CreateRelocBreakpoint_Proxy(ICorDebugHeapValue *This, ICorDebugValueBreakpoint **ppBreakpoint);
void __stdcall ICorDebugHeapValue_CreateRelocBreakpoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugHeapValue_IsValid_Proxy(ICorDebugHeapValue *This, BOOL *pbValid);
void __stdcall ICorDebugHeapValue_IsValid_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_CanSetIP_Proxy(ICorDebugILFrame *This, ULONG32 nOffset);
void __stdcall ICorDebugILFrame_CanSetIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_EnumerateArguments_Proxy(ICorDebugILFrame *This, ICorDebugValueEnum **ppValueEnum);
void __stdcall ICorDebugILFrame_EnumerateArguments_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_EnumerateLocalVariables_Proxy(ICorDebugILFrame *This, ICorDebugValueEnum **ppValueEnum);
void __stdcall ICorDebugILFrame_EnumerateLocalVariables_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_GetArgument_Proxy(ICorDebugILFrame *This, DWORD dwIndex, ICorDebugValue **ppValue);
void __stdcall ICorDebugILFrame_GetArgument_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_GetIP_Proxy(ICorDebugILFrame *This, ULONG32 *pnOffset, CorDebugMappingResult *pMappingResult);
void __stdcall ICorDebugILFrame_GetIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_GetLocalVariable_Proxy(ICorDebugILFrame *This, DWORD dwIndex, ICorDebugValue **ppValue);
void __stdcall ICorDebugILFrame_GetLocalVariable_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_GetStackDepth_Proxy(ICorDebugILFrame *This, ULONG32 *pDepth);
void __stdcall ICorDebugILFrame_GetStackDepth_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_GetStackValue_Proxy(ICorDebugILFrame *This, DWORD dwIndex, ICorDebugValue **ppValue);
void __stdcall ICorDebugILFrame_GetStackValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugILFrame_SetIP_Proxy(ICorDebugILFrame *This, ULONG32 nOffset);
void __stdcall ICorDebugILFrame_SetIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_Break_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *thread);
void __stdcall ICorDebugManagedCallback_Break_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_Breakpoint_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugBreakpoint *pBreakpoint);
void __stdcall ICorDebugManagedCallback_Breakpoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_ControlCTrap_Proxy(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess);
void __stdcall ICorDebugManagedCallback_ControlCTrap_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_CreateAppDomain_Proxy(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess, ICorDebugAppDomain *pAppDomain);
void __stdcall ICorDebugManagedCallback_CreateAppDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_CreateProcess_Proxy(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess);
void __stdcall ICorDebugManagedCallback_CreateProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_CreateThread_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *thread);
void __stdcall ICorDebugManagedCallback_CreateThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_DebuggerError_Proxy(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess, HRESULT errorHR, DWORD errorCode);
void __stdcall ICorDebugManagedCallback_DebuggerError_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_EvalComplete_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugEval *pEval);
void __stdcall ICorDebugManagedCallback_EvalComplete_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_EvalException_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugEval *pEval);
void __stdcall ICorDebugManagedCallback_EvalException_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_Exception_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, BOOL unhandled);
void __stdcall ICorDebugManagedCallback_Exception_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_ExitAppDomain_Proxy(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess, ICorDebugAppDomain *pAppDomain);
void __stdcall ICorDebugManagedCallback_ExitAppDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_ExitProcess_Proxy(ICorDebugManagedCallback *This, ICorDebugProcess *pProcess);
void __stdcall ICorDebugManagedCallback_ExitProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_ExitThread_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *thread);
void __stdcall ICorDebugManagedCallback_ExitThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_LoadAssembly_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugAssembly *pAssembly);
void __stdcall ICorDebugManagedCallback_LoadAssembly_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_LoadClass_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugClass *c);
void __stdcall ICorDebugManagedCallback_LoadClass_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_LoadModule_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugModule *pModule);
void __stdcall ICorDebugManagedCallback_LoadModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_LogMessage_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, LONG lLevel, WCHAR *pLogSwitchName, WCHAR *pMessage);
void __stdcall ICorDebugManagedCallback_LogMessage_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_LogSwitch_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, LONG lLevel, ULONG ulReason, WCHAR *pLogSwitchName, WCHAR *pParentName);
void __stdcall ICorDebugManagedCallback_LogSwitch_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_NameChange_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread);
void __stdcall ICorDebugManagedCallback_NameChange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_StepComplete_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugThread *pThread, ICorDebugStepper *pStepper, CorDebugStepReason reason);
void __stdcall ICorDebugManagedCallback_StepComplete_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_UnloadAssembly_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugAssembly *pAssembly);
void __stdcall ICorDebugManagedCallback_UnloadAssembly_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_UnloadClass_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugClass *c);
void __stdcall ICorDebugManagedCallback_UnloadClass_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_UnloadModule_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugModule *pModule);
void __stdcall ICorDebugManagedCallback_UnloadModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugManagedCallback_UpdateModuleSymbols_Proxy(ICorDebugManagedCallback *This, ICorDebugAppDomain *pAppDomain, ICorDebugModule *pModule, IStream *pSymbolStream);
void __stdcall ICorDebugManagedCallback_UpdateModuleSymbols_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModuleBreakpoint_GetModule_Proxy(ICorDebugModuleBreakpoint *This, ICorDebugModule **ppModule);
void __stdcall ICorDebugModuleBreakpoint_GetModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModuleEnum_Next_Proxy(ICorDebugModuleEnum *This, ULONG celt, ICorDebugModule *modules[], ULONG *pceltFetched);
void __stdcall ICorDebugModuleEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_CreateBreakpoint_Proxy(ICorDebugModule *This, ICorDebugModuleBreakpoint **ppBreakpoint);
void __stdcall ICorDebugModule_CreateBreakpoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_EnableClassLoadCallbacks_Proxy(ICorDebugModule *This, BOOL bClassLoadCallbacks);
void __stdcall ICorDebugModule_EnableClassLoadCallbacks_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_EnableJITDebugging_Proxy(ICorDebugModule *This, BOOL bTrackJITInfo, BOOL bAllowJitOpts);
void __stdcall ICorDebugModule_EnableJITDebugging_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetAssembly_Proxy(ICorDebugModule *This, ICorDebugAssembly **ppAssembly);
void __stdcall ICorDebugModule_GetAssembly_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetBaseAddress_Proxy(ICorDebugModule *This, CORDB_ADDRESS *pAddress);
void __stdcall ICorDebugModule_GetBaseAddress_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetClassFromToken_Proxy(ICorDebugModule *This, mdTypeDef typeDef, ICorDebugClass **ppClass);
void __stdcall ICorDebugModule_GetClassFromToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetEditAndContinueSnapshot_Proxy(ICorDebugModule *This, ICorDebugEditAndContinueSnapshot **ppEditAndContinueSnapshot);
void __stdcall ICorDebugModule_GetEditAndContinueSnapshot_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetFunctionFromRVA_Proxy(ICorDebugModule *This, CORDB_ADDRESS rva, ICorDebugFunction **ppFunction);
void __stdcall ICorDebugModule_GetFunctionFromRVA_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetFunctionFromToken_Proxy(ICorDebugModule *This, mdMethodDef methodDef, ICorDebugFunction **ppFunction);
void __stdcall ICorDebugModule_GetFunctionFromToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetGlobalVariableValue_Proxy(ICorDebugModule *This, mdFieldDef fieldDef, ICorDebugValue **ppValue);
void __stdcall ICorDebugModule_GetGlobalVariableValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetMetaDataInterface_Proxy(ICorDebugModule *This, const IID *const riid, IUnknown **ppObj);
void __stdcall ICorDebugModule_GetMetaDataInterface_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetName_Proxy(ICorDebugModule *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ICorDebugModule_GetName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetProcess_Proxy(ICorDebugModule *This, ICorDebugProcess **ppProcess);
void __stdcall ICorDebugModule_GetProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetSize_Proxy(ICorDebugModule *This, ULONG32 *pcBytes);
void __stdcall ICorDebugModule_GetSize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_GetToken_Proxy(ICorDebugModule *This, mdModule *pToken);
void __stdcall ICorDebugModule_GetToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_IsDynamic_Proxy(ICorDebugModule *This, BOOL *pDynamic);
void __stdcall ICorDebugModule_IsDynamic_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugModule_IsInMemory_Proxy(ICorDebugModule *This, BOOL *pInMemory);
void __stdcall ICorDebugModule_IsInMemory_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_CanSetIP_Proxy(ICorDebugNativeFrame *This, ULONG32 nOffset);
void __stdcall ICorDebugNativeFrame_CanSetIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetIP_Proxy(ICorDebugNativeFrame *This, ULONG32 *pnOffset);
void __stdcall ICorDebugNativeFrame_GetIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetLocalDoubleRegisterValue_Proxy(ICorDebugNativeFrame *This, CorDebugRegister highWordReg, CorDebugRegister lowWordReg, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);
void __stdcall ICorDebugNativeFrame_GetLocalDoubleRegisterValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetLocalMemoryRegisterValue_Proxy(ICorDebugNativeFrame *This, CORDB_ADDRESS highWordAddress, CorDebugRegister lowWordRegister, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);
void __stdcall ICorDebugNativeFrame_GetLocalMemoryRegisterValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetLocalMemoryValue_Proxy(ICorDebugNativeFrame *This, CORDB_ADDRESS address, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);
void __stdcall ICorDebugNativeFrame_GetLocalMemoryValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetLocalRegisterMemoryValue_Proxy(ICorDebugNativeFrame *This, CorDebugRegister highWordReg, CORDB_ADDRESS lowWordAddress, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);
void __stdcall ICorDebugNativeFrame_GetLocalRegisterMemoryValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetLocalRegisterValue_Proxy(ICorDebugNativeFrame *This, CorDebugRegister reg, ULONG cbSigBlob, PCCOR_SIGNATURE pvSigBlob, ICorDebugValue **ppValue);
void __stdcall ICorDebugNativeFrame_GetLocalRegisterValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_GetRegisterSet_Proxy(ICorDebugNativeFrame *This, ICorDebugRegisterSet **ppRegisters);
void __stdcall ICorDebugNativeFrame_GetRegisterSet_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugNativeFrame_SetIP_Proxy(ICorDebugNativeFrame *This, ULONG32 nOffset);
void __stdcall ICorDebugNativeFrame_SetIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectEnum_Next_Proxy(ICorDebugObjectEnum *This, ULONG celt, CORDB_ADDRESS objects[], ULONG *pceltFetched);
void __stdcall ICorDebugObjectEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_GetClass_Proxy(ICorDebugObjectValue *This, ICorDebugClass **ppClass);
void __stdcall ICorDebugObjectValue_GetClass_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_GetContext_Proxy(ICorDebugObjectValue *This, ICorDebugContext **ppContext);
void __stdcall ICorDebugObjectValue_GetContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_GetFieldValue_Proxy(ICorDebugObjectValue *This, ICorDebugClass *pClass, mdFieldDef fieldDef, ICorDebugValue **ppValue);
void __stdcall ICorDebugObjectValue_GetFieldValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_GetManagedCopy_Proxy(ICorDebugObjectValue *This, IUnknown **ppObject);
void __stdcall ICorDebugObjectValue_GetManagedCopy_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_GetVirtualMethod_Proxy(ICorDebugObjectValue *This, mdMemberRef memberRef, ICorDebugFunction **ppFunction);
void __stdcall ICorDebugObjectValue_GetVirtualMethod_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_IsValueClass_Proxy(ICorDebugObjectValue *This, BOOL *pbIsValueClass);
void __stdcall ICorDebugObjectValue_IsValueClass_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugObjectValue_SetFromManagedCopy_Proxy(ICorDebugObjectValue *This, IUnknown *pObject);
void __stdcall ICorDebugObjectValue_SetFromManagedCopy_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcessEnum_Next_Proxy(ICorDebugProcessEnum *This, ULONG celt, ICorDebugProcess *processes[], ULONG *pceltFetched);
void __stdcall ICorDebugProcessEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_ClearCurrentException_Proxy(ICorDebugProcess *This, DWORD threadID);
void __stdcall ICorDebugProcess_ClearCurrentException_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_EnableLogMessages_Proxy(ICorDebugProcess *This, BOOL fOnOff);
void __stdcall ICorDebugProcess_EnableLogMessages_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_EnumerateAppDomains_Proxy(ICorDebugProcess *This, ICorDebugAppDomainEnum **ppAppDomains);
void __stdcall ICorDebugProcess_EnumerateAppDomains_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_EnumerateObjects_Proxy(ICorDebugProcess *This, ICorDebugObjectEnum **ppObjects);
void __stdcall ICorDebugProcess_EnumerateObjects_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_GetHandle_Proxy(ICorDebugProcess *This, HPROCESS *phProcessHandle);
void __stdcall ICorDebugProcess_GetHandle_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_GetID_Proxy(ICorDebugProcess *This, DWORD *pdwProcessId);
void __stdcall ICorDebugProcess_GetID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_GetObject_Proxy(ICorDebugProcess *This, ICorDebugValue **ppObject);
void __stdcall ICorDebugProcess_GetObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_GetThreadContext_Proxy(ICorDebugProcess *This, DWORD threadID, ULONG32 contextSize, BYTE context[]);
void __stdcall ICorDebugProcess_GetThreadContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_GetThread_Proxy(ICorDebugProcess *This, DWORD dwThreadId, ICorDebugThread **ppThread);
void __stdcall ICorDebugProcess_GetThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_IsOSSuspended_Proxy(ICorDebugProcess *This, DWORD threadID, BOOL *pbSuspended);
void __stdcall ICorDebugProcess_IsOSSuspended_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_IsTransitionStub_Proxy(ICorDebugProcess *This, CORDB_ADDRESS address, BOOL *pbTransitionStub);
void __stdcall ICorDebugProcess_IsTransitionStub_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_ModifyLogSwitch_Proxy(ICorDebugProcess *This, WCHAR *pLogSwitchName, LONG lLevel);
void __stdcall ICorDebugProcess_ModifyLogSwitch_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_ReadMemory_Proxy(ICorDebugProcess *This, CORDB_ADDRESS address, DWORD size, BYTE buffer[], DWORD *read);
void __stdcall ICorDebugProcess_ReadMemory_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_SetThreadContext_Proxy(ICorDebugProcess *This, DWORD threadID, ULONG32 contextSize, BYTE context[]);
void __stdcall ICorDebugProcess_SetThreadContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_ThreadForFiberCookie_Proxy(ICorDebugProcess *This, DWORD fiberCookie, ICorDebugThread **ppThread);
void __stdcall ICorDebugProcess_ThreadForFiberCookie_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugProcess_WriteMemory_Proxy(ICorDebugProcess *This, CORDB_ADDRESS address, DWORD size, BYTE buffer[], DWORD *written);
void __stdcall ICorDebugProcess_WriteMemory_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugReferenceValue_DereferenceStrong_Proxy(ICorDebugReferenceValue *This, ICorDebugValue **ppValue);
void __stdcall ICorDebugReferenceValue_DereferenceStrong_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugReferenceValue_Dereference_Proxy(ICorDebugReferenceValue *This, ICorDebugValue **ppValue);
void __stdcall ICorDebugReferenceValue_Dereference_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugReferenceValue_GetValue_Proxy(ICorDebugReferenceValue *This, CORDB_ADDRESS *pValue);
void __stdcall ICorDebugReferenceValue_GetValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugReferenceValue_IsNull_Proxy(ICorDebugReferenceValue *This, BOOL *pbNull);
void __stdcall ICorDebugReferenceValue_IsNull_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugReferenceValue_SetValue_Proxy(ICorDebugReferenceValue *This, CORDB_ADDRESS value);
void __stdcall ICorDebugReferenceValue_SetValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugRegisterSet_GetRegistersAvailable_Proxy(ICorDebugRegisterSet *This, ULONG64 *pAvailable);
void __stdcall ICorDebugRegisterSet_GetRegistersAvailable_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugRegisterSet_GetRegisters_Proxy(ICorDebugRegisterSet *This, ULONG64 mask, ULONG32 regCount, CORDB_REGISTER regBuffer[]);
void __stdcall ICorDebugRegisterSet_GetRegisters_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugRegisterSet_GetThreadContext_Proxy(ICorDebugRegisterSet *This, ULONG32 contextSize, BYTE context[]);
void __stdcall ICorDebugRegisterSet_GetThreadContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugRegisterSet_SetRegisters_Proxy(ICorDebugRegisterSet *This, ULONG64 mask, ULONG32 regCount, CORDB_REGISTER regBuffer[]);
void __stdcall ICorDebugRegisterSet_SetRegisters_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugRegisterSet_SetThreadContext_Proxy(ICorDebugRegisterSet *This, ULONG32 contextSize, BYTE context[]);
void __stdcall ICorDebugRegisterSet_SetThreadContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepperEnum_Next_Proxy(ICorDebugStepperEnum *This, ULONG celt, ICorDebugStepper *steppers[], ULONG *pceltFetched);
void __stdcall ICorDebugStepperEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_Deactivate_Proxy(ICorDebugStepper *This);
void __stdcall ICorDebugStepper_Deactivate_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_IsActive_Proxy(ICorDebugStepper *This, BOOL *pbActive);
void __stdcall ICorDebugStepper_IsActive_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_SetInterceptMask_Proxy(ICorDebugStepper *This, CorDebugIntercept mask);
void __stdcall ICorDebugStepper_SetInterceptMask_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_SetRangeIL_Proxy(ICorDebugStepper *This, BOOL bIL);
void __stdcall ICorDebugStepper_SetRangeIL_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_SetUnmappedStopMask_Proxy(ICorDebugStepper *This, CorDebugUnmappedStop mask);
void __stdcall ICorDebugStepper_SetUnmappedStopMask_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_StepOut_Proxy(ICorDebugStepper *This);
void __stdcall ICorDebugStepper_StepOut_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_StepRange_Proxy(ICorDebugStepper *This, BOOL bStepIn, COR_DEBUG_STEP_RANGE ranges[], ULONG32 cRangeCount);
void __stdcall ICorDebugStepper_StepRange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStepper_Step_Proxy(ICorDebugStepper *This, BOOL bStepIn);
void __stdcall ICorDebugStepper_Step_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStringValue_GetLength_Proxy(ICorDebugStringValue *This, ULONG32 *pcchString);
void __stdcall ICorDebugStringValue_GetLength_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugStringValue_GetString_Proxy(ICorDebugStringValue *This, ULONG32 cchString, ULONG32 *pcchString, WCHAR szString[]);
void __stdcall ICorDebugStringValue_GetString_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThreadEnum_Next_Proxy(ICorDebugThreadEnum *This, ULONG celt, ICorDebugThread *threads[], ULONG *pceltFetched);
void __stdcall ICorDebugThreadEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_ClearCurrentException_Proxy(ICorDebugThread *This);
void __stdcall ICorDebugThread_ClearCurrentException_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_CreateEval_Proxy(ICorDebugThread *This, ICorDebugEval **ppEval);
void __stdcall ICorDebugThread_CreateEval_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_CreateStepper_Proxy(ICorDebugThread *This, ICorDebugStepper **ppStepper);
void __stdcall ICorDebugThread_CreateStepper_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_EnumerateChains_Proxy(ICorDebugThread *This, ICorDebugChainEnum **ppChains);
void __stdcall ICorDebugThread_EnumerateChains_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetActiveChain_Proxy(ICorDebugThread *This, ICorDebugChain **ppChain);
void __stdcall ICorDebugThread_GetActiveChain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetActiveFrame_Proxy(ICorDebugThread *This, ICorDebugFrame **ppFrame);
void __stdcall ICorDebugThread_GetActiveFrame_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetAppDomain_Proxy(ICorDebugThread *This, ICorDebugAppDomain **ppAppDomain);
void __stdcall ICorDebugThread_GetAppDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetCurrentException_Proxy(ICorDebugThread *This, ICorDebugValue **ppExceptionObject);
void __stdcall ICorDebugThread_GetCurrentException_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetDebugState_Proxy(ICorDebugThread *This, CorDebugThreadState *pState);
void __stdcall ICorDebugThread_GetDebugState_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetHandle_Proxy(ICorDebugThread *This, HTHREAD *phThreadHandle);
void __stdcall ICorDebugThread_GetHandle_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetID_Proxy(ICorDebugThread *This, DWORD *pdwThreadId);
void __stdcall ICorDebugThread_GetID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetObject_Proxy(ICorDebugThread *This, ICorDebugValue **ppObject);
void __stdcall ICorDebugThread_GetObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetProcess_Proxy(ICorDebugThread *This, ICorDebugProcess **ppProcess);
void __stdcall ICorDebugThread_GetProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetRegisterSet_Proxy(ICorDebugThread *This, ICorDebugRegisterSet **ppRegisters);
void __stdcall ICorDebugThread_GetRegisterSet_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_GetUserState_Proxy(ICorDebugThread *This, CorDebugUserState *pState);
void __stdcall ICorDebugThread_GetUserState_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugThread_SetDebugState_Proxy(ICorDebugThread *This, CorDebugThreadState state);
void __stdcall ICorDebugThread_SetDebugState_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugUnmanagedCallback_DebugEvent_Proxy(ICorDebugUnmanagedCallback *This, LPDEBUG_EVENT pDebugEvent, BOOL fOutOfBand);
void __stdcall ICorDebugUnmanagedCallback_DebugEvent_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugValueBreakpoint_GetValue_Proxy(ICorDebugValueBreakpoint *This, ICorDebugValue **ppValue);
void __stdcall ICorDebugValueBreakpoint_GetValue_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugValueEnum_Next_Proxy(ICorDebugValueEnum *This, ULONG celt, ICorDebugValue *values[], ULONG *pceltFetched);
void __stdcall ICorDebugValueEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugValue_CreateBreakpoint_Proxy(ICorDebugValue *This, ICorDebugValueBreakpoint **ppBreakpoint);
void __stdcall ICorDebugValue_CreateBreakpoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugValue_GetAddress_Proxy(ICorDebugValue *This, CORDB_ADDRESS *pAddress);
void __stdcall ICorDebugValue_GetAddress_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugValue_GetSize_Proxy(ICorDebugValue *This, ULONG32 *pSize);
void __stdcall ICorDebugValue_GetSize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebugValue_GetType_Proxy(ICorDebugValue *This, CorElementType *pType);
void __stdcall ICorDebugValue_GetType_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_CreateProcess_Proxy(ICorDebug *This, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, PVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation, CorDebugCreateProcessFlags debuggingFlags, ICorDebugProcess **ppProcess);
void __stdcall ICorDebug_CreateProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_DebugActiveProcess_Proxy(ICorDebug *This, DWORD id, BOOL win32Attach, ICorDebugProcess **ppProcess);
void __stdcall ICorDebug_DebugActiveProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_EnumerateProcesses_Proxy(ICorDebug *This, ICorDebugProcessEnum **ppProcess);
void __stdcall ICorDebug_EnumerateProcesses_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_GetProcess_Proxy(ICorDebug *This, DWORD dwProcessId, ICorDebugProcess **ppProcess);
void __stdcall ICorDebug_GetProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_Initialize_Proxy(ICorDebug *This);
void __stdcall ICorDebug_Initialize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_SetManagedHandler_Proxy(ICorDebug *This, ICorDebugManagedCallback *pCallback);
void __stdcall ICorDebug_SetManagedHandler_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_SetUnmanagedHandler_Proxy(ICorDebug *This, ICorDebugUnmanagedCallback *pCallback);
void __stdcall ICorDebug_SetUnmanagedHandler_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorDebug_Terminate_Proxy(ICorDebug *This);
void __stdcall ICorDebug_Terminate_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AppDomainCreationFinished_Proxy(ICorProfilerCallback *This, AppDomainID appDomainId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_AppDomainCreationFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AppDomainCreationStarted_Proxy(ICorProfilerCallback *This, AppDomainID appDomainId);
void __stdcall ICorProfilerCallback_AppDomainCreationStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AppDomainShutdownFinished_Proxy(ICorProfilerCallback *This, AppDomainID appDomainId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_AppDomainShutdownFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AppDomainShutdownStarted_Proxy(ICorProfilerCallback *This, AppDomainID appDomainId);
void __stdcall ICorProfilerCallback_AppDomainShutdownStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AssemblyLoadFinished_Proxy(ICorProfilerCallback *This, AssemblyID assemblyId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_AssemblyLoadFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AssemblyLoadStarted_Proxy(ICorProfilerCallback *This, AssemblyID assemblyId);
void __stdcall ICorProfilerCallback_AssemblyLoadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AssemblyUnloadFinished_Proxy(ICorProfilerCallback *This, AssemblyID assemblyId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_AssemblyUnloadFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_AssemblyUnloadStarted_Proxy(ICorProfilerCallback *This, AssemblyID assemblyId);
void __stdcall ICorProfilerCallback_AssemblyUnloadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_COMClassicWrapperCreated_Proxy(ICorProfilerCallback *This, ClassID wrappedClassId, const GUID *const implementedIID, void *pUnk, ULONG cSlots);
void __stdcall ICorProfilerCallback_COMClassicWrapperCreated_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_COMClassicWrapperDestroyed_Proxy(ICorProfilerCallback *This, ClassID wrappedClassId, const GUID *const implementedIID, void *pUnk);
void __stdcall ICorProfilerCallback_COMClassicWrapperDestroyed_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ClassLoadFinished_Proxy(ICorProfilerCallback *This, ClassID classId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_ClassLoadFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ClassLoadStarted_Proxy(ICorProfilerCallback *This, ClassID classId);
void __stdcall ICorProfilerCallback_ClassLoadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ClassUnloadFinished_Proxy(ICorProfilerCallback *This, ClassID classId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_ClassUnloadFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ClassUnloadStarted_Proxy(ICorProfilerCallback *This, ClassID classId);
void __stdcall ICorProfilerCallback_ClassUnloadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionCatcherEnter_Proxy(ICorProfilerCallback *This, FunctionID functionId, ObjectID objectId);
void __stdcall ICorProfilerCallback_ExceptionCatcherEnter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionCatcherLeave_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_ExceptionCatcherLeave_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionOSHandlerEnter_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionOSHandlerEnter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionOSHandlerLeave_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionOSHandlerLeave_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionSearchCatcherFound_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionSearchCatcherFound_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionSearchFilterEnter_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionSearchFilterEnter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionSearchFilterLeave_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_ExceptionSearchFilterLeave_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionSearchFunctionEnter_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionSearchFunctionEnter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionSearchFunctionLeave_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_ExceptionSearchFunctionLeave_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionThrown_Proxy(ICorProfilerCallback *This, ObjectID thrownObjectId);
void __stdcall ICorProfilerCallback_ExceptionThrown_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionUnwindFinallyEnter_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionUnwindFinallyEnter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionUnwindFinallyLeave_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_ExceptionUnwindFinallyLeave_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionUnwindFunctionEnter_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_ExceptionUnwindFunctionEnter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ExceptionUnwindFunctionLeave_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_ExceptionUnwindFunctionLeave_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_FunctionUnloadStarted_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_FunctionUnloadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_Initialize_Proxy(ICorProfilerCallback *This, IUnknown *pICorProfilerInfoUnk, DWORD *pdwRequestedEvents);
void __stdcall ICorProfilerCallback_Initialize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_JITCachedFunctionSearchFinished_Proxy(ICorProfilerCallback *This, FunctionID functionId, COR_PRF_JIT_CACHE result);
void __stdcall ICorProfilerCallback_JITCachedFunctionSearchFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_JITCachedFunctionSearchStarted_Proxy(ICorProfilerCallback *This, FunctionID functionId, BOOL *pbUseCachedFunction);
void __stdcall ICorProfilerCallback_JITCachedFunctionSearchStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_JITCompilationFinished_Proxy(ICorProfilerCallback *This, FunctionID functionId, HRESULT hrStatus, BOOL fIsSafeToBlock);
void __stdcall ICorProfilerCallback_JITCompilationFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_JITCompilationStarted_Proxy(ICorProfilerCallback *This, FunctionID functionId, BOOL fIsSafeToBlock);
void __stdcall ICorProfilerCallback_JITCompilationStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_JITFunctionPitched_Proxy(ICorProfilerCallback *This, FunctionID functionId);
void __stdcall ICorProfilerCallback_JITFunctionPitched_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_JITInlining_Proxy(ICorProfilerCallback *This, FunctionID callerId, FunctionID calleeId, BOOL *pfShouldInline);
void __stdcall ICorProfilerCallback_JITInlining_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ManagedToUnmanagedTransition_Proxy(ICorProfilerCallback *This, FunctionID functionId, COR_PRF_TRANSITION_REASON reason);
void __stdcall ICorProfilerCallback_ManagedToUnmanagedTransition_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ModuleAttachedToAssembly_Proxy(ICorProfilerCallback *This, ModuleID moduleId, AssemblyID AssemblyId);
void __stdcall ICorProfilerCallback_ModuleAttachedToAssembly_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ModuleLoadFinished_Proxy(ICorProfilerCallback *This, ModuleID moduleId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_ModuleLoadFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ModuleLoadStarted_Proxy(ICorProfilerCallback *This, ModuleID moduleId);
void __stdcall ICorProfilerCallback_ModuleLoadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ModuleUnloadFinished_Proxy(ICorProfilerCallback *This, ModuleID moduleId, HRESULT hrStatus);
void __stdcall ICorProfilerCallback_ModuleUnloadFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ModuleUnloadStarted_Proxy(ICorProfilerCallback *This, ModuleID moduleId);
void __stdcall ICorProfilerCallback_ModuleUnloadStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_MovedReferences_Proxy(ICorProfilerCallback *This, ULONG cMovedObjectIDRanges, ObjectID oldObjectIDRangeStart[], ObjectID newObjectIDRangeStart[], ULONG cObjectIDRangeLength[]);
void __stdcall ICorProfilerCallback_MovedReferences_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ObjectAllocated_Proxy(ICorProfilerCallback *This, ObjectID objectId, ClassID classId);
void __stdcall ICorProfilerCallback_ObjectAllocated_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ObjectReferences_Proxy(ICorProfilerCallback *This, ObjectID objectId, ClassID classId, ULONG cObjectRefs, ObjectID objectRefIds[]);
void __stdcall ICorProfilerCallback_ObjectReferences_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ObjectsAllocatedByClass_Proxy(ICorProfilerCallback *This, ULONG cClassCount, ClassID classIds[], ULONG cObjects[]);
void __stdcall ICorProfilerCallback_ObjectsAllocatedByClass_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingClientInvocationFinished_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RemotingClientInvocationFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingClientInvocationStarted_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RemotingClientInvocationStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingClientReceivingReply_Proxy(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);
void __stdcall ICorProfilerCallback_RemotingClientReceivingReply_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingClientSendingMessage_Proxy(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);
void __stdcall ICorProfilerCallback_RemotingClientSendingMessage_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingServerInvocationReturned_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RemotingServerInvocationReturned_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingServerInvocationStarted_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RemotingServerInvocationStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingServerReceivingMessage_Proxy(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);
void __stdcall ICorProfilerCallback_RemotingServerReceivingMessage_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RemotingServerSendingReply_Proxy(ICorProfilerCallback *This, GUID *pCookie, BOOL fIsAsync);
void __stdcall ICorProfilerCallback_RemotingServerSendingReply_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RootReferences_Proxy(ICorProfilerCallback *This, ULONG cRootRefs, ObjectID rootRefIds[]);
void __stdcall ICorProfilerCallback_RootReferences_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeResumeFinished_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RuntimeResumeFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeResumeStarted_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RuntimeResumeStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeSuspendAborted_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RuntimeSuspendAborted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeSuspendFinished_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_RuntimeSuspendFinished_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeSuspendStarted_Proxy(ICorProfilerCallback *This, COR_PRF_SUSPEND_REASON suspendReason);
void __stdcall ICorProfilerCallback_RuntimeSuspendStarted_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeThreadResumed_Proxy(ICorProfilerCallback *This, ThreadID threadId);
void __stdcall ICorProfilerCallback_RuntimeThreadResumed_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_RuntimeThreadSuspended_Proxy(ICorProfilerCallback *This, ThreadID threadId);
void __stdcall ICorProfilerCallback_RuntimeThreadSuspended_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_SecurityCheck_Proxy(ICorProfilerCallback *This, ThreadID threadId);
void __stdcall ICorProfilerCallback_SecurityCheck_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_Shutdown_Proxy(ICorProfilerCallback *This);
void __stdcall ICorProfilerCallback_Shutdown_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadAcquiredMonitor_Proxy(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);
void __stdcall ICorProfilerCallback_ThreadAcquiredMonitor_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadAcquiringMonitor_Proxy(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);
void __stdcall ICorProfilerCallback_ThreadAcquiringMonitor_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadAssignedToOSThread_Proxy(ICorProfilerCallback *This, ThreadID managedThreadId, DWORD osThreadId);
void __stdcall ICorProfilerCallback_ThreadAssignedToOSThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadBlockedMonitor_Proxy(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);
void __stdcall ICorProfilerCallback_ThreadBlockedMonitor_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadCreated_Proxy(ICorProfilerCallback *This, ThreadID threadId);
void __stdcall ICorProfilerCallback_ThreadCreated_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadDestroyed_Proxy(ICorProfilerCallback *This, ThreadID threadId);
void __stdcall ICorProfilerCallback_ThreadDestroyed_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_ThreadReleasedMonitor_Proxy(ICorProfilerCallback *This, ThreadID threadId, MonitorID monitorId, ObjectID objectId, ClassID classId);
void __stdcall ICorProfilerCallback_ThreadReleasedMonitor_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerCallback_UnmanagedToManagedTransition_Proxy(ICorProfilerCallback *This, FunctionID functionId, COR_PRF_TRANSITION_REASON reason);
void __stdcall ICorProfilerCallback_UnmanagedToManagedTransition_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_ForceGC_Proxy(ICorProfilerInfo *This);
void __stdcall ICorProfilerInfo_ForceGC_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetAppDomainInfo_Proxy(ICorProfilerInfo *This, AppDomainID appDomainId, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[], ProcessID *pProcessId);
void __stdcall ICorProfilerInfo_GetAppDomainInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetAssemblyInfo_Proxy(ICorProfilerInfo *This, AssemblyID assemblyId, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[], AppDomainID *pAppDomainId, ModuleID *pModuleId);
void __stdcall ICorProfilerInfo_GetAssemblyInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetClassFromObject_Proxy(ICorProfilerInfo *This, ObjectID objectId, ClassID *pClassId);
void __stdcall ICorProfilerInfo_GetClassFromObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetClassFromToken_Proxy(ICorProfilerInfo *This, ModuleID moduleId, mdTypeDef typeDef, ClassID *pClassId);
void __stdcall ICorProfilerInfo_GetClassFromToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetClassIDInfo_Proxy(ICorProfilerInfo *This, ClassID classId, ModuleID *pModuleId, mdTypeDef *pTypeDefToken);
void __stdcall ICorProfilerInfo_GetClassIDInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetCodeInfo_Proxy(ICorProfilerInfo *This, FunctionID functionId, LPCBYTE *pStart, ULONG *pcSize);
void __stdcall ICorProfilerInfo_GetCodeInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetCurrentThreadID_Proxy(ICorProfilerInfo *This, ThreadID *pThreadId);
void __stdcall ICorProfilerInfo_GetCurrentThreadID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetEventMask_Proxy(ICorProfilerInfo *This, DWORD *pdwEvents);
void __stdcall ICorProfilerInfo_GetEventMask_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetFunctionFromIP_Proxy(ICorProfilerInfo *This, LPCBYTE ip, FunctionID *pFunctionId);
void __stdcall ICorProfilerInfo_GetFunctionFromIP_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetFunctionFromToken_Proxy(ICorProfilerInfo *This, ModuleID moduleId, mdToken token, FunctionID *pFunctionId);
void __stdcall ICorProfilerInfo_GetFunctionFromToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetFunctionInfo_Proxy(ICorProfilerInfo *This, FunctionID functionId, ClassID *pClassId, ModuleID *pModuleId, mdToken *pToken);
void __stdcall ICorProfilerInfo_GetFunctionInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetHandleFromThread_Proxy(ICorProfilerInfo *This, ThreadID threadId, HANDLE *phThread);
void __stdcall ICorProfilerInfo_GetHandleFromThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetILFunctionBodyAllocator_Proxy(ICorProfilerInfo *This, ModuleID moduleId, IMethodMalloc **ppMalloc);
void __stdcall ICorProfilerInfo_GetILFunctionBodyAllocator_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetILFunctionBody_Proxy(ICorProfilerInfo *This, ModuleID moduleId, mdMethodDef methodId, LPCBYTE *ppMethodHeader, ULONG *pcbMethodSize);
void __stdcall ICorProfilerInfo_GetILFunctionBody_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetInprocInspectionIThisThread_Proxy(ICorProfilerInfo *This, IUnknown **ppicd);
void __stdcall ICorProfilerInfo_GetInprocInspectionIThisThread_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetInprocInspectionInterface_Proxy(ICorProfilerInfo *This, IUnknown **ppicd);
void __stdcall ICorProfilerInfo_GetInprocInspectionInterface_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetModuleInfo_Proxy(ICorProfilerInfo *This, ModuleID moduleId, LPCBYTE *ppBaseLoadAddress, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[], mdModule *pModuleToken, AssemblyID *pAssemblyId);
void __stdcall ICorProfilerInfo_GetModuleInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetModuleMetaData_Proxy(ICorProfilerInfo *This, ModuleID moduleId, DWORD dwOpenFlags, const IID *const riid, IUnknown **ppOut);
void __stdcall ICorProfilerInfo_GetModuleMetaData_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetObjectSize_Proxy(ICorProfilerInfo *This, ObjectID objectId, ULONG32 *pcSize);
void __stdcall ICorProfilerInfo_GetObjectSize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetStaticClassSize_Proxy(ICorProfilerInfo *This, ClassID classId, ULONG *pcStaticSize);
void __stdcall ICorProfilerInfo_GetStaticClassSize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetThreadContext_Proxy(ICorProfilerInfo *This, ThreadID threadId, ContextID *pContextId);
void __stdcall ICorProfilerInfo_GetThreadContext_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetThreadInfo_Proxy(ICorProfilerInfo *This, ThreadID threadId, DWORD *pdwWin32ThreadId);
void __stdcall ICorProfilerInfo_GetThreadInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_GetTokenAndMetaDataFromFunction_Proxy(ICorProfilerInfo *This, FunctionID functionId, const IID *const riid, IUnknown **ppImport, mdToken *pToken);
void __stdcall ICorProfilerInfo_GetTokenAndMetaDataFromFunction_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetEnterLeaveFunctionHooks_Proxy(ICorProfilerInfo *This, FunctionEnter *pFuncEnter, FunctionLeave *pFuncLeave, FunctionTailcall *pFuncTailcall);
void __stdcall ICorProfilerInfo_SetEnterLeaveFunctionHooks_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetEventMask_Proxy(ICorProfilerInfo *This, DWORD dwEvents);
void __stdcall ICorProfilerInfo_SetEventMask_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetFunctionIDMapper_Proxy(ICorProfilerInfo *This, FunctionIDMapper *pFunc);
void __stdcall ICorProfilerInfo_SetFunctionIDMapper_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetFunctionReJIT_Proxy(ICorProfilerInfo *This, FunctionID functionId);
void __stdcall ICorProfilerInfo_SetFunctionReJIT_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetILFunctionBody_Proxy(ICorProfilerInfo *This, ModuleID moduleId, mdMethodDef methodid, LPCBYTE pbNewILMethodHeader);
void __stdcall ICorProfilerInfo_SetILFunctionBody_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetILInstrumentedCodeMap_Proxy(ICorProfilerInfo *This, FunctionID functionId, BOOL fStartJit, ULONG32 cILMapEntries, COR_IL_MAP rgILMapEntries[]);
void __stdcall ICorProfilerInfo_SetILInstrumentedCodeMap_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorProfilerInfo_SetILMapFlag_Proxy(ICorProfilerInfo *This);
void __stdcall ICorProfilerInfo_SetILMapFlag_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishAppDomainEnum_Next_Proxy(ICorPublishAppDomainEnum *This, ULONG celt, ICorPublishAppDomain *objects[], ULONG *pceltFetched);
void __stdcall ICorPublishAppDomainEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishAppDomain_GetID_Proxy(ICorPublishAppDomain *This, ULONG32 *puId);
void __stdcall ICorPublishAppDomain_GetID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishAppDomain_GetName_Proxy(ICorPublishAppDomain *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ICorPublishAppDomain_GetName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishEnum_Clone_Proxy(ICorPublishEnum *This, ICorPublishEnum **ppEnum);
void __stdcall ICorPublishEnum_Clone_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishEnum_GetCount_Proxy(ICorPublishEnum *This, ULONG *pcelt);
void __stdcall ICorPublishEnum_GetCount_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishEnum_Reset_Proxy(ICorPublishEnum *This);
void __stdcall ICorPublishEnum_Reset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishEnum_Skip_Proxy(ICorPublishEnum *This, ULONG celt);
void __stdcall ICorPublishEnum_Skip_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishProcessEnum_Next_Proxy(ICorPublishProcessEnum *This, ULONG celt, ICorPublishProcess *objects[], ULONG *pceltFetched);
void __stdcall ICorPublishProcessEnum_Next_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishProcess_EnumAppDomains_Proxy(ICorPublishProcess *This, ICorPublishAppDomainEnum **ppEnum);
void __stdcall ICorPublishProcess_EnumAppDomains_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishProcess_GetDisplayName_Proxy(ICorPublishProcess *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ICorPublishProcess_GetDisplayName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishProcess_GetProcessID_Proxy(ICorPublishProcess *This, unsigned int *pid);
void __stdcall ICorPublishProcess_GetProcessID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublishProcess_IsManaged_Proxy(ICorPublishProcess *This, BOOL *pbManaged);
void __stdcall ICorPublishProcess_IsManaged_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublish_EnumProcesses_Proxy(ICorPublish *This, COR_PUB_ENUMPROCESS Type, ICorPublishProcessEnum **ppIEnum);
void __stdcall ICorPublish_EnumProcesses_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorPublish_GetProcess_Proxy(ICorPublish *This, unsigned int pid, ICorPublishProcess **ppProcess);
void __stdcall ICorPublish_GetProcess_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_CloseEnum_Proxy(ICorRuntimeHost *This, HDOMAINENUM hEnum);
void __stdcall ICorRuntimeHost_CloseEnum_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_CreateDomainProxy_Proxy(ICorRuntimeHost *This, LPWSTR pwzFriendlyName, IUnknown *pIdentityArray, IUnknown *pPolicyArray, IUnknown **pDomainProxy);
void __stdcall ICorRuntimeHost_CreateDomainProxy_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_CreateDomain_Proxy(ICorRuntimeHost *This, LPWSTR pwzFriendlyName, IUnknown *pIdentityArray, IUnknown *pPolicyArray, IUnknown **pAppDomain);
void __stdcall ICorRuntimeHost_CreateDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_CreateFiberInfo_Proxy(ICorRuntimeHost *This);
void __stdcall ICorRuntimeHost_CreateFiberInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_DeleteFiber_Proxy(ICorRuntimeHost *This);
void __stdcall ICorRuntimeHost_DeleteFiber_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_EnumDomains_Proxy(ICorRuntimeHost *This, HDOMAINENUM *hEnum);
void __stdcall ICorRuntimeHost_EnumDomains_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_GetConfiguration_Proxy(ICorRuntimeHost *This, ICorConfiguration **pConfiguration);
void __stdcall ICorRuntimeHost_GetConfiguration_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_GetDefaultDomain_Proxy(ICorRuntimeHost *This, IUnknown **pAppDomain);
void __stdcall ICorRuntimeHost_GetDefaultDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_MapFile_Proxy(ICorRuntimeHost *This, ULONG hFile, HMODULE *hMapAddress);
void __stdcall ICorRuntimeHost_MapFile_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_NextDomain_Proxy(ICorRuntimeHost *This, HDOMAINENUM hEnum, IUnknown **pAppDomain);
void __stdcall ICorRuntimeHost_NextDomain_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_ResetDomainEnum_Proxy(ICorRuntimeHost *This, HDOMAINENUM hEnum);
void __stdcall ICorRuntimeHost_ResetDomainEnum_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_Start_Proxy(ICorRuntimeHost *This);
void __stdcall ICorRuntimeHost_Start_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_Stop_Proxy(ICorRuntimeHost *This);
void __stdcall ICorRuntimeHost_Stop_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_SwitchFiberIn_Proxy(ICorRuntimeHost *This, DWORD *pFiberCookie);
void __stdcall ICorRuntimeHost_SwitchFiberIn_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_SwitchFiberOut_Proxy(ICorRuntimeHost *This, DWORD **pFiberCookie);
void __stdcall ICorRuntimeHost_SwitchFiberOut_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_VerifyAssemblyFile_Proxy(ICorRuntimeHost *This, LPWSTR MIDL_0015, LONG *errors, DWORD errorSize, DWORD *errorCount);
void __stdcall ICorRuntimeHost_VerifyAssemblyFile_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_VerifyAssembly_Proxy(ICorRuntimeHost *This, BYTE *pbModule, DWORD cbModule, LONG *errors, DWORD errorSize, DWORD *errorCount);
void __stdcall ICorRuntimeHost_VerifyAssembly_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorRuntimeHost_VerifyClassesInModule_Proxy(ICorRuntimeHost *This, DWORD BaseAddress);
void __stdcall ICorRuntimeHost_VerifyClassesInModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorBindIoCompletionCallback_Proxy(ICorThreadpool *This, HANDLE fileHandle, LPOVERLAPPED_COMPLETION_ROUTINE callback);
void __stdcall ICorThreadpool_CorBindIoCompletionCallback_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorChangeTimer_Proxy(ICorThreadpool *This, HANDLE Timer, ULONG DueTime, ULONG Period, BOOL *result);
void __stdcall ICorThreadpool_CorChangeTimer_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorCreateTimer_Proxy(ICorThreadpool *This, HANDLE *phNewTimer, WAITORTIMERCALLBACK Callback, PVOID Parameter, DWORD DueTime, DWORD Period, BOOL *result);
void __stdcall ICorThreadpool_CorCreateTimer_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorDeleteTimer_Proxy(ICorThreadpool *This, HANDLE Timer, HANDLE CompletionEvent, BOOL *result);
void __stdcall ICorThreadpool_CorDeleteTimer_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorQueueUserWorkItem_Proxy(ICorThreadpool *This, LPTHREAD_START_ROUTINE Function, PVOID Context, BOOL executeOnlyOnce, BOOL *result);
void __stdcall ICorThreadpool_CorQueueUserWorkItem_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorRegisterWaitForSingleObject_Proxy(ICorThreadpool *This, HANDLE *phNewWaitObject, HANDLE hWaitObject, WAITORTIMERCALLBACK Callback, PVOID Context, ULONG timeout, BOOL executeOnlyOnce, BOOL *result);
void __stdcall ICorThreadpool_CorRegisterWaitForSingleObject_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ICorThreadpool_CorUnregisterWait_Proxy(ICorThreadpool *This, HANDLE hWaitObject, HANDLE CompletionEvent, BOOL *result);
void __stdcall ICorThreadpool_CorUnregisterWait_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IDebuggerThreadControl_ReleaseAllRuntimeThreads_Proxy(IDebuggerThreadControl *This);
void __stdcall IDebuggerThreadControl_ReleaseAllRuntimeThreads_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IDebuggerThreadControl_ThreadIsBlockingForDebugger_Proxy(IDebuggerThreadControl *This);
void __stdcall IDebuggerThreadControl_ThreadIsBlockingForDebugger_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCHostControl_RequestVirtualMemLimit_Proxy(IGCHostControl *This, SIZE_T sztMaxVirtualMemMB, SIZE_T *psztNewMaxVirtualMemMB);
void __stdcall IGCHostControl_RequestVirtualMemLimit_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCHost_Collect_Proxy(IGCHost *This, DWORD Generation);
void __stdcall IGCHost_Collect_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCHost_GetStats_Proxy(IGCHost *This, COR_GC_STATS *pStats);
void __stdcall IGCHost_GetStats_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCHost_GetThreadStats_Proxy(IGCHost *This, DWORD *pFiberCookie, COR_GC_THREAD_STATS *pStats);
void __stdcall IGCHost_GetThreadStats_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCHost_SetGCStartupLimits_Proxy(IGCHost *This, DWORD SegmentSize, DWORD MaxGen0Size);
void __stdcall IGCHost_SetGCStartupLimits_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCHost_SetVirtualMemLimit_Proxy(IGCHost *This, SIZE_T sztMaxVirtualMemMB);
void __stdcall IGCHost_SetVirtualMemLimit_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCThreadControl_SuspensionEnding_Proxy(IGCThreadControl *This, DWORD Generation);
void __stdcall IGCThreadControl_SuspensionEnding_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCThreadControl_SuspensionStarting_Proxy(IGCThreadControl *This);
void __stdcall IGCThreadControl_SuspensionStarting_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IGCThreadControl_ThreadIsBlockingForSuspension_Proxy(IGCThreadControl *This);
void __stdcall IGCThreadControl_ThreadIsBlockingForSuspension_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ILoader_LoadModule_Proxy(ILoader *This, LPWSTR fileName, byte *pe, unsigned int *pulSize);
void __stdcall ILoader_LoadModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ILoader_UnloadModule_Proxy(ILoader *This, LPWSTR fileName, byte *pe);
void __stdcall ILoader_UnloadModule_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
CorArgType IMAGE_CEE_CS_BYVALUE;
CorUnmanagedCallingConvention IMAGE_CEE_CS_CALLCONV_C;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_DEFAULT;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_EXPLICITTHIS;
CorUnmanagedCallingConvention IMAGE_CEE_CS_CALLCONV_FASTCALL;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_FIELD;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_HASTHIS;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_LOCAL_SIG;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_MASK;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_MAX;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_PROPERTY;
CorUnmanagedCallingConvention IMAGE_CEE_CS_CALLCONV_STDCALL;
CorUnmanagedCallingConvention IMAGE_CEE_CS_CALLCONV_THISCALL;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_UNMGD;
CorCallingConvention IMAGE_CEE_CS_CALLCONV_VARARG;
CorArgType IMAGE_CEE_CS_END;
CorArgType IMAGE_CEE_CS_I4;
CorArgType IMAGE_CEE_CS_I8;
CorArgType IMAGE_CEE_CS_OBJECT;
CorArgType IMAGE_CEE_CS_PTR;
CorArgType IMAGE_CEE_CS_R4;
CorArgType IMAGE_CEE_CS_R8;
CorArgType IMAGE_CEE_CS_STRUCT32;
CorArgType IMAGE_CEE_CS_STRUCT4;
CorArgType IMAGE_CEE_CS_VOID;
CorUnmanagedCallingConvention IMAGE_CEE_UNMANAGED_CALLCONV_C;
CorUnmanagedCallingConvention IMAGE_CEE_UNMANAGED_CALLCONV_FASTCALL;
CorUnmanagedCallingConvention IMAGE_CEE_UNMANAGED_CALLCONV_STDCALL;
CorUnmanagedCallingConvention IMAGE_CEE_UNMANAGED_CALLCONV_THISCALL;
ReplacesCorHdrNumericDefines IMAGE_COR_EATJ_THUNK_SIZE;
ReplacesCorHdrNumericDefines IMAGE_COR_MIH_BASICBLOCK;
ReplacesCorHdrNumericDefines IMAGE_COR_MIH_EHRVA;
ReplacesCorHdrNumericDefines IMAGE_COR_MIH_METHODRVA;
ReplacesGeneralNumericDefines IMAGE_DIRECTORY_ENTRY_COMHEADER;
HRESULT __stdcall IManagedObject_GetInProcCCW_Proxy(IManagedObject *This, unsigned int *pCCW);
void __stdcall IManagedObject_GetInProcCCW_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IManagedObject_GetProcessID_Proxy(IManagedObject *This, BSTR *pBSTRGUID, BOOL *fIsConfigurable);
void __stdcall IManagedObject_GetProcessID_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IManagedObject_GetSerializedBuffer_Proxy(IManagedObject *This, BSTR *pBSTR);
void __stdcall IManagedObject_GetSerializedBuffer_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IManagedObject_RemoteDispatch_Proxy(IManagedObject *This, BSTR *pBSTR);
void __stdcall IManagedObject_RemoteDispatch_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
void *__stdcall IMethodMalloc_Alloc_Proxy(IMethodMalloc *This, ULONG cb);
void __stdcall IMethodMalloc_Alloc_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
MACRO_MSCOR_INF INF;
CorDebugIntercept INTERCEPT_ALL;
CorDebugIntercept INTERCEPT_CLASS_INIT;
CorDebugIntercept INTERCEPT_CONTEXT_POLICY;
CorDebugIntercept INTERCEPT_EXCEPTION_FILTER;
CorDebugIntercept INTERCEPT_INTERCEPTION;
CorDebugIntercept INTERCEPT_NONE;
CorDebugIntercept INTERCEPT_SECURITY;
HRESULT __stdcall IObjectHandle_Unwrap_Proxy(IObjectHandle *This, VARIANT *ppv);
void __stdcall IObjectHandle_Unwrap_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
MACRO_ISS ISS_E_ALLOC_TOO_LARGE;
MACRO_ISS ISS_E_BLOCK_SIZE_TOO_SMALL;
MACRO_ISS ISS_E_CALLER;
MACRO_ISS ISS_E_CORRUPTED_STORE_FILE;
MACRO_ISS ISS_E_CREATE_DIR;
MACRO_ISS ISS_E_CREATE_MUTEX;
MACRO_ISS ISS_E_DEPRECATE;
MACRO_ISS ISS_E_FILE_NOT_MAPPED;
MACRO_ISS ISS_E_FILE_WRITE;
MACRO_ISS ISS_E_GET_FILE_SIZE;
MACRO_ISS ISS_E_ISOSTORE;
MACRO_ISS ISS_E_ISOSTORE_END;
MACRO_ISS ISS_E_ISOSTORE_START;
MACRO_ISS ISS_E_LOCK_FAILED;
MACRO_ISS ISS_E_MACHINE;
MACRO_ISS ISS_E_MAP_VIEW_OF_FILE;
MACRO_ISS ISS_E_OPEN_FILE_MAPPING;
MACRO_ISS ISS_E_OPEN_STORE_FILE;
MACRO_ISS ISS_E_PATH_LENGTH;
MACRO_ISS ISS_E_SET_FILE_POINTER;
MACRO_ISS ISS_E_STORE_VERSION;
MACRO_ISS ISS_E_TABLE_ROW_NOT_FOUND;
MACRO_ISS ISS_E_USAGE_WILL_EXCEED_QUOTA;
HRESULT __stdcall ISymUnmanagedBinder_GetReaderForFile_Proxy(ISymUnmanagedBinder *This, IUnknown *importer, const WCHAR *fileName, const WCHAR *searchPath, ISymUnmanagedReader **pRetVal);
void __stdcall ISymUnmanagedBinder_GetReaderForFile_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedBinder_GetReaderFromStream_Proxy(ISymUnmanagedBinder *This, IUnknown *importer, IStream *pstream, ISymUnmanagedReader **pRetVal);
void __stdcall ISymUnmanagedBinder_GetReaderFromStream_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocumentWriter_SetCheckSum_Proxy(ISymUnmanagedDocumentWriter *This, GUID algorithmId, ULONG32 checkSumSize, BYTE checkSum[]);
void __stdcall ISymUnmanagedDocumentWriter_SetCheckSum_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocumentWriter_SetSource_Proxy(ISymUnmanagedDocumentWriter *This, ULONG32 sourceSize, BYTE source[]);
void __stdcall ISymUnmanagedDocumentWriter_SetSource_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_FindClosestLine_Proxy(ISymUnmanagedDocument *This, ULONG32 line, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedDocument_FindClosestLine_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetCheckSumAlgorithmId_Proxy(ISymUnmanagedDocument *This, GUID *pRetVal);
void __stdcall ISymUnmanagedDocument_GetCheckSumAlgorithmId_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetCheckSum_Proxy(ISymUnmanagedDocument *This, ULONG32 cData, ULONG32 *pcData, BYTE data[]);
void __stdcall ISymUnmanagedDocument_GetCheckSum_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetDocumentType_Proxy(ISymUnmanagedDocument *This, GUID *pRetVal);
void __stdcall ISymUnmanagedDocument_GetDocumentType_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetLanguageVendor_Proxy(ISymUnmanagedDocument *This, GUID *pRetVal);
void __stdcall ISymUnmanagedDocument_GetLanguageVendor_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetLanguage_Proxy(ISymUnmanagedDocument *This, GUID *pRetVal);
void __stdcall ISymUnmanagedDocument_GetLanguage_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetSourceLength_Proxy(ISymUnmanagedDocument *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedDocument_GetSourceLength_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetSourceRange_Proxy(ISymUnmanagedDocument *This, ULONG32 startLine, ULONG32 startColumn, ULONG32 endLine, ULONG32 endColumn, ULONG32 cSourceBytes, ULONG32 *pcSourceBytes, BYTE source[]);
void __stdcall ISymUnmanagedDocument_GetSourceRange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_GetURL_Proxy(ISymUnmanagedDocument *This, ULONG32 cchUrl, ULONG32 *pcchUrl, WCHAR szUrl[]);
void __stdcall ISymUnmanagedDocument_GetURL_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedDocument_HasEmbeddedSource_Proxy(ISymUnmanagedDocument *This, BOOL *pRetVal);
void __stdcall ISymUnmanagedDocument_HasEmbeddedSource_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetNamespace_Proxy(ISymUnmanagedMethod *This, ISymUnmanagedNamespace **pRetVal);
void __stdcall ISymUnmanagedMethod_GetNamespace_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetOffset_Proxy(ISymUnmanagedMethod *This, ISymUnmanagedDocument *document, ULONG32 line, ULONG32 column, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedMethod_GetOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetParameters_Proxy(ISymUnmanagedMethod *This, ULONG32 cParams, ULONG32 *pcParams, ISymUnmanagedVariable *params[]);
void __stdcall ISymUnmanagedMethod_GetParameters_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetRanges_Proxy(ISymUnmanagedMethod *This, ISymUnmanagedDocument *document, ULONG32 line, ULONG32 column, ULONG32 cRanges, ULONG32 *pcRanges, ULONG32 ranges[]);
void __stdcall ISymUnmanagedMethod_GetRanges_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetRootScope_Proxy(ISymUnmanagedMethod *This, ISymUnmanagedScope **pRetVal);
void __stdcall ISymUnmanagedMethod_GetRootScope_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetScopeFromOffset_Proxy(ISymUnmanagedMethod *This, ULONG32 offset, ISymUnmanagedScope **pRetVal);
void __stdcall ISymUnmanagedMethod_GetScopeFromOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetSequencePointCount_Proxy(ISymUnmanagedMethod *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedMethod_GetSequencePointCount_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetSequencePoints_Proxy(ISymUnmanagedMethod *This, ULONG32 cPoints, ULONG32 *pcPoints, ULONG32 offsets[], ISymUnmanagedDocument *documents[], ULONG32 lines[], ULONG32 columns[], ULONG32 endLines[], ULONG32 endColumns[]);
void __stdcall ISymUnmanagedMethod_GetSequencePoints_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetSourceStartEnd_Proxy(ISymUnmanagedMethod *This, ISymUnmanagedDocument *docs[2], ULONG32 lines[2], ULONG32 columns[2], BOOL *pRetVal);
void __stdcall ISymUnmanagedMethod_GetSourceStartEnd_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedMethod_GetToken_Proxy(ISymUnmanagedMethod *This, mdMethodDef *pToken);
void __stdcall ISymUnmanagedMethod_GetToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedNamespace_GetName_Proxy(ISymUnmanagedNamespace *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ISymUnmanagedNamespace_GetName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedNamespace_GetNamespaces_Proxy(ISymUnmanagedNamespace *This, ULONG32 cNameSpaces, ULONG32 *pcNameSpaces, ISymUnmanagedNamespace *namespaces[]);
void __stdcall ISymUnmanagedNamespace_GetNamespaces_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedNamespace_GetVariables_Proxy(ISymUnmanagedNamespace *This, ULONG32 cVars, ULONG32 *pcVars, ISymUnmanagedVariable *pVars[]);
void __stdcall ISymUnmanagedNamespace_GetVariables_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetDocument_Proxy(ISymUnmanagedReader *This, WCHAR *url, GUID language, GUID languageVendor, GUID documentType, ISymUnmanagedDocument **pRetVal);
void __stdcall ISymUnmanagedReader_GetDocument_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetDocuments_Proxy(ISymUnmanagedReader *This, ULONG32 cDocs, ULONG32 *pcDocs, ISymUnmanagedDocument *pDocs[]);
void __stdcall ISymUnmanagedReader_GetDocuments_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetGlobalVariables_Proxy(ISymUnmanagedReader *This, ULONG32 cVars, ULONG32 *pcVars, ISymUnmanagedVariable *pVars[]);
void __stdcall ISymUnmanagedReader_GetGlobalVariables_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetMethodByVersion_Proxy(ISymUnmanagedReader *This, mdMethodDef token, int version, ISymUnmanagedMethod **pRetVal);
void __stdcall ISymUnmanagedReader_GetMethodByVersion_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetMethodFromDocumentPosition_Proxy(ISymUnmanagedReader *This, ISymUnmanagedDocument *document, ULONG32 line, ULONG32 column, ISymUnmanagedMethod **pRetVal);
void __stdcall ISymUnmanagedReader_GetMethodFromDocumentPosition_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetMethod_Proxy(ISymUnmanagedReader *This, mdMethodDef token, ISymUnmanagedMethod **pRetVal);
void __stdcall ISymUnmanagedReader_GetMethod_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetNamespaces_Proxy(ISymUnmanagedReader *This, ULONG32 cNameSpaces, ULONG32 *pcNameSpaces, ISymUnmanagedNamespace *namespaces[]);
void __stdcall ISymUnmanagedReader_GetNamespaces_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetSymAttribute_Proxy(ISymUnmanagedReader *This, mdToken parent, WCHAR *name, ULONG32 cBuffer, ULONG32 *pcBuffer, BYTE buffer[]);
void __stdcall ISymUnmanagedReader_GetSymAttribute_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetSymbolStoreFileName_Proxy(ISymUnmanagedReader *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ISymUnmanagedReader_GetSymbolStoreFileName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetUserEntryPoint_Proxy(ISymUnmanagedReader *This, mdMethodDef *pToken);
void __stdcall ISymUnmanagedReader_GetUserEntryPoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_GetVariables_Proxy(ISymUnmanagedReader *This, mdToken parent, ULONG32 cVars, ULONG32 *pcVars, ISymUnmanagedVariable *pVars[]);
void __stdcall ISymUnmanagedReader_GetVariables_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_Initialize_Proxy(ISymUnmanagedReader *This, IUnknown *importer, const WCHAR *filename, const WCHAR *searchPath, IStream *pIStream);
void __stdcall ISymUnmanagedReader_Initialize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_ReplaceSymbolStore_Proxy(ISymUnmanagedReader *This, const WCHAR *filename, IStream *pIStream);
void __stdcall ISymUnmanagedReader_ReplaceSymbolStore_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedReader_UpdateSymbolStore_Proxy(ISymUnmanagedReader *This, const WCHAR *filename, IStream *pIStream);
void __stdcall ISymUnmanagedReader_UpdateSymbolStore_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetChildren_Proxy(ISymUnmanagedScope *This, ULONG32 cChildren, ULONG32 *pcChildren, ISymUnmanagedScope *children[]);
void __stdcall ISymUnmanagedScope_GetChildren_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetEndOffset_Proxy(ISymUnmanagedScope *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedScope_GetEndOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetLocalCount_Proxy(ISymUnmanagedScope *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedScope_GetLocalCount_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetLocals_Proxy(ISymUnmanagedScope *This, ULONG32 cLocals, ULONG32 *pcLocals, ISymUnmanagedVariable *locals[]);
void __stdcall ISymUnmanagedScope_GetLocals_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetMethod_Proxy(ISymUnmanagedScope *This, ISymUnmanagedMethod **pRetVal);
void __stdcall ISymUnmanagedScope_GetMethod_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetNamespaces_Proxy(ISymUnmanagedScope *This, ULONG32 cNameSpaces, ULONG32 *pcNameSpaces, ISymUnmanagedNamespace *namespaces[]);
void __stdcall ISymUnmanagedScope_GetNamespaces_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetParent_Proxy(ISymUnmanagedScope *This, ISymUnmanagedScope **pRetVal);
void __stdcall ISymUnmanagedScope_GetParent_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedScope_GetStartOffset_Proxy(ISymUnmanagedScope *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedScope_GetStartOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetAddressField1_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetAddressField1_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetAddressField2_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetAddressField2_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetAddressField3_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetAddressField3_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetAddressKind_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetAddressKind_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetAttributes_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetAttributes_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetEndOffset_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetEndOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetName_Proxy(ISymUnmanagedVariable *This, ULONG32 cchName, ULONG32 *pcchName, WCHAR szName[]);
void __stdcall ISymUnmanagedVariable_GetName_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetSignature_Proxy(ISymUnmanagedVariable *This, ULONG32 cSig, ULONG32 *pcSig, BYTE sig[]);
void __stdcall ISymUnmanagedVariable_GetSignature_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedVariable_GetStartOffset_Proxy(ISymUnmanagedVariable *This, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedVariable_GetStartOffset_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_CloseMethod_Proxy(ISymUnmanagedWriter *This);
void __stdcall ISymUnmanagedWriter_CloseMethod_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_CloseNamespace_Proxy(ISymUnmanagedWriter *This);
void __stdcall ISymUnmanagedWriter_CloseNamespace_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_CloseScope_Proxy(ISymUnmanagedWriter *This, ULONG32 endOffset);
void __stdcall ISymUnmanagedWriter_CloseScope_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_Close_Proxy(ISymUnmanagedWriter *This);
void __stdcall ISymUnmanagedWriter_Close_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_DefineDocument_Proxy(ISymUnmanagedWriter *This, const WCHAR *url, const GUID *language, const GUID *languageVendor, const GUID *documentType, ISymUnmanagedDocumentWriter **pRetVal);
void __stdcall ISymUnmanagedWriter_DefineDocument_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_DefineField_Proxy(ISymUnmanagedWriter *This, mdTypeDef parent, const WCHAR *name, ULONG32 attributes, ULONG32 cSig, unsigned __int8 signature[], ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3);
void __stdcall ISymUnmanagedWriter_DefineField_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_DefineGlobalVariable_Proxy(ISymUnmanagedWriter *This, const WCHAR *name, ULONG32 attributes, ULONG32 cSig, unsigned __int8 signature[], ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3);
void __stdcall ISymUnmanagedWriter_DefineGlobalVariable_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_DefineLocalVariable_Proxy(ISymUnmanagedWriter *This, const WCHAR *name, ULONG32 attributes, ULONG32 cSig, unsigned __int8 signature[], ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3, ULONG32 startOffset, ULONG32 endOffset);
void __stdcall ISymUnmanagedWriter_DefineLocalVariable_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_DefineParameter_Proxy(ISymUnmanagedWriter *This, const WCHAR *name, ULONG32 attributes, ULONG32 sequence, ULONG32 addrKind, ULONG32 addr1, ULONG32 addr2, ULONG32 addr3);
void __stdcall ISymUnmanagedWriter_DefineParameter_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_DefineSequencePoints_Proxy(ISymUnmanagedWriter *This, ISymUnmanagedDocumentWriter *document, ULONG32 spCount, ULONG32 offsets[], ULONG32 lines[], ULONG32 columns[], ULONG32 endLines[], ULONG32 endColumns[]);
void __stdcall ISymUnmanagedWriter_DefineSequencePoints_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_GetDebugInfo_Proxy(ISymUnmanagedWriter *This, IMAGE_DEBUG_DIRECTORY *pIDD, DWORD cData, DWORD *pcData, BYTE data[]);
void __stdcall ISymUnmanagedWriter_GetDebugInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_Initialize_Proxy(ISymUnmanagedWriter *This, IUnknown *emitter, const WCHAR *filename, IStream *pIStream, BOOL fFullBuild);
void __stdcall ISymUnmanagedWriter_Initialize_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_OpenMethod_Proxy(ISymUnmanagedWriter *This, mdMethodDef method);
void __stdcall ISymUnmanagedWriter_OpenMethod_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_OpenNamespace_Proxy(ISymUnmanagedWriter *This, const WCHAR *name);
void __stdcall ISymUnmanagedWriter_OpenNamespace_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_OpenScope_Proxy(ISymUnmanagedWriter *This, ULONG32 startOffset, ULONG32 *pRetVal);
void __stdcall ISymUnmanagedWriter_OpenScope_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_RemapToken_Proxy(ISymUnmanagedWriter *This, mdToken oldToken, mdToken newToken);
void __stdcall ISymUnmanagedWriter_RemapToken_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_SetMethodSourceRange_Proxy(ISymUnmanagedWriter *This, ISymUnmanagedDocumentWriter *startDoc, ULONG32 startLine, ULONG32 startColumn, ISymUnmanagedDocumentWriter *endDoc, ULONG32 endLine, ULONG32 endColumn);
void __stdcall ISymUnmanagedWriter_SetMethodSourceRange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_SetScopeRange_Proxy(ISymUnmanagedWriter *This, ULONG32 scopeID, ULONG32 startOffset, ULONG32 endOffset);
void __stdcall ISymUnmanagedWriter_SetScopeRange_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_SetSymAttribute_Proxy(ISymUnmanagedWriter *This, mdToken parent, const WCHAR *name, ULONG32 cData, unsigned __int8 data[]);
void __stdcall ISymUnmanagedWriter_SetSymAttribute_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_SetUserEntryPoint_Proxy(ISymUnmanagedWriter *This, mdMethodDef entryMethod);
void __stdcall ISymUnmanagedWriter_SetUserEntryPoint_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall ISymUnmanagedWriter_UsingNamespace_Proxy(ISymUnmanagedWriter *This, const WCHAR *fullName);
void __stdcall ISymUnmanagedWriter_UsingNamespace_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IVEHandler_SetReporterFtn_Proxy(IVEHandler *This, __int64 lFnPtr);
void __stdcall IVEHandler_SetReporterFtn_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IVEHandler_VEHandler_Proxy(IVEHandler *This, HRESULT VECode, VEContext Context, SAFEARRAY *psa);
void __stdcall IVEHandler_VEHandler_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IValidator_FormatEventInfo_Proxy(IValidator *This, HRESULT hVECode, VEContext Context, LPWSTR msg, unsigned int ulMaxLength, SAFEARRAY *psa);
void __stdcall IValidator_FormatEventInfo_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
HRESULT __stdcall IValidator_Validate_Proxy(IValidator *This, IVEHandler *veh, ILoader *loader, unsigned int ulFlags, unsigned int ulMaxError, unsigned int token, LPWSTR fileName, byte *pe, unsigned int ulSize);
void __stdcall IValidator_Validate_Stub(IRpcStubBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer, PRPC_MESSAGE pRpcMessage, DWORD *pdwStubPhase);
LoggingLevelEnum LErrorLevel;
MACRO_LHUGE LHUGE_EXP;
LoggingLevelEnum LPanicLevel;
MACRO_LHUGE LSAFE_EXP;
LoggingLevelEnum LStatusLevel0;
LoggingLevelEnum LStatusLevel1;
LoggingLevelEnum LStatusLevel2;
LoggingLevelEnum LStatusLevel3;
LoggingLevelEnum LStatusLevel4;
LoggingLevelEnum LTraceLevel0;
LoggingLevelEnum LTraceLevel1;
LoggingLevelEnum LTraceLevel2;
LoggingLevelEnum LTraceLevel3;
LoggingLevelEnum LTraceLevel4;
LoggingLevelEnum LWarningLevel;
HRESULT __stdcall LoadLibraryShim(LPCWSTR szDllName, LPCWSTR szVersion, LPVOID pvReserved, HMODULE *phModDll);
CorDebugMappingResult MAPPING_APPROXIMATE;
CorDebugMappingResult MAPPING_EPILOG;
CorDebugMappingResult MAPPING_EXACT;
CorDebugMappingResult MAPPING_NO_INFO;
CorDebugMappingResult MAPPING_PROLOG;
CorDebugMappingResult MAPPING_UNMAPPED_ADDRESS;
ReplacesCorHdrNumericDefines MAX_CLASS_NAME;
ReplacesCorHdrNumericDefines MAX_PACKAGE_NAME;
CorCheckDuplicatesFor MDDupAll;
CorCheckDuplicatesFor MDDupAssembly;
CorCheckDuplicatesFor MDDupAssemblyRef;
CorCheckDuplicatesFor MDDupBlock;
CorCheckDuplicatesFor MDDupComType;
CorCheckDuplicatesFor MDDupCustomAttribute;
CorCheckDuplicatesFor MDDupCustomValue;
CorCheckDuplicatesFor MDDupDefault;
CorCheckDuplicatesFor MDDupENC;
CorCheckDuplicatesFor MDDupEvent;
CorCheckDuplicatesFor MDDupExecutionLocation;
CorCheckDuplicatesFor MDDupFieldDef;
CorCheckDuplicatesFor MDDupFile;
CorCheckDuplicatesFor MDDupImplMap;
CorCheckDuplicatesFor MDDupInterfaceImpl;
CorCheckDuplicatesFor MDDupLocalVar;
CorCheckDuplicatesFor MDDupLocalVarScope;
CorCheckDuplicatesFor MDDupManifestResource;
CorCheckDuplicatesFor MDDupMemberRef;
CorCheckDuplicatesFor MDDupMethodDef;
CorCheckDuplicatesFor MDDupModuleRef;
CorCheckDuplicatesFor MDDupParamDef;
CorCheckDuplicatesFor MDDupPermission;
CorCheckDuplicatesFor MDDupProperty;
CorCheckDuplicatesFor MDDupSignature;
CorCheckDuplicatesFor MDDupSourceFile;
CorCheckDuplicatesFor MDDupTypeDef;
CorCheckDuplicatesFor MDDupTypeRef;
CorCheckDuplicatesFor MDDupTypeSpec;
CorErrorIfEmitOutOfOrder MDErrorOutOfOrderAll;
CorErrorIfEmitOutOfOrder MDErrorOutOfOrderDefault;
CorErrorIfEmitOutOfOrder MDErrorOutOfOrderNone;
CorErrorIfEmitOutOfOrder MDEventOutOfOrder;
CorErrorIfEmitOutOfOrder MDFieldOutOfOrder;
CorImportOptions MDImportOptionAll;
CorImportOptions MDImportOptionAllComTypes;
CorImportOptions MDImportOptionAllCustomAttributes;
CorImportOptions MDImportOptionAllCustomValues;
CorImportOptions MDImportOptionAllEvents;
CorImportOptions MDImportOptionAllFieldDefs;
CorImportOptions MDImportOptionAllMethodDefs;
CorImportOptions MDImportOptionAllProperties;
CorImportOptions MDImportOptionAllTypeDefs;
CorImportOptions MDImportOptionDefault;
CorRefToDefCheck MDMemberRefToDef;
CorErrorIfEmitOutOfOrder MDMethodOutOfOrder;
CorCheckDuplicatesFor MDNoDupChecks;
CorNotificationForTokenMovement MDNotifyAll;
CorNotificationForTokenMovement MDNotifyAssemblyRef;
CorNotificationForTokenMovement MDNotifyComType;
CorNotificationForTokenMovement MDNotifyCustomAttribute;
CorNotificationForTokenMovement MDNotifyCustomValue;
CorNotificationForTokenMovement MDNotifyDebugTokens;
CorNotificationForTokenMovement MDNotifyDefault;
CorNotificationForTokenMovement MDNotifyEvent;
CorNotificationForTokenMovement MDNotifyExecutionLocation;
CorNotificationForTokenMovement MDNotifyFieldDef;
CorNotificationForTokenMovement MDNotifyFile;
CorNotificationForTokenMovement MDNotifyInterfaceImpl;
CorNotificationForTokenMovement MDNotifyMemberRef;
CorNotificationForTokenMovement MDNotifyMethodDef;
CorNotificationForTokenMovement MDNotifyModuleRef;
CorNotificationForTokenMovement MDNotifyNameSpace;
CorNotificationForTokenMovement MDNotifyNone;
CorNotificationForTokenMovement MDNotifyParamDef;
CorNotificationForTokenMovement MDNotifyPermission;
CorNotificationForTokenMovement MDNotifyProperty;
CorNotificationForTokenMovement MDNotifyResource;
CorNotificationForTokenMovement MDNotifySecurityValue;
CorNotificationForTokenMovement MDNotifySignature;
CorNotificationForTokenMovement MDNotifyTypeDef;
CorNotificationForTokenMovement MDNotifyTypeRef;
CorNotificationForTokenMovement MDNotifyTypeSpec;
CorErrorIfEmitOutOfOrder MDParamOutOfOrder;
CorErrorIfEmitOutOfOrder MDPropertyOutOfOrder;
CorRefToDefCheck MDRefToDefAll;
CorRefToDefCheck MDRefToDefDefault;
CorRefToDefCheck MDRefToDefNone;
CorSetENC MDSetENCOff;
CorSetENC MDSetENCOn;
CorThreadSafetyOptions MDThreadSafetyDefault;
CorThreadSafetyOptions MDThreadSafetyOff;
CorThreadSafetyOptions MDThreadSafetyOn;
CorRefToDefCheck MDTypeRefToDef;
CorSetENC MDUpdateDelta;
CorSetENC MDUpdateENC;
CorSetENC MDUpdateExtension;
CorSetENC MDUpdateFull;
CorSetENC MDUpdateIncremental;
CorSetENC MDUpdateMask;
MACRO_MSCOR_META META_E_BADMETADATA;
MACRO_MSCOR_META META_E_BAD_INPUT_PARAMETER;
MACRO_MSCOR_META META_E_BAD_SIGNATURE;
MACRO_MSCOR_META META_E_CANNOTRESOLVETYPEREF;
MACRO_MSCOR_META META_E_CA_ARRAY_NYI;
MACRO_MSCOR_META META_E_CA_CUSTMARSH_TYPE_REQUIRED;
MACRO_MSCOR_META META_E_CA_FIXEDSTR_SIZE_REQUIRED;
MACRO_MSCOR_META META_E_CA_INVALID_ARGTYPE;
MACRO_MSCOR_META META_E_CA_INVALID_ARG_FOR_TYPE;
MACRO_MSCOR_META META_E_CA_INVALID_BLOB;
MACRO_MSCOR_META META_E_CA_INVALID_MARSHALAS_FIELDS;
MACRO_MSCOR_META META_E_CA_INVALID_TARGET;
MACRO_MSCOR_META META_E_CA_INVALID_UUID;
MACRO_MSCOR_META META_E_CA_INVALID_VALUE;
MACRO_MSCOR_META META_E_CA_NEGATIVE_CONSTSIZE;
MACRO_MSCOR_META META_E_CA_NEGATIVE_MULTIPLIER;
MACRO_MSCOR_META META_E_CA_NEGATIVE_PARAMINDEX;
MACRO_MSCOR_META META_E_CA_NT_FIELDONLY;
MACRO_MSCOR_META META_E_CA_REPEATED_ARG;
MACRO_MSCOR_META META_E_CA_UNEXPECTED_TYPE;
MACRO_MSCOR_META META_E_CA_UNKNOWN_ARGUMENT;
MACRO_MSCOR_META META_E_CA_VARIANT_NYI;
MACRO_MSCOR_META META_E_CLASS_LAYOUT_INCONSISTENT;
MACRO_MSCOR_META META_E_DUPLICATE;
MACRO_MSCOR_META META_E_EVENT_NOT_FOUND;
MACRO_MSCOR_META META_E_FIELD_MARSHAL_NOT_FOUND;
MACRO_MSCOR_META META_E_FIELD_NOT_FOUND;
MACRO_MSCOR_META META_E_GUID_REQUIRED;
MACRO_MSCOR_META META_E_HAS_UNMARKALL;
MACRO_MSCOR_META META_E_INTFCEIMPL_NOT_FOUND;
MACRO_MSCOR_META META_E_MD_INCONSISTENCY;
MACRO_MSCOR_META META_E_MERGE_COLLISION;
MACRO_MSCOR_META META_E_METHDIMPL_INCONSISTENT;
MACRO_MSCOR_META META_E_METHD_NOT_FOUND;
MACRO_MSCOR_META META_E_METHODSEM_NOT_FOUND;
MACRO_MSCOR_META META_E_MUST_CALL_UNMARKALL;
MACRO_MSCOR_META META_E_PARAM_MISMATCH;
MACRO_MSCOR_META META_E_PROP_NOT_FOUND;
MACRO_MSCOR_META META_E_STRINGSPACE_FULL;
MACRO_MSCOR_META META_E_TYPEDEF_MISMATCH;
MACRO_MSCOR_META META_E_UNEXPECTED_REMAP;
MACRO_MSCOR_META META_S_DUPLICATE;
MACRO_MSCOR_META META_S_PARAM_MISMATCH;
MACRO_MSEE MSEE_E_APPDOMAINUNLOADED;
MACRO_MSEE MSEE_E_ASSEMBLYLOADINPROGRESS;
MACRO_MSEE MSEE_E_CANNOTUNLOADAPPDOMAIN;
MACRO_MSEE MSEE_E_CLASSUNLOADED;
MACRO_MSEE MSEE_E_GETPROCFAILED;
MACRO_MSEE MSEE_E_LOADLIBFAILED;
MACRO_MSEE MSEE_E_MULTCOPIESLOADED;
MACRO_NAN NAN;
CorNativeType NATIVE_TYPE_ANSIBSTR;
CorNativeType NATIVE_TYPE_ARRAY;
CorNativeType NATIVE_TYPE_ASANY;
CorNativeType NATIVE_TYPE_BOOLEAN;
CorNativeType NATIVE_TYPE_BSTR;
CorNativeType NATIVE_TYPE_BYVALSTR;
CorNativeType NATIVE_TYPE_CURRENCY;
CorNativeType NATIVE_TYPE_CUSTOMMARSHALER;
CorNativeType NATIVE_TYPE_DATE;
CorNativeType NATIVE_TYPE_DECIMAL;
CorNativeType NATIVE_TYPE_END;
CorNativeType NATIVE_TYPE_ERROR;
CorNativeType NATIVE_TYPE_FIXEDARRAY;
CorNativeType NATIVE_TYPE_FIXEDSYSSTRING;
CorNativeType NATIVE_TYPE_FUNC;
CorNativeType NATIVE_TYPE_I1;
CorNativeType NATIVE_TYPE_I2;
CorNativeType NATIVE_TYPE_I4;
CorNativeType NATIVE_TYPE_I8;
CorNativeType NATIVE_TYPE_IDISPATCH;
CorNativeType NATIVE_TYPE_INT;
CorNativeType NATIVE_TYPE_INTF;
CorNativeType NATIVE_TYPE_IUNKNOWN;
CorNativeType NATIVE_TYPE_LPSTR;
CorNativeType NATIVE_TYPE_LPSTRUCT;
CorNativeType NATIVE_TYPE_LPTSTR;
CorNativeType NATIVE_TYPE_LPVOID;
CorNativeType NATIVE_TYPE_LPWSTR;
CorNativeType NATIVE_TYPE_MAX;
ReplacesCorHdrNumericDefines NATIVE_TYPE_MAX_CB;
CorNativeType NATIVE_TYPE_NESTEDSTRUCT;
CorNativeType NATIVE_TYPE_OBJECTREF;
CorNativeType NATIVE_TYPE_PTR;
CorNativeType NATIVE_TYPE_R;
CorNativeType NATIVE_TYPE_R4;
CorNativeType NATIVE_TYPE_R8;
CorNativeType NATIVE_TYPE_SAFEARRAY;
CorNativeType NATIVE_TYPE_STRUCT;
CorNativeType NATIVE_TYPE_SYSCHAR;
CorNativeType NATIVE_TYPE_TBSTR;
CorNativeType NATIVE_TYPE_U1;
CorNativeType NATIVE_TYPE_U2;
CorNativeType NATIVE_TYPE_U4;
CorNativeType NATIVE_TYPE_U8;
CorNativeType NATIVE_TYPE_UINT;
CorNativeType NATIVE_TYPE_VARIANT;
CorNativeType NATIVE_TYPE_VARIANTBOOL;
CorNativeType NATIVE_TYPE_VOID;
CorDebugIlToNativeMappingTypes NO_MAPPING;
__MIDL___MIDL_itf_corprof_0000_0002 PROFILER_GLOBAL_CLASS;
__MIDL___MIDL_itf_corprof_0000_0002 PROFILER_GLOBAL_MODULE;
__MIDL___MIDL_itf_corprof_0000_0002 PROFILER_PARENT_UNKNOWN;
CorDebugIlToNativeMappingTypes PROLOG;
CorDebugRegister REGISTER_FRAME_POINTER;
CorDebugRegister REGISTER_INSTRUCTION_POINTER;
CorDebugRegister REGISTER_STACK_POINTER;
CorDebugRegister REGISTER_X86_EAX;
CorDebugRegister REGISTER_X86_EBP;
CorDebugRegister REGISTER_X86_EBX;
CorDebugRegister REGISTER_X86_ECX;
CorDebugRegister REGISTER_X86_EDI;
CorDebugRegister REGISTER_X86_EDX;
CorDebugRegister REGISTER_X86_EIP;
CorDebugRegister REGISTER_X86_ESI;
CorDebugRegister REGISTER_X86_ESP;
CorDebugRegister REGISTER_X86_FPSTACK_0;
CorDebugRegister REGISTER_X86_FPSTACK_1;
CorDebugRegister REGISTER_X86_FPSTACK_2;
CorDebugRegister REGISTER_X86_FPSTACK_3;
CorDebugRegister REGISTER_X86_FPSTACK_4;
CorDebugRegister REGISTER_X86_FPSTACK_5;
CorDebugRegister REGISTER_X86_FPSTACK_6;
CorDebugRegister REGISTER_X86_FPSTACK_7;
HRESULT __stdcall RunDll32ShimW(HWND hwnd, HINSTANCE hinst, LPWSTR lpszCmdLine, int nCmdShow);
MACRO_EXP SAFE_EXP;
MACRO_MSCOR_SECURITY SECURITY_E_INCOMPATIBLE_SHARE;
MACRO_MSCOR_SECURITY SECURITY_E_XML_TO_ASN_ENCODING;
CorSerializationType SERIALIZATION_TYPE_BOOLEAN;
CorSerializationType SERIALIZATION_TYPE_CHAR;
CorSerializationType SERIALIZATION_TYPE_ENUM;
CorSerializationType SERIALIZATION_TYPE_FIELD;
CorSerializationType SERIALIZATION_TYPE_I1;
CorSerializationType SERIALIZATION_TYPE_I2;
CorSerializationType SERIALIZATION_TYPE_I4;
CorSerializationType SERIALIZATION_TYPE_I8;
CorSerializationType SERIALIZATION_TYPE_PROPERTY;
CorSerializationType SERIALIZATION_TYPE_R4;
CorSerializationType SERIALIZATION_TYPE_R8;
CorSerializationType SERIALIZATION_TYPE_STRING;
CorSerializationType SERIALIZATION_TYPE_SZARRAY;
CorSerializationType SERIALIZATION_TYPE_TYPE;
CorSerializationType SERIALIZATION_TYPE_U1;
CorSerializationType SERIALIZATION_TYPE_U2;
CorSerializationType SERIALIZATION_TYPE_U4;
CorSerializationType SERIALIZATION_TYPE_U8;
CorSerializationType SERIALIZATION_TYPE_VARIANT;
MACRO_MSCOR_SN SN_CMP_DIFFERENT;
MACRO_MSCOR_SN SN_CMP_IDENTICAL;
MACRO_MSCOR_SN SN_CMP_SIGONLY;
MACRO_MSCOR_SN SN_CRYPTOAPI_CALL_FAILED;
MACRO_MSCOR_SN SN_LEAVE_KEY;
MACRO_MSCOR_SN SN_NO_SUITABLE_CSP;
__MIDL___MIDL_itf_mscoree_0000_0001 STARTUP_CONCURRENT_GC;
__MIDL___MIDL_itf_mscoree_0000_0001 STARTUP_LOADER_OPTIMIZATION_MASK;
__MIDL___MIDL_itf_mscoree_0000_0001 STARTUP_LOADER_OPTIMIZATION_MULTI_DOMAIN;
__MIDL___MIDL_itf_mscoree_0000_0001 STARTUP_LOADER_OPTIMIZATION_MULTI_DOMAIN_HOST;
__MIDL___MIDL_itf_mscoree_0000_0001 STARTUP_LOADER_OPTIMIZATION_SINGLE_DOMAIN;
CorDebugStepReason STEP_CALL;
CorDebugStepReason STEP_EXCEPTION_FILTER;
CorDebugStepReason STEP_EXCEPTION_HANDLE;
CorDebugStepReason STEP_EXIT;
CorDebugStepReason STEP_INTERCEPT;
CorDebugStepReason STEP_NORMAL;
CorDebugStepReason STEP_RETURN;
CorDebugUnmappedStop STOP_ALL;
CorDebugUnmappedStop STOP_EPILOG;
CorDebugUnmappedStop STOP_NONE;
CorDebugUnmappedStop STOP_NO_MAPPING_INFO;
CorDebugUnmappedStop STOP_OTHER_UNMAPPED;
CorDebugUnmappedStop STOP_PROLOG;
CorDebugUnmappedStop STOP_UNMANAGED;
LogSwitchCallReason SWITCH_CREATE;
LogSwitchCallReason SWITCH_DELETE;
LogSwitchCallReason SWITCH_MODIFY;
BOOLEAN __stdcall StrongNameCompareAssemblies(LPCWSTR wszAssembly1, LPCWSTR wszAssembly2, DWORD *pdwResult);
DWORD __stdcall StrongNameErrorInfo();
void __stdcall StrongNameFreeBuffer(BYTE *pbMemory);
BOOLEAN __stdcall StrongNameGetPublicKey(LPCWSTR wszKeyContainer, BYTE *pbKeyBlob, ULONG cbKeyBlob, BYTE **ppbPublicKeyBlob, ULONG *pcbPublicKeyBlob);
BOOLEAN __stdcall StrongNameHashSize(ULONG ulHashAlg, DWORD *pcbSize);
BOOLEAN __stdcall StrongNameKeyDelete(LPCWSTR wszKeyContainer);
BOOLEAN __stdcall StrongNameKeyGen(LPCWSTR wszKeyContainer, DWORD dwFlags, BYTE **ppbKeyBlob, ULONG *pcbKeyBlob);
BOOLEAN __stdcall StrongNameKeyInstall(LPCWSTR wszKeyContainer, BYTE *pbKeyBlob, ULONG cbKeyBlob);
BOOLEAN __stdcall StrongNameSignatureGeneration(LPCWSTR wszFilePath, LPCWSTR wszKeyContainer, BYTE *pbKeyBlob, ULONG cbKeyBlob, BYTE **ppbSignatureBlob, ULONG *pcbSignatureBlob);
BOOLEAN __stdcall StrongNameSignatureSize(BYTE *pbPublicKeyBlob, ULONG cbPublicKeyBlob, DWORD *pcbSize);
BOOLEAN __stdcall StrongNameSignatureVerification(LPCWSTR wszFilePath);
BOOLEAN __stdcall StrongNameSignatureVerificationEx(LPCWSTR wszFilePath, BOOLEAN fForceVerification, BOOLEAN *pfWasVerified);
BOOLEAN __stdcall StrongNameTokenFromAssembly(LPCWSTR wszFilePath, BYTE **ppbStrongNameToken, ULONG *pcbStrongNameToken);
BOOLEAN __stdcall StrongNameTokenFromAssemblyEx(LPCWSTR wszFilePath, BYTE **ppbStrongNameToken, ULONG *pcbStrongNameToken, BYTE **ppbPublicKeyBlob, ULONG *pcbPublicKeyBlob);
BOOLEAN __stdcall StrongNameTokenFromPublicKey(BYTE *pbPublicKeyBlob, ULONG cbPublicKeyBlob, BYTE **ppbStrongNameToken, ULONG *pcbStrongNameToken);
CorDebugThreadState THREAD_RUN;
CorDebugThreadState THREAD_SUSPEND;
MACRO_TLBX TLBX_E_AGNOST_SIGNATURE;
MACRO_TLBX TLBX_E_AUTO_CS_NOT_ALLOWED;
MACRO_TLBX TLBX_E_BAD_MSCOREE_TLB;
MACRO_TLBX TLBX_E_BAD_NATIVETYPE;
MACRO_TLBX TLBX_E_BAD_VTABLE;
MACRO_TLBX TLBX_E_BAD_VT_TYPE;
MACRO_TLBX TLBX_E_CANTLOADLIBRARY;
MACRO_TLBX TLBX_E_CANT_LOAD_CLASS;
MACRO_TLBX TLBX_E_CANT_LOAD_MODULE;
MACRO_TLBX TLBX_E_CANT_SAVE;
MACRO_TLBX TLBX_E_CIRCULAR_EXPORT;
MACRO_TLBX TLBX_E_CIRCULAR_IMPORT;
MACRO_TLBX TLBX_E_CLASS_LOAD_EXCEPTION;
MACRO_TLBX TLBX_E_CONVERT_FAIL;
MACRO_TLBX TLBX_E_CRM_INVALID_SIG;
MACRO_TLBX TLBX_E_CRM_NON_STATIC;
MACRO_TLBX TLBX_E_CTX_NESTED;
MACRO_TLBX TLBX_E_DUPLICATE_IID;
MACRO_TLBX TLBX_E_ENUM_VALUE_INVALID;
MACRO_TLBX TLBX_E_ERROR_MESSAGE;
MACRO_TLBX TLBX_E_INVALID_NAMESPACE;
MACRO_TLBX TLBX_E_INVALID_TYPEINFO;
MACRO_TLBX TLBX_E_INVALID_TYPEINFO_UNNAMED;
MACRO_TLBX TLBX_E_LAYOUT_ERROR;
MACRO_TLBX TLBX_E_LPTSTR_NOT_ALLOWED;
MACRO_TLBX TLBX_E_NONVISIBLEVALUECLASS;
MACRO_TLBX TLBX_E_NOTIUNKNOWN;
MACRO_TLBX TLBX_E_NO_CLSID_KEY;
MACRO_TLBX TLBX_E_NO_MSCOREE_TLB;
MACRO_TLBX TLBX_E_NO_NESTED_ARRAYS;
MACRO_TLBX TLBX_E_NULL_MODULE;
MACRO_TLBX TLBX_E_PARAM_ERROR_NAMED;
MACRO_TLBX TLBX_E_PARAM_ERROR_UNNAMED;
MACRO_TLBX TLBX_E_REFERENCED_TYPELIB;
MACRO_TLBX TLBX_E_TLB_EXCEPTION;
MACRO_TLBX TLBX_E_UNKNOWN_SIGNATURE;
MACRO_TLBX TLBX_S_DUPLICATE_DISPID;
MACRO_TLBX TLBX_S_NOSTDINTERFACE;
MACRO_TLBX TLBX_S_REFERENCED_TYPELIB;
MACRO_TLBX TLBX_W_DUAL_NOT_DISPATCH;
MACRO_TLBX TLBX_W_LIBNOTREGISTERED;
CorDebugUserState USER_BACKGROUND;
CorDebugUserState USER_STOPPED;
CorDebugUserState USER_STOP_REQUESTED;
CorDebugUserState USER_SUSPENDED;
CorDebugUserState USER_SUSPEND_REQUESTED;
CorDebugUserState USER_UNSTARTED;
CorDebugUserState USER_WAIT_SLEEP_JOIN;
MACRO_MSCOR_VER VER_E_ADDR;
MACRO_MSCOR_VER VER_E_ADDR_BYREF;
MACRO_MSCOR_VER VER_E_ADDR_LITERAL;
MACRO_MSCOR_VER VER_E_ARG;
MACRO_MSCOR_VER VER_E_ARGLIST;
MACRO_MSCOR_VER VER_E_ARG_NUM;
MACRO_MSCOR_VER VER_E_ARRAY_ACCESS;
MACRO_MSCOR_VER VER_E_ARRAY_FIELD;
MACRO_MSCOR_VER VER_E_ARRAY_NAME_LONG;
MACRO_MSCOR_VER VER_E_ARRAY_SD;
MACRO_MSCOR_VER VER_E_ARRAY_SD_PTR;
MACRO_MSCOR_VER VER_E_ARRAY_V_STORE;
MACRO_MSCOR_VER VER_E_BAD_BRANCH;
MACRO_MSCOR_VER VER_E_BAD_JMP_TARGET;
MACRO_MSCOR_VER VER_E_BAD_PE;
MACRO_MSCOR_VER VER_E_BAD_VARARG;
MACRO_MSCOR_VER VER_E_BR_INTO_FIL;
MACRO_MSCOR_VER VER_E_BR_INTO_HND;
MACRO_MSCOR_VER VER_E_BR_INTO_TRY;
MACRO_MSCOR_VER VER_E_BR_OUTOF_FIL;
MACRO_MSCOR_VER VER_E_BR_OUTOF_FIN;
MACRO_MSCOR_VER VER_E_BR_OUTOF_HND;
MACRO_MSCOR_VER VER_E_BR_OUTOF_TRY;
MACRO_MSCOR_VER VER_E_CALLI_VIRTUAL;
MACRO_MSCOR_VER VER_E_CALLVIRT_VALCLASS;
MACRO_MSCOR_VER VER_E_CALL_ABSTRACT;
MACRO_MSCOR_VER VER_E_CALL_SIG;
MACRO_MSCOR_VER VER_E_CALL_STATIC;
MACRO_MSCOR_VER VER_E_CODE_SIZE_ZERO;
MACRO_MSCOR_VER VER_E_CTOR;
MACRO_MSCOR_VER VER_E_CTOR_MUL_INIT;
MACRO_MSCOR_VER VER_E_CTOR_OR_SUPER;
MACRO_MSCOR_VER VER_E_CTOR_VIRT;
MACRO_MSCOR_VER VER_E_DEAD;
MACRO_MSCOR_VER VER_E_ENDFILTER;
MACRO_MSCOR_VER VER_E_ENDFILTER_MISSING;
MACRO_MSCOR_VER VER_E_ENDFINALLY;
MACRO_MSCOR_VER VER_E_EXCEPT;
MACRO_MSCOR_VER VER_E_EXPECTED;
MACRO_MSCOR_VER VER_E_FALLTHRU;
MACRO_MSCOR_VER VER_E_FALLTHRU_EXCEP;
MACRO_MSCOR_VER VER_E_FALLTHRU_INTO_FIL;
MACRO_MSCOR_VER VER_E_FALLTHRU_INTO_HND;
MACRO_MSCOR_VER VER_E_FIELD_ACCESS;
MACRO_MSCOR_VER VER_E_FIELD_NO_STATIC;
MACRO_MSCOR_VER VER_E_FIELD_SIG;
MACRO_MSCOR_VER VER_E_FIELD_STATIC;
MACRO_MSCOR_VER VER_E_FIL_CONT_FIL;
MACRO_MSCOR_VER VER_E_FIL_CONT_HND;
MACRO_MSCOR_VER VER_E_FIL_CONT_TRY;
MACRO_MSCOR_VER VER_E_FIL_EQ;
MACRO_MSCOR_VER VER_E_FIL_GTEQ_CS;
MACRO_MSCOR_VER VER_E_FIL_OVERLAP;
MACRO_MSCOR_VER VER_E_FIL_START;
MACRO_MSCOR_VER VER_E_FIN_OVERLAP;
MACRO_MSCOR_VER VER_E_FLT_GTEQ_CS;
MACRO_MSCOR_VER VER_E_FLT_START;
MACRO_MSCOR_VER VER_E_FOUND;
MACRO_MSCOR_VER VER_E_GLOBAL_METHOD;
MACRO_MSCOR_VER VER_E_HNDEND_GT_CS;
MACRO_MSCOR_VER VER_E_HND_EQ;
MACRO_MSCOR_VER VER_E_HND_GTEQ_END;
MACRO_MSCOR_VER VER_E_HND_OVERLAP;
MACRO_MSCOR_VER VER_E_HND_START;
MACRO_MSCOR_VER VER_E_HRESULT;
MACRO_MSCOR_VER VER_E_INITONLY;
MACRO_MSCOR_VER VER_E_INNERMOST_FIRST;
MACRO_MSCOR_VER VER_E_INTERNAL;
MACRO_MSCOR_VER VER_E_LDSTR_OPERAND;
MACRO_MSCOR_VER VER_E_LEAVE;
MACRO_MSCOR_VER VER_E_LEXICAL_NESTING;
MACRO_MSCOR_VER VER_E_LOC;
MACRO_MSCOR_VER VER_E_LOC_DEAD;
MACRO_MSCOR_VER VER_E_LOC_NUM;
MACRO_MSCOR_VER VER_E_METHOD_ACCESS;
MACRO_MSCOR_VER VER_E_METHOD_END;
MACRO_MSCOR_VER VER_E_NOT_IN_GC_HEAP;
MACRO_MSCOR_VER VER_E_OFFSET;
MACRO_MSCOR_VER VER_E_OPCODE;
MACRO_MSCOR_VER VER_E_OPERAND;
MACRO_MSCOR_VER VER_E_PATH_LOC;
MACRO_MSCOR_VER VER_E_PATH_STACK;
MACRO_MSCOR_VER VER_E_PATH_STACK_DEPTH;
MACRO_MSCOR_VER VER_E_PATH_THIS;
MACRO_MSCOR_VER VER_E_RETHROW;
MACRO_MSCOR_VER VER_E_RET_BYREF;
MACRO_MSCOR_VER VER_E_RET_EMPTY;
MACRO_MSCOR_VER VER_E_RET_FROM_FIL;
MACRO_MSCOR_VER VER_E_RET_FROM_HND;
MACRO_MSCOR_VER VER_E_RET_FROM_TRY;
MACRO_MSCOR_VER VER_E_RET_MISSING;
MACRO_MSCOR_VER VER_E_RET_SIG;
MACRO_MSCOR_VER VER_E_RET_UNINIT;
MACRO_MSCOR_VER VER_E_RET_VOID;
MACRO_MSCOR_VER VER_E_SIG;
MACRO_MSCOR_VER VER_E_SIG_ARRAY;
MACRO_MSCOR_VER VER_E_SIG_ARRAY_BYREF;
MACRO_MSCOR_VER VER_E_SIG_ARRAY_PTR;
MACRO_MSCOR_VER VER_E_SIG_BYREF_BYREF;
MACRO_MSCOR_VER VER_E_SIG_CALLCONV;
MACRO_MSCOR_VER VER_E_SIG_ELEMTYPE;
MACRO_MSCOR_VER VER_E_SIG_ELEM_PTR;
MACRO_MSCOR_VER VER_E_SIG_VARARG;
MACRO_MSCOR_VER VER_E_SIG_VOID;
MACRO_MSCOR_VER VER_E_STACK_ARRAY_SD;
MACRO_MSCOR_VER VER_E_STACK_BYREF;
MACRO_MSCOR_VER VER_E_STACK_EMPTY;
MACRO_MSCOR_VER VER_E_STACK_EXCEPTION;
MACRO_MSCOR_VER VER_E_STACK_I_I4_I8;
MACRO_MSCOR_VER VER_E_STACK_METHOD;
MACRO_MSCOR_VER VER_E_STACK_NOT_EQ;
MACRO_MSCOR_VER VER_E_STACK_NO_R_R4_R8;
MACRO_MSCOR_VER VER_E_STACK_NO_VALCLASS;
MACRO_MSCOR_VER VER_E_STACK_NUMERIC;
MACRO_MSCOR_VER VER_E_STACK_OBJREF;
MACRO_MSCOR_VER VER_E_STACK_OVERFLOW;
MACRO_MSCOR_VER VER_E_STACK_P_OBJREF;
MACRO_MSCOR_VER VER_E_STACK_P_VALCLASS;
MACRO_MSCOR_VER VER_E_STACK_R_R4_R8;
MACRO_MSCOR_VER VER_E_STACK_SLOT;
MACRO_MSCOR_VER VER_E_STACK_TOO_LARGE;
MACRO_MSCOR_VER VER_E_STACK_UNDERFLOW;
MACRO_MSCOR_VER VER_E_STACK_UNEXPECTED;
MACRO_MSCOR_VER VER_E_STACK_UNINIT;
MACRO_MSCOR_VER VER_E_STACK_VALCLASS;
MACRO_MSCOR_VER VER_E_TAIL_BYREF;
MACRO_MSCOR_VER VER_E_TAIL_CALL;
MACRO_MSCOR_VER VER_E_TAIL_RET;
MACRO_MSCOR_VER VER_E_TAIL_RET_TYPE;
MACRO_MSCOR_VER VER_E_TAIL_RET_VOID;
MACRO_MSCOR_VER VER_E_TAIL_STACK_EMPTY;
MACRO_MSCOR_VER VER_E_THIS;
MACRO_MSCOR_VER VER_E_THIS_BYREF_VAL;
MACRO_MSCOR_VER VER_E_THIS_UNINIT_BR;
MACRO_MSCOR_VER VER_E_THIS_UNINIT_EXCEP;
MACRO_MSCOR_VER VER_E_THIS_UNINIT_RET;
MACRO_MSCOR_VER VER_E_THIS_UNINIT_STORE;
MACRO_MSCOR_VER VER_E_THIS_UNINIT_V_RET;
MACRO_MSCOR_VER VER_E_THROW;
MACRO_MSCOR_VER VER_E_TOKEN;
MACRO_MSCOR_VER VER_E_TOKEN_RESOLVE;
MACRO_MSCOR_VER VER_E_TOKEN_TYPE;
MACRO_MSCOR_VER VER_E_TOKEN_TYPE_FIELD;
MACRO_MSCOR_VER VER_E_TOKEN_TYPE_MEMBER;
MACRO_MSCOR_VER VER_E_TOKEN_TYPE_SIG;
MACRO_MSCOR_VER VER_E_TRYEND_GT_CS;
MACRO_MSCOR_VER VER_E_TRY_EQ_HND_FIL;
MACRO_MSCOR_VER VER_E_TRY_GTEQ_END;
MACRO_MSCOR_VER VER_E_TRY_N_EMPTY_STACK;
MACRO_MSCOR_VER VER_E_TRY_OVERLAP;
MACRO_MSCOR_VER VER_E_TRY_SHARE_FIN_FAL;
MACRO_MSCOR_VER VER_E_TRY_START;
MACRO_MSCOR_VER VER_E_UNALIGNED;
MACRO_MSCOR_VER VER_E_UNKNOWN_OPCODE;
MACRO_MSCOR_VER VER_E_UNVERIFIABLE;
MACRO_MSCOR_VER VER_E_VALCLASS;
MACRO_MSCOR_VER VER_E_VOLATILE;
MACRO_VLDTR VLDTR_E_AROS_OSPLTFRMIDINVAL;
MACRO_VLDTR VLDTR_E_AR_INVALIDEXELOC;
MACRO_VLDTR VLDTR_E_AR_NAMENULL;
MACRO_VLDTR VLDTR_E_AR_PROCID;
MACRO_VLDTR VLDTR_E_ASOS_DUP;
MACRO_VLDTR VLDTR_E_ASOS_OSPLTFRMIDINVAL;
MACRO_VLDTR VLDTR_E_AS_BADFLAGS;
MACRO_VLDTR VLDTR_E_AS_BADLOCALE;
MACRO_VLDTR VLDTR_E_AS_CTIMPLCTCTEXST;
MACRO_VLDTR VLDTR_E_AS_HASHALGID;
MACRO_VLDTR VLDTR_E_AS_MULTI;
MACRO_VLDTR VLDTR_E_AS_NAMENULL;
MACRO_VLDTR VLDTR_E_AS_PROCDUP;
MACRO_VLDTR VLDTR_E_AS_PROCID;
MACRO_VLDTR VLDTR_E_AS_RSRCIMPLCTMREXST;
MACRO_VLDTR VLDTR_E_BLOB_INVALID;
MACRO_VLDTR VLDTR_E_CDRID_OUTOFRANGE;
MACRO_VLDTR VLDTR_E_CDTKN_OUTOFRANGE;
MACRO_VLDTR VLDTR_E_CL_BADPCKSZ;
MACRO_VLDTR VLDTR_E_CL_DUP;
MACRO_VLDTR VLDTR_E_CL_TDAUTO;
MACRO_VLDTR VLDTR_E_CT_BADEXELOC;
MACRO_VLDTR VLDTR_E_CT_BADIMPL;
MACRO_VLDTR VLDTR_E_CT_BADTYPEDEF;
MACRO_VLDTR VLDTR_E_CT_DUP;
MACRO_VLDTR VLDTR_E_CT_NAMEMISMATCH;
MACRO_VLDTR VLDTR_E_CT_NAMENULL;
MACRO_VLDTR VLDTR_E_CT_NOTPUBPRIV;
MACRO_VLDTR VLDTR_E_CT_NOTYPEDEFID;
MACRO_VLDTR VLDTR_E_DS_BADFLAGS;
MACRO_VLDTR VLDTR_E_DS_BADOWNER;
MACRO_VLDTR VLDTR_E_DS_NOBLOB;
MACRO_VLDTR VLDTR_E_EV_ALIENMETHOD;
MACRO_VLDTR VLDTR_E_EV_BADEVTYPE;
MACRO_VLDTR VLDTR_E_EV_BADMETHOD;
MACRO_VLDTR VLDTR_E_EV_BADSCOPE;
MACRO_VLDTR VLDTR_E_EV_BADSEMANTICS;
MACRO_VLDTR VLDTR_E_EV_DUP;
MACRO_VLDTR VLDTR_E_EV_EVTYPENOTCLASS;
MACRO_VLDTR VLDTR_E_EV_FIRENOTVOID;
MACRO_VLDTR VLDTR_E_EV_NOADDON;
MACRO_VLDTR VLDTR_E_EV_NONAME;
MACRO_VLDTR VLDTR_E_EV_NOREMOVEON;
MACRO_VLDTR VLDTR_E_FD_BADCALLINGCONV;
MACRO_VLDTR VLDTR_E_FD_BADPARENT;
MACRO_VLDTR VLDTR_E_FD_DEFLTNOTMARKED;
MACRO_VLDTR VLDTR_E_FD_DUP;
MACRO_VLDTR VLDTR_E_FD_FLDINIFACE;
MACRO_VLDTR VLDTR_E_FD_GLOBALNORVA;
MACRO_VLDTR VLDTR_E_FD_GLOBALZERORVA;
MACRO_VLDTR VLDTR_E_FD_INITONLYANDLITERAL;
MACRO_VLDTR VLDTR_E_FD_INSTINIFACE;
MACRO_VLDTR VLDTR_E_FD_LITERALNOTSTATIC;
MACRO_VLDTR VLDTR_E_FD_MARKEDNODEFLT;
MACRO_VLDTR VLDTR_E_FD_MARKEDNOMARSHAL;
MACRO_VLDTR VLDTR_E_FD_MARSHALNOTMARKED;
MACRO_VLDTR VLDTR_E_FD_NAMENULL;
MACRO_VLDTR VLDTR_E_FD_NOTPUBINIFACE;
MACRO_VLDTR VLDTR_E_FD_NOTVALUERTSN;
MACRO_VLDTR VLDTR_E_FD_PARNIL;
MACRO_VLDTR VLDTR_E_FD_RVAHASNORVA;
MACRO_VLDTR VLDTR_E_FD_RVAHASZERORVA;
MACRO_VLDTR VLDTR_E_FD_VALUEPARNOTENUM;
MACRO_VLDTR VLDTR_E_FILE_BADFLAGS;
MACRO_VLDTR VLDTR_E_FILE_DUP;
MACRO_VLDTR VLDTR_E_FILE_NAMEFULLQLFD;
MACRO_VLDTR VLDTR_E_FILE_NAMENULL;
MACRO_VLDTR VLDTR_E_FILE_NULLHASH;
MACRO_VLDTR VLDTR_E_FL_BADOFFSET;
MACRO_VLDTR VLDTR_E_FL_DUP;
MACRO_VLDTR VLDTR_E_FL_FLDSTATIC;
MACRO_VLDTR VLDTR_E_FL_NOCL;
MACRO_VLDTR VLDTR_E_FL_TDNIL;
MACRO_VLDTR VLDTR_E_FL_TDNOTEXPLCT;
MACRO_VLDTR VLDTR_E_FMD_BADACCESSFLAG;
MACRO_VLDTR VLDTR_E_FMD_BADIMPLMAP;
MACRO_VLDTR VLDTR_E_FMD_GLOBALITEM;
MACRO_VLDTR VLDTR_E_FMD_GLOBALNOTPUBPRIVSC;
MACRO_VLDTR VLDTR_E_FMD_GLOBALNOTSTATIC;
MACRO_VLDTR VLDTR_E_FMD_HASSECURININTF;
MACRO_VLDTR VLDTR_E_FMD_MARKEDNOPINVOKE;
MACRO_VLDTR VLDTR_E_FMD_MARKEDNOSECUR;
MACRO_VLDTR VLDTR_E_FMD_PINVOKENOTMARKED;
MACRO_VLDTR VLDTR_E_FMD_PINVOKENOTSTATIC;
MACRO_VLDTR VLDTR_E_FMD_RTSNNOTSN;
MACRO_VLDTR VLDTR_E_FMD_SECURNOTMARKED;
MACRO_VLDTR VLDTR_E_GUID_INVALID;
MACRO_VLDTR VLDTR_E_IFACE_BADIFACE;
MACRO_VLDTR VLDTR_E_IFACE_BADIMPL;
MACRO_VLDTR VLDTR_E_IFACE_DUP;
MACRO_VLDTR VLDTR_E_IFACE_NOTIFACE;
MACRO_VLDTR VLDTR_E_IMAP_BADCALLCONV;
MACRO_VLDTR VLDTR_E_IMAP_BADIMPORTNAME;
MACRO_VLDTR VLDTR_E_IMAP_BADMEMBER;
MACRO_VLDTR VLDTR_E_IMAP_BADMODREF;
MACRO_VLDTR VLDTR_E_INTERRUPTED;
MACRO_VLDTR VLDTR_E_MAR_BADFLAGS;
MACRO_VLDTR VLDTR_E_MAR_BADIMPL;
MACRO_VLDTR VLDTR_E_MAR_DUP;
MACRO_VLDTR VLDTR_E_MAR_NAMENULL;
MACRO_VLDTR VLDTR_E_MAR_NOTPUBPRIV;
MACRO_VLDTR VLDTR_E_MD_ABSTANDFINAL;
MACRO_VLDTR VLDTR_E_MD_ABSTANDIMPL;
MACRO_VLDTR VLDTR_E_MD_ABSTANDPINVOKE;
MACRO_VLDTR VLDTR_E_MD_ABSTNOTVIRT;
MACRO_VLDTR VLDTR_E_MD_ABSTPARNOTABST;
MACRO_VLDTR VLDTR_E_MD_BADCALLINGCONV;
MACRO_VLDTR VLDTR_E_MD_CCTORNOTSTATIC;
MACRO_VLDTR VLDTR_E_MD_CTORABST;
MACRO_VLDTR VLDTR_E_MD_CTORININTF;
MACRO_VLDTR VLDTR_E_MD_CTORNOTSNRTSN;
MACRO_VLDTR VLDTR_E_MD_CTORNOTVOID;
MACRO_VLDTR VLDTR_E_MD_CTORSTATIC;
MACRO_VLDTR VLDTR_E_MD_CTORVIRT;
MACRO_VLDTR VLDTR_E_MD_DUP;
MACRO_VLDTR VLDTR_E_MD_FINNOTVIRT;
MACRO_VLDTR VLDTR_E_MD_GLOBALABSTORVIRT;
MACRO_VLDTR VLDTR_E_MD_GLOBALCTORCCTOR;
MACRO_VLDTR VLDTR_E_MD_INVALIDSEMANTICS;
MACRO_VLDTR VLDTR_E_MD_MULTIPLESEMANTICS;
MACRO_VLDTR VLDTR_E_MD_MULTSEMANTICFLAGS;
MACRO_VLDTR VLDTR_E_MD_NAMENULL;
MACRO_VLDTR VLDTR_E_MD_NOARGCNT;
MACRO_VLDTR VLDTR_E_MD_NOSEMANTICFLAGS;
MACRO_VLDTR VLDTR_E_MD_NOTABSTBADFLAGSRVA;
MACRO_VLDTR VLDTR_E_MD_NOTABSTNOTIMPL;
MACRO_VLDTR VLDTR_E_MD_NOTPUBININTF;
MACRO_VLDTR VLDTR_E_MD_NOTSTATABSTININTF;
MACRO_VLDTR VLDTR_E_MD_NOTTHISNOTSTATIC;
MACRO_VLDTR VLDTR_E_MD_PARAMOUTOFSEQ;
MACRO_VLDTR VLDTR_E_MD_PARASEQTOOBIG;
MACRO_VLDTR VLDTR_E_MD_PARMDEFLTNOTMARKED;
MACRO_VLDTR VLDTR_E_MD_PARMMARKEDNODEFLT;
MACRO_VLDTR VLDTR_E_MD_PARMMARKEDNOMARSHAL;
MACRO_VLDTR VLDTR_E_MD_PARMMARSHALNOTMARKED;
MACRO_VLDTR VLDTR_E_MD_PARNIL;
MACRO_VLDTR VLDTR_E_MD_PRIVSCOPENORVA;
MACRO_VLDTR VLDTR_E_MD_SEMANTICSNOTEXIST;
MACRO_VLDTR VLDTR_E_MD_STATANDFINORVIRT;
MACRO_VLDTR VLDTR_E_MD_SYNCMETHODINVTYPE;
MACRO_VLDTR VLDTR_E_MD_THISSTATIC;
MACRO_VLDTR VLDTR_E_MD_ZERORVA;
MACRO_VLDTR VLDTR_E_MI_BADBODY;
MACRO_VLDTR VLDTR_E_MI_BADCLASS;
MACRO_VLDTR VLDTR_E_MI_BADDECL;
MACRO_VLDTR VLDTR_E_MI_CLASSISINTF;
MACRO_VLDTR VLDTR_E_MI_DUP;
MACRO_VLDTR VLDTR_E_MODREF_DUP;
MACRO_VLDTR VLDTR_E_MODREF_NAMENULL;
MACRO_VLDTR VLDTR_E_MOD_MULTI;
MACRO_VLDTR VLDTR_E_MOD_NAMEFULLQLFD;
MACRO_VLDTR VLDTR_E_MOD_NONAME;
MACRO_VLDTR VLDTR_E_MOD_NULLMVID;
MACRO_VLDTR VLDTR_E_MR_BADCALLINGCONV;
MACRO_VLDTR VLDTR_E_MR_DELNAME;
MACRO_VLDTR VLDTR_E_MR_DUP;
MACRO_VLDTR VLDTR_E_MR_NAMEDIFF;
MACRO_VLDTR VLDTR_E_MR_NAMENULL;
MACRO_VLDTR VLDTR_E_MR_NOTVARARG;
MACRO_VLDTR VLDTR_E_MR_PARNIL;
MACRO_VLDTR VLDTR_E_MR_SIGDIFF;
MACRO_VLDTR VLDTR_E_MR_VARARGCALLINGCONV;
MACRO_VLDTR VLDTR_E_MR_VTBLNAME;
MACRO_VLDTR VLDTR_E_NOTINIT;
MACRO_VLDTR VLDTR_E_PR_ALIENBACKFIELD;
MACRO_VLDTR VLDTR_E_PR_ALIENMETHOD;
MACRO_VLDTR VLDTR_E_PR_BADBACKFIELD;
MACRO_VLDTR VLDTR_E_PR_BADCALLINGCONV;
MACRO_VLDTR VLDTR_E_PR_BADMETHOD;
MACRO_VLDTR VLDTR_E_PR_BADSCOPE;
MACRO_VLDTR VLDTR_E_PR_BADSEMANTICS;
MACRO_VLDTR VLDTR_E_PR_DEFLTNOTMARKED;
MACRO_VLDTR VLDTR_E_PR_DUP;
MACRO_VLDTR VLDTR_E_PR_MARKEDNODEFLT;
MACRO_VLDTR VLDTR_E_PR_NONAME;
MACRO_VLDTR VLDTR_E_PR_NOSIG;
MACRO_VLDTR VLDTR_E_RID_OUTOFRANGE;
MACRO_VLDTR VLDTR_E_SIGNODATA;
MACRO_VLDTR VLDTR_E_SIGNULL;
MACRO_VLDTR VLDTR_E_SIG_BADELTYPE;
MACRO_VLDTR VLDTR_E_SIG_BYREFINFIELD;
MACRO_VLDTR VLDTR_E_SIG_LASTSENTINEL;
MACRO_VLDTR VLDTR_E_SIG_LONGFORM;
MACRO_VLDTR VLDTR_E_SIG_MISSARG;
MACRO_VLDTR VLDTR_E_SIG_MISSELTYPE;
MACRO_VLDTR VLDTR_E_SIG_MISSFPTR;
MACRO_VLDTR VLDTR_E_SIG_MISSFPTRARGCNT;
MACRO_VLDTR VLDTR_E_SIG_MISSLBND;
MACRO_VLDTR VLDTR_E_SIG_MISSNLBND;
MACRO_VLDTR VLDTR_E_SIG_MISSNSIZE;
MACRO_VLDTR VLDTR_E_SIG_MISSRANK;
MACRO_VLDTR VLDTR_E_SIG_MISSSIZE;
MACRO_VLDTR VLDTR_E_SIG_MISSTKN;
MACRO_VLDTR VLDTR_E_SIG_MISSVASIZE;
MACRO_VLDTR VLDTR_E_SIG_MULTSENTINELS;
MACRO_VLDTR VLDTR_E_SIG_SENTINMETHODDEF;
MACRO_VLDTR VLDTR_E_SIG_SENTMUSTVARARG;
MACRO_VLDTR VLDTR_E_SIG_TKNBAD;
MACRO_VLDTR VLDTR_E_SIG_UNMANAGEDVT;
MACRO_VLDTR VLDTR_E_STRING_INVALID;
MACRO_VLDTR VLDTR_E_TD_ABSSEAL;
MACRO_VLDTR VLDTR_E_TD_BADFIELDLST;
MACRO_VLDTR VLDTR_E_TD_BADMETHODLST;
MACRO_VLDTR VLDTR_E_TD_CLSEXTSNONCLS;
MACRO_VLDTR VLDTR_E_TD_DLTNORTSPCL;
MACRO_VLDTR VLDTR_E_TD_DUPGUID;
MACRO_VLDTR VLDTR_E_TD_DUPNAME;
MACRO_VLDTR VLDTR_E_TD_ENCLNOTNESTED;
MACRO_VLDTR VLDTR_E_TD_ENUMFLDNOTLIT;
MACRO_VLDTR VLDTR_E_TD_ENUMFLDNOTST;
MACRO_VLDTR VLDTR_E_TD_ENUMFLDSIGMISMATCH;
MACRO_VLDTR VLDTR_E_TD_ENUMHASEVENT;
MACRO_VLDTR VLDTR_E_TD_ENUMHASMETHODS;
MACRO_VLDTR VLDTR_E_TD_ENUMHASPROP;
MACRO_VLDTR VLDTR_E_TD_ENUMIMPLIFACE;
MACRO_VLDTR VLDTR_E_TD_ENUMMULINSTFLD;
MACRO_VLDTR VLDTR_E_TD_ENUMNOINSTFLD;
MACRO_VLDTR VLDTR_E_TD_ENUMNOLITFLDS;
MACRO_VLDTR VLDTR_E_TD_ENUMNOTVT;
MACRO_VLDTR VLDTR_E_TD_ENUMNOVALUE;
MACRO_VLDTR VLDTR_E_TD_ENUMVALNOT1ST;
MACRO_VLDTR VLDTR_E_TD_ENUMVALNOTSN;
MACRO_VLDTR VLDTR_E_TD_ENUMVALSTATIC;
MACRO_VLDTR VLDTR_E_TD_EXTENDSIFACE;
MACRO_VLDTR VLDTR_E_TD_EXTENDSSEALED;
MACRO_VLDTR VLDTR_E_TD_EXTENDSVTYPE;
MACRO_VLDTR VLDTR_E_TD_EXTTRRES;
MACRO_VLDTR VLDTR_E_TD_EXTVTNOTVT;
MACRO_VLDTR VLDTR_E_TD_IFACEGUIDNULL;
MACRO_VLDTR VLDTR_E_TD_IFACEHASSECUR;
MACRO_VLDTR VLDTR_E_TD_IFACENOTABS;
MACRO_VLDTR VLDTR_E_TD_IFACENSTD;
MACRO_VLDTR VLDTR_E_TD_IFACEPARNOTNIL;
MACRO_VLDTR VLDTR_E_TD_MARKEDNOSECUR;
MACRO_VLDTR VLDTR_E_TD_NAMENULL;
MACRO_VLDTR VLDTR_E_TD_NAMETOOLONG;
MACRO_VLDTR VLDTR_E_TD_NESTEDNOENCL;
MACRO_VLDTR VLDTR_E_TD_NOTIFACEOBJEXTNULL;
MACRO_VLDTR VLDTR_E_TD_OBJEXTENDSNONNULL;
MACRO_VLDTR VLDTR_E_TD_RTSPCLNOTDLT;
MACRO_VLDTR VLDTR_E_TD_RTSPCLNOTSPCL;
MACRO_VLDTR VLDTR_E_TD_SECURNOTMARKED;
MACRO_VLDTR VLDTR_E_TD_SYSENUMNOTCLASS;
MACRO_VLDTR VLDTR_E_TD_SYSENUMNOTEXTVTYPE;
MACRO_VLDTR VLDTR_E_TD_UMVTNOTVT;
MACRO_VLDTR VLDTR_E_TD_UNMGDNSTD;
MACRO_VLDTR VLDTR_E_TD_VTEXTSNONCLS;
MACRO_VLDTR VLDTR_E_TD_VTEXTSNOTVT;
MACRO_VLDTR VLDTR_E_TD_VTNOTSEAL;
MACRO_VLDTR VLDTR_E_TR_BADSCOPE;
MACRO_VLDTR VLDTR_E_TR_DUP;
MACRO_VLDTR VLDTR_E_TR_HASTYPEDEF;
MACRO_VLDTR VLDTR_E_TR_NAMENULL;
MACRO_VLDTR VLDTR_S_ERR;
MACRO_VLDTR VLDTR_S_WRN;
MACRO_VLDTR VLDTR_S_WRNERR;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypeEnc;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypeIncr;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypeInvalid;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypeMax;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypeMin;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypeObj;
$A4752B4F8E92EE6FE72360C4B48BE096 ValidatorModuleTypePE;
const CLSID CLSID_CORSvc;
const GUID CLSID_ComCallUnmarshal;
const GUID CLSID_Cor;
const CLSID CLSID_CorDebug;
const GUID CLSID_CorMetaDataDispenser;
const GUID CLSID_CorMetaDataDispenserReg;
const GUID CLSID_CorMetaDataDispenserRuntime;
const GUID CLSID_CorMetaDataReg;
const GUID CLSID_CorMetaDataRuntime;
const GUID CLSID_CorRuntimeHost;
const CLSID CLSID_CorSymBinder;
const CLSID CLSID_CorSymReader;
const CLSID CLSID_CorSymWriter;
const CLSID CLSID_CorpubPublish;
const CLSID CLSID_VEHandlerClass;
__int32 __stdcall CorClassMain(LPWSTR entryClassName);
BOOL __stdcall CorDllMain(HINSTANCE hInst, DWORD dwReason, LPVOID lpReserved);
__int32 __stdcall CorExeMain();
__int32 __stdcall CorExeMain2(PBYTE pUnmappedPE, DWORD cUnmappedPE, LPWSTR pImageNameIn, LPWSTR pLoadersFileName, LPWSTR pCmdLine);
void __stdcall CorImageUnloading(PVOID ImageBase);
GUID CorSym_DocumentType_MC;
GUID CorSym_DocumentType_Text;
GUID CorSym_LanguageType_Basic;
GUID CorSym_LanguageType_C;
GUID CorSym_LanguageType_CPlusPlus;
GUID CorSym_LanguageType_CSharp;
GUID CorSym_LanguageType_Cobol;
GUID CorSym_LanguageType_ILAssembly;
GUID CorSym_LanguageType_JScript;
GUID CorSym_LanguageType_Java;
GUID CorSym_LanguageType_MCPlusPlus;
GUID CorSym_LanguageType_Pascal;
GUID CorSym_LanguageType_SMC;
GUID CorSym_LanguageVendor_Microsoft;
HRESULT __stdcall CorValidateImage(PVOID *ImageBase, LPCWSTR FileName);
MACRO__D0 _D0;
MACRO__D1 _D1;
MACRO__D2 _D2;
MACRO__D3 D3;
MACRO__DBIAS _DBIAS;
MACRO__DFRAC _DFRAC;
MACRO__DLONG DLONG;
MACRO__DFRAC _DMASK;
MACRO__DMAX _DMAX;
MACRO__DOFF _DOFF;
MACRO__DMAX _DSIGN;
MACRO__F0 _F0;
MACRO__F1 F1;
MACRO__FBIAS _FBIAS;
MACRO__FFRAC _FFRAC;
MACRO__FFRAC _FMASK;
MACRO__FMAX _FMAX;
MACRO__FOFF _FOFF;
MACRO__FRND _FRND;
MACRO__FMAX _FSIGN;
const GUID GUID_ExportedFromComPlus;
const GUID GUID_ImportedToComPlus;
const GUID GUID_ManagedName;
const IID IID_IAppDomainBinding;
const IID IID_ICORSvcDbgInfo;
const IID IID_ICORSvcDbgNotify;
const GUID IID_ICatalogServices;
const GUID IID_ICeeGen;
const GUID IID_ICorConfiguration;
const IID IID_ICorDebug;
const IID IID_ICorDebugAppDomain;
const IID IID_ICorDebugAppDomainEnum;
const IID IID_ICorDebugArrayValue;
const IID IID_ICorDebugAssembly;
const IID IID_ICorDebugAssemblyEnum;
const IID IID_ICorDebugBoxValue;
const IID IID_ICorDebugBreakpoint;
const IID IID_ICorDebugBreakpointEnum;
const IID IID_ICorDebugChain;
const IID IID_ICorDebugChainEnum;
const IID IID_ICorDebugClass;
const IID IID_ICorDebugCode;
const IID IID_ICorDebugContext;
const IID IID_ICorDebugController;
const IID IID_ICorDebugEditAndContinueErrorInfo;
const IID IID_ICorDebugEditAndContinueSnapshot;
const IID IID_ICorDebugEnum;
const IID IID_ICorDebugErrorInfoEnum;
const IID IID_ICorDebugEval;
const IID IID_ICorDebugFrame;
const IID IID_ICorDebugFrameEnum;
const IID IID_ICorDebugFunction;
const IID IID_ICorDebugFunctionBreakpoint;
const IID IID_ICorDebugGenericValue;
const IID IID_ICorDebugHeapValue;
const IID IID_ICorDebugILFrame;
const IID IID_ICorDebugManagedCallback;
const IID IID_ICorDebugModule;
const IID IID_ICorDebugModuleBreakpoint;
const IID IID_ICorDebugModuleEnum;
const IID IID_ICorDebugNativeFrame;
const IID IID_ICorDebugObjectEnum;
const IID IID_ICorDebugObjectValue;
const IID IID_ICorDebugProcess;
const IID IID_ICorDebugProcessEnum;
const IID IID_ICorDebugReferenceValue;
const IID IID_ICorDebugRegisterSet;
const IID IID_ICorDebugStepper;
const IID IID_ICorDebugStepperEnum;
const IID IID_ICorDebugStringValue;
const IID IID_ICorDebugThread;
const IID IID_ICorDebugThreadEnum;
const IID IID_ICorDebugUnmanagedCallback;
const IID IID_ICorDebugValue;
const IID IID_ICorDebugValueBreakpoint;
const IID IID_ICorDebugValueEnum;
const GUID IID_ICorModule;
const IID IID_ICorProfilerCallback;
const IID IID_ICorProfilerInfo;
const IID IID_ICorPublish;
const IID IID_ICorPublishAppDomain;
const IID IID_ICorPublishAppDomainEnum;
const IID IID_ICorPublishEnum;
const IID IID_ICorPublishProcess;
const IID IID_ICorPublishProcessEnum;
const GUID IID_ICorRuntimeHost;
const GUID IID_ICorThreadpool;
const GUID IID_IDebuggerThreadControl;
const IID IID_IGCHost;
const IID IID_IGCHostControl;
const IID IID_IGCThreadControl;
const GUID IID_IHostFilter;
const IID IID_ILoader;
const GUID IID_IManagedObject;
const GUID IID_IMapToken;
const GUID IID_IMetaDataAssemblyEmit;
const GUID IID_IMetaDataAssemblyImport;
const GUID IID_IMetaDataCFC;
const GUID IID_IMetaDataConverter;
const GUID IID_IMetaDataDispenser;
const GUID IID_IMetaDataDispenserEx;
const GUID IID_IMetaDataEmit;
const GUID IID_IMetaDataError;
const GUID IID_IMetaDataFilter;
const GUID IID_IMetaDataImport;
const GUID IID_IMetaDataInternal;
const GUID IID_IMetaDataTables;
const GUID IID_IMetaDataValidate;
const IID IID_IMethodMalloc;
const GUID IID_IObjectHandle;
const IID IID_ISymUnmanagedBinder;
const IID IID_ISymUnmanagedDocument;
const IID IID_ISymUnmanagedDocumentWriter;
const IID IID_ISymUnmanagedMethod;
const IID IID_ISymUnmanagedNamespace;
const IID IID_ISymUnmanagedReader;
const IID IID_ISymUnmanagedScope;
const IID IID_ISymUnmanagedVariable;
const IID IID_ISymUnmanagedWriter;
const IID IID_IVEHandler;
const IID IID_IValidator;
MACRO__L0 _L0;
MACRO__L1 _L1;
MACRO__L2 _L2;
MACRO__L3 L3;
MACRO__DLONG _LBIAS;
MACRO__F1 _LFRAC;
const IID LIBID_CORDBLib;
const IID LIBID_CORSvcLib;
const GUID LIBID_ComPlusRuntime;
const IID LIBID_CorSymLib;
const IID LIBID_CorpubProcessLib;
const IID LIBID_VEHandlerLib;
const GUID LIBID_mscoree;
MACRO__LMASK _LMASK;
MACRO__LMAX _LMAX;
MACRO__LOFF _LOFF;
MACRO__LMAX _LSIGN;
const GUID MetaDataCheckDuplicatesFor;
const GUID MetaDataErrorIfEmitOutOfOrder;
const GUID MetaDataGenerateTCEAdapters;
const GUID MetaDataImportOption;
const GUID MetaDataNotificationForTokenMovement;
const GUID MetaDataRefToDefCheck;
const GUID MetaDataSetUpdate;
const GUID MetaDataThreadSafetyOptions;
const GUID MetaDataTypeLibImportNamespace;
ReplacesGeneralNumericDefines _NEW_FLAGS_IMPLEMENTED;
double __cdecl _Atan(double, int);
__int16 __cdecl _Dint(double *, __int16);
__int16 __cdecl _Dnorm(unsigned __int16 *);
__int16 __cdecl _Dscale(double *, int);
double __cdecl _Dtento(double, int);
__int16 __cdecl _Dunscale(__int16 *, double *);
const _Dconst _Eps;
float __cdecl _FAtan(float, int);
__int16 __cdecl _FDint(float *, __int16);
__int16 __cdecl _FDnorm(unsigned __int16 *);
__int16 __cdecl _FDscale(float *, int);
float __cdecl _FDtento(float, int);
__int16 __cdecl _FDunscale(__int16 *, float *);
const _Dconst _FEps;
float __cdecl _FPoly(float, const float *, int);
const _Dconst _FRteps;
const float _FXbig;
long double __cdecl _LAtan(long double, int);
__int16 __cdecl _LDint(long double *, __int16);
__int16 __cdecl _LDnorm(unsigned __int16 *);
__int16 __cdecl _LDscale(long double *, int);
long double __cdecl _LDtento(long double, int);
__int16 __cdecl _LDunscale(__int16 *, long double *);
const _Dconst _LEps;
long double __cdecl _LPoly(long double, const long double *, int);
const _Dconst _LRteps;
const long double _LXbig;
ReplacesGeneralNumericDefines __NEW_FLAGS_IMPLEMENTED;
double __cdecl _Poly(double, const double *, int);
const _Dconst _Rteps;
int __cdecl _Stoflt(const char *, const char *, char **, int[], int);
int __cdecl _Stopfx(const char **, char **);
int __cdecl _Stoxflt(const char *, const char *, char **, int[], int);
const double _Xbig;
RPC_IF_HANDLE __MIDL_itf_cordebug_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_cordebug_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_cordebug_0108_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_cordebug_0108_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_cordebug_0109_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_cordebug_0109_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_corprof_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_corprof_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_corpub_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_corpub_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_corsvc_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_corsvc_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_corsym_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_corsym_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_gchost_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_gchost_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_ivalidator_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_ivalidator_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_ivehandler_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_ivehandler_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0000_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0000_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0119_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0119_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0120_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0120_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0121_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0121_v0_0_s_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0122_v0_0_c_ifspec;
RPC_IF_HANDLE __MIDL_itf_mscoree_0122_v0_0_s_ifspec;
const char szGUID_ImportedToComPlus[];
const WCHAR wzGUID_ImportedToComPlus[];
CorAssemblyFlags afCompatibilityMask;
CorAssemblyFlags afImplicitComTypes;
CorAssemblyFlags afImplicitResources;
CorAssemblyFlags afNonSideBySideAppDomain;
CorAssemblyFlags afNonSideBySideMachine;
CorAssemblyFlags afNonSideBySideProcess;
CorAssemblyFlags afSideBySideCompatible;
CorAssemblyRefFlags arFullOriginator;
CorAttributeTargets catAll;
CorAttributeTargets catAssembly;
CorAttributeTargets catClass;
CorAttributeTargets catClassMembers;
CorAttributeTargets catConstructor;
CorAttributeTargets catDelegate;
CorAttributeTargets catEnum;
CorAttributeTargets catEvent;
CorAttributeTargets catField;
CorAttributeTargets catInterface;
CorAttributeTargets catMethod;
CorAttributeTargets catModule;
CorAttributeTargets catParameter;
CorAttributeTargets catProperty;
CorAttributeTargets catStruct;
CorSaveSize cssAccurate;
CorSaveSize cssDiscardTransientCAs;
CorSaveSize cssQuick;
CorDeclSecurity dclActionMask;
CorDeclSecurity dclActionNil;
CorDeclSecurity dclAssert;
CorDeclSecurity dclDemand;
CorDeclSecurity dclDeny;
CorDeclSecurity dclInheritanceCheck;
CorDeclSecurity dclLinktimeCheck;
CorDeclSecurity dclMaximumValue;
CorDeclSecurity dclNonCasDemand;
CorDeclSecurity dclNonCasInheritance;
CorDeclSecurity dclNonCasLinkDemand;
CorDeclSecurity dclPermitOnly;
CorDeclSecurity dclPrejitDenied;
CorDeclSecurity dclPrejitGrant;
CorDeclSecurity dclRequest;
CorDeclSecurity dclRequestMinimum;
CorDeclSecurity dclRequestOptional;
CorDeclSecurity dclRequestRefuse;
CorEventAttr evRTSpecialName;
CorEventAttr evReservedMask;
CorEventAttr evSpecialName;
CorFieldAttr fdAssembly;
CorFieldAttr fdFamANDAssem;
CorFieldAttr fdFamORAssem;
CorFieldAttr fdFamily;
CorFieldAttr fdFieldAccessMask;
CorFieldAttr fdHasDefault;
CorFieldAttr fdHasFieldMarshal;
CorFieldAttr fdHasFieldRVA;
CorFieldAttr fdHasSecurity;
CorFieldAttr fdInitOnly;
CorFieldAttr fdLiteral;
CorFieldAttr fdNotSerialized;
CorFieldAttr fdPinvokeImpl;
CorFieldAttr fdPrivate;
CorFieldAttr fdPrivateScope;
CorFieldAttr fdPublic;
CorFieldAttr fdRTSpecialName;
CorFieldAttr fdReservedMask;
CorFieldAttr fdSpecialName;
CorFieldAttr fdStatic;
CorFileFlags ffContainsMetaData;
CorFileFlags ffContainsNoMetaData;
CorFileFlags ffWriteable;
CorMethodAttr mdAbstract;
CorMethodAttr mdAssem;
CorMethodAttr mdFamANDAssem;
CorMethodAttr mdFamORAssem;
CorMethodAttr mdFamily;
CorMethodAttr mdFinal;
CorMethodAttr mdHasSecurity;
CorMethodAttr mdHideBySig;
CorMethodAttr mdMemberAccessMask;
CorMethodAttr mdNewSlot;
CorMethodAttr mdPinvokeImpl;
CorMethodAttr mdPrivate;
CorMethodAttr mdPrivateScope;
CorMethodAttr mdPublic;
CorMethodAttr mdRTSpecialName;
CorMethodAttr mdRequireSecObject;
CorMethodAttr mdReservedMask;
CorMethodAttr mdReuseSlot;
CorMethodAttr mdSpecialName;
CorMethodAttr mdStatic;
MACRO_mdTokenNil mdTokenNil;
CorMethodAttr mdUnmanagedExport;
CorMethodAttr mdVirtual;
CorMethodAttr mdVtableLayoutMask;
CorTokenType mdtAssembly;
CorTokenType mdtAssemblyRef;
CorTokenType mdtBaseType;
CorBaseType mdtBaseType_BOOLEAN;
CorBaseType mdtBaseType_CHAR;
CorBaseType mdtBaseType_I;
CorBaseType mdtBaseType_I1;
CorBaseType mdtBaseType_I2;
CorBaseType mdtBaseType_I4;
CorBaseType mdtBaseType_I8;
CorBaseType mdtBaseType_R;
CorBaseType mdtBaseType_R4;
CorBaseType mdtBaseType_R8;
CorBaseType mdtBaseType_STRING;
CorBaseType mdtBaseType_U;
CorBaseType mdtBaseType_U1;
CorBaseType mdtBaseType_U2;
CorBaseType mdtBaseType_U4;
CorBaseType mdtBaseType_U8;
CorTokenType mdtComType;
CorTokenType mdtCustomAttribute;
CorTokenType mdtCustomValue;
CorTokenType mdtEvent;
CorTokenType mdtExecutionLocation;
CorTokenType mdtFieldDef;
CorTokenType mdtFile;
CorTokenType mdtInterfaceImpl;
CorTokenType mdtLocalVar;
CorTokenType mdtLocalVarScope;
CorTokenType mdtManifestResource;
CorTokenType mdtMemberRef;
CorTokenType mdtMethodDef;
CorTokenType mdtModule;
CorTokenType mdtModuleRef;
CorTokenType mdtName;
CorTokenType mdtParamDef;
CorTokenType mdtPermission;
CorTokenType mdtProperty;
CorTokenType mdtSignature;
CorTokenType mdtSourceFile;
CorTokenType mdtString;
CorTokenType mdtTypeDef;
CorTokenType mdtTypeRef;
CorTokenType mdtTypeSpec;
CorMethodImpl miCodeTypeMask;
CorMethodImpl miForwardRef;
CorMethodImpl miIL;
CorMethodImpl miInternalCall;
CorMethodImpl miManaged;
CorMethodImpl miManagedMask;
CorMethodImpl miMaxMethodImplVal;
CorMethodImpl miNative;
CorMethodImpl miNoInlining;
CorMethodImpl miOLE;
CorMethodImpl miOPTIL;
CorMethodImpl miRuntime;
CorMethodImpl miSynchronized;
CorMethodImpl miUnmanaged;
CorManifestResourceFlags mrPrivate;
CorManifestResourceFlags mrPublic;
CorManifestResourceFlags mrVisibilityMask;
CorMethodSemanticsAttr msAddOn;
CorMethodSemanticsAttr msFire;
CorMethodSemanticsAttr msGetter;
CorMethodSemanticsAttr msOther;
CorMethodSemanticsAttr msRemoveOn;
CorMethodSemanticsAttr msSetter;
$09EE49AD0A975A087641D8B4D0DF4D82 nlfLastError;
$09EE49AD0A975A087641D8B4D0DF4D82 nlfNoMangle;
$09EE49AD0A975A087641D8B4D0DF4D82 nlfNone;
$CD0F2999C8B85746BE1E263AC63D16E1 nltAnsi;
$CD0F2999C8B85746BE1E263AC63D16E1 nltAuto;
$CD0F2999C8B85746BE1E263AC63D16E1 nltNone;
$CD0F2999C8B85746BE1E263AC63D16E1 nltOle;
$CD0F2999C8B85746BE1E263AC63D16E1 nltUnicode;
CorOpenFlags ofCacheImage;
CorOpenFlags ofCopyMemory;
CorOpenFlags ofNoTypeLib;
CorOpenFlags ofRead;
CorOpenFlags ofWrite;
CorParamAttr pdHasDefault;
CorParamAttr pdHasFieldMarshal;
CorParamAttr pdIn;
CorParamAttr pdLcid;
CorParamAttr pdOptional;
CorParamAttr pdOut;
CorParamAttr pdReserved3;
CorParamAttr pdReserved4;
CorParamAttr pdReservedMask;
CorParamAttr pdRetval;
CorPinvokeMap pmCallConvCdecl;
CorPinvokeMap pmCallConvFastcall;
CorPinvokeMap pmCallConvMask;
CorPinvokeMap pmCallConvStdcall;
CorPinvokeMap pmCallConvThiscall;
CorPinvokeMap pmCallConvWinapi;
CorPinvokeMap pmCharSetAnsi;
CorPinvokeMap pmCharSetAuto;
CorPinvokeMap pmCharSetMask;
CorPinvokeMap pmCharSetNotSpec;
CorPinvokeMap pmCharSetUnicode;
CorPinvokeMap pmNoMangle;
CorPinvokeMap pmPinvokeOLE;
CorPinvokeMap pmSupportsLastError;
CorPropertyAttr prHasDefault;
CorPropertyAttr prRTSpecialName;
CorPropertyAttr prReserved2;
CorPropertyAttr prReserved3;
CorPropertyAttr prReserved4;
CorPropertyAttr prReservedMask;
CorPropertyAttr prSpecialName;
$BC5ECE20E40C10210AFE8CEDCDB6CC1A regConfig;
$BC5ECE20E40C10210AFE8CEDCDB6CC1A regHasRefs;
$BC5ECE20E40C10210AFE8CEDCDB6CC1A regNoCopy;
$EB5B9CCC078DEABABAED69F2F8ADE8FA sdExecute;
$EB5B9CCC078DEABABAED69F2F8ADE8FA sdNone;
$EB5B9CCC078DEABABAED69F2F8ADE8FA sdReadOnly;
$EB5B9CCC078DEABABAED69F2F8ADE8FA sdReadWrite;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocAbsolute;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocAbsolutePtr;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocFilePos;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocHigh;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocHighAdj;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocHighLow;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocHighLowPtr;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocLow;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocMapToken;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocPtr;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocRelative;
$91AF93DF9160876FBA1CDBF34D6E05E8 srRelocRelativePtr;
CorTypeAttr tdAbstract;
CorTypeAttr tdAnsiClass;
CorTypeAttr tdAutoClass;
CorTypeAttr tdAutoLayout;
CorTypeAttr tdClass;
CorTypeAttr tdClassSemanticsMask;
CorTypeAttr tdEnum;
CorTypeAttr tdExplicitLayout;
CorTypeAttr tdHasSecurity;
CorTypeAttr tdImport;
CorTypeAttr tdInterface;
CorTypeAttr tdLateInit;
CorTypeAttr tdLayoutMask;
CorTypeAttr tdLayoutSequential;
CorTypeAttr tdNestedAssembly;
CorTypeAttr tdNestedFamANDAssem;
CorTypeAttr tdNestedFamORAssem;
CorTypeAttr tdNestedFamily;
CorTypeAttr tdNestedPrivate;
CorTypeAttr tdNestedPublic;
CorTypeAttr tdNotInGCHeapValueType;
CorTypeAttr tdNotPublic;
CorTypeAttr tdPublic;
CorTypeAttr tdRTSpecialName;
CorTypeAttr tdReservedMask;
CorTypeAttr tdSealed;
CorTypeAttr tdSerializable;
CorTypeAttr tdSpecialName;
CorTypeAttr tdStringFormatMask;
CorTypeAttr tdUnicodeClass;
CorTypeAttr tdUnmanagedValueType;
CorTypeAttr tdValueType;
CorTypeAttr tdVisibilityMask;
