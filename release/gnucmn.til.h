#ifndef INCLUDE_GUARD_gnucmn_til
#define INCLUDE_GUARD_gnucmn_til
#include "__idatilcommon.h"#define HAVETYPE___u32
#define HAVETYPE___u16
#define GHIDRA




struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___1ADB066DD678F2136218A187EC87FF85;
struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___739778AE401042B4A1D81FDF963C2BF8;
struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___7997A79FD4A56ECEC67DDB1075675E5D;
struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___C1BF8984E6DA1F78690EAB93CC81E9DD;
struct external_auxent______06B88675A9EB456EB90E8C8C92C74374___6BE5658F3AC53BBF171B21370DF4F2C8;
struct external_auxent______06B88675A9EB456EB90E8C8C92C74374___AE9B05ABEC1048BE339BB828F6FDD6C6;
struct external_auxent______87BDFA010CEB01ACC354401785794A14___6A81AB9DD74A0937A06BA2C0FB9C8664;
struct bfd_link_hash_entry______C1BF8984E6DA1F78690EAB93CC81E9DD__bfd_link_hash_common_entry;
union external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27___06B88675A9EB456EB90E8C8C92C74374;
union external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27___87BDFA010CEB01ACC354401785794A14;
struct external_auxent___218D1EF8CDD5DC3457D7F4C589050F96___582C8EBC9F634712D800A8EC53B1E0EA;
struct external_syment___95F5B714D0994531E901AA8A8C444E03___7E2C7DBEAC0FAEB0F78A4DFF1059C9EC;
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___16DCDB45A2AC10EAA5748BD0B35BC485;
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___20472B6430190B13548BE45EDDAD6B8B;
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___4E37357BA75158182C6C9FE7D3AF1690;
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___B57F59D398145097F81AD3202A6602D5;
struct Tcl_Obj___8B7172FD90B7CDB67AF06E0C3918BAD0___5F78906DFCD19F4F0601C4695135A9CD;
struct _reent___86B6AAFCC3A560694C605557E707E6BE___571F2125BC9AA5087DD4C4D164151B9B;
struct _reent___86B6AAFCC3A560694C605557E707E6BE___E1F36E786F227034E18EC0BAF8100EE8;
struct _010F26E547E20D9A1DC4B355F5175C2E___8B42856514A58AA212FD520E5CADCFD0;
struct _010F26E547E20D9A1DC4B355F5175C2E___F281F6C9DB4DEA750606CBC346D4F197;
struct _3F9D9DCE4570D1C9BB401DE985640105___4AF16434377E8C7F9E7C08D192734F21;
struct _3F9D9DCE4570D1C9BB401DE985640105___92939BA4B101A8BF20FECD8B93BF4DD4;
struct _3F9D9DCE4570D1C9BB401DE985640105___F281F6C9DB4DEA750606CBC346D4F197;
union _3FCF69940D5137EFCDD98B7A8215A7C6___2CCDFC74E09ADC8AD418FD2D589F010C;
union _5C140DC956AB8D8D3A2E81F1CC511829___B322D948E3ED25D84ECF3A20AB2BF161;
union _XIMStatusDrawCallbackStruct___D9A2F521BD917AA4B9408853DE8DEFA7;
union bfd_link_order_reloc___B1652E1B2D42B7B6BC287CA32D4604B8;
union bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E;
union lineno_cache_entry___026CDB5FE14FF191358A838FC43EE3B7;
union symbol_cache_entry___B9E77FD0681C1335DBAA9A65240EEB16;
struct external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27;
union external_auxent___218D1EF8CDD5DC3457D7F4C589050F96;
struct external_auxent___592ACE703693045227FB640816C1C126;
struct external_auxent___EDC675951F483E94E6FD294E9D48C8CC;
union external_lineno___D7CB6E8C66A356212467B1896FDD390A;
union external_syment___95F5B714D0994531E901AA8A8C444E03;
union bfd_link_order___2BB010651C45E09C223C5AAB039696D0;
union Tcl_HashEntry___A1DAA63EE9F2E4530E7529E0A1E4E4E3;
struct _XDisplay___40E717ABED307E15FC65B9096F5C7074;
union _XIMText___8281806D2C2C5E9220BA18F83AF5F330;
union Tcl_Obj___8B7172FD90B7CDB67AF06E0C3918BAD0;
union _reent___86B6AAFCC3A560694C605557E707E6BE;
union _bfd___EA0286C9E3DE655F29EF612C11797A09;
struct wait___C15E99E37B145616F5C5887501A939DA;
struct wait___ED1506FEBB6D298A1E4E3673A65C27F8;
struct _00AF5B8D22378749F06B80D45FA27023;
union _010F26E547E20D9A1DC4B355F5175C2E;
struct _0537E486A32D586768D898FB6E409606;
struct _0B94EEFCBD76FB7E6E0B7C6C274F8F05;
struct _0F3BCE20E1217B8B60181F2FE2EFC047;
struct _10F395C20BEC4113025BB1D0BA3DF492;
struct _131D38613E106C9AC3A1755E823A1D2A;
struct _13C78DD7EDF1CF1C4AE9B0D54E891AA2;
struct _29A84F0A94EF9B7976BAF082CF524F09;
struct _2B6C772F9B0F9D5573534694AD1B578D;
struct _2C3C200F8615C3857493506364E8C173;
struct _2E0E2C12F04118C9E52BAE749EE378FF;
struct _2FFD57BA50D73951380BC0AC0294DF96;
struct _335EDB02744B103283B800FF919FC940;
struct _3ACF1F82BEC6DEE83FE33E625399BBD7;
struct _3AD4CBF69EE89480875180DC2A9357C1;
struct _3BCCBA65A7EB0D2F6C33DC1ED4428B78;
union _3F9D9DCE4570D1C9BB401DE985640105;
struct _3FCF69940D5137EFCDD98B7A8215A7C6;
struct _44C0AE5AD18E7CD0D8F56B2EE020CE64;
struct _470449F8043B0E95436C3AE3811CEA11;
struct _47AF4CF9A5C07F5C66C76738371ED04D;
struct _4811DE8B61D0522D3363266E4D46EA9A;
struct _4928972DC66A9F7C89D199795A4AF315;
struct _4D69B6347F056FE268056727CEA155AA;
struct _4D918DF5E629F4C28AE5A435B1E47B7A;
struct _4FFA9527088137D66D8D180D61C68358;
struct _53996C97E395EF20FC508697C3EEF92C;
struct _58058F4C4926147A1BF935BBE1E04307;
struct _5C140DC956AB8D8D3A2E81F1CC511829;
struct _636E06EF14FC653C9FA755BCE21D4A3F;
struct _64419251F3172C7227A52AC30EAD3C9D;
struct _648D5B97A5A1D2D2729A4C51B6643734;
struct _65881570D1BE40B63EE4A0C2B392A1BC;
struct _65CB4B56B993AF892F37749A62A14B51;
struct _67007EC0A0A5FA25533E9B447B17EF1A;
struct _691123D744001B8BE68B84780CEE447C;
struct _6BA9BAD34CD581FCA2A7610248080448;
struct _6EA1208F05D799B306741A1D21B7D8A7;
struct _705D0BEDE90FA70168249FE65D21D1D3;
struct _7FAD4DA9375019A5494A191BEF0405E8;
struct _841354712BEA89ED461350FE22A001AB;
struct _85ADD90E39F3CB0C7E30B8F1E31A0398;
struct _86667C1762D2D3E70596A778BAFE84E4;
struct _94ACE20E5FEED38F4BC574FBC8AC4DA0;
struct _96F7C024A0E76E12CD4B29EEA702F0F5;
struct _979FA3DE6ECCF956231BFC297C4278E6;
struct _9C224668B7E64BE6AE9499E6FD772938;
struct _A06AF73261543B69A785AD9B5C737D11;
struct _AC3C30478DB292C58361350945D68834;
struct _B00CD904CB46A0C43826F3F9731A78AD;
struct _B36C03EE0DB03800CDBEDA1CF8CFFD5F;
struct _B55126CE33CB6542D7325DF23CE7DCCD;
struct _B6E7D1C43482AAA4EB74B93FC1D2BC12;
struct _B8243ED19B76CA5D55F9F69ED1E7C09F;
struct _BA1C9873524F37DFA28FC6E8B2A0BC7B;
struct _BEA3E970906BDE5578391186783FC521;
struct _BFB970BD49ED9B406D7CBF54A76D57DD;
struct _C04761233C6B6D3917A9FB90584A60A5;
struct _C459D5BB7F5319395AB9822D9CBB3596;
struct _C4AEAB15D2203863A55B0BEA2C0AE902;
struct _C64C6FF65947C35F73E5DDA7D3ADCCD3;
struct _C8CD1AC7BB16F52EEB6B35007FE94FA3;
struct _CA1CD5B08005403884A7641019451813;
struct _CD460451436B92EA879ADEB542921FD3;
union _D8231012D0728EC3472C30FA3109CEFA;
struct _DAE3AA21F13D443C5590C7BCADAB13AB;
struct _DD1A60F664AD301361B26C5800787B5E;
struct _E1655291D14CE59495117F42FECB583D;
struct _E9E5673C887B806F32B41DE6D906B7FD;
struct _ECAD306E641EDB2496D7F2C26F74F3C2;
struct _EF6E92C885F7EBA601BD227CAE25DC00;
struct _F9A51504D7BB963C3403412F22DA7A8A;
struct _FD02BCD3D36054250A4B3393D3E26B85;
struct _XIMPreeditCaretCallbackStruct;
struct _XIMPreeditDrawCallbackStruct;
struct _XIMStatusDrawCallbackStruct;
struct png_sPLT_entry_struct;
struct _bfd_window_internal;
struct bfd_elf_version_deps;
struct bfd_elf_version_expr;
struct bfd_elf_version_tree;
struct bfd_link_needed_list;
struct bfd_link_order_reloc;
struct Tk_PhotoImageFormat;
struct bfd_link_hash_entry;
struct bfd_link_hash_table;
struct external_PE_filehdr;
struct png_color_16_struct;
struct png_row_info_struct;
struct png_unknown_chunk_t;
struct Tk_PhotoImageBlock;
struct bfd_link_callbacks;
struct lineno_cache_entry;
struct png_color_8_struct;
struct reloc_howto_struct;
struct symbol_cache_entry;
struct Tk_CanvasTextInfo;
struct pthread_mutexattr;
struct reloc_cache_entry;
struct Tix_ListIterator;
struct ecoff_debug_info;
struct ecoff_debug_swap;
struct external_filehdr;
struct png_color_struct;
struct Tcl_ChannelType;
struct Tk_CustomOption;
struct _Tix_SubCmdInfo;
struct bfd_comdat_info;
union external_auxent;
struct external_lineno;
struct external_scnhdr;
struct external_syment;
union internal_auxent;
struct internal_syment;
struct png_info_struct;
struct png_sPLT_struct;
struct png_text_struct;
struct png_time_struct;
struct Tcl_HashSearch;
struct Tk_FontMetrics;
struct _XImage__funcs;
struct bfd_hash_entry;
struct bfd_hash_table;
struct bfd_link_order;
struct external_reloc;
struct internal_state;
struct png_struct_def;
struct Tcl_CallFrame;
struct Tcl_HashEntry;
struct Tcl_HashTable;
struct Tcl_Namespace;
struct Tk_ConfigSpec;
struct _types_fd_set;
struct bfd_arch_info;
struct bfd_link_info;
struct Tix_LinkList;
struct Tix_ListInfo;
struct Tk_ImageType;
struct _Tix_CmdInfo;
struct __oldtermios;
struct _symbol_info;
struct pthread_attr;
struct relent_chain;
struct Tcl_CmdInfo;
struct Tcl_DString;
struct Tcl_ObjType;
struct Tk_ItemType;
struct _bfd_window;
struct pthread_key;
struct sockaddr_un;
struct Tcl_Interp;
struct Tk_FakeWin;
struct Tk_GeomMgr;
struct bfd_target;
struct ecoff_extr;
struct z_stream_s;
struct Tcl_Event;
struct Tcl_Value;
struct _XDisplay;
struct _XExtData;
struct exception;
struct itimerval;
struct sigaction;
struct Tcl_Time;
struct _XIMText;
struct mallinfo;
struct timezone;
struct Tcl_Obj;
struct Tk_Item;
struct _Bigint;
union _XEvent;
struct _XImage;
union __dmath;
struct __sFILE;
struct _atexit;
struct lastlog;
struct termios;
struct timeval;
struct utimbuf;
struct utsname;
struct winsize;
struct __sbuf;
struct _reent;
struct ar_hdr;
struct carsym;
struct dirent;
struct eflock;
struct mntent;
struct option;
struct passwd;
struct regexp;
struct rusage;
struct statfs;
struct _glue;
struct flock;
struct group;
struct iovec;
struct lconv;
struct timeb;
struct _bfd;
struct stat;
struct utmp;
union wait;
struct orl;
struct sec;
struct tms;
struct tm;

struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___739778AE401042B4A1D81FDF963C2BF8 {struct bfd_link_hash_entry *link;const char *warning;};
struct external_auxent______06B88675A9EB456EB90E8C8C92C74374___6BE5658F3AC53BBF171B21370DF4F2C8 {unsigned __int32 x_lnnoptr;unsigned __int32 x_endndx;};
struct external_auxent______06B88675A9EB456EB90E8C8C92C74374___AE9B05ABEC1048BE339BB828F6FDD6C6 {char x_dimen[4][2];};
struct external_auxent______87BDFA010CEB01ACC354401785794A14___6A81AB9DD74A0937A06BA2C0FB9C8664 {unsigned __int16 x_lnno;unsigned __int16 x_size;};
struct external_auxent___218D1EF8CDD5DC3457D7F4C589050F96___582C8EBC9F634712D800A8EC53B1E0EA {unsigned __int32 x_zeroes;unsigned __int32 x_offset;};
struct external_syment___95F5B714D0994531E901AA8A8C444E03___7E2C7DBEAC0FAEB0F78A4DFF1059C9EC {unsigned __int32 e_zeroes;unsigned __int32 e_offset;};
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___16DCDB45A2AC10EAA5748BD0B35BC485 {struct bfd_link_order______16DCDB45A2AC10EAA5748BD0B35BC485__bfd_link_order_reloc *p;};
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___B57F59D398145097F81AD3202A6602D5 {unsigned int value;};
struct Tcl_Obj___8B7172FD90B7CDB67AF06E0C3918BAD0___5F78906DFCD19F4F0601C4695135A9CD {void *ptr1;void *ptr2;};
struct _reent___86B6AAFCC3A560694C605557E707E6BE___E1F36E786F227034E18EC0BAF8100EE8 {unsigned __int8 *_nextf[30];unsigned int _nmalloc[30];};
struct _010F26E547E20D9A1DC4B355F5175C2E___8B42856514A58AA212FD520E5CADCFD0 {unsigned int sign;};
struct _010F26E547E20D9A1DC4B355F5175C2E___F281F6C9DB4DEA750606CBC346D4F197 {unsigned int sign;};
struct _3F9D9DCE4570D1C9BB401DE985640105___4AF16434377E8C7F9E7C08D192734F21 {unsigned __int32 lsw;unsigned __int32 msw;};
struct _3F9D9DCE4570D1C9BB401DE985640105___92939BA4B101A8BF20FECD8B93BF4DD4 {unsigned int fraction1;unsigned int sign;};
struct _3F9D9DCE4570D1C9BB401DE985640105___F281F6C9DB4DEA750606CBC346D4F197 {unsigned int function1;unsigned int sign;};
union _3FCF69940D5137EFCDD98B7A8215A7C6___2CCDFC74E09ADC8AD418FD2D589F010C {char __d_filler[16];};
union _5C140DC956AB8D8D3A2E81F1CC511829___B322D948E3ED25D84ECF3A20AB2BF161 {char b[20];__int16 s[10];__int32 l[5];};
union lineno_cache_entry___026CDB5FE14FF191358A838FC43EE3B7 {struct lineno_cache_entry___026CDB5FE14FF191358A838FC43EE3B7__symbol_cache_entry *sym;unsigned __int32 offset;};
struct external_auxent___592ACE703693045227FB640816C1C126 {unsigned __int32 x_tvfill;unsigned __int16 x_tvlen;char x_tvran[2][2];};
struct external_auxent___EDC675951F483E94E6FD294E9D48C8CC {unsigned __int32 x_scnlen;unsigned __int16 x_nreloc;unsigned __int16 x_nlinno;unsigned __int32 x_checksum;unsigned __int16 x_associated;char x_comdat[1];};
union external_lineno___D7CB6E8C66A356212467B1896FDD390A {unsigned __int32 l_symndx;unsigned __int32 l_paddr;};
union Tcl_HashEntry___A1DAA63EE9F2E4530E7529E0A1E4E4E3 {char *oneWordValue;int words[1];char string[4];};
union _bfd___EA0286C9E3DE655F29EF612C11797A09 {struct _bfd___EA0286C9E3DE655F29EF612C11797A09__aout_data_struct *aout_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__artdata *aout_ar_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09___oasys_data *oasys_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09___oasys_ar_data *oasys_ar_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__coff_tdata *coff_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__pe_tdata *pe_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__xcoff_tdata *xcoff_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__ecoff_tdata *ecoff_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__ieee_data_struct *ieee_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__ieee_ar_data_struct *ieee_ar_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__srec_data_struct *srec_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__ihex_data_struct *ihex_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__tekhex_data_struct *tekhex_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__elf_obj_tdata *elf_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__nlm_obj_tdata *nlm_obj_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__bout_data_struct *bout_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__sun_core_struct *sun_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__sco5_core_struct *sco5_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__trad_core_struct *trad_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__som_data_struct *som_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__hpux_core_struct *hpux_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__hppabsd_core_struct *hppabsd_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__sgi_core_struct *sgi_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__lynx_core_struct *lynx_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__osf_core_struct *osf_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__cisco_core_struct *cisco_core_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__versados_data_struct *versados_data;struct _bfd___EA0286C9E3DE655F29EF612C11797A09__netbsd_core_struct *netbsd_core_data;void *any;};
struct wait___C15E99E37B145616F5C5887501A939DA {unsigned int;};
struct wait___ED1506FEBB6D298A1E4E3673A65C27F8 {unsigned int;};
struct _00AF5B8D22378749F06B80D45FA27023 {unsigned __int16 magic;unsigned __int16 vstamp;unsigned __int32 tsize;unsigned __int32 dsize;unsigned __int32 bsize;unsigned __int32 entry;unsigned __int32 text_start;unsigned __int32 data_start;};
struct _0537E486A32D586768D898FB6E409606 {unsigned __int16 magic;unsigned __int16 vstamp;unsigned __int32 tsize;unsigned __int32 dsize;unsigned __int32 bsize;unsigned __int32 entry;unsigned __int32 text_start;unsigned __int32 data_start;unsigned __int32 ImageBase;unsigned __int32 SectionAlignment;unsigned __int32 FileAlignment;unsigned __int16 MajorOperatingSystemVersion;unsigned __int16 MinorOperatingSystemVersion;unsigned __int16 MajorImageVersion;unsigned __int16 MinorImageVersion;unsigned __int16 MajorSubsystemVersion;unsigned __int16 MinorSubsystemVersion;char Reserved1[4];unsigned __int32 SizeOfImage;unsigned __int32 SizeOfHeaders;unsigned __int32 CheckSum;unsigned __int16 Subsystem;unsigned __int16 DllCharacteristics;unsigned __int32 SizeOfStackReserve;unsigned __int32 SizeOfStackCommit;unsigned __int32 SizeOfHeapReserve;unsigned __int32 SizeOfHeapCommit;unsigned __int32 LoaderFlags;unsigned __int32 NumberOfRvaAndSizes;char DataDirectory[16][2][4];};
struct _131D38613E106C9AC3A1755E823A1D2A {int gl_pathc;int gl_matchc;int gl_offs;int gl_flags;char **gl_pathv;int (*gl_errfunc)(const char *, int);void (*gl_closedir)(void *);struct dirent *(*gl_readdir)(void *);void *(*gl_opendir)(const char *);int (*gl_lstat)(const char *, struct stat *);int (*gl_stat)(const char *, struct stat *);};
struct _13C78DD7EDF1CF1C4AE9B0D54E891AA2 {__int16 x;__int16 y;};
struct _335EDB02744B103283B800FF919FC940 {__int16 x1;__int16 y1;__int16 x2;__int16 y2;};
struct _3ACF1F82BEC6DEE83FE33E625399BBD7 {__int16 x;__int16 y;unsigned __int16 width;unsigned __int16 height;__int16 angle1;__int16 angle2;};
struct _4FFA9527088137D66D8D180D61C68358 {int family;int length;char *address;};
enum _5252AF58AF7525DA13AA82FD1F51B9F5 {TK_ANCHOR_N = 0x0,TK_ANCHOR_NE = 0x1,TK_ANCHOR_E = 0x2,TK_ANCHOR_SE = 0x3,TK_ANCHOR_S = 0x4,TK_ANCHOR_SW = 0x5,TK_ANCHOR_W = 0x6,TK_ANCHOR_NW = 0x7,TK_ANCHOR_CENTER = 0x8,};
struct _53996C97E395EF20FC508697C3EEF92C {__int16 lbearing;__int16 rbearing;__int16 width;__int16 ascent;__int16 descent;unsigned __int16 attributes;};
struct _65881570D1BE40B63EE4A0C2B392A1BC {char *key;int type;char *src;char *dst;char *help;};
struct _691123D744001B8BE68B84780CEE447C {unsigned __int8 byte1;unsigned __int8 byte2;};
enum _75C8E7CA27BE1E0F4E6BF64D1993A788 {TCL_INT = 0x0,TCL_DOUBLE = 0x1,TCL_EITHER = 0x2,};
enum _79D62B36508CDCAAC38B030F81566F10 {MOUNT_SYMLINK = 0x1,MOUNT_BINARY = 0x2,MOUNT_SYSTEM = 0x8,MOUNT_EXEC = 0x10,MOUNT_AUTO = 0x20,MOUNT_CYGWIN_EXEC = 0x40,};
enum _7DE6A019FB8D510204474F438D93B845 {TCL_QUEUE_TAIL = 0x0,TCL_QUEUE_HEAD = 0x1,TCL_QUEUE_MARK = 0x2,};
struct _86667C1762D2D3E70596A778BAFE84E4 {unsigned __int32 pixel;unsigned __int16 red;unsigned __int16 green;unsigned __int16 blue;char flags;char pad;};
struct _979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
struct _A06AF73261543B69A785AD9B5C737D11 {int depth;int bits_per_pixel;int scanline_pad;};
enum _B539734676A04848B68060D6D483E0A0 {XIMTextType = 0x0,XIMBitmapType = 0x1,};
enum _B64C39E2ADABB22C50C1D912F1D253CC {XIMIsInvisible = 0x0,XIMIsPrimary = 0x1,XIMIsSecondary = 0x2,};
struct _B8243ED19B76CA5D55F9F69ED1E7C09F {__int32 quot;__int32 rem;};
struct _BEA3E970906BDE5578391186783FC521 {int extension;int major_opcode;int first_event;int first_error;};
struct _BFB970BD49ED9B406D7CBF54A76D57DD {int key_click_percent;int bell_percent;int bell_pitch;int bell_duration;int led;int led_mode;int key;int auto_repeat_mode;};
struct _CA1CD5B08005403884A7641019451813 {__int16 x;__int16 y;unsigned __int16 width;unsigned __int16 height;};
enum _D75A9F50BEFC37ED2CAAB9E825B0AC13 {TK_JUSTIFY_LEFT = 0x0,TK_JUSTIFY_RIGHT = 0x1,TK_JUSTIFY_CENTER = 0x2,};
enum _DB4B60BC3E5D47BB5823C48350265A79 {XIMForwardChar = 0x0,XIMBackwardChar = 0x1,XIMForwardWord = 0x2,XIMBackwardWord = 0x3,XIMCaretUp = 0x4,XIMCaretDown = 0x5,XIMNextLine = 0x6,XIMPreviousLine = 0x7,XIMLineStart = 0x8,XIMLineEnd = 0x9,XIMAbsolutePosition = 0xA,XIMDontChange = 0xB,};
struct _E9E5673C887B806F32B41DE6D906B7FD {int key_click_percent;int bell_percent;unsigned int bell_pitch;unsigned int bell_duration;unsigned __int32 led_mask;int global_auto_repeat;char auto_repeats[32];};
enum _F413FB130807CE2045080C3C00838D77 {TK_DEFER_EVENT = 0x0,TK_PROCESS_EVENT = 0x1,TK_DISCARD_EVENT = 0x2,};
enum MACRO_XlibSpecificationRelease {XlibSpecificationRelease = 5,};
typedef struct _XIMPreeditCaretCallbackStruct XIMPreeditCaretCallbackStruct;
enum MACRO_NeedFunctionPrototypes {NeedFunctionPrototypes = 1,};
typedef struct _XIMPreeditDrawCallbackStruct XIMPreeditDrawCallbackStruct;
enum MACRO_DisableScreenInterval {DisableScreenInterval = 0,};
enum MACRO_NeedVarargsPrototypes {NeedVarargsPrototypes = 0,NeedNestedPrototypes = 1,};
typedef struct _XIMStatusDrawCallbackStruct XIMStatusDrawCallbackStruct;
enum MACRO_PNG_FILTER_HEURISTIC {PNG_FILTER_HEURISTIC_DEFAULT = 0,PNG_FILTER_HEURISTIC_UNWEIGHTED = 1,PNG_FILTER_HEURISTIC_WEIGHTED = 2,PNG_FILTER_HEURISTIC_LAST = 3,};
enum MACRO_PNG_TRANSFORM_INVERT {PNG_TRANSFORM_INVERT_ALPHA = 0x200,PNG_TRANSFORM_STRIP_FILLER = 0x800,};
enum MACRO_VisibilityUnobscured {VisibilityUnobscured = 0,VisibilityPartiallyObscured = 1,VisibilityFullyObscured = 2,};
enum MACRO_ColormapUninstalled {ColormapUninstalled = 0,ColormapInstalled = 1,};
enum MACRO_PNG_COLOR_TYPE_GRAY {PNG_COLOR_TYPE_GRAY_ALPHA = 4,PNG_COMPRESSION_TYPE_BASE = 0,PNG_COMPRESSION_TYPE_DEFAULT = 0,PNG_FILTER_TYPE_BASE = 0,PNG_FILTER_TYPE_DEFAULT = 0,PNG_INTERLACE_NONE = 0,};
enum MACRO_DisableScreenSaver {DisableScreenSaver = 0,};
enum MACRO_DontAllowExposures {DontAllowExposures = 0,AllowExposures = 1,DefaultExposures = 2,};
enum MACRO_DontPreferBlanking {DontPreferBlanking = 0,PreferBlanking = 1,DefaultBlanking = 2,};
enum MACRO_NeedWidePrototypes {NeedWidePrototypes = 1,};
enum MACRO_PNG_COLOR_TYPE_RGB {PNG_COLOR_TYPE_RGB = 2,PNG_COLOR_TYPE_RGB_ALPHA = 6,};
enum MACRO__G_HAVE_SYS_SOCKET {_G_HAVE_SYS_SOCKET = 1,};
enum MACRO___IEEE_FLT_FRACLEN {__IEEE_FLT_FRACLEN = 23,};
typedef struct _B6E7D1C43482AAA4EB74B93FC1D2BC12 XActivateDeactivateEvent;
typedef union _3F9D9DCE4570D1C9BB401DE985640105 __ieee_double_shape_type;
enum MACRO_AutoRepeatModeOff {AutoRepeatModeOff = 0,AutoRepeatModeOn = 1,AutoRepeatModeDefault = 2,};
enum MACRO_KBKeyClickPercent {KBKeyClickPercent = 1,KBBellPercent = 2,KBBellPitch = 4,KBBellDuration = 8,KBLed = 16,KBLedMode = 32,KBKey = 64,KBAutoRepeatMode = 128,};
enum MACRO__G_HAVE_SYS_CDEFS {_G_HAVE_SYS_CDEFS = 1,};
enum MACRO__G_HAVE_SYS_TIMES {_G_HAVE_SYS_TIMES = 1,};
enum MACRO_bfd_mach_mips3000 {bfd_mach_mips3000 = 3000,bfd_mach_mips3900 = 3900,bfd_mach_mips4000 = 4000,bfd_mach_mips4010 = 4010,bfd_mach_mips4100 = 4100,bfd_mach_mips4111 = 4111,bfd_mach_mips4300 = 4300,bfd_mach_mips4400 = 4400,bfd_mach_mips4600 = 4600,bfd_mach_mips4650 = 4650,bfd_mach_mips5000 = 5000,bfd_mach_mips6000 = 6000,bfd_mach_mips8000 = 8000,bfd_mach_mips10000 = 10000,};
typedef void Tcl_FreeInternalRepProc(struct Tcl_Obj *objPtr);
typedef int Tk_ImageStringMatchProc(Tcl_Obj *dataObj, char *formatString, int *widthPtr, int *heightPtr);
typedef int Tk_ImageStringWriteProc(Tcl_Interp *interp, Tcl_DString *dataPtr, char *formatString, Tk_PhotoImageBlock *blockPtr);
typedef union _010F26E547E20D9A1DC4B355F5175C2E __ieee_float_shape_type;
enum MACRO_PropertyNewValue {PropertyNewValue = 0,PropertyDelete = 1,};
enum MACRO_ScreenSaverReset {ScreenSaverReset = 0,ScreenSaverActive = 1,};
enum MACRO__G_HAVE_SYS_WAIT {_G_HAVE_SYS_WAIT = 1,};
typedef void Tcl_DupInternalRepProc(struct Tcl_Obj *srcPtr, struct Tcl_Obj *dupPtr);
typedef struct _0F3BCE20E1217B8B60181F2FE2EFC047 XCirculateRequestEvent;
typedef struct _705D0BEDE90FA70168249FE65D21D1D3 XConfigureRequestEvent;
typedef struct _4D918DF5E629F4C28AE5A435B1E47B7A XSelectionRequestEvent;
typedef void (*bfd_error_handler_type)(const char *, ...);
enum MACRO_AnyPropertyType {AnyPropertyType = 0,};
enum MACRO_CoordModeOrigin {CoordModeOrigin = 0,CoordModePrevious = 1,};
enum MACRO_FontLeftToRight {FontLeftToRight = 0,FontRightToLeft = 1,FontChange = 255,};
enum MACRO_LOG_NFACILITIES {LOG_NFACILITIES = 24,LOG_FACMASK = 1016,};
enum MACRO_MappingModifier {MappingModifier = 0,MappingKeyboard = 1,MappingPointer = 2,};
enum MACRO_PropModeReplace {PropModeReplace = 0,PropModePrepend = 1,PropModeAppend = 2,};
enum MACRO_TK_CONFIG_COLOR {TK_CONFIG_COLOR_ONLY = 1,TK_CONFIG_MONO_ONLY = 2,TK_CONFIG_NULL_OK = 4,TK_CONFIG_DONT_SET_DEFAULT = 8,TK_CONFIG_OPTION_SPECIFIED = 16,TK_CONFIG_USER_BIT = 256,};
enum MACRO_XBufferOverflow {XBufferOverflow = -1,};
enum MACRO_bfd_mach_mips16 {bfd_mach_mips16 = 16,bfd_mach_i386_i386 = 0,};
enum MACRO_bfd_mach_v850ea {bfd_mach_v850ea = 65,bfd_mach_arc_base = 0,bfd_mach_m32r = 0,};
typedef int Tk_ImageFileWriteProc(Tcl_Interp *interp, char *fileName, char *formatString, Tk_PhotoImageBlock *blockPtr);
enum MACRO_ClipByChildren {ClipByChildren = 0,IncludeInferiors = 1,};
enum MACRO_CopyFromParent {CopyFromParent = 0,};
enum MACRO_FamilyInternet {FamilyInternet = 0,FamilyDECnet = 1,FamilyChaos = 2,};
enum MACRO_MAXHOSTNAMELEN {MAXHOSTNAMELEN = 64,};
enum MACRO_MappingSuccess {MappingSuccess = 0,MappingBusy = 1,MappingFailed = 2,};
enum MACRO_NotifyAncestor {NotifyAncestor = 0,NotifyVirtual = 1,NotifyInferior = 2,NotifyNonlinear = 3,NotifyNonlinearVirtual = 4,NotifyPointer = 5,NotifyPointerRoot = 6,NotifyDetailNone = 7,};
enum MACRO_PNG_BACKGROUND {PNG_BACKGROUND_GAMMA_UNKNOWN = 0,PNG_BACKGROUND_GAMMA_SCREEN = 1,PNG_BACKGROUND_GAMMA_FILE = 2,PNG_BACKGROUND_GAMMA_UNIQUE = 3,};
enum MACRO_PNG_COLOR_TYPE {PNG_COLOR_TYPE_GRAY = 0,PNG_COLOR_TYPE_PALETTE = 3,};
enum MACRO_PNG_RESOLUTION {PNG_RESOLUTION_UNKNOWN = 0,PNG_RESOLUTION_METER = 1,PNG_RESOLUTION_LAST = 2,};
enum MACRO_TK_CONFIG_ARGV {TK_CONFIG_ARGV_ONLY = 1,};
enum MACRO_XIMPreeditArea {XIMPreeditArea = 0x1,XIMPreeditCallbacks = 0x2,XIMPreeditPosition = 0x4,XIMPreeditNothing = 0x8,XIMPreeditNone = 0x10,XIMStatusArea = 0x100,XIMStatusCallbacks = 0x200,XIMStatusNothing = 0x400,XIMStatusNone = 0x800,};
enum MACRO_XMaxTransChars {XMaxTransChars = 4,};
enum MACRO__G_HAVE_ATEXIT {_G_HAVE_ATEXIT = 1,};
enum MACRO__G_HAVE_DIRENT {_G_HAVE_DIRENT = 1,_G_HAVE_CURSES = 0,_G_MATH_H_INLINES = 0,};
enum MACRO__G_HAVE_UNISTD {_G_HAVE_UNISTD = 1,};
enum MACRO___IEEE_DBL_NAN {__IEEE_DBL_NAN_EXP = 0x7FF,};
enum MACRO___IEEE_FLT_NAN {__IEEE_FLT_NAN_EXP = 0xFF,};
enum MACRO_bfd_mach_alpha {bfd_mach_alpha_ev4 = 0x10,bfd_mach_alpha_ev5 = 0x20,bfd_mach_alpha_ev6 = 0x30,};
enum MACRO_bfd_mach_h8300 {bfd_mach_h8300 = 1,bfd_mach_h8300h = 2,bfd_mach_h8300s = 3,};
enum MACRO_bfd_mach_m32rx {bfd_mach_m32rx = 120,bfd_mach_mn10300 = 300,bfd_mach_am33 = 330,bfd_mach_fr30 = 1179792176,};
enum MACRO_bfd_mach_sparc {bfd_mach_sparc = 1,bfd_mach_sparc_sparclet = 2,bfd_mach_sparc_sparclite = 3,bfd_mach_sparc_v8plus = 4,bfd_mach_sparc_v8plusa = 5,bfd_mach_sparc_sparclite_le = 6,bfd_mach_sparc_v9 = 7,bfd_mach_sparc_v9a = 8,};
enum MACRO_bfd_mach_z8001 {bfd_mach_z8001 = 1,bfd_mach_z8002 = 2,};
typedef void Tcl_UpdateStringProc(struct Tcl_Obj *objPtr);
typedef struct _B55126CE33CB6542D7325DF23CE7DCCD XGraphicsExposeEvent;
typedef struct _96F7C024A0E76E12CD4B29EEA702F0F5 XSelectionClearEvent;
typedef struct _2FFD57BA50D73951380BC0AC0294DF96 XSetWindowAttributes;
struct _bfd_window_internal;
struct bfd_elf_version_deps {struct bfd_elf_version_deps *next;struct bfd_elf_version_tree *version_needed;};
struct bfd_elf_version_expr {struct bfd_elf_version_expr *next;const char *pattern;int (*match)(struct bfd_elf_version_expr *, const char *);};
struct bfd_elf_version_tree {struct bfd_elf_version_tree *next;const char *name;unsigned int vernum;struct bfd_elf_version_expr *globals;struct bfd_elf_version_expr *locals;struct bfd_elf_version_deps *deps;unsigned int name_indx;int used;};
enum MACRO_DisableAccess {DisableAccess = 0,};
enum MACRO_ForgetGravity {ForgetGravity = 0,NorthWestGravity = 1,NorthGravity = 2,NorthEastGravity = 3,WestGravity = 4,CenterGravity = 5,EastGravity = 6,SouthWestGravity = 7,SouthGravity = 8,SouthEastGravity = 9,StaticGravity = 10,};
enum MACRO_LYNXCOFFMAGIC {LYNXCOFFMAGIC = 0x10D,};
enum MACRO_PNG_INTERLACE {PNG_INTERLACE_ADAM7 = 1,PNG_INTERLACE_LAST = 2,};
enum MACRO_PNG_TRANSFORM {PNG_TRANSFORM_IDENTITY = 0x0,PNG_TRANSFORM_STRIP_16 = 0x1,PNG_TRANSFORM_STRIP_ALPHA = 0x2,PNG_TRANSFORM_PACKING = 0x4,PNG_TRANSFORM_PACKSWAP = 0x8,PNG_TRANSFORM_EXPAND = 0x10,PNG_TRANSFORM_INVERT_MONO = 0x20,PNG_TRANSFORM_SHIFT = 0x40,PNG_TRANSFORM_BGR = 0x80,PNG_TRANSFORM_SWAP_ALPHA = 0x100,PNG_TRANSFORM_SWAP_ENDIAN = 0x200,};
enum MACRO_PointerWindow {PointerWindow = 0,InputFocus = 1,};
enum MACRO_QueuedAlready {QueuedAlready = 0,QueuedAfterReading = 1,QueuedAfterFlush = 2,};
enum MACRO_SetModeInsert {SetModeInsert = 0,SetModeDelete = 1,};
enum MACRO_ShiftMapIndex {ShiftMapIndex = 0,LockMapIndex = 1,ControlMapIndex = 2,Mod1MapIndex = 3,Mod2MapIndex = 4,Mod3MapIndex = 5,Mod4MapIndex = 6,Mod5MapIndex = 7,Button1Mask = 256,Button2Mask = 512,Button3Mask = 1024,Button4Mask = 2048,Button5Mask = 4096,AnyModifier = 32768,};
enum MACRO_TCL_DONT_WAIT {TCL_DONT_WAIT = 2,TCL_WINDOW_EVENTS = 4,TCL_FILE_EVENTS = 8,TCL_TIMER_EVENTS = 16,TCL_IDLE_EVENTS = 32,TCL_ALL_EVENTS = -3,};
enum MACRO__POSIX_STREAM {_POSIX_STREAM_MAX = 8,_POSIX_TZNAME_MAX = 3,};
enum MACRO_bfd_mach_avr1 {bfd_mach_avr1 = 1,bfd_mach_avr2 = 2,bfd_mach_avr3 = 3,bfd_mach_avr4 = 4,};
enum MACRO_bfd_mach_d10v {bfd_mach_d10v = 0,bfd_mach_d10v_ts2 = 2,bfd_mach_d10v_ts3 = 3,};
enum MACRO_bfd_mach_i386 {bfd_mach_i386_i8086 = 1,bfd_mach_i386_i386_intel_syntax = 2,};
enum MACRO_bfd_mach_v850 {bfd_mach_v850 = 0,bfd_mach_v850e = 69,};
typedef int Tcl_PackageInitProc(Tcl_Interp *interp);
typedef struct _5C140DC956AB8D8D3A2E81F1CC511829 XClientMessageEvent;
typedef struct _4811DE8B61D0522D3363266E4D46EA9A XDestroyWindowEvent;
typedef struct _A06AF73261543B69A785AD9B5C737D11 XPixmapFormatValues;
typedef struct _ECAD306E641EDB2496D7F2C26F74F3C2 XResizeRequestEvent;
enum _bfd__bfd_direction {no_direction = 0x0,read_direction = 0x1,write_direction = 0x2,both_direction = 0x3,};
enum bfd_link_order_type {bfd_undefined_link_order = 0x0,bfd_indirect_link_order = 0x1,bfd_fill_link_order = 0x2,bfd_data_link_order = 0x3,bfd_section_reloc_link_order = 0x4,bfd_symbol_reloc_link_order = 0x5,};
enum bfd_reloc_code_real {_dummy_first_bfd_reloc_code_real = 0x0,BFD_RELOC_64 = 0x1,BFD_RELOC_32 = 0x2,BFD_RELOC_26 = 0x3,BFD_RELOC_24 = 0x4,BFD_RELOC_16 = 0x5,BFD_RELOC_14 = 0x6,BFD_RELOC_8 = 0x7,BFD_RELOC_64_PCREL = 0x8,BFD_RELOC_32_PCREL = 0x9,BFD_RELOC_24_PCREL = 0xA,BFD_RELOC_16_PCREL = 0xB,BFD_RELOC_12_PCREL = 0xC,BFD_RELOC_8_PCREL = 0xD,BFD_RELOC_32_GOT_PCREL = 0xE,BFD_RELOC_16_GOT_PCREL = 0xF,BFD_RELOC_8_GOT_PCREL = 0x10,BFD_RELOC_32_GOTOFF = 0x11,BFD_RELOC_16_GOTOFF = 0x12,BFD_RELOC_LO16_GOTOFF = 0x13,BFD_RELOC_HI16_GOTOFF = 0x14,BFD_RELOC_HI16_S_GOTOFF = 0x15,BFD_RELOC_8_GOTOFF = 0x16,BFD_RELOC_32_PLT_PCREL = 0x17,BFD_RELOC_24_PLT_PCREL = 0x18,BFD_RELOC_16_PLT_PCREL = 0x19,BFD_RELOC_8_PLT_PCREL = 0x1A,BFD_RELOC_32_PLTOFF = 0x1B,BFD_RELOC_16_PLTOFF = 0x1C,BFD_RELOC_LO16_PLTOFF = 0x1D,BFD_RELOC_HI16_PLTOFF = 0x1E,BFD_RELOC_HI16_S_PLTOFF = 0x1F,BFD_RELOC_8_PLTOFF = 0x20,BFD_RELOC_68K_GLOB_DAT = 0x21,BFD_RELOC_68K_JMP_SLOT = 0x22,BFD_RELOC_68K_RELATIVE = 0x23,BFD_RELOC_32_BASEREL = 0x24,BFD_RELOC_16_BASEREL = 0x25,BFD_RELOC_LO16_BASEREL = 0x26,BFD_RELOC_HI16_BASEREL = 0x27,BFD_RELOC_HI16_S_BASEREL = 0x28,BFD_RELOC_8_BASEREL = 0x29,BFD_RELOC_RVA = 0x2A,BFD_RELOC_8_FFnn = 0x2B,BFD_RELOC_32_PCREL_S2 = 0x2C,BFD_RELOC_16_PCREL_S2 = 0x2D,BFD_RELOC_23_PCREL_S2 = 0x2E,BFD_RELOC_HI22 = 0x2F,BFD_RELOC_LO10 = 0x30,BFD_RELOC_GPREL16 = 0x31,BFD_RELOC_GPREL32 = 0x32,BFD_RELOC_I960_CALLJ = 0x33,BFD_RELOC_NONE = 0x34,BFD_RELOC_SPARC_WDISP22 = 0x35,BFD_RELOC_SPARC22 = 0x36,BFD_RELOC_SPARC13 = 0x37,BFD_RELOC_SPARC_GOT10 = 0x38,BFD_RELOC_SPARC_GOT13 = 0x39,BFD_RELOC_SPARC_GOT22 = 0x3A,BFD_RELOC_SPARC_PC10 = 0x3B,BFD_RELOC_SPARC_PC22 = 0x3C,BFD_RELOC_SPARC_WPLT30 = 0x3D,BFD_RELOC_SPARC_COPY = 0x3E,BFD_RELOC_SPARC_GLOB_DAT = 0x3F,BFD_RELOC_SPARC_JMP_SLOT = 0x40,BFD_RELOC_SPARC_RELATIVE = 0x41,BFD_RELOC_SPARC_UA32 = 0x42,BFD_RELOC_SPARC_BASE13 = 0x43,BFD_RELOC_SPARC_BASE22 = 0x44,BFD_RELOC_SPARC_10 = 0x45,BFD_RELOC_SPARC_11 = 0x46,BFD_RELOC_SPARC_OLO10 = 0x47,BFD_RELOC_SPARC_HH22 = 0x48,BFD_RELOC_SPARC_HM10 = 0x49,BFD_RELOC_SPARC_LM22 = 0x4A,BFD_RELOC_SPARC_PC_HH22 = 0x4B,BFD_RELOC_SPARC_PC_HM10 = 0x4C,BFD_RELOC_SPARC_PC_LM22 = 0x4D,BFD_RELOC_SPARC_WDISP16 = 0x4E,BFD_RELOC_SPARC_WDISP19 = 0x4F,BFD_RELOC_SPARC_7 = 0x50,BFD_RELOC_SPARC_6 = 0x51,BFD_RELOC_SPARC_5 = 0x52,BFD_RELOC_SPARC_PLT64 = 0x53,BFD_RELOC_SPARC_HIX22 = 0x54,BFD_RELOC_SPARC_LOX10 = 0x55,BFD_RELOC_SPARC_H44 = 0x56,BFD_RELOC_SPARC_M44 = 0x57,BFD_RELOC_SPARC_L44 = 0x58,BFD_RELOC_SPARC_REGISTER = 0x59,BFD_RELOC_SPARC_REV32 = 0x5A,BFD_RELOC_ALPHA_GPDISP_HI16 = 0x5B,BFD_RELOC_ALPHA_GPDISP_LO16 = 0x5C,BFD_RELOC_ALPHA_GPDISP = 0x5D,BFD_RELOC_ALPHA_LITERAL = 0x5E,BFD_RELOC_ALPHA_ELF_LITERAL = 0x5F,BFD_RELOC_ALPHA_LITUSE = 0x60,BFD_RELOC_ALPHA_USER_LITERAL = 0x61,BFD_RELOC_ALPHA_USER_LITUSE_BASE = 0x62,BFD_RELOC_ALPHA_USER_LITUSE_BYTOFF = 0x63,BFD_RELOC_ALPHA_USER_LITUSE_JSR = 0x64,BFD_RELOC_ALPHA_USER_GPDISP = 0x65,BFD_RELOC_ALPHA_USER_GPRELHIGH = 0x66,BFD_RELOC_ALPHA_USER_GPRELLOW = 0x67,BFD_RELOC_ALPHA_HINT = 0x68,BFD_RELOC_ALPHA_LINKAGE = 0x69,BFD_RELOC_ALPHA_CODEADDR = 0x6A,BFD_RELOC_MIPS_JMP = 0x6B,BFD_RELOC_MIPS16_JMP = 0x6C,BFD_RELOC_MIPS16_GPREL = 0x6D,BFD_RELOC_HI16 = 0x6E,BFD_RELOC_HI16_S = 0x6F,BFD_RELOC_LO16 = 0x70,BFD_RELOC_PCREL_HI16_S = 0x71,BFD_RELOC_PCREL_LO16 = 0x72,BFD_RELOC_MIPS_LITERAL = 0x73,BFD_RELOC_MIPS_GOT16 = 0x74,BFD_RELOC_MIPS_CALL16 = 0x75,BFD_RELOC_MIPS_GOT_HI16 = 0x76,BFD_RELOC_MIPS_GOT_LO16 = 0x77,BFD_RELOC_MIPS_CALL_HI16 = 0x78,BFD_RELOC_MIPS_CALL_LO16 = 0x79,BFD_RELOC_MIPS_SUB = 0x7A,BFD_RELOC_MIPS_GOT_PAGE = 0x7B,BFD_RELOC_MIPS_GOT_OFST = 0x7C,BFD_RELOC_MIPS_GOT_DISP = 0x7D,BFD_RELOC_386_GOT32 = 0x7E,BFD_RELOC_386_PLT32 = 0x7F,BFD_RELOC_386_COPY = 0x80,BFD_RELOC_386_GLOB_DAT = 0x81,BFD_RELOC_386_JUMP_SLOT = 0x82,BFD_RELOC_386_RELATIVE = 0x83,BFD_RELOC_386_GOTOFF = 0x84,BFD_RELOC_386_GOTPC = 0x85,BFD_RELOC_NS32K_IMM_8 = 0x86,BFD_RELOC_NS32K_IMM_16 = 0x87,BFD_RELOC_NS32K_IMM_32 = 0x88,BFD_RELOC_NS32K_IMM_8_PCREL = 0x89,BFD_RELOC_NS32K_IMM_16_PCREL = 0x8A,BFD_RELOC_NS32K_IMM_32_PCREL = 0x8B,BFD_RELOC_NS32K_DISP_8 = 0x8C,BFD_RELOC_NS32K_DISP_16 = 0x8D,BFD_RELOC_NS32K_DISP_32 = 0x8E,BFD_RELOC_NS32K_DISP_8_PCREL = 0x8F,BFD_RELOC_NS32K_DISP_16_PCREL = 0x90,BFD_RELOC_NS32K_DISP_32_PCREL = 0x91,BFD_RELOC_PJ_CODE_HI16 = 0x92,BFD_RELOC_PJ_CODE_LO16 = 0x93,BFD_RELOC_PJ_CODE_DIR16 = 0x94,BFD_RELOC_PJ_CODE_DIR32 = 0x95,BFD_RELOC_PJ_CODE_REL16 = 0x96,BFD_RELOC_PJ_CODE_REL32 = 0x97,BFD_RELOC_PPC_B26 = 0x98,BFD_RELOC_PPC_BA26 = 0x99,BFD_RELOC_PPC_TOC16 = 0x9A,BFD_RELOC_PPC_B16 = 0x9B,BFD_RELOC_PPC_B16_BRTAKEN = 0x9C,BFD_RELOC_PPC_B16_BRNTAKEN = 0x9D,BFD_RELOC_PPC_BA16 = 0x9E,BFD_RELOC_PPC_BA16_BRTAKEN = 0x9F,BFD_RELOC_PPC_BA16_BRNTAKEN = 0xA0,BFD_RELOC_PPC_COPY = 0xA1,BFD_RELOC_PPC_GLOB_DAT = 0xA2,BFD_RELOC_PPC_JMP_SLOT = 0xA3,BFD_RELOC_PPC_RELATIVE = 0xA4,BFD_RELOC_PPC_LOCAL24PC = 0xA5,BFD_RELOC_PPC_EMB_NADDR32 = 0xA6,BFD_RELOC_PPC_EMB_NADDR16 = 0xA7,BFD_RELOC_PPC_EMB_NADDR16_LO = 0xA8,BFD_RELOC_PPC_EMB_NADDR16_HI = 0xA9,BFD_RELOC_PPC_EMB_NADDR16_HA = 0xAA,BFD_RELOC_PPC_EMB_SDAI16 = 0xAB,BFD_RELOC_PPC_EMB_SDA2I16 = 0xAC,BFD_RELOC_PPC_EMB_SDA2REL = 0xAD,BFD_RELOC_PPC_EMB_SDA21 = 0xAE,BFD_RELOC_PPC_EMB_MRKREF = 0xAF,BFD_RELOC_PPC_EMB_RELSEC16 = 0xB0,BFD_RELOC_PPC_EMB_RELST_LO = 0xB1,BFD_RELOC_PPC_EMB_RELST_HI = 0xB2,BFD_RELOC_PPC_EMB_RELST_HA = 0xB3,BFD_RELOC_PPC_EMB_BIT_FLD = 0xB4,BFD_RELOC_PPC_EMB_RELSDA = 0xB5,BFD_RELOC_I370_D12 = 0xB6,BFD_RELOC_CTOR = 0xB7,BFD_RELOC_ARM_PCREL_BRANCH = 0xB8,BFD_RELOC_ARM_PCREL_BLX = 0xB9,BFD_RELOC_THUMB_PCREL_BLX = 0xBA,BFD_RELOC_ARM_IMMEDIATE = 0xBB,BFD_RELOC_ARM_ADRL_IMMEDIATE = 0xBC,BFD_RELOC_ARM_OFFSET_IMM = 0xBD,BFD_RELOC_ARM_SHIFT_IMM = 0xBE,BFD_RELOC_ARM_SWI = 0xBF,BFD_RELOC_ARM_MULTI = 0xC0,BFD_RELOC_ARM_CP_OFF_IMM = 0xC1,BFD_RELOC_ARM_ADR_IMM = 0xC2,BFD_RELOC_ARM_LDR_IMM = 0xC3,BFD_RELOC_ARM_LITERAL = 0xC4,BFD_RELOC_ARM_IN_POOL = 0xC5,BFD_RELOC_ARM_OFFSET_IMM8 = 0xC6,BFD_RELOC_ARM_HWLITERAL = 0xC7,BFD_RELOC_ARM_THUMB_ADD = 0xC8,BFD_RELOC_ARM_THUMB_IMM = 0xC9,BFD_RELOC_ARM_THUMB_SHIFT = 0xCA,BFD_RELOC_ARM_THUMB_OFFSET = 0xCB,BFD_RELOC_ARM_GOT12 = 0xCC,BFD_RELOC_ARM_GOT32 = 0xCD,BFD_RELOC_ARM_JUMP_SLOT = 0xCE,BFD_RELOC_ARM_COPY = 0xCF,BFD_RELOC_ARM_GLOB_DAT = 0xD0,BFD_RELOC_ARM_PLT32 = 0xD1,BFD_RELOC_ARM_RELATIVE = 0xD2,BFD_RELOC_ARM_GOTOFF = 0xD3,BFD_RELOC_ARM_GOTPC = 0xD4,BFD_RELOC_SH_PCDISP8BY2 = 0xD5,BFD_RELOC_SH_PCDISP12BY2 = 0xD6,BFD_RELOC_SH_IMM4 = 0xD7,BFD_RELOC_SH_IMM4BY2 = 0xD8,BFD_RELOC_SH_IMM4BY4 = 0xD9,BFD_RELOC_SH_IMM8 = 0xDA,BFD_RELOC_SH_IMM8BY2 = 0xDB,BFD_RELOC_SH_IMM8BY4 = 0xDC,BFD_RELOC_SH_PCRELIMM8BY2 = 0xDD,BFD_RELOC_SH_PCRELIMM8BY4 = 0xDE,BFD_RELOC_SH_SWITCH16 = 0xDF,BFD_RELOC_SH_SWITCH32 = 0xE0,BFD_RELOC_SH_USES = 0xE1,BFD_RELOC_SH_COUNT = 0xE2,BFD_RELOC_SH_ALIGN = 0xE3,BFD_RELOC_SH_CODE = 0xE4,BFD_RELOC_SH_DATA = 0xE5,BFD_RELOC_SH_LABEL = 0xE6,BFD_RELOC_SH_LOOP_START = 0xE7,BFD_RELOC_SH_LOOP_END = 0xE8,BFD_RELOC_THUMB_PCREL_BRANCH9 = 0xE9,BFD_RELOC_THUMB_PCREL_BRANCH12 = 0xEA,BFD_RELOC_THUMB_PCREL_BRANCH23 = 0xEB,BFD_RELOC_ARC_B22_PCREL = 0xEC,BFD_RELOC_ARC_B26 = 0xED,BFD_RELOC_D10V_10_PCREL_R = 0xEE,BFD_RELOC_D10V_10_PCREL_L = 0xEF,BFD_RELOC_D10V_18 = 0xF0,BFD_RELOC_D10V_18_PCREL = 0xF1,BFD_RELOC_D30V_6 = 0xF2,BFD_RELOC_D30V_9_PCREL = 0xF3,BFD_RELOC_D30V_9_PCREL_R = 0xF4,BFD_RELOC_D30V_15 = 0xF5,BFD_RELOC_D30V_15_PCREL = 0xF6,BFD_RELOC_D30V_15_PCREL_R = 0xF7,BFD_RELOC_D30V_21 = 0xF8,BFD_RELOC_D30V_21_PCREL = 0xF9,BFD_RELOC_D30V_21_PCREL_R = 0xFA,BFD_RELOC_D30V_32 = 0xFB,BFD_RELOC_D30V_32_PCREL = 0xFC,BFD_RELOC_M32R_24 = 0xFD,BFD_RELOC_M32R_10_PCREL = 0xFE,BFD_RELOC_M32R_18_PCREL = 0xFF,BFD_RELOC_M32R_26_PCREL = 0x100,BFD_RELOC_M32R_HI16_ULO = 0x101,BFD_RELOC_M32R_HI16_SLO = 0x102,BFD_RELOC_M32R_LO16 = 0x103,BFD_RELOC_M32R_SDA16 = 0x104,BFD_RELOC_V850_9_PCREL = 0x105,BFD_RELOC_V850_22_PCREL = 0x106,BFD_RELOC_V850_SDA_16_16_OFFSET = 0x107,BFD_RELOC_V850_SDA_15_16_OFFSET = 0x108,BFD_RELOC_V850_ZDA_16_16_OFFSET = 0x109,BFD_RELOC_V850_ZDA_15_16_OFFSET = 0x10A,BFD_RELOC_V850_TDA_6_8_OFFSET = 0x10B,BFD_RELOC_V850_TDA_7_8_OFFSET = 0x10C,BFD_RELOC_V850_TDA_7_7_OFFSET = 0x10D,BFD_RELOC_V850_TDA_16_16_OFFSET = 0x10E,BFD_RELOC_V850_TDA_4_5_OFFSET = 0x10F,BFD_RELOC_V850_TDA_4_4_OFFSET = 0x110,BFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET = 0x111,BFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET = 0x112,BFD_RELOC_V850_CALLT_6_7_OFFSET = 0x113,BFD_RELOC_V850_CALLT_16_16_OFFSET = 0x114,BFD_RELOC_MN10300_32_PCREL = 0x115,BFD_RELOC_MN10300_16_PCREL = 0x116,BFD_RELOC_TIC30_LDP = 0x117,BFD_RELOC_TIC54X_PARTLS7 = 0x118,BFD_RELOC_TIC54X_PARTMS9 = 0x119,BFD_RELOC_TIC54X_23 = 0x11A,BFD_RELOC_TIC54X_16_OF_23 = 0x11B,BFD_RELOC_TIC54X_MS7_OF_23 = 0x11C,BFD_RELOC_FR30_48 = 0x11D,BFD_RELOC_FR30_20 = 0x11E,BFD_RELOC_FR30_6_IN_4 = 0x11F,BFD_RELOC_FR30_8_IN_8 = 0x120,BFD_RELOC_FR30_9_IN_8 = 0x121,BFD_RELOC_FR30_10_IN_8 = 0x122,BFD_RELOC_FR30_9_PCREL = 0x123,BFD_RELOC_FR30_12_PCREL = 0x124,BFD_RELOC_MCORE_PCREL_IMM8BY4 = 0x125,BFD_RELOC_MCORE_PCREL_IMM11BY2 = 0x126,BFD_RELOC_MCORE_PCREL_IMM4BY2 = 0x127,BFD_RELOC_MCORE_PCREL_32 = 0x128,BFD_RELOC_MCORE_PCREL_JSR_IMM11BY2 = 0x129,BFD_RELOC_MCORE_RVA = 0x12A,BFD_RELOC_AVR_7_PCREL = 0x12B,BFD_RELOC_AVR_13_PCREL = 0x12C,BFD_RELOC_AVR_16_PM = 0x12D,BFD_RELOC_AVR_LO8_LDI = 0x12E,BFD_RELOC_AVR_HI8_LDI = 0x12F,BFD_RELOC_AVR_HH8_LDI = 0x130,BFD_RELOC_AVR_LO8_LDI_NEG = 0x131,BFD_RELOC_AVR_HI8_LDI_NEG = 0x132,BFD_RELOC_AVR_HH8_LDI_NEG = 0x133,BFD_RELOC_AVR_LO8_LDI_PM = 0x134,BFD_RELOC_AVR_HI8_LDI_PM = 0x135,BFD_RELOC_AVR_HH8_LDI_PM = 0x136,BFD_RELOC_AVR_LO8_LDI_PM_NEG = 0x137,BFD_RELOC_AVR_HI8_LDI_PM_NEG = 0x138,BFD_RELOC_AVR_HH8_LDI_PM_NEG = 0x139,BFD_RELOC_AVR_CALL = 0x13A,BFD_RELOC_VTABLE_INHERIT = 0x13B,BFD_RELOC_VTABLE_ENTRY = 0x13C,BFD_RELOC_IA64_IMM14 = 0x13D,BFD_RELOC_IA64_IMM22 = 0x13E,BFD_RELOC_IA64_IMM64 = 0x13F,BFD_RELOC_IA64_DIR32MSB = 0x140,BFD_RELOC_IA64_DIR32LSB = 0x141,BFD_RELOC_IA64_DIR64MSB = 0x142,BFD_RELOC_IA64_DIR64LSB = 0x143,BFD_RELOC_IA64_GPREL22 = 0x144,BFD_RELOC_IA64_GPREL64I = 0x145,BFD_RELOC_IA64_GPREL32MSB = 0x146,BFD_RELOC_IA64_GPREL32LSB = 0x147,BFD_RELOC_IA64_GPREL64MSB = 0x148,BFD_RELOC_IA64_GPREL64LSB = 0x149,BFD_RELOC_IA64_LTOFF22 = 0x14A,BFD_RELOC_IA64_LTOFF64I = 0x14B,BFD_RELOC_IA64_PLTOFF22 = 0x14C,BFD_RELOC_IA64_PLTOFF64I = 0x14D,BFD_RELOC_IA64_PLTOFF64MSB = 0x14E,BFD_RELOC_IA64_PLTOFF64LSB = 0x14F,BFD_RELOC_IA64_FPTR64I = 0x150,BFD_RELOC_IA64_FPTR32MSB = 0x151,BFD_RELOC_IA64_FPTR32LSB = 0x152,BFD_RELOC_IA64_FPTR64MSB = 0x153,BFD_RELOC_IA64_FPTR64LSB = 0x154,BFD_RELOC_IA64_PCREL21B = 0x155,BFD_RELOC_IA64_PCREL21BI = 0x156,BFD_RELOC_IA64_PCREL21M = 0x157,BFD_RELOC_IA64_PCREL21F = 0x158,BFD_RELOC_IA64_PCREL22 = 0x159,BFD_RELOC_IA64_PCREL60B = 0x15A,BFD_RELOC_IA64_PCREL64I = 0x15B,BFD_RELOC_IA64_PCREL32MSB = 0x15C,BFD_RELOC_IA64_PCREL32LSB = 0x15D,BFD_RELOC_IA64_PCREL64MSB = 0x15E,BFD_RELOC_IA64_PCREL64LSB = 0x15F,BFD_RELOC_IA64_LTOFF_FPTR22 = 0x160,BFD_RELOC_IA64_LTOFF_FPTR64I = 0x161,BFD_RELOC_IA64_LTOFF_FPTR64MSB = 0x162,BFD_RELOC_IA64_LTOFF_FPTR64LSB = 0x163,BFD_RELOC_IA64_SEGBASE = 0x164,BFD_RELOC_IA64_SEGREL32MSB = 0x165,BFD_RELOC_IA64_SEGREL32LSB = 0x166,BFD_RELOC_IA64_SEGREL64MSB = 0x167,BFD_RELOC_IA64_SEGREL64LSB = 0x168,BFD_RELOC_IA64_SECREL32MSB = 0x169,BFD_RELOC_IA64_SECREL32LSB = 0x16A,BFD_RELOC_IA64_SECREL64MSB = 0x16B,BFD_RELOC_IA64_SECREL64LSB = 0x16C,BFD_RELOC_IA64_REL32MSB = 0x16D,BFD_RELOC_IA64_REL32LSB = 0x16E,BFD_RELOC_IA64_REL64MSB = 0x16F,BFD_RELOC_IA64_REL64LSB = 0x170,BFD_RELOC_IA64_LTV32MSB = 0x171,BFD_RELOC_IA64_LTV32LSB = 0x172,BFD_RELOC_IA64_LTV64MSB = 0x173,BFD_RELOC_IA64_LTV64LSB = 0x174,BFD_RELOC_IA64_IPLTMSB = 0x175,BFD_RELOC_IA64_IPLTLSB = 0x176,BFD_RELOC_IA64_EPLTMSB = 0x177,BFD_RELOC_IA64_EPLTLSB = 0x178,BFD_RELOC_IA64_COPY = 0x179,BFD_RELOC_IA64_TPREL22 = 0x17A,BFD_RELOC_IA64_TPREL64MSB = 0x17B,BFD_RELOC_IA64_TPREL64LSB = 0x17C,BFD_RELOC_IA64_LTOFF_TP22 = 0x17D,BFD_RELOC_IA64_LTOFF22X = 0x17E,BFD_RELOC_IA64_LDXMOV = 0x17F,BFD_RELOC_UNUSED = 0x180,};
typedef struct _bfd_window_internal bfd_window_internal;
struct external_PE_filehdr {unsigned __int16 e_magic;unsigned __int16 e_cblp;unsigned __int16 e_cp;unsigned __int16 e_crlc;unsigned __int16 e_cparhdr;unsigned __int16 e_minalloc;unsigned __int16 e_maxalloc;unsigned __int16 e_ss;unsigned __int16 e_sp;unsigned __int16 e_csum;unsigned __int16 e_ip;unsigned __int16 e_cs;unsigned __int16 e_lfarlc;unsigned __int16 e_ovno;char e_res[4][2];unsigned __int16 e_oemid;unsigned __int16 e_oeminfo;char e_res2[10][2];unsigned __int32 e_lfanew;char dos_message[16][4];unsigned int nt_signature;unsigned __int16 f_magic;unsigned __int16 f_nscns;unsigned __int32 f_timdat;unsigned __int32 f_symptr;unsigned __int32 f_nsyms;unsigned __int16 f_opthdr;unsigned __int16 f_flags;};
typedef struct pthread_mutexattr pthread_mutexattr_t;
enum MACRO_AllTemporary {AllTemporary = 0,};
enum MACRO_AsyncPointer {AsyncPointer = 0,SyncPointer = 1,ReplayPointer = 2,AsyncKeyboard = 3,SyncKeyboard = 4,ReplayKeyboard = 5,AsyncBoth = 6,SyncBoth = 7,};
enum MACRO_CWBackPixmap {CWBackPixmap = 1,CWBackPixel = 2,CWBorderPixmap = 4,CWBorderPixel = 8,CWBitGravity = 16,CWWinGravity = 32,CWBackingStore = 64,CWBackingPlanes = 128,CWBackingPixel = 256,CWOverrideRedirect = 512,CWSaveUnder = 1024,CWEventMask = 2048,CWDontPropagate = 4096,CWColormap = 8192,CWCursor = 16384,};
enum MACRO_DAYSPERNYEAR {DAYSPERNYEAR = 365,DAYSPERLYEAR = 366,};
enum MACRO_EnableAccess {EnableAccess = 1,};
enum MACRO_GrabModeSync {GrabModeSync = 0,GrabModeAsync = 1,};
enum MACRO_IMAGE_COMDAT {IMAGE_COMDAT_SELECT_NODUPLICATES = 1,IMAGE_COMDAT_SELECT_ANY = 2,IMAGE_COMDAT_SELECT_SAME_SIZE = 3,IMAGE_COMDAT_SELECT_EXACT_MATCH = 4,IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5,};
enum MACRO_NT_SIGNATURE {DOSMAGIC = 23117,NT_SIGNATURE = 17744,};
enum MACRO_NotifyNormal {NotifyNormal = 0,NotifyGrab = 1,NotifyUngrab = 2,NotifyWhileGrabbed = 3,};
enum MACRO_PNG_EQUATION {PNG_EQUATION_LINEAR = 0,PNG_EQUATION_BASE_E = 1,PNG_EQUATION_ARBITRARY = 2,PNG_EQUATION_HYPERBOLIC = 3,PNG_EQUATION_LAST = 4,};
enum MACRO_RevertToNone {RevertToNone = 0,RevertToPointerRoot = 1,RevertToParent = 2,};
enum MACRO_TCL_VOLATILE {TCL_VOLATILE = 1,TCL_STATIC = 0,};
enum MACRO_UnmapGravity {UnmapGravity = 0,};
enum MACRO__G_HAVE_BOOL {_G_HAVE_BOOL = 1,_G_HAVE_PRINTF_FP = 0,_G_HAVE_LONG_DOUBLE_IO = 0,};
enum MACRO_bfd_mach_arm {bfd_mach_arm_2 = 1,bfd_mach_arm_2a = 2,bfd_mach_arm_3 = 3,bfd_mach_arm_3M = 4,bfd_mach_arm_4 = 5,bfd_mach_arm_4T = 6,bfd_mach_arm_5 = 7,bfd_mach_arm_5T = 8,};
enum Tcl_EolTranslation {TCL_TRANSLATE_AUTO = 0x0,TCL_TRANSLATE_CR = 0x1,TCL_TRANSLATE_LF = 0x2,TCL_TRANSLATE_CRLF = 0x3,};
typedef int Tcl_SetFromAnyProc(Tcl_Interp *interp, struct Tcl_Obj *objPtr);
struct Tk_PhotoImageBlock {unsigned __int8 *pixelPtr;int width;int height;int pitch;int pixelSize;int offset[3];int reserved;};
typedef struct _85ADD90E39F3CB0C7E30B8F1E31A0398 XCreateWindowEvent;
typedef struct bfd_arch_info bfd_arch_info_type;
enum bfd_link_hash_type {bfd_link_hash_new = 0x0,bfd_link_hash_undefined = 0x1,bfd_link_hash_undefweak = 0x2,bfd_link_hash_defined = 0x3,bfd_link_hash_defweak = 0x4,bfd_link_hash_common = 0x5,bfd_link_hash_indirect = 0x6,bfd_link_hash_warning = 0x7,};
enum MACRO_CurrentTime {CurrentTime = 0,};
enum MACRO_CursorShape {CursorShape = 0,TileShape = 1,StippleShape = 2,};
enum MACRO_EWOULDBLOCK {EWOULDBLOCK = 11,__ELASTERROR = 2000,};
enum MACRO_EvenOddRule {EvenOddRule = 0,WindingRule = 1,};
enum MACRO_GrabSuccess {GrabSuccess = 0,AlreadyGrabbed = 1,GrabInvalidTime = 2,GrabNotViewable = 3,GrabFrozen = 4,};
enum MACRO_InputOutput {InputOutput = 1,InputOnly = 2,};
enum MACRO_LOG_PRIMASK {LOG_PRIMASK = 0x7,};
enum MACRO_NoEventMask {NoEventMask = 0,KeyPressMask = 1,KeyReleaseMask = 2,ButtonPressMask = 4,ButtonReleaseMask = 8,EnterWindowMask = 16,LeaveWindowMask = 32,PointerMotionMask = 64,PointerMotionHintMask = 128,Button1MotionMask = 256,Button2MotionMask = 512,Button3MotionMask = 1024,Button4MotionMask = 2048,Button5MotionMask = 4096,ButtonMotionMask = 8192,KeymapStateMask = 16384,ExposureMask = 32768,VisibilityChangeMask = 65536,StructureNotifyMask = 131072,ResizeRedirectMask = 262144,SubstructureNotifyMask = 524288,SubstructureRedirectMask = 1048576,FocusChangeMask = 2097152,PropertyChangeMask = 4194304,ColormapChangeMask = 8388608,OwnerGrabButtonMask = 16777216,};
enum MACRO_PointerRoot {PointerRoot = 1,};
enum MACRO_RaiseLowest {RaiseLowest = 0,LowerHighest = 1,};
enum MACRO_TCL_DSTRING {TCL_DSTRING_STATIC_SIZE = 200,};
enum MACRO_TCL_DYNAMIC {TCL_DYNAMIC = 3,};
enum MACRO_TCL_RELEASE {TCL_RELEASE_LEVEL = 2,TCL_RELEASE_SERIAL = 4,};
enum MACRO_TCL_SERVICE {TCL_SERVICE_NONE = 0,TCL_SERVICE_ALL = 1,TCL_READABLE = 2,TCL_WRITABLE = 4,TCL_EXCEPTION = 8,};
enum MACRO_TIX_DEFAULT {TIX_DEFAULT_LEN = -1,TIX_DEFAULT_SUBCMD = 0,};
enum MACRO_TK_READABLE {TK_READABLE = 2,TK_WRITABLE = 4,TK_EXCEPTION = 8,};
enum MACRO_UT_NAMESIZE {UT_NAMESIZE = 16,UT_HOSTSIZE = 256,};
enum MACRO_XLookupNone {XLookupNone = 1,XLookupChars = 2,XLookupKeySym = 3,XLookupBoth = 4,};
enum MACRO__G_HAVE_SYS {_G_HAVE_SYS_RESOURCE = 1,};
enum MACRO__POSIX_NAME {_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 0,};
enum MACRO__POSIX_OPEN {_POSIX_OPEN_MAX = 16,_POSIX_PATH_MAX = 255,_POSIX_PIPE_BUF = 512,_POSIX_SSIZE_MAX = 32767,};
enum MACRO___LONG_LONG {__LONG_LONG_MAX__ = -1,};
enum MACRO_bfd_mach_sh {bfd_mach_sh = 0,bfd_mach_sh2 = 32,bfd_mach_sh_dsp = 45,bfd_mach_sh3 = 48,bfd_mach_sh3_dsp = 61,bfd_mach_sh3e = 62,bfd_mach_sh4 = 64,};
typedef struct _3AD4CBF69EE89480875180DC2A9357C1 XFocusChangeEvent;
typedef struct _67007EC0A0A5FA25533E9B447B17EF1A XWindowAttributes;
enum complain_overflow {complain_overflow_dont = 0x0,complain_overflow_bitfield = 0x1,complain_overflow_signed = 0x2,complain_overflow_unsigned = 0x3,};
typedef struct png_unknown_chunk_t png_unknown_chunk;
struct pthread_mutexattr {char dummy[];};
enum MACRO_BSF_EXPORT {BSF_EXPORT = 2,BSF_DEBUGGING = 8,BSF_FUNCTION = 16,BSF_KEEP = 32,BSF_KEEP_G = 64,BSF_WEAK = 128,BSF_SECTION_SYM = 256,BSF_OLD_COMMON = 512,};
enum MACRO_CapNotLast {CapNotLast = 0,CapButt = 1,CapRound = 2,CapProjecting = 3,};
enum MACRO_DestroyAll {DestroyAll = 0,RetainPermanent = 1,RetainTemporary = 2,};
enum MACRO_GCFunction {GCFunction = 1,GCPlaneMask = 2,GCForeground = 4,GCBackground = 8,GCLineWidth = 16,GCLineStyle = 32,GCCapStyle = 64,GCJoinStyle = 128,GCFillStyle = 256,GCFillRule = 512,GCTile = 1024,GCStipple = 2048,GCTileStipXOrigin = 4096,GCTileStipYOrigin = 8192,GCFont = 16384,GCSubwindowMode = 32768,GCGraphicsExposures = 65536,GCClipXOrigin = 131072,GCClipYOrigin = 262144,GCClipMask = 524288,GCDashOffset = 1048576,GCDashList = 2097152,GCArcMode = 4194304,};
enum MACRO_GLOB_ABEND {GLOB_ABEND = -2,};
enum MACRO_HostInsert {HostInsert = 0,HostDelete = 1,};
enum MACRO_IsUnmapped {IsUnmapped = 0,IsUnviewable = 1,IsViewable = 2,};
enum MACRO_LedModeOff {LedModeOff = 0,LedModeOn = 1,};
enum MACRO_MAXPATHLEN {MAXPATHLEN = 1024,};
enum MACRO_NotifyHint {NotifyHint = 1,};
enum MACRO_PNG_FILLER {PNG_FILLER_BEFORE = 0,PNG_FILLER_AFTER = 1,};
enum MACRO_PNG_FILTER {PNG_FILTER_VALUE_NONE = 0,PNG_FILTER_VALUE_SUB = 1,PNG_FILTER_VALUE_UP = 2,PNG_FILTER_VALUE_AVG = 3,PNG_FILTER_VALUE_PAETH = 4,PNG_FILTER_VALUE_LAST = 5,};
enum MACRO_PNG_LIBPNG {PNG_LIBPNG_VER = 10006,PNG_TEXT_COMPRESSION_NONE_WR = -3,PNG_TEXT_COMPRESSION_zTXt_WR = -2,PNG_TEXT_COMPRESSION_NONE = -1,};
enum MACRO_PNG_OFFSET {PNG_OFFSET_PIXEL = 0,PNG_OFFSET_MICROMETER = 1,PNG_OFFSET_LAST = 2,};
enum MACRO_PlaceOnTop {PlaceOnTop = 0,PlaceOnBottom = 1,};
enum MACRO_SECSPERDAY {SECSPERDAY = 86400,};
enum MACRO_StaticGray {StaticGray = 0,GrayScale = 1,StaticColor = 2,PseudoColor = 3,TrueColor = 4,DirectColor = 5,};
enum MACRO_TCL_GLOBAL {TCL_GLOBAL_ONLY = 1,TCL_NAMESPACE_ONLY = 2,TCL_APPEND_VALUE = 4,TCL_LIST_ELEMENT = 8,TCL_TRACE_READS = 16,TCL_TRACE_WRITES = 32,TCL_TRACE_UNSETS = 64,TCL_TRACE_DESTROYED = 128,TCL_INTERP_DESTROYED = 256,TCL_LEAVE_ERR_MSG = 512,TCL_PARSE_PART1 = 1024,};
enum MACRO_TIOCGWINSZ {TIOCGWINSZ = 21505,TIOCSWINSZ = 21506,};
enum MACRO_TIX_RELIEF {TIX_RELIEF_RAISED = 1,TIX_RELIEF_FLAT = 2,TIX_RELIEF_SUNKEN = 4,TIX_RELIEF_GROOVE = 8,TIX_RELIEF_RIDGE = 16,TIX_RELIEF_SOLID = 32,};
enum MACRO_TIX_UNIQUE {TIX_UNIQUE = 1,TIX_UNDEFINED = -1,};
enum MACRO_TK_ARGV_NO {TK_ARGV_NO_DEFAULTS = 0x1,TK_ARGV_NO_LEFTOVERS = 0x2,TK_ARGV_NO_ABBREV = 0x4,TK_ARGV_DONT_SKIP_FIRST_ARG = 0x8,};
enum MACRO_TK_RELEASE {TK_RELEASE_LEVEL = 2,TK_RELEASE_SERIAL = 4,};
enum MACRO_XIMReverse {XIMReverse = 1,XIMUnderline = 2,XIMHighlight = 4,XIMPrimary = 32,XIMSecondary = 64,XIMTertiary = 128,};
enum MACRO_Z_FILTERED {Z_FILTERED = 1,Z_HUFFMAN_ONLY = 2,};
enum MACRO__POSIX_MAX {_POSIX_MAX_INPUT = 255,};
enum MACRO___IEEE_DBL {__IEEE_DBL_EXPLEN = 11,};
enum MACRO___IEEE_FLT {__IEEE_FLT_EXPLEN = 8,__IEEE_DBL_FRACLEN = 52,};
typedef struct Tcl_AsyncHandler_ *Tcl_AsyncHandler;
struct Tix_ListIterator {char *last;char *curr;unsigned int deleted;};
typedef struct _BFB970BD49ED9B406D7CBF54A76D57DD XKeyboardControl;
typedef struct _7FAD4DA9375019A5494A191BEF0405E8 XMapRequestEvent;
typedef struct _C64C6FF65947C35F73E5DDA7D3ADCCD3 XVisibilityEvent;
enum __fdlibm_version {__fdlibm_ieee = 0xFFFFFFFF,__fdlibm_svid = 0x0,__fdlibm_xopen = 0x1,__fdlibm_posix = 0x2,};
enum bfd_architecture {bfd_arch_unknown = 0x0,bfd_arch_obscure = 0x1,bfd_arch_m68k = 0x2,bfd_arch_vax = 0x3,bfd_arch_i960 = 0x4,bfd_arch_a29k = 0x5,bfd_arch_sparc = 0x6,bfd_arch_mips = 0x7,bfd_arch_i386 = 0x8,bfd_arch_we32k = 0x9,bfd_arch_tahoe = 0xA,bfd_arch_i860 = 0xB,bfd_arch_i370 = 0xC,bfd_arch_romp = 0xD,bfd_arch_alliant = 0xE,bfd_arch_convex = 0xF,bfd_arch_m88k = 0x10,bfd_arch_pyramid = 0x11,bfd_arch_h8300 = 0x12,bfd_arch_powerpc = 0x13,bfd_arch_rs6000 = 0x14,bfd_arch_hppa = 0x15,bfd_arch_d10v = 0x16,bfd_arch_d30v = 0x17,bfd_arch_z8k = 0x18,bfd_arch_h8500 = 0x19,bfd_arch_sh = 0x1A,bfd_arch_alpha = 0x1B,bfd_arch_arm = 0x1C,bfd_arch_ns32k = 0x1D,bfd_arch_w65 = 0x1E,bfd_arch_tic30 = 0x1F,bfd_arch_tic54x = 0x20,bfd_arch_tic80 = 0x21,bfd_arch_v850 = 0x22,bfd_arch_arc = 0x23,bfd_arch_m32r = 0x24,bfd_arch_mn10200 = 0x25,bfd_arch_mn10300 = 0x26,bfd_arch_fr30 = 0x27,bfd_arch_mcore = 0x28,bfd_arch_ia64 = 0x29,bfd_arch_pj = 0x2A,bfd_arch_avr = 0x2B,bfd_arch_last = 0x2C,};
enum bfd_link_discard {discard_none = 0x0,discard_l = 0x1,discard_all = 0x2,};
enum bfd_print_symbol {bfd_print_symbol_name = 0x0,bfd_print_symbol_more = 0x1,bfd_print_symbol_all = 0x2,};
enum bfd_reloc_status {bfd_reloc_ok = 0x0,bfd_reloc_overflow = 0x1,bfd_reloc_outofrange = 0x2,bfd_reloc_continue = 0x3,bfd_reloc_notsupported = 0x4,bfd_reloc_other = 0x5,bfd_reloc_undefined = 0x6,bfd_reloc_dangerous = 0x7,};
struct ecoff_debug_info;
struct ecoff_debug_swap;
struct external_filehdr {__int16 f_magic;__int16 f_nscns;unsigned __int32 f_timdat;unsigned __int32 f_symptr;unsigned __int32 f_nsyms;__int16 f_opthdr;__int16 f_flags;};
typedef const char **png_const_charpp;
typedef const struct reloc_howto_struct reloc_howto_type;
enum MACRO_AOUTHDRSZ {AOUTHDRSZ = 28,OMAGIC = 260,ZMAGIC = 267,};
enum MACRO_AllPlanes {AllPlanes = -1,};
enum MACRO_AllocNone {AllocNone = 0,AllocAll = 1,};
enum MACRO_AnyButton {AnyButton = 0,};
enum MACRO_FillSolid {FillSolid = 0,FillTiled = 1,FillStippled = 2,FillOpaqueStippled = 3,};
enum MACRO_GCLastBit {GCLastBit = 22,};
enum MACRO_IMAGE_SCN {IMAGE_SCN_MEM_DISCARDABLE = 0x2000000,IMAGE_SCN_MEM_EXECUTE = 0x20000000,IMAGE_SCN_MEM_READ = 0x40000000,IMAGE_SCN_MEM_WRITE = 0x80000000,IMAGE_SCN_TYPE_NO_PAD = 0x8,IMAGE_SCN_CNT_CODE = 0x20,IMAGE_SCN_CNT_INITIALIZED_DATA = 0x40,IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x80,IMAGE_SCN_LNK_OTHER = 0x100,IMAGE_SCN_LNK_INFO = 0x200,IMAGE_SCN_LNK_REMOVE = 0x800,IMAGE_SCN_LNK_COMDAT = 0x1000,IMAGE_SCN_MEM_FARDATA = 0x8000,IMAGE_SCN_MEM_PURGEABLE = 0x20000,IMAGE_SCN_MEM_16BIT = 0x20000,IMAGE_SCN_MEM_LOCKED = 0x40000,IMAGE_SCN_MEM_PRELOAD = 0x80000,IMAGE_SCN_ALIGN_1BYTES = 0x100000,IMAGE_SCN_ALIGN_2BYTES = 0x200000,IMAGE_SCN_ALIGN_4BYTES = 0x300000,IMAGE_SCN_ALIGN_8BYTES = 0x400000,IMAGE_SCN_ALIGN_16BYTES = 0x500000,IMAGE_SCN_ALIGN_32BYTES = 0x600000,IMAGE_SCN_ALIGN_64BYTES = 0x700000,IMAGE_SCN_LNK_NRELOC_OVFL = 0x1000000,IMAGE_SCN_MEM_NOT_CACHED = 0x4000000,IMAGE_SCN_MEM_NOT_PAGED = 0x8000000,IMAGE_SCN_MEM_SHARED = 0x10000000,};
enum MACRO_JoinMiter {JoinMiter = 0,JoinRound = 1,JoinBevel = 2,};
enum MACRO_LONG_LONG {LONG_LONG_MAX = -1,};
enum MACRO_L_cuserid {L_cuserid = 9,};
enum MACRO_LineSolid {LineSolid = 0,LineOnOffDash = 1,LineDoubleDash = 2,};
enum MACRO_NGROUPS_0 {NGROUPS = 16,HZ = 1000,};
enum MACRO_NotUseful {NotUseful = 0,WhenMapped = 1,Always = 2,};
enum MACRO_PNG_COLOR {PNG_COLOR_MASK_PALETTE = 1,PNG_COLOR_MASK_COLOR = 2,PNG_COLOR_MASK_ALPHA = 4,};
enum MACRO_PNG_SCALE {PNG_SCALE_UNKNOWN = 0,PNG_SCALE_METER = 1,PNG_SCALE_RADIAN = 2,PNG_SCALE_LAST = 3,};
enum MACRO_ShiftMask {ShiftMask = 1,LockMask = 2,ControlMask = 4,Mod1Mask = 8,Mod2Mask = 16,Mod3Mask = 32,Mod4Mask = 64,Mod5Mask = 128,};
enum MACRO_TCL_EXACT {TCL_EXACT = 1,TCL_NO_EVAL = 65536,TCL_EVAL_GLOBAL = 131072,};
enum MACRO_TCL_SMALL {TCL_SMALL_HASH_TABLE = 4,TCL_STRING_KEYS = 0,};
enum MACRO_TCL_STDIN {TCL_STDIN = 2,TCL_STDOUT = 4,TCL_STDERR = 8,TCL_ENFORCE_MODE = 16,};
enum MACRO_TCSAFLUSH {TCSAFLUSH = 1,TCSANOW = 2,TCSADRAIN = 3,TCSADFLUSH = 4,TIOCPKT = 6,};
enum MACRO_TK_CONFIG {TK_CONFIG_BOOLEAN = 1,TK_CONFIG_INT = 2,TK_CONFIG_DOUBLE = 3,TK_CONFIG_STRING = 4,TK_CONFIG_UID = 5,TK_CONFIG_COLOR = 6,TK_CONFIG_FONT = 7,TK_CONFIG_BITMAP = 8,TK_CONFIG_BORDER = 9,TK_CONFIG_RELIEF = 10,TK_CONFIG_CURSOR = 11,TK_CONFIG_ACTIVE_CURSOR = 12,TK_CONFIG_JUSTIFY = 13,TK_CONFIG_ANCHOR = 14,TK_CONFIG_SYNONYM = 15,TK_CONFIG_CAP_STYLE = 16,TK_CONFIG_JOIN_STYLE = 17,TK_CONFIG_PIXELS = 18,TK_CONFIG_MM = 19,TK_CONFIG_WINDOW = 20,TK_CONFIG_CUSTOM = 21,TK_CONFIG_END = 22,};
enum MACRO_TK_MAPPED {TK_MAPPED = 1,TK_TOP_LEVEL = 2,TK_ALREADY_DEAD = 4,TK_NEED_CONFIG_NOTIFY = 8,TK_GRAB_FLAG = 16,TK_CHECKED_IC = 32,TK_DONT_DESTROY_WINDOW = 64,TK_WM_COLORMAP_WINDOW = 128,TK_EMBEDDED = 256,TK_CONTAINER = 512,TK_BOTH_HALVES = 1024,TK_DEFER_MODAL = 2048,TK_WRAPPER = 4096,TK_REPARENTED = 8192,};
enum MACRO_TK_RELIEF {TK_RELIEF_RAISED = 1,TK_RELIEF_FLAT = 2,TK_RELIEF_SUNKEN = 4,TK_RELIEF_GROOVE = 8,TK_RELIEF_RIDGE = 16,TK_RELIEF_SOLID = 32,};
enum MACRO_TK_SCROLL {TK_SCROLL_MOVETO = 1,TK_SCROLL_PAGES = 2,TK_SCROLL_UNITS = 3,TK_SCROLL_ERROR = 4,VirtualEvent = 35,ActivateNotify = 36,DeactivateNotify = 37,MouseWheelEvent = 38,TK_LASTEVENT = 39,MouseWheelMask = 268435456,ActivateMask = 536870912,VirtualEventMask = 1073741824,};
enum MACRO_TK_WIDGET {TK_WIDGET_DEFAULT_PRIO = 20,TK_STARTUP_FILE_PRIO = 40,TK_USER_DEFAULT_PRIO = 60,TK_INTERACTIVE_PRIO = 80,TK_MAX_PRIO = 100,};
enum MACRO_TK_WINDOW {TK_WINDOW_EVENTS = 4,TK_FILE_EVENTS = 8,TK_TIMER_EVENTS = 16,TK_IDLE_EVENTS = 32,TK_ALL_EVENTS = -3,};
enum MACRO_Z_DEFAULT {Z_DEFAULT_STRATEGY = 0,Z_BINARY = 0,};
enum MACRO_Z_VERSION {Z_VERSION_ERROR = -6,Z_NO_COMPRESSION = 0,};
enum MACRO__ANSIDECL {_ANSIDECL_H = 1,};
enum MACRO__G_VTABLE {_G_VTABLE_LABEL_HAS_LENGTH = 1,};
enum MACRO__PASSWORD {_PASSWORD_LEN = 128,};
typedef int Tcl_AppInitProc(Tcl_Interp *interp);
typedef struct Tk_BindingTable_ *Tk_BindingTable;
typedef struct Tk_ErrorHandler_ *Tk_ErrorHandler;
typedef struct _2B6C772F9B0F9D5573534694AD1B578D XCirculateEvent;
typedef struct _CD460451436B92EA879ADEB542921FD3 XConfigureEvent;
typedef struct _6BA9BAD34CD581FCA2A7610248080448 XFontSetExtents;
typedef struct _64419251F3172C7227A52AC30EAD3C9D XModifierKeymap;
typedef struct _65CB4B56B993AF892F37749A62A14B51 XSelectionEvent;
struct bfd_comdat_info {const char *name;__int32 symbol;struct bfd_comdat_info__sec *sec;};
struct external_scnhdr {char s_name[8];unsigned __int32 s_paddr;unsigned __int32 s_vaddr;unsigned __int32 s_size;unsigned __int32 s_scnptr;unsigned __int32 s_relptr;unsigned __int32 s_lnnoptr;unsigned __int16 s_nreloc;unsigned __int16 s_nlnno;unsigned __int32 s_flags;};
union internal_auxent;
struct internal_syment;
typedef const char *png_const_charp;
typedef int pthread_mutex_t;
enum MACRO_ArcChord {ArcChord = 0,ArcPieSlice = 1,};
enum MACRO_BFD_FORT {BFD_FORT_COMM_DEFAULT_VALUE = 0,BSF_NOT_AT_END = 1024,BSF_CONSTRUCTOR = 2048,BSF_WARNING = 4096,BSF_INDIRECT = 8192,BSF_FILE = 16384,BSF_DYNAMIC = 32768,BSF_OBJECT = 65536,BSF_DEBUGGING_RELOC = 131072,};
enum MACRO_CHAR_MAX {CHAR_MAX = 127,SHRT_MIN = -32768,};
enum MACRO_FILNMLEN {FILNMLEN = 18,};
enum MACRO_KeyPress {KeyPress = 2,KeyRelease = 3,ButtonPress = 4,ButtonRelease = 5,MotionNotify = 6,EnterNotify = 7,LeaveNotify = 8,FocusIn = 9,FocusOut = 10,KeymapNotify = 11,Expose = 12,GraphicsExpose = 13,NoExpose = 14,VisibilityNotify = 15,CreateNotify = 16,DestroyNotify = 17,UnmapNotify = 18,MapNotify = 19,MapRequest = 20,ReparentNotify = 21,ConfigureNotify = 22,ConfigureRequest = 23,GravityNotify = 24,ResizeRequest = 25,CirculateNotify = 26,CirculateRequest = 27,PropertyNotify = 28,SelectionClear = 29,SelectionRequest = 30,SelectionNotify = 31,ColormapNotify = 32,ClientMessage = 33,MappingNotify = 34,LASTEvent = 35,};
enum MACRO_LOG_KERN {LOG_KERN = 0,LOG_USER = 8,LOG_MAIL = 16,LOG_DAEMON = 24,LOG_AUTH = 32,LOG_SYSLOG = 40,LOG_LPR = 48,LOG_NEWS = 56,LOG_UUCP = 64,LOG_CRON = 72,LOG_AUTHPRIV = 80,LOG_FTP = 88,LOG_LOCAL0 = 128,LOG_LOCAL1 = 136,LOG_LOCAL2 = 144,LOG_LOCAL3 = 152,LOG_LOCAL4 = 160,LOG_LOCAL5 = 168,LOG_LOCAL6 = 176,LOG_LOCAL7 = 184,};
enum MACRO_LSBFirst {LSBFirst = 0,MSBFirst = 1,};
enum MACRO_MAP_ANON {MAP_ANON = 32,};
enum MACRO_NoSymbol {NoSymbol = 0,};
enum MACRO_O_NDELAY {O_NDELAY = 4,};
enum MACRO_PNG_FREE {PNG_FREE_PLTE = 0x1,PNG_FREE_TRNS = 0x2,PNG_FREE_TEXT = 0x4,PNG_FREE_HIST = 0x8,PNG_FREE_ICCP = 0x10,PNG_FREE_SPLT = 0x20,PNG_FREE_ROWS = 0x40,PNG_FREE_PCAL = 0x80,PNG_FREE_SCAL = 0x100,PNG_FREE_UNKN = 0x200,PNG_FREE_LIST = 0x400,PNG_FREE_ALL = 0x7FF,};
enum MACRO_PNG_INFO {PNG_INFO_gAMA = 0x1,PNG_INFO_sBIT = 0x2,PNG_INFO_cHRM = 0x4,PNG_INFO_PLTE = 0x8,PNG_INFO_tRNS = 0x10,PNG_INFO_bKGD = 0x20,PNG_INFO_hIST = 0x40,PNG_INFO_pHYs = 0x80,PNG_INFO_oFFs = 0x100,PNG_INFO_tIME = 0x200,PNG_INFO_pCAL = 0x400,PNG_INFO_sRGB = 0x800,PNG_INFO_iCCP = 0x1000,PNG_INFO_sPLT = 0x2000,PNG_INFO_sCAL = 0x4000,PNG_INFO_IDAT = 0x8000,};
enum MACRO_PNG_TEXT {PNG_TEXT_COMPRESSION_zTXt = 0,PNG_ITXT_COMPRESSION_NONE = 1,PNG_ITXT_COMPRESSION_zTXt = 2,PNG_TEXT_COMPRESSION_LAST = 3,PNG_MAX_UINT = 2147483647,};
enum MACRO_PNG_sRGB {PNG_sRGB_INTENT_PERCEPTUAL = 0,PNG_sRGB_INTENT_RELATIVE = 1,PNG_sRGB_INTENT_SATURATION = 2,PNG_sRGB_INTENT_ABSOLUTE = 3,PNG_sRGB_INTENT_LAST = 4,PNG_KEYWORD_MAX_LENGTH = 79,};
enum MACRO_TCIFLUSH {TCIFLUSH = 0,TCOFLUSH = 1,TCIOFLUSH = 2,TCFLSH = 3,};
enum MACRO_TCL_DONT {TCL_DONT_USE_BRACES = 1,};
enum MACRO_TCL_LINK {TCL_LINK_INT = 1,TCL_LINK_DOUBLE = 2,TCL_LINK_BOOLEAN = 3,TCL_LINK_STRING = 4,TCL_LINK_READ_ONLY = 128,};
enum MACRO_TCL_MODE {TCL_MODE_BLOCKING = 0,TCL_MODE_NONBLOCKING = 1,};
enum MACRO_TK_WHOLE {TK_WHOLE_WORDS = 1,TK_AT_LEAST_ONE = 2,TK_PARTIAL_OK = 4,TK_IGNORE_TABS = 8,TK_IGNORE_NEWLINES = 16,};
enum MACRO_Unsorted {Unsorted = 0,YSorted = 1,YXSorted = 2,YXBanded = 3,};
enum MACRO_VDISCARD {VDISCARD = 1,VEOL = 2,VEOL2 = 3,VEOF = 4,VERASE = 5,VINTR = 6,VKILL = 7,VLNEXT = 8,VMIN = 9,VQUIT = 10,VREPRINT = 11,VSTART = 12,VSTOP = 13,VSUSP = 14,VSWTC = 15,VTIME = 16,VWERASE = 17,NCCS = 18,};
enum MACRO_XYBitmap {XYBitmap = 0,XYPixmap = 1,ZPixmap = 2,};
enum MACRO_Z_STREAM {Z_STREAM_ERROR = -2,};
enum MACRO__G_FOPEN {_G_FOPEN_MAX = 20,_G_FILENAME_MAX = 1024,};
enum MACRO___DIRENT {__DIRENT_COOKIE = 0xDEDE4242,};
enum MACRO_bfd_mach {bfd_mach_i960_core = 1,bfd_mach_i960_ka_sa = 2,bfd_mach_i960_kb_sb = 3,bfd_mach_i960_mc = 4,bfd_mach_i960_xa = 5,bfd_mach_i960_ca = 6,bfd_mach_i960_jx = 7,bfd_mach_i960_hx = 8,};
struct Tcl_HashSearch {Tcl_HashTable *tablePtr;int nextIndex;Tcl_HashEntry *nextEntryPtr;};
typedef struct Tcl_TimerToken_ *Tcl_TimerToken;
typedef struct _Tix_SubCmdInfo Tix_SubCmdInfo;
struct Tk_FontMetrics {int ascent;int descent;int linespace;};
typedef struct Tk_ImageMaster_ *Tk_ImageMaster;
typedef void *Tk_PhotoHandle;
typedef struct _0B94EEFCBD76FB7E6E0B7C6C274F8F05 XColormapEvent;
typedef struct _C04761233C6B6D3917A9FB90584A60A5 XCrossingEvent;
typedef struct _E9E5673C887B806F32B41DE6D906B7FD XKeyboardState;
typedef struct _B00CD904CB46A0C43826F3F9731A78AD XNoExposeEvent;
typedef struct _3BCCBA65A7EB0D2F6C33DC1ED4428B78 XPropertyEvent;
typedef struct _29A84F0A94EF9B7976BAF082CF524F09 XReparentEvent;
typedef struct _BA1C9873524F37DFA28FC6E8B2A0BC7B XWindowChanges;
struct _XImage__funcs {struct _XImage *(*create_image)();int (*destroy_image)(struct _XImage *);unsigned __int32 (*get_pixel)(struct _XImage *, int, int);int (*put_pixel)(struct _XImage *, int, int, unsigned __int32);struct _XImage *(*sub_image)(struct _XImage *, int, int, unsigned int, unsigned int);int (*add_pixel)(struct _XImage *, __int32);};
typedef struct bfd_link_info _bfd_link_info;
struct bfd_hash_entry {struct bfd_hash_entry *next;const char *string;unsigned __int32 hash;};
struct bfd_hash_table {struct bfd_hash_entry **table;unsigned int size;struct bfd_hash_entry *(*newfunc)(struct bfd_hash_entry *, struct bfd_hash_table *, const char *);void *memory;};
enum bfd_link_strip {strip_none = 0x0,strip_debugger = 0x1,strip_some = 0x2,strip_all = 0x3,};
typedef __int32 bfd_signed_vma;
struct external_reloc {char r_vaddr[4];char r_symndx[4];char r_type[2];};
struct internal_state {int dummy;};
typedef struct png_sPLT_entry_struct png_sPLT_entry;
typedef struct pthread_attr pthread_attr_t;
enum MACRO_B256000 {B256000 = 0x1003,CRTSXOFF = 0x4000,CRTSCTS = 0x8000,};
enum MACRO_Button1 {Button1 = 1,Button2 = 2,Button3 = 3,Button4 = 4,Button5 = 5,};
enum MACRO_Complex {Complex = 0,Nonconvex = 1,Convex = 2,};
enum MACRO_FAPPEND {FAPPEND = 8,FSYNC = 8192,};
enum MACRO_FNDELAY {FNDELAY = 4,};
enum MACRO_F_GETFD {F_GETFD = 1,F_SETFD = 2,F_GETFL = 3,F_SETFL = 4,F_GETOWN = 5,F_SETOWN = 6,F_GETLK = 7,F_SETLK = 8,F_SETLKW = 9,F_RGETLK = 10,F_RSETLK = 11,F_CNVT = 12,F_RSETLKW = 13,};
enum MACRO_F_RDLCK {F_RDLCK = 1,F_WRLCK = 2,F_UNLCK = 3,F_UNLKSYS = 4,};
enum MACRO_GXclear {GXclear = 0x0,GXand = 0x1,GXandReverse = 0x2,GXcopy = 0x3,GXandInverted = 0x4,GXnoop = 0x5,GXxor = 0x6,GXor = 0x7,GXnor = 0x8,GXequiv = 0x9,GXinvert = 0xA,GXorReverse = 0xB,GXcopyInverted = 0xC,GXorInverted = 0xD,GXnand = 0xE,GXset = 0xF,};
enum MACRO_LOG_PID {LOG_PID = 0x1,LOG_CONS = 0x2,LOG_ODELAY = 0x4,LOG_NDELAY = 0x8,LOG_NOWAIT = 0x10,LOG_PERROR = 0x20,};
enum MACRO_NGROUPS {NGROUPS_MAX = 16,CHILD_MAX = 63,_POSIX_ARG_MAX = 4096,};
enum MACRO_NSUBEXP {NSUBEXP = 10,};
enum MACRO_OARMAG1 {OARMAG1 = 0xFF6D,OARMAG2 = 0xFF65,};
enum MACRO_PNG_CRC {PNG_CRC_DEFAULT = 0,PNG_CRC_ERROR_QUIT = 1,PNG_CRC_WARN_DISCARD = 2,PNG_CRC_WARN_USE = 3,PNG_CRC_QUIET_USE = 4,PNG_CRC_NO_CHANGE = 5,};
enum MACRO_SEC_HAS {SEC_HAS_CONTENTS = 0x200,SEC_NEVER_LOAD = 0x400,SEC_COFF_SHARED_LIBRARY = 0x800,SEC_IS_COMMON = 0x8000,SEC_DEBUGGING = 0x10000,SEC_IN_MEMORY = 0x20000,SEC_EXCLUDE = 0x40000,SEC_SORT_ENTRIES = 0x80000,SEC_LINK_ONCE = 0x100000,SEC_LINK_DUPLICATES = 0x600000,SEC_LINK_DUPLICATES_DISCARD = 0x0,SEC_LINK_DUPLICATES_ONE_ONLY = 0x200000,SEC_LINK_DUPLICATES_SAME_SIZE = 0x400000,SEC_LINK_DUPLICATES_SAME_CONTENTS = 0x600000,SEC_LINKER_CREATED = 0x800000,SEC_KEEP = 0x1000000,SEC_SMALL_DATA = 0x2000000,SEC_SHARED = 0x4000000,SEC_BLOCK = 0x8000000,SEC_CLINK = 0x10000000,};
enum MACRO_SIGABRT {SIGABRT = 6,SIGEMT = 7,SIGFPE = 8,SIGKILL = 9,SIGBUS = 10,SIGSEGV = 11,SIGSYS = 12,SIGPIPE = 13,SIGALRM = 14,SIGTERM = 15,SIGURG = 16,SIGSTOP = 17,SIGTSTP = 18,SIGCONT = 19,SIGCHLD = 20,};
enum MACRO_SIGPOLL {SIGPOLL = 23,SIGXCPU = 24,SIGXFSZ = 25,SIGVTALRM = 26,SIGPROF = 27,SIGWINCH = 28,SIGLOST = 29,SIGUSR1 = 30,SIGUSR2 = 31,NSIG = 32,};
enum MACRO_STMAGIC {STMAGIC = 0x101,SHMAGIC = 0x123,NT_SECTION_ALIGNMENT = 0x1000,};
enum MACRO_S_ENFMT {S_ENFMT = 0x400,S_IFMT = 0xF000,};
enum MACRO_S_IFBLK {S_IFBLK = 24576,S_IFREG = 32768,S_IFLNK = 40960,S_IFSOCK = 49152,};
enum MACRO_S_IFDIR {S_IFDIR = 16384,S_IFCHR = 8192,};
enum MACRO_S_IFIFO {S_IFIFO = 4096,S_IRWXU = 448,};
enum MACRO_S_IRGRP {S_IRGRP = 0x20,S_IWGRP = 0x10,S_IXGRP = 0x8,S_IRWXO = 0x7,};
enum MACRO_S_IROTH {S_IROTH = 0x4,S_IWOTH = 0x2,S_IXOTH = 0x1,};
enum MACRO_S_IRUSR {S_IRUSR = 0x100,S_IWUSR = 0x80,S_IXUSR = 0x40,S_IRWXG = 0x38,};
enum MACRO_S_ISGID {S_ISGID = 0x400,S_ISVTX = 0x200,S_IREAD = 0x100,S_IWRITE = 0x80,S_IEXEC = 0x40,};
enum MACRO_Success {Success = 0,BadRequest = 1,BadValue = 2,BadWindow = 3,BadPixmap = 4,BadAtom = 5,BadCursor = 6,BadFont = 7,BadMatch = 8,BadDrawable = 9,BadAccess = 10,BadAlloc = 11,BadColor = 12,BadGC = 13,BadIDChoice = 14,BadName = 15,BadLength = 16,BadImplementation = 17,FirstExtensionError = 128,LastExtensionError = 255,};
enum MACRO_TCL_MAX {TCL_MAX_PREC = 17,TCL_DOUBLE_SPACE = 27,};
enum MACRO_TCL_ONE {TCL_ONE_WORD_KEYS = 1,};
enum MACRO_TIOCPKT {TIOCPKT_DATA = 0,TIOCPKT_FLUSHREAD = 1,TIOCPKT_FLUSHWRITE = 2,TIOCPKT_STOP = 4,TIOCPKT_START = 8,TIOCPKT_NOSTOP = 16,TIOCPKT_DOSTOP = 32,FIONBIO = -2147195266,};
enum MACRO_TIX_VAR {TIX_VAR_ARGS = -1,};
enum MACRO_TK_ARGV {TK_ARGV_CONSTANT = 15,TK_ARGV_INT = 16,TK_ARGV_STRING = 17,TK_ARGV_UID = 18,TK_ARGV_REST = 19,TK_ARGV_FLOAT = 20,TK_ARGV_FUNC = 21,TK_ARGV_GENFUNC = 22,TK_ARGV_HELP = 23,TK_ARGV_CONST_OPTION = 24,TK_ARGV_OPTION_VALUE = 25,TK_ARGV_OPTION_NAME_VALUE = 26,TK_ARGV_VERSION = 27,TK_ARGV_END = 28,};
enum MACRO_TK_DONT {TK_DONT_WAIT = 2,TK_X_EVENTS = 4,};
enum MACRO_WINDOWS {WINDOWS_POST = 0,WINDOWS_SEND = 1,WINDOWS_HWND = 2,};
enum MACRO_WNOHANG {WNOHANG = 1,WUNTRACED = 2,};
enum MACRO_Z_ASCII {Z_ASCII = 1,Z_UNKNOWN = 2,Z_DEFLATED = 8,};
enum MACRO__ATEXIT {_ATEXIT_SIZE = 32,};
enum MACRO__CLOCKS {_CLOCKS_PER_SEC_ = 1000,};
enum MACRO__G_HAVE {_G_HAVE_ST_BLKSIZE = 1,_G_BUFSIZ = 1024,};
struct Tcl_CallFrame {Tcl_Namespace *nsPtr;int dummy1;int dummy2;char *dummy3;char *dummy4;char *dummy5;int dummy6;char *dummy7;char *dummy8;int dummy9;char *dummy10;};
typedef int Tcl_EventProc(Tcl_Event *evPtr, int flags);
struct Tcl_HashTable {Tcl_HashEntry **buckets;Tcl_HashEntry *staticBuckets[4];int numBuckets;int numEntries;int rebuildSize;int downShift;int mask;int keyType;Tcl_HashEntry *(*findProc)(struct Tcl_HashTable *tablePtr, const char *key);Tcl_HashEntry *(*createProc)(struct Tcl_HashTable *tablePtr, const char *key, int *newPtr);};
struct Tk_ConfigSpec {int type;char *argvName;char *dbName;char *dbClass;char *defValue;int offset;int specFlags;Tk_CustomOption *customPtr;};
typedef struct Tk_TextLayout_ *Tk_TextLayout;
typedef struct _2C3C200F8615C3857493506364E8C173 XGravityEvent;
typedef struct _AC3C30478DB292C58361350945D68834 XMappingEvent;
typedef void *XVaNestedList;
typedef struct _47AF4CF9A5C07F5C66C76738371ED04D XVirtualEvent;
typedef void (*_sig_func_ptr)(int);
typedef struct relent_chain arelent_chain;
typedef unsigned __int32 bfd_size_type;
typedef struct pthread_key pthread_key_t;
enum MACRO_AUXESZ {AUXESZ = 18,};
enum MACRO_AnyKey {AnyKey = 0,};
enum MACRO_B57600 {B57600 = 0x1001,B115200 = 0x1002,B128000 = 0x1003,};
enum MACRO_BFD_NO {BFD_NO_FLAGS = 0x0,HAS_RELOC = 0x1,EXEC_P = 0x2,HAS_LINENO = 0x4,HAS_DEBUG = 0x8,HAS_SYMS = 0x10,HAS_LOCALS = 0x20,DYNAMIC = 0x40,WP_TEXT = 0x80,D_PAGED = 0x100,BFD_IS_RELAXABLE = 0x200,BFD_TRADITIONAL_FORMAT = 0x400,BFD_IN_MEMORY = 0x800,BFD_NO_MORE_SYMBOLS = 0xFFFFFFFF,};
enum MACRO_CDSUSP {CDSUSP = 25,};
enum MACRO_CERASE {CERASE = 8,CKILL = 21,};
enum MACRO_CFLUSH {CFLUSH = 15,CWERASE = 23,};
enum MACRO_CLNEXT {CLNEXT = 22,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000,};
enum MACRO_CRPRNT {CRPRNT = 18,};
enum MACRO_DOMAIN {DOMAIN = 1,SING = 2,OVERFLOW = 3,UNDERFLOW = 4,TLOSS = 5,PLOSS = 6,};
enum MACRO_FASYNC {FASYNC = 64,FNBIO = 4096,FNONBIO = 16384,};
enum MACRO_FCREAT {FCREAT = 512,FTRUNC = 1024,FEXCL = 2048,FNOCTTY = 32768,};
enum MACRO_FILHSZ {FILHSZ = 20,AOUTSZ = 28,};
enum MACRO_FP_RDI {FP_RDI_RD = 1,__IEEE_DBL_EXPBIAS = 1023,};
enum MACRO_IGNBRK {IGNBRK = 0x1,BRKINT = 0x2,IGNPAR = 0x4,IMAXBEL = 0x8,INPCK = 0x10,ISTRIP = 0x20,INLCR = 0x40,IGNCR = 0x80,ICRNL = 0x100,IXON = 0x400,IXOFF = 0x1000,IUCLC = 0x4000,IXANY = 0x8000,PARMRK = 0x10000,};
enum MACRO_ITIMER {ITIMER_REAL = 0,ITIMER_VIRTUAL = 1,ITIMER_PROF = 2,};
enum MACRO_LINESZ {LINESZ = 6,E_SYMNMLEN = 8,E_FILNMLEN = 14,};
enum MACRO_LITTLE {LITTLE_ENDIAN = 1234,};
enum MACRO_L_INCR {L_INCR = 1,L_XTND = 2,};
enum MACRO_NOFILE {NOFILE = 8192,};
enum MACRO_NSWTCH {NSWTCH = 0,CSUSP = 26,};
enum MACRO_NT_DEF {NT_DEF_COMMIT = 0x1000,};
enum MACRO_PNG_NO {PNG_NO_FILTERS = 0x0,PNG_FILTER_NONE = 0x8,PNG_FILTER_SUB = 0x10,PNG_FILTER_UP = 0x20,PNG_FILTER_AVG = 0x40,PNG_FILTER_PAETH = 0x80,PNG_ALL_FILTERS = 0xF8,};
enum MACRO_RUSAGE {RUSAGE_SELF = 0,RUSAGE_CHILDREN = -1,};
enum MACRO_SARMAG {SARMAG = 8,};
enum MACRO_SCNHSZ {SCNHSZ = 40,};
enum MACRO_SIGCLD {SIGCLD = 20,SIGTTIN = 21,SIGTTOU = 22,SIGIO = 23,};
enum MACRO_SIGHUP {SIGHUP = 1,SIGINT = 2,SIGQUIT = 3,SIGILL = 4,SIGTRAP = 5,SIGIOT = 6,};
enum MACRO_SYMESZ {SYMESZ = 18,};
enum MACRO_TCL_OK {TCL_OK = 0,TCL_ERROR = 1,TCL_RETURN = 2,TCL_BREAK = 3,TCL_CONTINUE = 4,TCL_RESULT_SIZE = 200,};
enum MACRO_TCOOFF {TCOOFF = 0,TCOON = 1,TCIOFF = 2,TCION = 3,TCGETA = 5,TCSETA = 6,TCSETAW = 7,TCSETAF = 8,};
enum MACRO_TK_TAG {TK_TAG_SPACE = 3,};
enum MACRO_Z_BEST {Z_BEST_SPEED = 1,Z_BEST_COMPRESSION = 9,Z_DEFAULT_COMPRESSION = -1,};
enum MACRO_Z_DATA {Z_DATA_ERROR = -3,};
enum MACRO_Z_NULL {Z_NULL = 0,};
enum MACRO__FOPEN {_FOPEN = -1,};
enum MACRO__FREAD {_FREAD = 0x1,_FWRITE = 0x2,_FNDELAY = 0x4,_FAPPEND = 0x8,_FMARK = 0x10,_FDEFER = 0x20,_FASYNC = 0x40,_FSHLOCK = 0x80,_FEXLOCK = 0x100,_FCREAT = 0x200,_FTRUNC = 0x400,_FEXCL = 0x800,_FNBIO = 0x1000,_FSYNC = 0x2000,_FNONBLOCK = 0x4000,_FNOCTTY = 0x8000,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,BUFSIZ = 1024,EOF = -1,};
enum MACRO__JBLEN {_JBLEN = 36,};
enum MACRO__POSIX {_POSIX_CHILD_MAX = 6,_POSIX_LINK_MAX = 8,_POSIX_MAX_CANON = 255,};
enum MACRO__USING {_USING_PROTOTYPES_ = 1,};
enum MACRO___IEEE {__IEEE_FLT_EXPBIAS = 127,};
enum MACRO___LONG {__LONG_MAX__ = 2147483647,};
enum MACRO___SLBF {__SLBF = 0x1,__SNBF = 0x2,__SRD = 0x4,__SWR = 0x8,__SRW = 0x10,__SEOF = 0x20,__SERR = 0x40,__SMBF = 0x80,__SAPP = 0x100,__SSTR = 0x200,__SOPT = 0x400,__SNPT = 0x800,__SOFF = 0x1000,__SMOD = 0x2000,};
typedef struct _2E0E2C12F04118C9E52BAE749EE378FF ScreenFormat;
typedef void Tcl_FreeProc(char *blockPtr);
enum Tcl_PathType {TCL_PATH_ABSOLUTE = 0x0,TCL_PATH_RELATIVE = 0x1,TCL_PATH_VOLUME_RELATIVE = 0x2,};
struct Tix_LinkList {int numItems;char *head;char *tail;};
struct Tix_ListInfo {int nextOffset;int prevOffset;};
typedef struct _DAE3AA21F13D443C5590C7BCADAB13AB XButtonEvent;
typedef union _D8231012D0728EC3472C30FA3109CEFA XEDataObject;
typedef struct _44C0AE5AD18E7CD0D8F56B2EE020CE64 XExposeEvent;
typedef struct _4FFA9527088137D66D8D180D61C68358 XHostAddress;
typedef struct _10F395C20BEC4113025BB1D0BA3DF492 XKeymapEvent;
typedef struct _EF6E92C885F7EBA601BD227CAE25DC00 XMotionEvent;
typedef __int32 _G_ptrdiff_t;
struct _Tix_CmdInfo {int numSubCmds;int minargc;int maxargc;char *info;};
typedef struct png_color_16_struct png_color_16;
typedef double **png_doublepp;
typedef struct png_row_info_struct png_row_info;
typedef int sig_atomic_t;
enum MACRO_Above {Above = 0,Below = 1,TopIf = 2,BottomIf = 3,Opposite = 4,};
enum MACRO_CBAUD {CBAUD = 0x100F,};
enum MACRO_CEOL2 {CEOL2 = 0,CEOF = 4,CSTART = 17,CSTOP = 19,CSWTCH = 26,};
enum MACRO_CINTR {CINTR = 3,CQUIT = 28,};
enum MACRO_DoRed {DoRed = 1,DoGreen = 2,DoBlue = 4,};
enum MACRO_EPERM {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EAGAIN = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,ENOTBLK = 15,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,EINVAL = 22,ENFILE = 23,EMFILE = 24,ENOTTY = 25,ETXTBSY = 26,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,ERANGE = 34,ENOMSG = 35,EIDRM = 36,ECHRNG = 37,EL2NSYNC = 38,EL3HLT = 39,EL3RST = 40,ELNRNG = 41,EUNATCH = 42,ENOCSI = 43,EL2HLT = 44,EDEADLK = 45,ENOLCK = 46,EBADE = 50,EBADR = 51,EXFULL = 52,ENOANO = 53,EBADRQC = 54,EBADSLT = 55,EDEADLOCK = 56,EBFONT = 57,ENOSTR = 60,ENODATA = 61,ETIME = 62,ENOSR = 63,ENONET = 64,ENOPKG = 65,EREMOTE = 66,ENOLINK = 67,EADV = 68,ESRMNT = 69,ECOMM = 70,EPROTO = 71,EMULTIHOP = 74,ELBIN = 75,EDOTDOT = 76,EBADMSG = 77,ENOTUNIQ = 80,EBADFD = 81,EREMCHG = 82,ELIBACC = 83,ELIBBAD = 84,ELIBSCN = 85,ELIBMAX = 86,ELIBEXEC = 87,ENOSYS = 88,ENMFILE = 89,ENOTEMPTY = 90,ENAMETOOLONG = 91,ELOOP = 92,EOPNOTSUPP = 95,EPFNOSUPPORT = 96,ECONNRESET = 104,ENOBUFS = 105,EAFNOSUPPORT = 106,EPROTOTYPE = 107,ENOTSOCK = 108,ENOPROTOOPT = 109,ESHUTDOWN = 110,ECONNREFUSED = 111,EADDRINUSE = 112,ECONNABORTED = 113,ENETUNREACH = 114,ENETDOWN = 115,ETIMEDOUT = 116,EHOSTDOWN = 117,EHOSTUNREACH = 118,EINPROGRESS = 119,EALREADY = 120,EDESTADDRREQ = 121,EMSGSIZE = 122,EPROTONOSUPPORT = 123,ESOCKTNOSUPPORT = 124,EADDRNOTAVAIL = 125,ENETRESET = 126,EISCONN = 127,ENOTCONN = 128,ETOOMANYREFS = 129,EPROCLIM = 130,EUSERS = 131,EDQUOT = 132,ESTALE = 133,ENOTSUP = 134,ENOMEDIUM = 135,ENOSHARE = 136,};
enum MACRO_FOPEN {FOPEN_MAX = 20,FILENAME_MAX = 1024,};
enum MACRO_FREAD {FREAD = 1,FWRITE = 2,FMARK = 16,FDEFER = 32,FSHLOCK = 128,FEXLOCK = 256,FOPEN = -1,};
enum MACRO_False {False = 0,};
enum MACRO_IMAGE {IMAGE_FILE_RELOCS_STRIPPED = 0x1,IMAGE_FILE_EXECUTABLE_IMAGE = 0x2,IMAGE_FILE_LINE_NUMS_STRIPPED = 0x4,IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x8,IMAGE_FILE_BYTES_REVERSED_LO = 0x80,IMAGE_FILE_32BIT_MACHINE = 0x100,IMAGE_FILE_DEBUG_STRIPPED = 0x200,IMAGE_FILE_SYSTEM = 0x1000,IMAGE_FILE_DLL = 0x2000,IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,};
enum MACRO_L_SET {L_SET = 0,L_CURR = 1,};
enum MACRO_OPOST {OPOST = 0x1,OLCUC = 0x2,OCRNL = 0x4,ONLCR = 0x8,ONOCR = 0x10,ONLRET = 0x20,OFILL = 0x40,CRDLY = 0x180,};
enum MACRO_RELSZ {RELSZ = 10,};
enum MACRO_SCHAR {SCHAR_MAX = 127,UCHAR_MAX = 255,CHAR_MIN = -128,};
enum MACRO_STDIN {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_TK_3D {TK_3D_FLAT_GC = 1,TK_3D_LIGHT_GC = 2,TK_3D_DARK_GC = 3,TK_NOTIFY_SHARE = 20,};
enum MACRO_ULONG {ULONG_LONG_MAX = -1,};
enum MACRO_WHEEL {WHEEL_DELTA = 120,WHEEL_PAGESCROLL = -1,};
enum MACRO_XTABS {XTABS = 0x1800,VTDLY = 0x2000,};
enum MACRO_Z_BUF {Z_BUF_ERROR = -5,};
enum MACRO_Z_MEM {Z_MEM_ERROR = -4,};
enum MACRO__IFMT {_IFMT = 0xF000,_IFDIR = 0x4000,_IFCHR = 0x2000,_IFBLK = 0x6000,_IFREG = 0x8000,_IFLNK = 0xA000,_IFSOCK = 0xC000,_IFIFO = 0x1000,};
typedef struct Tcl_Channel_ *Tcl_Channel;
typedef struct Tcl_Command_ *Tcl_Command;
struct Tcl_DString {char *string;int length;int spaceAvl;char staticSpace[200];};
typedef struct _Tix_CmdInfo Tix_CmdInfo;
typedef struct Tk_3DBorder_ *Tk_3DBorder;
typedef struct _65881570D1BE40B63EE4A0C2B392A1BC Tk_ArgvInfo;
typedef struct _53996C97E395EF20FC508697C3EEF92C XCharStruct;
typedef struct _94ACE20E5FEED38F4BC574FBC8AC4DA0 XErrorEvent;
typedef struct _B36C03EE0DB03800CDBEDA1CF8CFFD5F XFontStruct;
typedef struct _E1655291D14CE59495117F42FECB583D XIMCallback;
typedef unsigned __int32 XIMFeedback;
typedef struct _648D5B97A5A1D2D2729A4C51B6643734 XTextItem16;
typedef struct _6EA1208F05D799B306741A1D21B7D8A7 XUnmapEvent;
typedef struct _9C224668B7E64BE6AE9499E6FD772938 XmbTextItem;
typedef struct _4D69B6347F056FE268056727CEA155AA XwcTextItem;
typedef unsigned __int32 _G_sigset_t;
typedef unsigned __int16 _G_uint16_t;
typedef unsigned int _G_uint32_t;
enum bfd_boolean {false = 0x0,true = 0x1,};
enum bfd_flavour {bfd_target_unknown_flavour = 0x0,bfd_target_aout_flavour = 0x1,bfd_target_coff_flavour = 0x2,bfd_target_ecoff_flavour = 0x3,bfd_target_elf_flavour = 0x4,bfd_target_ieee_flavour = 0x5,bfd_target_nlm_flavour = 0x6,bfd_target_oasys_flavour = 0x7,bfd_target_tekhex_flavour = 0x8,bfd_target_srec_flavour = 0x9,bfd_target_ihex_flavour = 0xA,bfd_target_som_flavour = 0xB,bfd_target_os9k_flavour = 0xC,bfd_target_versados_flavour = 0xD,bfd_target_msdos_flavour = 0xE,bfd_target_ovax_flavour = 0xF,bfd_target_evax_flavour = 0x10,};
typedef char ***png_charppp;
typedef struct png_color_8_struct png_color_8;
typedef double *png_doublep;
typedef unsigned __int16 png_uint_16;
typedef unsigned __int32 png_uint_32;
struct pthread_key {char dummy[];};
struct sockaddr_un {unsigned __int16 sun_family;char sun_path[108];};
typedef struct _symbol_info symbol_info;
typedef void *ClientData;
enum MACRO_ANSI {ANSI_PROTOTYPES = 1,};
enum MACRO_BYTE {BYTE_ORDER = 1234,};
enum MACRO_CEOL {CEOL = 0,};
enum MACRO_CEOT {CEOT = 4,};
enum MACRO_CESC {CESC = 92,};
enum MACRO_CHAR {CHAR_BIT = 8,};
enum MACRO_CNUL {CNUL = 0,CDEL = 127,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_FORK {FORK_RELOAD = 1,FORK_NO_RELOAD = 0,};
enum MACRO_FP_X {FP_X_OFL = 0x4,FP_X_UFL = 0x2,FP_X_IMP = 0x1,FP_RDI_TOZ = 0x0,};
enum MACRO_F_OK {F_OK = 0,R_OK = 4,};
enum MACRO_GLOB {GLOB_APPEND = 0x1,GLOB_DOOFFS = 0x2,GLOB_ERR = 0x4,GLOB_MARK = 0x8,GLOB_NOCHECK = 0x10,GLOB_NOSORT = 0x20,GLOB_ALTDIRFUNC = 0x40,GLOB_BRACE = 0x80,GLOB_MAGCHAR = 0x100,GLOB_NOMAGIC = 0x200,GLOB_QUOTE = 0x400,GLOB_TILDE = 0x800,GLOB_NOSPACE = 0xFFFFFFFF,};
enum MACRO_INIT {INIT_PROCESS = 5,LOGIN_PROCESS = 6,USER_PROCESS = 7,DEAD_PROCESS = 8,};
enum MACRO_ISIG {ISIG = 0x1,ICANON = 0x2,ECHO = 0x4,ECHOE = 0x8,ECHOK = 0x10,ECHONL = 0x20,NOFLSH = 0x40,TOSTOP = 0x80,IEXTEN = 0x100,FLUSHO = 0x200,ECHOKE = 0x400,ECHOCTL = 0x800,};
enum MACRO_LONG {LONG_MAX = 2147483647,ULONG_MAX = -1,};
enum MACRO_NBBY {NBBY = 8,FD_SETSIZE = 64,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_None {None = 0,ParentRelative = 1,};
enum MACRO_PATH {PATH_MAX = 259,};
enum MACRO_PROT {PROT_NONE = 0,PROT_READ = 1,PROT_WRITE = 2,PROT_EXEC = 4,};
enum MACRO_RAND {RAND_MAX = 0x7FFFFFFF,};
enum MACRO_RTLD {RTLD_LAZY = 1,RTLD_NOW = 2,RTLD_GLOBAL = 4,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,TMP_MAX = 26,};
enum MACRO_SHRT {SHRT_MAX = 32767,USHRT_MAX = 65535,__INT_MAX__ = 2147483647,};
enum MACRO_TAB0 {TAB0 = 0x0,TAB1 = 0x800,TAB2 = 0x1000,TAB3 = 0x1800,};
enum MACRO_True {True = 1,};
enum MACRO_UNIX {UNIX_PATH_LEN = 108,};
enum MACRO_WAIT {WAIT_CHILD = 1,};
enum MACRO_X_OK {X_OK = 1,};
enum MACRO_Z_OK {Z_OK = 0,Z_STREAM_END = 1,Z_NEED_DICT = 2,Z_ERRNO = -1,};
struct Tcl_Interp {char *result;void (*freeProc)(char *blockPtr);int errorLine;};
typedef struct Tcl_RegExp_ *Tcl_RegExp;
typedef int Tix_Relief;
typedef struct _841354712BEA89ED461350FE22A001AB Tix_TclCmd;
typedef struct _CA1CD5B08005403884A7641019451813 XRectangle;
typedef struct _58058F4C4926147A1BF935BBE1E04307 XTimeCoord;
typedef unsigned __int32 _G_clock_t;
typedef __int16 _G_int16_t;
typedef int _G_int32_t;
typedef unsigned __int16 _G_nlink_t;
typedef __int32 _G_ssize_t;
typedef void *_G_va_list;
typedef unsigned __int16 _G_wchar_t;
typedef unsigned int __uint32_t;
enum bfd_endian {BFD_ENDIAN_BIG = 0x0,BFD_ENDIAN_LITTLE = 0x1,BFD_ENDIAN_UNKNOWN = 0x2,};
enum bfd_format {bfd_unknown = 0x0,bfd_object = 0x1,bfd_archive = 0x2,bfd_core = 0x3,bfd_type_end = 0x4,};
typedef struct _bfd_window bfd_window;
struct ecoff_extr;
typedef char **png_charpp;
typedef __int16 png_int_16;
typedef __int32 png_int_32;
typedef struct png_sPLT_struct png_sPLT_t;
typedef struct png_struct_def png_struct;
enum MACRO_BFD {BFD_ARCH_SIZE = 32,BFD_HOST_64BIT_LONG = 0,};
enum MACRO_BIG {BIG_ENDIAN = 4321,};
enum MACRO_BS0 {BS0 = 0x0,BS1 = 0x400,TABDLY = 0x1800,};
enum MACRO_BSF {BSF_NO_FLAGS = 0x0,BSF_LOCAL = 0x1,BSF_GLOBAL = 0x2,};
enum MACRO_CLK {CLK_TCK = 1000,};
enum MACRO_CR0 {CR0 = 0x0,CR1 = 0x80,CR2 = 0x100,CR3 = 0x180,NLDLY = 0x200,};
enum MACRO_CS5 {CS5 = 0x0,CS6 = 0x10,CS7 = 0x20,CS8 = 0x30,CSTOPB = 0x40,CREAD = 0x80,PARENB = 0x100,PARODD = 0x200,HUPCL = 0x400,CLOCAL = 0x800,CBAUDEX = 0x100F,};
enum MACRO_CWX {CWX = 1,CWY = 2,CWWidth = 4,CWHeight = 8,CWBorderWidth = 16,CWSibling = 32,CWStackMode = 64,};
enum MACRO_FF0 {FF0 = 0x0,FF1 = 0x4000,OFDEL = 0x8000,};
enum MACRO_INT {INT_MAX = 2147483647,UINT_MAX = -1,};
enum MACRO_IOV {IOV_MAX = 2147483646,SSIZE_MAX = 2147483647,};
enum MACRO_LOG {LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,};
enum MACRO_MAP {MAP_FILE = 0,MAP_SHARED = 1,MAP_PRIVATE = 2,MAP_TYPE = 15,MAP_FIXED = 16,MAP_ANONYMOUS = 32,};
enum MACRO_MAX {MAX_MEM_LEVEL = 9,MAX_WBITS = 15,};
enum MACRO_NL0 {NL0 = 0x0,NL1 = 0x200,BSDLY = 0x400,};
enum MACRO_PNG {PNG_ZBUF_SIZE = 8192,};
enum MACRO_SEC {SEC_NO_FLAGS = 0x0,SEC_ALLOC = 0x1,SEC_LOAD = 0x2,SEC_RELOC = 0x4,SEC_READONLY = 0x10,SEC_CODE = 0x20,SEC_DATA = 0x40,SEC_ROM = 0x80,SEC_CONSTRUCTOR = 0x100,SEC_CONSTRUCTOR_TEXT = 0x1100,SEC_CONSTRUCTOR_DATA = 0x2100,SEC_CONSTRUCTOR_BSS = 0x3100,};
enum MACRO_SIG {SIG_SETMASK = 0,SIG_BLOCK = 1,SIG_UNBLOCK = 2,};
enum MACRO_TCL {TCL_MAJOR_VERSION = 8,TCL_MINOR_VERSION = 0,};
enum MACRO_TIX {TIX_STDIN_ALWAYS = 0,TIX_STDIN_OPTIONAL = 1,TIX_STDIN_NONE = 2,};
enum MACRO_USE {USE_TCLALLOC = 1,};
enum MACRO_VT0 {VT0 = 0x0,VT1 = 0x2000,FFDLY = 0x4000,};
enum MACRO__PC {_PC_LINK_MAX = 0,_PC_MAX_CANON = 1,_PC_MAX_INPUT = 2,_PC_NAME_MAX = 3,_PC_PATH_MAX = 4,_PC_PIPE_BUF = 5,_PC_CHOWN_RESTRICTED = 6,_PC_NO_TRUNC = 7,_PC_VDISABLE = 8,_PC_ASYNC_IO = 9,_PC_PRIO_IO = 10,_PC_SYNC_IO = 11,MAXNAMLEN = 1024,};
enum MACRO__SC {_SC_ARG_MAX = 0,_SC_CHILD_MAX = 1,_SC_CLK_TCK = 2,_SC_NGROUPS_MAX = 3,_SC_OPEN_MAX = 4,_SC_JOB_CONTROL = 5,_SC_SAVED_IDS = 6,_SC_VERSION = 7,_SC_PAGESIZE = 8,};
enum MACRO_bfd {bfd_mach_m68000 = 1,bfd_mach_m68008 = 2,bfd_mach_m68010 = 3,bfd_mach_m68020 = 4,bfd_mach_m68030 = 5,bfd_mach_m68040 = 6,bfd_mach_m68060 = 7,bfd_mach_cpu32 = 8,};
typedef struct _0537E486A32D586768D898FB6E409606 PEAOUTHDR;
typedef struct Tcl_Trace_ *Tcl_Trace;
typedef struct Tk_Canvas_ *Tk_Canvas;
typedef struct Tk_Cursor_ *Tk_Cursor;
typedef struct Tk_Window_ *Tk_Window;
typedef struct _B6E7D1C43482AAA4EB74B93FC1D2BC12 XAnyEvent;
typedef struct _BEA3E970906BDE5578391186783FC521 XExtCodes;
typedef struct _4928972DC66A9F7C89D199795A4AF315 XFontProp;
typedef struct _C459D5BB7F5319395AB9822D9CBB3596 XGCValues;
typedef struct _DD1A60F664AD301361B26C5800787B5E XIMStyles;
typedef struct _F9A51504D7BB963C3403412F22DA7A8A XKeyEvent;
typedef struct _C8CD1AC7BB16F52EEB6B35007FE94FA3 XMapEvent;
typedef struct _636E06EF14FC653C9FA755BCE21D4A3F XTextItem;
typedef __int32 _G_fpos_t;
typedef int _G_mode_t;
typedef unsigned __int32 _G_size_t;
typedef __int32 _G_time_t;
typedef unsigned int _G_wint_t;
typedef int __int32_t;
enum bfd_error {bfd_error_no_error = 0x0,bfd_error_system_call = 0x1,bfd_error_invalid_target = 0x2,bfd_error_wrong_format = 0x3,bfd_error_invalid_operation = 0x4,bfd_error_no_memory = 0x5,bfd_error_no_symbols = 0x6,bfd_error_no_armap = 0x7,bfd_error_no_more_archived_files = 0x8,bfd_error_malformed_archive = 0x9,bfd_error_file_not_recognized = 0xA,bfd_error_file_ambiguously_recognized = 0xB,bfd_error_no_contents = 0xC,bfd_error_nonrepresentable_section = 0xD,bfd_error_no_debug_section = 0xE,bfd_error_bad_value = 0xF,bfd_error_file_truncated = 0x10,bfd_error_file_too_big = 0x11,bfd_error_invalid_error_code = 0x12,};
struct exception {int type;char *name;double arg1;double arg2;double retval;int err;};
typedef int fp_except;
typedef unsigned __int16 otcflag_t;
typedef char *png_charp;
typedef struct png_color_struct png_color;
typedef void *png_voidp;
typedef int pthread_t;
typedef __int32 ptrdiff_t;
typedef struct stat stat_type;
enum MACRO_B0 {B0 = 0x0,B50 = 0x1,B75 = 0x2,B110 = 0x3,B134 = 0x4,B150 = 0x5,B200 = 0x6,B300 = 0x7,B600 = 0x8,B1200 = 0x9,B1800 = 0xA,B2400 = 0xB,B4800 = 0xC,B9600 = 0xD,B19200 = 0xE,B38400 = 0xF,CSIZE = 0x30,};
enum MACRO_DT {DT_NON = 0,DT_PTR = 1,DT_FCN = 2,DT_ARY = 3,};
enum MACRO_FD {FD_CLOEXEC = 1,F_DUPFD = 0,};
enum MACRO_FP {FP_RN = 0,FP_RM = 1,FP_RP = 2,FP_RZ = 3,FP_X_INV = 16,FP_X_DX = 128,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,};
enum MACRO_MB {MB_LEN_MAX = 1,SCHAR_MIN = -128,};
enum MACRO_MS {MS_ASYNC = 1,MS_SYNC = 2,MS_INVALIDATE = 4,};
enum MACRO_NT {NT_FILE_ALIGNMENT = 0x200,NT_DEF_RESERVE = 0x100000,};
enum MACRO_SA {SA_NOCLDSTOP = 1,};
enum MACRO_TK {TK_MAJOR_VERSION = 8,TK_MINOR_VERSION = 0,};
enum MACRO_UT {UT_LINESIZE = 16,};
enum MACRO__G {_G_NAMES_HAVE_UNDERSCORE = 1,};
enum MACRO__N {_N_LISTS = 30,};
enum MACRO__P {_P_WAIT = 1,_P_NOWAIT = 2,_P_OVERLAY = 3,_P_NOWAITO = 4,_P_DETACH = 5,};
enum MACRO__U {_U = 0x1,_L = 0x2,_N = 0x4,_S = 0x8,_P = 0x10,_C = 0x20,_X = 0x40,_B = 0x80,};
enum MACRO_no {no_argument = 0,required_argument = 1,optional_argument = 2,};
struct Tcl_Time {__int32 sec;__int32 usec;};
typedef struct Tk_Image__ *Tk_Image;
typedef unsigned __int32 VisualID;
typedef struct _XExtData XExtData;
typedef struct _XFontSet *XFontSet;
typedef unsigned __int32 XIMStyle;
typedef char *XPointer;
typedef struct _335EDB02744B103283B800FF919FC940 XSegment;
typedef __int16 _G_dev_t;
typedef unsigned __int16 _G_gid_t;
typedef unsigned __int32 _G_ino_t;
typedef __int32 _G_off_t;
typedef int _G_pid_t;
typedef unsigned __int16 _G_uid_t;
typedef __int32 _ssize_t;
typedef struct sec asection;
typedef unsigned __int8 bfd_byte;
typedef __int32 file_ptr;
typedef unsigned int flagword;
struct mallinfo {int arena;int ordblks;int smblks;int hblks;int hblkhd;int usmblks;int fsmblks;int uordblks;int fordblks;int keepcost;};
typedef unsigned __int8 ospeed_t;
typedef unsigned __int8 png_byte;
typedef struct png_info_struct png_info;
typedef struct png_text_struct png_text;
typedef struct png_time_struct png_time;
typedef unsigned __int32 sigset_t;
typedef unsigned __int32 symindex;
typedef unsigned __int32 symvalue;
typedef unsigned int tcflag_t;
struct timezone {int tz_minuteswest;int tz_dsttime;};
typedef struct z_stream_s z_stream;
typedef struct _00AF5B8D22378749F06B80D45FA27023 AOUTHDR;
typedef struct _XDisplay Display;
typedef unsigned __int16 KeyCode;
enum MACRO_E {E_DIMNUM = 4,N_BTMASK = 15,N_TMASK = 48,};
enum MACRO_F {F_RELFLG = 0x1,F_EXEC = 0x2,F_LNNO = 0x4,F_LSYMS = 0x8,I386MAGIC = 0x14C,I386PTXMAGIC = 0x154,I386AIXMAGIC = 0x175,};
enum MACRO_L {L_tmpnam = 1024,};
enum MACRO_N {N_BTSHFT = 4,N_TSHIFT = 2,};
enum MACRO_O {O_RDONLY = 0,O_WRONLY = 1,O_RDWR = 2,O_APPEND = 8,O_CREAT = 512,O_TRUNC = 1024,O_EXCL = 2048,O_NONBLOCK = 16384,O_NOCTTY = 32768,O_SYNC = 8192,};
enum MACRO_S {S_BLKSIZE = 1024,S_ISUID = 2048,};
enum MACRO_W {W_OK = 2,};
enum MACRO_X {X_PROTOCOL = 11,X_PROTOCOL_REVISION = 0,};
enum MACRO_Z {Z_NO_FLUSH = 0,Z_PARTIAL_FLUSH = 1,Z_SYNC_FLUSH = 2,Z_FULL_FLUSH = 3,Z_FINISH = 4,};
enum MACRO__ {__MINGW32_MAJOR_VERSION = 0,__MINGW32_MINOR_VERSION = 3,};
typedef struct Tcl_Pid_ *Tcl_Pid;
typedef struct Tcl_Var_ *Tcl_Var;
typedef struct Tk_Font_ *Tk_Font;
typedef struct _691123D744001B8BE68B84780CEE447C XChar2b;
typedef void (*XIMProc)();
typedef struct _XIMText XIMText;
struct _atexit {struct _atexit *_next;int _ind;void (**_fns)(void);};
typedef __int32 _fpos_t;
typedef struct reloc_cache_entry arelent;
typedef struct symbol_cache_entry asymbol;
typedef unsigned __int32 bfd_vma;
typedef char *caddr_t;
typedef unsigned __int32 clock_t;
typedef __int32 daddr_t;
typedef __int32 fd_mask;
typedef int jmp_buf[36];
struct lastlog {__int32 ll_time;char ll_line[16];char ll_host[256];};
typedef unsigned __int16 nlink_t;
typedef struct sec *sec_ptr;
typedef unsigned int speed_t;
typedef __int32 ssize_t;
struct timeval {__int32 tv_sec;__int32 tv_usec;};
typedef unsigned __int16 u_short;
struct utsname {char sysname[20];char nodename[20];char release[20];char version[20];char machine[20];};
#define wchar_t int
struct winsize {unsigned __int16 ws_row;unsigned __int16 ws_col;unsigned __int16 ws_xpixel;unsigned __int16 ws_ypixel;};
typedef struct _C4AEAB15D2203863A55B0BEA2C0AE902 Screen;
typedef char *Tk_Uid;
typedef struct _FD02BCD3D36054250A4B3393D3E26B85 Visual;
typedef struct _86667C1762D2D3E70596A778BAFE84E4 XColor;
typedef union _XEvent XEvent;
typedef struct _XImage XImage;
typedef struct _13C78DD7EDF1CF1C4AE9B0D54E891AA2 XPoint;
struct __sbuf {unsigned __int8 *_base;int _size;};
typedef __int32 _off_t;
struct ar_hdr {char ar_name[16];char ar_date[12];char ar_uid[6];char ar_gid[6];char ar_mode[8];char ar_size[10];char ar_fmag[2];};
struct eflock {__int16 l_type;__int16 l_whence;__int32 l_start;__int32 l_len;__int16 l_pid;__int16 l_xxx;__int32 l_rpid;__int32 l_rsys;};
typedef int fp_rdi;
typedef int fp_rnd;
typedef struct _131D38613E106C9AC3A1755E823A1D2A glob_t;
typedef struct _B8243ED19B76CA5D55F9F69ED1E7C09F ldiv_t;
struct mntent {char *mnt_fsname;char *mnt_dir;char *mnt_type;char *mnt_opts;int mnt_freq;int mnt_passno;};
typedef unsigned int mode_t;
struct option {char *name;int has_arg;int *flag;int val;};
struct passwd {char *pw_name;char *pw_passwd;int pw_uid;int pw_gid;char *pw_comment;char *pw_gecos;char *pw_dir;char *pw_shell;};
struct regexp {char *startp[10];char *endp[10];char regstart;char reganch;char *regmust;int regmlen;char program[1];};
typedef unsigned __int32 size_t;
struct statfs {__int32 f_type;__int32 f_bsize;__int32 f_blocks;__int32 f_bfree;__int32 f_bavail;__int32 f_files;__int32 f_ffree;__int32 f_fsid;__int32 f_namelen;__int32 f_spare[6];};
typedef __int32 time_t;
typedef unsigned __int8 u_char;
typedef unsigned __int32 u_long;
typedef unsigned __int16 ushort;
typedef void *voidpf;
typedef unsigned int wint_t;
typedef struct _470449F8043B0E95436C3AE3811CEA11 Depth;
typedef signed __int16 __s16;
typedef signed int __s32;
typedef unsigned __int16 __u16;
typedef unsigned int __u32;
struct _glue {struct _glue *_next;int _niobs;struct _glue____sFILE *_iobs;};
typedef struct lineno_cache_entry alent;
typedef char charf;
typedef __int16 dev_t;
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 div_t;
struct flock {__int16 l_type;__int16 l_whence;__int32 l_start;__int32 l_len;__int16 l_pid;__int16 l_xxx;};
typedef unsigned __int16 gid_t;
typedef unsigned __int16 ino_t;
typedef __int32 key_t;
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;};
typedef __int32 off_t;
typedef int pid_t;
typedef int sem_t;
typedef unsigned __int32 uLong;
typedef unsigned int u_int;
typedef unsigned __int16 uid_t;
typedef void *voidp;
typedef unsigned __int32 Atom;
typedef unsigned __int8 Byte;
typedef struct __sFILE FILE;
typedef unsigned __int32 Mask;
typedef unsigned __int32 Time;
typedef struct _3ACF1F82BEC6DEE83FE33E625399BBD7 XArc;
typedef signed __int8 __s8;
typedef unsigned __int8 __u8;
typedef unsigned __int8 cc_t;
typedef int intf;
typedef unsigned int uInt;
typedef unsigned int uint;
typedef struct _3FCF69940D5137EFCDD98B7A8215A7C6 DIR;
typedef struct _XIC *XIC;
typedef unsigned __int32 XID;
typedef struct _XIM *XIM;
typedef struct _bfd bfd;
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;};
struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___1ADB066DD678F2136218A187EC87FF85 {bfd *abfd;};
struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___C1BF8984E6DA1F78690EAB93CC81E9DD {bfd_size_type size;struct bfd_link_hash_entry______C1BF8984E6DA1F78690EAB93CC81E9DD__bfd_link_hash_common_entry *p;};
struct bfd_link_hash_entry______C1BF8984E6DA1F78690EAB93CC81E9DD__bfd_link_hash_common_entry {unsigned int alignment_power;asection *section;};
union external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27___87BDFA010CEB01ACC354401785794A14 {struct external_auxent______87BDFA010CEB01ACC354401785794A14___6A81AB9DD74A0937A06BA2C0FB9C8664 x_lnsz;unsigned __int32 x_fsize;};
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___20472B6430190B13548BE45EDDAD6B8B {asection *section;};
struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___4E37357BA75158182C6C9FE7D3AF1690 {bfd_byte *contents;};
struct _reent___86B6AAFCC3A560694C605557E707E6BE___571F2125BC9AA5087DD4C4D164151B9B {unsigned int _rand_next;char *_strtok_last;char _asctime_buf[26];struct tm _localtime_buf;int _gamma_signgam;};
union bfd_link_order_reloc___B1652E1B2D42B7B6BC287CA32D4604B8 {asection *section;const char *name;};
union symbol_cache_entry___B9E77FD0681C1335DBAA9A65240EEB16 {void *p;bfd_vma i;};
union external_auxent___218D1EF8CDD5DC3457D7F4C589050F96 {char x_fname[14];struct external_auxent___218D1EF8CDD5DC3457D7F4C589050F96___582C8EBC9F634712D800A8EC53B1E0EA x_n;};
union external_syment___95F5B714D0994531E901AA8A8C444E03 {char e_name[8];struct external_syment___95F5B714D0994531E901AA8A8C444E03___7E2C7DBEAC0FAEB0F78A4DFF1059C9EC e;};
struct _XDisplay___40E717ABED307E15FC65B9096F5C7074 {XPointer defaultCCCs;XPointer clientCmaps;XPointer perVisualIntensityMaps;};
union _XIMText___8281806D2C2C5E9220BA18F83AF5F330 {char *multi_byte;wchar_t *wide_char;};
union Tcl_Obj___8B7172FD90B7CDB67AF06E0C3918BAD0 {__int32 longValue;double doubleValue;void *otherValuePtr;struct Tcl_Obj___8B7172FD90B7CDB67AF06E0C3918BAD0___5F78906DFCD19F4F0601C4695135A9CD twoPtrValue;};
struct _2E0E2C12F04118C9E52BAE749EE378FF {XExtData *ext_data;int depth;int bits_per_pixel;int scanline_pad;};
struct _470449F8043B0E95436C3AE3811CEA11 {int depth;int nvisuals;Visual *visuals;};
struct _4928972DC66A9F7C89D199795A4AF315 {Atom name;unsigned __int32 card32;};
struct _58058F4C4926147A1BF935BBE1E04307 {Time time;__int16 x;__int16 y;};
struct _64419251F3172C7227A52AC30EAD3C9D {int max_keypermod;KeyCode *modifiermap;};
struct _6BA9BAD34CD581FCA2A7610248080448 {XRectangle max_ink_extent;XRectangle max_logical_extent;};
struct _841354712BEA89ED461350FE22A001AB {char *name;int (*cmdProc)(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);};
struct _9C224668B7E64BE6AE9499E6FD772938 {char *chars;int nchars;int delta;XFontSet font_set;};
struct _DD1A60F664AD301361B26C5800787B5E {unsigned __int16 count_styles;XIMStyle *supported_styles;};
struct _XIMPreeditDrawCallbackStruct {int caret;int chg_first;int chg_length;XIMText *text;};
typedef enum bfd_reloc_code_real bfd_reloc_code_real_type;
typedef int Tcl_DriverBlockModeProc(ClientData instanceData, int mode);
typedef int Tcl_DriverGetHandleProc(ClientData instanceData, int direction, ClientData *handlePtr);
typedef int Tcl_DriverGetOptionProc(ClientData instanceData, Tcl_Interp *interp, char *optionName, Tcl_DString *dsPtr);
typedef int Tcl_DriverSetOptionProc(ClientData instanceData, Tcl_Interp *interp, char *optionName, char *value);
typedef void Tcl_NamespaceDeleteProc(ClientData clientData);
typedef int Tk_ImageStringReadProc(Tcl_Interp *interp, Tcl_Obj *dataObj, char *formatString, Tk_PhotoHandle imageHandle, int destX, int destY, int width, int height, int srcX, int srcY);
typedef int Tk_ImageFileMatchProc(Tcl_Channel chan, char *fileName, char *formatString, int *widthPtr, int *heightPtr);
typedef int Tk_ItemPostscriptProc(Tcl_Interp *interp, Tk_Canvas canvas, Tk_Item *itemPtr, int prepass);
typedef enum bfd_print_symbol bfd_print_symbol_type;
typedef enum bfd_reloc_status bfd_reloc_status_type;
struct png_sPLT_entry_struct {png_uint_16 red;png_uint_16 green;png_uint_16 blue;png_uint_16 alpha;png_uint_16 frequency;};
typedef int Tcl_DriverOutputProc(ClientData instanceData, char *buf, int toWrite, int *errorCodePtr);
typedef void Tcl_InterpDeleteProc(ClientData clientData, Tcl_Interp *interp);
typedef int Tk_ItemConfigureProc(Tcl_Interp *interp, Tk_Canvas canvas, Tk_Item *itemPtr, int argc, char **argv, int flags);
typedef int Tk_ItemSelectionProc(Tk_Canvas canvas, Tk_Item *itemPtr, int offset, char *buffer, int maxBytes);
typedef void Tk_ItemTranslateProc(Tk_Canvas canvas, Tk_Item *itemPtr, double deltaX, double deltaY);
typedef XButtonEvent XButtonReleasedEvent;
struct bfd_link_needed_list {struct bfd_link_needed_list *next;bfd *by;const char *name;};
typedef int Tcl_DriverCloseProc(ClientData instanceData, Tcl_Interp *interp);
typedef int Tcl_DriverInputProc(ClientData instanceData, char *buf, int toRead, int *errorCodePtr);
typedef void Tcl_DriverWatchProc(ClientData instanceData, int mask);
typedef int Tcl_EventDeleteProc(Tcl_Event *evPtr, ClientData clientData);
typedef void Tk_ImageChangedProc(ClientData clientData, int x, int y, int width, int height, int imageWidth, int imageHeight);
typedef XButtonEvent XButtonPressedEvent;
struct bfd_link_hash_table {struct bfd_hash_table table;const bfd_target *creator;struct bfd_link_hash_entry *undefs;struct bfd_link_hash_entry *undefs_tail;};
typedef png_unknown_chunk **png_unknown_chunkpp;
typedef int Tcl_DriverSeekProc(ClientData instanceData, __int32 offset, int mode, int *errorCodePtr);
typedef void Tcl_EventCheckProc(ClientData clientData, int flags);
typedef void Tcl_EventSetupProc(ClientData clientData, int flags);
typedef void Tk_ImageDeleteProc(ClientData masterData);
typedef XMotionEvent XPointerMovedEvent;
struct lineno_cache_entry {unsigned int line_number;union lineno_cache_entry___026CDB5FE14FF191358A838FC43EE3B7 u;};
struct png_color_8_struct {png_byte red;png_byte green;png_byte blue;png_byte gray;png_byte alpha;};
typedef png_unknown_chunk *png_unknown_chunkp;
typedef void Tcl_CmdDeleteProc(ClientData clientData);
typedef enum _7DE6A019FB8D510204474F438D93B845 Tcl_QueuePosition;
typedef int (*Tix_CheckArgvProc)(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
typedef int Tk_ItemCreateProc(Tcl_Interp *interp, Tk_Canvas canvas, Tk_Item *itemPtr, int argc, char **argv);
typedef void Tk_ItemCursorProc(Tk_Canvas canvas, Tk_Item *itemPtr, int index);
typedef void Tk_ItemDCharsProc(Tk_Canvas canvas, Tk_Item *itemPtr, int first, int last);
typedef void Tk_ItemInsertProc(Tk_Canvas canvas, Tk_Item *itemPtr, int beforeThis, char *string);
typedef enum _F413FB130807CE2045080C3C00838D77 Tk_RestrictAction;
typedef XCrossingEvent XEnterWindowEvent;
typedef enum _DB4B60BC3E5D47BB5823C48350265A79 XIMCaretDirection;
typedef enum _B539734676A04848B68060D6D483E0A0 XIMStatusDataType;
typedef XKeyEvent XKeyReleasedEvent;
typedef XCrossingEvent XLeaveWindowEvent;
typedef void Tcl_FileFreeProc(ClientData clientData);
typedef char *Tcl_VarTraceProc(ClientData clientData, Tcl_Interp *interp, char *part1, char *part2, int flags);
typedef int Tk_ItemCoordProc(Tcl_Interp *interp, Tk_Canvas canvas, Tk_Item *itemPtr, int argc, char **argv);
typedef int Tk_ItemIndexProc(Tcl_Interp *interp, Tk_Canvas canvas, Tk_Item *itemPtr, char *indexString, int *indexPtr);
typedef double Tk_ItemPointProc(Tk_Canvas canvas, Tk_Item *itemPtr, double *pointPtr);
typedef void Tk_ItemScaleProc(Tk_Canvas canvas, Tk_Item *itemPtr, double originX, double originY, double scaleX, double scaleY);
typedef int Tk_SelectionProc(ClientData clientData, int offset, char *buffer, int maxBytes);
typedef XActivateDeactivateEvent XDeactivateEvent;
typedef XKeyEvent XKeyPressedEvent;
struct png_color_struct {png_byte red;png_byte green;png_byte blue;};
typedef png_sPLT_entry **png_sPLT_entrypp;
typedef void Tcl_ChannelProc(ClientData clientData, int mask);
typedef int Tk_ItemAreaProc(Tk_Canvas canvas, Tk_Item *itemPtr, double *rectPtr);
typedef int (*XIOErrorHandler)(Display *);
struct external_lineno {union external_lineno___D7CB6E8C66A356212467B1896FDD390A l_addr;unsigned __int16 l_lnno;};
struct external_syment {union external_syment___95F5B714D0994531E901AA8A8C444E03 e;unsigned __int32 e_value;unsigned __int16 e_scnum;unsigned __int16 e_type;char e_sclass[1];char e_numaux[1];};
typedef png_int_32 png_fixed_point;
typedef png_sPLT_entry *png_sPLT_entryp;
typedef int Tcl_ObjCmdProc(ClientData clientData, Tcl_Interp *interp, int objc, struct Tcl_Obj *const *objv);
typedef int (*Tix_SubCmdProc)(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
typedef void Tk_LostSelProc(ClientData clientData);
typedef XActivateDeactivateEvent XActivateEvent;
typedef XFocusChangeEvent XFocusOutEvent;
typedef enum bfd_error bfd_error_type;
typedef png_color_16 **png_color_16pp;
typedef png_row_info **png_row_infopp;
typedef int Tcl_AsyncProc(ClientData clientData, Tcl_Interp *interp, int code);
typedef void Tcl_CloseProc(ClientData data);
typedef void Tcl_TimerProc(ClientData clientData);
typedef enum _75C8E7CA27BE1E0F4E6BF64D1993A788 Tcl_ValueType;
typedef int Tk_GetSelProc(ClientData clientData, Tcl_Interp *interp, char *portion);
typedef XFocusChangeEvent XFocusInEvent;
typedef enum _B64C39E2ADABB22C50C1D912F1D253CC XIMCaretStyle;
struct _types_fd_set {fd_mask fds_bits[2];};
typedef png_color_16 *png_color_16p;
typedef png_color_8 **png_color_8pp;
typedef png_row_info *png_row_infop;
typedef png_uint_16 **png_uint_16pp;
typedef png_uint_32 **png_uint_32pp;
typedef void Tcl_ExitProc(ClientData clientData);
typedef void Tcl_FileProc(ClientData clientData, int mask);
typedef void Tcl_IdleProc(ClientData clientData);
typedef int Tcl_MathProc(ClientData clientData, Tcl_Interp *interp, Tcl_Value *args, Tcl_Value *resultPtr);
struct _symbol_info {symvalue value;char type;const char *name;unsigned __int8 stab_type;char stab_other;__int16 stab_desc;const char *stab_name;};
typedef png_color_8 *png_color_8p;
typedef png_int_16 **png_int_16pp;
typedef png_int_32 **png_int_32pp;
typedef png_sPLT_t **png_sPLT_tpp;
typedef png_struct **png_structpp;
typedef png_uint_16 *png_uint_16p;
typedef png_uint_32 *png_uint_32p;
typedef z_stream *png_zstreamp;
struct pthread_attr {size_t stacksize;};
struct relent_chain {arelent relent;struct relent_chain *next;};
typedef int Tcl_CmdProc(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
typedef int (*Tix_CmdProc)(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
struct _bfd_window {void *data;bfd_size_type size;struct _bfd_window_internal *i;};
typedef png_color **png_colorpp;
typedef png_int_16 *png_int_16p;
typedef png_int_32 *png_int_32p;
typedef png_sPLT_t *png_sPLT_tp;
typedef png_struct *png_structp;
typedef charf **png_zcharpp;
typedef enum _D75A9F50BEFC37ED2CAAB9E825B0AC13 Tk_Justify;
typedef png_byte **png_bytepp;
typedef png_color *png_colorp;
typedef png_info **png_infopp;
typedef size_t png_size_t;
typedef png_text **png_textpp;
typedef png_time **png_timepp;
typedef charf *png_zcharp;
struct Tcl_Event {Tcl_EventProc *proc;struct Tcl_Event *nextPtr;};
struct Tcl_Value {Tcl_ValueType type;__int32 intValue;double doubleValue;};
typedef enum _5252AF58AF7525DA13AA82FD1F51B9F5 Tk_Anchor;
struct _XExtData {int number;struct _XExtData *next;int (*free_private)();XPointer private_data;};
typedef void (*free_func)(voidpf opaque, voidpf address);
struct itimerval {struct timeval it_interval;struct timeval it_value;};
typedef png_byte *png_bytep;
typedef png_info *png_infop;
typedef png_text *png_textp;
typedef png_time *png_timep;
struct sigaction {void (*sa_handler)(int);sigset_t sa_mask;int sa_flags;};
typedef z_stream *z_streamp;
typedef XID Colormap;
typedef XID Drawable;
typedef XID GContext;
struct Tcl_Obj {int refCount;char *bytes;int length;Tcl_ObjType *typePtr;union Tcl_Obj___8B7172FD90B7CDB67AF06E0C3918BAD0 internalRep;};
struct Tk_Item {int id;struct Tk_Item *nextPtr;Tk_Uid staticTagSpace[3];Tk_Uid *tagPtr;int tagSpace;int numTags;struct Tk_Item__Tk_ItemType *typePtr;int x1;int y1;int x2;int y2;struct Tk_Item *prevPtr;int reserved1;char *reserved2;int reserved3;};
typedef __uint32_t __ULong;
union __dmath {__uint32_t i[2];double d;};
typedef enum bfd_boolean boolean;
struct utimbuf {time_t actime;time_t modtime;};
typedef XID Cursor;
typedef XID KeySym;
typedef XID Pixmap;
typedef XID Window;
struct carsym {char *name;file_ptr file_offset;};
struct dirent {__int32 __d_reserved[4];ino_t d_ino;char d_name[256];};
typedef _fpos_t fpos_t;
typedef voidp gzFile;
struct rusage {struct timeval ru_utime;struct timeval ru_stime;__int32 ru_maxrss;__int32 ru_ixrss;__int32 ru_idrss;__int32 ru_isrss;__int32 ru_minflt;__int32 ru_majflt;__int32 ru_nswap;__int32 ru_inblock;__int32 ru_oublock;__int32 ru_msgsnd;__int32 ru_msgrcv;__int32 ru_nsignals;__int32 ru_nvcsw;__int32 ru_nivcsw;};
typedef uLong uLongf;
typedef Byte Bytef;
struct group {char *gr_name;char *gr_passwd;gid_t gr_gid;char **gr_mem;};
struct iovec {caddr_t iov_base;int iov_len;};
struct timeb {time_t time;unsigned __int16 millitm;__int16 timezone;__int16 dstflag;};
typedef uInt uIntf;
typedef XID Font;
struct orl {char **name;file_ptr pos;int namidx;};
struct tms {clock_t tms_utime;clock_t tms_stime;clock_t tms_cutime;clock_t tms_cstime;};
typedef XGCValues *GC;
struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___7997A79FD4A56ECEC67DDB1075675E5D {bfd_vma value;asection *section;};
union external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27___06B88675A9EB456EB90E8C8C92C74374 {struct external_auxent______06B88675A9EB456EB90E8C8C92C74374___6BE5658F3AC53BBF171B21370DF4F2C8 x_fcn;struct external_auxent______06B88675A9EB456EB90E8C8C92C74374___AE9B05ABEC1048BE339BB828F6FDD6C6 x_ary;};
union _XIMStatusDrawCallbackStruct___D9A2F521BD917AA4B9408853DE8DEFA7 {XIMText *text;Pixmap bitmap;};
struct external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27 {unsigned __int32 x_tagndx;union external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27___87BDFA010CEB01ACC354401785794A14 x_misc;union external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27___06B88675A9EB456EB90E8C8C92C74374 x_fcnary;unsigned __int16 x_tvndx;};
union _reent___86B6AAFCC3A560694C605557E707E6BE {struct _reent___86B6AAFCC3A560694C605557E707E6BE___571F2125BC9AA5087DD4C4D164151B9B _reent;struct _reent___86B6AAFCC3A560694C605557E707E6BE___E1F36E786F227034E18EC0BAF8100EE8 _unused;};
union _010F26E547E20D9A1DC4B355F5175C2E {float value;struct _010F26E547E20D9A1DC4B355F5175C2E___8B42856514A58AA212FD520E5CADCFD0 number;struct _010F26E547E20D9A1DC4B355F5175C2E___F281F6C9DB4DEA750606CBC346D4F197 nan;__int32 p1;};
struct _0F3BCE20E1217B8B60181F2FE2EFC047 {int type;unsigned __int32 serial;int send_event;Display *display;Window parent;Window window;int place;};
struct _10F395C20BEC4113025BB1D0BA3DF492 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;char key_vector[32];};
struct _29A84F0A94EF9B7976BAF082CF524F09 {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;Window parent;int x;int y;int override_redirect;};
struct _2B6C772F9B0F9D5573534694AD1B578D {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;int place;};
struct _2C3C200F8615C3857493506364E8C173 {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;int x;int y;};
struct _3AD4CBF69EE89480875180DC2A9357C1 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;int mode;int detail;};
struct _3FCF69940D5137EFCDD98B7A8215A7C6 {unsigned __int32 __d_cookie;struct dirent *__d_dirent;char *__d_dirname;off_t __d_position;unsigned __int32 __d_dirhash;union _3FCF69940D5137EFCDD98B7A8215A7C6___2CCDFC74E09ADC8AD418FD2D589F010C __d_u;};
struct _44C0AE5AD18E7CD0D8F56B2EE020CE64 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;int x;int y;int width;int height;int count;};
struct _4811DE8B61D0522D3363266E4D46EA9A {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;};
struct _4D69B6347F056FE268056727CEA155AA {wchar_t *chars;int nchars;int delta;XFontSet font_set;};
struct _648D5B97A5A1D2D2729A4C51B6643734 {XChar2b *chars;int nchars;int delta;Font font;};
struct _6EA1208F05D799B306741A1D21B7D8A7 {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;int from_configure;};
struct _705D0BEDE90FA70168249FE65D21D1D3 {int type;unsigned __int32 serial;int send_event;Display *display;Window parent;Window window;int x;int y;int width;int height;int border_width;Window above;int detail;unsigned __int32 value_mask;};
struct _7FAD4DA9375019A5494A191BEF0405E8 {int type;unsigned __int32 serial;int send_event;Display *display;Window parent;Window window;};
struct _85ADD90E39F3CB0C7E30B8F1E31A0398 {int type;unsigned __int32 serial;int send_event;Display *display;Window parent;Window window;int x;int y;int width;int height;int border_width;int override_redirect;};
struct _94ACE20E5FEED38F4BC574FBC8AC4DA0 {int type;Display *display;XID resourceid;unsigned __int32 serial;unsigned __int8 error_code;unsigned __int8 request_code;unsigned __int8 minor_code;};
struct _AC3C30478DB292C58361350945D68834 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;int request;int first_keycode;int count;};
struct _B00CD904CB46A0C43826F3F9731A78AD {int type;unsigned __int32 serial;int send_event;Display *display;Drawable drawable;int major_code;int minor_code;};
struct _B55126CE33CB6542D7325DF23CE7DCCD {int type;unsigned __int32 serial;int send_event;Display *display;Drawable drawable;int x;int y;int width;int height;int count;int major_code;int minor_code;};
struct _B6E7D1C43482AAA4EB74B93FC1D2BC12 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;};
struct _C459D5BB7F5319395AB9822D9CBB3596 {int function;unsigned __int32 plane_mask;unsigned __int32 foreground;unsigned __int32 background;int line_width;int line_style;int cap_style;int join_style;int fill_style;int fill_rule;int arc_mode;Pixmap tile;Pixmap stipple;int ts_x_origin;int ts_y_origin;Font font;int subwindow_mode;int graphics_exposures;int clip_x_origin;int clip_y_origin;Pixmap clip_mask;int dash_offset;char dashes;};
struct _C64C6FF65947C35F73E5DDA7D3ADCCD3 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;int state;};
struct _C8CD1AC7BB16F52EEB6B35007FE94FA3 {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;int override_redirect;};
struct _CD460451436B92EA879ADEB542921FD3 {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window window;int x;int y;int width;int height;int border_width;Window above;int override_redirect;};
struct _E1655291D14CE59495117F42FECB583D {XPointer client_data;XIMProc callback;};
struct _ECAD306E641EDB2496D7F2C26F74F3C2 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;int width;int height;};
struct _FD02BCD3D36054250A4B3393D3E26B85 {XExtData *ext_data;VisualID visualid;int class;unsigned __int32 red_mask;unsigned __int32 green_mask;unsigned __int32 blue_mask;int bits_per_rgb;int map_entries;};
struct _XIMPreeditCaretCallbackStruct {int position;XIMCaretDirection direction;XIMCaretStyle style;};
struct _XIMStatusDrawCallbackStruct {XIMStatusDataType type;union _XIMStatusDrawCallbackStruct___D9A2F521BD917AA4B9408853DE8DEFA7 data;};
typedef void (*png_progressive_info_ptr)(png_structp, png_infop);
typedef void (*png_progressive_end_ptr)(png_structp, png_infop);
typedef void Tk_GeomLostSlaveProc(ClientData clientData, Tk_Window tkwin);
typedef int Tk_ImageFileReadProc(Tcl_Interp *interp, Tcl_Channel chan, char *fileName, char *formatString, Tk_PhotoHandle imageHandle, int destX, int destY, int width, int height, int srcX, int srcY);
typedef void (*png_write_status_ptr)(png_structp, png_uint_32, int);
struct png_color_16_struct {png_byte index;png_uint_16 red;png_uint_16 green;png_uint_16 blue;png_uint_16 gray;};
typedef void (*png_read_status_ptr)(png_structp, png_uint_32, int);
struct png_row_info_struct {png_uint_32 width;png_uint_32 rowbytes;png_byte color_type;png_byte bit_depth;png_byte channels;png_byte pixel_depth;};
struct png_unknown_chunk_t {png_byte name[5];png_byte *data;png_size_t size;png_byte location;};
typedef void Tk_GeomRequestProc(ClientData clientData, Tk_Window tkwin);
typedef int Tk_ImageCreateProc(Tcl_Interp *interp, char *name, int objc, Tcl_Obj *const *objv, Tk_ImageType *typePtr, Tk_ImageMaster master, ClientData *masterDataPtr);
typedef int Tk_OptionParseProc(ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, char *value, char *widgRec, int offset);
typedef int (*png_user_chunk_ptr)(png_structp, png_unknown_chunkp);
typedef void Tcl_TcpAcceptProc(ClientData callbackData, Tcl_Channel chan, char *address, int port);
struct Tk_CanvasTextInfo {Tk_3DBorder selBorder;int selBorderWidth;XColor *selFgColorPtr;Tk_Item *selItemPtr;int selectFirst;int selectLast;Tk_Item *anchorItemPtr;int selectAnchor;Tk_3DBorder insertBorder;int insertWidth;int insertBorderWidth;Tk_Item *focusItemPtr;int gotFocus;int cursorOn;};
typedef void Tk_ItemDeleteProc(Tk_Canvas canvas, Tk_Item *itemPtr, Display *display);
typedef void Tcl_CmdTraceProc(ClientData clientData, Tcl_Interp *interp, int level, char *command, Tcl_CmdProc *proc, ClientData cmdClientData, int argc, char **argv);
typedef void Tk_ImageFreeProc(ClientData instanceData, Display *display);
typedef ClientData Tk_ImageGetProc(Tk_Window tkwin, ClientData masterData);
struct _Tix_SubCmdInfo {int namelen;char *name;int minargc;int maxargc;Tix_SubCmdProc proc;char *info;Tix_CheckArgvProc checkArgvProc;};
struct png_text_struct {int compression;png_charp key;png_charp text;png_size_t text_length;png_size_t itxt_length;png_charp lang;png_charp lang_key;};
struct png_time_struct {png_uint_16 year;png_byte month;png_byte day;png_byte hour;png_byte minute;png_byte second;};
typedef int Tk_GenericProc(ClientData clientData, XEvent *eventPtr);
struct Tcl_HashEntry {struct Tcl_HashEntry *nextPtr;struct Tcl_HashEntry__Tcl_HashTable *tablePtr;struct Tcl_HashEntry **bucketPtr;ClientData clientData;union Tcl_HashEntry___A1DAA63EE9F2E4530E7529E0A1E4E4E3 key;};
struct Tcl_Namespace {char *name;char *fullName;ClientData clientData;Tcl_NamespaceDeleteProc *deleteProc;struct Tcl_Namespace *parentPtr;};
typedef int (*XErrorHandler)(Display *, XErrorEvent *);
struct bfd_arch_info {int bits_per_word;int bits_per_address;int bits_per_byte;enum bfd_architecture arch;unsigned __int32 mach;const char *arch_name;const char *printable_name;unsigned int section_align_power;boolean the_default;const struct bfd_arch_info *(*compatible)(const struct bfd_arch_info *a, const struct bfd_arch_info *b);boolean (*scan)(const struct bfd_arch_info *, const char *);const struct bfd_arch_info *next;};
typedef void (*png_error_ptr)(png_structp, png_const_charp);
typedef int Tk_ErrorProc(ClientData clientData, XErrorEvent *errEventPtr);
typedef void Tk_EventProc(ClientData clientData, XEvent *eventPtr);
typedef void (*png_free_ptr)(png_structp, png_voidp);
struct Tk_GeomMgr {char *name;Tk_GeomRequestProc *requestProc;Tk_GeomLostSlaveProc *lostSlaveProc;};
typedef voidpf (*alloc_func)(voidpf opaque, uInt items, uInt size);
struct _XIMText {unsigned __int16 length;XIMFeedback *feedback;int encoding_is_wchar;union _XIMText___8281806D2C2C5E9220BA18F83AF5F330 string;};
struct _XImage {int width;int height;int xoffset;int format;char *data;int byte_order;int bitmap_unit;int bitmap_bit_order;int bitmap_pad;int depth;int bytes_per_line;int bits_per_pixel;unsigned __int32 red_mask;unsigned __int32 green_mask;unsigned __int32 blue_mask;XPointer obdata;struct _XImage__funcs f;};
struct __sFILE {unsigned __int8 *_p;int _r;int _w;__int16 _flags;__int16 _file;struct __sbuf _bf;int _lbfsize;void *_cookie;int (*_read)(void *cookie, char *buf, int n);int (*_write)(void *cookie, const char *buf, int n);_fpos_t (*_seek)(void *cookie, _fpos_t offset, int whence);int (*_close)(void *cookie);struct __sbuf _ub;unsigned __int8 *_up;int _ur;unsigned __int8 _ubuf[3];unsigned __int8 _nbuf[1];struct __sbuf _lb;int _blksize;int _offset;struct __sFILE___reent *_data;};
struct utmp {__int16 ut_type;pid_t ut_pid;char ut_line[16];char ut_id[2];time_t ut_time;char ut_user[16];char ut_host[256];__int32 ut_addr;};
union wait {int w_status;struct wait___ED1506FEBB6D298A1E4E3673A65C27F8 __wait_terminated;struct wait___C15E99E37B145616F5C5887501A939DA __wait_stopped;};
struct _0B94EEFCBD76FB7E6E0B7C6C274F8F05 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Colormap colormap;int new;int state;};
struct _2FFD57BA50D73951380BC0AC0294DF96 {Pixmap background_pixmap;unsigned __int32 background_pixel;Pixmap border_pixmap;unsigned __int32 border_pixel;int bit_gravity;int win_gravity;int backing_store;unsigned __int32 backing_planes;unsigned __int32 backing_pixel;int save_under;__int32 event_mask;__int32 do_not_propagate_mask;int override_redirect;Colormap colormap;Cursor cursor;};
union _3F9D9DCE4570D1C9BB401DE985640105 {double value;struct _3F9D9DCE4570D1C9BB401DE985640105___92939BA4B101A8BF20FECD8B93BF4DD4 number;struct _3F9D9DCE4570D1C9BB401DE985640105___F281F6C9DB4DEA750606CBC346D4F197 nan;struct _3F9D9DCE4570D1C9BB401DE985640105___4AF16434377E8C7F9E7C08D192734F21 parts;__int32 aslong[2];};
struct _C04761233C6B6D3917A9FB90584A60A5 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;int mode;int detail;int same_screen;int focus;unsigned int state;};
struct _DAE3AA21F13D443C5590C7BCADAB13AB {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;unsigned int button;int same_screen;};
struct _EF6E92C885F7EBA601BD227CAE25DC00 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;char is_hint;int same_screen;};
struct _F9A51504D7BB963C3403412F22DA7A8A {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;unsigned int keycode;int same_screen;char trans_chars[4];int nchars;};
typedef void (*png_progressive_row_ptr)(png_structp, png_bytep, png_uint_32, int);
typedef void (*png_user_transform_ptr)(png_structp, png_row_infop, png_bytep);
struct bfd_link_order_reloc {bfd_reloc_code_real_type reloc;union bfd_link_order_reloc___B1652E1B2D42B7B6BC287CA32D4604B8 u;bfd_vma addend;};
typedef void Tk_ImageDisplayProc(ClientData instanceData, Display *display, Drawable drawable, int imageX, int imageY, int width, int height, int drawableX, int drawableY);
typedef void Tk_ItemDisplayProc(Tk_Canvas canvas, Tk_Item *itemPtr, Display *display, Drawable dst, int x, int y, int width, int height);
typedef char *Tk_OptionPrintProc(ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr);
struct symbol_cache_entry {struct _bfd *the_bfd;const char *name;symvalue value;flagword flags;struct sec *section;union symbol_cache_entry___B9E77FD0681C1335DBAA9A65240EEB16 udata;};
struct reloc_cache_entry {struct symbol_cache_entry **sym_ptr_ptr;bfd_size_type address;bfd_vma addend;reloc_howto_type *howto;};
struct Tk_CustomOption {Tk_OptionParseProc *parseProc;Tk_OptionPrintProc *printProc;ClientData clientData;};
typedef Tk_RestrictAction Tk_RestrictProc(ClientData clientData, XEvent *eventPtr);
typedef png_voidp (*png_malloc_ptr)(png_structp, png_size_t);
struct __oldtermios {otcflag_t c_iflag;otcflag_t c_oflag;otcflag_t c_cflag;otcflag_t c_lflag;char c_line;cc_t c_cc[18];ospeed_t c_ispeed;ospeed_t c_ospeed;};
typedef void (*png_rw_ptr)(png_structp, png_bytep, png_size_t);
struct termios {tcflag_t c_iflag;tcflag_t c_oflag;tcflag_t c_cflag;tcflag_t c_lflag;char c_line;cc_t c_cc[18];speed_t c_ispeed;speed_t c_ospeed;};
union bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E {struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___1ADB066DD678F2136218A187EC87FF85 undef;struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___7997A79FD4A56ECEC67DDB1075675E5D def;struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___739778AE401042B4A1D81FDF963C2BF8 i;struct bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E___C1BF8984E6DA1F78690EAB93CC81E9DD c;};
union bfd_link_order___2BB010651C45E09C223C5AAB039696D0 {struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___20472B6430190B13548BE45EDDAD6B8B indirect;struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___B57F59D398145097F81AD3202A6602D5 fill;struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___4E37357BA75158182C6C9FE7D3AF1690 data;struct bfd_link_order___2BB010651C45E09C223C5AAB039696D0___16DCDB45A2AC10EAA5748BD0B35BC485 reloc;};
struct _3BCCBA65A7EB0D2F6C33DC1ED4428B78 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Atom atom;Time time;int state;};
struct _47AF4CF9A5C07F5C66C76738371ED04D {int type;unsigned __int32 serial;int send_event;Display *display;Window event;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;Tk_Uid name;int same_screen;};
struct _4D918DF5E629F4C28AE5A435B1E47B7A {int type;unsigned __int32 serial;int send_event;Display *display;Window owner;Window requestor;Atom selection;Atom target;Atom property;Time time;};
struct _5C140DC956AB8D8D3A2E81F1CC511829 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Atom message_type;int format;union _5C140DC956AB8D8D3A2E81F1CC511829___B322D948E3ED25D84ECF3A20AB2BF161 data;};
struct _65CB4B56B993AF892F37749A62A14B51 {int type;unsigned __int32 serial;int send_event;Display *display;Window requestor;Atom selection;Atom target;Atom property;Time time;};
struct _67007EC0A0A5FA25533E9B447B17EF1A {int x;int y;int width;int height;int border_width;int depth;Visual *visual;Window root;int class;int bit_gravity;int win_gravity;int backing_store;unsigned __int32 backing_planes;unsigned __int32 backing_pixel;int save_under;Colormap colormap;int map_installed;int map_state;__int32 all_event_masks;__int32 your_event_mask;__int32 do_not_propagate_mask;int override_redirect;Screen *screen;};
struct _96F7C024A0E76E12CD4B29EEA702F0F5 {int type;unsigned __int32 serial;int send_event;Display *display;Window window;Atom selection;Time time;};
struct _B36C03EE0DB03800CDBEDA1CF8CFFD5F {XExtData *ext_data;Font fid;unsigned int direction;unsigned int min_char_or_byte2;unsigned int max_char_or_byte2;unsigned int min_byte1;unsigned int max_byte1;int all_chars_exist;unsigned int default_char;int n_properties;XFontProp *properties;XCharStruct min_bounds;XCharStruct max_bounds;XCharStruct *per_char;int ascent;int descent;};
union external_auxent {struct external_auxent___0EC2DC1E5BEEE56DE3CA0C3631B57C27 x_sym;union external_auxent___218D1EF8CDD5DC3457D7F4C589050F96 x_file;struct external_auxent___EDC675951F483E94E6FD294E9D48C8CC x_scn;struct external_auxent___592ACE703693045227FB640816C1C126 x_tv;};
struct png_sPLT_struct {png_charp name;png_byte depth;png_sPLT_entryp entries;png_int_32 nentries;};
struct bfd_link_order {struct bfd_link_order *next;enum bfd_link_order_type type;bfd_vma offset;bfd_size_type size;union bfd_link_order___2BB010651C45E09C223C5AAB039696D0 u;};
struct Tcl_CmdInfo {int isNativeObjectProc;Tcl_ObjCmdProc *objProc;ClientData objClientData;Tcl_CmdProc *proc;ClientData clientData;Tcl_CmdDeleteProc *deleteProc;ClientData deleteData;Tcl_Namespace *namespacePtr;};
struct Tcl_ObjType {char *name;Tcl_FreeInternalRepProc *freeIntRepProc;Tcl_DupInternalRepProc *dupIntRepProc;Tcl_UpdateStringProc *updateStringProc;Tcl_SetFromAnyProc *setFromAnyProc;};
struct _reent {int _errno;struct __sFILE *_stdin;struct __sFILE *_stdout;struct __sFILE *_stderr;int _inc;char _emergency[25];int _current_category;const char *_current_locale;int __sdidinit;void (*__cleanup)(struct _reent *);struct _Bigint *_result;int _result_k;struct _Bigint *_p5s;struct _Bigint **_freelist;int _cvtlen;char *_cvtbuf;union _reent___86B6AAFCC3A560694C605557E707E6BE _new;struct _atexit *_atexit;struct _atexit _atexit0;void (**_sig_func)(int);struct _glue __sglue;struct __sFILE __sf[3];};
struct bfd_link_info {const struct bfd_link_info__bfd_link_callbacks *callbacks;boolean relocateable;boolean emitrelocations;boolean task_link;boolean shared;boolean symbolic;boolean static_link;boolean traditional_format;boolean optimize;boolean no_undefined;enum bfd_link_strip strip;enum bfd_link_discard discard;boolean keep_memory;bfd *input_bfds;asection *create_object_symbols_section;struct bfd_link_hash_table *hash;struct bfd_hash_table *keep_hash;boolean notice_all;struct bfd_hash_table *notice_hash;struct bfd_hash_table *wrap_hash;void *base_file;int mpc860c0;const char *init_function;const char *fini_function;};
struct Tk_ImageType {char *name;Tk_ImageCreateProc *createProc;Tk_ImageGetProc *getProc;Tk_ImageDisplayProc *displayProc;Tk_ImageFreeProc *freeProc;Tk_ImageDeleteProc *deleteProc;struct Tk_ImageType *nextPtr;char *reserved;};
struct _C4AEAB15D2203863A55B0BEA2C0AE902 {XExtData *ext_data;struct _C4AEAB15D2203863A55B0BEA2C0AE902___XDisplay *display;Window root;int width;int height;int mwidth;int mheight;int ndepths;Depth *depths;int root_depth;Visual *root_visual;GC default_gc;Colormap cmap;unsigned __int32 white_pixel;unsigned __int32 black_pixel;int max_maps;int min_maps;int backing_store;int save_unders;__int32 root_input_mask;};
union _D8231012D0728EC3472C30FA3109CEFA {Display *display;GC gc;Visual *visual;Screen *screen;ScreenFormat *pixmap_format;XFontStruct *font;};
struct Tk_PhotoImageFormat {char *name;Tk_ImageFileMatchProc *fileMatchProc;Tk_ImageStringMatchProc *stringMatchProc;Tk_ImageFileReadProc *fileReadProc;Tk_ImageStringReadProc *stringReadProc;Tk_ImageFileWriteProc *fileWriteProc;Tk_ImageStringWriteProc *stringWriteProc;struct Tk_PhotoImageFormat *nextPtr;};
struct z_stream_s {Bytef *next_in;uInt avail_in;uLong total_in;Bytef *next_out;uInt avail_out;uLong total_out;char *msg;struct internal_state *state;alloc_func zalloc;free_func zfree;voidpf opaque;int data_type;uLong adler;uLong reserved;};
struct sec {const char *name;int index;struct sec *next;flagword flags;unsigned int gc_mark;bfd_vma vma;bfd_vma lma;bfd_size_type _cooked_size;bfd_size_type _raw_size;bfd_vma output_offset;struct sec *output_section;unsigned int alignment_power;struct sec__reloc_cache_entry *relocation;struct sec__reloc_cache_entry **orelocation;unsigned int reloc_count;file_ptr filepos;file_ptr rel_filepos;file_ptr line_filepos;void *userdata;unsigned __int8 *contents;alent *lineno;unsigned int lineno_count;struct bfd_comdat_info *comdat;file_ptr moving_line_filepos;int target_index;void *used_by_bfd;struct sec__relent_chain *constructor_chain;bfd *owner;struct symbol_cache_entry *symbol;struct symbol_cache_entry **symbol_ptr_ptr;struct sec__bfd_link_order *link_order_head;struct sec__bfd_link_order *link_order_tail;};
struct bfd_link_callbacks {boolean (*add_archive_element)(struct bfd_link_info *, bfd *abfd, const char *name);boolean (*multiple_definition)(struct bfd_link_info *, const char *name, bfd *obfd, asection *osec, bfd_vma oval, bfd *nbfd, asection *nsec, bfd_vma nval);boolean (*multiple_common)(struct bfd_link_info *, const char *name, bfd *obfd, enum bfd_link_hash_type otype, bfd_vma osize, bfd *nbfd, enum bfd_link_hash_type ntype, bfd_vma nsize);boolean (*add_to_set)(struct bfd_link_info *, struct bfd_link_hash_entry *entry, bfd_reloc_code_real_type reloc, bfd *abfd, asection *sec, bfd_vma value);boolean (*constructor)(struct bfd_link_info *, boolean constructor, const char *name, bfd *abfd, asection *sec, bfd_vma value);boolean (*warning)(struct bfd_link_info *, const char *warning, const char *symbol, bfd *abfd, asection *section, bfd_vma address);boolean (*undefined_symbol)(struct bfd_link_info *, const char *name, bfd *abfd, asection *section, bfd_vma address, boolean fatal);boolean (*reloc_overflow)(struct bfd_link_info *, const char *name, const char *reloc_name, bfd_vma addend, bfd *abfd, asection *section, bfd_vma address);boolean (*reloc_dangerous)(struct bfd_link_info *, const char *message, bfd *abfd, asection *section, bfd_vma address);boolean (*unattached_reloc)(struct bfd_link_info *, const char *name, bfd *abfd, asection *section, bfd_vma address);boolean (*notice)(struct bfd_link_info *, const char *name, bfd *abfd, asection *section, bfd_vma address);};
struct reloc_howto_struct {unsigned int type;unsigned int rightshift;int size;unsigned int bitsize;boolean pc_relative;unsigned int bitpos;enum complain_overflow complain_on_overflow;bfd_reloc_status_type (*special_function)(bfd *abfd, arelent *reloc_entry, struct symbol_cache_entry *symbol, void *data, asection *input_section, bfd *output_bfd, char **error_message);char *name;boolean partial_inplace;bfd_vma src_mask;bfd_vma dst_mask;boolean pcrel_offset;};
struct _bfd {const char *filename;const struct _bfd__bfd_target *xvec;void *iostream;boolean cacheable;boolean target_defaulted;struct _bfd *lru_prev;struct _bfd *lru_next;file_ptr where;boolean opened_once;boolean mtime_set;__int32 mtime;int ifd;bfd_format format;enum _bfd__bfd_direction direction;flagword flags;file_ptr origin;boolean output_has_begun;struct sec *sections;unsigned int section_count;bfd_vma start_address;unsigned int symcount;struct symbol_cache_entry **outsymbols;const struct bfd_arch_info *arch_info;void *arelt_data;struct _bfd *my_archive;struct _bfd *next;struct _bfd *archive_head;boolean has_armap;struct _bfd *link_next;int archive_pass;union _bfd___EA0286C9E3DE655F29EF612C11797A09 tdata;void *usrdata;void *memory;};
struct Tk_FakeWin {Display *display;char *dummy1;int screenNum;Visual *visual;int depth;Window window;char *dummy2;char *dummy3;Tk_Window parentPtr;char *dummy4;char *dummy5;char *pathName;Tk_Uid nameUid;Tk_Uid classUid;XWindowChanges changes;unsigned int dummy6;XSetWindowAttributes atts;unsigned __int32 dummy7;unsigned int flags;char *dummy8;ClientData *dummy10;int dummy11;int dummy12;char *dummy13;char *dummy14;ClientData dummy15;int reqWidth;int reqHeight;int internalBorderWidth;char *dummy16;char *dummy17;ClientData dummy18;char *dummy19;};
struct _XDisplay {XExtData *ext_data;struct _XDisplay___XFreeFuncs *free_funcs;int fd;int conn_checker;int proto_major_version;int proto_minor_version;char *vendor;XID resource_base;XID resource_mask;XID resource_id;int resource_shift;XID (*resource_alloc)();int byte_order;int bitmap_unit;int bitmap_pad;int bitmap_bit_order;int nformats;ScreenFormat *pixmap_format;int vnumber;int release;struct _XDisplay___XSQEvent *head;struct _XDisplay___XSQEvent *tail;int qlen;unsigned __int32 request;char *last_req;char *buffer;char *bufptr;char *bufmax;unsigned int max_request_size;struct _XDisplay___XrmHashBucketRec *db;int (*synchandler)();char *display_name;int default_screen;int nscreens;Screen *screens;unsigned __int32 motion_buffer;unsigned __int32 flags;int min_keycode;int max_keycode;KeySym *keysyms;XModifierKeymap *modifiermap;int keysyms_per_keycode;char *xdefaults;char *scratch_buffer;unsigned __int32 scratch_length;int ext_number;struct _XDisplay___XExten *ext_procs;int (**event_vec)();int (**wire_vec)();KeySym lock_meaning;struct _XDisplay___XLockInfo *lock;struct _XDisplay___XInternalAsync *async_handlers;unsigned __int32 bigreq_size;struct _XDisplay___XLockPtrs *lock_fns;struct _XDisplay___XKeytrans *key_bindings;Font cursor_font;struct _XDisplay___XDisplayAtoms *atoms;unsigned int mode_switch;struct _XDisplay___XContextDB *context_db;int (**error_vec)();struct _XDisplay___40E717ABED307E15FC65B9096F5C7074 cms;struct _XDisplay___XIMFilter *im_filters;struct _XDisplay___XSQEvent *qfree;unsigned __int32 next_event_serial_num;int (*savedsynchandler)();};
struct stat {dev_t st_dev;ino_t st_ino;mode_t st_mode;nlink_t st_nlink;uid_t st_uid;gid_t st_gid;dev_t st_rdev;off_t st_size;time_t st_atime;__int32 st_spare1;time_t st_mtime;__int32 st_spare2;time_t st_ctime;__int32 st_spare3;__int32 st_blksize;__int32 st_blocks;__int32 st_spare4[2];};
struct Tcl_ChannelType {char *typeName;Tcl_DriverBlockModeProc *blockModeProc;Tcl_DriverCloseProc *closeProc;Tcl_DriverInputProc *inputProc;Tcl_DriverOutputProc *outputProc;Tcl_DriverSeekProc *seekProc;Tcl_DriverSetOptionProc *setOptionProc;Tcl_DriverGetOptionProc *getOptionProc;Tcl_DriverWatchProc *watchProc;Tcl_DriverGetHandleProc *getHandleProc;void *reserved;};
struct Tk_ItemType {char *name;int itemSize;Tk_ItemCreateProc *createProc;Tk_ConfigSpec *configSpecs;Tk_ItemConfigureProc *configProc;Tk_ItemCoordProc *coordProc;Tk_ItemDeleteProc *deleteProc;Tk_ItemDisplayProc *displayProc;int alwaysRedraw;Tk_ItemPointProc *pointProc;Tk_ItemAreaProc *areaProc;Tk_ItemPostscriptProc *postscriptProc;Tk_ItemScaleProc *scaleProc;Tk_ItemTranslateProc *translateProc;Tk_ItemIndexProc *indexProc;Tk_ItemCursorProc *icursorProc;Tk_ItemSelectionProc *selectionProc;Tk_ItemInsertProc *insertProc;Tk_ItemDCharsProc *dCharsProc;struct Tk_ItemType *nextPtr;char *reserved1;int reserved2;char *reserved3;char *reserved4;};
struct png_info_struct {png_uint_32 width;png_uint_32 height;png_uint_32 valid;png_uint_32 rowbytes;png_colorp palette;png_uint_16 num_palette;png_uint_16 num_trans;png_byte bit_depth;png_byte color_type;png_byte compression_type;png_byte filter_type;png_byte interlace_type;png_byte channels;png_byte pixel_depth;png_byte spare_byte;png_byte signature[8];png_uint_32 free_me;float gamma;png_fixed_point int_gamma;png_byte srgb_intent;int num_text;int max_text;png_textp text;int num_text_old;png_textp text_old;png_time mod_time;png_color_8 sig_bit;png_bytep trans;png_color_16 trans_values;png_color_16 background;png_int_32 x_offset;png_int_32 y_offset;png_byte offset_unit_type;png_uint_32 x_pixels_per_unit;png_uint_32 y_pixels_per_unit;png_byte phys_unit_type;png_uint_16p hist;float x_white;float y_white;float x_red;float y_red;float x_green;float y_green;float x_blue;float y_blue;png_fixed_point int_x_white;png_fixed_point int_y_white;png_fixed_point int_x_red;png_fixed_point int_y_red;png_fixed_point int_x_green;png_fixed_point int_y_green;png_fixed_point int_x_blue;png_fixed_point int_y_blue;png_charp pcal_purpose;png_int_32 pcal_X0;png_int_32 pcal_X1;png_charp pcal_units;png_charpp pcal_params;png_byte pcal_type;png_byte pcal_nparams;png_charp iccp_name;png_charp iccp_profile;png_uint_32 iccp_proflen;png_byte iccp_compression;png_sPLT_tp splt_palettes;png_uint_32 splt_palettes_num;png_byte scal_unit;double scal_pixel_width;double scal_pixel_height;png_charp scal_s_width;png_charp scal_s_height;png_unknown_chunkp unknown_chunks;png_size_t unknown_chunks_num;png_bytepp row_pointers;};
struct bfd_target {char *name;enum bfd_flavour flavour;enum bfd_endian byteorder;enum bfd_endian header_byteorder;flagword object_flags;flagword section_flags;char symbol_leading_char;char ar_pad_char;unsigned __int16 ar_max_namelen;bfd_vma (*bfd_getx64)(const bfd_byte *);bfd_signed_vma (*bfd_getx_signed_64)(const bfd_byte *);void (*bfd_putx64)(bfd_vma, bfd_byte *);bfd_vma (*bfd_getx32)(const bfd_byte *);bfd_signed_vma (*bfd_getx_signed_32)(const bfd_byte *);void (*bfd_putx32)(bfd_vma, bfd_byte *);bfd_vma (*bfd_getx16)(const bfd_byte *);bfd_signed_vma (*bfd_getx_signed_16)(const bfd_byte *);void (*bfd_putx16)(bfd_vma, bfd_byte *);bfd_vma (*bfd_h_getx64)(const bfd_byte *);bfd_signed_vma (*bfd_h_getx_signed_64)(const bfd_byte *);void (*bfd_h_putx64)(bfd_vma, bfd_byte *);bfd_vma (*bfd_h_getx32)(const bfd_byte *);bfd_signed_vma (*bfd_h_getx_signed_32)(const bfd_byte *);void (*bfd_h_putx32)(bfd_vma, bfd_byte *);bfd_vma (*bfd_h_getx16)(const bfd_byte *);bfd_signed_vma (*bfd_h_getx_signed_16)(const bfd_byte *);void (*bfd_h_putx16)(bfd_vma, bfd_byte *);const struct bfd_target *(**_bfd_check_format)(bfd *);boolean (**_bfd_set_format)(bfd *);boolean (**_bfd_write_contents)(bfd *);boolean (*_close_and_cleanup)(bfd *);boolean (*_bfd_free_cached_info)(bfd *);boolean (*_new_section_hook)(bfd *, sec_ptr);boolean (*_bfd_get_section_contents)(bfd *, sec_ptr, void *, file_ptr, bfd_size_type);boolean (*_bfd_get_section_contents_in_window)(bfd *, sec_ptr, bfd_window *, file_ptr, bfd_size_type);boolean (*_bfd_copy_private_bfd_data)(bfd *, bfd *);boolean (*_bfd_merge_private_bfd_data)(bfd *, bfd *);boolean (*_bfd_copy_private_section_data)(bfd *, sec_ptr, bfd *, sec_ptr);boolean (*_bfd_copy_private_symbol_data)(bfd *, asymbol *, bfd *, asymbol *);boolean (*_bfd_set_private_flags)(bfd *, flagword);boolean (*_bfd_print_private_bfd_data)(bfd *, void *);char *(*_core_file_failing_command)(bfd *);int (*_core_file_failing_signal)(bfd *);boolean (*_core_file_matches_executable_p)(bfd *, bfd *);boolean (*_bfd_slurp_armap)(bfd *);boolean (*_bfd_slurp_extended_name_table)(bfd *);boolean (*_bfd_construct_extended_name_table)(bfd *, char **, bfd_size_type *, const char **);void (*_bfd_truncate_arname)(bfd *, const char *, char *);boolean (*write_armap)(bfd *arch, unsigned int elength, struct orl *map, unsigned int orl_count, int stridx);void *(*_bfd_read_ar_hdr_fn)(bfd *);bfd *(*openr_next_archived_file)(bfd *arch, bfd *prev);bfd *(*_bfd_get_elt_at_index)(bfd *, symindex);int (*_bfd_stat_arch_elt)(bfd *, struct stat *);boolean (*_bfd_update_armap_timestamp)(bfd *);__int32 (*_bfd_get_symtab_upper_bound)(bfd *);__int32 (*_bfd_canonicalize_symtab)(bfd *, struct symbol_cache_entry **);struct symbol_cache_entry *(*_bfd_make_empty_symbol)(bfd *);void (*_bfd_print_symbol)(bfd *, void *, struct symbol_cache_entry *, bfd_print_symbol_type);void (*_bfd_get_symbol_info)(bfd *, struct symbol_cache_entry *, symbol_info *);boolean (*_bfd_is_local_label_name)(bfd *, const char *);alent *(*_get_lineno)(bfd *, struct symbol_cache_entry *);boolean (*_bfd_find_nearest_line)(bfd *abfd, struct sec *section, struct symbol_cache_entry **symbols, bfd_vma offset, const char **file, const char **func, unsigned int *line);asymbol *(*_bfd_make_debug_symbol)(bfd *abfd, void *ptr, unsigned __int32 size);__int32 (*_read_minisymbols)(bfd *, boolean, void **, unsigned int *);asymbol *(*_minisymbol_to_symbol)(bfd *, boolean, const void *, asymbol *);__int32 (*_get_reloc_upper_bound)(bfd *, sec_ptr);__int32 (*_bfd_canonicalize_reloc)(bfd *, sec_ptr, arelent **, struct symbol_cache_entry **);reloc_howto_type *(*reloc_type_lookup)(bfd *abfd, bfd_reloc_code_real_type code);boolean (*_bfd_set_arch_mach)(bfd *, enum bfd_architecture, unsigned __int32);boolean (*_bfd_set_section_contents)(bfd *, sec_ptr, void *, file_ptr, bfd_size_type);int (*_bfd_sizeof_headers)(bfd *, boolean);bfd_byte *(*_bfd_get_relocated_section_contents)(bfd *, struct bfd_link_info *, struct bfd_target__bfd_link_order *, bfd_byte *data, boolean relocateable, struct symbol_cache_entry **);boolean (*_bfd_relax_section)(bfd *, struct sec *, struct bfd_link_info *, boolean *again);struct bfd_target__bfd_link_hash_table *(*_bfd_link_hash_table_create)(bfd *);boolean (*_bfd_link_add_symbols)(bfd *, struct bfd_link_info *);boolean (*_bfd_final_link)(bfd *, struct bfd_link_info *);boolean (*_bfd_link_split_section)(bfd *, struct sec *);boolean (*_bfd_gc_sections)(bfd *, struct bfd_link_info *);__int32 (*_bfd_get_dynamic_symtab_upper_bound)(bfd *);__int32 (*_bfd_canonicalize_dynamic_symtab)(bfd *, struct symbol_cache_entry **);__int32 (*_bfd_get_dynamic_reloc_upper_bound)(bfd *);__int32 (*_bfd_canonicalize_dynamic_reloc)(bfd *, arelent **, struct symbol_cache_entry **);const struct bfd_target *alternative_target;void *backend_data;};
union _XEvent {int type;XAnyEvent xany;XKeyEvent xkey;XButtonEvent xbutton;XMotionEvent xmotion;XCrossingEvent xcrossing;XFocusChangeEvent xfocus;XExposeEvent xexpose;XGraphicsExposeEvent xgraphicsexpose;XNoExposeEvent xnoexpose;XVisibilityEvent xvisibility;XCreateWindowEvent xcreatewindow;XDestroyWindowEvent xdestroywindow;XUnmapEvent xunmap;XMapEvent xmap;XMapRequestEvent xmaprequest;XReparentEvent xreparent;XConfigureEvent xconfigure;XGravityEvent xgravity;XResizeRequestEvent xresizerequest;XConfigureRequestEvent xconfigurerequest;XCirculateEvent xcirculate;XCirculateRequestEvent xcirculaterequest;XPropertyEvent xproperty;XSelectionClearEvent xselectionclear;XSelectionRequestEvent xselectionrequest;XSelectionEvent xselection;XColormapEvent xcolormap;XClientMessageEvent xclient;XMappingEvent xmapping;XErrorEvent xerror;XKeymapEvent xkeymap;__int32 pad[24];};
struct _636E06EF14FC653C9FA755BCE21D4A3F {char *chars;int nchars;int delta;Font font;};
struct _BA1C9873524F37DFA28FC6E8B2A0BC7B {int x;int y;int width;int height;int border_width;Window sibling;int stack_mode;};
typedef void (*png_unknown_chunk_ptr)(png_structp);
typedef png_fixed_point **png_fixed_point_pp;
typedef png_fixed_point *png_fixed_point_p;
typedef void (*png_flush_ptr)(png_structp);
typedef png_structp version_1_0_6;
struct _Bigint {struct _Bigint *_next;int _k;int _maxwds;int _sign;int _wds;__ULong _x[1];};
struct bfd_link_hash_entry {struct bfd_hash_entry root;enum bfd_link_hash_type type;struct bfd_link_hash_entry *next;union bfd_link_hash_entry___2DE1D8C7A97069AB9B4082F7F3A8555E u;};
struct png_struct_def {jmp_buf jmpbuf;png_error_ptr error_fn;png_error_ptr warning_fn;png_voidp error_ptr;png_rw_ptr write_data_fn;png_rw_ptr read_data_fn;png_voidp io_ptr;png_user_transform_ptr read_user_transform_fn;png_user_transform_ptr write_user_transform_fn;png_voidp user_transform_ptr;png_byte user_transform_depth;png_byte user_transform_channels;png_voidp user_chunk_ptr;png_user_chunk_ptr read_user_chunk_fn;png_uint_32 mode;png_uint_32 flags;png_uint_32 free_me;png_uint_32 transformations;z_stream zstream;png_bytep zbuf;png_size_t zbuf_size;int zlib_level;int zlib_method;int zlib_window_bits;int zlib_mem_level;int zlib_strategy;png_uint_32 width;png_uint_32 height;png_uint_32 num_rows;png_uint_32 usr_width;png_uint_32 rowbytes;png_uint_32 irowbytes;png_uint_32 iwidth;png_uint_32 row_number;png_bytep prev_row;png_bytep row_buf;png_bytep sub_row;png_bytep up_row;png_bytep avg_row;png_bytep paeth_row;png_row_info row_info;png_uint_32 idat_size;png_uint_32 crc;png_colorp palette;png_uint_16 num_palette;png_uint_16 num_trans;png_byte chunk_name[5];png_byte compression;png_byte filter;png_byte interlaced;png_byte pass;png_byte do_filter;png_byte color_type;png_byte bit_depth;png_byte usr_bit_depth;png_byte pixel_depth;png_byte channels;png_byte usr_channels;png_byte sig_bytes;png_uint_16 filler;png_byte background_gamma_type;float background_gamma;png_color_16 background;png_color_16 background_1;png_flush_ptr output_flush_fn;png_uint_32 flush_dist;png_uint_32 flush_rows;int gamma_shift;float gamma;float screen_gamma;png_fixed_point int_gamma;png_bytep gamma_table;png_bytep gamma_from_1;png_bytep gamma_to_1;png_uint_16pp gamma_16_table;png_uint_16pp gamma_16_from_1;png_uint_16pp gamma_16_to_1;png_color_8 sig_bit;png_color_8 shift;png_bytep trans;png_color_16 trans_values;png_read_status_ptr read_row_fn;png_write_status_ptr write_row_fn;png_progressive_info_ptr info_fn;png_progressive_row_ptr row_fn;png_progressive_end_ptr end_fn;png_bytep save_buffer_ptr;png_bytep save_buffer;png_bytep current_buffer_ptr;png_bytep current_buffer;png_uint_32 push_length;png_uint_32 skip_length;png_size_t save_buffer_size;png_size_t save_buffer_max;png_size_t buffer_size;png_size_t current_buffer_size;int process_mode;int cur_palette;png_size_t current_text_size;png_size_t current_text_left;png_charp current_text;png_charp current_text_ptr;png_bytep palette_lookup;png_bytep dither_index;png_uint_16p hist;png_byte heuristic_method;png_byte num_prev_filters;png_bytep prev_filters;png_uint_16p filter_weights;png_uint_16p inv_filter_weights;png_uint_16p filter_costs;png_uint_16p inv_filter_costs;png_charp time_buffer;png_byte rgb_to_gray_status;png_uint_16 rgb_to_gray_red_coeff;png_uint_16 rgb_to_gray_green_coeff;png_uint_16 rgb_to_gray_blue_coeff;png_byte empty_plte_permitted;int num_chunk_list;png_bytep chunk_list;};



#endif
